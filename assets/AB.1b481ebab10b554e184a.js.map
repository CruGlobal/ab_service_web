{"version":3,"file":"AB.1b481ebab10b554e184a.js","mappings":"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AAY,GC9Cf,GAEGhC,iBAAkB,GAGlBC,iBAAkB,IAClBC,kBAAmB,IACnBC,iBAAkB,IAClBC,sBAAuB,GAGvBC,cAAe,IACfC,eAAgB,IAChBC,cAAe,IACfC,mBAAoB,GAGpBE,iBAAkB,IAClBC,kBAAmB,IACnBC,iBAAkB,IAClBC,sBAAuB,IAGvBC,aAAc,EACdC,YAAa,EACbC,aAAc,GACdC,YAAa,GACbC,aAAc,GACdC,cAAe,IACfC,eAAgB,IAChBC,uBAAwB,GACxBC,yBAA0B,EAC1BC,yBAA0B,EAC1BC,wBAAyB,EAGzBC,gBAAiB,GACjBC,iBAAkB,GAClBC,gBAAiB,IACjBC,iBAAkB,IAClBC,kBAAmB,IACnBE,mBAAoB,EAGpBC,YAAY,GCzCf,GACGrC,OAAQ,WAEL,OAAIlD,OAAOwF,WAAa,IACd,EAEH,CACV,EACAC,MCjBO,CACJ,QACA,eACA,iBACA,eACA,iBACA,SACA,MACA,eACA,gBACA,aACA,cACA,SACA,YACA,sCACA,SACA,UACA,YACA,oBACA,oBACA,qBACA,kBACA,aACA,aACA,cACA,WACA,QACA,UACA,aACA,oBACA,oBACA,sBACA,sBACA,uBACA,oBACA,qBACA,kBACA,aACA,aACA,cACA,WACA,SACA,aACA,WACA,WACA,mBACA,8BACA,WACA,KACA,oBACA,aACA,WACA,gBACA,MACA,WACA,OACA,YACA,cACA,UACA,OACA,OACA,UACA,UACA,YACA,YACA,YACA,YACA,YACA,gBACA,eACA,eACA,kBACA,yBACA,MACA,OACA,UACA,iBACA,OACA,SACA,aACA,eACA,UACA,aACA,gBACA,YACA,mBACA,UACA,YACA,QACA,YACA,cACA,OACA,OACA,OACA,OACA,WACA,aACA,UACA,YACA,MACA,MACA,WACA,aACA,WACA,WACA,MACA,aACA,MACA,aACA,WACA,mBACA,mBACA,aACA,kBACA,mBACA,SACA,eACA,MACA,aACA,aACA,cACA,sBACA,sBACA,uBACA,oBACA,WACA,kBACA,YACA,KACA,UACA,iBACA,cACA,SACA,gBACA,YACA,YACA,UACA,cACA,QACA,eACA,QACA,eACA,iBACA,eACA,iBACA,sBACA,sBACA,uBACA,oBACA,eACA,eACA,gBACA,aACA,QACA,SACA,SACA,WACA,iBACA,cACA,YACA,UACA,QACA,QACA,QACA,iBACA,eACA,MACA,OACA,YACA,UACA,WACA,SACA,MACA,OACA,UACA,UACA,YACA,aACA,eACA,WACA,aACA,UACA,WACA,iBACA,SACA,OACA,YACA,mBACA,cACA,kBACA,OACA,aACA,OACA,OACA,QACA,MACA,UACA,YACA,WACA,WACA,OACA,WACA,SACA,YACA,UACA,aACA,UACA,OACA,SACA,eACA,WACA,WACA,kBACA,oBACA,UACA,SACA,OACA,OACA,UACA,QACA,aACA,aACA,SACA,WACA,aACA,gBACA,kBACA,kBACA,SACA,SACA,OACA,MACA,OACA,WACA,cACA,qBACA,uBACA,SACA,eACA,gBACA,uBACA,MACA,YACA,aACA,KACA,WACA,aACA,oBACA,kBACA,gBACA,eACA,MACA,OACA,SACA,cACA,OACA,iBACA,eACA,cACA,eACA,eACA,eACA,SACA,aACA,eACA,iBACA,oBACA,eACA,YACA,cACA,eACA,cACA,aACA,UACA,OACA,SACA,OACA,oBACA,UACA,cACA,OACA,iBACA,SACA,QACA,QACA,SACA,WACA,SACA,WACA,cACA,gBACA,OACA,eACA,YACA,eACA,WACA,UACA,aACA,iBACA,UACA,WACA,UACA,QACA,MACA,KACA,OACA,QACA,aACA,aACA,KACA,YACA,OACA,MACA,aACA,SACA,aACA,gBACA,SACA,SACA,QACA,QACA,UACA,QACA,SACA,cACA,qBACA,uBACA,qBACA,gBACA,iBACA,WACA,OACA,QACA,WACA,cACA,cACA,gBACA,cACA,cACA,eACA,YACA,eACA,eACA,iBACA,cACA,kBACA,eACA,cACA,cACA,kBACA,UACA,QACA,SACA,aACA,QACA,UACA,YACA,UACA,OACA,aACA,QACA,YACA,cACA,cACA,cACA,gBACA,iBACA,cACA,kBACA,QACA,QACA,WACA,WACA,UACA,YACA,MACA,QACA,OACA,QACA,SACA,WACA,OACA,cACA,MACA,YACA,cACA,oBACA,WACA,UACA,SACA,SACA,MACA,WACA,MACA,aACA,MACA,WACA,SACA,SACA,gBACA,OACA,UACA,QACA,UACA,aACA,WACA,YACA,YACA,YACA,aACA,cACA,aACA,OACA,WACA,kBACA,SACA,QACA,OACA,WACA,UACA,UACA,iBACA,OACA,kBACA,kBACA,mBACA,gBACA,aACA,QACA,SACA,eACA,aACA,iBACA,OACA,MACA,aACA,QACA,UACA,YACA,OACA,cACA,cACA,gBACA,gBACA,SACA,WACA,SACA,SACA,SACA,QACA,UACA,YACA,aACA,mBACA,QACA,eACA,eACA,iBACA,WACA,SACA,eACA,OACA,QACA,SACA,eACA,aACA,gBACA,QACA,UACA,SACA,cACA,eACA,iBACA,gBACA,uBACA,WACA,SACA,QACA,gBACA,UACA,YACA,cACA,cACA,gBACA,YACA,YACA,QACA,QACA,eACA,iBACA,MACA,SACA,SACA,gBACA,kBACA,UACA,QACA,eACA,QACA,YACA,YACA,aACA,iBACA,gBACA,YACA,cACA,mBACA,QACA,OACA,cACA,gBACA,OACA,OACA,cACA,cACA,gBACA,UACA,YACA,QACA,eACA,eACA,KACA,SACA,WACA,kBACA,oBACA,QACA,aACA,cACA,KACA,SACA,UACA,QACA,UACA,SACA,eACA,gBACA,UACA,aACA,SACA,SACA,UACA,SACA,QACA,YACA,aACA,UACA,MACA,OACA,SACA,cACA,eACA,SACA,MACA,aACA,MACA,QACA,QACA,MACA,SACA,OACA,WACA,SACA,SACA,eACA,cACA,SACA,OACA,SACA,SACA,QACA,YACA,mBACA,eACA,iBACA,SACA,SACA,SACA,OACA,eACA,eACA,kBACA,gBACA,SACA,UACA,gBACA,WACA,SACA,UACA,cACA,UACA,WACA,QACA,QACA,UACA,aACA,UACA,WACA,iBACA,kBACA,cACA,gBACA,OACA,iBACA,kBACA,kBACA,mBACA,WACA,YACA,YACA,mBACA,oBACA,UACA,aACA,gBACA,UACA,QACA,UACA,SACA,WACA,iBACA,iBACA,OACA,YACA,kBACA,iBACA,cACA,SACA,QACA,eACA,gBACA,eACA,cACA,cACA,gBACA,OACA,cACA,gBACA,cACA,gBACA,cACA,qBACA,YACA,SACA,WACA,QACA,cACA,cACA,UACA,QACA,SACA,aACA,MACA,OACA,QACA,OACA,WACA,aACA,gBACA,WACA,cACA,aACA,KACA,WACA,UACA,YACA,cACA,gBACA,gBACA,gBACA,gBACA,gBACA,oBACA,mBACA,mBACA,sBACA,6BACA,aACA,cACA,gBACA,cACA,YACA,SACA,QACA,eACA,iBACA,kBACA,oBACA,OACA,cACA,cACA,aACA,YACA,eACA,YACA,YACA,QACA,cACA,kBACA,QACA,UACA,OACA,SACA,cACA,SACA,QACA,MACA,MACA,SACA,gBACA,eACA,KACA,SACA,UACA,iBACA,WACA,YACA,OACA,mBACA,aACA,SACA,SACA,aACA,WACA,SACA,MACA,MACA,OACA,cACA,gBACA,UACA,SACA,YACA,cACA,aACA,QACA,QACA,UACA,QACA,eACA,aACA,UACA,SACA,gBACA,eACA,QACA,eACA,OACA,KACA,uBACA,cACA,aACA,YACA,UACA,SACA,QACA,SACA,WACA,aACA,iBACA,OACA,cACA,eACA,iBACA,kBACA,kBACA,iBACA,UACA,MACA,YACA,aACA,aACA,UACA,SACA,OACA,cACA,eACA,sBACA,QACA,KACA,YACA,OACA,MACA,QACA,UACA,eACA,kCCxuBN,MAAMC,EACH,WAAApU,CAAYS,GACTP,KAAKO,GAAKA,EACVP,KAAKmU,OAAS,EACjB,CAEA,QAAAC,CAASxI,EAAMlI,GACZ1D,KAAKmU,OAAO/M,KAAK,CAAEwE,KAAMA,EAAMlI,QAASA,GAC3C,CAEA,IAAA2Q,GACG,OAA6B,GAAtBrU,KAAKmU,OAAOvS,MACtB,CAEA,IAAA0S,GACG,OAAOtU,KAAKmU,OAAOvS,OAAS,CAC/B,CAEA,kBAAA2S,GACG,IAAI7I,EAAM,CACPpK,MAAO,eACPkT,kBAAmB,CAAC,GAGnBC,EAAO/I,EAAI8I,kBAOf,OALAxU,KAAKmU,OAAOnO,SAAS3G,IAClBoV,EAAKpV,EAAEuM,MAAQ6I,EAAKpV,EAAEuM,OAAS,GAC/B6I,EAAKpV,EAAEuM,MAAMxE,KAAK/H,EAAE,IAGhBqM,CACV,CAEA,UAAAgJ,CAAWC,GACR,IAAIC,EAAO5U,KAAKuU,qBAChBvU,KAAKO,GAAGsU,WAAWC,sBAAsBF,EAAMD,EAClD,CAEA,UAAAI,CAAWC,EAAOC,GACf,IAAIL,EAAO5U,KAAKuU,qBAChBvU,KAAKO,GAAGsU,WAAWK,sBAAsBN,EAAMI,EAAOC,EACzD,EAOH,MAAME,UAAkB,KACrB,WAAArV,CAAYsV,GACTrV,MAAMqV,GAGNpV,KAAKS,OAASA,EAAA,EAKdT,KAAKoF,QAAU,EACfpF,KAAKqV,OAASA,EACdrV,KAAKuD,aAAe,EACpBvD,KAAKgB,QAAU,EACfhB,KAAK+P,QAAU,EACf/P,KAAKuC,OAAS,EACdvC,KAAKiR,MAAQ7N,MAGbpD,KAAKsV,QAAUA,EAAA,EAGftV,KAAKuV,MAAMC,cAAgB,IAC3BxV,KAAKuV,MAAME,cAAgB,IAC3BzV,KAAKuV,MAAMG,UAAY,IACvB1V,KAAKuV,MAAMI,gBAAkBA,EAAAC,EAG7B5V,KAAKuK,UAAY,CACdC,IAAK,OACL2F,SAAU,QAEbnQ,KAAKoO,KAAO,MACT,WAAAtO,GAAe,CAEf,OAAAgQ,GACG,OAAOtO,QAAQ9B,SAClB,CACA,OAAAwQ,GACG,OAAO1O,QAAQ9B,SAClB,GAGHM,KAAK4M,YAAcA,EAAA,EAEnB5M,KAAK6V,WAAa,EAElB7V,KAAK6U,WAAa,CACfiB,UAAW,IACD,IAAI5B,EAAYlU,MAG1B+V,kBAAmB,SAAUzU,GA8B1B,OA7BIA,IAMEA,EAAMA,OACS,aAAfA,EAAMA,OACNA,EAAM0U,KACN1U,EAAM0U,IAAIpU,OAAS,IAEnBN,EAAQA,EAAM0U,IAAI,IAIjB1U,EAAMH,MACPG,EAAQA,EAAMH,KAKdG,EAAMF,MACNE,EAAMF,KAAKE,OACS,gBAApBA,EAAMF,KAAKE,QAEXA,EAAQA,EAAMF,OAIbE,CACV,EA+BAwT,sBAAuB,SAAUxT,EAAOqT,GACrC,IAAIsB,GAAa,EAIjB,GAAI3U,KAIDA,EAAQtB,KAAK+V,kBAAkBzU,IAKrBA,OAAwB,gBAAfA,EAAMA,OACrBA,EAAM/B,MAAsB,gBAAd+B,EAAM/B,MACtB,CACC,IAAI2W,EAAQ5U,EAAMkT,kBAClB,GAAI0B,EAAO,CACR,IAAIC,GAAU,EACd,IAAK,IAAI1B,KAAQyB,EAEd,GAAIvB,EAAKyB,SAAS3B,GAAO,CACtB,IAAIN,EAAS+B,EAAMzB,GACf4B,EAAM,GACVlC,EAAOnO,SAAQ,SAAU7E,GACtBkV,EAAIjP,KAAKjG,EAAIuC,QAChB,IAGAiR,EAAK2B,YAAY7B,EAAM4B,EAAIjN,KAAK,OAG3B6M,IACFtB,EAAKyB,SAAS3B,GAAM8B,QACpBN,GAAa,GAGhBE,GAAU,CACb,CAGH,GAAIA,EACD,OAAO,CAEb,CACH,CAKH,OAAO,CACV,EAgCAjB,sBAAuB,SAAU5T,EAAOkV,EAAKC,GAE1C,GAAInV,KAIDA,EAAQtB,KAAK+V,kBAAkBzU,IAKrBA,OAAwB,gBAAfA,EAAMA,OACrBA,EAAM/B,MAAsB,gBAAd+B,EAAM/B,MACtB,CACC,IAAI2W,EAAQ5U,EAAMkT,kBAClB,GAAI0B,EAAO,CACR,IAAIQ,GAAU,EACd,IAAK,IAAIjC,KAAQyB,EAAO,CACrBO,EAAKE,WAAWH,EAAK/B,EAAM,iBAC3BgC,EAAKE,WAAWH,EAAK/B,EAAM,sBAE3B,IAAI4B,EAAM,GACVH,EAAMzB,GAAMzO,SAAS3G,IAClBgX,EAAIjP,KAAK/H,EAAEqE,QAAQ,IAGtBN,MAAMC,MAAM,CACTI,KAAMgR,EAAO,KAAO4B,EAAIjN,KAAK,QAGhCsN,GAAU,CACb,CAKA,GAHAD,EAAKG,QAAQJ,GACbC,EAAKI,iBAEDH,EACD,OAAO,CAEb,CACH,CAKH,OAAO,CACV,GAMH1W,KAAK8W,YAAc,CAAC,EAKpB9W,KAAKiB,GAAG,SAAUE,IAEfE,QAAQC,MAAMH,EAAI,IAGrBnB,KAAK+W,SAAW,GAGhB/W,KAAKgX,wBAA0B,CAAC,EAMhChX,KAAKgB,QAAQC,GAAG,qBAAqB,CAACC,EAASC,EAAK8V,KACjD,IAAIC,EAAUlX,KAAKgX,wBAAwB9V,EAAQS,MACnD,GAAIR,EAGD,YADA+V,GAASpN,OAAO3I,GAMnB,IAAIgW,EAAM,CACPlY,GAAIgY,EAAQhY,GACZmC,KAAM6V,GAETjX,KAAKuB,KAAK,yBAA0B4V,GAEpC,IAAIC,EAASpX,KAAKqX,cAAcJ,GAChCC,GAASxX,QAAQ0X,EAAO,IAG3BpX,KAAKgB,QAAQC,GAAG,qBAAqB,CAACC,EAASC,EAAKmW,KACjD,IAAIJ,EAAUlX,KAAKgX,wBAAwB9V,EAAQS,MACnD,GAAIR,EACD,OAAIA,EAAIoG,WAAWC,QAAQ,cAAgB,EACjCxH,KAAKuX,iBAAiBrW,EAAQqE,QACjC8B,KAAK6P,GAASxX,SACd4H,MAAM4P,GAASpN,aAItBoN,GAASpN,OAAO3I,GAInBnB,KAAKwX,aAAatW,EAAQjC,IAAMqY,EAIhC,IAAIH,EAAM,CACPlY,GAAIqY,EAAUrY,GACdmC,KAAMkW,GAETtX,KAAKuB,KAAK,yBAA0B4V,GAEpCD,GAASxX,QAAQ4X,EAAU,IAG9BtX,KAAKgB,QAAQC,GAAG,qBAAqB,CAACC,EAASC,EAAKmW,KACjD,IAAIJ,EAAUlX,KAAKgX,wBAAwB9V,EAAQS,MACnD,GAAIR,EAGD+V,GAASpN,OAAO3I,OAHnB,QAOOnB,KAAKwX,aAAatW,EAAQjC,IAIjC,IAAIkY,EAAM,CACPlY,GAAIiC,EAAQjC,GACZmC,KAAMkW,GAETtX,KAAKuB,KAAK,yBAA0B4V,GAEpCD,GAASxX,SAZT,CAYkB,IAMrB,MAAM+X,EAAgB,CAWnBC,OAAQ,CAACC,EAAW,GAAIpP,EAAU,CAAC,KAChC,IAAKoP,EAAU,OAEXpP,EAAQqP,aAAYD,EAAWA,EAAS/R,QAAQ,MAAO,KAE3D,IAAI1B,EAASqE,EAAQsP,OAChB,IAAOF,EAAUpP,EAAQsP,QACzB,IAAOF,GAgBZ,MAdqB,CAClB,aACA,aACA,aACA,aACA,aACA,cAGY3R,SAAS6R,IAChB3T,GAAWA,EAAO4T,YACpB5T,EAAS,IAAOyT,EAAUE,GAAO,IAGhC,IAAIE,KAAK7T,EAAO,EAc1B8T,aAAc,CAACC,EAAM1P,KAClB,IAAK0P,EAAM,MAAO,GAElB,IAAIC,EAAY,IAAOD,GAIvB,OAFI1P,EAAQ4P,YAAYD,EAAUE,OAAO7P,EAAQ4P,YAE1CD,EAAUL,OAAOtP,EAAQsP,OAAO,EAY1CQ,aAAc,CAACJ,EAAMK,EAAQC,IACnB,IAAON,GAAMO,SAASF,EAAQC,GAAMb,SAY9Ce,QAAS,CAACR,EAAMK,EAAQC,IACd,IAAON,GAAMS,IAAIJ,EAAQC,GAAMb,SAYzCiB,mBAAoB,KACjB,IAAIC,EAAM,IAAIb,KACVc,EAAOD,EAAIE,cACXC,EAAQH,EAAII,WACZf,EAAOW,EAAIK,UACXC,EAAa,IAAInB,KAAKc,EAAME,EAAOd,EAAM,EAAG,EAAG,GAC/CkB,EAAW,IAAIpB,KAAKc,EAAME,EAAOd,EAAM,GAAI,GAAI,IAG/CmB,EAAgB,IAAIrB,KACrBmB,EAAWG,UAA6C,IAAjCH,EAAWI,qBAEjCC,EAAc,IAAIxB,KACnBoB,EAASE,UAA2C,IAA/BF,EAASG,qBAI7BE,EAAcvB,IACf,IAAIwB,EAAYxB,EAAKyB,cACrB,MAAO,GAAGD,EAAU3T,MAAM,EAAG,OAAO2T,EAAU3T,MAAM,GAAI,KAAK,EAEhE,OAAO0T,EAAWJ,GAAeO,OAC9B,IACAH,EAAWD,GACb,IAGN9Z,OAAOD,KAAKiY,IAAkB,IAAIzR,SAASiB,IACzCjH,KAAK4Z,MAAM3S,GAAKwQ,EAAcxQ,EAAE,GAEtC,CAQA,UAAM3G,GAIH,IAAIuZ,EAAW,GAEfA,EAASzS,KAAKpH,KAAKoF,QAAQ9E,KAAKN,OAChC6Z,EAASzS,KAAKpH,KAAKuD,aAAajD,KAAKN,OACrC6Z,EAASzS,KAAKpH,KAAKgB,QAAQV,KAAKN,OAChC6Z,EAASzS,KAAKpH,KAAKuC,OAAOjC,KAAKN,aAEzBwB,QAAQsY,IAAID,SACZ7Z,KAAK+P,QAAQzP,KAAKN,MACxB,IAAIoB,QAAapB,KAAK+P,QAAQnH,IAAI,kBAqDlC,OApDA5I,KAAK+Z,eAAiB3Y,GAAQ,CAAC,EAO/BpB,KAAKiB,GAAG,0BAA2BkW,IAIhC,GAA4B,iBAAjBA,EAAI/V,KAAK4Y,KACjB,IACG7C,EAAI/V,KAAK4Y,KAAOrT,KAAKiE,MAAMuM,EAAI/V,KAAK4Y,KACvC,CAAE,MAAO3a,GACNgC,QAAQmJ,IAAInL,EACf,CAEHW,KAAKwX,aAAaL,EAAIlY,IAAMkY,EAAI/V,KAChCpB,KAAKia,eAAe,UAAW9C,EAAIlY,GAAIkY,EAAI/V,KAAK,IAInDpB,KAAKiB,GAAG,0BAA2BkW,IAGhC,GAA4B,iBAAjBA,EAAI/V,KAAK4Y,KACjB,IACG7C,EAAI/V,KAAK4Y,KAAOrT,KAAKiE,MAAMuM,EAAI/V,KAAK4Y,KACvC,CAAE,MAAO3a,GACNgC,QAAQmJ,IAAInL,EACf,CAEHW,KAAKwX,aAAaL,EAAIlY,IAAMkY,EAAI/V,KAChCpB,KAAKia,eAAe,UAAW9C,EAAIlY,GAAIkY,EAAI/V,KAAK,IAInDpB,KAAKiB,GAAG,0BAA2BkW,IAGhC,GAA4B,iBAAjBA,EAAI/V,KAAK4Y,KACjB,IACG7C,EAAI/V,KAAK4Y,KAAOrT,KAAKiE,MAAMuM,EAAI/V,KAAK4Y,KACvC,CAAE,MAAO3a,GACNgC,QAAQmJ,IAAInL,EACf,QAEIW,KAAKwX,aAAaL,EAAIlY,IAC7Be,KAAKia,eAAe,YAAa9C,EAAIlY,GAAIkY,EAAI/V,KAAK,IAG9CrB,MAAMO,MAiEhB,CAUA,sBAAMiX,CAAiB2C,GAOpB,YALqB,IAAVA,EAAIjb,KACZib,EAAIjb,GAAKe,KAAK2B,OACduY,EAAIF,KAAK/a,GAAKib,EAAIjb,IAGd,IAAIuC,SAAQ,CAAC9B,EAASoK,KAC1B,IAAInI,EAAO3B,KAAK2B,OAChB3B,KAAKgX,wBAAwBrV,GAAQ,CAAEjC,UAASoK,UAChD,IAAIhB,EAAc,CACfrG,IAAK,oBACLvB,QAAS,CACNS,SAGN3B,KAAKgB,QAAQoB,KACV,CACGC,IAAK,qBACLjB,KAAM8Y,GAETpR,GACDxB,OAAOnG,IACN,IAAIuC,EAAU,yCACE,YAAZvC,EAAI5B,OACLmE,EAAU,sDAEb1D,KAAK2J,OAAOC,UAAUzI,EAAK,CACxBD,QAAS,+BACTwC,UACAwW,OACD,GAKH,GAER,CASA,uBAAMC,CAAkBlb,GACrB,OAAO,IAAIuC,SAAQ,CAAC9B,EAASoK,KAC1B,IAAInI,EAAO3B,KAAK2B,OAChB3B,KAAKgX,wBAAwBrV,GAAQ,CAAEjC,UAASoK,UAChD,IAAIhB,EAAc,CACfrG,IAAK,oBACLvB,QAAS,CACNjC,KACA0C,SAGN3B,KAAKgB,QAAQ0N,OACV,CACGrM,IAAK,eAAepD,KAEvB6J,GACDxB,OAAOnG,IACN,IAAIuC,EAAU,0CACE,YAAZvC,EAAI5B,OACLmE,EAAU,sDAEb1D,KAAK2J,OAAOC,UAAUzI,EAAK,CACxBD,QAAS,gCACTwC,UACAzE,MACD,GAKH,GAER,CAYA,sBAAMmb,CAAiBnb,EAAIsG,GACxB,OAAO,IAAI/D,SAAQ,CAAC9B,EAASoK,KAC1B,IAAInI,EAAO3B,KAAK2B,OAChB3B,KAAKgX,wBAAwBrV,GAAQ,CAAEjC,UAASoK,UAChD,IAAIhB,EAAc,CACfrG,IAAK,oBACLvB,QAAS,CACNjC,KACA0C,OACA4D,WAGNvF,KAAKgB,QAAQsI,IACV,CACGjH,IAAK,eAAepD,IACpBmC,KAAMmE,GAETuD,GACDxB,OAAOnG,IACN,IAAIuC,EAAU,yCACE,YAAZvC,EAAI5B,OACLmE,EAAU,sDAEb1D,KAAK2J,OAAOC,UAAUzI,EAAK,CACxBD,QAAS,+BACTwC,WACD,GAKH,GAER,CAoCA,MAAAiG,CAAO0Q,EAAQ/Y,EAAOgZ,GACnB1N,EAAA,EAAYjD,OAAO0Q,EAAQ/Y,EAAOgZ,EACrC,CAEA,OAAAC,GACG,OAAOva,KAAK+W,QACf,CACA,UAAAyD,CAAWC,GACRza,KAAK+W,SAAS3P,KAAKqT,EACtB,CAKA,KAAApX,CAAMkF,GACHvI,KAAKiR,MAAM5N,MAAMkF,EACpB,CAEA,SAAAmS,CAAUrJ,GACP,OAAO,cAAYA,EACtB,CAEA,KAAA/P,CAAMoC,KAAYiX,GACf,IAAIC,EAAW,CACZlX,QAAS,aAAa1D,KAAKuC,OAAOtD,SAASyE,EAAQ6D,cAGtDlG,QAAQC,MAAMsZ,EAASlX,SACnBA,aAAmBpE,QACpBsb,EAAStZ,MAAQoC,EAEjBrC,QAAQC,MAAMoC,IAGbiX,EAAK/Y,OAAS,GACf+Y,EAAK3U,SAAStE,IAOX,GANIA,aAAapC,QACdsb,EAAStZ,MAAQI,EAEjBL,QAAQC,MAAMI,IAGD,iBAALA,EACR,IAAK,IAAIuF,KAAKvF,EACXkZ,EAAS3T,GAAKvF,EAAEuF,GAChB5F,QAAQC,MAAM2F,EAAGvF,EAAEuF,GAEzB,IAGNjH,KAAKuB,KAAK,QAASqZ,EACtB,CAEA,KAAA/O,GACG,OAAO,SACV,CAEA,KAAAgP,GACG,MAAO,IAAIhS,IACD7I,KAAKuD,aAAaC,SAASqF,EAExC,CAEA,aAAAiS,CAAcrY,EAAK4O,GAChB,YAAoB,IAATA,EAEDrR,KAAK+Z,eAAetX,IAG3BzC,KAAK+Z,eAAetX,GAAO4O,EACpBrR,KAAK+P,QAAQE,IAAI,iBAAkBjQ,KAAK+Z,gBAErD,CAEA,GAAAvP,CAAI9G,KAAYiX,GACbtZ,QAAQmJ,IAAI9G,GACZiX,EAAK3U,SAAStE,IACXL,QAAQmJ,IAAI9I,EAAE,GAEpB,CAEA,KAAAqZ,CAAM1J,GACH,OAAO,UAAQA,EAClB,CAQA,MAAA2J,CAAOvY,GAKJ,OAJcwY,OACX,4EACA,KAEYC,KAAKzY,EACvB,CAEA,KAAA0Y,IAAStS,GACN,OAAO,aAAWA,EACrB,CAEA,OAAAuS,IAAWvS,GACR,OAAO,eAAaA,EACvB,CAEA,IAAAwS,IAAQxS,GACL,OAAO,YAAUA,EACpB,CAEA,SAAAyS,IAAazS,GACV,OAAO,iBAAeA,EACzB,CAEA,KAAA0S,IAAS1S,GACN,OAAO,aAAWA,EACrB,CAEA,MAAA2S,IAAU3S,GACP,OAAO,cAAYA,EACtB,CAEA,KAAA4S,IAAS5S,GACN,OAAO,aAAWA,EACrB,CAEA,KAAA6S,IAAS7S,GACN,OAAO,aAAWA,EACrB,CAEA,IAAAlH,GACG,OAAO,QACV,CAEA,IAAA+E,CAAKhD,KAAYiX,GACdtZ,QAAQqF,KAAKhD,GACbiX,EAAK3U,SAAStE,IACXL,QAAQqF,KAAKhF,EAAE,GAErB,CAEA,QAAAia,IAAY9S,GACT,OAAO,aAAWA,EACrB,CAEA,gBAAM+S,CAAWvZ,SACR,IAAIb,SAAQ,CAAC9B,EAASoK,KACzB,IAAI0G,EAAK,IAAM9Q,IAEf,MAAMmc,EAAOC,SAASD,KAChBE,EAASD,SAASE,cAAc,UACtCD,EAAOhT,KAAO,kBACdgT,EAAOE,IAAM5Z,EAIb0Z,EAAOG,mBAAqB1L,EAC5BuL,EAAOI,OAAS3L,EAChBuL,EAAOK,QAAU,KACdtS,EACG,IAAIxK,MACD,iDAAiD+C,MAEtD,EAGJwZ,EAAKQ,YAAYN,EAAO,GAE9B,CAEA,mBAAMO,CAAcC,GACjBA,EAAOA,EAAK5Z,QAAQ6Z,GAAMA,UACpBhb,QAAQsY,IAAIyC,EAAKzd,KAAKuD,GAAQrC,KAAK4b,WAAWvZ,KACvD,CAEA,aAAMoa,CAAQpa,SACL,IAAIb,SAAQ,CAAC9B,EAASoK,KACzB,MAAM+R,EAAOC,SAASD,KAChBa,EAAOZ,SAASE,cAAc,QACpCU,EAAKC,IAAM,aACXD,EAAKE,KAAOva,EAEZqa,EAAKP,OAAS,IAAMzc,IACpBgd,EAAKN,QAAU,KACZtS,EAAO,IAAIxK,MAAM,2BAA2B+C,MAAQ,EAGvDwZ,EAAKQ,YAAYK,EAAK,GAE5B,CAEA,gBAAMG,CAAWN,GACdA,EAAOA,EAAK5Z,QAAQ6Z,GAAMA,UACpBhb,QAAQsY,IAAIyC,EAAKzd,KAAKuD,GAAQrC,KAAKyc,QAAQpa,KACpD,CAEA,SAAAya,CAAUC,GACP,OAAO,UAAWA,EAAS,CACxBC,QAAQ,EACRC,gBAAgB,GAEtB,CAEA,SAAAC,CAAUC,GACP,OAAO,YAAaA,EACvB,EAGH,2BC1hCA,MAAM1H,EAAgB,EAAQ,OAC9B,IAAI2H,EAAY,EAAQ,OAkBxBzd,EAAOC,QAAU,cAAgCwd,EAC9C,WAAAtd,CAAYud,EAAY9c,GAjB3B,IAAgB2I,EAkBVnJ,MAAM,CAAC,QAAS,eAAgBQ,GAQhC8c,EAAWrD,KAAOqD,EAAWrD,MAAQ,CAAC,EAGtCha,KAAKf,GAAKoe,EAAWpe,GAGrBe,KAAK+I,KAAOsU,EAAWtU,MAAQ,cAI/B/I,KAAKsd,QAAUD,EAAWC,SAAW,MAIrCtd,KAAKga,KAAOqD,EAAWrD,KACC,iBAAbha,KAAKga,OAAkBha,KAAKga,KAAOrT,KAAKiE,MAAM5K,KAAKga,OAI9Dha,KAAKga,KAAkB,YAAIqD,EAAWrD,MAAMuD,aAAe,CACxDC,cAAe,QACfC,UAAW,CACR,QAAS,CACNC,OAAQ,MACRC,QAAS,QACTC,YAAa,EACbC,cAAe,kBACfC,WAAW,IAAI/F,MAAO2B,iBAKK,iBAAzB1Z,KAAKga,KAAKuD,cAClBvd,KAAKga,KAAKuD,YAAc5W,KAAKiE,MAAM5K,KAAKga,KAAKuD,cAIhDvd,KAAK4L,KAAOyR,EAAWzR,MAAQ5L,KAAKga,KAAKpO,MAAQ,GAMjD5L,KAAK+d,KAAOV,EAAWU,MAAQ,YAO/B/d,KAAKge,oBA3EU,KADL9U,EA4EmBmU,EAAWW,iBAvE/B,KAAR9U,GAAsB,UAARA,GAA2B,MAARA,IAIzB,SAARA,GAA0B,MAARA,GAIfA,GAsEJlJ,KAAKie,WAAaZ,EAAWY,YAAc,GACtCvY,MAAMC,QAAQ3F,KAAKie,cACrBje,KAAKie,WAAa,CAACje,KAAKie,aAE3Bje,KAAKie,WAAaje,KAAKie,WAAWtb,QAAQjB,GAAMA,IAKhD1B,KAAKke,gBAAkBvX,KAAKiE,MAAMyS,EAAWa,kBAAmB,GAShEle,KAAKme,eAAiBd,EAAWc,eACC,iBAAvBne,KAAKme,iBACbne,KAAKme,eAAiBxX,KAAKiE,MAAM5K,KAAKme,iBAKzCne,KAAKoe,qBAAuBzX,KAAKiE,MAC9ByS,EAAWe,uBAAwB,GAEtCpe,KAAKqe,oBAAsBhB,EAAWgB,oBACC,iBAA5Bre,KAAKqe,sBACbre,KAAKqe,oBAAsB1X,KAAKiE,MAAM5K,KAAKqe,sBAE9Cre,KAAKse,kBAAoB3X,KAAKiE,MAC3ByS,EAAWiB,oBAAqB,GAEnCte,KAAKue,iBAAmBlB,EAAWkB,iBACC,iBAAzBve,KAAKue,mBACbve,KAAKue,iBAAmB5X,KAAKiE,MAAM5K,KAAKue,mBAE3Cve,KAAKwe,QAAUnB,EAAWrD,KAAKwE,SAAW,GAO1Cxe,KAAKye,UAAYpB,EAAWrD,KAAKyE,WAAa,GAM9Cze,KAAK0e,SAAWrB,EAAWrD,KAAK0E,UAAY,GAO5C1e,KAAK2e,kBAAoBtB,EAAWrD,KAAK2E,mBAAqB,GAQ9D,IAAIC,EAAW,IACdvB,EAAWrD,KAAK6E,SAAW,IAAI7Y,SAAS/G,IACtC,IAAIib,EAAMla,KAAKO,GAAGue,eAAe7f,GAC7Bib,EACD0E,EAASxX,KAAKpH,KAAK+e,QAAQ7E,IAE3Bla,KAAKuB,KACF,UACA,OAAOvB,KAAKf,uCAAuCA,KACnD,CACG+f,MAAOhf,KAAKf,GACZggB,OAAQhgB,GAMjB,IAEHe,KAAKkf,OAASN,GAObvB,EAAWrD,KAAKmF,YAAc,IAAInZ,SAASoZ,IACjCpf,KAAKO,GAAG8e,YAAYD,IAEzBpf,KAAKuB,KACF,UACA,iDACA,CAAEyd,MAAOhf,KAAKf,GAAIqgB,UAAWF,GAEnC,IAGHpf,KAAKmf,WAAa9B,EAAWrD,KAAKmF,YAAc,GAKhD9B,EAAWrD,KAAKuF,mBACblC,EAAWrD,KAAKuF,oBAAsB,CAAC,EAC1Cvf,KAAKuf,mBAAqBvf,KAAKuf,oBAAsB,CAAC,EACtDvf,KAAKuf,mBAAmBC,OAAS7Y,KAAKiE,MACnCyS,EAAWrD,KAAKuF,mBAAmBC,SAAU,GAEhDxf,KAAKuf,mBAAmBE,WACrBpC,EAAWrD,KAAKuF,mBAAmBE,YAAc,GACpDzf,KAAKuf,mBAAmBG,cACrBrC,EAAWrD,KAAKuF,mBAAmBG,eAAiB,MACvD1f,KAAKuf,mBAAmBI,QAAUhZ,KAAKiE,MACpCyS,EAAWrD,KAAKuF,mBAAmBI,UAAW,GAKjDtC,EAAWuC,aACRvC,EAAWuC,cAAgBvC,EAAWrD,KAAK4F,aAE9C7f,MAAM8f,WAAWxC,EACpB,CAaA,eAAIyC,GACD,OAAOrK,CACV,CAWA,oBAAAsK,CAAqBlf,GAClB,IAAImf,GAAY,EAGhB,OAAKhgB,KAAKke,iBAYN+B,SAASjgB,KAAKme,eAAe+B,WAC7Brf,GAAS,IAAImF,SAAStE,IAChB1B,KAAKme,eAAegC,KAAK3Y,QAAQ9F,EAAEC,MAAQD,IAAM,IAClDse,GAAY,EACf,IAKFA,KAIHhgB,KAAKogB,SAAW,IAAIpa,SAASyU,IAEvBA,EAAEsF,qBAAqBlf,KACxBmf,GAAY,EACf,IAEIA,MA9BHnf,GAAS,IAAImF,SAAStE,IAChB1B,KAAKie,WAAWzW,QAAQ9F,EAAEC,MAAQD,IAAM,IACzCse,GAAY,EACf,IAEIA,EA0Bb,CAEA,YAAIK,GACD,MAAuB,OAAhBrgB,KAAKsd,OACf,CAEA,YAAIgD,GACD,MAAuB,UAAhBtgB,KAAKsd,OACf,CAaA,KAAA1V,GAEG,IAAI2V,EAAcvd,KAAKga,KAAKuD,YA6B5B,OA3BAvd,KAAKga,KAAOja,MAAM6H,QAElB5H,KAAKga,KAAKpO,KAAO5L,KAAK4L,KAEtB5L,KAAKga,KAAKuD,YAAcA,EAExBvd,KAAKga,KAAKyE,UAAYze,KAAKye,UAE3Bze,KAAKga,KAAKuF,mBAAqBvf,KAAKuf,mBAEpCvf,KAAKga,KAAKwE,QAAUxe,KAAKwe,QAEzBxe,KAAKga,KAAK0E,SAAW1e,KAAK0e,SAE1B1e,KAAKga,KAAK2E,kBAAoB3e,KAAK2e,kBAEnC3e,KAAKga,KAAK6E,SAAW7e,KAAKkf,QAAU,IAAIpgB,KAAK2b,GAAMA,EAAExb,KAErDe,KAAKga,KAAKmF,WAAanf,KAAKmf,YAAc,GASnC,CACJlgB,GAAIe,KAAKf,GACT8J,KAAM/I,KAAK+I,MAAQ,cACnBuU,QAAStd,KAAKsd,SAAW,MACzB1R,KAAM5L,KAAK4L,KACXmS,KAAM/d,KAAK+d,KACXC,eAAgBhe,KAAKge,eACrBhE,KAAMha,KAAKga,KACXiE,WAAYje,KAAKie,WACjB2B,aAAc5f,KAAKga,KAAK4F,aACxB1B,gBAAiBle,KAAKke,gBACtBE,qBAAsBpe,KAAKoe,qBAC3BE,kBAAmBte,KAAKse,kBACxBH,eAAgBne,KAAKme,eACrBE,oBAAqBre,KAAKqe,oBAC1BE,iBAAkBve,KAAKue,iBAE7B,CAcA,uBAAAgC,CAAwB5d,EAAS,MAAM,IACpC,OAAO3C,KAAKO,GAAGigB,iBAAiBphB,IACmB,GAAzCY,KAAK2e,kBAAkBnX,QAAQpI,EAAEH,MACxC0D,OAAOA,EACb,CAEA,uBAAA8d,CAAwB9d,EAAS,MAAM,GAAM+d,GAE1C,MAAMC,EAASD,GAAQ,EAAEE,EAAGC,IAAMD,EAAEpd,MAAMsd,cAAcD,EAAErd,QAC1D,OAAOxD,KAAKO,GAAGigB,iBAAiBphB,GACtBY,KAAK2e,kBAAkBnX,QAAQpI,EAAEH,KAAO,IAE9C0D,OAAOA,GACP+d,KAAKC,EACZ,CAMA,eAAAI,CAAgBpe,EAAS,MAAM,IAC5B,OAAO3C,KAAKO,GAAGygB,SAAS5hB,IACmB,GAAjCY,KAAKye,UAAUjX,QAAQpI,EAAEH,MAChC0D,OAAOA,EACb,CAEA,eAAAse,CAAgBte,EAAS,MAAM,GAAM+d,GAElC,MAAMC,EAASD,GAAQ,EAAEE,EAAGC,IAAMD,EAAEpd,MAAMsd,cAAcD,EAAErd,QAC1D,OAAOxD,KAAKO,GAAGygB,SAAS5hB,GACdY,KAAKye,UAAUjX,QAAQpI,EAAEH,KAAO,IAEtC0D,OAAOA,GACP+d,KAAKC,EACZ,CAMA,aAAAO,CAAcve,EAAS,MAAM,IAC1B,OAAO3C,KAAKO,GAAG4gB,OAAOC,IACmB,GAA/BphB,KAAKwe,QAAQhX,QAAQ4Z,EAAEniB,MAC9B0D,OAAOA,EACb,CAEA,aAAA0e,CAAc1e,EAAS,MAAM,GAAM+d,GAEhC,MAAMC,EAASD,GAAQ,EAAEE,EAAGC,IAAMD,EAAEpd,MAAMsd,cAAcD,EAAErd,QAC1D,OAAOxD,KAAKO,GAAG4gB,OAAOC,GACZphB,KAAKwe,QAAQhX,QAAQ4Z,EAAEniB,KAAO,IAEpC0D,OAAOA,GACP+d,KAAKC,EACZ,CAYA,gBAAAW,CAAiBriB,GAKd,GAJAoC,QAAQC,MACL,8DAGO,IAANrC,EAAU,MAAO,GAGrB,IAGIsiB,EAHQvhB,KAAKO,GAAGoL,WAAW1M,GAGHuiB,gBAExBC,EAAe,CAAC,EACpBF,EAAgBvb,SAAS0b,IACtBD,EAAaC,EAAEC,SAASC,YAAc5hB,KAAKO,GAAGoL,WAC3C+V,EAAEC,SAASC,WACb,IAGJ,IAAIC,EAAgB,GAQpB,OAPApiB,OAAOD,KAAKiiB,GAAczb,SAAQ,SAAUvD,GACzCof,EAAcza,KAAK,CAChBnI,GAAIe,KAAKyC,GAAKxD,GACdoS,MAAOrR,KAAKyC,GAAKe,OAEvB,GAAGie,GAEII,CACV,CAYA,eAAAN,CAAgBO,EAAWC,GACxB1gB,QAAQC,MAAM,4BAGd,IAGIigB,EAHQvhB,KAAKO,GAAGoL,WAAWmW,GAGHN,eACxBE,GAAMA,EAAEC,SAASC,YAAcG,IAG/BC,EAAe,GAKnB,OAJAT,EAAgBvb,SAAS0b,IACtBM,EAAa5a,KAAK,CAAEnI,GAAIyiB,EAAEO,WAAY5Q,MAAOqQ,EAAEle,OAAQ,IAGnDwe,CACV,CAiBA,KAAA5B,CAAMzd,EAAS,MAAM,GAAMuf,GAAO,GAC/B,IAAIhe,EAAS,GAEb,OAAKlE,KAAKkf,QAAUlf,KAAKkf,OAAOtd,OAAS,EAAUsC,EAkBhDA,EAfCvB,GAAUuf,EAeFliB,KAAKmiB,YAAYniB,KAAM,SAAU2C,IAIhC3C,KAAKkf,QAAU,IAAIvc,OAAOA,EAI1C,CAeA,WAAAwf,CAAYC,EAAM3f,EAAKE,GACpB,IAAI0f,EAAQD,EAAK3f,IAAQ,GACrB6f,EAAcD,EAAM1f,SAASA,IAAW,GAE5C,IAAK,IAAI8X,KAAK4H,EAAO,CAClB,IAAIE,EAAWviB,KAAKmiB,YAAY1H,EAAGhY,EAAKE,GACpC4f,EAAS3gB,SACV0gB,EAAcA,EAAY3I,OAAO4I,GAEvC,CAEA,OAAOD,CACV,CAeA,SAAAE,CAAU7f,EAAS,MAAM,IACtB,OAAO3C,KAAKO,GAAGiiB,WAAW/H,GAChBza,KAAKmf,WAAW3X,QAAQiT,EAAExb,KAAO,IACxC0D,OAAOA,EACb,CAEA,UAAA8f,CAAWC,GACR,SAAIA,IAAWA,EAAQzjB,KACbe,KAAKmf,WAAW3X,QAAQkb,EAAQzjB,KAAO,CAIpD,CAeA,KAAA0jB,CAAMhgB,GACH,IAAIuB,EAAS,GACTye,EAAQ,GACRvC,EAAQ,GAEZ,QACKpgB,KAAKkf,QAAUlf,KAAKkf,OAAOtd,OAAS,MACpC5B,KAAK4iB,QAAU5iB,KAAK4iB,OAAOhhB,OAAS,KA8BrCe,GAEG3C,KAAK4iB,SACND,EAAQ3iB,KAAK4iB,OAAOjgB,OAAOA,IAEjBf,OAAS,GAChB5B,KAAK4iB,OAAO5c,SAASC,IAClB,IAAI4c,EAAW5c,EAAE0c,MAAMhgB,GAAQ,GAC3BkgB,GAAYA,EAASjhB,OAAS,IAC/B+gB,EAAQE,EACX,IAMLF,EAAM/gB,OACPsC,EAASye,GAGTze,EAASlE,KAAKkf,OAAOvc,OAAOA,IAGjBf,OAAS,GAjD1B,SAASkhB,EAASC,GACXA,EAAK7D,QAAU6D,EAAK7D,OAAOtd,QAC5BmhB,EAAK7D,OAAOlZ,SAASyU,IAElB,IAAIuI,EAAYvI,EAAEkI,MAAMhgB,GAAQ,GAMhC,GAJIqgB,GAAaA,EAAUphB,OAAS,IACjCsC,EAAS8e,GAGR9e,EAAOtC,OAAS,EAAG,CAEpB,IAAIqhB,EAAWxI,EAAE2F,MAAMzd,GAAQ,GAE3BsgB,GAAYA,EAASrhB,OAAS,IAC/BsC,EAAS+e,GAER/e,EAAOtC,OAAS,GACjBkhB,EAASrI,EAEf,IAGT,CA4BSqI,CAAS9iB,QAOXA,KAAK4iB,SACND,EAAQ3iB,KAAK4iB,QACHhhB,QACP+gB,EAAM3c,SAASC,IACZ,IAAI4c,EAAW5c,EAAE0c,OAAM,KAAM,IAAM,GAC/BE,GAAYA,EAASjhB,SACtB+gB,EAAQA,EAAMhJ,OAAOkJ,GACxB,IAML7iB,KAAKkf,SACNkB,EAAQpgB,KAAKkf,QACHtd,QACPwe,EAAMpa,SAASyU,IAEZ,IAAIuI,EAAYvI,EAAEkI,OAAM,KAAM,IAAM,GAChCK,GAAaA,EAAUphB,SACxB+gB,EAAQA,EAAMhJ,OAAOqJ,IAGxB,IAAIC,EAAWxI,EAAE2F,OAAM,KAAM,IAAM,GAC/B6C,GAAYA,EAASrhB,SACtBwe,EAAQA,EAAMzG,OAAOsJ,GACrBA,EAASjd,SAASG,IACf,IAAI0c,EAAW1c,EAAIwc,OAAM,KAAM,IAAM,GACjCE,GAAYA,EAASjhB,SACtB+gB,EAAQA,EAAMhJ,OAAOkJ,GACxB,IAEN,IAKT3e,EAASA,EAAOyV,OAAOyG,EAAOuC,KAjGvBze,CAqGb,CAOA,OAAAgf,CAAQxgB,EAAK,MAAM,IAChB,OAAO1C,KAAK8f,YAAYqD,SAASzgB,EACpC,CAcA,eAAA0gB,CAAgBzgB,EAAS,MAAM,IAC5B,OAAO3C,KAAKO,GAAG8iB,SAASC,IACkB,GAAhCtjB,KAAK0e,SAASlX,QAAQ8b,EAAErkB,MAC/B0D,OAAOA,EACb,CAWA,eAAA4gB,CAAgB5gB,EAAS,MAAM,GAAM+d,GAElC,MAAMC,EAASD,GAAQ,EAAEE,EAAGC,IAAMD,EAAEpd,MAAMsd,cAAcD,EAAErd,QAC1D,OAAOxD,KAAKO,GAAG8iB,SAASC,GACdtjB,KAAK0e,SAASlX,QAAQ8b,EAAErkB,KAAO,IAErC0D,OAAOA,GACP+d,KAAKC,EACZ,CAiCA,UAAA6C,CAAWC,GACR,IAAIzX,EAAQyX,EAAQC,MAAM,KAEtBC,EAAY,CAACjY,EAAKkY,KAEnB,GAAoB,GAAhBA,EAAMhiB,OACP,OAAO8J,EAIV,IAAIjJ,EAAMmhB,EAAMzc,QAIhB,GAAW,KAAP1E,EACD,OAAOkhB,EAAU3jB,KAAM4jB,GAK1B,GAAIle,MAAMC,QAAQ+F,GAIf,OAHAA,EAAMA,EAAI/I,QAAO,SAAUvD,GACxB,OAAOA,EAAEH,IAAMwD,CAClB,IAAG,GACIkhB,EAAUjY,EAAKkY,GAIzB,GAAIlY,GAAOA,EAAIjJ,GACZ,OAAOkhB,EAAUjY,EAAIjJ,GAAMmhB,GAG9B,GAAW,YAAPnhB,EAAmB,CACpBpB,QAAQC,MAAM,IAAIhC,MAAM,0CAGxB,IAAIL,EAAK2kB,EAAMzc,QACf,OAAOwc,EAAU3jB,KAAKO,GAAGoL,WAAW1M,GAAK2kB,EAC5C,CAKA,OADAviB,QAAQC,MAAM,4BAA8BmiB,GACrC,IAAI,EAGd,OAAOE,EAAU3jB,KAAMgM,EAC1B,CAUA,UAAA6X,CAAWC,GAGR,OAAIA,EAAkB,KAAO9jB,KAAKf,GAAK,IAC3B,IACf,CAUA,SAAA8kB,CAAUD,GACP,OAAO9jB,KAAK6jB,WAAWC,GAAa,WACvC,CAUA,OAAAE,CAAQF,GACL,OAAO9jB,KAAK6jB,WAAWC,GAAa,SACvC,CAUA,QAAAG,CAASH,GACN,OAAO9jB,KAAK6jB,WAAWC,GAAa,WACvC,CAQA,WAAInG,GACD,OAAO3d,KAAKga,MAAMuD,aAAaC,eAAiB,OACnD,CAKA,oBAAI0G,GACD,OAAOlkB,KAAKuf,mBAAmBC,MAClC,CAEA,oBAAI0E,CAAiB1E,GAClBxf,KAAKuf,mBAAmBC,OAASA,CACpC,CAEA,wBAAI2E,GACD,OAAOnkB,KAAKuf,mBAAmBE,UAClC,CAEA,wBAAI0E,CAAqB1E,GACtBzf,KAAKuf,mBAAmBE,WAAaA,CACxC,CAEA,2BAAI2E,GACD,OAAOpkB,KAAKuf,mBAAmBG,aAClC,CAEA,2BAAI0E,CAAwB1E,GACzB1f,KAAKuf,mBAAmBG,cAAgBA,CAC3C,CAEA,qBAAI2E,GACD,OAAOrkB,KAAKuf,mBAAmBI,OAClC,CAEA,qBAAI0E,CAAkB1E,GACnB3f,KAAKuf,mBAAmBI,QAAUA,CACrC,CAiBA,OAAAZ,CAAQxZ,GAKL,OAFAA,EAAO9C,IAAM,OAENzC,KAAK8f,YAAYwE,QAAQ/e,EAAQvF,KAAM,KACjD,CAWA,QAAAukB,CAAStlB,EAAIijB,GAAO,GACjB,OAAOliB,KAAKogB,OAAOsB,GAAMA,EAAEziB,IAAMA,GAAIijB,GAAM,EAC9C,CASA,OAAAsC,CAAQjf,EAAQkf,EAAa1c,GAC1B,OAAO/H,KAAK8f,YAAYwE,QAAQ/e,EAAQkf,EAAa1c,EACxD,CAMA,SAAA2S,GAIG,MAHuB,IAAIpb,MACxB,2EAKN,oBC9+BH,MAAMolB,EAAsB,EAAQ,OACpC,IAAIC,EAAgB,EAAQ,OAE5BhlB,EAAOC,QAAU,cAAsC+kB,EACpD,WAAA7kB,CAAYud,EAAY9c,GACrBR,MAAMsd,EAAY9c,GAClBP,KAAKsd,QAAU,SACftd,KAAKqO,YAAcgP,EAAWhP,YAE9BrO,KAAK4kB,YAAcvH,EAAWuH,WAGjC,CAaA,eAAI9E,GACD,OAAO4E,CACV,CAEA,OAAA3F,CAAQ7E,GAEL,OADA7Y,QAAQC,MAAM,uCACP,IACV,CAaA,KAAAsG,GACG,IAAIoS,EAAOja,MAAM6H,QAMjB,OALAoS,EAAKsD,QAAU,SACftD,EAAK3L,YAAcrO,KAAKqO,YAExB2L,EAAK4K,YAAc5kB,KAAK4kB,YAEjB5K,CACV,oBCpDH,MAAMoD,EAAY,EAAQ,OAM1B,IAAIyH,EAAgB,CACjB5lB,GAAI,OACJuE,MAAO,GACPshB,OAAQ,CAAC,EACTzX,MAAO,CAAC,EACRsU,SAAU,CACPoD,aAAc,GACdC,qBAAsB,GACtBC,YAAa,GACbC,uBAAwB,GACxBC,gBAAiB,CACdC,iBAAkB,CAEfC,KAAM,MACNzL,MAAO,IAEV0L,WAAY,IAEfC,SAAS,EAETC,UAAU,EACVC,SAAS,EAETC,UAAW,GAEXC,SAAU,IAgChBhmB,EAAOC,QAAU,cAAmCwd,EACjD,WAAAtd,CAAYud,EAAY9c,GACrBR,MAAM,CAAC,SAAUQ,GAEjB8c,EAAaA,GAAc,CAAC,EAI5Brd,KAAK6f,WAAWxC,GAEhBrd,KAAK4lB,iBAAmB5lB,KAAK6lB,mBAAmB,IAOhD7lB,KAAK8lB,0BAEL9lB,KAAK+lB,mBAAqB,GAC1B/lB,KAAKgmB,mBAAqB,GAM1BhmB,KAAKimB,YAAcjmB,KAAKkmB,eAAeC,WAEvCnmB,KAAKomB,aAAe,KAKpBpmB,KAAKqmB,QAAU,KAKfrmB,KAAKsmB,yBAA2B,CAEhC,CACH,CAYA,iBAAOC,GACJ,MAAO,gBACV,CAQA,UAAA1G,CAAWta,GAwGR,GAvGAvF,KAAKf,GAAKsG,EAAOtG,GAIjBe,KAAK4L,KAAOrG,EAAOqG,MAAQ,KAI3B5L,KAAK+I,KAAOxD,EAAOwD,MAAQ,iBAI3BxD,EAAOoc,SAAWpc,EAAOoc,UAAY,CAAC,EACtC3hB,KAAK2hB,SAAW3hB,KAAK2hB,UAAY,CAAC,EAIlC3hB,KAAK2hB,SAASqD,qBACXzf,EAAOoc,SAASqD,sBAChBH,EAAclD,SAASqD,qBAK1BhlB,KAAK2hB,SAASsD,YACX1f,EAAOoc,SAASsD,aAAeJ,EAAclD,SAASsD,YAWzDjlB,KAAK2hB,SAASuD,uBACX3f,EAAOoc,SAASuD,wBAChBL,EAAclD,SAASuD,uBAI1BllB,KAAK2hB,SAASwD,gBAAkB5f,EAAOoc,SAASwD,iBAAmB,CAChEC,iBACGP,EAAclD,SAASwD,gBAAgBC,iBAC1CE,WAAYT,EAAclD,SAASwD,gBAAgBG,YAMtDtlB,KAAK2hB,SAAS+D,UAAYngB,EAAOoc,SAAS+D,UAG1C1lB,KAAK2hB,SAAS4D,QAAU5e,KAAKiE,MAC1BrF,EAAOoc,SAAS4D,SAAWV,EAAclD,SAAS4D,SAKrDvlB,KAAK2hB,SAAS8D,QAAU9e,KAAKiE,MAC1BrF,EAAOoc,SAAS8D,SAAWZ,EAAclD,SAAS8D,SAMrDzlB,KAAK2hB,SAAS6D,SAEqBhY,MAA5BjI,EAAOoc,SAAS6D,SACVjgB,EAAOoc,SAAS6D,SAGY,GAAnCjgB,EAAOoc,SAAS6E,iBACmB,KAAnCjhB,EAAOoc,SAAS6E,iBAGL3B,EAAclD,SAAS6D,SAQxCxlB,KAAK2hB,SAASgE,SAAW1F,SACtB1a,EAAOoc,SAASgE,UAAYd,EAAclD,SAASgE,UAMtD3lB,KAAKymB,aAAe,KAKpBzmB,KAAK2hB,SAASoD,aACXxf,EAAOoc,SAASoD,cAAgBF,EAAclD,SAASoD,aAKtD/kB,KAAK2hB,SAASoD,aAAc,CAE7B,IAAIrZ,EAAM1L,KAAKO,GAAGoL,WAAW3L,KAAK2hB,SAASoD,cACtCrZ,IAEFA,EAAM1L,KAAKO,GAAGmmB,UAAU1mB,KAAK2hB,SAASoD,eAGrCrZ,GACD1L,KAAKymB,aAAe/a,EACpB1L,KAAK2hB,SAAS8D,QAAuB,UAAb/Z,EAAI3C,KACxB/I,KAAK2hB,SAAS8D,SACXzlB,KAAKymB,aAAa9G,UACd3f,KAAK2mB,mBACP3mB,KAAK2mB,iBAAmB3mB,KAAK4mB,sBAKhC5mB,KAAK6mB,WAAY,IAIvBxlB,QAAQC,MACL,oBAAoBtB,KAAK4L,SAAS5L,KAAKf,kCAAkCe,KAAK2hB,SAASoD,gBAGhG,CAsBAhlB,MAAM8f,WAAWta,EACpB,CAaA,KAAAqC,GACG,IAAI8D,EAAM3L,MAAM6H,QAEhB,MAAO,CACJ3I,GAAIe,KAAKf,GACT2M,KAAM5L,KAAK4L,MAAQ5L,KAAKwD,MACxBuF,KAAM/I,KAAK+I,MAAQ,iBACnB4Y,SAAU3hB,KAAKO,GAAGma,UAAU1a,KAAK2hB,UAAY,CAAC,GAC9C/B,aAAclU,EAAIkU,aAExB,CAWA,UAAMjY,GAKH,OAJK3H,KAAKf,KACPe,KAAKwD,MAAQxD,KAAKwD,OAASxD,KAAK4L,YAE7B7L,MAAM4H,OACL3H,IACV,CAWA,OAAA0H,GACG,IAAIof,EAAyB,IACnB,IAAItlB,SAAQ,CAACulB,EAAM5lB,KAGvB,MAAM6lB,EAAOhnB,KAAKO,GAAG0mB,eAGrB,IAAIC,EAAa,GASjB,OAPqBF,EAAKrkB,QAAQie,GACxBA,EAAEH,yBAAyBrhB,GAAMA,EAAEH,IAAMe,KAAKf,OAEzC+G,SAASmhB,IACrBD,EAAW9f,KAAK+f,EAAIC,qBAAqBpnB,MAAM,IAG3CwB,QAAQsY,IAAIoN,GAAY7f,KAAK0f,GAAMzf,MAAMnG,EAAI,IAK1D,OAAOK,QAAQ9B,UACX2H,MAAK,IACIyf,MAETzf,MAAK,IACItH,MAAM2H,YAEfL,MAAK,KACHrH,KAAKuB,KAAK,YAAY,GAE/B,CAOA,OAAI8lB,GACD,OAAOrnB,KAAK4lB,gBACf,CAQA,cAAI0B,GACD,IAAKtnB,KAAKymB,aAAc,CACrB,GAAIzmB,KAAKf,IAAMe,KAAK4L,KAAM,CAGvB,IAAIzK,EAAM,IAAI7B,MACX,kBAAkBU,KAAK4L,SAAS5L,KAAKf,oCAExCe,KAAKO,GAAGoJ,OAAO,UAAWxI,EAAK,CAAEomB,eAAgBvnB,KAAK4H,SACzD,CACA,OAAO,IACV,CACA,IAAI8D,EAAM1L,KAAKO,GAAGoL,WAAW3L,KAAKymB,aAAaxnB,IAI/C,OAHKyM,IACFA,EAAM1L,KAAKO,GAAGmmB,UAAU1mB,KAAKymB,aAAaxnB,KAEtCyM,CACV,CAQA,cAAI4b,CAAWxC,GACZ9kB,KAAKymB,aAAe3B,EAEpB9kB,KAAK8lB,yBACR,CAQA,cAAI0B,GACD,OAAOxnB,KAAK2hB,SAAS8D,QAAU,QAAU,QAC5C,CAQA,sBAAIgC,GACD,OAAKznB,KAAKO,GAEHP,KAAKO,GAAGmnB,mBAAmB1nB,KAAK2hB,SAASqD,sBAF3B,IAGxB,CAQA,aAAI2C,GACD,IAAI7C,EAAS9kB,KAAKsnB,WAClB,OAAKxC,EAEEA,EAAO8C,UAAU5nB,KAAK2hB,SAASsD,aAFlB,IAGvB,CAQA,SAAI5Y,GACD,IAAKrM,KAAKqmB,QAAS,CAChB,IAAIvB,EAAS9kB,KAAKsnB,WAElBtnB,KAAKqmB,QAAUvB,EAASA,EAAOzY,QAAU,IAC5C,CACA,OAAOrM,KAAKqmB,OACf,CAEA,kBAAIH,GACD,MAAO,CACJC,WAAY,EACZ0B,aAAc,EACdC,YAAa,EAEnB,CAEA,cAAIC,GACD,OAAO/nB,KAAKimB,WACf,CAEA,qBAAI+B,GACD,OAAOhoB,KAAK+nB,YAAc/nB,KAAKkmB,eAAe4B,WACjD,CAEA,eAAAG,GACGjoB,KAAKimB,YAAcjmB,KAAKkmB,eAAe4B,WAC1C,CAMA,SAAAI,CAAUC,GAEP,GACGnoB,KAAK2hB,SAAS+D,YACc,uBAA3B1lB,KAAK2hB,SAAS+D,WACZ1lB,KAAK2hB,SAAS+D,WAAayC,GAE9B,OAEH,GAAInoB,KAAK2mB,iBAAkB,CAExB3mB,KAAKooB,cAAcD,GAGnB,IAAIE,EAAaroB,KAAK2mB,iBAAiB2B,YACvC,GAAID,EAAY,CACb,IAAIE,EAAevoB,KAAK2mB,iBAAiB6B,QAAQH,GAC7CE,IAAcJ,EAASI,EAAaE,QAC3C,CACH,CAEA,IAAIC,EAAK1oB,KAAK4lB,iBACV8C,IAED1oB,KAAK2oB,mBAAqBD,EAAGJ,YAGf,MAAVH,EACDO,EAAGR,UAAU,MAGPQ,EAAGJ,aAAeH,EACxBnoB,KAAKuB,KAAK,eAAgBvB,KAAKsoB,aAGzBI,EAAGE,OAAOT,IAChBO,EAAGR,UAAUC,GAGtB,CAMA,aAAAC,CAAcD,GACX,IAAIU,EAAK7oB,KAAK2mB,iBACd,GAAIkC,GAAMA,EAAGP,aAAeH,EAGzB,GADiBU,EAAGC,KAAK,CAAE7pB,GAAIkpB,IAAU,GAEtCU,EAAGX,UAAUC,OAGX,CACF,IAAIY,EAAWF,EAAGC,KAAK,CAAEL,QAASN,EAAQa,QAAS,IAAK,GACpDD,EAAUF,EAAGX,UAAUa,EAAS9pB,IAC/B4pB,EAAGX,UAAU,KACrB,CAEN,CAEA,SAAAI,CAAUW,GAAa,GAEpB,GAAIA,GAAcjpB,KAAK2mB,iBAAkB,CACtC,IAAIuC,EAASlpB,KAAK2mB,iBAAiB2B,YACnC,GAAIY,EAAQ,CACT,IAAIC,EAAWnpB,KAAK2mB,iBAAiB6B,QAAQU,GAG7ClpB,KAAK2mB,iBAAiBhkB,QAClBymB,GAASA,EAAKX,SAAWU,EAASV,UAItC,IAAIY,EACDrpB,KAAK2mB,iBAAiB2C,YAAY,IAAM,KAK3C,OAFAtpB,KAAKupB,oBAEEF,CACV,CACH,CAEA,IAAIX,EAAK1oB,KAAK4lB,iBACd,GAAU,MAAN8C,EAAY,OAAO,KAEvB,IAAIQ,EAASR,EAAGJ,YAGhB,OAFeI,EAAGF,QAAQU,EAG7B,CAEA,cAAAM,GACG,IAAId,EAAK1oB,KAAK4lB,iBACd,GAAU,MAAN8C,EAAY,OAAO,KAEvB,IAAIQ,EAASR,EAAGe,aAGhB,OAFef,EAAGF,QAAQU,EAG7B,CAEA,aAAAQ,CAAcC,GACX,IAAIjB,EAAK1oB,KAAK4lB,iBACd,GAAU,MAAN8C,EAAY,OAAO,KAEvB,IAAIQ,EAASR,EAAGkB,UAAUD,EAAO1qB,IAGjC,OAFeypB,EAAGF,QAAQU,EAG7B,CAeA,iBAAAK,CAAkBM,GAAQ,GAOvB,GAJA7pB,KAAK8lB,2BAIA9lB,KAAK2hB,SAAS4D,UAAYsE,EAAO,OAStC,IAAIC,EACAC,EAAS/pB,KAAKynB,mBACdsC,IACDD,EAAaC,EAAOzB,aAGvB,IAAI0B,EAAcC,GAEA,MAAXA,IAMCH,EACO9pB,KAAKkqB,oBAAoBD,IADbF,GAIvB/pB,KAAK4lB,kBAAkB5lB,KAAK4lB,iBAAiBjjB,OAAOqnB,GACpDhqB,KAAK2mB,kBAAkB3mB,KAAK2mB,iBAAiBhkB,OAAOqnB,EAC3D,CAEA,eAAAG,GACG,GAAInqB,KAAK2hB,SAAS+D,UAEf,GAA+B,gBAA3B1lB,KAAK2hB,SAAS+D,UAA6B,CAC5C,IAAI7iB,EAAW7C,KAAKoqB,sBAChBC,EAAarqB,KAAKsnB,WAAWgD,QAAQ5I,GAAe,QAATA,EAAEjf,MAG7C+T,EAAMxW,KAAK4lB,iBAAiBkD,MAAMpnB,IACnC,IAAI6oB,GAAQ,EAeZ,OAbAF,EAAWrkB,SAAS0b,IACb6I,GAA4B,MAAnB7oB,EAAEggB,EAAEO,cAEbvgB,EAAEggB,EAAEO,YAAYtf,OAEjB4nB,EACG7oB,EAAEggB,EAAEO,YAAYtf,QAAQvB,GAASA,EAAKnC,IAAM4D,IACxCjB,OAAS,EACRF,EAAEggB,EAAEO,aAAepf,IAC3B0nB,GAAQ,GACX,IAGIA,CAAK,IACZ,GAGC/T,IACDxW,KAAK4lB,iBAAiBsC,UAAU1R,EAAIvX,IAEpCe,KAAKooB,cAAc5R,EAAIvX,IAE7B,MAAO,GACuB,gBAA3Be,KAAK2hB,SAAS+D,WACa,uBAA3B1lB,KAAK2hB,SAAS+D,UACf,CAgBC,IAAI8E,EAAYxqB,KAAK4lB,iBAAiB0C,YACtC,IACIkC,GACAA,IAAcxqB,KAAK4lB,iBAAiBgD,OAAO4B,GAC7C,CAIC,IAAIC,EAAQzqB,KAAK4lB,iBAAiB6D,aAElCzpB,KAAK4lB,iBAAiBsC,UAAUuC,GAAS,MAIG,GAAzCzqB,KAAK4lB,iBAAiBxkB,MAAMspB,WACU,GAAtC1qB,KAAK4lB,iBAAiBxkB,MAAMQ,QAE5B5B,KAAKuB,KAAK,kBAAmB,CAAC,GAGjCvB,KAAKooB,cAAcqC,EAEtB,CACH,MACGzqB,KAAK4lB,iBAAiBsC,UAAUloB,KAAK2hB,SAAS+D,WAE9C1lB,KAAKooB,cAAcpoB,KAAK2hB,SAAS+D,WAKvC,GAAI1lB,KAAK2qB,eAAgB,CACtB,MAAMF,EAAQzqB,KAAK4lB,iBAAiB6D,aACpCzpB,KAAKkoB,UAAUuC,GAAS,MACxBzqB,KAAKooB,cAAcqC,GAAS,MAG5B,MAAMG,EAAW5qB,KAAK6qB,sBACjBJ,GAASG,GAAUtC,aACrBtoB,KAAK8qB,UAEX,CACH,CAaA,eAAAC,CAAgBC,EAAO,MACpBhrB,KAAKomB,aAAe4E,CACvB,CAEA,IAAA1qB,GAEG,GAAIN,KAAK8nB,YAAa,OACtB9nB,KAAK8nB,aAAc,EAEd9nB,KAAK4lB,iBAAiBqF,MAAMC,sBAC9BlrB,KAAK4lB,iBAAiBqF,MAAMC,oBACzBlrB,KAAK4lB,iBAAiBuF,YAAY,uBAAuB,KAEtD,IAAIC,EAAWprB,KAAKsoB,YAEpBtoB,KAAKuB,KAAK,eAAgB6pB,EAAS,KAK5C,IAAIC,EAAY,CAACC,EAAYb,EAAOxe,EAAK,OAClCvG,MAAMC,QAAQ2lB,GACRA,EAAW3oB,QAAQsD,IAAOA,EAAEgG,IAAOhG,IAAMwkB,IAAO7oB,OAAS,EAEzD0pB,IAAeA,EAAWrf,IAAOqf,IAAeb,EAK7DzqB,KAAKiB,GAAG,4BAA6BG,IAOlC,IAAIsK,EAAM1L,KAAKsnB,WACf,IAAK5b,EAAK,OAEV,IAAKtK,IAASA,EAAKA,KAAM,OAEzB,IAAImqB,GAAU,EACVC,EAAc,GAGbxrB,KAAK2qB,gBAIPnpB,QAAQ9B,UACJ2H,MAAK,IACI,IAAI7F,SAAQ,CAACulB,EAAM0E,KAEvB,GAAI/f,aAAe1L,KAAKO,GAAGgV,MAAMmW,cAAe,CAC7C,IAAIC,EACDjgB,EAAIsV,SAAS5hB,GAAMA,EAAEH,IAAMmC,EAAKqK,YAAa,GAIhD,GAFA8f,EAAUI,EAAQ/pB,OAAS,GAEtB2pB,EAAS,OAAOxE,IAErB,IAAI6E,EAAQ,CACTvG,KAAM,KACNzL,MAAO,IAGV+R,EAAQ3lB,SAAS5G,IACd,IAAIysB,EAAYzqB,EAAKA,KAAK,GAAGhC,EAAE6M,QAC1B4f,GAELD,EAAMhS,MAAMxS,KAAK,CACd3E,IAAK,GACFrD,EAAE0sB,OAASpgB,EAAIqgB,YAAY3sB,EAAEH,OAC5BG,EAAE6M,OACN+f,KAAM,SACN3a,MAAOwa,GACR,IAGLngB,EAAIW,QACA4f,QAAQ,CACNL,MAAOA,IAETvkB,MAAM6kB,IACJV,EAAcU,EAAa9qB,MAAQ,GACnCoqB,EAAYxlB,SAASC,WACXA,EAAEhH,EAAE,IAGd8nB,GAAM,IAERzf,MAAMmkB,EACb,MAGGF,EAAU7f,EAAIzM,IAAMmC,EAAKqK,SACzB+f,EAAc,CAACpqB,EAAKA,MACpB2lB,GACH,MAGL1f,MAAK,KA6GH,GA5GIkkB,KACAC,GAAe,IAAIxlB,SAASmmB,IAG1B,MAAMC,EACH1gB,aAAe1L,KAAKO,GAAGgV,MAAMmW,cAG3B1rB,KAAKqsB,YAAYF,EAAUC,KAIjBpsB,KAAKynB,qBACLznB,KAAKkqB,oBAAoBiC,KAMpCnsB,KAAK4lB,iBAAiBgD,OACpBuD,EAAS,GAAGzgB,EAAIO,UAElBjM,KAAKssB,gBAMLtsB,KAAK4lB,iBAAiBgD,OACpBuD,EAAS,GAAGzgB,EAAIO,UAEnBjM,KAAKssB,gBAGDtsB,KAAKkqB,oBAAoBiC,IAGvBnsB,KAAK+lB,mBAAmBpM,OACrB3Z,KAAKgmB,oBAEQhgB,SAASumB,IAEzB,GAAIC,GAAGD,EAAQ,eACZ,OAAO,EAIV,IAAIE,EAAM,EACN1kB,EAASykB,GAAGD,GAAOG,gBACnBF,GAAGD,GAAOG,gBAAgBC,MAC3BF,EAAMD,GAAGD,GACLG,gBACAC,MAAMH,GAAGD,IAEbC,GAAGD,GAAOG,gBAAgBA,gBACtBC,QAKJ5kB,EAASykB,GAAGD,GACRG,gBACAA,gBACJD,EAAMD,GAAGD,GACLG,gBACAA,gBACAC,MAAMH,GAAGD,GAAOG,kBAIvB,IAAIE,EAAK5sB,KAET,GAAI+H,EAAO8kB,QAAS,CACjB,IAAIC,EAAI9sB,KAAKO,GAAGsa,QAChB9S,EAAO8kB,QACJ,CACG5tB,GAAIstB,EAAQ,cACZxJ,KAAM,SACN1R,MAAOyb,EACJ,wCAEHC,IAAK,2BACLC,MAAO,SAAU/tB,EAAIguB,GAClBL,EAAGM,aACHV,GAAGvtB,GACCytB,gBACAS,WAAWluB,EAClB,GAEHwtB,EAEN,MAnENzsB,KAAK4lB,iBAAiBlN,IAAIyT,EAAU,GACpCnsB,KAAKuB,KAAK,SAAU4qB,KAsEvB,IAIAnsB,KAAK2mB,kBAEL3mB,KAAKotB,oBAAoB,CACtBhsB,KAAMoqB,OAMT9f,aAAe1L,KAAKO,GAAGgV,MAAMmW,eAAgB,CAEhD,IAAInK,EAAkBvhB,KAAKsnB,WAAW9F,eAClCE,GACEA,EAAE2L,gBACF3L,EAAE2L,eAAepuB,IAAMmC,EAAKqK,WAOlC,GAHA+f,EAAcA,EAAY,GAIvBA,GACAjK,GACAA,EAAgB3f,OAAS,EAC1B,CAEC,IAAIqK,EAAKsV,EAAgB,GAAGuD,OAAO7Y,KAC9Buf,EAAYvsB,IAAY,MAANgN,IACpBuf,EAAYvsB,GAAKusB,EAAYvf,IAEhCjM,KAAK4lB,iBAAiBkD,KAAK,CAAC,GAAG9iB,SAASsnB,IACrC,IAAIC,EAAiB,CAAC,EAEtBhM,EAAgBvb,SAAS0b,IACtB,IAAI8L,EAAkB,CAAC,EACnB9L,GAAKA,EAAEiG,YACR6F,EACGhC,EAAY9J,EAAEiG,UAAU8F,iBACxB,CAAC,GAGP,IAAIC,EAAeJ,EAAE5L,EAAE+L,iBAAmB,CAAC,EAEvCE,EAAetC,EAChBmC,EACAF,EAAEruB,GACFgN,GAKAvG,MAAMC,QAAQ+nB,IACdA,EAAa/qB,QACTsD,GACEA,GAAKulB,EAAYvsB,IACjBgH,EAAEhH,IAAMusB,EAAYvsB,IACpBgH,EAAEgG,IAAOuf,EAAYvsB,KACzB2C,OAAS,GACX+rB,GAEAD,EAAatmB,KAAKokB,GAElB+B,EAAe7L,EAAE+L,gBACdC,EACHH,EAAe7L,EAAEO,YAAcsL,EAC5B7L,EAAE+L,gBACH3uB,KAAKmH,GAAMA,EAAEhH,IAAMgH,EAAEgG,IAAOhG,KAE7BP,MAAMC,QAAQ+nB,IACdA,GAAgBlC,EAAYvsB,IAC1ByuB,EAAazuB,IAAMusB,EAAYvsB,IAC/ByuB,EAAazhB,IAAOuf,EAAYvsB,KACnC0uB,IAEAJ,EAAe7L,EAAE+L,gBAAkBjC,EACnC+B,EAAe7L,EAAEO,YACduJ,EAAYvsB,IAAMusB,EACxB,IAIC/rB,OAAOD,KAAK+tB,GAAgB3rB,OAAS,IACtC5B,KAAK4lB,iBAAiBgI,WACnBN,EAAEruB,GACFsuB,GAGCvtB,KAAK2mB,kBACN3mB,KAAK2mB,iBAAiBiH,WACnBN,EAAEruB,GACFsuB,GAGNvtB,KAAKuB,KACF,SACAvB,KAAK4lB,iBAAiB4C,QAAQ8E,EAAEruB,KAEtC,GAEN,CACH,CAEAe,KAAK6tB,+BAA+BzsB,EAAKqK,SAAUrK,EAAKA,MAExDpB,KAAKupB,oBACLvpB,KAAKmqB,iBAAiB,IAS/B,IAAI2D,EAAc9tB,KAAKO,GAAGoL,WAAWvK,EAAKqK,UAC1C,IAAKqiB,EAAa,OAGlB,IAAIvM,EAAkBuM,EAClBtM,eAAeE,GAAMA,EAAE2L,gBAAgBpuB,IAAMyM,EAAIzM,KACjD0D,QAAQ+e,GAAMA,IAClB,GAA8B,GAA1BH,EAAgB3f,OAAa,OAEjC,IAAImsB,EAAMD,EAAY7hB,KAClBA,EAAKP,EAAIO,KACT+hB,EAAUhuB,KAAKO,GAAGma,UAAUtZ,EAAKA,MAEjC6sB,EAAajuB,KAAKsoB,YAClB4F,GAAe,EAEnB3M,EAAgBvb,SAAS0b,IAEtB,IAAInc,EAASnE,EAAKA,KAAKsgB,EAAEO,YAEpBvc,MAAMC,QAAQJ,KAChBA,EAAS,CAACA,GAAQ5C,QAAQsD,IAAOjG,KAAKO,GAAGwa,MAAM9U,MAElDV,EAAOS,SAASC,IAIb,GAHAA,EAAIA,EAAEgG,IAAOhG,EAGTjG,KAAK4lB,iBAAiBgD,OAAO3iB,GAAI,CAClC,IAAIkoB,EAAazM,EAAEiG,UACnB,GAAIwG,EAAY,CACb,IAAI3X,EAAMxW,KAAK4lB,iBAAiB4C,QAAQviB,GACpCmoB,EAAUD,EAAWlM,WACrBoM,EAAUF,EAAWV,eAEzB,GAA6B,QAAzBU,EAAWG,WAAsB,CAC7B5oB,MAAMC,QAAQ6Q,EAAI4X,MACpB5X,EAAI4X,GAAW,CAAC5X,EAAI4X,IAAUzrB,QAC1BjB,IAAO1B,KAAKO,GAAGwa,MAAMrZ,MAI5B,IAAI6sB,EAAOJ,EAAWK,iBAAiBR,IACJ,GAA/BxX,EAAI4X,GAAS5mB,QAAQ+mB,IACtB/X,EAAI4X,GAAShnB,KAAKmnB,GAGhB7oB,MAAMC,QAAQ6Q,EAAI6X,MACpB7X,EAAI6X,GAAW,CAAC7X,EAAI6X,IAAU1rB,QAC1BjB,IAAO1B,KAAKO,GAAGwa,MAAMrZ,MAKX,GADd8U,EAAI6X,GAAS1rB,QAAQjB,GAAMA,EAAEqsB,IAAQC,EAAQD,KACzCnsB,QAEJ4U,EAAI6X,GAASjnB,KAAK4mB,EAExB,MACGxX,EAAI4X,GAAWD,EAAWK,iBAAiBR,GAC3CxX,EAAI6X,GAAWL,EAIlBhuB,KAAK4lB,iBAAiBgI,WAAW3nB,EAAGuQ,GAEhCxW,KAAK2mB,kBACN3mB,KAAK2mB,iBAAiBiH,WAAW3nB,EAAGuQ,GAEvCxW,KAAKuB,KAAK,SAAUvB,KAAK4lB,iBAAiB4C,QAAQviB,IAI9CgoB,GAAYhvB,IAAMgH,IACnBioB,GAAe,EAErB,CACH,IACD,IAGDA,GACDluB,KAAKuB,KAAK,cAAe,KAC5B,IAGHvB,KAAKiB,GAAG,sCAAuCG,IAsB5C,IAAIsK,EAAM1L,KAAKsnB,WACf,GAAK5b,GAEAtK,EAAK4T,MAGV,GAAMtJ,aAAe1L,KAAKO,GAAGgV,MAAMmW,eAiD5B,GAAIhgB,aAAe1L,KAAKO,GAAGgV,MAAMmW,cAAe,CAsBpD,IAAI+C,EAAY,CACbhjB,SAAUrK,EAAKqK,SACfrK,KAAMpB,KAAKO,GAAGma,UAAUtZ,EAAKA,OAEhCpB,KAAKuB,KAAK,2BAA4BktB,EACzC,OA1EG,GAAI/iB,EAAIzM,KAAOmC,EAAKstB,SAAU,CAC3B,IAAIC,EAAQjjB,EAAIkc,UAAUxmB,EAAKwtB,SAC/B,GAAID,GAEc3uB,KAAK4lB,iBAAiBgD,OAAOxnB,EAAK4T,OACnC,CACX,IAAIgZ,EAAUhuB,KAAKO,GAAGma,UAAUtZ,EAAKA,MACjCoV,EAAMxW,KAAK4lB,iBAAiB4C,QAAQpnB,EAAK4T,OAEzCoZ,EAAUO,EAAM1M,WAChBoM,EAAUM,EAAMlB,eAEI,QAApBkB,EAAML,YACF5oB,MAAMC,QAAQ6Q,EAAI4X,MAIpB5X,EAAI4X,GAAW,CAAC5X,EAAI4X,IAAUzrB,QAC1BjB,IAAO1B,KAAKO,GAAGwa,MAAMrZ,MAG5B8U,EAAI4X,GAAShnB,KAAKunB,EAAMH,iBAAiBR,IAEpCtoB,MAAMC,QAAQ6Q,EAAI6X,MACpB7X,EAAI6X,GAAW,CAAC7X,EAAI6X,IAAU1rB,QAC1BjB,IAAO1B,KAAKO,GAAGwa,MAAMrZ,MAG5B8U,EAAI6X,GAASjnB,KAAK4mB,KAElBxX,EAAI4X,GAAWO,EAAMH,iBAAiBR,GACtCxX,EAAI6X,GAAWL,GAIlBhuB,KAAK4lB,iBAAiBgI,WAAWxsB,EAAK4T,MAAOwB,GAEzCxW,KAAK2mB,kBACN3mB,KAAK2mB,iBAAiBiH,WAAWxsB,EAAK4T,MAAOwB,GAEhDxW,KAAKuB,KACF,SACAvB,KAAK4lB,iBAAiB4C,QAAQpnB,EAAK4T,OAEzC,CAEN,CA4BH,IAGHhV,KAAKiB,GAAG,4BAA6BG,IAMlC,IAAIsK,EAAM1L,KAAKsnB,WACf,IAAK5b,EAAK,OAGV,IAAInG,EAASnE,EAAKA,KAClB,IAAKmE,EAAQ,OAYb,IAAIspB,GAAa,EACbzC,GAAuB,EACvB0C,GAAW,EACXC,EAAa,GAKbC,EAAiB,GACjBxD,EAAc,CAAC,EAWnB,GAAI9f,aAAe1L,KAAKO,GAAGgV,MAAMmW,cAAe,CAC7C,IAAIC,EAAUjgB,EAAIsV,SAAS5hB,GAAMA,EAAEH,IAAMmC,EAAKqK,YAAa,GAC3DojB,EAAalD,EAAQ/pB,OAAS,EAC1BitB,IAEDzC,EACG1gB,aAAe1L,KAAKO,GAAGgV,MAAMmW,eAE/BC,GAAW,IAAI3lB,SAAS5G,IACtB2vB,EAAaA,EAAWpV,OACrB3Z,KAAK4lB,iBACDkD,MAAMM,GAEDA,EACG,GAAGppB,KAAKsnB,WAAWyE,YAChB3sB,EAAEH,OACAG,EAAE6M,UACJ1G,EAAOnG,EAAE6M,OAAS1G,EAAOtG,MAGpCH,KAAKM,GAAMA,EAAEH,MAAO,IAIvBe,KAAK2mB,mBACNqI,EAAiBA,EAAerV,OAC7B3Z,KAAK2mB,iBACDmC,MAAMM,GAEDA,EACG,GAAGppB,KAAKsnB,WAAWyE,YAChB3sB,EAAEH,OACAG,EAAE6M,UACJ1G,EAAOnG,EAAE6M,OAAS1G,EAAOtG,MAGpCH,KAAKM,GAAMA,EAAEH,MAAO,IAE9B,IAGH6vB,EAAWC,EAAWntB,OAAS,EAE/B4pB,EAAcxrB,KAAKivB,iBAAiBtD,EAASpmB,GAEnD,MAGGspB,EAAanjB,EAAIzM,IAAMmC,EAAKqK,SACxBojB,IAEItpB,EAAOtG,IAAkB,MAAZyM,EAAIO,OAAc1G,EAAOtG,GAAKsG,EAAOmG,EAAIO,OAE3D8iB,EAAW3nB,KAAK7B,EAAOtG,IAEvB6vB,EAAW9uB,KAAK4lB,iBAAiBgD,OAAOrjB,EAAOtG,IAC/CusB,EAAcjmB,GAKpB,GAAIspB,EACD,GAAIC,EACD,GAAI9uB,KAAKqsB,YAAYb,EAAaY,GAAuB,CAItDZ,EAAcxrB,KAAKO,GAAGma,UAAU8Q,GAC5BxrB,KAAK4lB,mBACNmJ,EAAa/uB,KAAKO,GAAG8a,KAAK0T,GAC1BA,EAAW/oB,SAASmiB,IACjBnoB,KAAK4lB,iBAAiBgI,WAAWzF,EAAQqD,EAAY,KAIvDxrB,KAAK2mB,mBAENqI,EAAiBhvB,KAAKO,GAAG8a,KAAK2T,GAC9BA,EAAehpB,SAASmiB,IACrBnoB,KAAK2mB,iBAAiBiH,WAAWzF,EAAQqD,EAAY,KAI3DxrB,KAAKuB,KAAK,SAAUiqB,GAGpB,IAAIJ,EAAWprB,KAAKsoB,YAChB8C,GAAUnsB,IAAMusB,EAAYvsB,IAC7Be,KAAKuB,KAAK,cAAe6pB,EAE/B,KAAO,CAIJ,IAAIA,EAAWprB,KAAKsoB,YACpByG,EAAW/oB,SAAS/G,IAGbmsB,GAAUnsB,IAAMA,GAAIe,KAAKuB,KAAK,cAAe,MAEjDvB,KAAK4lB,iBAAiBrU,OAAOtS,GAO7Be,KAAKuB,KAAK,SAAUtC,EAAG,GAE7B,MAGMe,KAAKqsB,YAAYb,KAGlBxrB,KAAK2qB,gBAAmB3qB,KAAK2hB,SAAS+D,YAGxC1lB,KAAK4lB,iBAAiBlN,IAAI8S,EAAa,GAEnCxrB,KAAK2mB,kBACN3mB,KAAKotB,oBAAoB,CACtBhsB,KAAM,CAACoqB,KAGbxrB,KAAKuB,KAAK,SAAUiqB,KAa7B,IAAIyC,EAAajuB,KAAKsoB,YAClB4G,EAAe,KAIf3N,EAAkB7V,EAAI8V,eACtBE,GAAMA,EAAE2L,gBAAkB3L,EAAE2L,eAAepuB,IAAMmC,EAAKqK,WAI1D,GACGC,aAAe1L,KAAKO,GAAGgV,MAAM4Z,UAC7B5N,GAAiB3f,OAAS,EAC3B,CAIC,IAAIqK,EAAKP,EAAIO,KACR1G,EAAOtG,IAAY,MAANgN,IAAY1G,EAAOtG,GAAKsG,EAAO0G,IAE7CjM,KAAK4lB,iBAAiB8E,QAAU,GACjC1qB,KAAK4lB,iBAAiBkD,KAAK,CAAC,GAAG9iB,SAASsnB,IACrC,IAAIC,EAAiB,CAClBtuB,GAAIquB,EAAEruB,IAuGT,GApGAsiB,EAAgBvb,SAAS0b,IACtB,IAAKA,EAAG,OAER,IAAI8L,EAAkB,CAAC,EACnBE,EAAeJ,EAAE5L,EAAE+L,iBAAmB,CAAC,EAEvC/L,EAAEiG,YACH6F,EACGjoB,EAAOmc,EAAEiG,UAAU8F,iBAAmB,CAAC,GAG7C,IAAIE,EAAetC,EAAUmC,EAAiBF,EAAEruB,GAAIgN,GAKjDvG,MAAMC,QAAQ+nB,IACdA,EAAa/qB,QACTsD,GACEA,GAAKV,EAAOtG,IACZgH,EAAEhH,IAAMsG,EAAOtG,IACfgH,EAAEgG,IAAO1G,EAAOtG,KACpB2C,OAAS,IACV+rB,GAEDJ,EAAe7L,EAAE+L,gBAAkBC,EAAa/qB,QAI5CsD,IAAOA,EAAEgG,IAAOhG,EAAEhH,IAAMgH,IAAMV,EAAOtG,KAEzCsuB,EAAe7L,EAAEO,YAAcsL,EAC5B7L,EAAE+L,gBACH3uB,KAAKmH,GAAMA,EAAEhH,IAAMgH,EAAEgG,IAAOhG,KAG7BP,MAAMC,QAAQ+nB,IACdA,GAAgBnoB,EAAOtG,IACrByuB,EAAazuB,IAAMsG,EAAOtG,IAC1ByuB,EAAazhB,IAAO1G,EAAOtG,IAC7B0uB,IAEDJ,EAAe7L,EAAE+L,gBAAkB,KACnCF,EAAe7L,EAAEO,YAAc,MAM9B0L,IACDpoB,EAASvF,KAAKO,GAAGma,UAAUnV,IAE1BG,MAAMC,QAAQ+nB,IAAiBC,GAG7BD,EAAa/qB,QACTsD,GACEA,GAAKV,EAAOtG,IACZgH,EAAEhH,IAAMsG,EAAOtG,IACfgH,EAAEgG,IAAO1G,EAAOtG,KACpB2C,OAAS,EAIX8rB,EAAa1nB,SAAQ,CAACC,EAAG0mB,KAEnB1mB,GAAKV,EAAOtG,IACZgH,EAAEhH,IAAMsG,EAAOtG,IACfgH,EAAEgG,IAAO1G,EAAOtG,KAEhByuB,EAAaf,GAASpnB,EAAM,IAKlCmoB,EAAatmB,KAAK7B,GAGrBgoB,EAAe7L,EAAE+L,gBAAkBC,EACnCH,EAAe7L,EAAEO,YAAcsL,EAC5B7L,EAAE+L,gBACH3uB,KACEmH,GAAMyb,EAAE8M,iBAAiBvoB,MAG5BP,MAAMC,QAAQ+nB,IACdA,GAAgBnoB,EAAOtG,IACrByuB,EAAazuB,IAAMsG,EAAOtG,IAC1ByuB,EAAazhB,IAAO1G,EAAOtG,KAC9B0uB,IAEAJ,EAAe7L,EAAE+L,gBAAkBloB,EAEnCgoB,EAAe7L,EAAEO,YACdP,EAAE8M,iBAAiBjpB,GACzB,IAKC9F,OAAOD,KAAK+tB,GAAgB3rB,OAAS,EAAG,CAQzC,GAAI5B,KAAK2mB,kBAAkBiC,OAAO0E,EAAEruB,IAAK,CACtC,MAAM8pB,EAAWtpB,OAAO2vB,OACrBpvB,KAAK2mB,iBAAiB6B,QAAQ8E,EAAEruB,IAChCsuB,GAEHvtB,KAAK2mB,iBAAiBiH,WAAWN,EAAEruB,GAAI8pB,EAC1C,CAEA,GAAI/oB,KAAK4lB,kBAAkBgD,OAAO0E,EAAEruB,IAAK,CACtC,MAAMowB,EAAS5vB,OAAO2vB,OACnBpvB,KAAK4lB,iBAAiB4C,QAAQ8E,EAAEruB,IAChCsuB,GAEHvtB,KAAK4lB,iBAAiBgI,WAAWN,EAAEruB,GAAIowB,GACvCrvB,KAAKuB,KACF,SACAvB,KAAK4lB,iBAAiB4C,QAAQ8E,EAAEruB,KAE/BgvB,GAAYhvB,IAAMowB,EAAOpwB,KAC1BiwB,EAAeG,EAErB,CACH,IAGT,CAQIH,GACDlvB,KAAKuB,KAAK,cAAe,MAG5BvB,KAAKupB,oBAELvpB,KAAKmqB,iBAAiB,IAKzBnqB,KAAKiB,GAAG,2BAA4BG,IAIjC,GACIpB,KAAKsnB,YACLtnB,KAAKqM,OACNrM,KAAKsnB,WAAWroB,IAAMmC,EAAKqK,SAH9B,CASA,IAAIlG,EAASnE,EAAKA,KAElB,GAAKmE,EAAL,CAGA,IAAI0G,EAAKjM,KAAKqM,MAAMyY,OAAO7Y,KAM3B,GALK1G,EAAO0G,KACTA,EAAK,OAKLjM,KAAK2qB,gBACL3qB,KAAKsoB,cAAcrc,KAAQ1G,EAAO0G,IAAO1G,GAAQtG,IAFpD,CAOA,GAAIsG,GACGvF,KAAK4lB,iBAAiBgD,OAAOrjB,EAAO0G,IAAM,CAC3C,IAAI+e,EAAO,CAAEY,MAAO,CAAC,GACrBZ,EAAKY,MAAM3f,GAAM1G,EAAO0G,GAExBjM,KAAKqM,MAAMijB,aAAatE,GAAM3jB,MAAMsJ,IAEjC,GAAIjL,MAAMC,QAAQgL,EAAIvP,OAASuP,EAAIvP,KAAKQ,OAAQ,CAG7C,IADU5B,KAAKsnB,WACL,OASNtnB,KAAK4lB,iBAAiBgD,OAAOrjB,EAAO0G,KACrCjM,KAAK4lB,iBAAiBgI,WACnBroB,EAAO0G,GACP0E,EAAIvP,KAAK,IAKf,IAAIgqB,EAAWprB,KAAKsoB,YAChB8C,IAAWnf,IAAO1G,EAAO0G,IAC1BjM,KAAKuB,KAAK,cAAe6pB,EAE/B,MAGgBprB,KAAKsoB,aACJ/iB,EAAO0G,IAAKjM,KAAKuB,KAAK,cAAe,MAEnDvB,KAAK4lB,iBAAiBrU,OAAOhM,EAAO0G,IACpCjM,KAAKuB,KAAK,SAAUgE,EAAO0G,GAC9B,GAEN,CAIHjM,KAAKupB,oBACLvpB,KAAKmqB,iBAhDL,CAdmB,CALnB,CAmEsB,IAGzBnqB,KAAKiB,GAAG,4BAA6BG,IAElC,IAAIsK,EAAM1L,KAAKsnB,WACf,IAAK5b,EAAK,OAEV,IAAI6jB,EAAWnuB,EAAKA,KAChBouB,GAAa,EACbC,EAAa,GACbC,EAAiB,GAGrB,GAAIhkB,aAAe1L,KAAKO,GAAGgV,MAAMmW,cAAe,CAC7C,IAAIC,EAAUjgB,EAAIsV,SAAS5hB,GAAMA,EAAEH,IAAMmC,EAAKqK,YAAa,GAC3D+jB,EAAa7D,EAAQ/pB,OAAS,EAC1B4tB,IACA7D,GAAW,IAAI3lB,SAAS5G,IACtBqwB,EACGzvB,KAAK4lB,iBACDkD,MAAMM,GACGA,EAAK,GAAGhqB,EAAE0sB,SAAS1sB,EAAE6M,SAAWsjB,IAEzCzwB,KAAKM,GAAMA,EAAEH,MAAO,GAGvBe,KAAK2mB,mBACN+I,EACG1vB,KAAK2mB,iBACDmC,MAAMM,GACGA,EAAK,GAAGhqB,EAAE0sB,SAAS1sB,EAAE6M,SAAWsjB,IAEzCzwB,KAAKM,GAAMA,EAAEH,MAAO,GAC9B,GAGT,MAGGuwB,EAAa9jB,EAAIzM,IAAMmC,EAAKqK,SACxB+jB,GACDC,EAAWroB,KAAKmoB,GAKtB,GAAIC,EAAY,CAEb,IAAIpE,EAAWprB,KAAKsoB,YAEpBmH,EAAWzpB,SAAS2pB,IACbvE,IAAW1f,EAAIO,OAAS0jB,GACzB3vB,KAAKuB,KAAK,cAAe,MAExBvB,KAAK4lB,iBAAiBgD,OAAO+G,IAC9B3vB,KAAK4lB,iBAAiBrU,OAAOoe,EAAM,IAGrC3vB,KAAK2mB,kBACN+I,EAAe1pB,SAAS2pB,IACjB3vB,KAAK2mB,iBAAiBiC,OAAO+G,IAC9B3vB,KAAK2mB,iBAAiBpV,OAAOoe,EAAM,IAIxCF,EAAW,IAAIzvB,KAAKuB,KAAK,SAAUkuB,EAAW,GACrD,CAGA,IAAIlO,EAAkB7V,EAAI8V,eACtBE,GAAMA,EAAE2L,gBAAkB3L,EAAE2L,eAAepuB,IAAMmC,EAAKqK,WAI1D,GACGC,aAAe1L,KAAKO,GAAGgV,MAAM4Z,UAC7B5N,GACAA,EAAgB3f,OAAS,EAC1B,CAEC,IAAIqK,EAAKsV,EAAgB,GAAGuD,OAAO7Y,KAEnCjM,KAAK4lB,iBAAiBkD,KAAK,CAAC,GAAG9iB,SAASsnB,IACrC,IAAIsC,EAAmB,CAAC,EAExBrO,EAAgBvb,SAAS0b,IACtB,IAAImO,EAAYvC,EAAE5L,EAAE+L,gBACH,MAAboC,IAGDnqB,MAAMC,QAAQkqB,IAWdD,EAAiBlO,EAAE+L,gBAAkBoC,EAAUltB,QAC3CsD,IAAOA,EAAEhH,IAAMgH,EAAEgG,IAAOhG,IAAMspB,IAElCK,EAAiBlO,EAAEO,YAAc2N,EAC9BlO,EAAE+L,gBACH3uB,KAAKmH,GAAMA,EAAEhH,IAAMgH,EAAEgG,IAAOhG,KAE9B4pB,GAAaN,GACbM,EAAU5wB,IAAMswB,GAChBM,EAAU5jB,IAAOsjB,IAEjBK,EAAiBlO,EAAE+L,gBAAkB,KACrCmC,EAAiBlO,EAAEO,YAAc,MACpC,IAICxiB,OAAOD,KAAKowB,GAAkBhuB,OAAS,IAMxC5B,KAAK4lB,iBAAiBgI,WAAWN,EAAEruB,GAAI2wB,GAEnC5vB,KAAK2mB,kBACN3mB,KAAK2mB,iBAAiBiH,WAAWN,EAAEruB,GAAI2wB,GAE1C5vB,KAAKuB,KAAK,SAAUvB,KAAK4lB,iBAAiB4C,QAAQ8E,EAAEruB,KACvD,GAEN,KAIH,MAAM6wB,EAAS9vB,KAAKynB,mBAEhBqI,IACD9vB,KAAK+vB,SAAS,CACXC,QAASF,EACTG,UAAW,eACXC,SAAWC,IAGJnwB,KAAK2hB,UAAU4D,SAChB4K,GAAelxB,IAAM6wB,EAAOM,kBAE5BpwB,KAAKwR,WAERxR,KAAKupB,oBACLvpB,KAAKmqB,iBAAiB,IAI5BnqB,KAAK+vB,SAAS,CACXC,QAASF,EACTG,UAAW,cACXC,SAAWC,IAOR,GAAKnwB,KAAK2hB,UAAU4D,QAuIpBvlB,KAAKupB,oBACLvpB,KAAKmqB,sBAxIL,CAGG,IAAIJ,EAAS/pB,KAAKynB,mBACd4I,EAAgBtG,EAAOuG,eAC3B,GAAI5qB,MAAMC,QAAQ0qB,GAAgB,CAK/B,IAAIjC,EAAUpuB,KAAK2nB,UAAUA,UAAU1F,WAGvCoO,EAAgBA,EAAc7oB,QAAQ4mB,IAAY,CACrD,CACA,GAAKiC,EAmBE,CAYJ,IAAIvG,EAKJ,GAHIC,IACDD,EAAaC,EAAOzB,cAElBwB,EAGF,YADA9pB,KAAKwR,WAIR,IAAIvF,EAAKjM,KAAKsnB,WAAWrb,KAKrBmiB,EAAUpuB,KAAK2nB,WAAWA,WAAW8F,iBACrC8C,EAAc,CAAC,EACfC,EAAWpC,GAAUtE,EAAWsE,IAAiB,GAChD1oB,MAAMC,QAAQ6qB,KAAWA,EAAW,CAACA,IAC1CA,EAAWA,EAAS7tB,QAAQsD,GAAMA,IAClCuqB,EAASxqB,SAASC,IACfsqB,EAAYtqB,EAAEgG,IAAOhG,CAAC,IAGzB,IAAIwqB,EAAiB,GAEJzwB,KAAK4lB,iBAAiBkD,MAAK,KAAM,IACvC9iB,SAASqL,IAEbkf,EAAYlf,EAAMpF,WAGZskB,EAAYlf,EAAMpF,IAIzBwkB,EAAerpB,KAAKiK,EAAMpF,GAC7B,IAIHjM,KAAK4lB,iBAAiBrU,OAAOkf,GAG7BF,EAAc9wB,OAAOD,KAAK+wB,GAK1B,IAAIG,EAAmB,GACnBC,EAAU,IACbJ,GAAe,IAAIvqB,SAASC,IAC1B,IAAI+kB,EAAO,CAAEY,MAAO,CAAC,GACrBZ,EAAKY,MAAM3f,GAAMhG,EAKjByqB,EAAiBtpB,KACdpH,KAAKqM,MAAMijB,aAAatE,GAAM3jB,MAAMsJ,IAE7BjL,MAAMC,QAAQgL,EAAIvP,OAASuP,EAAIvP,KAAKQ,OACrC+O,EAAIvP,KAAK4E,SAASsnB,IACfqD,EAAQvpB,KAAKkmB,EAAE,IAGd3c,EAAIvP,MACLuvB,EAAQvpB,KAAKuJ,EAAIvP,KAEvB,IAEL,IAEJI,QAAQsY,IAAI4W,GAAkBrpB,MAAK,KAChCspB,EAAQ3qB,SAASsnB,IACVttB,KAAKqsB,YAAYiB,KACbttB,KAAK4lB,iBAAiBgD,OAAO0E,EAAErhB,KACjCjM,KAAK4lB,iBAAiBlN,IAAI4U,GAEhC,GACD,GAER,KAlHoB,CAOjB,IAAI5C,EAAQ,GACR1qB,KAAK4lB,iBAAiB8E,QAAUA,IACjCA,EAAQ1qB,KAAK4lB,iBAAiB8E,SAC7B1qB,KAAK2mB,kBAAkB+D,QAAUA,IAClCA,EAAQ1qB,KAAK2mB,iBAAiB+D,SAEjC,IAAIuD,EAAajuB,KAAK4lB,iBAAiB0C,YACvCtoB,KAAKwR,WACLxR,KAAKktB,WAAW,EAAGxC,GAAOrjB,MAAK,KAC5BrH,KAAK4lB,iBAAiBsC,UAAU+F,GAChCjuB,KAAKuB,KAAK,eAAgB0sB,EAAW,GAE3C,CAkGH,CAIsB,KAM/B,MAAM2C,EAAW5wB,KAAK6qB,qBAClB+F,IACD5wB,KAAK+vB,SAAS,CACXC,QAASY,EACTX,UAAW,eACXC,SAAU,KACP,MAAMW,EAAeD,EAAStI,YACxB6H,EAAgBnwB,KAAKsoB,YAIxBuI,IAAeD,EAAStJ,WAAWrb,OACnCkkB,IAAgBnwB,KAAKsnB,WAAWrb,QAInCjM,KAAKwR,WACLxR,KAAK8qB,WAAU,IAIrB9qB,KAAK+vB,SAAS,CACXC,QAASY,EACTX,UAAW,cACXC,SAAU,KAMPlwB,KAAKwR,WACLxR,KAAK8qB,UAAU,IAI3B,CAYA,uCAAMgG,CAAkClE,EAAIvW,GAGzC,OAFAuW,EAAGtsB,OAEI,IAAIkB,SAAQ,CAAC9B,EAASoK,KAE1B,OAAQ8iB,EAAG7E,YAER,KAAK6E,EAAG1G,eAAeC,WACpByG,EAAG9B,WAAWxjB,MAAMwC,GAKvB,KAAK8iB,EAAG1G,eAAe2B,aAIpB7nB,KAAK+wB,YAAY,kBAAmBnE,GACpC5sB,KAAK+vB,SAAS,CACXC,QAASpD,EACTqD,UAAW,kBACXC,SAAU,KAEPxwB,GAAS,IAGf,MAGH,KAAKktB,EAAG1G,eAAe4B,YAKvB,QACGpoB,IAEN,GAGN,CA8DA,cAAAsxB,CAAeC,EAAOC,GAEnB,IAAIC,EAASnxB,KAAKO,GAAGma,UAClB1a,KAAK2hB,SAASwD,gBAAgBC,kBAAoB,CAAC,GAGlDplB,KAAKssB,iBACN6E,EAASnxB,KAAKssB,gBAEjB6E,EAAO9L,KAAO8L,EAAO9L,MAAQ,MAC7B8L,EAAOvX,MAAQuX,EAAOvX,OAAS,GAE/B,MAAMwX,EAAqB,CACxB/L,KAAM,MACNzL,MAAO,IAIN5Z,KAAKomB,cAAcxM,OAAOhY,OAAS,GACpCwvB,EAAmBxX,MAAMxS,KAAKpH,KAAKomB,cAItC,IAAIiL,EAAWrxB,KAAKsxB,iBACpB,IAAKtxB,KAAK2hB,SAAS4D,SAAW8L,EAC3BD,EAAmBxX,MAAMxS,KAAKiqB,QAG5B,GAAIrxB,KAAK6qB,qBAAsB,CACjC,MAAMgG,EAAe7wB,KAAK6qB,qBAAqBvC,YAE/C,IAAIrc,EAAKjM,KAAKsnB,WAAWrb,KAIrBjM,KAAK6qB,qBAAqBlJ,SAAS8D,UACpCxZ,EAAK,eAAiBA,GAErB4kB,GACDI,EAAQ,EACRC,EAAQ,KACRC,EAAS,CACN9L,KAAM,MACNzL,MAAO,CACJ,CACGnX,IAAKzC,KAAKsnB,WAAWrb,KACrB+f,KAAM,SACN3a,MAAOwf,EAAa5kB,OAO7BklB,EAAS,CACN9L,KAAM,MACNzL,MAAO,CACJ,CACGnX,IAAKzC,KAAKsnB,WAAWrb,KACrB+f,KAAM,SACN3a,MAAO,kBAKtB,CAcA,OAXI+f,EAAmBxX,MAAMhY,SACtBuvB,EAAOvX,MAAMhY,QACdwvB,EAAmBxX,MAAM2X,QAAQJ,GAEpCA,EAASC,GAKZD,EAASnxB,KAAKsnB,WAAWkK,aAAaL,GAE/B,CAACA,EAAQF,EAAOC,EAC1B,CAEA,cAAMpG,CAASmG,EAAOC,GAEflxB,KAAKimB,aAAejmB,KAAKkmB,eAAeC,aACzCnmB,KAAKimB,YAAcjmB,KAAKkmB,eAAe2B,aACvC7nB,KAAKuB,KAAK,mBAAoB,CAAC,IAGlC,IAAImK,EAAM1L,KAAKsnB,WACf,GAAW,MAAP5b,EAED,OADA1L,KAAKimB,YAAcjmB,KAAKkmB,eAAe4B,YAChCtmB,QAAQ9B,QAAQ,IAG1B,IAAI2M,EAAQX,EAAIW,QAChB,GAAa,MAATA,EAED,OADArM,KAAKimB,YAAcjmB,KAAKkmB,eAAe4B,YAChCtmB,QAAQ9B,QAAQ,IAI1B,IAAI+xB,EAAQzxB,KAAK2hB,SAASwD,gBAAgBG,YAAc,GAExD,IAAK6L,EAAQO,EAAIC,GAAM3xB,KAAKgxB,eAAeC,EAAOC,GAElDA,EAAQS,EAiFR,IAAI3G,EAAO,CACRY,MAAOuF,GAAU,CAAC,EAElBS,MArFHX,EAAQS,IAqFU,EACfhR,KAAM+Q,EACNjM,SAAUxlB,KAAKswB,gBAKL,MAATY,IACDlG,EAAKkG,MAAQA,GAIZlxB,KAAK2hB,SAAS4D,UAAYvlB,KAAK2qB,uBACzBK,EAAKkG,MAOf,MAAMW,EAAW7xB,KAAKynB,oBAAsBznB,KAAK6qB,qBAUjD,GARIgH,SACK7xB,KAAK8wB,kCAAkCe,GAO5CV,GAAQvX,OAAOhY,OAAQ,CACxB,MAAMkwB,EAAY,GAElBX,EAAOvX,MAAM5T,SAASgmB,IAEnB,GACgB,sBAAbA,EAAKA,MACQ,0BAAbA,EAAKA,KACN,CACC,MAAM+F,EAAK/xB,KAAKO,GAAGmnB,mBAAmBsE,EAAK3a,OACvC0gB,GACDD,EAAU1qB,KAAKpH,KAAK8wB,kCAAkCiB,GAE5D,WAGGvwB,QAAQsY,IAAIgY,EACrB,CAQA,OAAO,IAAItwB,SAAQ,CAAC9B,EAASoK,KAC1B,MAAM+B,EAAQ7L,KAAKO,GAAGsL,QACtBmf,EAAKnf,MAAQA,EACb7L,KAAKsmB,yBAAyBza,GAAS,CAAEnM,UAASoK,UAClD9J,KAAKgyB,aAAa3lB,EAAO2e,GAAM1jB,OAAOnG,WAC5BnB,KAAKsmB,yBAAyBza,GACrC/B,EAAO3I,EAAI,GACZ,GAER,CAEA,YAAA6wB,CAAa3lB,EAAO2e,GAMjB,OAAO3e,EAAM4f,QAAQjB,GAAM3jB,MAAMjG,GACvBpB,KAAKiyB,oBAAoB7wB,IAEtC,CASA,kBAAIkvB,GACD,OACGtwB,KAAK2hB,SAAS6D,WACbxlB,KAAK2hB,SAAS6E,eAErB,CAWA,iBAAM0L,CAAYC,EAAc3hB,GAC7B,MAAMpP,EAAO+wB,GAAc/wB,MAAQ+wB,EACnC,IAAK/wB,GAAMQ,OAER,OADA4O,MACOhP,QAAQ9B,UAGlB,MAAM0yB,EAAcD,EAAaC,YAEjC,IAAIC,EACJ,GAAIjxB,EAAKQ,OAAS,IAAK,CAEpB,IAAI6qB,EAAMzsB,KAAK4lB,iBAAiBkD,KAAK,CAAC,GAAGlnB,OACrC0wB,EAASlxB,EAAKmxB,OAAO,KACzBF,EAAW,CACRjxB,KAAMkxB,EACN7F,IAAKA,EAAMrrB,EAAKQ,OAChBwwB,cAEN,CAEA,MAAMI,EAAa,CAChBpxB,OACAqrB,IAAK0F,EAAa1F,IAClB2F,eAIH,OAFApyB,KAAK4lB,iBAAiBhb,MAAM4nB,GAErB,IAAIhxB,SAAS9B,IACjB+H,YAAWgrB,gBACFzyB,KAAKkyB,YAAYG,GAGvB5qB,YAAWgrB,UACRjiB,MACA9Q,GAAS,GACT,GAAG,GACN,GAAG,GAEZ,CAcA,mBAAAuyB,CAAoB7wB,GACjB,OAAOI,QAAQ9B,UAAU2H,MAAK,KAE3BrH,KAAK0yB,aAAetxB,EAAKgxB,YAGpBpyB,KAAK4lB,iBAAiBkD,KAAK,CAAC,GAAGlnB,QACjC5B,KAAK4lB,iBAAiBpU,WAIrBxR,KAAK2yB,oBAAoB9rB,aAAa7G,KAAK2yB,oBAC/C3yB,KAAK2yB,mBAAqBlrB,YAAWgrB,gBAE5BzyB,KAAKkyB,YAAY9wB,GAGvBpB,KAAK4lB,iBAAiBgN,MAAKH,UACxBhrB,YAAW,KACRzH,KAAKupB,mBAAmB,GACxB,KAEI,CAEJnoB,KAAM,GACNqrB,IAAKrrB,EAAKqrB,IACV2F,YAAahxB,EAAKgxB,gBAKxBpyB,KAAKotB,oBAAoBhsB,GAGZpB,KAAKynB,oBAGfznB,KAAKupB,oBACLvpB,KAAKmqB,mBAGLnqB,KAAKmqB,kBAIJ/oB,EAAKyK,QACN7L,KAAKsmB,yBAAyBllB,EAAKyK,OAAOnM,iBACnCM,KAAKsmB,yBAAyBllB,EAAKyK,QAKzC7L,KAAK2hB,SAAS4D,SACfvlB,KAAKuB,KAAK,WAAY,CAAC,GAItBvB,KAAKimB,aAAejmB,KAAKkmB,eAAe4B,cACzC9nB,KAAKimB,YAAcjmB,KAAKkmB,eAAe4B,YACvC9nB,KAAKuB,KAAK,kBAAmB,CAAC,GACjC,GACA,IAAI,GAEb,CAWA,UAAA2rB,CAAW+D,EAAOC,GAsCf,OAAO1vB,QAAQ9B,UAAU2H,MAAK,KAEvBrH,KAAK6yB,cAENhsB,aAAa7G,KAAK6yB,oBACX7yB,KAAK6yB,aAIV7yB,KAAK8yB,gBACP9yB,KAAK8yB,cAAgB,IAAItxB,SAAQ,CAAC9B,EAASoK,KACxC9J,KAAK+yB,uBAAyBrzB,EAC9BM,KAAKgzB,sBAAwBlpB,CAAM,KAMzC9J,KAAK6yB,YAAcprB,YAAW,KAE3BzH,KAAKwR,WAEExR,KAAK8qB,SAASmG,EAAOC,GACxB7pB,MAAK,KACCrH,KAAK8yB,gBACN9yB,KAAK+yB,gCACE/yB,KAAK8yB,qBACL9yB,KAAK+yB,8BACL/yB,KAAKgzB,uBAIfnsB,aAAa7G,KAAK6yB,oBACX7yB,KAAK6yB,WAAW,IAEzBvrB,OAAOnG,IACDnB,KAAK8yB,gBACN9yB,KAAKgzB,sBAAsB7xB,UACpBnB,KAAK8yB,qBACL9yB,KAAK+yB,8BACL/yB,KAAKgzB,uBAGfnsB,aAAa7G,KAAK6yB,oBACX7yB,KAAK6yB,WAAW,MAE7B,IAII7yB,KAAK8yB,gBAElB,CAuBA,YAAAG,CAAa9B,GACVnxB,KAAKssB,eAAiB6E,CACzB,CAEA,OAAA+B,CAAQvwB,GACL,IAAI+lB,EAAK1oB,KAAK4lB,iBACd,OAAI8C,EACMA,EAAGI,MAAMtS,IACb,IAAIsB,GAAU,EAiBd,OAVa9X,KAAKynB,oBACJznB,KAAK2hB,SAAS4D,SAAWzN,IACpCA,EAAU9X,KAAKkqB,oBAAoB1T,IAIlCsB,GAAWnV,IACZmV,EAAUnV,EAAO6T,IAGbsB,CAAO,IAGV,EAEb,CAEA,mBAAAoS,CAAoBD,GAEjB,GAAe,MAAXA,EAAiB,OAAO,EAE5B,IAAIkJ,EAASnzB,KAAKynB,mBAClB,GAAc,MAAV0L,EAAgB,OAAO,EAE3B,MAAMC,EAAUD,EAAO7L,WACvB,GAAe,MAAX8L,EAAiB,OAAO,EAE5B,IAAIzL,EAAY3nB,KAAK2nB,UACrB,GAAiB,MAAbA,EAAmB,OAAO,EAI9B,IAAImC,EAAaqJ,EAAO7K,YACxB,GAAkB,MAAdwB,EACD,OAAO,EAGV,IAAIuJ,EAAUpJ,EAAQtC,EAAU8F,gBAChC,GAAe,MAAX4F,EAAiB,CAElB,IAAIpJ,EAAQtC,EAAU1F,YAGnB,OAAO,EAFPoR,EAAUpJ,EAAQtC,EAAU1F,WAIlC,CAEA,IAAIhW,EAAK0b,EAAU7C,OAAO7Y,KAG1B,OAAIonB,EAAQ1wB,OAEN0wB,EAAQ1wB,QACJuG,IACGA,EAAI+C,IAAO/C,EAAIjK,IAAMiK,KACrB4gB,EAAWsJ,EAAQnnB,OAAS6d,EAAW7qB,IAAM6qB,KAClDloB,OAAS,GAIVyxB,EAAQpnB,IAAOonB,EAAQp0B,IAAMo0B,KAC7BvJ,EAAWsJ,EAAQnnB,OAAS6d,EAAW7qB,IAAM6qB,EAGvD,CAEA,QAAAtY,GACOxR,KAAK4lB,kBAAkB5lB,KAAK4lB,iBAAiBpU,WAE7CxR,KAAK2mB,kBAAkB3mB,KAAK2mB,iBAAiBnV,WAEjDxR,KAAKimB,YAAcjmB,KAAKkmB,eAAeC,UAC1C,CAEA,cAAImN,GACD,OAAOtzB,KAAK0yB,cAAgB,CAC/B,CAUA,IAAAa,GACGlyB,QAAQC,MAAM,mDACjB,CAEA,MAAAkyB,GACGnyB,QAAQC,MAAM,qDACjB,CAEA,eAAAmyB,CAAgBC,GAEb,IAAI/G,EAAQ3sB,KAAK+lB,mBAAmBve,QAAQksB,GAG5C1zB,KAAK+lB,mBAAmBwM,OAAO5F,EAAO,EACzC,CAQA,cAAA2E,GACG,IAAItF,EAAO,KACX,MAAM2H,EAAqB3zB,KAAKynB,mBAC1BE,EAAY3nB,KAAK2nB,UACvB,GAAIgM,GAAsBhM,EAAW,CAClC,MAAMiM,EAAeD,GAAoBrL,aAAarpB,GACtD,GAAI20B,EAAc,CACf,MAAMtF,EAAW,GAAG3G,EAAU2G,cAAc3G,EAAUkM,gBAEtD,IAAIC,EAGDA,EADCnM,EAAUmE,MACE,WAGK,YAAZwC,EACO,gBAIA,SAGhBtC,EAAO,CACJF,MAAOnE,EAAUmE,MACjBrpB,IAAKklB,EAAU1oB,GACf+sB,KAAM8H,EACNziB,MAAOsW,EAAU6G,iBACdmF,EAAmB/N,iBAAiB4C,QAAQoL,IAGrD,CACH,CACA,OAAO5H,CACV,CAcA,uBAAAlG,CAAwBqL,EAAS,MAY9B,GAL+B,MAA3BnxB,KAAK+zB,qBACN/zB,KAAK+zB,mBAAqB/zB,KAAKO,GAAGyzB,iBAC/B,GAAGh0B,KAAKf,wBAGVe,KAAKsnB,WAAY,CAIlB,IAAIlC,EAFJplB,KAAK+zB,mBAAmBE,WAAWj0B,KAAKsnB,WAAWgD,UAK/CtqB,KAAKsnB,sBAAsBtnB,KAAKO,GAAGgV,MAAMmW,gBAC1CtG,EAAmBplB,KAAKsnB,WAAWsE,OAYlCxG,EACDplB,KAAK+zB,mBAAmBG,SAAS9O,GAC/BplB,KAAK+zB,mBAAmBG,SAAS,CAAC,EAC1C,MACGl0B,KAAK+zB,mBAAmBE,WAAW,IACnCj0B,KAAK+zB,mBAAmBG,SACrBrP,EAAclD,SAASwD,gBAAgBC,kBAMV,MAA/BplB,KAAKm0B,yBACNn0B,KAAKm0B,uBAAyBn0B,KAAKO,GAAGyzB,iBACnC,GAAGh0B,KAAKf,4BAMde,KAAKm0B,uBAAuBF,WACzBj0B,KAAKsnB,WAAatnB,KAAKsnB,WAAWgD,SAAW,IAI5C6G,IAAQnxB,KAAK2hB,SAASwD,gBAAgBC,iBAAmB+L,GAE7D,IAAIxuB,EAAS3C,KAAKO,GAAGma,UAClB1a,KAAK2hB,SAASwD,iBAAiBC,kBAAoB,CAChDC,KAAM,MACNzL,MAAO,KAKbjX,EAAO0iB,KAAO1iB,EAAO0iB,MAAQ,MAC7B1iB,EAAOiX,MAAQjX,EAAOiX,OAAS,GAG/B,IAAIyX,EAAWrxB,KAAKsxB,iBACpB,GAAID,EAAU,CAWX,IAAI+C,GAAiB,EACjB50B,EAAOC,OAAOD,KAAK6xB,IACtB1uB,EAAOiX,OAAS,IAAI5T,SAAStE,IAC3B,GAAI0yB,EAAgB,OACpB,IAAIC,GAAW,EACf70B,EAAKwG,SAASiB,IACPvF,EAAEuF,IAAMoqB,EAASpqB,KAClBotB,GAAW,EACd,IAEHD,EAAiBC,CAAQ,IAEvBD,IAEiB,OAAfzxB,EAAO0iB,KACR1iB,EAAOiX,MAAMxS,KAAKiqB,GAElB1uB,EAAS,CAAE0iB,KAAM,MAAOzL,MAAO,CAACjX,EAAQ0uB,IAGjD,CAgBA,IAdK1uB,EAAOiX,OAAS,IAAIhY,OAAS,IAAM5B,KAAK2qB,eAC1C3qB,KAAKm0B,uBAAuBD,SAASvxB,GAErC3C,KAAKm0B,uBAAuBD,SACzBrP,EAAclD,SAASwD,gBAAgBC,kBAKnB,MAAtBplB,KAAKs0B,gBACNt0B,KAAKs0B,cAAgBt0B,KAAKO,GAAGyzB,iBAC1B,GAAGh0B,KAAKf,mBAGVe,KAAKsnB,WAAY,CAClB,IAAIiN,GAAav0B,KAAKw0B,YAAc,IAAI7xB,QACpC8xB,IACGA,EAAEC,WACFD,EAAEE,WAAa,IAAIntB,QAAQxH,KAAKsnB,WAAWroB,KAAO,IAEzD,GAAIs1B,GAAaA,EAAU3yB,OAAS,EAAG,CAEpC5B,KAAKs0B,cAAcL,WAAWj0B,KAAKsnB,WAAWgD,UAAY,IAG1D,IAAIsK,EAAa,GACjBL,EACI5xB,QACG8xB,GAAMA,EAAE9xB,QAAU8xB,EAAE9xB,OAAOiX,OAAS6a,EAAE9xB,OAAOiX,MAAMhY,SAEtDoE,SAASyuB,IACP,IAAII,GAAUJ,EAAE9xB,OAAOiX,OAAS,IAAIjX,QAChCjB,GACE1B,KAAKsnB,WAAWgD,QAAQ5I,GAAMA,EAAEziB,IAAMyC,EAAEe,MAAKb,OAAS,IAG5DgzB,EAAaA,EAAWjb,OAAOkb,EAAO,IAG5C,IAAIC,EAAa,CACdzP,KAAM,KACNzL,MAAOgb,GAEV50B,KAAKs0B,cAAcJ,SAASY,EAC/B,CACH,CACH,CAEA,WAAInV,GACD,OAAO3f,KAAK6mB,YAAa,CAC5B,CAMA,gBAAIkO,GACD,MAAO,CACJC,OAAQ,EACRC,OAAQ,EAEd,CAEA,YAAItP,GACD,OAAO3lB,KAAK2hB,SAASgE,UAAYd,EAAcc,QAClD,CAYA,kBAAAE,GACG,IAAIvkB,EAAQ,IAAIhC,MACb,qGAGH,OADA+B,QAAQC,MAAMA,GACP,IACV,CASA,kBAAAslB,GAIG,OAHAvlB,QAAQC,MACL,qGAEI,IACV,CAEA,mBAAA8rB,CAAoBhsB,EAAO,CAAC,GAO5B,CAkGA,gBAAA6tB,CAAiBtD,EAASpmB,GACvB,IAAIimB,EAAc,CAAC,EAgCnB,OA7BA/rB,OAAOD,KAAK+F,GAAQS,SAASvD,IAC1BkpB,EAAQ3lB,SAASkvB,IACd,IAAIpJ,EAAQ9rB,KAAKsnB,WAAWyE,YAAYmJ,EAAMj2B,IAE9CusB,EAAY,GAAGM,KAASrpB,KAAS8C,EAAO9C,GAI9B,gBAAPA,GACA8C,EAAqB,cACrBA,EAAqB,aAAE3D,SAEvB4pB,EAAY5L,aAAe,GAE3Bra,EAAqB,aAAES,SAASmvB,IAC7B,IAAIC,EAAc,CAAC,EAEnB31B,OAAOD,KAAK21B,GAAMnvB,SAASqvB,IACT,iBAAXA,EACDD,EAA2B,cAAID,EAAoB,cACjDC,EAAY,GAAGtJ,KAASuJ,KAAaF,EAAKE,EAAQ,IAG1D7J,EAAY5L,aAAaxY,KAAKguB,EAAY,IAEhD,GACD,IAGE5J,CACV,CAEA,WAAAa,CAAYpC,EAASmC,GAAuB,GACzC,IAAIloB,GAAS,EAab,OATIlE,KAAK+zB,qBAAuB3H,IAC7BloB,EAASA,GAAUlE,KAAK+zB,mBAAmBjc,QAAQmS,IAElDjqB,KAAKm0B,yBACNjwB,EAASA,GAAUlE,KAAKm0B,uBAAuBrc,QAAQmS,IAEtD/lB,GAAUlE,KAAKs0B,gBAChBpwB,EAASA,GAAUlE,KAAKs0B,cAAcxc,QAAQmS,IAE1C/lB,CACV,CAEA,8BAAA2pB,CAA+BpiB,EAAUwe,GACtC,MAAMqL,EAASt1B,KAAKynB,mBACd8N,EAAaD,GAAQhN,YAG3B,GACGgN,GAAQhO,WAAWroB,IAAMwM,GACzB8pB,GACAA,EAAWt2B,IAAMgrB,GAAShrB,GAC3B,CACC,MAAMyM,EAAM1L,KAAKsnB,WACXkO,EAAcx1B,KAAK2nB,UACzB,IAAI8N,EAAcxL,EAAQuL,EAAY7N,UAAU8F,gBAC5CgI,IAAgB/vB,MAAMC,QAAQ8vB,KAC/BA,EAAc,CAACA,KAEjBA,GAAe,IAAIzvB,SAASojB,IAC1B,GAAY,MAARA,IAECppB,KAAK4lB,iBAAiBgD,OAAOQ,EAAK1d,EAAIO,OAAQ,CAEhD,MAAMypB,EAAU11B,KAAKO,GAAGma,UAAU0O,GAClCsM,EAAQF,EAAY/H,gBAAkB,CAACxD,GACvCjqB,KAAK4lB,iBAAiBlN,IAAIgd,EAC7B,KAIH11B,KAAKuB,KAAK,cACb,CACH,CAIA,KAAAo0B,CAAMhU,GACHA,EAAWA,GAAY3hB,KAAK4H,QAC5B,IAAIguB,EAAuB,IAAI51B,KAAKF,YAAY6hB,EAAU3hB,KAAKO,IAC/Dq1B,EAAqBnP,aAAezmB,KAAKymB,aACzCmP,EAAqB3P,YAAcjmB,KAAKimB,YAGxC2P,EAAqBzB,uBAAuBD,SACzCvS,EAASA,SAASwD,gBAAgBC,kBAGvB,MACPwQ,EAAqBhQ,kBACtBgQ,EAAqBhQ,iBAAiBhb,MACnC5K,KAAK4lB,iBACDkD,KAAK,CAAC,GACNnmB,QAAQ6T,GACNof,EAAqBzB,uBAAuBrc,QAAQtB,MAI5Dof,EAAqBjP,kBACtBiP,EAAqBjP,iBAAiB/b,MACnC5K,KAAK2mB,iBACDmC,KAAK,CAAC,GACNnmB,QAAQ6T,GACNof,EAAqBzB,uBAAuBrc,QAAQtB,KAGhE,EAGHqf,GASAD,EAAqBzL,kBAErB,IAAI2L,EAAW91B,KAAKsoB,YASpB,OARIwN,IAGGA,EAAS72B,KAAI62B,EAAWA,EAAS72B,IAErC22B,EAAqB1N,UAAU4N,IAG3BF,CAMV,CAEA,aAAAG,CAAcC,GACX,IAAItqB,EAAM1L,KAAK4H,QAcf,OAXIouB,GAASpc,OAAOhY,SACb8J,EAAIiW,SAASwD,gBAAgBC,kBAAkBxL,OAAOhY,OACvD8J,EAAIiW,SAASwD,gBAAgBC,iBAAiBxL,MAC3ClO,EAAIiW,SAASwD,gBAAgBC,iBAAiBxL,MAAMD,OACjDqc,EAAQpc,OAGdlO,EAAIiW,SAASwD,gBAAgBC,iBAAmB4Q,GAGvCh2B,KAAK21B,MAAMjqB,EAE7B,CAiBA,QAAAqkB,CAASkG,GACN,IAAKA,IAAQA,EAAIjG,UAAYiG,EAAI/F,SAAU,OAE3ClwB,KAAKk2B,SAAWl2B,KAAKk2B,UAAY,GAEjC,IAAItN,EAAS5oB,KAAKk2B,SAASpN,MAAMzpB,GACvBA,EAAE2wB,SAAWiG,EAAIjG,SAAW3wB,EAAE4wB,WAAagG,EAAIhG,cAIpDrH,GAAUA,EAAOhnB,OAAS,KAE5B5B,KAAKk2B,SAAS9uB,KAAK,CAChB4oB,QAASiG,EAAIjG,QACbC,UAAWgG,EAAIhG,UACfC,SAAU+F,EAAI/F,WAIjB+F,EAAIjG,QAAQ/uB,GAAGg1B,EAAIhG,UAAWgG,EAAI/F,UAExC,CAQA,UAAAiG,GACOn2B,KAAKk2B,UAAYl2B,KAAKk2B,SAASt0B,OAAS,GACzC5B,KAAKk2B,SAASlwB,SAAS3G,IACpBA,EAAE2wB,QAAQoG,eAAe/2B,EAAE4wB,UAAW5wB,EAAE6wB,SAAS,GAG1D,CASA,WAAAa,CAAYd,EAAWD,EAAU,MAC1BhwB,KAAKk2B,UAAUt0B,OAAS,GAAKquB,IAC9BjwB,KAAKk2B,SAASlwB,SAAS3G,IAChB4wB,GAAa5wB,EAAE4wB,WAAeD,GAAWA,GAAW3wB,EAAE2wB,SACvD3wB,EAAE2wB,QAAQoG,eAAe/2B,EAAE4wB,UAAW5wB,EAAE6wB,SAAS,IAGvDlwB,KAAKk2B,SAAWl2B,KAAKk2B,SAASvzB,QAAQtD,GAAMA,EAAE4wB,WAAaA,IAEjE,CAEA,cAAIuE,GACD,MAAO,EACV,CAEA,kBAAI7J,GACD,OACG3qB,KAAK2hB,SAASuD,0BACZllB,KAAK2hB,SAASqD,uBAAyBhlB,KAAK2hB,SAASsD,YAE7D,CAEA,wBAAI4F,GACD,OAAK7qB,KAAK2qB,gBAEF3qB,KAAKO,IAAMA,IAAImnB,mBACpB1nB,KAAK2hB,SAASuD,wBAHgB,IAKpC,CAEA,oBAAIkL,GACD,OAAOpwB,KAAK2oB,kBACf,CAEA,SAAA0N,GAYG,OAAOr2B,KAAK8wB,kCAAkC9wB,KACjD,cCv3GHL,EAAOC,QAAU,MACd,WAAAE,CAAYud,EAAY9c,GACrBP,KAAKO,GAAKA,EACVP,KAAK6f,WAAWxC,EACnB,CASA,UAAAwC,CAAWxC,GASJA,EAAWpe,KACZe,KAAKf,GAAKoe,EAAWpe,IAExBe,KAAK4L,KACFyR,GAAYzR,MACZyR,GAAYrD,MAAMpO,MAClByR,GAAYrD,MAAMxW,OAClB6Z,GAAYrD,MAAM4F,eAAe,IAAIpc,OACrC,GACExD,KAAK4L,MACP5L,KAAKO,GAAGoJ,OAAO2sB,QACZ,IAAIh3B,MAAM,2CACV,CACG4B,QAAS,gCACTmc,eAITrd,KAAK+I,KAAOsU,EAAWtU,MAAQsU,GAAYrD,MAAMjR,MAAQ,GACzD/I,KAAKga,KAAOqD,EAAWrD,MAAQ,IAClC,CAaA,KAAApS,GACG,MAAO,CACJ3I,GAAIe,KAAKf,GACT2M,KAAM5L,KAAK4L,KACX7C,KAAM/I,KAAK+I,KACXiR,KAAMha,KAAKga,KAEjB,CAQA,OAAAtS,GACG,OAAO1H,KAAKO,GAAG4Z,kBAAkBna,KAAKf,GACzC,CAQA,UAAM0I,GACH,OAAI3H,KAAKf,GACCe,KAAKO,GAAG6Z,iBAAiBpa,KAAKf,GAAIe,KAAK4H,SAEvC5H,KAAKO,GAAGgX,iBAAiBvX,KAAK4H,QAE3C,oBC9EH,MAAM+c,EAAgB,EAAQ,OACxB4R,EAAsB,EAAQ,OAC9BC,EAAe,EAAQ,MAEvBC,EAAc,EAAQ,OAEtBC,EAAiB,EAAQ,KAEzBC,EAAU,EAAQ,OAClBxH,EAAW,EAAQ,OACnByH,EAAmB,EAAQ,OAC3BC,EAAiB,EAAQ,MACzBC,EAAc,EAAQ,OACtBC,EAAsB,EAAQ,OAC9BC,EAAmB,EAAQ,OAC3BtL,EAAgB,EAAQ,OAExBuL,EAAS,EAAQ,MACjBC,EAAY,EAAQ,OAEpBC,EAAuB,EAAQ,OAC/BC,EAAgB,EAAQ,OACxBC,EAAuB,EAAQ,OAE/BC,EAAS,EAAQ,OAEjBC,EAAmB,EAAQ,OAC3BC,EAAiB,EAAQ,OACzBC,EAAuB,EAAQ,OAM/BC,EAAY,EAAQ,OACpBliB,EAAgB,EAAQ,OAExB4H,EAAY,EAAQ,OAEpBvd,EAAe,EAAQ,OAujC7BF,EAAOC,QArjCP,cAAwBC,EACrB,WAAAC,CAAYsV,GAaT,GANArV,QACAC,KAAKgO,gBAAgB,GAErBhO,KAAKwX,aAAepC,GAAe,CAAC,EAGhC1P,MAAMC,QAAQyP,GAAc,CAC7B,IAAIuiB,EAAO,CAAC,EACZviB,EAAYpP,SAASsnB,IAClBqK,EAAKrK,EAAEruB,IAAMquB,CAAC,IAEjBttB,KAAKwX,aAAemgB,CACvB,CAOA33B,KAAK43B,iBAAmB,GAGxB53B,KAAK63B,YAAc,GAGnB73B,KAAK83B,UAAY,GAGjB93B,KAAK+3B,cAAgB,GAGrB/3B,KAAKg4B,YAAc,GAGnBh4B,KAAKi4B,UAAY,GAGjBj4B,KAAKk4B,oBAAsB,GAM3Bl4B,KAAKuV,MAAQ,CACVoP,gBACA8R,cACAD,eACAE,iBACAC,UACAvZ,YACA+R,WACAyH,mBACAC,iBACAC,cACAC,sBACArL,gBACAyL,uBAOAE,uBAEAE,mBACAC,iBACAC,wBAOHz3B,KAAK4Z,MAAQ,CAOVoB,OAAQ,SAAUvY,GAKf,OAJcwY,OACX,4EACA,KAEYC,KAAKzY,EACvB,EASA01B,WAAY,SAAUvsB,GACnB,OAAOkG,OAAOlG,GAAMhG,QAAQ,gBAAiB,GAChD,EASAwyB,wBAAyB,SAAUxsB,GAChC,MAAO,MAAQ5L,KAAKm4B,WAAWvsB,EAClC,EAUAysB,sBAAuB,SAAUjK,GAC9B,OAAOpuB,KAAKm4B,WAAW/J,GAAW,YACrC,EAWAkK,kBAAmB,SAAUC,EAAYtW,GACtC,IAAIuW,EAASD,EAAa,IAAMtW,EAIhC,OAFIuW,EAAO52B,OAAS,KAAI42B,EAASA,EAAOC,UAAU,EAAG,KAE9CD,CACV,EAcAE,0BAA2B,SACxBC,EACAC,EACAC,EACAzK,GAeA,OAZAuK,EAAU34B,KAAKo4B,wBAAwBO,IAC3B/2B,OAAS,KAAI+2B,EAAUA,EAAQF,UAAU,EAAG,KAEpDG,EAAgBh3B,OAAS,KAC1Bg3B,EAAkBA,EAAgBH,UAAU,EAAG,KAE9CI,EAAgBj3B,OAAS,KAC1Bi3B,EAAkBA,EAAgBJ,UAAU,EAAG,MAElDrK,EAAUpuB,KAAKm4B,WAAW/J,IACdxsB,OAAS,KAAIwsB,EAAUA,EAAQqK,UAAU,EAAG,KAEjD,gDACH7yB,QAAQ,YAAa+yB,GACrB/yB,QAAQ,eAAgBgzB,GACxBhzB,QAAQ,eAAgBizB,GACxBjzB,QAAQ,YAAawoB,EAC5B,EASA0K,mBAAoB,SAAUP,GAC3B,MAAO,MAAMv4B,KAAKm4B,WAAWI,IAChC,GAIHv4B,KAAK2J,OAAO2sB,QAAU,IAAIztB,KACvB7I,KAAK2J,OAAO,aAAcd,EAAO,EAGpC7I,KAAK2J,OAAOC,UAAY,IAAIf,KACzB7I,KAAK2J,OAAO,eAAgBd,EAAO,CAEzC,CAQA,eAAAkwB,CAAgBzL,GACb,GAAqB,iBAAVA,EAAEtT,KACV,IACGsT,EAAEtT,KAAOrT,KAAKiE,MAAM0iB,EAAEtT,KACzB,CAAE,MAAO3a,GACNgC,QAAQmJ,IAAInL,GACZgC,QAAQC,MAAM,2BAA2BgsB,EAAEruB,MAC9C,CAEN,CAEA,IAAAqB,GACG,IAAI04B,EAAiBv5B,OAAOD,KAAKQ,KAAKwX,cAAc1Y,KAChDmI,GAAMjH,KAAKwX,aAAavQ,KA6B5B,OAxBA+xB,EAAehzB,SAASsnB,IACrBttB,KAAK+4B,gBAAgBzL,EAAE,IAI1B,CACG,SACA,QACA,iBACA,UACA,OACA,OACA,eACDtnB,SAAS+C,IACOiwB,EAAer2B,QAAQ2qB,GAAMA,EAAEvkB,MAAQA,IAC7C/C,SAASkU,IACf,IAAI,QAAE+e,EAAO,MAAEC,GAAUl5B,KAAKm5B,gBAAgBjf,GAC1C+e,GACDj5B,KAAKi5B,GAAS7xB,KAAKpH,KAAKk5B,GAAOhf,EAAIF,MACtC,GACD,IAGLha,KAAKuB,KAAK,sBACHC,QAAQ9B,SAClB,CAmBA,eAAAy5B,CAAgBjf,GACb,OAAQA,EAAInR,MACT,IAAK,cACF,MAAO,CAAEkwB,QAAS,mBAAoBC,MAAO,kBAEhD,IAAK,iBACF,MAAO,CACJD,QAAS,sBACTC,MAAO,qBAGb,IAAK,OACF,MAAO,CAAED,QAAS,YAAaC,MAAO,WAEzC,IAAK,QACF,MAAO,CAAED,QAAS,YAAaC,MAAO,WAEzC,IAAK,SACF,MAAO,CAAED,QAAS,cAAeC,MAAO,aAE3C,IAAK,UACF,MAAO,CAAED,QAAS,gBAAiBC,MAAO,cAE7C,IAAK,QACF,MAAO,CAAED,QAAS,cAAeC,MAAO,YAE3C,QAEG,MAAO,CAAED,QAAS,KAAMC,MAAO,MAExC,CAiBA,cAAApa,CAAe7f,EAAIm6B,GAAQ,GACxB,OAAIp5B,KAAKwX,aAAavY,GACfm6B,EACMp5B,KAAKwX,aAAavY,GAElBe,KAAKwX,aAAavY,GAAI+a,KAG5B,IACV,CASA,aAAA3C,CAAc9R,GACX,OAAO,IAAIixB,EAAajxB,EAAQvF,KACnC,CAUA,gBAAAq5B,CAAiBC,EAAO,IAiBrB,OAhBK5zB,MAAMC,QAAQ2zB,KAChBA,EAAO,CAACA,IAKXA,EAAKtzB,SAASsnB,IACXttB,KAAK+4B,gBAAgBzL,GACrBttB,KAAKwX,aAAa8V,EAAEruB,IAAMquB,CAAC,IAI9BgM,EAAKtzB,SAASsnB,IACXttB,KAAKia,eAAe,UAAWqT,EAAEruB,GAAIquB,EAAE,IAGnC9rB,QAAQ9B,SAClB,CAaA,cAAAua,CAAenN,EAAI7N,EAAIib,GACpB,IAEOkI,GAFH,QAAE6W,EAAO,MAAEC,GAAUl5B,KAAKm5B,gBAAgBjf,GAC9C,GAAI+e,EAED,OAAQnsB,GACL,IAAK,UACF9M,KAAKi5B,GAAS7xB,KAAKpH,KAAKk5B,GAAOhf,EAAIF,OACnCha,KAAKuB,KAAK,qBAAsB2Y,EAAIF,MACpC,MAEH,IAAK,UAEFoI,EAAOpiB,KAAKi5B,GAASnQ,MAAMwE,GAAMA,EAAEruB,IAAMA,IAGzCe,KAAKi5B,GAAWj5B,KAAKi5B,GAASt2B,QAAQ2qB,GAAMA,EAAEruB,IAAMA,IAEpDe,KAAKi5B,GAAS7xB,KAAKpH,KAAKk5B,GAAOhf,EAAIF,OAK/BoI,EACDA,EAAK7gB,KAAK,qBAAsB2Y,EAAIF,MAEpCha,KAAKuB,KAAK,qBAAsB2Y,EAAIF,MAEvC,MAEH,IAAK,aAEFoI,EAAOpiB,KAAKi5B,GAASnQ,MAAMwE,GAAMA,EAAEruB,IAAMA,OAGtCe,KAAKi5B,GAAWj5B,KAAKi5B,GAASt2B,QAAQ2qB,GAAMA,EAAEruB,IAAMA,IAGpDmjB,EAAK7gB,KAAK,qBAAsB2Y,EAAIF,MAEpCha,KAAKuB,KAAK,qBAAsB2Y,EAAIF,OAKnD,CAaA,YAAAiN,CAAavkB,EAAK,MAAM,IACrB,OAAQ1C,KAAK43B,kBAAoB,IAAIj1B,OAAOD,EAC/C,CAYA,eAAA62B,CAAgBC,GACb,OAAOx5B,KAAKinB,cAAcrG,GAAMA,EAAE3hB,IAAMu6B,IAAI,EAC/C,CAUA,cAAAC,CAAel0B,GAEZ,MAAsB,UAAlBA,EAAO+X,QACDtd,KAAK05B,qBAAqBn0B,GAG7B,IAAIof,EAAcpf,EAAQvF,KACpC,CAUA,oBAAA05B,CAAqBn0B,GAClB,OAAO,IAAIgxB,EAAoBhxB,EAAQvF,KAC1C,CAWA,eAAAwgB,CAAgB7d,EAAS,MAAM,IAC5B,OAAQ3C,KAAKk4B,qBAAuB,IAAIv1B,OAAOA,EAClD,CAYA,kBAAA+kB,CAAmB8R,GAEhB,OAAKA,EAEEx5B,KAAKwgB,iBAAiBkI,GACnBA,EAAGzpB,IAAMu6B,GAAM9Q,EAAG9c,MAAQ4tB,GAAM9Q,EAAGllB,OAASg2B,IACnD,GAJa,IAKnB,CASA,iBAAAG,CAAkBp0B,GACf,IAAImjB,EAAK,IAAIsO,EAAiBzxB,EAAQvF,MAOtC,OANA0oB,EAAGznB,GAAG,aAAa,KAEhBjB,KAAKk4B,oBAAsBl4B,KAAKk4B,oBAAoBv1B,QAChD2qB,GAAMA,EAAEruB,IAAMypB,EAAGzpB,IACpB,IAEGypB,CACV,CAaA,QAAAkR,CAASr0B,EAAQuf,GAEd,OAAO4R,EAAemD,SAASt0B,EAAQuf,EAC1C,CAOA,QAAAgV,CAASv0B,EAAQuf,GACd,OAAO,IAAI6R,EAAQpxB,EAAQuf,EAC9B,CAaA,KAAAjK,GACG,MAAO,CAACpY,EAAK6C,EAASC,EAAS,MAC5B,IAAI/B,EAAQf,EAcZ,OAbI6C,IACGI,MAAMC,QAAQL,GACfC,EAASD,EAET9B,EAAQ8B,GAIdC,EAAOS,SAAQ,CAACC,EAAGC,KAChB,IAAIC,EAAM,IAAID,KACd1C,EAAQA,EAAM4C,WAAWD,EAAKF,EAAE,IAG5BzC,CAAK,CAElB,CAWA,OAAAwd,CAAQre,EAAS,MAAM,IACpB,OAAQ3C,KAAK63B,aAAe,IAAIl1B,OAAOA,EAC1C,CAQA,UAAAgJ,CAAW6tB,GACR,OAAOx5B,KAAKghB,SAAS5hB,GACXA,EAAEH,IAAMu6B,GAAMp6B,EAAEwM,MAAQ4tB,GAAMp6B,EAAEoE,OAASg2B,IAChD,EACN,CAUA,SAAAO,CAAUx0B,GAoBP,OAjByB,GAArBA,EAAOy0B,WACC,IAAIpD,EAAiBrxB,EAAQvF,MACX,GAArBuF,EAAO00B,WACJ,IAAIpD,EAAetxB,EAAQvF,MACT,GAArBuF,EAAO20B,WACJ,IAAInD,EAAoBxxB,EAAQvF,MACnB,GAAhBuF,EAAO40B,MAAwB,IAAIrD,EAAYvxB,EAAQvF,MAClD,IAAImvB,EAAS5pB,EAAQvF,KAWtC,CAEA,UAAAo6B,GACG,OAAOp6B,KAAK2L,WAAW,uCAC1B,CAEA,cAAA0uB,GACG,OAAOr6B,KAAK2L,WAAW,uCAC1B,CAEA,uBAAA2uB,GACG,OAAOt6B,KAAK2L,WAAW,uCAC1B,CAEA,iBAAA4uB,GACG,OAAOv6B,KAAK2L,WAAW,uCAC1B,CAEA,qBAAA6uB,GACG,OAAOx6B,KAAK2L,WAAW,uCAC1B,CAEA,UAAA8uB,GACG,OAAOz6B,KAAK2L,WAAW,uCAC1B,CAEA,WAAA+uB,GACG,OAAO16B,KAAK2L,WAAW,uCAC1B,CAEA,WAAAgvB,GACG,OAAO36B,KAAK2L,WAAW,uCAC1B,CAEA,UAAAivB,GACG,OAAO56B,KAAK2L,WAAW,uCAC1B,CAEA,SAAAkvB,GACG,OAAO76B,KAAK2L,WAAW,uCAC1B,CAEA,YAAAmvB,GACG,OAAO96B,KAAK2L,WAAW,uCAC1B,CAaA,KAAAwV,CAAMxe,EAAS,MAAM,IAClB,OAAQ3C,KAAK83B,WAAa,IAAIn1B,OAAOA,EACxC,CAQA,MAAAo4B,CAAOvB,GACJ,OAAOx5B,KAAKmhB,OAAOC,GACTA,EAAEniB,IAAMu6B,GAAMpY,EAAExV,MAAQ4tB,GAAMpY,EAAE5d,OAASg2B,IAChD,EACN,CAUA,OAAAwB,CAAQz1B,GAGL,OAFc,IAAI0xB,EAAO1xB,EAAQvF,KAGpC,CAaA,KAAA4jB,CAAMjhB,EAAS,MAAM,IAClB,OAAQ3C,KAAKi4B,WAAa,IAAIt1B,OAAOA,EACxC,CAQA,MAAAs4B,CAAOzB,GACJ,OAAOx5B,KAAK4jB,OAAO6Q,GACTA,EAAEx1B,IAAMu6B,GAAM/E,EAAE7oB,MAAQ4tB,GAAM/E,EAAEjxB,OAASg2B,IAChD,EACN,CAUA,OAAA0B,CAAQj8B,EAAI87B,GACT,IAAII,EAAUn7B,KAAK8e,eAAe7f,GAClC,OACiB,IAAIq4B,EADjB6D,GAIY,CACVxZ,SAAU,CACPyZ,KAAML,IALsB/6B,KAYxC,CAaA,SAAAwiB,CAAU7f,EAAS,MAAM,IACtB,OAAQ3C,KAAK+3B,eAAiB,IAAIp1B,OAAOA,EAC5C,CAQA,WAAA0c,CAAYma,GACT,OAAOx5B,KAAKwiB,WAAW/H,GACbA,EAAExb,IAAMu6B,GAAM/e,EAAE7O,MAAQ4tB,GAAM/e,EAAEjX,OAASg2B,IAChD,EACN,CAUA,UAAA6B,CAAW91B,GACR,OAAO,IAAI2xB,EAAU3xB,EAAQvF,KAChC,CAYA,iBAAAs7B,CAAkBr8B,EAAIyjB,GACnB,IAAI6Y,EAAUv7B,KAAK8e,eAAe7f,GAClC,GAAIs8B,EACD,OAAQA,EAAQxyB,MACb,KAAKouB,EAAqBqE,WAAWzyB,KAClC,OAAO,IAAIouB,EAAqBoE,EAAS7Y,EAAS1iB,MAGrD,KAAKo3B,EAAcoE,WAAWzyB,KAC3B,OAAO,IAAIquB,EAAcmE,EAAS7Y,EAAS1iB,MAG9C,QAEG,OAAOq3B,EAAqBoE,QAAQF,EAAS7Y,EAAS1iB,MAI/D,OAAO,IACV,CAYA,mCAAA07B,CAAoCC,EAASjZ,GAC1C,IAAIkZ,EAAa,KAEjB,OAAQD,EAAQ5yB,MACb,IAAK,mBACF6yB,EAAa,IAAIzE,EAAqB,CAAC,EAAGzU,EAAS1iB,MACnD,MAEH,IAAK,YACF47B,EAAa,IAAIxE,EAAc,CAAC,EAAG1U,EAAS1iB,MAC5C,MAEH,QACG,IAAI67B,EAAaxE,EAAqByE,qBAAqBH,GACvDE,IACDD,EAAavE,EAAqBoE,QAC/BI,EACAnZ,EACA1iB,OAWZ,OAHI47B,GACDA,EAAWG,YAAYJ,GAEnBC,CACV,CAWA,OAAAvY,CAAQ1gB,EAAS,MAAM,IACpB,OAAQ3C,KAAKg4B,aAAe,IAAIr1B,OAAOA,EAC1C,CAgBA,SAAA+jB,CAAU8S,GACP,OAAOx5B,KAAKqjB,SAASC,GACXA,EAAErkB,IAAMu6B,GAAMlW,EAAE1X,MAAQ4tB,GAAMlW,EAAE9f,OAASg2B,IAChD,EACN,CAQA,QAAAwC,CAASz2B,GACN,OAAO,IAAImmB,EAAcnmB,EAAQvF,KACpC,CAQA,YAAAi8B,CAAaC,EAAKC,GAIf,OAHID,GACD76B,QAAQC,MAAM,uCAEV,IAAIo2B,EAAUwE,GAAOl8B,KAAKo8B,KAAMD,EAAQn8B,KAClD,CAQA,gBAAAg0B,CAAiBmI,EAAQ5zB,EAAU,CAAC,GACjC,OAAO,IAAIiN,EAAc2mB,EAAQn8B,KAAMuI,EAC1C,CAOA,gBAAA8zB,CAAiB92B,GAId,OAHKvF,KAAKs8B,WACPt8B,KAAKs8B,SAAWt8B,KAAKy5B,eAAe,CAAC,IAEjCz5B,KAAKs8B,SAAS9X,QAAQjf,EAAQvF,KAAKs8B,SAC7C,CAiBA,MAAA3yB,GACGtI,QAAQC,MACL,oEAEN,CASA,WAAAi7B,CAAYjiB,GACT,IAAIkiB,EAAW,CAAC,EAmEhB,OAjEIliB,GACD7a,OAAOD,KAAK8a,GAAMtU,SAASiB,IACxB,OAAQA,GACL,IAAK,QACFu1B,EAAS9N,SAAWpU,EAAKrT,GAAG6d,QAAQ7lB,GACpCu9B,EAASjE,WAAaje,EAAKrT,GAAG6d,QAAQlZ,KACtC4wB,EAAS5N,QAAUtU,EAAKrT,GAAGhI,GAC3Bu9B,EAASC,UAAYniB,EAAKrT,GAAGzD,OAAS8W,EAAKrT,GAAG2E,KAC9C,MAEH,IAAK,SACF4wB,EAAS9N,SAAWpU,EAAKrT,GAAGhI,GAC5Bu9B,EAASjE,WAAaje,EAAKrT,GAAG2E,KAC9B,MAEH,IAAK,iBACF4wB,EAASE,iBAAmBpiB,EAAKrT,GAAGhI,GACpCu9B,EAASG,mBAAqBriB,EAAKrT,GAAGzD,OAAS8W,EAAKrT,GAAG2E,KACvD,IAAIgxB,EAAKtiB,EAAKrT,GAAGqgB,WACbsV,IACDJ,EAASK,mBAAqBD,EAAG39B,GACjCu9B,EAASM,qBAAuBF,EAAGhxB,MAEtC,MAEH,IAAK,UACF4wB,EAASld,UAAYhF,EAAKrT,GAAGhI,GAC7Bu9B,EAASO,YAAcziB,EAAKrT,GAAGzD,OAAS8W,EAAKrT,GAAG2E,KAChD,MAEH,IAAK,MACF4wB,EAASx9B,IAAM,CACZ6M,MAAOyO,EAAKrT,GAAG4E,MACfzB,SAAUkQ,EAAKrT,GAAG+1B,UAClBC,KAAM3iB,EAAKrT,GAAGi2B,OAEjB,MAEH,IAAK,OACE5iB,EAAKrT,GAAGyb,UACT8Z,EAASld,UAAYhF,EAAKrT,GAAGyb,QAAQzjB,GACrCu9B,EAASO,YACNziB,EAAKrT,GAAGyb,QAAQlf,OAAS8W,EAAKrT,GAAGyb,QAAQ9W,MAE/C4wB,EAASW,OAAS7iB,EAAKrT,GAAGhI,GAC1Bu9B,EAASY,SAAW9iB,EAAKrT,GAAGzD,OAAS8W,EAAKrT,GAAG2E,KAC7C,MAEH,IAAK,OACE0O,EAAKrT,GAAGwd,cACT+X,EAASa,cAAgB/iB,EAAKrT,GAAGwd,YAAYxlB,GAC7Cu9B,EAASc,gBACNhjB,EAAKrT,GAAGwd,YAAYjhB,OAAS8W,EAAKrT,GAAGwd,YAAY7Y,MAEvD4wB,EAASe,OAASjjB,EAAKrT,GAAGhI,GAC1Bu9B,EAASgB,SAAWljB,EAAKrT,GAAGzD,OAAS8W,EAAKrT,GAAG2E,KAC7C4wB,EAASiB,QAAUnjB,EAAKrT,GAAGxE,IAC3B,MACH,QACG+5B,EAASv1B,GAAKqT,EAAKrT,GAEzB,IAICu1B,CACV,kBC1lCH,IAAIkB,EAAS,CAAC,EAEQ,CACnB,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,MACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,MACR,EAAQ,OACR,EAAQ,OACR,EAAQ,QAGK13B,SAAS23B,IACtBD,EAAOC,EAAMnC,WAAW/4B,KAAOk7B,CAAK,IAGvCh+B,EAAOC,QAAU,MAMd,gBAAOg+B,GACJ,IAAItT,EAAS,GACb,IAAK,IAAI5I,KAAKgc,EACXpT,EAAOljB,KAAKs2B,EAAOhc,IAEtB,OAAO4I,CACV,CASA,iBAAOuT,CAAWp7B,GACf,OAAOi7B,EAAOj7B,EACjB,CAOA,eAAOo3B,CAASt0B,EAAQuf,GACrB,IAAIvf,EAAO9C,IAgBR,MAPApB,QAAQmJ,IAAI,WACZnJ,QAAQmJ,IAAI,WACZnJ,QAAQC,MAAMiE,GACdlE,QAAQmJ,MACRnJ,QAAQC,MAAM,WACdD,QAAQC,MAAMwjB,GACdzjB,QAAQmJ,IAAI,WACN,IAAIlL,MACP,iDAAiDiG,EAAOqG,SAASrG,EAAO9C,mBAAmBqiB,EAAOlZ,SAhBrG,IACG,OAAO,IAAI8xB,EAAOn4B,EAAO9C,KAAK8C,EAAQuf,EACzC,CAAE,MAAO3jB,GACNE,QAAQmJ,IAAI,QAASrJ,GACrBE,QAAQmJ,IAAI,mBAAoBkzB,GAChCr8B,QAAQmJ,IAAI,kBAAmBjF,EAAO9C,IACzC,CAcN,oBC1FH,IAAI2a,EAAY,EAAQ,OACR,EAAQ,OAExBzd,EAAOC,QAAU,cAAyBwd,EACvC,WAAAtd,CAAYud,EAAY9c,GACrBR,MAAM,CAAC,OAAQ,eAAgBQ,GAE/BP,KAAK6f,WAAWxC,EAMnB,CASA,UAAAwC,CAAWxC,GAcR,IAAIygB,EAASzgB,GAAYsE,UAAUmc,QAAU,IAE7C99B,KAAKf,GAAKoe,GAAYpe,IAAM,GAC5Be,KAAK4L,KAAOyR,GAAYzR,MAAQ,eAChC5L,KAAK+9B,YAAc1gB,GAAY0gB,aAAe,GAC9C/9B,KAAK+I,KAAOsU,GAAYtU,MAAQ,OAChC/I,KAAK2hB,SAAW,CAAC,EACjB3hB,KAAK2hB,SAASmc,OAASA,EACvB99B,KAAK2hB,SAASqc,WAAa3gB,GAAYsE,UAAUqc,WACjDh+B,KAAK2hB,SAASsc,cAAgB5gB,GAAYsE,UAAUsc,cACpDj+B,KAAK2hB,SAASoB,KAAO1F,GAAYsE,UAAUoB,MAAQ,GACnD/iB,KAAKk+B,QAAU7gB,GAAY6gB,SAAW,GAGtCl+B,KAAKm+B,OAAS,CAAC,GACd9gB,GAAY6gB,SAAW,IAAIl4B,SAASo4B,IAClC,GAAKA,EAAL,CACA,IAAIC,EAAMr+B,KAAKO,GAAG26B,QAAQkD,EAAKp+B,KAAKf,IAChCo/B,IACDr+B,KAAKm+B,OAAOC,GAAOC,EAHN,CAIhB,IAEChhB,GAAYtd,MAAM8f,WAAWxC,GAG5Brd,KAAKwD,QACPxD,KAAKwD,MAAQxD,KAAK4L,KAExB,CAQA,KAAAhE,GAEQ5H,KAAKwD,QACPxD,KAAKwD,MAAQxD,KAAK4L,MAIrB,IAAIxK,EAAOrB,MAAM6H,QAOjB,MALmB,CAAC,OAAQ,WAAY,UAAW,KAAM,QAC5C5B,SAAS0b,IACnBtgB,EAAKsgB,GAAK1hB,KAAK0hB,EAAE,IAGbtgB,CACV,CAUA,KAAAwiB,CAAMlhB,EAAK,MAAM,IAId,OAHejD,OAAOD,KAAKQ,KAAKm+B,QAAQr/B,KAAKO,GACnCW,KAAKm+B,OAAO9+B,KAENsD,OAAOD,EAC1B,CAQA,OAAA47B,CAAQC,GACLv+B,KAAKm+B,OAAOI,EAAKt/B,IAAMs/B,CAC1B,CAQA,QAAAC,CAASv/B,GACN,OAAOe,KAAKm+B,OAAOl/B,IAAO,IAC7B,CASA,UAAAw/B,CAAWx/B,GAER,IAAIy/B,EAAY1+B,KAAKk+B,QAAQ12B,QAAQvI,GACjCy/B,GAAa,GACd1+B,KAAKk+B,QAAQ3L,OAAOmM,EAAW,UAG3B1+B,KAAKm+B,OAAOl/B,EACtB,oBC7IH,MAAMme,EAAY,EAAQ,OAE1Bzd,EAAOC,QAAU,cAA0Bwd,EACxC,WAAAtd,CAAYud,EAAYyH,GACrB/kB,MAAM,CAAC,SAAU+kB,EAAOvkB,IACxBP,KAAK8kB,OAASA,EAEd9kB,KAAK6f,WAAWxC,EACnB,CAEA,UAAAwC,CAAWxC,GAuCR,GA5BArd,KAAKf,GAAKoe,EAAWpe,GACrBe,KAAK+I,KAAO,QACZ/I,KAAK4L,KAAOyR,EAAWzR,KACvB5L,KAAK2+B,OAASh4B,KAAKiE,MAAMyS,EAAWshB,SAAU,GAG1CthB,EAAWuhB,WAAal5B,MAAMC,QAAQ0X,EAAWuhB,YAClDvhB,EAAWuhB,SAAW,CAACvhB,EAAWuhB,WAGrC5+B,KAAK6+B,iBAAmB,GACxB7+B,KAAKsqB,QAAUjN,EAAWuhB,UAAY,IAClC9/B,KAAK4iB,IACH,IAAIiN,EAAQ3uB,KAAK8kB,OAAO8C,UAAUlG,GAClC,IAAKiN,EAAO,CACT3uB,KAAK6+B,iBAAiBz3B,KAAKsa,GAC3B,IAAIvgB,EAAM,IAAI7B,MACX,SAASU,KAAK4L,SAAS5L,KAAKf,uCAAuCyiB,MAEtE1hB,KAAKO,GAAGoJ,OAAOC,UAAUzI,EAAK,CAC3BwrB,MAAO3sB,KAAKf,GACZ0vB,MAAOjN,GAEb,CACA,OAAOiN,CAAK,IAEdhsB,QAAQm8B,GAAQA,IAEM,GAAtB9+B,KAAKsqB,OAAO1oB,OAAa,CAC1B,IAAIT,EAAM,IAAI7B,MACX,SAASU,KAAK4L,SAAS5L,KAAKf,qCAE/Be,KAAKO,GAAGoJ,OAAOC,UAAUzI,EAAK,CAC3BwrB,MAAO3sB,KAAKf,GACZ8/B,kBAAmB1hB,EAAWuhB,UAAY,IAEhD,CAGA7+B,MAAM8f,WAAWxC,EACpB,CAaA,KAAAzV,GACG,IAAI1D,EAASnE,MAAM6H,QA0BnB,OAxBA1D,EAAOjF,GAAKe,KAAKf,GACjBiF,EAAO6E,KAAO,QACd7E,EAAO0H,KAAO5L,KAAK4L,KACnB1H,EAAOy6B,OAAS3+B,KAAK2+B,OAGjB3+B,KAAKsqB,SAAW5kB,MAAMC,QAAQ3F,KAAKsqB,UACpCtqB,KAAKsqB,OAAS,CAACtqB,KAAKsqB,SAGvBpmB,EAAO06B,UAAY5+B,KAAKsqB,QAAU,IAC9BxrB,KAAK4iB,GAEIA,EAAEziB,IAAMyiB,IAEjB/e,QAAQm8B,GAAQA,IAKpB9+B,KAAK6+B,iBAAiB74B,SAAS0b,IAC5Bxd,EAAO06B,SAASx3B,KAAKsa,EAAE,IAGnBxd,CACV,CAEA,aAAI86B,GAID,MAAO,GAHSh/B,KAAK8kB,OAAOma,iBAGLj/B,KAAK4L,OAAOhG,QAAQ,KAAM,IAAI6yB,UAAU,EAAG,GACrE,CAEA,cAAIyG,GAGD,MAAO,GAFSl/B,KAAKg/B,UAAUvG,UAAU,EAAG,YAG/C,oBCzGH,IAAI0G,EAAY,EAAQ,OACxBx/B,EAAOC,QAAU,cAA4Bu/B,EAC1C,WAAAr/B,CAAYs/B,EAAW7+B,GACpBR,QACAC,KAAKq/B,SAAWD,GAAa,CAAC,SAI9Bp/B,KAAKO,GAAKA,CAGb,CAcA,UAAAsf,CAAWxC,GACRrd,KAAK4f,aAAevC,EAAWuC,aAG3B5f,KAAK4f,aAEN5f,KAAKs/B,aAKJt/B,KAAKq/B,UAAY,IAAIr5B,SAAS2oB,IACxBtR,EAAWsR,KACZ3uB,KAAK2uB,GAAStR,EAAWsR,GAC5B,GAGT,CAUA,mBAAA4Q,CAAoBjV,EAAQ/kB,GACzBA,EAASA,GAAU,CAAC,EAEpB,IAAIkL,EAAQ,CAIT+uB,cAAe,MAOlB,OAJAlV,EAAOtkB,SAAS0b,IACbjR,EAAMiR,GAAKnc,EAAOmc,IAAMA,CAAC,IAGrB,CAACjR,EACX,CAOA,eAAAgvB,GACG,MAAO,IACV,CAOA,KAAA73B,GAGG,OAFA5H,KAAK0/B,cAEE,CACJ9f,aAAc5f,KAAK4f,aAEzB,CAOA,YAAA/X,GACG,OAAO7H,KAAKO,GAAG8W,cAAc,CAC1BpY,GAAIe,KAAKf,GACT2M,KAAM5L,KAAK4L,KACX7C,KAAM/I,KAAK+I,KACXiR,KAAMha,KAAK4H,SAEjB,CAiBA,SAAA03B,CAAU5zB,EAAKsO,EAAMsQ,EAAQpoB,EAAe,MACpCwJ,IAAKA,EAAM1L,MACXga,IAAMA,EAAOha,MACbsqB,IAAQA,EAAStqB,KAAKq/B,UAAY,IAElCrlB,EAAK4F,eACP5F,EAAK4F,aAAe,IAGS,iBAArB5F,EAAK4F,eACb5F,EAAK4F,aAAejZ,KAAKiE,MAAMoP,EAAK4F,eAGvC,IAAI+f,EAAez9B,GAAgBlC,KAAKy/B,kBAExC,GAAInV,GAAUA,EAAO1oB,OAAS,EAAG,CAG9B,IAAIg+B,EAAQ,KACRrV,GAAQ,EAEZvQ,EAAK4F,aAAa5Z,SAAQ,SAAU65B,GAC5BD,IAAOA,EAAQC,GAGhBA,EAAEL,eAAiBG,IACpBpV,GAAQ,EAGRD,EAAOtkB,SAAQ,SAAU0b,GACV,MAARme,EAAEne,KAAYhW,EAAIgW,GAAKme,EAAEne,IAE7BhW,EAAIgW,GAAKme,EAAEne,IAAM,EACpB,IAEN,KAIK6I,GAASqV,GAEXtV,EAAOtkB,SAAQ,SAAU0b,GACN,MAAZke,EAAMle,IAA0B,IAAZke,EAAMle,GAC3BhW,EAAIgW,GAAK,IAAIie,KAAgBC,EAAMle,KACjChW,EAAIgW,GAAK,EACjB,GAEN,CACH,CAiBA,WAAAge,CAAYh0B,EAAKsO,EAAMsQ,GACf5e,IAAKA,EAAM1L,MACXga,IAAMA,EAAOha,MACbsqB,IAAQA,EAAStqB,KAAKq/B,UAAY,IAElCrlB,EAAK4F,eACP5F,EAAK4F,aAAe,IAGvB,IAAI+f,EAAe3/B,KAAKy/B,kBAExB,GAAInV,GAAUA,EAAO1oB,OAAS,EAAG,CAC9B,IAAIk+B,GAAW,EAmBf,GAjBA9lB,EAAK4F,aAAa5Z,SAAQ,SAAU65B,GAE7BA,EAAEL,eAAiBG,IAEpBrV,EAAOtkB,SAAQ,SAAU0b,GAGR,MAAVhW,EAAIgW,KACLme,EAAEne,GAAKhW,EAAIgW,GAEjB,IAEAoe,GAAW,EAEjB,KAGKA,EAAU,CAEZ,IAAIC,EAAQ,CAAC,EAGbA,EAAMP,cAAgBG,EAEtBrV,EAAOtkB,SAAQ,SAAU2oB,GACJ,MAAdjjB,EAAIijB,KACLoR,EAAMpR,GAASjjB,EAAIijB,GAEzB,IAEA3U,EAAK4F,aAAaxY,KAAK24B,EAC1B,CACH,CACH,cClOHpgC,EAAOC,QAAU,MACd,WAAAE,CAAYglB,GAET9kB,KAAK8kB,OAASA,EACd9kB,KAAKO,GAAKukB,EAAOvkB,GAEjBP,KAAKggC,OAAS,KACdhgC,KAAKigC,MAAQ,KACbjgC,KAAKkgC,MAAQ,KACblgC,KAAKmgC,OAAS,KAEdngC,KAAKogC,uBAAwB,EAC7BpgC,KAAKqgC,gBAAkB,CAEvB,EACArgC,KAAKsgC,oBAAsB,GAC3BtgC,KAAKugC,oBAAsB,KAG3BvgC,KAAKwgC,gBAAkB,CAAE/9B,IAAK,KAAMvB,QAAS,CAAC,EACjD,CAaA,UAAAqlB,CAAW9jB,GACRzC,KAAKwgC,gBAAgB/9B,IAAMA,GAAO,IACrC,CAEA,aAAAg+B,CAAcl7B,GACXvF,KAAKwgC,gBAAgBt/B,QAAUqE,GAAU,CAAC,CAC7C,CAIA,uBAAAm7B,CAAwBn7B,GAErB,IAAI85B,EAAWr/B,KAAK8kB,OAAO6b,qBAEvBC,GAAkB,EAClBvB,EAASz9B,QACVy9B,EAASr5B,SAAQ,SAAU2oB,GACH,MAAjBppB,EAAOopB,KACRiS,GAAkB,EAExB,IAECA,IAEyB,MAAvBr7B,EAAOqa,mBACuB,IAAvBra,EAAOqa,cACS,IAAvBra,EAAOqa,eAEPra,EAAOqa,aAAe,IAEzB5f,KAAK8kB,OAAO4a,YAAYn6B,EAAQA,EAAQ85B,GAE9C,CAEA,OAAA3xB,GAIG,OAHArM,QAAQC,MACL,+DAEIE,QAAQ9B,SAClB,CA2FA,eAAAmhC,CAAgBt7B,GACb,MAAO,CACJlD,IAAKrC,KAAK8kB,OAAOgc,UACjBj4B,OAAQtD,EAEd,CAEA,eAAAw7B,CAAgB9hC,GACb,MAAO,CACJoD,IAAKrC,KAAK8kB,OAAOkc,YAAY/hC,GAEnC,CAEA,aAAAgiC,CAAcjW,GACX,MAAO,CACJ3oB,IAAKrC,KAAK8kB,OAAOgc,UACjBj4B,OAAQmiB,GAAQ,CAAC,EAEvB,CAEA,eAAAkW,CAAgBjiC,EAAIsG,GACjB,MAAO,CACJlD,IAAKrC,KAAK8kB,OAAOkc,YAAY/hC,GAC7B4J,OAAQtD,EAEd,CAMA,KAAAmlB,CAAMM,GACHA,EAAOA,GAAQ,CAAC,EAEhB,IAAIniB,EAAS,CACVxG,IAAKrC,KAAK8kB,OAAOqc,eACjBt4B,OAAQmiB,GAEX,OAAOhrB,KAAK0N,QAAQ,MAAO7E,GACvBxB,MAAM+5B,GAEGA,IAET95B,OAAOnG,IAMLE,QAAQC,MAAMH,EAAI,GAE3B,CAYA,YAAAmuB,CAAatE,GAEV,IAAI/e,EAAKjM,KAAK8kB,OAAO7Y,KAEjBo1B,EAASrW,EAAK/e,GAKlB,OAJI+e,EAAKY,QACNyV,EAASrW,EAAKY,MAAM3f,IAGhB,IAAIzK,SAAQ,CAAC9B,EAASoK,KAC1B,IAAKu3B,EAAQ,CACV,IAAIC,EAAM,IAAIhiC,MACX,4CAA8C2M,GAIjD,OAFAq1B,EAAItW,KAAOA,OACXlhB,EAAOw3B,EAEV,CAGA,IAAI7wB,EAAQ,CACT/Q,QAASA,EACToK,OAAQA,GAEX2G,EAAMxE,GAAMo1B,EAGZrhC,KAAKsgC,oBAAoBl5B,KAAKqJ,GAGzBzQ,KAAKogC,wBAEHpgC,KAAKugC,qBACN15B,aAAa7G,KAAKugC,qBAErBvgC,KAAKugC,oBAAsB94B,YAAW,KACnCzH,KAAKuhC,qBAAqB,GAC1B,KACN,GAEN,CAMA,mBAAAA,GACGvhC,KAAKogC,uBAAwB,EAC7B,IAAIoB,EAAiBxhC,KAAKsgC,oBAC1BtgC,KAAKsgC,oBAAsB,GAC3B,IAAIr0B,EAAKjM,KAAK8kB,OAAO7Y,KAEjBw1B,EAAe,CAEnB,EACIzW,EAAO,CAAEY,MAAO,CAAC,EAAGpG,UAAU,GAClCwF,EAAKY,MAAM3f,GAAM,GAEjB5K,QAAQmJ,IACL,yCACGg3B,EAAe5/B,OACf,aAEN4/B,EAAex7B,SAAS3G,IACrBoiC,EAAapiC,EAAE4M,IAAOw1B,EAAapiC,EAAE4M,KAAQ,GAC7Cw1B,EAAapiC,EAAE4M,IAAK7E,KAAK/H,EAAE,IAG9B2rB,EAAKY,MAAM3f,GAAMxM,OAAOD,KAAKiiC,GAE7BzhC,KAAKisB,QAAQjB,GAAM3jB,MAAMsJ,IAElBjL,MAAMC,QAAQgL,EAAIvP,OAASuP,EAAIvP,KAAKQ,QACrC+O,EAAIvP,KAAK4E,SAAS5E,IAEXqgC,EAAargC,EAAK6K,KAGLw1B,EAAargC,EAAK6K,IACxBjG,SAASyK,KAEd/Q,EADc+Q,EAAM/Q,SACZ,CAAE0B,KAAM,CAACA,IAAQ,WAGrBqgC,EAAargC,EAAK6K,KAEzB5K,QAAQC,MACL,2EACAF,EACAqgC,EAEN,IAMN,IAAIC,EAAUjiC,OAAOD,KAAKiiC,GACtBC,EAAQ9/B,OAAS,GAClBP,QAAQqF,KACL,gCACGg7B,EAAQ9/B,OACR,gCAGT8/B,EAAQ17B,SAASvD,IACd,IACI/C,EADA+Q,EAAQgxB,EAAah/B,GAGtB/C,EADCgG,MAAMC,QAAQ8K,GACLA,EAAM,GAAG/Q,QAET+Q,EAAM/Q,QAEnBA,EAAQ,CAAE0B,KAAM,YACTqgC,EAAah/B,EAAI,IAIvBzC,KAAKsgC,oBAAoB1+B,OAAS,EAEnC5B,KAAKuhC,sBAGLvhC,KAAKogC,uBAAwB,CAChC,GAEN,CAsCA,aAAAuB,CAAcrX,EAAQlpB,GAYnB,YAXmB,IAARA,IACHsE,MAAMC,QAAQ2kB,IAA4B,iBAAVA,IAClClpB,EAAOkpB,EACPA,EAAS,KAIM,iBAAVA,IACRA,EAAS,CAACA,IAGN,IAAI9oB,SAAQ,CAAC9B,EAASoK,KAE1B,IAAK1I,EAAKnC,GAGP,YADAS,EAAQ,MAIX,IAAIsrB,EAAO,CAAC,EACZA,EAAKhrB,KAAK8kB,OAAO7Y,MAAQ7K,EAAKnC,GAC9Be,KAAKisB,QAAQ,CAAEL,MAAOZ,EAAMxF,UAAU,IAClCne,MAAMu6B,IACJ,GACIA,EAAQxgC,MACRsE,MAAMC,QAAQi8B,EAAQxgC,OACA,GAAvBwgC,EAAQxgC,KAAKQ,OAHhB,CAUA,IAAIigC,EAAQD,EAAQxgC,KAAK,GAGzB,GAAqB,GAAjBkpB,EAAO1oB,OAAa,CACrB,IAAIR,EACDygC,EACGvX,EAAO,GAAG1kB,QAAQ,eAAgB,IAAM,cAE9C,OAAKxE,GAEAsE,MAAMC,QAAQvE,KAAOA,EAAO,CAACA,SAElC1B,EAAQ0B,IAJU1B,EAAQ,GAM7B,CAGqB,GAAjB4qB,EAAO1oB,QACQ5B,KAAK8kB,OAAOwF,QAAQ5I,GAC1BA,EAAEC,SAAS2M,WAEXtoB,SAAS0b,IAChB4I,EAAOljB,KAAKsa,EAAEO,WAAW,IAI/B,IAAI6f,EAAa,CAAC,EAClBxX,EAAOtkB,SAASooB,IACb0T,EAAW1T,GACRyT,EAAMzT,EAAQxoB,QAAQ,eAAgB,IAAM,aAAa,IAG/DlG,EAAQoiC,EAnCR,MAFGpiC,EAAQ,GAqCQ,IAErB4H,OAAOnG,IACLE,QAAQC,MAAM,0CAA2CH,GACzD2I,EAAO3I,EAAI,GACZ,GAEX,CA0JA,MAAA4gC,CAAOx8B,GAIJ,IAAK,IAAI9C,KAHTzC,KAAK0gC,wBAAwBn7B,GAGbA,EACM,MAAfA,EAAO9C,WAAqB8C,EAAO9C,GAG1C,IAAIoG,EAAS,CACVxG,IAAKrC,KAAK8kB,OAAOgc,UACjBj4B,OAAQtD,GAEX,OAAOvF,KAAK0N,QAAQ,MAAO7E,GACvBxB,MAAMjG,IAGJpB,KAAK+M,cAAc3L,GAEZA,KAMTkG,OAAOnG,IACLE,QAAQC,MAAMH,EAAI,GAE3B,CAQA,KAAAyqB,CAAMZ,GAEH,OADAhrB,KAAKggC,OAAShV,EACPhrB,IACV,CAQA,IAAA0gB,CAAKsK,GAEF,OADAhrB,KAAKigC,MAAQjV,EACNhrB,IACV,CAMA,OAAA4W,GAEG,OADAvV,QAAQC,MAAM,qDACPE,QAAQ9B,SAMlB,CASA,WAAA4M,CAAYlL,GACT,QAAIA,EAAK4gC,UAIZ,CAwBA,OAAAC,CAAQ7gC,GAiBL,IAAI8gC,EAAa,CAAE9gC,KAAM,GAAI+gC,UAAW,CAAC,GACrCC,EAAWpiC,KAAK8kB,OAEhBud,EAAUjhC,EAAKA,KACfkhC,EAAa,QACZ58B,MAAMC,QAAQ08B,KAChBC,EAAa,SACbD,EAAU,CAACA,IAEdA,EAAUA,EAAQ1/B,QAAQ6T,IAASxW,KAAKO,GAAGwa,MAAMvE,KAIjD,IAAIhX,EAAO,CAAC,OAAQ,QACE4iC,EAAS9X,QAAQ5I,GAAMliB,EAAKgI,QAAQka,EAAEjf,MAAQ,IACpDuD,SAAS0b,IACtB,IAAK,IAAI6gB,EAAI,EAAGA,EAAIF,EAAQzgC,OAAQ2gC,IAAK,CACtC,IAAI/rB,EAAM6rB,EAAQE,GACd/rB,EAAIkL,EAAEO,cACPzL,EAAIkL,EAAEO,YAActb,KAAKC,UAAU4P,EAAIkL,EAAEO,aAE/C,KAIH,IAAIugB,EAAcJ,EAAS5gB,gBAC3BghB,EAAYx8B,SAASy8B,IAClB,IAAIC,EAAW,CAAC,EACZjV,EAAegV,EAAUhV,eACzBkV,EAASF,EAAUpV,eAAephB,KAGtC,IAAK,IAAIs2B,EAAI,EAAGA,EAAIF,EAAQzgC,OAAQ2gC,IAAK,CACtC,IAAI/rB,EAAM6rB,EAAQE,GAClB,GAAI/rB,EAAIiX,GACL,GAAI/nB,MAAMC,QAAQ6Q,EAAIiX,IACnBjX,EAAIiX,GAAcznB,SAAStE,IACnBghC,EAAShhC,EAAEzC,MACbyjC,EAAShhC,EAAEzC,IAAMyC,EACpB,QAEC,CACJ,IAAIA,EAAI8U,EAAIiX,GACPiV,EAAShhC,EAAEzC,MACbyjC,EAAShhC,EAAEzC,IAAMyC,EAEvB,CAEN,CAGAjC,OAAOD,KAAKkjC,GAAU18B,SAAQ,CAAC/G,EAAI2jC,KAChCF,EAASzjC,GAAI4jC,OAASD,CAAI,IAI7B,IAAK,IAAIL,EAAI,EAAGA,EAAIF,EAAQzgC,OAAQ2gC,IAAK,CACtC,IAAI/rB,EAAM6rB,EAAQE,GACdO,EAAM,GACNC,GAAkB,EACtB,GAAIvsB,EAAIiX,GAEL,GADAsV,GAAkB,EACdr9B,MAAMC,QAAQ6Q,EAAIiX,IACnBjX,EAAIiX,GAAcznB,SAAStE,IACxBohC,EAAI17B,KAAKs7B,EAAShhC,EAAEzC,IAAI4jC,OAAO,QAE9B,CACJ,IAAInhC,EAAI8U,EAAIiX,GACZqV,EAAI17B,KAAKs7B,EAAShhC,EAAEzC,IAAI4jC,OAC3B,CAGCE,IACDvsB,EAAIisB,EAAUxgB,YAActb,KAAKC,UAAUk8B,UACpCtsB,EAAIiX,GAEjB,CAEA,IAAIuV,EAAWvjC,OAAO8F,OAAOm9B,GAC7B,MAAMO,EAAoB,OAAXN,EACfK,EAASh9B,SAASk9B,IACVD,GAAUC,EAAEjkC,IAAMikC,EAAEP,WACfO,EAAEjkC,GAIRikC,EAAEtjB,eACHsjB,EAAEtjB,aAAejZ,KAAKC,UAAUs8B,EAAEtjB,cACrC,IAEH,IAAIujB,EAAcnjC,KAAKO,GAAG2c,UAAU8lB,GACpCd,EAAWC,UAAUM,EAAUxjC,IAAMkkC,CAAW,IAInD,MAAMF,EAASb,EAASn2B,KACxB,IAAK,IAAIs2B,EAAI,EAAGA,EAAIF,EAAQzgC,OAAQ2gC,IAAK,CACtC,IAAI/rB,EAAM6rB,EAAQE,IAEjBU,UAAiBzsB,EAAIvX,UAGfuX,EAAI4sB,WAGP5sB,EAAIoJ,eACLpJ,EAAIoJ,aAAejZ,KAAKC,UAAU4P,EAAIoJ,eAIzC4iB,EAAYx8B,SAASy8B,IAClB,IAAIhV,EAAegV,EAAUhV,eACH,OAAtBjX,EAAIiX,WACEjX,EAAIiX,EACd,GAEN,CAGAyU,EAAW9gC,KAAOpB,KAAKO,GAAG2c,UAAUmlB,GACpCH,EAAWn5B,KAAOu5B,EAElB,IAAItU,EAAU,CAAC,EAOf,OANAvuB,OAAOD,KAAK4B,GAAM4E,SAASvD,IACb,QAAPA,IACDurB,EAAQvrB,GAAOrB,EAAKqB,GACvB,IAEHurB,EAAQgU,WAAaE,EACdlU,CACV,CASA,SAAAxhB,CAAUpL,GAkBP,IAAIghC,EAAWpiC,KAAK8kB,OAChBue,EAAcrjC,KAAKO,GAAGuc,UAAU1b,EAAK4gC,WAAW5gC,MAGhDkhC,EAAalhC,EAAK4gC,WAAWj5B,KAE7Bs6B,EAAYlvB,QAAQvS,QAEQ,KAAzBR,EAAK4gC,WAAW5gC,OACjBC,QAAQC,MAAM,0BAA2B+hC,EAAYlvB,QACrD9S,QAAQC,MAAM,sBACdD,QAAQC,MAAMF,EAAK4gC,WAAW5gC,MAC9BC,QAAQC,MAAM,WACdD,QAAQC,MAAM+hC,EAAYjiC,OAGhC,IAAI+b,EAAWkmB,EAAYjiC,KAEvBkiC,EAAY,CAAC,OAAQ,UAAW,SAAU,QAC1CC,EAAcnB,EAAS9X,QAAQ5I,GAAM4hB,EAAU97B,QAAQka,EAAEjf,MAAQ,IACrE0a,EAASnX,SAASwQ,IAEf+sB,EAAYv9B,SAAS0b,IAClB,IAAIxY,EAAMsN,EAAIkL,EAAEO,YAChB,GAAI/Y,GAAqB,iBAAPA,EACf,IACGsN,EAAIkL,EAAEO,YAActb,KAAKiE,MAAM1B,EAClC,CAAE,MAAO7J,GACNgC,QAAQC,MACL,uCAAyCogB,EAAEO,WAC3C/Y,EACA7J,EAEN,CACH,IAICmX,EAAIoJ,eACLpJ,EAAIoJ,aAAejZ,KAAKiE,MAAM4L,EAAIoJ,cACrC,IAGH,IAAI4iB,EAAcJ,EAAS5gB,gBAC3BghB,EAAYx8B,SAASy8B,IAClB,IAAIhV,EAAegV,EAAUhV,eAE7B,GAAIrsB,EAAK4gC,WAAWG,UAAUM,EAAUxjC,IAAK,CAC1C,IAGI+jC,EAHsBhjC,KAAKO,GAAGuc,UAC/B1b,EAAK4gC,WAAWG,UAAUM,EAAUxjC,KAEJmC,KAE/BshC,EAAW,CAAC,EACZC,EAASF,EAAUpV,eAAephB,KACtC+2B,EAASh9B,SAASk9B,IACVA,EAAEjkC,KACJikC,EAAEjkC,GAAKikC,EAAEP,IAEZD,EAASQ,EAAEL,QAAUK,CAAC,IAGzB/lB,EAASnX,SAASwQ,IACf,IAAIssB,EAAM,GACNU,EAAgB,GAChBC,EAAU,GACd,IAEqC,KAA9BjtB,EAAIisB,EAAUxgB,cACfwhB,EAAU98B,KAAKiE,MAAM4L,EAAIisB,EAAUxgB,aAEzC,CAAE,MAAO5iB,GAC2B,IAA7BmX,EAAIisB,EAAUxgB,kBAKiB,IAArBzL,EAAIiX,KACZjX,EAAIiX,GAAgB,KAQ7B,CACK/nB,MAAMC,QAAQ89B,KAChBA,EAAU,CAACA,IAEdA,EAAQz9B,SAAS/G,IACd,GAAIyjC,EAASzjC,GAAK,CACf,IAAIykC,EAAYhB,EAASzjC,GACzB6jC,EAAI17B,KAAKq7B,EAAUjU,iBAAiBkV,IAGpCF,EAAcp8B,KAAKs8B,EACtB,KAEyB,QAAxBjB,EAAUnU,YACX9X,EAAIisB,EAAUxgB,YAAc6gB,EAC5BtsB,EAAIisB,EAAUhV,gBAAkB+V,IAEhChtB,EAAIisB,EAAUxgB,YAAc6gB,EAAI,GAChCtsB,EAAIisB,EAAUhV,gBAAkB+V,EAAc,GACjD,IAIH/jC,OAAOD,KAAKkjC,GAAU18B,SAAS/G,WACrByjC,EAASzjC,GAAI4jC,MAAM,GAEhC,KAIH1lB,EAASnX,SAASwQ,IACfgsB,EAAYx8B,SAASy8B,IAElB,GAA4B,QAAxBA,EAAUnU,WAAsB,CACjC,IAAIplB,EAAMsN,EAAIisB,EAAUxgB,YACpB/Y,GAAqB,iBAAPA,IACfsN,EAAIisB,EAAUxgB,YAActb,KAAKiE,MAAM1B,GAE7C,IACD,IAGL,IAAI44B,EAAa,CAAC,EAWlB,OAVAriC,OAAOD,KAAK4B,GAAM4E,SAASvD,IACb,cAAPA,IACDq/B,EAAWr/B,GAAOrB,EAAKqB,GAC1B,IAEHq/B,EAAW1gC,KAAO+b,EAEA,UAAdmlB,GAA0B58B,MAAMC,QAAQm8B,EAAW1gC,QACpD0gC,EAAW1gC,KAAO0gC,EAAW1gC,KAAK,IAE9B0gC,CACV,CAEA,aAAA/0B,CAAc3L,GAELA,aAAgBsE,QAAQtE,EAAO,CAACA,IAGtC,IAAImgB,EAAkBvhB,KAAK8kB,OAAOtD,gBAG9B6d,EAAWr/B,KAAK8kB,OAAO6b,qBAGvBgD,EACD3jC,KAAK8kB,OAAOwF,QAAO,SAAU5I,GAC1B,MAAgB,QAATA,EAAEjf,KAA0B,YAATif,EAAEjf,GAC/B,KAAM,GAGLmhC,EAAmB5jC,KAAK8kB,OAAOwF,QAAQ5I,GAAe,aAATA,EAAEjf,MAEnDrB,EAAK4E,SAASsnB,IACF,MAALA,IAGCA,EAAEruB,IAA0B,MAApBe,KAAK8kB,OAAO7Y,OAAcqhB,EAAEruB,GAAKquB,EAAEttB,KAAK8kB,OAAO7Y,OAG5DsV,EAAgBvb,SAASk9B,IAEtB,IAAIzV,EAAeyV,EAAEzV,eAOrB,QAC6B,IAAnBH,EAAEG,SACiB,IAAnBH,EAAE4V,EAAEjhB,YAIX,OAFAqL,EAAEG,GAAgB,UAClBH,EAAE4V,EAAEjhB,YAAc,MAKrB,GAAuB,MAAnBqL,EAAEG,GAAuB,OAIA,iBAAnBH,EAAEG,IACTH,EAAEG,GAAc7rB,OAAS,IAGzB0rB,EAAEG,GAAgB9mB,KAAKiE,MAAM0iB,EAAEG,KAI9B/nB,MAAMC,QAAQ2nB,EAAEG,IACjBH,EAAEG,GAAcznB,SAAStE,IAElBA,EAAEke,cAAyC,iBAAlBle,EAAEke,eAE5Ble,EAAEke,aAAejZ,KAAKiE,MAAMlJ,EAAEke,cACjC,IAIH0N,EAAEG,GAAc7N,cACuB,iBAAhC0N,EAAEG,GAAc7N,eAGvB0N,EAAEG,GAAc7N,aAAejZ,KAAKiE,MACjC0iB,EAAEG,GAAc7N,eAKtB,IAAIikB,EAAaX,EAAE7V,eAGnB,IAAKwW,EAAY,OAEjB,IAAIC,EAAOD,EAAW53B,KACtB,IAAI83B,EAAkBF,EAAWlD,qBAEjC,GAAIj7B,MAAMC,QAAQ2nB,EAAEG,IACjBH,EAAEG,GAAcznB,SAASg+B,IAGtB,MAAMC,EAAgBf,EAAE1U,iBAAiBwV,GAC7B,MAARF,IAAcE,EAAQ/kC,GAAKglC,GAG3BF,EAAgBniC,QACjBiiC,EAAWvE,UAAU0E,EAASA,EAASD,EAC1C,QAEC,CAKJ,MAAME,EAAgBf,EAAE1U,iBAAiBlB,EAAEG,IACvCwW,IACD3W,EAAEG,GAAcxuB,GAAKglC,GAIpBF,EAAgBniC,QACjBiiC,EAAWvE,UACRhS,EAAEG,GACFH,EAAEG,GACFsW,EAGT,CA4BA,IAAKzW,EAAE4V,EAAEjhB,YACN,GAAoB,OAAhBihB,EAAE5U,WACChB,EAAEG,GAEHH,EAAE4V,EAAEjhB,YAAcihB,EAAE1U,iBAAiBlB,EAAEG,IAEvCH,EAAE4V,EAAEjhB,YAAc,UAGrB,GAAIqL,EAAEG,GACH,GAAI/nB,MAAMC,QAAQ2nB,EAAEG,IACjB,IACGH,EAAE4V,EAAEjhB,aAAeqL,EAAEG,IAAiB,IAAI3uB,KAEtCoH,GAAMg9B,EAAE1U,iBAAiBtoB,IAEhC,CAAE,MAAO7G,GACNgC,QAAQmJ,IAAI,mBACZnJ,QAAQmJ,IAAI,OAAO04B,EAAEjkC,OACrBoC,QAAQmJ,IAAI,eAAe04B,EAAE1/B,UAC7BnC,QAAQmJ,IAAI,iBAAiBijB,MAC7BpsB,QAAQmJ,IAAI,aAAa04B,EAAE5U,eAC3BjtB,QAAQmJ,IAAI,SACZnJ,QAAQmJ,IAAI7D,KAAKC,UAAU0mB,EAAEG,KAC7BpsB,QAAQmJ,IAAI,kBACf,MAIAnJ,QAAQmJ,IAAI,mBACZnJ,QAAQmJ,IAAI,OAAO04B,EAAEjkC,OACrBoC,QAAQmJ,IAAI,eAAe04B,EAAE1/B,UAC7BnC,QAAQmJ,IAAI,iBAAiBijB,MAC7BpsB,QAAQmJ,IAAI,aAAa04B,EAAE5U,eAC3BjtB,QAAQmJ,IAAI,SACZnJ,QAAQmJ,IAAI7D,KAAKC,UAAU0mB,EAAEG,KAC7BpsB,QAAQmJ,IAAI,mBAEZ8iB,EAAE4V,EAAEjhB,YAAc,CAACihB,EAAE1U,iBAAiBlB,EAAEG,UAG3CH,EAAE4V,EAAEjhB,YAAc,EAG3B,IAGCod,EAASz9B,QACV5B,KAAK8kB,OAAOwa,UAAUhS,EAAGA,EAAG+R,GAI/BsE,EAAW39B,SAASiS,IACbqV,GAA2B,MAAtBA,EAAErV,EAAKgK,aAEoB,iBAAtBqL,EAAErV,EAAKgK,cACC,QAAZhK,EAAKxV,IAGN6qB,EAAErV,EAAKgK,YAAcjiB,KAAKO,GAAGqZ,MAAMlC,OAChC4V,EAAErV,EAAKgK,YACP,CACGpK,OAAQ,aACRD,YAAY,IAKlB0V,EAAErV,EAAKgK,YAAcjiB,KAAKO,GAAGqZ,MAAMlC,OAChC4V,EAAErV,EAAKgK,aAKnB,IAGH2hB,EAAiB59B,SAASk+B,IACvB5W,EAAE4W,EAASjiB,YAAciiB,EAASrsB,OAAOyV,EAAE,IAC5C,GAER,oBC1vCH,MAAM6B,EAAW,EAAQ,OACnBgV,EAAa,EAAQ,OAE3BxkC,EAAOC,QAAU,cAA8BuvB,EAC5C,WAAArvB,CAAYud,EAAY9c,GACrBR,MAAMsd,EAAY9c,GAElBP,KAAKm6B,OAAQ,EAEbn6B,KAAK6f,WAAWxC,EACnB,CAQA,UAAAwC,CAAWxC,GACRtd,MAAM8f,WAAWxC,GAEjBrd,KAAKokC,SAAWnkB,SAAS5C,EAAW+mB,WAAa,EACjDpkC,KAAKqkC,QAAUhnB,EAAWgnB,SAAW,OACrCrkC,KAAK0N,QAAU2P,EAAW3P,SAAW,CAAC,EACtC1N,KAAK0N,QAAQ3D,QAAUsT,EAAW3P,SAAS3D,SAAW,GACtD/J,KAAK6K,SAAWwS,EAAWxS,UAAY,CAAC,EACxC7K,KAAK6K,SAASyf,OAASjN,EAAWxS,UAAUyf,QAAU,GACtDtqB,KAAKskC,UAAYjnB,EAAWinB,YAAa,CAC5C,CAUA,KAAA18B,GACG,MAAM1D,EAASnE,MAAM6H,QAWrB,OATA1D,EAAOi2B,MAAQn6B,KAAKm6B,MACpBj2B,EAAOkgC,SAAWpkC,KAAKokC,SACvBlgC,EAAOmgC,QAAUrkC,KAAKqkC,QACtBngC,EAAOwJ,QAAU1N,KAAK0N,SAAW,CAAC,EAClCxJ,EAAOwJ,QAAQ3D,QAAU/J,KAAK0N,SAAS3D,SAAW,GAClD7F,EAAO2G,SAAW7K,KAAK6K,UAAY,CAAC,EACpC3G,EAAO2G,SAASyf,OAAStqB,KAAK6K,UAAUyf,QAAU,GAClDpmB,EAAOogC,UAAYtkC,KAAKskC,UAEjBpgC,CACV,CAOA,KAAAmI,GACG,IAAIA,EAAQ,IAAI83B,EAAWnkC,MAM3B,OAHAqM,EAAMka,WAAWvmB,KAAKF,YAAYymB,cAClCla,EAAMo0B,cAAc,CAAExhC,GAAIe,KAAKf,KAExBoN,CACV,CAUA,eAAAk4B,EAAgB,KAAE3S,EAAI,MAAEV,IACrB,MAAMhtB,EAAS,CAAC,EACVsgC,EAAiBxkC,KAAK0N,SAAS+2B,QAAU,CAAC,EAShD,OAPID,EAAevT,OAAiB,MAARW,IACzB1tB,EAAOsgC,EAAevT,OAASW,GAE9B4S,EAAetT,OAAkB,MAATA,IACzBhtB,EAAOsgC,EAAetT,OAASA,GAG3BhtB,CACV,CAEA,WAAAwgC,CAAYtjC,GACT,IAAI8C,EAAS,GAsBb,OApBKwB,MAAMC,QAAQvE,KAAOA,EAAO,CAACA,IAElCA,EAAK4E,SAASojB,IAEX,IAAIub,EAAa,IAAKvb,IAIrBppB,KAAK6K,SAAS+5B,SAAW,IAAIlhB,MAAM,KAAK1d,SAASvD,IACpC,IAAPA,GAAoB,MAAPA,IACjBkiC,EAAaA,IAAaliC,GAAI,IAG7BiD,MAAMC,QAAQg/B,GACfzgC,EAASA,EAAOyV,OAAOgrB,GACfA,GACRzgC,EAAOkD,KAAKu9B,EACf,IAGIzgC,CACV,CAEA,WAAI6F,GACD,MAAMA,EAAU,CAAC,EAQjB,OANC/J,KAAK0N,QAAQ3D,SAAW,IAAI/D,SAASgX,IACd,MAAjBA,GAAQ3L,QAEZtH,EAAQiT,EAAOva,KAAOua,EAAO3L,MAAK,IAG9BtH,CACV,oBC9HH,MAAM+sB,EAAc,EAAQ,OACtB+N,EAAqB,EAAQ,OAEnCllC,EAAOC,QAAU,cAAsCk3B,EACpD,WAAAh3B,CAAYud,EAAY9c,GACrBR,MAAMsd,EAAY9c,GAElBP,KAAKk6B,YAAa,EAElBl6B,KAAK6f,WAAWxC,EACnB,CAQA,UAAAwC,CAAWxC,GACRtd,MAAM8f,WAAWxC,GAEjBrd,KAAK8kC,YAAcznB,EAAWynB,aAAe,CAAC,EAC9C9kC,KAAK+kC,UAAY1nB,EAAW0nB,WAAa,CAAC,CAC7C,CAUA,KAAAn9B,GACG,MAAM1D,EAASnE,MAAM6H,QAMrB,OAJA1D,EAAOg2B,YAAa,EACpBh2B,EAAO4gC,YAAc9kC,KAAK8kC,YAC1B5gC,EAAO6gC,UAAY/kC,KAAK+kC,UAEjB7gC,CACV,CAOA,KAAAmI,GACG,IAAIA,EAAQ,IAAIw4B,EAAmB7kC,MAMnC,OAHAqM,EAAMka,WAAWvmB,KAAKF,YAAYymB,cAClCla,EAAMo0B,cAAc,CAAExhC,GAAIe,KAAKf,KAExBoN,CACV,oBCjDH,IAAI24B,EAAU,EAAQ,OAClB5nB,EAAY,EAAQ,OAGxB,MAAM0P,EAAI,IAAIjkB,IAAWtI,GAAGgD,aAAaC,SAASqF,GAElDlJ,EAAOC,QAAU,MAAMqlC,UAAqB7nB,EACzC,WAAAtd,CAAYud,EAAY9c,GACrBR,MAAM,CAAC,SAAUQ,GA6BjBP,KAAK6f,WAAWxC,EACnB,CASA,iBAAOkJ,GACJ,MAAO,QACV,CAMA,UAAA1G,CAAWxC,GA4BRrd,KAAKf,GAAKoe,EAAWpe,GAIrBe,KAAK+I,KAAOsU,EAAWtU,MAAQ,SAI/B/I,KAAKklC,SAAW7nB,EAAW6nB,eAAY13B,EAKvCxN,KAAK4L,KAAOyR,EAAWzR,MAAQ,GAK/B5L,KAAKmlC,YAAc9nB,EAAW8nB,aAAe,GAK7CnlC,KAAKolC,cAAgB/nB,EAAW+nB,eAAiB,CAAC,EAGlDplC,KAAKolC,cAAcC,iBAAmBplB,SACnCjgB,KAAKolC,cAAcC,kBAAoB,GAI1CrlC,KAAKi6B,WAAaha,SAAS5C,EAAW4c,YAAc,GAMpDj6B,KAAKg6B,WAAa/Z,SAAS5C,EAAW2c,YAAc,GAUpDh6B,KAAKslC,UAAYjoB,EAAWioB,WAAa,GAMzCtlC,KAAKslC,UAAYtlC,KAAKslC,UAAU1/B,QAAQ,mBAAoB,IAE5D5F,KAAKulC,kBAAoBloB,EAAWkoB,mBAAqB,GAMzDvlC,KAAKwlC,gBAAkBnoB,EAAWmoB,iBAAmB,GAIrDxlC,KAAKylC,QAAUpoB,EAAWooB,SAAW,GAIrCzlC,KAAKge,eAAiBX,EAAWW,oBAOA,IAAvBhe,KAAKge,gBACW,SAAvBhe,KAAKge,iBAELhe,KAAKge,gBAAiB,GAGzBhe,KAAK0lC,eAAiBroB,EAAWqoB,oBAMQ,IAA9BroB,EAAW8H,uBACiC,IAAzC9H,EAAW8H,gBAAgBG,aACnCjI,EAAW8H,gBAAgBG,WAAa,SACe,IAA/CjI,EAAW8H,gBAAgBC,mBACnC/H,EAAW8H,gBAAgBC,iBAAmB,SACO,IAA7C/H,EAAW8H,gBAAgBwgB,iBACnCtoB,EAAW8H,gBAAgBwgB,eAAiB,SACO,IAA3CtoB,EAAW8H,gBAAgBygB,eACnCvoB,EAAW8H,gBAAgBygB,aAAe,KAEhD5lC,KAAKmlB,gBAAkB9H,EAAW8H,iBAAmB,CAClDG,WAAY,GACZF,iBAAkB,GAClBugB,eAAgB,GAChBC,aAAc,IAQjB,IAAItb,EAAS,GACbtqB,KAAK4+B,SAAWvhB,EAAWuhB,UAAY,GAMvC5+B,KAAK6lC,iBAAmBxoB,EAAWwoB,kBAAoB,GAKvD7lC,KAAK6+B,iBAAmB,GACxB7+B,KAAK4+B,SAAS54B,SAAS/G,IACpB,GAAKA,EAAL,CAEA,IAAIib,EAAMla,KAAKO,GAAGue,eAAe7f,GACjC,GAAIib,EACDoQ,EAAOljB,KAAKpH,KAAKO,GAAGq5B,SAAS1f,EAAKla,WAC9B,CACJA,KAAK6+B,iBAAiBz3B,KAAKnI,GAC3B,IAAIkC,EAAM,IAAI7B,MACX,KAAKU,KAAK4L,6CAA6C3M,MAE1De,KAAKO,GAAGoJ,OAAO2sB,QAAQn1B,EAAK,CACzBwtB,MAAO,CAAE1vB,KAAI6lB,OAAQ,CAAE7lB,GAAIe,KAAKf,GAAI2M,KAAM5L,KAAK4L,QAErD,CAbe,CAaf,IAEH5L,KAAK8lC,QAAUxb,EAGftqB,KAAK+lC,cAAc1oB,EAAW2oB,UAG9BjmC,MAAM8f,WAAWxC,EACpB,CAQA,aAAA0oB,CAAcC,GACXhmC,KAAKimC,cAAgB,GACrB,IAAIC,EAAU,IACbF,GAAY,IAAIhgC,SAAS/G,IACvB,IAAIib,EAAMla,KAAKO,GAAGue,eAAe7f,GACjC,GAAIib,EACDgsB,EAAQ9+B,KAAKpH,KAAKO,GAAGu5B,SAAS5f,EAAKla,WAC/B,CACJA,KAAKimC,cAAc7+B,KAAKnI,GACxB,IAAIkC,EAAM,IAAI7B,MACX,KAAKU,KAAK4L,6CAA6C3M,MAE1De,KAAKO,GAAGoJ,OAAO2sB,QAAQn1B,EAAK,CACzBwtB,MAAO,CAAE1vB,KAAI6lB,OAAQ,CAAE7lB,GAAIe,KAAKf,GAAI2M,KAAM5L,KAAK4L,QAErD,KAEH5L,KAAKmmC,SAAWD,CACnB,CAuCA,KAAAt+B,GAEG,IAAI8D,EAAM3L,MAAM6H,QAGZg3B,EAAW5+B,KAAKsqB,SAASxrB,KAAK4iB,GAAMA,EAAEziB,MACzCe,KAAK6+B,kBAAoB,IAAI74B,SAAS/G,IACpC2/B,EAASx3B,KAAKnI,EAAG,IAOpB,IAAI+mC,EAAWhmC,KAAKkmC,UAAUpnC,KAAK4iB,GAAMA,EAAEziB,KAK3C,OAJCe,KAAKimC,eAAiB,IAAIjgC,SAAS/G,IACjC+mC,EAAS5+B,KAAKnI,EAAG,IAGb,CACJA,GAAIe,KAAKf,GACT8J,KAAM/I,KAAK+I,MAAQ,SACnBm8B,SAAUllC,KAAKklC,SACft5B,KAAM5L,KAAK4L,KACXu5B,YAAanlC,KAAKmlC,YAClBC,cAAeplC,KAAKolC,eAAiB,CAAC,EACtCnL,WAAYj6B,KAAKi6B,WACjBD,WAAYh6B,KAAKg6B,WACjBsL,UAAWtlC,KAAKslC,UAEhBC,kBAAmBvlC,KAAKulC,kBAExBC,gBAAiBxlC,KAAKwlC,gBAEtBC,QAASzlC,KAAKylC,QAEdtgB,gBAAiBnlB,KAAKmlB,gBACtBnH,eAAgBhe,KAAKge,eAErB4B,aAAclU,EAAIkU,aAClBgf,SAAUA,EACViH,iBAAkB7lC,KAAK6lC,iBACvBG,SAAUA,EACVN,eAAgB1lC,KAAK0lC,eAE3B,CAcA,WAAAU,GAGG,OAFoBpmC,KAAKwhB,gBAEJ1iB,KAAK4iB,GAAMA,EAAE2L,gBACrC,CAcA,MAAA/C,CAAO5nB,EAAK,MAAM,IACf,OAAO1C,KAAK8lC,QAAQnjC,OAAOD,EAC9B,CASA,SAAAklB,CAAU3oB,GACP,OAAOe,KAAKsqB,QAAQ5I,GAAMA,GAAGziB,IAAMA,IAAI,EAC1C,CAWA,aAAAuiB,CAAc9e,EAAK,MAAM,IACtB,OAAO1C,KAAKsqB,QAAQ5I,GAAMA,GAAKA,EAAE2kB,eAAc1jC,OAAOD,EACzD,CAWA,WAAA4jC,CAAYrnC,GACT,GAAKA,KAEqC,GAAtCe,KAAK6lC,iBAAiBr+B,QAAQvI,IAC/Be,KAAK6lC,iBAAiBz+B,KAAKnI,IAIhBe,KAAK8lC,QAAQhd,MAAMpH,GAAMA,EAAEziB,IAAMA,KACjC,CACX,IAAIib,EAAMla,KAAKO,GAAGue,eAAe7f,GACjC,GAAIib,EACDla,KAAK8lC,QAAQ1+B,KAAKpH,KAAKO,GAAGq5B,SAAS1f,EAAKla,WACpC,CACJA,KAAK6+B,iBAAmB7+B,KAAK6+B,kBAAoB,GACjD7+B,KAAK6+B,iBAAiBz3B,KAAKnI,GAC3B,IAAIkC,EAAM,IAAI7B,MACX,KAAKU,KAAK4L,0CAA0C3M,MAEvDe,KAAKO,GAAGoJ,OAAO2sB,QAAQn1B,EAAK,CACzBwtB,MAAO,CAAE1vB,KAAI6lB,OAAQ,CAAE7lB,GAAIe,KAAKf,GAAI2M,KAAM5L,KAAK4L,QAErD,CACH,CACH,CAaA,QAAAguB,CAASr0B,GACN,OAAOvF,KAAKO,GAAGq5B,SAASr0B,EAAQvF,KACnC,CAWA,WAAAumC,CAAY5X,GACT,IAAI6X,EAAUxmC,KAAK8lC,QAAQlkC,OAW3B,OAVA5B,KAAK8lC,QAAU9lC,KAAKsqB,QAAO,SAAUlrB,GAClC,OAAOA,EAAEH,IAAM0vB,EAAM1vB,EACxB,IAIAe,KAAK6lC,iBAAmB7lC,KAAK6lC,iBAAiBljC,QAC1C8jC,GAAQA,GAAO9X,EAAM1vB,KAGrBe,KAAK8lC,QAAQlkC,OAAS4kC,EAChBxmC,KAAK2H,OAIRnG,QAAQ9B,SAClB,CAUA,YAAAgnC,CAAaC,EAAUC,GAIpB,IAAIC,EAAY,KACZC,EAAO,EACX,IAAK,IAAI5gC,EAAI,EAAGA,EAAIlG,KAAK8lC,QAAQlkC,OAAQsE,IACtC,GAAIlG,KAAK8lC,QAAQ5/B,GAAG+b,YAAc0kB,EAAU,CACzCE,EAAY7mC,KAAK8lC,QAAQ5/B,GACzBlG,KAAK8lC,QAAQvT,OAAOrsB,EAAG,GACvB4gC,EAAO5gC,EACP,KACH,CAKH,IAAK,IAAI6gC,EAAI,EAAGA,EAAI/mC,KAAK8lC,QAAQlkC,OAAQmlC,IACtC,GAAI/mC,KAAK8lC,QAAQiB,GAAG9kB,YAAc2kB,EAAU,CAIrCE,GAAQC,GACTA,IAEH/mC,KAAK8lC,QAAQvT,OAAOwU,EAAG,EAAGF,GAC1B,KACH,CAGH,OAAO7mC,KAAK2H,MACf,CAWA,SAAAq/B,CAAUrY,GAEP,OADiB3uB,KAAK4nB,UAAU+G,EAAM1vB,IAM/BuC,QAAQ9B,WAJZM,KAAK8lC,QAAQ1+B,KAAKunB,GACX3uB,KAAK2H,OAIlB,CAWA,QAAAs/B,CAAStY,GAEN,OADiB3uB,KAAK4nB,UAAU+G,EAAM1vB,IAQ/BuC,QAAQ9B,WALZM,KAAK8lC,QAAQ1+B,KAAKunB,GACX3uB,KAAK2H,OAKlB,CAWA,WAAAu/B,CAAYxkC,EAAK,MAAM,IACpB,OAAO1C,KAAKsqB,QAAQ5I,GAAMA,GAAc,SAATA,EAAEjf,MAAgBE,OAAOD,EAC3D,CASA,kBAAAi+B,GACG,OAAO3gC,KAAKsqB,QAAQ5I,GAAMA,GAAKA,EAAEylB,iBAAgBroC,KAAK4iB,GAAMA,EAAEO,YACjE,CAWA,OAAAikB,CAAQvjC,EAAS,MAAM,IACpB,OAAO3C,KAAKmmC,SAASxjC,OAAOA,EAC/B,CASA,SAAAykC,CAAUnoC,GACP,OAAOe,KAAKkmC,SAASxkB,GAAMA,EAAEziB,IAAMA,IAAI,EAC1C,CASA,WAAAooC,CAAY1a,GACT,IAAI6Z,EAAUxmC,KAAKmmC,SAASvkC,OAM5B,OALA5B,KAAKmmC,SAAWnmC,KAAKkmC,SAAQ,SAAUoB,GACpC,OAAOA,EAAIroC,IAAM0tB,EAAM1tB,EAC1B,IAGIunC,GAAWxmC,KAAKmmC,SAASvkC,OACnB5B,KAAK2H,OAIRnG,QAAQ9B,SAClB,CASA,SAAA6nC,CAAU5a,GAEP,OADiB3sB,KAAKonC,UAAUza,EAAM1tB,IAM/BuC,QAAQ9B,WAJZM,KAAKmmC,SAAS/+B,KAAKulB,GACZ3sB,KAAK2H,OAIlB,CAWA,KAAA0E,GACG,IAAIA,EAAQ,IAAI24B,EAAQhlC,MAMxB,OAHAqM,EAAMka,WAAW0e,EAAa1e,cAC9Bla,EAAMo0B,cAAc,CAAExhC,GAAIe,KAAKf,KAExBoN,CACV,CAWA,OAAAy0B,GACG,MAAO,sBAAsB9gC,KAAKf,IACrC,CAOA,YAAAuoC,GACG,MAAO,4BAA4BxnC,KAAKf,IAC3C,CAOA,WAAA+hC,CAAY/hC,GACT,MAAO,sBAAsBe,KAAKf,MAAMA,GAC3C,CAOA,UAAAwoC,GACG,MAAO,uBAAuBznC,KAAKf,UACtC,CAOA,cAAAyoC,GACG,MAAO,oCAAoC1nC,KAAKf,IACnD,CAOA,YAAAkiC,GACG,MAAO,sBAAsBnhC,KAAKf,UACrC,CAKA,uBAAI0oC,GAED,GAAI3nC,KAAK4nC,eAAgB,CACtB,IAAIC,EAAW7nC,KAAK4nC,eAAeE,iBACnC,OAAID,EAAiBA,EAASviB,WAClB,IACf,CAGG,OAAOtlB,KAAKmlB,gBAAgBG,UAElC,CAEA,uBAAIqiB,CAAoBrd,GAErB,GAAItqB,KAAK4nC,eAAgB,CACtB,IAAIC,EAAW7nC,KAAK4nC,eAAeE,iBAC/BD,IAAUA,EAASviB,WAAagF,EACvC,MAGGtqB,KAAKmlB,gBAAgBG,WAAagF,CAExC,CAEA,6BAAIyd,GAED,GAAI/nC,KAAK4nC,eAAgB,CACtB,IAAIC,EAAW7nC,KAAK4nC,eAAeE,iBACnC,OAAID,EAAiBA,EAASziB,iBAClB,IACf,CAGG,OAAOplB,KAAKmlB,gBAAgBC,gBAElC,CAEA,6BAAI2iB,CAA0B3iB,GAE3B,GAAIplB,KAAK4nC,eAAgB,CACtB,IAAIC,EAAW7nC,KAAK4nC,eAAeE,iBAC/BD,IAAUA,EAASziB,iBAAmBA,EAC7C,MAGGplB,KAAKmlB,gBAAgBC,iBAAmBA,CAE9C,CAEA,2BAAI4iB,GACD,OAAOhoC,KAAKmlB,gBAAgBwgB,cAC/B,CAEA,2BAAIqC,CAAwB/oC,GACzBe,KAAKmlB,gBAAgBwgB,eAAiB1mC,CACzC,CAEA,yBAAIgpC,GACD,OAAOjoC,KAAKmlB,gBAAgBygB,cAAgB,EAC/C,CAEA,yBAAIqC,CAAsB3d,GACvBtqB,KAAKmlB,gBAAgBygB,aAAetb,CACvC,CAOA,cAAI4d,GACD,OAAOloC,KAAKi6B,YAAcj6B,KAAKg6B,YAAch6B,KAAKokC,QACrD,CASA,aAAA+D,GACG,IAAI5iC,EAAS,CAAC,EAKd,OAJAvF,KAAKsqB,SAAStkB,SAAS0b,IACpBA,EAAE0mB,aAAa7iC,EAAO,IAGlBA,CACV,CASA,WAAA8mB,GAGG,OADAhrB,QAAQqF,KAAK,4CACN,CACV,CAYA,UAAAmd,CAAWC,GAGR,OAFAziB,QAAQC,MAAM,wBAEU,MAApBtB,KAAKykB,YAA4B,KAE9BzkB,KAAKykB,YAAYV,UAAUD,GAAa9jB,KAAKf,EACvD,CAUA,QAAAopC,CAASvkB,GAGN,OAFAziB,QAAQC,MAAM,wBAEPtB,KAAK6jB,WAAWC,GAAa,WACvC,CAQA,EAAA7X,GACG,OAAOjM,KAAKulC,mBAAqB,MACpC,CAEA,YAAA+C,CAAalnC,GACVC,QAAQmJ,IACL,UAAYxK,KAAK4L,KAAO,yCACxBxK,EAEN,CAQA,KAAAu0B,GAGG,IAEI4S,EAAW5hC,KAAKiE,MAAMjE,KAAKC,UAAU5G,OAMzC,MARkB,CAAC,cAAe,WAItBgG,SAASwiC,IAClBD,EAASC,GAAQxoC,KAAKwoC,EAAK,IAGvBD,CACV,CAQA,eAAAE,GACG,IAAIne,EAAS,CAACtqB,KAAKiM,MAEfjM,KAAK2gC,qBAAqB/+B,OAAS,GACpC0oB,EAAOljB,KAAK,gBAGf,IAIIshC,GAJY1oC,KAAKmlC,aAAe,IAIb73B,MAAM,cAE7B,GAAIo7B,GAAUA,EAAO1iC,QAClB0iC,EAAO1iC,SAAS2iC,IACb,IAAIC,EAAiBD,EAAM/iC,QAAQ,IAAK,IAAIA,QAAQ,IAAK,IAErD+oB,EAAQ3uB,KAAK4nB,UAAUghB,GACd,MAATja,GAEJrE,EAAOljB,KAAKunB,EAAM1M,WAAW,QAI9B,CACF,MAAM4mB,EAAa7oC,KAAKsqB,QAAQ5I,GAAMA,EAAEonB,oBAAmB,GACvDD,GAAYve,EAAOljB,KAAKyhC,EAAW5mB,WAC1C,CAQA,OAJAqI,EAASA,EAAO3Q,OACb3Z,KAAKsqB,QAAQ5I,GAAe,UAATA,EAAEjf,MAAiB3D,KAAK4iB,GAAMA,EAAEO,aAIzD,CAGA,WAAA8mB,CAAY9e,GACT,GAAe,MAAXA,EAAiB,MAAO,GAI5B,IAAIoV,EAAWr/B,KAAK2gC,qBACpB3gC,KAAKs/B,UAAUrV,EAASA,EAASoV,GAEjC,IAAI2J,EAAYhpC,KAAKmlC,aAAe,GAGpC,IAAK6D,GAAahpC,KAAKsqB,SAAS1oB,OAAS,EAAG,CACzC,IAAIqnC,EAAejpC,KAAKsqB,QAAQ5I,GAAMA,EAAEonB,oBAAmB,GAC3D,GAAIG,EAAcD,EAAY,IAAMC,EAAahqC,GAAK,SAGnD,IAAK+pC,EAAUE,OAAQ,CACpB,IAAI9D,EAAgBplC,KAAKolC,eAAiB,CAAC,EAExC4D,EADC5D,GAAiBA,EAAcC,iBACpBvY,EAAEsY,EAAc+D,aAAe,cAG/B,GACTnpC,KAAKO,GAAGqZ,MAAMoB,OAAOiP,EAAQhrB,IAAM,OAAS,KAC5CgrB,EAAQhrB,IAEjB,CAEN,CAIA,IAAIypC,EAASM,EAAU17B,MAAM,cAM7B,IAAI87B,EAAY,GAehB,GAdIV,GAAUA,EAAO1iC,SAClB0iC,EAAO1iC,SAAS2iC,IACb,IAAIC,EAAiBD,EAAM/iC,QAAQ,IAAK,IAAIA,QAAQ,IAAK,IAErD+oB,EAAQ3uB,KAAK4nB,UAAUghB,GAC3B,GAAa,MAATja,EAAe,OAEnB,IAAI0a,EAAW1a,EAAM9W,OAAOoS,IAAY,GACxC+e,EAAYA,EAAUpjC,QAAQ+iC,EAAOU,GACrCD,EAAY,GAAGA,IAAYC,GAAU,KAKtCD,EAAUF,OAAQ,CACpB,IAAI9D,EAAgBplC,KAAKolC,eAAiB,CAAC,EAExC4D,EADC5D,GAAiBA,EAAcC,iBACpBvY,EAAEsY,EAAc+D,aAAe,cAG/B,GAAGnpC,KAAKO,GAAGqZ,MAAMoB,OAAOiP,EAAQhrB,IAAM,OAAS,KACxDgrB,EAAQhrB,IAGjB,CAEA,OAAO+pC,CACV,CAoBA,YAAAxX,CAAapP,GACV,GAAIA,EAAM,CACP,GAAIA,EAAKiD,MAAQjD,EAAKxI,MAAO,CAM1B,IAAKlU,MAAMC,QAAQyc,EAAKxI,OAAQ,CAE7B,IAAIzY,EAAM,IAAI7B,MACX,qGAAqGqH,KAAKC,UACvGwb,MAGNpiB,KAAKO,GAAGoJ,OAAOC,UAAUzI,EAAK,CAAEihB,QACnC,CAIA,IAAIknB,EAAW,CAAEjkB,KAAMjD,EAAKiD,KAAMzL,MAAO,IAUzC,OATAwI,EAAKxI,MAAM5T,SAAStE,IACjB,IAAI6nC,EAAYvpC,KAAKwxB,aAAa9vB,GAE9B6nC,GACDD,EAAS1vB,MAAMxS,KAAKmiC,EACvB,IAICD,EAAS1vB,MAAMhY,OAAS,EAClB0nC,EAIH,IACV,CAIA,OAAI7pC,OAAOD,KAAK4iB,GAAMxgB,OAAS,EAAUwgB,EAGlC,IACV,CACA,OAAO,IACV,oBC5iCH,IAAI+M,EAAW,EAAQ,OACnBqa,EAAe,EAAQ,OAE3B7pC,EAAOC,QAAU,cAAgCuvB,EAC9C,WAAArvB,CAAYud,EAAY9c,GACrBR,MAAMsd,EAAY9c,GAgDlBP,KAAKylB,SAAU,EAIfzlB,KAAKypC,gBAAkBzpC,KAAKypC,iBAAmB,GAI/CzpC,KAAK0pC,gBAAkB1pC,KAAK0pC,iBAAmB,GAI/C1pC,KAAK2pC,aAAe,GAIpB3pC,KAAK4pC,kBAAoB,GAIzB5pC,KAAK6pC,eAAiB,EAGzB,CAeA,iBAAOtjB,GACJ,MAAO,OACV,CAQA,UAAA1G,CAAWxC,GACRtd,MAAM8f,WAAWxC,GAEjBrd,KAAK+I,KAAO,QAMZ/I,KAAK8pC,UAAY,CAAC,EAKlB9pC,KAAKye,UAAY,GAKjBze,KAAKw9B,SAAWngB,EAAWmgB,UAAY,GAMvCx9B,KAAK+pC,YAAY1sB,EAAW2sB,OAAS,CAAC,GAGtChqC,KAAK8lC,QAAU,KACf9lC,KAAKiqC,aAAa5sB,EAAWiN,QAAU,IASvCtqB,KAAK4rB,MAAQvO,EAAWuO,OAAS,CAAC,EAG/B5rB,KAAK4rB,QACJ5rB,KAAK4rB,MAAMvG,MACZrlB,KAAK4rB,MAAMhS,OACX5Z,KAAK4rB,MAAMhS,MAAMhY,OAAS,IAE1B5B,KAAK4rB,MAAMvG,KAAO,OAErBrlB,KAAKkqC,sBAAwB7sB,EAAW8sB,sBAAwB,CAAC,EAEjEnqC,KAAK2hB,SAAW3hB,KAAK2hB,UAAY,CAAC,EAE9BtE,GAAcA,EAAWsE,WAE1B3hB,KAAK2hB,SAASyoB,SAAWzjC,KAAKiE,MAC3ByS,EAAWsE,SAASyoB,WAAY,GAEnCpqC,KAAK2hB,SAAS0oB,WAAa1jC,KAAKiE,MAC7ByS,EAAWsE,SAAS0oB,aAAc,GAG3C,CAUA,KAAAziC,GACG,IAAI1D,EAASnE,MAAM6H,QAUnB,OARA1D,EAAOs5B,SAAWx9B,KAAKw9B,SAEvBt5B,EAAO8lC,MAAQhqC,KAAKsqC,cACpBpmC,EAAOomB,OAAStqB,KAAKuqC,eACrBrmC,EAAO0nB,MAAQ5rB,KAAK4rB,MAEpB1nB,EAAOyd,SAAW3hB,KAAK2hB,SAEhBzd,CACV,CAaA,YAAA+lC,CAAaO,GACV,IAAIC,EAAY,IACfD,GAAiB,IAAIxkC,SAAS0kC,IAC5B,GAAiB,MAAbA,EAAmB,OAGvB,IAAI5lB,EAAS9kB,KAAK2qC,cAAcD,EAAU5e,OAa1C,IAVKhH,GAAU9kB,KAAKO,KACjBukB,EAAS9kB,KAAKO,GAAGoL,WAAW++B,EAAUhc,UAGlC5J,IACD9kB,KAAK4qC,SAAW5qC,KAAK4qC,UAAY,CAAC,EAClC5qC,KAAK4qC,SAASF,EAAU5e,OAAShH,KAIlCA,EAGF,OAFA9kB,KAAKypC,gBAAkBzpC,KAAKypC,iBAAmB,QAC/CzpC,KAAKypC,gBAAgBriC,KAAKsjC,GAI7B,IAAI/b,EAAQ7J,EAAO8C,UAAU8iB,EAAU9b,SACvC,IAAKD,EAOF,OANA3uB,KAAK0pC,gBAAkB1pC,KAAK0pC,iBAAmB,QAC/C1pC,KAAK0pC,gBAAgBtiC,KAAK,CACvByjC,MAAO/lB,EAAO7lB,GACd2vB,QAAS8b,EAAU9b,QACnB8b,cAKD1qC,KAAK8qC,eAAenc,KACtB3uB,KAAK2pC,aAAe3pC,KAAK2pC,cAAgB,GACzC3pC,KAAK2pC,aAAaviC,KAAK,CAAEunB,QAAO+b,eAInC,IAAIK,EACDN,EAAU9nC,QACN+e,GACEA,EAAEoK,OAAS4e,EAAU5e,OAASpK,EAAEiN,MAAM1vB,IAAMyrC,EAAU9b,UAC1DhtB,OAAS,EAQd,GANKmpC,IACF/qC,KAAK4pC,kBAAoB5pC,KAAK4pC,mBAAqB,GACnD5pC,KAAK4pC,kBAAkBxiC,KAAK,CAAEsjC,eAI7B/b,GAAS3uB,KAAK8qC,eAAenc,IAAUoc,EAAO,CAG/C,IAAI7wB,EAAMyU,EAAM/mB,QAChB,IAAIojC,EAAc,IAAIrc,EAAM7uB,YAAYoa,EAAKyU,EAAM7J,QAEnDkmB,EAAYlf,MAAQ4e,EAAU5e,MAE9B,IAAIA,EAAQ4e,EAAU5e,MAClBpmB,MAAMC,QAAQ3F,KAAKgqC,WAEpBle,EAAQ6C,EAAM7J,OAAOlZ,MAGxB6+B,EAAUrjC,KAAK,CACZ0kB,MAAOA,EACP6C,MAAOqc,GAEb,KAEHhrC,KAAK8lC,QAAU2E,CAClB,CAOA,YAAAF,GACG,IAAIU,EAAa,GAmBjB,OAlBAjrC,KAAK8lC,QAAQ9/B,SAAS0kC,IACnBO,EAAW7jC,KAAK,CACb0kB,MAAO4e,EAAU5e,MACjB4C,SAAUgc,EAAU/b,MAAM7J,OAAO7lB,GACjC2vB,QAAS8b,EAAU/b,MAAM1vB,IAC1B,KAKJe,KAAKypC,iBAAmB,IAAIzjC,SAAS0b,IACnCupB,EAAW7jC,KAAKsa,EAAE,KAGpB1hB,KAAK2pC,cAAgB,IAAI3jC,SAAS0b,IAChCupB,EAAW7jC,KAAKsa,EAAEgpB,UAAU,IAGxBO,CACV,CAUA,MAAA3gB,CAAO5nB,EAAK,MAAM,IAEf,OADKA,IAAIA,EAAK,KAAM,GACb1C,KAAK8lC,QAAQhnC,KAAK4iB,GAAMA,EAAEiN,QAAOhsB,OAAOD,EAClD,CAaA,KAAAsnC,GACG,OAAOhqC,KAAKkrC,QAAU,CAAC,CAC1B,CASA,OAAAlqB,CAAQte,EAAK,MAAM,IAIhB,OAAO1C,KAAKO,GAAGygB,SAAS5hB,GAAMY,KAAKye,UAAUjX,QAAQpI,EAAEH,KAAO,IAAG0D,OAC9DD,EAEN,CASA,WAAAqpB,CAAYtgB,GACT,IAAIvH,EAAS,KAQb,OANAzE,OAAOD,KAAKQ,KAAK8pC,WAAa,CAAC,GAAG9jC,SAAS8lB,IACnC5nB,GAAUlE,KAAK8pC,UAAUhe,IAAUrgB,IACrCvH,EAAS4nB,EACZ,IAGI5nB,CACV,CAQA,UAAAinC,GACG,OAAKnrC,KAAKkrC,OAAOxc,UAEV1uB,KAAKO,GAAGoL,WAAW3L,KAAKkrC,OAAOxc,WAFJ,IAGrC,CASA,aAAAic,CAAc7e,GACX,IAAI+e,EAAQ7qC,KAAK8pC,UAAUhe,GAC3B,OAAI+e,EACM7qC,KAAKghB,SAAS5hB,GAAMA,EAAEH,IAAM4rC,IAAO,GAEtC,IACV,CASA,UAAAl/B,CAAWk/B,GACR,OAAIA,EACM7qC,KAAKghB,SAAS5hB,GAAMA,EAAEH,IAAM4rC,IAAO,GAEtC,IACV,CASA,KAAAO,CAAMzoC,EAAS,MAAM,IAClB,OAAQ3C,KAAKqrC,QAAU,IAAI1oC,OAAOA,EACrC,CASA,WAAAonC,CAAYpoB,GAET3hB,KAAKkrC,OAASlrC,KAAKO,GAAGma,UAAUiH,GAEhC,IAAI2pB,EAAkB,CAAC,EAKnBC,EAAW,GAIf,IAAIC,EAAc,CAAC1mB,EAAQgH,KACnBhH,IAML9kB,KAAK8pC,UAAUhe,GAAShH,EAAO7lB,GAC/BqsC,EAAgBxmB,EAAO7lB,IAAM6lB,EAAO7lB,GAAE,EAQrCwsC,EAAcL,KACdA,GAAS,IAAIplC,SAAS0W,IAGpB6uB,EAASnkC,KAAKsV,EAAK,GAEpB,EAGL1c,KAAK6pC,eAAiB7pC,KAAK6pC,gBAAkB,GAE7C,IAAI6B,EAAc,CAACC,EAAY3B,KACvB2B,IAEJ3B,GAAS,IAAIhkC,SAAS0W,IAkBpB,IAAIkvB,EAAYD,EAAW/jB,UAAUlL,EAAKkS,SAC1C,GAAKgd,EAAL,CAWA,IAAIhqB,EAAa5hB,KAAKO,GAAGoL,WAAWigC,EAAUjqB,SAASC,YAClDA,GAUL4pB,EAAY5pB,EAAYlF,EAAKoP,OAE7B2f,EAAW/uB,EAAK0uB,OAEhBM,EAAY9pB,EAAYlF,EAAK0uB,QAb1BprC,KAAK6pC,eAAeziC,KAAK,CACtB1D,QAAS,oDAAoDkoC,EAAUjqB,SAASC,cAChFxgB,KAAM,CACHsb,SART,MAPG1c,KAAK6pC,eAAeziC,KAAK,CACtB1D,QAAS,mCAAmCgZ,EAAKkS,WACjDxtB,KAAM,CACHsb,SAsB0B,GACpC,EAQL,IAAImvB,EAAa7rC,KAAKmrC,aACjBU,GAWLL,EAAYK,EAAY,eAExBJ,EAAW9pB,EAASypB,OAEpBM,EAAYG,EAAYlqB,EAASypB,OAGjCprC,KAAKqrC,OAASE,EACdvrC,KAAKye,UAAYhf,OAAOD,KAAK8rC,IAjB1BtrC,KAAK6pC,eAAeziC,KAAK,CACtB1D,QAAS,oCACTtC,KAAM,CACHstB,SAAU1uB,KAAKkrC,QAAQxc,WAenC,CAOA,WAAA4b,GACG,OAAOtqC,KAAKO,GAAGma,UAAU1a,KAAKkrC,QAAU,CAAC,EAC5C,CAWA,KAAA7+B,GACG,IAAIA,EAAQ,IAAIm9B,EAAaxpC,MAM7B,OAHAqM,EAAMka,WAAWvmB,KAAKF,YAAYymB,cAClCla,EAAMo0B,cAAc,CAAExhC,GAAIe,KAAKf,KAExBoN,CACV,CASA,eAAAy/B,CAAgBhnB,GACb,QAAKA,GAIF9kB,KAAKghB,SAAStV,GACJA,EAAIzM,IAAM6lB,EAAO7lB,KACxB2C,OAAS,CAElB,CASA,cAAAkpC,CAAenc,GACZ,IAAKA,EAAO,OAAO,EAGnB,IAAI7J,EAAS6J,EAAM7J,OAKnB,IAAIinB,EAAepd,EAAMtB,eAEzB,OAAOrtB,KAAK8rC,gBAAgBhnB,IAAW9kB,KAAK8rC,gBAAgBC,EAC/D,CAYA,UAAAloB,CAAWC,GAIR,OAHAziB,QAAQC,MACL,sEAEItB,KAAKykB,YAAYR,SAASH,GAAa9jB,KAAKf,EACtD,CAOA,WAAI0gB,GACD,OAAO3f,KAAK2hB,SAASyoB,WAAY,CACpC,CAOA,cAAIlC,GACD,OAAO,CACV,CAQA,UAAA8D,GACG,OAAOhsC,KAAKisC,WAAY,CAC3B,CAEA,6BAAIlE,GACD,IAAI3iB,EAAmBrlB,MAAMgoC,0BAS7B,OAPuB,MAApB3iB,GAC0B,MAA1BA,EAAiBxL,OAChBwL,EAAiBxL,MAAMhY,SAExBwjB,EAAmBplB,KAAK4rB,OAGpBxG,CACV,oBCxqBH,IAAIhI,EAAY,EAAQ,OACxB,MAAM8uB,EAAU,EAAQ,OAElBC,EAA0B,EAAQ,OAExCxsC,EAAOC,QAAU,cAA4Bwd,EAC1C,WAAAtd,CAAYud,EAAY9c,GACrBR,MAAM,CAAC,SAAUQ,GAEjBP,KAAK6f,WAAWxC,GAGhBrd,KAAKoW,WAAWpQ,SAAS3G,IACtBA,EAAE+sC,gBAAgB,GAExB,CASA,UAAAvsB,CAAWxC,GASRrd,KAAKf,GAAKoe,EAAWpe,GACrBe,KAAK4L,KAAOyR,EAAWzR,MAAQ,GAC/B5L,KAAK+I,KAAOsU,EAAWtU,MAAQ,UAC/B/I,KAAKqsC,cAAgBhvB,EAAWgvB,eAAiB,KAGjD,IAAIC,EAAetsC,KAAKusC,WAAa,CAAC,EACtCvsC,KAAKusC,UAAY,CAAC,GACjBlvB,EAAWmvB,YAAc,IAAIxmC,SAASymC,IACpC,IAAIpO,EAAMr+B,KAAKO,GAAG+6B,kBAAkBmR,EAAKzsC,MACrCq+B,EACDr+B,KAAKusC,UAAUE,GAAOpO,EAIlBiO,EAAaG,GACdzsC,KAAKusC,UAAUE,GAAOH,EAAaG,GAEnCzsC,KAAKuB,KACF,UACA,KAAKvB,KAAK4L,sDAAsD6gC,KAChE,CAAE/pB,QAAS1iB,KAAKf,GAAIwtC,OAG7B,IAGHzsC,KAAK0sC,aAAervB,EAAWmlB,aAAe,CAAC,EAE/CziC,MAAM8f,WAAWxC,GAGZrd,KAAKwD,QACPxD,KAAKwD,MAAQxD,KAAK4L,KAExB,CAQA,KAAAhE,GAEQ5H,KAAKwD,QACPxD,KAAKwD,MAAQxD,KAAK4L,MAIrB,IAAIxK,EAAOrB,MAAM6H,QAQjB,IAAK,IAAIvI,IANU,CAAC,KAAM,OAAQ,iBACrB2G,SAAS0b,IACnBtgB,EAAKsgB,GAAK1hB,KAAK0hB,EAAE,IAGpBtgB,EAAKorC,WAAa,GACJxsC,KAAKusC,UAGhBnrC,EAAKorC,WAAWplC,KACbpH,KAAKusC,UAAUltC,GAAGJ,IAAMe,KAAKusC,UAAUltC,GAAGstC,WAWhD,OAPAvrC,EAAKohC,YAAcxiC,KAAK0sC,aAOjBtrC,CACV,CAWA,eAAAwrC,GACG,OAAO5sC,KAAKqsC,aACf,CAOA,QAAAQ,GACG7sC,KAAKqsC,cAAgB,saACkWrsC,KAAKf,8gBAc/X,CAQA,WAAA6tC,CAAYC,GACT/sC,KAAKqsC,cAAgBU,CACxB,CAcA,WAAAvK,CAAY9/B,EAAK,MAAM,IACpB,IAAIsqC,EAAiBvtC,OAAOD,KAAKQ,KAAK0sC,cAAc5tC,KAAKO,GAC/CW,KAAK0sC,aAAartC,KAQ5B,OAJIW,KAAK0iB,SAAwB,eAAb1iB,KAAKyC,MACtBuqC,EAAiBA,EAAerzB,OAAO3Z,KAAK0iB,QAAQ8f,gBAGhDwK,EAAerqC,OAAOD,EAChC,CAQA,sBAAAuqC,CAAuBC,GACpB,OAAOltC,KAAKwiC,aAAa3C,GACfA,EAAE5gC,IAAMiuC,IACf,EACN,CAQA,mBAAAC,CAAoBD,GACjB,OAAOltC,KAAKwiC,aAAaU,GACfA,EAAEkK,IAAMF,GAErB,CAQA,mBAAAG,CAAoBH,GACjB,OAAOltC,KAAKwiC,aAAaU,GACfA,EAAEoK,MAAQJ,GAEvB,CAQA,gBAAAK,CAAiB5R,UACP37B,KAAK0sC,aAAa/Q,EAAQ18B,GACpC,CAcA,uBAAAuuC,CAAwB7R,GACrB,IAAI8R,EAAK9R,EAAQ+R,eACbJ,EAAO,KACPG,EAAGE,YACJL,EAAOG,EAAGE,UAAU1uC,IAGvB,IAAImuC,EAAK,KAWT,OAVIK,EAAGG,YACJR,EAAKK,EAAGG,UAAU3uC,IAGJ,CACdA,GAAI08B,EAAQ18B,GACZ8J,KAAM4yB,EAAQ5yB,KACdukC,KAAMA,EACNF,GAAIA,EAGV,CAQA,gBAAAS,CAAiBlS,GACd,IAAImS,EAAa9tC,KAAKwtC,wBAAwB7R,GAC1CmS,EAAWR,MAAQQ,EAAWV,IAAMzR,EAAQ5zB,OAC7C/H,KAAK0sC,aAAaoB,EAAW7uC,IAAM6uC,EAInC9tC,KAAKutC,iBAAiB5R,EAE5B,CAUA,QAAAvlB,CAAS1T,EAAK,MAAM,IAIjB,OAHkBjD,OAAOD,KAAKQ,KAAKusC,WAAWztC,KAAKO,GACzCW,KAAKusC,UAAUltC,KAENsD,OAAOD,EAC7B,CAQA,UAAAqrC,CAAWpS,GACR37B,KAAKusC,UAAU5Q,EAAQ18B,IAAM08B,EAAQgR,WAAahR,CACrD,CAQA,WAAAqS,CAAY/uC,GACT,OAAOe,KAAKusC,UAAUttC,IAAO,IAChC,CAQA,mBAAAgvC,CAAoBf,GACjB,OAAOltC,KAAKoW,UAAUypB,GACZA,EAAE8M,WAAaO,IACtB,EACN,CASA,aAAAgB,CAAch0B,UACJla,KAAKusC,UAAUryB,EAAIjb,IAAMib,EAAIyyB,UACvC,CASA,aAAAwB,CAAc1rC,GACX,OAAsC,MAA/BzC,KAAKouC,kBAAkB3rC,EACjC,CASA,kBAAA4rC,CAAmBC,GAChB,IAAIl4B,EAAW,GAYf,OAXsBpW,KAAKwiC,aAAaU,GAC9BA,EAAEoK,MAAQgB,EAAY3B,YAEhB3mC,SAASk9B,IACtB,IAAIvH,EAAU37B,KAAKoW,UAAU/W,GACnBA,EAAEstC,WAAazJ,EAAEkK,KACxB,GACCzR,GACDvlB,EAAShP,KAAKu0B,EACjB,IAEIvlB,CACV,CASA,sBAAAm4B,CAAuBD,GACpB,IAAIl4B,EAAW,GAYf,OAXsBpW,KAAKwiC,aAAaU,GAC9BA,EAAEkK,IAAMkB,EAAY3B,YAEd3mC,SAASk9B,IACtB,IAAIvH,EAAU37B,KAAKoW,UAAU/W,GACnBA,EAAEstC,WAAazJ,EAAEoK,OACxB,GACC3R,GACDvlB,EAAShP,KAAKu0B,EACjB,IAEIvlB,CACV,CAUA,WAAAo4B,CAAYF,EAAazlC,GAStB,IAAI4lC,EAAazuC,KAAK0uC,iBAAiBJ,GACnC/oC,EAASopC,EAAmBF,EAAY,cAAe5lC,EAAQ7I,MACnE,OAAOuF,EAAO3D,OAAS,EAClB2D,EAAO3D,OAAS,EACb2D,EACAA,EAAO,GACV,IACR,CAYA,iBAAAqpC,CAAkBN,GACf,IAAIG,EAAazuC,KAAK0uC,iBAAiBJ,GAEnChkB,EAASqkB,EACVF,EACA,oBACA,KACAzuC,MAGH,GAAiB,eAAbA,KAAKyC,IAAsB,CAC5B,MAAMosC,EAAe7uC,KAAK0iB,QAAQksB,kBAAkB5uC,MAChD6uC,GACDvkB,EAAOljB,QAAQynC,EAErB,CACA,OAAOvkB,EAAO1oB,OAAS,EAAI0oB,EAAS,IACvC,CAWA,mCAAAwkB,CAAoCC,EAAMC,GACjBhvC,KAAKwiC,aAAaU,GAC9BA,EAAEkK,IAAM2B,EAAKzB,OAGPtnC,SAASk9B,IACjB8L,EAAS9L,EAAEjkC,MACb+vC,EAAS9L,EAAEjkC,IAAMikC,EACjBljC,KAAK8uC,oCAAoC5L,EAAG8L,GAC/C,GAEN,CACA,gCAAAC,CAAiCX,GAC9B,IAAIY,EAAkBlvC,KAAKwiC,aAAaU,GAC9BA,EAAEkK,IAAMkB,EAAY3B,YAE1BqC,EAAW,CAEf,EAYA,OATAE,EAAgBlpC,SAASk9B,IACtB8L,EAAS9L,EAAEjkC,IAAMikC,EACjBljC,KAAK8uC,oCAAoC5L,EAAG8L,EAAS,IAOjDvvC,OAAOD,KAAKwvC,GAAUlwC,KAAKmI,GAAM+nC,EAAS/nC,IACpD,CAEA,gBAAAynC,CAAiBJ,GACd,IAGIa,EAHAC,EAAY,CAAC,EAiBjB,OAfGpvC,KAAKivC,iCAAiCX,GAElBtoC,SAAS+oC,KAE7BI,EAAOnvC,KAAKiuC,oBAAoBc,EAAK3B,OAC3BgC,EAAUD,EAAKlwC,IAAMkwC,IAE/BA,EAAOnvC,KAAKiuC,oBAAoBc,EAAKzB,SAC3B8B,EAAUD,EAAKlwC,IAAMkwC,EAAI,IAGrB1vC,OAAOD,KAAK4vC,GACzBtwC,KAAKmI,GAAMmoC,EAAUnoC,KACrBtE,QAAQk9B,GAAMA,EAAE5gC,IAAMqvC,EAAYrvC,IAGzC,CAUA,kBAAAowC,CAAmBf,GAChB,IAAIG,EAAazuC,KAAKuuC,uBAAuBD,GACzChkB,EAASqkB,EACVF,EACA,qBACA,KACAzuC,MAEH,OAAOsqB,EAAO1oB,OAAS,EAAI0oB,EAAS,IACvC,CAQA,iBAAA8jB,CAAkB3rC,GAIf,OAHczC,KAAKoW,UAAUypB,GACnBA,EAAEyP,YAAc7sC,IACvB,IAIO,IAEb,GAsCH,IAAIksC,EAAqB,CACtBY,EACAllC,EACAmlC,EACA9sB,EACA+sB,EACAC,KAUA,QANwB,IAAbD,IACRA,EAAY,SAEY,IAAhBC,IACRA,EAAe,IAEC,GAAfH,EAAK3tC,OACN,OAAO6tC,EACH,CAEJ,MAAMN,EAAOI,EAAKpoC,QAGlB,IAA6C,GAAzCuoC,EAAaloC,QAAQ2nC,EAAKxC,WAAkB,CAE7C+C,EAAatoC,KAAK+nC,EAAKxC,WAEvB,IAAIt7B,EAAQ,KAGN89B,aAAgBhD,IACnB96B,EAAQ89B,EAAK9kC,GAAQslC,MAAMR,EAAMK,IAItB,OAAVn+B,IAAgBA,EAAQ,IAC5Bo+B,EAAYvD,EAAQuD,EAAWp+B,GAG/Bk+B,EAAOrD,EAAQqD,EAAM7sB,EAAQ6rB,uBAAuBY,GACvD,CAGA,OAAOR,EACJY,EACAllC,EACAmlC,EACA9sB,EACA+sB,EACAC,EAEN,oBCxnBH,IAAItyB,EAAY,EAAQ,OACR,EAAQ,OAExBzd,EAAOC,QAAU,cAAyBwd,EACvC,WAAAtd,CAAYud,EAAY9c,GACrBR,MAAM,CAAC,OAAQ,QAASQ,GAExBP,KAAK6f,WAAWxC,EAMnB,CASA,UAAAwC,CAAWxC,GASRrd,KAAKf,GAAKoe,EAAWpe,GACrBe,KAAK4L,KAAOyR,EAAWzR,MAAQ,WAC/B5L,KAAK+I,KAAOsU,EAAWtU,MAAQ,OAC/B/I,KAAKyD,KAAO4Z,EAAW5Z,MAAQ,GAC/BzD,KAAK2hB,SAAWtE,EAAWsE,UAAY,CAAC,EACxC3hB,KAAK2hB,SAASsL,MAAQ5P,GAAYsE,UAAUsL,OAAS,QACrDjtB,KAAK2hB,SAASiuB,GAAKvyB,GAAYsE,UAAUiuB,IAAM,GAG/C7vC,MAAM8f,WAAWxC,GAGZrd,KAAKwD,QACPxD,KAAKwD,MAAQxD,KAAK4L,KAExB,CAQA,KAAAhE,GAGQ5H,KAAKwD,QACPxD,KAAKwD,MAAQxD,KAAK4L,MAIrB,IAAIxK,EAAOrB,MAAM6H,QAOjB,MALmB,CAAC,KAAM,OAAQ,WAAY,QACjC5B,SAAS0b,IACnBtgB,EAAKsgB,GAAK1hB,KAAK0hB,EAAE,IAGbtgB,CACV,oBCjEH,IAAIyubD,EAAS7pC,SAASC,IACXA,EAAE8pC,SAASC,SACZ/pC,EAAIA,EAAE8pC,SAETD,EAAM7pC,EAAE+pC,SAASvtC,KAAOwD,CAAC,IAG5BtG,EAAOC,QAAU,MAMd,eAAOujB,CAASzgB,EAAK,MAAM,IACxB,IAAIigB,EAAQ,GACZ,IAAK,IAAI1c,KAAK6pC,EAAO,CAClB,IAAIG,EAAIH,EAAM7pC,GACVvD,EAAGutC,IACJttB,EAAMvb,KAAK6oC,EAEjB,CACA,OAAOttB,CACV,CAOA,cAAO2B,CAAQ/e,EAAQkf,EAAa1c,GAQjC,GAPAA,EAASA,GAAU,KAED,qBAAdxC,EAAO9C,MACR8C,EAAO9C,IAAM,iBAIZ8C,EAAO9C,IACR,OAAKqtC,EAAMvqC,EAAO9C,KAWX,IAAIqtC,EAAMvqC,EAAO9C,KAAK8C,EAAQkf,EAAa1c,IA8B3B,WAxCNxC,EAAO9C,IAwCnBihB,MAAM,KAAK,IAvCVriB,QAAQC,MACL,WACAiE,EAAO9C,IACP,+CAGC,IAAIqtC,EAAY,KAAEvqC,EAAQkf,EAAa1c,IAKjD,IAAI5G,EAAM,IAAI7B,MAAM,qBAAqBiG,EAAO9C,QAOhD,OANApB,QAAQC,MAAMH,GACdE,QAAQC,MAAM,CACXA,MAAOH,EACPoE,OAAQA,EACRkf,YAAaA,IAET,IAEb,CAEA,gBAAOyrB,CAAUztC,GACd,GAAIqtC,EAAMrtC,GACP,OAAOqtC,EAAMrtC,GAEhBpB,QAAQC,MAAM,oBAAoBmB,KAErC,CAEA,mBAAO0tC,CAAaC,GACjBN,EAAMM,EAAKJ,SAASvtC,KAAO2tC,CAC9B,oBC7IH,IAAIN,EAAQ,CAAC,EACb,CACG,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,KACR,EAAQ,OACR,EAAQ,QACT9pC,SAASC,IACJA,EAAE8pC,SAASC,SACZ/pC,EAAIA,EAAE8pC,SAETD,EAAM7pC,EAAE+pC,SAASvtC,KAAOwD,CAAC,IAG5BtG,EAAOC,QAAU,MAMd,eAAOujB,CAASzgB,EAAK,MAAM,IACxB,IAAIigB,EAAQ,GACZ,IAAK,IAAI1c,KAAK6pC,EAAO,CAClB,IAAIG,EAAIH,EAAM7pC,GACVvD,EAAGutC,IACJttB,EAAMvb,KAAK6oC,EAEjB,CACA,OAAOttB,CACV,CAOA,cAAO2B,CAAQ/e,EAAQkf,EAAa1c,GAQjC,GAPAA,EAASA,GAAU,KAED,qBAAdxC,EAAO9C,MACR8C,EAAO9C,IAAM,iBAIZ8C,EAAO9C,IACR,OAAKqtC,EAAMvqC,EAAO9C,KASX,IAAIqtC,EAAMvqC,EAAO9C,KAAK8C,EAAQkf,EAAa1c,IAR/C1G,QAAQC,MACL,WACGiE,EAAO9C,IACP,+CAEC,IAAIqtC,EAAM,eAAevqC,EAAQkf,EAAa1c,IAKxD,IAAI5G,EAAM,IAAI7B,MAAM,qBAAqBiG,EAAO9C,QAOhD,OANApB,QAAQC,MAAMH,GACdE,QAAQC,MAAM,CACXA,MAAOH,EACPoE,OAAQA,EACRkf,YAAaA,IAET,IAEb,CAEA,gBAAOyrB,CAAUztC,GACd,GAAIqtC,EAAMrtC,GACP,OAAOqtC,EAAMrtC,GAEhBpB,QAAQC,MAAM,oBAAoBmB,KAErC,oBCpGH,MAAMg0B,EAAc,EAAQ,OAM5B,SAAS4Z,EAAYpmB,EAAS0E,GAC3B,IAAKA,EAAO,OAAO,KACnB,IAAKA,EAAM1M,WAAY,OAAO,KAC9B,MAAMA,EAAa0M,EAAM1M,WAEzB,IAAI5Q,EAAQ,KAEZ,GAAI4Q,EAAWza,QAAQ,MAAQ,EAAG,CAC/B,IAAI4mB,EAAUnM,EAAWyB,MAAM,KAAK,GACpCrS,EAAQ4Y,EAAQhI,IAAegI,EAAQmE,EAC1C,MACG/c,EAAQ4Y,EAAQhI,GAInB,GAAa,MAAT5Q,GAAiBsd,EAAMlB,aAAc,CACtC,MAAMA,EAAekB,EAAMlB,eACrB6iB,EAAmB7iB,EAAa/J,MAAM,KAAK,GACjDrS,EAAQ4Y,EAAQwD,IAAiBxD,EAAQqmB,EAC5C,CAEA,GAAa,MAATj/B,IAAkBk/B,MAAMl/B,GACzB,OAAOA,EAKV,IAAK,MAAMpK,KAAKgjB,EAAS,CACtB,MAAMxnB,EAAMwE,EAAEyc,MAAM,KAAK,GACrBjhB,GAAOA,GAAOksB,EAAM1vB,KACrBoS,EAAQ4Y,EAAQhjB,GAEtB,CAQA,OALa,MAAToK,GAAkC,iBAATA,GAAqBk/B,MAAMl/B,KACrDsd,EAAM9W,SAENxG,EAAQsd,EAAM9W,OAAOoS,IAEjB5Y,CACV,CAEA,SAASm/B,EAAqBvmB,EAAS0E,GACpC,IAAI8hB,EAAe,GAEnB,MAAMC,EAAcC,IACjB,IAAIznC,EACJ,MAAMukB,EAAekB,EAAMlB,eAC3B,GAAIkjB,EAASljB,GACVvkB,GACIylB,EAAMiiB,WACFD,EAASljB,GAAckB,EAAMiiB,WAAW3uB,YACxC,QACJ0M,EAAMkiB,YACFF,EAASljB,GAAckB,EAAMkiB,YAAY5uB,YACzC,OACL0uB,EAASljB,GAAcxuB,IACvB0xC,EAASljB,OACR,CACJ,IAAIqjB,EAAWT,EAAYM,EAAUhiB,GACrB,MAAZmiB,IACD5nC,EAAM4nC,EAEZ,CACA,OAAO5nC,CAAG,EAQb,OALIxD,MAAMC,QAAQskB,GACfwmB,EAAexmB,EAAQnrB,KAAKsC,GAASsvC,EAAWtvC,KACxC6oB,IACRwmB,EAAeC,EAAWzmB,IAEtBwmB,CACV,CAEA9wC,EAAOC,QAAU,cAAgC62B,EAC9C,WAAA32B,CAAYq8B,EAAQ57B,GACjB47B,EAASA,GAAU,yBAED,IAAP57B,GACRc,QAAQC,MAAM,oDAGjBvB,MAAM,KAAMo8B,EAAQ57B,GAEpBP,KAAKoF,QAAU,CAAEvC,SAAU,MAC3B7C,KAAK+wC,UAAY,CAAC,EAClB/wC,KAAKgxC,UAAY,CAAC,EAGlBhxC,KAAKixC,aAAe,GACpBjxC,KAAKkxC,QAGWlxC,KAAKmxC,OAAS,CAC3BC,UAAW,CACRC,SAAU,QAGbC,eAAgB,SAAU7tC,GACvB,IAAIS,EAAS,GACb,IACG,IAAIqtC,EAAMz1B,SAASE,cAAc,OACjCu1B,EAAIC,UAAY/tC,EAEhBS,EAASqtC,EAAIE,aAAeF,EAAIG,WAAa,EAChD,CAAE,MAAOvwC,GACN+C,GAAUT,GAAQ,IAAImC,QAAQ,gBAAiB,GAClD,CAEA,OAAO1B,CACV,EAQN,CAEA,IAAA5D,CAAKiI,EAAU,CAAC,GACbvI,KAAK+wC,UAAYxoC,CACpB,CAYA,OAAAuP,CAAQmS,EAAS+mB,EAAYhxC,KAAKgxC,WAE/B,GAAIA,GAAWp3B,OAAOhY,QAAqB,MAAXqoB,EAAiB,OAAO,EAGxD,IAAK+mB,GAAWp3B,OAAOhY,QAAqB,MAAXqoB,EAAiB,OAAO,EAEzD,IAAI/lB,EAA4B,QAAnB8sC,EAAU3rB,KA2FvB,OAzFA2rB,EAAUp3B,MAAM5T,SAASrD,IAEtB,GAAIA,GAAQiX,OAAOhY,OAIhB,YAFGsC,EADoB,OAAnB8sC,EAAU3rB,KACFnhB,GAAUlE,KAAK8X,QAAQmS,EAAStnB,GAC9BuB,GAAUlE,KAAK8X,QAAQmS,EAAStnB,IAI5C,IAAKA,IAAWA,EAAOF,MAAQE,EAAOqpB,KAAM,OAEjD,MAAM0e,GAAa1qC,KAAKkxC,SAAW,IAAIvuC,QACnC+e,GAAMA,EAAEziB,IAAM0D,EAAOF,KAAOif,EAAEO,YAActf,EAAOF,MACrD,GAEF,IAAKioC,EAAW,OAEhB,IAAIiH,EAAa,KAIbC,EAAgBlH,EAAUjoC,SAEF,IAAjBioC,EAAUjoC,MACE,eAAhBioC,EAAUzrC,IACXyrC,EAAUjoC,IAAM,eAChBmvC,EAAgBlH,EAAUjoC,KACtBmvC,EAAgB,eAG1B,IAAIvgC,EAAQ,KAQZ,OALGA,EADCq5B,EAAUjd,aACH+iB,EAAqBvmB,EAASygB,GAE9B2F,EAAYpmB,EAASygB,GAGxBkH,GACL,IAAK,SACL,IAAK,WACL,IAAK,QACW,MAATvgC,IAAeA,EAAQ,IAE3BsgC,EAAa3xC,KAAK6xC,UAAUxgC,EAAO1O,EAAOqpB,KAAMrpB,EAAO0O,OACvD,MACH,IAAK,OACL,IAAK,WACFsgC,EAAa3xC,KAAK8xC,UAAUzgC,EAAO1O,EAAOqpB,KAAMrpB,EAAO0O,OACvD,MACH,IAAK,SACL,IAAK,YACL,IAAK,UACFsgC,EAAa3xC,KAAK+xC,YAAY1gC,EAAO1O,EAAOqpB,KAAMrpB,EAAO0O,OACzD,MACH,IAAK,OACFsgC,EAAa3xC,KAAKgyC,UAAU3gC,EAAO1O,EAAOqpB,KAAMrpB,EAAO0O,OACvD,MACH,IAAK,UACFsgC,EAAa3xC,KAAKiyC,aAAa5gC,EAAO1O,EAAOqpB,KAAMrpB,EAAO0O,OAC1D,MACH,IAAK,OACFsgC,EAAa3xC,KAAKkyC,UAAU7gC,EAAO1O,EAAOqpB,KAAMrpB,EAAO0O,OACvD,MACH,IAAK,eACL,IAAK,gBACFsgC,EAAa3xC,KAAKmyC,kBACfloB,EACAygB,EACA/nC,EAAOqpB,KACPrpB,EAAO0O,OAEV,MACH,IAAK,cACFsgC,EAAa3xC,KAAKoyC,gBACfnoB,EACAtnB,EAAOqpB,KACPrpB,EAAO0O,OAMbnN,EADoB,QAAnB8sC,EAAU3rB,KACFnhB,GAAUytC,EAEVztC,GAAUytC,CACtB,IAGIztC,CACV,CAEA,SAAA2tC,CAAUxgC,EAAO2a,EAAMqmB,GACpB,IAAInuC,GAAS,EAEbmN,EAAQA,EAAM63B,OAAOz7B,cACrB4D,EAAQrR,KAAKmxC,OAAOG,eAAejgC,GAKnC,MAAMihC,GAHND,EAAeA,EAAanJ,OAAOz7B,cAAc7H,QAAQ,OAAQ,MAG/B8d,MAAM,KAExC,OAAQsI,GACL,IAAK,WACFsmB,EAAatsC,SAASkD,IACL,GAAVhF,IAEDA,EAASmN,EAAM7J,QAAQ0B,IAAQ,EAAC,IAEtC,MACH,IAAK,eACFhF,GAAS,EACTouC,EAAatsC,SAASkD,IACL,GAAVhF,IAEDA,EAASmN,EAAM7J,QAAQ0B,GAAO,EAAC,IAErC,MACH,IAAK,SACFopC,EAAatsC,SAASkD,IACL,GAAVhF,IAEDA,EAASmN,GAASnI,EAAG,IAE3B,MACH,IAAK,YACFhF,GAAS,EACTouC,EAAatsC,SAASkD,IACL,GAAVhF,IAEDA,EAASmN,GAASnI,EAAG,IAE3B,MACH,IAAK,WACFhF,EAAkB,IAATmN,GAAwB,MAATA,EACxB,MACH,IAAK,eACFnN,EAAkB,IAATmN,GAAwB,MAATA,EACxB,MACH,QACGnN,EAASlE,KAAKuyC,gBAAgBlhC,EAAO2a,EAAMqmB,GAIjD,OAAOnuC,CACV,CAEA,SAAA4tC,CAAUzgC,EAAO2a,EAAMqmB,GACpB,IAAInuC,GAAS,EAMb,OAJMmN,aAAiB0G,OAAO1G,EAAQ,IAAI0G,KAAK1G,IAEzCghC,aAAwBt6B,OAC3Bs6B,EAAe,IAAIt6B,KAAKs6B,IACnBrmB,GACL,IAAK,OACF9nB,EAASmN,EAAQghC,EACjB,MACH,IAAK,UACFnuC,EAASmN,EAAQghC,EACjB,MACH,IAAK,gBACFnuC,EAASmN,GAASghC,EAClB,MACH,IAAK,mBACFnuC,EAASmN,GAASghC,EAClB,MACH,IAAK,kBACFnuC,EACGmN,EAAMmhC,SAAS,EAAG,EAAG,EAAG,IAAMH,EAAaG,SAAS,EAAG,EAAG,EAAG,GAChE,MACH,IAAK,WACFtuC,GAAUmN,EACV,MACH,IAAK,eACFnN,IAAWmN,EACX,MACH,IAAK,UACFnN,EAAkB,MAATmN,EACT,MACH,IAAK,cACFnN,EAAkB,MAATmN,EACT,MACH,QACGnN,EAASlE,KAAKuyC,gBAAgBlhC,EAAO2a,EAAMqmB,GAGjD,OAAOnuC,CACV,CAEA,WAAA6tC,CAAY1gC,EAAO2a,EAAMqmB,GACtB,IAAInuC,GAAS,EAKb,OAHAmN,EAAQohC,OAAOphC,GACfghC,EAAeI,OAAOJ,GAEdrmB,GACL,IAAK,QACL,IAAK,SACF9nB,EAASmN,GAASghC,EAClB,MACH,IAAK,YACFnuC,EAASmN,GAASghC,EAClB,MACH,IAAK,OACFnuC,EAASmN,EAAQghC,EACjB,MACH,IAAK,UACFnuC,EAASmN,EAAQghC,EACjB,MACH,IAAK,gBACFnuC,EAASmN,GAASghC,EAClB,MACH,IAAK,mBACFnuC,EAASmN,GAASghC,EAClB,MACH,QACGnuC,EAASlE,KAAKuyC,gBAAgBlhC,EAAO2a,EAAMqmB,GAIjD,OAAOnuC,CACV,CAEA,SAAA8tC,CAAU3gC,EAAO2a,EAAMqmB,GACpB,IAAInuC,GAAS,EAMb,OAFKwB,MAAMC,QAAQ0sC,KAAeA,EAAe,CAACA,IAE1CrmB,GACL,IAAK,SACE3a,IAAOnN,EAASmuC,EAAa7qC,QAAQ6J,IAAU,GACnD,MACH,IAAK,YACSnN,GAAPmN,GAAgBghC,EAAa7qC,QAAQ6J,GAAS,EAElD,MACH,QACGnN,EAASlE,KAAKuyC,gBAAgBlhC,EAAO2a,EAAMqmB,GAIjD,OAAOnuC,CACV,CAEA,YAAA+tC,CAAa5gC,EAAO2a,EAAMqmB,GACvB,IAAInuC,GAAS,EAEb,OAAQ8nB,GACL,IAAK,UACF9nB,EAAkB,GAATmN,GAAiBA,EAAQ,GAAc,QAATA,EACvC,MACH,IAAK,YACFnN,EACY,GAATmN,GACAA,GAAS,GACA,SAATA,GACS,MAATA,EACH,MACH,QACGnN,EAASlE,KAAKuyC,gBAAgBlhC,EAAO2a,EAAMqmB,GAIjD,OAAOnuC,CACV,CAEA,SAAAguC,CAAU7gC,EAAO2a,EAAMqmB,GACpB,IAAKhhC,IAAUA,GAAOzP,OAAQ,OAAO,EACrC,IAAIsC,GAAS,EAKb,OAHKwB,MAAMC,QAAQ0L,KAAQA,EAAQ,CAACA,IAG5B2a,GACL,IAAK,kBACF9nB,EACGmN,EAAM1O,QAAQsD,IAAOA,GAAGpD,UAAYoD,IAAMjG,KAAKoF,QAAQvC,WACnDjB,OAAS,EAChB,MACH,IAAK,sBACFsC,EACGmN,EAAM1O,QAAQsD,IAAOA,GAAGpD,UAAYoD,IAAMjG,KAAKoF,QAAQvC,WACnDjB,OAAS,EAChB,MACH,IAAK,uBACFywC,EAAeryC,KAAKoF,QAAQvC,SAG/B,IAAK,SACFqB,EACGmN,EAAM1O,QAAQsD,IAAOA,GAAGpD,UAAYoD,IAAMosC,IAAczwC,OACxD,EACH,MACH,IAAK,2BACFywC,EAAeryC,KAAKoF,QAAQvC,SAG/B,IAAK,YACFqB,EACGmN,EAAM1O,QAAQsD,IAAOA,GAAGpD,UAAYoD,IAAMosC,IAAczwC,OACxD,EACH,MACH,QACGsC,EAASlE,KAAKuyC,gBAAgBlhC,EAAO2a,EAAMqmB,GAKjD,OAAOnuC,CACV,CAEA,eAAAquC,CAAgBtoB,EAAS+B,EAAMqmB,GAC5B,IAAInuC,GAAS,EAEb,IAAKmuC,EAAc,OAAOnuC,EAG1B,MAAMwuC,EAAUL,EAAa3uB,MAAM,KAAK,GACrCivB,EAAUN,EAAa3uB,MAAM,KAAK,GAG/BrW,EAAQrN,KAAKO,GAAG8iB,SAASC,GAAMA,EAAErkB,IAAMyzC,IAAS,GACtD,IAAKrlC,EAAO,OAAOnJ,EAInB,IADcmJ,EAAMid,QAAQ5I,GAAMA,EAAEziB,IAAM0zC,IAAS,GACvC,OAAOzuC,EAEnB,IAAI0uC,EAAU,4BACPhtC,QAAQ,WAAY5F,KAAKm8B,QACzBv2B,QAAQ,OAAQyH,EAAMpO,IAC1B4zC,EAAqB,IAAI7yC,KAAKF,YAAY8yC,EAAS5yC,KAAKO,IAK3D,OAJAsyC,EAAmBztC,QAAUpF,KAAKoF,QAClCytC,EAAmB5e,WAAW5mB,EAAMid,UACpCuoB,EAAmB3e,SAAS7mB,EAAM06B,2BAE1B/b,GACL,IAAK,iBACF9nB,EAAS2uC,EAAmB/6B,QAAQmS,GACpC,MACH,IAAK,qBACF/lB,GAAU2uC,EAAmB/6B,QAAQmS,GAI3C,OAAO/lB,CACV,CAEA,YAAA4uC,CAAa7oB,EAAS+B,EAAMqmB,GACzB,IAAInuC,GAAS,EAEb,IAAKmuC,IAAiBryC,KAAKO,GAAI,OAAO2D,EAGtC,IAAImJ,EAAQrN,KAAKO,GAAG8iB,SAASC,GAAMA,EAAErkB,IAAMozC,IAAc,GACzD,IAAKhlC,EAAO,OAAOnJ,EAEnB,IAAI0uC,EAAU,sBACPhtC,QAAQ,WAAY5F,KAAKm8B,QACzBv2B,QAAQ,OAAQyH,EAAMpO,IAC1B8zC,EAAgB,IAAI/yC,KAAKF,YAAY8yC,EAAS5yC,KAAKO,IAKtD,OAJAwyC,EAAc3tC,QAAUpF,KAAKoF,QAC7B2tC,EAAc9e,WAAW5mB,EAAMid,UAC/ByoB,EAAc7e,SAAS7mB,EAAM06B,2BAErB/b,GACL,IAAK,WACF9nB,EAAS6uC,EAAcj7B,QAAQmS,GAC/B,MACH,IAAK,eACF/lB,GAAU6uC,EAAcj7B,QAAQmS,GAItC,OAAO/lB,CACV,CAEA,mBAAA8uC,CAAoB3hC,EAAO2a,EAAMqmB,GAC9B,IAAInuC,GAAS,EAEb,IAAKmuC,EAAc,OAAOnuC,EAE1B,IAAIwkB,EAAK1oB,KAAKO,GAAGigB,iBAAiB8M,GAAMA,EAAEruB,IAAMozC,IAAc,GAE9D,OAAQrmB,GACL,IAAK,qBACF,IAAKtD,EAAI,OAAO,EAEhBxkB,EAASwkB,EAAGwK,SAAS5F,GAAMA,EAAEruB,IAAMoS,EAAMpS,KAAI2C,OAAS,EACtD,MACH,IAAK,yBACF,IAAK8mB,EAAI,OAAO,EAEhBxkB,EAASwkB,EAAGwK,SAAS5F,GAAMA,EAAEruB,IAAMoS,EAAMpS,KAAI2C,OAAS,EAI5D,OAAOsC,CACV,CAEA,iBAAAiuC,CAAkBloB,EAAS0E,EAAO3C,EAAMqmB,GACrC,IAAI5kB,EAAekB,EAAMlB,eAErBgjB,EAAe,GAEfniB,EAAWK,EAAML,WAErB,GAAIrE,EACD,GAAIA,EAAQwD,GAGNgjB,EAFa,QAAZniB,EAEc3nB,KAAKC,UACjB4pC,EAAqBvmB,EAAS0E,GAAO7vB,KAAKoH,GAAMA,EAAEjH,IAAMiH,KAa5CsqC,EAAqBvmB,EAAS0E,GACzCpnB,WACAkG,kBAEH,CACJ,IAAIqjC,EAAWT,EAAYpmB,EAAS0E,GACpB,MAAZmiB,IACDL,EAAeK,EAErB,CAIwB,iBAAhBL,IACRA,GACI9hB,EAAMiiB,WACFH,EAAa9hB,EAAMiiB,WAAW3uB,YAC9B,QACJ0M,EAAMkiB,YACFJ,EAAa9hB,EAAMkiB,YAAY5uB,YAC/B,OACLwuB,EAAa9hB,EAAM1M,aACnBwuB,EAAaxxC,IACbwxC,GAKN,IAAIwC,EACuB,iBAAjBZ,EACFA,EAAa5kC,gBACb4kC,EAIJa,EAAWlnB,EACf,GAAgB,QAAZsC,EACD,OAAQtC,GACL,IAAK,SACFknB,EAAW,WACX,MACH,IAAK,YACFA,EAAW,eAKpB,OAAQA,GACL,IAAK,WACF,OAAOzC,EAAalpC,WAAWC,QAAQyrC,IAA0B,EACpE,IAAK,eACF,OAAkE,GAA3DxC,EAAalpC,WAAWC,QAAQyrC,GAC1C,IAAK,SACF,OAAOxC,GAAgBwC,EAC1B,IAAK,YACF,OAAOxC,GAAgBwC,EAC1B,IAAK,WACL,IAAK,eACF,OAAOjzC,KAAK8yC,aAAa7oB,EAAQwD,GAAezB,EAAMqmB,GACzD,IAAK,kBACL,IAAK,sBACL,IAAK,uBACL,IAAK,2BACF,OAAOryC,KAAKkyC,UAAUzB,EAAczkB,EAAMqmB,GAC7C,IAAK,WACF,OAC4B,MAAzBpoB,EAAQwD,IACRxD,EAAQwD,GAAc7rB,OAAS,GACN,IAAzBqoB,EAAQwD,GAEd,IAAK,eACF,OAC4B,MAAzBxD,EAAQwD,KACN/nB,MAAMC,QAAQskB,EAAQwD,KACrBxD,EAAQwD,GAAc7rB,OAAS,GACN,IAAzBqoB,EAAQwD,IAEjB,IAAK,qBACL,IAAK,yBACF,OAAOztB,KAAKgzC,oBAAoBvC,EAAczkB,EAAMqmB,GAE7D,CAEA,eAAAD,CAAgBnoB,EAAS+B,EAAMqmB,GAC5B,IAAInuC,GAAS,EACTmJ,EAAQ,KACR8lC,EAAkB,KAClBrnB,EAAQ,KACRsnB,EAAa,KAEjB,OAAQpnB,GAEL,IAAK,WACL,IAAK,eACF,OAAKhsB,KAAKqzC,SAGVhmC,EAAQrN,KAAKO,GAAG8iB,SAASC,GAAMA,EAAErkB,IAAMozC,IAAc,GAEhDhlC,GAEL8lC,EAAkB9lC,EAAM2T,SAAS5hB,GACvBA,EAAEH,IAAMe,KAAKqzC,QAAQp0C,KAG3Bk0C,EAAgBvxC,OAAS,GAK1BP,QAAQC,MACL,iFAGI,IAIVwqB,EAAQze,EAAM0e,YAAY/rB,KAAKqzC,QAAQp0C,IAGvCm0C,EAAa,CAAC,EAEd3zC,OAAOD,KAAKyqB,GAASjkB,SAASvD,IAC3B2wC,EAAW,GAAGtnB,KAASrpB,KAASwnB,EAAQxnB,EAAI,IAIxCzC,KAAK8yC,aAAaM,EAAYpnB,EAAMqmB,KA7BxBnuC,GALOA,EAqC7B,IAAK,qBACL,IAAK,yBAEF,OAAOlE,KAAKgzC,oBAAoB/oB,EAAS+B,EAAMqmB,GAExD,CAEA,iBAAAiB,CAAkBC,EAAgB,IAC3BA,IAAkB7tC,MAAMC,QAAQ4tC,KACjCA,EAAgB,CAACA,IAEpBvzC,KAAKwzC,eAAiBD,EAEtBvzC,KAAKyzC,QACR,CASA,UAAAxf,CAAW3J,EAAS,GAAIxF,EAAS,MAS9B,GARA9kB,KAAKkxC,QAAU5mB,EAAO3nB,QAClB+e,GAAMA,GAAKA,EAAEgyB,mBAAqBhyB,EAAEgyB,sBAExC1zC,KAAKixC,aAAejxC,KAAKkxC,QACpBlxC,KAAKkxC,QAAQvuC,QAAQ+e,GAAMA,GAAKA,EAAE2kB,cAAyB,QAAT3kB,EAAEjf,MACpD,GAGDqiB,EAAQ,CACT9kB,KAAKqzC,QAAUvuB,EAGf,IAAI6uB,EAAgB,CACjB10C,GAAI,cACJuE,MAAOshB,EAAOthB,MACdf,IAAK,QAMJqiB,EAAO0Y,WACRmW,EAAc7nB,MAAQ,eAGzB9rB,KAAKkxC,QAAQ3f,QAAQoiB,EACxB,aACU3zC,KAAKqzC,OAElB,CAEA,UAAAO,GA0NG,OA5Lc5zC,KAAKkxC,SAAW,IAAIpyC,KAAK4iB,IACpC,IAAIle,EAAQke,EAAEle,MACVxD,KAAK+wC,UAAU8C,gBAAkBnyB,EAAEoD,QAAUpD,EAAEoD,OAAOthB,QACvDA,EAAQ,GAAGke,EAAEoD,OAAOthB,SAASke,EAAEle,SAElC,IAAIuF,EAAO,OACP+qC,EAAa,GACbC,EAAmB,GACnBC,GAAgB,EAEpB,GAAKh0C,KAAK+wC,UAAUkD,qBAsGjB,OAAQvyB,EAAEjf,KACP,IAAK,gBACL,IAAK,OACFuxC,GAAgB,OAxGtB,OAAQtyB,EAAEjf,KACP,IAAK,UACFqxC,EAAaA,EAAWn6B,OACrB3Z,KAAKk0C,wBAAwBxyB,IAEhCqyB,EAAmB,CAAC,WAEpB,MAEH,IAAK,gBACFD,EAAa9zC,KAAKm0C,8BAA8BzyB,IAKrB,OAAvBA,EAAEC,SAAS2M,UACiB,QAA1B5M,EAAEC,SAASkS,aAEU,OAAvBnS,EAAEC,SAAS2M,UACiB,OAA1B5M,EAAEC,SAASkS,aACXnS,EAAEC,SAASyyB,YAWdN,EATsB9zC,KAAKq0C,uBACxB3yB,GACD/e,QACE2xC,GACE5yB,EAAEC,SAAS4yB,YAED,YAAVD,EAAIr1C,IACM,gBAAVq1C,EAAIr1C,KAEiB0a,OAAOm6B,GAGlCA,EAAaA,EAAWn6B,OACrB3Z,KAAKw0C,sBAAsB9yB,GAAG,KAIpCsyB,GAAgB,EAChBD,EAAmB,CAAC,iBAEpB,MAEH,IAAK,OACL,IAAK,WACFhrC,EAAO,OACP+qC,EAAaA,EAAWn6B,OAAO3Z,KAAKy0C,qBAAqB/yB,IACzDqyB,EAAmB,CAAC,OAAQ,YAE5B,MAEH,IAAK,YACL,IAAK,UACL,IAAK,SACFhrC,EAAO,SACP+qC,EAAaA,EAAWn6B,OACrB3Z,KAAK00C,uBAAuBhzB,IAE/BqyB,EAAmB,CAAC,YAAa,UAAW,UAE5C,MAEH,IAAK,SACL,IAAK,WACL,IAAK,QACL,IAAK,YACFD,EAAaA,EAAWn6B,OACrB3Z,KAAKq0C,uBAAuB3yB,IAE/BqyB,EAAmB,CAChB,SACA,WACA,QACA,aAGH,MAEH,IAAK,OACFD,EAAaA,EAAWn6B,OAAO3Z,KAAK20C,qBAAqBjzB,IAEzD,MAEH,IAAK,OACFoyB,EAAaA,EAAWn6B,OAAO3Z,KAAK40C,qBAAqBlzB,IACzDqyB,EAAmB,CAAC,QAEpB,MAEH,IAAK,OACFD,EAAaA,EAAWn6B,OACrB3Z,KAAK60C,2BAA2BnzB,IAEnCsyB,GAAgB,EAuDzB,OAxCAF,EAAaA,EAAWn6B,OACrB3Z,KAAKw0C,sBAAsB9yB,EAAGsyB,IAG7Bh0C,KAAK+wC,UAAU+D,eAChBhB,EAAaA,EAAWn6B,OAAO3Z,KAAK+0C,2BAA2BrzB,MAI9D1hB,KAAKwzC,gBAAkB,IAAI7wC,QAAQqyC,IACjC,IAAKA,EAAc,OAAO,EAE1B,GAAIA,EAAarmB,MACd,OAAOolB,EAAiBkB,SAASD,EAAarmB,MAAMlsB,KAChD,GAAIuyC,EAAavyC,IAAK,CAE1B,IAAIyyC,EAAiBF,EAAavyC,IAAIihB,MAAM,KAAKyxB,MACjD,OAAOD,GAAkBxzB,EAAEziB,IAAMi2C,GAAkBxzB,EAAEjf,GACxD,KACAb,OAAS,IAGZkyC,EAAaA,EAAWn6B,OAAO3Z,KAAKo1C,wBAAwB1zB,KAG/DoyB,EAAaA,EAAWn6B,OAAO3Z,KAAKq1C,uBAAuB3zB,IAepD,CACJziB,GAAIyiB,EAAEziB,GACNoS,MAAO7N,EACPuF,KAAMA,EACN+qC,WAAYA,EAEd,GAuBP,CAEA,oBAAAW,CAAqB9lB,GAClB,IAAI2mB,EAAiB,CAClBC,KAAMv1C,KAAK8E,OAAO0wC,UAAUC,gBAC5BC,QAAS11C,KAAK8E,OAAO0wC,UAAUG,eAC/BC,cAAe51C,KAAK8E,OAAO0wC,UAAUK,oBACrCC,iBAAkB91C,KAAK8E,OAAO0wC,UAAUO,mBACxCC,gBAAiBh2C,KAAK8E,OAAO0wC,UAAUS,uBACvCC,aAAcl2C,KAAK8E,OAAO0wC,UAAUW,uBACpCC,gBAAiBp2C,KAAK8E,OAAO0wC,UAAUa,sBACvCC,sBACGt2C,KAAK8E,OAAO0wC,UAAUe,2BACzBC,yBACGx2C,KAAK8E,OAAO0wC,UAAUiB,0BACzBC,UAAW12C,KAAK8E,OAAO0wC,UAAUmB,oBACjCC,UAAW52C,KAAK8E,OAAO0wC,UAAUqB,oBACjCC,SAAU92C,KAAK8E,OAAO0wC,UAAUuB,QAChCC,aAAch3C,KAAK8E,OAAO0wC,UAAUyB,YAGnC/yC,EAAS,GAEb,IAAK,IAAIgzC,KAAW5B,EACjB,OAAQ4B,GACL,IAAK,kBACL,IAAK,eACL,IAAK,kBACL,IAAK,wBACL,IAAK,2BACL,IAAK,WACL,IAAK,eACFhzC,EAAOkD,KAAK,CACTnI,GAAIi4C,EACJ7lC,MAAOikC,EAAe4B,GACtBC,MAAO,OACPC,QAAS,CAACx2B,EAAGC,IAAM7gB,KAAK8xC,UAAUlxB,EAAGs2B,EAASr2B,KAEjD,MACH,IAAK,YACF3c,EAAOkD,KAAK,CACTnI,GAAIi4C,EACJ7lC,MAAOikC,EAAe4B,GACtBC,MAAO,OACPC,QAAS,CAACx2B,EAAGC,IAAM7gB,KAAK8xC,UAAUlxB,EAAGs2B,EAASr2B,KAEjD,MACH,QACG3c,EAAOkD,KAAK,CACTnI,GAAIi4C,EACJ7lC,MAAOikC,EAAe4B,GACtBC,MAAO,aACPC,QAAS,CAACx2B,EAAGC,IAAM7gB,KAAK8xC,UAAUlxB,EAAGs2B,EAASr2B,KAI1D,OAAO3c,CACV,CAEA,sBAAAmwC,CAAuB1lB,GACpB,IAAI0oB,EAAmB,CACpBC,SAAU,CACPH,MAAO,OACP3zC,MAAOxD,KAAK8E,OAAO0wC,UAAU+B,mBAEhCC,aAAc,CACXL,MAAO,OACP3zC,MAAOxD,KAAK8E,OAAO0wC,UAAUiC,sBAEhCC,OAAQ,CACLP,MAAO,OACP3zC,MAAOxD,KAAK8E,OAAO0wC,UAAUmC,aAEhCC,UAAW,CACRT,MAAO,OACP3zC,MAAOxD,KAAK8E,OAAO0wC,UAAUqC,gBAEhCf,SAAU,CACPK,MAAO,OACP3zC,MAAOxD,KAAK8E,OAAO0wC,UAAUuB,SAEhCC,aAAc,CACXG,MAAO,OACP3zC,MAAOxD,KAAK8E,OAAO0wC,UAAUyB,aAI/B/yC,EAAS,GAEb,IAAK,IAAIgzC,KAAWG,EACjBnzC,EAAOkD,KAAK,CACTnI,GAAIi4C,EACJ7lC,MAAOgmC,EAAiBH,GAAS1zC,MACjC2zC,MAAOE,EAAiBH,GAASC,MACjCC,QAAS,CAACx2B,EAAGC,IAAM7gB,KAAK6xC,UAAUjxB,EAAGs2B,EAASr2B,KAIpD,OAAO3c,CACV,CAEA,sBAAAwwC,CAAuB/lB,GACpB,IAAImpB,EAAmB,CACpBJ,OAAQ13C,KAAK8E,OAAO0wC,UAAUuC,eAC9BH,UAAW53C,KAAK8E,OAAO0wC,UAAUwC,kBACjCzC,KAAMv1C,KAAK8E,OAAO0wC,UAAUyC,kBAC5BvC,QAAS11C,KAAK8E,OAAO0wC,UAAU0C,kBAC/BtC,cAAe51C,KAAK8E,OAAO0wC,UAAU2C,yBACrCrC,iBAAkB91C,KAAK8E,OAAO0wC,UAAU4C,0BAGvCl0C,EAAS,GAEb,IAAK,IAAIgzC,KAAWY,EACjB5zC,EAAOkD,KAAK,CACTnI,GAAIi4C,EACJ7lC,MAAOymC,EAAiBZ,GACxBC,MAAO,OACPC,QAAS,CAACx2B,EAAGC,IAAM7gB,KAAK+xC,YAAYnxB,EAAGs2B,EAASr2B,KAItD,OAAO3c,CACV,CAEA,oBAAAywC,CAAqBhmB,GAClB,IAAI0pB,EAAiB,CAClBX,OAAQ13C,KAAK8E,OAAO0wC,UAAU8C,mBAC9BV,UAAW53C,KAAK8E,OAAO0wC,UAAU+C,uBAGhCr0C,EAAS,GAEb,IAAK,IAAIgzC,KAAWmB,EACjBn0C,EAAOkD,KAAK,CACTnI,GAAIi4C,EACJ7lC,MAAOgnC,EAAenB,GACtBC,MAAO,OACPC,QAAS,CAACx2B,EAAGC,IAAM7gB,KAAKgyC,UAAUpxB,EAAGs2B,EAASr2B,KAIpD,OAAO3c,CACV,CAEA,uBAAAgwC,CAAwBvlB,GACrB,IAAI6pB,EAAoB,CACrBC,QAASz4C,KAAK8E,OAAO0wC,UAAUkD,iBAC/BC,UAAW34C,KAAK8E,OAAO0wC,UAAUoD,qBAGhC10C,EAAS,GAEb,IAAK,IAAIgzC,KAAWsB,EACjBt0C,EAAOkD,KAAK,CACTnI,GAAIi4C,EACJ7lC,MAAOmnC,EAAkBtB,GACzBC,MAAO,OACPC,QAAS,CAACx2B,EAAGC,IAAM7gB,KAAKiyC,aAAarxB,EAAGs2B,EAASr2B,KAIvD,OAAO3c,CACV,CAEA,oBAAA0wC,CAAqBjmB,GAClB,IAAIkqB,EAAiB,CAClBC,gBAAiB,CACd3B,MAAO,OACP3zC,MAAOxD,KAAK8E,OAAO0wC,UAAUuD,wBAEhCC,oBAAqB,CAClB7B,MAAO,OACP3zC,MAAOxD,KAAK8E,OAAO0wC,UAAUyD,2BAEhCC,qBAAsB,CACnB/B,MAAO,OACP3zC,MAAOxD,KAAK8E,OAAO0wC,UAAU2D,8BAEhCC,yBAA0B,CACvBjC,MAAO,OACP3zC,MAAOxD,KAAK8E,OAAO0wC,UAAU6D,iCAEhC3B,OAAQ,CACLP,MAAO,OACP3zC,MAAOxD,KAAK8E,OAAO0wC,UAAU8C,oBAEhCV,UAAW,CACRT,MAAO,OACP3zC,MAAOxD,KAAK8E,OAAO0wC,UAAU+C,wBAI/Br0C,EAAS,GAEb,IAAK,IAAIgzC,KAAW2B,EACjB30C,EAAOkD,KAAK,CACTnI,GAAIi4C,EACJ7lC,MAAOwnC,EAAe3B,GAAS1zC,MAC/B2zC,MAAO0B,EAAe3B,GAASC,MAC/BC,QAAS,CAACx2B,EAAGC,IAAM7gB,KAAKkyC,UAAUtxB,EAAGs2B,EAASr2B,KAIpD,OAAO3c,CACV,CAEA,6BAAAiwC,CAA8BxlB,GAC3B,MAAM2qB,EAAoB,CACvBC,aAAc,CACXpC,MAAO,OACP3zC,MAAOxD,KAAK8E,OAAO0wC,UAAUgE,WAC7BpC,QAAS,CAACx2B,EAAGC,IAAM7gB,KAAKkyC,UAAUtxB,EAAG,eAAgBC,IAExD44B,iBAAkB,CACftC,MAAO,OACP3zC,MAAOxD,KAAK8E,OAAO0wC,UAAUkE,cAC7BtC,QAAS,CAACx2B,EAAGC,IAAM7gB,KAAKkyC,UAAUtxB,EAAG,mBAAoBC,IAE5D84B,mBAAoB,CACjBxC,MAAO,iBACP3zC,MAAOxD,KAAK8E,OAAO0wC,UAAUoE,iBAC7BxC,QAAS,CAACx2B,EAAGC,IACV7gB,KAAKgzC,oBAAoBpyB,EAAG,qBAAsBC,IAExDg5B,uBAAwB,CACrB1C,MAAO,iBACP3zC,MAAOxD,KAAK8E,OAAO0wC,UAAUsE,oBAC7B1C,QAAS,CAACx2B,EAAGC,IACV7gB,KAAKgzC,oBAAoBpyB,EAAG,yBAA0BC,KASzD3c,EAAS,GAEf,IAAK,IAAIgzC,KAAWoC,EACjBp1C,EAAOkD,KAAK,CACTnI,GAAIi4C,EACJ7lC,MAAOioC,EAAkBpC,GAAS1zC,MAClC2zC,MAAOmC,EAAkBpC,GAASC,MAClCC,QAASkC,EAAkBpC,GAASE,UAI1C,OAAOlzC,CACV,CAEA,qBAAAswC,CAAsB7lB,EAAOqlB,GAAgB,GAC1C,MAAM+F,EAAkB/F,EACnB,CACGgG,eAAgB,CACbx2C,MAAOxD,KAAK8E,OAAO0wC,UAAUyE,aAC7B9C,MAAO,cAEV+C,mBAAoB,CACjB12C,MAAOxD,KAAK8E,OAAO0wC,UAAU2E,gBAC7BhD,MAAO,eAGb,CACGiD,SAAU,CACP52C,MAAOxD,KAAK8E,OAAO0wC,UAAU6E,QAC7BlD,MAAO,SAEVmD,aAAc,CACX92C,MAAOxD,KAAK8E,OAAO0wC,UAAU+E,WAC7BpD,MAAO,UAIZjzC,EAAS,GAEf,IAAK,MAAMgzC,KAAW6C,EACnB71C,EAAOkD,KAAK,CACTnI,GAAIi4C,EACJ7lC,MAAO0oC,EAAgB7C,GAAS1zC,MAChC2zC,MAAO4C,EAAgB7C,GAASC,MAChCC,QAAS,CAACx2B,EAAGC,IAAM7gB,KAAKuyC,gBAAgB3xB,EAAGs2B,EAASr2B,KAI1D,OAAO3c,CACV,CAEA,0BAAA2wC,CAA2BlmB,GACxB,IAAI6rB,EAAuB,CACxBb,mBAAoB,CACjBxC,MAAO,iBACP3zC,MAAOxD,KAAK8E,OAAO0wC,UAAUoE,kBAEhCC,uBAAwB,CACrB1C,MAAO,iBACP3zC,MAAOxD,KAAK8E,OAAO0wC,UAAUsE,sBAI/B51C,EAAS,GAEb,IAAK,IAAIgzC,KAAWsD,EACjBt2C,EAAOkD,KAAK,CACTnI,GAAIi4C,EACJ7lC,MAAOmpC,EAAqBtD,GAAS1zC,MACrC2zC,MAAOqD,EAAqBtD,GAASC,MACrCC,QAAS,CAACx2B,EAAGC,IAAM7gB,KAAKoyC,gBAAgBxxB,EAAGs2B,EAASr2B,KAI1D,OAAO3c,CACV,CAEA,0BAAA6wC,CAA2BpmB,GACxB,IAAI8rB,EAAuB,CACxBC,cAAe16C,KAAK8E,OAAO0wC,UAAUmF,YACrCC,kBAAmB56C,KAAK8E,OAAO0wC,UAAUqF,gBAGxC32C,EAAS,GAEb,IAAK,IAAIgzC,KAAWuD,EACjBv2C,EAAOkD,KAAK,CACTnI,GAAIi4C,EACJ7lC,MAAOopC,EAAqBvD,GAC5BC,MAAO,aACPC,QAAS,CAACx2B,EAAGC,KAAM,IAIzB,OAAO3c,CACV,CAEA,uBAAAkxC,CAAwBzmB,GACrB,IAAImsB,EAAoB,CACrBC,eAAgB,CACb5D,MAAO,UACP3zC,MAAOxD,KAAK8E,OAAO0wC,UAAUwF,mBAC7B5D,QAAS,CAACx2B,EAAGC,IAAMD,GAAKC,GAE3Bo6B,kBAAmB,CAChB9D,MAAO,UACP3zC,MAAOxD,KAAK8E,OAAO0wC,UAAU0F,+BAC7B9D,QAAS,CAACx2B,EAAGC,IAAMD,GAAKC,GAE3Bs6B,WAAY,CACThE,MAAO,UACP3zC,MAAOxD,KAAK8E,OAAO0wC,UAAU4F,wBAC7BhE,QAAS,CAACx2B,EAAGC,IAAMD,EAAEpZ,QAAQqZ,IAAM,GAEtCw6B,eAAgB,CACblE,MAAO,UACP3zC,MAAOxD,KAAK8E,OAAO0wC,UAAU8F,2BAC7BlE,QAAS,CAACx2B,EAAGC,KAAuB,GAAjBD,EAAEpZ,QAAQqZ,KAI/B3c,EAAS,GAEb,IAAK,IAAIgzC,KAAW4D,EACjB52C,EAAOkD,KAAK,CACTnI,GAAIi4C,EACJ7lC,MAAOypC,EAAkB5D,GAAS1zC,MAClC2zC,MAAO2D,EAAkB5D,GAASC,MAClCC,QAAS0D,EAAkB5D,GAASE,UAI1C,OAAOlzC,CACV,CAEA,sBAAAmxC,CAAuB1mB,GAGpB,QAFsB3uB,KAAKu7C,gBAAkB,CAAC,GAChB5sB,EAAM1vB,IAAM0vB,IAAU,CAAC,GACtCmlB,YAAc,EAChC,CAEA,WAAA0H,CAAYn4B,EAAU,IACnBrjB,KAAKy7C,SAAWp4B,CACnB,CAWA,OAAAA,CAAQ1gB,EAAS,MAAM,IAGpB,OAFkB3C,KAAKy7C,UAAYz7C,KAAKO,IAAI8iB,aAAe,IAE1C1gB,QAAQ2gB,GAAM3gB,EAAO2gB,IACzC,CAEA,QAAA4Q,CAASvS,GACN3hB,KAAKgxC,UAAYrvB,GAAY,CAAC,EAE9B3hB,KAAKgxC,UAAUp3B,MAAQ5Z,KAAKgxC,UAAUp3B,OAAS,EAClD,CAiBA,QAAA8hC,GAMG,YAHkC,IAAvB17C,KAAKgxC,UAAU3rB,OACvBrlB,KAAKgxC,UAAU3rB,KAAO,OAElBrlB,KAAKgxC,SACf,CAEA,UAAA2K,GACG,IAAIz3C,GAAS,EAEb,MAAM03C,EAAe,CAClB,kBACA,sBACA,uBACA,2BACA,eACA,mBACA,WACA,eACA,UACA,YACA,mBAGGC,EAAkB,CAACjiC,EAAQ,MAChB,GAAV1V,GAEJ0V,EAAM5T,SAAStE,IACRA,GAAGkY,OAASlU,MAAMC,QAAQjE,GAAGkY,OAC9BiiC,EAAgBn6C,GAAGkY,OAEnB1V,EACGA,GACU,MAAVxC,GAAGe,KACO,IAAVf,GAAGe,KACQ,MAAXf,GAAGsqB,MACQ,IAAXtqB,GAAGsqB,OACW,MAAZtqB,GAAG2P,OAA6B,IAAZ3P,GAAG2P,OACtBuqC,EAAap0C,QAAQ9F,GAAGsqB,OAAS,EAC1C,GACD,EAKL,OAFA6vB,EAAgB77C,KAAKgxC,WAAWp3B,OAEzB1V,CACV,mBC56CH,MAAMuyB,EAAc,EAAQ,OAK5B,SAAS4Z,EAAYpmB,EAAS0E,EAAOmtB,GAAiB,GACnD,IAAKntB,EAAO,OAAO,KACnB,IAAKA,EAAM1M,WAAY,OAAO,KAE1BgI,GAAWA,EAAQ,KAAIA,EAAUA,EAAQ,IAE7C,IAAI8xB,EAAWptB,EAAM1vB,GACjBgjB,EAAa0M,EAAM1M,WAEnB5Q,EAAQ,KACZ,GAAI4Q,EAAWza,QAAQ,MAAQ,EAAG,CAC/B,IAAI4mB,EAAUnM,EAAWyB,MAAM,KAAK,GACpCrS,EAAQ4Y,EAAQhI,IAAegI,EAAQmE,IAAYnE,EAAQ8xB,EAC9D,MACG1qC,EAAQ4Y,EAAQhI,IAAegI,EAAQ8xB,GAG1C,GAAI1qC,EACD,OAAOA,EAKV,IAAK,IAAIpK,KAAKgjB,EAAS,CACpB,IAAIxnB,EAAMwE,EAAEyc,MAAM,KAAK,IACnBjhB,GAAQA,GAAOs5C,GAAYt5C,GAAOwf,IACnC5Q,EAAQ4Y,EAAQhjB,GAEtB,CAQA,OALIoK,GAAS3L,MAAMC,QAAQ0L,KACxBA,EAAQA,EAAM1O,QAAQsD,GAAW,MAALA,IACxB61C,IAAgBzqC,EAAQA,EAAM,KAG9BA,CACV,CAEA1R,EAAOC,QAAU,cAA4B62B,EAC1C,WAAA32B,CAAYo8B,EAAKC,EAAQ57B,GAGtBR,MAAMm8B,EAFNC,EAASA,GAAU,gBAEA57B,GAEnBP,KAAKoF,QAAU,CAAEvC,SAAU,MAC3B7C,KAAK+wC,UAAY,CAAC,EAClB/wC,KAAKg8C,gBAAkB,CAAC,EAGxBh8C,KAAKixC,aAAe,GACpBjxC,KAAKkxC,QAGL,IAAIC,EAAUnxC,KAAKmxC,OAAS,CACzBC,UAAW,CACRC,SAAU,QAkBbqK,SAAU,IACA17C,KAAKg8C,gBAGf1K,eAAgB,SAAU7tC,GACvB,IAAIS,EAAS,GACb,IACG,IAAIqtC,EAAMz1B,SAASE,cAAc,OACjCu1B,EAAIC,UAAY/tC,EAEhBS,EAASqtC,EAAIE,aAAeF,EAAIG,WAAa,EAChD,CAAE,MAAOvwC,GACN+C,GAAUT,GAAQ,IAAImC,QAAQ,gBAAiB,GAClD,CAEA,OAAO1B,CACV,EAEA2tC,UAAW,SAAU5nB,EAAS0E,EAAO3C,EAAMqmB,GACxC,IAAInuC,GAAS,EAETmN,EAAQg/B,EAAYpmB,EAAS0E,GACpB,MAATtd,IAAeA,EAAQ,IAE3BA,EAAQA,EAAM9J,WAAW2hC,OAAOz7B,cAChC4D,EAAQ8/B,EAAOG,eAAejgC,GAS9B,IAAIihC,GAPJD,EAAeA,EACX9qC,WACA2hC,OACAz7B,cACA7H,QAAQ,OAAQ,MAGY8d,MAAM,KAEtC,OAAQsI,GACL,IAAK,WACFsmB,EAAatsC,SAASkD,IACL,GAAVhF,IAEDA,EAASmN,EAAM7J,QAAQ0B,IAAQ,EAAC,IAEtC,MACH,IAAK,eACFhF,GAAS,EACTouC,EAAatsC,SAASkD,IACL,GAAVhF,IAEDA,EAASmN,EAAM7J,QAAQ0B,GAAO,EAAC,IAErC,MACH,IAAK,SACFopC,EAAatsC,SAASkD,IACL,GAAVhF,IAEDA,EAASmN,GAASnI,EAAG,IAE3B,MACH,IAAK,YACFhF,GAAS,EACTouC,EAAatsC,SAASkD,IACL,GAAVhF,IAEDA,EAASmN,GAASnI,EAAG,IAE3B,MACH,IAAK,WACFhF,EAAkB,MAATmN,GAA0B,IAATA,EAC1B,MACH,IAAK,eACFnN,EAAkB,MAATmN,GAA0B,IAATA,EAC1B,MACH,QACGnN,EAASitC,EAAO8K,WAAWhyB,EAAS+B,EAAMqmB,GAIhD,OAAOnuC,CACV,EAEA4tC,UAAW,SAAU7nB,EAAS0E,EAAO3C,EAAMqmB,GACxC,IAAInuC,GAAS,EAETmN,EAAQg/B,EAAYpmB,EAAS0E,GAMjC,OALMtd,aAAiB0G,OAAO1G,EAAQ,IAAI0G,KAAK1G,IAEzCghC,aAAwBt6B,OAC3Bs6B,EAAe,IAAIt6B,KAAKs6B,IAEnBrmB,GACL,IAAK,SACF9nB,EAASmN,GAASghC,EAClB,MACH,IAAK,YACFnuC,EAASmN,GAASghC,EAClB,MACH,IAAK,OACFnuC,EAASmN,EAAQghC,EACjB,MACH,IAAK,UACFnuC,EAASmN,EAAQghC,EACjB,MACH,IAAK,gBACFnuC,EAASmN,GAASghC,EAClB,MACH,IAAK,mBACFnuC,EAASmN,GAASghC,EAClB,MACH,QACGnuC,EAASitC,EAAO8K,WAAWhyB,EAAS+B,EAAMqmB,GAIhD,OAAOnuC,CACV,EAEA6tC,YAAa,SAAU9nB,EAAS0E,EAAO3C,EAAMqmB,GAC1C,IAAInuC,GAAS,EAETmN,EAAQg/B,EAAYpmB,EAAS0E,GAIjC,OAHAtd,EAAQohC,OAAOphC,GACfghC,EAAeI,OAAOJ,GAEdrmB,GACL,IAAK,SACF9nB,EAASmN,GAASghC,EAClB,MACH,IAAK,YACFnuC,EAASmN,GAASghC,EAClB,MACH,IAAK,OACFnuC,EAASmN,EAAQghC,EACjB,MACH,IAAK,UACFnuC,EAASmN,EAAQghC,EACjB,MACH,IAAK,gBACFnuC,EAASmN,GAASghC,EAClB,MACH,IAAK,mBACFnuC,EAASmN,GAASghC,EAClB,MACH,QACGnuC,EAASitC,EAAO8K,WAAWhyB,EAAS+B,EAAMqmB,GAIhD,OAAOnuC,CACV,EAEA8tC,UAAW,SAAU/nB,EAAS0E,EAAO3C,EAAMqmB,GACxC,IAAInuC,GAAS,EAETmN,EAAQg/B,EAAYpmB,EAAS0E,GAOjC,OANItd,GAASA,EAAM5D,cAAa4D,EAAQA,EAAM5D,eAE9C4kC,EAAeA,EAAa5kC,cAEvB/H,MAAMC,QAAQ0sC,KAAeA,EAAe,CAACA,IAE1CrmB,GACL,IAAK,SACE3a,IAAOnN,EAASmuC,EAAa7qC,QAAQ6J,IAAU,GACnD,MACH,IAAK,YACSnN,GAAPmN,GAAgBghC,EAAa7qC,QAAQ6J,GAAS,EAElD,MACH,QACGnN,EAASitC,EAAO8K,WAAWhyB,EAAS+B,EAAMqmB,GAIhD,OAAOnuC,CACV,EAEA+tC,aAAc,SAAUhoB,EAAS0E,EAAO3C,EAAMqmB,GAC3C,IAAInuC,GAAS,EAETmN,EAAQg/B,EAAYpmB,EAAS0E,GAKjC,OAFa,MAATtd,IAAeA,GAAQ,GAEnB2a,GACL,IAAK,SACF9nB,EAASmN,GAASghC,EAClB,MACH,IAAK,YACFnuC,EAASmN,GAASghC,EAClB,MACH,QACGnuC,EAASitC,EAAO8K,WAAWhyB,EAAS+B,EAAMqmB,GAIhD,OAAOnuC,CACV,EAEAguC,UAAW,CAACjoB,EAAS0E,EAAO3C,EAAMqmB,KAC/B,IAAInuC,GAAS,EAETmN,EAAQg/B,EAAYpmB,EAAS0E,GAIjC,OAAQ3C,GACL,IAAK,kBACF9nB,EAASmN,GAASrR,KAAKoF,QAAQvC,SAC/B,MACH,IAAK,sBACFqB,EAASmN,GAASrR,KAAKoF,QAAQvC,SAC/B,MACH,IAAK,uBACF,IAAKwO,EAAO,CACTnN,GAAS,EACT,KACH,CACKwB,MAAMC,QAAQ0L,KAAQA,EAAQ,CAACA,IAEpCnN,GACImN,GAAS,IAAI1O,QAAQsD,KACfA,IAEGA,EAAEpD,UAAYoD,EAAEhH,IAAMgH,EAAExC,MAAQwC,IACjCjG,KAAKoF,QAAQvC,WAKnBjB,OAAS,EACf,MACH,IAAK,2BACF,IAAKyP,EAAO,CACTnN,GAAS,EACT,KACH,CACKwB,MAAMC,QAAQ0L,KAAQA,EAAQ,CAACA,IAEpCnN,EAUgB,IATZmN,GAAS,IAAI1O,QAAQsD,KACfA,IAEGA,EAAEpD,UAAYoD,EAAEhH,IAAMgH,EAAExC,MAAQwC,IACjCjG,KAAKoF,QAAQvC,WAKnBjB,OACN,MACH,IAAK,SACFsC,EAASmN,EAAM7J,QAAQ6qC,IAAiB,EACxC,MACH,IAAK,YACFnuC,EAASmN,EAAM7J,QAAQ6qC,GAAgB,EACvC,MACH,QACGnuC,EAASitC,EAAO8K,WAAWhyB,EAAS+B,EAAMqmB,GAIhD,OAAOnuC,CAAM,EAGhB+3C,WAAY,CAAChyB,EAAS+B,EAAMqmB,KACzB,IAAInuC,GAAS,EAEb,IAAKlE,KAAKO,KAAO8xC,EAAc,OAAOnuC,EAGtC,IAAIwuC,EAAUL,EAAa3uB,MAAM,KAAK,GACnCivB,EAAUN,EAAa3uB,MAAM,KAAK,GAGjCrW,EAAQrN,KAAKqjB,SAASC,GAAMA,EAAErkB,IAAMyzC,IAAS,GACjD,IAAKrlC,EAAO,OAAOnJ,EAInB,IADYmJ,EAAMid,QAAQ5I,GAAMA,EAAEziB,IAAM0zC,IAAS,GACrC,OAAOzuC,EAEnB,IAAI0uC,EAAU,4BACPhtC,QAAQ,WAAYu2B,GACpBv2B,QAAQ,OAAQyH,EAAMpO,IAC1B4zC,EAAqB,IAAI7yC,KAAKF,YAAYE,KAAKk8B,IAAK0W,GAMvD,OALAC,EAAmBztC,QAAUpF,KAAKoF,QAElCytC,EAAmB5e,WAAW5mB,EAAMid,UACpCuoB,EAAmB3e,SAAS7mB,EAAM06B,2BAE1B/b,GACL,IAAK,iBACF9nB,EAAS2uC,EAAmB/6B,QAAQmS,GACpC,MACH,IAAK,qBACF/lB,GAAU2uC,EAAmB/6B,QAAQmS,GAI3C,OAAO/lB,CAAM,EAGhB4uC,aAAc,CAAC7oB,EAAShI,EAAY+J,EAAMqmB,KACvC,IAAInuC,GAAS,EAMb,GAJI+d,IACDgI,EAAUA,EAAQhI,IAAe,CAAC,IAGhCowB,IAAiBryC,KAAKO,GAAI,OAAO2D,EAGtC,IAAImJ,EAAQrN,KAAKqjB,SAASC,GAAMA,EAAErkB,IAAMozC,IAAc,GACtD,IAAKhlC,EAAO,OAAOnJ,EAEnB,IAAI0uC,EAAU,sBACPhtC,QAAQ,WAAYu2B,GACpBv2B,QAAQ,OAAQyH,EAAMpO,IAC1B8zC,EAAgB,IAAI/yC,KAAKF,YAAYE,KAAKk8B,IAAK0W,GAMlD,OALAG,EAAc3tC,QAAUpF,KAAKoF,QAE7B2tC,EAAc9e,WAAW5mB,EAAMid,UAC/ByoB,EAAc7e,SAAS7mB,EAAM06B,2BAErB/b,GACL,IAAK,WACF9nB,EAAS6uC,EAAcj7B,QAAQmS,GAC/B,MACH,IAAK,eACF/lB,GAAU6uC,EAAcj7B,QAAQmS,GAItC,OAAO/lB,CAAM,EAGhB8uC,oBAAqB,CAAC/oB,EAAShI,EAAY+J,EAAMqmB,KAC9C,IAAInuC,GAAS,EAEb,IAAKmuC,IAAiBryC,KAAKO,GAAI,OAAO2D,EAElC+d,IACDgI,EAAUA,EAAQhI,IAAe,CAAC,GAGrC,IAAIyG,EAAK1oB,KAAKO,GAAGmnB,mBAAmB2qB,GAEpC,OAAQrmB,GACL,IAAK,qBACF,IAAKtD,EAAI,OAAO,EAEhBxkB,EACGwkB,EAAGwK,SACC5F,IAAOA,EAAEruB,IAAMquB,EAAE3rB,QAAUsoB,EAAQhrB,IAAMgrB,EAAQtoB,QACnDC,OAAS,EACd,MACH,IAAK,yBACF,IAAK8mB,EAAI,OAAO,EAEhBxkB,EACGwkB,EAAGwK,SACC5F,IAAOA,EAAEruB,IAAMquB,EAAE3rB,QAAUsoB,EAAQhrB,IAAMgrB,EAAQtoB,QACnDC,OAAS,EAIpB,OAAOsC,CAAM,EAGhBiuC,kBAAmB,SAAUloB,EAAS0E,EAAO3C,EAAMqmB,GAChD,IAAI5kB,EAAekB,EAAMlB,eAErBgjB,EAAe,GAEnB,GAAIxmB,EACD,GAAIA,EAAQwD,GACTgjB,KACI9hB,EAAMiiB,YACF3mB,EAAQwD,GAAckB,EAAMiiB,WAAW3uB,eAE3C0M,EAAMkiB,aACF5mB,EAAQwD,GAAckB,EAAMkiB,YAAY5uB,aAE7CgI,EAAQwD,GAAcxuB,IACtBgrB,EAAQwD,IAEPlmB,WACAkG,kBACA,CACJ,IAAIqjC,EAAWT,EAAYpmB,EAAS0E,GACpB,MAAZmiB,IACDL,EAAeK,EAGY,iBAAhBL,IACRA,EACG9hB,EAAMtB,eAAe0b,YAAY0H,IAG7C,CAGH,IAAIwC,GAAyBZ,GAAgB,IAAI5kC,cAEjD,OAAQue,GACL,IAAK,WACF,OACGykB,EAAalpC,WAAWC,QAAQyrC,IAA0B,EAEhE,IAAK,eACF,OAEI,GADDxC,EAAalpC,WAAWC,QAAQyrC,GAGtC,IAAK,SACF,OAAOxC,GAAgBwC,EAC1B,IAAK,YACF,OAAOxC,GAAgBwC,EAC1B,IAAK,WACL,IAAK,eACF,OAAO9B,EAAO2B,aACX7oB,EACAwD,EACAzB,EACAqmB,GAEN,IAAK,kBACL,IAAK,sBACL,IAAK,uBACL,IAAK,2BACF,OAAOlB,EAAOe,UAAUjoB,EAAS0E,EAAO3C,EAAMqmB,GACjD,IAAK,WACF,OAC4B,MAAzBpoB,EAAQwD,IACRxD,EAAQwD,GAAc7rB,OAAS,GACN,IAAzBqoB,EAAQwD,GAEd,IAAK,eACF,OAC4B,MAAzBxD,EAAQwD,KACN/nB,MAAMC,QAAQskB,EAAQwD,KACrBxD,EAAQwD,GAAc7rB,OAAS,GACN,IAAzBqoB,EAAQwD,IAEjB,IAAK,qBACL,IAAK,yBACF,OAAO0jB,EAAO6B,oBACX/oB,EACAwD,EACAzB,EACAqmB,GAGZ,EAEAD,gBAAiB,CAACnoB,EAAS+B,EAAMqmB,KAC9B,IAAInuC,GAAS,EAEb,OAAQ8nB,GAEL,IAAK,WACL,IAAK,eACF,IAAKhsB,KAAKO,KAAOP,KAAKqzC,QAAS,OAAOnvC,EAGtC,IAAImJ,EAAQrN,KAAKqjB,SAASC,GAAMA,EAAErkB,IAAMozC,IAAc,GACtD,IAAKhlC,EAAO,OAAOnJ,EAKnB,GAHsBmJ,EAAM2T,SAAS5hB,GAC3BA,EAAEH,IAAMe,KAAKqzC,QAAQp0C,KAEX2C,OAAS,EAQ1B,OAHAP,QAAQC,MACL,iFAEI,EAIV,IAAIwqB,EAAQze,EAAM0e,YAAY/rB,KAAKqzC,QAAQp0C,IAGvCm0C,EAAa,CAAC,EAMlB,OALA3zC,OAAOD,KAAKyqB,GAASjkB,SAASvD,IAC3B2wC,EAAW,GAAGtnB,KAASrpB,KAASwnB,EAAQxnB,EAAI,IAIxC0uC,EAAO2B,aACXM,EACA,KACApnB,EACAqmB,GAKN,IAAK,qBACL,IAAK,yBAEF,OAAOlB,EAAO6B,oBACX/oB,EACA,KACA+B,EACAqmB,GAGT,GAONryC,KAAK07C,SAAWvK,EAAOuK,QAG1B,CAEA,IAAAp7C,CAAKiI,GACEA,EAAQsrC,iBACT7zC,KAAK+wC,UAAU8C,eAAiBtrC,EAAQsrC,eAE9C,CAQA,OAAA/7B,CAAQmS,GACL,IAAI+xB,EAAkBh8C,KAAKg8C,gBACvB7K,EAASnxC,KAAKmxC,OAGlB,GACsB,MAAnB6K,GACyB,MAAzBA,EAAgBpiC,OACgB,GAAhCoiC,EAAgBpiC,MAAMhY,OAEtB,OAAO,EAEV,GAAe,MAAXqoB,EAAiB,OAAO,EAE5B,IAAI/lB,EAAkC,QAAzB83C,EAAgB32B,KAkG7B,OAhGA22B,EAAgBpiC,MAAM5T,SAASrD,IAC5B,GAAKA,GAAQF,KAAQE,GAAQqpB,KAA7B,CAEA,IAAI0e,EAAY1qC,KAAKkxC,QAAQvuC,QAAQ+e,GAAMA,EAAEziB,IAAM0D,EAAOF,MAAK,GAC/D,GAAKioC,EAAL,CAEA,IAAIiH,EAIAC,EAAgBlH,EAAUjoC,IAQ9B,YAP4B,IAAjBioC,EAAUjoC,MACE,eAAhBioC,EAAUzrC,IACXyrC,EAAUjoC,IAAM,eAChBmvC,EAAgBlH,EAAUjoC,KACtBmvC,EAAgB,eAGlBA,GACL,IAAK,SACL,IAAK,WACL,IAAK,QACFD,EAAaR,EAAOU,UACjB5nB,EACAygB,EACA/nC,EAAOqpB,KACPrpB,EAAO0O,OAEV,MACH,IAAK,OACL,IAAK,WACFsgC,EAAaR,EAAOW,UACjB7nB,EACAygB,EACA/nC,EAAOqpB,KACPrpB,EAAO0O,OAEV,MACH,IAAK,SACL,IAAK,UACFsgC,EAAaR,EAAOY,YACjB9nB,EACAygB,EACA/nC,EAAOqpB,KACPrpB,EAAO0O,OAEV,MACH,IAAK,OACFsgC,EAAaR,EAAOa,UACjB/nB,EACAygB,EACA/nC,EAAOqpB,KACPrpB,EAAO0O,OAEV,MACH,IAAK,UACFsgC,EAAaR,EAAOc,aACjBhoB,EACAygB,EACA/nC,EAAOqpB,KACPrpB,EAAO0O,OAEV,MACH,IAAK,OACFsgC,EAAaR,EAAOe,UACjBjoB,EACAygB,EACA/nC,EAAOqpB,KACPrpB,EAAO0O,OAEV,MACH,IAAK,eACL,IAAK,gBACFsgC,EAAaR,EAAOgB,kBACjBloB,EACAygB,EACA/nC,EAAOqpB,KACPrpB,EAAO0O,OAEV,MACH,IAAK,cACFsgC,EAAaR,EAAOiB,gBACjBnoB,EACAtnB,EAAOqpB,KACPrpB,EAAO0O,OAMbnN,EAD0B,QAAzB83C,EAAgB32B,KACRnhB,GAAUytC,EAEVztC,GAAUytC,CAxFA,CAHmB,CA4FzC,IAGIztC,CACV,CAsBA,UAAA+vB,CAAW3J,EAAS,GAAIxF,EAAS,MAS9B,GARA9kB,KAAKkxC,QAAU5mB,EAAO3nB,QAAQ+e,GAAMA,GAAGgyB,wBAGvC1zC,KAAKixC,aAAejxC,KAAKkxC,QACpBlxC,KAAKkxC,QAAQvuC,QAAQ+e,GAAMA,GAAKA,EAAE2kB,cAAyB,QAAT3kB,EAAEjf,MACpD,GAGDqiB,EAAQ,CACT9kB,KAAKqzC,QAAUvuB,EAEf,IAAI6uB,EAAgB,CACjB10C,GAAI,cACJuE,MAAOshB,EAAOthB,OAIbshB,EAAO0Y,WACRmW,EAAc7nB,MAAQ,eAGzB9rB,KAAKkxC,QAAQ3f,QAAQoiB,EACxB,aACU3zC,KAAKqzC,OAElB,CAEA,WAAAmI,CAAYn4B,EAAU,IACnBrjB,KAAKy7C,SAAWp4B,CACnB,CAQA,OAAAA,CAAQ1gB,EAAS,MAAM,IACpB,IAAIuB,EAAS,GAcb,OAZIlE,KAAKO,KACN2D,EAASA,EAAOyV,OAAO3Z,KAAKO,GAAG8iB,QAAQ1gB,KAGtC3C,KAAKy7C,WACNv3C,EAASA,EAAOyV,QACZ3Z,KAAKy7C,UAAY,IAAI94C,QAClB2gB,GAAM3gB,EAAO2gB,IAAMpf,EAAOvB,QAAQjB,GAAMA,EAAEzC,IAAMqkB,EAAErkB,KAAI2C,OAAS,MAKlEsC,CACV,CAEA,QAAAgwB,CAASvS,GACN3hB,KAAKg8C,gBAAkBr6B,GAAY,CAAC,EACpC3hB,KAAKg8C,gBAAgBpiC,MAAQ5Z,KAAKg8C,gBAAgBpiC,OAAS,EAC9D,oBCnyBH,MAAMsiC,EAAU,EAAQ,OAExB,SAASpvB,EAAErqB,EAAK6C,GAEb,OAAOA,CACV,CAEA,MAAM62C,EAA2B,CAC9B15C,IAAK,YAGLs7B,YAAa,uBAIbhgB,KAAM,MAINq+B,cAAc,EAOdC,YAAY,EAMZC,SAAU,aAIVC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CAAC,UAAW,WAAY,YAAa,MAAO,YAO/DxU,EAAgB,CACnBh3B,OAAQ,GACRyrC,UAAW,OACXC,cAAe,EACfC,YAAa,QAGhBn9C,EAAOC,QAAU,cAAmCs8C,EACjD,WAAAp8C,CAAYyF,EAAQuf,GACjB/kB,MAAMwF,EAAQuf,EAAQq3B,EACzB,CAGA,eAAO3gB,GACJ,OAAO2gB,CACV,CAEA,oBAAOhU,GACJ,OAAOA,CACV,CAEA,uBAAO4U,CAAiBt5C,GACrB,MAAMu5C,EAAgBh9C,KAAKi9C,gBAAgBt6C,QAAQymB,GACzCA,EAAKnqB,IAAMwE,IAClB,GAEH,OAAOu5C,EAAgBA,EAAcE,KAAO,EAC/C,CAEA,oBAAOD,GACJ,MAAO,CACJ,CAAEh+C,GAAI,OAAQoS,MAAOyb,IAAWowB,KAAM,IACtC,CAAEj+C,GAAI,QAASoS,MAAOyb,IAAYowB,KAAM,MACxC,CAAEj+C,GAAI,QAASoS,MAAOyb,IAAYowB,KAAM,KACxC,CAAEj+C,GAAI,QAASoS,MAAOyb,IAAYowB,KAAM,KACxC,CAAEj+C,GAAI,OAAQoS,MAAOyb,IAAWowB,KAAM,KACtC,CAAEj+C,GAAI,QAASoS,MAAOyb,IAAYowB,KAAM,KAE9C,CAEA,sBAAOC,CAAgBhsC,EAAQyrC,EAAWC,EAAeO,GAMtD,OAJGjsC,EACAnR,KAAK+8C,iBAAiBH,IACrB,aAAeQ,GAAet3C,OAAOma,SAAS48B,GAGrD,CAEA,UAAAh9B,CAAWta,GACRxF,MAAM8f,WAAWta,GAGjBvF,KAAK2hB,SAASk7B,cAAgB58B,SAASjgB,KAAK2hB,SAASk7B,cACxD,CAQA,YAAAzU,CAAa7iC,UAEHA,EAAOvF,KAAKiiB,WACtB,CAEA,MAAApK,CAAOoS,GACJ,IAAKA,IAAUjqB,KAAKiiB,YAAa,MAAO,GAExC,IAQG,OAPwBjiB,KAAKF,YAAYq9C,gBACtCn9C,KAAK2hB,SAASxQ,OACdnR,KAAK2hB,SAASi7B,UACd58C,KAAK2hB,SAASk7B,cACd5yB,EAAQjqB,KAAKiiB,YAInB,CAAE,MAAO9gB,GACN,MAAO,EACV,CACH,oBC/IH,MAAM+6C,EAAU,EAAQ,OAOlBmB,EAAyB,CAC5B56C,IAAK,UAGLs7B,YAAa,sDAIbhgB,KAAM,iBAINq+B,cAAc,EAOdC,YAAY,EAMZC,SAAU,WAIVC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,WAKrBC,qBAAsB,CAAC,OAAQ,YAM5BxU,EAAgB,CACnB4H,QAAS,GAGZpwC,EAAOC,QAAU,cAAiCs8C,EAC/C,WAAAp8C,CAAYyF,EAAQuf,GACjB/kB,MAAMwF,EAAQuf,EAAQu4B,EACzB,CAGA,eAAO7hB,GACJ,OAAO6hB,CACV,CAEA,oBAAOlV,GACJ,OAAOA,CACV,CAYA,UAAAtoB,CAAWta,GACRxF,MAAM8f,WAAWta,GAEY,MAAzBvF,KAAK2hB,SAASouB,UACf/vC,KAAK2hB,SAASouB,QAAU9vB,SAASjgB,KAAK2hB,SAASouB,SACrD,CAQA,YAAA3H,CAAa7iC,GACqB,MAA3BA,EAAOvF,KAAKiiB,aAAgD,MAAzBjiB,KAAK2hB,SAASouB,UAClDxqC,EAAOvF,KAAKiiB,YAAcjiB,KAAK2hB,SAASouB,QAE9C,kECzGH,MAAMmM,QAAU,oBAAQ,OAExB,SAASpvB,EAAErqB,EAAK6C,GAEb,OAAOA,CACV,CAGA,SAASg4C,IAAIC,GAEV,IAAKA,EAAY,OAAO,EACxB,MAAMC,EAAW,IAAIzlC,KAAKwlC,GAC1B,IAAKC,EAAU,OAAO,EAEtB,MAEMC,GAFQ,IAAI1lC,KAESylC,GADX,QAGhB,OAAIC,EAAY,EAAUC,KAAKC,MAAkB,GAAZF,GAAkB,GAE3CC,KAAKE,MAAMH,EAc1B,CAEA,SAASI,KAAKN,GAEX,IAAKA,EAAY,OAAO,EACxB,MAAMC,EAAW,IAAIzlC,KAAKwlC,GAC1B,OAAKC,EAEEA,EAAS1kC,cAFM,CAGzB,CAEA,SAASglC,MAAMP,GAEZ,IAAKA,EAAY,OAAO,EACxB,MAAMC,EAAW,IAAIzlC,KAAKwlC,GAC1B,OAAKC,EAGEA,EAASxkC,WAHM,CAIzB,CAEA,SAAS+kC,IAAIR,GAEV,IAAKA,EAAY,OAAO,EACxB,MAAMC,EAAW,IAAIzlC,KAAKwlC,GAC1B,OAAKC,EAEEA,EAASvkC,UAFM,CAGzB,CAEA,SAAS+kC,KAAKT,GAEX,IAAKA,EAAY,OAAO,EACxB,MAAMC,EAAW,IAAIzlC,KAAKwlC,GAC1B,OAAKC,EAMEE,KAAKC,MAAMH,EAASnkC,UAHZ,OAHO,CAOzB,CAEA,SAAS4kC,KAAKV,GAEX,IAAKA,EAAY,OAAO,EACxB,MAAMC,EAAW,IAAIzlC,KAAKwlC,GAC1B,OAAKC,EAMEE,KAAKC,MAAMH,EAASnkC,UAHX,MAHM,CAOzB,CAEA,SAAS6kC,OAAOX,GAEb,IAAKA,EAAY,OAAO,EACxB,MAAMC,EAAW,IAAIzlC,KAAKwlC,GAC1B,OAAKC,EAMEE,KAAKC,MAAMH,EAASnkC,UAHT,KAHI,CAOzB,CAEA,SAAS8kC,eAAeC,GACrB,MAAMC,EAAQD,EAAO,GACfE,EAASZ,KAAKE,MAAMS,GACpBE,EAA6B,IAAlBF,EAAQC,GACnBE,EAAWd,KAAKC,MAAMY,GAE5B,OAAOE,WAAW,GAAGH,KAAUE,IAClC,CAEA,MAAME,yBAA2B,CAC9Bj8C,IAAK,YAGLs7B,YAAa,mDAIbhgB,KAAM,aAINq+B,aAAeztB,GAKiB,GAJD,CAAC,iBAAkB,OAAQ,OAAQ,UACvBhsB,QAAQymB,GAC7CuF,EAAMhN,SAASg9B,QAAQ1J,SAAS7rB,KAEhBxnB,OAQtBy6C,YAAY,EAMZC,SAAU,YAIVC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CACnB,UACA,WACA,YACA,MACA,UACA,SACA,UACA,MACA,UACA,QACA,QACA,SAOAxU,cAAgB,CACnBwW,QAAS,GACTC,YAAa,OACbC,cAAe,GAGlBl/C,OAAOC,QAAU,MAAMk/C,6BAA6B5C,QACjD,WAAAp8C,CAAYyF,EAAQuf,GACjB/kB,MAAMwF,EAAQuf,EAAQ45B,yBACzB,CAGA,eAAOljB,GACJ,OAAOkjB,wBACV,CAEA,oBAAOvW,GACJ,OAAOA,aACV,CAWA,kBAAO4W,CACJj6B,OACA65B,QACA10B,QACA+0B,MACAlzB,MAAQ,KACRmzB,aAAc,GAEd,OAAKN,SAGLA,QAAUA,QAAQ/4C,QAAQ,eAAgB,gBAE1Ckf,OAAOwF,SAAStkB,SAAS0b,IACtB,IAAI0M,EAAU1M,EAAEO,WAMhB,GALImM,EAAQ5mB,QAAQ,MAAQ,IAEzB4mB,EAAUA,EAAQ1K,MAAM,KAAK,IAG5Bi7B,QAAQn3C,QAAQ,IAAM4mB,EAAU,KAAO,EAAG,OAE9C,MAAMhtB,EACH6oB,QAAQ,GAAGnF,OAAOgH,OAASA,SAASpK,EAAEO,eACtCgI,QAAQvI,EAAEO,YAGb,GAAa,UAATP,EAAEjf,IAAiB,CACpB,MAAMy8C,EAAY,IAAI99C,GAAQ,KAC9Bu9C,QAAUA,QAAQ/4C,QACf,IAAIqV,OAAO,IAAMmT,EAAU,IAAK,KAChC8wB,EAEN,MAEK,GAAa,aAATx9B,EAAEjf,KAA+B,WAATif,EAAEjf,IAAkB,CAClD,IAAI08C,EAASz9B,EAAE7J,OAAOoS,QAASg1B,cAAgB,EAG1B,iBAAVE,IACRA,EAASA,EAAOv5C,QAAQ,YAAa,KAExCu5C,EAAS,IAAIA,KAEbR,QAAUA,QAAQ/4C,QACf,IAAIqV,OAAO,IAAMmT,EAAU,IAAK,KAChC+wB,EAEN,MAEK,GAAa,QAATz9B,EAAEjf,KAA0B,YAATif,EAAEjf,IAAmB,CAC9C,MAAM28C,EAAU,IAAIh+C,GAAQ,MAC5Bu9C,QAAUA,QAAQ/4C,QACf,IAAIqV,OAAO,IAAMmT,EAAU,IAAK,KAChCgxB,EAEN,MAEK,GAAa,WAAT19B,EAAEjf,IAAkB,CAC1B,MAAM48C,EAAa,IAAIj+C,GAAQ,KAC/Bu9C,QAAUA,QAAQ/4C,QACf,IAAIqV,OAAO,IAAMmT,EAAU,IAAK,KAChCixB,EAEN,KAMIC,KAAKX,SAAShyC,QAAQqyC,OAAS,IA9DjB,EA+DxB,CAYA,YAAA5W,CAAa7iC,UAEHA,EAAOvF,KAAKiiB,WACtB,CAEA,MAAApK,CAAOoS,EAASg1B,GAAc,GAC3B,IAAID,EAAQ,EACqB,QAA7Bh/C,KAAK2hB,SAASi9B,cACfI,EAAQh/C,KAAK2hB,SAASk9B,eAGzB,IACG,IAAI36C,EAASlE,KAAKF,YAAYi/C,YAC3B/+C,KAAK8kB,OACL9kB,KAAK2hB,SAASg9B,QACd10B,EACA+0B,EACAh/C,KAAK8rB,MACLmzB,GAMH,OAHqB,iBAAV/6C,IACRA,EAASA,EAAO0B,QAAQ,YAAa,KAEhC5F,KAAK2hB,SAASi9B,aACnB,IAAK,QACF16C,EAASA,EAAO0B,QAAQ,IAAK,KAC7B,MACH,IAAK,QACF1B,EAASA,EAAO0B,QAAQ,IAAK,KAInC,OAAO1B,CACV,CAAE,MAAO/C,GACN,MAAO,EACV,CACH,oBC7UH,MAAM+6C,EAAU,EAAQ,OAOlBqD,EAA0B,CAC7B98C,IAAK,WAGLs7B,YAAa,iBAIbhgB,KAAM,MAINq+B,cAAc,EAOdC,YAAY,EAMZC,SAAU,iBAIVC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CAAC,OAAQ,aAAc,aAO1CxU,EAAgB,CACnBqX,eAAgB,GAKhB5C,UAAW,QAGdj9C,EAAOC,QAAU,cAAiCs8C,EAC/C,WAAAp8C,CAAYyF,EAAQuf,GACjB/kB,MAAMwF,EAAQuf,EAAQy6B,EACzB,CAGA,eAAO/jB,GACJ,OAAO+jB,CACV,CAEA,oBAAOpX,GACJ,OAAOA,CACV,CAEA,UAAAtoB,CAAWta,GACRxF,MAAM8f,WAAWta,GAEjBvF,KAAK2hB,SAASi7B,UACXr3C,EAAOoc,SAASi7B,WAAazU,EAAcyU,SACjD,CAQA,YAAAxU,CAAa7iC,UAEHA,EAAOvF,KAAKiiB,WACtB,CAQA,iBAAAw9B,GACG,MAAMv7C,EAAS,GASf,OAPClE,KAAK2hB,UAAU69B,gBAAkB,IAAI97B,MAAM,KAAK1d,SAAS2sC,IACvD,MAAM+M,EAAM1/C,KAAK8kB,OAAOwF,QAAQ5I,GAAMA,EAAEziB,IAAM0zC,IAAS,GAClD+M,GAELx7C,EAAOkD,KAAKs4C,EAAI,IAGZx7C,CACV,CASA,MAAA2T,CAAOoS,GACJ,IAAI/gB,EAAM+gB,EAAQjqB,KAAKiiB,aAAe,GAsBtC,OApBAjiB,KAAKy/C,oBAAoBz5C,SAAQ,CAAC0b,EAAGiL,KAClC,GACY,iBAATjL,EAAEjf,KACFif,EAAEC,SAASivB,YACXlvB,EAAEC,SAASkvB,YAEX,OAEH,IAAI8O,EAAa11B,EAAQvI,EAAE+L,gBAC3B,IAAKkyB,EAAY,OAEZj6C,MAAMC,QAAQg6C,KAAaA,EAAa,CAACA,IAE9C,MAAMC,EAAeD,EACjB7gD,KAAKsqB,GAASA,EAAK3lB,MAAQie,EAAE2L,eAAe0b,YAAY3f,KACxDhgB,KAAK,KAETF,EAAMA,EAAItD,QAAQqkB,EAAQvI,EAAEO,YAAa29B,EAAa,IAGlD12C,CACV,oBCxJH,IAAIgzC,EAAU,EAAQ,OAOtB,MAAM2D,EAAyB,CAC5Bp9C,IAAK,gBAGLs7B,YAAa,oCAIbhgB,KAAM,gBAINq+B,cAAc,EAOdC,WAAa1tB,GAEH,CAAC,WAAY,WAAWnnB,QADd,GAAGmnB,GAAOhN,UAAU2M,YAAYK,GAAOhN,UAAUkS,gBACd,EAOvDyoB,SAAU,4BAIVC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CAAC,OAAQ,UAAW,aAMvCxU,EAAgB,CACnBvmB,WAAY,GAGZ0M,SAAU,MAIVuF,YAAa,OAIbisB,WAAY,GAIZ1L,SAAU,KAUVG,WAAY,EAKZ3D,WAAY,GASZC,YAAa,IAMhBlxC,EAAOC,QAAU,cAAiCs8C,EAC/C,WAAAp8C,CAAYyF,EAAQuf,EAAQi7B,EAAgBF,GACzC9/C,MAAMwF,EAAQuf,EAAQi7B,GAEtB//C,KAAKqmC,cAAe,CAUvB,CAGA,eAAO7K,GACJ,OAAOqkB,CACV,CAEA,oBAAO1X,GACJ,OAAOA,CACV,CAMA,UAAAtoB,CAAWta,GACRxF,MAAM8f,WAAWta,GAGjBvF,KAAK2hB,SAASyyB,SAAWn0B,SAASjgB,KAAK2hB,SAASyyB,UAAY,GAC5Dp0C,KAAK2hB,SAAS4yB,WAAat0B,SAASjgB,KAAK2hB,SAAS4yB,YAAc,EACnE,CAYA,YAAAnM,GAA4B,CAU5B,WAAA/b,CAAYjrB,EAAM0U,GACf/V,MAAMssB,YAAYjrB,EAAM0U,EAC3B,CAEA,YAAA2X,GAEG,GAAIztB,KAAKiiB,WAAWza,QAAQ,MAAQ,EAAG,CACpC,MAAMw4C,EAAQhgD,KAAKiiB,WAAWyB,MAAM,KACpC,MAAO,GAAGs8B,EAAM,MAAMhgD,KAAKO,GAAGqZ,MAAMye,sBAAsB2nB,EAAM,KACnE,CACG,OAAOhgD,KAAKO,GAAGqZ,MAAMye,sBAAsBr4B,KAAKiiB,WAEtD,CAOA,kBAAIoL,GACD,MAAM+F,EAAUpzB,KAAKO,GAAGoL,WAAW3L,KAAK2hB,SAASC,YACjD,IAAKwR,EAAS,CACX,MAAM6sB,EAAc,IAAI3gD,MACrB,gBAAgBU,KAAKwD,UAAUxD,KAAKf,iCAAiCe,KAAK2hB,SAASC,eAEtF5hB,KAAKO,GAAGoJ,OAAO2sB,QAAQ2pB,EAAa,CACjCtxB,MAAO3uB,KACP4hB,WAAY5hB,KAAK2hB,SAASC,YAEhC,CACA,OAAOwR,CACV,CAOA,aAAIzL,GACD,MAAMkc,EAAa7jC,KAAKqtB,eACxB,IAAKwW,EAAY,OAAO,KAExB,MAAMic,EAAajc,EAAWjc,UAAU5nB,KAAK2hB,SAASm+B,YACtD,IAAKA,EAAY,CACd,MAAMG,EAAc,IAAI3gD,MACrB,gBAAgBU,KAAKwD,UAAUxD,KAAKf,iCAAiCe,KAAK2hB,SAASm+B,eAEtF9/C,KAAKO,GAAGoJ,OAAO2sB,QAAQ2pB,EAAa,CACjCtxB,MAAO3uB,KACP8/C,WAAY9/C,KAAK2hB,SAASm+B,YAEhC,CACA,OAAOA,CACV,CAQA,kBAAAI,CAAmB1pC,GAChB,IAAI2pC,EAGJ,MAAMpU,EAAe/rC,KAAKqtB,eAE1B,IAAIjsB,EAAOpB,KAAKogD,UAAU5pC,GAC1B,GAAIpV,GAAQ2qC,EAAc,CAEvB,GAAmB,iBAAR3qC,EACR,IACGA,EAAOuF,KAAKiE,MAAMxJ,EACrB,CAAE,MAAO/B,GAGN8gD,EAAe/+C,CAClB,CAGH++C,EAAe/+C,CAClB,CAEA,OAAO++C,CACV,CAEA,SAAAC,CAAUn2B,GACP,GAAe,MAAXA,EAAiB,MAAO,GAE5B,MAAMo2B,EAAW,GAAGrgD,KAAK8kB,OAAOlZ,QAAQ5L,KAAKytB,iBAE7C,OACGxD,EAAQjqB,KAAKytB,iBACbxD,EAAQo2B,IACRp2B,EAAQjqB,KAAKiiB,aACb,EAEN,CAEA,MAAApK,CAAOoS,GACJ,MAAM/gB,EAAMlJ,KAAKkgD,mBAAmBj2B,GAC9B8hB,EAAe/rC,KAAKqtB,eAG1B,OAAI3nB,MAAMC,QAAQuD,GACRA,EACHpK,KAAKmH,GACW,MAAVA,EAAExC,KAAqBsoC,EAAahD,YAAY9iC,IAAM,GAC9CA,EAAExC,MAAQ,KAExB2F,KAAK,MAEHF,EACU,MAAZA,EAAIzF,KAAqBsoC,EAAahD,YAAY7/B,IAAQ,GACrDA,EAAIzF,KAAayF,EAAIzF,MAAQ,QAAjC,EAGI,EACf,CAOA,QAAA6qB,GACG,OAAOtuB,KAAK2hB,SAAS2M,QACxB,CAOA,WAAAuF,GACG,OAAO7zB,KAAK2hB,SAASkS,WACxB,CAOA,QAAAugB,GACG,OAAOp0C,KAAK2hB,SAASyyB,QACxB,CAMA,cAAIxD,GACD,IAAK5wC,KAAK2hB,SAAS4yB,aAAev0C,KAAK2hB,SAASivB,WAC7C,OAAO,KAEV,MAAMtiB,EAAW,GAAGtuB,KAAK2hB,SAAS2M,YAAYtuB,KAAK2hB,SAASkS,cAE5D,GAAiB,aAAbvF,EACD,OAAOtuB,KAAKqtB,eAAezF,UAAU5nB,KAAK2hB,SAASivB,YAGjD,GAAiB,YAAbtiB,EACN,OAAItuB,KAAK2hB,SAASyyB,SACRp0C,KAAKqtB,eAAezF,UAAU5nB,KAAK2hB,SAASivB,YAE5C5wC,KAAK8kB,OAAO8C,UAAU5nB,KAAK2hB,SAASivB,YAI5C,GAAiB,aAAbtiB,EACN,OAAOtuB,KAAK8kB,OAAO8C,UAAU5nB,KAAK2hB,SAASivB,YAGzC,GAAiB,cAAbtiB,EAA0B,CAChC,IAAIsiB,EAAa5wC,KAAK8kB,OAAO8C,UAAU5nB,KAAK2hB,SAASivB,YAOrD,OALkB,MAAdA,IACDA,EAAa5wC,KAAKqtB,eAAezF,UAC9B5nB,KAAK2hB,SAASivB,aAGbA,CACV,CAEA,OAAO,IACV,CAMA,eAAIC,GACD,IAAK7wC,KAAK2hB,SAAS4yB,aAAev0C,KAAK2hB,SAASkvB,YAC7C,OAAO,KAGV,IAAID,EAeJ,MAX6B,QAA1B5wC,KAAK2hB,SAAS2M,UACe,QAA7BtuB,KAAK2hB,SAASkS,cAEd+c,EAAa5wC,KAAK8kB,OAAO8C,UAAU5nB,KAAK2hB,SAASkvB,aAE/B,MAAdD,IACDA,EAAa5wC,KAAKqtB,eAAezF,UAC9B5nB,KAAK2hB,SAASkvB,eAIhBD,CACV,CAWA,gBAAApiB,CAAiBvE,EAAS1hB,EAAU,CAAC,GAClC,GAAe,MAAX0hB,EAAiB,OACrB,IAAImE,EACJ,MAAMwiB,EAAa5wC,KAAK4wC,WAClBvjB,EAAiBrtB,KAAKqtB,eAEtBiB,EAAW,GAAGtuB,KAAK2hB,SAAS2M,YAAYtuB,KAAK2hB,SAASkS,cAI5D,GAAiB,cAAbvF,EAA0B,CAC3B,MAAMuiB,EAAc7wC,KAAK6wC,YAErBD,GAAcA,EAAW9rB,OAAO7lB,IAAMouB,EAAepuB,GACtDmvB,EAAUwiB,EAAW3uB,WACb4uB,GAAeA,EAAY/rB,OAAO7lB,IAAMouB,EAAepuB,KAC/DmvB,EAAUyiB,EAAY5uB,WAE5B,MAGG2uB,IACc,aAAbtiB,GACgB,YAAbA,GAA0BtuB,KAAK2hB,SAASyyB,UAE5ChmB,EAAUwiB,EAAW3uB,WAGF,aAAbqM,EAMHF,EADC7lB,EAAQ+3C,UACCjzB,EAAephB,KAEf2kC,EAAaA,EAAW3uB,WAAaoL,EAAephB,KAI3DohB,IACNe,EAAUf,EAAephB,MAG5B,IAAI/H,EACD+lB,EAAQmE,IACRnE,EAAQjqB,KAAK8kB,QAAQ7Y,OACrBge,EAAQhrB,IACRgrB,EAMH,MAJe,MAAXmE,IACDlqB,EAAS+b,SAAS/b,IAGdA,CACV,oBC1bH,MAAMkZ,EAAY,EAAQ,OAE1Bzd,EAAOC,QAAU,cAA0Bwd,EACxC,WAAAtd,CAAYyF,EAAQuf,EAAQi7B,GACzBhgD,MAAM,CAAC,SAAU+kB,EAAOvkB,IAGxBP,KAAKw7B,SAAWukB,GAAiB,CAAC,EAsBlC//C,KAAK8kB,OAASA,EAEd9kB,KAAK6f,WAAWta,EACnB,CAQA,wBAAWg7C,GACR,MAAO,CACJ,KACA,aACA,aACA,aACA,YACA,YAEN,CAEA,oBAAOpY,GACJ,MAAO,CAAC,CACX,CAGA,QAAAqY,GACG,OAAOxgD,KAAKw7B,SAAS/4B,GACxB,CAMA,aAAAg+C,GACG,OAAIzgD,KAAKw7B,SAASkhB,mBACXh3C,MAAMC,QAAQ3F,KAAKw7B,SAASkhB,oBACtB18C,KAAKw7B,SAASkhB,mBAEd,CAAC18C,KAAKw7B,SAASkhB,oBAGlB,EAEb,CAMA,eAAAgE,GACG,OAAI1gD,KAAKw7B,SAASmhB,qBACXj3C,MAAMC,QAAQ3F,KAAKw7B,SAASmhB,sBACtB38C,KAAKw7B,SAASmhB,qBAEd,CAAC38C,KAAKw7B,SAASmhB,sBAGlB,EAEb,CAGA,SAAAgE,GACG,OAAO3gD,KAAKw7B,SAASzd,IACxB,CAGA,aAAA6iC,GACG,OAAO5gD,KAAKw7B,SAAS8gB,QACxB,CAGA,gBAAAuE,GACG,OAAO7gD,KAAKw7B,SAASuC,WACxB,CAGA,iBAAA2V,GACG,OAAkC,MAA9B1zC,KAAKw7B,SAAS4gB,aAC2B,mBAA/Bp8C,KAAKw7B,SAAS4gB,aACfp8C,KAAKw7B,SAAS4gB,aAAap8C,MAE3BA,KAAKw7B,SAAS4gB,aAIpB,CACV,CAGA,eAAA0E,GACG,OAAgC,MAA5B9gD,KAAKw7B,SAAS6gB,WACyB,mBAA7Br8C,KAAKw7B,SAAS6gB,WACfr8C,KAAKw7B,SAAS6gB,WAAWr8C,MAEzBA,KAAKw7B,SAAS6gB,WAIpB,CACV,CAGA,eAAAvT,GACG,OAAgC,MAA5B9oC,KAAKw7B,SAASihB,WACyB,mBAA7Bz8C,KAAKw7B,SAASihB,WACfz8C,KAAKw7B,SAASihB,WAAWz8C,MAEzBA,KAAKw7B,SAASihB,WAIpB,CACV,CAEA,mBAAAsE,GACG,OAAI/gD,KAAKw7B,SAAS+gB,gBAAuBv8C,KAAKw7B,SAAS+gB,cAG1D,CAEA,iBAAAyE,GACG,OAAkC,MAA9BhhD,KAAKw7B,SAASylB,eAC2B,mBAA/BjhD,KAAKw7B,SAASylB,aACfjhD,KAAKw7B,SAASylB,aAAajhD,MAE3BA,KAAKw7B,SAASylB,aAK9B,CAgBA,KAAAr5C,GACG,MAAM8D,EAAM3L,MAAM6H,QAElB,MAAO,CACJ3I,GAAIe,KAAKf,GACT8J,KAAM/I,KAAK+I,MAAQ,QACnBtG,IAAKzC,KAAKyC,IACVsb,KAAM/d,KAAK+d,KACXkc,WAAYj6B,KAAKi6B,WACjBhY,WAAYjiB,KAAKiiB,WACjBN,SAAU3hB,KAAK2hB,SACf/B,aAAclU,EAAIkU,aAExB,CAEA,YAAAshC,CAAah4C,EAAKi4C,GACf,IAAIC,EAAYD,EAIhB,YAHkB,IAAPj4C,IACRk4C,EAAYl4C,GAERk4C,CACV,CAQA,UAAAvhC,CAAWta,GACHvF,KAAKf,KAAIe,KAAKf,GAAKsG,EAAOtG,IAC/Be,KAAK+I,KAAQxD,EAAOwD,KACpB/I,KAAKyC,IAAM8C,EAAO9C,KAAOzC,KAAKwgD,WAC9BxgD,KAAK+d,KAAOxY,EAAOwY,MAAQ/d,KAAK2gD,YAEhCp7C,EAAOoc,SAAWpc,EAAOoc,UAAY,CAAC,EAItC3hB,KAAKwD,MAAQ+B,EAAO/B,OAAS+B,EAAOoc,SAASne,OAAS,UAEtDxD,KAAKiiB,WAAa1c,EAAO0c,YAAc,GAEvCjiB,KAAKi6B,WAAa10B,EAAO00B,YAAc,EAEvCj6B,KAAK2hB,SAAWpc,EAAOoc,SACvB3hB,KAAK2hB,SAAS0/B,SAAWrhD,KAAKkhD,aAAa37C,EAAOoc,SAAS0/B,SAAU,KACrErhD,KAAK2hB,SAAS2/B,SAAWthD,KAAKkhD,aAAa37C,EAAOoc,SAAS2/B,SAAU,KACrEthD,KAAK2hB,SAAS4/B,MAAQvhD,KAAKkhD,aAAa37C,EAAOoc,SAAS4/B,MAAO,KAG/DvhD,KAAKi6B,WAAaha,SAASjgB,KAAKi6B,YAChCj6B,KAAK2hB,SAAS0/B,SAAWphC,SAASjgB,KAAK2hB,SAAS0/B,UAChDrhD,KAAK2hB,SAAS2/B,SAAWrhC,SAASjgB,KAAK2hB,SAAS2/B,UAChDthD,KAAK2hB,SAASgd,OAAS1e,SAASjgB,KAAK2hB,SAASgd,QAAU,GACxD3+B,KAAK2hB,SAAS4/B,MAAQthC,SAASjgB,KAAK2hB,SAAS4/B,OAG7C,MAAMpZ,EAAgBnoC,KAAKF,YAAYqoC,iBAAmB,CAAC,EAC3D,IAAK,MAAMpW,KAAMoW,EACdnoC,KAAK2hB,SAASoQ,GAAM/xB,KAAKkhD,aACtB37C,EAAOoc,SAASoQ,GAChBoW,EAAcpW,IAKpBhyB,MAAM8f,WAAWta,GAGjBvF,KAAKiiB,WAAajiB,KAAKiiB,YAAcjiB,KAAKwD,MAI1CxD,KAAKiiB,WAAajiB,KAAKiiB,WAAWrc,QAAQ,mBAAoB,GACjE,CAQA,UAAAie,GACG,OAAO7jB,KAAK8kB,OAAOujB,WAAaroC,KAAKf,EACxC,CAQA,YAAAmpC,CAAa7iC,GACVA,EAAOvF,KAAKiiB,YAAc,EAC7B,CAQA,WAAAoK,CAAYjrB,EAAM0U,IAGZ9V,KAAK2hB,SAAS2/B,UACY,MAAzBlgD,EAAKpB,KAAKiiB,aAAgD,IAAzB7gB,EAAKpB,KAAKiiB,aACnB,GAAzB7gB,EAAKpB,KAAKiiB,aAEVnM,EAAU1B,SAASpU,KAAKiiB,WAAY,4BAE1C,CAOA,kBAAIklB,GACD,OAAO,CACV,CAEA,SAAAiZ,CAAUn2B,GACP,MAAMo2B,EAAW,GAAGrgD,KAAK8rB,OAAS9rB,KAAK8kB,OAAOlZ,QAAQ5L,KAAKiiB,aAE3D,IAAI/d,EAAS,GAOb,OANkC,MAA9B+lB,IAAUjqB,KAAKiiB,YAChB/d,EAAS+lB,EAAQjqB,KAAKiiB,YACS,MAAvBgI,IAAUo2B,KAClBn8C,EAAS+lB,EAAQo2B,IAGbn8C,CACV,CAQA,MAAA2T,CAAOoS,GACJ,OAAIA,EACMjqB,KAAKogD,UAAUn2B,GACX,EACjB,CASA,YAAApiB,GACG,MAAM25C,EAAQzhD,MAAM8H,eAWpB,MAPkB,IAAd25C,EAAM51C,OACP41C,EAAM51C,KACH41C,EAAMxnC,KAAKpO,MAAQ41C,EAAMxnC,KAAKxW,OAASg+C,EAAMxnC,KAAKiI,YAEpDjiB,KAAK8kB,QAAU9kB,KAAK8kB,OAAOlZ,OAC5B41C,EAAM51C,KAAO,GAAG5L,KAAK8kB,OAAOlZ,SAAS41C,EAAM51C,QAEvC41C,CACV,oBC5VH,MAAMtF,EAAU,EAAQ,OAOlBuF,EAAsB,CACzBh/C,IAAK,OAGLs7B,YAAa,4BAIbhgB,KAAM,WAINq+B,cAAc,EAOdC,YAAY,EAMZC,SAAU,OAIVC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,QAKrBC,qBAAsB,CAAC,SAMpBxU,EAAgB,CACnBuZ,WAAY,EACZC,YAAa,EACbC,iBAAkB,KAClBC,kBAAmB,OACnBC,kBAAmB,OACnBC,oBAAqB,EACrBC,mBAAoB,EACpBC,kBAAmB,KACnBC,gBAAiB,MAGpBviD,EAAOC,QAAU,cAA8Bs8C,EAC5C,WAAAp8C,CAAYyF,EAAQuf,EAAQqjB,EAAgBsZ,GACzC1hD,MAAMwF,EAAQuf,EAAQqjB,EACzB,CAGA,eAAO3M,GACJ,OAAOimB,CACV,CAEA,oBAAOtZ,GACJ,OAAOA,CACV,CAgBA,UAAAtoB,CAAWta,GACRxF,MAAM8f,WAAWta,GAGjBvF,KAAK2hB,SAAS+/B,WAAazhC,SAASjgB,KAAK2hB,SAAS+/B,YAClD1hD,KAAK2hB,SAASggC,YAAc1hC,SAASjgB,KAAK2hB,SAASggC,YACtD,CAYA,YAAAvZ,CAAa7iC,GACV,GAA+B,MAA3BA,EAAOvF,KAAKiiB,YAAqB,OAErC,IAAIkgC,EAG6B,GAA7BniD,KAAK2hB,SAASggC,YACfQ,EAAa,IAAIpqC,KAIY,GAA7B/X,KAAK2hB,SAASggC,aACd3hD,KAAK2hB,SAASigC,mBAEdO,EAAa,IAAIpqC,KAAK/X,KAAK2hB,SAASigC,mBAIrB,MAAdO,IACD58C,EAAOvF,KAAKiiB,YAAcjiB,KAAKO,GAAGqZ,MAAM5B,aAAamqC,EAAY,CAC9DtqC,OAAQ,eAIjB,CASA,WAAAwU,CAAYjrB,EAAM0U,GACf/V,MAAMssB,YAAYjrB,EAAM0U,GACxB,IAAIgX,EAAI9sB,KAAKO,GAAGsa,QAEhB,MAAMunC,EAAc,IAAIrqC,KAGxB,GAFAqqC,EAAY5P,SAAS,EAAG,EAAG,EAAG,GAE1BpxC,EAAKpB,KAAKiiB,YAAa,CACxB,IAAI5Q,EAAQjQ,EAAKpB,KAAKiiB,YAQtB,GANM5Q,aAAiB0G,OACpB1G,EAAQrR,KAAKO,GAAGqZ,MAAMlC,OAAOrG,IAMa,kBAA1C5R,OAAOyK,UAAU3C,SAAS4C,KAAKkH,IAC/BgxC,SAAShxC,GACV,CACC,IAAIyG,GAAU,EAGd,GAAI9X,KAAK2hB,UAAY3hB,KAAK2hB,SAASkgC,kBAAmB,CACnD,MAAMS,EAAYtiD,KAAK2hB,SAASsgC,kBACxB,IAAIlqC,KAAK/X,KAAK2hB,SAASsgC,mBACvB,KACLM,EAAUviD,KAAK2hB,SAASugC,gBACnB,IAAInqC,KAAK/X,KAAK2hB,SAASugC,iBACvB,KACLM,EAAmBxiD,KAAKyiD,eAAeH,GACvCI,EAAiB1iD,KAAKyiD,eAAeF,GAClCI,EAAU3iD,KAAKO,GAAGqZ,MAAMvB,aAC3B,IAAIN,KACJ/X,KAAK2hB,SAASogC,oBACd/hD,KAAK2hB,SAASmgC,mBAEXc,EAAU5iD,KAAKO,GAAGqZ,MAAMnB,QAC3B,IAAIV,KACJ/X,KAAK2hB,SAASqgC,mBACdhiD,KAAK2hB,SAASmgC,mBAEjB,OAAQ9hD,KAAK2hB,SAASkgC,mBACnB,IAAK,YACEc,EAAUtxC,GAASA,EAAQuxC,EAAS9qC,GAAU,GAE/CA,GAAU,EACVhC,EAAU1B,SACPpU,KAAKiiB,WACL6K,EAAE,mCAAoC,CACnC9sB,KAAKyiD,eAAeE,GACpB3iD,KAAKyiD,eAAeG,OAK7B,MACH,IAAK,UACEN,EAAYjxC,GAASA,EAAQkxC,EAASzqC,GAAU,GAEjDA,GAAU,EACVhC,EAAU1B,SACPpU,KAAKiiB,WACL6K,EAAE,mCAAoC,CACnC01B,EACAE,MAIT,MACH,IAAK,aACErxC,EAAQixC,GAAaC,EAAUlxC,EAAOyG,GAAU,GAEjDA,GAAU,EACVhC,EAAU1B,SACPpU,KAAKiiB,WACL6K,EAAE,uCAAwC,CACvC01B,EACAE,MAIT,MACH,IAAK,IACF5qC,EACGzG,EAAMgI,SACNipC,EAAUjpC,SACVhI,EAAMgI,WAAaipC,EAAUjpC,UAC3BvB,GACFhC,EAAU1B,SACPpU,KAAKiiB,WACL6K,EAAE,mBAAoB,CAAC01B,KAE7B,MACH,IAAK,KACF1qC,EACGzG,EAAMgI,SACNipC,EAAUjpC,SACVhI,EAAMgI,WAAaipC,EAAUjpC,UAC3BvB,GACFhC,EAAU1B,SACPpU,KAAKiiB,WACL6K,EAAE,uBAAwB,CAAC01B,KAEjC,MACH,IAAK,IACF1qC,EACGzG,EAAMgI,SACNipC,EAAUjpC,SACVhI,EAAMgI,UAAYipC,EAAUjpC,UAC1BvB,GACFhC,EAAU1B,SACPpU,KAAKiiB,WACL6K,EAAE,mBAAoB,CAAC01B,KAE7B,MACH,IAAK,IACF1qC,EACGzG,EAAMgI,SACNipC,EAAUjpC,SACVhI,EAAMgI,UAAYipC,EAAUjpC,UAC1BvB,GACFhC,EAAU1B,SACPpU,KAAKiiB,WACL6K,EAAE,oBAAqB,CAAC01B,KAE9B,MACH,IAAK,KACF1qC,EACGzG,EAAMgI,SACNipC,EAAUjpC,SACVhI,EAAMgI,WAAaipC,EAAUjpC,UAC3BvB,GACFhC,EAAU1B,SACPpU,KAAKiiB,WACL6K,EAAE,4BAA6B,CAAC01B,KAEtC,MACH,IAAK,KACF1qC,EACGzG,EAAMgI,SACNipC,EAAUjpC,SACVhI,EAAMgI,WAAaipC,EAAUjpC,UAC3BvB,GACFhC,EAAU1B,SACPpU,KAAKiiB,WACL6K,EAAE,6BAA8B,CAAC01B,KAEvC,MACH,IAAK,kBACF1qC,EACGzG,EAAMgI,SACNhI,EAAMgI,UAAY+oC,EAAY/oC,UAC5BvB,GACFhC,EAAU1B,SACPpU,KAAKiiB,WACL6K,EAAE,oBAAqB,CACpB9sB,KAAKyiD,eAAeL,MAG7B,MACH,IAAK,uBACFtqC,EACGzG,EAAMgI,SACNhI,EAAMgI,WAAa+oC,EAAY/oC,UAC7BvB,GACFhC,EAAU1B,SACPpU,KAAKiiB,WACL6K,EAAE,6BAA8B,CAC7B9sB,KAAKyiD,eAAeL,MAKtC,CAEItqC,IAGD1W,EAAKpB,KAAKiiB,YAAcjiB,KAAK6iD,YAAYxxC,GAE/C,MAEGyE,EAAU1B,SAASpU,KAAKiiB,WAAY,oBAE1C,CACH,CAEA,MAAApK,CAAOoS,GACJ,MAAMqD,EAAIttB,KAAKogD,UAAUn2B,GAEzB,GAAS,IAALqD,GAAgB,MAALA,EACZ,MAAO,GAIV,MAAMw1B,EAAU9iD,KAAKO,GAAGqZ,MAAMlC,OAAO4V,GACrC,OAAOttB,KAAKyiD,eAAeK,EAI9B,CAEA,SAAAC,GACG,IAAIC,EAAmB,GAOvB,OAJGhjD,KAAK2hB,UAAY3hB,KAAK2hB,SAAS+/B,WAC1B1hD,KAAK2hB,SAAS+/B,WACd,IAIL,KAAS,EAuBT,QAEMsB,EAAmB,WAEtB,MArBH,KAAK,EAECA,EAAmB,WAEtB,MAEH,KAAK,EAECA,EAAmB,YAEtB,MAEH,KAAK,EAECA,EAAmB,YAU5B,OAAOA,CACV,CAEA,cAAAP,CAAeQ,GACZ,MAAMvB,EAAa1hD,KAAK+iD,YAExB,OAAO/iD,KAAKkjD,aAAaxB,EAAYuB,EACxC,CAmBA,WAAAJ,CAAYxxC,GACT,OAAOA,EACFrR,KAAKO,GAAGqZ,MAAM5B,aAAa3G,EAAO,CAC/BwG,OAAQ,eAEX,EAER,CAEA,YAAAqrC,CAAaxB,EAAYuB,GACtB,OAAIA,GAAYA,EAAS17C,SAAiB07C,EAAS17C,WACvC,EACf,GAKH5H,EAAOC,QAAQujD,MAAQ,gDCrbvB,MAAMC,EAAkB,EAAQ,OAO1B3B,EAAsB,CACzBh/C,IAAK,WAGLs7B,YAAa,6BAIbhgB,KAAM,UAINq+B,cAAc,EAOdC,YAAY,EAMZC,SAAU,cAIVC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,YAKrBC,qBAAsB,CAAC,aAMpBxU,EAAgB,CACnBkb,WAAY,EACZC,YAAa,EACbC,iBAAkB,MAGrB5jD,EAAOC,QAAU,cAAkCwjD,EAChD,WAAAtjD,CAAYyF,EAAQuf,GACjB/kB,MAAMwF,EAAQuf,EAAQ28B,EACzB,CAGA,eAAOjmB,GACJ,OAAOimB,CACV,CAEA,oBAAOtZ,GACJ,MAAMqb,EAAczjD,MAAMooC,gBAC1B,OAAO1oC,OAAO2vB,OAAOo0B,EAAarb,EACrC,CAgBA,UAAAtoB,CAAWta,GACRxF,MAAM8f,WAAWta,GAGjBvF,KAAK2hB,SAAS0hC,WAAapjC,SAASjgB,KAAK2hB,SAAS0hC,YAClDrjD,KAAK2hB,SAAS2hC,YAAcrjC,SAASjgB,KAAK2hB,SAAS2hC,YACtD,CAYA,YAAAlb,CAAa7iC,GACV,GAA+B,MAA3BA,EAAOvF,KAAKiiB,YAAqB,OAIrC,IAAIkgC,EAYJ,GAdApiD,MAAMqoC,aAAa7iC,GAKfA,EAAOvF,KAAKiiB,cACbkgC,EAAaniD,KAAKO,GAAGqZ,MAAMlC,OAAOnS,EAAOvF,KAAKiiB,cAQhB,GAA7BjiB,KAAK2hB,SAAS2hC,YAAkB,CACjC,MAAMG,EAAW,IAAI1rC,KAEH,MAAdoqC,IAAoBA,EAAa,IAAIpqC,MAEzCoqC,EAAW3P,SAASiR,EAASC,YAC7BvB,EAAWwB,WAAWF,EAASG,cAC/BzB,EAAW0B,WAAWJ,EAASK,cAC/B3B,EAAW4B,gBAAgBN,EAASO,kBACvC,MAEK,GAC2B,GAA7BhkD,KAAK2hB,SAAS2hC,aACdtjD,KAAK2hB,SAAS4hC,iBACf,CACC,MAAMD,EAAc,IAAIvrC,KAAK/X,KAAK2hB,SAAS4hC,kBAEzB,MAAdpB,IAAoBA,EAAa,IAAIpqC,MAEzCoqC,EAAW3P,SAAS8Q,EAAYI,YAChCvB,EAAWwB,WAAWL,EAAYM,cAClCzB,EAAW0B,WAAWP,EAAYQ,cAClC3B,EAAW4B,gBAAgBT,EAAYU,kBAC1C,CAGkB,MAAd7B,IACD58C,EAAOvF,KAAKiiB,YAAckgC,EAAWzoC,cAC3C,CAEA,SAAAqpC,GACG,MAAMM,EAAarjD,KAAKikD,gBAIxB,OAFAjkD,KAAK2hB,SAAW3hB,KAAK2hB,UAAY,CAAC,EAEF,GAA5B3hB,KAAK2hB,SAAS+/B,WACR2B,EAKH,GAFYtjD,MAAMgjD,eAEDM,GAC3B,CAEA,MAAAxrC,CAAOoS,GACJ,MAAMi6B,EAAiBlkD,KAAK+iD,YACtBz1B,EAAIttB,KAAKogD,UAAUn2B,GACnB64B,EAAU9iD,KAAKO,GAAGqZ,MAAMlC,OAAO4V,GAErC,MAAS,IAALA,GAAgB,MAALA,EACL,GAGNttB,KAAKO,GAAG0Q,MACFjR,KAAKO,GAAG0Q,MAAM8G,KAAKosC,UAAUD,EAA7BlkD,CAA6C8iD,GAE7CA,GAASppC,eAAiB,EACvC,CAEA,aAAAuqC,GAEG,OADAjkD,KAAK2hB,SAAW3hB,KAAK2hB,UAAY,CAAC,EAC1B3hB,KAAK2hB,SAAS0hC,YACnB,KAAK,EACF,MAAO,YACV,KAAK,EACF,MAAO,SACV,QACG,MAAO,GAEhB,CAOA,WAAAR,CAAY5qC,GACT,OAAOA,GAAMyB,iBAAmB,EACnC,GAKH/Z,EAAOC,QAAQujD,MACZ,0ECtNH,MAAMjH,EAAU,EAAQ,OAOlBkI,EAAuB,CAC1B3hD,IAAK,QAGLs7B,YAAa,kDAIbhgB,KAAM,WAINq+B,cAAc,EAOdC,YAAY,EAMZC,SAAU,QAIVC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CAAC,OAAQ,UAAW,aAMvCxU,EAAgB,CACnB4H,QAAS,GACTsU,gBAAiB,GAGpB1kD,EAAOC,QAAU,cAA+Bs8C,EAC7C,WAAAp8C,CAAYyF,EAAQuf,GACjB/kB,MAAMwF,EAAQuf,EAAQs/B,EACzB,CAGA,eAAO5oB,GACJ,OAAO4oB,CACV,CAEA,oBAAOjc,GACJ,OAAOA,CACV,CAMA,UAAAtoB,CAAWta,GACRxF,MAAM8f,WAAWta,GAEjBvF,KAAK2hB,SAASouB,QAAUxqC,EAAOoc,SAASouB,SAAW,EACtD,CAYA,YAAA3H,CAAa7iC,GAELA,EAAOvF,KAAKiiB,aAEVjiB,KAAK2hB,SAASouB,UACfxqC,EAAOvF,KAAKiiB,YAAcjiB,KAAK2hB,SAASouB,QAGjD,CAUA,WAAA1jB,CAAYjrB,EAAM0U,GACf,GAAI1U,EAAKpB,KAAKiiB,YAAa,CACxB,MAAMqiC,EACH,wJAEH,IAAIjzC,EAAQjQ,EAAKpB,KAAKiiB,YACtB5Q,EAAQS,OAAOT,GAAO5D,cACjB62C,EAAIppC,KAAK7J,IACXyE,EAAU1B,SAASpU,KAAKiiB,WAAY,gBAE1C,CACH,oBChIH,MAAMi6B,EAAU,EAAQ,OAOlBqI,EAAsB,CACzB9hD,IAAK,OAGLs7B,YAAa,gCAIbhgB,KAAM,OAINq+B,cAAc,EAOdC,YAAY,EAMZC,SAAU,kBAIVC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CAAC,OAAQ,UAAW,aAMvCxU,EAAgB,CACnBqc,mBAAoB,EACpBC,SAAU,EACVC,SAAU,IAGb/kD,EAAOC,QAAU,cAA8Bs8C,EAC5C,WAAAp8C,CAAYyF,EAAQuf,GACjB/kB,MAAMwF,EAAQuf,EAAQy/B,EACzB,CAGA,eAAO/oB,GACJ,OAAO+oB,CACV,CAEA,oBAAOpc,GACJ,OAAOA,CACV,CAMA,UAAAtoB,CAAWta,GACRxF,MAAM8f,WAAWta,GAGjBvF,KAAK2hB,SAAS8iC,SAAWxkC,SAASjgB,KAAK2hB,SAAS8iC,UAChDzkD,KAAK2hB,SAASgjC,cAAgB1kC,SAASjgB,KAAK2hB,SAASgjC,eACrD3kD,KAAK2hB,SAASijC,cAAgB3kC,SAASjgB,KAAK2hB,SAASijC,eACrD5kD,KAAK2hB,SAAS6iC,mBAAqBvkC,SAChCjgB,KAAK2hB,SAAS6iC,mBAEpB,CAcA,SAAApE,CAAUn2B,GACP,MAAMo2B,EAAW,GAAGrgD,KAAK8rB,OAAS9rB,KAAK8kB,OAAOlZ,QAAQ5L,KAAKiiB,aAE3D,IAAI/d,EAAS+lB,EAAQjqB,KAAKiiB,aAAegI,EAAQo2B,IAAa,CAAC,EAC/D,GAAqB,iBAAVn8C,EACR,IACGA,EAASyC,KAAKiE,MAAM1G,EACvB,CAAE,MAAO/C,GAET,CAGH,OAAO+C,CACV,CAcA,YAAAkkC,CAAa7iC,GACVA,EAAOvF,KAAKiiB,YAAc,IAC7B,CAEA,MAAApK,CAAOoS,GACJ,IAAI/lB,EAASlE,KAAKogD,UAAUn2B,GAC5B,GAAI/lB,EAAQ,CACT,GAAqB,iBAAVA,EACR,IACGA,EAASyC,KAAKiE,MAAM1G,EACvB,CAAE,MAAO/C,GAET,CAIH,OAAO+C,GAASA,EAAO2gD,UAAiB,EAC3C,CACG,MAAO,EAEb,CAQA,YAAAC,CAAaC,GACV,MAAMC,EAAcjlD,MAAM+kD,aAAaC,GAIvC,IAAI77C,EAAM87C,IAAchlD,KAAKiiB,YAI7B,GAHW,MAAP/Y,GAAsB,IAAPA,UACT87C,EAAYhlD,KAAKiiB,YAEvB,iBAAoB/Y,EACrB,IACG87C,EAAYhlD,KAAKiiB,YAActb,KAAKiE,MAAM1B,EAC7C,CAAE,MAAO7J,GAET,CAGH,OAAO2lD,CACV,oBCpLH,MAAM9I,EAAU,EAAQ,OAElB+I,EAAyB,CAC5BxiD,IAAK,UAGLs7B,YACG,qEAIHhgB,KAAM,iBAINq+B,cAAc,EAOdC,YAAY,EAMZC,SAAU,UAIV2E,aAAetyB,IACZ,MAAMhH,EAAYgH,EAAMhH,UACxB,OAAiB,MAAbA,GAGqB,cAAlBA,EAAUllB,GAAmB,EAGvC85C,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CACnB,UACA,WACA,YACA,MACA,UACA,SACA,UACA,MACA,UACA,QACA,QACA,SAOAxU,EAAgB,CACnBxZ,MAAO,GACPkV,WAAY,GACZlc,UAAW,GACX5e,KAAM,MACN6iB,MAAO,IAGVjsB,EAAOC,QAAU,cAAiCs8C,EAC/C,WAAAp8C,CAAYyF,EAAQuf,GACjB/kB,MAAMwF,EAAQuf,EAAQmgC,EACzB,CAGA,eAAOzpB,GACJ,OAAOypB,CACV,CAEA,oBAAO9c,GACJ,OAAOA,CACV,CAYA,YAAAC,CAAa7iC,UAEHA,EAAOvF,KAAKiiB,WACtB,CAWA,MAAApK,CAAOoS,EAASi7B,GAAc,EAAOC,GAAY,GAC9C,MAAMx9B,EAAY3nB,KAAK2nB,UAEjBy9B,EAAYC,IAEf,GAAK19B,GAA8B,aAAjBA,EAAUllB,IAErB,CACJ,MAAM6iD,EAAgB,CAAC,EAEvB,OADAA,EAAc39B,EAAU1F,YAAcojC,EAC/B19B,EAAU9P,OAAOytC,EAC3B,CALG,OAAOD,CAKV,EAKH,GAAgC,MAA5Bp7B,EAAQjqB,KAAKiiB,cAAwBijC,IAAgBC,EAEtD,OAAOC,EAASn7B,EAAQjqB,KAAKiiB,aACzB,GACwB,MAA5BgI,EAAQjqB,KAAKiiB,cACZijC,GACDC,EAEA,OAAOl7B,EAAQjqB,KAAKiiB,YAGvB,IAAK0F,EAAW,OAAO,EAEvB,MAAM49B,EAAYvlD,KAAKulD,YACvB,IAAKA,EAAW,OAAO,EAEvB,IAAInkD,EACD6oB,EAAQs7B,EAAU93B,iBAClBxD,EAAQs7B,EAAUtjC,aAClB,GACEvc,MAAMC,QAAQvE,KAAOA,EAAO,CAACA,IAI/BA,GACAA,EAAKQ,QACL5B,KAAK2hB,UACL3hB,KAAK2hB,SAASiK,OACd5rB,KAAK2hB,SAASiK,MAAMhS,OACpB5Z,KAAK2hB,SAASiK,MAAMhS,MAAMhY,SAE1B5B,KAAKwlD,aAAatxB,SAASl0B,KAAK2hB,SAASiK,OACzCxqB,EAAOA,EAAKuB,QAAQymB,GAASppB,KAAKwlD,aAAa1tC,QAAQsR,MAG1D,IAAIq8B,EAAa,GAGjB,OAAQ99B,EAAUllB,KACf,IAAK,YACFrB,EAAK4E,SAASsnB,IACXm4B,EAAWr+C,KAAKq3C,WAAW92B,EAAU9P,OAAOyV,IAAM,GAAG,IAExD,MACH,IAAK,SACFm4B,EAAarkD,EAAKtC,KAAKwuB,GAAMA,EAAE3F,EAAU1F,aAAe,IAI9D,IAAI/d,EAAS,EAGb,MAAMwhD,EAAc/9B,EAAUg+B,iBAG9B,OAAQ3lD,KAAK2hB,SAAS5Y,MACnB,IAAK,MACF,GAAI08C,EAAW7jD,OAAS,EAAG,CAGxB,MAAMgkD,EAAalI,KAAKmI,IAAI,GAAIH,GAIhC,IAAII,EAAM,EACVL,EAAWz/C,SAASkD,IACjB48C,GAAO58C,EAAM08C,GAAc,CAAC,IAG/B1hD,EAAS4hD,EAAMF,CAClB,CACA,MAEH,IAAK,UACF,GAAIH,EAAW7jD,OAAS,EAAG,CAGxB,MAAMgkD,EAAalI,KAAKmI,IAAI,GAAIH,GAIhC,IAAII,EAAM,EACVL,EAAWz/C,SAASkD,IACjB48C,GAAO58C,EAAM08C,GAAc,CAAC,IAI/B1hD,EAAS4hD,EAAMF,EAAaH,EAAW7jD,MAC1C,CACA,MAEH,IAAK,MACFsC,EAASw5C,KAAKqI,OAAON,IAAe,EACpC,MACH,IAAK,MACFvhD,EAASw5C,KAAKsI,OAAOP,IAAe,EACpC,MACH,IAAK,QACFvhD,EAASuhD,EAAW7jD,OAO1B,OAHAqoB,EAAQjqB,KAAKiiB,YAAc/d,EAGN,aAAjByjB,EAAUllB,IACJyB,EAEAkhD,EAASlhD,EAEtB,CAEA,SAAAqhD,GACG,OAAOvlD,KAAK8kB,OAAO8C,UAAU5nB,KAAK2hB,SAASgN,MAC9C,CAEA,aAAIhH,GACD,MAAMjc,EAAM1L,KAAKO,GAAGoL,WAAW3L,KAAK2hB,SAASmD,QAC7C,IAAKpZ,EAAK,OAAO,KAGjB,OADcA,EAAIkc,UAAU5nB,KAAK2hB,SAASgG,YACvB,IAGtB,CAEA,gBAAI69B,GAUD,OATuB,MAAnBxlD,KAAKimD,aACNjmD,KAAKimD,WAAajmD,KAAKO,GAAGyzB,iBAAiB,GAAGh0B,KAAKf,oBAE/Ce,KAAK2nB,WAAa3nB,KAAK2nB,UAAU7C,SAClC9kB,KAAKimD,WAAWhyB,WAAWj0B,KAAK2nB,UAAU7C,OAAOwF,UACjDtqB,KAAKimD,WAAW/xB,SAASl0B,KAAK2hB,SAASiK,SAItC5rB,KAAKimD,UACf,oBCrRH,MAAM/J,EAAU,EAAQ,OAElBgK,EAAuB,CAC1BzjD,IAAK,QAGLs7B,YAAa,kCAIbhgB,KAAM,eAINq+B,cAAc,EAOdC,YAAY,EAMZC,SAAU,mBAIVC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CAAC,OAAQ,UAAW,aAMvCxU,EAAgB,CACnBge,SAAU,EACVC,WAAY,GACZC,UAAW,EACXC,YAAa,GACb9B,mBAAoB,EACpB+B,iBAAiB,EACjBC,gBAAiB,IAGpB7mD,EAAOC,QAAU,cAA+Bs8C,EAC7C,WAAAp8C,CAAYyF,EAAQuf,GACjB/kB,MAAMwF,EAAQuf,EAAQohC,EAuBzB,CAGA,eAAO1qB,GACJ,OAAO0qB,CACV,CAEA,oBAAO/d,GACJ,OAAOA,CACV,CAMA,UAAAtoB,CAAWta,GACRxF,MAAM8f,WAAWta,GAGjBvF,KAAK2hB,SAASwkC,SAAWlmC,SAASjgB,KAAK2hB,SAASwkC,UAChDnmD,KAAK2hB,SAAS0kC,UAAYpmC,SAASjgB,KAAK2hB,SAAS0kC,WACjDrmD,KAAK2hB,SAASykC,WAAanmC,SAASjgB,KAAK2hB,SAASykC,YAClDpmD,KAAK2hB,SAAS2kC,YAAcrmC,SAASjgB,KAAK2hB,SAAS2kC,aACnDtmD,KAAK2hB,SAAS4kC,gBAAkBtmC,SAASjgB,KAAK2hB,SAAS4kC,iBACvDvmD,KAAK2hB,SAAS6iC,mBAAqBvkC,SAChCjgB,KAAK2hB,SAAS6iC,mBAEpB,CAUA,WAAAn4B,CAAYjrB,EAAM0U,GACf/V,MAAMssB,YAAYjrB,EAAM0U,EAC3B,oBCjIH,MAAMomC,EAAU,EAAQ,OAElBuK,EAAsB,CACzBhkD,IAAK,OAGLs7B,YAAa,aAIbhgB,KAAM,OAINq+B,cAAc,EAOdC,YAAY,EAMZC,SAAU,OAIVC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,QAKrBC,qBAAsB,CAAC,SAMpBxU,EAAgB,CAAC,EAEvBxoC,EAAOC,QAAU,cAA8Bs8C,EAC5C,WAAAp8C,CAAYyF,EAAQuf,GACjB/kB,MAAMwF,EAAQuf,EAAQ2hC,EACzB,CAGA,eAAOjrB,GACJ,OAAOirB,CACV,CAEA,oBAAOte,GACJ,OAAOA,CACV,CAQA,YAAAC,CAAa7iC,GAIb,oBChFH,MAAM22C,EAAU,EAAQ,OAOlBwK,EAAsB,CACzBjkD,IAAK,OAGLs7B,YACG,6EAIHhgB,KAAM,UAINq+B,aAAeztB,IACRA,EAAMhN,SAASglC,WAYtBtK,WAAa1tB,IACNA,EAAMhN,SAASglC,WAWtBrK,SAAU,cAIVC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CACnB,OACA,UACA,YAMHiK,UAAYj4B,KACLA,EAAMhN,SAASilC,WAQnBze,EAAgB,CACnBwe,WAAY,EAIZC,UAAW,EAIXr+C,QAAS,GASTwnC,QAAS,OACT8W,gBAAiB,IAGpBlnD,EAAOC,QAAU,cAA8Bs8C,EAC5C,WAAAp8C,CAAYyF,EAAQuf,GACjB/kB,MAAMwF,EAAQuf,EAAQ4hC,GAEtB1mD,KAAK8mD,iBAAmB,EAI3B,CAGA,eAAOtrB,GACJ,OAAOkrB,CACV,CAEA,oBAAOve,GACJ,OAAOA,CACV,CAYA,UAAAtoB,CAAWta,GACRxF,MAAM8f,WAAWta,GAGbvF,KAAK2hB,SAASpZ,SAAWvI,KAAK2hB,SAASpZ,QAAQ3G,OAAS,GACzD5B,KAAK2hB,SAASpZ,QAAQvC,SAASsuC,IAC5Bt0C,KAAKs/B,UAAUgV,EAAKA,EAAK,CAAC,QAAQ,IAIxCt0C,KAAK2hB,SAASglC,WAAa1mC,SAASjgB,KAAK2hB,SAASglC,YAClD3mD,KAAK2hB,SAASilC,UAAY3mC,SAASjgB,KAAK2hB,SAASilC,UACpD,CAaA,KAAAh/C,GACG,MAAM8D,EAAM3L,MAAM6H,QAOlB,OAJA8D,EAAIiW,SAASpZ,QAAQvC,SAASsuC,IAC3Bt0C,KAAK0/B,YAAY4U,EAAKA,EAAK,CAAC,QAAQ,IAGhC5oC,CACV,CAYA,YAAA08B,CAAa7iC,GAEV,GAAgC,GAA5BvF,KAAK2hB,SAASglC,WAAoB,CACnC,IAAII,EAAc,GAClB/mD,KAAK2hB,SAASklC,gBAAgB7gD,SAASkU,IACpCla,KAAK2hB,SAASpZ,QAAQvC,SAASsuC,IACxBA,EAAIr1C,IAAMib,EAAIzW,MACfsjD,EAAY3/C,KAAKktC,EACpB,GACD,IAEL/uC,EAAOvF,KAAKiiB,YAAc8kC,GAAe,EAC5C,MAES/mD,KAAK2hB,SAASouB,SAAoC,IAAzB/vC,KAAK2hB,SAASouB,UAC7CxqC,EAAOvF,KAAKiiB,YAAcjiB,KAAK2hB,SAASouB,QAE9C,CAUA,WAAA1jB,CAAYjrB,EAAM0U,GACf/V,MAAMssB,YAAYjrB,EAAM0U,EAC3B,CAOA,OAAAvN,GACG,OAAOvI,KAAK2hB,SAASpZ,QAAQzJ,KAAKw1C,IACxB,CACJr1C,GAAIq1C,EAAIr1C,GACRwE,KAAM6wC,EAAI7wC,KACVujD,IAAK1S,EAAI0S,IAAM1S,EAAI0S,IAAM,GACzBpnC,aAAc00B,EAAI10B,aAAe00B,EAAI10B,aAAe,MAG7D,CAEA,MAAA/H,CAAOoS,EAAS1hB,EAAU,CAAC,GACxB,IAAIW,EAAMlJ,KAAKogD,UAAUn2B,IAAY,GAErC,GAAkB,iBAAP/gB,EACR,IACGA,EAAMvC,KAAKiE,MAAM1B,EACpB,CAAE,MAAO7J,GAET,CAqBH,OAjBKqG,MAAMC,QAAQuD,KAAMA,EAAM,CAACA,IAEZlJ,KAAK2hB,SAASpZ,QAC9B5F,QAAQ2xC,GAAQprC,EAAIvG,QAAQsD,IAAOA,EAAEhH,IAAMgH,IAAMquC,EAAIr1C,KAAI2C,OAAS,IAClE9C,KAAKw1C,IACH,IAAI7wC,EAAO6wC,EAAI7wC,KACf,MAAMvB,EAAeqG,EAAQrG,cAAgB,KAGvC+kD,GAAW3S,EAAI10B,cAAgB,IAAIjd,QACrCvD,GAAMA,EAAEogC,eAAiBt9B,IAC3B,GAGF,OAFI+kD,IAASxjD,EAAOwjD,EAAQxjD,MAErBA,CAAI,IAGE2F,KAAK,KAC3B,oBCpQH,MAAM8yC,EAAU,EAAQ,OASlBgL,EAA0B,CAC7BzkD,IAAK,WAELs7B,YAAa,yBAIbhgB,KAAM,cAINq+B,cAAc,EAOdC,YAAY,EAMZC,SAAU,YAIVC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,WAAY,aAAc,QAK/CC,qBAAsB,CAAC,OAAQ,aAAc,YAK7CwK,gBA1DqB,KAgElBhf,EAAgB,CACnB4H,QAAS,GACTqX,oBAAqB,GAGxBznD,EAAOC,QAAU,cAA8Bs8C,EAC5C,WAAAp8C,CAAYyF,EAAQuf,GACjB/kB,MAAMwF,EAAQuf,EAAQoiC,EAUzB,CAGA,eAAO1rB,GACJ,OAAO0rB,CACV,CAEA,oBAAO/e,GACJ,OAAOA,CACV,CAYA,UAAAtoB,CAAWta,GACRxF,MAAM8f,WAAWta,GAEjBvF,KAAK2hB,SAASouB,QAAUxqC,EAAOoc,SAASouB,SAAW,GAGnD/vC,KAAK2hB,SAASylC,oBACX7hD,EAAOoc,SAASylC,oBAAsB,IACtCjf,EAAcif,oBAGjBpnD,KAAK2hB,SAASylC,oBAAsBnnC,SACjCjgB,KAAK2hB,SAASylC,qBAGbpnD,KAAK2hB,SAASylC,oBACXpnD,KAAK8kB,QACN9kB,KAAK8kB,OAAOwa,UAAUt/B,KAAK2hB,SAAU3hB,KAAK2hB,SAAU,CAAC,YACpD3hB,KAAK2hB,SAASouB,QAAUxqC,EAAOoc,SAASouB,SAAW,EAC7D,CAaA,KAAAnoC,GACG,MAAM8D,EAAM3L,MAAM6H,QAOlB,OALI5H,KAAK2hB,SAASylC,sBACXpnD,KAAK8kB,OACN9kB,KAAK8kB,OAAO4a,YAAYh0B,EAAIiW,SAAUjW,EAAIiW,SAAU,CAAC,YACnDjW,EAAIiW,SAASouB,QAAU/vC,KAAK2hB,SAASouB,SAEtCrkC,CACV,CAOA,kBAAIy7B,GACD,OAA4C,GAArCnnC,KAAK2hB,SAASylC,mBACxB,CAQA,YAAAhf,CAAa7iC,GACqB,MAA3BA,EAAOvF,KAAKiiB,cACuB,iBAAzBjiB,KAAK2hB,SAASouB,QACtBxqC,EAAOvF,KAAKiiB,YAAcjiB,KAAK2hB,SAASouB,QAExCxqC,EAAOvF,KAAKiiB,YAAc,GAGnC,CAUA,WAAAoK,CAAYjrB,EAAM0U,GACf/V,MAAMssB,YAAYjrB,EAAM0U,GAGrB1U,GACAA,EAAKpB,KAAKiiB,aACV7gB,EAAKpB,KAAKiiB,YAAYrgB,OAxLP,KA0LfkU,EAAU1B,SACPpU,KAAKiiB,WACL,4CAGT,oBCjMH,MAAMi6B,EAAU,EAAQ,OAElBmL,EAAwB,CAC3B5kD,IAAK,SAGLs7B,YAAa,2BAIbhgB,KAAM,UAINq+B,cAAc,EAOdC,YAAY,EAMZC,SAAU,SAIVC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CACnB,UACA,WACA,YACA,MACA,UACA,SACA,UACA,MACA,UACA,QACA,QACA,SAOAxU,EAAgB,CAEnB4H,QAAS,GACTuX,WAAY,OACZC,aAAc,OACdC,kBAAmB,EACnBC,aAAc,OACdC,cAAe,OACfC,WAAY,EACZC,gBAAiB,GACjBC,gBAAiB,IAGpB,IAAI/6B,EAAI,KAERntB,EAAOC,QAAU,cAAgCs8C,EAC9C,WAAAp8C,CAAYyF,EAAQuf,GACjB/kB,MAAMwF,EAAQuf,EAAQuiC,GAkBjBv6B,IACFA,EAAI9sB,KAAKO,GAAGsa,QAElB,CAGA,eAAO2gB,GACJ,OAAO6rB,CACV,CAEA,oBAAOlf,GACJ,OAAOA,CACV,CAEA,iBAAO2f,CAAWC,GAEf,OADIA,IAAOj7B,IAAGA,EAAIi7B,GACX,CACJ,CAAE9oD,GAAI,OAAQoS,MAAOyb,EAAE,SACvB,CACG7tB,GAAI,SACJoS,MAAOyb,EAAE,KACTowB,KAAM,IACN8K,SAAU,UAEb,CACG/oD,GAAI,MACJoS,MAAOyb,EAAE,KACTowB,KAAM,IACN8K,SAAU,UAEb,CACG/oD,GAAI,QACJoS,MAAOyb,EAAE,KACTowB,KAAM,IACN8K,SAAU,UAEb,CACG/oD,GAAI,aACJoS,MAAOyb,EAAE,cACTowB,KAAM,IACN8K,SAAU,UAEb,CACG/oD,GAAI,YACJoS,MAAOyb,EAAE,aACTowB,KAAM,IACN8K,SAAU,WAEb,CACG/oD,GAAI,UACJoS,MAAOyb,EAAE,KACTowB,KAAM,IACN8K,SAAU,WAGnB,CAEA,oBAAO/K,GACJ,MAAO,CACJ,CAAEh+C,GAAI,OAAQoS,MAAOyb,EAAE,SACvB,CACG7tB,GAAI,QACJoS,MAAOyb,EAAE,SACTowB,KAAM,KAET,CACGj+C,GAAI,SACJoS,MAAOyb,EAAE,UACTowB,KAAM,KAET,CACGj+C,GAAI,QACJoS,MAAOyb,EAAE,SACTowB,KAAM,KAGf,CAMA,UAAAr9B,CAAWta,GACRxF,MAAM8f,WAAWta,GAIjBvF,KAAK2hB,SAASgmC,WAAa1nC,SAASjgB,KAAK2hB,SAASgmC,WACrD,CAYA,YAAAvf,CAAa7iC,GAEmB,IAAzBvF,KAAK2hB,SAASouB,UACfxqC,EAAOvF,KAAKiiB,YAAcjiB,KAAK2hB,SAASouB,QAE9C,CAUA,WAAA1jB,CAAYjrB,EAAM0U,GAKf,GAJA/V,MAAMssB,YAAYjrB,EAAM0U,GAIK,MAAzB1U,EAAKpB,KAAKiiB,aAAgD,IAAzB7gB,EAAKpB,KAAKiiB,YAAmB,CAC/D,IAAI5Q,EAAQjQ,EAAKpB,KAAKiiB,YAGtB,GAAkC,QAA9BjiB,KAAK2hB,SAAS4lC,aACfl2C,EAAQ4O,SAAS5O,OACb,CACJ,MAAM42C,EAAShoC,SAASjgB,KAAK2hB,SAAS6lC,oBAAsB,EAC5Dn2C,EAAQotC,WAAWA,WAAWptC,GAAO1E,QAAQs7C,GAChD,CAUA,GARmBC,EAGJ72C,GAFJohC,OAAOlC,MAAMkO,WAAWyJ,KAAOzV,OAAO4P,SAAS6F,IAGvDpyC,EAAU1B,SAASpU,KAAKiiB,WAAY6K,EAAE,mBAKV,GAA5B9sB,KAAK2hB,SAASgmC,YACmB,MAAjC3nD,KAAK2hB,SAASimC,iBACd5nD,KAAK2hB,SAASimC,gBAAkBv2C,EACjC,CACC,MAAM82C,EAAar7B,EAAE,6BAA8B,CAChD9sB,KAAK2hB,SAASimC,kBAGjB9xC,EAAU1B,SAASpU,KAAKiiB,WAAYkmC,EACvC,CAGA,GAC+B,GAA5BnoD,KAAK2hB,SAASgmC,YACmB,MAAjC3nD,KAAK2hB,SAASkmC,iBACd7nD,KAAK2hB,SAASkmC,gBAAkBx2C,EACjC,CACC,MAAM82C,EAAar7B,EAAE,0BAA2B,CAC7C9sB,KAAK2hB,SAASkmC,kBAGjB/xC,EAAU1B,SAASpU,KAAKiiB,WAAYkmC,EACvC,CACH,CAhCqB,IAACD,CAiCzB,CAEA,MAAArwC,CAAOoS,GACJ,GACiC,MAA9BA,IAAUjqB,KAAKiiB,aACe,IAA7BgI,EAAQjqB,KAAKiiB,aAAiD,IAA5BgI,EAAQjqB,KAAKiiB,YAEhD,MAAO,GAEV,IAAI7gB,EAAO6oB,EAAQjqB,KAAKiiB,aAAe,EAEpB,iBAAR7gB,IACRA,EAAOA,EAAKwE,QAAQ,KAAM,KAIzB2qC,MAAMkO,WAAWr9C,MAAQA,EAAO,GAEpC,MAAMgnD,EAAapoD,KAAKF,YACpBgoD,aACAnlD,QAAQymB,GAASA,EAAKnqB,IAAMe,KAAK2hB,SAAS2lC,aAAY,GACpDzI,EACgC,QAAnC7+C,KAAK2hB,SAAS6lC,kBACTvnC,SAASjgB,KAAK2hB,SAAS6lC,mBACvB,EAER,IAAIa,EAAgBroD,KAAKF,YACrBm9C,gBACAt6C,QAAQymB,GAASA,EAAKnqB,IAAMe,KAAK2hB,SAAS+lC,gBAAe,GACzD9I,EAAc5+C,KAAKF,YACnBm9C,gBACAt6C,QAAQymB,GAASA,EAAKnqB,IAAMe,KAAK2hB,SAAS4lC,eAAc,GACxDp2C,EAAS,GACTm3C,EAAU,GAEd,GAAIF,GAAcA,EAAWlL,KAC1B,OAAQkL,EAAWJ,UAChB,IAAK,SACF72C,EAASi3C,EAAWlL,KACpB,MACH,IAAK,UACFoL,EAAUF,EAAWlL,KAS9B,GAJA0B,EAAcA,EAAY1B,MAAQ,GAClCmL,EAAgBA,EAAcnL,MAAQ,GAGJ,aAA9Bl9C,KAAK2hB,SAAS8lC,aAA6B,CAC5C,MAAMc,EAAQ7K,KAAKmI,IAAI,GAAIhH,GAC3Bz9C,EAAOs8C,KAAKE,MAAMx8C,EAAOmnD,GAASA,CACrC,CASA,MAAO,GAAGp3C,KAPKnR,KAAKwoD,aAAapnD,EAAM,CACpCqnD,eAAgBJ,EAChBK,UAAW,EACXC,iBAAkB/J,EAClB8G,YAAa7G,OAGcyJ,GACjC,CAEA,YAAAE,CAAapnD,EAAMmH,EAAU,CAAC,GAC3B,GAAa,KAATnH,GAAuB,MAARA,EAAc,OAAOA,EAGxC,MAAMwnD,GADNxnD,EAAOq9C,WAAWr9C,IACU,EAAI,IAAM,GAGhCynD,GAFNznD,EAAOs8C,KAAKoL,IAAI1nD,IAEKmG,WACfwhD,EAAaF,EAAQnlC,MAAM,KAAK,GAChCslC,EAAaH,EAAQnlC,MAAM,KAAK,GAEtC,IAAIulC,EAAe,GAGnB,GAAI1gD,EAAQkgD,eAAgB,CACzB,MAAMlqB,EAAO,EACb,IAAIr4B,EAAI6iD,EAAWnnD,OAEnB,GACGsE,GAAKq4B,EAKL0qB,EAAe,GAHZ/iD,EAAI,EACC6iD,EAAWG,OAAOhjD,EAAGq4B,GACrBwqB,EAAWG,OAAO,EAAG3qB,EAAOr4B,KAEjC+iD,EAAe1gD,EAAQkgD,eAAiBQ,EAAe,WAEpD/iD,EAAI,EAChB,MACG+iD,EAAeF,EAIlB,IAAI7kD,EAAS,GAAG0kD,IAAeK,IAG/B,GAAID,GAAczgD,EAAQogD,kBAAoBpgD,EAAQm9C,YAAa,CAChE,MAAMyD,EAAa/nD,EAAKuL,QAAQpE,EAAQm9C,aAAahiC,MAAM,KAAK,GAChExf,GAAU,GAAGqE,EAAQogD,mBAAmBQ,GAC3C,CAEA,OAAOjlD,CACV,CAEA,cAAAyhD,GACG,MAAuC,QAAnC3lD,KAAK2hB,SAAS6lC,kBACRvnC,SAASjgB,KAAK2hB,SAAS6lC,mBAEvB,CAEb,oBC9XH,MAAMtL,EAAU,EAAQ,OAIlBkN,EAAwB,CAC3B3mD,IAAK,SAGLs7B,YAAa,qBAIbhgB,KAAM,OAINq+B,cAAc,EAOdC,YAAY,EAMZC,SAAU,mBAIVC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CAAC,OAAQ,UAAW,YAK1CwK,gBAtDqB,KA2DlBhf,EAAgB,CACnB4H,QAAS,GACTqX,oBAAqB,GAGxBznD,EAAOC,QAAU,cAAgCs8C,EAC9C,WAAAp8C,CAAYyF,EAAQuf,GACjB/kB,MAAMwF,EAAQuf,EAAQskC,EAUzB,CAGA,eAAO5tB,GACJ,OAAO4tB,CACV,CAEA,oBAAOjhB,GACJ,OAAOA,CACV,CAYA,UAAAtoB,CAAWta,GACRxF,MAAM8f,WAAWta,GAGjBvF,KAAK2hB,SAASouB,QAAUxqC,EAAOoc,SAASouB,SAAW5H,EAAc4H,QACjE/vC,KAAK2hB,SAASylC,oBACX7hD,EAAOoc,SAASylC,oBAAsB,IACtCjf,EAAcif,oBAGjBpnD,KAAK2hB,SAASylC,oBAAsBnnC,SACjCjgB,KAAK2hB,SAASylC,qBAGbpnD,KAAK2hB,SAASylC,oBACfpnD,KAAKs/B,UAAUt/B,KAAK2hB,SAAU3hB,KAAK2hB,SAAU,CAAC,YAC1C3hB,KAAK2hB,SAASouB,QAAUxqC,EAAOoc,SAASouB,SAAW,EAC7D,CAaA,KAAAnoC,GACG,MAAM8D,EAAM3L,MAAM6H,QAMlB,OAJI5H,KAAK2hB,SAASylC,oBACfpnD,KAAK0/B,YAAYh0B,EAAIiW,SAAUjW,EAAIiW,SAAU,CAAC,YAC1CjW,EAAIiW,SAASouB,QAAU/vC,KAAK2hB,SAASouB,QAErCrkC,CACV,CAYA,YAAA08B,CAAa7iC,GAELA,EAAOvF,KAAKiiB,aAEVjiB,KAAK2hB,SAASouB,UACX/vC,KAAK2hB,SAASouB,QAAQvoC,QAAQ,WAAa,EAC5CjC,EAAOvF,KAAKiiB,YAAcjiB,KAAKO,GAAGoB,OAElC4D,EAAOvF,KAAKiiB,YAAcjiB,KAAK2hB,SAASouB,QAIpD,CAUA,WAAA1jB,CAAYjrB,EAAM0U,GAGf,GAFA/V,MAAMssB,YAAYjrB,EAAM0U,GAEpB1U,IAAOpB,KAAKiiB,aAAargB,OA5KX,IA4KqC,CACpD,MAAMkrB,EAAI9sB,KAAKO,GAAGsa,QAClB/E,EAAU1B,SACPpU,KAAKiiB,WACL6K,EAAE,2CAA4C,CAhLlC,MAkLlB,CACH,CAOA,kBAAIqa,GACD,OAA4C,GAArCnnC,KAAK2hB,SAASylC,mBACxB,kEC9LH,MAAMlL,QAAU,oBAAQ,OAExB,SAASpvB,EAAErqB,EAAK6C,GAEb,OAAOA,CACV,CAEA,MAAM+jD,2BAA6B,CAChC5mD,IAAK,cAGLs7B,YAAa,eAIbhgB,KAAM,WAINq+B,cAAc,EAOdC,YAAY,EAMZC,SAAU,eAIVC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CAAC,OAAQ,aAAc,aAO1CxU,cAAgB,CACnBmhB,YAAa,IAoBhB,SAASC,kBAAkBzkC,OAAQ0kC,cAAev/B,SAC/C,IAAKu/B,cAAe,OAEpB,MAAMC,YAAc,aACdC,oBAAsBF,cAAcl8C,MAAMm8C,aA8BhD,OA7BAC,oBAAoB1jD,SAAS21B,UAC1B,MAAM1Z,WAAa0Z,QAAQ/1B,QAAQ,SAAU,IAC7Ckf,OAAOwF,SAAStkB,SAAS2oB,QACtB,GAAIA,MAAM1M,YAAcA,WACrB,GAAiB,aAAb0M,MAAMlsB,IAAoB,CAE3B,MAAMknD,EAAeh7B,MAAM9W,OAAOoS,UAAY,EAC9Cu/B,cAAgBA,cAAc5jD,QAAQ+1B,QAASguB,EAClD,MAAO,GAAiB,aAAbh7B,MAAMlsB,IAAoB,CAElC,MAAM08C,OAAS,IAAIxwB,MAAM9W,OAAOoS,UAAY,KAC5Cu/B,cAAgBA,cAAc5jD,QAAQ+1B,QAAS2jB,KAAKH,QACvD,MACGqK,cADqB,QAAb76B,MAAMlsB,IACE+mD,cAAc5jD,QAC3B+1B,QACA1R,QAAQhI,YACH0M,MAAMk0B,YAAY54B,QAAQhI,aAC1B,IAGQunC,cAAc5jD,QAC3B+1B,QACA1R,QAAQhI,YAAc0M,MAAM9W,OAAOoS,SAAW,GAGvD,GACD,IAGEu/B,aACV,CASA,SAASI,yBAAyBrpD,EAAIipD,GACnC,MACMK,EAAwBL,EAAcl8C,MADtB,gBAEtB,GAAIu8C,EAAuB,CACxB,MAAMC,EAAcC,qBACpBF,EAAsB7jD,SAAS21B,IAC5B,MAAMquB,EAAgBruB,EAAQjY,MAAM,SAC9BumC,EACHD,EAAcpoD,OAAS,GAAyB,IAApBooD,EAAc,GACvCE,EAAeF,EAAc,GAC7BG,EAAmBH,EAAc,GAAGtmC,MAAM,KAChD,IAAI0mC,GAAU,EACd,IAAK,IAAIlkD,EAAI,EAAGA,EAAI4jD,EAAYloD,OAAQsE,IAAK,CAC1C,IAAImkD,EAAmB1uB,EACvB,GAAIuuB,GAAgBJ,EAAY5jD,GAAGjH,GAAI,CACpC,GAAIkrD,EAAiBvoD,QAAUkoD,EAAY5jD,GAAGokD,eAAgB,CAC3D,OAAQJ,GACL,IAAK,OACFG,EAAmBE,QAChBJ,EAAiB,GACjBA,EAAiB,IAEpB,MACH,IAAK,QACFE,EAAmBG,SAChBL,EAAiB,GACjBA,EAAiB,IAEpB,MACH,IAAK,MACFE,EAAmBI,OAChBN,EAAiB,GACjBA,EAAiB,GACjBA,EAAiB,IAEpB,MACH,IAAK,OACFE,EAAmBK,QAAQP,EAAiB,IAC5C,MACH,IAAK,WACFE,EAAmBM,YAAYR,EAAiB,IAChD,MACH,IAAK,YACFE,EAAmBO,aAAaT,EAAiB,IACjD,MACH,IAAK,SACFE,EAAmBQ,UAAUV,EAAiB,IAC9C,MACH,IAAK,eACFE,EAAmBS,iBAChBX,EAAiB,GACjBA,EAAiB,GAAGY,WACpBZ,EAAiB,GAAGY,YAEvB,MACH,IAAK,eACFV,EAAmBW,gBAChBb,EAAiB,GACjBA,EAAiB,GAAGY,YAEvB,MACH,IAAK,UACFV,EAAmBY,WAChBd,EAAiB,GACjBA,EAAiB,GAAGY,WACpBZ,EAAiB,GAAGY,YAEvB,MACH,IAAK,QACFV,EAAmBa,SAASf,EAAiB,IAC7C,MACH,IAAK,QACFE,EAAmBc,SAAShB,EAAiB,IAC7C,MACH,IAAK,aACFE,EAAmBe,cAAcjB,EAAiB,IAClD,MACH,IAAK,SACFE,EAAmBgB,UAAUlB,EAAiB,IAC9C,MACH,IAAK,gBACFE,EAAmBiB,iBAChBnB,EAAiB,IAEpB,MACH,IAAK,uBACEF,IACDtuB,GAAoB,KAEvB0uB,EAAmBkB,qBAChBhrD,EACA4pD,EAAiB,IAEpB,MACH,IAAK,yBACEF,IACDtuB,GAAoB,KAEvB0uB,EAAmBmB,uBAChBjrD,EACA4pD,EAAiB,IAEpB,MACH,IAAK,aACFE,EAAmBoB,cAChBtB,EAAiB,GACjBA,EAAiB,GAAGY,YAW7B,OALAX,GAAU,OACVZ,EAAgBA,EAAc5jD,QAC3B+1B,EACA0uB,GAGN,CACGA,EAAmBH,EAAe,kBAClCV,EAAgBA,EAAc5jD,QAC3B+1B,EACA0uB,EAGT,CACH,IAEN,CACA,OAAOb,CACV,CAEA,SAASO,qBA0GN,MAzGqB,CAClB,CACG9qD,GAAI,OACJoS,MAAO,yBACPtI,KAAM,WACNuhD,eAAgB,GAEnB,CACGrrD,GAAI,QACJoS,MAAO,0BACPtI,KAAM,WACNuhD,eAAgB,GAEnB,CACGrrD,GAAI,MACJoS,MAAO,2BACPtI,KAAM,WACNuhD,eAAgB,GAEnB,CACGrrD,GAAI,OACJoS,MAAO,sBACPtI,KAAM,WACNuhD,eAAgB,GAEnB,CACGrrD,GAAI,WACJoS,MAAO,0BACPtI,KAAM,WACNuhD,eAAgB,GAEnB,CACGrrD,GAAI,YACJoS,MAAO,2BACPtI,KAAM,WACNuhD,eAAgB,GAEnB,CACGrrD,GAAI,SACJoS,MAAO,wBACPtI,KAAM,WACNuhD,eAAgB,GAEnB,CACGrrD,GAAI,eACJoS,MAAO,kDACPtI,KAAM,WACNuhD,eAAgB,GAEnB,CACGrrD,GAAI,eACJoS,MAAO,mCACPtI,KAAM,WACNuhD,eAAgB,GAEnB,CACGrrD,GAAI,UACJoS,MAAO,sDACPtI,KAAM,WACNuhD,eAAgB,GAEnB,CACGrrD,GAAI,QACJoS,MAAO,uBACPtI,KAAM,WACNuhD,eAAgB,GAEnB,CACGrrD,GAAI,QACJoS,MAAO,uBACPtI,KAAM,WACNuhD,eAAgB,GAEnB,CACGrrD,GAAI,aACJoS,MAAO,4BACPtI,KAAM,WACNuhD,eAAgB,GAEnB,CAAErrD,GAAI,SAAUoS,MAAO,YAAatI,KAAM,WAAYuhD,eAAgB,GACtE,CACGrrD,GAAI,gBACJoS,MAAO,2CACPtI,KAAM,WACNuhD,eAAgB,GAEnB,CACGrrD,GAAI,uBACJoS,MAAO,sCACPtI,KAAM,WACNuhD,eAAgB,GAEnB,CACGrrD,GAAI,yBACJoS,MAAO,wCACPtI,KAAM,WACNuhD,eAAgB,GAEnB,CACGrrD,GAAI,aACJoS,MAAO,2CACPtI,KAAM,WACNuhD,eAAgB,GAIzB,CAEA,SAASC,QAAQmB,EAAQC,GACtB,OAAOD,EAAOjzB,UAAU,EAAGxY,SAAS0rC,GACvC,CAEA,SAASnB,SAASkB,EAAQE,GACvB,MAAMC,EAAaC,cAAcJ,GAAQjzB,UAAU,EAAGxY,SAAS2rC,IAC/D,OAAOE,cAAcD,EACxB,CAEA,SAASC,cAAcJ,GACpB,OAAOA,EAAOhoC,MAAM,KAAKqoC,UAAU3iD,KAAK,IAC3C,CAEA,SAASqhD,OAAOiB,EAAQM,EAAepqD,GACpC,OAAI8pD,EAAO9pD,OAASoqD,EAAsB,qBACnCN,EAAOjzB,UACXxY,SAAS+rC,GACT/rC,SAAS+rC,GAAiB/rC,SAASre,GAEzC,CAEA,SAAS8oD,QAAQgB,GACd,OAAOA,EAAOxiB,MACjB,CAEA,SAASyhB,YAAYe,GAClB,OAAOA,EAAOX,UACjB,CAEA,SAASH,aAAac,GACnB,OAAOA,EAAOO,WACjB,CAEA,SAASpB,UAAUa,GAChB,OAAOA,EAAO9pD,MACjB,CAEA,SAASkpD,iBAAiBY,EAAQQ,EAAQC,GACvC,OAAOT,EAAO9lD,QAAQsmD,EAAQC,EACjC,CAEA,SAASnB,gBAAgBU,EAAQQ,GAC9B,MAAME,EAAgBV,EAAOp+C,MAAM4+C,GACnC,OAAIxmD,MAAMC,QAAQymD,GACRA,EAAc,GAEjBA,CACV,CAEA,SAASnB,WAAWS,EAAQW,EAAaC,GACtC,OAAOZ,EAAO9lD,QAAQymD,EAAaC,EACtC,CAEA,SAASpB,SAASQ,GACf,OAAOA,EAAOj+C,aACjB,CAEA,SAAS09C,SAASO,GACf,OAAOA,EAAOa,aACjB,CAEA,SAASnB,cAAcM,GACpB,OAAOA,EACHj+C,cACAiW,MAAM,KACN5kB,KAAK21B,GAAMA,EAAE+3B,OAAO,GAAGD,cAAgB93B,EAAEgE,UAAU,KACnDrvB,KAAK,IACZ,CAEA,SAASiiD,UAAUtF,GAChB,OAAOrI,KAAKE,MAAMF,KAAK+O,UAAY1G,EAAM,GAC5C,CAEA,SAASuF,iBAAiBhzC,GACvB,MAAMozC,EAASpzC,EAAO4wB,KAAK,KAAK3hC,WAEhC,IAAImlD,EACDC,EACAC,EACA37B,EACA47B,EACAC,EACAC,EACAC,EACAC,EACA/mD,EACAgnD,EACAC,EAKH,GAAyB,IAArBltC,SAASyrC,GACV,MAAO,OAuEV,IAnEAgB,EAAQ,CACL,GACA,MACA,MACA,QACA,OACA,OACA,MACA,QACA,QACA,OACA,MACA,SACA,SACA,WACA,WACA,UACA,UACA,YACA,WACA,YAIHC,EAAO,CACJ,GACA,GACA,SACA,SACA,QACA,QACA,QACA,UACA,SACA,UAIHC,EAAS,CACN,GACA,WACA,UACA,UACA,WACA,cACA,cACA,aACA,aACA,YACA,YACA,YACA,cACA,eACA,eACA,sBACA,gBACA,eACA,mBACA,gBACA,iBACA,eACA,cAIH37B,EAAQy6B,EAAO9pD,OACfkrD,EAAS,GACF77B,EAAQ,GACZ47B,EAAM57B,EACN67B,EAAO1lD,KAAKskD,EAAO5lD,MAAOmrB,EAAQysB,KAAKqI,IAAI,EAAG90B,EAAQ,GAAK47B,IAK9D,GADAE,EAAYD,EAAOlrD,OACfmrD,EAAYH,EAAOhrD,OACpB,MAAO,GAKV,IADAurD,EAAQ,GACHjnD,EAAI,EAAGA,EAAI6mD,EAAW7mD,IACxB8mD,EAAQ/sC,SAAS6sC,EAAO5mD,IAEpB8mD,IAEDC,EAAOH,EAAO5mD,GAAGwd,MAAM,IAAIqoC,UAAUjtD,IAAI2/C,YAGzB,IAAZwO,EAAK,KACNA,EAAK,IAAM,KAITC,EAAON,EAAO1mD,KAChBinD,EAAM/lD,KAAK8lD,IAITA,EAAOR,EAAMO,EAAK,MACpBE,EAAM/lD,KAAK8lD,IAITA,EAAOP,EAAKM,EAAK,MACnBE,EAAM/lD,KAAK8lD,IAIVD,EAAK,IAAMA,EAAK,MAEbA,EAAK,KAAQ/mD,GAAK6mD,IACnBI,EAAM/lD,KAvHN,KA4HD8lD,EAAOR,EAAMO,EAAK,MACpBE,EAAM/lD,KAAK8lD,EAAO,aAK3B,OAAOC,EAAMpB,UAAU3iD,KAAK,IAC/B,CAEA,SAASmiD,qBAAqBhrD,EAAI0X,GAK/B,OAAO1X,EAAGqZ,MAAM5B,aAAaC,EAAM,CAChCJ,OAAQ,OACRM,WAAY5X,EAAG6E,QAAQnD,YAE7B,CAEA,SAASupD,uBAAuBjrD,EAAI0X,GAKjC,OAAO1X,EAAGqZ,MAAM5B,aAAaC,EAAM,CAChCJ,OAAQ,OACRM,WAAY5X,EAAG6E,QAAQnD,YAE7B,CAEA,SAASwpD,cAAcxzC,EAAMJ,GAE1B,OADW,IAAIE,KAAKE,GACV1Q,SAASsQ,EACtB,CAEAlY,OAAOC,QAAU,cAAqCs8C,QACnD,WAAAp8C,CAAYyF,EAAQuf,GACjB/kB,MAAMwF,EAAQuf,EAAQukC,2BAazB,CAGA,eAAO7tB,GACJ,OAAO6tB,0BACV,CAEA,oBAAOlhB,GACJ,OAAOA,aACV,CAEA,yBAAO4hB,GACJ,OAAOA,oBACV,CAYA,YAAA3hB,CAAa7iC,GAELA,EAAOvF,KAAKiiB,WAIpB,CAUA,WAAAoK,CAAYjrB,EAAM0U,GAKf,OAJY/V,MAAM+X,SAKrB,CAOA,kBAAIqvB,GAED,OAAO,CACV,CAEA,MAAAtvB,CAAOoS,GACJ,IACG,IAAKjqB,KAAK2hB,SAAS2nC,YAAa,MAAO,GAEvC,IAAI8D,EAAgBptD,KAAK2hB,SAAS2nC,YAQlC,OALA8D,EAAgB7D,kBAAkBvpD,KAAK8kB,OAAQsoC,EAAenjC,GAG9DmjC,EAAgBxD,yBAAyB5pD,KAAKO,GAAI6sD,GAE3CA,CACV,CAAE,MAAOjsD,GACN,MAAO,EACV,CACH,oBClsBH,MAAMksD,EAAqB,EAAQ,OAO7BC,EAAsB,CACzB7qD,IAAK,OAGLs7B,YACG,2GAIHhgB,KAAM,UAINq+B,cAAc,EAOdC,YAAY,EAMZC,SAAU,YAIVC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CAAC,OAAQ,aAAc,aAM1CxU,EAAgB,CACnB5/B,QAAS,IAGZ5I,EAAOC,QAAU,cAA8BytD,EAC5C,WAAAvtD,CAAYyF,EAAQuf,GACjB/kB,MAAMwF,EAAQuf,EAAQwoC,EACzB,CAGA,eAAO9xB,GACJ,OAAO8xB,CACV,CAEA,oBAAOnlB,GACJ,OAAOA,CACV,CAYA,UAAAtoB,CAAWta,GACRxF,MAAM8f,WAAWta,GAGbvF,KAAK2hB,SAASpZ,SAAWvI,KAAK2hB,SAASpZ,QAAQ3G,OAAS,GACzD5B,KAAK2hB,SAASpZ,QAAQvC,SAASsuC,IAC5Bt0C,KAAKs/B,UAAUgV,EAAKA,EAAK,CAAC,QAAQ,GAG3C,CAaA,KAAA1sC,GACG,MAAM8D,EAAM3L,MAAM6H,QASlB,OANI8D,EAAIiW,SAASpZ,SAAWmD,EAAIiW,SAASpZ,QAAQ3G,OAAS,GACvD8J,EAAIiW,SAASpZ,QAAQvC,SAASsuC,IAC3Bt0C,KAAK0/B,YAAY4U,EAAKA,EAAK,CAAC,QAAQ,IAInC5oC,CACV,CAYA,YAAA08B,CAAa7iC,GAAS,CAUtB,WAAA8mB,CAAYjrB,EAAM0U,GACf/V,MAAMssB,YAAYjrB,EAAM0U,EAC3B,oBClJH,MAAMy3C,EAAiB,EAAQ,OAOzBC,EAAsB,CACzB/qD,IAAK,OAGLs7B,YAAa,yBAIbhgB,KAAM,SAINq+B,cAAc,EAOdC,WAAa1tB,IACNA,EAAMhN,SAASglC,WAWtBrK,SAAU,OAIVC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CAAC,OAAQ,UAAW,YAK1C8Q,kBAAmB,wCAMhBtlB,EAAgB,CACnBulB,SAAU,EACV/G,WAAY,EACZgH,cAAe,EACfC,mBAAoB,EACpBC,eAAgB,GAGnBluD,EAAOC,QAAU,cAA8B2tD,EAC5C,WAAAztD,CAAYyF,EAAQuf,GACjB/kB,MAAMwF,EAAQuf,EAAQ0oC,GAEtBxtD,KAAK8tD,QAAS,CAMjB,CAGA,eAAOtyB,GACJ,OAAOgyB,CACV,CAEA,oBAAOrlB,GACJ,OAAOA,CACV,CAMA,UAAAtoB,CAAWta,GACRxF,MAAM8f,WAAWta,GAEjBvF,KAAK2hB,SAAS+rC,SAAWztC,SAASjgB,KAAK2hB,SAAS+rC,UAChD1tD,KAAK2hB,SAASglC,WAAa1mC,SAASjgB,KAAK2hB,SAASglC,YAClD3mD,KAAK2hB,SAASgsC,cAAgB1tC,SAASjgB,KAAK2hB,SAASgsC,eACrD3tD,KAAK2hB,SAASisC,mBAAqB3tC,SAChCjgB,KAAK2hB,SAASisC,oBAEjB5tD,KAAK2hB,SAASksC,eAAiB5tC,SAASjgB,KAAK2hB,SAASksC,eACzD,CAMA,MAAAh2C,CAAOoS,GACJ,IAAI/gB,EAAMlJ,KAAKogD,UAAUn2B,IAAY,GAKrC,OAHI/gB,IAAQxD,MAAMC,QAAQuD,KAAMA,EAAM,CAACA,IAClCA,IAAKA,EAAM,IAETA,EAAIpK,KAAKmH,GAAMA,EAAEpD,UAAYoD,IAAGmD,KAAK,KAC/C,oBC1HH,MAAM2kD,EAAe,EAAQ,OAOvBC,EAAuB,CAC1BvrD,IAAK,cACLsb,KAAM,QAGHkwC,EAA8B,CACjCllD,KAAM,OAINmlD,YAAa,EAMbC,UAAW,EAKXC,SAAU,GAObzuD,EAAOC,QAAU,cAA+BmuD,EAC7C,WAAAjuD,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MAAMwF,EAAQkf,EAAa1c,EAAQogC,GAAiB6lB,GAiBpDhuD,KAAK+H,OAAS,IAMjB,CAEA,aAAOioC,GACJ,OAAOge,CACV,CAEA,oBAAO7lB,GACJ,OAAO8lB,CACV,CAUA,KAAArmD,GACG,IAAI8D,EAAM3L,MAAM6H,QAoBhB,OAlBA8D,EAAIE,KAAO5L,KAAK4L,KAChBF,EAAI0B,MAAQpN,KAAKoN,MAEjB1B,EAAI2iD,QAAUruD,KAAKquD,QAEnB3iD,EAAI4iD,SAAWtuD,KAAKsuD,SAEpB5iD,EAAIwiD,YAAcluD,KAAKkuD,YAGG,SAAtBluD,KAAK2hB,SAAS5Y,OAAiB2C,EAAIqS,KAAO,SAGzC/d,KAAKwD,OAAuB,WAAdxD,KAAKwD,QAAoBkI,EAAIlI,MAAQkI,EAAIE,MAG5DF,EAAImT,SAAW7e,KAAKkf,QAAU,IAAIpgB,KAAK2b,GAAMA,EAAExb,KAExCyM,CACV,CAQA,UAAAmU,CAAWta,GACRxF,MAAM8f,WAAWta,GAEjB,MAAMgpD,EAAKN,EAEXjuD,KAAKoN,MACF7H,EAAO6H,QAAUpN,KAAK4L,MAAQ5L,KAAKwD,OAAO4C,WAAW,IAAK,KAGjC,SAAxBb,EAAOoc,SAAS5Y,OAAiB/I,KAAK+d,KAAO,SAG5C/d,KAAKwD,OAAuB,WAAdxD,KAAKwD,QAAoBxD,KAAKwD,MAAQxD,KAAK4L,MAG9D5L,KAAKquD,QAAU9oD,EAAO8oD,SACjBruD,KAAKquD,SAAWruD,KAAKykB,cACvBzkB,KAAKquD,QAAUruD,KAAKykB,YAAYxlB,IAGnCe,KAAKsuD,SAAW/oD,EAAO+oD,UAAY,OAInCtuD,KAAKkuD,YAAc3oD,EAAO2oD,aAAe,EAMzCluD,KAAK2hB,SAASwsC,UAAYluC,SACvB1a,EAAOoc,SAASwsC,WAAaI,EAAGJ,WAMnCnuD,KAAK2hB,SAASysC,SAAWnuC,SACtB1a,EAAOoc,SAASysC,UAAYG,EAAGH,UAQlC,IAAIhuC,EAAQ,IACX7a,EAAOsZ,SAAW,IAAI7Y,SAAS/G,IAC7B,IAAIib,EAAMla,KAAKO,GAAGue,eAAe7f,GAC7Bib,EACDkG,EAAMhZ,KAAKpH,KAAK+e,QAAQ7E,IAExBla,KAAKuB,KACF,UACA,OAAOvB,KAAKykB,YAAY7Y,SAAS5L,KAAKykB,YAAYxlB,aAAae,KAAK4L,SAAS5L,KAAKf,kCAAkCA,KACpH,CACG+f,MAAOhf,KAAKykB,YAAYxlB,GACxBggB,OAAQjf,KAAKf,GACbuvD,cAAevvD,GAGxB,IAEHe,KAAKkf,OAASkB,CAOjB,CAWA,OAAA1Y,GACG,OAAOlG,QAAQ9B,UACX2H,MAAK,KAKH,IAAIonD,EAAiB,GACjBC,EAAW1uD,KAAKogB,QAQpB,OAPApgB,KAAKkf,OAAS,GAIdwvC,EAAS1oD,SAASyU,IACfg0C,EAAernD,KAAKqT,EAAE/S,UAAU,IAE5BlG,QAAQsY,IAAI20C,EAAe,IAEpCpnD,MAAK,KACUrH,KAAK+H,QAAU/H,KAAKykB,aAEnBkqC,WAAW3uD,QAE3BqH,MAAK,IACItH,MAAM2H,WAEtB,CAQA,IAAAC,GACG,OAAOnG,QAAQ9B,UACX2H,MAAK,IAEItH,MAAM4H,SAEfN,MAAK,KAEUrH,KAAK+H,QAAU/H,KAAKykB,aAEnBmqC,WAAW5uD,QAE3BqH,MAAK,KAEH,GAAIrH,KAAKkuD,YACN,OAAOluD,KAAKykB,YAAYoqC,eAAe7uD,KAC1C,IAEFqH,MAAK,IACIrH,MAEhB,CAQA,eAAA8uD,GAKG,OAJAztD,QAAQqF,KACL,qEACA1G,MAEIA,IACV,CAiBA,KAAAogB,CAAMzd,EAAS,MAAM,GAAMuf,GAAO,GAwB/B,OApBIvf,GAAUuf,EAaFliB,KAAKykB,YAAYtC,YAAYniB,KAAM,SAAU2C,GAI7C3C,KAAKkf,OAAOvc,OAAOA,EAIlC,CAWA,UAAAisD,CAAWG,GAER,OADiB/uD,KAAKogB,OAAOhhB,GAAMA,EAAEH,KAAO8vD,EAAK9vD,KAAI2C,OAAS,EAQvDJ,QAAQ9B,WALZM,KAAKkf,OAAO9X,KAAK2nD,GACV/uD,KAAK2H,OAKlB,CAaA,OAAAoX,CAAQxZ,GAELA,EAAO9C,IAAMurD,EAAqBvrD,IAKlC,IAAIssD,EAAO/uD,KAAKykB,YAAYD,QAAQjf,EAAQvF,KAAKykB,YAAa,MAE9D,OADAsqC,EAAKhnD,OAAS/H,KACP+uD,CACV,CAWA,UAAAJ,CAAWI,GACR,IAAIvoB,EAAUxmC,KAAKkf,OAAOtd,OAG1B,OAFA5B,KAAKkf,OAASlf,KAAKogB,OAAO3F,GAAMA,EAAExb,IAAM8vD,EAAK9vD,KAEzCe,KAAKkf,OAAOtd,OAAS4kC,EACfxmC,KAAK2H,OAIRnG,QAAQ9B,SAClB,CAEA,UAAAsvD,CAAWtjD,GAOR,MALyB,SAArBA,EAAIiW,SAAS5Y,KACd2C,EAAIqS,KAAO,QAEXrS,EAAIqS,KAAOiwC,EAAqBjwC,KAE5BrS,CACV,CAcA,KAAAiqB,CAAMs5B,EAAWlnD,GAEd,GAAiB,MAAbknD,EAAmB,CAEpBA,EAAY,CAAC,EAEb,IAAIC,EAAcrnB,IACVonB,EAAUpnB,EAAS5oC,MACrBgwD,EAAUpnB,EAAS5oC,IAAMe,KAAKO,GAAGoB,QAEhCkmC,EAASznB,OACVynB,EAASznB,QAAQpa,SAASyU,GAAMy0C,EAAWz0C,KAG1CotB,EAASllB,OACVklB,EAASllB,QAAQ3c,SAASC,GAAMipD,EAAWjpD,IAC9C,EAIHipD,EAAWlvD,KACd,CAGA,IAAIkE,EAASnE,MAAM41B,MAAMs5B,EAAWlnD,GAKpC,OAFA7D,EAAO0H,KAAO,KAEP1H,CACV,CAgBA,IAAAirD,CAAKF,EAAWlnD,EAAQQ,GAErB,GAAiB,MAAb0mD,EAAmB,CAEpBA,EAAY,CAAC,EAEb,IAAIC,EAAcrnB,IACVonB,EAAUpnB,EAAS5oC,MACrBgwD,EAAUpnB,EAAS5oC,IAAMe,KAAKO,GAAGoB,QAEhCkmC,EAASznB,OACVynB,EAASznB,QAAQpa,SAASyU,GAAMy0C,EAAWz0C,KAG1CotB,EAASllB,OACVklB,EAASllB,QAAQ3c,SAASC,GAAMipD,EAAWjpD,IAC9C,EAIHipD,EAAWlvD,KACd,CAGA,OAAOD,MAAMovD,KAAKF,EAAWlnD,EAAQQ,EACxC,oBC/cH,IAAI6U,EAAY,EAAQ,OAExB,MAAMgyC,EAAuB,CAC1B3sD,IAAK,cACLsb,KAAM,kBACNsxC,SAAU,OACVC,QAAS,IAGNC,EAAkC,CACrC/rD,MAAO,IAGV7D,EAAOC,QAAU,cAA+Bwd,EAM7C,WAAAtd,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MAAM,CAAC,SAAU0kB,EAAYlkB,IAE7BP,KAAKk2B,SAAW,GAGhBl2B,KAAKw7B,SAAW2M,GAAiBinB,EAEjCpvD,KAAKykB,YAAcA,EAEnBzkB,KAAK+H,OAASA,GAAU,KAExB/H,KAAKwvD,gBAAiB,EAItBxvD,KAAKyvD,eAAiB,GAItBzvD,KAAK6f,WAAWta,EACnB,CAEA,aAAOyqC,GACJ,OAAOof,CACV,CAEA,oBAAOjnB,GACJ,OAAOonB,CACV,CAUA,kBAAOG,CAAYjrC,EAAa1c,GAE7B,OAAO0c,EAAYD,QAChB,CAAE/hB,IAAKzC,KAAKgwC,SAASvtC,KACrBgiB,EACA1c,EAEN,CAEA,OAAA01B,GACG,OAAOz9B,KAAKw7B,SAAS/4B,GACxB,CAEA,QAAAktD,GACG,OAAO3vD,KAAKw7B,SAASzd,IACxB,CAEA,OAAA6xC,GACG,OAAO5vD,KAAKw7B,SAAS8zB,OACxB,CAUA,KAAA1nD,GAEG,IAAI8D,EAAM3L,MAAM6H,QAEZ1D,EAAS,CACVjF,GAAIe,KAAKf,GACT8J,KAAM/I,KAAK+I,MAAQ/I,KAAKy9B,UACxBh7B,IAAKzC,KAAKyC,IACVsb,KAAM/d,KAAK+d,KACXuxC,QAAStvD,KAAKsvD,QACd1jD,KAAM5L,KAAK4L,KACX+V,SAAU3hB,KAAKO,GAAGma,UAAU1a,KAAK2hB,UAAY,CAAC,GAE9C/B,aAAclU,EAAIkU,cAerB,OAXA1b,EAAO2rD,SAAW7vD,KAAK4iB,QAAU,IAAI9jB,KAAKmH,GAAMA,EAAEhH,KAAI0D,QAAQ1D,GAAOA,IACrEiF,EAAO2rD,QAAU3rD,EAAO2rD,QAAQl2C,OAAO3Z,KAAKyvD,gBAExCzvD,KAAKgoD,WAAU9jD,EAAO8jD,SAAWhoD,KAAKgoD,UAM1C9jD,EAAO4rD,OAAS9vD,KAAK8vD,SAEd5rD,CACV,CAQA,UAAA2b,CAAWta,GAkDR,GAjDAvF,KAAKf,GAAKsG,EAAOtG,GAIjBe,KAAK+I,KAAOxD,EAAOwD,MAAQ/I,KAAKy9B,UAIhCz9B,KAAKyC,IAAM8C,EAAO9C,KAAOzC,KAAKy9B,UAK9Bz9B,KAAK+d,KAAOxY,EAAOwY,MAAQ/d,KAAK2vD,WAKhC3vD,KAAKsvD,QAAU/pD,EAAO+pD,SAAWtvD,KAAK4vD,UAEtC5vD,KAAK4L,KAAOrG,EAAOqG,KAOnBrG,EAAOoc,SAAWpc,EAAOoc,UAAY,CAAC,EACtC3hB,KAAKwD,MAAQ+B,EAAO/B,OAAS+B,EAAOoc,SAASne,OAAS,UAEtDxD,KAAK2hB,SAAWpc,EAAOoc,UAAY,CAAC,EAKpC3hB,KAAK2hB,SAASouC,OAAS9vC,SAASjgB,KAAK2hB,SAASouC,QAAU,GAUxDhwD,MAAM8f,WAAWta,IAIZvF,KAAK4L,MAAQlG,MAAMC,QAAQ3F,KAAK4f,cAClC,IAAK,IAAI1Z,EAAI,EAAGA,EAAIlG,KAAK4f,aAAahe,OAAQsE,IAK3C,GAJS,GAALA,IAEDlG,KAAK4L,KAAO5L,KAAK4f,aAAa1Z,GAAG1C,OAEM,MAAtCxD,KAAK4f,aAAa1Z,GAAGs5B,cAAuB,CAE7Cx/B,KAAK4L,KAAO5L,KAAK4f,aAAa1Z,GAAG1C,MACjC,KACH,CAKY,WAAdxD,KAAKwD,OACFxD,KAAK+H,SACN/H,KAAKwD,MACFxD,KAAK+H,OAAOvE,MACZ,KACCxD,KAAK2uB,WAAW1M,YAAcjiB,KAAKw7B,SAAS/4B,MAItD,IAAIkgB,EAAQ,GACZ3iB,KAAKyvD,eAAiBzvD,KAAKyvD,gBAAkB,IAC5ClqD,EAAOsqD,SAAW,IAAI7pD,SAAS/G,IAC7B,IAAIib,EAAMla,KAAKO,GAAGue,eAAe7f,GAC7Bib,EACDyI,EAAMvb,KAAKpH,KAAKykB,YAAYD,QAAQtK,EAAKla,KAAKykB,YAAazkB,OAE3DA,KAAKyvD,eAAeroD,KAAKnI,EAC5B,IAEHe,KAAK4iB,OAASD,EAEd3iB,KAAKgoD,SAAWziD,EAAOyiD,UAAY,CAAC,EAEb,MAAnBhoD,KAAKgoD,SAASgI,IAAWhwD,KAAKgoD,SAASgI,EAAI/vC,SAASjgB,KAAKgoD,SAASgI,IAC/C,MAAnBhwD,KAAKgoD,SAASiI,IAAWjwD,KAAKgoD,SAASiI,EAAIhwC,SAASjgB,KAAKgoD,SAASiI,IAEtEjwD,KAAKgoD,SAASkI,GAAKjwC,SAASjgB,KAAKgoD,SAASkI,IAAM,GAChDlwD,KAAKgoD,SAASmI,GAAKlwC,SAASjgB,KAAKgoD,SAASmI,IAAM,EACnD,CAEA,MAAAL,GACG,OAAsB,MAAf9vD,KAAK+H,QAAkB/H,KAAK+H,QAAU/H,KAAKykB,WACrD,CAOA,UAAA2rC,GACG,IAAIC,EAAU,GACVC,EAAUtwD,KAKd,IAFAqwD,EAAQ9+B,QAAQ++B,IAERA,EAAQR,UAAYQ,EAAQvoD,QACjCsoD,EAAQ9+B,QAAQ++B,EAAQvoD,QAExBuoD,EAAUA,EAAQvoD,OAGrB,OAAOsoD,CACV,CA8FA,mBAAAE,GAIG,IAHA,IAAI57C,EAAO,KAEPyN,EAAOpiB,KACQ,eAAZoiB,EAAK3f,MAAyB2f,EAAK0tC,UAAY1tC,EAAKra,QACxDqa,EAAOA,EAAKra,OAOf,MAJgB,eAAZqa,EAAK3f,MACNkS,EAAOyN,GAGHzN,CACV,CAOA,qBAAA67C,GAIG,IAHA,IAAIC,EAAS,KAETruC,EAAOpiB,KACQ,iBAAZoiB,EAAK3f,MAA2B2f,EAAK0tC,UAAY1tC,EAAKra,QAC1Dqa,EAAOA,EAAKra,OAOf,MAJgB,iBAAZqa,EAAK3f,MACNguD,EAASruC,GAGLquC,CACV,CAEA,UAAAC,CAAWC,GAIR,GAHgB,MAAZA,IAAkBA,EAAW,KAAM,GAGnC3wD,KAAK8vD,SACN,OAAO9vD,KAIV,IADA,IAAI4wD,EAAa5wD,KAAK+H,OAEnB6oD,IACmB,eAAlBA,EAAWnuD,MAAyBkuD,EAASC,KAE9CA,EAAaA,EAAW7oD,OAG3B,OAAO6oD,CACV,CAEA,QAAAC,GAGG,IAFA,IAAIC,EAAW9wD,KAAK0wD,cAEZI,EAAShB,UACdgB,EAAWA,EAASJ,aAGvB,OAAOI,CACV,CAQA,kBAAIvpC,GACD,IAAIwpC,GAAc/wD,KAAK2hB,UAAY,CAAC,GAAGovC,WACvC,IAAKA,EAAY,CACd,GACG,CACG,cACA,OACA,OACA,OACA,MACA,QACA,UACDvpD,QAAQxH,KAAKyC,MAAQ,EACxB,CAEC,GAAgB,eAAZzC,KAAKyC,KAAwBzC,KAAKgxD,eAAgB,OAAO,KAE7D,GAAIhxD,KAAKwvD,eAAgB,OAAO,KAEhC,IAAIyB,EAAY,IAAI3xD,MACjB,yCAAyCU,KAAKyC,oCAEjDzC,KAAKO,GAAGoJ,OAAO2sB,QAAQ26B,EAAW,CAC/BluC,KAAM/iB,KACN2hB,SAAU3hB,KAAK2hB,UAErB,MAS8B,GANxB,CACG,SACA,QACA,cACA,MACA,iBACDna,QAAQxH,KAAKyC,MAEfpB,QAAQqF,KACL,yDAAyD1G,KAAKyC,QAIvE,OAAO,IACV,CAEA,IAAIimB,EAAK1oB,KAAKO,GAAGmnB,mBAAmBqpC,GACpC,IAAKroC,EAAI,CACN,IAAIwoC,EAAU,IAAI5xD,MACf,cAAcU,KAAKwD,UAAUxD,KAAKf,mDAErCe,KAAKO,GAAGoJ,OAAO2sB,QAAQ46B,EAAS,CAC7BnuC,KAAM/iB,KACN+wD,cAEN,CACA,OAAOroC,CACV,CA0CA,KAAA/F,CAAMhgB,EAAS,MAAM,GAAMuf,GAAO,GAC/B,IAAIhe,EAAS,GAEb,OAAKlE,KAAK4iB,QAAU5iB,KAAK4iB,OAAOhhB,OAAS,EAAUsC,EAYhDA,EATCvB,GAAUuf,EASFliB,KAAKykB,YAAYtC,YAAYniB,KAAM,SAAU2C,GAE7C3C,KAAK4iB,OAAOjgB,OAAOA,EAIlC,CAYA,QAAAwuD,CAAS33B,GACN,OAAOx5B,KAAK2iB,OAAO1c,GAAMA,EAAEhH,IAAMu6B,IAAI,GAAM,EAC9C,CAMA,OAAAhV,CAAQjf,EAAQkf,EAAa1c,GAC1B,OAAO/H,KAAKykB,YAAYD,QACrBjf,EACAkf,GAAezkB,KAAKykB,YACpB1c,GAAU/H,KAEhB,CAuBA,UAAAoxD,CAAWruC,GACR,IAAIyjB,EAAUxmC,KAAK4iB,OAAOhhB,OAK1B,OAJA5B,KAAK4iB,OAAS5iB,KAAK2iB,OAAM,SAAU1c,GAChC,OAAOA,EAAEhH,IAAM8jB,EAAK9jB,EACvB,IAEIe,KAAK4iB,OAAOhhB,OAAS4kC,EACfxmC,KAAK2H,OAGRnG,QAAQ9B,SAClB,CAUA,UAAA2xD,CAAWtuC,GAKR,OAHG/iB,KAAK2iB,OAAM,SAAU1c,GAClB,OAAOA,EAAEhH,IAAM8jB,EAAK9jB,EACvB,IAAG2C,OAAS,EAMRJ,QAAQ9B,WAJZM,KAAK4iB,OAAOxb,KAAK2b,GACV/iB,KAAK2H,OAIlB,CAWA,WAAA2pD,CAAYC,EAAQC,GACjB,IAAIlkB,EAAOttC,KAAK4iB,OAAO6uC,WAAWxrD,GAAMA,EAAEhH,IAAMsyD,IAChD,KAAIjkB,EAAO,GAMX,OAHAttC,KAAK4iB,OAAO2P,OAAOi/B,EAAY,EAAGxxD,KAAK4iB,OAAO2P,OAAO+a,EAAM,GAAG,IAGvDttC,KAAK2H,MAAK,EACpB,CAaA,OAAAD,GAIG,OAFA1H,KAAKm2B,YAAW,GAET30B,QAAQ9B,UACX2H,MAAK,KAKH,IAAIqqD,EAAiB,GACjBvuC,EAAWnjB,KAAK2iB,QAQpB,OAPA3iB,KAAK4iB,OAAS,GAIdO,EAASnd,SAASC,IACfyrD,EAAetqD,KAAKnB,EAAEyB,UAAU,IAE5BlG,QAAQsY,IAAI43C,EAAe,IAEpCrqD,MAAK,KAEH,GAAIrH,KAAK+H,SAAW/H,KAAKogB,MACtB,OAAOpgB,KAAK+H,OAAOqpD,WAAWpxD,KACjC,IAEFqH,MAAK,IACItH,MAAM2H,YAEfL,MAAK,KACHrH,KAAKuB,KAAK,YAAY,GAE/B,CAQA,IAAAoG,GACG,OAAOnG,QAAQ9B,UACX2H,MAAK,IAEItH,MAAM4H,SAEfN,MAAK,KAEH,GAAIrH,KAAK+H,SAAW/H,KAAKogB,MAGtB,OAAOpgB,KAAK+H,OAAOspD,WAAWrxD,KACjC,IAEFqH,MAAK,IACIrH,MAEhB,CAQA,YAAI2xD,GAGD,OAAO,CACV,CAiBA,QAAA5hC,CAASkG,GACN,GAAKA,GAAQA,EAAIjG,SAAYiG,EAAI/F,SAAjC,CAEA,IAAItH,EAAS5oB,KAAKk2B,SAASpN,MAAMzpB,GACvBA,EAAE2wB,SAAWiG,EAAIjG,SAAW3wB,EAAE4wB,WAAagG,EAAIhG,cAIpDrH,GAAUA,EAAOhnB,OAAS,KAE5B5B,KAAKk2B,SAAS9uB,KAAK,CAChB4oB,QAASiG,EAAIjG,QACbC,UAAWgG,EAAIhG,UACfC,SAAU+F,EAAI/F,WAIjB+F,EAAIjG,QAAQ/uB,GAAGg1B,EAAIhG,UAAWgG,EAAI/F,UAhBY,CAkBpD,CASA,UAAAiG,CAAWjU,GACJA,GACDliB,KAAK2iB,QAAQ3c,SAASC,IACnBA,EAAEkwB,WAAWjU,EAAK,IAIpBliB,KAAKk2B,UAAYl2B,KAAKk2B,SAASt0B,OAAS,GACzC5B,KAAKk2B,SAASlwB,SAAS3G,IACpBA,EAAE2wB,QAAQoG,eAAe/2B,EAAE4wB,UAAW5wB,EAAE6wB,SAAS,GAG1D,CAkBA,KAAAyF,CAAMs5B,EAAWlnD,EAAQQ,EAAU,CAAC,GACjC0mD,EAAYA,GAAa,CAAC,EAG1B,IAAIv9C,EAAS1R,KAAK4H,QAGlB,CAAC,QAAS,SAAS5B,SAASwiC,WAClB92B,EAAO82B,EAAK,IAIlBxoC,KAAK4xD,wBACL5xD,KAAK4xD,yBAA2B,IAAI5rD,SAASwiC,IACvC92B,GAAUA,EAAOiQ,WAClBjQ,EAAOiQ,SAAS6mB,GAAQymB,EAAUv9C,EAAOiQ,SAAS6mB,IAAM,IAKjE,IAAItkC,EAASlE,KAAKwkB,QAAQ9S,EAAQ1R,KAAKykB,YAAa1c,GA+BpD,OA1BG7D,EAAOjF,GAFI,MAAV8I,EAEW,KAEAknD,EAAU/qD,EAAOjF,KAAOe,KAAKO,GAAGoB,OAI3C3B,KAAKogB,QAAU7X,EAAQspD,iBACxB3tD,EAAOgb,OAAS,GAChBlf,KAAKogB,QAAQpa,SAASyU,IACnB,IAAIq3C,EAAgBr3C,EAAEkb,MAAMs5B,EAAW/qD,EAAQqE,GAC/CupD,EAAc/pD,OAAS7D,EAEvBA,EAAOgb,OAAO9X,KAAK0qD,EAAc,KAKnC9xD,KAAK2iB,QAAUpa,EAAQwpD,iBACxB7tD,EAAO0e,OAAS,GAChB5iB,KAAK2iB,QAAQ3c,SAASC,IACnB,IAAI+rD,EAAa/rD,EAAE0vB,MAAMs5B,EAAW/qD,EAAQqE,GAE5CrE,EAAO0e,OAAOxb,KAAK4qD,EAAW,KAI7B9tD,CACV,CAsBA,IAAAirD,CAAKF,EAAWlnD,EAAQQ,EAAU,CAAC,GAChC0mD,EAAYA,GAAa,CAAC,EAG1B,IAAIv9C,EAAS1R,KAAK4H,QAGlB,CAAC,UAAW,WAAW5B,SAASwiC,WACtB92B,EAAO82B,EAAK,IAIlBxoC,KAAK4xD,wBACL5xD,KAAK4xD,yBAA2B,IAAI5rD,SAASwiC,IACvC92B,GAAUA,EAAOiQ,WAClBjQ,EAAOiQ,SAAS6mB,GAAQymB,EAAUv9C,EAAOiQ,SAAS6mB,IAAM,IAKjE,IAAItkC,EAASlE,KAAKykB,YAAYD,QAAQ9S,EAAQ1R,KAAKykB,YAAa1c,GAuBhE,OApBA7D,EAAO6D,OAASA,GAAU/H,KAAK+H,OAM5B7D,EAAOjF,GAHI,MAAV8I,EAGW,KAEAknD,EAAU/qD,EAAOjF,KAAOe,KAAKO,GAAGoB,OAI/B,eAAZ3B,KAAKyC,MACNyB,EAAO0H,KACJrD,GAAS0pD,SACT,GAAG/tD,EAAO0H,eAAe5L,KAAKO,GAAGoB,OAAOmE,MAAM,EAAG,KAEpD5B,EAAOV,MAAQ+E,GAAS0pD,SAAW,GAAG/tD,EAAOV,kBAGzChC,QAAQ9B,UACX2H,MAAK,KAEH,IAAI6qD,EAAW,GA4Bf,OA1BIlyD,KAAKkf,SAAW3W,EAAQspD,iBACzB3tD,EAAOgb,OAAS,GAChBlf,KAAKogB,QAAQpa,SAASyU,IAGfA,EAAEq1C,UACH9vD,KAAKykB,YAAYvF,OAAO9X,KAAK,CAAEnI,GAAIgwD,EAAUx0C,EAAExb,MAElDizD,EAAS9qD,KACNqT,EACI00C,KAAKF,EAAW/qD,EAAQqE,GACxBlB,MAAMyqD,IACJA,EAAc/pD,OAAS7D,EAEvBlE,KAAKykB,YAAYvF,OACdlf,KAAKykB,YAAYvF,OAAOvc,QACpBwvD,GAAOA,EAAGlzD,IAAMgwD,EAAUx0C,EAAExb,MAInCiF,EAAOgb,OAAO9X,KAAK0qD,EAAc,IAEzC,KAIAtwD,QAAQsY,IAAIo4C,EAAS,IAE9B7qD,MAAK,KAEH,IAAI6qD,EAAW,GAsBf,OApBIlyD,KAAK4iB,SAAWra,EAAQwpD,iBACzB7tD,EAAO0e,OAAS,GAChB5iB,KAAK2iB,QAAQ3c,SAASC,IACnBisD,EAAS9qD,KAGNnB,EAAEkpD,KAAKF,EAAW/qD,EAAQqE,GAASlB,MAAM2qD,IAInC9tD,EAAO0e,OAAOjgB,QAAQyvD,GAAOA,EAAGnzD,IAAM+yD,EAAW/yD,KAC7C2C,OAAS,GAEbsC,EAAO0e,OAAOxb,KAAK4qD,EACtB,IAEL,KAIAxwD,QAAQsY,IAAIo4C,EAAS,IAE9B7qD,MAAK,IAEInD,EAAOyD,SAEhBN,MAAK,IACInD,GAEhB,oBCh9BH,MAAM6pD,EAAe,EAAQ,OAEvBsE,EAAwC,CAC3CtB,WAAY,KACZpiC,MAAO,KACPohC,OAAQ,EACR5B,UAAW,EACXC,SAAU,GAGPkE,EAAiB,CACpB7vD,IAAK,gBACLsb,KAAM,UACNsxC,SAAU,UAGb1vD,EAAOC,QAAU,cAA+BmuD,EAC7C,WAAAjuD,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MAAMwF,EAAQkf,EAAa1c,EAAQogC,GAAiBmqB,EACvD,CAEA,aAAOtiB,GACJ,OAAOsiB,CACV,CAEA,oBAAOnqB,GACJ,OAAOkqB,CACV,CAMA,aAAAE,GACG,MAAO,EACV,CAkBA,YAAIZ,GAED,OAAO3xD,KAAK2hB,SAASgwC,WAAY,CACpC,oBCxDH,MAAM5D,EAAe,EAAQ,OAEvByE,EAA4C,CAC/CC,aAAa,EACbC,UAAW,GACXC,eAAe,EACfC,YAAa,GACbC,cAAc,EACdC,WAAY,GACZC,YAAa,KACbC,UAAW,QACXC,WAAW,GAGRC,EAA2B,CAC9BzwD,IAAK,gBAGLsb,KAAM,SAGNsxC,SAAU,UAIb1vD,EAAOC,QAAU,cAAyCmuD,EACvD,WAAAjuD,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MACGwF,EACAkf,EACA1c,EACAogC,GAAiB+qB,EAEvB,CAEA,aAAOljB,GACJ,OAAOkjB,CACV,CAEA,oBAAO/qB,GACJ,OAAOqqB,CACV,CAMA,KAAA5qD,GAEG,IAAI9C,EAAS,GAYb,OAVI9E,KAAK2hB,SAAS+wC,WAAW5tD,EAAOsC,KAAK,aAErCpH,KAAK2hB,SAASixC,aAAa9tD,EAAOsC,KAAK,eAEvCpH,KAAK2hB,SAASmxC,YAAYhuD,EAAOsC,KAAK,cAE1CpH,KAAK0/B,YAAY1/B,KAAK2hB,SAAU3hB,KAAK2hB,SAAU7c,GAElC/E,MAAM6H,OAGtB,CAQA,kBAAI2f,GACD,OAAO,IACV,CAEA,UAAA1H,CAAWta,GACRxF,MAAM8f,WAAWta,GAGjB,IAAIT,EAAS,GAET9E,KAAK2hB,SAAS+wC,WAAW5tD,EAAOsC,KAAK,aAErCpH,KAAK2hB,SAASixC,aAAa9tD,EAAOsC,KAAK,eAEvCpH,KAAK2hB,SAASmxC,YAAYhuD,EAAOsC,KAAK,cAE1CpH,KAAK0/B,YAAY1/B,KAAK2hB,SAAU3hB,KAAK2hB,SAAU7c,GAE/CrF,OAAOD,KAAKgzD,GAA2CxsD,SAASiB,IAC7D,IAAIiC,EACDlJ,KAAK2hB,SAAS1a,IAAMurD,EAA0CvrD,GACjE,IACGiC,EAAMvC,KAAKiE,MAAM1B,EACpB,CAAE,MAAO7J,GAET,CACAW,KAAK2hB,SAAS1a,GAAKiC,CAAG,GAoB5B,oBCpHH,MAAMuuB,EAAuB,EAAQ,OAE/B07B,EAAoD,CAAC,EAErDC,EAAmC,CACtC3wD,IAAK,kBACLsb,KAAM,iBACNsxC,SAAU,YAGb1vD,EAAOC,QAAU,cAA2C,EAGzD,WAAAE,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MACGwF,EACAkf,EACA1c,EACAogC,GAAiBirB,EAEvB,CAEA,aAAOpjB,GACJ,OAAOojB,CACV,CAEA,oBAAOjrB,GACJ,OAAOgrB,CACV,oBC5BH,MAAM17B,EAAuB,EAAQ,OAE/B47B,EAAmD,CACtDC,SAAU,GACVluC,iBAAkB,CACfC,KAAM,MACNzL,MAAO,IAEV0L,WAAY,GACZiuC,WAAY,IACZC,YAAa,KAGVC,EAAkC,CACrChxD,IAAK,iBACLsb,KAAM,UACNsxC,SAAU,WAGb1vD,EAAOC,QAAU,cAA0C,EAGxD,WAAAE,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MACGwF,EACAkf,EACA1c,EACAogC,GAAiBsrB,EAEvB,CAEA,aAAOzjB,GACJ,OAAOyjB,CACV,CAEA,oBAAOtrB,GACJ,OAAOkrB,CACV,CAYA,UAAAxzC,CAAWta,GACRxF,MAAM8f,WAAWta,GAEjBvF,KAAK2hB,SAASyD,iBACXplB,KAAK2hB,SAASyD,kBACdiuC,EAAiDjuC,gBACvD,oBCvDH,MAAM2oC,EAAe,EAAQ,OAEvB2F,EAAe,EAAQ,MACvBC,EAAe,EAAQ,OAEvBC,EAAqB,CACxBnxD,IAAK,cACLsb,KAAM,WACNsxC,SAAU,QAGPwE,EAAsC,CACzC9C,WAAY,KACZ+C,WAAW,EACXC,cAAe,OACfC,WAAY,IACZjE,OAAQ,IACRkE,aAAa,EACbC,aAAa,EACbC,aAAc,GACdC,SAAU,OAkBVC,YAAa,GAabC,YAAa,IAGhB30D,EAAOC,QAAU,cAAmCmuD,EACjD,WAAAjuD,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MAAMwF,EAAQkf,EAAa1c,EAAQogC,GAAiByrB,EACvD,CAEA,aAAO5jB,GACJ,OAAO4jB,CACV,CAEA,oBAAOzrB,GACJ,OAAO0rB,CACV,CAYA,UAAAh0C,CAAWta,GACRxF,MAAM8f,WAAWta,GAEjBvF,KAAK2hB,SAASoyC,cACX/zD,KAAK2hB,SAASoyC,eACdF,EAAoCE,cAGvC/zD,KAAK2hB,SAASmyC,UAAYntD,KAAKiE,MACD,MAA3B5K,KAAK2hB,SAASmyC,UACT9zD,KAAK2hB,SAASmyC,UACdD,EAAoCC,WAE5C9zD,KAAK2hB,SAASsyC,YAActtD,KAAKiE,MACD,MAA7B5K,KAAK2hB,SAASsyC,YACTj0D,KAAK2hB,SAASsyC,YACdJ,EAAoCI,aAE5Cj0D,KAAK2hB,SAASuyC,YAAcvtD,KAAKiE,MACD,MAA7B5K,KAAK2hB,SAASuyC,YACTl0D,KAAK2hB,SAASuyC,YACdL,EAAoCK,aAI5Cl0D,KAAK2hB,SAASqyC,WAAa/zC,SACI,MAA5BjgB,KAAK2hB,SAASqyC,WACTH,EAAoCG,WACpCh0D,KAAK2hB,SAASqyC,YAEtBh0D,KAAK2hB,SAASouC,OAAS9vC,SACI,MAAxBjgB,KAAK2hB,SAASouC,OACT8D,EAAoC9D,OACpC/vD,KAAK2hB,SAASouC,OAEzB,CAGA,UAAAwE,CAAWzvC,GACR9kB,KAAKgxD,eAAiBlsC,CACzB,CAMA,aAAAytC,GACG,IAAIiC,EAAe,CAAC,eAAgB,gBAAiB,eAGrD,OAFmBx0D,KAAKykB,YAAYvB,UAEfvgB,QAAQugC,GACnBsxB,EAAahtD,QAAQ07B,EAAE8M,SAASvtC,MAAQ,GAErD,CAUA,eAAAgyD,CAAgB9xD,GACb,MAAM+xD,EAAqB/xC,IACxB,IAAIgyC,EAAa,GAYjB,OAVAhyC,EAAM3c,SAASC,IACH,MAALA,IAEJ0uD,EAAWvtD,KAAKnB,GAEZA,EAAE2c,QAAQhhB,SACX+yD,EAAaA,EAAWh7C,OAAO+6C,EAAkBzuD,EAAE2c,UACtD,IAGI+xC,CAAU,EAGpB,OAAI30D,KAAK4iB,QAAQhhB,QAGA,MAAVe,IACDA,EAAUiyD,GACPA,aAAgB50D,KAAKO,GAAGgV,MAAMkiB,sBAJdi9B,EAAkB10D,KAAK4iB,QAOxBjgB,OAAOA,IAErB,EAEb,CASA,cAAAkyD,CAAelmC,EAAOmmC,GACnB,GAAa,MAATnmC,EAAJ,CAKA,IAAIomC,EAAiBpmC,EAAMqmC,sBAC3B,GAAsB,MAAlBD,EAAJ,CAEA,IAAIzwC,EAAUywC,EAAerF,YAAY1vD,KAAKykB,YAAazkB,MAC3D,GAAe,MAAXskB,EAYJ,OATAA,EAAQ3C,SAAW2C,EAAQ3C,UAAY,CAAC,EACxC2C,EAAQ3C,SAASgxB,QAAUhkB,EAAM1vB,GAGhB,MAAb61D,IAAmBxwC,EAAQ0jC,SAASiI,EAAI6E,GAG5C90D,KAAK4iB,OAAOxb,KAAKkd,GAEVA,CAf2B,CANT,CAsB5B,CAEA,cAAI2wC,GACD,IAAInwC,EAAS9kB,KAAKunB,eAAeD,WAUjC,OARwB,MAApBtnB,KAAKk1D,cACNl1D,KAAKk1D,YAAc,IAAIxB,GAG1B1zD,KAAKk1D,YAAYC,SAASn1D,MAC1BA,KAAKk1D,YAAYE,aAAap1D,KAAK2hB,SAAS0yC,aAC5Cr0D,KAAKk1D,YAAYX,WAAWzvC,GAErB9kB,KAAKk1D,WACf,CAQA,sBAAMG,GACH,OAAOr1D,KAAKi1D,WAAWK,YAC1B,CAEA,gBAAAC,CAAiBtrC,GACd,OAAOjqB,KAAKi1D,WAAWO,WAAW,CAAEp0D,KAAM6oB,EAAStV,KAAM3U,MAC5D,CAEA,aAAAy1D,CAAcxrC,GAEX,OAAIA,IACYjqB,KAAKunB,eAAeD,WACN+E,YAAYpC,GACA5V,QAEpChT,QAAQC,MAAM,2BAA4B,CAAE2oB,QAASA,IAC9CzoB,QAAQsI,OAAO,IAAIxK,MAAM,8BAI/BU,KAAKi1D,WAAWvyC,QAAQ,CAAEthB,KAAM6oB,EAAStV,KAAM3U,MACzD,CAEA,aAAA01D,CAAczrC,GACX,IAAInF,EAAS9kB,KAAKunB,eAAeD,WAE7BquC,EAAc,IAAIhC,EAKtB,OAJAgC,EAAYR,SAASn1D,MACrB21D,EAAYP,aAAap1D,KAAK2hB,SAAS2yC,aACvCqB,EAAYpB,WAAWzvC,GAEhB6wC,EAAYjzC,QAAQ,CAAEthB,KAAM6oB,EAAStV,KAAM3U,MACrD,oBC/PH,MAAMy3B,EAAuB,EAAQ,OAE/Bm+B,EAA4C,CAAC,EAE7CC,EAA2B,CAC9BpzD,IAAK,qBAELsb,KAAM,eAENsxC,SAAU,UAIb1vD,EAAOC,QAAU,cAAyC63B,EACvD,WAAA33B,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MACGwF,EACAkf,EACA1c,EACAogC,GAAiB0tB,EAEvB,CAEA,aAAO7lB,GACJ,OAAO6lB,CACV,CAEA,oBAAO1tB,GACJ,OAAOytB,CACV,mBC7BH,MAAMn+B,EAAuB,EAAQ,OAE/Bq+B,EAAsD,CACzDC,YAAY,GAGTC,EAAqC,CACxCvzD,IAAK,cACLsb,KAAM,WACNsxC,SAAU,cAGb1vD,EAAOC,QAAU,cAA6C,EAG3D,WAAAE,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MACGwF,EACAkf,EACA1c,EACAogC,GAAiB6tB,EAEvB,CAEA,aAAOhmB,GACJ,OAAOgmB,CACV,CAEA,oBAAO7tB,GACJ,OAAO2tB,CACV,oBC9BH,MAAMr+B,EAAuB,EAAQ,OAE/Bw+B,EAAoD,CACvDF,YAAY,GAGTG,EAAmC,CACtCzzD,IAAK,kBACLsb,KAAM,WACNsxC,SAAU,iBAGb1vD,EAAOC,QAAU,cAA2C,EAGzD,WAAAE,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MACGwF,EACAkf,EACA1c,EACAogC,GAAiB+tB,EAEvB,CAEA,aAAOlmB,GACJ,OAAOkmB,CACV,CAEA,oBAAO/tB,GACJ,OAAO8tB,CACV,oBC9BH,MAAMx+B,EAAuB,EAAQ,OAE/B0+B,EAAiD,CACpDJ,YAAY,GAGTK,EAAgC,CACnC3zD,IAAK,eACLsb,KAAM,WACNsxC,SAAU,SAGb1vD,EAAOC,QAAU,cAAwC63B,EACtD,WAAA33B,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MACGwF,EACAkf,EACA1c,EACAogC,GAAiBiuB,EAEvB,CAEA,aAAOpmB,GACJ,OAAOomB,CACV,CAEA,oBAAOjuB,GACJ,OAAOguB,CACV,oBC5BH,MAAM1+B,EAAuB,EAAQ,OAE/B4+B,EAA0C,CAAC,EAE3CC,EAAyB,CAC5B7zD,IAAK,cAELsb,KAAM,OAENsxC,SAAU,QAIb1vD,EAAOC,QAAU,cAAuC63B,EACrD,WAAA33B,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MACGwF,EACAkf,EACA1c,EACAogC,GAAiBmuB,EAEvB,CAEA,aAAOtmB,GACJ,OAAOsmB,CACV,CAEA,oBAAOnuB,GACJ,OAAOkuB,CACV,oBC7BH,MAAM5+B,EAAuB,EAAQ,OAE/B8+B,EAA6C,CAAC,EAE9CC,EAA4B,CAC/B/zD,IAAK,iBAELsb,KAAM,iBAENsxC,SAAU,WAIb1vD,EAAOC,QAAU,cAA0C,EAGxD,WAAAE,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MACGwF,EACAkf,EACA1c,EACAogC,GAAiBquB,EAEvB,CAEA,aAAOxmB,GACJ,OAAOwmB,CACV,CAEA,oBAAOruB,GACJ,OAAOouB,CACV,oBC/BH,MAAME,EAAuB,EAAQ,OAE/BC,EAA2C,CAAC,EAE5CC,EAA0B,CAC7Bl0D,IAAK,eAELsb,KAAM,eAENsxC,SAAU,SAIb1vD,EAAOC,QAAU,cAAwC62D,EACtD,WAAA32D,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MACGwF,EACAkf,EACA1c,EACAogC,GAAiBwuB,EAEvB,CAEA,aAAO3mB,GACJ,OAAO2mB,CACV,CAEA,oBAAOxuB,GACJ,OAAOuuB,CACV,oBC7BH,MAAM3I,EAAe,EAAQ,OAEvB6I,EAA2C,CAC9CtV,SAAU,EACVuV,QAAS,GAGZl3D,EAAOC,QAAU,cAAuCmuD,EAKrD,oBAAO5lB,GACJ,OAAOyuB,CACV,CAQA,kBAAIrvC,GACD,IAAI5S,EAAO3U,KAAKuwD,sBAChB,GAAY,MAAR57C,EAAc,OAAO,KAEzB,IAAI4S,EAAiB5S,EAAK4S,eAC1B,OAAsB,MAAlBA,EAA+B,KAE5BA,CACV,CAEA,KAAAoH,GACG,GAAI3uB,KAAK2hB,SAASlW,SAAU,CACzB,IAAIqZ,EAAS9kB,KAAKO,GAAGoL,WAAW3L,KAAK2hB,SAASlW,UAC9C,OAAKqZ,EAEEA,EAAO8C,UAAU5nB,KAAK2hB,SAASgxB,SAFlB,IAGvB,CAAO,CACJ,IAGI7tB,EAHAnQ,EAAO3U,KAAKuwD,sBAChB,GAAY,MAAR57C,EAAc,OAAO,KAGzB,GAAIA,EAAKq8C,eACNlsC,EAASnQ,EAAKq8C,mBACV,CACJ,IAAIzpC,EAAiB5S,EAAK4S,eAC1B,GAAsB,MAAlBA,EAAwB,OAAO,KAEnCzC,EAASyC,EAAeD,UAC3B,CAEA,OAAc,MAAVxC,EAAuB,KAEfA,EAAO8C,UAAU5nB,KAAK2hB,SAASgxB,QAE9C,CACH,oBCzDH,MAAMlb,EAAuB,EAAQ,OAE/Bq/B,EAAkD,CACrDC,UAAW,GAGRC,EAAiC,CACpCv0D,IAAK,mBACLsb,KAAM,UACNsxC,SAAU,UAGb1vD,EAAOC,QAAU,cAAyC63B,EACvD,WAAA33B,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MACGwF,EACAkf,EACA1c,EACAogC,GAAiB6uB,EAEvB,CAEA,aAAOhnB,GACJ,OAAOgnB,CACV,CAEA,oBAAO7uB,GACJ,OAAO2uB,CACV,CAcA,KAAAlvD,GACG5H,KAAK0/B,YAAY1/B,KAAMA,KAAM,CAAC,QAAS,cAEvC,IAAI0L,EAAM3L,MAAM6H,QAEhB,OADA8D,EAAIiX,MAAQ,GACLjX,CACV,CAQA,UAAAmU,CAAWta,GACRxF,MAAM8f,WAAWta,GAGjBvF,KAAK2hB,SAASo1C,UACX/2D,KAAK2hB,SAASo1C,WACdD,EAAgDC,UAGnD/2D,KAAK2hB,SAASo1C,UAAY92C,SAASjgB,KAAK2hB,SAASo1C,UACpD,oBClEH,MAAME,EAAyB,EAAQ,OAEjCC,EAAoD,CAAC,EAErDC,EAAmC,CACtC10D,IAAK,uBACLsb,KAAM,aACNsxC,SAAU,YAGb1vD,EAAOC,QAAU,cAAuCq3D,EACrD,WAAAn3D,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MACGwF,EACAkf,EACA1c,EACAogC,GAAiBgvB,EAEvB,CAEA,aAAOnnB,GACJ,OAAOmnB,CACV,CAEA,oBAAOhvB,GACJ,OAAO+uB,CACV,mBC1BH,MAAME,EAA+B,EAAQ,OAEvCC,EAA0D,CAC7DtuD,KAAM,cAGHuuD,EAAyC,CAC5C70D,IAAK,wBACLsb,KAAM,UACNsxC,SAAU,kBAGb1vD,EAAOC,QAAU,cAAiD,EAG/D,WAAAE,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MACGwF,EACAkf,EACA1c,EACAogC,GAAiBmvB,EAEvB,CAEA,aAAOtnB,GACJ,OAAOsnB,CACV,CAEA,oBAAOnvB,GACJ,OAAOkvB,CACV,oBC9BH,MAAM5/B,EAAuB,EAAQ,OAE/B8/B,EAAwD,CAC3DxuD,KAAM,cAGHyuD,EAAuC,CAC1C/0D,IAAK,sBACLsb,KAAM,UACNsxC,SAAU,gBAGb1vD,EAAOC,QAAU,cAA+C,EAG7D,WAAAE,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MACGwF,EACAkf,EACA1c,EACAogC,GAAiBqvB,EAEvB,CAEA,aAAOxnB,GACJ,OAAOwnB,CACV,CAEA,oBAAOrvB,GACJ,OAAOovB,CACV,oBC9BH,MAAM9/B,EAAuB,EAAQ,OAE/BggC,EAA6C,CAChD1uD,KAAM,SACN2uD,YAAa,IAGVC,EAA4B,CAC/Bl1D,IAAK,iBACLsb,KAAM,WACNsxC,SAAU,WAGb1vD,EAAOC,QAAU,cAA0C,EAGxD,WAAAE,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MACGwF,EACAkf,EACA1c,EACAogC,GAAiBwvB,EAEvB,CAEA,aAAO3nB,GACJ,OAAO2nB,CACV,CAEA,oBAAOxvB,GACJ,OAAOsvB,CACV,CAEA,KAAA7vD,GAIG,OAFA5H,KAAK0/B,YAAY1/B,KAAK2hB,SAAU3hB,KAAK2hB,SAAU,CAAC,gBAEzC5hB,MAAM6H,OAChB,CAEA,UAAAiY,CAAWta,GACRxF,MAAM8f,WAAWta,GAGjBvF,KAAK0/B,YAAY1/B,KAAK2hB,SAAU3hB,KAAK2hB,SAAU,CAAC,eACnD,oBC7CH,MAAMosC,EAAe,EAAQ,OAEvB6J,EAAuC,CAC1Cn0D,KAAM,GACNoU,OAAQ,EACRm7C,UAAW,QAGRV,EAAiB,CACpB7vD,IAAK,eACLsb,KAAM,OACNsxC,SAAU,SAGb1vD,EAAOC,QAAU,cAAoCmuD,EAMlD,WAAAjuD,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MAAMwF,EAAQkf,EAAa1c,EAAQogC,GAAiBmqB,EACvD,CAEA,aAAOtiB,GACJ,OAAOsiB,CACV,CAEA,oBAAOnqB,GACJ,OAAOyvB,CACV,CAcA,KAAAhwD,GACG5H,KAAK0/B,YAAY1/B,KAAMA,KAAM,CAAC,QAAS,SAEvC,IAAI0L,EAAM3L,MAAM6H,QAEhB,OADA8D,EAAImkD,QAAU,GACPnkD,CACV,CAQA,UAAAmU,CAAWta,GACRxF,MAAM8f,WAAWta,GAIjBvF,KAAKyD,KAAO8B,EAAO9B,MAAQ8B,EAAOoc,SAASle,MAAQ,QAEnDzD,KAAK2hB,SAAS9J,OACX7X,KAAK2hB,SAAS9J,QAAU+/C,EAAqC//C,OAChE7X,KAAK2hB,SAASqxC,UACXhzD,KAAK2hB,SAASqxC,WACd4E,EAAqC5E,UAGxChzD,KAAK4iB,OAAS,GAGd5iB,KAAK2hB,SAAS9J,OAASoI,SAASjgB,KAAK2hB,SAAS9J,QAE9C7X,KAAKs/B,UAAUt/B,KAAMA,KAAM,CAAC,QAAS,QACxC,CAQA,YAAA63D,GACG73D,KAAK2hB,SAAS9J,OAAS,CAC1B,CAMA,WAAAigD,GACG93D,KAAK2hB,SAAS9J,OAAS,CAC1B,CAMA,iBAAAkgD,GACG/3D,KAAK2hB,SAAS9J,OAAS,CAC1B,oBCxGH,MAAMk2C,EAAe,EAAQ,OAEvBiK,EAAsC,CACzCjH,WAAY,KACZpiC,MAAO,KACPohC,OAAQ,EACR5B,UAAW,EACXC,SAAU,GAGPkE,EAAiB,CACpB7vD,IAAK,cACLsb,KAAM,UACNsxC,SAAU,QAGb1vD,EAAOC,QAAU,cAA8BmuD,EAC5C,WAAAjuD,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MAAMwF,EAAQkf,EAAa1c,EAAQogC,GAAiBmqB,EACvD,CAEA,aAAOtiB,GACJ,OAAOsiB,CACV,CAEA,oBAAOnqB,GACJ,OAAO6vB,CACV,CAMA,aAAAzF,GACG,MAAO,EACV,CAEA,KAAA5jC,GACG,IAAIoD,EAAK/xB,KAAKunB,eACd,IAAKwK,EAAI,OAAO,KAEhB,IAAIjN,EAASiN,EAAGzK,WAChB,OAAKxC,EAEEA,EAAO8C,UAAU5nB,KAAK2hB,SAASgN,OAFlB,IAGvB,CAQA,YAAIgjC,GAED,MAAoC,IAA7B3xD,KAAK2hB,SAASs2C,WACxB,oBCxDH,MAAMlK,EAAe,EAAQ,OAEvBmK,EAA0C,CAC7CnH,WAAY,KACZpiC,MAAO,KACPohC,OAAQ,EACR5B,UAAW,EACXC,SAAU,GAGPkE,EAAiB,CACpB7vD,IAAK,kBACLsb,KAAM,WACNsxC,SAAU,YAGb1vD,EAAOC,QAAU,cAAiCmuD,EAC/C,WAAAjuD,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MAAMwF,EAAQkf,EAAa1c,EAAQogC,GAAiBmqB,EACvD,CAEA,aAAOtiB,GACJ,OAAOsiB,CACV,CAEA,oBAAOnqB,GACJ,OAAO+vB,CACV,CAMA,aAAA3F,GACG,MAAO,EACV,CAEA,KAAA5jC,GACG,IAAIoD,EAAK/xB,KAAKunB,eACd,IAAKwK,EAAI,OAAO,KAEhB,IAAIjN,EAASiN,EAAGzK,WAChB,OAAKxC,EAEEA,EAAO8C,UAAU5nB,KAAK2hB,SAASgN,OAFlB,IAGvB,CAQA,YAAIgjC,GAED,MAAoC,IAA7B3xD,KAAK2hB,SAASs2C,WACxB,oBClDH,MAAM9gC,EAAuB,EAAQ,OAE/BghC,EAAwB,CAC3BpvD,KAAM,gBASTpJ,EAAOC,QAAU,cAAgCu3B,EAC9C,WAAAr3B,CAAYud,EAAYqF,EAASniB,GAC9BR,MAAMsd,EAAYqF,EAASniB,EAK9B,CAEA,eAAOi7B,GACJ,OAAO28B,CACV,CAEA,UAAAt4C,CAAWxC,GASRtd,MAAM8f,WAAWxC,GAEjBrd,KAAK+I,KAAOsU,EAAWtU,MAAQovD,EAAsBpvD,IACxD,oBCrCH,MAAMqU,EAAY,EAAQ,OAEpBg7C,EAA+B,CAClCrvD,KAAM,uBAOTpJ,EAAOC,QAAU,cAAuCwd,EACrD,WAAAtd,CAAYud,EAAYqF,EAASniB,GAC9BR,MAAM,CAAC,SAAUQ,GAEjBP,KAAK0iB,QAAUA,EACV1iB,KAAKsf,YACPtf,KAAKsf,UAAYoD,EAAQzjB,IAG5Be,KAAK6f,WAAWxC,EAKnB,CAEA,eAAOme,GACJ,OAAO48B,CACV,CAEA,UAAAv4C,CAAWxC,GAwBR,SAASg7C,EAAaC,GACnB,YAA2B,IAAbA,GAAyC,MAAbA,CAC7C,CAhBAt4D,KAAKf,GAAKoe,EAAWpe,GACrBe,KAAK4L,KAAOyR,EAAWzR,MAAQ,GAC/B5L,KAAK+I,KAAOsU,EAAWtU,MAAQqvD,EAA6BrvD,KAC5D/I,KAAKyC,IAAM4a,EAAW5a,KAAO21D,EAA6BrvD,KAG1D/I,KAAKsf,UAAYjC,EAAWiC,WAAa,KACzCtf,KAAK2sC,UAAYtvB,EAAWsvB,WAAa,cACzC3sC,KAAKu4D,QAAUl7C,EAAWk7C,SAAW,GACrCv4D,KAAKw4D,SAAU,EACXn7C,EAAWm7C,SAAiC,IAAtBn7C,EAAWm7C,UAClCx4D,KAAKw4D,QAAUn7C,EAAWm7C,SAO7Bx4D,KAAKkgB,QAAU,EACXm4C,EAAah7C,EAAW6C,WACzBlgB,KAAKkgB,QAAUD,SAAS5C,EAAW6C,UAGtClgB,KAAKmgB,KAAO,EACRk4C,EAAah7C,EAAW8C,QACzBngB,KAAKmgB,KAAO9C,EAAW8C,MAG1BngB,KAAKy4D,WAAa,EACdJ,EAAah7C,EAAWo7C,cACzBz4D,KAAKy4D,WAAax4C,SAAS5C,EAAWo7C,aAGzCz4D,KAAK04D,QAAU,EACXL,EAAah7C,EAAWq7C,WACzB14D,KAAK04D,QAAUr7C,EAAWq7C,SAG7B14D,KAAK24D,SAAW,EACZN,EAAah7C,EAAWs7C,YACzB34D,KAAK24D,SAAW14C,SAAS5C,EAAWs7C,WAGvC34D,KAAK44D,UAAY,GACbP,EAAah7C,EAAWu7C,aACzB54D,KAAK44D,UAAYv7C,EAAWu7C,WAI/B54D,KAAKsqB,OAAS,GACV+tC,EAAah7C,EAAWiN,UACzBtqB,KAAKsqB,OAASjN,EAAWiN,QAG5BvqB,MAAM8f,WAAWxC,GAGZrd,KAAKwD,QACPxD,KAAKwD,MAAQxD,KAAK4L,KAExB,CAaA,KAAAhE,IAEQ5H,KAAKwD,OAASxD,KAAK4L,MAAqB,IAAb5L,KAAK4L,OAClC5L,KAAKwD,MAAQxD,KAAK4L,MAIrB,IAAIxK,EAAOrB,MAAM6H,QAuBjB,MArBmB,CAChB,KACA,OACA,OACA,YACA,YACA,UACA,QACA,UACA,OACA,aACA,UACA,WACA,YACA,SACA,WAEU5B,SAAS0b,IACnBtgB,EAAKsgB,GAAK1hB,KAAK0hB,EAAE,IAGbtgB,CACV,CAOA,cAAAgrC,GAAkB,oBClJrB,IAAIysB,EAAQ,CAAC,EAWTC,EAAkB,CAAC,EAEnBC,EAAqB,CACtB,EAAQ,OACR,EAAQ,MACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,MACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,MACR,EAAQ,OACR,EAAQ,MACR,EAAQ,OACR,EAAQ,OACR,EAAQ,QAGXA,EAAmB/yD,SAASgzD,IAGzB,OAFAH,EAAMG,EAAQx9B,WAAW/4B,KAAOu2D,EAExBA,EAAQx9B,WAAWpsB,UACxB,IAAK,QACL,IAAK,MACF0pD,EAAgBE,EAAQC,iBAAiBC,OAAOC,qBAC7CH,EAAQx9B,WACX,MAEH,IAAK,UACL,IAAK,OACFs9B,EAAgBE,EAAQC,iBAAiBC,OAAOnwD,MAC7CiwD,EAAQx9B,WAEjB,IAGH77B,EAAOC,QAAU,CAMdw5D,SAAU,WACP,IAAIC,EAAQ,GACZ,IAAK,IAAIx5B,KAAKg5B,EACXQ,EAAMjyD,KAAKyxD,EAAMh5B,IAEpB,OAAOw5B,CACV,EAOA59B,QAAS,SAAUl2B,EAAQmd,EAASniB,GACjC,GAAIgF,EAAO9C,IACR,OAAO,IAAIo2D,EAAMtzD,EAAO9C,KAAK8C,EAAQmd,EAASniB,EAIpD,EAEA+4D,iCAAkC,SAAUvwD,GAMzC,OALkBgwD,EAAmBp2D,QAAQtD,GACnCA,EAAEm8B,WAAWpsB,UAAYrG,IAChCjK,KAAKO,GACEA,EAAE45D,kBAGf,EAEAM,YAAa,WACV,OAAOv5D,KAAKs5D,iCAAiC,QAChD,EAEAE,SAAU,WACP,OAAOx5D,KAAKs5D,iCAAiC,UAChD,EAEAT,MAAO,WACJ,OAAO74D,KAAKs5D,iCAAiC,OAChD,EAEAG,UAAW,WACR,OAAOz5D,KAAKs5D,iCAAiC,MAChD,EAEAx9B,qBAAsB,SAAUH,GAG7B,IAAIl5B,EAAM,KACV,GAAIk5B,EAAQ+R,eAAegsB,iBAAkB,CAC1C,IAAIx/C,EAAMyhB,EAAQ+R,eAAegsB,iBAAiB,GAC9Cx/C,IACDzX,EAAMyX,EAAIy/C,MAEhB,CAOA,OAJKl3D,IACFA,EAAMk5B,EAAQ5yB,MAGV+vD,EAAgBr2D,EAC1B,oBCtIH,IAAI2a,EAAY,EAAQ,OAExBzd,EAAOC,QAAU,cAAgCwd,EAC9C,WAAAtd,CAAYud,EAAYqF,EAASniB,EAAI4nC,GAClCpoC,MAAM,CAAC,SAAUQ,GAEjBP,KAAKw7B,SAAW2M,GAAiB,CAAE1lC,IAAK,OAAQsb,KAAM,QAKtD/d,KAAK6f,WAAWxC,GAEhBrd,KAAK0iB,QAAUA,EACV1iB,KAAKsf,YACPtf,KAAKsf,UAAYoD,EAAQzjB,IAQ5Be,KAAK45D,MAAQ,IAChB,CAMA,UAAA/5C,CAAWxC,GAURrd,KAAKf,GAAKoe,EAAWpe,GACrBe,KAAK4L,KAAOyR,EAAWzR,MAAQ,GAC/B5L,KAAK+I,KAAOsU,EAAWtU,MAAQ,uBAG/B/I,KAAKyC,IAAM4a,EAAW5a,KAAOzC,KAAKw7B,SAAS/4B,KAAO,QAClDzC,KAAKsf,UAAYjC,EAAWiC,WAAa,KACzCtf,KAAK2sC,UAAYtvB,EAAWsvB,WAAa,cACzC3sC,KAAK65D,cAAgBx8C,EAAWw8C,eAAiB,WAU7C75D,KAAKw7B,UAAYx7B,KAAKw7B,SAAS7Z,UAChC3hB,KAAKw7B,SAAS7Z,SAAS3b,SAASyuB,SACD,IAAjBpX,EAAWoX,GAAmBz0B,KAAKy0B,GAAK,KAC9Cz0B,KAAKy0B,GAAKpX,EAAWoX,EAAE,IAIlC10B,MAAM8f,WAAWxC,GAGZrd,KAAKwD,QACPxD,KAAKwD,MAAQxD,KAAK4L,KAExB,CAaA,KAAAhE,IAEQ5H,KAAKwD,OAASxD,KAAK4L,MAAqB,IAAb5L,KAAK4L,OAClC5L,KAAKwD,MAAQxD,KAAK4L,MAIrB,IAAIxK,EAAOrB,MAAM6H,QAsBjB,MApBmB,CAChB,KACA,OACA,OACA,YACA,YACA,gBACA,OAEU5B,SAAS0b,IACnBtgB,EAAKsgB,GAAK1hB,KAAK0hB,EAAE,IAIhB1hB,KAAKw7B,UAAYx7B,KAAKw7B,SAAS7Z,UAChC3hB,KAAKw7B,SAAS7Z,SAAS3b,SAASyuB,IAC7BrzB,EAAKqzB,GAAKz0B,KAAKy0B,EAAE,IAIhBrzB,CACV,CAmBA,WAAA04D,CAAYC,EAAU1jD,EAAKiU,EAAS,IACjCtqB,KAAKwK,IAAIuvD,EAAU1jD,GACnB,IAAI/U,EAAQ,IAAIhC,MAAM,GAAGU,KAAK+I,SAASsN,KACnCiE,EAAO,CAAE60B,KAAMnvC,MAMnB,OALK0F,MAAMC,QAAQ2kB,KAASA,EAAS,CAACA,IACtCA,EAAOtkB,SAAS2oB,IACbrU,EAAKqU,GAAS3uB,KAAK2uB,EAAM,IAE5B3uB,KAAKO,GAAGoJ,OAAO2sB,QAAQh1B,EAAOgZ,GACvB9Y,QAAQsI,OAAOxI,EACzB,CAYA,SAAA04D,CAAU94D,EAASs6B,EAAUtyB,GAiB1B,GAhBAsyB,EAAWA,GAAY,CAAC,EACnBtyB,IACFA,EAAMsyB,EACNA,EAAW,CAAC,EAGRx7B,KAAKw7B,UAAYx7B,KAAKw7B,SAASy+B,gBAChCj6D,KAAKw7B,SAASy+B,eAAej0D,SAASC,IACnCu1B,EAASv1B,GAAK,IAAI,KAK3B/E,EAAQg5D,UAAYh5D,EAAQg5D,WAAa,CAAC,GAGrCh5D,EAAQg5D,UAAUl6D,KAAK2sC,WAAY,CAKrC,IAAK,IAAIrf,KAJTpsB,EAAQg5D,UAAUl6D,KAAK2sC,WAAa,CACjC7kB,aAAa,EACbpd,OAAQ,eAEG8wB,EACXt6B,EAAQg5D,UAAUl6D,KAAK2sC,WAAWrf,GAAKkO,EAASlO,GAEnD,IAAK,IAAIrnB,KAAKiD,EACXhI,EAAQg5D,UAAUl6D,KAAK2sC,WAAW1mC,GAAKiD,EAAIjD,EAEjD,CACH,CAOA,SAAAk0D,GACG,OAAO,CACV,CAQA,GAAA3vD,CAAIuvD,KAAaK,GACd,IAAI32D,EAAO,GAAGzD,KAAK2sC,eAChB3sC,KAAK4L,KAAO5L,KAAK4L,KAAO5L,KAAKyC,SAC1B23D,EAAQhxD,KAAK,OACnB2wD,EAASvvD,IAAIpD,KAAK3D,EACrB,CAQA,MAAA42D,GACG,OAAOr6D,KAAK0iB,QAAQurB,oBAAoBjuC,KAAK65D,cAChD,CAQA,OAAAS,CAAQP,GACL,OAAOA,EAAS74D,QAAQg5D,UAAUl6D,KAAK2sC,UAC1C,CASA,SAAA4tB,CAAUR,GACP,IAAIQ,EAAY,GAEZC,EAAeT,EAASU,mBAAmBz6D,KAAK2sC,WACpD,IAAK6tB,EAAc,CAChB,IAAIl5D,EAAQ,IAAIhC,MACb,2DAA2DU,KAAK2sC,cAGnE,OADA3sC,KAAK06D,QAAQX,EAAUz4D,GAChB,IACV,CAUA,IAAIq5D,EAAYH,EAAa,kBAC7B,IAAKG,EAAW,CACb,IAAIr5D,EAAQ,IAAIhC,MACb,gEAAgEU,KAAK2sC,cAIxE,OAFA3sC,KAAKO,GAAGoJ,OAAO2sB,QAAQh1B,EAAO,CAAE6tC,KAAMnvC,OACtCA,KAAK06D,QAAQX,EAAUz4D,GAChB,IACV,CAEKoE,MAAMC,QAAQg1D,KAChBA,EAAY,CAACA,IAGhB,IAAIC,EAAiBC,IAIlB,IAAIC,EAAUf,EAASU,mBAAmBI,EAAY,OACtD,GAAKC,EAAL,CAEA,IAAIC,EAAYD,EAAqB,YAAa,UAC7CC,IAEAr1D,MAAMC,QAAQo1D,KAChBA,EAAY,CAACA,IAGhBA,EAAU/0D,SAASg1D,IAChB,IAAIC,EAAaj7D,KAAK0iB,QAAQurB,oBAAoB+sB,GAClD,GAAIC,EACGV,GACDA,EAAUnzD,KAAK6zD,OAEd,CACJ,IAAI35D,EAAQ,IAAIhC,MACb,8DAA8D07D,MAEjEh7D,KAAKO,GAAGoJ,OAAO2sB,QAAQh1B,EAAO,CAAE6tC,KAAMnvC,OACtCA,KAAK06D,QAAQX,EAAUz4D,GACvBi5D,EAAY,IACf,KAtBiB,CAuBlB,EAOL,OAJAI,EAAU30D,SAAS0b,IAChBk5C,EAAcl5C,EAAE,IAGZ64C,CACV,CAQA,OAAAG,CAAQX,EAAUz4D,GACf,GAAIA,EAAO,CACR,IAAImC,EAAO,GAAGnC,EAAMiG,aACpBvH,KAAKwK,IAAIuvD,EAAUt2D,EACtB,CACczD,KAAKs6D,QAAQP,GACnBrvD,OAAS,OACpB,CAUA,iBAAAkkC,GACG,OAAO,IACV,CAQA,WAAAJ,CAAYurB,EAAUt3D,GACnB,OAAO,IACV,CAQA,kBAAA4sC,GACG,OAAO,IACV,CAQA,qBAAA6rB,CAAsBnB,GACnB,IAAIoB,EAAiBn7D,KAAK0iB,QAAQksB,kBAAkB5uC,MAChDo7D,EAAuB,CAAC,EAO5B,OANAD,EAAen1D,SAAS0b,IACrB05C,EAAqB15C,EAAEjf,KAAOzC,KAAK0iB,QAAQ8rB,YAAYxuC,KAAM,CAC1D+5D,EACAr4C,EAAEjf,KACH,IAEE24D,CACV,CAWA,KAAAtqD,CAAMipD,GAEH,IAAIO,EAAUt6D,KAAKs6D,QAAQP,GAItBO,EAKoB,aAAlBA,EAAQ5vD,QAA2C,SAAlB4vD,EAAQ5vD,gBAEnCqvD,EAAS74D,QAAQg5D,UAAUl6D,KAAK2sC,WAGvC3sC,KAAKg6D,UAAUD,EAAS74D,SAGTlB,KAAKs6D,QAAQP,GACnBsB,WAAaf,EACtBt6D,KAAKwK,IAAIuvD,EAAU,qCAdtB/5D,KAAKg6D,UAAUD,EAAS74D,QAiB9B,CAOA,cAAAo6D,CAAevB,GACE/5D,KAAKs6D,QAAQP,GACnBrvD,OAAS,WACpB,CAQA,WAAA6wD,CAAYxB,EAAUx0D,GACnBA,EAASA,GAAU,CAAC,EACpB,IAAI+0D,EAAUt6D,KAAKs6D,QAAQP,GAC3B,IAAK,IAAI9zD,KAAKV,EACX+0D,EAAQr0D,GAAKV,EAAOU,EAE1B,CAQA,iBAAAu1D,CAAkBzB,GACf,IAAIH,EAAQ55D,KAAKs6D,QAAQP,GACzB,OAAIH,EACsB,aAAhBA,EAAMlvD,QAAyC,SAAhBkvD,EAAMlvD,QAG5CrJ,QAAQqF,KACL,4FACAqzD,GAGH/5D,KAAKg6D,UAAUD,EAAS74D,SACjBlB,KAAKw7D,kBAAkBzB,GAEpC,CAMA,cAAA3tB,GAAkB,CAElB,iBAAIqvB,GAMD,OAJGz7D,KAAK0iB,QAAQtM,UACTslD,GACEA,GAAQA,EAAKlgC,UAAuC,UAA3BkgC,EAAKlgC,SAASpsB,YACxC,EAEX,CAEA,oBAAIusD,GACD,OAAO37D,KAAK0iB,QAAQ6rB,uBAAuBvuC,KAC9C,CAEA,wBAAI47D,GACD,MAAMC,EAAY77D,KAAKy7D,cAAc,GACrC,OAAKI,EAEE77D,KAAKO,GAAGoL,WAAWkwD,EAAUntC,UAFb,IAG1B,CAEA,uBAAIotC,GACD,IAGIptC,EAHAqtC,EAAW/7D,KAAK27D,iBAAiB,GACrC,OAAKI,GAKCrtC,EADE,+BADAqtC,EAAShzD,KAEAgzD,EAASC,MAAQD,EAASC,MAAMttC,SAAW,KAI3CqtC,EAASrtC,SAInB1uB,KAAKO,GAAGoL,WAAW+iB,IAbJ,IAczB,oBC/eH,MAAMutC,EAAmB,EAAQ,OAEjC,IAAIC,EAA2B,CAC5B9sD,SAAU,MAQVkb,OAAQ,GAIRvM,KAAM,OAKNtb,IAAK,OAKR9C,EAAOC,QAAU,cAAmCq8D,EACjD,WAAAn8D,CAAYud,EAAYqF,EAASniB,GAC9B8c,EAAWtU,KAAOsU,EAAWtU,MAAQ,mBACrChJ,MAAMsd,EAAYqF,EAASniB,EAAI27D,EAGlC,CAGA,eAAO1gC,GACJ,OAAO0gC,CACV,CAEA,qBAAOjD,GACJ,MAAO,CACJz1D,MAAO,sBACP24D,WAAY,6BACZC,UAAW,gCACXlD,OAAQ,CACLnwD,KAAM,gBACNowD,oBAAqB,iCAG9B,CA4BA,SAAAa,CAAU94D,EAASgI,GAKhBnJ,MAAMi6D,UAAU94D,EAJC,CACdm7D,WAAW,GAGuBnzD,EACxC,CAOA,SAAAixD,GACG,OAAO,CACV,CASA,SAAAI,CAAUR,GAEP,MAAO,EACV,oBCvGH,MAAMkC,EAAmB,EAAQ,OAEjC,IAAIK,EAAoC,CACrCltD,SAAU,UAQV2O,KAAM,eAKNk8C,eAAgB,GAIhBx3D,IAAK,mBAILkf,SAAU,CAAC,eAMdhiB,EAAOC,QAAU,cAA4Cq8D,EAC1D,WAAAn8D,CAAYud,EAAYqF,EAASniB,GAC9B8c,EAAWtU,KAAOsU,EAAWtU,MAAQ,4BACrChJ,MAAMsd,EAAYqF,EAASniB,EAAI+7D,EAGlC,CAGA,eAAO9gC,GACJ,OAAO8gC,CACV,CAEA,qBAAOrD,GACJ,MAAO,CACJz1D,MAAO,oBACP24D,WAAY,iCACZC,UAAW,wBACXlD,OAAQ,CACLnwD,KAAM,yBAGf,CAEA,UAAA8W,CAAWxC,GASRtd,MAAM8f,WAAWxC,GAEjBrd,KAAK8zC,WAAa9zC,KAAK8zC,YAAc,CAAC,CACzC,oBChEH,MAAMmoB,EAAmB,EAAQ,OAEjC,IAAIM,EAA6B,CAC9BntD,SAAU,OAQVkb,OAAQ,CACL,KACA,OACA,UACA,UACA,WACA,aACA,UACA,YACA,iBACA,oBAKHvM,KAAM,QAINtb,IAAK,SAKR9C,EAAOC,QAAU,cAAqCq8D,EACnD,WAAAn8D,CAAYud,EAAYqF,EAASniB,GAC9B8c,EAAWtU,KAAOsU,EAAWtU,MAAQ,qBACrChJ,MAAMsd,EAAYqF,EAASniB,EAAIg8D,EAGlC,CAGA,eAAO/gC,GACJ,OAAO+gC,CACV,CAEA,qBAAOtD,GACJ,MAAO,CACJz1D,MAAO,YACP24D,WAAY,yBACZC,UAAW,iBACXlD,OAAQ,CACLnwD,KAAM,iBAGf,CAEA,UAAA8W,CAAWxC,GASRtd,MAAM8f,WAAWxC,GAEjBk/C,EAA2BjyC,OAAOtkB,SAAS0b,IACxC1hB,KAAK0hB,GAAKrE,EAAWqE,EAAE,GAE7B,CAkBA,KAAA9Z,GACG,IAAIxG,EAAOrB,MAAM6H,QAMjB,OAJA20D,EAA2BjyC,OAAOtkB,SAAS0b,IACxCtgB,EAAKsgB,GAAK1hB,KAAK0hB,EAAE,IAGbtgB,CACV,CA8BA,SAAA44D,CAAU94D,EAASgI,GAChB,IAAIszD,EAAa,CACdpvB,GAAI,GACJE,KAAM,GACNmvB,QAASz8D,KAAKy8D,QACd/4D,QAAS1D,KAAK0D,SAGjB3D,MAAMi6D,UAAU94D,EAASs7D,EAAYtzD,EACxC,oBC5IH,MAAM+yD,EAAmB,EAAQ,OAEjC,IAAIS,EAAoC,CACrCttD,SAAU,KAQV2O,KAAM,eAINk8C,eAAgB,GAIhBx3D,IAAK,4BAILkf,SAAU,CACP,cACA,oBACA,oBACA,4BACA,WACA,iBACA,YACA,gBACA,wBACA,WACA,yBACA,iBACA,YACA,mBAONhiB,EAAOC,QAAU,cAA4Cq8D,EAC1D,WAAAn8D,CAAYud,EAAYqF,EAASniB,GAC9B8c,EAAWtU,KACRsU,EAAWtU,MAAQ,kDACtBhJ,MAAMsd,EAAYqF,EAASniB,EAAIm8D,EAGlC,CAGA,eAAOlhC,GACJ,OAAOkhC,CACV,CAEA,qBAAOzD,GACJ,OAAO,IACV,oBC5DH,MAAMgD,EAAmB,EAAQ,OAEjC,IAAIU,EAA4B,CAC7BvtD,SAAU,KAQV2O,KAAM,eAINk8C,eAAgB,GAIhBx3D,IAAK,oBAILkf,SAAU,CACP,iBACA,WACA,WACA,YACA,eACA,cACA,gBACA,gBACA,kBACA,iBACA,iBACA,YACA,eACA,gBACA,eACA,gBACA,kBACA,sBACA,iBACA,mBAONhiB,EAAOC,QAAU,cAAoCq8D,EAClD,WAAAn8D,CAAYud,EAAYqF,EAASniB,GAC9B8c,EAAWtU,KACRsU,EAAWtU,MAAQ,0CACtBhJ,MAAMsd,EAAYqF,EAASniB,EAAIo8D,EAGlC,CAGA,eAAOnhC,GACJ,OAAOmhC,CACV,CAEA,qBAAO1D,GACJ,OAAO,IACV,oBClEH,MAAMgD,EAAmB,EAAQ,OAEjC,IAAIW,EAAgC,CACjCxtD,SAAU,KAQV2O,KAAM,eAINk8C,eAAgB,GAIhBx3D,IAAK,wBAILkf,SAAU,CACP,qBACA,eACA,gBACA,WACA,gBACA,oBACA,iBACA,mBACA,iBACA,oBACA,oBACA,oBACA,kBACA,sBACA,wBACA,YACA,iBACA,eACA,qBACA,sBACA,uBAONhiB,EAAOC,QAAU,cAAwCq8D,EACtD,WAAAn8D,CAAYud,EAAYqF,EAASniB,GAC9B8c,EAAWtU,KACRsU,EAAWtU,MAAQ,8CACtBhJ,MAAMsd,EAAYqF,EAASniB,EAAIq8D,EAGlC,CAGA,eAAOphC,GACJ,OAAOohC,CACV,CAEA,qBAAO3D,GACJ,OAAO,IACV,oBCnEH,MAAMgD,EAAmB,EAAQ,OAEjC,IAAIY,EAA8B,CAC/BztD,SAAU,KAQV2O,KAAM,UAINk8C,eAAgB,GAIhBx3D,IAAK,sBAILkf,SAAU,CACP,oBACA,cACA,gBACA,WACA,kBAEA,wBACA,iBACA,YACA,wBACA,qBACA,iBACA,YACA,gBAONhiB,EAAOC,QAAU,cAAsCq8D,EACpD,WAAAn8D,CAAYud,EAAYqF,EAASniB,GAC9B8c,EAAWtU,KACRsU,EAAWtU,MAAQ,4CACtBhJ,MAAMsd,EAAYqF,EAASniB,EAAIs8D,EAGlC,CAGA,eAAOrhC,GACJ,OAAOqhC,CACV,CAEA,qBAAO5D,GACJ,OAAO,IACV,oBC5DH,MAAMgD,EAAmB,EAAQ,OAEjC,IAAIa,EAAoB,CACrB1tD,SAAU,KAQV2O,KAAM,aAINk8C,eAAgB,GAIhBx3D,IAAK,YAILkf,SAAU,CAAC,gBAGdhiB,EAAOC,QAAU,cAAgCq8D,EAC9C,WAAAn8D,CAAYud,EAAYqF,EAASniB,GAC9B8c,EAAWtU,KAAOsU,EAAWtU,MAAQ,iCACrChJ,MAAMsd,EAAYqF,EAASniB,EAAIu8D,EAGlC,CAGA,eAAOthC,GACJ,OAAOshC,CACV,CAEA,qBAAO7D,GACJ,OAAO,IACV,CAUA,iBAAArqB,GACG,MAAMprC,EAAQ,GAAGxD,KAAKwD,eAWtB,OAPKxD,KAAK+8D,WACP/8D,KAAKg9D,SAAWh9D,KAAKO,GAAGw5B,UAAU,CAAC,GACnC/5B,KAAK+8D,SAAW/8D,KAAKO,GAAGq5B,SACrB,CAAEn3B,IAAK,SAAUmJ,KAAMpI,EAAOA,SAC9BxD,KAAKg9D,WAGJ,CACJv6D,IAAK,GAAGzC,KAAKf,WACbuE,QACAmrB,MAAO3uB,KAAK+8D,SAElB,oBCzDH,MAAMd,EAAmB,EAAQ,OAEjC,IAAIgB,EAA+B,CAChC7tD,SAAU,OAQV2O,KAAM,eAINk8C,eAAgB,GAIhBx3D,IAAK,cAILkf,SAAU,IAMbhiB,EAAOC,QAAU,cAAuCq8D,EACrD,WAAAn8D,CAAYud,EAAYqF,EAASniB,GAC9B8c,EAAWtU,KAAOsU,EAAWtU,MAAQ,uBACrChJ,MAAMsd,EAAYqF,EAASniB,EAAI08D,EAGlC,CAGA,eAAOzhC,GACJ,OAAOyhC,CACV,CAEA,qBAAOhE,GACJ,MAAO,CACJz1D,MAAO,eACP24D,WAAY,4BACZC,UAAW,oBACXlD,OAAQ,CACLnwD,KAAM,oBAGf,oBC5DH,MAAMkzD,EAAmB,EAAQ,OAE3BiB,EAA2C,CAC9C9tD,SAAU,KAQV2O,KAAM,cAINk8C,eAAgB,GAIhBx3D,IAAK,sBAILkf,SAAU,CAAC,UAMdhiB,EAAOC,QAAU,cAAmD,EAGjE,WAAAE,CAAYud,EAAYqF,EAASniB,GAC9B8c,EAAWtU,KACRsU,EAAWtU,MAAQ,2CACtBhJ,MAAMsd,EAAYqF,EAASniB,EAAI28D,EAGlC,CAGA,eAAO1hC,GACJ,OAAO0hC,CACV,CAEA,qBAAOjE,GACJ,OAAO,IACV,CAUA,iBAAArqB,GACG,MAAO,CACJnsC,IAAK,GAAGzC,KAAKf,SACbuE,MAAO,GAAGxD,KAAKwD,aAErB,oBChEH,MAAMy4D,EAAmB,EAAQ,OAEjC,IAAIkB,EAAuB,CACxB/tD,SAAU,KAQV2O,KAAM,cAINk8C,eAAgB,GAIhBx3D,IAAK,eAILkf,SAAU,CACP,WACA,cACA,WACA,aACA,iBAINhiB,EAAOC,QAAU,cAA+Bq8D,EAC7C,WAAAn8D,CAAYud,EAAYqF,EAASniB,GAC9B8c,EAAWtU,KAAOsU,EAAWtU,MAAQ,oCACrChJ,MAAMsd,EAAYqF,EAASniB,EAAI48D,GAE/Bn9D,KAAK4hC,QAAU,EAGlB,CAGA,eAAOpG,GACJ,OAAO2hC,CACV,CAEA,qBAAOlE,GACJ,OAAO,IACV,CAEA,UAAAp5C,CAAWxC,GACRtd,MAAM8f,WAAWxC,GAEjBrd,KAAKo9D,SAAWz2D,KAAKiE,MAAMyS,EAAW+/C,WAAY,EACrD,CAEA,gBAAIC,GACD,IAAIxB,EAAY,KACZyB,EAAct9D,KAAK0iB,QAGvB,MAAQm5C,GAAayB,GAClBzB,EAAYyB,EAAYlnD,UACpBslD,GAAqC,SAA5BA,GAAMlgC,UAAUpsB,WAC3B,GAGFkuD,EAAcA,EAAY56C,QAG7B,OAAOm5C,CACV,CAEA,mBAAI0B,GACD,OAAOv9D,KAAK0iB,QAAQ6rB,uBAAuBvuC,MAAM,EACpD,CAEA,wBAAI47D,GACD,IAAIC,EAAY77D,KAAKq9D,aACrB,OAAKxB,EAEc77D,KAAKO,GAAGoL,WAAWkwD,EAAUntC,UAFzB,IAI1B,CAEA,uBAAIotC,GACD,IAGIptC,EAHAqtC,EAAW/7D,KAAKu9D,gBACpB,OAAKxB,GAKCrtC,EADE,+BADAqtC,EAAShzD,KAEAgzD,EAASC,MAAQD,EAASC,MAAMttC,SAAW,KAI3CqtC,EAASrtC,SAInB1uB,KAAKO,GAAGoL,WAAW+iB,IAbJ,IAczB,CAEA,eAAI8uC,GACD,IAAI9xD,EAAM1L,KAAK47D,qBACf,OAAKlwD,EAEEA,EAAI4e,QAAQ5I,GAAMA,EAAEziB,IAAMe,KAAKy9D,eAAc,GAFnC,IAGpB,CAUA,iBAAA7uB,GACG,MAAO,CACJ,CACGnsC,IAAK,GAAGzC,KAAKf,UACbuE,MAAO,GAAGxD,KAAKwD,+BACfmrB,MAAO,CACJ1vB,GAAIe,KAAKf,GACT6lB,OAAQ,CAAE7lB,GAAIe,KAAK0uB,UACnBjsB,IAAK,iBACLwf,WAAY,QAEf6C,OAAQ9kB,KAAK0uB,SACbze,KAAK,GAGd,oBCtIH,MAAMgsD,EAAmB,EAAQ,OAE3ByB,EAAc,EAAQ,OAEtBC,EAAoC,CACvCvuD,SAAU,KAQV2O,KAAM,eAINk8C,eAAgB,GAIhBx3D,IAAK,mBAILkf,SAAU,CAAC,UAMdhiB,EAAOC,QAAU,cAA4Cq8D,EAC1D,WAAAn8D,CAAYud,EAAYqF,EAASniB,GAC9B8c,EAAWtU,KAAOsU,EAAWtU,MAAQ,6BACrChJ,MAAMsd,EAAYqF,EAASniB,EAAIo9D,EAGlC,CAGA,eAAOniC,GACJ,OAAOmiC,CACV,CAEA,qBAAO1E,GACJ,OAAO,IACV,CAEA,UAAAp5C,CAAWxC,GACRtd,MAAM8f,WAAWxC,GAGjBrd,KAAK49D,aAAe,GAGhB59D,KAAKg8D,QACNh8D,KAAKg8D,MAAQ0B,EAAYG,eAAe79D,KAAKg8D,MAAOh8D,KAAMA,KAAKO,IAErE,CAQA,KAAAqH,GACG,MAAMxG,EAAOrB,MAAM6H,QAKnB,OAFI5H,KAAKg8D,QAAO56D,EAAK46D,MAAQh8D,KAAKg8D,MAAMp0D,SAEjCxG,CACV,CAEA,kBAAA08D,CAAmBpyD,GAChB1L,KAAK49D,aAAax2D,KAAKsE,EAC1B,CA+BA,iBAAAkjC,GAEG,IAAItkB,EAAS,KAcb,OAZItqB,KAAK49D,aAAah8D,OAAS,IAC5B0oB,EAAS,GAETtqB,KAAK49D,aAAa53D,SAASyuB,IACxB,MAAM+a,EAAQ/a,EAAEspC,iBAAiB/9D,KAAKf,GAAIe,KAAKwD,OAE3CgsC,GACDllB,EAAOljB,KAAKooC,EACf,KAICllB,CACV,CAQA,WAAAkkB,CAAYurB,EAAUt3D,GACnB,MAAMuJ,EAAQvJ,EAAIihB,MAAM,KAExB,OAAI1X,EAAM,KAAOhM,KAAKf,GACHe,KAAKs6D,QAAQP,GAEd/tD,EAAM,IAGjB,IACV,oBC/IH,MAAMiwD,EAAmB,EAAQ,OAEjC,IAAI+B,EAAqB,CACtB5uD,SAAU,OAQV2O,KAAM,eAINk8C,eAAgB,GAIhBx3D,IAAK,aAILkf,SAAU,CACP,WACA,cACA,kBACA,aACA,aAIN,MAAMs8C,EAAS,CAEf,EAGAt+D,EAAOC,QAAU,cAA6Bq8D,EAC3C,WAAAn8D,CAAYud,EAAYqF,EAASniB,GAC9B8c,EAAWtU,KAAOsU,EAAWtU,MAAQ,kCACrChJ,MAAMsd,EAAYqF,EAASniB,EAAIy9D,EAGlC,CAGA,eAAOxiC,GACJ,OAAOwiC,CACV,CAEA,qBAAO/E,GAEJ,MAAO,CACJz1D,MAAO,cACP24D,WAAY,0BACZC,UAAW,gCACXlD,OAAQ,CACLnwD,KAAM,kBACNm1D,YAAY,GAGrB,CAEA,UAAAr+C,CAAWxC,GACRtd,MAAM8f,WAAWxC,GAGjBrd,KAAKm+D,SAA4B,MAAjBn+D,KAAKm+D,UAA0Bx3D,KAAKiE,MAAM5K,KAAKm+D,UAE/D,IAAI7xB,EAAetsC,KAAKusC,WAAa,CAAC,EACtCvsC,KAAKo+D,mBAAqB,GAC1Bp+D,KAAKusC,UAAY,CAAC,GACjBlvB,EAAWmvB,YAAc,IAAIxmC,SAASymC,IACpC,IAAIpO,EAAMr+B,KAAKO,GAAG+6B,kBAAkBmR,EAAKzsC,MACrCq+B,EACDr+B,KAAKusC,UAAUE,GAAOpO,EAIlBiO,EAAaG,GACdzsC,KAAKusC,UAAUE,GAAOH,EAAaG,GAEnCzsC,KAAKo+D,mBAAmBh3D,KAAKqlC,EAEnC,IAGHzsC,KAAKo+D,mBAAmBp4D,SAASymC,IAC9B,IAAIhqC,EAAM,WAAWzC,KAAKsf,mBAAmBtf,KAAKwD,gDAAgDipC,KAClG,IAAKwxB,EAAOx7D,GAAM,CACf,IAAItB,EAAM,IAAI7B,MAAMmD,GACpBzC,KAAKO,GAAGoJ,OAAO2sB,QAAQn1B,EAAK,CAAEk9D,YAAar+D,KAAKf,GAAIwtC,QACpDwxB,EAAOx7D,IAAO,CACjB,KAGHzC,KAAK0sC,aAAervB,EAAWihD,iBAAmB,CAAC,CACtD,CAaA,KAAA12D,GACG,IAAIxG,EAAOrB,MAAM6H,QAEjBxG,EAAKorC,WAAa,GAClB,IAAK,IAAIntC,KAAKW,KAAKusC,UAChBnrC,EAAKorC,WAAWplC,KAAKpH,KAAKusC,UAAUltC,GAAGJ,IAK1C,OAFAmC,EAAKk9D,gBAAkBt+D,KAAK0sC,aAErBtrC,CACV,CAYA,iBAAAwtC,CAAkBN,GACf,GAAwB,MAApBtuC,KAAKu+D,YAAqB,MAAO,GAGrC,IAAIC,EAAgBx+D,KAAK0iB,QAAQksB,kBAAkB5uC,OAAS,GAGxDy+D,EAAeD,EAAc77D,QAC7B2xC,GAAQA,EAAI7xC,MAAQzC,KAAKu+D,cAC3B,GAGEG,EAAwBF,EAAc77D,QACtC2xC,GAA4C,oBAAnCA,GAAK3lB,OAAOlsB,KAAO6xC,GAAK3lB,SAGrC,GAAoB,MAAhB8vC,EAAsB,MAAO,GAEjC,IAAIv6D,EAAS,GAIVu6D,EAAa9vC,OACa,iBAA1B8vC,EAAa9vC,MAAMlsB,KACnBg8D,EAAa9vC,MAAMtB,gBACnBoxC,EAAa9vC,MAAMtB,eAAe/C,QAElCpmB,EAAOkD,KAAK,CACT3E,IAAK,GAAGzC,KAAKf,UACbuE,MAAO,GAAGxD,KAAKwD,wBACfshB,OAAQ25C,EAAa9vC,MAAMtB,iBAG9BoxC,EAAa9vC,MAAMtB,eAAe/C,SAAStkB,SAAS0b,IACjDxd,EAAOkD,KAAK,CACT3E,IAAK,GAAGzC,KAAKf,MAAMyiB,EAAEziB,KACrBuE,MAAO,GAAGxD,KAAKwD,sBAAsBke,EAAEle,QACvCmrB,MAAOjN,EACPoD,OAAQpD,EAAEoD,QACX,KAKL5gB,EAAOkD,KAAK,CACT3E,IAAKg8D,EAAa9vC,MACb,GAAG3uB,KAAKf,MAAMw/D,EAAa9vC,MAAM1vB,KACjC,GAAGe,KAAKf,gBACbuE,MAAO,GAAGxD,KAAKwD,qBACfmrB,MAAO8vC,EAAa9vC,MACpB7J,OAAQ25C,EAAa35C,SAI3B45C,EAAsB14D,SAASsuC,IAC5BpwC,EAAOkD,KAAK,CACT3E,IAAK,GAAG6xC,EAAI7xC,KAAO6xC,EAAIr1C,KACvBuE,MAAO,wBAAwB8wC,EAAI9wC,QACnCmrB,MAAO2lB,EAAI3lB,MACX7J,OAAQwvB,EAAIxvB,QACb,IAIL,IAAI65C,EAAiB3+D,KAAK0iB,QAAQksB,kBAAkBzkC,KACjDnK,KACAsuC,GAMH,OAJIqwB,GAAkBA,EAAe/8D,OAAS,IAC3CsC,EAASA,EAAOyV,OAAOglD,IAGnBz6D,CACV,CAUA,WAAAsqC,CAAYF,EAAazlC,GACtB,IAEIzH,EAFA24D,EAAWlxD,EAAO,GAClBpG,EAAMoG,EAAO,GAGjB,GAAIkxD,GAAYt3D,GAAKm8D,aAAa5+D,KAAKf,IAAK,CACzC,IAAI0zC,EAAUlwC,EAAIihB,MAAM,KAAK,GACzB42C,EAAUt6D,KAAKs6D,QAAQP,GACvB8E,EAAYvE,EAAUA,EAAQl5D,KAAO,KAGzC,GAFAA,EAAOy9D,EAEHA,GAAalsB,EAAS,CACvB,IAAI8rB,GACDz+D,KAAK0iB,QAAQksB,kBAAkB5uC,OAAS,IACzC2C,QAAQ2xC,GAAQA,EAAI7xC,KAAOzC,KAAKu+D,cAAa,GAEf,iBAA5BE,GAAc9vC,OAAOlsB,MACjBiD,MAAMC,QAAQk5D,KAAYA,EAAY,CAACA,IAG5Cz9D,EAAOy9D,EAAU//D,KAAKsqB,IACnB,GAAe,QAAXupB,GAAgC,MAAXA,EACtB,OAAOvpB,EAAKznB,MAAQynB,EAAKnqB,IAAMmqB,EAC3B,GAAIq1C,EAAa9vC,MAAMtB,eAAgB,CAC3C,IAAIyxC,EAAcL,EAAa9vC,MAAMtB,eAAe/C,QAChD5I,GAAMA,EAAEziB,IAAM0zC,IAChB,GACF,OAAImsB,EAAoB11C,EAAK01C,EAAY78C,YAC7BmH,CACf,KAGT,CACH,CAWA,OARI1jB,MAAMC,QAAQvE,KAAOA,EAAOA,EAAKuB,QAAQ2qB,GAAW,MAALA,KAEvC,MAARlsB,GAA+B,GAAfA,EAAKQ,SACtBR,EAAOpB,KAAK0iB,QAAQ8rB,YAAYrkC,KAAKnK,KAAMsuC,EAAazlC,IAE/C,MAARzH,GAA+B,GAAfA,EAAKQ,SACtBR,EAAOpB,KAAK0iB,QAAQ8rB,YAAYxuC,KAAM6I,IAElCzH,CACV,CAEA,gBAAAstC,IAAoB7lC,GACjB,OAAO7I,KAAK0iB,QAAQgsB,iBAAiBvkC,KAAKnK,QAAS6I,EACtD,CAEA,gCAAAomC,IAAoCpmC,GACjC,OAAO7I,KAAK0iB,QAAQusB,iCAAiC9kC,KAClDnK,QACG6I,EAET,CAEA,mCAAAimC,IAAuCjmC,GACpC,OAAO7I,KAAK0iB,QAAQosB,oCAAoC3kC,KACrDnK,QACG6I,EAET,CAcA,WAAA25B,CAAY9/B,GACT,OAAO1C,KAAK0iB,QAAQ8f,YAAYr4B,KAAKnK,KAAM0C,EAC9C,CAQA,sBAAAuqC,CAAuBC,GACpB,GAAKA,EAEL,OAAOltC,KAAK0iB,QAAQuqB,uBAAuB9iC,KAAKnK,KAAMktC,EACzD,CAQA,mBAAAC,CAAoBD,GACjB,GAAKA,EAEL,OAAOltC,KAAK0iB,QAAQyqB,oBAAoBhjC,KAAKnK,KAAMktC,EACtD,CAQA,mBAAAG,CAAoBH,GACjB,GAAKA,EAEL,OAAOltC,KAAK0iB,QAAQ2qB,oBAAoBljC,KAAKnK,KAAMktC,EACtD,CAQA,gBAAAK,CAAiB5R,GACTA,GAEL37B,KAAK0iB,QAAQ6qB,iBAAiBpjC,KAAKnK,KAAM27B,EAC5C,CAcA,uBAAA6R,CAAwB7R,GACrB,GAAKA,EAEL,OAAO37B,KAAK0iB,QAAQ8qB,wBAAwBrjC,KAAKnK,KAAM27B,EAC1D,CAQA,gBAAAkS,CAAiBlS,GACTA,GAEL37B,KAAK0iB,QAAQmrB,iBAAiB1jC,KAAKnK,KAAM27B,EAC5C,CASA,sBAAA4S,CAAuBD,GACpB,GAAKA,EAEL,OAAOtuC,KAAK0iB,QAAQ6rB,uBAAuBpkC,KAAKnK,KAAMsuC,EACzD,CAUA,QAAAl4B,CAAS1T,EAAK,MAAM,IACjB,OAAO1C,KAAK0iB,QAAQtM,SAASjM,KAAKnK,KAAM0C,EAC3C,CAQA,UAAAqrC,CAAWpS,GACHA,GAEL37B,KAAK0iB,QAAQqrB,WAAW5jC,KAAKnK,KAAM27B,EACtC,CAQA,mBAAAsS,CAAoBf,GACjB,OAAKA,EAEEltC,KAAK0iB,QAAQurB,oBAAoB9jC,KAAKnK,KAAMktC,GAFlC,IAGpB,CASA,aAAAgB,CAAch0B,GACNA,GAELla,KAAK0iB,QAAQwrB,cAAc/jC,KAAKnK,KAAMka,EACzC,oBCnbH,MAAM+hD,EAAmB,EAAQ,OAE3B8C,EAAc,EAAQ,OAE5B,IAAIC,EAAgC,CACjC5vD,SAAU,KAQV2O,KAAM,eAINk8C,eAAgB,CAAC,aAAc,oBAI/Bx3D,IAAK,WAILkf,SAAU,CAAC,MAAO,UAAW,gBAMhChiB,EAAOC,QAAU,cAA4Cq8D,EAC1D,WAAAn8D,CAAYud,EAAYqF,EAASniB,GAC9B8c,EAAWtU,KAAOsU,EAAWtU,MAAQ,6BACrChJ,MAAMsd,EAAYqF,EAASniB,EAAIy+D,EAGlC,CAGA,eAAOxjC,GACJ,OAAOwjC,CACV,CAEA,qBAAO/F,GACJ,OAAO,IACV,CAEA,UAAAp5C,CAAWxC,GASRtd,MAAM8f,WAAWxC,GAEjB,SAAS4hD,EAAWvzD,GACbA,GACDjM,OAAOD,KAAKkM,GAAK1F,SAASiB,IACT,SAAVyE,EAAIzE,GACLyE,EAAIzE,IAAK,EACS,QAAVyE,EAAIzE,GACZyE,EAAIzE,IAAK,EACgB,iBAAVyE,EAAIzE,IACnBg4D,EAAWvzD,EAAIzE,GAClB,GAGT,CACAg4D,CAAWj/D,KAAKk/D,YACnB,CA8CA,0BAAAC,GACG,IAAI70C,EAAStqB,KAAK0iB,QAAQksB,kBAAkB5uC,MAmD5C,OAlDIsqB,GAAUtqB,KAAKk/D,aAAel/D,KAAKk/D,YAAYvK,YAChD30D,KAAKk/D,YAAYvK,WAAW3uD,SAASk9B,IAC9BA,EAAEk8B,UACH90C,EAAO3nB,QAAQ8N,IACZ,GAAIA,EAAMke,OAAO1vB,IAAMikC,EAAEk8B,YACtBl8B,EAAE1/B,MAAQiN,EAAMke,MAAMnrB,MACtB0/B,EAAEzgC,IAAMgO,EAAMhO,IACVygC,EAAE9hC,MAAMmE,QAAUkL,EAAMke,MAAMhN,SAASpZ,SAAS,CACjD,IAAI82D,EAAO,GACX5uD,EAAMke,MAAMhN,SAASpZ,QAAQvC,SAASsuC,IACnC+qB,EAAKj4D,KAAK,CACP5D,MAAO8wC,EAAI7wC,KACX4N,MAAOijC,EAAIr1C,IACZ,IAELikC,EAAE9hC,KAAKmE,OAAS85D,CACnB,CACH,IAEKn8B,EAAEyxB,YAAczxB,EAAEyxB,WAAW/yD,SACrCshC,EAAEzgC,IAAMygC,EAAEo8B,KACVp8B,EAAEyxB,WAAW3uD,SAAS5G,IACnB,GAAIA,EAAEggE,UAAW,CAGd,IAAIG,EAAQj1C,EAAO3nB,QAAQ+e,GACjBA,EAAEjf,KAAOygC,EAAEo8B,OAClB,GACH,IAAKC,EAAO,OACZA,EAAMz6C,OAAOwF,SAAS3nB,QAAQ8N,IAC3B,GAAIA,GAAOxR,IAAMG,EAAEggE,YAChBhgE,EAAEoE,MAAQiN,EAAMjN,MAChBpE,EAAEqD,IAAMgO,EAAMwR,WACV7iB,EAAEgC,MAAMmE,QAAUkL,EAAMkR,SAASpZ,SAAS,CAC3C,IAAI82D,EAAO,GACX5uD,EAAMkR,SAASpZ,QAAQvC,SAASsuC,IAC7B+qB,EAAKj4D,KAAK,CACP5D,MAAO8wC,EAAI7wC,KACX4N,MAAOijC,EAAIr1C,IACZ,IAELG,EAAEgC,KAAKmE,OAAS85D,CACnB,CACH,GAEN,KAEN,IAGCr/D,KAAKk/D,WACf,CAUA,iBAAAtwB,GAEG,IAAIrmC,EAAU,GACdvI,KAAKk/D,YAAYvK,WAAW3uD,SAAS4uD,IACjB,UAAbA,EAAK7rD,MAAmC,SAAf6rD,EAAK4K,QAAqB5K,EAAK3nC,OACzD1kB,EAAQnB,KAAK,CACVnI,GAAI21D,EAAK3nC,MACTxpB,KAAMmxD,EAAKpxD,OAEjB,IAMH,IAAIi8D,EAAOz/D,KAAK2sC,UAKZ9K,EAAQ7hC,KAAKO,GAAGw5B,UAAU,CAAC,GAC3B2lC,EAAY,IAAIX,EACjB,CACG9/D,GAAI,GAAGwgE,qBACPj8D,MAAO,GAAGxD,KAAKwD,kBACfye,WAAY,GAAGw9C,qBACf99C,SAAU,CACPpZ,QAASA,IAGfs5B,GAUH,OAFA69B,EAAUz9C,WAAa,GAAGw9C,qBAEnB,CACJ,CACGh9D,IAAK,GAAGg9D,qBACRj8D,MAAO,GAAGxD,KAAKwD,kBACfmrB,MAAO+wC,EACP56C,OAAQ,MAGjB,CAQA,WAAA0pB,CAAYurB,EAAUt3D,GACnB,GAAIA,EAAK,CACN,IAAIuJ,EAAQvJ,EAAIihB,MAAM,KACtB,GAAI1X,EAAM,IAAMhM,KAAK2sC,UAElB,OADc3sC,KAAKs6D,QAAQP,GACZ/tD,EAAM,GAE3B,CACA,OAAO,IACV,oBCxOH,MAAMiwD,EAAmB,EAAQ,OAEjC,IAAI0D,EAA4B,CAC7BvwD,SAAU,OAQV2O,KAAM,OAINk8C,eAAgB,GAIhBx3D,IAAK,WAILkf,SAAU,IAMbhiB,EAAOC,QAAU,cAAoCq8D,EAClD,WAAAn8D,CAAYud,EAAYqF,EAASniB,GAC9B8c,EAAWtU,KAAOsU,EAAWtU,MAAQ,oBACrChJ,MAAMsd,EAAYqF,EAASniB,EAAIo/D,EAGlC,CAGA,eAAOnkC,GACJ,OAAOmkC,CACV,CAEA,qBAAO1G,GAEJ,MAAO,CACJz1D,MAAO,YACP24D,WAAY,yBACZC,UAAW,iBACXlD,OAAQ,CACLnwD,KAAM,iBAGf,CA8BA,SAAAixD,CAAU94D,EAASgI,GAMhBnJ,MAAMi6D,UAAU94D,EALC,CACdL,MAAO,GACP++D,GAAI,MAG8B12D,EACxC,mBCtGH,MAAM+yD,EAAmB,EAAQ,OAE3B4D,EAAoC,CACvCzwD,SAAU,KAQV2O,KAAM,cAINk8C,eAAgB,CAAC,aAAc,oBAI/Bx3D,IAAK,WAILkf,SAAU,CAAC,MAAO,UAAW,QAM1BA,EAAW,CACdm+C,IAAK,EACLC,QAAS,KACT19D,IAAK,IAGR1C,EAAOC,QAAU,cAA4Cq8D,EAC1D,WAAAn8D,CAAYud,EAAYqF,EAASniB,GAC9B,IAAK,MAAMkC,KAAOkf,EACftE,EAAW5a,GAAO4a,EAAW5a,IAAQkf,EAASlf,GACjD1C,MACGN,OAAO2vB,OACJ,CACGrmB,KAAM,iCAETsU,GAEHqF,EACAniB,EACAs/D,EAIN,CAGA,eAAOrkC,GACJ,OAAOqkC,CACV,CAEA,qBAAO5G,GACJ,OAAO,IACV,CAUA,iBAAArqB,GACG,MAAO,CACJ,CACGnsC,IAAK,GAAGzC,KAAKf,sBACbuE,MAAO,GAAGxD,KAAKwD,mBAGxB,oBChFH,MAAMy4D,EAAmB,EAAQ,OAE3B+D,EAAgC,CACnC5wD,SAAU,KAQV2O,KAAM,OAINk8C,eAAgB,CAAC,IAIjBx3D,IAAK,OAILkf,SAAU,CAAC,gBAMRA,EAAW,CAAC,EAElBhiB,EAAOC,QAAU,cAAwCq8D,EACtD,WAAAn8D,CAAYud,EAAYqF,EAASniB,GAC9B,IAAK,MAAMkC,KAAOkf,EACftE,EAAW5a,GAAO4a,EAAW5a,IAAQkf,EAASlf,GACjD1C,MACGN,OAAO2vB,OACJ,CACGrmB,KAAM,6BAETsU,GAEHqF,EACAniB,EACAy/D,EAIN,CAGA,eAAOxkC,GACJ,OAAOwkC,CACV,CAEA,qBAAO/G,GACJ,OAAO,IACV,CAUA,iBAAArqB,GACG,OAAQ5uC,KAAKk/D,aAAavK,YAAc,IACpChyD,QAAQiyD,GAAsB,UAAbA,EAAK7rD,OACtBjK,KAAK81D,IACI,CACJnyD,IAAKmyD,EAAKnyD,IACVe,MAAO,GAAGxD,KAAKwD,UAAUoxD,EAAKpxD,WAG1C,CAQA,WAAAgrC,CAAYurB,EAAUt3D,GACnB,OAAKA,EAEWzC,KAAKs6D,QAAQP,GAEdt3D,GAJE,IAKpB,oBC1FH,MAAMw5D,EAAmB,EAAQ,OAEjC,IAAIgE,EAA2B,CAC5B7wD,SAAU,QAQVkb,OAAQ,GAIRvM,KAAM,MAINtb,IAAK,WAKR9C,EAAOC,QAAU,cAAmCq8D,EACjD,WAAAn8D,CAAYud,EAAYqF,EAASniB,GAC9B8c,EAAWtU,KAAOsU,EAAWtU,MAAQ,UACrChJ,MAAMsd,EAAYqF,EAASniB,EAAI0/D,EAGlC,CAGA,eAAOzkC,GACJ,OAAOykC,CACV,CAEA,qBAAOhH,GACJ,MAAO,CACJz1D,MAAO,qBACP24D,WAAY,4BACZC,UAAW,+BACXlD,OAAQ,CACLnwD,KAAM,kBAGNowD,oBAAqB,8BAG9B,CAEA,UAAAt5C,CAAWxC,GACRtd,MAAM8f,WAAWxC,GAEjBrd,KAAKsvC,WAAajyB,EAAWiyB,YAAc,eAC9C,CAaA,KAAA1nC,GACG,IAAIxG,EAAOrB,MAAM6H,QAIjB,OAFAxG,EAAKkuC,WAAatvC,KAAKsvC,WAEhBluC,CACV,oBCxEH,MAAM8+D,EAAmB,EAAQ,OAEjC,IAAIC,EAAwC,CACzC/wD,SAAU,QAQVkb,OAAQ,CACL,WACA,gBAKHvM,KAAM,MAINtb,IAAK,oBAKR9C,EAAOC,QAAU,cAAwCsgE,EACtD,WAAApgE,CAAYud,EAAYqF,EAASniB,GAC9B8c,EAAWtU,KAAOsU,EAAWtU,MAAQ,UACrChJ,MAAMsd,EAAYqF,EAASniB,EAAI4/D,EAGlC,CAGA,eAAO3kC,GACJ,OAAO2kC,CACV,CAEA,qBAAOlH,GACJ,MAAO,CACJz1D,MAAO,2BACP24D,WAAY,sCAEZC,UAAW,+BACXlD,OAAQ,CACLnwD,KAAM,kBAGNowD,oBAAqB,sBAG9B,CAEA,UAAAt5C,CAAWxC,GACRtd,MAAM8f,WAAWxC,GAEjBrd,KAAK0uB,SAAWrR,EAAWqR,UAAY,WACvC1uB,KAAKogE,aAAe/iD,EAAW+iD,cAAgB,iBAClD,CAaA,KAAAx4D,GACG,IAAIxG,EAAOrB,MAAM6H,QAIjB,OAFAxG,EAAKstB,SAAW1uB,KAAK0uB,SACrBttB,EAAKg/D,aAAepgE,KAAKogE,aAClBh/D,CACV,CAUA,iBAAAwtC,GACG,IAAItkB,EAAS,KACb,GAAItqB,KAAK0uB,SAAU,CAChBpE,EAAS,GACT,IAAIxF,EAAS9kB,KAAKO,GAAGoL,WAAW3L,KAAK0uB,UACrC,GAAI5J,EAAQ,CACT,IAAI26C,EAAOz/D,KAAK2sC,UAChB7nB,EAAOwF,SAAStkB,SAAS2oB,IACtBrE,EAAOljB,KAAK,CACT3E,IAAK,GAAGg9D,KAAQ9wC,EAAM1vB,KACtBuE,MAAO,GAAGxD,KAAKwD,UAAUshB,EAAOthB,UAAUmrB,EAAMnrB,QAChDmrB,QACA7J,UACD,IAELwF,EAAOljB,KAAK,CACT3E,IAAK,GAAGg9D,SACRj8D,MAAO,GAAGxD,KAAKwD,UAAUshB,EAAOthB,QAChCmrB,MAAO,KACP7J,UAEN,KAAO,CAGJ,IAAIxjB,EAAQ,IAAIhC,MACb,4DAA4DU,KAAKf,gDAAgDe,KAAK0uB,aAEzH1uB,KAAKO,GAAGoJ,OAAO2sB,QAAQh1B,EAAO,CAC3B6tC,KAAMnvC,KAAKf,GACX4rC,MAAO7qC,KAAK0uB,UAElB,CACH,CACA,OAAOpE,CACV,CAQA,WAAAkkB,CAAYurB,EAAUt3D,GACnB,IAAIuJ,EAAQvJ,EAAIihB,MAAM,KACtB,GAAI1X,EAAM,IAAMhM,KAAK2sC,UAAW,CAC7B,IAAI2tB,EAAUt6D,KAAKs6D,QAAQP,GAC3B,GAAIO,EAAc,KAAG,CAClB,IACI3rC,EADS3uB,KAAKO,GAAGoL,WAAW3L,KAAK0uB,UAClBpE,QAAQ5I,GACjBA,EAAEziB,IAAM+M,EAAM,KACrB,GACH,GAAI2iB,EACD,OAAI3iB,EAAM,GACA2iB,EAAM3iB,EAAM,IAAI7B,KAAKwkB,EAAO2rC,EAAc,OAKO,GAApD,CAAC,YAAa,eAAe9yD,QAAQmnB,EAAMlsB,KACrCksB,EAAM9W,OAAOyiD,EAAc,OAErB,iBAAb3rC,EAAMlsB,KACO,QAAbksB,EAAMlsB,MAGH63D,EAAc,KAAE3rC,EAAMlB,iBAIlB6sC,EAAc,KAAE3rC,EAAM1M,YAG/B,GAAgB,QAAZjW,EAAM,GACd,OAAOsuD,EAAc,KAAQ,IAwBnC,CACH,CACA,OAAO,IACV,CAQA,kBAAAjrB,GACG,IAAIruB,EAAU,KAId,OAHIhhB,KAAK0uB,WACN1N,EAAU,CAAChhB,KAAKO,GAAGoL,WAAW3L,KAAK0uB,YAE/B1N,CACV,oBC7MH,MAAMk/C,EAAmB,EAAQ,OAEjC,IAAIC,EAAwC,CACzC/wD,SAAU,QAQVkb,OAAQ,CACL,cACA,aACA,cACA,eACA,gBACA,aAKHvM,KAAM,UAINtb,IAAK,kBAIL49D,YAAa,QACbC,WAAY,QACZC,YAAa,MACbC,aAAc,MACdC,cAAe,OACfC,WAAW,GAGd/gE,EAAOC,QAAU,cAAoCsgE,EAClD,WAAApgE,CAAYud,EAAYqF,EAAS+B,GAC9BpH,EAAWtU,KAAOsU,EAAWtU,MAAQ,UACrChJ,MACGsd,EACAqF,EACA+B,EACA07C,EAEN,CAGA,eAAO3kC,GACJ,OAAO2kC,CACV,CAEA,qBAAOlH,GACJ,MAAO,CACJz1D,MAAO,oBACP24D,WAAY,kCAEZC,UAAW,8BACXlD,OAAQ,CACLnwD,KAAM,kBAGNowD,oBAAqB,yBAG9B,CAEA,UAAAt5C,CAAWxC,GAoBR,GAnBAtd,MAAM8f,WAAWxC,GAEjBrd,KAAKqgE,YACFhjD,EAAWgjD,aACXF,EAAsCE,YAEzCrgE,KAAKugE,YACFljD,EAAWkjD,aACXJ,EAAsCI,YAEzCvgE,KAAKwgE,aACFnjD,EAAWmjD,cACXL,EAAsCK,aAEzCxgE,KAAKygE,cACFpjD,EAAWojD,eACXN,EAAsCM,cAGrCpjD,EAAWijD,WAAY,CACxB,IAAIK,EAAWtjD,EAAWijD,WAAW58C,MAAM,KACvC+/B,EAAW,IAAI1rC,KACnB0rC,EAASmd,YAAYD,EAAS,IAC9Bld,EAASod,cAAcF,EAAS,IAChC3gE,KAAKsgE,WAAa,GAAG7c,EAASC,cAAcD,EAASG,cACxD,MACG5jD,KAAKsgE,WAAaH,EAAsCG,gBAGxB,IAAxBjjD,EAAWqjD,UACnB1gE,KAAK0gE,UAAY/5D,KAAKiE,MAAMyS,EAAWqjD,WAEvC1gE,KAAK0gE,UAAYP,EAAsCO,SAE7D,CAaA,KAAA94D,GACG,IAAIxG,EAAOrB,MAAM6H,QAejB,OAbAxG,EAAKi/D,YAAcrgE,KAAKqgE,YACxBj/D,EAAKm/D,YAAcvgE,KAAKugE,YACxBn/D,EAAKo/D,aAAexgE,KAAKwgE,aACzBp/D,EAAKq/D,cAAgBzgE,KAAKygE,cAG1Br/D,EAAKk/D,WAAatgE,KAAKsgE,WACnBl/D,EAAKk/D,YAAcl/D,EAAKk/D,sBAAsBvoD,OAC/C3W,EAAKk/D,WAAa,GAAGl/D,EAAKk/D,WAAWQ,iBAAiB1/D,EAAKk/D,WAAW1c,gBAGzExiD,EAAKs/D,UAAY1gE,KAAK0gE,UAEft/D,CACV,CAEA,iBAAA2/D,GACG,IAIIC,EACAjoD,EACAkoD,EANAN,EAAW3gE,KAAKsgE,WAAW58C,MAAM,KAEjCw9C,EAASP,EAAS,GAClBQ,EAAOR,EAAS,GAMpB,OAAQ3gE,KAAKqgE,aACV,IAAK,QACFW,EAAM,IACNjoD,EAAQ,IACRkoD,EAA8B,WAApBjhE,KAAKugE,YAA2B,MAAQ,IAClD,MACH,IAAK,SACFS,EAAM,IACNjoD,EAAQ,IACRkoD,EAAUjhE,KAAKwgE,aACf,MACH,IAAK,UACFQ,EAAMhhE,KAAKygE,cACX1nD,EAAQ,IACRkoD,EAAU,IAIhB,MAAO,KAAaC,KAAUC,KAAQH,KAAOjoD,KAASkoD,KACzD,mBC5JH,IAAI9hC,EAAY,EAAQ,OAwKxBx/B,EAAOC,QAvKP,cAAuBu/B,EACpB,WAAAr/B,CAAYud,EAAY+jD,EAAsBC,EAAQlyB,EAAM5uC,GACzDR,QAGK2F,MAAMC,QAAQy7D,KAChBA,EAAuB,CAACA,IAG3BphE,KAAKohE,qBAAuBA,EAE5BphE,KAAK8kB,OAASu8C,EAASA,EAAOv8C,OAAS,KAOnCu8C,GAAUA,EAAOC,YAAWthE,KAAK8kB,OAASu8C,EAAOC,WAErDthE,KAAKqhE,OAASA,EACdrhE,KAAKmvC,KAAOA,EAMZnvC,KAAKO,GAAKA,EACVP,KAAK+mB,KAAO,KAEZ/mB,KAAK69D,eAAexgD,EACvB,CAKA,UAAAkkD,CAAWlkD,GAAa,CAExB,cAAAwgD,CAAexgD,GAsCZ,GA3BArd,KAAKyC,IAAMzC,KAAKF,YAAY2C,KAAO,KAGnCzC,KAAK6I,OAASwU,EAAWxU,QAAU,CAAC,EAKpC7I,KAAK0uB,SAAWrR,EAAWqR,UAAY,KAGnC1uB,KAAK0uB,WAAU1uB,KAAK8kB,OAAS9kB,KAAKwhE,aAAaxhE,KAAK0uB,WAExD1uB,KAAKuhE,WAAWlkD,GAGZrd,KAAK0uB,WAAa1uB,KAAK8kB,QACxB9kB,KAAKO,GAAGoJ,OAAOC,UACZ,IAAItK,MACD,6DAA6DU,KAAK0uB,aAErE,CACGrR,aACAqR,SAAU1uB,KAAK0uB,WAIpBrR,EAAW0J,KAAM,CAClB,IAAI06C,EAAS,KAMb,IAJCzhE,KAAK0hE,WAAa1hE,KAAKF,YAAY4hE,WAAW17D,SAAS27D,IACjDA,EAAGl/D,MAAQ4a,EAAW0J,KAAKtkB,MAAKg/D,EAASE,EAAE,IAG9CF,EAAQ,CAET,MAAMG,EAAO,IAAIH,EAAOpkD,EAAW0J,KAAM/mB,KAAMA,KAAKmvC,KAAMnvC,KAAKO,IAE/DP,KAAK+mB,KAAO66C,CACf,CACH,CACH,CAUA,YAAAJ,CAAa32B,GACV,OAAO7qC,KAAKO,GAAGygB,SAAS5hB,IACrB,MAAMyiE,EAAc,IAAIziE,EAAEoE,SAE1B,OAEGpE,EAAEH,KAAO4rC,GAAwC,IAA/Bg3B,EAAYr6D,QAAQqjC,EACxC,IACD,EACN,CAQA,8BAAAi3B,GACG,MAAMC,EACH/hE,KAAKmvC,KAAKzsB,QAAQksB,kBAAkB5uC,KAAKmvC,OAAS,GAC/C6yB,EAAe,CAAC,EAUtB,OARAD,EAA2B/7D,SAAS0b,IAC7BA,EAAEiN,MACHqzC,EAAatgD,EAAEiN,MAAM1vB,IAAMyiB,EAE3BsgD,EAAatgD,EAAEjf,KAAOif,CACzB,IAGIsgD,CACV,CAUA,YAAAC,CAAaC,GAAO,CAQpB,KAAAt6D,GACG,MAAM8D,EAAM,CACTjJ,IAAKzC,KAAKF,YAAY2C,IAEtBoG,OAAQ7I,KAAK6I,OAGb6lB,SAAU1uB,KAAK8kB,QAAQ7lB,IAAM,MAOhC,OAJIe,KAAK+mB,OACNrb,EAAIqb,KAAO/mB,KAAK+mB,KAAKnf,SAGjB8D,CACV,oBCtKH,MAAMy2D,EAAO,EAAQ,OACfT,EAAY,EAAQ,OAMpBU,EAAuB,CAC1B,CACGr5D,KAAM,mBACN6C,KAAM,SAIZ,MAAMy2D,UAAqBF,EACxB,WAAAriE,CAAYud,EAAYgkD,EAAQlyB,EAAM5uC,GACnCR,MAAMsd,EAAY+kD,EAAsBf,EAAQlyB,EAAM5uC,EACzD,EAOH8hE,EAAa5/D,IAAM,OACnB4/D,EAAa7+D,MAAQ,OACrB6+D,EAAaX,UAAYA,EAEzB/hE,EAAOC,QAAUyiE,mBC5BjB,MAGMC,EAAkB,CAarBzE,eAAgB,SAAUxgD,EAAY8xB,EAAM5uC,GACzC,IAAK8c,EAAY,OAAO,KAExB,MAAMklD,EAAc,GAMpB,OAJAD,EAAgBE,MAAMx8D,SAASy8D,IACxBA,EAAGhgE,MAAQ4a,EAAW5a,KAAK8/D,EAAYn7D,KAAKq7D,EAAG,IAG3B,IAAvBF,EAAY3gE,OAGA,IAAI2gE,EAAY,GAAGllD,EAAY8xB,EAAM5uC,GAGvC,IACjB,EAMAiiE,MArCW,CADG,EAAQ,QAwCzB7iE,EAAOC,QAAU0iE,mBCtCjB,MAAMH,EAAO,EAAQ,OAMfT,EAAY,CADH,EAAQ,QAGjBU,EAAuB,CAC1B,CACGr5D,KAAM,aACN6C,KAAM,SAIZ,MAAM82D,UAAuBP,EAC1B,WAAAriE,CAAYud,EAAY8xB,EAAM5uC,GAE3BR,MAAMsd,EAAY+kD,EAAsB,KAAMjzB,EAAM5uC,EACvD,CAKA,UAAAghE,GACG,IAAKvhE,KAAK8kB,QAAU9kB,KAAK6I,OAAQ,CAC9B,MAAM85D,EAAa3iE,KAAKohE,qBAAqBt4C,MAAMo5C,GAC3B,eAAdA,EAAKn5D,OAGX45D,IACD3iE,KAAK0uB,SAAW1uB,KAAK6I,OAAO85D,EAAW/2D,MACvC5L,KAAK8kB,OAAS9kB,KAAKwhE,aAAaxhE,KAAK0uB,WAGnC1uB,KAAK8kB,QAEP9kB,KAAK4iE,iBAAiB,qBAAsB,CACzCl0C,SAAU1uB,KAAK0uB,UAGxB,CACH,CAEA,KAAA9mB,GACG,MAAM8D,EAAM3L,MAAM6H,QAIlB,IAAK8D,EAAIgjB,UAAY1uB,KAAK6I,OAAQ,CAC/B,MAAM85D,EAAa3iE,KAAKohE,qBAAqBt4C,MAAMo5C,GAC3B,eAAdA,EAAKn5D,OAGX45D,IAAYj3D,EAAIgjB,SAAW1uB,KAAK6I,OAAO85D,EAAW/2D,MACzD,CAEA,OAAOF,CACV,EAGHg3D,EAAejgE,IAAM,SACrBigE,EAAel/D,MAAQ,SACvBk/D,EAAehB,UAAYA,EAE3B/hE,EAAOC,QAAU8iE,kBCnEjB,MAAMG,EAAW,EAAQ,OACnBC,EAAS,EAAQ,OACjBC,EAAU,EAAQ,MAExBpjE,EAAOC,QAAU,CAACijE,EAAUC,EAAQC,oBCDpC,MAAMC,EAAe,EAAQ,MACvBC,EAAgB,EAAQ,OACxBC,EAAc,EAAQ,OAE5B,MAAMC,UAAyBH,EAE5B,aAAItB,GACD,IAAI0B,EAAY,GAEhB,MAAMz0C,EAAQ3uB,KAAK2uB,OAAS3uB,KAAK8kB,OAAO8C,UAAU5nB,KAAK4uB,UAAY,KAGnE,OAAQD,GAAOlsB,KAEZ,IAAK,gBACF,GAAgC,SAA5BksB,EAAMhN,SAAS2M,SAAqB,CAIrC80C,EAFgB,EAAQ,OAIxB,KACH,CAGAA,EAAYpjE,KAAKqhE,OAAOvhE,YAAY4hE,UAAU/+D,QAC1C0gE,GACEA,EAAS5gE,MAAQzC,KAAKF,YAAY2C,KAClC4gE,EAAS5gE,MAAQwgE,EAAcxgE,MAGrC,MAEH,IAAK,OAEF,GAC+B,SAA5BksB,EAAMhN,SAAS2M,UACfK,EAAMhN,SAASglC,WAChB,CAICyc,EAFgB,EAAQ,OAIxB,KACH,CAGAA,EAAYpjE,KAAKqhE,OAAOvhE,YAAY4hE,UAAU/+D,QAC1C0gE,GACEA,EAAS5gE,MAAQzC,KAAKF,YAAY2C,KAClC4gE,EAAS5gE,MAAQwgE,EAAcxgE,KAC/B4gE,EAAS5gE,MAAQygE,EAAYzgE,MAGnC,MAEH,QAEG2gE,EAAYpjE,KAAKqhE,OAAOvhE,YAAY4hE,UAAU/+D,QAC1C0gE,GAAaA,EAAS5gE,MAAQygE,EAAYzgE,MAMpD,OAAO2gE,CACV,EAGHD,EAAiB1gE,IAAM,YACvB0gE,EAAiB3/D,MAAQ,gCACzB2/D,EAAiBzB,UAAY,GAE7B/hE,EAAOC,QAAUujE,mBC5EjB,MAAMG,EAAc,EAAQ,OAE5B,MAAMC,UAAwBD,GAE9BC,EAAgB9gE,IAAM,WACtB8gE,EAAgB//D,MAAQ,oBACxB+/D,EAAgB7B,UAAY,GAG5B/hE,EAAOC,QAAU2jE,mBCVjB,MAAMpB,EAAO,EAAQ,OAGfC,EAAuB,CAC1B,CACGr5D,KAAM,eACN6C,KAAM,WAIZ,MAAM43D,UAA0BrB,EAC7B,WAAAriE,CAAYud,EAAYgkD,EAAQlyB,EAAM5uC,GACnCR,MAAMsd,EAAY+kD,EAAsBf,EAAQlyB,EAAM5uC,GAKtDP,KAAKF,YAAY4hE,UAAYL,EAAOvhE,YAAY4hE,SACnD,EAOH8B,EAAkB/gE,IAAM,SACxB+gE,EAAkBhgE,MAAQ,qBAC1BggE,EAAkB9B,UAAY,GAG9B/hE,EAAOC,QAAU4jE,mBC9BjB7jE,EAAOC,QAAU,CACd,EAAQ,OACR,EAAQ,MACR,EAAQ,yBCFX,MAAMuiE,EAAO,EAAQ,OACfsB,EAAU,EAAQ,MAMxB,MAAMC,UAAyBvB,EAC5B,WAAAriE,CAAYud,EAAYgkD,EAAQlyB,EAAM5uC,GACnCR,MAAMsd,EAAY,GAAIgkD,EAAQlyB,EAAM5uC,EACvC,EAOHmjE,EAAiBjhE,IAAM,QACvBihE,EAAiBlgE,MAAQ,0BACzBkgE,EAAiBhC,UAAY+B,EAE7B9jE,EAAOC,QAAU8jE,mBCrBjB,MAAMvB,EAAO,EAAQ,OAGfC,EAAuB,CAC1B,CACGr5D,KAAM,eACN6C,KAAM,YAIZ,MAAM+3D,UAAyBxB,EAC5B,WAAAriE,CAAYud,EAAYgkD,EAAQlyB,EAAM5uC,GACnCR,MAAMsd,EAAY+kD,EAAsBf,EAAQlyB,EAAM5uC,EACzD,CAMA,cAAAs9D,CAAexgD,GAIZrd,KAAKF,YAAY4hE,UAAY1hE,KAAKqhE,OAAOvhE,YAAY4hE,UAKrD1hE,KAAK4uB,QAAUvR,EAAWuR,QAC1B5uB,KAAK2uB,MAAQ3uB,KAAK8kB,QAAQ8C,UAAU5nB,KAAK4uB,SAkBrCvR,EAAWumD,cACZ5jE,KAAKshE,UAAYthE,KAAKwhE,aAAankD,EAAWumD,cAEjD7jE,MAAM89D,eAAexgD,EACxB,CAEA,KAAAzV,GACG,MAAM8D,EAAM3L,MAAM6H,QAElB,GAAI5H,KAAK4uB,QACNljB,EAAIkjB,QAAU5uB,KAAK4uB,QAEf5uB,KAAKshE,YAAW51D,EAAIk4D,YAAc5jE,KAAKshE,UAAUriE,QACjD,CACJyM,EAAIkjB,QAAU5uB,KAAK6I,OAAO8lB,OAAS,KAEnC,MAAMA,EAAQ3uB,KAAK8kB,OAAO8C,UAAUlc,EAAIkjB,SAEpCD,GAAO0X,eAAc36B,EAAIk4D,YAAcj1C,EAAMtB,eAAepuB,GACnE,CAEA,OAAOyM,CACV,EAGHi4D,EAAiBlhE,IAAM,YACvBkhE,EAAiBngE,MAAQ,gCACzBmgE,EAAiBjC,UAAY,GAE7B/hE,EAAOC,QAAU+jE,mBC5EjB,MAAMxB,EAAO,EAAQ,OAEfC,EAAuB,CAC1B,CACGr5D,KAAM,YACN6C,KAAM,eAIZ,MAAMi4D,UAAwB1B,EAC3B,WAAAriE,CAAYud,EAAYgkD,EAAQlyB,EAAM5uC,GACnCR,MAAMsd,EAAY+kD,EAAsBf,EAAQlyB,EAAM5uC,GAGlDP,KAAK8jE,YACN30B,EAAK2uB,mBAAmB99D,MACxBA,KAAK+jE,YAAa,EAExB,CAMA,cAAAlG,CAAexgD,GAIZrd,KAAKF,YAAY4hE,UAAY1hE,KAAKqhE,OAAOvhE,YAAY4hE,UAErD3hE,MAAM89D,eAAexgD,GAErBrd,KAAK8jE,UAAYzmD,EAAWymD,WAAa9jE,KAAK6I,OAAOm7D,UACxD,CAEA,KAAAp8D,GACG,MAAM8D,EAAM3L,MAAM6H,QAIlB,OAFA8D,EAAIo4D,UAAY9jE,KAAK8jE,WAAa9jE,KAAK6I,OAAOm7D,WAEvCt4D,CACV,CAEA,gBAAAqyD,CAAiB9+D,EAAIuE,GAQlB,IAAImrB,EAAQ,KAUZ,MAHgC,kBAA5B3uB,KAAKqhE,QAAQ1yC,OAAOlsB,MACrBksB,EAAQ3uB,MAAMqhE,QAAQ1yC,OAElB,CACJlsB,IAAK,GAAGxD,KAAMe,KAAK8jE,WAAa9jE,KAAK6I,OAAOm7D,aAC5CxgE,MAAO,GAAGA,MAAUxD,KAAK8jE,WAAa9jE,KAAK6I,OAAOm7D,aAClDr1C,MAAOA,EACP7J,OAAQ9kB,KAAK8kB,OACb7U,KAAK,EAEX,EAGH4zD,EAAgBphE,IAAM,WACtBohE,EAAgBrgE,MAAQ,oBACxBqgE,EAAgBnC,UAAY,GAG5B/hE,EAAOC,QAAUikE,mBCrFjB,MAAMI,EAAe,EAAQ,OAEvBC,EAA4B,CAC/BzhE,IAAK,cACLsb,KAAM,WACNsxC,SAAU,gBAGP8U,EAA6C,CAChDpT,WAAY,KACZnlC,MAAO,KACPw4C,YAAa,aACbvf,SAAU,YACVwf,WAAW,EACX9iB,MAAO,IACP+iB,eAAgB,IAGnB3kE,EAAOC,QAAU,cAAoCqkE,EAClD,WAAAnkE,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MACGwF,EACAkf,EACA1c,EACAogC,GAAiB+7B,EAEvB,CAEA,aAAOl0B,GACJ,OAAOk0B,CACV,CAEA,oBAAO/7B,GACJ,OAAOg8B,CACV,CAYA,UAAAtkD,CAAWta,GACRxF,MAAM8f,WAAWta,GAGuB,iBAA7BA,EAAOoc,SAAS0iD,YACxBrkE,KAAK2hB,SAAS0iD,UAAY19D,KAAKiE,MAAMrF,EAAOoc,SAAS0iD,YAEzB,MAA3BrkE,KAAK2hB,SAAS0iD,YACfrkE,KAAK2hB,SAAS0iD,UACXF,EAA2CE,WAGjDrkE,KAAK2hB,SAAS4/B,MAAQthC,SACnB1a,EAAOoc,SAAS4/B,OACb4iB,EAA2C5iB,OAGjDvhD,KAAK2hB,SAAS2iD,eACX/+D,EAAOoc,SAAS2iD,gBAChBH,EAA2CG,cACjD,oBClEH,MAAML,EAAe,EAAQ,OAEvBvQ,EAAe,EAAQ,MAEvB6Q,EAA4B,CAC/B9hE,IAAK,cAILsb,KAAM,SAINsxC,SAAU,gBAMPmV,EAA6C,CAChDzT,WAAY,KAKZ0T,kBAAmB,GAInBL,YAAa,aAIb7iB,MAAO,EAIP8S,YAAa,IAuBhB10D,EAAOC,QAAU,cAAoCqkE,EAClD,WAAAnkE,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MACGwF,EACAkf,EACA1c,EACAogC,GAAiBo8B,EAEvB,CAOA,aAAOv0B,GACJ,OAAOu0B,CACV,CAQA,oBAAOp8B,GACJ,OAAOq8B,CACV,CAYA,UAAA3kD,CAAWta,GACRxF,MAAM8f,WAAWta,GAGjBvF,KAAK2hB,SAAS4/B,MAAQthC,SACnBjgB,KAAK2hB,SAAS4/B,OAASijB,EAA2CjjB,MAExE,CAEA,cAAI0T,GACD,IAAInwC,EAAS9kB,KAAKunB,gBAAgBD,WAClC,OAAKxC,GAEmB,MAApB9kB,KAAKk1D,cACNl1D,KAAKk1D,YAAc,IAAIxB,GAG1B1zD,KAAKk1D,YAAYC,SAASn1D,MAC1BA,KAAKk1D,YAAYE,aAAap1D,KAAK2hB,SAAS0yC,aAC5Cr0D,KAAKk1D,YAAYX,WAAWzvC,GAErB9kB,KAAKk1D,aAVQ,IAWvB,CAEA,gBAAAK,CAAiBmP,GACVA,IAAah/D,MAAMC,QAAQ++D,KAC5BA,EAAW,CAACA,IAGfA,EAAS1+D,SAASwQ,IACfxW,KAAKi1D,YAAYO,WAAW,CAAEp0D,KAAMoV,EAAIpV,MAAQoV,EAAK7B,KAAM3U,MAAO,GAExE,CAEA,aAAAy1D,CAAciP,GAKX,GAJIA,IAAah/D,MAAMC,QAAQ++D,KAC5BA,EAAW,CAACA,KAGV1kE,KAAKi1D,WAAY,OAAOzzD,QAAQ9B,UAErC,IAAI25D,EAAQ,GAQZ,OANAqL,EAAS1+D,SAASwQ,IACf6iD,EAAMjyD,KACHpH,KAAKi1D,WAAWvyC,QAAQ,CAAEthB,KAAMoV,EAAIpV,MAAQoV,EAAK7B,KAAM3U,OACzD,IAGGwB,QAAQsY,IAAIu/C,EACtB,oBCrJH,MAAM4K,EAAe,EAAQ,OAEvBU,EAA0C,CAC7C5T,WAAY,KACZpiC,MAAO,KAEP4yB,MAAO,IACPwO,OAAQ,IACR+D,WAAW,EACX8Q,UAAU,EACVC,YAAY,EACZC,eAAgB,SAChBC,gBAAgB,EAEhBC,YAAa,KACbC,WAAY,KACZC,SAAU,KACVC,QAAS,MAGN7S,EAAiB,CACpB7vD,IAAK,WACLsb,KAAM,QACNsxC,SAAU,YAGb,SAAS+V,EAAkBC,EAAO5iE,QACG,IAAvB4iE,EAAM1jD,SAASlf,GACvB4iE,EAAM1jD,SAASlf,GAAOwd,SAASolD,EAAM1jD,SAASlf,IAE9C4iE,EAAM1jD,SAASlf,GAAOkiE,EAAwCliE,EAEpE,CAEA,SAAS6iE,EAAeD,EAAO5iE,GAC5B,IACG4iE,EAAM1jD,SAASlf,GAAOkE,KAAKiE,MAAMy6D,EAAM1jD,SAASlf,GACnD,CAAE,MAAOpD,GACNgmE,EAAM1jD,SAASlf,GAAOkiE,EAAwCliE,EACjE,CACH,CAEA9C,EAAOC,QAAU,cAAiCqkE,EAC/C,WAAAnkE,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MAAMwF,EAAQkf,EAAa1c,EAAQogC,GAAiBmqB,EACvD,CAEA,aAAOtiB,GACJ,OAAOsiB,CACV,CAEA,oBAAOnqB,GACJ,OAAOw8B,CACV,CAYA,UAAA9kD,CAAWta,GACRxF,MAAM8f,WAAWta,GAGjB6/D,EAAkBplE,KAAM,SACxBolE,EAAkBplE,KAAM,UAGxBslE,EAAetlE,KAAM,aACrBslE,EAAetlE,KAAM,YACrBslE,EAAetlE,KAAM,cAErBA,KAAK2hB,SAASmjD,eACX9kE,KAAK2hB,SAASmjD,gBACdH,EAAwCG,eAE3CQ,EAAetlE,KAAM,iBACxB,CAMA,aAAAuyD,GACG,MAAO,EACV,CAEA,cAAIgT,GACD,IAAI78C,EAAK1oB,KAAKunB,eACd,IAAKmB,EAAI,OAAO,KAEhB,IAAIhd,EAAMgd,EAAGpB,WACb,OAAK5b,EAEEA,EAAIkc,UAAU5nB,KAAK2hB,SAASgN,OAFlB,IAGpB,oBCpGH,MAAM62C,EAAuB,EAAQ,OAE/BC,EAA2C,CAC9CC,SAAU,OACVC,SAAU,EAEVC,YAAa,IACbC,cAAe,GACfC,UAAW,GACXC,SAAU,KAGPzT,EAAiB,CACpB7vD,IAAK,OACLsb,KAAM,aACNsxC,SAAU,QAGb1vD,EAAOC,QAAU,cAAkC4lE,EAChD,WAAA1lE,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MAAMwF,EAAQkf,EAAa1c,EAAQogC,GAAiBmqB,EACvD,CAEA,aAAOtiB,GACJ,OAAOsiB,CACV,CAEA,oBAAOnqB,GACJ,OAAOs9B,CACV,CAYA,UAAA5lD,CAAWta,GACRxF,MAAM8f,WAAWta,GAEjBvF,KAAK2hB,SAAS+jD,SACX1lE,KAAK2hB,SAAS+jD,UACdD,EAAyCC,SAE5C1lE,KAAK2hB,SAASgkD,SAAW1lD,SACtBjgB,KAAK2hB,SAASgkD,UACXF,EAAyCE,UAI/C3lE,KAAK2hB,SAASikD,YAAc3lD,SACzBjgB,KAAK2hB,SAASikD,aACXH,EAAyCG,aAG/C5lE,KAAK2hB,SAASkkD,cAAgB5lD,SAC3BjgB,KAAK2hB,SAASkkD,eACXJ,EAAyCI,eAE/C7lE,KAAK2hB,SAASmkD,UAAY7lD,SACvBjgB,KAAK2hB,SAASmkD,WACXL,EAAyCK,WAE/C9lE,KAAK2hB,SAASokD,SAAW9lD,SACtBjgB,KAAK2hB,SAASokD,UACXN,EAAyCM,UAG/C/lE,KAAKs/B,UAAUt/B,KAAMA,KAAM,CAAC,aAC/B,CAMA,aAAAuyD,GACG,MAAO,EACV,oBCjFH,MAAMiT,EAAuB,EAAQ,OAE/BQ,EAA0C,CAC7CC,QAAS,MACTC,UAAW,SACXP,SAAU,EAEV5V,OAAQ,IACR8V,cAAe,GACfC,UAAW,GACXC,SAAU,KAGPzT,EAAiB,CACpB7vD,IAAK,MACLsb,KAAM,YACNsxC,SAAU,OAGb1vD,EAAOC,QAAU,cAAiC4lE,EAC/C,WAAA1lE,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MAAMwF,EAAQkf,EAAa1c,EAAQogC,GAAiBmqB,EACvD,CAEA,aAAOtiB,GACJ,OAAOsiB,CACV,CAEA,oBAAOnqB,GACJ,OAAO69B,CACV,CAYA,UAAAnmD,CAAWta,GACRxF,MAAM8f,WAAWta,GAEjBvF,KAAK2hB,SAASskD,QACXjmE,KAAK2hB,SAASskD,SACdD,EAAwCC,QAE3CjmE,KAAK2hB,SAASukD,UACXlmE,KAAK2hB,SAASukD,WACdF,EAAwCE,UAE3ClmE,KAAK2hB,SAASgkD,SAAW1lD,SACtBjgB,KAAK2hB,SAASgkD,UACXK,EAAwCL,UAI9C3lE,KAAK2hB,SAASouC,OAAS9vC,SACpBjgB,KAAK2hB,SAASouC,QAAUiW,EAAwCjW,QAGnE/vD,KAAK2hB,SAASkkD,cAAgB5lD,SAC3BjgB,KAAK2hB,SAASkkD,eACXG,EAAwCH,eAE9C7lE,KAAK2hB,SAASmkD,UAAY7lD,SACvBjgB,KAAK2hB,SAASmkD,WACXE,EAAwCF,WAE9C9lE,KAAK2hB,SAASokD,SAAW9lD,SACtBjgB,KAAK2hB,SAASokD,UACXC,EAAwCD,UAG9C/lE,KAAKs/B,UAAUt/B,KAAMA,KAAM,CAAC,YAC/B,CAMA,aAAAuyD,GACG,MAAO,EACV,oBCrFH,MAAM4T,EAAkB,EAAQ,OAE1BC,EAAuC,CAC1CrV,WAAY,GACZsV,YAAa,GACbC,YAAa,GACbC,aAAc,GACdC,aAAc,EACd1S,UAAW,EACXC,cAAe,OACfC,WAAY,IACZjE,OAAQ,IACR0W,eAAgB,GAGbC,EAAsB,CACzBjkE,IAAK,QACLsb,KAAM,YACNsxC,SAAU,SAGb1vD,EAAOC,QAAU,cAA8BumE,EAC5C,WAAArmE,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MAAMwF,EAAQkf,EAAa1c,EAAQogC,GAAiBu+B,EACvD,CAEA,aAAO12B,GACJ,OAAO02B,CACV,CAEA,oBAAOv+B,GACJ,OAAOi+B,CACV,CAYA,UAAAvmD,CAAWta,GACRxF,MAAM8f,WAAWta,GAEjBvF,KAAK2hB,SAASovC,WACX/wD,KAAK2hB,SAASovC,YACdqV,EAAqCrV,WAExC/wD,KAAK2hB,SAAS0kD,YACXrmE,KAAK2hB,SAAS0kD,aACdD,EAAqCC,YAExCrmE,KAAK2hB,SAAS2kD,YACXtmE,KAAK2hB,SAAS2kD,aACdF,EAAqCE,YAExCtmE,KAAK2hB,SAAS4kD,aACXvmE,KAAK2hB,SAAS4kD,cACdH,EAAqCG,aAExCvmE,KAAK2hB,SAAS6kD,aAAevmD,SAC1BjgB,KAAK2hB,SAAS6kD,cACXJ,EAAqCI,cAG3CxmE,KAAK2hB,SAASmyC,UAAY7zC,SACvBjgB,KAAK2hB,SAASmyC,WACXsS,EAAqCtS,WAG3C9zD,KAAK2hB,SAASoyC,cACX/zD,KAAK2hB,SAASoyC,eACdqS,EAAqCrS,cAExC/zD,KAAK2hB,SAASqyC,WAAa/zC,SACxBjgB,KAAK2hB,SAASqyC,YACXoS,EAAqCpS,YAG3Ch0D,KAAK2hB,SAASouC,OAAS9vC,SACpBjgB,KAAK2hB,SAASouC,QAAUqW,EAAqCrW,QAGhE/vD,KAAK2hB,SAAS8kD,eAAiBxmD,SAC5BjgB,KAAK2hB,SAAS8kD,gBACXL,EAAqCK,gBAG3CzmE,KAAKs/B,UAAUt/B,KAAMA,KAAM,CAAC,cAC/B,CAMA,aAAAuyD,GACG,MAAMiC,EAAe,CAAC,QAAS,MAAO,MAAO,OAAQ,QACrD,OAAOx0D,KAAKykB,YAAYvB,SAASggB,GACvBsxB,EAAahtD,QAAQ07B,EAAE8M,SAASvtC,MAAQ,GAErD,CAEA,UAAAkkE,GACG,MAAMj+C,EAAK1oB,KAAKunB,eAChB,IAAKmB,EAAI,OAAO,KAEhB,MAAMhd,EAAMgd,EAAGpB,WACf,OAAK5b,EAEEA,EAAIkc,UAAU5nB,KAAK2hB,SAAS2kD,aAFlB,IAGpB,CAEA,UAAAM,GACG,MAAMl+C,EAAK1oB,KAAKunB,eAChB,IAAKmB,EAAI,OAAO,KAEhB,MAAMhd,EAAMgd,EAAGpB,WACf,OAAK5b,EAEEA,EAAIkc,UAAU5nB,KAAK2hB,SAAS0kD,aAFlB,IAGpB,CAEA,WAAAQ,GACG,MAAMn+C,EAAK1oB,KAAKunB,eAChB,IAAKmB,EAAI,OAAO,KAEhB,MAAMhd,EAAMgd,EAAGpB,WACf,OAAK5b,EAEEA,EAAIkc,UAAU5nB,KAAK2hB,SAAS4kD,cAFlB,IAGpB,oBCrIH,MAAMf,EAAuB,EAAQ,OAE/BsB,EAA2C,CAC9CC,SAAU,OACVC,WAAY,OACZrB,SAAU,EAEVC,YAAa,IACbC,cAAe,GACfC,UAAW,GACXC,SAAU,KAGPzT,EAAiB,CACpB7vD,IAAK,OACLsb,KAAM,aACNsxC,SAAU,QAGb1vD,EAAOC,QAAU,cAAkC4lE,EAChD,WAAA1lE,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MAAMwF,EAAQkf,EAAa1c,EAAQogC,GAAiBmqB,EACvD,CAEA,aAAOtiB,GACJ,OAAOsiB,CACV,CAEA,oBAAOnqB,GACJ,OAAO2+B,CACV,CAYA,UAAAjnD,CAAWta,GACRxF,MAAM8f,WAAWta,GAEjBvF,KAAK2hB,SAASolD,SACX/mE,KAAK2hB,SAASolD,UACdD,EAAyCC,SAE5C/mE,KAAK2hB,SAASqlD,WACXhnE,KAAK2hB,SAASqlD,YACdF,EAAyCE,WAE5ChnE,KAAK2hB,SAASgkD,SAAW1lD,SACtBjgB,KAAK2hB,SAASgkD,UACXmB,EAAyCnB,UAI/C3lE,KAAK2hB,SAASikD,YAAc3lD,SACzBjgB,KAAK2hB,SAASikD,aACXkB,EAAyClB,aAG/C5lE,KAAK2hB,SAASkkD,cAAgB5lD,SAC3BjgB,KAAK2hB,SAASkkD,eACXiB,EAAyCjB,eAE/C7lE,KAAK2hB,SAASmkD,UAAY7lD,SACvBjgB,KAAK2hB,SAASmkD,WACXgB,EAAyChB,WAE/C9lE,KAAK2hB,SAASokD,SAAW9lD,SACtBjgB,KAAK2hB,SAASokD,UACXe,EAAyCf,UAG/C/lE,KAAKs/B,UAAUt/B,KAAMA,KAAM,CAAC,aAC/B,CAMA,aAAAuyD,GACG,MAAO,EACV,oBCtFH,MAAMiT,EAAuB,EAAQ,OAE/ByB,EAA0C,CAC7CC,QAAS,MACTvB,SAAU,EAEV5V,OAAQ,IACRoX,cAAe,GACftB,cAAe,IAGZvT,EAAiB,CACpB7vD,IAAK,MACLsb,KAAM,YACNsxC,SAAU,OAGb1vD,EAAOC,QAAU,cAAiC4lE,EAC/C,WAAA1lE,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MAAMwF,EAAQkf,EAAa1c,EAAQogC,GAAiBmqB,EACvD,CAEA,aAAOtiB,GACJ,OAAOsiB,CACV,CAEA,oBAAOnqB,GACJ,OAAO8+B,CACV,CAYA,UAAApnD,CAAWta,GACRxF,MAAM8f,WAAWta,GAEjBvF,KAAK2hB,SAASulD,QACXlnE,KAAK2hB,SAASulD,SACdD,EAAwCC,QAE3ClnE,KAAK2hB,SAASgkD,SAAW1lD,SACtBjgB,KAAK2hB,SAASgkD,UACXsB,EAAwCtB,UAI9C3lE,KAAK2hB,SAASouC,OAAS9vC,SACpBjgB,KAAK2hB,SAASouC,QAAUkX,EAAwClX,QAGnE/vD,KAAK2hB,SAASwlD,cAAgBlnD,SAC3BjgB,KAAK2hB,SAASwlD,eACXF,EAAwCE,eAE9CnnE,KAAK2hB,SAASkkD,cAAgB5lD,SAC3BjgB,KAAK2hB,SAASkkD,eACXoB,EAAwCpB,eAG9C7lE,KAAKs/B,UAAUt/B,KAAMA,KAAM,CAAC,YAC/B,CAMA,aAAAuyD,GACG,MAAO,EACV,oBC3EH,MAAM0R,EAAe,EAAQ,OAEvBmD,EAAyC,CAC5CrW,WAAY,KACZsW,WAAY,KACZC,cAAe,KACfC,WAAY,KACZxX,OAAQ,IACRvsD,MAAO,IAIJ8uD,EAAiB,CACpB7vD,IAAK,UACLsb,KAAM,WACNsxC,SAAU,WAGb1vD,EAAOC,QAAU,cAAgCqkE,EAC9C,WAAAnkE,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MAAMwF,EAAQkf,EAAa1c,EAAQogC,GAAiBmqB,EACvD,CAEA,aAAOtiB,GACJ,OAAOsiB,CACV,CAEA,oBAAOnqB,GACJ,OAAOi/B,CACV,CAYA,UAAAvnD,CAAWta,GACRxF,MAAM8f,WAAWta,GAKjBvF,KAAK2hB,SAASouC,OAAS9vC,SAASjgB,KAAK2hB,SAASouC,QAAU,EAC3D,CAMA,aAAAwC,GACG,MAAO,EACV,CAEA,gBAAAiV,GACG,MAAMC,EAAaznE,KAAK0nE,WAClBC,EAAc3nE,KAAKO,GAAG6E,QAAQvC,WAGpC,GAAK4kE,EAEL,OAAOA,EAAWhW,WAAWpyD,GAAMA,EAAEgS,QAAUs2D,IAAe,CACjE,CAEA,QAAAD,GACG,OAAO1nE,KAAKO,GAAG6E,QAAQtC,WAAWhE,KAAKO,IAC7B,CACJJ,GAAII,EAAEwD,SACNwO,MAAOhS,EAAEwD,SACT+kE,MAAOvoE,EAAE2D,YAGlB,CAEA,YAAA6kE,GACG,IAAI91C,EAAK/xB,KAAKunB,eACd,IAAKwK,EAAI,OAAO,KAEhB,IAAIrmB,EAAMqmB,EAAGzK,WACb,OAAK5b,EAEEA,EAAIkc,UAAU5nB,KAAK2hB,SAAS0lD,YAFlB,IAGpB,CAEA,eAAAS,GACG,IAAI/1C,EAAK/xB,KAAKunB,eACd,IAAKwK,EAAI,OAAO,KAEhB,IAAIrmB,EAAMqmB,EAAGzK,WACb,OAAK5b,EAEEA,EAAIkc,UAAU5nB,KAAK2hB,SAAS2lD,eAFlB,IAGpB,CAEA,YAAAS,GACG,IAAIh2C,EAAK/xB,KAAKunB,eACd,IAAKwK,EAAI,OAAO,KAEhB,IAAIrmB,EAAMqmB,EAAGzK,WACb,OAAK5b,EAEEA,EAAIkc,UAAU5nB,KAAK2hB,SAAS4lD,YAFlB,IAGpB,CAEA,WAAAS,GACG,IAAIC,EAAiBjoE,KAAKO,GAAGq6B,aAAahT,UACvC,wCAGH,IAAI6/C,EAAaznE,KAAK0nE,WAClB5kE,EAAW,GAEf,GAAK2kE,EAUL,OARAA,EAAWzhE,SAAQ,CAACojB,EAAMuD,KACvB,IAAIu7C,EAAW,GACX9+C,EAAKw+C,QACNM,EAAWD,EAAeE,SAAS/+C,EAAKw+C,QAE3C,IAAI3qC,EAAO,CAAEh+B,GAAI0tB,EAAQ,EAAGtb,MAAO+X,EAAK/X,MAAOu2D,MAAOM,GACtDplE,EAASsE,KAAK61B,EAAK,IAEfn6B,CACV,CAEA,KAAAuJ,GACG,IAAI0lB,EAAK/xB,KAAKunB,eACd,OAAKwK,GAGOA,EAAG1lB,OAHC,IAOnB,oBC1IH,MAAM85D,EAAkB,EAAQ,OAE1BiC,EAAyB,CAC5BrX,WAAY,KACZ3rC,iBAAkB,CAAC,GAGhBktC,EAAiB,CACpB7vD,IAAK,uBACLsb,KAAM,SACNsxC,SAAU,yBAGb1vD,EAAOC,QAAU,cAA6CumE,EAC3D,WAAArmE,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MAAMwF,EAAQkf,EAAa1c,EAAQogC,GAAiBmqB,GAEpD,MAAMxlC,EAAI,IAAIjkB,IAAW7I,KAAKO,GAAGgD,aAAaC,SAASqF,GAGvD,GAAI7I,KAAK2iB,OAAO1c,GAAMA,aAAakgE,IAAiBvkE,OAAS,EAAG,CAC7D5B,KAAK4iB,OAAS,GAGd,MAAMylD,EAAU5jD,EAAYD,QACzB,CACG/hB,IAAK0jE,EAAgBn2B,SAASvtC,IAC9Be,MAAOspB,EAAE,MACTlhB,KAAM,KACN+V,SAAU,CACP2mD,WAAW,IAGjB7jD,EACAzkB,MAGHA,KAAK4iB,OAAOxb,KAAKihE,GAGjB,MAAME,EAAY9jD,EAAYD,QAC3B,CACG/hB,IAAK0jE,EAAgBn2B,SAASvtC,IAC9Be,MAAOspB,EAAE,QACTlhB,KAAM,OACN+V,SAAU,CACP2mD,WAAW,IAGjB7jD,EACAzkB,MAGHA,KAAK4iB,OAAOxb,KAAKmhE,EACpB,CACH,CAEA,aAAOv4B,GACJ,OAAOsiB,CACV,CAEA,oBAAOnqB,GACJ,OAAOigC,CACV,CAOA,aAAA7V,GACG,MAAO,EACV,oBCxEH,MAAM0R,EAAe,EAAQ,OAEvBuE,EAAmD,CACtDzX,WAAY,KACZpiC,MAAO,MAGJ2jC,EAAiB,CACpB7vD,IAAK,sBACLsb,KAAM,SACNsxC,SAAU,yBAGb1vD,EAAOC,QAAU,cAA0CqkE,EACxD,WAAAnkE,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MAAMwF,EAAQkf,EAAa1c,EAAQogC,GAAiBmqB,EACvD,CAEA,aAAOtiB,GACJ,OAAOsiB,CACV,CAEA,oBAAOnqB,GACJ,OAAOqgC,CACV,CAUA,aAAAjW,GACG,MAAO,EACV,oBC3BH,MAAMkW,EAAS,EAAQ,OAMjBnW,EAAiB,CACpB7vD,IAAK,gBACLsb,KAAM,UACNsxC,SAAU,aAGPpB,EAA8B,CACjCya,QAAS,EACTC,QAAS,EACTC,SAAS,EACTN,WAAW,GAGd3oE,EAAOC,QAAU,cAAkC6oE,EAOhD,WAAA3oE,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MAAMwF,EAAQkf,EAAa1c,EAAQogC,GAAiBmqB,EACvD,CAEA,aAAOtiB,GACJ,OAAOsiB,CACV,CAEA,oBAAOnqB,GACJ,OAAO8lB,CACV,CAQA,UAAApuC,CAAWta,GACRxF,MAAM8f,WAAWta,GAGjBvF,KAAK2hB,SAAS+mD,QAAUzoD,SACrBjgB,KAAK2hB,SAAS+mD,SAAWza,EAA4Bya,cAGpB,IAAzB1oE,KAAK2hB,SAASgnD,SACtB3oE,KAAK2hB,SAASgnD,QAAQ7pE,KAAI,SAAU6pE,GACjC,OAAO1oD,SAAS0oD,EACnB,IAG4B,MAA3B3oE,KAAK2hB,SAAS2mD,UACftoE,KAAK2hB,SAAS2mD,UAAY3hE,KAAKiE,MAAM5K,KAAK2hB,SAAS2mD,WAEnDtoE,KAAK2hB,SAAS2mD,UAAYra,EAA4Bqa,UAG5B,MAAzBtoE,KAAK2hB,SAASinD,QACf5oE,KAAK2hB,SAASinD,QAAUjiE,KAAKiE,MAAM5K,KAAK2hB,SAASinD,SAEjD5oE,KAAK2hB,SAASinD,QAAU3a,EAA4B2a,OAE1D,CAEA,mBAAAC,GAEG,OAAO7oE,KAAK2iB,QAAQjC,MAAK,CAACE,EAAGC,IACtBD,EAAEonC,SAASiI,GAAKpvC,EAAEmnC,SAASiI,EAAUrvC,EAAEonC,SAASgI,EAAInvC,EAAEmnC,SAASgI,EACvDpvC,EAAEonC,SAASiI,EAAIpvC,EAAEmnC,SAASiI,GAE5C,oBC7EH,IAAI7yC,EAAY,EAAQ,OAExB,MAAMk1C,EAAiB,CACpB7vD,IAAK,OACLsb,KAAM,kBACNsxC,SAAU,qBACVC,QAAS,IAGNC,EAAkC,CACrC/rD,MAAO,IAGV7D,EAAOC,QAAU,cAAyBwd,EAMvC,WAAAtd,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MAAM,CAAC,SAAU0kB,EAAYlkB,IAE7BP,KAAKk2B,SAAW,GAGhBl2B,KAAKw7B,SAAW2M,GAAiBmqB,EAEjCtyD,KAAKykB,YAAcA,EAEnBzkB,KAAK+H,OAASA,GAAU,KAExB/H,KAAKwvD,gBAAiB,EAItBxvD,KAAKyvD,eAAiB,GAItBzvD,KAAK6f,WAAWta,EACnB,CAEA,aAAOyqC,GACJ,OAAOsiB,CACV,CAEA,oBAAOnqB,GACJ,OAAOonB,CACV,CAUA,kBAAOG,CAAYjrC,EAAa1c,GAE7B,OAAO0c,EAAYD,QAChB,CAAE/hB,IAAKzC,KAAKgwC,SAASvtC,KACrBgiB,EACA1c,EAEN,CAEA,OAAA01B,GACG,OAAOz9B,KAAKw7B,SAAS/4B,GACxB,CAEA,QAAAktD,GACG,OAAO3vD,KAAKw7B,SAASzd,IACxB,CAEA,OAAA6xC,GACG,OAAO5vD,KAAKw7B,SAAS8zB,OACxB,CAUA,KAAA1nD,GASG,IAAI8D,EAAM3L,MAAM6H,QAEZ1D,EAAS,CACVjF,GAAIe,KAAKf,GACT8J,KAAM/I,KAAK+I,MAAQ,OACnBtG,IAAKzC,KAAKyC,IACVsb,KAAM/d,KAAK+d,KACXuxC,QAAStvD,KAAKsvD,QACd1jD,KAAM5L,KAAK4L,KACX+V,SAAU3hB,KAAKO,GAAGma,UAAU1a,KAAK2hB,UAAY,CAAC,GAC9CmnD,aAAc9oE,KAAK8oE,aACnBlpD,aAAclU,EAAIkU,cAerB,OAXA1b,EAAO2rD,SAAW7vD,KAAK4iB,QAAU,IAAI9jB,KAAKmH,GAAMA,EAAEhH,KAAI0D,QAAQ1D,GAAOA,IACrEiF,EAAO2rD,QAAU3rD,EAAO2rD,QAAQl2C,OAAO3Z,KAAKyvD,gBAExCzvD,KAAKgoD,WAAU9jD,EAAO8jD,SAAWhoD,KAAKgoD,UAM1C9jD,EAAO4rD,OAAS9vD,KAAK8vD,SAEd5rD,CACV,CAQA,UAAA2b,CAAWta,GAkDR,GAjDAvF,KAAKf,GAAKsG,EAAOtG,GAIjBe,KAAK+I,KAAOxD,EAAOwD,MAAQ,OAI3B/I,KAAKyC,IAAM8C,EAAO9C,KAAOzC,KAAKy9B,UAK9Bz9B,KAAK+d,KAAOxY,EAAOwY,MAAQ/d,KAAK2vD,WAKhC3vD,KAAKsvD,QAAU/pD,EAAO+pD,SAAWtvD,KAAK4vD,UAEtC5vD,KAAK4L,KAAOrG,EAAOqG,KAOnBrG,EAAOoc,SAAWpc,EAAOoc,UAAY,CAAC,EACtC3hB,KAAKwD,MAAQ+B,EAAO/B,OAAS+B,EAAOoc,SAASne,OAAS,UAEtDxD,KAAK2hB,SAAWpc,EAAOoc,UAAY,CAAC,EAKpC3hB,KAAK2hB,SAASouC,OAAS9vC,SAASjgB,KAAK2hB,SAASouC,QAAU,GAExD/vD,KAAK8oE,aAAevjE,EAAOujE,cAAgB,CAAC,EAQ5C/oE,MAAM8f,WAAWta,IAIZvF,KAAK4L,MAAQlG,MAAMC,QAAQ3F,KAAK4f,cAClC,IAAK,IAAI1Z,EAAI,EAAGA,EAAIlG,KAAK4f,aAAahe,OAAQsE,IAK3C,GAJS,GAALA,IAEDlG,KAAK4L,KAAO5L,KAAK4f,aAAa1Z,GAAG1C,OAEM,MAAtCxD,KAAK4f,aAAa1Z,GAAGs5B,cAAuB,CAE7Cx/B,KAAK4L,KAAO5L,KAAK4f,aAAa1Z,GAAG1C,MACjC,KACH,CAKY,WAAdxD,KAAKwD,OACFxD,KAAK+H,SACN/H,KAAKwD,MAAQxD,KAAK+H,OAAOvE,MAAQ,IAAMxD,KAAKw7B,SAAS/4B,KAI3D,IAAIkgB,EAAQ,GACZ3iB,KAAKyvD,eAAiBzvD,KAAKyvD,gBAAkB,IAC5ClqD,EAAOsqD,SAAW,IAAI7pD,SAAS/G,IAC7B,IAAIib,EAAMla,KAAKO,GAAGue,eAAe7f,GAC7Bib,EACDyI,EAAMvb,KAAKpH,KAAKykB,YAAYD,QAAQtK,EAAKla,KAAKykB,YAAazkB,OAE3DA,KAAKyvD,eAAeroD,KAAKnI,EAC5B,IAEHe,KAAK4iB,OAASD,EAGd3iB,KAAKgoD,SAAWziD,EAAOyiD,UAAY,CAAC,EAEb,MAAnBhoD,KAAKgoD,SAASgI,IAAWhwD,KAAKgoD,SAASgI,EAAI/vC,SAASjgB,KAAKgoD,SAASgI,IAC/C,MAAnBhwD,KAAKgoD,SAASiI,IAAWjwD,KAAKgoD,SAASiI,EAAIhwC,SAASjgB,KAAKgoD,SAASiI,IAEtEjwD,KAAKgoD,SAASkI,GAAKjwC,SAASjgB,KAAKgoD,SAASkI,IAAM,GAChDlwD,KAAKgoD,SAASmI,GAAKlwC,SAASjgB,KAAKgoD,SAASmI,IAAM,EACnD,CAEA,MAAAL,GACG,OAAsB,MAAf9vD,KAAK+H,QAAkB/H,KAAK+H,QAAU/H,KAAKykB,WACrD,CAOA,UAAA2rC,GACG,IAAIC,EAAU,GACVC,EAAUtwD,KAKd,IAFAqwD,EAAQ9+B,QAAQ++B,IAERA,EAAQR,UAAYQ,EAAQvoD,QACjCsoD,EAAQ9+B,QAAQ++B,EAAQvoD,QAExBuoD,EAAUA,EAAQvoD,OAGrB,OAAOsoD,CACV,CAUA,oBAAAtwC,CAAqBlf,GAClB,IAAImf,GAAY,EAEZ+oD,EAAkBtpE,OAAOD,KAAKQ,KAAK8oE,eAAiB,GAOxD,OANCjoE,GAAS,IAAImF,SAAStE,IAChBqnE,EAAgBvhE,QAAQ9F,EAAEC,MAAQD,IAAM,IACzCse,GAAY,EACf,IAGIA,CACV,CASA,aAAAgpD,GAEG,IAAIC,EAAc,EAElB,GAAIjpE,KAAKykB,YAAYvG,gBAAiB,CAEnC,IAAIgrD,GAAkB,EAEmC,GAArDjpD,SAASjgB,KAAKykB,YAAYtG,eAAe+B,UAE1ClgB,KAAKO,GAAG6E,QAAQvE,QAAQmF,SAASma,IAE3BngB,KAAKykB,YAAYtG,eAAegC,KAAK3Y,QAClC2Y,EAAKlhB,IAAMkhB,EAAKxe,OACd,IAGLunE,GAAkB,EAClBD,EAAc,EACjB,IAKFC,GACuD,GAAxDjpD,SAASjgB,KAAKykB,YAAYtG,eAAes6C,aAItCz4D,KAAKykB,YAAYtG,eAAeu6C,QAAQlxD,QACrCxH,KAAKO,GAAG6E,QAAQzD,OAAS,KACvB,IAGLunE,GAAkB,EAClBD,EAAc,GAMjBjpE,KAAK8oE,cACLrpE,OAAOD,KAAKQ,KAAK8oE,cAAclnE,OAAS,IACvCsnE,GAGDlpE,KAAKO,GAAG6E,QAAQvE,QAAQmF,SAASma,IAC9B,IAAIgpD,EAAcnpE,KAAK8oE,aAAa3oD,EAAKlhB,IAAMkhB,EAAKxe,MAChDwnE,GAAelpD,SAASkpD,GAAeF,IAExCA,EAAchpD,SAASkpD,GAAY,GAG/C,MACGF,EAAc,EAGjB,OAAOA,CACV,CAMA,mBAAA1Y,GAIG,IAHA,IAAI57C,EAAO,KAEPyN,EAAOpiB,KACQ,QAAZoiB,EAAK3f,MAAkB2f,EAAK0tC,UAAY1tC,EAAKra,QACjDqa,EAAOA,EAAKra,OAOf,MAJgB,QAAZqa,EAAK3f,MACNkS,EAAOyN,GAGHzN,CACV,CAOA,qBAAA67C,GAIG,IAHA,IAAIC,EAAS,KAETruC,EAAOpiB,KACQ,UAAZoiB,EAAK3f,MAAoB2f,EAAK0tC,UAAY1tC,EAAKra,QACnDqa,EAAOA,EAAKra,OAOf,MAJgB,UAAZqa,EAAK3f,MACNguD,EAASruC,GAGLquC,CACV,CAEA,UAAAC,CAAWC,GAIR,GAHgB,MAAZA,IAAkBA,EAAW,KAAM,GAGnC3wD,KAAK8vD,SACN,OAAO9vD,KAIV,IADA,IAAI4wD,EAAa5wD,KAAK+H,OAEnB6oD,IACmB,QAAlBA,EAAWnuD,MAAkBkuD,EAASC,KAEvCA,EAAaA,EAAW7oD,OAG3B,OAAO6oD,CACV,CAEA,QAAAC,GAGG,IAFA,IAAIC,EAAW9wD,KAAK0wD,cAEZI,EAAShB,UACdgB,EAAWA,EAASJ,aAGvB,OAAOI,CACV,CASA,UAAAjtC,GACG,OAAI7jB,KAAK+H,OACC/H,KAAK+H,OAAOqhE,UAAYppE,KAAKf,GAE7Be,KAAKykB,YAAYT,UAAYhkB,KAAKf,EAE/C,CAOA,OAAAmqE,GACG,OAAOppE,KAAK6jB,aAAe,UAC9B,CAQA,kBAAI0D,GACD,IAAIwpC,GAAc/wD,KAAK2hB,UAAY,CAAC,GAAGovC,WACvC,IAAKA,EAAY,CACd,GACG,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,MAAO,QAAS,UAAUvpD,QACxDxH,KAAKyC,MACH,EACN,CAEC,GAAgB,QAAZzC,KAAKyC,KAAiBzC,KAAKgxD,eAAgB,OAAO,KAEtD,GAAIhxD,KAAKwvD,eAAgB,OAAO,KAEhC,IAAIyB,EAAY,IAAI3xD,MACjB,yCAAyCU,KAAKyC,oCAEjDzC,KAAKO,GAAGoJ,OAAO2sB,QAAQ26B,EAAW,CAC/BluC,KAAM/iB,KACN2hB,SAAU3hB,KAAK2hB,UAErB,MAKY,GAFN,CAAC,SAAU,QAAS,OAAQ,MAAO,iBAAiBna,QACjDxH,KAAKyC,MAGRpB,QAAQqF,KACL,yDAAyD1G,KAAKyC,QAIvE,OAAO,IACV,CAEA,IAAIimB,EAAK1oB,KAAKO,GAAGmnB,mBAAmBqpC,GACpC,IAAKroC,EAAI,CACN,IAAIwoC,EAAU,IAAI5xD,MACf,QAAQU,KAAKwD,UAAUxD,KAAKf,mDAE/Be,KAAKO,GAAGoJ,OAAO2sB,QAAQ46B,EAAS,CAC7BnuC,KAAM/iB,KACN+wD,cAEN,CACA,OAAOroC,CACV,CAiBA,kBAAA2gD,CAAmBC,EAAQL,GAOxB,OAN6B,GAAzBhpD,SAASgpD,GACNjpE,KAAK8oE,aAAaQ,WAAgBtpE,KAAK8oE,aAAaQ,GAExDtpE,KAAK8oE,aAAaQ,GAAUL,EAGxBjpE,KAAK2H,MAAK,GAAO,EAC3B,CAiBA,KAAAgb,CAAMhgB,EAAS,MAAM,GAAMuf,GAAO,GAC/B,IAAIhe,EAAS,GAEb,OAAKlE,KAAK4iB,QAAU5iB,KAAK4iB,OAAOhhB,OAAS,IAGrCe,GAAUuf,GACXhe,EAASA,EAAOyV,OAAO3Z,KAAK4iB,OAAOjgB,OAAOA,IAE1C3C,KAAK4iB,OAAO5c,SAASC,IAClB,IAAI4c,EAAW5c,EAAE0c,MAAMhgB,EAAQuf,GAC3BW,GAAYA,EAASjhB,OAAS,IAC/BsC,EAASA,EAAOyV,OAAOkJ,GAC1B,KAGH3e,EAASlE,KAAK4iB,OAAOjgB,OAAOA,IAboBuB,CAiBtD,CAQA,OAAAsgB,CAAQjf,EAAQkf,EAAa1c,GAC1B,OAAO/H,KAAKykB,YAAYD,QACrBjf,EACAkf,GAAezkB,KAAKykB,YACpB1c,GAAU/H,KAEhB,CAUA,WAAAupE,CAAYxmD,GAET,OADA1hB,QAAQC,MAAM,sCACPtB,KAAKoxD,WAAWruC,EAC1B,CAUA,UAAAquC,CAAWruC,GACR,IAAIyjB,EAAUxmC,KAAK4iB,OAAOhhB,OAK1B,OAJA5B,KAAK4iB,OAAS5iB,KAAK2iB,OAAM,SAAU1c,GAChC,OAAOA,EAAEhH,IAAM8jB,EAAK9jB,EACvB,IAEIe,KAAK4iB,OAAOhhB,OAAS4kC,EACfxmC,KAAK2H,OAGRnG,QAAQ9B,SAClB,CAUA,UAAA2xD,CAAWtuC,GAKR,OAHG/iB,KAAK2iB,OAAM,SAAU1c,GAClB,OAAOA,EAAEhH,IAAM8jB,EAAK9jB,EACvB,IAAG2C,OAAS,EAMRJ,QAAQ9B,WAJZM,KAAK4iB,OAAOxb,KAAK2b,GACV/iB,KAAK2H,OAIlB,CAWA,WAAA2pD,CAAYC,EAAQC,GACjB,IAAIlkB,EAAOttC,KAAK4iB,OAAO6uC,WAAWxrD,GAAMA,EAAEhH,IAAMsyD,IAChD,KAAIjkB,EAAO,GAMX,OAHAttC,KAAK4iB,OAAO2P,OAAOi/B,EAAY,EAAGxxD,KAAK4iB,OAAO2P,OAAO+a,EAAM,GAAG,IAGvDttC,KAAK2H,MAAK,EACpB,CAaA,OAAAD,GAIG,OAFA1H,KAAKm2B,YAAW,GAET30B,QAAQ9B,UACX2H,MAAK,KAKH,IAAIqqD,EAAiB,GACjBvuC,EAAWnjB,KAAK2iB,QAQpB,OAPA3iB,KAAK4iB,OAAS,GAIdO,EAASnd,SAASC,IACfyrD,EAAetqD,KAAKnB,EAAEyB,UAAU,IAE5BlG,QAAQsY,IAAI43C,EAAe,IAEpCrqD,MAAK,KAEH,GAAIrH,KAAK+H,SAAW/H,KAAKogB,MACtB,OAAOpgB,KAAK+H,OAAOqpD,WAAWpxD,KACjC,IAEFqH,MAAK,IACItH,MAAM2H,YAEfL,MAAK,KACHrH,KAAKuB,KAAK,YAAY,GAE/B,CAQA,IAAAoG,GACG,OAAOnG,QAAQ9B,UACX2H,MAAK,IAEItH,MAAM4H,SAEfN,MAAK,KAEH,GAAIrH,KAAK+H,SAAW/H,KAAKogB,MAGtB,OAAOpgB,KAAK+H,OAAOspD,WAAWrxD,KACjC,IAEFqH,MAAK,IACIrH,MAEhB,CAiBA,QAAA+vB,CAASkG,GACN,GAAKA,GAAQA,EAAIjG,SAAYiG,EAAI/F,SAAjC,CAEA,IAAItH,EAAS5oB,KAAKk2B,SAASpN,MAAMzpB,GACvBA,EAAE2wB,SAAWiG,EAAIjG,SAAW3wB,EAAE4wB,WAAagG,EAAIhG,cAIpDrH,GAAUA,EAAOhnB,OAAS,KAE5B5B,KAAKk2B,SAAS9uB,KAAK,CAChB4oB,QAASiG,EAAIjG,QACbC,UAAWgG,EAAIhG,UACfC,SAAU+F,EAAI/F,WAIjB+F,EAAIjG,QAAQ/uB,GAAGg1B,EAAIhG,UAAWgG,EAAI/F,UAhBY,CAkBpD,CASA,UAAAiG,CAAWjU,GACJA,GACDliB,KAAK2iB,QAAQ3c,SAASC,IACnBA,EAAEkwB,WAAWjU,EAAK,IAIpBliB,KAAKk2B,UAAYl2B,KAAKk2B,SAASt0B,OAAS,GACzC5B,KAAKk2B,SAASlwB,SAAS3G,IACpBA,EAAE2wB,QAAQoG,eAAe/2B,EAAE4wB,UAAW5wB,EAAE6wB,SAAS,GAG1D,CAkBA,KAAAyF,CAAMs5B,EAAWlnD,EAAQQ,EAAU,CAAC,GACjC0mD,EAAYA,GAAa,CAAC,EAG1B,IAAIv9C,EAAS1R,KAAK4H,QAGlB,CAAC,QAAS,SAAS5B,SAASwiC,WAClB92B,EAAO82B,EAAK,IAIlBxoC,KAAK4xD,wBACL5xD,KAAK4xD,yBAA2B,IAAI5rD,SAASwiC,IACvC92B,GAAUA,EAAOiQ,WAClBjQ,EAAOiQ,SAAS6mB,GAAQymB,EAAUv9C,EAAOiQ,SAAS6mB,IAAM,IAKjE,IAAItkC,EAASlE,KAAKwkB,QAAQ9S,EAAQ1R,KAAKykB,YAAa1c,GA+BpD,OA1BG7D,EAAOjF,GAFI,MAAV8I,EAEW,KAEAknD,EAAU/qD,EAAOjF,KAAOe,KAAKO,GAAGoB,OAI3C3B,KAAKogB,QAAU7X,EAAQspD,iBACxB3tD,EAAOgb,OAAS,GAChBlf,KAAKogB,QAAQpa,SAASyU,IACnB,IAAIq3C,EAAgBr3C,EAAEkb,MAAMs5B,EAAW/qD,EAAQqE,GAC/CupD,EAAc/pD,OAAS7D,EAEvBA,EAAOgb,OAAO9X,KAAK0qD,EAAc,KAKnC9xD,KAAK2iB,QAAUpa,EAAQwpD,iBACxB7tD,EAAO0e,OAAS,GAChB5iB,KAAK2iB,QAAQ3c,SAASC,IACnB,IAAI+rD,EAAa/rD,EAAE0vB,MAAMs5B,EAAW/qD,EAAQqE,GAE5CrE,EAAO0e,OAAOxb,KAAK4qD,EAAW,KAI7B9tD,CACV,CAsBA,IAAAirD,CAAKF,EAAWlnD,EAAQQ,EAAU,CAAC,GAChC0mD,EAAYA,GAAa,CAAC,EAG1B,IAAIv9C,EAAS1R,KAAK4H,QAGlB,CAAC,UAAW,WAAW5B,SAASwiC,WACtB92B,EAAO82B,EAAK,IAIlBxoC,KAAK4xD,wBACL5xD,KAAK4xD,yBAA2B,IAAI5rD,SAASwiC,IACvC92B,GAAUA,EAAOiQ,WAClBjQ,EAAOiQ,SAAS6mB,GAAQymB,EAAUv9C,EAAOiQ,SAAS6mB,IAAM,IAKjE,IAAItkC,EAASlE,KAAKykB,YAAYD,QAAQ9S,EAAQ1R,KAAKykB,YAAa1c,GAuBhE,OApBA7D,EAAO6D,OAASA,GAAU/H,KAAK+H,OAM5B7D,EAAOjF,GAHI,MAAV8I,EAGW,KAEAknD,EAAU/qD,EAAOjF,KAAOe,KAAKO,GAAGoB,OAI/B,QAAZ3B,KAAKyC,MACNyB,EAAO0H,KACJrD,GAAS0pD,SACT,GAAG/tD,EAAO0H,eAAe5L,KAAKO,GAAGoB,OAAOmE,MAAM,EAAG,KAEpD5B,EAAOV,MAAQ+E,GAAS0pD,SAAW,GAAG/tD,EAAOV,kBAGzChC,QAAQ9B,UACX2H,MAAK,KAEH,IAAI6qD,EAAW,GA4Bf,OA1BIlyD,KAAKkf,SAAW3W,EAAQspD,iBACzB3tD,EAAOgb,OAAS,GAChBlf,KAAKogB,QAAQpa,SAASyU,IAGfA,EAAEq1C,UACH9vD,KAAKykB,YAAYvF,OAAO9X,KAAK,CAAEnI,GAAIgwD,EAAUx0C,EAAExb,MAElDizD,EAAS9qD,KACNqT,EACI00C,KAAKF,EAAW/qD,EAAQqE,GACxBlB,MAAMyqD,IACJA,EAAc/pD,OAAS7D,EAEvBlE,KAAKykB,YAAYvF,OACdlf,KAAKykB,YAAYvF,OAAOvc,QACpBwvD,GAAOA,EAAGlzD,IAAMgwD,EAAUx0C,EAAExb,MAInCiF,EAAOgb,OAAO9X,KAAK0qD,EAAc,IAEzC,KAIAtwD,QAAQsY,IAAIo4C,EAAS,IAE9B7qD,MAAK,KAEH,IAAI6qD,EAAW,GAsBf,OApBIlyD,KAAK4iB,SAAWra,EAAQwpD,iBACzB7tD,EAAO0e,OAAS,GAChB5iB,KAAK2iB,QAAQ3c,SAASC,IACnBisD,EAAS9qD,KAGNnB,EAAEkpD,KAAKF,EAAW/qD,EAAQqE,GAASlB,MAAM2qD,IAInC9tD,EAAO0e,OAAOjgB,QAAQyvD,GAAOA,EAAGnzD,IAAM+yD,EAAW/yD,KAC7C2C,OAAS,GAEbsC,EAAO0e,OAAOxb,KAAK4qD,EACtB,IAEL,KAIAxwD,QAAQsY,IAAIo4C,EAAS,IAE9B7qD,MAAK,IAEInD,EAAOyD,SAEhBN,MAAK,IACInD,GAEhB,oBC18BH,MAAM+/D,EAAe,EAAQ,OAEvBuF,EAA4C,CAC/CzY,WAAY,KACZpiC,MAAO,KACP86C,SAAU,WACVC,WAAY,EACZC,SAAU,GAGPrX,EAAiB,CACpB7vD,IAAK,cACLsb,KAAM,SACNsxC,SAAU,eAGb1vD,EAAOC,QAAU,cAAmCqkE,EACjD,WAAAnkE,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MAAMwF,EAAQkf,EAAa1c,EAAQogC,GAAiBmqB,EACvD,CAEA,aAAOtiB,GACJ,OAAOsiB,CACV,CAEA,oBAAOnqB,GACJ,OAAOqhC,CACV,CAYA,UAAA3pD,CAAWta,GACRxF,MAAM8f,WAAWta,EACpB,CAMA,aAAAgtD,GACG,MAAO,EACV,oBCjDH,MAAM0R,EAAe,EAAQ,OAEvB2F,EAA4C,CAC/C7Y,WAAY,MAGTuB,EAAiB,CACpB7vD,IAAK,cACLsb,KAAM,sBACNsxC,SAAU,eAGb1vD,EAAOC,QAAU,cAAmCqkE,EACjD,WAAAnkE,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MAAMwF,EAAQkf,EAAa1c,EAAQogC,GAAiBmqB,EACvD,CAEA,aAAOtiB,GACJ,OAAOsiB,CACV,CAEA,oBAAOnqB,GACJ,OAAOyhC,CACV,CAYA,UAAA/pD,CAAWta,GACRxF,MAAM8f,WAAWta,EACpB,CAMA,aAAAgtD,GACG,MAAO,EACV,oBC7CH,MAAMsX,EAAe,EAAQ,OAEvBC,EAA0C,CAC7CC,OAAQ,EACR/E,YAAa,GACbC,WAAY,GACZC,SAAU,GACVC,QAAS,IAGN6E,EAAyB,CAC5BvnE,IAAK,WACLsb,KAAM,KACNsxC,SAAU,aAGb1vD,EAAOC,QAAU,cAAiCiqE,EAM/C,WAAA/pE,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MACGwF,EACAkf,EACA1c,EACAogC,GAAiB6hC,EAEvB,CAEA,aAAOh6B,GACJ,OAAOg6B,CACV,CAEA,oBAAO7hC,GACJ,OAAO2hC,CACV,CAYA,UAAAjqD,CAAWta,GACRxF,MAAM8f,WAAWta,GAEjBvF,KAAK2hB,SAASooD,OAAS9pD,SACpBjgB,KAAK2hB,SAASooD,QAAUD,EAAwCC,QAEnE/pE,KAAK2hB,SAASqjD,YACXhlE,KAAK2hB,SAASqjD,aACd8E,EAAwC9E,YAC3ChlE,KAAK2hB,SAASujD,SACXllE,KAAK2hB,SAASujD,UACd4E,EAAwC5E,SAC3CllE,KAAK2hB,SAASsjD,WACXjlE,KAAK2hB,SAASsjD,YACd6E,EAAwC7E,WAC3CjlE,KAAK2hB,SAASwjD,QACXnlE,KAAK2hB,SAASwjD,SACd2E,EAAwC3E,OAC9C,CAEA,qBAAA3U,GACG,IAAIyZ,EAAW,KAEX7nD,EAAOpiB,KACX,KAAmB,YAAZoiB,EAAK3f,MAAsB2f,EAAK0tC,UAAY1tC,EAAKra,QACrDqa,EAAOA,EAAKra,OAOf,MAJgB,YAAZqa,EAAK3f,MACNwnE,EAAW7nD,GAGP6nD,CACV,oBClFH,MAAM1yC,EAAmB,EAAQ,OAE3B2yC,EAAgD,CAAC,EAEjDC,EAA+B,CAClC1nE,IAAK,iBACLsb,KAAM,iBACNsxC,SAAU,iCAGb1vD,EAAOC,QAAU,cAAuC23B,EAMrD,WAAAz3B,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MACGwF,EACAkf,EACA1c,EACAogC,GAAiBgiC,EAEvB,CAEA,aAAOn6B,GACJ,OAAOm6B,CACV,CAEA,oBAAOhiC,GACJ,OAAO+hC,CACV,oBC9BH,MAAM3yC,EAAmB,EAAQ,OAE3B6yC,EAAwC,CAC3C9W,SAAU,IAGPhB,EAAiB,CACpB7vD,IAAK,gBACLsb,KAAM,UACNsxC,SAAU,gCAGb1vD,EAAOC,QAAU,cAAsC23B,EAMpD,WAAAz3B,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MAAMwF,EAAQkf,EAAa1c,EAAQogC,GAAiBmqB,EACvD,CAEA,aAAOtiB,GACJ,OAAOsiB,CACV,CAEA,oBAAOnqB,GACJ,OAAOiiC,CACV,oBC7BH,MAAMjE,EAAkB,EAAQ,OAE1BkE,EAAuB,CAC1B5nE,IAAK,SACLsb,KAAM,cACNsxC,SAAU,UAGP+a,EAAwC,CAC3CrZ,WAAY,KACZ+C,WAAW,EACXC,cAAe,OACfC,WAAY,IACZjE,OAAQ,GAGXpwD,EAAOC,QAAU,cAA+BumE,EAM7C,WAAArmE,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MAAMwF,EAAQkf,EAAa1c,EAAQogC,GAAiBkiC,EACvD,CAEA,aAAOr6B,GACJ,OAAOq6B,CACV,CAEA,oBAAOliC,GACJ,OAAOiiC,CACV,CAQA,UAAAvqD,CAAWta,GACRxF,MAAM8f,WAAWta,GAEjBvF,KAAK2hB,SAASoyC,cACX/zD,KAAK2hB,SAASoyC,eACdqW,EAAsCrW,cAGzC/zD,KAAK2hB,SAASmyC,UAAYntD,KAAKiE,MACD,MAA3B5K,KAAK2hB,SAASmyC,UACT9zD,KAAK2hB,SAASmyC,UACdsW,EAAsCtW,WAI9C9zD,KAAK2hB,SAASqyC,WAAa/zC,SACxBjgB,KAAK2hB,SAASqyC,YACXoW,EAAsCpW,YAE5Ch0D,KAAK2hB,SAASouC,OAAS9vC,SACpBjgB,KAAK2hB,SAASouC,QAAUqa,EAAsCra,OAEpE,CAMA,aAAAwC,GACG,IAAIiC,EAAe,CAAC,QAAS,QAG7B,OAFmBx0D,KAAKykB,YAAYvB,UAEfvgB,QAAQugC,GACnBsxB,EAAahtD,QAAQ07B,EAAE8M,SAASvtC,MAAQ,GAErD,CAEA,gBAAA6nE,CAAiB37C,EAAOmmC,GACrB,GAAa,MAATnmC,EAAe,OAEnB,IAAIrK,EAAUqK,EAAM47C,kBAAkB7a,YAAY1vD,KAAKykB,YAAazkB,MACpE,OAAe,MAAXskB,GAGJA,EAAQ3C,SAAW2C,EAAQ3C,UAAY,CAAC,EACxC2C,EAAQ3C,SAASgxB,QAAUhkB,EAAM1vB,GACjCqlB,EAAQ3C,SAASqyC,WACdh0D,KAAK2hB,SAASqyC,YACdoW,EAAsCpW,WAIzC1vC,EAAQ3C,SAASmK,MAAQ6C,EAAM7C,MAI/BxH,EAAQ0jC,SAASiI,EAAI6E,EAGrB90D,KAAK4iB,OAAOxb,KAAKkd,GAEVA,QApBP,CAqBH,mBCtGH,MAAMiT,EAAmB,EAAQ,OAE3BizC,EAA8C,CAAC,EAE/CC,EAA6B,CAChChoE,IAAK,eACLsb,KAAM,eACNsxC,SAAU,+BAGb1vD,EAAOC,QAAU,cAAqC23B,EAMnD,WAAAz3B,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MACGwF,EACAkf,EACA1c,EACAogC,GAAiBsiC,EAEvB,CAEA,aAAOz6B,GACJ,OAAOy6B,CACV,CAEA,oBAAOtiC,GACJ,OAAOqiC,CACV,oBC/BH,MAAMjzC,EAAmB,EAAQ,OAE3BmzC,EAA6C,CAChD3a,OAAQ,GACRxO,MAAO,KAGJopB,EAA4B,CAC/BloE,IAAK,cACLsb,KAAM,QACNsxC,SAAU,8BAGb1vD,EAAOC,QAAU,cAAoC23B,EAMlD,WAAAz3B,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MACGwF,EACAkf,EACA1c,EACAogC,GAAiBwiC,EAEvB,CAEA,aAAO36B,GACJ,OAAO26B,CACV,CAEA,oBAAOxiC,GACJ,OAAOuiC,CACV,CAYA,UAAA7qD,CAAWta,GACRxF,MAAM8f,WAAWta,GAGjBvF,KAAK2hB,SAASouC,OAAS9vC,SACpBjgB,KAAK2hB,SAASouC,QACX2a,EAA2C3a,QAEjD/vD,KAAK2hB,SAAS4/B,MAAQthC,SACnBjgB,KAAK2hB,SAAS4/B,OAASmpB,EAA2CnpB,MAExE,oBCzDH,MAAM0iB,EAAe,EAAQ,OAE7BtkE,EAAOC,QAAU,cAAmCqkE,EAKjD,eAAAsG,GACG,IAAIK,EAAa,KAEbxoD,EAAOpiB,KACX,MACIoiB,EAAK0tC,UACN1tC,EAAKra,QACO,UAAZqa,EAAK3f,KACO,YAAZ2f,EAAK3f,KAEL2f,EAAOA,EAAKra,OAOf,MAJgB,UAAZqa,EAAK3f,KAA+B,YAAZ2f,EAAK3f,MAC9BmoE,EAAaxoD,GAGTwoD,CACV,CAEA,KAAAj8C,GACG,IAAI47C,EAAkBvqE,KAAKuqE,kBAC3B,GAAuB,MAAnBA,EAAyB,OAAO,KAEpC,IAAIhjD,EAAiBgjD,EAAgBhjD,eACrC,GAAsB,MAAlBA,EAAwB,OAAO,KAEnC,IAAIzC,EAASyC,EAAeD,WAC5B,GAAc,MAAVxC,EAAgB,OAAO,KAE3B,IAAI6J,EAAQ7J,EAAOwF,QAAQrkB,GAAMA,EAAEhH,IAAMe,KAAK2hB,SAASgxB,UAAS,GAQhE,OAJIhkB,GAAS3uB,KAAK2hB,SAASmK,QACxB6C,EAAM7C,MAAQ9rB,KAAK2hB,SAASmK,OAGxB6C,CACV,CAEA,cAAAk8C,GACG,IAAIC,EAAY9qE,KAAKuqE,kBACrB,IAAKO,EAAW,OAAO,KAEvB,IAAI/4C,EAAK+4C,EAAUvjD,eACnB,IAAKwK,EAAI,OAAO,KAEhB,IAAIpD,EAAQ3uB,KAAK2uB,QACjB,IAAKA,EAAO,OAAO,KAEnB,IAAIvD,EAAW2G,EAAGzJ,YAClB,OAAI8C,EAAiBA,EAASuD,EAAM1M,YACxB,IACf,CAMA,aAAAswC,GACG,MAAO,EACV,CAQA,kBAAIhrC,GACD,OAAO,IACV,oBC/EH,MAAMgQ,EAAmB,EAAQ,OAE3BwzC,EAA4C,CAC/Chb,OAAQ,GAGLib,EAA2B,CAC9BvoE,IAAK,aACLsb,KAAM,OACNsxC,SAAU,6BAGb1vD,EAAOC,QAAU,cAAmC23B,EAMjD,WAAAz3B,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MACGwF,EACAkf,EACA1c,EACAogC,GAAiB6iC,EAEvB,CAEA,aAAOh7B,GACJ,OAAOg7B,CACV,CAEA,oBAAO7iC,GACJ,OAAO4iC,CACV,CAYA,UAAAlrD,CAAWta,GACRxF,MAAM8f,WAAWta,GAGjBvF,KAAK2hB,SAASouC,OAAS9vC,SACpBjgB,KAAK2hB,SAASouC,QACXgb,EAA0Chb,OAEnD,mBCrDH,MAAMx4B,EAAmB,EAAQ,OAE3B6yC,EAAwC,CAAC,EAEzCa,EAA2B,CAC9BxoE,IAAK,aACLsb,KAAM,UACNsxC,SAAU,6BAGb1vD,EAAOC,QAAU,cAAmC23B,EAMjD,WAAAz3B,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MACGwF,EACAkf,EACA1c,EACAogC,GAAiB8iC,EAEvB,CAEA,aAAOj7B,GACJ,OAAOi7B,CACV,CAEA,oBAAO9iC,GACJ,OAAOiiC,CACV,oBC/BH,MAAMnG,EAAe,EAAQ,OAEvBiH,EAA6C,CAChDC,YAAa,gBACbpa,WAAY,KACZxP,MAAO,EACPsD,SAAU,GACVumB,UAAW,cACXnpE,SAAU,KACVopE,kBAAmB,wBACnBC,eAAgB,QAGbhZ,EAAiB,CACpB7vD,IAAK,cACLsb,KAAM,cACNsxC,SAAU,gBAGb1vD,EAAOC,QAAU,cAAoCqkE,EAClD,WAAAnkE,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MAAMwF,EAAQkf,EAAa1c,EAAQogC,GAAiBmqB,EACvD,CAEA,aAAOtiB,GACJ,OAAOsiB,CACV,CAEA,oBAAOnqB,GACJ,OAAO+iC,CACV,CAcA,KAAAtjE,GACG5H,KAAK0/B,YAAY1/B,KAAMA,KAAM,CAAC,YAAa,gBAE3C,IAAI0L,EAAM3L,MAAM6H,QAEhB,OADA8D,EAAImkD,QAAU,GACPnkD,CACV,CAQA,UAAAmU,CAAWta,GACRxF,MAAM8f,WAAWta,GAGjBvF,KAAK2hB,SAAS4/B,MAAQthC,SACnBjgB,KAAK2hB,SAAS4/B,OAAS2pB,EAA2C3pB,OAGrEvhD,KAAKs/B,UAAUt/B,KAAMA,KAAM,CAAC,YAAa,eAC5C,CAEA,SAAAurE,GAKG,MAAMzmD,EAAS9kB,KAAKwgB,gBAAgB,GAAG8G,WAGjCqH,EAAQ7J,EAASA,EAAOwF,SAAS,GAAK,KAE5C,MAAO,gBAAgBxF,GAAQ7lB,MAAM0vB,GAAO1vB,MAC/C,CAEA,WAAAusE,GACG,MAAO,SAASxrE,KAAK2hB,SAASkjC,UACjC,CAEA,gBAAI3iD,GACD,OACGlC,KAAK2hB,SAAS1f,UACdipE,EAA2CjpE,QAEjD,CAEA,mBAAIue,GACD,IAAIuwC,GAAc/wD,KAAK2hB,UAAY,CAAC,GAAGovC,WACvC,IAAKA,EAAY,MAAO,GAExB,IAAI0a,EAAS1a,EAAWrtC,MAAM,MAAQ,GAEtC,OAAO1jB,KAAKO,GAAGigB,iBAAiBuR,GAAO05C,EAAOjkE,QAAQuqB,EAAG9yB,KAAO,KAAM,EACzE,oBCpGH,MAAMwpE,EAAS,EAAQ,OAEjBjW,EAA4C,CAC/CC,aAAa,EACbC,UAAW,GACXC,eAAe,EACfC,YAAa,GACbC,cAAc,EACdC,WAAY,GACZ4Y,eAAe,EACfC,YAAa,GACb5Y,YAAa,KACbC,UAAW,QACXC,WAAW,GAGRC,EAA2B,CAC9BzwD,IAAK,SAGLsb,KAAM,SAGNsxC,SAAU,wBAIb1vD,EAAOC,QAAU,cAAmC6oE,EACjD,WAAA3oE,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MACGwF,EACAkf,EACA1c,EACAogC,GAAiB+qB,EAEvB,CAEA,aAAOljB,GACJ,OAAOkjB,CACV,CAEA,oBAAO/qB,GACJ,OAAOqqB,CACV,CAMA,KAAA5qD,GAEG,IAAI9C,EAAS,GAcb,OAZI9E,KAAK2hB,SAAS+wC,WAAW5tD,EAAOsC,KAAK,aAErCpH,KAAK2hB,SAASixC,aAAa9tD,EAAOsC,KAAK,eAEvCpH,KAAK2hB,SAASmxC,YAAYhuD,EAAOsC,KAAK,cAEtCpH,KAAK2hB,SAASgqD,aAAa7mE,EAAOsC,KAAK,eAE3CpH,KAAK0/B,YAAY1/B,KAAK2hB,SAAU3hB,KAAK2hB,SAAU7c,GAElC/E,MAAM6H,OAGtB,CAQA,kBAAI2f,GACD,OAAO,IACV,CAEA,UAAA1H,CAAWta,GACRxF,MAAM8f,WAAWta,GAGjB,IAAIT,EAAS,GAET9E,KAAK2hB,SAAS+wC,WAAW5tD,EAAOsC,KAAK,aAErCpH,KAAK2hB,SAASixC,aAAa9tD,EAAOsC,KAAK,eAEvCpH,KAAK2hB,SAASmxC,YAAYhuD,EAAOsC,KAAK,cAEtCpH,KAAK2hB,SAASgqD,aAAa7mE,EAAOsC,KAAK,eAE3CpH,KAAK0/B,YAAY1/B,KAAK2hB,SAAU3hB,KAAK2hB,SAAU7c,GAE/C9E,KAAK2hB,SAAS8wC,YAAc9rD,KAAKiE,OAC7B5K,KAAK2hB,UAAU8wC,cAAe,IAC5BD,EAA0CC,aAEhDzyD,KAAK2hB,SAASgxC,cAAgBhsD,KAAKiE,MAChC5K,KAAK2hB,SAASgxC,eACXH,EAA0CG,eAEhD3yD,KAAK2hB,SAASkxC,aAAelsD,KAAKiE,MAC/B5K,KAAK2hB,SAASkxC,cACXL,EAA0CK,cAEhD7yD,KAAK2hB,SAAS+pD,cAAgB/kE,KAAKiE,MAChC5K,KAAK2hB,SAAS+pD,eACXlZ,EAA0CkZ,eAGhD1rE,KAAK2hB,SAASsxC,UAAYtsD,KAAKiE,MAC5B5K,KAAK2hB,SAASsxC,WACXT,EAA0CS,UAEnD,CAMA,aAAAV,GACG,MAAO,EACV,oBC3HH,MAAM/6B,EAAiB,EAAQ,OAEzBo0C,EAA8C,CAAC,EAE/CC,EAA6B,CAChCppE,IAAK,WACLsb,KAAM,iBACNsxC,SAAU,0BAGb1vD,EAAOC,QAAU,cAAqC43B,EACnD,WAAA13B,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MACGwF,EACAkf,EACA1c,EACAogC,GAAiB0jC,EAEvB,CAEA,aAAO77B,GACJ,OAAO67B,CACV,CAEA,oBAAO1jC,GACJ,OAAOyjC,CACV,CAMA,aAAArZ,GACG,MAAO,EACV,oBClCH,MAAM/6B,EAAiB,EAAQ,OAEzBs0C,EAA6C,CAChDxY,SAAU,GACVluC,iBAAkB,CAEfC,KAAM,MACNzL,MAAO,IAEV0L,WAAY,GAQZiuC,WAAY,IACZC,YAAa,KAGVuY,EAA4B,CAC/BtpE,IAAK,UACLsb,KAAM,UACNsxC,SAAU,WAGb1vD,EAAOC,QAAU,cAAoC43B,EAClD,WAAA13B,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MACGwF,EACAkf,EACA1c,EACAogC,GAAiB4jC,EAEvB,CAEA,aAAO/7B,GACJ,OAAO+7B,CACV,CAEA,oBAAO5jC,GACJ,OAAO2jC,CACV,CAYA,UAAAjsD,CAAWta,GACRxF,MAAM8f,WAAWta,GAEjBvF,KAAK2hB,SAASyD,iBACXplB,KAAK2hB,SAASyD,kBACd0mD,EAA2C1mD,gBACjD,CAMA,aAAAmtC,GACG,MAAO,EACV,oBCrEH,MAAM4T,EAAkB,EAAQ,OAC1B3uC,EAAiB,EAAQ,OAEzBk8B,EAAe,EAAQ,MACvBC,EAAe,EAAQ,OAEvBC,EAAqB,CACxBnxD,IAAK,OACLsb,KAAM,WACNsxC,SAAU,QAGPwE,EAAsC,CACzC9C,WAAY,KACZ+C,WAAW,EACXC,cAAe,OACfC,WAAY,IACZjE,OAAQ,IACRkE,aAAa,EACbC,aAAa,EACbC,aAAc,GACdC,SAAU,OAkBVC,YAAa,GAabC,YAAa,IAGhB30D,EAAOC,QAAU,cAA6BumE,EAC3C,WAAArmE,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MAAMwF,EAAQkf,EAAa1c,EAAQogC,GAAiByrB,EACvD,CAEA,aAAO5jB,GACJ,OAAO4jB,CACV,CAEA,oBAAOzrB,GACJ,OAAO0rB,CACV,CAYA,UAAAh0C,CAAWta,GACRxF,MAAM8f,WAAWta,GAEjBvF,KAAK2hB,SAASoyC,cACX/zD,KAAK2hB,SAASoyC,eACdF,EAAoCE,cAGvC/zD,KAAK2hB,SAASmyC,UAAYntD,KAAKiE,MACD,MAA3B5K,KAAK2hB,SAASmyC,UACT9zD,KAAK2hB,SAASmyC,UACdD,EAAoCC,WAE5C9zD,KAAK2hB,SAASsyC,YAActtD,KAAKiE,MACD,MAA7B5K,KAAK2hB,SAASsyC,YACTj0D,KAAK2hB,SAASsyC,YACdJ,EAAoCI,aAE5Cj0D,KAAK2hB,SAASuyC,YAAcvtD,KAAKiE,MACD,MAA7B5K,KAAK2hB,SAASuyC,YACTl0D,KAAK2hB,SAASuyC,YACdL,EAAoCK,aAI5Cl0D,KAAK2hB,SAASqyC,WAAa/zC,SACI,MAA5BjgB,KAAK2hB,SAASqyC,WACTH,EAAoCG,WACpCh0D,KAAK2hB,SAASqyC,YAEtBh0D,KAAK2hB,SAASouC,OAAS9vC,SACI,MAAxBjgB,KAAK2hB,SAASouC,OACT8D,EAAoC9D,OACpC/vD,KAAK2hB,SAASouC,OAEzB,CAGA,UAAAwE,CAAWzvC,GACR9kB,KAAKgxD,eAAiBlsC,CACzB,CAMA,aAAAytC,GACG,IAAIiC,EAAe,CAAC,QAAS,SAAU,SAAU,QAGjD,OAFmBx0D,KAAKykB,YAAYvB,UAEfvgB,QAAQugC,GACnBsxB,EAAahtD,QAAQ07B,EAAE8M,SAASvtC,MAAQ,GAErD,CAWA,eAAAgyD,CAAgB9xD,GACb,MAAM+xD,EAAqB/xC,IACxB,IAAIgyC,EAAa,GAYjB,OAVAhyC,EAAM3c,SAASC,IACH,MAALA,IAEJ0uD,EAAWvtD,KAAKnB,GAEZA,EAAE2c,QAAQhhB,SACX+yD,EAAaA,EAAWh7C,OAAO+6C,EAAkBzuD,EAAE2c,UACtD,IAGI+xC,CAAU,EAGpB,OAAI30D,KAAK4iB,QAAQhhB,QAGA,MAAVe,IACDA,EAAUiyD,GAASA,aAAgBp9B,GAHhBk9B,EAAkB10D,KAAK4iB,QAMxBjgB,OAAOA,IAErB,EAEb,CAEA,cAAAkyD,CAAelmC,EAAOmmC,GACnB,GAAa,MAATnmC,EAAJ,CAEA,IAAIomC,EAAiBpmC,EAAMq9C,gBAC3B,GAAsB,MAAlBjX,EAAJ,CAEA,IAAIzwC,EAAUywC,EAAerF,YAAY1vD,KAAKykB,YAAazkB,MAC3D,GAAe,MAAXskB,EAYJ,OATAA,EAAQ3C,SAAW2C,EAAQ3C,UAAY,CAAC,EACxC2C,EAAQ3C,SAASgxB,QAAUhkB,EAAM1vB,GAGhB,MAAb61D,IAAmBxwC,EAAQ0jC,SAASiI,EAAI6E,GAG5C90D,KAAK4iB,OAAOxb,KAAKkd,GAEVA,CAf2B,CAHT,CAmB5B,CAEA,cAAI2wC,GACD,IAAInwC,EAAS9kB,KAAKunB,eAAeD,WAUjC,OARwB,MAApBtnB,KAAKk1D,cACNl1D,KAAKk1D,YAAc,IAAIxB,GAG1B1zD,KAAKk1D,YAAYC,SAASn1D,MAC1BA,KAAKk1D,YAAYE,aAAap1D,KAAK2hB,SAAS0yC,aAC5Cr0D,KAAKk1D,YAAYX,WAAWzvC,GAErB9kB,KAAKk1D,WACf,CAEA,gBAAAK,CAAiBtrC,GACd,OAAOjqB,KAAKi1D,WAAWO,WAAW,CAAEp0D,KAAM6oB,EAAStV,KAAM3U,MAC5D,CAEA,aAAAy1D,CAAcxrC,GAEX,OAAIA,IACYjqB,KAAKunB,eAAeD,WACN+E,YAAYpC,GACA5V,QAEpChT,QAAQC,MAAM,2BAA4B,CAAE2oB,QAASA,IAC9CzoB,QAAQsI,OAAO,IAAIxK,MAAM,8BAI/BU,KAAKi1D,WAAWvyC,QAAQ,CAAEthB,KAAM6oB,EAAStV,KAAM3U,MACzD,CAEA,aAAA01D,CAAczrC,GACX,IAAInF,EAAS9kB,KAAKunB,eAAeD,WAE7BquC,EAAc,IAAIhC,EAKtB,OAJAgC,EAAYR,SAASn1D,MACrB21D,EAAYP,aAAap1D,KAAK2hB,SAAS2yC,aACvCqB,EAAYpB,WAAWzvC,GAEhB6wC,EAAYjzC,QAAQ,CAAEthB,KAAM6oB,EAAStV,KAAM3U,MACrD,mBC5OH,MAAMw3B,EAAiB,EAAQ,OAEzBo+B,EAA4C,CAAC,EAE7CC,EAA2B,CAC9BpzD,IAAK,cAELsb,KAAM,eAENsxC,SAAU,wBAIb1vD,EAAOC,QAAU,cAA+B43B,EAC7C,WAAA13B,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MACGwF,EACAkf,EACA1c,EACAogC,GAAiB0tB,EAEvB,CAEA,aAAO7lB,GACJ,OAAO6lB,CACV,CAEA,oBAAO1tB,GACJ,OAAOytB,CACV,CAMA,aAAArD,GACG,MAAO,EACV,oBCrCH,MAAM/6B,EAAiB,EAAQ,OAEzBy0C,EAAgD,CACnDlW,YAAY,GAGTmW,EAA+B,CAClCzpE,IAAK,aACLsb,KAAM,WACNsxC,SAAU,4BAGb1vD,EAAOC,QAAU,cAAuC43B,EACrD,WAAA13B,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MACGwF,EACAkf,EACA1c,EACAogC,GAAiB+jC,EAEvB,CAEA,aAAOl8B,GACJ,OAAOk8B,CACV,CAEA,oBAAO/jC,GACJ,OAAO8jC,CACV,CAUA,aAAA1Z,GACG,MAAO,EACV,oBCxCH,MAAMkW,EAAS,EAAQ,OAEjB7R,EAA2C,CAC9CtV,SAAU,EACVuV,QAAS,GAGZl3D,EAAOC,QAAU,cAAsC6oE,EAKpD,oBAAOtgC,GACJ,OAAOyuB,CACV,CAQA,kBAAIrvC,GACD,IAAI5S,EAAO3U,KAAKuwD,sBAChB,GAAY,MAAR57C,EAAc,OAAO,KAEzB,IAAI4S,EAAiB5S,EAAK4S,eAC1B,OAAsB,MAAlBA,EAA+B,KAE5BA,CACV,CAEA,KAAAoH,GACG,GAAI3uB,KAAK2hB,SAASlW,SAAU,CACzB,IAAIqZ,EAAS9kB,KAAKO,GAAGoL,WAAW3L,KAAK2hB,SAASlW,UAC9C,OAAKqZ,EAEEA,EAAO8C,UAAU5nB,KAAK2hB,SAASgxB,SAFlB,IAGvB,CAAO,CACJ,IAGI7tB,EAHAnQ,EAAO3U,KAAKuwD,sBAChB,GAAY,MAAR57C,EAAc,OAAO,KAGzB,GAAIA,EAAKq8C,eACNlsC,EAASnQ,EAAKq8C,mBACV,CACJ,IAAIzpC,EAAiB5S,EAAK4S,eAC1B,GAAsB,MAAlBA,EAAwB,OAAO,KAEnCzC,EAASyC,EAAeD,UAC3B,CAEA,OAAc,MAAVxC,EAAuB,KAEfA,EAAO8C,UAAU5nB,KAAK2hB,SAASgxB,QAE9C,CACH,oBCzDH,MAAMnb,EAAiB,EAAQ,OAEzB20C,EAA0C,CAC7CpjE,KAAM,UAGHqjE,EAAyB,CAC5B3pE,IAAK,OACLsb,KAAM,iBACNsxC,SAAU,sBAGb1vD,EAAOC,QAAU,cAAiC43B,EAC/C,WAAA13B,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MACGwF,EACAkf,EACA1c,EACAogC,GAAiBikC,EAEvB,CAEA,aAAOp8B,GACJ,OAAOo8B,CACV,CAEA,oBAAOjkC,GACJ,OAAOgkC,CACV,CAMA,aAAA5Z,GACG,MAAO,EACV,oBCpCH,MAAM/6B,EAAiB,EAAQ,OAEzB60C,EAA4C,CAC/CtV,UAAW,GAGRuV,EAA2B,CAC9B7pE,IAAK,YACLsb,KAAM,UACNsxC,SAAU,wBAGb1vD,EAAOC,QAAU,cAAmC43B,EACjD,WAAA13B,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MACGwF,EACAkf,EACA1c,EACAogC,GAAiBmkC,EAEvB,CAEA,aAAOt8B,GACJ,OAAOs8B,CACV,CAEA,oBAAOnkC,GACJ,OAAOkkC,CACV,CAcA,KAAAzkE,GACG5H,KAAK0/B,YAAY1/B,KAAMA,KAAM,CAAC,QAAS,cAEvC,IAAI0L,EAAM3L,MAAM6H,QAEhB,OADA8D,EAAIiX,MAAQ,GACLjX,CACV,CAQA,UAAAmU,CAAWta,GACRxF,MAAM8f,WAAWta,GAGjBvF,KAAK2hB,SAASo1C,UACX/2D,KAAK2hB,SAASo1C,WACdsV,EAA0CtV,UAG7C/2D,KAAK2hB,SAASo1C,UAAY92C,SAASjgB,KAAK2hB,SAASo1C,UACpD,CAMA,aAAAxE,GACG,MAAO,EACV,mBC1EH,MAAMga,EAAmB,EAAQ,OAE3BC,EAA8C,CAAC,EAE/CC,EAA6B,CAChChqE,IAAK,gBACLsb,KAAM,aACNsxC,SAAU,0BAGb1vD,EAAOC,QAAU,cAAiC2sE,EAC/C,WAAAzsE,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MACGwF,EACAkf,EACA1c,EACAogC,GAAiBskC,EAEvB,CAEA,aAAOz8B,GACJ,OAAOy8B,CACV,CAEA,oBAAOtkC,GACJ,OAAOqkC,CACV,CAMA,aAAAja,GACG,MAAO,EACV,oBClCH,MAAM/6B,EAAiB,EAAQ,OAEzBk1C,EAAoD,CACvD3jE,KAAM,cAGH4jE,EAA2B,CAC9BlqE,IAAK,iBACLsb,KAAM,UACNsxC,SAAU,gCAGb1vD,EAAOC,QAAU,cAA2C43B,EACzD,WAAA13B,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MACGwF,EACAkf,EACA1c,EACAogC,GAAiBwkC,EAEvB,CAEA,aAAO38B,GACJ,OAAO28B,CACV,CAEA,oBAAOxkC,GACJ,OAAOukC,CACV,CAMA,aAAAna,GACG,MAAO,EACV,oBCpCH,MAAM/6B,EAAiB,EAAQ,OAEzBo1C,EAAkD,CACrD7jE,KAAM,cAGH8jE,EAAyB,CAC5BpqE,IAAK,eACLsb,KAAM,UACNsxC,SAAU,8BAGb1vD,EAAOC,QAAU,cAAyC43B,EACvD,WAAA13B,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MACGwF,EACAkf,EACA1c,EACAogC,GAAiB0kC,EAEvB,CAEA,aAAO78B,GACJ,OAAO68B,CACV,CAEA,oBAAO1kC,GACJ,OAAOykC,CACV,CAMA,aAAAra,GACG,MAAO,EACV,oBCpCH,MAAM/6B,EAAiB,EAAQ,OAEzBigC,EAA6C,CAChD1uD,KAAM,UAGH4uD,EAA4B,CAC/Bl1D,IAAK,UACLsb,KAAM,WACNsxC,SAAU,yBAGb1vD,EAAOC,QAAU,cAAoC43B,EAClD,WAAA13B,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MACGwF,EACAkf,EACA1c,EACAogC,GAAiBwvB,EAEvB,CAEA,aAAO3nB,GACJ,OAAO2nB,CACV,CAEA,oBAAOxvB,GACJ,OAAOsvB,CACV,CAMA,aAAAlF,GACG,MAAO,EACV,oBCpCH,MAAMga,EAAmB,EAAQ,OAE3BO,EAA0C,CAAC,EAE3CC,EAAiB,CACpBtqE,IAAK,WACLsb,KAAM,UACNsxC,SAAU,sBAGb1vD,EAAOC,QAAU,cAAiC2sE,EAC/C,WAAAzsE,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MAAMwF,EAAQkf,EAAa1c,EAAQogC,GAAiB4kC,EACvD,CAEA,aAAO/8B,GACJ,OAAO+8B,CACV,CAEA,oBAAO5kC,GACJ,OAAO2kC,CACV,CAMA,aAAAva,GACG,MAAO,EACV,oBC7BH,MAAM0R,EAAe,EAAQ,OAEvB+I,EAAuC,CAC1Cjc,WAAY,GAKZkc,aAAc,GAKdC,iBAAkB,GAIlBC,eAAgB,GAIhBC,gBAAiB,GAIjBC,gBAAiB,GAIjBC,aAAc,IAMXhb,EAAiB,CACpB7vD,IAAK,QACLsb,KAAM,QACNsxC,SAAU,SAGb1vD,EAAOC,QAAU,cAA8BqkE,EAM5C,WAAAnkE,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MAAMwF,EAAQkf,EAAa1c,EAAQogC,GAAiBmqB,EACvD,CAEA,aAAOtiB,GACJ,OAAOsiB,CACV,CAEA,oBAAOnqB,GACJ,OAAO6kC,CACV,CAQA,UAAAntD,CAAWta,GACRxF,MAAM8f,WAAWta,GAEjB9F,OAAOD,KAAKwtE,GAAsChnE,SAASiB,IACxDjH,KAAK2hB,SAAS1a,GACXjH,KAAK2hB,SAAS1a,IAAM+lE,EAAqC/lE,EAAE,GAEpE,CAMA,aAAAsrD,GACG,MAAO,EACV,oBChFH,MAAM0R,EAAe,EAAQ,OAEvBsJ,EAAsC,CACzC/pE,MAAO,GAKPutD,WAAY,GAIZyc,QAAS,GAITC,YAAa,EAIbC,WAAY,EAIZC,WAAY,EAKZC,YAAa,EAMbvxB,WAAY,EAIZwxB,aAAc,EAWd7I,YAAa,GAIbC,WAAY,GAMZC,SAAU,GAIVC,QAAS,GAMT2I,UAAW,EAIXnoC,eAAgB,GAIhBC,aAAc,GAIdmoC,eAAgB,GAIhBC,aAAc,GAKd7oD,gBAAiB,CAGdwgB,eAAgB,GAChBC,aAAc,GACdmoC,eAAgB,GAChBC,aAAc,IAEjBC,WAAY,CACTC,aAAc,EACdC,mBAAoB,UACpBC,gBAAiB,GAKpBre,OAAQ,EAKRse,WAAY,EACZC,aAAc,EACdC,YAAa,EACbC,QAAS,GAGTC,aAAc,GAiBdC,UAAW,GAMRpc,EAAiB,CACpB7vD,IAAK,OACLsb,KAAM,QACNsxC,SAAU,QAcb,SAASsf,EAAgBC,EAAMjgD,QACF,IAAfigD,EAAKjgD,GAIhBigD,EAAKjgD,GAASigD,EAAKjgD,IAAU4+C,EAAoC5+C,GAH9DigD,EAAKjgD,GAAS4+C,EAAoC5+C,EAIxD,CAYA,SAASkgD,EAAoBD,EAAMjgD,GAChC,IAC6B,iBAAfigD,EAAKjgD,KACbigD,EAAKjgD,GAAShoB,KAAKiE,MAAMgkE,EAAKjgD,IAEpC,CAAE,MAAOtvB,GACNuvE,EAAKjgD,GAAS4+C,EAAoC5+C,EACrD,CACH,CAEAhvB,EAAOC,QAAU,cAA6BqkE,EAM3C,WAAAnkE,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MAAMwF,EAAQkf,EAAa1c,EAAQogC,GAAiBmqB,EACvD,CAEA,aAAOtiB,GACJ,OAAOsiB,CACV,CAEA,oBAAOnqB,GACJ,OAAOolC,CACV,CAYA,UAAA1tD,CAAWta,GACRxF,MAAM8f,WAAWta,GAGjBopE,EAAgB3uE,KAAK2hB,SAAU,cAM/BktD,EAAoB7uE,KAAK2hB,SAAU,WACnCktD,EAAoB7uE,KAAK2hB,SAAU,eACnCktD,EAAoB7uE,KAAK2hB,SAAU,cACnCktD,EAAoB7uE,KAAK2hB,SAAU,cACnCktD,EAAoB7uE,KAAK2hB,SAAU,eAEnCktD,EAAoB7uE,KAAK2hB,SAAU,cACnCktD,EAAoB7uE,KAAK2hB,SAAU,gBACnCktD,EAAoB7uE,KAAK2hB,SAAU,cACnCktD,EAAoB7uE,KAAK2hB,SAAU,gBACnCktD,EAAoB7uE,KAAK2hB,SAAU,eACnCktD,EAAoB7uE,KAAK2hB,SAAU,gBACnCktD,EAAoB7uE,KAAK2hB,SAAU,aAEnC3hB,KAAK2hB,SAASssD,WACXjuE,KAAK2hB,SAASssD,YACdV,EAAoCU,WAEvC,IACGjuE,KAAK2hB,SAASssD,WAAWC,aAAevnE,KAAKiE,MAC1C5K,KAAK2hB,SAASssD,WAAWC,aAE/B,CAAE,MAAO7uE,GACNW,KAAK2hB,SAASssD,WAAWC,aACtBX,EAAoCU,WAAWC,YACrD,CAEA,IACGluE,KAAK2hB,SAASssD,WAAWG,gBAAkBznE,KAAKiE,MAC7C5K,KAAK2hB,SAASssD,WAAWG,gBAE/B,CAAE,MAAO/uE,GACNW,KAAK2hB,SAASssD,WAAWG,gBACtBb,EAAoCU,WAAWG,eACrD,CASAO,EAAgB3uE,KAAK2hB,SAAU,eAC/BgtD,EAAgB3uE,KAAK2hB,SAAU,YAC/BgtD,EAAgB3uE,KAAK2hB,SAAU,cAC/BgtD,EAAgB3uE,KAAK2hB,SAAU,WAC/BktD,EAAoB7uE,KAAK2hB,SAAU,aAwBnC,IAAImtD,EAAW,CACZ,aACA,mBACA,iBACA,eACA,iBACA,gBAGC9uE,KAAK2hB,SAASwD,iBACf2pD,EAAS9oE,SAAS0b,IACS,MAApB1hB,KAAK2hB,SAASD,KACf1hB,KAAK2hB,SAASD,GAAK1hB,KAAK2hB,SAASwD,gBAAgBzD,GAAE,IAK5DotD,EAAS9oE,SAAS0b,IACfitD,EAAgB3uE,KAAK2hB,SAAUD,EAAE,IAIpC1hB,KAAK4iB,OAAS,EACjB,CAMA,aAAA2vC,GACG,MAAO,EACV,CAEA,WAAAwc,CAAYpgD,EAAOne,GAChB,IAAIw+D,GAAa,EAYjB,GARIhvE,KAAK2hB,UAAUgkB,gBAAkBhX,EAAM1M,aAExCjiB,KAAK2hB,SAASgkB,eAAiB,GAE/BqpC,GAAa,GAIZhvE,KAAK2hB,SAASikB,cAAchkC,OAAQ,CAErC,IAAI+qB,EAAQ3sB,KAAK2hB,SAASikB,aAAap+B,QAAQmnB,EAAM1M,YAEjD0K,GAAS,IACV3sB,KAAK2hB,SAASikB,aAAarT,OAAO5F,EAAO,GAEzCqiD,GAAa,EAEnB,CAGA,GAAIhvE,KAAK2hB,SAASosD,gBAAgBnsE,OAAQ,CAEvC,IAAI+qB,EAAQ3sB,KAAK2hB,SAASosD,eAAevmE,QAAQmnB,EAAM1vB,IAEnD0tB,GAAS,IACV3sB,KAAK2hB,SAASosD,eAAex7C,OAAO5F,EAAO,GAE3CqiD,GAAa,EAEnB,CAGA,GAAIhvE,KAAK2hB,SAASqsD,cAAcpsE,OAAQ,CAErC,IAAI+qB,EAAQ3sB,KAAK2hB,SAASqsD,aAAaxmE,QAAQmnB,EAAM1vB,IAEjD0tB,GAAS,IACV3sB,KAAK2hB,SAASqsD,aAAaz7C,OAAO5F,EAAO,GAEzCqiD,GAAa,EAEnB,CAGAx+D,EAAG,KAAMw+D,EACZ,CAEA,qBAAApd,GACG,MAAO,CAAC,cAAe,aAAc,WAAY,UACpD,oBC9XH,MAAMqS,EAAe,EAAQ,OAEvBgL,EAAuC,CAC1CpqB,SAAU,GACVtD,MAAO,IACPwO,OAAQ,KAGLuC,EAAiB,CACpB7vD,IAAK,QACLsb,KAAM,YACNsxC,SAAU,SAGb1vD,EAAOC,QAAU,cAA8BqkE,EAC5C,WAAAnkE,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MAAMwF,EAAQkf,EAAa1c,EAAQogC,GAAiBmqB,EACvD,CAEA,aAAOtiB,GACJ,OAAOsiB,CACV,CAEA,oBAAOnqB,GACJ,OAAO8mC,CACV,CAUA,aAAA1c,GACG,MAAO,EACV,CAQA,kBAAIhrC,GACD,OAAO,IACV,CAQA,UAAA1H,CAAWta,GACRxF,MAAM8f,WAAWta,GAGjBvF,KAAK2hB,SAAS4/B,MAAQthC,SACnBjgB,KAAK2hB,SAAS4/B,OAAS0tB,EAAqC1tB,OAE/DvhD,KAAK2hB,SAASouC,OAAS9vC,SACpBjgB,KAAK2hB,SAASouC,QAAUkf,EAAqClf,OAEnE,oBCjEH,MAAMkU,EAAe,EAAQ,OAEvBiL,EAAwC,CAC3Cne,WAAY,KAKZoe,WAAY,GAKZC,sBAAuB,GAKvBC,wBAAyB,GAKzBC,WAAY,GAKZC,SAAU,IAWPjd,EAAiB,CACpB7vD,IAAK,SAILsb,KAAM,UAINsxC,SAAU,UAMb1vD,EAAOC,QAAU,cAA+BqkE,EAC7C,WAAAnkE,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MAAMwF,EAAQkf,EAAa1c,EAAQogC,GAAiBmqB,EACvD,CAEA,UAAAzyC,CAAWta,GACRxF,MAAM8f,WAAWta,GAGZvF,KAAK2hB,SAAS4tD,WAChBvvE,KAAK2hB,SAAS4tD,SAAW,CAAEtwE,GAAI,GAAGe,KAAKf,cAAewD,IAAK,QAC3DzC,KAAK2hB,SAAS4tD,SAAS9rE,KAAOzD,KAAK2hB,SAAS6tD,cAG/CxvE,KAAKyvE,aAAezvE,KAAKO,GAAG87B,iBAAiBr8B,KAAK2hB,SAAS4tD,SAC9D,CAEA,KAAA3nE,GACG,IAAI8D,EAAM3L,MAAM6H,QAKhB,OAJA8D,EAAIiW,SAAS4tD,SAAWvvE,KAAKyvE,aAAa7nE,QAG1C8D,EAAIiW,SAAS4tD,SAAStwE,GAAK,GAAGe,KAAKf,cAC5ByM,CACV,CAEA,aAAOskC,GACJ,OAAOsiB,CACV,CAEA,oBAAOnqB,GACJ,OAAO+mC,CACV,oBCtFH,MAAMjL,EAAe,EAAQ,OAEvBrM,EAAuC,CAC1Cn0D,KAAM,GACNoU,OAAQ,EACRm7C,UAAW,QAGRV,EAAiB,CACpB7vD,IAAK,QACLsb,KAAM,OACNsxC,SAAU,SAGb1vD,EAAOC,QAAU,cAA8BqkE,EAM5C,WAAAnkE,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MAAMwF,EAAQkf,EAAa1c,EAAQogC,GAAiBmqB,EACvD,CAEA,aAAOtiB,GACJ,OAAOsiB,CACV,CAEA,oBAAOnqB,GACJ,OAAOyvB,CACV,CAcA,KAAAhwD,GACG5H,KAAK0/B,YAAY1/B,KAAMA,KAAM,CAAC,QAAS,SAEvC,IAAI0L,EAAM3L,MAAM6H,QAEhB,OADA8D,EAAImkD,QAAU,GACPnkD,CACV,CAQA,UAAAmU,CAAWta,GACRxF,MAAM8f,WAAWta,GAIjBvF,KAAKyD,KAAO8B,EAAO9B,MAAQ8B,EAAOoc,SAASle,MAAQ,QAEnDzD,KAAK2hB,SAAS9J,OACX7X,KAAK2hB,SAAS9J,QAAU+/C,EAAqC//C,OAChE7X,KAAK2hB,SAASqxC,UACXhzD,KAAK2hB,SAASqxC,WACd4E,EAAqC5E,UAGxChzD,KAAK4iB,OAAS,GAGd5iB,KAAK2hB,SAAS9J,OAASoI,SAASjgB,KAAK2hB,SAAS9J,QAE9C7X,KAAKs/B,UAAUt/B,KAAMA,KAAM,CAAC,QAAS,QACxC,CAMA,aAAAuyD,GACG,MAAO,EACV,CAQA,YAAAsF,GACG73D,KAAK2hB,SAAS9J,OAAS,CAC1B,CAMA,WAAAigD,GACG93D,KAAK2hB,SAAS9J,OAAS,CAC1B,CAMA,iBAAAkgD,GACG/3D,KAAK2hB,SAAS9J,OAAS,CAC1B,oBChHH,MAAMsuD,EAAkB,EAAQ,OAC1BlC,EAAe,EAAQ,OAEvByL,EAA4B,CAC/BlsE,MAAO,GACPmsE,WAAY,GAGTrd,EAAiB,CACpB7vD,IAAK,SACLsb,KAAM,UACNsxC,SAAU,UAGb1vD,EAAOC,QAAU,cAA+BqkE,EAM7C,WAAAnkE,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MAAMwF,EAAQkf,EAAa1c,EAAQogC,GAAiBmqB,EACvD,CAEA,aAAOtiB,GACJ,OAAOsiB,CACV,CAEA,oBAAOnqB,GACJ,OAAOunC,CACV,CAOA,SAAAE,GACG5vE,KAAK4iB,OAAOxb,KACTpH,KAAKykB,YAAYD,QACd,CACG/hB,IAAK0jE,EAAgBn2B,SAASvtC,KAEjCzC,KAAKykB,YACLzkB,MAGT,CAQA,aAAAuyD,CAAcsd,GACX,OAAIA,EAGM,GAKH7vE,KAAK+H,OACC/H,KAAK+H,OAAOwqD,eAAc,GAE1B,EAGhB,CAQA,kBAAIhrC,GACD,OAAO,IACV,oBChFH,MAAM08C,EAAe,EAAQ,OAEvBjM,EAAsC,CACzCjH,WAAY,KACZpiC,MAAO,KACPohC,OAAQ,GAGLuC,EAAiB,CACpB7vD,IAAK,OACLsb,KAAM,UACNsxC,SAAU,QAGb1vD,EAAOC,QAAU,cAA8BqkE,EAC5C,WAAAnkE,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MAAMwF,EAAQkf,EAAa1c,EAAQogC,GAAiBmqB,EACvD,CAEA,aAAOtiB,GACJ,OAAOsiB,CACV,CAEA,oBAAOnqB,GACJ,OAAO6vB,CACV,CAMA,aAAAzF,GACG,MAAO,EACV,CAEA,KAAA5jC,GACG,IAAIoD,EAAK/xB,KAAKunB,eACd,IAAKwK,EAAI,OAAO,KAEhB,IAAIjN,EAASiN,EAAGzK,WAChB,OAAKxC,EAEEA,EAAO8C,UAAU5nB,KAAK2hB,SAASgN,OAFlB,IAGvB,oBC3CH,MAAMs1C,EAAe,EAAQ,OAEvB6L,EAAsC,CACzCC,YAAa,IACbC,YAAa,kBACbC,cAAe,eACfC,cAAe,EACfC,YAAa,GACbC,UAAW,UACXC,aAAc,OACdC,aAAc,GACdC,cAAe,GACfC,eAAgB,GAWhBpwD,MAAO,GACPqwD,MAAO,IAGJC,EAAiB,CACpBjuE,IAAK,OACLsb,KAAM,WACNsxC,SAAU,QAGb1vD,EAAOC,QAAU,cAA6BqkE,EAM3C,WAAAnkE,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MAAMwF,EAAQkf,EAAa1c,EAAQogC,GAAiBuoC,EACvD,CAEA,aAAO1gC,GACJ,OAAO0gC,CACV,CAEA,oBAAOvoC,GACJ,OAAO2nC,CACV,CAcA,KAAAloE,GACG5H,KAAK0/B,YAAY1/B,KAAMA,KAAM,CAC1B,eACA,iBACA,kBAECA,KAAK2hB,SAASvB,OACfpgB,KAAK2hB,SAASvB,MAAMpa,SAAS+oD,IAC1B/uD,KAAK0/B,YAAYqvB,EAAMA,EAAM,CAAC,aAAa,IAIjD,IAAIrjD,EAAM3L,MAAM6H,QAEhB,OADA8D,EAAImkD,QAAU,GACPnkD,CACV,CAQA,UAAAmU,CAAWta,GACRxF,MAAM8f,WAAWta,GAEjBvF,KAAKs/B,UAAUt/B,KAAMA,KAAM,CACxB,eACA,iBACA,kBAGHA,KAAK2hB,SAASvB,MACXpgB,KAAK2hB,SAASvB,OAAS0vD,EAAoC1vD,MAE9D,IAAK,IAAIla,EAAI,EAAGA,EAAIlG,KAAK2hB,SAASvB,MAAMxe,OAAQsE,IAAK,CAClD,IAAI6oD,EAAO/uD,KAAK2hB,SAASvB,MAAMla,GAC3B6oD,aAAgBtvD,QACjBsvD,EAAK4hB,UAAYhqE,KAAKiE,MAAMmkD,EAAK4hB,YAAa,GAE9C3wE,KAAKs/B,UAAUyvB,EAAMA,EAAM,CAAC,eAGP,iBAARA,IACb/uD,KAAK2hB,SAASvB,MAAMla,GAAK,CACtB0qE,OAAQ7hB,EACR4hB,WAAW,GAGpB,CACH,CAMA,aAAApe,GACG,MAAO,EACV,CAEA,gBAAAse,CAAiB9tD,GAEVA,GAAQA,EAAK2H,QAAU,GACxB3H,EAAK+F,KAAK,CAAC,GAAG9iB,SAASojB,IACpBrG,EAAKxR,OAAO6X,EAAKnqB,GAAG,GAG7B,CAQA,kBAAIsoB,GACD,OAAO,IACV,CAEA,cAAAupD,CAAe/tD,EAAM3C,GACb2C,GAAS3C,IAEbA,GAAS,IAAIpa,SAAS+qE,IACpB,GAAIA,EAAYJ,UAAW,CACxB,IAAIK,EAAahxE,KAAKykB,YAAYrE,OAC9B3F,GAAMA,EAAExb,IAAM8xE,EAAYH,SAC3B,GACD,GACF,IAAKI,EAAY,OAGjB,GAAuB,GADDA,EAAWhI,gBACP,OAE1B,GAAI+H,EAAYE,MAAO,CACpB,IAAIC,EAAYlxE,KAAKykB,YAAY9B,OAC7B1c,GAAMA,EAAEhH,IAAM8xE,EAAYE,QAC3B,GACD,GACF,IAAKC,EAAW,OAGhB,GAAsB,GADDA,EAAUlI,gBACN,MAC5B,CAEA,IAAIxlE,EAAQxD,KAAKmxE,aAAaJ,GAE9B,IAAIK,EAoBJ,GAVgB,OANbA,EAFCL,EAAYhpE,QAAgC,KAAtBgpE,EAAYhpE,OAExBgb,EAAKsuD,WAAWN,EAAYhpE,QAG5Bgb,KAKGA,EAAKuuD,YAAYP,EAAYhpE,QAEnCwpE,QAAU,GAElBxuD,EAAKnM,QAAQm6D,EAAYhpE,QAEzBqpE,EAAWruD,EAAKsuD,WAAWN,EAAYhpE,SAEtCqpE,EAASxoD,OAAOmoD,EAAYE,OAASF,EAAYH,QAClD,OAEHQ,EAAS14D,IACN,CACGzZ,GAAI8xE,EAAYE,OAASF,EAAYH,OACrCv/D,MAAO7N,EACPuF,KAAMgoE,EAAYhoE,KAClB6nE,OAAQG,EAAYH,OACpB7yD,KAAMgzD,EAAYhzD,KACb,eAAiBgzD,EAAYhzD,KAC7B,IAERgzD,EAAY/oB,SAAW/nC,SAAS8wD,EAAY/oB,UAAY,EAE9D,IAEN,CAgBA,YAAAmpB,CAAaK,GACV,IAAIC,EAAOzxE,KAAKO,GAAGgD,aAAa4B,kBAC5BusE,EAAcF,EAAS5xD,aAAajd,QAAQk9B,GACtCA,EAAEL,eAAiBiyC,IAGzBjuE,EAAQ,GAgBZ,GAdIkuE,EAAY9vE,SACT8vE,EAAY,GAAGC,UAChBnuE,EAAQkuE,EAAY,GAAGC,UACfD,EAAY,GAAGluE,QACvBA,EAAQkuE,EAAY,GAAGluE,SAKxBA,GAASguE,EAASG,YACpBnuE,EAAQguE,EAASG,YAKhBnuE,IAEAA,EAAMoC,QAAQ,aAAc,IAC9B,CAGC,IAAIgrE,EAEDA,EADCY,EAASZ,OACDY,EAASZ,OAET5wE,KAAK4xE,gBAAgBJ,GAGjC,IAAIziB,EAAO/uD,KAAKykB,YAAYrE,OAAO3F,GAAMA,EAAExb,IAAM2xE,IAAQ,GAAM,GAC/D,GAAI7hB,EAED,GAAqB,OAAjByiB,EAASzoE,MAAiC,iBAAhByoE,EAAS/uE,IAAwB,CAC5D,IAAIovE,EAAU9iB,EAAKpsC,OACf1c,GAAMA,EAAEhH,IAAMuyE,EAASP,OAAShrE,EAAEhH,IAAMuyE,EAASvyE,KAClD,GACD,GACE4yE,IACDruE,EAAQquE,EAAQruE,MAEtB,MACGA,EAAQurD,EAAKvrD,KAGtB,CAEA,OAAOA,CACV,CAEA,eAAAouE,CAAgBE,GACb,MAAuB,QAAnBA,EAAYrvE,IACNzC,KAAK4xE,gBAAgBE,EAAY/pE,QAEjC+pE,EAAY7yE,EAEzB,CAEA,IAAAkwD,CAAKF,EAAWlnD,GACb,OAAOhI,MAAMovD,KAAKF,EAAWlnD,GAAQV,MAAMnD,KAEvCA,EAAOyd,SAASvB,OAAS,IAAIpa,SAAQ,CAACyU,EAAGvU,KACvC,IAAI6oD,EAAO7qD,EAAOyd,SAASvB,MAAMla,GAGd,iBAAR6oD,EACR7qD,EAAOyd,SAASvB,MAAMla,GAAK+oD,EAAUF,IAErCA,EAAK6hB,OAAS3hB,EAAUF,EAAK6hB,QAC7B7hB,EAAKkiB,MAAQhiB,EAAUF,EAAKkiB,OAC/B,IAGI/sE,EAAOyD,OAAON,MAAK,IAChBnD,MAGhB,oBCjTH,MAAM+/D,EAAe,EAAQ,OAEvBtQ,EAAe,EAAQ,OAEvBoe,EAA6C,CAChDhhB,WAAY,KACZniC,QAAS,KAaT0lC,YAAa,IAGVhC,EAAiB,CACpB7vD,IAAK,cACLsb,KAAM,aACNsxC,SAAU,gBAGb1vD,EAAOC,QAAU,cAAoCqkE,EAClD,WAAAnkE,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MAAMwF,EAAQkf,EAAa1c,EAAQogC,GAAiBmqB,EACvD,CAEA,aAAOtiB,GACJ,OAAOsiB,CACV,CAEA,oBAAOnqB,GACJ,OAAO4pC,CACV,CAYA,UAAAlyD,CAAWta,GACRxF,MAAM8f,WAAWta,GAEjBvF,KAAK2hB,SAASovC,WACX/wD,KAAK2hB,SAASovC,YACdghB,EAA2ChhB,WAE9C/wD,KAAK2hB,SAASiN,QACX5uB,KAAK2hB,SAASiN,SACdmjD,EAA2CnjD,OACjD,CAUA,KAAAhnB,GACG,IAAI8D,EAAM3L,MAAM6H,QAIhB,OAFA8D,EAAIiW,SAAWjW,EAAIiW,UAAY,CAAC,EAEzBjW,CACV,CAMA,aAAA6mD,GACG,MAAO,EACV,CAEA,aAAAmD,CAAcgP,GACX,MAAM5/C,EAAS9kB,KAAKunB,eAAeD,WAE7BquC,EAAc,IAAIhC,EACxBgC,EAAYR,SAASn1D,MACrB21D,EAAYP,aAAap1D,KAAK2hB,SAAS2yC,aACvCqB,EAAYpB,WAAWzvC,GAEnB4/C,IAAah/D,MAAMC,QAAQ++D,KAAWA,EAAW,CAACA,IAEtDA,GAAU1+D,SAASikB,IAChB0rC,EAAYjzC,QAAQ,CAAEthB,KAAM6oB,EAAStV,KAAM3U,MAAO,GAExD,oBCxFH,MAAMmmE,EAAkB,EAAQ,OAO1B7T,EAAiB,CACpB7vD,IAAK,OACLsb,KAAM,QAGHkwC,EAA8B,CACjCllD,KAAM,OACNwqD,WAAY,IACZC,YAAa,IACbwe,UAAW,KACXC,eAAgB,EAChBC,eAAgB,yBAGnBvyE,EAAOC,QAAU,cAA6BumE,EAC3C,WAAArmE,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MAAMwF,EAAQkf,EAAa1c,EAAQogC,GAAiBmqB,GAiBpDtyD,KAAK+H,OAAS,IAMjB,CAEA,aAAOioC,GACJ,OAAOsiB,CACV,CAEA,oBAAOnqB,GACJ,OAAO8lB,CACV,CAEA,uBAAOkkB,CAAiBpvD,GACrB,MAAO,CACJ,WACA,MAAQjR,OAAOiR,EAAK0B,YAAY7Y,MAAMhG,QAAQ,cAAe,IAC7DkM,OAAOiR,EAAKnX,MACRhG,QAAQ,cAAe,IACvB6H,cACJ,QACDrE,KAAK,IACV,CAUA,KAAAxB,GACG,IAAI8D,EAAM3L,MAAM6H,QAehB,OAbA8D,EAAIE,KAAO5L,KAAK4L,KAEhBF,EAAI2iD,QAAUruD,KAAKquD,QAGO,SAAtBruD,KAAK2hB,SAAS5Y,OAAiB2C,EAAIqS,KAAO,SAGzC/d,KAAKwD,OAAuB,WAAdxD,KAAKwD,QAAoBkI,EAAIlI,MAAQkI,EAAIE,MAG5DF,EAAImT,SAAW7e,KAAKkf,QAAU,IAAIpgB,KAAK2b,GAAMA,EAAExb,KAExCyM,CACV,CAQA,UAAAmU,CAAWta,GACRxF,MAAM8f,WAAWta,GAGW,SAAxBA,EAAOoc,SAAS5Y,OAAiB/I,KAAK+d,KAAO,SAG5C/d,KAAKwD,OAAuB,WAAdxD,KAAKwD,QAAoBxD,KAAKwD,MAAQxD,KAAK4L,MAG9D5L,KAAKquD,QAAU9oD,EAAO8oD,SACjBruD,KAAKquD,SAAWruD,KAAKykB,cACvBzkB,KAAKquD,QAAUruD,KAAKykB,YAAYxlB,IAInC,IAAImhB,EAAQ,IACX7a,EAAOsZ,SAAW,IAAI7Y,SAAS/G,IAC7B,IAAIib,EAAMla,KAAKO,GAAGue,eAAe7f,GAC7Bib,EACDkG,EAAMhZ,KAAKpH,KAAK+e,QAAQ7E,IAExBla,KAAKO,GAAGe,MACL,OAAOtB,KAAKykB,YAAY7Y,SAAS5L,KAAKykB,YAAYxlB,aAAae,KAAK4L,SAAS5L,KAAKf,kCAAkCA,KAE1H,IAEHe,KAAKkf,OAASkB,EAGdpgB,KAAK2hB,SAAS+mD,QAAU1oE,KAAK2hB,SAAS+mD,SAAW,EACjD1oE,KAAK2hB,SAASgnD,QAAU3oE,KAAK2hB,SAASgnD,SAAW,CAAC,EAGrD,CAWA,OAAAjhE,GACG,OAAOlG,QAAQ9B,UACX2H,MAAK,KAMH,IAAIonD,EAAiB,GACjBC,EAAW1uD,KAAKogB,QAQpB,OAPApgB,KAAKkf,OAAS,GAIdwvC,EAAS1oD,SAASyU,IACfg0C,EAAernD,KAAKqT,EAAE/S,UAAU,IAE5BlG,QAAQsY,IAAI20C,EAAe,IAEpCpnD,MAAK,KACUrH,KAAK+H,QAAU/H,KAAKykB,aAEnBkqC,WAAW3uD,QAE3BqH,MAAK,IACItH,MAAM2H,WAuBtB,CAQA,IAAAC,GACG,OAAOnG,QAAQ9B,UACX2H,MAAK,IAEItH,MAAM4H,SAEfN,MAAK,KAEUrH,KAAK+H,QAAU/H,KAAKykB,aAEnBmqC,WAAW5uD,QAE3BqH,MAAK,IACIrH,MAEhB,CAQA,eAAA8uD,GAKG,OAJAztD,QAAQqF,KACL,mEACA1G,MAEIA,IACV,CAiBA,KAAAogB,CAAMzd,EAAS,MAAM,GAAMuf,GAAO,GAC/B,IAAIhe,EAAS,GAsBb,OAnBIvB,GAAUuf,EACPliB,KAAKkf,QAAUlf,KAAKkf,OAAOtd,OAAS,IACrCsC,EAASlE,KAAKkf,OAAOvc,OAAOA,IAEjBf,OAAS,GACjB5B,KAAKkf,OAAOlZ,SAASyU,IAClB,IAAIwI,EAAWxI,EAAE2F,MAAMzd,EAAQuf,GAC3Be,GAAYA,EAASrhB,OAAS,IAC/BsC,EAAS+e,EACZ,IAOT/e,EAASlE,KAAKkf,OAAOvc,OAAOA,GAGxBuB,CACV,CAWA,UAAA0qD,CAAWG,GAER,OADiB/uD,KAAKogB,OAAOhhB,GAAMA,EAAEH,KAAO8vD,EAAK9vD,KAAI2C,OAAS,EAQvDJ,QAAQ9B,WALZM,KAAKkf,OAAO9X,KAAK2nD,GACV/uD,KAAK2H,OAKlB,CAaA,OAAAoX,CAAQxZ,GAELA,EAAO9C,IAAM6vD,EAAe7vD,IAK5B,IAAIssD,EAAO/uD,KAAKykB,YAAYD,QAAQjf,EAAQvF,KAAKykB,YAAa,MAE9D,OADAsqC,EAAKhnD,OAAS/H,KACP+uD,CACV,CAWA,UAAAJ,CAAWI,GACR,IAAIvoB,EAAUxmC,KAAKkf,OAAOtd,OAK1B,OAJA5B,KAAKkf,OAASlf,KAAKogB,OAAM,SAAU3F,GAChC,OAAOA,EAAExb,IAAM8vD,EAAK9vD,EACvB,IAEIe,KAAKkf,OAAOtd,OAAS4kC,EACfxmC,KAAK2H,OAIRnG,QAAQ9B,SAClB,CAOA,OAAAskB,GACG,OAAOhkB,KAAK6jB,aAAe,UAC9B,CASA,UAAAA,GACG,OAAI7jB,KAAK+H,OACC/H,KAAK+H,OAAOic,UAAYhkB,KAAKf,GAE7Be,KAAKykB,YAAYT,UAAYhkB,KAAKf,EAE/C,CAEA,UAAA+vD,CAAWtjD,GAOR,MALyB,SAArBA,EAAIiW,SAAS5Y,KACd2C,EAAIqS,KAAO,QAEXrS,EAAIqS,KAAOu0C,EAAev0C,KAEtBrS,CACV,CAcA,KAAAiqB,CAAMs5B,EAAWlnD,GAEd,GAAiB,MAAbknD,EAAmB,CAEpBA,EAAY,CAAC,EAEb,IAAIC,EAAcrnB,IACVonB,EAAUpnB,EAAS5oC,MACrBgwD,EAAUpnB,EAAS5oC,IAAMe,KAAKO,GAAGoB,QAEhCkmC,EAASznB,OACVynB,EAASznB,QAAQpa,SAASyU,GAAMy0C,EAAWz0C,KAG1CotB,EAASllB,OACVklB,EAASllB,QAAQ3c,SAASC,GAAMipD,EAAWjpD,IAC9C,EAIHipD,EAAWlvD,KACd,CAGA,IAAIkE,EAASnE,MAAM41B,MAAMs5B,EAAWlnD,GAKpC,OAFA7D,EAAO0H,KAAO,KAEP1H,CACV,CAgBA,IAAAirD,CAAKF,EAAWlnD,EAAQQ,GAErB,GAAiB,MAAb0mD,EAAmB,CAEpBA,EAAY,CAAC,EAEb,IAAIC,EAAcrnB,IACVonB,EAAUpnB,EAAS5oC,MACrBgwD,EAAUpnB,EAAS5oC,IAAMe,KAAKO,GAAGoB,QAEhCkmC,EAASznB,OACVynB,EAASznB,QAAQpa,SAASyU,GAAMy0C,EAAWz0C,KAG1CotB,EAASllB,OACVklB,EAASllB,QAAQ3c,SAASC,GAAMipD,EAAWjpD,IAC9C,EAIHipD,EAAWlvD,KACd,CAGA,OAAOD,MAAMovD,KAAKF,EAAWlnD,EAAQQ,EACxC,oBCrdH,MAAM07D,EAAe,EAAQ,OAEvBmO,EAAuC,CAC1CrhB,WAAY,KACZshB,aAAc,EACdC,YAAa,EACbC,cAAe,EACfvsB,IAAK,EACLD,IAAK,EACLgK,OAAQ,GAGLuC,EAAiB,CACpB7vD,IAAK,QACLsb,KAAM,OACNsxC,SAAU,SAGb1vD,EAAOC,QAAU,cAA8BqkE,EAC5C,WAAAnkE,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MAAMwF,EAAQkf,EAAa1c,EAAQogC,GAAiBmqB,EACvD,CAEA,aAAOtiB,GACJ,OAAOsiB,CACV,CAEA,oBAAOnqB,GACJ,OAAOiqC,CACV,CAYA,UAAAvyD,CAAWta,GACRxF,MAAM8f,WAAWta,GAGjBvF,KAAK2hB,SAAS0wD,aAAe1rE,KAAKiE,MAC/B5K,KAAK2hB,SAAS0wD,cACXD,EAAqCC,cAE3CryE,KAAK2hB,SAAS2wD,YAAc3rE,KAAKiE,MAC9B5K,KAAK2hB,SAAS2wD,aACXF,EAAqCE,aAE3CtyE,KAAK2hB,SAAS4wD,cAAgB5rE,KAAKiE,MAChC5K,KAAK2hB,SAAS4wD,eACXH,EAAqCG,eAE3CvyE,KAAK2hB,SAASqkC,IAAMr/C,KAAKiE,MACtB5K,KAAK2hB,SAASqkC,KAAOosB,EAAqCpsB,KAE7DhmD,KAAK2hB,SAASokC,IAAMp/C,KAAKiE,MACtB5K,KAAK2hB,SAASokC,KAAOqsB,EAAqCrsB,KAGzD/lD,KAAK2hB,SAAS6wD,WAA+C,iBAA3BxyE,KAAK2hB,SAAS6wD,YACjDxyE,KAAK2hB,SAAS6wD,UAAY7rE,KAAKiE,MAAM5K,KAAK2hB,SAAS6wD,YAGtDxyE,KAAK2hB,SAASouC,OAAS9vC,SACpBjgB,KAAK2hB,SAASouC,QAAUqiB,EAAqCriB,OAEnE,CAUA,KAAAnoD,GACG,IAAI8D,EAAM3L,MAAM6H,QAQhB,OANA8D,EAAIiX,MAAQ,GACZjX,EAAIiW,SAAWjW,EAAIiW,UAAY,CAAC,EAE5B3hB,KAAK2hB,SAAS6wD,YACf9mE,EAAIiW,SAAS6wD,UAAY7rE,KAAKC,UAAU5G,KAAK2hB,SAAS6wD,YAElD9mE,CACV,CAMA,aAAA6mD,GACG,MAAO,EACV,oBCnGH,MAAM0R,EAAe,EAAQ,OAEvBwO,EAA+C,CAClD1hB,WAAY,GACZ2hB,eAAgB,CACb9mE,KAAM,GACNnI,KAAM,GACN4f,QAAS,IAEZ1E,kBAAmB,GACnBg0D,SAAU,EACVC,cAAe,EACfC,YAAa,EACbC,YAAa,GAGVxgB,EAAiB,CACpB7vD,IAAK,iBACLsb,KAAM,UACNsxC,SAAU,mBAGb1vD,EAAOC,QAAU,cAAuCqkE,EACrD,WAAAnkE,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MAAMwF,EAAQkf,EAAa1c,EAAQogC,GAAiBmqB,EACvD,CAEA,aAAOtiB,GACJ,OAAOsiB,CACV,CAEA,oBAAOnqB,GACJ,OAAOsqC,CACV,CAYA,UAAA5yD,CAAWta,GACRxF,MAAM8f,WAAWta,GAEjB,MAAMwtE,EAAiB,CAAC,EAExBtzE,OAAOD,KAAKizE,GAA8CzsE,SACtDgtE,IACE,GAEM,iBADIP,EAA6CO,KAEnDttE,MAAMC,QACJ8sE,EAA6CO,IAahD,OAVAD,EAAeC,GAAQ,CAAC,OAExBvzE,OAAOD,KACJizE,EAA6CO,IAC9ChtE,SAASitE,IACRF,EAAeC,GAAMC,GAClBjzE,KAAK2hB,SAASqxD,KAAQC,IACtBR,EAA6CO,GAAMC,EAAK,IAMjEF,EAAeC,GACZhzE,KAAK2hB,SAASqxD,IACdP,EAA6CO,EAAK,IAI3DhzE,KAAK2hB,SAAWoxD,CACnB,CAUA,KAAAnrE,GACG,IAAI8D,EAAM3L,MAAM6H,QAIhB,OAFA8D,EAAIiW,SAAWjW,EAAIiW,UAAY,CAAC,EAEzBjW,CACV,CAMA,aAAA6mD,GACG,MAAO,EACV,oBCvGH,MAAM0R,EAAe,EAAQ,OAEvBiP,EAA2C,CAC9C9uC,SAAU,EACV2sB,WAAY,GACZ2hB,eAAgB,CACb9mE,KAAM,GACNqlB,MAAO,GACP47B,IAAK,GACLsmB,OAAQ,GACRC,OAAQ,GACRC,SAAU,GACVC,MAAO,GACPC,UAAW,GACXC,OAAQ,GACRC,MAAO,GACPC,SAAU,IAEbC,mBAAoB,GACpBC,uBAAwB,CACrBtwE,MAAO,GACPgwE,MAAO,GACPx1C,OAAQ,IAEX+1C,SAAU,CACP7S,IAAK,EACL8S,KAAM,EACN/6D,MAAO,EACPF,KAAM,EACNk7D,OAAQ,EACRF,SAAU,EACVnnB,MAAO,GAEVsnB,oBAAqB,GACrBC,SAAU,GACVC,OAAQ,CACLC,MAAO,EACPC,IAAK,EACLC,IAAK,IAIL/hB,EAAiB,CACpB7vD,IAAK,YAILsb,KAAM,WAINsxC,SAAU,aAKb1vD,EAAOC,QAAU,cAAkCqkE,EAChD,WAAAnkE,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MAAMwF,EAAQkf,EAAa1c,EAAQogC,GAAiBmqB,GAEpDtyD,KAAKs0E,QAAU,IAClB,CAEA,aAAOtkC,GACJ,OAAOsiB,CACV,CAEA,oBAAOnqB,GACJ,OAAO+qC,CACV,CAcA,KAAAtrE,GAGG5H,KAAK0/B,YAAY1/B,KAAMA,KAAM,CAAC,cAE9B,MAAM0L,EAAM3L,MAAM6H,QAIlB,OAFA8D,EAAIiX,MAAQ,GAELjX,CACV,CAQA,UAAAmU,CAAWta,GACRxF,MAAM8f,WAAWta,GAEjBvF,KAAK2hB,SAAW3hB,KAAK2hB,UAAY,CAAC,EAClC3hB,KAAK2hB,SAAS+wD,eAAiB1yE,KAAK2hB,SAAS+wD,gBAAkB,CAAC,EAChE1yE,KAAK2hB,SAASiyD,uBACX5zE,KAAK2hB,SAASiyD,wBAA0B,CAAC,EAC5C5zE,KAAK2hB,SAASkyD,SAAW7zE,KAAK2hB,SAASkyD,UAAY,CAAC,EACpD7zE,KAAK2hB,SAASuyD,OAASl0E,KAAK2hB,SAASuyD,QAAU,CAAC,EAEhD,MAAMnB,EAAiB,CAAC,EAExBtzE,OAAOD,KAAK0zE,GAA0CltE,SAASgtE,IAC5D,GAC6D,iBAAnDE,EAAyCF,GAYhD,OAVAD,EAAeC,GAAQ,CAAC,OAExBvzE,OAAOD,KAAK0zE,EAAyCF,IAAOhtE,SACxDitE,IACEF,EAAeC,GAAMC,GAClBjzE,KAAK2hB,SAASqxD,GAAMC,IACpBC,EAAyCF,GAAMC,EAAK,IAOhEF,EAAeC,GACZhzE,KAAK2hB,SAASqxD,IACdE,EAAyCF,EAAK,IAGpDhzE,KAAK2hB,SAAWoxD,EAGhB/yE,KAAKu0E,UACFhvE,EAAOgvE,WAAarB,EAAyCqB,UAIhEv0E,KAAKs/B,UAAUt/B,KAAMA,KAAM,CAAC,aAC/B,CAMA,aAAAuyD,GACG,MAAO,EACV,oBCxJH,MAAM0R,EAAe,EAAQ,OACvBkC,EAAkB,EAAQ,OAE1BqO,EAAqC,CACxCzkB,OAAQ,EACR0kB,SAAU,EACVC,UAAW,EACXC,UAAW,EACXC,aAAc,IACdC,WAAY,OACZC,UAAW,EACX/5C,OAAQ,MAGLg6C,EAAoB,CACvBtyE,IAAK,MACLsb,KAAM,kBACNsxC,SAAU,OAGb1vD,EAAOC,QAAU,cAA4BqkE,EAM1C,WAAAnkE,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MAAMwF,EAAQkf,EAAa1c,EAAQogC,GAAiB4sC,EACvD,CAEA,aAAO/kC,GACJ,OAAO+kC,CACV,CAEA,oBAAO5sC,GACJ,OAAOqsC,CACV,CAYA,UAAA30D,CAAWta,GACRxF,MAAM8f,WAAWta,GAGjBvF,KAAK2hB,SAASouC,OAAS9vC,SAASjgB,KAAK2hB,SAASouC,QAC9C/vD,KAAK2hB,SAAS8yD,SAAWx0D,SAASjgB,KAAK2hB,SAAS8yD,UAAY,GAC5Dz0E,KAAK2hB,SAAS+yD,UAAYz0D,SAASjgB,KAAK2hB,SAAS+yD,WACjD10E,KAAK2hB,SAASgzD,UAAY10D,SAASjgB,KAAK2hB,SAASgzD,WACjD30E,KAAK2hB,SAASizD,aAAe30D,SAASjgB,KAAK2hB,SAASizD,cAEpD50E,KAAK2hB,SAASmzD,UAAY70D,SAASjgB,KAAK2hB,SAASmzD,UACpD,CAEA,MAAAE,CAAOC,EAASrlB,GACb,OAAO5vD,KAAKykB,YACRD,QACE,CACG/hB,IAAK0jE,EAAgBn2B,SAASvtC,IAC9Be,MAAOyxE,EACP3lB,QAASM,GAEZ5vD,KAAKykB,YACLzkB,MAEF2H,MACP,CAMA,aAAA4qD,GACG,MAAO,EACV,oBCjFH,MAAM0R,EAAe,EAAQ,OAEvBiR,EAAsC,CACzCzxE,KAAM,GAKNssD,OAAQ,EAIRgB,WAAY,MASTuB,EAAiB,CACpB7vD,IAAK,OAILsb,KAAM,OAINsxC,SAAU,QAKb1vD,EAAOC,QAAU,cAA6BqkE,EAC3C,WAAAnkE,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MAAMwF,EAAQkf,EAAa1c,EAAQogC,GAAiBmqB,GAEpDtyD,KAAKs0E,QAAU,IAClB,CAEA,aAAOtkC,GACJ,OAAOsiB,CACV,CAEA,oBAAOnqB,GACJ,OAAO+sC,CACV,CAcA,KAAAttE,GAGG5H,KAAK0/B,YAAY1/B,KAAMA,KAAM,CAAC,SAE9B,IAAI0L,EAAM3L,MAAM6H,QAEhB,OADA8D,EAAIiX,MAAQ,GACLjX,CACV,CAQA,UAAAmU,CAAWta,GACRxF,MAAM8f,WAAWta,GAEjBvF,KAAK2hB,SAAW3hB,KAAK2hB,UAAY,CAAC,EAGlC3hB,KAAK2hB,SAASouC,OAAS9vC,SACpBjgB,KAAK2hB,SAASouC,QAAUmlB,EAAoCnlB,QAI/D/vD,KAAKyD,KAAO8B,EAAO9B,MAAQyxE,EAAoCzxE,KAI/DzD,KAAKs/B,UAAUt/B,KAAMA,KAAM,CAAC,QAC/B,CAMA,aAAAuyD,GACG,MAAO,EACV,CAQA,kBAAIhrC,GACD,MAAwB,YAApBvnB,KAAK+H,QAAQtF,IACPzC,KAAKO,GAAGmnB,mBAAmB1nB,KAAK+H,OAAO4Z,SAASovC,YAEhD/wD,KAAKO,GAAGmnB,mBAAmB1nB,KAAK2hB,SAASovC,WAEtD,CAEA,QAAAvQ,CAAS7xB,GACN,IAAInrB,EAAQmrB,EAAMnrB,OAAS,GAG3B,OAFAA,EAAQA,EAAMoC,QAAQ,MAAO,OAC7BpC,EAAQA,EAAMoC,QAAQ,MAAO,OACtBpC,CACV,CAEA,WAAA2xE,CAAYjsE,EAAKksE,GACd,IAAIlxE,EAASlE,KAAKyD,KAMdsuB,EAAK/xB,KAAKunB,eAGVzC,EAASiN,GAAIzK,YAActnB,KAAKs0E,QACpC,IAAKxvD,EAAQ,MARY,CAAC5gB,GAChBA,EAAO0B,QAAQ,WAAY,IAOjByvE,CAAmBnxE,GAEvC,MAAM+lB,EAAU/gB,GAAO6oB,EAAGzJ,aAAe,CAAC,EAqE1C,OAnEAxD,EAAOwF,SAAStkB,SAAS0b,IAKtB,IAAIle,EAAQxD,KAAKwgD,SAAS9+B,GAE1B,IAAI6tD,EAAW,IAAIt0D,OAAO,IAAMzX,EAAQ,IAAK,KAMzCpC,EAAOsgB,EAAE7J,OAAOoS,GACpB,GAAa,SAATvI,EAAEjf,IAAgB,CACnB,IAAI6yE,EAAQl0E,EACZA,EAAOsgB,EAAEymD,SAASmN,IAMdA,GACD5zD,EAAEC,SAAS6kC,iBACX9kC,EAAEC,SAAS4kC,gBAEXnlD,EAAOsgB,EAAEymD,SAASzmD,EAAEC,SAAS6kC,iBA4B7BtiD,EAASA,EAAO0B,QACb,MACA,oDAGT,CAEA1B,EAASA,EAAO0B,QAAQ2pE,EAAUnuE,EAAK,IAI1C8C,EAASA,EAAO0B,QAAQ,QAASqkB,EAAQnF,EAAO7Y,MAGnD,CAEA,UAAAsoD,CAAWzvC,GACR9kB,KAAKs0E,QAAUxvD,CAClB,oBCpNH,MAAM2jD,EAAS,EAAQ,OAEjBnW,EAAiB,CACpB7vD,IAAK,aACLsb,KAAM,kBACNsxC,SAAU,wBAGPpB,EAA8B,CACjCsnB,WAAY,EACZC,QAAS,GAGZ71E,EAAOC,QAAU,cAA+B6oE,EAO7C,WAAA3oE,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MAAMwF,EAAQkf,EAAa1c,EAAQogC,GAAiBmqB,EACvD,CAEA,aAAOtiB,GACJ,OAAOsiB,CACV,CAEA,oBAAOnqB,GACJ,OAAO8lB,CACV,CAQA,UAAApuC,CAAWta,GACRxF,MAAM8f,WAAWta,GAGjBvF,KAAK2hB,SAAS4zD,WAAat1D,SACxBjgB,KAAK2hB,SAAS4zD,YAActnB,EAA4BsnB,YAE3Dv1E,KAAK2hB,SAAS6zD,QAAUv1D,SACrBjgB,KAAK2hB,SAAS6zD,SAAWvnB,EAA4BunB,QAE3D,oBChDO,EAAQ,OAAlB,MAGMC,EAAoB,EAAQ,OAE5BC,EAAa,EAAQ,IACL,EAAQ,OAE9B/1E,EAAOC,QAAU,cAAiC61E,EAC/C,WAAA31E,CAAYud,EAAY9c,GACrBR,MAAMsd,EAAY9c,GAGlBP,KAAK21E,sBAAyBC,IAE3B,IAAIh3D,EAAW,GACf5e,KAAKogB,QAAQpa,SAAS6vE,IACfA,EAAG52E,KAAO22E,EAAW32E,GAIzB2f,EAASxX,KAAKyuE,GAHXj3D,EAASxX,KAAKyuE,EAAG/mB,gBAAgB9uD,MAGnB,IAGpBA,KAAKkf,OAASN,CAAQ,EAQzB5e,KAAKkf,OAAOlZ,SAASyU,IAClBA,EAAExZ,GAAG,qBAAsBjB,KAAK21E,sBAAsB,GAE5D,CAEA,mBAAO1uD,GAIJ,OAHA5lB,QAAQC,MACL,qEAEI,IACV,CACA,uBAAOw0E,GACJ,IAAIC,EAAiB,IAAIz2E,MACtB,qEAGH,OADA+B,QAAQC,MAAMy0E,GACP,IACV,CAEA,sBAAOC,GACJ,IAAID,EAAiB,IAAIz2E,MACtB,oEAGH,OADA+B,QAAQC,MAAMy0E,GACP,IACV,CAEA,OAAAE,GACG,OAAOj2E,KAAKO,GAAG+a,UAAU,MAAMtb,KAAK4L,OACvC,CASA,eAAAkjD,GACG,IAAIonB,EAASl2E,KAAKO,GAAGg5B,gBAAgBv5B,KAAKf,IAO1C,OAJAe,KAAKkf,OAAOlZ,SAASyU,IAClBA,EAAE2b,eAAe,qBAAsBp2B,KAAK21E,sBAAsB,IAG9DO,CACV,CAcA,iBAAMC,CAAYC,EAAQ3zE,IAC2B,GAAjCzC,KAAKyC,GAAK+E,QAAQ4uE,EAAOn3E,MAEvCe,KAAKyC,GAAK2E,KAAKgvE,EAAOn3E,UAChBe,KAAK2H,OAEjB,CAEA,iBAAM0uE,CAAYD,EAAQ3zE,GACvB,IAAI6zE,EAASt2E,KAAKyC,GAAKb,OACvB5B,KAAKyC,GAAOzC,KAAKyC,GAAKE,QAAQ1D,GACpBA,GAAMm3E,EAAOn3E,KAGnBq3E,GAAUt2E,KAAKyC,GAAKb,cACf5B,KAAK2H,MAEjB,CAQA,oBAAA4uE,CAAqB7tD,GAClB,OAAO1oB,KAAKm2E,YAAYztD,EAAI,oBAC/B,CAQA,oBAAAtB,CAAqBsB,GAClB,OAAO1oB,KAAKq2E,YAAY3tD,EAAI,oBAC/B,CAQA,YAAA8tD,CAAa1xD,GACV,OAAO9kB,KAAKm2E,YAAYrxD,EAAQ,YACnC,CASA,YAAA2xD,CAAa3xD,GACV,OAAO9kB,KAAKq2E,YAAYvxD,EAAQ,YACnC,CAQA,aAAA4xD,CAAch0D,GACX,OAAO1iB,KAAKm2E,YAAYzzD,EAAS,aACpC,CASA,aAAAi0D,CAAcj0D,GACX,OAAO1iB,KAAKq2E,YAAY3zD,EAAS,aACpC,CAQA,WAAAk0D,CAAYvpE,GACT,OAAOrN,KAAKm2E,YAAY9oE,EAAO,WAClC,CASA,WAAAwpE,CAAYxpE,GACT,OAAOrN,KAAKq2E,YAAYhpE,EAAO,WAClC,CAQA,SAAAypE,CAAUh0C,GAEP,KAAIA,EAAIt7B,QAAQxH,KAAKf,KAAO,GAA5B,CAEA6jC,EAAI17B,KAAKpH,KAAKf,IAGde,KAAKihB,kBAAkBjb,SAAS5G,IAC7BA,EAAE03E,UAAUh0C,EAAI,IAInB9iC,KAAKqhB,gBAAgBrb,SAASob,IAC3BA,EAAE01D,UAAUh0C,EAAI,IAInB9iC,KAAKujB,kBAAkBvd,SAASsd,IAC7BA,EAAEwzD,UAAUh0C,EAAI,IAMnB9iC,KAAK2e,kBAAkB3Y,SAASknC,IAC7B,KAAIpK,EAAIt7B,QAAQ0lC,IAAQ,GAAxB,CAEA,IAAIhzB,EAAMla,KAAKO,GAAGue,eAAeouB,GACjC,GAAIhzB,IACD4oB,EAAI17B,KAAK8lC,GACLhzB,EAAIyH,SAASoD,cAAc,CAC5B,IAAID,EAAS9kB,KAAKO,GAAGoL,WAAWuO,EAAIyH,SAASoD,cACzCD,GACDA,EAAOgyD,UAAUh0C,EAEvB,CAV8B,CAWjC,IAIH9iC,KAAKwiB,YAAYxc,SAASyU,IACvBA,EAAEq8D,UAAUh0C,EAAI,IAMnB,IAAIi0C,EAAah0D,IACV+f,EAAIt7B,QAAQub,EAAK9jB,KAAO,IAC5B6jC,EAAI17B,KAAK2b,EAAK9jB,KACb8jB,EAAKlE,SAAW,IAAI7Y,SAASgxE,IAC3B,IAAIC,EAAOj3E,KAAKO,GAAGue,eAAek4D,GAC9BC,GACDF,EAAUE,EACb,KAGFl0D,EAAK8sC,SAAW,IAAI7pD,SAASkxE,IAC3B,IAAIC,EAAOn3E,KAAKO,GAAGue,eAAeo4D,GAC9BC,GACDJ,EAAUI,EACb,IACD,GAGSn3E,KAAKkf,OAAOpgB,KAAK2b,GAAMA,EAAExb,MAC3B,IAAI+G,SAASgxE,IACtB,IAAIC,EAAOj3E,KAAKO,GAAGue,eAAek4D,GAC9BC,GACDF,EAAUE,EACb,IAIHn0C,EAAM9iC,KAAKO,GAAG8a,KAAKynB,EAxEkB,CAyExC,CASA,OAAA/jB,CAAQxZ,GACL,OAAO,IAAImwE,EAAWnwE,EAAQvF,KACjC,CASA,gBAAM4uD,CAAWG,GAGd,IADiB/uD,KAAKkf,OAAOvc,QAAQ8X,GAAMA,EAAExb,IAAM8vD,EAAK9vD,KAAI,GAIzD,OAFAe,KAAKkf,OAAO9X,KAAK2nD,GAEV/uD,KAAK2H,MAElB,CAQA,gBAAMgnD,CAAWI,GACd,IAAIvoB,EAAUxmC,KAAKkf,OAAOtd,OAK1B,GAJA5B,KAAKkf,OAASlf,KAAKogB,OAAM,SAAU3F,GAChC,OAAOA,EAAExb,IAAM8vD,EAAK9vD,EACvB,IAEIe,KAAKkf,OAAOtd,OAAS4kC,EACtB,OAAOxmC,KAAK2H,MAIlB,CAEA,IAAAA,GAMG,OAHI3H,KAAK4L,MAAQ5L,KAAKwD,QACnBxD,KAAK4L,KAAO5L,KAAKwD,OAEbzD,MAAM4H,MAChB,CAEA,YAAAyvE,GACGr3E,MAAMq3E,eAKN,IAAIC,EAAS,CACV54D,UAAW,SACXC,SAAU,QACVC,kBAAmB,kBAGtBlf,OAAOD,KAAK63E,GAAQrxE,SAASiB,IAC1BjH,KAAKiH,GAAGjB,SAAS/G,IACJe,KAAKO,GAAGue,eAAe7f,IAE9Be,KAAKs3E,gBAAgB,6BAA6BD,EAAOpwE,KAAM,CAC5D+X,MAAOhf,KAAKf,GACZA,MAEN,GACD,IAMyB,GAA1Be,KAAKie,WAAWrc,QAAgB5B,KAAKke,iBACtCle,KAAKs3E,gBAAgB,+CAIxB,IAAIC,EAAWv3E,KAAKO,GAAG6E,QAAQxC,WAAW9D,KAAK4C,GAAMA,EAAEzC,KACvDe,KAAKie,WAAWjY,SAAStE,KACM,GAAxB61E,EAAS/vE,QAAQ9F,IAClB1B,KAAKs3E,gBACF,0BAA0B51E,mCAC1B,CAAEye,KAAMze,GAEd,IAIH1B,KAAKogB,QAAQpa,SAASyU,IACnBA,EAAE28D,cAAc,GAEtB,CAEA,WAAAI,GACG,IAAIC,EAAW,GAAG99D,OAAO3Z,KAAK03E,WAc9B,MAbA,CACG,kBACA,kBACA,0BACA,YACA,SAED1xE,SAASiB,IACRjH,KAAKiH,KAAKjB,SAAS5G,IAChBq4E,EAAWA,EAAS99D,OAAOva,EAAEo4E,cAAc,GAC5C,IAGEC,CACV,CAEA,eAAAH,CAAgBjhE,EAAKjV,EAAO,CAAC,GAC1B,IAAIsC,EAAU,eAAe1D,KAAKwD,WAAW6S,IAC7CrW,KAAK03E,UAAUtwE,KAAK,CAAE1D,UAAStC,QAClC,oBCnZO,EAAQ,OAAlB,MAGMu2E,EAA0B,EAAQ,OAElCC,EAAmB,EAAQ,OACX,EAAQ,OAE9Bj4E,EAAOC,QAAU,cAAuC,EAGrD,WAAAE,CAAYud,EAAY9c,GACrBR,MAAMsd,EAAY9c,EACrB,CAaA,OAAAwe,CAAQxZ,GACL,MAAMsyE,EAAU,IAAID,EAAiBryE,EAAQvF,MAE7C,OADA63E,EAAQ9vE,OAAS/H,KACV63E,CACV,CAEA,oBAAMhpB,CAAeE,GAClB,GAAI/uD,KAAK4kB,aAAemqC,EAAK9vD,GAAI,CAC9B,IAAI64E,EAAU93E,KAAKukB,SAASvkB,KAAK4kB,aAAa,GAC1CkzD,IACDA,EAAQ5pB,YAAc,QAChB4pB,EAAQnwE,QAGjB3H,KAAK4kB,YAAcmqC,EAAK9vD,SAClBe,KAAK2H,MACd,CACH,oBC3CH,MAAMw3B,EAAY,EAAQ,OAEpB44C,EAAyB,EAAQ,OAEvC,IAAIjrD,EAAI,IAAIjkB,IAAWtI,GAAGgD,aAAaC,SAASqF,GAEhDlJ,EAAOC,QAAU,cAA0Bu/B,EAMxC,WAAAr/B,CAAYo8B,EAAKC,EAAQ57B,GACtBR,QAEAC,KAAKO,GAAKA,GAGLA,GAAM27B,GAAK37B,KACbP,KAAKO,GAAK27B,EAAI37B,IAGZ27B,IACEl8B,KAAKO,GAAG67B,KACTF,EAAMl8B,KAAKO,GAAG67B,MAEdF,EAAM,CACHv6B,KAAM3B,KAAKO,GAAG0Q,MAAM+mE,MAMpBz3E,GAAIP,KAAKO,GAQT03E,QAAS,CAAC,EAMVvmE,OAAQ1R,KAAKO,GAAGsV,WAAWnE,SAM3BwmE,OAAQ,KAMRjkE,MAAOjU,KAAKO,GAAGsV,WAAW5B,MAE1B4G,MAAOiS,EAMPhoB,OAAQ,CACL4T,IAAKoU,EAAE,OACPqrD,OAAQrrD,EAAE,UACVpe,OAAQoe,EAAE,UACVsrD,KAAMtrD,EAAE,QACRonD,OAAQpnD,EAAE,UACVurD,SAAUvrD,EAAE,QACZwrD,OAAQxrD,EAAE,UACVyrD,OAAQzrD,EAAE,UACVnpB,GAAImpB,EAAE,MAEN/oB,OAAQ+oB,EAAE,UACVnlB,KAAMmlB,EAAE,QAER0rD,IAAK1rD,EAAE,OACP2rD,GAAI3rD,EAAE,MAEN4rD,KAAM5rD,EAAE,QACR6rD,MAAO7rD,EAAE,SAETijB,QAASjjB,EAAE,WACX8rD,mBAAoB9rD,EAAE,uBAEtB+pC,QAAS/pC,EAAE,WAEXw0B,SAAUx0B,EAAE,YACZ6R,OAAQ7R,EAAE,UAEV+rD,eAAgB,CACbv3B,SAAUx0B,EAAE,2BAGfgsD,mBAAoBhsD,EAAE,uCACtBisD,qBAAsBjsD,EAAE,0BAExBksD,mBAAoBlsD,EAAE,uCACtBmsD,oBAAqBnsD,EAAE,0BAEvBosD,mBAAoBpsD,EAAE,uCACtBqsD,qBAAsBrsD,EAAE,0BAExBssD,mBAAoBtsD,EAAE,uCACtBusD,qBAAsBvsD,EAAE,0BAGxBwsD,qBAAsBxsD,EAAE,iBACxBysD,gCAAiCzsD,EAAE,gBAEnC0sD,eAAgB1sD,EAAE,SAClB2sD,0BAA2B3sD,EAAE,SAE7B4sD,oBAAqB5sD,EAAE,cACvB6sD,+BAAgC7sD,EAAE,uBAElC8sD,kBAAmB9sD,EAAE,cAErB+sD,kBAAmB/sD,EAAE,qBASxB6R,OAAQ,SAAUl8B,GACf,MAAO,GAAGA,IAAMzC,KAAK2B,MACxB,GAEH3B,KAAKO,GAAG67B,KAAOF,IAIhBA,EAAIg8C,SACDl4E,KAAKO,GAAG23E,OAIVh8C,EAAIg8C,OAASl4E,KAAKO,GAAG23E,QAHE,IAAIH,GACV+B,eAAe59C,IAMtCl8B,KAAKk8B,IAAMA,EAEXl8B,KAAKm8B,OAASA,GAAU,UAC3B,CAEA,OAAA87C,CAAQ8B,GAEL,GADA14E,QAAQC,MAAM,+BACVy4E,EACD,IAAK,IAAIn5D,KAAKm5D,EACX/5E,KAAKk8B,IAAI+7C,QAAQr3D,GAAKm5D,EAASn5D,EAGxC,CAEA,KAAA/F,GACG,MAAO,IAAIhS,IAED7I,KAAKO,GAAGgD,aAAaC,SAASqF,EAE3C,CAEA,MAAA81B,CAAOl8B,GACJ,OAAOzC,KAAKk8B,IAAIyC,OAAO,GAAG3+B,KAAKm8B,UAAU15B,IAC5C,oBC5KH,MAAMipB,EAAgB,EAAQ,OACxBsuD,EAAuB,EAAQ,OAErCr6E,EAAOC,QAAU,cAA+Bo6E,EAC7C,WAAAl6E,CAAYud,EAAY9c,GACrBR,MAAMsd,EAAY9c,GAClBP,KAAKgO,gBAAgB,GACrBhO,KAAKi6E,kBAAoB,CAAC,CAM7B,CAWA,UAAMtyE,GAQH,OAPK3H,KAAKf,KACPe,KAAKwD,MAAQxD,KAAKwD,OAASxD,KAAK4L,YAE7B7L,MAAM4H,OACZ3H,KAAKO,GAAGgB,KAAK,2BAA4B,CACtC24E,iBAAkBl6E,KAAKf,KAEnBe,IACV,CAEA,OAAA8X,GACG,IAAIhC,EAAY9V,KAAKO,GAAGsU,WAAWiB,YAC/BgX,EAAI9sB,KAAKO,GAAGsa,QAiBhB,OARgB,GALb7a,KAAKO,GAAGigB,iBAAiBphB,GAEnBA,EAAEH,IAAMe,KAAKf,IACbG,EAAEwM,KAAK6B,eAAiBzN,KAAK4L,KAAK6B,gBAErC7L,QAEHkU,EAAU1B,SACP,OACA0Y,EAAE,6CAA8C,CAAC9sB,KAAK4L,QAIrDkK,CACV,CAaA,mBAAAsU,GACG,OAAOpqB,KAAKO,GAAG6E,QAAQvC,UAC1B,CAMA,IAAAvC,GAEON,KAAK8nB,cAGT/nB,MAAMO,OAKN,CACG,2BACA,2BACA,0BACA,4BACD0F,SAASvD,IACRzC,KAAKO,GAAGU,GAAGwB,GAAMrB,IACdpB,KAAKuB,KAAKkB,EAAKrB,EAAK,GACrB,IAGLpB,KAAKm6E,eACR,CAEA,YAAAA,GAIG,IAAIxmD,EAAqB3zB,KAAKynB,mBAC1BE,EAAY3nB,KAAK2nB,UACrB,IAAK3nB,KAAK2hB,SAAS4D,SAAWoO,GAAsBhM,EAAW,CAC5D,IAAIe,EAAK1oB,KAAK4lB,iBAEd8C,EAAG6K,KAAKI,EAAmB/N,iBAAkB+B,EAAU1oB,IAEvDypB,EAAG0xD,OAAO,YAAY,CAAC/oE,EAAOxI,KAC3B,IAAIwxE,GAAgB,EAEhB3xD,EAAG4xD,oBAAsBjpE,IAC1BgpE,GAAgB,GAGnB3xD,EAAG4xD,mBAAqBt6E,MAAMynB,oBAAoBa,aAAarpB,GAI5De,KAAKynB,oBACI,MAATpW,GACyB,MAAzBqX,EAAG4xD,mBAEHt6E,KAAKwR,WAGC6oE,GAMNr6E,KAAKktB,WAAW,EAAG,GACtB,GAEN,CACH,CAEA,QAAApC,CAASmG,EAAOC,EAAQ,IAErB,OADA7vB,QAAQmJ,IAAI,aAAaymB,MAAUC,KAC5BnxB,MAAM+qB,SAASmG,EAAOC,GAAO5pB,OAAOnG,IAMxC,GAJAnB,KAAKu6E,2BACLv6E,KAAKuB,KAAK,WAAY,CAAC,GAGnBJ,EACD,MAAMA,CACT,GAEN,CAcA,mBAAA8wB,CAAoB7wB,GAkDjB,OA9CIA,EAAKA,OAASsE,MAAMC,QAAQvE,EAAKA,QAClCA,EAAKA,KAAO,CAACA,EAAKA,OA6CdrB,MAAMkyB,oBAAoB7wB,GAAMiG,MAAK,KAGzCrH,KAAKu6E,0BAA0B,GAErC,CAYA,gBAAAC,CAAiBhlC,GACLx1C,KAAK4lB,iBAGV5lB,KAAKgmB,mBAAmBxe,QAAQguC,EAAU9jC,OAAOzS,KAAO,GAIzDe,KAAKgmB,mBAAmB5e,KAAKouC,EAAU9jC,OAAOzS,GAEpD,CAQA,IAAAs0B,CAAKiiB,GACF,IAAI9sB,EAAK1oB,KAAK4lB,kBAIgD,IAA1D5lB,KAAK+lB,mBAAmBve,QAAQguC,EAAU9jC,OAAOzS,KAClDe,KAAK+lB,mBAAmB3e,KAAKouC,EAAU9jC,OAAOzS,IAE7CutB,GAAGgpB,EAAU9jC,OAAOzS,IAAImC,MAAM0nB,OAAO,CAAC,GAAGlnB,OAAS,IAG1B,aAAzB4zC,EAAU9jC,OAAOqR,MACQ,YAAzByyB,EAAU9jC,OAAOqR,MACQ,aAAzByyB,EAAU9jC,OAAOqR,MACQ,UAAzByyB,EAAU9jC,OAAOqR,KAEb2F,GAGW,GAFAA,EAAGgC,SAGX1qB,KAAKimB,aAAejmB,KAAKkmB,eAAeC,YACtCnmB,KAAKimB,aAAejmB,KAAKkmB,eAAe2B,eAC3C2tB,EAAUilC,cAEVjlC,EAAUilC,aAAa,CAAE1xE,KAAM,SAGlCysC,EAAU4kC,OAAO,YAAa,IAC9B5kC,EAAU4kC,OAAO,eAAgB,KAGJ,aAAzB5kC,EAAU9jC,OAAOqR,KAEf/iB,KAAKsnB,YACLtnB,KAAKsnB,WAAW3H,SAChB3f,KAAK2mB,kBAEL6uB,EAAU4kC,OAAO,OAAQp6E,KAAK2mB,kBAC9B6uB,EAAU5+B,YAIV4+B,EAAU4kC,OAAO,OAAQ,IACzB5kC,EAAU5qC,MAAM8d,EAAGI,KAAK,CAAC,KAG5B0sB,EAAUp0C,KAAKs5E,KAAKhyD,GAIlB1oB,KAAK2hB,SAAS4D,UAChBiwB,EAAUvqB,MAAQuqB,EAAUvqB,OAAS,CAAC,EAEjCuqB,EAAUvqB,MAAM0vD,qBAClBnlC,EAAUvqB,MAAM0vD,mBAAqBnlC,EAAUrqB,YAC5C,iBACA,CAAC8F,EAAOvG,KACD8qB,EAAUilC,cACXjlC,EAAUilC,aAAa,CAAE1xE,KAAM,SAGlC2f,EAAGkyD,SAASlwD,EAAOuG,IAEZ,QAsBnBukB,EAAUp0C,KAAKy5E,SAEVrlC,EAAUjiB,OACd7K,EAED8sB,EAAUjiB,KAAK7K,GAEf8sB,EAAUhiB,SAGTgiB,EAAU5+B,SAAS4+B,EAAU5+B,WAEvC,CAEA,MAAA4c,CAAOgiB,GACCA,IAELA,EAAUslC,YAAY,iBAClBtlC,EAAUvqB,QACPuqB,EAAUvqB,MAAM0vD,2BACVnlC,EAAUvqB,MAAM0vD,mBAEtBnlC,EAAUvqB,MAAM8vD,eACb/6E,KAAKg7E,KAAKh7E,KAAKg7E,IAAI,WAAYxlC,EAAUvqB,MAAM8vD,qBAC5CvlC,EAAUvqB,MAAM8vD,eAIzBvlC,EAAUp0C,MAAQo0C,EAAUp0C,KAAKy5E,SAClCrlC,EAAUp0C,KAAKy5E,SACfrlC,EAAU4kC,OAAO,OAAQ,KAGxB5kC,EAAUhiB,QAAQgiB,EAAUhiB,SAE5BgiB,EAAU5+B,SAAS4+B,EAAU5+B,UAGjC5W,KAAK+lB,oBAAsB/lB,KAAK+lB,oBAAsB,IAAIpjB,QACtD1D,GAAOA,GAAMu2C,EAAU9jC,OAAOzS,KAErC,CAEA,wBAAAs7E,GACGv6E,KAAK+lB,mBAAmB/f,SAAS0tB,IAC1BlH,GAAGkH,IAAUlH,GAAGkH,GAAOunD,cAAczuD,GAAGkH,GAAOunD,cAAc,GAEvE,CAYA,kBAAAp1D,CAAmBzkB,GAEhB,IAAIsnB,EAAK,IAAItlB,MAAM83E,eAAe,CAC/B95E,KAAMA,GAAQ,KAKjB,OAFApB,KAAKm7E,kBAAkBzyD,GAEhBA,CACV,CASA,kBAAA9B,GAEG,IAAIw0D,EAAY,IAAIh4E,MAAMi4E,eAI1B,OAFAr7E,KAAKm7E,kBAAkBC,GAEhBA,CACV,CAEA,iBAAAD,CAAkBG,GAGfl4E,MAAMm4E,OAAOD,EAAWl4E,MAAMo4E,gBAE9BF,EAAUrwD,MAAQqwD,EAAUrwD,OAAS,CAAC,EAGjCjrB,KAAK2hB,SAAS4D,UACX+1D,EAAUrwD,MAAM0vD,qBAClBW,EAAUrwD,MAAM0vD,mBAAqBW,EAAUnwD,YAC5C,iBACA,CAAC8F,EAAOvG,KACDuG,EAAQ,IAAGA,EAAQ,GAIvB,IAAKrF,GAAS5rB,KAAKgxB,eAAeC,EAAO,GACrCxuB,EAAM,GAAGkE,KAAKC,UAAUglB,MAAUqF,KAASvG,IAC/C,OAAI1qB,KAAKi6E,kBAAkBx3E,KAG3BzC,KAAKi6E,kBAAkBx3E,IAAO,EAE9BzC,KAAK8qB,SAASmG,EAAOvG,GAAO+wD,SAAQ,YAE1Bz7E,KAAKi6E,kBAAkBx3E,EAAI,MAN3B,CASE,KAKhB64E,EAAUrwD,MAAMywD,mBAClBJ,EAAUrwD,MAAMywD,iBAAmBJ,EAAUnwD,YAC1C,eACA,KACGnrB,KAAKuB,KAAK,WAAY,CAAC,EAAE,MAOrC+5E,EAAUK,OAAS,WAAa,EAChCL,EAAUM,UAAY,WAAa,EACnCN,EAAUO,OAAS,WAAa,EAE3BP,EAAUrwD,MAAM6wD,cAClBR,EAAUrwD,MAAM6wD,YAAcR,EAAUnwD,YACrC,eACA,KACGnrB,KAAKu6E,0BAA0B,IAI3C,CAEA,mBAAAntD,CAAoBhsB,EAAO,CAAC,GACzB,KACKpB,KAAKymB,wBAAwBiF,GAC9B1rB,KAAKymB,aAAa9G,SAClB3f,KAAK2mB,kBAEN,OAEH,IAAIo1D,EAAe,CAAC3yE,EAAO,CAAC,EAAG4yE,EAAc,QAC1C,IAAIlwD,EAAQ1iB,EAAK0iB,OAEhB1qB,EAAKA,MAAQ,IAAI4E,SAASwQ,IACxB,IAAIylE,EAASzlE,EAAI,GAAGsV,WAAiBtV,EAAI,GAAGsV,QAC5C,IAAKmwD,EAAQ,OAGb,IAAIC,EAAgB,GAChBC,EACD3lE,EAAI,GAAGwlE,WAAuBxlE,EAAI,GAAGwlE,QAmBxC,GAlBIG,IACDD,EAAgBl8E,KAAK2mB,iBACjBmC,MACGM,GACEA,EAAKgzD,QAAUJ,GAAe5yD,EAAKizD,SAAWF,IAEnDr9E,KAAKsqB,GAASA,EAAKnqB,MAIbe,KAAK2mB,iBAAiBmC,MAAMM,GAEnCA,EAAKgzD,QAAUtwD,GACf1C,EAAKizD,SAAWJ,IACS,GAAxBC,EAAct6E,QACZs6E,EAAc10E,QAAQ4hB,EAAKJ,UAAY,KAE7C,GACS,OAEZ,IAAIszD,EAAW,CAAC,EAChBA,EAASF,OAAStwD,EAClBwwD,EAASD,QAAUJ,EACnBK,EAAS7zD,QAAUjS,EAAIvX,GAEvBQ,OAAOD,KAAKgX,GAAKxQ,SAASq6C,IAEc,GAAjCA,EAAS74C,QAAQ,GAAGskB,QACrBwwD,EAASj8B,GAAY7pC,EAAI6pC,GAC5B,IAGC7pC,EAAIoJ,eAAc08D,EAAS18D,aAAepJ,EAAIoJ,cAG9Cs8D,EAAct6E,OAAS,EACxBs6E,EAAcl2E,SAASu2E,IACpBv8E,KAAK2mB,iBAAiBjO,IAAI4jE,EAAU,KAAMC,EAAa,IAGxDv8E,KAAK2mB,iBAAiBjO,IAAI4jE,EAAU,KAAK,KAIhDlzE,EAAKgiC,OAAS,IAAIplC,SAAS0W,IACzBq/D,EAAar/D,EAAMoP,EAAM,GAC1B,GAIJ9rB,KAAK+lB,oBAAsB,IAAI/f,SAAS0tB,IAEtC,IAAI8oD,EAAYhwD,GAAGkH,GACf8oD,GAAaA,EAAU/B,cACxB+B,EAAU/B,aAAa,CAAE1xE,KAAM,SAE9ByzE,EAAUp7E,MAAQo7E,EAAUp7E,KAAKy5E,QAAQ2B,EAAUp7E,KAAKy5E,QAAQ,IAGvEkB,EAAa/7E,KAAKymB,aAAaujB,UAG9BhqC,KAAK+lB,oBAAsB,IAAI/f,SAAS0tB,IACtC,IAAI8oD,EAAYhwD,GAAGkH,GACf8oD,GAAaA,EAAUvB,cAAcuB,EAAUvB,eACnDuB,EAAUpC,OAAO,OAAQp6E,KAAK2mB,iBAAiB,GAErD,CAEA,YAAAywD,GACGr3E,MAAMq3E,eAEDp3E,KAAKsnB,WAECtnB,KAAKglB,uBACEhlB,KAAKO,GAAGk8E,mBAAmBz8E,KAAKglB,uBAG5ChlB,KAAKs3E,gBACF,sCAAsCt3E,KAAKglB,0BANjDhlB,KAAKs3E,gBAAgB,6BAS3B,CAEA,eAAAA,CAAgBjhE,EAAKjV,EAAO,CAAC,GAC1B,IAAIsC,EAAU,kBAAkB1D,KAAKwD,WAAW6S,IAChDrW,KAAK03E,UAAUtwE,KAAK,CAAE1D,UAAStC,QAClC,CAEA,cAAIozB,GACD,OAAOx0B,KAAKO,GAAG6E,QAAQtE,QAC1B,mBChlBH,IAAI47E,EAAmB,EAAQ,OAE/B/8E,EAAOC,QAAU,cAA2B88E,qBCK5C,IAAI78E,EAAe,sBAEnBF,EAAOC,QAAU,cAAwBC,EACtC,WAAAC,GACGC,OACH,mBCZH,MAAM48E,EAAa,EAAQ,OAE3B,IAAI7vD,EAAI,IAAIjkB,IAAWtI,GAAGgD,aAAaC,SAASqF,GAEhDlJ,EAAOC,QAAU,cAAqB+8E,EACnC,WAAA78E,CAAYud,EAAY9c,GACrBR,MAAMsd,EAAY9c,EAMrB,CAWA,OAAAmH,CAAQw0B,GAGL,IAAI0gD,EAAW58E,KAAK4jB,QAChBi5D,EAAa,GACjBD,EAAS52E,SAAS3G,IACfw9E,EAAWz1E,KAAK/H,EAAEqI,UAAU,IAG/B,IAAIo1E,EAAY5gD,EAAI1d,QAAQhX,QAAQxH,KAAKf,IACrC69E,GAAa,IACd5gD,EAAI1d,QAAQ+T,OAAOuqD,EAAW,GAC9B5gD,EAAIv0B,QAGP,IAAIob,EAAOmZ,EAAIvZ,OAAO1c,GACZA,EAAEhH,IAAMe,KAAK2hB,SAASoB,OAC7B,GAOH,OALIA,WACMA,EAAKpB,SAASoZ,OACrBhY,EAAKpb,QAGDnG,QAAQsY,IAAI+iE,GAAYx1E,MAAK,IAE1B,IAAI7F,SAAQ,CAAC9B,EAASoK,KAC1B9J,KAAK6H,eACDH,UACAL,MAAK,KACHjE,MAAMM,QAAQ,CACXD,KAAMqpB,EAAE,oBACR/jB,KAAM,UACNvE,OAAQ,MAEX9E,GAAS,IAEX4H,OAAOnG,IACL2I,EAAO3I,EAAI,GACZ,KAGd,CAWA,IAAAwG,GACG,OAAO3H,KAAK6H,eACRF,OACAN,MAAMjG,IAICpB,KAAKf,KACPe,KAAKf,GAAKmC,EAAKnC,IAEXe,OAEhB,CAEA,OAAA8X,GAEG,OAAO,CAgBV,CAQA,WAAA0/D,GA+DA,CAEA,YAAAuF,GAEG,GAAIvwD,GAAGxsB,KAAKf,IAAK,OAEjB,IAAI2kB,EAAQ,GACRmD,EAAO,EACPi2D,EAAU55E,MAAM8N,QAAQ+rE,OAAOr0E,IAAI5I,KAAKf,IAC5C,GAAI+9E,GAASE,KAAM,OACnB,IAAIC,EAAW,2JAEMn9E,KAAKf,iDAEN6tB,EAAE,2DAEtB9sB,KAAKk+B,QAAQl4B,SAASu4B,IACnBxX,IACA,IAAIq2D,EAAU,CAAC,EACfA,EAAQn+E,GAAKe,KAAKm+B,OAAOI,GAAMt/B,GAC/Bm+E,EAAQxtC,GAAK5vC,KAAKm+B,OAAOI,GAAM5c,SAASiuB,GACxCwtC,EAAQnwD,MAAQjtB,KAAKm+B,OAAOI,GAAM5c,SAASsL,MAC3CmwD,EAAQ95E,MAAQtD,KAAKm+B,OAAOI,GAAM3yB,KAClCwxE,EAAQ35E,KAAOzD,KAAKm+B,OAAOI,GAAM96B,KAAO05E,EACpCn9E,KAAKk+B,QAAQnX,KACdq2D,EAAQC,OAASr9E,KAAKm+B,OAAOn+B,KAAKk+B,QAAQnX,IAAOpF,SAASiuB,GACtDwtC,EAAQC,SACTD,EAAQE,OAASt9E,KAAKf,GACtBm+E,EAAQG,QAAU,SAClBH,EAAQr2D,KAAO,SAAUkG,GACtB,IAAIowD,EAASr9E,KAAKq9E,OACdG,EAAY1hE,SAAS2hE,cAAcJ,GACvC,OAAIG,GAAaA,EAAUE,mBAGxB5hE,SAAS2hE,cAAcz9E,KAAK4vC,IAAI5iB,SAFzB,CAKb,IAGFowD,EAAQxtC,IAAIhsB,EAAMxc,KAAKg2E,EAAQ,IAGtC,IAAIxd,EAAK,CACN78C,KAAM,OACN9jB,GAAIe,KAAKf,GACT2kB,MAAOA,EACP3iB,GAAI,CACD08E,OAASp/C,IACN92B,YAAW,KACR,MAAMm2E,EAAQ9hE,SAAS+hE,iBACpB,uBAAyB79E,KAAKf,GAAK,MAEtC,IAAI+9E,EAAU55E,MAAM8N,QAAQ+rE,OAAOr0E,IAAI5I,KAAKf,IAC5C2+E,EAAM53E,SAAS6a,IACZA,EAAE43B,QAAUukC,GAASE,OAAQ,CAAK,GACnC,GACF,IAAI,EAEVY,WAAav/C,IACV92B,YAAW,KACR,MAAMm2E,EAAQ9hE,SAAS+hE,iBACpB,uBAAyB79E,KAAKf,GAAK,MAEtC,IAAI+9E,EAAU55E,MAAM8N,QAAQ+rE,OAAOr0E,IAAI5I,KAAKf,IAC5C2+E,EAAM53E,SAAS6a,IACZA,EAAE43B,QAAUukC,GAASE,OAAQ,CAAK,GACnC,GACF,IAAI,IAKhB95E,MAAM26E,OACH,KACG,IACG36E,MAAMw8D,GAAGA,GAAI3uC,OAChB,CAAE,MAAO9vB,GACNnB,KAAKO,GAAGoJ,OAAOC,UAAUzI,EAAK,CAC3BD,QACG,2DACH0+D,MAEN,IAEH,KACA,KACA,IAIN,oBC/QH,MAAMoe,EAAc,EAAQ,OAE5Br+E,EAAOC,QAAU,cAAsBo+E,EAUpC,IAAAr2E,GACG,OAAO5H,MACH4H,OACAN,MAAK,IAAMrH,KAAK8kB,OAAOyiB,UAAUvnC,QACjCqH,MAAK,IAAMrH,KAAKi+E,iBACvB,CAQA,OAAAv2E,GACG,OAAO,IAAIlG,SAAQ,CAAC9B,EAASoK,KACtB9J,KAAKf,GACNe,KAAKk+E,cACD72E,MAAK,IACItH,MAAM2H,YAEfL,MAAK,IAAMrH,KAAK8kB,OAAOuiB,YAAYrnC,QACnCqH,KAAK3H,GACL4H,MAAMwC,GAEVpK,GACH,GAEN,CAEA,YAAA03E,GACGr3E,MAAMq3E,gBAELp3E,KAAK6+B,kBAAoB,IAAI74B,SAAS/G,IACpCe,KAAKs3E,gBAAgB,sCAAsCr4E,KAAM,IAG1C,GAAtBe,KAAKsqB,OAAO1oB,QACb5B,KAAKs3E,gBAAgB,gCAE3B,CAYA,eAAAA,CAAgBjhE,EAAKjV,EAAO,CAAC,GAC1B,IAAIsC,EAAU,SAAS1D,KAAKwD,WAAW6S,IACvCrW,KAAK03E,UAAUtwE,KAAK,CAAE1D,UAAStC,QAClC,CAMA,aAAA68E,GACG,OAAOj+E,KAAKO,GAAGS,QAAQoB,KAAK,CACzBC,IAAK,8BAA8BrC,KAAK8kB,OAAO7lB,YAAYe,KAAKf,MAGtE,CAEA,WAAAi/E,GACG,OAAOl+E,KAAKO,GAAGS,QAAgB,OAAE,CAC9BqB,IAAK,8BAA8BrC,KAAK8kB,OAAO7lB,YAAYe,KAAKf,MAEtE,oBCzEH,IAAIk/E,EAAgB,EAAQ,OAE5Bx+E,EAAOC,QAAU,cAAwBu+E,EACtC,WAAAr+E,CAAYs/B,EAAW7+B,GACpBR,MAAMq/B,EAAW7+B,GAEjBP,KAAK03E,UAAY,EAQpB,CAWA,QAAAD,GACG,OAAOz3E,KAAK03E,SACf,CAOA,YAAAN,GACGp3E,KAAK03E,UAAY,EACpB,CASA,WAAAF,GACG,OAAOx3E,KAAKy3E,UACf,CAOA,eAAAh4C,GACG,OAAOz/B,KAAKO,GAAG6E,QAAQnD,YAAc,IACxC,CAOA,aAAMyF,GACH,IAAIwS,EAAMla,KAAK6H,eACf,OAAIqS,EAAIjb,GACEib,EAAIxS,UAAUJ,OAAOnG,IACzB,GAAIA,EAAIoG,WAAWC,QAAQ,oBAAsB,EAM9C,OAJAnG,QAAQmJ,IACL,qDAAqD0P,EAAIjb,YAE5DoC,QAAQmJ,IAAI0P,GAGf,MAAM/Y,CAAG,IAGRK,QAAQ9B,SAClB,CAOA,UAAMiI,GACH,IAAIuS,EAAMla,KAAK6H,eAEfqS,EAAItO,KAAOsO,EAAItO,MAAQ5L,KAAK4L,MAAQ5L,KAAKwD,OAAS,OAClD,IAAIpC,QAAa8Y,EAAIvS,OAChB3H,KAAKf,KACPe,KAAKf,GAAKmC,EAAKnC,GAErB,oBCxGH,MAAMm/E,EAAc,EAAQ,OAuB5B,SAASC,EAAW/8E,GAEbA,GAASA,EAAMF,MAA4B,YAApBE,EAAMF,KAAKE,OACnC8B,MAAMC,MAAM,CACTC,MAAO,yBACPK,GAAI,KACJF,KAAMnC,EAAMF,KAAKsC,SAAW,GAC5BqF,KAAM,iBAGf,CAeA,SAASu1E,EAAkBjyE,EAAO5J,EAAKrB,GAGL,UAA3BiL,EAAM9L,GAAGS,QAAQ+H,QAClBsD,EAAM9L,GAAGgB,KAAKkB,EAAK,CAChBgJ,SAAUY,EAAMyY,OAAO7lB,GACvBmC,QAGT,CAEAzB,EAAOC,QAAU,cAAsBw+E,EACpC,WAAAt+E,CAAYglB,GACT/kB,MAAM+kB,GAEN9kB,KAAKu+E,eAAiB,IAAI11E,KACvB7I,KAAKw+E,eAAe,8BAA+B31E,EAAO,EAG7D7I,KAAKy+E,eAAiB,IAAI51E,KACvB7I,KAAKw+E,eAAe,8BAA+B31E,EAAO,EAG7D7I,KAAK0+E,gBAAkB,IAAI71E,KACxB7I,KAAKw+E,eAAe,QAAS31E,EAAO,EAGvC7I,KAAK2+E,aAAe,CAACz9E,EAASC,EAAKC,KAC5BD,EACDD,EAAQ4I,SAAS3I,GAGpBD,EAAQxB,UAAU0B,EAAK,EAG1BpB,KAAK4+E,eAAiB,IAAI/1E,KACvB7I,KAAKw+E,eAAe,8BAA+B31E,EAAO,EAG7D7I,KAAKw+E,eAAiB,CAAC/7E,EAAKvB,EAASC,EAAKC,KAQvC,GAAID,EACDD,EAAQ4I,SAAS3I,OADpB,CAKA,GAAInB,KAAKsM,YAAYlL,GAAO,CACzB,IAAImL,EAAe5F,KAAKC,UAAUxF,GAAMQ,OACxCR,EAAOpB,KAAKwM,UAAUpL,GAOtB,IAAIqL,EAAiB,EACrB,GAAI/G,MAAMC,QAAQvE,EAAKA,MACpB,IAAK,IAAIksB,EAAI,EAAGA,EAAIlsB,EAAKA,KAAKQ,OAAQ0rB,IACnC7gB,GAAkB9F,KAAKC,UAAUxF,EAAKA,KAAKksB,IAAI1rB,YAGlD6K,GAAkB9F,KAAKC,UAAUxF,EAAKA,MAAMQ,OAG/CnC,OAAOD,KAAK4B,GACRuB,QAAQsE,GAAW,QAALA,IACdnI,KAAKmI,IACHwF,GAAkB,GAAGxF,KAAK7F,EAAK6F,MAAMrF,MAAM,IAGjD6K,GAAkB,EAElBpL,QAAQmJ,IACL,aAAaiC,QAAqBF,OAC9BA,EAAeE,EAChB,KACDE,QAAQ,OAEhB,CAKIlK,GAE6B,GAA1BA,EAAI+E,QAAQ,WAEbpG,EAAOA,EAAKA,MAAQA,EAEpBpB,KAAK+M,cAAc3L,IAInBA,EAAOA,EAAKA,MAAQF,EAAQjC,GAI/Be,KAAK+M,cAAc3L,EAAKA,MAK3BF,EAAQxB,UAAU0B,EA1DlB,CA0DuB,CAM7B,CAeA,uBAAAs/B,CAAwBn7B,GAErB,IAAI85B,EAAWr/B,KAAK8kB,OAAO6b,qBAEvBC,GAAkB,EAClBvB,EAASz9B,QACVy9B,EAASr5B,SAAQ,SAAU2oB,GACH,MAAjBppB,EAAOopB,KACRiS,GAAkB,EAExB,IAECA,IAEyB,MAAvBr7B,EAAOqa,mBACuB,IAAvBra,EAAOqa,cACS,IAAvBra,EAAOqa,eAEPra,EAAOqa,aAAe,IAEzB5f,KAAK8kB,OAAO4a,YAAYn6B,EAAQA,EAAQ85B,GAE9C,CAEA,OAAA3xB,CAAQrD,EAAQxB,GACb,OAAO7I,KAAKO,GAAGS,QAAQqJ,GAAQxB,EAClC,CAMA,WAAAg2E,CAAYt5E,GAKT,OAJAA,EAAO4xC,MAAMr4C,KAAKugE,GACRr/D,KAAK0gC,wBAAwB2+B,EAAKj+D,QAGrC,IAAII,SAAQ,CAAC9B,EAASoK,KAC1B,IAAI+B,EAAQ7L,KAAKO,GAAGsL,QACpB7L,KAAKO,GAAGS,QAAQ89E,KAAKjzE,GAAO,CAAC3K,EAASC,EAAKC,KACpCD,EACD2I,EAAO3I,IAGVnB,KAAK+M,cAAc3L,GACnB1B,EAAQ0B,GAAK,IAMhBpB,KAAKO,GAAGS,QAAQoB,KACb,CACGC,IAAKrC,KAAK8kB,OAAO0iB,eACjB3+B,OAAQtD,GAEX,CACG9C,IAAKoJ,EACL3K,QAAS,CAAC,IAYZoG,MAAMwC,EAAO,GAEvB,CAMA,MAAAquE,CAAO5yE,GAUJ,OATAvF,KAAK0gC,wBAAwBn7B,GAG7BvF,KAAK8kB,OAAOwF,SAAStkB,SAAS0b,SACElU,IAAzBjI,EAAOmc,EAAEO,aACVP,EAAE0mB,aAAa7iC,EAClB,IAGI,IAAI/D,SAAQ,CAAC9B,EAASoK,KAC1B,IAAI+B,EAAQ7L,KAAKO,GAAGsL,QACpB7L,KAAKO,GAAGS,QAAQ89E,KAAKjzE,EAAO7L,KAAKu+E,gBACjCv+E,KAAKO,GAAGS,QAAQoB,KACb,CACGC,IAAKrC,KAAK8kB,OAAOgc,UACjBj4B,OAAQtD,GAEX,CACG9C,IAAKoJ,EACL3K,QAAS,CAAExB,UAASoK,YAGtBzC,MAAM03E,IAAD,IACLz3E,OAAOnG,IACLk9E,EAAWl9E,GACX2I,EAAO3I,EAAI,GACZ,IACLkG,MAAM03E,IACNT,EAAkBt+E,KAAM,2BAA4B++E,GAC7CA,IAEb,CAQA,OAAO9/E,GACJ,OAAO,IAAIuC,SAAQ,CAAC9B,EAASoK,KAC1B,IAAI+B,EAAQ7L,KAAKO,GAAGsL,QACpB7L,KAAKO,GAAGS,QAAQ89E,KAAKjzE,EAAO7L,KAAKy+E,gBACjCz+E,KAAKO,GAAGS,QAAgB,OACrB,CACGqB,IAAKrC,KAAK8kB,OAAOkc,YAAY/hC,IAEhC,CACGwD,IAAKoJ,EACL5M,KACAiC,QAAS,CAAExB,UAASoK,YAExBxC,OAAOnG,IACNk9E,EAAWl9E,GACX2I,EAAO3I,EAAI,GACZ,IACFkG,MAAMsJ,IAEN2tE,EAAkBt+E,KAAM,2BAA4Bf,GAC7C0R,IAEb,CAMA,aAAMsb,CAAQjB,GACXA,EAAOA,GAAQ,CAAC,EAGhB,IAAIpR,EAAQoR,EAAKY,OAAOhS,MACxB,KAAOA,GAAOhY,QAAQ,CACnB,IAAIo9E,EAAc,GAClBplE,EAAM5T,SAASgmB,IACM,oBAAdA,EAAKA,KACNA,EAAK3a,MAAQrR,KAAKO,GAAGqZ,MAAMjB,qBACrBqT,EAAKpS,OAAOhY,SAClBo9E,EAAcA,EAAYrlE,OAAOqS,EAAKpS,OAAM,IAGlDA,EAAQolE,CACX,CAoBA,OAAO,IAAIx9E,SAAQ,CAAC9B,EAASoK,KAC1B,IAAI+B,EAAQ7L,KAAKO,GAAGsL,QACpB7L,KAAKO,GAAGS,QAAQ89E,KAAKjzE,EAAO7L,KAAK0+E,iBACjC1+E,KAAKO,GAAGS,QAAQ4H,IACb,CACGvG,IAAKrC,KAAK8kB,OAAOgc,UACjBj4B,OAAQmiB,GAGX,CACGvoB,IAAKoJ,EACL3K,QAAS,CAAExB,UAASoK,YAQtBxC,OAAOnG,IACDA,GAAOA,EAAI5B,OAEJ,mBADA4B,EAAI5B,KAENS,KAAKO,GAAGoJ,OAAOC,UAAUzI,EAAK,CAC3BuC,QACG,oEACHstC,UAAWhmB,IAKdhrB,KAAKO,GAAGoJ,OAAOC,UAAUzI,EAAK,CAC3BuC,QACG,sEACHstC,UAAWhmB,KAKvBlhB,EAAO3I,EAAI,GACZ,GAEX,CAOA,QAAA89E,CAASC,GAEFl/E,KAAKmgC,SACN++C,EAAG9E,OAAO,YAAap6E,KAAKmgC,QAC5B++C,EAAG9E,OAAO,eAAgB,KAQ1B8E,EAAGj0D,MAAQi0D,EAAGj0D,OAAS,CAAC,EACpBi0D,EAAGj0D,MAAM0vD,oBACVuE,EAAGpE,YAAYoE,EAAGj0D,MAAM0vD,oBAE3BuE,EAAGj0D,MAAM0vD,mBAAqBuE,EAAG/zD,YAC9B,iBACA,CAAC8F,EAAOvG,KACL,IAAIM,EAAO,CACRY,MAAO5rB,KAAKggC,OACZtf,KAAM1gB,KAAKigC,MACX/O,MAAOxG,EACPkH,KAAMX,GA2BT,OAxBIiuD,EAAGzE,cAAcyE,EAAGzE,aAAa,CAAE1xE,KAAM,SAE7C/I,KAAKisB,QAAQjB,GAAM3jB,MAAMjG,IAiBtB89E,EAAGt0E,MAAMxJ,GAEL89E,EAAGjE,cAAciE,EAAGjE,cAAc,KAGlC,CAAK,IAIlBiE,EAAGtoE,WAIN,IAAIoU,EAAO,CAAC,EACRhrB,KAAKggC,SAAQhV,EAAKY,MAAQ5rB,KAAKggC,QAC/BhgC,KAAKigC,QAAOjV,EAAKtK,KAAO1gB,KAAKigC,OACd,MAAfjgC,KAAKmgC,SAAgBnV,EAAKkG,MAAQlxB,KAAKmgC,QACzB,MAAdngC,KAAKkgC,QAAelV,EAAK4G,KAAO5xB,KAAKkgC,OAErCg/C,EAAGzE,cAAcyE,EAAGzE,aAAa,CAAE1xE,KAAM,SAE7C/I,KAAKisB,QAAQjB,GACT3jB,MAAMjG,IAgBJ89E,EAAGt0E,MAAMxJ,GAEL89E,EAAGjE,cAAciE,EAAGjE,cAAc,IAExC3zE,OAAOnG,IACLE,QAAQC,MAAM,QAASH,EAAI,GAEpC,CAgBA,IAAAg+E,CAAK52E,GACF,OAAO,IAAI/G,SAAQ,CAAC9B,EAASoK,KAC1B,IAAI+B,EAAQ7L,KAAKO,GAAGsL,QACpB7L,KAAKO,GAAGS,QAAQ89E,KAAKjzE,EAAO7L,KAAK2+E,cACjC3+E,KAAKO,GAAGS,QAAQ4H,IACb,CACGvG,IAAKrC,KAAK8kB,OAAO2iB,aACjB5+B,OAAQN,GAGX,CACG9F,IAAKoJ,EACL3K,QAAS,CAAExB,UAASoK,YAExBxC,OAAOnG,IACFA,GAAOA,EAAI5B,MACZS,KAAKO,GAAGoJ,OAAOC,UAAUzI,EAAK,CAC3BD,QAAS,mCACTqH,YAGNuB,EAAO3I,EAAI,GACZ,GAER,CAQA,KAAA+vB,CAAMA,GAEH,OADAlxB,KAAKmgC,OAASjP,EACPlxB,IACV,CAQA,IAAA4xB,CAAKA,GAEF,OADA5xB,KAAKkgC,MAAQtO,EACN5xB,IACV,CAMA,MAAAo/E,CAAOngF,EAAIsG,GAIR,IAAK,IAAI9C,KAHTzC,KAAK0gC,wBAAwBn7B,GAGbA,EACM,MAAfA,EAAO9C,WAAqB8C,EAAO9C,GAG1C,OAAO,IAAIjB,SAAQ,CAAC9B,EAASoK,KAC1B,IAAI+B,EAAQ7L,KAAKO,GAAGsL,QACpB7L,KAAKO,GAAGS,QAAQ89E,KAAKjzE,EAAO7L,KAAK4+E,gBACjC5+E,KAAKO,GAAGS,QAAQsI,IACb,CACGjH,IAAKrC,KAAK8kB,OAAOkc,YAAY/hC,GAC7B4J,OAAQtD,GAEX,CAAE9C,IAAKoJ,EAAO3K,QAAS,CAAExB,UAASoK,YAgBjCxC,OAAOnG,IACLk9E,EAAWl9E,GACX2I,EAAO3I,EAAI,GACZ,IACLkG,MAAM03E,IAENT,EAAkBt+E,KAAM,2BAA4B++E,GAC7CA,IAEb,CAMA,WAAAM,EAAY,OAAEC,EAAM,OAAE/5E,IACnB,OAAO,IAAI/D,SAAQ,CAAC9B,EAASoK,KAC1B,IAAI+B,EAAQ7L,KAAKO,GAAGsL,QACpB7L,KAAKO,GAAGS,QAAQ89E,KAAKjzE,GAAO,CAAC3K,EAASC,KAC/BA,EACD2I,EAAO3I,GAIVzB,GAAQ,EAAK,IAGhBM,KAAKO,GAAGS,QAAQsI,IACb,CACGjH,IAAKrC,KAAK8kB,OAAO0iB,eACjB3+B,OAAQ,CACLy2E,SACA/5E,WAGN,CAAE9C,IAAKoJ,EAAO3K,QAAS,CAAC,IAKvBoG,MAAMwC,EAAO,GAEvB,oBC1nBH,MAAMk7B,EAAU,EAAQ,OAExBrlC,EAAOC,QAAU,cAAyBolC,EASvC,aAAM/Y,CAAQjB,EAAO,CAAC,GAInB,OAHAA,EAAKmP,OAAQ,EACbnP,EAAK3oB,IAAMrC,KAAK8kB,QAAQpX,SAASrL,IAE1BtC,MAAMksB,QAAQjB,EACxB,CAMA,WAAA6zD,CAAYt5E,GACT,MAAMjE,EAAQ,IAAIhC,MACf,iEAEH,OAAOkC,QAAQsI,OAAOxI,EACzB,CAMA,YAAM62E,CAAO5yE,GACV,MAAMjE,EAAQ,IAAIhC,MACf,4DAEH,OAAOkC,QAAQsI,OAAOxI,EACzB,CAQA,OAAOrC,GACJ,MAAMqC,EAAQ,IAAIhC,MACf,4DAEH,OAAOkC,QAAQsI,OAAOxI,EACzB,CAMA,MAAA89E,CAAOngF,EAAIsG,GACR,MAAMjE,EAAQ,IAAIhC,MACf,4DAEH,OAAOkC,QAAQsI,OAAOxI,EACzB,CAMA,WAAA+9E,EAAY,OAAEC,EAAM,OAAE/5E,IACnB,MAAMjE,EAAQ,IAAIhC,MACf,iEAEH,OAAOkC,QAAQsI,OAAOxI,EACzB,oBCzEH,MAAM0jC,EAAU,EAAQ,OAExBrlC,EAAOC,QAAU,cAAiColC,EAU/C,aAAAj4B,CAAc3L,GACXrB,MAAMgN,cAAc3L,GAEfsE,MAAMC,QAAQvE,KAChBA,EAAO,CAACA,IAGX,IAAIm+E,EAAav/E,KAAK8kB,OAAOwF,QAAQ5I,GAAe,WAATA,EAAEjf,MAC7C,IAAIm7B,EAAY59B,KAAK8kB,OAAOwF,SAE5BlpB,EAAK4E,SAASsnB,IAIX,IAAK,IAAIpnB,EAAI,EAAGA,EAAI03B,EAAUh8B,OAAQsE,IAAK,CACxC,IAAIs5E,EAAe5hD,EAAU13B,GAAG+b,WAC5Bw9D,EAAWD,EAAa/xE,mBAGC,IAAnB6f,EAAEkyD,SACa,IAAflyD,EAAEmyD,KAETnyD,EAAEkyD,GAAgBlyD,EAAEmyD,UACbnyD,EAAEmyD,GAEf,CAGAF,EAAWv5E,SAAS05E,IACjB,IAAIx2E,EAAMokB,EAAEoyD,EAAOz9D,YAED,iBAAP/Y,IACRA,EAAMA,EAAIuE,cAEOvE,EAAL,MAARA,EAGJokB,EAAEoyD,EAAOz9D,YAAc/Y,EAC1B,GACD,GAER,oBCrDH,MAAM87B,EAAU,EAAQ,OAExBrlC,EAAOC,QAAU,cAA2BolC,EASzC,WAAA65C,CAAYt5E,GACT,IAAIjE,EAAQ,IAAIhC,MACb,kEAEH,OAAOkC,QAAQsI,OAAOxI,EACzB,CAMA,MAAA62E,CAAO5yE,GACJ,IAAIjE,EAAQ,IAAIhC,MACb,6DAEH,OAAOkC,QAAQsI,OAAOxI,EACzB,CAQA,OAAOrC,GACJ,IAAIqC,EAAQ,IAAIhC,MACb,6DAEH,OAAOkC,QAAQsI,OAAOxI,EACzB,CAMA,MAAA89E,CAAOngF,EAAIsG,GACR,IAAIjE,EAAQ,IAAIhC,MACb,6DAEH,OAAOkC,QAAQsI,OAAOxI,EACzB,CAMA,WAAA+9E,EAAY,OAAEC,EAAM,OAAE/5E,IACnB,IAAIjE,EAAQ,IAAIhC,MACb,kEAEH,OAAOkC,QAAQsI,OAAOxI,EACzB,oBCnEH,MAAM2jC,EAAe,EAAQ,OAE7B,IAAInY,EAAI,IAAIjkB,IAAWtI,GAAGgD,aAAaC,SAASqF,GAmBhDlJ,EAAOC,QAAU,cAAuBqlC,EACrC,WAAAnlC,CAAYud,EAAY9c,GACrBR,MAAMsd,EAAY9c,GAGlBP,KAAKsqB,SAAStkB,SAAS0b,IACpBA,EAAEzgB,GAAG,sBAAuB0tB,IAEzB,IAAIzU,EAAMla,KAAKO,GAAGue,eAAe6P,EAAM1vB,IACvC,GAAKib,EAAL,CAEA,IAAI2f,EAAW75B,KAAKO,GAAGq5B,SAAS1f,EAAKla,MAGjCyqC,EAAY,GAChBzqC,KAAKsqB,SAAStkB,SAAS0b,IAChBA,EAAEziB,KAAO0vB,EAAM1vB,GAInBwrC,EAAUrjC,KAAKsa,GAHZ+oB,EAAUrjC,KAAKyyB,EAGD,IAGpB75B,KAAK8lC,QAAU2E,CAdC,CAcQ,GACzB,IAQLzqC,KAAKgX,wBAA0B,CAAC,EAMhChX,KAAK2/E,wBAA0B,CAACz+E,EAASC,EAAK0J,KAE3C,IAAIqM,EAAUlX,KAAKgX,0BAA0B9V,EAAQS,MACjDR,EACD+V,GAASpN,OAAO3I,GAGnB+V,GAASxX,QAAQmL,EAAS,EAE7B7K,KAAKO,GAAGS,QAAQC,GAAG,iBAAkBjB,KAAK2/E,wBAC7C,CASA,eAAA7wB,GACG,IAAIonB,EAASl2E,KAAKO,GAAGoL,WAAW3L,KAAKf,IAerC,OAZIe,KAAKgX,0BAENhX,KAAKO,GAAGS,QAAQo1B,eACb,iBACAp2B,KAAK2/E,yBAIRzJ,EAAOl/D,wBAA0BhX,KAAKgX,wBACtChX,KAAKgX,wBAA0B,MAG3Bk/D,CACV,CASA,UAAAr2D,CAAWxC,GAoBRtd,MAAM8f,WAAWxC,GAEbrd,KAAK4nC,gBAAgB5nC,KAAK4nC,eAAeg4C,QAAQviE,EACxD,CAIA,OAAAvF,GACG,IAAIhC,EAAY9V,KAAKO,GAAGsU,WAAWiB,YAwBnC,OAfgB,GALb9V,KAAKO,GAAGygB,SAAS5hB,GAEXA,EAAEH,IAAMe,KAAKf,IACbG,EAAEwM,KAAK6B,eAAiBzN,KAAK4L,KAAK6B,gBAErC7L,QAEHkU,EAAU1B,SACP,OACA0Y,EAAE,oDAAqD,CAAC9sB,KAAK4L,QAW5DkK,CACV,CASA,WAAAuW,CAAYjrB,GACT,IAAI0U,EAAY9V,KAAKO,GAAGsU,WAAWiB,YAOnC,OANA9V,KAAKsqB,SAAStkB,SAAS0b,IAEhBjiB,OAAOyK,UAAU21E,eAAe11E,KAAK/I,EAAMsgB,EAAEO,aAC9CP,EAAE2K,YAAYjrB,EAAM0U,EAAU,IAG7BA,CACV,CAmCA,aAAMpO,GAuFH,IASG,QA/B0B,MAC1B,IAAIwf,EAAa,GAIjB,OAHAlnB,KAAKO,GAAG0mB,eAAejhB,SAASmhB,IAC7BD,EAAW9f,KAAK+f,EAAIsvD,aAAaz2E,MAAM,IAEnCwB,QAAQsY,IAAIoN,EAAW,EAmBxBJ,QAhBmB,KAClB,IAAItlB,SAASulB,IACjB/mB,KAAKO,GAAG8iB,SACJC,GAAMA,EAAEtC,SAAS5hB,GAAMA,EAAEH,IAAMe,KAAKf,KAAI2C,OAAS,IACnDoE,SAASsd,IAGRA,EAAE2oB,UAAW,CAAI,IAGpBllB,GAAM,IASH+4D,GAIF9/E,KAAKi6B,WACN,OAAOz4B,QAAQ9B,gBAOZM,KAAKk+E,cAKX,IAAI6B,EAAa,GAIjB,GAAiB,UAAb//E,KAAK+I,KAAkB,CACxB,IAAI60B,EAAY59B,KAAKsqB,SACrBtqB,KAAK8lC,QAAU,GAGflI,EAAU53B,SAAS0b,IAChBq+D,EAAW34E,KAAKsa,EAAEha,UAAU,GAElC,OACMlG,QAAQsY,IAAIimE,SAEZhgF,MAAM2H,UACZ1H,KAAKuB,KAAK,YACb,CAAE,MAAOJ,GACNnB,KAAKO,GAAGoJ,OAAOC,UAAUzI,EAAK,CAC3BD,QAAS,gDAEf,CAmDH,CAWA,UAAMyG,CAAKq4E,GAAc,GACtB,IAAIC,GAAQ,EAGPjgF,KAAKf,KACPe,KAAKwD,MAAQxD,KAAKwD,OAASxD,KAAK4L,KAChCq0E,GAAQ,GAGX,IAKG,aAJMlgF,MAAM4H,OACRs4E,IAAUD,SACLhgF,KAAKi+E,gBAEPj+E,IACV,CAAE,MAAOmB,GAKN,MAJAnB,KAAKO,GAAGoJ,OAAOC,UAAUzI,EAAK,CAC3BD,QAAS,kBACTwK,IAAK1L,KAAK4H,UAEPzG,CACT,CACH,CAaA,KAAAyG,GACG,IAAI1D,EAASnE,MAAM6H,QAInB,OAFA1D,EAAOimC,qBAAuBnqC,KAAK4nC,gBAAgBhgC,QAE5C1D,CACV,CAMA,aAAA+5E,GACG,OAAO,IAAIz8E,SAAQ,CAAC9B,EAASoK,KAC1B,IAAInI,EAAO3B,KAAKO,GAAGoB,OACnB3B,KAAKgX,wBAAwBrV,GAAQ,CAAEjC,UAASoK,UAChD,IAAIhB,EAAc,CACfrG,IAAK,iBACLvB,QAAS,CAAES,OAAM1C,GAAIe,KAAKf,KAE7Be,KAAKO,GAAGS,QAAQoB,KACb,CACGC,IAAK,8BAA8BrC,KAAKf,MAE3C6J,EACF,GAEP,CAEA,WAAAo1E,GACG,OAAO,IAAI18E,SAAQ,CAAC9B,EAASoK,KAC1B,IAAInI,EAAO3B,KAAKO,GAAGoB,OACnB3B,KAAKgX,wBAAwBrV,GAAQ,CAAEjC,UAASoK,UAChD,IAAIhB,EAAc,CACfrG,IAAK,iBACLvB,QAAS,CAAES,OAAM1C,GAAIe,KAAKf,KAE7Be,KAAKO,GAAGS,QAAgB,OACrB,CACGqB,IAAK,8BAA8BrC,KAAKf,MAE3C6J,EACF,GAEP,CAgBA,YAAAo3E,CAAaj+D,EAAYk+D,GAEtB,IADA,IAAIvxD,EAAU,KACL1oB,EAAI,EAAGA,EAAIlG,KAAK8lC,QAAQlkC,OAAQsE,IACtC,GAAIlG,KAAK8lC,QAAQ5/B,GAAG+b,YAAcA,EAAY,CAC3C2M,EAAU5uB,KAAK8lC,QAAQ5/B,GAAGjH,GAC1B,KAEH,CASH,IAAIurC,EAAgBxqC,KAAKO,GAAGua,cAAc8T,GAI1C,OAHA4b,EAAgBA,GAAiB,CAAC,GACpB+W,MAAQ4+B,EAEfngF,KAAKO,GAAGua,cAAc8T,EAAS4b,EAEzC,CAIA,aAAA41C,CACGC,EACA3S,EACAK,EACAC,EACAsS,GAEAvS,EAAiBA,GAAkB,GACnCC,EAAeA,GAAgB,GAE/B,IAAIjkE,EAAU,GA6Ed,OAzEA/J,KAAKsqB,SAAStkB,SAAS0b,IACpB,IAAI1E,EAAS0E,EAAE6+D,aAAa,CACzBF,kBAAmBA,EACnB3yB,SAAUggB,IAGTA,IACD1wD,EAAOwjE,gBAAkB9+D,EAAEC,SAAS6+D,iBAGvCxjE,EAAO8O,MAAQpK,EAAEoK,YAASte,EAC1BwP,EAAO4R,QAAUlN,EAAEziB,GAIK,GAApByiB,EAAEC,SAAS4/B,QACZvkC,EAAOukC,MAAQ7/B,EAAEC,SAAS4/B,OAI7B,IAAI/W,EAAgBxqC,KAAKO,GAAGua,cAAc4G,EAAEziB,IACxCurC,GAAiBA,EAAc+W,SAC3BvkC,EAAOukC,OAAS/W,EAAc+W,MAAQvkC,EAAOukC,SAE/CvkC,EAAOukC,MAAQ/W,EAAc+W,OAI9BvkC,EAAOukC,QAETvkC,EAAOyjE,QAAS,GAIf1S,EAAevmE,QAAQka,EAAEziB,KAAO,EACpB,aAATyiB,EAAEjf,KAA+B,WAATif,EAAEjf,IAC3Bua,EAAO0jE,OAAS,CAAEr+C,QAAS,cAAe1T,MAAOjN,GAEjD1E,EAAO0jE,OAAS,CAAEr+C,QAAS,cAIxB2rC,EAAaxmE,QAAQka,EAAEziB,KAAO,IACpC+d,EAAO0jE,OAAS,CAAEr+C,QAAS,gBAE9Bt4B,EAAQ3C,KAAK4V,EAAO,IA4BhBjT,CACV,CAMA,cAAA42E,CAAev/E,EAAM86B,EAAK0kD,EAAWtB,EAAQ5R,GAC1C,IAAKtsE,IAASA,EAAKqoB,WAAY,OAG/B,IAAIa,EAAS,GAMb,GALAs2D,EAAUC,YAAY5+D,IACnB,IAAI0M,EAAQ3uB,KAAKsqB,QAAQ5I,GAAMA,EAAEO,YAAcA,IAAY,GACvD0M,GAAOrE,EAAOljB,KAAKunB,EAAM,IAGlB,MAAV2wD,EACDA,EAAOt5E,SAAS/G,IACb,IAAIuX,EAAMpV,EAAKonB,QAAQvpB,GACnBuX,GACD8T,EAAOtkB,SAAS0b,IACb,IAAIo/D,EAAOF,EAAUG,YAAY,CAC9BvqE,IAAKA,EAAIvX,GACT+hF,OAAQt/D,EAAEO,aAEbP,EAAEu/D,cAAczqE,EAAK0lB,EAAK4kD,EAAM,CAC7BpzB,SAAUggB,GACX,GAER,QAEC,CACJ,IAAIzuE,EAAKmC,EAAKqoB,aACd,KAAOxqB,GAAI,CACR,IAAIuX,EAAMpV,EAAKonB,QAAQvpB,GACnBuX,GACD8T,EAAOtkB,SAAS0b,IACb,IAAIo/D,EAAOF,EAAUG,YAAY,CAC9BvqE,IAAKA,EAAIvX,GACT+hF,OAAQt/D,EAAEO,aAEbP,EAAEu/D,cAAczqE,EAAK0lB,EAAK4kD,EAAM,CAC7BpzB,SAAUggB,GACX,IAGRzuE,EAAKmC,EAAKwoB,UAAU3qB,EACvB,CACH,CACH,CAGA,WAAA8pC,CAAY9e,GACT,GAAe,MAAXA,EAAiB,MAAO,GAI5B,IAAIoV,EAAWr/B,KAAK2gC,qBACpB3gC,KAAKs/B,UAAUrV,EAASA,EAASoV,GAEjC,IAAI2J,EAAYhpC,KAAKmlC,aAAe,GAGpC,IAAK6D,GAAahpC,KAAKsqB,SAAS1oB,OAAS,EAAG,CACzC,IAAIqnC,EAAejpC,KAAKsqB,QAAQ5I,GAAMA,EAAEonB,oBAAmB,GACzCE,EAAdC,EAA0B,IAAIA,EAAahqC,MAEhC,GAAGe,KAAKO,GAAGya,OAAOiP,EAAQhrB,IAAM,OAAS,KAClDgrB,EAAQhrB,IAEjB,CAIA,IAAIypC,EAASM,EAAU17B,MAAM,cAc7B,GAZIo7B,GAAUA,EAAO1iC,SAClB0iC,EAAO1iC,SAAS2iC,IACb,IAAIC,EAAiBD,EAAM/iC,QAAQ,IAAK,IAAIA,QAAQ,IAAK,IAErD+oB,EAAQ3uB,KAAK4nB,UAAUghB,GACd,MAATja,IAEJqa,EAAYA,EAAUpjC,QAAQ+iC,EAAOha,EAAM9W,OAAOoS,IAAY,IAAG,KAKlE+e,EAAUE,OAAQ,CACpB,IAAI9D,EAAgBplC,KAAKolC,eAAiB,CAAC,EAExC4D,EADC5D,GAAiBA,EAAcC,iBACpBvY,EAAEsY,EAAc+D,aAAe,cAG/B,GAAGnpC,KAAKO,GAAGya,OAAOiP,EAAQhrB,IAAM,OAAS,KAClDgrB,EAAQhrB,IAGjB,CAEA,OAAO+pC,CACV,CAEA,WAAA8oC,GACG,OAAO9xE,KAAK4nC,eAAeE,gBAC9B,CAEA,WAAA0vC,GAEG,IAAI0J,EAAcnhF,MAAMy3E,cAWxB,OAVAx3E,KAAKsqB,SAAStkB,SAAS0b,IACfA,IACLw/D,EAAcA,EAAYvnE,OAAO+H,GAAG+1D,YAAW,IAGlDz3E,KAAKkmC,UAAUlgC,SAASE,IAChBA,IACLg7E,EAAcA,EAAYvnE,OAAOzT,GAAGuxE,YAAW,IAG3CyJ,EAAYv+E,QAAQw+E,GAAMA,GACpC,CAEA,YAAA/J,GACGr3E,MAAMq3E,eAEN,IAAIx5C,EAAY59B,KAAKsqB,SAEG,GAApBsT,EAAUh8B,QACX5B,KAAKs3E,gBAAgB,kBAGvBt3E,KAAK6+B,kBAAoB,IAAI74B,SAAS/G,IACpCe,KAAKs3E,gBAAgB,sCAAsCr4E,KAAM,KAGnEe,KAAKimC,eAAiB,IAAIjgC,SAAS/G,IACjCe,KAAKs3E,gBAAgB,sCAAsCr4E,KAAM,IAGpE2+B,EAAU53B,SAAS0b,IAChBA,GAAG01D,cAAc,IAGpBp3E,KAAKkmC,UAAUlgC,SAASE,IACrBA,GAAGkxE,cAAc,GAEvB,CAEA,eAAAE,CAAgBjhE,EAAKjV,EAAO,CAAC,GAC1B,IAAIsC,EAAU,UAAU1D,KAAKwD,WAAW6S,IACxCrW,KAAK03E,UAAUtwE,KAAK,CAAE1D,UAAStC,QAElC,CAEA,MAAAggF,CAAO39E,GAIJ,OAHApC,QAAQC,MACL,qFAEItB,KAAKO,GAAGya,OAAOvX,EACzB,CAEA,eAAM49E,GACH,OAAOrhF,KAAKO,GAAGS,QAAQ4H,IAAI,CACxBvG,IAAK,2BAA2BrC,KAAKf,MAE3C,CAWA,eAAAqiF,CAAgBr3D,GACbjqB,KAAKsqB,SAAStkB,SAAS0b,IACpBA,EAAE6/D,cAAct3D,EAAQ,GAE9B,oBCxxBH,MAAMu3D,EAAW,EAAQ,OACnBC,EAAkB,EAAQ,OAEhC9hF,EAAOC,QAAU,cAA0B6hF,EACxC,WAAA3hF,CAAYud,EAAY9c,GACrBR,MAAMsd,EAAY9c,EACrB,CAEA,eAAMmhF,CAAUC,EAAgB,IAC7B,GAAI3hF,KAAKskC,UAAW,OAEpB,MAAMv6B,EAAU/J,KAAK+J,QAEfc,QAAiB22E,EAASxhF,KAAK0N,QAAQrL,IAAK,CAC/CgI,OAAQrK,KAAK0N,QAAQk0E,KACrB73E,UACA3I,KAAM,CAAC,EACPmD,QAAS,KACTs9E,iBAAiB,IAGpB,IAAIC,EAAiB9hF,KAAK0kC,YAAY75B,GAEtC,MAAMwB,EAAQrM,KAAKqM,QAEnB,GAA6B,MAAzBy1E,EAAelgF,QAA4C,IAA1BkgF,EAAelgF,OAAc,CAC/D,MAAMR,EAAO,CAAC,EAQd,OANApB,KAAK6K,SAASyf,OAAOtkB,SAAS0b,IAC3BtgB,EAAKsgB,EAAEO,YAAc6/D,EAAepgE,EAAEO,WAAW,eAG9C5V,EAAM8rE,OAAO/2E,EAGtB,CAEA,IAAI2gF,EAAqB,GAEzB,IAAK,IAAI77E,EAAI,EAAGA,EAAI47E,EAAelgF,OAAQsE,IAAK,CAC7C,MAAM9E,EAAO,CAAC,EAEdpB,KAAK6K,SAASyf,OAAOtkB,SAAS0b,IAC3BtgB,EAAKsgB,EAAEO,YAAc6/D,EAAe57E,GAAGwb,EAAEO,WAAW,IAGvD8/D,EAAmB36E,KAAKiF,EAAM8rE,OAAO/2E,IAEjC2gF,EAAmBngF,OAAS+/E,GAAkB,SACzCngF,QAAQsY,IAAIioE,EACxB,CAEIA,EAAmBngF,OAAS,SAASJ,QAAQsY,IAAIioE,GAErD/hF,KAAKskC,WAAY,QAEXtkC,KAAK2H,MACd,CAWA,UAAMA,GACH,aAAa5H,MAAM4H,MAAK,EAC3B,CAEA,aAAAs2E,GACG,OAAOz8E,QAAQ9B,SAClB,CAEA,WAAAw+E,GACG,OAAO18E,QAAQ9B,SAClB,oBC9EH,MAAMsiF,EAA0B,EAAQ,OAExCriF,EAAOC,QAAU,cAAkCoiF,EAChD,WAAAliF,CAAYud,EAAY9c,GACrBR,MAAMsd,EAAY9c,EACrB,CAEA,eAAM8gF,GA0CH,IAAIp1E,EAAKjM,KAAKiM,KACVy+B,EAAY,GAmBhB,OAlBA1qC,KAAKsqB,SAAStkB,SAAS0b,IACpB,IAAIiN,EAAQ,CACTszD,MAAOvgE,EAAEO,WACTigE,KAAMxgE,EAAEjf,IACR0/E,KAAMzgE,EAAEC,SAAS2/B,SAAW,KAAO,MACnC8gC,IAAKn2E,GAAMyV,EAAEO,WAAa,MAAQ,GAClCogE,QAAS,GACTC,MAAO,IAEV53C,EAAUtjC,KAAKunB,EAAM,IAGR,CACb4zD,aAAcviF,KAAKf,GACnBqmC,UAAWtlC,KAAKslC,UAChBhb,OAAQogB,EAId,oBCtEH,MAAMvb,EAAW,EAAQ,OAOzBxvB,EAAOC,QAAU,cAA+BuvB,oBCPhD,MAAMA,EAAW,EAAQ,OASzBxvB,EAAOC,QAAU,cAA6BuvB,qBCM9C,MAAMqzD,EAAoB,EAAQ,OAElC,IAAIrtE,EAAY,KACC,oBAAN7J,GACRA,GAAGC,OAAOtK,GAAG,mBAAmB,SAAUoV,GACnClB,EACDA,EAAU5T,KAAK,kBAAmB,CAC/BmxC,QAASr8B,EAAIq8B,QACbtxC,KAAMiV,EAAIjV,QAGbC,QAAQC,MACL,sEAEHD,QAAQC,MAAM,iCAEpB,IAEAD,QAAQC,MAAM,qDAMjB3B,EAAOC,QAAU,cAA4B4iF,EAC1C,WAAA1iF,CAAYud,EAAY9c,GACrBR,MAAMsd,EAAY9c,GAEb4U,IACFA,EAAY5U,GAGfP,KAAKO,GAAGU,GAAG,mBAAoBG,IACxBpB,KAAKf,IAAMmC,EAAKsxC,SAAS1yC,KAAK6f,WAAWze,EAAKA,KAAK,IAW1DpB,KAAKyiF,cAAcziF,KAAK4rB,MAC3B,CAmEA,YAAAqe,CAAaO,GACVzqC,MAAMkqC,aAAaO,GAEnBxqC,KAAK8lC,QAAQ9/B,SAAS08E,IAGnBA,EAAW/zD,MAAM1M,WAAa,GAAGygE,EAAW52D,SAAS42D,EAAW/zD,MAAM1M,YAAY,GAExF,CAYA,YAAAi+D,CAAaj+D,EAAYk+D,EAAUwC,GAChC,IAAIh0D,EAAQ3uB,KAAKsqB,QAAQ5I,GAAMA,EAAEO,YAAcA,IAAY,GAC3D,OAAI0M,GACDA,EAAMhN,SAAS4/B,MAAQ4+B,EAEhBngF,KAAK2H,QAELnG,QAAQ9B,SAErB,CAQA,aAAA0gF,CACGC,EACA3S,EACAK,EACAC,EACAsS,GAEA,IAAIv2E,EAAUhK,MAAMqgF,cACjBC,EACA3S,EACAK,EACAC,EACAsS,GAyDH,OAtDAv2E,EAAQ/D,SAASob,IAEd,IAAI0D,EAAS9kB,KAAK2qC,cAAcvpB,EAAE0K,OAClC,IAAKhH,EAAQ,OAEb,IAAI6J,EAAQ7J,EAAO8C,UAAUxG,EAAEwN,SAC/B,IAAKD,EAAO,OAGZ,IAAI7C,EAAQ,GA0BZ,GAxBGA,EADCpmB,MAAMC,QAAQ3F,KAAKgqC,SACZrb,EAAM7J,OAAOlZ,KAEbwV,EAAE0K,MAKb1K,EAAEniB,GAAK,GAAG6sB,KAAS6C,EAAM1M,aAGrBjiB,KAAK2hB,UAAY3hB,KAAK2hB,SAAS0oB,WAChCjpB,EAAEpE,OAAS,GAAG2R,EAAMnrB,OAAS,KAE7B4d,EAAEpE,OAAS,GAAG2R,EAAM7J,OAAOthB,OAAS,MAAMmrB,EAAMnrB,OAAS,KAIxDmrB,EAAMhN,UAAYgN,EAAMhN,SAAS0/B,WAClCjgC,EAAEpE,OAAS,iCAAiC2R,EAAMgyB,uBAC/Cv/B,EAAEpE,UAKJhd,KAAK2f,QAAS,CACf,IAAIijE,EAAiBxhE,EAAEmuD,SAEvBnuD,EAAEmuD,SAAW,CAACnmD,EAAM4mB,IACb5mB,EAAKhI,EAAEniB,IAEL+wC,EAAOjyB,KAAKqL,EAAM4mB,IACjB4yC,EACIA,EAAex5D,EAAM4mB,EAAQ5mB,EAAKhI,EAAEniB,KACpCmqB,EAAKhI,EAAEniB,KAEN,EAElB,CAEAmiB,EAAEq/D,QAAS,EACXr/D,EAAEqzD,SAAW,GAAG,IAGZ1qE,CACV,CAWA,aAAA04E,CAAcz2D,GACNA,IAIDA,EAAK3G,MACL2G,EAAKpS,OAAS,IAAI5T,SAAStE,IACzB1B,KAAKyiF,cAAc/gF,EAAE,KAMf1B,KAAK4nB,UAAUoE,EAAKvpB,MACN,eAAZupB,EAAKvpB,KAChBzC,KAAKs3E,gBACF,iDACA,CACGtrD,SAMJhsB,KAAK6iF,kBACP7iF,KAAK6iF,gBAAkB7iF,KAAKO,GAAGyzB,iBAC5B,GAAGh0B,KAAKf,sBAKTe,KAAK6iF,gBAAgBC,oBAAoB92D,IAC3ChsB,KAAKs3E,gBAAgB,kCAAmC,CACrDtrD,UAGT,CAEA,YAAAorD,GACGr3E,MAAMq3E,eAENp3E,KAAKyiF,cAAcziF,KAAK4rB,OAGxB5rB,KAAKypC,gBAAgBzjC,SAAS0b,IAC3B1hB,KAAKs3E,gBACF,2CACG51D,EAAEgN,8BACiB/nB,KAAKC,UAAU8a,KACrC,CACGgpB,UAAWhpB,GAEhB,IAGJ1hB,KAAK0pC,gBAAgB1jC,SAAS0b,IAC3B1hB,KAAKs3E,gBACF,yBAAyB51D,EAAEmpB,+BACxBnpB,EAAEkN,6BACiBjoB,KAAKC,UAAU8a,EAAEgpB,aACvC,CACG5lB,OAAQpD,EAAEmpB,MACVH,UAAWhpB,EAAEgpB,WAElB,IAGJ1qC,KAAK2pC,aAAa3jC,SAAS0b,IACxB1hB,KAAKs3E,gBACF,SAAS51D,EAAEiN,MAAM1vB,kCAAkC0H,KAAKC,UACrD8a,EAAEgpB,2CAEL,CACG/b,MAAOjN,EAAEiN,MAAM/mB,QACf8iC,UAAWhpB,EAAEgpB,WAElB,IAGJ1qC,KAAK4pC,kBAAkB5jC,SAAS0b,IAC7B1hB,KAAKs3E,gBACF,SACG51D,EAAEgpB,UAAU9b,uCACiBjoB,KAAKC,UAClC8a,EAAEgpB,6BAEL,CACGA,UAAWhpB,EAAEgpB,WAElB,IAGJ1qC,KAAK6pC,eAAe7jC,SAAS0b,IAC1B1hB,KAAKs3E,gBAAgB51D,EAAEhe,QAASge,EAAEtgB,KAAK,GAE7C,CAEA,eAAAk2E,CAAgBjhE,EAAKjV,EAAO,CAAC,GAC1B,IAAIsC,EAAU,SAAS1D,KAAKwD,WAAW6S,IACvCrW,KAAK03E,UAAUtwE,KAAK,CAAE1D,UAAStC,QAClC,CAEA,MAAAggF,CAAO39E,GAIJ,OAHApC,QAAQC,MACL,qFAEItB,KAAKO,GAAGya,OAAOvX,EACzB,oBChWH,MAAMs/E,EAAgB,EAAQ,OAI9BpjF,EAAOC,QAAU,cAAwBmjF,EACtC,WAAAjjF,CAAYud,EAAY9c,GACrBR,MAAMsd,EAAY9c,GAElBP,KAAKgjF,eAAiB,GAMtBhjF,KAAKO,GAAGU,GAAG,uBAAwBG,IAC5BpB,KAAKf,IAAMmC,EAAKqK,UAAUzL,KAAK6f,WAAWze,EAAKA,KAAK,GAE9D,CAWA,OAAAsG,GAEG,IAAIu7E,EAAcjjF,KAAKoW,WACnBymE,EAAa,GAKjB,OAJAoG,EAAYj9E,SAAS3G,IAClBw9E,EAAWz1E,KAAK/H,EAAEqI,UAAU,IAGxBlG,QAAQsY,IAAI+iE,GAAYx1E,MAAK,IAE1B,IAAI7F,SAAQ,CAAC9B,EAASoK,KAC1B9J,KAAK6H,eACDH,UACAL,MAAK,KAEH3H,GAAS,IAEX2H,MAAK,KAIHhG,QAAQC,MACL,kGAEH,IAAI4hF,EAAkBljF,KAAKO,GAAG0mB,eAAe6B,MAAMlI,GACzCA,EAAE6B,WAAWziB,QAEnBkjF,EAAgBthF,OAAS,GAC1BshF,EAAgBl9E,SAAS4a,IACtBA,EAAE+1D,cAAc32E,KAAK,GAE3B,IAEFsH,OAAOnG,IACL2I,EAAO3I,EAAI,GACZ,KAGd,CAWA,IAAAwG,GAUG,IAAIuqD,EAAW,GAKf,OAJelyD,KAAKoW,WACXpQ,SAAS65B,IACfqyB,EAAS9qD,KAAKy4B,EAAEl4B,OAAO,IAEnBnG,QAAQsY,IAAIo4C,GAAU7qD,MAAK,IAExBrH,KAAK6H,eACRF,OACAN,MAAMjG,IAICpB,KAAKf,KACPe,KAAKf,GAAKmC,EAAKnC,IAMlB,IAAIkkF,EAAO,CAAC,EACZ,IAAIC,EAAOpjF,KAAKusC,UAChB9sC,OAAOD,KAAKQ,KAAKusC,WAAWvmC,SAASiB,IAClCk8E,EAAKnjF,KAAKusC,UAAUtlC,GAAGhI,IAAMe,KAAKusC,UAAUtlC,EAAE,IAEjDjH,KAAKusC,UAAY42C,EAIjB,IAAIE,GAAW,EAOf,GANA5jF,OAAOD,KAAK2jF,GAAMn9E,SAASiB,IACnBm8E,EAAKn8E,KACPo8E,GAAW,EACd,IAGCA,EACD,OAAOrjF,KAAK2H,MACf,KAGZ,CAEA,OAAAmQ,GACG,IAAIhC,EAAY9V,KAAKO,GAAGsU,WAAWiB,YAcnC,OARgB,GAFb9V,KAAKO,GAAGiiB,WAAWpjB,GACTA,EAAEwM,KAAK6B,eAAiBzN,KAAK4L,KAAK6B,gBACzC7L,QAEHkU,EAAU1B,SACP,OA1IJ,KAAIvL,IAAWtI,GAAGgD,aAAaC,SAASqF,GA2IpCikB,CAAE,qDAAsD,CAAC9sB,KAAK4L,QAI7DkK,CACV,CAaA,4BAAAwtE,CAA6B3nD,GAC1B,IAAIwT,EAAOnvC,KAAKO,GAAGm7B,oCAAoCC,EAAS37B,MAIhE,OAHImvC,GACDnvC,KAAK+tC,WAAWoB,GAEZA,CACV,CAQA,YAAAo0C,CAAaC,GACVxjF,KAAKyjF,mBAAmBD,GACxBxjF,KAAKgjF,eAAe57E,KAAKo8E,EAC5B,CAOA,kBAAAC,CAAmBD,GAChBxjF,KAAKgjF,eAAiBhjF,KAAKgjF,eAAergF,QAAQ8xB,GAAMA,EAAEx1B,IAAMukF,EAAMvkF,IACzE,CAQA,WAAAu4E,GAEG,IAAI0J,EAAc,GAAGvnE,OAAO3Z,KAAK03E,WAYjC,GAXA13E,KAAKoW,WAAWpQ,SAAS3G,IACtBA,EAAE+3E,eACF8J,EAAcA,EAAYvnE,OAAOta,EAAEo4E,WAAW,IAGnB,GAA1Bz3E,KAAKoW,WAAWxU,QACjBs/E,EAAY95E,KAAK,CAAE1D,QAAS,4BAA6BtC,KAAM,CAAC,KAK9DpB,KAAK0jF,WACP,GAAIl1E,OAAOm1E,UAER3jF,KAAK0jF,WAAa,SAAUE,GACzB,OAAO,IAAIp1E,OAAOm1E,WAAYE,gBAC3BD,EACA,WAEN,MACI,SAC2B,IAAxBp1E,OAAOs1E,gBACd,IAAIt1E,OAAOs1E,cAAc,oBASzB,MAAM,IAAIxkF,MAAM,uBAPhBU,KAAK0jF,WAAa,SAAUE,GACzB,IAAIG,EAAS,IAAIv1E,OAAOs1E,cAAc,oBAGtC,OAFAC,EAAOtxD,MAAQ,QACfsxD,EAAOC,QAAQJ,GACRG,CACV,CAGH,CAIH,IAAIh3C,EAAM/sC,KAAK0jF,WAAW1jF,KAAKqsC,eA0B/B,MAzBsB,CACnB,mBACA,aACA,kBAEWrmC,SAASyuB,IACpB,IAAIwuD,EAAcl2C,EAAIk3C,qBAAqBxvD,GAC3C,IAAK,IAAIu7B,EAAI,EAAGA,EAAIizB,EAAYrhF,OAAQouD,IAE3BizB,EAAYjzB,GACVhwD,KAAKiuC,oBAAoBg1C,EAAYjzB,GAAG/wD,KAEjDe,KAAKujF,aAAaN,EAAYjzB,GAEpC,IAIChwD,KAAKgjF,eAAephF,QACrBs/E,EAAY95E,KAAK,CACd1D,QAAS,iCACTtC,KAAM,CAAC,IAIN8/E,CACV,oBCnQH,MAAMgD,EAAa,EAAQ,OAI3BvkF,EAAOC,QAAU,cAAqBskF,EACnC,WAAApkF,CAAYud,EAAY9c,GACrBR,MAAMsd,EAAY9c,EAMrB,CAWA,OAAAmH,GAGG,OAAO,IAAIlG,SAAQ,CAAC9B,EAASoK,KAC1B9J,KAAK6H,eACDH,UACAL,MAAK,KACH3H,GAAS,IAEX4H,OAAOnG,IACL2I,EAAO3I,EAAI,GACZ,GAwCX,CAWA,IAAAwG,GAEG,OAAO3H,KAAK6H,eACRF,OACAN,MAAMjG,IAICpB,KAAKf,KACPe,KAAKf,GAAKmC,EAAKnC,IAEXe,OAEhB,CAEA,OAAA8X,GAEG,OAAO,CAgBV,CAQA,WAAA0/D,GA+DA,oBC7LH,MAAM2M,EAAoB,EAAQ,OAElCxkF,EAAOC,QAAU,cAA4BukF,qBCF7C,MAAMC,EAA0B,EAAQ,OAExCzkF,EAAOC,QAAU,cAAkCwkF,eCFnD,IAAIt3D,EAAI,KAGRntB,EAAOC,QAAU,MACd,WAAAE,CAAY+a,GAGJiS,IACFA,EAAIjS,EAGAA,EAAMA,QACPiS,EAAIjS,EAAMA,OAGnB,CAOA,gBAAAwpE,GACG,MAAO,CACJ,CAAEplF,GAAI,IAAKoS,MAAOyb,EAAE,cACpB,CAAE7tB,GAAI,KAAMoS,MAAOyb,EAAE,+CACrB,CAAE7tB,GAAI,IAAKoS,MAAOyb,EAAE,kBACpB,CAAE7tB,GAAI,IAAKoS,MAAOyb,EAAE,cAE1B,CASA,YAAAw3D,CAAaC,GACV,IAAKA,IAAaA,EAASC,OAASD,EAASC,KAAKz7E,KAAM,OAAO,EAG/D,IAAI07E,EAAgBF,EAASC,KAAKz7E,KAAK0E,cACvC,MACoB,YAAjBg3E,GACiB,4BAAjBA,CAMN,CAcA,WAAAC,CAAYH,EAAUI,GACnB,OAAK3kF,KAAKskF,aAAaC,GAEhB,IAAI/iF,SAAQ,CAAC9B,EAASoK,KAE1B,IAAI86E,EAAS,IAAIp2E,OAAOq2E,WACxBD,EAAOzoE,OAAU9c,IACd,IAAI6E,EAAS,IAGE0gF,EAAO1gF,OAClBwf,MAAM,cACN/gB,QAAQ6T,GAAQA,GAAOA,EAAI5U,OAAS,KAG3B,IAAIoE,SAASwQ,IACvB,IAAIsuE,EAAW,GAMZA,EALgB,KAAfH,GAEDnuE,EAAMA,EAAI5Q,QAAQ,MAAO,QAGV0H,MAAM,gCAEVkJ,EAAIkN,MAAMihE,GAGxBzgF,EAAOkD,KAAK09E,EAAShmF,KAAKimF,GAAS/kF,KAAKolD,SAAS2/B,KAAO,IAG3DrlF,EAAQwE,EAAO,EAElB0gF,EAAOI,WAAWT,EAASC,KAAK,IA/BMhjF,QAAQsI,QAiCpD,CAcA,gBAAAm7E,CAAiBC,EAAUC,GAOxB,IANA,IAAI/jF,EAMK8E,EAAI,EAAGA,GAJD,GAIiBA,IAAK,CAClC,IAAIk/E,EAAOF,EAASh/E,GACpB,IAAKk/E,EAAM,MAIX,GAAY,OAFZhkF,EAAOgkF,EAAKD,KAEQ/jF,EAAKQ,OAAS,EAAG,KACxC,CAEA,OAAY,MAARR,GAAwB,IAARA,EACV,SAEC,GAARA,GACQ,GAARA,GACQ,GAARA,GACQ,GAARA,GACQ,WAARA,GACQ,aAARA,EAEO,UACEmvC,MAAMnvC,GAEP2W,KAAKnN,MAAMxJ,GACZ,OAGHA,EAAKQ,OAAS,IAAY,WAClB,SANL,QAQb,CAMA,QAAAwjD,CAASigC,GACN,OAAKA,EAEEA,EAAIn8C,OAAOtjC,QAAQ,KAAM,IAAIA,QAAQ,KAAM,IAFjC,EAGpB,oBC/JH,MAAM0/E,EAAoB,EAAQ,OAElC,IAAIx4D,EAAI,IAAIjkB,IAAWtI,GAAGgD,aAAaC,SAASqF,GAkBhD,SAAS08E,EAAYv6D,EAAMV,EAAS,IACjC,GAAKU,EAAL,CACA,GAAIA,EAAKvoB,IAAK,CAWX,MAAMksB,EAAQrE,EAAO3nB,QAAQ+e,GAAMA,EAAEziB,IAAM+rB,EAAKvoB,MAAK,GACrDuoB,EAAK2D,MAAQA,GAAO1vB,GAEpB+rB,EAAKgmB,UAAY,CACdjoC,KAAMiiB,EAAKgB,KACXrpB,OAAQqoB,EAAK3Z,OAGZ3L,MAAMC,QAAQqlB,EAAK3Z,SAAQ2Z,EAAKiqB,SAAWjqB,EAAK3Z,OAEnC,mBAAd2Z,EAAKgB,MACS,uBAAdhB,EAAKgB,OAELhB,EAAKiqB,SAAWjqB,EAAK3Z,MAAMqS,MAAM,aAa7BsH,EAAKvoB,WACLuoB,EAAKgB,YACLhB,EAAK3Z,KACf,CAEI2Z,EAAKpR,OAASoR,EAAKpR,MAAMhY,SACzBopB,EAAKpR,OAAS,IAAI5T,SAAStE,IACzB6jF,EAAY7jF,EAAG4oB,EAAO,GA7CX,CAgDpB,CAiBA,SAASk7D,EAAYx6D,EAAMV,EAAS,IACjC,GAAKU,EAAL,CACA,GAAIA,EAAK2D,MAAO,CACb,IAAIA,EAAQrE,EAAO3nB,QAAQ+e,GAAMA,EAAEziB,IAAM+rB,EAAK2D,QAAO,GAErD3D,EAAKvoB,IAAMksB,GAAO1vB,IAAM+rB,EAAK2D,MAC7B3D,EAAKgmB,UAAYhmB,EAAKgmB,WAAa,CAAC,EACpChmB,EAAKgB,KAAOhB,EAAKgmB,UAAUjoC,KAE3B,IAAIxD,EACDylB,EAAKiqB,UAAUn2C,KAAKmH,GAAOA,aAAa8R,KAAO9R,EAAEyT,cAAgBzT,KACjE,GAGC+kB,EAAKgmB,UAAUruC,SACZqoB,EAAKgmB,UAAUruC,kBAAkBoV,KAC9BxS,EAAOiC,QAAQwjB,EAAKgmB,UAAUruC,OAAO+W,eAAiB,GACvDnU,EAAO6B,KAAK4jB,EAAKgmB,UAAUruC,QAEtB4C,EAAOiC,QAAQwjB,EAAKgmB,UAAUruC,QAAU,GAChD4C,EAAO6B,KAAK4jB,EAAKgmB,UAAUruC,SAGf,oBAAdqoB,EAAKgB,KACNhB,EAAK3Z,MAAQ9Q,GAAGqZ,MAAMjB,qBAER,mBAAdqS,EAAKgB,MACS,uBAAdhB,EAAKgB,KAELhB,EAAK3Z,MACuB,GAAzB2Z,EAAKiqB,UAAUrzC,OAAcopB,EAAKiqB,SAAS7rC,KAAK,KAAO,KAE1D4hB,EAAK3Z,MAAQ9L,EACTzG,KAAKmH,IAGA0oB,GACe,SAAdA,EAAMlsB,KAAgC,aAAdksB,EAAMlsB,KAClB,aAAbuoB,EAAKgB,KAID/lB,EAFG0oB,EAAMk0B,YAAY,IAAI9qC,KAAK9R,MAIvCmD,KAAK,YAGL4hB,EAAK2D,aACL3D,EAAKjiB,YACLiiB,EAAKiqB,gBACLjqB,EAAKgmB,SACf,CAEIhmB,EAAKpR,OAASoR,EAAKpR,MAAMhY,SACzBopB,EAAKpR,OAAS,IAAI5T,SAAStE,IACzB8jF,EAAY9jF,EAAG4oB,EAAO,GAtDX,CAyDpB,CAEA,SAASm7D,EAAiB9yC,GACvB,MAAO,6BAA6BA,GACvC,CAEA,SAAS+yC,EAAiB/yC,GACvB,MAAO,6BAA6BA,GACvC,CAEAhzC,EAAOC,QAAU,cAA4B0lF,EAC1C,WAAAxlF,CAAYq8B,EAAQ57B,EAAIgI,EAAU,CAAC,GAGhCxI,MAFAo8B,EAASA,GAAU,mBAEL57B,GAEdP,KAAK2lF,SAAWp9E,GAAW,CAAC,EAE5BvI,KAAK4lF,eAAgB,EAKrB5lF,KAAK6lF,WAAY,EAKH7lF,KAAK8E,OAAS,CACzBkrC,QAASzvC,EAAG67B,MAAQ,CAAC,GAAGt3B,OACxB0wC,UAAW,CACRswC,IAAKh5D,EAAE,OACPi5D,GAAIj5D,EAAE,MAENk5D,WAAYl5D,EAAE,eACdutB,QAASvtB,EAAE,YACXytB,WAAYztB,EAAE,gBACdmtB,aAAcntB,EAAE,kBAChBqtB,gBAAiBrtB,EAAE,sBAEnBm5D,6BAA8Bn5D,EAAE,kBAChCo5D,6BAA8Bp5D,EAAE,kBAEhC0sB,WAAY1sB,EAAE,gBACd4sB,cAAe5sB,EAAE,oBAEjB6tB,YAAa7tB,EAAE,iBACf+tB,eAAgB/tB,EAAE,aAElB8sB,iBAAkB9sB,EAAE,sBACpBgtB,oBAAqBhtB,EAAE,0BAEvByqB,kBAAmBzqB,EAAE,YACrB2qB,qBAAsB3qB,EAAE,mBACxB6qB,YAAa7qB,EAAE,MACf+qB,eAAgB/qB,EAAE,UAClBiqB,QAASjqB,EAAE,YACXmqB,WAAYnqB,EAAE,gBACdmpB,uBAAwBnpB,EAAE,mBAC1B2oB,gBAAiB3oB,EAAE,aACnB6oB,eAAgB7oB,EAAE,YAClB+oB,oBAAqB/oB,EAAE,mBACvBipB,mBAAoBjpB,EAAE,kBACtBqpB,uBAAwBrpB,EAAE,0BAC1BupB,sBAAuBvpB,EAAE,yBACzBypB,2BAA4BzpB,EAAE,gCAC9B2pB,0BAA2B3pB,EAAE,+BAC7B6pB,oBAAqB7pB,EAAE,iBACvB+pB,oBAAqB/pB,EAAE,iBAEvBirB,eAAgBjrB,EAAE,KAClBkrB,kBAAmBlrB,EAAE,KACrBmrB,kBAAmBnrB,EAAE,KACrBorB,kBAAmBprB,EAAE,KACrBqrB,yBAA0BrrB,EAAE,KAC5BsrB,yBAA0BtrB,EAAE,KAE5BwrB,mBAAoBxrB,EAAE,UACtByrB,sBAAuBzrB,EAAE,kBAEzB4rB,iBAAkB5rB,EAAE,cACpB8rB,oBAAqB9rB,EAAE,gBAEvBisB,uBAAwBjsB,EAAE,mBAC1BmsB,0BAA2BnsB,EAAE,uBAC7BqsB,6BAA8BrsB,EAAE,yBAChCusB,gCAAiCvsB,EAAE,iCAEnCq5D,qBAAsBr5D,EAAE,iBACxBkuB,mBAAoBluB,EAAE,wBACtBouB,+BAAgCpuB,EAAE,4BAClCsuB,wBAAyBtuB,EAAE,oBAC3BwuB,2BAA4BxuB,EAAE,0BAhEpC,IAqEIgW,EAAO9iC,KAAK8iC,IAAM,CACnBsjD,MAAOpmF,KAAK2+B,OAAO,GAAGxC,WACtBkqD,aAAcrmF,KAAK2+B,OAAO,GAAGxC,kBAC7Bx0B,KAAM3H,KAAK2+B,OAAO,GAAGxC,WAIxBn8B,KAAKoF,QAAQvC,SAAW7C,KAAKO,GAAG6E,QAAQvC,WAExC7C,KAAK+wC,UAAUu1C,uBAAyB,GAGxCtmF,KAAK4/D,GAAK,CACP2mB,KAAM,CACH,CACGxjE,KAAM,SACNha,KAAM,QACNy9E,WAAYxmF,KAAK2lF,SAASa,aAAc,EACxCD,KAAM,CACH,CACGtnF,GAAI6jC,EAAIujD,aACRtjE,KAAM,QACN3hB,KAAM,IAAM,GAEZkpB,OAAQ,GACR2hB,UAAU,EACV8jB,OAAQ/vD,KAAK2lF,SAAS51B,UAI/B,CACG9wD,GAAI6jC,EAAIn7B,KACRob,KAAM,SACNgK,IAAK,gBACL1b,MAAOyb,EAAE,QACT25D,OAAQzmF,KAAK2lF,SAASe,eAAgB,EACtC15D,MAAO,KACAhtB,KAAK2mF,SAAS3mF,KAAK2mF,QAAQzJ,OAC/Bl9E,KAAKuB,KAAK,OAAQvB,KAAK07C,WAAW,IAKjD,CAGA,IAAAp7C,CAAKiI,GACF,GAAIvI,KAAK4lF,cAAe,OAExB7lF,MAAMO,KAAKiI,GAEX,MAAMqnC,EAAKpjB,GAAGxsB,KAAK8iC,IAAIujD,cAEvB,GAAIz2C,EAAI,CACL,IAAK5vC,KAAK6lF,UAAW,CAClB7lF,KAAK4mF,iBAAkB,EACvBh3C,EAAGi3C,WAAWC,SAAS,SAAU7gF,IAC9B,GAAIjG,KAAK4mF,gBAAiB,OAAO,EAEjC5mF,KAAKuB,KAAK,UAAWvB,KAAK07C,WAAW,IAExC17C,KAAK4mF,iBAAkB,EAMvB,IAAIG,EAAQ/mF,KAAKgxC,UACjBhxC,KAAKgxC,UAAY+1C,EACjB/mF,KAAK6lF,WAAY,CACpB,CACA7lF,KAAK4lF,eAAgB,CACxB,CACH,CAYA,OAAA9tE,CAAQmS,EAAS+mB,EAAYhxC,KAAKgxC,WAC/B,IAAIg2C,EAAS,KAAM,EAEfC,EAASz6D,GAAGxsB,KAAK8iC,IAAIujD,cACzB,OAAIY,GACDD,EAASC,EAAOC,oBACTF,EAAO/8D,IAEPlqB,MAAM+X,QAAQmS,EAAS+mB,EAEpC,CAeA,mBAAA8xC,CAAoB93D,GACjB,IAAKA,EAAM,OAAO,EAElB,IAAI2wB,GAAa,EAGjB,GAAI3wB,GAAM3F,MACN2F,EAAKpR,OAAS,IAAI5T,SAAStE,IACzBi6C,EAAaA,GAAc37C,KAAK8iF,oBAAoBphF,EAAE,SAYzD,GARKspB,EAAKvoB,KAAmB,IAAZuoB,EAAKvoB,MACnBk5C,GAAa,GAGX3wB,EAAKgB,MAAqB,IAAbhB,EAAKgB,OACpB2vB,GAAa,GAGZA,EACD,OAAQ3wB,EAAKgB,MACV,IAAK,kBACL,IAAK,sBACL,IAAK,uBACL,IAAK,2BACL,IAAK,eACL,IAAK,mBACL,IAAK,eACL,IAAK,kBACL,IAAK,wBACL,IAAK,2BACL,IAAK,WACL,IAAK,eACL,IAAK,UACL,IAAK,YACL,IAAK,kBAGF,MAEH,IAAK,qBACL,IAAK,yBAEGhB,EAAK3Z,OAAuB,IAAd2Z,EAAK3Z,QACrBsqC,GAAa,GAGZA,IACQ37C,KAAKO,GAAGmnB,mBAAmBsD,EAAK3Z,SAEtCsqC,GAAa,IAGnB,MAEH,IAAK,WACL,IAAK,eAEG3wB,EAAK3Z,OAAuB,IAAd2Z,EAAK3Z,QACrBsqC,GAAa,GAGZA,IACW37C,KAAKO,GAAGmmB,UAAUsE,EAAK3Z,SAEhCsqC,GAAa,IAGnB,MAEH,IAAK,iBACL,IAAK,qBAMF,GAJK3wB,EAAK3Z,OAAuB,IAAd2Z,EAAK3Z,QACrBsqC,GAAa,GAGZA,EAAY,CACb,IAAIjJ,EAAU1nB,EAAK3Z,MAAMqS,MAAM,KAAK,GACjCivB,EAAU3nB,EAAK3Z,MAAMqS,MAAM,KAAK,GAC/BrW,EAAQrN,KAAKO,GAAGmmB,UAAUgsB,GACzBrlC,GAIUA,EAAMua,UAAU+qB,KAH5BgJ,GAAa,EAQnB,CACA,MAEH,QAEQ3wB,EAAK3Z,OAAuB,IAAd2Z,EAAK3Z,QACrBsqC,GAAa,GAO5B,OAAOA,CACV,CAEA,QAAAznB,CAASvS,GACN5hB,MAAMm0B,SAASvS,GACf3hB,KAAKgxC,UAAYrvB,EAEjB,MAAMiuB,EAAKpjB,GAAGxsB,KAAK8iC,IAAIujD,cACvB,GAAIz2C,EAAI,CACL,IAAKjuB,EAMF,YAJAiuB,EAAGwqC,OAAO,QAAS,CAChB/0D,KAAM,MACNzL,MAAO,KAKb,IAAIutE,EAAannF,KAAKO,GAAGma,UAAUiH,GAmBnC4jE,EAAY4B,EAAYnnF,KAAKkxC,SAE7BlxC,KAAK4mF,iBAAkB,EACvBh3C,EAAGwqC,OAAO,QAAS+M,GACnBnnF,KAAK4mF,iBAAkB,CAC1B,CACH,CAEA,QAAAlrC,GACG,GAAIlvB,GAAGxsB,KAAK8iC,IAAIujD,cAAe,CAC5B,IAAI1kE,EAAW3hB,KAAKO,GAAGma,UACpB8R,GAAGxsB,KAAK8iC,IAAIujD,cAAcQ,WAAWx1E,OAAS,CAAC,GAOlDm0E,EAAY7jE,EAAU3hB,KAAKkxC,SAC3BlxC,KAAKgxC,UAAYrvB,CACpB,CAEA,OAAO5hB,MAAM27C,UAChB,CAEA,UAAAznB,CAAW3J,EAAS,GAAIxF,EAAS,MAC9B/kB,MAAMk0B,WAAW3J,EAAQxF,GAEzBwF,EAAOtkB,SAAS0b,IACE,SAAXA,EAAE3Y,OACH2Y,EAAE7J,OAAU5R,GAAMjG,KAAKO,GAAG0Q,MAAMm2E,KAAKC,cAAcphF,GAAE,IAE3DjG,KAAKyzC,QACR,CAEA,WAAA6zC,GACG,MAAO,aACV,CAEA,MAAA7zC,GACGzzC,KAAKunF,qBAEL,IAAI33C,EAAKpjB,GAAGxsB,KAAK8iC,IAAIujD,cACrB,GAAIz2C,EAAI,CAEL,KAAOA,EAAGl+B,OAAO4Y,OAAO1oB,OAAS,GAC9BguC,EAAGl+B,OAAO4Y,OAAO6qB,OAGnBn1C,KAAK4zC,cAAgB,IAAI5tC,SAAS0b,IAChCkuB,EAAGl+B,OAAO4Y,OAAOljB,KAAKsa,EAAE,IAEvBkuB,EAAGl+B,OAAO4Y,OAAO1oB,OAClBguC,EAAG43C,UAEHxnF,KAAKk0B,SAAS,IACd0b,EAAGinB,UAET,CACH,CAIA,kBAAA0wB,GACG,MAAME,EAAMj7D,GAAGxsB,KAAK8iC,IAAIujD,cACxB,IAAKoB,EAAK,OAEV,MAAMpiB,EAAQrlE,KACR0nF,EAAcD,EAAIE,KAAKC,QAAQ,YAAa,UAE7C5nF,KAAK6nF,kBACP7nF,KAAK6nF,gBAAkBH,EAAYx9E,UAAU49E,UAChDJ,EAAYx9E,UAAU49E,SAAW,WAC9B,MAAM97D,EAAOq5C,EAAMwiB,gBAAgB19E,KAAKnK,MACxC,GAAKgsB,EAAL,CAQA,GAC0B,kBAAvBA,EAAKglB,UAAUjoC,MACQ,sBAAvBijB,EAAKglB,UAAUjoC,KAChB,CACC,MAAMg/E,EAAatC,EAAiBz5D,EAAK2C,OACnCq5D,EAAatC,EAAiB15D,EAAK2C,OACnCs5D,EAAkBz7D,GAAGu7D,IAAarsC,WAClCwsC,EAAkB17D,GAAGw7D,IAAatsC,WAEpCusC,GAAmBC,IACpBl8D,EAAKipB,SAAW,CAACgzC,EAAiBC,GAExC,CAEA,OAAOl8D,CAhBP,CAJGq5C,EAAM9kE,GAAGoJ,OAAOC,UAAU,IAAItK,MAAM,iBAAkB,CACnD4B,QAAS,uCAoBlB,EAGAwmF,EAAYx9E,UAAUi+E,aAAe11D,eAClCkgB,EACA5pC,EACA8O,EACAi8B,EACAkL,GAEA,IAAIopC,EAAS/iB,EAAMgjB,QAAQ11C,GAEvBitB,EAAK,CACN3gE,GAAI+/C,EAAMttC,OAAOzS,GACjB8jB,KAAM,SACNulE,QAAS,SACTx0C,WAAYA,EACZnlB,MAAOgkB,EACP41C,KAAMx/E,EACNwmE,SAAU,SAAUnwE,GACjB,IAAIimF,EAAMjmF,EAAEuzC,GACR61C,EACD3wE,IAAmB,QAAR9O,EAAiB3F,MAAMqlF,KAAKpB,cAAgB,MAE1D,OADImB,IAAQnD,EAAMmD,EAAOnD,IAClBA,CACV,EACA+C,OAAQA,EACRM,OAAQ,GAGP/lF,EAASS,MAAMw8D,GAAGA,EAAI5gB,GAW1B,GAPIyoC,SACKA,EAAIE,KAAKgB,WAAW,WAAWvnF,KAAKuxC,GAO1CmB,EAAWnxC,QACPqoB,GACa,kBAAXA,EAAK/rB,IAAqC,sBAAX+rB,EAAK/rB,KACxC2C,QACuC,GAAzCe,EAAO+O,OAAOL,OAAO4jC,UAAUrzC,OAChC,CAGC,MAAMmmF,EAAatC,EAAiB9yC,GAC9Bq1C,EAAatC,EAAiB/yC,GAC9Bi2C,EAAYp8D,GAAGu7D,GACfc,EAAYr8D,GAAGw7D,GACf3oB,EAAO18D,EAAO+O,OAAOL,OAAO4jC,UAAY,GAC1CoqB,GAAMz9D,OAAS,GAAKgnF,GAAaC,IAClCD,EAAU10D,SAASmrC,EAAK,IACxBwpB,EAAU30D,SAASmrC,EAAK,IACxBupB,EAAUhyE,UACViyE,EAAUjyE,UAEhB,CAEA,OAAOjU,CACV,CACH,CAEA,OAAA0lF,CAAQS,EAAiB1gD,EAAe,MACrC,IAAIlkC,EAGJ,GAAuB,eAAnB4kF,EACD,MAAO,GACHnvE,OAAO3Z,KAAK+oF,aAAa,gBACzBpvE,OAAO3Z,KAAKgpF,sBAAsB,gBAClCrvE,OAAO3Z,KAAKipF,cAAc,gBAC1BtvE,OAAO3Z,KAAKkpF,eAAe,cAAe,SAGjD,IAAIv6D,GAAS3uB,KAAKkxC,SAAW,IAAIvuC,QAC7B+e,GAAMA,EAAEziB,IAAM6pF,IAChB,GAEF,OAAQn6D,GAAOlsB,KACZ,IAAK,UACFyB,EAASlE,KAAKmpF,YAAYx6D,GAC1B,MACH,IAAK,gBACFzqB,EAAS,GACLyV,OAAO3Z,KAAK+oF,aAAap6D,IACzBhV,OAAO3Z,KAAKopF,YAAYz6D,IACxBhV,OAAO3Z,KAAKgpF,sBAAsBr6D,IAClChV,OAAO3Z,KAAKkpF,eAAev6D,IAC3BhV,OAAO3Z,KAAKmpF,eAChB,MACH,IAAK,OACL,IAAK,WACFjlF,EAAS,CAAC,aAAc,mBACpByV,OAAO3Z,KAAKmpF,eACZxvE,OAAO3Z,KAAKkpF,eAAev6D,IAC/B,MACH,IAAK,OACFzqB,EAASlE,KAAKqpF,YAAY16D,GAC1B,MACH,IAAK,OACFzqB,EAAS,GACLyV,OAAO3Z,KAAKmpF,eACZxvE,OAAO3Z,KAAKopF,YAAYz6D,IAC5B,MAIH,IAAK,SACL,IAAK,WACL,IAAK,QACFzqB,EAASlE,KAAKmpF,cAKpB,MAAMG,EAAW,GAAG36D,GAAOhN,UAAU2M,YAAYK,GAAOhN,UAAUkS,cA+BlE,MA5Be,YAAZy1D,GAEa,WAAZA,GAAyB36D,GAAOhN,UAAUyyB,UAE3ClwC,EAASA,GAAU,GAEfyqB,GAAOhN,UAAU4yB,aAClBrwC,EAASA,EAAOyV,OAAO3Z,KAAKupF,YAAY56D,KAE3CzqB,EAASA,EAAOyV,OAAO3Z,KAAKwpF,kBAAkB76D,EAAOyZ,KAC/B,iBAAdzZ,GAAOlsB,IACfyB,GAAUA,GAAU,IAChByV,OAAO3Z,KAAKupF,YAAY56D,IACxBhV,OAAO3Z,KAAKwpF,kBAAkB76D,EAAOyZ,IACrCzuB,OAAO3Z,KAAKkpF,eAAev6D,IAIzBm6D,EAAgBthF,QAAQ,SAAW,IACzCtD,EAASlE,KAAKkpF,eAAe,KAAMJ,IAGlC9oF,KAAK+wC,UAAU+D,eAChB5wC,GAAUA,GAAU,IAAIyV,OAAO3Z,KAAKypF,kBAAkB96D,KAGzDzqB,GAAUA,GAAU,IAAIyV,OAAO3Z,KAAKipF,cAAct6D,IAE3CzqB,CACV,CAEA,WAAAilF,GACG,MAAO,CACJ,CACGhyC,MAAO,OACPqvC,YAAY,EACZzjE,KAAM,WACNwsD,SAAU,IAGnB,CAEA,cAAAma,CAAe/6D,GACZ,MAAO,CACJ,CACGwoB,MAAO,UACPp0B,KAAM,YAGf,CAEA,WAAAwmE,CAAY56D,GACT,MAAO,CACJ,CACGwoB,MAAO,OACPp0B,KAAM,OACN9hB,GAAI,CACD0oF,cAAe,YAKT3pF,KAAK4pF,WAAU,SAAUhpE,GACtB,OAAQA,EAAE8L,eACb,GAAG,WAAa1sB,MACX6pF,MAAMC,MAAMC,OAAS,GAChC,IAIZ,CAEA,YAAAhB,CAAap6D,GACV,IAAIpmB,EAAU,GAEVyhF,EACDhqF,KAAKixC,cAActuC,QAAQ+e,GAAMA,EAAEziB,IAAM0vB,EAAM1vB,KAAI2C,OAAS,EAsB/D,MAnBa,eAAT+sB,GAA0B3uB,KAAKqzC,QAChC9qC,EAAUvI,KAAKqjB,SAASC,GAAMA,EAAEwoB,gBAAgB9rC,KAAKqzC,WAG/C22C,IACNzhF,EAAUvI,KAAKqjB,SACXC,IACGtjB,KAAKqzC,QAAUrzC,KAAKqzC,QAAQp0C,GAAK,KAAOqkB,EAAErkB,IAC3CqkB,EAAEwoB,gBAAgBnd,EAAMtB,mBAIjC9kB,GAASvC,SAASsd,IACf/a,EAAQnB,KAAK,CACVnI,GAAIqkB,EAAErkB,GACNoS,MAAOiS,EAAE9f,OACV,IAGE,CACJ,CACG2zC,MAAO,QACPp0B,KAAM,QACNxa,QAASA,GAAW,IAG7B,CAEA,WAAA8gF,CAAY16D,GACT,MAAO,CACJ,CACGwoB,MAAO,OACPp0B,KAAM,QACNxa,QAASomB,GAAOhN,UAAUpZ,SAASzJ,KAAI,SAAUkxD,GAC9C,MAAO,CACJ/wD,GAAI+wD,EAAE/wD,GACNoS,MAAO2+C,EAAEvsD,KAEf,KAGT,CAEA,WAAA2lF,CAAYz6D,GACT,MAAO,CACJ,CACGwoB,MAAO,OACPp0B,KAAM,QACNxa,QAASvI,KAAKO,GAAG6E,QAAQtC,WAAWhE,KAAK0d,IAC/B,CACJvd,GAAIud,EAAE3Z,SACNwO,MAAOmL,EAAE3Z,cAKxB,CAEA,qBAAAmmF,CAAsBr6D,GACnB,IAAIs7D,EAOJ,OALGA,EADU,eAATt7D,GAA0B3uB,KAAKqzC,QACjBrzC,KAAKqzC,QAAQp0C,GAEb0vB,GAAOhN,UAAUC,WAG5B,CACJ,CACGu1B,MAAO,iBACPp0B,KAAM,QACNxa,QAAS0hF,EACJjqF,KAAKO,GAAGigB,iBACJkI,GAAOA,GAAIpB,YAAYroB,IAAMgrF,IAC/BnrF,KAAK4pB,IACG,CACJzpB,GAAIypB,EAAGzpB,GACPoS,MAAOqX,EAAGllB,UAGhB,IAGd,CAEA,iBAAAgmF,CAAkB76D,EAAOyZ,GAEtB,MAAM8hD,EAAQlqF,KAAKqjB,SACfC,GAAsB,MAAhBtjB,KAAKqzC,SAAmB/vB,EAAErkB,IAAMe,KAAKqzC,QAAQp0C,KACrDH,KAAKwkB,IACG,CACJrkB,GAAIqkB,EAAErkB,GACNoS,MAAOiS,EAAE9f,UAIT2mF,EAAmBz3C,IACtB,MAAMnqC,EAAU,GAGV6hF,EAAQpqF,KAAKO,GAAGmmB,UAAUgsB,GAUhC,OATI03C,GACDA,EAAM9/D,QAAQ5I,IAAOA,EAAE2kB,eAAcrgC,SAASsd,IAC3C/a,EAAQnB,KAAK,CACVnI,GAAIqkB,EAAErkB,GACNoS,MAAO,GAAGiS,EAAEwB,OAAOthB,SAAS8f,EAAE9f,SAC/B,IAID+E,CAAO,EAejB,IAAImqC,EACAC,EACA03C,EAAe,GAQnB,OAP4B,GAAxBjiD,GAAcxmC,SACf8wC,EAAUtK,EAAa,GACvBuK,EAAUvK,EAAa,GAEvBiiD,EAAeF,EAAgBz3C,IAG3B,CACJ,CACGyE,MAAO,aACPp0B,KAAM,OACNyjE,YAAY,EACZhZ,QAAS,EACTp3D,SAAU,CACP,CACGnX,GAAIwmF,EAAiB92D,GAAO1vB,IAC5B2M,KAAM,QACNmX,KAAM,QACN20C,YACG13D,KAAK8E,OAAO0wC,UAAUywC,6BACzB19E,QAAS2hF,EACT74E,MAAOqhC,EACPzxC,GAAI,CACDowC,SAAU,SAAUi5C,GAtCR,EAAC1B,EAAWl2C,KACpC,MAAMnqC,EAAU4hF,EAAgBz3C,GAGhC,GAAIk2C,EAAW,CACZ,MACM2B,EADkB3B,EAAUl8D,gBACG89D,gBAAgB,GACrDD,GAAcnQ,OAAO,UAAW7xE,GAChCgiF,GAAc3zE,SACjB,GA8Be6zE,CAAmBzqF,KAAMsqF,EAC5B,IAGN,CACGrrF,GAAIymF,EAAiB/2D,GAAO1vB,IAC5B2M,KAAM,QACNmX,KAAM,QACN20C,YAAa5qC,EAAE,kBACfvkB,QAAS8hF,EACTh5E,MAAOshC,KAKtB,CAEA,iBAAA82C,CAAkB96D,GACf,MAAO,CACJ,CACGwoB,MAAO,aACPp0B,KAAM,SACNxa,QAASvI,KAAK+wC,UAAUu1C,wBAA0B,IAG3D,CAEA,cAAA4C,CAAev6D,EAAO+7D,EAAkB,MACrC,MAAMn3C,GAAiBvzC,KAAKwzC,gBAAkB,IAC1C7wC,QAAQgoF,IACN,IAAKA,EAAQ,OAAO,EAEpB,IAAIzmF,GAAS,EACb,GACQ,gBADAyqB,EAEFzqB,EACGlE,KAAKqzC,QAAQp0C,KAAO0rF,EAAO7lE,QAAQ7lB,KAAO0rF,EAAOh8D,WAKpD,OAAQA,EAAMlsB,KACX,IAAK,UACFyB,EAAS,CAAC,WAAW+wC,SAAS01C,EAAOh8D,OAAOlsB,KAE5C,MAEH,IAAK,gBAKF,GAJAyB,EACGyqB,EAAMhN,SAASC,cACd+oE,EAAOh8D,OAAO7J,OAAO7lB,IAAM0rF,EAAO7lE,OAAO7lB,KAExC0vB,EAAMhN,SAAS4yB,WAAY,CAC7BrwC,EAASA,IAAWymF,EAAOh8D,MAE3B,KACH,CAEAzqB,EACGA,IACCyqB,EAAMhN,SAASivB,YACbjiB,EAAMhN,SAASkvB,eAAiB85C,EAAOh8D,OAAO1vB,GAEpD,MAEH,IAAK,OACL,IAAK,WACFiF,EAAS,CAAC,OAAQ,YAAY+wC,SAC3B01C,EAAOh8D,OAAOlsB,KAGjB,MAEH,IAAK,YACL,IAAK,UACL,IAAK,SACFyB,EAAS,CAAC,YAAa,UAAW,UAAU+wC,SACzC01C,EAAOh8D,OAAOlsB,KAGjB,MAEH,IAAK,SACL,IAAK,WACL,IAAK,QACL,IAAK,YACL,IAAK,OACFyB,EAAS,CACN,SACA,WACA,QACA,YACA,QACD+wC,SAAS01C,EAAOh8D,OAAOlsB,KAEzB,MAEH,IAAK,OACFyB,EAAS,CAAC,QAAQ+wC,SAAS01C,EAAOh8D,OAAOlsB,KAEzC,MAEH,QACG,GAAIkoF,EAAOloF,IAAK,CAEb,MAAMyyC,EAAiBy1C,EAAOloF,IAAIihB,MAAM,KAAKyxB,MAE7CjxC,EACGgxC,IAAmBvmB,EAAM1vB,IACzBi2C,IAAmBvmB,EAAMlsB,KACzByyC,IAAmBw1C,GACnBC,EAAOloF,MAAQioF,CACrB,EAQZ,OAAOxmF,CAAM,IAEfpF,KAAKO,IACI,CACJJ,GAAII,EAAEoD,IACN4O,MAAOyb,EAAE,eAAgB,CAACztB,EAAEmE,YAIrC,OAAK+vC,EAEE,CACJ,CACG4D,MAAO,UACPp0B,KAAM,SACNxa,QAAS,CACN,CACGtJ,GAAI,QACJoS,MAAOrR,KAAK8E,OAAO0wC,UAAU2wC,yBAE7B5yC,KAXe,EAe9B,CAEA,aAAA01C,CAAct6D,GACX,OAAKA,IAEiB3uB,KAAKu7C,gBAAkB,CAAC,GAChB5sB,EAAM1vB,IAAM0vB,IAAU,CAAC,GACtCppB,QAAU,GAJN,EAKtB,CAEA,KAAAqlF,IAASriF,GACN,MAAMyoC,EAAYvxC,OAAO2vB,OAAO,CAAC,EAAGpvB,KAAKgxC,WAEzC,GAAKhxC,KAAK2mF,QA6BP3mF,KAAK2mF,QAAQkE,QAAQtiF,OA7BL,CAChB,IAAIq3D,EAAK,CACN3gE,GAAIe,KAAK8iC,IAAIsjD,MACbrjE,KAAM,QACNgtC,OAAQ,IACRxO,MAAO,IACPzzC,KAAM9N,KAAK4/D,IAGTpzC,GAAGxsB,KAAK8iC,IAAIsjD,OAiBd55D,GAAGxsB,KAAK8iC,IAAIsjD,OAAOyE,QAAQtiF,IAhB3BvI,KAAK2mF,QAAUvjF,MAAMw8D,GAAGA,GACxB5/D,KAAKM,KAAKN,KAAK+wC,WACX/wC,KAAKkxC,SACNlxC,KAAKi0B,WAAWj0B,KAAKkxC,QAASlxC,KAAKqzC,SAOlCrC,GACDhxC,KAAKk0B,SAAS8c,GAGjBhxC,KAAK2mF,QAAQkE,QAAQtiF,GAI3B,CAGH,CAWA,eAAAuiF,CAAgBn4C,EAASpqC,EAAU,CAAC,GACjCvI,KAAKu7C,eAAiBv7C,KAAKu7C,gBAAkB,CAAC,EAC9Cv7C,KAAKu7C,eAAe5I,GAAWpqC,CAClC,oBCxnCH,MAAMwiF,EAAgB,EAAQ,MAE9B,IAAIj+D,EAAI,IAAIjkB,IAAWtI,GAAGgD,aAAaC,SAASqF,GAEhDlJ,EAAOC,QAAU,cAAwBmrF,EACtC,WAAAjrF,CAAYo8B,EAAKC,EAAQ57B,GACtBR,MAAMm8B,EAAKC,EAAQ57B,GAEnBc,QAAQC,MAAM,2CAGd,IAAIwhC,EAAO9iC,KAAK8iC,IAAM,CACnB0S,UAAWx1C,KAAK2+B,OAAO,GAAGxC,eAC1B6uD,WAAYhrF,KAAK2+B,OAAO,GAAGxC,oBAC3B8uD,aAAcjrF,KAAK2+B,OAAO,GAAGxC,4BAE7B9W,KAAMrlB,KAAK2+B,OAAO,GAAGxC,oBACrBxN,MAAO3uB,KAAK2+B,OAAO,GAAGxC,qBACtBnQ,KAAMhsB,KAAK2+B,OAAO,GAAGxC,oBACrB+uD,WAAYlrF,KAAK2+B,OAAO,GAAGxC,0BAE3BgvD,WAAYnrF,KAAK2+B,OAAO,GAAGxC,0BAC3BivD,gBAAiBprF,KAAK2+B,OAAO,GAAGxC,+BAChCkvD,qBAAsBrrF,KAAK2+B,OACxB,GAAGxC,oCAENmvD,qBAAsBtrF,KAAK2+B,OACxB,GAAGxC,oCAENovD,WAAYvrF,KAAK2+B,OAAO,GAAGxC,+BAE3BqvD,eAAgBxrF,KAAK2+B,OAAO,GAAGxC,8BAE/BsvD,YAAazrF,KAAK2+B,OAAO,GAAGxC,2BAE5BuvD,WAAY1rF,KAAK2+B,OAAO,GAAGxC,2BAM9B,IAAIwvD,EAGJ3rF,KAAK4rF,kBAAoB,CACtB,CACGv6E,MAAOyb,EAAE,kBACT7tB,GAAI,kBAEP,CACGoS,MAAOyb,EAAE,gBACT7tB,GAAI,uBAIVe,KAAK6rF,kBAAoB,GACzB7rF,KAAKsmF,uBAAyB,GAE9B,IAAIn1C,EAASnxC,KAAKmxC,QAAU,CAAC,EAM7BA,EAAO26C,aAAe,KACX9rF,KAAKkxC,SAAW,IAAIpyC,KAAK4iB,IAC9B,IAAIle,EAAQke,EAAEle,MAOd,OAJIxD,KAAK+wC,UAAU8C,gBAAkBnyB,EAAEoD,SACpCthB,EAAQke,EAAEoD,OAAOthB,MAAQ,IAAMke,EAAEle,OAG7B,CACJvE,GAAIyiB,EAAEziB,GACNoS,MAAO7N,EACPsoB,MAAOpK,EAAEoK,YAASte,EACpB,IAIP2jC,EAAO46C,YAAc,KAClB,IAAIhyB,EAAW/5D,KACXg8C,EAAkBh8C,KAAKg8C,iBAAmB,CAAC,EAE/C,MAAO,CACJ/8C,GAAI,IAAMmE,MAAM40E,MAChBgU,SAAS,EACTC,KAAM,CACH,CAEGlpE,KAAM,QACN9jB,GAAI6jC,EAAIzd,KACRk8B,MAAO,GACPlwC,MAAO2qC,EAAgB32B,MAAQ,MAC/B9c,QAAS,CACN,CACG8I,MAAOyb,EAAE,OACT7tB,GAAI,OAEP,CACGoS,MAAOyb,EAAE,MACT7tB,GAAI,OAGVgC,GAAI,CACDowC,SAAU,SAAU0tC,EAAQmN,GACzB/6C,EAAOg7C,uBAAuBpN,EACjC,IAGN,CAEGh8D,KAAM,QACN9jB,GAAI6jC,EAAInU,MACRy9D,QAAS,CACNnrF,GAAI,CACDorF,aAAc,WACXrsF,KAAKo6E,OAAO,QAAS,KACrBp6E,KAAKssF,QACR,GAEHlrF,KAAM+vC,EAAO26C,gBAEhB7qF,GAAI,CACDowC,SAAU,SAAU0K,GACjB,IAAIwwC,EAAYvsF,KAAK0sB,gBACrBykB,EAAOq7C,YAAYzwC,EAAUwwC,EAChC,IAIN,CACGttF,GAAI6jC,EAAI9W,KACRu1B,MAAO,IACPkrC,MAAO,CACJ,CAAC,EAED,CACGt1C,MAAO,QACPp0B,KAAM,QACN1R,MAAO,WACP9I,QAAS,CACN,CACG8I,MAAOyb,EAAE,YACT7tB,GAAI,YAEP,CACGoS,MAAOyb,EAAE,gBACT7tB,GAAI,gBAEP,CACGoS,MAAOyb,EAAE,YACT7tB,GAAI,YAEP,CACGoS,MAAOyb,EAAE,mBACT7tB,GAAI,gBAEP,CACGoS,MAAOyb,EAAE,MACT7tB,GAAI,UAEP,CACGoS,MAAOyb,EAAE,UACT7tB,GAAI,aAEP,CACGoS,MAAOyb,EAAE,YACT7tB,GAAI,YAEP,CACGoS,MAAOyb,EAAE,gBACT7tB,GAAI,gBAEP,CACGoS,MAAOyb,EAAE,gBACT7tB,GAAI,gBAEP,CACGoS,MAAOyb,EAAE,oBACT7tB,GAAI,oBAEP,CACGoS,MAAOyb,EAAE,sBACT7tB,GAAI,sBAEP,CACGoS,MAAOyb,EAAE,0BACT7tB,GAAI,2BAER0a,OAAOogD,EAAS8xB,mBAClB5qF,GAAI,CACDowC,SAAU,SAAUL,EAAW07C,GAC5B,IACIH,EADgBvsF,KAAK0sB,gBACKA,gBAC9BykB,EAAOw7C,aAAa37C,EAAWu7C,GAC/Bp7C,EAAOE,UACV,IAKN,CACG8F,MAAO,OACPp0B,KAAM,QACN1R,MAAO,OACP9I,QAAS,CACN,CACG8I,MAAOyb,EAAE,UACT7tB,GAAI,UAEP,CACGoS,MAAOyb,EAAE,kBACT7tB,GAAI,aAEP,CACGoS,MAAOyb,EAAE,aACT7tB,GAAI,QAEP,CACGoS,MAAOyb,EAAE,YACT7tB,GAAI,WAEP,CACGoS,MAAOyb,EAAE,mBACT7tB,GAAI,iBAEP,CACGoS,MAAOyb,EAAE,kBACT7tB,GAAI,oBAEP,CACGoS,MAAOyb,EAAE,0BACT7tB,GAAI,gBAEP,CACGoS,MAAOyb,EAAE,yBACT7tB,GAAI,mBAEP,CACGoS,MAAOyb,EAAE,gCACT7tB,GAAI,yBAEP,CACGoS,MAAOyb,EAAE,+BACT7tB,GAAI,4BAEP,CACGoS,MAAOyb,EAAE,iBACT7tB,GAAI,aAEP,CACGoS,MAAOyb,EAAE,iBACT7tB,GAAI,aAEP,CACGoS,MAAOyb,EAAE,mBACT7tB,GAAI,oBAGN0a,OAAOogD,EAAS6xB,mBAChBjyE,OAAOogD,EAAS8xB,mBACpB5qF,GAAI,CACDowC,SAAU,SAAUL,GACjB,IACIu7C,EADgBvsF,KAAK0sB,gBACKA,gBAC9BykB,EAAOw7C,aAAa37C,EAAWu7C,GAC/Bp7C,EAAOE,UACV,IAIN,CACG8F,MAAO,SACPp0B,KAAM,QACN1R,MAAO,SACP9I,QAAS,CACN,CACG8I,MAAOyb,EAAE,KACT7tB,GAAI,UAEP,CACGoS,MAAOyb,EAAE,KACT7tB,GAAI,aAEP,CACGoS,MAAOyb,EAAE,KACT7tB,GAAI,QAEP,CACGoS,MAAOyb,EAAE,KACT7tB,GAAI,WAEP,CACGoS,MAAOyb,EAAE,KACT7tB,GAAI,iBAEP,CACGoS,MAAOyb,EAAE,KACT7tB,GAAI,qBAGN0a,OAAOogD,EAAS6xB,mBAChBjyE,OAAOogD,EAAS8xB,mBACpB5qF,GAAI,CACDowC,SAAU,SAAUL,GACjB,IACIu7C,EADgBvsF,KAAK0sB,gBACKA,gBAC9BykB,EAAOw7C,aAAa37C,EAAWu7C,GAC/Bp7C,EAAOE,UACV,IAIN,CACG8F,MAAO,OACPp0B,KAAM,QACN1R,MAAO,SACP9I,QAAS,CACN,CACG8I,MAAOyb,EAAE,UACT7tB,GAAI,UAEP,CACGoS,MAAOyb,EAAE,kBACT7tB,GAAI,aAEP,CACGoS,MAAOyb,EAAE,gBACT7tB,GAAI,gBAEP,CACGoS,MAAOyb,EAAE,oBACT7tB,GAAI,qBAGN0a,OAAOogD,EAAS6xB,mBAChBjyE,OAAOogD,EAAS8xB,mBACpB5qF,GAAI,CACDowC,SAAU,SAAUL,EAAW07C,GAC5B,IACIH,EADgBvsF,KAAK0sB,gBACKA,gBAC9BykB,EAAOw7C,aAAa37C,EAAWu7C,GAC/Bp7C,EAAOE,UACV,IAIN,CACG8F,MAAO,UACPp0B,KAAM,QACN1R,MAAO,SACP9I,QAAS,CACN,CACG8I,MAAOyb,EAAE,UACT7tB,GAAI,UAEP,CACGoS,MAAOyb,EAAE,kBACT7tB,GAAI,cAGN0a,OAAOogD,EAAS6xB,mBAChBjyE,OAAOogD,EAAS8xB,mBACpB5qF,GAAI,CACDowC,SAAU,SAAUL,GACjB,IACIu7C,EADgBvsF,KAAK0sB,gBACKA,gBAC9BykB,EAAOw7C,aAAa37C,EAAWu7C,GAC/Bp7C,EAAOE,UACV,IAIN,CACG8F,MAAO,OACPp0B,KAAM,QACN1R,MAAO,kBACP9I,QAAS,CACN,CACG8I,MAAOyb,EAAE,mBACT7tB,GAAI,mBAEP,CACGoS,MAAOyb,EAAE,uBACT7tB,GAAI,uBAEP,CACGoS,MAAOyb,EAAE,yBACT7tB,GAAI,wBAEP,CACGoS,MAAOyb,EAAE,iCACT7tB,GAAI,4BAEP,CACGoS,MAAOyb,EAAE,UACT7tB,GAAI,UAEP,CACGoS,MAAOyb,EAAE,kBACT7tB,GAAI,cAGN0a,OAAOogD,EAAS6xB,mBAChBjyE,OAAOogD,EAAS8xB,mBACpB5qF,GAAI,CACDowC,SAAU,SAAUL,GACjB,IACIu7C,EADgBvsF,KAAK0sB,gBACKA,gBAC9BykB,EAAOw7C,aAAa37C,EAAWu7C,GAC/Bp7C,EAAOE,UACV,IAIN,CACG8F,MAAO,SACPp0B,KAAM,QACN1R,MAAO,WACP9I,QAAS,CACN,CACG8I,MAAOyb,EAAE,YACT7tB,GAAI,YAEP,CACGoS,MAAOyb,EAAE,mBACT7tB,GAAI,gBAEP,CACGoS,MAAOyb,EAAE,MACT7tB,GAAI,UAEP,CACGoS,MAAOyb,EAAE,UACT7tB,GAAI,cAGN0a,OAAOogD,EAAS6xB,mBAChBjyE,OAAOogD,EAAS8xB,mBACpB5qF,GAAI,CACDowC,SAAU,SAAUL,GACjB,IACIu7C,EADgBvsF,KAAK0sB,gBACKA,gBAC9BykB,EAAOw7C,aAAa37C,EAAWu7C,GAC/Bp7C,EAAOE,UACV,IAIN,CACG8F,MAAO,QACPp0B,KAAM,QACN1R,MAAO,WACP9I,QAAS,CACN,CACG8I,MAAOyb,EAAE,YACT7tB,GAAI,YAEP,CACGoS,MAAOyb,EAAE,mBACT7tB,GAAI,gBAEP,CACGoS,MAAOyb,EAAE,MACT7tB,GAAI,UAEP,CACGoS,MAAOyb,EAAE,UACT7tB,GAAI,cAGN0a,OAAOogD,EAAS6xB,mBAChBjyE,OAAOogD,EAAS8xB,mBACpB5qF,GAAI,CACDowC,SAAU,SAAUL,GACjB,IACIu7C,EADgBvsF,KAAK0sB,gBACKA,gBAC9BykB,EAAOw7C,aAAa37C,EAAWu7C,GAC/Bp7C,EAAOE,UACV,MAMZ,CACGpyC,GAAI6jC,EAAIooD,WACRc,SAAS,EACTS,MAAO,CACJ,CACGt1C,MAAO,SAIV,CACGl4C,GAAI6jC,EAAIqoD,WAERh0C,MAAO,QACPp0B,KAAM,QACNxa,QAAS,GACTtH,GAAI,CACDowC,SAAUF,EAAOE,WAKvB,CACGpyC,GAAI6jC,EAAIsoD,gBACRj0C,MAAO,aACPovC,KAAM,CACH,CACGtnF,GAAI6jC,EAAIuoD,qBACRtoE,KAAM,QACNxa,QAAS,GACTmvD,YAAa5qC,EAAE,kBACf7rB,GAAI,CACDowC,SAAU,SAAUhgC,GACjB,IACIk7E,EADgBvsF,KAAK0sB,gBAErBA,gBACAA,gBACJykB,EAAOy7C,wBACJv7E,EACAk7E,GAGHp7C,EAAOE,UACV,IAGN,CACGpyC,GAAI6jC,EAAIwoD,qBACRvoE,KAAM,QACNxa,QAAS,GACTmvD,YAAa5qC,EAAE,kBACf7rB,GAAI,CACDowC,SAAUF,EAAOE,aAO7B,CACGpyC,GAAI6jC,EAAIyoD,WACRp0C,MAAO,aACPp0B,KAAM,QACNxa,QAAS,GACTtH,GAAI,CACDowC,SAAUF,EAAOE,WAKvB,CACGpyC,GAAI6jC,EAAI0oD,eACRr0C,MAAO,iBACPp0B,KAAM,aACNxa,QAAS,GACTtH,GAAI,CACDowC,SAAUF,EAAOE,WAKvB,CAEG8F,MAAO,OACPl4C,GAAI6jC,EAAI4oD,WACR3oE,KAAM,aACN9hB,GAAI,CACDowC,SAAU,WACPF,EAAOE,UACV,IAIN,CACG8F,MAAO,SACPp0B,KAAM,OACN8pE,SAAUzpF,MAAMwW,MAAMkzE,SACtB7rF,GAAI,CACD8rF,gBAAiB,WACV/sF,KAAK6sF,YAAY17C,EAAOE,UAC/B,IAIN,CACG8F,MAAO,OACPl4C,GAAI6jC,EAAI2oD,YACR1oE,KAAM,QACNxa,QAAS,GACTtH,GAAI,CACDowC,SAAU,WACPF,EAAOE,UACV,IAIN,CACG8F,MAAO,UACPp0B,KAAM,WACN9hB,GAAI,CACDowC,SAAU,WACPF,EAAOE,UACV,IAIN,CACG8F,MAAO,OACPp0B,KAAM,QACNxa,QAASvI,KAAKO,GAAG6E,QAAQtC,WAAWhE,KAAK0d,IAC/B,CACJvd,GAAIud,EAAE3Z,SACNwO,MAAOmL,EAAE3Z,aAGf5B,GAAI,CACDowC,SAAU,WACPF,EAAOE,UACV,IAIN,CACG8F,MAAO,SACPp0B,KAAM,OACN9hB,GAAI,CACD8rF,gBAAiB,WACd57C,EAAOE,UACV,IAIN,CACG8F,MAAO,QACPp0B,KAAM,OACN9hB,GAAI,CACD8rF,gBAAiB,WACd57C,EAAOE,UACV,MAKZ,CACGtuB,KAAM,SACNgK,IAAK,gBACLhP,KAAM,aACNhV,KAAM,OACNikF,WAAW,EACXhgE,MAAO,WACJ,IAEIigE,EAFYjtF,KAAKktF,cAEKvgE,MAAM3sB,KAAK0sB,iBAErCykB,EAAO85C,aAAagC,EAAY,EACnC,GAEH,CACGlqE,KAAM,SACNgK,IAAK,eACLhP,KAAM,cACNhV,KAAM,OACNikF,WAAW,EACXhgE,MAAO,WACJ,IAAIu/D,EAAYvsF,KAAK0sB,gBAErBykB,EAAOg8C,gBAAgBZ,EAC1B,IAGR,EAGJp7C,EAAOi8C,eAAiB,KACd,CACJrqE,KAAM,SACN9jB,GAAI6jC,EAAImoD,aACRl+D,IAAK,gBACLhkB,KAAM,OACNvF,MAAOspB,EAAE,gBACTE,MAAO,KACJmkB,EAAO85C,cAAc,IAK9B95C,EAAO85C,aAAe,CAACt+D,EAAOgmB,KAC3B,IAAI4e,EACAqO,EAAKzuB,EAAO46C,cAEZsB,EAAY7gE,GAAGsW,EAAIkoD,YAUvB,OATIqC,IACD97B,EAAS87B,EAAUxgE,QAAQ+yC,EAAIjzC,GAE/BwkB,EAAOm8C,qBAGH36C,GAASxB,EAAOq7C,YAAY75C,EAASnmB,GAAG+kC,IAAS,IAGjDA,CAAM,EAGhBpgB,EAAOg8C,gBAAkB,SAAUZ,GAChB//D,GAAGsW,EAAIkoD,YAEb79D,WAAWo/D,GAErBp7C,EAAOm8C,qBAEPn8C,EAAOE,UACV,EAEAF,EAAOm8C,mBAAqB,WACpB9gE,GAAGsW,EAAIkoD,cAGRx+D,GAAGsW,EAAIkoD,YAAYR,gBAAgB5oF,OAAS,GAC7C4qB,GAAGsW,EAAIkoD,YAAY9N,OACnB1wD,GAAGsW,EAAImoD,cAAcJ,SAIrBr+D,GAAGsW,EAAIkoD,YAAYH,OACnBr+D,GAAGsW,EAAImoD,cAAc/N,QAE3B,EAEA/rC,EAAOg7C,uBAAyB,CAACjjF,EAAKqkF,KAEnCvtF,KAAKg8C,gBAAgB32B,KAAOnc,EAGXsjB,GAAGsW,EAAIkoD,YAAYR,gBACzBxkF,SAASC,IACbA,EAAEumB,IAAMvmB,EAAEumB,GAAGsW,EAAIzd,OAAOpf,EAAEumB,GAAGsW,EAAIzd,MAAM6O,SAAShrB,EAAI,IAGtDqkF,GAAcp8C,EAAOE,UAAU,EAGvCF,EAAOq7C,YAAc,CAACzwC,EAAUwwC,EAAWgB,KACxC,IAAKvtF,KAAKkxC,QAAS,OAEnB,IAAIviB,EAAQ3uB,KAAKkxC,QAAQvuC,QAAQ+e,GAAMA,EAAEziB,IAAM88C,IAAU,GACzD,IAAKptB,EAAO,OAGZg9D,EAAYh9D,EAAMlsB,IACF,eAAZksB,EAAM1vB,GAAqB0sF,EAAY,QAErB,YAAbA,GAAwC,YAAbA,EACjCA,EAAY,SACO,WAAbh9D,EAAMlsB,MAAkBkpF,EAAY,UAC7C,IAAI3B,EACDhqF,KAAKixC,aAAatuC,QAAQ+e,GAChBA,EAAEziB,IAAM0vB,EAAM1vB,KACrB2C,OAAS,EACXooF,IAED2B,EAAY,SAEfY,EAAU//D,GAAGsW,EAAI9W,MAAMwhE,UAAU7B,GACjCY,EAAU//D,GAAGsW,EAAIooD,YAAYsC,UAAU7B,GAEvC,IAAIpjF,EAAU,GACVklF,EAAU,GA6Bd,GA1BgB,eAAZ9+D,EAAM1vB,IAAuBe,KAAKqzC,QACnCo6C,EAAUztF,KAAKqjB,SAASC,GAAMA,EAAEwoB,gBAAgB9rC,KAAKqzC,WAG/C22C,IACNyD,EAAUztF,KAAKqjB,SAASC,IAEjBtjB,KAAKqzC,QAAUrzC,KAAKqzC,QAAQp0C,GAAK,KAAOqkB,EAAErkB,IAC3CqkB,EAAEwoB,gBAAgBnd,EAAMtB,mBAKjCogE,EAAQznF,SAASsd,IACd/a,EAAQnB,KAAK,CACVnI,GAAIqkB,EAAErkB,GACNoS,MAAOiS,EAAE9f,OACV,IAEL+oF,EACI//D,GAAGsW,EAAIooD,YACP1+D,GAAGsW,EAAIqoD,YACP/Q,OAAO,UAAW7xE,GACtBgkF,EAAU//D,GAAGsW,EAAIooD,YAAY1+D,GAAGsW,EAAIqoD,YAAYv0E,UAG/B,QAAb+X,EAAMlsB,IAAe,CACtB,IAAIgpF,EAAc98D,EAAMhN,SAASpZ,QAAQzJ,KAAI,SAAUkxD,GACpD,MAAO,CACJ/wD,GAAI+wD,EAAE/wD,GACNoS,MAAO2+C,EAAEvsD,KAEf,IAEA8oF,EACI//D,GAAGsW,EAAIooD,YACP1+D,GAAGsW,EAAI2oD,aACPrR,OAAO,UAAWqR,GACtBc,EAAU//D,GAAGsW,EAAIooD,YAAY1+D,GAAGsW,EAAI2oD,aAAa70E,SACpD,KAEsB,QAAb+X,EAAMlsB,MACZ8pF,EACI//D,GAAGsW,EAAIooD,YACP1+D,GAAGsW,EAAI4oD,YACPtR,OAAO,SAAUzrD,EAAMo0B,aAC3BwpC,EAAU//D,GAAGsW,EAAIooD,YAAY1+D,GAAGsW,EAAI4oD,YAAY90E,WAGnD,IACG82E,EAAanB,EAAU//D,GAAGsW,EAAI9W,MAAM2hE,cACpCC,EAAgBrB,EACZ//D,GAAGsW,EAAI9W,MACP49D,UAAU,CAAE3qF,GAAIyuF,IACvB,GAAIE,GAAiBA,EAAcC,QAAS,CACzC,IAAIC,GAAcF,EAAcC,UAAUn8E,OAAOtQ,MAAQ,IAAI,GACzD0sF,GACDF,EAAc15D,SAAS45D,EAAW7uF,GAWxC,CAEKsuF,GAAcp8C,EAAOE,UAAU,EAGvCF,EAAOw7C,aAAe,CAAC3gE,EAAMugE,EAAW5iF,GAAS,KAC9C,OAAQqiB,GACL,IAAK,WACL,IAAK,eACL,IAAK,SACL,IAAK,YAEe,SAAb2/D,GACDY,EAAU//D,GAAGsW,EAAIooD,YAAYsC,UAAU,UAI1C,MAEH,IAAK,kBACL,IAAK,sBACL,IAAK,uBACL,IAAK,2BACL,IAAK,eACL,IAAK,mBACL,IAAK,eACL,IAAK,kBACL,IAAK,wBACL,IAAK,2BACL,IAAK,WACL,IAAK,eACL,IAAK,kBAEFjB,EAAU//D,GAAGsW,EAAIooD,YAAYsC,UAAU,SACvCr8C,EAAOE,WACP,MAEH,IAAK,YACL,IAAK,YAEFk7C,EAAU//D,GAAGsW,EAAIooD,YAAYsC,UAAU,UACvC,MAEH,IAAK,iBACL,IAAK,qBAEF,IAAIjlF,EAAU,GAGdvI,KAAKqjB,SACDC,GAAsB,MAAhBtjB,KAAKqzC,SAAmB/vB,EAAErkB,IAAMe,KAAKqzC,QAAQp0C,KACrD+G,SAASsd,IACR/a,EAAQnB,KAAK,CACVnI,GAAIqkB,EAAErkB,GACNoS,MAAOiS,EAAE9f,OACV,IAGL+oF,EACI//D,GAAGsW,EAAIooD,YACP1+D,GAAGsW,EAAIuoD,sBACPjR,OAAO,UAAW7xE,GACtBgkF,EACI//D,GAAGsW,EAAIooD,YACP1+D,GAAGsW,EAAIuoD,sBACPz0E,UAGJ21E,EAAU//D,GAAGsW,EAAIooD,YAAYsC,UAAU,cACvC,MAEH,IAAK,gBACL,IAAK,oBACFjB,EACI//D,GAAGsW,EAAIooD,YACP1+D,GAAGsW,EAAIyoD,YACPnR,OAAO,UAAWp6E,KAAKsmF,wBAC3BiG,EAAU//D,GAAGsW,EAAIooD,YAAY1+D,GAAGsW,EAAIyoD,YAAY30E,UAGhD21E,EAAU//D,GAAGsW,EAAIooD,YAAYsC,UAAU,cACvC,MAEH,IAAK,qBACL,IAAK,yBAA0B,CAC5B,IAKIvD,EALA8D,EAAY,GAMbhyC,EAAWwwC,EAAU//D,GAAGsW,EAAInU,OAAO+sB,WACtC,GAAgB,eAAZK,GAA6B/7C,KAAKqzC,QACnC42C,EAAejqF,KAAKqzC,QAAQp0C,OACxB,CACJ,IAAI0vB,EAAQ3uB,KAAKkxC,QAAQvuC,QAAQ+e,GAAMA,EAAEziB,IAAM88C,IAAU,GACrDptB,IAAOs7D,EAAet7D,EAAMhN,SAASC,WAC5C,CAEI5hB,KAAKguF,cAAgB/D,GACtBjqF,KAAKguF,aACDxtE,iBACGkI,GACEA,EAAGpB,YAAcoB,EAAGpB,WAAWroB,IAAMgrF,IAE1CjkF,SAAS0iB,IACPqlE,EAAU3mF,KAAK,CACZnI,GAAIypB,EAAGzpB,GACPoS,MAAOqX,EAAGllB,OACX,IAIX+oF,EACI//D,GAAGsW,EAAIooD,YACP1+D,GAAGsW,EAAI0oD,gBACPpR,OAAO,UAAW2T,GACtBxB,EAAU//D,GAAGsW,EAAIooD,YAAY1+D,GAAGsW,EAAI0oD,gBAAgB50E,UAGpD21E,EAAU//D,GAAGsW,EAAIooD,YAAYsC,UAAU,kBACvC,KACH,CAEA,QAEGjB,EAAU//D,GAAGsW,EAAIooD,YAAYsC,UAAU7B,GAEnChiF,GAAQwnC,EAAOE,WAGzB,EAGHF,EAAOy7C,wBAA0B,CAACv7E,EAAOk7E,KAEtC,IAAIhkF,EAAU,GAEV6hF,EAAQpqF,KAAKqjB,SAASC,GAChBA,EAAErkB,IAAMoS,IACf,GACC+4E,IACDA,EAAM9/D,QAAQ5I,IACHA,EAAE2kB,eACVrgC,SAASsd,IACT/a,EAAQnB,KAAK,CACVnI,GAAIqkB,EAAErkB,GACNoS,MAAOiS,EAAEwB,OAAOthB,MAAQ,IAAM8f,EAAE9f,OACjC,IAGL+oF,EACI//D,GAAGsW,EAAIooD,YACP1+D,GAAGsW,EAAIwoD,sBACPlR,OAAO,UAAW7xE,GACtBgkF,EAAU//D,GAAGsW,EAAIooD,YAAY1+D,GAAGsW,EAAIwoD,sBAAsB10E,UAC7D,EAKHu6B,EAAOE,SAAW,KACVrxC,KAAK4mF,kBAEPz1C,EAAOuK,WAEPr6C,QAAQqF,KAAK,oDACbyqC,EAAOC,UAAUC,WACjBrxC,KAAKuB,KAAK,YAGN,GAGV4vC,EAAO88C,cAAgB,KACpBjuF,KAAK4mF,iBAAkB,CAAI,EAG9Bz1C,EAAO+8C,gBAAkB,KACtBluF,KAAK4mF,iBAAkB,CAAK,EAkB/Bz1C,EAAOuK,SAAW,KACf,IAAIM,EAAkB,CACnB32B,KAAM,MACNzL,MAAO,IAGV,IAAIyzE,EAAY7gE,GAAGsW,EAAIkoD,YAyEvB,OAxEIqC,GACDA,EAAU7C,gBAAgBxkF,SAAQ,CAACumF,EAAW5/D,KAC9B,GAATA,IACDqvB,EAAgB32B,KAAOknE,EAAU//D,GAAGsW,EAAIzd,MAAMq2B,YAGjD,IAAIyyC,EAAa5B,EAAU//D,GAAGsW,EAAInU,OAClC,GAAKw/D,EAAL,CAGA,IAAIx7C,EAAUw7C,EAAWzyC,WACzB,GAAK/I,EAAL,CAGA,IAAI7mB,EACAsiE,EAAc7B,EACd//D,GAAGsW,EAAInU,OACP0/D,WACA38E,OAAO5D,KAAK1M,KAAKuB,QAAQ2xC,GAAQA,EAAIr1C,IAAM0zC,IAAS,GACpDy7C,IAAatiE,EAAQsiE,EAAYtiE,YAASte,GAG9C,IAAIwe,EAAO,KACR0hE,EAAanB,EAAU//D,GAAGsW,EAAI9W,MAAM2hE,cACpCC,EAAgBrB,EACZ//D,GAAGsW,EAAI9W,MACP49D,UAAU,CAAE3qF,GAAIyuF,IACnBE,GAAiBA,EAAclyC,WAChC1vB,EAAO4hE,EAAclyC,YAGxB,IAAIrqC,EAAQ,KACTi9E,EAAc/B,EAAU//D,GAAGsW,EAAIooD,YAAYyC,cAC3CY,EAAsBhC,EAClB//D,GAAGsW,EAAIooD,YACPtB,UAAU,CAAE3qF,GAAIqvF,IACvB,GAAIC,GAAuBA,EAAoB7yC,SAC5CrqC,EAAQk9E,EAAoB7yC,gBACxB,GACJ6yC,GACAA,EAAoB/D,gBACrB,CACC,IAAInrB,EAAO,GACXkvB,EAAoB/D,gBAAgBxkF,SAAS21B,IAC1C0jC,EAAKj4D,KAAKolB,GAAGmP,GAAS+f,WAAW,IAEpCrqC,EAAQguD,EAAKj2D,KAAK,IACrB,CAGA,GAAIiI,aAAiB0G,KAAM,CACxB,IAAIy2E,EAAYxuF,KAAKkxC,QAAQvuC,QACzB+e,GAAMA,EAAEziB,IAAM0zC,IAChB,GAECthC,EADCm9E,EACOA,EAAU3rC,YAAYxxC,GAEtBA,EAAMqI,aAEpB,CAEAsiC,EAAgBpiC,MAAMxS,KAAK,CACxB0kB,MAAOA,QAASte,EAChB/K,IAAKkwC,EACL3mB,KAAMA,EACN3a,MAAOA,GAtDU,CAJG,CA2DrB,IAIRrR,KAAKg8C,gBAAkBA,EAEhBh8C,KAAKg8C,eAAe,EAI9Bh8C,KAAK4/D,GAAK,CACP3gE,GAAI6jC,EAAI0S,UACR+wC,KAAM,CACH,CACGxjE,KAAM,OACN9jB,GAAI6jC,EAAIkoD,WACRvE,QAAQ,EACRrwE,SAAU,IAEb+6B,EAAOi8C,kBAGhB,CAGA,IAAA9sF,CAAKiI,EAAU,CAAC,GAIb,IAAK,IAAI26B,KAHTnjC,MAAMO,KAAKiI,GAGGvI,KAAKmxC,OAAOC,UACvBpxC,KAAKmxC,OAAOC,UAAUlO,GAAK36B,EAAQ26B,IAAMljC,KAAKmxC,OAAOC,UAAUlO,GAG9D36B,EAAQsrC,iBACT7zC,KAAK+wC,UAAU8C,eAAiBtrC,EAAQsrC,gBAEvCtrC,EAAQusC,eACT90C,KAAK6rF,kBAAoB,CACtB,CACGx6E,MAAOyb,EAAE,iBACT7tB,GAAI,iBAEP,CACGoS,MAAOyb,EAAE,aACT7tB,GAAI,sBAGVe,KAAKsmF,uBAAyB/9E,EAAQ8hF,aAE5C,CAEA,QAAAn2D,CAASvS,GACNA,EAAWA,GAAY,CAAC,EAExB5hB,MAAMm0B,SAASvS,GAEf,IAAImhB,EAAM9iC,KAAK8iC,IACX2rD,EAAQzuF,KAAKmxC,OAGjBs9C,EAAMR,gBAEN,IAAIjyC,EAAkBh8C,KAAKO,GAAGma,UAAUiH,GACxCq6B,EAAgBpiC,MAAQoiC,EAAgBpiC,OAAS,GAGjD,IAAIyzE,EAAY7gE,GAAGsW,EAAIkoD,YACnBqC,GAAWjqF,MAAMw8D,GAAG,GAAIytB,GAGQ,GAAhCrxC,EAAgBpiC,MAAMhY,QACvB6sF,EAAMnB,qBAGTtxC,EAAgBpiC,MAAM5T,SAAS0b,IAC5B,IAAI6vC,EAASk9B,EAAMxD,eAChBsB,EAAY//D,GAAG+kC,GAElB,GAAiB,MAAbg7B,EAAJ,CAEA,IAAI59D,EAAQ3uB,KAAKkxC,QAAQvuC,QAAQ+rF,GAAQA,EAAIzvF,IAAMyiB,EAAEjf,MAAK,GAG1D8pF,EAAU//D,GAAGsW,EAAIzd,MAAM+0D,OAAO,QAASp+B,EAAgB32B,MACvDknE,EAAU//D,GAAGsW,EAAIzd,MAAMzO,UAGvB21E,EAAU//D,GAAGsW,EAAInU,OAAOyrD,OAAO,QAAS14D,EAAEjf,KAC1C8pF,EAAU//D,GAAGsW,EAAInU,OAAO/X,UACxB63E,EAAMjC,YAAY9qE,EAAEjf,IAAK8pF,GAAW,GAGpC,IAAImB,EAAanB,EAAU//D,GAAGsW,EAAI9W,MAAM2hE,cACrCC,EAAgBrB,EACZ//D,GAAGsW,EAAI9W,MACP49D,UAAU,CAAE3qF,GAAIyuF,IACnBE,GAAiBA,EAAc15D,WAChC05D,EAAcxT,OAAO,QAAS14D,EAAEsK,MAChC4hE,EAAch3E,WAIjB21E,EAAUoC,aACVF,EAAM9B,aAAajrE,EAAEsK,KAAMugE,GAC3BA,EAAUqC,eAIV,IAAIN,EAAc/B,EAAU//D,GAAGsW,EAAIooD,YAAYyC,cAC5CY,EAAsBhC,EAClB//D,GAAGsW,EAAIooD,YACPtB,UAAU,CAAE3qF,GAAIqvF,IACvB,GAAIC,GAAuBA,EAAoBr6D,SAGzCvF,GACa,QAAbA,EAAMlsB,KACNif,EAAErQ,QACS,QAAVqQ,EAAEsK,MACU,WAAVtK,EAAEsK,MACQ,iBAAVtK,EAAEsK,MACQ,oBAAVtK,EAAEsK,MAELuiE,EAAoBnU,OAAO,QAAS,IAAIriE,KAAK2J,EAAErQ,QAE/Ck9E,EAAoBnU,OAAO,QAAS14D,EAAErQ,OAGzCk9E,EAAoB33E,eAChB,GACJ23E,GACAA,EAAoB/D,gBACrB,CACC,IAAInrB,GAAQ39C,EAAErQ,OAAS,IAAIqS,MAAM,KAC7BiJ,EAAQ,EACZ4hE,EAAoB/D,gBAAgBxkF,SAAS21B,IAC1CnP,GAAGmP,GAASgzD,aACZniE,GAAGmP,GAASzH,SAASmrC,EAAK1yC,IACb,GAATA,GACD8hE,EAAM7B,wBAAwBvtB,EAAK1yC,GAAQ4/D,GAE9C//D,GAAGmP,GAASizD,eAEZjiE,GAAO,GAEb,CAEIgC,GAAsB,QAAbA,EAAMlsB,MAChB8pF,EAAUoC,aACVF,EAAM9B,aAAajrE,EAAEsK,KAAMugE,GAC3BA,EAAUoC,aAxEgB,CAyE7B,IAIHF,EAAMP,iBACT,CASA,UAAAvyC,GAOG,OANK37C,KAAK6uF,sBACP7uF,KAAK6uF,oBAAsB7uF,KAAKO,GAAGyzB,iBAChC,GAAGh0B,KAAK8iC,IAAI0S,yBAIXx1C,KAAK6uF,oBAAoB/L,oBAAoB9iF,KAAK07C,WAC5D,iECpwCH,MAAMozC,EAAa,EAAQ,OAE3B,IAAIhiE,EAAI,KAER,MAAMiiE,UAAmB,IACtB,WAAAjvF,CAAYq8B,EAAQ57B,GACjBR,MAAMo8B,EAAQ,CACXxnB,KAAM,GAAGwnB,mBACT6yD,OAAQ,GAAG7yD,qBACXxN,MAAO,GAAGwN,sBAGbn8B,KAAKm8B,OAASA,EAEdn8B,KAAKqzC,QAAU,KAIfrzC,KAAKivF,gBAAkB,KAKvBjvF,KAAKO,GAAKA,EAELusB,IACFA,EAAI,IAAIjkB,IACE7I,KAAKO,GAAGgD,aAAaC,SAASqF,GAG9C,CAOA,MAAAqmF,GACG,MAAMC,EAAOnvF,KAEb,MAAO,CACJumF,KAAM,CACH,CACGxjE,KAAM,SACNipE,SAAS,EACTC,KAAM,CACH,CAEGlpE,KAAM,QACNw+B,MAAO,GACP/9C,MAAOspB,EAAE,QAEZ,CAEG/J,KAAM,QACN9jB,GAAIe,KAAK8iC,IAAInU,MACbpmB,QAASvI,KAAK8rF,cAAa,GAC3B7qF,GAAI,CACDowC,SAAU5e,eAAgBspB,GACvB,MAAMqzC,EAAYpvF,KAAK0sB,sBAEjByiE,EAAK3C,YAAYzwC,EAAUqzC,EACpC,IAGN,CAEGrsE,KAAM,QACNw+B,MAAO,GACP/9C,MAAOspB,EAAE,OAEZ,CACG/J,KAAM,YACN1R,MAAO,SACP0+C,OAAQ,GACRs/B,SAAU,IACV9mF,QAAS,CACN,CAAEtJ,GAAI,SAAUoS,MAAOyb,EAAE,WACzB,CAAE7tB,GAAI,UAAWoS,MAAOyb,EAAE,aAE7B25D,OAC4B,MAAzBzmF,KAAKsvF,mBACJtvF,KAAKsvF,iBAAiB1tF,OAC1BX,GAAI,CACDowC,SAAU,SAAUnoC,GACjB,MAAMkmF,EAAYpvF,KAAK0sB,gBAEvByiE,EAAKI,0BACFH,EACO,WAAPlmF,EAEN,IAIN,CAAC,EAED,CACGu9E,QAAQ,GAEX,CAEG1jE,KAAM,SACNgK,IAAK,eACLhP,KAAM,cACNhV,KAAM,OACNikF,WAAW,EAEXhgE,MAAO,WACJ,MAAMu/D,EAAYvsF,KAAK0sB,gBAAgBA,gBAEvCyiE,EAAKK,WAAWjD,EACnB,MAMlB,CAOA,EAAA3sB,GAEG,MAAO,CACJ2mB,KAAM,CACH,CACGxjE,KAAM,OACN9jB,GAAIe,KAAK8iC,IAAInuB,KACb8xE,QAAQ,EACRD,YAAY,EACZpwE,SAAU,IAEb,CACG2M,KAAM,SACN9jB,GAAIe,KAAK8iC,IAAIksD,OACbjxE,KAAM,aACNhV,KAAM,aACNvF,MAAOspB,EAAE,qBACTE,MAAO,KACJhtB,KAAKyvF,SAAS,IAK7B,CAEA,IAAAnvF,CAAKC,GACF,MAAMmvF,EAAQljE,GAAGxsB,KAAK8iC,IAAInuB,MAG1B,OAFI+6E,GAAOnvF,EAAG0Q,MAAMsqE,OAAOmU,EAAOnvF,EAAG0Q,MAAM0+E,aAEpCnuF,QAAQ9B,SAClB,CAUA,OAAA+vF,CAAQ9iE,GACL,MAAM+iE,EAAQljE,GAAGxsB,KAAK8iC,IAAInuB,MAG1B,GAFqB3U,KAAK8rF,cAAa,GAEtBlqF,OAAS,EAAG,OAE7B,MAAMg+D,EAAK5/D,KAAKkvF,SACV39B,EAASm+B,EAAM7iE,QAAQ+yC,EAAIjzC,GAIjC,OAFA3sB,KAAK4vF,aAEEr+B,CACV,CAaA,YAAAu6B,CAAa+D,GACV,IAAItnF,GAAWvI,KAAKqzC,QAAQ/oB,UAAY,IAAIxrB,KAAK4iB,IACvC,CACJziB,GAAIyiB,EAAEziB,GACNoS,MAAOqQ,EAAEle,UAsBf,OAlBIqsF,GACarjE,GAAGxsB,KAAK8iC,IAAInuB,MAEpB61E,gBAAgBxkF,SAASumF,IAE5B,IAAKA,IAAcA,EAAU//D,GAAI,OAEjC,MAAM2hE,EAAa5B,EAAU//D,GAAGxsB,KAAK8iC,IAAInU,OAEzC,IAAKw/D,EAAY,OAEjB,MAAMx7C,EAAUw7C,EAAWzyC,WAEtB/I,IAELpqC,EAAUA,EAAQ5F,QAAQ2xC,GAAQA,EAAIr1C,IAAM0zC,IAAQ,IAGnDpqC,CACV,CAgBA,QAAAmzC,GACG,MAAMx3C,EAAS,GACTwrF,EAAQljE,GAAGxsB,KAAK8iC,IAAInuB,MAkE1B,OAhEI+6E,GACDA,EAAMlF,gBAAgBxkF,SAAS8pF,IAC5B,MAAMV,EAAYU,EAAetF,gBAAgB,GAGjD,IAAK4E,IAAcA,EAAU5iE,GAAI,OAEjC,MAAM2hE,EAAaiB,EAAU5iE,GAAGxsB,KAAK8iC,IAAInU,OAEzC,IAAKw/D,EAAY,OAEjB,MAAMx7C,EAAUw7C,EAAWzyC,WAE3B,IAAK/I,EAAS,OAEd,IAAIo9C,EAAmBX,EAAU5E,gBAAgB,GACjDuF,EAAmB/vF,KAAKgwF,kBAAkBD,GAE1C,MAAME,EAAoBb,EAAU5E,gBAAgB,GAEpD,IAAKuF,IAAqBE,EAAmB,OAE7C,MAAMvlD,EAAY1qC,KAAKqzC,QAAQzrB,UAAU+qB,GACnCzpC,EAAM,CACTypC,QAASA,GAIZ,GAAIo9C,GAAoBA,EAAiBG,YACtC,GACqB,kBAAlBxlD,EAAUjoC,KACQ,SAAlBioC,EAAUjoC,IAEVyG,EAAImI,MAAQq5B,EAAUgR,SAASq0C,QAC7B,GACgB,SAAlBrlD,EAAUjoC,KACQ,aAAlBioC,EAAUjoC,IAKV,GAAmC,IAFhCstF,EAAiBvF,gBAAgB,IAAMuF,GAErBr0C,WAClBxyC,EAAImI,MAAQ,sBACV,CACF,MAAMq6E,EACHqE,EAAiBvF,gBAAgB,IAAMuF,EAE1C7mF,EAAImI,MAAQq5B,EAAUgR,SAASgwC,EAClC,MAGExiF,EAAImI,MAAQq5B,EAAUgR,SAASq0C,QAG9BE,GAAqBA,EAAkBC,cAC7ChnF,EAAIinF,gBAAiB,EACrBjnF,EAAImI,MAAQ4+E,EAAkBv0C,YAIjCx3C,EAAOkD,KAAK8B,EAAI,IAIfhF,CACV,CAOA,UAAAqwD,CAAWzvC,GACR9kB,KAAKqzC,QAAUvuB,EAEf9kB,KAAKs8B,SAAWt8B,KAAKO,GAAGk5B,eAAe,CAAC,GACxCz5B,KAAKivF,gBAAkB,IAAIH,EACxB,CACGntE,SAAU,CACPmyC,WAAW,EACXE,WAAY,IAGlBh0D,KAAKs8B,UAERt8B,KAAKivF,gBAAgB16B,WAAWzvC,GAEhC9kB,KAAKk0B,SAAS,KACjB,CASA,UAAAs7D,CAAWjD,GACM//D,GAAGxsB,KAAK8iC,IAAInuB,MAEpBwY,WAAWo/D,GACjBvsF,KAAK4vF,YACR,CAYA,iBAAMpD,CAAYzwC,EAAUqzC,GACzB,MAAMzgE,EAAQ3uB,KAAKqzC,QAAQzrB,UAAUm0B,GAErC,IAAKptB,EASF,YARA3uB,KAAKO,GAAGoJ,OAAO2sB,QACZ,IAAIh3B,MAAM,+BAA+By8C,MACzC,CACG76C,QAAS,kDACT0tB,QAASmtB,IAOlB,MAKGq0C,EALoBzhE,EAAMq9C,gBACOtc,YAC9B1vD,KAAKs8B,SACLt8B,KAAKivF,iBAE6Bz5C,UAClCx1C,KAAKO,GAAG67B,KACRp8B,KAAKm8B,QAELk0D,EAAajB,EAAU5E,gBAE7B,IAAI8F,EAC+B,mBAAzBF,EAAmBxwB,GACrBwwB,EAAmBxwB,KACnBwwB,EAAmBxwB,GAyB3B,OAtBAwvB,EAAUjiE,WAAWkjE,EAAW,IAE5BrwF,KAAKsvF,kBAAkB1tF,OACxBwtF,EAAUviE,QACP,CACG9J,KAAM,aACNxa,QAASvI,KAAKsvF,iBACd7I,QAAQ,GAEX,GAGH2I,EAAUviE,QACP,CACG45D,QAAQ,GAEX,SAGAzmF,KAAKuwF,OAGH5hE,EAAMlsB,KACX,IAAK,gBACL,IAAK,OACF6tF,EAAYA,EAAU/J,KAAK,GAAGA,KAAK,GACnC+J,EAAUlE,QAAQt+E,KAAK1M,YACbutB,EAAM6hE,cAAc1xF,KAAKO,IACtB,CACJJ,GAAI0vB,EAAMH,iBAAiBnvB,GAC3BgS,MAAOhS,EAAEoE,UAET,GAES,SAAdkrB,EAAMlsB,KACP6tF,EAAUlE,QAAQt+E,KAAK1M,KAAKmwB,QAAQ,CACjCtyB,GAAI,kBACJoS,MAAO,oBAKb,MAEH,IAAK,OACL,IAAK,WACFi/E,EAAY,CACTvtE,KAAM,SACNwjE,KAAM,CACH,CACGxjE,KAAM,WACNixC,WAAY,EACZy8B,WAAY3jE,EAAE,qBACd7rB,GAAI,CACDowC,SAAU,SAAU0tC,GACjB,MAAM2R,EAAS1wF,KAAK0sB,gBAEpB,IAAKgkE,EAAQ,OAEb,MAAMhF,EAAagF,EAAOlG,gBAAgB,GAErCkB,IAEL3M,EAAS2M,EAAWxO,OAASwO,EAAWb,OAC3C,IAGNyF,IAQZlB,EAAUjiE,WAAWkjE,EAAW,IAChCjB,EAAUviE,QAAQyjE,EAAW,GAE7BF,EAAmB9vF,OAGfquB,EAAMsyD,eACPtyD,EAAMsyD,cAAc,CAAC,EAAGjhF,KAAKO,GAAG67B,KAAMi0D,EAAW,GAAGxG,OAEvD7pF,KAAKuvF,0BACFH,EAC6B,YAA7BiB,EAAW,GAAG30C,YAEjBlvB,GAAG4iE,GAAW3O,SACd2O,EAAUlC,cAAczM,SAExBzgF,KAAK2wF,OACR,CAcA,QAAAz8D,CAASvS,GACN,MAAM+tE,EAAQljE,GAAGxsB,KAAK8iC,IAAInuB,MAErB+6E,IAGLtsF,MAAMw8D,GAAG,GAAI8vB,IAEb/tE,EAAWA,GAAY,IACV/f,OAAS,IAEtB+f,EAAS3b,SAAQysB,MAAOrJ,IACrB,MACMgmE,EADiB5iE,GAAGxsB,KAAKyvF,WACEjF,gBAAgB,GACxB4E,EAAUxF,UAChC,CAAE7mE,KAAM,aACR,QAGcmR,SAAS9K,EAAK+mE,eAAiB,UAAY,UAE5D,MAAMS,EAASxB,EAAU5iE,GAAGxsB,KAAK8iC,IAAInU,OAErCiiE,EAAOxW,OAAO,QAAShxD,EAAKupB,SAC5Bi+C,EAAOh6E,gBAED5W,KAAKwsF,YAAYpjE,EAAKupB,QAASy8C,GAErC,MAAM1kD,EAAY1qC,KAAKqzC,QAAQzrB,UAAUwB,EAAKupB,SAE9C,IAAKjI,EAAW,OAGhB,GAAIthB,EAAK+mE,eAAgB,CACtB,MAAMF,EAAoBb,EAAU5E,gBAAgB,GAIpD,YAFAyF,EAAkB/7D,WAAW9K,EAAK/X,MAGrC,CAGA,IAAI0+E,EAAmBX,EAAU5E,gBAAgB,GACjDuF,EAAmB/vF,KAAKgwF,kBAAkBD,GAC1C,MAAM9lE,EAAU,CAAC,EAEjBA,EAAQygB,EAAUzoB,YAAcmH,EAAK/X,OAAOA,OAAS+X,EAAK/X,MAC1Dq5B,EAAUxW,SAAS67D,EAAkB9lE,GAIhB,QAAjBygB,EAAUjoC,KAAkC,YAAjBioC,EAAUjoC,KACL,mBAAjCwnB,EAAQygB,EAAUzoB,aACc,YAAhC8tE,EAAiBr+E,OAAOqR,MAExBgtE,EAAiB77D,UAAS,EAC7B,IAGHl0B,KAAK4vF,cACR,CAMA,UAAAA,GACG,MAAMF,EAAQljE,GAAGxsB,KAAK8iC,IAAInuB,MAE1B,GAAI+6E,EAAO,CACR,MAAMW,EAAaX,EAAMlF,gBAErB6F,GAAcA,EAAWzuF,OAAQ8tF,EAAM7E,OACtC6E,EAAMxS,OACXwS,EAAMjP,QACT,CACH,CAEA,kBAAAoQ,CAAmBtoF,GAChBvI,KAAKsvF,iBAAmB/mF,CAC3B,CAEA,yBAAAgnF,CAA0BH,EAAW0B,GAClC,MAAMC,EAAgB3B,EAAU5E,gBAAgB,GAC1CwG,EAAiB5B,EAAU5E,gBAAgB,GAE7CsG,GACDC,EAAc7T,OACd8T,EAAenG,SAEfkG,EAAclG,OACdmG,EAAe9T,OAErB,CAEA,UAAMqT,GACH/jE,GAAGxsB,KAAK8iC,IAAIksD,QAAQn4B,UAEpB,MAAM64B,EAAQljE,GAAGxsB,KAAK8iC,IAAInuB,MAErB+6E,IAEAA,EAAMjV,oBAAoBz6E,KAAKM,KAAKN,KAAKO,IAE9CmvF,EAAMjV,aAAa,CAAE1xE,KAAM,SAC9B,CAEA,KAAA4nF,GACGnkE,GAAGxsB,KAAK8iC,IAAIksD,QAAQxH,SACpBh7D,GAAGxsB,KAAK8iC,IAAInuB,MAAMsmE,cACrB,CAEA,iBAAA+U,CAAkBiB,GACf,OAAKA,GAAOv1C,UAAYu1C,GAAOzG,cAEzByG,EACIzG,gBACA7nF,QAAQuuF,GAAcA,EAAUx1C,WAAU,IAAMu1C,EAGhDA,CAEb,EAGH,2BCjmBA,MAAME,EAAc,EAAQ,OAEtBrkE,EAAI,IAAIjkB,IAAWtI,GAAGgD,aAAaC,SAASqF,GAElDlJ,EAAOC,QAAU,cAAsBuxF,EACpC,WAAArxF,CAAYyF,EAAQuf,EAAQi7B,GACzBhgD,MAAMwF,EAAQuf,EAAQi7B,GAEtB//C,KAAKO,GAAGU,GAAG,0BAA2BiZ,IAC/BA,EAAIjb,IAAMe,KAAKf,IAChBe,KAAKuB,KAAK,qBAAsBvB,KACnC,GA0BN,CASA,mBAAOoxF,CAAazvE,GACjB,MAAMjW,EAAM,CACTlI,MAAOme,EAASne,MAChBye,WAAYN,EAASM,WACrBN,SAAUA,GAMb,cAHOA,EAASne,aACTme,EAASM,WAETvW,CACV,CAEA,aAAA2lF,CAAcvuD,EAAKnhB,GACJ3hB,KAAK8kB,OAAOL,YAAYyX,IAApC,MACMo1D,EAAStxF,KAAKO,GAAGyzB,iBACpB,GAAGh0B,KAAKf,6BAEXutB,GAAGsW,EAAIyuD,eAAe1kE,QAAQ,CAC3B9J,KAAM,OACNgK,IAAK,mBACLk/D,KAAM,CACH,CACG1F,KAAM,CACH,CACGxjE,KAAM,OACNnX,KAAM,iBACNooD,WAAYh0D,KAAKO,GAAGsV,WAAWnE,SAASgC,gBACxCrC,MACGsQ,GAAYA,EAASk3D,eAChBl3D,EAASk3D,eACT,GACRr1E,MAAOspB,EAAE,oBAEZwkE,EAAO1xB,KAGb,CACG78C,KAAM,SACNgK,IAAK,eACLhP,KAAM,cACNhV,KAAM,OACNikF,WAAW,EACXhgE,MAAO,WACJ,MAAMu/D,EAAYvsF,KAAK0sB,gBACvBF,GAAGsW,EAAIyuD,eAAepkE,WAAWo/D,EACpC,MAIT//D,GAAG8kE,EAAOxuD,IAAIn7B,MAAMu1E,OAEpBoU,EAAOr9D,WAAWj0B,KAAK8kB,OAAOwF,UAC1B3I,GAAYA,EAAS/H,OAAO03E,EAAOp9D,SAASvS,EAAS/H,MAC5D,CASA,OAAA9B,GACG,MAAMhC,EAAY9V,KAAKO,GAAGsU,WAAWiB,YAoBrC,OAXgB,GALb9V,KAAK8kB,OAAOwF,QAAQ5I,GAEdA,EAAEziB,IAAMe,KAAKf,IACbyiB,EAAEO,WAAWxU,eAAiBzN,KAAKiiB,WAAWxU,gBAEjD7L,QAEHkU,EAAU1B,SACP,aACA0Y,EACG,oEACA,CAAC9sB,KAAKiiB,cAKRnM,CACV,CAiBA,aAAMpO,GAEE1H,KAAKf,KAKLe,KAAK8kB,OAAOqV,aACRn6B,KAAKk+E,oBAMRn+E,MAAM2H,gBAEN1H,KAAK8kB,OAAOyhB,YAAYvmC,MACjC,CAWA,UAAM2H,CAAKq4E,GAAc,GACtB,IAAIC,GAAQ,EASZ,GAPKjgF,KAAKf,KACPghF,GAAQ,IAMNA,GAASjgF,KAAK2hB,SAAS2/B,UAAYthD,KAAK2hB,SAASouB,QAAS,CAC5D,MAAM1jC,EAAQrM,KAAK8kB,OAAOzY,QAGpBnI,QAAemI,EAAM4f,QAAQ,CAChCL,MAAO,CACJvG,KAAM,MACNzL,MAAO,CACJ,CACGnX,IAAKzC,KAAKf,GACV+sB,KAAM,eAMZqtC,EAAQ,GAGdn1D,EAAO9C,KAAK4E,SAASsnB,IACbA,EAAEttB,KAAKiiB,cAAaqL,EAAEttB,KAAKiiB,YAAcjiB,KAAK2hB,SAASouB,SAE5DspB,EAAMjyD,KAAKiF,EAAM+yE,OAAO9xD,EAAEruB,GAAIquB,GAAG,UAG9B9rB,QAAQsY,IAAIu/C,EACrB,CAgBA,SAZMt5D,MAAM4H,aAKN3H,KAAK8kB,OAAOmiB,SAASjnC,OAOtBA,KAAKqmC,eAAiB25C,IAAgBhgF,KAAK8kB,OAAOqV,MAAO,CAC3D,MAAMq3D,EAAYvR,EAAQjgF,KAAKi+E,gBAAkBj+E,KAAKyxF,sBAChDD,CACT,CAEA,OAAOxxF,IACV,CAMA,aAAAi+E,GACG,OAAOj+E,KAAKO,GAAGS,QAAQoB,KAAK,CACzBC,IAAK,8BAA8BrC,KAAK8kB,OAAO7lB,YAAYe,KAAKf,MAEtE,CAEA,aAAAwyF,GACG,OAAOzxF,KAAKO,GAAGS,QAAQsI,IAAI,CACxBjH,IAAK,8BAA8BrC,KAAK8kB,OAAO7lB,YAAYe,KAAKf,MAEtE,CAEA,WAAAi/E,GACG,OAAOl+E,KAAKO,GAAGS,QAAgB,OAAE,CAC9BqB,IAAK,8BAA8BrC,KAAK8kB,OAAO7lB,YAAYe,KAAKf,MAEtE,CAmBA,YAAAshF,CAAah4E,GACVA,EAAUA,GAAW,CAAC,EAEtB,MAAMmJ,EAAS,CACZzS,GAAIe,KAAKiiB,WACTjF,OAAQhd,KAAKwD,OAShB,OANI+E,EAAQ83E,mBAAqBrgF,KAAK2hB,SAAS0/B,WAC5C3vC,EAAOsL,OAAS,iCAAiChd,KAAK2gD,uBACnDjvC,EAAOsL,UAINtL,CACV,CAiBA,aAAAuvE,CAAczqE,EAAK0lB,EAAK4kD,EAAMv4E,GAAU,CAYxC,UAAAmpF,CAAWl7E,EAAK0lB,EAAK4kD,GAClB,OAAO,CACV,CAYA,QAAAplC,CAAStyB,EAAMa,GACZ,OAAOb,EAAKsyB,UACf,CAWA,QAAAxnB,CAAS9K,EAAMa,EAASme,GACrB,IAAKhf,EAAM,OAEX,IAAIlgB,EAQDA,EALY,MAAX+gB,GAA+C,MAA5BA,EAAQjqB,KAAKiiB,aACjB,MAAhBmmB,EAGQne,GAAuC,MAA5BA,EAAQjqB,KAAKiiB,YAC1BgI,EAAQjqB,KAAKiiB,YAEbgI,EAJAme,EAOT,IACGhf,EAAK8K,SAAShrB,EACjB,CAAE,MAAO/H,GAET,CACH,CAWA,aAAA6qE,CAAc2lB,GAIX,IAAIC,EAAK,CAEN5hD,OAAQ,KACE,CACJvtC,IAAKkvF,IAWXjiC,YAAa,CAACjrC,EAAa1c,KACxB0c,EAAcA,GAAezkB,KAAKO,GAAG+7B,SAQrC,MAAM/2B,EAASqsF,EAAG5hD,SAalB,OAZAzqC,EAAOoc,SAAWpc,EAAOoc,UAAY,CAAC,EACtCpc,EAAOoc,SAASlW,SAAWzL,KAAK8kB,OAAO7lB,GACvCsG,EAAOoc,SAASgxB,QAAU3yC,KAAKf,GAEJwlB,EAAYD,QACpCjf,EACAkf,EACA1c,EAKsB,GAG/B,OAAO6pF,CACV,CAKA,eAAArnB,GACG,MAAO,CACJv6B,OAAQ,KACE,CACJjyB,KAAM,WAMZ2xC,YAAa,CAACjrC,EAAa1c,KACxB0c,EAAcA,GAAezkB,KAAKO,GAAG+7B,SAGrC,MAAM/2B,EAASvF,KAAKuqE,kBAAkBv6B,SAWtC,OAVAzqC,EAAOoc,SAAWpc,EAAOoc,UAAY,CAAC,EACtCpc,EAAOoc,SAASlW,SAAWzL,KAAK8kB,OAAO7lB,GACvCsG,EAAOoc,SAASgxB,QAAU3yC,KAAKf,GAEJwlB,EAAYD,QACpCjf,EACAkf,EACA1c,EAGsB,EAGlC,CAOA,WAAA8pF,GACG,OAAOpyF,OAAO2vB,OAAO,CAAC,EAAGpvB,KAAK2hB,SACjC,CAYA,eAAA21D,CAAgBjhE,EAAKjV,EAAO,CAAC,GAC1B,IAAIsC,EAAU,GAAG1D,KAAKwgD,cAAcxgD,KAAKwD,WAAW6S,IACpDrW,KAAK03E,UAAUtwE,KAAK,CAAE1D,UAAStC,QAClC,CAEA,eAAMigF,GACH,OAAOrhF,KAAKO,GAAGS,QAAQ4H,IAAI,CACxBvG,IAAK,2BAA2BrC,KAAK8kB,OAAO7lB,YAAYe,KAAKf,MAEnE,CAUA,aAAAsiF,CAAct3D,GAEd,mBCzfH,MAAM6nE,EAAuB,EAAQ,OAErCnyF,EAAOC,QAAU,cAA+BkyF,EAS7C,OAAAh6E,GAKG,OAJkB/X,MAAM+X,SAK3B,CAOA,YAAAyoE,CAAah4E,GACV,MAAMmJ,EAAS3R,MAAMwgF,aAAah4E,GAalC,OAXAmJ,EAAOqgF,OAAS,KAChBrgF,EAAOqb,IAAM,WACbrb,EAAO69D,SAAYtlD,GAEXA,EAAQ+nE,OAGH,GAFAhyF,KAAK6X,OAAOoS,GAMlBvY,CACV,CAWA,aAAAs6D,GACG,OAAOjsE,MAAMisE,cAAc,gBAC9B,CAEA,mBAAAhX,GACG,OAAOj1D,MAAMisE,cAAc,uBAC9B,CAEA,eAAAzB,GACG,MAAM0nB,EAAyBlyF,MAAMwqE,kBAQrC,OANA0nB,EAAuBjiD,OAAS,KACtB,CACJvtC,IAAK,eAIJwvF,CACV,oBCpEH,MAAMC,EAAqB,EAAQ,OAEnCvyF,EAAOC,QAAU,cAA6BsyF,EAC3C,WAAApyF,CAAYyF,EAAQuf,GACjB/kB,MAAMwF,EAAQuf,EACjB,CAMA,OAAAhN,GAKG,OAJkB/X,MAAM+X,SAK3B,CAOA,YAAAyoE,CAAah4E,GACVA,EAAUA,GAAW,CAAC,EAEtB,MAAMmJ,EAAS3R,MAAMwgF,aAAah4E,GAyBlC,OAvBAmJ,EAAOqgF,OAAS,WAChBrgF,EAAOqb,IAAM,SACbrb,EAAO69D,SAAW,CAAC/4D,EAAKw5B,EAAQ3+B,EAAOK,IAEhC8E,EAAIw7E,OAAex7E,EAAIxW,KAAKiiB,YAG5B1Z,EAAQmlD,SAEN,mCACA1d,EAAOmiD,SAAS37E,EAAKw5B,EAAQ3+B,EAAOK,GACpC,SAMCL,EACM,sDACE,gDAIXK,CACV,CAWA,aAAAs6D,GACG,OAAOjsE,MAAMisE,cAAc,WAC9B,CAEA,mBAAAhX,GACG,OAAOj1D,MAAMisE,cAAc,kBAC9B,CAEA,eAAAzB,GACG,MAAM0nB,EAAyBlyF,MAAMwqE,kBAQrC,OANA0nB,EAAuBjiD,OAAS,KACtB,CACJvtC,IAAK,mBAIJwvF,CACV,oBClFH,MAAMnzC,EAAuB,EAAQ,OAErCn/C,EAAOC,QAAU,cAA+Bk/C,EAC7C,WAAAh/C,CAAYyF,EAAQuf,GACjB/kB,MAAMwF,EAAQuf,EACjB,CAMA,OAAAhN,GAKG,OAJkB/X,MAAM+X,SAK3B,CAOA,YAAAyoE,CAAah4E,GACV,MAAMmJ,EAAS3R,MAAMwgF,aAAah4E,GAUlC,OARAmJ,EAAOqgF,OAAS,KAChBrgF,EAAOqb,IAAM,WACbrb,EAAO69D,SAAYtlD,GACZA,EAAQ+nE,OAAe/nE,EAAQjqB,KAAKiiB,YAEjCjiB,KAAK6X,OAAOoS,GAGfvY,CACV,CAWA,aAAAs6D,GACG,OAAOjsE,MAAMisE,cAAc,gBAC9B,CAEA,mBAAAhX,GACG,OAAOj1D,MAAMisE,cAAc,uBAC9B,CAEA,eAAAzB,GACG,MAAM0nB,EAAyBlyF,MAAMwqE,kBAQrC,OANA0nB,EAAuBjiD,OAAS,KACtB,CACJvtC,IAAK,eAIJwvF,CACV,oBCjEH,MAAMG,EAAqB,EAAQ,OAEnCzyF,EAAOC,QAAU,cAA6BwyF,EAC3C,WAAAtyF,CAAYyF,EAAQuf,GACjB/kB,MAAMwF,EAAQuf,EACjB,CAMA,OAAAhN,GAKG,OAJkB/X,MAAM+X,SAK3B,CAOA,YAAAyoE,CAAah4E,GACV,MAAMmJ,EAAS3R,MAAMwgF,aAAah4E,GAalC,OAXAmJ,EAAOqgF,OAAS,KAChBrgF,EAAOqb,IAAM,WACbrb,EAAO69D,SAAYtlD,GAEXA,EAAQ+nE,OAGH,GAFAhyF,KAAK6X,OAAOoS,GAMlBvY,CACV,CAWA,aAAAs6D,GACG,OAAOjsE,MAAMisE,cAAc,gBAC9B,CAEA,mBAAAhX,GACG,OAAOj1D,MAAMisE,cAAc,uBAC9B,CAEA,eAAAzB,GACG,MAAM0nB,EAAyBlyF,MAAMwqE,kBAQrC,OANA0nB,EAAuBjiD,OAAS,KACtB,CACJvtC,IAAK,eAIJwvF,CACV,CAEA,YAAA7a,GACGr3E,MAAMq3E,gBAELp3E,KAAK2hB,SAAS69B,eAAe97B,MAAM,MAAQ,IAAI1d,SAAS/G,IAC1Ce,KAAK8kB,OAAO8C,UAAU3oB,IAE/Be,KAAKs3E,gBAAgB,mBAAmBr4E,gBAAkB,CACvD2vB,QAAS3vB,EACTugD,eAAgBx/C,KAAK2hB,SAAS69B,gBAEpC,GAEN,oBClFH,MAAM6yC,EAAqB,EAAQ,OAInC1yF,EAAOC,QAAU,cAA6ByyF,EAC3C,WAAAvyF,CAAYyF,EAAQuf,EAAQi7B,GACzBhgD,MAAMwF,EAAQuf,EAAQi7B,EACzB,CAWA,aAAMr4C,GAEH,IAAK1H,KAAKf,GAAI,OAAOuC,QAAQ9B,UAsB7B,SALMK,MAAM2H,WAIO1H,KAAKqtB,eACP,OAAO7rB,QAAQ9B,UAEhC,MAAMksC,EAAY5rC,KAAK2nB,UACvB,OAAKikB,EAGEA,EAAUlkC,UAHMlG,QAAQ9B,SAIlC,CAeA,kBAAAwgD,CAAmB1pC,GAChB,IAAI2pC,EAAe,GAEnB,MAAM/+C,EAAOrB,MAAMmgD,mBAAmB1pC,GAChCu1B,EAAe/rC,KAAKqtB,eAwB1B,OAtBIjsB,GAAQ2qC,IAELrmC,MAAMC,QAAQvE,GACf++C,EAAe/+C,EAAKtC,KAAI,SAAUwuB,GAO/B,OALIA,IACDA,EAAE7pB,KAAO6pB,EAAE7pB,MAAQsoC,EAAahD,YAAYzb,GAC5CA,EAAEjc,MAAQic,EAAE7pB,MAGR6pB,CACV,IACQlsB,EAAKnC,IAAMmC,EAAKO,MACxBw+C,EAAe/+C,EACf++C,EAAa18C,KACV08C,EAAa18C,MAAQsoC,EAAahD,YAAYoX,GACjDA,EAAa9uC,MAAQ8uC,EAAa18C,MACX,iBAARrC,IACf++C,EAAe,CAAE18C,KAAMrC,KAItB++C,CACV,CAEA,YAAAogC,CAAah4E,GACVA,EAAUA,GAAW,CAAC,EACtB,MAAMmJ,EAAS3R,MAAMwgF,aAAah4E,GAC5BomB,EAAQ3uB,KACF2uB,EAAMpuB,GAAG67B,KAEE,MAAnB7zB,EAAQytB,UACTztB,EAAQytB,QAAU,CAAC,GAGtB,IAAIs8D,EAAwC,QAA1BtyF,KAAK2hB,SAAS2M,SA4DhC,OA1DA5c,EAAOqgF,OAASO,EAAc,cAAgB,QAC9C5gF,EAAO6gF,WAAclhF,GACXrR,KAAKuyF,WAAWlhF,GAE1BK,EAAO8gF,UAAanhF,GACVrR,KAAKwyF,UAAUnhF,GAEzBK,EAAO69D,SAAY/4D,IAChB,IAAI2pC,EAAexxB,EAAMuxB,mBAAmB1pC,GACxCjR,EAAS,GAEb,GADAA,EAAO6B,KAAK,gCAET+4C,GACAz6C,MAAMC,QAAQw6C,IACdA,EAAav+C,OAEbu+C,EAAan6C,SAASkD,IACnB3D,EAAO6B,KACJ,6CAA6C8B,EAAImI,uCAAoCnI,EAAIjK,iGAC3F,IAEAkhD,EAAav+C,OAAS,GACvB2D,EAAO6B,KACJ,8CAA8C+4C,EAAav+C,qBAG7D,KAAIu+C,EAAa9uC,MASrB,MAAO,GATqB,CAC5B,IAAIC,EAAQ,GACR/I,EAAQmlD,WACTp8C,EAAQ,0GAEX/L,EAAO6B,KACJ,uCAAuCkK,wBAA4B6uC,EAAa9uC,qBAEtF,CAEA,CAEA,OADA9L,EAAO6B,KAAK,UACL7B,EAAO6D,KAAK,GAAG,EAGzBsI,EAAO06E,QAAU,CACdnrF,GAAI,CACDorF,aAAc,WACX19D,EAAM8jE,YAAYzyF,KACrB,GAIH2C,OAAQ,EAAG0O,SAASpI,KAChBoI,GAAS,IAAI5D,cAAcwnC,UAAUhsC,GAAU,IAAIwE,gBAGtD6kF,IACD5gF,EAAO06E,QAAQrpE,KAAO,eACtBrR,EAAO06E,QAAQsG,QAAS,GAGpBhhF,CACV,CAEA,WAAA+gF,CAAYE,GAGT,MAAMC,EAAQD,EAAS9E,UACU,OAA7B7tF,KAAK2hB,SAASkS,cACV++D,GAAO9pE,KAAK,CAAC,IAAM,IAAIlnB,SAI/B,CAAC,SAAU,UAAUoE,SAASvD,IACvBzC,KAAK,OAAOyC,aAEhBzC,KAAK,OAAOyC,WAAezC,KAAKO,GAAGU,GAChC,qBAAqBwB,KACpBkO,IACM3Q,KAAKqtB,eAAepuB,IAAM0R,EAAIlF,UAAUmnF,EAAMphF,UAAU,IAEjE,IAGJxR,KAAK6yF,sBAAsBF,EAAU,KAAM3yF,MAC9C,CAcA,UAAA0xF,CAAWl7E,EAAcsqE,GAGzB,CAWA,aAAA9U,GACG,OAAOjsE,MAAMisE,cAAc,UAC9B,CAEA,mBAAAhX,GACG,MAA8B,QAA1Bh1D,KAAK2hB,SAAS2M,SACRvuB,MAAMisE,cAAc,yBAEvBjsE,MAAMisE,cAAc,sBAC9B,CAEA,eAAAzB,GACG,MAAM0nB,EAAyBlyF,MAAMwqE,kBAQrC,OANA0nB,EAAuBjiD,OAAS,KACtB,CACJvtC,IAAK,kBAIJwvF,CACV,CAQA,gBAAMzB,CAAWsC,EAAaC,EAAMryE,EAAMqxE,EAAQvsE,GAAW,GAC1D,MAAMwtE,EAAYjB,EAElB,IAAIiB,IAEGA,EAAUC,sBACXpsF,aAAamsF,EAAUC,4BAGhBD,EAAUE,uBACVF,EAAUG,oBAEpBH,EAAUE,sBAAwB,IAAI1xF,SAAS9B,IAC5CszF,EAAUG,mBAAqBzzF,EAC/BszF,EAAUC,oBAAsBxrF,YAAW,KACxC/H,GAAQ,EAAK,GACb,IAAI,IAELszF,EAAUE,iBAGlB,OAAO,IAAI1xF,SAAQ,CAAC9B,EAASoK,KAC1B,IAAIspF,GAAe,EAInB,MAAMC,EAAW9qF,IAEdA,EAAUA,EAAQ5F,QAAQymB,IACvB,GAAIA,EAAK3lB,KAAKgK,cAAcwnC,SAAS89C,EAAKtlF,eACvC,OAAO,CACV,IAGE2lF,EAMFpzF,KAAKuB,KAAK,cAAegH,IALzB6qF,GAAe,EACf1zF,EAAQ6I,GAKX,EAKGqjB,EAAQ5rB,KAAKO,GAAGma,UAAUo4E,GAAe,CAAC,GAUhD,GATApyE,EAAOA,GAAQ,GAEVkL,EAAMvG,OAAMuG,EAAMvG,KAAO,OAEzBuG,EAAMhS,QAAOgS,EAAMhS,MAAQ,IAEhCm5E,EAAOA,GAAQ,IAGV/yF,KAAK2hB,SAASC,WAAY,MAAO,GAKtC,MAAM0xE,EAAYtzF,KAAKqtB,eAGvB,GAAiB,MAAbimE,EAAmB,MAAM,IAAIh0F,MAAM,oBAEvC,MAAMi0F,EAAYvzF,KAAK2nB,UAGvB,GAAiB,MAAb4rE,EAAmB,MAAM,IAAIj0F,MAAM,oBAGvC,MAAMk0F,EAAcF,EAAUjnF,QAID,QAA1BrM,KAAK2hB,SAAS2M,UACe,OAA7BtuB,KAAK2hB,SAASkS,aACoB,GAAlCk+D,GAAQrgF,QAAQ+hF,eAEhB7nE,EAAMhS,MAAMxS,KAAK,CACd3E,IAAK8wF,EAAUt0F,GACf+sB,KAAM,YAMiB,OAA1BhsB,KAAK2hB,SAAS2M,UACe,OAA7BtuB,KAAK2hB,SAASkS,aACoB,GAAlCk+D,GAAQrgF,QAAQ+hF,iBAGc,GAA1BzzF,KAAK2hB,SAASyyB,SAIfxoB,EAAMhS,MAAMxS,KAAK,CACd3E,IAAK8wF,EAAUt0F,GACf+sB,KAAM,qBAKTJ,EAAMhS,MAAMxS,KAAK,CACd3E,IAAK8wF,EAAUt0F,GACf+sB,KAAM,aAOGhsB,KAAK0zF,aAAa9nE,GAEpCpqB,QAAQ9B,UACJ2H,MAAKorB,UAII,IAQTprB,MAAKorB,MAAOkhE,IACV,GAAIA,EAGD,OADA3zF,KAAK2lF,SAAWgO,EACTN,EAAQrzF,KAAK2lF,UAGvB,IASIiO,EAAW,WACZ,OAAO,IAAIpyF,SAAQ,CAAC9B,EAASoK,KAE1BpK,EAAQ,CAAE0B,KAAM,IAAK,GAE3B,EAKA,GACkC,OAA/BpB,MAAM2hB,UAAUkS,cACf7zB,MAAM6zF,kBAAoBb,GAAWthF,QAAQL,OAC/C,CACC,IAAI9L,EAAS,GAGkB,cAA3BytF,GAAWthF,QAAQqR,MACU,SAA3BiwE,GAAWthF,QAAQqR,OACtB/iB,MAAM6zF,iBAGEb,GAAWthF,QAAQL,QAExB9L,EADCG,MAAMC,QAAQqtF,EAAUthF,OAAOL,OACvB2hF,GAAWthF,QAAQL,MAAMjI,OAEzB4pF,GAAWthF,QAAQL,OAL/B9L,EAASvF,MAAM6zF,iBAQlB,IAAIC,EAAY,CAAC,EACbC,EAAW,GAEfD,EAAUzuE,KAAO,KACjByuE,EAAUl6E,MAAQ,GAGlB,IAAIo6E,EAAU,CAAC,EACfzuF,EAAOme,MAAM,KAAK1d,SAASC,IACxB+tF,EAAQ/tF,GAAKA,CAAC,IAEjBxG,OAAOD,KAAKw0F,GAAShuF,SAASC,IAC3B6tF,EAAUl6E,MAAMxS,KAAK,CAClB3E,IAAK6wF,EAAUrnF,KACf+f,KAAM,SACN3a,MAAOpL,GACR,IAEL2tF,EAAW,WACR,OAAOJ,EAAYvnE,QAAQ,CACxBL,MAAOkoE,EACPpzE,KAAMqzE,EACNvuE,UAAU,GAEhB,CACH,CACA,IACG,MAAMoc,QAAgBpgC,QAAQsY,IAAI,CAhE3B05E,EAAYvnE,QAAQ,CACxBL,MAAOA,EACPlL,KAAMA,EACN8E,aA6D2CouE,MAIxC1vF,EAAS09B,EAAQ,GAAGxgC,KAAKuY,OAAOioB,EAAQ,GAAGxgC,MAiBjD,OAdApB,KAAK2lF,SAAWzhF,EAAO9C,MAAQ8C,GAAU,IAGxClE,KAAK2lF,UAAY,IAAI3/E,SAASsuC,IAC5BA,EAAI7wC,KAAO6vF,EAAUvqD,YAAYuL,GACjCA,EAAIjjC,MAAQijC,EAAI7wC,IAAI,IAShB4vF,EAAQrzF,KAAK2lF,SACvB,CAAE,MAAOxkF,GASN,MARAnB,KAAKO,GAAGoJ,OAAOC,UAAUzI,EAAK,CAC3BD,QACG,sEACHytB,MAAO3uB,KAAK4H,QACZgkB,UAGHwnE,GAAe,EACTjyF,CACT,IACD,GAEX,CAEA,YAAAuyF,CAAa9nE,GACV,MAAO,GAAG5rB,KAAKf,MAAM0H,KAAKC,UAAUglB,IACvC,CAEA,kBAAMqoE,CAAaroE,GAChB,MAAMsoE,EAAYl0F,KAAK0zF,aAAa9nE,SAC9B5rB,KAAKO,GAAGwP,QAAQE,IAAIikF,EAAW,KACxC,CAEA,UAAA3B,CAAWlhF,GACR,IAAKA,EAAO,MAAO,GACnB,IAAIguD,EAAO,GACX,GAAI35D,MAAMC,QAAQ0L,GACfA,EAAMrL,SAASkD,IACZ,GAAkB,iBAAPA,EACRm2D,EAAKj4D,KAAK8B,EAAIjK,QACV,CACJ,IAAIk1F,EAAUn0F,KAAKo0F,eAAelrF,GAC9BirF,GAAWA,EAAQl1F,GACpBogE,EAAKj4D,KAAK+sF,EAAQl1F,IAElBogE,EAAKj4D,KAAK8B,EAEhB,UAGH,GAAoB,iBAATmI,EACRguD,EAAKj4D,KAAKiK,EAAMpS,QACZ,CACJ,IAAIk1F,EAAUn0F,KAAKo0F,eAAe/iF,GAC9B8iF,GAAWA,EAAQl1F,GACpBogE,EAAKj4D,KAAK+sF,EAAQl1F,IAElBogE,EAAKj4D,KAAKiK,EAEhB,CAEH,OAAOguD,EAAKj2D,MACf,CAEA,SAAAopF,CAAUnhF,GAEP,GAD4C,QAA1BrR,KAAK2hB,SAAS2M,SACf,CACd,GAAKjd,EAEE,CACJ,IAAIgjF,EAAa,GAKjB,OAJWhjF,EAAMqS,MAAM,KAClB1d,SAASkD,IACXmrF,EAAWjtF,KAAKpH,KAAKo0F,eAAelrF,GAAK,IAErCmrF,CACV,CARG,MAAO,EASb,CAEG,OADWr0F,KAAKo0F,eAAe/iF,EAGrC,CAEA,qBAAAwhF,CAAsBd,EAAQxpF,EAASomB,EAAOha,GAC3C,IAAKo9E,EAAQ,OAAOvwF,QAAQ9B,QAAQ,IAEpC,MAAMszF,EAAYjB,EAGgB,OAA/B/xF,MAAM2hB,UAAUkS,aAChBm/D,EAAUt3C,aACT/sB,EAAMklE,mBAEPllE,EAAMklE,iBAAmBb,EAAUt3C,YAMtC,MAAM44C,EAAiB/rF,GAASytB,QAC3Bv2B,OAAO2vB,OAAO,CAAC,EAAG7mB,EAAQytB,SAC1B,CAAE3Q,KAAM,MAAOzL,MAAO,IAE3B,GAAIrR,GAASgsF,sBAAuB,CACjC,MAAMC,EAA6B,CAAC1gD,EAAYvuC,EAAQkvF,EAAQ,KAC7D,MAAMC,EAAgBnvF,EAAO5C,QAAQtD,GAAMA,GAAGo1F,QAAUA,IAExD,MAAO,IACD3gD,EAAWl6B,MAAM9a,KAAKO,IACtB,GAAIA,EAAEgmB,KACH,MAAO,CACJA,KAAMhmB,EAAEgmB,KACRzL,MAAO46E,EAA2Bn1F,EAAGkG,EAAQkvF,EAAQ,IAG3D,MAAMpjF,EAAQqjF,EAAc/xF,QACxBgyF,GAAOA,EAAGlyF,MAAQpD,EAAEoD,KAAOkyF,EAAGtjF,QAAUhS,EAAEgS,QAC5C,GAEF,IAAKA,EAAO,OAAOhS,EAEnB,MAAMu1F,EAAevjF,GAAOwjF,aAAanjF,OAAOzS,GAC3CutB,GAAGnb,EAAMwjF,YAAYnjF,OAAOzS,IAC5B,KAEL,IAAK21F,EACF,MAAMt1F,MACH,mDAGN,MAAMw1F,EAAczjF,GAAOwjF,YACtBD,EAAal5C,YAAc,GAC3B,GAEL,IAAIqjC,EAAS,GAEb,GAAI+V,EACD,GAAIzjF,EAAM0jF,aAAc,CACrB,MAAMC,EAAcrmE,EAAM7J,OAAO8C,UAC9BvW,EAAMwjF,YAAYnjF,OAAOujF,aAE5B,IAAIC,EAGJ,GAAKF,EAAYrP,UAAU/jF,OAiBxBszF,EAAUF,EAAYZ,eAAeU,OAjBL,CAChC,MAAMt/D,GACF7gB,EAAK4S,eAAeD,YAAYgD,QAC7B5I,GACEA,EAAEziB,IAAMoS,EAAMA,OACdqQ,EAAEO,YAAc5Q,EAAMA,SACvB,IAAI,GAEZ,GAAImkB,EAAa,CAEd,MAAM2/D,EAAWxgF,EAAK4S,gBAAgBe,YAEtC4sE,EACGC,EAAS3/D,EAAY/H,iBACrB0nE,EAAS9jF,EAAMA,MACrB,CACH,CAKG0tE,EADCmW,EACQA,EAAQ7jF,EAAM0jF,cAEdD,CAEf,MACG/V,EAAS+V,EAIf,MAAO,CACJryF,IAAKpD,EAAEoD,IACPupB,KAAM,SACN3a,MAAO0tE,EACT,IAEN,EAGJuV,EAAe16E,MAAQ46E,EACpBF,EACA/rF,EAAQgsF,sBAEd,CAkBA,OAhBKv0F,KAAKo1F,oBACPp1F,KAAKo1F,kBAAqBh0F,IACnB4xF,EAAUqC,YACXr1F,KAAKo2B,eAAe,cAAep2B,KAAKo1F,mBAG3Cp1F,KAAKs1F,gBAAgBtC,EAAW5xF,EAAMutB,EAAOha,GAAM,EAAK,GAK9D3U,KAAKo2B,eAAe,cAAep2B,KAAKo1F,mBAAmBtW,KACxD,cACA9+E,KAAKo1F,mBAGD,IAAI5zF,SAAQ,CAAC9B,EAASoK,KAC1B9J,KAAKwwF,WACF8D,EACA,GACA/rF,GAASmY,MAAQ,GACjBsyE,GACD3rF,MAAKorB,MAAOrxB,UACLpB,KAAKs1F,gBAAgBtC,EAAW5xF,EAAMutB,EAAOha,GAAM,GACzDjV,EAAQ0B,EAAK,GACd,GAER,CAEA,qBAAMk0F,CAAgBtC,EAAW5xF,EAAMutB,EAAOha,EAAM4gF,GACjD,GAAiB,MAAbvC,IAAqBA,EAAUqC,YAAnC,CAUA,SARMr1F,KAAKw1F,cAAcp0F,GAEzB4xF,EAAUrE,aACVqE,EAAUnF,UAAUr8E,WACpBwhF,EAAUnF,UAAUzT,OAAO,OAAQh5E,GAC/Bm0F,GACDv1F,KAAKy1F,sBAAsBzC,EAAWrkE,EAAOha,GAE5Cq+E,EAAUt3C,cAAgBt6C,GAAMQ,OAAQ,CACzC,IAAI8zF,EAAU1C,EAAUt3C,WAGA,QAApB/sB,EAAML,YAA0C,iBAAXonE,IACtCA,EAAUA,EAAQhyE,MAAM,MAEtBhe,MAAMC,QAAQ+vF,KAChBA,EAAU,CAACA,IAGd,IAAIC,EAAe,GACnBD,EAAQ1vF,SAAS4vF,IAEd,MAAM9mE,EAAW1tB,EAAKy0F,MAAMvoE,GAAMA,EAAEruB,IAAM22F,IAU1C,GARI9mE,GACD6mE,EAAavuF,KAAKwuF,IAQjB9mE,GACDH,EAAM0X,eACL1X,EAAMiiB,YAAcjiB,EAAMkiB,aAC5B,CACC,MAAMilD,EAAe10F,EAAKuB,QACtB2qB,GACEA,EAAEqB,EAAMiiB,YAAY3uB,YAAc,KAAO2zE,GACzCtoE,EAAEqB,EAAMkiB,aAAa5uB,YAAc,KAAO2zE,IAC9C,GAEEE,GAAcH,EAAavuF,KAAK0uF,EAAa72F,GACpD,KAGH+zF,EAAU9+D,SAASyhE,EACtB,CACA3C,EAAUpE,cAnD4C,CAoDzD,CAEA,qBAAA6G,CAAsBzC,EAAWrkE,EAAOha,GACrC,IAAIq+E,GAAWqC,aAGXrC,GAAWnF,QAAS,CACrB,IAAKmF,EAAU3E,SAAU,OACzB,IAAIjI,EAAQ4M,EAAU3E,WACtB,IAAKjI,EAAO,OACZ4M,EAAUnF,UAAUzsF,KAAK20F,MAAMC,IAC5B,GAAKA,EAAL,CACA,IAAIlV,EAAOsF,EAAMyD,MAAMpM,cACpB,gBAAkBuY,EAAO/2F,GAAK,MAE5B6hF,GACLA,EAAKmV,aACF,UACA,GAAGtnE,EAAMlsB,eAAeuzF,EAAO/2F,MAAM0vB,EAAM1vB,MAAM0V,GAAM1V,KAPvC,CAQlB,GAEP,CACH,CAEA,cAAAm1F,CAAelrF,GACZ,IAAIkgB,EACA7gB,EAAUvI,KAAK2lF,UAAY,GAC/B,GAAIp9E,EAAQ3G,OAAS,EAAG,CACrB,IAAK,IAAIsE,EAAI,EAAGA,EAAIqC,EAAQ3G,OAAQsE,IAAK,CACtC,GACGlG,KAAK4wC,YACLroC,EAAQrC,GAAGlG,KAAK4wC,WAAW9rB,OAAO7Y,OAAS/C,EAC5C,CACCkgB,EAAO7gB,EAAQrC,GACf,KACH,CAAO,GACJlG,KAAK6wC,aACLtoC,EAAQrC,GAAGlG,KAAK6wC,YAAY/rB,OAAO7Y,OAAS/C,EAC7C,CACCkgB,EAAO7gB,EAAQrC,GACf,KACH,CACG,GACGqC,EAAQrC,GAAGjH,IAAMiK,GACjBX,EAAQrC,GAAGmL,OAASnI,GACpBX,EAAQrC,GAAGlG,KAAK4wC,YAAY3uB,YAAc,KAAO/Y,GACjDX,EAAQrC,GAAGlG,KAAK6wC,aAAa5uB,YAAc,KAAO/Y,EACnD,CACCkgB,EAAO7gB,EAAQrC,GACf,KACH,CAEN,CACA,OAAOkjB,CACV,CACG,MAAO,EAEb,CAEA,QAAAsyB,CAAStyB,GACN,IAAIlgB,EAAMkgB,EAAKsyB,WAEf,GAD4C,QAA1B17C,KAAK2hB,SAAS2M,SACf,CACd,IAAI+wC,EAAO,GAkBX,OAjBK35D,MAAMC,QAAQuD,GAchBm2D,EAAOn2D,EAbHA,IACDA,EAAMA,EAAIwa,MAAM,KAChBxa,EAAIlD,SAAS2jB,IAGV01C,EAAKj4D,KACFpH,KAAKwuB,iBAAiBpF,EAAKykE,UAAUrlE,QAAQmB,GAAS,CACnD22B,WAAW,IAEhB,KAOH+e,CACV,CACG,OAAIn2D,EAEMlJ,KAAKwuB,iBAAiBpF,EAAKykE,UAAUrlE,QAAQtf,IAE7C,EAGhB,CAEA,QAAAgrB,CAAS9K,EAAMa,GACZ,IAAKb,EAAM,OAGX,IAAIlgB,EAAMlJ,KAAKkgD,mBAAmBj2B,GAGlC,GAAIb,EAAKykE,SAAqC,GAA1BzkE,EAAKykE,UAAUnjE,QAAc,CACf,QAA3B1qB,KAAK2hB,SAAS2M,UAAuB5oB,MAAMC,QAAQuD,KACpDA,EAAM,CAACA,IAGV,MAAM0pF,EAAQxpE,EAAKykE,UAEnB+E,EAAMxY,OAAO,OAAQlxE,GACrB0pF,EAAMh8E,SACT,CAIA,IAAI8+E,EAAUtsE,EAAKsyB,WACfqjC,EAASr5E,MAAMC,QAAQuD,GACtBA,EACIpK,KACGO,GACEW,KAAKwuB,iBAAiBnvB,EAAG,CAAEihD,WAAW,KACtCjhD,EAAEJ,IACFI,EAAEsC,MACFtC,IAEL+J,KAAK,KACTpJ,KAAKwuB,iBAAiBtlB,EAAK,CAAEo3C,WAAW,KACxCp3C,EAAIjK,IACJiK,EAAIvH,MACJuH,EACDwsF,GAAW3W,GACZ31D,EAAK8K,SAAS6qD,EAEpB,CAWA,wBAAAmX,CAAyBvsE,GACtB,IAAIw2B,EAAe,GAEf/+C,EAAOuoB,EACPoiB,EAAe/rC,KAAKqtB,eAsBxB,OApBIjsB,GAAQ2qC,IAELrmC,MAAMC,QAAQvE,GACf++C,EAAe/+C,EAAKtC,KAAI,SAAUwuB,GAO/B,OALIA,IACDA,EAAE7pB,KAAO6pB,EAAE7pB,MAAQsoC,EAAahD,YAAYzb,GAC5CA,EAAEjc,MAAQic,EAAE7pB,MAGR6pB,CACV,KACQlsB,EAAKnC,IAAMmC,EAAKO,SACxBw+C,EAAe/+C,GACFqC,KACV08C,EAAa18C,MAAQsoC,EAAahD,YAAYoX,GACjDA,EAAa9uC,MAAQ8uC,EAAa18C,OAIjC08C,CACV,CAEA,YAAAi3B,GACGr3E,MAAMq3E,eAEUp3E,KAAK2nB,WAElB3nB,KAAKs3E,gBACF,kCAAkCt3E,KAAK2hB,SAASm+B,cAChD,CACGA,WAAY9/C,KAAK2hB,SAASm+B,aAKrB9/C,KAAKqtB,gBAEhBrtB,KAAKs3E,gBACF,mCAAmCt3E,KAAK2hB,SAASC,cACjD,CACGA,WAAY5hB,KAAK2hB,SAASC,YAItC,CAEA,oBAAIu0E,GACD,MAAO,GAAGn2F,KAAKf,oBAClB,CAUA,gBAAMm3F,CAAWC,GACd,IAAKA,EAAe,OAEf3wF,MAAMC,QAAQ0wF,KAAgBA,EAAgB,CAACA,IAEpD,IAAIC,QACMt2F,KAAKO,GAAGwP,QAAQnH,IAAI5I,KAAKm2F,mBAAsB,GAUzD,OARAE,EAAcrwF,SAASojB,IACpB,GAAY,MAARA,EAAc,OAElB,MAAMjB,EAASiB,EAAKznB,MAAQynB,EAAKnqB,IAAMmqB,EACvCktE,EAAiBA,EAAe3zF,QAAQ1D,GAAOA,GAAMkpB,IACrDmuE,EAAe/kE,QAAQpJ,EAAO,IAG1BnoB,KAAKO,GAAGwP,QAAQE,IAAIjQ,KAAKm2F,iBAAkBG,EACrD,CAQA,mBAAMd,CAAcjtF,GACjB,IAAKA,GAAS3G,OAAQ,OAAO2G,EAE7B,MAAM+tF,QAAuBt2F,KAAKO,GAAGwP,QAAQnH,IAAI5I,KAAKm2F,kBACtD,IAAKG,GAAgB10F,OAAQ,OAAO2G,EAE/B7C,MAAMC,QAAQ4C,KAAUA,EAAU,CAACA,IAExCA,EAAQmY,MAAK,CAACE,EAAGC,KACd,MAAM01E,EAAM31E,EAAEjf,MAAQif,EAAE3hB,IAAM2hB,EACxB41E,EAAM31E,EAAElf,MAAQkf,EAAE5hB,IAAM4hB,EAE9B,OAAOy1E,EAAe9uF,QAAQgvF,GAAOF,EAAe9uF,QAAQ+uF,EAAI,GAEtE,oBC/8BH,MAAMnzC,EAAkB,EAAQ,OAEhCzjD,EAAOC,QAAU,cAA0BwjD,EACxC,WAAAtjD,CAAYyF,EAAQuf,GACjB/kB,MAAMwF,EAAQuf,EACjB,CAMA,OAAAhN,GAKG,OAJkB/X,MAAM+X,SAK3B,CAOA,YAAAyoE,CAAah4E,GACV,MAAMmJ,EAAS3R,MAAMwgF,aAAah4E,GAuClC,OAlCAmJ,EAAOqgF,OAAwC,MAA/B/xF,KAAKO,GAAG6E,SAASnD,WAAqB,WAAa,OAGnEyP,EAAOg8C,UAAW,EAOlBh8C,EAAO69D,SAAY/4D,GACZA,EAAIw7E,OAAex7E,EAAIxW,KAAKiiB,YAEzBjiB,KAAK6X,OAAOrB,GAGtB9E,EAAOmG,OAAUyV,IACd,MAAMrD,EAAU,CAAC,EAGjB,OAFAA,EAAQjqB,KAAKiiB,YAAcqL,EAEpBttB,KAAK6X,OAAOoS,EAAQ,EAG9BvY,EAAO6gF,WAAcjlE,GAGT,IAALA,GAAgB,MAALA,EACL,GAIHttB,KAAKO,GAAGqZ,MAAMlC,OAAO4V,GAGxB5b,CACV,CAWA,aAAAs6D,GAGG,MAAMyqB,EAAuB12F,MAAMisE,cAAc,cASjD,OANAyqB,EAAqBzmD,OAAS,KACpB,CACJvtC,IAAK,eAIJg0F,CACV,CAEA,mBAAAzhC,GAGG,MAAMyhC,EAAuB12F,MAAMisE,cAAc,eASjD,OANAyqB,EAAqBzmD,OAAS,KACpB,CACJvtC,IAAK,gBAIJg0F,CACV,CAEA,eAAAlsB,GACG,MAAM0nB,EAAyBlyF,MAAMwqE,kBAQrC,OANA0nB,EAAuBjiD,OAAS,KACtB,CACJvtC,IAAK,eAIJwvF,CACV,CAEA,YAAA/uC,CAAaxB,EAAYuB,GACtB,OAAO7/C,MAAM2U,KAAKosC,UAAUzC,EAArBt+C,CAAiC6/C,EAC3C,CAGA,MAAAprC,CAAOoS,GACJ,IAAKzb,OAAOkoF,YAAa,OAAO32F,MAAM8X,OAAOoS,GAC7C,MAAMqD,EAAIttB,KAAKogD,UAAUn2B,GAEzB,GAAS,IAALqD,GAAgB,MAALA,EACZ,MAAO,GAEV,MAAMw1B,EAAU9iD,KAAKO,GAAGqZ,MAAMlC,OAAO4V,GAOrC,OALmBttB,KAAK2hB,SAAS+/B,YAKf,EACRt+C,MAAMqlF,KAAKkO,kBAAkB7zC,GAE7B1/C,MAAMqlF,KAAKpB,cAAcvkC,EAEtC,oBC9IH,MAAM8zC,EAAsB,EAAQ,OAEpCj3F,EAAOC,QAAU,cAA8Bg3F,EAC5C,WAAA92F,CAAYyF,EAAQuf,GACjB/kB,MAAMwF,EAAQuf,EACjB,CAmBA,YAAAy7D,CAAah4E,GACV,MAAMmJ,EAAS3R,MAAMwgF,aAAah4E,GA4ClC,OAzCgC,GAA5BvI,KAAK2hB,SAAS+/B,WACfhwC,EAAOqgF,OAAS,OAEhBrgF,EAAOqgF,OACsC,MAA1C/xF,KAAKO,GAAG6E,SAASlF,SAASgC,aACrB,eACA,WAIXwP,EAAOg8C,UAAW,EAOlBh8C,EAAO69D,SAAY/4D,GACZA,EAAIw7E,OAAex7E,EAAIxW,KAAKiiB,YAEzBjiB,KAAK6X,OAAOrB,GAGtB9E,EAAOmG,OAAUyV,IACd,MAAMrD,EAAU,CAAC,EAGjB,OAFAA,EAAQjqB,KAAKiiB,YAAcqL,EAEpBttB,KAAK6X,OAAOoS,EAAQ,EAG9BvY,EAAO6gF,WAAcjlE,GAGT,IAALA,GAAgB,MAALA,EACL,GAIHttB,KAAKO,GAAGqZ,MAAMlC,OAAO4V,GAGxB5b,CACV,CAWA,aAAAs6D,GAGG,MAAMyqB,EAAuB12F,MAAMisE,cAAc,cASjD,OANAyqB,EAAqBzmD,OAAS,KACpB,CACJvtC,IAAK,eAIJg0F,CACV,CAEA,mBAAAzhC,GAGG,MAAMyhC,EAAuB12F,MAAMisE,cAAc,mBASjD,OANAyqB,EAAqBzmD,OAAS,KACpB,CACJvtC,IAAK,oBAIJg0F,CACV,CAEA,eAAAlsB,GACG,MAAM0nB,EAAyBlyF,MAAMwqE,kBAQrC,OANA0nB,EAAuBjiD,OAAS,KACtB,CACJvtC,IAAK,eAIJwvF,CACV,CAGA,MAAAp6E,CAAOoS,GACJ,IAAKzb,OAAOkoF,YAAa,OAAO32F,MAAM8X,OAAOoS,GAC7C,MAAMqD,EAAIttB,KAAKogD,UAAUn2B,GAEzB,GAAS,IAALqD,GAAgB,MAALA,EACZ,MAAO,GAEV,MAAMw1B,EAAU9iD,KAAKO,GAAGqZ,MAAMlC,OAAO4V,GAE/Bo0B,EAAa1hD,KAAK2hB,SAAS+/B,WAG3Bm1C,EAAYzzF,MAAM2U,KAAKosC,UAAUnkD,KAAKikD,iBAE5C,OAAIvC,GAAc,EACR,GAAGt+C,MAAMqlF,KAAKkO,kBAAkB7zC,MAAY+zC,EAChD/zC,KAGI,GAAG1/C,MAAMqlF,KAAKpB,cAAcvkC,MAAY+zC,EAAU/zC,IAE/D,oBCjJH,MAAMg0C,EAAmB,EAAQ,MAEjCn3F,EAAOC,QAAU,cAA2Bk3F,EAsBzC,YAAAvW,CAAah4E,GACV,MAAMmJ,EAAS3R,MAAMwgF,aAAah4E,GAIlC,OAFAmJ,EAAOqgF,OAAS,OAETrgF,CACV,CAWA,aAAAs6D,GAGG,MAAMyqB,EAAuB12F,MAAMisE,gBAYnC,OATAyqB,EAAqBzmD,OAAS,KACpB,CACJvtC,IAAK,UACLkf,SAAU,CACP5Y,KAAM,YAKR0tF,CACV,CAEA,mBAAAzhC,GAGG,MAAMyhC,EAAuB12F,MAAMisE,gBAUnC,OAPAyqB,EAAqBzmD,OAAS,KACpB,CACJvtC,IAAK,eACLkf,SAAU,CAAC,IAIV80E,CACV,CAEA,eAAAlsB,GACG,MAAM0nB,EAAyBlyF,MAAMwqE,kBAQrC,OANA0nB,EAAuBjiD,OAAS,KACtB,CACJvtC,IAAK,eAIJwvF,CACV,oBCrFH,MAAM8E,EAAkB,EAAQ,OAE1BjqE,EAAI,IAAIjkB,IAAWtI,GAAGgD,aAAaC,SAASqF,GAElDlJ,EAAOC,QAAU,cAA0Bm3F,EACxC,WAAAj3F,CAAYyF,EAAQuf,GACjB/kB,MAAMwF,EAAQuf,EACjB,CAMA,OAAAhN,GAKG,OAJkB/X,MAAM+X,SAK3B,CAMA,aAAMpQ,GACH,OAAO,IAAIlG,SAAQ,CAAC9B,EAASoK,KAErB9J,KAAKf,GAMVmE,MAAMY,QAAQ,CACXV,MAAOwpB,EAAE,eACTppB,QAASopB,EAAE,mDAAoD,CAC5D9sB,KAAKwD,QAERS,SAAUwuB,MAAOvuB,IAGdlE,KAAK2hB,SAAS6iC,mBAAqBtgD,EAAS,EAAI,EAEhD,UACSlE,KAAK2H,OAGXvE,MAAMC,MAAM,CACTC,MAAO,aACPG,KAAM,8DAIH1D,MAAM2H,UAEZhI,GACH,CAAE,MAAOyB,GACN2I,EAAO3I,EACV,KA9BHzB,GAgCD,GAER,CAOA,YAAA6gF,CAAah4E,GACVA,EAAUA,GAAW,CAAC,EAEtB,MAAMmJ,EAAS3R,MAAMwgF,aAAah4E,GAElCmJ,EAAOqgF,QAAS,EAEhB,MAAMrkC,EAAWnlD,EAAQmlD,SAmBzB,OAhBAh8C,EAAO69D,SAAY7jE,GACZA,EAAIsmF,OAAehyF,KAAKogD,UAAU10C,GAEtB,CACb,wDACA,0CACA,+BACA1L,KAAKg3F,aAAatrF,EAAKgiD,GACvB,SACA,SACA,UACDtkD,KAAK,IAKHsI,CACV,CAUA,aAAAuvE,CAAczqE,EAAK0lB,EAAK4kD,EAAMv4E,GAE3B,IAAKu4E,EACF,OAEHv4E,EAAUA,GAAW,CAAC,EAEtB,IAAI0uF,EAAY,GACZC,EAAc,EAEdl3F,KAAK2hB,SAASijC,eAAiB5kD,KAAK2hB,SAAS+iC,WAC9CuyC,EAAYj3F,KAAK2hB,SAAS+iC,SAAShhC,MAAM,MAGxC1jB,KAAK2hB,SAASgjC,eAAiB3kD,KAAK2hB,SAAS8iC,WAC9CyyC,EAAcl3F,KAAK2hB,SAAS8iC,UAM/B,MAAM0yC,EAAkBrW,EAAKrD,cAAc,mBAC3C,GAAI0Z,EAAiB,CAClBA,EAAgB3lD,UAAY,GAM5B,MAAM4lD,EAAiBh0F,MAAMw8D,GAAG,CAC7B78C,KAAM,WACNs0E,UAAWF,EAEX5nB,SAAUvvE,KAAKg3F,aAAaxgF,EAAKjO,EAAQmlD,UAEzC84B,YAAY,EACZjlC,MAAO,IACPwO,OAAQ,KAQX,GANA3sD,MAAMm4E,OAAO6b,EAAgBh0F,MAAMusF,cAM9BpnF,EAAQmlD,SAAU,CACpB,MAAM4pC,EAAUH,EAAgB1Z,cAAc,iBAG9C,YAFI6Z,IAASA,EAAQxN,MAAM9M,QAAU,QAGxC,CAEA,MAAM36E,EAAMrC,KAAKu3F,WAAU,GAErBC,EAAWp0F,MAAMw8D,GAAG,CACvB78C,KAAM,WACN00E,SAAS,EACTC,OAAQr1F,EACRs1F,UAAW,OACXC,UAAU,EACV32F,GAAI,CAED42F,gBAAiB,SAAUzuE,GACxB03D,EAAKgX,UAAUvmF,OAAO,iBACtBuvE,EAAKgX,UAAUvmF,OAAO,sBAGtB,MAAMwmF,EAAkBd,EACxB,GAAIc,GAAsC,IAAnBA,EAAuB,CAC3C,MAAMhvF,EAAOqgB,EAAKrgB,KAAK0E,cACvB,IAAsC,GAAlCsqF,EAAgBvwF,QAAQuB,GAMzB,OALA3F,MAAMM,QACHopB,EAAE,iCAAkC,CACjCirE,EAAgB3uF,KAAK,UAGpB,CAEb,CAIA,GAAI8tF,EAAc,EAAG,CAClB,MAAMc,EAAgC,IAAdd,EACxB,GAAI9tE,EAAK6uE,KAAOD,EAIb,OAHA50F,MAAMM,QACHopB,EAAE,6BAA8B,CAACoqE,MAE7B,CAEb,CAGAE,EAAe3c,aAAa,CACzB1xE,KAAM,OACNg1E,MAAO,KAEb,EAGAma,aAAczlE,MAAOrJ,EAAMve,KACxBusF,EAAenc,eAGf,MAAM11E,EAAS,CAAC,EAMhB,GALAA,EAAOvF,KAAKiiB,YAAc,CAAC,EAC3B1c,EAAOvF,KAAKiiB,YAAYtgB,KAAOkJ,EAASzJ,KAAKO,KAC7C4D,EAAOvF,KAAKiiB,YAAY4iC,SAAWz7B,EAAKxd,KAGpC4K,EAAIvX,GACL,UACSe,KAAK8kB,OAAOzY,QAAQ+yE,OAAO5oE,EAAIvX,GAAIsG,GAGrCinB,GAAGs0D,IAASt0D,GAAGs0D,GAAMlzD,YACtBpB,GAAGs0D,GAAMlzD,WAAWpX,EAAIvX,GAAIsG,EAClC,CAAE,MAAOpE,GACN2/E,EAAKgX,UAAUp/E,IAAI,iBACnBooE,EAAKgX,UAAUp/E,IAAI,sBAEnB1Y,KAAKO,GAAGoJ,OAAOC,UAAUzI,EAAK,CAC3BD,QACG,wDACHsV,IAAKA,EACLjR,OAAQA,GAEd,CAIHvF,KAAKk0B,SAAS1H,GAAGs0D,GAAOv7E,EAAO,EAIlC4yF,kBAAmB,CAAC/uE,EAAMve,KACvB7K,KAAKO,GAAGoJ,OAAOC,UAAU,IAAItK,MAAM,sBAAuB,CACvDoE,QACG,sDACHmH,aAEHusF,EAAenc,cAAc,KAItCuc,EAASY,YAAYhB,EAAevN,OAGpC/I,EAAKuX,QAAoB,WAAIb,EAAS9lF,OAAOzS,GAG7C6hF,EAAKryE,iBAAiB,SAAUpP,IACzBA,EAAE65D,OAAOkD,UAAU50D,QAAQ,iBAAmB,IAC/CxH,KAAKs4F,YAAa,EACrB,GAEN,CACH,CAUA,UAAA5G,CAAWl7E,EAAK0lB,EAAK4kD,GAClB,GAAuB,GAAnB9gF,KAAKs4F,kBAECt4F,KAAKs4F,WAGZl1F,MAAMY,QAAQ,CACXV,MAAO,GACPG,KAAMqpB,EAAE,8CACR7oB,SAAUwuB,MAAOvuB,IAEd,KADsBA,EACH,CAEhB,MAAMqB,EAAS,CAAC,EAIhB,GAFAA,EAAOvF,KAAKiiB,YAAc,CAAC,EAEvBzL,EAAIvX,GACL,UACSe,KAAK8kB,OAAOzY,QAAQ+yE,OAAO5oE,EAAIvX,GAAIsG,GAGrCinB,GAAGs0D,IAASt0D,GAAGs0D,GAAMlzD,YACtBpB,GAAGs0D,GAAMlzD,WAAWpX,EAAIvX,GAAIsG,EAClC,CAAE,MAAOpE,GACN2/E,EAAKgX,UAAUp/E,IAAI,iBACnBooE,EAAKgX,UAAUp/E,IAAI,sBAEnB1Y,KAAKO,GAAGoJ,OAAOC,UAAUzI,EAAK,CAC3BuC,QACG,sDACH8S,IAAKA,EACLjR,OAAQA,GAEd,MAIAvF,KAAKk0B,SAAS1H,GAAGs0D,GAAOv7E,EAE9B,SAGF,CACJ,MAAM0kB,EAAUjqB,KAAKogD,UAAU5pC,GAC/B,IAAKyT,IAAYA,EAAQtoB,KAAM,CAC5B,MAAM42F,EAAazX,EAAKuX,QAAoB,WACzCb,EAAWhrE,GAAG+rE,GAEbf,GAAYA,EAASgB,YACtBhB,EAASgB,WAAW,CAAEC,MAAOjiF,EAAIvX,IACvC,CACH,CAEA,OAAO,CACV,CAWA,aAAA+sE,GACG,OAAOjsE,MAAMisE,cAAc,cAC9B,CAEA,mBAAAhX,GACG,OAAOj1D,MAAMisE,cAAc,cAC9B,CAEA,eAAAzB,GACG,MAAM0nB,EAAyBlyF,MAAMwqE,kBAQrC,OANA0nB,EAAuBjiD,OAAS,KACtB,CACJvtC,IAAK,iBAIJwvF,CACV,CAIA,YAAA+E,CAAatrF,EAAKgiD,GACf,IAAIgrC,EAAc,GACdC,EAAc,gBACdC,EAAU,GAEVvnF,EAAQ,GACRzF,EAAO,GAEX,MAAMqe,EAAUjqB,KAAKogD,UAAU10C,GAyB/B,OAxBIue,IACD5Y,EAAQ4Y,EAAQtoB,KAChBiK,EAAOqe,EAAQ46B,UAGdxzC,GAASzF,IACV8sF,EAAc,gBACdC,EAAc,GACdC,EAAU,SAAWvnF,GAGX,CACV,mPAAmPqnF,kHAChPhrC,EAAW,QAAQ5gC,EAAE,iCAAmC,WAE3D,oHAAoH8rE,MACjHhtF,GAAQ,SAER8hD,EACK,aAAairC,qGACb,YAETvvF,KAAK,GAGV,CAEA,QAAAsyC,CAAStyB,EAAMa,GACZ,MAAMu6D,EAAOp7D,EAAKygE,MAAMpM,cAAc,yBAChCob,EAAWrU,EAAK/G,cAAc,KAEpC,MAAO,CACJ97E,KAAM6iF,EAAKsU,aAAa,aACxBj0C,SAAUg0C,EAASrnD,UAEzB,CAEA,QAAAtd,CAAS9K,EAAMa,GACZ,IAAKb,EAAM,OAEX,MAAMkuE,EAAUluE,EAAKygE,MACrB,IAAKyN,EAAS,OAEd,IAAIpuF,EAAM,KACN+gB,IACD/gB,EAAMlJ,KAAKogD,UAAUn2B,IAQxB,MAAM8uE,EAAWzB,EAAQ7Z,cAAc,yBACnCsb,IAAUA,EAASjP,MAAM9M,QAAU9zE,GAAOA,EAAIvH,KAAO,OAAS,SAElE,MAAM6iF,EAAO8S,EAAQ7Z,cAAc,yBACnC,GAAI+G,EAAM,CACP,MAAMwU,EAAiBxU,EAAK/G,cAAc,oBACtCub,IACDA,EAAelP,MAAM9M,QAAU9zE,GAAOA,EAAIvH,KAAO,QAAU,QAE9D6iF,EAAKsF,MAAM9M,QAAU9zE,GAAOA,EAAIvH,KAAO,QAAU,OAC7CuH,GAAOA,EAAIvH,KAAM6iF,EAAKyR,aAAa,YAAa/sF,EAAIvH,MACnD6iF,EAAKyU,gBAAgB,aAE1B,MAAMJ,EAAWrU,EAAK/G,cAAc,KAC9Bmb,EAAU,UAAY1vF,EAAMA,EAAIvH,KAAO,IAC7Ck3F,EAASj8E,KAAOg8E,EAChBC,EAASrnD,UAAYtoC,EAAMA,EAAI27C,SAAW,EAC7C,CACH,CAYA,SAAA0yC,CAAU2B,GAAU,GACjB,MAAO,gBAAgBl5F,KAAK8kB,OAAO7lB,MAAMe,KAAKf,MAAMi6F,EAAU,IAAM,KACvE,CAQA,OAAAC,CAAQl6F,GACL,MAAO,SAASA,GACnB,oBCldH,MAAMm6F,EAAqB,EAAQ,OAEnCz5F,EAAOC,QAAU,cAA6Bw5F,EAsB3C,YAAA7Y,CAAah4E,GACV,MAAMmJ,EAAS3R,MAAMwgF,aAAah4E,GAUlC,OARAmJ,EAAOqgF,OAAS,KAChBrgF,EAAOqb,IAAM,WACbrb,EAAO69D,SAAYtlD,GACZA,EAAQ+nE,OAAe/nE,EAAQjqB,KAAKiiB,YAEjCjiB,KAAK6X,OAAOoS,GAGfvY,CACV,CAWA,aAAAs6D,GAEG,OAAOjsE,MAAMisE,cAAc,gBAC9B,CAEA,mBAAAhX,GACG,OAAOj1D,MAAMisE,cAAc,uBAC9B,CAEA,eAAAzB,GACG,MAAM0nB,EAAyBlyF,MAAMwqE,kBAQrC,OANA0nB,EAAuBjiD,OAAS,KACtB,CACJvtC,IAAK,eAIJwvF,CACV,mBClEH,MAAMoH,EAAmB,EAAQ,OAE3BvsE,EAAI,IAAIjkB,IAAWtI,GAAGgD,aAAaC,SAASqF,GAElDlJ,EAAOC,QAAU,cAA2By5F,EACzC,WAAAv5F,CAAYyF,EAAQuf,GACjB/kB,MAAMwF,EAAQuf,EACjB,CAUA,aAAMpd,GACH,OAAO,IAAIlG,SAAQ,CAAC9B,EAASoK,KAEtB9J,KAAKf,GAENmE,MAAMY,QAAQ,CACXV,MAAOwpB,EAAE,gBACTppB,QAASopB,EAAE,oDAAqD,CAC7D9sB,KAAKwD,QAERS,SAAUwuB,MAAOvuB,IAGdlE,KAAK2hB,SAAS6iC,mBAAqBtgD,EAAS,EAAI,EAEhD,UACSlE,KAAK2H,OAGXvE,MAAMC,MAAM,CACTC,MAAO,aACPG,KAAM,sFAGH1D,MAAM2H,UAEZhI,GACH,CAAE,MAAOyB,GACN2I,EAAO3I,EACV,KAINzB,GACH,GAEN,CAMA,iBAAA45F,CAAkB5tF,EAAK6tF,GAIpB,OAAIA,EACM,GAAGv5F,KAAKiiB,WAAWrc,QAAQ,KAAM,QAAQ2zF,UAEzC,GAAGv5F,KAAKiiB,WAAWrc,QAAQ,KAAM,QAAQ8F,EAAIzM,UAE1D,CAGA,YAAAshF,CAAah4E,GACVA,EAAUA,GAAW,CAAC,EAEtB,MAAMmJ,EAAS3R,MAAMwgF,aAAah4E,GAC5BomB,EAAQ3uB,KAEd0R,EAAOqgF,QAAS,EAGhB,IAAIyH,EAAkB,OAClBlzC,EAAc,OACd/E,EAAQ,OACRk4C,EAAiB,OACrB,GAAI9qE,EAAMhN,SAASwkC,SAAU,CAC1Bz0C,EAAO6vC,MAAQ5yB,EAAMhN,SAASykC,YAAc,IAC5C,MAAMszC,EACH/qE,EAAMhN,SAAS0kC,WAAa13B,EAAMhN,SAAS2kC,YACtC33B,EAAMhN,SAAS2kC,YAAc,GAC7B,GACRkzC,EAAkB,GAAGE,MACrBn4C,EAAQ,GAAG5yB,EAAMhN,SAASykC,YAAc,QACxCE,EACG33B,EAAMhN,SAAS0kC,WAAa13B,EAAMhN,SAAS2kC,YACtC33B,EAAMhN,SAAS2kC,YACf,GACRA,EAAc,GAAGA,MACjBmzC,EACG9qE,EAAMhN,SAAS0kC,WAAa13B,EAAMhN,SAAS2kC,YACtC33B,EAAMhN,SAAS2kC,YACf,GACRmzC,EAAiB,GAAGA,KACvB,MAAWlxF,EAAQg5C,QAChB7vC,EAAO6vC,MAAQh5C,EAAQg5C,OAAS,IAChCA,EAAQ,GAAGh5C,EAAQg5C,OAAS,QAC5B+E,EAAc/9C,EAAQg5C,MACtB+E,EAAc,GAAGA,MACjBmzC,EAAiBlxF,EAAQg5C,MACzBk4C,EAAiB,GAAGA,OAGpB9qE,EAAMhN,SAAS0kC,WACf13B,EAAMhN,SAAS2kC,aACe,OAA9B33B,EAAMhN,SAAS2kC,cAEf50C,EAAOq+C,OAASphC,EAAMhN,SAAS2kC,aAAe,EAC9CkzC,EAAkBv5E,SAASvO,EAAOq+C,QAAU,GAC5CypC,EAAkB,GAAGA,MACrBlzC,EAAcrmC,SAASvO,EAAOq+C,QAC9BzJ,EAAc,GAAGA,MACjBmzC,EAAiBx5E,SAASvO,EAAOq+C,QACjC0pC,EAAiB,GAAGA,OAGvB,MAAM/rC,EAAWnlD,EAAQmlD,SA4BzB,OAxBAh8C,EAAO69D,SAAY7jE,GACZA,EAAIsmF,OAAetmF,EAAI1L,KAAKiiB,YAMjB,CACZ,+DAL0Bs/B,cAAkBi4C,MAM5C,yDAJ0Bj4C,cAAkB+E,MAK5C,+BACAtmD,KAAK25F,cAAcjuF,EAAK,CACrBgiD,SAAUA,EACVqC,OAAQ0pC,EACRl4C,MAAOA,IAEV,SACA,SACA,UACDn4C,KAAK,IAKHsI,CACV,CAcA,aAAAuvE,CAAczqE,EAAK0lB,EAAK4kD,EAAMv4E,GAE3B,IAAKu4E,EACF,OAGHv4E,EAAUA,GAAW,CAAC,EAKtB,MAAM4uF,EAAkBrW,EAAKrD,cAAc,oBAC3C,GAAI0Z,EAAiB,CAClBA,EAAgB3lD,UAAY,GAG5B,IAAIooD,EAAY,EACZ55F,KAAK2hB,SAAS0kC,YACfuzC,EAAY35E,SAASjgB,KAAK2hB,SAAS2kC,cAAgBszC,GAGtD,IAAIC,EAAW,EACX75F,KAAK2hB,SAASwkC,WACf0zC,EAAW55E,SAASjgB,KAAK2hB,SAASykC,aAAeyzC,GAGhDtxF,EAAQwnD,SAAQ6pC,EAAYrxF,EAAQwnD,QAEpCxnD,EAAQg5C,QAAOs4C,EAAWtxF,EAAQg5C,OAMtC,MAAM61C,EAAiBh0F,MAAMw8D,GAAG,CAC7B78C,KAAM,WACNgK,IAAK,kBAELsqE,UAAWF,EAEX5nB,SAAUvvE,KAAK25F,cAAcnjF,EAAK,CAC/Bk3C,SAAUnlD,EAAQmlD,SAClBqC,OAAQ6pC,EAAYA,EAAY,KAAO,EACvCr4C,MAAOs4C,EAAWA,EAAW,KAAO,IAGvCrT,YAAY,EACZz2B,OAAQ6pC,EACRr4C,MAAOs4C,IAQV,GANAz2F,MAAMm4E,OAAO6b,EAAgBh0F,MAAMusF,cAM9BpnF,EAAQmlD,SAAU,CACpB,MAAM4pC,EAAUH,EAAgB1Z,cAAc,iBAE9C,YADI6Z,IAASA,EAAQxN,MAAM9M,QAAU,QAExC,CAEA,MAAM36E,EAAMrC,KAAKu3F,YAEXC,EAAWp0F,MAAMw8D,GAAG,CACvB78C,KAAM,WAEN00E,SAAS,EACTC,OAAQr1F,EACRs1F,UAAW,OACXC,UAAU,EACVltF,OAASgX,IACFA,EAAEo4E,UACH1C,EAAenc,eACfmc,EAAe3c,aAAa,CACzB1xE,KAAM,MACNi/C,SAAUtmC,EAAEo4E,QAAU,MAE5B,EAQH74F,GAAI,CAED42F,gBAAkBzuE,IACf03D,EAAKgX,UAAUvmF,OAAO,iBACtBuvE,EAAKgX,UAAUvmF,OAAO,sBAGtB,MAAMwmF,EAAkB,CACrB,MACA,OACA,MACA,MACA,MACA,QAEGhvF,EAAOqgB,EAAKrgB,KAAK0E,cACvB,IAAsC,GAAlCsqF,EAAgBvwF,QAAQuB,GAMzB,OALA3F,MAAMM,QACHopB,EAAE,kCAAmC,CAClCirE,EAAgB3uF,KAAK,UAGpB,EAEVpJ,KAAK+5F,kBAAmB,EAExB,IAAInV,EAAS,IAAIC,WACjBD,EAAOzoE,OAAU9c,IACdW,KAAKg6F,UAAU,KAAMlZ,EAAMzhF,EAAE65D,OAAOh1D,QACpCkzF,EAAe3c,aAAa,CACzB1xE,KAAM,MACNg1E,MAAO,KACR,EAEL6G,EAAOqV,cAAc7wE,EAAKo7D,KAAK,EAIlC0T,aAAczlE,MAAOrJ,EAAMve,KACxBusF,EAAenc,eACfj7E,KAAKg6F,UAAUnvF,EAASzJ,KAAKO,KAAMm/E,GACnC9gF,KAAK+5F,kBAAmB,EAExB,MAAMx0F,EAAS,CAAC,EAIhB,GAHAA,EAAOvF,KAAKiiB,YAAcpX,EAASzJ,KAAKO,KAGpC6U,EAAIvX,GACL,IAIG,SAHMe,KAAK8kB,OAAOzY,QAAQ+yE,OAAO5oE,EAAIvX,GAAIsG,GAItCinB,GAAGs0D,IACHt0D,GAAGs0D,GAAMt4D,SACTgE,GAAGs0D,GAAMt4D,QAAQhS,EAAIvX,IAErButB,GAAGs0D,GAAMlzD,WAAWpX,EAAIvX,GAAIsG,OACxB,CAEJ,MAAM20F,EACHp+E,SAAS2hE,cAAc,iBACtBjxD,GAAG0tE,IAAc1tE,GAAG0tE,GAAW1xE,QAAQhS,EAAIvX,KAC5CutB,GAAG0tE,GAAWtsE,WAAWpX,EAAIvX,GAAIsG,EACvC,CACH,CAAE,MAAOpE,GACN2/E,EAAKgX,UAAUp/E,IAAI,iBACnBooE,EAAKgX,UAAUp/E,IAAI,sBAEnB1Y,KAAKO,GAAGoJ,OAAOC,UAAUzI,EAAK,CAC3BD,QACG,wEACHytB,MAAO3uB,KAAK4H,QACZ4O,MACAjR,UAEN,CAIHvF,KAAKk0B,SAAS1H,GAAGs0D,GAAOv7E,EAAO,EAIlC4yF,kBAAmB,CAAC/uE,EAAMve,KACvB7K,KAAKO,GAAGoJ,OAAOC,UAAU,IAAItK,MAAM,yBAA0B,CAC1D4B,QAAS,+CACTytB,MAAO3uB,KAAK4H,QACZiD,aAEHusF,EAAenc,cAAc,KAItCuc,EAASY,YAAYhB,EAAevN,OAGpC/I,EAAKuX,QAAoB,WAAIb,EAAS9lF,OAAOzS,GAIvB,cAAlB6hF,EAAK1kB,WACN0kB,EAAKryE,iBAAiB,SAAUpP,IACzBA,EAAE65D,OAAOkD,UAAU50D,QAAQ,iBAAmB,IAC/CxH,KAAKm6F,aAAc,EACtB,GAGT,CACH,CAUA,UAAAzI,CAAWl7E,EAAK0lB,EAAK4kD,EAAM7hF,EAAIg3B,GAC5B,GACIA,GAAOA,EAAIijC,OAAOkD,UAAU50D,QAAQ,iBAAmB,GACxDxH,KAAKm6F,mBAEEn6F,KAAKm6F,YACP3jF,EAAI4jF,qBACN5jF,EAAI4jF,mBAAqB,IAE5B5jF,EAAI4jF,mBAAmBp6F,KAAKiiB,aAAc,EAG1C7e,MAAMY,QAAQ,CACXV,MAAOwpB,EAAE,+CACT7oB,SAAUwuB,MAAOvuB,IAEd,KADsBA,EACH,CAEhB,MAAMqB,EAAS,CAAC,EAChBA,EAAOvF,KAAKiiB,YAAc,GAE1B,UACSjiB,KAAK8kB,OAAOzY,QAAQ+yE,OAAO5oE,EAAIvX,GAAIsG,GAGrCinB,GAAGs0D,IAASt0D,GAAGs0D,GAAMlzD,YACtBpB,GAAGs0D,GAAMlzD,WAAWpX,EAAIvX,GAAIsG,GAG/BvF,KAAKk0B,SAAS1H,GAAGs0D,GAAOv7E,EAC3B,CAAE,MAAOpE,GACN2/E,EAAKgX,UAAUp/E,IAAI,iBACnBooE,EAAKgX,UAAUp/E,IAAI,sBAEnB1Y,KAAKO,GAAGoJ,OAAOC,UAAUzI,EAAK,CAC3BD,QACG,uDACHytB,MAAO3uB,KAAK4H,QACZ4O,IAAKA,EACLjR,OAAQA,GAEd,CACH,SAGF,CACJ,MAAMgzF,EAAazX,EAAKuX,QAAoB,WACzCb,EAAWhrE,GAAG+rE,GAEbf,GAAYA,EAASgB,YACtBhB,EAASgB,WAAW,CAAEC,MAAOjiF,EAAIvX,IACvC,CAEA,OAAO,CACV,CAWA,aAAA+sE,GACG,OAAOjsE,MAAMisE,cAAc,cAC9B,CAEA,mBAAAhX,GACG,OAAOj1D,MAAMisE,cAAc,eAC9B,CAEA,eAAAzB,GACG,MAAM0nB,EAAyBlyF,MAAMwqE,kBAQrC,OANA0nB,EAAuBjiD,OAAS,KACtB,CACJvtC,IAAK,gBAIJwvF,CACV,CAEA,aAAA0H,CAAcjuF,EAAKnD,IAChBA,EAAUA,GAAW,CAAC,GACdwnD,OAASxnD,EAAQwnD,QAAU,OACnCxnD,EAAQg5C,MAAQh5C,EAAQg5C,OAAS,OAGjC,IAAIm3C,EAAc,GACd2B,EAAe,gBACfnyB,EAAW,GAEX72D,EAAQ,GACRipF,GAAuB,EACvB5uF,EAAI1L,KAAKiiB,cACV5Q,EAAQ3F,EAAI1L,KAAKiiB,aAEhBvW,EAAI0uF,oBACD1uF,EAAI0uF,mBAAmBp6F,KAAKiiB,cAC7Bq4E,EAAuB5uF,EAAI0uF,mBAAmBp6F,KAAKiiB,aAIrD5Q,GACDqnF,EAAc,gBACd2B,EAAe,GACfnyB,EAAW,yBAAyBloE,KAAKmoE,SAAS92D,SAE9CrR,KAAK2hB,SAAS4kC,kBAAoB+zC,IACnC5B,EAAc,gBACd2B,EAAe,GACfnyB,EAAW,yBAAyBloE,KAAKmoE,SACtCnoE,KAAK2hB,SAAS6kC,uBAKvB,IAAI+zC,EAAO,CACR,6CAA6C7B,6DACI2B,YAAuB9xF,EAAQwnD,WAAWmY,qBAC5F9+D,KAAK,IAeP,OAbAmxF,EAAOA,EAAK30F,QACT,SACA2C,EAAQmlD,SACH,QAAQ5gC,EAAE,uCACV,IAERytE,EAAOA,EAAK30F,QACT,WACA2C,EAAQmlD,SACH,aAAa2sC,qGACb,IAGDE,CACV,CAEA,SAAAP,CAAUr4F,EAAMm/E,EAAMz+E,GACnB,MAAM80F,EAAkBrW,EAAKrD,cAAc,oBAC3C,GAAI0Z,EAAiB,CAClBA,EAAgB1Z,cAAc,0BAA0BqM,MAAM9M,QAC3D,OACH,MAAMpV,EAAQuvB,EAAgB1Z,cAAc,2BAC5C7V,EAAMkiB,MAAM9M,QAAU,GACtBpV,EAAMkiB,MAAM0Q,gBAAkB,QAAQn4F,GAAOrC,KAAKmoE,SAASxmE,OAC3DimE,EAAMquB,aAAa,aAAct0F,EACpC,CACH,CAEA,QAAA+5C,CAAStyB,EAAMa,GAEZ,OADcb,EAAKygE,MAAMpM,cAAc,2BAC1Bqb,aAAa,aAC7B,CAEA,QAAA5kE,CAAS9K,EAAMa,GACZ,IAAKb,EAAM,OAEX,MAAMkuE,EAAUluE,EAAKygE,MACrB,IAAKyN,EAAS,OAEd,IAAIpuF,EAAM,KACN+gB,IACD/gB,EAAMlJ,KAAKogD,UAAUn2B,IAQxB,MAAMwwE,EAAYnD,EAAQ7Z,cAAc,0BACpCgd,IAAWA,EAAU3Q,MAAM9M,QAAU9zE,EAAM,OAAS,IAExD,MAAM0+D,EAAQ0vB,EAAQ7Z,cAAc,2BACpC,GAAI7V,EAAO,CACR,MAAM8yB,EAAkB9yB,EAAM6V,cAAc,oBACxCid,IACDA,EAAgB5Q,MAAM9M,QAAU9zE,EAAM,QAAU,QAEnD0+D,EAAMkiB,MAAM9M,QAAU9zE,EAAM,QAAU,OAElCA,GACD0+D,EAAMkiB,MAAM0Q,gBAAkB,QAAQx6F,KAAKmoE,SAASj/D,OACpD0+D,EAAMquB,aAAa,aAAc/sF,IAEjC0+D,EAAMqxB,gBAAgB,aAE5B,CACH,CAaA,QAAA0B,CAAS1wE,GACN,OAAO,IAAIzoB,SAAQ,CAAC9B,EAASoK,KAC1B,IAAKmgB,EAAQjqB,KAAKiiB,YAAa,OAAOviB,EAAQ,MAE9C,MAAMk7F,EAAM,IAAIC,MAChBD,EAAIE,YAAc,YAClBF,EAAIx+E,QAAU,SAAUjb,GACrB2I,EAAO3I,EACV,EACAy5F,EAAIz+E,OAAS,WACV,MAAM4+E,EAASj/E,SAASE,cAAc,UACtC++E,EAAOx5C,MAAQq5C,EAAIr5C,MACnBw5C,EAAOhrC,OAAS6qC,EAAI7qC,OACRgrC,EAAOC,WAAW,MAC1BC,UAAUL,EAAK,EAAG,GACtB,MACMM,EAAY,CACf95F,KAFa25F,EAAOI,YAGpB55C,MAAOq5C,EAAIr5C,MACXwO,OAAQ6qC,EAAI7qC,QAEfrwD,EAAQw7F,EACX,EAEAN,EAAI3+E,IAAMjc,KAAKmoE,SAASl+C,EAAQjqB,KAAKiiB,YAAY,GAEvD,CASA,QAAAkmD,CAASlpE,GACN,MAAO,SAASA,GACnB,CAYA,SAAAs4F,CAAU2B,GAAU,GACjB,MAAO,gBAAgBl5F,KAAK8kB,OAAO7lB,MAAMe,KAAKf,MAAMi6F,EAAU,IAAM,KACvE,CAUA,WAAA7sE,CAAYjrB,EAAM0U,GACf/V,MAAMssB,YAAYjrB,EAAM0U,GACpB9V,KAAK+5F,kBACNjkF,EAAU1B,SAASpU,KAAKiiB,WAAY6K,EAAE,yBAC5C,CAEA,UAAAsuE,CAAWC,GACR,OAAOr7F,KAAKO,GAAGS,QAAQsI,IAAI,CACxBjH,IAAK,iBAAiBg5F,oBAE5B,CAEA,WAAAC,CAAYD,GACT,OAAOr7F,KAAKO,GAAGS,QAAQsI,IAAI,CACxBjH,IAAK,iBAAiBg5F,qBAE5B,oBC9oBH,MAAME,EAAkB,EAAQ,OAEhC57F,EAAOC,QAAU,cAA0B27F,EAUxC,YAAAhb,CAAah4E,GACV,MAAMmJ,EAAS3R,MAAMwgF,aAAah4E,GAUlC,OAPAmJ,EAAOqgF,OAAS,OAChBrgF,EAAOqb,IAAM,WAIbrb,EAAO69D,SAAW,IAAM,GAEjB79D,CACV,CAWA,aAAAs6D,GAEG,MAAMyqB,EAAuB12F,MAAMisE,gBAYnC,OATAyqB,EAAqBzmD,OAAS,KACpB,CACJvtC,IAAK,OACLkf,SAAU,CACP5Y,KAAM,YAKR0tF,CACV,CAEA,mBAAAzhC,GACG,OAAOj1D,MAAMisE,cAAc,uBAC9B,CAEA,eAAAzB,GACG,MAAM0nB,EAAyBlyF,MAAMwqE,kBAQrC,OANA0nB,EAAuBjiD,OAAS,KACtB,CACJvtC,IAAK,eAIJwvF,CACV,CAEA,QAAA/9D,CAAS9K,EAAMa,GACZlqB,MAAMm0B,SAAS9K,EAAMa,EAAS,IAC1Bb,IACDA,EAAK1X,OAAOL,MAAQ4Y,EAAQjqB,KAAKiiB,YAEvC,CAUA,aAAAs/D,CAAct3D,GAEC,KADFA,EAAQjqB,KAAKiiB,oBAIbgI,EAAQjqB,KAAKiiB,WAE1B,oBC1FH,MAAMu5E,EAAkB,EAAQ,OAIhC77F,EAAOC,QAAU,cAA0B47F,EACxC,WAAA17F,CAAYyF,EAAQuf,GACjB/kB,MAAMwF,EAAQuf,EAGjB,CAMA,IAAAnd,GACG,OAAO5H,MAAM4H,OAAON,MAAK,KAEtB,GAAIrH,KAAK8mD,iBAAiBllD,OAAQ,CAC/B,MAAMyK,EAAQrM,KAAK8kB,OAAOzY,QAE1B,GAAgC,GAA5BrM,KAAK2hB,SAASglC,WAGf,OAAO,IAAInlD,SAAQ,CAAC9B,EAASoK,KAC1B,IAAI2xF,EAAU,EACVC,EAAU,EAEdrvF,EACI4f,QAAQ,CAAC,GACT5kB,MAAMkoC,KACJA,EAAOA,EAAKnuC,MAAQmuC,GAGfvpC,SAASojB,IACX,GAAI1jB,MAAMC,QAAQyjB,EAAKppB,KAAKiiB,aAAc,CAEvC,IAAI05E,EAAkBvyE,EACnBppB,KAAKiiB,YACNtf,QAAQuD,IAEoC,GAAxClG,KAAK8mD,iBAAiBt/C,QAAQtB,EAAEjH,MAItC,GACG08F,EAAgB/5F,QAChBwnB,EAAKppB,KAAKiiB,YAAYrgB,OACvB,CACC85F,IAG8B,GAA1BC,EAAgB/5F,SACjB+5F,EAAkB,IAErB,MAAMtqF,EAAQ,CAAC,EACfA,EAAMrR,KAAKiiB,YAAc05E,EACzBtvF,EAAM+yE,OAAOh2D,EAAKnqB,GAAIoS,GAAOhK,MAAK,KAG/Bo0F,IACIA,GAAWC,GACZh8F,GACH,GAEN,CACH,KAEY,GAAXg8F,GACDh8F,GACH,IAEF4H,MAAMwC,EAAO,IAEhB,CAEJ,MAAM8hB,EAAQ,CAAC,EAEf,OADAA,EAAM5rB,KAAKiiB,YAAcjiB,KAAK8mD,iBACvB,IAAItlD,SAAQ,CAAC9B,EAASoK,KAC1B,IAAI2xF,EAAU,EAEdpvF,EACI4f,QAAQL,GACRvkB,MAAMkoC,IAEJA,EAAOA,EAAKnuC,MAAQmuC,EAMpB,MAAMl+B,EAAQ,CAAC,EACfA,EAAMrR,KAAKiiB,YAAc,GAEzBstB,EAAKvpC,SAASojB,IACX/c,EAAM+yE,OAAOh2D,EAAKnqB,GAAIoS,GAAOhK,MAAK,KAC/Bo0F,IACIA,GAAWlsD,EAAK3tC,QACjBlC,GACH,GACD,IAEc,GAAf6vC,EAAK3tC,QACNlC,GACH,IAEF4H,MAAMwC,EAAO,GAEvB,CACH,IAEN,CAEA,OAAAgO,GAKG,OAJkB/X,MAAM+X,SAK3B,CAOA,YAAAyoE,CAAah4E,GACVA,EAAUA,GAAW,CAAC,EAEtB,MAAMmJ,EAAS3R,MAAMwgF,aAAah4E,GA4FlC,OA3FcvI,KACIO,GAAG67B,KAIjB7zB,EAAQmlD,UArIR,KAAI7kD,KAAWtI,GAAGgD,aAAaC,SAASqF,EAAO,EAuIYikB,CACzD,eAGYvkB,EAAQmlD,UAAa1tD,KAAK2hB,SAAS2/B,SAErD5vC,EAAO6gF,WAAclhF,GACXrR,KAAKuyF,WAAWlhF,GAE1BK,EAAO8gF,UAAanhF,GACVrR,KAAKwyF,UAAUnhF,GAGzBK,EAAO69D,SAAYtlD,IAChB,IAAIk2B,EAAel2B,EAAQjqB,KAAKiiB,YAChC,GAAoB,MAAhBk+B,EAAsB,MAAO,GAC7BngD,KAAK2hB,SAASglC,aACfxG,EA0SZ,SAA6BxxB,EAAO1E,EAAU,CAAC,GAC5C,IAAI/lB,EAAS,GAkBb,OAjBiC,MAA7B+lB,EAAQ0E,EAAM1M,cACf/d,EAAS+lB,EAAQ0E,EAAM1M,YAEF,iBAAV/d,IAAoBA,EAASyC,KAAKiE,MAAM1G,IAG/CyqB,EAAMhN,WACPzd,GAAUyqB,EAAMhN,SAASpZ,SAAW,IAAI5F,QAAQ2xC,IAEzCpwC,GAAU,IAAIvB,QACXsD,GAAMquC,GAAOruC,IAAMquC,EAAIr1C,IAAMq1C,KAASruC,EAAEhH,IAAMgH,KAChDrE,OAAS,MAMhBsC,CACV,CA9T2B03F,CAAoB57F,KAAMiqB,IAE5C,IAAI1kB,EAAS,GACbA,EAAO6B,KAAK,gCACZ,IAAIy0F,EAAiB,GACjBC,EAAY,GAChB,GACG37C,GACAz6C,MAAMC,QAAQw6C,IACdA,EAAav+C,OAEbu+C,EAAan6C,SAASkD,IACflJ,KAAK2hB,SAASilC,WAAa19C,EAAI89C,MAChC60C,EAAiB,iBACjBC,EAAY,eAAe5yF,EAAI89C,QAE9B99C,EAAIzF,MACL8B,EAAO6B,KACJ,eAAe00F,oCAA4CD,YAAyB3yF,EAAIzF,sCAAmCyF,EAAIjK,iGAErI,IAECkhD,EAAav+C,OAAS,GACvB2D,EAAO6B,KACJ,8CAA8C+4C,EAAav+C,qBAG7D,KAAIu+C,EAoBR,MAAO,GApBe,CACtB,IAAI47C,EAAc57C,EAIlB,GAH2B,iBAAhBA,IACR47C,EAAc/7F,KAAKo0F,eAAej0C,KAEhC47C,EAAa,MAAO,GAKzB,GAJI/7F,KAAK2hB,SAASilC,WAAam1C,EAAY/0C,MACxC60C,EAAiB,iBACjBC,EAAY,eAAeC,EAAY/0C,QAEtC+0C,EAAYt4F,KAAM,CACnB,IAAI6N,EAAQ,GACR/I,EAAQmlD,WAAa1tD,KAAK2hB,SAAS2/B,WACpChwC,EAAQ,0GAEX/L,EAAO6B,KACJ,eAAe00F,oCAA4CD,MAAmBvqF,wBAA4ByqF,EAAYt4F,oBAE5H,CACH,CAEA,CAEA,OADA8B,EAAO6B,KAAK,UACL7B,EAAO6D,KAAK,GAAG,EAEzBsI,EAAOqgF,OAAS/xF,KAAK2hB,SAASglC,WAAa,cAAgB,QAC3Dj1C,EAAO06E,QAAU,CACdsG,QAAQ,EACRtxF,KAAMpB,KAAK2hB,SAASpZ,QAAQzJ,KAAI,SAAUw1C,GACvC,MAAO,CACJr1C,GAAIq1C,EAAIr1C,GACRoS,MAAOijC,EAAI7wC,KACXujD,IAAK1S,EAAI0S,IAEf,KAEChnD,KAAK2hB,SAASglC,aACfj1C,EAAO06E,QAAQrpE,KAAO,gBAGlBrR,CACV,CAUA,aAAAuvE,CAAczqE,EAAK0lB,EAAK4kD,EAAMv4E,GAE3B,GAAKu4E,IAILv4E,EAAUA,GAAW,CAAC,EAEjBu4E,EAAKrD,eAAV,CAEA,IAAIue,EAAclb,EAAKrD,cACpB,4CAECue,GACDA,EAAYvtF,iBAAiB,SAAUpP,IACpCA,EAAE48F,kBACF,IAAI12F,EAAS,CAAC,EACdA,EAAOvF,KAAKiiB,YAAc,GAC1BjiB,KAAK8kB,OACDzY,QACA+yE,OAAO5oE,EAAIvX,GAAIsG,GACf8B,MAAK,KAEHmlB,GAAGs0D,IAAOlzD,aAAapX,EAAIvX,GAAIsG,EAAO,IAExC+B,OAAOnG,IACL2/E,EAAKgX,UAAUp/E,IAAI,iBACnBooE,EAAKgX,UAAUp/E,IAAI,sBAEnB1Y,KAAKO,GAAGoJ,OAAOC,UAAUzI,EAAK,CAC3BuC,QACG,yDACH8S,IAAKA,EACLjR,OAAQ,GACRopB,MAAO3uB,KAAK4H,SACb,GACH,GA5BoB,CA+BlC,CAuBA,aAAAokE,GAGG,MAAMyqB,EAAuB12F,MAAMisE,gBAkBnC,OAfAyqB,EAAqBzmD,OAAS,KACpB,CACJvtC,IAAKzC,KAAK2hB,SAASglC,WAAa,iBAAmB,eACnDhlC,SAAU,CACPpZ,QAASvI,KAAK2hB,SAASpZ,QAAQzJ,KAAI,SAAUw1C,GAC1C,MAAO,CACJr1C,GAAIq1C,EAAIr1C,GACRoS,MAAOijC,EAAI7wC,KACXujD,IAAK1S,EAAI0S,IAEf,OAKFyvC,CACV,CAEA,mBAAAzhC,GACG,MAAMyhC,EAAuB12F,MAAMisE,gBAoBnC,OAjBAyqB,EAAqBzmD,OAAS,KACpB,CACJvtC,IAAKzC,KAAK2hB,SAASglC,WACd,wBACA,sBACLhlC,SAAU,CACPpZ,QAASvI,KAAK2hB,SAASpZ,QAAQzJ,KAAI,SAAUw1C,GAC1C,MAAO,CACJr1C,GAAIq1C,EAAIr1C,GACRoS,MAAOijC,EAAI7wC,KACXujD,IAAK1S,EAAI0S,IAEf,OAKFyvC,CACV,CAEA,eAAAlsB,GACG,MAAM0nB,EAAyBlyF,MAAMwqE,kBAQrC,OANA0nB,EAAuBjiD,OAAS,KACtB,CACJvtC,KAAKzC,KAAK2hB,SAASglC,WAAa,gBAI/BsrC,CACV,CAEA,UAAAM,CAAWlhF,GACR,IAAKA,EAAO,MAAO,GACnB,IAAIguD,EAAO,GACX,GAAI35D,MAAMC,QAAQ0L,GACfA,EAAMrL,SAASkD,IACZ,GAAkB,iBAAPA,EACRm2D,EAAKj4D,KAAK8B,EAAIjK,QACV,CACJ,IAAIk1F,EAAUn0F,KAAKo0F,eAAelrF,GAClCm2D,EAAKj4D,KAAK+sF,EAAQl1F,GACrB,UAGH,GAAoB,iBAAToS,EACRguD,EAAKj4D,KAAKiK,EAAMpS,QACZ,CACJ,IAAIk1F,EAAUn0F,KAAKo0F,eAAe/iF,GAC9B8iF,GAAWA,EAAQl1F,IACpBogE,EAAKj4D,KAAK+sF,EAAQl1F,GAExB,CAEH,OAAOogE,EAAKj2D,MACf,CAEA,SAAAopF,CAAUnhF,GACP,GAAIrR,KAAK2hB,SAASglC,WAAY,CAC3B,IAAI0tC,EAAa,GAKjB,OAJWhjF,EAAMqS,MAAM,KAClB1d,SAASkD,IACXmrF,EAAWjtF,KAAKpH,KAAKo0F,eAAelrF,GAAK,IAErCmrF,CACV,CACG,OAAOhjF,CAEb,CAEA,cAAA+iF,CAAelrF,GACZ,IAAIkgB,EACA7gB,EAAUvI,KAAKuI,UACnB,OAAIA,EAAQ3G,OAAS,GAClB2G,EAAQvC,SAASgwF,IACd,GAAIA,EAAO/2F,IAAMiK,EAEd,OADAkgB,EAAO4sE,GACA,CACV,IAEI5sE,GAEA,EAEb,CAEA,QAAAsyB,CAAStyB,EAAMa,GACZ,OAAOjqB,KAAKwyF,UAAUppE,EAAKsyB,WAC9B,CAEA,kBAAAwgD,CAAmBvtE,EAAO1E,EAAU,CAAC,GAClC,IAAI/lB,EAAS,GAwBb,OAvBgC,MAA5B+lB,EAAQjqB,KAAKiiB,YACd/d,EAAS+lB,EAAQjqB,KAAKiiB,YACdgI,IACJvkB,MAAMC,QAAQskB,GACf/lB,EAAS+lB,EAET/lB,EAAOkD,KAAK6iB,IAGd/lB,EAAOtC,SACa,iBAAVsC,IAAoBA,EAASyC,KAAKiE,MAAM1G,IAG/ClE,KAAK2hB,WACNzd,GAAUlE,KAAK2hB,SAASpZ,SAAW,IAAI5F,QAAQ2xC,IAExCpwC,GAAU,IAAIvB,QAAQsD,IAAOquC,EAAIr1C,IAAMq1C,KAASruC,EAAEhH,IAAMgH,KACrDrE,OAAS,MAMlBsC,CACV,CAEA,QAAAgwB,CAAS9K,EAAMa,GACPb,IAEDppB,KAAK2hB,SAASglC,YAGf5mD,MAAMm0B,SAAS9K,EAAMa,GAE3B,oBChcH,MAAMkyE,EAAsB,EAAQ,OAEpCx8F,EAAOC,QAAU,cAA8Bu8F,EAC5C,WAAAr8F,CAAYyF,EAAQuf,GACjB/kB,MAAMwF,EAAQuf,EAUjB,CAMA,OAAAhN,GAKG,OAJkB/X,MAAM+X,SAK3B,CAOA,YAAAyoE,CAAah4E,GACV,MAAMmJ,EAAS3R,MAAMwgF,aAAah4E,GAQlC,OANAmJ,EAAOqgF,OAAS,OAEhBrgF,EAAO69D,SAAW,CAAC7jE,EAAKskC,EAAQ3+B,EAAOq9E,EAAK0N,KACjC/qF,GAAS,IAAI9J,WAAW3B,QAAQ,OAAQ,QAG5C8L,CACV,CAWA,aAAAs6D,GAGG,MAAMyqB,EAAuB12F,MAAMisE,gBAYnC,OATAyqB,EAAqBzmD,OAAS,KACpB,CACJvtC,IAAK,UACLkf,SAAU,CACP5Y,KAAM,cAKR0tF,CACV,CAEA,mBAAAzhC,GAGG,MAAMyhC,EAAuB12F,MAAMisE,gBAYnC,OATAyqB,EAAqBzmD,OAAS,KACpB,CACJvtC,IAAK,iBACLkf,SAAU,CACP5Y,KAAM,cAKR0tF,CACV,CAEA,eAAAlsB,GACG,MAAM0nB,EAAyBlyF,MAAMwqE,kBAQrC,OANA0nB,EAAuBjiD,OAAS,KACtB,CACJvtC,IAAK,eAIJwvF,CACV,CAYA,QAAA/9D,CAAS9K,EAAMa,GACZlqB,MAAMm0B,SAAS9K,EAAMa,EAAS,GACjC,oBClHH,MAAMoyE,EAAoB,EAAQ,OAElC,IAAIC,GAAc,EAKlB38F,EAAOC,QAAU,cAA4By8F,EAC1C,WAAAv8F,CAAYyF,EAAQuf,GACZw3E,IAEFl5F,MAAMm5F,QAAQjkF,OAASlV,MAAMm4E,OAC1B,CAEA,EACAn4E,MAAMm5F,QAAQ94F,MAEjB64F,GAAc,GAEjBv8F,MAAMwF,EAAQuf,EACjB,CAgBA,YAAAy7D,CAAah4E,GACV,MAAMmJ,EAAS3R,MAAMwgF,aAAah4E,GAWlC,OATAmJ,EAAOqgF,OAAS,SAEhBrgF,EAAOmG,OAAUyV,IACd,MAAMrD,EAAU,CAAC,EAGjB,OAFAA,EAAQjqB,KAAKiiB,YAAcqL,EAEpBttB,KAAK6X,OAAOoS,EAAQ,EAGvBvY,CACV,CAWA,aAAAs6D,GACG,OAAOjsE,MAAMisE,cAAc,YAC9B,CAEA,mBAAAhX,GACG,OAAOj1D,MAAMisE,cAAc,mBAC9B,CAEA,eAAAzB,GACG,MAAM0nB,EAAyBlyF,MAAMwqE,kBAQrC,OANA0nB,EAAuBjiD,OAAS,KACtB,CACJvtC,IAAK,eAIJwvF,CACV,oBCvEH,MAAM/1C,EAAU,EAAQ,OAElBsgD,EAAkB,CACrBC,YAAY,EACZC,YAAY,EACZC,UAAU,EACVC,cAAc,EACdllC,YAAa,GACbkgC,UAAU,GAGPiF,EAA6B,CAChCp6F,IAAK,eAGR9C,EAAOC,QAAU,cAAiCs8C,EAC/C,WAAAp8C,CAAYyF,EAAQuf,EAAQi7B,EAAgB88C,GACzC98F,MAAMwF,EAAQuf,EAAQi7B,EACzB,CAGA,eAAOvkB,GACJ,MAAO,CACJ/4B,IAAK,cACLsb,KAAM,OACNu+B,SAAU,GACVve,YAAa,GAEnB,CAEA,iBAAA++D,CAAkBxF,EAAS31E,EAAUua,EAAK1lB,GACvC,GAAe,MAAX8gF,EAAiB,OAErB,MAAMyF,EAAUp7E,EAASq7E,QAAU,GACnC1F,EAAQrB,aAAa,UAAW8G,GAGhCp7E,EAAWA,GAAY,CAAC,EACxB,IAAK,MAAMoQ,KAAMyqE,EACO,OAAjB76E,EAASoQ,GACVpQ,EAASoQ,GAAM,KAEfpQ,EAASoQ,GAAMpQ,EAASoQ,IAAOyqE,EAAgBzqE,GAgCrD,GA3BGpQ,EAASi2E,UACTj2E,EAASU,OACTV,EAASvgB,MACTugB,EAASvgB,KAAKQ,QAEd+f,EAASvgB,KAAK4E,SAAQ,SAAUsnB,GAC7B3L,EAASU,MAAMvjB,KAAI,SAAUoH,GACtBA,EAAEjH,IAAMquB,EAAEruB,KAAIquB,EAAE05B,IAAM9gD,EAAE8gD,IAC/B,GACH,IACArlC,EAAe,KAAI3hB,KAAKi9F,YACrBt7E,EAAe,KACfA,EAASi2E,WAEgB,MAApBj2E,EAAe,MAAiC,IAApBA,EAAe,KACnDA,EAAe,KAAI3hB,KAAKi9F,YAAY,GAAIt7E,EAASi2E,UAEjDj2E,EAAe,KAAI3hB,KAAKi9F,YACrBt7E,EAAe,KACfA,EAASi2E,UAKfj2E,EAAgB,MAAI3hB,KAAKf,GAGE,MAAvBq4F,EAAQ4F,YAIT,YAFA5F,EAAQ4F,YAAYC,WAAWx7E,GAQlC,IAAIy7E,EAuFJ,GA1FAz7E,EAASga,QAAU27D,EAIf31E,EAASi2E,UACNj2E,EAAS07E,QACV17E,EAAS27E,UAAY,CAClBC,qBAAsB,SAAUh1F,GAC7B,MAAO,mDACJA,EAAQi1F,YAAc,eAAiB,8JAGpCj1F,EAAQ5G,wBAAwBggB,EAASgN,oHAGtChN,EAAS87E,eACJ97E,EAAS87E,eAAel1F,GACxB,uBAErBoZ,EAAS+7E,cAA+B,GAAfn1F,EAAQ9E,yBAEjB8E,EAAQ+/D,UACH,8GACA,2BAGjB,GAGH3mD,EAAS27E,UAAY,CAClBC,qBAAsB,SAAUh1F,GAC7B,MAAO,mDACJA,EAAQi1F,YAAc,eAAiB,iDAEzBj1F,EAAQy+C,mDACnBz+C,EAAQ5G,wBAAwBggB,EAASgN,oCAEtChN,EAASujD,SACJ,qFACA,+BAGLvjD,EAAS87E,eACJ97E,EAAS87E,eAAel1F,GACxB,+BAELoZ,EAAS+7E,cAA+B,GAAfn1F,EAAQ9E,iCAEjC8E,EAAQ+/D,UACH,yFACA,2BAGjB,GAGN80B,EAAmB,IAAIO,YAAYC,OAAOC,SAASl8E,GAEnD21E,EAAQ4F,YAAcE,EACtBp9F,KAAK89F,oBAAoBxG,EAASp7D,EAAK1lB,KAEvCmL,EAAS27E,UAAY,CAClBS,mBAAoB,SAAUx1F,GAC3B,MAAO,gEACJA,EAAQ5G,wBACSggB,EAASgN,0BAEpBhN,EAASujD,SACJ,kFACA,4BAGLvjD,EAAS87E,eACJ97E,EAAS87E,eAAel1F,GACxB,4BAELoZ,EAAS+7E,cAA+B,GAAfn1F,EAAQ9E,8BAEjC8E,EAAQ+/D,UACH,sFACA,yBAGjB,GAGH80B,EAAmB,IAAIO,YAAYC,OAAOI,OAAOr8E,GACjD21E,EAAQ4F,YAAcE,GAGrBz7E,EAASujD,SAAU,CACpB,MAAM+4B,EAAsB,KACzB,MAAMlkC,EAAW/5D,KACXk+F,EAAYpiF,SAAS+hE,iBACxB,oFAEH,IAAK,IAAI33E,EAAI,EAAGA,EAAIg4F,EAAUt8F,OAAQsE,IAAK,CACxC,MAAMi4F,EAAQD,EAAUh4F,GACpBi4F,IAAUA,EAAMC,kBACjBD,EAAM1vF,iBACH,SACA,SAAUpP,GACPA,EAAE48F,kBACF58F,EAAEg/F,iBAEF,MAAMC,EAAYt+F,KAAKu+F,cACvB,IAAKD,EAAW,OAEhB,MAAM7zE,EAAQ6zE,EAAUxF,aAAa,gBACrC,IAAKruE,EAAO,OAEZ,MAAMkoB,EAAU2rD,EAAUxF,aAAa,iBACvC,IAAKnmD,EAAS,OAEd,MAAM6rD,EAAYzkC,EAASj1C,OAAO8C,UAAU+qB,GACvC6rD,GAELA,EAAUj9F,KAAK,WAAYkpB,EAC9B,IACA,GAEH0zE,EAAMC,iBAAkB,EAE9B,GAGH32F,YAAW,KACRw2F,IAEA3G,EAAQ7oF,iBAAiB,UAAU,KAChCwvF,GAAqB,GACtB,GACF,IACN,CAGA,GAAIt8E,EAASg7E,SAAU,CACpB,MAAM8B,EAAanH,EAAQoH,uBAAuB,qBAClD,IAAK,IAAIx4F,EAAI,EAAGA,EAAIu4F,EAAW78F,OAAQsE,IAAK,CACzC,MAAMy4F,EAAWF,EAAWv4F,GACxBy4F,GACDA,EAASC,WAAWC,YAAYF,EAEtC,CACH,CAGA3+F,KAAK8+F,oBAAsBn9E,CAC9B,CAEA,cAAAo9E,CAAezH,GACZ,OAAIA,GAAWA,EAAQ4F,YAChBl9F,KAAK8+F,qBAAuB9+F,KAAK8+F,oBAAoBlH,SAE/CN,EAAQ4F,YAAYhqE,WAAa,GAGjCokE,EAAQ4F,YAAYhqE,WAAa,KAGvClzB,KAAK8+F,qBAAuB9+F,KAAK8+F,oBAAoBlH,SAC/C,GACE,IAElB,CAEA,cAAAoH,CAAe1H,EAASl2F,GAChBk2F,GAAYA,EAAQ4F,cAEzB97F,EAAOpB,KAAKi9F,YAAY77F,EAAMk2F,EAAQ4F,YAAY30F,QAAQqvF,UAGtDlyF,MAAMC,QAAQvE,IAASA,EAAK,IAC5BA,GAAQA,EAAKnC,GAGdq4F,EAAQ4F,YAAY+B,QAAQ79F,GAC1Bk2F,EAAQ4F,YAAY5rF,QAC5B,CAEA,kBAAA4tF,CAAmB5H,GACZA,GAAWA,EAAQ4F,cACpB5F,EAAQ4F,YAAYx1F,iBAEb4vF,EAAQ4F,YAErB,CAEA,WAAAD,CAAY77F,EAAMw2F,GAAW,GAC1B,IAAKx2F,GAAQw2F,EACV,MAAO,GACH,GAAIA,GAAYx2F,GAAQsE,MAAMC,QAAQvE,IAAwB,GAAfA,EAAKQ,OACxD,MAAO,GACH,IAAKg2F,GAAYx2F,GAAQsE,MAAMC,QAAQvE,IAAwB,GAAfA,EAAKQ,OACzD,OAAO,KACH,IAAKR,IAASw2F,EAClB,OAAO,KAGV,GAAmB,iBAARx2F,GAAoBA,EAAKQ,OAAS,EAC1C,IACGR,EAAOuF,KAAKiE,MAAMxJ,EACrB,CAAE,MAAO/B,GAEN+B,EAAO,CAAEnC,GAAImC,EAAMqC,KAAMrC,EAC5B,CAyBH,OArBKw2F,GAAYlyF,MAAMC,QAAQvE,GAC5BA,EAAOA,EAAK,GACJw2F,IAAalyF,MAAMC,QAAQvE,KACnCA,EAAO,CAACA,IAIPw2F,EACDx2F,EAAK4E,SAASsnB,KACNA,EAAEruB,IAAMquB,EAAE3rB,OACZ2rB,EAAEruB,GAAKquB,EAAE3rB,KACZ,KAGEP,EAAKnC,IAAMmC,EAAKO,OAAMP,EAAKnC,GAAKmC,EAAKO,MAGjC,MAARP,GAAgBw2F,IACjBx2F,EAAO,IAGHA,CACV,CAEA,mBAAA08F,CAAoBxG,GACjB,GAAKA,EAAQ6H,cACO7H,EAAQ6H,aACR7H,EAAQiH,cAAcY,aACV,EAAG,CAChC,IAAIz0E,EAAQ,EACRnlB,EAAS,GAKb,GAJI+xF,GAAWA,EAAQ4F,cACpB33F,EAAS+xF,EAAQ4F,YAAYxhD,YAAc,IAE9ChxB,EAAQnlB,EAAO3D,OACX8oB,EAAQ,EAAG,CACZ,MAAM00E,EAAQ9H,EAAQ7Z,cACnB,iCAEH,GAAa,MAAT2hB,EACDA,EAAM5tD,UAAY9mB,MACd,CACJ,MAAM20E,EAASvjF,SAASE,cAAc,KACtCqjF,EAAOziF,KAAO,sBAMd,MAAMkkE,EAAOhlE,SAASE,cAAc,QAC9BsjF,EAAWxjF,SAASyjF,eAAe70E,GACzCo2D,EAAKgX,UAAUp/E,IAAI,cAAe,oBAClCooE,EAAKzkE,YAAYijF,GACjBD,EAAOhjF,YAAYykE,GACnBwW,EAAQj7E,YAAYgjF,EACvB,CACH,CACH,CACH,oBCnWH,MAAMG,EAAoB,EAAQ,OAElC7/F,EAAOC,QAAU,cAA4B4/F,EAkB1C,YAAAjf,CAAah4E,GACV,MAAMmJ,EAAS3R,MAAMwgF,aAAah4E,GAclC,OAZAmJ,EAAOqgF,OAAS,OAChBrgF,EAAOqb,IAAM,WAEbrb,EAAO69D,SAAW,CAAC7jE,EAAKskC,EAAQ3+B,IAExB3F,EAAIsmF,OAGC,IAFC3gF,GAAS,IAAI9J,WAAW3B,QAAQ,OAAQ,QAM/C8L,CACV,CAQA,YAAA02B,CAAa7iC,GAELA,EAAOvF,KAAKiiB,aAEVjiB,KAAK2hB,SAASouB,UACX/vC,KAAK2hB,SAASouB,QAAQvoC,QAAQ,WAAa,EAC5CjC,EAAOvF,KAAKiiB,YAAcjiB,KAAKO,GAAGoB,OAElC4D,EAAOvF,KAAKiiB,YAAcjiB,KAAK2hB,SAASouB,QAIpD,CAWA,aAAAi8B,GAGG,MAAMyqB,EAAuB12F,MAAMisE,gBAYnC,OATAyqB,EAAqBzmD,OAAS,KACpB,CACJvtC,IAAK,UACLkf,SAAU,CACP5Y,KAAM,YAKR0tF,CACV,CA6BA,mBAAAzhC,GAGG,MAAMyhC,EAAuB12F,MAAMisE,gBAYnC,OATAyqB,EAAqBzmD,OAAS,KACpB,CACJvtC,IAAK,iBACLkf,SAAU,CACP5Y,KAAM,YAKR0tF,CACV,CAEA,eAAAlsB,GACG,MAAM0nB,EAAyBlyF,MAAMwqE,kBAQrC,OANA0nB,EAAuBjiD,OAAS,KACtB,CACJvtC,IAAK,eAIJwvF,CACV,CAYA,QAAA/9D,CAAS9K,EAAMa,GACZlqB,MAAMm0B,SAAS9K,EAAMa,EAAS,GACjC,oBC1JH,MAAMw1E,EAAyB,EAAQ,OAEvC9/F,EAAOC,QAAU,cAAiC6/F,EAsB/C,YAAAlf,CAAah4E,GACV,MAAMmJ,EAAS3R,MAAMwgF,aAAah4E,GAalC,OAXAmJ,EAAOqgF,OAAS,KAChBrgF,EAAOqb,IAAM,WACbrb,EAAO69D,SAAYtlD,GAEXA,EAAQ+nE,OAGH,GAFAhyF,KAAK6X,OAAOoS,GAMlBvY,CACV,CAUA,aAAAuvE,GAA8C,CAW9C,aAAAjV,GAEG,OAAO,IACV,CAEA,mBAAAhX,GACG,OAAO,IACV,CAEA,eAAAuV,GACG,MAAM0nB,EAAyBlyF,MAAMwqE,kBAQrC,OANA0nB,EAAuBjiD,OAAS,KACtB,CACJvtC,IAAK,eAIJwvF,CACV,oBC/EH,MAAMyN,EAAkB,EAAQ,OAE1B5yE,EAAI,IAAIjkB,IAAWtI,GAAGgD,aAAaC,SAASqF,GAElDlJ,EAAOC,QAAU,cAA0B8/F,EAqBxC,iBAAApG,CAAkB5tF,GACf,MAAO,GAAG1L,KAAKiiB,WAAWrc,QAAQ,KAAM,QAAQ8F,EAAIzM,SACvD,CAGA,YAAAshF,CAAah4E,GACVA,EAAUA,GAAW,CAAC,EAEtB,MAAMmJ,EAAS3R,MAAMwgF,aAAah4E,GAC5BomB,EAAQ3uB,KAEd,IAAI2/F,EAAY,GACZC,EAAc,GACdr3F,EAAQs3F,SACTF,EAAY,cACZC,EACG,8CACA9yE,EAAE,gBACF,WAGN,MAAMy0B,EAAQh5C,EAAQg5C,MA8EtB,OA5EA7vC,EAAO69D,SAAY7jE,IAChB,GAAIA,EAAIsmF,OAAQ,OAAOtmF,EAAIijB,EAAM1M,YAEjC,MAAM69E,EAAW,GACjB,IAAIC,EAAgB//F,KAAKO,GAAGma,UAAUiU,EAAMhN,SAASpZ,SACrDw3F,EAAgB,IAAI38F,MAAMi4E,eAAe,CACtCj6E,KAAM2+F,IAGT,IAAIx6F,EAASmG,EACgB,MAAzBA,EAAIijB,EAAM1M,cACX1c,EAASmG,EAAIijB,EAAM1M,aAGtB89E,EAAc3+F,KAAK20F,MAAK,SAAUrqF,GAC/B,QAC4B,IAAlBnG,EAAOiC,UACa,GAA3BjC,EAAOiC,QAAQkE,EAAIzM,IACpB,CACC,IAAIs7F,EAAO,GAEPyF,EAASt0F,EAAIzM,GACjB,KAAOe,KAAKigG,YAAYD,IACrBD,EAAc3+F,KAAK20F,MAAK,SAAUmK,GAC3BH,EAAc3+F,KAAK6+F,YAAYD,IAAWE,EAAIjhG,KAC/Cs7F,EAAO2F,EAAIz8F,KAAO,KAAO82F,EAE/B,IACAyF,EAAShgG,KAAKigG,YAAYD,GAG7BzF,GAAQ7uF,EAAIjI,KACZq8F,EAAS14F,KAAKmzF,EACjB,CACH,IAGA,IAAI4F,EAAW,GAkBf,OAjBAA,GAAY,iCACW,GAAnBL,EAASl+F,OACVu+F,GAAYP,EAEZE,EAAS95F,SAAQ,SAAUojB,GACxB+2E,GACG,0GAGA/2E,EACA,SACN,IAEH+2E,GAAY,SAIR5+C,EAEE,4BACAA,EACA,+BACAo+C,EACA,KACAQ,EACA,SAIA,+BACAR,EACA,KACAQ,EACA,QAEN,EAGIzuF,CACV,CAUA,aAAAuvE,CAAczqE,EAAK0lB,EAAK4kD,EAAMv4E,GAE3B,IAAKu4E,EACF,OAKH,MAAMnyD,EAAQ3uB,KAEd,IAJAuI,EAAUA,GAAW,CAAC,GAIVs3F,OAAQ,CACjB,IAAKrpF,GAAqB,GAAdA,EAAI5U,OAKb,YAJAk/E,EAAKtvC,UACF,uFACA1kB,EAAE,gBACF,iBAIN,MAAMgzE,EAAW,GACjBv3F,EAAUvI,KAAKO,GAAGma,UAAUiU,EAAMhN,SAASpZ,SAC3CA,EAAU,IAAInF,MAAMi4E,eAAe,CAChCj6E,KAAMmH,IAGT,IAAIhD,EAASiR,EACgB,MAAzBA,EAAImY,EAAM1M,cACX1c,EAASiR,EAAImY,EAAM1M,aAGtB1Z,EAAQnH,KAAK20F,MAAK,SAAUrqF,GACzB,QAC4B,IAAlBnG,EAAOiC,UACa,GAA3BjC,EAAOiC,QAAQkE,EAAIzM,IACpB,CACC,IAAIs7F,EAAO,GAEPyF,EAASt0F,EAAIzM,GACjB,KAAOe,KAAKigG,YAAYD,IACrBz3F,EAAQnH,KAAK20F,MAAK,SAAUmK,GACrB33F,EAAQnH,KAAK6+F,YAAYD,IAAWE,EAAIjhG,KACzCs7F,EAAO2F,EAAIz8F,KAAO,KAAO82F,EAE/B,IACAyF,EAAShgG,KAAKigG,YAAYD,GAG7BzF,GAAQ7uF,EAAIjI,KACZq8F,EAAS14F,KAAKmzF,EACjB,CACH,IAEA,MAAM6F,EAAQ,UACd,IAAID,EAAW,GACfA,GAAY,4CACZL,EAAS95F,SAAQ,SAAUojB,GACxB+2E,GACG,qFACAC,EACA,iBACAh3E,EACA,SACN,IACA+2E,GAAY,SAEZrf,EAAKtvC,UAAY2uD,CACpB,CAEAxxE,EAAM0xE,SAASvf,EAAM5kD,EAAK1lB,EAC7B,CAUA,UAAAk7E,CAAWl7E,EAAK0lB,EAAK4kD,EAAMtrC,GACxB,MAAMrZ,EAASD,EAAIyC,OAAO3+B,KAAKs5F,kBAAkB9iF,IAC3C8pF,EAAU,GAAGnkE,UACbokE,EAAS,GAAGpkE,SACZpZ,EAAOyJ,GAAGs0D,GACVnyD,EAAQ3uB,KACRwgG,EAAkBhrD,EACxB,IAAIjwC,EAAS,CAAC,EACVk7F,GAAc,EAclB,SAASC,EAAa/xE,EAAO0wC,GAC1B95D,EAbH,SAAmBopB,EAAOnY,GACvB,IAAIjR,EAAS,CAAC,EAQd,YANmB,IAATopB,QACoB,IAApBA,EAAM1M,iBACmB,IAAzBzL,EAAImY,EAAM1M,cAEjB1c,EAASiR,EAAImY,EAAM1M,aAEf1c,CACV,CAGYo7F,CAAUhyE,EAAO0wC,GAE1B,MAAMuhC,EAAQp0E,GAAG+zE,GACjBK,EAAMjS,aAEN,MAAMpmF,EAAUomB,EAAMpuB,GAAGma,UAAUiU,EAAMhN,SAASpZ,SAClDq4F,EAAMpvF,WACNovF,EAAMh2F,MAAMrC,GACZq4F,EAAMhqF,UACNgqF,EAAMC,aACND,EAAME,UAEQ,MAAVv7F,GAAkBA,EAAO3D,QAC1B2D,EAAOS,SAAQ,SAAU/G,GAClB2hG,EAAMh4E,OAAO3pB,KACd2hG,EAAMG,UAAU9hG,GACJ2hG,EAAM7f,YAAY9hF,GAC1B64F,UAAUp/E,IAAI,YAExB,IAEHkoF,EAAMhS,cACT,CAwGA,OAtGIpiE,GAAG8zE,IACJ9zE,GAAG8zE,GAASzV,OACZ6V,EAAa1gG,KAAMwW,IAEnBpT,MACIw8D,GAAG,CACD3gE,GAAIqhG,EACJv9E,KAAM,QACNw+B,MAAO,IACPwO,OAAQ,IACR9uD,GAAI,CACD+/F,OAAQ,KACc,GAAfP,GAAqBC,EAAa1gG,KAAMwW,GAE5CiqF,GAAc,CAAK,GAGzB3yF,KAAM,CACH7O,GAAIshG,EACJx9E,KAAM,OACNgK,IAAK,eACLwiD,SAAU,SAAU7jE,EAAKskC,GACtB,MACG,UACAA,EAAOmiD,SAASzmF,EAAKskC,GACrB,SACAtkC,EAAIjI,KACJ,UAEN,EACAxC,GAAI,CACDggG,YAAaxuE,eAAgBxzB,EAAIoS,EAAO4b,GACrC,MAAMi0E,EAAMlhG,KAAK+gF,YAAY9hF,GACvBkiG,EAAOnhG,KAQb,GAPa,GAATqR,EACD6vF,EAAIpJ,UAAUp/E,IAAI,YAElBwoF,EAAIpJ,UAAUvmF,OAAO,YAIpBvR,KAAKigG,YAAYhhG,GAAK,CACvBkiG,EAAKxS,aAEL,IAAIqR,EAAS/gG,EACb,KAAOe,KAAKigG,YAAYD,IACrBA,EAAShgG,KAAKigG,YAAYD,GACtBA,GAAU/gG,GAAIkiG,EAAKC,YAAYpB,GAGtChgG,KAAKoB,KAAKigG,YAAYrB,GAAQ,SAAU52E,GACjCA,EAAKnqB,IAAMA,GAAIkiG,EAAKC,YAAYh4E,EAAKnqB,GAC5C,IAEAkiG,EAAKvS,cACR,MACGuS,EAAKxS,aACL3uF,KAAKoB,KAAKigG,YAAYpiG,GAAI,SAAUyM,GAC7BA,EAAIzM,IAAMA,GAAIkiG,EAAKC,YAAY11F,EAAIzM,GAC1C,IACAkiG,EAAKvS,eAER,MAAMrpF,EAAS,CAAC,EAGhB,GAFAA,EAAOopB,EAAM1M,YAAcuK,GAAG+zE,GAAQe,aAElC9qF,EAAIvX,GAAI,CAE8B,GAAnCsG,EAAOopB,EAAM1M,YAAYrgB,SAC1B2D,EAAOopB,EAAM1M,YAAc,IAE9B,UACS0M,EAAM7J,OAAOzY,QAAQ+yE,OAAO5oE,EAAIvX,GAAIsG,GAGtCwd,GAAQA,EAAK6K,YACd7K,EAAK6K,WAAWpX,EAAIvX,GAAIsG,EAE9B,CAAE,MAAOpE,GACN2/E,EAAKgX,UAAUp/E,IAAI,iBACnBooE,EAAKgX,UAAUp/E,IAAI,sBAEnB1Y,KAAKO,GAAGoJ,OAAOC,UAAUzI,EAAK,CAC3BuC,QACG,uDACH8S,IAAKA,EACLjR,OAAQA,GAEd,CACH,KAAO,CACJ,MAAM0kB,EAAU,CAAC,EACjBA,EAAQ0E,EAAM1M,YAAcuK,GAAG+zE,GAAQe,aAEvC3yE,EAAMuF,SAAS1H,GAAGg0E,EAAgB5gC,GAAG3gE,IAAKgrB,EAC7C,CACH,MAIR4gE,KAAK/J,EAAM,CACT9wB,GAAI,KAGN,CACV,CAEA,QAAAqwC,CAAS/I,EAAS9gF,GACf,MAAMmY,EAAQ3uB,KAId,IAHAs3F,EAAUA,EAAQ7Z,cAAc,sBACJ8jB,aACRjK,EAAQiH,cAAcY,aACV,EAAG,CAChC,IAAIz0E,EAAQ,EAKZ,GAHGA,EADClU,EAAImY,EAAM1M,aAAezL,EAAImY,EAAM1M,YAAYrgB,OACxC4U,EAAImY,EAAM1M,YAAYrgB,OACpB,EAET8oB,EAAQ,EAAG,CACZ,MAAM00E,EAAQ9H,EAAQ7Z,cACnB,iCAEH,GAAa,MAAT2hB,EACDA,EAAM5tD,UAAY9mB,MACd,CACJ,MAAM20E,EAASvjF,SAASE,cAAc,KACtCqjF,EAAOziF,KAAO,sBACdyiF,EAAO5wF,iBAAiB,SAAS,SAAUwe,GAIxCA,EAAMgvE,iBACT,IACA,MAAMnb,EAAOhlE,SAASE,cAAc,QAC9BsjF,EAAWxjF,SAASyjF,eAAe70E,GACzCo2D,EAAKgX,UAAUp/E,IAAI,cAAe,oBAClCooE,EAAKzkE,YAAYijF,GACjBD,EAAOhjF,YAAYykE,GACnBwW,EAAQj7E,YAAYgjF,EACvB,CACH,CACH,CACH,CAWA,aAAArzB,GACG,OAAOjsE,MAAMisE,cAAc,WAC9B,CAEA,eAAAzB,GACG,MAAM0nB,EAAyBlyF,MAAMwqE,kBAQrC,OANA0nB,EAAuBjiD,OAAS,KACtB,CACJvtC,IAAK,eAIJwvF,CACV,CAEA,QAAAv2C,CAAStyB,EAAMa,GACZ,IAAI1kB,EAAS,CAAC,EAEd,OADAA,EAAS6jB,EAAKu3E,YACPp7F,CACV,CAEA,QAAA2uB,CAAS9K,EAAMa,GACZ,IAAKb,EAAM,OAAO,EAElB,MAAMlgB,EAAM+gB,EAAQjqB,KAAKiiB,aAAe,GAExCmH,EAAKo4E,UAAUt4F,GAEf,MAAMg4F,EAAM93E,EAAKygE,MAAMpM,cAAc,qBAErC,IAAKyjB,EAAK,OAAO,EAGjBlhG,KAAKihF,cAAc/3E,EAAKlJ,KAAKk8B,IAAKglE,EAAK,CACpCxzC,UAAU,EACVmyC,QAAQ,IAGXp4F,YAAW,WACR,IAAIsoD,EAAS,GACTmxC,EAAIK,aAAe,KACpBxxC,EAASmxC,EAAIK,cAEhBn4E,EAAK1X,OAAOq+C,OAASA,EAAS,EAC9B3mC,EAAKkjE,QACR,GAAG,IACN,oBC3cH,MAAM+F,EAAqB,EAAQ,OAC7BoP,EAAkB,EAAQ,OAEhC9hG,EAAOC,QAAU,cAA0B6hG,EACxC,WAAA3hG,CAAYyF,EAAQuf,EAAQi7B,GACzBhgD,MAAMwF,EAAQuf,EAAQi7B,EACzB,CAMA,UAAMp4C,GAEH,GAAe,MAAX3H,KAAKf,GAAY,CAClB,MAAMyiG,EAAW1hG,KAAKO,GAAGq6B,aACnB+mE,EAAWF,EAAgBjmE,WAEjCx7B,KAAK2hB,SAASC,WAAa8/E,EAASziG,GACpCe,KAAK2hB,SAAS4yB,WAAa,EAEvBv0C,KAAK2hB,SAASglC,YACf3mD,KAAK2hB,SAASkvB,YAAc8wD,EAASl0C,kBACrCztD,KAAK2hB,SAAS2M,SAAW,OACzBtuB,KAAK2hB,SAASkS,YAAc,OAC5B7zB,KAAK2hB,SAASyyB,SAAW,IAEzBp0C,KAAK2hB,SAASivB,WAAa+wD,EAASl0C,kBACpCztD,KAAK2hB,SAAS2M,SAAW,MACzBtuB,KAAK2hB,SAASkS,YAAc,OAC5B7zB,KAAK2hB,SAASyyB,SAAW,GAQ5B,MAAMwtD,EAAUF,EAAS9nE,SAAS,CAC/Bn3B,IAAK4vF,EAAmB72D,WAAW/4B,IACnCwf,WAAY,GAAGjiB,KAAK8kB,OAAOlZ,QAAQ5L,KAAKwD,QACxCA,MAAOxD,KAAK8kB,OAAOthB,MACnBme,SAAU,CACP0/B,SAAUrhD,KAAK2hB,SAAS0/B,SACxBz/B,WAAY5hB,KAAK8kB,OAAO7lB,GACxBqvB,SAAUtuB,KAAK2hB,SAASkS,YACxBA,YAAa7zB,KAAK2hB,SAAS2M,SAC3BimB,WAAYv0C,KAAK2hB,SAAS4yB,WAC1B3D,WAAY5wC,KAAK2hB,SAASivB,WAC1BC,YAAa7wC,KAAK2hB,SAASkvB,YAC3BuD,SAAU,KAgBhB,IAAIh9B,QAAepX,KAAK6H,eAAeF,OACvC3H,KAAKf,GAAKmY,EAAOnY,GAEjB2iG,EAAQjgF,SAASm+B,WAAa9/C,KAAKf,GACnC,IAAI4iG,QAAmBD,EAAQ/5F,eAAeF,OAgB9C,OAfAi6F,EAAQ3iG,GAAK4iG,EAAW5iG,GAExBe,KAAK2hB,SAASm+B,WAAa8hD,EAAQ3iG,SAC7Be,KAAK6H,eAAeF,aAGpB3H,KAAK8kB,OAAOmiB,SAASjnC,YAErB0hG,EAASz6D,SAAS26D,SAGlB5hG,KAAKi+E,sBAEL2jB,EAAQ3jB,gBAEPj+E,IACV,CACG,OAAOD,MAAM4H,MAEnB,CAIA,YAAA44E,CAAah4E,GAGV,OADAA,EAAUvI,KAAK8hG,kBAAkBv5F,GAC1BxI,MAAMwgF,aAAah4E,EAC7B,CAiBA,iBAAAu5F,CAAkBv5F,GAkBf,OAjBAA,EAAUA,GAAW,CAAC,GACdmlD,SACqB,MAA1B1tD,KAAK2hB,SAAS+rC,UAAmB1tD,KAAK2hB,SAAS+rC,SAElDnlD,EAAQm1F,cAC2B,MAAhC19F,KAAK2hB,SAASksC,iBACR7tD,KAAK2hB,SAASksC,eAGvBtlD,EAAQk1F,eAAkBnpD,GAClBt0C,KAAK2hB,SAASisC,mBAEftZ,EAAItxC,SACE,mBAAmBsxC,EAAItxC,4GACrB,oDAJkC,GAO1CuF,CACV,CAQA,YAAA6/B,CAAa7iC,GACNvF,KAAK2hB,SAASgsC,gBACX3tD,KAAK2hB,SAASglC,WACfphD,EAAOvF,KAAKiiB,YAAc,CACvB,CACGhjB,GAAIe,KAAKO,GAAG6E,QAAQvC,WACpBY,KAAMzD,KAAKO,GAAG6E,QAAQvC,aAI5B0C,EAAOvF,KAAKiiB,YAAcjiB,KAAKO,GAAG6E,QAAQvC,WAGnD,CAEA,QAAA64C,CAAStyB,GACN,IAAIlgB,EAAMnJ,MAAM27C,SAAStyB,GAczB,OAZIlgB,IACiB,iBAAPA,EACRA,EAAMA,EAAItD,QAAQ,mBAAoB5F,KAAKO,GAAG6E,QAAQvC,YAChD6C,MAAMC,QAAQuD,KACpBA,EAAMA,EAAIpK,KAAKmH,IACXA,GAAGpD,UAAYoD,GAAGtE,MAAQsE,GAAGhH,IAAMgH,IAAIL,QACrC,mBACA5F,KAAKO,GAAG6E,QAAQvC,gBAKrBqG,CACV,CAEA,QAAAgrB,CAAS9K,EAAMa,GACZ,IAAI/gB,EAAM+gB,EAAQjqB,KAAKiiB,YACvB,GAAY,KAAR/Y,EAKD,cAFO+gB,EAAQjqB,KAAKiiB,iBACpBliB,MAAMm0B,SAAS9K,EAAMa,GAID,QAAnBjqB,KAAKsuB,YAED5oB,MAAMC,QAAQuD,KAChBA,EAAM,CAACA,IAGVA,EAAMA,EAAIpK,KAAKmH,GACP,mBAALA,EAAyBjG,KAAKO,GAAG6E,QAAQvC,WAAaoD,KAK9C,mBAAPiD,IAA0BA,EAAMlJ,KAAKO,GAAG6E,QAAQvC,YAGvDonB,EAAQjqB,KAAKiiB,YAAc/Y,EAE3BnJ,MAAMm0B,SAAS9K,EAAMa,EACxB,CAEA,QAAAy9C,GACG,OAAO1nE,KAAKO,GAAG6E,QAAQtC,WAAWhE,KAAK0d,IACpC,MAAMtY,EAAS,CACZjF,GAAIud,EAAE3Z,SACN+kE,MAAOprD,EAAExZ,UASZ,OANIhD,KAAK2hB,SAASglC,WACfziD,EAAOT,KAAO+Y,EAAE3Z,SAEhBqB,EAAOmN,MAAQmL,EAAE3Z,SAGbqB,CAAM,GAEnB,CAEA,UAAAssF,IAAc3nF,GACX,OAAO9I,MAAMywF,cAAc3nF,GAAQxB,MAAMkB,KAGrCA,GAAW,IAAIvC,SAAS5G,IAClBA,EAAEyD,WACHzD,EAAEH,GAAKG,EAAEyD,SACZ,IAGI0F,IAEb,CAEA,kBAAA23C,CAAmB1pC,GAChB,IAAIjR,EAASxF,MAAMmgD,mBAAmB1pC,GAgBtC,OAbI9Q,MAAMC,QAAQJ,IAEfA,EAASA,EAAO5C,QAAQsD,GAAMA,IAC9BV,EAASA,EAAOzG,KAAKmH,IAClBA,EAAEhH,GAAKgH,EAAEpD,UAAYoD,EAAEhH,GAChBgH,MAGNV,IACDA,EAAOtG,GAAKsG,EAAO1C,UAAY0C,EAAOtG,IAIrCsG,CACV,CAEA,wBAAA2wF,CAAyBvsE,GACtB,IAAIvoB,EAAOrB,MAAMm2F,yBAAyBvsE,GAU1C,OATIjkB,MAAMC,QAAQvE,GACfA,EAAOA,EAAKtC,KAAKwuB,IACdA,EAAEruB,GAAKquB,EAAEzqB,UAAYyqB,EAAEruB,GAChBquB,KAGVlsB,EAAKnC,GAAKmC,EAAKyB,UAAYzB,EAAKnC,GAG5BmC,CACV,oBC5QH,MAAM2gG,EAAmB,EAAQ,OAEjCpiG,EAAOC,QAAU,cAA2BmiG,EACzC,WAAAjiG,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MAAMwF,EAAQkf,EAAa1c,EAAQogC,GAGnCnoC,KAAKgiG,wBAA2B9nF,IACzBA,EAAIjb,IAAMe,KAAKf,KAChBe,KAAKuB,KAAK,qBAAsBvB,MAChCA,KAAKO,GAAGy6E,IAAI,yBAA0Bh7E,KAAKgiG,yBAC9C,EAEHhiG,KAAKO,GAAGU,GAAG,yBAA0BjB,KAAKgiG,yBAI1ChiG,KAAKiiG,sBAAyBlzC,IAE3B,IAAI70C,EAAMla,KAAKO,GAAGue,eAAeiwC,EAAK9vD,IACtC,GAAKib,EAAL,CAEA,IAAI29D,EAAU73E,KAAK+e,QAAQ7E,GAGvB0E,EAAW,GACf5e,KAAKogB,QAAQpa,SAAS6vE,IACfA,EAAG52E,KAAO8vD,EAAK9vD,GAInB2f,EAASxX,KAAKyuE,GAHXj3D,EAASxX,KAAKywE,EAGA,IAGpB73E,KAAKkf,OAASN,EAEdmwC,EAAKisB,IAAI,qBAAsBh7E,KAAKiiG,sBAhBpB,CAgB0C,EAE7DjiG,KAAKogB,QAAQpa,SAASyU,IACnBA,EAAExZ,GAAG,qBAAsBjB,KAAKiiG,sBAAsB,GAE5D,CAQA,eAAAnzC,CAAgB/mD,GAEb,IAAImS,EAAMla,KAAKO,GAAGue,eAAe9e,KAAKf,IACtC,GAAKib,EAAL,CAEA,IAAI29D,GAAW9vE,GAAU/H,KAAK+H,SAASgX,QAAQ7E,GAE/C,IAEGla,KAAKO,GAAGy6E,IAAI,yBAA0Bh7E,KAAKgiG,yBAC3ChiG,KAAKogB,QAAQpa,SAAS6vE,IACnBA,EAAGqsB,mBAAmB,qBAAqB,GAEjD,CAAE,MAAO7iG,GAENgC,QAAQC,MAAMjC,EACjB,CAEA,OAAOw4E,CAfS,CAgBnB,CAEA,YAAAT,GACGr3E,MAAMq3E,eAEiB,GADRp3E,KAAK2iB,QACP/gB,QACV5B,KAAKs3E,gBAAgB,mBAEvBt3E,KAAKogB,SAAW,IAAIpa,SAASyU,IAC3BA,EAAE28D,cAAc,GAEtB,oBC/EH,MAAM+qB,EAAmB,EAAQ,OAEjCxiG,EAAOC,QAAU,cAA2BuiG,EAczC,aAAA5vC,CAAcsd,GAEX,IAAIuyB,EAAgB,CACjB,cACA,eAuCH,OALoBpiG,KAAKykB,YAAYvB,UACCvgB,QAAQugC,IACM,GAA1Ck/D,EAAc56F,QAAQ07B,EAAE8M,SAASvtC,MAI9C,CAEA,WAAA+0E,GAEG,IAAI0J,EAAcnhF,MAAMy3E,cASxB,OARAx3E,KAAK2iB,QAAQ3c,SAASC,IACnBi7E,EAAcA,EAAYvnE,OAAO1T,EAAEuxE,cAAc,KAGnDx3E,KAAKogB,WAAa,IAAIpa,SAASyU,IAC7BymE,EAAcA,EAAYvnE,OAAOc,EAAE+8D,cAAc,IAG7C0J,EAAYv+E,QAAQw+E,GAAMA,GACpC,CAEA,YAAA/J,GACGr3E,MAAMq3E,eAEN,IAAIj0D,EAAWnjB,KAAK2iB,SAEnB3iB,KAAKyvD,gBAAkB,IAAIzpD,SAAS/G,IAClCe,KAAKs3E,gBAAgB,2BAA2Br4E,KAAM,IAGzDkkB,EAASnd,SAASC,IACfA,EAAEmxE,cAAc,IAIfp3E,KAAK2hB,SAASovC,aACN/wD,KAAKwgB,iBAAmBxgB,KAAKunB,gBAEnCvnB,KAAKs3E,gBACF,iCAAiCt3E,KAAK2hB,SAASovC,eAI3D,CAEA,eAAAumB,CAAgBjhE,EAAKjV,EAAO,CAAC,GAC1B,IAAIsC,EAAU,GAAG1D,KAAKyC,OAAOzC,KAAK4L,UAAUyK,IAC5CrW,KAAK03E,UAAUtwE,KAAK,CAAE1D,UAAStC,QAClC,oBCvGH,MAAMihG,EAAyB,EAAQ,OAEvC1iG,EAAOC,QAAU,cAAiCyiG,EAI/C,YAAAjrB,GACGr3E,MAAMq3E,cAIT,oBCXH,MAAMkrB,EAAuB,EAAQ,OAE/BC,EAAyB,EAAQ,OAEvC5iG,EAAOC,QAAU,cAA+B0iG,EAc7C,oBAAAE,CAAqB1/D,GAElB,IAAI2/D,EAAgBziG,KAAK2iB,OACrB1c,GAAMA,aAAas8F,GAA0Bt8F,EAAE0b,SAASsxC,YAC1D,GAGmB,MAAjBwvC,GACDA,EAAgBF,EAAuB7yC,YACpC1vD,KAAKykB,YACLzkB,MAEHyiG,EAAc9gF,SAASsxC,WAAY,GAInCjzD,KAAK4iB,OAAS5iB,KAAK2iB,OAAO1c,GAAMA,EAAEhH,IAAMwjG,EAAcxjG,KAIzD,IAAIyjG,EAAQ1iG,KAAK2iB,QAAQ7jB,KAAKmH,IAAOA,EAAE+hD,SAASiI,GAAK,GAAK,IAC1DyyC,EAAMt7F,KAAKpH,KAAK4iB,OAAOhhB,QAAU,GACjC8gG,EAAMt7F,KAAKolB,GAAGsW,EAAIxY,QAAQ1oB,QAAU,GACpC,IAAI+gG,EAAOjlD,KAAKqI,OAAO28C,GAQvB,OALAD,EAAcz6C,SAASiI,EAAI0yC,EAG3B3iG,KAAK4iB,OAAOxb,KAAKq7F,GAEVA,CACV,CAEA,YAAArrB,GACGr3E,MAAMq3E,eAEDp3E,KAAK2hB,SAASovC,WAGP/wD,KAAKunB,gBAEXvnB,KAAKs3E,gBACF,yCAAyCt3E,KAAK2hB,SAASovC,gBAL7D/wD,KAAKs3E,gBAAgB,2CAS3B,oBCjEH,MAAMsrB,EAA6B,EAAQ,OAE3CjjG,EAAOC,QAAU,cAAqC,qBCFtD,MAAMijG,EAA+B,EAAQ,OAE7CljG,EAAOC,QAAU,cAAuC,qBCFxD,MAAMkjG,EAA8B,EAAQ,OAe5CnjG,EAAOC,QAAU,cAAsC,EAQpD,WAAAE,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MAAMwF,EAAQkf,EAAa1c,EAAQogC,GAGnCnoC,KAAK+iG,kBAAoB/iG,KAAKO,GAAGyzB,iBAC9B,GAAGh0B,KAAKf,uBAGXe,KAAK+iG,kBAAkB9uE,WACpBj0B,KAAKsnB,WAAatnB,KAAKsnB,WAAWgD,SAAW,GAC7CtqB,KAAKsnB,WAAatnB,KAAKsnB,WAAa,MAGvCtnB,KAAK+iG,kBAAkB7uE,SACpBl0B,KAAK2hB,SAASyD,iBAKpB,CAYA,UAAAvF,CAAWta,GACRxF,MAAM8f,WAAWta,EAKpB,oBC5DH,MAAMy9F,EAA6B,EAAQ,OAE3CrjG,EAAOC,QAAU,cAAqC,qBCFtD,MAAMqjG,EAA2B,EAAQ,MAEzCtjG,EAAOC,QAAU,cAAmCqjG,qBCFpD,MAAMC,EAA+B,EAAQ,OAE7CvjG,EAAOC,QAAU,cAAuC,qBCFxD,MAAMujG,EAA4B,EAAQ,OAE1CxjG,EAAOC,QAAU,cAAoC,qBCFrD,MAAMwjG,EAA2B,EAAQ,OAEzCzjG,EAAOC,QAAU,cAAmCwjG,qBCFpD,MAAMC,EAA8B,EAAQ,OAE5C1jG,EAAOC,QAAU,cAAsC,qBCFvD,MAAM0jG,EAA4B,EAAQ,OAE1C3jG,EAAOC,QAAU,cAAoC,qBCFrD,MAAM2jG,EAA2B,EAAQ,OAEzC5jG,EAAOC,QAAU,cAAmC2jG,qBCFpD,MAAMC,EAA6B,EAAQ,OAE3C7jG,EAAOC,QAAU,cAAqC,qBCFtD,MAAM6jG,EAA+B,EAAQ,OAE7C9jG,EAAOC,QAAU,cAAuC,qBCFxD,MAAM8jG,EAAqC,EAAQ,MAEnD/jG,EAAOC,QAAU,cAA6C,qBCF9D,MAAM+jG,EAAmC,EAAQ,OAEjDhkG,EAAOC,QAAU,cAA2C,qBCF5D,MAAMgkG,EAA8B,EAAQ,OAE5CjkG,EAAOC,QAAU,cAAsC,mBCFvD,MAAMikG,EAAwB,EAAQ,OAGtClkG,EAAOC,QAAU,cAAgCikG,EAe9C,YAAAzsB,GACGr3E,MAAMq3E,eAEDp3E,KAAKyD,MACPzD,KAAKs3E,gBAAgB,yBAE3B,oBCxBH,MAAMwsB,EAAuB,EAAQ,OAErCnkG,EAAOC,QAAU,cAA+BkkG,EAI7C,YAAA1sB,GACGr3E,MAAMq3E,eAEN,CAAC,cAAe,kBAAkBpxE,SAASiB,IACpCjH,KAAK2hB,SAAS1a,KACJjH,KAAKykB,YAAYF,SAASvkB,KAAK2hB,SAAS1a,IAAI,IAEpDjH,KAAKs3E,gBAAgB,GAAGrwE,iCAE9B,GAEN,oBCjBH,MAAM88F,EAA2B,EAAQ,OAEzCpkG,EAAOC,QAAU,cAAmCmkG,EAIjD,YAAA3sB,GACGr3E,MAAMq3E,eAEN,CAAC,cAAe,kBAAkBpxE,SAASiB,IACpCjH,KAAK2hB,SAAS1a,KACJjH,KAAKykB,YAAYF,SAASvkB,KAAK2hB,SAAS1a,IAAI,IAEpDjH,KAAKs3E,gBAAgB,GAAGrwE,iCAE9B,GAEN,oBCXH,IAAI+8F,EAAoB,EAAQ,OAEhCrkG,EAAOC,QAAU,cAA4BokG,EAS1C,4BAAAC,CAA6BhlG,GAC1B,IAAIilG,EAAgBlkG,KAAK0iB,QAAQurB,oBAAoBhvC,GACjDilG,IAGIlkG,KAAKw4D,SAAW0rC,EAAc1rC,SACf,CACd,UACA,UACA,OACA,aACA,WAEQxyD,SAASyU,IACjB,IAAI0pF,EAAOnkG,KAAKya,GAChBza,KAAKya,GAAKypF,EAAczpF,GACxBypF,EAAczpF,GAAK0pF,CAAI,GAInC,CAOA,WAAApoE,CAAYJ,GACT37B,KAAK2sC,UAAYhR,EAAQ18B,IAAMe,KAAK2sC,UAIhChR,EAAQyoE,UAAYzoE,EAAQyoE,SAASxiG,OAAS,EAC3C+5B,EAAQ5zB,QAAiC,oBAAvB4zB,EAAQ5zB,OAAOgB,MAClC/I,KAAKikG,6BAA6BtoE,EAAQ5zB,OAAO9I,IAKjD08B,EAAQ5zB,QACR4zB,EAAQ5zB,OAAOq8F,UACfzoE,EAAQ5zB,OAAOq8F,SAASxiG,OAAS,GAEjC+5B,EAAQ5zB,OAAOq8F,SAASp+F,SAASq+F,IAC9B,GAAkB,aAAdA,EAAMt7F,MAGJs7F,EAAM32D,eAAe42D,OACrBD,EAAM32D,eAAe42D,MAAM1iG,OAAS,GAGvByiG,EAAM32D,eAAe42D,MAAMx7E,MAAM5hB,GACpCA,EAAEjI,IAAMe,KAAK2sC,YAEX,CACT3sC,KAAKikG,6BAA6BtoE,EAAQ5zB,OAAO9I,IAGjD,IAAIslG,EAAWvkG,KAAK0iB,QAAQurB,oBACzBo2D,EAAMplG,IAELslG,GACDA,EAASC,QAAQxkG,KAEvB,CAEN,IAKTA,KAAKqxC,SAAS1V,EACjB,CAQA,QAAA0V,CAASozD,GAuCHA,EAAW/2D,eAAe9hC,MACQ,IAAlC64F,EAAW/2D,eAAe9hC,OAE1B5L,KAAKwD,MAAQihG,EAAW/2D,eAAe9hC,KAI7C,oBCxIH,IAAI84F,EAA2B,EAAQ,OAIvC/kG,EAAOC,QAAU,cAAmC8kG,EAcjD,WAAA3oE,CAAYJ,GACT37B,KAAK2sC,UAAYhR,EAAQ18B,IAAMe,KAAK2sC,UACpC3sC,KAAKqxC,SAAS1V,EACjB,CAQA,QAAA0V,CAASozD,GA6CN,GANGA,EAAW/2D,eAAe9hC,MACQ,IAAlC64F,EAAW/2D,eAAe9hC,OAE1B5L,KAAKwD,MAAQihG,EAAW/2D,eAAe9hC,MAGtC64F,EAAWL,SAAU,CACtB,IAAI7rC,EAAU,GACdksC,EAAWL,SAASp+F,SAASk9B,IACZ,aAAVA,EAAEn6B,MACHwvD,EAAQnxD,KAAK87B,EAAEjkC,GAClB,IAEHe,KAAKu4D,QAAUA,CAClB,CACH,CAQA,iBAAAosC,GACG,MAAO,CACJ,CACG1lG,GAAIe,KAAK2sC,UACTzyB,IAAK,CACFtO,KAAM5L,KAAK4L,OAIvB,oBC3GH,MAAMg5F,EAAuB,EAAQ,OAErCjlG,EAAOC,QAAU,cAA+BglG,EAY7C,OAAAl9F,GASG,OAAO3H,MAAM2H,UAAUL,MAAK,IAClBrH,KAAK0iB,QAAQwrB,cAAcluC,OAExC,CAEA,OAAA8X,GA4BG,OAAO,CACV,CAMA,QAAA+sF,CAASziF,EAAM5R,GACP4R,EAMDA,EAAKkiF,OAASliF,EAAKkiF,MAAM1iG,OAAS,EACnC4O,EAAG,KAAM4R,EAAKkiF,MAAM,IACE,oBAAdliF,EAAKu3C,MAEbnpD,EAAG,KAAM4R,IAGTA,EAAOA,EAAK4G,QACZhpB,KAAK6kG,SAASziF,EAAM5R,IAbpBA,EAAG,KAAM,KAef,CAEA,OAAAg0F,CAAQM,GACL9kG,KAAK65D,cAAgBirC,EAAKn4D,SAC7B,CAOA,WAAA5Q,CAAYJ,GACT37B,KAAK2sC,UAAYhR,EAAQ18B,IAAMe,KAAK2sC,UACpC3sC,KAAKqxC,SAAS1V,EACjB,CAQA,QAAA0V,CAASozD,GA8CHA,EAAW/2D,eAAe9hC,MACQ,IAAlC64F,EAAW/2D,eAAe9hC,OAE1B5L,KAAKwD,MAAQihG,EAAW/2D,eAAe9hC,MAI1C,IAAIm5F,EAAUN,EAAW/2D,eACzB1tC,KAAK6kG,SAASE,GAAS,CAAC5jG,EAAKuK,KACtBA,EACD1L,KAAK65D,cAAgBnuD,EAAIzM,GAItBwlG,EAAW18F,QACe,oBAA1B08F,EAAW18F,OAAOgB,KAElB/I,KAAK65D,cAAgB4qC,EAAW18F,OAAO9I,GAEvCe,KAAK65D,cAAgB,IAE3B,GAEN,CAQA,iBAAA8qC,GACG,MAAMltB,EAAWz3E,KAAKy3E,WACtB,MAAO,CACJ,CACGx4E,GAAIe,KAAK2sC,UACTzyB,IAAK,CACFtO,KAAM5L,KAAK4L,MAEdlF,KAAM+wE,EAAS71E,OAAS61E,EAAW,MAG5C,CAQA,cAAAutB,CAAe/lG,GACZ,IAAI2gE,EAAK,CACN3gE,GAAIA,EACJ8jB,KAAM,QACNvf,MAAO,iDAGVJ,MAAMw8D,GAAGA,EAAIpzC,GAAGvtB,IAEhButB,GAAGvtB,GAAI4rF,MACV,CAQA,eAAAoa,CAAgBhmG,GAAK,CAOrB,QAAAimG,CAASjmG,GACN,GAAIutB,GAAGvtB,GACJ,OAAOutB,GAAGvtB,GAAIy8C,UAEpB,CAUA,QAAAypD,CAASd,EAAOe,GAEbplG,KAAK0iB,QAAQwrB,cAAcluC,MAG3BA,KAAK0iB,QAAQqrB,WAAWs2D,GAGxBA,EAAMW,eAAeI,GAErBplG,KAAKuB,KAAK,WAAY8iG,EACzB,CASA,YAAAjtB,GACGr3E,MAAMq3E,eACNp3E,KAAKosC,iBAIApsC,KAAKm6D,aACuBn6D,KAAK0iB,QAAQ2qB,oBACxCrtC,KAAK2sC,WAEkB/qC,OAAS,GAChC5B,KAAK4iE,eAAe,0CAG7B,CAMA,cAAAA,CAAevsD,EAAKjV,EAAO,CAAC,GACzB,IAAIsC,EAAU,GAAG1D,KAAKw7B,SAAS/4B,OAC5BzC,KAAKwD,MAAQxD,KAAKwD,MAAQxD,KAAK4L,UAC5ByK,IACNrW,KAAK03E,UAAUtwE,KAAK,CAAE1D,UAAStC,QAClC,oBC1RH,MAAMikG,EAAmB,EAAQ,OAEjC1lG,EAAOC,QAAU,cAA2BylG,oBCF5C,MAAMC,EAAgC,EAAQ,OAI9C3lG,EAAOC,QAAU,cAAwC,EAatD,iBAAA+kG,GAEG,IAAIvhE,EAAarjC,MAAM4kG,oBAuBvB,OAX4B3kG,KAAK0iB,QAAQ2qB,oBACtCrtC,KAAK2sC,WAEc3mC,SAAS+oC,IAC5B3L,EAAWh8B,KAAK,CACbnI,GAAI8vC,EAAK9vC,GACTib,IAAK,CACFtO,KAAM5L,KAAK8zC,WAAW/E,EAAK9vC,KAAKuE,OAAS,KAE7C,IAEE4/B,CACV,CAEA,YAAAg0C,GACGr3E,MAAMq3E,eAGN,MAAMmuB,EAAwBvlG,KAAK0iB,QAAQ2qB,oBACxCrtC,KAAK2sC,WAEJ44D,EAAsB3jG,OAAS,GAChC5B,KAAK4iE,eAAe,6CAKvB,IAAI4iC,EAAiB,EACrBD,EAAsBv/F,SAASk9B,IACmC,IAA1DljC,KAAK8zC,WAAW5Q,EAAEjkC,KAAK41F,YAAYj7E,OAAOhY,QAAU,IACtD4jG,GACH,IAGCA,EAAiB,GAClBxlG,KAAK4iE,eACF,qDAGT,oBCpEH,MAAM6iC,EAAyB,EAAQ,OAEvC9lG,EAAOC,QAAU,cAAiC6lG,EAK/C,YAAAruB,GACGr3E,MAAMq3E,eAIDp3E,KAAKy8D,SACPz8D,KAAK4iE,eAAe,wBAGlB5iE,KAAK0D,SACP1D,KAAK4iE,eAAe,wBAGvB5iE,KAAK0lG,cAAc,MACnB1lG,KAAK0lG,cAAc,QACnB1lG,KAAK2lG,eAAe,MACH,KAAb3lG,KAAKstC,OACSttC,KAAKq6D,UAEjBr6D,KAAK4iE,eACF,4DAIT5iE,KAAK4lG,kBAAkB,KAAM,WAC7B5lG,KAAK4lG,kBAAkB,OAAQ,YAClC,CAQA,aAAAF,CAAcjjG,GACM,IAAbzC,KAAKyC,IACNzC,KAAK4iE,eAAe,oBAAoBngE,cAE9C,CAUA,cAAAkjG,CAAeljG,GACZ,GAAkB,MAAdzC,KAAKyC,GAAc,CAIpB,IAAI83D,EAAYv6D,KAAK0iB,QAAQ2rB,mBAAmBruC,MAC5C6lG,GAAoB,EACxBtrC,EAAUv0D,SAAS65B,IACLA,EAAEw6B,WAEVwrC,GAAoB,EACvB,IAEEA,GAAyC,GAApBtrC,EAAU34D,QACjC5B,KAAK4iE,eACF,8CAA8CngE,YAGvD,CACH,CAWA,iBAAAmjG,CAAkBnjG,EAAKqjG,GACH,KAAb9lG,KAAKyC,IACFzC,KAAK8lG,KACF9lG,KAAK8lG,GAAQ5lF,SACkB,GAA5BlgB,KAAK8lG,GAAQ3lF,KAAKve,QACnB5B,KAAK4iE,eAAe,oBAAoBngE,oBAG1CzC,KAAK8lG,GAAQrtC,YACqB,GAA/Bz4D,KAAK8lG,GAAQptC,QAAQ92D,QACtB5B,KAAK4iE,eACF,oBAAoBngE,uBAUtC,oBC5GH,MAAMsjG,EAA2B,EAAQ,OAEzCpmG,EAAOC,QAAU,cAAmCmmG,qBCFpD,MAAMC,EAAgC,EAAQ,OAE9C,IAAIl5E,EAAI,IAAIjkB,IAAWtI,GAAGgD,aAAaC,SAASqF,GAEhDlJ,EAAOC,QAAU,cAAwC,EAOtD,WAAAqmG,CAAYhnG,GACT,MAAO,CACJ2M,KAAM,GAAG3M,SACTinG,kBAAmB,GAAGjnG,sBACtBknG,YAAa,GAAGlnG,gBAChBmnG,kBAAmB,GAAGnnG,sBACtBonG,0BAA2B,GAAGpnG,8BAC9BqnG,SAAU,GAAGrnG,aACbsnG,eAAgB,GAAGtnG,mBACnBunG,UAAW,GAAGvnG,cACdwnG,cAAe,GAAGxnG,kBAClBynG,sBAAuB,GAAGznG,0BAC1B0nG,SAAU,GAAG1nG,aACb2nG,uBAAwB,GAAG3nG,2BAC3B4nG,eAAgB,GAAG5nG,mBACnB6nG,UAAW,GAAG7nG,cACd8nG,eAAgB,GAAG9nG,mBAEzB,CAQA,cAAA+lG,CAAe/lG,GACZ,IAAI6jC,EAAM9iC,KAAKimG,YAAYhnG,GAEvB+nG,EAAgB,CAAC,CAAE/nG,GAAI,EAAGoS,MAAOyb,EAAE,6BACf9sB,KAAK0iB,QAAQksB,kBAAkB5uC,OACjC,IAAIgG,SAASwQ,IAChCwwF,EAAc5/F,KAAK,CAAEnI,GAAIuX,EAAI/T,IAAK4O,MAAOmF,EAAIhT,OAAQ,IAGxD,IAAIyjG,EAAajnG,KAAKO,GAAGygB,UAAUliB,KAAKM,IAC9B,CAAEH,GAAIG,EAAEH,GAAIoS,MAAOjS,EAAEoE,OAASpE,EAAEwM,KAAMkZ,OAAQ1lB,MAExD6nG,EAAW11E,QAAQ,CAChBtyB,GAAI,EACJoS,MAAOyb,EAAE,sBAOZ,IAAIo6E,EAAa,CACdjoG,GAAI,EACJoS,MAAOyb,EAAE,mBAIZ,SAASq6E,EAAct8D,GAGpB,IAAIvgB,EAAS,CAAC48E,GACd,GAAIr8D,EAAO,CACR,IAAIp6B,EAAQw2F,EAAWn+E,MAAM1pB,GAAMA,EAAEH,IAAM4rC,IACvCp6B,GAASA,EAAMqU,QAChBrU,EAAMqU,OAAOwF,SAAStkB,SAAS0b,IAC5B4I,EAAOljB,KAAK,CAAEnI,GAAIyiB,EAAEziB,GAAIoS,MAAOqQ,EAAEle,MAAOmrB,MAAOjN,GAAI,GAG5D,CACA,OAAO4I,CACV,CAEA,SAAS88E,EAAaC,EAAcC,EAAal/D,GAG9Ci/D,EAAarhG,SAASuhG,IACnB,IAAIC,EAASh7E,GAAG+6E,GACZC,IACDA,EAAOptB,OAAO,UAAWktB,GAMzBE,EAAO5wF,UACP4wF,EAAO3c,OACV,GAEN,CAEA,IAAI4c,EAAcN,EAAcnnG,KAAKmmG,aAGjCuB,EAAoB,CACrB5kE,EAAIsjE,kBACJtjE,EAAIujE,2BAKHsB,EAAWR,EAAcnnG,KAAKsmG,UAG9BsB,EAAiB,CAClB9kE,EAAIyjE,eACJzjE,EAAI0jE,UACJ1jE,EAAI2jE,eAKP,SAASoB,EAAoBC,GAC1B,IAAIviG,EAAS,CAAC,CAAEtG,GAAI,EAAGoS,MAAOyb,EAAE,+BAMhC,OALIg7E,GAAeA,EAAYv/F,SAC5Bu/F,EAAYv/F,UAAUvC,SAAS5G,IAC5BmG,EAAO6B,KAAK,CAAEnI,GAAIG,EAAEH,GAAIoS,MAAOjS,EAAEqE,MAAO,IAGvC8B,CACV,CAaA,SAASwiG,EAAiBhpB,GAEvB,IAbiCx5E,EAC7ByiG,EAYAC,EAAYz7E,GAAGsW,EAAIwjE,UAAU5qD,WAC7BwsD,EAAUjB,EAAWn+E,MAAM1pB,GAAMA,EAAEH,IAAMgpG,IAC7C,GAAIC,GAAWA,EAAQpjF,OAAQ,CAC5B,IAAIgjF,EAAcI,EAAQpjF,OAAO8C,UAAUm3D,GACvC+oB,GAAeA,EAAYv/F,UAjBDhD,EAmB3B4iG,EAAsBN,EAAoBC,IAlB5CE,EAAcx7E,GAAGsW,EAAI4jE,0BAGtBsB,EAAY5tB,OAAO,UAAW70E,GAC9ByiG,EAAYpxF,UAEZoxF,EAAYnd,QAgBf,CACH,CAEA,IAAIsd,EAAsBN,IAItBO,EAAWjB,EAAcnnG,KAAK2mG,UAG9B0B,EAAiB,CAClBvlE,EAAI8jE,uBACJ9jE,EAAI+jE,eACJ/jE,EAAIgkE,UACJhkE,EAAIikE,gBAKHnnC,EAAK,CACN3gE,GAAIA,EACJ8jB,KAAM,OACN3M,SAAU,CACP,CACGnX,GAAI6jC,EAAIl3B,KACRmX,KAAM,OACNvf,MAAOspB,EAAE,QACTlhB,KAAM,OACNyF,MAAOrR,KAAK4L,MAEf,CACG3M,GAAI6jC,EAAIojE,kBACRnjF,KAAM,SACNvf,MAAOspB,EAAE,uBACTzb,MAAOrR,KAAKkmG,kBACZt6F,KAAM,oBACNrD,QAASy+F,GAEZ,CACG/nG,GAAI6jC,EAAIqjE,YACRpjF,KAAM,SACNvf,MAAOspB,EAAE,gBACTzb,MAAOrR,KAAKmmG,YACZv6F,KAAM,cACNrD,QAAS0+F,EACThmG,GAAI,CACD,QAAAowC,CAAS0tC,EAAQmN,GACVnN,GAAUmN,IAEXub,EAAcN,EAAcpoB,GAE5BqoB,EAAaM,EAAmBD,GAEtC,IAGN,CACGxoG,GAAI6jC,EAAIsjE,kBACRrjF,KAAM,SACNvf,MAAOspB,EAAE,eACTzb,MAAOrR,KAAKomG,kBACZx6F,KAAM,oBACNrD,QAASk/F,EACThhB,QAAQ,GAEX,CACGxnF,GAAI6jC,EAAIujE,0BACRtjF,KAAM,SACNvf,MAAOspB,EAAE,0BACTzb,MAAOrR,KAAKqmG,0BACZz6F,KAAM,4BACNrD,QAASk/F,EACThhB,QAAQ,GAEX,CACGxnF,GAAI6jC,EAAIwjE,SACRvjF,KAAM,SACNvf,MAAOspB,EAAE,wBACTzb,MAAOrR,KAAKsmG,SACZ16F,KAAM,WACNrD,QAAS0+F,EACThmG,GAAI,CACD,QAAAowC,CAAS0tC,EAAQmN,GACVnN,GAAUmN,IAEXyb,EAAWR,EAAcpoB,GAEzBqoB,EAAaQ,EAAgBD,GAEnC,IAGN,CACG1oG,GAAI6jC,EAAIyjE,eACRxjF,KAAM,SACNvf,MAAOspB,EAAE,eACTzb,MAAOrR,KAAKumG,eACZ36F,KAAM,iBACNrD,QAASo/F,EACTlhB,QAAQ,GAEX,CACGxnF,GAAI6jC,EAAI0jE,UACRzjF,KAAM,SACNvf,MAAOspB,EAAE,UACTzb,MAAOrR,KAAKwmG,UACZ56F,KAAM,YACNrD,QAASo/F,EACTlhB,QAAQ,GAEX,CACGxnF,GAAI6jC,EAAI2jE,cACR1jF,KAAM,SACNvf,MAAOspB,EAAE,cACTzb,MAAOrR,KAAKymG,cACZ76F,KAAM,gBACNrD,QAASo/F,EACTlhB,QAAQ,EACRxlF,GAAI,CACD,QAAAowC,CAAS0tC,EAAQmN,GACVnN,GAAUmN,GACX6b,EAAiBhpB,EAEvB,IAGN,CACG9/E,GAAI6jC,EAAI4jE,sBACR3jF,KAAM,SACNvf,MAAOspB,EAAE,wBACTzb,MAAOrR,KAAK0mG,sBACZ96F,KAAM,wBACNrD,QAAS4/F,EACT1hB,QAAQ,GAEX,CACGxnF,GAAI6jC,EAAI6jE,SACR5jF,KAAM,SACNvf,MAAOspB,EAAE,kBACTzb,MAAOrR,KAAK2mG,SACZ/6F,KAAM,WACNrD,QAAS0+F,EACThmG,GAAI,CACD,QAAAowC,CAAS0tC,EAAQmN,GACVnN,GAAUmN,IAEXkc,EAAWjB,EAAcpoB,GAEzBqoB,EAAaiB,EAAgBD,GAEnC,IAGN,CACGnpG,GAAI6jC,EAAI8jE,uBACR7jF,KAAM,SACNvf,MAAOspB,EAAE,UACTzb,MAAOrR,KAAK4mG,uBACZh7F,KAAM,yBACNrD,QAAS6/F,EACT3hB,QAAQ,GAEX,CACGxnF,GAAI6jC,EAAI+jE,eACR9jF,KAAM,SACNvf,MAAOspB,EAAE,eACTzb,MAAOrR,KAAK6mG,eACZj7F,KAAM,iBACNrD,QAAS6/F,EACT3hB,QAAQ,GAEX,CACGxnF,GAAI6jC,EAAIgkE,UACR/jF,KAAM,SACNvf,MAAOspB,EAAE,UACTzb,MAAOrR,KAAK8mG,UACZl7F,KAAM,YACNrD,QAAS6/F,EACT3hB,QAAQ,GAEX,CACGxnF,GAAI6jC,EAAIikE,eACRhkF,KAAM,SACNvf,MAAOspB,EAAE,eACTzb,MAAOrR,KAAK+mG,eACZn7F,KAAM,iBACNrD,QAAS6/F,EACT3hB,QAAQ,KAKjBrjF,MAAMw8D,GAAGA,EAAIpzC,GAAGvtB,IAIZe,KAAKmmG,aAAmC,GAApBnmG,KAAKmmG,aAC1BiB,EAAaM,EAAmBD,GAG/BznG,KAAKsmG,UAA6B,GAAjBtmG,KAAKsmG,UACvBc,EAAaQ,EAAgBD,GAG5B3nG,KAAKymG,eACNsB,EAAiB/nG,KAAKymG,eAGrBzmG,KAAK2mG,UAA6B,GAAjB3mG,KAAK2mG,UACvBS,EAAaiB,EAAgBD,GAGhC57E,GAAGvtB,GAAI4rF,MACV,CAQA,eAAAoa,CAAgBhmG,GACb,IAAI6jC,EAAM9iC,KAAKimG,YAAYhnG,GAC3Be,KAAK4L,KAAO5L,KAAKklG,SAASpiE,EAAIl3B,MAE9B5L,KAAKw7B,SAAS7Z,SAAS3b,SAASyuB,IAC7Bz0B,KAAKy0B,GAAKz0B,KAAKklG,SAASpiE,EAAIrO,GAAG,GAErC,mBC3XH,MAAM6zE,EAAwB,EAAQ,OAEtC,IAAIx7E,EAAI,IAAIjkB,IAAWtI,GAAGgD,aAAaC,SAASqF,GAEhDlJ,EAAOC,QAAU,cAAgC0oG,EAK9C,WAAArC,CAAYhnG,GACT,MAAO,CACJ2M,KAAM,GAAG3M,SACTspG,eAAgB,GAAGtpG,mBACnBupG,SAAU,GAAGvpG,aACbwpG,SAAU,GAAGxpG,aACbypG,UAAW,GAAGzpG,cACd0pG,aAAc,GAAG1pG,iBACjB2pG,YAAa,GAAG3pG,gBAChB4pG,cAAe,GAAG5pG,kBAClB6pG,cAAe,GAAG7pG,kBAClB8pG,gBAAiB,GAAG9pG,oBACpB+pG,eAAgB,GAAG/pG,mBACnBgqG,eAAgB,GAAGhqG,mBACnBiqG,UAAW,GAAGjqG,cACdkqG,aAAc,GAAGlqG,gBACjBmqG,cAAe,GAAGnqG,kBAClBoqG,aAAc,GAAGpqG,iBACjBqqG,cAAe,GAAGrqG,kBAClBsqG,gBAAiB,GAAGtqG,oBACpBuqG,oBAAqB,GAAGvqG,wBACxBwqG,eAAgB,GAAGxqG,mBACnByqG,eAAgB,GAAGzqG,mBAEzB,CAQA,cAAA+lG,CAAe/lG,GACZ,IAAI6jC,EAAM9iC,KAAKimG,YAAYhnG,GAEvB+nG,EAAgB,CAAC,CAAE/nG,GAAI,EAAGoS,MAAOyb,EAAE,6BACf9sB,KAAK0iB,QAAQksB,kBAAkB5uC,OACjC,IAAIgG,SAASwQ,IAChCwwF,EAAc5/F,KAAK,CAAEnI,GAAIuX,EAAI/T,IAAK4O,MAAOmF,EAAIhT,OAAQ,IAGxD,IAAIyjG,EAAajnG,KAAKO,GAAGygB,UAAUliB,KAAKM,IAC9B,CAAEH,GAAIG,EAAEH,GAAIoS,MAAOjS,EAAEoE,OAASpE,EAAEwM,KAAMkZ,OAAQ1lB,MAExD6nG,EAAW11E,QAAQ,CAChBtyB,GAAI,EACJoS,MAAOyb,EAAE,sBAGZ,IAAI68E,EAAmB9+D,IACpB,IAAIvgB,EAAS,CACV,CACGrrB,GAAI,EACJoS,MAAOyb,EAAE,oBAIf,GAAI+d,EAAO,CACR,IAAIp6B,EAAQw2F,EAAWn+E,MAAM1pB,GAAMA,EAAEH,IAAM4rC,IACvCp6B,GAASA,EAAMqU,QAChBrU,EAAMqU,OAAOwF,SAAStkB,SAAS0b,IAC5B4I,EAAOljB,KAAK,CAAEnI,GAAIyiB,EAAEziB,GAAIoS,MAAOqQ,EAAEle,MAAOmrB,MAAOjN,GAAI,GAG5D,CACA,OAAO4I,CAAM,EAGZs/E,EAAyBC,IAC1B,IAAI3lG,EAAS,GACT4lG,EAAW9pG,KAAKO,GAAGoL,WAAW3L,KAAKwoG,UACvC,IAAKsB,EAAU,OAAO5lG,EAEtB,IAAI6lG,EAAgBD,EAASliF,UAAUiiF,GACvC,OACIE,GACAA,EAAcpoF,UACdooF,EAAcpoF,SAASpZ,SAI3BrE,GAAU6lG,EAAcpoF,SAASpZ,SAAW,IAAIzJ,KAAKw1C,IAC3C,CACJr1C,GAAIq1C,EAAIr1C,GACRoS,MAAOijC,EAAI7wC,SAIVS,GATGA,CASG,EAgDZ8lG,EAAiB,CAACv+F,EAAUknC,KAC7B,IAAIzuC,EAAS,GACT4gB,EAAS9kB,KAAKO,GAAGoL,WAAWF,GAChC,IAAKqZ,EAAQ,OAAO5gB,EAEpB,IAAI6lG,EAAgBjlF,EAAO8C,UAAU+qB,GACrC,OACIo3D,GACAA,EAAcpoF,UACdooF,EAAcpoF,SAASpZ,SAI3BrE,GAAU6lG,EAAcpoF,SAASpZ,SAAW,IAAIzJ,KAAKw1C,IAC3C,CACJr1C,GAAIq1C,EAAIr1C,GACRoS,MAAOijC,EAAI7wC,SAIVS,GATGA,CASG,EAGZ+lG,EAAWN,EAAgB3pG,KAAKwoG,UAChC0B,EAAWP,EAAgB3pG,KAAKyoG,UAChC0B,EAAYR,EAAgB3pG,KAAK0oG,WACjC0B,EAAiBR,EAAsB5pG,KAAK6oG,eAC5CwB,EAAiBL,EAAehqG,KAAK0oG,UAAW1oG,KAAKqpG,cAEzD,IAAIzpC,EAAK,CACN3gE,GAAIA,EACJ8jB,KAAM,OACNunF,eAAgB,CACbt2C,WAAY,KAEf59C,SAAU,CACP,CACGnX,GAAI6jC,EAAIl3B,KACRmX,KAAM,OACNvf,MAAOspB,EAAE,QACTlhB,KAAM,OACNyF,MAAOrR,KAAK4L,MAEf,CACG3M,GAAI6jC,EAAIylE,eACRxlF,KAAM,SACNvf,MAAOspB,EAAE,+BACTzb,MAAOrR,KAAKuoG,eACZ38F,KAAM,iBACNrD,QAASy+F,GAEZ,CACG/nG,GAAI6jC,EAAI0lE,SACRzlF,KAAM,SACNvf,MAAOspB,EAAE,aACTzb,MAAOrR,KAAKwoG,SACZ58F,KAAM,WACNrD,QAAS0+F,EACThmG,GAAI,CACD,QAAAowC,CAAS0tC,EAAQmN,GACVnN,GAAUmN,IAEX+d,EAAWN,EAAgB5qB,GA3GxB,CAACkrB,IACnB,CAACnnE,EAAI6lE,aAAc7lE,EAAI8lE,YAAa9lE,EAAI+lE,eAAe7iG,SACnDukG,IACE/9E,GAAG+9E,GAAanwB,OAAO,UAAW6vB,GAClCz9E,GAAG+9E,GAAa3zF,SAAS,GAE9B,EAuGc4zF,CAAeP,GAErB,IAGN,CACGhrG,GAAI6jC,EAAI2lE,SACR1lF,KAAM,SACNvf,MAAOspB,EAAE,aACTzb,MAAOrR,KAAKyoG,SACZ78F,KAAM,WACNrD,QAAS0+F,EACThmG,GAAI,CACD,QAAAowC,CAAS0tC,EAAQmN,GACVnN,GAAUmN,IAEXge,EAAWP,EAAgB5qB,GA/GxB,CAACmrB,IACnB,CACGpnE,EAAIkmE,eACJlmE,EAAImmE,eACJnmE,EAAIomE,UACJpmE,EAAIqmE,aACJrmE,EAAIsmE,eACLpjG,SAASukG,IACR/9E,GAAG+9E,GAAanwB,OAAO,UAAW8vB,GAClC19E,GAAG+9E,GAAa3zF,SAAS,GAC1B,EAuGa6zF,CAAeP,GAErB,IAGN,CACGjrG,GAAI6jC,EAAI4lE,UACR3lF,KAAM,SACNvf,MAAOspB,EAAE,kBACTzb,MAAOrR,KAAK0oG,UACZ98F,KAAM,YACNrD,QAAS0+F,EACThmG,GAAI,CACD,QAAAowC,CAAS0tC,EAAQmN,GACVnN,GAAUmN,IACXie,EAAYR,EAAgB5qB,GAnHxB,CAACorB,IACpB39E,GAAGsW,EAAIumE,cAAcjvB,OAAO,UAAW+vB,GACvC39E,GAAGsW,EAAIumE,cAAczyF,SAAS,EAkHf8zF,CAAgBP,GAEtB,IAGN,CACGlrG,GAAI6jC,EAAI6lE,aACR5lF,KAAM,SACNvf,MAAOspB,EAAE,eACTzb,MAAOrR,KAAK2oG,aACZ/8F,KAAM,eACNrD,QAAS0hG,GAEZ,CACGhrG,GAAI6jC,EAAI8lE,YACR7lF,KAAM,SACNvf,MAAOspB,EAAE,cACTzb,MAAOrR,KAAK4oG,YACZh9F,KAAM,cACNrD,QAAS0hG,GAEZ,CACGhrG,GAAI6jC,EAAI+lE,cACR9lF,KAAM,SACNvf,MAAOspB,EAAE,gBACTzb,MAAOrR,KAAK6oG,cACZj9F,KAAM,gBACNrD,QAAS0hG,EACThpG,GAAI,CACD,QAAAowC,CAAS0tC,EAAQmN,GAnKF,IAACye,EAoKT5rB,GAAUmN,IACXke,EAAiBR,EAAsB7qB,GArK7B4rB,EAsKWP,EArKpC59E,GAAGsW,EAAIgmE,eAAe1uB,OAAO,UAAWuwB,GACxCn+E,GAAGsW,EAAIgmE,eAAelyF,UAsKb,IAGN,CACG3X,GAAI6jC,EAAIgmE,cACR/lF,KAAM,SACNvf,MAAOspB,EAAE,gBACTzb,MAAOrR,KAAK8oG,cACZl9F,KAAM,gBACNrD,QAAS6hG,GAEZ,CACGnrG,GAAI6jC,EAAIimE,gBACRhmF,KAAM,SACNvf,MAAOspB,EAAE,qBACTzb,MAAOrR,KAAK+oG,gBACZn9F,KAAM,kBACNrD,QAAS2hG,GAEZ,CACGjrG,GAAI6jC,EAAIkmE,eACRjmF,KAAM,SACNvf,MAAOspB,EAAE,oBACTzb,MAAOrR,KAAKgpG,eACZp9F,KAAM,iBACNrD,QAAS2hG,GAEZ,CACGjrG,GAAI6jC,EAAImmE,eACRlmF,KAAM,SACNvf,MAAOspB,EAAE,iBACTzb,MAAOrR,KAAKipG,eACZr9F,KAAM,iBACNrD,QAAS2hG,GAEZ,CACGjrG,GAAI6jC,EAAIomE,UACRnmF,KAAM,SACNvf,MAAOspB,EAAE,YACTzb,MAAOrR,KAAKkpG,UACZt9F,KAAM,YACNrD,QAAS2hG,GAEZ,CACGjrG,GAAI6jC,EAAIqmE,aACRpmF,KAAM,SACNvf,MAAOspB,EAAE,eACTzb,MAAOrR,KAAKmpG,aACZv9F,KAAM,eACNrD,QAAS2hG,GAEZ,CACGjrG,GAAI6jC,EAAIsmE,cACRrmF,KAAM,SACNvf,MAAOspB,EAAE,gBACTzb,MAAOrR,KAAKopG,cACZx9F,KAAM,gBACNrD,QAAS2hG,GAEZ,CACGjrG,GAAI6jC,EAAIumE,aACRtmF,KAAM,SACNvf,MAAOspB,EAAE,eACTzb,MAAOrR,KAAKqpG,aACZz9F,KAAM,eACNrD,QAAS4hG,EACTlpG,GAAI,CACDowC,SAAU,CAAC0tC,EAAQmN,KACZnN,GAAUmN,IACXme,EAAiBL,EACdhqG,KAAK0oG,WAAal8E,GAAGsW,EAAI4lE,WAAWhtD,WACpCqjC,GAxNM,CAACsrB,IACzB,CACGvnE,EAAIwmE,cACJxmE,EAAIymE,gBACJzmE,EAAI0mE,oBACJ1mE,EAAI2mE,eACJ3mE,EAAI4mE,gBACL1jG,SAASukG,IACR/9E,GAAG+9E,GAAanwB,OAAO,UAAWiwB,GAClC79E,GAAG+9E,GAAa3zF,SAAS,GAC1B,EAgNag0F,CAAqBP,GACxB,IAIT,CACGprG,GAAI6jC,EAAIwmE,cACRvmF,KAAM,SACNvf,MAAOspB,EAAE,gBACTzb,MAAOrR,KAAKspG,cACZ19F,KAAM,gBACNrD,QAAS8hG,GAEZ,CACGprG,GAAI6jC,EAAIymE,gBACRxmF,KAAM,SACNvf,MAAOspB,EAAE,kBACTzb,MAAOrR,KAAKupG,gBACZ39F,KAAM,kBACNrD,QAAS8hG,GAEZ,CACGprG,GAAI6jC,EAAI0mE,oBACRzmF,KAAM,SACNvf,MAAOspB,EAAE,sBACTzb,MAAOrR,KAAKwpG,oBACZ59F,KAAM,sBACNrD,QAAS8hG,GAEZ,CACGprG,GAAI6jC,EAAI2mE,eACR1mF,KAAM,SACNvf,MAAOspB,EAAE,iBACTzb,MAAOrR,KAAKypG,eACZ79F,KAAM,iBACNrD,QAAS8hG,GAEZ,CACGprG,GAAI6jC,EAAI4mE,eACR3mF,KAAM,SACNvf,MAAOspB,EAAE,iBACTzb,MAAOrR,KAAK0pG,eACZ99F,KAAM,iBACNrD,QAAS8hG,KAKlBjnG,MAAMw8D,GAAGA,EAAIpzC,GAAGvtB,IAEhButB,GAAGvtB,GAAI4rF,MACV,CAQA,eAAAoa,CAAgBhmG,GACb,IAAI6jC,EAAM9iC,KAAKimG,YAAYhnG,GAC3Be,KAAK4L,KAAO5L,KAAKklG,SAASpiE,EAAIl3B,MAI9B5L,KAAKw7B,SAAS7Z,SAAS3b,SAASyuB,IAC7Bz0B,KAAKy0B,GAAKz0B,KAAKklG,SAASpiE,EAAIrO,GAAG,GAErC,oBClaH,MAAMo2E,EAA4B,EAAQ,OAE1C,IAAI/9E,EAAI,IAAIjkB,IAAWtI,GAAGgD,aAAaC,SAASqF,GAEhDlJ,EAAOC,QAAU,cAAoCirG,EAIlD,WAAA5E,CAAYhnG,GACT,MAAO,CACJ2M,KAAM,GAAG3M,SACT6rG,mBAAoB,GAAG7rG,uBACvB8rG,aAAc,GAAG9rG,iBACjB+rG,cAAe,GAAG/rG,kBAClBwpG,SAAU,GAAGxpG,aACbgsG,cAAe,GAAGhsG,kBAClBisG,kBAAmB,GAAGjsG,sBACtBksG,eAAgB,GAAGlsG,mBACnBmsG,iBAAkB,GAAGnsG,qBACrBosG,eAAgB,GAAGpsG,mBACnBqsG,kBAAmB,GAAGrsG,sBACtBssG,kBAAmB,GAAGtsG,sBACtBusG,kBAAmB,GAAGvsG,sBACtBwsG,gBAAiB,GAAGxsG,oBACpBysG,oBAAqB,GAAGzsG,wBACxB0sG,sBAAuB,GAAG1sG,0BAC1B2sG,UAAW,GAAG3sG,cACd4sG,eAAgB,GAAG5sG,mBACnBoqG,aAAc,GAAGpqG,iBACjB6sG,mBAAoB,GAAG7sG,uBACvB8sG,oBAAqB,GAAG9sG,wBACxB+sG,mBAAoB,GAAG/sG,uBAE7B,CAQA,cAAA+lG,CAAe/lG,GACZ,IAAI6jC,EAAM9iC,KAAKimG,YAAYhnG,GAEvB+nG,EAAgB,CAAC,CAAE/nG,GAAI,EAAGoS,MAAOyb,EAAE,6BACf9sB,KAAK0iB,QAAQksB,kBAAkB5uC,OACjC,IAAIgG,SAASwQ,IAChCwwF,EAAc5/F,KAAK,CAAEnI,GAAIuX,EAAI/T,IAAK4O,MAAOmF,EAAIhT,OAAQ,IAGxD,IAAIyjG,EAAajnG,KAAKO,GAAGygB,UAAUliB,KAAKM,IAC9B,CAAEH,GAAIG,EAAEH,GAAIoS,MAAOjS,EAAEoE,OAASpE,EAAEwM,KAAMkZ,OAAQ1lB,MAExD6nG,EAAW11E,QAAQ,CAChBtyB,GAAI,EACJoS,MAAOyb,EAAE,sBAGZ,IAAI68E,EAAkB,CAAC9+D,EAAO2V,KAC3B,IAAIl2B,EAAS,CACV,CACGrrB,GAAI,EACJoS,MAAOyb,EAAE,oBAIf,GAAI+d,EAAO,CACR,IAAIp6B,EAAQw2F,EAAWn+E,MAAM1pB,GAAMA,EAAEH,IAAM4rC,IACvCp6B,GAASA,EAAMqU,QAChBrU,EAAMqU,OACFwF,QAAQ5I,GAAMA,EAAEjf,KAAO+9C,IACvBx6C,SAAS0b,IACP4I,EAAOljB,KAAK,CAAEnI,GAAIyiB,EAAEziB,GAAIoS,MAAOqQ,EAAEle,MAAOmrB,MAAOjN,GAAI,GAG/D,CACA,OAAO4I,CAAM,EAGZ0/E,EAAiB,CAACv+F,EAAUknC,KAC7B,IAAIzuC,EAAS,GACT4gB,EAAS9kB,KAAKO,GAAGoL,WAAWF,GAChC,IAAKqZ,EAAQ,OAAO5gB,EAEpB,IAAI6lG,EAAgBjlF,EAAO8C,UAAU+qB,GACrC,OACIo3D,GACAA,EAAcpoF,UACdooF,EAAcpoF,SAASpZ,SAI3BrE,GAAU6lG,EAAcpoF,SAASpZ,SAAW,IAAIzJ,KAAKw1C,IAC3C,CACJr1C,GAAIq1C,EAAIr1C,GACRoS,MAAOijC,EAAI7wC,SAIVS,GATGA,CASG,EA8DZ+nG,EAAmBtC,EAAgB3pG,KAAK+qG,aAAc,QACtDmB,EAAqBvC,EAAgB3pG,KAAK+qG,aAAc,QACxDoB,EAAsBnC,EACvBhqG,KAAK+qG,aACL/qG,KAAKsrG,mBAEJc,EAAoBzC,EAAgB3pG,KAAKgrG,cAAe,QACxDqB,EAAiB1C,EAAgB3pG,KAAKyoG,SAAU,UAChD6D,EAAa3C,EAAgB3pG,KAAKyoG,SAAU,iBAC5C8D,EAAkB5C,EAAgB3pG,KAAKirG,cAAe,UACtDuB,EAAgB7C,EAAgB3pG,KAAKirG,cAAe,QACpDZ,EAAiBL,EAClBhqG,KAAKirG,cACLjrG,KAAKqpG,cAGR,IAAIzpC,EAAK,CACN3gE,GAAIA,EACJ8jB,KAAM,OACNunF,eAAgB,CACbt2C,WAAY,KAEf59C,SAAU,CACP,CACGnX,GAAI6jC,EAAIl3B,KACRmX,KAAM,OACNvf,MAAOspB,EAAE,QACTlhB,KAAM,OACNyF,MAAOrR,KAAK4L,MAEf,CACG3M,GAAI6jC,EAAIgoE,mBACR/nF,KAAM,SACNvf,MAAOspB,EAAE,oCACTzb,MAAOrR,KAAK8qG,mBACZl/F,KAAM,qBACNrD,QAASy+F,GAEZ,CACG/nG,GAAI6jC,EAAIioE,aACRhoF,KAAM,SACNvf,MAAOspB,EAAE,kBACTzb,MAAOrR,KAAK+qG,aACZn/F,KAAM,eACNrD,QAAS0+F,EACThmG,GAAI,CACDowC,SAAU,CAAC0tC,EAAQmN,KApFD,IAACugB,EAqFZ1tB,GAAUmN,IACX+f,EAAmBtC,EAAgB5qB,EAAQ,QAtF9B0tB,EAuFWR,EAtFvC,CAACnpE,EAAIsoE,iBAAkBtoE,EAAIuoE,gBAAgBrlG,SAASukG,IACjD/9E,GAAG+9E,GAAanwB,OAAO,UAAWqyB,GAClCjgF,GAAG+9E,GAAa3zF,SAAS,IAsFb41F,EAAgB7C,EAAgB5qB,EAAQ,QAlF1B,CAACmtB,IAC9B1/E,GAAGsW,EAAIwoE,mBAAmBlxB,OAAO,UAAW8xB,GAC5C1/E,GAAGsW,EAAIwoE,mBAAmB10F,SAAS,EAiFpB81F,CAA0BF,GAC7B,IAIT,CACGvtG,GAAI6jC,EAAIkoE,cACRjoF,KAAM,SACNvf,MAAOspB,EAAE,mBACTzb,MAAOrR,KAAKgrG,cACZp/F,KAAM,gBACNrD,QAAS0+F,EACThmG,GAAI,CACDowC,SAAU,CAAC0tC,EAAQmN,KAtFD,IAACygB,EAuFZ5tB,GAAUmN,IACXkgB,EAAoBzC,EAAgB5qB,EAAQ,QAxF/B4tB,EAyFWP,EAxFvC,CAACtpE,EAAI0oE,kBAAmB1oE,EAAI2oE,iBAAiBzlG,SAASukG,IACnD/9E,GAAG+9E,GAAanwB,OAAO,UAAWuyB,GAClCngF,GAAG+9E,GAAa3zF,SAAS,IAuFhB,IAIT,CACG3X,GAAI6jC,EAAI2lE,SACR1lF,KAAM,SACNvf,MAAOspB,EAAE,kBACTzb,MAAOrR,KAAKyoG,SACZ78F,KAAM,WACNrD,QAAS0+F,EACThmG,GAAI,CACDowC,SAAU,CAAC0tC,EAAQmN,KAtFH,IAAC0gB,EATDC,EAgGT9tB,GAAUmN,IACXmgB,EAAiB1C,EAAgB5qB,EAAQ,UAjG/B8tB,EAkGWR,EAjGpC,CAACvpE,EAAI4oE,oBAAqB5oE,EAAI6oE,uBAAuB3lG,SACjDukG,IACE/9E,GAAG+9E,GAAanwB,OAAO,UAAWyyB,GAClCrgF,GAAG+9E,GAAa3zF,SAAS,IAgGhB01F,EAAa3C,EAAgB5qB,EAAQ,iBA3F1B6tB,EA4FWN,EA3FrC9/E,GAAGsW,EAAI8oE,WAAWxxB,OAAO,UAAWwyB,GACpCpgF,GAAGsW,EAAI8oE,WAAWh1F,UA2FN,IAIT,CACG3X,GAAI6jC,EAAImoE,cACRloF,KAAM,SACNvf,MAAOspB,EAAE,kBACTzb,MAAOrR,KAAKirG,cACZr/F,KAAM,gBACNrD,QAAS0+F,EACThmG,GAAI,CACDowC,SAAU,CAAC0tC,EAAQmN,KA1JT,IAACie,EA2JJprB,GAAUmN,IACXsgB,EAAgB7C,EAAgB5qB,EAAQ,QA5JnCorB,EA6JWqC,EA5J/BhgF,GAAGsW,EAAIumE,cAAcjvB,OAAO,UAAW+vB,GACvC39E,GAAGsW,EAAIumE,cAAczyF,UA6JN21F,EAAkB5C,EAAgB5qB,EAAQ,UApKhC,CAACwtB,IAC1B//E,GAAGsW,EAAI+oE,gBAAgBzxB,OAAO,UAAWmyB,GACzC//E,GAAGsW,EAAI+oE,gBAAgBj1F,SAAS,EAmKjBk2F,CAAsBP,GACzB,IAIT,CACGttG,GAAI6jC,EAAIooE,kBACRnoF,KAAM,OACNvf,MAAOspB,EAAE,sBACTzb,MAAOrR,KAAKkrG,kBACZt/F,KAAM,qBAET,CACG3M,GAAI6jC,EAAIqoE,eACRpoF,KAAM,OACNvf,MAAOspB,EAAE,mBACTzb,MAAOrR,KAAKmrG,eACZv/F,KAAM,kBAET,CACG3M,GAAI6jC,EAAIsoE,iBACRroF,KAAM,SACNvf,MAAOspB,EAAE,oBACTzb,MAAOrR,KAAKorG,iBACZx/F,KAAM,mBACNrD,QAAS0jG,GAEZ,CACGhtG,GAAI6jC,EAAIuoE,eACRtoF,KAAM,SACNvf,MAAOspB,EAAE,kBACTzb,MAAOrR,KAAKqrG,eACZz/F,KAAM,iBACNrD,QAAS0jG,GAEZ,CACGhtG,GAAI6jC,EAAIwoE,kBACRvoF,KAAM,SACNvf,MAAOspB,EAAE,qBACTzb,MAAOrR,KAAKsrG,kBACZ1/F,KAAM,oBACNrD,QAAS2jG,EACTjrG,GAAI,CACDowC,SAAU,CAAC0tC,EAAQmN,KACZnN,GAAUmN,IACXigB,EAAsBnC,EACnBhqG,KAAK+qG,cAAgBv+E,GAAGsW,EAAIioE,cAAcrvD,WAC1CqjC,GAnLW,CAACotB,IAC9B3/E,GAAGsW,EAAIyoE,mBAAmBnxB,OAAO,UAAW+xB,GAC5C3/E,GAAGsW,EAAIyoE,mBAAmB30F,SAAS,EAmLpBm2F,CAA0BZ,GAC7B,IAIT,CACGltG,GAAI6jC,EAAIyoE,kBACRxoF,KAAM,SACNvf,MAAOspB,EAAE,qBACTzb,MAAOrR,KAAKurG,kBACZ3/F,KAAM,oBACNrD,QAAS4jG,GAEZ,CACGltG,GAAI6jC,EAAI0oE,kBACRzoF,KAAM,SACNvf,MAAOspB,EAAE,qBACTzb,MAAOrR,KAAKwrG,kBACZ5/F,KAAM,oBACNrD,QAAS6jG,GAEZ,CACGntG,GAAI6jC,EAAI2oE,gBACR1oF,KAAM,SACNvf,MAAOspB,EAAE,mBACTzb,MAAOrR,KAAKyrG,gBACZ7/F,KAAM,kBACNrD,QAAS6jG,GAEZ,CACGntG,GAAI6jC,EAAI4oE,oBACR3oF,KAAM,SACNvf,MAAOspB,EAAE,uBACTzb,MAAOrR,KAAK0rG,oBACZ9/F,KAAM,sBACNrD,QAAS8jG,GAEZ,CACGptG,GAAI6jC,EAAI6oE,sBACR5oF,KAAM,SACNvf,MAAOspB,EAAE,yBACTzb,MAAOrR,KAAK2rG,sBACZ//F,KAAM,wBACNrD,QAAS8jG,GAEZ,CACGptG,GAAI6jC,EAAI8oE,UACR7oF,KAAM,SACNvf,MAAOspB,EAAE,YACTzb,MAAOrR,KAAK4rG,UACZhgG,KAAM,YACNrD,QAAS+jG,GAEZ,CACGrtG,GAAI6jC,EAAI+oE,eACR9oF,KAAM,SACNvf,MAAOspB,EAAE,yBACTzb,MAAOrR,KAAK6rG,eACZjgG,KAAM,iBACNrD,QAASgkG,GAEZ,CACGttG,GAAI6jC,EAAIumE,aACRtmF,KAAM,SACNvf,MAAOspB,EAAE,eACTzb,MAAOrR,KAAKqpG,aACZz9F,KAAM,eACNrD,QAASikG,EACTvrG,GAAI,CACDowC,SAAU,CAAC0tC,EAAQmN,KACZnN,GAAUmN,IACXme,EAAiBL,EACdhqG,KAAKirG,eACFz+E,GAAGsW,EAAImoE,eAAevvD,WACzBqjC,GAtRM,CAACsrB,IACzB,CACGvnE,EAAIgpE,mBACJhpE,EAAIipE,oBACJjpE,EAAIkpE,oBACLhmG,SAASukG,IACR/9E,GAAG+9E,GAAanwB,OAAO,UAAWiwB,GAClC79E,GAAG+9E,GAAa3zF,SAAS,GAC1B,EAgRag0F,CAAqBP,GACxB,IAIT,CACGprG,GAAI6jC,EAAIgpE,mBACR/oF,KAAM,SACNvf,MAAOspB,EAAE,iBACTzb,MAAOrR,KAAK8rG,mBACZlgG,KAAM,qBACNrD,QAAS8hG,GAEZ,CACGprG,GAAI6jC,EAAIipE,oBACRhpF,KAAM,SACNvf,MAAOspB,EAAE,kBACTzb,MAAOrR,KAAK+rG,oBACZngG,KAAM,sBACNrD,QAAS8hG,GAEZ,CACGprG,GAAI6jC,EAAIkpE,mBACRjpF,KAAM,SACNvf,MAAOspB,EAAE,iBACTzb,MAAOrR,KAAKgsG,mBACZpgG,KAAM,qBACNrD,QAAS8hG,KAKlBjnG,MAAMw8D,GAAGA,EAAIpzC,GAAGvtB,IAEhButB,GAAGvtB,GAAI4rF,MACV,CAQA,eAAAoa,CAAgBhmG,GACb,IAAI6jC,EAAM9iC,KAAKimG,YAAYhnG,GAC3Be,KAAK4L,KAAO5L,KAAKklG,SAASpiE,EAAIl3B,MAI9B5L,KAAKw7B,SAAS7Z,SAAS3b,SAASyuB,IAC7Bz0B,KAAKy0B,GAAKz0B,KAAKklG,SAASpiE,EAAIrO,GAAG,GAErC,oBC5bH,MAAMu4E,EAA0B,EAAQ,OAExC,IAAIlgF,EAAI,IAAIjkB,IAAWtI,GAAGgD,aAAaC,SAASqF,GAEhDlJ,EAAOC,QAAU,cAAkCotG,EAKhD,WAAA/G,CAAYhnG,GACT,MAAO,CACJ2M,KAAM,GAAG3M,SACTinG,kBAAmB,GAAGjnG,sBACtBknG,YAAa,GAAGlnG,gBAChBguG,cAAe,GAAGhuG,kBAClBqnG,SAAU,GAAGrnG,aACbiuG,gBAAiB,GAAGjuG,oBAEpBkuG,sBAAuB,GAAGluG,0BAC1BmuG,eAAgB,GAAGnuG,mBACnBouG,UAAW,GAAGpuG,cACdquG,sBAAuB,GAAGruG,0BAC1BsuG,mBAAoB,GAAGtuG,uBACvBuuG,eAAgB,GAAGvuG,mBACnBwuG,UAAW,GAAGxuG,cAEdyuG,YAAa,GAAGzuG,gBAEtB,CAQA,cAAA+lG,CAAe/lG,GACZ,IAAI6jC,EAAM9iC,KAAKimG,YAAYhnG,GAEvB+nG,EAAgB,CAAC,CAAE/nG,GAAI,EAAGoS,MAAOyb,EAAE,6BACf9sB,KAAK0iB,QAAQksB,kBAAkB5uC,OACjC,IAAIgG,SAASwQ,IAChCwwF,EAAc5/F,KAAK,CAAEnI,GAAIuX,EAAI/T,IAAK4O,MAAOmF,EAAIhT,OAAQ,IAGxD,IAAIyjG,EAAajnG,KAAKO,GAAGygB,UAAUliB,KAAKM,IAC9B,CAAEH,GAAIG,EAAEH,GAAIoS,MAAOjS,EAAEoE,OAASpE,EAAEwM,KAAMkZ,OAAQ1lB,MAGxD6nG,EAAW11E,QAAQ,CAChBtyB,GAAI,EACJoS,MAAOyb,EAAE,sBAGZ,IAAI6gF,EAA0BliG,IAC3B,IAAIqZ,EAAS9kB,KAAKO,GAAGoL,WAAWF,GAChC,IAAKqZ,EAAQ,MAAO,GAEpB,IAAIvc,EAAUuc,EACVwF,QAAQ5I,GAAMA,EAAE2kB,eAChBvnC,KAAK4iB,IACI,CACJziB,GAAIyiB,EAAEziB,GACNoS,MAAOqQ,EAAEle,UASlB,OALA+E,EAAQgpB,QAAQ,CACbtyB,GAAI,EACJoS,MAAOyb,EAAE,oBAGLvkB,CAAO,EAGb6+F,EAAe,CAACC,EAAcC,KAC/BD,EAAarhG,SAASuhG,IACnB,IAAIC,EAASh7E,GAAG+6E,GACZC,IACDA,EAAOptB,OAAO,UAAWktB,GACzBE,EAAO5wF,UACP4wF,EAAO3c,OACV,GACD,EA0BD+iB,EAAqB,KACtB,IAAIC,EAAerhF,GAAGsW,EAAI4qE,aAC1B,IAAKG,EAAc,OAGnBzqG,MAAMw8D,GAAG,GAAIiuC,GAEb,IAAIC,EAAQ9tG,KAAKO,GAAGoL,WAAW3L,KAAKsmG,UACpC,IAAKwH,EAAO,OAEZ,IAAIC,EAAe/tG,KAAKO,GAAGoL,WAAW3L,KAAKktG,iBACtCa,IAGLA,EAAazjF,SAAStkB,SAAS0b,IAC5B,IAAIimF,EAAW,GAGZA,EADCjmF,EAAE2kB,aACQynE,EAAMxjF,QAAQ0jF,GAEnBA,EAAI3nE,cACJ2nE,EAAIrsF,UACJD,EAAEC,UACFqsF,EAAIrsF,SAASC,YAAcF,EAAEC,SAASC,YACtCosF,EAAIrsF,SAAS2M,UAAY5M,EAAEC,SAAS2M,UACpC0/E,EAAIrsF,SAASkS,aAAenS,EAAEC,SAASkS,aACvCm6E,EAAIrsF,SAAS4yB,YAAc7yB,EAAEC,SAAS4yB,aAIjCu5D,EAAMxjF,QAAQ0jF,GAAQA,EAAIvrG,KAAOif,EAAEjf,MAGjDklG,EAAWA,EAAS7oG,KAAKkvG,IACf,CACJ/uG,GAAI+uG,EAAI/uG,GACRoS,MAAO28F,EAAIxqG,UAIjBqqG,EAAahhF,QAAQ,CAClB9J,KAAM,SACNnX,KAAM8V,EAAEziB,GACRuE,MAAOke,EAAEle,MACT+E,QAASo/F,GACV,IAGLkG,EAAarM,UAAUxhG,KAAK0tG,aAAe,CAAC,GAAE,EAG7CO,EAAiBN,EAAuB3tG,KAAKmmG,aAC7C+H,EAAmBP,EAAuB3tG,KAAKitG,eAC/CkB,EAAcR,EAAuB3tG,KAAKsmG,UAC1C8H,EAAqBT,EAAuB3tG,KAAKktG,iBAEjDttC,EAAK,CACN3gE,GAAIA,EACJ8jB,KAAM,OACNunF,eAAgB,CACbt2C,WAAY,KAEf59C,SAAU,CACP,CACGnX,GAAI6jC,EAAIl3B,KACRmX,KAAM,OACNvf,MAAOspB,EAAE,QACTlhB,KAAM,OACNyF,MAAOrR,KAAK4L,MAEf,CACG3M,GAAI6jC,EAAIojE,kBACRnjF,KAAM,SACNvf,MAAOspB,EAAE,uBACTzb,MAAOrR,KAAKkmG,kBACZt6F,KAAM,oBACNrD,QAASy+F,GAEZ,CACG/nG,GAAI6jC,EAAIqjE,YACRpjF,KAAM,SACNvf,MAAOspB,EAAE,gBACTzb,MAAOrR,KAAKmmG,YACZv6F,KAAM,cACNrD,QAAS0+F,EACThmG,GAAI,CACDowC,SAAW0tC,IACR/+E,KAAKmmG,YAAcpnB,EA9GT,CAACtzE,IACvB,IAAIlD,EAAUolG,EAAuBliG,GACrC27F,EAAa,CAACtkE,EAAIqqE,uBAAwB5kG,EAAQ,EA6GtC8lG,CAAmBtvB,EAAO,IAInC,CACG9/E,GAAI6jC,EAAIqqE,sBACRpqF,KAAM,SACNvf,MAAOspB,EAAE,yBACTzb,MAAOrR,KAAKmtG,sBACZvhG,KAAM,wBACNrD,QAAS0lG,GAEZ,CACGhvG,GAAI6jC,EAAImqE,cACRlqF,KAAM,SACNvf,MAAOspB,EAAE,aACTzb,MAAOrR,KAAKitG,cACZrhG,KAAM,gBACNrD,QAAS0+F,EACThmG,GAAI,CACDowC,SAAW0tC,IACR/+E,KAAKitG,cAAgBluB,EA/Hd,CAACtzE,IACpB,IAAIlD,EAAUolG,EAAuBliG,GACrC27F,EACG,CAACtkE,EAAI0qE,eAAgB1qE,EAAIyqE,mBAAoBzqE,EAAI2qE,WACjDllG,EACF,EA2HW+lG,CAAgBvvB,EAAO,IAIhC,CACG9/E,GAAI6jC,EAAIyqE,mBACRxqF,KAAM,SACNvf,MAAOspB,EAAE,sBACTzb,MAAOrR,KAAKutG,mBACZ3hG,KAAM,qBACNrD,QAAS2lG,GAEZ,CACGjvG,GAAI6jC,EAAI0qE,eACRzqF,KAAM,SACNvf,MAAOspB,EAAE,iBACTzb,MAAOrR,KAAKwtG,eACZ5hG,KAAM,iBACNrD,QAAS2lG,GAEZ,CACGjvG,GAAI6jC,EAAI2qE,UACR1qF,KAAM,SACNvf,MAAOspB,EAAE,YACTzb,MAAOrR,KAAKytG,UACZ7hG,KAAM,YACNrD,QAAS2lG,GAEZ,CACGjvG,GAAI6jC,EAAIwjE,SACRvjF,KAAM,SACNvf,MAAOspB,EAAE,aACTzb,MAAOrR,KAAKsmG,SACZ16F,KAAM,WACNrD,QAAS0+F,EACThmG,GAAI,CACDowC,SAAW0tC,IACR/+E,KAAKsmG,SAAWvnB,EA7JT,CAACtzE,IACpB,IAAIlD,EAAUolG,EAAuBliG,GACrC27F,EAAa,CAACtkE,EAAIsqE,eAAgBtqE,EAAIuqE,WAAY9kG,EAAQ,EA4J9CgmG,CAAgBxvB,GAChB6uB,GAAoB,IAI7B,CACG3uG,GAAI6jC,EAAIsqE,eACRrqF,KAAM,SACNvf,MAAOspB,EAAE,iBACTzb,MAAOrR,KAAKotG,eACZxhG,KAAM,iBACNrD,QAAS4lG,GAEZ,CACGlvG,GAAI6jC,EAAIuqE,UACRtqF,KAAM,SACNvf,MAAOspB,EAAE,YACTzb,MAAOrR,KAAKqtG,UACZzhG,KAAM,YACNrD,QAAS4lG,GAEZ,CACGlvG,GAAI6jC,EAAIoqE,gBACRnqF,KAAM,SACNvf,MAAOspB,EAAE,qBACTzb,MAAOrR,KAAKktG,gBACZthG,KAAM,kBACNrD,QAAS0+F,EACThmG,GAAI,CACDowC,SAAW0tC,IACR/+E,KAAKktG,gBAAkBnuB,EAvLT,CAACtzE,IAC3B,IAAIlD,EAAUolG,EAAuBliG,GACrC27F,EAAa,CAACtkE,EAAIwqE,uBAAwB/kG,EAAQ,EAsLtCimG,CAAuBzvB,GACvB6uB,GAAoB,IAI7B,CACG3uG,GAAI6jC,EAAIwqE,sBACRvqF,KAAM,SACNvf,MAAOspB,EAAE,oBACTzb,MAAOrR,KAAKstG,sBACZ1hG,KAAM,wBACNrD,QAAS6lG,GAEZ,CACGrrF,KAAM,WACNvf,MAAO,kBACPsK,KAAM,CACH7O,GAAI6jC,EAAI4qE,YACR3qF,KAAM,OACNyjE,YAAY,EACZpwE,SAAU,OAMtBhT,MAAMw8D,GAAGA,EAAIpzC,GAAGvtB,IAEhButB,GAAGvtB,GAAI4rF,OAEP+iB,GACH,CAQA,eAAA3I,CAAgBhmG,GACb,IAAI6jC,EAAM9iC,KAAKimG,YAAYhnG,GAC3Be,KAAK4L,KAAO5L,KAAKklG,SAASpiE,EAAIl3B,MAI9B5L,KAAKw7B,SAAS7Z,SAAS3b,SAASyuB,IAE1Bz0B,KAAKy0B,GADE,gBAANA,EACSjI,GAAGsW,EAAI4qE,aAAa/M,YAEpB3gG,KAAKklG,SAASpiE,EAAIrO,GAC/B,GAEN,oBCpVH,MAAMg6E,EAAoB,EAAQ,OAIlC9uG,EAAOC,QAAU,cAA4B6uG,EAK1C,YAAAr3B,GAOG,GANAr3E,MAAMq3E,eAEDp3E,KAAK0uG,aACP1uG,KAAK4iE,eAAe,yBAGnB5iE,KAAK0uG,YAAa,CACnB,MAAM/2E,EAAO,CAAC,GACb33B,KAAK0iB,QAAQksB,kBAAkB5uC,OAAS,IAAIgG,SAASojB,IACnDuO,EAAK,IAAIvO,EAAK5lB,UAAY4lB,CAAI,IAGjC,IAAIulF,EAAM,IAAI1zF,OAAO,UAAW,MAClBjb,KAAK0uG,YAAYphG,MAAMqhG,IAAQ,IACrC3oG,SAASyK,IACTknB,EAAKlnB,IACPzQ,KAAK4iE,eACF,oCAAoCnyD,KAE1C,GAEN,CACH,oBC9BH,MAAMm+F,EAA8C,EAAQ,OAE5DjvG,EAAOC,QAAU,cAAsD,EAGpE,YAAAw3E,GACGr3E,MAAMq3E,eAEDp3E,KAAKgC,OACPhC,KAAK4iE,eAAe,iCAYG,IATL5iE,KAAK0iB,QAAQksB,kBAAkB5uC,OAAS,IACzD2C,QAAQymB,GAA4B,SAAnBA,EAAKuF,OAAOlsB,MAC7B3D,KAAKsqB,IACI,CACJnqB,GAAImqB,EAAK3mB,IACT4O,MAAO+X,EAAK5lB,UAIL5B,QACb5B,KAAK4iE,eAAe,gDAE1B,oBC1BH,MAAMisC,EAAuB,EAAQ,OAErClvG,EAAOC,QAAU,cAA+BivG,EAC7C,YAAAz3B,GACGr3E,MAAMq3E,eAEDp3E,KAAK0uB,UACP1uB,KAAK4iE,eAAe,sBAGvB,MAAMksC,EAAKrvG,OAAOD,KAAKQ,KAAKsnG,aAAe,CAAC,IAAM,GAClD,GAAiB,GAAbwH,EAAGltG,OACJ5B,KAAK4iE,eAAe,yBAChB,CACJ,IAAImsC,GAAQ,EACZD,EAAG9oG,SAAS0b,IAEsB,KAA5B1hB,KAAKsnG,YAAY5lF,IAAIzR,KACS,MAA9BjQ,KAAKsnG,YAAY5lF,IAAIrQ,QAErB09F,GAAQ,EACX,IAEEA,GACF/uG,KAAK4iE,eAAe,oBAE1B,CACH,oBC3BH,MAAMosC,EAAgC,EAAQ,OAExCtxC,EAAc,EAAQ,OAE5B/9D,EAAOC,QAAU,cAAwC,EAGtD,WAAAE,CAAYud,EAAYqF,EAASniB,GAC9BR,MAAMsd,EAAYqF,EAASniB,GAE3BP,KAAKqd,WAAaA,CACrB,CAEA,WAAAqgD,GACG,OAAOA,CACV,CAEA,QAAA+Z,GAEG,IAAIw3B,EAAa,GAUjB,OATIjvG,KAAKg8D,QACNizC,EAAaA,EAAWt1F,OAAO3Z,KAAKg8D,MAAMyb,aAI7Cw3B,EAAWjpG,SAASm7E,IACbA,GAAGz9E,SAAS1D,KAAK4iE,eAAeue,EAAEz9E,QAAQ,IAEhC3D,MAAM03E,WACL90E,QAAQw+E,GAAMA,GACnC,CAEA,YAAA/J,GACGr3E,MAAMq3E,eACFp3E,KAAKg8D,MACNh8D,KAAKg8D,MAAMob,eAEXp3E,KAAK4iE,eAAe,yBAGlB5iE,KAAK4L,MACP5L,KAAK4iE,eAAe,wBAAyB,CAC1CvlD,WAAYrd,KAAKqd,aAIvB,IAAI6xF,GAAU,EACV9sF,EAAOpiB,KAAKg8D,MAChB,KAAO55C,GACa,aAAbA,EAAK3f,KAAmC,aAAb2f,EAAK3f,KACjCysG,GAAU,EACV9sF,EAAO,MAEPA,EAAOA,EAAK2E,KAIbmoF,GACFlvG,KAAK4iE,eAAe,wCAE1B,oBC5DH,MAAMusC,EAAiB,EAAQ,OAI/BxvG,EAAOC,QAAU,cAAyBuvG,EAwFvC,iBAAAxK,CAAkByK,GACf,IAAIC,EAAQtvG,MAAM4kG,oBAYlB,OAXA0K,EAAQA,GAAS,CAAC,CAAC,GACnBA,EAAM,GAAGn1F,IAAMm1F,EAAM,GAAGn1F,KAAO,CAAC,EAER,MAApBla,KAAKu+D,cACN8wC,EAAM,GAAGn1F,IAAMm1F,EAAM,GAAGn1F,KAAO,CAAC,EAChCm1F,EAAM,GAAGn1F,IAAIo1F,oBAAsBF,EAC/BxmG,IAAI,UACJuvE,OAAO,yCACXk3B,EAAM,GAAGn1F,IAAIo1F,oBAAoBC,cAAe,GAG5CF,CACV,CAQA,QAAAh+D,CAASozD,GACN,IAAI6K,EACD7K,EAAW6K,qBACX7K,EAAW/2D,eAAe4hE,qBAC1B,CAAC,EAEJ,OAAQA,EAAoB31C,OACzB,IAAK,wCACF35D,KAAKwvG,SAAWF,EAAoBC,aAC/B,aACA,WACL,MACH,IAAK,mCACFvvG,KAAKwvG,SAAW,UAGzB,CAQA,OAAA9nG,GAGG,OAAO1H,KAAK0iB,QAAQhb,QAAQyC,KAAKnK,KACpC,CASA,IAAA2H,GAGG,OAAO3H,KAAK0iB,QAAQ/a,KAAKwC,KAAKnK,KACjC,CAcA,4BAAAsjF,CAA6B3nD,GAC1B,IAAIwT,EAAOnvC,KAAKO,GAAGm7B,oCAAoCC,EAAS37B,MAMhE,OAHImvC,GACDnvC,KAAK+tC,WAAWoB,GAEZA,CACV,CAEA,YAAAioC,GACGr3E,MAAMq3E,gBAELp3E,KAAKo+D,oBAAsB,IAAIp4D,SAASymC,IACtCzsC,KAAK4iE,eACF,gDAAgDn2B,KAChD,CAAE/pB,QAAS1iB,KAAKf,GAAIwtC,OACtB,GAEP,oBC5LH,MAAMgjE,EAAwB,EAAQ,OAEtC9vG,EAAOC,QAAU,cAAgC6vG,oBCFjD,MAAMC,EAAgC,EAAQ,OAE9C/vG,EAAOC,QAAU,cAAwC,qBCAzD,MAAM+vG,EAAgC,EAAQ,MAE9ChwG,EAAOC,QAAU,cAAwC,oBCJzD,MAAMgwG,EAA4B,EAAQ,OAE1CjwG,EAAOC,QAAU,cAAoC,qBCArD,MAAMiwG,EAAuB,EAAQ,OAIrClwG,EAAOC,QAAU,cAA+BiwG,qBCNhD,MAAMC,EAAgC,EAAQ,OAE9CnwG,EAAOC,QAAU,cAAwC,qBCFzD,MAAMmwG,EAA4B,EAAQ,OAO1CpwG,EAAOC,QAAU,cAAoCmwG,EAMlD,IAAApoG,GACG,OACGnG,QAAQ9B,UACJ2H,MAAK,IAAMtH,MAAM4H,SAEjBN,MAAMnD,GACGlE,KAAKO,GAAGS,QAAQsI,IAAI,CACxBjH,KAAMrC,KAAK0gE,UAlBX,4BACD,4BAiB8C96D,QAC1C,OACA5F,KAAKf,OAKvB,oBClBH,MAAM+wG,EAAW,EAAQ,MACnBjhB,EAAa,WAEbjiE,EAAI,IAAIjkB,IAAWtI,GAAGgD,aAAaC,SAASqF,GA8zBlDlJ,EAAOC,QA5zBP,cAAmBowG,EAChB,WAAAlwG,CAAYud,EAAY+jD,EAAsBC,EAAQlyB,EAAM5uC,GACzDR,MAAMsd,EAAY+jD,EAAsBC,EAAQlyB,EAAM5uC,GAEtDP,KAAKiB,GAAG,WAAW,CAACyC,EAAStC,KAC1BpB,KAAK03E,UAAUtwE,KAAK,CAAE1D,UAAStC,QAAO,GAE5C,CAoBA,QAAA6uG,CAASz5F,EAAKvX,GAGXe,KAAKohE,qBAAqBp7D,SAASk8D,IAEhC,MAAMzC,EAAOz/D,KAAKkwG,KAAKjxG,GAEvBe,KAAK8iC,IAAM9iC,KAAKmwG,MAAM1wC,GACtBz/D,KAAK6I,OAAS7I,KAAK6I,QAAU,CAAC,EAE9B,IAAIunG,EAAe,KAEnB,OAAQluC,EAAKn5D,MACV,IAAK,eACF/I,KAAK6I,OAAOq5D,EAAKt2D,MAAQ4gB,GAAGxsB,KAAK8iC,IAAIutE,cAAc30D,WAEnD,MAEH,IAAK,aACF17C,KAAK6I,OAAOq5D,EAAKt2D,MAAQ4gB,GAAGxsB,KAAK8iC,IAAIwtE,YAAY50D,WAEjD,MAEH,IAAK,mBACL,IAAK,eAGF,GAFA00D,EAAe5jF,GAAGxsB,KAAK8iC,IAAIkO,WAEvBo/D,EAAc,CACf,MAAMp/D,EAAYo/D,EAAa10D,WAE3B1K,GAA2B,KAAdA,IACdhxC,KAAK6I,OAAOq5D,EAAKt2D,MAAQjF,KAAKiE,MAAMomC,GAE1C,CAEA,MAEH,IAAK,YACFhxC,KAAK6I,OAAOq5D,EAAKt2D,MAAQ4gB,GAAGxsB,KAAK8iC,IAAIytE,WAAW70D,WAGtD,GAEN,CAQA,KAAAy0D,CAAM1wC,GACH,MAAO,CACJzuB,UAAW,GAAGyuB,cACd4wC,aAAc,GAAG5wC,iBACjB6wC,WAAY,GAAG7wC,YACf2mB,MAAO,GAAG3mB,UACV+wC,OAAQ,GAAG/wC,WACXgxC,UAAW,GAAGhxC,cACd8wC,UAAW,GAAG9wC,cACdixC,OAAQ,GAAGjxC,WAEjB,CAaA,gBAAAkxC,CAAiBzuC,EAAMjjE,EAAI2gE,GAGxB,IAAKA,EAAGqsB,KAAM,CACX,IAAIrsB,EAAG2mB,KAOA,MAAM,IAAIjnF,MAAM,+CANpB,IAAK,IAAI4G,EAAI,EAAGA,EAAI05D,EAAG2mB,KAAK3kF,OAAQsE,IACjC,GAAI05D,EAAG2mB,KAAKrgF,GAAG+lF,KAAM,CAClBjsF,KAAK2wG,iBAAiBzuC,EAAMjjE,EAAI2gE,EAAG2mB,KAAKrgF,IAExC,KACH,CAGN,MACH,CAEA,MAAM0qG,EAAU5wG,KAAK6wG,UAAU3uC,EAAMjjE,GAEjC2xG,IAEwC,IAArC5wG,KAAKohE,qBAAqBx/D,QAC3Bg+D,EAAGqsB,KAAK92C,MACRyqB,EAAGqsB,KAAK7kF,KAAKwpG,IAKThxC,EAAGqsB,KAAKrqF,OAAS,EAClBg+D,EAAGqsB,KAAK7kF,KAAK,CACVm/E,KAAM,CAACqqB,KAGRhxC,EAAGqsB,KAAK,GAAG1F,KAAKn/E,KAAKwpG,GAGnC,CAUA,SAAAE,CAAU7xG,EAAI2gE,GACX,MAAMmxC,EAAQ/wG,KAAKgxG,UAAU/xG,GAIzBe,KAAK+mB,MACN/mB,KAAK+mB,KAAKkqF,YAAYhyG,EAAI8xG,GAC1BnxC,EAAG2mB,KAAKn/E,KAAK2pG,GACb/wG,KAAK+mB,KAAK+pF,UAAU7xG,EAAI2gE,IAGtBA,EAAG2mB,KAAKn/E,KAAK2pG,EACrB,CAUA,WAAAE,CAAYhyG,EAAI2gE,GACb5/D,KAAKohE,qBAAqBp7D,SAASk8D,IAChCliE,KAAK2wG,iBAAiBzuC,EAAMjjE,EAAI2gE,EAAG,GAEzC,CAQA,IAAAswC,CAAKjxG,GACF,OAAIe,KAAKqhE,OAAe,GAAGrhE,KAAKqhE,OAAO6uC,KAAKjxG,MAAOe,KAAKF,YAAY2C,MAE7D,GAAGxD,KAAMe,KAAKF,YAAY2C,KACpC,CAqBA,SAAAuuG,CAAU/xG,GACP,MAAMiyG,EAAclxG,KAAK0hE,WAAa1hE,KAAKF,YAAY4hE,UACjDn5D,EAAU2oG,EAAYpyG,KAAKgO,IACvB,CAAE7N,GAAI6N,EAAGrK,IAAK4O,MAAOvE,EAAGtJ,UAGlC+E,EAAQgpB,QAAQ,CAAEtyB,GAAI,EAAGoS,MAAOyb,EAAE,2BAElC,MAAM2yC,EAAOz/D,KAAKkwG,KAAKjxG,GACjB6jC,EAAM9iC,KAAKmwG,MAAM1wC,GAiGvB,MA/Fc,CACXwsB,KAAM,CACH,CACGhtF,GAAI6jC,EAAI0tE,OACRztF,KAAM,SACN1R,MAAOrR,KAAK+mB,KAAO/mB,KAAK+mB,KAAKjnB,YAAY2C,IAAM,EAC/C8F,QAASA,EACTtH,GAAI,CACDowC,SAAU,CAAC/H,EAAUojD,KAClB,MAAMykB,EAAa,KAChB,MAAMX,EAAShkF,GAAGsW,EAAI0tE,QAEtBA,EAAO7hB,aACP6hB,EAAOt8E,SAASw4D,GAChB8jB,EAAO5hB,cAAc,EAGxB,GAAItlD,IAAaojD,EAAU,OAE3B,MAAM0kB,EAAQF,EAAYpoF,MACtBhc,GAAOA,EAAGrK,MAAQ6mC,IAGtB,IAAK8nE,EAGF,YAFAD,IAKH,MAAME,EAAU7kF,GAAGsW,EAAI0tE,QAAQ9jF,gBACzB4kF,EAAYD,EAAQ3kF,gBACpB6kF,EAAQ,KACX,GAAIH,EAAO,CACR,MAAM3vC,EAAS,IAAI2vC,EAChB,CAAC,EACDpxG,KACAA,KAAKmvC,KACLnvC,KAAKO,IAGRP,KAAK+mB,KAAO06C,EAEZA,EAAO+vC,cAAcvyG,EAAIoyG,GACzB5vC,EAAOgwC,YAAYxyG,EAAIqyG,EAC1B,GAKGI,EAAUJ,EAAU9mB,gBAEtBknB,EAAQ9vG,OAAS,EAAI8vG,EAAQlqG,QAAQ6pG,GACtCjuG,MAAMY,QAAQ,CACXV,MAAOwpB,EAAE,aACTrpB,KAAMqpB,EACH,sDAEHnpB,GAAImpB,EAAE,OACN/oB,OAAQ+oB,EAAE,MACV7oB,SAAWC,IACR,GAAIA,EAAQ,CAET,IAAIytG,EAAKD,EAAQ9vG,OAAS,EAE1B,KACG8vG,EAAQC,GAAIjgG,OAAOzS,KAAOoyG,EAAQ3/F,OAAOzS,IAEzCqyG,EAAUnkF,WAAWukF,EAAQC,IAC7BA,IAIH,MAAMC,EAAUP,EAAQ7mB,gBAExB,IAAIqnB,EAAKD,EAAQhwG,OAEjB,KAAOiwG,EAAK,GACTR,EAAQlkF,WAAWykF,EAAQC,EAAK,IAChCA,IAGHN,GACH,MAAOJ,GAAY,IAGvBI,GAAO,IAIrB,CACGtyG,GAAI6jC,EAAI4tE,SAMpB,CAEA,wBAAAoB,CAAyB7yG,GACtB,MAAM8yG,EAAUvlF,GAAGxsB,KAAK8iC,IAAI0tE,QAE5B,IAAKuB,EAAS,OAEd,MAAMf,EAAYhxG,KAAKgxG,UAAU/xG,GAE3B+yG,EACHhB,EAAU/kB,KAAKtpF,QAAQugC,GAAMA,EAAEjkC,IAAM8yG,EAAQrgG,OAAOzS,KAAI,IACxD+xG,EAAU/kB,KAAK,GAEd+lB,GAAWzxG,GAAG0Q,MAAM2uD,GAAGoyC,EAAWD,EACzC,CAaA,SAAAlB,CAAU3uC,EAAMjjE,GACb,MAAMgzG,EAAW1xG,GAAGE,OAAOyxG,aAE3B,IAAIzyC,EAAOz/D,KAAKkwG,KAAKjxG,GAErBe,KAAK8iC,IAAM9iC,KAAKmwG,MAAM1wC,GAEtB,IAAImxC,EAAU,KACVroG,EAAU,KACV+oF,EAAS,KACTtvB,EAAe,KACfmwC,EAAc,KACdC,EAAe,KACfC,EAAe,KACfC,EAAU,KACV1nB,EAAQ,KAGZ,OAAQ1oB,EAAKn5D,MACV,IAAK,eAGE/I,KAAK8kB,SACNvc,EAAUvI,KAAK8kB,OAAOwF,SAASxrB,KAAK4iB,IAC1B,CAAEziB,GAAIyiB,EAAEziB,GAAIoS,MAAOqQ,EAAEle,MAAOua,KAAM,SAAS2D,EAAE3D,YAG1DxV,EAAQgpB,QAAQ,CACbtyB,GAAI,MACJoS,MAAO,UAMLrR,KAAK4uB,SAAWrmB,EAAQ3G,OAAS,IAEnC5B,KAAK6I,OAAOq5D,EAAKt2D,MAAQrD,EAAQ,GAAGtJ,GACpCe,KAAKiiE,aAAaC,EAAMjjE,IAG3B2xG,EAAU,CACP3xG,GAAIe,KAAK8iC,IAAIutE,aACbttF,KAAM,aACNvf,MAAOspB,EAAE,SACTknC,WAAY,GACZ3iD,MAAOrR,KAAK4uB,QACZrmB,QAASA,EACTtH,GAAI,CACDowC,SAAU,CAAC/H,EAAUojD,KAEdpjD,IAAatpC,KAAK6I,OAAOq5D,EAAKt2D,QAC/B5L,KAAK6I,OAAOq5D,EAAKt2D,MAAQ09B,EACzBtpC,KAAKiiE,aAAaC,EAAMjjE,GAC3B,IAKT,MAEH,IAAK,aAGFsJ,EAAUvI,KAAKO,GAAGygB,UAAUliB,KAAKM,IACvB,CAAEH,GAAIG,EAAEH,GAAIoS,MAAOjS,EAAEoE,WAG1BxD,KAAK0uB,UAAYnmB,EAAQ3G,OAAS,IACpC5B,KAAK0uB,SAAWnmB,EAAQ,GAAGtJ,GAC3Be,KAAK6I,OAAOq5D,EAAKt2D,MAAQ5L,KAAK0uB,SAC9B1uB,KAAKiiE,aAAaC,IAGrB0uC,EAAU,CACP3xG,GAAIe,KAAK8iC,IAAIwtE,WACbvtF,KAAM,SACNvf,MAAOspB,EAAE,eACTknC,WAAYi+C,EAASv+F,gBACrBrC,MAAOrR,KAAK0uB,SACZnmB,QAASA,EACTtH,GAAI,CACDowC,SAAW/H,IACRtpC,KAAK6I,OAAS7I,KAAK6I,QAAU,CAAC,EAE1BygC,IAAatpC,KAAK6I,OAAOq5D,EAAKt2D,QAC/B5L,KAAK6I,OAAOq5D,EAAKt2D,MAAQ09B,EACzBtpC,KAAKiiE,aAAaC,GACrB,IAKT,MAEH,IAAK,mBA0BF,GAHAovB,EAAStxF,KAAKO,GAAGyzB,iBAAiB/0B,GAClC+iE,EAAehiE,KAAK8hE,iCAEhB9hE,KAAK8kB,OAAQ,CACdwsE,EAAOr9D,WAAWj0B,KAAK8kB,OAAOwF,SAAUtqB,KAAK8kB,QAM7C,MAAMytF,EAAc9yG,OAAOD,KAAKwiE,GAAcljE,KAC1C4iB,GAAMsgD,EAAatgD,KAGvB4vE,EAAOh+C,kBAAkBi/D,EA0D5B,CAIAjhB,EAAOrwF,GAAG,QAAS+vC,IAIhBhxC,KAAK6I,OAAS7I,KAAK6I,QAAU,CAAC,EAC9B7I,KAAK6I,OAAOq5D,EAAKt2D,MAAQolC,EAEzB,MAAMwhE,EAAYhmF,GAAGxsB,KAAK8iC,IAAI2tE,WAE9B+B,EAAUp4B,OAAO,CACd52E,MAAO8tF,EAAOhK,gBAEjBkrB,EAAU57F,UAIV,MAAM67F,EAAcjmF,GAAGxsB,KAAK8iC,IAAIkO,WAEhCyhE,EAAYr4B,OAAO,CAChB/oE,MAAO1K,KAAKC,UAAU5G,KAAK6I,OAAOq5D,EAAKt2D,SAE1C6mG,EAAY77F,SAAS,IAIxBu7F,EAAc,GAEVnyG,KAAK6I,QAAU7I,KAAK6I,OAAOq5D,EAAKt2D,OACjC0lF,EAAOp9D,SAASl0B,KAAK6I,OAAOq5D,EAAKt2D,OACjCumG,EAAcxrG,KAAKC,UAAU5G,KAAK6I,OAAOq5D,EAAKt2D,QAE9C0lF,EAAOp9D,SAAS,MAKnBk+E,EAAe9gB,EAAOhK,cAEtBspB,EAAU,CACPrqB,KAAM,CACH,CACGtnF,GAAIe,KAAK8iC,IAAI2tE,UACb1tF,KAAM,SACNvf,MAAO4uG,EACPnxG,GAAI,CACDyxG,YAAa,WACVphB,EAAO1G,MAAM5qF,KAAK6pF,MAAO,KAAM,CAC5Bp9D,IAAK,UAEX,IAKN,CACGxtB,GAAIe,KAAK8iC,IAAIkO,UACbjuB,KAAM,OACN1R,MAAO8gG,EACP1rB,QAAQ,KAKjB,MAEH,IAAK,eAMF4rB,EAAe,GACfC,EAAU,IAAIvjB,EAAWtvB,EAAMz/D,KAAKO,IAEhCP,KAAK8kB,QAAQwtF,EAAQ/9C,WAAWv0D,KAAK8kB,QAGzCwtF,EAAQzhB,oBACJ7wF,KAAKmvC,KAAKzsB,QAAQksB,kBAAkB5uC,KAAKmvC,OAAS,IAAIrwC,KACnDsqB,IACS,CACJnqB,GAAImqB,EAAK3mB,IACT4O,MAAO+X,EAAK5lB,WAQpBxD,KAAK6I,QAAU7I,KAAK6I,OAAOq5D,EAAKt2D,QACjC0mG,EAAQp+E,SAASl0B,KAAK6I,OAAOq5D,EAAKt2D,OAClCymG,EAAe1rG,KAAKC,UAAU5G,KAAK6I,OAAOq5D,EAAKt2D,QAGlDg/E,EAAQ,KAEL,MAAMhrB,EAAK,CACR3gE,GAAIe,KAAK8iC,IAAIsjD,MACbrjE,KAAM,QACNilC,SAAU,SACVysB,SAAU,IACVk+B,OAAO,EACPrmB,QAAQ,EACRx+E,KAAM,CACHy4E,KAAM,CACH,CACGx2B,OAAQ,GACRy2B,YAAY,EACZyF,KAAM,CACH,CAAE2mB,WAAW,GACb,CACG7vF,KAAM,SACN1R,MAAO,IACPkwC,MAAO,GACPv0B,MAAO,KACJR,GAAGxsB,KAAK8iC,IAAIsjD,OAAOlJ,MAAM,KAKrCo1B,EAAQ1yC,KACR,CACG78C,KAAM,SACN1R,MAAOyb,EAAE,QACTC,IAAK,gBACLC,MAAO,KACJhtB,KAAK6I,OAAS7I,KAAK6I,QAAU,CAAC,EAC9B7I,KAAK6I,OAAOq5D,EAAKt2D,MAAQ0mG,EAAQ52D,WACjC,MAAMm3D,EAAKrmF,GAAGxsB,KAAK8iC,IAAI2tE,WAEvBoC,EAAGz4B,OAAO,CACPglB,MAAOp/F,KAAK6I,OAAOq5D,EAAKt2D,MAAMhK,SAEjCixG,EAAGj8F,UAEH,MAAMoU,EAAOwB,GAAGxsB,KAAK8iC,IAAIkO,WAEzBhmB,EAAKovD,OAAO,CACT/oE,MAAO1K,KAAKC,UAAU5G,KAAK6I,OAAOq5D,EAAKt2D,SAE1Cof,EAAKpU,UAEL4V,GAAGxsB,KAAK8iC,IAAIsjD,OAAOlJ,MAAM,MAQxCl9E,KAAK8yG,SAAW1vG,MAAMw8D,GAAGA,GACzB5/D,KAAK8yG,SAASjoB,OAIV7qF,KAAK6I,QAAU7I,KAAK6I,OAAOq5D,EAAKt2D,OACjC0mG,EAAQp+E,SAASl0B,KAAK6I,OAAOq5D,EAAKt2D,MAAM,EAG9CglG,EAAU,CACPrqB,KAAM,CAEH,CACGtnF,GAAIe,KAAK8iC,IAAI2tE,UACb1tF,KAAM,SACNvf,MAAOspB,EAAE,iBACTsyE,MAAOp/F,KAAK6I,OAAOq5D,EAAKt2D,OAAOhK,OAC/BX,GAAI,CACDyxG,YAAa,KACV9nB,GAAO,IAKhB,CACG3rF,GAAIe,KAAK8iC,IAAIkO,UACbjuB,KAAM,OACN1R,MAAOghG,EACP5rB,QAAQ,KAKjB,MAEH,IAAK,YACFmqB,EAAU,CACP3xG,GAAIe,KAAK8iC,IAAIytE,UACbxtF,KAAM,OACNvf,MAAOspB,EAAE,YACTknC,WAAY,GACZ3iD,MAAOrR,KAAK6I,OAAOq5D,EAAKt2D,MACxB8rD,YAAa5qC,EAAE,wBACf7rB,GAAI,CACDowC,SAAU,CAAC/H,EAAUojD,KAEdpjD,IAAatpC,KAAK6I,OAAOq5D,EAAKt2D,QAC/B5L,KAAK6I,OAAOq5D,EAAKt2D,MAAQ09B,EACzBtpC,KAAKiiE,aAAaC,EAAMjjE,GAC3B,IAQf,OAAO2xG,CACV,CAYA,WAAAa,CAAYxyG,EAAI8zG,GACb,MAAMhC,EAAQ/wG,KAAKgxG,UAAU/xG,GAE7B8zG,EAAQlmF,QAAQkkF,EACnB,CAWA,aAAAS,CAAcvyG,EAAI+zG,GACf,MAAMnqG,EAAS,GAEf7I,KAAKohE,qBAAqBp7D,SAASk8D,IAEhCr5D,EAAOzB,KAAKpH,KAAK6wG,UAAU3uC,EAAMjjE,GAAI,IAGxC,IAAIg0G,EAAW,KAIZA,EADCpqG,EAAOjH,OAAS,EACN,CACR2kF,KAAM19E,GAEIA,EAAOssC,MAEnB89D,IACDD,EAAQ7lF,WAAW6lF,EAAQxoB,gBAAgB,IAC3CwoB,EAAQnmF,QAAQomF,GAEtB,CAEA,QAAAx7B,GACG,IAAIy7B,EAAalzG,KAAK03E,WAAa,GAGnC,OAFI13E,KAAK+mB,OACNmsF,EAAaA,EAAWv5F,OAAO3Z,KAAK+mB,KAAK0wD,YAAY90E,QAAQw+E,GAAMA,KAC/DnhF,KAAKO,GAAG8a,KAAK63F,EACvB,CAEA,YAAA97B,GACGp3E,KAAK03E,UAAY,GACb13E,KAAK+mB,MAAM/mB,KAAK+mB,KAAKqwD,cAC5B,CAcA,cAAAxU,CAAel/D,GAEZ1D,KAAK03E,UAAY13E,KAAK03E,WAAa,GACnC13E,KAAK03E,UAAUtwE,KAAK,CAAE1D,QAAS,GAAG1D,KAAKyC,QAAQiB,KAClD,oBC5zBH,MAAM2+D,EAAe,EAAQ,OAW7B1iE,EAAOC,QATP,cAAuByiE,qBCDvB,MAAMC,EAAkB,EAAQ,OAC1B6wC,EAAiB,EAAQ,MAEzBz1C,EAAc,CAajBG,eAAgByE,EAAgBzE,eAShC/6B,IAAM7jC,IACI,CACJm0G,KAAM,GAAGn0G,SACTuxG,OAAQ,GAAGvxG,gBACXsJ,QAAS,GAAGtJ,mBAkBlBq3B,QAAS,CAAC+8E,EAAQlkE,EAAM5uC,KAId,CACJq/D,GAAK3gE,IACFo0G,EAASA,GAAU,IAAIF,EAAe,CAAC,EAAGhkE,EAAM5uC,GAEhD,MACMq/D,EAAK,CACR2mB,KAAM,CACH,CACGtnF,GAJGy+D,EAAY56B,IAAI7jC,GAIXm0G,KACRnnB,KAAM,MAQf,OAHAonB,EAAOpC,YAAYhyG,EAAI2gE,GACvByzC,EAAOvC,UAAU7xG,EAAI2gE,GAEdA,CAAE,EAEZt/D,KAAOrB,IAAD,IAiBZ2L,MAAO,CAAC3L,EAAIkwC,EAAM5uC,KACf,MAAMuiC,EAAM46B,EAAY56B,IAAI7jC,GACtBm0G,EAAO5mF,GAAGsW,EAAIswE,MAEpB,IAAKA,EAGF,YAFA/xG,QAAQqF,KAAK,oDAMhB,MAAM6/E,EAAO6sB,EAAK1mF,gBAAgB89D,gBAE5B8oB,EAAe,CAAC/sB,EAAMh+E,EAAS84D,KAClC,GAAoB,IAAhBklB,EAAK3kF,OAAc,OAAO,KAE9B,MAAM4U,EAAM+vE,EAAKp/E,QAIXwb,EAAQnM,EAAIg0E,gBAElB,IAAI+oB,EAAW5wF,EAAMxb,QAErB,MAAQosG,GAAU73D,UAAU63D,EAAW5wF,EAAMxb,QAE7C,MAAMkK,EAAQkiG,EAAS73D,WAGjBimB,EAAKp5D,EAAQugB,MAAM1pB,GACfA,EAAEqD,MAAQ4O,GAASjS,EAAEqD,MAAQ0wG,EAAe1wG,MAGtD,GAAIk/D,EAAI,CACL,IAAI6xC,EAAS,KAEDA,EAARnyC,EAAiB,IAAIM,EAAG,CAAC,EAAGN,EAAQlyB,EAAM5uC,GAChC,IAAIohE,EAAG,CAAC,EAAGxyB,EAAM5uC,GAG/BizG,EAAOvD,SAASz5F,EAAKvX,IAIhBu0G,EAAO1uF,QAAUu8C,IACnBmyC,EAAO1uF,OAASu8C,EAAOv8C,OACvB0uF,EAAO9kF,SAAW8kF,EAAO1uF,QAAQ7lB,IAAM,MAG1C,MAAMw0G,EAAUH,EACb/sB,EACAitB,EAAO9xC,WAAa8xC,EAAO1zG,YAAY4hE,UACvC8xC,GAKH,OAFAA,EAAOzsF,KAAO0sF,EAEPD,CACV,CAEA,OAAO,IAAI,EAKd,OAFkBF,EAAa/sB,EAAMjkB,EAAgBE,MAAO,KAE5C,GAItB7iE,EAAOC,QAAU89D,kBC1JjB,MAAMg2C,EAAqB,EAAQ,OAoEnC/zG,EAAOC,QAlEP,cAAyB8zG,EAkBtB,YAAAzxC,CAAaC,GACQ,SAAdA,EAAKt2D,OACN5L,KAAK0uB,SAAW1uB,KAAK6I,OAAOq5D,EAAKt2D,MACjC5L,KAAK8kB,OAAS9kB,KAAKwhE,aAAaxhE,KAAK0uB,UAKjC1uB,KAAK+mB,OAAM/mB,KAAK+mB,KAAKjC,OAAS9kB,KAAK8kB,QAE7C,CAgBA,QAAAmrF,CAASz5F,EAAKvX,GACXc,MAAMkwG,SAASz5F,EAAKvX,GAKhBe,KAAK6I,OAAO+C,OACb5L,KAAK0uB,SAAW1uB,KAAK6I,OAAO+C,KAC5B5L,KAAK8kB,OAAS9kB,KAAKwhE,aAAaxhE,KAAK6I,OAAO+C,MAElD,CAEA,YAAAwrE,GACGr3E,MAAMq3E,eACDp3E,KAAK8kB,QACP9kB,KAAK4iE,eAAe,qBAAsB,CACvCl0C,SAAU1uB,KAAK0uB,UAGxB,mBC3EH,MAAMy0C,EAAmB,EAAQ,OAmBjCxjE,EAAOC,QAjBP,cAA2BujE,EASxB,YAAAlB,CAAaC,EAAMjjE,GAChBc,MAAMkiE,aAAaC,GAGD,YAAdA,EAAKt2D,MAAoB5L,KAAK8xG,yBAAyB7yG,EAC9D,oBCRH,MAAMskE,EAAkB,EAAQ,OAQhC5jE,EAAOC,QANP,cAA0B2jE,EACvB,YAAAtB,CAAaC,EAAMjjE,GAChBc,MAAMkiE,aAAaC,EACtB,oBCLH,MAAMsB,EAAoB,EAAQ,OAelC7jE,EAAOC,QAbP,cAA4B4jE,qBCF5B,MAAME,EAAmB,EAAQ,OAWjC/jE,EAAOC,QATP,cAA2B8jE,oBCiC3B,MAAMC,EAAmB,EAAQ,OAuFjChkE,EAAOC,QArFP,cAA2B+jE,EAgBxB,YAAA1B,CAAaC,GACQ,YAAdA,EAAKt2D,OAEN5L,KAAK4uB,QAAU5uB,KAAK6I,OAAOq5D,EAAKt2D,MAGhC5L,KAAK2uB,MAAQ3uB,KAAK8kB,OAAO8C,UAAU5nB,KAAK4uB,SAIpC5uB,KAAK2uB,OAA4B,kBAAnB3uB,KAAK2uB,MAAMlsB,MAC1BzC,KAAKshE,UAAYthE,KAAK2uB,MAAMtB,eAC5BrtB,KAAK4jE,YAAc5jE,KAAKshE,UAAUriE,GAK9Be,KAAK+mB,OAAM/mB,KAAK+mB,KAAKjC,OAAS9kB,KAAKshE,YAGhD,CAoBA,QAAA2uC,CAASz5F,EAAKvX,GACXc,MAAMkwG,SAASz5F,EAAKvX,GAEpBe,KAAK4uB,QAAU5uB,KAAK6I,OAAO+lB,QAI3B5uB,KAAKO,GAAGygB,SAAS5hB,IACd,IAAKY,KAAK2uB,MAAO,CAEd,MAAMA,EAAQvvB,EAAEwoB,UAAU5nB,KAAK4uB,SAE3BD,IAAO3uB,KAAK2uB,MAAQA,EAC3B,KAGC3uB,KAAK2uB,QACN3uB,KAAK8kB,OAAS9kB,KAAK2uB,MAAM7J,OAIrB9kB,KAAK2uB,OAA4B,kBAAnB3uB,KAAK2uB,MAAMlsB,MAC1BzC,KAAKshE,UAAYthE,KAAK2uB,MAAMtB,eAC5BrtB,KAAK4jE,YAAc5jE,KAAKshE,UAAUriE,IAG3C,oBCvHH,MAAM4kE,EAAkB,EAAQ,OA2ChClkE,EAAOC,QAzCP,cAA0BikE,EAgBvB,YAAA5B,CAAaC,GACQ,eAAdA,EAAKt2D,OACN5L,KAAK8jE,UAAY9jE,KAAK6I,OAAOq5D,EAAKt2D,MAExC,CAEA,QAAAqkG,CAASz5F,EAAKvX,GACXc,MAAMkwG,SAASz5F,EAAKvX,GAEpBe,KAAK8jE,UAAY9jE,KAAK6I,OAAmB,WAEpC7I,KAAK+jE,aACP/jE,KAAKmvC,KAAK2uB,mBAAmB99D,MAC7BA,KAAK+jE,YAAa,EAExB,CAEA,YAAAqT,GACGr3E,MAAMq3E,eACDp3E,KAAK8jE,WAAgC,KAAnB9jE,KAAK8jE,WACzB9jE,KAAK4iE,eAAe,uCAE1B,oBChDH,MAAM+wC,EAAa,EAAQ,OACrBh+F,EAAkB,WAExBhW,EAAOC,QAAU,cAAqB+zG,EAUnC,SAAAn+D,GACG,OAAO,IAAI7/B,EAAgB3V,KAC9B,CAQA,aAAAuyD,CAAcsd,GAEX,IAAIuyB,EAAgB,CACjB,OACA,OACA,YACA,gBAEA,iBACA,eACA,gBACA,cACA,oBACA,aACA,aAEA,SACA,WACA,UACA,aACA,cACA,UACA,YACA,eACA,iBACA,WACA,gBAEA,MACA,MACA,OACA,OAEA,SACA,aACA,eAQH,OALoBpiG,KAAKykB,YAAYvB,UACCvgB,QAAQugC,IACM,GAA1Ck/D,EAAc56F,QAAQ07B,EAAE8M,SAASvtC,MAI9C,CAEA,UAAAmxG,CAAWhjC,GACR5wE,KAAKuB,KAAK,aAAcqvE,EAC3B,CAEA,WAAA4G,GAEG,IAAI0J,EAAcnhF,MAAMy3E,cASxB,OARAx3E,KAAK2iB,QAAQ3c,SAASC,IACnBi7E,EAAcA,EAAYvnE,OAAO1T,EAAEuxE,cAAc,KAGnDx3E,KAAKogB,WAAa,IAAIpa,SAASyU,IAC7BymE,EAAcA,EAAYvnE,OAAOc,EAAE+8D,cAAc,IAG7C0J,EAAYv+E,QAAQw+E,GAAMA,GACpC,CAEA,YAAA/J,GACGr3E,MAAMq3E,eAEN,IAAIj0D,EAAWnjB,KAAK2iB,SAEnB3iB,KAAKyvD,gBAAkB,IAAIzpD,SAAS/G,IAClCe,KAAKs3E,gBAAgB,2BAA2Br4E,KAAM,IAGzDkkB,EAASnd,SAASC,IACfA,EAAEmxE,cAAc,IAIfp3E,KAAK2hB,SAASovC,aACN/wD,KAAKwgB,iBAAmBxgB,KAAKunB,gBAEnCvnB,KAAKs3E,gBACF,iCAAiCt3E,KAAK2hB,SAASovC,eAI3D,CAEA,eAAAumB,CAAgBjhE,EAAKjV,EAAO,CAAC,GAC1B,IAAIsC,EAAU,GAAG1D,KAAKyC,OAAOzC,KAAK4L,UAAUyK,IAC5CrW,KAAK03E,UAAUtwE,KAAK,CAAE1D,UAAStC,QAClC,oBClHH,MAAMyyG,EAAwB,EAAQ,OAChCC,EAA6B,EAAQ,OAE3Cn0G,EAAOC,QAAU,cAAgCi0G,EAM9C,SAAAr+D,GACG,OAAO,IAAIs+D,EAA2B9zG,KACzC,CAEA,YAAAo3E,GACGr3E,MAAMq3E,eAEGp3E,KAAKunB,gBAEXvnB,KAAKs3E,gBACF,qCAAqCt3E,KAAK2hB,SAASovC,cAG5D,mBCtBH,MAAMgjD,EAAwB,EAAQ,OAChCC,EAA6B,EAAQ,OAE3Cr0G,EAAOC,QAAU,cAAgCm0G,EAM9C,SAAAv+D,CAAUrZ,GACP,OAAO,IAAI63E,EAA2Bh0G,KAAMm8B,EAC/C,CAEA,YAAAi7C,GACGr3E,MAAMq3E,eAEGp3E,KAAKunB,gBAEXvnB,KAAKs3E,gBACF,qCAAqCt3E,KAAK2hB,SAASovC,eAIpD/wD,KAAK2hB,SAAS8iD,mBAAmB7iE,QACnC5B,KAAKs3E,gBAAgB,6CAE3B,8ECxBY,MAAM28B,UAAgCt+F,EAAAC,EAClD,WAAA9V,CAAYo0G,EAAU/3E,EAAQ2G,GAC3B/iC,MACGm0G,EACA/3E,GAAU,kBAAkB+3E,EAASj1G,KACrCQ,OAAO2vB,OACJ,CACG+kF,SAAU,IAEbrxE,IAIN9iC,KAAKo0G,kBAAoB,KACtBp0G,KAAKghG,QAAQ,EAGhBhhG,KAAKq0G,kBAAoB,OAIzBr0G,KAAKs0G,kBAAoB,CAACC,EAAUC,KAIjC,MAAMziF,EAAK/xB,KAAKunB,eAEXwK,IAELA,EAAGhH,gBAAgBypF,GACnBziF,EAAG7E,aAAY,EAGlBltB,KAAKy0G,cAAgB,KAClBz0G,KAAKuwF,MAAM,EAGdvwF,KAAK00G,eAAiB,KACnB10G,KAAK2wF,OAAO,CAElB,CAEA,EAAA/wB,GACG,MAAM98B,EAAM9iC,KAAK8iC,IAEXoxE,EAAWl0G,KAAK+iB,KAEtB/iB,KAAK20G,SAAWT,EAAS1uD,aACzBxlD,KAAK40G,SAAWV,EAASW,eAAer/D,YAExC,MAAMk7D,EAAS,CAAC,EACV/uF,EAAW3hB,KAAK2hB,SAEC,IAAnBA,EAAS4/B,OACV9hD,OAAO2vB,OAAOshF,EAAQ,CACnBnvD,MAAO,IAGb,MAAMuzD,EAAM/0G,MAAM6/D,GAAG,CAClB,CACG4mB,YAAY,EACZyF,KAAM,CACHykB,EACA,CACGlqB,YAAY,EACZD,KAAM,CACHvmF,KAAK20G,SAAS/0C,KACd,CACG3gE,GAAI6jC,EAAIqxE,SACRpxF,KAAM,WACNkpE,KAAM,GACN1qC,MAAO5/B,EAAS4/B,MAChBwO,OAAQpuC,EAASouC,OACjBglD,WAAY,CACT1yF,OAAQV,EAASijD,SACjBowC,SAAUrzF,EAASkjD,WACnB97D,KAAM4Y,EAASmjD,gBAElB7jE,GAAI,CACD+/F,OAAQ,KACL,MAAMiU,EAAczoF,GACjBsW,EAAIqxE,UACLe,iBAEFl1G,KAAKm1G,YAAYF,EAAY,MAM5CvE,MAOT,cAFOoE,EAAI/rG,KAEJ+rG,CACV,CAGA,UAAMx0G,CAAKC,SACFR,MAAMO,KAAKC,GAEjB,MAAMwxB,EAAK/xB,KAAKunB,eAEhB,IAAKwK,EAKF,YAJAxxB,EAAGoJ,OAAO2sB,QAAQ,qBAAqBvE,IAAM,CAC1CruB,QAAS,sCAMf,MAAMohB,EAASiN,EAAGzK,WAElB,IAAKxC,EAKF,YAJAvkB,EAAGoJ,OAAOC,UAAU,aAAamoB,IAAM,CACpCruB,QAAS,8BAMfquB,EAAGqE,eAAe,WAAYp2B,KAAKo0G,mBACnCriF,EAAG9wB,GAAG,WAAYjB,KAAKo0G,mBAEvBriF,EAAGqE,eAAe,SAAUp2B,KAAKq0G,mBACjCtiF,EAAG9wB,GAAG,SAAUjB,KAAKq0G,mBAErBtiF,EAAGqE,eAAe,SAAUp2B,KAAKq0G,mBACjCtiF,EAAG9wB,GAAG,SAAUjB,KAAKq0G,mBAErBtiF,EAAGqE,eAAe,SAAUp2B,KAAKq0G,mBACjCtiF,EAAG9wB,GAAG,SAAUjB,KAAKq0G,mBAErBtiF,EAAGqE,eAAe,mBAAoBp2B,KAAKy0G,eAC3C1iF,EAAG9wB,GAAG,mBAAoBjB,KAAKy0G,eAE/B1iF,EAAGqE,eAAe,kBAAmBp2B,KAAK00G,gBAC1C3iF,EAAG9wB,GAAG,kBAAmBjB,KAAK00G,gBAE1B10G,KAAK2hB,SAASojD,gBACf,CAAC,eAAgB,eAAe/+D,SAASvD,IACtCsvB,EAAGqE,eAAe3zB,EAAKzC,KAAKo0G,mBAC5BriF,EAAG9wB,GAAGwB,EAAKzC,KAAKo0G,kBAAkB,IAIxC,MAAMF,EAAWl0G,KAAK+iB,KAGtBmxF,EAAS1uD,aAAa+O,WAAWzvC,GACjCovF,EAAS1uD,aAAa4vD,SAASp1G,MAE/BA,KAAK20G,SAASr0G,KAAKN,KAAKO,IACxBP,KAAK20G,SAASv+E,eAAe,cAAep2B,KAAKs0G,mBACjDt0G,KAAK20G,SAAS1zG,GAAG,cAAejB,KAAKs0G,mBAGrCt0G,KAAK40G,SAASt0G,KAAK,CAChByiB,KAAMmxF,EACN3sF,eAAgBwK,IAInB,MAAMsjF,EAAgB7oF,GAAGxsB,KAAK8iC,IAAIqxE,WAAWtqB,MAEzCwrB,IACDA,EAAcpf,aACX,UACA,GAAGie,EAASzxG,OAAOyxG,EAASj1G,MAE/Bo2G,EACI53B,cAAc,2BACb63B,mBAAmBrf,aAClB,UACA,GAAGie,EAASzxG,uBAAuByxG,EAASj1G,MAElDo2G,EACI53B,cAAc,2BACb63B,mBAAmBrf,aAClB,UACA,GAAGie,EAASzxG,mBAAmByxG,EAASj1G,MAGpD,CAWA,OAAAs2G,GACG,MAAMxjF,EAAK/xB,KAAKunB,eAEXwK,IAELA,EAAGqE,eAAe,WAAYp2B,KAAKo0G,mBAE/Bp0G,KAAKq0G,oBACNtiF,EAAGqE,eAAe,SAAUp2B,KAAKq0G,mBACjCtiF,EAAGqE,eAAe,SAAUp2B,KAAKq0G,mBACjCtiF,EAAGqE,eAAe,SAAUp2B,KAAKq0G,oBAGpCtiF,EAAGqE,eAAe,mBAAoBp2B,KAAKy0G,eAE3C1iF,EAAGqE,eAAe,kBAAmBp2B,KAAK00G,gBAEtC10G,KAAK2hB,SAASojD,gBACf,CAAC,eAAgB,eAAe/+D,SAASvD,IACtCsvB,EAAGqE,eAAe3zB,EAAKzC,KAAKo0G,kBAAkB,IAGpDp0G,KAAK20G,SAASv+E,eAAe,cAAep2B,KAAKo0G,mBACpD,CAEA,UAAAoB,CAAWh/F,GACR,GAAIA,GAAKyF,IAAK,CACX,MAAM0F,EAAW3hB,KAAK2hB,SAEtB,MAAO,oFAEDnL,EAAIyF,+DAEIjc,KAAK8iC,IAAI0S,aAAah/B,EAAIvX,YACrCuX,EAAIyF,kFAGD0F,EAASmyC,UACJ,wCACGt9C,EAAIhT,OAAS,WAEhB,qEAILme,EAASqjD,aAAerjD,EAASsjD,WAC5B,oBAAoBzuD,EAAIvX,8DACxB,mBAGL0iB,EAASujD,UAAYvjD,EAASwjD,QACzB,oBAAoB3uD,EAAIvX,+DACxB,oNAIiBuX,EAAIvX,oBAC7BuX,EAAI6kF,kHAEkB7kF,EAAIvX,oBAC1BuX,EAAI6kF,+TAMV,CAEK,MAAO,EACf,CAEA,IAAA9K,GACG,MAAMklB,EAAYjpF,GAAGxsB,KAAK8iC,IAAIqxE,UAE9BsB,GAAW5+C,UACX4+C,GAAWh7B,eAAe,CAAE1xE,KAAM,QACrC,CAEA,KAAA4nF,GACG,MAAM8kB,EAAYjpF,GAAGxsB,KAAK8iC,IAAIqxE,UAE9BsB,GAAWjuB,SACXiuB,GAAWx6B,gBACd,CAEA,iBAAMk6B,CAAYO,GACf,MAAM3jF,EAAK/xB,KAAKunB,eAEhB,GAAKwK,GAIF2jF,GAAmB11G,KAAK21G,YAAc,GACtC5jF,EAAGuB,WAAatzB,KAAK41G,UACtB,CAEC51G,KAAKuwF,OAEL,UACSx+D,EAAGjH,SAAS9qB,KAAK41G,WAAa,EACvC,CAAE,MAAOz0G,GACNnB,KAAKO,GAAGoJ,OAAOC,UAAUzI,EAAK,CAC3BuC,QACG,4EAET,CAEA1D,KAAK2wF,OACR,CACH,CAEA,MAAAqQ,CAAOuT,EAAWv0G,KAAK20G,SAASkB,aAC7B,MAAM/yE,EAAM9iC,KAAK8iC,IACX/Q,EAAK/xB,KAAKunB,eAEhB,IAAKwK,EAAI,OAET,MAAMrmB,EAAMqmB,EAAGzK,WAEf,IAAK5b,EAAK,OAEV,MAAMijB,EAAQ3uB,KAAK+iB,KAAKwiD,WAExB,IAAK52C,EAAO,OAEZ,GAAIoD,EAAGhK,YAAcgK,EAAG7L,eAAeC,WAKpC,YAHA4L,EAAGjH,WAMN,MAAMnJ,EAAW3hB,KAAK2hB,SAEtB,IAAI4kE,EAAOx0D,EAAGmB,QAAQqhF,GAGtB,GAAI5yF,EAASojD,eAAgB,CAC1B,MAAM+wC,EAAS/jF,EAAGzJ,YAEdwtF,IACDvvB,EAAOA,EAAK5jF,QACRjB,IACGA,EAAEgK,EAAIO,OAASvK,EAAEzC,IAAMyC,MACvBo0G,EAAOpqG,EAAIO,OAAS6pG,EAAO72G,IAAM62G,KAE9C,CAEA,MAAMC,EAAS,GAEfxvB,EAAKvgF,SAAStE,IACX,MAAM25F,EAAU35F,EAAEitB,EAAM1M,YAExB,GAAIo5E,EAAS,CACV,MAAM2a,EAAU,CACb/2G,GAAIyC,EAAEzC,GACNgd,IAAK,SAASo/E,IACdA,WAIC15E,EAASmyC,YAAWkiD,EAAQxyG,MAAQkI,EAAIq9B,YAAYrnC,IAExDq0G,EAAO3uG,KAAK,CACT2lB,IAAK,QACLy5D,YAAY,EACZjX,SAAU,IAAI1mE,IACJ7I,KAAKw1G,cAAc3sG,GAE7BzH,KAAM40G,GAEZ,KAGH,MAAMC,EAAKj2G,KAAKO,GAGZouB,EAAMhN,SAAS6kC,iBAChBuvD,EAAOxkF,QAAQ,CACZxE,IAAK,QACLwiD,SAAU,IAAI1mE,IAAW7I,KAAKw1G,cAAc3sG,GAC5CzH,KAAM,CACHnC,GAAIg3G,EAAGt0G,OACPsa,IAAK,SAAS0S,EAAMhN,SAAS6kC,kBAC7BhjD,MAAOxD,KAAKwD,MAAM,oBAKvBuyG,EAAOn0G,OAAS,GACjBm0G,EAAO3uG,KAAK,CACTm/E,KAAM,CACH,CACGxjE,KAAM,QACNmzF,MAAO,SACPnmD,OAAQpuC,EAASouC,OACjBvsD,MAAO,+PAEV,CACGuf,KAAM,QACNmzF,MAAO,SACP1yG,MAAOxD,KAAKwD,MAAM,gBAM9BxD,KAAK41G,UAAYrvB,EAAK3kF,OAGtB5B,KAAK21G,YAAcI,EAAOn0G,OAE1B,MAAM6zG,EAAYjpF,GAAGsW,EAAIqxE,UACnBgC,EAAUF,EAAGhlG,MAEnB,GAAIwkG,EAAW,CAEZU,EAAQv2C,GAAGm2C,EAAQN,GAGnBU,EAAQ56B,OAAOk6B,EAAWU,EAAQxmB,aAGlC,MAAMzqB,EAAWvjD,EAASujD,SACpBF,EAAcrjD,EAASqjD,YAG7BywC,EAAU5rB,MAAMusB,QAAU3jF,MAAOpzB,IAC9B,GAAIA,EAAE65D,OAAOkD,UACV,GAAI/8D,EAAE65D,OAAOkD,UAAU50D,QAAQ,qBAAuB,EAAG,CACtD2uG,EAAQ5b,KAAK3e,UAAU65B,EAAUY,UAAW,cAC5CF,EAAQG,WAAWC,OACnB,IAAI9rF,EAAQprB,EAAE65D,OAAO4/B,aAAa,aAClC94F,KAAK40G,SAAShB,WAAW1uC,EAAUz6C,EACtC,MAAO,GACJprB,EAAE65D,OAAOkD,UAAU50D,QAAQ,uBAAyB,EACrD,CACC2uG,EAAQ5b,KAAK3e,UAAU65B,EAAUY,UAAW,cAC5CF,EAAQG,WAAWC,OACnB,IAAI9rF,EAAQprB,EAAE65D,OAAO4/B,aAAa,aAClC94F,KAAK40G,SAAShB,WAAW5uC,EAAav6C,EACzC,MAAO,GACJprB,EAAE65D,OAAOkD,UAAU50D,QAAQ,2BAA6B,EAExDiuG,EAAUr7B,OAAO,MAAO,cACxB+7B,EAAQG,WAAWrmG,IAAI6yB,EAAIqxE,SAAU,CAClCt4F,KAAM,CACHkH,KAAM,UACNgK,IAAK,aACL3W,SAAU,CACP,CAAC,EACD,CACG2M,KAAM,OACNhF,KAAM,cACNiP,MAAO,WACJmpF,EAAQ5b,KAAK3e,UACV65B,EAAUY,UACV,cAEHF,EAAQG,WAAWC,MACtB,YAKR,GACJl3G,EAAE65D,OAAOkD,UAAU50D,QAAQ,4BAA8B,EAC1D,CACC,MAAMijB,EAAQprB,EAAE65D,OAAO4/B,aAAa,aAC9BuC,EAAUh8F,EAAE65D,OAAO4/B,aAAa,eACtC94F,KAAKw2G,YAAY/rF,EAAO4wE,EAAS1sE,EAAO,OAC3C,MAAO,GACJtvB,EAAE65D,OAAOkD,UAAU50D,QAAQ,6BAA+B,EAC3D,CACC,MAAMijB,EAAQprB,EAAE65D,OAAO4/B,aAAa,aAC9BuC,EAAUh8F,EAAE65D,OAAO4/B,aAAa,eACtC94F,KAAKw2G,YAAY/rF,EAAO4wE,EAAS1sE,EAAO,QAC3C,MACGtvB,EAAE65D,OAAOkD,UAAU50D,QAAQ,wBAA0B,EAErDxH,KAAKy2G,KAAK,MAEVp3G,EAAE65D,OAAOkD,UAAU50D,QAAQ,yBAA2B,GAEtDxH,KAAKy2G,KAAK,MAEhB,CAEN,CACH,CAEA,eAAAC,CAAgB7sB,GACb7pF,KAAK20G,SAASgC,UAAU9sB,EAC3B,CAEA,iBAAM2sB,CAAY/rF,EAAO4wE,EAAS1sE,EAAOioF,EAAY,SAClD52G,KAAKuwF,OAGY,QAAbqmB,QAA2BjoF,EAAMysE,WAAWC,SACrC1sE,EAAM2sE,YAAYD,GAG7B,MAAMwb,EAAS/6F,SAASg7F,eAAe,GAAG92G,KAAK8iC,IAAI0S,aAAa/qB,KAC5DosF,UACKE,MAAMF,EAAO56F,IAAK,CAAE+6F,MAAO,SAAUzuB,KAAM,YACjDsuB,EAAO56F,IAAM,GAAG46F,EAAO56F,QAAO,IAAIlE,MAAOsB,aAG5CrZ,KAAK2wF,OACR,CAEA,IAAA8lB,CAAKQ,EAAU,MACZ,MAAMC,EAAep7F,SAAS4iF,uBAC3B,+BACD,GACF,IAAKwY,EAAc,OAEnB,MAAMC,EAAUD,EAAajzB,qBAAqB,OAAO,GACzD,IAAKkzB,EAAS,OAEd,MACMpnD,EAAS9vC,UACXk3F,EAAQrtB,MAAM/5B,QAAU,KAAKxoD,WAAW3B,QAAQ,IAAK,KAEnDwxG,EAAuB,MAAXH,EAAkBlnD,EAJvB,GAIuCA,EAJvC,GAKbonD,EAAQrtB,MAAM/5B,OAAS,GAAGqnD,KAE1BF,EAAaptB,MAAMutB,SAAWD,EAAY,IAAM,OAAS,EAC5D,4BCjhBH,MAAME,EAAqB,EAAQ,OAWpB,MAAMC,UAAuBD,EACzC,WAAAx3G,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MAAMwF,EAAQkf,EAAa1c,EAAQogC,EACtC,CAYA,UAAAtoB,CAAWta,GACRxF,MAAM8f,WAAWta,GAGjBvF,KAAKwlD,aAAa4P,aAAap1D,KAAK2hB,SAAShf,OAChD,CAOA,SAAA6yC,GACG,IAAIzjB,EAAK/xB,KAAKunB,eAMd,OALIwK,IACD/xB,KAAKwlD,aAAa+O,WAAWxiC,EAAGzK,YAChCtnB,KAAKwlD,aAAa4P,aAAap1D,KAAK2hB,SAAShf,SAGzC,IAAIsxG,EAAwBj0G,KACtC,CAEA,UAAIm8B,GACD,MAAO,kBAAkBn8B,KAAKf,IACjC,CAEA,gBAAIumD,GAOD,OAN2B,MAAvBxlD,KAAKw3G,iBACNx3G,KAAKw3G,eAAiB,IAAIC,EAAA7hG,EACvB5V,KAAKO,GACLP,KAAKm8B,SAGJn8B,KAAKw3G,cACf,CAEA,kBAAI3C,GAID,OAH6B,MAAzB70G,KAAK03G,mBACN13G,KAAK03G,iBAAmB,IAAIC,EAAA/hG,GAExB5V,KAAK03G,gBACf,CAEA,YAAAtgC,GACGr3E,MAAMq3E,eAEMp3E,KAAKulE,YAEdvlE,KAAKs3E,gBACF,6BAA6Bt3E,KAAK2hB,SAASgN,SAGpD,oBC9EH,MAAMipF,EAAkB,EAAQ,OAC1BC,EAAuB,EAAQ,OAErCl4G,EAAOC,QAAU,cAA0Bg4G,EAgBxC,SAAApiE,GACG,OAAO,IAAIqiE,EAAqB73G,KACnC,CAEA,UAAA6f,CAAWta,GACRxF,MAAM8f,WAAWta,GACjBvF,KAAK83G,aACR,CAEA,UAAAC,GAGG,OAFK/3G,KAAKg4G,WAAUh4G,KAAKg4G,SAAW,IAAI50G,MAAM83E,gBAEvCl7E,KAAKg4G,QACf,CAEA,WAAAF,GACG,MAAMpvF,EAAK1oB,KAAKunB,eAChB,GAAU,MAANmB,EAAY,OAAO1oB,KAAKi4G,QAE5B,MAAMC,EAAWl4G,KAAK2mE,aAChBwxC,EAAWn4G,KAAK4mE,aAChBwxC,EAAYp4G,KAAK6mE,cAEvB,IAAKqxC,IAAaC,EAAU,OAAOn4G,KAAKi4G,QAGxC,MAAMI,EAAgBF,EAASl2F,WAE/B,IAAIq2F,EAAiB,GAEjBt4G,KAAK2hB,SAAS8kD,gBAAkB2xC,IACjCE,EAAiBF,EAAUn2F,YAG9B,MAAMs2F,EAAY,CACf,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGGC,EAAQ9vF,EAAGwK,UAEjB,IAAI0O,EAAU,GACV62E,EAAU,CAAC,EACXC,EAAY,EACZC,EAAa,EACbC,EAAcJ,EAAM52G,OAExB42G,EAAMxyG,SAASojB,IACZ,MAAMimC,EAAW6oD,EAASrgG,OAAOuR,IAASA,EAAKnqB,GAE/C,IAAIigD,EAAYT,WAAWr1B,EAAKivF,IAAkB,GAC9CQ,EAAa,KAKjB,OAHI74G,KAAK2hB,SAAS8kD,iBACfoyC,EAAap6D,WAAWr1B,EAAKkvF,KAAoB,GAE5CH,EAAS11G,KAEd,IAAK,UACFy8C,EAAYi5D,EAAStgG,OAAOuR,GAE5B,MAGH,IAAK,YACF81B,EAAYT,WACT05D,EAASr4G,YAAYi/C,YAClBo5D,EAASrzF,OACTqzF,EAASx2F,SAASg9B,QAClBv1B,EACA+uF,EAASx2F,SAASk9B,gBAU9B,GAAyB,MAArB45D,EAAQppD,GAAmB,CAC5B,IAAI7rD,EAAQ6rD,EAGZ,GAAI6oD,EAAS7xE,aAAc,CACxB,IAAIyyE,EAAeZ,EAASh4D,mBAAmB92B,GAC3B,MAAhB0vF,IAEEt1G,EADCkC,MAAMC,QAAQmzG,GACPA,EACJh6G,KAAKoK,GAAQA,EAAIzF,MAAQ,KACzB2F,KAAK,MACC0vG,EAAar1G,KAEhC,CAEIzD,KAAK2hB,SAAS8kD,eACfgyC,EAAQppD,GAAY,CACjB7rD,MAAOA,GAAS4lB,EAAKnqB,GACrBoS,MAAO,EACP0nG,OAAQ,GAGXN,EAAQppD,GAAY,CACjB7rD,MAAOA,GAAS4lB,EAAKnqB,GACrBoS,MAAO,EAGhB,CAEAonG,EAAQppD,GAAUh+C,OAAS6tC,EAC3Bw5D,GAAax5D,EAETl/C,KAAK2hB,SAAS8kD,iBACfgyC,EAAQppD,GAAU0pD,QAAUF,EAC5BF,GAAcE,EACjB,IAGH,IAAIlsF,EAAQ,EAEZ,IAAK,MAAMlqB,KAAOg2G,EAAS,CACxB,IAAIvvG,EAAMuvG,EAAQh2G,GAAK4O,MAEvB,KAAInI,GAAO,GAAX,CASA,GANIlJ,KAAK2hB,SAAS6kD,eACft9D,EAAOA,EAAMwvG,EAAa,IAC1BxvG,EAAMw0C,KAAKC,MAAY,IAANz0C,GAAa,IAC9BA,GAAY,MAGXlJ,KAAK2hB,SAAS8kD,eAAgB,CAC/B,IAAIuyC,EAAOP,EAAQh2G,GAAKs2G,OAExB,GAAIC,GAAQ,EAAG,SAGXh5G,KAAK2hB,SAAS6kD,eACfwyC,EAAQA,EAAOL,EAAc,IAC7BK,EAAOt7D,KAAKC,MAAa,IAAPq7D,GAAc,IAChCA,GAAc,MAGjBp3E,EAAQx6B,KAAK,CACV5D,MAAOi1G,EAAQh2G,GAAKe,MACpB6N,MAAOnI,EACP6vG,OAAQC,EACR1lC,MAAOilC,EAAU5rF,EAAQ4rF,EAAU32G,QACnC8oB,MAAOkuF,GAEb,MACGh3E,EAAQx6B,KAAK,CACV5D,MAAOi1G,EAAQh2G,GAAKe,MACpB6N,MAAOnI,EACPoqE,MAAOilC,EAAU5rF,EAAQ4rF,EAAU32G,QACnC8oB,MAAOkuF,IAIbjsF,GAAS,CArCa,CAsCzB,CAEA,MAAMsrF,EAAUj4G,KAAK+3G,aAErBE,EAAQzmG,WACRymG,EAAQrtG,MAAMg3B,EACjB,CAEA,YAAAw1C,GACGr3E,MAAMq3E,eAEWp3E,KAAK2mE,cAEnB3mE,KAAKs3E,gBACF,6BAA6Bt3E,KAAK2hB,SAAS2kD,gBAIhCtmE,KAAK4mE,cAEnB5mE,KAAKs3E,gBACF,6BAA6Bt3E,KAAK2hB,SAAS0kD,eAGpD,oBCpNH,MAAM4yC,EAAsB,EAAQ,OAC9BC,EAA2B,EAAQ,OAEzCv5G,EAAOC,QAAU,cAA8Bq5G,EAU5C,SAAAzjE,GACG,OAAO,IAAI0jE,EAAyBl5G,KACvC,oBCfH,MAAMm5G,EAAqB,EAAQ,OAC7BC,EAA0B,EAAQ,OAExCz5G,EAAOC,QAAU,cAA6Bu5G,EAU3C,SAAA3jE,GACG,OAAO,IAAI4jE,EAAwBp5G,KACtC,oBCfH,MAAMikE,EAAe,EAAQ,OACvBo1C,EAAgC,EAAQ,OAE9C15G,EAAOC,QAAU,cAAmCqkE,EAMjD,SAAAzuB,GACG,OAAO,IAAI6jE,EAA8Br5G,KAC5C,CAEA,kBAAIunB,GACD,OAAOvnB,KAAK+H,OAAOwf,cACtB,oBCfH,MAAM+xF,EAAsB,EAAQ,OAC9BC,EAA2B,EAAQ,OAEzC55G,EAAOC,QAAU,cAA8B05G,EAU5C,SAAA9jE,GACG,OAAO,IAAI+jE,EAAyBv5G,KACvC,oBCfH,MAAMw5G,EAAqB,EAAQ,OAC7BC,EAA0B,EAAQ,OAExC95G,EAAOC,QAAU,cAA6B45G,EAU3C,SAAAhkE,GACG,OAAO,IAAIikE,EAAwBz5G,KACtC,oBCfH,MAAM05G,EAAoB,EAAQ,OAC5BC,EAAyB,EAAQ,OAEvCh6G,EAAOC,QAAU,cAA4B85G,EAU1C,SAAAlkE,GACG,OAAO,IAAImkE,EAAuB35G,KACrC,CAEA,YAAAo3E,GACGr3E,MAAMq3E,eAEN,IAAIzoD,EAAQ3uB,KAAK6nE,eACZl5C,GACF3uB,KAAKs3E,gBACF,4BAA4Bt3E,KAAK2hB,SAAS0lD,eAIhD14C,EAAQ3uB,KAAK8nE,kBACRn5C,GACF3uB,KAAKs3E,gBACF,+BAA+Bt3E,KAAK2hB,SAAS2lD,kBAInD34C,EAAQ3uB,KAAK+nE,eACRp5C,GACF3uB,KAAKs3E,gBACF,4BAA4Bt3E,KAAK2hB,SAAS4lD,cAGnD,oBCxCH,MAAMqyC,EAAiC,EAAQ,OACzCC,EAAsC,EAAQ,OAEpDl6G,EAAOC,QAAU,cAAyC,EAQvD,SAAA41C,GACG,OAAO,IAAIqkE,EAAoC75G,KAClD,CAEA,UAAM2H,GACH,MAAMmyG,EAAS95G,KAAK2iB,QAAQmG,MAAM7iB,GAAiB,OAAXA,EAAE2F,OACpCmuG,EAAW/5G,KAAK2iB,QAAQmG,MAAM7iB,GAAiB,SAAXA,EAAE2F,OACtCouG,EAAc,GAEhBF,GAAQE,EAAY5yG,KAAK0yG,EAAOnyG,QAEhCoyG,GAAUC,EAAY5yG,KAAK2yG,EAASpyG,cAElCnG,QAAQsY,IAAIkgG,SAEZj6G,MAAM4H,MACf,CAEA,YAAAyvE,GACGr3E,MAAMq3E,eAEGp3E,KAAKunB,gBAEXvnB,KAAKs3E,gBACF,qCAAqCt3E,KAAK2hB,SAASovC,eAKrD/wD,KAAK2hB,SAASyD,kBACkC,GAAjDplB,KAAK2hB,SAASyD,kBAAkBxL,OAAOhY,QAEvC5B,KAAKs3E,gBAAgB,+BAE3B,kGC3CY,MAAM2iC,UAAyCtkG,EAAAC,EAC3D,WAAA9V,CAAYo0G,EAAUgG,EAAQp3E,GAC3B/iC,MACGm0G,EACAgG,GAAU,2BAA2BhG,EAASj1G,KAC9CQ,OAAO2vB,OACJ,CACGzsB,OAAQ,GACRmO,MAAO,IAEVgyB,IAIN9iC,KAAK2uB,MAAQ,IAChB,CAEA,EAAAixC,GACG,MAAM98B,EAAM9iC,KAAK8iC,IACXgyE,EAAM/0G,MAAM6/D,GAAG,CAClB,CACG72D,KAAM,QACNy9E,YAAY,EACZyF,KAAM,CACH,CACGlpE,KAAM,OACNhF,KAAM,eACNm4F,MAAO,OACPjqE,UAAU,GAEb,CACGlpB,KAAM,QACN9jB,GAAI6jC,EAAIngC,OACRqxD,WAAYh0D,KAAKO,GAAGsV,WAAWnE,SAASiC,iBACxCs4B,UAAU,EACVhrC,GAAI,CACDowC,SAAWpyC,GAAOe,KAAKm6G,mBAAmBl7G,KAGhD,CACG8jB,KAAM,OACN9jB,GAAI6jC,EAAIhyB,MACRiN,KAAM,cACNm4F,MAAO,OACPjqE,UAAU,EACVmuE,QAASp6G,KAAKwD,MAAM,uBACpBvC,GAAI,CACDyxG,YAAa,IAAM1yG,KAAKq6G,2BASvC,cAFOvF,EAAI/rG,KAEJ+rG,CACV,CAEA,UAAMx0G,CAAKC,SACFR,MAAMO,KAAKC,GAEjB,MAAMwxB,EAAK/xB,KAAKunB,eAEhB,IAAKwK,EAAI,OAET,MAAMjN,EAASiN,EAAGzK,WAElB,IAAKxC,EAAQ,OAEb,MAAO6J,GAAS7J,EAAOwF,QACnB5I,GAAMA,EAAEO,aAAejiB,KAAK2hB,SAASgN,QAGzC,IAAKA,EASF,YARA3uB,KAAKO,GAAGoJ,OAAOC,UACZ,sBAAsB5J,KAAK2hB,SAASgN,aAAa7J,EAAOlZ,OACxD,CACG1K,QAAS,0CACTE,KAAM,CAAEugB,SAAU3hB,KAAK2hB,YAOhC3hB,KAAK2uB,MAAQA,EAEb,MAAMmU,EAAM9iC,KAAK8iC,IACXspD,EAAUhpF,MAAMw8D,GAAG,CACtB78C,KAAM,UACNpgB,OAAQ,EAAG0O,SAASpI,IACjBoI,EAAM5D,cAAcwnC,SAAShsC,EAAOwE,eACvCxM,GAAI,CACD+/F,OAAQ,KACLryE,EAAM8mE,sBAAsBjpE,GAAGsW,EAAIngC,QAASgsB,EAAO,CAAC,EAAE,KAI/DA,EAAMkkE,sBAAsBzG,EAAS,KAAMz9D,GAE3C,MAAM2rF,EAAU9tF,GAAGsW,EAAIngC,QAEvB23G,EAAQlgC,OAAO,UAAWgS,GAC1BkuB,EAAQlgC,OAAO,QAAS,GAAGp6E,KAAKwD,MAAM,gBAAgBmrB,EAAMnrB,SAC5D82G,EAAQ9yB,SACR8yB,EAAQ1jG,SACX,CAEA,kBAAAyjG,GACG,MAAMv3E,EAAM9iC,KAAK8iC,IACXpa,EAAK1oB,KAAKunB,eAEhBmB,EAAGqC,gBAAgB,CAAE1F,KAAM,MAAOzL,MAAO,KACzC8O,EAAGwE,aAGH,MAAMotF,EAAU9tF,GAAGsW,EAAIngC,QAEvB23G,EAAQ3rB,aACR2rB,EAAQpmF,WACRomF,EAAQ1rB,eACRpiE,GAAGsW,EAAIhyB,OAAO+lD,SACjB,CAEA,kBAAAsjD,CAAmBI,GAChB,MAAMzmF,EAAa,CAChBrxB,IAAKzC,KAAK2uB,MAAM1vB,GAChB+sB,KAAM,SACN3a,MAAOkpG,GAEJ7xF,EAAK1oB,KAAKunB,eAEhBmB,EAAGqC,gBAAgB,CAAE1F,KAAM,MAAOzL,MAAO,CAACka,KAC1CpL,EAAGwE,aACHV,GAAGxsB,KAAK8iC,IAAIhyB,OAAO02E,QACtB,ECvIY,MAAMgzB,UAAgC,KAMlD,SAAAhlE,GACG,OAAO,IAAIykE,EAAiCj6G,KAC/C,oBCXH,MAAMy6G,EAAsB,EAAQ,OAC9BC,EAA2B,EAAQ,OAEzC/6G,EAAOC,QAAU,cAA8B66G,EAU5C,SAAAjlE,GACG,OAAO,IAAIklE,EAAyB16G,KACvC,CAEA,YAAAo3E,GACGr3E,MAAMq3E,eAIiB,GAFRp3E,KAAK2iB,QAEP/gB,QACV5B,KAAKs3E,gBAAgB,iBAO3B,0ICzBY,MAAMqjC,UAAkChlG,EAAAC,EACpD,WAAA9V,CAAYo0G,EAAUgG,EAAQp3E,GAC3B/iC,MACGm0G,EACAgG,GAAU,oBAAoBhG,EAASj1G,KACvCQ,OAAO2vB,OACJ,CACGzsB,OAAQ,GACRmO,MAAO,GACP8pG,WAAY,GACZC,aAAc,GACdC,oBAAqB,IAExBh4E,IAIN9iC,KAAK+6G,oBAAsB,CAACxG,EAAUC,KACnCx0G,KAAKg7G,mBAAmBzG,EAAUC,EAAY,EAGjDx0G,KAAK2uB,MAAQ,KACb,MAAMsnF,EAAKj2G,KAAKO,GAIhBP,KAAKi7G,mBAAqB,IAAI,EAAArlG,EAC3B,+BAA+B5V,KAAK2hB,SAASovC,cAEhD/wD,KAAKi7G,mBAAmB36G,KAAK21G,GAC7Bj2G,KAAKi7G,mBAAmBh6G,GAAG,WAAYi6G,IACpCl7G,KAAKm7G,iBAAiBD,EAAY,IAGrCl7G,KAAKwlD,aAAe,IAAI,EAAA5vC,EACrB5V,KAAKO,GACL,iCAAiCP,KAAK2hB,SAASovC,cAElD/wD,KAAKwlD,aAAa7jC,SAAW,CAC1BusD,aAAc,EACdC,mBAAoB,UACpBC,gBAAiB,GAEpBpuE,KAAKwlD,aAAallD,KAAK21G,GACvBj2G,KAAKu1G,UACLv1G,KAAKwlD,aAAavkD,GAAG,cAAejB,KAAK+6G,oBAC5C,CAEA,UAAAK,GACG,MAAMC,EAASr7G,KAAK8iC,IAAI0S,UACxB,MAAO,CACJ,CACGzoB,IAAK,UACLuuF,UAAW,GACX/0B,KAAM,CACH,CAAC,EACD,CACG0F,KAAM,CACH,CACG1qC,MAAO,IAEV,CACGx+B,KAAM,SACNha,KAAM,OACNgV,KAAM,eACNwjC,MAAO,GACPtiD,GAAIe,KAAK8iC,IAAI+3E,aACb9tF,IAAK,+BAA+B/sB,KAAK2hB,SAASovC,aAClD/jC,MAAO,CAAC/tB,EAAIguB,KACTjtB,KAAKu7G,cAAc/uF,GAAGxsB,KAAK8iC,IAAI+3E,cAAchxB,MAAM,EAEtD5oF,GAAI,CACD0oF,cAAe,WACZ3pF,KAAKw7G,eAAevlB,aACjB,UACA,GAAGolB,kBAET,IAGN,CACGt4F,KAAM,SACNha,KAAM,OACNgV,KAAM,aACNwjC,MAAO,GACPtiD,GAAIe,KAAK8iC,IAAI83E,WACb7tF,IAAK,6BAA6B/sB,KAAK2hB,SAASovC,aAChD/jC,MAAO,CAAC/tB,EAAIguB,KACTjtB,KAAKy7G,SAASjvF,GAAGxsB,KAAK8iC,IAAI83E,YAAY/wB,MAAM,EAE/C5oF,GAAI,CACD0oF,cAAe,WACZ3pF,KAAKw7G,eAAevlB,aACjB,UACA,GAAGolB,gBAET,IAGN,CACGp8G,GAAIe,KAAK8iC,IAAIg4E,oBACb/3F,KAAM,SACN20C,YAAa13D,KAAKwD,MAAM,YACxBupB,IAAK,sBAAsB/sB,KAAK2hB,SAASovC,aACzCxP,MAAO,EACPlkC,WAAY,CACT,UAAW,GAAGrd,KAAK8iC,IAAI0S,0BACvBjuB,eAAgBvnB,KAAK2hB,SAASovC,YAEjC9vD,GAAI,CACD8rF,gBAAiB,KACd,MAAMttE,EAAa+M,GAChBxsB,KAAK8iC,IAAIg4E,qBACVp/D,WAGS17C,KAAKunB,eACb5F,SAASwD,gBAAgB1F,WACzBA,EAEHzf,KAAKwlD,aAAak2D,mBAAmBj8F,EAAW,IAIzD,CACG8hC,MAAO,MAIhB,CAAC,IAIb,CAEA,gBAAAo6D,GACG,MAAO,CACJ,CACG5uF,IAAK,UACLuuF,UAAW,GACXrvB,KAAM,CACH,CACG1qC,MAAO,IAEV,CACGglC,KAAM,CACH,CAAC,EACD,CACGxjE,KAAM,YACN0pE,MAAO,CACJ,CACG1/D,IAAK,UACLhK,KAAM,QACN9jB,GAAIe,KAAK8iC,IAAIngC,OACbqxD,WAAY,EACZ4nD,UAAU,EACV3vE,UAAU,EACVhrC,GAAI,CACDowC,SAAWpyC,IACRe,KAAKm6G,mBACF3tF,GAAGxsB,KAAK8iC,IAAIngC,QAAQkrF,UAAUrlE,QAAQvpB,GACxC,IAIV,CACG8jB,KAAM,OACN9jB,GAAIe,KAAK8iC,IAAIhyB,MACbiN,KAAM,cACN89F,MAAO,GACPC,IAAK,EACLv6D,MAAO,GACPwO,OAAQ,GACR02B,QAAQ,EACR2zB,QAASp6G,KAAKwD,MAAM,sBACpBvC,GAAI,CACDyxG,YAAa,IACVlmF,GAAGxsB,KAAK8iC,IAAIngC,QAAQuxB,eAKnC,CAAC,IAGP,CACGqtB,MAAO,MAKtB,CAEA,EAAAqe,GACG,IACI5/D,KAAK2hB,UAAUovC,YACa,aAA5B/wD,KAAK2hB,UAAU8nD,WAA4BzpE,KAAK2hB,UAAUgN,MAE3D,MAAO,CAAEohC,OAAQ,EAAG9wD,GAAIe,KAAK8iC,IAAI0S,WAEpC,MAAMoqB,EACuB,YAA1B5/D,KAAK2hB,SAAS8nD,SACTzpE,KAAKo7G,aACLp7G,KAAK27G,mBACP7G,EAAM/0G,MAAM6/D,GAAGA,GAIrB,cAFOk1C,EAAI/rG,KAEJ+rG,CACV,CAEA,UAAMx0G,CAAKC,SACFR,MAAMO,KAAKC,GAEjB,MAAMwxB,EAAK/xB,KAAKunB,eAEhB,IAAKwK,EAAI,OAET,MAAMjN,EAASiN,EAAGzK,WAElB,GAAKxC,EAEL,GAA8B,YAA1B9kB,KAAK2hB,SAAS8nD,SACXzpE,KAAK2hB,SAASgoD,UACf3pE,KAAKi7G,mBAAmB1mD,WAAWzvC,GAEnC9kB,KAAKi7G,mBAAmBc,YACrBhqF,GAAIpQ,UAAUwD,iBAAiBG,aAGlCkH,GAAGxsB,KAAK8iC,IAAI83E,YAAY19B,OAEvBl9E,KAAK2hB,SAAS+nD,WACf1pE,KAAKwlD,aAAa+O,WAAWzvC,GAE7B0H,GAAGxsB,KAAK8iC,IAAI+3E,cAAc39B,YAEzB,GAA8B,aAA1Bl9E,KAAK2hB,SAAS8nD,SAAyB,CAC/C,MAAO96C,GAAS7J,EAAOwF,QACnB5I,GAAMA,EAAEO,aAAejiB,KAAK2hB,SAASgN,QAGzC,IAAKA,EASF,YARA3uB,KAAKO,GAAGoJ,OAAOC,UACZ,sBAAsB5J,KAAK2hB,SAASgN,aAAa7J,EAAOlZ,OACxD,CACG1K,QAAS,mCACTE,KAAM,CAAEugB,SAAU3hB,KAAK2hB,YAOhC3hB,KAAK2uB,MAAQA,EAEb,MAAMmU,EAAM9iC,KAAK8iC,IACXspD,EAAUhpF,MAAMw8D,GAAG,CACtB78C,KAAM,UACNpgB,OAAQ,EAAG0O,SAASpI,IACjBoI,EAAM5D,cAAcwnC,SAAShsC,EAAOwE,eACvCxM,GAAI,CACD+/F,OAAQ,KACLryE,EAAM8mE,sBAAsBjpE,GAAGsW,EAAIngC,QAASgsB,EAAO,CAAC,EAAE,GAG5D8kE,gBAAgB,IAEnB9kE,EAAMkkE,sBAAsBzG,EAAS,KAAMz9D,GAE3C,MAAM2rF,EAAU9tF,GAAGsW,EAAIngC,QAEvB23G,EAAQlgC,OAAO,UAAWgS,GAC1BkuB,EAAQlgC,OACL,cACA,GAAGp6E,KAAKwD,MAAM,gBAAgBmrB,EAAMnrB,SAEvC82G,EAAQ9yB,SACR8yB,EAAQ1jG,SACX,CACH,CAEA,MAAAoqF,GACGjhG,MAAMihG,SACNhhG,KAAKg8G,UACR,CAEA,kBAAA7B,CAAmBlwF,GAChB,IAAIwmB,EAAexmB,GAAShrB,IAAM,KAG/BwxC,GACAzwC,KAAK2uB,MAAMhN,UAAU4yB,YACrBv0C,KAAK2uB,MAAMhN,UAAUyyB,WAErB3D,GACIzwC,KAAK2uB,MAAMiiB,WACP3mB,EAAQjqB,KAAK2uB,MAAMiiB,WAAW3uB,YAC9B,QACJjiB,KAAK2uB,MAAMkiB,YACP5mB,EAAQjqB,KAAK2uB,MAAMkiB,YAAY5uB,YAC/B,OACLgI,EAAQhrB,IACRgrB,GAGN,IAAI6J,EAAa,GACb2c,GACDjkB,GAAGxsB,KAAK8iC,IAAIhyB,OAAO+5E,OACnB/2D,EAAa,CACV,CACGrxB,IAAKzC,KAAK2uB,MAAM1vB,GAChB+sB,KAAM,SACN3a,MAAOo/B,KAIbjkB,GAAGxsB,KAAK8iC,IAAIhyB,OAAOosE,OAEtB,MAAMx0D,EAAK1oB,KAAKunB,eAEhBmB,EAAGqC,gBAAgB,CAAE1F,KAAM,MAAOzL,MAAOka,IACzCpL,EAAGwE,YACN,CAEA,QAAAuuF,CAAS5xB,GACN7pF,KAAKi7G,mBAAmBpwB,KAAKhB,EAChC,CAQA,sBAAMsxB,CAAiBc,EAAY,IAChC,MAAMvzF,EAAK1oB,KAAKunB,eACX,YAAUmB,GAAI/G,UAAUwD,iBAAiBG,WAAY22F,KACvDvzF,EAAG/G,SAASwD,gBAAgBG,WAAa22F,QACnCj8G,KAAKunB,eAAe2F,cAE7BltB,KAAKg8G,UACR,CAWA,kBAAAhB,CAAmBzG,EAAUC,EAAc,IACxC,MAAM9rF,EAAK1oB,KAAKunB,eACX,YAAUmB,GAAItC,aAAcouF,KAC9B9rF,EAAGqC,gBAAgBypF,GACnB9rF,EAAGwE,aACHltB,KAAKg8G,WAEX,CAEA,aAAAT,CAAc1xB,GACX7pF,KAAKwlD,aAAamxD,UAAU9sB,EAC/B,CAEA,QAAAmyB,GACG,MAAMtzF,EAAK1oB,KAAKunB,eAEhB,IAAKmB,EAAI,OAET,IAAIwzF,EAAgBpgG,SAAS4iF,uBAC1B,iBAAiB1+F,KAAK2hB,SAASovC,cAGlC,MAAMorD,EAAkBn8G,KAAKwlD,aAAagvD,cAC1C,IAAI4H,EACDD,GAAiBviG,OAAOhY,OAAS,EAC5Bu6G,GAAiBviG,OAAOhY,OACxB,KACR,IAAK,IAAIif,KAAKq7F,EACX1vF,GAAG3L,GAAGu5D,OAAO,QAASgiC,GACtB5vF,GAAG3L,GAAGjK,UAGT,IAAIylG,EAAcvgG,SAAS4iF,uBACxB,eAAe1+F,KAAK2hB,SAASovC,cAGhC,MAAMurD,EAAgB5zF,EAAG/G,SAASwD,gBAAgBG,WAClD,IAAIi3F,EAAYD,GAAe16G,OAAS,EAAI06G,GAAe16G,OAAS,KAEpE,IAAK,IAAIif,KAAKw7F,EACX7vF,GAAG3L,GAAGu5D,OAAO,QAASmiC,GACtB/vF,GAAG3L,GAAGjK,UAGT,IAAI4lG,EAAe1gG,SAAS4iF,uBACzB,sBAAsB1+F,KAAK2hB,SAASovC,cAGvC,MAAMtxC,EAAaiJ,EAAG/G,SAASwD,gBAAgB1F,WAC/C,GAAkB,MAAdA,EACD,IAAK,IAAIgV,KAAK+nF,EAAc,CACzB,IAAIC,EAAgB3gG,SAAS2gG,cAE1BA,GAAep/F,YAAYkK,gBAAgBlW,OACxCrR,KAAK2hB,SAASovC,YACjB0rD,GAAiBhoF,EAAEwvD,qBAAqB,SAAS,IAIjDz3D,GAAGiI,GAAGP,SAASzU,EAErB,CAEN,CAEA,OAAA81F,GACGv1G,KAAKwlD,aAAapvB,eAAe,cAAep2B,KAAK+6G,oBAExD,ECvaY,MAAM2B,UAAyB,KAO3C,SAAAlnE,GACG,OAAO,IAAImlE,EAA0B36G,KACxC,CAEA,YAAAo3E,GACGr3E,MAAMq3E,eAEN,IAAIxqD,EAAK5sB,KAAKunB,eACd,GAAKqF,GAKF,GAA8B,aAA1B5sB,KAAK2hB,SAAS8nD,SAAyB,CACxC,MAAM3kD,EAAS8H,EAAGtF,YACXqH,GAAS7J,EAAOwF,QACnB5I,GAAMA,EAAEO,aAAejiB,KAAK2hB,SAASgN,QAEpCA,GACF3uB,KAAKs3E,gBAAgB,gCAE3B,OAZAt3E,KAAKs3E,gBACF,qCAAqCt3E,KAAK2hB,SAASovC,cAa5D,kGChCY,MAAM4rD,UAAkChnG,EAAAC,EACpD,WAAA9V,CAAYo0G,EAAUgG,EAAQp3E,GAC3B/iC,MACGm0G,EACAgG,GAAU,oBAAoBhG,EAASj1G,KACvCQ,OAAO2vB,OACJ,CACGohF,OAAQ,IAEX1tE,GAGT,CAEA,EAAA88B,GACG,MAAMk1C,EAAM/0G,MAAM6/D,GAAG,CAClB,CACG78C,KAAM,QACN9jB,GAAIe,KAAK8iC,IAAI0tE,OACbvvG,GAAI,CACDowC,SAAU,CAAC6W,EAAG9oD,KACP8oD,IAAM9oD,GAAGY,KAAK48G,aAAa10D,EAAE,MAO7C,cAFO4sD,EAAI/rG,KAEJ+rG,CACV,CAEA,YAAM9T,GACHjhG,MAAMihG,SACN,MAAMt4E,EAAK1oB,KAAKunB,eAChB,IAAKmB,EAAI,aACHA,EAAG2N,YACT,MAAMswC,EAAa3mE,KAAKO,GAAGue,eACxB9e,KAAK2hB,SAASglD,aACd1kD,WACG1Z,EAAUmgB,EACZwK,UACAp0B,KAAKM,IAAM,CAAGH,GAAIG,EAAEH,GAAIoS,MAAOjS,EAAEunE,OACjCjmD,MAAK,CAACE,EAAGC,IAAOD,EAAEvP,MAAQwP,EAAExP,MAAQ,GAAK,IACvC0gG,EAAUvlF,GAAGxsB,KAAK8iC,IAAI0tE,QAC5BuB,EAAQ33B,OAAO,UAAW7xE,GAC1BwpG,EAAQn7F,UACRm7F,EAAQ79E,SAASxL,EAAGJ,YAAYrpB,GACnC,CAEA,YAAA29G,CAAa10D,GACVloD,KAAKunB,eAAeW,UAAUggC,EACjC,ECjDY,MAAM20D,UAAyB,KAO3C,SAAArnE,GACG,OAAO,IAAImnE,EAA0B38G,KACxC,CAEA,YAAAo3E,GACGr3E,MAAMq3E,eAEN,IAAIxqD,EAAK5sB,KAAKunB,eACd,GAAKqF,GAKF,GAA8B,aAA1B5sB,KAAK2hB,SAAS8nD,SAAyB,CACxC,MAAM3kD,EAAS8H,EAAGtF,YACXqH,GAAS7J,EAAOwF,QACnB5I,GAAMA,EAAEO,aAAejiB,KAAK2hB,SAASgN,QAEpCA,GACF3uB,KAAKs3E,gBAAgB,gCAE3B,OAZAt3E,KAAKs3E,gBACF,qCAAqCt3E,KAAK2hB,SAASovC,cAa5D,mBCjCH,MAAM+rD,EAAqB,EAAQ,OAC7BC,EAA0B,EAAQ,OAElC/yC,EAAyB8yC,EAAmB30E,gBAIlDxoC,EAAOC,QAAU,cAA6Bk9G,EAW3C,UAAAj9F,CAAWta,GACRxF,MAAM8f,WAAWta,GAEjBvF,KAAK2hB,SAASqjD,YACXhlE,KAAK2hB,SAASqjD,aAAegF,EAAuBhF,YACvDhlE,KAAK2hB,SAASujD,SACXllE,KAAK2hB,SAASujD,UAAY8E,EAAuB9E,SACpDllE,KAAK2hB,SAASsjD,WACXjlE,KAAK2hB,SAASsjD,YAAc+E,EAAuB/E,WACtDjlE,KAAK2hB,SAASwjD,QACXnlE,KAAK2hB,SAASwjD,SAAW6E,EAAuB7E,OACtD,CAUA,SAAA3vB,GACG,OAAO,IAAIunE,EAAwB/8G,KACtC,oBCzCH,MAAMg9G,EAAmB,EAAQ,OAC3BC,EAAwB,EAAQ,OAEtCt9G,EAAOC,QAAU,cAA2Bo9G,EAazC,SAAAxnE,GACG,OAAO,IAAIynE,EAAsBj9G,KACpC,CAEA,YAAAo3E,GACGr3E,MAAMq3E,eAEGp3E,KAAKunB,gBAEXvnB,KAAKs3E,gBACF,qCAAqCt3E,KAAK2hB,SAASovC,cAG5D,mBC7BH,MAAMmsD,EAA2B,EAAQ,OACnCC,EAAgC,EAAQ,MAE9Cx9G,EAAOC,QAAU,cAAmCs9G,EAMjD,SAAA1nE,GACG,OAAO,IAAI2nE,EAA8Bn9G,KAC5C,oBCXH,MAAMo9G,EAA0B,EAAQ,OAClCC,EACH,WAEGC,EAA+B,EAAQ,OAE7C39G,EAAOC,QAAU,cAAkCw9G,EAWhD,UAAAv9F,CAAWta,GACRxF,MAAM8f,WAAWta,GACjBvF,KAAKu9G,YAAYnoD,aAAap1D,KAAK2hB,SACtC,CAOA,SAAA6zB,GACG,OAAO,IAAI8nE,EAA6Bt9G,KAC3C,CAEA,eAAIu9G,GAID,OAH0B,MAAtBv9G,KAAKw9G,gBACNx9G,KAAKw9G,cAAgB,IAAIH,GAErBr9G,KAAKw9G,aACf,oBCpCH,MAAMC,EAAyB,EAAQ,MACjCC,EAA8B,EAAQ,OAE5C/9G,EAAOC,QAAU,cAAiC69G,EAM/C,SAAAjoE,GACG,OAAO,IAAIkoE,EAA4B19G,KAC1C,oBCXH,MAAM29G,EAAwB,EAAQ,OAChCC,EAA6B,EAAQ,OAE3Cj+G,EAAOC,QAAU,cAAgC+9G,EAM9C,SAAAnoE,GACG,OAAO,IAAIooE,EAA2B59G,KACzC,oBCXH,MAAM69G,EAAuB,EAAQ,OAC/BC,EAA4B,EAAQ,OAE1Cn+G,EAAOC,QAAU,cAA+Bi+G,EAU7C,SAAAroE,GACG,OAAO,IAAIsoE,EAA0B99G,KACxC,oBCfH,MAAM+9G,EAAuB,EAAQ,OAC/BC,EAA4B,EAAQ,OAE1Cr+G,EAAOC,QAAU,cAA+Bm+G,EAe7C,SAAAvoE,GACG,OAAO,IAAIwoE,EAA0Bh+G,KACxC,oBCpBH,MAAMi+G,EAAuB,EAAQ,MAC/BC,EAA4B,EAAQ,OAE1Cv+G,EAAOC,QAAU,cAA+Bq+G,EAe7C,SAAAzoE,GACG,OAAO,IAAI0oE,EAA0Bl+G,KACxC,mBCpBH,MAAMm+G,EAAwB,EAAQ,OAChCC,EAA6B,EAAQ,OAE3Cz+G,EAAOC,QAAU,cAAgCu+G,EAM9C,SAAA3oE,GACG,OAAO,IAAI4oE,EAA2Bp+G,KACzC,CAEA,eAAAq+G,CAAgBC,EAAMz5D,GACnB,MAAMxiD,EAAMmM,OAAO+vG,IAAIC,gBAAgBF,GAEjC19F,EAAI9E,SAASE,cAAc,KACjC4E,EAAEhE,KAAOva,EACTue,EAAE69F,SAAW55D,EACb/oC,SAAShO,KAAKuO,YAAYuE,GAC1BA,EAAEoM,QACFpM,EAAErP,SAEF/C,OAAO+vG,IAAIG,gBAAgBr8G,EAC9B,CAEA,YAAA+0E,GACGr3E,MAAMq3E,eAEGp3E,KAAKwgB,iBAAmBxgB,KAAKunB,gBAEnCvnB,KAAKs3E,gBACF,qCAAqCt3E,KAAK2hB,SAASovC,eAIpD/wD,KAAK2hB,SAASkjC,UAChB7kD,KAAKs3E,gBAAgB,kCAM3B,oBC3CH,MAAMqnC,EAAiB,EAAQ,OACzBC,EAAsB,EAAQ,OAC9BC,EAAmB,EAAQ,OAC3BtyC,EAAmB,EAAQ,OAC3BuyC,EAAoB,EAAQ,OAC5BC,EAAuB,EAAQ,OAC/BC,EAA2B,EAAQ,OAEnCC,GADoB,EAAQ,OACX,EAAQ,QAEzBnyF,EAAI,IAAIjkB,IAAWtI,GAAGgD,aAAaC,SAASqF,GAQ5CgrD,EAAsC8qD,EAAex2E,gBAE3DxoC,EAAOC,QAAU,cAAyB++G,EACvC,WAAA7+G,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MAAMwF,EAAQkf,EAAa1c,EAAQogC,GAEnCnoC,KAAKk/G,WAAa,CACfC,iBAAkB,KAAM,EAE9B,CAEA,cAAAC,GAIG,OAH4B,MAAxBp/G,KAAKq/G,kBACNr/G,KAAKq/G,gBAAkBt/G,MAAMy1C,aAEzBx1C,KAAKq/G,eACf,CAOA,SAAA7pE,GACG,OAAO,IAAIopE,EAAoB5+G,KAClC,CAEA,oBAAAwiG,CAAqB1/D,GAElB,IAAI2/D,EAAgBziG,KAAK2iB,OACrB1c,GAAMA,aAAa44G,GAAoB54G,EAAE0b,SAASsxC,YACpD,GAGmB,MAAjBwvC,GACDA,EAAgBoc,EAAiBnvD,YAAY1vD,KAAKykB,YAAazkB,MAC/DyiG,EAAc9gF,SAASsxC,WAAY,GAInCjzD,KAAK4iB,OAAS5iB,KAAK2iB,OAAO1c,GAAMA,EAAEhH,IAAMwjG,EAAcxjG,KAIzD,IAAIyjG,EAAQ1iG,KAAK2iB,QAAQ7jB,KAAKmH,IAAOA,EAAE+hD,SAASiI,GAAK,GAAK,IAC1DyyC,EAAMt7F,KAAKpH,KAAK4iB,OAAOhhB,QAAU,GACjC8gG,EAAMt7F,KAAKolB,GAAGsW,EAAIxY,QAAQ1oB,QAAU,GACpC,IAAI+gG,EAAOjlD,KAAKqI,OAAO28C,GAQvB,OALAD,EAAcz6C,SAASiI,EAAI0yC,EAG3B3iG,KAAK4iB,OAAOxb,KAAKq7F,GAEVA,CACV,CAUA,aAAA6c,CAAchsD,EAAU5nD,EAAKgd,EAAI4M,GAE9B,MAAMiqF,EAAgB,CAAC,MACvBjsD,EAASqtC,WAAU,SAAUj1F,GAC1B6zG,EAAcn4G,KAAKsE,EAAIgG,OAAO9F,KACjC,IAGA,MAAM4zG,EAAUlsD,EAASqtC,YACnBxL,EAAW,CAAC,EAClBoqB,EAAcv5G,SAASkD,IACpBisF,EAASjsF,GAAOs2G,EAAQt2G,EAAI,IAI/BlJ,KAAKy0D,iBACDG,GACEA,aAAgB2X,GAChB3X,aAAgBkqD,GAChBlqD,aAAgBmqD,GAChBnqD,aAAgBoqD,GACfpqD,aAAgBqqD,GAAwC,UAAtBrqD,EAAKjzC,SAAS5Y,OACrD/C,SAAS0b,IACR,MAAM+9F,EAAaz/G,KAAK0/G,eAAeh+F,EAAEziB,IACzC,GAAkB,MAAdwgH,EAAoB,OAExB,MAAM9wF,EAAQjN,EAAEiN,QAChB,GAAIA,EAAO,CACR,MAAM+sB,EAAW+jE,EAAW/jE,UAAY+jE,EAAWhxB,MAAM/yC,SACrDA,IACDy5C,EAASxmE,EAAM1M,YAAcy5B,EAASvxC,KAAKs1G,EAAYtqB,GAC7D,KAIHzpF,EAAI8V,gBAAgBxb,SAAS0b,KAEiB,GAAxC69F,EAAc/3G,QAAQka,EAAEO,aACxBkzE,EAASzzE,EAAEO,qBAEJkzE,EAASzzE,EAAEO,mBACXkzE,EAASzzE,EAAE+L,gBACrB,IAIH,IAAK,MAAM+a,KAAQ2sD,EACM,MAAlBA,EAAS3sD,IAA0C,GAAzB2sD,EAAS3sD,GAAM5mC,SAC1CuzF,EAAS3sD,GAAQ,IAIvB,IAAIm3E,EAMJ,GAJIrqF,IACDqqF,EAAarqF,EAAOhN,aAGnBq3F,EAAY,CACb,MAAM97E,EAAavO,EAAOhO,WAEJ5b,EAAI8V,gBACZxb,SAAS0b,IACpB,MAAMk+F,EAAe5/G,KAAKy0D,iBACtBorD,GAAUA,GAAOlxF,WAAW1vB,KAAOyiB,GAAGziB,KAG1C,GACG4kC,EAAW5kC,IAAMyiB,EAAEC,SAASC,YAC5Bg+F,EAAah+G,OAAS,QACK4L,IAA3B2nF,EAASzzE,EAAEO,YACZ,CACC,MAAM69F,EAAcp+F,EAAEkvB,WACjBlvB,EAAEkvB,WAAW3uB,WACb4hB,EAAW53B,KAEhBkpF,EAASzzE,EAAEO,YAAc,CAAC,EAC1BkzE,EAASzzE,EAAEO,YAAY69F,GACpBH,EAAWG,IAAgBH,EAAW1gH,EAC5C,IAEN,CAIA,MAAM8gH,EAAiBtgH,OAAO2vB,OAAO1G,EAAGJ,aAAe,CAAC,EAAG6sE,GA0B3D,OAvBAzpF,EAAI4e,QAAQ5I,GAAe,aAATA,EAAEjf,KAA+B,WAATif,EAAEjf,MAAkBuD,SAC1D0b,IACE,GAA8B,MAA1ByzE,EAASzzE,EAAEO,YAAqB,CACjC,IAAIijC,GAAc,EAKL,WAATxjC,EAAEjf,KAAoBif,EAAEC,UAAUiK,OAAOhS,OAAOhY,OAAS,IAC1DsjD,GAAc,GAGjBiwC,EAASzzE,EAAEO,YAAcP,EAAE7J,OAAOkoG,EAAgB76D,EACrD,KAIFs6D,EAAQ5/F,cAAche,OAAS,IAChCuzF,EAASv1E,aAAe4/F,EAAQ5/F,cAGnClU,EAAI41E,gBAAgB6T,GAEbA,CACV,CAWA,YAAA6qB,CAAaC,EAAWn7F,EAAQqwE,GAC7B,IAAI5lD,EAAO,GAGX,MAAM2wE,EAAiBlgH,KAAKy0D,iBACxBorD,GACyC,GAAvCA,GAAOlxF,UAAUhN,UAAU2/B,UACE,GAA7Bu+D,GAAOl+F,UAAU2/B,WACrBxiD,KAAK+gH,GAAUA,EAAMlxF,UAGjB7Y,EAAYgP,EAAOuH,YAAY8oE,GACrC,IAAIr9E,EAAUhC,EAAUzB,OAGxB4rG,EAAUpzB,WAMV,MAAMszB,EAAuBzxB,IAC1B,MAAM0xB,EAAaH,EAAU7pG,SAASs4E,GACtC,IAAK0xB,EAAY,OAEFA,EAAWC,QACb,KACVD,EAAWhmC,OAAO,SAAU,IAC5BgmC,EAAW9zB,UAId,MAAMg0B,EAAoBF,EAAWv2B,MAAM6U,uBACxC,0BACD,GACG4hB,GAAmBx2B,MAAM,iBAC3Bw2B,EAAkBx2B,MAAMy2B,WAAa,GAClCvgH,KAAK2hB,SAASqyC,YACdH,EAAoCG,eAE1C,EAmBH,GAfAksD,EAAel6G,SAAS0b,IACrB,IAAKA,EAAG,OAER,MAAMovB,EAAWqkD,EAASzzE,EAAEO,aACZ,IAAZ6uB,GAA8B,MAAZA,GAAoBA,EAASlvC,OAAS,KACzDq+G,EAAU3pG,YAAYoL,EAAEO,WAAY6K,EAAE,8BACtCyiB,GAAQ,OAAOziB,EAAE,6BAA6BpL,EAAEO,kBAChDnK,GAAU,EAGVqoG,EAAoBz+F,EAAEO,YACzB,KAIEnK,EAAS,CACX,MAAM0oG,EAAaP,EAAUr2B,UAAU,CACpC7mE,KAAM,SACNha,KAAM,SAIL+M,GAAW3B,QAAQvS,QACpBkU,EAAU3B,OAAOnO,SAAS7E,IACvB8+G,EAAU3pG,YAAYnV,EAAIyK,KAAMzK,EAAIuC,SACpC6rC,GAAQ,OAAOpuC,EAAIyK,SAASzK,EAAIuC,eAChCy8G,EAAoBh/G,EAAIyK,KAAK,IAGhC40G,GAAY3pD,WAEZ2pD,GAAYh5B,QAElB,CAUA,OATIj4C,GACDnsC,MAAMC,MAAM,CACT0F,KAAM,cACNzF,MAAOwpB,EAAE,mBACTy0B,MAAO,IACP99C,KAAM,+BAA+B8rC,WAIpCz3B,CACV,CAQA,sBAAMu9C,GACH,OAAOr1D,KAAKi1D,WAAWK,YAC1B,CASA,cAAMmrD,CAASR,GAGZ,IAAKjgH,KAAKk/G,YAAYC,qBAAsB,OAE5Cc,EAAUS,kBAGV,MAAM3uF,EAAK/xB,KAAKunB,eAChB,GAAU,MAANwK,EAAY,OAGhB,MAAMrmB,EAAMqmB,EAAGzK,WACf,GAAW,MAAP5b,EAAa,OAGjB,MAAMW,EAAQ0lB,EAAG1lB,MACjB,GAAa,MAATA,EAAe,OAGnB4zG,EAAUxlC,eAAe,CAAE1xE,KAAM,SAGjC,MAAMosF,EAAWn1F,KAAKs/G,cACnBW,EACAv0G,EACAqmB,EACAA,EAAGtK,oBAsBAk5F,EAAax/G,IAChB,MAAMy/G,EAAcX,EAAUr2B,UAAU,CACrC7mE,KAAM,SACNha,KAAM,SAIT,GAAI5H,EACD,GAAIA,EAAIqT,kBACL,IAAK,MAAMC,KAAQtT,EAAIqT,kBAAmB,CACvC,IAAIqsG,EAAe1/G,EAAIqT,kBAAkBC,GACrCosG,GAAgBA,EAAa,KAC9BA,EAAeA,EAAa,IAE/BZ,EAAU3pG,YAAY7B,EAAMosG,EAAan9G,QAC5C,MACQvC,EAAI2/G,WACZ19G,MAAMM,QAAQ,CACXD,KAAMtC,EAAI2/G,WACV/3G,KAAM,WAGT3F,MAAMM,QAAQ,CACXD,KAAMqpB,EAAE,mCACR/jB,KAAM,UAET/I,KAAKO,GAAGoJ,OAAOC,UAAUzI,EAAK,CAC3BuC,QAAS,2BACTqf,KAAM/iB,KAAK4H,WAKpBg5G,GAAap5B,SAEby4B,GAAWhlC,gBAAgB,EAa9B,SATMj7E,KAAK+gH,gCAGL/gH,KAAKq1D,mBAGXr1D,KAAKu1D,iBAAiB4/B,IAGjBn1F,KAAKggH,aAAaC,EAAWv0G,EAAKypF,GAGpC,YADA8qB,EAAUhlC,iBAIb,IAAI+lC,EAKJ,IAGMA,EADC7rB,EAASl2F,SACUoN,EAAM+yE,OAAO+V,EAASl2F,GAAIk2F,SAE1B9oF,EAAM8rE,OAAOgd,EAEvC,CAAE,MAAOh0F,GAEN,MADAw/G,EAAUx/G,EAAIC,MACRD,CACT,CAwBA,UACSnB,KAAKy1D,cAAcurD,EAC5B,CAAE,MAAO7/G,GACNnB,KAAKO,GAAGoJ,OAAOC,UAAUzI,EAAK,CAC3BuC,QAAS,iCACTqf,KAAM/iB,KAAK4H,QACXo5G,YAAaA,GAEnB,CAGA,IACGhhH,KAAK01D,cAAcsrD,EACtB,CAAE,MAAOC,GACNjhH,KAAKO,GAAGoJ,OAAOC,UAAUq3G,EAAM,CAC5Bv9G,QAAS,iCACTqf,KAAM/iB,KAAK4H,QACXo5G,YAAaA,GAEnB,CAGA,MArIkB,CAACA,IAEZjvF,IACG/xB,KAAK2hB,SAASuyC,aACfniC,EAAG7J,UAAU,MACb+3F,EAAU3uG,SAEN0vG,GAAeA,EAAY/hH,IAAI8yB,EAAG7J,UAAU84F,EAAY/hH,KAIlEghH,EAAUhlC,iBAIN+lC,GAAahhH,KAAKuB,KAAK,QAASy/G,EAAY,EAqHnDE,CAAUF,GACHA,CACV,CAEA,YAAAG,GACG,IACIC,EAAgB,GACpBphH,KAAK2iB,QAAQ3c,SAASojB,IACH,WAAZA,EAAK3mB,KAAgC,aAAZ2mB,EAAK3mB,KAHnB,GAIR2mB,EAAK4+B,SAASiI,IAEfmxD,EAAgBh4F,EAAKnqB,GAE3B,IAEH,IAAIoiH,EAAiBrhH,KAAK0/G,eAAe0B,GACrCC,GAAkB70F,GAAG60F,EAAezhD,GAAG3gE,KACxCutB,GAAG60F,EAAezhD,GAAG3gE,IAAIsX,OAE/B,CAEA,6BAAMwqG,GACH,MAAM1nD,EAAQ,GAoBd,OAlBCr5D,KAAK2hB,UAAU0yC,aAAe,IAAIruD,SAASgmB,KACxCA,GAAMs1F,gBAAgBC,YAAYC,iBAAmB,IAAIx7G,SACtD8G,IACE,GAAqB,UAAjBA,EAAG20G,UAAuB,OAE9B,MAAMC,EAAa1hH,KAAKO,GAAGmnB,mBAAmB5a,EAAGuE,OAG9CqwG,GAAY35F,aACZ25F,EAAWx7F,eAAeC,YAE1BkzC,EAAMjyD,KAAKs6G,EAAW52F,WAAW,GAEzC,UAGEtpB,QAAQsY,IAAIu/C,IAEX,CACV,CAEA,kBAAIqmD,GAED,OADuB1/G,KAAKo/G,iBACNM,cACzB,CAEA,YAAAtoC,GACGr3E,MAAMq3E,eAEGp3E,KAAKunB,gBAEXvnB,KAAKs3E,gBACF,qCAAqCt3E,KAAK2hB,SAASovC,eAIrD/wD,KAAK2hB,SAAS0yC,YAIdr0D,KAAK2hB,SAAS2yC,WAGrB,CASA,gBAAMqtD,CAAW1B,GAEd,MAAMv3F,EAAK1oB,KAAKunB,eAChB,GAAU,MAANmB,EAAY,OAIhB,GAAW,MADCA,EAAGpB,WACE,OAGjB,MAAMjb,EAAQqc,EAAGrc,MACjB,GAAa,MAATA,EAAe,OAGnB,MAAM8oF,EAAW8qB,EAAUtf,YAE3B,GAAIxL,GAAUl2F,GAAI,CACf,MAAMiF,QAAemI,EAAMqC,OAAOymF,EAASl2F,IAQ3C,OALIiF,IACDwkB,EAAGR,UAAU,MACb+3F,EAAU3uG,SAGNpN,CACV,CACH,oBCpkBH,MAAM09G,EAAuB,EAAQ,OAC/BC,EAA4B,EAAQ,OAE1CliH,EAAOC,QAAU,cAA+BgiH,EAM7C,SAAApsE,GACG,OAAO,IAAIqsE,EAA0B7hH,KACxC,oBCXH,MAAM8hH,EAAyB,EAAQ,OACjCC,EAA8B,EAAQ,OAE5CpiH,EAAOC,QAAU,cAAiCkiH,EAM/C,SAAAtsE,GACG,OAAO,IAAIusE,EAA4B/hH,KAC1C,oBCXH,MAAMgiH,EAAwB,EAAQ,OAChCC,EAA6B,EAAQ,OACrC5E,EACH,WACG6E,EACH,WAEGp2C,EACHk2C,EAAsB75E,gBAEzBxoC,EAAOC,QAAU,cAAgCoiH,EAM9C,WAAAliH,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MAAMwF,EAAQkf,EAAa1c,EAAQogC,GAGnCnoC,KAAK+iG,kBAAoB/iG,KAAKO,GAAGyzB,iBAC9B,GAAGh0B,KAAKf,uBAGXe,KAAK+iG,kBAAkB9uE,WACpBj0B,KAAKsnB,WAAatnB,KAAKsnB,WAAWgD,SAAW,GAC7CtqB,KAAKsnB,WAAatnB,KAAKsnB,WAAa,MAsBvCtnB,KAAK+iG,kBAAkB7uE,SACpBl0B,KAAK2hB,SAASyD,kBACX0mD,EAA2C1mD,iBAEpD,CAYA,UAAAvF,CAAWta,GACRxF,MAAM8f,WAAWta,GAEjBvF,KAAKu9G,YAAYnoD,aAAap1D,KAAK2hB,UACnC3hB,KAAKmiH,aAAa/sD,aAAap1D,KAAK2hB,SACvC,CAEA,0BAAWygG,GACR,OAAO/E,EAAsBgF,kBAAkBriH,KAAKk8B,IAAKl8B,KAAKm8B,OACjE,CAEA,2BAAWmmF,GACR,OAAOJ,EAAuBG,kBAAkBriH,KAAKk8B,IAAKl8B,KAAKm8B,OAClE,CAOA,SAAAqZ,GACG,OAAO,IAAIysE,EAA2BjiH,KACzC,CAEA,eAAIu9G,GAID,OAH0B,MAAtBv9G,KAAKw9G,gBACNx9G,KAAKw9G,cAAgB,IAAIH,GAErBr9G,KAAKw9G,aACf,CAEA,gBAAI2E,GAID,OAH2B,MAAvBniH,KAAKuiH,iBACNviH,KAAKuiH,eAAiB,IAAIL,GAEtBliH,KAAKuiH,cACf,oBCpGH,MAAMC,EAAuB,EAAQ,MAC/BC,EAA4B,EAAQ,OAE1C9iH,EAAOC,QAAU,cAA+B4iH,EAM7C,SAAAhtE,GACG,OAAO,IAAIitE,EAA0BziH,KACxC,oBCXH,MAAM0iH,EAA2B,EAAQ,OACnCC,EAAgC,EAAQ,OAE9ChjH,EAAOC,QAAU,cAAmC8iH,EAMjD,SAAAltE,GACG,OAAO,IAAImtE,EAA8B3iH,KAC5C,oBCXH,MAAM4iH,EAAqB,EAAQ,OAC7BC,EAA0B,EAAQ,MAGrCD,EAAmBz6E,gBAEtBxoC,EAAOC,QAAU,cAA6BgjH,EAK3C,sBAAWE,GACR,OAAOD,CACV,CAOA,SAAArtE,GACG,OAAO,IAAIqtE,EAAwB7iH,KACtC,CAQA,kBAAA+iH,CAAmBtgH,GAChB,IAAIkS,EAAO3U,KAAKuwD,sBAQhB,OAAO9tD,GANHkS,EACkBA,EAAKquG,iBAEL5/G,MAAM40E,MAI/B,oBCxCH,MAAMirC,EAAqB,EAAQ,OAC7BC,EAA0B,EAAQ,OAExCvjH,EAAOC,QAAU,cAA6BqjH,EAM3C,SAAAztE,GACG,OAAO,IAAI0tE,EAAwBljH,KACtC,oBCXH,MAAMmjH,EAAuB,EAAQ,OAC/BC,EAA4B,EAAQ,OAE1CzjH,EAAOC,QAAU,cAA+BujH,EAM7C,SAAA3tE,GACG,OAAO,IAAI4tE,EAA0BpjH,KACxC,oBCXH,MAAMqjH,EAAyB,EAAQ,MACjCC,EAA8B,EAAQ,OAE5C3jH,EAAOC,QAAU,cAAiCyjH,EAM/C,SAAA7tE,GACG,OAAO,IAAI8tE,EAA4BtjH,KAC1C,oBCXH,MAAMujH,EAA+B,EAAQ,OACvCC,EAAoC,EAAQ,OAElD7jH,EAAOC,QAAU,cAAuC,EAQrD,SAAA41C,GACG,OAAO,IAAIguE,EAAkCxjH,KAChD,oBCbH,MAAMyjH,EAA6B,EAAQ,OACrCC,EAAkC,EAAQ,OAEhD/jH,EAAOC,QAAU,cAAqC,EAQnD,SAAA41C,GACG,OAAO,IAAIkuE,EAAgC1jH,KAC9C,oBCbH,MAAM2jH,EAAwB,EAAQ,OAChCC,EAA6B,EAAQ,OAE3CjkH,EAAOC,QAAU,cAAgC+jH,EAM9C,SAAAnuE,GACG,OAAO,IAAIouE,EAA2B5jH,KACzC,oBCXH,MAAM6jH,EAAqB,EAAQ,OAC7BC,EAA0B,EAAQ,OAExCnkH,EAAOC,QAAU,cAA6BikH,EAO3C,SAAAruE,GACG,OAAO,IAAIsuE,EAAwB9jH,KACtC,8ECVY,MAAM+jH,UAA6BpuG,EAAAC,EAC/C,WAAA9V,CAAYo0G,EAAU/3E,EAAQ2G,GAC3B/iC,MACGm0G,EACA/3E,GAAU,eAAe+3E,EAASj1G,KAClCQ,OAAO2vB,OACJ,CACG40F,KAAM,GACNC,MAAO,IAEVnhF,IAIN9iC,KAAKkkH,QAAU,KAOflkH,KAAKmkH,WAAa,KAClBnkH,KAAKokH,eAAiB,KACtBpkH,KAAKqkH,aAAe,KACpBrkH,KAAKskH,cAAgB,KACrBtkH,KAAKukH,cAAgB,KACrBvkH,KAAKwkH,WAAa,KAElBxkH,KAAKykH,kBAAoB,KACzBzkH,KAAK0kH,gBAAkB,KAEvB1kH,KAAK2kH,YAAc,CAAC,EAMpB,MAAMC,EAAU5kH,KAAK8iC,IAAImhF,MAEzBjkH,KAAK6kH,aAAe,CACjBC,aAAeC,IACZ,MAAMC,EAAex4F,GAAGo4F,GAASj8B,WAAW,SAC5C,IAAKq8B,EAAc,OAAO,EAE1B,MAAMC,EAAYD,EAAa3rD,QAC/B,SAAK4rD,IAAcA,EAAUr8F,SAEtBq8F,EAAUr8F,OAAOm8F,EAAO,EAElCG,WAAaH,IACV,IAAK/kH,KAAK6kH,aAAaC,aAAaC,GAAS,OAE7C,MAAMI,EAAa34F,GAAGo4F,GAASj8B,WAAW,cAC1C,OAAKw8B,EAEEA,EAAWD,WAAWH,QAF7B,CAEoC,EAG7C,CAEA,EAAAnlD,GACG,MAAM98B,EAAM9iC,KAAK8iC,IACXqsD,EAAOnvF,MACP,WAAEolH,EAAU,YAAEC,EAAW,UAAEC,GAActlH,KAAKulH,kBAC9CzQ,EAAM/0G,MAAM6/D,GAAG,CAClB,CACGqsB,KAAM,CACH,CAAE2mB,WAAW,GACb,CACG7vF,KAAM,OACN9jB,GAAI6jC,EAAIkhF,KACRtzB,OAAQ,IACRnvC,MAAO,IACPngD,KAAM,CACH,CACGnC,GAAI,MACJoS,MAAOrR,KAAKwD,MAAM,QAErB,CACGvE,GAAI,OACJoS,MAAOrR,KAAKwD,MAAM,SAErB,CACGvE,GAAI,QACJoS,MAAOrR,KAAKwD,MAAM,UAErB,CACGvE,GAAI,OACJoS,MAAOrR,KAAKwD,MAAM,UAGxBvC,GAAI,CACDyxG,YAAczzG,IACXe,KAAKwlH,SAASvmH,EAAG,MAMhC,CACGA,GAAI6jC,EAAImhF,MACRlhG,KAAM,QACN6pC,OAAQ,CAACw4D,EAAYC,EAAaC,GAClCG,SAAU,IAAIC,IAAI,CACf,CACGzB,MAAM0B,SAASC,QAEf,cAAwB3B,MAAM0B,SAASC,QACpC,WAAMvsD,GACH,MAAMzsC,EAAKuiE,EAAK02B,sBAChB,OAAKj5F,GAOGA,EAAGsG,WAAa,IAAIp0B,KAAI,CAACwuB,EAAGsV,IACjCusD,EAAK22B,cAAcx4F,EAAGsV,KART,EAUnB,CACA,KAAAwI,GACG,OAAO5pC,QAAQ9B,QAAQ,GAC1B,CACA,aAAMqmH,CAAQr6G,EAAKihB,EAAO5kB,GAClBonF,EAAKw1B,YAAYj5G,EAAIzM,MACvBkwF,EAAKw1B,YAAYj5G,EAAIzM,IAAMkwF,EAAK62B,QAAQt6G,IAE3C,MAAM+vB,QAAgB0zD,EAAKw1B,YAAYj5G,EAAIzM,IAE3C,cADOkwF,EAAKw1B,YAAYj5G,EAAIzM,IACrB,CACJA,IAAKw8B,GAAW,CAAC,GAAGx8B,GAE1B,CACA,gBAAMgnH,CAAWhnH,EAAIyM,GAClB,aAAayjF,EAAK+2B,WAAWx6G,EAAIzM,GAAIyM,EACxC,CACA,gBAAMw5G,CAAWjmH,GACd,aAAakwF,EAAKg3B,WAAWlnH,EAChC,SASf,cAFO61G,EAAI/rG,KAEJ+rG,CACV,CAEA,UAAMx0G,CAAKC,SACFR,MAAMO,KAAKC,GAOjB,MAAM6lH,EAAQ55F,GAAGxsB,KAAK8iC,IAAIkhF,MAEtBoC,GAAOA,EAAMC,SAAS,MAC7B,CAOA,yBAAIR,GACD,OAAO9lH,MAAM8lH,uBAAyB7lH,KAAKkkH,OAC9C,CAaA,aAAA4B,CAActvG,EAAM,CAAC,EAAGmW,EAAQ,MAC7B,MAAMvrB,EAAO,CAAC,EACRgjH,EAAiBpkH,KAAKokH,eACtBC,EAAerkH,KAAKqkH,aACpBC,EAAgBtkH,KAAKskH,cAE3B,IAAKF,IAAoBC,IAAiBC,EAAgB,OAAOljH,EAEjE,MAAMqiD,EAAW,IAAI1rC,KAErB3W,EAAS,GAAIoV,EAAIvX,IAAMuX,EAAI7U,KAC3BP,EAAW,KAAI,OACfA,EAAa,OAAI,EACjBA,EAAW,MAAI,EAGf,MAAM+iH,EAAankH,KAAKmkH,WAClBI,EAAgBvkH,KAAKukH,cACrBC,EAAaxkH,KAAKwkH,WAyBxB,OAvBApjH,EAAW,KAAI+iH,EACV3tG,EAAI2tG,EAAWliG,aAAe,GAC9BjiB,KAAKsmH,cAAcv9E,YAAYvyB,GACpCpV,EAAiB,WAAIoV,EAAI4tG,EAAeniG,aAAewhC,EACvDriD,EAAe,SAAImjH,EACd9lE,WAAWjoC,EAAI+tG,EAActiG,aAAe,GAC5C,EAEDuiG,IAAYpjH,EAAc,QAAIoV,EAAIguG,EAAWviG,aAAe,IAE5DoiG,IACDjjH,EAAe,SAAIoV,EAAI6tG,EAAapiG,aAAewhC,GAElD6gE,IAAeljH,EAAe,SAAIoV,EAAI8tG,EAAcriG,aAAe,GAGlE7gB,EAAe,UAAMA,EAAe,WACtCA,EAAe,SAAIqiD,EACnBriD,EAAe,SAAI,GAGlBurB,IAAOvrB,EAAY,MAAIurB,GAEpBvrB,CACV,CAWA,aAAAmlH,CAAcp3E,GACX,MAAMq3E,EAAQ,CAAC,EACTrC,EAAankH,KAAKmkH,WAClBC,EAAiBpkH,KAAKokH,eACtBG,EAAgBvkH,KAAKukH,cACrBC,EAAaxkH,KAAKwkH,WAClBH,EAAerkH,KAAKqkH,aACpBC,EAAgBtkH,KAAKskH,cAe3B,OAbIH,IAAYqC,EAAMrC,EAAWliG,YAAcktB,EAAW,MAAK,IAE3Di1E,IAAgBoC,EAAMpC,EAAeniG,YAAcktB,EAAiB,YAEpEo1E,IACDiC,EAAMjC,EAActiG,YAAcw8B,WAAWtP,EAAe,UAAK,IAEhEq1E,IAAYgC,EAAMhC,EAAWviG,YAAcktB,EAAc,SAEzDk1E,IAAcmC,EAAMnC,EAAapiG,YAAcktB,EAAe,UAE9Dm1E,IAAekC,EAAMlC,EAAcriG,YAAcktB,EAAe,UAE7Dq3E,CACV,CAMA,UAAAjyD,CAAWzvC,GACR/kB,MAAMw0D,WAAWzvC,GAGjB,MAAMnD,EAAW3hB,KAAK2hB,SAElBmD,IACD9kB,KAAKmkH,WAAar/F,EAAO8C,UAAUjG,EAASsrD,cAC5CjtE,KAAKokH,eAAiBt/F,EAAO8C,UAAUjG,EAASurD,kBAChDltE,KAAKqkH,aAAev/F,EAAO8C,UAAUjG,EAASwrD,gBAC9CntE,KAAKskH,cAAgBx/F,EAAO8C,UAAUjG,EAASyrD,iBAC/CptE,KAAKukH,cAAgBz/F,EAAO8C,UAAUjG,EAAS0rD,iBAC/CrtE,KAAKwkH,WAAa1/F,EAAO8C,UAAUjG,EAAS2rD,cAElD,CAMA,kBAAAm5C,CAAmBl/F,GAChBxnB,MAAM0mH,mBAAmBl/F,GAEzB,MAAMmB,EAAK1oB,KAAK6lH,uBAAyBt+F,EACpCmB,IAIL1oB,KAAKkkH,QAAU38F,EAGfvnB,KAAKu0D,WAAW7rC,EAAGpB,YAEA,CAAC,SAAU,SAAU,SAAU,mBAEvCthB,SAAS3G,IAEdA,KAAKqpB,EAAGg+F,UACiD,IAAzD1mH,KAAKk2B,SAASu7B,WAAWk1D,GAAOA,EAAG12F,YAAc5wB,MAK5C,WADAA,EAEFW,KAAK+vB,SAAS,CACXC,QAAStH,EACTuH,UAAW,SACXC,SAAW60F,IAEJ/kH,KAAK6kH,aAAaC,aAAaC,IAChC/kH,KAAK6kH,aAAaK,WAAWH,EAAO,IAO7C/kH,KAAK+vB,SAAS,CACXC,QAAStH,EACTuH,UAAW5wB,EACX6wB,SAAU,KACPlwB,KAAK4mH,UAAU,IAK3B,IAEN,CAMA,IAAA1pC,GACG1wD,GAAGxsB,KAAK8iC,IAAI0S,YAAY0nC,MAC3B,CAEA,QAAA0pC,GACG,MAAMC,EAAYr6F,GAAGxsB,KAAK8iC,IAAImhF,OAC9B,IAAK4C,EAAW,OAEhB,MAAMC,EAAcD,EAAUl+B,WAAW,SACzC,IAAKm+B,EAAa,OAElB,MAAMC,EAAUD,EAAYztD,QACvB0tD,GAWLt/G,YAAW,KACRs/G,EAAQv1G,WAER,MAAMob,EAAK5sB,KAAK6lH,sBACVmB,EAAa,CAChB5lH,KAAMwrB,GACAA,EAAGsG,WAAa,IAAIp0B,KAAI,CAACwuB,EAAGX,IAC1B3sB,KAAK8lH,cAAcx4F,EAAGX,KAEzB,IAIJ3sB,KAAKokH,iBAAmBpkH,KAAKqkH,cAAgBrkH,KAAKskH,gBACnDyC,EAAQn8G,MAAMo8G,GAIjB,MAAMC,EAAYH,EAAYI,YAE9BlnH,KAAKykH,kBAAoBwC,EAAUh2F,MACnCjxB,KAAK0kH,gBAAkBuC,EAAUp6D,IAEjC7sD,KAAK0gB,MAAM,GACX,GACN,CAEA,qBAAI6kG,GAoBD,MAAO,CACJD,UApBe,CAAE/sG,KAAM,MAAOV,OAAQ,MAqBtCsvG,WApBa,CACV5uG,KAAM,OACNV,OAASoZ,IACN,MAAMu3D,EAASplF,MAAM2U,KAAKosC,UAAU,SAC9BijE,EAAShkH,MAAM2U,KAAKsvG,UAAUp2F,GAC9Bq2F,EAAOlkH,MAAM2U,KAAKW,IACrBtV,MAAM2U,KAAKW,IAAI0uG,EAAQ,EAAG,QAAQ,IACjC,EACD,OACA,GAGH,OAAO5+B,EAAO4+B,GAAU,MAAQ5+B,EAAO8+B,EAAK,GASlDjC,YANc,CAAE9sG,KAAM,QAASV,OAAQ,MAOvCutG,WANa,CAAE7sG,KAAM,OAAQV,OAAQ,MAQ3C,CAEA,QAAA2tG,CAAS+B,GACN,MAAMV,EAAYr6F,GAAGxsB,KAAK8iC,IAAImhF,OAC9B,IAAK4C,EAAW,OAEhB,MAAMW,EAAYX,EAAUl+B,WAAW,SACvC,IAAK6+B,EAAW,OAEhB,MAAMC,EAAY,IACZ,WAAErC,EAAU,YAAEC,EAAW,WAAE8B,EAAU,UAAE7B,GAC1CtlH,KAAKulH,kBAER,OAAQgC,GACL,IAAK,MACFE,EAAUrgH,KAAKg+G,EAAYC,EAAaC,GACxC,MAEH,IAAK,OACFmC,EAAUrgH,KAAKg+G,EAAYC,EAAa8B,GACxC,MAEH,IAAK,QACFM,EAAUrgH,KAAKg+G,EAAYC,GAC3B,MAEH,IAAK,OACFoC,EAAUrgH,KAAKg+G,GAIrB,MAAMjP,EAAUn2G,KAAKO,GAAG0Q,MAClBg2G,EAAYJ,EAAUl+B,WAAW,SAASu+B,YAC7Cj2F,EAAQklF,EAAQp+F,KAAKW,IAAI1Y,KAAKykH,mBAAoB,EAAG8C,GAAO,GAC5D16D,EAAMspD,EAAQp+F,KAAKW,IAAI1Y,KAAK0kH,gBAAiB,EAAG6C,GAAO,GAE1DC,EAAUE,UACPz2F,EACA47B,EACAo6D,EAAUU,QACVV,EAAUW,UACVX,EAAUY,WACVJ,GAEHZ,EAAUl/B,KAAK/wE,UACfiwG,EAAUhgC,WAAWihC,OAAO,CAAEhM,IAAK,EAAGiM,KAAM,GAC/C,CAMA,MAAA/mB,GACGjhG,MAAMihG,SACNhhG,KAAKymH,mBAAmBzmH,KAAKunB,gBAE7BiF,GAAGxsB,KAAK8iC,IAAI0S,YAAYq1C,MAC3B,CAEA,IAAAnqE,GAiCA,CAEA,aAAMslG,CAAQgC,GACX,MAAMxB,EAAQxmH,KAAKumH,cAAcyB,GAC3B/R,EAAKj2G,KAAKO,GAEhB,IAGG,aAAaP,KAAKsmH,eAAej6G,QAAQ8rE,OAAOquC,GACnD,CAAE,MAAOnnH,GAWN,MAVA42G,EAAGhlG,MAAM5N,MAAM,CACZC,MAAOtD,KAAKwD,MAAM,qBAClBG,GAAI3D,KAAKwD,MAAM,QACfC,KAAMzD,KAAKwD,MAAM,+BAEpByyG,EAAGtsG,OAAOC,UAAUvK,EAAG,CACpB6B,QAAS,2CACTslH,UAGGnnH,CACT,CACH,CAEA,gBAAM8mH,CAAW17F,GACd,MAAMwrF,EAAKj2G,KAAKO,GAEhB,IAKG,aAFMP,KAAKsmH,cAAcj6G,QAAQqC,OAAO+b,GAEjC,CAAC,CACX,CAAE,MAAOprB,GAWN,MAVA42G,EAAGhlG,MAAM5N,MAAM,CACZC,MAAOtD,KAAKwD,MAAM,uBAClBG,GAAI3D,KAAKwD,MAAM,QACfC,KAAMzD,KAAKwD,MAAM,iCAEpByyG,EAAGtsG,OAAOC,UAAUvK,EAAG,CACpB6B,QAAS,gDACTupB,UAGGprB,CACT,CACH,CAEA,gBAAM6mH,CAAWz7F,EAAOw9F,GACrB,MAAMzB,EAAQxmH,KAAKumH,cAAc0B,GAC3BhS,EAAKj2G,KAAKO,GAEhB,IAKG,aAFMP,KAAKsmH,cAAcj6G,QAAQ+yE,OAAO30D,EAAO+7F,GAExC,CAAC,CACX,CAAE,MAAOnnH,GAWN,MAVA42G,EAAGhlG,MAAM5N,MAAM,CACZC,MAAOtD,KAAKwD,MAAM,uBAClBG,GAAI3D,KAAKwD,MAAM,QACfC,KAAMzD,KAAKwD,MAAM,iCAEpByyG,EAAGtsG,OAAOC,UAAUvK,EAAG,CACpB6B,QAAS,gDACTslH,UAGGnnH,CACT,CACH,ECtkBH,MAAM6oH,EAAkB,EAAQ,OAEjB,MAAMC,UAAoBD,EACtC,WAAApoH,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MAAMwF,EAAQkf,EAAa1c,EAAQogC,EACtC,CAOA,SAAAqN,GACG,OAAO,IAAIuuE,EAAqB/jH,KACnC,CAEA,YAAAo3E,GACGr3E,MAAMq3E,eAEN,IAAIxqD,EAAK5sB,KAAKunB,eACd,GAAKqF,EAKF,GAAK5sB,KAAK2hB,SAASurD,iBAEZ,CACJ,IAAIv+C,EAAQ/B,EAAGtF,YAAYM,UACxB5nB,KAAK2hB,SAASurD,kBAEZv+C,GACF3uB,KAAKs3E,gBACF,iCAAiCt3E,KAAK2hB,SAASurD,oBAGxD,MAVGltE,KAAKs3E,gBAAgB,6CALxBt3E,KAAKs3E,gBACF,qCAAqCt3E,KAAK2hB,SAASovC,cAgB5D,yFChCY,MAAMq3D,UAAgC9yG,EAAA,EAClD,WAAAxV,CAAYq8B,GAGTp8B,MAAM,CACHsoH,YAAa,GAHhBlsF,EAASA,GAAU,sCAIhBoT,KAAM,GAAGpT,uBAGZn8B,KAAKgxD,eAAiB,KAKtBhxD,KAAKsoH,gBAAkB,KAIvBtoH,KAAKuoH,MAAQ,KAIbvoH,KAAKwoH,UAAY,KAIjBxoH,KAAKyoH,cAAgB,EAGxB,CAEA,EAAA7oD,GACG,IAAIuvB,EAAOnvF,KAGX,MAAO,CACJ+iB,KAAM,QACN9jB,GAAIe,KAAK8iC,IAAIulF,YACb9mE,MAAO,IACPwO,OAAQ,EACRygD,QAAQ,EACR/pB,QAAQ,EACR34E,KAAM,CACH7O,GAAIe,KAAK8iC,IAAIyM,KACbxsB,KAAM,OACN2lG,YAAY,EACZtnH,KAAM,CACH,CAAEwK,KAAM,MAAOmS,KAAM,gBACrB,CAAEnS,KAAM,QAASmS,KAAM,gBACvB,CAAEnS,KAAM,MAAOmS,KAAM,cACrB,CAAEnS,KAAM,MAAOmS,KAAM,iBAExBwxD,SACG,mFACHtuE,GAAI,CACDyxG,YAAa,SAAUzzG,GACpB,IAAIu2C,EAAYx1C,KAAKwoB,QAAQvpB,GAC7BkwF,EAAKjb,OAAO1+B,EAAU5pC,KACzB,IAIZ,CAEA,UAAMtL,CAAKC,GACJA,IACDP,KAAKO,GAAKA,GAEb6C,MAAMw8D,GAAG5/D,KAAK4/D,MACdpzC,GAAGxsB,KAAK8iC,IAAIulF,aAAa/7B,QAC5B,CASA,kBAAAq8B,CAAmBjgG,GAChB1oB,KAAKsoH,gBAAkB5/F,CAC1B,CAOA,UAAA6rC,CAAWzvC,GACR9kB,KAAKgxD,eAAiBlsC,CACzB,CAQA,eAAA8jG,CAAgBt+F,EAAS,IACtBtqB,KAAKyoH,cAAgBn+F,GAAU,EAClC,CAOA,WAAAu+F,CAAYhkE,GACT7kD,KAAKwoH,UAAY3jE,CACpB,CAQA,gBAAAikE,CAAiBC,GACd/oH,KAAKuoH,MAAQQ,CAChB,CAQA,IAAAl+B,CAAKhB,GACFr9D,GAAGxsB,KAAK8iC,IAAIulF,aAAax9B,KAAKhB,EACjC,CAEA,YAAM,CAAOj+E,GACV,IAAIo9G,EAEAtgD,EAAU,CAAC,EAEXhgD,EAAK1oB,KAAKsoH,gBACVt3D,EAAiBhxD,KAAKgxD,eACtBu3D,EAAQvoH,KAAKuoH,MACbC,EAAYxoH,KAAKwoH,WAGlB9/F,GACEA,EAAG/G,SAAS4D,SAAWmD,EAAGX,YAAcW,EAAGxC,eAAeC,mBAGtDuC,EAAGwE,WAAW,EAAG,MACvBxE,EAAG/G,SAAS4D,SAAU,GAKrByrC,GACDA,EAAe1mC,SAAStkB,SAAS0b,IAE1B1hB,KAAKyoH,cAAcjhH,QAAQka,EAAEO,aAAe,IAEhDymD,EAAQhnD,EAAEO,YAAc,CACrBstD,SAAWtlD,GACDvI,EAAE7J,OAAOoS,IAErB,IAMP,MAAMg/F,EACHV,EAAMnnH,KAAK0nB,KAAK,CAAEogG,uBAAwB,IAAKtnH,OAAS,EACrDunH,EAAa3yG,GAChByyG,GAA+C,GAA/BzyG,GAAK0yG,uBAExB,OAAQt9G,GACL,IAAK,MACFxI,MAAMgxE,IAAIx3B,UAAUqvC,KAAO,IAE3B+8B,EAAW5lH,MAAMgmH,MAAMb,EAAO,CAC3B1jE,SACG2jE,IAAcx3D,EAAiBA,EAAextD,MAAQ,MACzDklE,QAASA,EACT/lE,OAAQwmH,IAEX,MACH,IAAK,QACFH,EAAW5lH,MAAMimH,QAAQd,EAAO,CAC7B1jE,SACG2jE,IAAcx3D,EAAiBA,EAAextD,MAAQ,MACzDoI,KACG48G,IAAcx3D,EAAiBA,EAAextD,MAAQ,MACzDklE,QAASA,EACT4gD,YAAY,EACZ3mH,OAAQwmH,IAEX,MACH,IAAK,MACFH,EAAW5lH,MAAMmmH,MAAMhB,EAAO,CAC3B1jE,SACG2jE,IAAcx3D,EAAiBA,EAAextD,MAAQ,MACzD8lH,YAAY,EACZ3mH,OAAQwmH,IAEX,MACH,IAAK,MACFH,EAAW5lH,MAAMomH,MAAMjB,EAAO,CAC3B1jE,SACG2jE,IAAcx3D,EAAiBA,EAAextD,MAAQ,QAMlE,UACSwlH,EACNx8F,GAAGxsB,KAAK8iC,IAAIulF,aAAanrC,MAC5B,CAAE,MAAO/7E,GACNnB,KAAKO,GAAGoJ,OAAOC,UAAUzI,EAAK,CAC3BuC,QAAS,4DAA4DkI,IACrE69G,WAAY79G,EACZ88D,UACAghD,SAAUlB,GAEhB,CACH,iBC3NC17F,EAAI,KAEO,MAAM68F,UAAkCr0G,EAAA,EAGpD,WAAAxV,CAAY8pH,EAAqBztF,GAG9Bp8B,MAAM,CACHy1C,UAAW,GAHdrZ,EAASA,GAAU,8CAIhB0tF,OAAQ,GAAG1tF,uBAGdn8B,KAAKsmH,cAAgB,KAIrBtmH,KAAK8pH,cAAgBF,EAIrB5pH,KAAKO,GAAKqpH,EAAoBrpH,GAG9BP,KAAK+pH,WAAa,IAAIh7B,EAAA,EAAW5yD,EAAQn8B,KAAKO,IAIzCusB,IACFA,EAAI,IAAIjkB,IACE7I,KAAKO,GAAGgD,aAAaC,SAASqF,GAG9C,CAEA,EAAA+2D,GACG,IAAI98B,EAAM9iC,KAAK8iC,IAGf,MAAO,CACJ/f,KAAM,QACN9jB,GAAI6jC,EAAI0S,UAER1nC,KAAM,CACHyzC,MAAO,IACPglC,KAAM,CAEHvmF,KAAK+pH,WAAWnqD,KAChB,CAAE7P,OAAQ,IACV,CACGk8B,KAAM,CACH,CAAC,EACD,CACGlpE,KAAM,SACN1R,MAAOyb,EAAE,UACTy0B,MAAO,IACPv0B,MAAO,KACJhtB,KAAKk9E,MAAM,GAGjB,CACGj+E,GAAI6jC,EAAI+mF,OACR98F,IAAK,gBACLhK,KAAM,SACNvf,MAAOspB,EAAE,UACT/jB,KAAM,OACNw4C,MAAO,IACPv0B,MAAO,KACJhtB,KAAK6pH,QAAQ,OAO/B5oH,GAAI,CACD+/F,OAAQ,KACLhhG,KAAKghG,QAAQ,GAIzB,CAEA,UAAM1gG,CAAKC,GAIR,OAHA6C,MAAMw8D,GAAG5/D,KAAK4/D,MACd5/D,KAAK+pH,WAAWzpH,KAAKC,GAEdiB,QAAQ9B,SAClB,CAMA,IAAAw9E,GACG1wD,GAAGxsB,KAAK8iC,IAAI0S,WAAW0nC,MAC1B,CAWA,UAAA3oB,CAAWzvC,EAAQo1E,GAChBl6F,KAAKsmH,cAAgBxhG,EACrB9kB,KAAK+pH,WAAWx1D,WAAWzvC,GAC3B9kB,KAAK4gF,UAAYsZ,CACpB,CAEA,MAAA8G,GAAU,CAUV,IAAAnW,CAAKhB,EAAOthF,EAAU,MACJ,MAAXA,EACDikB,GAAGxsB,KAAK8iC,IAAI0S,WAAWq1C,KAAKhB,EAAOthF,GAEnCikB,GAAGxsB,KAAK8iC,IAAI0S,WAAWq1C,KAAKhB,EAElC,CAOA,MAAAggC,GAEG,IAAIG,EAAgBx9F,GAAGxsB,KAAK8iC,IAAI+mF,QAC7BI,EAAejqH,KAAK+pH,WAAWruE,YAAc,GAIhD,GAFAsuE,EAAcnzD,WAET72D,KAAK8pH,cAIP,YADAE,EAAcxiC,SAEV,GAAIyiC,EAAaroH,OAAS,EAG9B,YADAooH,EAAcxiC,SAIjB,IAAI0iC,EAAalqH,KAAK8pH,cAAcK,eAChCC,EAAgB,GACpBF,EAAW9oH,KAAK20F,MAAK,SAAUv/E,GAEzBA,GACA/W,OAAOyK,UAAU21E,eAAe11E,KAC7BqM,EACA,2BAE2B,GAA9BA,EAAI0yG,wBAEJkB,EAAchjH,KAAKoP,EAAIvX,GAE7B,IAEA,IAAIogE,EAAO,CAAC,EACZ4qD,EAAajkH,SAASojB,IACnB,IAAIshB,EAAY1qC,KAAKsmH,cAAc1+F,UAAUwB,EAAKupB,SAC7CjI,IAEL20B,EAAK30B,EAAUzoB,YAAcmH,EAAK/X,MAAK,IAGtC+4G,EAAcxoH,OAAS,EACxBwB,MAAMY,QAAQ,CACXV,MAAOwpB,EAAE,6BACTrpB,KAAMqpB,EAAE,yDACR7oB,SAAWC,IACJA,GACGgmH,GAAcA,EAAWzvC,cAC1ByvC,EAAWzvC,aAAa,CAAE1xE,KAAM,SAEpB/I,KAAKsmH,cAAcj6G,QAE9BgzE,YAAY,CACVC,OAAQ8qC,EACR7kH,OAAQ85D,IAEVh4D,MAAK,MAEF+iH,GAAiB,IAAIpkH,SAASykB,IAC5By/F,EAAWt8F,WAAWnD,EAAO40C,EAAK,IAIrC2qD,EAAcxiC,SACdxnF,KAAKk9E,OAEDgtC,GAAcA,EAAWjvC,cAC1BivC,EAAWjvC,cAAc,IAE9B3zE,OAAOnG,IACLnB,KAAKO,GAAGoJ,OAAOC,UAAUzI,EAAK,CAC3BD,QACG,+DACHo+E,OAAQ8qC,EACR7kH,OAAQ85D,GACT,KAGR2qD,EAAcxiC,QACjB,KAINpkF,MAAMC,MAAM,CACTC,MAAOwpB,EAAE,uBACTrpB,KAAMqpB,EACH,+EAGNk9F,EAAcxiC,SACdxnF,KAAKk9E,OAEX,eC1OY,MAAM0sC,UAA4Bj0G,EAAAC,EAC9C,WAAA9V,CAAYo0G,EAAU/3E,EAAQ2G,GAC3B/iC,MACGm0G,EACA/3E,GAAU,cAAc+3E,EAASj1G,KACjCQ,OAAO2vB,OACJ,CACGi7F,MAAO,GAGPC,QAAS,GACTC,qBAAsB,GAEtBC,aAAc,GACdC,iBAAkB,GAClBC,WAAY,GACZC,aAAc,GAEd7P,oBAAqB,GAErB8P,UAAW,IAEd9nF,IAIN9iC,KAAK+6G,oBAAsB,CAACxG,EAAUC,KACnCx0G,KAAKg7G,mBAAmBzG,EAAUC,EAAY,EAGjDx0G,KAAK6qH,eAAiB,IAAIhiH,KACvB7I,KAAK8qH,aAAajiH,EAAO,EAO5B7I,KAAKu1G,UACLrB,EAAS1uD,aAAavkD,GAAG,cAAejB,KAAK+6G,qBAG7C/6G,KAAKf,GAAKi1G,EAASj1G,GAqBnBe,KAAK+qH,gBAAkB,EAIvB/qH,KAAKgrH,iBAAmB,EAQxBhrH,KAAKirH,iBAAkB,EAIvBjrH,KAAK40G,SAAWV,EAASW,eAAer/D,YAIxC,MAAM01E,EAAUlrH,KAAK8iC,IAAIunF,MACnBpU,EAAKj2G,KAAKO,GAEhBP,KAAKmrH,YAAc,IAAI,EAAcD,GACrClrH,KAAKmrH,YAAY7qH,KAAK21G,GAItBj2G,KAAKorH,yBAA2B,IAAI,EAAuBprH,KAAMkrH,GACjElrH,KAAKorH,yBAAyB9qH,KAAK21G,GAKnCj2G,KAAKqrH,4BAA8B,IAAI,EAAAz1G,EAAiBs1G,GACxDlrH,KAAKqrH,4BAA4B/qH,KAAK21G,GACtCj2G,KAAKqrH,4BAA4BpqH,GAAG,WAAYi6G,IAC7Cl7G,KAAKm7G,iBAAiBD,EAAY,IAKrCl7G,KAAKsrH,iBAAmB,CACrB,yBACA,yBACA,wBACA,uBACA,oBAeHtrH,KAAKurH,qBAAsB,EAM3BvrH,KAAKwrH,cAAgB,KAKrBxrH,KAAKyrH,yBAA0B,CAClC,CAIA,sBAAIC,GACD,MAAO,qBACV,CAEA,OAAAnW,GACGv1G,KAAK+iB,KAAKyiC,aAAa08C,mBAAmB,eAC1C,CAAC,eAAgB,cAAe,gBAAgBl8F,SAASvD,IACtDzC,KAAKunB,gBAAgB6O,eAAe3zB,EAAKzC,KAAK6qH,eAAe,GAEnE,CASA,cAAAc,CAAe1sH,GACZ,IAAI2jC,EAAO5iC,KAAKmqH,eAAewB,eAAe1sH,GAQ9C,OAPKe,KAAK2hB,SAASgsD,YAKhB/qC,IAEIA,CACV,CAEA,WAAAgpF,GACG,MAAM9oF,EAAM9iC,KAAK8iC,IACXnhB,EAAW3hB,KAAK2hB,SAChBwtE,EAAOnvF,KAEb,IAAI+iB,EAAO,aAEPpB,EAASkqG,eAAiBlqG,EAAS6sD,WAEpCzrD,EAAO,aAEV,IAAI+oG,EAAa,OAKjB,OAHKnqG,EAAS+rD,aAAe/rD,EAASqjD,cAAerjD,EAASujD,WAC3D4mD,EAAa,OAET,CACJ/oG,OACA9jB,GAAI6jC,EAAI8nF,UACRmB,aAAc,CAAE9zB,KAAM,IACtB+zB,UAAW,CAAE/zB,KAAM,IACnBg0B,WAAW,EACXv+D,SAAU/rC,EAAS+rD,WACnBw+C,gBAAgB,EAChBn8D,OAAQpuC,EAASouC,QAAU,EAC3Bo8D,WAAY,SACZ3b,OAAQsb,EACRprC,OAEG/+D,EAASosD,eAAensE,OAAS,GACjC+f,EAASqsD,aAAapsE,OAAS,EAClCw4G,SAAS,EAgBTgS,YAAY,EACZnrH,GAAI,CACDorH,eAAgB,SAAUjrH,EAAMkrH,GAC7B,IAAmD,GAA/Cn9B,EAAKm8B,iBAAiB9jH,QAAQpG,EAAK4/E,QACpC,OAAO,EACH,GAAIr/D,EAAS+rD,WAAY,CAC7B,MACM8e,EADa2C,EAAK5nE,eAAeD,WACRgD,QAC3B5I,GAAMA,EAAEO,aAAe7gB,EAAK4/E,SAC9B,GAEF,GAAmB,MAAfwL,EAAqB,OAAO,EAEhC,MAAM+/B,EAAWvsH,KAAK+gF,YAAY,CAC5BvqE,IAAKpV,EAAKoV,IACVwqE,OAAQ5/E,EAAK4/E,SAEhB/2D,EAAUjqB,KAAKwoB,QAAQpnB,EAAKoV,KAE/B,OAAOg2E,EAAYkF,WAAWznE,EAAS,KAAMsiG,EAChD,CAAO,SAAK5qG,EAASqjD,cAAgBrjD,EAASujD,gBAAvC,CAEV,EACAsnD,cAAe,CAACprH,EAAMkrH,KAMftsH,KAAK2hB,SAAS+rD,YACf1tE,KAAKwsH,cAAcprH,EAAMkrH,EAC5B,EAOHG,QAAS,SAAUj2G,EAAKk4E,EAAKxlF,GAE1B,GAAW,0BAAPwlF,EAGDS,EAAKu9B,0BAEL,GAAI/qG,EAAS+rD,WAAY,CAEtB,MACM8e,EADa2C,EAAK5nE,eAAeD,WACRgD,QAC3B5I,GAAMA,EAAEO,aAAeysE,IACzB,GAII90B,EAAQ,CACXvoD,MAAOnI,GAEJ6oF,EAAS,CACZv7E,IAAKA,EACLwqE,OAAQ0N,EACRh9E,OAAQ,CAAEkd,QAAS49D,GAAavtF,IAAM,OAGzCkwF,EAAKw9B,gBAAgB/yD,EAAOm4B,EAC/B,KAAO,CACS/xF,KAAK+gF,YAAY,CAC3BvqE,IAAKA,EACLwqE,OAAQ0N,IAEWjR,cACnB,0BAIShlC,QADD,GAAPvvC,CAKP,CAEN,EACA0jH,iBAAkB,SAAUhzD,EAAOm4B,GAEhC,MAAMrF,EAAW9yB,EAAMizD,IACvB,IAAIvjF,EAAWswB,EAAMvoD,MAErB,GADK3L,MAAMC,QAAQ2jC,KAAWA,EAAW,CAACA,IAE3B,MAAZojD,GACY,IAAZA,GAEApjD,EAAS3mC,QAAQuG,GAAe,MAAPA,GAAsB,IAAPA,IAAWtH,OAChD,GAEHmwF,EAAO1D,aAAaR,YAAYzsF,MAAM0nB,KAAK,CAAC,GAAGlnB,OAAS,EAExD,OAAO,CAEb,EACA+qH,gBAAiB,CAAC/yD,EAAOm4B,EAAQ+6B,KACF,GAAxB9sH,KAAKirH,iBACNjrH,KAAK2sH,gBAAgB/yD,EAAOm4B,EAAQ+6B,EAAa,EAEvDC,kBAAmB,WAChB/sH,KAAKirH,iBAAkB,CAC1B,EACA+B,oBAAqB,WAClBhtH,KAAKirH,iBAAkB,CAC1B,EAMAgC,eAAgB,SACbhrG,EACAk+D,EACAwC,EACAuqC,GAWA,IAA4C,GAPpB,CACrB,yBACA,wBACA,uBACA,oBAGiB1lH,QAAQya,GAAmB,CAE5CjiB,KAAK2uF,aAEL3uF,KAAKmtH,eAAelrG,EAAY0gE,GAChC3iF,KAAK4uF,eAIL,MAAM5N,EAASmO,EAAKi+B,gBAEpBnrG,EAAa++D,EAAO/hF,IAIjBkhF,EADCA,EAAWwC,EACD3B,EAAOz/B,MAAQ,GAIfy/B,EAAOz/B,OAAS4+B,EAAW,KAO1B,KACZA,EAAW,IAGda,EAAOvM,SAAW0L,EAElBngF,KAAKmtH,eAAelrG,EAAYk+D,EACnC,CAEI+sC,GACD/9B,EAAK89B,eACFhrG,EACAk+D,EACAwC,EACAuqC,EAGT,EACAG,YAAc5iG,IAAD,EAKb6iG,mBAAoB,CAAC3mF,EAAU1Z,OACmB,IAA7CjtB,KAAKsrH,iBAAiB9jH,QAAQm/B,IACnC4mF,mBAAoB,CAAC5mF,EAAUC,EAAU3Z,OAGS,IAA7CjtB,KAAKsrH,iBAAiB9jH,QAAQo/B,IACnC4mF,kBAAmB,CAAC7mF,EAAUC,EAAU3Z,IACrCjtB,KAAKwtH,kBAAkB7mF,EAAUC,EAAU3Z,GAU9CwgG,cAAe,CAACxuH,EAAII,EAAGyhF,KAEpB9gF,KAAKytH,cAAcxuH,EAAII,EAAGyhF,EAAK,GAI3C,CAEA,QAAA4sC,GACG,OAAO1tH,KAAK+iB,KAAKyiC,aAAaoa,IAGjC,CAOA,SAAA+tD,GACG,MAAM7qF,EAAM9iC,KAAK8iC,IACXqsD,EAAOnvF,KAEb,MAAO,CACJ+iB,KAAM,UACN9jB,GAAI6jC,EAAIwnF,QACR7jC,QAAQ,EACR15D,IAAK,kBACLk/D,KAAM,CACH,CACGlpE,KAAM,SACN9jB,GAAI6jC,EAAI2nF,iBACR19F,IAAK,oBACLvpB,MAAOxD,KAAKwD,MAAM,QAClBua,KAAM,wBACNhV,KAAM,OACNkjC,UAAU,EACV+gD,WAAW,EACXhgE,MAAO,WACJmiE,EAAKy+B,kBAAkB5tH,KAAK6pF,MAC/B,GAEH,CACG9mE,KAAM,SACN9jB,GAAI6jC,EAAIynF,qBACRx9F,IAAK,oBACLvpB,MAAOxD,KAAKwD,MAAM,UAClBua,KAAM,cACNhV,KAAM,OACNkjC,UAAU,EACV+gD,WAAW,EACXhgE,MAAO,WACJmiE,EAAK0+B,sBAAsB7tH,KAAK6pF,MACnC,GAEH,CACG9mE,KAAM,SACN9jB,GAAI6jC,EAAI0nF,aACRz9F,IAAK,oBACLvpB,MAAOxD,KAAKwD,MAAM,WAClBua,KAAM,eACNhV,KAAM,OACNikF,WAAW,EACXhgE,MAAO,WACJmiE,EAAKosB,cAAcv7G,KAAK6pF,MAC3B,GAEH,CACG9mE,KAAM,SACN9jB,GAAI6jC,EAAI4nF,WACR39F,IAAK,oBACLvpB,MAAOxD,KAAKwD,MAAM,QAClBua,KAAM,aACNhV,KAAM,OACNikF,WAAW,EACXhgE,MAAO,WACJmiE,EAAK2+B,YAAY9tH,KAAK6pF,MACzB,GAEH,CACG9mE,KAAM,SACN9jB,GAAI6jC,EAAI6nF,aACR59F,IAAK,oBACLvpB,MAAOxD,KAAKwD,MAAM,UAClBua,KAAM,cACNhV,KAAM,OACNikF,WAAW,EACXhgE,MAAO,WACJmiE,EAAK4+B,cAAc/tH,KAAK6pF,MAC3B,GAEH,CAAC,EACD,CACG5qF,GAAI6jC,EAAIg4E,oBACR/3F,KAAM,SACN20C,YAAa13D,KAAKwD,MAAM,aACxBvC,GAAI,CACD8rF,gBAAiB,KACd,MAAMttE,EAAa+M,GAAGsW,EAAIg4E,qBAAqBp/D,WAE/C17C,KAAK+iB,KAAKyiC,aAAak2D,mBAAmBj8F,EAAW,KAMvE,CAEA,EAAAmgD,GACG,MAAMouD,EAAU,CACb/uH,GAAIe,KAAK8iC,IAAIunF,MACbthH,KAAM,QACNy9E,YAAY,EACZD,KAAM,CACH,CAAC,EACD,CACGxjE,KAAM,QACNvf,MAAOxD,KAAKwD,MAAM,6BAClByqH,WAAY,IACZ/X,MAAO,UAEV,CAAC,IAIDv0F,EAAW3hB,KAAK2hB,UAElB3hB,KAAKunB,gBAA0C,KAAxB5F,EAASovC,cACjCi9D,EAAQxgD,QAAU7rD,EAAS6rD,QAC3BwgD,EAAQznC,KAAO,GACX5kE,EAAS8rD,aACVugD,EAAQznC,KAAKn/E,KAAKpH,KAAK2tH,aAEtB3tH,KAAK2hB,SAASssD,WAAWC,cAC1B8/C,EAAQznC,KAAKn/E,KAAKpH,KAAK0tH,YAG1BM,EAAQznC,KAAKn/E,KAAKpH,KAAK4rH,gBAG1B,MAAM9W,EAAM/0G,MAAM6/D,GAAG,CAACouD,IAItB,cAFOlZ,EAAI/rG,KAEJ+rG,CACV,CAEA,UAAMx0G,CAAKC,EAAI0oE,EAAc,GACtB1oE,SAAUR,MAAMO,KAAKC,GAEzB,MAAM4uF,EAAOnvF,KACP8iC,EAAM9iC,KAAK8iC,IAIXqzE,EAAU51G,EAAG0Q,MAEnBklG,EAAQ+X,SAAW,GACnB/X,EAAQgY,IAAM,YAUd,MAAMC,EAAapuH,KAAKmqH,eAExB,IAAIkE,EAAwB,KACxBC,EAAgB,KAEpB,IAAKF,EAAY,OAEjBjY,EAAQ56B,OAAO6yC,EAAYjY,EAAQxmB,aAEnCy+B,EAAW18G,OAAOu3D,YAAcA,EAE5BA,EAAc,GAAGmlD,EAAWh0C,OAAO,YAAY,GAEnD,MAAMz4D,EAAW3hB,KAAK2hB,SAEhBg/D,EAAkBv/E,IACrB,MAAMklH,EAAgBtmH,KAAKunB,gBAAgBD,WAE3C,IAAKg/F,IAAkB8H,EAAWhtH,KAAM,OAExC,MAAMmtH,EAAiB,GAEjBC,EAAsBJ,EAAWK,iBAAiBx+D,EACrDy+D,EAAYN,EAAW18G,OAAOg9G,UAG9BC,GADGP,EAAWvkC,MAAMpM,cAAc,kBAAkB0hB,aACpCzhD,KAAKE,MAAM4wE,EAAsBE,IACjDE,EAAcD,EAAgBP,EAAWS,kBAE5C,IAAIliG,EAAQ,EAEZyhG,EAAWhtH,KAAKqvE,MAAMslB,MAAM92F,IACf,MAANA,GAAc0vH,GAAiBhiG,GAASA,GAASiiG,GAClDL,EAAennH,KAAKnI,GAEvB0tB,GAAO,IAGV,IAAI+gC,EAAW/rC,EAAS+rD,WAEpB0gD,EAAW18G,OAAOu3D,YAAc,IAAGvb,GAAW,GAElD44D,EAAc3lC,eACXv/E,EACApB,KAAKO,GAAG67B,KACRgyF,EACAG,EACA7gE,EACF,EAGJ0gE,EAAWjjG,YAAY,iBAAiB,SAAU/pB,GAC/CgtH,EAAW9hC,SAEP+hC,GAAuBxnH,aAAawnH,GAExCA,EAAwB5mH,YAAW,KAC5B6mH,GAAeznH,aAAaynH,GAChC3tC,EAAe3gF,KAAKoB,KAAK,GACzB,KAEHb,EAAG+U,QAAQw5G,YAAYV,GACvB3uH,OAAOD,KAAKsjC,GAAK98B,SAASvD,IACvB,MAAMglF,EAAMj7D,GAAGsW,EAAIrgC,IACfglF,GACDlnF,EAAG+U,QAAQw5G,YAAYrnC,EAC1B,GAEN,IAKA2mC,EAAWjjG,YAAY,YAAY,WAC5BmjG,GAAeznH,aAAaynH,GAE5BD,GAAuBxnH,aAAawnH,GAExCC,EAAgB7mH,YAAW,KACxBk5E,EAAe3gF,KAAKoB,KAAK,GACzB,KACN,IACAgtH,EAAWjjG,YAAY,iBAAiB,WACjCkjG,GAAuBxnH,aAAawnH,GAExCA,EAAwB5mH,YAAW,KAC5B6mH,GAAeznH,aAAaynH,GAChC3tC,EAAe3gF,KAAKoB,KAAK,GACzB,IACN,IAIAgtH,EAAWjjG,YAAY,eAAe,SAAUlsB,EAAII,EAAGyhF,GAEpD,MAAMp4D,EAAKymE,EAAK5nE,eACV++F,EAAgB59F,GAAIpB,WAE1B,GAAKg/F,EAOL,GAL4B,IAAxB3kG,EAAS+rD,YACI0gD,EAAW5lG,QAAQvpB,GAI1B,SAANI,GAAgBA,EAAE65D,OAAOkD,UAAU50D,QAAQ,QAAU,EAEtD2nF,EAAKykB,WAAWlrF,EAAIzpB,EAAI0iB,EAASqjD,aACjCmqB,EAAK4/B,UAAUptG,EAASsjD,WAAYjlE,WAChC,GAAIX,EAAE65D,OAAOkD,UAAU50D,QAAQ,WAAa,EAChD2nF,EAAKykB,WAAWlrF,EAAIzpB,EAAI0iB,EAASujD,UACjCiqB,EAAK4/B,UAAUptG,EAASwjD,QAASnlE,WAC7B,GAAIX,EAAE65D,OAAOkD,UAAU50D,QAAQ,UAAY,EAC/C2nF,EAAK5tF,KAAK,eAAgB+kH,EAAernH,EAAGuX,UAE1C,GAAInX,EAAE65D,OAAOkD,UAAU50D,QAAQ,sBAAwB,EAAG,CAC5D,MAAMwnH,EAAa,CAAC,EAEpBA,EAAW/vH,EAAG+hF,QAAU,GAENvuD,WACf,UAC0B6zF,EAAcj6G,QAAQ+yE,OAC1CngF,EAAGuX,IACHw4G,EAIN,CAAE,MAAO7tH,GACNguF,EAAK5uF,GAAGoJ,OAAOC,UAAUzI,EAAK,CAC3BD,QAAS,kCACTwC,QAAS,sBACTgI,IAAK46G,EAAc1+G,QACnB3I,GAAIA,EAAGuX,KAEb,GAGHy4G,EACH,MAES5vH,EAAE65D,OAAOkD,UAAU50D,QAAQ,UAAY,EAExCxH,KAAKkvH,sBACPlvH,KAAKkvH,oBAAsB/Y,EAAQnyG,QAAQ,CACxCV,MAAO6rF,EAAK3rF,MAAM,eAClBC,KAAM0rF,EAAK3rF,MAAM,mCACjBS,SAAWC,WACDlE,KAAKkvH,oBACRhrH,GACiBuuB,WACf,WAEY6zF,EAAcj6G,QAAQqC,OAAOzP,EAAGuX,MAE5B24G,QAAU,GACpBf,EAAW78G,OAAOtS,GAClBmvH,EAAWv3G,kBAEXs/F,EAAQ9yG,MAAM,CACXI,KAAM0rF,EAAK3rF,MACR,sDAGZ,CAAE,MAAOrC,GACNguF,EAAK5uF,GAAGoJ,OAAOC,UAAUzI,EAAK,CAC3BD,QAAS,kCACTwC,QAAS,sBACTgI,IAAK46G,EAAc1+G,QACnB3I,GAAIA,EAAGuX,KAIb,GAGH44G,GAGHhB,EAAWv3G,kBAEJ,MAIR8K,EAASqjD,YAAYpjE,QAG7ButF,EAAKykB,WAAWlrF,EAAIzpB,EAAI0iB,EAASqjD,aACjCmqB,EAAK4/B,UAAUptG,EAASsjD,WAAYjlE,OAC5B2hB,EAASujD,SAAStjE,SAG1ButF,EAAKykB,WAAWlrF,EAAIzpB,EAAI0iB,EAASujD,UACjCiqB,EAAK4/B,UAAUptG,EAASwjD,QAASnlE,MAEvC,IAGI2hB,EAAS8rD,eAEP9rD,EAASgsD,YACThsD,EAAS06B,YACT16B,EAASksD,cACRlsD,EAASssD,YACPtsD,EAASssD,WAAWC,cACuB,YAA3CvsD,EAASssD,WAAWE,qBAEvB3hD,GAAGsW,EAAIwnF,SAASz/B,OAEdlpE,EAASgsD,aACXnhD,GAAGsW,EAAI2nF,kBAAkBvtC,OACzB1wD,GAAGsW,EAAIynF,sBAAsBrtC,QAG3Bv7D,EAASisD,aAAaphD,GAAGsW,EAAIynF,sBAAsBrtC,OAEpDv7D,EAASssD,aAE8B,IAArCtsD,EAASssD,WAAWC,cACuB,YAA3CvsD,EAASssD,WAAWE,oBAEpB3hD,GAAGsW,EAAI0nF,cAActtC,OAGgB,IAArCv7D,EAASssD,WAAWC,cACyB,WAA7CvsD,EAASssD,WAAWohD,sBAEpBjB,EAAWlxC,OAEVv7D,EAASssD,WAAWG,gBACrB5hD,GAAGsW,EAAIg4E,qBAAqBjwB,OAC1Br+D,GAAGsW,EAAIg4E,qBAAqB59B,OAE7Bv7D,EAASssD,WAAWC,cACrBluE,KAAK+iB,KAAKyiC,aAAallD,KAAKN,KAAKO,KAGlCohB,EAAS06B,YAAY7vB,GAAGsW,EAAI4nF,YAAYxtC,OAExCv7D,EAASksD,cAAcrhD,GAAGsW,EAAI6nF,cAAcztC,QAGhDv7D,EAAS0sD,YAAYruE,KAAKquE,aAE9B,MAAM3lD,EACH1oB,KAAKunB,gBAAkBvnB,KAAKO,GAAGmnB,mBAAmB/F,EAASovC,YAEzD/wD,KAAKyrH,yBAAyBzrH,KAAKymH,mBAAmB/9F,GAG3D1oB,KAAKwrH,cACFxrH,KAAKwrH,qBACExrH,KAAKO,GAAGwP,QAAQnH,IAAI5I,KAAK0rH,qBAChC,CAAC,EAEAhjG,GAAIpB,aAGLtnB,KAAK40G,SAASt0G,KAAK,CAChByiB,KAAM/iB,KAAK+iB,KACXwE,eAAgBmB,IAGnB1oB,KAAKsvH,gBAEX,CAOA,IAAA/+B,GACGvwF,KAAKmqH,gBAAgB1vC,eAAe,CAAE1xE,KAAM,QAC/C,CAWA,kBAAAiyG,CAAmBzG,EAAUC,EAAc,IACxC,MAAM1xE,EAAM9iC,KAAK8iC,IACXysF,EAAgB/iG,GAAGsW,EAAI0nF,cAE7B,GAAI+E,EAAe,CAChB,MAAMpT,EAAkBn8G,KAAK+iB,KAAKyiC,aAAagvD,cAE/C+a,EAAcn1C,OAAO,QAAS+hC,GAAiBviG,OAAOhY,QAAU,GAChE2tH,EAAc34G,SACjB,CAEA,MAAM8R,EAAK1oB,KAAKunB,eAEhBmB,EAAGqC,gBAAgBypF,GACnB9rF,EAAGwE,YACN,CAEA,sBAAMiuF,CAAiBc,EAAY,IAChC,MAAMuT,EAAchjG,GAAGxsB,KAAK8iC,IAAI4nF,YAEhC8E,EAAYp1C,OAAO,QAAS6hC,EAAUr6G,QAAU,MAChD4tH,EAAY54G,UAEZ,MAAM64G,EAAWzvH,KAAKmqH,eAEtB,GAAIsF,EAASruH,KAAK0nB,KAAK,CAAC,GAAGlnB,OAAS6tH,EAASruH,KAAKspB,QAC/C,UAGS1qB,KAAKunB,eAAe2F,WAAW,EAAG,EAC3C,CAAE,MAAO/rB,GACNnB,KAAKO,GAAGoJ,OAAOC,UAAUzI,EAAK,CAC3BD,QACG,4EAET,CAIHuG,YAAW,KACRgoH,EAAS/uG,MAAK,CAACE,EAAGC,IAAM7gB,KAAKqrH,4BAA4B3qG,KAAKE,EAAGC,IAAG,GACpE,IACN,CAaA,UAAA+yF,CAAW7hF,EAAI29F,EAAS3gE,GACrB,MAAMtkC,EAAQilG,GAASl5G,KAAO,KAG1Bub,GAAIA,EAAG7J,UAAUuC,GAGjBzqB,KAAK40G,SAAU50G,KAAK40G,SAAShB,WAAW7kD,EAAMtkC,GAC7C1qB,MAAM6zG,WAAW7kD,EACzB,CAEA,YAAA0f,CAAa1kE,EAAU,IACpB/J,KAAK2hB,SAAS8sD,aAAe1kE,CAChC,CAQA,kBAAA08G,CAAmB/9F,GAChB,MAAMinG,EAAQ3vH,KAAKunB,eACnBvnB,KAAKunB,eAAiBmB,EAEtB,MAAM49F,EAAgB59F,GAAIpB,WACpB8mG,EAAapuH,KAAKmqH,eAEpBiE,IAEIpuH,KAAK4vH,oBACP5vH,KAAK4vH,kBAAoB,KACtB5vH,KAAKuwF,MAAM,EAGdvwF,KAAK6vH,mBAAqB,KACvB7vH,KAAK2wF,QACL3wF,KAAK8vH,mBAAmB,EAG3B9vH,KAAK+vH,sBAAwB,KAC1B/vH,KAAK8vH,mBAAmB,GAI1BH,IAEDA,EAAMv5F,eAAe,mBAAoBp2B,KAAK4vH,mBAC9CD,EAAMv5F,eAAe,kBAAmBp2B,KAAK6vH,oBAC7CF,EAAMv5F,eAAe,WAAYp2B,KAAK+vH,wBAGrCrnG,GACGA,EAAGjB,oBAAsBiB,EAAGf,UAC7Be,EAAG6K,KAAK66F,EAAY1lG,EAAGjB,mBAAoBiB,EAAGf,WAC5Ce,EAAG6K,KAAK66F,GAGb1lG,EAAG0N,eAAe,mBAAoBp2B,KAAK4vH,mBAC3ClnG,EAAGznB,GAAG,mBAAoBjB,KAAK4vH,mBAC/BlnG,EAAG0N,eAAe,kBAAmBp2B,KAAK6vH,oBAC1CnnG,EAAGznB,GAAG,kBAAmBjB,KAAK6vH,oBAC9BnnG,EAAG0N,eAAe,WAAYp2B,KAAK+vH,uBACnCrnG,EAAGznB,GAAG,WAAYjB,KAAK+vH,uBACvB/vH,KAAKoqC,WAELpqC,KAAKgwH,uBAAwB,GACzB5B,EAAW56F,SAGd8yF,IACDtmH,KAAK+iB,KAAKyiC,aAAa+O,WAAW+xD,GAClCtmH,KAAKorH,yBAAyB72D,WAC3B+xD,EACAtmH,KAAKmqH,gBAERnqH,KAAKqrH,4BAA4B92D,WAAW+xD,GAE5CtmH,KAAKmrH,YAAY52D,WAAW+xD,GAC5BtmH,KAAKmrH,YAAYxC,mBAAmBjgG,GACpC1oB,KAAKmrH,YAAYrC,iBAAiB9oH,KAAKmqH,gBACvCnqH,KAAKmrH,YAAYvC,gBAAgB5oH,KAAK2hB,SAASikB,cAC/C5lC,KAAKmrH,YAAYtC,YAAY7oH,KAAK+iB,KAAKvf,QAGhD,CAQA,mBAAAysH,GACGzjG,GAAGxsB,KAAK8iC,IAAI2nF,mBAAmB5zD,UAC/BrqC,GAAGxsB,KAAK8iC,IAAIynF,uBAAuB1zD,UAEnC72D,KAAKuB,KAAK,oBACb,CAQA,kBAAA2uH,GACG1jG,GAAGxsB,KAAK8iC,IAAI2nF,mBAAmBjjC,SAC/Bh7D,GAAGxsB,KAAK8iC,IAAIynF,uBAAuB/iC,SAEnCxnF,KAAKuB,KAAK,YACb,CAEA,kBAAA4uH,GAGG,OAAOnwH,KAAKmqH,eAAe/vC,OAAO,aAAcp6E,KAAKgrH,iBACxD,CAOA,YAAAb,GACG,OAAO39F,GAAGxsB,KAAK8iC,IAAI8nF,UACtB,CAMA,aAAAwC,GACG,MAAMgB,EAAapuH,KAAKmqH,eAExB,IAAIiG,EAAa,CAAC,EASlB,OANAhC,EAAWvtC,YAAY9kC,IACpB,MAAM0yB,EAAe2/C,EAAWiC,gBAAgBt0E,GAErB,IAAvB0yB,EAAa/qD,QAAa0sG,EAAa3hD,EAAY,IAGnD2hD,CACV,CAMA,QAAAhmF,GACG,IAAKpqC,KAAK2hB,SAAS6sD,QAAS,OAE5B,MAAM8hD,EAAatwH,KAAKmqH,eAMlBoG,EAAe,CAAC,EACAvwH,KAAKunB,eAAeD,WAE5BgD,SAAStkB,SAAS0b,IAC7B,OAAQA,EAAEjf,KACP,IAAK,SACF8tH,EAAa7uG,EAAEO,YAAc,CAACP,EAAEO,WAAY,OAE5C,MAEH,IAAK,YACL,IAAK,UACFsuG,EAAa7uG,EAAEO,YAAc,CAC1BP,EAAEO,WACF,CAACumB,EAAMgoF,KACJ,IAAKA,EAAU,OAAO,EAEtB,IAAI1qE,EAAM,EASV,GAPA0qE,EAASxqH,SAAStE,IAGfokD,GAAkC,EAA3BpkC,EAAE7J,OAAOnW,GAAG,GAAO,EAAS,IAIjCggB,EAAEiG,WAAiC,cAApBjG,EAAEiG,UAAUllB,IAE3B,CACF,MAAM6iD,EAAgB,CAAC,EAIvB,OAFAA,EAAc5jC,EAAEiG,UAAU1F,YAAc6jC,EAEjCpkC,EAAEiG,UAAU9P,OAAOytC,EAC7B,CAPG,OAAOQ,CAOV,GAIN,MAEH,IAAK,gBACFyqE,EAAa7uG,EAAEO,YAAc,CAC1BP,EAAEO,WACF,CAACumB,EAAMgoF,KACJ,IAAKA,IAAaA,EAAS5uH,OAAQ,OAAO,EAE1C,IAAI8oB,EAAQ,EAWZ,OATA8lG,EAASxqH,SAAStE,IACf,MAAM+uH,EAAc/uH,EAAEggB,EAAE+L,gBAGpBgjG,GAAa7uH,OAAQ8oB,GAAS+lG,EAAY7uH,OAErC6uH,IAAa/lG,GAAS,EAAC,IAG5BA,CAAK,GAIlB,MAEH,QACG6lG,EAAa7uG,EAAEO,YAAc,CAC1BP,EAAEO,WACF,SAAUumB,EAAMgoF,GACb,IAAKA,IAAaA,EAAS5uH,OAAQ,OAAO,EAE1C,IAAI8oB,EAAQ,EASZ,OAPA8lG,EAASxqH,SAAStE,IACH8mC,EAAK9mC,KAGRgpB,GAAS,EAAC,IAGfA,CACV,GAIT,IAYH,IAAIgmG,GAAY1wH,KAAK2hB,SAAS6sD,SAAW,IACrC9qD,MAAM,KACN5kB,KAAK6xH,GAAMA,EAAEznF,SAEjBwnF,EAAWA,EAAS3kE,UAEpB2kE,EAAS1qH,SAAQ,CAACooB,EAASwiG,KACxB,MAAMC,EAAW7wH,KAAKO,GAAGma,UAAU61G,GAEnC,IAAIO,EAGAF,IAAWF,EAAS9uH,OAAS,EAAGkvH,EAAK1iG,GAGtC0iG,EAAMt6G,IACH,IAAIu6G,EAAUv6G,EAAI4X,GAElB,IAAK,IAAIloB,EAAI0qH,EAAS,EAAG1qH,EAAIwqH,EAAS9uH,OAAQsE,IAC3C6qH,EAAU,GAAGv6G,EAAIk6G,EAASxqH,SAAS6qH,IAGtC,OAAOA,CAAO,EAIjBL,EAAS1qH,SAASgrH,IACXA,IAAa5iG,IAASyiG,EAASG,GAAY,CAACA,GAAS,KAI/DV,EAAWlvH,KAAK6vH,MAAM,CACnBH,GAAIA,EACJhyH,IAAK+xH,GACN,GAER,CAEA,UAAAxiD,GACG,MAAM+/C,EAAapuH,KAAKmqH,eAExBiE,EAAWh0C,OAAO,UAAU,GAC5Bg0C,EAAWx3G,SACd,CAWA,uBAAM42G,CAAkB7mF,EAAUC,EAAU3Z,GACtBjtB,KAAKmqH,eACFnqH,KAAKunB,eAAeD,WAD1C,MAEM3F,EAAW3hB,KAAK2hB,SAChB8sD,EAAezuE,KAAK8a,gBAM1B,IAAI+rB,EAAY,KACZC,EAAO,EAEX,IAAK,IAAI5gC,EAAI,EAAGA,EAAIuoE,EAAa7sE,OAAQsE,IACtC,GAAIuoE,EAAavoE,GAAGjH,IAAM0nC,EAAU,CACjCE,EAAY4nC,EAAavoE,GACzBuoE,EAAal8C,OAAOrsB,EAAG,GACvB4gC,EAAO5gC,EAEP,KACH,CAIH,IAAK,IAAI6gC,EAAI,EAAGA,EAAI0nC,EAAa7sE,OAAQmlC,IACtC,GAAI0nC,EAAa1nC,GAAG9nC,IAAM2nC,EAAU,CAI7BE,GAAQC,GAAGA,IAEf0nC,EAAal8C,OAAOwU,EAAG,EAAGF,GAE1B,KACH,CAWH7mC,KAAK8a,cAAc2zD,GAEf9sD,EAAS+sD,WAAW1uE,KAAKkxH,oBAM7BlxH,KAAKuB,KACF,eACAktE,EAAa3vE,KAAKokC,GAAMA,EAAEtU,WAG7B5uB,KAAKsvH,eAuCR,CAUA,qBAAM3C,CAAgB/yD,EAAOm4B,EAAQ+6B,GAIlC,MAAMsB,EAAapuH,KAAKmqH,eAGxB,IACKvwD,EAAMizD,KAAuB,KAAhBjzD,EAAMvoD,OACN,KAAduoD,EAAMizD,KAA8B,KAAhBjzD,EAAMvoD,MAI3B,OAFA+8G,GAAYv3G,kBAEL,EAGV,MAAMyvG,EAAgBtmH,KAAKunB,eAAeD,WAE1C,GAAIyqE,EAAOrgF,OACR,OAAQqgF,EAAOrgF,OAAOqgF,QACnB,IAAK,SACFn4B,EAAMvoD,MAAQotC,WAAWmb,EAAMvoD,OAE/B,MAEH,IAAK,WACFuoD,EAAMvoD,MAAQuoD,EAAMvoD,MAAMgI,UAEtBugD,GAASA,EAAMizD,KAAOjzD,EAAMizD,IAAIxzG,UACjCugD,EAAMizD,IAAMjzD,EAAMizD,IAAIxzG,WAUlC,IAAI0lE,EAASnlB,EAAMvoD,MACf0tE,IACDA,EAASA,EAAOunC,EAAcr6G,OAAS8yE,GAE1C,IAAImN,EAAStyB,EAAMizD,IASnB,GARI3gC,IACDA,EAASA,EAAOo6B,EAAcr6G,OAASigF,GAOtCnN,GAAUmN,EAAQ,CACnB,MAAM9iE,EAAOglG,GAAY5lG,QAAQupE,EAAOv7E,KAExC4S,EAAK2oE,EAAO/Q,QAAUpnB,EAAMvoD,MAE5B+8G,EAAW+C,cAAc/nG,EAAKnqB,GAAI8yF,EAAO/Q,OAAQ,iBACjDotC,EAAW+C,cAAc/nG,EAAKnqB,GAAI8yF,EAAO/Q,OAAQ,sBAGjD,MAAMt/D,EAAI4kG,EAAc1+F,UAAUmqE,EAAOrgF,QAAQkd,SACjD,GACGlN,GAAGC,SAASyvG,WACZx3D,EAAMvoD,MAAMzP,OAAS8f,EAAEC,SAASyvG,UAahC,OAXApxH,KAAKO,GAAG8C,MAAM,CACXC,MAAOtD,KAAKwD,MAAM,oBAClBC,KAAMzD,KAAKwD,MACR,8BACGke,EAAEC,SAASyvG,UACX,iBAGThD,EAAWz3G,WAAWyS,EAAKnqB,GAAI8yF,EAAO/Q,OAAQ,sBAC9CotC,EAAWx3G,QAAQm7E,EAAOv7E,KAC1B43G,EAAWv3G,kBACJ,EAGV,MAAMf,EAAYwwG,EAAcj6F,YAAYjD,GAE5C,GAAItT,EAAUzB,OAAQ,CAQnB,MAAM4hG,EAAKj2G,KAAKO,GAEhB,UACS+lH,EAAcj6G,QAAQ+yE,OAAOh2D,EAAKnqB,GAAImqB,GAExCglG,EAAWxlG,OAAOmpE,EAAOv7E,OAC1B43G,EAAWxgG,WAAWmkE,EAAOv7E,IAAK4S,GAClCglG,EAAWv3G,iBACXu3G,EAAWx3G,QAAQm7E,EAAOv7E,KAEhC,CAAE,MAAOrV,GACN80G,EAAGtsG,OAAOC,UAAUzI,EAAK,CACtBD,QAAS,kDACTkoB,OACA2oE,SACAn4B,QACA90C,OAAQwhG,EAAc1+G,UAGzBwmH,EAAWv3G,iBAGRo/F,EAAGphG,WAAWK,sBACX/T,EACA4wF,EAAOv7E,IACP43G,EAST,CA8BH,MAAOt4G,EAAUf,WAAWg9E,EAAOv7E,IAAK43G,EAC3C,MAAOA,GAAYv3G,iBAEnB,OAAO,CA4BV,CASA,aAAA21G,CAAcprH,GAMXpB,KAAKmqH,gBAAgBkH,SAASjwH,EAAKoV,IAAKpV,EAAK4/E,OAChD,CAWA,oBAAMisC,CAAehrG,EAAYk+D,EAAUwC,EAAUuqC,GAGlD,IAAIoE,GAAiB,EAErB,MAAMrb,EAAKj2G,KAAKO,GAEZ4/E,EAAW,KACZA,EAAW,GACXmxC,GAAiB,EAEjBrb,EAAGhlG,MAAMvN,QAAQ,CACdqF,KAAM,OACNtF,KAAMzD,KAAKwD,MAAM,8BAA+B,CAAC,KACjDgB,OAAQ,OAId,MAAMsW,EAAgB9a,KAAK8a,gBAE3B,GAAIA,EAAe,CAChB,MAAMkC,EAASlC,EAAcgO,MAAM1H,GAAMA,EAAEniB,IAAMgjB,IAE7CjF,IACDA,EAAOukC,MAAQ4+B,SAERnjE,EAAOyjE,OAEpB,CAEAzgF,KAAK8a,cAAcA,GAEf9a,KAAK2hB,SAAS+sD,iBACT1uE,KAAKkxH,oBAaVI,GAAgBtxH,KAAKsvH,gBAEzBtvH,KAAKmwH,qBAMLnwH,KAAKuB,KAAK,gBAAiB0gB,EAAYk+D,EAAUwC,EACpD,CAMA,aAAA8qC,CAAcxuH,EAAII,EAAGyhF,GAClB,IAAkD,IAA9C9gF,KAAKsrH,iBAAiB9jH,QAAQvI,EAAG+hF,QAAgB,OAAO,EAK5D,MAAMuwC,EAAYvxH,KAAKunB,eAAeD,WAAWgD,QAC7C5I,GAAMA,EAAEO,aAAehjB,EAAG+hF,SAC5B,GAQF,OAFAhhF,KAAKuB,KAAK,wBAAyBu/E,EAAMywC,IAElC,CACV,CAMA,MAAAvwB,GACGjhG,MAAMihG,SAGNhhG,KAAKmqH,gBAAgB1pC,SAErB,MAAM1uD,EAAK/xB,KAAKunB,eAEZwK,GACD,CAAC,eAAgB,cAAe,gBAAgB/rB,SAASvD,IACtDzC,KAAK+vB,SAAS,CACXC,QAAS+B,EACT9B,UAAWxtB,EACXytB,SAAUlwB,KAAK6qH,eAAet3F,KAAKvzB,OACpC,GAEX,CAMA,KAAA2wF,GACG,MAAMjoE,EAAK1oB,KAAKunB,eAEbvnB,KAAKwxH,eACL9oG,GAAIX,YAAcW,GAAIxC,eAAe4B,aAIxC9nB,KAAKmqH,gBAAgBlvC,gBACxB,CAUA,aAAAq0C,CAAcmC,EAAczxH,KAAKyxH,aAG9B,MAAMnL,EAAgBtmH,KAAKunB,eAAeD,WAE1C,IAAKg/F,EAAe,OAEpB,MAAMxjF,EAAM9iC,KAAK8iC,IACXsrF,EAAa5hG,GAAGsW,EAAI8nF,WAE1B,IAAKwD,EAAY,OAEjB,MAAMnlD,EAAcmlD,EAAW18G,OAAOu3D,YAEtCmlD,EAAWh0C,OAAO,YAAa,GAC/Bg0C,EAAWh0C,OAAO,aAAc,GAEhC,IAAIs0C,EAAY,EAEhBpI,EAAcp/E,cAAclhC,SAAS4hE,IAClC,MAAMjmD,EAAWimD,EAAMiqB,cAEnBlwE,EAAS0kC,WAAa1kC,EAAS2kC,YAAcooE,IAC9CA,EAAY/sG,EAAS2kC,YAAW,IAGlCooE,GAAWN,EAAWh0C,OAAO,YAAas0C,GAI9C,MAAM/sG,EAAW3hB,KAAK2hB,SAEtB,IAAI+rC,EAAW/rC,EAAS+rD,WAEpB0gD,EAAW18G,OAAOu3D,YAAc,IAAGvb,GAAW,GAIlD,MAAMgkE,EAAmBpL,EAAclmC,eACpC,EACA1yB,EAEA,GACA,GACA,IAGH,IAAI0yB,EAAgBpgF,KAAK8a,gBAEzB,MAAMm7F,EAAKj2G,KAAKO,GAGX6/E,IAAiBqxC,IACnBrxC,EAAgB61B,EAAGv7F,UAAU1a,KAAK2hB,SAAS8sD,eAGzC2R,GAA0C,IAAzBA,EAAcx+E,SACjCw+E,EAAgBsxC,GAKnB,MAAMC,EAAqBD,EAAiB5yH,KAAKsiB,GAAMA,EAAEwN,UAEzDwxD,EAAgBA,EAAcz9E,QAC1BugC,GAAMyuF,EAAmBnqH,QAAQ07B,EAAEtU,UAAY,IAInDwxD,EAAcp6E,SAASk9B,IAGpB,MAAM0uF,EAAUF,EAAiB5oG,MAAM1H,GAAMA,EAAEwN,UAAYsU,EAAEtU,UAO7DnvB,OAAOD,KAAKoyH,GAAS5rH,SAASiB,IACD,mBAAf2qH,EAAQ3qH,IAA2B,YAANA,IACrCi8B,EAAEj8B,GAAK2qH,EAAQ3qH,GAClB,IAGH,MAAMya,EAAI4kG,EAAc1+F,UAAUsb,EAAEtU,SAE/BlN,IAGDC,EAASikB,aAAap+B,QAAQka,EAAEO,aAAe,IAChDihB,EAAEujD,QAAS,GAIV9kE,EAASosD,eAAevmE,QAAQka,EAAEziB,KAAO,EAC7B,aAATyiB,EAAEjf,KAA+B,WAATif,EAAEjf,IAC3BygC,EAAEw9C,OAAS,CAAEr+C,QAAS,cAAe1T,MAAOjN,GAC1CwhB,EAAEw9C,OAAS,CAAEr+C,QAAS,cAGrB1gB,EAASqsD,aAAaxmE,QAAQka,EAAEziB,KAAO,IAC7CikC,EAAEw9C,OAAS,CAAEr+C,QAAS,gBAAe,IAG3C,IAAIvnB,EAAgB9a,KAAK8a,gBAEpBA,IAAiB22G,IACnBzxH,KAAK8a,cAAcslE,GAEnBtlE,EAAgBslE,GAGnBA,EAAgB61B,EAAGv7F,UAAUI,GAE7B,MAAM+2G,EAAmB,GACnBC,EAAW,GA0EjB,GAxEA1xC,EAAcp6E,SAAS0oF,IAKpB,GAJAA,EAAIkkB,WAAY,EAIZlkB,EAAIlO,kBAC8B,iBAAxBkO,EAAIlO,kBACZkO,EAAIlO,gBAAkB75E,KAAKiE,MAAM8jF,EAAIlO,kBAGpCkO,EAAIlO,gBAAgB5+E,QAAQ,CAC7B,MAAMmwH,EAAe,GAGrBrjC,EAAIlO,gBAAgBx6E,SAASgmB,IAC1B,MAAMslE,EAAS2kB,EAAGjiF,iBACf06D,EAAIzvF,IAGP8yH,EAAa3qH,KAAKkqF,EAAO1xB,IAEzBiyD,EAAiBzqH,KAAK,CACnBzE,OAAQ2uF,EACRvuE,KAAMuuE,EAAOxuD,IAAIujD,aACjBpkE,WAAYysE,EAAIzvF,GAChBuhF,gBAAiBx0D,EAAKpS,MACtBi/D,eAAgB7sD,EAAK6sD,gBACtB,IAIL,MAAMm5C,EACHlvF,EAAIlpB,MAAQ,IAAM80E,EAAIzvF,GAGzB6yH,EAAS1qH,KAAK4qH,GAEd/b,EAAGhlG,MAAM2uD,GAAG,CACT78C,KAAM,QACNgK,IAAK,iBACL9tB,GAAI+yH,EACJlkH,KAAM,CACHy4E,KAAMwrC,IAGf,CAIH,GACGpwG,EAAS6sD,UACR7sD,EAAS6sD,SAAW,IAAIhnE,QAAQknF,EAAIzvF,KAAO,EAC7C,CACC,MAAMgzH,EAAa3L,EAAc1+F,UAAU8mE,EAAI9/D,SAE3CqjG,IACDvjC,EAAInf,SAAW,CAAC7jE,EAAKskC,KAElB,GAAItkC,EAAIsmF,OAAQ,CACb,MAAM/nE,EAAUgsF,EAAGv7F,UAAUhP,GAI7B,OAFAue,EAAQgoG,EAAWhwG,YAAcgI,EAAQ5Y,MAGtC2+B,EAAOkiF,UAAUxmH,EAAKskC,GACtBiiF,EAAWp6G,OAAOoS,EAExB,CAAO,OAAOgoG,EAAWp6G,OAAOnM,EAAI,EAE7C,KAGCmmH,EAAiBjwH,OAAQ,CAE1B,MAAMuwH,EAAqB,GAE3BN,EAAiB7rH,SAAS0b,IAGvBA,EAAE/e,OAAOsxB,WAAWqyF,EAAch8F,UAElC5I,EAAE/e,OAAOuxB,SAASxS,EAAE8+D,iBAGf96E,MAAMC,QAAQwsH,EAAmBzwG,EAAEO,eACrCkwG,EAAmBzwG,EAAEO,YAAc,IAGtCkwG,EAAmBzwG,EAAEO,YAAY7a,KAAK,CACnC4uB,QAAStU,EAAE/e,OAAO+4C,WAClBn2C,OAAQ6oH,EAAWgE,gBAAgB1wG,EAAEO,YACrC42D,eAAgBn3D,EAAEm3D,gBACnB,IAGL,MAAMj/D,EAAQ,CAAC,EAGfw0G,EAAWvkC,MAAMsoC,mBAAqBA,EAEtC1yH,OAAOD,KAAK2yH,GAAoBnsH,SAASvD,IACtCmX,EAAMnX,GAAO,CAAC4O,EAAOjQ,KAElB,IAAI0W,GAAU,EACV+gE,EAAiB,GAyCrB,OAvCAu1C,EAAWvkC,MAAMsoC,mBAAmB1vH,GAAKuD,SAASrD,IAE/C,MAAMqrB,EAAU,CAAC,GAEhBs4F,EAAch8F,UAAY,IAAItkB,SAAS2oB,IACrCX,EAAQW,EAAM1vB,IAAMmC,EAAKutB,EAAM1M,WAAW,IAIzC7gB,EAAKO,OACNqsB,EAAqB,YAAI5sB,EAAKO,KAC9BP,EAAkB,YAAIA,EAAKO,MAK9B,MAAM4vF,EAAgB0kB,EAAGjiF,iBACtB,iBAAiBvxB,KAEpB8uF,EAAct9D,WACXqyF,EAAch8F,SACdg8F,GAEe/0B,EAAcz5E,QAAQ1W,EAAMuB,EAAOqzB,WAIlDle,GAAU,EACV+gE,EAAiBl2E,EAAOk2E,eAC3B,IAIE/gE,GACFm+F,EAAGhlG,MAAMvN,QAAQ,CACdqF,KAAM,QACNtF,KAAMo1E,IAGL/gE,CAAO,CAChB,IAGJs2G,EAAWh0C,OAAO,QAASxgE,GAE3Bw0G,EAAW18G,OAAOogH,SAAWA,EAC7B1D,EAAWx3G,SACd,MAEOw3G,EAAW18G,OAAOogH,UACnB1D,EAAW18G,OAAOogH,SAAS9rH,SAASogF,IAC7B55D,GAAG45D,IAAQ55D,GAAG45D,GAAOisC,YAAY,IAG3CjE,EAAWh0C,OAAO,QAAS,CAAC,GAC5Bg0C,EAAWx3G,UAGd,MAAM07G,EAAe,GAKjB3wG,EAAS2sD,eAEV8R,EAAc7uD,QAAQ,CACnBtyB,GAAI,yBACJ+d,OAAQ,QACR41F,WAAW,EACXrjC,SAAW7jE,GAAQ46G,EAAcv9E,YAAYr9B,KAGhD4mH,EAAalrH,KAAK,2BAGjBua,EAASgsD,YAA8B,IAAhB1E,GACxBmX,EAAc7uD,QAAQ,CACnBtyB,GAAI,yBACJ+d,OAAQ,CAAEqlB,QAAS,iBAAkBkwF,UAAW,OAChDhxE,MAAO,GACPguB,SAAU,sDACVxiD,IAAK,CAAE,aAAc,YAExB/sB,KAAK+qH,gBAAkB,EACvBuH,EAAalrH,KAAK,2BACdpH,KAAK+qH,gBAAkB,EAED,KAAzBppG,EAASqjD,aAAuBrjD,EAAS4sD,cAC1C6R,EAAch5E,KAAK,CAChBnI,GAAI,yBACJ+d,OAAQ,GACRukC,MAAO,GACPguB,SAAU,CAAC7jE,EAAKskC,IACb,4EACHjjB,IAAK,CAAE,aAAc,YAGxBulG,EAAalrH,KAAK,2BAGM,IAAvBua,EAASmsD,WAAmC,IAAhB7E,IAC7BmX,EAAch5E,KAAK,CAChBnI,GAAI,wBACJ+d,OAAQ,GACRukC,MAAO,GACPguB,SACG,qEACHxiD,IAAK,CAAE,aAAc,SAAU+oF,OAAQ,aAG1Cwc,EAAalrH,KAAK,0BAII,KAAtBua,EAASujD,UACRvjD,EAAS4sD,aACM,IAAhBtF,IAEAmX,EAAch5E,KAAK,CAChBnI,GAAI,uBACJ+d,OAAQ,GACRukC,MAAO,GACPguB,SAAU,8CACVxiD,IAAK,CAAE,aAAc,YAGxBulG,EAAalrH,KAAK,yBAGjBua,EAASisD,aAA+B,IAAhB3E,IACzBmX,EAAch5E,KAAK,CAChBnI,GAAI,mBACJ+d,OAAQ,GACRukC,MAAO,GACPguB,SAAU,gDACVxiD,IAAK,CAAE,aAAc,YAGxBulG,EAAalrH,KAAK,qBAIrB,IAAIorH,EAAU,KAEd,IAAK,IAAItsH,EAAIk6E,EAAcx+E,OAAS,EAAGsE,GAAK,EAAGA,IAAK,CACjD,MAAMwoF,EAAMtO,EAAcl6E,GAC1B,IAAKwoF,EAAIjI,SAA4C,IAAlC6rC,EAAa9qH,QAAQknF,EAAIzvF,IAAY,CACrDuzH,EAAU9jC,EACV,KACH,CACH,CAEI8jC,IACDA,EAAQ5f,WAAY,EACpB4f,EAAQ/9C,SAAW+9C,EAAQjxE,MAC3BixE,EAAQjxE,MAAQ,KAGnB6sE,EAAWqE,eAAeryC,GAG1BpgF,KAAKgrH,iBAAmBsH,EAAa1wH,OAGjC0wH,EAAa9qH,QAAQ,2BAA6B,IACnDxH,KAAKgrH,kBAAoB,GAExBhrH,KAAKgrH,iBAAmB,IAAGhrH,KAAKgrH,iBAAmB,GAGvD,MAAMrlF,EAAiBhkB,EAASgkB,eAEV,IAAlBA,EACDyoF,EAAWh0C,OACR,YACAg0C,EAAWzC,eAAehmF,GAAkB,GAE7CyoF,EAAWh0C,OAAO,YAAap6E,KAAK+qH,iBAEzC/qH,KAAKmwH,qBACL/B,EAAWqE,gBAEd,CAOA,uBAAMvB,GACH,MAAMjb,EAAKj2G,KAAKO,GACVmyH,QACIzc,EAAGlmG,QAAQnH,IAAI5I,KAAK0rH,qBAAwB,CAAC,EACjDF,EAAgBxrH,KAAKwrH,cAE3BkH,EAAmB1yH,KAAK2yH,cAAgBnH,EAAcxrH,KAAK2yH,cACtDnH,EAAcxrH,KAAK2yH,cACnB,GAEL,IAAK,MAAMvpG,KAAQspG,EAChBA,EAAmBtpG,GAAMpjB,SAASojB,IAE3BA,GAAMs3D,QAAQ/xD,cAAcvF,EAAKs3D,OAAO/xD,KAAK,UAIjDsnF,EAAGlmG,QAAQE,IAAIjQ,KAAK0rH,mBAAoBgH,EACjD,CAYA,aAAA53G,CAAczJ,EAAQ,MACnB,MAAMm6G,EAAgBxrH,KAAKwrH,cAE3B,IAAIn6G,EACC,OAAOm6G,EAAcxrH,KAAK2yH,cADpBnH,EAAcxrH,KAAK2yH,cAAgBthH,CAEjD,CASA,SAAAy5G,CAAU7gG,GACP,IAAIhrB,EAAKgrB,GAAShrB,IAAMgrB,EACpBjqB,KAAK4yH,sBACNvxH,QAAQmJ,IAAI,yBAA0BvL,GACtC4H,aAAa7G,KAAK4yH,sBAErB5yH,KAAK4yH,oBAAsBnrH,YAAW,KACnC,MAAM2mH,EAAapuH,KAAKmqH,eACnBiE,IAEAnvH,EACImvH,EAAWxlG,OAAO3pB,IACxBmvH,EAAW5d,OAAOvxG,GAAI,GACtBmvH,EAAW/H,SAASpnH,IAChBmvH,EAAW5d,OAAO,MAAM,GAJtB4d,EAAWyE,WAMpB7yH,KAAK4yH,oBAAsB,KAAI,GAC/B,GACN,CAQA,UAAAD,GACG,MAAMrM,EAAgBtmH,KAAKunB,eAAeD,WAE1C,MAAO,GAAGtnB,KAAKf,MAAMqnH,EAAgBA,EAAcrnH,GAAK,KAC3D,CASA,SAAA8vH,CAAU+D,EAAWC,GAElB,MAAMC,EACHD,EAAGE,mBAAmBrpC,UAAU,CAAE3qF,GAAI6zH,KAAgBtmG,GAAGsmG,GAE5D,IAAKE,EAAK,OAGV,MAAME,EAASF,EAAItmG,gBAAgBA,gBAEnC,IAAKwmG,EAAQ,OAGTA,EAAOh/F,UAAUg/F,EAAOh/F,SAAS4+F,GAGrC,MAAMK,EAAUD,EAAOtpC,UAAU,CAAE7mE,KAAM,cAAgB,UAGrDowG,GAASnzH,KAAK+uH,UAAUoE,EAASJ,EACxC,CAEA,kBAAArG,GACG,MAAM0B,EAAapuH,KAAKmqH,eAExB,IAAIiJ,EAAe,EAEnBhF,EAAWhtH,KAAK20F,MAAMrqF,SAED,IAARA,GACPjM,OAAOyK,UAAU21E,eAAe11E,KAC7BuB,EACA,2BAE4B,IAA/BA,EAAIw9G,wBAEJkK,GAAc,IAGhBA,EAAe,EAAGpzH,KAAKkwH,qBACtBlwH,KAAKiwH,qBACb,CAEA,qBAAApC,CAAsBhkC,GACnB,MAAMukC,EAAapuH,KAAKmqH,eAClB7D,EAAgBtmH,KAAKunB,eAAeD,WACpC+rG,EAAc,GAEpBjF,EAAWhtH,KAAK20F,MAAMv/E,SAED,IAARA,GAEP/W,OAAOyK,UAAU21E,eAAe11E,KAC7BqM,EACA,2BAE4B,IAA/BA,EAAI0yG,wBAGJmK,EAAYjsH,MAAK,IAAMk/G,EAAcj6G,QAAQqC,OAAO8H,EAAIvX,KAC3D,IAGH,MAAMk3G,EAAUn2G,KAAKO,GAAG0Q,MAEpBoiH,EAAYzxH,OAAS,EACtBu0G,EAAQnyG,QAAQ,CACbV,MAAOtD,KAAKwD,MAAM,2BAClBC,KAAMzD,KAAKwD,MACR,yDAEHS,SAAUwuB,MAAOvuB,IACVA,UAEK1C,QAAQsY,IAAIu5G,EAAYv0H,KAAK+gC,GAAMA,OAGzC7/B,KAAKiwH,sBACR,IAIN9Z,EAAQ9yG,MAAM,CACXC,MAAOtD,KAAKwD,MAAM,uBAClBC,KAAMzD,KAAKwD,MACR,8EAGZ,CAEA,aAAA+3G,CAAc1xB,GACX7pF,KAAK+iB,KAAKyiC,aAAamxD,UAAU9sB,EACpC,CAEA,WAAAikC,CAAYjkC,GACT7pF,KAAKqrH,4BAA4BxgC,KAAKhB,EACzC,CAEA,aAAAkkC,CAAclkC,GACX7pF,KAAKmrH,YAAYtgC,KAAKhB,EACzB,CAEA,iBAAA+jC,CAAkB/jC,GACf7pF,KAAKorH,yBAAyBvgC,KAAKhB,EACtC,CAOA,OAAAypC,CAAQ5nH,EAAKskC,GACV,MAAMs2E,EAAgBtmH,KAAKunB,eAAeD,WACpCisG,EAAqBjN,EAAcp/E,cAAcpoC,KACnD4iB,GAAMA,EAAEO,aAGZ,IAAIuxG,EAAM,GAEV,MAAMvxG,EAAa+tB,EAAOgxC,OAAO/hF,GAAG2G,QAAQ,IAAK,IAEjD,GAAIF,MAAMC,QAAQ+F,EAAIuW,IACnBvW,EAAIuW,GAAYjc,SAAQ,SAAU5G,GAC3BA,EAAEqE,OAAM+vH,GAAOp0H,EAAEqE,KAAO,QAC/B,SACI,QACsC,IAAnCiI,EAAIuW,EAAa,eACG,iBAApBvW,EAAIuW,GAEXuxG,EAAM9nH,EAAIuW,EAAa,cAAcxe,UACnC,QAA8C,IAAnCiI,EAAIuW,EAAa,cAA+B,CAC7D,IAAIwxG,EAAe/nH,EAAIuW,EAAa,cAE/Bvc,MAAMC,QAAQ8tH,KAAeA,EAAe,CAACA,KAEjDA,GAAgB,IAAIztH,SAAQ,SAAU5G,GAChCA,IAAGo0H,GAAOp0H,EAAEqE,KAAO,QAC1B,GACH,MAAO,IAAgD,IAA5C8vH,EAAmB/rH,QAAQya,GAAoB,CACvD,IAAKvW,EAAIuW,GACN,MAAO,GAGPuxG,EAAM,gEAAgE9nH,EAAIuW,QAEhF,KAAoC,SAAzB+tB,EAAOgxC,OAAO+Q,OACtByhC,EAAMxjF,EAAOgxC,OAAOnpE,OAAOnM,EAAIuW,IACA,eAAzB+tB,EAAOgxC,OAAO+Q,OACpBu0B,EAAch8F,SAAStkB,SAAS0b,IACzBA,EAAEO,aAAeA,GACdP,EAAEC,SAASpZ,SACZmZ,EAAEC,SAASpZ,QAAQvC,SAAS5G,IACrBA,EAAEH,KAAOyM,EAAIuW,KACduxG,EAAMp0H,EAAEqE,KACX,GAGT,IAED+vH,EAAM9nH,EAAIuW,GAEf,OAAKuxG,GAAY,EAEpB,CAOA,qBAAAE,CAAsB5yC,GAEnBA,EAAKgJ,MAAM6pC,WAAa,QAC3B,CAOA,oBAAAC,CAAqB9yC,GAEgB,QAA9BA,EAAK+yC,YAAYC,SAClBrsH,YAAW,KACR,MAAMssH,EAAY9zG,SAAS6gE,EAAKgJ,MAAMgyB,IAAIl2G,QAAQ,KAAM,KAAO,IACzDouH,EAAW/zG,SAAS6gE,EAAKgJ,MAAMi+B,KAAKniH,QAAQ,KAAM,KAAO,IAE/D,GAAImuH,EAAYvlH,OAAOylH,YAAa,CACjC,MAAMC,EAAaH,EAAYvlH,OAAOylH,YAChCE,EACHl0G,SAAS6gE,EAAKgJ,MAAMgyB,IAAIl2G,QAAQ,KAAM,KAAOsuH,EAChDpzC,EAAKgJ,MAAMgyB,IAAMqY,EAAS,IAC7B,CAEA,GAAIH,EAAWxlH,OAAOwF,WAAY,CAC/B,MAAMogH,EAAaJ,EAAWxlH,OAAOwF,WAC/BqgH,EACHp0G,SAAS6gE,EAAKgJ,MAAMi+B,KAAKniH,QAAQ,KAAM,KAAOwuH,EACjDtzC,EAAKgJ,MAAMi+B,KAAOsM,EAAU,IAC/B,CAEAvzC,EAAKgJ,MAAM6pC,WAAa,SAAS,GACjC,KACC7yC,EAAKgJ,MAAM6pC,WAAa,SAClC,CAEA,iBAAInC,GACD,MAAM9oG,EAAK1oB,KAAKunB,eACV++F,EAAgB59F,GAAIpB,WACpB8mG,EAAapuH,KAAKmqH,eAExB,MACgC,cAA7BiE,GAAY18G,QAAQqR,OAAyBujG,GAAe3mG,OAElE,CAEA,iBAAAmwG,GACG,IAAK9vH,KAAKwxH,cAAe,OAEzBxxH,KAAKuwF,OAEL,MAAM7nE,EAAK1oB,KAAKunB,eACV6mG,EAAapuH,KAAKmqH,eAExBiE,EAAW58G,WACX48G,EAAWxjH,MAAM8d,EAAGwK,WAAa,IAEjClzB,KAAKoqC,WACLpqC,KAAK2wF,OACR,iBCp2EH,MAAM2jC,EAAiB,EAAQ,OAGzB3c,EACH,WAEY,MAAM4c,UAAmBD,EAoBrC,UAAAz0G,CAAWta,GACRxF,MAAM8f,WAAWta,GAGjBvF,KAAKwlD,aAAa4P,aAAap1D,KAAK2hB,SAASssD,WAChD,CAEA,mBAAAumD,CAAoB1xF,EAAK0rC,GACtB,IAAIimD,EAAWjmD,GAAW,GACH,iBAAZimD,IACRA,EAAWA,EAAS/wG,MAAM,MAG7B,IAAInb,EAAUikB,GAAGsW,EAAI0rC,SAASqf,UAAUzsF,KAAK0nB,KAAK,CAAC,GAEnD0D,GAAGsW,EAAI4xF,aAAaljH,WACpBijH,EAASzuH,SAASooB,IACf,IAAIkmB,EAAM/rC,EAAQ5F,QAAQvD,GAAMA,EAAEH,IAAMmvB,IAAS,GAC7CkmB,GACD9nB,GAAGsW,EAAI4xF,aAAah8G,IAAI47B,EAC3B,GAEN,CAOA,SAAAkB,GACG,OAAO,IAAIo0E,EAAoB5pH,KAClC,CAEA,gBAAIwlD,GAQD,OAP2B,MAAvBxlD,KAAKw3G,iBACNx3G,KAAKw3G,eAAiB,IAAI,EAAA5hG,EACvB5V,KAAKO,GACL,GAAGP,KAAKf,oBAIPe,KAAKw3G,cACf,CAEA,kBAAI3C,GAID,OAH6B,MAAzB70G,KAAK03G,mBACN13G,KAAK03G,iBAAmB,IAAIC,GAExB33G,KAAK03G,gBACf,CAEA,YAAAtgC,GACGr3E,MAAMq3E,eACN,IAAIu9C,EAAS30H,KAAKwvD,eAClBxvD,KAAKwvD,gBAAiB,EACtB,IAAI5iC,EAAK5sB,KAAKunB,eACdvnB,KAAKwvD,eAAiBmlE,EACjB/nG,GACF5sB,KAAKs3E,gBACF,qCAAqCt3E,KAAK2hB,SAASovC,cAG5D,+DC/ECjkC,EAAI,KAEO,MAAM8nG,UAAiD,IACnE,WAAA90H,CAAYq8B,GAGTp8B,MAAM,CACHy1C,UAAW,GAHdrZ,EAASA,GAAU,wCAIhBoT,KAAM,GAAGpT,mBACTxnB,KAAM,GAAGwnB,qBAGZn8B,KAAKsmH,cAAgB,KAIrBtmH,KAAK60H,gBAAiB,EAItB70H,KAAK+wC,UAAY,KAIZjkB,IACFA,EAAI,IAAIjkB,KACG7I,KAAKO,IAAMA,IAAIgD,aAAaC,SAASqF,GAGtD,CAEA,MAAAisH,GACG,MAAMzZ,EAASr7G,KAAK8iC,IAAI0S,UACxB,MAAO,CACJzyB,KAAM,OACN9jB,GAAIe,KAAK8iC,IAAInuB,KACb6xE,YAAY,EACZpwE,SAAU,CACP,CACG2M,KAAM,SACNha,KAAM,OACNgkB,IAAK,gBACL1b,MAAOyb,EAAE,gBACT7rB,GAAI,CACDyxG,YAAa,KACV1yG,KAAK+0H,kBACL/0H,KAAKg1H,iBAAiB,EAEzBrrC,cAAe,WACZ3pF,KAAKw7G,eAAevlB,aACjB,UACA,GAAGolB,oBAET,KAKf,CAEA,EAAAz7C,GACG,MAAO,CACJ78C,KAAM,QACN9jB,GAAIe,KAAK8iC,IAAI0S,UAEb+L,MAAO,IACPzzC,KAAM9N,KAAK80H,SACX7zH,GAAI,CACD+/F,OAAQ,KACLhhG,KAAKghG,QAAQ,GAIzB,CAGA,UAAM1gG,CAAKC,GACJA,IACDP,KAAKO,GAAKA,IAGZP,KAAKO,GAAG0Q,OAAS7N,OAAOw8D,GAAG5/D,KAAK4/D,KACpC,CAYA,eAAAm1D,CAAgBpiF,EAASsiF,GACtB,IAAI9lC,EAAOnvF,KACPk1H,EAAY1oG,GAAGxsB,KAAK8iC,IAAInuB,MAExBwgH,EAAYD,EAAU1qC,gBAAgB5oF,OAAS,EAC/CwzH,EAAap1H,KAAK8rF,cAAa,GA4CnC,GA3CAopC,EAAUroG,QACP,CACG5tB,GAAI,QAAQk2H,EAAY,IACxBlpC,KAAM,CACH,CACGlpE,KAAM,QACNw+B,MAAO,IACPh5C,QAAS6sH,EACTn0H,GAAI,CACDowC,SAAU,SAAU0K,GAEjBozC,EAAKkmC,cAAct5E,EADV/7C,KAEZ,IAGNA,KAAKs1H,gBACL,CACGvyG,KAAM,SACNgK,IAAK,eACLhP,KAAM,cACNhV,KAAM,OACNw4C,MAAO,GACPtgD,GAAI,CACDyxG,YAAa,WACVwiB,EAAU/nG,WAAWntB,KAAK0sB,iBAC1ByiE,EAAKomC,kBAAiB,GACtBpmC,EAAK6lC,iBACR,MAKZG,GAICxiF,GACiBuiF,EACd1qC,gBACA2qC,GAAW3qC,gBAAgB,GACnBt2D,SAASye,GAGpBsiF,EAAK,CACN,IAAIO,EAAUN,EAAU1qC,gBAAgB2qC,GAAW3qC,gBAAgB,GACnEgrC,EAAQthG,WAAW+gG,GAGnBO,EAAQ90G,QAAO,CAACE,EAAGC,KACRo0G,GAAO,IAAIztH,QAAQoZ,EAAE3hB,IAAM2hB,IAC/Bq0G,GAAO,IAAIztH,QAAQqZ,EAAE5hB,IAAM4hB,GAC1B,GACC,GAEZ,CACH,CAWA,YAAAirE,CAAa+D,GACV,IAAIqlC,EAAY1oG,GAAGxsB,KAAK8iC,IAAInuB,MACzBygH,EAAa,GAEZx3F,EAAY59B,KAAKsmH,cAAch8F,SACnC,IAAKsT,IAAcA,EAAUh8B,OAAQ,OAAOwzH,EAa5C,GAVAx3F,EAAU53B,SAAS0b,IACZA,EAAEo/B,mBACHs0E,EAAWhuH,KAAK,CACbnI,GAAIyiB,EAAEziB,GACNoS,MAAOqQ,EAAEle,OAEf,IAICqsF,EAAiB,CAClB,IAAIQ,EAAa6kC,EAAU1qC,gBACvB6F,EAAWzuF,OAAS,GAErByuF,EAAWrqF,SAAQ,SAAUyvH,EAAO9oG,GACjC,GAAI0jE,EAAWzuF,OAAS,GAAK+qB,EAAO,OAAO,EAE3C,IAAI+oG,EAAgBD,EAAMjrC,gBAAgB,GAAG9uC,WACzCg6E,IACDN,EAAaA,EAAWzyH,QAAQ+e,GAAMA,EAAEziB,IAAMy2H,IAEpD,GAEN,CACA,OAAON,CACV,CAOA,UAAA7gE,CAAWzvC,GACR9kB,KAAKsmH,cAAgBxhG,CACxB,CAcA,WAAAi3F,CAAYp6F,GACT3hB,KAAK+wC,UAAY/wC,KAAKO,GAAGma,UAAUiH,EACtC,CAaA,WAAAkwE,GACG,IAAIqjC,EAAY1oG,GAAGxsB,KAAK8iC,IAAInuB,MACzB2Q,EAAa,GAEZ+qE,EAAa6kC,EAAU1qC,gBAkB3B,OAjBI6F,EAAWzuF,OAAS,GAErByuF,EAAWrqF,SAAQ,SAAUyvH,EAAO9oG,GACjC,GAAI0jE,EAAWzuF,OAAS,GAAK+qB,EAAO,OAAO,EAE3C,IAAIgmB,EAAU8iF,EAAMjrC,gBAAgB,GAAG9uC,WACvC,MAAM85E,EAAUC,EAAMjrC,gBAAgB,GACtC,IAAIyqC,EACDO,GAAS95E,cACT85E,GAASp0H,MAAMu0H,cAAc72H,KAAKw1C,GAAQA,EAAIr1C,MAC9C,GACHqmB,EAAWle,KAAK,CACb3E,IAAKkwC,EACLsiF,IAAKA,GAEX,IAEI3vG,CACV,CAYA,aAAA+vG,CAAczmG,EAASghB,GACpB,IACIgmF,EADAh4F,EAAY59B,KAAKsmH,cAAch8F,SAEhCurG,EAAUjmF,EAAGljB,gBAAgB89D,gBAAgB,GAG7CjiF,EAAU,KAGb,GADAqtH,EAAch4F,EAAU9U,MAAMpH,GAAMA,EAAEziB,IAAM2vB,IAC5C,CAEA,OAAQgnG,EAAYnzH,KACjB,IAAK,OACF8F,EAAU,CACP,CAAEtJ,GAAI,MAAOoS,MAAOyb,EAAE,oBACtB,CAAE7tB,GAAI,OAAQoS,MAAOyb,EAAE,qBAE1B,MACH,IAAK,SACFvkB,EAAU,CACP,CAAEtJ,GAAI,MAAOoS,MAAOyb,EAAE,WACtB,CAAE7tB,GAAI,OAAQoS,MAAOyb,EAAE,YAE1B,MAEH,QACGvkB,EAAU,CACP,CAAEtJ,GAAI,MAAOoS,MAAOyb,EAAE,WACtB,CAAE7tB,GAAI,OAAQoS,MAAOyb,EAAE,YAKhC,GAAuB,QAAnB8oG,EAAYnzH,IACblC,GAAG0Q,MAAM2uD,GAAG5/D,KAAK81H,kBAAkBF,GAAcC,OAC7C,CACJ,MAAME,EAAU/1H,KAAKs1H,gBACrBS,EAAQxtH,QAAUA,EAClBhI,GAAG0Q,MAAM2uD,GAAGm2D,EAASF,EACxB,CAOA71H,KAAKu1H,mBACLv1H,KAAKg1H,iBAtCmB,CAuC3B,CAMA,MAAAh0B,CAAOj+E,EAAMxa,GACV,IAAI2sH,EAAY1oG,GAAGxsB,KAAK8iC,IAAInuB,MAG5BvR,MAAMw8D,GAAG5/D,KAAK80H,SAAUI,GAExB,IAAIzjG,EAAQzxB,KAAK+wC,UACbtf,GAASA,EAAMzrB,SAChByrB,EAAMzrB,SAASyuB,IACZz0B,KAAK+0H,gBAAgBtgG,EAAEhyB,IAAKgyB,EAAEwgG,IAAI,IAI3B,MAATxjG,GAAiC,GAAhBA,EAAM7vB,QACxB5B,KAAK+0H,kBAGR,MAAMiB,EAASxpG,GAAGxsB,KAAK8iC,IAAI0S,WAC3BwgF,GAAQrnC,aACRqnC,GAAQnrC,KAAK9nE,EAAMxa,GACnBytH,GAAQpnC,cACX,CAQA,gBAAA2mC,CAAiBU,GACd,IAAIf,EAAY1oG,GAAGxsB,KAAK8iC,IAAInuB,MACzBygH,EAAap1H,KAAK8rF,cAAa,GAC/BoqC,EAAiB,GACjBC,EAAmB,GAElB9lC,EAAa6kC,EAAU1qC,gBACvB6F,EAAWzuF,OAAS,GAErByuF,EAAWrqF,SAAQ,SAAUyvH,EAAO9oG,GACjC,GAAI0jE,EAAWzuF,OAAS,GAAK+qB,EAAO,OAAO,EAE3C,IAAIgmB,EAAU8iF,EAAMjrC,gBAAgB,GAAG9uC,WAEpC06E,EAAWhB,EAAWzyH,QAAQ+e,GACpBA,EAAEziB,IAAM0zC,IAGjByjF,EAASx0H,OAAS,EAEnBs0H,EAAe9uH,KAAKgvH,EAAS,IAG7BD,EAAiB/uH,KAAKquH,EAE5B,IAIEQ,GACFE,EAAiBnwH,SAASyvH,IACvBP,EAAU/nG,WAAWsoG,EAAM,KAKjCplC,EAAa6kC,EAAU1qC,iBACR5oF,OAAS,GAErByuF,EAAWrqF,SAAQ,CAACyvH,EAAO9oG,KACxB,GAAI0jE,EAAWzuF,OAAS,GAAK+qB,EAAO,OAAO,EAE3C,IAAIgmB,EAAU8iF,EAAMjrC,gBAAgB,GAAG9uC,WAEpC06E,EAAWhB,EAAWzyH,QAAQ+e,GACpBA,EAAEziB,IAAM0zC,IAIrB,IAAI0jF,EAAgCH,EAAevzH,QAAQqtD,IACpDtqD,MAAMC,QAAQywH,KAAsC,IAAzBA,EAAS5uH,QAAQwoD,KAO/CsmE,EAAelB,EAAWzyH,QAAQqtD,IAEhCtqD,MAAMC,QAAQ0wH,KACgC,IAA9CA,EAA8B7uH,QAAQwoD,KAQ5CylE,EAAMjrC,gBAAgB,GAAGpQ,OAAO,UAAWk8C,GAC3Cb,EAAMjrC,gBAAgB,GAAG5zE,SAAS,GAG3C,CAMA,eAAAo+G,GAEOh1H,KAAK60H,iBAET70H,KAAK+wC,UAAY/wC,KAAK6xF,cAEtB7xF,KAAKuB,KAAK,UAAWvB,KAAK+wC,WAC7B,CAEA,aAAAk9C,GACGjuF,KAAK60H,gBAAiB,CACzB,CAEA,eAAA3mC,GACGluF,KAAK60H,gBAAiB,CACzB,CAYA,IAAAhqC,CAAKhB,EAAOl3C,EAASpqC,GAClBvI,KAAKiuF,gBAELjuF,KAAKghG,OAAOnX,EAAOthF,GAAW,MAE1BoqC,GACD3yC,KAAK+0H,gBAAgBpiF,GAGxB3yC,KAAKkuF,iBACR,CASA,IAAAxtE,CAAKE,EAAGC,GACL,IAAI3c,EAAS,EAEb,MAAMmsF,EAAa7jE,GAAGxsB,KAAK8iC,IAAInuB,MAAM61E,gBAgDrC,OA/CI6F,EAAWzuF,OAAS,GAErByuF,EAAWrqF,SAAQ,CAACyvH,EAAO9oG,KACxB,GAAI0jE,EAAWzuF,OAAS,GAAK+qB,GAAmB,GAAVzoB,EAAa,OAEnD,MAAMyuC,EAAU8iF,EAAMjrC,gBAAgB,GAAG9uC,WACnC85E,EAAUC,EAAMjrC,gBAAgB,GAChCyqC,EACHO,GAAS95E,cACT85E,GAASp0H,MAAMu0H,cAAc72H,KAAKw1C,GAAQA,EAAIr1C,MAC9C,GAEG0vB,EAAQ3uB,KAAKsmH,cAAc1+F,UAAU+qB,GAC3C,IAAKhkB,EAAO,OAEZ,MAAMmiG,EAAKniG,EAAM1M,WAEjB,IAAIs0G,EAAS31G,EAAEkwG,GACZ0F,EAAS31G,EAAEiwG,GAEG,QAAbniG,EAAMlsB,MACP8zH,EAAStB,EAAIztH,QAAQ+uH,GACrBC,EAASvB,EAAIztH,QAAQgvH,IAGpB9wH,MAAMC,QAAQ4wH,KACfA,GAAUA,GAAU,IAChBz3H,KAAKsqB,GAASA,EAAK3lB,MAAQ2lB,IAC3BhgB,KAAK,MAGR1D,MAAMC,QAAQ6wH,KACfA,GAAUA,GAAU,IAChB13H,KAAKsqB,GAASA,EAAK3lB,MAAQ2lB,IAC3BhgB,KAAK,MAGRmtH,GAAUC,IAERtyH,EADQ,OAAP+wH,GAA6B,QAAbtmG,EAAMlsB,IACd8zH,EAASC,EAAS,GAAK,EAEvBD,EAASC,EAAS,GAAK,EAEtC,IAICtyH,CACV,CAEA,aAAAoxH,GACG,MAAO,CACJvyG,KAAM,YACNw+B,MAAO,IACPh5C,QAAS,CACN,CACGtJ,GAAI,GACJoS,MAAOyb,EAAE,yBAGf7rB,GAAI,CACDowC,SAAU,KAEPrxC,KAAKg1H,iBAAiB,GAIlC,CAEA,iBAAAc,CAAkBnnG,GACf,MAAO,CACJ5L,KAAM,OACNwsD,SAAU,+CACVxmE,KAAM,CACHgnD,OAAQ,IAEXA,OAAQ,IACRygD,QAAQ,EACRimB,KAAM,QACNr1H,KAAMutB,EAAMpmB,UACZtH,GAAI,CACDowC,SAAU,KACPrxC,KAAKg1H,iBAAiB,EAEzB0B,YAAa,KACV12H,KAAKg1H,iBAAiB,GAIlC,oBCrkBH,MAAM2B,EAAkB,EAAQ,OAC1BC,EAAuB,EAAQ,OAIrCj3H,EAAOC,QAAU,cAA0B+2H,EAcxC,SAAAnhF,GACG,OAAO,IAAIohF,EAAqB52H,KACnC,CAEA,YAAAo3E,GACGr3E,MAAMq3E,eAEDp3E,KAAK2hB,SAASkjC,UAChB7kD,KAAKs3E,gBAAgB,mBAE3B,+DC7BH,MAAMu/C,EAAmB,EAAQ,OAC3BC,EAAwB,EAAQ,OAEhCnf,EACH,WAEY,MAAMof,UAAqBF,EAWvC,SAAArhF,GACG,OAAO,IAAIshF,EAAsB92H,KACpC,CAEA,kBAAI60G,GACD,OAAQ70G,KAAK03G,iBACV13G,KAAK03G,kBAAoB,IAAIC,CACnC,CAEA,YAAAvgC,GACGr3E,MAAMq3E,eACGp3E,KAAKunB,gBAEXvnB,KAAKs3E,gBACF,qCAAqCt3E,KAAK2hB,SAASovC,cAG5D,oBC3BH,MAAMp7C,EAAkB,WAClBm5E,EAAa,EAAQ,OACrB+vB,EAAmB,EAAQ,OAEjC,IAAI/xF,EAAI,KAGRntB,EAAOC,QAAU,cAAiC+V,EAC/C,WAAA7V,CAAYk3H,EAAW76F,EAAQgzC,GAE5BpvE,MADAo8B,EAASA,GAAU,GAAG66F,EAAUj0G,MAAM9jB,mBACxB,CACX0V,KAAM,KAGJmY,IACFA,EAAI,IAAIjkB,IACE7I,KAAKO,GAAGgD,aAAaC,SAASqF,IAI3C7I,KAAKO,GAAKy2H,EAAUz2H,GAEpBP,KAAKi3H,gBAAkB,KAIvBj3H,KAAKmvE,WAAaA,EAKlBnvE,KAAKs8B,SAAWt8B,KAAKO,GAAGk5B,eAAe,CAAC,EAK3C,CAOA,iBAAI6sF,GACD,OAAOtmH,KAAKO,GAAGoL,WAAW3L,KAAKi3H,gBAClC,CAEA,EAAAr3D,GACG,IAAI98B,EAAM9iC,KAAK8iC,IAGf,MAAO,CACJ7jC,GAAI6jC,EAAI0S,UACR+L,MAAO,IACPklC,QAAQ,EACRF,KAAM,CACH,CACGxjE,KAAM,UACNgK,IAAK,aACLk/D,KAAM,CACH,CACGlpE,KAAM,QACNvf,MAAOspB,EAAE,gBAEZ,CACG/J,KAAM,OACNhF,KAAM,YACNm4F,MAAO,QACPlpF,MAAO,KACJhtB,KAAKk9E,MAAM,KAKvB,CACGn6D,KAAM,aACNjV,KAAM,CACHy4E,KAAM,CACH,CACGtnF,GAAI6jC,EAAInuB,KACRoO,KAAM,OACNyjE,YAAY,EACZD,KAAM,QAO3B,CAEA,UAAMjmF,CAAKC,GACRP,KAAKO,GAAKA,CACb,CAEA,UAAAg0D,CAAWzvC,GACR9kB,KAAKi3H,gBAAkBnyG,EAAO7lB,EACjC,CAEA,IAAAi+E,GACG1wD,GAAGxsB,KAAK8iC,IAAI0S,YAAY0nC,OAExBl9E,KAAKuB,KAAK,QACb,CAEA,IAAAspF,CAAKzpF,GACForB,GAAGxsB,KAAK8iC,IAAI0S,YAAYq1C,OAExB7qF,KAAKk3H,YAAY91H,EACpB,CAEA,SAAA8uF,GACG,OAAO1jE,GAAGxsB,KAAK8iC,IAAI0S,YAAY06C,cAAe,CACjD,CAEA,WAAAgnC,CAAY91H,GACT,IAAI0hC,EAAM9iC,KAAK8iC,IACf,IAAIm9E,EAAYzzF,GAAGsW,EAAInuB,MACnB2xG,EAAgBtmH,KAAKsmH,cAEzB,IAAKA,IAAkBrG,EAAW,OAElC7+G,EAAOA,GAAQ,CAAC,EAEhB,IAAI+1H,EAAY,CACbl4H,GAAI,GAAGe,KAAK8iC,IAAI0S,qBAChB/yC,IAAKqsF,EAAW9+C,SAASvtC,IACzBkf,SAAU,CACP+mD,QAAS,EACT3U,cAAe,MACfD,UAAW,EACXG,YAAa,EACbC,YAAa,EACbF,WAAY,IACZjE,OAAQ,IAKVp7C,EAAO3U,KAAKO,GAAG87B,iBAAiB86F,GAEpCxiH,EAAK4/C,WAAW+xD,GAGhBA,EAAch8F,SAAStkB,SAAQ,CAAC0b,EAAGiL,OAE3B3sB,KAAKmvE,YAAcnvE,KAAKmvE,WAAW3nE,QAAQka,EAAEziB,KAAO,IACtD0V,EAAKkgD,eAAenzC,EAAGiL,EAC1B,IAIHhY,EAAKiO,OAAOxb,KACT,IAAIy3G,EACD,CACGl9F,SAAU,CACP8wC,aAAa,EACbE,eAAe,EACfE,cAAc,GAEjB7K,SAAU,CACPiI,EAAGq2D,EAAch8F,SAAS1oB,SAGhC5B,KAAKs8B,SACL3nB,IAKNA,EAAKiO,OAAO5c,SACT,CAACC,EAAG0mB,IAAW1mB,EAAEhH,GAAK,GAAG0V,EAAK1V,MAAMgH,EAAExD,OAAOkqB,MAGhD,IAAIyqG,EAAUziH,EAAK6gC,UAAUx1C,KAAKO,GAAG67B,MAGrCh5B,MAAMw8D,GAAGw3D,EAAQx3D,KAAK2mB,KAAK5sE,OAAO,CAAC,GAAIsmG,GACvC78G,MAAMm4E,OAAO0kC,EAAW78G,MAAMusF,aAE9BynC,EAAQ92H,KACLN,KAAKO,GACL,EACA,CACG4+G,iBAAkB,KAEf,IAAIhqB,EAAWxgF,EAAK2qG,cAAcW,EAAWqG,GAG7C,QAAK3xG,EAAKqrG,aAAaC,EAAWqG,EAAenxB,KAIjD8qB,GAAWxlC,aAAa,CAAE1xE,KAAM,SAE5BosF,EAASl2F,GACVqnH,EAAcj6G,QACV+yE,OAAO+V,EAASl2F,GAAIk2F,GACpB9tF,MAAMgwH,IACJr3H,KAAKuB,KAAK,SAAU81H,GAGpBpX,GAAWhlC,aAAa,CAAElyE,KAAM,QAAS,IAE3CzB,OAAOnG,IAELnB,KAAKO,GAAGoJ,OAAOC,UAAUzI,EAAK,CAC3BD,QACG,8EACHi0F,aAEH8qB,GAAWhlC,aAAa,CAAElyE,KAAM,QAAS,IAK/Cu9G,EAAcj6G,QACV8rE,OAAOgd,GACP9tF,MAAMiwH,IAEJt3H,KAAKuB,KAAK,MAAO+1H,GAEjBrX,GAAWhlC,aAAa,CAAElyE,KAAM,QAAS,IAE3CzB,OAAOnG,IAELnB,KAAKO,GAAGoJ,OAAOC,UAAUzI,EAAK,CAC3BD,QACG,+EACHi0F,aAGH8qB,GAAWhlC,aAAa,CAAElyE,KAAM,QAAS,KAI3C,EAAK,GAGlB,GAIHk3G,EAAU3uG,QACV2uG,EAAUr1G,MAAMxJ,GAEhBg2H,EAAQp2B,OAAO5/F,EAClB,oBC9PH,MAAMm2H,EAAkB,EAAQ,OAC1BC,EAAuB,EAAQ,OAErC73H,EAAOC,QAAU,cAA0B23H,EACxC,WAAAz3H,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MAAMwF,EAAQkf,EAAa1c,EAAQogC,EACtC,CAOA,SAAAqN,GACG,OAAO,IAAIgiF,EAAqBx3H,KACnC,CAEA,YAAAo3E,GACGr3E,MAAMq3E,eAEDp3E,KAAKyD,MACPzD,KAAKs3E,gBAAgB,yBAE3B,oBCvBH,MAAMmgD,EAAmB,EAAQ,OAC3BC,EAAwB,EAAQ,OAEtC/3H,EAAOC,QAAU,cAA2B63H,EAMzC,SAAAjiF,GACG,OAAO,IAAIkiF,EAAsB13H,KACpC,CAEA,YAAAo3E,GACGr3E,MAAMq3E,eAEoB,GAAtBp3E,KAAK4iB,OAAOhhB,QACb5B,KAAKs3E,gBAAgB,sBAE3B,oBCnBH,MAAMqgD,EAAiB,EAAQ,OACzBC,EAAsB,EAAQ,OAIpCj4H,EAAOC,QAAU,cAAyB+3H,EAUvC,SAAAniF,GACG,OAAO,IAAIoiF,EAAoB53H,KAClC,CAEA,YAAAo3E,GACGr3E,MAAMq3E,eACGp3E,KAAKunB,gBAEXvnB,KAAKs3E,gBACF,qCAAqCt3E,KAAK2hB,SAASovC,cAG5D,oBC3BH,MAAM8mE,EAAiB,EAAQ,OACzBC,EAAsB,EAAQ,OAEpCn4H,EAAOC,QAAU,cAAyBi4H,EAMvC,SAAAriF,GACG,OAAO,IAAIsiF,EAAoB93H,KAClC,oBCXH,MAAM+3H,EAAwB,EAAQ,OAChCC,EAA6B,EAAQ,OAE3Cr4H,EAAOC,QAAU,cAAgCm4H,EAM9C,SAAAviF,GACG,OAAO,IAAIwiF,EAA2Bh4H,KACzC,iBCXH,MAAMi4H,EAAiB,EAAQ,OAEzBhqE,EAA8BgqE,EAAe9vF,gBAEnDxoC,EAAOC,QAAU,cAAyBq4H,EAWvC,SAAAziF,CAAU0iF,GAAQ,GACf,IAAI1iF,EAAYz1C,MAAMy1C,YAiBtB,GAfAA,EAAUs/D,IAAMt/D,EAAUoqB,KAG1BpqB,EAAUoqB,GAAK,KACL,CACJ78C,KAAM,aACNyjE,YAAY,EACZz5D,IACG/sB,KAAK2hB,SAASuwD,gBACdjkB,EAA4BikB,eAC/BpkE,KAAM0nC,EAAUs/D,MAKlBojB,EAAO,CACR,IAAIC,EAAe3iF,EACnBA,EAAY,CACToqB,GAAIpqB,EAAUoqB,KACdt/D,KAAM,CAACiI,EAAS0gE,KACbA,EAAcA,GAAejpE,KAAKgpE,gBAC3BmvD,EAAa73H,KAAKN,KAAKO,GAAI0oE,EAAa1gE,IAElDy4F,OAAQ,IAAIn4F,IACFsvH,EAAan3B,YAAYn4F,GAGzC,CAEA,OAAO2sC,CACV,CAEA,YAAA4hC,GACGr3E,MAAMq3E,eAIiB,GAFRp3E,KAAK2iB,QAEP/gB,QACV5B,KAAKs3E,gBAAgB,qBAGvBt3E,KAAKogB,SAAW,IAAIpa,SAASyU,IAC3BA,EAAE28D,cAAc,GAEtB,oBC9DH,MAAMghD,EAAkB,EAAQ,OAC1BC,EAAuB,EAAQ,OAIrC14H,EAAOC,QAAU,cAA0Bw4H,EACxC,WAAAt4H,CAAYyF,EAAQkf,EAAa1c,EAAQogC,GACtCpoC,MAAMwF,EAAQkf,EAAa1c,EAAQogC,EACtC,CAOA,SAAAqN,GACG,OAAO,IAAI6iF,EAAqBr4H,KACnC,CAEA,YAAAo3E,GACGr3E,MAAMq3E,eAEGp3E,KAAKunB,gBAEXvnB,KAAKs3E,gBACF,qCAAqCt3E,KAAK2hB,SAASovC,cAG5D,oBC5BH,MAAMunE,EAA2B,EAAQ,OACnCC,EAAgC,EAAQ,OAE9C54H,EAAOC,QAAU,cAAmC04H,EAcjD,SAAA9iF,GACG,OAAO,IAAI+iF,EAA8Bv4H,KAC5C,oBCnBH,MAAMw4H,EAAsB,EAAQ,OAC9BC,EAA2B,EAAQ,OAEzC94H,EAAOC,QAAU,cAA8B44H,EAU5C,SAAAhjF,GACG,OAAO,IAAIijF,EAAyBz4H,KACvC,CAEA,YAAAo3E,GACGr3E,MAAMq3E,cACT,mBCnBH,MAAMshD,EAAgB,EAAQ,OAExBC,EAAqB,EAAQ,OAEnCh5H,EAAOC,QAAU,cAAwB84H,EAOtC,SAAAljF,CAAU0iF,GAAQ,GACf,IAAI1iF,EAAY,IAAImjF,EAAmB34H,MAGvC,GAAIk4H,EAAO,CACR,MAAMC,EAAe3iF,EAErBA,EAAY,CACToqB,GAAIu4D,EAAav4D,KACjBt/D,KAAM,CAACiI,EAAS0gE,IACNkvD,EAAa73H,KAAKN,KAAKO,IAEjCygG,OAAQ,IAAIn4F,IACFsvH,EAAan3B,YAAYn4F,GAGzC,CAEA,OAAO2sC,CACV,CAEA,YAAA4hC,GACGr3E,MAAMq3E,eAIiB,GAFRp3E,KAAK2iB,QAEP/gB,QACV5B,KAAKs3E,gBAAgB,kBAO3B,oBC7CH,MAAMshD,EAAiB,EAAQ,OAEzBC,EAAsB,EAAQ,OAEpCl5H,EAAOC,QAAU,cAAyBg5H,EAMvC,SAAApjF,CAAU2mC,GACP,OAAO,IAAI08C,EAAoB74H,KAAMm8E,EACxC,oBCZH,MAAM28C,EAAmB,EAAQ,OAEGA,EAAiB3wF,gBAIrDxoC,EAAOC,QAAU,cAA2Bk5H,EAWzC,SAAAtjF,CAAUtZ,GACP,IAAI0yC,EAAO7uE,MAAMy1C,UAAUtZ,GAU3B,OARA0yC,EAAKoyB,OAAUzvC,IACZ,IAAIx/B,EAAK/xB,KAAKunB,eACVwK,GAAMA,EAAGhK,YAAcgK,EAAG7L,eAAeC,YAE1C4L,EAAGjH,UACN,EAGI8jD,CACV,oBC7BH,MAAMj5D,EAAkB,WAExBhW,EAAOC,QAAU,cAAyC+V,EACvD,WAAA7V,CAAYo0G,EAAU/3E,EAAQ2G,GAC3B/iC,MACGm0G,EACA/3E,GAAU,iBAAiB+3E,EAASj1G,KACpCQ,OAAO2vB,OACJ,CACGsjE,OAAQ,GACR83B,aAAc,GACdj5B,cAAe,IAElBzuD,IAIN9iC,KAAK+4H,aAAe,IACvB,CAEA,EAAAn5D,GACG,MAAM98B,EAAM9iC,KAAK8iC,IACXnhB,EAAW3hB,KAAK2hB,SAChB66E,EAAkBx8F,KAAK+iB,KAAKjjB,YAAYqoC,gBACxC2sE,EAAM/0G,MAAM6/D,GAAG,CAClB,CACG78C,KAAM,SACNha,KAAM,QACNy9E,YAAY,EACZyF,KAAM,CACH,CACGhtF,GAAI6jC,EAAI0nF,aACRznG,KAAM,SACNgK,IAAK,oBACLhkB,KAAM,OACNgV,KAAM,eACNyoE,YAAY,EACZjlC,MAAO,GACP/9C,MAAO,GACPwpB,MAAO,KACJhtB,KAAK02G,iBAAiB,GAG5B,CACGz3G,GAAI6jC,EAAI4vD,OACR3vE,KAAM,SACNgK,IAAK,gBACLhkB,KAAM,OACNgV,KAAM,iBACNyoE,YAAY,EACZjlC,MAAO5/B,EAAS4/B,OAASi7C,EAAgBj7C,MACzC/9C,MAAOme,EAASyiD,aAAeo4B,EAAgBp4B,YAC/Cp3C,MAAO,KACJhtB,KAAKg5H,iBAAiB,GAG5B,CAAEpmB,WAAW,OAOtB,cAFOkC,EAAI/rG,KAEJ+rG,CACV,CAEA,UAAMx0G,CAAKC,GAGR,SAFMR,MAAMO,KAAKC,IAEZP,KAAK+4H,aAAc,CACrB,MAAMA,EAAex4H,EAAGyzB,iBAAiBh0B,KAAK8iC,IAAIyuD,eAE5C7oE,EAAK1oB,KAAKunB,eAEhB,GAAImB,EAAI,CACL,MAAMhd,EAAMgd,EAAGpB,WAEfyxG,EAAa9kG,WAAWvoB,GAAK4e,YAAc,GAC9C,CAEAyuG,EAAaz4H,OACby4H,EAAa93H,GAAG,UAAWiI,IACxBlJ,KAAKi5H,eAAe/vH,EAAI,IAG3BlJ,KAAK+4H,aAAeA,CACvB,CACH,CAEA,eAAAC,GACG,IAAI32H,EAAM,0BAA0BrC,KAAK+iB,KAAK9jB,KAE9C,MAAM2sB,EAAQ,CACXvG,KAAM,MACNzL,MAAO,IAGJs/G,EAAcl5H,KAAK+iB,KAAKpB,UAAUiK,OACnCstG,GAAat/G,OAAS,IAAIhY,QAC5BgqB,EAAMhS,MAAMxS,KAAK8xH,GAGpB,MAAMC,EAAcn5H,KAAK+4H,aAAar9E,WAKtC,IAJKy9E,GAAav/G,OAAS,IAAIhY,QAC5BgqB,EAAMhS,MAAMxS,KAAK+xH,IAGfvtG,GAAOhS,OAAS,IAAIhY,OAAQ,CAC9B,IAAIw3H,EAAUzyH,KAAKC,UAAUglB,GAE7BwtG,EAAUjwH,mBAAmBiwH,GAC7B/2H,EAAM,GAAGA,WAAa+2H,GACzB,CAEA5qH,OAAO6qH,KAAKh3H,EACf,CAEA,eAAAq0G,GACG,MAAM4iB,EAAgB9sG,GAAGxsB,KAAK8iC,IAAI0nF,cAElCxqH,KAAK+4H,aAAanuC,MAAM0uC,EAAgBA,EAAczvC,MAAQ,KACjE,CAEA,cAAAovC,GACG,MAAMK,EAAgB9sG,GAAGxsB,KAAK8iC,IAAI0nF,cAElC,IAAK8O,EAAe,OAEpB,MAAM1tG,EAAQ5rB,KAAK+4H,aAAar9E,WAEhC49E,EAAcl/C,OAAO,SAAUxuD,EAAMhS,OAAS,IAAIhY,QAAU,MAC5D03H,EAAc1iH,SACjB,oBCpIH,MAAMjB,EAAkB,WAClB4jH,EAAc,EAAQ,OAE5B55H,EAAOC,QAAU,cAAyC+V,EACvD,WAAA7V,CAAYo0G,EAAU/3E,EAAQ2G,GAC3B/iC,MACGm0G,EACA/3E,GAAU,iBAAiB+3E,EAASj1G,KACpCQ,OAAO2vB,OACJ,CACGsjE,OAAQ,GACRtM,MAAO,GAEPzxE,KAAM,GACN6iF,SAAU,GACVgiC,eAAgB,GAChB70C,YAAa,GACb80C,kBAAmB,GACnBC,WAAY,GAEZzwH,OAAQ,GACR2hH,UAAW,GAEX+O,cAAe,GACfC,YAAa,GAEbC,iBAAkB,GAClBC,aAAc,GACdlgH,MAAO,IAEVkpB,IAIN9iC,KAAK+5H,YAAc,IAAIR,GAAY,IAAIS,IAASh6H,KAAKwD,SAASw2H,KAI9Dh6H,KAAKirH,iBAAkB,EAEvBjrH,KAAKi6H,UAAY,KACjBj6H,KAAKk6H,aAAe,IACvB,CAEA,EAAAt6D,GACG,MAAMj+C,EAAW3hB,KAAK2hB,SAChB66E,EAAkBx8F,KAAK+iB,KAAKjjB,YAAYqoC,gBACxC2sE,EAAM/0G,MAAM6/D,GAAG,CAClB,CACGqsB,KAAM,CACH,CACGlpE,KAAM,SACNgK,IAAK,gBACLhkB,KAAM,OACNgV,KAAM,eACNva,MAAOxD,KAAKwD,MACTme,EAASyiD,aAAeo4B,EAAgBp4B,aAE3C7iB,MAAO5/B,EAAS4/B,OAASi7C,EAAgBj7C,MACzCv0B,MAAO,KACJhtB,KAAK22G,WAAW,GAGtB,CACG/D,WAAW,OAQvB,cAFOkC,EAAI/rG,KAEJ+rG,CACV,CAEA,QAAA7C,GACG,MAAMnvE,EAAM9iC,KAAK8iC,IAEjB,MAAO,CACJ7jC,GAAI6jC,EAAInuB,KACRoO,KAAM,OACNha,KAAM,QACNy9E,YAAY,EACZ/R,SAAU,IACV9L,QAAS,EACTvyD,SAAU,CACP,CACGmwE,KAAM,CACH,CACGtnF,GAAI6jC,EAAI00D,SACRz0E,KAAM,WACNnX,KAAM,UACNmhB,IAAK,gBACL1b,MAAOrR,KAAKwD,MAAM,qBAClB22H,OAAQ,WACRviC,UAAU,EACVwiC,UAAU,EACV19G,KAAMomB,EAAI02F,eACVv4H,GAAI,CACD42F,gBAAkBtT,IACfvkF,KAAKk6H,aAAe31C,EAEbvkF,KAAKq6H,iBAIrB,CACGp7H,GAAI6jC,EAAI02F,eACR5tH,KAAM,eACNmX,KAAM,OACNha,KAAM,WACN2/G,YAAY,EACZliC,YAAY,EACZ8zC,QAAS,CACNC,oBAAqB,CAACl7H,EAAGJ,KACtBe,KAAKw6H,cAAcv7H,EAAG,IAI/B,CACGuuE,QAAS,GACT+Y,KAAM,CACH,CACGtnF,GAAI6jC,EAAI6hD,YACR5hE,KAAM,aACNnX,KAAM,cACNpI,MAAOxD,KAAKwD,MAAM,gBAClBwwD,WAAY,IACZzrD,QAASvI,KAAK+5H,YAAY11C,mBAC1BhzE,MAAO,IACPpQ,GAAI,CACDowC,SAAU,KACPrxC,KAAKq6H,aAAa,IAI3B,CACGp7H,GAAI6jC,EAAI22F,kBACR12G,KAAM,WACNnX,KAAM,oBACNpI,MAAOxD,KAAKwD,MAAM,wBAClBwwD,WAAY,IACZ/nB,UAAU,EACV56B,OAAO,EACPpQ,GAAI,CACDowC,SAAU,KACPrxC,KAAKy6H,oBAAoB,MAMxC,CACG1xH,KAAM,QACNw9E,KAAM,CACH,CACGxjE,KAAM,aACN23G,UAAW,IACX5sH,KAAM,CACH0/D,QAAS,GACTvuE,GAAI6jC,EAAI42F,WACRnzC,KAAM,UASjC,CAEA,aAAAo0C,GACG,MAAM73F,EAAM9iC,KAAK8iC,IAEjB,MAAO,CACJ6lC,QAAS,EACT4d,KAAM,CACH,CACGxjE,KAAM,UACNgK,IAAK,UACLk/D,KAAM,CACH,CAAE1qC,MAAO,GACT,CACGtiD,GAAI6jC,EAAI75B,OACR8Z,KAAM,SACN1R,MAAO,GACP7N,MAAO,GACPk0D,YAAa13D,KAAKwD,MAAM,qBACxBo3H,gBAAiB,IACjB35H,GAAI,CACD8rF,gBAAiB,KACd/sF,KAAKiJ,OAAOujB,GAAGsW,EAAI75B,QAAQyyC,WAAW,IAI/C,CAAE6F,MAAO,KAGf,CACGtiD,GAAI6jC,EAAI8nF,UACR7nG,KAAM,YACNgpG,cAAc,EACdr+D,UAAU,EACVy+D,WAAY,WACZp/F,IAAK,kBACLy5D,YAAY,EACZ4zB,QAAU1uG,GACSA,EAAImvH,UACfnvH,EAAImvH,UACJ,uBAGRpmD,SAAU,IACV/L,QAAS,GACTznE,GAAI,CACD8rH,kBAAmB,CAAC9tH,EAAIyM,EAAKovH,KAE1B,IAAI3mH,EAAS,GAEb1U,OAAOD,KAAKs7H,GAAS90H,SAASvD,IAC3BzC,KAAK6pF,MAAMsoC,mBAAmB1vH,GAAKuD,SAAS7E,IACzCgT,GAAUhT,EAAI03E,eAAiB,OAAO,GACvC,IAGL,MAAMkiD,EAAMvuG,GAAGsW,EAAI8nF,WAEnBmQ,EAAIpsC,aACJosC,EAAIntG,WAAW3uB,EAAI,CAChB+7H,QAAS,UACTH,UAAW1mH,IAEd4mH,EAAInsC,eAEJ5uF,KAAKirH,iBAAkB,CAAI,EAE9B+B,oBAAqB,CAAC/tH,EAAIyM,EAAKovH,KAE5B,MAAMC,EAAMvuG,GAAGsW,EAAI8nF,WAEnBmQ,EAAIpsC,aACJosC,EAAIntG,WAAW3uB,EAAI,CAChB+7H,QAAS,QACTH,UAAW,KAEdE,EAAInsC,eACJ5uF,KAAKirH,iBAAkB,CAAK,EAE/BwB,QAAS,KACN,MAAM74B,EAAWpnE,GAAGsW,EAAI8nF,WAAW9hG,KAAK,CACrCmyG,WAAW,IAERC,EAAgB1uG,GAAGsW,EAAIg3F,cAE7BoB,EAAchnG,SAASl0B,KAAKm7H,YAAYvnC,IAEpC5zF,KAAKo7H,eAAexnC,GAAWsnC,EAAcrkE,UAC5CqkE,EAAc1zC,QAAQ,IAIpC,CACGvoF,GAAI6jC,EAAI82F,YACR7pE,OAAQ,GAEX,CACGk8B,KAAM,CACH,CACGhtF,GAAI6jC,EAAI+2F,iBACR92G,KAAM,SACNvf,MAAOxD,KAAKwD,MAAM,eAClBuF,KAAM,OACNgV,KAAM,aACNsxE,SAAU,IACVriE,MAAO,KACJhtB,KAAKq7H,gBAAgB,GAG3B,CACGt4G,KAAM,SACNnX,KAAM,SACN3M,GAAI6jC,EAAIg3F,aACRt2H,MAAOxD,KAAKwD,MAAM,UAClBupB,IAAK,gBACLkf,UAAU,EACVljC,KAAM,OACNgV,KAAM,eACNiP,MAAO,KACJhtB,KAAKs4E,QAAQ,MAOlC,CAEA,OAAAgjD,GACG,MAAMx4F,EAAM9iC,KAAK8iC,IAEjB,MAAO,CACJ7jC,GAAI6jC,EAAIsjD,MACRrjE,KAAM,SACN0jE,QAAQ,EACRz+B,SAAU,SACV2qD,OAAO,EACPrmB,QAAQ,EACRzwE,KAAM,CACHkH,KAAM,UACNgK,IAAK,aACLk/D,KAAM,CACH,CAAC,EACD,CACGlpE,KAAM,QACNvf,MAAOxD,KAAKwD,MAAM,gBAClBwpF,WAAW,GAEd,CAAC,EACD,CACGjqE,KAAM,SACNw+B,MAAO,GACPx0B,IAAK,oBACLhkB,KAAM,OACNgV,KAAM,uBACNiP,MAAO,KACJhtB,KAAKk9E,MAAM,KAKvBpvE,KAAM,CACH/E,KAAM,OACNw9E,KAAM,CACH,CACGx9E,KAAM,OACNkjF,KAAM,CACHjsF,KAAKiyG,WACL,CAAE1wD,MAAO,IACTvhD,KAAK26H,gBACL,CAAEp5E,MAAO,KAGf,CACGtiD,GAAI6jC,EAAI62F,cACR52G,KAAM,QACNmzF,MAAO,QACPzvB,QAAQ,GAEX,CACGA,QAAQ,EACRiC,OAAQ,EACRuD,KAAM,CACH,CAAE2mB,WAAW,GACb,CACG7vF,KAAM,SACNnX,KAAM,SACNyF,MAAOrR,KAAKwD,MAAM,UAClBupB,IAAK,mBACLigE,WAAW,EACXhgE,MAAO,KACJhtB,KAAKk9E,MAAM,OAsBnC,CAEA,UAAM58E,CAAKC,SACFR,MAAMO,KAAKC,GAEjB,MAAMuiC,EAAM9iC,KAAK8iC,IAIXpa,EAAK1oB,KAAKunB,eAEZmB,GAAI1oB,KAAKu0D,WAAW7rC,EAAGpB,YAE3B,MAAM6uF,EAAU51G,EAAG0Q,MAEnBklG,EAAQv2C,GAAG5/D,KAAKs7H,WAEhB,MAAM5rC,EAAQljE,GAAGsW,EAAInuB,MAEjB+6E,GAAOymB,EAAQ56B,OAAOmU,EAAOymB,EAAQxmB,aAEzC,MAAM4rC,EAAe/uG,GAAGsW,EAAI82F,aAExB2B,GAAcplB,EAAQ56B,OAAOggD,EAAcplB,EAAQxmB,YAC1D,CAEA,SAAAgnB,GACG,MAAM7zE,EAAM9iC,KAAK8iC,IAEjBtW,GAAGsW,EAAIsjD,QAAQyE,OAEf7qF,KAAKw7H,YAGLhvG,GAAGsW,EAAI00D,UAAUgB,YACpB,CAEA,IAAAtb,GACG1wD,GAAGxsB,KAAK8iC,IAAIsjD,QAAQlJ,MACvB,CAEA,SAAAs+C,GACG,MAAM14F,EAAM9iC,KAAK8iC,IAEjB9iC,KAAKi6H,UAAY,KACjBj6H,KAAKk6H,aAAe,KAEpB,MAAMxqC,EAAQljE,GAAGsW,EAAInuB,MAErB+6E,EAAMgxB,kBACNhxB,EAAMp+E,QAENkb,GAAGsW,EAAI6hD,aAAazwD,SAAS,KAE7Bl0B,KAAKO,GAAG0Q,MAAM2uD,GAAG,GAAIpzC,GAAGsW,EAAI42F,aAE5BltG,GAAGsW,EAAI22F,mBAAmB5iE,UAC1BrqC,GAAGsW,EAAIg3F,cAAcjjE,UAErBrqC,GAAGsW,EAAI75B,QAAQirB,SAAS,IACxB1H,GAAGsW,EAAI02F,gBAAgBhoH,WACvBgb,GAAGsW,EAAI8nF,WAAWp5G,WAElB,MAAMiqH,EAAiBjvG,GAAGsW,EAAI62F,eAE9B8B,EAAevnG,SAAS,IACxBunG,EAAev+C,MAClB,CAEA,MAAAj0E,CAAOwW,GACJ,MAAMyqG,EAAa19F,GAAGxsB,KAAK8iC,IAAI8nF,WAE/B,IAAKV,EAAY,OAEjBzqG,GAAcA,GAAc,IAAIhS,cAEhC,MAAMiuH,EAAc17H,KAAK27H,iBAEzBzR,EAAWvnH,QAAQ6T,IAChB,IAAIoS,GAAS,EAYb,OAVC8yG,GAAe,IAAI11H,SAAS0b,IACtBkH,IAEJA,GACIpS,EAAI,GAAGkL,EAAEk6G,gBAAkB,IACxBr0H,WACAkG,cACAjG,QAAQiY,IAAe,EAAC,IAG3BmJ,CAAM,GAEnB,CAEA,cAAAizG,CAAezyG,GACZ,IAAImmD,EAAW,GAEf,IAAKnmD,EAAM,OAAOmmD,EAElB,OAAQnmD,EAAK4xG,SACV,IAAK,cACFzrD,EAAW,sCACX,MACH,IAAK,UACFA,EAAW,mDACX,MACH,IAAK,QAGL,IAAK,OACFA,EAAW,oCACX,MACH,IAAK,OACFA,EAAW,qCAIjB,OAAOA,CACV,CAEA,iBAAM8qD,GACH,MAAMH,EAAel6H,KAAKk6H,aAE1B,IAAKA,EAAc,OAAO,EAE1B,MAAMH,EAAc/5H,KAAK+5H,YAEzB,IAAKA,EAAYz1C,aAAa41C,GAO3B,OANAl6H,KAAKO,GAAG0Q,MAAM5N,MAAM,CACjBC,MAAOtD,KAAKwD,MAAM,sCAClBC,KAAMzD,KAAKwD,MAAM,gCACjBG,GAAI3D,KAAKwD,MAAM,SAGX,EAGV,MAAMs/B,EAAM9iC,KAAK8iC,IAGX4sD,EAAQljE,GAAGsW,EAAInuB,MAErB+6E,GAAOjV,eAAe,CAAE1xE,KAAM,SAG9B,MAAM+yH,EAAqBtvG,GAAGsW,EAAI22F,mBAC5ByB,EAAgB1uG,GAAGsW,EAAIg3F,cAE7BgC,EAAmBt0C,SACnB0zC,EAAc1zC,SAEdxnF,KAAKi6H,gBAAkBF,EAAYr1C,YAChCw1C,EACA1tG,GAAGsW,EAAI6hD,aAAajpC,YAGvB,MAAMu+E,EAAYj6H,KAAKi6H,UAEvB,IAAIr4H,EAASq4H,EAAUr4H,OAQvB,OANIk6H,EAAmBpgF,aAAY95C,EAASq4H,EAAUr4H,OAAS,GAE/Ds5H,EAAchnG,SAASl0B,KAAKm7H,YAAYv5H,IACxC5B,KAAKy6H,qBACL/qC,GAAOzU,kBAEA,CACV,CAEA,aAAAu/C,CAAcuB,GAIX,OAHAvvG,GAAGxsB,KAAK8iC,IAAI02F,gBAAgBjoH,OAAOwqH,GACnC/7H,KAAKw7H,aAEE,CACV,CAEA,kBAAAf,GACG,MAAMtrC,EAAOnvF,KACP8iC,EAAM9iC,KAAK8iC,IACXqzE,EAAUn2G,KAAKO,GAAG0Q,MAGlB+qH,EAAcxvG,GAAGsW,EAAI42F,YAE3BvjB,EAAQv2C,GAAG,GAAIo8D,GAEf,MAAM/B,EAAYj6H,KAAKi6H,UAEvB,IAAKA,EAAW,OAGhB,MAAMgC,EAAYhC,EAAU,GAE5B,IAAKgC,EAAW,OAEhB,MAAMC,EAAgB,GAChB98F,EAAY,GACZ+8F,EAAgBn8H,KAAKsmH,cAEvB6V,GACD/8F,EAAUh4B,QACJ+0H,EAAc7xG,QAAQ5I,IAEtB,GACG1hB,KAAK2hB,SAAS8iD,mBAAmB7iE,QACjC5B,KAAK2hB,SAAS8iD,kBAAkBj9D,QAAQka,EAAEziB,IAAM,EAEhD,OAAO,EAIV,MAAMm9H,EAAW16G,EAAEsqD,gBAEnB,IAAKowD,EAAU,OAAO,EAEtB,MAAMC,EAAaD,EAASpsF,SAE5B,OAAKqsF,GAEoB,iBAAlBA,EAAW55H,GAAsB,KAIjD,MAAMs3H,EAAc/5H,KAAK+5H,YAGrBvtG,GAAGsW,EAAI22F,mBAAmB/9E,WAC3BwgF,EAAc90H,QACR60H,EAAUn9H,KAAI,CAACsvB,EAASzB,KACjB,CACJ1tB,GAAI0tB,EAAQ,EACZtb,MAAO+c,EACP3rB,IAAKs3H,EAAY90C,iBAAiBg1C,EAAWttG,QAKtDsvG,EAAUj2H,SAAQ,CAAC3G,EAAG6G,KACnBg2H,EAAc90H,KAAK,CAChBnI,GAAIiH,EAAI,EACRmL,MAAOrR,KAAKwD,MAAM,aAAc,CAAC0C,EAAI,IACrCzD,IAAKs3H,EAAY90C,iBAAiBg1C,EAAW/zH,IAC9C,IAIRg2H,EAAc3qG,QAAQ,CACnBtyB,GAAI,OACJoS,MAAOrR,KAAKwD,MAAM,UAIrB,MAAM84H,EAAY,GACZC,EAAkB,GAExBn9F,EAAUp5B,SAAS0b,IAEhB,MAAM86G,EAAWN,EAAcv5H,QAC3BugC,GAAMA,EAAEzgC,KAAOif,EAAEjf,KAAO85H,EAAgB/0H,QAAQ07B,EAAEjkC,IAAM,IAC1D,GAEF,IAAIw9H,EAAY,OAEZD,IACDC,EAAYD,EAASv9H,GAGrBs9H,EAAgBn1H,KAAKq1H,IAGxB,IAAIC,EAAc,CACf35G,KAAM,aACN4lD,QAAS,EACTpgE,QAAS2zH,EACTvpF,QAASjxB,EAAEziB,GACX09H,OAAQ,cACRtrH,MAAOorH,EACPx7H,GAAI,CACDowC,SAAU,WACP89C,EAAKytC,iBAAiB58H,MACtBmvF,EAAK0tC,gBACR,IAKN,GAAc,SAAVn7G,EAAEjf,IAAgB,CACnB,MAAMq6H,EAAuB,CAAC,IAAK,IAAK,IAAK,IAAK,KAC5CC,EAAmB,CACtB,CAAE1rH,MAAOrR,KAAKwD,MAAM,WAAYvE,GAAI,KACpC,CAAEoS,MAAOrR,KAAKwD,MAAM,YAAavE,GAAI,OAElC+9H,EAAqB,CACxB,CAAE3rH,MAAOrR,KAAKwD,MAAM,WAAYvE,GAAI,KACpC,CAAEoS,MAAOrR,KAAKwD,MAAM,YAAavE,GAAI,OAElCg+H,EAAoB,CACvB,CAAE5rH,MAAOrR,KAAKwD,MAAM,YAAavE,GAAI,MACrC,CAAEoS,MAAOrR,KAAKwD,MAAM,gBAAiBvE,GAAI,SAEtCi+H,EAAmB,CACtB,CACG7rH,MAAOrR,KAAKwD,MAAM,SAClBvE,GAAI,GAEP,CACGoS,MAAOrR,KAAKwD,MAAM,SAClBvE,GAAI,GAEP,CACGoS,MAAOrR,KAAKwD,MAAM,SAClBvE,GAAI,GAEP,CACGoS,MAAOrR,KAAKwD,MAAM,SAClBvE,GAAI,IAIVy9H,EAAc,CACX/zD,QAAS,EACT4d,KAAM,CACHm2C,EACA,CACG35G,KAAM,aACNvf,MAAOxD,KAAKwD,MAAM,aAClBwwD,WAAY,IACZ/yD,GAAI,CACDowC,SAAU,KACPrxC,KAAK68H,gBAAgB,GAG3BjxH,KAAM,YACN+wH,OAAQ,mBACRp0H,QAASu0H,EACTzrH,MAAO,KAEV,CACG0R,KAAM,aACNvf,MAAOxD,KAAKwD,MAAM,OAClBwwD,WAAY,IACZ/yD,GAAI,CACDowC,SAAU,KACPrxC,KAAK68H,gBAAgB,GAG3BjxH,KAAM,MACN+wH,OAAQ,mBACRp0H,QAASw0H,EACT1rH,MAAO,KAEV,CACG0R,KAAM,aACNvf,MAAOxD,KAAKwD,MAAM,SAClBwwD,WAAY,IACZ/yD,GAAI,CACDowC,SAAU,KACPrxC,KAAK68H,gBAAgB,GAG3BjxH,KAAM,QACN+wH,OAAQ,mBACRp0H,QAASy0H,EACT3rH,MAAO,KAEV,CACG0R,KAAM,aACNvf,MAAOxD,KAAKwD,MAAM,QAClBwwD,WAAY,IACZ/yD,GAAI,CACDowC,SAAU,KACPrxC,KAAK68H,gBAAgB,GAG3BjxH,KAAM,OACN+wH,OAAQ,mBACRp0H,QAAS00H,EACT5rH,MAAO,MAEV,CACG0R,KAAM,aACNvf,MAAOxD,KAAKwD,MAAM,SAClBwwD,WAAY,IACZ/yD,GAAI,CACDowC,SAAU,KACPrxC,KAAK68H,gBAAgB,GAG3BjxH,KAAM,QACN+wH,OAAQ,mBACRp0H,QAAS20H,EACT7rH,MAAO,IAInB,CAGA,GAAIqQ,EAAE2kB,aAAc,CACjB,IAAI82F,EAAmB,GAEnBz7G,EAAE2L,iBACH8vG,EAAmBz7G,EAAE2L,eACjB/C,QAAQo1B,IAASA,EAAIrZ,eACrBvnC,KAAK4gD,IACI,CACJzgD,GAAIygD,EAAIzgD,GACRoS,MAAOquC,EAAIl8C,WAKvBk5H,EAAc,CACX/zD,QAAS,EACT4d,KAAM,CACHm2C,EACA,CACG35G,KAAM,aACNvf,MAAO,IACPwwD,WAAY,GACZ2oE,OAAQ,iBACRl2C,QAAQ,EACRl+E,QAAS40H,EACT9rH,MAAO8rH,EAAiB,GAAKA,EAAiB,GAAGl+H,GAAK,OAIlE,CAEAq9H,EAAUl1H,KAAK,CACZ2b,KAAM,SACNyjE,YAAY,EACZyF,KAAM,CACH,CACGlpE,KAAM,WACN4lD,QAAS,EACT6d,YAAY,EACZz5D,IAAK,CAAE,cAAe,IACtBwiD,SAAU,sBAAsB7tD,EAAE3D,iBAAiB2D,EAAEle,SAExDk5H,IAEJ,IAELvmB,EAAQv2C,GAAG08D,EAAWN,GAEtBh8H,KAAK68H,gBACR,CAEA,gBAAAD,CAAiBQ,GACd,IAAKA,EAAe,OAEpB,MACMC,EADeD,EAAc1wG,gBACGk9D,UACnC,CAAE+yC,OAAQ,kBACV,OACD,GAEGU,IAE4B,SAA7BD,EAAc1hF,WAAuB2hF,EAAiBngD,OACrDmgD,EAAiBxyC,OACzB,CAEA,cAAAuwC,CAAeh6H,GAGZ,OAAIA,EAAKQ,OAFK,MAIX5B,KAAKO,GAAG0Q,MAAM5N,MAAM,CACjBC,MAAOtD,KAAKwD,MAAM,oBAClBG,GAAI3D,KAAKwD,MAAM,MACfC,KAAMzD,KAAKwD,MACR,0HACA,CATK,SAaJ,EAIb,CAEA,cAAAq5H,GACG,MAAM/5F,EAAM9iC,KAAK8iC,IACXonF,EAAa19F,GAAGsW,EAAI8nF,WACpB3U,EAAKj2G,KAAKO,GAEhB,IAAK2pH,EAAY,OAEjBA,EAAW14G,WAGX04G,EAAWzvC,eAAe,CAAE1xE,KAAM,SAGlC,MAAM2yH,EAAc17H,KAAK27H,iBACnBjzD,EAAU,GAGhBA,EAAQthE,KAAK,CACVnI,GAAI,UACJ+d,OAAQ,GACRuyD,SAAUvvE,KAAK67H,eACft6E,MAAO,KAIVmnB,EAAQthE,KAAK,CACVnI,GAAI,YACJ+d,OAAQ,CAAEqlB,QAAS,kBACnBktC,SAAU,sBACVhuB,MAAO,KAGV,MAAMswE,EAAmB,GACnBC,EAAW,GA4DjB,IAzDC4J,GAAe,IAAI11H,SAAS0b,IAC1B,IAAI8+D,EAAkB9+D,EAAEiN,MAAMhN,SAAS6+D,gBAMvC,GAHIA,GAA8C,iBAApBA,IAC3BA,EAAkB75E,KAAKiE,MAAM41E,IAE5BA,GAAiB5+E,OAAQ,CAC1B,MAAMmwH,EAAe,GAGrBvxC,EAAgBx6E,SAASgmB,IACtB,MAAMslE,EAAS2kB,EAAGjiF,iBACf,GAAGtS,EAAEiN,MAAM1vB,MAAMg3G,EAAGhlG,MAAM+mE,SAG7B+5C,EAAa3qH,KAAKkqF,EAAO1xB,IAEzBiyD,EAAiBzqH,KAAK,CACnBzE,OAAQ2uF,EACRvuE,KAAMuuE,EAAOxuD,IAAIujD,aACjBpkE,WAAYP,EAAEiN,MAAM1vB,GACpBuhF,gBAAiBx0D,EAAKpS,MACtBi/D,eAAgB7sD,EAAK6sD,eACrB+iD,YAAal6G,EAAEk6G,aAChB,IAIL,MAAM5J,EAAU,GAAGlvF,EAAIlpB,SAAS8H,EAAEiN,MAAM1vB,MAAMg3G,EAAGhlG,MAAM+mE,QAGvD85C,EAAS1qH,KAAK4qH,GAEd/b,EAAGhlG,MAAM2uD,GAAG,CACT78C,KAAM,QACNgK,IAAK,iBACL9tB,GAAI+yH,EACJlkH,KAAM,CACHy4E,KAAMwrC,IAGf,CAEA,MAAMhgC,EAAyB,UAAhBrwE,EAAEiN,OAAOlsB,IAAkB,SAAW,OAErDimE,EAAQthE,KAAK,CACVnI,GAAIyiB,EAAEk6G,YACN5+G,OAAQ0E,EAAEiN,MAAMnrB,MAChBuuF,OAAQA,EACRxiB,SAAU,CAAC7jE,EAAKskC,EAAQ3+B,IACrBA,EAAMzL,QAAQ,OAAQ,QACzB6uE,SAAU,IACVm+B,WAAW,GACZ,IAGDif,EAAiBjwH,OAAQ,CAE1B,MAAMuwH,EAAqB,GAE3BN,EAAiB7rH,SAAS0b,IAGvBA,EAAE/e,OAAOsxB,WAAWj0B,KAAKsmH,cAAch8F,UAEvC5I,EAAE/e,OAAOuxB,SAASxS,EAAE8+D,iBAGf96E,MAAMC,QAAQwsH,EAAmBzwG,EAAEO,eACrCkwG,EAAmBzwG,EAAEO,YAAc,IAGtCkwG,EAAmBzwG,EAAEO,YAAY7a,KAAK,CACnC4uB,QAASxJ,GAAG9K,EAAEqB,MAAMu6G,kBACpB/3H,OAAQ2kH,EAAWkI,kBACnBv5C,eAAgBn3D,EAAEm3D,eAClB+iD,YAAal6G,EAAEk6G,aAChB,IAGL,MAAMhiH,EAAQ,CAAC,EAGfswG,EAAWrgC,MAAMsoC,mBAAqBA,EAGtC1yH,OAAOD,KAAK2yH,GAAoBnsH,SAASvD,IACtCmX,EAAMnX,GAAO,CAAC4O,EAAOjQ,KAElB,IAAI0W,GAAU,EAgCd,OA9BAoyG,EAAWrgC,MAAMsoC,mBAAmB1vH,GAAKuD,SAASrD,IAC/C,MAAM46H,EAAW,CAAC,GAKjB7B,GAAe,IAAI11H,SAAS0b,IAC1B,MAAMiI,EAASvoB,EAAKsgB,EAAEk6G,aAGH,SAAhBl6G,EAAEiN,MAAMlsB,KACRknB,EAAOsrB,SAAS,kBAEhBn9B,GAAU,GAEbylH,EAAS77G,EAAEiN,MAAM1vB,IAAM0qB,CAAM,IAGdhnB,EAAOqzB,QAAQunG,KAI9BzlH,GAAU,EAKb,IAGIA,CAAO,CAChB,IAGJoyG,EAAW9vC,OAAO,QAASxgE,GAE3BswG,EAAWx4G,OAAOogH,SAAWA,EAC7B5H,EAAWtzG,SACd,MAEOszG,EAAWx4G,OAAOogH,UACnB5H,EAAWx4G,OAAOogH,SAAS9rH,SAASogF,IACjC,MAAM4vC,EAASxpG,GAAG45D,GAEb4vC,GAELA,EAAO3D,YAAY,IAKzBnI,EAAW9vC,OAAO,QAAS,CAAC,GAC5B8vC,EAAWtzG,UAId,MAAM4b,EAAa,IAElBxyB,KAAKi6H,WAAa,IAAIj0H,SAAQ,CAACwQ,EAAKmW,KAClC,MAAM4wG,EAAW,CACdt+H,GAAI0tB,EAAQ,IAId+uG,GAAe,IAAI11H,SAAS0b,IAC1B,MAAMtgB,EAAOoV,EAAIkL,EAAEk6G,YAAc,GAEjC,GAAoB,SAAhBl6G,EAAEiN,MAAMlsB,IAAgB,CAKzB,IAAIi/C,EAAau0D,EAAGr8F,MAAMlC,OAAOtW,EAAM,CACpCyW,OAAQ6J,EAAE7J,SAEb6pC,EAAau0D,EAAGr8F,MAAM5B,aAAa0pC,EAAY,CAC5C7pC,OAAQ,eAGQ,iBAAf6pC,IACDA,EAAaA,EAAa,MAAQtgD,GAErCm8H,EAAS77G,EAAEk6G,aAAel6E,CAC7B,MAAO67E,EAAS77G,EAAEk6G,aAAex6H,CAAI,IAIxCm8H,EAAoB,WAAI,EAExB/qG,EAAWprB,KAAKm2H,EAAS,IAIJ/wG,GAAGsW,EAAI22F,mBAAmB/9E,YAE3BlpB,EAAW5wB,OAAS,GAAG4wB,EAAWrrB,QAEzD,MAAM+zH,EAAgB1uG,GAAGsW,EAAIg3F,cAE7BoB,EAAchnG,SAASl0B,KAAKm7H,YAAY3oG,IACxC03F,EAAWuI,eAAe/pD,GAC1BwhD,EAAWt/G,MAAM4nB,GAEbxyB,KAAKo7H,eAAe5oG,GAAa0oG,EAAcrkE,UAC9CqkE,EAAc1zC,SAGnB0iC,EAAWjvC,gBACd,CAEA,wBAAAuiD,CAAyBC,EAAiBC,EAAO/wG,GAC9C,MAAMmW,EAAM9iC,KAAK8iC,IAOX66F,GAJY,IAAI5lH,KAAS0lH,GAEO9wG,GAEE+wG,EAAQ/wG,GAEhD,IAAIzoB,EAAS,GAGb,MAAM05H,GAAQD,EAAa,OAAUhxH,QAAQ,GACvC0xC,GAASs/E,EAAa,MAAShxH,QAAQ,GACvC4xC,GAAWo/E,EAAa,KAAOhxH,QAAQ,GACvCkxH,GAAWF,EAAa,KAAMhxH,QAAQ,GAqB5C,GAnBiBzI,EAAb25H,EAAU,EAAY,GACjBA,EAAU,GACP79H,KAAKwD,MAAM,wCAAyC,CAC1Dq6H,IAKc,GAAXt/E,EACGv+C,KAAKwD,MAAM,+CAAgD,CACjEq6H,EAAU,KAGPt/E,EAAU,GACPv+C,KAAKwD,MAAM,sCAAuC,CAAC+6C,IACtDF,EAAQ,GACLr+C,KAAKwD,MAAM,sCAAuC,CAAC66C,IACjDr+C,KAAKwD,MAAM,qCAAsC,CAACo6H,IAE5D15H,EACDsoB,GAAGsW,EAAIg3F,eAAe5lG,SAAShwB,OAC3B,CACJ,MAAM0vF,EAAWpnE,GAAGsW,EAAI8nF,YAAY9hG,KAAK,CAAEmyG,WAAW,IACtDzuG,GAAGsW,EAAIg3F,eAAe5lG,SAASl0B,KAAKm7H,YAAYvnC,GACnD,CACH,CAcA,cAAA+nC,GACG,MAAMz3H,EAAS,GACT4+B,EAAM9iC,KAAK8iC,IAiGjB,OA9FuBtW,GAAGsW,EAAI42F,YAC1B9vC,UAAU,CAAE+yC,OAAQ,eAAiB,OACrCh6H,QAAQ4wG,GAAoC,QAAvBA,EAAS73D,cAEf,IAAI11C,SAAS83H,IAC7B,MAAM3B,EAAgBn8H,KAAKsmH,cAE3B,IAAK6V,EAAe,OAGpB,MAAMxtG,EAAQwtG,EAAcv0G,UAAUk2G,EAAUpsH,OAAOihC,SAEvD,IAAKhkB,EAAO,OAEZ,MACMovG,EAAY,CACfnC,YAFckC,EAAUpiF,WAGxB/sB,MAAOA,GAGV,GAAkB,SAAdA,EAAMlsB,IAAgB,CACvB,MACMu7H,EADeF,EAAUpxG,gBACWk9D,UACvC,CAAE+yC,OAAQ,oBACV,OAIH,GAAIqB,EAAsB,CAMvB,IAAInmH,EAEJ,OAPAmmH,EAAqBh4H,SAASutG,IAC3BwqB,EAAUxqB,EAAS7hG,OAAO9F,MAAQ2nG,EAAS73D,UAAU,IAMhDqiF,EAAUttD,OACf,IAAK,IACF54D,EACGkmH,EAAU/8D,IACV+8D,EAAUE,UACVF,EAAUhlH,MACVglH,EAAUE,UACVF,EAAUllH,KACb,MACH,IAAK,IACFhB,EACGkmH,EAAUhlH,MACVglH,EAAUE,UACVF,EAAU/8D,IACV+8D,EAAUE,UACVF,EAAUllH,KACb,MACH,IAAK,IACFhB,EACGkmH,EAAUllH,KACVklH,EAAUE,UACVF,EAAUhlH,MACVglH,EAAUE,UACVF,EAAU/8D,IACb,MACH,IAAK,IACFnpD,EACGkmH,EAAUllH,KACVklH,EAAUE,UACVF,EAAU/8D,IACV+8D,EAAUE,UACVF,EAAUhlH,MAGnBglH,EAAUlmH,OAASA,CACtB,CACH,CAEA,GAAI8W,EAAM0X,aAAc,CACrB,MACM63F,EADeJ,EAAUpxG,gBACQk9D,UACpC,CAAE+yC,OAAQ,kBACV,OACD,GAGF,GAAIuB,EAAmB,CACpB,MAAMC,EAAcxvG,EAAMtB,eAAezF,UACtCs2G,EAAkBxiF,YAGrBqiF,EAAUI,YAAcA,CAC3B,CACH,CAEAj6H,EAAOkD,KAAK22H,EAAU,IAGlB75H,CACV,CAEA,WAAAi3H,CAAYvnC,GACT,IAAIhyF,EAASgyF,EAIb,OAFIluF,MAAMC,QAAQiuF,KAAWhyF,EAASgyF,EAAShyF,QAExC5B,KAAKwD,MAAM,qBAAsB,CAAC5B,GAC5C,CAOA,YAAM02E,GAOH,MAAM6jD,EAAgBn8H,KAAKsmH,cAE3B,IAAK6V,EAAe,OAMpB,MAAMr5F,EAAM9iC,KAAK8iC,IACXo4F,EAAgB1uG,GAAGsW,EAAIg3F,cAE7BoB,EAAcrkE,UAGd,MAAM64B,EAAQljE,GAAGsW,EAAInuB,MACf4mH,EAAe/uG,GAAGsW,EAAI82F,aAE5BlqC,EAAMjV,aAAa,CAAE1xE,KAAM,SAC3BwyH,EAAa9gD,aAAa,CACvB1xE,KAAM,MACNi/C,SAAU,OAIb,MAAM0zE,EAAc17H,KAAK27H,iBAGnByC,EAAWjC,EAAc9vH,QACzB69G,EAAa19F,GAAGsW,EAAI8nF,WACpByT,EAAenU,EAAWphG,KAAK,CAAEmyG,WAAW,IAElD,IAAIqD,EAAgB,EAEpB,MAAMC,EAAsB,KACzBD,GAAiB,EACjB/C,EAAa9gD,aAAa,CACvB1xE,KAAM,SACNi/C,SAAUs2E,EAAgBD,EAAaz8H,QACxC,EAEC48H,EAAa,CAACr2G,EAAQggC,KACrB+hE,IAEDA,EAAWuU,UAAUt2G,EAAQ,YAC7B+hG,EAAWv7B,aACXu7B,EAAWt8F,WAAWzF,EAAQ,CAC3B6yG,QAAS,OACTH,UAAW1yE,IAEd+hE,EAAWt7B,gBAGd2vC,IAEAl9H,QAAQC,MAAM6mD,EAAW,EAEtBguD,EAAUn2G,KAAKO,GAAG0Q,MAClBytH,EAAc,CAACv2G,EAAQhU,EAAS,MACnC,GAAI+1G,EAAY,CAEb,MAAMyU,EAAW,GAEjBxqH,EAAOnO,SAAS7E,IACRA,GAAKyK,OAEQ8vH,EAAY/4H,QAC1B+e,GAAMA,EAAEiN,OAASjN,EAAEiN,MAAM1M,YAAc9gB,EAAIyK,OAC7C,GAEF+yH,EAASv3H,KAAKjG,EAAIyK,KAAO,KAAOzK,EAAIuC,SAAQ,IAS/CwmH,EAAWv7B,aACXu7B,EAAWt8F,WAAWzF,EAAQ,CAC3B6yG,QAAS,UACTH,UAAW8D,EAASv1H,KAAK,WAE5B8gH,EAAWt7B,eACXs7B,EAAWuU,UAAUt2G,EAAQ,gBAChC,GAuCGszG,EAAiBjvG,GAAGsW,EAAI62F,eACxBiF,EAAY,KAGf1D,EAAc1zC,SAGdkI,EAAMzU,eACNsgD,EAAatgD,eAEbwgD,EAAevnG,SAAS,IACxBunG,EAAev+C,OAEf,MAAM0W,EAAWs2B,EAAWphG,KAAK,CAAEmyG,WAAW,IAE9CC,EAAchnG,SAASl0B,KAAKm7H,YAAYvnC,IACxC5zF,KAAKuB,KAAK,OAAO,EAGds9H,EAAY,GAElB,IAAIC,GAAW,EA6Df,IAxDCT,GAAgB,IAAIr4H,SAAQ,CAAC5E,EAAMurB,KACjC,MAAMymB,EAAapzC,KAAK++H,kBAExBrD,EAAY11H,SAAS0b,IAClB,GAAKA,EAAEiN,OAAOlsB,IAEd,OAAQif,EAAEiN,MAAMlsB,KAIb,IAAK,SACF,GAAmC,iBAAxBrB,EAAKsgB,EAAEk6G,aAA2B,CAC1CxoF,EAAW1xB,EAAEiN,MAAM1M,aAChB7gB,EAAKsgB,EAAEk6G,cAAgB,IACxBh2H,QAAQ,aAAc,IAExB,KACH,CAEAwtC,EAAW1xB,EAAEiN,MAAM1M,YAAc7gB,EAAKsgB,EAAEk6G,aAExC,MAEH,QACGxoF,EAAW1xB,EAAEiN,MAAM1M,YAAc7gB,EAAKsgB,EAAEk6G,aAG9C,IAGH,IAAI9jH,GAAU,EACV6mH,EAAW,GAGf,MAAM7oH,EAAYqmH,EAAc9vG,YAAY+mB,GAjF7B,IAACjrB,EAmFhBrQ,EAAUhC,EAAUzB,OACpBsqH,EAAW7oH,EAAU3B,OAEjB2D,EAEDA,EAAUoyG,EAAWr9B,SAASzrF,EAAKnC,KAEnC6/H,GAAW,EAEXJ,EAAYt9H,EAAKnC,GAAI0/H,IAGpB7mH,GA/FYqQ,EAgGH/mB,EAAKnC,GA/FdirH,IAUDA,EAAW8U,aAAa72G,EAAQ,iBAChC+hG,EAAWv7B,aACXu7B,EAAWt8F,WAAWzF,EAAQ,CAC3B6yG,QAAS,GACTH,UAAW,KAEd3Q,EAAWt7B,gBAgFXiwC,EAAUz3H,KAAK,CAAEnI,GAAImC,EAAKnC,GAAImC,KAAMgyC,KAChC0rF,GAAW,CAAK,KAKrBA,EAwBF,OAVAF,SAEAzoB,EAAQ9yG,MAAM,CACXC,MAAOtD,KAAKwD,MAAM,gBAClBG,GAAI3D,KAAKwD,MAAM,MACfC,KAAMzD,KAAKwD,MACR,sGAUT,MAAMy7H,EAAc,CAAC,EAKf19G,EAAkBm6G,EAAY/4H,QAChC+e,GAAMA,GAAKA,EAAEiN,OAAO0X,cAAgB3kB,EAAEy8G,cAI1C,IAAIV,EACAhiC,EAAU,EAEd,IAEG,MAAMyjC,EAAa,GAgFnB,IA9EC39G,GAAmB,IAAIvb,SAAS0b,IAC9B,MAAMy9G,EAAez9G,EAAEiN,MAEjBywG,EAAgBD,EAAa9xG,eAEnC,IAAK+xG,EAAe,OAEpB,MAAMC,EAAeD,EAAc/yH,QAEnC,IAAKgzH,EAAc,OAEnB,MAAMC,EAAYH,EAAavuF,WAC1BuuF,EAAavuF,WAAW3uB,WACxBk9G,EAAar6G,OAAO7Y,KAGzBgzH,EAAYE,EAAalgI,IAAM,CAAC,EAuBhCigI,EAAW93H,KApBWqrB,WACnB,IACG,MAAM8c,QAAa8vF,EAAapzG,QAAQ,CACrCL,MAAO,CAAC,EACRpG,UAAU,KAEA+pB,EAAKnuC,MAAQmuC,GAEjB,IAAIvpC,SAASwQ,IAGnByoH,EAAYE,EAAalgI,IACtBuX,EAAIkL,EAAEy8G,YAAYl8G,aACjBzL,EAAI8oH,EAAU,GAExB,CAAE,MAAOn+H,GACNE,QAAQC,MAAMH,EACjB,GAGao+H,GAAgB,UAG7B/9H,QAAQsY,IAAIolH,GAGlBL,EAAU74H,SAAS5E,IAChB,MAAMgyC,EAAahyC,EAAKA,KAGxB8oH,EAAWv7B,aACXu7B,EAAWt8F,WAAWxsB,EAAKnC,GAAI,CAC5B+7H,QAAS,cACTH,UAAW,KAEd3Q,EAAWt7B,gBAGVrtE,GAAmB,IAAIvb,SAAS0b,IAE9B,MAAMy9G,EAAez9G,EAAEiN,MACjB2wG,EAAYH,EAAavuF,WAC1BuuF,EAAavuF,WAAW3uB,WACxBk9G,EAAar6G,OAAO7Y,KACnBtK,EACHs9H,EAAYE,EAAalgI,IACtBm0C,EAAW+rF,EAAal9G,aAGzBtgB,IACF+8H,EAAYt9H,EAAKnC,GAAI,CAAC,CAAE2M,KAAMuzH,EAAal9G,cAC3C68G,GAAW,GAGd1rF,EAAW+rF,EAAal9G,YAAc,CAAC,EACvCmxB,EAAW+rF,EAAal9G,YAAYq9G,GAAa39H,CAAI,GACtD,KAGAm9H,EAUF,OATA3oB,EAAQ9yG,MAAM,CACXC,MAAOtD,KAAKwD,MAAM,gBAClBG,GAAI3D,KAAKwD,MAAM,MACfC,KAAMzD,KAAKwD,MACR,2GAGNo7H,IAMH,MAAM1sE,EAAW,GACXstE,EAAe,CAACpB,EAAUqB,EAAa9jG,EAAS+hG,IACnD,IAAIl8H,SAAQ,CAAC9B,EAASoK,KACnB6xB,EAAQ45B,iBAAiBkqE,GAEHhtG,WACnB,IACG,MAAMvuB,QAAek6H,EAASv/C,YAAY,CACvC1nC,MAAOsoF,IAEJC,EAAex7H,EAAOiQ,OAG5B1U,OAAOD,KAAKkgI,GAAc15H,SAAS25H,IAChC,MAAMr+H,EAAQo+H,EAAaC,GAEvBr+H,GACDk9H,EACGmB,EACAr+H,EAAMoC,SAAWpC,EAAMw/G,YAAcx/G,EAE3C,IAGH,MAAMs+H,EAAa17H,EAAO9C,KACpBy+H,EAAsB,GAE5BpgI,OAAOD,KAAKogI,GAAY55H,SAAS25H,IAC9BE,EAAoBz4H,KACjB,IAAI5F,SAAQ,CAAC9B,EAASoK,KAEI2oB,WACpB,UACSkJ,EAAQ85B,cACXmqE,EAAWD,IAnS1Bx3G,EAsSqBw3G,EArShCzV,IAEDA,EAAW8U,aAAa72G,EAAQ,YAChC+hG,EAAWuU,UAAUt2G,EAAQ,YAC7B+hG,EAAWv7B,aACXu7B,EAAWt8F,WAAWzF,EAAQ,CAC3B6yG,QAAS,OACTH,UAAW,KAEd3Q,EAAWt7B,gBAGd2vC,IA0R2B7+H,GACH,CAAE,MAAOyB,GACNq9H,EAAWmB,EAAUx+H,GACrB2I,EAAO,mBACV,CA3SV,IAACqe,CA2SS,EAGH23G,EAAgB,IAErB,IAGJ,MAAMC,EAA0BttG,UAC7B,UACSjxB,QAAQsY,IAAI+lH,GAElBJ,EAAYz5H,SAASwQ,IAElBilF,IACIA,EA7JN,IA6JiC,GAC5Bz7F,KAAKw9H,yBACFC,EACAoB,EAAUj9H,OACV65F,EAEN,IAGCA,IAAYiiC,IACbkB,IACA1D,EAAcrkE,WAGjBn3D,GACH,CAAE,MAAOyB,GAKN2I,EAAO3I,EACV,SAGG4+H,GACT,CAAE,MAAO5+H,GACNE,QAAQC,MAAMH,GACd2I,EAAO3I,EACV,GAGH6+H,EAAe,IAGrBnB,EAAU74H,SAAS5E,IAChB8wD,EAAS9qD,KAAK,CAAEnI,GAAImC,EAAKnC,GAAImC,KAAMA,EAAKA,MAAO,IAKlD,MAAM6+H,EAAiB,GACjBvC,EAAQxrE,EAAStwD,OAEvB,IAAI+qB,EAAQ,EAEZ,KAAOulC,EAAStwD,QACbq+H,EAAetzG,GAASulC,EAAS3/B,OAAO,EA3MxB,IA6MhB5F,IAIH,MAAMuzG,EAAwB,CAC3BC,EACAC,EACAC,EACA3C,IAEA,IAAIl8H,SAAQ,CAAC9B,EAASoK,KAWI2oB,WACpB,UACS+sG,EACHpB,EACA+B,EACAE,EACA3C,GAIH,MAAM4C,EAAcF,EAAiBj5H,QAGjCm5H,GAAa1+H,aACRs+H,EACHI,EACAF,EACAC,EACA3C,GAIHh+H,GAEN,CAAE,MAAOyB,GAEN2I,EAAO3I,EACV,GAGHoP,EAAgB,IAMtBktH,EAAkB,IAAI1lH,KAEtB,MAAMgP,EAAOk5G,EAAe94H,cAGtB+4H,EAAsBn5G,EAAMk5G,EAAgBjgI,KAAK+iB,KAAM26G,EAChE,CAAE,MAAOv8H,GAENg1G,EAAQ9yG,MAAM,CACXC,MAAOtD,KAAKwD,MAAM,0BAClBG,GAAI3D,KAAKwD,MAAM,MACfC,KAAMzD,KAAKwD,MAAM,+CAGpBo7H,IACAv9H,QAAQC,MAAMH,EACjB,CACH,CAGA,YAAAo/H,GACG,MAAMjrG,EAASt1B,KAAKunB,gBAAgBE,mBAC9B+4G,EAAalrG,GAAQhN,YAC3B,GAAKk4G,EAEL,MAAO,CACJz9G,KAAM,SACN4vF,OAAO,EACPrmB,QAAQ,EACRzwE,KAAM,CACHkH,KAAM,UACNkpE,KAAM,CACH,CAAC,EACD,CACGlpE,KAAM,SACNw+B,MAAO,GACPx0B,IAAK,oBACLhkB,KAAM,OACNgV,KAAM,uBACNiP,MAAO,KACJhtB,KAAKygI,gBAAgB,KAKjC3yH,KAAM,CACHiV,KAAM,WACN9jB,GAAI,OACJyuD,UAAU,EACVnM,MAAO,IACPwO,OAAQ,IACR35C,SAAU,CACP,CAAE5S,MAAOxD,KAAKwD,MAAM,eAAgBuF,KAAM,SAC1C,CACGvF,MAAO,KACPuF,KAAM,OACNsI,MAAOmvH,EAAW7+H,MAAQ6+H,EAAWvhI,IAExC,CACGuE,MAAO,QACPuF,KAAM,OACNsI,MAAOikB,EAAOhO,WAAWyhB,YAAYy3F,MAKpD,CAEA,cAAAnF,GACG,MAAMz7D,EAAK5/D,KAAKugI,eAChBvgI,KAAK0gI,YAAc1gI,KAAKO,GAAG0Q,MAAM2uD,GAAGA,GACpC5/D,KAAK0gI,YAAY71C,KAAKr+D,GAAGxsB,KAAK8iC,IAAI+2F,kBAAkBhwC,MAAO,CACxDp9D,IAAK,OAEX,CAEA,cAAAg0G,GACGzgI,KAAK0gI,aAAaxjD,MACrB,CAEA,eAAA6hD,GACG,MAAM76H,EAAS,CAAC,EAGVwkB,EAAK1oB,KAAKunB,eACV40G,EAAgBn8H,KAAKsmH,cAGrBhxF,EAAS5M,GAAIjB,mBACbk5G,EAAoB,GAE1B,IAAI98F,EACA87E,EA2BJ,OAzBIrqF,GAAQhN,cACTub,EAAavO,EAAOhO,WAEpBq5G,EAAkBv5H,QACZ+0H,EAAc7xG,QACb5I,GAAMA,EAAE2kB,cAAgB3kB,EAAEC,SAASC,aAAeiiB,EAAW5kC,MAIpE0gH,EAAarqF,EAAOhN,aAInBub,GAAc88F,EAAkB/+H,QAAU+9G,GAC3CghB,EAAkB36H,SAAS0b,IACxB,MAAMo+F,EAAcp+F,EAAEkvB,WACjBlvB,EAAEkvB,WAAW3uB,WACb4hB,EAAW53B,KAEhB/H,EAAOwd,EAAEO,YAAc/d,EAAOwd,EAAEO,aAAe,CAAC,EAChD/d,EAAOwd,EAAEO,YAAY69F,GAClBH,EAAWG,IAAgBH,EAAW1gH,EAAE,IAI1CiF,CACV,oBCx3DH,MAAMm1G,EAAgC,EAAQ,OAE9C15G,EAAOC,QAAU,cAAuC,EAGrD,WAAAE,CAAYo0G,EAAU/3E,EAAQ2G,GAC3B/iC,MAAMm0G,EAAU/3E,GAAU,mBAAmB+3E,EAASj1G,KAAM6jC,EAC/D,CAEA,EAAA88B,GACG,MAAMj+C,EAAW3hB,KAAK2hB,SAEtB,OAAO5hB,MAAM6/D,GAAG,CACb78C,KAAM,QACNha,KAAM4Y,EAAS+jD,SACfk7D,MAAO,CACJ3vG,MAAO,EACPsN,KAAM5c,EAASmkD,UACfjZ,IAAKlrC,EAASokD,UAEjB86D,MAAO,CACJtxD,SAAU5tD,EAASgkD,SACd,yBAAyBhkD,EAASkkD,kCAClC,IAERi7D,OAAQn/G,EAASgkD,SACZ,CACG4J,SAAU,yBAAyB5tD,EAASkkD,kCAC5CtgE,OAAQ,IAEX,KACLw7H,OAAQ,CACL,CACGC,MAAO,GACP3vH,MAAO,UACPiiE,MAAO,WAEV,CACG0tD,MAAO,GACP3vH,MAAO,WACPiiE,MAAO,YAGbvjB,OAAQpuC,EAASikD,aAGvB,CAEA,UAAMtlE,CAAKC,SACFR,MAAMO,KAAKC,EACpB,CAEA,MAAAygG,GACGjhG,MAAMihG,QACT,oBCtDH,MAAMqY,EAAgC,EAAQ,OAE9C15G,EAAOC,QAAU,cAAsC,EAGpD,WAAAE,CAAYo0G,EAAU/3E,EAAQ2G,GAC3B/iC,MAAMm0G,EAAU/3E,GAAU,kBAAkB+3E,EAASj1G,KAAM6jC,EAC9D,CAEA,EAAA88B,GACG,MAAMj+C,EAAW3hB,KAAK2hB,SAEtB,OAAO5hB,MAAM6/D,GAAG,CACb78C,KAAM,QACNha,KAAM4Y,EAASskD,QACfg7D,OAAQt/G,EAASukD,UACjB70D,MAAO,UACPiiE,MAAO,UACPstD,MAAO,CACJ3vG,MAAO,EACPsN,KAAM5c,EAASmkD,UACfjZ,IAAKlrC,EAASokD,UAEjB86D,MAAO,CACJtxD,SAAU5tD,EAASgkD,SACd,yBAAyBhkD,EAASkkD,kCAClC,IAERi7D,OACwB,QAArBn/G,EAASskD,SAAsBtkD,EAASskD,QAInCtkD,EAASgkD,SACT,CACG4J,SAAU,yBAAyB5tD,EAASkkD,kCAC5CtgE,OAAQ,IAEX,KARAoc,EAASgkD,SACN,yBAAyBhkD,EAASkkD,kCAClC,GAOX9V,OAAQpuC,EAASouC,QAGvB,CAEA,UAAMzvD,CAAKC,SACFR,MAAMO,KAAKC,EACpB,CAEA,MAAAygG,GACGjhG,MAAMihG,QACT,oBClDH,MAAM0Z,EAA2B,EAAQ,OAEzC/6G,EAAOC,QAAU,cAAmC86G,EACjD,WAAA56G,CAAYo0G,EAAU/3E,EAAQ2G,GAC3B/iC,MAAMm0G,EAAU/3E,GAAU,eAAe+3E,EAASj1G,KAAM6jC,EAC3D,CAEA,UAAMxiC,CAAKC,EAAI0oE,SACNlpE,MAAMO,KAAKC,EAAI0oE,GAErB,MAAMi4D,EAAa10G,GAAGxsB,KAAK8iC,IAAI0S,WACzB2gE,EAAUn2G,KAAKO,GAAG0Q,MAEpBiwH,GAAY/qB,EAAQ56B,OAAO2lD,EAAY/qB,EAAQxmB,aAEnD,MAAMukB,EAAWl0G,KAAK+iB,KAChB2F,EAAK1oB,KAAKunB,eAEhB,GAAImB,EAAI,CACL,MAAMy4G,EAAa,CAChB,eACA,cACA,SACA,SACA,SACA,mBAGH,CAAC,eAAgB,eAAen7H,SAASvD,IAInCimB,EAAGjB,sBACDhlB,KAAQimB,EAAGjB,mBAAmBi/F,SAAW,MAE3CxS,EAASnkF,SAAS,CACfC,QAAStH,EAAGjB,mBACZwI,UAAWxtB,EACXytB,SAAU,KACPgkF,EAAS4D,aAAa,GAE1B,IAGRqpB,EAAWn7H,SAASo7H,IACjBltB,EAASnkF,SAAS,CACfC,QAAStH,EACTuH,UAAWmxG,EACXlxG,SAAU,KACPgkF,EAAS4D,aAAa,GAE1B,GAER,CAEA5D,EAAS4D,aACZ,CAEA,MAAA9W,GACGjhG,MAAMihG,QACT,oBC5DH,MAAMrrF,EAAkB,WAExBhW,EAAOC,QAAU,cAA4C+V,EAC1D,WAAA7V,CAAYo0G,EAAU/3E,EAAQ2G,GAC3B/iC,MACGm0G,EACA/3E,GAAU,wBAAwB+3E,EAASj1G,KAC3CQ,OAAO2vB,OACJ,CACGiyG,eAAgB,IAEnBv+F,GAGT,CAEA,EAAA88B,CAAG0hE,GACA,MAAMxsB,EAAM/0G,MAAM6/D,GAAG,CAClBngE,OAAO2vB,OAAO,CAAEnwB,GAAIe,KAAK8iC,IAAIu+F,gBAAkBC,GAAoB,CAAC,KAKvE,cAFOxsB,EAAI/rG,KAEJ+rG,CACV,CAEA,UAAMx0G,CAAKC,SACFR,MAAMO,KAAKC,EACpB,CAEA,MAAAygG,GACGjhG,MAAMihG,SAIN,MAAMkT,EAAWl0G,KAAK+iB,KAEtBmxF,EAASqtB,SAAU,EAEnBvhI,KAAK83G,YAAY5D,EAASnsG,OAAOgwG,aAEpC,CAEA,WAAAD,CAAYG,GACT,MAAMupB,EAAkBh1G,GAAGxsB,KAAK8iC,IAAIu+F,gBAC9BI,EAAkBj1G,GAAGxsB,KAAK8iC,IAAI0S,WAEhCgsF,GAAiBpgI,MAAMogI,EAAgBpgI,KAAKs5E,KAAKu9B,GAErDxwG,YAAW,KACRg6H,GAAiBhhD,SACjB+gD,GAAiB/gD,QAAQ,GACzB,IACN,oBCrDH,MAAM44B,EAAgC,EAAQ,OAE9C15G,EAAOC,QAAU,cAAuC,EAGrD,WAAAE,CAAYo0G,EAAU/3E,EAAQ2G,GAC3B/iC,MAAMm0G,EAAU/3E,GAAU,mBAAmB+3E,EAASj1G,KAAM6jC,EAC/D,CAEA,EAAA88B,GACG,MAAMj+C,EAAW3hB,KAAK2hB,SAEtB,OAAO5hB,MAAM6/D,GAAG,CACb78C,KAAM,QACNha,KAAM4Y,EAASolD,SACfk6D,OAAQt/G,EAASqlD,WACjB31D,MAAO,UACPiiE,MAAO,UACPstD,MAAO,CACJ3vG,MAAO,EACPsN,KAAM5c,EAASmkD,UACfjZ,IAAKlrC,EAASokD,UAEjB86D,MAAO,CACJtxD,SAAU5tD,EAASgkD,SACd,yBAAyBhkD,EAASkkD,kCAClC,IAERi7D,OAAQn/G,EAASgkD,SACZ,CACG4J,SAAU,yBAAyB5tD,EAASkkD,kCAC5CtgE,OAAQ,IAEX,KACLwqD,OAAQpuC,EAASikD,aAGvB,oBCrCH,MAAMyzC,EAAgC,EAAQ,OAE9C15G,EAAOC,QAAU,cAAsC,EAGpD,WAAAE,CAAYo0G,EAAU/3E,EAAQ2G,GAC3B/iC,MAAMm0G,EAAU/3E,GAAU,kBAAkB+3E,EAASj1G,KAAM6jC,EAC9D,CAEA,EAAA88B,GACG,MAAMj+C,EAAW3hB,KAAK2hB,SAEtB,OAAO5hB,MAAM6/D,GAAG,CACb78C,KAAM,QACNha,KAAM4Y,EAASulD,QACf71D,MAAO,UACPiiE,MAAO,UACPwtD,OAAQn/G,EAASgkD,SACZ,CACGpkB,MAAOvhD,KAAK+iB,KAAKhb,OAAO4Z,SAASqyC,WACjCub,SAAU,0BAA0B5tD,EAASkkD,mCAEhD,KACL67D,aAAc,0BAA0B//G,EAASwlD,kCACjDw6D,OAAQ,EACR5xE,OAAQpuC,EAASouC,QAGvB,oBC5BH,MAAMp6C,EAAkB,WAExBhW,EAAOC,QAAU,cAAqC+V,EACnD,WAAA7V,CAAYo0G,EAAU/3E,EAAQ2G,GAC3B/iC,MACGm0G,EACA/3E,GAAU,iBAAiB+3E,EAASj1G,KACpCQ,OAAO2vB,OACJ,CACGwyG,QAAS,IAEZ9+F,GAGT,CAEA,EAAA88B,GACG,MAAMs0C,EAAWl0G,KAAK+iB,KAChB+xF,EAAM/0G,MAAM6/D,GAAG,CAClB,CACG3gE,GAAIe,KAAK8iC,IAAI8+F,QACb7+G,KAAM,WACNhiB,MAAOmzG,EAASlsC,cAChBL,YAAausC,EAAS1sC,mBACtBzX,OAAQ/vD,KAAK2hB,SAASouC,OACtB3uD,KAAMpB,KAAK6hI,iBACX5gI,GAAI,CACD6gI,YAAa,CAAC7iI,EAAIyM,EAAKihB,KACpB3sB,KAAK+hI,WAAWr2H,EAAIjI,KAAM,IAAIsU,KAAO,EAWxCiqH,cAAgBv3G,IACbzqB,KAAKiiI,cAAcx3G,EAAM,MAQrC,cAFOqqF,EAAI/rG,KAEJ+rG,CACV,CAEA,UAAMx0G,CAAKC,SACFR,MAAMO,KAAKC,GAEjB,MAAM2zG,EAAWl0G,KAAK+iB,KAEtBmxF,EAASguB,WAAahuB,EAASguB,YAAc,CAAC,EAE9C,MAAMp/F,EAAM9iC,KAAK8iC,IACXq/F,EAAW31G,GAAGsW,EAAI8+F,SAExB,GAAIO,EAAU,CACX,MAAMC,EAAeD,EAASv4C,UAAU,CAAE7mE,KAAM,SAE5Cq/G,IAEIluB,EAASguB,WAAWG,iBACtBnuB,EAASguB,WAAWG,eACjBD,EAAahhI,KAAK+pB,YACf,kBACA,CAACV,EAAOrpB,EAAMkhI,KACK,WAAZA,GACDtiI,KAAKuiI,cAAc93G,GAAQrpB,GAAQ,CAAC,GAAGqC,KAC1C,KAKZL,MAAMm4E,OAAO6mD,EAAch/H,MAAMusF,aAEvC,CAEA,MAAM59D,EAAK/xB,KAAKunB,eAEXwK,IAKAmiF,EAASguB,WAAW/pD,SACtB+7B,EAASguB,WAAW/pD,OAASpmD,EAAG9wB,GAAG,UAAU,IAC1CjB,KAAKwiI,oBAGNtuB,EAASguB,WAAW9iD,SACtB80B,EAASguB,WAAW9iD,OAASrtD,EAAG9wB,GAAG,UAAU,IAC1CjB,KAAKwiI,oBAGNtuB,EAASguB,WAAWxzH,SACtBwlG,EAASguB,WAAWxzH,OAASqjB,EAAG9wB,GAAG,UAAU,IAC1CjB,KAAKwiI,oBAGNtuB,EAASguB,WAAWp3G,WACtBopF,EAASguB,WAAWp3G,SAAWiH,EAAG9wB,GAAG,YAAY,IAC9CjB,KAAKwiI,oBAGXL,EAASvrH,UACZ,CAEA,cAAAirH,GACG,MAAM3tB,EAAWl0G,KAAK+iB,KAChBgP,EAAK/xB,KAAKunB,eAEhB,IAAKwK,EAAI,OAAO,KAEhB,MAAM0wG,EAAUvuB,EAASrsC,eACnB66D,EAAaxuB,EAASpsC,kBACtB66D,EAAUzuB,EAASnsC,eAEzB,IAAK06D,IAAYC,EAAY,OAAO,KAEpC,MAAME,EAAcH,EAAQxgH,WACtB4gH,EAAiBH,EAAWzgH,WAC5B6gH,EAAcH,EAAUA,EAAQ1gH,WAAa,KAC7C8gH,EAAahxG,EAAGmB,UAChB8vG,EAAW,GA6BjB,OA3BAD,EAAW/8H,SAAQ,CAACojB,EAAMuD,KACvB,GAAIvD,EAAKy5G,GAAiB,CACvB,MAAM5lG,EAAOi3E,EAASlsC,cAAcl/C,MAAMmU,GAChCA,EAAK5rB,QAAU+X,EAAKw5G,KAExBxhI,EAAO,CACVnC,GAAImqB,EAAKnqB,GACTgkI,QAAShmG,EAAOA,EAAKh+B,GAAK,EAC1BgZ,KAAMmR,EAAK05G,GAAe,IAAI/qH,KAAKqR,EAAK05G,IAAgB,KACxDI,aAAc,IAAInrH,KAAKqR,EAAiB,YACxC3lB,KAAM2lB,EAAKy5G,IAGdG,EAAS57H,KAAKhG,EACjB,KAGH4hI,EAAStiH,MAAK,SAAUE,EAAGC,GACxB,OAAIiiH,EACM,IAAI/qH,KAAK6I,EAAE3I,MAAMoB,UAAY,IAAItB,KAAK8I,EAAE5I,MAAMoB,UAGlD,IAAItB,KAAK6I,EAAEsiH,cAAc7pH,UACzB,IAAItB,KAAK8I,EAAEqiH,cAAc7pH,SAElC,IAEO2pH,CACV,CAEA,cAAAR,GACG,MAAMtuB,EAAWl0G,KAAK+iB,KAElBmxF,EAASivB,kBAAkBt8H,aAAaqtG,EAASivB,kBAErDnjI,KAAKuwF,OAEL,MAAMztD,EAAM9iC,KAAK8iC,IAEjBoxE,EAASivB,iBAAmB17H,YAAW,KACpC,MAAM06H,EAAW31G,GAAGsW,EAAI8+F,SAExB,IAAKO,EAAU,OAGf,MAAMC,EAAeD,EAASv4C,UAAU,CAAE7mE,KAAM,SAE5Cq/G,GAAcA,EAAa5wH,WAG/B,MAAM4xH,EAAcpjI,KAAK6hI,iBAErBuB,GACDjB,EAASv3H,MAAMw4H,GAIdhB,GAAcA,EAAaiB,SAAS,EAAG5wF,OAAO6wF,yBAE3CpvB,EAASivB,iBAEhBnjI,KAAK2wF,OAAO,GACZ,GACN,CAEA,UAAAoxC,CAAWwB,EAAaC,GACrBxjI,KAAKygH,SAAS8iB,EAAaC,EAC9B,CAEA,mBAAMjB,CAAc93G,EAAO84G,GACxB,MAAMrvB,EAAWl0G,KAAK+iB,KAChB1W,EAAQ6nG,EAAS7nG,QAEvB,IAAKA,EAAO,OAEZ,MAAMo3H,EAAevvB,EAASpsC,kBAE9B,IAAK27D,EAAc,OAEnB,MAAMl+H,EAAS,CAAC,EAIhB,OAFAA,EAAOk+H,EAAaxhH,YAAcshH,GAAe,SAEpCl3H,EAAM+yE,OAAO30D,EAAOllB,EACpC,CAEA,mBAAM08H,CAAcx3G,GACjB,MACMpe,EADWrM,KAAK+iB,KACC1W,QAEvB,GAAKA,EAEL,aAAaA,EAAMqC,OAAO+b,EAC7B,CAEA,IAAA8lE,GACG,MAAMztD,EAAM9iC,KAAK8iC,IACXq/F,EAAW31G,GAAGsW,EAAI8+F,SAExB,IAAKO,EAAU,OAEf,MAAMC,EAAeD,EAASv4C,UAAU,CAAE7mE,KAAM,SAE3Cq/G,IAELA,EAAavrE,UAETurE,EAAa3nD,cACd2nD,EAAa3nD,aAAa,CAAE1xE,KAAM,SACxC,CAEA,KAAA4nF,GACG,MAAM7tD,EAAM9iC,KAAK8iC,IACXq/F,EAAW31G,GAAGsW,EAAI8+F,SAExB,IAAKO,EAAU,OAEf,MAAMC,EAAeD,EAASv4C,UAAU,CAAE7mE,KAAM,SAE3Cq/G,IAELA,EAAa56C,SAET46C,EAAannD,cAAcmnD,EAAannD,eAC/C,CAEA,cAAMwlC,CAAS8iB,EAAaC,GACzB,IAAKD,EAAa,OAElB,MAAMxxG,EAAK/xB,KAAKunB,eAEhB,IAAKwK,EAAI,OAET,MAAMmiF,EAAWl0G,KAAK+iB,KAChB1W,EAAQ6nG,EAAS7nG,QACjB4pG,EAAKj2G,KAAKO,GAEhB,IAAK8L,EAUF,YATA4pG,EAAGtsG,OAAO2sB,QACP,CAAC,EACD,CACG5yB,QACG,iEACH85B,SAAU02E,EAAS1wG,QAO5B,MAAMo+H,EAAU,CAAC,EACXhpE,EAAYs7C,EAASrsC,eAEvBjP,IAAWgpE,EAAQhpE,EAAU32C,YAAcg0F,EAAG7wG,QAAQvC,YAE1D,MAAM4gI,EAAevvB,EAASpsC,kBAE1B27D,IAAc7B,EAAQ6B,EAAaxhH,YAAcshH,GAErD,MAAM/0C,EAAY0lB,EAASnsC,eAEvBymB,IAAWozC,EAAQpzC,EAAUvsE,YAAcuhH,GAG/C,MAAMz5G,EAASgI,EAAGtK,mBAElB,GAAIsC,GAAQzB,YAAa,CACtB,MAAMub,EAAa9Z,EAAOzC,WACpBK,EAAYoK,EAAGpK,UAEjBkc,GAAclc,IACfi6G,EAAQj6G,EAAU1F,YAAc,CAAC,EACjC2/G,EAAQj6G,EAAU1F,YAAY4hB,EAAW53B,MACtC8d,EAAOzB,YAAYrpB,GAE5B,CAEA,aAAaoN,EAAM8rE,OAAOypD,EAC7B,iEC9SY,MAAMjsH,UAAwB,IAC1C,WAAA7V,CAAYo0G,EAAU/3E,EAAQ2G,GAC3B/iC,MAAMo8B,GAAU,UAAU+3E,EAASj1G,KAAM6jC,GAEzC9iC,KAAK+iB,KAAOmxF,EACZl0G,KAAK2hB,SAAWuyF,EAASvyF,SACzB3hB,KAAKO,GAAK2zG,EAAS3zG,GACnBP,KAAKunB,eAAiB2sF,EAAS1zF,iBAAmB0zF,EAAS3sF,eAE3DvnB,KAAKk2B,SAAW,GAShBl2B,KAAKi3H,gBAAkB,KAIvBj3H,KAAK0jI,wBAA0B,IAGlC,CAOA,iBAAIpd,GACD,OAAOtmH,KAAKO,GAAGoL,WAAW3L,KAAKi3H,gBAClC,CAMA,yBAAIpR,GACD,OAAO7lH,KAAKO,GAAGmnB,mBAAmB1nB,KAAK0jI,wBAC1C,CAEA,EAAA9jE,CAAG+jE,EAAe,IAEf,MAAM7uB,EAAM,CACT71G,GAAIe,KAAK8iC,IAAI0S,UACbzyB,KAAM,SACNha,KAAM,QACNw9E,KAAMo9C,GAST,OAFK7uB,EAAIvuB,KAAK3kF,SAAQkzG,EAAI/kD,OAAS,IAE5B+kD,CACV,CAEA,UAAMx0G,CAAKC,GACRP,KAAKO,GAAKA,CACb,CAOA,kBAAAkmH,CAAmBl/F,GAChBvnB,KAAK0jI,wBAA0Bn8G,GAAgBtoB,EAClD,CAEA,UAAAs1D,CAAWzvC,GACR9kB,KAAKi3H,gBAAkBnyG,GAAQ7lB,EAClC,CAcA,QAAA8wB,CAASkG,GACN,IAAKA,IAAQA,EAAIjG,UAAYiG,EAAI/F,SAAU,OAG3C,MAAMgG,EAAWl2B,KAAKk2B,SACPA,EAASvzB,QACpBtD,GAAMA,EAAE2wB,UAAYiG,EAAIjG,SAAW3wB,EAAE4wB,YAAcgG,EAAIhG,YAI/CruB,SAETs0B,EAAS9uB,KAAK,CACX4oB,QAASiG,EAAIjG,QACbC,UAAWgG,EAAIhG,UACfC,SAAU+F,EAAI/F,WAIjB+F,EAAIjG,QAAQ/uB,GAAGg1B,EAAIhG,UAAWgG,EAAI/F,UAExC,CAMA,WAAA0zG,GACG5jI,KAAKk2B,SAASlwB,SAASiwB,IACpBA,EAAIjG,QAAQoG,eAAeH,EAAIhG,UAAWgG,EAAI/F,SAAS,IAG1DlwB,KAAKk2B,SAAW,EACnB,CAWA,6BAAM2tG,CAAwBC,EAAcp7G,GACzC,GAAK1oB,KAAK+jI,aAAqB,MAANr7G,EAMzB,OAFIA,EAAGX,aAAeW,EAAGxC,eAAeC,kBAAkBuC,EAAGoC,iBAEhD,IAAItpB,SAAS9B,IACvB,GAAIgpB,EAAGX,aAAeW,EAAGxC,eAAe4B,YAGrC,YAFApoB,IAKH,MAAMskI,EAAWC,aAAY,KACtBv7G,EAAGX,aAAeW,EAAGxC,eAAe4B,cACrCo8G,cAAcF,GAEdtkI,IACH,GACAokI,EAAa,GAEtB,CAMA,MAAA9iC,GAEG,GAAIhhG,MAAM+iB,MAAMpB,UAAUoZ,OAAQ,CAE/B,IAAIK,EAAOp7B,KAAKO,GAAGw6B,OAAO/6B,KAAK+iB,KAAKpB,SAASoZ,QACzCK,EAAKzZ,SAASmc,QACf1C,EAAK2hD,cAEX,CAGA,MAAMr0D,EAAK1oB,KAAKunB,eAEXmB,IAEDhjB,MAAMC,QAAQ+iB,GACfA,EAAG1iB,SAASojB,IACLA,EAAKrB,aAAeqB,EAAKlD,eAAeC,YAEzCiD,EAAK0B,UAAU,IAGjBpC,EAAGX,aAAeW,EAAGxC,eAAeC,YAErCuC,EAAGoC,WAEZ,oBCnMH,MAAM4vF,EAA2B,EAAQ,OAEzC/6G,EAAOC,QAAU,cAAkD,EAGhE,WAAAE,CAAYo0G,EAAU/3E,EAAQ2G,GAC3B/iC,MACGm0G,EACA/3E,GAAU,8BAA8B+3E,EAASj1G,KACjDQ,OAAO2vB,OACJ,CACG+nB,MAAO,IAEVrU,IAIN9iC,KAAKmkI,aAAe,KACpBnkI,KAAKokI,eAAiB,KAGtBpkI,KAAK+iG,kBAAoBmR,EAAS3zG,GAAGyzB,iBAClC,GAAGkgF,EAASj1G,sBAGfe,KAAKqkI,yBACR,CAEA,EAAAzkE,GACG,MAAM0kE,EAA0B,CAC7BrlI,GAAIe,KAAK8iC,IAAIqU,MACbp0B,KAAM,YACN0pE,MAAO,CACJ,CACGt1C,MAAO,OACPp0B,KAAM,SACNwjE,KAAM,CACH,CACGxjE,KAAM,QACNvf,MAAOxD,KAAKwD,MAAM,uBAM3BsxG,EAAM/0G,MAAM6/D,GAAG,CAAC0kE,IAStB,OAPAA,EAAwB73C,MAAMrlF,KAC3B3H,OAAO2vB,OAAO,CAAE+nB,MAAO,MAAQn3C,KAAKukI,YAAY3kE,MAChDngE,OAAO2vB,OAAO,CAAE+nB,MAAO,QAAUn3C,KAAKwkI,cAAc5kE,cAGhDk1C,EAAI/rG,KAEJ+rG,CACV,CAEA,UAAMx0G,CAAKC,EAAI0oE,SACNlpE,MAAMO,KAAKC,EAAI0oE,SAEfznE,QAAQsY,IAAI,CACf9Z,KAAKukI,YAAYjkI,KAAKC,EAAI0oE,GAC1BjpE,KAAKwkI,cAAclkI,KAAKC,EAAI0oE,KAG/BjpE,KAAKqkI,0BAEL,MAAM37G,EAAK1oB,KAAKunB,eAEhB,GAAImB,EAAI,CACL,MAAMwrF,EAAWl0G,KAAK+iB,KAGtBmxF,EAASnkF,SAAS,CACfC,QAAStH,EACTuH,UAAW,WACXC,SAAU,IAAMlwB,KAAKykI,gBAGxBvwB,EAASnkF,SAAS,CACfC,QAAStH,EACTuH,UAAW,kBACXC,SAAU,IAAMlwB,KAAKykI,gBAGxB,CAAC,eAAgB,eAAez+H,SAASvD,IACtCyxG,EAASnkF,SAAS,CACfC,QAAStH,EACTuH,UAAWxtB,EACXytB,SAAU,IAAIzV,IAAMza,KAAKykI,eAAehqH,IACzC,GAER,CAEAza,KAAKykI,aACR,CAEA,MAAAzjC,GACGjhG,MAAMihG,SAENhhG,KAAKqkI,0BACLrkI,KAAKykI,aACR,CAEA,eAAIF,GACD,OAAQvkI,KAAKmkI,aACVnkI,KAAKmkI,cACLnkI,KAAK+iB,KACDJ,QACAmG,MAAM7iB,GAAkB,OAAZA,GAAG2F,OACf4pC,WACV,CAEA,iBAAIgvF,GACD,OAAQxkI,KAAKokI,eACVpkI,KAAKokI,gBACLpkI,KAAK+iB,KACDJ,QACAmG,MAAM7iB,GAAkB,SAAZA,GAAG2F,OACf4pC,WACV,CAEA,WAAAivF,CAAYr5G,GACT,MAAM1C,EAAK1oB,KAAKunB,eACVub,EAAM9iC,KAAK8iC,IACXglF,EAASt7F,GAAGsW,EAAIqU,QAElBzuB,IACI0C,IAAUA,EAAW1C,EAAGJ,aAIzB8C,GACA1C,EAAGX,aAAeW,EAAGxC,eAAeC,YAClCuC,EAAGX,aAAeW,EAAGxC,eAAe2B,cAQ7B7nB,KAAK+iG,kBAAkBjrF,QAAQsT,IAI5C08F,GAAQt6B,UAAU,MAClBxtF,KAAKukI,aAAavjC,aAElB8mB,GAAQt6B,UAAU,QAClBxtF,KAAKwkI,eAAexjC,YAdjB8mB,GAAQt6B,UAAU,OAgB3B,CAEA,uBAAA62C,GACG,MAAM37G,EAAK1oB,KAAKunB,eACVw7E,EAAoB/iG,KAAK+iG,kBAE3Br6E,GAAIpB,WAAYy7E,EAAkB9uE,WAAWvL,EAAGpB,WAAWgD,UAC1Dy4E,EAAkB9uE,WAAW,IAElC8uE,EAAkB7uE,SACfl0B,KAAK2hB,SAASyD,kBACXplB,KAAK+iB,KAAKjjB,YAAYqoC,gBAAgB/iB,iBAE/C,oBCrKH,MAAMzP,EAAkB,WAExBhW,EAAOC,QAAU,cAAuC+V,EACrD,WAAA7V,CAAYo0G,EAAU/3E,EAAQ2G,GAC3B/iC,MAAMm0G,EAAU/3E,GAAU,mBAAmB+3E,EAASj1G,KAAM6jC,GAE5D9iC,KAAKm8B,OAASA,EACdn8B,KAAKuI,QAAU,KAEfvI,KAAK0/G,eAAiB,CAEtB,EAIA1/G,KAAK0kI,iBAAmB,CAExB,EAIA1kI,KAAK2kI,mBAAsB/zD,IACxBsjC,EAASN,WAAWhjC,EAAO,CAEjC,CAEA,EAAAhR,CAAG+jE,GAEA,MAAMhhH,EAAQ3iB,KAAK+iB,KAAK8lD,sBAClB+7D,EAAW5kI,KAAK6kI,YAAYliH,GAC5BmyF,EAAM/0G,MAAM6/D,GAAG+jE,GAAgBiB,GAIrC,cAFO9vB,EAAI/rG,KAEJ+rG,CACV,CAGA,UAAMx0G,CAAKC,EAAI0oE,EAAc,EAAG1gE,EAAU,CAAC,SAClCxI,MAAMO,KAAKC,GAEjBP,KAAKuI,QAAUA,EAEf,MAAMsR,EAAW,GAUjB2S,GAAGxsB,KAAK8iC,IAAI0S,YAAY4kC,OAAO,MAAO,eAAenR,KAErD,MAAMy2C,EAAiB1/G,KAAK0/G,eAG5B,IAAK,MAAMj9G,KAAOi9G,IAGXA,EAAej9G,KACfzC,KAAK+iB,KAAKJ,OAAO1c,GAAMA,EAAEhH,KAAOwD,IAAKb,UAKrCqnE,EACDpvD,EAASzS,KAAKs4G,EAAej9G,GAAKnC,KAAKC,EAAI0oE,EAAa1gE,IAK3DikB,GAAGxsB,KAAK0kI,iBAAiBjiI,KAAOy6E,cAG7B17E,QAAQsY,IAAID,EACrB,CAEA,WAAAgrH,CAAYliH,GACT,MAAM4jE,EAAO,GACPu+C,EAAe,CAAC,EAEtB,IAAIC,EACAC,EAEJ,MAAMrjH,EAAW3hB,KAAK2hB,SAChB66E,EAAkBx8F,KAAK+iB,KAAKjjB,YAAYqoC,gBAwF9C,OAtFAxlB,EAAM3c,SAASC,IAGZ,IAAIuvC,EAEJ,IACGA,EAAYvvC,EAAEuvC,UAAUx1C,KAAKm8B,QAE7Bl2B,EAAEi8F,mBAAmB,aACxB,CAAE,MAAO/gG,GACNq0C,EAAYvvC,EAAEuvC,UAAUx1C,KAAKm8B,QAE7B,MAAMyjC,EAAKpqB,EAAUoqB,GAErBpqB,EAAUoqB,IAAK,IAAOA,GAAIrsC,KAAKiiB,EAClC,CAcA,GAZAx1C,KAAK0/G,eAAez5G,EAAEhH,IAAMu2C,EAYR,MAAhBvvC,EAAE+hD,SAASiI,GAAahqD,EAAE+hD,SAASiI,IAAM80E,EAAa,CACvDA,EAAc9+H,EAAE+hD,SAASiI,GAAKs2B,EAAK3kF,OACnCojI,EAAc,EAEd,MAAMC,EAAS,CACZh5C,KAAM,IAIHi5C,EAAYvjH,EAAS+mD,SAAW8zB,EAAgB9zB,QAEtD,IAAK,IAAIxiE,EAAI,EAAGA,EAAIg/H,EAAWh/H,IAC5B++H,EAAOh5C,KAAK7kF,KAAK,CACduhE,QAAShnD,EAASgnD,UAAUziE,GACvB+Z,SAAS0B,EAASgnD,QAAQziE,IAC1Bs2F,EAAgB7zB,UAG3B4d,EAAKn/E,KAAK69H,EACb,CAGA,MAAME,EAAU5+C,EAAK3kF,OAAS,EACxBwjI,EAAS7+C,EAAK4+C,GACdE,EAASp/H,EAAE+hD,SAASgI,GAAK,EACzBs1E,EAAS,GAAGH,KAAWE,IAE7B,IAAIE,EAAU,EAEVT,EAAaQ,IACdjkI,QAAQC,MACL,aAAak0C,GAAW1S,KAAK0S,uCAAuCsvF,EAAaQ,GAAQxiG,KAAK0S,wCAGpGsvF,EAAaQ,GAAU9vF,EAEnB4vF,EAAOn5C,KAAKo5C,IAAS18D,UACtB48D,EAAUH,EAAOn5C,KAAKo5C,GAAQ18D,SAEjC,MAAMmsC,EAAMt/D,EAAUoqB,KAEtB5/D,KAAK0kI,iBAAiBz+H,EAAEhH,IAAM61G,EAAI71G,GAClC61G,EAAInsC,QAAU48D,EAGdH,EAAOn5C,KAAKo5C,GAAUvwB,EAGtB90G,KAAK+vB,SAAS,CACXC,QAAS/pB,EACTgqB,UAAW,aACXC,SAAUlwB,KAAK2kI,qBAGlBK,GAAa,IAGTz+C,CACV,CAEA,MAAAya,GACGjhG,MAAMihG,SAGNvhG,OAAO8F,OAAOvF,KAAK0/G,gBAAgB15G,SAASkD,IACzCA,EAAI83F,UAAU,GAEpB,oBCzLH,MAAMrrF,EAAkB,WAClBsnG,EAAwB,EAAQ,OAChCtF,EACH,WAEHh4G,EAAOC,QAAU,cAAsC+V,EACpD,WAAA7V,CAAYo0G,EAAU/3E,EAAQ2G,GAC3B/iC,MACGm0G,EACA/3E,GAAU,kBAAkB+3E,EAASj1G,KACrCQ,OAAO2vB,OACJ,CACG66C,SAAU,GACVu7D,OAAQ,IAEX1iG,IAIN9iC,KAAK40G,SAAW,IACnB,CAEA,EAAAh1C,GAGG5/D,KAAKylI,sBAEL,MAAM3iG,EAAM9iC,KAAK8iC,IAoCjB,OAlCY/iC,MAAM6/D,GAAG,CAClB,CACG78C,KAAM,SACNwjE,KAAM,CACH,CACGtnF,GAAI6jC,EAAI0iG,OACRziH,KAAM,SACN1R,MARF,KAAIxI,KAAY7I,KAAKO,IAAMA,IAAIgD,aAAaC,SAASqF,GAQ5CikB,CAAE,wCACTC,IAAK,2BACL05D,QAAQ,EACRz5D,MAAO,CAAC/tB,EAAIguB,KACTjtB,KAAKktB,YAAY,GAGvB,CACGjuB,GAAI6jC,EAAImnC,SACRlnD,KAAM,WACN2iH,OAAQ,IACRC,eAAe,EACf54G,IAAK,yBACLg9C,OAAgC,GAAxB/pE,KAAK2hB,SAASooD,OAAc/pE,KAAK2hB,SAASooD,OAAS,EAC3Dha,OAAQ/vD,KAAK2hB,SAASouC,OACtBwf,SAAWnmD,GAASppB,KAAK4lI,aAAax8G,GACtCnoB,GAAI,CACD0oF,cAAe,KACZ3pF,KAAK6lI,kBACL7lI,KAAK8lI,gBAAgB,OAS1C,CAEA,UAAMxlI,CAAKC,SACFR,MAAMO,KAAKC,GAEjB,MAAMmoB,EAAK1oB,KAAKunB,eAChB,IAAKmB,EAAI,OAGT1oB,KAAK40G,SAAW50G,KAAK60G,eAAer/D,YACpCx1C,KAAK40G,SAASt0G,KAAK,CAChByiB,KAAM/iB,KAAK+iB,KACXwE,eAAgBmB,IAGnB,MAAMoa,EAAM9iC,KAAK8iC,IACXijG,EAAYv5G,GAAGsW,EAAImnC,UACzB1pE,EAAG0Q,MAAMsqE,OAAOwqD,EAAWxlI,EAAG0Q,MAAM0+E,aACpCjnE,EAAG6K,KAAKwyG,GAER/lI,KAAKgmI,qBAELx3H,OAAOC,iBAAiB,UAAU,KAC/B5H,aAAa7G,KAAKimI,cAClBjmI,KAAKimI,aAAex+H,YAAW,KAC5BzH,KAAKssF,OAAOy5C,EAAUr5G,wBACf1sB,KAAKimI,YAAY,GACxB,GAAG,GAEZ,CAMA,kBAAAD,GACG,MAAMt9G,EAAK1oB,KAAKunB,gBAEZmB,GAAI/G,UAAUwD,iBAAiBC,kBAAkBxL,OAAS,IAAIjX,QAC3DjB,GACE,CACG,WACA,eACA,iBACA,sBACDuzC,SAASvzC,EAAEsqB,QACjBpqB,OAAS,GAGd,CACG,2BACA,2BACA,4BACDoE,SAASkgI,IACRx9G,EAAGznB,GAAGilI,GAAW9kI,IACVA,EAAKqK,UAAYid,EAAGpB,WAAWroB,IAChCe,KAAKmmI,mBAAmB/kI,EAAK,GACjC,GAER,CAEA,kBAAA+kI,GACOnmI,KAAKomI,0BACNv/H,aAAa7G,KAAKomI,0BAErBpmI,KAAKomI,yBAA2B3+H,YAAW,KACxC+kB,GAAGxsB,KAAK8iC,IAAI0iG,SAAS36C,MAAM,GAC3B,IACN,CAEA,UAAA39D,GACG,MAAMxE,EAAK1oB,KAAKunB,eAChBmB,GAAIwE,aAEJV,GAAGxsB,KAAK8iC,IAAI0iG,SAAStoD,MACxB,CAEA,MAAA8jB,GACGjhG,MAAMihG,SAENhhG,KAAKssF,QACR,CAEA,MAAAA,CAAO+5C,GACJ,MAAMC,EAAY95G,GAAGxsB,KAAK8iC,IAAImnC,UAC9B,IAAKq8D,EAMF,YAJAtmI,KAAKO,GAAGoJ,OAAOC,UACZ,IAAItK,MAAM,+CACV,CAAE4B,QAAS,mCAAoC4hC,IAAK9iC,KAAK8iC,MAI/DwjG,EAAUh6C,SAEV,MAAMi6C,EAAavmI,KAAKwmI,aAAaH,GACrCC,EAAUG,UAAU,CAAEllF,MAAOglF,IAC7BD,EAAUrT,qBAAqB3mC,UAClC,CAEA,mBAAAm5C,GACG,MAAMiB,EAAW1mI,KAAK2mI,cACtB3mI,KAAK4mI,WAAa5mI,KAAKO,GAAG0Q,MAAM2uD,GAAG8mE,GAGnC1mI,KAAKuqE,gBAAgBjqE,KAAK,KAAM,EACnC,CAEA,WAAAqmI,GACG,MAAM77D,EAAY9qE,KAAKuqE,gBACjBrF,EAAWllE,KAAK2hB,SAASujD,SACzBF,EAAchlE,KAAK2hB,SAASqjD,YAE5B8vC,EAAMhqC,EAAUlL,KAYtB,OAVAk1C,EAAI/rG,KAAO,QACX+rG,EAAI/nF,IAAM,kBAENi4C,GAAeE,KAChB4vC,EAAI/nF,KAAO,sCAEPi4C,IAAa8vC,EAAI/nF,KAAO,mBACxBm4C,IAAU4vC,EAAI/nF,KAAO,kBAGrB+nF,CACV,CAEA,YAAA8wB,CAAax8G,GACV,MAAM0hD,EAAY9qE,KAAKuqE,gBACjB+7D,EAAY95G,GAAGxsB,KAAK8iC,IAAImnC,UACxB48D,EAAe7mI,KAAK4mI,WAGrBx9G,GAAS3pB,OAAOD,KAAK4pB,GAAMxnB,SAC7BwnB,EAAOA,GAAQ,CAAC,EAChBppB,KAAKunB,gBAAgBD,YAAYgD,SAAStkB,SAAS0b,IAChD,OAAQA,EAAEjf,KACP,IAAK,SACL,IAAK,WACF2mB,EAAK1H,EAAEO,YAAc,cACrB,MACH,IAAK,OACL,IAAK,WACFmH,EAAK1H,EAAEO,YAAc,IAAIlK,KACzB,MACH,IAAK,SACFqR,EAAK1H,EAAEO,YAAc,EAE3B,KAGN6oD,EAAU/hC,YAAY3f,GAEtB,MAAM09G,EACHR,EAAUllI,KAAKspB,QAAU,EACpB47G,EAAUv9H,KAAKw4C,OACdslF,EAAaE,OAAS,IAAM/mI,KAAK2hB,SAASooD,OAE7Ci9D,EACHV,EAAUllI,KAAKspB,QAAU,EACpB47G,EAAUv9H,KAAKgnD,OACf82E,EAAar8C,kBAAkB,IAAI61B,QAErC4mB,EAAUnrH,SAASE,cAAc,OAUvC,OATAirH,EAAQ5qH,YAAYwqH,EAAah9C,OAEjCg9C,EAAazsD,OAAO,QAAS0sD,EAAY,IACzCD,EAAazsD,OAAO,SAAU4sD,EAAa,IAC3CH,EAAapmD,SAGbzgF,KAAKknI,oBAAoBD,EAAS79G,GAE3B69G,EAAQz1F,UAAU5rC,QAAQ,YAAawjB,EAAKnqB,GACtD,CAEA,YAAAunI,CAAaH,GACV,MAAMC,EAAY95G,GAAGxsB,KAAK8iC,IAAImnC,UAE9B,IAAIk9D,EAAWd,GAAgBC,EAC3Bc,EAAcD,GAAUJ,OAC5B,KAAOI,GAEuB,cAAxBA,EAASz1H,OAAOqR,MACQ,UAAxBokH,EAASz1H,OAAOqR,OAEhBqkH,EACGD,GAAUJ,OAASK,EAAcD,GAAUJ,OAASK,GAE1DD,EAAWA,GAAUz6G,kBAWxB,GARK06G,IACFA,EAAcd,GAAW55G,kBAAkBq6G,QAAUv4H,OAAOwF,YAE3DozH,EAAc54H,OAAOwF,aAAYozH,EAAc54H,OAAOwF,YAKtDxF,OAAOwF,WAAa,IAAMozH,EAAa,CACxC,MAAMC,EAAWrnI,KAAKsnI,gBAClBD,IACDD,GAAeC,EAASN,OAE9B,CAIA,OAFoBrpF,KAAKE,MAAMwpF,EAAcpnI,KAAK2hB,SAASooD,OAG9D,CAEA,aAAAu9D,GAEG,IAAID,EACAF,EAFc36G,GAAGxsB,KAAK8iC,IAAImnC,UAG9B,KAAOk9D,IAAaE,GACjBA,GAAYF,EAAS38C,mBAAqB,IAAI7nF,QAC1CymB,GAA+B,WAAtBA,GAAM1X,QAAQqR,OACzB,GAEFokH,EAAWA,GAAUz6G,kBAGxB,OAAO26G,CACV,CAEA,eAAAxB,GACG,MAAM3gE,EAAWllE,KAAK2hB,SAASujD,SACzBF,EAAchlE,KAAK2hB,SAASqjD,YAClC,IAAKA,IAAgBE,EAAU,OAE/B,MAAMohE,EAAY95G,GAAGxsB,KAAK8iC,IAAImnC,UACzBq8D,IAELA,EAAUz8C,MAAMusB,QAAW/2G,IACxB,IAAIkoI,GAAU,EACVC,EAAOnoI,EAAEigE,MAAQ,GAQrB,GALKkoE,EAAK5lI,SACP4lI,EAAKpgI,KAAK/H,EAAE65D,QACZsuE,EAAKpgI,KAAK/H,EAAE65D,OAAO0lC,aAGlB15B,EACD,IAAK,IAAIzqD,KAAK+sH,EACX,GACG/sH,EAAE2hD,WACF3hD,EAAE2hD,UAAU50D,QAAQ,+BAAiC,EACtD,CACC+/H,GAAU,EACV9sH,EAAEmkF,WAAWA,WAAW9G,UAAU9xF,SAASk9B,IACxC,GAAIA,EAAE17B,QAAQ,eAAiB,EAAG,CAE/B,MAAMmiB,EAASuZ,EAAEt9B,QAAQ,aAAc,IACvC5F,KAAK40G,SAAShB,WAAW1uC,EAAUv7C,EAEtC,KAEH,KACH,CAIN,GAAIq7C,IAAgBuiE,EACjB,IAAK,IAAI9sH,KAAK+sH,EACX,GACG/sH,EAAE2hD,WACF3hD,EAAE2hD,UAAU50D,QAAQ,wBAA0B,EAC/C,CACCiT,EAAEmkF,WAAWA,WAAW9G,UAAU9xF,SAASk9B,IACxC,GAAIA,EAAE17B,QAAQ,eAAiB,EAAG,CAE/B,MAAMmiB,EAASuZ,EAAEt9B,QAAQ,aAAc,IACvC5F,KAAK40G,SAAShB,WAAW5uC,EAAar7C,EAEzC,KAGH,KACH,CAEN,EAEN,CAEA,cAAAm8G,GACG,MAAM5xB,EAAWl0G,KAAK+iB,KAChBujH,EAAY95G,GAAGxsB,KAAK8iC,IAAImnC,UACxBr+D,GAAQsoG,EAAStoG,MAAQ,IAAIhG,QAAQ,YAAa,IAExD0gI,EAAUz8C,MAAMoM,aACb,UACA,sBAAsBrqF,KAAQsoG,EAASj1G,KAE7C,CAEA,mBAAAioI,CAAoBhmC,EAAK93E,GACtB,MAAM8qF,EAAWl0G,KAAK+iB,KAChBphB,EAAOynB,EAAKznB,KACZiK,GAAQsoG,EAAStoG,MAAQ,IAAIhG,QAAQ,YAAa,IACxDs7F,EAAIzjB,cAAc,8BAA8BwY,aAC7C,UACA,iBAAiBrqF,KAAQjK,KAAQuyG,EAASj1G,MAE7CiiG,EAAIzjB,cAAc,gCAAgCwY,aAC/C,UACA,wBAAwBrqF,KAAQjK,KAAQuyG,EAASj1G,KAEvD,CAEA,mBAAIsrE,GACD,OAAQvqE,KAAKynI,iBACVznI,KAAKynI,kBACL,IAAIxqB,EACDj9G,KAAK+iB,KACL,GAAG/iB,KAAK8iC,IAAI0S,wBAErB,CAEA,kBAAIq/D,GACD,OAAQ70G,KAAK03G,iBACV13G,KAAK03G,kBAAoB,IAAIC,CACnC,mBCrYH,MAAMmG,EAA4B,EAAQ,OAE1Cn+G,EAAOC,QAAU,cAA4C,EAG1D,WAAAE,CAAYo0G,EAAU/3E,EAAQ2G,GAC3B/iC,MAAMm0G,EAAU/3E,GAAU,wBAAwB+3E,EAASj1G,KAAM6jC,EACpE,CAEA,EAAA88B,GACG,MAAMs0C,EAAWl0G,KAAK+iB,KAChB4L,EAAQulF,EAASvlF,QAEvB,OAAO5uB,MAAM6/D,GAAG,CACb3+D,GAAI,CAED0oF,cAAe,KACZ,MAAMqT,EAAS,mBAAmBruE,GAAO1M,cACtC0M,GAAO1vB,MACNi1G,EAAS1jD,yBAAyBvxD,IAAMi1G,EAASnsG,OAAO9I,KAE5DutB,GAAGxsB,KAAK8iC,IAAI4kG,aAAa79C,MAAMoM,aAAa,UAAW+G,EAAO,IAI1E,CAEA,QAAA9oE,CAAShrB,GACN,IAAIipF,EAAW,GAIZA,EADCjpF,GAAOvC,KAAKiE,MAAM1B,GAEhB,8DAEU,wDAEhBnJ,MAAMm0B,SAASi+D,EAClB,oBCtCmB,EAAQ,OAA9B,MACMuoB,EAA2B,EAAQ,OAEzC/6G,EAAOC,QAAU,cAAoC86G,EAClD,WAAA56G,CAAYo0G,EAAU/3E,EAAQ2G,GAC3B/iC,MAAMm0G,EAAU/3E,GAAU,gBAAgB+3E,EAASj1G,KAAM6jC,GACzD9iC,KAAKm8B,OAASA,CACjB,CAEA,EAAAyjC,GACG,IAAIk1C,EAAM/0G,MAAM6/D,KAKhB,MAAO,CACJ72D,KAAM,OACN9J,GAAIe,KAAK8iC,IAAI0S,UACbgxC,YAAY,EACZD,KAAM,CACH,CACGz4E,KAAMgnG,IAIlB,CAEA,MAAA9T,GACG,MAAMkT,EAAWl0G,KAAK+iB,KAEtB,IACG,MAAMi6E,EAAS,UAAUkX,EAAStoG,MAAM8X,MAAM,KAAK,MAAMwwF,EAASj1G,KAElEutB,GAAGxsB,KAAK8iC,IAAI0S,YAAYq0C,MAAMoM,aAAa,UAAW+G,EACzD,CAAE,MAAO39F,GACNgC,QAAQqF,KAAK,0BAA2BrH,EAC3C,CAGA,MAAM0yB,EAAK/xB,KAAKunB,eAEhB,GAAIwK,EAAI,CACL,MAAM3G,EAAW2G,EAAGzJ,YAEhB8C,GAAUprB,KAAK+oC,YAAY3d,GAE/B,CAAC,eAAgB,cAAe,mBAAmBplB,SAASvD,IACzDzC,KAAK+vB,SAAS,CACXC,QAAS+B,EACT9B,UAAWxtB,EACXytB,SAAU,IAAIzV,IAAMza,KAAK+oC,eAAetuB,IACzC,IAGLza,KAAK+vB,SAAS,CACXC,QAAS+B,EACT9B,UAAW,SACXC,SAAWy3G,IACR,MAAM15G,EAAa8D,EAAGzJ,YAElB2F,GAAYhvB,KAAO0oI,EAAW1oI,IAC/Be,KAAK+oC,YAAY4+F,EAAW,IAIrC3nI,KAAK+vB,SAAS,CACXC,QAAS+B,EACT9B,UAAW,SACXC,SAAW03G,IACR,MAAM35G,EAAa8D,EAAGzJ,YAElB2F,GAAYhvB,KAAO2oI,EAAW3oI,IAC/Be,KAAK+oC,YAAY6+F,EAAW,GAGxC,CAEA7nI,MAAMihG,QACT,CAEA,WAAAj4D,CAAY9e,EAAU,CAAC,GAGL,MAAXA,IACDA,EAAUjqB,KAAKunB,eAAee,cAGlBtoB,KAAK+iB,KAAKJ,SAAW,IAAIjC,MAAK,CAACE,EAAGC,IACzCD,GAAG+N,WAAc9N,GAAG8N,UAIH,YAAlB/N,EAAE+N,QAAQlsB,KAAuC,cAAlBoe,EAAE8N,QAAQlsB,KAClC,EACgB,cAAlBme,EAAE+N,QAAQlsB,KAAyC,YAAlBoe,EAAE8N,QAAQlsB,IAC1C,EAEH,EAToC,IAYxCuD,SAAS0b,IACZ,IAAIxY,EAEJ,GAAIwY,EAAEiN,MAAO,CACV,MAAMA,EAAQjN,EAAEiN,QAEhB,IAAKA,EAAO,OAGZ,OAAQA,EAAMlsB,KACX,IAAK,gBA+DL,IAAK,OACFyG,EAAMylB,EAAMuxB,mBAAmBj2B,GAE/B,MA7DH,IAAK,OAGF,GAFA/gB,EAAM+gB,IAAU0E,EAAM1M,aAEjB/Y,EAAK,CACPA,EAAM,GAEN,KACH,CAEA,GAAkC,IAA9BylB,EAAMhN,SAASglC,WAAkB,CAClC,IAAIkhF,EAAQ,GAMZ,GAJAl5G,EAAMhN,SAASpZ,QAAQvC,SAASuC,IACzBA,EAAQtJ,KAAOiK,IAAK2+H,EAAQt/H,EAAQ9E,KAAI,IAG3CkrB,EAAMhN,SAASilC,UAAW,CAC3B,IAAIw5C,EAAQ,SACRvE,EAAiB,GAErBltE,EAAMhN,SAASpZ,QAAQvC,SAASob,IACzBA,EAAE3d,OAASokI,IACZznC,EAAQh/E,EAAE4lC,IACV60C,EAAiB,iBACpB,IAGHgsC,EAAQ,uCAAuChsC,+BAA4CuE,wBAA4BynC,iBAC1H,CAEA3+H,EAAM2+H,CACT,KAAO,CACJ,MAAMxlH,EAAQ,GAEd,IAAIwlH,EAAQ,GAEZ3+H,EAAIlD,SAASqL,IACV,IAAIwqF,EAAiB,GACjBC,EAAY,GAEZntE,EAAMhN,SAASilC,WAAav1C,EAAM21C,MACnC60C,EAAiB,iBACjBC,EAAY,eAAezqF,EAAM21C,QAGpCr4B,EAAMhN,SAASpZ,QAAQvC,SAASuC,IACzBA,EAAQtJ,KAAOoS,EAAMpS,KAAI4oI,EAAQt/H,EAAQ9E,KAAI,IAEpD4e,EAAMjb,KACH,uCAAuCy0F,aAA0BC,gBAAwBzqF,EAAMpS,aAAa4oI,kBAC9G,IAGJ3+H,EAAMmZ,EAAMjZ,KAAK,GACpB,CAEA,MAOH,IAAK,OAGF,GAFAF,EAAM+gB,IAAU0E,EAAM1M,aAEjB/Y,EAAK,CACPA,EAAM,GAEN,KACH,CAEA,MAEH,IAAK,UACF,GAAI+gB,EAAS,CAeV,MAAM69G,GAAkB,EAExB5+H,EAAMylB,EAAM9W,OAAOoS,EAAS69G,EAC/B,CAEA,MAEH,QACG5+H,EAAMylB,EAAM9W,OAAOoS,GAG5B,CAGA,MAAMw1F,EAAa/9F,EAAE8zB,UAAUx1C,KAAKm8B,QAIpCsjF,GAAYvrF,WAAWhrB,GACvBu2G,GAAYtqC,cAAclrD,EAAQ,GAExC,oBClOH,MAAM6zF,EAA4B,EAAQ,OAE1Cn+G,EAAOC,QAAU,cAA2C,EAGzD,WAAAE,CAAYo0G,EAAU/3E,EAAQ2G,GAC3B/iC,MAAMm0G,EAAU/3E,GAAU,uBAAuB+3E,EAASj1G,KAAM6jC,EACnE,CAEA,EAAA88B,GACG,MAAMs0C,EAAWl0G,KAAK+iB,KAChBpB,EAAW3hB,KAAK2hB,SAEtB,OAAO5hB,MAAM6/D,GAAG,CACb3+D,GAAI,CAED0oF,cAAe,KACZ,MAGMqT,EAAS,oBAFZkX,EAASvlF,OAAO+wB,GAAQA,EAAIzgD,KAAO0iB,EAASgxB,WACvC1wB,YAAc,MAEnBN,EAASgxB,WACRuhE,EAAS1jD,yBAAyBvxD,IAAMi1G,EAASnsG,OAAO9I,KAE5DutB,GAAGxsB,KAAK8iC,IAAI4kG,aAAa79C,MAAMoM,aAAa,UAAW+G,EAAO,IAI1E,CAEA,QAAA9oE,CAAShrB,GACN,MAAMm2D,EAAO,GAET35D,MAAMC,QAAQuD,GACfA,EAAIlD,SAAS2jB,IACV01C,EAAKj4D,KACF,wCAAwCuiB,EAAOlmB,cACjD,IAEF47D,EAAKj4D,KAAK,wCAAwC8B,EAAIzF,eAE3D1D,MAAMm0B,SAASmrC,EAAKj2D,KAAK,IAC5B,oBC1CH,MAAM00G,EAA4B,EAAQ,OAE1Cn+G,EAAOC,QAAU,cAA0C,EAGxD,WAAAE,CAAYo0G,EAAU/3E,EAAQ2G,GAC3B/iC,MAAMm0G,EAAU/3E,GAAU,sBAAsB+3E,EAASj1G,KAAM6jC,EAClE,CAEA,EAAA88B,GACG,MAAMs0C,EAAWl0G,KAAK+iB,KAChB4L,EAAQulF,EAASvlF,QACJulF,EAAS3pC,kBAE5B,IAAIgF,EAAW5gD,EAAQA,EAAM4xD,eAAehR,SAAS,CAAC,GAAK,GAE3D,OAAOxvE,MAAM6/D,GAAG,CACb86D,UAAW,GACX3qE,OAAQ,GACRwf,WACAtuE,GAAI,CAED0oF,cAAe,KACZ,MAAMqT,EAAS,iBAAiBruE,GAAO1M,cACpC0M,GAAO1vB,MACNi1G,EAAS1jD,yBAAyBvxD,IAAMi1G,EAASnsG,OAAO9I,KAE5DutB,GAAGxsB,KAAK8iC,IAAI4kG,aAAa79C,MAAMoM,aAAa,UAAW+G,EAAO,IAI1E,CAEA,MAAAgE,GACGjhG,MAAMihG,SAEN,MAAMkT,EAAWl0G,KAAK+iB,KAChB4L,EAAQulF,EAASvlF,QAEvB,IAAKA,EAAO,OAEZ,MAAMo5G,EAAcv7G,GAAGxsB,KAAK8iC,IAAI4kG,YAEhC,IAAKK,EAAa,OAElB,MACG99G,EADeiqF,EAAS3pC,kBACJhjD,eAAee,aAAe,CAAC,EACnDw4D,EAAOinD,EAAYl+C,MAEtBl7D,EAAMsyD,cAAch3D,EAAS,KAAM62D,EAAM,CACtCpzB,UAAU,IAIbozB,EACI4d,uBAAuB,kBAAkB,IACxCzF,gBAAgB,QACxB,CAEA,QAAA/kE,CAAShrB,GACN,MAAMylB,EAAQ3uB,KAAK+iB,KAAK4L,QAExB,IAAKA,EAAO,OAEZ,MAAMo5G,EAAcv7G,GAAGxsB,KAAK8iC,IAAI4kG,YAEhC,IAAKK,EAAa,OAElB,MAAM99G,EAAU,CAAC,EAEjBA,EAAQ0E,EAAM1M,YAAc/Y,EAE5BylB,EAAMuF,SAAS6zG,EAAa99G,EAC/B,oBCzEH,MAAM6zF,EAA4B,EAAQ,OAE1Cn+G,EAAOC,QAAU,cAAyC,EAGvD,WAAAE,CAAYo0G,EAAU/3E,EAAQ2G,GAC3B/iC,MAAMm0G,EAAU/3E,GAAU,qBAAqB+3E,EAASj1G,KAAM6jC,EACjE,CAEA,EAAA88B,GACG,MAAMs0C,EAAWl0G,KAAK+iB,KAChB4L,EAAQulF,EAASvlF,QACjBmmF,EAAM,CACT7zG,GAAI,CAED0oF,cAAe,KACZ,MAAMqT,EAAS,gBAAgBruE,GAAO1M,cAAc0M,GAAO1vB,MACxDi1G,EAAS1jD,yBAAyBvxD,IAAMi1G,EAASnsG,OAAO9I,KAG3DutB,GAAGxsB,KAAK8iC,IAAI4kG,aAAa79C,MAAMoM,aAAa,UAAW+G,EAAO,IAIjEr7E,EAAW3hB,KAAK2hB,SAItB,OAFIA,EAASouC,SAAQ+kD,EAAI/kD,OAASpuC,EAASouC,QAEpChwD,MAAM6/D,GAAGk1C,EACnB,CAEA,QAAA5gF,CAAShrB,GACN,MAAMylB,EAAQ3uB,KAAK+iB,KAAK4L,QAExB,IAAKA,EAGF,YAFA5uB,MAAMm0B,SAAS,IAKlB,MAAM8zG,EAAiB9+H,GAAOylB,EAAMhN,SAAS6kC,gBAE7C,IAAKwhF,EAGF,YAFAjoI,MAAMm0B,SAAS,IAKlB,MAAM+zG,EAAWt5G,EAAMw5C,SAAS6/D,GAC1BrmH,EAAW3hB,KAAK2hB,SAOhBg4E,EAAgB,CACnB,oCACA,8GAA8GsuC,gBARnGtmH,EAAS4/B,OAAS5yB,EAAMhN,SAASykC,YAAc,kBAC9CzkC,EAASouC,OACnB,GAAGpuC,EAASouC,WACZphC,EAAMhN,SAAS2kC,YACf,GAAG33B,EAAMhN,SAAS2kC,gBAClB,+BAIF,YAAY2hF,uFACZ,gBACD7+H,KAAK,IAEPrJ,MAAMm0B,SAASylE,EAClB,oBChEH,MAAMhkF,EAAkB,WAElBuyH,EAAiB,CACpB,OACA,UACA,IACA,aACA,KACA,OACA,MACA,KACA,IACA,KACA,KACA,IACA,OACA,SACA,QACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAGHvoI,EAAOC,QAAU,cAAwC+V,EACtD,WAAA7V,CAAYo0G,EAAU/3E,EAAQ2G,GAC3B/iC,MACGm0G,EACA/3E,GAAU,oBAAoB+3E,EAASj1G,KACvCQ,OAAO2vB,OACJ,CACGs4G,WAAY,GACZS,gBAAiB,IAEpBrlG,GAGT,CAEA,EAAA88B,CAAGwoE,EAAwB,CAAC,GACzB,MAAMl0B,EAAWl0G,KAAK+iB,KAGhBpB,EAAWuyF,EAAS3pC,mBAAmB5oD,UAAY,CAAC,EACpDgN,EAAQulF,EAASvlF,QAEjB05G,EAAuC,OAA1B1mH,EAASoyC,cAEtBk9D,EAAQ,GAEd,GAAItvG,EAASmyC,UAAW,CACrB,MAAMw0E,EAAgBD,EACjB,iHACA,yGAECE,EAAU,CACbtpI,GAAIe,KAAK8iC,IAAIqlG,gBACbplH,KAAM,WACNyjE,YAAY,EACZz2B,OAAQ,GACRwf,SAAU+4D,EACVlnI,KAAM,CAAEoC,MAAOmrB,GAAOnrB,OAAS,KAE7B6kI,IAAYE,EAAQhnF,MAAQ5/B,EAASqyC,WAAa,IACvDi9D,EAAM7pH,KAAKmhI,EACd,CAEA,IAAIx4E,EAC+B,IAA/BphC,GAAOhN,UAAU0kC,YAClB0J,EAAS9vC,SAAS0O,EAAMhN,SAAS2kC,cAAgByJ,GAEpD,MAAMy4E,EAAU/oI,OAAO2vB,OACpB,CACGnwB,GAAIe,KAAK8iC,IAAI4kG,WACb3kH,KAAM,WACNyjE,YAAY,EACZwG,WAAW,EACXj9B,SACAstC,QAAwB,SAAf1uE,GAAOlsB,IAChB8sE,SAAU84D,EACL,gDACA,0DACLjnI,KAAM,CAAE47E,QAAS,KAEpBorD,GAGEI,EAAQz4E,QAA4B,GAAlBy4E,EAAQz4E,gBACrBy4E,EAAQz4E,OACfy4E,EAAQ9f,YAAa,GAExBuI,EAAM7pH,KAAKohI,GACX,MAAMC,EAAS,CAAC,EACU,OAA1B9mH,EAASoyC,cACH00E,EAAOliD,KAAO0qC,EACdwX,EAAOx8C,KAAOglC,EACpB,MAAMnc,EAAM/0G,MAAM6/D,GAAG,CAAC6oE,IAItB,cAFO3zB,EAAI/rG,KAEJ+rG,CACV,CAMA,QAAA5gF,CAAShrB,EAAKw/H,GACX,MAAMX,EAAcv7G,GAAGk8G,GAAY1oI,KAAK8iC,IAAI4kG,YAE5C,IAAKK,EAAa,OAElB,MAAMp5G,EAAQ3uB,KAAK+iB,KAAK4L,QAExB,OAAQA,GAAOlsB,KACZ,IAAK,SACL,IAAK,WAAY,CACd,MAAMkmI,EAASz/H,EAEXtD,QAAQ,QAAS,QAEjBA,QACE,IAAIqV,OAAO,aAAaitH,EAAe9+H,KAAK,SAAU,MACtD,SAGN2+H,EAAYvmC,UAAU,CAAExkB,QAAS2rD,IACjC,KACH,CACA,QACGZ,EAAYvmC,UAAU,CAAExkB,QAAS9zE,IAG1C,oBCzIH,MAAM40G,EAA4B,EAAQ,OAE1Cn+G,EAAOC,QAAU,cAAwC,EAGtD,WAAAE,CAAYo0G,EAAU/3E,EAAQ2G,GAC3B/iC,MAAMm0G,EAAU/3E,GAAU,oBAAoB+3E,EAASj1G,KAAM6jC,EAChE,CAEA,EAAA88B,GACG,MAAMjxC,EAAQ3uB,KAAK+iB,KAAK4L,QAClBmmF,EAAM,CACT/nF,IAAK,UACL9rB,GAAI,CAED0oF,cAAe,KACZ,MAAMqT,EAAS,eAAeruE,GAAO1M,cAAc0M,GAAO1vB,MACvDe,KAAK+iB,KAAKytC,yBAAyBvxD,IAAMe,KAAK+iB,KAAKhb,OAAO9I,KAG7DutB,GAAGxsB,KAAK8iC,IAAI0S,YAAYq0C,MAAMoM,aAAa,UAAW+G,EAAO,IAIhEr7E,EAAW3hB,KAAK2hB,SAItB,OAFIA,EAASouC,SAAQ+kD,EAAI/kD,OAASpuC,EAASouC,QAEpChwD,MAAM6/D,GAAGk1C,EACnB,oBC7BH,MAAMgJ,EAA4B,EAAQ,OAE1Cn+G,EAAOC,QAAU,cAAwC,EAGtD,WAAAE,CAAYo0G,EAAU/3E,EAAQ2G,GAC3B/iC,MAAMm0G,EAAU/3E,GAAU,oBAAoB+3E,EAASj1G,KAAM6jC,EAChE,CAEA,aAAIs5B,GACD,MAAO,gBACV,CAEA,UAAM97D,CAAKC,SACFR,MAAMO,KAAKC,GAGjBP,KAAKk0B,SAAS,eAAel0B,KAAKo8D,oBACrC,CAEA,UAAAwsE,GACG,MAAMb,EAAcv7G,GAAGxsB,KAAK8iC,IAAI4kG,YAEhC,GAAKK,EAEL,OAAOA,EAAYl+C,MAAM6U,uBAAuB1+F,KAAKo8D,WAAW,EACnE,CAEA,QAAAloC,CAAShrB,GAEN,MAAMm2D,EAAO,GAETn2D,IAAQxD,MAAMC,QAAQuD,IAAMm2D,EAAKj4D,KAAK8B,GAE1CzB,YAAW,KAER,MAAMohI,EAAU7oI,KAAK4oI,aAErB,IAAKC,EAAS,OAAO,EAErB,MAAMl6G,EAAQ3uB,KAAK+iB,KAAK4L,QAClBmxE,EAAW,QAE0B,IAAhCnxE,EAAMhN,SAASpZ,QAAQnH,OAC/ButB,EAAMhN,SAASpZ,QAAU,IAAIvI,KAAKO,GAAG0Q,MAAMoqE,eAAe,CACvDj6E,KAAMutB,EAAMhN,SAASpZ,WAG3BomB,EAAMhN,SAASpZ,QAAQnH,KAAK20F,MAAK,SAAUrqF,GACxC,IAA8B,IAA1B2zD,EAAK73D,QAAQkE,EAAIzM,IAAY,CAC9B,IAAIs7F,EAAO,GACPyF,EAASt0F,EAAIzM,GAEjB,KAAOe,KAAKigG,YAAYD,IACrBrxE,EAAMhN,SAASpZ,QAAQnH,KAAK20F,MAAK,SAAUmK,GAErCvxE,EAAMhN,SAASpZ,QAAQnH,KAAK6+F,YAAYD,KACxCE,EAAIjhG,KAEJs7F,EAAO,GAAG2F,EAAIz8F,SAAS82F,IAE7B,IAEAyF,EAAShgG,KAAKigG,YAAYD,GAG7BzF,GAAQ7uF,EAAIjI,KACZq8F,EAAS14F,KAAKmzF,EACjB,CACH,IAIA,IAAI4F,EAAW,iCAEfL,EAAS95F,SAAQ,SAAUojB,GACxB+2E,GAAY,2GAA4G/2E,UAC3H,IAEA+2E,GAAY,SACZ0oC,EAAQr3F,UAAY2uD,EAEpB,IAAIpwC,EAAS,GAET84E,EAAQtnC,aAAe,KAAIxxC,EAAS84E,EAAQtnC,cAEhD,MAAMwmC,EAAcv7G,GAAGxsB,KAAK8iC,IAAI4kG,YAEhCK,EAAYr2H,OAAOq+C,OAASA,EAC5Bg4E,EAAYz7C,QAAQ,GACpB,GACN,kEC3FH,MAAMw8C,cAAgB,oBAAQ,OACxBC,YAAc,oBAAQ,OACtBC,WAAa,oBAAQ,OACrBC,MAAQ,oBAAQ,OAChBC,OAAS,oBAAQ,OAEjB37E,eAAiB,oBAAQ,OACzB47E,aAAe,oBAAQ,MACvBz9G,cAAgB,oBAAQ,OAExB/V,gBAAkB,6BAExBhW,OAAOC,QAAU,MAAMw+G,mCAAmCzoG,gBACvD,WAAA7V,CAAYo0G,EAAU/3E,EAAQ2G,GAC3B/iC,MACGm0G,EACA/3E,GAAU,qBAAqB+3E,EAASj1G,KACxCQ,OAAO2vB,OACJ,CACGg6G,eAAgB,GAChBC,YAAa,IAEhBvmG,GAGT,CAEA,EAAA88B,GACG,MAAMs0C,EAAWl0G,KAAK+iB,KAChBpB,EAAW3hB,KAAK2hB,SAChB66E,EAAkB0X,EAASp0G,YAAYqoC,gBAG7C,IAAI6kD,GAAY,EAEI,KAJArrE,EAAS4/B,OAASi7C,EAAgBj7C,SAI/ByrC,GAAY,GAEnC,IAAIs8C,EAAa,CACdvgI,KAAM,SACNw4C,MAAO,GAENgoF,EAAc,CACfxgI,KAAM,SACNw4C,MAAO,GAGV,OAAQ5/B,EAAS2pD,gBAAkBkxB,EAAgBlxB,gBAChD,IAAK,OACF,MACH,IAAK,SACFg+D,EAAa,CACVvgI,KAAM,UAETwgI,EAAc,CACXxgI,KAAM,UAET,MACH,IAAK,QACFugI,EAAa,CACVvgI,KAAM,UAKf,MAAMygI,EACHt1B,EAAS/oC,aACTxpD,EAASwpD,aACTqxB,EAAgBrxB,YACbroC,EAAM9iC,KAAK8iC,IACXgyE,EAAM/0G,MAAM6/D,GAAG,CAClB,CACG78C,KAAM,UACNgK,IACGpL,EAAS0pD,mBAAqBmxB,EAAgBnxB,kBACjD4gB,KAAM,CACHq9C,EACA,CACGrqI,GAAI6jC,EAAIsmG,eACRrmH,KAAM,SACNgK,IAAK,gBACLhkB,KAAM,OACNgV,KAAM,oBACNva,MAAOgmI,EACPjoF,MAAO5/B,EAAS4/B,OAASi7C,EAAgBj7C,MACzCyrC,UAAWA,EACXhgE,MAAO,KACJhtB,KAAKypI,YAAY,EAEpBxoI,GAAI,CAED0oF,cAAe,KACZ,MAAM/9E,EAAOsoG,EAAStoG,MAAMhG,QAAQ,eAAgB,IAC9Co3F,EAAS,iBAAiBpxF,KAAQsoG,EAASj1G,KACjDutB,GAAGsW,EAAIsmG,iBACFv/C,MAAMpM,cAAc,UACrBwY,aAAa,UAAW+G,EAAO,IAI5C,CACG/9F,GAAI6jC,EAAIumG,YACRtmH,KAAM,QACNvf,MAAOxD,KAAKwD,MAAM,qBAErB,CACGuF,KAAM,UAETwgI,MAOT,cAFOz0B,EAAI/rG,KAEJ+rG,CACV,CAEA,UAAMx0G,CAAKC,SACFR,MAAMO,KAAKC,GAEjB,MAAMuiC,EAAM9iC,KAAK8iC,IACX4mG,EAAkBl9G,GAAGsW,EAAIsmG,gBACzBO,EAAen9G,GAAGsW,EAAIumG,aAExBrpI,KAAK+iB,KAAKpB,SAASkjC,UACpB6kF,EAAgB7+C,OAChB8+C,EAAazsD,SAEbwsD,EAAgBxsD,OAChBysD,EAAa9+C,OAEnB,CAEA,YAAMmW,GACHjhG,MAAMihG,SAEN,MAAM3nC,EAAQ,GAEdr5D,KAAK+iB,KAAKvC,gBAAgBxa,SAAS0iB,IAC5BA,EAAGX,aAAeW,EAAGxC,eAAeC,YAErCkzC,EAAMjyD,KAAKshB,EAAGoC,WAAW,IAI3BuuC,EAAMz3D,OAAS,GAAG5B,KAAKuwF,aAErB/uF,QAAQsY,IAAIu/C,GAGlBr5D,KAAK2wF,OACR,CAEA,IAAAJ,GACG,MAAMm5C,EAAkBl9G,GAAGxsB,KAAK8iC,IAAIsmG,gBAE/BM,IAELA,EAAgB7yE,UAChB6yE,EAAgBtvD,OAAO,OAAQ,yBAC/BsvD,EAAgB9yH,UACnB,CAEA,KAAA+5E,GACG,MAAM+4C,EAAkBl9G,GAAGxsB,KAAK8iC,IAAIsmG,gBAE/BM,IAELA,EAAgBliD,SAChBkiD,EAAgBtvD,OAAO,OAAQ,qBAC/BsvD,EAAgB9yH,UACnB,CAEA,gBAAM6yH,GACHzpI,KAAKuwF,OAEL,MAAMq5C,QAAqB5pI,KAAK6pI,gBAK1B9zB,QAAe/1G,KAAK8pI,eAAeF,GAGnCG,QAA4B/pI,KAAKgqI,uBAGjCC,EAAWjqI,KAAKkqI,iBACnBH,EACAH,EACA7zB,GAGG7B,EAAWl0G,KAAK+iB,KAGtBmxF,EAASmK,gBAAgB4rB,EAAU/1B,EAAS9oC,WAG5CprE,KAAK2wF,OACR,CAEA,mBAAMk5C,GACH,MAAM3lI,EAAS,CAAC,EACVm1D,EAAQ,GAGR74C,EAAkBxgB,KAAK+iB,KAAKvC,gBAC5B2pH,EAAiB3pH,EAAgB5e,OAAS,EA2MhD,OAzMA4e,EACI7d,QAAQ+lB,GAAOA,GAAIpB,aACnBthB,SAAQysB,MAAO/J,IACb2wC,EAAMjyD,KACH,IAAI5F,SAAQ,CAAC9B,EAASoK,KACnB,MAAM4B,EAAMgd,EAAGpB,WACT82G,EAAW1yH,EAAIW,QACf+9H,EAAW1hH,EAAGJ,YACd+hH,EAAW,GAGjB,IAAI54G,EAAQ/I,EAAG/G,SAASwD,gBAAgBG,YAAc,GAGlD6L,EAASnxB,KAAKO,GAAGma,UAClBgO,EAAG/G,SAASwD,gBAAgBC,kBAAoB,CAAC,GAGhDglH,EAEDj5G,EAAS,CACN9L,KAAM,MACNzL,MAAO,CACJ,CACGnX,IAAKiJ,EAAIO,KACT+f,KAAM,SACN3a,MAAO+4H,EAAS1+H,EAAIO,SAIrByc,EAAG4D,iBAEX6E,EAASzI,EAAG4D,gBAEf6E,EAAO9L,KAAO8L,EAAO9L,MAAQ,MAC7B8L,EAAOvX,MAAQuX,EAAOvX,OAAS,GAE/B,MAAMwX,EAAqB,CACxB/L,KAAM,MACNzL,MAAO,IAIN8O,GAAItC,cAAcxM,OAAOhY,OAAS,GACnCwvB,EAAmBxX,MAAMxS,KAAKshB,GAAItC,cAIrC,IAAIiL,EAAW3I,EAAG4I,iBAClB,IAAK5I,EAAG/G,SAAS4D,SAAW8L,EACzBD,EAAmBxX,MAAMxS,KAAKiqB,QAG5B,GAAI3I,EAAGmC,qBAAsB,CAC/B,MAAMgG,EAAenI,EAAGmC,qBAAqBvC,YAE7C,IAAIrc,EAAKyc,EAAGpB,WAAWrb,KAInByc,EAAGmC,qBAAqBlJ,SAAS8D,UAClCxZ,EAAK,eAAiBA,GAGtBklB,EADCN,EACQ,CACNxL,KAAM,MACNzL,MAAO,CACJ,CACGnX,IAAKimB,EAAGpB,WAAWrb,KACnB+f,KAAM,SACN3a,MAAOwf,EAAa5kB,MAOpB,CACNoZ,KAAM,MACNzL,MAAO,CACJ,CACGnX,IAAKzC,KAAKsnB,WAAWrb,KACrB+f,KAAM,SACN3a,MAAO,kBAKtB,CAGI+f,EAAmBxX,MAAMhY,SACtBuvB,EAAOvX,MAAMhY,QACdwvB,EAAmBxX,MAAM2X,QAAQJ,GAEpCA,EAASC,GAKZD,EAASzlB,EAAI8lB,aAAaL,GAI1BitG,EACInyG,QAAQ,CACNL,MAAOuF,GAAU,CAAC,EAClBS,KAAM,EACNlR,KAAM+Q,EACNjM,UAAU,IAEZne,MAAM27H,IAEJ,MAAM3jG,EAAW3zB,EAAIi1B,qBAErBqiG,GAAU5hI,KAAK4E,SAAS5E,IACrB,IAAIw+H,EAGJl0H,EAAI4e,SAAStkB,SAAS0b,IACnB,MAAM4oH,EAAc,GAGhB5+H,aAAeggB,eACqB,iBAA1BhK,EAAEoD,OAAOlF,eACjB8B,EAAEoD,OAAOlF,aAAejZ,KAAKiE,MAC1B8W,EAAEoD,OAAOlF,eAGe,iBAAnB8B,EAAE9B,eACV8B,EAAE9B,aAAejZ,KAAKiE,MAAM8W,EAAE9B,gBAEhC8B,EAAEoD,OAAOlF,cAAgB,IAAI5Z,SAC1BukI,IACE,MAAMC,GACH9oH,EAAE9B,cAAgB,IACnBjd,QACE6nI,GACEA,EAAUhrG,gBACV+qG,EAAQ/qG,gBACZ,GAEF,IAAKgrG,EAAW,OAEhB,MAAMC,EAAcF,EAAQ/mI,MACtBknI,EAAaF,EAAUhnI,MAG7B8mI,EAAYljI,KACT,GAAGqjI,KAAeC,IACpB,KAKyB,iBAAnBhpH,EAAE9B,eACf8B,EAAE9B,aAAejZ,KAAKiE,MAAM8W,EAAE9B,eAEjC8B,EAAE9B,aAAa5Z,SAASmvB,IACrBm1G,EAAYljI,KAAK+tB,EAAK3xB,MAAM,IAG/Bo8H,EAAangI,OAAO2vB,OACjBwwG,GAAc,CAAC,EACf5/H,KAAK2qI,gBACFvpI,EACAsgB,EACA4oH,EACAjrG,IACE,CAAC,GAITugG,EAAWtrD,QAAU5oE,CAAG,IAG3B2+H,EAASjjI,KAAKw4H,EAAW,IAI5B,MAAMgL,EACHP,EAASzoI,OAAS,EAAIyoI,EAAWA,EAAS,GAG1CF,GACCzkI,MAAMC,QAAQilI,IACZA,EAAmBhpI,OAAS,GAE9B8mB,EAAG9I,cAAgB,IAAI5Z,SAASmvB,IAC9BjxB,EAAOixB,EAAK3xB,OAASonI,CAAkB,IAExCnrI,OAAO2vB,OAAOlrB,EAAQ0mI,GAE3BlrI,GAAS,GACV,IAEV,UAGD8B,QAAQsY,IAAIu/C,GAEXn1D,CACV,CAEA,eAAAymI,CAAgBvpI,EAAMutB,EAAO27G,EAAc,GAAIO,GAC5C,MAAM3mI,EAAS,CAAC,EAEhB,IAAIgF,EAAM,KAEVhF,EAAOjF,GAAKmC,EAAKnC,GACjBiF,EAAO,GAAGyqB,EAAM1M,qBAAuB7gB,EAAKutB,EAAM1M,YAElD,MAAMiyF,EAAWl0G,KAAK+iB,KAGtB,GAAI8nH,EAAoBjpI,OAAQ,CAC7B,MAAMkpI,GAAeD,GAAuB,IAAIloI,QAC5C85B,GAAiC,MAAnBr7B,EAAKq7B,KAGvBy3E,EAAS50E,UAAUl+B,EAAMA,EAAM0pI,EAAa52B,EAAShyG,aACxD,CA+DA,OA5DIysB,aAAiB4+B,gBAKlBrkD,EAAM9H,EAAKpB,KAAKO,GAAGqZ,MAAMye,sBAAsB1J,EAAM1M,aAEjD/Y,GAAKlD,SACNkD,EAAIlD,SAASC,IACLA,GAIW,iBAALA,IAGP0oB,EAAMtB,gBACPsB,EAAMtB,eACF/C,QAAQ5I,IAAOA,EAAE2kB,eACjBrgC,SAAS0b,IACPzb,EAAE,GAAGyb,EAAEO,qBAAuBhc,EAAEyb,EAAEO,YAElChc,EAAEyb,EAAEO,YAAcP,EAAE7J,OAAO5R,EAAG,CAC3B/D,aAAcgyG,EAAShyG,cACxB,IAKP+D,GAAkB,iBAANA,IAAgBA,EAAEquE,QAAU3lD,EAAMtB,gBAAc,KAMtEnkB,EAAMylB,EAAM9W,OAAOzW,EAAM,CACtBc,aAAcgyG,EAAShyG,eAI7BooI,EAAYtkI,SAASxC,IACd0F,EAAKhF,EAAOV,GAAS0F,EACfhF,EAAOV,KAAQU,EAAOV,GAAS,GAAE,IAI1CpC,EAAKA,MAAMQ,SACZsC,EAAO9C,KAAO8C,EAAO9C,MAAQ,IAE5BA,EAAKA,MAAQ,IAAI4E,SAAQ,CAAC+kI,EAAWp+G,KAEnCzoB,EAAO9C,KAAKurB,GAAS3sB,KAAK2qI,gBACvBI,EACAp8G,EACA27G,EACAO,EACF,KAIA3mI,CACV,CAEA,oBAAM4lI,CAAeF,GAClB,MAAM7zB,EAAS,CAAC,EACV18C,EAAQ,GACR2xE,EAAkB,CAACC,EAAY7pI,EAAO,MACd,GAAvBsE,MAAMC,QAAQvE,KACfA,EAAO,CAACA,IAEXA,EAAK4E,SAASsnB,IACX,MAAM49G,EAAWD,EAAWpzH,OAAOyV,GAE/B49G,IAAan1B,EAAOm1B,IACrB7xE,EAAMjyD,KACH,IAAI5F,SAAQ,CAAC9B,EAASoK,KACnB,MAAMqhI,EAASF,EAAW9iE,SAAS+iE,GAEnClC,WAAWoC,iBAAiBD,GAAQ,CAAC7pI,EAAO+gC,KACzC,GAAI/gC,EAAO,OAAOwI,EAAOxI,GAGzBy0G,EAAOm1B,GAAY7oG,EAEnB3iC,GAAS,GACV,KAMXsrI,EAAgBC,EAAY39G,EAAElsB,MAAQ,GAAG,GAC1C,EAyBL,OAtBApB,KAAK+iB,KAAKvC,gBACN7d,QAAQ+lB,GAAOA,GAAIpB,aACnBthB,SAAS0iB,IACKA,EAAGpB,WAYXgD,QAAQ5I,GAAMA,aAAaynH,eAAcnjI,SAAS0b,IACnDspH,EAAgBtpH,EAAGkoH,EAAalhH,EAAGllB,QAAU,CAAComI,GAAc,GAC7D,UAGFpoI,QAAQsY,IAAIu/C,GAEX08C,CACV,CAEA,oBAAAi0B,GACG,MAAM3nI,EAAMrC,KAAK+iB,KAAKyoD,cAEtB,OAAO,IAAIhqE,SAAQ,CAAC9B,EAASoK,KAC1Bk/H,WAAWoC,iBAAiB/oI,GAAK,CAACf,EAAO+gC,KACtC,GAAI/gC,EAAO,OAAOwI,EAAOxI,GAEzB5B,EAAQ2iC,EAAQ,GACjB,GAER,CAEA,gBAAA6nG,CAAiBmB,YAAajqI,KAAM20G,QACjC,MAAMu1B,UAAY,CAAC,EACbC,IAAM,IAAItC,MAAMoC,aAChBG,IAAM,IAAI1C,cACV2C,YAAc,IAAI1C,YAAY,CACjC2C,UAAU,EACVC,SAAU,CAACC,EAAUC,IAKX91B,OAAO61B,IAAa,GAE9BE,QAAS,CAACC,EAAWH,EAAUC,KAC5B,MAAM1qF,EAAa,CAAC,IAAK,KACnB+yD,EAAWl0G,KAAK+iB,KAChB2F,EAAKwrF,EAAS3sF,eAEpB,GAAKmB,EA2CE,CACJ,IAAIhd,EAAMgd,EAAGpB,WAEb,IAAK5b,EAAK,OAAOy1C,EAGjB,GAAI0qF,EAAQrkI,QAAQ,MAAQ,EAAG,CAC5B,MAAMwkI,EAAWH,EAAQnoH,MAAM,KAI/B,GAFAhY,EAAMA,EAAIsV,SAAS5hB,GAAMA,EAAEoE,QAAUwoI,EAAS,KAAI,IAE7CtgI,EAAK,OAAOy1C,EAEjB0qF,EAAUG,EAAS,EACtB,CAEA,MAAMzmE,EAAa75D,EAAI4e,QACnB5I,GAAMA,EAAEO,aAAe4pH,IACzB,GAEF,IAAKtmE,GAAY5jD,SAAU,OAAOw/B,EAG/BokB,EAAW5jD,SAASwkC,UACpBof,EAAW5jD,SAASykC,aAEpBjF,EAAW,GAAKokB,EAAW5jD,SAASykC,YAGpCmf,EAAW5jD,SAAS0kC,WACpBkf,EAAW5jD,SAAS2kC,cAEpBnF,EAAW,GAAKokB,EAAW5jD,SAAS2kC,YAC1C,KA5ES,CACN,MAAM2lF,EAAM/3B,EAAS1zF,gBAEjByrH,GACDA,EAAIjmI,SAAS0iB,IACV,IAAIhd,EAAMgd,EAAGpB,WAEb,IAAK5b,EAAK,OAAO,EAGjB,GAAImgI,EAAQrkI,QAAQ,MAAQ,EAAG,CAC5B,IAAIwkI,EAAWH,EAAQnoH,MAAM,KAE7B,IAAKhY,EAAIsV,QAAS,OAAO,EAIzB,GAFAtV,EAAMA,EAAIsV,SAAS5hB,GAAMA,EAAEoE,QAAUwoI,EAAS,KAAI,IAE7CtgI,EAAK,OAAO,EAEjBmgI,EAAUG,EAAS,EACtB,CAEA,MAAMzmE,EAAa75D,EAAI4e,QACnB5I,GAAMA,EAAEO,aAAe4pH,IACzB,GAEF,QAAKtmE,GAAY5jD,WAGd4jD,EAAW5jD,SAASwkC,UACpBof,EAAW5jD,SAASykC,aAEpBjF,EAAW,GAAKokB,EAAW5jD,SAASykC,YAGpCmf,EAAW5jD,SAAS0kC,WACpBkf,EAAW5jD,SAAS2kC,cAEpBnF,EAAW,GAAKokB,EAAW5jD,SAAS2kC,cAEhC,EAAK,GAGrB,CAmCA,IACG,IAAIs0C,EAAM,IAAIsxC,WAAWH,GACrBnkE,EAAQshE,OAAOtuC,GACfuxC,EAAQzuF,KAAKsI,IACd7E,EAAW,GAAKymB,EAAMrmB,MACtBJ,EAAW,GAAKymB,EAAM7X,QAGzB,MAAO,CAAC6X,EAAMrmB,MAAQ4qF,EAAOvkE,EAAM7X,OAASo8E,EAC/C,CAAE,MAAOhrI,GAEN,OAAOggD,CACV,KA0BN,IACGqqF,IAAIY,aAAaX,aACbY,QAAQd,KACRtsC,QAAQ79F,MACR+7F,WAAW,CACT3U,OAAQ,SAAU8jD,KACf,MAAO,CACJ1jI,IAAK,SAAU2jI,MAAOrrI,SAEnB,GAA6B,IAAzBorI,IAAI9kI,QAAQ,SAAgB,CAC7B,MAAMghC,GAAQ8jG,IAAI5oH,MAAM,KAAK,IAAM,IAAIwlB,OAEvC,OAAQqjG,MAAY,MAAK,IAAI5pI,QAAO,SAAUymB,GAC3C,QAAOA,EAAKof,EACf,GACH,CAEK,GAAI8jG,IAAI9kI,QAAQ,WAAa,EAAG,CAClC,MAAMghC,EAAO8jG,IAAI5oH,MAAM,UAAU,GAC3B8oH,EAAUF,IAAI5oH,MAAM,UAAU,GAEpC,IAAIpL,EAASi0H,MAAM/jG,GAYnB,MAVsB,iBAAXlwB,IACRA,EAASA,EAAO1S,QACb,UACA,KAGD0lI,UAAUkB,KAAUlB,UAAUkB,GAAW,GAE9ClB,UAAUkB,IAAY/tF,WAAWnmC,GAE1Bi0H,MAAM/jG,EAChB,CAEK,GAA6B,IAAzB8jG,IAAI9kI,QAAQ,SAAgB,CAClC,MAAMglI,EAAUF,IAAI1mI,QAAQ,QAAS,IAErC,OAAO0lI,UAAUkB,IAAY,CAChC,CAyCK,GAAyB,IAArBF,IAAI9kI,QAAQ,KAAY,CAC9B,MAAM6nG,EAAQi9B,IAAI1mI,QAAQ,IAAK,IAAI8d,MAAM,KACnC+oH,EAAap9B,EAAM,GAAGnmE,OACtBwjG,EAAar9B,EAAM,GAAGnmE,OAE5B,IAAKujG,IAAeC,EAAY,MAAO,GAGvC,IAAIC,EAEJ,MAAMjhI,EAAM6gI,MAAMj4D,QAElB,GAAI5oE,EAAK,CACN,MAAMkhI,EAAiBlhI,EAAI4e,QACvB5I,GAAMA,EAAEO,aAAeyqH,IACzB,GAEF,GAAIE,EAAgB,CACjB,MAAMh8F,EAAag8F,EAAeh8F,WAElC+7F,EAAe/7F,EACVA,EAAW3uB,WACX,IACR,CACH,CAEA,IAAI4qH,EAAazrI,KAAKqrI,GAElBI,IAAennI,MAAMC,QAAQknI,KAC9BA,EAAa,CAACA,IAEjB,MAAMC,EAAU1rI,GACbA,EAAK,GAAGurI,aACRvrI,EAAKurI,IACLvrI,EAAKnC,IACLmC,EAEH,OAAQyrI,GAAc,IAAIlqI,QAAO,SAAUymB,GAExC,IAAI2jH,EAAWR,MAAMG,GAErB,OAAIhnI,MAAMC,QAAQonI,GAEZA,EAASpqI,QACLugC,GAAM4pG,EAAO5pG,KAAO4pG,EAAO1jH,KAC7BxnB,OAAS,EAELkrI,EAAO1jH,KAAU0jH,EAAOC,EACvC,GACH,CAEK,GAAIT,IAAI9kI,QAAQ,MAAQ,EAAG,CAC7B,MAAMtD,OAASqoI,MACT/jG,KAAO8jG,IAAI5oH,MAAM,KAAK,GACtBstB,UAAYs7F,IAAI5oH,MAAM,KAAK,GAEjC,GAAI8kB,MAAQwI,UAAW,CACpB,IAAI5vC,KAAOmrI,MAAM/jG,MAEjB,GAAIpnC,KAGD,OAFKsE,MAAMC,QAAQvE,QAAOA,KAAO,CAACA,OAE3BA,KAAKuB,QAAQ2qB,GACjBgyB,KAAKtO,UAAUprC,QAAQ,MAAO,QAGvC,CACA,OAAO1B,MACV,CAAO,MAAY,MAARooI,IAAoBC,MACnBA,MAAMD,IACrB,EAEN,IAEFzwD,QACP,CAAE,MAAOv6E,GACN,OAAOA,CACV,CAGA,MAAM0rI,SAAWxB,IAAIyB,SAASC,SAAS,CACpCnkI,KAAM,OACNokI,SACG,4EAGN,OAAOH,QACV,oBCp2BH,MAAMnqB,EAA0B,EAAQ,MAExCljH,EAAOC,QAAU,cAA+BijH,EAC7C,WAAA/iH,CAAYo0G,EAAU/3E,EAAQ2G,GAC3B/iC,MAAMm0G,EAAU/3E,GAAU,oBAAoB+3E,EAASj1G,KAAM6jC,EAChE,CAEA,EAAA88B,GACG,MAAMuvB,EAAOnvF,KACPk0G,EAAWl0G,KAAK+iB,KAChBpO,EAAOu/F,EAAS3jD,sBAChB5uC,EAAWuyF,EAASvyF,UAAY,CAAC,EAEjCqxC,EACHrxC,EAASqxC,WAAakhD,EAASp0G,YAAYqoC,gBAAgB6qB,UAExD8hD,EAAM,CACT7oB,KAAM,IA6GT,MAzGkB,WAAdj5B,GAAwC,UAAdA,GAC3B8hD,EAAI7oB,KAAK7kF,KAAK,CAAC,GAIdua,EAAS+pD,eACVopC,EAAI7oB,KAAK7kF,KACN,CACG2b,KAAM,SACNiqE,WAAW,EACX37E,MAAOsQ,EAASgqD,aAAe3rE,KAAKwD,MAAM,UAC1CupB,IAAK,eACLC,MAAO,WACJmiE,EAAKi+C,SAASptI,KACjB,EACAiB,GAAI,CACD0oF,cAAe,WACZ3pF,KAAKw7G,eAAevlB,aACjB,UACA,iBAAiBthF,EAAK1V,KAE5B,IAGN,CACGsiD,MAAO,KAMZ5/B,EAASgxC,eACVmiD,EAAI7oB,KAAK7kF,KACN,CACG2b,KAAM,SACNiqE,WAAW,EACX37E,MAAOsQ,EAASixC,aAAe5yD,KAAKwD,MAAM,UAC1CwpB,MAAO,WACJmiE,EAAKk+C,SAASrtI,KACjB,EACAiB,GAAI,CACD0oF,cAAe,WACZ3pF,KAAKw7G,eAAevlB,aACjB,UACA,iBAAiBthF,EAAK1V,KAE5B,IAGN,CACGsiD,MAAO,KAMZ5/B,EAASkxC,cACViiD,EAAI7oB,KAAK7kF,KACN,CACG2b,KAAM,SACNiqE,WAAW,EACX37E,MAAOsQ,EAASmxC,YAAc9yD,KAAKwD,MAAM,SACzCwpB,MAAO,WACJmiE,EAAKm+C,QAAQttI,KAChB,EACAiB,GAAI,CACD0oF,cAAe,WACZ3pF,KAAKw7G,eAAevlB,aACjB,UACA,gBAAgBthF,EAAK1V,KAE3B,IAGN,CACGsiD,MAAO,KAMZ5/B,EAAS8wC,aACVqiD,EAAI7oB,KAAK7kF,KAAK,CACX2b,KAAM,SACNha,KAAM,OACNgkB,IAAK,gBACLigE,WAAW,EACX37E,MAAOsQ,EAAS+wC,WAAa1yD,KAAKwD,MAAM,QACxCwpB,MAAO,WACJmiE,EAAKo+C,OAAOvtI,KACf,EACAiB,GAAI,CACD0oF,cAAe,WACZ3pF,KAAKw7G,eAAevlB,aACjB,UACA,eAAethF,EAAK1V,KAE1B,KAMS,WAAd+zD,GAAwC,SAAdA,GAAsB8hD,EAAI7oB,KAAK7kF,KAAK,CAAC,GAE5DrH,MAAM6/D,GAAGk1C,EACnB,CAEA,QAAAu4B,CAASG,GACN,MAAMt5B,EAAWl0G,KAAK+iB,KAChBpB,EAAWuyF,EAASvyF,UAAY,CAAC,EAGjChN,EAAOu/F,EAAS3jD,sBAGhB7nC,EAAK/T,EAAK4S,eAUhB,GAPKmB,GAAIiC,gBACNjC,GAAIR,UAAU,MAIjBslH,GAActgD,gBAAgB57E,QAE1BqQ,EAASoxC,YAAap+C,EAAKi/F,WAAWjyF,EAASoxC,iBAE9C,CACF,MAAM06E,EAAiBhzH,GAAMA,EAAEkH,UAA+B,SAAnBlH,EAAEkH,SAAS5Y,KAEhD2kI,EAAW1tI,KAAK+iB,KAAK2tC,aAC3B,GAAIg9E,EAAU,CACX,MAAMh9E,EAAag9E,EAASh9E,WAAW+8E,IAAkBC,EAErDh9E,GAAY/7C,EAAKi/F,WAAWljD,EAAWzxD,GAC9C,CACH,CACH,CAEA,OAAAquI,CAAQK,GAEL,MAGMjlH,EAHO1oB,KAAK+iB,KAAKwtC,sBAGPhpC,eAGZmB,GACDA,EAAGR,UAAU,MAGhBylH,GAAazgD,gBAAgB57E,OAChC,CAEA,MAAAi8H,CAAO/sB,GACJ,IAAKA,EAEF,YADAn/G,QAAQC,MAAM,8BAIjB,MAAMqT,EAAO3U,KAAK+iB,KAAKwtC,sBACjB+C,EAAWktD,EAAWtzB,cAG5BszB,EAAW3pD,YAGXliD,EACI8rG,SAASntD,GACTjsD,MAAK,KACHm5G,EAAWh5B,WAGX7yE,EAAKwsG,cAAc,IAErB75G,OAAOnG,IACLE,QAAQC,MAAMH,GAGd,IACGq/G,EAAWh5B,UACd,CAAE,MAAOnoF,GACNW,KAAKO,GAAGoJ,OAAOC,UAAUvK,EAAG,CACzB6B,QACG,sDACH0sI,SAAU5tI,MAAM+iB,MAAM9jB,GACtB4uI,OAAQ7tI,MAAM+iB,MAAMhb,QAAQ9I,IAElC,IAET,CAEA,QAAAmuI,CAASU,GACN9tI,KAAKO,GAAG0Q,MAAMjN,QAAQ,CACnBV,MAAOtD,KAAKwD,MAAM,eAClBC,KAAMzD,KAAKwD,MAAM,oCACjBS,SAAUwuB,MAAOzuB,IACd,GAAKA,EAAL,CAEA8pI,EAAaj3E,YAEb,IAEG,MAAMliD,EAAO3U,KAAK+iB,KAAKwtC,sBACjB0vD,EAAY6tB,EAAa5gD,oBAGzBv4E,EAAKgtG,WAAW1B,EACzB,CAAE,MAAO9+G,GACNE,QAAQC,MAAMH,EACjB,CAAE,QACC2sI,EAAatmD,UAChB,CAfoB,CAepB,GAGT,oBC7OH,MAAMq7B,EAA0B,EAAQ,MAExCljH,EAAOC,QAAU,cAA0C,EAGxD,WAAAE,CAAYo0G,EAAU/3E,EAAQ2G,GAC3B/iC,MAAMm0G,EAAU/3E,GAAU,sBAAsB+3E,EAASj1G,KAAM6jC,EAClE,CAEA,EAAA88B,GACG,OAAO7/D,MAAM6/D,GAAG,CACb78C,KAAM,YAEZ,oBCbH,MAAMpN,EAAkB,WAClB6hB,EAAiB,EAAQ,OACzBsnF,EAAoB,EAAQ,OAC5BvyC,EAAmB,EAAQ,OAC3BwhE,EAAoB,EAAQ,OAC5B9uB,EAAiB,EAAQ,OAMzB4S,EAAmB,GAEzBlyH,EAAOC,QAAU,cAAkC+V,EAChD,WAAA7V,CAAYo0G,EAAU/3E,EAAQ2G,GAC3B/iC,MACGm0G,EACA/3E,GAAU,cAAc+3E,EAASj1G,KACjCQ,OAAO2vB,OACJ,CACGza,KAAM,GAEN+7E,OAAQ,GACRa,cAAe,IAElBzuD,IAIN9iC,KAAKguI,QAAU,KACfhuI,KAAKiuI,SAAU,CAClB,CAEA,EAAAruE,GACG,MAAMs0C,EAAWl0G,KAAK+iB,KAEhBwjE,EADiB2tB,EAASkL,iBACJx/C,KAAK2mB,MAAQ,GACnC2nD,EAAyBluI,KAAKmuI,qBAC9Br5B,EAAM/0G,MAAM6/D,GAAG,CAClB,CACG3gE,GAAIe,KAAK8iC,IAAInuB,KACboO,KAAM,OACNqrH,KAAMl6B,EAASj1G,GACfsnF,KAAMA,EAAK5sE,OAAOu0H,MAMxB,cAFOp5B,EAAI/rG,KAEJ+rG,CACV,CAEA,kBAAAq5B,GACG,MAAMjqI,EAAS,CACZ,CACGuiF,QAAQ,EACRF,KAAM,KAKN2tB,EAAWl0G,KAAK+iB,KAChB+B,EAAS9kB,KAAKunB,gBAAgBD,YAAc4sF,EAASljD,eAE3D,IAAKlsC,EAAQ,OAAO5gB,EAEpB,MAAM6tH,EAAe,GACfsc,EAAen6B,EAASz/C,kBA6C9B,OA3CA3vC,EAEIwF,QAAQ5I,GAAMA,GAAGC,UAAU6+D,kBAC3Bx6E,SAAS0b,IACM2sH,EAAavlH,MACtBwlH,GAAQ5sH,EAAEziB,KAAOqvI,EAAI3sH,SAASgxB,YAMQ,iBAA/BjxB,EAAEC,SAAS6+D,kBACnB9+D,EAAEC,SAAS6+D,gBAAkB75E,KAAKiE,MAC/B8W,EAAEC,SAAS6+D,kBAKjB9+D,EAAEC,SAAS6+D,gBAAgBx6E,SAAQ,CAACgmB,EAAM4W,KACvC,MAAM0uD,EAAStxF,KAAKO,GAAGyzB,iBACpB,GAAGtS,EAAEO,cAAc2gB,KAGG,mBAAd0uD,EAAO1xB,GACfmyD,EAAa3qH,KAAKkqF,EAAO1xB,MAGzBmyD,EAAa3qH,KAAKkqF,EAAO1xB,IAI5BiyD,EAAiBzqH,KAAK,CACnBzE,OAAQ2uF,EACRvuE,KAAMuuE,EAAOxuD,IAAIujD,aACjBpkE,WAAYP,EAAEO,WACdu+D,gBAAiBx0D,EAAKpS,MACtBi/D,eAAgB7sD,EAAK6sD,gBACtB,IACH,IAGR30E,EAAOqiF,KAAOwrC,EAEP7tH,CACV,CAEA,UAAM5D,CAAKC,EAAI0oE,EAAa1gE,EAAU,CAAC,SAC9BxI,MAAMO,KAAKC,GAEjBP,KAAK+iB,KAAKq8F,iBAAiB9+G,KAAKC,EAAI0oE,EAAa1gE,GAEjDvI,KAAKuuI,cAAchmI,GACnBvI,KAAKwuI,aACLxuI,KAAKyuI,sBAEL,MAAMt4B,EAAUn2G,KAAKO,GAAG0Q,MAClBy+E,EAAQljE,GAAGxsB,KAAK8iC,IAAInuB,MAEtB+6E,GACDymB,EAAQ56B,OAAOmU,EAAOymB,EAAQxmB,aAG7B1mB,EAAc,GAAGymB,EAAM74B,SAC9B,CAEA,aAAA03E,CAAchmI,EAAU,CAAC,GAElBA,GAAS0rD,cAEVj0D,KAAK+iB,KAAKpB,SAASsyC,YAAc1rD,EAAQ0rD,eAG5C,MAAMigD,EAAWl0G,KAAK+iB,KAElBxa,EAAQ42G,iBACTjL,EAASgL,WAAWC,iBAAmB52G,EAAQ42G,iBAC7CjL,EAASgL,WAAWC,iBAAmB,KAAM,CACrD,CAEA,UAAAqvB,GAEG,MAAM9lH,EAAK1oB,KAAKunB,eAEhB,IAAKmB,EAAI,OAGT,CAAC,eAAgB,eAAe1iB,SAASvD,IACtCzC,KAAK+vB,SAAS,CACXC,QAAStH,EACTuH,UAAWxtB,EACXytB,SAAWjG,IACSjqB,KAAK+iB,KACgB0xC,iBAClCG,GAASA,aAAgBkqD,IAIR94G,SAAS0b,IAC3B,MAAMiN,EAAQjN,EAAEiN,QAChB,GACmC,OAAhCA,GAAOhN,UAAUkS,aACjBlF,GAAOklE,iBACR,QACQllE,EAAMklE,iBACb,MAAM66C,EACHzkH,IAAU0E,EAAMlB,iBAChBxD,IAAU0E,EAAM1M,YACnB,GAAIysH,EACD,GAAIhpI,MAAMC,QAAQ+oI,GAAe,CAC9B,MAAMC,EAAW,GACjBD,EAAa1oI,SAASC,IACnB0oI,EAASvnI,KACNunB,EAAMH,iBAAiBvoB,EAAG,CAAEq6C,WAAW,IACzC,IAEJ3xB,EAAMklE,iBAAmB86C,EAASvlI,KAAK,IAC1C,MACGulB,EAAMklE,iBAAmBllE,EAAMH,iBAC5BkgH,EACA,CAAEpuF,WAAW,GAIzB,KAGHtgD,KAAK+oC,YAAY9e,EAAQ,GAE7B,IAGL,MAAM6Y,EAAM9iC,KAAK8iC,IAEjB9iC,KAAK+vB,SAAS,CACXC,QAAStH,EACTuH,UAAW,mBACXC,SAAU,KACP,MAAMw/D,EAAQljE,GAAGsW,EAAInuB,MAEjB+6E,IACDA,EAAM74B,UAEN64B,EAAMjV,eAAe,CAAE1xE,KAAM,SAChC,IAIN/I,KAAK+vB,SAAS,CACXC,QAAStH,EACTuH,UAAW,kBACXC,SAAU,KACP,MAAMw/D,EAAQljE,GAAGsW,EAAInuB,MAEjB+6E,IACDA,EAAMlI,SAENkI,EAAMzU,iBACT,IA6BN,MAAM9nD,EAASzK,EAAGjB,mBAEd0L,GAED,CAAC,eAAgB,eAAentB,SAASvD,IACtCzC,KAAK+vB,SAAS,CACXC,QAASmD,EACTlD,UAAWxtB,EACXytB,SAAWjG,IACRjqB,KAAK4uI,kBAAkB3kH,EAAQ,GAEnC,GAEX,CAEA,mBAAAwkH,GACG,MAAM/lH,EAAK1oB,KAAKunB,eAEhB,IAAKmB,EAAI,OAET,IAAKmpG,EAAiBjwH,OAAQ,OAG9B,MAAMuwH,EAAqB,GAE3BN,EAAiB7rH,SAAS0b,IAEvBA,EAAE/e,OAAOksI,gBAAgBnmH,EAAGpB,WAAW7C,aACvC/C,EAAE/e,OAAOsxB,WAAWvL,EAAGpB,WAAWgD,UAElC5I,EAAE/e,OAAOuxB,SAASxS,EAAE8+D,iBAIf96E,MAAMC,QAAQwsH,EAAmBzwG,EAAEO,eACrCkwG,EAAmBzwG,EAAEO,YAAc,IAGtCkwG,EAAmBzwG,EAAEO,YAAY7a,KAAK,CACnC4uB,QAASxJ,GAAG9K,EAAEqB,MAAMu6G,kBAEpBzkD,eAAgBn3D,EAAEm3D,gBACnB,IAGL,MAAM/1C,EAAM9iC,KAAK8iC,IAGjBrjC,OAAOD,KAAK2yH,GAAoBnsH,SAASvD,IAEtC,MAAMqsI,EAAYtiH,GAAGsW,EAAInuB,MAAMi1E,UAAU,CACtCh+E,KAAMnJ,IAITqsI,EAAUjlD,MAAMsoC,mBAAqBA,EAAmB1vH,GAExDqsI,EAAU10D,OAAO,YAAY,SAAU20D,EAAMC,EAAMrgH,GAEhD,MAAMsgH,EAAkBziH,GAAGsW,EAAInuB,MAAMi1E,UAAU,CAC5Ch+E,KAAM+iB,IAIT,IAAI7W,GAAU,EA+Bd,OA5BAm3H,EAAgBplD,MAAMsoC,mBAAmBnsH,SAASrD,IAC/C,MAAMmiB,EAAS4D,EAAGpB,WACZlmB,EAAOpB,KAAK2gG,YAGZ3yE,EAAU,CAAC,GAEhBlJ,EAAOwF,UAAY,IAAItkB,SAAS2oB,IAC9BX,EAAQW,EAAM1vB,IAAMmC,EAAKutB,EAAM1M,WAAW,IAIzC7gB,EAAKO,OAAMqsB,EAAqB,YAAI5sB,EAAKO,MAG3BgB,EAAOqzB,QAAQhI,KAI9BlW,GAAU,EAEVm3H,EAAgB70D,OACb,iBACAz3E,EAAOk2E,gBAEb,IAGI/gE,CACV,IAEAg3H,EAAUl4H,SAAS,GAEzB,CAEA,YAAMoqF,CAAO5/F,GACVpB,KAAKwgH,YAAY3pD,UAEjB72D,KAAKiuI,SAAU,EAEf,MAAM/5B,EAAWl0G,KAAK+iB,KAGhBq8F,EAAiBlL,EAASkL,uBAC1BA,EAAepe,SAErB,MAAMtR,EAAQljE,GAAGxsB,KAAK8iC,IAAInuB,MACpB+T,EAAK1oB,KAAKunB,eAEhB,GAAImB,EAAI,CAGY1oB,KAAK2hB,SAETsyC,aACVvrC,EAAGR,UAAU,MAKhB,MAAM+B,EAAUvB,EAAGJ,YAEfonE,GAAOhnE,EAAG6K,KAAKm8D,SAGb1vF,KAAK+oC,YAAY9e,EAC1B,YAEWjqB,KAAK+oC,YAAY3nC,GAAQ,CAAC,GAGrCpB,KAAKmhH,eAEDzxB,GAAOA,EAAMjP,SAKjByzB,EAAS6M,0BAET/gH,KAAKwgH,YAAYh5B,QACpB,CAEA,iBAAMz+C,CAAY9e,GAEf,GAAIjqB,KAAKguI,QAAS,OACbhuI,KAAKguI,cAjZhBv7G,eAAuBy8G,GACpB,OAAO,IAAI1tI,SAAS9B,GAAY+H,WAAW/H,EAgZN,KA/YxC,CA+YgC6E,GAE1B,MAAM2vG,EAAWl0G,KAAK+iB,KAChBosH,EAAej7B,EAASz/C,iBAC1BG,GACEA,aAAgB2X,GAEf3X,aAAgBm5E,GACS,SAAvBn5E,EAAKjzC,SAAS5Y,MAChB6rD,aAAgBqqD,GAAyC,WAAvBrqD,EAAKjzC,SAAS5Y,OAGjDqmI,EAAel7B,EAASz/C,iBAC1BG,GACEA,aAAgBp9B,KACdo9B,aAAgB2X,KAIxB,GAAKtiD,EAmDFklH,EAAanpI,SAAS0b,IACnB,MAAMkzC,EAAOs/C,EAASwL,eAAeh+F,EAAEziB,IAClC21D,IAED50D,KAAKiuI,SAASr5E,GAAMosC,WAGxBt/E,GAAGiN,SAASuF,SAAS1H,GAAGooC,EAAK9xB,IAAIusG,UAAWplH,GAE5C2qC,GAAMh+C,UAAUqT,GAAQ,IAG3BmlH,EAAappI,SAAS0b,IACnB,GAAc,WAAVA,EAAEjf,IAAkB,OAExB,MAAMksB,EAAQjN,EAAEiN,QAChB,IAAKA,EAAO,OAEZ,MAAMimC,EAAOs/C,EAASwL,eAAeh+F,EAAEziB,IAClC21D,IAES,eAAVlzC,EAAEjf,IASNksB,EAAMuF,SAAS1H,GAAGooC,EAAK9xB,IAAIusG,UAAWplH,GANnCxiB,YAAW,KACRknB,EAAMuF,SAAS1H,GAAGooC,EAAK9xB,IAAIusG,UAAWplH,EAAQ,GAC9C,KAIwC,QAjFtC,CACXklH,EAAanpI,SAAS0b,IACnB,MAAMiN,EAAQjN,EAAEiN,QAChB,IAAKA,EAAO,OAEZ,MAAMimC,EAAOs/C,EAASwL,eAAeh+F,EAAEziB,IACvC,IAAK21D,EAAM,OAGP50D,KAAKiuI,SAASr5E,GAAMosC,WAGxB,MAAMsuC,EAAiB,CAAC,EAExB3gH,EAAMyZ,aAAaknG,GACnB3gH,EAAMuF,SAAS1H,GAAGooC,EAAK9xB,IAAIusG,UAAWC,GAEtC16E,GAAMh+C,UAAU04H,EAAe,IAGlCF,EAAappI,SAAS0b,IACnB,GAAc,WAAVA,EAAEjf,IAAkB,OAExB,MAAMksB,EAAQjN,EAAEiN,QAChB,IAAKA,EAAO,OAEZ,MAAMimC,EAAOs/C,EAASwL,eAAeh+F,EAAEziB,IACvC,IAAK21D,EAAM,OAEX,MAAMxmC,EAAUO,EAAM1M,WAGhB1c,EAAS,CAAC,EAEhBopB,EAAMyZ,aAAa7iC,GACnBinB,GAAGooC,EAAK9xB,IAAIusG,WAAWn7G,SAAS3uB,EAAO6oB,IAAY,GAAG,IAIzD,MACM+E,EADKnzB,KAAKunB,eACEE,mBAElB,GAAI0L,EAAQ,CACT,MAAMo8G,EAAap8G,EAAO7K,YAE1BtoB,KAAK4uI,kBAAkBW,EAC1B,CACH,CAsCAvvI,KAAKguI,QAAU,IAClB,CAEA,iBAAAY,CAAkB3kH,GACf,MAAMvB,EAAK1oB,KAAKunB,eAIhB,GADmBmB,EAAGJ,YACN,OAEhB,MAAMknH,EAAgB9mH,EAAGf,UACzB,IAAK6nH,EAAe,OAEpB,MAAMt7B,EAAWl0G,KAAK+iB,KAEhB0sH,EAAmBv7B,EAASz/C,iBAAiBG,GAC1CA,aAAgBp9B,GAEfo9B,EAAKjmC,SAAS1vB,KAAOuwI,EAAcvwI,KAC1C,GACH,IAAKwwI,EAAkB,OAEvB,MAAMC,EAAoBx7B,EAASwL,eAAe+vB,EAAiBxwI,IACnE,IAAKywI,EAAmB,OAExB,MAAMC,EAAqBnjH,GAAGkjH,EAAkB5sG,IAAIusG,UAI9CO,EAAW,CAAC,EAElBA,EALkBJ,EAAc/hH,gBAKPxD,EAGzBulH,EAAct7G,SAASy7G,EAAoBC,EAC9C,CAEA,OAAAr6B,GAEA,CAEA,YAAA4L,GACG,MAAMjN,EAAWl0G,KAAK+iB,KAEtB,IAAI8sH,EAAc,EACdzuB,EAAgB,GAEpBlN,EAASvxF,QAAQ3c,SAASojB,IACN,YAAbA,EAAK3mB,KAAkC,cAAb2mB,EAAK3mB,KAC5B2mB,EAAK4+B,SAASiI,IAAM4/E,IACrBA,EAAczmH,EAAK4+B,SAASiI,EAC5BmxD,EAAgBh4F,EAAKnqB,GACxB,IAGN,MAAMoiH,EAAiBnN,EAASwL,eAAe0B,GAE3CC,GAAkB70F,GAAG60F,EAAev+E,IAAIusG,WACzC7iH,GAAG60F,EAAev+E,IAAIusG,UAAU94H,OACtC,CAEA,cAAIiqG,GACD,OAAOh0F,GAAGxsB,KAAK8iC,IAAInuB,OAAOi1E,UAAU,CACjC7mE,KAAM,SACNha,KAAM,QAEZ,oBClkBH,MAAM85G,EAA0B,EAAQ,MAExCljH,EAAOC,QAAU,cAAyC,EAGvD,WAAAE,CAAYo0G,EAAU/3E,EAAQ2G,GAC3B/iC,MACGm0G,EACA/3E,GAAU,qBAAqB+3E,EAASj1G,KACxCQ,OAAO2vB,OACJ,CACGg3D,MAAO,GACP0pD,UAAW,IAEdhtG,IAIN9iC,KAAK+vI,iBAAmB,KACxB/vI,KAAKgwI,kBAAoB,IAC5B,CAEA,SAAIrhH,GACD,OAAO3uB,KAAK+iB,KAAK4L,OACpB,CAEA,eAAI2jE,GACD,MAAwC,QAAjCtyF,KAAK2uB,OAAOhN,SAAS2M,QAC/B,CAEA,EAAAsxC,GACG,MAAMjxC,EAAQ3uB,KAAK2uB,MACbulF,EAAWl0G,KAAK+iB,KAChBpO,EAAOu/F,EAAS3jD,sBAChB5uC,EAAW3hB,KAAK2hB,SAEtB,IAAKgN,EAGF,OAFAttB,QAAQC,MAAM,gCAAgCqgB,EAASgxB,WAEhD5yC,MAAM6/D,GAAG,CACb78C,KAAM,QACNvf,MAAO,KAIb,MAAM8uF,EAActyF,KAAKsyF,YACnB29C,EAAet7H,GAAMgN,UAAY,CAAC,EAClCmhB,EAAM9iC,KAAK8iC,IAEjB,IAAIgyE,EAAM,CACP71G,GAAI6jC,EAAIusG,SACRtsH,KAAMuvE,EAAc,aAAe,QACnC1mF,KAAM+iB,EAAM1M,WACZq/B,SACG3yB,GAAOhN,UAAU2/B,UAAYrhC,SAAS0B,GAAU2/B,YAAa,EAGhE2zC,YAAatmE,EAAM1vB,GACnBgC,GAAI,CACDyxG,YAAa,CAACzzG,EAAII,KACf,GACGA,EAAE65D,OAAO4+B,UAAUxgD,SAAS,sBAC5Bj4C,EAAE65D,OAAOm/B,QAAQlwE,OAClB,CACC,MAAMsC,EAAQprB,EAAE65D,OAAOm/B,QAAQlwE,OAC/B,IAAKsC,EAAO,OACZzqB,KAAKkwI,aAAazlH,EACrB,GAEH4mB,SAAWjwC,IACRpB,KAAKmwI,UAAU/uI,EAAK,IAKzB6uI,EAAan8E,YACdghD,EAAItxG,MAAQmrB,EAAMnrB,MAClBsxG,EAAI9gD,WAAai8E,EAAaj8E,WAC9B8gD,EAAI/gD,cAAgBk8E,EAAal8E,eAGpC/zD,KAAKowI,kBAELt7B,EAAI1oB,QAAU,CACXsG,QAAQ,EACR29C,YAAW/9C,EACXxkF,KAAM,CACH1M,KAAM,GACNmuE,UACG2kC,GAAUvyF,UAAUyyC,SACf,kEACA,IAHE,WAMbnzD,GAAI,CACD+/F,OAAQ,KACLryE,EAAM8mE,sBAAsBjpE,GAAGsW,EAAIusG,UAAW1gH,EAAOha,EAAK,GAIhEhS,OAAQ,EAAG0O,SAASpI,IACjBoI,EAAM5D,cAAcwnC,SAAShsC,EAAOwE,gBAG1CqnG,EAAIwlB,QAAU,CACXgW,YAAa,CAACrxI,EAAII,EAAGkxI,KAClB,GAAyB,IAArB5uH,EAASk1C,QAAe,OAE5B,MAAM5sC,EAAU,CAAC,EACXumH,EAAYhkH,GAAGsW,EAAIusG,UAEzB,GAAImB,EAAW,CACZ,MAAM1vD,EAAO0vD,EAAU3mD,MAEvBl7D,EAAM+iE,WAAWznE,EAAmB62D,EACvC,IAIN,IAAI2vD,EAAQzwI,KAAK+vI,kBAAkBnwE,GAgEnC,OA/DI6wE,GAED37B,EAAItxG,MAAQ,GACZsxG,EAAI9gD,WAAa,EAGjBy8E,EAAMxvI,GAAK,CACRyxG,YAAa,KAEV1yG,KAAK+vI,kBAAkBzV,QAAQ3lH,EAAK4S,iBAE7B,IAIY,OAArButF,EAAI/gD,eACL+gD,EAAI/gD,cAAgB,OACpB+gD,EAAM,CACH47B,QAAS5tG,EAAIusG,SACb9oD,KAAM,CACH,CACGxjE,KAAM,QACNvf,MAAOmrB,EAAMnrB,MAEb0yG,MAAO,QAEV,CACGjqB,KAAM,CAACwkD,EAAO37B,OAKvBA,EAAM,CACH47B,QAAS5tG,EAAIusG,SACb9oD,KAAM,CACH,CACG0F,KAAM,CACH,CACGlpE,KAAM,QACNvf,MAAOmrB,EAAMnrB,MACb+9C,MAAO0uF,EAAaj8E,WACpBkiD,MAAO,QAEVu6B,EACA37B,MAOfA,EAAM/0G,MAAM6/D,GAAGk1C,KAEfA,EAAM,CACH47B,QAAS5tG,EAAIusG,SACb9oD,KAAM,CAACuuB,IAGVA,EAAM/0G,MAAM6/D,GAAGk1C,UAERA,EAAIvuB,KAAK,GAAGtnF,IAGf61G,CACV,CAEA,eAAMq7B,CAAU/uI,GACb,MAAM0hC,EAAM9iC,KAAK8iC,IACXnU,EAAQ3uB,KAAK2uB,MACbulF,EAAWl0G,KAAK+iB,KAQtB,IAAI4tH,EANA3wI,KAAKsyF,aACa,iBAARlxF,IACRA,EAAOA,EAAKsiB,MAAM,MAKpBhe,MAAMC,QAAQvE,IACfuvI,EAAiB,GACjBvvI,EAAK4E,SAAS2jB,IACXgnH,EAAevpI,KAAKuiB,EAAO1qB,IAAM0qB,EAAO,MAS3CgnH,EAAiBvvI,EACE,iBAARA,IAERuvI,EAAiBhiH,EAAMylE,eAAehzF,IAItCuvI,EADCA,GAAgB1xI,GACA0xI,EAAe1xI,GAEfmC,GAMvB,MAAMovI,EAAYhkH,GAAGsW,EAAIusG,UAGzB,GAAImB,EAAW,CAI8B,OAAtCxwI,MAAM2uB,OAAOhN,UAAUkS,cACxB7zB,KAAKuwF,aACC5hE,EAAMkkE,sBACT29C,EACAt8B,EAAS3rG,QACTomB,EACAulF,EAAS3jD,uBAEZvwD,KAAK2wF,SAGR6/C,EAAU7hD,aAGVhgE,EAAMynE,WAAWu6C,GAEjB,MAAMC,EAAaD,EAAevnI,KAC7BunI,EAAevnI,OACfunI,EAELH,EAAUt8G,SAAS08G,GACnBJ,EAAU5hD,cACb,CACH,CAEA,UAAMtuF,CAAKC,EAAIgI,SACNxI,MAAMO,KAAKC,GAEjB,MAAMiwI,EAAYhkH,GAAGxsB,KAAK8iC,IAAIusG,UAC1BmB,GAAWptI,MAAMm4E,OAAOi1D,EAAWptI,MAAMusF,aAE7C3vF,KAAKowI,iBACR,CAEA,eAAAA,GACG,MAAMl8B,EAAWl0G,KAAK+iB,KAGhB8tH,EAAY38B,GAAUvyF,UAAU2xC,SAClCu9E,GAAa38B,IAAal0G,KAAK+vI,mBAChC/vI,KAAK+vI,iBAAmB77B,EAASqJ,YAAY/nE,UAC1Cx1C,KAAKO,GACL,GAAG2zG,EAASj1G,MAAM4xI,KAErB7wI,KAAK+vI,iBAAiBlB,gBAAgB36B,EAASzvF,aAC/CzkB,KAAK+vI,iBAAiBzvI,KAAK,CACxBwwI,WAAY9wI,KAAK+wI,iBAAiBx9G,KAAKvzB,MACvCgxI,cAAehxI,KAAKixI,eAAe19G,KAAKvzB,MACxCi0D,YAAaj0D,KAAKkxI,oBAAoB39G,KAAKvzB,SAIjD,MAAMmxI,EAAaj9B,GAAUvyF,UAAUyyC,SACnC+8E,GAAcj9B,IAAal0G,KAAKgwI,oBACjChwI,KAAKgwI,kBAAoB97B,EAASiO,aAAa3sE,UAC5Cx1C,KAAKO,GACL,GAAG2zG,EAASj1G,MAAMkyI,KAErBnxI,KAAKgwI,kBAAkBnB,gBAAgB36B,EAASzvF,aAChDzkB,KAAKgwI,kBAAkB1vI,KAAK,CACzBwwI,WAAY9wI,KAAK+wI,iBAAiBx9G,KAAKvzB,MACvCgxI,cAAehxI,KAAKixI,eAAe19G,KAAKvzB,MACxCi0D,YAAaj0D,KAAKkxI,oBAAoB39G,KAAKvzB,QAGpD,CAEA,sBAAM+wI,CAAiBtwB,GACpB,GAAgB,MAAZA,EAAkB,OACZ/6G,MAAMC,QAAQ86G,KAAWA,EAAW,CAACA,IAE/C,MAAM39E,EAAM9iC,KAAK8iC,IACXnU,EAAQ3uB,KAAK2uB,MAGb6hH,EAAYhkH,GAAGsW,EAAIusG,UACzB,IAAKmB,EAAW,OAGhBxwI,KAAKuwF,OACL5hE,EAAMslE,aAAaj0F,KAAK+iB,KAAKpB,SAASyD,kBACtC,MAAMhkB,QAAautB,EAAMkkE,sBACtB29C,EACAxwI,KAAK+iB,KAAKxa,QACVomB,EACA3uB,KAAK+iB,KAAKwtC,uBAYb,GAVAvwD,KAAK2wF,QAGLvvF,EAAK4E,SAASojB,IACXA,EAAK/X,MAAQ+X,EAAK3lB,IAAI,IAGzB+sI,EAAU3iD,UAAUr8E,WACpBg/H,EAAU3iD,UAAUzT,OAAO,OAAQh5E,GAEH,SAA5ButB,EAAMhN,SAAS2M,SAAqB,CACrC,IAAI+nE,EAAgBm6C,EAAU90F,WAC9B+kE,EAASz6G,SAASorI,KAC0B,IAArC/6C,EAAc7uF,QAAQ4pI,EAAMnyI,MAC7Bo3F,EAAgBA,EACX,GAAGA,KAAiB+6C,EAAMnyI,KAC1BmyI,EAAMnyI,GAAE,IAGnBuxI,EAAUt8G,SAASmiE,EACtB,MACGm6C,EAAUt8G,SAASusF,EAAS,GAAGxhH,GAYrC,CAEA,cAAAgyI,GAGG,OAFAzkH,GAAGxsB,KAAK8iC,KAAKsjD,QAAQzN,WAEd,CACV,CAEA,mBAAAu4D,GACG,OAAO,CACV,CAEA,QAAAx1F,CAASzxB,GACN,OAAOjqB,KAAK2uB,MAAM+sB,SAASlvB,GAAGxsB,KAAK8iC,IAAIusG,UAAWplH,EACrD,CAEA,QAAAonH,CAAS3hD,GACDA,IAELA,EAAM74B,YACN64B,EAAMjV,eAAe,CAAE1xE,KAAM,SAChC,CAEA,SAAAm4G,CAAUxxB,GACFA,IAELA,EAAMlI,WACNkI,EAAMzU,iBACT,CAEA,YAAAi1D,CAAazlH,GACV,MAAM9I,EAAW3hB,KAAK2hB,SAEtB,IAAKA,EAASyyC,SAAU,OAExB,MAAMA,EAAWp0D,KAAK+iB,KAAK0B,YAAYjB,WAAW7B,EAASyyC,UAEtDA,IAES5nC,GAAGxsB,KAAK8iC,IAAIusG,UAAUniD,cAGpCltF,KAAKgwI,kBAAkB1V,UAAUjzH,MAAK,KACnC,MAAMqhB,EAAK0rC,EAAS7sC,eAEhBmB,IACDA,EAAGR,UAAUuC,GAEbzqB,KAAKsxI,kBACFtxI,KAAKsxI,mBACL5oH,EAAGznB,GAAG,mBAAmB,KACtBynB,EAAGR,UAAUuC,EAAM,IAE5B,IAEN,CAEA,YAAMu2E,GACH,MAAMl+D,EAAM9iC,KAAK8iC,IACX0tG,EAAYhkH,GAAGsW,EAAIusG,UAEzB,IAAKmB,EAAW,OAEhB,MAAM7hH,EAAQ3uB,KAAK2uB,MAEnB,IAAKA,EAAO,OAEZ,MAAMmyD,EAAO0vD,EAAU3mD,MAEvB,IAAK/I,EAAM,OAEX,MAAMywD,EAAQ/kH,GAAGs0D,GAEjB,IAAKywD,EAAO,OAEZ,MAAM5vH,EAAW3hB,KAAK2hB,SACtB,IAAIyD,EAAmB,CACpBC,KAAM,MACNzL,MAAO,IAoBV,GAjBI+H,GAAUyD,kBAAkBxL,OAAOhY,SACpCwjB,EAAmBplB,KAAKO,GAAGma,UACxB1a,KAAK+iB,KAAKpB,SAASyD,oBAMrBA,GAAkBxL,OAAOhY,QAC1B+f,GAAUwD,iBAAiBC,kBAAkBxL,OAAOhY,SAEpDwjB,EAAmBplB,KAAKO,GAAGma,UACxBiH,EAASwD,gBAAgBC,oBAK1BzD,GAAU6vH,sBAAwB,IAAIhqI,QAAQ,MAAQ,EAAG,CAC3D,MAAMjC,EAASoc,EAAS6vH,qBAAqB9tH,MAAM,KAChD+tH,EAAelsI,EAAO,GACtBmsI,EAAiBnsI,EAAO,GAE3B6f,EAAiBxL,MAAMxS,KAAK,CACzB3E,IAAKivI,EACL1lH,KAAM,uBACN3a,MAAOogI,GAEb,CAEA,MAAME,EAA2B,CAAC79F,EAAY2gD,EAAQ,IAC5C,IACD3gD,EAAWl6B,MACVjX,QAAQtD,GAAiB,yBAAXA,EAAE2sB,OAChBltB,KAAKO,IACH,MAAMuyI,EAAuBnyI,OAAO2vB,OAAO,CAAC,EAAG/vB,GAI/C,OAFAuyI,EAAqBn9C,MAAQA,EAEtBm9C,CAAoB,KAElCj4H,UACIm6B,EAAWl6B,MACVjX,QAAQtD,GAAMA,EAAEgmB,OAChBvmB,KAAKO,GAAMsyI,EAAyBtyI,EAAGo1F,EAAQ,MAInDyf,EAAWl0G,KAAK+iB,KAChBwxE,EAAwBo9C,EAC3BvsH,GACDtmB,KAAKO,IACJ,IAAK,MAAMoD,KAAOyxG,EAASnsG,OAAO23G,eAAgB,CAC/C,KAEMxL,EAASnsG,OAAO23G,eAAej9G,aAC/BzC,KAAKF,aAGR,SAEH,MAAM+xI,EAAMrlH,GACT0nF,EAASnsG,OAAO23G,eAAej9G,GAC3Bm9D,KACA2mB,KAAKz9D,MAAMgpH,GAAOA,EAAGpB,WAAUA,SAGtC,GAAImB,GAAKngI,QAAQ9F,OAASvM,EAAEgS,MAAO,CAGhChS,EAAEw1F,YAAcg9C,EAEhB,KACH,CACH,CAEA,MAAM57B,EAAKj2G,KAAKO,GACVouB,EAAQsnF,EACVtqG,WAAWgW,EAASlW,UACpBmc,UAAUjG,EAASgxB,SAEjBnd,EADeygF,EAAGtqG,WAAWgjB,EAAMhN,SAASC,YACjBgG,UAAUvoB,EAAEoD,KAc7C,OATGpD,EAAE01F,aAHDv/D,GAAa7T,UAAU4yB,WAGP0hE,EACbtqG,WAAW6pB,EAAY7T,SAASC,YAChC0I,QACG3nB,GACEA,EAAO1D,KAAOu2B,EAAY7T,SAASivB,YACnCpb,EAAY7T,SAASkvB,cACzB,GAAG5uB,WACa,KAEjB5iB,CAAC,IAkBX,GAfA60G,EAAS3rG,QAAU,CAChB+qD,SAAU3xC,EAAS2xC,SACnBt9B,QAAS5Q,EAGT1E,KAAMiB,EAAS2D,YAAc3D,EAASwD,iBAAiBG,WACvDooC,SAA+B,IAArB/rC,EAASk1C,QACnBqO,YACIvjD,EAASyyC,UAAkC,SAAtBzyC,EAASyyC,UAClCmgC,yBAMC2f,EAAS3rG,QAAQmlD,SAAU,CAC5B,MAAM7e,EAAe,GAErB0lD,EAAsBvuF,SAAS8oG,IAC5B,GAAIA,EAAGja,aAAeia,EAAGrsG,IAAK,CAC3B,MAAMsvI,EAAqBvlH,GAAGsiF,EAAGja,YAAYnjF,OAAOzS,IAEpD,IAAI+yI,EAAc,KAEbD,GAOYpjH,EAAM+sB,SAASq2F,KAI1BC,EAAc,CACX/yI,GAAI6vG,EAAGja,YAAYnjF,OAAOzS,GAC1BuE,MAAOuuI,EAAmBrgI,OAAOlO,QAIvCuuI,EAAmB5mH,YAChB,YACAsH,MAAOpzB,IACc0yI,EAAmBr2F,YAGlC61F,EAAMn3D,OAAO,YAAY,GACzBm3D,EAAMn3D,OACH,cACAp6E,KAAKwD,MAAM,iBAEdxD,KAAKuwF,aACC5hE,EAAMkkE,sBACT0+C,EACAr9B,EAAS3rG,QACTomB,EACAulF,EAAS3jD,uBAEZvwD,KAAK2wF,UAEL4gD,EAAMn3D,OAAO,YAAY,GACzBm3D,EAAMn3D,OACH,cACAp6E,KAAKwD,MAAM,qCAAsC,CAC9CuuI,EAAmBrgI,OAAOlO,UAOnC+tI,EAAM36H,SAAS,IAElB,IAhDHo7H,EAAc,CACX/yI,GAAI,gBACJuE,MAAOxD,KAAKwD,MAAM,mBAmDrBwuI,GACAnjG,EAAa4iB,WAAWpyD,GAAMA,EAAEJ,KAAO+yI,EAAY/yI,KAAM,GAEzD4vC,EAAaznC,KAAK4qI,EACxB,KAGCnjG,EAAajtC,SAAW2vI,EAAM71F,YAC/B61F,EAAMn3D,OAAO,YAAY,GACzBm3D,EAAMn3D,OACH,cACAp6E,KAAKwD,MAAM,qCAAsC,CAC9CqrC,EAAa/vC,KAAKO,GAAMA,EAAEmE,QAAO4F,KAAK,WAI5CmoI,EAAMn3D,OAAO,YAAY,GACzBm3D,EAAMn3D,OAAO,cAAep6E,KAAKwD,MAAM,iBAE7C,MACG+tI,EAAMn3D,OAAO,cAAe,IAC5Bm3D,EAAMn3D,OAAO,YAAY,GAG5Bm3D,EAAM36H,UAGN,MAAMomF,EAAS,GAAGruE,EAAMlsB,OAAOksB,EAAM1M,cAAc0M,EAAM1vB,MAAMi1G,EAASnsG,OAAO9I,KAC/E6hF,EAAKmV,aAAa,UAAW+G,GAE7Bh9F,KAAKuwF,OACL,UACS5hE,EAAMkkE,sBAET29C,EACAt8B,EAAS3rG,QACTomB,EACAulF,EAAS3jD,sBAEf,CAAE,MAAOpvD,GACNnB,KAAKO,GAAGoJ,OAAOC,UAAUzI,EAAK,CAC3BD,QACG,mFAET,CACAlB,KAAK2wF,QAGL3wF,KAAKmwI,UAAUK,EAAU90F,WAC5B,CAEA,IAAA60C,GACG,MAAMigD,EAAYhkH,GAAGxsB,KAAK8iC,IAAIusG,UAE9BmB,GAAW35E,UACX25E,GAAW/1D,eAAe,CAAE1xE,KAAM,QACrC,CAEA,KAAA4nF,GACG,MAAM6/C,EAAYhkH,GAAGxsB,KAAK8iC,IAAIusG,UAE9BmB,GAAWhpD,SACXgpD,GAAWv1D,gBACd,oBChqBH,MAAM4nC,EAA0B,EAAQ,MAClCsmB,EAAe,EAAQ,MACvB8I,EAAoB,EAAQ,OAIlCtyI,EAAOC,QAAU,cAAwC,EAGtD,WAAAE,CAAYo0G,EAAU/3E,EAAQ2G,GAC3B/iC,MAAMm0G,EAAU/3E,GAAU,oBAAoB+3E,EAASj1G,KAAM6jC,EAChE,CAEA,aAAIovG,GACD,MAAMh+B,EAAWl0G,KAAK+iB,KAChBpO,EAAOu/F,EAAS3jD,sBAChB0/E,EAAet7H,GAAMgN,UAAY,CAAC,EAClCA,EAAWuyF,EAASvyF,UAAY,CAAC,EAEvC,IAAIw+D,EAAW8vD,EAAaj8E,WAM5B,OAJIryC,EAAS2xC,SAAU6sB,GAAY,GAC1B8vD,EAAan8E,WAA4C,QAA/Bm8E,EAAal8E,gBAC7CosB,EAAW,GAEPA,CACV,CAEA,EAAAvgB,GACG,MAAMs0C,EAAWl0G,KAAK+iB,KAChB4L,EAAQulF,EAASvlF,QACjBha,EAAOu/F,EAAS3jD,sBAChB0/E,EAAet7H,GAAMgN,UAAY,CAAC,EAClCA,EAAWgN,GAAOhN,UAAYuyF,EAASvyF,UAAY,CAAC,EAEpDwwH,EACHxjH,GAAOhN,UAAU2/B,UAAYthD,KAAK2hB,SAAS2/B,SACtC,iBACA,GAER,IAAIgnF,EAAgB,GAEhB2H,EAAan8E,YAEXw0E,EADgC,QAA/B2H,EAAal8E,cACE,uNAAuNo+E,qBAEvN,uOAAuOA,sBAG7P,IAAIpiF,EAAS,GACTxO,EAAQvhD,KAAKkyI,eAEG,IAATvjH,GACRttB,QAAQqF,KACL,YAAYwtG,EAASj1G,oCACrBi1G,EAAStsG,SAIX+mB,aAAiBw6G,GACdxnH,EAAS0kC,UACyB,QAA/B4pF,EAAal8E,eACdhE,EAAS9vC,SAAS0B,EAAS2kC,cA1DnB,GA2DRyJ,GAAU,IAEVA,EAAS9vC,SAAS0B,EAAS2kC,cA7DnB,GAgEXyJ,EADuC,QAA/BkgF,EAAal8E,cACZq+E,IAhEE,GAsEd7wF,EACG5/B,EAASwkC,UAAYxkC,EAASykC,WAAazkC,EAASykC,WAAa,GAC5D6pF,EAAan8E,WAA4C,QAA/Bm8E,EAAal8E,gBAC/ChE,EAzEc,IA2EjB,IAAIwf,EAAW,2BAA2B0gE,EAAal8E,kBACtB,OAA9Bk8E,EAAal8E,cAAyB,GAAKu0E,oBAE1C1iI,QAAQ,WAAYqqI,EAAaj8E,YACjCpuD,QAAQ,WAAY+oB,GAAOnrB,OAAS,IACpCoC,QACE,cACA+oB,GACK4xD,aAAa,CACZh/B,MAAOA,EACPwO,OAAQA,EACRrC,UAAU,IAEZ6hB,SAAS,CAAC,IAAM,IAY1B,OATyB,GAArB5tD,EAASwkC,WACVopB,EAAWA,EAAS3pE,QACjB,yDACA,gEACGqqI,EAAaj8E,WACb,QAIFj0D,MAAM6/D,GAAG,CACb78C,KAAM,YACNixC,WAAY,EACZq+E,SAAU,EACVC,SAAU,EACVvlH,IAAK,kBAILjf,KAAM,CACHiV,KAAM,IAAIkvH,EAAkBjyI,KAAKO,GAAG67B,MAAM35B,IAC1CsqB,IAAK,iBACLy5D,YAAY,EACZjX,SAAUA,EACVxf,OAAQA,EACRuqE,QAAS,CACNgW,YAAa,CAACr6G,EAAK52B,EAAGkxI,KACnB,GAAyB,IAArB5uH,EAASk1C,QAAe,OAE5B,IAAI5sC,EAAU,CAAC,EAEf,MAAMqpC,EACHtzD,MAAMuwD,yBACNvwD,KAAK+iB,MAAMwtC,wBAEd,GAAI+C,EAAU,CACX,MAAMvhC,EAAKuhC,EAAS/rC,eAChBwK,IAAI9H,EAAU8H,EAAGzJ,aAAe,CAAC,EACxC,CAGA,IAAIw4D,EAAOt0D,GAAG+jH,GAAK7jH,gBAAgBm9D,MACnCl7D,GAAO+iE,WACJznE,EACAjqB,KAAKuyI,OACLzxD,EACA9gF,KAAK8iC,IAAIusG,SACTp5G,EACF,KAKhB,CAEA,MAAA+qE,GACG,MAAMl+D,EAAM9iC,KAAK8iC,IACX0tG,EAAYhkH,GAAGsW,EAAIusG,UAEzB,IAAKmB,EAAW,OAEhB,MAAMt8B,EAAWl0G,KAAK+iB,KAChB4L,EAAQulF,EAASvlF,QAEpBmyD,EAAO0vD,EAAU3mD,MAGdmT,EAAS,GAAGkX,EAASzxG,OAAOksB,EAAMlsB,OAAOksB,EAAM1M,cAAciyF,EAASj1G,MAAMi1G,EAASnsG,OAAO9I,KAClG6hF,EAAKmV,aAAa,UAAW+G,GAE7B,MAAMz0F,EAAU,CACbgxF,OAAQz2D,EAAIusG,SACZ3hF,SAAwC,IAA9BwmD,EAASvyF,SAASk1C,SAG3BloC,aAAiBw6G,IAClB5gI,EAAQwnD,OAASphC,EAAMhN,SAAS0kC,WAC3BpmC,SAAS0O,EAAMhN,SAAS2kC,cAvKf,GAyKd/9C,EAAQg5C,MAAQ5yB,EAAMhN,SAASwkC,UAC1BlmC,SAAS0O,EAAMhN,SAASykC,aACxB,GAGRz3B,EAAMsyD,cArBO,CAAC,EAqBejhF,KAAKO,GAAG67B,KAAM0kD,EAAMv4E,EACpD,CAEA,QAAAmzC,CAASzxB,GACN,MAAM0E,EAAQ3uB,KAAK+iB,KAAK4L,QAClB6hH,EAAYhkH,GAAGxsB,KAAK8iC,IAAIusG,UAE9B,OAAO1gH,EAAM+sB,SAAS80F,EAAWvmH,EACpC,oBC1LH,MAAM44F,EAA0B,EAAQ,MAExCljH,EAAOC,QAAU,cAA4C,EAG1D,WAAAE,CAAYo0G,EAAU/3E,EAAQ2G,GAC3B/iC,MAAMm0G,EAAU/3E,GAAU,wBAAwB+3E,EAASj1G,KAAM6jC,EACpE,CAEA,EAAA88B,GACG,MAAMuvB,EAAOnvF,KACP2uB,EAAQ3uB,KAAK+iB,KAAK4L,QAElBmmF,EAAM,CACT/xF,KAAM,aACNqpE,QAAS,CACNt+E,KAAM,CACHiV,KAC6C,MAA1C/iB,KAAKO,GAAG6E,SAASlF,SAASgC,aACrB,eACA,WACR6G,KAAqC,IAA/B4lB,EAAMhN,UAAU+/B,WAAmB,OAAS,GAClDqU,WACiB,aAAdpnC,EAAMlsB,KAAqD,IAA/BksB,EAAMhN,UAAU0hC,WAG/CqK,UAAU,EACVzsD,GAAI,CACDuxI,kBAAmB,SAAUv6H,GAC1BjY,KAAK0sB,gBAAgB+lH,eAAe,CACjCphI,MAAO4G,GAEb,EACAy6H,WAAY,SAAUz6H,GACnBjY,KAAK0sB,gBAAgB+lH,eAAe,CACjCphI,MAAO4G,GAEb,EACA06H,YAAa,SAAU16H,GACpBjY,KAAK0sB,gBAAgB+lH,eAAe,CACjCphI,MAAO4G,GAEb,IAGNhX,GAAI,CACD+/F,OAAQ,WACL,MAAMv9F,EAAOzD,KAAK4yI,iBACZjkH,EAAQwgE,EAAKpsE,KAAK4L,QACxB,IAAKlrB,IAASkrB,EAAO,OAAO,EAE5B,MAAM0wC,EAAO,CAAC,EACdA,EAAK1wC,EAAM1M,YAAcxe,EACzB,MAAMwU,EAAOk3E,EAAKzzC,SAAS2jB,GAETr/D,KAAKwqF,gBAAgB,GAC7Bt2D,SAASjc,EACtB,KAKT,OAAK0W,GAG8B,IAA/BA,EAAMhN,UAAU+/B,aAAkBozD,EAAI/rG,KAAO,QAG/B,aAAd4lB,EAAMlsB,KAAqD,IAA/BksB,EAAMhN,UAAU0hC,aAC7CyxD,EAAI/+C,YAAa,GAGpB++C,EAAIpnD,UAAW,GAGXonD,EAAIzjG,OAAWyjG,EAAIzjG,iBAAiB0G,OACrC+8F,EAAIzjG,MAAQ,IAAI0G,KAAK+8F,EAAIzjG,QAGvB7C,OAAOkoF,cAAaoe,EAAIj9F,OAAS8W,EAAMo0B,aAErChjD,MAAM6/D,GAAGk1C,IAnBGA,CAoBtB,CAEA,QAAAp5D,CAASzxB,GACN,MAAM0E,EAAQ3uB,KAAK+iB,KAAK4L,QAClBlrB,EAAOwmB,EAAQ0E,EAAM1M,YAC3B,IAAK0M,IAAUlrB,EAAM,OAAO,KAI5B,IAAKzD,KAAKO,GAAI,CACX,IAAIP,KAAK+iB,KAAKxiB,GAEP,CACJ,IAAIsyI,EAAU,IAAIvzI,MACf,4DAIH,MADA+B,QAAQmJ,IAAI,QAAS7D,KAAKC,UAAU5G,KAAK+iB,KAAKnb,UACxCirI,CACT,CARG7yI,KAAKO,GAAKP,KAAK+iB,KAAKxiB,EAS1B,CAGA,IAAI6+C,EAAUp/C,KAAKO,GAAG0Q,MAAM8G,KAAK+6H,UAAUnkH,EAAMo0B,YAAnC/iD,CAAgDyD,GAChB,MAA1CzD,KAAKO,GAAG6E,SAASlF,SAASgC,eAC3Bk9C,EAAUp/C,KAAKO,GAAG0Q,MAAM8G,KAAK+6H,UAAU,WAA7B9yI,CAAyCyD,IAEtD,MAAMwU,EAAOmnC,EAQb,MAL6C,MAA1Cp/C,KAAKO,GAAG6E,SAASlF,SAASgC,cACK,IAA/BysB,EAAMhN,UAAU+/B,YAEhBzpC,EAAK86H,YAAY96H,EAAKa,cAAgB,KAElCb,CACV,mBCtHH,MAAMtC,EAAkB,WAExBhW,EAAOC,QAAU,cAAsC+V,EACpD,WAAA7V,CAAYo0G,EAAU/3E,EAAQ2G,GAC3B/iC,MACGm0G,EACA/3E,GAAU,kBAAkB+3E,EAASj1G,KACrCQ,OAAO2vB,OAAO,CAAEigH,SAAU,IAAMvsG,GAEtC,CAEA,EAAA88B,CAAGozE,EAAsB,CAAC,GAEvB,MAAM9+B,EAAWl0G,KAAK+iB,KAChBpO,EAAOu/F,EAAS3jD,sBACnB5hC,EAAQulF,EAASvlF,WAAa,KAE3BhN,EAAWhN,GAAMgN,UAAY,CAAC,EAC9BsxH,EAAc,CACjBh0I,GAAIe,KAAK8iC,IAAIusG,SACbt7E,cAAepyC,EAASoyC,cACxBC,WAAYryC,EAASqyC,WACrBxwD,MANQ,IASX,GAAImrB,EAAO,CACRskH,EAAYrnI,KAAO+iB,EAAM1M,WAGzB,MAAM7gB,EAAO,CAAC,EAEdutB,EAAMyZ,aAAahnC,GAEfA,EAAKutB,EAAM1M,cAAagxH,EAAY5hI,MAAQjQ,EAAKutB,EAAM1M,aAEvDN,EAASmyC,YAAWm/E,EAAYzvI,MAAQmrB,EAAMnrB,QAE9CmrB,EAAMhN,SAAS2/B,UAAY4yD,EAASvyF,UAAU2/B,YAC/C2xF,EAAY3xF,SAAW,GAES,IAA/B4yD,EAASvyF,UAAUk1C,UAAeo8E,EAAYhnG,UAAW,GAG7DgnG,EAAYhyI,GAAK,CACd,aAAA0oF,GACG,GAAI3pF,KAAK6tF,QAAS,CACf,MAAMzH,EAAQpmF,KAAKquF,WAEnB,IAAKjI,EAAO,OAEZpmF,KAAK6tF,UAAUzsF,KAAK20F,MAAMC,IACvB,IAAKA,EAAQ,OAGb,MAAMlV,EAAOsF,EAAMyD,MAAMpM,cACtB,iBAAiBuY,GAAQ/2F,IAAM,IAC3BsI,WACAnB,WAAW,IAAK,YAGlB06E,GAELA,EAAKmV,aACF,UACA,GAAGtnE,EAAMlsB,eAAeuzF,EAAO/2F,MAAM0vB,EAAM1vB,MACxC0V,GAAM1V,IAAM,OAEjB,GAEP,CAEAe,KAAKw7G,iBAAiBvlB,eACnB,UACA,GAAGtnE,EAAMlsB,OAAOksB,EAAM1M,cAAc0M,EAAM1vB,MACvC0V,GAAM1V,IAAM,OAGrB,GAMHg0I,EAAYpmD,SAAW,CAAC3jF,EAAK9H,EAAMgtB,KAChC,MAAMtY,EAAY9V,KAAKO,GAAGsU,WAAWiB,YAIrC,OAFA6Y,EAAMtC,YAAYjrB,EAAM0U,GAEjBA,EAAUzB,MAAM,CAE7B,CAEA,MAAMygG,EAAM/0G,MAAM6/D,GAAG,CAClBngE,OAAO2vB,OAAO,CAAC,EAAG6jH,EAAaD,KAKlC,cAFOl+B,EAAI/rG,KAEJ+rG,CACV,oBCnGH,MAAM+N,EAA0B,EAAQ,MAExCljH,EAAOC,QAAU,cAAsCijH,EACpD,WAAA/iH,CAAYo0G,EAAU/3E,EAAQ2G,GAC3B/iC,MAAMm0G,EAAU/3E,GAAU,kBAAkB+3E,EAASj1G,KAAM6jC,GACjC,UAAtB9iC,KAAK2hB,SAAS5Y,OACf/I,KAAKkzI,UAAYlzI,KAAKO,GAAGyzB,iBACtB,GAAGkgF,EAASj1G,mBACZ,CACGynF,cAAc,EACd32B,OAAQ,IACRy2B,YAAY,EACZ3yC,gBAAgB,IAI5B,CAEA,cAAAs/F,CAAep5E,GACZ,GACGA,GAAUp4C,UAAUqzE,aACpBj7B,GAAUh3C,MAAMhb,QAAQ23G,eACzB,CACC,IAAI1qB,EAAc,GAClB,IAAK,MAAOvyF,EAAK4O,KAAU5R,OAAOgkC,QAC/Bs2B,EAASh3C,KAAKhb,OAAO23G,gBAEjBruG,EAAMsQ,SAASgxB,SAAWonB,EAASp4C,SAASqzE,cAC7CA,EAAc3jF,GAIpB,OAAI2jF,GAAalyD,KAAKusG,SACZr6C,EAAYlyD,IAAIusG,SAEhB,EAEb,CACG,MAAO,EAEb,CAEA,oBAAI+D,GAED,IAAIpyH,EAAUhhB,KAAKO,GAAGygB,UAGlBqyH,EAAe,GAKnB,OAJAryH,EAAQhb,SAAS0F,IACd2nI,EAAajsI,KAAK,CAAEnI,GAAIyM,EAAIzM,GAAIuE,MAAOkI,EAAIlI,OAAQ,IAG/C6vI,CACV,CAEA,aAAAC,CAAc/tI,GACX,GAAIA,EAAQ,CACT,IAAIguI,EAAY,GAChBhuI,EAAOS,SAAS0F,IACb,IACI4e,EADStqB,KAAKO,GAAGoL,WAAWD,GACZ4e,SAChBA,EAAO1oB,QACR0oB,EAAOtkB,SAAS0b,IACb6xH,EAAUnsI,KAAKsa,EAAE,GAEvB,IAEH1hB,KAAKkzI,UAAUj/G,WAAWs/G,GACtB/mH,GAAGxsB,KAAK8iC,IAAIusG,UAAU39H,OAAOL,OAC9BrR,KAAKkzI,UAAUh/G,SAAS1H,GAAGxsB,KAAK8iC,IAAIusG,UAAU39H,OAAOL,MAC3D,MACGrR,KAAKkzI,UAAUj/G,WAAW,IACtBzH,GAAGxsB,KAAK8iC,IAAIusG,UAAU39H,OAAOL,OAC9BrR,KAAKkzI,UAAUh/G,SAAS1H,GAAGxsB,KAAK8iC,IAAIusG,UAAU39H,OAAOL,MAE9D,CAEA,QAAAqqC,GACG,OAAO17C,KAAKkzI,UAAUx3F,UACzB,CAEA,QAAAxnB,CAASihE,GACN3oE,GAAGxsB,KAAK8iC,IAAIusG,UAAU39H,OAAOL,MAAQ8jF,CACxC,CAEA,EAAAv1B,GACG,MAAMk1C,EAAM,CAAC,EAEb,OACG90G,KAAK2hB,SAAS5Y,MACd/I,KAAK+iB,KAAKpB,SAAS5Y,MACnB/I,KAAK+iB,KAAKjjB,YAAYqoC,gBAAgBp/B,MAEtC,IAAK,SACF+rG,EAAI/xF,KAAO,WACX+xF,EAAI7oE,UAAW,EACf6oE,EAAI/kD,OAAS,IACb+kD,EAAIj9F,OAAS,CACVjN,MAAO,SAAU4oI,GACd,IACGA,EAAS7sI,KAAKiE,MAAM4oI,EACvB,CAAE,MAAOryI,GAET,CACA,OAAOqyI,CACV,EACAp7D,KAAM,SAAUxxE,GACb,IACGA,EAAYD,KAAKC,UAAUA,EAC9B,CAAE,MAAOzF,GAET,CACA,OAAOyF,CACV,GAEH,MACH,IAAK,eACFkuG,EAAI/xF,KAAO,aACX+xF,EAAIp9C,YAAc13D,KAAKwD,MAAM,qCAC7BsxG,EAAIpiB,QAAS,EACboiB,EAAI2+B,cAAe,EACnB3+B,EAAI1oB,QAAU,CACXikD,WAAW,EACXviI,KAAM,CACH1M,KAAMpB,KAAKozI,iBACX7jE,SAAUnsE,MAAMmsE,SAAS,aAG/B,MACH,IAAK,SACFulC,EAAI/xF,KAAO,YACX+xF,EAAI/nF,IAAM,kBACV+nF,EAAIhnG,KAAO9N,KAAKkzI,UAAUtzE,GAIhC,OAAO7/D,MAAM6/D,GAAGk1C,EACnB,CAEA,IAAAx0G,GAIA,CAEA,MAAA0gG,GAEG,GADYhhG,KAAK4/D,KACW,UAAxB5/D,MAAM2hB,UAAU5Y,KAAkB,CACnC,IAAIisF,EAAch1F,KAAKmzI,eAAenzI,MACtC,IAAKwsB,GAAGwoE,GAAc,OACtBxoE,GAAGwoE,GAAala,YAAY,YAC5BtuD,GAAGwoE,GAAa7pE,YAAY,YAAa5lB,IACtCvF,KAAKszI,cAAc/tI,EAAO,IAE7BvF,KAAKkzI,UAAU5yI,KAAK,CAAEuzC,gBAAgB,IACtC7zC,KAAKkzI,UAAUjyI,GAAG,WAAYiI,IAC3BlJ,KAAKk0B,SAAShrB,EAAI,IAEjBsjB,GAAGxsB,KAAK8iC,IAAIusG,UAAU39H,OAAOL,MAC9BrR,KAAKkzI,UAAUh/G,SAAS1H,GAAGxsB,KAAK8iC,IAAIusG,UAAU39H,OAAOL,OAErDrR,KAAKkzI,UAAUh/G,SAAS,GAE9B,CACH,oBCpKH,MAAM2uF,EAA0B,EAAQ,MAClC6wB,EAAkB,EAAQ,OAEhC/zI,EAAOC,QAAU,cAAwC,EAGtD,WAAAE,CAAYo0G,EAAU/3E,EAAQ2G,GAC3B/iC,MAAMm0G,EAAU/3E,GAAU,oBAAoB+3E,EAASj1G,KAAM6jC,GAE7D9iC,KAAK2zI,oBAAsB,IAC9B,CAEA,sBAAIC,GACD,OAAQ5zI,KAAK2zI,oBACV3zI,KAAK2zI,qBAAuB,IAAID,EAAgB1zI,KAAKO,GAAG67B,MAAM35B,GACpE,CAEA,EAAAm9D,GACG,OAAO7/D,MAAM6/D,GAAG,CACb78C,KAAM/iB,KAAK2hB,SAASo1C,UAAY,UAAY/2D,KAAK4zI,mBACjD7qI,KAAM,SACN8jF,SAAW3jF,IAASqnC,MAAY,EAANrnC,IAEhC,oBCvBH,MAAM25G,EAA0B,EAAQ,MAExCljH,EAAOC,QAAU,cAA0C,EAGxD,WAAAE,CAAYo0G,EAAU/3E,EAAQ2G,GAC3B/iC,MACGm0G,EACA/3E,GAAU,sBAAsB+3E,EAASj1G,KACzCQ,OAAO2vB,OACJ,CACGmgD,SAAU,IAEbzsC,GAGT,CAEA,EAAA88B,GACG,MAAMs0C,EAAWl0G,KAAK+iB,KAChB4L,EAAQulF,EAASvlF,QAEjBmmF,EAAM,CACT/xF,KAAM,YACNixC,WAAY,EACZq+E,SAAU,EACVC,SAAU,EACVluG,UAAU,EACVrX,IAAK,oBAKLjf,KAAM,CACH7O,GAAIe,KAAK8iC,IAAIysC,SACbxsD,KAAM,QACNyjE,YAAY,EACZz5D,IAAK,CAAE,mBAAoB,QAC3BvpB,MAAO,KAIPme,EAAWuyF,EAAS3jD,sBAAsB5uC,UAAY,CAAC,EAQ7D,OAN0B,GAAtBA,EAASmyC,WAA+C,OAA1BnyC,EAASoyC,cACxC+gD,EAAIhnG,KAAKiiD,OAAS,GACVphC,EAAMhN,SAAS0kC,UACvByuD,EAAIhnG,KAAKiiD,OAAS9vC,SAAS0O,EAAMhN,SAAS2kC,cAAgB,GACtDwuD,EAAIhnG,KAAKiiD,OAAS,GAElBhwD,MAAM6/D,GAAGk1C,EACnB,CAEA,UAAMx0G,CAAKC,SACFR,MAAMO,KAAKC,GAEjB,MAAMiwI,EAAYhkH,GAAGxsB,KAAK8iC,IAAIusG,UAC9B,IAAKmB,EAAW,OAEhB,MAAM9gD,EAAQ8gD,EAAUtjD,cAClBjjE,EAAUylE,GAAOiR,aAAe,CAAC,EAEvC3gG,KAAK4W,QAAQqT,GACbylE,GAAOvkE,YAAY,YAAY,CAAC0oH,EAAMC,KACnC,MAAM7pH,EAAUylE,GAAOiR,aAAe,CAAC,EAEvC3gG,KAAK4W,QAAQqT,EAAQ,GAE3B,CAEA,MAAA+2E,GACG,MAAMwvC,EAAYhkH,GAAGxsB,KAAK8iC,IAAIusG,UAC9B,IAAKmB,EAAW,OAEhB,MAAM9gD,EAAQ8gD,EAAUtjD,cAClBjjE,EAAUylE,GAAOiR,aAAe,CAAC,EAEvC3gG,KAAK4W,QAAQqT,EAChB,CAEA,QAAAyxB,CAASzxB,GACN,MAAM0E,EAAQ3uB,KAAK+iB,KAAK4L,QACxB,OAAKA,EAEE1E,EAAQ0E,EAAM1M,YAFF,IAGtB,CAEA,OAAArL,CAAQqT,GACL,MAAMiqF,EAAWl0G,KAAK+iB,KAChBpO,EAAOu/F,EAAS3jD,sBACnB5hC,EAAQulF,EAASvlF,QAEdshH,EAAet7H,EAAKgN,UAAY,CAAC,EAEvC,IAAI2mH,EAAgB,GAEhB2H,EAAan8E,YAEXw0E,EADgC,QAA/B2H,EAAal8E,cACE,gLAAgLplC,EAAMnrB,gBAEtL,wBAAwBysI,EAAaj8E,0KAA0KrlC,EAAMnrB,iBAG3O,IAAI28E,EAAW8vD,EAAaj8E,WAExBh0D,KAAK2hB,SAAS2xC,SAAU6sB,GAAY,GAC/B8vD,EAAan8E,WAA4C,QAA/Bm8E,EAAal8E,gBAC7CosB,EAAW,GAEd,MAAM5Q,EACH,8BAA8B+4D,oBAAgC1iI,QAC3D,cACA+oB,EACI4xD,aAAa,CACXh/B,MAAO4+B,EACPzyB,UAAU,IAEZ6hB,SAAStlD,IAInBuC,GAAGxsB,KAAK8iC,IAAIysC,WAAWwkE,QAAQxkE,EAClC,oBC1HH,MAAMszC,EAA0B,EAAQ,MAExCljH,EAAOC,QAAU,cAAyD,EAGvE,WAAAE,CAAYo0G,EAAU/3E,EAAQ2G,GAC3B/iC,MAAMm0G,EAAU/3E,GAAU,4BAA4B+3E,EAASj1G,KAAM6jC,EACxE,CAEA,EAAA88B,GACG,MAAMs0C,EAAWl0G,KAAK+iB,KAChB4L,EAAQulF,EAASvlF,QACpBhN,EAAW3hB,KAAK2hB,SACbpZ,EAAU,GAEG,SAAfomB,GAAOlsB,IAAgB8F,EAAQnB,QAAQunB,EAAM+4C,YACxC/4C,GACNpmB,EAAQnB,QAASunB,EAAMhN,SAASpZ,SAAWoZ,EAASpZ,SAAW,IAElE,MAAMu6B,EAAM9iC,KAAK8iC,IACXgyE,EAAM,CACT71G,GAAI6jC,EAAIusG,SACRtsH,KAAMpB,EAAS5Y,MAAQmrG,EAASp0G,YAAYqoC,gBAAgBp/B,KAC5DR,QAASA,EAAQzJ,KAAKw1C,IACZ,CACJr1C,GAAIq1C,EAAIr1C,GACRoS,MAAOijC,EAAI7wC,KACXujD,IAAK1S,EAAI0S,SAKlB,OAAQ8tD,EAAI/xF,MACT,IAAK,aACF+xF,EAAIk/B,SAAU,EACdl/B,EAAI/nF,IAAM,yBACV+nF,EAAIm/B,YAAe1uI,IAChB,MAAM2uI,EAAkB,GAClB1D,EAAYhkH,GAAGsW,EAAIusG,WAAa7iH,GAAGsoF,EAAI71G,IAE7CsG,EAAOS,SAASkD,IACbgrI,EAAgB9sI,KAAKopI,EAAU3iD,UAAUrlE,QAAQtf,GAAK,IAGzD,IAAIm2D,EAAO60E,EAEPvlH,EAAMutE,qBACP78B,EAAO1wC,EAAMutE,mBAAmBvtE,EAAOulH,IAE1C,MAAM7xH,EAAQ,GAkBd,OAhBAg9C,EAAKr5D,SAASkD,IACX,IAAI2yF,EAAiB,GACjBC,EAAY,GAEZntE,EAAMhN,SAASilC,WAAa19C,EAAI89C,MACjC60C,EAAiB,iBACjBC,EAAY,eAAe5yF,EAAI89C,QAGlC,MAAMvjD,EAAOyF,EAAIzF,KAAOyF,EAAIzF,KAAOyF,EAAImI,MAEvCgR,EAAMjb,KACH,uCAAuCy0F,aAA0BC,gBAAwB5yF,EAAIjK,aAAawE,sGAC5G,IAGG4e,EAAMjZ,KAAK,GAAG,EAGxB,MAEH,IAAK,WAEF0rG,EAAIvsG,QAAQnB,KAAK,CACdnI,GAAI,OACJoS,MAAOrR,KAAKwD,MAAM,YAM3B,OAAOzD,MAAM6/D,GAAGk1C,EACnB,CAEA,QAAAp5D,CAASzxB,GACN,MAAM0E,EAAQ3uB,KAAK+iB,KAAK4L,QACrB6hH,EAAYhkH,GAAGxsB,KAAK8iC,IAAIusG,UAE3B,OAAO1gH,EAAM+sB,SAAS80F,EAAWvmH,EACpC,oBC1FH,MAAM44F,EAA0B,EAAQ,MAExCljH,EAAOC,QAAU,cAAuD,EAGrE,WAAAE,CAAYo0G,EAAU/3E,EAAQ2G,GAC3B/iC,MAAMm0G,EAAU/3E,GAAU,0BAA0B+3E,EAASj1G,KAAM6jC,EACtE,CAEA,EAAA88B,GACG,MAAMs0C,EAAWl0G,KAAK+iB,KAChB4L,EAAQulF,EAASvlF,QACpBhN,EAAWuyF,EAASvyF,SACjBpZ,EAAU,GAEG,SAAfomB,GAAOlsB,IAAgB8F,EAAQnB,QAAQunB,EAAM+4C,YACxC/4C,EACNpmB,EAAQnB,QAASunB,EAAMhN,SAASpZ,SAAWoZ,EAASpZ,SAAW,IAC7DA,EAAQnB,QAASua,EAASpZ,SAAW,IAE1C,MAAMusG,EAAM,CACT/xF,KAAMpB,EAAS5Y,MAAQmrG,EAASp0G,YAAYqoC,gBAAgBp/B,MAkD/D,OA/CI4lB,GAAOhN,SAASilC,WACjBkuD,EAAI/nF,IAAM,kBACV+nF,EAAIvsG,QAAU,CACXwa,KAAM,UACNjV,KAAM,CACHiV,KAAM,OACN3hB,KAAMmH,EAAQzJ,KAAKw1C,IACT,CACJr1C,GAAIq1C,EAAIr1C,GACRoS,MAAOijC,EAAI7wC,MAAQ6wC,EAAIjjC,MACvB21C,IAAKr4B,EAAMhN,SAASilC,UAAYtS,EAAI0S,IAAM,OAGhDuoB,SAAU,SAAUl+D,GACjB,MAAMgR,EAAQ,GAEd,IAAIw5E,EAAiB,GACjBC,EAAY,GAWhB,OATIzqF,EAAM21C,MACP60C,EAAiB,iBACjBC,EAAY,eAAezqF,EAAM21C,QAGpC3kC,EAAMjb,KACH,uCAAuCy0F,aAA0BC,gBAAwBzqF,EAAMpS,aAAaoS,EAAMA,uBAG9GgR,EAAMjZ,KAAK,GACrB,KAIN0rG,EAAIvsG,QAAUA,EAAQzJ,KAAKw1C,IACjB,CACJr1C,GAAIq1C,EAAIr1C,GACRoS,MAAOijC,EAAI7wC,MAAQ6wC,EAAIjjC,UAKf,UAAbyjG,EAAI/xF,MAAoB+xF,EAAIvsG,QAAQ3G,OAAS,GAC9CkzG,EAAIvsG,QAAQnB,KAAK,CACdnI,GAAI,OACJoS,MAAOrR,KAAKwD,MAAM,YAGjBzD,MAAM6/D,GAAGk1C,EACnB,oBCxEH,MAAM+N,EAA0B,EAAQ,MAExCljH,EAAOC,QAAU,cAAyC,EAGvD,WAAAE,CAAYo0G,EAAU/3E,EAAQ2G,GAC3B/iC,MAAMm0G,EAAU/3E,GAAU,qBAAqB+3E,EAASj1G,KAAM6jC,GAC9D9iC,KAAK+I,KACF/I,KAAK2hB,SAAS5Y,MACd/I,KAAK+iB,KAAKpB,SAAS5Y,MACnB/I,KAAK+iB,KAAKjjB,YAAYqoC,gBAAgBp/B,IAC5C,CAEA,EAAA62D,GACG,MAAMk1C,EAAM,CAAC,EAEb,OAAQ90G,KAAK+I,MACV,IAAK,SACF+rG,EAAI/xF,KAAO,OACX,MACH,IAAK,WACF+xF,EAAI/xF,KAAO,WACX+xF,EAAI/kD,OAAS,IACb,MACH,IAAK,OACF+kD,EAAI/xF,KAAO,YACX+xF,EAAI/kD,OAAS,IACb+kD,EAAI/nF,IAAM,eACV+nF,EAAIhnG,KAAO,CACRiV,KAAM,iBACN1R,MAAO,GACP88G,IAAK,2BACLz8G,OAAQ,CACL6I,QAAS,OACT45H,QAAS,cACT7pB,QACG,mJAMf,OAAOvqH,MAAM6/D,GAAGk1C,EACnB,CAEA,YAAM9T,GACH,GAAkB,SAAdhhG,KAAK+I,KAAiB,aACpB/I,KAAKo0I,cACX,MACMnB,EADMjzI,KAAK4/D,KACO2mB,KAAK,GAC7B,IAAIiqD,EAAYhkH,GAAGxsB,KAAK8iC,IAAIusG,UAI5B,GAAImB,EAAW,CAEZA,EAAYxwI,KAAKO,GAAG0Q,MAAM2uD,GAAGqzE,EAAazC,GAG1C,MAAMt8B,EAAWl0G,KAAK+iB,KAEtBytH,EACIhmD,gBAAgB,GAChB6pD,WAAU,GACVhtI,MAAM0qF,IACJ,MAAMiL,EAAS,GAAGkX,EAASzxG,YAAYwwI,EAAYrnI,QAChDsoG,EAASj1G,IAAM,MACdi1G,EAASnsG,QAAQ9I,IAAM,KAE3B8yF,EAAOuiD,qBAAqBr+C,aAAa,UAAW+G,EAAO,GAEpE,CACH,CAKA,iBAAMo3C,SACGp0I,KAAKO,GAAG23E,OAAO,kBAAkB53E,MAC1C,oBC/EH,MAAMuiH,EAA0B,EAAQ,MAExCljH,EAAOC,QAAU,cAAsCijH,EACpD,WAAA/iH,CAAYo0G,EAAU/3E,EAAQ2G,GAC3B/iC,MAAMm0G,EAAU/3E,GAAU,kBAAkB+3E,EAASj1G,KAAM6jC,EAC9D,CAEA,EAAA88B,GACG,MAAMs0C,EAAWl0G,KAAK+iB,KAChB4L,EAAQulF,EAASvlF,QAEjBmmF,EAAM,CAAC,EAGb,IAAKnmF,EAAO,OAAO5uB,MAAM6/D,GAAGk1C,GAE5B,MAAMm7B,EAAe/7B,EAAS3jD,sBAAsB5uC,UAAY,CAAC,EAE3DwwH,EACyB,IAA5BxjH,EAAMhN,SAAS2/B,SAAiB,iBAAmB,GAEtD,IAAIgnF,EAAgB,GAEhB2H,EAAan8E,YAEXw0E,EADgC,QAA/B2H,EAAal8E,cACE,+KAA+Ko+E,qBAE/K,mMAAmMA,sBAGzN,IAAIhyD,EAAW8vD,EAAaj8E,WAExBh0D,KAAK2hB,SAAS2xC,WAAU6sB,GAAY,IAExC,MAAM5Q,EAAW,GAAG+4D,cAChB1iI,QAAQ,WAAYqqI,EAAaj8E,YACjCpuD,QAAQ,WAAY+oB,EAAMnrB,OAC1BoC,QACE,cACA+oB,EAAM4xD,aAAa,CAChBh/B,MAAO4+B,IACP5Q,UAuBT,OApBAulC,EAAI/xF,KAAO,WACX+xF,EAAI/nF,IAAM,eACV+nF,EAAI/kD,OAC4B,IAA7BphC,EAAMhN,SAAS0kC,UACVpmC,SAAS0O,EAAMhN,SAAS2kC,aACxB,GACRwuD,EAAItuB,YAAa,EAEjBsuB,EAAIvlC,SAAW,4BAA4BA,UAE3CulC,EAAIwlB,QAAU,CACXgW,YAAa,CAACrxI,EAAII,EAAGkxI,KAClB,MAAMtmH,EAAU,CAAC,EACd62D,EAAOt0D,GAAGxsB,KAAK8iC,IAAIusG,UAAUxlD,MAEhC5/D,EAAQ0E,EAAM1M,YAAcjiB,KAAK07C,WACjC/sB,EAAM+iE,WAAWznE,EAASjqB,KAAKO,GAAG67B,KAAM0kD,EAAM9gF,KAAK,GAIlDD,MAAM6/D,GAAGk1C,EACnB,CAEA,QAAAp5D,CAASzxB,GACN,IAAIo1C,EAAO7yC,GAAGxsB,KAAK8iC,IAAIusG,UAAU1uC,YAKjC,OAFIj7F,MAAMC,QAAQ05D,IAAyB,IAAhBA,EAAKz9D,SAAcy9D,EAAO,IAE9CA,CACV,oBC1EH,MAAM1pD,EAAkB,WAExBhW,EAAOC,QAAU,cAAmC+V,EACjD,WAAA7V,CAAYo0G,EAAU/3E,EAAQ2G,GAC3B/iC,MACGm0G,EACA/3E,GAAU,eAAe+3E,EAASj1G,KAClCQ,OAAO2vB,OAAO,CAAEw4C,MAAO,IAAM9kC,GAEnC,CAEA,EAAA88B,GACG,MAAMj+C,EAAW3hB,KAAK2hB,SAChBmzF,EAAM/0G,MAAM6/D,GAAG,CAClB,CACGqsB,KAAM,CACH,CACGhtF,GAAIe,KAAK8iC,IAAI8kC,MACb7kD,KAAM,WACNwsD,SAAU,GACVxf,OAAQpuC,EAASouC,OACjBxO,MAAO5/B,EAAS4/B,OAEnB,CAAC,MAOV,cAFOuzD,EAAI/rG,KAEJ+rG,CACV,CAEA,UAAMx0G,CAAKC,SACFR,MAAMO,KAAKC,GAEjB,MAAMg0I,EAAS/nH,GAAGxsB,KAAK8iC,IAAI8kC,OAC3B,IAAK2sE,EAAQ,OAEb,MAAM5yH,EAAW3hB,KAAK2hB,SAElBA,EAASkjC,SACV0vF,EAAOn6D,OACJ,WACA,mBAAmBz4D,EAASkjC,qBAAqBljC,EAASouC,kBAAkBpuC,EAAS4/B,WAEtFgzF,EAAOn6D,OAAO,WAAY,IAE/Bm6D,EAAO39H,SACV,oBCjDH,MAAMjB,EAAkB,WAClB6+H,EAAkB,EAAQ,OAEhC70I,EAAOC,QAAU,cAAoC+V,EAClD,WAAA7V,CAAYo0G,EAAU/3E,EAAQ2G,GAC3B/iC,MACGm0G,EACA/3E,GAAU,gBAAgB+3E,EAASj1G,KACnCQ,OAAO2vB,OACJ,CACGqlH,WAAY,GAEZC,OAAQ,GACRC,QAAS,GACTC,cAAe,IAElB9xG,IAIN9iC,KAAK60I,SAAW,IAAIL,EACjBx0I,KACAA,KAAK8iC,IAAI8xG,cACT50I,KAAK2hB,SAASwtD,YAGjBnvE,KAAK80I,qBAAuB,KAC5B90I,KAAK+0I,uBAAyB,KAC9B/0I,KAAKg1I,kBAAoB,KAEzBh1I,KAAKyvE,aAAeykC,EAASzkC,aAE7BzvE,KAAKi1I,oBAAsB,KAC3Bj1I,KAAKk1I,gBAAkB,KACvBl1I,KAAKm1I,aAAe,KACpBn1I,KAAKo1I,aAAe,IACvB,CAEA,kBAAI7nF,GACD,OAAQvtD,KAAKk1I,gBACVl1I,KAAKk1I,iBACLl1I,KAAKO,GAAGgV,MAAMmhB,eAAemH,WAAW,gBAC9C,CAEA,eAAIw3G,GACD,OAAQr1I,KAAKm1I,aACVn1I,KAAKm1I,cAAgBn1I,KAAKO,GAAGgV,MAAMmhB,eAAemH,WAAW,OACnE,CAEA,eAAIkhC,GACD,OAAQ/+D,KAAKo1I,aACVp1I,KAAKo1I,cAAgBp1I,KAAKO,GAAGgV,MAAMmhB,eAAemH,WAAW,OACnE,CAEA,EAAA+hC,GACG,MAAM98B,EAAM9iC,KAAK8iC,IACXqsD,EAAOnvF,KACbA,KAAK40G,SAAW50G,KAAK+iB,KAAK8xF,eAAer/D,YAEzC,MAAMs/D,EAAM/0G,MAAM6/D,GAAG,CAClB,CACG3gE,GAAI6jC,EAAI2xG,WACRxoD,KAAM,CACH,CACGhtF,GAAI6jC,EAAI4xG,OACR3xH,KAAM,SACNkpE,KAAM,GACNnpF,SAAU,CACPigB,KAAM,OAGNwsD,SAAU,qCACVhuB,MAAO,IACPtgD,GAAI,CACDq0I,eAAgB,WAEb,IAAKnmD,EAAK8lD,oBAAqB,OAE/B,MAAMM,EAASv1I,KAAKw1I,eAAc,GAC7BD,GAELpmD,EAAKsmD,YAAYtmD,EAAK8lD,oBAAqBM,EAC9C,IAGNxjD,QAAQ,EACRhxF,MAAO,GACP20I,KAAM,GACNt0I,KAAM,GACNH,GAAI,CACD00I,kBAAmB,CAACxtH,EAAQonB,KACzBvvC,KAAK6lH,uBAAuB39F,UAAUC,GACtCnoB,KAAKuB,KAAK,SAAU4mB,GAGpB,MAAM+8C,EAAWllE,KAAK2hB,SAASujD,SAC3BA,GACDllE,KAAK40G,SAAShB,WAAW1uC,EAAU/8C,GAEtC,MAAM68C,EAAchlE,KAAK2hB,SAASqjD,YAC9BA,GACDhlE,KAAK40G,SAAShB,WAAW5uC,EAAa78C,EAAO,EAEnDytH,oBAAqB,CAACnrH,EAAO/f,KAC1B1K,KAAK61I,aAAaprH,EAAO/f,EAAO,EAEnCorI,cAAgBrrH,IAEbzqB,KAAKi1I,oBAAsBxqH,CAAK,IAIzC,CACGxrB,GAAI6jC,EAAI6xG,QACR5xH,KAAM,UACNgK,IAAK,UACLw0B,MAAO,GACPklC,QAAQ,GAEXzmF,KAAK60I,SAASj1E,SAOvB,cAFOk1C,EAAI/rG,KAEJ+rG,CACV,CAEA,UAAMx0G,CAAKC,SACFR,MAAMO,KAAKC,GAEjB,MAAM41G,EAAUn2G,KAAKO,GAAG0Q,MAEpBjR,KAAK+1I,KAAK5/B,EAAQ56B,OAAOv7E,KAAK+1I,IAAK5/B,EAAQxmB,aAE/C3vF,KAAK60I,SAASv0I,KAAKC,GACnBP,KAAK60I,SAAS5zI,GAAG,OAAQq2H,IACtBt3H,KAAKygH,SAAS6W,EAAQ,IAEzBt3H,KAAK60I,SAAS5zI,GAAG,UAAWo2H,IACzBr3H,KAAKygH,SAAS4W,EAAW,IAG5B,IAAI3uG,EAAK1oB,KAAK+iB,KAAKwE,eACfmB,GAAI1oB,KAAKymH,mBAAmB/9F,GAEhC1oB,KAAK40G,SAASt0G,KAAK,CAChByiB,KAAM/iB,KAAK+iB,KACXwE,eAAgBmB,IAGnB1oB,KAAK6qF,MACR,CAEA,OAAIkrD,GACD,OAAQ/1I,KAAKg2I,IAAMh2I,KAAKg2I,KAAOxpH,GAAGxsB,KAAK8iC,IAAI4xG,OAC9C,CAEA,kBAAAuB,GACG,MAAO,CACJhiI,MAAO,CAEJ,CACG8J,KAAM,gBACNiP,MAAQvC,IACLzqB,KAAKk2I,WAAWzrH,EAAM,IAK/B0rH,eAAiBzqI,GAEX1L,KAAKg1I,mBACLtpI,EAAI1L,KAAKg1I,kBAAkB/yH,YAEpBjiB,KAAKg1I,kBAAkBn9H,OAAOnM,GAC5B,8CAIf0qI,aAAeh1I,GAEPpB,KAAKyvE,aAAahsE,KAIhBzD,KAAKyvE,aAAa0F,YAAY/zE,GAH3BpB,KAAKsmH,eAAev9E,YAAY3nC,GAMnD,CAOA,IAAA87E,GACG1wD,GAAGxsB,KAAK8iC,IAAI2xG,aAAav3D,MAC5B,CAMA,UAAM2N,GACH,MAAM/nD,EAAM9iC,KAAK8iC,IAEjBtW,GAAGsW,EAAI2xG,aAAa5pD,OAEpB7qF,KAAK60I,SAAS33D,OAEd1wD,GAAGsW,EAAI6xG,UAAUz3D,OAEjB,IAAIopC,EAAgBtmH,KAAKsmH,cAIzB,GAHKA,IACFA,EAAgBtmH,KAAKunB,gBAAgBD,aAEnCg/F,EAAe,OAIpB,MAAMwuB,EAAuBxuB,EAAc1+F,UACxC5nB,KAAK2hB,SAASytD,uBAEjB,IAAK0lE,EAAsB,OAE3B90I,KAAK80I,qBAAuBA,EAE5B,IAAIuB,EAAoB,GAExB,MAAMtB,EAAyBzuB,EAAc1+F,UAC1C5nB,KAAK2hB,SAAS0tD,yBAGjBrvE,KAAK+0I,uBAAyBA,EAG3BA,GACAA,aAAkC/0I,KAAKutD,iBAGvC8oF,QAA0BtB,EAAuBvkD,cAGpD,MAAM8lD,GAAmBxB,EAAqBnzH,SAASpZ,SAAW,IAAIzJ,KAClEw1C,IAEE,GAAIwgG,GAAwBC,EAAwB,CACjD,IAAIxuD,EAAO,GAKRgwD,EAAiB,GAiDpB,OA9CIxB,aAAkC/0I,KAAK++D,YAExCw3E,GACGxB,EAAuBpzH,SAASpZ,SAAW,IAC5CzJ,KAAKM,GAAMA,IACL21I,aAAkC/0I,KAAKq1I,YAC/CkB,EAAiBxB,EAAuBrtE,WAAW5oE,KAC/C0d,IACS,CACJvd,GAAIud,EAAEvd,GACNwE,KAAM+Y,EAAE/Y,MAAQ+Y,EAAEnL,UAInB0jI,aAAkC/0I,KAAKutD,iBAC/CgpF,EAAiBF,EAAkBv3I,KAAI,EAAGG,KAAIwE,WAAW,CACtDxE,KACAwE,YAGN8yI,EAAenvI,KAAK,CACjBnI,GAAI,KACJwE,KAAMzD,KAAKwD,MAAM,WAGpB+yI,EAAevwI,SAASkD,IACrB,MAAMstI,EAAY,CAAC,EAEnBA,EAAU1B,EAAqB7yH,YAAcqyB,EAAIr1C,GACjDu3I,EAAUzB,EAAuB9yH,YAAc/Y,EAAIjK,GAGnDsnF,EAAKn/E,KAAK,CACPmoE,SAAUrmE,EAAIzF,KACdssD,OAAQ,GACRhjC,IAAK,oBAIRw5D,EAAKn/E,KAAK,CACP2b,KAAM,aACNrY,OAAQ8rI,EACRztI,KAAM/I,KAAKi2I,sBACZ,IAGE,CACJj5H,OAAQs3B,EAAI7wC,KACZqK,KAAM,CACH46E,OAAQ,EACRnC,KAAMA,GAGf,CAEK,GAAIuuD,EAAsB,CAC5B,MAAM0B,EAAY,CAAC,EAInB,OAFAA,EAAU1B,EAAqB7yH,YAAcqyB,EAAIr1C,GAE1C,CACJ+d,OAAQs3B,EAAI7wC,KACZqK,KAAM,CACHiV,KAAM,aACNrY,OAAQ8rI,EACRztI,KAAM/I,KAAKi2I,sBAGpB,KAIAhgC,EAAKj2G,KAAKO,GACA01G,EAAGhlG,MAIX2uD,GAAG02E,EAAiB9pH,GAAGsW,EAAI4xG,SACnCloH,GAAGsW,EAAI4xG,QAAQ+B,cAGf,MAAMzB,EAAoB1uB,EAAc1+F,UACrC5nB,KAAK2hB,SAAS2tD,YAKjB,GAFAtvE,KAAKg1I,kBAAoBA,EAErBA,EAAmB,CACpB,MAAM0B,EAAYlqH,GAAGsW,EAAI4xG,QAAQiC,cAIjC,GAFAD,EAAUllI,WAENwjI,aAA6Bh1I,KAAKq1I,YAAa,CAChD,MAAMt0I,EAAQk1G,EAAG7wG,QAAQtC,WAAWhE,KAAK0d,IAC/B,CACJvd,GAAIud,EAAE3Z,SACNwO,MAAOmL,EAAE3Z,aAIf6zI,EAAU9rI,MAAM7J,EACnB,MAAO,GAAIi0I,aAA6Bh1I,KAAKutD,eAAgB,CAC1D,MAAMhlD,QAAgBysI,EAAkBxkD,aAExC,IACGkmD,EAAU9rI,MACPrC,EAAQzJ,KAAKw1C,IACH,CACJr1C,GAAIq1C,EAAIr1C,GACRoS,MAAOijC,EAAI7wC,SAIvB,CAAE,MAAOpE,GAGNgC,QAAQC,MAAMjC,GACdgC,QAAQqF,KAAK6B,EAChB,CACH,CACH,CACH,CAEA,IAAAgoF,GACGvwF,KAAK+1I,KAAKt7D,eAAe,CAAE1xE,KAAM,QACpC,CAEA,KAAA4nF,GACG3wF,KAAK+1I,KAAK96D,gBACb,CAEA,UAAA1mB,CAAWzvC,GACR/kB,MAAMw0D,WAAWzvC,GAEjB9kB,KAAKyvE,aAAalb,WAAWzvC,GAC7B9kB,KAAK60I,SAAStgF,WAAWzvC,EAC5B,CAOA,kBAAA2hG,CAAmBl/F,GAChBxnB,MAAM0mH,mBAAmBl/F,GAEzB,MAAMqF,EAAK5sB,KAAK6lH,uBAAyBt+F,EAEzC,GAAIqF,EAAJ,CACGA,EAAG2G,KAAKvzB,KAAK+1I,KAEb,MAAMrqI,EAAMkhB,EAAGtF,WAEX5b,GAAK1L,KAAKu0D,WAAW7oD,EAG5B,MAEA1L,KAAK+1I,IAAIviH,QACZ,CAEA,kBAAMqiH,CAAaprH,EAAO/f,GACvB,IAAK1K,KAAK80I,qBAAsB,OAGhC90I,KAAKuwF,OAEL,IAAIi2B,EAAQ,CAAC,EAGT97G,aAAkBjL,OAAQ+mH,EAAQ97G,EAEjC87G,EAAMxmH,KAAK80I,qBAAqB7yH,YAAcvX,EAGnD,IAAIksI,GAAc,EAElB,IAAK,MAAMn0I,KAAO+jH,EACVA,EAAM/jH,KACR+jH,EAAM/jH,GAAO,GAIbm0I,GAAc,GAGpB,IAQG,SAPM52I,KAAKsmH,eAAej6G,QAAQ+yE,OAAO30D,EAAO+7F,IAEhDxmH,KAAK2wF,QAEDimD,GAAa52I,KAAK6qF,OAGlB7qF,KAAK60I,SAAS3kD,YAAa,CAC5B,MAAM9uF,EAAOorB,GAAGxsB,KAAK8iC,IAAI4xG,QAAQlsH,QAAQiC,GAEzCzqB,KAAK60I,SAASj+H,QAAQxV,EACzB,CACH,CAAE,MAAOD,GACNnB,KAAKO,GAAGoJ,OAAOC,UAAUzI,EAAK,CAC3BD,QAAS,kDACTupB,QACA+7F,SAEN,CACH,CAEA,iBAAMivB,CAAYhrH,EAAOvhB,GACtB,IAAKlJ,KAAKg1I,kBAAmB,OAG7Bh1I,KAAKuwF,OAEL,MAAMi2B,EAAQ,CAAC,EAEfA,EAAMxmH,KAAKg1I,kBAAkB/yH,YAAc/Y,EAE3C,IACG,MAAM0+H,QAAmB5nI,KAAKsmH,eAAej6G,QAAQ+yE,OAClD30D,EACA+7F,IAOH,GAHAxmH,KAAK+1I,KAAKnoH,WAAWnD,EAAOm9G,GAGxB5nI,KAAK60I,SAAS3kD,YAAa,CAC5B,MAAM9uF,EAAOpB,KAAK+1I,IAAIvtH,QAAQiC,GAE9BzqB,KAAK60I,SAASj+H,QAAQxV,EACzB,CAEApB,KAAK2wF,OACR,CAAE,MAAOxvF,GACNnB,KAAKO,GAAGoJ,OAAOC,UAAUzI,EAAK,CAC3BD,QAAS,iDACTupB,QACAvhB,QAGHlJ,KAAK2wF,OACR,CACH,CAEA,QAAA8vB,CAASr/G,GAEFA,EAAKnC,IAAMe,KAAK+1I,IAAIntH,OAAOxnB,EAAKnC,IACjCe,KAAK+1I,IAAInoH,WAAWxsB,EAAKnC,GAAImC,GAE3BpB,KAAK+1I,IAAIr9H,IAAItX,EACrB,CAEA,QAAAyxH,GACO7yH,KAAK+1I,KACN/1I,KAAK+1I,IAAIc,UAAUtnG,IAChBA,GAAMsjF,YAAY,GAE3B,CAEA,OAAAikB,GACG92I,KAAK6yH,WAGL7yH,KAAK60I,SAAShqD,OACdr+D,GAAGxsB,KAAK8iC,IAAI6xG,SAAS9pD,MACxB,CAEA,gBAAMqrD,CAAWzrH,GACd,MAAMwrF,EAAKj2G,KAAKO,GACV41G,EAAUF,EAAGhlG,MAEnBklG,EAAQnyG,QAAQ,CACbV,MAAOtD,KAAKwD,MAAM,eAClBC,KAAMzD,KAAKwD,MAAM,oCACjBS,SAAUwuB,MAAOvuB,IACd,GAAKA,EAAL,CAEAlE,KAAKuwF,OAEL,WAC0BvwF,KAAKsmH,eAAej6G,QAAQqC,OAAO+b,KAE7C0kG,QAAU,EACpBnvH,KAAK+1I,IAAIxkI,OAAOkZ,GAEhB0rF,EAAQ9yG,MAAM,CACXI,KAAMzD,KAAKwD,MACR,qDAIZ,CAAE,MAAOrC,GACN80G,EAAGtsG,OAAOC,UAAUzI,EAAK,CACtBuC,QAAS,kDACT+mB,SAEN,CAEAzqB,KAAK2wF,OAvBc,CAuBP,GAGrB,CAWA,SAAAomD,CAAUxuI,GACPvI,KAAK80I,qBAAuBvsI,EAAQyuI,iBACpCh3I,KAAK+0I,uBAAyBxsI,EAAQ0uI,mBACtCj3I,KAAKg1I,kBAAoBzsI,EAAQ+mE,UACpC,oBC/jBH,MAAM35D,EAAkB,WAExBhW,EAAOC,QAAU,cAAmC+V,EACjD,WAAA7V,CAAYo0G,EAAU/3E,EAAQ2G,GAC3B/iC,MAAMm0G,EAAU/3E,GAAU,eAAe+3E,EAASj1G,KAAM6jC,EAC3D,CAEA,EAAA88B,GACG,MAAMs0C,EAAWl0G,KAAK+iB,KAEhB+xF,EAAM/0G,MAAM6/D,GAAG,CAClB5/D,KAAKk3I,aAAa,CACfn0H,KAAM,QAENvf,MAAO0wG,EAASzwG,MAAQ,IACxByyG,MAAOl2G,KAAK2hB,SAASqxC,UACrBjqD,KAAM,CACHgnD,OAAQ,YAOjB,cAFO+kD,EAAI/rG,KAEJ+rG,CACV,CASA,YAAAoiC,CAAat3E,GAGV,OAAQ3/C,SAASjgB,KAAK2hB,SAAS9J,SAE5B,KAAK,EACF+nD,EAAG7yC,IAAM,sCACT,MAGH,KAAK,EACF6yC,EAAG7yC,IAAM,uCACT,MAGH,KAAK,EACF6yC,EAAG7yC,IAAM,4CAIf,OAAO6yC,CACV,oBCvDH,MAAMjqD,EAAkB,WAExBhW,EAAOC,QAAU,cAAoC+V,EAClD,WAAA7V,CAAYo0G,EAAU/3E,EAAQ2G,GAC3B/iC,MAAMm0G,EAAU/3E,GAAU,gBAAgB+3E,EAASj1G,KAAM6jC,GAEzD,MAAM48E,EAAiB1/G,KAAK0/G,gBAAkB,CAAC,EAE/CxL,EAASvxF,QAAQ3c,SAASC,IACvBy5G,EAAez5G,EAAEhH,IAAMgH,EAAEuvC,WAAW,IAGvCx1C,KAAK0/G,eAAiBA,CACzB,CAEA,EAAA9/C,GACG,MAAM8/C,EAAiB1/G,KAAK0/G,eACtBikB,EAAelkI,OAAOD,KAAKkgH,GAC7B5gH,KAAKq4I,GAAQz3B,EAAey3B,GAAKv3E,OACjCj9D,QAAQi9D,GAAOA,IAEQ,GAAvB+jE,EAAa/hI,SACd+hI,EAAav8H,KAAK,CAAC,GACnBu8H,EAAav8H,KAAK,CACf2b,KAAM,QACNvf,MAAOxD,KAAKwD,MAAM,gBAErBmgI,EAAav8H,KAAK,CAAC,IAGtB,MAAM0tG,EAAM/0G,MAAM6/D,GAAG,CAClB,CACG78C,KAAM,SACNkpE,KAAM03C,KAMZ,cAFO7uB,EAAI/rG,KAEJ+rG,CACV,CAEA,UAAMx0G,CAAKC,EAAI0oE,SACNlpE,MAAMO,KAAKC,GAEjB,MAAM2zG,EAAWl0G,KAAK+iB,KAGtBmxF,EAASvxF,QAAQ3c,SAASC,IACvB,MAAMuvC,EAAYx1C,KAAK0/G,eAAez5G,EAAEhH,IAGxCu2C,GAAWl1C,KAAKC,EAAI0oE,GAGpBirC,EAASnkF,SAAS,CACfC,QAAS/pB,EACTgqB,UAAW,aACXC,SAAW0gD,IACRsjC,EAASN,WAAWhjC,EAAO,GAE/B,GAER,CAEA,MAAAowB,GAEGhhG,KAAK+iB,KAAKJ,QAAQ3c,SAASC,IACxB,MAAMuvC,EAAYx1C,KAAK0/G,eAAez5G,EAAEhH,IACxCu2C,GAAWwrD,QAAQ,GAEzB,oBCvEH,MAAMrrF,EAAkB,WAExBhW,EAAOC,QAAU,cAAkC+V,EAChD,WAAA7V,CAAYo0G,EAAU/3E,EAAQ2G,GAC3B/iC,MACGm0G,EACA/3E,GAAU,cAAc+3E,EAASj1G,KACjCQ,OAAO2vB,OAAO,CAAEmgB,KAAM,IAAMzM,GAElC,CAEA,EAAA88B,GACG,MAAMj+C,EAAW3hB,KAAK2hB,SAChBy1H,EAAU,CACbn4I,GAAIe,KAAK8iC,IAAIyM,KACbxsB,KAAM,WACNha,KAAM,CACHw4C,MAAO,IACPwO,OAAQ,IAEXwf,SAAWnmD,IACR,MAAMuF,EAAQ3uB,KAAK+iB,KAAK4L,QAExB,OAAKA,EAEEA,EAAM9W,OAAOuR,GAFD,EAEM,GAKP,IAApBzH,EAASouC,OAAcqnF,EAAQrnF,OAASpuC,EAASouC,OAChDqnF,EAAQC,YAAa,EAE1B,MAAMviC,EAAM/0G,MAAM6/D,GAAG,CAACw3E,IAItB,cAFOtiC,EAAI/rG,KAEJ+rG,CACV,CAEA,UAAMx0G,CAAKC,SACFR,MAAMO,KAAKC,GAEjB,MAAMmoB,EAAK1oB,KAAKunB,eAEXmB,GAGLA,EAAG6K,KAAK/G,GAAGxsB,KAAK8iC,IAAIyM,MAEvB,oBClDH,MAAM55B,EAAkB,WAExBhW,EAAOC,QAAU,cAAkC+V,EAChD,WAAA7V,CAAYo0G,EAAU/3E,EAAQ2G,GAC3B/iC,MACGm0G,EACA/3E,GAAU,cAAc+3E,EAASj1G,KACjCQ,OAAO2vB,OACJ,CACG40F,KAAM,IAETlhF,GAGT,CAEA,EAAA88B,GACG,MAAMj+C,EAAW3hB,KAAK2hB,SAChBmzF,EAAM/0G,MAAM6/D,GAAG,CAClB3/C,SAAS0B,EAASuuD,eAAiBlwE,KAAK2tH,YAAc3tH,KAAKs3I,WAK9D,cAFOxiC,EAAI/rG,KAEJ+rG,CACV,CAEA,MAAAwiC,GACG,MAAMpjC,EAAWl0G,KAAK+iB,KAChBpB,EAAW3hB,KAAK2hB,SAChB66E,EAAkB0X,EAASp0G,YAAYqoC,gBACvCpb,EAAM,GAAGpL,EAASquD,aAAewsB,EAAgBxsB,eACpDruD,EAASsuD,eAAiBusB,EAAgBvsB,iBAG7C,MAAO,CACJhxE,GAAIe,KAAK8iC,IAAIkhF,KACbjhG,KAAM,OACN2lG,YAAY,EACZ17B,WAAW,EACXuqD,SAAU,OACVxqH,IAAKA,EACL2jE,OAAQ/uE,EAASouD,aAAeysB,EAAgBzsB,YAChD9uE,GAAI,CACDu2I,gBAAkBv4I,IACfe,KAAKs6H,QAAQr7H,EAAG,EAEnB0qF,cAAe,KACZ3pF,KAAKy3I,eAAe,GAG1B1uI,KAAM,CACH2uI,SAAS,GAGlB,CAEA,SAAA/pB,GACG,MAAMhsG,EAAW3hB,KAAK2hB,SAChBuyF,EAAWl0G,KAAK+iB,KAChBy5E,EAAkB0X,EAASp0G,YAAYqoC,gBACvCwvG,EAAU33I,KAAKs3I,SAErB,IAAIM,EAAQ,GACRC,GAAe,EAGnB,MAAMvnE,EAAe4jC,EAAS5jC,cAAgB3uD,EAAS2uD,aACjDE,EAAiB0jC,EAAS1jC,gBAAkB7uD,EAAS6uD,eACrDD,EAAgB2jC,EAAS3jC,eAAiB5uD,EAAS4uD,cAEzD,GAA8B,SAA1B5uD,EAAS0uD,aACVwnE,GAAe,EACfD,EAAMxwI,KAAKuwI,QACP,GAAIrnE,GAAc1uE,OAAQ,CAC9B,MAAM2/C,EAA8B,GAAtB+uB,EAAa1uE,OAE3Bg2I,EAAMxwI,KAAK,CACR2b,KAAM,QACNvf,MAAO8sE,EACP4lC,MAAO,OACP30D,MAAOA,GAEb,MACGq2F,EAAMxwI,KAAK,CACR2b,KAAM,QACNvf,MAAO,GACPwpF,WAAW,IAGjB,GAA+B,WAA3BrrE,GAAU0uD,aACXwnE,GAAe,EAEfD,EAAMxwI,KAAKuwI,QACP,GAAInnE,GAAgB5uE,OAAQ,CAChC,MAAM2/C,EAA8B,GAAtB+uB,EAAa1uE,OAE3Bg2I,EAAMxwI,KACH,CAAC,EACD,CACG2b,KAAM,QACNvf,MAAOgtE,EACP0lC,MAAO,SACP30D,MAAOA,GAEV,CAAC,EAEP,MACGq2F,EAAMxwI,KAAK,CACR2b,KAAM,QACNvf,MAAO,GACPwpF,WAAW,IAGjB,GAA+B,UAA3BrrE,GAAU0uD,aACXwnE,GAAe,EAEfD,EAAMxwI,KAAKuwI,QACP,GAAIpnE,GAAe3uE,OAAQ,CAC/B,MAAM2/C,EAA8B,GAAtB+uB,EAAa1uE,OAE3Bg2I,EAAMxwI,KAAK,CACR2b,KAAM,QACNvf,MAAO+sE,EACP2lC,MAAO,QACP30D,MAAOA,GAEb,MACGq2F,EAAMxwI,KAAK,CACR2b,KAAM,QACNvf,MAAO,GACPwpF,WAAW,IAKjB,OAFqB,IAAjB6qD,IAAwBD,EAAQ,CAACD,IAE9B,CACJ50H,KAAM,UACNgK,IAAKpL,EAASyuD,WAAaosB,EAAgBpsB,UAC3C5C,QAAS7rD,EAASwuD,YACblwD,SAAS0B,EAASwuD,aAClBqsB,EAAgBrsB,YACrB/5D,SAAUwhI,EAEhB,CAEA,UAAMt3I,CAAKC,SACFR,MAAMO,KAAKC,GAEjB,MAAM6lH,EAAQ55F,GAAGxsB,KAAK8iC,IAAIkhF,MACpB9P,EAAWl0G,KAAK+iB,KAEtB,GAAIqjG,EAAO,CACR,MAAMzkG,EAAW3hB,KAAK2hB,SAEtBuyF,EAASrjC,iBAAiBu1C,GAEtBzkG,EAAS8uD,OAAO7uE,SACjBsyG,EAASpjC,eAAes1C,EAAOzkG,EAAS8uD,OAExC21C,EAAMxvG,UAEZ,CACH,CAEA,OAAA0jH,CAAQnyG,GACL,MAAMi+F,EAAQ55F,GAAGxsB,KAAK8iC,IAAIkhF,MAC1B,IAAI8zB,EACJ,IACGA,EAAQ1xB,EAAM90C,YAAYnpD,EAC7B,CAAE,MAAOhnB,GAUN,YATAnB,KAAKO,GAAGoJ,OAAOC,UAAUzI,EAAK,CAC3BD,QACG,+DACHinB,SACA67F,KAAM,CACH/kH,GAAIe,KAAK+iB,KAAK9jB,GACd0iB,SAAU3hB,KAAK+iB,KAAKpB,WAI7B,CACA,MAAMuyF,EAAWl0G,KAAK+iB,KAGtB,GAAmB,QAAf+0H,EAAM/uI,KAAgB,CACvBmrG,EAASN,WAAWkkC,EAAMlnE,QAE1B,MAAMmnE,EAAe7jC,EAASzvF,YAAYrE,OACtC3F,GAAMA,EAAExb,KAAO64I,EAAMlnE,SACtB,GACD,GAEF,IAAKmnE,EAAc,OAEnB,MAAMlmE,EAAUkmE,EAAap1H,OAAO1c,GAAMA,EAAEhH,KAAO64I,EAAM74I,KAAI,GAAM,GAEnE,IAAK4yE,EAAS,OAEd,MAAMmhD,EAAMnhD,EAAQ9pE,OAEpB,IAAKirH,EAAK,OAEVhzH,KAAKg4I,aAAahlB,GAGlB,MAAMilB,EAAShU,aAAY,KACpBz3G,GAAGqlD,EAAQ5yE,KAAOutB,GAAGqlD,EAAQ5yE,IAAIixF,YAClCg0C,cAAc+T,GAKjBjlB,EAAIzxH,KAAK,YAAaswE,EAAQ5yE,GAAG,GACjC,IAEN,MAEKi1G,EAASN,WAAWzrF,EAC5B,CAEA,YAAA6vH,CAAar8G,GACV,IAAKA,EAAQ5zB,OAAQ,OAAO,EAE5B,MAAMmwI,EAAav8G,EAAQ5zB,OAE3B,IAAKmwI,GAAYnwI,OAAQ,OAAO,EAEhCmwI,EAAWnwI,OAAOxG,KAAK,YAAa22I,EAAWj5I,IAC/Ce,KAAKg4I,aAAaE,EAAWnwI,OAChC,CAEA,aAAA0vI,GACG,MAAMrxB,EAAQ55F,GAAGxsB,KAAK8iC,IAAIkhF,MAErBoC,GAELA,EAAMhlH,KAAK20F,MAAM3sE,IACd,MAAM03D,EAAOslC,EAAMrlC,YAAY33D,EAAKnqB,IAEpC,IAAK6hF,EAAM,OAGX,MAAMq3D,EAAWn4I,KAAKO,GAAGue,eAAesK,EAAKnqB,IAE7C6hF,EAAKmV,aACF,UACA,aAAakiD,GAAUvsI,QAAQwd,EAAKnqB,MAAMe,KAAK+iB,KAAK9jB,KACtD,GAEP,oBC1PH,MAAM0W,EAAkB,WAKxBhW,EAAOC,QAAU,cAAyC+V,EACvD,WAAA7V,CAAYo0G,EAAU/3E,EAAQ2G,GAC3B/iC,MACGm0G,EACA/3E,GAAU,qBAAqB+3E,EAASj1G,KACxCQ,OAAO2vB,OACJ,CACGgpH,aAAc,GACdC,WAAY,GACZpuE,SAAU,GACVquE,eAAgB,GAChBC,kBAAmB,GACnBC,sBAAuB,GACvBC,eAAgB,GAChBpI,UAAW,GACXqI,YAAa,GACb7uB,OAAQ,IAEX/mF,GAGT,CAEA,EAAA88B,GACG,MAAM98B,EAAM9iC,KAAK8iC,IACXqsD,EAAOnvF,KA6Jb,OA5JYD,MAAM6/D,GAAG,CAClB,CACG2mB,KAAM,CACH,CACG0F,KAAM,CACH,CACGhtF,GAAI6jC,EAAIs1G,aACRr1H,KAAM,WACNnX,KAAM,UACN8Q,KAAMomB,EAAIu1G,WACV70I,MAAOxD,KAAKwD,MAAM,qBAClByqH,WAAY,IACZ1sE,MAAO,IACP44E,OAAQ,kBACRviC,UAAU,EACVwiC,UAAU,EACVrxH,KAAM,OACNgV,KAAM,mBACN9c,GAAI,CACD42F,gBAAkBtT,IACfvkF,KAAKk6H,aAAe31C,IACfvkF,KAAKk6H,eAEVl6H,KAAK24I,YAEE,MAIhB,CACG15I,GAAI6jC,EAAIu1G,WACRt1H,KAAM,OACNha,KAAM,WACN2/G,YAAY,EACZliC,YAAY,EACZ8zC,QAAS,CACNC,oBAAqB,CAACl7H,EAAGJ,KACtBe,KAAK44I,WAAW35I,EAAG,IAI5B,CACGsiD,MAAO,IAEV,CACGx+B,KAAM,SACNha,KAAM,OACNgV,KAAM,iBACNsxE,SAAU,GACVriE,MAAO,KACJhtB,KAAK64I,YAAY,GAGvB,CACG91H,KAAM,SACNha,KAAM,OACNgV,KAAM,WACNsxE,SAAU,GACVriE,MAAO,KACJhtB,KAAK84I,cAAc,KAK/B,CACG/oF,OAAQ,IAEX,CACG9wD,GAAI6jC,EAAImnC,SACRlnD,KAAM,WACNyjE,YAAY,EACZz5D,IAAK,gBACLulE,aAAa,EACbke,QAAQ,EACRznG,KAAM,CACHwmE,SAAWnmD,GACDppB,KAAK+4I,aAAa3vH,GAE5Bm4B,MAAO,OACPwO,OAAQ,QAEX9uD,GAAI,CACDq0I,eAAiB0D,IACdh5I,KAAKi5I,kBAAkB,EAE1BvmC,YAAa,SAAUzzG,EAAII,EAAGyhF,GAEvBzhF,GAAG65D,QAAQkD,WAAWnnB,WAAW,iBAClCk6C,EAAK0jC,SAAS5zH,GAIdI,GAAG65D,QAAQkD,WAAWnnB,WAAW,eAEjCk6C,EAAKqhB,OAAOvxG,GAGNI,GAAG65D,QAAQkD,WAAWnnB,WAAW,cACvCk6C,EAAK+pD,gBAAgBruD,OACrBr+D,GAAG2iE,EAAKrsD,IAAIy1G,mBAAmBY,eAC5Bl5H,SAAShhB,GAAM,GAAK,GAEvBkwF,EAAKiqD,mBAEX,IAGN,CACGrpF,OAAQ,IAEX,CACGk8B,KAAM,CACH,CACGhtF,GAAI6jC,EAAIutG,UACRttH,KAAM,SACNha,KAAM,OACNgV,KAAM,uBACNsxE,SAAU,IACV7rF,MAAOxD,KAAKwD,MAAM,cAClBwpB,MAAO,KACJhtB,KAAKqwI,WAAW,GAGtB,CACGpxI,GAAI6jC,EAAI41G,YACR31H,KAAM,SACNha,KAAM,OACNgV,KAAM,iBACNsxE,SAAU,IACV7rF,MAAOxD,KAAKwD,MAAM,gBAClBwpB,MAAO,KACJhtB,KAAK04I,aAAa,GAGxB,CACG9lC,WAAW,GAEd,CACG3zG,GAAI6jC,EAAI+mF,OACR9mG,KAAM,SACNgK,IAAK,gBACLhkB,KAAM,OACNgV,KAAM,iBACNkuB,UAAU,EACVojD,SAAU,IACV7rF,MAAOxD,KAAKwD,MAAM,UAClBwpB,MAAO,KACJhtB,KAAK6pH,QAAQ,QAUrC,CAEA,OAAAyR,GACG,MAAMx4F,EAAM9iC,KAAK8iC,IACjB,MAAO,CACJ7jC,GAAI6jC,EAAIw1G,eACRv1H,KAAM,SACN4vF,OAAO,EACP3qD,SAAU,SACVqxF,WAAY,GACZx9H,KAAM,CACHowE,KAAM,CACH,CAAE2mB,WAAW,GACb,CACG7vF,KAAM,SACNha,KAAM,OACNgV,KAAM,cACNsxE,SAAU,GACVt/B,OAAQ,GACR/iC,MAAO,KACJR,GAAGsW,EAAIw1G,iBAAiBp7D,MAAM,KAK1CpvE,KAAM,CACHy4E,KAAM,CACH,CACGtnF,GAAI6jC,EAAIy1G,kBACRx1H,KAAM,WACNw+B,MAAO,IACPwO,OAAQ,IACRglD,WAAY,CACT1yF,OAAO,EACP2yF,SAAS,EACTjsG,KAAM,QAETkjF,KAAM,GACNhrF,GAAI,CACD+/F,OAAQ,KACLhhG,KAAKo5I,kBAAkB,IAIhC,CACGr2H,KAAM,SACNkpE,KAAM,CACH,CACGhtF,GAAI6jC,EAAI01G,sBACRz1H,KAAM,SACNha,KAAM,OACNuwI,QAAS,iBACTC,OAAQ,uBACRC,SAAUx5I,KAAKwD,MAAM,cACrBi2I,QAASz5I,KAAKwD,MAAM,YACpB+9C,MAAO,IACPtgD,GAAI,CACDowC,SAAWqoG,IACR,MAGMC,EAHcntH,GACjBxsB,KAAK8iC,IAAIy1G,mBACVrjC,iBAC+B,EAE7BwkC,EAAY15I,KAAKwwG,OAAOmpC,GACvB35I,KAAK6yH,SAAS8mB,EAAW,IAIvC,CACG/mC,WAAW,GAEd,CACG3zG,GAAI6jC,EAAI21G,eACR11H,KAAM,QACNw+B,MAAO,IACP/9C,MAAO,GAAGxD,KAAKwD,MAAM,yBAO1C,CAEA,UAAMlD,CAAKC,SACFR,MAAMO,KAAKC,GAEjB,MAAM+lI,EAAY95G,GAAGxsB,KAAK8iC,IAAImnC,UAG9B,GAFIq8D,GAAWtmI,KAAKO,GAAG0Q,MAAMsqE,OAAO+qD,EAAWljI,MAAMusF,cAEhD3vF,KAAKk5I,gBAAiB,CACxB,MAAMZ,EAAiBt4I,KAAKs7H,UAC5Bt7H,KAAKk5I,gBAAkBl5I,KAAKO,GAAG0Q,MAAM2uD,GAAG04E,EAC3C,CACH,CAEA,MAAAt3C,GACGhhG,KAAK45I,YACL75I,MAAMihG,QACT,CAMA,eAAM44C,GACC55I,KAAK65I,OAASrrI,OAAOsrI,cACzB95I,KAAKuwF,OACLvwF,KAAK65I,aACI,sDAIP9pG,QACF/vC,KAAK2wF,QACR,CAEA,qBAAMopD,GACH,MAAM7f,EAAel6H,KAAKk6H,aAC1B,IAAKA,IAAiBA,EAAa11C,KAChC,OAAOhjF,QAAQ9B,QAAQ,IAAIs6I,YAAY,IAE1C,MAAMC,EAAa,IAAIp1D,WAEvB,OAAO,IAAIrjF,SAAQ,CAAC9B,EAASoK,KAC1BmwI,EAAW99H,OAAU8Q,IAClB,MAAMitH,EAAajtH,EAAMisC,OAAOh1D,OAChCxE,EAAQw6I,EAAW,EAEtBD,EAAW79H,QAAW6Q,IACnBnjB,EAAOmjB,EAAM,EAEhBgtH,EAAWE,kBAAkBjgB,EAAa11C,KAAK,GAErD,CAEA,aAAM41D,CAAQT,EAAY5+C,GACvB,GAAKA,EAEL,OAAO,IAAIv5F,SAAQ,CAAC9B,EAASoK,KAC1BixF,EAAOs/C,QAAQ/7B,IACZ,MAAM95B,EAAO,IAAI81D,KAAK,CAACh8B,GAAO,GAAGq7B,QAAkB,CAChD5wI,KAAM,cAGTrJ,EAAQ8kF,EAAK,GACb,YAAY,GAErB,CAEA,kBAAM+1D,CAAaZ,GAEhB,MAGMa,EAAW,GAAGx6I,KAAK+iB,KAAK9jB,iBACxB87F,EACHj/E,SAASg7F,eAAe0jC,IAAa1+H,SAASE,cAAc,UAC/D++E,EAAO97F,GAAKu7I,EACZz/C,EAAOx5C,MAPqB,WAStBvhD,KAAKy6I,SAASd,EAAY5+C,GAChC,MAAM2/C,QAAiB16I,KAAKo6I,QAAQT,EAAY5+C,GAEhD,OAAO,IAAIv5F,SAAQ,CAAC9B,EAASoK,KAE1B,MAAM6wI,EAAY36I,KAAKO,GAAG0Q,MAAM2uD,GAAG,CAChC78C,KAAM,WACN00E,SAAS,EACTC,OAAQ13F,KAAK2uB,MAAM4oE,YACnBI,UAAW,OACXC,UAAU,EACV32F,GAAI,CAEDi3F,aAAc,CAAC9uE,EAAMve,KAElBnL,EAAQmL,GAAUzJ,MAAMO,KAAK,EAGhCw2F,kBAAmB,CAAC/uE,EAAMve,KACvBf,EAAOe,EAAS,EAEnB+vI,iBAAkB,IAAMD,EAAUtoB,gBAIxCsoB,EAAUE,QAAQH,EAAUA,EAASziD,KAAK,GAEhD,CAEA,sBAAA6iD,GACG,MAAMxU,EAAY95G,GAAGxsB,KAAK8iC,IAAImnC,UACxB8wE,EAAiE,GAA9CzU,EAAUkP,eAAc,IAAS,IAAI5zI,OAE9D5B,KAAKg7I,eAAiBh7I,KAAKg7I,gBAAkB,EAC7Ch7I,KAAKg7I,iBAEL1U,GAAW7rD,eAAe,CACvB1xE,KAAM,SACNi/C,SAAUhoD,KAAKg7I,eAAiBD,GAEtC,CAEA,cAAMpC,GAIH,GAHA34I,KAAKi7I,iBAEgBj7I,KAAKk6H,aACP,OAEnB,MAAMggB,QAAmBl6I,KAAK+5I,kBAC9B/5I,KAAKk7I,cAAgBl7I,KAAK65I,MAAMsB,YAAYjB,GAAYkB,QAExD,MAAMC,EAAar7I,KAAKk7I,QAAQI,SAC1BhV,EAAY95G,GAAGxsB,KAAK8iC,IAAImnC,UACxBwrC,EAAYjpF,GAAGxsB,KAAK8iC,IAAIy1G,mBACxBgD,EAAgB,GACtB,IAAK,IAAI5B,EAAa,EAAGA,GAAc0B,EAAY1B,IAChDrT,EAAU5tH,IAAI,CACXzZ,GAAI06I,EACJA,eAGH4B,EAAcn0I,KAAK,CAChBmoE,SAAWnmD,GACDppB,KAAKw7I,kBAAkBpyH,GAEjChoB,KAAM,CACHu4I,gBAKT35I,KAAKi5I,mBACDxjC,GAAWz1G,KAAKO,GAAG0Q,MAAM2uD,GAAG27E,EAAe9lC,GAG/Cz1G,KAAKqwI,YAEL7jH,GAAGxsB,KAAK8iC,IAAI+mF,SAASriC,QACxB,CAEA,UAAAoxD,CAAW35I,GASR,OARAutB,GAAGxsB,KAAK8iC,IAAIu1G,aAAa9mI,OAAOtS,UAEzBe,KAAKk7I,eACLl7I,KAAKk6H,aACZl6H,KAAKi7I,gBAELzuH,GAAGxsB,KAAK8iC,IAAI+mF,SAAShzD,WAEd,CACV,CAEA,cAAA4kF,CAAe9B,GACZ,MAAO,gBAAgB35I,KAAK+iB,KAAK9jB,MAAM06I,GAC1C,CAEA,YAAAZ,CAAa3vH,GAIV,MAAO,4FAHWoD,GAAGxsB,KAAK8iC,IAAImnC,UACEurE,eAAc,GAOrB7yI,QAAQiuE,GAAWA,GAAUxnD,EAAKnqB,KAAI2C,OACjD,qDACA,4HAIHwnB,EAAKuwH,qJAKP35I,KAAK07I,sBACC17I,KAAKy7I,eAAeryH,EAAKuwH,iNAO3C,CAEA,gBAAAV,GACG,MAAM3S,EAAY95G,GAAGxsB,KAAK8iC,IAAImnC,UAC9Bq8D,GAAWx9G,KAAK,CAAC,GAAG9iB,SAASojB,IAC1B,MAAMuyH,EAAa7/H,SAAS2hE,cACzB,IAAIz9E,KAAKy7I,eAAeryH,EAAKuwH,eAEhC35I,KAAKy6I,SAASrxH,EAAKuwH,WAAYgC,EAAW,GAEhD,CAEA,cAAMlB,CAASd,EAAYgC,GACxB,IAAK37I,KAAKk7I,QAAS,OAEnBvB,EAAa15H,SAAS05H,GACtB,MAAM5qF,QAAa/uD,KAAKk7I,QAAQU,QAAQjC,GAClCkC,EAAqB9sF,EAAK+sF,YAAY,CAAEv0B,MAAO,IAAKhmE,MACpDw6F,EAAiBJ,EAAWp6F,MAAQs6F,EAGpCG,EAAWjtF,EAAK+sF,YAAY,CAAEv0B,MAAOw0B,IAG3C,OAFAJ,EAAW5rF,OAASisF,EAASjsF,OAEtBhB,EAAK8sB,OAAO,CAChBogE,cAAeN,EAAW3gD,WAAW,MACrCghD,SAAUA,IACVZ,OACN,CAEA,aAAAH,GACG,MAAM3U,EAAY95G,GAAGxsB,KAAK8iC,IAAImnC,UACxBwrC,EAAYjpF,GAAGxsB,KAAK8iC,IAAIy1G,mBAE9BjS,GAAW90H,WACPikG,GACDz1G,KAAKO,GAAG0Q,MAAM2uD,GACX,CACG,CACG78C,KAAM,QACNmzF,MAAO,SACPnmD,OAAQ0lD,EAAU1lD,OAClBvsD,MAAOxD,KAAKwD,MAAM,cAGxBiyG,EAET,CAEA,YAAAqjC,GACG94I,KAAKk8I,eAAgB,EACrB1vH,GAAGxsB,KAAK8iC,IAAImnC,WAAW4R,SACvB77E,KAAKi5I,kBACR,CAEA,UAAAJ,GACG74I,KAAKk8I,eAAgB,EACrB1vH,GAAGxsB,KAAK8iC,IAAImnC,WAAW4R,SACvB77E,KAAKi5I,kBACR,CAEA,iBAAIyC,GACD,OAAO17I,KAAKk8I,cAphBK,IADE,GAshBtB,CAEA,MAAA1rC,CAAOmpC,GACJ,MAAMrT,EAAY95G,GAAGxsB,KAAK8iC,IAAImnC,UAE9B,IAAIkyE,EAAc7V,EAAUkP,eAAc,GAE1C2G,EAAY/0I,KAAKuyI,GACjBwC,EAAcA,EAAYx5I,QAAQiuE,GAAWA,IAEzCurE,EAAYv6I,OAAQ0kI,EAAU91B,OAAO2rC,GACpC7V,EAAUoS,aAClB,CAEA,QAAA7lB,CAAS8mB,GACN,MAAMrT,EAAY95G,GAAGxsB,KAAK8iC,IAAImnC,UAE9B,IAAIkyE,EAAc7V,EAAUkP,eAAc,GAE1C2G,EAAcA,EAAYx5I,QACtBiuE,GAAWA,GAAUA,GAAU+oE,IAG/BwC,EAAYv6I,OAAQ0kI,EAAU91B,OAAO2rC,GACpC7V,EAAUoS,aAClB,CAEA,SAAArI,GACG7jH,GAAGxsB,KAAK8iC,IAAImnC,WAAWomE,WAC1B,CAEA,WAAAqI,GACGlsH,GAAGxsB,KAAK8iC,IAAImnC,WAAWyuE,aAC1B,CAEA,mBAAA0D,CAAoBzC,GACjB,MAAO,GAAG35I,KAAKy7I,eAAe9B,cACjC,CAEA,iBAAA6B,CAAkBpyH,GAEf,MAAO,kBADWoD,GAAGxsB,KAAK8iC,IAAIy1G,mBAEjB7mI,OAAO6vC,MAAQ,WACnBvhD,KAAKo8I,oBAAoBhzH,EAAKuwH,wBAC1C,CAEA,gBAAAP,GACG,MAAMt2G,EAAM9iC,KAAK8iC,IAEX62G,EADcntH,GAAGsW,EAAIy1G,mBAAmBrjC,iBACb,EAC3BymC,EAAa7/H,SAAS2hE,cACzB,IAAIz9E,KAAKo8I,oBAAoBzC,MAEhC35I,KAAKy6I,SAASd,EAAYgC,GAE1B,MACMjC,EADkBltH,GAAGsW,EAAImnC,UAAUurE,eAAc,GAEpC7yI,QAAQiuE,GAAWA,GAAU+oE,IAAY/3I,OAAS,EACrE4qB,GAAGsW,EAAI01G,uBAAuBtkH,SAASwlH,GAEvCltH,GAAGsW,EAAI21G,gBAAgBvkH,SACpB,GAAGl0B,KAAKwD,MAAM,mBAAmBm2I,IAEvC,CAEA,UAAI70H,GACD,OAAO9kB,KAAK+iB,KAAKwE,gBAAgBD,UACpC,CAEA,SAAIqH,GACD,OAAO3uB,KAAK8kB,QAAQwF,UAChB5I,GAAMA,EAAEziB,IAAMe,KAAK+iB,KAAKpB,SAASiN,UACnC,EACL,CAEA,IAAA2hE,GACG,MAAMztD,EAAM9iC,KAAK8iC,IAEXu5G,EAAgB7vH,GAAGsW,EAAIs1G,cACvBkE,EAAc9vH,GAAGsW,EAAIu1G,YACrB/R,EAAY95G,GAAGsW,EAAImnC,UACnBsyE,EAAU/vH,GAAGsW,EAAI+mF,QACjB2yB,EAAahwH,GAAGsW,EAAIutG,WACpBoM,EAAejwH,GAAGsW,EAAI41G,aACtBgE,EAAgBlwH,GAAGsW,EAAI01G,uBAE7B6D,GAAexlF,UACfylF,GAAazlF,UACb0lF,GAAS1lF,UACT2lF,GAAY3lF,UACZ4lF,GAAc5lF,UACd6lF,GAAe7lF,UACfyvE,GAAW7rD,eAAe,CACvB1xE,KAAM,SACNi/C,SAAU,MAEhB,CAEA,KAAA2oC,GACG,MAAM7tD,EAAM9iC,KAAK8iC,IAEXu5G,EAAgB7vH,GAAGsW,EAAIs1G,cACvBkE,EAAc9vH,GAAGsW,EAAIu1G,YACrB/R,EAAY95G,GAAGsW,EAAImnC,UACnBsyE,EAAU/vH,GAAGsW,EAAI+mF,QACjB2yB,EAAahwH,GAAGsW,EAAIutG,WACpBoM,EAAejwH,GAAGsW,EAAI41G,aACtBgE,EAAgBlwH,GAAGsW,EAAI01G,uBAE7B6D,GAAe70D,SACf80D,GAAa90D,SACb+0D,GAAS/0D,SACTg1D,GAAYh1D,SACZi1D,GAAcj1D,SACdk1D,GAAel1D,SACf8+C,GAAWrrD,wBAEJj7E,KAAKg7I,cACf,CAEA,YAAMnxB,GACH,MAAMl7F,EAAQ3uB,KAAK2uB,MACnB,IAAK3uB,KAAKk7I,UAAYvsH,EAAO,OAE7B3uB,KAAKuwF,OAEL,MAAMztD,EAAM9iC,KAAK8iC,IAEX65G,EADYnwH,GAAGsW,EAAImnC,UACSurE,eAAc,IAAS,GACnDnpI,EAAQsiB,EAAM7J,OAAOzY,QACrBipB,EAASt1B,KAAKunB,eAAeE,mBAC7Bm1H,EAAY,GAElB,IAAK,IAAI12I,EAAI,EAAGA,EAAIy2I,EAAgB/6I,OAAQsE,IAAK,CAC9C,MAAMyzI,EAAagD,EAAgBz2I,GACnC,GAAkB,MAAdyzI,GAAoC,IAAdA,EAAkB,OAE5C,MAAMkD,QAAiB78I,KAAKu6I,aAAaZ,GAEzC35I,KAAK86I,yBAGL,MAAMv1I,EAASopB,EAAM7J,OAAOqjB,gBAC5B5iC,EAAOopB,EAAM1M,YAAc46H,EAG3B,MAAMl9B,EAAarqF,GAAQhN,YAC3B,GAAIq3F,EAAY,CACb,MAAM97E,EAAavO,GAAQhO,WAELqH,EAAM7J,OAAOtD,gBACrBxb,SAAS0b,IACpB,GACGmiB,EAAW5kC,IAAMyiB,EAAEC,SAASC,iBACHpU,IAAzBjI,EAAOmc,EAAEO,YACV,CACC,MAAM69F,EAAcp+F,EAAEkvB,WACjBlvB,EAAEkvB,WAAW3uB,WACb4hB,EAAW53B,KAEhB1G,EAAOmc,EAAEO,YAAc,CAAC,EACxB1c,EAAOmc,EAAEO,YAAY69F,GAClBH,EAAWG,IAAgBH,EAAW1gH,EAC5C,IAEN,CAEA29I,EAAUx1I,WAAWiF,EAAM8rE,OAAO5yE,IAElCvF,KAAK86I,wBACR,CAEA96I,KAAK+iB,KAAK2yC,cAAcknF,GAGpBA,GAAW58I,KAAK+iB,KAAKxhB,KAAK,QAASq7I,GAEvC58I,KAAK2wF,OACR,oBC1sBH,MAAMh7E,EAAkB,WAClBmnI,EAAmB,EAAQ,OAC3BC,EAAiB,EAAQ,OACzBC,EAAgB,EAAQ,OAE9Br9I,EAAOC,QAAU,cAAmC+V,EACjD,WAAA7V,CAAYo0G,EAAU/3E,EAAQ2G,GAC3B/iC,MACGm0G,EACA/3E,GAAU,eAAe+3E,EAASj1G,KAClCQ,OAAO2vB,OAAO,CAAE6tH,MAAO,IAAMn6G,GAEnC,CAEA,EAAA88B,GACG,MAAMuvB,EAAOnvF,KACP2hB,EAAW3hB,KAAK2hB,SAChBu7H,EAAU,CACbj+I,GAAIe,KAAK8iC,IAAIm6G,MACbl6H,KAAM,QACNqhB,UAAU,EACViuC,aAAc1wD,EAAS0wD,aACvBC,YAAa3wD,EAAS2wD,YACtBC,cAAe5wD,EAAS4wD,cACxBvsB,IAAKrkC,EAASqkC,IACdD,IAAKpkC,EAASokC,IACdgK,OAAQpuC,EAASouC,OACjBzlC,OAAQtqB,KAAKm9I,aACbtlI,OAASxG,IACN,MAAMwtC,EAAgBl9B,EAASk9B,eAAiB,EAEhD,OAAOxtC,GAAkB,KAATA,EACXotC,WAAWptC,GAAO1E,QAAQkyC,GAAiB,GAC3CxtC,CAAK,EAEbo0G,SAAU,IAAIC,IAAI,CACf,CACGu3B,MAAMt3B,SAASC,QACf,cAAwBq3B,MAAMt3B,SAASC,QACpC,UAAMxkH,GACH,MAAMsnB,EAAKymE,EAAK5nE,eAChB,IAAKmB,EAAI,OAAOtlB,MAAMg4I,QAAQ17I,QAAQ,IAEtC,MAAMolB,EAAS4D,EAAGpB,WAClB,IAAKxC,EAAQ,OAAO1hB,MAAMg4I,QAAQ17I,QAAQ,IAElCgpB,EAAGX,aACHW,EAAGxC,eAAeC,kBACduC,EAAGoC,WAIf,MACMsyH,EADO10H,EAAGwK,UACQp0B,KAAKwuB,IAC1B,MAAMppB,EAAS,CAAC,EAYhB,OAVA4gB,EAAOwF,SAAStkB,SAAS0b,IAMnBxd,EAAOwd,EAAEO,YAJTP,aAAao7H,GACbp7H,aAAaq7H,GACbr7H,aAAas7H,EAEU1vH,EAAE5L,EAAEO,YACFP,EAAE7J,OAAOyV,EAAE,IAGnCppB,CAAM,IAGhB,OAAOd,MAAMg4I,QAAQ17I,QAAQ09I,EAChC,IAGN,CACGH,MAAMt6H,MAAM0nG,MACZ,cAA0B4yB,MAAMt6H,MAAM0nG,MACnC,UAAAgzB,CAAWhsI,GACR,MAAMwtC,EAAgBl9B,EAASk9B,eAAiB,EAEhD,OADKxtC,IAAOA,EAAkB,IAAVA,EAAc,IAAM,IACjCA,EACFotC,WAAWptC,GAAO1E,QAAQkyC,GAC1BxtC,CACR,OAMRsQ,EAAS6wD,YAAW0qE,EAAQ1qE,UAAY7wD,EAAS6wD,WAErD,MAAMsiC,EAAM/0G,MAAM6/D,GAAG,CAACs9E,IAGtB,cAFOpoC,EAAI/rG,KAEJ+rG,CACV,CAEA,UAAAqoC,GACG,MAAMz0H,EAAK1oB,KAAKunB,eAChB,IAAKmB,EAAI,MAAO,GAEhB,MAAM5D,EAAS4D,EAAGpB,WAClB,OAAKxC,EAEUA,EAAOwF,SAASxrB,KAAK4iB,IACjC,IAAI47H,EAAY,OAEhB,OAAQ57H,EAAEjf,KACP,IAAK,YACL,IAAK,UACL,IAAK,SACF66I,EAAY,SACZ,MACH,IAAK,OACL,IAAK,WACFA,EAAY,OAIlB,MAAO,CACJr+I,GAAIyiB,EAAEO,WACN5Q,MAAOqQ,EAAEle,MACTuF,KAAMu0I,EACR,IArBgB,EAyBvB,oBC9HH,MAAM3nI,EAAkB,WAExBhW,EAAOC,QAAU,cAA4C+V,EAC1D,WAAA7V,CAAYo0G,EAAU/3E,EAAQ2G,GAC3B/iC,MACGm0G,EACA/3E,GAAU,uBAAuB+3E,EAASj1G,KAC1CQ,OAAO2vB,OACJ,CACGmuH,cAAe,IAElBz6G,IAIN9iC,KAAKokC,UAAW,CACnB,CAEA,EAAAw7B,GACG,MAAMuvB,EAAOnvF,KACP2hB,EAAW3hB,KAAK2hB,SAChBs0F,EAAKj2G,KAAKO,GACV41G,EAAUF,EAAGhlG,MACbyX,EAAK1oB,KAAKunB,eACVkV,EAAY/T,GAAIpB,WAAWM,UAC9BjG,EAAS+wD,eAAe9mE,OACxBqW,WACGu7H,EAAY90H,GAAIpB,WAAWM,UAC9BjG,EAAS+wD,eAAejvE,OACxBwe,WACGw7H,EAAe/0H,GAAIpB,WAAWM,UACjCjG,EAAS+wD,eAAervD,UACxBpB,WACG6gB,EAAM9iC,KAAK8iC,IACjB,MAAM46G,UAAkBC,QAAQh4B,SAASC,QACtC,gBAAMg4B,GACH,OAAU,MAANl1H,EAAmB,UAEjBymE,EAAK00C,wBAAwB,IAAMn7G,GAElCA,EAAGwK,UAAUp0B,KAAKO,IACf,CACJJ,GAAII,EAAEJ,GACN2M,KAAMvM,EAAEo9B,GACRh5B,KAAMkD,KAAKC,UAAUvH,EAAEm+I,IACvBK,QAASx+I,EAAc,eAGhC,CAEA,eAAMy+I,CAAU18I,GACb,MAAMoxB,EAAa,CAAC,EAOpB,OALAA,EAAWiK,GAAar7B,EAAKwK,KAC7B4mB,EAAWgrH,GAAap8I,EAAKqC,KAItB,CACJxE,UAHoBypB,EAAGrc,MAAM8rE,OAAO3lD,IAGvBvzB,GAEnB,CAEA,kBAAM8+I,CAAa9+I,EAAImC,GACpB,MAAMoxB,EAAa,CAAC,EAEpBA,EAAWiK,GAAar7B,EAAKwK,KAC7B4mB,EAAWgrH,GAAap8I,EAAKqC,KAE7B,IAAIoH,EAAW,CAAC,EAIhB,OAFAA,QAAiB6d,EAAGrc,MAAM+yE,OAAOngF,EAAIuzB,GAE9B,CAAEvzB,GAAI4L,EAAS5L,GACzB,CAEA,kBAAM++I,CAAa/+I,GAGhB,aAFMypB,EAAGrc,MAAMqC,OAAOzP,GAEf,CAAEA,GAAIA,EAChB,CAEA,eAAMg/I,GACH,MAAMC,EAAe,CAAC,EAsDtB,OAnDCv8H,EAAShD,kBAAkB/c,OAAS,EAChC+f,EAAShD,kBACTwwE,EAAKpsE,KAAK0B,YAAY9F,mBACzB3Y,SAASm4I,IACR,MAAMz1H,EAAKutF,EAAGvuF,mBAAmBy2H,GAEjC,IAAKz1H,EAAI,OAIT,IAFYA,EAAGpB,WAEL,OAEV,MAAM82H,EAAejvD,EAAKkvD,gBAAgB31H,GA+B1Cw1H,EAAax1H,EAAGzpB,IAAM,CACnBA,GAAIypB,EAAGzpB,GACP2M,KAAM8c,EAAGllB,MACTpC,KAAMg9I,EACNE,KAAM,GACR,IAGGJ,CACV,CAEA,gBAAMK,GACH,MAAMC,EAAWhyH,GAAGsW,EAAIy6G,eAAe12D,WAAW43D,UAAY,GAE9D,MAAiB,KAAbD,EAAwB,UAIhB91H,EAAGrc,MAAM4f,QAAQ,CACpBL,MAAO,CACJjqB,KAAM68I,MAGbp9I,KAAK,GAAGq8I,IAAiB,EAEjC,CAEA,cAAMiB,CAASt9I,GACZ,MAAMo9I,EAAWhyH,GAAGsW,EAAIy6G,eAAe12D,WAAW43D,UAAY,GAE9D,GAAiB,KAAbD,EAAiB,MAAO,CAAC,EAE7B,MAAMG,SACGj2H,EAAGrc,MAAM4f,QAAQ,CACpBL,MAAO,CACJjqB,KAAM68I,MAGbp9I,KAAK,GAEP,GAAkB,MAAdu9I,EAAoB,MAAO,CAAC,EAEhC,MAAMt7H,EAAU,IAAKs7H,EAAWlB,IAAiB,IAC3CmB,EAAUzoC,EAAQn+B,MAExB30D,EAAQjc,KAAK3H,OAAO2vB,OAAO,CAAEnwB,GAAI2/I,GAAWx9I,IAE5C,MAAMoxB,EAAa,CAAC,EAYpB,OAVAA,EAAWirH,GAAgBp6H,EAAQ3C,MAAK,CAACE,EAAGC,IACrCD,EAAEhV,KAAOiV,EAAEjV,MAAc,EAEzBgV,EAAEhV,KAAOiV,EAAEjV,KAAa,EAErB,UAGJ8c,EAAGrc,MAAM+yE,OAAOo/D,EAAUhsH,GAEzB,CAAEvzB,GAAI2/I,EAChB,CAEA,iBAAMC,CAAY5/I,EAAImC,GACnB,MAAMo9I,EAAWhyH,GAAGsW,EAAIy6G,eAAe12D,WAAW43D,UAAY,GAE9D,GAAiB,KAAbD,EAAiB,MAAO,CAAC,EAE7B,MAAMG,SACGj2H,EAAGrc,MAAM4f,QAAQ,CACpBL,MAAO,CACJjqB,KAAM68I,MAGbp9I,KAAK,GAEP,GAAkB,MAAdu9I,EAAoB,MAAO,CAAC,EAEhC,MAAMt7H,EAAU,IAAKs7H,EAAWlB,IAAiB,IAC3CqB,EAAaz7H,EAAQouC,WAAWpyD,GAAMA,EAAEJ,KAAOA,IAErDokB,EAAQy7H,GAAcr/I,OAAO2vB,OAAO,CAAEnwB,MAAMmC,GAE5C,MAAMoxB,EAAa,CAAC,EAYpB,OAVAA,EAAWirH,GAAgBp6H,EAAQ3C,MAAK,CAACE,EAAGC,IACrCD,EAAEhV,KAAOiV,EAAEjV,MAAc,EAEzBgV,EAAEhV,KAAOiV,EAAEjV,KAAa,EAErB,UAGJ8c,EAAGrc,MAAM+yE,OAAOo/D,EAAUhsH,GAEzB,CAAEvzB,KACZ,CAEA,iBAAM8/I,CAAY9/I,GACf,MAAMu/I,EAAWhyH,GAAGsW,EAAIy6G,eAAe12D,WAAW43D,UAAY,GAE9D,GAAiB,KAAbD,EAAiB,MAAO,CAAC,EAE7B,MAAMG,SACGj2H,EAAGrc,MAAM4f,QAAQ,CACpBL,MAAO,CACJjqB,KAAM68I,MAGbp9I,KAAK,GAEP,GAAkB,MAAdu9I,EAAoB,MAAO,CAAC,EAEhC,MAAMt7H,EAAUs7H,EAAWlB,IAAiB,GACtCqB,EAAaz7H,EAAQouC,WAAWpyD,GAAMA,EAAEJ,KAAOA,IAErD,GAAI6/I,GAAc,EAAG,CAClB,MAAMtsH,EAAa,CAAC,EAEpBA,EAAWirH,GAAgBp6H,EACvB1gB,QAAO,CAACtD,EAAG6G,IAAMA,IAAM44I,IACvBp+H,MAAK,CAACE,EAAGC,IACHD,EAAEhV,KAAOiV,EAAEjV,MAAc,EAEzBgV,EAAEhV,KAAOiV,EAAEjV,KAAa,EAErB,UAGP8c,EAAGrc,MAAM+yE,OAAOo/D,EAAUhsH,EACnC,CAEA,MAAO,CAAEvzB,GAAIA,EAChB,CAEA,aAAMi0B,CAAQxhB,GACX,IAAIxN,EAAS,GACT86I,EAAgB,GAChBC,EAAQ,GACRC,EAAS,CAAC,EACVd,EAAe,GAGnBa,EAAM73I,KAAKsK,EAAOtQ,OACjBsQ,EAAOs4B,OAAS,IAAIhkC,SAAS+gC,IAC3Bk4G,EAAM73I,KAAK2/B,EAAEo4G,KACbF,EAAM73I,KAAK2/B,EAAEi0B,IAAI,IAEpBikF,EAAQhpC,EAAG56F,KAAK4jI,GAChBA,EAAMj5I,SAASo5I,IACZJ,EAAc53I,KACX,IAAI5F,SAAQ,CAAC9B,EAASoK,KACH2oB,WACb,IACGysH,EAAOE,SAAejwD,EAAKj8D,QAAQksH,IAAU,GAE7C1/I,GACH,CAAE,MAAOyB,GACN2I,EAAO3I,EACV,GAGH+xB,EAAS,IAEd,IAGJ+rH,EAAMj5I,SAASo5I,IACZ,MAAMC,EAAUppC,EAAGvuF,mBAAmB03H,GAEjCC,IAELjB,EAAeA,EAAazkI,OACzBw1E,EAAKkvD,gBAAgBgB,GAASvgJ,KAAK4iB,IAEhCA,EAAEziB,GAAK,GAAGmgJ,KAAQ19H,EAAEziB,KACbyiB,MAEZ,UAGElgB,QAAQsY,IAAIklI,GAGlB96I,EAASg7I,EAAOxtI,EAAOtQ,OAAS,GAE5BsQ,EAAOs4B,OAAOpoC,SACd8P,EAAOs4B,OAAS,IAAIhkC,SAAS+gC,IAC3B,MAAMu4G,EAAWrpC,EAAGvuF,mBAAmBqf,EAAEo4G,KACzC,IAAKG,EAAU,OAEf,MAAMC,EAAYD,EAASh4H,WAC3B,IAAKi4H,EAAW,OAEhB,MAAMC,EAAWvpC,EAAGvuF,mBAAmBqf,EAAEi0B,KACzC,IAAKwkF,EAAU,OAEf,MAAMC,EAAYD,EAASl4H,WAC3B,IAAKm4H,EAAW,OAEhB,MAAMC,EAAkBH,EAAU33H,UAAUmf,EAAE44G,IACxCC,EAAkBH,EAAU73H,UAAUmf,EAAE84G,IAC9C,IAAKH,IAAoBE,EAAiB,OAE1C,MAAME,EAAaZ,EAAOn4G,EAAEo4G,MAAQ,GAC9BY,EAAab,EAAOn4G,EAAEi0B,MAAQ,GAEpC8kF,EAAW95I,SAASorI,IACjB2O,EAAW/5I,SAASg6I,IACjB,IAAIC,EACD7O,EACGsO,EACK,GAAG34G,EAAEo4G,OAAOO,EAAgBz9H,gBAC5B,GAAG8kB,EAAEo4G,WACR,GAEJe,EACDF,EACGJ,EACK,GAAG74G,EAAEi0B,OAAO4kF,EAAgB39H,gBAC5B,GAAG8kB,EAAEi0B,WACR,GAEHt1D,MAAMC,QAAQs6I,KAAOA,EAAO,CAACA,IAE7Bv6I,MAAMC,QAAQu6I,KAAOA,EAAO,CAACA,IAGlC,MAAMC,EAAaF,EAAKt9I,QACpBuG,GAAQg3I,EAAK14I,QAAQ0B,IAAQ,IAGjC,GAAIi3I,GAAYv+I,OAAQ,CACrB,MAAMw+I,EACHl8I,EAAOvB,QACHjB,GACEA,EAAE,GAAGqlC,EAAEo4G,YAAc/N,EAAM,GAAGrqG,EAAEo4G,YAC/Bz9I,EAAE,GAAGqlC,EAAEi0B,aACT,GAEJolF,GAAYx+I,QACZw+I,GAAc,IAAIp6I,SAAStE,IACzB,IAAK,MAAMe,KAAOu9I,EACH,OAARv9I,IAAcf,EAAEe,GAAOu9I,EAAMv9I,GAAI,IAG3CyB,EAAOkD,KACJ3H,OAAO2vB,OACJ6mF,EAAGv7F,UAAU02H,GACbn7B,EAAGv7F,UAAUslI,IAGzB,IACD,GACH,IAIR,MAAMK,EAAW15I,KAAKiE,MAAM8G,EAAOrE,OAAS,MAExCgzI,GAAUzmI,OAAOhY,QAClBy+I,EAASzmI,MAAM5T,SAAStE,IAChBA,GAAMA,EAAEqH,MAASrH,EAAEsvC,WAGhB,SADAtvC,EAAEqH,MAGArH,EAAEsvC,UAAUruC,SACqB,iBAAvBjB,EAAEsvC,UAAUruC,SACpBjB,EAAEsvC,UAAUruC,OAASszG,EAAGr8F,MAAMlC,OAC3BhW,EAAEsvC,UAAUruC,SAIfjB,EAAEsvC,UAAUruC,OAAOsuB,OACiB,iBAA7BvvB,EAAEsvC,UAAUruC,OAAOsuB,QAE1BvvB,EAAEsvC,UAAUruC,OAAOsuB,MAAQglF,EAAGr8F,MAAMlC,OACjChW,EAAEsvC,UAAUruC,OAAOsuB,QAItBvvB,EAAEsvC,UAAUruC,OAAOkqD,KACe,iBAA3BnrD,EAAEsvC,UAAUruC,OAAOkqD,MAE1BnrD,EAAEsvC,UAAUruC,OAAOkqD,IAAMopD,EAAGr8F,MAAMlC,OAC/BhW,EAAEsvC,UAAUruC,OAAOkqD,MAKlC,IAIN,MAAMyzF,EAAanqC,EAAQv2C,GAAG,CAC3B78C,KAAM,QACNuH,OAAQ8zH,EACR/sI,MAAOgvI,IAIJE,EAAS,IAAIpqC,EAAQj7B,eAK3B,IAAIvqB,EAHJ4vF,EAAO31I,MAAM1G,GAKb,IACGysD,EAAW2vF,EAAWp5D,mBACzB,CAAE,MAAO5lF,GAET,CAkIA,OAhIIqvD,GAAU4vF,EAAO59I,OAAOguD,IAG3Bj/C,EAAOgP,MAAQ,IAAI1a,SAAS0a,IACtBA,EAAKzhB,IACNshJ,EAAO7/H,KAAK,CACT8/H,GAAI,SACJvrB,IAAKv0G,EAAK+/H,KAAO,MACjB3vB,GAAI,IAAIpwG,EAAKzhB,OACd,IAGRiF,EAASq8I,EAAOj3H,YAGhBg3H,EAAWjuB,aACXkuB,EAAOluB,aAGH3gH,GAAQu/G,OAAOrvH,SAChBsC,EAASw8I,EAAElyE,QAAQtqE,GAAS7E,GAClBqS,EAAOu/G,MACVnyH,KAAKkiF,IACH,MAAM2/D,EAAe3/D,EAAOt9D,MAAM,KAC5Bk9H,EACHD,EAAa/+I,OAAS,EACjB,GAAG++I,EAAa,MAAMA,EAAa,KACnC3/D,EAKR,GACQ,SALYo9D,EAAat1H,MAC7B+3H,GAAgBA,EAAY5hJ,KAAO2hJ,IAGnB73I,KACJ,CACV,MAAM+3I,EAAiB3qC,EAAQ1tB,KAAKpB,cACjChoF,EAAEuhJ,IAECG,EACHD,EAAep9H,MAAM,KAExB,OAAQi9H,EAAa,IAClB,IAAK,MAGF,OAFAthJ,EAAE2hF,GAAU+/D,EAAqB,GAE1BA,EAAqB,GAE/B,IAAK,QAGF,OAFA1hJ,EAAE2hF,GAAU+/D,EAAqB,GAE1BA,EAAqB,GAE/B,IAAK,OAGF,OAFA1hJ,EAAE2hF,GAAU+/D,EAAqB,GAE1BA,EAAqB,GAE/B,IAAK,YAKF,OAJA1hJ,EACG2hF,GACC,GAAG+/D,EAAqB,MAAMA,EAAqB,KAEhD1hJ,EAAE2hF,GAGZ,QAGG,OAFA3hF,EAAE2hF,GAAU8/D,EAELA,EAYhB,CAGG,OAAOzhJ,EAAEuhJ,IAAiBr5I,YAChC,IAEF6B,KAAK,MAGZlF,EAASzE,OAAO8F,OAAOrB,GAAQpF,KAAKkiJ,IACjC,MAAMC,EAAgB,CAAC,EAmCvB,OAjCCvvI,EAAOg3D,SAAW,IAAI1iE,SAAS0oF,IAC7B,MAAMwyD,EAAMxyD,EAAIhrE,MAAM,KAAK,GACrBy9H,EAASzyD,EAAI9oF,QAChB,8BACA,IAGH,OAAQs7I,GACL,IAAK,MACFD,EAAcvyD,GAAOunB,EAAG16F,MAAMylI,EAAaG,GAC3C,MACH,IAAK,MACFF,EAAcvyD,GAAOunB,EAAGz6F,OAAOwlI,EAAaG,GAC5C,MACH,IAAK,QACFF,EAAcvyD,IAAQsyD,GAAe,IAAIp/I,OACzC,MACH,IAAK,MACFq/I,EAAcvyD,IACVunB,EAAGx6F,MAAMulI,EAAaG,IAAW,CAAC,GAAGA,IACtC,GACH,MACH,IAAK,MACFF,EAAcvyD,IACVunB,EAAGv6F,MAAMslI,EAAaG,IAAW,CAAC,GAAGA,IACtC,GACH,MACH,QACGF,EAAcvyD,GAAOsyD,EAAY,GAAGtyD,GAE1C,IAGIuyD,CAAa,KAInB/8I,CACV,CAEA,gBAAMssF,CAAWlmE,GACd,MAAO,EACV,CACA,kBAAM82H,CAAazuG,GAChB,MAAO,EACV,EAEH,MAAM0uG,UAAgB1D,QAAQh4B,SAAS27B,MACpC,WAAAxhJ,CAAYqnB,GACTpnB,MAAMonB,GAENnnB,KAAKuhJ,iBAAmB,EAC3B,CAEA,UAAAhD,GACG,MAAMiD,EAAkBh1H,GAAGsW,EAAIy6G,eAAe12D,WAAW43D,SAOzD,OALIz+I,KAAKuhJ,mBAAqBC,IAC3BxhJ,KAAKuhJ,iBAAmBC,EACxBxhJ,KAAKyhJ,SAAW,MAGZ1hJ,MAAMw+I,YAChB,EAEH,MAAMmD,UAAiB/D,QAAQh7H,MAAMovE,OAClC,IAAAzxF,GAGG,GAFAP,MAAMO,QAED6uF,EAAK/qD,UAAkC,IAAtBziB,EAASgxD,SAAgB,OAE/C,MAAMgvE,EAAU3hJ,KAAKwsB,GAAG,UAExB,GAA+B,IAA3B7K,EAASixD,cAAqB,CAC/B,MAAM1iD,EAAW,KACdyxH,EAAQC,UAAU,WAAY,CAAC,SAC/BD,EAAQE,cAAc,UACtB1yD,EAAK/4D,eAAe,wBAAyBlG,EAAS,EAGzDi/D,EAAKluF,GAAG,wBAAyBivB,EACpC,CAE6B,IAAzBvO,EAASkxD,aAAmB8uE,EAAQE,cAAc,SAEzB,IAAzBlgI,EAASmxD,aAAmB6uE,EAAQE,cAAc,aAEtD7hJ,KAAKiB,GAAGjB,KAAKmnB,IAAK,wBAAwB,KACvCnnB,KAAK8hJ,OAAM,EAAK,GAEtB,CAEA,KAAAA,CAAMC,GAAa,GAChB,MAAM9iJ,EAAKe,KAAKgiJ,SAASvD,SACPtvD,EAAK/qD,YAAoC,IAAtBziB,EAASgxD,WAEtB,MAAN1zE,IAAc8iJ,GAAYhiJ,MAAM+hJ,QAElD9hJ,KAAKshJ,MAAMW,UAAUhjJ,EACxB,CAEA,YAAAijJ,GACGniJ,MAAMmiJ,eAEFvgI,EAASixD,eAAeuc,EAAK5tF,KAAK,wBACzC,EAEH,MAAM4gJ,UAAkBxE,QAAQh7H,MAAM2nG,QACnC,MAAA54G,GACG,MAAMkuD,EAAK7/D,MAAM2R,SAwBjB,OAtBIy9E,EAAK/qD,UAAoC,IAAtBziB,EAASgxD,WAC7B/S,EAAGxpD,SAAS,GAAG61E,KAAOrsB,EAAGxpD,SAAS,GAAG61E,KAAKntF,KAAKO,GAC5CI,OAAO2vB,OAAO/vB,EAAG,CACdonF,OAAQ0I,EAAK/qD,YAAoC,IAAtBziB,EAASgxD,cAI1C/S,EAAGxpD,SAAS,GAAG61E,KAAK7kF,KACjB,CAAC,EACD,CACG2b,KAAM,SACNha,KAAM,OACNgV,KAAM,wBACNva,MAAO2rF,EAAK3rF,MAAM,QAClB8kF,QAAS,aACTt7D,MAAO,IACGhtB,KAAKmnB,IAAIy6H,UAAU,uBAAwB,OAMvDhiF,CACV,EAEH,MAAMwiF,UAAuBzE,QAAQh7H,MAAM,iBACxC,MAAAjR,GACG,MAAMkuD,EAAK7/D,MAAM2R,SAEjB,OAAKy9E,EAAK/qD,SAEH3kC,OAAO2vB,OAAO,CAAC,EAAGwwC,EAAI,CAC1BxpD,SAAUwpD,EAAGxpD,SAAStX,KAAI,CAACO,EAAG6G,IAC3BzG,OAAO2vB,OACJ,CACGq3D,SAAUvgF,GAAK,GAAKA,EAAI,IAE3B7G,OARkBugE,CAY9B,CAEA,gBAAAyiF,GACGtiJ,MAAMsiJ,mBAEFlzD,EAAK/qD,UAAUpkC,KAAKwsB,GAAG,UAAU0wD,MACxC,EAEH,MAAMolE,UAAqB3E,QAAQh7H,MAAM,eACtC,MAAAjR,GACG,MAAMkuD,EAAK7/D,MAAM2R,SAYjB,OAVIy9E,EAAK/qD,WACNw7B,EAAG2mB,KAAK,GAAGA,KAAK,GAAGE,QAAS,EAE5B7mB,EAAG2mB,KAAK,GAAGA,KAAKh1D,QAAQ,CACrB/tB,MAAO,kBACPuf,KAAM,QACNw+B,MAAO,OAINqe,CACV,EAEH,MAAM2iF,UAAgB5E,QAAQh7H,MAAM0nG,MAEjC,eAAAm4B,CAAgB5hI,GACb,IAAIlP,EAAS,CACVzS,GAAI2hB,EAAE3hB,GACN+d,OACI4D,EAAE6hI,KAAKzlI,QAA4B,SAAlB4D,EAAE6hI,KAAKzlI,OAEpB,CACG4D,EAAE6hI,KAAK72I,MAAQgV,EAAEhV,KACjB,CACGy2B,QACgB,SAAbzhB,EAAE5D,OACG,aACA,qBAPd4D,EAAE6hI,KAAK72I,MAAQgV,EAAEhV,KAUzB7C,KAAM6X,EAAE7X,KACR2X,KAAM,OACN6gC,MAAO3gC,EAAE2gC,OAAS,KAGrB,MAAMmhG,EAAUvzD,EAAK5uF,GAAGmnB,mBACrB9G,EAAE+hI,MACFr7H,WAAWgD,QAAQqE,GAAUA,EAAM1M,aAAerB,EAAEhV,OAAM,GAqB7D,MAlBQ,SADAgV,EAAE7X,KAEJ2I,EAAOmG,OAAU3O,GAEVA,GAAKmQ,UAAYk3B,MAAMrnC,EAAImQ,WACJ,aAAjBqpI,GAASjgJ,IACX0zG,EAAQ1tB,KAAKm6D,kBAAkB15I,GAC/BitG,EAAQ1tB,KAAKpB,cAAcn+E,GACvB,GAMfwI,EAAS3R,MAAMyiJ,gBAAgB5hI,GAK9BlP,CACV,CAEA,kBAAMmxI,CAAapC,GAChB,MAAMr/I,QAAarB,MAAM8iJ,aAAapC,GAChCqC,EAAUrC,EAAIqC,QAEpB,IAAKA,EAAS,OAAO1hJ,EAErB,GAAuB,IAAnB0hJ,EAAQlhJ,OAAc,OAAOR,EAEjC,MAAM2hJ,EAAYtC,EAAI/3E,QAAQ5pE,KAAKO,GAAMA,EAAEJ,KACrC+jJ,EAAgBvC,EAAIqC,QAAQngJ,QAAQsgJ,GACvCF,EAAU9tG,SAASguG,EAAOjiE,UAG7B,OAA6B,IAAzBgiE,EAAcphJ,OAAqBR,EAsBhC,CApBSA,EAAK,GAAGtC,KAAKO,IAC1B,MAAM6jJ,EAAc,CAAC,EAgBrB,OAdAF,EAAch9I,SAASi9I,IACpB,MAAM16I,EAAU06I,EAAO16I,QAEvB,IAAK,IAAIrC,EAAI,EAAGA,EAAIqC,EAAQ3G,OAAQsE,IACjC,GACGqC,EAAQrC,GAAGX,QAAQ0vC,SAAS51C,EAAE4jJ,EAAOjiE,UACrC96E,IAAMqC,EAAQ3G,OAAS,EACxB,CACCshJ,EAAYD,EAAOjiE,QAAUz4E,EAAQrC,GAAGjH,GAExC,KACH,KAGCQ,OAAO2vB,OAAO,CAAC,EAAG/vB,EAAG6jJ,EAAY,IAG1B9hJ,EAAK,GACzB,EAGH,MAAM0zG,EAAM/0G,MAAM6/D,GAAG,CAClB,CACG3gE,GAAI6jC,EAAIy6G,cACRx6H,KAAM,UACNunG,SAAS,EACT7E,SAAU,IAAIC,IAAI,CACf,CAACi4B,QAAQh4B,SAASC,QAAS83B,GAC3B,CAACC,QAAQh4B,SAAS27B,MAAOD,GACzB,CAAC1D,QAAQh7H,MAAMovE,OAAQ2vD,GACvB,CAAC/D,QAAQh7H,MAAM2nG,QAAS63B,GACxB,CAACxE,QAAQh7H,MAAM,iBAAkBy/H,GACjC,CAACzE,QAAQh7H,MAAM,eAAgB2/H,GAC/B,CAAC3E,QAAQh7H,MAAM0nG,MAAOk4B,QAQ/B,cAHOztC,EAAI/rG,YACJ+rG,EAAI/kD,OAEJ+kD,CACV,CAEA,UAAMx0G,CAAKC,EAAI0oE,GACZjpE,KAAKO,GAAKA,EACVP,KAAKokC,SAAW6kC,EAAc,EAE9B,MACMrP,EADiBptC,GAAGxsB,KAAK8iC,IAAIy6G,eACN12D,WAE7BjtB,EAAMx1B,SAAWpkC,KAAKokC,SACtBw1B,EAAM2uB,KACHvoF,KAAKokC,UAAuC,IAA3BpkC,KAAK2hB,SAASgxD,SAAiB,OAAS,MAC/D,CAEA,eAAA0rE,CAAgB31H,GACb,IAAKA,EAAI,MAAO,GAEhB,MAAM5D,EAAS4D,EAAGpB,WAClB,IAAKxC,EAAQ,MAAO,GAEpB,MAAMwF,EAAS,GAgEf,OA9DAxF,EAAOwF,SAAStkB,SAAS0b,IACtB,MAAMyhI,EAAezhI,EAAE6+D,eAEvB,GAAK7+D,EAAE2kB,cAqCP,GAAI3kB,EAAE0yB,WAAY,CACf,MAAMgvG,EAAYpjJ,KAAK+iB,KAAK0B,YAAYhE,yBACpCiI,GACE1oB,KAAK2hB,SAAShD,kBAAkBs2B,SAASvsB,EAAGzpB,KAC5CypB,EAAG/G,SAASoD,eAAiBrD,EAAEC,SAASC,cAG7CwhI,GAAa,IAAIp9I,SAASq9I,IACxB/4H,EAAOljB,KAAK,CACTnI,GAAIyiB,EAAEziB,GACN2M,KAAM8V,EAAEle,MACRb,QAAQ,EACRy1E,MAAM,EACNrvE,KAAM,YACNu6I,IAAKD,EAAOpkJ,GACZwD,KAAK,EACLooF,MAAM,GACP,GAER,MAxDA,CACG,IAAI9hF,EAAO,OAEX,OAAQ2Y,EAAEjf,KACP,IAAK,UACL,IAAK,SACL,IAAK,OACFsG,EAAO2Y,EAAEjf,IAET,MAEH,IAAK,WACFsG,EAAO,OAQbuhB,EAAOljB,KAAK,CACTnI,GAAIyiB,EAAEO,WACNrW,KAAM8V,EAAEle,MACRb,OAAQ+e,EAAEgyB,oBACV0kC,MAAM,EACNrvE,KAAMA,EACN8O,OAAQsrI,EAAatrI,OACrBtP,QAAS46I,EAAa56I,QACtB+6I,IAAK,GACL7gJ,KAAK,EACLooF,MAAM,EACN63D,QAAShhI,GAIf,CAqBA,IAGI4I,CACV,CAEA,aAAM4I,CAAQgnD,GACX,MAAM3yD,EAAiBvnB,KAAKO,GAAGmnB,mBAAmBwyD,GAClD,IAAK3yD,EAAgB,MAAO,GAE5B,MAAMzC,EAASyC,EAAeD,WAC9B,IAAKxC,EAAQ,MAAO,SAEd9kB,KAAK6jI,wBAAwB,IAAMt8G,GAEzC,MAAM62H,EAAep+I,KAAKq+I,gBAAgB92H,GACpCg8H,EAAa,GA2DnB,OA1DgBh8H,EAAe2L,WAEnB,IAAIltB,SAASwQ,IACtB,MAAMgtI,EAAY,CAAEvkJ,GAAIuX,EAAIvX,IAE5BukJ,EAAU,GAAGj8H,EAAetoB,SAAWuX,EAAIvX,GAE3C6lB,EAAOwF,SAAStkB,SAAS2oB,IACtB,MAAM1M,EAAa0M,EAAM1M,WACnBysE,EAAM,GAAGnnE,EAAetoB,MAAMgjB,IAEpC,GAAI0M,EAED,GAAIA,EAAM0X,aAAc,CACrB,IAAIo9G,EAAM90H,EAAMtB,eAAephB,KAC3BvG,MAAMC,QAAQ6Q,EAAIyL,IACnBuhI,EAAU,GAAG90D,QAAYl4E,EAAIyL,GAAYnjB,KACrC4d,GAASA,EAAK+mI,IAAQ/mI,EAAKzd,IAAMyd,IAE/BlG,EAAIyL,KACVuhI,EAAU,GAAG90D,QACVl4E,EAAIyL,GAAYwhI,IAChBjtI,EAAIyL,GAAYhjB,IAChBuX,EAAIyL,GACb,MAAOuhI,EAAU90D,GAAO//D,EAAM9W,OAAOrB,QACjCgtI,EAAU90D,GAAOl4E,EAAIyL,GAE5B,MAAMyhI,EAAStF,EAAat1H,MACxBpH,GAAMA,EAAEziB,KAAOgjB,GAAcP,EAAEziB,KAAO0vB,EAAM1vB,KAGhD,GAAKykJ,EAEL,OAAQA,EAAO36I,MACZ,IAAK,OACL,IAAK,YACFy6I,EAAU90D,IAAQ80D,EAAU90D,IAAQ,IAAInnF,WACxC,MAEH,IAAK,SACFi8I,EAAU90D,GAAOjwC,YACb+kG,EAAU90D,IAAQ,GAAGnnF,WAAW3B,QAAQ,WAAY,KAExD,MAEH,IAAK,OACF49I,EAAU90D,GAAOl4E,EAAIyL,GACjBuhI,EAAU90D,GACL80D,EAAU90D,aAAgB32E,OAC7ByrI,EAAU90D,GAAO1uF,KAAKO,GAAGqZ,MAAMlC,OAAOlB,EAAIyL,KACzCuhI,EAAU90D,GAAO,GAE9B,IAGH60D,EAAWn8I,KAAKo8I,EAAU,IAGtBD,CACV,CAEA,YAAMviD,GACHjhG,MAAMihG,SAEN,MAAMl+D,EAAM9iC,KAAK8iC,IACXo+F,EAAa10G,GAAGsW,EAAI0S,WAER,MAAd0rF,GAAuBlhI,KAAK+jI,cAC7B/jI,KAAK+jI,aAAc,EAEnB7C,EAAWuV,cAEjB,oBC79BH,MAAM9gI,EAAkB,WAExBhW,EAAOC,QAAU,cAAuC+V,EACrD,WAAA7V,CAAYo0G,EAAU/3E,EAAQ2G,GAC3B/iC,MACGm0G,EACA/3E,GAAU,mBAAmB+3E,EAASj1G,KACtCQ,OAAO2vB,OACJ,CACGmlD,UAAW,IAEdzxC,GAGT,CAEA,EAAA88B,GACG,MAAM98B,EAAM9iC,KAAK8iC,IACXmzE,EAAKj2G,KAAKO,GACV4uF,EAAOnvF,KACPm2G,EAAUn2G,KAAKO,GAAG0Q,MAClB0Q,EAAW3hB,KAAK2hB,SAChB+G,EAAK1oB,KAAKunB,eACVkV,EAAY/T,GAAIpB,WAAWM,UAC9BjG,EAAS+wD,eAAe9mE,OACxBqW,WACG0hI,EAAaj7H,GAAIpB,WAAWM,UAC/BjG,EAAS+wD,eAAezhD,QACxBhP,WACG2hI,EAAWl7H,GAAIpB,WAAWM,UAC7BjG,EAAS+wD,eAAe7lB,MACxB5qC,WACG4hI,EAAcn7H,GAAIpB,WAAWM,UAChCjG,EAAS+wD,eAAeS,SACxBlxD,WACGu7C,EAAc90C,GAAIpB,WAAWM,UAChCjG,EAAS+wD,eAAeU,SACxBnxD,WACG6hI,EAAgBp7H,GAAIpB,WAAWM,UAClCjG,EAAS+wD,eAAeW,WACxBpxD,WACG8hI,EAAkBr7H,GAAIpB,WAAWM,UACpCjG,EAAS+wD,eAAeY,QACxBrxD,WACG+hI,EAAat7H,GAAIpB,WAAWM,UAC/BjG,EAAS+wD,eAAee,QACxBxxD,WACGgiI,EAAgBv7H,GAAIpB,WAAWM,UAClCjG,EAAS+wD,eAAegB,WACxBzxD,WACGiiI,EAAiBx7H,GAAIpB,WAAWM,UACnCjG,EAAS+wD,eAAea,YACxBtxD,WACGkiI,EAAcz7H,GAAIpB,WAAWM,UAChCjG,EAAS+wD,eAAec,SACxBvxD,WACGmiI,EAAanuC,EAAGvuF,mBACnB1nB,KAAK2hB,SAASgyD,oBAEX0wE,EAAaD,GAAY98H,WAAWM,UACvCjG,EAASiyD,uBAAuBtwE,QAChC2e,WACGqiI,EAAqBF,GAAY98H,WAAWM,UAC/CjG,EAASiyD,uBAAuBN,QAChCrxD,WACGsiI,EAAcH,GAAY98H,WAAWM,UACxCjG,EAASiyD,uBAAuB91C,SAChC7b,WACGuiI,EAAkB,GAExB/kJ,OAAOD,KAAKmiB,EAASkyD,UAAU7tE,SAASvD,IACN,IAA3Bkf,EAASkyD,SAASpxE,IAEtB+hJ,EAAgBp9I,KAAK,CAClBnI,GAAI,GAAGwD,IACP4O,MAAO,GAAG5O,EAAI+pD,OAAO,GAAGD,gBAAgB9pD,EAAIqD,MAAM,MACnD,IAGL,MAAMgvG,EAAM/0G,MAAM6/D,GAAG,CAClB,CACG4N,QAAS,EACTye,KAAM,CACH,CAAElpE,KAAM,QAASw+B,MAAO,IAAK/9C,MAAO,2BACpC,CACGuf,KAAM,SACNw+B,MAAO,IACPlwC,MAAOrR,KAAKwD,MAAM,SAClBijF,OAAkC,IAA1B9kE,EAASuyD,OAAOC,MACxBnnD,MAAO,KACJmpF,EAAQkT,QAAQvmF,EAAIyxC,UAAU,GAGpC,CACGxxD,KAAM,SACNw+B,MAAO,IACPlwC,MAAOrR,KAAKwD,MAAM,OAClBijF,OAAgC,IAAxB9kE,EAASuyD,OAAOE,IACxBpnD,MAAO,KACJmpF,EAAQiT,MAAMtmF,EAAIyxC,UAAU,GAGlC,CACGxxD,KAAM,SACNw+B,MAAO,IACPlwC,MAAOrR,KAAKwD,MAAM,OAClBijF,OAAgC,IAAxB9kE,EAASuyD,OAAOG,IACxBrnD,MAAO,KACJmpF,EAAQoT,MAAMzmF,EAAIyxC,UAAW,CAAEyY,WAAW,GAAO,GAGvD,CAAC,IAGP,CACG/tF,GAAI6jC,EAAIyxC,UACRxxD,KAAM,YACN9K,KAAM,IAAIF,KACVqsB,SAAgC,IAAtBziB,EAASyiB,SACnByvC,SAAyC,IAA/BlyD,EAASkyD,SAASA,SAC5B4xC,SAAU,IAAIC,IAAI,CACf,CACGnxC,UAAUoxC,SAASC,QACnB,cAAwB+3B,QAAQh4B,SAASC,QACtC,iBAAM6+B,CAAY/4I,GACf,GAAkB,MAAd04I,EAAoB,MAAO,CAAC,EAEhC,MAAMhjJ,EAAO,CAAC,EAQd,OANAA,EAAKijJ,GAAc34I,EAAIjI,KACvBrC,EAAKkjJ,GAAsB54I,EAAI4nE,MAC/BlyE,EAAKmjJ,GAAe74I,EAAIoyB,OAIjB,CAAE7+B,UAFcmlJ,EAAW/3I,MAAM8rE,OAAO/2E,IAEzBnC,GACzB,CACA,cAAMylJ,CAASh5I,GACZ,GAAU,MAANgd,EAAY,MAAO,CAAC,EAExB,MAAMtnB,EAAO,CAAC,EAgBd,OAdAA,EAAKq7B,GAAa/wB,EAAIjI,KACtBrC,EAAKuiJ,GAAc,IAAI5rI,KAAKrM,EAAIi5I,YAChCvjJ,EAAKwiJ,GAAY,IAAI7rI,KAAKrM,EAAIk5I,UAC9BxjJ,EAAKyiJ,GAAen4I,EAAIm5I,QACxBzjJ,EAAKo8D,GAAe9xD,EAAIo5I,UACxB1jJ,EAAK0iJ,GAAiBp4I,EAAI2nE,SAC1BjyE,EAAK2iJ,GAAmBr4I,EAAI4nE,MAC5BlyE,EAAK8iJ,GAAkBx4I,EAAIq5I,SAAW,aACtC3jJ,EAAK+iJ,GAAez4I,EAAIghD,OAAS,UACjCtrD,EAAK4iJ,GAAct4I,EAAIovH,QACvB15H,EAAK6iJ,GAAiBv4I,EAAIs5I,UAInB,CAAE/lJ,UAFcypB,EAAGrc,MAAM8rE,OAAO/2E,IAEjBnC,GACzB,CACA,eAAMgmJ,GAGH,OAAkB,MAAdb,EAA2B,UAEzBj1D,EAAK00C,wBAAwB,IAAMugB,GAElCA,EAAWlxH,UAAUp0B,KAAKO,IACvB,CACJJ,GAAII,EAAEJ,GACNwE,KAAMpE,EAAEglJ,GACR/wE,MAAOj0E,EAAEilJ,GACTxmH,OAAQz+B,EAAEklJ,OAGnB,CACA,YAAMW,CAAOr8I,GAGV,GAAU,MAAN6f,EAAY,MAAO,SAEjBymE,EAAK00C,wBAAwB,IAAMn7G,GAEzC,MAAMgkC,QAAc1sD,KAAK0sD,QACnBy4F,QAAiBnlJ,KAAKmlJ,WAE5B,OAAOz8H,EAAGwK,UAAUp0B,KAAKO,IACtB,IAAIm0E,EAAS9mB,EAAM5jC,MACftM,GAAMA,EAAEvd,KAAOI,EAAE8kJ,MAClBllJ,GACCs0E,EAAY4xE,EAASr8H,MACrB2L,GAAMA,EAAEx1B,KAAOI,EAAE6kJ,MAClBjlJ,GAcH,OAZiB,MAAbs0E,GAA+B,MAAVC,IACtBD,EAAYA,GAAa,aACzBC,EAASA,GAAU,WAUf,CACJv0E,GAAII,EAAEJ,GACNwE,KAAMpE,EAAEo9B,GACRkoH,WAAYxuC,EAAQp+F,KAAKosC,UACtB,oBADSgyD,CAEV92G,EAAEskJ,IACJiB,SAAUzuC,EAAQp+F,KAAKosC,UACpB,oBADOgyD,CAER92G,EAAEukJ,IACJiB,QAASxlJ,EAAEwkJ,GACXiB,UAAWzlJ,EAAEm+D,GACb6V,SAAUh0E,EAAEykJ,GACZxwE,MAAOj0E,EAAE0kJ,GACTgB,QAASxxE,EACT7mB,MAAO8mB,EACPsnD,QAASz7H,EAAE2kJ,GACXgB,UAAW3lJ,EAAE4kJ,GACf,GAEP,CACA,oBAAMmB,CAAenmJ,SACZmlJ,EAAW/3I,MAAMqC,OAAOzP,EACjC,CACA,iBAAMomJ,CAAYpmJ,SACTypB,EAAGrc,MAAMqC,OAAOzP,EACzB,CACA,cAAMkmJ,GACH,MAAO,CACJ,CAAE1hJ,KAAM,aAAcxE,GAAI,eAC3B0a,OACCgI,EAASqyD,oBAAoBtwD,MAAM,MAAM5kB,KAAKO,IACpC,CACJJ,GAAII,EACJoE,KAAMpE,MAIlB,CACA,WAAMqtD,GACH,MAAO,CAAC,CAAEztD,GAAI,UAAWoS,MAAO,YAAasI,OAC1CgI,EAASsyD,SAASvwD,MAAM,MAAM5kB,KAAKO,IACzB,CACJJ,GAAII,EACJgS,MAAOhS,MAInB,CACA,oBAAMimJ,CAAermJ,EAAIyM,GACtB,GAAkB,MAAd04I,EAAoB,MAAO,CAAC,EAEhC,MAAMhjJ,EAAO,CAAC,EAEdA,EAAKijJ,GAAc34I,EAAIjI,KACvBrC,EAAKkjJ,GAAsB54I,EAAI4nE,MAC/BlyE,EAAKmjJ,GAAe74I,EAAIoyB,aAElBsmH,EAAW/3I,MAAM+yE,OAAOngF,EAAImC,EACrC,CACA,iBAAMmkJ,CAAYtmJ,EAAIyM,EAAK68E,EAAMtwE,GAC9B,GAAU,MAANyQ,EAAY,MAAO,CAAC,EAExB,MAAMtnB,EAAO,CAAC,EAEdA,EAAKq7B,GAAa/wB,EAAIjI,KACtBrC,EAAKuiJ,GAAc,IAAI5rI,KAAKrM,EAAIi5I,YAChCvjJ,EAAKwiJ,GAAY,IAAI7rI,KAAKrM,EAAIk5I,UAC9BxjJ,EAAKyiJ,GAAen4I,EAAIm5I,QACxBzjJ,EAAKo8D,GAAe9xD,EAAIo5I,UACxB1jJ,EAAK0iJ,GAAiBp4I,EAAI2nE,SAC1BjyE,EAAK2iJ,GAAmBr4I,EAAI4nE,MAC5BlyE,EAAK8iJ,GAAkBx4I,EAAIq5I,SAAW,aACtC3jJ,EAAK+iJ,GAAez4I,EAAIghD,OAAS,UACjCtrD,EAAK4iJ,GAAct4I,EAAIovH,QACvB15H,EAAK6iJ,GAAiBv4I,EAAIs5I,gBAEpBt8H,EAAGrc,MAAM+yE,OAAOngF,EAAImC,EAC7B,IAGN,CACGmzE,UAAU5xD,MAAM,YAChB,cAA6B4xD,UAAU5xD,MAAM,YAC1C,MAAAjR,GACG,MAAM8zI,EAAQzlJ,MAAM2R,SAGpB,OAFA8zI,EAAMjkG,MAAQ,IACdikG,EAAMj9I,QAAUi8I,EACTgB,CACV,IAGN,CACGjxE,UAAU5xD,MAAM,iBAChB,cAAiC4xD,UAAU5xD,MACxC,iBAEA,MAAAjR,GACG,MAAM+zI,EAAa1lJ,MAAM2R,SAEnBnJ,EAAUi8I,EAAgB1lJ,KAAKO,GAClCI,OAAO2vB,OAAO,CAAErR,KAAM,OAAO1e,EAAEJ,MAAQI,KAO1C,OAJIW,KAAKmnB,IAAIzV,OAAOuzI,UACjBQ,EAAW33I,KAAKA,KAAKy4E,KAAK,GAAGnlF,KAAOmH,EAClCk9I,EAAW33I,KAAK1M,KAAOmH,EAErBk9I,CACV,IAGN,CACGlxE,UAAU5xD,MAAM,sBAChB,cAAqC4xD,UAAU5xD,MAC5C,sBAEA,SAAA+iI,CAAUtkJ,GAEPrB,MAAM2lJ,UAAUtkJ,GAAQ,GAC3B,SASf,cAFO0zG,EAAI/rG,KAEJ+rG,CACV,CAEA,YAAM9T,GACHjhG,MAAMihG,SAEN,MAAMl+D,EAAM9iC,KAAK8iC,IACXo+F,EAAa10G,GAAGsW,EAAI0S,WAER,MAAd0rF,GAAuBlhI,KAAK+jI,cAC7B/jI,KAAK+jI,aAAc,EAEnB7C,EAAWuV,cAEjB,oBC1VH,MAAM9gI,EAAkB,WAExBhW,EAAOC,QAAU,cAAiC+V,EAC/C,WAAA7V,CAAYo0G,EAAU/3E,EAAQ2G,GAC3B/iC,MACGm0G,EACA/3E,GAAU,aAAa+3E,EAASj1G,KAChCQ,OAAO2vB,OACJ,CACG4jG,IAAK,GAEL2yB,QAAS,GACTC,WAAY,GACZC,aAAc,GAEdC,gBAAiB,GACjBC,oBAAqB,GACrBC,0BAA2B,IAE9BljH,IAIN9iC,KAAK0/G,eACF1/G,KAAK0/G,gBACLxL,EACIvxF,OAAO1c,GAAMA,EAAE+iE,kBACflqE,KAAKmH,IACI,CACJ8c,KAAM9c,KAIrB,CAEA,EAAA25D,GACG,MAAM98B,EAAM9iC,KAAK8iC,IACXoxE,EAAWl0G,KAAK+iB,KAChBkzF,EAAKj2G,KAAKO,GACV41G,EAAUF,EAAGhlG,MAEnB,IAAI6jG,EAAM,KAIVqB,EAAQptG,KAAKotG,EAAQv2C,GAAGuhC,KAAM,CAC3B8kD,SAAU,UACVr6I,KAAM,cACNmS,KAAM,CAACrS,EAAKskC,IACLtkC,EAAIqS,KAAKnc,OACH,CACJ,0DACA8J,EAAIqS,KACJ,aACD3U,KAAK,IAEH,CACJ,iEACAsC,EAAI2F,MAAMm7C,OAAO,GAAGD,cACpB,WACDnjD,KAAK,MAIb,MAAMs2G,EAAiB1/G,KAAK0/G,eACtB/9F,EAAW3hB,KAAK2hB,SAEtB,GAAI+9F,EAAe99G,OAAS,EACzB,GAAI+f,EAAS+yD,UAAW,CAErB,MAAMwxE,EAAYxmC,EAAe5gH,KAAKgzI,IACnC,MAAM/uH,EAAO+uH,EAAG/uH,KAEhB,MAAO,CACJ9jB,GAAI,GAAG8jB,EAAK9jB,UACZoS,MAAO0R,EAAKvf,MACZua,KAAMgF,EAAKusC,QAAUvsC,EAAKusC,QAAU,GACtC,IAGJ,GAAI42F,EAAUtkJ,OAAQ,CAEnB,MAAMikJ,EAAe,CAClB5mJ,GAAI6jC,EAAI+iH,aACRx0I,MAAOrR,KAAKwD,MAAM,iBAClBua,KAAM,uBAIH6nI,EAAa,CAChB3mJ,GAAI6jC,EAAI8iH,WACRv0I,MAAOrR,KAAKwD,MAAM,eAClBua,KAAM,uBACN0oE,QAAQ,GAIX,IAAIqP,EAAe,GAAG4pB,EAAe,GAAG38F,KAAK9jB,UAE7C,MAAMknJ,EAAYlwC,EAAGlmG,QACf41I,EAAU,CACb5iI,KAAM,UACNha,KAAM,cACN9J,GAAI6jC,EAAI6iH,QACR51F,OAAQpuC,EAASouC,OACjBxO,MAAO5/B,EAASizD,aAAejzD,EAASizD,aAAe,EACvD8wD,QAAQ,EACR19E,SAAUrmC,EAASkzD,WAAalzD,EAASkzD,WAAa,OACtD9nD,IAAKpL,EAASgzD,UAAY,aAAe,GACzCvzE,KAAM8kJ,EAAUvsI,OAAOksI,GACvB5kJ,GAAI,CACDyxG,YAAczzG,IAEX,GAAIA,IAAO6jC,EAAI+iH,aAEZp+I,YAAW,KACR,MAAM4/H,EAAW76G,GAAGsW,EAAI6iH,SAGxBte,EAAS91H,OAAOuxB,EAAI+iH,cAEpBxe,EAAS3uH,IAAIktI,GAEbve,EAAS+e,SAGT/e,EAAS72B,OAAO1a,GAGhBqwD,EAAUl2I,IACP,GAAG6yB,EAAIkwF,YACPqU,EAASxgD,WACX,GACD,QACC,GAAI5nF,IAAO6jC,EAAI8iH,WACnBn+I,YAAW,KACR,MAAM4/H,EAAW76G,GAAGsW,EAAI6iH,SAGxBte,EAAS91H,OAAOuxB,EAAI8iH,YAEpBve,EAAS3uH,IAAImtI,GAEbxe,EAAS+e,SAGT/e,EAAS72B,OAAO1a,GAGhBqwD,EAAUl2I,IACP,GAAG6yB,EAAIkwF,YACPqU,EAASxgD,WACX,GACD,OACC,CAEJiP,EAAe72F,EAIfA,EAAKA,EAAG2G,QAAQ,QAAS,IACzB,IAAIk7E,EAAOt0D,GAAGvtB,GACd,GAAI6hF,EACDA,EAAK+J,MAAK,GAAO,OACb,CAEJ,IAAIx0E,EAAM,sBAAsBrW,KAAK4L,SAAS5L,KAAKf,qDAAqD62F,MACxG91F,KAAKO,GAAGoJ,OAAO,YAAa0M,EAAK,CAAC,EACrC,CAIH,GAEHi/H,eAAgB,KACb+Q,GAAW,EAEd18D,cAAe,KACZ08D,GAAW,IAKdC,EAAY,CACfvjI,KAAM,YACN9jB,GAAI6jC,EAAIkwF,IACRuzB,WAAW,EACX9xE,SAAU9yD,EAAS8yD,SACnBgY,MAAOizB,EAAe5gH,KAAKikB,IACV,CACX9jB,GAAI8jB,EAAKA,KAAK9jB,GAEd8jB,KAAM,SACNwjE,KAAM,OAKZtlF,GAAI,CACDulJ,aAAc,CAACC,EAAQC,KACpB1mJ,KAAKghG,OAAO0lD,EAAO,IAKtBL,EAAY,WACf,MAAMhf,EAAW76G,GAAGsW,EAAI6iH,SAGlBgB,EAAetf,GAAUx9C,MAAMpM,cAClC,iBAAiB36C,EAAI+iH,kBAGpBc,GACDA,EAAa1wD,aACV,UACA,oBAAoBnzD,EAAI+iH,gBAG9B,MAAMe,EAAavf,GAAUx9C,MAAMpM,cAChC,iBAAiB36C,EAAI8iH,gBAGpBgB,GACDA,EAAW3wD,aACR,UACA,kBAAkBnzD,EAAI8iH,cAG5B1xC,EAASvxF,OAAOI,IACb,MAAM+9D,EAAOumD,GAAUx9C,OAAOpM,cAC3B,iBAAiB16D,EAAK9jB,aAGpB6hF,GAILA,EAAKmV,aACF,UACA,OAAOlzE,EAAKnX,KAAKhG,QAAQ,IAAK,OAAOmd,EAAK9jB,MACvCi1G,EAASj1G,KAEd,GAEP,EAEA,IAAIypE,EAAU,CAACi9E,EAASW,GAEI,UAAxB3kI,EAASkzD,aACVnM,EAAU,CAAC49E,EAAWX,IAGzB7wC,EAAM,CACH7oB,KAAMvjB,EAEZ,MACGosC,EAAM,CACH/xF,KAAM,SAEf,KAAO,CACJ,MAAM0pE,EAAQynB,EACVvxF,OAAOI,IAGL,GAFoBA,EAAKimD,gBAEP,EACf,OAAOjmD,CACV,IAEFjkB,KAAKikB,IACH,MAAM8jI,EAAQ,CACX5nJ,GAAI8jB,EAAK9jB,GAET8jB,KAAM,SACNwjE,KAAM,IAGT,IAAIugE,EAAc,GAwBlB,OAnBMA,EAFF/jI,EAAKusC,QACF3tC,EAASmzD,UACI,CACX,mEACA/xD,EAAKusC,QACL,iBACAvsC,EAAKvf,MACL,UACD4F,KAAK,IAEO,CACX,kCACA2Z,EAAKusC,QACL,aACAvsC,EAAKvf,OACN4F,KAAK,IAIM2Z,EAAKvf,MAEjB,CACJwZ,OAAQ8pI,EACRh5I,KAAM+4I,EACR,IAKJ/xC,EADCroB,EAAM7qF,OACD,CACH2kF,KAAM,CACH,CACGxjE,KAAM,UACN9jB,GAAI6jC,EAAIkwF,IACRv+C,SAAU9yD,EAAS8yD,SACnB1kB,OAAQpuC,EAASouC,OACjBmjE,OAAQ,CACLnjE,OAAQ,GACRhnD,KAAM,SACNgkB,IAAKpL,EAASgzD,UAAY,aAAe,GACzC1zE,GAAI,CACD0oF,cAAe,KACZuqB,EAASvxF,OAAOI,IACb,MAAM+9D,EAAOt0D,GACVsW,EAAIkwF,MACJnpC,OAAOpM,cACP,eAAe16D,EAAK9jB,QAGlB6hF,GAELA,EAAKmV,aACF,UACA,OAAOlzE,EAAKnX,QAAQmX,EAAK9jB,MAAMi1G,EAASj1G,KAC1C,GACF,IAIXqnJ,UAAW,CACRrlJ,GAAI,CACDulJ,aAAc,CAACC,EAAQC,KACpB1mJ,KAAKghG,OAAO0lD,EAAO,IAI5Bj6D,MAAOA,KAOV,CACH1pE,KAAM,SAEf,MAEA+xF,EAAM,CACH/xF,KAAM,UAOZ,OAJA+xF,EAAM/0G,MAAM6/D,GAAG,CAACk1C,WAETA,EAAI/rG,KAEJ+rG,CACV,CAEA,UAAMx0G,CAAKC,SACFR,MAAMO,KAAKC,GAEjB,MAAMuiC,EAAM9iC,KAAK8iC,IACXikH,EAAOv6H,GAAGsW,EAAIkwF,KACd/c,EAAKj2G,KAAKO,GACV41G,EAAUF,EAAGhlG,MAEf81I,GAAM5wC,EAAQ56B,OAAOwrE,EAAM5wC,EAAQxmB,aAEvC,MAAMukB,EAAWl0G,KAAK+iB,KACC/iB,KAAK0/G,eAEb15G,SAAS8rI,IAIrB9xI,KAAK+vB,SAAS,CACXC,QAAS8hH,EAAG/uH,KACZkN,UAAW,aACXC,SAAU,IAAIzV,IAAMza,KAAK4zG,cAAcn5F,IACxC,IAILza,KAAK+vB,SAAS,CACXC,QAASkkF,EACTjkF,UAAW,YACXC,SAAU,IAAIzV,IAAMza,KAAKgnJ,aAAavsI,KAIzC,MAAM4sH,EAAW76G,GAAGsW,EAAI6iH,SAExB,IAAKte,EAAU,OAEf,MAAMztE,QAAcq8C,EAAGlmG,QAAQnH,IAAI,GAAGk6B,EAAIkwF,aAE1C,IAAKp5D,EAAO,OAGZ,MAAMisF,EAAe,CAClB5mJ,GAAI6jC,EAAI+iH,aACRx0I,MAAOrR,KAAKwD,MAAM,iBAClBua,KAAM,uBAIH6nI,EAAa,CAChB3mJ,GAAI6jC,EAAI8iH,WACRv0I,MAAOrR,KAAKwD,MAAM,eAClBua,KAAM,uBACN0oE,QAAQ,GAIX4gD,EAAS4f,SAASrtF,GAElB,MAAMstF,EAAoB7f,EAAS7+G,QAAQsa,EAAI+iH,eAAiB,KAC1DsB,EAAkB9f,EAAS7+G,QAAQsa,EAAI8iH,aAAe,KAGxDhsF,EAAMwtF,UACHF,GAAqBC,GAEtB9f,EAAS3uH,IAAIktI,GACRsB,GAAqBC,GAE7B9f,EAAS3uH,IAAImtI,EACnB,CAEA,UAAAjyC,CAAWhjC,GACR,MAAMm2E,EAAOv6H,GAAGxsB,KAAK8iC,IAAIkwF,KAEzB+zB,GAAMp4D,aACN3uF,KAAK+iB,KAAK6wF,WAAWhjC,GACrBm2E,GAAMn4D,cACT,CAEA,SAAAo4D,CAAUK,GACP,MAAMnzC,EAAWl0G,KAAK+iB,KAChBukI,EAAa96H,GAAG66H,GAKtB,GAFArnJ,KAAKg4I,aAAa9jC,EAASnsG,QAEvB/H,KAAK2hB,SAAS+yD,UACf,GAAK4yE,EAAWp3D,YAMT1jE,GAAGxsB,KAAK8iC,IAAIkwF,KAAK9+F,SAASmzH,OANJ,CAC1B,MAAMpP,EAAShU,aAAY,KACpBqjB,EAAWp3D,aAAag0C,cAAc+T,GAE1CqP,EAAWz8D,MAAK,GAAO,EAAM,GAC7B,IACN,CACN,CAEA,YAAAmtD,CAAaj1H,GACV,MAAMwkI,EAAU/6H,GAAGzJ,EAAK9jB,IAEP,QAAb8jB,EAAKtgB,KAA8B,kBAAbsgB,EAAKtgB,KAC5B8kJ,GAAS18D,MAAK,GAAO,GAEpB9nE,EAAKhb,QACN/H,KAAKg4I,aAAaj1H,EAAKhb,OAE7B,CAEA,MAAAi5F,CAAOzvC,GACJ,MAAMzuB,EAAM9iC,KAAK8iC,IAEjB,IAAI0kH,GAAmB,EAEvB,MAAMngB,EAAW76G,GAAGsW,EAAI6iH,UAGnBp0F,GAAU81E,IACZ91E,EAAS81E,EAASmO,gBAAgB5vI,QAAQ,QAAS,KAEtD,MAAMsuG,EAAWl0G,KAAK+iB,KACC/iB,KAAK0/G,eAEb15G,SAAS8rI,IAErB,MAAMjqG,EAAWqsE,EAASvxF,OAAOI,GACvBA,EAAK9jB,KAAO6yI,EAAG/uH,KAAK9jB,KAG9B,IAAIgqE,EAAc,EAEdphC,EAASjmC,SAAQqnE,EAAcphC,EAAS,GAAGmhC,kBAG1CzX,IAAWi2F,GAAoBv+E,EAAc,IAC/C1X,EAASugF,EAAG/uH,KAAK9jB,GAEjBuoJ,GAAmB,GAItB,MAAMT,EAAOv6H,GAAGsW,EAAIkwF,KACdrxG,EAAW3hB,KAAK2hB,SAEtB,IAAKmwH,GAAIt8F,WAAas8F,GAAI/uH,MAAM9jB,KAAOsyD,EAAQ,CAExCw1F,GAAMtsE,cAAcssE,EAAKtsE,aAAa,CAAE1xE,KAAM,SAElD+oI,EAAGt8F,UAAYs8F,EAAG/uH,KAAKyyB,YAEvB,MAAM+xG,EAAU/6H,GAAGslH,EAAG/uH,KAAK9jB,IACrBg3G,EAAKj2G,KAAKO,GACV41G,EAAUF,EAAGhlG,MAEf0Q,EAAS+yD,UAEVyhC,EAAQv2C,GACL,CAEG3gE,GAAI6yI,EAAG/uH,KAAK9jB,GACZ8jB,KAAM,aACNgK,IAAK,0BACLjf,KAAMgkI,EAAGt8F,UAAUoqB,MAEtB2nF,GAIHpxC,EAAQv2C,GACL,CAEG3gE,GAAI6yI,EAAG/uH,KAAK9jB,GACZ8jB,KAAM,aACNgK,IAAK,wBACLjf,KAAMgkI,EAAGt8F,UAAUoqB,MAEtB2nF,GAKNt+E,EAAc6oE,EAAG/uH,KAAKimD,gBAEtB8oE,EAAGt8F,UAAUl1C,KAAK21G,EAAIhtC,GAGtBxhE,YAAW,KAGRs/I,GAAM9rE,gBAAgB,GAOtB,GACN,CAGI62D,GAAI/uH,MAAM9jB,KAAOsyD,GAAUugF,GAAIt8F,WAAWwrD,QAC3C8wC,EAAGt8F,UAAUwrD,SAEZr/E,EAAS+yD,WAAao9D,GAAI/uH,MAAM9jB,KAAOsyD,IACxC/kC,GAAG+kC,IAASs5B,MAAK,GAAO,GACxBw8C,GAAU72B,OAAO,GAAGj/C,UACvB,GAEN,oBC/jBH,MAAM57C,EAAkB,WAExBhW,EAAOC,QAAU,cAAkC+V,EAChD,WAAA7V,CAAYo0G,EAAU/3E,EAAQ2G,GAC3B/iC,MACGm0G,EACA/3E,GAAU,cAAc+3E,EAASj1G,KACjCQ,OAAO2vB,OACJ,CACG3rB,KAAM,IAETq/B,GAGT,CAEA,EAAA88B,GACG,MAAM98B,EAAM9iC,KAAK8iC,IACXnhB,EAAW3hB,KAAK2hB,SAEhB8lI,EAAU,CACbxoJ,GAAI6jC,EAAIr/B,KACRsf,KAAM,WACN23G,UAAW,GACX3tG,IAAK,qBACLy5D,YAAY,GAGX7kE,EAASouC,OAAQ03F,EAAQ13F,OAASpuC,EAASouC,OAC1C03F,EAAQ/+B,YAAa,EAE1B,MAAM5T,EAAM/0G,MAAM6/D,GAAG,CAAC6nF,IAItB,cAFO3yC,EAAI/rG,KAEJ+rG,CACV,CAEA,WAAA3/B,CAAY9jE,GACT,MAAMyxB,EAAM9iC,KAAK8iC,IACX5+B,EAASlE,KAAK+iB,KAAKoyD,YAAY9jE,EAAOyxB,EAAIr/B,MAE1CikJ,EAAQl7H,GAAGsW,EAAIr/B,MAEhBikJ,IAELA,EAAMttE,OAAO,WAAYl2E,GACzBwjJ,EAAM9wI,UACT,CAEA,MAAAoqF,GACGjhG,MAAMihG,SAGN,MAAM/2B,EAAWjqE,KAAKunB,eAChB2sF,EAAWl0G,KAAK+iB,KAElBknD,GAAoC,aAAxBiqC,EAASnsG,OAAOtF,KAC7B,CAAC,eAAgB,eAAeuD,SAASvD,IACtCyxG,EAASnkF,SAAS,CACfC,QAASi6C,EACTh6C,UAAWxtB,EACXytB,SAAU,IAAIzV,IAAMza,KAAKm1E,eAAe16D,IACzC,IAIRza,KAAKm1E,aACR,gEClEY,MAAMwyE,UAAuB,IASzC,kBAAW,GACR,MAAO,CAAC,CACX,CAaA,wBAAOtlC,GACJ,IAYI5zB,EAAQ,CACTr9C,UAAW,CAAC,GAGf,MAAO,CACJwuB,GAjBM,CACN78C,KAAM,WACNwsD,SAAU,SAgBVjvE,KAbSiI,IAET,IAAK,IAAI26B,KAAKurD,EAAMr9C,UACjBq9C,EAAMr9C,UAAUlO,GAAK36B,EAAQ26B,IAAMurD,EAAMr9C,UAAUlO,EACtD,EAUAurD,MAAOA,EAEb,CAEA,YAAAr5B,CAAazzC,GACV3hB,KAAK2hB,SAAWA,CACnB,CAEA,UAAAimI,GACG,OAAO5nJ,KAAK2hB,UAAY,CAAC,CAC5B,CAiBA,SAAA6zB,CAAUtZ,EAAKC,GACZn8B,KAAKk8B,IAAMA,EACXl8B,KAAKm8B,OAASA,EAEd,IAYIsyD,EAAQ,CACTr9C,UAAW,CAAC,GAGf,MAAO,CACJwuB,GAjBM,CACN78C,KAAM,WACNwsD,SAAU,SAgBVjvE,KAbSiI,IAET,IAAK,IAAI26B,KAAKurD,EAAMr9C,UACjBq9C,EAAMr9C,UAAUlO,GAAK36B,EAAQ26B,IAAMurD,EAAMr9C,UAAUlO,EACtD,EAUAurD,MAAOA,EAEb,wGC9FH,IAAI3hE,EAAI,IAAIjkB,IAAWtI,GAAGgD,aAAaC,SAASqF,GAEjC,MAAMw0G,UAA8B,EAAAznG,EAOhD,kBAAW,GACR,MAAO,CACJ09C,SAAU,OAEhB,CAEA,wBAAO+uD,CAAkBnmF,EAAKC,GAC3B,IAAI2G,EAAM,CACPwwB,SAAU,GAAGn3B,cAGZyjC,EAAK,CACN3gE,GAAI6jC,EAAIwwB,SACR1nD,KAAM,WACNmX,KAAM,aACNvf,MAAOspB,EAAE,gBACTknC,WAAYh0D,KAAKO,GAAGsV,WAAWnE,SAASiC,iBACxC1S,GAAI,CACDowC,SAAU,CAAC0tC,EAAQmN,KACZnN,GAAUjyD,EAAE,sBACbN,GAAGsW,EAAIwwB,UAAUp/B,SAAS,IAG7Bid,EAAOC,UAAUm8F,QAAQ,IAW9Bp8F,EAAS,CACVC,UAAW,CACRm8F,OAAQ,WACLlsI,QAAQqF,KAAK,eAChB,GAGHq1G,YAAa,CAACh5F,EAAMpB,EAAW,CAAC,KAC7B,GAAY,MAARoB,EAAc,OAGlB,IAAI8kI,EAAY,CACb,CACG5oJ,GAAI,OACJoS,MAAOyb,EAAE,uBAIXg7H,EAAe/kI,EACf8tC,WACAzwC,OAAO3F,GACEA,EAAEkI,OAAO1c,GAEVA,GACS,QAATA,EAAExD,KACFwD,EAAEshB,gBACFthB,EAAEshB,eAAeD,YACjBrhB,EAAEshB,eAAeD,WAAWroB,IACzB8jB,EAAK4L,QAAQhN,SAASC,aAE5B,GAAMhgB,SACT,GACF9C,KAAK2b,IACI,CACJxb,GAAIwb,EAAExb,GACNoS,MAAOoJ,EAAEjX,UAIlBqkJ,EAAYA,EAAUluI,OAAOmuI,GAE7B,IAAIhqB,EAAYtxG,GAAGsW,EAAIwwB,UACnBwqE,IACDA,EAAU1jD,OAAO,UAAWytE,GAC5B/pB,EAAU1jD,OACP,QACAz4D,EAAS2xC,UAAYtzD,KAAK+vC,QAAQujB,UAErCwqE,EAAUlnH,UACb,EAGHi7E,YAAc9uE,IACX,IAAIpB,EAAWoB,EAAKpB,UAAY,CAAC,EAIjC,OAFAA,EAAS2xC,SAAW9mC,GAAGsW,EAAIwwB,UAAU5X,WAE9B/5B,CAAQ,GAIrB,MAAO,CACJi+C,GAAIA,EACJt/D,KArEUiI,IACV,IAAK,IAAI26B,KAAKiO,EAAOC,UAClBD,EAAOC,UAAUlO,GAAK36B,EAAQ26B,IAAMiO,EAAOC,UAAUlO,EACxD,EAmEA64E,YAAa5qE,EAAO4qE,YACpBlqB,YAAa1gD,EAAO0gD,YAE1B,CAEA,YAAAz8B,CAAazzC,EAAW,CAAC,GACtB3hB,KAAK2hB,SAAW3hB,KAAK2hB,UAAY,CAAC,EAClC3hB,KAAK2hB,SAAS2xC,SACX3xC,EAAS2xC,UAAYtzD,KAAKF,YAAYiwC,QAAQujB,QACpD,CAEA,MAAAy0F,CAAO5rH,EAAQD,GACZ,MAAO,CACJkqD,MAAOlqD,EAAIE,KAAKuC,OAAO,GAAGxC,mBAC1BxN,MAAOwN,EAAOzY,MAAM,KAAK,GACzBgvE,OAAQx2D,EAAIE,KAAKuC,OAAO,GAAGxC,0BAEjC,CAEA,SAAAqZ,CAAUtZ,EAAKC,GAEZ,IAAI2G,EAAM9iC,KAAK+nJ,OAAO5rH,EAAQD,GAE1B0jC,EAAK,GAET,GACG5/D,KAAK2hB,SAAS2xC,UACdtzD,KAAK2hB,SAAS2xC,UAAYtzD,KAAKF,YAAYiwC,QAAQujB,SACpD,CAGC,MAAM0pC,EAAS,qBAAqBh9F,KAAK2hB,SAAS2xC,YAAYxwB,EAAInU,QAIlEixC,EAAK,CACF3gE,GAAI6jC,EAAI4vD,OACR3vE,KAAM,SACNha,KAAM,OACNgV,KAAM,aACNwjC,MAAO,GACPwO,OAAQ,GACRhjC,IAAK,wCACL9rB,GAAI,CACD0oF,cAAe,KACZn9D,GAAGsW,EAAI4vD,SACF7I,MAAMpM,cAAc,UACrBwY,aAAa,UAAW+G,EAAO,GAI/C,CAEA,IAAI7rD,EAAS,CACVC,UAAW,CACR0/F,WAAarwB,IACNj0F,GAAGsW,EAAIsjD,QAAQ55D,GAAGsW,EAAIsjD,OAAOzN,OAAO,EAE3C00D,SAAU,KACH7gH,GAAGsW,EAAIsjD,QAAQ55D,GAAGsW,EAAIsjD,OAAOzN,SAE1B,GAEVqvE,cAAe,KACL,EAEV/zF,YAAa,KACH,GAIb46E,gBAAkBpqH,IACfzkB,KAAKioJ,aAAexjI,CAAW,EAGlC61G,QAAU5xG,IACP,IAAIkoD,EAAS5wE,KAAK2hB,SAAS2xC,SACvBvE,EAAO/uD,KAAKioJ,aAAa7nI,OAAO3F,GAAMA,EAAExb,IAAM2xE,IAAQ,GAAM,GAEhE,OAAOz/B,EAAO+2G,cAAcn5F,EAAMrmC,EAAG,EASxCw/H,cAAe,CAACn5F,EAAMrmC,IACZ,IAAIlnB,SAAQ,CAAC9B,EAASoK,KAC1B,GAAyB,MAArB9J,KAAKioJ,aAAsB,OAAOvoJ,IAEtC,GAAI8sB,GAAGsW,EAAIsjD,OAER,OADA55D,GAAGsW,EAAIsjD,OAAOyE,OACPnrF,IAIV,IAAIyoJ,EAAYp5F,EAAKp5B,MAAM,KAAM,KAAM,CAAEk8B,gBAAgB,IACzDs2F,EAAUlpJ,GAAKe,KAAKioJ,aAAa1nJ,GAAGoB,OAEpC,IAAIymJ,EAAYD,EAAU3yG,YACtBoqB,EAAKwoF,EAAUxoF,MAIhBuoF,EAAUxlI,OACN1c,GACEA,aAAa,KACbA,aAAa,MAChB,IACE,IAEED,SAAS+c,KAEbA,aAAgB,IAAmBA,EAAKhb,OAASgb,GAClD9hB,GAAG,SAAUonJ,IACZl3G,GAAQC,WAAW0/F,WAAWuX,GAI1B77H,GAAGsW,EAAIsjD,OACR55D,GAAGsW,EAAIsjD,OAAOzN,QAEF34E,KAAKizH,mBACXt6C,OACT,GACD,IAGL,IAAI2vE,EAAgB,CACjBvlI,KAAM,SACN9jB,GAAI6jC,EAAIsjD,MACRusB,OAAO,EACP3qD,SAAU,SAKVskC,QAAQ,EACR/qC,MAAOthC,SAASjgB,KAAK2hB,SAAS4xC,aAAe,IAC7CxD,OAAQ9vC,SAASjgB,KAAK2hB,SAAS6xC,aAAe,IAAM,IACpDzmC,IAAK,oBACLlR,KAAM,CACHkH,KAAM,UACNgK,IAAK,aACLk/D,KAAM,CACH,CACGlpE,KAAM,QACNvf,MAAOurD,EAAKvrD,MACZupB,IAAK,cACLmpF,MAAO,UAEV,CACGnzF,KAAM,SACNvf,MAAOspB,EAAE,SACTkgE,WAAW,EACXkpB,MAAO,SACPlpF,MAAO,WACQhtB,KAAKizH,mBACXt6C,OACT,KAIT7qE,KAAM,CACHiV,KAAM,aACN2iH,QAAQ,EACR53H,KAAM8xD,IAKZx8D,MAAMw8D,GAAG0oF,GAAez9D,OAIxBu9D,EAAU9nJ,KAAKN,KAAKioJ,aAAa1nJ,GADb,EAC8B,CAC/CuwI,WAAY3/F,EAAOC,UAAU0/F,WAC7BE,cAAe7/F,EAAOC,UAAUi8F,SAChCp5E,YAAa9iB,EAAOC,UAAU6iB,YAC9B+zF,cAAe72G,EAAOC,UAAU42G,gBAGnCI,EAAUpnD,SAEVv5F,YAAWgrB,UACR0e,EAAOo3G,gBAAgB7/H,EAAIy/H,GAE3BzoJ,GAAS,GACT,IAAI,IAIb6oJ,gBAAiB,CAAC7/H,EAAIqmC,KACnB,IAAKrmC,EAAI,OAET,IAAIhd,EAAMgd,EAAGpB,WACb,IAAK5b,EAAK,OAEV,IAAI80H,EAAa93G,EAAGJ,YACfk4G,GAELzxE,EAAKpsC,QAAQ3c,SAASC,IACdA,GAAc,QAATA,EAAExD,KAEZwD,EAAE0c,QAAQ3c,SAASwiJ,IAChB,GAAiB,WAAbA,EAAM/lJ,KAAsC,MAAlB+lJ,EAAM7mI,SAAkB,OAEtD,IAAIgN,EAAQ65H,EAAM75H,QAClB,GAAa,MAATA,EAAe,OAEnB,IAAI85H,EAAU95H,EAAMtB,eACpB,GAAe,MAAXo7H,GAAmBA,EAAQxpJ,IAAMyM,EAAIzM,GAAI,OAE7C,IAAImC,EAAO,CAAC,EACRqsB,EAAekB,EAAMlB,eAezB,GAdArsB,EAAKqsB,GAAgB,CAClBxuB,GAAIuhI,EAAWvhI,KAIJyM,EAAIw6B,WAAa,IACvBlgC,SAASshC,KACbA,EAAIhd,QAAU,IAAItkB,SAAS0b,IACzBtgB,EAAKqsB,GAAc/L,EAAEO,YAClBu+G,EAAW9+G,EAAEO,WAAW,GAC5B,IAIDu+G,EAAW/8H,KACZrC,EAAKqsB,GAAchqB,KAAO+8H,EAAW/8H,KACrCrC,EAAKqsB,GAAcpc,MAAQjQ,EAAKqsB,GAAchqB,SAC1C,CACJ,IAAIilJ,EAAU,CAAC,EACfA,EAAQj7H,GAAgB+yG,EACxBp/H,EAAKqsB,GAAchqB,KAAOkrB,EAAM9W,OAAO6wI,GACvCtnJ,EAAKqsB,GAAcpc,MAAQjQ,EAAKqsB,GAAchqB,IACjD,CAEA,IAAImxD,EAAO3uD,EAAEy5G,eAAe8oC,EAAMvpJ,IAClC,IAAK21D,EAAM,OAEX,MAAMgL,EAAuB,mBAAXhL,EAAKgL,GAAmBhL,EAAKgL,KAAOhL,EAAKgL,GACrD8wE,EAAU9wE,GAAI8wE,SAAW9wE,GAAI2mB,OAAO,IAAImqD,QAE1CA,GAAS/hH,EAAMuF,SAAS1H,GAAGkkH,GAAUtvI,EAAK,GAC/C,GACH,GAeR,MAAO,CACJw+D,GAAIA,EACJt/D,KAbSiI,IACT,IAAK,IAAI26B,KAAKiO,EAAOC,UAClBD,EAAOC,UAAUlO,GAAK36B,EAAQ26B,IAAMiO,EAAOC,UAAUlO,GAExD,GAAI08B,EACD,IAAK,IAAI18B,KAAK36B,EACXq3D,EAAG3+D,GAAGiiC,GAAK36B,EAAQ26B,EAEzB,EAOA2rG,gBAAiB19F,EAAO09F,gBACxBvU,QAASnpF,EAAOmpF,QAChB4tB,cAAe/2G,EAAO+2G,cAE5B,iEC7XH,IAAIp7H,EAAI,IAAIjkB,IAAWtI,GAAGgD,aAAaC,SAASqF,GAEjC,MAAMq5G,UAA+B,EAAAtsG,EAOjD,kBAAW,GACR,MAAO,CACJw+C,SAAU,OAEhB,CAEA,wBAAOiuD,CAAkBnmF,EAAKC,GAC3B,IAAI2G,EAAM,CACP6lH,SAAU,GAAGxsH,cAGZyjC,EAAK,CACN3gE,GAAI6jC,EAAI6lH,SACR/8I,KAAM,WACNmX,KAAM,aACNvf,MAAOspB,EAAE,aACTknC,WAAYh0D,KAAKO,GAAGsV,WAAWnE,SAASiC,iBACxC1S,GAAI,CACDowC,SAAU,CAAC0tC,EAAQmN,KACZnN,GAAUjyD,EAAE,sBACbN,GAAGsW,EAAI6lH,UAAUz0H,SAAS,IAG7Bid,EAAOC,UAAUm8F,QAAQ,IAW9Bp8F,EAAS,CACVC,UAAW,CACRm8F,OAAQ,WACLlsI,QAAQqF,KAAK,eAChB,EACAutD,YAAa,KACH,GAIb8nD,YAAa,CAACh5F,EAAMpB,EAAW,CAAC,KAC7B,GAAY,MAARoB,EAAc,OAClBpB,EAASsyC,aAAc,EAGvB,IAAI4zF,EAAY,CACb,CACG5oJ,GAAI,OAEJoS,MAAOyb,EAAE,wBAId/J,EAAK8tC,WAAWzwC,OAAM,KAAM,IAAM,IAAS,IAAIpa,SAASyU,IACjDA,GAELA,EAAEkI,OAAM,KAAM,IAAM,GAAM3c,SAASC,IAE7BA,GACS,QAATA,EAAExD,KACFwD,EAAEshB,gBACFthB,EAAEshB,eAAeD,YACjBrhB,EAAEshB,eAAeD,WAAWroB,IACzB8jB,EAAK4L,QAAQhN,SAASC,YAEzBimI,EAAUzgJ,KAAK,CACZnI,GAAIgH,EAAE4d,aACNxS,MAAO,GAAGoJ,EAAEjX,WAAWyC,EAAEzC,SAE/B,GACD,IAGL,IAAIs6H,EAAYtxG,GAAGsW,EAAI6lH,UACnB7qB,IACDA,EAAU1jD,OAAO,UAAWytE,GAC5B/pB,EAAU1jD,OACP,QACAz4D,EAASyyC,UAAYp0D,KAAK+vC,QAAQqkB,UAErC0pE,EAAUlnH,UACb,EAGHi7E,YAAc9uE,IACX,IAAIpB,EAAWoB,EAAKpB,UAAY,CAAC,EAE7Bm8G,EAAYtxG,GAAGsW,EAAI6lH,UAEnB7yD,GADegoC,EAAUzvC,WACI38E,OAAO5D,KAAK1M,MAAQ,IAAIuB,QACrD2xC,GAAQA,EAAIr1C,IAAM6+H,EAAUpiF,aAC9B,GAKF,OAJIo6C,IACDn0E,EAASyyC,SAAW0hC,EAAa72F,IAG7B0iB,CAAQ,GAIrB,MAAO,CACJi+C,GAAIA,EACJt/D,KA9EUiI,IACV,IAAK,IAAI26B,KAAKiO,EAAOC,UAClBD,EAAOC,UAAUlO,GAAK36B,EAAQ26B,IAAMiO,EAAOC,UAAUlO,EACxD,EA4EA64E,YAAa5qE,EAAO4qE,YACpBlqB,YAAa1gD,EAAO0gD,YAE1B,CAEA,YAAAz8B,CAAazzC,EAAW,CAAC,GACtB3hB,KAAK2hB,SAAW3hB,KAAK2hB,UAAY,CAAC,EAClC3hB,KAAK2hB,SAASyyC,SACXzyC,EAASyyC,UAAYp0D,KAAKF,YAAYiwC,QAAQqkB,QACpD,CAEA,SAAA5e,CAAUtZ,EAAKC,GAQZn8B,KAAK+nJ,OANL,SAAgB5rH,EAAQD,GACrB,MAAO,CACJkqD,MAAOlqD,EAAIE,KAAKuC,OAAO,GAAGxC,qBAC1BxN,MAAOwN,EAAOzY,MAAM,KAAK,GAE/B,EAIA,IAAIkxC,EAAO70D,MAAMy1C,UAAUtZ,EAAKC,GAmBhC,OAjBAy4B,EAAK0lE,QAAU,KACZ,IACIt6H,KAAKioJ,eACLjoJ,KAAK2hB,SAASyyC,UACfp0D,KAAK2hB,SAASyyC,UAAYp0D,KAAKF,YAAYiwC,QAAQqkB,SAEnD,OAAO5yD,QAAQ9B,UAElB,IAAIiV,EAAO3U,KAAKioJ,aAAazkI,WAAWxjB,KAAK2hB,SAASyyC,UACtD,IAAKz/C,EAAM,OAAOnT,QAAQ9B,UAE1B,IAAIqvD,EAAOp6C,EAAK+7C,aAChB,OAAK3B,EAEE6F,EAAKszF,cAAcn5F,GAFRvtD,QAAQ9B,SAEK,EAG3Bk1D,CACV,2EChJH,MAAMx3C,EAAY,EAAQ,OAM1B,IAAI0P,EAAI,IAAIjkB,IAAWtI,GAAGgD,aAAaC,SAASqF,GAEhD,MAAM+/I,UAA2BxrI,EAC9B,WAAAtd,GACGC,MAAM,CAAC,SAAUQ,GACpB,CAEA,YAAA60D,CAAazzC,GACV5hB,MAAM8f,WAAW8B,GACjB3hB,KAAKg2B,QAAUrU,EAASqU,OAC3B,CAEA,UAAA4xH,GACG,IAAIl8I,EAAM3L,MAAM6H,QAEhB,OADA8D,EAAIsqB,QAAUh2B,KAAKg2B,QACZtqB,CACV,EAG6C,EAAAkK,EAOjC,MAAM6hG,UAAiC,EAAA7hG,EACnD,WAAA9V,CAAYS,EAAI47B,GACbp8B,MAAMo8B,EAAQ,CACX0sH,gBAAiB,GACjBC,YAAa,GACbC,0BAA2B,GAC3BC,iBAAkB,GAClBC,kBAAmB,GACnBC,kBAAmB,KAGtBlpJ,KAAKO,GAAKA,EACVP,KAAKm8B,OAASA,EACdn8B,KAAK8kB,OAAS,KAGd9kB,KAAKmpJ,qBAAuB,KAI5BnpJ,KAAKkzI,UAAYlzI,KAAKO,GAAGyzB,iBAAiB,GAAGh0B,KAAK8iC,IAAI0S,oBAKtDx1C,KAAKopJ,cAAgBppJ,KAAKO,GAAGyzB,iBAC1B,GAAGh0B,KAAK8iC,IAAI0S,yBAMfx1C,KAAKqpJ,0BAA6Bh4I,IAC/B,IAAImjG,EAAcnjG,EAAMuI,OAAS,GAQjC5Z,KAAKspJ,iBAAiBr/H,GACZjqB,KAAKkzI,UAAUp7H,QAAQmS,IAC9BuqF,EAAY,EAGlBx0G,KAAKupJ,8BAAgC,KAClCvpJ,KAAKspJ,iBAAiB,EAGzBtpJ,KAAK8nB,aAAc,CAGtB,CAQA,kBAAW,GACR,MAAO,CACJomD,aAAc,EAQdC,mBAAoB,UAOpBC,gBAAiB,EAmBvB,CAOA,YAAAhZ,CAAazzC,IACVA,EAAWA,GAAY,CAAC,GAEfusD,kBAC0B,IAAzBvsD,EAASusD,aACXvsD,EAASusD,aACTupC,EAAyB1nE,QAAQm+B,aAEzCvsD,EAASysD,qBAC6B,IAA5BzsD,EAASysD,gBACXzsD,EAASysD,gBACTqpC,EAAyB1nE,QAAQq+B,gBAEzCpuE,KAAK2hB,SAAWA,CACnB,CASA,UAAA4yC,CAAWzvC,GACR9kB,KAAK8kB,OAASA,EAEV9kB,KAAKkzI,WAENlzI,KAAKkzI,UAAUj/G,WAAWnP,EAAOwF,UAGhCtqB,KAAKopJ,eAENppJ,KAAKopJ,cAAcn1H,WAAWnP,EAAOwF,SAE3C,CAEA,QAAA8qF,CAASryF,GACN/iB,KAAK+iB,KAAOA,CACf,CAGA,EAAA68C,GACG,IAAIuvB,EAAOnvF,KACP8iC,EAAM9iC,KAAK8iC,IAEf,MAAO,CACJ7jC,GAAI6jC,EAAIgmH,YACR//I,KAAM,QACNy9E,YAAY,EACZhZ,QAAS,EACTiZ,QAAQ,EACRF,KAAM,CACH,CACGtnF,GAAI6jC,EAAIimH,0BACRtiE,QAAQ,EACRwF,KAAM,CACH,CACGhtF,GAAI6jC,EAAIkmH,iBACRjmI,KAAM,OACN20C,YAAa5qC,EAAE,2CACf7rB,GAAI,CACD8rF,gBAAiB,KACd/sF,KAAKspJ,iBAAiB,IAI/B,CACGvmI,KAAM,SACNgK,IAAK,gBACLw0B,MAAO,GACPx4C,KAAM,OACNgV,KAAM,cACNiP,MAAO,WACJ,IAAI0iE,EAAQljE,GAAGsW,EAAIkmH,kBACnBt5D,EAAMx7D,SAAS,IACfw7D,EAAMn5E,QACNm5E,EAAMkyD,UAAU,kBACnB,KAIT,CACG3iJ,GAAI6jC,EAAI+lH,gBACR9lI,KAAM,SACNgK,IAAK,gBACL1b,MAAOyb,EAAE,cACTE,MAAO,KACJhtB,KAAKopJ,cAAcx+D,MAAMp+D,GAAGsW,EAAI+lH,iBAAiBxyC,UAAW,CACzD5pF,IAAK,UACN,GAGR,CACG1J,KAAM,UACN9jB,GAAI6jC,EAAImmH,kBACRl8H,IAAK,kBACL05D,QAAQ,EACRwF,KAAM,CACH,CACGlpE,KAAM,SACNgK,IAAK,gBACL9tB,GAAI6jC,EAAIomH,kBACR1lJ,MAAOspB,EAAE,gBACT/O,KAAM,YACNhV,KAAM,OAENikF,WAAW,EACXhgE,MAAO,WACJmiE,EAAKq6D,aACR,MAMlB,CAEA,UAAMlpJ,CAAKC,GACJA,IACDP,KAAKO,GAAKA,GAGb,IAAIuiC,EAAM9iC,KAAK8iC,IA+Bf,OArBA9iC,KAAKkzI,UAAU5yI,OACfN,KAAKkzI,UAAU98G,eAAe,UAAWp2B,KAAKqpJ,2BAC9CrpJ,KAAKkzI,UAAUjyI,GAAG,UAAWjB,KAAKqpJ,2BAElCrpJ,KAAKopJ,cAAc9oJ,OACnBN,KAAKopJ,cAAchzH,eAChB,UACAp2B,KAAKupJ,+BAERvpJ,KAAKopJ,cAAcnoJ,GAAG,UAAWjB,KAAKupJ,+BACtCvpJ,KAAKopJ,cAAchzH,eAChB,OACAp2B,KAAKupJ,+BAERvpJ,KAAKopJ,cAAcnoJ,GAAG,OAAQjB,KAAKupJ,+BAEnC/8H,GAAGsW,EAAIgmH,cAAc5rE,OACrB1wD,GAAGsW,EAAI+lH,kBAAkB3rE,OACzB1wD,GAAGsW,EAAImmH,oBAAoB/rE,OAC3B1wD,GAAGsW,EAAIimH,4BAA4B7rE,OAE3Bl9E,KAAK2hB,SAASusD,cACnB,KAAK,EACF,MACH,KAAK,EACF,OAAQluE,KAAK2hB,SAASwsD,oBACnB,IAAK,OACF3hD,GAAGsW,EAAI+lH,kBAAkBh+D,OACzBr+D,GAAGsW,EAAIgmH,cAAcj+D,OACrB,MACH,IAAK,UACFr+D,GAAGsW,EAAIgmH,cAAc5rE,OAG3B,MACH,KAAK,EACF1wD,GAAGsW,EAAIgmH,cAAcj+D,OACrB,IAAI4+D,EAAqBj9H,GAAGsW,EAAImmH,mBAC5BQ,IACDA,EAAmB5+D,OAGf7qF,KAAK2hB,UAAU+nI,aACf1pJ,KAAK2hB,SAAS+nI,YAAc,IAAI1jJ,SAAS2jJ,IACvC,IAAIC,EAAO,IAAIhB,EACfgB,EAAKx0F,aAAau0F,GAClB,IAAIE,EAAmB,CACpB9mI,KAAM,SACNgK,IAAK,gBACLvpB,MAAOomJ,EAAKpmJ,MACZua,KAAM,eACNhV,KAAM,OAENikF,WAAW,EACXhgE,MAAO,KACJhtB,KAAKuB,KAAK,cAAe,KAAMqoJ,EAAK5zH,QAAQ,GAIlDyzH,EAAmB58H,QAAQg9H,EAAiB,KAIrD,MACH,KAAK,EACFr9H,GAAGsW,EAAIimH,4BAA4Bl+D,OACnCr+D,GAAGsW,EAAIgmH,cAAcj+D,OAG9B,CAEA,WAAA2pB,GACG,IAAIs1C,EAAiB,KAErB,OAAQ9pJ,KAAK2hB,SAASwsD,oBACnB,IAAK,OACF27E,EAAiB9pJ,KAAKopJ,cAAc1tG,WACpC,MACH,IAAK,UACFouG,EAAiB9pJ,KAAKkzI,UAAUx3F,WAItC,OAAOouG,CACV,CAOA,SAAAj0C,GAkBG,OAhB4B,MAAxB71G,KAAK+pJ,kBAG2B,GAA9B/pJ,KAAK2hB,SAASusD,cACwB,UAAtCluE,KAAK2hB,SAAS0tG,qBAEdrvH,KAAK+pJ,gBAAkB,KACb,EAIV/pJ,KAAK+pJ,gBAAkB,KACb,GAIT/pJ,KAAK+pJ,eACf,CAOA,eAAAT,GACG,IAAIU,EAAchqJ,KAAKyf,WAAWzf,KAAKmpJ,sBACnCW,EAAiB9pJ,KAAKw0G,cAEtBy1C,EAAa,EACbH,GAAgBlwI,OAAOhY,QACxBqoJ,EAAaH,GAAgBlwI,OAAOhY,OAChCooJ,IACDC,IACAH,EAAiB,CACdzkI,KAAM,MACNzL,MAAO,CAACkwI,EAAgBE,MAI9BF,EAAiBE,EAGpBhqJ,KAAKuB,KAAK,cAAe,KAAMuoJ,GAEb,GAAdG,IAAiBA,GAAa,GAClC,MAAMC,EAAU19H,GAAGxsB,KAAK8iC,IAAI+lH,iBACxBqB,IACDA,EAAQx4I,OAAO0tF,MAAQ6qD,EACvBC,EAAQtzI,UAEd,CAEA,WAAA4yI,GACGxpJ,KAAKspJ,iBAAgB,KAAM,GAAM,GACpC,CAUA,kBAAA5tC,CAAmBzyG,EAAS,MACzBjJ,KAAKmpJ,qBAAuBlgJ,EAC5BjJ,KAAKspJ,iBACR,CAUA,UAAA7pI,CAAW0qI,GACR,IAAIlhJ,EAMJ,KAJGA,EADCkhJ,IAGS39H,GAAGxsB,KAAK8iC,IAAIkmH,mBAAmBttG,YAAc,IAAIxS,QAEjD,OAAO,KAGpB,IAAIkhH,EAAQnhJ,EAAOigC,OAAOz7B,cAAciW,MAAM,KAG9C,IAAI2mI,EAAW,GAEXzsH,EAAY59B,KAAK8kB,QAAQwF,UAAY,GA6CzC,OA3CA8/H,EAAMpkJ,SAAS65B,IACZ,IAAIyqH,EAAa,GAIjB1sH,EAAU53B,SAAS0b,IAChB,GAAIA,EAAEgyB,oBACH,OAAQhyB,EAAEjf,KACP,IAAK,SACL,IAAK,SACL,IAAK,WACL,IAAK,QACF6nJ,EAAWljJ,KAAK,CACb3E,IAAKif,EAAEziB,GACP+sB,KAAM,WACN3a,MAAOwuB,IAEV,MAEH,IAAK,OACYne,EAAEnZ,UACRvC,SAAS5G,IACVA,EAAEqE,KAAK+D,QAAQq4B,IAAM,GACtByqH,EAAWljJ,KAAK,CACb3E,IAAKif,EAAEziB,GACP+sB,KAAM,SACN3a,MAAOjS,EAAEH,IAEf,IAIZ,IAGCqrJ,EAAW1oJ,OAAS,GACrByoJ,EAASjjJ,KAAK,CACXie,KAAM,KACNzL,MAAO0wI,GAEb,IAGCD,EAASzoJ,OAAS,EACD,CACfyjB,KAAM,MACNzL,MAAOywI,GAIH,IAEb,CAEA,SAAA1zC,CAAU9sB,GAEP7pF,KAAKkzI,UAAUtoD,MAAMf,EAAO,KAAM,CAAEp9D,IAAK,UAC5C,2EC5gBH,MAAM89H,UAAwC,EAAA30I,EAC3C,WAAA9V,CAAY+0G,EAAgB14E,GAEzBp8B,MADWo8B,GAAU,6BACT,CAAC,GAEbn8B,KAAK60G,eAAiBA,EACtB70G,KAAKO,GAAKs0G,EAAet0G,GAEzBP,KAAK+iB,KAAO,KAIZ/iB,KAAKunB,eAAiB,IAKzB,CAEA,EAAAq4C,GACG,MAAO,CAAC,CACX,CAEA,IAAAt/D,CAAKiI,GACEA,EAAQwa,OAAM/iB,KAAK+iB,KAAOxa,EAAQwa,MAElCxa,EAAQgf,iBAAgBvnB,KAAKunB,eAAiBhf,EAAQgf,eAC7D,CAEA,UAAAqsF,CAAWhjC,EAAQnmD,GACZzqB,KAAKunB,gBACNvnB,KAAKunB,eAAeu3D,KAAK,gBAAgB,KACtC9+E,KAAK+iB,MAAM6wF,WAAWhjC,EAAO,IAEhC5wE,KAAKunB,eAAeW,UAAUuC,IAE9BzqB,KAAK+iB,MAAM6wF,WAAWhjC,EAE5B,EAGY,MAAM+mC,UAA+B,EAAA/hG,EAYjD,SAAA4/B,CAAU0iF,GAAQ,GACf,IAAI1iF,EAAY,IAAI+0G,EAAgCvqJ,MAGpD,GAAIk4H,EAAO,CACR,IAAIC,EAAe3iF,EACnBA,EAAY,CACToqB,GAAIu4D,EAAav4D,KACjBt/D,KAAM,IAAIuI,IACAsvH,EAAa73H,QAAQuI,GAE/Bm4F,OAAQ,IAAIn4F,IACFsvH,EAAan3B,YAAYn4F,GAEnC+qG,WAAY,IAAI/qG,IACNsvH,EAAavkB,cAAc/qG,GAG3C,CAEA,OAAO2sC,CACV,cCtEH71C,EAAOC,QAAU,MAOd,WAAAE,CAAY0D,GACTxD,KAAKwD,MAAQA,EACbxD,KAAK4/D,GAAK,IACb,CAUA,UAAA4qF,CAAW5wI,EAAO0Q,EAAQ44B,QACI,IAAhBA,IAA6BA,GAAe,GAIvD,SAASunG,EAAiBz+H,GAEvB,GAAIA,EACD,GAAIA,EAAK3G,MAAQ2G,EAAKpS,MACnBoS,EAAKpS,MAAM5T,SAAStE,IACjB+oJ,EAAiB/oJ,EAAE,QAElB,CAGJ,IAAIitB,EAAQrE,EAAO3nB,QAAQ+e,GACjBA,EAAEziB,IAAM+sB,EAAKvpB,MACpB,GACH,GAAIksB,EACD,OAAQA,EAAM5lB,MACX,IAAK,SACL,IAAK,UAIuB,iBAAdijB,EAAK3a,SACmB,GAA5B2a,EAAK3a,MAAM7J,QAAQ,KACpBwkB,EAAK3a,MAAQ4O,SAAS+L,EAAK3a,OAE3B2a,EAAK3a,MAAQotC,WAAWzyB,EAAK3a,QAGnC,MACH,IAAK,OAGE6xC,EAGGl3B,EAAK3a,iBAAiB0G,OACvBiU,EAAK3a,MAAQjO,MAAMqlF,KAAKpB,cAAcr7D,EAAK3a,QAKrB,iBAAd2a,EAAK3a,QACb2a,EAAK3a,MAAQ,IAAI0G,KAAKiU,EAAK3a,QAO7C,CAEN,CACAo5I,CAAiB7wI,EACpB,CAIA,SAAA47B,CAAUtZ,EAAKC,GACZn8B,KAAKk8B,IAAMA,EACXl8B,KAAKm8B,OAASA,EAEd,IAAIrP,EAAIoP,EAAIrhB,MAERmoG,EAAmB5/G,MAAM40E,MACzB0yE,EAAYjoJ,GAEN,GAAG05B,KAAU15B,KAAOugH,IAI1BlgF,EAAO9iC,KAAK8iC,IAAM,CACnB0S,UAAWk1G,EAAS,2BACpBC,aAAcD,EAAS,YACvBE,sBAAuBF,EAAS,qBAChCG,mBAAoBH,EAAS,kBAC7BI,aAAcJ,EAAS,iBAI1B1qJ,KAAK4/D,GAAK,CACP78C,KAAM,SACN9jB,GAAI6jC,EAAI+nH,mBACRpkE,QAAQ,EACR19E,KAAM,OACNw9E,KAAM,CACH,CACGtnF,GAAI6jC,EAAIgoH,aACR7+D,KAAM,CACH,CAAE2mB,WAAW,GACb,CACG7vF,KAAM,SACNgK,IAAK,gBACLnhB,KAAM,QACNyF,MAAOyb,EAAE,yBACTkgE,WAAW,EACXhgE,MAAO,WACJR,GAAGsW,EAAI8nH,uBAAuB//D,OAC9Br+D,GAAGsW,EAAIgoH,cAAc5tE,MAExB,GAEH,CAAE01B,WAAW,KAGnB,CACGnsB,QAAQ,EACRxnF,GAAI6jC,EAAI8nH,sBACR3+D,KAAM,CACH,CACGlpE,KAAM,eACN9jB,GAAI6jC,EAAI6nH,aACRrgI,OAAQtqB,KAAK+qJ,uBAQxB/qJ,KAAKwD,OACNxD,KAAK4/D,GAAG2mB,KAAK,GAAG0F,KAAK16D,QAAQ,CAC1BxO,KAAM,QACNgK,IAAK,eACLvpB,MAAOxD,KAAKwD,MACZ+9C,MAAOvhD,KAAKO,GAAGsV,WAAWnE,SAASgC,kBAKzC1T,KAAKM,KAAQiI,IAIV,IAAK,IAAI26B,KAHT36B,EAAUA,GAAW,CAAC,EAGR4oC,EAAOC,UAClBD,EAAOC,UAAUlO,GAAK36B,EAAQ26B,IAAMiO,EAAOC,UAAUlO,EACxD,EAIH,IAAIiO,EAAUnxC,KAAKmxC,OAAS,CACzBC,UAAW,CACRi8F,SAAU,WACPhsI,QAAQqF,KAAK,iBAChB,EACA6mI,OAAQ,SAAU5+G,GACfttB,QAAQqF,KAAK,eAChB,GAWH8jJ,WAAY,CAAC5wI,EAAO0Q,EAAQ44B,KACzBljD,KAAKwqJ,WAAW5wI,EAAO0Q,EAAQ44B,EAAa,EAG/CxH,SAAU,KACP,IAAIn2C,EAAS,KACTylJ,EAAKx+H,GAAGsW,EAAI6nH,cAahB,OAZIK,IACDzlJ,EAASylJ,EAAGtvG,YAOXn2C,GACD4rC,EAAOq5G,WAAWjlJ,EAAO,GAAIA,EAAO,IAAI,GAGpCA,CAAM,EAGhB2uB,SAAW3uB,IACRA,EAASA,GAAU,GACdG,MAAMC,QAAQJ,KAASA,EAAS,CAACA,IACjB,GAAjBA,EAAO3D,QACR2D,EAAO6B,KAAK,CAAC,GAEZ7B,EAAO3D,OAAS,GACjB2D,EAAO6B,KAAKpH,KAAK+qJ,mBAKpB55G,EAAOq5G,WAAWjlJ,EAAO,GAAIA,EAAO,IAAI,GAExC,IAAIylJ,EAAKx+H,GAAGsW,EAAI6nH,cACZK,GACGzlJ,EAAO,IAAMA,EAAO,GAAGqU,OAASrU,EAAO,GAAGqU,MAAMhY,SACjDopJ,EAAG92H,SAAS3uB,EAAO,IACnBinB,GAAGsW,EAAI8nH,uBAAuB//D,OAC9Br+D,GAAGsW,EAAIgoH,cAAc5tE,OAE3B,GAINl9E,KAAK07C,SAAWvK,EAAOuK,SACvB17C,KAAK6qF,KAAO15C,EAAO05C,KACnB7qF,KAAKk0B,SAAWid,EAAOjd,QAC1B,CAEA,UAAAqgC,CAAWzvC,GACR9kB,KAAKm8H,cAAgBr3G,CACxB,CAWA,eAAAimI,GACG,IAAIE,EAAa,CACd,SACA,WACA,SACA,OACA,QACA,UACA,aAGChgH,EAAa,GA2BjB,OAzBIjrC,KAAKm8H,eACNn8H,KAAKm8H,cAAc7xG,SAAStkB,SAAS0b,IAClC,IAAkC,GAA9BupI,EAAWzjJ,QAAQka,EAAEjf,KAAY,CAUlC,IAAIsG,EAAO2Y,EAAEjf,IACA,WAATif,EAAEjf,KAA6B,aAATif,EAAEjf,IAAoBsG,EAAO,SACrC,YAAT2Y,EAAEjf,MAAmBsG,EAAO,UAErCkiC,EAAW7jC,KAAK,CACbnI,GAAIyiB,EAAEO,WACN5Q,MAAOqQ,EAAEle,MACTuF,KAAMA,GAEZ,KAICkiC,CACV,CAMA,OAAAvoB,CAAQna,GACL,OAAO,IAAI/G,SAAQ,CAAC9B,EAASoK,KAC1B,IAAI2xF,EAAU,EACVyvD,EAAS,OACVzvD,GACez7F,KAAKmrJ,UAAUvpJ,QAC3BlC,GACH,EAGHM,KAAKmrJ,UAAUnlJ,SAASgmB,IACrBA,EACItJ,QAAQna,GACRlB,MAAK,WACH6jJ,GACH,IACC5jJ,OAAOnG,IACL2I,EAAO3I,EAAI,GACZ,IAGqB,GAAzBnB,KAAKmrJ,UAAUvpJ,QAChBlC,GACH,GAEN,CAEA,yBAAA0rJ,GACG5+H,GAAGxsB,KAAK8iC,IAAI+nH,oBAAoBhgE,OAChCr+D,GAAGxsB,KAAK8iC,IAAI8nH,uBAAuB//D,OACnCr+D,GAAGxsB,KAAK8iC,IAAIgoH,cAAc5tE,MAC7B,mBCrTH,MAAMmuE,EAAqB,EAAQ,OAEnC,IAAIv+H,EAAI,IAAIjkB,IAAWtI,GAAGgD,aAAaC,SAASqF,GAEhDlJ,EAAOC,QAAU,MAOd,WAAAE,CAAYwrJ,GACTtrJ,KAAKsrJ,YAAcA,GAAe,GAElCtrJ,KAAKurJ,eAAiB,GACtBvrJ,KAAKsrJ,YAAYtlJ,SAAS4a,IACvB5gB,KAAKurJ,eAAenkJ,KAAK,CAAEnI,GAAI2hB,EAAEne,IAAK4O,MAAOuP,EAAEpd,OAAQ,IAG1DxD,KAAKwrJ,eAAiB,KAClBxrJ,KAAKurJ,eAAe3pJ,OAAS,IAC9B5B,KAAKwrJ,eAAiBxrJ,KAAKurJ,eAAe,GAAGtsJ,IAGhDe,KAAKsoE,WAAY,EAEjBtoE,KAAKm8H,cAAgB,KAGrBn8H,KAAKyrJ,SAAW,KAEhBzrJ,KAAK0rJ,YAAc,IACtB,CAEA,SAAAl2G,CAAUtZ,EAAKC,GACZn8B,KAAKk8B,IAAMA,EACXl8B,KAAKm8B,OAASA,EAId,IAAI6mF,EAAmB5/G,MAAM40E,MACzB0yE,EAAYjoJ,GAEN,GAAG05B,KAAU15B,KAAOugH,IAI1BlgF,EAAO9iC,KAAK8iC,IAAM,CAEnB0S,UAAWk1G,EAAS,aAEpBiB,aAAcjB,EAAS,gBAEvBC,aAAcD,EAAS,gBAEvBkB,aAAclB,EAAS,cAG1B1qJ,KAAKyrJ,SAASjoJ,MAAQspB,EAAE,QACxB9sB,KAAKyrJ,SAASj2G,UAAUx1C,KAAKk8B,IAAKl8B,KAAKm8B,QACvCn8B,KAAK4/D,GAAK5/D,KAAK6rJ,cAGf7rJ,KAAKM,KAAQiI,IAEV,IAAK,IAAI26B,KAAKiO,EAAOC,UAClBD,EAAOC,UAAUlO,GAAK36B,EAAQ26B,IAAMiO,EAAOC,UAAUlO,GAGxDljC,KAAKyrJ,SAASnrJ,OAGd,IAAIwrJ,EAAS9rJ,KAAK+rJ,gBAClB,GAAID,EAAQ,CACTA,EAAOt2G,UAAUx1C,KAAKk8B,IAAKl8B,KAAKm8B,QAChC,IAAIy4B,EAAOk3F,EAAOF,aAAa9oH,EAAI8oH,cAEnCz6G,EAAO66G,oBAAoBp3F,GAG3BA,EAAKt0D,MACR,GAIH,IAAI6wC,EAAUnxC,KAAKmxC,OAAS,CACzBC,UAAW,CACRg8F,SAAU,WACP/rI,QAAQqF,KAAK,iBAChB,EACA6mI,OAAQ,SAAU5+G,GACfttB,QAAQqF,KAAK,eAChB,GAGHslJ,oBAAsBx2G,IAEnB,IAAIy2G,EAAgBz/H,GAAGxsB,KAAK8iC,IAAI8oH,cAChC,GAAKK,EAAL,CAEA,IAAI7nD,EAAW6nD,EAAczhE,gBACzB0hE,EAAgB,GACpB9nD,EAASp+F,SAASk9B,IACfgpH,EAAc9kJ,KAAK87B,EAAE,IAExBgpH,EAAclmJ,SAASk9B,IACpB+oH,EAAc9+H,WAAW+V,EAAE,IAG9B+oH,EAAcp/H,QAAQ2oB,EAAUoqB,GAXN,CAWS,EAGtC+rF,aAAc,CAACriH,EAAU4iD,KAClB5iD,GACD9c,GAAGxsB,KAAK8iC,IAAI0S,WACRg1C,gBACAxkF,SAAS2c,IACPA,EAAMkoE,MAAM,IAIrB,IAAIshE,EAAansJ,KAAKosJ,UAAUlgE,GAC5BigE,GACDA,EAAWE,eAAersJ,KAAKyrJ,SAAS/vG,YAI3C17C,KAAKwrJ,eAAiBliH,EACtB,IAAIgjH,EAAatsJ,KAAK+rJ,gBACtB,GAAIO,EAAY,CAEbtsJ,KAAKyrJ,SAASv3H,SAASo4H,EAAWt7G,aAGlCs7G,EAAW92G,UAAUx1C,KAAKk8B,IAAKl8B,KAAKm8B,QACpC,IAAIqZ,EAAY82G,EAAWV,aAAa9oH,EAAI8oH,cAC5Cz6G,EAAO66G,oBAAoBx2G,GAC3BA,EAAUl1C,MAEb,GAGT,CAGA,WAAAurJ,GACG,MAAO,CACJ5sJ,GAAIe,KAAK8iC,IAAI0S,UACbzyB,KAAM,SACNgK,IAAK,0BACLygD,QAAS,GAKTzkE,KAAM,OACNw9E,KAAM,CACH,CACGxjE,KAAM,WACNgK,IAAK,iCACLwiD,SAAU,kDACVxf,OAAQ,GACRy2B,YAAY,EACZ+lE,iBAAoC,GAAlBvsJ,KAAKsoE,UACvBgyD,QAAS,CACN,sBAAuB,CAACj7H,EAAGJ,EAAIsxI,KAC5BvwI,KAAKmxC,OAAOC,UAAUg8F,SAASptI,KAAK,IAK7C,CACGf,GAAIe,KAAK8iC,IAAI6oH,aACb5oI,KAAM,aACNvf,MAAOspB,EAAE,UACT4qC,YAAa5qC,EAAE,oBACfknC,WAAYh0D,KAAKO,GAAGsV,WAAWnE,SAASgC,gBACxCnL,QAASvI,KAAKurJ,eACdtqJ,GAAI,CACDowC,SAAU,CAAC0tC,EAAQmN,KAChBlsF,KAAKmxC,OAAOw6G,aAAa5sE,EAAQmN,EAAO,IAMjD,CACGsgE,IAAK,SACL/lE,QAAQ,EACRgG,MAAO,CACJ,CACG1pE,KAAM,SACNkpE,KAAM,CACH,CACGlpE,KAAM,QACNvf,MAAOspB,EAAE,UACTC,IAAK,eACLw0B,MAAOvhD,KAAKO,GAAGsV,WAAWnE,SAASgC,iBAEtC,CACGzU,GAAIe,KAAK8iC,IAAI8oH,aACb7oI,KAAM,SACNwjE,KAAM,CACH,CACG/iF,MAAOspB,EACJ,4CAEHC,IAAK,eACLgjC,OAAQ,UAU7B/vD,KAAKyrJ,SAAS7rF,IAGvB,CAGA,eAAAmrF,GACG,IAAIzgI,EAAS,GAETkhI,EAAiBxrJ,KAAK+rJ,gBAK1B,OAJIP,IACDlhI,EAASkhI,EAAeT,mBAGpBzgI,CACV,CAEA,aAAAyhI,GACG,OAAO/rJ,KAAKosJ,UAAUpsJ,KAAKwrJ,eAC9B,CAEA,SAAAY,CAAU3pJ,GACP,OAAOzC,KAAKsrJ,YAAY3oJ,QAAQie,GACtBA,EAAEne,KAAOA,IAChB,EACN,CAEA,UAAA8xD,CAAWzvC,GACR9kB,KAAKm8H,cAAgBr3G,EACrB9kB,KAAKsrJ,YAAYtlJ,SAAS4a,IACvBA,EAAE2zC,WAAWzvC,EAAO,IAGvB,IAAIthB,EAAQspB,EAAE,QAEd9sB,KAAKyrJ,SAAW,IAAIJ,EAAmB7nJ,GACvCxD,KAAKyrJ,SAASl3F,WAAWzvC,GAGrB9kB,KAAK8iC,MACN9iC,KAAK4/D,GAAK5/D,KAAK6rJ,cAErB,CAEA,QAAA12F,CAASxgD,GACN3U,KAAK0rJ,YAAc/2I,EACnB3U,KAAKsrJ,YAAYtlJ,SAAS4a,IACvBA,EAAEu0C,SAASxgD,EAAK,GAEtB,CAEA,UAAA6gD,CAAWjtD,EAAU,CAAC,GAEnB,IADcvI,KAAK8X,QAAQvP,EAAQnH,MACrB,OAEd,IAAI2qJ,EAAgB/rJ,KAAK+rJ,gBACpBA,GAELA,EAAcU,oBAAoB,CAAC,EAAGlkJ,EAAQnH,KACjD,CAMA,OAAAshB,CAAQna,GACL,IAAIwjJ,EAAgB/rJ,KAAK+rJ,gBACzB,OAAKA,EAES/rJ,KAAK8X,QAAQvP,EAAQnH,MAEzB2qJ,EAAcrpI,QAAQna,GAGtB,IAAI/G,SAAQ,CAAC9B,EAASoK,KAC1BpK,GAAS,IARY8B,QAAQ9B,SAWtC,CAEA,YAAA01D,CAAazzC,GAGV,IAFAA,EAAWA,GAAY,CAAC,GAEX6pI,eAAgB,CAE1BxrJ,KAAKwrJ,eAAiB7pI,EAAS6pI,eAC/B,IAAIA,EAAiBxrJ,KAAK+rJ,gBAC1B,IAAKP,EAAgB,OACrBA,EAAea,eAAe1qI,EAAS+nI,YAAc,CAAC,GAGlD1pJ,KAAK8iC,KAGNtW,GAAGxsB,KAAK8iC,IAAI6oH,cAAcz3H,SAASl0B,KAAKwrJ,gBAK3CA,EAAep2F,aAAazzC,EAAS2/F,eACxC,CACH,CAEA,UAAAsmC,GACG,IAAIjmI,EAAW,CAAC,EAEhB,GAAI3hB,KAAKwrJ,eAAgB,CACtB7pI,EAAS6pI,eAAiBxrJ,KAAKwrJ,eAC/B7pI,EAAS+nI,WAAa1pJ,KAAKyrJ,SAAS/vG,WACpC,IAAIqwG,EAAgB/rJ,KAAK+rJ,gBACrBA,IACDpqI,EAAS2/F,eAAiByqC,EAAcnE,aAE9C,CAEA,OAAOjmI,CACV,CAOA,cAAA+qI,GACG,IAAIJ,EAAatsJ,KAAK+rJ,gBAClBO,GAActsJ,KAAKyrJ,WACpBzrJ,KAAKyrJ,SAASv3H,SAASo4H,EAAWt7G,aAClCs7G,EAAWI,iBAEjB,CAOA,aAAMC,GACH,IAAIZ,EAAgB/rJ,KAAK+rJ,gBACzB,OAAIA,EACMA,EAAcY,UAEjBnrJ,QAAQ9B,SAClB,CAEA,OAAAoY,CAAQ1W,EAAO,CAAC,GACb,MAAMkpB,EAAStqB,KAAKm8H,cAAc7xG,SAG/Bjd,EAFgBrN,KAAK+rJ,gBACO/6G,YACR,IAAM,CAAC,EAExB47G,EAAkB,CAACnpJ,EAAO,KAEV,iBAARA,EAAyBA,EAE7Bg7C,WAAWh7C,EAAKmC,QAAQ,YAAa,KAK/C0kB,EACI3nB,QACG+e,GACW,UAATA,EAAEjf,KAA4B,aAATif,EAAEjf,KAA+B,WAATif,EAAEjf,MAEpDuD,SAAS0b,IACP,IAEOhc,MAAMC,QAAQ0H,GAAOuM,QACtBvM,EAAMuM,MAAM5T,SAAStE,IAEdA,EAAEe,KAAOif,EAAEziB,IAAMyC,EAAEe,KAAOif,EAAEO,aAC7BvgB,EAAE2P,MAAQu7I,EAAgBlrJ,EAAE2P,OAAM,IAMxCjQ,EAAKsgB,EAAEO,aACuB,iBAAvB7gB,EAAKsgB,EAAEO,cAEd7gB,EAAKsgB,EAAEO,YAAc2qI,EAAgBxrJ,EAAKsgB,EAAEO,aAElD,CAAE,MAAO5iB,GAET,KAGN,MAAMwtJ,GAAgB7sJ,KAAKO,IAAMA,IAAIyzB,iBAClC,GAAGh0B,KAAKm8B,yBAMX,OAJA0wH,EAAa54H,WAAW3J,EAAQtqB,KAAKm8H,eACrC0wB,EAAa34H,SAAS7mB,GACtBw/I,EAAavsJ,OAENusJ,EAAa/0I,QAAQ1W,EAkC/B,CAEA,gBAAI0rJ,GAED,OADoB9sJ,KAAK+rJ,gBACJe,eAAgB,CACxC,cClcHntJ,EAAOC,QAAU,MAQd,WAAAE,CAAYo8B,EAAKC,EAAQuvH,GACtB1rJ,KAAKyC,IAAM,mBAEXzC,KAAK+sJ,YAAc,KAEnB/sJ,KAAK0rJ,YAAc,KAEnB1rJ,KAAK0pJ,WAAa,CAAC,EAEnB1pJ,KAAKuhH,WAAa,CAAC,EAGnBvhH,KAAK0rJ,YAAcA,CACtB,CAEA,SAAAl2G,CAAUtZ,EAAKC,GACZn8B,KAAKk8B,IAAMA,EACXl8B,KAAKm8B,OAASA,EAEdn8B,KAAKwD,MA7BH,KAAIqF,IAAWtI,GAAGgD,aAAaC,SAASqF,GA6B7BikB,CAAE,4BAOJ9sB,KAAK8iC,IAAM,CAEnB0S,UAAW,GAAY,YANhBtZ,EAAIyC,OAAO,GAAGxC,kBAMkB/4B,MAAM40E,SAGhDh4E,KAAK80G,IAAM,KAGX90G,KAAKM,KAAQiI,IAEV,IAAK,IAAI26B,KAAKiO,EAAOC,UAClBD,EAAOC,UAAUlO,GAAK36B,EAAQ26B,IAAMiO,EAAOC,UAAUlO,EACxD,EAIH,IAAIiO,EAAUnxC,KAAKmxC,OAAS,CACzBC,UAAW,CACRg8F,SAAU,WACP/rI,QAAQqF,KAAK,iBAChB,EACA6mI,OAAQ,SAAU5+G,GACfttB,QAAQqF,KAAK,eAChB,GAGT,CASA,SAAAsqC,GACG,MAAO,CAAChxC,KAAKgtJ,iBAAkBhtJ,KAAK+qJ,kBACvC,CAWA,cAAAsB,CAAezyI,GAGRlU,MAAMC,QAAQiU,KACfA,EAAQA,EAAM,IAIbA,IAEiB,MAAdA,EAAMyL,OAAczL,EAAMyL,KAAO,OAErCrlB,KAAK0pJ,WAAa9vI,EAExB,CAWA,eAAAmxI,GACG,IAAIE,EAAa,CAAC,SAAU,SAAU,OAAQ,UAAW,aAErDhgH,EAAa,GAsBjB,OApBIjrC,KAAK+sJ,aACN/sJ,KAAK+sJ,YAAYziI,SAAStkB,SAAS0b,KACE,GAA9BupI,EAAWzjJ,QAAQka,EAAEjf,MAStBwoC,EAAW7jC,KAAK,CACbnI,GAAIyiB,EAAEO,WACN5Q,MAAOqQ,EAAEle,MACTuF,KAAM2Y,EAAEjf,KAEd,IAICwoC,CACV,CAKA,cAAA+hH,GACG,OAAOhtJ,KAAK0pJ,UACf,CAIA,UAAAn1F,CAAWzvC,GAER9kB,KAAKitJ,gBAAgBnoI,EACxB,CAIA,eAAAmoI,CAAgBnoI,GACb9kB,KAAK+sJ,YAAcjoI,CACtB,CAEA,QAAAqwC,CAASxgD,GACN3U,KAAK0rJ,YAAc/2I,CACtB,CAMA,OAAA+N,CAAQna,GAIL,OAHAlH,QAAQC,MACL,2EAEI,IAAIE,SAAQ,CAAC9B,EAASoK,KAC1BA,EACG,IAAIxK,MACD,uEAEL,GAEP,CAKA,YAAAssJ,CAAasB,GACV,OAAOltJ,KAAKmtJ,sBAAsBD,EACrC,CAKA,qBAAAC,CAAsBhxH,GACnB,OAAQn8B,KAAK80G,IAAM,CAChBl1C,GAAI,CACD2P,SAAU,0CAEbjvE,KAAOc,IACJC,QAAQC,MACL,sEAEHD,QAAQqF,KAAK,0BAAwBtF,EAAK,EAGnD,CAKA,YAAAg0D,CAAazzC,GAIVA,EAAWA,GAAY,CAAC,EACxB3hB,KAAKuhH,WAAa5/F,EAAS4/F,YAAc5/F,CAC5C,CAKA,UAAAimI,GAIG,MAHe,CAAC,CAInB,CAOA,OAAA+E,GACG,OAAOnrJ,QAAQ9B,SAClB,CAOA,cAAAgtJ,GAGA,cCpOH,IAAI5/H,EAAI,IAAIjkB,IAAWtI,GAAGgD,aAAaC,SAASqF,GAEhDlJ,EAAOC,QAAU,MAOd,WAAAE,CAAYstJ,GACTptJ,KAAKmrJ,UAAY,GACjBnrJ,KAAKm8H,cAAgB,MAGrBixB,EAAgBA,GAAiB,CAAC,GACpBtoJ,OAASsoJ,EAActoJ,QAAU,CAAC,EAChDsoJ,EAActoJ,OAAOkY,OAClBowI,EAActoJ,OAAOkY,QAAU,8BAClCowI,EAActoJ,OAAOuoJ,cAClBD,EAActoJ,OAAOuoJ,eAAiB,aACzCrtJ,KAAKotJ,cAAgBA,CACxB,CAQA,SAAA53G,CAAUtZ,EAAKC,GACZn8B,KAAKk8B,IAAMl8B,KAAKk8B,KAAOA,EACvBl8B,KAAKm8B,OAASA,EAEdD,EAAMA,GAAOl8B,KAAKk8B,IAElBl8B,KAAK0rJ,YAAc,KAGnB,IAAI5oH,EAAO9iC,KAAK8iC,IAAM,CACnB0S,UAAW,GAAGrZ,cACdviB,MAAO,GAAGuiB,UACVmxH,gBAAiB,GAAGnxH,oBAEpBqjC,OAAQ,GAAGrjC,WACXoxH,KAAM,GAAGpxH,SAET52B,OAAQ,GAAG42B,WACXlsB,IAAK,GAAGksB,SAIXn8B,KAAK4/D,GAAK,CACP78C,KAAM,SACN9jB,GAAI6jC,EAAI0S,UACRm9D,OAAO,EACP3qD,SAAU,SACVskC,QAAQ,EACR/qC,MAAO,IACPwO,OAAQ,IACRhjC,IAAK,oBACLlR,KAAM,CACHkH,KAAM,UACNgK,IAAK,aACLk/D,KAAM,CACH,CACGlpE,KAAM,QACNvf,MAAOxD,KAAKotJ,cAActoJ,OAAOuoJ,eAEpC,CACGtqI,KAAM,SACNgK,IAAK,gBACLhP,KAAM,aACNhV,KAAM,aACNvF,MAAOspB,EAAE,gBACTy0B,MAAO,IACPv0B,MAAO,KACJhtB,KAAKwtJ,UACLnsJ,QAAQmJ,IAAIgiB,GAAGsW,EAAIlpB,OAAOymG,SAC1B7zF,GAAGsW,EAAIwqH,iBAAiBjqB,SAAS,EAAG72G,GAAGsW,EAAIlpB,OAAOymG,QAAQ,KAKtEvyG,KAAM,CACH/E,KAAM,OACNw9E,KAAM,CACH,CACGxjE,KAAM,aACN9jB,GAAI6jC,EAAIwqH,gBACR5nB,OAAQ,KACR53H,KAAM,CACHiV,KAAM,SACN9jB,GAAI6jC,EAAIlpB,MACR8uE,OAAQ,GACRlb,QAAS,GACT+Y,KAAM,KAmBZ,CACGx5D,IAAK,CAAE,mBAAoB,QAC3Bk/D,KAAM,CACH,CAAE2mB,WAAW,GACb,CACG7vF,KAAM,SACNnX,KAAM,SACNyF,MAAOyb,EAAE,UACTC,IAAK,mBACLigE,WAAW,EACXhgE,MAAO,WACJmkB,EAAOs8G,cACV,GAEH,CACG1qI,KAAM,SACNgK,IAAK,gBACLnhB,KAAM,OACNpI,MAAOspB,EAAE,QACT/jB,KAAM,OACNikF,WAAW,EACXhgE,MAAO,WACJmkB,EAAOu8G,YACV,GAEH,CAAE96C,WAAW,QAW5B5yG,KAAKM,KAAQiI,IAEV,IAAK,IAAI26B,KAAKiO,EAAOC,UAClBD,EAAOC,UAAUlO,GAAK36B,EAAQ26B,IAAMiO,EAAOC,UAAUlO,GAGxD9/B,MAAMw8D,GAAG5/D,KAAK4/D,GAAG,EAIpB,IAAIzuB,EAAUnxC,KAAKmxC,OAAS,CACzBs8G,aAAc,WACXjhI,GAAGsW,EAAI0S,WAAW0nC,MACrB,EAEAwwE,WAAY,KACT,IAAI9rH,EAAU5hC,KAAK4nJ,aAEnBz2G,EAAOC,UAAUm8F,OAAO3rG,GACxBuP,EAAO+rC,MAAM,EAGhB9rC,UAAW,CACRi8F,SAAU,WACPhsI,QAAQqF,KAAK,iBAChB,EACA6mI,OAAQ,SAAU5+G,GACfttB,QAAQqF,KAAK,eAChB,GAGHw2E,KAAM,WACH1wD,GAAGsW,EAAI0S,WAAW0nC,MACrB,EAEA2N,KAAM,WACHr+D,GAAGsW,EAAI0S,WAAWq1C,MACrB,GAGH7qF,KAAK6qF,KAAO15C,EAAO05C,KACnB7qF,KAAKk0B,SAAWid,EAAOjd,QAC1B,CAOA,OAAAs5H,CAAQ7rI,GACL,IAAIioI,EAAO5pJ,KAAK2tJ,UAChB,GAAK/D,EAAL,CAKA,GAHA5pJ,KAAKmrJ,UAAU/jJ,KAAKwiJ,GAGhB5pJ,KAAK8iC,IAAK,CAEX,IAAI8qH,EAAUphI,GAAGxsB,KAAK8iC,IAAIlpB,OACtBg0I,IAEDhE,EAAKp0G,UAAUx1C,KAAKk8B,IAAKl8B,KAAKm8B,QACjByxH,EAAQ/gI,QAAQ+8H,EAAKhqF,IAElCgqF,EAAKtpJ,KAAK,CACP8sI,SAAWygB,IACRrhI,GAAGxsB,KAAK8iC,IAAIlpB,OAAOuT,WAAWy8H,EAAK9mH,IAAI0S,WAEvC,IAAI7oB,EAAQ3sB,KAAKmrJ,UAAU3jJ,QAAQqmJ,IACpB,IAAXlhI,GACD3sB,KAAKmrJ,UAAU54H,OAAO5F,EAAO,EAChC,IAIZ,CAEIhL,GACDioI,EAAKx0F,aAAazzC,EA3BJ,CA6BpB,CAOA,YAAAyzC,CAAazzC,GAOV3hB,KAAKmrJ,UAAUnlJ,SAASgmB,IAElBhsB,KAAK8iC,KACL9iC,KAAK8iC,IAAIlpB,OACToS,GACAA,EAAK8W,KACL9W,EAAK8W,IAAI0S,WAEThpB,GAAGxsB,KAAK8iC,IAAIlpB,OAAOuT,WAAWnB,EAAK8W,IAAI0S,UAC1C,IAEHx1C,KAAKmrJ,UAAY,GAEbxpI,GACDA,EAAS3b,SAAS8nJ,IACf9tJ,KAAKwtJ,QAAQM,EAAa,GAGnC,CASA,UAAAv5F,CAAWzvC,GACR9kB,KAAKm8H,cAAgBr3G,EAGrB9kB,KAAKmrJ,UAAUnlJ,SAAStE,IACrBA,EAAE6yD,WAAWzvC,EAAO,GAE1B,CAEA,UAAA0wC,CAAWjtD,IACPvI,KAAKmrJ,WAAa,IACfxoJ,QAAQqpB,GAA8B,GAArBA,EAAK8gI,eACtB9mJ,SAASgmB,IACPA,EAAKwpC,WAAWjtD,EAASA,EAAQnH,KAAK,GAE/C,CAQA,OAAAshB,CAAQna,GACL,OAAO,IAAI/G,SAAQ,CAAC9B,EAASoK,KAC1B,IAAIqhJ,GAAanrJ,KAAKmrJ,WAAa,IAAIxoJ,QACnCqpB,IAAUA,EAAK8gI,eAGnB,IAAIrxD,EAAU,EAQd0vD,EAAUnlJ,SAASgmB,IAChBA,EACItJ,QAAQna,GACRlB,MAAK,aATTo0F,GACe0vD,EAAUvpJ,QACtBlC,GASA,IACC4H,OAAOnG,IACL2I,EAAO3I,EAAI,GACZ,IAGgB,GAApBgqJ,EAAUvpJ,QACXlC,GACH,GAEN,CAOA,UAAAkoJ,GACG,IAAIjmI,EAAW,GAIf,OAHA3hB,KAAKmrJ,UAAUnlJ,SAAStE,IACrBigB,EAASva,KAAK1F,EAAEkmJ,aAAa,IAEzBjmI,CACV,CAEA,OAAAgsI,GAIG,OAHAtsJ,QAAQC,MACL,wEAEI,IACV,CAEA,QAAA6zD,CAASxgD,GACN3U,KAAK0rJ,YAAc/2I,EACnB3U,KAAKk8B,IAAMl8B,KAAKk8B,KAAOvnB,EAAKunB,GAC/B,CAOA,UAAAo5B,GAGG,OAAO9zD,QAAQ9B,SAClB,CAOA,cAAAgtJ,GACG1sJ,KAAKmrJ,UAAUnlJ,SAAStE,IACrBA,EAAEgrJ,gBAAgB,GAExB,mBC7YH,MAAMqB,EAAiB,EAAQ,OACzBC,EAAa,EAAQ,MAErBC,EAAqB,EAAQ,OAC7BC,EAAsB,EAAQ,OAC9BC,EAAsB,EAAQ,OAC9BC,EAAsB,EAAQ,OAEpCzuJ,EAAOC,QAAU,cAA4CmuJ,EAO1D,WAAAjuJ,GAOGC,MANe,CACZ+E,OAAQ,CACLkY,OAAQ,iCACRqwI,cAAe,kBAIxB,CAGA,OAAAM,GACG,IAAIrC,EAAc,CACf,IAAI2C,EACDjuJ,KAAKk8B,IACL,GAAGl8B,KAAKm8B,0BACRn8B,KAAK0rJ,aAER,IAAIwC,EACDluJ,KAAKk8B,IACL,GAAGl8B,KAAKm8B,0BACRn8B,KAAK0rJ,aAER,IAAIyC,EACDnuJ,KAAKk8B,IACL,GAAGl8B,KAAKm8B,mCACRn8B,KAAK0rJ,aAER,IAAI0C,EACDpuJ,KAAKk8B,IACL,GAAGl8B,KAAKm8B,mCACRn8B,KAAK0rJ,cAIP9B,EAAO,IAAIoE,EAAW1C,GAI1B,OAHItrJ,KAAKm8H,eACNytB,EAAKr1F,WAAWv0D,KAAKm8H,eAEjBytB,CACV,CAQA,gBAAMt0F,GACH,IAAI+4F,GAAYruJ,KAAKmrJ,WAAa,IAAIrsJ,KAAK4C,GAAMA,EAAEirJ,kBAC7CnrJ,QAAQsY,IAAIu0I,EACrB,oBClEH,MAAMN,EAAiB,EAAQ,OACzBC,EAAa,EAAQ,MAErBM,EAAqB,EAAQ,OAC7BC,EAAgB,EAAQ,OACxBC,EAAiB,EAAQ,OACzBC,EAAiB,EAAQ,OACzBC,EAAc,EAAQ,MACtBC,EAAY,EAAQ,MAE1BhvJ,EAAOC,QAAU,cAA4CmuJ,EAO1D,WAAAjuJ,GAOGC,MANe,CACZ+E,OAAQ,CACLkY,OAAQ,+BACRqwI,cAAe,kBAIxB,CAGA,OAAAM,GACG,IAAIrC,EAAc,CACf,IAAIgD,EACDtuJ,KAAKk8B,IACL,GAAGl8B,KAAKm8B,mCAEX,IAAIoyH,EAAcvuJ,KAAKk8B,IAAK,GAAGl8B,KAAKm8B,8BACpC,IAAIqyH,EAAexuJ,KAAKk8B,IAAK,GAAGl8B,KAAKm8B,+BACrC,IAAIsyH,EAAezuJ,KAAKk8B,IAAK,GAAGl8B,KAAKm8B,+BACrC,IAAIuyH,EAAY1uJ,KAAKk8B,IAAK,GAAGl8B,KAAKm8B,4BAClC,IAAIwyH,EAAU3uJ,KAAKk8B,IAAK,GAAGl8B,KAAKm8B,2BAG/BytH,EAAO,IAAIoE,EAAW1C,GAG1B,OAFA1B,EAAKr1F,WAAWv0D,KAAKm8H,eACrBytB,EAAKz0F,SAASn1D,KAAK0rJ,aACZ9B,CACV,oBC1CH,MAAMgF,EAAkB,EAAQ,OAIhCjvJ,EAAOC,QAAU,cAA4D,EAS1E,WAAAE,CAAYo8B,EAAKC,EAAQuvH,GACtB3rJ,MAAMm8B,EAAKC,EAAQuvH,GAEnB1rJ,KAAKyC,IAAM,gDACXzC,KAAKwD,MAfH,KAAIqF,IAAWtI,GAAGgD,aAAaC,SAASqF,GAe7BikB,CAAE,0BAClB,CAQA,mBAAA+hI,CAAoB1yH,GACjB,IAAI2yH,EAAY/uJ,MAAM8uJ,oBAAoB1yH,GAM1C,OAFA2yH,EAAU39G,OAAO49G,eAAiB,WAAa,EAExCD,CACV,CAOA,mBAAAE,GACG,OAAO,IACV,CAUA,OAAAtsI,CAAQna,GAEL,IAAI0mJ,EAAUjvJ,KAAKkvJ,kBACf7iJ,EAAQ4iJ,EAAQ5iJ,QAEhB8iJ,EAAkBnvJ,KAAKovJ,gBASvBC,EAAkB,CAAC,EAKvB,GAFArvJ,KAAKysJ,oBAAoB,CAAC,EAAG4C,IAEzBA,EAAgBC,WAcb,CAEJ,IAAIC,EAAuBN,EAAQrnI,UAChCunI,EAAgBxtI,SAASm+B,YAG5B,OAAKyvG,GAGLF,EAAgBE,EAAqBttI,YAAc1Z,EAAQnH,KAAKnC,GAGzDoN,EAAM8rE,OAAOk3E,IALV7tJ,QAAQsI,OAAO,4BAM5B,CA3BgC,CAE7B,IAAIylJ,EAAuBN,EAAQrnI,UAChCunI,EAAgBxtI,SAASm+B,YAG5B,IAAKyvG,EACF,OAAO/tJ,QAAQsI,OAAO,6BAEzBulJ,EAAgBC,WAAWtpJ,SAAStE,IACjCA,EAAE6tJ,EAAqBttI,YAAc1Z,EAAQnH,KAAKnC,GAE3CoN,EAAM8rE,OAAOz2E,KAE1B,CAcH,CAOA,UAAAkmJ,GAOG,IAAIjmI,EAAW5hB,MAAM6nJ,aAKrB,cAFOjmI,EAAS6tI,YAET7tI,CACV,oBC1HH,MAAM8tI,EAAgD,EAAQ,OAI9D9vJ,EAAOC,QAAU,cAA4D,EAG1E,WAAAE,CAAYo8B,EAAKC,EAAQuvH,GACtB3rJ,MAAMm8B,EAAKC,EAAQuvH,GAEnB1rJ,KAAKyC,IAAM,gDACXzC,KAAKwD,MATH,KAAIqF,IAAWtI,GAAGgD,aAAaC,SAASqF,GAS7BikB,CAAE,2BAEf9sB,KAAK0vJ,uBAAwB,CAChC,CAUA,OAAAhtI,CAAQna,GACL,IAAI6mJ,EAAgBpvJ,KAAKovJ,gBAGzB,OAFApvJ,KAAK2vJ,UAAYpnJ,EAAQnH,KAElB,IAAII,SAAQ,CAAC9B,EAASoK,KAE1B,IAAI4e,EAAKngB,EAAQoM,KAAK4S,eACtB,IAAKmB,EAAI,OAAOhpB,IAEhB,IAAI2M,EAAQqc,EAAGrc,MACf,IAAKA,EAAO,OAAO3M,IAEnB,IAAI8rB,EAAc,CAAC,EACnBA,EAAY4jI,EAAcntI,YAAc,GAExC5V,EACI+yE,OAAO72E,EAAQnH,KAAKnC,GAAIusB,GACxBnkB,KAAK3H,GACL4H,OAAOnG,IACLnB,KAAKO,GAAGoJ,OAAOC,UAAUzI,EAAK,CAC3BuC,QACG,oEACHtC,KAAMmH,EAAQnH,OAEjB0I,EAAO3I,EAAI,GACZ,GAEX,oBCnDH,MAAMyuJ,EAAgC,EAAQ,OAI9CjwJ,EAAOC,QAAU,cAAmD,EASjE,WAAAE,CAAYo8B,EAAKC,EAAQuvH,GACtB3rJ,MAAMm8B,EAAKC,EAAQuvH,GAEnB1rJ,KAAKyC,IAAM,uCACXzC,KAAKwD,MAfH,KAAIqF,IAAWtI,GAAGgD,aAAaC,SAASqF,GAe7BikB,CAAE,gBAClB,CAEA,gBAAIggI,GACD,OAAO,CACV,oBCtBH,MAAM8C,EAAgC,EAAQ,OACxCriG,EAAiB,EAAQ,OACzB89F,EAAqB,EAAQ,OAEnC,IAAIv+H,EAAI,IAAIjkB,IAAWtI,GAAGgD,aAAaC,SAASqF,GAEhDlJ,EAAOC,QAAU,cAA4D,EAG1E,WAAAE,CAAYo8B,EAAKC,EAAQuvH,GACtB3rJ,MAAMm8B,EAAKC,EAAQuvH,GAEnB1rJ,KAAKyC,IAAM,gDACXzC,KAAKwD,MAAQspB,EAAE,2BAEf9sB,KAAK2rC,WAAa,KAGlB3rC,KAAK6vJ,gBAAkB,KAGvB7vJ,KAAK8vJ,cAAgB,GAErB9vJ,KAAKyrJ,SAAW,KAChBzrJ,KAAKwvJ,YAAc,IACtB,CAgBA,UAAAj7F,CAAWzvC,GACR9kB,KAAKitJ,gBAAgBnoI,GACrB9kB,KAAK2rC,WAAa7mB,EAGK9kB,KAAK+vJ,qBACX/pJ,SAASgqJ,IACvBhwJ,KAAK8vJ,cAAc1oJ,KAAK,CACrBnI,GAAI+wJ,EAAG/wJ,GACPoS,MAAO2+I,EAAGxsJ,OACX,GAER,CAOA,kBAAAusJ,GACG,IAAIE,EAAa1iG,EAAe/xB,WAAW/4B,IAC3C,OAAIzC,KAAK2rC,YAAc3rC,KAAK2rC,WAAWrhB,OAC7BtqB,KAAK2rC,WAAWrhB,QAAQ5I,GACrBA,EAAEjf,KAAOwtJ,IAGZ,EAEb,CAOA,eAAAf,GACG,GAAIlvJ,KAAK6vJ,gBAAiB,CACvB,IAAIT,EAAgBpvJ,KAAKovJ,gBACzB,GAAIA,EACD,OAAOA,EAAc/hI,cAE3B,CAEA,OAAO,IACV,CAOA,aAAA+hI,GACG,OAAOpvJ,KAAK+vJ,qBAAqBptJ,QAAQ+e,GAC/BA,EAAEziB,IAAMe,KAAK6vJ,kBACpB,EACN,CAOA,qBAAA1C,CAAsBhxH,GAKnB,OAJuB,MAAnBn8B,KAAKkwJ,aACNlwJ,KAAKkwJ,WAAalwJ,KAAK6uJ,oBAAoB1yH,IAGvCn8B,KAAKkwJ,UACf,CAQA,mBAAArB,CAAoB1yH,GACjB,IAAI6mF,EAAmB5/G,MAAM40E,MACzB0yE,EAAYjoJ,GAENA,EAAM,IAAMugH,EAGlBlgF,EAAM,CACP0S,UAAWk1G,EAAS,yBACpBh2I,WAAYg2I,EAAS,iBACrByF,qBAAsBzF,EAAS,gBAC/B0F,iBAAkB1F,EAAS,eAG1B51C,EAAM,CACP71G,GAAI6jC,EAAI0S,UACRzyB,KAAM,SACNgK,IAAK,yBACLw5D,KAAM,CACH,CACGtnF,GAAI6jC,EAAIqtH,qBACRptI,KAAM,aACNvf,MAAOspB,EAAE,4CACTknC,WAAY,IACZ3iD,MAAOrR,KAAKovJ,cACZ7mJ,QAASvI,KAAK8vJ,cACd7uJ,GAAI,CACDowC,SAAU,CAAC0tC,EAAQmN,KAChB/6C,EAAOw6G,aAAa5sE,EAAQmN,EAAO,MAmB9C/6C,EAAUnxC,KAAKmxC,OAAS,CACzBk/G,WAAattI,IACVyJ,GAAGsW,EAAI0S,WAAW3oB,QAAQ9J,EAAK,EAMlCutI,uBAAwB,KACrB,IAAIntI,EAAWqJ,GAAGsW,EAAI0S,WAAWg1C,gBAC7B+lE,EAAgB,GACpBptI,EAASnd,SAASC,IACfsqJ,EAAcnpJ,KAAKnB,EAAE,IAExBsqJ,EAAcvqJ,SAASC,IAEhBA,EAAEyL,OAAOzS,IAAM6jC,EAAIqtH,sBACpB3jI,GAAGsW,EAAI0S,WAAWroB,WAAWlnB,EAChC,GACD,EAGL0lJ,aAAc,CAAC5sE,EAAQmN,KACpB/6C,EAAOm/G,yBAEPtwJ,KAAK6vJ,gBAAkB9wE,EACvB,IAAImwE,EAAkBlvJ,KAAKkvJ,kBAE3B,GAAIA,GAcD,GAZAlvJ,KAAKwwJ,iBAAiBtB,GAEtBlvJ,KAAKywJ,gBAAkB1wJ,MAAMotJ,sBAC1BrqH,EAAIstH,kBAGPj/G,EAAO49G,iBAGP59G,EAAOk/G,WAAWrwJ,KAAKywJ,gBAAgB7wF,IACvC5/D,KAAKywJ,gBAAgBnwJ,OAEjBN,KAAK0vJ,sBAAuB,CAC7B,IAAIgB,EAAclkI,GAAGxsB,KAAKywJ,gBAAgB7wF,GAAG3gE,IACzCyxJ,IACDA,EAAY75F,UACZ65F,EAAYxzE,OAElB,OAEAl9E,KAAKO,GAAGoJ,OAAO2sB,QAAQ,IAAIh3B,MAAM,6BAA8B,CAC5DsvB,QAAS5uB,KAAK6vJ,iBAEpB,EAGHd,eAAgB,KAab,IAAI4B,EAAc3wJ,KAAKgvJ,sBAEvB2B,EAAYn7G,UAAUx1C,KAAKk8B,IAAKl8B,KAAKm8B,QACrCgV,EAAOk/G,WAAWM,EAAY/wF,IAC9B+wF,EAAYrwJ,KAAK,CAAC,EAAE,EAKvB80D,aAAezzC,IAMZ6K,GAAGsW,EAAIqtH,sBAAsBj8H,SAASvS,EAASkuI,iBAE3C7vJ,KAAKyrJ,UACNzrJ,KAAKyrJ,SAASv3H,SAASl0B,KAAKwvJ,aAG3BxvJ,KAAKywJ,iBACNzwJ,KAAKywJ,gBAAgBr7F,aAAazzC,EACrC,EAGHimI,WAAY,KAMT,IAAIjmI,EAAW,CAAE6/F,gBAAiB,IAUlC,OAPAxhH,KAAK4wJ,SAAS5qJ,SAAS6qJ,IACpB,IAAIC,EAAcD,EAAGjJ,aACjBkJ,GACDnvI,EAAS6/F,gBAAgBp6G,KAAK0pJ,EACjC,IAGInvI,CAAQ,GAIrB,MAAO,CACJi+C,GAAIk1C,EACJx0G,KAjISihH,IAIT,GAHAA,EAAaA,GAAcvhH,KAAKuhH,WAG5BvhH,KAAK6vJ,gBAAiB,CACvB,IAAIr/C,EAAShkF,GAAGsW,EAAIqtH,sBAChB3/C,GACDA,EAAOt8E,SAASl0B,KAAK6vJ,gBAE3B,GAyHAz6F,aAAezzC,IACZwvB,EAAOikB,aAAazzC,EAAS,EAEhCimI,WAAY,IACFz2G,EAAOy2G,aAEjBz2G,OAAQA,EAEd,CAQA,mBAAA69G,GACG,IAAKhvJ,KAAKyrJ,SAAU,CACjBzrJ,KAAKyrJ,SAAW,IAAIJ,EACjBv+H,EAAE,gCAGL,IAAImiI,EAAUjvJ,KAAKkvJ,kBACfD,GAASjvJ,KAAKyrJ,SAASl3F,WAAW06F,EACzC,CACA,OAAOjvJ,KAAKyrJ,QACf,CAUA,OAAA/oI,CAAQna,GACLvI,KAAK2vJ,UAAYpnJ,EAAQnH,KAGzB,IAAI6tJ,EAAUjvJ,KAAKkvJ,kBACf7iJ,EAAQ4iJ,EAAQ5iJ,QAEhB8iJ,EAAkBnvJ,KAAKovJ,gBAEvBp+G,EAAY,KAOZ+/G,EAAmBvgJ,IAGJxQ,KAAK2rC,WAAWt/B,QAE5Bs1B,cAAcwtH,EAAgBltI,WAAY1Z,EAAQnH,MAClDiG,MAAMgb,IAGJ,GAAKA,GAAyB,GAAhBA,EAAMzgB,OAApB,CAQA,IAAIkhC,EAAMzgB,EAAMvjB,KAAKoH,GACXA,EAAEjH,KAIZ+xC,EAAY,CACT3rB,KAAM,MACNzL,MAAO,CACJ,CACGnX,IAAK,GAAGwsJ,EAAQ3pH,aAAa2pH,EAAQhjJ,OACrC+f,KAAM,KACN3a,MAAOyxB,KAOZrjC,OAAOD,KAAKQ,KAAKwvJ,aAAa5tJ,OAAS,GACxCovC,EAAUp3B,MAAMxS,KAAKpH,KAAKwvJ,aAG7Bh/I,GA3BA,MAFGA,GA6BC,IAENlJ,MAAMkJ,EAAG,EAIhB,OAAO,IAAIhP,SAAQ,CAAC9B,EAASoK,KAK1B,IAAIknJ,EAAW,CAAC5nI,EAAM5Y,KACHxQ,KAAKysJ,oBAAoB,CAAC,EAAGrjI,GAI1C/c,EACI+yE,OAAOh2D,EAAKnqB,GAAImqB,GAChB/hB,MAAK,KACHmJ,GAAI,IAENlJ,OAAOnG,IACLnB,KAAKO,GAAGoJ,OAAOC,UAAUzI,EAAK,CAC3BuC,QACG,6EACHtC,KAAMmH,EAAQnH,OAEjBoP,EAAGrP,EAAI,IAbbqP,GAeH,EAKHugJ,GAAiB5vJ,IACd,GAAIA,EAOD,OANAZ,GAAGoJ,OAAOC,UAAUzI,EAAK,CACtBuC,QACG,4EACHtC,KAAMmH,EAAQnH,YAEjB0I,EAAO3I,GAIQ,OAAd6vC,EAKDtxC,IAGA2M,EACI4f,QAAQ,CAAEL,MAAOolB,IACjB3pC,MAAMkoC,IACJ,IAAI1+B,EAAO,EAGP0+B,GAAQA,EAAKnuC,OACdmuC,EAAOA,EAAKnuC,MAIfmuC,EAAKvpC,SAASojB,IACX4nI,EAAS5nI,GAAOjoB,IACb,GAAIA,EACD,OAAO2I,EAAO3I,KAEjB0P,GACY0+B,EAAK3tC,QAEdlC,GACH,GACD,IAIc,GAAf6vC,EAAK3tC,QACNlC,GACH,IAEF4H,MAAMwC,EACb,GACD,GAER,CAOA,YAAAsrD,CAAazzC,GACVA,EAAWA,GAAY,CAAC,EAExB3hB,KAAK6vJ,gBAAkBluI,EAASkuI,iBAAmB,KACnD7vJ,KAAKwvJ,YAAc7tI,EAAS6tI,aAAe,CAAC,EAE5CzvJ,MAAMq1D,aAAazzC,GAGf3hB,KAAKkwJ,YACNlwJ,KAAKmxC,OAAOikB,aAAazzC,EAE/B,CAOA,UAAAimI,GAQG,IAAIjmI,EAAW5hB,MAAM6nJ,aAErBjmI,EAASkuI,gBAAkB7vJ,KAAK6vJ,gBAEhC,IAAIoB,EAAS,KAmBb,OAlBIjxJ,KAAKyrJ,WACNwF,EAASjxJ,KAAKyrJ,SAAS/vG,WACnBh2C,MAAMC,QAAQsrJ,KACfA,EAASA,EAAO,IAIfA,IACDA,EAAO5rI,KAAO4rI,GAAQ5rI,MAAQ,QAGpC1D,EAAS6tI,YAAcyB,EAGnBjxJ,KAAKkwJ,aACNvuI,EAAS4/F,WAAavhH,KAAKmxC,OAAOy2G,cAG9BjmI,CACV,CAOA,cAAA+qI,GACO1sJ,KAAKyrJ,UACNzrJ,KAAKyrJ,SAASv3H,SAASl0B,KAAKwvJ,YAElC,oBClhBH,MAAM0B,EAAmB,EAAQ,OAIjCvxJ,EAAOC,QAAU,cAAuD,EASrE,WAAAE,CAAYo8B,EAAKC,GACdp8B,QAEAC,KAAKk8B,IAAMA,EACXl8B,KAAKyC,IAAM,2CACXzC,KAAKwD,MAhBH,KAAIqF,IAAWtI,GAAGgD,aAAaC,SAASqF,GAgB7BikB,CAAE,2BAEf9sB,KAAKm8H,cAAgB,KAErBn8H,KAAK4wJ,SAAW,EAInB,CAiCA,qBAAAzD,CAAsBhxH,GAUnB,OATAn8B,KAAK80G,IAAM,CACRl1C,GAAI,CACD78C,KAAM,SACNwjE,KAAM,IAGTjmF,KAAM,QAGFN,KAAK80G,GACf,CAKA,OAAApyF,CAAQna,GACL,OAAO,IAAI/G,SAAQ,CAAC9B,EAASoK,KAC1B,IAAI6K,EAAOpM,EAAQoM,KACnB,IAAKA,EAAM,OAEX,IAAIyxE,EAAQzxE,EAAK+7C,YAAYj2C,GAAyB,SAAnBA,EAAEkH,SAAS5Y,OAC9C,IAAKq9E,EAAO,OAQZ,IAAI4vC,EAASxpG,GAAG45D,EAAMnnF,IAClB+2H,GAAQA,EAAO94C,OAGnB30E,EAAQoM,KAAKi/F,WAAW,MAExBl0G,GAAS,GAEf,oBCjGH,MAAMwxJ,EAAmB,EAAQ,OAIjCvxJ,EAAOC,QAAU,cAA2D,EASzE,WAAAE,CAAYo8B,EAAKC,GACdp8B,QAEAC,KAAKk8B,IAAMA,EACXl8B,KAAKyC,IAAM,+CACXzC,KAAKwD,MAhBH,KAAIqF,IAAWtI,GAAGgD,aAAaC,SAASqF,GAgB7BikB,CAAE,+BAEf9sB,KAAKm8H,cAAgB,KAErBn8H,KAAK4wJ,SAAW,EAInB,CAiCA,qBAAAzD,CAAsBhxH,GACnB,IAAI2G,EAAM,CACPp/B,QAAS,GAAGy4B,aAGfn8B,KAAK80G,IAAM,CACRl1C,GAAI,CACD3gE,GAAI6jC,EAAIp/B,QACRqf,KAAM,WAGNgtC,OAAQ,KAGXzvD,KAAM,OAEN6wC,OAAQA,EAERikB,aAAemsD,IACZpwE,EAAOikB,aAAamsD,EAAW,EAElCqmC,WAAY,IACFz2G,EAAOy2G,cAIpB,IAAIz2G,EAAS,CACVikB,aAAemsD,IACZA,EAAaA,GAAc,CAAC,EAE5B/0F,GAAGsW,EAAIp/B,SAASwwB,SAASqtF,EAAW79G,SAAW,GAAG,EAGrDkkJ,WAAY,KAEF,CACJlkJ,QAAS8oB,GAAGsW,EAAIp/B,SAASg4C,YAAc,MAKhD,OAAO17C,KAAK80G,GACf,CAKA,OAAApyF,CAAQna,GACL,OAAO,IAAI/G,SAAQ,CAAC9B,EAASoK,KAC1B,IAAIqnJ,EAAiBnxJ,KAAKuhH,WAAW79G,SAAW,GAEhDN,MAAMM,QAAQ,CACXD,KAAM0tJ,EACNpoJ,KAAM,SAGTrJ,GAAS,GAEf,CAKA,YAAA01D,CAAazzC,GACVA,EAAWA,GAAY,CAAC,EACxB5hB,MAAMq1D,aAAazzC,GAGf3hB,KAAK80G,KAGN90G,KAAK80G,IAAI1/C,aAAazzC,EAAS4/F,WAErC,CAKA,UAAAqmC,GAMG,IAAIjmI,EAAW5hB,MAAM6nJ,aAIrB,OAFAjmI,EAAS4/F,WAAavhH,KAAK80G,IAAI8yC,aAExBjmI,CACV,mBCpJH,MAAMuvI,EAAmB,EAAQ,OAC3B3jG,EAAiB,EAAQ,OACzB6jG,EAAe,EAAQ,OAE7B,IAAItkI,EAAI,IAAIjkB,IAAWtI,GAAGgD,aAAaC,SAASqF,GAEhDlJ,EAAOC,QAAU,cAAkD,EAShE,WAAAE,CAAYo8B,EAAKC,GACdp8B,QAEAC,KAAKk8B,IAAMA,EACXl8B,KAAKyC,IAAM,sCACXzC,KAAKwD,MAAQspB,EAAE,uBAEf9sB,KAAK+sJ,YAAc,KAEnB/sJ,KAAK4wJ,SAAW,EAInB,CAiCA,qBAAAzD,CAAsBhxH,GACnB,IAAI2G,EAAM,CACPnuB,KAAM,GAAGwnB,SACTiqD,MAAO,GAAGjqD,UACVoT,KAAM,GAAGpT,cACTk1H,kBAAmB,GAAGl1H,sBACtBm1H,SAAU,GAAGn1H,aACbz4B,QAAS,GAAGy4B,aAGfn8B,KAAK80G,IAAM,CACRl1C,GAAI,CACD3gE,GAAI6jC,EAAInuB,KACRoO,KAAM,OACNw+B,MAAO,IACP+oD,eAAgB,CACbv2C,cAAe,MACfC,WAAY,KAEfi4B,KAAM,CAEH,CACG1qC,MAAO,IACPglC,KAAM,CACH,CACGxjE,KAAM,OACNnX,KAAM,WACNpI,MAAOspB,EAAE,cAEZ,CACG/J,KAAM,OACNnX,KAAM,YACNpI,MAAOspB,EAAE,cACT+/D,SAAUzpF,MAAMwW,MAAM23I,QACtBtwJ,GAAI,CACDowC,SAAU,SAAU0tC,EAAQmN,GACrBlsF,KAAK07C,aAAe17C,KAAK6sF,WAC1BrgE,GAAGsW,EAAInuB,MAAM2B,YACV,YACA,oBAGHkW,GAAGsW,EAAInuB,MAAM2B,YAAY,aAAa,EAE5C,IAGN,CACGrX,GAAI6jC,EAAIuuH,kBACRtuI,KAAM,YACNnX,KAAM,WACNpI,MAAOspB,EAAE,QACTC,IAAK,eACLw0B,MAAO,IACPzzC,KAAM,CACHyzC,MAAO,IACPglC,KAAM,CACH,CACGx2B,OAAQ,IAEX,CACG9wD,GAAI6jC,EAAIwuH,SACR/vG,MAAO,IACPx+B,KAAM,SACNwjE,KAAM,IAET,CACGxjE,KAAM,SACNgK,IAAK,gBACLhkB,KAAM,OACNgV,KAAM,aACNva,MAAOspB,EAAE,mBACTy0B,MAAO,IACPv0B,MAAO,KACJmkB,EAAOqgH,YAAY,MAMlC,CACGzuI,KAAM,OACNnX,KAAM,UACNpI,MAAOspB,EAAE,YAEZ,CACG/J,KAAM,WACN9jB,GAAI6jC,EAAIp/B,QACRkI,KAAM,UACNpI,MAAOspB,EAAE,WACTy0B,MAAO,IACPwO,OAAQ,OAsBjB,CACGw2B,KAAM,CACH,CACGxjE,KAAM,WACNha,KAAM,SACNwmE,SAAU,UAEb,CACGtwE,GAAI6jC,EAAIyM,KACRxsB,KAAM,OACNw+B,MAAO,IACPx0B,IAAK,CAAE,mBAAoB,oBAC3BwiD,SAAU,SAAU7jE,EAAKskC,GACtB,OAAOmB,EAAOsgH,cAAc/lJ,EAAKskC,EACpC,EACA/uC,GAAI,CACDyxG,YAAa,SAAUzzG,EAAII,EAAGyhF,GAC3B,IAAItrC,EAAYx1C,KAAKwoB,QAAQvpB,GAE7BkyC,EAAOugH,WAAWl8G,EACrB,QAQlBl1C,KAAM,KACCN,KAAK+sJ,cACNvgI,GAAGsW,EAAIyM,MAAM3kC,MACV5K,KAAK+sJ,YAAYziI,QAAQ5I,GAAMA,EAAEonB,qBAEpCtc,GAAGsW,EAAIyM,MAAM34B,WAGhBu6B,EAAOwgH,WAAW,EAGrBxgH,OAAQA,EAERikB,aAAemsD,IACZpwE,EAAOikB,aAAamsD,EAAW,EAElCqmC,WAAY,IACFz2G,EAAOy2G,cAIpB,IAAIz2G,EAAS,CACVikB,aAAemsD,IACZA,EAAaA,GAAc,CAAC,EAE5B/0F,GAAGsW,EAAInuB,MAAM6sF,UAAU+f,IAGNA,EAAW+vC,UAAY,IAC7BtrJ,SAAStE,IACjByvC,EAAOqgH,WAAW,CACfzoJ,KAAMrH,EAAEqH,KACR6oJ,UAAWlwJ,EAAEkwJ,UACbvgJ,MAAO3P,EAAE2P,OACV,IAGL8/B,EAAOwgH,WAAW,EAGrB/J,WAAY,KACT,IAAIzyD,EAAW3oE,GAAGsW,EAAInuB,MAAMgsF,aAAe,CAAC,EAGxCkxD,EAAa,GAiBjB,OAhBArlI,GAAGsW,EAAIwuH,UACH9mE,gBACAxkF,SAAS3G,IAEP,IACIuyJ,EAAYvyJ,EAAEuqF,UAAU,CAAEh+E,KAAM,cAAe8vC,WAC/CrqC,EAAQhS,EAAEuqF,UAAU,CAAEh+E,KAAMgmJ,IAAal2G,WAE7Cm2G,EAAWzqJ,KAAK,CACb2B,KALQ,KAMR6oJ,UAAWA,EACXvgJ,MAAOA,GACR,IAID,CACJygJ,SAAU38D,EAAmB,SAC7B48D,UAAW58D,EAAoB,UAC/Bm8D,SAAUO,EACVp1F,QAAS04B,EAAkB,QAC3BzxF,QAASyxF,EAAkB,QAC7B,EAYJ68D,gBAAkBrwI,IAGR,CACJ4/B,MAAO,IACP0qC,KAAM,CAcH,CACGlpE,KAAM,aACNnX,KAAM,YACNyF,OArBTsQ,EAAWA,GAAY,CAAC,GAqBCiwI,WAAa,QAC7BrwG,MAAO,IACPh5C,QAAS,CACN,CACGtJ,GAAI,QACJoS,MAAOyb,EAAE,2BAEZ,CAAE7tB,GAAI,QAASoS,MAAOyb,EAAE,mBACxB,CAAE7tB,GAAI,QAASoS,MAAOyb,EAAE,gBAE3B7rB,GAAI,CACDowC,SAAU,SAAU0tC,EAAQmN,GACzB/6C,EAAO8gH,gBAAgBlzE,EAAQ/+E,KAClC,IAGN,CACGuhD,MAAO,IACP31C,KAAM,aACNsmJ,aAAcvwI,EAASiwI,WAAa,QACpC3lE,KAAM,CACH,CACGlpE,KAAM,OACNnX,KAAM,QACNurC,MAAO,QACP9lC,MACyB,SAAtBsQ,EAASiwI,UACJjwI,EAAStQ,MACT,GACRw7E,SAAUzpF,MAAMwW,MAAM23I,QACtBhwG,MAAO,IACPtgD,GAAI,CACDowC,SAAU,SAAU0tC,EAAQmN,GACzB/6C,EAAOghH,iBACV,IAGN,CACGpvI,KAAM,aACNnX,KAAM,QACNurC,MAAO,QACP9lC,MACyB,SAAtBsQ,EAASiwI,UACJjwI,EAAStQ,MACT,GACRkwC,MAAO,IACP6qC,QAAS,CACNnrF,GAAI,CACDorF,aAAc,WACXrsF,KAAKo6E,OAAO,QAAS,KACrBp6E,KAAKssF,QACR,GAEHlrF,KAAM+vC,EAAOihH,sBAGnB,CACGrvI,KAAM,aACNnX,KAAM,QACNurC,MAAO,QACP9lC,MACyB,SAAtBsQ,EAASiwI,UACJjwI,EAAStQ,MACT,GACRkwC,MAAO,IACP6qC,QAAS,CACNnrF,GAAI,CACDorF,aAAc,WACXrsF,KAAKo6E,OAAO,QAAS,KACrBp6E,KAAKssF,QACR,GAEHlrF,KAAM+vC,EAAOkhH,mBAKzB,CACGtvI,KAAM,SACNgK,IAAK,eACLhkB,KAAM,OACNgV,KAAM,gBACNwjC,MAAO,GACPv0B,MAAO,WACJ,IAAIslI,EAAUtyJ,KAAK0sB,gBAEnBykB,EAAOohH,cAAcD,EACxB,MAMZd,WAAa7vI,IACV,IAAI+I,EAAQ8B,GAAGsW,EAAIwuH,UAAU9mE,gBAAgB5oF,OAE7C4qB,GAAGsW,EAAIwuH,UAAUzkI,QAAQskB,EAAO6gH,gBAAgBrwI,GAAW+I,GAE3DymB,EAAOwgH,WAAW,EAGrBM,gBAAiB,CAAClpJ,EAAMgpG,KACrB,IACIygD,EADazgD,EAAQrlF,gBACIk9D,UAAU,CAAEh+E,KAAM,eAE/C,OAAQ7C,GACL,IAAK,QACFypJ,EAAYhlE,UAAU,SACtB,MACH,IAAK,QACFglE,EAAYhlE,UAAU,SACtB,MACH,QACGglE,EAAYhlE,UAAU,SAI5BhhE,GAAGsW,EAAIuuH,mBAAmB5wE,QAAQ,EAGrC8xE,cAAgBD,IACb9lI,GAAGsW,EAAIwuH,UAAUnkI,WAAWmlI,GAE5BnhH,EAAOwgH,WAAW,EAGrBQ,gBAAiB,KACd,IAAIM,GAAa,EAEjBjmI,GAAGsW,EAAIwuH,UACH9mE,gBACAxkF,SAASC,IACP,IAAIysJ,EAAYzsJ,EAAE2jF,UAAU,CAAEh+E,KAAM,UAChC8mJ,EAAUh3G,aAAeg3G,EAAU7lE,aACpC4lE,GAAa,EAChB,IAGFA,EAAYjmI,GAAGsW,EAAInuB,MAAM2B,YAAY,YAAY,GAChDkW,GAAGsW,EAAInuB,MAAM2B,YAAY,WAAY,mBAAmB,EAGhEm7I,cAAe,CAAC9iI,EAAOqhB,IACb,mBAAmBrhB,EAAM5Q,gDAAgD4Q,EAAMnrB,QAGzF4uJ,kBAAmB,KAChB,IAAIO,EAAiB,GACjBpqJ,EAAU,GAEVqqJ,EAAe,CAAC7tD,EAAS8tD,KAC1B,IAAIC,EAAc/tD,EACdz6E,QAAQ5I,GAAMA,aAAa0vI,IAC3BtyJ,KAAK4iB,IACH,IAAIqxI,EAAQ,GACTC,EAAW,GAUd,OARIH,GACDE,EAAQ,GAAGF,EAAM5zJ,MAAMyiB,EAAEmC,eACzBmvI,EAAW,GAAGjuD,EAAQvhG,SAASke,EAAEle,UAAUqvJ,EAAMrvJ,WAEjDuvJ,EAAQ,IAAIrxI,EAAEmC,eACdmvI,EAAW,GAAGjuD,EAAQvhG,SAASke,EAAEle,SAG7B,CACJvE,GAAI8zJ,EACJ1hJ,MAAO2hJ,EACT,IAKPzqJ,EAAUA,EAAQoR,OAAOm5I,EAAY,EAsBxC,OAnBAF,EAAa5yJ,KAAK+sJ,aAElB/sJ,KAAK+sJ,YAAYvrI,gBAAgBxb,SAAS0b,IAMpCixI,EAAenrJ,QAAQka,EAAEziB,KAAO,IAKnC0zJ,EAAevrJ,KAAKsa,EAAEziB,IAGtB2zJ,EAAalxI,EAAE2L,eAAgB3L,GAAE,IAG7BnZ,CAAO,EAGjB8pJ,aAAc,KACX,IAAI9pJ,EAAU,GAyBd,OAtBgBvI,KAAK0rJ,YAAYnrJ,GAAGigB,iBAAiBkI,IAClD,IAAIhd,EAAMgd,EAAGpB,WACb,OACGoB,EAAG/G,SAAS8D,SACZ/Z,GACAA,EAAI4e,QAAQ5I,GAAe,SAATA,EAAEjf,MAAgBb,OAAS,CAC/C,IAGMoE,SAAS+rB,IACZA,EAAGzK,YACJyK,EAAGzK,WACCgD,QAAQ5I,GAAe,SAATA,EAAEjf,MAChBuD,SAAS0b,IACPnZ,EAAQnB,KAAK,CACVnI,GAAI,GAAG8yB,EAAG9yB,MAAMyiB,EAAEziB,KAClBoS,MAAO,GAAG0gB,EAAGvuB,SAASke,EAAEle,SACzB,GAEX,IAGI+E,CAAO,EAGjBmpJ,WAAa/iI,IACV,IAAIskI,EAAY7vJ,MAAM8vJ,UAAUC,WAC5BjqJ,EAAM,GAGkB,QAAzB+pJ,EAAUvhJ,OAAOqR,MACQ,YAAzBkwI,EAAUvhJ,OAAOqR,OAEbkwI,EAAUv3G,WAAUxyC,EAAM+pJ,EAAUv3G,YAEpCu3G,EAAU/+H,UACX++H,EAAU/+H,SAAS,GAAGhrB,IAAMylB,EAAMnrB,SAErCJ,MAAM8vJ,UAAUE,SAASH,GAC5B,EAGHtB,UAAW,KACRnlI,GAAGsW,EAAIuuH,mBAAmB5wE,SAC1Bj0D,GAAGsW,EAAIp/B,SAAS+8E,QAAQ,GAI9B,OAAOzgF,KAAK80G,GACf,CAQA,OAAApyF,CAAQna,GAEL,IAAKnF,MAAMwW,MAAM23I,QAAQvxJ,KAAKuhH,WAAWwwC,WACtC,OAAOvwJ,QAAQ9B,UAGlB,IAAImyJ,EAAa,GAEjB,OAAOrwJ,QAAQ9B,UACX2H,MAAK,IAEI,IAAI7F,SAAQ,CAAC9B,EAASoK,KAC1B,IAAIuvD,EAAQ,GAEZr5D,KAAKuhH,WAAW+vC,SAAStrJ,SAASqtJ,IAC/Bh6F,EAAMjyD,KACH,IAAI5F,SAAQ,CAACulB,EAAM5lB,KAIhB,GAAqB,SAAjBkyJ,EAAIzB,UAAsB,CAC3B,IAAI0B,EAAgBD,EAAIhiJ,MAAMqS,MAAM,KAAK,GACrC6vI,EACDvzJ,KAAK+sJ,YAAYtoI,YAAYjB,WAC1B8vI,GAEN,GAAIC,EAAY,CAEb,GAAIA,EAAWzuI,OAAO7lB,IAAMe,KAAK+sJ,YAAY9tJ,GAAI,CAC9C,IAAIu0J,EACDjrJ,EAAQnH,KAAKmyJ,EAAWtxI,YACvBuxI,IACD3B,EAAaA,EAAWl4I,OAAO65I,GACrC,KAEK,CACF,IAAIC,EAAcJ,EAAIhiJ,MAAMqS,MAAM,KAAK,GACtB1jB,KAAK+sJ,YAAYziI,QAC9B5I,GACEA,aAAa6rC,GACb7rC,EAAEziB,IAAMw0J,IAEHztJ,SAAS0b,IACjB,IAAI8+G,EACDj4H,EAAQnH,KAAKsgB,EAAE+L,iBAAmB,GAIlC+yG,IACC96H,MAAMC,QAAQ66H,KAEfA,EAAa,CAACA,IAGjBA,EAAWx6H,SAASsnB,IACjB,IAAItrB,EAAQsrB,EAAEimI,EAAWtxI,YACrBjgB,IACD6vJ,EAAaA,EAAWl4I,OAAO3X,GAAM,GACzC,GAER,CAEA+kB,GACH,MACGA,GAEN,MAGK,GAAqB,SAAjBssI,EAAIzB,UAAsB,CAChC,IAAI8B,EAAiBL,EAAIhiJ,MACzB,IAAKqiJ,EAAgB,OAAO3sI,IAE5B,IAAIq4H,EAAOsU,EAAehwI,MAAM,KAAK,GACjCivB,EAAU+gH,EAAehwI,MAAM,KAAK,GAEpCiwI,EACD3zJ,KAAK0rJ,YAAYnrJ,GAAGmnB,mBAAmB03H,GAC1C,IAAKuU,EAAS,OAAO5sI,IAErB,IAAI4H,EAAQglI,EAAQrsI,WAAWM,UAAU+qB,GACzC,IAAKhkB,EAAO,OAAO5H,IAGnB4sI,EAAQzgI,UAAUltB,SAAS5E,IACxB,IAAIwyJ,EAAYxyJ,EAAKutB,EAAM1M,YACvB2xI,GAAW/B,EAAWzqJ,KAAKwsJ,EAAU,IAG5C7sI,GACH,MAIG8qI,EAAWzqJ,KAAKisJ,EAAIhiJ,OACpB0V,GACH,IAEL,IAGJvlB,QAAQsY,IAAIu/C,GAAO/xD,MAAMwC,GAAQzC,KAAK3H,EAAQ,MAGnD2H,MAAK,IAEI,IAAI7F,SAAQ,CAAC9B,EAASoK,KAG1B,KAFA+nJ,EAAa7xJ,KAAKO,GAAG8a,KAAKw2I,GAAYlvJ,QAAQjB,GAAMA,MAEjCmwJ,EAAWjwJ,OAAS,EAAG,OAAOlC,IAGjD,IAAIoyJ,EAAW9xJ,KAAKuhH,WAAWuwC,SAC5Br1F,EAAUz8D,KAAKuhH,WAAW9kD,QAC1B/4D,EAAU1D,KAAKuhH,WAAW79G,QAE7B1D,KAAK+sJ,YACDziI,QAAQ5I,GAAMA,EAAEonB,oBAChB9iC,SAAS0b,IACP,IAAI6tD,EAAW,IAAIt0D,OAAO,IAAIyG,EAAEle,SAAU,KACvCpC,EAAOsgB,EAAE7J,OAAOtP,EAAQnH,MAE3B0wJ,EAAWA,EAASlsJ,QAAQ2pE,EAAUnuE,GACtCq7D,EAAUA,EAAQ72D,QAAQ2pE,EAAUnuE,GACpCsC,EAAUA,EAAQkC,QAAQ2pE,EAAUnuE,EAAK,IAI/CpB,KAAKO,GAAGS,QAAQoB,KAAK,CAClBC,IAAK,qBACLwG,OAAQ,CACLipJ,SAAUA,EACVC,UAAW/xJ,KAAKuhH,WAAWwwC,UAC3Bt1F,QAASA,EACT/4D,QAASA,EACTmuJ,WAAY7xJ,KAAKO,GAAG8a,KAAKw2I,MAG3BxqJ,MAAK,KACH3H,GAAS,IAEX4H,MAAMwC,EAAO,KAG7B,CAKA,YAAAsrD,CAAazzC,GACVA,EAAWA,GAAY,CAAC,EACxB5hB,MAAMq1D,aAAazzC,GAGf3hB,KAAK80G,KAGN90G,KAAK80G,IAAI1/C,aAAazzC,EAAS4/F,WAErC,CAKA,UAAAqmC,GAMG,IAAIjmI,EAAW5hB,MAAM6nJ,aAIrB,OAFAjmI,EAAS4/F,WAAavhH,KAAK80G,IAAI8yC,aAExBjmI,CACV,oBCjuBH,MAAMuvI,EAAmB,EAAQ,OAIjCvxJ,EAAOC,QAAU,cAAsD,EASpE,WAAAE,CAAYo8B,EAAKC,GACdp8B,QAEAC,KAAKk8B,IAAMA,EACXl8B,KAAKyC,IAAM,0CACXzC,KAAKwD,MAhBH,KAAIqF,IAAWtI,GAAGgD,aAAaC,SAASqF,GAgB7BikB,CAAE,gCAEf9sB,KAAKm8H,cAAgB,KAErBn8H,KAAK4wJ,SAAW,EAInB,CAiCA,qBAAAzD,CAAsBhxH,GACnB,IAAI2G,EAAM,CACP+wH,aAAc,GAAG13H,kBAGpBn8B,KAAK80G,IAAM,CACRl1C,GAAI,CAAE3gE,GAAI6jC,EAAI+wH,aAAc9wI,KAAM,aAAcxa,QAAS,IAEzDjI,KAAM,KACH6wC,EAAOmkD,iBAAiB,EAG3BnkD,OAAQA,EAERikB,aAAemsD,IACZpwE,EAAOikB,aAAamsD,EAAW,EAElCqmC,WAAY,IACFz2G,EAAOy2G,cAIpB,IAAIz2G,EAAS,CACVmkD,gBAAiB,KAEd,IAAIw+D,EAAe,GAQfC,EAAU,CAACC,EAAWC,EAAQlrJ,EAAM6nE,KACrCqjF,EAASA,GAAU,GAEnB,IAAIl2I,EAAO,eACC,OAARhV,IAAegV,EAAO,yBAE1B,IAAI2yC,EAAasjG,EAAUtjG,aAE3BojG,EAAa1sJ,KAAK,CACfnI,GAAI+0J,EAAU/0J,GACdoS,MAAO4iJ,EAASD,EAAUxwJ,MAC1BuF,KAAMA,EACN6nE,OAAQlgB,EAAaA,EAAWzxD,GAAK,KAErC8e,KAAMA,IAGG,QAARhV,GAA0B,OAARA,IACfirJ,EAAU5zI,OACX4zI,EAAU5zI,QAAQpa,SAAQ,SAAUyU,GACjCs5I,EAAQt5I,EAAGw5I,EAAS,IAAK,OAC5B,IAICD,EAAUrxI,OACXqxI,EACIrxI,OAAO1c,GAAe,OAATA,EAAExD,MACfuD,SAASgtH,IAEPA,EAAIrwG,QAAQ3c,SAAS6rE,IAClBkiF,EACGliF,EACAoiF,EAAS,IACT,MACAD,EAAU/0J,GACZ,GACF,IAGd,EAGH80J,EAAQ/zJ,KAAK0rJ,YAAY76F,WAAY,GAAI,QAEzCrkC,GAAGsW,EAAI+wH,cAAcz5E,OAAO,UAAW05E,GACvCtnI,GAAGsW,EAAI+wH,cAAcj9I,SAAS,EAGjCw+C,aAAemsD,IACZA,EAAaA,GAAc,CAAC,EAE5B/0F,GAAGsW,EAAI+wH,cAAc3/H,SAClBqtF,EAAWtwC,OAASswC,EAAW3wC,QAAU,GAC3C,EAGJg3E,WAAY,KACT,IAAI1jJ,EAAS,CAAC,EAEVgwJ,EAAa1nI,GAAGsW,EAAI+wH,cAAcn4G,WAClCo6C,EAAetpE,GAAGsW,EAAI+wH,cACtBxlE,WACAR,UACAn8E,OAAOtQ,KAAKuB,QAAQ2xC,GAAQA,EAAIr1C,IAAMi1J,IAAY,GAiBtD,OAhBIp+D,IAGE5xF,EAFsB,OAArB4xF,EAAa/sF,KAEL,CACN6nE,OAAQklB,EAAallB,OACrBK,MAAOijF,GAID,CACNtjF,OAAQsjF,IAMVhwJ,CAAM,GAInB,OAAOlE,KAAK80G,GACf,CAKA,OAAApyF,CAAQna,GACL,OAAO,IAAI/G,SAAQ,CAAC9B,EAASoK,KAE1B,GAAI9J,KAAKuhH,WAAW3wC,SACjBroE,EAAQoM,KAAKi/F,WAAW5zG,KAAKuhH,WAAW3wC,QAEpC5wE,KAAKuhH,WAAWtwC,OAAO,CACxB,IAAIkjF,EAAU5rJ,EAAQoM,KAAK8P,YAAYrE,OACnC3F,GAAMA,EAAExb,IAAMe,KAAKuhH,WAAW3wC,SAC/B,GACD,GACF,IAAKujF,EAAS,OAAOz0J,IAGrB,IAAImyE,EAAUsiF,EAAQxxI,OAClB1c,GAAMA,EAAEhH,IAAMe,KAAKuhH,WAAWtwC,QAC/B,GACD,GACF,IAAKY,EAAS,OAAOnyE,IAErB,IAAIszH,EAAMnhD,EAAQ9pE,OAClB,IAAKirH,EAAK,OAAOtzH,IAEjB,IAAIs4I,EAAgBr8G,IACjB,IAAKA,EAAQ5zB,OAAQ,OAAO,EAC5B,IAAImwI,EAAav8G,EAAQ5zB,OACzB,IAAKmwI,EAAWnwI,OAAQ,OAAO,EAC/BmwI,EAAWnwI,OAAOxG,KAAK,YAAa22I,EAAWj5I,IAC/C+4I,EAAaE,EAAWnwI,OAAO,EAGlCiwI,EAAahlB,GACb,IAAIilB,EAAShU,aAAY,WAClBz3G,GAAGqlD,EAAQ5yE,KAAOutB,GAAGqlD,EAAQ5yE,IAAIixF,YAClCg0C,cAAc+T,GAGjBjlB,EAAIzxH,KAAK,YAAaswE,EAAQ5yE,GACjC,GAAG,IACN,CAGHS,GAAS,GAEf,CAKA,YAAA01D,CAAazzC,GACVA,EAAWA,GAAY,CAAC,EACxB5hB,MAAMq1D,aAAazzC,GAGf3hB,KAAK80G,KAGN90G,KAAK80G,IAAI1/C,aAAazzC,EAAS4/F,WAErC,CAKA,UAAAqmC,GAMG,IAAIjmI,EAAW5hB,MAAM6nJ,aAIrB,OAFAjmI,EAAS4/F,WAAavhH,KAAK80G,IAAI8yC,aAExBjmI,CACV,oBClQH,MAAMuvI,EAAmB,EAAQ,OAIjCvxJ,EAAOC,QAAU,cAAuD,EASrE,WAAAE,CAAYo8B,EAAKC,GACdp8B,QAEAC,KAAKk8B,IAAMA,EACXl8B,KAAKyC,IAAM,2CACXzC,KAAKwD,MAhBH,KAAIqF,IAAWtI,GAAGgD,aAAaC,SAASqF,GAgB7BikB,CAAE,+BAEf9sB,KAAKm8H,cAAgB,KAErBn8H,KAAK4wJ,SAAW,EAInB,CAiCA,qBAAAzD,CAAsBhxH,GACnBn8B,KAAK80G,IAAM,CACRl1C,GAAI,CACD78C,KAAM,QACNvf,MAAOxD,KAAKwD,OAGflD,KAAM,OAEN6wC,OAAQA,GAGX,IAAIA,EAAS,CAAC,EAEd,OAAOnxC,KAAK80G,GACf,CAKA,OAAApyF,CAAQna,GACL,OAAO,IAAI/G,SAAQ,CAAC9B,EAASoK,KAC1B,IACI4mD,EADcnoD,EAAQoM,KAAK+7C,aACFA,aAG7BnoD,EAAQoM,KAAKi/F,WAAWljD,EAAWzxD,IAEnCS,GAAS,GAEf,mBCzFH,MAAMwxJ,EAAmB,EAAQ,OAIjCvxJ,EAAOC,QAAU,cAAoD,EASlE,WAAAE,CAAYo8B,EAAKC,GACdp8B,QAEAC,KAAKk8B,IAAMA,EACXl8B,KAAKyC,IAAM,wCACXzC,KAAKwD,MAhBH,KAAIqF,IAAWtI,GAAGgD,aAAaC,SAASqF,GAgB7BikB,CAAE,mCAEf9sB,KAAKm8H,cAAgB,KAErBn8H,KAAK4wJ,SAAW,EAInB,CAiCA,qBAAAzD,CAAsBhxH,GACnB,IAAI2G,EAAM,CACPsxH,QAAS,GAAGj4H,aAGfn8B,KAAK80G,IAAM,CACRl1C,GAAI,CACD3gE,GAAI6jC,EAAIsxH,QACRrxI,KAAM,QAGTziB,KAAM,OAEN6wC,OAAQA,EAERikB,aAAemsD,IACZpwE,EAAOikB,aAAamsD,EAAW,EAElCqmC,WAAY,IACFz2G,EAAOy2G,cAIpB,IAAIz2G,EAAS,CACVikB,aAAemsD,IACZA,EAAaA,GAAc,CAAC,EAE5B/0F,GAAGsW,EAAIsxH,SAASlgI,SAASqtF,EAAW6yC,SAAW,GAAG,EAGrDxM,WAAY,KAEF,CACJwM,QAAS5nI,GAAGsW,EAAIsxH,SAAS14G,YAAc,MAKhD,OAAO17C,KAAK80G,GACf,CAKA,OAAApyF,CAAQna,GACL,OAAO,IAAI/G,SAAQ,CAAC9B,EAASoK,KAEtB9J,KAAKuhH,WAAW6yC,SACjB5lJ,OAAO6qH,KACJ,UAAUr5H,KAAKuhH,WAAW6yC,QAAQxuJ,QAAQ,UAAW,MACrD,UAGNlG,GAAS,GAEf,CAKA,YAAA01D,CAAazzC,GACVA,EAAWA,GAAY,CAAC,EACxB5hB,MAAMq1D,aAAazzC,GAGf3hB,KAAK80G,KAGN90G,KAAK80G,IAAI1/C,aAAazzC,EAAS4/F,WAErC,CAKA,UAAAqmC,GAMG,IAAIjmI,EAAW5hB,MAAM6nJ,aAIrB,OAFAjmI,EAAS4/F,WAAavhH,KAAK80G,IAAI8yC,aAExBjmI,CACV,oBCjJH,MAAMuvI,EAAmB,EAAQ,OAEjC,IAAIpkI,EAAI,IAAIjkB,IAAWtI,GAAGgD,aAAaC,SAASqF,GAEhD,IAAIwrJ,EAAwC,CACzCjvI,iBAAkB,CAEfC,KAAM,MACNzL,MAAO,KAIbja,EAAOC,QAAU,cAA4CsxJ,EAO1D,WAAApxJ,CAAYo8B,EAAKC,EAAQuvH,GACtB3rJ,MAAMm8B,EAAKC,EAAQuvH,GAEnB1rJ,KAAKyC,IAAM,uCACXzC,KAAKwD,MAAQspB,EAAE,iBAEf9sB,KAAKs0J,aAAe,KAEpBt0J,KAAK4wJ,SAAW,GAKhB5wJ,KAAKu0J,WAAa,CAAC,CACtB,CAKA,qBAAApH,CAAsBhxH,GAKnB,OAJuB,MAAnBn8B,KAAKw0J,aACNx0J,KAAKw0J,WAAax0J,KAAKy0J,iBAAiBt4H,IAGpCn8B,KAAKw0J,UACf,CAKA,gBAAAC,CAAiBt4H,GACd,IAAI6mF,EAAmB5/G,MAAM40E,MAKzBl1C,EAAM,CACPpuB,YAAqB,aAHd,GAAGynB,gBAAiB6mF,MAiB1B7xE,EAAS,CACVujH,aAAc,KAEX,IAAIC,EAAaxjH,EAAOyjH,UACxB,GAAKD,EAAL,CAGA,IAEIE,EAFOF,EAAWnqE,gBAEJ7nF,QAAQjB,GAChBA,EAAEkoF,WAAU,SAAU7mE,GAC1B,MAA2B,SAApBA,EAAKrR,OAAO9F,OAAoBmX,EAAK24B,UAC/C,MACA,GACEm5G,GAELF,EAAWxnI,WAAW0nI,EAZC,CAYM,EAMhCA,OAASzzJ,IAEN,IAAIuzJ,EAAaxjH,EAAOyjH,UACxB,GAAKD,EAAL,CAGA,IAAIpuE,EAAOouE,EAAWnqE,gBACtB,KACW,MAARppF,GACAmlF,EAAK5jF,QAAQjB,GACHA,EAAEkoF,WAAU,SAAU7mE,GAC1B,MAA2B,SAApBA,EAAKrR,OAAO9F,OAAoBmX,EAAK24B,UAC/C,MACA95C,OAAS,GANf,CAWA,IAAI4U,EAAMxW,KAAK80J,gBAAgB34H,GAG/Bw4H,EAAW9nI,QAAQrW,EAAIopD,IAGvBppD,EAAIlW,KAAK,CACNy0J,MAAO,KAEJ5jH,EAAO0jH,QAAQ,EAElBznB,SAAW3iH,IAER0mB,EAAO6jH,OAAOvqI,EAAM,EAEvBrpB,KAAMA,IAITpB,KAAK4wJ,SAASxpJ,KAAKoP,EAtBV,CAZc,CAkCA,EAG1Bw+I,OAASvqI,IAENzqB,KAAK4wJ,SAAS5qJ,SAAQ,CAACtE,EAAGirB,KACnBjrB,EAAEk+D,GAAG3gE,IAAMwrB,GAAOzqB,KAAK4wJ,SAASr+H,OAAO5F,EAAO,EAAE,IAIvD,IAAIgoI,EAAaxjH,EAAOyjH,UACnBD,GAGLA,EAAWxnI,WAAWX,GAAG/B,GAAO,EAGnC+wG,UAAW,KACR,IAAIm5B,EAAaxjH,EAAOyjH,UACxB,GAAKD,EAAL,CAEA,IAAIvwD,EAAWuwD,EAAWnqE,gBAQtB0hE,EAAgB,GACpB9nD,EAASp+F,SAASk9B,IACfgpH,EAAc9kJ,KAAK87B,EAAE,IAExBgpH,EAAclmJ,SAASk9B,IACpByxH,EAAWxnI,WAAW+V,EAAE,IAI3BljC,KAAK4wJ,SAAW,EAnBO,CAmBL,EAGrBgE,QAAS,IACWpoI,GAAGsW,EAAIpuB,cAGrB1U,KAAK0rJ,YAAYnrJ,GAAGoJ,OAAOC,UACxB,IAAItK,MAAM,iBACV,CACG4B,QACG,mEACHjC,GAAI6jC,EAAIpuB,aAGP,MAMb8sF,UAAY+f,KAOTA,EAAaA,GAAc,CAAC,GACjBC,gBAAkBD,EAAWC,iBAAmB,GAG1CrwE,EAAOyjH,YAIxBzjH,EAAOqqF,YAGHja,EAAWC,gBAAgB5/G,OAAS,GACrC2/G,EAAWC,gBAAgBx7G,SAAStE,IACjCyvC,EAAO0jH,OAAOnzJ,EAAE,IAQtByvC,EAAOujH,eAGPvjH,EAAO0jH,SAAQ,EAGlBz/F,aAAezzC,IAEZ,IAAIszI,EAAatzI,EAAS4/F,YAAc5/F,EAExCwvB,EAAOqwD,UAAUyzD,EAAW,EAG/BrN,WAAY,KAMT,IAAIjmI,EAAW,CAAE6/F,gBAAiB,IAUlC,OAPAxhH,KAAK4wJ,SAAS5qJ,SAAS6qJ,IACFA,EAAGjJ,cAElBjmI,EAAS6/F,gBAAgBp6G,KAAKypJ,EAAGjJ,aACpC,IAGIjmI,CAAQ,GAIrB,MAAO,CACJi+C,GA/LO,CACP78C,KAAM,OACN9jB,GAAI6jC,EAAIpuB,WACR0B,SAAU,IA6LV9V,KA1LSihH,IACTA,EAAaA,GAAcvhH,KAAKuhH,WAChCpwE,EAAOqwD,UAAU+f,EAAW,EAyL5BnsD,aAAezzC,IACZwvB,EAAOikB,aAAazzC,EAAS,EAEhCimI,WAAY,IACFz2G,EAAOy2G,aAEjBz2G,OAAQA,EAEd,CAEA,eAAA2jH,CAAgB34H,GACb,IAmBI+4H,EAnBAlyC,EAAmB5/G,MAAM40E,MACzB0yE,EAAYjoJ,GAENA,EAAM,IAAMugH,EAGlBlgF,EAAM,CACPtsB,IAAKk0I,EAAS,OACdh2I,WAAYg2I,EAAS,iBACrB/7H,MAAO+7H,EAAS,SAChBr5I,MAAOq5I,EAAS,SAChByK,SAAUzK,EAAS,YACnB0K,SAAU1K,EAAS,YACnB2K,WAAY3K,EAAS,cACrBpE,UAAWoE,EAAS,aACpB4K,UAAW5K,EAAS,OACpB6K,aAAc7K,EAAS,WAKtBv5G,EAAS,CACVC,UAAW,CACR2jH,MAAO,OACP3nB,SAAU,QAGbooB,cAAe,KACZhpI,GAAGsW,EAAItsB,KAAKg0E,gBAAgB,GAAGA,gBAAgB,GAAGtN,OAClD1wD,GAAGsW,EAAItsB,KAAKg0E,gBAAgB,GAAGA,gBAAgB,GAAGK,MAAM,EAG3DiB,aAAe2pE,IACZ,IAAIltJ,EAAU,GACd,GAAIvI,KAAKs0J,eACN/rJ,GAAWvI,KAAKs0J,aAAahqI,UAAY,IAAIxrB,KAAK4iB,IACxC,CACJziB,GAAIyiB,EAAEziB,GACNoS,MAAOqQ,EAAEle,UA6BXiyJ,GAAc,CAEf,IAAIC,EAAW,CAAC,EAChB11J,KAAK4wJ,SAAS5qJ,SAASwQ,IACpB,IAAIw8F,EAAUxmF,GAAGhW,EAAIopD,GAAG3gE,IACxB,GAAI+zG,EAAS,CACV,IAAIrkF,EAAQqkF,EACRxoB,gBAAgB,GAChBA,gBAAgB,GACpBkrE,EAAS/mI,EAAM+sB,aAAc,CAChC,KAEHnzC,EAAUA,EAAQ5F,QAAQvD,IACfs2J,EAASt2J,EAAEH,KAEzB,CAEH,OAAOsJ,CAAO,EAGjBuP,QAAS,KACN,IAAIhC,EAAY9V,KAAK0rJ,YAAYnrJ,GAAGsU,WAAWiB,YAC3C8wD,EAAap6C,GAAGsW,EAAItsB,KAAKg0E,gBAAgB,GAAGA,gBAAgB,GAC5DmrE,EAAW/uF,EAAWl6C,gBAAgBA,gBAEtCiC,EAAQ3uB,KAAK41J,qBAAqBppI,GAAGsW,EAAInU,OAAO+sB,YACpD,GAAI/sB,EAAO,CACR,IAAItd,EAAQsd,EAAM+sB,SAASkrB,EAAY,CAAC,GAWpCl7D,EAAM,CAAC,EAsBX,OArBAA,EAAIijB,EAAM1M,YAAc5Q,EAExBsd,EAAMtC,YAAY3gB,EAAKoK,IAIX,IAATzE,GACS,MAATA,GACC3L,MAAMC,QAAQ0L,IAA0B,GAAhBA,EAAMzP,SAE/BkU,EAAU1B,SACPua,EAAM1M,WACN6K,EAAE,wBAMR6oI,EAASj1C,kBACT5qG,EAAUpB,WAAWihJ,GAEd7/I,EAAUzB,MACpB,CAMG,IAAIwhJ,EAAarpI,GAAGsW,EAAItsB,KACpBg0E,gBAAgB,GAChBA,gBAAgB,GAKpB,OAJAqrE,EAAWz7E,OAAO,iBAAkBttD,EAAE,wBACtC+oI,EAAWz7E,OAAO,WAAW,GAC7By7E,EAAWj/I,WAEJ,CACV,EAGH41E,YAAcspE,IACX,IAAInnI,EAAQ3uB,KAAK41J,qBAAqBE,GACtC,GAAKnnI,EAAL,CAEA,IAIGonI,EAFA3lE,EAFkBzhE,EAAMq9C,gBACAtc,YAAY/gC,EAAM7J,OAAOL,aACrB+wB,UAAUx1C,KAAKk8B,KAC3C85H,EAAiB5lE,EAAmBxwB,GAGvCo2F,EAAe/2J,GAAK6jC,EAAIzxB,MAGxB,IAAI4kJ,EAAcj2J,KAAK0rJ,YAAYnrJ,GAAGigB,iBAClCkI,GAAOA,EAAGpB,aAIV4uI,EAAqB,GACzBD,EAAYjwJ,SAAS0iB,IAClBwtI,EAAmB9uJ,KAAK,CAAEnI,GAAIypB,EAAGzpB,GAAIoS,MAAOqX,EAAGllB,OAAQ,IAI1D,IAAI2yJ,EAAkB,CACnB,CAAEl3J,GAAI,aAAcoS,MAAOyb,EAAE,sBAC7B,CACG7tB,GAAI,oBACJoS,MAAOyb,EAAE,qCAIXspI,EAAsB,CACvBrtJ,KAAM,QACNw9E,KAAM,CACH,CACG0F,KAAM,CACH,CACGhtF,GAAI6jC,EAAIqyH,SACRpyI,KAAM,QACNxa,QAAS2tJ,EACTx+F,YAAa5qC,EAAE,wBACf7rB,GAAI,CACDowC,SAAU,CAACwiG,EAAMC,KACd,IAAIuiB,EACDr2J,KAAK0rJ,YAAYnrJ,GAAGmnB,mBACjBmsH,GAEN,IACGwiB,GAC0B,SAAzBA,EAAW7uI,YACRmH,EAAM0X,aAkBV7Z,GAAGsW,EAAIuyH,YAAYn4E,WAjBpB,CACC,IAAI0O,EAAoB,GACxByqE,EAAW/uI,WACPgD,SACAtkB,SAAS0b,IACPkqE,EAAkBxkF,KAAK,CACpBnI,GAAIyiB,EAAEziB,GACNoS,MAAOqQ,EAAEle,OACV,IAERgpB,GAAGsW,EAAIuyH,YAAYj7E,OAChB,UACAwR,GAEHp/D,GAAGsW,EAAIuyH,YAAYz+I,UACnB4V,GAAGsW,EAAIuyH,YAAYxqE,MACtB,CAEA,IAKT,CACG5rF,GAAI6jC,EAAIuyH,WACRtyI,KAAM,QACN0jE,QAAQ,EACR/uB,YAAa5qC,EAAE,wBACfvkB,QAAS,CAAC,CAAEtJ,GAAI,EAAGoS,MAAO,uBAInC,CACGpS,GAAI6jC,EAAIsyH,SACRryI,KAAM,QACNxa,QAAS4tJ,EACTz+F,YAAa5qC,EAAE,wBACf7rB,GAAI,CACDowC,SAAU,CAACwiG,EAAMC,KACd,IAAIwiB,EAAO9pI,GAAGsW,EAAItsB,KAElB,GADA8/I,EAAKnpI,WAAWmpI,EAAK9rE,gBAAgB,IACzB,cAARqpD,EACDyiB,EAAKzpI,QAAQ,CAAC,EAAG,OACb,CACJ,IAAItkB,EACDvI,KAAK0rJ,YAAYnkI,eAAeD,WAC5BgD,SACAxrB,KAAI,SAAU4iB,GACZ,MAAO,CACJziB,GAAIyiB,EAAEziB,GACNoS,MAAOqQ,EAAEle,MAEf,KAEN0xJ,EAAkBl1J,KAAKO,GAAGyzB,iBACvB,GAAGmI,aAKU77B,KAAK,CAClBw0C,cAAc,EACdwxC,uBAAwB/9E,IAE3B2sJ,EAAgBj0J,GAAG,UAAWiI,IAC3BioC,EAAO8nF,eAAe/vH,EAAI,IAG7BotJ,EAAKzpI,QAAQqoI,EAAgBt1F,GAAI,GAEjC,IAAIw/E,EAAO5yH,GAAGsW,EAAIqyH,UAAUz5G,WACxB8vC,EACDxrF,KAAK0rJ,YAAYnrJ,GAAGmnB,mBAAmB03H,GACtC5zD,GACDr6C,EAAOolH,gBAAgB/qE,EAE7B,OAsBf,GAdiB,QAAb78D,EAAMlsB,MACPuzJ,EAAeztJ,QAAUytJ,EAAeztJ,SAAW,GACnDytJ,EAAeztJ,QAAQgpB,QAAQ,CAC5BtyB,GAAI,kBACJoS,MAAOyb,EAAE,qBAUX6B,EAAM0X,aAAc,CAErB,IAAI6oH,EAAkBvgI,EAAMtB,eAI5B4oI,EAAcA,EAAYtzJ,QAAQ+lB,GACxBA,EAAGpB,WAAWroB,IAAMiwJ,EAAgBjwJ,KAG9C,IAAIu3J,EAAYx2J,KAAK0rJ,YAAYnrJ,GAAGigB,iBAAiBkI,GAE9B,SAAjBA,EAAGlB,YACHkB,EAAGpB,YACHoB,EAAGpB,WAAWwkB,gBAAgBojH,KAKpC+G,EAAcA,EAAYt8I,OAAO68I,GAGjCN,EAAqB,GACrBD,EAAYjwJ,SAAS0iB,IAClBwtI,EAAmB9uJ,KAAK,CAAEnI,GAAIypB,EAAGzpB,GAAIoS,MAAOqX,EAAGllB,OAAQ,IAI1D2yJ,EAAgB/uJ,KAAK,CAClBnI,GAAI,oBACJoS,MAAOyb,EAAE,mCAGZipI,EAAaK,EAIbhmE,EAAqB,CAClB9vF,KAAM,WAAa,EAKzB,MACGy1J,EAAa,CACV92J,GAAI6jC,EAAIwjH,UACRvjI,KAAM,YACN0pE,MAAO,CACJ,CACGt1C,MAAO,SACPovC,KAAM,CACHyvE,EACA,CACGjzI,KAAM,QACNvf,MAAO,MAAMspB,EAAE,yBACf7rB,GAAI,CACDyxG,YAAa,WACO1yG,KAAK0sB,gBACKA,gBAEhB8gE,UAAU,QACxB,MAKZ,CAEGr2C,MAAO,QACPovC,KAAM,CACH6vE,EACA,CACGrzI,KAAM,QACNvf,MAAO,MAAMspB,EAAE,yBACf7rB,GAAI,CACDyxG,YAAa,WACV,IACG+jD,EADcz2J,KAAK0sB,gBACKA,gBAG3BF,GAAGsW,EAAIsyH,UAAUlhI,SAAS,cAE1BuiI,EAAWjpE,UAAU,SACxB,QAUrB,IAAI8oE,EAAO9pI,GAAGsW,EAAItsB,KAAKg0E,gBAAgB,GAOvC,GANA8rE,EAAKnpI,WAAWmpI,EAAK9rE,gBAAgB,IACrC8rE,EAAKzpI,QAAQkpI,EAAY,GAEzB3lE,EAAmB9vF,QAGdquB,EAAM0X,cAAgB1X,EAAMsyD,cAAe,CAG7C,IAAIy1E,EAAelqI,GAAGwpI,EAAe/2J,IAAI4qF,MAGzCpiF,YAAW,KACRknB,EAAMsyD,cAActyD,EAAO3uB,KAAKk8B,IAAKw6H,EAAc,CAChDhpG,UAAU,EAGVmyC,QAAQ,GACT,GACF,GACN,CAGoBy2D,EAAK9rE,gBAAgB,GAC3BK,OAGVirE,GAAU3kH,EAAOC,UAAU2jH,OA7Qb,CA6QoB,EAGzC7gI,SAAW9yB,IACRorB,GAAGsW,EAAInU,OAAOuF,SAAS9yB,EAAKwtB,SAE5B,IAAID,EAAQ3uB,KAAK41J,qBAAqBx0J,EAAKwtB,SAC3C,GAAID,EAAO,CACR,IAAIgoI,EAAa,KACdnqI,GAAGsW,EAAIqyH,UAAUjhI,SAAS9yB,EAAKiQ,OAC3BjQ,EAAKi0J,YACN7oI,GAAGsW,EAAIuyH,YAAYnhI,SAAS9yB,EAAKi0J,YAEpC,IAAID,EAAWh0J,EAAKg0J,UAAY,aAGhC,GAFA5oI,GAAGsW,EAAIsyH,UAAUlhI,SAASkhI,GAEV,cAAZA,EAA0B,CAC3B,IAAIwB,EAAex1J,EAAKiQ,MACpBm6E,EACDxrF,KAAK0rJ,YAAYnrJ,GAAGmnB,mBAAmBkvI,GACtCprE,GAAkBpqF,EAAKgkB,kBACxB+rB,EAAOolH,gBACJ/qE,EACApqF,EAAKgkB,iBAGd,GAICuJ,EAAM0X,aACPswH,IAEsB,SAAlBv1J,EAAKqgH,WACNj1F,GAAGsW,EAAIwjH,WAAW94D,UAAU,SAE5BmpE,MAEAnqI,GAAGsW,EAAIwjH,WAAW94D,UAAU,UAG5B/lF,YAAW,WAER,IAAIwiB,EAAU,CAAC,EACfA,EAAQ0E,EAAM1M,YAAc7gB,EAAKiQ,MACjCsd,EAAMuF,SAAS1H,GAAGsW,EAAIzxB,OAAQ4Y,EACjC,GAAG,IAGZ,GAGHssI,gBAAiB,CAACM,EAAUzxI,KACzBA,EACGA,GACAivI,EAAsCjvI,iBAIzC8vI,EAAgBjhI,WACb4iI,EAASvvI,WAAauvI,EAASvvI,WAAWgD,SAAW,IAExD4qI,EAAgBhhI,SAAS9O,EAAiB,EAG7CwiI,WAAY,KAGT,IAAI2N,EAAe/oI,GAAGsW,EAAIyyH,cAC1B,GAAIA,GAAgBA,EAAarlE,YAAa,CAC3C,IAAI9uF,EAAO,CAAC,EACZA,EAAKwtB,QAAUpC,GAAGsW,EAAInU,OAAO+sB,WAE7B,IAAIo7G,EAActqI,GAAGsW,EAAIzxB,OACrBsd,EAAQ3uB,KAAK41J,qBAAqBx0J,EAAKwtB,SA4B3C,OAbID,EAAM0X,cAGsC,SAAzC7Z,GAAGsW,EAAIwjH,WAAW50I,OAAOwgJ,cAf7B9wJ,EAAKiQ,MAAQmb,GAAGsW,EAAIqyH,UAAUz5G,WAC9Bt6C,EAAKi0J,WAAa7oI,GAAGsW,EAAIuyH,YAAY35G,WACrCt6C,EAAK0L,GAAK,MACV1L,EAAK2H,KAAO4lB,EAAMlsB,IAClBrB,EAAKg0J,SAAW5oI,GAAGsW,EAAIsyH,UAAU15G,WACjCt6C,EAAKqgH,UAAY,QACbyzC,IACD9zJ,EAAKgkB,iBAAmB8vI,EAAgBx5G,cAWxCt6C,EAAKiQ,MAAQsd,EAAM+sB,SAASo7G,EAAa,CAAC,GAC1C11J,EAAK0L,GAAK,MACV1L,EAAK2H,KAAO4lB,EAAMlsB,IAClBrB,EAAKqgH,UAAY,UAIhBrgH,CACV,CACG,OAAO,IACV,GA0EN,MAAO,CACJw+D,GAvEO,CACP3gE,GAAI6jC,EAAItsB,IACRuM,KAAM,SACNwjE,KAAM,CACH,CACG0F,KAAM,CACH,CAEGlpE,KAAM,QACNw+B,MAAOvhD,KAAK0rJ,YAAYnrJ,GAAGE,OAAO+S,gBAClChQ,MAAOspB,EAAE,QAEZ,CAEG/J,KAAM,QACNnX,KAAM,QACN8rD,YAAa5qC,EAAE,kBACf7tB,GAAI6jC,EAAInU,MACRohC,OAAQ,GACRxnD,QAAS4oC,EAAO26C,cAAa,GAC7B7qF,GAAI,CACDowC,SAAU,SAAU0K,GACjB5K,EAAOq7C,YAAYzwC,EACtB,IAGN,CAEGh5B,KAAM,QACNw+B,MAAOvhD,KAAK0rJ,YAAYnrJ,GAAGE,OAAO+S,gBAClChQ,MAAOspB,EAAE,OAMZ,CAAC,EAED,CAEG/J,KAAM,SACNgK,IAAK,eACL9tB,GAAI6jC,EAAIyyH,aACRx3I,KAAM,cACNhV,KAAM,OACNw4C,MAAO,GACPklC,QAAQ,EACRz5D,MAAO,WACJmkB,EAAOC,UAAUg8F,SAAStqG,EAAItsB,IACjC,KAIT,CAAC,IAmBJlW,KAfSiI,IACT,IAAK,IAAI26B,KAAKiO,EAAOC,UAClBD,EAAOC,UAAUlO,GAAK36B,EAAQ26B,IAAMiO,EAAOC,UAAUlO,GAGpD36B,EAAQnH,MAET+vC,EAAOjd,SAAS3rB,EAAQnH,KAG3B,EAMAwmJ,WAAY,IACFz2G,EAAOy2G,aAEjBz2G,OAAQA,EAEd,CAEA,oBAAAykH,CAAqBhnI,GAClB,OACG5uB,KAAK+sJ,aAAanlI,UAAUgH,IAC5B5uB,KAAKs0J,cAAc1sI,UAAUgH,IAC7B5uB,KAAK0rJ,YAAYnrJ,GAAGq5B,SACjB55B,KAAK0rJ,YAAYnrJ,GAAGue,eAAe8P,IAAY,CAAC,EAChD5uB,KAAK0rJ,YAAYnrJ,GAAGw5B,UAAU,CAAC,GAGxC,CASA,mBAAA0yH,CAAoBlkJ,EAASwuJ,GAC1B/2J,KAAK2vJ,UAAYoH,EAEjB,IAAIC,GAAY,EAgUhB,OA9TAh3J,KAAKuhH,WAAavhH,KAAKuhH,YAAc,CAAC,EACtCvhH,KAAKuhH,WAAWC,gBAAkBxhH,KAAKuhH,WAAWC,iBAAmB,GAKrExhH,KAAKuhH,WAAWC,gBAAgBx7G,SAAS8G,IAetC,IAAI6hB,EAAQ3uB,KAAK41J,qBAAqB9oJ,EAAG8hB,SACzC,IAAKD,EAAO,OAEZ,IAAItd,EAAQvE,GAAIuE,OAAOpS,IAAM6N,GAAIuE,MAEjC,OAAQA,GACL,IAAK,kBACFA,EAAQrR,KAAK0rJ,YAAYnrJ,GAAG6E,QAAQvC,WACpC,MACH,IAAK,kBACFwO,EAAQ,IAAI0G,KAMlB,GAAK4W,EAAM0X,eAAiB1X,EAAMm/B,QAA2B,SAAhBhhD,EAAG20G,UAAsB,CAUnE,MAAMj2B,EAAiBxrF,KAAK0rJ,YAAYnrJ,GAAGmnB,mBACxC5a,EAAGuE,OAEN,IAAKm6E,EAEF,YADAwrE,GAAY,GAWf,IAAI5xI,EAAmBplB,KAAK0rJ,YAAYnrJ,GAAGma,UACxC5N,EAAGsY,kBAEFA,GAAoBA,EAAiBxL,OACtCwL,EAAiBxL,MACbjX,QAAQjB,GAEO,iBAAVA,EAAEsqB,MACQ,qBAAVtqB,EAAEsqB,OAGPhmB,SAASojB,IACP,IAAIw9C,EACD5mE,KAAK0rJ,YAAYnkI,eAAeD,WAAWM,UACxCwB,EAAK/X,OAEPu1D,EAAWvgC,aACZjd,EAAK/X,MAAQu1D,EAAW/uD,OAAO7X,KAAK2vJ,WAEpCvmI,EAAK/X,MAAQrR,KAAK2vJ,UAAU/oF,EAAW3kD,YAGzB,qBAAbmH,EAAK4C,KACN5C,EAAK4C,KAAO,aAEZ5C,EAAK4C,KAAO,QACf,IAIT,IAAIirI,EACDzrE,EAAez1D,cAAc3Q,GAEhC,OAAQtY,EAAGsoJ,UAIR,IAAK,aACL,QAGG,GAFA/jJ,EAAQ4lJ,EAAqB3uI,YAEzBjX,EAID,GAAoB,SAAhBvE,EAAG20G,UAAsB,CAC1B,IAAIy1C,EACDD,EAAqB3vI,WAAWM,UAC7B9a,EAAGuoJ,YAGL6B,IACD7lJ,EAAQA,EAAM6lJ,EAAej1I,YACnC,MAAW5Q,EAAMpS,KACdoS,EAAQA,EAAMpS,IAKpB,OAAQ6N,EAAGA,IACR,IAAK,MACF,IAAKuE,EAAO,MAERsd,EAAM0X,cAGP0wH,EAAepoI,EAAM1M,YAAc,CAAC,EACpC80I,EAAepoI,EAAM1M,YAAYhjB,GAC9BoS,EAAMsd,EAAMtB,eAAephB,MAC9B8qJ,EAAepoI,EAAM1M,YAClB0M,EAAMtB,eAAephB,MACpBoF,EAAMsd,EAAMtB,eAAephB,MAG3B0iB,EAAMhN,SAAS4yB,aACZ5lB,EAAMiiB,aACPmmH,EAAepoI,EAAM1M,YAClB0M,EAAMiiB,WAAW3uB,YAChB5Q,EAAMsd,EAAMiiB,WAAW3uB,aAE1B0M,EAAMkiB,cACPkmH,EAAepoI,EAAM1M,YAClB0M,EAAMkiB,YAAY5uB,YACjB5Q,EAAMsd,EAAMkiB,YAAY5uB,cAIlC0M,EAAMtB,eACF/C,QACG5I,GACW,YAATA,EAAEjf,KAA8B,aAATif,EAAEjf,MAE9BuD,SAAS0b,IACPq1I,EAAepoI,EAAM1M,YAClBP,EAAEO,YACD5Q,EAAMqQ,EAAEO,WAAW,KAG7B80I,EAAepoI,EAAM1M,YAAc5Q,EAK5C,MAGH,IAAK,oBAIF,IAHA,IAAIurI,EAAY,GAEZua,EAAUF,EAAqBztI,iBAC5B2tI,GAAS,CAGb,OAAQF,EAAqBzvI,YAG1B,IAAK,SACFo1H,EAAUx1I,KAAK+vJ,EAAQl4J,IACvB,MAKH,IAAK,QAAS,CACX,IAAIi4J,EACDD,EAAqB3vI,WAAWM,UAC7B9a,EAAGuoJ,YAGT,IAAI/rH,EAAW6tH,EAAQD,EAAej1I,iBAEf,IAAZqnB,IACRA,EAAW6tH,EAAQD,EAAezpI,gBAE9B/nB,MAAMC,QAAQ2jC,GACfA,EAAWA,EAASxqC,KAAKmH,GACfA,EAAEhH,GAAKgH,EAAEhH,GAAKgH,IAEhBqjC,EAASrqC,KACjBqqC,EAAWA,EAASrqC,KAI1B29I,EAAY58I,KAAK0rJ,YAAYnrJ,GAAG8a,KAC7BuhI,EAAUjjI,OAAO2vB,IAGpB,KACH,EAGH6tH,EAAUF,EAAqBvtI,cAAcytI,EAChD,CAGA,GACQ,QADArqJ,EAAGA,GAEL,GAAwB,OAApB6hB,EAAML,WAAqB,CAC5B,IAAI8oI,EAAU,GACdxa,EAAU52I,SAASC,IAChB,IAAIoxJ,EACDr3J,KAAK0rJ,YAAYnrJ,GAAGma,UAAUq8I,GACjCM,EAAoB1oI,EAAM1M,YAAchc,EACxCmxJ,EAAQhwJ,KAAKiwJ,EAAoB,IAEpCN,EAAezH,WAAa8H,CAC/B,MACGL,EAAepoI,EAAM1M,YAAc26H,EAI5C,MAEH,IAAK,oBAKF,GAJAA,EAAY,GAEZvrI,EAAQ4lJ,EAAqBztI,iBAEzBnY,EAID,GACsC,SAAnC4lJ,EAAqBzvI,YACJ,SAAhB1a,EAAG20G,WAAwB30G,EAAGuoJ,WAChC,CACC,IAAI6B,EACDD,EAAqB3vI,WAAWM,UAC7B9a,EAAGuoJ,iBAKc,KAFvB/rH,EAAWj4B,EAAM6lJ,EAAej1I,eAG7BqnB,EAAWj4B,EAAM6lJ,EAAezpI,gBAC5B/nB,MAAMC,QAAQ2jC,KACfA,EAAWA,EAAS,IAEnBA,EAASrqC,KAAIqqC,EAAWA,EAASrqC,KAGxCoS,EAAQi4B,CACX,MAGK,GAAuC,UAAnC2tH,EAAqBzvI,WAAwB,CAMnD,IAAI8vI,EACA3oI,EAAMiiB,WACP0mH,EAAS3oI,EAAMiiB,WAAW3uB,WAClB0M,EAAMkiB,cACdymH,EAAS3oI,EAAMkiB,YAAY5uB,YAE1Bq1I,GAAUjmJ,EAAMimJ,GACjBjmJ,EAAQA,EAAMimJ,GACNjmJ,EAAMpS,KACdoS,EAAQA,EAAMpS,GAEpB,CAKK,QADA6N,EAAGA,KAELiqJ,EAAepoI,EAAM1M,YAAc5Q,GAM/C2lJ,GAAY,CAGf,KAGW,QADAlqJ,EAAGA,KAELiqJ,EAAepoI,EAAM1M,YAAc5Q,GAIzC2lJ,GAAY,CAQf,IAGIA,CAKV,CAMA,OAAAt0I,CAAQna,GAGL,OAFAvI,KAAK2vJ,UAAYpnJ,EAAQnH,KAElB,IAAII,SAAQ,CAAC9B,EAASoK,KAE1B,GADgB9J,KAAKysJ,oBAAoB,CAAC,EAAGlkJ,EAAQnH,MAG9C,CAEJ,IAAI2wB,EAAKxpB,EAAQoM,KAAK4S,eACtB,IAAKwK,EAAI,OAAOryB,IAEJqyB,EAAG1lB,MAEX+yE,OAAO72E,EAAQnH,KAAKnC,GAAIsJ,EAAQnH,MAChCiG,KAAK3H,GACL4H,OAAOnG,IACLnB,KAAK0rJ,YAAYnrJ,GAAGoJ,OAAOC,UAAUzI,EAAK,CACvCD,QACG,sDACHjC,GAAIsJ,EAAQnH,KAAKnC,GACjBmC,KAAMmH,EAAQnH,OAEjB0I,EAAO3I,EAAI,GAEpB,MAnBGzB,GAmBH,GAEN,CAIA,UAAA60D,CAAWzvC,GACR/kB,MAAMw0D,WAAWzvC,GACjB9kB,KAAKwwJ,iBAAiB1rI,EACzB,CAIA,gBAAA0rI,CAAiB1rI,GAEV9kB,KAAKs0J,eACNt0J,KAAKu0J,WAAWv0J,KAAKs0J,aAAar1J,IAAMe,KAAKuhH,YAGhDvhH,KAAKs0J,aAAexvI,EAGpB9kB,KAAKw0J,WAAa,KAGlBx0J,KAAKuhH,WAAavhH,KAAKu0J,WAAWv0J,KAAKs0J,aAAar1J,KAAO,CAAC,CAC/D,CAKA,YAAAm2D,CAAazzC,GAOV,GANAA,EAAWA,GAAY,CAAC,EAExB5hB,MAAMq1D,aAAazzC,GAIfA,EAAS41I,eACVv3J,KAAKs0J,aAAet0J,KAAK0rJ,YAAYnrJ,GAAGoL,WACrCgW,EAAS41I,qBAIZ,GAAI51I,EAAS61I,gBAAiB,CAC3B,IAAIlD,EAAet0J,KAAK0rJ,YAAYjnI,YAAYjB,WAC7C7B,EAAS61I,iBAEZx3J,KAAKs0J,aAAeA,CACvB,CAICt0J,KAAKw0J,YAGNx0J,KAAKw0J,WAAWp/F,aAAazzC,EAEnC,CAKA,UAAAimI,GAMG,IAAIjmI,EAAW5hB,MAAM6nJ,aAKrB,OAHAjmI,EAAS4/F,WAAavhH,KAAKw0J,WAAW5M,aACtCjmI,EAAS61I,gBAAkBx3J,KAAKs0J,aAAazwI,aAEtClC,CACV,CASA,OAAAgrI,GACG,IAAI0B,EAAW,GAoBf,OAnBeruJ,KAAKuhH,YAAYC,iBAAmB,IAC1Cx7G,SAAS8G,IACf,IAAI6hB,EAAQ3uB,KAAK41J,qBAAqB9oJ,EAAG8hB,SACzC,IAAKD,EAAO,OACZ,IAAKA,EAAM0X,cAAiC,UAAjBv5B,EAAG20G,UAAuB,OAGrD,IAAI70F,EAAK5sB,KAAK0rJ,YAAYnrJ,GAAGmnB,mBAAmB5a,EAAGuE,OAC/Cub,GAAI7E,aAAe6E,GAAI1G,eAAe4B,aAG1CumI,EAASjnJ,KACN,IAAI5F,SAAS9B,IACVktB,EAAG3rB,GAAG,mBAAmB,KACtBvB,GAAS,GACV,IAEP,IAEG8B,QAAQsY,IAAIu0I,EACtB,cC50CqE1uJ,EAAOC,QAAkS,SAASP,EAAEwgC,EAAEqoB,EAAExmD,GAAG,SAAS+yB,EAAEr1B,EAAEod,GAAG,IAAI0rC,EAAE9oD,GAAG,CAAC,IAAIygC,EAAEzgC,GAAG,CAAmE,GAAG8G,EAAE,OAAOA,EAAE9G,GAAE,GAAI,IAAIsiB,EAAE,IAAIpiB,MAAM,uBAAuBF,EAAE,KAAK,MAAMsiB,EAAEniB,KAAK,mBAAmBmiB,CAAC,CAAC,IAAIxa,EAAEghD,EAAE9oD,GAAG,CAACQ,QAAQ,CAAC,GAAGigC,EAAEzgC,GAAG,GAAG+K,KAAKjD,EAAEtH,SAAQ,SAASP,GAAoB,OAAOo1B,EAAlBoL,EAAEzgC,GAAG,GAAGC,IAAgBA,EAAE,GAAE6H,EAAEA,EAAEtH,QAAQP,EAAEwgC,EAAEqoB,EAAExmD,EAAE,CAAC,OAAOwmD,EAAE9oD,GAAGQ,OAAO,CAA2C,IAA1C,IAAIsG,OAAE,EAA4C9G,EAAE,EAAEA,EAAEsC,EAAEE,OAAOxC,IAAIq1B,EAAE/yB,EAAEtC,IAAI,OAAOq1B,CAAC,CAAvb,CAAyb,CAAC,EAAE,CAAC,SAASmzD,EAAQjoF,EAAOC,GAAS,aAAa,IAAI63J,EAAS7vE,EAAQ,iBAAiB6vE,SAASA,EAASC,oBAAoB,SAASC,GAAO,OAAOj6G,KAAKC,MAAY,KAANg6G,EAAW,EAAEh4J,EAAOC,QAAQ63J,CAAQ,EAAE,CAACG,cAAc,IAAI,EAAE,CAAC,SAAShwE,EAAQjoF,EAAOC,GAAS,aAAa,IAAIi4J,EAAa,WAAW,SAASC,EAAiB5+F,EAAOm2C,GAAO,IAAI,IAAInpG,EAAE,EAAEA,EAAEmpG,EAAMztG,OAAOsE,IAAI,CAAC,IAAI6xJ,EAAW1oD,EAAMnpG,GAAG6xJ,EAAWC,WAAWD,EAAWC,aAAY,EAAMD,EAAWE,cAAa,EAAQ,UAAUF,IAAWA,EAAWG,UAAS,GAAKz4J,OAAO04J,eAAej/F,EAAO6+F,EAAWt1J,IAAIs1J,EAAW,CAAC,CAAC,OAAO,SAASK,EAAYC,EAAWC,GAAuI,OAAvHD,GAAWP,EAAiBM,EAAYluJ,UAAUmuJ,GAAeC,GAAYR,EAAiBM,EAAYE,GAAoBF,CAAW,CAAC,CAAte,GAA0nB,IAAIX,EAAS7vE,EAAQ,cAAkB2wE,EAAe,iBAAqBC,EAAK,CAACC,UAAU,SAAmB/zG,GAAU,MAAkB,SAAXA,EAAkB,OAAO,KAAK,EAAEg0G,gBAAgB,SAAyBh0G,GAAU,MAAkB,SAAXA,EAAkB,WAAW,cAAc,EAAEi0G,gBAAgB,SAAyBjvC,GAAU,OAAOA,EAAS9jH,QAAQ,2BAA2B,MAAM,WAAW,EAAEgzJ,gBAAgB,SAAyBlvC,EAAShlE,GAA2G,OAA3B,SAAXA,EAAkB,aAAa,QAAqB,UAA9F8zG,EAAKG,gBAAgBjvC,EAA+F,GAAG/pH,EAAOC,QAAQ,WAAW,SAASi5J,EAAWttB,EAAI7hB,EAASovC,EAAap0G,IAA3xB,SAAyBqV,EAASq+F,GAAa,KAAKr+F,aAAoBq+F,GAAc,MAAM,IAAIW,UAAU,oCAAqC,EAAspBC,CAAgBh5J,KAAK64J,GAAY74J,KAAK0pH,SAASA,EAAS1pH,KAAKmR,OAAOqnJ,EAAKC,UAAU/zG,GAAU1kD,KAAKurI,IAAIA,EAAIvrI,KAAK84J,aAAaA,EAAa94J,KAAKi5J,aAAaT,EAAKE,gBAAgBh0G,GAAU1kD,KAAKk5J,YAAuB,SAAXx0G,EAAkB,WAAW,QAAQ,IAAIy0G,EAAaX,EAAKI,gBAAgBlvC,EAAShlE,GAAU1kD,KAAKo5J,QAAQN,EAAaK,IAAen5J,KAAKq5J,mBAAmBP,EAAaK,EAAa,CAAqiF,OAApiFtB,EAAagB,EAAW,CAAC,CAACp2J,IAAI,qBAAqB4O,MAAM,SAA4BynJ,EAAaQ,GAAc,IAAIC,EAASv5J,KAAKmR,OAAO,UAAUnR,KAAKi5J,aAAa,YAAgBztB,EAAIstB,EAAaS,GAAU,IAAI/tB,EAAI,CAAC,IAAIrqI,EAAI,IAAI7B,MAAM,qCAAoI,MAA/F6B,EAAIiiC,WAAW,CAACm2H,SAASA,EAASD,aAAaA,EAAaE,MAAM/5J,OAAOD,KAAKQ,KAAKurI,IAAIiuB,QAAcr4J,CAAG,CAAkM,IAAjM,IAAIi4J,EAAQ3B,EAASgC,QAAQhC,EAASiC,QAAQluB,IAAUmuB,EAAcP,EAAQn1E,qBAAqB,iBAAiB,GAAO21E,EAAmBD,EAAc11E,qBAAqB,gBAAwB/9E,EAAE,EAAEgB,EAAE0yJ,EAAmBh4J,OAAOsE,EAAEgB,EAAEhB,IAAKyzJ,EAAc96D,YAAY+6D,EAAmB1zJ,IAAuC,OAAnC4yJ,EAAaQ,GAAcF,EAAeA,CAAO,GAAG,CAAC32J,IAAI,gBAAgB4O,MAAM,WAAyB,IAAIwoJ,EAAS75J,KAAKo5J,QAAQn1E,qBAAqB,gBAAgB,OAAOv+E,MAAMwE,UAAU4vJ,OAAO3vJ,KAAK0vJ,GAAS,SAAS9zG,EAAIg0G,GAAc,IAAI96J,EAAG86J,EAAajhE,aAAa,MAAM,MAAG,cAAc59E,KAAKjc,GAAYy+C,KAAKqI,IAAIA,EAAI9lC,SAAShhB,EAAGiqD,OAAO,GAAG,KAAYnD,CAAG,GAAE,EAAE,GAAG,CAACtjD,IAAI,mBAAmB4O,MAAM,SAA0B2oJ,EAAYC,GAAW,IAAIC,EAAel6J,KAAK84J,aAAa,uBAA2BqB,EAAYD,EAAej2E,qBAAqB,WAA0I,IAAvGv+E,MAAMwE,UAAU2rF,KAAK1rF,KAAKgwJ,GAAY,SAAS7tB,GAAK,OAAOA,EAAIxzC,aAAa,eAAemhE,CAAS,IAAG,CAA+B,IAAIG,EAAMF,EAAej2E,qBAAqB,SAAS,GAAOo2E,EAAOH,EAAel+I,cAAc,WAAWq+I,EAAOC,aAAa,KAAKD,EAAOpkE,aAAa,cAAc+jE,GAAaK,EAAOpkE,aAAa,YAAYgkE,GAAWG,EAAM/9I,YAAYg+I,EAAnP,CAA0P,GAAG,CAAC53J,IAAI,eAAe4O,MAAM,SAAsBkpJ,EAAUr/D,EAAUh1F,GAAS,MAAHA,IAASA,EAAE,GAAE,IAAIs0J,EAAkB,IAAJt0J,EAAMq0J,EAAUA,EAAW,IAAIr0J,EAAE,IAASu0J,EAAUz6J,KAAKmR,OAAO,UAAUqpJ,EAAc,GAA8B,MAA3Bx6J,KAAKurI,IAAIiuB,MAAMiB,GAAkB,OAAOz6J,KAAK06J,aAAaH,EAAUr/D,EAAUh1F,EAAE,GAAG,IAAI0hE,EAAM,CAACh8D,KAAK6uJ,EAAUr5J,KAAK85F,EAAU3yF,QAAQ,CAACoyJ,QAAO,IAAO36J,KAAKurI,IAAI/mD,KAAK5c,EAAMh8D,KAAKg8D,EAAMxmE,KAAKwmE,EAAMr/D,SAAS,IAAI0xJ,EAAUO,EAAc50J,QAAQ2yJ,EAAe,MAAMv4J,KAAK46J,iBAAiB,SAASX,EAAUA,GAAW,IAAIN,EAAc35J,KAAKo5J,QAAQn1E,qBAAqB,iBAAiB,GAAOo2E,EAAOr6J,KAAKo5J,QAAQp9I,cAAc,gBAAgBq+I,EAAOC,aAAa,KAAK,IAAIO,EAAO76J,KAAK86J,gBAAgB,EAAoP,OAAlPT,EAAOpkE,aAAa,KAAK,MAAM4kE,GAAQR,EAAOpkE,aAAa,OAAO,6EAA6EokE,EAAOpkE,aAAa,SAASj2F,KAAKk5J,YAAY,IAAIsB,GAAeb,EAAct9I,YAAYg+I,GAAeQ,CAAM,KAAYhC,CAAU,CAA7/F,EAAggG,EAAE,CAAC,aAAa,IAAI,EAAE,CAAC,SAASjxE,EAAQjoF,EAAOC,GAAS,aAAaD,EAAOC,QAAQ,CAACm7J,YAAY,SAAqBC,EAAI/iE,GAAM,OAAO,8FAA8FA,EAAK,GAAG,SAASA,EAAK,GAAG,m2BAAm2B+iE,EAAI,6jBAA6jB/iE,EAAK,GAAG,SAASA,EAAK,GAAG,2WAA2WryF,QAAQ,SAAS,GAAG,EAAEq1J,oBAAoB,SAA6BD,EAAI/iE,GAAM,OAAO,qNAAqNA,EAAK,GAAG,SAASA,EAAK,GAAG,yoBAAyoB+iE,EAAI,8PAA8P/iE,EAAK,GAAG,SAASA,EAAK,GAAG,2gBAA2gBryF,QAAQ,SAAS,GAAG,EAAEs1J,gBAAgB,SAAyBF,EAAI/iE,EAAKkjE,GAAQ,OAAO,kRAAkRH,EAAI,6cAA6cG,EAAOnrG,EAAE,QAAQmrG,EAAOlrG,EAAE,6BAA6BgoC,EAAK,GAAG,SAASA,EAAK,GAAG,86CAA86CryF,QAAQ,SAAS,GAAG,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,SAASgiF,EAAQjoF,EAAOC,GAAS,aAAgM,IAAIw7J,EAAQxzE,EAAQ,aAAiBjE,EAAUiE,EAAQ,UAAUjE,UAAc03E,EAAczzE,EAAQ,UAAUyzE,cAAkBC,EAAO1zE,EAAQ,YAAgB6vE,EAAS,CAAC,EAA0HA,EAASj8H,SAAS,CAAC+/H,WAAW,SAAoBC,GAAM,OAAIA,EAAK77J,QAA6B67J,EAAK77J,OAAyB,IAA7C,WAAwD,EAAE6oF,OAAO4yE,GAAxQ,SAAgB9uB,GAAK,OAAnVj7H,EAAmX,SAAak7H,GAAO,MAAS,MAAND,EAAkBC,EAAaA,EAAMD,EAAI,GAAvb7pI,EAAiX,SAArXiJ,EAAkX,CAAC,GAArVjM,OAAO04J,eAAezsJ,EAAIjJ,EAAI,CAAC4O,MAAMA,EAAM2mJ,YAAW,EAAKC,cAAa,EAAKC,UAAS,IAAYxsJ,EAAIjJ,GAAK4O,EAAa3F,EAA/K,IAAyBA,EAAIjJ,EAAI4O,CAAqb,IAAiKqzC,SAAS,OAAO+2G,WAAW,CAACxqI,MAAM,IAAI47B,IAAI,MAAM4qG,EAASiE,aAAa,WAAoD,IAAzC,IAAIC,EAAO,CAAC,EAAMjwJ,OAAI,EAAOlM,OAAK,EAAe0G,EAAE,EAAEA,EAAET,UAAU7D,OAAOsE,GAAG,EAAE,CAACwF,EAAIjG,UAAUS,GAAG1G,EAAKC,OAAOD,KAAKkM,GAAK,IAAI,IAAIq7B,EAAE,EAAEA,EAAEvnC,EAAKoC,OAAOmlC,GAAG,EAAG40H,EAAOn8J,EAAKunC,IAAIr7B,EAAIlM,EAAKunC,GAAI,CAAC,OAAO40H,CAAM,EAAElE,EAASiC,QAAQ,SAASkC,GAAiC,OAAlB,IAAIP,GAAuBQ,kBAAkBD,EAAQ,EAAEnE,EAASqE,WAAW,SAASrnI,GAAG,IAAI,QAAOjnB,IAAJinB,EAAe,OAAiB,OAAOsnI,mBAAmBC,OAAOvE,EAASwE,cAAcxnI,IAAI,CAAC,MAAMp1B,GAAG,IAAI8B,EAAI,IAAI7B,MAAM,OAA0F,MAAnF6B,EAAIiiC,WAAWhiC,KAAKqzB,EAAEtzB,EAAIiiC,WAAW84H,YAAY,kCAAwC/6J,CAAG,CAAC,EAAEs2J,EAAS0E,WAAW,SAAS1nI,GAAG,OAAO2nI,SAASjzJ,mBAAmBsrB,GAAG,EAAEgjI,EAASgC,QAAQ,SAASp0E,EAAIg3E,GAAoE,OAA3C,IAAI14E,EAAU,CAAC04E,aAAaA,IAA6Bx4E,gBAAgBwB,EAAI,WAAW,EAAEoyE,EAAS6E,QAAQ,CAAC,IAAI,QAAQ,IAAI,SAAS,IAAI,OAAO,IAAI,QAAQ,IAAIC,EAAiB,sCAAsC9E,EAAS+E,aAAa,SAASn3E,GAAK,OAAOA,EAAIz/E,QAAQ22J,EAAiB,OAAO,EAAE9E,EAASgF,eAAeh9J,OAAOD,KAAKi4J,EAAS6E,SAASx9J,KAAI,SAAS49J,GAAS,IAAIC,EAAUlF,EAAS6E,QAAQI,GAAS,MAAM,CAACE,OAAO,IAAI3hJ,OAAOw8I,EAAS+E,aAAaG,GAAW,KAAKE,KAAK,IAAI5hJ,OAAOw8I,EAAS+E,aAAaE,GAAS,KAAKzrI,MAAM0rI,EAAU9vG,IAAI6vG,EAAQ,IAAGjF,EAASqF,WAAW,SAASpxG,GAAqB,IAAb,IAAIhqD,OAAE,EAAewE,EAAE,EAAEgB,EAAEuwJ,EAASgF,eAAe76J,OAAOsE,EAAEgB,EAAEhB,IAAKxE,EAAE+1J,EAASgF,eAAev2J,GAAGwlD,EAAOA,EAAO9lD,QAAQlE,EAAEk7J,OAAOl7J,EAAEmrD,KAAK,OAAOnB,CAAM,EAAE+rG,EAASsF,WAAW,SAASrxG,GAA2B,iBAATA,IAAmBA,EAAOA,EAAOnkD,YAAwB,IAAb,IAAI7F,OAAE,EAAewE,EAAE,EAAEgB,EAAEuwJ,EAASgF,eAAe76J,OAAOsE,EAAEgB,EAAEhB,IAAKxE,EAAE+1J,EAASgF,eAAev2J,GAAGwlD,EAAOA,EAAO9lD,QAAQlE,EAAEm7J,KAAKn7J,EAAEuvB,OAAO,OAAOy6B,CAAM,EAAE+rG,EAAS/8I,UAAU,SAAShP,GAAK,OAAO/E,KAAKiE,MAAMjE,KAAKC,UAAU8E,GAAK,EAAE+rJ,EAASuF,aAAa,SAASC,GAAQ,OAAOA,EAAOnD,QAAO,SAAS51J,EAAOg5J,GAAgD,OAAzCx3J,MAAMwE,UAAU9C,KAAKuoC,MAAMzrC,EAAOg5J,GAAch5J,CAAM,GAAE,GAAG,EAAE,IAAIi5J,EAAY,IAAIliJ,OAAOnJ,OAAOsrJ,aAAa,KAAK,KAA8U,SAASC,EAAoB90J,GAAS,IAAIpH,EAAI,IAAIm6J,EAAOgC,gBAAgB,WAAW/0J,EAAQozB,QAAQ,sBAAsBpzB,EAAQy/C,UAAsN,MAA5M7mD,EAAIiiC,WAAW,CAACnkC,GAAG,uBAAuBsJ,EAAQy/C,SAASk0G,YAAY,WAAW3zJ,EAAQozB,QAAQ,sBAAsBpzB,EAAQy/C,SAASwrF,OAAOjrI,EAAQirI,OAAO7mH,MAAMpkB,EAAQokB,MAAMgP,QAAQpzB,EAAQozB,SAAex6B,CAAG,CAA1qBs2J,EAASwE,cAAc,SAASxnI,GAAG,OAAOA,EAAE7uB,QAAQu3J,EAAY,IAAI,EAAE1F,EAAS8F,aAAa,SAASC,EAAMn7H,GAA4C,IAAnC,IAAIo7H,EAAW,GAAOnwJ,OAAM,EAA0C,OAA5BA,EAAMkwJ,EAAME,KAAKr7H,KAAiBo7H,EAAWr2J,KAAK,CAAC81J,MAAM5vJ,EAAM6tJ,OAAO7tJ,EAAMqf,QAAQ,OAAO8wI,CAAU,EAAEhG,EAASkG,aAAa,SAASjyJ,GAAK,OAAOjM,OAAOD,KAAKkM,GAAK9J,MAAM,EAAoW61J,EAASjtG,SAAS,SAASgpF,EAAO73G,EAAQhP,GAAO,IAAI,IAAIzmB,EAAEymB,EAAMzlB,EAAEssI,EAAO5xI,OAAOsE,EAAEgB,EAAEhB,IAAwB,GAAVstI,EAAOttI,GAAWmL,QAAQ,KAAKsqB,EAAQ,IAAK,OAAOz1B,EAAGm3J,EAAoB,CAACr1G,SAAS,QAAQrsB,QAAQA,EAAQ63G,OAAOA,EAAO7mH,MAAMA,GAAO,EAAE8qI,EAASltG,QAAQ,SAASipF,EAAO73G,EAAQhP,GAAuC,IAAhC,IAAI3gB,EAAMwnI,EAAO1tI,MAAM,EAAE6mB,GAAezmB,EAAE8F,EAAMpK,OAAO,EAAEsE,GAAG,EAAEA,IAAI,CAAC,IAAIs1J,EAAKxvJ,EAAM9F,GAAG,GAAqC,IAAlCs1J,EAAKnqJ,MAAM7J,QAAQ,IAAIm0B,KAAiE,IAAnD,CAAC,IAAI,KAAKn0B,QAAQg0J,EAAKnqJ,MAAMsqB,EAAQ/5B,OAAO,IAAU,OAAOsE,CAAE,CAACm3J,EAAoB,CAACr1G,SAAS,OAAOrsB,QAAQA,EAAQ63G,OAAOA,EAAO7mH,MAAMA,GAAO,EAAEhtB,EAAOC,QAAQ63J,EAASA,EAASmG,OAAOh2E,EAAQ,YAAY6vE,EAASoG,cAAcj2E,EAAQ,mBAAmB,EAAE,CAAC,WAAW,EAAE,YAAY,EAAE,mBAAmB,GAAG,WAAW,GAAGk2E,OAAO,KAAK,EAAE,CAAC,SAASl2E,EAAQjoF,EAAOC,GAAS,aAAa,IAAIi4J,EAAa,WAAW,SAASC,EAAiB5+F,EAAOm2C,GAAO,IAAI,IAAInpG,EAAE,EAAEA,EAAEmpG,EAAMztG,OAAOsE,IAAI,CAAC,IAAI6xJ,EAAW1oD,EAAMnpG,GAAG6xJ,EAAWC,WAAWD,EAAWC,aAAY,EAAMD,EAAWE,cAAa,EAAQ,UAAUF,IAAWA,EAAWG,UAAS,GAAKz4J,OAAO04J,eAAej/F,EAAO6+F,EAAWt1J,IAAIs1J,EAAW,CAAC,CAAC,OAAO,SAASK,EAAYC,EAAWC,GAAuI,OAAvHD,GAAWP,EAAiBM,EAAYluJ,UAAUmuJ,GAAeC,GAAYR,EAAiBM,EAAYE,GAAoBF,CAAW,CAAC,CAAte,GAA0nB,IAAIX,EAAS7vE,EAAQ,eAAmBm2E,EAAQtG,EAASoG,cAAkB/0B,EAAc,WAAW,SAASA,IAAoD,GAAjT,SAAyB/uE,EAASq+F,GAAa,KAAKr+F,aAAoBq+F,GAAc,MAAM,IAAIW,UAAU,oCAAqC,CAA8HC,CAAgBh5J,KAAK8oI,GAAkBrjI,UAAU7D,OAAO,EAAG,MAAM,IAAItC,MAAM,2GAA2GU,KAAKg+J,SAAS,CAAC,EAAEh+J,KAAKi+J,QAAQ,GAAGj+J,KAAKm9F,WAAW,CAAC,EAAE,CAAkyG,OAAjyG06D,EAAa/uB,EAAc,CAAC,CAACrmI,IAAI,eAAe4O,MAAM,SAAsB1R,GAA2C,OAAnCK,KAAKi+J,QAAQ72J,KAAK22J,EAAQp+J,IAAgBK,IAAI,GAAG,CAACyC,IAAI,aAAa4O,MAAM,SAAoB9I,GAAS,IAAI88D,EAAMrlE,KAAkZ,OAA7YA,KAAKuI,QAAQA,EAAQ9I,OAAOD,KAAKi4J,EAASj8H,UAAUx1B,SAAQ,SAASvD,GAAK,IAAI2lC,EAAaqvH,EAASj8H,SAAS/4B,GAAK4iE,EAAM5iE,GAAyB,MAApB4iE,EAAM98D,QAAQ9F,GAAW4iE,EAAM98D,QAAQ9F,GAAK2lC,CAAY,IAAsB,SAAhBpoC,KAAK0kD,UAAmC,SAAhB1kD,KAAK0kD,WAAmB1kD,KAAKk+J,eAAep1B,EAAcq1B,eAAen+J,KAAK0kD,WAAU1kD,KAAKk+J,eAAel+J,KAAKuI,QAAQ21J,gBAAgBl+J,KAAKk+J,eAAel+J,KAAKuI,QAAQ61J,aAAa,GAAUp+J,IAAI,GAAG,CAACyC,IAAI,UAAU4O,MAAM,SAAiBk6H,GAAK,GAAGA,EAAI8yB,UAAW,MAAM,IAAI/+J,MAAM,iEAA8E,OAAbU,KAAKurI,IAAIA,EAAWvrI,IAAI,GAAG,CAACyC,IAAI,cAAc4O,MAAM,SAAqBq4G,GAAU,IAAI40C,EAAYt+J,KAAKu+J,oBAAoB70C,GAAU40C,EAAY1zJ,QAAQ5K,KAAKg+J,SAASt0C,GAAU40C,CAAW,GAAG,CAAC77J,IAAI,UAAU4O,MAAM,WAAmBrR,KAAKw+J,eAAex+J,KAAKk+J,eAAeO,kBAAkBz+J,KAAKurI,IAAI,GAAG,CAAC9oI,IAAI,SAAS4O,MAAM,WAAkB,IAAIqtJ,EAAO1+J,KAAyyC,OAApyCA,KAAKi+J,QAAQj+J,KAAKk+J,eAAeS,YAAY7/J,KAAI,SAAS8/J,GAAgB,OAAOA,GAAgB,IAAGjlJ,OAAO3Z,KAAKi+J,SAASj+J,KAAKuI,QAAQvI,KAAKi+J,QAAQnE,QAAO,SAASvxJ,EAAQ5I,GAAQ,OAAOA,EAAOk/J,mBAAmBt2J,EAAQm2J,EAAO,GAAE1+J,KAAKuI,SAASvI,KAAK84J,aAAa94J,KAAKuI,QAAQ61J,aAAatE,QAAO,SAAShB,EAAapvC,GAAU,IAAIrnF,EAAQq8H,EAAOnzB,IAAIiuB,MAAM9vC,GAAUo1C,SAA0D,OAAjDhG,EAAapvC,GAAU+tC,EAASgC,QAAQp3H,GAAgBy2H,CAAY,GAAE,CAAC,GAAG94J,KAAKi+J,QAAQj4J,SAAQ,SAASrG,GAAQA,EAAOsQ,IAAI,CAACs7H,IAAImzB,EAAOnzB,IAAIutB,aAAa4F,EAAO5F,aAAa13J,KAAKs9J,EAAOt9J,MAAM,IAAGpB,KAAK++J,UAAU/+J,KAAKi+J,QAAQj4J,SAAQ,SAASrG,GAAQA,EAAOsQ,IAAI,CAAC+tJ,SAASU,EAAOV,UAAU,IAAGh+J,KAAKw+J,eAAex4J,SAAQ,SAAS0jH,GAAyC,MAA5Bg1C,EAAOnzB,IAAIiuB,MAAM9vC,IAAiBg1C,EAAOM,YAAYt1C,EAAU,IAAG1pH,KAAKi/J,OAAOj/J,KAAKi+J,QAAQnE,QAAO,SAASzoJ,EAAM1R,GAAQ,OAAOA,EAAOu/J,eAAe7tJ,EAAM,GAAE,CAAC,GAAG5R,OAAOD,KAAKQ,KAAKi/J,QAAQj5J,SAAQ,SAASonC,GAAI,IAAI+xH,EAAOT,EAAOO,OAAO7xH,GAAQE,EAAK6xH,EAAO7xH,KAASgxH,EAAYI,EAAOV,SAAS1wH,GAAMgxH,EAAYc,QAAQD,EAAO/9J,MAAMk9J,EAAYziF,SAAS6iF,EAAOnzB,IAAI/mD,KAAKp3C,EAAGkxH,EAAYj8H,QAAQ,IAAG5iC,OAAOD,KAAKQ,KAAK84J,cAAc9yJ,SAAQ,SAAS0jH,GAAUg1C,EAAOnzB,IAAIh6H,OAAOm4G,GAAU,IAAIrnF,EAAQo1H,EAAS0E,WAAW1E,EAASiC,QAAQgF,EAAO5F,aAAapvC,KAAY,OAAOg1C,EAAOnzB,IAAI/mD,KAAKklC,EAASrnF,EAAQ,CAAC,EAAE,IAAUriC,IAAI,GAAG,CAACyC,IAAI,UAAU4O,MAAM,SAAiBjQ,GAAqB,OAAfpB,KAAKoB,KAAKA,EAAYpB,IAAI,GAAG,CAACyC,IAAI,SAAS4O,MAAM,WAAkB,OAAOrR,KAAKurI,GAAG,GAAG,CAAC9oI,IAAI,sBAAsB4O,MAAM,SAA6BiuD,GAAM,IAAI+/F,EAASr/J,KAAKurI,IAAIiuB,MAAMl6F,GAAMw/F,SAAS,OAAO9+J,KAAKs/J,+BAA+BD,EAAS//F,EAAK,GAAG,CAAC78D,IAAI,iCAAiC4O,MAAM,SAAwCgxB,EAAQk9H,GAAU,IAAIC,EAAOx/J,KAASy/J,EAAY,CAACF,SAASA,GAA8K,OAApK9/J,OAAOD,KAAKi4J,EAASj8H,UAAUx1B,SAAQ,SAASvD,GAAKg9J,EAAYh9J,GAAK+8J,EAAO/8J,EAAI,IAAGg9J,EAAYvB,eAAel+J,KAAKk+J,eAAeuB,EAAYxB,QAAQj+J,KAAKi+J,QAAe,IAAIn1B,EAAc42B,aAAar9H,EAAQo9H,EAAY,GAAG,CAACh9J,IAAI,cAAc4O,MAAM,SAAqBiuD,GAAM,OAAOt/D,KAAKu+J,oBAAoBj/F,GAAMt/D,KAAKk+J,eAAeyB,UAAUC,aAAa,GAAG,CAACn9J,IAAI,oBAAoB4O,MAAM,WAA4C,OAAfrR,KAAK++J,UAAiB/+J,KAAKw+J,cAAc,KAAY11B,CAAa,CAApkH,GAAwkHA,EAAc2uB,SAAS7vE,EAAQ,eAAekhD,EAAcwyB,OAAO1zE,EAAQ,YAAYkhD,EAAc42B,aAAa93E,EAAQ,mBAAmBkhD,EAAcq1B,eAAev2E,EAAQ,sBAAsBkhD,EAAc+2B,WAAWj4E,EAAQ,iBAAiBjoF,EAAOC,QAAQkpI,CAAa,EAAE,CAAC,cAAc,EAAE,WAAW,EAAE,qBAAqB,EAAE,gBAAgB,GAAG,kBAAkB,KAAK,EAAE,CAAC,SAASlhD,EAAQjoF,EAAOC,GAAS,aAAa,SAASkgK,EAAQp8J,GAAS1D,KAAK4L,KAAK,eAAe5L,KAAK0D,QAAQA,EAAQ1D,KAAK+/J,MAAM,IAAIzgK,MAAMoE,GAASq8J,KAAK,CAAmC,SAASzC,EAAgB55J,GAAS1D,KAAK4L,KAAK,gBAAgB5L,KAAK0D,QAAQA,EAAQ1D,KAAK+/J,MAAM,IAAIzgK,MAAMoE,GAASq8J,KAAK,CAAuC,SAASC,EAAmBt8J,GAAS1D,KAAK4L,KAAK,mBAAmB5L,KAAK0D,QAAQA,EAAQ1D,KAAK+/J,MAAM,IAAIzgK,MAAMoE,GAASq8J,KAAK,CAA0C,SAASE,EAAgBv8J,GAAS1D,KAAK4L,KAAK,gBAAgB5L,KAAKojC,WAAW,CAAC84H,YAAY,iBAAiBl8J,KAAK0D,QAAQA,EAAQ1D,KAAK+/J,MAAM,IAAIzgK,MAAMoE,GAASq8J,KAAK,CAAngBD,EAAQ51J,UAAU5K,MAAM4K,UAA+HozJ,EAAgBpzJ,UAAU,IAAI41J,EAAmIE,EAAmB91J,UAAU,IAAI41J,EAA2KG,EAAgB/1J,UAAU,IAAI41J,EAAQngK,EAAOC,QAAQ,CAACkgK,QAAQA,EAAQxC,gBAAgBA,EAAgB2C,gBAAgBA,EAAgBD,mBAAmBA,EAAmB,EAAE,CAAC,GAAG,EAAE,CAAC,SAASp4E,EAAQjoF,EAAOC,GAAS,aAAa,IAAIsgK,EAAWt4E,EAAQ,kBAAsBu4E,EAAoBv4E,EAAQ,4BAAgCw4E,EAAax4E,EAAQ,oBAAwBy4E,EAAgBz4E,EAAQ,+BAAmC/L,EAAO+L,EAAQ,oBAAwB04E,EAAmB,CAAC7B,kBAAkB,SAA2BlzB,GAAkI,OAA1GA,EAAI/mD,KAAK,2DAA2D1lF,KAAI,SAAS0lF,GAAM,OAAOA,EAAK54E,IAAI,IAAyB+N,OAAO,CAAC,wBAAwB,EAAEgmJ,SAAS,wBAAwBY,iBAAiB,CAAC,MAAM,OAAOC,kBAAkB,CAAC,OAAO,OAAO,OAAO,UAAU,MAAM,OAAOC,UAAU,OAAOC,WAAW,MAAM/B,YAAY,CAAC9iF,EAAOwkF,EAAgBD,EAAaF,IAAiBS,EAAmB,CAAClC,kBAAkB,SAA2BlzB,GAAwG,OAAhFA,EAAI/mD,KAAK,iCAAiC1lF,KAAI,SAAS0lF,GAAM,OAAOA,EAAK54E,IAAI,IAAyB+N,OAAO,CAAC,qBAAqB,EAAEgmJ,SAAS,oBAAoBY,iBAAiB,CAAC,MAAM,OAAOC,kBAAkB,CAAC,OAAO,OAAO,UAAU,MAAM,OAAOC,UAAU,MAAMC,WAAW,MAAM/B,YAAY,CAAC9iF,EAAOskF,EAAoBE,EAAgBD,EAAaF,IAAavgK,EAAOC,QAAQ,CAACghK,KAAKD,EAAmBE,KAAKP,EAAmB,EAAE,CAAC,8BAA8B,GAAG,iBAAiB,GAAG,mBAAmB,GAAG,mBAAmB,GAAG,2BAA2B,KAAK,EAAE,CAAC,SAAS14E,EAAQjoF,EAAOC,GAAS,aAAa,IAAI07J,EAAO1zE,EAAQ,YAAgB6vE,EAAS7vE,EAAQ,eAAe,SAASk5E,EAAQC,EAAMzzJ,GAAO,OAAOyzJ,EAAM,IAAIzzJ,EAAM6tJ,QAAQ7tJ,EAAM6tJ,OAAO4F,EAAM,EAAE,CAAC,SAASC,EAAgBxF,EAAKyF,GAAW,GAAe,QAAZzF,EAAKzyJ,MAA8B,UAAhByyJ,EAAKxzG,UAAoBwzG,EAAK/3J,KAAK,CAAC,GAAGw9J,EAAW,MAAM,IAAI3hK,MAAM,uCAAuC,OAAO,CAAI,CAAC,GAAe,QAAZk8J,EAAKzyJ,MAA8B,QAAhByyJ,EAAKxzG,UAAkBwzG,EAAK/3J,KAAK,CAAC,IAAIw9J,EAAW,MAAM,IAAI3hK,MAAM,2CAA2C,OAAO,CAAK,CAAC,OAAO2hK,CAAS,CAAC,SAASC,EAAWtgJ,EAAEC,GAAG,OAAOD,EAAEu6I,OAAOt6I,EAAEs6I,MAAM,CAAC,SAASgG,EAAO70B,GAAK,IAAIr7G,EAAM,EAAc,MAATq7G,EAAI,KAAUr7G,EAAM,GAAE,IAAItE,EAAM2/G,EAAI9kI,QAAQ,KAASqlD,GAAa,IAATlgC,EAAW2/G,EAAI1qI,OAAO,EAAE+qB,EAAM,MAAM,CAAC2/G,IAAIA,EAAIxmI,MAAMmrB,EAAM47B,GAAK7E,SAAiB,IAAR/2B,EAAU,QAAQ,MAAM,CAA6hC,SAASmwI,EAA0B74J,GAAS,IAAIpH,EAAI,IAAIm6J,EAAOgC,gBAAgB,gBAAmM,MAAnLn8J,EAAIiiC,WAAW,CAACi+H,KAAK94J,EAAQ84J,KAAK39I,MAAM,KAAK,GAAGwlC,OAAO,GAAGjqD,GAAG,eAAeiC,QAAQqH,EAAQ84J,KAAKnF,YAAY,2BAA2B3zJ,EAAQ84J,KAAKn4G,OAAO,EAAE,IAAI,iBAAuB/nD,CAAG,CAAC,SAASmgK,EAAuBC,EAAiBC,GAAU,IAAIC,GAAY,EAAUC,EAAmB,CAACvG,OAAO,GAAOkG,OAAK,EAAOE,EAAiBv7J,SAAQ,SAAS27J,GAAgBN,EAAKG,EAASt4G,OAAOw4G,EAAmBvG,OAAOwG,EAAexG,OAAOuG,EAAmBvG,SAAqC,UAA1BwG,EAAe35G,UAAoBy5G,GAAuC,QAA1BE,EAAe35G,WAAmBy5G,KAA0C,UAA1BE,EAAe35G,SAAoBo5G,EAA0B,CAACC,KAAKA,IAA3+B,SAAmC94J,GAAS,IAAIpH,EAAI,IAAIm6J,EAAOgC,gBAAgB,gBAAyL,MAAzKn8J,EAAIiiC,WAAW,CAACi+H,KAAK94J,EAAQ84J,KAAK39I,MAAM,KAAK,GAAGzkB,GAAG,eAAeiC,QAAQqH,EAAQ84J,KAAKnF,YAAY,2BAA2B3zJ,EAAQ84J,KAAKn4G,OAAO,EAAE,IAAI,iBAAuB/nD,CAAG,CAAsuBygK,CAA0B,CAACP,KAAKA,KAAQI,GAAaA,EAAYC,EAAmBC,CAAc,IAAG,IAAIA,EAAuBH,EAAS5/J,OAAQy/J,EAAKG,EAASt4G,OAAOw4G,EAAmBvG,OAAOwG,EAAsBD,EAAmBvG,QAAWsG,GAAaL,EAA0B,CAACC,KAAKA,GAAO,CAAC,SAASQ,EAAcC,EAAI54J,EAAI8+C,GAAU,IAAI9hB,EAAQ,GAAOi1H,GAAQ,EAAE,IAAiD,KAA9CA,EAAO2G,EAAIt6J,QAAQ0B,EAAIiyJ,EAAO,KAAmBj1H,EAAQ9+B,KAAK,CAAC+zJ,OAAOA,EAAOnzG,SAASA,WAA4B,IAAVmzG,GAAa,OAAOj1H,CAAO,CAAC,SAAS67H,EAAOC,GAAmB,IAAI38F,EAAMrlE,KAAKA,KAAKgiK,kBAAkBA,EAAkBhiK,KAAKiiK,KAAK,GAAGjiK,KAAKkiK,gBAAgB,SAASzG,GAAYp2F,EAAM48F,KAAK58F,EAAM28F,kBAAkB54J,KAAK,IAAI,IAAI+xJ,EAAO,EAAE91F,EAAM88F,OAAO98F,EAAM28F,kBAAkBljK,KAAI,SAAS08J,GAA0B,OAApBL,GAAQK,EAAK55J,QAAqB45J,EAAK55J,MAAM,IAAG,IAAI2/J,EAAiB9J,EAASuF,aAAa,CAAC6E,EAAcx8F,EAAM48F,KAAKxG,EAAWxqI,MAAM,SAAS4wI,EAAcx8F,EAAM48F,KAAKxG,EAAW5uG,IAAI,SAASnsC,KAAKwgJ,GAAYI,EAAuBC,EAAiBl8F,EAAM48F,MAAM,IAAIG,EAAgB,CAACnxI,MAAMwqI,EAAWxqI,MAAMrvB,OAAOirD,IAAI4uG,EAAW5uG,IAAIjrD,QAAYygK,EAAQ,EAAMC,EAAe,EAAEj9F,EAAMmuE,OAAOnuE,EAAM88F,OAAOrjK,KAAI,SAASq8J,EAAOj1J,GAAkI,IAA/H,IAAI66J,EAAM,CAAC5F,EAAOA,EAAOn7J,KAAKgiK,kBAAkB97J,GAAGtE,QAAY2gK,EAAYviK,KAAKgiK,kBAAkB97J,GAAOs8J,EAAmB,GAASF,EAAef,EAAiB3/J,QAAQk/J,EAAQC,EAAMQ,EAAiBe,KAAkBE,EAAmBp7J,KAAKm6J,EAAiBe,IAAiBA,IAAiB,IAAIt2J,EAAM,GAAO8pG,EAAO,EAAKusD,EAAQ,IAAGvsD,EAAOusD,EAAQA,EAAQ,GAAEG,EAAmBx8J,SAAQ,SAASy8J,GAAmB,IAAIpxJ,EAAMkxJ,EAAYr5G,OAAO4sD,EAAO2sD,EAAkBtH,OAAOA,EAAOrlD,GAAWzkG,EAAMzP,OAAO,GAAGoK,EAAM5E,KAAK,CAAC2B,KAAK,UAAUsI,MAAMA,IAAQrF,EAAM5E,KAAK,CAAC2B,KAAK,YAAYi/C,SAASy6G,EAAkBz6G,WAAW8tD,EAAO2sD,EAAkBtH,OAAOA,EAAOiH,EAAgBK,EAAkBz6G,SAAS,IAAGq6G,EAAQvsD,EAAOysD,EAAY3gK,OAAO,IAAIyP,EAAMkxJ,EAAYr5G,OAAO4sD,GAAoE,OAAzDzkG,EAAMzP,OAAO,GAAGoK,EAAM5E,KAAK,CAAC2B,KAAK,UAAUsI,MAAMA,IAAerF,CAAK,GAAEq5D,EAAM,CAAC,CAAC1lE,EAAOC,QAAQ,CAACgL,MAAM,SAAe83J,EAAUjH,GAAY,IAAIwF,GAAU,EAAUe,EAAkB,GAAGU,EAAU18J,SAAQ,SAASw1J,IAAMyF,EAAUD,EAAgBxF,EAAKyF,KAAqC,YAAZzF,EAAKzyJ,MAAkBi5J,EAAkB56J,KAAKo0J,EAAKnqJ,MAAO,IAAG,IAAIuzE,EAAO,IAAIm9E,EAAOC,GAAmBp9E,EAAOs9E,gBAAgBzG,GAAY,IAAIkH,EAAS,GAAOh2I,EAAM,EAAoW,OAAlW+1I,EAAU18J,SAAQ,SAASw1J,GAAMyF,EAAUD,EAAgBxF,EAAKyF,GAA0B,YAAZzF,EAAKzyJ,OAAkByyJ,EAAKxzG,SAASi5G,EAAU,YAAY,cAAgBA,GAAuB,YAAZzF,EAAKzyJ,MAAkBrD,MAAMwE,UAAU9C,KAAKuoC,MAAMgzH,EAAS/9E,EAAO4uD,OAAO7mH,GAAO7tB,KAAI,SAAS2b,GAAiD,MAAlC,YAATA,EAAE1R,OAAkB0R,EAAEutC,SAAS,aAAmBvtC,CAAC,KAAIkS,KAAag2I,EAASv7J,KAAKo0J,EAAM,IAAUmH,CAAQ,EAAEC,SAAS,SAAkBvgI,EAAQwgI,GAAS,IAAIC,EAApgJ,SAAoBzgI,EAAQ0gI,EAAeC,GAAuU,IAArT,IAAIltD,EAAO,EAAMmtD,EAAc5gI,EAAQzgC,OAAWshK,EAAWzL,EAASuF,aAAa,CAAC+F,EAAejkK,KAAI,SAASwtI,GAAK,MAAM,CAACA,IAAIA,EAAI7oI,MAAK,EAAK,IAAGu/J,EAAiBlkK,KAAI,SAASwtI,GAAK,MAAM,CAACA,IAAIA,EAAI7oI,MAAK,EAAM,MAAKq2J,QAAO,SAASoJ,EAAWrjI,GAA4B,OAAzBqjI,EAAWrjI,EAAEysG,KAAKzsG,EAAEp8B,KAAYy/J,CAAU,GAAE,CAAC,GAAOC,EAAa,GAASrtD,EAAOmtD,IAA+D,KAAhDntD,EAAOzzE,EAAQ76B,QAAQ,IAAIsuG,KAA5B,CAA0D,IAAIqlD,EAAOrlD,EAAOA,EAAOzzE,EAAQ76B,QAAQ,IAAIsuG,GAAQ,IAAIstD,EAAQ/gI,EAAQv8B,MAAMq1J,EAAOrlD,EAAO,GAAOutD,EAAQlC,EAAOiC,GAAS92B,EAAI+2B,EAAQ/2B,IAAItkF,EAASq7G,EAAQr7G,SAAavkD,EAAKy/J,EAAW52B,GAAc,MAAN7oI,GAAqB0/J,EAAa/7J,KAAK,CAAC2B,KAAK,MAAMi/C,SAASA,EAASvkD,KAAKA,EAAK03J,OAAOA,EAAO9pJ,MAAM+xJ,GAAS,CAAC,OAAOD,CAAY,CAAmwHG,CAAWjhI,EAAQwgI,EAAQp/J,KAAKo/J,EAAQU,OAAWztD,EAAO,EAAM09B,EAAOsvB,EAAQhJ,QAAO,SAAStmB,EAAOlmI,GAAO,IAAI+D,EAAMgxB,EAAQ6mB,OAAO4sD,EAAOxoG,EAAM6tJ,OAAOrlD,GAA4K,OAAjKzkG,EAAMzP,OAAO,GAAG4xI,EAAOpsI,KAAK,CAAC2B,KAAK,UAAUsI,MAAMA,IAAQykG,EAAOxoG,EAAM6tJ,OAAO7tJ,EAAM+D,MAAMzP,cAAc0L,EAAM6tJ,OAAU7tJ,EAAM+D,MAAMzP,OAAO,GAAG4xI,EAAOpsI,KAAKkG,GAAckmI,CAAM,GAAE,IAAQniI,EAAMgxB,EAAQ6mB,OAAO4sD,GAAqE,OAA1DzkG,EAAMzP,OAAO,GAAG4xI,EAAOpsI,KAAK,CAAC2B,KAAK,UAAUsI,MAAMA,IAAemiI,CAAM,EAAE,EAAE,CAAC,cAAc,EAAE,WAAW,IAAI,EAAE,CAAC,SAAS5rD,EAAQjoF,EAAOC,GAAS,aAA8ND,EAAOC,QAAxN,SAAiB4jK,GAAM,IAAIC,EAAc98J,KAAKC,UAAUowG,EAAM,CAAC,EAAiI,OAA/H,WAAqB,IAAIr/E,EAAK8rI,EAAch+J,WAAW,OAAOkyB,KAAQq/E,EAAMA,EAAMr/E,GAAMq/E,EAAMr/E,GAAM6rI,EAAK7zH,MAAM3vC,KAAKyF,UAAU,CAAiB,CAAuB,EAAE,CAAC,GAAG,GAAG,CAAC,SAASmiF,EAAQjoF,EAAOC,GAAS,aAAa,SAAS8jK,EAAiBzG,EAAOrjG,GAAuB,IAAhB,IAAI+pG,GAAU,EAAUz9J,EAAE,EAAEgB,EAAE+1J,EAAOr7J,OAAOsE,EAAEgB,EAAEhB,IAAQ0zD,EAAM1zD,IAAI+2J,EAAO/2J,GAAGtE,UAAgC,IAAZ+hK,GAAe1G,EAAO/2J,GAAG0zD,EAAM1zD,IAAIi1J,OAAO8B,EAAO0G,GAAU/pG,EAAM+pG,IAAWxI,UAAQwI,EAASz9J,GAAG,IAAe,IAAZy9J,EAAe,MAAM,IAAIrkK,MAAM,qBAAqB,OAAOqkK,CAAQ,CAAChkK,EAAOC,QAAQ,SAASq9J,GAAQ,IAAI2G,EAAY3G,EAAOnD,QAAO,SAASh0G,EAAIo3G,GAAO,OAAOp3G,EAAIo3G,EAAMt7J,MAAM,GAAE,GAAGq7J,EAAOA,EAAOt6J,QAAO,SAASu6J,GAAO,OAAOA,EAAMt7J,OAAO,CAAC,IAA6F,IAA1F,IAAIiiK,EAAY,IAAIn+J,MAAMk+J,GAAiBhqG,EAAMqjG,EAAOn+J,KAAI,WAAW,OAAO,CAAC,IAAOoH,EAAE,EAAQA,GAAG09J,EAAY,GAAE,CAAC,IAAIE,EAAWJ,EAAiBzG,EAAOrjG,GAAOiqG,EAAY39J,GAAG+2J,EAAO6G,GAAYlqG,EAAMkqG,IAAalqG,EAAMkqG,KAAc59J,GAAG,CAAC,OAAO29J,CAAW,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,SAASj8E,EAAQjoF,EAAOC,GAAS,aAAa,SAASmkK,IAAW,CAAC,SAASC,EAAS99J,GAAG,OAAOA,CAAC,CAACvG,EAAOC,QAAQ,SAASD,GAAQ,IAAI67B,EAAS,CAACvrB,IAAI8zJ,EAASn5J,MAAMm5J,EAASloF,OAAOkoF,EAASE,UAAUF,EAASlF,mBAAmBmF,EAAS9E,eAAe8E,EAASE,UAAUF,GAAU,GAAGvkK,OAAOD,KAAKg8B,GAAU2oI,OAAM,SAAS1hK,GAAK,OAAO9C,EAAO8C,EAAI,IAAI,MAAM,IAAInD,MAAM,2FAAgL,OAArFG,OAAOD,KAAKg8B,GAAUx1B,SAAQ,SAASvD,GAAK9C,EAAO8C,GAAK9C,EAAO8C,IAAM+4B,EAAS/4B,EAAI,IAAU9C,CAAM,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,SAASioF,EAAQjoF,EAAOC,GAAS,aAAa,IAA+BwkK,EAAUx8E,EAAQ,gBAAoB6vE,EAAS7vE,EAAQ,gBAAoBm2E,EAAQn2E,EAAQ,qBAAuDy8E,EAArBz8E,EAAQ,aAAyCy8E,mBAAuB/I,EAAO1zE,EAAQ,aAA+V,SAAS08E,EAAkC/7J,GAAS,IAAImtI,EAAKntI,EAAQmtI,KAASv0I,EAAI,IAAIm6J,EAAOgC,gBAAgB,0CAA4O,MAAlMn8J,EAAIiiC,WAAW,CAACnkC,GAAG,yCAAyCi9J,YAAY,YAAYxmB,EAAK,GAAGrkI,MAAM,2BAA2BqkI,EAAK,GAAGrkI,MAAM,IAAIkzJ,WAAW7uB,EAAK,GAAGrkI,MAAMmzJ,WAAW9uB,EAAK,GAAGrkI,OAAalQ,CAAG,CAAC,SAASsjK,EAAmBjJ,GAAM,OAAOA,EAAKkJ,UAAU,IAAI,QAAQ,OAAO,EAAE,IAAI,MAAM,OAAO,EAAE,QAAQ,MAAM,IAAIplK,MAAM,uDAAuDk8J,EAAKkJ,SAAS,KAAK,CAAC,SAASC,EAAS/G,GAAQ,GAAmB,IAAhBA,EAAOh8J,OAAY,MAAM,GAA4C,IAAzC,IAAIgjK,EAAU,EAAMC,EAAWjH,EAAO,GAAW13J,EAAE,EAAEA,EAAE03J,EAAOh8J,OAAOsE,IAAI,CAAC,IAAI4+J,EAAalH,EAAO13J,GAAoD,GAAe,KAAhE0+J,GAAWH,EAAmBK,EAAatJ,OAAuB,CAAIsJ,EAAatJ,KAAKnqJ,QAAQwzJ,EAAWrJ,KAAKnqJ,OAAiC,KAA1ByzJ,EAAatJ,KAAKnqJ,OAAYizJ,EAAkC,CAAC5uB,KAAK,CAACmvB,EAAWrJ,KAAKsJ,EAAatJ,QAAQ,IAAIuJ,EAAMJ,EAAS/G,EAAO93J,MAAMI,EAAE,IAC9v+B,MAAM,CAAC,CAAC2+J,EAAWC,IAAenrJ,OAAOorJ,EAAM,CAAC,CAAC,IAAIvJ,EAAKqJ,EAAWrJ,MAD857B,SAAqCjzJ,GAAS,IAAIm8J,EAASn8J,EAAQm8J,SAAa7kI,EAAa,UAAX6kI,EAAmB,WAAW,WAAeM,EAAa,UAAXN,EAAmB,WAAW,WAAevjK,EAAI,IAAIm6J,EAAOgC,gBAAgB0H,EAAE,SAAa14B,EAAI/jI,EAAQizJ,KAAKnqJ,MAA2F,MAArFlQ,EAAIiiC,WAAW,CAACnkC,GAAG4gC,EAAE,QAAQq8H,YAAY,qBAAqB5vB,EAAI,OAAOzsG,EAAEwhI,KAAK/0B,GAAWnrI,CAAG,CAC1u8B8jK,CAA4B,CAACzJ,KAAKA,EAAKkJ,SAASlJ,EAAKkJ,UAAU,CAAC,IAAIrE,EAAgB,CAACz0J,KAAK,kBAAkBs4J,UAAU,SAAmB1wB,EAAO0xB,GAAM,IAAIjB,EAAUiB,EAAKjB,UAAUkB,EAAWD,EAAKhB,UAActG,EAAOqG,EAD+86B,aAC376BzwB,GAAQoqB,EAAOA,EAAO9+J,KAAI,SAASsmK,GAAO,OAAOA,GAAO,EAAE,IAA4B,IAAIC,EAAMV,EAAnC/G,EAAOwG,EAAUxG,IAAuC0H,EAAcD,EAAMvmK,KAAI,SAASymK,GAAM,IAAIC,EAASD,EAAK,GAAG/J,KAAKgK,SAAwG,MAAjF,SAAXA,IAAmBA,EAASnB,EAAmB7wB,EAAO1tI,MAAMy/J,EAAK,GAAGpK,OAAOoK,EAAK,GAAGpK,UAAaqK,EAA4K,CAAnH/N,EAASltG,QAAQipF,EAAOgyB,EAASD,EAAK,GAAGpK,QAAkB1D,EAASjtG,SAASgpF,EAAOgyB,EAASD,EAAK,GAAGpK,SAA9I,CAACoK,EAAK,GAAGpK,OAAOoK,EAAK,GAAGpK,OAAgJ,IAAOsK,EAAiB,EAAMC,OAAW,EAAO,OAAOlyB,EAAOsmB,QAAO,SAAS6L,EAAUnK,EAAKt1J,GAAG,IAAI0/J,EAAOH,EAAiBJ,EAAMzjK,QAAQ0jK,EAAcG,GAAkB,IAAIv/J,EAAMq/J,EAAKF,EAAMI,GAAsBI,EAAaP,EAAcG,GAAkB,IAAIG,EAA6B,OAArBD,EAAUv+J,KAAKo0J,GAAamK,EAAiH,GAApGE,EAAa,KAAK3/J,IAAGw/J,EAAW,IAAMH,EAAK,GAAGpK,SAASj1J,GAAGq/J,EAAK,GAAGpK,SAASj1J,GAAGw/J,EAAWt+J,KAAKo0J,GAASqK,EAAa,KAAK3/J,EAAE,CAAC,IAAI4/J,EAAStyB,EAAO+xB,EAAK,GAAGpK,eAAe2K,EAASpB,gBAAgBoB,EAASN,SAASM,EAASC,UAAUZ,EAAWO,GAAYC,EAAUv+J,KAAK0+J,GAAUL,GAAkB,CAAC,OAAOE,CAAS,GAAE,GAAG,GAAGhmK,EAAOC,QAAQ,WAAW,OAAOm+J,EAAQsC,EAAgB,CAAC,EAAE,CAAC,eAAe,EAAE,YAAY,EAAE,eAAe,GAAG,oBAAoB,GAAG,YAAY,KAAK,GAAG,CAAC,SAASz4E,EAAQjoF,EAAOC,GAAS,aAAa,IAAI63J,EAAS7vE,EAAQ,gBAAoBo+E,EAAe,oBAAwBjI,EAAQn2E,EAAQ,qBAAyBq+E,EAAW,OAAW/F,EAAW,CAACt0J,KAAK,aAAahB,MAAM,SAAes7J,GAAoB,IAAIvmK,EAAOsmK,EAAel9J,EAAK,cAAc,MAA2B,MAAxBm9J,EAAmB,GAAgB,CAACn9J,KAAKA,EAAKsI,MAAM60J,EAAmBh9G,OAAO,GAAGs8G,SAAS,OAAO7lK,OAAOA,EAAO+kK,SAAS,QAAQyB,UAAS,GAAkC,MAAxBD,EAAmB,GAAgB,CAACn9J,KAAKA,EAAKsI,MAAM60J,EAAmBh9G,OAAO,GAAGs8G,SAAS,OAAO7lK,OAAOA,EAAO+kK,SAAS,QAAQyB,UAAS,GAAiC,MAAxBD,EAAmB,GAAgB,CAACn9J,KAAKA,EAAKsI,MAAM60J,EAAmBh9G,OAAO,GAAGvpD,OAAOA,EAAO+kK,SAAS,OAAkC,MAAxBwB,EAAmB,GAAuI,CAACn9J,KAAKA,EAAKsI,MAA9H60J,EAAmBtgK,QAAQogK,EAAe,MAAgGR,SAA7EU,EAAmBtgK,QAAQogK,EAAe,MAAqDrmK,OAAOA,EAAO+kK,SAAS,QAAQyB,UAAS,GAAc,IAAI,EAAElC,UAAU,SAAmBmC,EAAU5yB,GAAQ,GAAe,eAAZ4yB,EAAiC,OAAO5yB,EAAOsmB,QAAO,SAASpkB,EAAK8lB,EAAKL,GAAqG,MAA9E,gBAAZK,EAAKzyJ,MAAsByyJ,EAAK77J,SAASsmK,GAAYvwB,EAAKtuI,KAAK,CAACo0J,KAAKA,EAAKL,OAAOA,IAAgBzlB,CAAI,GAAE,GAAG,EAAE75D,OAAO,SAAgB2/E,EAAKjzJ,GAAS,GAAgB,iBAAZizJ,EAAKzyJ,MAAsByyJ,EAAK77J,SAASsmK,EAAY,OAAO,KAAK,IAAII,EAAW,GAA0S,OAAjE99J,EAAQ+9J,aAAaC,SAAS/K,EAAKnqJ,OAAzQ,SAAkBk7H,GAAO,IAAI+5B,EAAa/9J,EAAQ+9J,aAAaE,sBAAsBj6B,EAAMivB,EAAKnqJ,OAAOg1J,EAAWj/J,KAAKmB,EAAQszE,OAAO47E,EAASiE,aAAa,CAAC,EAAEnzJ,EAAQ,CAACy1J,SAASxC,EAAKuK,UAAUrwB,KAAK,CAAC,EAAE4wB,aAAaA,KAAgB,GAAmD9K,EAAK2K,UAAgB,CAAC90J,MAAMg1J,EAAWj9J,KAAK,IAAI,GAAGzJ,EAAOC,QAAQ,WAAW,OAAOm+J,EAAQmC,EAAW,CAAC,EAAE,CAAC,eAAe,EAAE,oBAAoB,KAAK,GAAG,CAAC,SAASt4E,EAAQjoF,EAAOC,GAAS,aAAa,IAAIi4J,EAAa,WAAW,SAASC,EAAiB5+F,EAAOm2C,GAAO,IAAI,IAAInpG,EAAE,EAAEA,EAAEmpG,EAAMztG,OAAOsE,IAAI,CAAC,IAAI6xJ,EAAW1oD,EAAMnpG,GAAG6xJ,EAAWC,WAAWD,EAAWC,aAAY,EAAMD,EAAWE,cAAa,EAAQ,UAAUF,IAAWA,EAAWG,UAAS,GAAKz4J,OAAO04J,eAAej/F,EAAO6+F,EAAWt1J,IAAIs1J,EAAW,CAAC,CAAC,OAAO,SAASK,EAAYC,EAAWC,GAAuI,OAAvHD,GAAWP,EAAiBM,EAAYluJ,UAAUmuJ,GAAeC,GAAYR,EAAiBM,EAAYE,GAAoBF,CAAW,CAAC,CAAte,GAA0nB,IAAIX,EAAS7vE,EAAQ,gBAAoB0zE,EAAO1zE,EAAQ,aAAiBq+E,EAAW,SAAalI,EAAQn2E,EAAQ,qBAAkW,SAAS6+E,EAASvB,GAAM,IAAI1J,EAAK0J,EAAK1J,KAAKzzC,EAAKm9C,EAAKn9C,KAAKlM,EAAMqpD,EAAKrpD,MAAM6qD,EAAWxB,EAAKwB,WAAW/5I,EAAMu4I,EAAKv4I,MAAUg6I,EAAeD,EAAW5gK,MAAMiiH,EAAK,EAAElM,GAAsO,OAA/N8qD,EAAe3gK,SAAQ,SAASyU,EAAEvU,GAAMA,IAAIymB,EAAMo7F,EAAK,IAAsB,gBAATttG,EAAE1R,MAA+B,YAAT0R,EAAE1R,MAA+B,cAAb0R,EAAEutC,WAAxmB,SAAgDz/C,GAAS,IAAIpH,EAAI,IAAIm6J,EAAOgC,gBAAgB,gDAAoDhxB,EAAI/jI,EAAQizJ,KAAKnqJ,MAAkK,MAA5JlQ,EAAIiiC,WAAW,CAACnkC,GAAG,+CAA+Ci9J,YAAY,WAAW5vB,EAAI+0B,KAAK94J,EAAQizJ,KAAKnqJ,MAAMs1J,eAAep+J,EAAQo+J,gBAAsBxlK,CAAG,CAAoTylK,CAAuC,CAACD,eAAeA,EAAenL,KAAKA,GAAO,IAAUA,CAAI,CAAC,IAAIqL,EAAa,WAAW,SAASA,KAA5hC,SAAyB9sG,EAASq+F,GAAa,KAAKr+F,aAAoBq+F,GAAc,MAAM,IAAIW,UAAU,oCAAqC,EAA45BC,CAAgBh5J,KAAK6mK,GAAc7mK,KAAK4L,KAAK,cAAc,CAAyvB,OAAxvBisJ,EAAagP,EAAa,CAAC,CAACpkK,IAAI,qBAAqB4O,MAAM,SAA4B9I,EAAQqvJ,GAAgE,OAAjD53J,KAAKk+J,eAAetG,EAAcsG,eAAsB31J,CAAO,GAAG,CAAC9F,IAAI,QAAQ4O,MAAM,SAAe60J,GAA2C,MAA2B,MAAxBA,EAAmB,GAAiB,KAAW,CAACn9J,KAAjE,cAA2EsI,MAAM60J,EAAmBh9G,OAAO,GAAGvpD,OAAOsmK,EAAW,GAAG,CAACxjK,IAAI,YAAY4O,MAAM,SAAmBmiI,GAAQ,OAAOikB,EAASmG,OAAOkJ,YAAYtzB,EAAO,CAACyyB,WAAWA,EAAWQ,SAASA,EAASjB,SAASxlK,KAAKk+J,eAAeuC,WAAW,GAAG,CAACh+J,IAAI,SAAS4O,MAAM,SAAgBmqJ,EAAKjzJ,GAAS,GAAGizJ,EAAK77J,SAASsmK,EAAY,OAAO,KAAK,IAAI50J,EAAM9I,EAAQ+9J,aAAa5qH,SAAS8/G,EAAKnqJ,OAAsD,OAArC,MAAPA,IAAaA,EAAM9I,EAAQgzJ,WAAWC,IAAY,CAACnqJ,MAAMA,EAAM,KAAYw1J,CAAY,CAA12B,GAA82BlnK,EAAOC,QAAQ,WAAW,OAAOm+J,EAAQ,IAAI8I,EAAa,CAAC,EAAE,CAAC,eAAe,EAAE,YAAY,EAAE,oBAAoB,KAAK,GAAG,CAAC,SAASj/E,EAAQjoF,EAAOC,GAAS,aAAa,IAAIi4J,EAAa,WAAW,SAASC,EAAiB5+F,EAAOm2C,GAAO,IAAI,IAAInpG,EAAE,EAAEA,EAAEmpG,EAAMztG,OAAOsE,IAAI,CAAC,IAAI6xJ,EAAW1oD,EAAMnpG,GAAG6xJ,EAAWC,WAAWD,EAAWC,aAAY,EAAMD,EAAWE,cAAa,EAAQ,UAAUF,IAAWA,EAAWG,UAAS,GAAKz4J,OAAO04J,eAAej/F,EAAO6+F,EAAWt1J,IAAIs1J,EAAW,CAAC,CAAC,OAAO,SAASK,EAAYC,EAAWC,GAAuI,OAAvHD,GAAWP,EAAiBM,EAAYluJ,UAAUmuJ,GAAeC,GAAYR,EAAiBM,EAAYE,GAAoBF,CAAW,CAAC,CAAte,GAA0nB,IAAI2F,EAAQn2E,EAAQ,qBAAyBm/E,EAAO,WAAW,SAASA,KAAxN,SAAyBhtG,EAASq+F,GAAa,KAAKr+F,aAAoBq+F,GAAc,MAAM,IAAIW,UAAU,oCAAqC,EAAkFC,CAAgBh5J,KAAK+mK,GAAQ/mK,KAAK4L,KAAK,QAAQ,CAA4V,OAA3VisJ,EAAakP,EAAO,CAAC,CAACtkK,IAAI,MAAM4O,MAAM,SAAa3F,GAAQA,EAAIsyJ,WAAUh+J,KAAKg+J,SAAStyJ,EAAIsyJ,UAAsB,MAAVtyJ,EAAItK,OAAYpB,KAAKoB,KAAKsK,EAAItK,KAAK,GAAG,CAACqB,IAAI,iBAAiB4O,MAAM,SAAwB4tJ,GAAQ,IAAI55F,EAAMrlE,KAAK,OAAOP,OAAOD,KAAKQ,KAAKg+J,UAAUlE,QAAO,SAASmF,EAAO3xH,GAA+C,OAAzC2xH,EAAO3xH,GAAM,CAACA,KAAKA,EAAKlsC,KAAKikE,EAAMjkE,MAAa69J,CAAM,GAAEA,EAAO,KAAY8H,CAAM,CAArb,GAAybpnK,EAAOC,QAAQ,WAAW,OAAOm+J,EAAQ,IAAIgJ,EAAO,CAAC,EAAE,CAAC,oBAAoB,KAAK,GAAG,CAAC,SAASn/E,EAAQjoF,EAAOC,GAAS,aAAa,IAAIm+J,EAAQn2E,EAAQ,qBAAyBo/E,EAAc,CAACp7J,KAAK,sBAAsBs4J,UAAU,SAAmB1wB,GAAQ,IAAIxmF,EAAM,GAAOi6G,GAAQ,EAAU/iK,EAAOsvI,EAAOsmB,QAAO,SAAStmB,EAAOgoB,GAA8X,MAAzW,QAAZA,EAAKzyJ,MAA8B,UAAhByyJ,EAAKxzG,UAAoBwzG,EAAK/3J,MAAmB,UAAb+3J,EAAKnqJ,QAAiB41J,GAAQ,GAAQA,GAAwB,gBAAZzL,EAAKzyJ,MAAuByyJ,EAAK77J,SAAQqtD,EAAM,GAAG37C,MAAM,8BAA6B27C,EAAM5lD,KAAKo0J,IAAWhoB,EAAOpsI,KAAKo0J,GAAqB,QAAZA,EAAKzyJ,MAA8B,QAAhByyJ,EAAKxzG,UAAkBwzG,EAAK/3J,MAAmB,WAAb+3J,EAAKnqJ,QAAkB3L,MAAMwE,UAAU9C,KAAKuoC,MAAM6jG,EAAOxmF,GAAOi6G,GAAQ,EAAMj6G,EAAM,IAAUwmF,CAAM,GAAE,IAA6C,OAAzC9tI,MAAMwE,UAAU9C,KAAKuoC,MAAMzrC,EAAO8oD,GAAc9oD,CAAM,GAAGvE,EAAOC,QAAQ,WAAW,OAAOm+J,EAAQiJ,EAAc,CAAC,EAAE,CAAC,oBAAoB,KAAK,GAAG,CAAC,SAASp/E,EAAQjoF,EAAOC,GAAS,aAAa,IAAI63J,EAAS7vE,EAAQ,eAAmBY,EAAO,CAAC07E,UAAU,SAAmB1wB,EAAOyqB,GAAS,SAASgG,EAAUmC,EAAU5yB,GAAQ,OAAOyqB,EAAQn/J,KAAI,SAASa,GAAQ,OAAOA,EAAOskK,UAAUmC,EAAU5yB,EAAO,GAAE,CAA6J,OAA5J,SAAS0wB,EAAU1wB,GAAQ,OAAOyqB,EAAQnE,QAAO,SAAStmB,EAAO7zI,GAAQ,OAAOA,EAAOukK,UAAU1wB,EAAO,CAAC0wB,UAAUA,EAAUD,UAAUA,GAAW,GAAEzwB,EAAO,CAAQ0wB,CAAU1wB,EAAO,EAAE5oI,MAAM,SAAes8J,EAAMjJ,GAAyQ,IAAIkJ,GAAc,EAAUjB,OAAmB,EAAWkB,EAAU,GAAG,OAAOF,EAAMpN,QAAO,SAAStmB,EAAO6zB,GAAO,MAAgB,cAAbA,EAAMt+J,MAAoBo+J,EAA+B,UAAjBE,EAAMr/G,SAAuC,QAAjBq/G,EAAMr/G,UAA/b,SAAqBk+G,EAAmB1yB,GAAgC,IAAxB,IAAI8zB,OAAa,EAAephK,EAAE,EAAEgB,EAAE+2J,EAAQr8J,OAAOsE,EAAEgB,EAAEhB,IAA2E,GAA/CohK,EAAXrJ,EAAQ/3J,GAAwB0E,MAAMs7J,GAA+D,OAA1B1yB,EAAOpsI,KAAKkgK,GAAqBA,EAAc,OAAO,IAAI,CAAiRC,CAA/DrB,EAAmBzO,EAASqF,WAAWoJ,GAAuD1yB,IAASA,EAAOpsI,KAAK,CAAC2B,KAAK,cAAcsI,MAAM60J,IAAqBxgK,MAAMwE,UAAU9C,KAAKuoC,MAAM6jG,EAAO4zB,GAAWA,EAAU,GAAU5zB,IAAO0yB,EAAmB,GAAU1yB,IAAU2zB,GAA+B,YAAbE,EAAMt+J,MAAmC,cAAjBs+J,EAAMr/G,SAAwBk+G,GAAoBmB,EAAMh2J,MAAW+1J,EAAUhgK,KAAKigK,GAAc7zB,IAAOA,EAAOpsI,KAAKigK,GAAc7zB,EAAM,GAAE,GAAG,GAAG7zI,EAAOC,QAAQ4oF,CAAM,EAAE,CAAC,cAAc,IAAI,GAAG,CAAC,SAASZ,EAAQjoF,EAAOC,GAAS,aAAa,IAAI4nK,EAAa5/E,EAAQ,mBAAuB6vE,EAAS7vE,EAAQ,eAAu1BjoF,EAAOC,QAAjmB,SAASi8E,EAAOtzE,GAA2J,OAAlJA,EAAQszE,OAAOA,EAAOtzE,EAAQ01J,QAAQ11J,EAAQ01J,QAAY11J,EAAQ+9J,eAAc/9J,EAAQ+9J,aAAakB,EAAaC,uBAAuBl/J,IAAgBA,EAAQy1J,SAASl/J,KAAI,SAAS08J,GAAM,IAAIkM,EAAxc,SAAsBlM,EAAKjzJ,GAAmC,IAA1B,IAAIm/J,OAAe,EAAexhK,EAAE,EAAEgB,EAAEqB,EAAQ01J,QAAQr8J,OAAOsE,EAAEgB,EAAEhB,IAAgF,GAA5CwhK,EAAnBn/J,EAAQ01J,QAAQ/3J,GAA0B21E,OAAO2/E,EAAKjzJ,GAA4B,OAAOm/J,EAAgB,OAAO,CAAK,CAA0OC,CAAanM,EAAKjzJ,GAAS,GAAGm/J,EAAgB,OAAOA,EAAer2J,MAAM,GAAe,gBAAZmqJ,EAAKzyJ,KAAqB,CAAC,IAAIsI,EAAM9I,EAAQ+9J,aAAa5qH,SAAS8/G,EAAKnqJ,OAAsD,OAArC,MAAPA,IAAaA,EAAM9I,EAAQgzJ,WAAWC,IAAa/D,EAASsF,WAAW1rJ,EAAM,CAAC,GAAe,YAAZmqJ,EAAKzyJ,MAA8B,QAAZyyJ,EAAKzyJ,KAAc,OAAOyyJ,EAAKnqJ,MAAM,MAAM,IAAI/R,MAAM,2BAA2Bk8J,EAAKzyJ,KAAK,IAAI,IAAGK,KAAK,GAAG,CAAsB,EAAE,CAAC,cAAc,EAAE,kBAAkB,KAAK,GAAG,CAAC,SAASw+E,EAAQjoF,EAAOC,GAAS,aAAa,IAAIi4J,EAAa,WAAW,SAASC,EAAiB5+F,EAAOm2C,GAAO,IAAI,IAAInpG,EAAE,EAAEA,EAAEmpG,EAAMztG,OAAOsE,IAAI,CAAC,IAAI6xJ,EAAW1oD,EAAMnpG,GAAG6xJ,EAAWC,WAAWD,EAAWC,aAAY,EAAMD,EAAWE,cAAa,EAAQ,UAAUF,IAAWA,EAAWG,UAAS,GAAKz4J,OAAO04J,eAAej/F,EAAO6+F,EAAWt1J,IAAIs1J,EAAW,CAAC,CAAC,OAAO,SAASK,EAAYC,EAAWC,GAAuI,OAAvHD,GAAWP,EAAiBM,EAAYluJ,UAAUmuJ,GAAeC,GAAYR,EAAiBM,EAAYE,GAAoBF,CAAW,CAAC,CAAte,GAA0nB,IAAIkD,EAAO1zE,EAAQ,YAAgB4/E,EAAa,WAAW,SAASA,EAAaj/J,IAAjO,SAAyBwxD,EAASq+F,GAAa,KAAKr+F,aAAoBq+F,GAAc,MAAM,IAAIW,UAAU,oCAAqC,EAA2FC,CAAgBh5J,KAAKwnK,GAAcxnK,KAAK4nK,UAAUr/J,EAAQq/J,UAAU5nK,KAAKu0B,UAAUhsB,EAAQgsB,UAAUv0B,KAAKwoF,OAAOjgF,EAAQigF,MAAM,CAAmmE,OAAlmEqvE,EAAa2P,EAAa,CAAC,CAAC/kK,IAAI,WAAW4O,MAAM,SAAkBi7H,EAAIroI,EAASkiK,GAAmC,OAAzBA,EAASA,IAAU,EAAanmK,KAAK6nK,cAAc7nK,KAAK07C,SAAS4wF,GAAKroI,EAASkiK,EAAS,GAAG,CAAC1jK,IAAI,oBAAoB4O,MAAM,SAA2B80J,EAAS2B,EAAQz2J,GAAU80J,GAAU2B,EAAQz2J,EAAO,GAAG,CAAC5O,IAAI,eAAe4O,MAAM,SAAsBA,EAAMtI,GAAM,OAAc,MAAPsI,IAAcA,GAAc,mBAAPtI,GAAwC,IAAfsI,EAAMzP,MAAU,GAAG,CAACa,IAAI,gBAAgB4O,MAAM,SAAuBA,EAAMy2J,EAAQ3B,GAAU,IAAIp9J,EAAKtJ,OAAOyK,UAAU3C,SAAS4C,KAAKkH,GAAW02J,EAAa/nK,KAAKu0B,UAAUv0B,KAAKgoK,KAAK,GAAGhoK,KAAKioK,aAAa52J,EAAMtI,GAAO,OAAO/I,KAAKkoK,kBAAkB/B,EAAS2B,EAAQC,GAAc,GAAU,mBAAPh/J,EAAqI,MAAU,oBAAPA,EAAiC/I,KAAKkoK,mBAAmB/B,EAAS2B,EAAQz2J,IAAkB,IAARA,EAAqBrR,KAAKkoK,mBAAmB/B,EAAS2B,EAAQC,QAAjE,EAAhM,IAAI,IAAQx7B,EAAJrmI,EAAE,EAAQA,EAAEmL,EAAMzP,OAAOsE,IAAKqmI,EAAMl7H,EAAMnL,GAAGlG,KAAKkoK,mBAAmB/B,EAAS2B,EAAQv7B,EAAiL,GAAG,CAAC9pI,IAAI,WAAW4O,MAAM,SAAkBi7H,EAAI07B,GAAKhoK,KAAKgoK,IAAS,MAALA,EAAUhoK,KAAKu0B,UAAU3yB,OAAO,EAAEomK,EAAI,IAAI7mK,OAAI,EAAWqnF,OAAO,EAAWtkF,OAAO,EAAWqoI,EAAMvsI,KAAKu0B,UAAUv0B,KAAKgoK,KAAK,IAAIx/E,EAAOxoF,KAAKwoF,OAAO8jD,EAAI,CAAC,MAAMhrI,GAA8N,MAAvNH,EAAI,IAAIm6J,EAAO0E,mBAAmB,oCAAuC58H,WAAW,CAACnkC,GAAG,iCAAiCqtI,IAAIA,EAAI4vB,YAAY,gCAAgC5vB,EAAI,qBAAqB67B,UAAU7mK,GAAaH,CAAG,CAAC,IAAI+C,EAAOskF,EAAO5/E,IAAI2jI,EAAM,CAACy7B,IAAIhoK,KAAKgoK,IAAIzzI,UAAUv0B,KAAKu0B,WAAW,CAAC,MAAMjzB,GAAsO,MAA/NH,EAAI,IAAIm6J,EAAO0E,mBAAmB,kCAAqC58H,WAAW,CAACnkC,GAAG,+BAA+Bi9J,YAAY,gCAAgC5vB,EAAI,qBAAqBC,MAAMA,EAAMD,IAAIA,EAAI67B,UAAU7mK,GAAaH,CAAG,CAAC,OAAW,MAAR+C,GAAclE,KAAKgoK,IAAI,EAAUhoK,KAAK07C,SAAS4wF,EAAItsI,KAAKgoK,IAAI,GAAU9jK,CAAM,GAAG,CAACzB,IAAI,wBAAwB4O,MAAM,SAA+Bk7H,EAAMD,GAAK,IAAI/jI,EAAQ,CAACq/J,UAAU5nK,KAAK4nK,UAAU9hK,MAAM,GAAGyuB,UAAUv0B,KAAKu0B,UAAUzuB,MAAM,IAA2H,OAAvHyC,EAAQigF,OAAOxoF,KAAKwoF,OAAOjgF,EAAQgsB,UAAUv0B,KAAKu0B,UAAU5a,OAAO4yH,GAAOhkI,EAAQq/J,UAAU5nK,KAAK4nK,UAAUjuJ,OAAO2yH,GAAY,IAAIk7B,EAAaj/J,EAAQ,KAAYi/J,CAAY,CAA/xE,GAAmyEA,EAAaC,uBAAuB,SAASvC,GAAM,IAAI18E,EAAO08E,EAAK18E,OAAOktD,EAAKwvB,EAAKxvB,KAASntI,EAAQ,CAACigF,OAAOA,EAAOktD,KAAKA,EAAMntI,UAAkB,IAA4B,OAAzBA,EAAQgsB,UAAU,CAACmhH,GAAa,IAAI8xB,EAAaj/J,EAAQ,EAAE5I,EAAOC,QAAQ4nK,CAAY,EAAE,CAAC,WAAW,IAAI,GAAG,CAAC,SAAS5/E,EAAQjoF,EAAOC,GAAS,aAAa,IAAI63J,EAAS7vE,EAAQ,eAAmB0zE,EAAO1zE,EAAQ,YAAgR,SAASwgF,EAAiBlL,EAAM5wB,GAAK,GAAkB,IAAf4wB,EAAMt7J,OAAY,OAAO,EAAM,IAAsCymK,EAA1BnL,EAAMA,EAAMt7J,OAAO,GAA4B0qI,IAAIpjF,OAAO,GAAOo/G,EAAgBh8B,EAAIpjF,OAAO,EAAEojF,EAAI1qI,OAAO,GAAG,OAA+C,IAAxCymK,EAAa7gK,QAAQ8gK,EAAoB,CAAC,SAASC,EAAOrL,EAAM5wB,GAA2B,OAAtB4wB,EAAM91J,KAAK,CAACklI,IAAIA,IAAa4wB,CAAK,CAAqkB,SAASsL,EAAUhN,EAAKkL,EAAWn+J,GAAS,IAAIi9J,EAAShK,EAAKgK,UAAUj9J,EAAQi9J,SAAa74I,EAAM+5I,EAAWl/J,QAAQg0J,GAAM,IAAIgK,EAAU,OAAOkB,EAAW,IAAI7qD,OAAM,EAAOkM,OAAK,EAAO,IAAIlM,EAAM47C,EAASjtG,SAASk8G,EAAWlB,EAAS74I,GAAOo7F,EAAK0vC,EAASltG,QAAQm8G,EAAWlB,EAAS74I,EAAM,CAAC,MAAMw7I,IAA75C,SAAmC5/J,GAAS,IAAIpH,EAAI,IAAIm6J,EAAOgC,gBAAgB,4BAAgChxB,EAAI/jI,EAAQizJ,KAAKnqJ,MAA0H,MAApHlQ,EAAIiiC,WAAW,CAACnkC,GAAG,2BAA2Bi9J,YAAY,YAAY5vB,EAAI,IAAI67B,UAAU5/J,EAAQ4/J,UAAU9G,KAAK/0B,GAAWnrI,CAAG,CAAqqCsnK,CAA0B,CAACjN,KAAKA,EAAK2M,UAAUA,GAAW,CAAC,IAAIO,EAAUhC,EAAW5gK,MAAMiiH,EAAKp7F,GAAWg8I,EAAWjC,EAAW5gK,MAAM6mB,EAAM,EAAEkvF,EAAM,GAAO+sD,EAAMrgK,EAAQk+J,SAAS,CAAC95I,MAAMA,EAAM6uI,KAAKA,EAAKkN,UAAUA,EAAUC,WAAWA,EAAW5gD,KAAKA,EAAKlM,MAAMA,EAAM6qD,WAAWA,IAA2H,MAArD,mBAAhDjnK,OAAOyK,UAAU3C,SAAS4C,KAAKy+J,KAAmCA,EAAMnR,EAASuF,aAAa4L,IAAcnR,EAASuF,aAAa,CAAC0J,EAAW5gK,MAAM,EAAEiiH,GAAM,CAAC6gD,GAAOlC,EAAW5gK,MAAM+1G,EAAM,IAAI,CAA4Tl8G,EAAOC,QAAQ,CAACknK,YAA3U,SAAqBJ,EAAWn+J,GAAyQ,OAA3Om+J,EAAW5M,QAAO,SAAS1jJ,EAASolJ,GAA0F,MAArE,gBAAZA,EAAKzyJ,MAAsByyJ,EAAK77J,SAAS4I,EAAQ09J,YAAY7vJ,EAAShP,KAAKo0J,GAAaplJ,CAAQ,GAAE,IAAqBpQ,SAAQ,SAASw1J,GAAMkL,EAAW8B,EAAUhN,EAAKkL,EAAWn+J,EAAQ,IAAUm+J,CAAU,EAAyCrC,mBAAn1C,SAA4Br4J,GAAiD,IAA1C,IAAI68J,EAAvZ,SAA4B78J,GAA4H,IAArH,IAAiIsgI,EAA7HoJ,EAAK1pI,EAAMrJ,QAAO,SAAS64J,GAAM,MAAmB,QAAZA,EAAKzyJ,IAAY,IAAGjK,KAAI,SAAS08J,GAAM,OAAOA,EAAKnqJ,KAAK,IAAOnN,EAAO,GAAWgC,EAAE,EAAMA,EAAEwvI,EAAK9zI,OAAOsE,IAA6B,OAAxBomI,EAAIoJ,EAAKxvI,IAAU,GAAakiK,EAAiBlkK,EAAOooI,GAAMpoI,EAAOixC,MAAWjxC,EAAOqkK,EAAOrkK,EAAOooI,GAAkC,MAApBA,EAAIA,EAAI1qI,OAAO,KAAUsC,EAAOqkK,EAAOrkK,EAAOooI,IAAM,OAAOpoI,CAAM,CAAoD4kK,CAAmB98J,GAAe9F,EAAE,EAAEA,EAAE2iK,EAAYjnK,OAAOsE,IAAmC,GAAqC,IAApD2iK,EAAY3iK,GAAiBomI,IAAI9kI,QAAQ,SAAc,MAAM,OAAQ,OAAO,CAAK,EAAsqC,EAAE,CAAC,cAAc,EAAE,WAAW,IAAI,GAAG,CAAC,SAASogF,EAAQjoF,EAAOC,GAAS,aAAa,IAAI63J,EAAS7vE,EAAQ,eAAo7C,IAAImhF,EAA75CnhF,EAAQ,YAA85CwzE,EAAxe,SAAoB/4H,EAAQ2mI,GAAc,IAAIr4J,EAAI,CAAC,EAAEA,EAAI0xB,QAAQA,EAAQ1xB,EAAIq4J,aAAaA,EAAar4J,EAAIs4J,mBAAmBt4J,EAAIq4J,aAAa5/J,KAAK,KAAK,IAAI8iD,EAAO,IAAIjxC,OAAO,QAAQtK,EAAIs4J,mBAAmB,wBAAwBt4J,EAAIs4J,mBAAmB,KAAK,KAAyL,OAApLt4J,EAAImyJ,QAAQrL,EAAS8F,aAAarxG,EAAOv7C,EAAI0xB,SAAS1xB,EAAIu4J,0BAA0Bv4J,EAAImyJ,QAAQhkK,KAAI,WAAW,OAAO,CAAC,IAAG6R,EAAIw4J,gBAAgBx4J,EAAImyJ,QAAQhkK,KAAI,WAAW,OAAO,CAAC,IAAj2C,SAA6B6R,GAAK,SAASy4J,IAAkB,IAAIC,EAAG,CAACnM,MAAMx3J,MAAMwE,UAAUpE,MAAMqE,KAAK1E,YAAY4jK,EAAGnM,MAAM/1J,QAAQ,IAAImG,EAAM+7J,EAAGnM,MAAM,GAAGmM,EAAGnM,MAAM,GAAGmM,EAAGnM,MAAM3rI,QAAQjkB,GAAO+7J,EAAGnM,MAAM/nH,MAAM,IAAIgmH,EAAOkO,EAAGnM,MAAM/nH,MAA4F,OAAtFk0H,EAAGlO,OAAOA,EAAOkO,EAAGzpI,OAAM,EAAKjvB,EAAImyJ,QAAQvxI,QAAQ83I,GAAI14J,EAAIw4J,gBAAgB53I,QAAQ,GAAU5gB,EAAIu4J,0BAA0B33I,QAAQ,EAAE,EAAgC,IAA5B5gB,EAAI0xB,QAAQ76B,QAAQ,OAAuC,IAA5BmJ,EAAI0xB,QAAQ76B,QAAQ,MAAWmJ,EAAI0xB,QAAQz8B,QAAQ,eAAewjK,GAAiB,IAAI1nK,EAAE,IAAIuZ,OAAO,kBAAkBtK,EAAIs4J,mBAAmB,MAAmY,OAA7Xt4J,EAAI0xB,QAAQz8B,QAAQlE,EAAE0nK,GAAmQ1nK,EAAE,IAAIuZ,OAAO,QAAQtK,EAAIs4J,mBAAmB,oBAAoBt4J,EAAI0xB,QAAQz8B,QAAQlE,GAAtU,WAAwB,IAAI2nK,EAAG,CAACnM,MAAMx3J,MAAMwE,UAAUpE,MAAMqE,KAAK1E,YAAY4jK,EAAGnM,MAAM/nH,MAAM,IAAIgmH,EAAOkO,EAAGnM,MAAM/nH,MAAqF,OAA/Ek0H,EAAGlO,OAAOA,EAAOkO,EAAGC,MAAK,EAAK34J,EAAImyJ,QAAQ17J,KAAKiiK,GAAI14J,EAAIw4J,gBAAgB/hK,KAAK,GAAUuJ,EAAIu4J,0BAA0B9hK,KAAK,EAAE,IAA4GuJ,CAAG,CAAmc44J,CAAoB54J,EAAI,IAAkChR,EAAOC,QAAQ,SAASyiC,EAAQ2mI,GAAc,OAAOvR,EAAS/8I,UAAUquJ,EAAS1mI,EAAQ2mI,GAAc,CAAC,EAAE,CAAC,cAAc,EAAE,YAAY,IAAI,GAAG,CAAC,SAASphF,EAAQjoF,EAAOC,GAAS,aAAa,IAAIi4J,EAAa,WAAW,SAASC,EAAiB5+F,EAAOm2C,GAAO,IAAI,IAAInpG,EAAE,EAAEA,EAAEmpG,EAAMztG,OAAOsE,IAAI,CAAC,IAAI6xJ,EAAW1oD,EAAMnpG,GAAG6xJ,EAAWC,WAAWD,EAAWC,aAAY,EAAMD,EAAWE,cAAa,EAAQ,UAAUF,IAAWA,EAAWG,UAAS,GAAKz4J,OAAO04J,eAAej/F,EAAO6+F,EAAWt1J,IAAIs1J,EAAW,CAAC,CAAC,OAAO,SAASK,EAAYC,EAAWC,GAAuI,OAAvHD,GAAWP,EAAiBM,EAAYluJ,UAAUmuJ,GAAeC,GAAYR,EAAiBM,EAAYE,GAAoBF,CAAW,CAAC,CAAte,GAA0nB,IAAIX,EAAS7vE,EAAQ,eAAmB4/E,EAAa5/E,EAAQ,mBAAuB4hF,EAAW5hF,EAAQ,iBAAqB0zE,EAAO1zE,EAAQ,YAAgB6hF,EAAM7hF,EAAQ,WAAe8hF,EAAO9hF,EAAQ,eAAmB+hF,EAAQ/hF,EAAQ,eAAmPjoF,EAAOC,QAAQ,WAAW,SAAS8/J,EAAar9H,EAAQ95B,IAArqB,SAAyBwxD,EAASq+F,GAAa,KAAKr+F,aAAoBq+F,GAAc,MAAM,IAAIW,UAAU,oCAAqC,EAA+hBC,CAAgBh5J,KAAK0/J,GAAc1/J,KAAK4pK,SAASrhK,GAASvI,KAAK6pK,WAAW,CAACC,QAAQ,CAACvK,SAASv/J,KAAKu/J,YAAYv/J,KAAK4yB,KAAKyP,EAAQ,CAAwsD,OAAvsDw1H,EAAa6H,EAAa,CAAC,CAACj9J,IAAI,OAAO4O,MAAM,SAAcgxB,GAAS,GAAoB,iBAAVA,EAAmB,CAAC,IAAIlhC,EAAI,IAAIm6J,EAAO2E,gBAAgB,4BAAoF,MAAxD9+J,EAAIiiC,WAAWnkC,GAAG,sCAA4CkC,CAAG,CAACnB,KAAKqiC,QAAQA,CAAO,GAAG,CAAC5/B,IAAI,UAAU4O,MAAM,SAAiBqkI,GAA8H,OAAxH11I,KAAK01I,KAAW,MAANA,EAAWA,EAAK,CAAC,EAAE11I,KAAKsmK,aAAakB,EAAaC,uBAAuB,CAAC/xB,KAAK11I,KAAK01I,KAAKltD,OAAOxoF,KAAKwoF,SAAgBxoF,IAAI,GAAG,CAACyC,IAAI,WAAW4O,MAAM,SAAkB9I,GAASvI,KAAKu/J,SAASh3J,EAAQg3J,SAASv/J,KAAKi+J,QAAQ11J,EAAQ01J,QAAQj+J,KAAKk+J,eAAe31J,EAAQ21J,eAAez+J,OAAOD,KAAKi4J,EAASj8H,UAAU18B,KAAI,SAAS2D,GAAKzC,KAAKyC,GAAmB,MAAd8F,EAAQ9F,GAAW8F,EAAQ9F,GAAKg1J,EAASj8H,SAAS/4B,EAAI,GAAEzC,KAAK,GAAG,CAACyC,IAAI,cAAc4O,MAAM,WAAuB,OAA/nCgxB,EAAmpCriC,KAAKqiC,QAAhpC2mI,EAAwpChpK,KAAKk+J,eAAeqC,iBAA7mCr8J,EAArCslK,EAAWnnI,EAAQ2mI,GAAiClG,QAAQhkK,KAAI,SAASwO,GAAO,OAAOA,EAAM4vJ,MAAM,EAAE,IAAUzF,EAASqF,WAAWrF,EAASwE,cAAc/3J,EAAOkF,KAAK,MAA9N,IAAsBi5B,EAAQ2mI,EAA+D9kK,CAA8nC,GAAG,CAACzB,IAAI,aAAa4O,MAAM,SAAoB3F,GAAK1L,KAAKi+J,QAAQj4J,SAAQ,SAASrG,GAAQA,EAAOsQ,IAAIvE,EAAI,GAAE,GAAG,CAACjJ,IAAI,QAAQ4O,MAAM,WAAyc,OAAxbrR,KAAK+pK,SAASN,EAAM7G,SAAS5iK,KAAKqiC,QAAQ,CAAC5+B,KAAKzD,KAAKk+J,eAAeqC,iBAAiBgD,MAAMvjK,KAAKk+J,eAAesC,oBAAoBxgK,KAAK6pK,WAAW,CAACC,QAAQ,CAACC,SAAS/pK,KAAK+pK,YAAY/pK,KAAKknK,MAAMuC,EAAM7+J,MAAM5K,KAAK+pK,SAAS/pK,KAAKy7J,YAAYz7J,KAAK6pK,WAAW,CAACC,QAAQ,CAAC5C,MAAMlnK,KAAKknK,SAASlnK,KAAKwzI,OAAOk2B,EAAO9+J,MAAM5K,KAAKknK,MAAMlnK,KAAKi+J,SAASj+J,KAAK6pK,WAAW,CAACC,QAAQ,CAACt2B,OAAOxzI,KAAKwzI,UAAUxzI,KAAK0mK,WAAWgD,EAAOxF,UAAUlkK,KAAKwzI,OAAOxzI,KAAKi+J,SAAgBj+J,IAAI,GAAG,CAACyC,IAAI,SAAS4O,MAAM,WAAsR,OAApQrR,KAAK6pK,WAAW,CAACC,QAAQ,CAACpD,WAAW1mK,KAAK0mK,cAAc1mK,KAAKqiC,QAAQsnI,EAAQ,CAAC3L,SAASh+J,KAAK0mK,WAAWhxB,KAAK11I,KAAK01I,KAAKuoB,QAAQj+J,KAAKi+J,QAAQz1E,OAAOxoF,KAAKwoF,OAAO+yE,WAAWv7J,KAAKu7J,WAAWgE,SAASv/J,KAAKu/J,WAAWv/J,KAAK6pK,WAAW,CAACC,QAAQ,CAACznI,QAAQriC,KAAKqiC,WAAkBriC,IAAI,KAAY0/J,CAAY,CAA74D,EAAg5D,EAAE,CAAC,cAAc,EAAE,WAAW,EAAE,UAAU,EAAE,cAAc,GAAG,cAAc,GAAG,kBAAkB,GAAG,gBAAgB,KAAK,GAAG,CAAC,SAAS93E,EAAQjoF,EAAOC,GAAS,SAAS+jF,EAAUp7E,GAASvI,KAAKuI,QAAQA,GAAS,CAACyhK,QAAQ,CAAC,EAAE,CAAmzC,SAASC,IAAajqK,KAAKkqK,OAAM,CAAK,CAAC,SAASliH,EAASgiH,EAAQlpF,GAAMA,EAAKqpF,WAAWH,EAAQG,WAAWrpF,EAAKspF,aAAaJ,EAAQI,YAAY,CAAq4E,SAASC,EAASnjK,GAAG,GAAGA,EAAG,MAAM,OAAOA,EAAEojK,UAAU,IAAI,UAAUpjK,EAAEijK,WAAW,QAAQjjK,EAAEkjK,aAAa,GAAI,CAAC,SAASG,EAAUC,EAAMv5I,EAAMrvB,GAAQ,MAAiB,iBAAP4oK,EAAwBA,EAAMthH,OAAOj4B,EAAMrvB,GAAgB4oK,EAAM5oK,QAAQqvB,EAAMrvB,GAAQqvB,EAAc,IAAIw5I,KAAKh5F,KAAK3/D,OAAO04J,EAAMv5I,EAAMrvB,GAAQ,GAAU4oK,CAAM,CAAiP,SAASE,EAAcC,EAAO7pF,GAAU6pF,EAAOC,eAAkDD,EAAOC,eAAevuJ,YAAYykE,GAApE6pF,EAAOn/B,IAAInvH,YAAYykE,EAAmD,CAA3/I6C,EAAUz5E,UAAU25E,gBAAgB,SAASgnF,EAAO19B,GAAU,IAAI5kI,EAAQvI,KAAKuI,QAAYuiK,EAAI,IAAIC,EAAcC,EAAWziK,EAAQyiK,YAAY,IAAIf,EAAe5N,EAAa9zJ,EAAQ8zJ,aAAiB2N,EAAQzhK,EAAQyhK,QAAYiB,EAAa1iK,EAAQ2iK,OAAO,CAAC,EAAMC,EAAU,CAACC,GAAG,IAAIC,GAAG,IAAIC,IAAI,IAAIC,KAAK,IAAIC,KAAK,KAAgd,OAAxcxB,GAASgB,EAAWS,mBAAmBzB,GAASc,EAAIzO,aAA2a,SAA2BqP,EAAUV,EAAWhB,GAAS,IAAI0B,EAAU,CAAC,GAAGV,aAAsBf,EAAY,OAAOe,EAAWU,EAAUV,CAAU,CAAC,IAAI3O,EAAa,CAAC,EAAMsP,EAAWD,aAAqBE,SAA6B,SAASC,EAAMppK,GAAK,IAAIC,EAAGgpK,EAAUjpK,IAASC,GAAIipK,IAAYjpK,EAAqB,GAAlBgpK,EAAU9pK,OAAU,SAASyU,GAAKq1J,EAAUjpK,EAAI4T,EAAI,EAAEq1J,GAAUrP,EAAa55J,GAAKC,GAAI,SAAS2T,GAAK3T,EAAG,WAAWD,EAAI,MAAM4T,EAAIg0J,EAASL,GAAS,GAAG,WAAW,CAAC,CAAqD,OAA3SA,EAAQA,GAAS,CAAC,EAAqO6B,EAAM,WAAWA,EAAM,SAASA,EAAM,cAAqBxP,CAAY,CAAj7ByP,CAAkBzP,EAAa2O,EAAWhB,GAASc,EAAIE,WAAWziK,EAAQyiK,YAAYA,EAAc,aAAa9vJ,KAAKiyH,KAAWg+B,EAAUY,KAAK,IAAIZ,EAAUh8G,KAAK,IAAI87G,EAAa,IAAI,gCAA+BA,EAAal+H,IAAIk+H,EAAal+H,KAAK,uCAA0C89H,EAAQC,EAAIlgK,MAAMigK,EAAOI,EAAaE,GAAgBL,EAAIzO,aAAa/6J,MAAM,sBAA6B0pK,EAAWx/B,GAAG,EAAuqBy+B,EAAW//J,UAAU,CAAC8hK,cAAc,WAAWhsK,KAAKwrI,KAAI,IAAKygC,GAAmBC,eAAe,KAAK,KAAK,MAASlsK,KAAKgqK,UAAShqK,KAAKwrI,IAAI2gC,YAAYnsK,KAAKgqK,QAAQM,SAAS,EAAEjtG,aAAa,SAASi9F,EAAa8R,EAAUC,EAAMn2J,GAAO,IAAIs1H,EAAIxrI,KAAKwrI,IAAQ57F,EAAG47F,EAAI8gC,gBAAgBhS,EAAa+R,GAAOD,GAAeG,EAAIr2J,EAAMtU,OAAO8oK,EAAc1qK,KAAK4vC,GAAI5vC,KAAK4qK,eAAeh7H,EAAG5vC,KAAKgqK,SAAShiH,EAAShoD,KAAKgqK,QAAQp6H,GAAI,IAAI,IAAI1pC,EAAE,EAAEA,EAAEqmK,EAAIrmK,IAAI,CAAKo0J,EAAapkJ,EAAMs2J,OAAOtmK,GAA9B,IAAqCmL,EAAM6E,EAAMwlC,SAASx1C,GAAmCuO,GAA5B43J,EAAMn2J,EAAMu2J,SAASvmK,GAAYslI,EAAIkhC,kBAAkBpS,EAAa+R,IAAOrsK,KAAKgqK,SAAShiH,EAAS9xC,EAAMy2J,WAAWzmK,GAAGuO,GAAMA,EAAKpD,MAAMoD,EAAKm4J,UAAUv7J,EAAMu+B,EAAGi9H,iBAAiBp4J,EAAK,CAAC,EAAEq4J,WAAW,SAASxS,EAAa8R,EAAUC,GAAO,IAAIU,EAAQ/sK,KAAK4qK,eAA2BmC,EAAQlhC,QAAQ7rI,KAAK4qK,eAAemC,EAAQnuE,UAAU,EAAEouE,mBAAmB,SAAS77J,EAAO87J,GAAK,EAAEC,iBAAiB,SAAS/7J,GAAQ,EAAEg8J,sBAAsB,SAASj0G,EAAO93D,GAAM,IAAIgsK,EAAIptK,KAAKwrI,IAAI6hC,4BAA4Bn0G,EAAO93D,GAAMpB,KAAKgqK,SAAShiH,EAAShoD,KAAKgqK,QAAQoD,GAAK1C,EAAc1qK,KAAKotK,EAAI,EAAEE,oBAAoB,SAASC,EAAGt8I,EAAMrvB,GAAQ,EAAE4rK,WAAW,SAAShD,EAAMv5I,EAAMrvB,GAA8C,GAAtC4oK,EAAMD,EAAU56H,MAAM3vC,KAAKyF,WAAoB,CAAC,GAAGzF,KAAKkqK,MAAO,IAAIuD,EAASztK,KAAKwrI,IAAIkiC,mBAAmBlD,QAAgBiD,EAASztK,KAAKwrI,IAAIjsC,eAAeirE,GAAUxqK,KAAK4qK,eAAgB5qK,KAAK4qK,eAAevuJ,YAAYoxJ,GAAkB,QAAQvyJ,KAAKsvJ,IAAQxqK,KAAKwrI,IAAInvH,YAAYoxJ,GAAUztK,KAAKgqK,SAAShiH,EAAShoD,KAAKgqK,QAAQyD,EAAS,CAAC,EAAEE,cAAc,SAAS/hK,GAAM,EAAEgiK,YAAY,WAAW5tK,KAAKwrI,IAAIqiC,WAAW,EAAEpC,mBAAmB,SAASzB,IAAYhqK,KAAKgqK,QAAQA,KAASA,EAAQG,WAAW,EAAE,EAAEvoC,QAAQ,SAAS4oC,EAAMv5I,EAAMrvB,GAAQ4oK,EAAMD,EAAU56H,MAAM3vC,KAAKyF,WAAW,IAAIqoK,EAAK9tK,KAAKwrI,IAAIuiC,cAAcvD,GAAOxqK,KAAKgqK,SAAShiH,EAAShoD,KAAKgqK,QAAQ8D,GAAMpD,EAAc1qK,KAAK8tK,EAAK,EAAEE,WAAW,WAAWhuK,KAAKkqK,OAAM,CAAI,EAAE+D,SAAS,WAAWjuK,KAAKkqK,OAAM,CAAK,EAAEgE,SAAS,SAAStiK,EAAKuiK,EAAS7D,GAAU,IAAI8D,EAAKpuK,KAAKwrI,IAAI6iC,eAAe,GAAGD,GAAMA,EAAKE,mBAAmB,CAAC,IAAIC,EAAGH,EAAKE,mBAAmB1iK,EAAKuiK,EAAS7D,GAAUtqK,KAAKgqK,SAAShiH,EAAShoD,KAAKgqK,QAAQuE,GAAI7D,EAAc1qK,KAAKuuK,EAAG,CAAC,EAAEC,QAAQ,SAASltK,GAAOD,QAAQqF,KAAK,qBAAqBpF,EAAM+oK,EAASrqK,KAAKgqK,SAAS,EAAE1oK,MAAM,SAASA,GAAOD,QAAQC,MAAM,mBAAmBA,EAAM+oK,EAASrqK,KAAKgqK,SAAS,EAAEyE,WAAW,SAASntK,GAA2E,MAApED,QAAQC,MAAM,wBAAwBA,EAAM+oK,EAASrqK,KAAKgqK,UAAgB1oK,CAAK,GAA8T,+JAA+JsE,QAAQ,QAAO,SAASnD,GAAKwnK,EAAW//J,UAAUzH,GAAK,WAAW,OAAO,IAAI,CAAC,IAA6I,IAAIsoK,EAAUnjF,EAAQ,SAASmjF,UAAckB,EAAkBrsK,EAAQqsK,kBAAkBrkF,EAAQ,SAASqkF,kBAAkBrsK,EAAQy7J,cAAczzE,EAAQ,SAASyzE,cAAcz7J,EAAQ+jF,UAAUA,CAAS,EAAE,CAAC,QAAQ,GAAG,QAAQ,KAAK,GAAG,CAAC,SAASiE,EAAQjoF,EAAOC,GAAS,SAASuvD,EAAKlzC,EAAIyyJ,GAAM,IAAI,IAAIj0J,KAAKwB,EAAKyyJ,EAAKj0J,GAAGwB,EAAIxB,EAAG,CAAC,SAASk0J,EAASp5J,EAAMq5J,GAAO,IAAIC,EAAGt5J,EAAMrL,UAAU,GAAGzK,OAAO04E,OAAO,CAAC,IAAI22F,EAAIrvK,OAAO04E,OAAOy2F,EAAM1kK,WAAW2kK,EAAGE,UAAUD,CAAG,CAAC,KAAKD,aAAcD,GAAO,CAAC,SAAS/uI,IAAI,CAACA,EAAE31B,UAAU0kK,EAAM1kK,UAAkBilD,EAAK0/G,EAAbhvI,EAAE,IAAIA,GAAatqB,EAAMrL,UAAU2kK,EAAGhvI,CAAC,CAAIgvI,EAAG/uK,aAAayV,IAAwB,mBAAPA,GAAmBlU,QAAQC,MAAM,gBAAgBiU,GAAOs5J,EAAG/uK,YAAYyV,EAAM,CAAC,IAAIy5J,EAAO,+BAAmCC,EAAS,CAAC,EAAMC,EAAaD,EAASC,aAAa,EAAMC,EAAeF,EAASE,eAAe,EAAMC,EAAUH,EAASG,UAAU,EAAMC,EAAmBJ,EAASI,mBAAmB,EAAMC,EAAsBL,EAASK,sBAAsB,EAAMC,EAAYN,EAASM,YAAY,EAAMC,EAA4BP,EAASO,4BAA4B,EAAMC,EAAaR,EAASQ,aAAa,EAAMC,EAAcT,EAASS,cAAc,EAAMC,EAAmBV,EAASU,mBAAmB,GAAOC,EAAuBX,EAASW,uBAAuB,GAAOC,EAAcZ,EAASY,cAAc,GAAOC,EAAc,CAAC,EAAMC,EAAiB,CAAC,EAAwMC,GAAnLF,EAAcG,gBAAgBF,EAAiB,GAAG,mBAAmB,GAA0BD,EAAcI,oBAAoBH,EAAiB,GAAG,uBAAuB,GAA6BD,EAAcE,uBAAuBD,EAAiB,GAAG,0BAA0B,IAAkbI,GAAxZL,EAAcM,oBAAoBL,EAAiB,GAAG,iBAAiB,GAA6BD,EAAcO,uBAAuBN,EAAiB,GAAG,oBAAoB,GAA2BD,EAAcQ,qBAAqBP,EAAiB,GAAG,kBAAkB,GAAmCD,EAAcS,6BAA6BR,EAAiB,GAAG,0BAA0B,GAAqBD,EAAcK,eAAeJ,EAAiB,GAAG,YAAY,IAAqGS,GAA5EV,EAAcW,mBAAmBV,EAAiB,GAAG,gBAAgB,GAA2BD,EAAcU,qBAAqBT,EAAiB,IAAI,mBAAmB,KAAye,SAASW,EAAanxK,EAAKmE,GAAS,GAAGA,aAAmBpE,MAAO,IAAIgC,EAAMoC,OAAapC,EAAMtB,KAAKV,MAAM6K,KAAKnK,KAAK+vK,EAAiBxwK,IAAOS,KAAK0D,QAAQqsK,EAAiBxwK,GAASD,MAAMqxK,mBAAkBrxK,MAAMqxK,kBAAkB3wK,KAAK0wK,GAAgF,OAAlEpvK,EAAM/B,KAAKA,EAAQmE,IAAQ1D,KAAK0D,QAAQ1D,KAAK0D,QAAQ,KAAKA,GAAepC,CAAK,CAAyE,SAASsvK,IAAW,CAA+N,SAASC,EAAa/vF,EAAKlqE,GAAS5W,KAAK8wK,MAAMhwF,EAAK9gF,KAAK+wK,SAASn6J,EAAQo6J,EAAgBhxK,KAAK,CAAC,SAASgxK,EAAgBzhI,GAAM,IAAI0hI,EAAI1hI,EAAKuhI,MAAMI,MAAM3hI,EAAKuhI,MAAMK,cAAcD,KAAK,GAAG3hI,EAAK2hI,MAAMD,EAAI,CAAC,IAAIG,EAAG7hI,EAAKwhI,SAASxhI,EAAKuhI,OAAOO,GAAQ9hI,EAAK,SAAS6hI,EAAGxvK,QAAQutD,EAAKiiH,EAAG7hI,GAAMA,EAAK2hI,KAAKD,CAAG,CAAC,CAA+G,SAASK,IAAe,CAAC,SAASC,EAAehiI,EAAKuxC,GAAwB,IAAlB,IAAI56E,EAAEqpC,EAAK3tC,OAAasE,KAAK,GAAGqpC,EAAKrpC,KAAK46E,EAAM,OAAO56E,CAAG,CAAC,SAASsrK,EAAc5hI,EAAGL,EAAKkiI,EAAQC,GAAiG,GAArFA,EAASniI,EAAKgiI,EAAehiI,EAAKmiI,IAAUD,EAAaliI,EAAKA,EAAK3tC,UAAU6vK,EAAW7hI,EAAG,CAAC6hI,EAAQE,aAAa/hI,EAAG,IAAI47F,EAAI57F,EAAGuhI,cAAiB3lC,IAAKkmC,GAASE,EAAmBpmC,EAAI57F,EAAG8hI,GAChi2B,SAAyBlmC,EAAI57F,EAAG6hI,GAASjmC,GAAKA,EAAI0lC,OAA0C,iCAA5BO,EAAQnX,eAAqD1qH,EAAGiiI,OAAOJ,EAAQtgK,OAAOsgK,EAAQrF,UAAU,IAAIqF,EAAQpgK,MAAM,CAD+21BygK,CAAgBtmC,EAAI57F,EAAG6hI,GAAS,CAAC,CAAC,SAASM,EAAiBniI,EAAGL,EAAK96B,GAAM,IAAIvO,EAAEqrK,EAAehiI,EAAK96B,GAAM,KAAGvO,GAAG,GAAgM,MAAMwqK,EAAaP,EAAc,IAAI7wK,MAAMswC,EAAGi8F,QAAQ,IAAIp3H,IAA3N,IAA5B,IAAIu9J,EAAUziI,EAAK3tC,OAAO,EAAQsE,EAAE8rK,GAAWziI,EAAKrpC,GAAGqpC,IAAOrpC,GAAyB,GAAtBqpC,EAAK3tC,OAAOowK,EAAapiI,EAAG,CAAC,IAAI47F,EAAI57F,EAAGuhI,cAAiB3lC,IAAKomC,EAAmBpmC,EAAI57F,EAAGn7B,GAAMA,EAAKk9J,aAAa,KAAK,CAAwE,CAAioC,SAAS1F,EAAkBgG,GAA4B,GAAlBjyK,KAAKkyK,UAAU,CAAC,EAAKD,EAAU,IAAI,IAAIE,KAAWF,EAAUjyK,KAAKkyK,UAAUD,EAASE,EAAU,CACnm9B,SAASC,IAAO,CAA6kD,SAASC,EAAYnvI,GAAG,OAAU,KAAHA,EAAQ,OAAW,KAAHA,GAAQ,SAAW,KAAHA,GAAQ,SAAY,KAAHA,GAAQ,UAAU,KAAKA,EAAEovI,aAAa,GAAG,CAAmD,SAASC,EAAWzxF,EAAK78E,GAAU,GAAGA,EAAS68E,GAAO,OAAO,EAAK,GAAGA,EAAKA,EAAK+yC,WAAY,GAAG,GAAG0+C,EAAWzxF,EAAK78E,GAAW,OAAO,QAAY68E,EAAKA,EAAK0xF,YAAa,CAAC,SAASC,IAAW,CAA4L,SAASb,EAAmBpmC,EAAI57F,EAAG6hI,EAAQlgK,GAAQi6H,GAAKA,EAAI0lC,OAA0C,iCAA5BO,EAAQnX,qBAA4D1qH,EAAGiiI,OAAOJ,EAAQtgK,OAAOsgK,EAAQrF,UAAU,GAAI,CAAC,SAASsG,EAAelnC,EAAI57F,EAAG+iI,GAAU,GAAGnnC,GAAKA,EAAI0lC,KAAK,CAAC1lC,EAAI0lC,OAAO,IAAI0B,EAAGhjI,EAAGijI,WAAW,GAAGF,EAAUC,EAAGA,EAAGhxK,UAAU+wK,MAAa,CAAiC,IAAhC,IAAItuE,EAAMz0D,EAAGikF,WAAe3tH,EAAE,EAAQm+F,GAAOuuE,EAAG1sK,KAAKm+F,EAAMA,EAAMA,EAAMmuE,YAAYI,EAAGhxK,OAAOsE,CAAC,CAAC,CAAC,CAAC,SAAS4sK,EAAal0E,EAAWyF,GAAO,IAAI0uE,EAAS1uE,EAAM2uE,gBAAoBjsJ,EAAKs9E,EAAMmuE,YAAiN,OAAlMO,EAAUA,EAASP,YAAYzrJ,EAAU63E,EAAWi1B,WAAW9sG,EAAQA,EAAMA,EAAKisJ,gBAAgBD,EAAcn0E,EAAWq0E,UAAUF,EAASL,EAAe9zE,EAAWuyE,cAAcvyE,GAAmByF,CAAK,CAAC,SAAS6uE,EAAct0E,EAAW+zE,EAASQ,GAAW,IAAIC,EAAGT,EAAS/zE,WAA2C,GAA7Bw0E,GAAIA,EAAGv0E,YAAY8zE,GAAaA,EAASU,WAAWzD,EAAuB,CAAC,IAAI0D,EAASX,EAAS9+C,WAAW,GAAa,MAAVy/C,EAAgB,OAAOX,EAAS,IAAIY,EAAQZ,EAASM,SAAS,MAAMK,EAASC,EAAQZ,EAAS,IAAIa,EAAIL,EAAUA,EAAUH,gBAAgBp0E,EAAWq0E,UAAUK,EAASN,gBAAgBQ,EAAID,EAAQf,YAAYW,EAAaK,EAAKA,EAAIhB,YAAYc,EAAc10E,EAAWi1B,WAAWy/C,EAAuB,MAAXH,EAAiBv0E,EAAWq0E,UAAUM,EAAaJ,EAAUH,gBAAgBO,EAAQ,GAAGD,EAAS10E,WAAWA,QAAiB00E,IAAWC,IAAUD,EAASA,EAASd,cAAwK,OAA1JE,EAAe9zE,EAAWuyE,eAAevyE,EAAWA,GAAe+zE,EAASU,UAAUzD,IAAwB+C,EAAS9+C,WAAW8+C,EAASM,UAAU,MAAYN,CAAQ,CAA8tG,SAASc,IAAUzzK,KAAK6xK,OAAO,CAAC,CAAC,CAAq2E,SAAS6B,IAAO,CAA4D,SAASC,IAAgB,CAAgqB,SAASC,IAAO,CAA0Y,SAASC,IAAU,CAA+F,SAASC,IAAe,CAAqH,SAASC,IAAe,CAAgF,SAASC,IAAW,CAAmE,SAASC,IAAS,CAA6D,SAASC,IAAkB,CAAyF,SAASC,IAAmB,CAAqJ,SAASC,IAAwB,CAA2G,SAAS/Y,IAAgB,CAAqL,SAASgZ,GAAsBC,EAAOC,GAAY,IAAIC,EAAI,GAAOC,EAAuB,GAAfz0K,KAAKqzK,SAAYrzK,KAAK00K,gBAAgB10K,KAASmR,EAAOsjK,EAAQtjK,OAAW87J,EAAIwH,EAAQna,aAAa,GAAG2S,GAAa,MAAR97J,GAA8D,OAA5CA,EAAOsjK,EAAQE,aAAa1H,IAAsB,IAAI2H,EAAkB,CAAC,CAACC,UAAU5H,EAAI97J,OAAO,OAAwE,OAAhE0qJ,GAAkB77J,KAAKw0K,EAAIF,EAAOC,EAAWK,GAA0BJ,EAAIprK,KAAK,GAAG,CAAC,SAAS0rK,GAAoBh0F,EAAKi0F,EAAOH,GAAmB,IAAIzjK,EAAO2vE,EAAK3vE,QAAQ,GAAO87J,EAAInsF,EAAKw5E,aAAa,IAAInpJ,IAAS87J,EAAK,OAAO,EAAM,GAAY,QAAT97J,GAAsB,yCAAN87J,GAAmD,iCAALA,EAAsC,OAAO,EAAqC,IAA/B,IAAI/mK,EAAE0uK,EAAkBhzK,OAAasE,KAAI,CAAC,IAAI8uK,EAAGJ,EAAkB1uK,GAAG,GAAG8uK,EAAG7jK,QAAQA,EAAQ,OAAO6jK,EAAGH,WAAW5H,CAAI,CAAC,OAAO,CAAI,CAAC,SAASpR,GAAkB/6E,EAAK0zF,EAAIO,EAAOR,EAAWK,GAAmB,GAAGL,EAAW,CAAuB,KAAtBzzF,EAAKyzF,EAAWzzF,IAAqE,OAAtD,GAAgB,iBAANA,EAA+B,YAAf0zF,EAAIptK,KAAK05E,EAA0B,CAAC,OAAOA,EAAKuyF,UAAU,KAAKnE,EAAiB0F,IAAkBA,EAAkB,IAA8BA,EAAkBhzK,OAA7C,IAAwDsU,EAAM4qE,EAAKzjE,WAAekvJ,EAAIr2J,EAAMtU,OAAWyiG,EAAMvjB,EAAK+yC,WAAeC,EAAShzC,EAAK+qD,QAAQkpC,EAAO/F,IAASluF,EAAKw5E,cAAcya,EAAOP,EAAIptK,KAAK,IAAI0sH,GAAU,IAAI,IAAI5tH,EAAE,EAAEA,EAAEqmK,EAAIrmK,IAA4C,UAAnCuO,EAAKyB,EAAMkT,KAAKljB,IAAWiL,OAAiByjK,EAAkBxtK,KAAK,CAAC+J,OAAOsD,EAAK23J,UAAUyI,UAAUpgK,EAAKpD,QAA+B,SAAfoD,EAAKq/G,UAAmB8gD,EAAkBxtK,KAAK,CAAC+J,OAAO,GAAG0jK,UAAUpgK,EAAKpD,QAAS,IAAQnL,EAAE,EAAEA,EAAEqmK,EAAIrmK,IAAI,CAAC,IAAIuO,EAAmB,GAAGqgK,GAAtBrgK,EAAKyB,EAAMkT,KAAKljB,GAA+B6uK,EAAOH,GAAmB,CAAC,IAAIzjK,EAAOsD,EAAKtD,QAAQ,GAAO87J,EAAIx4J,EAAK6lJ,aAAiB0a,EAAG7jK,EAAO,UAAUA,EAAO,SAASqjK,EAAIptK,KAAK4tK,EAAG,KAAK/H,EAAI,KAAK2H,EAAkBxtK,KAAK,CAAC+J,OAAOA,EAAO0jK,UAAU5H,GAAK,CAACpR,GAAkBpnJ,EAAK+/J,EAAIO,EAAOR,EAAWK,EAAkB,CAAqO,GAAjOE,GAAoBh0F,EAAKi0F,EAAOH,KAAwBzjK,EAAO2vE,EAAK3vE,QAAQ,GAAO87J,EAAInsF,EAAKw5E,aAAiB0a,EAAG7jK,EAAO,UAAUA,EAAO,SAASqjK,EAAIptK,KAAK4tK,EAAG,KAAK/H,EAAI,KAAK2H,EAAkBxtK,KAAK,CAAC+J,OAAOA,EAAO0jK,UAAU5H,KAAS5oE,GAAO0wE,IAAS,mCAAmC75J,KAAK44G,GAAU,CAAe,GAAd0gD,EAAIptK,KAAK,KAAQ2tK,GAAQ,YAAY75J,KAAK44G,GAAW,KAAMzvB,GAAUA,EAAMjjG,KAAMozK,EAAIptK,KAAKi9F,EAAMjjG,MAAWy6J,GAAkBx3D,EAAMmwE,EAAIO,EAAOR,EAAWK,GAAmBvwE,EAAMA,EAAMmuE,iBAAkB,KAAMnuE,GAAOw3D,GAAkBx3D,EAAMmwE,EAAIO,EAAOR,EAAWK,GAAmBvwE,EAAMA,EAAMmuE,YAAagC,EAAIptK,KAAK,KAAK0sH,EAAS,IAAI,MAAM0gD,EAAIptK,KAAK,MAAM,OAAO,KAAKsoK,EAAc,KAAKE,EAAiD,IAAtBvrE,EAAMvjB,EAAK+yC,WAAiBxvB,GAAOw3D,GAAkBx3D,EAAMmwE,EAAIO,EAAOR,EAAWK,GAAmBvwE,EAAMA,EAAMmuE,YAAY,OAAO,KAAKrD,EAAe,OAAOqF,EAAIptK,KAAK,IAAI05E,EAAKl1E,KAAK,KAAKk1E,EAAKzvE,MAAMzL,QAAQ,SAASysK,GAAa,KAAK,KAAKjD,EAAU,OAAOoF,EAAIptK,KAAK05E,EAAK1/E,KAAKwE,QAAQ,QAAQysK,IAAc,KAAKhD,EAAmB,OAAOmF,EAAIptK,KAAK,YAAY05E,EAAK1/E,KAAK,OAAO,KAAKquK,EAAa,OAAO+E,EAAIptK,KAAK,UAAO05E,EAAK1/E,KAAK,UAAO,KAAKuuK,EAAmB,IAAIsF,EAAMn0F,EAAKqtF,SAAa+G,EAAMp0F,EAAKwpF,SAA0C,GAAjCkK,EAAIptK,KAAK,aAAa05E,EAAKl1E,MAASqpK,EAAOT,EAAIptK,KAAK,YAAY6tK,GAAUC,GAAc,KAAPA,GAAYV,EAAIptK,KAAK,MAAM8tK,GAAOV,EAAIptK,KAAK,WAAW,GAAG8tK,GAAc,KAAPA,EAAYV,EAAIptK,KAAK,YAAY8tK,EAAM,UAAU,CAAC,IAAI/uK,EAAI26E,EAAKq0F,eAAkBhvK,GAAKquK,EAAIptK,KAAK,KAAKjB,EAAI,KAAKquK,EAAIptK,KAAK,IAAI,CAAC,OAAO,KAAKooK,EAA4B,OAAOgF,EAAIptK,KAAK,KAAK05E,EAAK5nB,OAAO,IAAI4nB,EAAK1/E,KAAK,MAAM,KAAKkuK,EAAsB,OAAOkF,EAAIptK,KAAK,IAAI05E,EAAKgzC,SAAS,KAAK,QAAQ0gD,EAAIptK,KAAK,KAAK05E,EAAKgzC,UAAU,CAAC,SAASshD,GAAW5pC,EAAI1qD,EAAK5+D,GAAM,IAAImzJ,EAAM,OAAOv0F,EAAKuyF,UAAU,KAAKnE,GAAamG,EAAMv0F,EAAKw0F,WAAU,IAAanE,cAAc3lC,EAAI,KAAKokC,EAAuB,MAAM,KAAKT,EAAejtJ,GAAK,EAAgG,GAAjFmzJ,IAAOA,EAAMv0F,EAAKw0F,WAAU,IAAOD,EAAMlE,cAAc3lC,EAAI6pC,EAAMz2E,WAAW,KAAQ18E,EAAgC,IAA1B,IAAImiF,EAAMvjB,EAAK+yC,WAAiBxvB,GAAOgxE,EAAMh5J,YAAY+4J,GAAW5pC,EAAInnC,EAAMniF,IAAOmiF,EAAMA,EAAMmuE,YAAa,OAAO6C,CAAK,CAAC,SAASC,GAAU9pC,EAAI1qD,EAAK5+D,GAAM,IAAImzJ,EAAM,IAAIv0F,EAAKhhF,YAAY,IAAI,IAAIooD,KAAK44B,EAAK,CAAC,IAAI76E,EAAE66E,EAAK54B,GAAgB,iBAAHjiD,GAAgBA,GAAGovK,EAAMntH,KAAImtH,EAAMntH,GAAGjiD,EAAG,CAA2E,OAAvE66E,EAAK+xF,aAAYwC,EAAMxC,WAAW,IAAIjC,GAASyE,EAAMlE,cAAc3lC,EAAW6pC,EAAMhC,UAAU,KAAKnE,EAAa,IAAIh5J,EAAM4qE,EAAKzjE,WAAek4J,EAAOF,EAAMh4J,WAAW,IAAIi0J,EAAiB/E,EAAIr2J,EAAMtU,OAAO2zK,EAAOC,cAAcH,EAAM,IAAI,IAAInvK,EAAE,EAAEA,EAAEqmK,EAAIrmK,IAAKmvK,EAAMxI,iBAAiByI,GAAU9pC,EAAIt1H,EAAMkT,KAAKljB,IAAG,IAAO,MAAM,KAAKipK,EAAejtJ,GAAK,EAAK,GAAGA,EAAgC,IAA1B,IAAImiF,EAAMvjB,EAAK+yC,WAAiBxvB,GAAOgxE,EAAMh5J,YAAYi5J,GAAU9pC,EAAInnC,EAAMniF,IAAOmiF,EAAMA,EAAMmuE,YAAa,OAAO6C,CAAK,CAAC,SAAShE,GAAQvsJ,EAAOriB,EAAI4O,GAAOyT,EAAOriB,GAAK4O,CAAK,CADonWy+J,EAAc2F,mBAAmB1F,EAAiB,IAAI,gBAAgB,IAAmBD,EAAc4F,YAAY3F,EAAiB,IAAI,eAAe,IAAiCD,EAAc6F,0BAA0B5F,EAAiB,IAAI,uBAAuB,IAAsBD,EAAc8F,eAAe7F,EAAiB,IAAI,oBAAoB,IAA2BD,EAAc+F,oBAAoB9F,EAAiB,IAAI,iBAAiB,IAAwUW,EAAaxmK,UAAU5K,MAAM4K,UAAUilD,EAAK2gH,EAAcY,GAAmCE,EAAS1mK,UAAU,CAACtI,OAAO,EAAEwnB,KAAK,SAASuD,GAAO,OAAO3sB,KAAK2sB,IAAQ,IAAI,EAAEplB,SAAS,SAASwtK,EAAOR,GAAY,IAAI,IAAIC,EAAI,GAAGtuK,EAAE,EAAEA,EAAElG,KAAK4B,OAAOsE,IAAK21J,GAAkB77J,KAAKkG,GAAGsuK,EAAIO,EAAOR,GAAY,OAAOC,EAAIprK,KAAK,GAAG,GAA2SynK,EAAa3mK,UAAUkf,KAAK,SAASljB,GAAyB,OAAtB8qK,EAAgBhxK,MAAaA,KAAKkG,EAAE,EAAEyoK,EAASkC,EAAaD,GAAuuBU,EAAapnK,UAAU,CAACtI,OAAO,EAAEwnB,KAAKwnJ,EAAS1mK,UAAUkf,KAAK0sJ,aAAa,SAASrzK,GAAuB,IAAlB,IAAIyD,EAAElG,KAAK4B,OAAasE,KAAI,CAAC,IAAIuO,EAAKzU,KAAKkG,GAAG,GAAGuO,EAAKq/G,UAAUrxH,EAAK,OAAOgS,CAAK,CAAC,EAAEshK,aAAa,SAASthK,GAAM,IAAIm7B,EAAGn7B,EAAKk9J,aAAa,GAAG/hI,GAAIA,GAAI5vC,KAAKw1K,cAAe,MAAM,IAAI9E,EAAaF,GAAqB,IAAIkB,EAAQ1xK,KAAK81K,aAAarhK,EAAKq/G,UAA8D,OAApD09C,EAAcxxK,KAAKw1K,cAAcx1K,KAAKyU,EAAKi9J,GAAgBA,CAAO,EAAEsE,eAAe,SAASvhK,GAAM,IAAyBi9J,EAArB9hI,EAAGn7B,EAAKk9J,aAAqB,GAAG/hI,GAAIA,GAAI5vC,KAAKw1K,cAAe,MAAM,IAAI9E,EAAaF,GAAuI,OAAlHkB,EAAQ1xK,KAAKi2K,eAAexhK,EAAK6lJ,aAAa7lJ,EAAK23J,WAAWoF,EAAcxxK,KAAKw1K,cAAcx1K,KAAKyU,EAAKi9J,GAAgBA,CAAO,EAAEwE,gBAAgB,SAASzzK,GAAK,IAAIgS,EAAKzU,KAAK81K,aAAarzK,GAAoD,OAA/CsvK,EAAiB/xK,KAAKw1K,cAAcx1K,KAAKyU,GAAaA,CAAI,EAAE0hK,kBAAkB,SAAS7b,EAAa8R,GAAW,IAAI33J,EAAKzU,KAAKi2K,eAAe3b,EAAa8R,GAA0D,OAA/C2F,EAAiB/xK,KAAKw1K,cAAcx1K,KAAKyU,GAAaA,CAAI,EAAEwhK,eAAe,SAAS3b,EAAa8R,GAA6B,IAAlB,IAAIlmK,EAAElG,KAAK4B,OAAasE,KAAI,CAAC,IAAI46E,EAAK9gF,KAAKkG,GAAG,GAAG46E,EAAKsrF,WAAWA,GAAWtrF,EAAKw5E,cAAcA,EAAc,OAAOx5E,CAAK,CAAC,OAAO,IAAI,GAAuImrF,EAAkB/hK,UAAU,CAACksK,WAAW,SAASjE,EAAQx0J,GAAS,IAAI04J,EAASr2K,KAAKkyK,UAAUC,EAAQ1kK,eAAe,SAAG4oK,GAAY14J,KAASA,KAAW04J,GAChv+B,EAAEnK,eAAe,SAAS5R,EAAagc,EAAcC,GAAS,IAAI/qC,EAAI,IAAIinC,EAAsH,GAA7GjnC,EAAI6iC,eAAeruK,KAAKwrI,EAAIqnC,WAAW,IAAIjC,EAASplC,EAAI+qC,QAAQA,EAAWA,GAAS/qC,EAAInvH,YAAYk6J,GAAYD,EAAc,CAAC,IAAIljE,EAAKo4B,EAAI8gC,gBAAgBhS,EAAagc,GAAe9qC,EAAInvH,YAAY+2F,EAAK,CAAC,OAAOo4B,CAAG,EAAE8iC,mBAAmB,SAASgI,EAAcnI,EAAS7D,GAAU,IAAIxpF,EAAK,IAAIizF,EAA+G,OAAlGjzF,EAAKl1E,KAAK0qK,EAAcx1F,EAAKgzC,SAASwiD,EAAcx1F,EAAKqtF,SAASA,EAASrtF,EAAKwpF,SAASA,EAAgBxpF,CAAI,GAAoBsxF,EAAKloK,UAAU,CAAC2pH,WAAW,KAAKo/C,UAAU,KAAKD,gBAAgB,KAAKR,YAAY,KAAKn1J,WAAW,KAAKuhF,WAAW,KAAKi0E,WAAW,KAAK1B,cAAc,KAAKvE,UAAU,KAAKtS,aAAa,KAAKnpJ,OAAO,KAAKi7J,UAAU,KAAKoK,aAAa,SAAS7D,EAAS8D,GAAU,OAAOvD,EAAclzK,KAAK2yK,EAAS8D,EAAS,EAAEC,aAAa,SAAS/D,EAASgE,GAAU32K,KAAKw2K,aAAa7D,EAASgE,GAAaA,GAAU32K,KAAK6+F,YAAY83E,EAAU,EAAE93E,YAAY,SAAS83E,GAAU,OAAO7D,EAAa9yK,KAAK22K,EAAS,EAAEt6J,YAAY,SAASs2J,GAAU,OAAO3yK,KAAKw2K,aAAa7D,EAAS,KAAK,EAAEiE,cAAc,WAAW,OAAwB,MAAjB52K,KAAK6zH,UAAgB,EAAEyhD,UAAU,SAASpzJ,GAAM,OAAOozJ,GAAUt1K,KAAKmxK,eAAenxK,KAAKA,KAAKkiB,EAAK,EAAE2rJ,UAAU,WAAqC,IAA1B,IAAIxpE,EAAMrkG,KAAK6zH,WAAiBxvB,GAAM,CAAC,IAAIt9E,EAAKs9E,EAAMmuE,YAAezrJ,GAAMA,EAAKssJ,UAAUjE,GAAW/qE,EAAMgvE,UAAUjE,GAAWpvK,KAAK6+F,YAAY93E,GAAMs9E,EAAMwyE,WAAW9vJ,EAAK3lB,QAAWijG,EAAMwpE,YAAYxpE,EAAMt9E,EAAK,CAAC,EAAE+vJ,YAAY,SAAS3E,EAAQx0J,GAAS,OAAO3d,KAAKmxK,cAAc9C,eAAe+H,WAAWjE,EAAQx0J,EAAQ,EAAEo5J,cAAc,WAAW,OAAO/2K,KAAKqd,WAAWzb,OAAO,CAAC,EAAE+yK,aAAa,SAASra,GAA0B,IAAZ,IAAI1qH,EAAG5vC,KAAW4vC,GAAG,CAAC,IAAI9wC,EAAI8wC,EAAGiiI,OAAO,GAAG/yK,EAAK,IAAI,IAAIopD,KAAKppD,EAAK,GAAGA,EAAIopD,IAAIoyG,EAAc,OAAOpyG,EAAItY,EAAGA,EAAGyjI,UAAUlE,EAAev/H,EAAGuhI,cAAcvhI,EAAGgvD,UAAU,CAAC,OAAO,IAAI,EAAEo4E,mBAAmB,SAAS7lK,GAAoB,IAAZ,IAAIy+B,EAAG5vC,KAAW4vC,GAAG,CAAC,IAAI9wC,EAAI8wC,EAAGiiI,OAAO,GAAG/yK,GAAQqS,KAAUrS,EAAK,OAAOA,EAAIqS,GAASy+B,EAAGA,EAAGyjI,UAAUlE,EAAev/H,EAAGuhI,cAAcvhI,EAAGgvD,UAAU,CAAC,OAAO,IAAI,EAAEq4E,mBAAmB,SAAS3c,GAAyD,OAAe,MAA/Ct6J,KAAK20K,aAAara,EAAiC,GAA6HnrG,EAAK8/G,EAASmD,GAAMjjH,EAAK8/G,EAASmD,EAAKloK,WAA02EuoK,EAASvoK,UAAU,CAAC4pH,SAAS,YAAYu/C,SAAS3D,EAAc6G,QAAQ,KAAK7B,gBAAgB,KAAKxD,KAAK,EAAEsF,aAAa,SAAS7D,EAAS8D,GAAU,GAAG9D,EAASU,UAAUzD,EAAuB,CAA+B,IAA9B,IAAIvrE,EAAMsuE,EAAS9+C,WAAiBxvB,GAAM,CAAC,IAAIt9E,EAAKs9E,EAAMmuE,YAAYxyK,KAAKw2K,aAAanyE,EAAMoyE,GAAUpyE,EAAMt9E,CAAI,CAAC,OAAO4rJ,CAAQ,CAA+F,OAArE,MAAtB3yK,KAAK00K,iBAAuB/B,EAASU,UAAUnE,IAAclvK,KAAK00K,gBAAgB/B,GAAgBO,EAAclzK,KAAK2yK,EAAS8D,GAAU9D,EAASxB,cAAcnxK,KAAK2yK,CAAQ,EAAE9zE,YAAY,SAAS83E,GAAuE,OAA1D32K,KAAK00K,iBAAiBiC,IAAU32K,KAAK00K,gBAAgB,MAAY5B,EAAa9yK,KAAK22K,EAAS,EAAEvB,WAAW,SAAS8B,EAAah1J,GAAM,OAAOkzJ,GAAWp1K,KAAKk3K,EAAah1J,EAAK,EAAE40F,eAAe,SAAS73G,GAAI,IAAIk4K,EAAI,KAA6I,OAAxI5E,EAAWvyK,KAAK00K,iBAAgB,SAAS5zF,GAAM,GAAGA,EAAKuyF,UAAUnE,GAAiBpuF,EAAKgY,aAAa,OAAO75F,EAAa,OAATk4K,EAAIr2F,GAAY,CAAM,IAAUq2F,CAAG,EAAEn7J,cAAc,SAAS6vH,GAAS,IAAI/qD,EAAK,IAAI2yF,EAA4K,OAApK3yF,EAAKqwF,cAAcnxK,KAAK8gF,EAAKgzC,SAAS+X,EAAQ/qD,EAAK+qD,QAAQA,EAAQ/qD,EAAK+xF,WAAW,IAAIjC,GAAmB9vF,EAAKzjE,WAAW,IAAIi0J,GAAmBkE,cAAc10F,EAAYA,CAAI,EAAEs2F,uBAAuB,WAAW,IAAIt2F,EAAK,IAAIqzF,EAAsE,OAArDrzF,EAAKqwF,cAAcnxK,KAAK8gF,EAAK+xF,WAAW,IAAIjC,EAAgB9vF,CAAI,EAAEye,eAAe,SAASn+F,GAAM,IAAI0/E,EAAK,IAAI8yF,EAAmD,OAA9C9yF,EAAKqwF,cAAcnxK,KAAK8gF,EAAK+1F,WAAWz1K,GAAa0/E,CAAI,EAAEitF,cAAc,SAAS3sK,GAAM,IAAI0/E,EAAK,IAAI+yF,EAAsD,OAA9C/yF,EAAKqwF,cAAcnxK,KAAK8gF,EAAK+1F,WAAWz1K,GAAa0/E,CAAI,EAAE4sF,mBAAmB,SAAStsK,GAAM,IAAI0/E,EAAK,IAAIgzF,EAA2D,OAA9ChzF,EAAKqwF,cAAcnxK,KAAK8gF,EAAK+1F,WAAWz1K,GAAa0/E,CAAI,EAAEusF,4BAA4B,SAASn0G,EAAO93D,GAAM,IAAI0/E,EAAK,IAAIszF,EAA4G,OAAtFtzF,EAAKqwF,cAAcnxK,KAAK8gF,EAAK+qD,QAAQ/qD,EAAK5nB,OAAOA,EAAO4nB,EAAK8rF,UAAU9rF,EAAK1/E,KAAKA,EAAY0/E,CAAI,EAAEu2F,gBAAgB,SAASzrK,GAAM,IAAIk1E,EAAK,IAAI4yF,EAAuG,OAAlG5yF,EAAKqwF,cAAcnxK,KAAK8gF,EAAKl1E,KAAKA,EAAKk1E,EAAKgzC,SAASloH,EAAKk1E,EAAKsrF,UAAUxgK,EAAKk1E,EAAKw2F,WAAU,EAAYx2F,CAAI,EAAEy2F,sBAAsB,SAAS3rK,GAAM,IAAIk1E,EAAK,IAAIozF,EAA2D,OAA3CpzF,EAAKqwF,cAAcnxK,KAAK8gF,EAAKgzC,SAASloH,EAAYk1E,CAAI,EAAEwrF,gBAAgB,SAAShS,EAAagc,GAAe,IAAIx1F,EAAK,IAAI2yF,EAAY+D,EAAGlB,EAAc5yJ,MAAM,KAASxN,EAAM4qE,EAAKzjE,WAAW,IAAIi0J,EAA2Q,OAA9PxwF,EAAK+xF,WAAW,IAAIjC,EAAS9vF,EAAKqwF,cAAcnxK,KAAK8gF,EAAKgzC,SAASwiD,EAAcx1F,EAAK+qD,QAAQyqC,EAAcx1F,EAAKw5E,aAAaA,EAA2B,GAAXkd,EAAG51K,QAAWk/E,EAAK3vE,OAAOqmK,EAAG,GAAG12F,EAAKsrF,UAAUoL,EAAG,IAAQ12F,EAAKsrF,UAAUkK,EAAcpgK,EAAMs/J,cAAc10F,EAAYA,CAAI,EAAE4rF,kBAAkB,SAASpS,EAAagc,GAAe,IAAIx1F,EAAK,IAAI4yF,EAAS8D,EAAGlB,EAAc5yJ,MAAM,KAA8N,OAAzNo9D,EAAKqwF,cAAcnxK,KAAK8gF,EAAKgzC,SAASwiD,EAAcx1F,EAAKl1E,KAAK0qK,EAAcx1F,EAAKw5E,aAAaA,EAAax5E,EAAKw2F,WAAU,EAAmB,GAAXE,EAAG51K,QAAWk/E,EAAK3vE,OAAOqmK,EAAG,GAAG12F,EAAKsrF,UAAUoL,EAAG,IAAQ12F,EAAKsrF,UAAUkK,EAAqBx1F,CAAI,GAAG6tF,EAAS8D,EAASL,GAAwCqB,EAAQvpK,UAAU,CAACmpK,SAASnE,EAAauI,aAAa,SAAS7rK,GAAM,OAAoC,MAA7B5L,KAAK03K,iBAAiB9rK,EAAW,EAAEktF,aAAa,SAASltF,GAAM,IAAI6I,EAAKzU,KAAK03K,iBAAiB9rK,GAAM,OAAO6I,GAAMA,EAAKpD,OAAO,EAAE,EAAEqmK,iBAAiB,SAAS9rK,GAAM,OAAO5L,KAAKqd,WAAWy4J,aAAalqK,EAAK,EAAEqqF,aAAa,SAASrqF,EAAKyF,GAAO,IAAIoD,EAAKzU,KAAKmxK,cAAckG,gBAAgBzrK,GAAM6I,EAAKpD,MAAMoD,EAAKm4J,UAAU,GAAGv7J,EAAMrR,KAAK6sK,iBAAiBp4J,EAAK,EAAEwkF,gBAAgB,SAASrtF,GAAM,IAAI6I,EAAKzU,KAAK03K,iBAAiB9rK,GAAM6I,GAAMzU,KAAK23K,oBAAoBljK,EAAK,EAAE4H,YAAY,SAASs2J,GAAU,OAAGA,EAASU,WAAWzD,EAA+B5vK,KAAKw2K,aAAa7D,EAAS,MAAr4H,SAA4B/zE,EAAW+zE,GAAU,IAAIS,EAAGT,EAAS/zE,WAAW,GAAGw0E,EAAG,CAAC,IAAII,EAAI50E,EAAWq0E,UAAUG,EAAGv0E,YAAY8zE,GAAca,EAAI50E,EAAWq0E,SAAS,CAAoR,OAA/QO,EAAI50E,EAAWq0E,UAAUN,EAAS/zE,WAAWA,EAAW+zE,EAASK,gBAAgBQ,EAAIb,EAASH,YAAY,KAAQgB,EAAKA,EAAIhB,YAAYG,EAAc/zE,EAAWi1B,WAAW8+C,EAAS/zE,EAAWq0E,UAAUN,EAASD,EAAe9zE,EAAWuyE,cAAcvyE,EAAW+zE,GAAiBA,CAAQ,CAA+8GiF,CAAmB53K,KAAK2yK,EAAU,EAAE9F,iBAAiB,SAAS4E,GAAS,OAAOzxK,KAAKqd,WAAW04J,aAAatE,EAAQ,EAAEoG,mBAAmB,SAASpG,GAAS,OAAOzxK,KAAKqd,WAAW24J,eAAevE,EAAQ,EAAEkG,oBAAoB,SAASjG,GAAS,OAAO1xK,KAAKqd,WAAW64J,gBAAgBxE,EAAQ59C,SAAS,EAAEgkD,kBAAkB,SAASxd,EAAa8R,GAAW,IAAIv/C,EAAI7sH,KAAK+3K,mBAAmBzd,EAAa8R,GAAWv/C,GAAK7sH,KAAK23K,oBAAoB9qD,EAAI,EAAEmrD,eAAe,SAAS1d,EAAa8R,GAAW,OAAwD,MAAjDpsK,KAAK+3K,mBAAmBzd,EAAa8R,EAAgB,EAAE6L,eAAe,SAAS3d,EAAa8R,GAAW,IAAI33J,EAAKzU,KAAK+3K,mBAAmBzd,EAAa8R,GAAW,OAAO33J,GAAMA,EAAKpD,OAAO,EAAE,EAAE6mK,eAAe,SAAS5d,EAAagc,EAAcjlK,GAAO,IAAIoD,EAAKzU,KAAKmxK,cAAczE,kBAAkBpS,EAAagc,GAAe7hK,EAAKpD,MAAMoD,EAAKm4J,UAAU,GAAGv7J,EAAMrR,KAAK6sK,iBAAiBp4J,EAAK,EAAEsjK,mBAAmB,SAASzd,EAAa8R,GAAW,OAAOpsK,KAAKqd,WAAW44J,eAAe3b,EAAa8R,EAAU,EAAEnoF,qBAAqB,SAAS4nD,GAAS,OAAO,IAAIglC,EAAa7wK,MAAK,SAAS4uE,GAAM,IAAIwiG,EAAG,GAAwI,OAArImB,EAAW3jG,GAAK,SAASkS,GAASA,IAAOlS,GAAMkS,EAAKuyF,UAAUnE,GAAyB,MAAVrjC,GAAe/qD,EAAK+qD,SAASA,GAAUulC,EAAGhqK,KAAK05E,EAAM,IAAUswF,CAAE,GAAE,EAAE+G,uBAAuB,SAAS7d,EAAa8R,GAAW,OAAO,IAAIyE,EAAa7wK,MAAK,SAAS4uE,GAAM,IAAIwiG,EAAG,GAAuM,OAApMmB,EAAW3jG,GAAK,SAASkS,GAASA,IAAOlS,GAAMkS,EAAKuyF,WAAWnE,GAA8B,MAAf5U,GAAoBx5E,EAAKw5E,eAAeA,GAA4B,MAAZ8R,GAAiBtrF,EAAKsrF,WAAWA,GAAYgF,EAAGhqK,KAAK05E,EAAM,IAAUswF,CAAE,GAAE,GAAGqB,EAASvoK,UAAU+5E,qBAAqBwvF,EAAQvpK,UAAU+5E,qBAAqBwuF,EAASvoK,UAAUiuK,uBAAuB1E,EAAQvpK,UAAUiuK,uBAAuBxJ,EAAS8E,EAAQrB,GAAuBsB,EAAKxpK,UAAUmpK,SAASlE,EAAeR,EAAS+E,EAAKtB,GAAgCuB,EAAczpK,UAAU,CAAC9I,KAAK,GAAGg3K,cAAc,SAASjd,EAAOzwI,GAAO,OAAO1qB,KAAKoB,KAAKq3B,UAAU0iI,EAAOA,EAAOzwI,EAAM,EAAEmsJ,WAAW,SAASpzK,GAAMA,EAAKzD,KAAKoB,KAAKqC,EAAKzD,KAAK4sK,UAAU5sK,KAAKoB,KAAKqC,EAAKzD,KAAK4B,OAAO6B,EAAK7B,MAAM,EAAEy2K,WAAW,SAASld,EAAO13J,GAAMzD,KAAKs4K,YAAYnd,EAAO,EAAE13J,EAAK,EAAE4Y,YAAY,SAASs2J,GAAU,MAAM,IAAIrzK,MAAMywK,EAAiBC,GAAuB,EAAEruD,WAAW,SAASw5C,EAAOzwI,GAAO1qB,KAAKs4K,YAAYnd,EAAOzwI,EAAM,GAAG,EAAE4tJ,YAAY,SAASnd,EAAOzwI,EAAMjnB,GAAwFA,EAAxEzD,KAAKoB,KAAKq3B,UAAU,EAAE0iI,GAA6D13J,EAA7CzD,KAAKoB,KAAKq3B,UAAU0iI,EAAOzwI,GAA2B1qB,KAAK4sK,UAAU5sK,KAAKoB,KAAKqC,EAAKzD,KAAK4B,OAAO6B,EAAK7B,MAAM,GAAG+sK,EAASgF,EAAcvB,GAAuBwB,EAAK1pK,UAAU,CAAC4pH,SAAS,QAAQu/C,SAASjE,EAAUmJ,UAAU,SAASpd,GAAQ,IAAI13J,EAAKzD,KAAKoB,KAASo3K,EAAQ/0K,EAAKg1B,UAAU0iI,GAAQ13J,EAAKA,EAAKg1B,UAAU,EAAE0iI,GAAQn7J,KAAKoB,KAAKpB,KAAK4sK,UAAUnpK,EAAKzD,KAAK4B,OAAO6B,EAAK7B,OAAO,IAAI62K,EAAQz4K,KAAKmxK,cAAc5xE,eAAei5E,GAAoF,OAAxEx4K,KAAK4+F,YAAY5+F,KAAK4+F,WAAW43E,aAAaiC,EAAQz4K,KAAKwyK,aAAoBiG,CAAO,GAAG9J,EAASiF,EAAKD,GAAmCE,EAAQ3pK,UAAU,CAAC4pH,SAAS,WAAWu/C,SAAS5D,GAAcd,EAASkF,EAAQF,GAAwCG,EAAa5pK,UAAU,CAAC4pH,SAAS,iBAAiBu/C,SAAShE,GAAoBV,EAASmF,EAAaH,GAAwCI,EAAa7pK,UAAUmpK,SAAS1D,EAAmBhB,EAASoF,EAAa3B,GAA2B4B,EAAS9pK,UAAUmpK,SAASxD,EAAclB,EAASqF,EAAS5B,GAAyB6B,EAAO/pK,UAAUmpK,SAAS9D,EAAYZ,EAASsF,EAAO7B,GAAkC8B,EAAgBhqK,UAAUmpK,SAAS/D,EAAsBX,EAASuF,EAAgB9B,GAAmC+B,EAAiBjqK,UAAU4pH,SAAS,qBAAqBqgD,EAAiBjqK,UAAUmpK,SAASzD,EAAuBjB,EAASwF,EAAiB/B,GAAwCgC,EAAsBlqK,UAAUmpK,SAAS7D,EAA4Bb,EAASyF,EAAsBhC,GAAgC/W,EAAcnxJ,UAAU2xJ,kBAAkB,SAAS/6E,EAAKwzF,EAAOC,GAAY,OAAOF,GAAsBlqK,KAAK22E,EAAKwzF,EAAOC,EAAW,EAAEnC,EAAKloK,UAAU3C,SAAS8sK,GAAqhJ,IAAI,GAAG50K,OAAO04J,eAAe,CAA2f,SAASugB,GAAe53F,GAAM,OAAOA,EAAKuyF,UAAU,KAAKnE,EAAa,KAAKU,EAAuB,IAAI4E,EAAI,GAAwB,IAArB1zF,EAAKA,EAAK+yC,WAAiB/yC,GAAyB,IAAhBA,EAAKuyF,UAA8B,IAAhBvyF,EAAKuyF,UAAcmB,EAAIptK,KAAKsxK,GAAe53F,IAAOA,EAAKA,EAAK0xF,YAAY,OAAOgC,EAAIprK,KAAK,IAAI,QAAQ,OAAO03E,EAAK8rF,UAAU,CAAxxBntK,OAAO04J,eAAe0Y,EAAa3mK,UAAU,SAAS,CAACtB,IAAI,WAAiC,OAAtBooK,EAAgBhxK,MAAaA,KAAK24K,QAAQ,IAAIl5K,OAAO04J,eAAeia,EAAKloK,UAAU,cAAc,CAACtB,IAAI,WAAW,OAAO8vK,GAAe14K,KAAK,EAAEiQ,IAAI,SAAS7O,GAAM,OAAOpB,KAAKqzK,UAAU,KAAKnE,EAAa,KAAKU,EAAuB,KAAM5vK,KAAK6zH,YAAY7zH,KAAK6+F,YAAY7+F,KAAK6zH,aAAezyH,GAAM0Q,OAAO1Q,KAAOpB,KAAKqc,YAAYrc,KAAKmxK,cAAc5xE,eAAen+F,IAAO,MAAM,QAAQpB,KAAKoB,KAAKA,EAAKpB,KAAKqR,MAAMjQ,EAAKpB,KAAK4sK,UAAUxrK,EAAK,IAAmSiwK,GAAQ,SAASvsJ,EAAOriB,EAAI4O,GAAOyT,EAAO,KAAKriB,GAAK4O,CAAK,CAAC,CAAC,CAAC,MAAMhS,IAAG,CAACO,EAAQqsK,kBAAkBA,EAAkBrsK,EAAQy7J,cAAcA,CAAa,EAAE,CAAC,GAAG,GAAG,CAAC,SAASzzE,EAAQjoF,EAAOC,GAAS,IAAIg5K,EAAc,mJAAuJC,EAAS,IAAI59J,OAAO,aAAa29J,EAAc/N,OAAO/kK,MAAM,GAAG,GAAG,0CAA8CgzK,EAAe,IAAI79J,OAAO,IAAI29J,EAAc/N,OAAOgO,EAAShO,OAAO,QAAQ+N,EAAc/N,OAAOgO,EAAShO,OAAO,QAAYkO,EAAM,EAAMC,EAAO,EAAMC,EAAa,EAAMC,EAAK,EAAMC,EAAoB,EAAMC,EAAW,EAAMC,EAAY,EAAMC,EAAY,EAAE,SAASvO,IAAY,CAA+P,SAASngK,EAAMigK,EAAO0O,EAAiBpO,EAAUH,EAAW3O,GAAgO,SAASmd,EAAe54J,GAAG,IAAI3Z,EAAE2Z,EAAE9a,MAAM,GAAG,GAAG,OAAGmB,KAAKkkK,EAAkBA,EAAUlkK,GAAyB,MAAdA,EAAEulD,OAAO,GAAzT,SAA2BjtD,GAAM,GAAGA,EAAK,MAAM,CAAa,IAAIk6K,EAAW,QAA3Bl6K,GAAM,QAAkC,IAAIm6K,EAAW,OAAY,KAALn6K,GAAW,OAAOuS,OAAOsrJ,aAAaqc,EAAWC,EAAW,CAAM,OAAO5nK,OAAOsrJ,aAAa79J,EAAM,CAAyHo6K,CAAkB15J,SAAShZ,EAAEiiD,OAAO,GAAGtjD,QAAQ,IAAI,SAAay2J,EAAa/6J,MAAM,oBAAoBsf,GAAUA,EAAE,CAAC,SAASg5J,EAAW/sH,GAAK,GAAGA,EAAI57B,EAAM,CAAC,IAAI4oJ,EAAGhP,EAAOpyI,UAAUxH,EAAM47B,GAAKjnD,QAAQ,WAAW4zK,GAAgBxP,GAAShiH,EAAS/2B,GAAO+5I,EAAWwC,WAAWqM,EAAG,EAAEhtH,EAAI57B,GAAOA,EAAM47B,CAAG,CAAC,CAAC,SAAS7E,EAASvtC,EAAEq/J,GAAG,KAAMr/J,GAAGs/J,IAAUD,EAAEE,EAAYtc,KAAKmN,KAAUoP,EAAUH,EAAEntJ,MAAMotJ,EAAQE,EAAUH,EAAE,GAAGl4K,OAAOooK,EAAQG,aAAaH,EAAQI,aAAa3vJ,EAAEw/J,EAAU,CAAC,CAAiL,IAAhL,IAAIA,EAAU,EAAMF,EAAQ,EAAMC,EAAY,sBAA0BhQ,EAAQgB,EAAWhB,QAAYkQ,EAAW,CAAC,CAACC,aAAaZ,IAAuBa,EAAS,CAAC,EAAMnpJ,EAAM,IAAa,CAAC,IAAI,IAAIopJ,EAASxP,EAAOrjK,QAAQ,IAAIypB,GAAO,GAAGopJ,EAAS,EAAE,CAAC,IAAIxP,EAAO3hH,OAAOj4B,GAAO3jB,MAAM,SAAS,CAAC,IAAIk+H,EAAIw/B,EAAWx/B,IAAQ/nI,EAAK+nI,EAAIjsC,eAAesrE,EAAO3hH,OAAOj4B,IAAQu6G,EAAInvH,YAAY5Y,GAAMunK,EAAWJ,eAAennK,CAAI,CAAC,MAAM,CAAyC,OAArC42K,EAASppJ,GAAO2oJ,EAAWS,GAAiBxP,EAAOr+G,OAAO6tH,EAAS,IAAI,IAAI,IAAI,IAAIxtH,EAAIg+G,EAAOrjK,QAAQ,IAAI6yK,EAAS,GAAOxuC,EAAQg/B,EAAOpyI,UAAU4hJ,EAAS,EAAExtH,GAASn7C,EAAOwoK,EAAW/kI,MAAS0X,EAAI,GAAGg/E,EAAQg/B,EAAOpyI,UAAU4hJ,EAAS,GAAGz0K,QAAQ,UAAU,IAAIy2J,EAAa/6J,MAAM,iBAAiBuqI,EAAQ,oBAAoBn6H,EAAOm6H,SAASh/E,EAAIwtH,EAAS,EAAExuC,EAAQjqI,QAAeiqI,EAAQv+H,MAAM,SAAQu+H,EAAQA,EAAQjmI,QAAQ,UAAU,IAAIy2J,EAAa/6J,MAAM,iBAAiBuqI,EAAQ,uBAAuBh/E,EAAIwtH,EAAS,EAAExuC,EAAQjqI,QAAO,IAAI04K,EAAW5oK,EAAO4oK,WAAeC,EAAS7oK,EAAOm6H,SAASA,EAA4G,GAA9E0uC,GAAU7oK,EAAOm6H,SAASn6H,EAAOm6H,QAAQp+H,eAAeo+H,EAAQp+H,cAAmC,CAA4D,GAA3Du9J,EAAW8B,WAAWp7J,EAAOu7J,IAAIv7J,EAAO06J,UAAUvgC,GAAYyuC,EAAY,IAAI,IAAInpK,KAAUmpK,EAAYtP,EAAWkC,iBAAiB/7J,GAAaopK,GAAUle,EAAaoS,WAAW,iBAAiB5iC,EAAQ,2CAA2Cn6H,EAAOm6H,QAAS,MAAMquC,EAAW9yK,KAAKsK,GAAQm7C,IAAM,MAAM,IAAI,IAAIm9G,GAAShiH,EAASqyH,GAAUxtH,EAAI2tH,EAAiB3P,EAAOwP,EAASrP,GAAY,MAAM,IAAI,IAAIhB,GAAShiH,EAASqyH,GAAUxtH,EAAI4tH,EAAS5P,EAAOwP,EAASrP,EAAW3O,GAAc,MAAM,QAAQ2N,GAAShiH,EAASqyH,GAAU,IAAIzqI,EAAG,IAAI8qI,EAAsBP,EAAaD,EAAWA,EAAWt4K,OAAO,GAAGu4K,aAA4G5N,GAA3F1/G,EAAI8tH,EAAsB9P,EAAOwP,EAASzqI,EAAGuqI,EAAaX,EAAend,GAAsBzsH,EAAGhuC,QAAwJ,IAA7IguC,EAAGgrI,QAAQC,EAAchQ,EAAOh+G,EAAIjd,EAAGi8F,QAAQuuC,KAAWxqI,EAAGgrI,QAAO,EAASzP,EAAUY,MAAM1P,EAAamS,QAAQ,2BAA8BxE,GAASuC,EAAI,CAAsC,IAArC,IAAIuO,EAASC,EAAY/Q,EAAQ,CAAC,GAAW9jK,EAAE,EAAEA,EAAEqmK,EAAIrmK,IAAI,CAAC,IAAI0a,EAAEgvB,EAAG1pC,GAAG8hD,EAASpnC,EAAEu6I,QAAQv6I,EAAEopJ,QAAQ+Q,EAAY/Q,EAAQ,CAAC,EAAE,CAACgB,EAAWhB,QAAQ8Q,EAAYpQ,EAAc96H,EAAGo7H,EAAWmP,IAAeD,EAAW9yK,KAAKwoC,GAAIo7H,EAAWhB,QAAQA,CAAO,MAASU,EAAc96H,EAAGo7H,EAAWmP,IAAeD,EAAW9yK,KAAKwoC,GAAiB,iCAATA,EAAGq9H,KAAuCr9H,EAAGgrI,OAA0F/tH,IAAlFA,EAAImuH,EAAwBnQ,EAAOh+G,EAAIjd,EAAGi8F,QAAQ2tC,EAAexO,GAAwB,CAAC,MAAM3rK,GAAGg9J,EAAa/6J,MAAM,wBAAwBjC,GAAGwtD,GAAK,CAAC,CAAIA,EAAI57B,EAAOA,EAAM47B,EAAS+sH,EAAWl8H,KAAKqI,IAAIs0H,EAASppJ,GAAO,EAAG,CAAC,CAAC,SAAS8pJ,EAAYr5J,EAAEme,GAA2D,OAAxDA,EAAEsqI,WAAWzoJ,EAAEyoJ,WAAWtqI,EAAEuqI,aAAa1oJ,EAAE0oJ,aAAoBvqI,CAAC,CAAC,SAAS86I,EAAsB9P,EAAO55I,EAAM2e,EAAGuqI,EAAaX,EAAend,GAA+D,IAAjD,IAAI4e,EAAuBxgK,IAAIwW,EAAUwD,EAAEskJ,IAAiB,CAAC,IAAI71I,EAAE2nI,EAAOr+G,OAAO/xC,GAAG,OAAOyoB,GAAG,IAAI,IAAI,GAAGzO,IAAIukJ,EAAQiC,EAASpQ,EAAO/kK,MAAMmrB,EAAMxW,GAAGga,EAAEykJ,MAAU,IAAGzkJ,IAAIwkJ,EAA0B,MAAM,IAAI35K,MAAM,uCAA5Bm1B,EAAEykJ,CAAgE,CAAC,MAAM,IAAI,IAAI,IAAI,IAAI,GAAGzkJ,IAAIykJ,GAAMzkJ,IAAIukJ,EAAO,CAA0I,GAAtIvkJ,IAAIukJ,IAAQ3c,EAAamS,QAAQ,kCAAkCyM,EAASpQ,EAAO/kK,MAAMmrB,EAAMxW,IAAGwW,EAAMxW,EAAE,KAAEA,EAAEowJ,EAAOrjK,QAAQ07B,EAAEjS,IAAY,GAAmH,MAAM,IAAI3xB,MAAM,2BAA2B4jC,EAAE,WAA7J7xB,EAAMw5J,EAAO/kK,MAAMmrB,EAAMxW,GAAG7U,QAAQ,WAAW4zK,GAAgB5pI,EAAGl3B,IAAIuiK,EAAS5pK,EAAM4f,EAAM,GAAGwD,EAAE2kJ,CAAwE,KAAM,IAAG3kJ,GAAG0kJ,EAAyN,MAAM,IAAI75K,MAAM,kCAApN+R,EAAMw5J,EAAO/kK,MAAMmrB,EAAMxW,GAAG7U,QAAQ,WAAW4zK,GAAgB5pI,EAAGl3B,IAAIuiK,EAAS5pK,EAAM4f,GAAOorI,EAAamS,QAAQ,cAAcyM,EAAS,uBAAuB/3I,EAAE,OAAOjS,EAAMxW,EAAE,EAAEga,EAAE2kJ,CAAiE,CAAC,MAAM,IAAI,IAAI,OAAO3kJ,GAAG,KAAKskJ,EAAMnpI,EAAGsrI,WAAWrQ,EAAO/kK,MAAMmrB,EAAMxW,IAAI,KAAK2+J,EAAW,KAAKC,EAAY,KAAKC,EAAY7kJ,EAAE6kJ,EAAY1pI,EAAGgrI,QAAO,EAAK,KAAKzB,EAAoB,KAAKH,EAAO,KAAKC,EAAa,MAAM,QAAQ,MAAM,IAAI35K,MAAM,qCAAqC,MAAM,IAAI,GAAmG,OAAhG+8J,EAAa/6J,MAAM,2BAA8BmzB,GAAGskJ,GAAOnpI,EAAGsrI,WAAWrQ,EAAO/kK,MAAMmrB,EAAMxW,IAAWA,EAAE,IAAI,IAAI,OAAOga,GAAG,KAAKskJ,EAAMnpI,EAAGsrI,WAAWrQ,EAAO/kK,MAAMmrB,EAAMxW,IAAI,KAAK2+J,EAAW,KAAKC,EAAY,KAAKC,EAAY,MAAM,KAAKH,EAAoB,KAAKH,EAAwD,OAAjD3nK,EAAMw5J,EAAO/kK,MAAMmrB,EAAMxW,IAAY3U,OAAO,KAAU8pC,EAAGgrI,QAAO,EAAKvpK,EAAMA,EAAMvL,MAAM,GAAG,IAAG,KAAKmzK,EAAgBxkJ,IAAIwkJ,IAAc5nK,EAAM4pK,GAAYxmJ,GAAG0kJ,GAAqB9c,EAAamS,QAAQ,cAAcn9J,EAAM,sBAAsBu+B,EAAGl3B,IAAIuiK,EAAS5pK,EAAMzL,QAAQ,WAAW4zK,GAAgBvoJ,KAAkC,iCAAnBkpJ,EAAa,KAAuC9oK,EAAM/D,MAAM,qCAAqC+uJ,EAAamS,QAAQ,cAAcn9J,EAAM,qBAAqBA,EAAM,eAAeu+B,EAAGl3B,IAAIrH,EAAMA,EAAM4f,IAAO,MAAM,KAAKioJ,EAAK,MAAM,IAAI55K,MAAM,4BAA4B,OAAOmb,EAAE,IAAI,IAAIyoB,EAAE,IAAI,QAAQ,GAAGA,GAAG,IAAK,OAAOzO,GAAG,KAAKskJ,EAAMnpI,EAAGsrI,WAAWrQ,EAAO/kK,MAAMmrB,EAAMxW,IAAIga,EAAE4kJ,EAAY,MAAM,KAAKL,EAAOiC,EAASpQ,EAAO/kK,MAAMmrB,EAAMxW,GAAGga,EAAEwkJ,EAAa,MAAM,KAAKE,EAAoB,IAAI9nK,EAAMw5J,EAAO/kK,MAAMmrB,EAAMxW,GAAG7U,QAAQ,WAAW4zK,GAAgBnd,EAAamS,QAAQ,cAAcn9J,EAAM,sBAAsBu+B,EAAGl3B,IAAIuiK,EAAS5pK,EAAM4f,GAAO,KAAKmoJ,EAAW3kJ,EAAE4kJ,OAAwB,OAAO5kJ,GAAG,KAAKwkJ,EAAyBrpI,EAAGi8F,QAA8B,iCAAnBsuC,EAAa,KAAuCc,EAAS3tK,MAAM,qCAAqC+uJ,EAAamS,QAAQ,cAAcyM,EAAS,qBAAqBA,EAAS,gBAAgBrrI,EAAGl3B,IAAIuiK,EAASA,EAAShqJ,GAAOA,EAAMxW,EAAEga,EAAEukJ,EAAO,MAAM,KAAKI,EAAW/c,EAAamS,QAAQ,+BAA+ByM,EAAS,OAAO,KAAK5B,EAAY5kJ,EAAEukJ,EAAO/nJ,EAAMxW,EAAE,MAAM,KAAKy+J,EAAKzkJ,EAAE0kJ,EAAoBloJ,EAAMxW,EAAE,MAAM,KAAK6+J,EAAY,MAAM,IAAIh6K,MAAM,+DAAgEmb,GAAG,CAAC,CAAC,SAASiwJ,EAAc96H,EAAGo7H,EAAWmP,GAAyE,IAA3D,IAAItuC,EAAQj8F,EAAGi8F,QAAYyuC,EAAW,KAASp0K,EAAE0pC,EAAGhuC,OAAasE,KAAI,CAAC,IAAI0a,EAAEgvB,EAAG1pC,GAAOmmK,EAAMzrJ,EAAEyrJ,MAAUh7J,EAAMuP,EAAEvP,MAAiC,IAAvB8pK,EAAI9O,EAAM7kK,QAAQ,MAAY,EAAG,IAAI2J,EAAOyP,EAAEzP,OAAOk7J,EAAMvmK,MAAM,EAAEq1K,GAAS/O,EAAUC,EAAMvmK,MAAMq1K,EAAI,GAAOC,EAAkB,UAATjqK,GAAkBi7J,OAAeA,EAAUC,EAAMl7J,EAAO,KAAKiqK,EAAiB,UAAR/O,GAAiB,GAAGzrJ,EAAEwrJ,UAAUA,GAAwB,IAAXgP,IAAiC,MAAZd,IAAkBA,EAAW,CAAC,EAAEe,EAAMlB,EAAaA,EAAa,CAAC,IAAGA,EAAaiB,GAAUd,EAAWc,GAAU/pK,EAAMuP,EAAEqsJ,IAAI,gCAAgCjC,EAAWgC,mBAAmBoO,EAAS/pK,GAAO,CAAiB,IAAZnL,EAAE0pC,EAAGhuC,OAAasE,MAAiBiL,GAAZyP,EAAEgvB,EAAG1pC,IAAgBiL,UAA8B,QAATA,IAAgByP,EAAEqsJ,IAAI,wCAAmD,UAAT97J,IAAkByP,EAAEqsJ,IAAIkN,EAAahpK,GAAQ,MAAM,IAAIgqK,KAAItvC,EAAQrkI,QAAQ,MAAY,GAAG2J,EAAOy+B,EAAGz+B,OAAO06H,EAAQ/lI,MAAM,EAAEq1K,GAAK/O,EAAUx8H,EAAGw8H,UAAUvgC,EAAQ/lI,MAAMq1K,EAAI,KAAQhqK,EAAO,KAAKi7J,EAAUx8H,EAAGw8H,UAAUvgC,GAAQ,IAAImpC,EAAGplI,EAAGq9H,IAAIkN,EAAahpK,GAAQ,IAAqD,GAAjD65J,EAAW3tG,aAAa23G,EAAG5I,EAAUvgC,EAAQj8F,IAAOA,EAAGgrI,OAA8L,OAAtDhrI,EAAGuqI,aAAaA,EAAavqI,EAAG0qI,WAAWA,GAAkB,EAAjJ,GAA5CtP,EAAW8B,WAAWkI,EAAG5I,EAAUvgC,GAAYyuC,EAAY,IAAInpK,KAAUmpK,EAAYtP,EAAWkC,iBAAiB/7J,EAAiF,CAAC,SAAS6pK,EAAwBnQ,EAAOyQ,EAAWzvC,EAAQ2tC,EAAexO,GAAY,GAAG,yBAAyB9vJ,KAAK2wH,GAAS,CAAC,IAAI0vC,EAAW1Q,EAAOrjK,QAAQ,KAAKqkI,EAAQ,IAAIyvC,GAAgB73K,EAAKonK,EAAOpyI,UAAU6iJ,EAAW,EAAEC,GAAY,GAAG,OAAOrgK,KAAKzX,GAAO,MAAG,YAAYyX,KAAK2wH,IAAUm/B,EAAWwC,WAAW/pK,EAAK,EAAEA,EAAK7B,QAAe25K,IAAW93K,EAAKA,EAAKmC,QAAQ,WAAW4zK,GAAgBxO,EAAWwC,WAAW/pK,EAAK,EAAEA,EAAK7B,QAAe25K,EAAW,CAAC,OAAOD,EAAW,CAAC,CAAC,SAAST,EAAchQ,EAAOyQ,EAAWzvC,EAAQuuC,GAAU,IAAI3tJ,EAAI2tJ,EAASvuC,GAA8I,OAA7H,MAALp/G,KAAWA,EAAIo+I,EAAO2Q,YAAY,KAAK3vC,EAAQ,MAAYyvC,IAAY7uJ,EAAIo+I,EAAO2Q,YAAY,KAAK3vC,IAASuuC,EAASvuC,GAASp/G,GAAWA,EAAI6uJ,CAAU,CAAC,SAASD,EAAMxQ,EAAO3xG,GAAQ,IAAI,IAAIhR,KAAK2iH,EAAQ3xG,EAAOhR,GAAG2iH,EAAO3iH,EAAG,CAAC,SAASuyH,EAAS5P,EAAO55I,EAAM+5I,EAAW3O,GAA8C,GAAiB,MAAxCwO,EAAOr+G,OAAOv7B,EAAM,GAAwB,MAA4B,MAAzB45I,EAAOr+G,OAAOv7B,EAAM,IAAc47B,EAAIg+G,EAAOrjK,QAAQ,SAAMypB,EAAM,IAAUA,GAAO+5I,EAAWppC,QAAQipC,EAAO55I,EAAM,EAAE47B,EAAI57B,EAAM,GAAU47B,EAAI,IAAOwvG,EAAa/6J,MAAM,qBAA2B,IAAe,EAAU,GAA6B,UAA1BupK,EAAO3hH,OAAOj4B,EAAM,EAAE,GAAa,CAAC,IAAI47B,EAAIg+G,EAAOrjK,QAAQ,MAAMypB,EAAM,GAAmG,OAAhG+5I,EAAWgD,aAAahD,EAAWwC,WAAW3C,EAAO55I,EAAM,EAAE47B,EAAI57B,EAAM,GAAG+5I,EAAWiD,WAAkBphH,EAAI,CAAC,CAAC,IAAI4uH,EAAqiD,SAAe5Q,EAAO55I,GAAO,IAAI3jB,EAAUknK,EAAI,GAAOkH,EAAI,6CAAkF,IAArCA,EAAI1J,UAAU/gJ,EAAMyqJ,EAAIhe,KAAKmN,GAAcv9J,EAAMouK,EAAIhe,KAAKmN,IAAyB,GAAhB2J,EAAIptK,KAAKkG,GAAUA,EAAM,GAAG,OAAOknK,CAAI,CAA/uD9wJ,CAAMmnJ,EAAO55I,GAAWs7I,EAAIkP,EAAO75K,OAAO,GAAG2qK,EAAI,GAAG,YAAYrxJ,KAAKugK,EAAO,GAAG,IAAI,CAAC,IAAI7vK,EAAK6vK,EAAO,GAAG,GAAOxG,EAAM1I,EAAI,GAAG,YAAYrxJ,KAAKugK,EAAO,GAAG,KAAKA,EAAO,GAAG,GAAOvG,EAAM3I,EAAI,GAAGkP,EAAO,GAAG,GAAOE,EAAUF,EAAOlP,EAAI,GAA2I,OAAxIvB,EAAWkD,SAAStiK,EAAKqpK,GAAOA,EAAMrvK,QAAQ,kBAAkB,MAAMsvK,GAAOA,EAAMtvK,QAAQ,kBAAkB,OAAOolK,EAAW4Q,SAAgBD,EAAUhvJ,MAAMgvJ,EAAU,GAAG/5K,MAAM,CAAE,OAAO,CAAC,CAAC,SAAS44K,EAAiB3P,EAAO55I,EAAM+5I,GAAY,IAAIn+G,EAAIg+G,EAAOrjK,QAAQ,KAAKypB,GAAO,GAAG47B,EAAI,CAAC,IAAIv/C,EAAMu9J,EAAOpyI,UAAUxH,EAAM47B,GAAKv/C,MAAM,8BAA8B,OAAGA,GAAeA,EAAM,GAAG1L,OAAOopK,EAAWmC,sBAAsB7/J,EAAM,GAAGA,EAAM,IAAWu/C,EAAI,IAAc,CAAE,CAAC,OAAO,CAAC,CAAC,SAAS6tH,EAAkB7P,GAAQ,CAAkjB,SAASgR,EAAYC,EAAK/zK,GAA8B,OAAtB+zK,EAAK/M,UAAUhnK,EAAc+zK,CAAI,CAAnqV/Q,EAAU7gK,UAAU,CAACU,MAAM,SAASigK,EAAOI,EAAaE,GAAW,IAAIH,EAAWhrK,KAAKgrK,WAAWA,EAAWgB,gBAAgBqP,EAAMpQ,EAAaA,EAAa,CAAC,GAAGrgK,EAAMigK,EAAOI,EAAaE,EAAUH,EAAWhrK,KAAKq8J,cAAc2O,EAAW4C,aAAa,GAAozT8M,EAAkBxwK,UAAU,CAACgxK,WAAW,SAASrvC,GAAS,IAAIitC,EAAe59J,KAAK2wH,GAAU,MAAM,IAAIvsI,MAAM,mBAAmBusI,GAAS7rI,KAAK6rI,QAAQA,CAAO,EAAEnzH,IAAI,SAAS2zJ,EAAMh7J,EAAM8pJ,GAAQ,IAAI2d,EAAe59J,KAAKmxJ,GAAQ,MAAM,IAAI/sK,MAAM,qBAAqB+sK,GAAOrsK,KAAKA,KAAK4B,UAAU,CAACyqK,MAAMA,EAAMh7J,MAAMA,EAAM8pJ,OAAOA,EAAO,EAAEv5J,OAAO,EAAEm6K,aAAa,SAAS71K,GAAG,OAAOlG,KAAKkG,GAAGkmK,SAAS,EAAEO,WAAW,SAASzmK,GAAG,OAAOlG,KAAKkG,GAAG8jK,OAAO,EAAEyC,SAAS,SAASvmK,GAAG,OAAOlG,KAAKkG,GAAGmmK,KAAK,EAAEG,OAAO,SAAStmK,GAAG,OAAOlG,KAAKkG,GAAG+mK,GAAG,EAAEvxH,SAAS,SAASx1C,GAAG,OAAOlG,KAAKkG,GAAGmL,KAAK,GAA4EwqK,EAAY,CAAC,EAAEA,EAAY3xK,qBAAqB2xK,IAAcA,EAAY,SAASC,EAAK/zK,GAAQ,SAAS0S,IAAI,CAA4B,IAAI1S,KAA/B0S,EAAEvQ,UAAUnC,EAAO0S,EAAE,IAAIA,EAAgBqhK,EAAMrhK,EAAE1S,GAAQ+zK,EAAK/zK,GAAQ,OAAO0S,CAAC,GAAoN7a,EAAQmrK,UAAUA,CAAS,EAAE,CAAC,GAAG,mBAAmB,CAAC,SAASnjF,EAAQjoF,EAAOC,GAAS,aAAa,IAAIi4J,EAAa,WAAW,SAASC,EAAiB5+F,EAAOm2C,GAAO,IAAI,IAAInpG,EAAE,EAAEA,EAAEmpG,EAAMztG,OAAOsE,IAAI,CAAC,IAAI6xJ,EAAW1oD,EAAMnpG,GAAG6xJ,EAAWC,WAAWD,EAAWC,aAAY,EAAMD,EAAWE,cAAa,EAAQ,UAAUF,IAAWA,EAAWG,UAAS,GAAKz4J,OAAO04J,eAAej/F,EAAO6+F,EAAWt1J,IAAIs1J,EAAW,CAAC,CAAC,OAAO,SAASK,EAAYC,EAAWC,GAAuI,OAAvHD,GAAWP,EAAiBM,EAAYluJ,UAAUmuJ,GAAeC,GAAYR,EAAiBM,EAAYE,GAAoBF,CAAW,CAAC,CAAte,GAA0nB,IAAI96D,EAAU1V,EAAQ,eAAmB6vE,EAAS7vE,EAAQ,iBAAiB6vE,SAAa9zE,EAAUiE,EAAQ,UAAUjE,UAA0D,IAAIk1E,EAAWjxE,EAAQ,gBAAoBq+E,EAAW,iDAAiD,SAAS+V,EAAa9W,GAAyB,OAAVA,EAAK1J,IAAgB,CAAC,SAASygB,EAAaC,GAAO,IAAI1gB,EAAK0gB,EAAM1gB,KAAKzzC,EAAKm0D,EAAMn0D,KAAKlM,EAAMqgE,EAAMrgE,MAAsCsgE,EAArBD,EAAMxV,WAAoC5gK,MAAMiiH,EAAK,EAAElM,GAAOi+C,QAAO,SAASngJ,EAAOyP,GAAM,OAAOzP,EAAOyP,EAAK/X,KAAK,GAAE,IAAQ0yE,GAAO,IAAKJ,GAAWE,gBAAgB,QAAQs4F,EAAU,UAAchhB,EAAOp3E,EAAOE,qBAAqB,SAAam4F,EAAIr4F,EAAOE,qBAAqB,SAA4M,OAAnMu3E,EAAK4gB,IAAI,CAACC,GAAGp8J,SAASm8J,EAAI,GAAGtjF,aAAa,MAAM,IAAIwjF,GAAGr8J,SAASm8J,EAAI,GAAGtjF,aAAa,MAAM,KAAK0iE,EAAKL,OAAO,CAACnrG,EAAE/vC,SAASk7I,EAAO,GAAGriE,aAAa,KAAK,IAAI7oC,EAAEhwC,SAASk7I,EAAO,GAAGriE,aAAa,KAAK,KAAY0iE,CAAI,CAAC,IAAIzyB,EAAY,WAAW,SAASA,EAAYxgI,GAA4K,GAAtwC,SAAyBwxD,EAASq+F,GAAa,KAAKr+F,aAAoBq+F,GAAc,MAAM,IAAIW,UAAU,oCAAqC,CAAo9BC,CAAgBh5J,KAAK+oI,GAAa/oI,KAAK4L,KAAK,cAAc5L,KAAKuI,QAAQA,GAAS,CAAC,EAAEvI,KAAKu8K,YAAY,CAAC,EAA4B,MAAvBv8K,KAAKuI,QAAQmjI,WAAgB1rI,KAAKuI,QAAQmjI,UAAS,GAAgC,MAAvB1rI,KAAKuI,QAAQojI,SAAgB,MAAM,IAAIrsI,MAAM,4BAA4B,GAAyB,MAAtBU,KAAKuI,QAAQujI,QAAe,MAAM,IAAIxsI,MAAM,2BAA2BU,KAAKw8K,YAAY,CAAC,CAC3u4B,OAD4u4B3kB,EAAa9uB,EAAY,CAAC,CAACtmI,IAAI,qBAAqB4O,MAAM,SAA4B9I,EAAQqvJ,GACtw+B,IAAI6kB,EAAU7kB,EAAcrsB,IAAI/mD,KAAK,eAAe7qE,OAAOi+I,EAAcrsB,IAAI/mD,KAAK,0BAA0B1lF,KAAI,SAAS0lF,GAAM,OAAOA,EAAK54E,IAAI,IAAgL,OAA7K5L,KAAKk+J,eAAetG,EAAcsG,eAAel+J,KAAK0kD,SAASkzG,EAAclzG,SAAS1kD,KAAKurI,IAAIqsB,EAAcrsB,IAAIhjI,EAAQ61J,aAAa71J,EAAQ61J,aAAazkJ,OAAO8iK,GAAkBl0K,CAAO,GAAG,CAAC9F,IAAI,MAAM4O,MAAM,SAAa9I,GAAYA,EAAQgjI,MAAKvrI,KAAKurI,IAAIhjI,EAAQgjI,KAAOhjI,EAAQuwJ,eAAc94J,KAAK84J,aAAavwJ,EAAQuwJ,aAAa,GAAG,CAACr2J,IAAI,QAAQ4O,MAAM,SAAe60J,GAAoB,IAAIvmK,EAAOsmK,EAAel9J,EAAK,cAAc,MAAuC,OAApCm9J,EAAmBztI,UAAU,EAAE,GAAiB,CAAC1vB,KAAKA,EAAKsI,MAAM60J,EAAmBh9G,OAAO,GAAGvpD,OAAOA,EAAO+rI,UAAS,GAA6C,MAApCw6B,EAAmBztI,UAAU,EAAE,GAAgB,CAAC1vB,KAAKA,EAAKsI,MAAM60J,EAAmBh9G,OAAO,GAAGvpD,OAAOA,EAAO+rI,UAAS,GAAc,IAAI,GAAG,CAACjpI,IAAI,YAAY4O,MAAM,SAAmBmiI,GAAQ,IAAIgyB,OAAS,EAAWiB,OAAS,EAA8I,MAApH,SAAhBzmK,KAAK0kD,UAAmB8gH,EAAS,OAAOiB,EAASwV,IAAkBzW,EAASxlK,KAAKuI,QAAQmjI,SAAS,MAAM,MAAM+6B,EAASuV,GAAoBvkB,EAASmG,OAAOkJ,YAAYtzB,EAAO,CAACyyB,WAAWA,EAAWQ,SAASA,EAASjB,SAASA,GAAU,GAAG,CAAC/iK,IAAI,SAAS4O,MAAM,SAAgBmqJ,EAAKjzJ,GAASvI,KAAKu8K,YAAYh0K,EAAQg3J,UAAUv/J,KAAKu8K,YAAYh0K,EAAQg3J,WAAW,IAAI1G,EAAW74J,KAAKurI,IAAIhjI,EAAQg3J,SAASv/J,KAAK84J,aAAa94J,KAAK0kD,UAAU,IAAIg4H,EAAW18K,KAAKu8K,YAAYh0K,EAAQg3J,UAAU,GAAgB,iBAAZ/D,EAAKzyJ,MAAsByyJ,EAAK77J,SAASsmK,EAAY,OAAO,KAAK,IAAI,IAAIr6B,EAASrjI,EAAQ+9J,aAAa5qH,SAAS8/G,EAAKnqJ,OAAO,IAAIu6H,EAAU,MAAM,IAAItsI,MAAM,qBAAqB,IAAIysI,EAAU/rI,KAAKuI,QAAQojI,SAASC,EAAS4vB,EAAKnqJ,OAAW2pJ,EAAI0hB,EAAWhiB,aAAa16J,KAAK28K,mBAAmB5wC,GAAe6wC,EAAU58K,KAAKuI,QAAQujI,QAAQC,EAAUH,EAAS4vB,EAAKnqJ,OAAO,OAAOrR,KAAK68K,gBAAgBrhB,EAAKR,EAAI4hB,EAAU,CAAC,MAAMv9K,GAAG,MAAM,CAACgS,MAAMrR,KAAKk+J,eAAewC,WAAW,CAAC,GAAG,CAACj+J,IAAI,kBAAkB4O,MAAM,SAAyBmqJ,EAAKR,EAAI4hB,GAAW,IADum4BtkK,EAC9l4B0iJ,IADun4B1iJ,EACjn4B,MAAM,IAAIhZ,MAAM,wBADyj4B,IAAegZ,EAC5i4B2/E,EAAK,CAACw/D,EAASC,oBAAoBklB,EAAU,IAAInlB,EAASC,oBAAoBklB,EAAU,KAASlxC,EAAS1rI,KAAKuI,QAAQmjI,UAAU8vB,EAAK9vB,SAAyK,MAAM,CAACr6H,MAAjI,SAAhBrR,KAAK0kD,SAA2B1kD,KAAK88K,oBAAoBthB,EAAKR,EAAI/iE,EAAKyzC,GAAuB1rI,KAAK+8K,oBAAoB/hB,EAAI/iE,EAAKyzC,GAA+B,GAAG,CAACjpI,IAAI,sBAAsB4O,MAAM,SAA6BmqJ,EAAKR,EAAI/iE,EAAKyzC,GAAU,IAAIyvB,EAAO,CAACnrG,EAAEwrG,EAAKL,OAAOnrG,EAAEC,EAAEurG,EAAKL,OAAOlrG,GAAO+sH,EAAOxhB,EAAK4gB,IAAIC,GAAOY,EAAOzhB,EAAK4gB,IAAIE,GAAOY,EAAKjlF,EAAK,GAAOklF,EAAKllF,EAAK,GAAoE,OAA9DyzC,IAAUyvB,EAAOnrG,GAAGgtH,EAAO,EAAEE,EAAK,EAAE/hB,EAAOlrG,GAAGgtH,EAAO,EAAEE,EAAK,GAAS7/E,EAAU49D,gBAAgBF,EAAI,CAACkiB,EAAKC,GAAMhiB,EAAO,GAAG,CAAC14J,IAAI,sBAAsB4O,MAAM,SAA6B2pJ,EAAI/iE,EAAKyzC,GAAU,OAAOA,EAASpuC,EAAU29D,oBAAoBD,EAAI/iE,GAAMqF,EAAUy9D,YAAYC,EAAI/iE,EAAK,GAAG,CAACx1F,IAAI,mBAAmB4O,MAAM,WAA4B,IAAIzF,EAAK,mBAAmB5L,KAAKw8K,YAAY,OAA0B,OAAnBx8K,KAAKw8K,cAAqB5wK,CAAI,KAAYm9H,CAAW,CADq23B,GACj23BppI,EAAOC,QAAQmpI,CAAW,EAAE,CAAC,eAAe,EAAE,cAAc,EAAE6uB,cAAc,EAAEkG,OAAO,MAAM,CAAC,EAAE,GAH/rF,CAGmsF,+BCH5+Fn+J,EAAOC,QAAoS,SAASP,EAAEwgC,EAAEqoB,EAAExmD,GAAG,SAAS+yB,EAAEr1B,EAAEod,GAAG,IAAI0rC,EAAE9oD,GAAG,CAAC,IAAIygC,EAAEzgC,GAAG,CAAmE,GAAG8G,EAAE,OAAOA,EAAE9G,GAAE,GAAI,IAAIsiB,EAAE,IAAIpiB,MAAM,uBAAuBF,EAAE,KAAK,MAAMsiB,EAAEniB,KAAK,mBAAmBmiB,CAAC,CAAC,IAAIxa,EAAEghD,EAAE9oD,GAAG,CAACQ,QAAQ,CAAC,GAAGigC,EAAEzgC,GAAG,GAAG+K,KAAKjD,EAAEtH,SAAQ,SAASP,GAAoB,OAAOo1B,EAAlBoL,EAAEzgC,GAAG,GAAGC,IAAgBA,EAAE,GAAE6H,EAAEA,EAAEtH,QAAQP,EAAEwgC,EAAEqoB,EAAExmD,EAAE,CAAC,OAAOwmD,EAAE9oD,GAAGQ,OAAO,CAA2C,IAA1C,IAAIsG,OAAE,EAA4C9G,EAAE,EAAEA,EAAEsC,EAAEE,OAAOxC,IAAIq1B,EAAE/yB,EAAEtC,IAAI,OAAOq1B,CAAC,CAAvb,CAAyb,CAAC,EAAE,CAAC,SAASmzD,EAAQjoF,EAAOC,GAAS,aAAgM,IAAIw7J,EAAQxzE,EAAQ,aAAiBjE,EAAUiE,EAAQ,UAAUjE,UAAc03E,EAAczzE,EAAQ,UAAUyzE,cAAkBC,EAAO1zE,EAAQ,YAAgB6vE,EAAS,CAAC,EAA0HA,EAASj8H,SAAS,CAAC+/H,WAAW,SAAoBC,GAAM,OAAIA,EAAK77J,QAA6B67J,EAAK77J,OAAyB,IAA7C,WAAwD,EAAE6oF,OAAO4yE,GAAxQ,SAAgB9uB,GAAK,OAAnVj7H,EAAmX,SAAak7H,GAAO,MAAS,MAAND,EAAkBC,EAAaA,EAAMD,EAAI,GAAvb7pI,EAAiX,SAArXiJ,EAAkX,CAAC,GAArVjM,OAAO04J,eAAezsJ,EAAIjJ,EAAI,CAAC4O,MAAMA,EAAM2mJ,YAAW,EAAKC,cAAa,EAAKC,UAAS,IAAYxsJ,EAAIjJ,GAAK4O,EAAa3F,EAA/K,IAAyBA,EAAIjJ,EAAI4O,CAAqb,IAAiKoqJ,WAAW,CAACxqI,MAAM,IAAI47B,IAAI,MAAM4qG,EAASiE,aAAa,WAAoD,IAAzC,IAAIC,EAAO,CAAC,EAAMjwJ,OAAI,EAAOlM,OAAK,EAAe0G,EAAE,EAAEA,EAAET,UAAU7D,OAAOsE,GAAG,EAAE,CAACwF,EAAIjG,UAAUS,GAAG1G,EAAKC,OAAOD,KAAKkM,GAAK,IAAI,IAAIq7B,EAAE,EAAEA,EAAEvnC,EAAKoC,OAAOmlC,GAAG,EAAG40H,EAAOn8J,EAAKunC,IAAIr7B,EAAIlM,EAAKunC,GAAI,CAAC,OAAO40H,CAAM,EAAElE,EAASiC,QAAQ,SAASkC,GAAiC,OAAlB,IAAIP,GAAuBQ,kBAAkBD,EAAQ,EAAEnE,EAASqE,WAAW,SAASrnI,GAAG,IAAI,QAAOjnB,IAAJinB,EAAe,OAAiB,OAAOsnI,mBAAmBC,OAAOvE,EAASwE,cAAcxnI,IAAI,CAAC,MAAMp1B,GAAG,IAAI8B,EAAI,IAAI7B,MAAM,OAA0F,MAAnF6B,EAAIiiC,WAAWhiC,KAAKqzB,EAAEtzB,EAAIiiC,WAAW84H,YAAY,kCAAwC/6J,CAAG,CAAC,EAAEs2J,EAAS0E,WAAW,SAAS1nI,GAAG,OAAO2nI,SAASjzJ,mBAAmBsrB,GAAG,EAAEgjI,EAASgC,QAAQ,SAASp0E,EAAIg3E,GAAoE,OAA3C,IAAI14E,EAAU,CAAC04E,aAAaA,IAA6Bx4E,gBAAgBwB,EAAI,WAAW,EAAEoyE,EAAS6E,QAAQ,CAAC,IAAI,QAAQ,IAAI,SAAS,IAAI,OAAO,IAAI,QAAQ,IAAIC,EAAiB,sCAAsC9E,EAAS+E,aAAa,SAASn3E,GAAK,OAAOA,EAAIz/E,QAAQ22J,EAAiB,OAAO,EAAE9E,EAASgF,eAAeh9J,OAAOD,KAAKi4J,EAAS6E,SAASx9J,KAAI,SAAS49J,GAAS,IAAIC,EAAUlF,EAAS6E,QAAQI,GAAS,MAAM,CAACE,OAAO,IAAI3hJ,OAAOw8I,EAAS+E,aAAaG,GAAW,KAAKE,KAAK,IAAI5hJ,OAAOw8I,EAAS+E,aAAaE,GAAS,KAAKzrI,MAAM0rI,EAAU9vG,IAAI6vG,EAAQ,IAAGjF,EAASqF,WAAW,SAASpxG,GAAqB,IAAb,IAAIhqD,OAAE,EAAewE,EAAE,EAAEgB,EAAEuwJ,EAASgF,eAAe76J,OAAOsE,EAAEgB,EAAEhB,IAAKxE,EAAE+1J,EAASgF,eAAev2J,GAAGwlD,EAAOA,EAAO9lD,QAAQlE,EAAEk7J,OAAOl7J,EAAEmrD,KAAK,OAAOnB,CAAM,EAAE+rG,EAASsF,WAAW,SAASrxG,GAA2B,iBAATA,IAAmBA,EAAOA,EAAOnkD,YAAwB,IAAb,IAAI7F,OAAE,EAAewE,EAAE,EAAEgB,EAAEuwJ,EAASgF,eAAe76J,OAAOsE,EAAEgB,EAAEhB,IAAKxE,EAAE+1J,EAASgF,eAAev2J,GAAGwlD,EAAOA,EAAO9lD,QAAQlE,EAAEm7J,KAAKn7J,EAAEuvB,OAAO,OAAOy6B,CAAM,EAAE+rG,EAAS/8I,UAAU,SAAShP,GAAK,OAAO/E,KAAKiE,MAAMjE,KAAKC,UAAU8E,GAAK,EAAE+rJ,EAASuF,aAAa,SAASC,GAAQ,OAAOA,EAAOnD,QAAO,SAAS51J,EAAOg5J,GAAgD,OAAzCx3J,MAAMwE,UAAU9C,KAAKuoC,MAAMzrC,EAAOg5J,GAAch5J,CAAM,GAAE,GAAG,EAAE,IAAIi5J,EAAY,IAAIliJ,OAAOnJ,OAAOsrJ,aAAa,KAAK,KAA8U,SAASC,EAAoB90J,GAAS,IAAIpH,EAAI,IAAIm6J,EAAOgC,gBAAgB,WAAW/0J,EAAQozB,QAAQ,sBAAsBpzB,EAAQy/C,UAAsN,MAA5M7mD,EAAIiiC,WAAW,CAACnkC,GAAG,uBAAuBsJ,EAAQy/C,SAASk0G,YAAY,WAAW3zJ,EAAQozB,QAAQ,sBAAsBpzB,EAAQy/C,SAASwrF,OAAOjrI,EAAQirI,OAAO7mH,MAAMpkB,EAAQokB,MAAMgP,QAAQpzB,EAAQozB,SAAex6B,CAAG,CAA1qBs2J,EAASwE,cAAc,SAASxnI,GAAG,OAAOA,EAAE7uB,QAAQu3J,EAAY,IAAI,EAAE1F,EAAS8F,aAAa,SAASC,EAAMn7H,GAA4C,IAAnC,IAAIo7H,EAAW,GAAOnwJ,OAAM,EAA0C,OAA5BA,EAAMkwJ,EAAME,KAAKr7H,KAAiBo7H,EAAWr2J,KAAK,CAAC81J,MAAM5vJ,EAAM6tJ,OAAO7tJ,EAAMqf,QAAQ,OAAO8wI,CAAU,EAAEhG,EAASkG,aAAa,SAASjyJ,GAAK,OAAOjM,OAAOD,KAAKkM,GAAK9J,MAAM,EAAoW61J,EAASjtG,SAAS,SAASgpF,EAAO73G,EAAQhP,GAAO,IAAI,IAAIzmB,EAAEymB,EAAMzlB,EAAEssI,EAAO5xI,OAAOsE,EAAEgB,EAAEhB,IAAwB,GAAVstI,EAAOttI,GAAWmL,QAAQ,KAAKsqB,EAAQ,IAAK,OAAOz1B,EAAGm3J,EAAoB,CAACr1G,SAAS,QAAQrsB,QAAQA,EAAQ63G,OAAOA,EAAO7mH,MAAMA,GAAO,EAAE8qI,EAASltG,QAAQ,SAASipF,EAAO73G,EAAQhP,GAAO,IAAI,IAAIzmB,EAAEymB,EAAMzmB,GAAG,EAAEA,IAAI,CAAC,IAAIs1J,EAAKhoB,EAAOttI,GAAG,GAAqC,IAAlCs1J,EAAKnqJ,MAAM7J,QAAQ,IAAIm0B,KAAiE,IAAnD,CAAC,IAAI,KAAKn0B,QAAQg0J,EAAKnqJ,MAAMsqB,EAAQ/5B,OAAO,IAAU,OAAOsE,CAAE,CAACm3J,EAAoB,CAACr1G,SAAS,OAAOrsB,QAAQA,EAAQ63G,OAAOA,EAAO7mH,MAAMA,GAAO,EAAEhtB,EAAOC,QAAQ63J,CAAQ,EAAE,CAAC,WAAW,EAAE,YAAY,EAAEqG,OAAO,KAAK,EAAE,CAAC,SAASl2E,EAAQjoF,EAAOC,GAAS,aAAa,SAASkgK,EAAQp8J,GAAS1D,KAAK4L,KAAK,eAAe5L,KAAK0D,QAAQA,EAAQ1D,KAAK+/J,MAAM,IAAIzgK,MAAMoE,GAASq8J,KAAK,CAAmC,SAASzC,EAAgB55J,GAAS1D,KAAK4L,KAAK,gBAAgB5L,KAAK0D,QAAQA,EAAQ1D,KAAK+/J,MAAM,IAAIzgK,MAAMoE,GAASq8J,KAAK,CAAuC,SAASC,EAAmBt8J,GAAS1D,KAAK4L,KAAK,mBAAmB5L,KAAK0D,QAAQA,EAAQ1D,KAAK+/J,MAAM,IAAIzgK,MAAMoE,GAASq8J,KAAK,CAA0C,SAASE,EAAgBv8J,GAAS1D,KAAK4L,KAAK,gBAAgB5L,KAAKojC,WAAW,CAAC84H,YAAY,iBAAiBl8J,KAAK0D,QAAQA,EAAQ1D,KAAK+/J,MAAM,IAAIzgK,MAAMoE,GAASq8J,KAAK,CAAngBD,EAAQ51J,UAAU5K,MAAM4K,UAA+HozJ,EAAgBpzJ,UAAU,IAAI41J,EAAmIE,EAAmB91J,UAAU,IAAI41J,EAA2KG,EAAgB/1J,UAAU,IAAI41J,EAAQngK,EAAOC,QAAQ,CAACkgK,QAAQA,EAAQxC,gBAAgBA,EAAgB2C,gBAAgBA,EAAgBD,mBAAmBA,EAAmB,EAAE,CAAC,GAAG,EAAE,CAAC,SAASp4E,EAAQjoF,EAAOC,GAAS,aAAa,IAAIsgK,EAAWt4E,EAAQ,kBAAsBu4E,EAAoBv4E,EAAQ,4BAAgCw4E,EAAax4E,EAAQ,oBAAwBy4E,EAAgBz4E,EAAQ,+BAAmC/L,EAAO+L,EAAQ,oBAAwB04E,EAAmB,CAAC7B,kBAAkB,SAA2BlzB,GAAkI,OAA1GA,EAAI/mD,KAAK,2DAA2D1lF,KAAI,SAAS0lF,GAAM,OAAOA,EAAK54E,IAAI,IAAyB+N,OAAO,CAAC,wBAAwB,EAAEgmJ,SAAS,wBAAwBY,iBAAiB,CAAC,MAAM,OAAOC,kBAAkB,CAAC,OAAO,OAAO,OAAO,UAAU,MAAM,OAAOC,UAAU,OAAOC,WAAW,MAAM/B,YAAY,CAAC9iF,EAAOwkF,EAAgBD,EAAaF,IAAiBS,EAAmB,CAAClC,kBAAkB,SAA2BlzB,GAAwG,OAAhFA,EAAI/mD,KAAK,iCAAiC1lF,KAAI,SAAS0lF,GAAM,OAAOA,EAAK54E,IAAI,IAAyB+N,OAAO,CAAC,qBAAqB,EAAEgmJ,SAAS,oBAAoBY,iBAAiB,CAAC,MAAM,OAAOC,kBAAkB,CAAC,OAAO,OAAO,UAAU,MAAM,OAAOC,UAAU,MAAMC,WAAW,MAAM/B,YAAY,CAAC9iF,EAAOskF,EAAoBE,EAAgBD,EAAaF,IAAavgK,EAAOC,QAAQ,CAACghK,KAAKD,EAAmBE,KAAKP,EAAmB,EAAE,CAAC,8BAA8B,EAAE,iBAAiB,EAAE,mBAAmB,GAAG,mBAAmB,GAAG,2BAA2B,KAAK,EAAE,CAAC,SAAS14E,EAAQjoF,EAAOC,GAAS,aAAa,IAAI07J,EAAO1zE,EAAQ,YAAgB6vE,EAAS7vE,EAAQ,eAAe,SAASk5E,EAAQC,EAAMzzJ,GAAO,OAAOyzJ,EAAM,IAAIzzJ,EAAM6tJ,QAAQ7tJ,EAAM6tJ,OAAO4F,EAAM,EAAE,CAAC,SAASC,EAAgBxF,EAAKyF,GAAW,GAAe,QAAZzF,EAAKzyJ,MAA8B,UAAhByyJ,EAAKxzG,UAAoBwzG,EAAK/3J,KAAK,CAAC,GAAGw9J,EAAW,MAAM,IAAI3hK,MAAM,uCAAuC,OAAO,CAAI,CAAC,GAAe,QAAZk8J,EAAKzyJ,MAA8B,QAAhByyJ,EAAKxzG,UAAkBwzG,EAAK/3J,KAAK,CAAC,IAAIw9J,EAAW,MAAM,IAAI3hK,MAAM,2CAA2C,OAAO,CAAK,CAAC,OAAO2hK,CAAS,CAAC,SAASC,EAAWtgJ,EAAEC,GAAG,OAAOD,EAAEu6I,OAAOt6I,EAAEs6I,MAAM,CAAC,SAASgG,EAAO70B,GAAK,IAAIr7G,EAAM,EAAc,MAATq7G,EAAI,KAAUr7G,EAAM,GAAE,IAAItE,EAAM2/G,EAAI9kI,QAAQ,KAASqlD,GAAa,IAATlgC,EAAW2/G,EAAI1qI,OAAO,EAAE+qB,EAAM,MAAM,CAAC2/G,IAAIA,EAAIxmI,MAAMmrB,EAAM47B,GAAK7E,SAAiB,IAAR/2B,EAAU,QAAQ,MAAM,CAA6hC,SAASmwI,EAA0B74J,GAAS,IAAIpH,EAAI,IAAIm6J,EAAOgC,gBAAgB,gBAAmM,MAAnLn8J,EAAIiiC,WAAW,CAACi+H,KAAK94J,EAAQ84J,KAAK39I,MAAM,KAAK,GAAGwlC,OAAO,GAAGjqD,GAAG,eAAeiC,QAAQqH,EAAQ84J,KAAKnF,YAAY,2BAA2B3zJ,EAAQ84J,KAAKn4G,OAAO,EAAE,IAAI,iBAAuB/nD,CAAG,CAAC,SAASmgK,EAAuBC,EAAiBC,GAAU,IAAIC,GAAY,EAAUC,EAAmB,CAACvG,OAAO,GAAOkG,OAAK,EAAOE,EAAiBv7J,SAAQ,SAAS27J,GAAgBN,EAAKG,EAASt4G,OAAOw4G,EAAmBvG,OAAOwG,EAAexG,OAAOuG,EAAmBvG,SAAqC,UAA1BwG,EAAe35G,UAAoBy5G,GAAuC,QAA1BE,EAAe35G,WAAmBy5G,KAA0C,UAA1BE,EAAe35G,SAAoBo5G,EAA0B,CAACC,KAAKA,IAA3+B,SAAmC94J,GAAS,IAAIpH,EAAI,IAAIm6J,EAAOgC,gBAAgB,gBAAyL,MAAzKn8J,EAAIiiC,WAAW,CAACi+H,KAAK94J,EAAQ84J,KAAK39I,MAAM,KAAK,GAAGzkB,GAAG,eAAeiC,QAAQqH,EAAQ84J,KAAKnF,YAAY,2BAA2B3zJ,EAAQ84J,KAAKn4G,OAAO,EAAE,IAAI,iBAAuB/nD,CAAG,CAAsuBygK,CAA0B,CAACP,KAAKA,KAAQI,GAAaA,EAAYC,EAAmBC,CAAc,IAAG,IAAIA,EAAuBH,EAAS5/J,OAAQy/J,EAAKG,EAASt4G,OAAOw4G,EAAmBvG,OAAOwG,EAAsBD,EAAmBvG,QAAWsG,GAAaL,EAA0B,CAACC,KAAKA,GAAO,CAAC,SAASQ,EAAcC,EAAI54J,EAAI8+C,GAAU,IAAI9hB,EAAQ,GAAOi1H,GAAQ,EAAE,IAAiD,KAA9CA,EAAO2G,EAAIt6J,QAAQ0B,EAAIiyJ,EAAO,KAAmBj1H,EAAQ9+B,KAAK,CAAC+zJ,OAAOA,EAAOnzG,SAASA,WAA4B,IAAVmzG,GAAa,OAAOj1H,CAAO,CAAC,SAAS67H,EAAOC,GAAmB,IAAI38F,EAAMrlE,KAAKA,KAAKgiK,kBAAkBA,EAAkBhiK,KAAKiiK,KAAK,GAAGjiK,KAAKkiK,gBAAgB,SAASzG,GAAYp2F,EAAM48F,KAAK58F,EAAM28F,kBAAkB54J,KAAK,IAAI,IAAI+xJ,EAAO,EAAE91F,EAAM88F,OAAO98F,EAAM28F,kBAAkBljK,KAAI,SAAS08J,GAA0B,OAApBL,GAAQK,EAAK55J,QAAqB45J,EAAK55J,MAAM,IAAG,IAAI2/J,EAAiB9J,EAASuF,aAAa,CAAC6E,EAAcx8F,EAAM48F,KAAKxG,EAAWxqI,MAAM,SAAS4wI,EAAcx8F,EAAM48F,KAAKxG,EAAW5uG,IAAI,SAASnsC,KAAKwgJ,GAAYI,EAAuBC,EAAiBl8F,EAAM48F,MAAM,IAAIG,EAAgB,CAACnxI,MAAMwqI,EAAWxqI,MAAMrvB,OAAOirD,IAAI4uG,EAAW5uG,IAAIjrD,QAAYygK,EAAQ,EAAMC,EAAe,EAAEj9F,EAAMmuE,OAAOnuE,EAAM88F,OAAOrjK,KAAI,SAASq8J,EAAOj1J,GAAkI,IAA/H,IAAI66J,EAAM,CAAC5F,EAAOA,EAAOn7J,KAAKgiK,kBAAkB97J,GAAGtE,QAAY2gK,EAAYviK,KAAKgiK,kBAAkB97J,GAAOs8J,EAAmB,GAASF,EAAef,EAAiB3/J,QAAQk/J,EAAQC,EAAMQ,EAAiBe,KAAkBE,EAAmBp7J,KAAKm6J,EAAiBe,IAAiBA,IAAiB,IAAIt2J,EAAM,GAAO8pG,EAAO,EAAKusD,EAAQ,IAAGvsD,EAAOusD,EAAQA,EAAQ,GAAEG,EAAmBx8J,SAAQ,SAASy8J,GAAmB,IAAIpxJ,EAAMkxJ,EAAYr5G,OAAO4sD,EAAO2sD,EAAkBtH,OAAOA,EAAOrlD,GAAWzkG,EAAMzP,OAAO,GAAGoK,EAAM5E,KAAK,CAAC2B,KAAK,UAAUsI,MAAMA,IAAQrF,EAAM5E,KAAK,CAAC2B,KAAK,YAAYi/C,SAASy6G,EAAkBz6G,WAAW8tD,EAAO2sD,EAAkBtH,OAAOA,EAAOiH,EAAgBK,EAAkBz6G,SAAS,IAAGq6G,EAAQvsD,EAAOysD,EAAY3gK,OAAO,IAAIyP,EAAMkxJ,EAAYr5G,OAAO4sD,GAAoE,OAAzDzkG,EAAMzP,OAAO,GAAGoK,EAAM5E,KAAK,CAAC2B,KAAK,UAAUsI,MAAMA,IAAerF,CAAK,GAAEq5D,EAAM,CAAC,CAAC1lE,EAAOC,QAAQ,CAACgL,MAAM,SAAe83J,EAAUjH,GAAY,IAAIwF,GAAU,EAAUe,EAAkB,GAAGU,EAAU18J,SAAQ,SAASw1J,IAAMyF,EAAUD,EAAgBxF,EAAKyF,KAAqC,YAAZzF,EAAKzyJ,MAAkBi5J,EAAkB56J,KAAKo0J,EAAKnqJ,MAAO,IAAG,IAAIuzE,EAAO,IAAIm9E,EAAOC,GAAmBp9E,EAAOs9E,gBAAgBzG,GAAY,IAAIkH,EAAS,GAAOh2I,EAAM,EAAoW,OAAlW+1I,EAAU18J,SAAQ,SAASw1J,GAAMyF,EAAUD,EAAgBxF,EAAKyF,GAA0B,YAAZzF,EAAKzyJ,OAAkByyJ,EAAKxzG,SAASi5G,EAAU,YAAY,cAAgBA,GAAuB,YAAZzF,EAAKzyJ,MAAkBrD,MAAMwE,UAAU9C,KAAKuoC,MAAMgzH,EAAS/9E,EAAO4uD,OAAO7mH,GAAO7tB,KAAI,SAAS2b,GAAiD,MAAlC,YAATA,EAAE1R,OAAkB0R,EAAEutC,SAAS,aAAmBvtC,CAAC,KAAIkS,KAAag2I,EAASv7J,KAAKo0J,EAAM,IAAUmH,CAAQ,EAAEC,SAAS,SAAkBvgI,EAAQwgI,GAAS,IAAIC,EAApgJ,SAAoBzgI,EAAQ0gI,EAAeC,GAAuU,IAArT,IAAIltD,EAAO,EAAMmtD,EAAc5gI,EAAQzgC,OAAWshK,EAAWzL,EAASuF,aAAa,CAAC+F,EAAejkK,KAAI,SAASwtI,GAAK,MAAM,CAACA,IAAIA,EAAI7oI,MAAK,EAAK,IAAGu/J,EAAiBlkK,KAAI,SAASwtI,GAAK,MAAM,CAACA,IAAIA,EAAI7oI,MAAK,EAAM,MAAKq2J,QAAO,SAASoJ,EAAWrjI,GAA4B,OAAzBqjI,EAAWrjI,EAAEysG,KAAKzsG,EAAEp8B,KAAYy/J,CAAU,GAAE,CAAC,GAAOC,EAAa,GAASrtD,EAAOmtD,IAA+D,KAAhDntD,EAAOzzE,EAAQ76B,QAAQ,IAAIsuG,KAA5B,CAA0D,IAAIqlD,EAAOrlD,EAAOA,EAAOzzE,EAAQ76B,QAAQ,IAAIsuG,GAAQ,IAAIstD,EAAQ/gI,EAAQv8B,MAAMq1J,EAAOrlD,EAAO,GAAOutD,EAAQlC,EAAOiC,GAAS92B,EAAI+2B,EAAQ/2B,IAAItkF,EAASq7G,EAAQr7G,SAAavkD,EAAKy/J,EAAW52B,GAAc,MAAN7oI,GAAqB0/J,EAAa/7J,KAAK,CAAC2B,KAAK,MAAMi/C,SAASA,EAASvkD,KAAKA,EAAK03J,OAAOA,EAAO9pJ,MAAM+xJ,GAAS,CAAC,OAAOD,CAAY,CAAmwHG,CAAWjhI,EAAQwgI,EAAQp/J,KAAKo/J,EAAQU,OAAWztD,EAAO,EAAM09B,EAAOsvB,EAAQhJ,QAAO,SAAStmB,EAAOlmI,GAAO,IAAI+D,EAAMgxB,EAAQ6mB,OAAO4sD,EAAOxoG,EAAM6tJ,OAAOrlD,GAA4K,OAAjKzkG,EAAMzP,OAAO,GAAG4xI,EAAOpsI,KAAK,CAAC2B,KAAK,UAAUsI,MAAMA,IAAQykG,EAAOxoG,EAAM6tJ,OAAO7tJ,EAAM+D,MAAMzP,cAAc0L,EAAM6tJ,OAAU7tJ,EAAM+D,MAAMzP,OAAO,GAAG4xI,EAAOpsI,KAAKkG,GAAckmI,CAAM,GAAE,IAAQniI,EAAMgxB,EAAQ6mB,OAAO4sD,GAAqE,OAA1DzkG,EAAMzP,OAAO,GAAG4xI,EAAOpsI,KAAK,CAAC2B,KAAK,UAAUsI,MAAMA,IAAemiI,CAAM,EAAE,EAAE,CAAC,cAAc,EAAE,WAAW,IAAI,EAAE,CAAC,SAAS5rD,EAAQjoF,EAAOC,GAAS,aAA8ND,EAAOC,QAAxN,SAAiB4jK,GAAM,IAAIC,EAAc98J,KAAKC,UAAUowG,EAAM,CAAC,EAAiI,OAA/H,WAAqB,IAAIr/E,EAAK8rI,EAAch+J,WAAW,OAAOkyB,KAAQq/E,EAAMA,EAAMr/E,GAAMq/E,EAAMr/E,GAAM6rI,EAAK7zH,MAAM3vC,KAAKyF,UAAU,CAAiB,CAAuB,EAAE,CAAC,GAAG,EAAE,CAAC,SAASmiF,EAAQjoF,EAAOC,GAAS,aAAa,SAAS8jK,EAAiBzG,EAAOrjG,GAAuB,IAAhB,IAAI+pG,GAAU,EAAUz9J,EAAE,EAAEgB,EAAE+1J,EAAOr7J,OAAOsE,EAAEgB,EAAEhB,IAAQ0zD,EAAM1zD,IAAI+2J,EAAO/2J,GAAGtE,UAAgC,IAAZ+hK,GAAe1G,EAAO/2J,GAAG0zD,EAAM1zD,IAAIi1J,OAAO8B,EAAO0G,GAAU/pG,EAAM+pG,IAAWxI,UAAQwI,EAASz9J,GAAG,IAAe,IAAZy9J,EAAe,MAAM,IAAIrkK,MAAM,qBAAqB,OAAOqkK,CAAQ,CAAChkK,EAAOC,QAAQ,SAASq9J,GAAQ,IAAI2G,EAAY3G,EAAOnD,QAAO,SAASh0G,EAAIo3G,GAAO,OAAOp3G,EAAIo3G,EAAMt7J,MAAM,GAAE,GAAGq7J,EAAOA,EAAOt6J,QAAO,SAASu6J,GAAO,OAAOA,EAAMt7J,OAAO,CAAC,IAA6F,IAA1F,IAAIiiK,EAAY,IAAIn+J,MAAMk+J,GAAiBhqG,EAAMqjG,EAAOn+J,KAAI,WAAW,OAAO,CAAC,IAAOoH,EAAE,EAAQA,GAAG09J,EAAY,GAAE,CAAC,IAAIE,EAAWJ,EAAiBzG,EAAOrjG,GAAOiqG,EAAY39J,GAAG+2J,EAAO6G,GAAYlqG,EAAMkqG,IAAalqG,EAAMkqG,KAAc59J,GAAG,CAAC,OAAO29J,CAAW,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,SAASj8E,EAAQjoF,EAAOC,GAAS,aAAa,SAASmkK,IAAW,CAAC,SAASC,EAAS99J,GAAG,OAAOA,CAAC,CAACvG,EAAOC,QAAQ,SAASD,GAAQ,IAAI67B,EAAS,CAACvrB,IAAI8zJ,EAASn5J,MAAMm5J,EAASloF,OAAOkoF,EAASE,UAAUF,EAASlF,mBAAmBmF,EAAS9E,eAAe8E,EAASE,UAAUF,GAAU,GAAGvkK,OAAOD,KAAKg8B,GAAU2oI,OAAM,SAAS1hK,GAAK,OAAO9C,EAAO8C,EAAI,IAAI,MAAM,IAAInD,MAAM,2FAAgL,OAArFG,OAAOD,KAAKg8B,GAAUx1B,SAAQ,SAASvD,GAAK9C,EAAO8C,GAAK9C,EAAO8C,IAAM+4B,EAAS/4B,EAAI,IAAU9C,CAAM,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,SAASioF,EAAQjoF,EAAOC,GAAS,aAAa,IAA+BwkK,EAAUx8E,EAAQ,gBAAoB6vE,EAAS7vE,EAAQ,gBAAoBm2E,EAAQn2E,EAAQ,qBAAuDy8E,EAArBz8E,EAAQ,aAAyCy8E,mBAAuB/I,EAAO1zE,EAAQ,aAA+V,SAAS08E,EAAkC/7J,GAAS,IAAImtI,EAAKntI,EAAQmtI,KAASv0I,EAAI,IAAIm6J,EAAOgC,gBAAgB,0CAA4O,MAAlMn8J,EAAIiiC,WAAW,CAACnkC,GAAG,yCAAyCi9J,YAAY,YAAYxmB,EAAK,GAAGrkI,MAAM,2BAA2BqkI,EAAK,GAAGrkI,MAAM,IAAIkzJ,WAAW7uB,EAAK,GAAGrkI,MAAMmzJ,WAAW9uB,EAAK,GAAGrkI,OAAalQ,CAAG,CAAC,SAASsjK,EAAmBjJ,GAAM,OAAOA,EAAKkJ,UAAU,IAAI,QAAQ,OAAO,EAAE,IAAI,MAAM,OAAO,EAAE,QAAQ,MAAM,IAAIplK,MAAM,uDAAuDk8J,EAAKkJ,SAAS,KAAK,CAAC,SAASC,EAAS/G,GAAQ,GAAmB,IAAhBA,EAAOh8J,OAAY,MAAM,GAA4C,IAAzC,IAAIgjK,EAAU,EAAMC,EAAWjH,EAAO,GAAW13J,EAAE,EAAEA,EAAE03J,EAAOh8J,OAAOsE,IAAI,CAAC,IAAI4+J,EAAalH,EAAO13J,GAAoD,GAAe,KAAhE0+J,GAAWH,EAAmBK,EAAatJ,OAAuB,CAAIsJ,EAAatJ,KAAKnqJ,QAAQwzJ,EAAWrJ,KAAKnqJ,OAAiC,KAA1ByzJ,EAAatJ,KAAKnqJ,OAAYizJ,EAAkC,CAAC5uB,KAAK,CAACmvB,EAAWrJ,KAAKsJ,EAAatJ,QAAQ,IAAIuJ,EAAMJ,EAAS/G,EAAO93J,MAAMI,EAAE,IAAI,MAAM,CAAC,CAAC2+J,EAAWC,IAAenrJ,OAAOorJ,EAAM,CAAC,CAAC,IAAIvJ,EAAKqJ,EAAWrJ,MAAp2C,SAAqCjzJ,GAAS,IAAIm8J,EAASn8J,EAAQm8J,SAAa7kI,EAAa,UAAX6kI,EAAmB,WAAW,WAAeM,EAAa,UAAXN,EAAmB,WAAW,WAAevjK,EAAI,IAAIm6J,EAAOgC,gBAAgB0H,EAAE,SAAa14B,EAAI/jI,EAAQizJ,KAAKnqJ,MAA2F,MAArFlQ,EAAIiiC,WAAW,CAACnkC,GAAG4gC,EAAE,QAAQq8H,YAAY,qBAAqB5vB,EAAI,OAAOzsG,EAAEwhI,KAAK/0B,GAAWnrI,CAAG,CAAwhC8jK,CAA4B,CAACzJ,KAAKA,EAAKkJ,SAASlJ,EAAKkJ,UAAU,CAAC,IAAIrE,EAAgB,CAACz0J,KAAK,kBAAkBs4J,UAAU,SAAmB1wB,EAAO0xB,GAAM,IAAIjB,EAAUiB,EAAKjB,UAAUkB,EAAWD,EAAKhB,UAActG,EAAOqG,EAAnzD,aAAu0DzwB,GAAQoqB,EAAOA,EAAO9+J,KAAI,SAASsmK,GAAO,OAAOA,GAAO,EAAE,IAA4B,IAAIC,EAAMV,EAAnC/G,EAAOwG,EAAUxG,IAAuC0H,EAAcD,EAAMvmK,KAAI,SAASymK,GAAM,IAAIC,EAASD,EAAK,GAAG/J,KAAKgK,SAAwG,MAAjF,SAAXA,IAAmBA,EAASnB,EAAmB7wB,EAAO1tI,MAAMy/J,EAAK,GAAGpK,OAAOoK,EAAK,GAAGpK,UAAaqK,EAA4K,CAAnH/N,EAASltG,QAAQipF,EAAOgyB,EAASD,EAAK,GAAGpK,QAAkB1D,EAASjtG,SAASgpF,EAAOgyB,EAASD,EAAK,GAAGpK,SAA9I,CAACoK,EAAK,GAAGpK,OAAOoK,EAAK,GAAGpK,OAAgJ,IAAOsK,EAAiB,EAAMC,OAAW,EAAO,OAAOlyB,EAAOsmB,QAAO,SAAS6L,EAAUnK,EAAKt1J,GAAG,IAAI0/J,EAAOH,EAAiBJ,EAAMzjK,QAAQ0jK,EAAcG,GAAkB,IAAIv/J,EAAMq/J,EAAKF,EAAMI,GAAsBI,EAAaP,EAAcG,GAAkB,IAAIG,EAA6B,OAArBD,EAAUv+J,KAAKo0J,GAAamK,EAAiH,GAApGE,EAAa,KAAK3/J,IAAGw/J,EAAW,IAAMH,EAAK,GAAGpK,SAASj1J,GAAGq/J,EAAK,GAAGpK,SAASj1J,GAAGw/J,EAAWt+J,KAAKo0J,GAASqK,EAAa,KAAK3/J,EAAE,CAAC,IAAI4/J,EAAStyB,EAAO+xB,EAAK,GAAGpK,eAAe2K,EAASpB,gBAAgBoB,EAASN,SAASM,EAASC,UAAUZ,EAAWO,GAAYC,EAAUv+J,KAAK0+J,GAAUL,GAAkB,CAAC,OAAOE,CAAS,GAAE,GAAG,GAAGhmK,EAAOC,QAAQ,WAAW,OAAOm+J,EAAQsC,EAAgB,CAAC,EAAE,CAAC,eAAe,EAAE,YAAY,EAAE,eAAe,EAAE,oBAAoB,EAAE,YAAY,KAAK,EAAE,CAAC,SAASz4E,EAAQjoF,EAAOC,GAAS,aAAa,IAAI63J,EAAS7vE,EAAQ,gBAAoBo+E,EAAe,oBAAwBjI,EAAQn2E,EAAQ,qBAAyBq+E,EAAW,OAAW/F,EAAW,CAACt0J,KAAK,aAAahB,MAAM,SAAes7J,GAAoB,IAAIvmK,EAAOsmK,EAAel9J,EAAK,cAAc,MAA2B,MAAxBm9J,EAAmB,GAAgB,CAACn9J,KAAKA,EAAKsI,MAAM60J,EAAmBh9G,OAAO,GAAGs8G,SAAS,OAAO7lK,OAAOA,EAAO+kK,SAAS,QAAQyB,UAAS,GAAkC,MAAxBD,EAAmB,GAAgB,CAACn9J,KAAKA,EAAKsI,MAAM60J,EAAmBh9G,OAAO,GAAGs8G,SAAS,OAAO7lK,OAAOA,EAAO+kK,SAAS,QAAQyB,UAAS,GAAiC,MAAxBD,EAAmB,GAAgB,CAACn9J,KAAKA,EAAKsI,MAAM60J,EAAmBh9G,OAAO,GAAGvpD,OAAOA,EAAO+kK,SAAS,OAAkC,MAAxBwB,EAAmB,GAAuI,CAACn9J,KAAKA,EAAKsI,MAA9H60J,EAAmBtgK,QAAQogK,EAAe,MAAgGR,SAA7EU,EAAmBtgK,QAAQogK,EAAe,MAAqDrmK,OAAOA,EAAO+kK,SAAS,QAAQyB,UAAS,GAAc,IAAI,EAAElC,UAAU,SAAmBmC,EAAU5yB,GAAQ,GAAe,eAAZ4yB,EAAiC,OAAO5yB,EAAOsmB,QAAO,SAASpkB,EAAK8lB,EAAKL,GAAqG,MAA9E,gBAAZK,EAAKzyJ,MAAsByyJ,EAAK77J,SAASsmK,GAAYvwB,EAAKtuI,KAAK,CAACo0J,KAAKA,EAAKL,OAAOA,IAAgBzlB,CAAI,GAAE,GAAG,EAAE75D,OAAO,SAAgB2/E,EAAKjzJ,GAAS,GAAgB,iBAAZizJ,EAAKzyJ,MAAsByyJ,EAAK77J,SAASsmK,EAAY,OAAO,KAAK,IAAII,EAAW,GAA0S,OAAjE99J,EAAQ+9J,aAAaC,SAAS/K,EAAKnqJ,OAAzQ,SAAkBk7H,GAAO,IAAI+5B,EAAa/9J,EAAQ+9J,aAAaE,sBAAsBj6B,EAAMivB,EAAKnqJ,OAAOg1J,EAAWj/J,KAAKmB,EAAQszE,OAAO47E,EAASiE,aAAa,CAAC,EAAEnzJ,EAAQ,CAACy1J,SAASxC,EAAKuK,UAAUrwB,KAAK,CAAC,EAAE4wB,aAAaA,KAAgB,GAAmD9K,EAAK2K,UAAgB,CAAC90J,MAAMg1J,EAAWj9J,KAAK,IAAI,GAAGzJ,EAAOC,QAAQ,WAAW,OAAOm+J,EAAQmC,EAAW,CAAC,EAAE,CAAC,eAAe,EAAE,oBAAoB,IAAI,GAAG,CAAC,SAASt4E,EAAQjoF,EAAOC,GAAS,aAAa,IAAIi4J,EAAa,WAAW,SAASC,EAAiB5+F,EAAOm2C,GAAO,IAAI,IAAInpG,EAAE,EAAEA,EAAEmpG,EAAMztG,OAAOsE,IAAI,CAAC,IAAI6xJ,EAAW1oD,EAAMnpG,GAAG6xJ,EAAWC,WAAWD,EAAWC,aAAY,EAAMD,EAAWE,cAAa,EAAQ,UAAUF,IAAWA,EAAWG,UAAS,GAAKz4J,OAAO04J,eAAej/F,EAAO6+F,EAAWt1J,IAAIs1J,EAAW,CAAC,CAAC,OAAO,SAASK,EAAYC,EAAWC,GAAuI,OAAvHD,GAAWP,EAAiBM,EAAYluJ,UAAUmuJ,GAAeC,GAAYR,EAAiBM,EAAYE,GAAoBF,CAAW,CAAC,CAAte,GAA0nB,IAAIX,EAAS7vE,EAAQ,gBAAoB0zE,EAAO1zE,EAAQ,aAAiBq+E,EAAW,SAAalI,EAAQn2E,EAAQ,qBAAkW,SAAS6+E,EAASvB,GAAM,IAAI1J,EAAK0J,EAAK1J,KAAKzzC,EAAKm9C,EAAKn9C,KAAKlM,EAAMqpD,EAAKrpD,MAAM6qD,EAAWxB,EAAKwB,WAAW/5I,EAAMu4I,EAAKv4I,MAAUg6I,EAAeD,EAAW5gK,MAAMiiH,EAAK,EAAElM,GAAsO,OAA/N8qD,EAAe3gK,SAAQ,SAASyU,EAAEvU,GAAMA,IAAIymB,EAAMo7F,EAAK,IAAsB,gBAATttG,EAAE1R,MAA+B,YAAT0R,EAAE1R,MAA+B,cAAb0R,EAAEutC,WAAxmB,SAAgDz/C,GAAS,IAAIpH,EAAI,IAAIm6J,EAAOgC,gBAAgB,gDAAoDhxB,EAAI/jI,EAAQizJ,KAAKnqJ,MAAkK,MAA5JlQ,EAAIiiC,WAAW,CAACnkC,GAAG,+CAA+Ci9J,YAAY,WAAW5vB,EAAI+0B,KAAK94J,EAAQizJ,KAAKnqJ,MAAMs1J,eAAep+J,EAAQo+J,gBAAsBxlK,CAAG,CAAoTylK,CAAuC,CAACD,eAAeA,EAAenL,KAAKA,GAAO,IAAUA,CAAI,CAAC,IAAIqL,EAAa,WAAW,SAASA,KAA5hC,SAAyB9sG,EAASq+F,GAAa,KAAKr+F,aAAoBq+F,GAAc,MAAM,IAAIW,UAAU,oCAAqC,EAA45BC,CAAgBh5J,KAAK6mK,GAAc7mK,KAAK4L,KAAK,cAAc,CAAyvB,OAAxvBisJ,EAAagP,EAAa,CAAC,CAACpkK,IAAI,qBAAqB4O,MAAM,SAA4B9I,EAAQqvJ,GAAgE,OAAjD53J,KAAKk+J,eAAetG,EAAcsG,eAAsB31J,CAAO,GAAG,CAAC9F,IAAI,QAAQ4O,MAAM,SAAe60J,GAA2C,MAA2B,MAAxBA,EAAmB,GAAiB,KAAW,CAACn9J,KAAjE,cAA2EsI,MAAM60J,EAAmBh9G,OAAO,GAAGvpD,OAAOsmK,EAAW,GAAG,CAACxjK,IAAI,YAAY4O,MAAM,SAAmBmiI,GAAQ,OAAOikB,EAASmG,OAAOkJ,YAAYtzB,EAAO,CAACyyB,WAAWA,EAAWQ,SAASA,EAASjB,SAASxlK,KAAKk+J,eAAeuC,WAAW,GAAG,CAACh+J,IAAI,SAAS4O,MAAM,SAAgBmqJ,EAAKjzJ,GAAS,GAAGizJ,EAAK77J,SAASsmK,EAAY,OAAO,KAAK,IAAI50J,EAAM9I,EAAQ+9J,aAAa5qH,SAAS8/G,EAAKnqJ,OAAsD,OAArC,MAAPA,IAAaA,EAAM9I,EAAQgzJ,WAAWC,IAAY,CAACnqJ,MAAMA,EAAM,KAAYw1J,CAAY,CAA12B,GAA82BlnK,EAAOC,QAAQ,WAAW,OAAOm+J,EAAQ,IAAI8I,EAAa,CAAC,EAAE,CAAC,eAAe,EAAE,YAAY,EAAE,oBAAoB,IAAI,GAAG,CAAC,SAASj/E,EAAQjoF,EAAOC,GAAS,aAAa,IAAIi4J,EAAa,WAAW,SAASC,EAAiB5+F,EAAOm2C,GAAO,IAAI,IAAInpG,EAAE,EAAEA,EAAEmpG,EAAMztG,OAAOsE,IAAI,CAAC,IAAI6xJ,EAAW1oD,EAAMnpG,GAAG6xJ,EAAWC,WAAWD,EAAWC,aAAY,EAAMD,EAAWE,cAAa,EAAQ,UAAUF,IAAWA,EAAWG,UAAS,GAAKz4J,OAAO04J,eAAej/F,EAAO6+F,EAAWt1J,IAAIs1J,EAAW,CAAC,CAAC,OAAO,SAASK,EAAYC,EAAWC,GAAuI,OAAvHD,GAAWP,EAAiBM,EAAYluJ,UAAUmuJ,GAAeC,GAAYR,EAAiBM,EAAYE,GAAoBF,CAAW,CAAC,CAAte,GAA0nB,IAAI2F,EAAQn2E,EAAQ,qBAAyBm/E,EAAO,WAAW,SAASA,KAAxN,SAAyBhtG,EAASq+F,GAAa,KAAKr+F,aAAoBq+F,GAAc,MAAM,IAAIW,UAAU,oCAAqC,EAAkFC,CAAgBh5J,KAAK+mK,GAAQ/mK,KAAK4L,KAAK,QAAQ,CAA4V,OAA3VisJ,EAAakP,EAAO,CAAC,CAACtkK,IAAI,MAAM4O,MAAM,SAAa3F,GAAQA,EAAIsyJ,WAAUh+J,KAAKg+J,SAAStyJ,EAAIsyJ,UAAsB,MAAVtyJ,EAAItK,OAAYpB,KAAKoB,KAAKsK,EAAItK,KAAK,GAAG,CAACqB,IAAI,iBAAiB4O,MAAM,SAAwB4tJ,GAAQ,IAAI55F,EAAMrlE,KAAK,OAAOP,OAAOD,KAAKQ,KAAKg+J,UAAUlE,QAAO,SAASmF,EAAO3xH,GAA+C,OAAzC2xH,EAAO3xH,GAAM,CAACA,KAAKA,EAAKlsC,KAAKikE,EAAMjkE,MAAa69J,CAAM,GAAEA,EAAO,KAAY8H,CAAM,CAArb,GAAybpnK,EAAOC,QAAQ,WAAW,OAAOm+J,EAAQ,IAAIgJ,EAAO,CAAC,EAAE,CAAC,oBAAoB,IAAI,GAAG,CAAC,SAASn/E,EAAQjoF,EAAOC,GAAS,aAAa,IAAIm+J,EAAQn2E,EAAQ,qBAAyBo/E,EAAc,CAACp7J,KAAK,sBAAsBs4J,UAAU,SAAmB1wB,GAAQ,IAAIxmF,EAAM,GAAOi6G,GAAQ,EAAU/iK,EAAOsvI,EAAOsmB,QAAO,SAAStmB,EAAOgoB,GAA8X,MAAzW,QAAZA,EAAKzyJ,MAA8B,UAAhByyJ,EAAKxzG,UAAoBwzG,EAAK/3J,MAAmB,UAAb+3J,EAAKnqJ,QAAiB41J,GAAQ,GAAQA,GAAwB,gBAAZzL,EAAKzyJ,MAAuByyJ,EAAK77J,SAAQqtD,EAAM,GAAG37C,MAAM,8BAA6B27C,EAAM5lD,KAAKo0J,IAAWhoB,EAAOpsI,KAAKo0J,GAAqB,QAAZA,EAAKzyJ,MAA8B,QAAhByyJ,EAAKxzG,UAAkBwzG,EAAK/3J,MAAmB,WAAb+3J,EAAKnqJ,QAAkB3L,MAAMwE,UAAU9C,KAAKuoC,MAAM6jG,EAAOxmF,GAAOi6G,GAAQ,EAAMj6G,EAAM,IAAUwmF,CAAM,GAAE,IAA6C,OAAzC9tI,MAAMwE,UAAU9C,KAAKuoC,MAAMzrC,EAAO8oD,GAAc9oD,CAAM,GAAGvE,EAAOC,QAAQ,WAAW,OAAOm+J,EAAQiJ,EAAc,CAAC,EAAE,CAAC,oBAAoB,IAAI,GAAG,CAAC,SAASp/E,EAAQjoF,EAAOC,GAAS,aAAa,IAAI63J,EAAS7vE,EAAQ,eAAmBY,EAAO,CAAC07E,UAAU,SAAmB1wB,EAAOyqB,GAAS,SAASgG,EAAUmC,EAAU5yB,GAAQ,OAAOyqB,EAAQn/J,KAAI,SAASa,GAAQ,OAAOA,EAAOskK,UAAUmC,EAAU5yB,EAAO,GAAE,CAA6J,OAA5J,SAAS0wB,EAAU1wB,GAAQ,OAAOyqB,EAAQnE,QAAO,SAAStmB,EAAO7zI,GAAQ,OAAOA,EAAOukK,UAAU1wB,EAAO,CAAC0wB,UAAUA,EAAUD,UAAUA,GAAW,GAAEzwB,EAAO,CAAQ0wB,CAAU1wB,EAAO,EAAE5oI,MAAM,SAAes8J,EAAMjJ,GAAyQ,IAAIkJ,GAAc,EAAUjB,OAAmB,EAAWkB,EAAU,GAAG,OAAOF,EAAMpN,QAAO,SAAStmB,EAAO6zB,GAAO,MAAgB,cAAbA,EAAMt+J,MAAoBo+J,EAA+B,UAAjBE,EAAMr/G,SAAuC,QAAjBq/G,EAAMr/G,UAA/b,SAAqBk+G,EAAmB1yB,GAAgC,IAAxB,IAAI8zB,OAAa,EAAephK,EAAE,EAAEgB,EAAE+2J,EAAQr8J,OAAOsE,EAAEgB,EAAEhB,IAA2E,GAA/CohK,EAAXrJ,EAAQ/3J,GAAwB0E,MAAMs7J,GAA+D,OAA1B1yB,EAAOpsI,KAAKkgK,GAAqBA,EAAc,OAAO,IAAI,CAAiRC,CAA/DrB,EAAmBzO,EAASqF,WAAWoJ,GAAuD1yB,IAASA,EAAOpsI,KAAK,CAAC2B,KAAK,cAAcsI,MAAM60J,IAAqBxgK,MAAMwE,UAAU9C,KAAKuoC,MAAM6jG,EAAO4zB,GAAWA,EAAU,GAAU5zB,IAAO0yB,EAAmB,GAAU1yB,IAAU2zB,GAA+B,YAAbE,EAAMt+J,MAAmC,cAAjBs+J,EAAMr/G,SAAwBk+G,GAAoBmB,EAAMh2J,MAAW+1J,EAAUhgK,KAAKigK,GAAc7zB,IAAOA,EAAOpsI,KAAKigK,GAAc7zB,EAAM,GAAE,GAAG,GAAG7zI,EAAOC,QAAQ4oF,CAAM,EAAE,CAAC,cAAc,IAAI,GAAG,CAAC,SAASZ,EAAQjoF,EAAOC,GAAS,aAAa,IAAI4nK,EAAa5/E,EAAQ,mBAAuB6vE,EAAS7vE,EAAQ,eAAu1BjoF,EAAOC,QAAjmB,SAASi8E,EAAOtzE,GAA2J,OAAlJA,EAAQszE,OAAOA,EAAOtzE,EAAQ01J,QAAQ11J,EAAQ01J,QAAY11J,EAAQ+9J,eAAc/9J,EAAQ+9J,aAAakB,EAAaC,uBAAuBl/J,IAAgBA,EAAQy1J,SAASl/J,KAAI,SAAS08J,GAAM,IAAIkM,EAAxc,SAAsBlM,EAAKjzJ,GAAmC,IAA1B,IAAIm/J,OAAe,EAAexhK,EAAE,EAAEgB,EAAEqB,EAAQ01J,QAAQr8J,OAAOsE,EAAEgB,EAAEhB,IAAgF,GAA5CwhK,EAAnBn/J,EAAQ01J,QAAQ/3J,GAA0B21E,OAAO2/E,EAAKjzJ,GAA4B,OAAOm/J,EAAgB,OAAO,CAAK,CAA0OC,CAAanM,EAAKjzJ,GAAS,GAAGm/J,EAAgB,OAAOA,EAAer2J,MAAM,GAAe,gBAAZmqJ,EAAKzyJ,KAAqB,CAAC,IAAIsI,EAAM9I,EAAQ+9J,aAAa5qH,SAAS8/G,EAAKnqJ,OAAsD,OAArC,MAAPA,IAAaA,EAAM9I,EAAQgzJ,WAAWC,IAAa/D,EAASsF,WAAW1rJ,EAAM,CAAC,GAAe,YAAZmqJ,EAAKzyJ,MAA8B,QAAZyyJ,EAAKzyJ,KAAc,OAAOyyJ,EAAKnqJ,MAAM,MAAM,IAAI/R,MAAM,2BAA2Bk8J,EAAKzyJ,KAAK,IAAI,IAAGK,KAAK,GAAG,CAAsB,EAAE,CAAC,cAAc,EAAE,kBAAkB,KAAK,GAAG,CAAC,SAASw+E,EAAQjoF,EAAOC,GAAS,aAAa,IAAIi4J,EAAa,WAAW,SAASC,EAAiB5+F,EAAOm2C,GAAO,IAAI,IAAInpG,EAAE,EAAEA,EAAEmpG,EAAMztG,OAAOsE,IAAI,CAAC,IAAI6xJ,EAAW1oD,EAAMnpG,GAAG6xJ,EAAWC,WAAWD,EAAWC,aAAY,EAAMD,EAAWE,cAAa,EAAQ,UAAUF,IAAWA,EAAWG,UAAS,GAAKz4J,OAAO04J,eAAej/F,EAAO6+F,EAAWt1J,IAAIs1J,EAAW,CAAC,CAAC,OAAO,SAASK,EAAYC,EAAWC,GAAuI,OAAvHD,GAAWP,EAAiBM,EAAYluJ,UAAUmuJ,GAAeC,GAAYR,EAAiBM,EAAYE,GAAoBF,CAAW,CAAC,CAAte,GAA0nB,IAAIkD,EAAO1zE,EAAQ,YAAgB4/E,EAAa,WAAW,SAASA,EAAaj/J,IAAjO,SAAyBwxD,EAASq+F,GAAa,KAAKr+F,aAAoBq+F,GAAc,MAAM,IAAIW,UAAU,oCAAqC,EAA2FC,CAAgBh5J,KAAKwnK,GAAcxnK,KAAK4nK,UAAUr/J,EAAQq/J,UAAU5nK,KAAKu0B,UAAUhsB,EAAQgsB,UAAUv0B,KAAKwoF,OAAOjgF,EAAQigF,MAAM,CAAmmE,OAAlmEqvE,EAAa2P,EAAa,CAAC,CAAC/kK,IAAI,WAAW4O,MAAM,SAAkBi7H,EAAIroI,EAASkiK,GAAmC,OAAzBA,EAASA,IAAU,EAAanmK,KAAK6nK,cAAc7nK,KAAK07C,SAAS4wF,GAAKroI,EAASkiK,EAAS,GAAG,CAAC1jK,IAAI,oBAAoB4O,MAAM,SAA2B80J,EAAS2B,EAAQz2J,GAAU80J,GAAU2B,EAAQz2J,EAAO,GAAG,CAAC5O,IAAI,eAAe4O,MAAM,SAAsBA,EAAMtI,GAAM,OAAc,MAAPsI,IAAcA,GAAc,mBAAPtI,GAAwC,IAAfsI,EAAMzP,MAAU,GAAG,CAACa,IAAI,gBAAgB4O,MAAM,SAAuBA,EAAMy2J,EAAQ3B,GAAU,IAAIp9J,EAAKtJ,OAAOyK,UAAU3C,SAAS4C,KAAKkH,GAAW02J,EAAa/nK,KAAKu0B,UAAUv0B,KAAKgoK,KAAK,GAAGhoK,KAAKioK,aAAa52J,EAAMtI,GAAO,OAAO/I,KAAKkoK,kBAAkB/B,EAAS2B,EAAQC,GAAc,GAAU,mBAAPh/J,EAAqI,MAAU,oBAAPA,EAAiC/I,KAAKkoK,mBAAmB/B,EAAS2B,EAAQz2J,IAAkB,IAARA,EAAqBrR,KAAKkoK,mBAAmB/B,EAAS2B,EAAQC,QAAjE,EAAhM,IAAI,IAAQx7B,EAAJrmI,EAAE,EAAQA,EAAEmL,EAAMzP,OAAOsE,IAAKqmI,EAAMl7H,EAAMnL,GAAGlG,KAAKkoK,mBAAmB/B,EAAS2B,EAAQv7B,EAAiL,GAAG,CAAC9pI,IAAI,WAAW4O,MAAM,SAAkBi7H,EAAI07B,GAAKhoK,KAAKgoK,IAAS,MAALA,EAAUhoK,KAAKu0B,UAAU3yB,OAAO,EAAEomK,EAAI,IAAI7mK,OAAI,EAAWqnF,OAAO,EAAWtkF,OAAO,EAAWqoI,EAAMvsI,KAAKu0B,UAAUv0B,KAAKgoK,KAAK,IAAIx/E,EAAOxoF,KAAKwoF,OAAO8jD,EAAI,CAAC,MAAMhrI,GAA8N,MAAvNH,EAAI,IAAIm6J,EAAO0E,mBAAmB,oCAAuC58H,WAAW,CAACnkC,GAAG,iCAAiCqtI,IAAIA,EAAI4vB,YAAY,gCAAgC5vB,EAAI,qBAAqB67B,UAAU7mK,GAAaH,CAAG,CAAC,IAAI+C,EAAOskF,EAAO5/E,IAAI2jI,EAAM,CAACy7B,IAAIhoK,KAAKgoK,IAAIzzI,UAAUv0B,KAAKu0B,WAAW,CAAC,MAAMjzB,GAAsO,MAA/NH,EAAI,IAAIm6J,EAAO0E,mBAAmB,kCAAqC58H,WAAW,CAACnkC,GAAG,+BAA+Bi9J,YAAY,gCAAgC5vB,EAAI,qBAAqBC,MAAMA,EAAMD,IAAIA,EAAI67B,UAAU7mK,GAAaH,CAAG,CAAC,OAAW,MAAR+C,GAAclE,KAAKgoK,IAAI,EAAUhoK,KAAK07C,SAAS4wF,EAAItsI,KAAKgoK,IAAI,GAAU9jK,CAAM,GAAG,CAACzB,IAAI,wBAAwB4O,MAAM,SAA+Bk7H,EAAMD,GAAK,IAAI/jI,EAAQ,CAACq/J,UAAU5nK,KAAK4nK,UAAU9hK,MAAM,GAAGyuB,UAAUv0B,KAAKu0B,UAAUzuB,MAAM,IAA2H,OAAvHyC,EAAQigF,OAAOxoF,KAAKwoF,OAAOjgF,EAAQgsB,UAAUv0B,KAAKu0B,UAAU5a,OAAO4yH,GAAOhkI,EAAQq/J,UAAU5nK,KAAK4nK,UAAUjuJ,OAAO2yH,GAAY,IAAIk7B,EAAaj/J,EAAQ,KAAYi/J,CAAY,CAA/xE,GAAmyEA,EAAaC,uBAAuB,SAASvC,GAAM,IAAI18E,EAAO08E,EAAK18E,OAAOktD,EAAKwvB,EAAKxvB,KAASntI,EAAQ,CAACigF,OAAOA,EAAOktD,KAAKA,EAAMntI,UAAkB,IAA4B,OAAzBA,EAAQgsB,UAAU,CAACmhH,GAAa,IAAI8xB,EAAaj/J,EAAQ,EAAE5I,EAAOC,QAAQ4nK,CAAY,EAAE,CAAC,WAAW,IAAI,GAAG,CAAC,SAAS5/E,EAAQjoF,EAAOC,GAAS,aAAa,IAAI63J,EAAS7vE,EAAQ,eAAmB0zE,EAAO1zE,EAAQ,YAA4V,SAASwgF,EAAiBlL,EAAM5wB,GAAK,GAAkB,IAAf4wB,EAAMt7J,OAAY,OAAO,EAAM,IAAsCymK,EAA1BnL,EAAMA,EAAMt7J,OAAO,GAA4B0qI,IAAIpjF,OAAO,GAAOo/G,EAAgBh8B,EAAIpjF,OAAO,EAAEojF,EAAI1qI,OAAO,GAAG,OAA+C,IAAxCymK,EAAa7gK,QAAQ8gK,EAAoB,CAAC,SAASC,EAAOrL,EAAM5wB,GAA2B,OAAtB4wB,EAAM91J,KAAK,CAACklI,IAAIA,IAAa4wB,CAAK,CAA0nB,SAASsL,EAAUhN,EAAKkL,EAAWn+J,GAAS,IAAIi9J,EAAShK,EAAKgK,UAAUj9J,EAAQi9J,SAAa74I,EAAM+5I,EAAWl/J,QAAQg0J,GAAM,IAAIgK,EAAU,OAAOkB,EAAW,IAAI7qD,OAAM,EAAOkM,OAAK,EAAO,IAAIlM,EAAM47C,EAASjtG,SAASk8G,EAAWlB,EAAS74I,GAAOo7F,EAAK0vC,EAASltG,QAAQm8G,EAAWlB,EAAS74I,EAAM,CAAC,MAAMw7I,GAA0K,MAA5JA,aAAqB7M,EAAOgC,iBAAxkD,SAAmC/0J,GAAS,IAAIpH,EAAI,IAAIm6J,EAAOgC,gBAAgB,4BAAgChxB,EAAI/jI,EAAQizJ,KAAKnqJ,MAAsM,MAAhMlQ,EAAIiiC,WAAW,CAACnkC,GAAG,2BAA2Bi9J,YAAY,YAAY5vB,EAAI,IAAI67B,UAAU5/J,EAAQ4/J,UAAU9G,KAAK/0B,EAAIo6B,WAAWn+J,EAAQm+J,WAAWlB,SAASj9J,EAAQi9J,SAAS74I,MAAMpkB,EAAQokB,OAAaxrB,CAAG,CAA0wCsnK,CAA0B,CAACjN,KAAKA,EAAK2M,UAAUA,EAAUzB,WAAWA,EAAWlB,SAASA,EAAS74I,MAAMA,IAAcw7I,CAAS,CAAC,IAAIO,EAAUhC,EAAW5gK,MAAMiiH,EAAKp7F,GAAWg8I,EAAWjC,EAAW5gK,MAAM6mB,EAAM,EAAEkvF,EAAM,GAAO+sD,EAAMrgK,EAAQk+J,SAAS,CAAC95I,MAAMA,EAAM6uI,KAAKA,EAAKkN,UAAUA,EAAUC,WAAWA,EAAW5gD,KAAKA,EAAKlM,MAAMA,EAAM6qD,WAAWA,IAAmF,OAAlEkC,EAAMhnK,SAAQgnK,EAAMwU,SAAS,CAAC1U,EAAUC,GAAYC,EAAM,CAACA,IAAcnR,EAASuF,aAAa,CAAC0J,EAAW5gK,MAAM,EAAEiiH,GAAM6gD,EAAMlC,EAAW5gK,MAAM+1G,EAAM,IAAI,CAA4Tl8G,EAAOC,QAAQ,CAACknK,YAA3U,SAAqBJ,EAAWn+J,GAAyQ,OAA3Om+J,EAAW5M,QAAO,SAAS1jJ,EAASolJ,GAA0F,MAArE,gBAAZA,EAAKzyJ,MAAsByyJ,EAAK77J,SAAS4I,EAAQ09J,YAAY7vJ,EAAShP,KAAKo0J,GAAaplJ,CAAQ,GAAE,IAAqBpQ,SAAQ,SAASw1J,GAAMkL,EAAW8B,EAAUhN,EAAKkL,EAAWn+J,EAAQ,IAAUm+J,CAAU,EAAyCrC,mBAAl9C,SAA4Br4J,GAAiD,IAA1C,IAAI68J,EAAvZ,SAA4B78J,GAA4H,IAArH,IAAiIsgI,EAA7HoJ,EAAK1pI,EAAMrJ,QAAO,SAAS64J,GAAM,MAAmB,QAAZA,EAAKzyJ,IAAY,IAAGjK,KAAI,SAAS08J,GAAM,OAAOA,EAAKnqJ,KAAK,IAAOnN,EAAO,GAAWgC,EAAE,EAAMA,EAAEwvI,EAAK9zI,OAAOsE,IAA6B,OAAxBomI,EAAIoJ,EAAKxvI,IAAU,GAAakiK,EAAiBlkK,EAAOooI,GAAMpoI,EAAOixC,MAAWjxC,EAAOqkK,EAAOrkK,EAAOooI,GAAkC,MAApBA,EAAIA,EAAI1qI,OAAO,KAAUsC,EAAOqkK,EAAOrkK,EAAOooI,IAAM,OAAOpoI,CAAM,CAAoD4kK,CAAmB98J,GAAe9F,EAAE,EAAEA,EAAE2iK,EAAYjnK,OAAOsE,IAAI,CAAC,IAAIm3K,EAAWxU,EAAY3iK,GAAG,GAAqC,IAAlCm3K,EAAW/wC,IAAI9kI,QAAQ,SAAc,MAAM,OAAO,GAAqC,IAAlC61K,EAAW/wC,IAAI9kI,QAAQ,SAAc,MAAM,MAAO,CAAC,OAAO,CAAK,EAAgvC,EAAE,CAAC,cAAc,EAAE,WAAW,IAAI,GAAG,CAAC,SAASogF,EAAQjoF,EAAOC,GAAS,aAAa,IAAI63J,EAAS7vE,EAAQ,eAAo7C,IAAImhF,EAA75CnhF,EAAQ,YAA85CwzE,EAAxe,SAAoB/4H,EAAQ2mI,GAAc,IAAIr4J,EAAI,CAAC,EAAEA,EAAI0xB,QAAQA,EAAQ1xB,EAAIq4J,aAAaA,EAAar4J,EAAIs4J,mBAAmBt4J,EAAIq4J,aAAa5/J,KAAK,KAAK,IAAI8iD,EAAO,IAAIjxC,OAAO,QAAQtK,EAAIs4J,mBAAmB,wBAAwBt4J,EAAIs4J,mBAAmB,KAAK,KAAyL,OAApLt4J,EAAImyJ,QAAQrL,EAAS8F,aAAarxG,EAAOv7C,EAAI0xB,SAAS1xB,EAAIu4J,0BAA0Bv4J,EAAImyJ,QAAQhkK,KAAI,WAAW,OAAO,CAAC,IAAG6R,EAAIw4J,gBAAgBx4J,EAAImyJ,QAAQhkK,KAAI,WAAW,OAAO,CAAC,IAAj2C,SAA6B6R,GAAK,SAASy4J,IAAkB,IAAIC,EAAG,CAACnM,MAAMx3J,MAAMwE,UAAUpE,MAAMqE,KAAK1E,YAAY4jK,EAAGnM,MAAM/1J,QAAQ,IAAImG,EAAM+7J,EAAGnM,MAAM,GAAGmM,EAAGnM,MAAM,GAAGmM,EAAGnM,MAAM3rI,QAAQjkB,GAAO+7J,EAAGnM,MAAM/nH,MAAM,IAAIgmH,EAAOkO,EAAGnM,MAAM/nH,MAA4F,OAAtFk0H,EAAGlO,OAAOA,EAAOkO,EAAGzpI,OAAM,EAAKjvB,EAAImyJ,QAAQvxI,QAAQ83I,GAAI14J,EAAIw4J,gBAAgB53I,QAAQ,GAAU5gB,EAAIu4J,0BAA0B33I,QAAQ,EAAE,EAAgC,IAA5B5gB,EAAI0xB,QAAQ76B,QAAQ,OAAuC,IAA5BmJ,EAAI0xB,QAAQ76B,QAAQ,MAAWmJ,EAAI0xB,QAAQz8B,QAAQ,eAAewjK,GAAiB,IAAI1nK,EAAE,IAAIuZ,OAAO,kBAAkBtK,EAAIs4J,mBAAmB,MAAmY,OAA7Xt4J,EAAI0xB,QAAQz8B,QAAQlE,EAAE0nK,GAAmQ1nK,EAAE,IAAIuZ,OAAO,QAAQtK,EAAIs4J,mBAAmB,oBAAoBt4J,EAAI0xB,QAAQz8B,QAAQlE,GAAtU,WAAwB,IAAI2nK,EAAG,CAACnM,MAAMx3J,MAAMwE,UAAUpE,MAAMqE,KAAK1E,YAAY4jK,EAAGnM,MAAM/nH,MAAM,IAAIgmH,EAAOkO,EAAGnM,MAAM/nH,MAAqF,OAA/Ek0H,EAAGlO,OAAOA,EAAOkO,EAAGC,MAAK,EAAK34J,EAAImyJ,QAAQ17J,KAAKiiK,GAAI14J,EAAIw4J,gBAAgB/hK,KAAK,GAAUuJ,EAAIu4J,0BAA0B9hK,KAAK,EAAE,IAA4GuJ,CAAG,CAAmc44J,CAAoB54J,EAAI,IAAkChR,EAAOC,QAAQ,SAASyiC,EAAQ2mI,GAAc,OAAOvR,EAAS/8I,UAAUquJ,EAAS1mI,EAAQ2mI,GAAc,CAAC,EAAE,CAAC,cAAc,EAAE,YAAY,IAAI,GAAG,CAAC,SAASphF,EAAQjoF,EAAOC,GAAS,aAAa,IAAIi4J,EAAa,WAAW,SAASC,EAAiB5+F,EAAOm2C,GAAO,IAAI,IAAInpG,EAAE,EAAEA,EAAEmpG,EAAMztG,OAAOsE,IAAI,CAAC,IAAI6xJ,EAAW1oD,EAAMnpG,GAAG6xJ,EAAWC,WAAWD,EAAWC,aAAY,EAAMD,EAAWE,cAAa,EAAQ,UAAUF,IAAWA,EAAWG,UAAS,GAAKz4J,OAAO04J,eAAej/F,EAAO6+F,EAAWt1J,IAAIs1J,EAAW,CAAC,CAAC,OAAO,SAASK,EAAYC,EAAWC,GAAuI,OAAvHD,GAAWP,EAAiBM,EAAYluJ,UAAUmuJ,GAAeC,GAAYR,EAAiBM,EAAYE,GAAoBF,CAAW,CAAC,CAAte,GAA0nB,IAAIX,EAAS7vE,EAAQ,eAAmB4/E,EAAa5/E,EAAQ,mBAAuB4hF,EAAW5hF,EAAQ,iBAAqB0zE,EAAO1zE,EAAQ,YAAgB6hF,EAAM7hF,EAAQ,WAAe8hF,EAAO9hF,EAAQ,eAAmB+hF,EAAQ/hF,EAAQ,eAAmPjoF,EAAOC,QAAQ,WAAW,SAAS8/J,EAAar9H,EAAQ95B,IAArqB,SAAyBwxD,EAASq+F,GAAa,KAAKr+F,aAAoBq+F,GAAc,MAAM,IAAIW,UAAU,oCAAqC,EAA+hBC,CAAgBh5J,KAAK0/J,GAAc1/J,KAAK4pK,SAASrhK,GAASvI,KAAK6pK,WAAW,CAACC,QAAQ,CAACvK,SAASv/J,KAAKu/J,YAAYv/J,KAAK4yB,KAAKyP,EAAQ,CAA2tD,OAA1tDw1H,EAAa6H,EAAa,CAAC,CAACj9J,IAAI,OAAO4O,MAAM,SAAcgxB,GAAS,GAAoB,iBAAVA,EAAmB,CAAC,IAAIlhC,EAAI,IAAIm6J,EAAO2E,gBAAgB,4BAAoF,MAAxD9+J,EAAIiiC,WAAWnkC,GAAG,sCAA4CkC,CAAG,CAACnB,KAAKqiC,QAAQA,CAAO,GAAG,CAAC5/B,IAAI,UAAU4O,MAAM,SAAiBqkI,GAA8H,OAAxH11I,KAAK01I,KAAW,MAANA,EAAWA,EAAK,CAAC,EAAE11I,KAAKsmK,aAAakB,EAAaC,uBAAuB,CAAC/xB,KAAK11I,KAAK01I,KAAKltD,OAAOxoF,KAAKwoF,SAAgBxoF,IAAI,GAAG,CAACyC,IAAI,WAAW4O,MAAM,SAAkB9I,GAASvI,KAAKu/J,SAASh3J,EAAQg3J,SAASv/J,KAAKi+J,QAAQ11J,EAAQ01J,QAAQj+J,KAAKk+J,eAAe31J,EAAQ21J,eAAez+J,OAAOD,KAAKi4J,EAASj8H,UAAU18B,KAAI,SAAS2D,GAAKzC,KAAKyC,GAAmB,MAAd8F,EAAQ9F,GAAW8F,EAAQ9F,GAAKg1J,EAASj8H,SAAS/4B,EAAI,GAAEzC,KAAK,GAAG,CAACyC,IAAI,cAAc4O,MAAM,WAAuB,OAA/nCgxB,EAAmpCriC,KAAKqiC,QAAhpC2mI,EAAwpChpK,KAAKk+J,eAAeqC,iBAA7mCr8J,EAArCslK,EAAWnnI,EAAQ2mI,GAAiClG,QAAQhkK,KAAI,SAASwO,GAAO,OAAOA,EAAM4vJ,MAAM,EAAE,IAAUzF,EAASqF,WAAWrF,EAASwE,cAAc/3J,EAAOkF,KAAK,MAA9N,IAAsBi5B,EAAQ2mI,EAA+D9kK,CAA8nC,GAAG,CAACzB,IAAI,aAAa4O,MAAM,SAAoB3F,GAAK1L,KAAKi+J,QAAQj4J,SAAQ,SAASrG,GAAQA,EAAOsQ,IAAIvE,EAAI,GAAE,GAAG,CAACjJ,IAAI,QAAQ4O,MAAM,WAAyc,OAAxbrR,KAAK+pK,SAASN,EAAM7G,SAAS5iK,KAAKqiC,QAAQ,CAAC5+B,KAAKzD,KAAKk+J,eAAeqC,iBAAiBgD,MAAMvjK,KAAKk+J,eAAesC,oBAAoBxgK,KAAK6pK,WAAW,CAACC,QAAQ,CAACC,SAAS/pK,KAAK+pK,YAAY/pK,KAAKknK,MAAMuC,EAAM7+J,MAAM5K,KAAK+pK,SAAS/pK,KAAKy7J,YAAYz7J,KAAK6pK,WAAW,CAACC,QAAQ,CAAC5C,MAAMlnK,KAAKknK,SAASlnK,KAAKwzI,OAAOk2B,EAAO9+J,MAAM5K,KAAKknK,MAAMlnK,KAAKi+J,SAASj+J,KAAK6pK,WAAW,CAACC,QAAQ,CAACt2B,OAAOxzI,KAAKwzI,UAAUxzI,KAAK0mK,WAAWgD,EAAOxF,UAAUlkK,KAAKwzI,OAAOxzI,KAAKi+J,SAAgBj+J,IAAI,GAAG,CAACyC,IAAI,SAAS4O,MAAM,SAAgB+7B,GAAyR,OAArRptC,KAAKu/J,SAASnyH,EAAGptC,KAAK6pK,WAAW,CAACC,QAAQ,CAACpD,WAAW1mK,KAAK0mK,cAAc1mK,KAAKqiC,QAAQsnI,EAAQ,CAAC3L,SAASh+J,KAAK0mK,WAAWhxB,KAAK11I,KAAK01I,KAAKuoB,QAAQj+J,KAAKi+J,QAAQz1E,OAAOxoF,KAAKwoF,OAAO+yE,WAAWv7J,KAAKu7J,WAAWgE,SAASv/J,KAAKu/J,WAAWv/J,KAAK6pK,WAAW,CAACC,QAAQ,CAACznI,QAAQriC,KAAKqiC,WAAkBriC,IAAI,KAAY0/J,CAAY,CAAh6D,EAAm6D,EAAE,CAAC,cAAc,EAAE,WAAW,EAAE,UAAU,EAAE,cAAc,GAAG,cAAc,GAAG,kBAAkB,GAAG,gBAAgB,KAAK,GAAG,CAAC,SAAS93E,EAAQjoF,EAAOC,GAAS,SAAS+jF,EAAUp7E,GAASvI,KAAKuI,QAAQA,GAAS,CAACyhK,QAAQ,CAAC,EAAE,CAAmzC,SAASC,IAAajqK,KAAKkqK,OAAM,CAAK,CAAC,SAASliH,EAASgiH,EAAQlpF,GAAMA,EAAKqpF,WAAWH,EAAQG,WAAWrpF,EAAKspF,aAAaJ,EAAQI,YAAY,CAAq4E,SAASC,EAASnjK,GAAG,GAAGA,EAAG,MAAM,OAAOA,EAAEojK,UAAU,IAAI,UAAUpjK,EAAEijK,WAAW,QAAQjjK,EAAEkjK,aAAa,GAAI,CAAC,SAASG,EAAUC,EAAMv5I,EAAMrvB,GAAQ,MAAiB,iBAAP4oK,EAAwBA,EAAMthH,OAAOj4B,EAAMrvB,GAAgB4oK,EAAM5oK,QAAQqvB,EAAMrvB,GAAQqvB,EAAc,IAAIw5I,KAAKh5F,KAAK3/D,OAAO04J,EAAMv5I,EAAMrvB,GAAQ,GAAU4oK,CAAM,CAAiP,SAASE,EAAcC,EAAO7pF,GAAU6pF,EAAOC,eAAkDD,EAAOC,eAAevuJ,YAAYykE,GAApE6pF,EAAOn/B,IAAInvH,YAAYykE,EAAmD,CAA3/I6C,EAAUz5E,UAAU25E,gBAAgB,SAASgnF,EAAO19B,GAAU,IAAI5kI,EAAQvI,KAAKuI,QAAYuiK,EAAI,IAAIC,EAAcC,EAAWziK,EAAQyiK,YAAY,IAAIf,EAAe5N,EAAa9zJ,EAAQ8zJ,aAAiB2N,EAAQzhK,EAAQyhK,QAAYiB,EAAa1iK,EAAQ2iK,OAAO,CAAC,EAAMC,EAAU,CAACC,GAAG,IAAIC,GAAG,IAAIC,IAAI,IAAIC,KAAK,IAAIC,KAAK,KAAgd,OAAxcxB,GAASgB,EAAWS,mBAAmBzB,GAASc,EAAIzO,aAA2a,SAA2BqP,EAAUV,EAAWhB,GAAS,IAAI0B,EAAU,CAAC,GAAGV,aAAsBf,EAAY,OAAOe,EAAWU,EAAUV,CAAU,CAAC,IAAI3O,EAAa,CAAC,EAAMsP,EAAWD,aAAqBE,SAA6B,SAASC,EAAMppK,GAAK,IAAIC,EAAGgpK,EAAUjpK,IAASC,GAAIipK,IAAYjpK,EAAqB,GAAlBgpK,EAAU9pK,OAAU,SAASyU,GAAKq1J,EAAUjpK,EAAI4T,EAAI,EAAEq1J,GAAUrP,EAAa55J,GAAKC,GAAI,SAAS2T,GAAK3T,EAAG,WAAWD,EAAI,MAAM4T,EAAIg0J,EAASL,GAAS,GAAG,WAAW,CAAC,CAAqD,OAA3SA,EAAQA,GAAS,CAAC,EAAqO6B,EAAM,WAAWA,EAAM,SAASA,EAAM,cAAqBxP,CAAY,CAAj7ByP,CAAkBzP,EAAa2O,EAAWhB,GAASc,EAAIE,WAAWziK,EAAQyiK,YAAYA,EAAc,aAAa9vJ,KAAKiyH,KAAWg+B,EAAUY,KAAK,IAAIZ,EAAUh8G,KAAK,IAAI87G,EAAa,IAAI,gCAA+BA,EAAal+H,IAAIk+H,EAAal+H,KAAK,uCAA0C89H,EAAQC,EAAIlgK,MAAMigK,EAAOI,EAAaE,GAAgBL,EAAIzO,aAAa/6J,MAAM,sBAA6B0pK,EAAWx/B,GAAG,EAAuqBy+B,EAAW//J,UAAU,CAAC8hK,cAAc,WAAWhsK,KAAKwrI,KAAI,IAAKygC,GAAmBC,eAAe,KAAK,KAAK,MAASlsK,KAAKgqK,UAAShqK,KAAKwrI,IAAI2gC,YAAYnsK,KAAKgqK,QAAQM,SAAS,EAAEjtG,aAAa,SAASi9F,EAAa8R,EAAUC,EAAMn2J,GAAO,IAAIs1H,EAAIxrI,KAAKwrI,IAAQ57F,EAAG47F,EAAI8gC,gBAAgBhS,EAAa+R,GAAOD,GAAeG,EAAIr2J,EAAMtU,OAAO8oK,EAAc1qK,KAAK4vC,GAAI5vC,KAAK4qK,eAAeh7H,EAAG5vC,KAAKgqK,SAAShiH,EAAShoD,KAAKgqK,QAAQp6H,GAAI,IAAI,IAAI1pC,EAAE,EAAEA,EAAEqmK,EAAIrmK,IAAI,CAAKo0J,EAAapkJ,EAAMs2J,OAAOtmK,GAA9B,IAAqCmL,EAAM6E,EAAMwlC,SAASx1C,GAAmCuO,GAA5B43J,EAAMn2J,EAAMu2J,SAASvmK,GAAYslI,EAAIkhC,kBAAkBpS,EAAa+R,IAAOrsK,KAAKgqK,SAAShiH,EAAS9xC,EAAMy2J,WAAWzmK,GAAGuO,GAAMA,EAAKpD,MAAMoD,EAAKm4J,UAAUv7J,EAAMu+B,EAAGi9H,iBAAiBp4J,EAAK,CAAC,EAAEq4J,WAAW,SAASxS,EAAa8R,EAAUC,GAAO,IAAIU,EAAQ/sK,KAAK4qK,eAA2BmC,EAAQlhC,QAAQ7rI,KAAK4qK,eAAemC,EAAQnuE,UAAU,EAAEouE,mBAAmB,SAAS77J,EAAO87J,GAAK,EAAEC,iBAAiB,SAAS/7J,GAAQ,EAAEg8J,sBAAsB,SAASj0G,EAAO93D,GAAM,IAAIgsK,EAAIptK,KAAKwrI,IAAI6hC,4BAA4Bn0G,EAAO93D,GAAMpB,KAAKgqK,SAAShiH,EAAShoD,KAAKgqK,QAAQoD,GAAK1C,EAAc1qK,KAAKotK,EAAI,EAAEE,oBAAoB,SAASC,EAAGt8I,EAAMrvB,GAAQ,EAAE4rK,WAAW,SAAShD,EAAMv5I,EAAMrvB,GAA8C,GAAtC4oK,EAAMD,EAAU56H,MAAM3vC,KAAKyF,WAAoB,CAAC,GAAGzF,KAAKkqK,MAAO,IAAIuD,EAASztK,KAAKwrI,IAAIkiC,mBAAmBlD,QAAgBiD,EAASztK,KAAKwrI,IAAIjsC,eAAeirE,GAAUxqK,KAAK4qK,eAAgB5qK,KAAK4qK,eAAevuJ,YAAYoxJ,GAAkB,QAAQvyJ,KAAKsvJ,IAAQxqK,KAAKwrI,IAAInvH,YAAYoxJ,GAAUztK,KAAKgqK,SAAShiH,EAAShoD,KAAKgqK,QAAQyD,EAAS,CAAC,EAAEE,cAAc,SAAS/hK,GAAM,EAAEgiK,YAAY,WAAW5tK,KAAKwrI,IAAIqiC,WAAW,EAAEpC,mBAAmB,SAASzB,IAAYhqK,KAAKgqK,QAAQA,KAASA,EAAQG,WAAW,EAAE,EAAEvoC,QAAQ,SAAS4oC,EAAMv5I,EAAMrvB,GAAQ4oK,EAAMD,EAAU56H,MAAM3vC,KAAKyF,WAAW,IAAIqoK,EAAK9tK,KAAKwrI,IAAIuiC,cAAcvD,GAAOxqK,KAAKgqK,SAAShiH,EAAShoD,KAAKgqK,QAAQ8D,GAAMpD,EAAc1qK,KAAK8tK,EAAK,EAAEE,WAAW,WAAWhuK,KAAKkqK,OAAM,CAAI,EAAE+D,SAAS,WAAWjuK,KAAKkqK,OAAM,CAAK,EAAEgE,SAAS,SAAStiK,EAAKuiK,EAAS7D,GAAU,IAAI8D,EAAKpuK,KAAKwrI,IAAI6iC,eAAe,GAAGD,GAAMA,EAAKE,mBAAmB,CAAC,IAAIC,EAAGH,EAAKE,mBAAmB1iK,EAAKuiK,EAAS7D,GAAUtqK,KAAKgqK,SAAShiH,EAAShoD,KAAKgqK,QAAQuE,GAAI7D,EAAc1qK,KAAKuuK,EAAG,CAAC,EAAEC,QAAQ,SAASltK,GAAOD,QAAQqF,KAAK,qBAAqBpF,EAAM+oK,EAASrqK,KAAKgqK,SAAS,EAAE1oK,MAAM,SAASA,GAAOD,QAAQC,MAAM,mBAAmBA,EAAM+oK,EAASrqK,KAAKgqK,SAAS,EAAEyE,WAAW,SAASntK,GAA2E,MAApED,QAAQC,MAAM,wBAAwBA,EAAM+oK,EAASrqK,KAAKgqK,UAAgB1oK,CAAK,GAA8T,+JAA+JsE,QAAQ,QAAO,SAASnD,GAAKwnK,EAAW//J,UAAUzH,GAAK,WAAW,OAAO,IAAI,CAAC,IAA6I,IAAIsoK,EAAUnjF,EAAQ,SAASmjF,UAAckB,EAAkBrsK,EAAQqsK,kBAAkBrkF,EAAQ,SAASqkF,kBAAkBrsK,EAAQy7J,cAAczzE,EAAQ,SAASyzE,cAAcz7J,EAAQ+jF,UAAUA,CAAS,EAAE,CAAC,QAAQ,GAAG,QAAQ,KAAK,GAAG,CAAC,SAASiE,EAAQjoF,EAAOC,GAAS,SAASuvD,EAAKlzC,EAAIyyJ,GAAM,IAAI,IAAIj0J,KAAKwB,EAAKyyJ,EAAKj0J,GAAGwB,EAAIxB,EAAG,CAAC,SAASk0J,EAASp5J,EAAMq5J,GAAO,IAAIC,EAAGt5J,EAAMrL,UAAU,GAAGzK,OAAO04E,OAAO,CAAC,IAAI22F,EAAIrvK,OAAO04E,OAAOy2F,EAAM1kK,WAAW2kK,EAAGE,UAAUD,CAAG,CAAC,KAAKD,aAAcD,GAAO,CAAC,SAAS/uI,IAAI,CAACA,EAAE31B,UAAU0kK,EAAM1kK,UAAkBilD,EAAK0/G,EAAbhvI,EAAE,IAAIA,GAAatqB,EAAMrL,UAAU2kK,EAAGhvI,CAAC,CAAIgvI,EAAG/uK,aAAayV,IAAwB,mBAAPA,GAAmBlU,QAAQC,MAAM,gBAAgBiU,GAAOs5J,EAAG/uK,YAAYyV,EAAM,CAAC,IAAIy5J,EAAO,+BAAmCC,EAAS,CAAC,EAAMC,EAAaD,EAASC,aAAa,EAAMC,EAAeF,EAASE,eAAe,EAAMC,EAAUH,EAASG,UAAU,EAAMC,EAAmBJ,EAASI,mBAAmB,EAAMC,EAAsBL,EAASK,sBAAsB,EAAMC,EAAYN,EAASM,YAAY,EAAMC,EAA4BP,EAASO,4BAA4B,EAAMC,EAAaR,EAASQ,aAAa,EAAMC,EAAcT,EAASS,cAAc,EAAMC,EAAmBV,EAASU,mBAAmB,GAAOC,EAAuBX,EAASW,uBAAuB,GAAOC,EAAcZ,EAASY,cAAc,GAAOC,EAAc,CAAC,EAAMC,EAAiB,CAAC,EAAwMC,GAAnLF,EAAcG,gBAAgBF,EAAiB,GAAG,mBAAmB,GAA0BD,EAAcI,oBAAoBH,EAAiB,GAAG,uBAAuB,GAA6BD,EAAcE,uBAAuBD,EAAiB,GAAG,0BAA0B,IAAkbI,GAAxZL,EAAcM,oBAAoBL,EAAiB,GAAG,iBAAiB,GAA6BD,EAAcO,uBAAuBN,EAAiB,GAAG,oBAAoB,GAA2BD,EAAcQ,qBAAqBP,EAAiB,GAAG,kBAAkB,GAAmCD,EAAcS,6BAA6BR,EAAiB,GAAG,0BAA0B,GAAqBD,EAAcK,eAAeJ,EAAiB,GAAG,YAAY,IAAqGS,GAA5EV,EAAcW,mBAAmBV,EAAiB,GAAG,gBAAgB,GAA2BD,EAAcU,qBAAqBT,EAAiB,IAAI,mBAAmB,KAAye,SAASW,EAAanxK,EAAKmE,GAAS,GAAGA,aAAmBpE,MAAO,IAAIgC,EAAMoC,OAAapC,EAAMtB,KAAKV,MAAM6K,KAAKnK,KAAK+vK,EAAiBxwK,IAAOS,KAAK0D,QAAQqsK,EAAiBxwK,GAASD,MAAMqxK,mBAAkBrxK,MAAMqxK,kBAAkB3wK,KAAK0wK,GAAgF,OAAlEpvK,EAAM/B,KAAKA,EAAQmE,IAAQ1D,KAAK0D,QAAQ1D,KAAK0D,QAAQ,KAAKA,GAAepC,CAAK,CAAyE,SAASsvK,IAAW,CAA+N,SAASC,EAAa/vF,EAAKlqE,GAAS5W,KAAK8wK,MAAMhwF,EAAK9gF,KAAK+wK,SAASn6J,EAAQo6J,EAAgBhxK,KAAK,CAAC,SAASgxK,EAAgBzhI,GAAM,IAAI0hI,EAAI1hI,EAAKuhI,MAAMI,MAAM3hI,EAAKuhI,MAAMK,cAAcD,KAAK,GAAG3hI,EAAK2hI,MAAMD,EAAI,CAAC,IAAIG,EAAG7hI,EAAKwhI,SAASxhI,EAAKuhI,OAAOO,GAAQ9hI,EAAK,SAAS6hI,EAAGxvK,QAAQutD,EAAKiiH,EAAG7hI,GAAMA,EAAK2hI,KAAKD,CAAG,CAAC,CAA+G,SAASK,IAAe,CAAC,SAASC,EAAehiI,EAAKuxC,GAAwB,IAAlB,IAAI56E,EAAEqpC,EAAK3tC,OAAasE,KAAK,GAAGqpC,EAAKrpC,KAAK46E,EAAM,OAAO56E,CAAG,CAAC,SAASsrK,EAAc5hI,EAAGL,EAAKkiI,EAAQC,GAAiG,GAArFA,EAASniI,EAAKgiI,EAAehiI,EAAKmiI,IAAUD,EAAaliI,EAAKA,EAAK3tC,UAAU6vK,EAAW7hI,EAAG,CAAC6hI,EAAQE,aAAa/hI,EAAG,IAAI47F,EAAI57F,EAAGuhI,cAAiB3lC,IAAKkmC,GAASE,EAAmBpmC,EAAI57F,EAAG8hI,GAAyvI,SAAyBlmC,EAAI57F,EAAG6hI,GAASjmC,GAAKA,EAAI0lC,OAA0C,iCAA5BO,EAAQnX,eAAqD1qH,EAAGiiI,OAAOJ,EAAQtgK,OAAOsgK,EAAQrF,UAAU,IAAIqF,EAAQpgK,MAAM,CAA16IygK,CAAgBtmC,EAAI57F,EAAG6hI,GAAS,CAAC,CAAC,SAASM,EAAiBniI,EAAGL,EAAK96B,GAAM,IAAIvO,EAAEqrK,EAAehiI,EAAK96B,GAAM,KAAGvO,GAAG,GAAgM,MAAMwqK,EAAaP,EAAc,IAAI7wK,MAAMswC,EAAGi8F,QAAQ,IAAIp3H,IAA3N,IAA5B,IAAIu9J,EAAUziI,EAAK3tC,OAAO,EAAQsE,EAAE8rK,GAAWziI,EAAKrpC,GAAGqpC,IAAOrpC,GAAyB,GAAtBqpC,EAAK3tC,OAAOowK,EAAapiI,EAAG,CAAC,IAAI47F,EAAI57F,EAAGuhI,cAAiB3lC,IAAKomC,EAAmBpmC,EAAI57F,EAAGn7B,GAAMA,EAAKk9J,aAAa,KAAK,CAAwE,CAAioC,SAAS1F,EAAkBgG,GAA4B,GAAlBjyK,KAAKkyK,UAAU,CAAC,EAAKD,EAAU,IAAI,IAAIE,KAAWF,EAAUjyK,KAAKkyK,UAAUD,EAASE,EAAU,CAAsrB,SAASC,IAAO,CAA6kD,SAASC,EAAYnvI,GAAG,OAAU,KAAHA,EAAQ,OAAW,KAAHA,GAAQ,SAAW,KAAHA,GAAQ,SAAY,KAAHA,GAAQ,UAAU,KAAKA,EAAEovI,aAAa,GAAG,CAAmD,SAASC,EAAWzxF,EAAK78E,GAAU,GAAGA,EAAS68E,GAAO,OAAO,EAAK,GAAGA,EAAKA,EAAK+yC,WAAY,GAAG,GAAG0+C,EAAWzxF,EAAK78E,GAAW,OAAO,QAAY68E,EAAKA,EAAK0xF,YAAa,CAAC,SAASC,IAAW,CAA4L,SAASb,EAAmBpmC,EAAI57F,EAAG6hI,EAAQlgK,GAAQi6H,GAAKA,EAAI0lC,OAA0C,iCAA5BO,EAAQnX,qBAA4D1qH,EAAGiiI,OAAOJ,EAAQtgK,OAAOsgK,EAAQrF,UAAU,GAAI,CAAC,SAASsG,EAAelnC,EAAI57F,EAAG+iI,GAAU,GAAGnnC,GAAKA,EAAI0lC,KAAK,CAAC1lC,EAAI0lC,OAAO,IAAI0B,EAAGhjI,EAAGijI,WAAW,GAAGF,EAAUC,EAAGA,EAAGhxK,UAAU+wK,MAAa,CAAiC,IAAhC,IAAItuE,EAAMz0D,EAAGikF,WAAe3tH,EAAE,EAAQm+F,GAAOuuE,EAAG1sK,KAAKm+F,EAAMA,EAAMA,EAAMmuE,YAAYI,EAAGhxK,OAAOsE,CAAC,CAAC,CAAC,CAAC,SAAS4sK,EAAal0E,EAAWyF,GAAO,IAAI0uE,EAAS1uE,EAAM2uE,gBAAoBjsJ,EAAKs9E,EAAMmuE,YAAiN,OAAlMO,EAAUA,EAASP,YAAYzrJ,EAAU63E,EAAWi1B,WAAW9sG,EAAQA,EAAMA,EAAKisJ,gBAAgBD,EAAcn0E,EAAWq0E,UAAUF,EAASL,EAAe9zE,EAAWuyE,cAAcvyE,GAAmByF,CAAK,CAAC,SAAS6uE,EAAct0E,EAAW+zE,EAASQ,GAAW,IAAIC,EAAGT,EAAS/zE,WAA2C,GAA7Bw0E,GAAIA,EAAGv0E,YAAY8zE,GAAaA,EAASU,WAAWzD,EAAuB,CAAC,IAAI0D,EAASX,EAAS9+C,WAAW,GAAa,MAAVy/C,EAAgB,OAAOX,EAAS,IAAIY,EAAQZ,EAASM,SAAS,MAAMK,EAASC,EAAQZ,EAAS,IAAIa,EAAIL,EAAUA,EAAUH,gBAAgBp0E,EAAWq0E,UAAUK,EAASN,gBAAgBQ,EAAID,EAAQf,YAAYW,EAAaK,EAAKA,EAAIhB,YAAYc,EAAc10E,EAAWi1B,WAAWy/C,EAAuB,MAAXH,EAAiBv0E,EAAWq0E,UAAUM,EAAaJ,EAAUH,gBAAgBO,EAAQ,GAAGD,EAAS10E,WAAWA,QAAiB00E,IAAWC,IAAUD,EAASA,EAASd,cAAwK,OAA1JE,EAAe9zE,EAAWuyE,eAAevyE,EAAWA,GAAe+zE,EAASU,UAAUzD,IAAwB+C,EAAS9+C,WAAW8+C,EAASM,UAAU,MAAYN,CAAQ,CAA8tG,SAASc,IAAUzzK,KAAK6xK,OAAO,CAAC,CAAC,CAAq2E,SAAS6B,IAAO,CAA4D,SAASC,IAAgB,CAAgqB,SAASC,IAAO,CAA0Y,SAASC,IAAU,CAA+F,SAASC,IAAe,CAAqH,SAASC,IAAe,CAAgF,SAASC,IAAW,CAAmE,SAASC,IAAS,CAA6D,SAASC,IAAkB,CAAyF,SAASC,IAAmB,CAAqJ,SAASC,IAAwB,CAA2G,SAAS/Y,IAAgB,CAAqL,SAASgZ,GAAsBC,EAAOC,GAAY,IAAIC,EAAI,GAAOC,EAAuB,GAAfz0K,KAAKqzK,SAAYrzK,KAAK00K,gBAAgB10K,KAASmR,EAAOsjK,EAAQtjK,OAAW87J,EAAIwH,EAAQna,aAAa,GAAG2S,GAAa,MAAR97J,GAA8D,OAA5CA,EAAOsjK,EAAQE,aAAa1H,IAAsB,IAAI2H,EAAkB,CAAC,CAACC,UAAU5H,EAAI97J,OAAO,OAAwE,OAAhE0qJ,GAAkB77J,KAAKw0K,EAAIF,EAAOC,EAAWK,GAA0BJ,EAAIprK,KAAK,GAAG,CAAC,SAAS0rK,GAAoBh0F,EAAKi0F,EAAOH,GAAmB,IAAIzjK,EAAO2vE,EAAK3vE,QAAQ,GAAO87J,EAAInsF,EAAKw5E,aAAa,IAAInpJ,IAAS87J,EAAK,OAAO,EAAM,GAAY,QAAT97J,GAAsB,yCAAN87J,GAAmD,iCAALA,EAAsC,OAAO,EAAqC,IAA/B,IAAI/mK,EAAE0uK,EAAkBhzK,OAAasE,KAAI,CAAC,IAAI8uK,EAAGJ,EAAkB1uK,GAAG,GAAG8uK,EAAG7jK,QAAQA,EAAQ,OAAO6jK,EAAGH,WAAW5H,CAAI,CAAC,OAAO,CAAI,CAAC,SAASpR,GAAkB/6E,EAAK0zF,EAAIO,EAAOR,EAAWK,GAAmB,GAAGL,EAAW,CAAuB,KAAtBzzF,EAAKyzF,EAAWzzF,IAAqE,OAAtD,GAAgB,iBAANA,EAA+B,YAAf0zF,EAAIptK,KAAK05E,EAA0B,CAAC,OAAOA,EAAKuyF,UAAU,KAAKnE,EAAiB0F,IAAkBA,EAAkB,IAA8BA,EAAkBhzK,OAA7C,IAAwDsU,EAAM4qE,EAAKzjE,WAAekvJ,EAAIr2J,EAAMtU,OAAWyiG,EAAMvjB,EAAK+yC,WAAeC,EAAShzC,EAAK+qD,QAAQkpC,EAAO/F,IAASluF,EAAKw5E,cAAcya,EAAOP,EAAIptK,KAAK,IAAI0sH,GAAU,IAAI,IAAI5tH,EAAE,EAAEA,EAAEqmK,EAAIrmK,IAA4C,UAAnCuO,EAAKyB,EAAMkT,KAAKljB,IAAWiL,OAAiByjK,EAAkBxtK,KAAK,CAAC+J,OAAOsD,EAAK23J,UAAUyI,UAAUpgK,EAAKpD,QAA+B,SAAfoD,EAAKq/G,UAAmB8gD,EAAkBxtK,KAAK,CAAC+J,OAAO,GAAG0jK,UAAUpgK,EAAKpD,QAAS,IAAQnL,EAAE,EAAEA,EAAEqmK,EAAIrmK,IAAI,CAAC,IAAIuO,EAAmB,GAAGqgK,GAAtBrgK,EAAKyB,EAAMkT,KAAKljB,GAA+B6uK,EAAOH,GAAmB,CAAC,IAAIzjK,EAAOsD,EAAKtD,QAAQ,GAAO87J,EAAIx4J,EAAK6lJ,aAAiB0a,EAAG7jK,EAAO,UAAUA,EAAO,SAASqjK,EAAIptK,KAAK4tK,EAAG,KAAK/H,EAAI,KAAK2H,EAAkBxtK,KAAK,CAAC+J,OAAOA,EAAO0jK,UAAU5H,GAAK,CAACpR,GAAkBpnJ,EAAK+/J,EAAIO,EAAOR,EAAWK,EAAkB,CAAqO,GAAjOE,GAAoBh0F,EAAKi0F,EAAOH,KAAwBzjK,EAAO2vE,EAAK3vE,QAAQ,GAAO87J,EAAInsF,EAAKw5E,aAAiB0a,EAAG7jK,EAAO,UAAUA,EAAO,SAASqjK,EAAIptK,KAAK4tK,EAAG,KAAK/H,EAAI,KAAK2H,EAAkBxtK,KAAK,CAAC+J,OAAOA,EAAO0jK,UAAU5H,KAAS5oE,GAAO0wE,IAAS,mCAAmC75J,KAAK44G,GAAU,CAAe,GAAd0gD,EAAIptK,KAAK,KAAQ2tK,GAAQ,YAAY75J,KAAK44G,GAAW,KAAMzvB,GAAUA,EAAMjjG,KAAMozK,EAAIptK,KAAKi9F,EAAMjjG,MAAWy6J,GAAkBx3D,EAAMmwE,EAAIO,EAAOR,EAAWK,GAAmBvwE,EAAMA,EAAMmuE,iBAAkB,KAAMnuE,GAAOw3D,GAAkBx3D,EAAMmwE,EAAIO,EAAOR,EAAWK,GAAmBvwE,EAAMA,EAAMmuE,YAAagC,EAAIptK,KAAK,KAAK0sH,EAAS,IAAI,MAAM0gD,EAAIptK,KAAK,MAAM,OAAO,KAAKsoK,EAAc,KAAKE,EAAiD,IAAtBvrE,EAAMvjB,EAAK+yC,WAAiBxvB,GAAOw3D,GAAkBx3D,EAAMmwE,EAAIO,EAAOR,EAAWK,GAAmBvwE,EAAMA,EAAMmuE,YAAY,OAAO,KAAKrD,EAAe,OAAOqF,EAAIptK,KAAK,IAAI05E,EAAKl1E,KAAK,KAAKk1E,EAAKzvE,MAAMzL,QAAQ,SAASysK,GAAa,KAAK,KAAKjD,EAAU,OAAOoF,EAAIptK,KAAK05E,EAAK1/E,KAAKwE,QAAQ,QAAQysK,IAAc,KAAKhD,EAAmB,OAAOmF,EAAIptK,KAAK,YAAY05E,EAAK1/E,KAAK,OAAO,KAAKquK,EAAa,OAAO+E,EAAIptK,KAAK,UAAU05E,EAAK1/E,KAAK,UAAU,KAAKuuK,EAAmB,IAAIsF,EAAMn0F,EAAKqtF,SAAa+G,EAAMp0F,EAAKwpF,SAA0C,GAAjCkK,EAAIptK,KAAK,aAAa05E,EAAKl1E,MAASqpK,EAAOT,EAAIptK,KAAK,YAAY6tK,GAAUC,GAAc,KAAPA,GAAYV,EAAIptK,KAAK,MAAM8tK,GAAOV,EAAIptK,KAAK,WAAW,GAAG8tK,GAAc,KAAPA,EAAYV,EAAIptK,KAAK,YAAY8tK,EAAM,UAAU,CAAC,IAAI/uK,EAAI26E,EAAKq0F,eAAkBhvK,GAAKquK,EAAIptK,KAAK,KAAKjB,EAAI,KAAKquK,EAAIptK,KAAK,IAAI,CAAC,OAAO,KAAKooK,EAA4B,OAAOgF,EAAIptK,KAAK,KAAK05E,EAAK5nB,OAAO,IAAI4nB,EAAK1/E,KAAK,MAAM,KAAKkuK,EAAsB,OAAOkF,EAAIptK,KAAK,IAAI05E,EAAKgzC,SAAS,KAAK,QAAQ0gD,EAAIptK,KAAK,KAAK05E,EAAKgzC,UAAU,CAAC,SAASshD,GAAW5pC,EAAI1qD,EAAK5+D,GAAM,IAAImzJ,EAAM,OAAOv0F,EAAKuyF,UAAU,KAAKnE,GAAamG,EAAMv0F,EAAKw0F,WAAU,IAAanE,cAAc3lC,EAAI,KAAKokC,EAAuB,MAAM,KAAKT,EAAejtJ,GAAK,EAAgG,GAAjFmzJ,IAAOA,EAAMv0F,EAAKw0F,WAAU,IAAOD,EAAMlE,cAAc3lC,EAAI6pC,EAAMz2E,WAAW,KAAQ18E,EAAgC,IAA1B,IAAImiF,EAAMvjB,EAAK+yC,WAAiBxvB,GAAOgxE,EAAMh5J,YAAY+4J,GAAW5pC,EAAInnC,EAAMniF,IAAOmiF,EAAMA,EAAMmuE,YAAa,OAAO6C,CAAK,CAAC,SAASC,GAAU9pC,EAAI1qD,EAAK5+D,GAAM,IAAImzJ,EAAM,IAAIv0F,EAAKhhF,YAAY,IAAI,IAAIooD,KAAK44B,EAAK,CAAC,IAAI76E,EAAE66E,EAAK54B,GAAgB,iBAAHjiD,GAAgBA,GAAGovK,EAAMntH,KAAImtH,EAAMntH,GAAGjiD,EAAG,CAA2E,OAAvE66E,EAAK+xF,aAAYwC,EAAMxC,WAAW,IAAIjC,GAASyE,EAAMlE,cAAc3lC,EAAW6pC,EAAMhC,UAAU,KAAKnE,EAAa,IAAIh5J,EAAM4qE,EAAKzjE,WAAek4J,EAAOF,EAAMh4J,WAAW,IAAIi0J,EAAiB/E,EAAIr2J,EAAMtU,OAAO2zK,EAAOC,cAAcH,EAAM,IAAI,IAAInvK,EAAE,EAAEA,EAAEqmK,EAAIrmK,IAAKmvK,EAAMxI,iBAAiByI,GAAU9pC,EAAIt1H,EAAMkT,KAAKljB,IAAG,IAAO,MAAM,KAAKipK,EAAejtJ,GAAK,EAAK,GAAGA,EAAgC,IAA1B,IAAImiF,EAAMvjB,EAAK+yC,WAAiBxvB,GAAOgxE,EAAMh5J,YAAYi5J,GAAU9pC,EAAInnC,EAAMniF,IAAOmiF,EAAMA,EAAMmuE,YAAa,OAAO6C,CAAK,CAAC,SAAShE,GAAQvsJ,EAAOriB,EAAI4O,GAAOyT,EAAOriB,GAAK4O,CAAK,CAA3qoBy+J,EAAc2F,mBAAmB1F,EAAiB,IAAI,gBAAgB,IAAmBD,EAAc4F,YAAY3F,EAAiB,IAAI,eAAe,IAAiCD,EAAc6F,0BAA0B5F,EAAiB,IAAI,uBAAuB,IAAsBD,EAAc8F,eAAe7F,EAAiB,IAAI,oBAAoB,IAA2BD,EAAc+F,oBAAoB9F,EAAiB,IAAI,iBAAiB,IAAwUW,EAAaxmK,UAAU5K,MAAM4K,UAAUilD,EAAK2gH,EAAcY,GAAmCE,EAAS1mK,UAAU,CAACtI,OAAO,EAAEwnB,KAAK,SAASuD,GAAO,OAAO3sB,KAAK2sB,IAAQ,IAAI,EAAEplB,SAAS,SAASwtK,EAAOR,GAAY,IAAI,IAAIC,EAAI,GAAGtuK,EAAE,EAAEA,EAAElG,KAAK4B,OAAOsE,IAAK21J,GAAkB77J,KAAKkG,GAAGsuK,EAAIO,EAAOR,GAAY,OAAOC,EAAIprK,KAAK,GAAG,GAA2SynK,EAAa3mK,UAAUkf,KAAK,SAASljB,GAAyB,OAAtB8qK,EAAgBhxK,MAAaA,KAAKkG,EAAE,EAAEyoK,EAASkC,EAAaD,GAAuuBU,EAAapnK,UAAU,CAACtI,OAAO,EAAEwnB,KAAKwnJ,EAAS1mK,UAAUkf,KAAK0sJ,aAAa,SAASrzK,GAAuB,IAAlB,IAAIyD,EAAElG,KAAK4B,OAAasE,KAAI,CAAC,IAAIuO,EAAKzU,KAAKkG,GAAG,GAAGuO,EAAKq/G,UAAUrxH,EAAK,OAAOgS,CAAK,CAAC,EAAEshK,aAAa,SAASthK,GAAM,IAAIm7B,EAAGn7B,EAAKk9J,aAAa,GAAG/hI,GAAIA,GAAI5vC,KAAKw1K,cAAe,MAAM,IAAI9E,EAAaF,GAAqB,IAAIkB,EAAQ1xK,KAAK81K,aAAarhK,EAAKq/G,UAA8D,OAApD09C,EAAcxxK,KAAKw1K,cAAcx1K,KAAKyU,EAAKi9J,GAAgBA,CAAO,EAAEsE,eAAe,SAASvhK,GAAM,IAAyBi9J,EAArB9hI,EAAGn7B,EAAKk9J,aAAqB,GAAG/hI,GAAIA,GAAI5vC,KAAKw1K,cAAe,MAAM,IAAI9E,EAAaF,GAAuI,OAAlHkB,EAAQ1xK,KAAKi2K,eAAexhK,EAAK6lJ,aAAa7lJ,EAAK23J,WAAWoF,EAAcxxK,KAAKw1K,cAAcx1K,KAAKyU,EAAKi9J,GAAgBA,CAAO,EAAEwE,gBAAgB,SAASzzK,GAAK,IAAIgS,EAAKzU,KAAK81K,aAAarzK,GAAoD,OAA/CsvK,EAAiB/xK,KAAKw1K,cAAcx1K,KAAKyU,GAAaA,CAAI,EAAE0hK,kBAAkB,SAAS7b,EAAa8R,GAAW,IAAI33J,EAAKzU,KAAKi2K,eAAe3b,EAAa8R,GAA0D,OAA/C2F,EAAiB/xK,KAAKw1K,cAAcx1K,KAAKyU,GAAaA,CAAI,EAAEwhK,eAAe,SAAS3b,EAAa8R,GAA6B,IAAlB,IAAIlmK,EAAElG,KAAK4B,OAAasE,KAAI,CAAC,IAAI46E,EAAK9gF,KAAKkG,GAAG,GAAG46E,EAAKsrF,WAAWA,GAAWtrF,EAAKw5E,cAAcA,EAAc,OAAOx5E,CAAK,CAAC,OAAO,IAAI,GAAuImrF,EAAkB/hK,UAAU,CAACksK,WAAW,SAASjE,EAAQx0J,GAAS,IAAI04J,EAASr2K,KAAKkyK,UAAUC,EAAQ1kK,eAAe,SAAG4oK,GAAY14J,KAASA,KAAW04J,GAAyC,EAAEnK,eAAe,SAAS5R,EAAagc,EAAcC,GAAS,IAAI/qC,EAAI,IAAIinC,EAAsH,GAA7GjnC,EAAI6iC,eAAeruK,KAAKwrI,EAAIqnC,WAAW,IAAIjC,EAASplC,EAAI+qC,QAAQA,EAAWA,GAAS/qC,EAAInvH,YAAYk6J,GAAYD,EAAc,CAAC,IAAIljE,EAAKo4B,EAAI8gC,gBAAgBhS,EAAagc,GAAe9qC,EAAInvH,YAAY+2F,EAAK,CAAC,OAAOo4B,CAAG,EAAE8iC,mBAAmB,SAASgI,EAAcnI,EAAS7D,GAAU,IAAIxpF,EAAK,IAAIizF,EAA+G,OAAlGjzF,EAAKl1E,KAAK0qK,EAAcx1F,EAAKgzC,SAASwiD,EAAcx1F,EAAKqtF,SAASA,EAASrtF,EAAKwpF,SAASA,EAAgBxpF,CAAI,GAAoBsxF,EAAKloK,UAAU,CAAC2pH,WAAW,KAAKo/C,UAAU,KAAKD,gBAAgB,KAAKR,YAAY,KAAKn1J,WAAW,KAAKuhF,WAAW,KAAKi0E,WAAW,KAAK1B,cAAc,KAAKvE,UAAU,KAAKtS,aAAa,KAAKnpJ,OAAO,KAAKi7J,UAAU,KAAKoK,aAAa,SAAS7D,EAAS8D,GAAU,OAAOvD,EAAclzK,KAAK2yK,EAAS8D,EAAS,EAAEC,aAAa,SAAS/D,EAASgE,GAAU32K,KAAKw2K,aAAa7D,EAASgE,GAAaA,GAAU32K,KAAK6+F,YAAY83E,EAAU,EAAE93E,YAAY,SAAS83E,GAAU,OAAO7D,EAAa9yK,KAAK22K,EAAS,EAAEt6J,YAAY,SAASs2J,GAAU,OAAO3yK,KAAKw2K,aAAa7D,EAAS,KAAK,EAAEiE,cAAc,WAAW,OAAwB,MAAjB52K,KAAK6zH,UAAgB,EAAEyhD,UAAU,SAASpzJ,GAAM,OAAOozJ,GAAUt1K,KAAKmxK,eAAenxK,KAAKA,KAAKkiB,EAAK,EAAE2rJ,UAAU,WAAqC,IAA1B,IAAIxpE,EAAMrkG,KAAK6zH,WAAiBxvB,GAAM,CAAC,IAAIt9E,EAAKs9E,EAAMmuE,YAAezrJ,GAAMA,EAAKssJ,UAAUjE,GAAW/qE,EAAMgvE,UAAUjE,GAAWpvK,KAAK6+F,YAAY93E,GAAMs9E,EAAMwyE,WAAW9vJ,EAAK3lB,QAAWijG,EAAMwpE,YAAYxpE,EAAMt9E,EAAK,CAAC,EAAE+vJ,YAAY,SAAS3E,EAAQx0J,GAAS,OAAO3d,KAAKmxK,cAAc9C,eAAe+H,WAAWjE,EAAQx0J,EAAQ,EAAEo5J,cAAc,WAAW,OAAO/2K,KAAKqd,WAAWzb,OAAO,CAAC,EAAE+yK,aAAa,SAASra,GAA0B,IAAZ,IAAI1qH,EAAG5vC,KAAW4vC,GAAG,CAAC,IAAI9wC,EAAI8wC,EAAGiiI,OAAO,GAAG/yK,EAAK,IAAI,IAAIopD,KAAKppD,EAAK,GAAGA,EAAIopD,IAAIoyG,EAAc,OAAOpyG,EAAItY,EAAGA,EAAGyjI,UAAUlE,EAAev/H,EAAGuhI,cAAcvhI,EAAGgvD,UAAU,CAAC,OAAO,IAAI,EAAEo4E,mBAAmB,SAAS7lK,GAAoB,IAAZ,IAAIy+B,EAAG5vC,KAAW4vC,GAAG,CAAC,IAAI9wC,EAAI8wC,EAAGiiI,OAAO,GAAG/yK,GAAQqS,KAAUrS,EAAK,OAAOA,EAAIqS,GAASy+B,EAAGA,EAAGyjI,UAAUlE,EAAev/H,EAAGuhI,cAAcvhI,EAAGgvD,UAAU,CAAC,OAAO,IAAI,EAAEq4E,mBAAmB,SAAS3c,GAAyD,OAAe,MAA/Ct6J,KAAK20K,aAAara,EAAiC,GAA6HnrG,EAAK8/G,EAASmD,GAAMjjH,EAAK8/G,EAASmD,EAAKloK,WAA02EuoK,EAASvoK,UAAU,CAAC4pH,SAAS,YAAYu/C,SAAS3D,EAAc6G,QAAQ,KAAK7B,gBAAgB,KAAKxD,KAAK,EAAEsF,aAAa,SAAS7D,EAAS8D,GAAU,GAAG9D,EAASU,UAAUzD,EAAuB,CAA+B,IAA9B,IAAIvrE,EAAMsuE,EAAS9+C,WAAiBxvB,GAAM,CAAC,IAAIt9E,EAAKs9E,EAAMmuE,YAAYxyK,KAAKw2K,aAAanyE,EAAMoyE,GAAUpyE,EAAMt9E,CAAI,CAAC,OAAO4rJ,CAAQ,CAA+F,OAArE,MAAtB3yK,KAAK00K,iBAAuB/B,EAASU,UAAUnE,IAAclvK,KAAK00K,gBAAgB/B,GAAgBO,EAAclzK,KAAK2yK,EAAS8D,GAAU9D,EAASxB,cAAcnxK,KAAK2yK,CAAQ,EAAE9zE,YAAY,SAAS83E,GAAuE,OAA1D32K,KAAK00K,iBAAiBiC,IAAU32K,KAAK00K,gBAAgB,MAAY5B,EAAa9yK,KAAK22K,EAAS,EAAEvB,WAAW,SAAS8B,EAAah1J,GAAM,OAAOkzJ,GAAWp1K,KAAKk3K,EAAah1J,EAAK,EAAE40F,eAAe,SAAS73G,GAAI,IAAIk4K,EAAI,KAA6I,OAAxI5E,EAAWvyK,KAAK00K,iBAAgB,SAAS5zF,GAAM,GAAGA,EAAKuyF,UAAUnE,GAAiBpuF,EAAKgY,aAAa,OAAO75F,EAAa,OAATk4K,EAAIr2F,GAAY,CAAM,IAAUq2F,CAAG,EAAEn7J,cAAc,SAAS6vH,GAAS,IAAI/qD,EAAK,IAAI2yF,EAA4K,OAApK3yF,EAAKqwF,cAAcnxK,KAAK8gF,EAAKgzC,SAAS+X,EAAQ/qD,EAAK+qD,QAAQA,EAAQ/qD,EAAK+xF,WAAW,IAAIjC,GAAmB9vF,EAAKzjE,WAAW,IAAIi0J,GAAmBkE,cAAc10F,EAAYA,CAAI,EAAEs2F,uBAAuB,WAAW,IAAIt2F,EAAK,IAAIqzF,EAAsE,OAArDrzF,EAAKqwF,cAAcnxK,KAAK8gF,EAAK+xF,WAAW,IAAIjC,EAAgB9vF,CAAI,EAAEye,eAAe,SAASn+F,GAAM,IAAI0/E,EAAK,IAAI8yF,EAAmD,OAA9C9yF,EAAKqwF,cAAcnxK,KAAK8gF,EAAK+1F,WAAWz1K,GAAa0/E,CAAI,EAAEitF,cAAc,SAAS3sK,GAAM,IAAI0/E,EAAK,IAAI+yF,EAAsD,OAA9C/yF,EAAKqwF,cAAcnxK,KAAK8gF,EAAK+1F,WAAWz1K,GAAa0/E,CAAI,EAAE4sF,mBAAmB,SAAStsK,GAAM,IAAI0/E,EAAK,IAAIgzF,EAA2D,OAA9ChzF,EAAKqwF,cAAcnxK,KAAK8gF,EAAK+1F,WAAWz1K,GAAa0/E,CAAI,EAAEusF,4BAA4B,SAASn0G,EAAO93D,GAAM,IAAI0/E,EAAK,IAAIszF,EAA4G,OAAtFtzF,EAAKqwF,cAAcnxK,KAAK8gF,EAAK+qD,QAAQ/qD,EAAK5nB,OAAOA,EAAO4nB,EAAK8rF,UAAU9rF,EAAK1/E,KAAKA,EAAY0/E,CAAI,EAAEu2F,gBAAgB,SAASzrK,GAAM,IAAIk1E,EAAK,IAAI4yF,EAAuG,OAAlG5yF,EAAKqwF,cAAcnxK,KAAK8gF,EAAKl1E,KAAKA,EAAKk1E,EAAKgzC,SAASloH,EAAKk1E,EAAKsrF,UAAUxgK,EAAKk1E,EAAKw2F,WAAU,EAAYx2F,CAAI,EAAEy2F,sBAAsB,SAAS3rK,GAAM,IAAIk1E,EAAK,IAAIozF,EAA2D,OAA3CpzF,EAAKqwF,cAAcnxK,KAAK8gF,EAAKgzC,SAASloH,EAAYk1E,CAAI,EAAEwrF,gBAAgB,SAAShS,EAAagc,GAAe,IAAIx1F,EAAK,IAAI2yF,EAAY+D,EAAGlB,EAAc5yJ,MAAM,KAASxN,EAAM4qE,EAAKzjE,WAAW,IAAIi0J,EAA2Q,OAA9PxwF,EAAK+xF,WAAW,IAAIjC,EAAS9vF,EAAKqwF,cAAcnxK,KAAK8gF,EAAKgzC,SAASwiD,EAAcx1F,EAAK+qD,QAAQyqC,EAAcx1F,EAAKw5E,aAAaA,EAA2B,GAAXkd,EAAG51K,QAAWk/E,EAAK3vE,OAAOqmK,EAAG,GAAG12F,EAAKsrF,UAAUoL,EAAG,IAAQ12F,EAAKsrF,UAAUkK,EAAcpgK,EAAMs/J,cAAc10F,EAAYA,CAAI,EAAE4rF,kBAAkB,SAASpS,EAAagc,GAAe,IAAIx1F,EAAK,IAAI4yF,EAAS8D,EAAGlB,EAAc5yJ,MAAM,KAA8N,OAAzNo9D,EAAKqwF,cAAcnxK,KAAK8gF,EAAKgzC,SAASwiD,EAAcx1F,EAAKl1E,KAAK0qK,EAAcx1F,EAAKw5E,aAAaA,EAAax5E,EAAKw2F,WAAU,EAAmB,GAAXE,EAAG51K,QAAWk/E,EAAK3vE,OAAOqmK,EAAG,GAAG12F,EAAKsrF,UAAUoL,EAAG,IAAQ12F,EAAKsrF,UAAUkK,EAAqBx1F,CAAI,GAAG6tF,EAAS8D,EAASL,GAAwCqB,EAAQvpK,UAAU,CAACmpK,SAASnE,EAAauI,aAAa,SAAS7rK,GAAM,OAAoC,MAA7B5L,KAAK03K,iBAAiB9rK,EAAW,EAAEktF,aAAa,SAASltF,GAAM,IAAI6I,EAAKzU,KAAK03K,iBAAiB9rK,GAAM,OAAO6I,GAAMA,EAAKpD,OAAO,EAAE,EAAEqmK,iBAAiB,SAAS9rK,GAAM,OAAO5L,KAAKqd,WAAWy4J,aAAalqK,EAAK,EAAEqqF,aAAa,SAASrqF,EAAKyF,GAAO,IAAIoD,EAAKzU,KAAKmxK,cAAckG,gBAAgBzrK,GAAM6I,EAAKpD,MAAMoD,EAAKm4J,UAAU,GAAGv7J,EAAMrR,KAAK6sK,iBAAiBp4J,EAAK,EAAEwkF,gBAAgB,SAASrtF,GAAM,IAAI6I,EAAKzU,KAAK03K,iBAAiB9rK,GAAM6I,GAAMzU,KAAK23K,oBAAoBljK,EAAK,EAAE4H,YAAY,SAASs2J,GAAU,OAAGA,EAASU,WAAWzD,EAA+B5vK,KAAKw2K,aAAa7D,EAAS,MAAr4H,SAA4B/zE,EAAW+zE,GAAU,IAAIS,EAAGT,EAAS/zE,WAAW,GAAGw0E,EAAG,CAAC,IAAII,EAAI50E,EAAWq0E,UAAUG,EAAGv0E,YAAY8zE,GAAca,EAAI50E,EAAWq0E,SAAS,CAAoR,OAA/QO,EAAI50E,EAAWq0E,UAAUN,EAAS/zE,WAAWA,EAAW+zE,EAASK,gBAAgBQ,EAAIb,EAASH,YAAY,KAAQgB,EAAKA,EAAIhB,YAAYG,EAAc/zE,EAAWi1B,WAAW8+C,EAAS/zE,EAAWq0E,UAAUN,EAASD,EAAe9zE,EAAWuyE,cAAcvyE,EAAW+zE,GAAiBA,CAAQ,CAA+8GiF,CAAmB53K,KAAK2yK,EAAU,EAAE9F,iBAAiB,SAAS4E,GAAS,OAAOzxK,KAAKqd,WAAW04J,aAAatE,EAAQ,EAAEoG,mBAAmB,SAASpG,GAAS,OAAOzxK,KAAKqd,WAAW24J,eAAevE,EAAQ,EAAEkG,oBAAoB,SAASjG,GAAS,OAAO1xK,KAAKqd,WAAW64J,gBAAgBxE,EAAQ59C,SAAS,EAAEgkD,kBAAkB,SAASxd,EAAa8R,GAAW,IAAIv/C,EAAI7sH,KAAK+3K,mBAAmBzd,EAAa8R,GAAWv/C,GAAK7sH,KAAK23K,oBAAoB9qD,EAAI,EAAEmrD,eAAe,SAAS1d,EAAa8R,GAAW,OAAwD,MAAjDpsK,KAAK+3K,mBAAmBzd,EAAa8R,EAAgB,EAAE6L,eAAe,SAAS3d,EAAa8R,GAAW,IAAI33J,EAAKzU,KAAK+3K,mBAAmBzd,EAAa8R,GAAW,OAAO33J,GAAMA,EAAKpD,OAAO,EAAE,EAAE6mK,eAAe,SAAS5d,EAAagc,EAAcjlK,GAAO,IAAIoD,EAAKzU,KAAKmxK,cAAczE,kBAAkBpS,EAAagc,GAAe7hK,EAAKpD,MAAMoD,EAAKm4J,UAAU,GAAGv7J,EAAMrR,KAAK6sK,iBAAiBp4J,EAAK,EAAEsjK,mBAAmB,SAASzd,EAAa8R,GAAW,OAAOpsK,KAAKqd,WAAW44J,eAAe3b,EAAa8R,EAAU,EAAEnoF,qBAAqB,SAAS4nD,GAAS,OAAO,IAAIglC,EAAa7wK,MAAK,SAAS4uE,GAAM,IAAIwiG,EAAG,GAAwI,OAArImB,EAAW3jG,GAAK,SAASkS,GAASA,IAAOlS,GAAMkS,EAAKuyF,UAAUnE,GAAyB,MAAVrjC,GAAe/qD,EAAK+qD,SAASA,GAAUulC,EAAGhqK,KAAK05E,EAAM,IAAUswF,CAAE,GAAE,EAAE+G,uBAAuB,SAAS7d,EAAa8R,GAAW,OAAO,IAAIyE,EAAa7wK,MAAK,SAAS4uE,GAAM,IAAIwiG,EAAG,GAAuM,OAApMmB,EAAW3jG,GAAK,SAASkS,GAASA,IAAOlS,GAAMkS,EAAKuyF,WAAWnE,GAA8B,MAAf5U,GAAoBx5E,EAAKw5E,eAAeA,GAA4B,MAAZ8R,GAAiBtrF,EAAKsrF,WAAWA,GAAYgF,EAAGhqK,KAAK05E,EAAM,IAAUswF,CAAE,GAAE,GAAGqB,EAASvoK,UAAU+5E,qBAAqBwvF,EAAQvpK,UAAU+5E,qBAAqBwuF,EAASvoK,UAAUiuK,uBAAuB1E,EAAQvpK,UAAUiuK,uBAAuBxJ,EAAS8E,EAAQrB,GAAuBsB,EAAKxpK,UAAUmpK,SAASlE,EAAeR,EAAS+E,EAAKtB,GAAgCuB,EAAczpK,UAAU,CAAC9I,KAAK,GAAGg3K,cAAc,SAASjd,EAAOzwI,GAAO,OAAO1qB,KAAKoB,KAAKq3B,UAAU0iI,EAAOA,EAAOzwI,EAAM,EAAEmsJ,WAAW,SAASpzK,GAAMA,EAAKzD,KAAKoB,KAAKqC,EAAKzD,KAAK4sK,UAAU5sK,KAAKoB,KAAKqC,EAAKzD,KAAK4B,OAAO6B,EAAK7B,MAAM,EAAEy2K,WAAW,SAASld,EAAO13J,GAAMzD,KAAKs4K,YAAYnd,EAAO,EAAE13J,EAAK,EAAE4Y,YAAY,SAASs2J,GAAU,MAAM,IAAIrzK,MAAMywK,EAAiBC,GAAuB,EAAEruD,WAAW,SAASw5C,EAAOzwI,GAAO1qB,KAAKs4K,YAAYnd,EAAOzwI,EAAM,GAAG,EAAE4tJ,YAAY,SAASnd,EAAOzwI,EAAMjnB,GAAwFA,EAAxEzD,KAAKoB,KAAKq3B,UAAU,EAAE0iI,GAA6D13J,EAA7CzD,KAAKoB,KAAKq3B,UAAU0iI,EAAOzwI,GAA2B1qB,KAAK4sK,UAAU5sK,KAAKoB,KAAKqC,EAAKzD,KAAK4B,OAAO6B,EAAK7B,MAAM,GAAG+sK,EAASgF,EAAcvB,GAAuBwB,EAAK1pK,UAAU,CAAC4pH,SAAS,QAAQu/C,SAASjE,EAAUmJ,UAAU,SAASpd,GAAQ,IAAI13J,EAAKzD,KAAKoB,KAASo3K,EAAQ/0K,EAAKg1B,UAAU0iI,GAAQ13J,EAAKA,EAAKg1B,UAAU,EAAE0iI,GAAQn7J,KAAKoB,KAAKpB,KAAK4sK,UAAUnpK,EAAKzD,KAAK4B,OAAO6B,EAAK7B,OAAO,IAAI62K,EAAQz4K,KAAKmxK,cAAc5xE,eAAei5E,GAAoF,OAAxEx4K,KAAK4+F,YAAY5+F,KAAK4+F,WAAW43E,aAAaiC,EAAQz4K,KAAKwyK,aAAoBiG,CAAO,GAAG9J,EAASiF,EAAKD,GAAmCE,EAAQ3pK,UAAU,CAAC4pH,SAAS,WAAWu/C,SAAS5D,GAAcd,EAASkF,EAAQF,GAAwCG,EAAa5pK,UAAU,CAAC4pH,SAAS,iBAAiBu/C,SAAShE,GAAoBV,EAASmF,EAAaH,GAAwCI,EAAa7pK,UAAUmpK,SAAS1D,EAAmBhB,EAASoF,EAAa3B,GAA2B4B,EAAS9pK,UAAUmpK,SAASxD,EAAclB,EAASqF,EAAS5B,GAAyB6B,EAAO/pK,UAAUmpK,SAAS9D,EAAYZ,EAASsF,EAAO7B,GAAkC8B,EAAgBhqK,UAAUmpK,SAAS/D,EAAsBX,EAASuF,EAAgB9B,GAAmC+B,EAAiBjqK,UAAU4pH,SAAS,qBAAqBqgD,EAAiBjqK,UAAUmpK,SAASzD,EAAuBjB,EAASwF,EAAiB/B,GAAwCgC,EAAsBlqK,UAAUmpK,SAAS7D,EAA4Bb,EAASyF,EAAsBhC,GAAgC/W,EAAcnxJ,UAAU2xJ,kBAAkB,SAAS/6E,EAAKwzF,EAAOC,GAAY,OAAOF,GAAsBlqK,KAAK22E,EAAKwzF,EAAOC,EAAW,EAAEnC,EAAKloK,UAAU3C,SAAS8sK,GAA2hJ,IAAI,GAAG50K,OAAO04J,eAAe,CAA2f,SAASugB,GAAe53F,GAAM,OAAOA,EAAKuyF,UAAU,KAAKnE,EAAa,KAAKU,EAAuB,IAAI4E,EAAI,GAAwB,IAArB1zF,EAAKA,EAAK+yC,WAAiB/yC,GAAyB,IAAhBA,EAAKuyF,UAA8B,IAAhBvyF,EAAKuyF,UAAcmB,EAAIptK,KAAKsxK,GAAe53F,IAAOA,EAAKA,EAAK0xF,YAAY,OAAOgC,EAAIprK,KAAK,IAAI,QAAQ,OAAO03E,EAAK8rF,UAAU,CAAxxBntK,OAAO04J,eAAe0Y,EAAa3mK,UAAU,SAAS,CAACtB,IAAI,WAAiC,OAAtBooK,EAAgBhxK,MAAaA,KAAK24K,QAAQ,IAAIl5K,OAAO04J,eAAeia,EAAKloK,UAAU,cAAc,CAACtB,IAAI,WAAW,OAAO8vK,GAAe14K,KAAK,EAAEiQ,IAAI,SAAS7O,GAAM,OAAOpB,KAAKqzK,UAAU,KAAKnE,EAAa,KAAKU,EAAuB,KAAM5vK,KAAK6zH,YAAY7zH,KAAK6+F,YAAY7+F,KAAK6zH,aAAezyH,GAAM0Q,OAAO1Q,KAAOpB,KAAKqc,YAAYrc,KAAKmxK,cAAc5xE,eAAen+F,IAAO,MAAM,QAAQpB,KAAKoB,KAAKA,EAAKpB,KAAKqR,MAAMjQ,EAAKpB,KAAK4sK,UAAUxrK,EAAK,IAAmSiwK,GAAQ,SAASvsJ,EAAOriB,EAAI4O,GAAOyT,EAAO,KAAKriB,GAAK4O,CAAK,CAAC,CAAC,CAAC,MAAMhS,IAAG,CAACO,EAAQqsK,kBAAkBA,EAAkBrsK,EAAQy7J,cAAcA,CAAa,EAAE,CAAC,GAAG,GAAG,CAAC,SAASzzE,EAAQjoF,EAAOC,GAAS,IAAIg5K,EAAc,mJAAuJC,EAAS,IAAI59J,OAAO,aAAa29J,EAAc/N,OAAO/kK,MAAM,GAAG,GAAG,0CAA8CgzK,EAAe,IAAI79J,OAAO,IAAI29J,EAAc/N,OAAOgO,EAAShO,OAAO,QAAQ+N,EAAc/N,OAAOgO,EAAShO,OAAO,QAAYkO,EAAM,EAAMC,EAAO,EAAMC,EAAa,EAAMC,EAAK,EAAMC,EAAoB,EAAMC,EAAW,EAAMC,EAAY,EAAMC,EAAY,EAAE,SAASvO,IAAY,CAA+P,SAASngK,EAAMigK,EAAO0O,EAAiBpO,EAAUH,EAAW3O,GAAgO,SAASmd,EAAe54J,GAAG,IAAI3Z,EAAE2Z,EAAE9a,MAAM,GAAG,GAAG,OAAGmB,KAAKkkK,EAAkBA,EAAUlkK,GAAyB,MAAdA,EAAEulD,OAAO,GAAzT,SAA2BjtD,GAAM,GAAGA,EAAK,MAAM,CAAa,IAAIk6K,EAAW,QAA3Bl6K,GAAM,QAAkC,IAAIm6K,EAAW,OAAY,KAALn6K,GAAW,OAAOuS,OAAOsrJ,aAAaqc,EAAWC,EAAW,CAAM,OAAO5nK,OAAOsrJ,aAAa79J,EAAM,CAAyHo6K,CAAkB15J,SAAShZ,EAAEiiD,OAAO,GAAGtjD,QAAQ,IAAI,SAAay2J,EAAa/6J,MAAM,oBAAoBsf,GAAUA,EAAE,CAAC,SAASg5J,EAAW/sH,GAAK,GAAGA,EAAI57B,EAAM,CAAC,IAAI4oJ,EAAGhP,EAAOpyI,UAAUxH,EAAM47B,GAAKjnD,QAAQ,WAAW4zK,GAAgBxP,GAAShiH,EAAS/2B,GAAO+5I,EAAWwC,WAAWqM,EAAG,EAAEhtH,EAAI57B,GAAOA,EAAM47B,CAAG,CAAC,CAAC,SAAS7E,EAASvtC,EAAEq/J,GAAG,KAAMr/J,GAAGs/J,IAAUD,EAAEE,EAAYtc,KAAKmN,KAAUoP,EAAUH,EAAEntJ,MAAMotJ,EAAQE,EAAUH,EAAE,GAAGl4K,OAAOooK,EAAQG,aAAaH,EAAQI,aAAa3vJ,EAAEw/J,EAAU,CAAC,CAAiL,IAAhL,IAAIA,EAAU,EAAMF,EAAQ,EAAMC,EAAY,sBAA0BhQ,EAAQgB,EAAWhB,QAAYkQ,EAAW,CAAC,CAACC,aAAaZ,IAAuBa,EAAS,CAAC,EAAMnpJ,EAAM,IAAa,CAAC,IAAI,IAAIopJ,EAASxP,EAAOrjK,QAAQ,IAAIypB,GAAO,GAAGopJ,EAAS,EAAE,CAAC,IAAIxP,EAAO3hH,OAAOj4B,GAAO3jB,MAAM,SAAS,CAAC,IAAIk+H,EAAIw/B,EAAWx/B,IAAQ/nI,EAAK+nI,EAAIjsC,eAAesrE,EAAO3hH,OAAOj4B,IAAQu6G,EAAInvH,YAAY5Y,GAAMunK,EAAWJ,eAAennK,CAAI,CAAC,MAAM,CAAyC,OAArC42K,EAASppJ,GAAO2oJ,EAAWS,GAAiBxP,EAAOr+G,OAAO6tH,EAAS,IAAI,IAAI,IAAI,IAAIxtH,EAAIg+G,EAAOrjK,QAAQ,IAAI6yK,EAAS,GAAOxuC,EAAQg/B,EAAOpyI,UAAU4hJ,EAAS,EAAExtH,GAASn7C,EAAOwoK,EAAW/kI,MAAS0X,EAAI,GAAGg/E,EAAQg/B,EAAOpyI,UAAU4hJ,EAAS,GAAGz0K,QAAQ,UAAU,IAAIy2J,EAAa/6J,MAAM,iBAAiBuqI,EAAQ,oBAAoBn6H,EAAOm6H,SAASh/E,EAAIwtH,EAAS,EAAExuC,EAAQjqI,QAAeiqI,EAAQv+H,MAAM,SAAQu+H,EAAQA,EAAQjmI,QAAQ,UAAU,IAAIy2J,EAAa/6J,MAAM,iBAAiBuqI,EAAQ,uBAAuBh/E,EAAIwtH,EAAS,EAAExuC,EAAQjqI,QAAO,IAAI04K,EAAW5oK,EAAO4oK,WAAeC,EAAS7oK,EAAOm6H,SAASA,EAA4G,GAA9E0uC,GAAU7oK,EAAOm6H,SAASn6H,EAAOm6H,QAAQp+H,eAAeo+H,EAAQp+H,cAAmC,CAA4D,GAA3Du9J,EAAW8B,WAAWp7J,EAAOu7J,IAAIv7J,EAAO06J,UAAUvgC,GAAYyuC,EAAY,IAAI,IAAInpK,KAAUmpK,EAAYtP,EAAWkC,iBAAiB/7J,GAAaopK,GAAUle,EAAaoS,WAAW,iBAAiB5iC,EAAQ,2CAA2Cn6H,EAAOm6H,QAAS,MAAMquC,EAAW9yK,KAAKsK,GAAQm7C,IAAM,MAAM,IAAI,IAAIm9G,GAAShiH,EAASqyH,GAAUxtH,EAAI2tH,EAAiB3P,EAAOwP,EAASrP,GAAY,MAAM,IAAI,IAAIhB,GAAShiH,EAASqyH,GAAUxtH,EAAI4tH,EAAS5P,EAAOwP,EAASrP,EAAW3O,GAAc,MAAM,QAAQ2N,GAAShiH,EAASqyH,GAAU,IAAIzqI,EAAG,IAAI8qI,EAAsBP,EAAaD,EAAWA,EAAWt4K,OAAO,GAAGu4K,aAA4G5N,GAA3F1/G,EAAI8tH,EAAsB9P,EAAOwP,EAASzqI,EAAGuqI,EAAaX,EAAend,GAAsBzsH,EAAGhuC,QAAwJ,IAA7IguC,EAAGgrI,QAAQC,EAAchQ,EAAOh+G,EAAIjd,EAAGi8F,QAAQuuC,KAAWxqI,EAAGgrI,QAAO,EAASzP,EAAUY,MAAM1P,EAAamS,QAAQ,2BAA8BxE,GAASuC,EAAI,CAAsC,IAArC,IAAIuO,EAASC,EAAY/Q,EAAQ,CAAC,GAAW9jK,EAAE,EAAEA,EAAEqmK,EAAIrmK,IAAI,CAAC,IAAI0a,EAAEgvB,EAAG1pC,GAAG8hD,EAASpnC,EAAEu6I,QAAQv6I,EAAEopJ,QAAQ+Q,EAAY/Q,EAAQ,CAAC,EAAE,CAACgB,EAAWhB,QAAQ8Q,EAAYpQ,EAAc96H,EAAGo7H,EAAWmP,IAAeD,EAAW9yK,KAAKwoC,GAAIo7H,EAAWhB,QAAQA,CAAO,MAASU,EAAc96H,EAAGo7H,EAAWmP,IAAeD,EAAW9yK,KAAKwoC,GAAiB,iCAATA,EAAGq9H,KAAuCr9H,EAAGgrI,OAA0F/tH,IAAlFA,EAAImuH,EAAwBnQ,EAAOh+G,EAAIjd,EAAGi8F,QAAQ2tC,EAAexO,GAAwB,CAAC,MAAM3rK,GAAGg9J,EAAa/6J,MAAM,wBAAwBjC,GAAGwtD,GAAK,CAAC,CAAIA,EAAI57B,EAAOA,EAAM47B,EAAS+sH,EAAWl8H,KAAKqI,IAAIs0H,EAASppJ,GAAO,EAAG,CAAC,CAAC,SAAS8pJ,EAAYr5J,EAAEme,GAA2D,OAAxDA,EAAEsqI,WAAWzoJ,EAAEyoJ,WAAWtqI,EAAEuqI,aAAa1oJ,EAAE0oJ,aAAoBvqI,CAAC,CAAC,SAAS86I,EAAsB9P,EAAO55I,EAAM2e,EAAGuqI,EAAaX,EAAend,GAA+D,IAAjD,IAAI4e,EAAuBxgK,IAAIwW,EAAUwD,EAAEskJ,IAAiB,CAAC,IAAI71I,EAAE2nI,EAAOr+G,OAAO/xC,GAAG,OAAOyoB,GAAG,IAAI,IAAI,GAAGzO,IAAIukJ,EAAQiC,EAASpQ,EAAO/kK,MAAMmrB,EAAMxW,GAAGga,EAAEykJ,MAAU,IAAGzkJ,IAAIwkJ,EAA0B,MAAM,IAAI35K,MAAM,uCAA5Bm1B,EAAEykJ,CAAgE,CAAC,MAAM,IAAI,IAAI,IAAI,IAAI,GAAGzkJ,IAAIykJ,GAAMzkJ,IAAIukJ,EAAO,CAA0I,GAAtIvkJ,IAAIukJ,IAAQ3c,EAAamS,QAAQ,kCAAkCyM,EAASpQ,EAAO/kK,MAAMmrB,EAAMxW,IAAGwW,EAAMxW,EAAE,KAAEA,EAAEowJ,EAAOrjK,QAAQ07B,EAAEjS,IAAY,GAAmH,MAAM,IAAI3xB,MAAM,2BAA2B4jC,EAAE,WAA7J7xB,EAAMw5J,EAAO/kK,MAAMmrB,EAAMxW,GAAG7U,QAAQ,WAAW4zK,GAAgB5pI,EAAGl3B,IAAIuiK,EAAS5pK,EAAM4f,EAAM,GAAGwD,EAAE2kJ,CAAwE,KAAM,IAAG3kJ,GAAG0kJ,EAAyN,MAAM,IAAI75K,MAAM,kCAApN+R,EAAMw5J,EAAO/kK,MAAMmrB,EAAMxW,GAAG7U,QAAQ,WAAW4zK,GAAgB5pI,EAAGl3B,IAAIuiK,EAAS5pK,EAAM4f,GAAOorI,EAAamS,QAAQ,cAAcyM,EAAS,uBAAuB/3I,EAAE,OAAOjS,EAAMxW,EAAE,EAAEga,EAAE2kJ,CAAiE,CAAC,MAAM,IAAI,IAAI,OAAO3kJ,GAAG,KAAKskJ,EAAMnpI,EAAGsrI,WAAWrQ,EAAO/kK,MAAMmrB,EAAMxW,IAAI,KAAK2+J,EAAW,KAAKC,EAAY,KAAKC,EAAY7kJ,EAAE6kJ,EAAY1pI,EAAGgrI,QAAO,EAAK,KAAKzB,EAAoB,KAAKH,EAAO,KAAKC,EAAa,MAAM,QAAQ,MAAM,IAAI35K,MAAM,qCAAqC,MAAM,IAAI,GAAmG,OAAhG+8J,EAAa/6J,MAAM,2BAA8BmzB,GAAGskJ,GAAOnpI,EAAGsrI,WAAWrQ,EAAO/kK,MAAMmrB,EAAMxW,IAAWA,EAAE,IAAI,IAAI,OAAOga,GAAG,KAAKskJ,EAAMnpI,EAAGsrI,WAAWrQ,EAAO/kK,MAAMmrB,EAAMxW,IAAI,KAAK2+J,EAAW,KAAKC,EAAY,KAAKC,EAAY,MAAM,KAAKH,EAAoB,KAAKH,EAAwD,OAAjD3nK,EAAMw5J,EAAO/kK,MAAMmrB,EAAMxW,IAAY3U,OAAO,KAAU8pC,EAAGgrI,QAAO,EAAKvpK,EAAMA,EAAMvL,MAAM,GAAG,IAAG,KAAKmzK,EAAgBxkJ,IAAIwkJ,IAAc5nK,EAAM4pK,GAAYxmJ,GAAG0kJ,GAAqB9c,EAAamS,QAAQ,cAAcn9J,EAAM,sBAAsBu+B,EAAGl3B,IAAIuiK,EAAS5pK,EAAMzL,QAAQ,WAAW4zK,GAAgBvoJ,KAAkC,iCAAnBkpJ,EAAa,KAAuC9oK,EAAM/D,MAAM,qCAAqC+uJ,EAAamS,QAAQ,cAAcn9J,EAAM,qBAAqBA,EAAM,eAAeu+B,EAAGl3B,IAAIrH,EAAMA,EAAM4f,IAAO,MAAM,KAAKioJ,EAAK,MAAM,IAAI55K,MAAM,4BAA4B,OAAOmb,EAAE,IAAI,IAAIyoB,EAAE,IAAI,QAAQ,GAAGA,GAAG,IAAK,OAAOzO,GAAG,KAAKskJ,EAAMnpI,EAAGsrI,WAAWrQ,EAAO/kK,MAAMmrB,EAAMxW,IAAIga,EAAE4kJ,EAAY,MAAM,KAAKL,EAAOiC,EAASpQ,EAAO/kK,MAAMmrB,EAAMxW,GAAGga,EAAEwkJ,EAAa,MAAM,KAAKE,EAAoB,IAAI9nK,EAAMw5J,EAAO/kK,MAAMmrB,EAAMxW,GAAG7U,QAAQ,WAAW4zK,GAAgBnd,EAAamS,QAAQ,cAAcn9J,EAAM,sBAAsBu+B,EAAGl3B,IAAIuiK,EAAS5pK,EAAM4f,GAAO,KAAKmoJ,EAAW3kJ,EAAE4kJ,OAAwB,OAAO5kJ,GAAG,KAAKwkJ,EAAyBrpI,EAAGi8F,QAA8B,iCAAnBsuC,EAAa,KAAuCc,EAAS3tK,MAAM,qCAAqC+uJ,EAAamS,QAAQ,cAAcyM,EAAS,qBAAqBA,EAAS,gBAAgBrrI,EAAGl3B,IAAIuiK,EAASA,EAAShqJ,GAAOA,EAAMxW,EAAEga,EAAEukJ,EAAO,MAAM,KAAKI,EAAW/c,EAAamS,QAAQ,+BAA+ByM,EAAS,OAAO,KAAK5B,EAAY5kJ,EAAEukJ,EAAO/nJ,EAAMxW,EAAE,MAAM,KAAKy+J,EAAKzkJ,EAAE0kJ,EAAoBloJ,EAAMxW,EAAE,MAAM,KAAK6+J,EAAY,MAAM,IAAIh6K,MAAM,+DAAgEmb,GAAG,CAAC,CAAC,SAASiwJ,EAAc96H,EAAGo7H,EAAWmP,GAAyE,IAA3D,IAAItuC,EAAQj8F,EAAGi8F,QAAYyuC,EAAW,KAASp0K,EAAE0pC,EAAGhuC,OAAasE,KAAI,CAAC,IAAI0a,EAAEgvB,EAAG1pC,GAAOmmK,EAAMzrJ,EAAEyrJ,MAAUh7J,EAAMuP,EAAEvP,MAAiC,IAAvB8pK,EAAI9O,EAAM7kK,QAAQ,MAAY,EAAG,IAAI2J,EAAOyP,EAAEzP,OAAOk7J,EAAMvmK,MAAM,EAAEq1K,GAAS/O,EAAUC,EAAMvmK,MAAMq1K,EAAI,GAAOC,EAAkB,UAATjqK,GAAkBi7J,OAAeA,EAAUC,EAAMl7J,EAAO,KAAKiqK,EAAiB,UAAR/O,GAAiB,GAAGzrJ,EAAEwrJ,UAAUA,GAAwB,IAAXgP,IAAiC,MAAZd,IAAkBA,EAAW,CAAC,EAAEe,EAAMlB,EAAaA,EAAa,CAAC,IAAGA,EAAaiB,GAAUd,EAAWc,GAAU/pK,EAAMuP,EAAEqsJ,IAAI,gCAAgCjC,EAAWgC,mBAAmBoO,EAAS/pK,GAAO,CAAiB,IAAZnL,EAAE0pC,EAAGhuC,OAAasE,MAAiBiL,GAAZyP,EAAEgvB,EAAG1pC,IAAgBiL,UAA8B,QAATA,IAAgByP,EAAEqsJ,IAAI,wCAAmD,UAAT97J,IAAkByP,EAAEqsJ,IAAIkN,EAAahpK,GAAQ,MAAM,IAAIgqK,KAAItvC,EAAQrkI,QAAQ,MAAY,GAAG2J,EAAOy+B,EAAGz+B,OAAO06H,EAAQ/lI,MAAM,EAAEq1K,GAAK/O,EAAUx8H,EAAGw8H,UAAUvgC,EAAQ/lI,MAAMq1K,EAAI,KAAQhqK,EAAO,KAAKi7J,EAAUx8H,EAAGw8H,UAAUvgC,GAAQ,IAAImpC,EAAGplI,EAAGq9H,IAAIkN,EAAahpK,GAAQ,IAAqD,GAAjD65J,EAAW3tG,aAAa23G,EAAG5I,EAAUvgC,EAAQj8F,IAAOA,EAAGgrI,OAA8L,OAAtDhrI,EAAGuqI,aAAaA,EAAavqI,EAAG0qI,WAAWA,GAAkB,EAAjJ,GAA5CtP,EAAW8B,WAAWkI,EAAG5I,EAAUvgC,GAAYyuC,EAAY,IAAInpK,KAAUmpK,EAAYtP,EAAWkC,iBAAiB/7J,EAAiF,CAAC,SAAS6pK,EAAwBnQ,EAAOyQ,EAAWzvC,EAAQ2tC,EAAexO,GAAY,GAAG,yBAAyB9vJ,KAAK2wH,GAAS,CAAC,IAAI0vC,EAAW1Q,EAAOrjK,QAAQ,KAAKqkI,EAAQ,IAAIyvC,GAAgB73K,EAAKonK,EAAOpyI,UAAU6iJ,EAAW,EAAEC,GAAY,GAAG,OAAOrgK,KAAKzX,GAAO,MAAG,YAAYyX,KAAK2wH,IAAUm/B,EAAWwC,WAAW/pK,EAAK,EAAEA,EAAK7B,QAAe25K,IAAW93K,EAAKA,EAAKmC,QAAQ,WAAW4zK,GAAgBxO,EAAWwC,WAAW/pK,EAAK,EAAEA,EAAK7B,QAAe25K,EAAW,CAAC,OAAOD,EAAW,CAAC,CAAC,SAAST,EAAchQ,EAAOyQ,EAAWzvC,EAAQuuC,GAAU,IAAI3tJ,EAAI2tJ,EAASvuC,GAA8I,OAA7H,MAALp/G,KAAWA,EAAIo+I,EAAO2Q,YAAY,KAAK3vC,EAAQ,MAAYyvC,IAAY7uJ,EAAIo+I,EAAO2Q,YAAY,KAAK3vC,IAASuuC,EAASvuC,GAASp/G,GAAWA,EAAI6uJ,CAAU,CAAC,SAASD,EAAMxQ,EAAO3xG,GAAQ,IAAI,IAAIhR,KAAK2iH,EAAQ3xG,EAAOhR,GAAG2iH,EAAO3iH,EAAG,CAAC,SAASuyH,EAAS5P,EAAO55I,EAAM+5I,EAAW3O,GAA8C,GAAiB,MAAxCwO,EAAOr+G,OAAOv7B,EAAM,GAAwB,MAA4B,MAAzB45I,EAAOr+G,OAAOv7B,EAAM,IAAc47B,EAAIg+G,EAAOrjK,QAAQ,SAASypB,EAAM,IAAUA,GAAO+5I,EAAWppC,QAAQipC,EAAO55I,EAAM,EAAE47B,EAAI57B,EAAM,GAAU47B,EAAI,IAAOwvG,EAAa/6J,MAAM,qBAA2B,IAAe,EAAU,GAA6B,UAA1BupK,EAAO3hH,OAAOj4B,EAAM,EAAE,GAAa,CAAC,IAAI47B,EAAIg+G,EAAOrjK,QAAQ,MAAMypB,EAAM,GAAmG,OAAhG+5I,EAAWgD,aAAahD,EAAWwC,WAAW3C,EAAO55I,EAAM,EAAE47B,EAAI57B,EAAM,GAAG+5I,EAAWiD,WAAkBphH,EAAI,CAAC,CAAC,IAAI4uH,EAAqiD,SAAe5Q,EAAO55I,GAAO,IAAI3jB,EAAUknK,EAAI,GAAOkH,EAAI,6CAAkF,IAArCA,EAAI1J,UAAU/gJ,EAAMyqJ,EAAIhe,KAAKmN,GAAcv9J,EAAMouK,EAAIhe,KAAKmN,IAAyB,GAAhB2J,EAAIptK,KAAKkG,GAAUA,EAAM,GAAG,OAAOknK,CAAI,CAA/uD9wJ,CAAMmnJ,EAAO55I,GAAWs7I,EAAIkP,EAAO75K,OAAO,GAAG2qK,EAAI,GAAG,YAAYrxJ,KAAKugK,EAAO,GAAG,IAAI,CAAC,IAAI7vK,EAAK6vK,EAAO,GAAG,GAAOxG,EAAM1I,EAAI,GAAG,YAAYrxJ,KAAKugK,EAAO,GAAG,KAAKA,EAAO,GAAG,GAAOvG,EAAM3I,EAAI,GAAGkP,EAAO,GAAG,GAAOE,EAAUF,EAAOlP,EAAI,GAA2I,OAAxIvB,EAAWkD,SAAStiK,EAAKqpK,GAAOA,EAAMrvK,QAAQ,kBAAkB,MAAMsvK,GAAOA,EAAMtvK,QAAQ,kBAAkB,OAAOolK,EAAW4Q,SAAgBD,EAAUhvJ,MAAMgvJ,EAAU,GAAG/5K,MAAM,CAAE,OAAO,CAAC,CAAC,SAAS44K,EAAiB3P,EAAO55I,EAAM+5I,GAAY,IAAIn+G,EAAIg+G,EAAOrjK,QAAQ,KAAKypB,GAAO,GAAG47B,EAAI,CAAC,IAAIv/C,EAAMu9J,EAAOpyI,UAAUxH,EAAM47B,GAAKv/C,MAAM,8BAA8B,OAAGA,GAAeA,EAAM,GAAG1L,OAAOopK,EAAWmC,sBAAsB7/J,EAAM,GAAGA,EAAM,IAAWu/C,EAAI,IAAc,CAAE,CAAC,OAAO,CAAC,CAAC,SAAS6tH,EAAkB7P,GAAQ,CAAkjB,SAASgR,EAAYC,EAAK/zK,GAA8B,OAAtB+zK,EAAK/M,UAAUhnK,EAAc+zK,CAAI,CAAtqV/Q,EAAU7gK,UAAU,CAACU,MAAM,SAASigK,EAAOI,EAAaE,GAAW,IAAIH,EAAWhrK,KAAKgrK,WAAWA,EAAWgB,gBAAgBqP,EAAMpQ,EAAaA,EAAa,CAAC,GAAGrgK,EAAMigK,EAAOI,EAAaE,EAAUH,EAAWhrK,KAAKq8J,cAAc2O,EAAW4C,aAAa,GAAuzT8M,EAAkBxwK,UAAU,CAACgxK,WAAW,SAASrvC,GAAS,IAAIitC,EAAe59J,KAAK2wH,GAAU,MAAM,IAAIvsI,MAAM,mBAAmBusI,GAAS7rI,KAAK6rI,QAAQA,CAAO,EAAEnzH,IAAI,SAAS2zJ,EAAMh7J,EAAM8pJ,GAAQ,IAAI2d,EAAe59J,KAAKmxJ,GAAQ,MAAM,IAAI/sK,MAAM,qBAAqB+sK,GAAOrsK,KAAKA,KAAK4B,UAAU,CAACyqK,MAAMA,EAAMh7J,MAAMA,EAAM8pJ,OAAOA,EAAO,EAAEv5J,OAAO,EAAEm6K,aAAa,SAAS71K,GAAG,OAAOlG,KAAKkG,GAAGkmK,SAAS,EAAEO,WAAW,SAASzmK,GAAG,OAAOlG,KAAKkG,GAAG8jK,OAAO,EAAEyC,SAAS,SAASvmK,GAAG,OAAOlG,KAAKkG,GAAGmmK,KAAK,EAAEG,OAAO,SAAStmK,GAAG,OAAOlG,KAAKkG,GAAG+mK,GAAG,EAAEvxH,SAAS,SAASx1C,GAAG,OAAOlG,KAAKkG,GAAGmL,KAAK,GAA4EwqK,EAAY,CAAC,EAAEA,EAAY3xK,qBAAqB2xK,IAAcA,EAAY,SAASC,EAAK/zK,GAAQ,SAAS0S,IAAI,CAA4B,IAAI1S,KAA/B0S,EAAEvQ,UAAUnC,EAAO0S,EAAE,IAAIA,EAAgBqhK,EAAMrhK,EAAE1S,GAAQ+zK,EAAK/zK,GAAQ,OAAO0S,CAAC,GAAoN7a,EAAQmrK,UAAUA,CAAS,EAAE,CAAC,GAAG,2BAA2B,CAAC,SAASnjF,EAAQjoF,EAAOC,GAAS,aAAa,IAAIi4J,EAAa,WAAW,SAASC,EAAiB5+F,EAAOm2C,GAAO,IAAI,IAAInpG,EAAE,EAAEA,EAAEmpG,EAAMztG,OAAOsE,IAAI,CAAC,IAAI6xJ,EAAW1oD,EAAMnpG,GAAG6xJ,EAAWC,WAAWD,EAAWC,aAAY,EAAMD,EAAWE,cAAa,EAAQ,UAAUF,IAAWA,EAAWG,UAAS,GAAKz4J,OAAO04J,eAAej/F,EAAO6+F,EAAWt1J,IAAIs1J,EAAW,CAAC,CAAC,OAAO,SAASK,EAAYC,EAAWC,GAAuI,OAAvHD,GAAWP,EAAiBM,EAAYluJ,UAAUmuJ,GAAeC,GAAYR,EAAiBM,EAAYE,GAAoBF,CAAW,CAAC,CAAte,GAA0nB,IAAIX,EAAS7vE,EAAQ,eAAe6vE,EAASmG,OAAOh2E,EAAQ,YAAY6vE,EAASoG,cAAcj2E,EAAQ,oBAAoB,IAAIm2E,EAAQtG,EAASoG,cAAkB/0B,EAAc,WAAW,SAASA,IAAoD,GAAxY,SAAyB/uE,EAASq+F,GAAa,KAAKr+F,aAAoBq+F,GAAc,MAAM,IAAIW,UAAU,oCAAqC,CAAqNC,CAAgBh5J,KAAK8oI,GAAkBrjI,UAAU7D,OAAO,EAAG,MAAM,IAAItC,MAAM,2GAA2GU,KAAKg+J,SAAS,CAAC,EAAEh+J,KAAKi+J,QAAQ,GAAGj+J,KAAKm9F,WAAW,CAAC,EAAE,CAAq5G,OAAp5G06D,EAAa/uB,EAAc,CAAC,CAACrmI,IAAI,eAAe4O,MAAM,SAAsB1R,GAA2C,OAAnCK,KAAKi+J,QAAQ72J,KAAK22J,EAAQp+J,IAAgBK,IAAI,GAAG,CAACyC,IAAI,aAAa4O,MAAM,SAAoB9I,GAAS,IAAI88D,EAAMrlE,KAAsO,OAAjOA,KAAKuI,QAAQA,EAAQ9I,OAAOD,KAAKi4J,EAASj8H,UAAUx1B,SAAQ,SAASvD,GAAK,IAAI2lC,EAAaqvH,EAASj8H,SAAS/4B,GAAK4iE,EAAM5iE,GAAyB,MAApB4iE,EAAM98D,QAAQ9F,GAAW4iE,EAAM98D,QAAQ9F,GAAK2lC,CAAY,IAAMpoC,KAAKurI,KAAKvrI,KAAKs9K,uBAA8Bt9K,IAAI,GAAG,CAACyC,IAAI,UAAU4O,MAAM,SAAiBk6H,GAAK,GAAGA,EAAI8yB,UAAW,MAAM,IAAI/+J,MAAM,iEAA0G,OAAzCU,KAAKurI,IAAIA,EAAIvrI,KAAKs9K,uBAA8Bt9K,IAAI,GAAG,CAACyC,IAAI,cAAc4O,MAAM,SAAqBq4G,GAAU,IAAI40C,EAAYt+J,KAAKu+J,oBAAoB70C,GAAU40C,EAAY1zJ,QAAQ5K,KAAKg+J,SAASt0C,GAAU40C,CAAW,GAAG,CAAC77J,IAAI,UAAU4O,MAAM,WAAuF,OAApErR,KAAKw+J,eAAex+J,KAAKk+J,eAAeO,kBAAkBz+J,KAAKurI,KAAYvrI,IAAI,GAAG,CAACyC,IAAI,uBAAuB4O,MAAM,WAA6L,OAA7JrR,KAAK0kD,SAAS1kD,KAAKurI,IAAIiuB,MAAM,qBAAqB,OAAO,OAAOx5J,KAAKk+J,eAAel+J,KAAKuI,QAAQ21J,gBAAgBp1B,EAAcq1B,eAAen+J,KAAK0kD,UAAiB1kD,IAAI,GAAG,CAACyC,IAAI,SAAS4O,MAAM,WAAkB,IAAIqtJ,EAAO1+J,KAAmzC,OAA9yCA,KAAKuI,QAAQ61J,aAAa,GAAGp+J,KAAKi+J,QAAQj+J,KAAKk+J,eAAeS,YAAY7/J,KAAI,SAAS8/J,GAAgB,OAAOA,GAAgB,IAAGjlJ,OAAO3Z,KAAKi+J,SAASj+J,KAAKuI,QAAQvI,KAAKi+J,QAAQnE,QAAO,SAASvxJ,EAAQ5I,GAAQ,OAAOA,EAAOk/J,mBAAmBt2J,EAAQm2J,EAAO,GAAE1+J,KAAKuI,SAASvI,KAAK84J,aAAa94J,KAAKuI,QAAQ61J,aAAatE,QAAO,SAAShB,EAAapvC,GAAU,IAAIrnF,EAAQq8H,EAAOnzB,IAAIiuB,MAAM9vC,GAAUo1C,SAA0D,OAAjDhG,EAAapvC,GAAU+tC,EAASgC,QAAQp3H,GAAgBy2H,CAAY,GAAE,CAAC,GAAG94J,KAAKi+J,QAAQj4J,SAAQ,SAASrG,GAAQA,EAAOsQ,IAAI,CAACs7H,IAAImzB,EAAOnzB,IAAIutB,aAAa4F,EAAO5F,aAAa13J,KAAKs9J,EAAOt9J,MAAM,IAAGpB,KAAK++J,UAAU/+J,KAAKi+J,QAAQj4J,SAAQ,SAASrG,GAAQA,EAAOsQ,IAAI,CAAC+tJ,SAASU,EAAOV,UAAU,IAAGh+J,KAAKw+J,eAAex4J,SAAQ,SAAS0jH,GAAyC,MAA5Bg1C,EAAOnzB,IAAIiuB,MAAM9vC,IAAiBg1C,EAAOM,YAAYt1C,EAAU,IAAG1pH,KAAKi/J,OAAOj/J,KAAKi+J,QAAQnE,QAAO,SAASzoJ,EAAM1R,GAAQ,OAAOA,EAAOu/J,eAAe7tJ,EAAM,GAAE,CAAC,GAAG5R,OAAOD,KAAKQ,KAAKi/J,QAAQj5J,SAAQ,SAASonC,GAAI,IAAI+xH,EAAOT,EAAOO,OAAO7xH,GAAQE,EAAK6xH,EAAO7xH,KAASgxH,EAAYI,EAAOV,SAAS1wH,GAAMgxH,EAAYc,QAAQD,EAAO/9J,MAAMk9J,EAAYziF,OAAOzuC,GAAIsxH,EAAOnzB,IAAI/mD,KAAKp3C,EAAGkxH,EAAYj8H,QAAQ,IAAG5iC,OAAOD,KAAKQ,KAAK84J,cAAc9yJ,SAAQ,SAAS0jH,GAAUg1C,EAAOnzB,IAAIh6H,OAAOm4G,GAAU,IAAIrnF,EAAQo1H,EAASiC,QAAQgF,EAAO5F,aAAapvC,IAAW,OAAOg1C,EAAOnzB,IAAI/mD,KAAKklC,EAASrnF,EAAQ,CAAC,EAAE,IAAUriC,IAAI,GAAG,CAACyC,IAAI,UAAU4O,MAAM,SAAiBjQ,GAAqB,OAAfpB,KAAKoB,KAAKA,EAAYpB,IAAI,GAAG,CAACyC,IAAI,SAAS4O,MAAM,WAAkB,OAAOrR,KAAKurI,GAAG,GAAG,CAAC9oI,IAAI,sBAAsB4O,MAAM,SAA6BiuD,GAAM,IAAI+/F,EAASr/J,KAAKurI,IAAIiuB,MAAMl6F,GAAMw/F,SAAS,OAAO9+J,KAAKs/J,+BAA+BD,EAAS//F,EAAK,GAAG,CAAC78D,IAAI,iCAAiC4O,MAAM,SAAwCgxB,EAAQk9H,GAAU,IAAIC,EAAOx/J,KAASy/J,EAAY,CAACF,SAASA,GAA8K,OAApK9/J,OAAOD,KAAKi4J,EAASj8H,UAAUx1B,SAAQ,SAASvD,GAAKg9J,EAAYh9J,GAAK+8J,EAAO/8J,EAAI,IAAGg9J,EAAYvB,eAAel+J,KAAKk+J,eAAeuB,EAAYxB,QAAQj+J,KAAKi+J,QAAe,IAAIn1B,EAAc42B,aAAar9H,EAAQo9H,EAAY,GAAG,CAACh9J,IAAI,cAAc4O,MAAM,SAAqBiuD,GAAM,OAAOt/D,KAAKu+J,oBAAoBj/F,GAAMt/D,KAAKk+J,eAAeyB,UAAUC,aAAa,GAAG,CAACn9J,IAAI,oBAAoB4O,MAAM,WAA4C,OAAfrR,KAAK++J,UAAiB/+J,KAAKw+J,cAAc,KAAY11B,CAAa,CAAvrH,GAA2rHA,EAAc2uB,SAAS7vE,EAAQ,eAAekhD,EAAcwyB,OAAO1zE,EAAQ,YAAYkhD,EAAc42B,aAAa93E,EAAQ,mBAAmBkhD,EAAcq1B,eAAev2E,EAAQ,sBAAsBkhD,EAAc+2B,WAAWj4E,EAAQ,iBAAiBjoF,EAAOC,QAAQkpI,CAAa,EAAE,CAAC,cAAc,EAAE,WAAW,EAAE,qBAAqB,EAAE,mBAAmB,EAAE,WAAW,GAAG,gBAAgB,GAAG,kBAAkB,MAAM,CAAC,EAAE,GAAnkiF,CAAukiF,uCCWr3iFnpI,EAAOC,QAA2N,SAASghB,EAAEC,EAAEqiB,EAAE5V,GAAG,SAASjuB,EAAEsxH,EAAEvvG,GAAG,IAAI8hB,EAAEytF,GAAG,CAAC,IAAI9vG,EAAE8vG,GAAG,CAAmE,GAAGjvG,EAAE,OAAOA,EAAEivG,GAAE,GAAI,IAAI5pF,EAAE,IAAIznC,MAAM,uBAAuBqxH,EAAE,KAAK,MAAM5pF,EAAExnC,KAAK,mBAAmBwnC,CAAC,CAAC,IAAI9/B,EAAEi8B,EAAEytF,GAAG,CAAC/wH,QAAQ,CAAC,GAAGihB,EAAE8vG,GAAG,GAAGxmH,KAAKlD,EAAErH,SAAQ,SAASghB,GAAoB,OAAOvhB,EAAlBwhB,EAAE8vG,GAAG,GAAG/vG,IAAgBA,EAAE,GAAE3Z,EAAEA,EAAErH,QAAQghB,EAAEC,EAAEqiB,EAAE5V,EAAE,CAAC,OAAO4V,EAAEytF,GAAG/wH,OAAO,CAAC,IAAI,IAAI8hB,OAAE,EAAoCivG,EAAE,EAAEA,EAAErjG,EAAE1rB,OAAO+uH,IAAItxH,EAAEiuB,EAAEqjG,IAAI,OAAOtxH,CAAC,CAAnb,CAAqb,CAAC,EAAE,CAAC,SAASuhB,EAAEC,EAAEqiB,GAAG,aAAa,SAAS5V,EAAE1M,GAAG,GAAGA,EAAE,CAAC5gB,KAAKoB,KAAKwf,EAAE5gB,KAAK4B,OAAO5B,KAAKoB,KAAKQ,OAAO5B,KAAK2sB,MAAM,EAAE3sB,KAAKu9K,KAAK,EAAE,IAAI,IAAI18J,EAAE,EAAEA,EAAE7gB,KAAKoB,KAAKQ,OAAOif,IAAID,EAAEC,GAAG,IAAID,EAAEC,EAAE,CAAC,CAAC,IAAIxhB,EAAEuhB,EAAE,gBAAgB0M,EAAEpjB,UAAU,IAAI7K,EAAEiuB,EAAEpjB,UAAUszK,OAAO,SAAS58J,GAAG,OAAO5gB,KAAKoB,KAAKpB,KAAKu9K,KAAK38J,EAAE,EAAE0M,EAAEpjB,UAAUuzK,qBAAqB,SAAS78J,GAAG,IAAI,IAAIC,EAAED,EAAE0xJ,WAAW,GAAGpvI,EAAEtiB,EAAE0xJ,WAAW,GAAGhlJ,EAAE1M,EAAE0xJ,WAAW,GAAGjzK,EAAEuhB,EAAE0xJ,WAAW,GAAG5wJ,EAAE1hB,KAAK4B,OAAO,EAAE8f,GAAG,IAAIA,EAAE,GAAG1hB,KAAKoB,KAAKsgB,KAAKb,GAAG7gB,KAAKoB,KAAKsgB,EAAE,KAAKwhB,GAAGljC,KAAKoB,KAAKsgB,EAAE,KAAK4L,GAAGttB,KAAKoB,KAAKsgB,EAAE,KAAKriB,EAAE,OAAOqiB,EAAE1hB,KAAKu9K,KAAK,OAAO,CAAC,EAAEjwJ,EAAEpjB,UAAUwzK,SAAS,SAAS98J,GAAG,GAAG5gB,KAAK29K,YAAY/8J,GAAG,IAAIA,EAAE,MAAM,GAAG,IAAIC,EAAE7gB,KAAKoB,KAAK0E,MAAM9F,KAAKu9K,KAAKv9K,KAAK2sB,MAAM3sB,KAAKu9K,KAAKv9K,KAAK2sB,MAAM/L,GAAG,OAAO5gB,KAAK2sB,OAAO/L,EAAEC,CAAC,EAAEA,EAAEjhB,QAAQ0tB,CAAC,EAAE,CAAC,eAAe,IAAI,EAAE,CAAC,SAAS1M,EAAEC,EAAEqiB,GAAG,aAAa,IAAI5V,EAAE,oEAAoE4V,EAAE06I,OAAO,SAASh9J,EAAEC,GAAG,IAAI,IAAIqiB,EAAE7jC,EAAEqiB,EAAEivG,EAAEvvG,EAAElb,EAAE6gC,EAAE9/B,EAAE,GAAGC,EAAE,EAAEA,EAAE0Z,EAAEhf,QAAoE+uH,GAA5DztF,EAAEtiB,EAAE0xJ,WAAWprK,OAAkD,EAAEka,GAAG,EAAE8hB,IAAI,GAAxD7jC,EAAEuhB,EAAE0xJ,WAAWprK,OAA8C,EAAEhB,GAAG,GAAG7G,IAAI,GAArDqiB,EAAEd,EAAE0xJ,WAAWprK,OAA2C,EAAE6/B,EAAE,GAAGrlB,EAAE6uB,MAAMlxC,GAAG6G,EAAE6gC,EAAE,GAAGwJ,MAAM7uB,KAAKqlB,EAAE,IAAI9/B,EAAEA,EAAEqmB,EAAEk/B,OAAOmkE,GAAGrjG,EAAEk/B,OAAOprC,GAAGkM,EAAEk/B,OAAOtmD,GAAGonB,EAAEk/B,OAAOzlB,GAAG,OAAO9/B,CAAC,EAAEi8B,EAAE26I,OAAO,SAASj9J,EAAEC,GAAG,IAAIqiB,EAAE7jC,EAAEqiB,EAAIN,EAAElb,EAAE6gC,EAAE9/B,EAAE,GAAGC,EAAE,EAAE,IAAI0Z,EAAEA,EAAEhb,QAAQ,sBAAsB,IAAIsB,EAAE0Z,EAAEhf,QAAoHshC,EAA1G5V,EAAE9lB,QAAQoZ,EAAE4rC,OAAOtlD,OAA4F,GAAtFka,EAAEkM,EAAE9lB,QAAQoZ,EAAE4rC,OAAOtlD,QAAsE,EAAE7H,GAAG,GAAG+hB,IAAI,GAA5Elb,EAAEonB,EAAE9lB,QAAQoZ,EAAE4rC,OAAOtlD,QAA4D,EAAEwa,GAAG,EAAExb,IAAI,GAAjE6gC,EAAEzZ,EAAE9lB,QAAQoZ,EAAE4rC,OAAOtlD,OAAgDD,GAAG6K,OAAOsrJ,aAAal6H,GAAG,IAAIh9B,IAAIe,GAAG6K,OAAOsrJ,aAAa/9J,IAAI,IAAI0nC,IAAI9/B,GAAG6K,OAAOsrJ,aAAa17I,IAAI,OAAOza,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,SAAS2Z,EAAEC,EAAEqiB,GAAG,aAAa,SAAS5V,IAAIttB,KAAK89K,eAAe,EAAE99K,KAAK+9K,iBAAiB,EAAE/9K,KAAKg+K,MAAM,EAAEh+K,KAAKi+K,kBAAkB,KAAKj+K,KAAKk+K,kBAAkB,IAAI,CAAC5wJ,EAAEpjB,UAAU,CAACi0K,WAAW,WAAW,OAAO,IAAI,EAAEC,qBAAqB,WAAW,OAAO,IAAI,GAAGv9J,EAAEjhB,QAAQ0tB,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,SAAS1M,EAAEC,EAAEqiB,GAAG,aAAaA,EAAEm7I,MAAM,CAACC,MAAM,OAAOC,SAAS,SAAS39J,EAAEC,GAAG,OAAOD,CAAC,EAAE49J,WAAW,SAAS59J,GAAG,OAAOA,CAAC,EAAE69J,kBAAkB,KAAKC,oBAAoB,MAAMx7I,EAAEy7I,QAAQ/9J,EAAE,UAAU,EAAE,CAAC,UAAU,IAAI,EAAE,CAAC,SAASA,EAAEC,EAAEqiB,GAAG,aAAa,IAAI5V,EAAE1M,EAAE,WAAWvhB,EAAE,CAAC,EAAE,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,SAAS,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,SAAS,WAAW,WAAW,WAAW,SAAS,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,SAAS,WAAW,WAAW,WAAW,SAAS,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,SAAS,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,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","sources":["webpack://ab_platform_web/./node_modules/moment/locale/ sync ^\\.\\/.*$","webpack://ab_platform_web/./resources/Account.js","webpack://ab_platform_web/./AppBuilder/_factory_utils/Dialog.js","webpack://ab_platform_web/./resources/Multilingual.js","webpack://ab_platform_web/./resources/NetworkRest.js","webpack://ab_platform_web/./resources/NetworkRestSocket.js","webpack://ab_platform_web/./resources/Network.js","webpack://ab_platform_web/./resources/StorageLocal.js","webpack://ab_platform_web/./resources/Storage.js","webpack://ab_platform_web/./resources/Tenant.js","webpack://ab_platform_web/./AppBuilder/uiSettings/configDesktop.js","webpack://ab_platform_web/./AppBuilder/uiSettings/configMobile.js","webpack://ab_platform_web/./AppBuilder/uiSettings/config.js","webpack://ab_platform_web/./AppBuilder/uiSettings/icons.js","webpack://ab_platform_web/./AppBuilder/ABFactory.js","webpack://ab_platform_web/./AppBuilder/core/ABApplicationCore.js","webpack://ab_platform_web/./AppBuilder/core/ABApplicationMobileCore.js","webpack://ab_platform_web/./AppBuilder/core/ABDataCollectionCore.js","webpack://ab_platform_web/./AppBuilder/core/ABDefinitionCore.js","webpack://ab_platform_web/./AppBuilder/core/ABFactoryCore.js","webpack://ab_platform_web/./AppBuilder/core/ABFieldManager.js","webpack://ab_platform_web/./AppBuilder/core/ABHintCore.js","webpack://ab_platform_web/./AppBuilder/core/ABIndexCore.js","webpack://ab_platform_web/./AppBuilder/core/ABMLClassCore.js","webpack://ab_platform_web/./AppBuilder/core/ABModelCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectApiCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectApiNetsuiteCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectQueryCore.js","webpack://ab_platform_web/./AppBuilder/core/ABProcessCore.js","webpack://ab_platform_web/./AppBuilder/core/ABStepCore.js","webpack://ab_platform_web/./AppBuilder/core/ABViewManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/ABViewManagerMobileCore.js","webpack://ab_platform_web/./AppBuilder/core/FilterComplexCore.js","webpack://ab_platform_web/./AppBuilder/core/RowFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldAutoIndexCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldBooleanCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCalculateCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCombineCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldDateCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldDateTimeCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldFileCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldImageCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldJsonCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldListCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldLongTextCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldStringCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldTextFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldUserCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobilePageCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormButtonCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormDateCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormDatetimeCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormFileCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormImageCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormItemCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormReadonlyCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormSelectMultipleCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormSelectSingleCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormTextboxCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewLabelCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewListCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewTimelineCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessLaneCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessParticipantCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessTaskManager.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessElementCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessEndCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessGatewayExclusiveCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingBatchProcessingCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingFPCloseCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingFPYearCloseCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingJEArchiveCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceCalculateCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceGetResetPasswordUrlCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceInsertRecordCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceQueryCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskSubProcessCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserApprovalCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserExternalCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserFormCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerLifecycleCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerTimerCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLFindCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRootObjectCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRow.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowPluckCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowSaveCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowUpdateCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSet.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetFirstCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetPluckCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetSaveCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCSVExporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCSVImporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCarouselCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartAreaCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartBarCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartLineCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartPieCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCommentCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewConditionalContainerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewConnectDataFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewContainerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDataFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDataSelectCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDataviewCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailImageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailItemCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailTextCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDocxBuilderCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormButtonCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormDatepickerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormItemCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormJsonCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormReadonlyCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormSelectMultipleCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormSelectSingleCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormTextboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewGanttCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewGridCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewImageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewKanbanCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewLabelCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewLayoutCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewListCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewMenuCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPDFImporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPivotCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewReportsManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewSchedulerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewTabCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewTextCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewWidgetCore.js","webpack://ab_platform_web/./AppBuilder/platform/ABApplication.js","webpack://ab_platform_web/./AppBuilder/platform/ABApplicationMobile.js","webpack://ab_platform_web/./AppBuilder/platform/ABComponent.js","webpack://ab_platform_web/./AppBuilder/platform/ABDataCollection.js","webpack://ab_platform_web/./AppBuilder/platform/ABDefinition.js","webpack://ab_platform_web/./AppBuilder/platform/ABEmitter.js","webpack://ab_platform_web/./AppBuilder/platform/ABHint.js","webpack://ab_platform_web/./AppBuilder/platform/ABIndex.js","webpack://ab_platform_web/./AppBuilder/platform/ABMLClass.js","webpack://ab_platform_web/./AppBuilder/platform/ABModel.js","webpack://ab_platform_web/./AppBuilder/platform/ABModelApi.js","webpack://ab_platform_web/./AppBuilder/platform/ABModelApiNetsuite.js","webpack://ab_platform_web/./AppBuilder/platform/ABModelQuery.js","webpack://ab_platform_web/./AppBuilder/platform/ABObject.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectApi.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectApiNetsuite.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectExternal.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectImport.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectQuery.js","webpack://ab_platform_web/./AppBuilder/platform/ABProcess.js","webpack://ab_platform_web/./AppBuilder/platform/ABStep.js","webpack://ab_platform_web/./AppBuilder/platform/ABViewManager.js","webpack://ab_platform_web/./AppBuilder/platform/ABViewManagerMobile.js","webpack://ab_platform_web/./AppBuilder/platform/CSVImporter.js","webpack://ab_platform_web/./AppBuilder/platform/FilterComplex.js","webpack://ab_platform_web/./AppBuilder/platform/RowFilter.js","webpack://ab_platform_web/./AppBuilder/platform/RowUpdater.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABField.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldAutoIndex.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldBoolean.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldCalculate.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldCombine.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldConnect.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldDate.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldDateTime.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldEmail.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldFile.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldFormula.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldImage.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldJson.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldList.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldLongText.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldNumber.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldSelectivity.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldString.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldTextFormula.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldTree.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldUser.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobilePage.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileView.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewCustom.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewForm.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormButton.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormConnect.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormCustom.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormDate.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormDatetime.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormEmail.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormFile.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormFormula.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormImage.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormItem.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormNumber.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormReadonly.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormSelectMultiple.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormSelectSingle.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormTextbox.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewLabel.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewList.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewTimeline.js","webpack://ab_platform_web/./AppBuilder/platform/process/ABProcessLane.js","webpack://ab_platform_web/./AppBuilder/platform/process/ABProcessParticipant.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessElement.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessEnd.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessGatewayExclusive.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskEmail.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskService.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingBatchProcessing.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingFPClose.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingFPYearClose.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingJEArchive.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceCalculate.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceGetResetPasswordUrl.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceInsertRecord.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceQuery.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskSubProcess.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUser.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUserApproval.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUserExternal.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUserForm.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTrigger.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTriggerLifecycle.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTriggerTimer.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQL.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLFind.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLManager.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRootObject.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowPluck.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowSave.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowUpdate.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetFirst.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetPluck.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetSave.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABView.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCSVExporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCSVImporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCarouselComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCarousel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChart.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartArea.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartBar.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartLine.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartPie.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewComment.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewConditionalContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewConnectDataFilterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewConnectDataFilter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDataFilterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDataFilter.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDataSelectComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDataSelect.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDataview.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetail.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailConnect.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailCustom.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailImage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailItem.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailText.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailTree.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDocxBuilder.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewForm.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormButton.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormConnect.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormCustom.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormDatepicker.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormItem.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormJson.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormNumber.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormReadonly.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormSelectMultiple.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormSelectSingle.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormTextbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormTree.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewGanttComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGantt.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupExport.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupMassUpdate.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewGridComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGrid.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupSortFields.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewImage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewKanban.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewKanbanFormSidePanel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewLabel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewLayout.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewList.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewMenu.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPDFImporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPivot.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewReportsManager.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewScheduler.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewTab.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewText.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewWidget.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCSVExporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCSVImporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartAreaComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartBarComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartLineComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartPieComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCommentComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewConditionalContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDataviewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailCheckboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailConnectComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailCustomComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailImageComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailItemComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailTextComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailTreeComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDocxBuilderComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormButtonComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormCheckboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormConnectComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormCustomComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormDatepickerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormItemComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormJsonComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormNumberComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormReadonlyComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormSelectMultipleComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormSelectSingleComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormTextboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormTreeComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewImageComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewKanbanComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewLabelComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewLayoutComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewListComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewMenuComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewPDFImporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewPivotComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewReportsManagerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewSchedulerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewTabComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewTextComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewProperty.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyAddPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyEditPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyFilterData.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyLinkPage.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewQueryBuilderObjectFieldConditions.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRule.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleAction.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleList.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleListFormRecordRules.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleListFormSubmitRules.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleInsertConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleRemoveConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleUpdate.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleUpdateConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleClosePopup.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleConfirmMessage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleEmail.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleExistPage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleParentPage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleWebsite.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionObjectUpdater.js","webpack://ab_platform_web/./js/docxtemplater-image-module.v3.0.2.min.js","webpack://ab_platform_web/./js/docxtemplater.v3.0.12.min.js","webpack://ab_platform_web/./js/jszip.min.js","webpack://ab_platform_web/./webix_custom_components/activelist.js","webpack://ab_platform_web/./webix_custom_components/countfooter.js","webpack://ab_platform_web/./webix_custom_components/customComponentManager.js","webpack://ab_platform_web/./webix_custom_components/datetimepicker.js","webpack://ab_platform_web/./webix_custom_components/editlist.js","webpack://ab_platform_web/./webix_custom_components/edittree.js","webpack://ab_platform_web/./webix_custom_components/editunitlist.js","webpack://ab_platform_web/./webix_custom_components/focusableTemplate.js","webpack://ab_platform_web/./webix_custom_components/formioBuilder.js","webpack://ab_platform_web/./webix_custom_components/formioPreview.js","webpack://ab_platform_web/./webix_custom_components/lazyComponent.js","webpack://ab_platform_web/./webix_custom_components/numbertext.js","webpack://ab_platform_web/./webix_custom_components/thaicalendar.js","webpack://ab_platform_web/./webix_custom_components/timepicker.js","webpack://ab_platform_web/./webix_custom_components/tinyMce.js","webpack://ab_platform_web/./webix_custom_components/totalfooter.js","webpack://ab_platform_web/./webix_custom_components/treesuggest.js"],"sourcesContent":["var map = {\n\t\"./af\": 19183,\n\t\"./af.js\": 19183,\n\t\"./ar\": 31035,\n\t\"./ar-dz\": 47214,\n\t\"./ar-dz.js\": 47214,\n\t\"./ar-kw\": 40830,\n\t\"./ar-kw.js\": 40830,\n\t\"./ar-ly\": 68899,\n\t\"./ar-ly.js\": 68899,\n\t\"./ar-ma\": 77258,\n\t\"./ar-ma.js\": 77258,\n\t\"./ar-ps\": 19121,\n\t\"./ar-ps.js\": 19121,\n\t\"./ar-sa\": 64096,\n\t\"./ar-sa.js\": 64096,\n\t\"./ar-tn\": 97826,\n\t\"./ar-tn.js\": 97826,\n\t\"./ar.js\": 31035,\n\t\"./az\": 20051,\n\t\"./az.js\": 20051,\n\t\"./be\": 23813,\n\t\"./be.js\": 23813,\n\t\"./bg\": 64323,\n\t\"./bg.js\": 64323,\n\t\"./bm\": 57837,\n\t\"./bm.js\": 57837,\n\t\"./bn\": 75780,\n\t\"./bn-bd\": 25959,\n\t\"./bn-bd.js\": 25959,\n\t\"./bn.js\": 75780,\n\t\"./bo\": 81451,\n\t\"./bo.js\": 81451,\n\t\"./br\": 76480,\n\t\"./br.js\": 76480,\n\t\"./bs\": 91607,\n\t\"./bs.js\": 91607,\n\t\"./ca\": 23232,\n\t\"./ca.js\": 23232,\n\t\"./cs\": 91034,\n\t\"./cs.js\": 91034,\n\t\"./cv\": 54213,\n\t\"./cv.js\": 54213,\n\t\"./cy\": 95800,\n\t\"./cy.js\": 95800,\n\t\"./da\": 40739,\n\t\"./da.js\": 40739,\n\t\"./de\": 66951,\n\t\"./de-at\": 82181,\n\t\"./de-at.js\": 82181,\n\t\"./de-ch\": 61339,\n\t\"./de-ch.js\": 61339,\n\t\"./de.js\": 66951,\n\t\"./dv\": 16938,\n\t\"./dv.js\": 16938,\n\t\"./el\": 59573,\n\t\"./el.js\": 59573,\n\t\"./en-au\": 62458,\n\t\"./en-au.js\": 62458,\n\t\"./en-ca\": 51816,\n\t\"./en-ca.js\": 51816,\n\t\"./en-gb\": 8069,\n\t\"./en-gb.js\": 8069,\n\t\"./en-ie\": 15586,\n\t\"./en-ie.js\": 15586,\n\t\"./en-il\": 60009,\n\t\"./en-il.js\": 60009,\n\t\"./en-in\": 51207,\n\t\"./en-in.js\": 51207,\n\t\"./en-nz\": 83724,\n\t\"./en-nz.js\": 83724,\n\t\"./en-sg\": 1953,\n\t\"./en-sg.js\": 1953,\n\t\"./eo\": 1292,\n\t\"./eo.js\": 1292,\n\t\"./es\": 66328,\n\t\"./es-do\": 61452,\n\t\"./es-do.js\": 61452,\n\t\"./es-mx\": 94444,\n\t\"./es-mx.js\": 94444,\n\t\"./es-us\": 81285,\n\t\"./es-us.js\": 81285,\n\t\"./es.js\": 66328,\n\t\"./et\": 7181,\n\t\"./et.js\": 7181,\n\t\"./eu\": 62830,\n\t\"./eu.js\": 62830,\n\t\"./fa\": 19565,\n\t\"./fa.js\": 19565,\n\t\"./fi\": 85541,\n\t\"./fi.js\": 85541,\n\t\"./fil\": 65661,\n\t\"./fil.js\": 65661,\n\t\"./fo\": 26087,\n\t\"./fo.js\": 26087,\n\t\"./fr\": 25396,\n\t\"./fr-ca\": 96581,\n\t\"./fr-ca.js\": 96581,\n\t\"./fr-ch\": 81294,\n\t\"./fr-ch.js\": 81294,\n\t\"./fr.js\": 25396,\n\t\"./fy\": 12533,\n\t\"./fy.js\": 12533,\n\t\"./ga\": 55796,\n\t\"./ga.js\": 55796,\n\t\"./gd\": 50847,\n\t\"./gd.js\": 50847,\n\t\"./gl\": 60439,\n\t\"./gl.js\": 60439,\n\t\"./gom-deva\": 46514,\n\t\"./gom-deva.js\": 46514,\n\t\"./gom-latn\": 66525,\n\t\"./gom-latn.js\": 66525,\n\t\"./gu\": 34232,\n\t\"./gu.js\": 34232,\n\t\"./he\": 50915,\n\t\"./he.js\": 50915,\n\t\"./hi\": 22095,\n\t\"./hi.js\": 22095,\n\t\"./hr\": 10762,\n\t\"./hr.js\": 10762,\n\t\"./hu\": 88275,\n\t\"./hu.js\": 88275,\n\t\"./hy-am\": 73094,\n\t\"./hy-am.js\": 73094,\n\t\"./id\": 27769,\n\t\"./id.js\": 27769,\n\t\"./is\": 99676,\n\t\"./is.js\": 99676,\n\t\"./it\": 74313,\n\t\"./it-ch\": 25141,\n\t\"./it-ch.js\": 25141,\n\t\"./it.js\": 74313,\n\t\"./ja\": 11985,\n\t\"./ja.js\": 11985,\n\t\"./jv\": 53908,\n\t\"./jv.js\": 53908,\n\t\"./ka\": 32808,\n\t\"./ka.js\": 32808,\n\t\"./kk\": 33930,\n\t\"./kk.js\": 33930,\n\t\"./km\": 71532,\n\t\"./km.js\": 71532,\n\t\"./kn\": 69461,\n\t\"./kn.js\": 69461,\n\t\"./ko\": 60502,\n\t\"./ko.js\": 60502,\n\t\"./ku\": 18660,\n\t\"./ku-kmr\": 58035,\n\t\"./ku-kmr.js\": 58035,\n\t\"./ku.js\": 18660,\n\t\"./ky\": 83088,\n\t\"./ky.js\": 83088,\n\t\"./lb\": 65742,\n\t\"./lb.js\": 65742,\n\t\"./lo\": 25417,\n\t\"./lo.js\": 25417,\n\t\"./lt\": 64968,\n\t\"./lt.js\": 64968,\n\t\"./lv\": 41202,\n\t\"./lv.js\": 41202,\n\t\"./me\": 34438,\n\t\"./me.js\": 34438,\n\t\"./mi\": 18498,\n\t\"./mi.js\": 18498,\n\t\"./mk\": 6744,\n\t\"./mk.js\": 6744,\n\t\"./ml\": 63949,\n\t\"./ml.js\": 63949,\n\t\"./mn\": 4459,\n\t\"./mn.js\": 4459,\n\t\"./mr\": 46679,\n\t\"./mr.js\": 46679,\n\t\"./ms\": 56960,\n\t\"./ms-my\": 47483,\n\t\"./ms-my.js\": 47483,\n\t\"./ms.js\": 56960,\n\t\"./mt\": 99989,\n\t\"./mt.js\": 99989,\n\t\"./my\": 64978,\n\t\"./my.js\": 64978,\n\t\"./nb\": 88460,\n\t\"./nb.js\": 88460,\n\t\"./ne\": 23993,\n\t\"./ne.js\": 23993,\n\t\"./nl\": 95378,\n\t\"./nl-be\": 62678,\n\t\"./nl-be.js\": 62678,\n\t\"./nl.js\": 95378,\n\t\"./nn\": 67560,\n\t\"./nn.js\": 67560,\n\t\"./oc-lnc\": 87060,\n\t\"./oc-lnc.js\": 87060,\n\t\"./pa-in\": 62187,\n\t\"./pa-in.js\": 62187,\n\t\"./pl\": 93532,\n\t\"./pl.js\": 93532,\n\t\"./pt\": 49396,\n\t\"./pt-br\": 92485,\n\t\"./pt-br.js\": 92485,\n\t\"./pt.js\": 49396,\n\t\"./ro\": 33179,\n\t\"./ro.js\": 33179,\n\t\"./ru\": 93797,\n\t\"./ru.js\": 93797,\n\t\"./sd\": 40675,\n\t\"./sd.js\": 40675,\n\t\"./se\": 59036,\n\t\"./se.js\": 59036,\n\t\"./si\": 59160,\n\t\"./si.js\": 59160,\n\t\"./sk\": 31266,\n\t\"./sk.js\": 31266,\n\t\"./sl\": 74699,\n\t\"./sl.js\": 74699,\n\t\"./sq\": 69728,\n\t\"./sq.js\": 69728,\n\t\"./sr\": 87129,\n\t\"./sr-cyrl\": 55000,\n\t\"./sr-cyrl.js\": 55000,\n\t\"./sr.js\": 87129,\n\t\"./ss\": 74346,\n\t\"./ss.js\": 74346,\n\t\"./sv\": 9877,\n\t\"./sv.js\": 9877,\n\t\"./sw\": 918,\n\t\"./sw.js\": 918,\n\t\"./ta\": 24787,\n\t\"./ta.js\": 24787,\n\t\"./te\": 6199,\n\t\"./te.js\": 6199,\n\t\"./tet\": 91851,\n\t\"./tet.js\": 91851,\n\t\"./tg\": 33881,\n\t\"./tg.js\": 33881,\n\t\"./th\": 87828,\n\t\"./th.js\": 87828,\n\t\"./tk\": 99677,\n\t\"./tk.js\": 99677,\n\t\"./tl-ph\": 29253,\n\t\"./tl-ph.js\": 29253,\n\t\"./tlh\": 95586,\n\t\"./tlh.js\": 95586,\n\t\"./tr\": 17254,\n\t\"./tr.js\": 17254,\n\t\"./tzl\": 61192,\n\t\"./tzl.js\": 61192,\n\t\"./tzm\": 69631,\n\t\"./tzm-latn\": 72841,\n\t\"./tzm-latn.js\": 72841,\n\t\"./tzm.js\": 69631,\n\t\"./ug-cn\": 71720,\n\t\"./ug-cn.js\": 71720,\n\t\"./uk\": 28048,\n\t\"./uk.js\": 28048,\n\t\"./ur\": 86751,\n\t\"./ur.js\": 86751,\n\t\"./uz\": 96343,\n\t\"./uz-latn\": 60513,\n\t\"./uz-latn.js\": 60513,\n\t\"./uz.js\": 96343,\n\t\"./vi\": 44821,\n\t\"./vi.js\": 44821,\n\t\"./x-pseudo\": 23973,\n\t\"./x-pseudo.js\": 23973,\n\t\"./yo\": 15000,\n\t\"./yo.js\": 15000,\n\t\"./zh-cn\": 43762,\n\t\"./zh-cn.js\": 43762,\n\t\"./zh-hk\": 9246,\n\t\"./zh-hk.js\": 9246,\n\t\"./zh-mo\": 41107,\n\t\"./zh-mo.js\": 41107,\n\t\"./zh-tw\": 79014,\n\t\"./zh-tw.js\": 79014\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 35358;","var EventEmitter = require(\"events\").EventEmitter;\n\nclass Account extends EventEmitter {\n   constructor() {\n      super();\n\n      this.isAuthenticated = false;\n      this._config = null;\n\n      this._listRoles = null;\n      // {array}\n      // a list of all the Defined Roles in the Tenant's system.\n\n      this._listScopes = null;\n      // {array | null}\n      // a list of all the Defined Scopes in the Tenant's sytem.\n\n      this._listUsers = null;\n      // {array | null}\n      // a list of all the Defined Users in the Tenant's system.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var UserConfig = this.AB.Config.userConfig();\n      if (UserConfig) {\n         this.isAuthenticated = true;\n         this._config = UserConfig;\n      }\n\n      var MetaConfig = this.AB.Config.metaConfig();\n      if (MetaConfig) {\n         this._listRoles = MetaConfig.roles || [];\n         this._listScopes = MetaConfig.scopes || [];\n         this._listUsers = MetaConfig.users || [];\n      }\n\n      this.AB.Network.on(\"account.logout\", (context, err, data) => {\n         if (err) {\n            console.error(err);\n            return;\n         }\n         this.emit(\"logout\", data);\n      });\n\n      return Promise.resolve();\n   }\n\n   canSwitcheroo() {\n      return (\n         this.roles((r) => r.uuid === \"320ef94a-73b5-476e-9db4-c08130c64bb8\")\n            .length > 0\n      );\n   }\n\n   isSwitcherood() {\n      return this.AB.Config.userReal();\n   }\n\n   isSystemDesigner() {\n      return (\n         this.roles((r) => r.uuid === \"6cc04894-a61b-4fb5-b3e5-b8c3f78bd331\")\n            .length > 0\n      );\n   }\n\n   email() {\n      return this._config?.email ?? \"\";\n   }\n\n   language() {\n      return this._config?.languageCode ?? \"en\";\n   }\n\n   logout() {\n      return this.AB.Network.post(\n         {\n            url: \"/auth/logout\",\n            data: { tenantUrl: this.AB.Tenant.setting(\"url\") },\n         },\n         {\n            key: \"account.logout\",\n            context: {},\n         }\n      );\n   }\n\n   roles(fn = () => true) {\n      return (this._config?.roles || []).filter(fn);\n   }\n   rolesAll() {\n      return this._listRoles;\n   }\n\n   scopes() {\n      return this._listScopes;\n   }\n\n   username() {\n      return this._config?.username;\n   }\n\n   userList() {\n      return this._listUsers;\n   }\n\n   uuid() {\n      return this._config?.uuid;\n   }\n\n   imageID() {\n      return this._config?.image_id;\n   }\n\n   sendEmailNotifications() {\n      return this._config?.sendEmailNotifications;\n   }\n}\n\nexport default new Account();\n","//\n// Dialog\n// A common set of UI dialogs to show the User.\n//\n// NOTE: IN TRANSITION: this is our previous method of handling\n// dialogs.  In future, refactor to use webix directly in code.\n//\n\nexport default {\n   // Instance properties\n\n   // Alert\n   // A dialogue that popup with a message, and requires an [ok] button press\n   Alert: function (opts) {\n      webix.alert({\n         title:\n            opts.title ||\n            AB.Multilingual.label(\"opp.dialog.alert.title\", \"*Alert\"),\n         text:\n            opts.text ||\n            opts.message ||\n            AB.Multilingual.label(\n               \"opp.dialog.alert.text\",\n               \"*Something is wrong.\"\n            ),\n         ok: opts.ok || AB.Multilingual.label(\"opp.dialog.alert.ok\", \"*OK\"),\n      });\n   },\n\n   // Confirm\n   // A [Yes] [No] dialogue that pops up with a message\n   Confirm: function (opts) {\n      var title =\n         opts.title ||\n         AB.Multilingual.label(\"opp.dialog.confirm.confirmTitle\", \"* Confirm\");\n      var message =\n         opts.text ||\n         opts.message ||\n         AB.Multilingual.label(\n            \"opp.dialog.confirm.confirmMsg\",\n            \"* Are you sure you want to do this?\"\n         );\n\n      var labelYes =\n         opts.labelYes ||\n         opts.ok ||\n         AB.Multilingual.label(\"opp.common.yes\", \"* yes\");\n      var labelNo =\n         opts.labelNo ||\n         opts.cancel ||\n         AB.Multilingual.label(\"opp.common.no\", \"* no\");\n\n      // var fnYes = opts.fnYes || function () { };\n      // var fnNo = opts.fnNo || function () { };\n\n      webix.confirm({\n         title: title,\n         text: message,\n\n         ok: labelYes,\n         cancel: labelNo,\n\n         callback: function (result) {\n            if (result) {\n               if (opts.fnYes) opts.fnYes();\n            } else {\n               if (opts.fnNo) opts.fnNo();\n            }\n\n            if (opts.callback) opts.callback(result);\n         },\n      });\n\n      // bootbox.dialog({\n      //     title: title,\n      //     message: message,\n      //     buttons: {\n      //         yes: {\n      //             label: labelYes,\n      //             className: 'btn-primary',\n      //             callback: fnYes\n      //         },\n      //         no: {\n      //             label: labelNo,\n      //             className: 'btn-default',\n      //             callback: fnNo\n      //         }\n      //     }\n      // });\n   },\n\n   // ConfirmDelete\n   // A Confirm dialogue geared towards deleting items.\n   // [delete] [cancel]\n   ConfirmDelete: function (opts) {\n      this.Confirm({\n         title:\n            opts.title ||\n            AB.Multilingual.label(\n               \"opp.dialog.confirm.deleteTitle\",\n               \"* Confirm Delete\"\n            ),\n         ok: opts.ok || AB.Multilingual.label(\"opp.common.delete\", \"* Delete\"),\n         cancel:\n            opts.cancel ||\n            AB.Multilingual.label(\"opp.common.cancel\", \"* Cancel\"),\n         text:\n            opts.text ||\n            opts.message ||\n            AB.Multilingual.label(\n               \"opp.dialog.confirm.deleteMsg\",\n               \"* Are you sure you want to delete this?\",\n               [\"this\"]\n            ),\n         callback: function (result) {\n            if (result) {\n               if (opts.fnYes) opts.fnYes();\n            } else {\n               if (opts.fnNo) opts.fnNo();\n            }\n\n            if (opts.callback) opts.callback(result);\n         },\n      });\n   },\n\n   // Message\n   // A simple message displayed to the user.  Can time out\n   Message: function (opts) {\n      var message = opts.text || opts.message;\n      var timeout = opts.timeout || 2000;\n\n      webix.message({\n         text: message,\n         expire: timeout,\n      });\n   },\n};\n","/*\n * Multilingual\n * manage our multilingual Translations/Labels/etc.\n */\n\nvar MLClass = require(\"../AppBuilder/platform/ABMLClass\");\n\nclass Multilingual extends MLClass {\n   constructor() {\n      super([], {});\n      // super()\n      //    [] = no labels\n      //    {} = placeholder ABFactory entry until .init() is called.\n\n      this.isAuthenticated = false;\n      this._config = null;\n\n      this._missingLabelID = false;\n      this._missingLabels = {};\n      this._pluginLabelsMissing = {};\n\n      this.isLabelUpdateEnabled = false;\n      // {bool}\n      // we can only update labels on the server if this is enabled.\n      // Only on a Developers environment should we enable this:\n      // javascript console: > window.AB.Multilingual.enableLabelUpdates();\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n\n      this.labels = this.AB.Config.labelConfig();\n      this._languages = this.AB.Config.languageConfig();\n\n      this.pluginLabels = {};\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   currentLanguage() {\n      return this.AB.Account.language();\n   }\n\n   enableLabelUpdates() {\n      this.isLabelUpdateEnabled = true;\n   }\n\n   label(key, altText, values = [], postMissing = true) {\n      // part of our transition: L(\"single string\") should start to work:\n      if (typeof altText == \"undefined\" && key) {\n         altText = key;\n      }\n\n      // other case: L(\"single string {0}\", [])\n      if (arguments.length == 2 && Array.isArray(altText)) {\n         values = altText;\n         altText = key;\n      }\n\n      // We need to escape \" characters or else they will get added to the the lang.js\n      // then we get errors next time we try to parse it as JSON (see appbuilder.label-missing)\n      altText = altText.replace(/\"/g, '\\\\\"');\n      key = key.replace(/\"/g, '\\\\\"');\n\n      // NOTE: transition to new Labels\n      // currently our code still uses the L(key, altText, values) format, but\n      // the labels we get back are in L(altText, values) format.\n      //\n      // we are going to keep this like this until we have a well functioning\n      // UI display of our Apps, which should flesh out most of the missing\n      // labels to our files.\n      //\n      // After that, convert our L(k, t, v) to L(t, v)\n\n      var newKey = altText;\n      if (newKey[0] == \"*\") {\n         newKey = newKey.slice(1);\n      }\n      var label = this.labels[newKey];\n      if (!label) {\n         if (postMissing) {\n            this.postMissingLabel(key, altText);\n         }\n         label = altText;\n      }\n\n      values.forEach((v, i) => {\n         var sub = `{${i}}`;\n         label = label.replaceAll(sub, v);\n      });\n      label = label.replace(/\\\\\"/g, '\"'); // unescape \" in the label\n      return label;\n   }\n\n   labelPlugin(plugin, altText, values = []) {\n      // 1st check to see if it is a common label from platform:\n      var label = this.label(altText, altText, values, false);\n      if (!label) {\n         // ok, so check to see if it is a Plugin Label:\n         label = this.pluginLabels[plugin][altText];\n      }\n      if (!label) {\n         // !! record it missing.\n         this._pluginLabelsMissing[plugin] =\n            this._pluginLabelsMissing[plugin] || {};\n         this._pluginLabelsMissing[plugin][altText] = altText;\n         label = altText;\n      }\n      values.forEach((v, i) => {\n         var sub = `{${i}}`;\n         label = label.replaceAll(sub, v);\n      });\n      return label;\n   }\n\n   languages() {\n      return this._languages;\n\n      // console.error(\n      //    \"Multilingual:languages(): Implement Language Storage/Retrieval.\"\n      // );\n      // return [];\n   }\n\n   pluginLoadLabels(key, labels) {\n      this.pluginLabels[key] = labels;\n   }\n   pluginLabelReport(key) {\n      console.warn(\"missing labels for plugin: \", key);\n      console.warn(\"current language:\", this.currentLanguage());\n      var labels = JSON.stringify(this._pluginLabelsMissing[key], null, 3);\n      console.warn(labels);\n   }\n\n   postMissingLabel(key, altText) {\n      if (!this.isLabelUpdateEnabled) return;\n\n      if (this._missingLabelID) {\n         clearTimeout(this._missingLabelID);\n      }\n      var batchLength = 50;\n      var sendBatch = () => {\n         var batchLabels = [];\n         let missingLabels = Object.keys(this._missingLabels).map(\n            (k) => this._missingLabels[k]\n         );\n         if (missingLabels.length <= batchLength) {\n            batchLabels = missingLabels;\n            this._missingLabels = {};\n         } else {\n            for (var i = 0; i <= batchLength; i++) {\n               var l = missingLabels.shift();\n               batchLabels.push(l);\n               delete this._missingLabels[l.key];\n            }\n         }\n         this.AB.Network.post({\n            url: \"/multilingual/label-missing\",\n            data: { labels: JSON.stringify(batchLabels) },\n         })\n            .then(() => {\n               if (Object.keys(this._missingLabels).length > 0) {\n                  sendBatch();\n               }\n            })\n            .catch((err) => {\n               const strErr = err.toString();\n               if (strErr.indexOf(\"unable to get\") > -1) {\n                  console.error(\n                     \"Missing language file for :\" + this.currentLanguage()\n                  );\n               }\n            });\n      };\n      this._missingLabelID = setTimeout(() => {\n         sendBatch();\n      }, 1000);\n\n      this._missingLabels[key] = { key, altText };\n   }\n   ///\n   /// Disable un-needed ABMLClass functionality\n   ///\n   /// NOTE: we are mainly Piggybacking on ABMLClass for it's\n   /// .translate() and .unTranslate() capabilities. So disable these\n   /// for good measure.\n   destroy() {\n      console.error(\"Multilingual:destroy(): Should not be called.\");\n      return Promise.resolve();\n   }\n   save() {\n      console.error(\"Multilingual:save(): Should not be called.\");\n      return Promise.resolve();\n   }\n   toObj() {\n      console.error(\"Multilingual:toObj(): Should not be called.\");\n      return {};\n   }\n   toDefinition() {\n      console.error(\"Multilingual:toDefinition(): Should not be called.\");\n      return {};\n   }\n}\n\nexport default new Multilingual();\n","/*\n * NetworkRest.js\n * The base Networking class.  This class is responsible for job submissions\n * and outlines the basic Network interface.\n */\n\n/* global Connection */\n// import Account from \"./Account\";\n// import analytics from \"./Analytics\";\n// import EventEmitter from \"eventemitter2\";\nvar EventEmitter = require(\"events\").EventEmitter;\n// import Lock from \"./Lock\";\n\n// import { storage } from \"./Storage\";\n// import Tenant from \"./Tenant\";\n// import { v4 as uuidv4 } from \"uuid\";\n\n// Temp placeholders until Resources are implemented:\n\n// End Temp\n\nconst Atomic = require(\"atomicjs/dist/atomic.min.js\");\n// Atomic : a small $.ajax() replacement\n\nvar Config = null;\n// {} Config\n// the site specific configuration information\n\nclass NetworkRest extends EventEmitter {\n   constructor(parent) {\n      // {Network} parent\n\n      super({\n         wildcard: true,\n         newListener: false,\n         maxListeners: 0,\n      });\n\n      this.baseURL = null;\n      // {string} .baseURL\n      // the url of our site.\n\n      this.numRetries = 3;\n      // {int} .numRetries\n      // the number or times we should attempt to issue a network request.\n\n      this._network = parent;\n      // {Network} ._network\n      // the Parent Network Resource that the rest of the Platform actually\n      // works with.\n\n      this.isRealTime = false;\n      // {bool}\n      // does this Network type support RealTime updates. (socket = true);\n   }\n\n   /**\n    * @method init\n    * @param {ABFactory} AB\n    * @param {object} options\n    * @param {string} options.baseURL\n    * @return {Promise}\n    */\n   init(AB, options) {\n      this.AB = AB;\n\n      Config = this.AB.Config.siteConfig();\n      options = options || {};\n      if (options) {\n         this.baseURL = options.baseURL || Config.appbuilder.urlCoreServer;\n         this.numRetries =\n            options.networkNumRetries || Config.appbuilder.networkNumRetries;\n      }\n      return Promise.resolve();\n   }\n\n   //\n   // Interface API\n   //\n   /**\n    * Network.get(options, jobResponse)\n    * perform a GET request back to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   get(params, jobResponse) {\n      params.type = params.type || \"GET\";\n\n      // data sent to params on a \"GET\" request need to be converted to\n      // uri querystring values:\n      var data = params.data || params.params;\n      if (data) {\n         var useThese = [\"string\", \"number\", \"boolean\"];\n         var search = Object.keys(data)\n            .map(function (key) {\n               var val = data[key];\n               if (useThese.indexOf(typeof val) == -1) {\n                  val = JSON.stringify(val);\n               }\n               return key + \"=\" + encodeURIComponent(val);\n            })\n            .join(\"&\");\n\n         var join = \"?\";\n         if (params.url.indexOf(\"?\") > -1) {\n            join = \"&\";\n         }\n         params.url = [params.url, search].join(join);\n      }\n\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.post()\n    * perform an AJAX POST request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   post(params, jobResponse) {\n      params.type = params.type || \"POST\";\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.put()\n    * perform a PUT request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   put(params, jobResponse) {\n      params.type = params.type || \"PUT\";\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.delete()\n    * perform an AJAX DELETE request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   delete(params, jobResponse) {\n      params.type = params.type || \"DELETE\";\n      return this._request(params, jobResponse);\n   }\n\n   ////\n   //// Network Utilities\n   ////\n\n   isNetworkConnected() {\n      return this._network.isNetworkConnected();\n   }\n\n   salSend(params) {\n      return Atomic(params.url, params).then((packet) => {\n         // {json} packet\n         // the response from Atomic is in format:\n         // {data: {…}, xhr: XMLHttpRequest}\n         // we just want to send back our { status:\"\", data:xxx } packet.\n         return packet.data;\n      });\n   }\n\n   /**\n    * _request()\n    * perform the actual AJAX request for this operation.\n    * @param {obj} params  the jQuery.ajax() formatted params\n    * @param {obj} jobRequest  the information about the request's response.\n    * @return {Promise}\n    */\n   _request(params, jobResponse) {\n      // make sure we don't process too many retries:\n      params._retry = params._retry || 0;\n      if (params._retry >= this.numRetries) {\n         var err = new Error(\n            `Too many retries (${this.numRetries}) for ${params.url}`\n         );\n         err.code = \"E_TOMANYRETRIES\";\n         this.AB.notify.developer(err, {\n            context: \"NetworkRest:_request: Too Many Retries\",\n         });\n         // this.AB.Analytics.logError(err);\n         if (jobResponse) {\n            this._network.publishResponse(jobResponse, err);\n         }\n\n         return Promise.reject(err);\n      }\n\n      return new Promise((resolve, reject) => {\n         params.url = params.url || \"/\";\n         if (params.url[0] == \"/\") {\n            params.url = this.baseURL + params.url;\n         }\n\n         params.headers = params.headers || {};\n         if (this.AB.Account.authToken) {\n            params.headers.Authorization = this.AB.Account.authToken;\n         }\n         // Fix: don't set content-type if passed in data is a FormData object.\n         if (\n            Object.prototype.toString.call(params.data) !== \"[object FormData]\"\n         ) {\n            params.headers[\"Content-type\"] = \"application/json\";\n         }\n\n         var tenantID = this.AB.Tenant.id();\n         if (tenantID) {\n            params.headers[\"tenant-token\"] = tenantID;\n         }\n\n         // params.timeout = params.timeout || 6000;\n\n         if (this.isNetworkConnected()) {\n            params.method = params.method || params.type;\n            params.timeout = 6000; // ??\n            params.data = params.data || params.params;\n            delete params.params;\n\n            this.salSend(params)\n               .then((packet) => {\n                  // TODO: check if packet.status == \"error\"\n                  // and then .publishResponse() as an error\n\n                  //\n                  var data = packet;\n                  if (jobResponse) {\n                     this._network.publishResponse(jobResponse, null, data);\n                  }\n                  resolve(data);\n               })\n               .catch((err) => {\n                  // err.status\n                  // err.statusText\n                  // err.responseText\n                  // err.message  {socket}\n                  // err.stack    {socket}\n\n                  // if this is a network connection error, send the attempt again:\n                  if (\n                     err.statusText == \"Request timeout\" ||\n                     (err.message && err.message.indexOf(\"disconnected\") > -1)\n                  ) {\n                     //// Network Error: conneciton refused, access denied, etc...\n                     this.AB.Analytics.log(\n                        \"NetworkRest._request():network connection error detected. Trying again\"\n                     );\n\n                     params._retry++;\n\n                     // retry the attempt:\n                     this._request(params)\n                        .then((data) => {\n                           // console.log('--- timeout.then():',data);\n                           this.AB.warn(\n                              \"*** NetworkRest._request().then(): attempt resolved.\"\n                           );\n                           resolve(data);\n                        })\n                        .catch((_err) => {\n                           this.AB.notify.developer(_err, {\n                              message:\n                                 \"*** NetworkRest._request().catch(): retry failed:\",\n                           });\n                           reject(_err);\n                        });\n\n                     return;\n                  } else {\n                     // Else attempt to emit() some common Error types for\n                     // additional Platform Handling.\n                     if (err.status == 403) {\n                        this.emit(\"error.badAuth\", err);\n                     } else if (err.status >= 400 && err.status < 500) {\n                        this.emit(\"error.badRequest\", err);\n                     } else if (err.status >= 500) {\n                        this.emit(\"error.badServer\", err);\n                     }\n                  }\n\n                  var packet = null;\n                  if (err.responseText) {\n                     try {\n                        packet = JSON.parse(err.responseText);\n                     } catch (e) {\n                        /* ignore */\n                     }\n                  }\n                  // if this is an req.ab.error() response:\n                  if (packet && packet.status == \"error\") {\n                     // check if REAUTH Error:\n                     if (packet.id == 5 || packet.code == \"E_REAUTH\") {\n                        this._network.emit(\"reauth\");\n                        return;\n                     }\n\n                     this.AB.notify.developer(new Error(packet.message), {\n                        context:\n                           \"NetworkRest:_request:Error returned from Server (req.ab.error())\",\n                        data: packet.data,\n                        status: packet.status,\n                     });\n                     // this.AB.Analytics.logError(packet.data);\n                     // this.AB.error(packet.data);\n                     if (jobResponse) {\n                        this._network.publishResponse(\n                           jobResponse,\n                           packet,\n                           null\n                        );\n                     }\n                     let error = new Error(packet.message ?? packet.data);\n                     error.response = packet;\n                     error.text = packet.message;\n                     error.url = `${params.method} ${params.url}`;\n                     return reject(error);\n                  } else {\n                     // unknown/unexpected error:\n                     let error = new Error(\n                        `${err.status} ${err.statusText || err.message}: ${\n                           params.method\n                        } ${params.url}`\n                     );\n                     error.response = err.responseText;\n                     error.text = err.statusText;\n                     error.err = err;\n                     error.url = `${params.method} ${params.url}`;\n                     this.AB.notify.developer(error, {\n                        context:\n                           \"NetworkRest:_request:Unknown Error returned from server\",\n                        err,\n                        response: err.responseText,\n                        text: err.statusText || err.message,\n                        url: error.url,\n                     });\n                     // this.AB.Analytics.logError(error);\n                     // this.AB.error(error);\n                     if (jobResponse) {\n                        this._network.publishResponse(jobResponse, error);\n                     }\n                     return reject(error);\n                  }\n               });\n         } else {\n            // now Queue this request params.\n            this.AB.Analytics.log(\n               \"NetworkRest:_request(): Network is offline. Queuing request.\"\n            );\n            this._network\n               .queue(params, jobResponse)\n               .then(() => {\n                  resolve({ status: \"queued\" });\n               })\n               .catch(reject);\n         }\n      });\n   }\n\n   /**\n    * resend()\n    * processes messages that were queued due to network connectivity\n    * issues.\n    * @param {obj} params  the jQuery.ajax() formatted params\n    * @param {obj} jobRequest  the information about the request's response.\n    * @return {Promise}\n    */\n   resend(params, jobResponse) {\n      // var op = params.type.toLowerCase();\n      return this._request(params, jobResponse);\n   }\n}\n\nexport default NetworkRest;\n","/*\n * NetworkRest.js\n * The base Networking class.  This class is responsible for job submissions\n * and outlines the basic Network interface.\n */\n\nimport performance from \"../utils/performance\";\nimport NetworkRest from \"./NetworkRest\";\n\nconst listSocketEvents = [\n   // NOTE: ABFactory.definitionXXX() will manage emitting these\n   // events internally:\n   // \"ab.abdefinition.create\",\n   // \"ab.abdefinition.update\",\n   // \"ab.abdefinition.delete\",\n   \"ab.datacollection.create\",\n   \"ab.datacollection.update\",\n   \"ab.datacollection.stale\",\n   \"ab.datacollection.delete\",\n   \"ab.inbox.create\",\n   \"ab.inbox.update\",\n   \"ab.task.userform\",\n   // \"ab.object.update\",\n];\n// {array}\n// The io.socket.* events we are listening for that relate to our datacollection\n// maintainence.\n\nfunction socketDataSave(key, length) {\n   if (!HashSocketJobs[key]) {\n      HashSocketJobs[key] = {\n         packets: 0,\n         length: 0,\n      };\n   }\n\n   HashSocketJobs[key].packets++;\n   HashSocketJobs[key].length += length;\n}\nfunction socketDataLog(AB, key, data) {\n   let length = \"??\";\n   try {\n      length = JSON.stringify(data).length;\n      data.__length = length;\n   } catch (e) {\n      console.log(e);\n      //\n   }\n\n   if (data.objectId) {\n      let obj = AB.objectByID(data.objectId);\n      if (!obj) {\n         console.warn(`socket: ${key} unkown object (${length})`, data);\n      } else {\n         console.warn(\n            `socket: ${key} ${obj.label ?? obj.name}(${length})`,\n            data\n         );\n      }\n   } else {\n      console.warn(`socket: ${key} (${length})`, data);\n   }\n\n   if (data.jobID) {\n      socketDataSave(data.jobID, length);\n      socketDataSave(`${data.jobID}-${key}`, length);\n   }\n}\n\nlet HashSocketJobs = {\n   /* jobID : { #packets, length } */\n};\n\nlet keyBlacklist = {\n   /* key : true */\n};\n// a list of incoming message keys, that indicate wether or not we have\n// processed this message.  If a message has been processed, we skip it.\n\n/**\n * @function blacklistKey()\n * create a unique key for this network event.\n * @param {event} ev\n *        the incoming network event key (ab.datacollection.create)\n * @param {obj} data\n *        the related network packet of the incoming event.\n * @return {string}\n */\nfunction blacklistKey(AB, ev, data) {\n   let parts = [ev];\n\n   if (data.jobID) {\n      parts.push(data.jobID);\n   }\n\n   if (data.data) {\n      let PK = \"uuid\";\n      let obj = AB.objectByID(data.objectId);\n      if (obj) {\n         PK = obj.PK();\n      }\n      parts.push(data.data[PK] || data.data.id);\n   }\n\n   if (data.__length) {\n      parts.push(data.__length);\n   } else {\n      let length = \"??\";\n      try {\n         length = JSON.stringify(data).length;\n      } catch (e) {\n         // ignore\n      }\n      parts.push(length);\n   }\n\n   return parts.join(\"-\");\n}\n\n/**\n * @function isBlacklisted()\n * return True/False if a given key is already blacklisted.\n * @param {string} key\n *        the () we are checking\n * @return {bool}\n */\nfunction isBlacklisted(key) {\n   return keyBlacklist[key] ?? false;\n}\n\n/**\n * @function blacklist()\n * mark a given key as blacklisted. This prevents additional calls with\n * the same key from being processed.\n * A Key is only blacklisted for a given amount of time (1s by default).\n * @param {string} key\n *        the blacklistKey() we are checking\n * @param {int} time\n *        The duration in ms of how long to keep the key blacklisted.\n */\nfunction blacklist(key, time = 1000) {\n   keyBlacklist[key] = true;\n   setTimeout(() => {\n      delete keyBlacklist[key];\n   }, time);\n}\n\nclass NetworkRestSocket extends NetworkRest {\n   constructor(parent) {\n      // {Network} parent\n\n      super(parent);\n\n      this.isRealTime = true;\n      // {bool}\n      // does this Network type support RealTime updates. (socket = true);\n\n      // Pass the io.socket.on(*) events to our AB factory.\n      listSocketEvents.forEach((ev) => {\n         io.socket.on(ev, (data) => {\n            // data should be in the format:\n            // {\n            //    objectId: {uuid},\n            //    data: {object}\n            // }\n            socketDataLog(this.AB, ev, data);\n\n            // ensure we only process a network update 1x\n            let blKey = blacklistKey(this.AB, ev, data);\n            if (isBlacklisted(blKey)) return;\n            blacklist(blKey, 5000); // now prevent additional ones\n\n            // check if the ev contains 'datacollection'\n            // and do a single normalizeData() on the incoming data here\n            // before sending it off to be processed.\n            if (ev.indexOf(\"ab.datacollection\") > -1) {\n               let values = data.data;\n               if (values) {\n                  let obj = this.AB.objectByID(data.objectId);\n                  if (obj) {\n                     if (ev != \"ab.datacollection.delete\") {\n                        // if data is packed, then unpack it\n                        let model = obj.model();\n                        if (model.isCsvPacked(values)) {\n                           let lengthPacked = data.__length;\n                           delete data.__length;\n                           values = model.csvUnpack(values);\n                           data.data = values.data;\n                           let lengthUnpacked = JSON.stringify(data).length;\n                           data.__length = lengthUnpacked;\n                           data.__lengthPacked = lengthPacked;\n                           console.log(\n                              `CSV Pack: ${lengthUnpacked} -> ${lengthPacked} (${(\n                                 (lengthPacked / lengthUnpacked) *\n                                 100\n                              ).toFixed(2)}%)`\n                           );\n                        }\n\n                        let jobID = this.AB.jobID();\n                        performance.mark(`${ev}:normalization`, {\n                           op: \"function\",\n                           data: { jobID },\n                        });\n                        model.normalizeData(data.data);\n                        performance.measure(`${ev}:normalization`);\n                     }\n                  }\n               }\n            }\n            this.AB.emit(ev, data);\n         });\n      });\n   }\n\n   //\n   // Interface API\n   //\n\n   socketLog() {\n      console.warn(JSON.stringify(HashSocketJobs, null, 4));\n   }\n\n   socketLogClear() {\n      HashSocketJobs = {};\n   }\n\n   ////\n   //// Network Utilities\n   ////\n\n   isNetworkConnected() {\n      return io.socket.isConnected();\n   }\n\n   salSend(params) {\n      let route, query;\n      try {\n         // Extract paramitized route (ex: `/app_builder/model/:ID`) for performance tracking\n         [, route, query] = params.url.match(\n            /https?:\\/\\/[^/]+(\\/[^?]+)\\??(.*)/\n         );\n         route = route.replace(/\\b[a-fA-F\\d-]{36}\\b/g, \":ID\");\n         performance.mark(route, {\n            op: \"websocket.client\",\n            data: {\n               http: {\n                  query: query || undefined,\n                  method: params.method,\n               },\n               url: params.url,\n            },\n         });\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: `salSend() create performance.mark`,\n         });\n      }\n\n      return new Promise((resolve, reject) => {\n         params.method = params.method.toLowerCase();\n\n         io.socket.request(params, (data, jwres) => {\n            // {json} data\n            // the data response from the request\n            // {json} jwres\n            // A JSON WebSocket Response object.\n            //    {json} jwres.headers :  header values\n            //    {int}  jwres.statusCode : http response code\n            //    {json} jwres.body === resData\n\n            // if this is an  error\n            if (jwres.statusCode >= 400) {\n               // Our NetworkRest.error( err ) should be in this format:\n               // err.status\n               // err.statusText\n               // err.responseText\n\n               var errStr = jwres.error ? jwres.error.toString() : jwres.body;\n\n               var err = new Error(`Socket Error: ${errStr}`);\n               err.status = jwres.statusCode;\n               err.statusText = errStr;\n               err.responseText = jwres.body;\n\n               // on RequestTimeout:\n               // err.statusText == \"Request timeout\"\n\n               reject(err);\n            } else {\n               // some errors like socket disconnected return an Error for data\n               if (data instanceof Error) {\n                  reject(data);\n                  return;\n               }\n\n               if (typeof data == \"string\") {\n                  performance.mark(\"JSON.parse\", { op: \"serialize\" });\n                  data = JSON.parse(data);\n                  performance.measure(\"JSON.parse\");\n               }\n\n               // Got a JSON response but was the service response an error?\n               // this would be a strange case where the .statusCode < 400\n               if (data?.status == \"error\") {\n                  // make sure to reject an err.responseText = data\n                  reject({\n                     status: jwres.statusCode,\n                     responseText: JSON.Stringify(data),\n                  });\n               }\n               // Success!\n               else {\n                  performance.measure(route);\n                  resolve(data);\n               }\n            }\n         });\n      });\n   }\n}\n\nexport default NetworkRestSocket;\n","/*\n * Network.js\n * A network manager for interfacing with our AppBuilder server.\n */\n/* global Connection */\nvar EventEmitter = require(\"events\").EventEmitter;\nimport performance from \"../utils/performance\";\nimport NetworkRest from \"./NetworkRest\";\nimport NetworkRestSocket from \"./NetworkRestSocket\";\n// import NetworkRelay from \"./NetworkRelay\";\n\nclass Network extends EventEmitter {\n   constructor() {\n      super();\n\n      this.setMaxListeners(0);\n      // we'll have > 10 for sure!\n\n      this.queueLock = null;\n      // {Lock} .queueLock\n      // our semaphore for coordinating our access to our local storage.\n\n      this._config = null;\n      this._network = null;\n      // {NetworkRelay | NetworkRest | NetworkSocket}\n      // the underlying Network connection object actually performing the\n      // communications with the Server.\n      // Which one is specified in the config.appbuilder.networkType setting\n\n      this._queueCount = 0;\n      // {int} _queueCount\n      // the # of network operations currently queued, pending Network\n      // reconnect.\n\n      this.cachJobResponse = {};\n      // { jobID : { jobResponse } }\n      // hash of the queued jobResponses for network requests that are in\n      // our queue.\n      // We need to keep our own cache that isn't serialized so that once\n      // we complete the request, we can resume the resolve() promise chains\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n\n      this.queueLock = new this.AB.Lock();\n\n      this._config = this.AB.Config.siteConfig();\n      if (this._config) {\n         switch (this._config.appbuilder.networkType) {\n            case \"relay\":\n               // this._network = new NetworkRelay();\n               break;\n\n            case \"socket\":\n               this._network = new NetworkRestSocket(this);\n               break;\n\n            case \"rest\":\n            default:\n               this._network = new NetworkRest(this);\n               break;\n         }\n\n         return this._network.init(AB);\n      } else {\n         console.error(\"??? Why No site config ???\");\n      }\n\n      //\n      // Handle reconnections and flushing the Queue:\n      //\n      if (io && io.socket) {\n         // When our Socket reconnects, be sure to flush any pending transactions.\n         io.socket.on(\"connected\", () => {\n            this.queueFlush();\n            if (this.idConnectionCheck) {\n               clearTimeout(this.idConnectionCheck);\n               this.idConnectionCheck = null;\n            }\n         });\n      } else {\n         console.error(\"!!! Network.init() : Did not find io.socket\");\n         window.addEventListener(\"online\", () => this.queueFlush());\n      }\n\n      return Promise.resolve();\n   }\n\n   //\n   // Interface API\n   //\n   /**\n    * Network.isRealTime\n    * indicates wether or not the current network connection supports\n    * RealTime updates.\n    * @return {bool}\n    */\n   get isRealTime() {\n      return this._network.isRealTime;\n   }\n\n   /**\n    * Network.get(options, jobResponse)\n    * perform a GET request back to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   get(...params) {\n      return this._network.get(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.post()\n    * perform an AJAX POST request to the AppBuilder server.\n    * this is a CREATE operation.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   post(...params) {\n      return this._network.post(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.put()\n    * perform a PUT request to the AppBuilder server.\n    * This is for UPDATE/REPLACE operations to data on the server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   put(...params) {\n      return this._network.put(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.delete()\n    * perform an AJAX DELETE request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   delete(...params) {\n      return this._network.delete(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   ////\n   //// Network Utilities\n   ////\n\n   _connectionCheck() {\n      // if (!this.idConnectionCheck) {\n      if (this.isNetworkConnected()) {\n         this.queueFlush().catch(() => {\n            // on an error, we are still having connection issues\n            this.idConnectionCheck = setTimeout(() => {\n               this._connectionCheck();\n            }, 250);\n         });\n         this.idConnectionCheck = null;\n      } else {\n         this.idConnectionCheck = setTimeout(() => {\n            this._connectionCheck();\n         }, 250);\n      }\n      // }\n   }\n\n   /**\n    * Check whether the network is slow\n    * @returns {Boolean}\n    */\n   isNetworkSlow() {\n      return !!this._networkSlow;\n   }\n\n   /**\n    * Register the network speed test worker\n    * @param {Worker} worker\n    * @param {boolean} slow is the current state slow?\n    */\n   registerNetworkTestWorker(worker, slow) {\n      this._networkTestWorker = worker;\n      this._networkSlow = slow;\n      this._networkTestWorker.onmessage = ({ data }) => {\n         if (this._networkSlow !== data) {\n            this._networkSlow = data;\n            this.emit(\"networkslow\", this._networkSlow);\n            // Tell sentry our network speed changed\n            performance.setContext(\"breadcrumb\", {\n               category: \"network\",\n               message: this._networkSlow\n                  ? \"Slow network detected\"\n                  : \"Network speed restored\",\n               level: \"info\",\n            });\n         }\n      };\n   }\n\n   /**\n    * @method networkStatus\n    * return the connection type currently registered with the network\n    * plugin.\n    * @return {string}\n    */\n   networkStatus() {\n      return navigator.connection.type;\n   }\n\n   /**\n    * @method isNetworkConnected\n    * return true/false if the device is currently connected to the\n    * internet.\n    * @return {bool}\n    */\n   isNetworkConnected() {\n      // if this is a Web Client and using sails.socket.io\n      if (typeof io != \"undefined\" && io.socket && io.socket.isConnected) {\n         return io.socket.isConnected();\n      }\n\n      // if this isn't a Cordova Plugin, then return navigator data:\n      if (typeof Connection == \"undefined\") {\n         // NOTE: this technically only detects if we are connected to a\n         // network.  It doesn't guarantee we can communicate across the 'net\n         return navigator.onLine;\n      }\n\n      // Cordova Plugin:\n      return this.networkStatus() != Connection.NONE;\n   }\n\n   /**\n    * publishResponse()\n    * emit the requested response for this network operation.\n    * @param {obj} jobResponse\n    * @param {obj} error\n    * @param {obj} data\n    */\n   publishResponse(jobResponse, error, data) {\n      if (data) {\n         data = this.normalizeData(data);\n      }\n      this.emit(jobResponse.key, jobResponse.context, error, data);\n   }\n\n   normalizeData(data) {\n      // Data returning from our server is wrapped in an outer layer of\n      // information that is for our Networking API.\n      // the outer wrapper should be:\n      // on success :\n      // {\n      //   status: \"success\",\n      //   data:{Data For App}\n      // }\n      // on Error:\n      // {\n      //   status: \"error\",\n      //   id: {int} error code\n      //   ... other data here\n      // }\n\n      // we have physically received a data packet from the server,\n      // but we are informed that our transaction was problematic\n      // (400 level USER problem?)\n      if (data.status === \"error\") {\n         // TODO: review Error procedure here\n         return data;\n      }\n\n      // on success\n      // make sure we return the Application Level Data packet:\n      return data.data || data;\n   }\n\n   ////\n   //// Queued Requests\n   ////\n\n   /**\n    * refQueue()\n    * sub classes can override this for their own separate Queue Data\n    * @return {string}\n    */\n   refQueue() {\n      return \"networkQueue\";\n   }\n\n   /**\n    * queueCount()\n    * return the # of messages in the queue.\n    * @return {int}\n    */\n   queueCount() {\n      return this._queueCount;\n   }\n\n   /**\n    * Adds a request to the outgoing queue.\n    *\n    * @param {object} data\n    * @param {object} jobResponse\n    * @return {Promise}\n    */\n   queue(data, jobResponse) {\n      var refQueue = this.refQueue();\n\n      return new Promise((resolve, reject) => {\n         this.queueLock\n            .acquire()\n            .then(() => {\n               return this.AB.Storage.get(refQueue);\n            })\n            .then((queue) => {\n               queue = queue || [];\n               let jID = this.AB.jobID();\n               this.cachJobResponse[jID] = jobResponse;\n               queue.push({ data, jobResponse: jID });\n               this.AB.log(\n                  `:::: ${queue.length} request${\n                     queue.length > 1 ? \"s\" : \"\"\n                  } queued`\n               );\n               this._queueCount = queue.length;\n               return this.AB.Storage.set(refQueue, queue);\n            })\n            .then(() => {\n               this.emit(\"queued\");\n               // if we are not already polling the network, start\n               if (!this.idConnectionCheck) {\n                  this._connectionCheck();\n               }\n               this.queueLock.release();\n               resolve();\n            })\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message: \"Error while queueing data\",\n               });\n               this.AB.Analytics.logError(err);\n               reject(err);\n\n               this.queueLock.release();\n            });\n      });\n   }\n\n   /**\n    * queueFlush()\n    * Flush the queue and send the contents to the relay server.\n    */\n   queueFlush() {\n      var refQueue = this.refQueue();\n\n      // if we are not connected, then stop\n      if (!this.isNetworkConnected()) {\n         var error = new Error(\"Not connected to the internet.\");\n         error.code = \"E_NOTCONNECTED\";\n         return Promise.reject(error);\n      }\n\n      // otherwise, attempt to flush the queue:\n      return new Promise((resolve, reject) => {\n         this.queueLock\n            .acquire()\n\n            //\n            // Get queue contents\n            //\n            .then(() => {\n               return this.AB.Storage.get(refQueue);\n            })\n\n            //\n            // Send off each queued request\n            //\n            .then((queue) => {\n               // default to [] if not found\n               queue = queue || [];\n\n               let hasResponded = false;\n               let resCount = 0;\n               let resNumber = queue.length;\n\n               let done = (res, rej, err) => {\n                  if (!hasResponded) {\n                     if (err) {\n                        rej(err);\n                        hasResponded = true;\n                        return;\n                     }\n                     resCount++;\n                     if (resCount >= resNumber) {\n                        hasResponded = true;\n                        res();\n                     }\n                  }\n               };\n               // recursively process each pending queue request\n               var processRequest = (cb) => {\n                  if (queue.length == 0) {\n                     cb();\n                  } else {\n                     var entry = queue.shift();\n                     var params = entry.data;\n                     let job = this.cachJobResponse[entry.jobResponse];\n                     // var job = entry.jobResponse;\n                     this._network\n                        .resend(params, job)\n                        .then(() => {\n                           delete this.cachJobResponse[entry.jobResponse];\n                           // processRequest(cb);\n                           cb();\n                        })\n                        .catch((err) => {\n                           // if the err was due to a network connection error\n                           if (err && err.code == \"E_TOMANYRETRIES\") {\n                              cb(err);\n                              return;\n                           }\n                           // otherwise, try the next\n                           // processRequest(cb);\n                        });\n                     processRequest(cb);\n                  }\n               };\n\n               return new Promise((res, rej) => {\n                  processRequest((err) => {\n                     done(res, rej, err);\n                     // if (err) {\n                     //    rej(err);\n                     // } else {\n                     //    res();\n                     // }\n                  });\n               });\n            })\n\n            //\n            // Clear queue contents\n            //\n            .then(() => {\n               this.cachJobResponse = {};\n               this._queueCount = 0;\n               return this.AB.Storage.set(refQueue, []);\n            })\n\n            // release the Lock\n            .then(() => {\n               this.emit(\"queue.synced\");\n               return this.queueLock.release();\n            })\n\n            // all done.\n            .then(() => {\n               resolve();\n            })\n\n            // respond to errors:\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message: \"commAPI queueFlush error\",\n               });\n               this.AB.Analytics.logError(err);\n\n               this.queueLock.release().then(() => {\n                  reject(err);\n               });\n            });\n      });\n   }\n\n   /**\n    * Reset credentials to a blank state.\n    * @return {Promise}\n    */\n   reset() {\n      return Promise.resolve();\n   }\n\n   /**\n    * type()\n    * return the type of network connection we are using.\n    * [\"rest\", \"socket\", \"relay\"]\n    * @return {string}\n    */\n   type() {\n      return this._config.appbuilder.networkType;\n   }\n\n   // uuid() {\n   //    return this.AB.uuid();\n   // }\n\n   getTokens() {\n      // called in appPage.js : openRelayLoader()\n      return {};\n   }\n}\n\nexport default new Network();\n","/*\n * StorageLocal\n *\n * An interface for storing and retrieving Client Side data.  Data stored\n * in StorageLoacal is NOT encrypted.\n *\n * This implementation is based upon the webix.storage.local library.\n * See: https://docs.webix.com/api__refs__storage.local.html\n *\n */\n\nvar EventEmitter = require(\"events\").EventEmitter;\n\nclass StorageLocal extends EventEmitter {\n   constructor() {\n      super();\n\n      this.tenantStorage = null;\n      // {Webix.storage} object.\n      // We divide the storage data according to the tenant we are working\n      // with.  This way Users who can move between different Tenants can\n      // keep their local data separated.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var tenantID = this.AB.Tenant.id();\n      if (!tenantID) {\n         tenantID = \"noAuth\";\n         // \"noAuth\" is considered the tenant on our Login sequence\n         // which should have a minimum of data stored (language maybe?)\n      }\n\n      this.tenantStorage = this.AB.Webix.storage.prefix(\n         tenantID,\n         this.AB.Webix.storage.local\n      );\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   set(key, value /* , options = {} */) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.put(key, value);\n      });\n   }\n\n   get(key /*, options = {} */) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.get(key);\n      });\n   }\n\n   clear(key) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.remove(key);\n      });\n   }\n\n   clearAll() {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.clear();\n      });\n   }\n}\n\nexport default new StorageLocal();\n","var EventEmitter = require(\"events\").EventEmitter;\n\nimport StorageLocal from \"./StorageLocal.js\";\n\nclass Storage extends EventEmitter {\n   constructor() {\n      super();\n\n      this.tenantStorage = null;\n      this._config = null;\n      this._storage = null;\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var config = this.AB.Config.siteConfig();\n      if (config) {\n         if (config.storage && config.storage.encrypted) {\n            console.error(\"TODO: Implement Encrypted Storage\");\n            // this._storage = StorageEncrypted;\n            this._storage = StorageLocal;\n         } else {\n            this._storage = StorageLocal;\n         }\n\n         return this._storage.init(AB);\n      } else {\n         console.error(\"??? Why No site config ???\");\n      }\n\n      return Promise.resolve();\n   }\n\n   set(...params) {\n      return this._storage.set(...params);\n   }\n\n   get(...params) {\n      return this._storage.get(...params);\n   }\n\n   clear(...params) {\n      return this._storage.clear(...params);\n   }\n\n   clearAll(...params) {\n      return this._storage.clearAll(...params);\n   }\n}\n\nexport default new Storage();\n","var EventEmitter = require(\"events\").EventEmitter;\n\nimport Config from \"../config/Config.js\";\n\nclass Tenant extends EventEmitter {\n   constructor() {\n      super();\n\n      this.text = false;\n      this._config = null;\n      this.textClickToEnter = null;\n   }\n\n   init() {\n      var config = Config.tenantConfig();\n      if (config) {\n         // check if we have options that are stored as a string\n         if (\n            typeof config.options === \"string\" ||\n            config.options instanceof String\n         ) {\n            // if we do try to parse them into a JSON object\n            try {\n               config.options = JSON.parse(config.options);\n            } catch (error) {\n               console.error(error);\n            }\n         }\n         this._config = config;\n         this.textClickToEnter = config.options.textClickToEnter;\n      }\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   id() {\n      if (!this._config || this._config.id == \"??\") {\n         return null;\n      }\n      return this._config.id;\n   }\n\n   setting(key, value) {\n      if (this._config) {\n         if (value) {\n            this._config.options[key] = value;\n            return;\n         }\n         return this._config.options[key];\n      }\n   }\n}\n\nexport default new Tenant();\n","/**\n * @class configDesktop\n *\n * Manage our configuration settings for Desktop styles.\n\n */\n\nexport default {\n   // Application List\n   appListRowHeight: 67,\n\n   // button types\n   buttonWidthLarge: 200,\n   buttonWidthMedium: 150,\n   buttonWidthSmall: 100,\n   buttonWidthExtraSmall: 50,\n\n   // tab types\n   tabWidthLarge: 200,\n   tabWidthMedium: 120,\n   tabWidthSmall: 100,\n   tabWidthExtraSmall: 50,\n\n   // column types\n   columnWidthXLarge: 350,\n   columnWidthLarge: 250,\n   columnWidthMedium: 200,\n   columnWidthSmall: 150,\n   columnWidthExtraSmall: 100,\n\n   // spacers\n   xSmallSpacer: 5,\n   smallSpacer: 10,\n   mediumSpacer: 25,\n   largeSpacer: 50,\n   xLargeSpacer: 100,\n   xxLargeSpacer: 200,\n   xxxLargeSpacer: 400,\n   appListSpacerRowHeight: 100,\n   appListSpacerColMinWidth: 100,\n   appListSpacerColMaxWidth: 200,\n   objectWorkspaceColWidth: 20,\n\n   // labels\n   labelWidthSmall: 50,\n   labelWidthMedium: 80,\n   labelWidthLarge: 120,\n   labelWidthXLarge: 150,\n   labelWidthXXLarge: 200,\n   labelWidthXXXLarge: 280,\n   labelWidthCheckbox: 0,\n\n   // show elements on desktop\n   hideMobile: false,\n};\n","/**\n * @class configMobile\n *\n * Manage our configuration settings for mobile styles.\n\n */\n\nexport default {\n   // Application List\n   appListRowHeight: 67,\n\n   // button types\n   buttonWidthLarge: 200,\n   buttonWidthMedium: 150,\n   buttonWidthSmall: 100,\n   buttonWidthExtraSmall: 50,\n\n   // tab types\n   tabWidthLarge: 200,\n   tabWidthMedium: 120,\n   tabWidthSmall: 100,\n   tabWidthExtraSmall: 50,\n\n   // column types\n   columnWidthLarge: 250,\n   columnWidthMedium: 200,\n   columnWidthSmall: 150,\n   columnWidthExtraSmall: 100,\n\n   // spacers\n   xSmallSpacer: 1,\n   smallSpacer: 1,\n   mediumSpacer: 10,\n   largeSpacer: 20,\n   xLargeSpacer: 50,\n   xxLargeSpacer: 100,\n   xxxLargeSpacer: 120,\n   appListSpacerRowHeight: 10,\n   appListSpacerColMinWidth: 1,\n   appListSpacerColMaxWidth: 1,\n   objectWorkspaceColWidth: 1,\n\n   // labels\n   labelWidthSmall: 50,\n   labelWidthMedium: 80,\n   labelWidthLarge: 120,\n   labelWidthXLarge: 120,\n   labelWidthXXLarge: 120,\n   labelWidthCheckbox: 0,\n\n   // hide elements for mobile\n   hideMobile: true,\n};\n","/**\n * @class config\n *\n * Manage our configuration settings.\n */\n\nimport ConfigDesktop from \"./configDesktop\";\nimport ConfigMobile from \"./configMobile\";\nimport Icons from \"./icons\";\n\nexport default {\n   config: function () {\n      // TODO: decide which config file to return here:\n      if (window.innerWidth < 768) {\n         return ConfigMobile;\n      }\n      return ConfigDesktop;\n   },\n   icons: Icons.icons,\n};\n","export default {\n   icons: [\n      \"500px\",\n      \"address-book\",\n      \"address-book-o\",\n      \"address-card\",\n      \"address-card-o\",\n      \"adjust\",\n      \"adn\",\n      \"align-center\",\n      \"align-justify\",\n      \"align-left\",\n      \"align-right\",\n      \"amazon\",\n      \"ambulance\",\n      \"american-sign-language-interpreting\",\n      \"anchor\",\n      \"android\",\n      \"angellist\",\n      \"angle-double-down\",\n      \"angle-double-left\",\n      \"angle-double-right\",\n      \"angle-double-up\",\n      \"angle-down\",\n      \"angle-left\",\n      \"angle-right\",\n      \"angle-up\",\n      \"apple\",\n      \"archive\",\n      \"area-chart\",\n      \"arrow-circle-down\",\n      \"arrow-circle-left\",\n      \"arrow-circle-o-down\",\n      \"arrow-circle-o-left\",\n      \"arrow-circle-o-right\",\n      \"arrow-circle-o-up\",\n      \"arrow-circle-right\",\n      \"arrow-circle-up\",\n      \"arrow-down\",\n      \"arrow-left\",\n      \"arrow-right\",\n      \"arrow-up\",\n      \"arrows\",\n      \"arrows-alt\",\n      \"arrows-h\",\n      \"arrows-v\",\n      \"asl-interpreting\",\n      \"assistive-listening-systems\",\n      \"asterisk\",\n      \"at\",\n      \"audio-description\",\n      \"automobile\",\n      \"backward\",\n      \"balance-scale\",\n      \"ban\",\n      \"bandcamp\",\n      \"bank\",\n      \"bar-chart\",\n      \"bar-chart-o\",\n      \"barcode\",\n      \"bars\",\n      \"bath\",\n      \"bathtub\",\n      \"battery\",\n      \"battery-0\",\n      \"battery-1\",\n      \"battery-2\",\n      \"battery-3\",\n      \"battery-4\",\n      \"battery-empty\",\n      \"battery-full\",\n      \"battery-half\",\n      \"battery-quarter\",\n      \"battery-three-quarters\",\n      \"bed\",\n      \"beer\",\n      \"behance\",\n      \"behance-square\",\n      \"bell\",\n      \"bell-o\",\n      \"bell-slash\",\n      \"bell-slash-o\",\n      \"bicycle\",\n      \"binoculars\",\n      \"birthday-cake\",\n      \"bitbucket\",\n      \"bitbucket-square\",\n      \"bitcoin\",\n      \"black-tie\",\n      \"blind\",\n      \"bluetooth\",\n      \"bluetooth-b\",\n      \"bold\",\n      \"bolt\",\n      \"bomb\",\n      \"book\",\n      \"bookmark\",\n      \"bookmark-o\",\n      \"braille\",\n      \"briefcase\",\n      \"btc\",\n      \"bug\",\n      \"building\",\n      \"building-o\",\n      \"bullhorn\",\n      \"bullseye\",\n      \"bus\",\n      \"buysellads\",\n      \"cab\",\n      \"calculator\",\n      \"calendar\",\n      \"calendar-check-o\",\n      \"calendar-minus-o\",\n      \"calendar-o\",\n      \"calendar-plus-o\",\n      \"calendar-times-o\",\n      \"camera\",\n      \"camera-retro\",\n      \"car\",\n      \"caret-down\",\n      \"caret-left\",\n      \"caret-right\",\n      \"caret-square-o-down\",\n      \"caret-square-o-left\",\n      \"caret-square-o-right\",\n      \"caret-square-o-up\",\n      \"caret-up\",\n      \"cart-arrow-down\",\n      \"cart-plus\",\n      \"cc\",\n      \"cc-amex\",\n      \"cc-diners-club\",\n      \"cc-discover\",\n      \"cc-jcb\",\n      \"cc-mastercard\",\n      \"cc-paypal\",\n      \"cc-stripe\",\n      \"cc-visa\",\n      \"certificate\",\n      \"chain\",\n      \"chain-broken\",\n      \"check\",\n      \"check-circle\",\n      \"check-circle-o\",\n      \"check-square\",\n      \"check-square-o\",\n      \"chevron-circle-down\",\n      \"chevron-circle-left\",\n      \"chevron-circle-right\",\n      \"chevron-circle-up\",\n      \"chevron-down\",\n      \"chevron-left\",\n      \"chevron-right\",\n      \"chevron-up\",\n      \"child\",\n      \"chrome\",\n      \"circle\",\n      \"circle-o\",\n      \"circle-o-notch\",\n      \"circle-thin\",\n      \"clipboard\",\n      \"clock-o\",\n      \"clone\",\n      \"close\",\n      \"cloud\",\n      \"cloud-download\",\n      \"cloud-upload\",\n      \"cny\",\n      \"code\",\n      \"code-fork\",\n      \"codepen\",\n      \"codiepie\",\n      \"coffee\",\n      \"cog\",\n      \"cogs\",\n      \"columns\",\n      \"comment\",\n      \"comment-o\",\n      \"commenting\",\n      \"commenting-o\",\n      \"comments\",\n      \"comments-o\",\n      \"compass\",\n      \"compress\",\n      \"connectdevelop\",\n      \"contao\",\n      \"copy\",\n      \"copyright\",\n      \"creative-commons\",\n      \"credit-card\",\n      \"credit-card-alt\",\n      \"crop\",\n      \"crosshairs\",\n      \"css3\",\n      \"cube\",\n      \"cubes\",\n      \"cut\",\n      \"cutlery\",\n      \"dashboard\",\n      \"dashcube\",\n      \"database\",\n      \"deaf\",\n      \"deafness\",\n      \"dedent\",\n      \"delicious\",\n      \"desktop\",\n      \"deviantart\",\n      \"diamond\",\n      \"digg\",\n      \"dollar\",\n      \"dot-circle-o\",\n      \"download\",\n      \"dribbble\",\n      \"drivers-license\",\n      \"drivers-license-o\",\n      \"dropbox\",\n      \"drupal\",\n      \"edge\",\n      \"edit\",\n      \"eercast\",\n      \"eject\",\n      \"ellipsis-h\",\n      \"ellipsis-v\",\n      \"empire\",\n      \"envelope\",\n      \"envelope-o\",\n      \"envelope-open\",\n      \"envelope-open-o\",\n      \"envelope-square\",\n      \"envira\",\n      \"eraser\",\n      \"etsy\",\n      \"eur\",\n      \"euro\",\n      \"exchange\",\n      \"exclamation\",\n      \"exclamation-circle\",\n      \"exclamation-triangle\",\n      \"expand\",\n      \"expeditedssl\",\n      \"external-link\",\n      \"external-link-square\",\n      \"eye\",\n      \"eye-slash\",\n      \"eyedropper\",\n      \"fa\",\n      \"facebook\",\n      \"facebook-f\",\n      \"facebook-official\",\n      \"facebook-square\",\n      \"fast-backward\",\n      \"fast-forward\",\n      \"fax\",\n      \"feed\",\n      \"female\",\n      \"fighter-jet\",\n      \"file\",\n      \"file-archive-o\",\n      \"file-audio-o\",\n      \"file-code-o\",\n      \"file-excel-o\",\n      \"file-image-o\",\n      \"file-movie-o\",\n      \"file-o\",\n      \"file-pdf-o\",\n      \"file-photo-o\",\n      \"file-picture-o\",\n      \"file-powerpoint-o\",\n      \"file-sound-o\",\n      \"file-text\",\n      \"file-text-o\",\n      \"file-video-o\",\n      \"file-word-o\",\n      \"file-zip-o\",\n      \"files-o\",\n      \"film\",\n      \"filter\",\n      \"fire\",\n      \"fire-extinguisher\",\n      \"firefox\",\n      \"first-order\",\n      \"flag\",\n      \"flag-checkered\",\n      \"flag-o\",\n      \"flash\",\n      \"flask\",\n      \"flickr\",\n      \"floppy-o\",\n      \"folder\",\n      \"folder-o\",\n      \"folder-open\",\n      \"folder-open-o\",\n      \"font\",\n      \"font-awesome\",\n      \"fonticons\",\n      \"fort-awesome\",\n      \"forumbee\",\n      \"forward\",\n      \"foursquare\",\n      \"free-code-camp\",\n      \"frown-o\",\n      \"futbol-o\",\n      \"gamepad\",\n      \"gavel\",\n      \"gbp\",\n      \"ge\",\n      \"gear\",\n      \"gears\",\n      \"genderless\",\n      \"get-pocket\",\n      \"gg\",\n      \"gg-circle\",\n      \"gift\",\n      \"git\",\n      \"git-square\",\n      \"github\",\n      \"github-alt\",\n      \"github-square\",\n      \"gitlab\",\n      \"gittip\",\n      \"glass\",\n      \"glide\",\n      \"glide-g\",\n      \"globe\",\n      \"google\",\n      \"google-plus\",\n      \"google-plus-circle\",\n      \"google-plus-official\",\n      \"google-plus-square\",\n      \"google-wallet\",\n      \"graduation-cap\",\n      \"gratipay\",\n      \"grav\",\n      \"group\",\n      \"h-square\",\n      \"hacker-news\",\n      \"hand-grab-o\",\n      \"hand-lizard-o\",\n      \"hand-o-down\",\n      \"hand-o-left\",\n      \"hand-o-right\",\n      \"hand-o-up\",\n      \"hand-paper-o\",\n      \"hand-peace-o\",\n      \"hand-pointer-o\",\n      \"hand-rock-o\",\n      \"hand-scissors-o\",\n      \"hand-spock-o\",\n      \"hand-stop-o\",\n      \"handshake-o\",\n      \"hard-of-hearing\",\n      \"hashtag\",\n      \"hdd-o\",\n      \"header\",\n      \"headphones\",\n      \"heart\",\n      \"heart-o\",\n      \"heartbeat\",\n      \"history\",\n      \"home\",\n      \"hospital-o\",\n      \"hotel\",\n      \"hourglass\",\n      \"hourglass-1\",\n      \"hourglass-2\",\n      \"hourglass-3\",\n      \"hourglass-end\",\n      \"hourglass-half\",\n      \"hourglass-o\",\n      \"hourglass-start\",\n      \"houzz\",\n      \"html5\",\n      \"i-cursor\",\n      \"id-badge\",\n      \"id-card\",\n      \"id-card-o\",\n      \"ils\",\n      \"image\",\n      \"imdb\",\n      \"inbox\",\n      \"indent\",\n      \"industry\",\n      \"info\",\n      \"info-circle\",\n      \"inr\",\n      \"instagram\",\n      \"institution\",\n      \"internet-explorer\",\n      \"intersex\",\n      \"ioxhost\",\n      \"italic\",\n      \"joomla\",\n      \"jpy\",\n      \"jsfiddle\",\n      \"key\",\n      \"keyboard-o\",\n      \"krw\",\n      \"language\",\n      \"laptop\",\n      \"lastfm\",\n      \"lastfm-square\",\n      \"leaf\",\n      \"leanpub\",\n      \"legal\",\n      \"lemon-o\",\n      \"level-down\",\n      \"level-up\",\n      \"life-bouy\",\n      \"life-buoy\",\n      \"life-ring\",\n      \"life-saver\",\n      \"lightbulb-o\",\n      \"line-chart\",\n      \"link\",\n      \"linkedin\",\n      \"linkedin-square\",\n      \"linode\",\n      \"linux\",\n      \"list\",\n      \"list-alt\",\n      \"list-ol\",\n      \"list-ul\",\n      \"location-arrow\",\n      \"lock\",\n      \"long-arrow-down\",\n      \"long-arrow-left\",\n      \"long-arrow-right\",\n      \"long-arrow-up\",\n      \"low-vision\",\n      \"magic\",\n      \"magnet\",\n      \"mail-forward\",\n      \"mail-reply\",\n      \"mail-reply-all\",\n      \"male\",\n      \"map\",\n      \"map-marker\",\n      \"map-o\",\n      \"map-pin\",\n      \"map-signs\",\n      \"mars\",\n      \"mars-double\",\n      \"mars-stroke\",\n      \"mars-stroke-h\",\n      \"mars-stroke-v\",\n      \"maxcdn\",\n      \"meanpath\",\n      \"medium\",\n      \"medkit\",\n      \"meetup\",\n      \"meh-o\",\n      \"mercury\",\n      \"microchip\",\n      \"microphone\",\n      \"microphone-slash\",\n      \"minus\",\n      \"minus-circle\",\n      \"minus-square\",\n      \"minus-square-o\",\n      \"mixcloud\",\n      \"mobile\",\n      \"mobile-phone\",\n      \"modx\",\n      \"money\",\n      \"moon-o\",\n      \"mortar-board\",\n      \"motorcycle\",\n      \"mouse-pointer\",\n      \"music\",\n      \"navicon\",\n      \"neuter\",\n      \"newspaper-o\",\n      \"object-group\",\n      \"object-ungroup\",\n      \"odnoklassniki\",\n      \"odnoklassniki-square\",\n      \"opencart\",\n      \"openid\",\n      \"opera\",\n      \"optin-monster\",\n      \"outdent\",\n      \"pagelines\",\n      \"paint-brush\",\n      \"paper-plane\",\n      \"paper-plane-o\",\n      \"paperclip\",\n      \"paragraph\",\n      \"paste\",\n      \"pause\",\n      \"pause-circle\",\n      \"pause-circle-o\",\n      \"paw\",\n      \"paypal\",\n      \"pencil\",\n      \"pencil-square\",\n      \"pencil-square-o\",\n      \"percent\",\n      \"phone\",\n      \"phone-square\",\n      \"photo\",\n      \"picture-o\",\n      \"pie-chart\",\n      \"pied-piper\",\n      \"pied-piper-alt\",\n      \"pied-piper-pp\",\n      \"pinterest\",\n      \"pinterest-p\",\n      \"pinterest-square\",\n      \"plane\",\n      \"play\",\n      \"play-circle\",\n      \"play-circle-o\",\n      \"plug\",\n      \"plus\",\n      \"plus-circle\",\n      \"plus-square\",\n      \"plus-square-o\",\n      \"podcast\",\n      \"power-off\",\n      \"print\",\n      \"product-hunt\",\n      \"puzzle-piece\",\n      \"qq\",\n      \"qrcode\",\n      \"question\",\n      \"question-circle\",\n      \"question-circle-o\",\n      \"quora\",\n      \"quote-left\",\n      \"quote-right\",\n      \"ra\",\n      \"random\",\n      \"ravelry\",\n      \"rebel\",\n      \"recycle\",\n      \"reddit\",\n      \"reddit-alien\",\n      \"reddit-square\",\n      \"refresh\",\n      \"registered\",\n      \"remove\",\n      \"renren\",\n      \"reorder\",\n      \"repeat\",\n      \"reply\",\n      \"reply-all\",\n      \"resistance\",\n      \"retweet\",\n      \"rmb\",\n      \"road\",\n      \"rocket\",\n      \"rotate-left\",\n      \"rotate-right\",\n      \"rouble\",\n      \"rss\",\n      \"rss-square\",\n      \"rub\",\n      \"ruble\",\n      \"rupee\",\n      \"s15\",\n      \"safari\",\n      \"save\",\n      \"scissors\",\n      \"scribd\",\n      \"search\",\n      \"search-minus\",\n      \"search-plus\",\n      \"sellsy\",\n      \"send\",\n      \"send-o\",\n      \"server\",\n      \"share\",\n      \"share-alt\",\n      \"share-alt-square\",\n      \"share-square\",\n      \"share-square-o\",\n      \"shekel\",\n      \"sheqel\",\n      \"shield\",\n      \"ship\",\n      \"shirtsinbulk\",\n      \"shopping-bag\",\n      \"shopping-basket\",\n      \"shopping-cart\",\n      \"shower\",\n      \"sign-in\",\n      \"sign-language\",\n      \"sign-out\",\n      \"signal\",\n      \"signing\",\n      \"simplybuilt\",\n      \"sitemap\",\n      \"skyatlas\",\n      \"skype\",\n      \"slack\",\n      \"sliders\",\n      \"slideshare\",\n      \"smile-o\",\n      \"snapchat\",\n      \"snapchat-ghost\",\n      \"snapchat-square\",\n      \"snowflake-o\",\n      \"soccer-ball-o\",\n      \"sort\",\n      \"sort-alpha-asc\",\n      \"sort-alpha-desc\",\n      \"sort-amount-asc\",\n      \"sort-amount-desc\",\n      \"sort-asc\",\n      \"sort-desc\",\n      \"sort-down\",\n      \"sort-numeric-asc\",\n      \"sort-numeric-desc\",\n      \"sort-up\",\n      \"soundcloud\",\n      \"space-shuttle\",\n      \"spinner\",\n      \"spoon\",\n      \"spotify\",\n      \"square\",\n      \"square-o\",\n      \"stack-exchange\",\n      \"stack-overflow\",\n      \"star\",\n      \"star-half\",\n      \"star-half-empty\",\n      \"star-half-full\",\n      \"star-half-o\",\n      \"star-o\",\n      \"steam\",\n      \"steam-square\",\n      \"step-backward\",\n      \"step-forward\",\n      \"stethoscope\",\n      \"sticky-note\",\n      \"sticky-note-o\",\n      \"stop\",\n      \"stop-circle\",\n      \"stop-circle-o\",\n      \"street-view\",\n      \"strikethrough\",\n      \"stumbleupon\",\n      \"stumbleupon-circle\",\n      \"subscript\",\n      \"subway\",\n      \"suitcase\",\n      \"sun-o\",\n      \"superpowers\",\n      \"superscript\",\n      \"support\",\n      \"table\",\n      \"tablet\",\n      \"tachometer\",\n      \"tag\",\n      \"tags\",\n      \"tasks\",\n      \"taxi\",\n      \"telegram\",\n      \"television\",\n      \"tencent-weibo\",\n      \"terminal\",\n      \"text-height\",\n      \"text-width\",\n      \"th\",\n      \"th-large\",\n      \"th-list\",\n      \"themeisle\",\n      \"thermometer\",\n      \"thermometer-0\",\n      \"thermometer-1\",\n      \"thermometer-2\",\n      \"thermometer-3\",\n      \"thermometer-4\",\n      \"thermometer-empty\",\n      \"thermometer-full\",\n      \"thermometer-half\",\n      \"thermometer-quarter\",\n      \"thermometer-three-quarters\",\n      \"thumb-tack\",\n      \"thumbs-down\",\n      \"thumbs-o-down\",\n      \"thumbs-o-up\",\n      \"thumbs-up\",\n      \"ticket\",\n      \"times\",\n      \"times-circle\",\n      \"times-circle-o\",\n      \"times-rectangle\",\n      \"times-rectangle-o\",\n      \"tint\",\n      \"toggle-down\",\n      \"toggle-left\",\n      \"toggle-off\",\n      \"toggle-on\",\n      \"toggle-right\",\n      \"toggle-up\",\n      \"trademark\",\n      \"train\",\n      \"transgender\",\n      \"transgender-alt\",\n      \"trash\",\n      \"trash-o\",\n      \"tree\",\n      \"trello\",\n      \"tripadvisor\",\n      \"trophy\",\n      \"truck\",\n      \"try\",\n      \"tty\",\n      \"tumblr\",\n      \"tumblr-square\",\n      \"turkish-lira\",\n      \"tv\",\n      \"twitch\",\n      \"twitter\",\n      \"twitter-square\",\n      \"umbrella\",\n      \"underline\",\n      \"undo\",\n      \"universal-access\",\n      \"university\",\n      \"unlink\",\n      \"unlock\",\n      \"unlock-alt\",\n      \"unsorted\",\n      \"upload\",\n      \"usb\",\n      \"usd\",\n      \"user\",\n      \"user-circle\",\n      \"user-circle-o\",\n      \"user-md\",\n      \"user-o\",\n      \"user-plus\",\n      \"user-secret\",\n      \"user-times\",\n      \"users\",\n      \"vcard\",\n      \"vcard-o\",\n      \"venus\",\n      \"venus-double\",\n      \"venus-mars\",\n      \"viacoin\",\n      \"viadeo\",\n      \"viadeo-square\",\n      \"video-camera\",\n      \"vimeo\",\n      \"vimeo-square\",\n      \"vine\",\n      \"vk\",\n      \"volume-control-phone\",\n      \"volume-down\",\n      \"volume-off\",\n      \"volume-up\",\n      \"warning\",\n      \"wechat\",\n      \"weibo\",\n      \"weixin\",\n      \"whatsapp\",\n      \"wheelchair\",\n      \"wheelchair-alt\",\n      \"wifi\",\n      \"wikipedia-w\",\n      \"window-close\",\n      \"window-close-o\",\n      \"window-maximize\",\n      \"window-minimize\",\n      \"window-restore\",\n      \"windows\",\n      \"won\",\n      \"wordpress\",\n      \"wpbeginner\",\n      \"wpexplorer\",\n      \"wpforms\",\n      \"wrench\",\n      \"xing\",\n      \"xing-square\",\n      \"y-combinator\",\n      \"y-combinator-square\",\n      \"yahoo\",\n      \"yc\",\n      \"yc-square\",\n      \"yelp\",\n      \"yen\",\n      \"yoast\",\n      \"youtube\",\n      \"youtube-play\",\n      \"youtube-square\",\n   ],\n};\n","import ABFactoryCore from \"./core/ABFactoryCore\";\n\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport { nanoid } from \"nanoid\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport performance from \"../utils/performance\";\nimport FilterComplex from \"./platform/FilterComplex\";\nimport SortPopup from \"./platform/views/ABViewGridPopupSortFields\";\nimport Papa from \"papaparse\";\n\n//\n// Our Common Resources\n//\nimport Config from \"../config/Config.js\";\n// Config : responsible for all the configuration/settings of our instance.\n\nimport Account from \"../resources/Account.js\";\n// Account : manages the current Logged in User and Account information.\n\nimport ClassUI from \"../ui/ClassUI.js\";\n\nimport Dialog from \"./_factory_utils/Dialog.js\";\n// Dialog : common UI dialogs.\n\nimport Multilingual from \"../resources/Multilingual.js\";\n// Multilingual: our interface Labels and language options\n\nimport Network from \"../resources/Network.js\";\n// Network: our interface for communicating to our server\n\nimport Storage from \"../resources/Storage.js\";\n// Storage: manages our interface for local storage\n\nimport ABViewManager from \"./core/ABViewManagerCore\";\n\nimport Tenant from \"../resources/Tenant.js\";\n// Tenant: manages the Tenant information of the current instance\n\nimport UISettings from \"./uiSettings/config.js\";\nimport ABViewComponent from \"./platform/views/viewComponent/ABViewComponent.js\";\n// UISettings: detailed settings for our common UI elements\n\nclass ABValidator {\n   constructor(AB) {\n      this.AB = AB;\n      this.errors = [];\n   }\n\n   addError(name, message) {\n      this.errors.push({ name: name, message: message });\n   }\n\n   pass() {\n      return this.errors.length == 0;\n   }\n\n   fail() {\n      return this.errors.length > 0;\n   }\n\n   toValidationObject() {\n      var obj = {\n         error: \"E_VALIDATION\",\n         invalidAttributes: {},\n      };\n\n      var attr = obj.invalidAttributes;\n\n      this.errors.forEach((e) => {\n         attr[e.name] = attr[e.name] || [];\n         attr[e.name].push(e);\n      });\n\n      return obj;\n   }\n\n   updateForm(form) {\n      var vObj = this.toValidationObject();\n      this.AB.Validation.isFormValidationError(vObj, form);\n   }\n\n   updateGrid(rowID, grid) {\n      var vObj = this.toValidationObject();\n      this.AB.Validation.isGridValidationError(vObj, rowID, grid);\n   }\n}\n\n//\n// AppBuilder Objects\n//\n\nclass ABFactory extends ABFactoryCore {\n   constructor(definitions) {\n      super(definitions);\n\n      // Common Reference to Configuration Values\n      this.Config = Config;\n\n      //\n      // Resources\n      //\n      this.Account = Account;\n      this.Dialog = Dialog;\n      this.Multilingual = Multilingual;\n      this.Network = Network;\n      this.Storage = Storage;\n      this.Tenant = Tenant;\n      this.Webix = webix;\n\n      // Plugin Classes\n      this.ClassUI = ClassUI;\n\n      // additional Class definitions\n      this.Class.FilterComplex = FilterComplex;\n      this.Class.ABViewManager = ABViewManager;\n      this.Class.SortPopup = SortPopup;\n      this.Class.ABViewComponent = ABViewComponent;\n\n      // Temp placeholders until Resources are implemented:\n      this.Analytics = {\n         log: () => {},\n         logError: () => {},\n      };\n      this.Lock = class Lock {\n         constructor() {}\n\n         acquire() {\n            return Promise.resolve();\n         }\n         release() {\n            return Promise.resolve();\n         }\n      };\n\n      this.performance = performance;\n\n      this.UISettings = UISettings;\n\n      this.Validation = {\n         validator: () => {\n            return new ABValidator(this);\n         },\n\n         errorSailsCleanup: function (error) {\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               // dig down to sails provided error object:\n               if (\n                  error.error &&\n                  error.error == \"E_UNKNOWN\" &&\n                  error.raw &&\n                  error.raw.length > 0\n               ) {\n                  error = error.raw[0];\n               }\n\n               // drill down to the embedded .err object if it exists\n               if (error.err) {\n                  error = error.err;\n               }\n\n               // if this is from our server response:\n               if (\n                  error.data &&\n                  error.data.error &&\n                  error.data.error == \"E_VALIDATION\"\n               ) {\n                  error = error.data;\n               }\n            }\n\n            return error;\n         },\n\n         /**\n          * @function AB.Validation.isFormValidationError\n          *\n          * scans the given error to see if it is a sails' response about an invalid\n          * value from one of the form elements.\n          *\n          * @codestart\n          * var form = $$('formID');\n          * var values = form.getValues();\n          * model.attr(values);\n          * model.save()\n          * .fail(function(err){\n          *     if (!OP.Form.isFormValidationError(err, form)) {\n          *         OP.error.log('Error saving current model ()', {error:err, values:values});\n          *     }\n          * })\n          * .then(function(newData){\n          *\n          * });\n          * @codeend\n          *\n          * @param {obj} error\n          *        the error response object\n          * @param {obj} form\n          *        the webix form instance (or reference)\n          * @return {bool}\n          *         true if error was about a form element.\n          *         false otherwise.\n          */\n         isFormValidationError: function (error, form) {\n            var hasFocused = false;\n            // {bool} have we set focus to form component?\n\n            // if we have an error object:\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               error = this.errorSailsCleanup(error);\n\n               //// Now process the error object\n               ////\n               if (\n                  (error.error && error.error == \"E_VALIDATION\") ||\n                  (error.code && error.code == \"E_VALIDATION\")\n               ) {\n                  var attrs = error.invalidAttributes;\n                  if (attrs) {\n                     var wasForm = false;\n                     for (var attr in attrs) {\n                        // if this is a field in the form:\n                        if (form.elements[attr]) {\n                           var errors = attrs[attr];\n                           var msg = [];\n                           errors.forEach(function (err) {\n                              msg.push(err.message);\n                           });\n\n                           // set the invalid error message\n                           form.markInvalid(attr, msg.join(\", \"));\n\n                           // set focus to the 1st form element we mark:\n                           if (!hasFocused) {\n                              form.elements[attr].focus();\n                              hasFocused = true;\n                           }\n\n                           wasForm = true;\n                        }\n                     }\n\n                     if (wasForm) {\n                        return true;\n                     }\n                  }\n               }\n            }\n\n            // if we missed updating our form with an error\n            // this was not a validation error so return false\n            return false;\n         },\n\n         /**\n          * @method AB.Validation.isGridValidationError\n          *\n          * scans the given error to see if it is a sails' response about an invalid\n          * value from one of our grid columns.\n          *\n          * @codestart\n          * var grid = $$('myGrid');\n          * model.attr(values);\n          * model.save()\n          * .fail(function(err){\n          *     if (!OP.Validation.isGridValidationError(err, editor, grid)) {\n          *         OP.error.log('Error saving current model ()', {error:err, values:values});\n          *     }\n          * })\n          * .then(function(newData){\n          *\n          * });\n          * @codeend\n          *\n          * @param {Error} error\n          *        the error response object\n          * @param {integer} row\n          *        the row id of the Grid to update.\n          * @param {webix.datatable} Grid\n          *        the webix grid instance (or reference)\n          * @return {bool}\n          *         true if error was about a grid column.\n          *         false otherwise.\n          */\n         isGridValidationError: function (error, row, Grid) {\n            // if we have an error object:\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               error = this.errorSailsCleanup(error);\n\n               //// Now process the error object\n               ////\n               if (\n                  (error.error && error.error == \"E_VALIDATION\") ||\n                  (error.code && error.code == \"E_VALIDATION\")\n               ) {\n                  var attrs = error.invalidAttributes;\n                  if (attrs) {\n                     var wasGrid = false;\n                     for (var attr in attrs) {\n                        Grid.addCellCss(row, attr, \"webix_invalid\");\n                        Grid.addCellCss(row, attr, \"webix_invalid_cell\");\n\n                        var msg = [];\n                        attrs[attr].forEach((e) => {\n                           msg.push(e.message);\n                        });\n\n                        webix.alert({\n                           text: attr + \": \" + msg.join(\", \"),\n                        });\n\n                        wasGrid = true;\n                     }\n\n                     Grid.refresh(row);\n                     Grid.clearSelection();\n\n                     if (wasGrid) {\n                        return true;\n                     }\n                  }\n               }\n            }\n\n            // if we missed updating our Grid with an error\n            // this was not a validation error so return false\n            return false;\n         },\n      };\n\n      // TODO: make sure \"error\" s are handled and sent to logs\n      // this.on(\"error\", ()=>{ Analytics.error })\n\n      this.Definitions = {};\n      // {obj} the provided interface for working with the ABDefinition table.\n      // NOTE: on the web client, we simply perform web API calls to perform\n      // the actions.  These are defined below.\n\n      this.on(\"error\", (err) => {\n         // this simply prevents thrown errors if there are no listeners.\n         console.error(err);\n      });\n\n      this._plugins = [];\n      // {array} of loaded Plugin.applications.\n\n      this._pendingNetworkRequests = {};\n      // {hash}   uuid : {Promise}\n      // convert our definitionsXXXX() operations to be Relay/offline compatible.\n      // if a queued operation is sent after a web browser refresh, then\n      // we will NOT have a pending promise to .resolve()/.reject()\n\n      this.Network.on(\"definition.create\", (context, err, fullDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: fullDef.id,\n            data: fullDef,\n         };\n         this.emit(\"ab.abdefinition.create\", pkt);\n\n         let newDef = this.definitionNew(fullDef);\n         pending?.resolve(newDef);\n      });\n\n      this.Network.on(\"definition.update\", (context, err, serverDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            if (err.toString().indexOf(\"Not Found\") > -1) {\n               return this.definitionCreate(context.values)\n                  .then(pending?.resolve)\n                  .catch(pending?.reject);\n            }\n            // log the error\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         this._definitions[context.id] = serverDef;\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: serverDef.id,\n            data: serverDef,\n         };\n         this.emit(\"ab.abdefinition.update\", pkt);\n\n         pending?.resolve(serverDef);\n      });\n\n      this.Network.on(\"definition.delete\", (context, err, serverDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            // log the error\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         delete this._definitions[context.id];\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: context.id,\n            data: serverDef,\n         };\n         this.emit(\"ab.abdefinition.delete\", pkt);\n\n         pending?.resolve();\n      });\n\n      //\n      // Rules\n      //\n      const platformRules = {\n         /**\n          * @method toDate\n          *\n          * @param {string} dateText\n          * @param {Object} options - {\n          *                               format: \"string\",\n          *                               ignoreTime: boolean\n          *                            }\n          * @return {Date}\n          */\n         toDate: (dateText = \"\", options = {}) => {\n            if (!dateText) return;\n\n            if (options.ignoreTime) dateText = dateText.replace(/T.*/, \"\");\n\n            let result = options.format\n               ? moment(dateText, options.format)\n               : moment(dateText);\n\n            let supportFormats = [\n               \"YYYY-MM-DD\",\n               \"YYYY/MM/DD\",\n               \"DD/MM/YYYY\",\n               \"MM/DD/YYYY\",\n               \"DD-MM-YYYY\",\n               \"MM-DD-YYYY\",\n            ];\n\n            supportFormats.forEach((format) => {\n               if (!result || !result.isValid())\n                  result = moment(dateText, format);\n            });\n\n            return new Date(result);\n         },\n\n         /**\n          * @method toDateFormat\n          *\n          * @param {Date} date\n          * @param {Object} options - {\n          *           format: \"string\",\n          *           localeCode: \"string\"\n          *         }\n          *\n          * @return {string}\n          */\n         toDateFormat: (date, options) => {\n            if (!date) return \"\";\n\n            let momentObj = moment(date);\n\n            if (options.localeCode) momentObj.locale(options.localeCode);\n\n            return momentObj.format(options.format);\n         },\n\n         /**\n          * @method subtractDate\n          *\n          * @param {Date} date\n          * @param {number} number\n          * @param {string} unit\n          *\n          * @return {Date}\n          */\n         subtractDate: (date, number, unit) => {\n            return moment(date).subtract(number, unit).toDate();\n         },\n\n         /**\n          * @method addDate\n          *\n          * @param {Date} date\n          * @param {number} number\n          * @param {string} unit\n          *\n          * @return {Date}\n          */\n         addDate: (date, number, unit) => {\n            return moment(date).add(number, unit).toDate();\n         },\n\n         /**\n          * Get today's UTC time range in \"YYYY-MM-DD HH:MM:SS\" format.\n          *\n          * It converts the start and end of today to UTC to keep things consistent\n          * across time zones. Handy when you need to deal with dates in different regions.\n          *\n          * @returns {string} UTC time range for today.\n          */\n\n         getUTCDayTimeRange: () => {\n            let now = new Date();\n            let year = now.getFullYear();\n            let month = now.getMonth();\n            let date = now.getDate();\n            let startOfDay = new Date(year, month, date, 0, 0, 0);\n            let endOfDay = new Date(year, month, date, 23, 59, 59);\n\n            // Convert to UTC by subtracting the timezone offset\n            let startOfDayUTC = new Date(\n               startOfDay.getTime() + startOfDay.getTimezoneOffset() * 60000\n            );\n            let endOfDayUTC = new Date(\n               endOfDay.getTime() + endOfDay.getTimezoneOffset() * 60000\n            );\n\n            //  Format the date in \"YYYY-MM-DD HH:MM:SS\" format\n            let formatDate = (date) => {\n               let isoString = date.toISOString();\n               return `${isoString.slice(0, 10)} ${isoString.slice(11, 19)}`;\n            };\n            return formatDate(startOfDayUTC).concat(\n               \"|\",\n               formatDate(endOfDayUTC)\n            );\n         },\n      };\n      (Object.keys(platformRules) || []).forEach((k) => {\n         this.rules[k] = platformRules[k];\n      });\n   }\n\n   /**\n    * init()\n    * prepare the ABFactory for operation. This includes parsing the\n    * definitions into useable objects, preparing the System Resources, etc.\n    * @return {Promise}\n    */\n   async init() {\n      //\n      // Prepare our Resources First\n      //\n      var allInits = [];\n\n      allInits.push(this.Account.init(this));\n      allInits.push(this.Multilingual.init(this));\n      allInits.push(this.Network.init(this));\n      allInits.push(this.Tenant.init(this));\n\n      await Promise.all(allInits);\n      await this.Storage.init(this);\n      var data = await this.Storage.get(\"local_settings\");\n      this._localSettings = data || {};\n\n      //\n      // Real Time Update Handlers\n      //\n\n      // new ABDefinition created:\n      this.on(\"ab.abdefinition.create\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         this._definitions[pkt.id] = pkt.data;\n         this.definitionSync(\"created\", pkt.id, pkt.data);\n      });\n\n      // ABDefinition updated:\n      this.on(\"ab.abdefinition.update\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         this._definitions[pkt.id] = pkt.data;\n         this.definitionSync(\"updated\", pkt.id, pkt.data);\n      });\n\n      // ABDefinition delete:\n      this.on(\"ab.abdefinition.delete\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         delete this._definitions[pkt.id];\n         this.definitionSync(\"destroyed\", pkt.id, pkt.data);\n      });\n\n      return super.init();\n\n      // return Promise.all(allInits)\n      //    .then(() => {\n      //       // some Resources depend on the above to be .init() before they can\n      //       // .init() themselves.\n      //       return this.Storage.init(this).then(() => {\n      //          return this.Storage.get(\"local_settings\").then((data) => {\n      //             this._localSettings = data || {};\n      //          });\n      //       });\n      //    })\n      //    .then(() => {\n      //       //\n      //       // RealTime Updates of our ABDefinitions\n      //       //\n\n      //       // new ABDefinition created:\n      //       this.on(\"ab.abdefinition.create\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          this._definitions[pkt.id] = pkt.data;\n      //          this.definitionSync(\"created\", pkt.id, pkt.data);\n      //       });\n\n      //       // ABDefinition updated:\n      //       this.on(\"ab.abdefinition.update\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          this._definitions[pkt.id] = pkt.data;\n      //          this.definitionSync(\"updated\", pkt.id, pkt.data);\n      //       });\n\n      //       // ABDefinition delete:\n      //       this.on(\"ab.abdefinition.delete\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          delete this._definitions[pkt.id];\n      //          this.definitionSync(\"destroyed\", pkt.id, pkt.data);\n      //       });\n\n      //       return super.init();\n      //    });\n   }\n\n   /**\n    * definiitonCreate(def)\n    * create a new ABDefinition\n    * @param {obj} def\n    *        the value hash of the new definition entry\n    * @return {Promise}\n    *        resolved with a new {ABDefinition} for the entry.\n    */\n   async definitionCreate(def) {\n      // we will set our uuid\n      if (typeof def.id == \"undefined\") {\n         def.id = this.uuid();\n         def.json.id = def.id;\n      }\n\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.create\",\n            context: {\n               uuid,\n            },\n         };\n         this.Network.post(\n            {\n               url: `/definition/create`,\n               data: def,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to CREATE definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to CREATE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionCreate()\",\n               message,\n               def,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionDestroy(id)\n    * delete an ABDefinition\n    * @param {string} id\n    *        the uuid of the ABDefinition to delete\n    * @return {Promise}\n    */\n   async definitionDestroy(id) {\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.delete\",\n            context: {\n               id,\n               uuid,\n            },\n         };\n         this.Network.delete(\n            {\n               url: `/definition/${id}`,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to DESTROY definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to DELETE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionDestroy()\",\n               message,\n               id,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionUpdate(id, def)\n    * update an existing ABDefinition\n    * @param {string} id\n    *        the uuid of the ABDefinition to update.\n    * @param {obj} values\n    *        the value hash of the new definition values\n    * @return {Promise}\n    *        resolved with a new {ABDefinition} for the entry.\n    */\n   async definitionUpdate(id, values) {\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.update\",\n            context: {\n               id,\n               uuid,\n               values,\n            },\n         };\n         this.Network.put(\n            {\n               url: `/definition/${id}`,\n               data: values,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to UPDATE definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to UPDATE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionUpdate()\",\n               message,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionsParse()\n    * include the incoming definitions into our ABFactory. These new\n    * definitions will replace any existing ones with the same .id.\n    * @param {array[ABDefinitioin]} defs\n    *     the incoming array of ABDefinitions to parse.\n    * @return {Promise}\n    */\n   // definitionsParse(defs = []) {\n   //    if (!Array.isArray(defs)) {\n   //       defs = [defs];\n   //    }\n\n   //    // store/replace the incoming definitions\n   //    // 1st: insert ALL our definitions internally\n   //    defs.forEach((d) => {\n   //       this._definitions[d.id] = d;\n   //    });\n   //    // 2nd: Now we can then go through and signal the \"updates\"\n   //    // and the related objects can find their dependent definitions.\n   //    defs.forEach((d) => {\n   //       this.definitionSync(\"updated\", d.id, d);\n   //    });\n\n   //    return Promise.resolve();\n   // }\n\n   /**\n    * will send alerts to a group of people. These alerts are usually about\n    * configuration errors, or software problems.\n    * @param {string} domain which group of people we are sending a notification to.\n    * @param {Error} error An error object generated at the point of issue.\n    * @param {json} info Additional related information concerning the issue.\n    */\n   notify(domain, error, info) {\n      performance.notify(domain, error, info);\n   }\n\n   plugins() {\n      return this._plugins;\n   }\n   pluginLoad(p) {\n      this._plugins.push(p);\n   }\n\n   //\n   // Utilities\n   //\n   alert(options) {\n      this.Webix.alert(options);\n   }\n\n   cloneDeep(value) {\n      return _.cloneDeep(value);\n   }\n\n   error(message, ...rest) {\n      var emitData = {\n         message: `ABFactory[${this.Tenant.id()}]:${message.toString()}`,\n      };\n\n      console.error(emitData.message);\n      if (message instanceof Error) {\n         emitData.error = message;\n         // this dumps the error.stack\n         console.error(message);\n      }\n\n      if (rest.length > 0) {\n         rest.forEach((r) => {\n            if (r instanceof Error) {\n               emitData.error = r;\n               // this dumps the error.stack\n               console.error(r);\n            }\n\n            if (typeof r == \"object\") {\n               for (var k in r) {\n                  emitData[k] = r[k];\n                  console.error(k, r[k]);\n               }\n            }\n         });\n      }\n      this.emit(\"error\", emitData);\n   }\n\n   jobID() {\n      return nanoid();\n   }\n\n   Label() {\n      return (...params) => {\n         return this.Multilingual.label(...params);\n      };\n   }\n\n   localSettings(key, value) {\n      if (typeof value == \"undefined\") {\n         // this is a getter:\n         return this._localSettings[key];\n      } else {\n         // setting a value:\n         this._localSettings[key] = value;\n         return this.Storage.set(`local_settings`, this._localSettings);\n      }\n   }\n\n   log(message, ...rest) {\n      console.log(message);\n      rest.forEach((r) => {\n         console.log(r);\n      });\n   }\n\n   isNil(value) {\n      return _.isNil(value);\n   }\n\n   /**\n    * @method rules.isUUID\n    * evaluate a given value to see if it matches the format of a uuid\n    * @param {string} key\n    * @return {boolean}\n    */\n   isUUID(key) {\n      var checker = RegExp(\n         \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\",\n         \"i\"\n      );\n      return checker.test(key);\n   }\n\n   merge(...params) {\n      return _.merge(...params);\n   }\n\n   orderBy(...params) {\n      return _.orderBy(...params);\n   }\n\n   uniq(...params) {\n      return _.uniq(...params);\n   }\n\n   kebabCase(...params) {\n      return _.kebabCase(...params);\n   }\n\n   sumBy(...params) {\n      return _.sumBy(...params);\n   }\n\n   meanBy(...params) {\n      return _.meanBy(...params);\n   }\n\n   maxBy(...params) {\n      return _.maxBy(...params);\n   }\n\n   minBy(...params) {\n      return _.minBy(...params);\n   }\n\n   uuid() {\n      return uuidv4();\n   }\n\n   warn(message, ...rest) {\n      console.warn(message);\n      rest.forEach((r) => {\n         console.warn(r);\n      });\n   }\n\n   isString(...params) {\n      return _.isString(params);\n   }\n\n   async scriptLoad(url) {\n      await new Promise((resolve, reject) => {\n         var cb = () => resolve();\n         // Adding the script tag to the head as suggested before\n         const head = document.head;\n         const script = document.createElement(\"script\");\n         script.type = \"text/javascript\";\n         script.src = url;\n\n         // Then bind the event to the callback function.\n         // There are several events for cross browser compatibility.\n         script.onreadystatechange = cb;\n         script.onload = cb;\n         script.onerror = () => {\n            reject(\n               new Error(\n                  `Preloader:ScriptLoad(): Error loading script (${url})`\n               )\n            );\n         };\n         // Fire the loading\n         head.appendChild(script);\n      });\n   }\n\n   async scriptLoadAll(urls) {\n      urls = urls.filter((u) => u);\n      await Promise.all(urls.map((url) => this.scriptLoad(url)));\n   }\n\n   async cssLoad(url) {\n      await new Promise((resolve, reject) => {\n         const head = document.head;\n         const link = document.createElement(\"link\");\n         link.rel = \"stylesheet\";\n         link.href = url;\n\n         link.onload = () => resolve();\n         link.onerror = () => {\n            reject(new Error(`Error loading CSS file (${url})`));\n         };\n\n         head.appendChild(link);\n      });\n   }\n\n   async cssLoadAll(urls) {\n      urls = urls.filter((u) => u);\n      await Promise.all(urls.map((url) => this.cssLoad(url)));\n   }\n\n   csvToJson(csvData) {\n      return Papa.parse(csvData, {\n         header: true,\n         skipEmptyLines: true,\n      });\n   }\n\n   jsonToCsv(jsonData) {\n      return Papa.unparse(jsonData);\n   }\n}\n\nexport default ABFactory;\n","/**\n * ABApplicationCore\n *\n * This is the core ABApplication class that manages the common operations\n * of an ABApplication across platforms.\n *\n * It's primary responsibility is to decode a given set of attributes into\n * a working instance of an ABApplication that can return instances of\n * it's defined sub objects.\n *\n * Platform Specific versions of those objects should be defined in a peer\n * directory named platform. These versions of the objects should override\n * these Core objects with platform specific methods of operation (like\n * .save()).\n *\n * Initially your target application should load your platform/ABApplication.js\n * file, which will include this file and sub class it.\n *\n * However, this file will include the remaining files from your platform/*\n * versions.\n */\n\n// webpack can handle 'require()' statements, but node can't handle import\n// so let's use require():\nconst ABViewManager = require(\"../platform/ABViewManager\");\nvar ABMLClass = require(\"../platform/ABMLClass\");\n\nfunction toBool(val) {\n   if (typeof val == \"undefined\") {\n      return false;\n   }\n\n   if (val === \"\" || val === \"false\" || val === \"0\") {\n      return false;\n   }\n\n   if (val === \"true\" || val === \"1\") {\n      return true;\n   }\n\n   return val;\n}\n\nmodule.exports = class ABApplicationCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\", \"description\"], AB);\n\n      // attributes should be in format:\n      // {\n      //    id:##,\n      //    json:{},\n      //    name:\"XYZ\"\n      // }\n      attributes.json = attributes.json || {};\n\n      // ABApplication Attributes\n      this.id = attributes.id;\n      // {string} uuid\n\n      this.type = attributes.type || \"application\";\n      // {string} .type\n      // the ABDefinition.type of this object.\n\n      this.appType = attributes.appType || \"web\";\n      // {string} .appType\n      // the kind of Application this is. [\"web\", \"mobile\"]\n\n      this.json = attributes.json;\n      if (typeof this.json == \"string\") this.json = JSON.parse(this.json);\n      // {obj} .json\n      // the full settings of this ABApplication\n\n      this.json[\"versionData\"] = attributes.json?.versionData || {\n         versionNumber: \"1.0.0\",\n         changeLog: {\n            \"1.0.0\": {\n               author: \"N/A\",\n               version: \"1.0.0\",\n               keepVersion: 0,\n               commitMessage: \"Initial Version\",\n               timestamp: new Date().toISOString(),\n            },\n         },\n      };\n\n      if (typeof this.json.versionData == \"string\")\n         this.json.versionData = JSON.parse(this.json.versionData);\n      // {obj} .json\n      // the full version log data of this ABApplication\n\n      this.name = attributes.name || this.json.name || \"\";\n      // {string} .name\n      // the hard coded name of this ABDefinition Object, not to be confused\n      // with the .label.  The .name is created at design time and is a text\n      // reference for this object.\n\n      this.icon = attributes.icon || \"fa-rocket\";\n      // {string} .icon\n      // this is a reference to a font awesome icon including the `fa-`\n      // example `fa-child` should be stored for the `child` icon to be used\n      // if user wants to get creative they can add more to this field following\n      // these examples https://fontawesome.com/v4/examples/\n\n      this.isSystemObject = toBool(attributes.isSystemObject);\n      // {bool} .isSystemObject\n      // is this one of the integrated System Objects used by our framework?\n      // Some ABApplications and ABObjects are central to the running of the\n      // AppBuilder site.  They are marked with .isSystemObject = true;  It\n      // requires the role \"System Designer\" in order to edit/modify them.\n\n      this.roleAccess = attributes.roleAccess || [];\n      if (!Array.isArray(this.roleAccess)) {\n         this.roleAccess = [this.roleAccess];\n      }\n      this.roleAccess = this.roleAccess.filter((r) => r);\n      // {array}\n      // the {ABSiteRole.id}s of the roles allowed to work with this\n      // ABApplication. (see .isAccessManaged for more info)\n\n      this.isAccessManaged = JSON.parse(attributes.isAccessManaged || false);\n      // {bool} .isAccessManaged\n      // does this Application imploy the more sophisticated  Access\n      // permissions, or the simpler Role access permissions.\n      // {true} : allows an administrator to set which role can View|Edit|Delete\n      //          elements of an application.\n      // {false}: indicates users having one of the .roleAccess values can have\n      //          full access to this application\n\n      this.accessManagers = attributes.accessManagers;\n      if (typeof this.accessManagers == \"string\")\n         this.accessManagers = JSON.parse(this.accessManagers);\n      // {??} .accessManagers\n      // if .isAccessManaged == true, then .accessManagers contain the definitions\n      // of the detailed access permissions.\n\n      this.isTranslationManaged = JSON.parse(\n         attributes.isTranslationManaged || false\n      );\n      this.translationManagers = attributes.translationManagers;\n      if (typeof this.translationManagers == \"string\")\n         this.translationManagers = JSON.parse(this.translationManagers);\n\n      this.isTutorialManaged = JSON.parse(\n         attributes.isTutorialManaged || false\n      );\n      this.tutorialManagers = attributes.tutorialManagers;\n      if (typeof this.tutorialManagers == \"string\")\n         this.tutorialManagers = JSON.parse(this.tutorialManagers);\n\n      this.hintIDs = attributes.json.hintIDs || [];\n      // {array} .hintIDs\n      // All the {ABHint.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABHint}s are included or excluded from\n      // this app.\n\n      this.objectIDs = attributes.json.objectIDs || [];\n      // {array} .objectIDs\n      // All the {ABObject.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABObject}s are included or excluded from this app.\n\n      this.queryIDs = attributes.json.queryIDs || [];\n      // {array} .queryIDs\n      // All the {ABObjectQuery.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABObjectQueries}s are included or excluded from\n      // this app.\n\n      this.datacollectionIDs = attributes.json.datacollectionIDs || [];\n      // {array} .datacollectionIDs\n      // All the {ABDataCollection.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABDataCollection}s are included or excluded from\n      // this app.\n\n      // import all our {ABViewPage}s\n      let newPages = [];\n      (attributes.json.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            newPages.push(this.pageNew(def));\n         } else {\n            this.emit(\n               \"warning\",\n               `App[${this.id}] is referenceing an unknown Page[${id}]`,\n               {\n                  appID: this.id,\n                  pageID: id,\n               }\n            );\n            // console.error(\n            //    `App[${this.id}] is referenceing an unknown Page[${id}]`\n            // );\n         }\n      });\n      this._pages = newPages;\n      // {array} ._pages\n      // an array of all the {ABViewPages} this ABApplication offers as\n      // interfaces for working with our Data.\n      // ABViewPages operate within the confines of an ABApplication so\n      // they are created/stored/accessed from within an ABApplication\n\n      (attributes.json.processIDs || []).forEach((pID) => {\n         var p = this.AB.processByID(pID);\n         if (!p) {\n            this.emit(\n               \"warning\",\n               `Application is referencing an unknown process.`,\n               { appID: this.id, processID: pID }\n            );\n         }\n      });\n\n      this.processIDs = attributes.json.processIDs || [];\n      // {array} .processIDs\n      // an array of all the {ABProcess.id}s referenced by this Application.\n\n      // Object List Settings\n      attributes.json.objectListSettings =\n         attributes.json.objectListSettings || {};\n      this.objectListSettings = this.objectListSettings || {};\n      this.objectListSettings.isOpen = JSON.parse(\n         attributes.json.objectListSettings.isOpen || false\n      );\n      this.objectListSettings.searchText =\n         attributes.json.objectListSettings.searchText || \"\";\n      this.objectListSettings.sortDirection =\n         attributes.json.objectListSettings.sortDirection || \"asc\";\n      this.objectListSettings.isGroup = JSON.parse(\n         attributes.json.objectListSettings.isGroup || false\n      );\n\n      // let the MLClass now process the translations:\n      // transition issues:\n      attributes.translations =\n         attributes.translations || attributes.json.translations;\n\n      super.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   get ViewManager() {\n      return ABViewManager;\n   }\n\n   /// ABApplication data methods\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABApplication is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   isAccessibleForRoles(roles) {\n      var foundRole = false;\n\n      // if we are on the basic Role assignments:\n      if (!this.isAccessManaged) {\n         (roles || []).forEach((r) => {\n            if (this.roleAccess.indexOf(r.uuid || r) > -1) {\n               foundRole = true;\n            }\n         });\n         return foundRole;\n      }\n\n      // isAccessManaged has been set, so 2 kinds of ppl can\n      // see this App\n      // 1) an AccessManager\n      if (parseInt(this.accessManagers.useRole)) {\n         (roles || []).forEach((r) => {\n            if (this.accessManagers.role.indexOf(r.uuid || r) > -1) {\n               foundRole = true;\n            }\n         });\n      }\n\n      // stop here if found.\n      if (foundRole) return foundRole;\n\n      // 2) someone who has a role that can see one of it's pages.\n      // scan each Page of this Application\n      (this.pages() || []).forEach((p) => {\n         // check to see if that page.isAccessibleForRoles()\n         if (p.isAccessibleForRoles(roles)) {\n            foundRole = true;\n         }\n      });\n      return foundRole;\n   }\n\n   get isWebApp() {\n      return this.appType == \"web\";\n   }\n\n   get isMobile() {\n      return this.appType == \"mobile\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      let versionData = this.json.versionData;\n\n      this.json = super.toObj();\n\n      this.json.name = this.name;\n\n      this.json.versionData = versionData;\n\n      this.json.objectIDs = this.objectIDs;\n\n      this.json.objectListSettings = this.objectListSettings;\n\n      this.json.hintIDs = this.hintIDs;\n\n      this.json.queryIDs = this.queryIDs;\n\n      this.json.datacollectionIDs = this.datacollectionIDs;\n\n      this.json.pageIDs = (this._pages || []).map((p) => p.id);\n\n      this.json.processIDs = this.processIDs || [];\n\n      // // for each MobileApp: compile to json\n      // var currApps = [];\n      // this._mobileApps.forEach((app) => {\n      //    currApps.push(app.toObj())\n      // })\n      // this.json.mobileApps = currApps;\n\n      return {\n         id: this.id,\n         type: this.type || \"application\",\n         appType: this.appType || \"web\",\n         name: this.name,\n         icon: this.icon,\n         isSystemObject: this.isSystemObject,\n         json: this.json,\n         roleAccess: this.roleAccess,\n         translations: this.json.translations,\n         isAccessManaged: this.isAccessManaged,\n         isTranslationManaged: this.isTranslationManaged,\n         isTutorialManaged: this.isTutorialManaged,\n         accessManagers: this.accessManagers,\n         translationManagers: this.translationManagers,\n         tutorialManagers: this.tutorialManagers,\n      };\n   }\n\n   ///\n   /// Mobile Apps\n   ///\n\n   ///\n   /// Datacollections\n   ///\n\n   // datacollectionNew(values) {\n   //    return new ABDataCollectionCore(values, this);\n   // }\n\n   datacollectionsExcluded(filter = () => true) {\n      return this.AB.datacollections((o) => {\n         return this.datacollectionIDs.indexOf(o.id) == -1;\n      }).filter(filter);\n   }\n\n   datacollectionsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.datacollections((o) => {\n         return this.datacollectionIDs.indexOf(o.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Objects\n   ///\n\n   objectsExcluded(filter = () => true) {\n      return this.AB.objects((o) => {\n         return this.objectIDs.indexOf(o.id) == -1;\n      }).filter(filter);\n   }\n\n   objectsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.objects((o) => {\n         return this.objectIDs.indexOf(o.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Hints\n   ///\n\n   hintsExcluded(filter = () => true) {\n      return this.AB.hints((h) => {\n         return this.hintIDs.indexOf(h.id) == -1;\n      }).filter(filter);\n   }\n\n   hintsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.hints((h) => {\n         return this.hintIDs.indexOf(h.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   /**\n    * @method connectedObjects()\n    *\n    * return an array of all the connected ABObjects for a given ABObject.\n    *\n    * @param {string} id\n    *        an ID of an ABObject\n    * @return {array}   array of options for webix select\n    *         [ {id, value}, ... ]\n    */\n   connectedObjects(id) {\n      console.error(\n         \"ABApplicationCore.connectedObjects(): who is calling this?\"\n      );\n\n      if (id == \"\") return [];\n\n      // Determine the object from the ID\n      var myObj = this.AB.objectByID(id);\n\n      // Get all the connected Fields for that object\n      var connectedFields = myObj.connectFields();\n      // Store the related fields associatively inside their related Objects ID\n      var connectedObj = {};\n      connectedFields.forEach((f) => {\n         connectedObj[f.settings.linkObject] = this.AB.objectByID(\n            f.settings.linkObject\n         );\n      });\n      // Look up the objects by their ID and push them in an options array\n      var linkedObjects = [];\n      Object.keys(connectedObj).forEach(function (key /*, index */) {\n         linkedObjects.push({\n            id: this[key].id,\n            value: this[key].label,\n         });\n      }, connectedObj /* = this. inside fn */);\n\n      return linkedObjects;\n   }\n\n   /**\n    * @method connectedFields()\n    * return an array of all the connected ABFields for a given ABObject\n    * @param {string} currObjID\n    *        an ID of the current ABObject\n    * @param {string} linkedObjectID\n    *        an ID of the linked ABObject\n    * @return {array}\n    *        array of options for webix select\n    */\n   connectedFields(currObjID, linkedObjectID) {\n      console.error(\"!!! Who is calling this?\");\n\n      // Determine the object from the currObjID\n      var myObj = this.AB.objectByID(currObjID);\n\n      // Get all the connected Fields for our object that match the linkedObjectID\n      var connectedFields = myObj.connectFields(\n         (f) => f.settings.linkObject == linkedObjectID\n      );\n      // Build an arry of options for the webix select\n      var linkedFields = [];\n      connectedFields.forEach((f) => {\n         linkedFields.push({ id: f.columnName, value: f.label });\n      });\n\n      return linkedFields;\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    * return an array of all the ABViewPages for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABViewPages that this fn\n    *        returns true for.\n    * @param {boolean} deep\n    *        flag to search in sub pages\n    * @return {array}\n    *        array of ABViewPages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._pages || this._pages.length < 1) return result;\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         // function searchDeep(curr) {\n         //    let resultsCurr = curr._pages.filter(filter);\n\n         //    for (let p of curr._pages) {\n         //       let resultsP = searchDeep(p);\n         //       if (resultsP.length) {\n         //          resultsCurr = resultsCurr.concat(resultsP);\n         //       }\n         //    }\n         //    // if we get here, end\n         //    return resultsCurr;\n         // }\n\n         // result = searchDeep(this);\n         result = this._searchDeep(this, \"_pages\", filter);\n      }\n      // find root pages\n      else {\n         result = (this._pages || []).filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method _searchDeep()\n    * search each node of a tree and return all matches that pass the provided\n    * filter.\n    * @param {AB*} curr\n    *        An object that contains a tree structure.\n    * @param {string} key\n    *        The curr[key] reference of the array of items to search\n    * @param {function} filter\n    *        The curr[key].filter(filter) that returns true/false if a node is\n    *        to be included in the result.\n    * @return {array}\n    */\n   _searchDeep(curr, key, filter) {\n      let items = curr[key] ?? [];\n      let resultsCurr = items.filter?.(filter) ?? [];\n\n      for (let p of items) {\n         let resultsP = this._searchDeep(p, key, filter);\n         if (resultsP.length) {\n            resultsCurr = resultsCurr.concat(resultsP);\n         }\n      }\n\n      return resultsCurr;\n   }\n\n   ///\n   /// Processes\n   ///\n\n   /**\n    * @method processes()\n    * return an array of all the ABProcesses for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABProcesses that\n    *        this fn returns true for.\n    * @return {array}\n    *        array of ABProcesses\n    */\n   processes(filter = () => true) {\n      return this.AB.processes((p) => {\n         return this.processIDs.indexOf(p.id) > -1;\n      }).filter(filter);\n   }\n\n   hasProcess(process) {\n      if (process && process.id) {\n         return this.processIDs.indexOf(process.id) > -1;\n      } else {\n         return false;\n      }\n   }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    * return an array of all the Views for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of Views that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of Views\n    */\n   views(filter) {\n      var result = [];\n      var views = [];\n      var pages = [];\n\n      if (\n         (!this._pages || this._pages.length < 1) &&\n         (!this._views || this._views.length < 1)\n      )\n         return result;\n\n      function lookDeep(view) {\n         if (view._pages && view._pages.length) {\n            view._pages.forEach((p) => {\n               // check the page views recusively\n               var pageViews = p.views(filter, true);\n               // if there was a match store it\n               if (pageViews && pageViews.length > 0) {\n                  result = pageViews;\n               }\n               // if no match move on to the subpages\n               if (result.length < 1) {\n                  // loop through each subpage recursively\n                  var subPages = p.pages(filter, true);\n                  // if there was a match store it\n                  if (subPages && subPages.length > 0) {\n                     result = subPages;\n                  }\n                  if (result.length < 1) {\n                     lookDeep(p);\n                  }\n               }\n            });\n         }\n      }\n\n      // look at views recursively\n      if (filter) {\n         // look at views recursively (views can have subviews and so on)\n         if (this._views) {\n            views = this._views.filter(filter);\n\n            if (views.length < 1) {\n               this._views.forEach((v) => {\n                  var subViews = v.views(filter, true);\n                  if (subViews && subViews.length > 0) {\n                     views = subViews;\n                  }\n               });\n            }\n         }\n\n         // if no views of the root page match now look at the sub pages and their views\n         if (views.length) {\n            result = views;\n         } else {\n            // check the first level subpages\n            result = this._pages.filter(filter);\n\n            // if no match check each pages views and subpages\n            if (result.length < 1) {\n               // looping through pages\n               lookDeep(this);\n            }\n         }\n      }\n      // find all views\n      else {\n         // recusively gather all views on this view\n         if (this._views) {\n            views = this._views;\n            if (views.length) {\n               views.forEach((v) => {\n                  var subViews = v.views(() => true, true);\n                  if (subViews && subViews.length) {\n                     views = views.concat(subViews);\n                  }\n               });\n            }\n         }\n\n         // recursively gather all pages and their views\n         if (this._pages) {\n            pages = this._pages;\n            if (pages.length) {\n               pages.forEach((p) => {\n                  // grab all views on this page\n                  var pageViews = p.views(() => true, true);\n                  if (pageViews && pageViews.length) {\n                     views = views.concat(pageViews);\n                  }\n                  // grab all subpages on this page\n                  var subPages = p.pages(() => true, true);\n                  if (subPages && subPages.length) {\n                     pages = pages.concat(subPages);\n                     subPages.forEach((sub) => {\n                        var subViews = sub.views(() => true, true);\n                        if (subViews && subViews.length) {\n                           views = views.concat(subViews);\n                        }\n                     });\n                  }\n               });\n            }\n         }\n\n         result = result.concat(pages, views);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewAll()\n    * return a list of all the {ABViewxxx} classes available.\n    * @return {array} of ABView objects\n    */\n   viewAll(fn = () => true) {\n      return this.ViewManager.allViews(fn);\n   }\n\n   ///\n   /// Queries\n   ///\n\n   /**\n    * queriesExcluded()\n    * return a list of ABObjectQuery(s) that are not included in this\n    * ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which queries to return.\n    * @return {array}\n    */\n   queriesExcluded(filter = () => true) {\n      return this.AB.queries((q) => {\n         return this.queryIDs.indexOf(q.id) == -1;\n      }).filter(filter);\n   }\n\n   /**\n    * queriesIncluded()\n    * return a list of ABObjectQuery(s) that are included in this\n    * ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which queries to return.\n    * @param {fn} [sort] function to sort by, default is .label\n    * @return {array}\n    */\n   queriesIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.queries((q) => {\n         return this.queryIDs.indexOf(q.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Roles\n   ///\n\n   /**\n    * @method roles()\n    * return an array of all the ABRole for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which roles to return.\n    * @return {array}   array of ABRole\n    */\n   // roles(filter = () => true) {\n   //    return (this.role || []).filter(filter);\n   // }\n\n   /**\n    * @method urlResolve()\n    * given an object pointer, return the specific object referenced.\n    * pointer must start with a '#', use '/' as delimiters, and either\n    * reference an object's .id, or an object's .property.\n    * for example:\n    * #/_objects   : resolves to the array of ._objects pointed to by this\n    *               application.\n    * #/_objects/[object.id] : reolved to a specific object\n    * #/_objects/[object.id]/_fields/[field.id] : resolves to a specific data field\n    *               refereced by object.id.\n    *\n    * @param {string} pointer : the string url referencing the object you want\n    *                       to retrieve.\n    * @return {obj}\n    */\n   urlResolve(pointer) {\n      var parts = pointer.split(\"/\");\n\n      var parseStep = (obj, steps) => {\n         // we're done.  obj is what we are looking for:\n         if (steps.length == 0) {\n            return obj;\n         }\n\n         // pull the next step key:\n         var key = steps.shift();\n\n         // special case, \"#\" makes sure we are talking about the\n         // Application object\n         if (key == \"#\") {\n            return parseStep(this, steps);\n         }\n\n         // if obj is an [], then key should be an .id reference to\n         // lookup:\n         if (Array.isArray(obj)) {\n            obj = obj.filter(function (o) {\n               return o.id == key;\n            })[0];\n            return parseStep(obj, steps);\n         }\n\n         // otherwise obj should be an {} and key a property:\n         if (obj && obj[key]) {\n            return parseStep(obj[key], steps);\n         }\n\n         if (key == \"_objects\") {\n            console.error(new Error(\"REFACTOR: old objectBy url reference:\"));\n\n            // This can be gotten from our AB\n            var id = steps.shift();\n            return parseStep(this.AB.objectByID(id), steps);\n         }\n\n         // if we got here, there is an error!\n         // console.error('!!! failed to lookup url:'+pointer);\n         console.error(\"!!! failed to lookup url:\" + pointer);\n         return null;\n      };\n\n      return parseStep(this, parts);\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer for this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      // NOTE: if we need to expand this to search across\n      // applications, then add in this application.id here:\n      if (acrossApp) return \"#/\" + this.id + \"/\";\n      else return \"#/\";\n   }\n\n   /**\n    * @method urlObject()\n    * return the url pointer for objects in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlObject(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_objects/\";\n   }\n\n   /**\n    * @method urlView()\n    * return the url pointer for pages in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPage(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_pages/\";\n   }\n\n   /**\n    * @method urlQuery()\n    * return the url pointer for queries in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlQuery(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_queries/\";\n   }\n\n   /**\n    * @method version()\n    * return the current version of this Application.\n    * Version information is in format \"{Major}.{Minor}.{patch}\"\n    * @return {string}\n    */\n   get version() {\n      return this.json?.versionData?.versionNumber ?? \"0.0.0\";\n   }\n\n   ///\n   ///   Object List Settings\n   ///\n   get objectlistIsOpen() {\n      return this.objectListSettings.isOpen;\n   }\n\n   set objectlistIsOpen(isOpen) {\n      this.objectListSettings.isOpen = isOpen;\n   }\n\n   get objectlistSearchText() {\n      return this.objectListSettings.searchText;\n   }\n\n   set objectlistSearchText(searchText) {\n      this.objectListSettings.searchText = searchText;\n   }\n\n   get objectlistSortDirection() {\n      return this.objectListSettings.sortDirection;\n   }\n\n   set objectlistSortDirection(sortDirection) {\n      this.objectListSettings.sortDirection = sortDirection;\n   }\n\n   get objectlistIsGroup() {\n      return this.objectListSettings.isGroup;\n   }\n\n   set objectlistIsGroup(isGroup) {\n      this.objectListSettings.isGroup = isGroup;\n   }\n\n   ///\n   /// Instance generators\n   ///\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABViewPage that is tied to this\n    * ABApplication.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      // make sure this is an ABViewPage description\n      // values.key = ABViewPageCore.common().key;\n      values.key = \"page\";\n\n      return this.ViewManager.newView(values, this, null);\n   }\n\n   /**\n    * @method pageByID()\n    * return pages from the given {id}\n    * @param {string} id\n    *        the uuid of the page to return.\n    * @param {bool} deep\n    *        should this search deep (through all our children's children)\n    * @return {ABViewPage}\n    */\n   pageByID(id, deep = true) {\n      return this.pages((f) => f.id == id, deep)[0];\n   }\n\n   /**\n    * @method viewNew()\n    *\n    * return an instance of a new (unsaved) ABView.\n    *\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return this.ViewManager.newView(values, application, parent);\n   }\n\n   ///\n   /// Utilities\n   ///\n\n   cloneDeep(/* object */) {\n      var errorDepreciated = new Error(\n         \"ABApplicationCore.cloneDeep(): Depreciated!  Use AB.cloneDeep() instead.\"\n      );\n      throw errorDepreciated;\n\n      // return JSON.parse(JSON.stringify(object));\n   }\n};\n","/**\n * ABApplicationMobileCore\n *\n * This is the core ABApplicationMobile class that manages the common operations\n * of a Mobile PWA ABApplication.\n */\n\n// webpack can handle 'require()' statements, but node can't handle import\n// so let's use require():\nconst ABViewManagerMobile = require(\"../platform/ABViewManagerMobile\");\nvar ABApplication = require(\"../platform/ABApplication\");\n\nmodule.exports = class ABApplicationMobileCore extends ABApplication {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      this.appType = \"mobile\"; // Just making sure.\n      this.networkType = attributes.networkType;\n\n      this.pageDefault = attributes.pageDefault;\n      // {uuid}\n      // the {ABMobilePage}.uuid of the page that is our default Page.\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   get ViewManager() {\n      return ABViewManagerMobile;\n   }\n\n   pageNew(def) {\n      console.error(\"TODO: pageNew for ApplicationMobile\");\n      return null;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var json = super.toObj();\n      json.appType = \"mobile\";\n      json.networkType = this.networkType;\n\n      json.pageDefault = this.pageDefault;\n\n      return json;\n   }\n};\n","/*\n * ABDataCollection\n * Defines a set of data that other parts of the Application can work with.\n * it can point to either an ABObject, or ABObjectQuery, and can have an\n * filter, and sorts defined.\n *\n *\n *\n */\n// const ABEmitter = require(\"../platform/ABEmitter\");\nconst ABMLClass = require(\"../platform/ABMLClass\");\n\n// const ABObject = require(\"../platform/ABObject\");\n// const ABObjectQuery = require(\"../platform/ABObjectQuery\");\n// const RowFilter = require(\"../platform/RowFilter\");\n\nvar DefaultValues = {\n   id: \"uuid\",\n   label: \"\", // label\n   object: {}, // json of ABObject\n   query: {}, // json of ABObjectQuery\n   settings: {\n      datasourceID: \"\", // id of ABObject or ABObjectQuery\n      linkDatacollectionID: \"\", // id of ABDatacollection\n      linkFieldID: \"\", // id of ABField\n      followDatacollectionID: \"\", // id of ABDatacollection\n      objectWorkspace: {\n         filterConditions: {\n            // array of filters to apply to the data table\n            glue: \"and\",\n            rules: [],\n         },\n         sortFields: [], // array of columns with their sort configurations\n      },\n      loadAll: false,\n      // preventPopulate: false, depreciating in favour of populate\n      populate: true, // true/false or array of columns to populate.\n      isQuery: false, // if true it is a query, otherwise it is a object.\n\n      fixSelect: \"\", // _CurrentUser, _FirstRecord, _FirstRecordDefault or row id\n\n      syncType: 1, // 1 (Server), 2 (Client)\n   },\n};\n\nconst QueuedOperations = [];\n// {array} of operations that we want to perform but allow some space\n// between operations.\nvar _queueTimer = null;\n\nfunction runQueue() {\n   // if (!_queueTimer) {\n   //    _queueTimer = setInterval(() => {\n   //       runQueue();\n   //    }, 20);\n   // }\n   if (QueuedOperations.length == 0) {\n      // stop\n      // clearInterval(_queueTimer);\n      _queueTimer = null;\n      return;\n   }\n   var op = QueuedOperations.shift();\n   op.fn();\n   _queueTimer = setTimeout(runQueue, op.timeout);\n}\nfunction queueOperation(fn, timeout = 20) {\n   QueuedOperations.push({ fn, timeout });\n   if (!_queueTimer) {\n      runQueue();\n   }\n}\n\nmodule.exports = class ABDataCollectionCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      attributes = attributes || {};\n\n      // this.application = application;\n\n      this.fromValues(attributes);\n\n      this.__dataCollection = this._dataCollectionNew([]);\n      // {DataCollection}\n      // This is a working instance of a DataCollection, not an {ABDatacCollection}\n      // On web/mobile this is a webix component.  So keep the creation as part of\n      // the platform/ABDataCollection implementation.\n\n      // Set filter value\n      this.refreshFilterConditions();\n\n      this.__bindComponentIds = [];\n      this.__flexComponentIds = [];\n\n      // refresh a data collection\n      // this.init();\n\n      // mark data status does not be initialized\n      this._dataStatus = this.dataStatusFlag.notInitial;\n\n      this.__filterCond = null;\n      // {QueryCondition}\n      // A passed in Query Condition for filtering our DataCollection.\n      // This value is ANDed with our normal filter conditions.\n\n      this.__model = null;\n      // {ABModel}\n      // An instance of the ABModel used for this DataCollection to\n      // access data on the server.\n\n      this._pendingLoadDataResolves = {\n         /* jobID : {pendingResolve } */\n      };\n   }\n\n   /**\n    * contextKey()\n    *\n    * return a unique key that represents data from/for this type of object.\n    *\n    * used when creating Network jobs and needing to be notified when a job\n    * is complete.  We send a contextKey() to the Network job and then listen\n    * for it to know when it is complete.\n    * @return {string}\n    */\n   static contextKey() {\n      return \"datacollection\";\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id;\n      // {string} .id\n      // the uuid of this ABDataCollection Definition.\n\n      this.name = values.name || null;\n      // {string} .name\n      // the unchanging name of this ABDataCollection\n\n      this.type = values.type || \"datacollection\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      values.settings = values.settings || {};\n      this.settings = this.settings || {};\n      // {obj} .settings\n      // the specific operation values for this ABDataCollection\n\n      this.settings.linkDatacollectionID =\n         values.settings.linkDatacollectionID ||\n         DefaultValues.settings.linkDatacollectionID;\n      // {string} .settings.linkDatacollectionID\n      // the uuid of another ABDataCollection that provides the link/trigger\n      // for filtering the values of this ABDataCollection.\n\n      this.settings.linkFieldID =\n         values.settings.linkFieldID || DefaultValues.settings.linkFieldID;\n      // {string} .settings.linkFieldID\n      // this.fieldLink is intended to be the way to connect to the column in\n      // the datacollectionLink that we are following.  However this field\n      // is the field in this.datasource that connects to the field in\n      // datacollectionLink that has the value we are linked to.\n      // So, If this DC(ObjB), and our datacollectionLink (ObjA)\n      // then this.fieldLink = ObjB->FieldB\n      // To find the corresponding field in ObjA, we do:\n      // this.fieldLink.fieldLink  (ObjA->FieldA)\n\n      this.settings.followDatacollectionID =\n         values.settings.followDatacollectionID ||\n         DefaultValues.settings.followDatacollectionID;\n      // {string} .settings.followDatacollectionID\n      // the uuid of another ABDataCollection that provides the follow cursor data collection\n\n      this.settings.objectWorkspace = values.settings.objectWorkspace || {\n         filterConditions:\n            DefaultValues.settings.objectWorkspace.filterConditions,\n         sortFields: DefaultValues.settings.objectWorkspace.sortFields,\n      };\n      // {obj} .settings.objectWorkspace\n      // the default settings for what is shown in the AppBuilder's\n      // DataCollection workspace\n\n      this.settings.fixSelect = values.settings.fixSelect;\n\n      // Convert to boolean\n      this.settings.loadAll = JSON.parse(\n         values.settings.loadAll || DefaultValues.settings.loadAll\n      );\n      // {bool} .settings.loadAll\n      // do we load all the data at one time? false == load by pages.\n\n      this.settings.isQuery = JSON.parse(\n         values.settings.isQuery || DefaultValues.settings.isQuery\n      );\n      // {bool} .settings.isQuery\n      // is the data source for this ABDataCollection based upon an\n      // ABObjectQuery?\n\n      this.settings.populate = (() => {\n         // First check .populate\n         if (values.settings.populate != undefined) {\n            return values.settings.populate;\n            // Then check legacy .preventPopulate\n         } else if (\n            values.settings.preventPopulate == true ||\n            values.settings.preventPopulate == \"1\"\n         ) {\n            return false;\n         } else return DefaultValues.settings.populate;\n      })();\n      // {bool | array} populate\n      // Control whcih related connections to populate. Default, true, populates\n      // all connections. False loads no connnections. Also accepts an array of\n      // column names to load specefic connections.\n\n      // Convert to number\n      this.settings.syncType = parseInt(\n         values.settings.syncType || DefaultValues.settings.syncType\n      );\n      // {int} .settings.syncType\n      // how is the data between this ABDataCollection and it's\n      // .datasource synced?\n\n      this.__datasource = null;\n      // {obj} .__datasource\n      // the reference to the ABObject/ABObjectQuery that this ABDataCollection\n      // is based off of.\n\n      this.settings.datasourceID =\n         values.settings.datasourceID || DefaultValues.settings.datasourceID;\n      // {string} .settings.datasourceID\n      // the uuid of the .__datasource object to use\n\n      // now lookup and reference the proper datasource\n      if (this.settings.datasourceID) {\n         // check for an ABObject\n         var obj = this.AB.objectByID(this.settings.datasourceID);\n         if (!obj) {\n            // this must be an ABObjectQuery then ...\n            obj = this.AB.queryByID(this.settings.datasourceID);\n         }\n\n         if (obj) {\n            this.__datasource = obj;\n            this.settings.isQuery = obj.type === \"query\";\n            if (this.settings.isQuery) {\n               if (this.__datasource.isGroup) {\n                  if (!this.__treeCollection)\n                     this.__treeCollection = this._treeCollectionNew();\n                  // {TreeCollection}\n                  // This is a webix TreeCollection (or similar)\n                  // keep it's implementation as part of the platform\n\n                  this.__isGroup = true;\n               }\n            }\n         } else {\n            console.error(\n               `ABDataCollection[${this.name}][${this.id}] unable to find datasource [${this.settings.datasourceID}]`\n            );\n         }\n      }\n\n      // // Populate data source: ABObject or ABObjectQuery\n      // if (values.query && values.query[0]) {\n      //    this.__datasource = new ABObjectQuery(\n      //       values.query[0],\n      //       this.application\n      //    );\n      //    this.settings.isQuery = true;\n\n      //    if (this.__datasource.isGroup) {\n      //       if (!this.__treeCollection)\n      //          this.__treeCollection = this._treeCollectionNew();\n\n      //       this.__isGroup = true;\n      //    }\n      // } else if (values.object && values.object[0]) {\n      //    this.__datasource = new ABObject(values.object[0], this.application);\n      //    this.settings.isQuery = false;\n      // }\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj(); // untranslate the object\n\n      return {\n         id: this.id,\n         name: this.name || this.label,\n         type: this.type || \"datacollection\",\n         settings: this.AB.cloneDeep(this.settings || {}),\n         translations: obj.translations,\n      };\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABDatacollection with it's parent\n    *\n    *\n    * @return {Promise}\n    *      .resolve( {this} )\n    */\n   async save() {\n      if (!this.id) {\n         this.label = this.label || this.name;\n      }\n      await super.save();\n      return this;\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABDatacollection\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      var removeFromApplications = () => {\n         return new Promise((next, err) => {\n            // this.AB.applications().then((apps) => {\n\n            const apps = this.AB.applications();\n            // NOTE: apps is a webix datacollection\n\n            var allRemoves = [];\n\n            var appsWithObject = apps.filter((a) => {\n               return a.datacollectionsIncluded((o) => o.id == this.id);\n            });\n            appsWithObject.forEach((app) => {\n               allRemoves.push(app.datacollectionRemove(this));\n            });\n\n            return Promise.all(allRemoves).then(next).catch(err);\n            // });\n         });\n      };\n\n      return Promise.resolve()\n         .then(() => {\n            return removeFromApplications();\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @property $dc\n    * return the underlying webix datacollection\n    * @return {webix.datacollection}\n    */\n   get $dc() {\n      return this.__dataCollection;\n   }\n\n   /**\n    * @property datasource\n    * return a object of this component.\n    *\n    * @return {ABObject|ABObjectQuery}\n    */\n   get datasource() {\n      if (!this.__datasource) {\n         if (this.id && this.name) {\n            // occassionally we have blank DCs (without .id or .name)\n            // and I don't want to see errors for those\n            var err = new Error(\n               `DataCollection[${this.name}][${this.id}] missing reference datasource`\n            );\n            this.AB.notify(\"builder\", err, { datacollection: this.toObj() });\n         }\n         return null;\n      }\n      var obj = this.AB.objectByID(this.__datasource.id);\n      if (!obj) {\n         obj = this.AB.queryByID(this.__datasource.id);\n      }\n      return obj;\n   }\n\n   /**\n    * @property datasource\n    * set a object to data collection\n    *\n    * @param {ABObject|ABObjectQuery} object\n    */\n   set datasource(object) {\n      this.__datasource = object;\n\n      this.refreshFilterConditions();\n   }\n\n   /**\n    * @property sourceType\n    * return type of source.\n    *\n    * @return {string} - 'object' or 'query'\n    */\n   get sourceType() {\n      return this.settings.isQuery ? \"query\" : \"object\";\n   }\n\n   /**\n    * @method datacollectionLink\n    * return a ABDatacollection that link of this.\n    *\n    * @return {ABDatacollection}\n    */\n   get datacollectionLink() {\n      if (!this.AB) return null;\n\n      return this.AB.datacollectionByID(this.settings.linkDatacollectionID);\n   }\n\n   /**\n    * @property fieldLink\n    * return a ABFieldConnect field that link of this.\n    *\n    * @return {ABFieldConnect}\n    */\n   get fieldLink() {\n      let object = this.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.linkFieldID);\n   }\n\n   /**\n    * @property model\n    * return a source model\n    *\n    * @return ABModel\n    */\n   get model() {\n      if (!this.__model) {\n         let object = this.datasource; // already notified\n\n         this.__model = object ? object.model() : null;\n      }\n      return this.__model;\n   }\n\n   get dataStatusFlag() {\n      return {\n         notInitial: 0,\n         initializing: 1,\n         initialized: 2,\n      };\n   }\n\n   get dataStatus() {\n      return this._dataStatus;\n   }\n\n   get isDataInitialized() {\n      return this.dataStatus == this.dataStatusFlag.initialized;\n   }\n\n   dataInitialized() {\n      this._dataStatus = this.dataStatusFlag.initialized;\n   }\n\n   ///\n   /// Cursor\n   ///\n\n   setCursor(itemId) {\n      // If the static cursor is set, then this DC could not set cursor to other rows\n      if (\n         this.settings.fixSelect &&\n         (this.settings.fixSelect != \"_FirstRecordDefault\" ||\n            this.settings.fixSelect == itemId)\n      )\n         return;\n\n      if (this.__treeCollection) {\n         // set cursor of tree collection\n         this.setCursorTree(itemId);\n\n         // pull current row id\n         let currTreeId = this.__treeCollection.getCursor();\n         if (currTreeId) {\n            let currTreeItem = this.__treeCollection.getItem(currTreeId);\n            if (currTreeItem) itemId = currTreeItem._itemId;\n         }\n      }\n\n      let dc = this.__dataCollection;\n      if (dc) {\n         // Store the old cursor id\n         this.__previousCursorId = dc.getCursor();\n\n         // clear cursor\n         if (itemId == null) {\n            dc.setCursor(null);\n         }\n         // If set rowId equal current cursor, it will not trigger .onAfterCursorChange event\n         else if (dc.getCursor() == itemId) {\n            this.emit(\"changeCursor\", this.getCursor());\n         }\n         // set new cursor\n         else if (dc.exists(itemId)) {\n            dc.setCursor(itemId);\n         }\n      }\n   }\n\n   /**\n    *\n    * @param {string|number} itemId - Id of item or Id of row data\n    */\n   setCursorTree(itemId) {\n      let tc = this.__treeCollection;\n      if (tc && tc.getCursor() != itemId) {\n         // If it is id of tree collection, then find row id of data\n         let treeCursor = tc.find({ id: itemId }, true);\n         if (treeCursor) {\n            tc.setCursor(itemId);\n         }\n         // If it is not id of tree collection, then find/set root of data\n         else {\n            let treeItem = tc.find({ _itemId: itemId, $parent: 0 }, true);\n            if (treeItem) tc.setCursor(treeItem.id);\n            else tc.setCursor(null);\n         }\n      }\n   }\n\n   getCursor(treeCursor = false) {\n      // Cursor of tree collection\n      if (treeCursor && this.__treeCollection) {\n         let currId = this.__treeCollection.getCursor();\n         if (currId) {\n            let currItem = this.__treeCollection.getItem(currId);\n\n            // filter current id for serialize\n            this.__treeCollection.filter(\n               (item) => item._itemId == currItem._itemId\n            );\n\n            // pull item with child items\n            let currItemAndChilds =\n               this.__treeCollection.serialize()[0] || null;\n\n            // refresh filter\n            this.refreshLinkCursor();\n\n            return currItemAndChilds;\n         }\n      }\n\n      let dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      let currId = dc.getCursor();\n      let currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   getFirstRecord() {\n      var dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      var currId = dc.getFirstId();\n      var currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   getNextRecord(record) {\n      var dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      var currId = dc.getNextId(record.id);\n      var currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   /**\n    * @method refreshLinkCursor\n    *    If the data collection is bound to another and it is the child connection\n    *    it finds it's parents current set cursor and then filters its data\n    *    based off of the cursor.\n    *\n    *    In cases where a DC has set .loadAll, our job is to filter existing data\n    *    that is already loaded in the internal __dataCollection.\n    *\n    *    Otherwise this is not the place to trigger a data refresh.  We depend\n    *    on other mechanisms (.reloadData(), datacollection .select()) to trigger\n    *    an update.\n    */\n   refreshLinkCursor(force = false) {\n      // our filter conditions need to know there was an updated cursor.\n      // some of our filters are based upon our linked data.\n      this.refreshFilterConditions();\n\n      // NOTE: If DC does not set load all data, then it does not need to filter by the parent DC.\n      // because it fetch data when the cursor of the parent DC changes.\n      if (!this.settings.loadAll && !force) return;\n\n      // do not set the filter unless this dc is initialized \"dataStatusFlag==2\"\n      // if (this.dataStatus != this.dataStatusFlag.initialized) return;\n\n      // filter the data in the data collection\n      // using its parents current cursor because all the data in this child\n      // data collection has been loaded and the frontend can decide what is\n      // seen or not seen\n      let linkCursor;\n      let dvLink = this.datacollectionLink;\n      if (dvLink) {\n         linkCursor = dvLink.getCursor();\n      }\n\n      let filterData = (rowData) => {\n         // This row is not loaded yet. It will be loaded when scrolling.\n         if (rowData == null) return true;\n\n         // if link dc cursor is null:\n         // ... if there's no parent show all data\n         // ... if we have a parent hide all data - address cases where user see\n         //     unexpected data (ns_app#318) - should this be a DC setting?\n         if (!linkCursor) return dvLink ? false : true;\n         else return this.isParentFilterValid(rowData);\n      };\n\n      if (this.__dataCollection) this.__dataCollection.filter(filterData);\n      if (this.__treeCollection) this.__treeCollection.filter(filterData);\n   }\n\n   setStaticCursor() {\n      if (this.settings.fixSelect) {\n         // set cursor to the current user\n         if (this.settings.fixSelect == \"_CurrentUser\") {\n            var username = this.currentUserUsername();\n            var userFields = this.datasource.fields((f) => f.key == \"user\");\n\n            // find a row that contains the current user\n            var row = this.__dataCollection.find((r) => {\n               var found = false;\n\n               userFields.forEach((f) => {\n                  if (found || r[f.columnName] == null) return;\n\n                  if (r[f.columnName].filter) {\n                     // Array - isMultiple\n                     found =\n                        r[f.columnName].filter((data) => data.id == username)\n                           .length > 0;\n                  } else if (r[f.columnName] == username) {\n                     found = true;\n                  }\n               });\n\n               return found;\n            }, true);\n\n            // set a first row of current user to cursor\n            if (row) {\n               this.__dataCollection.setCursor(row.id);\n\n               this.setCursorTree(row.id);\n            }\n         } else if (\n            this.settings.fixSelect == \"_FirstRecord\" ||\n            this.settings.fixSelect == \"_FirstRecordDefault\"\n         ) {\n            // // find a row that contains the current user\n            // var row = this.__dataCollection.find((r) => {\n\n            //  var found = false;\n            //  if (!found) {\n            //    found = true;\n            //    return true; // just give us the first record\n            //  }\n\n            // }, true);\n\n            // // set a first row of current user to cursor\n            // if (row)\n            //  this.__dataCollection.setCursor(row.id);\n\n            let currRowId = this.__dataCollection.getCursor();\n            if (\n               !currRowId ||\n               (currRowId && !this.__dataCollection.exists(currRowId))\n            ) {\n               // If current cursor is filtered by parent DC, then select new cursor\n\n               // set a first row to cursor\n               let rowId = this.__dataCollection.getFirstId();\n               // if (rowId) {\n               this.__dataCollection.setCursor(rowId || null);\n\n               // NOTE: differnece between ab_platform_web and ab_platform_pwa\n               if (\n                  this.__dataCollection.data?.count?.() == 0 ||\n                  this.__dataCollection.data?.length == 0\n               ) {\n                  this.emit(\"collectionEmpty\", {});\n               }\n\n               this.setCursorTree(rowId);\n               // }\n            }\n         } else {\n            this.__dataCollection.setCursor(this.settings.fixSelect);\n\n            this.setCursorTree(this.settings.fixSelect);\n         }\n      }\n\n      // Set the cursor to the first row\n      if (this.isCursorFollow) {\n         const rowId = this.__dataCollection.getFirstId();\n         this.setCursor(rowId || null);\n         this.setCursorTree(rowId || null);\n\n         // If no data but the parent DC set cursor, then this should be reload data.\n         const dcFollow = this.datacollectionFollow;\n         if (!rowId && dcFollow?.getCursor()) {\n            this.loadData();\n         }\n      }\n   }\n\n   ///\n   /// Data\n   ///\n\n   /**\n    * @method filterCondition()\n    * Provide a temporary filter condition to modify the data we are returning.\n    * Used by User search criterias.\n    * @param {json} cond\n    *        A valid QueryCondition to filter the response.\n    */\n   filterCondition(cond = null) {\n      this.__filterCond = cond;\n   }\n\n   init() {\n      // prevent initialize many times\n      if (this.initialized) return;\n      this.initialized = true;\n\n      if (!this.__dataCollection.___AD.onAfterCursorChange) {\n         this.__dataCollection.___AD.onAfterCursorChange =\n            this.__dataCollection.attachEvent(\"onAfterCursorChange\", () => {\n               // debugger;\n               var currData = this.getCursor();\n\n               this.emit(\"changeCursor\", currData);\n            });\n      }\n\n      // relate data functions\n      let isRelated = (relateData, rowId, PK = \"id\") => {\n         if (Array.isArray(relateData)) {\n            return relateData.filter((v) => (v[PK] || v) == rowId).length > 0;\n         } else {\n            return relateData && (relateData[PK] || relateData) == rowId;\n         }\n      };\n\n      // events\n      this.on(\"ab.datacollection.create\", (data) => {\n         // NOTE: UPDATing this process to add another check.\n         // .isCursorFollow only invalidates the 1st half of the routine.\n         // .isCursorFollow STILL needs to follow the 2nd half of the routine\n         // // If this DC is following cursor for other DC, then it should not add the new item to their list.\n         // if (this.isCursorFollow) return;\n\n         let obj = this.datasource;\n         if (!obj) return;\n\n         if (!data || !data.data) return;\n\n         let needAdd = false;\n         let updatedVals = [];\n\n         // Don't do First Step if .isCursorFollow\n         if (!this.isCursorFollow) {\n            // First Step\n            // Does this new entry need to be part of the data we are currently\n            // tracking?  If so, add it.\n            Promise.resolve()\n               .then(() => {\n                  return new Promise((next, bad) => {\n                     // Query\n                     if (obj instanceof this.AB.Class.ABObjectQuery) {\n                        let objList =\n                           obj.objects((o) => o.id == data.objectId) || [];\n\n                        needAdd = objList.length > 0;\n\n                        if (!needAdd) return next();\n\n                        let where = {\n                           glue: \"or\",\n                           rules: [],\n                        };\n\n                        objList.forEach((o) => {\n                           let newDataId = data.data[`${o.PK()}`];\n                           if (!newDataId) return;\n\n                           where.rules.push({\n                              key: `${\n                                 o.alias || obj.objectAlias(o.id)\n                              }.${o.PK()}`,\n                              rule: \"equals\",\n                              value: newDataId,\n                           });\n                        });\n\n                        obj.model()\n                           .findAll({\n                              where: where,\n                           })\n                           .then((newQueryData) => {\n                              updatedVals = newQueryData.data || [];\n                              updatedVals.forEach((v) => {\n                                 delete v.id;\n                              });\n\n                              next();\n                           })\n                           .catch(bad);\n                     }\n                     // Object\n                     else {\n                        needAdd = obj.id == data.objectId;\n                        updatedVals = [data.data];\n                        next();\n                     }\n                  });\n               })\n               .then(() => {\n                  if (needAdd) {\n                     (updatedVals || []).forEach((updatedV) => {\n                        // If this DC uses a query, it pulls refreshed data from the server in the previous step,\n                        // so there is no need to recheck the query's filter.\n                        const skipDatasourceFilter =\n                           obj instanceof this.AB.Class.ABObjectQuery;\n\n                        // filter condition before add\n                        if (!this.isValidData(updatedV, skipDatasourceFilter))\n                           return;\n\n                        // filter the cursor of parent DC\n                        const dcLink = this.datacollectionLink;\n                        if (dcLink && !this.isParentFilterValid(updatedV))\n                           return;\n\n                        // check to see if item already exisits in data collection\n                        // and check to see that we are not loading the data serverside from cursor\n                        if (\n                           !this.__dataCollection.exists(\n                              updatedV[`${obj.PK()}`]\n                           ) &&\n                           !this.__reloadWheres\n                        ) {\n                           this.__dataCollection.add(updatedV, 0);\n                           this.emit(\"create\", updatedV);\n                           // this.__dataCollection.setCursor(rowData.id);\n                        } else if (\n                           !this.__dataCollection.exists(\n                              updatedV[`${obj.PK()}`]\n                           ) &&\n                           this.__reloadWheres\n                        ) {\n                           // debugger;\n                           if (this.isParentFilterValid(updatedV)) {\n                              // we track bound components and flexlayout components\n                              var attachedComponents =\n                                 this.__bindComponentIds.concat(\n                                    this.__flexComponentIds\n                                 );\n                              attachedComponents.forEach((bcids) => {\n                                 // if the reload button already exisits move on\n                                 if ($$(bcids + \"_reloadView\")) {\n                                    return false;\n                                 }\n\n                                 // find the position of the data view\n                                 var pos = 0;\n                                 var parent = $$(bcids).getParentView();\n                                 if ($$(bcids).getParentView().index) {\n                                    pos = $$(bcids)\n                                       .getParentView()\n                                       .index($$(bcids));\n                                 } else if (\n                                    $$(bcids).getParentView().getParentView()\n                                       .index\n                                 ) {\n                                    // this is a data view and it is inside a\n                                    // scroll view that is inside an accodion\n                                    // so we need to go deeper to add the button\n                                    parent = $$(bcids)\n                                       .getParentView()\n                                       .getParentView();\n                                    pos = $$(bcids)\n                                       .getParentView()\n                                       .getParentView()\n                                       .index($$(bcids).getParentView());\n                                 }\n\n                                 // store the datacollection so we can pass it to the button later\n                                 var DC = this;\n                                 // add a button that reloads the view when clicked\n                                 if (parent.addView) {\n                                    var L = this.AB.Label();\n                                    parent.addView(\n                                       {\n                                          id: bcids + \"_reloadView\",\n                                          view: \"button\",\n                                          value: L(\n                                             \"New data available. Click to reload.\"\n                                          ),\n                                          css: \"webix_primary webix_warn\",\n                                          click: function (id, event) {\n                                             DC.reloadData();\n                                             $$(id)\n                                                .getParentView()\n                                                .removeView(id);\n                                          },\n                                       },\n                                       pos\n                                    );\n                                 }\n                              });\n                              // this.emit(\"create\", updatedV);\n                           }\n                        }\n                     });\n\n                     if (\n                        this.__treeCollection // && this.__treeCollection.exists(updatedVals.id)\n                     ) {\n                        this.parseTreeCollection({\n                           data: updatedVals,\n                        });\n                     }\n                  }\n\n                  // ABObject only\n                  if (!(obj instanceof this.AB.Class.ABObjectQuery)) {\n                     // if it is a linked object\n                     let connectedFields = this.datasource.connectFields(\n                        (f) =>\n                           f.datasourceLink &&\n                           f.datasourceLink.id == data.objectId\n                     );\n\n                     // It should always be only one item for ABObject\n                     updatedVals = updatedVals[0];\n\n                     // update relation data\n                     if (\n                        updatedVals &&\n                        connectedFields &&\n                        connectedFields.length > 0\n                     ) {\n                        // various PK name\n                        let PK = connectedFields[0].object.PK();\n                        if (!updatedVals.id && PK != \"id\")\n                           updatedVals.id = updatedVals[PK];\n\n                        this.__dataCollection.find({}).forEach((d) => {\n                           let updateItemData = {};\n\n                           connectedFields.forEach((f) => {\n                              var updateRelateVal = {};\n                              if (f && f.fieldLink) {\n                                 updateRelateVal =\n                                    updatedVals[f.fieldLink.relationName()] ||\n                                    {};\n                              }\n\n                              let rowRelateVal = d[f.relationName()] || {};\n\n                              let valIsRelated = isRelated(\n                                 updateRelateVal,\n                                 d.id,\n                                 PK\n                              );\n\n                              // Relate data\n                              if (\n                                 Array.isArray(rowRelateVal) &&\n                                 rowRelateVal.filter(\n                                    (v) =>\n                                       v == updatedVals.id ||\n                                       v.id == updatedVals.id ||\n                                       v[PK] == updatedVals.id\n                                 ).length < 1 &&\n                                 valIsRelated\n                              ) {\n                                 rowRelateVal.push(updatedVals);\n\n                                 updateItemData[f.relationName()] =\n                                    rowRelateVal;\n                                 updateItemData[f.columnName] = updateItemData[\n                                    f.relationName()\n                                 ].map((v) => v.id || v[PK] || v);\n                              } else if (\n                                 !Array.isArray(rowRelateVal) &&\n                                 (rowRelateVal != updatedVals.id ||\n                                    rowRelateVal.id != updatedVals.id ||\n                                    rowRelateVal[PK] != updatedVals.id) &&\n                                 valIsRelated\n                              ) {\n                                 updateItemData[f.relationName()] = updatedVals;\n                                 updateItemData[f.columnName] =\n                                    updatedVals.id || updatedVals;\n                              }\n                           });\n\n                           // If this item needs to update\n                           if (Object.keys(updateItemData).length > 0) {\n                              this.__dataCollection.updateItem(\n                                 d.id,\n                                 updateItemData\n                              );\n\n                              if (this.__treeCollection)\n                                 this.__treeCollection.updateItem(\n                                    d.id,\n                                    updateItemData\n                                 );\n\n                              this.emit(\n                                 \"update\",\n                                 this.__dataCollection.getItem(d.id)\n                              );\n                           }\n                        });\n                     }\n                  }\n\n                  this.updateRelationalDataFromLinkDC(data.objectId, data.data);\n                  // filter link data collection's cursor\n                  this.refreshLinkCursor();\n                  this.setStaticCursor();\n               });\n         }\n\n         // SECOND Step:\n         // Try to detect if this newly created entry connects to one of the\n         // values this DC is currently managing.  If so, than add this value\n         // to the connection.\n\n         let incomingObj = this.AB.objectByID(data.objectId);\n         if (!incomingObj) return;\n\n         // find any of incomingObj connections that are tied to my object:\n         let connectedFields = incomingObj\n            .connectFields((f) => f.datasourceLink?.id == obj.id)\n            .filter((f) => f); // <-- safety check, no undefined or nulls\n         if (connectedFields.length == 0) return;\n\n         let iPK = incomingObj.PK();\n         let PK = obj.PK();\n         let newData = this.AB.cloneDeep(data.data);\n\n         let currCursor = this.getCursor();\n         let needsRefresh = false;\n\n         connectedFields.forEach((f) => {\n            // pull the values in this connected fields\n            let values = data.data[f.columnName]; // just need the PK\n\n            if (!Array.isArray(values))\n               values = [values].filter((v) => !this.AB.isNil(v));\n\n            values.forEach((v) => {\n               v = v[PK] || v; // just in case this was an {} and not the {uuid}\n\n               // if this is one of the items we are managing\n               if (this.__dataCollection.exists(v)) {\n                  let localField = f.fieldLink;\n                  if (localField) {\n                     let row = this.__dataCollection.getItem(v);\n                     let colName = localField.columnName;\n                     let relName = localField.relationName();\n\n                     if (localField.linkType() == \"many\") {\n                        if (!Array.isArray(row[colName])) {\n                           row[colName] = [row[colName]].filter(\n                              (r) => !this.AB.isNil(r)\n                           );\n                        }\n                        // if it isn't already in the array, add it\n                        let rval = localField.getRelationValue(newData);\n                        if (row[colName].indexOf(rval) == -1) {\n                           row[colName].push(rval);\n                        }\n\n                        if (!Array.isArray(row[relName])) {\n                           row[relName] = [row[relName]].filter(\n                              (r) => !this.AB.isNil(r)\n                           );\n                        }\n                        if (\n                           row[relName].filter((r) => r[iPK] == newData[iPK])\n                              .length == 0\n                        ) {\n                           row[relName].push(newData);\n                        }\n                     } else {\n                        row[colName] = localField.getRelationValue(newData);\n                        row[relName] = newData;\n                     }\n\n                     // pass updated data back into DC:\n                     this.__dataCollection.updateItem(v, row);\n\n                     if (this.__treeCollection)\n                        this.__treeCollection.updateItem(v, row);\n\n                     this.emit(\"update\", this.__dataCollection.getItem(v));\n\n                     // if we just updated our Current Cursor, we need to\n                     // let our connected DC's know to refresh.\n                     if (currCursor?.id == v) {\n                        needsRefresh = true;\n                     }\n                  }\n               }\n            });\n         });\n\n         if (needsRefresh) {\n            this.emit(\"cursorStale\", null);\n         }\n      });\n\n      this.on(\"ab.datacollection.connection-added\", (data) => {\n         // This event notifies us of a specific relation being created between\n         // two records. In this case the source object that was originally\n         // operated on, is sent along in data.data.\n         //\n         // eg: if this was a `create` operation, the newly created value is\n         //     included in data.data.\n         // eg: if this was an `update` operation, the row that was modified\n         //     is included.\n         //\n         // {json} data\n         // incoming socket payload:\n         // data.objectID {string}\n         //      the ABObject this connection is being added to\n         // data.fieldID  {string}\n         //      which connect Field in this ABObject the value is added to\n         // data.rowID    {string}\n         //      which specific row/entry this is being added to\n         // data.data     {json}\n         //      The value being added.\n         //\n\n         let obj = this.datasource;\n         if (!obj) return;\n\n         if (!data.rowID) return;\n\n         // ABObject only\n         if (!(obj instanceof this.AB.Class.ABObjectQuery)) {\n            // if this is the object we are managing\n            if (obj.id === data.objectID) {\n               let field = obj.fieldByID(data.fieldID);\n               if (field) {\n                  // figure out if we actually have the value that was changed:\n                  let isExists = this.__dataCollection.exists(data.rowID);\n                  if (isExists) {\n                     let newData = this.AB.cloneDeep(data.data);\n                     let row = this.__dataCollection.getItem(data.rowID);\n\n                     let colName = field.columnName;\n                     let relName = field.relationName();\n\n                     if (field.linkType() == \"many\") {\n                        if (!Array.isArray(row[colName])) {\n                           // in case row[col]:{obj} this will make sure it\n                           // is included as an [ {obj} ], but will also prevent\n                           // [ undefined ] if row[col] isn't set:\n                           row[colName] = [row[colName]].filter(\n                              (r) => !this.AB.isNil(r)\n                           );\n                        }\n                        row[colName].push(field.getRelationValue(newData));\n\n                        if (!Array.isArray(row[relName])) {\n                           row[relName] = [row[relName]].filter(\n                              (r) => !this.AB.isNil(r)\n                           );\n                        }\n                        row[relName].push(newData);\n                     } else {\n                        row[colName] = field.getRelationValue(newData);\n                        row[relName] = newData;\n                     }\n\n                     // pass updated data back into DC:\n                     this.__dataCollection.updateItem(data.rowID, row);\n\n                     if (this.__treeCollection)\n                        this.__treeCollection.updateItem(data.rowID, row);\n\n                     this.emit(\n                        \"update\",\n                        this.__dataCollection.getItem(data.rowID)\n                     );\n                  }\n               }\n            }\n         } else if (obj instanceof this.AB.Class.ABObjectQuery) {\n            // ABQuery\n\n            // NOTE: that in this case, if this change is about one of the\n            // objects we track, we will most likely have to reload the data\n            // to make sure we are displaying proper data.\n\n            // This will follow the same logic as in \"ab.datacollection.create\"\n            // so instead of repeating that here, let's call our \"create\"\n            // handler instead:\n\n            ///// LEFT OFF HERE:\n            // need to pull out the data in data.data that represents the\n            // connection to data.objectId\n\n            //// WAIT!!!!!!\n            //// Instead, of this \"connection-added\", lets add the logic in\n            //// a \"created\" handler to detect if we should add the new entry\n            //// into A value we currently track.\n            //// ===> This way we only have to send out \"Created\" messages\n            ////\n\n            let newPacket = {\n               objectId: data.objectId,\n               data: this.AB.cloneDeep(data.data),\n            };\n            this.emit(\"ab.datacollection.create\", newPacket);\n         }\n      });\n\n      this.on(\"ab.datacollection.update\", (data) => {\n         // {json} data\n         // incoming socket payload:\n         // data.objectId {string} uuid of the ABObject's row that was updated\n         // data.data {json} the new updated value of that row entry.\n\n         let obj = this.datasource;\n         if (!obj) return;\n\n         // updated values\n         let values = data.data;\n         if (!values) return;\n\n         // #Johnny: removing this check.  A DC that is following another cursor\n         // still has a value that might need updating.\n         // DC who is following cursor should update only current cursor.\n         // if (\n         //    this.isCursorFollow &&\n         //    this.getCursor()?.id != (values[obj.PK()] ?? values.id)\n         // ) {\n         //    return;\n         // }\n\n         let needUpdate = false;\n         let skipDatasourceFilter = false;\n         let isExists = false;\n         let updatedIds = [];\n         // {array}\n         // an array of the row indexs in our DataCollection that have values\n         // that need to be updated.\n\n         let updatedTreeIds = [];\n         let updatedVals = {};\n\n         //\n         // Case 1: This DC contains the value that was updated\n         // In this case, we want to replace our current entry with\n         // the new one passed in.\n         // EX: This is a DC of Users, and the incoming Entry is a User\n         // that we are already displaying.\n         //\n\n         // Query\n         if (obj instanceof this.AB.Class.ABObjectQuery) {\n            let objList = obj.objects((o) => o.id == data.objectId) || [];\n            needUpdate = objList.length > 0;\n            if (needUpdate) {\n               // NOTE: Data needs to be updated in the query even if it doesn't match the filter conditions.\n               skipDatasourceFilter =\n                  obj instanceof this.AB.Class.ABObjectQuery;\n\n               (objList || []).forEach((o) => {\n                  updatedIds = updatedIds.concat(\n                     this.__dataCollection\n                        .find((item) => {\n                           return (\n                              item[\n                                 `${this.datasource.objectAlias(\n                                    o.id\n                                 )}.${o.PK()}`\n                              ] == (values[o.PK()] || values.id)\n                           );\n                        })\n                        .map((o) => o.id) || []\n                  );\n\n                  // grouped queries\n                  if (this.__treeCollection) {\n                     updatedTreeIds = updatedTreeIds.concat(\n                        this.__treeCollection\n                           .find((item) => {\n                              return (\n                                 item[\n                                    `${this.datasource.objectAlias(\n                                       o.id\n                                    )}.${o.PK()}`\n                                 ] == (values[o.PK()] || values.id)\n                              );\n                           })\n                           .map((o) => o.id) || []\n                     );\n                  }\n               });\n\n               isExists = updatedIds.length > 0;\n\n               updatedVals = this._queryUpdateData(objList, values);\n            }\n         }\n         // Object\n         else {\n            needUpdate = obj.id == data.objectId;\n            if (needUpdate) {\n               // various PK name\n               if (!values.id && obj.PK() != \"id\") values.id = values[obj.PK()];\n\n               updatedIds.push(values.id);\n\n               isExists = this.__dataCollection.exists(values.id);\n               updatedVals = values;\n            }\n         }\n\n         // if it is the source object\n         if (needUpdate) {\n            if (isExists) {\n               if (this.isValidData(updatedVals, skipDatasourceFilter)) {\n                  // only spread around cloned copies because some objects (I'm\n                  // looking at you ABFieldUser) will modify some data for local\n                  // usage.\n                  updatedVals = this.AB.cloneDeep(updatedVals);\n                  if (this.__dataCollection) {\n                     updatedIds = this.AB.uniq(updatedIds);\n                     updatedIds.forEach((itemId) => {\n                        this.__dataCollection.updateItem(itemId, updatedVals);\n                     });\n                  }\n\n                  if (this.__treeCollection) {\n                     // update data in tree\n                     updatedTreeIds = this.AB.uniq(updatedTreeIds);\n                     updatedTreeIds.forEach((itemId) => {\n                        this.__treeCollection.updateItem(itemId, updatedVals);\n                     });\n                  }\n\n                  this.emit(\"update\", updatedVals);\n\n                  // If the update item is current cursor, then should tell components to update.\n                  let currData = this.getCursor();\n                  if (currData?.id == updatedVals.id) {\n                     this.emit(\"cursorStale\", currData);\n                  }\n               } else {\n                  // Johnny: Here we are simply removing the DataCollection Entries that are\n                  // no longer valid.\n                  // Just cycle through the collected updatedIds and remove them.\n                  let currData = this.getCursor();\n                  updatedIds.forEach((id) => {\n                     // If the item is current cursor, then the current cursor should be cleared.\n\n                     if (currData?.id == id) this.emit(\"cursorStale\", null);\n\n                     this.__dataCollection.remove(id);\n\n                     // TODO: update tree list\n                     // if (this.__treeCollection) {\n                     //  this.__treeCollection.remove(id);\n                     // }\n\n                     this.emit(\"delete\", id);\n                  });\n               }\n            }\n            // filter before add new record\n            else if (this.isValidData(updatedVals)) {\n               // OK we have a value, that COULD be in our DC\n               // before we add it, let's make sure we are not limited in our selection of items:\n               if (!this.isCursorFollow && !this.settings.fixSelect) {\n                  // this means the updated record was not loaded yet so we are adding it to the top of the grid\n                  // the placement will probably change on the next load of the data\n                  this.__dataCollection.add(updatedVals, 0);\n\n                  if (this.__treeCollection)\n                     this.parseTreeCollection({\n                        data: [updatedVals],\n                     });\n\n                  this.emit(\"create\", updatedVals);\n               }\n            }\n         }\n\n         //\n         // Case 2: This DC has entries that CONNECT to the updated value.\n         // We need to make sure our connections, properly reflect the\n         // current state of the incoming data.\n         //\n         // EG: This DC is a list of Roles that connect to User, and an updated\n         // User is passed in.\n\n         let currCursor = this.getCursor();\n         let updateCursor = null;\n\n         // if it is a linked object\n         // look for connected fields that link to the incoming objectId\n         let connectedFields = obj.connectFields(\n            (f) => f.datasourceLink && f.datasourceLink.id == data.objectId\n         );\n\n         // update relation data\n         if (\n            obj instanceof this.AB.Class.ABObject &&\n            connectedFields?.length > 0\n         ) {\n            // various PK name\n            // webix datacollections require an .id value, so make sure\n            // this incoming value has an .id set\n            let PK = obj.PK();\n            if (!values.id && PK != \"id\") values.id = values[PK];\n\n            if (this.__dataCollection.count() > 0) {\n               this.__dataCollection.find({}).forEach((d) => {\n                  let updateItemData = {\n                     id: d.id,\n                  };\n\n                  connectedFields.forEach((f) => {\n                     if (!f) return;\n\n                     let updateRelateVal = {};\n                     let rowRelateVal = d[f.relationName()] || {};\n\n                     if (f.fieldLink)\n                        updateRelateVal =\n                           values[f.fieldLink.relationName()] || {};\n\n                     // check to see if we are supposed to be related to this\n                     let valIsRelated = isRelated(updateRelateVal, d.id, PK);\n\n                     // If NO, then make sure we Unrelate data\n                     // if this is an array -> filter out the entry\n                     if (\n                        Array.isArray(rowRelateVal) &&\n                        rowRelateVal.filter(\n                           (v) =>\n                              v == values.id ||\n                              v.id == values.id ||\n                              v[PK] == values.id\n                        ).length > 0 &&\n                        !valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = rowRelateVal.filter(\n                           // NOTE: Special case: the incoming value.id will be .uuid\n                           // however in case of User Fields, v.id == username and not .uuid\n                           // so we put our default check to be v[PK] here to play nice\n                           (v) => (v[PK] || v.id || v) != values.id\n                        );\n                        updateItemData[f.columnName] = updateItemData[\n                           f.relationName()\n                        ].map((v) => v.id || v[PK] || v);\n                     } else if (\n                        // this is not an array so set link to null\n                        !Array.isArray(rowRelateVal) &&\n                        (rowRelateVal == values.id ||\n                           rowRelateVal.id == values.id ||\n                           rowRelateVal[PK] == values.id) &&\n                        !valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = null;\n                        updateItemData[f.columnName] = null;\n                     }\n\n                     // However, if we are supposed to be related => make sure we are\n                     // If this is an array, then add to list\n                     // AND YES: make sure it is cloned\n                     if (valIsRelated) {\n                        values = this.AB.cloneDeep(values);\n                     }\n                     if (Array.isArray(rowRelateVal) && valIsRelated) {\n                        // update relate data\n                        if (\n                           rowRelateVal.filter(\n                              (v) =>\n                                 v == values.id ||\n                                 v.id == values.id ||\n                                 v[PK] == values.id\n                           ).length > 0\n                        ) {\n                           // just update the one entry in my array with the new\n                           // value\n                           rowRelateVal.forEach((v, index) => {\n                              if (\n                                 v == values.id ||\n                                 v.id == values.id ||\n                                 v[PK] == values.id\n                              )\n                                 rowRelateVal[index] = values;\n                           });\n                        }\n                        // add new relate\n                        else {\n                           rowRelateVal.push(values);\n                        }\n\n                        updateItemData[f.relationName()] = rowRelateVal;\n                        updateItemData[f.columnName] = updateItemData[\n                           f.relationName()\n                        ].map(\n                           (v) => f.getRelationValue(v) /*v.id || v[PK] || v*/\n                        );\n                     } else if (\n                        !Array.isArray(rowRelateVal) &&\n                        (rowRelateVal != values.id ||\n                           rowRelateVal.id != values.id ||\n                           rowRelateVal[PK] != values.id) &&\n                        valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = values;\n                        // make ConnectedField use .getRelationValue() here!\n                        updateItemData[f.columnName] =\n                           f.getRelationValue(values);\n                     }\n                  });\n\n                  // If this item needs to update\n                  // meaning there is > 1 key in the object (we always have .id)\n                  if (Object.keys(updateItemData).length > 1) {\n                     // normalize data before add to data collection\n                     // UPDATE: this should already have happened in NetworkRestSocket\n                     // when the initial data is received.\n\n                     // NOTE: We could not normalize relational data because they are not full data\n                     // Merge update data to exists data instead\n\n                     if (this.__treeCollection?.exists(d.id)) {\n                        const treeItem = Object.assign(\n                           this.__treeCollection.getItem(d.id),\n                           updateItemData\n                        );\n                        this.__treeCollection.updateItem(d.id, treeItem);\n                     }\n\n                     if (this.__dataCollection?.exists(d.id)) {\n                        const dcItem = Object.assign(\n                           this.__dataCollection.getItem(d.id),\n                           updateItemData\n                        );\n                        this.__dataCollection.updateItem(d.id, dcItem);\n                        this.emit(\n                           \"update\",\n                           this.__dataCollection.getItem(d.id)\n                        );\n                        if (currCursor?.id == dcItem.id) {\n                           updateCursor = dcItem;\n                        }\n                     }\n                  }\n               });\n            }\n         }\n\n         //\n         // Case 3: Our DC is linked to a DC that was effected by this update.\n         //\n         // We will approach it from another direction, if the current DC made\n         // an update to it's current Cursor, then we will emit a \"cursorStale\"\n         // event, so our linked DCs will update themselves with the new value:\n         if (updateCursor) {\n            this.emit(\"cursorStale\", null);\n         }\n         // this.updateRelationalDataFromLinkDC(data.objectId, values);\n         this.refreshLinkCursor();\n\n         this.setStaticCursor();\n      });\n\n      // We are subscribing to notifications from the server that an item may be stale and needs updating\n      // We will improve this later and verify that it needs updating before attempting the update on the client side\n      this.on(\"ab.datacollection.stale\", (data) => {\n         // debugger;\n         // if we don't have a datasource or model, there is nothing we can do here:\n         // Verify the datasource has the object we are listening for if not just stop here\n         if (\n            !this.datasource ||\n            !this.model ||\n            this.datasource.id != data.objectId\n         ) {\n            return;\n         }\n\n         // updated values\n         var values = data.data;\n\n         if (!values) return;\n\n         // use the Object's defined Primary Key:\n         var PK = this.model.object.PK();\n         if (!values[PK]) {\n            PK = \"id\";\n         }\n\n         // DC who is following cursor should update only current cursor.\n         if (\n            this.isCursorFollow &&\n            this.getCursor()?.[PK] != (values[PK] ?? values?.id)\n         ) {\n            return;\n         }\n\n         if (values) {\n            if (this.__dataCollection.exists(values[PK])) {\n               var cond = { where: {} };\n               cond.where[PK] = values[PK];\n               // this data collection has the record so we need to query the server to find out what it's latest data is so we can update all instances\n               this.model.staleRefresh(cond).then((res) => {\n                  // check to make sure there is data to work with\n                  if (Array.isArray(res.data) && res.data.length) {\n                     // debugger;\n                     let obj = this.datasource;\n                     if (!obj) return;\n                     // normalize data before add to data collection\n\n                     // UPDATE: this should already have happened in NetworkRestSocket\n                     // when the initial data is received.\n                     //var model = obj.model();\n                     // model.normalizeData(res.data[0]);\n\n                     // tell the webix data collection to update using their API with the row id (values.id) and content (res.data[0])\n                     if (this.__dataCollection.exists(values[PK])) {\n                        this.__dataCollection.updateItem(\n                           values[PK],\n                           res.data[0]\n                        );\n                     }\n\n                     // If the update item is current cursor, then should tell components to update.\n                     var currData = this.getCursor();\n                     if (currData?.[PK] == values[PK]) {\n                        this.emit(\"cursorStale\", currData);\n                     }\n                  } else {\n                     // If there is no data in the object then it was deleted...lets clean things up\n                     // If the deleted item is current cursor, then the current cursor should be cleared.\n                     var currId = this.getCursor();\n                     if (currId == values[PK]) this.emit(\"cursorStale\", null);\n\n                     this.__dataCollection.remove(values[PK]);\n                     this.emit(\"delete\", values[PK]);\n                  }\n               });\n            }\n         }\n\n         // filter link data collection's cursor\n         this.refreshLinkCursor();\n         this.setStaticCursor();\n      });\n\n      this.on(\"ab.datacollection.delete\", (data) => {\n         // debugger;\n         let obj = this.datasource;\n         if (!obj) return;\n\n         let deleteId = data.data;\n         let needDelete = false;\n         let deletedIds = [];\n         let deletedTreeIds = [];\n\n         // Query\n         if (obj instanceof this.AB.Class.ABObjectQuery) {\n            let objList = obj.objects((o) => o.id == data.objectId) || [];\n            needDelete = objList.length > 0;\n            if (needDelete) {\n               (objList || []).forEach((o) => {\n                  deletedIds =\n                     this.__dataCollection\n                        .find((item) => {\n                           return item[`${o.alias}.${o.PK()}`] == deleteId;\n                        })\n                        .map((o) => o.id) || [];\n\n                  // grouped queries\n                  if (this.__treeCollection) {\n                     deletedTreeIds =\n                        this.__treeCollection\n                           .find((item) => {\n                              return item[`${o.alias}.${o.PK()}`] == deleteId;\n                           })\n                           .map((o) => o.id) || [];\n                  }\n               });\n            }\n         }\n         // Object\n         else {\n            needDelete = obj.id == data.objectId;\n            if (needDelete) {\n               deletedIds.push(deleteId);\n            }\n         }\n\n         // if it is the source object\n         if (needDelete) {\n            // If the deleted item is current cursor, then the current cursor should be cleared.\n            var currData = this.getCursor();\n\n            deletedIds.forEach((delId) => {\n               if (currData?.[obj.PK()] == delId)\n                  this.emit(\"cursorStale\", null);\n\n               if (this.__dataCollection.exists(delId))\n                  this.__dataCollection.remove(delId);\n            });\n\n            if (this.__treeCollection) {\n               deletedTreeIds.forEach((delId) => {\n                  if (this.__treeCollection.exists(delId))\n                     this.__treeCollection.remove(delId);\n               });\n            }\n\n            if (deletedIds[0]) this.emit(\"delete\", deletedIds[0]);\n         }\n\n         // if it is a linked object\n         let connectedFields = obj.connectFields(\n            (f) => f.datasourceLink && f.datasourceLink.id == data.objectId\n         );\n\n         // update relation data\n         if (\n            obj instanceof this.AB.Class.ABObject &&\n            connectedFields &&\n            connectedFields.length > 0\n         ) {\n            // various PK name\n            let PK = connectedFields[0].object.PK();\n\n            this.__dataCollection.find({}).forEach((d) => {\n               let updateRelateVals = {};\n\n               connectedFields.forEach((f) => {\n                  let relateVal = d[f.relationName()];\n                  if (relateVal == null) return;\n\n                  if (\n                     Array.isArray(relateVal)\n                     // JOHNNY: for speed improvements, don't make this check:\n                     // just do it and that will reduce 1x through the array.\n                     // &&\n                     // relateVal.filter(\n                     //    (v) =>\n                     //       v == deleteId ||\n                     //       v.id == deleteId ||\n                     //       v[PK] == deleteId\n                     // ).length > 0\n                  ) {\n                     updateRelateVals[f.relationName()] = relateVal.filter(\n                        (v) => (v.id || v[PK] || v) != deleteId\n                     );\n                     updateRelateVals[f.columnName] = updateRelateVals[\n                        f.relationName()\n                     ].map((v) => v.id || v[PK] || v);\n                  } else if (\n                     relateVal == deleteId ||\n                     relateVal.id == deleteId ||\n                     relateVal[PK] == deleteId\n                  ) {\n                     updateRelateVals[f.relationName()] = null;\n                     updateRelateVals[f.columnName] = null;\n                  }\n               });\n\n               // If this item needs to update\n               if (Object.keys(updateRelateVals).length > 0) {\n                  // normalize data before add to data collection\n\n                  // var model = obj.model();\n                  // model.normalizeData(updateRelateVals);\n\n                  this.__dataCollection.updateItem(d.id, updateRelateVals);\n\n                  if (this.__treeCollection)\n                     this.__treeCollection.updateItem(d.id, updateRelateVals);\n\n                  this.emit(\"update\", this.__dataCollection.getItem(d.id));\n               }\n            });\n         }\n      });\n\n      // add listeners when cursor of link data collection is changed\n      const linkDC = this.datacollectionLink;\n      // if (linkDC && this.settings.loadAll) {\n      if (linkDC) {\n         this.eventAdd({\n            emitter: linkDC,\n            eventName: \"changeCursor\",\n            listener: (currentCursor) => {\n               // NOTE: we can clear data here to update UI display, then data will be fetched when webix.dataFeed event\n               if (\n                  !this.settings?.loadAll &&\n                  currentCursor?.id != linkDC.previousCursorId\n               )\n                  this.clearAll();\n\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            },\n         });\n\n         this.eventAdd({\n            emitter: linkDC,\n            eventName: \"cursorStale\",\n            listener: (currentCursor) => {\n               // cursorStale : the current cursor hasn't CHANGED, but the data\n               // of that value has changed.\n               // This is triggered by one of our socket updates that detects\n               // changes to the cursor data.\n\n               // if don't have .loadAll set,  we'll need to update our data:\n               if (!this.settings?.loadAll) {\n                  // What I do here depends on what my linked DC has set for\n                  // it's .loadConnections (shouldPopulate) value\n                  let dvLink = this.datacollectionLink;\n                  let isMyDataThere = dvLink.shouldPopulate;\n                  if (Array.isArray(isMyDataThere)) {\n                     // if this was an array: it should be an array of columnNames\n                     // of the dvLink that are being populated.\n\n                     // the column I'm interested in:\n                     let colName = this.fieldLink.fieldLink.columnName;\n\n                     // is it there?\n                     isMyDataThere = isMyDataThere.indexOf(colName) > -1;\n                  }\n                  if (!isMyDataThere) {\n                     // If it didn't populate it's data, then I can't be\n                     // efficient about how to update my data.\n                     // we'll just have to reload:\n\n                     // find out how many entries we have already loaded and try to\n                     // load at least that many again.:\n                     let count = 20;\n                     if (this.__dataCollection.count() > count)\n                        count = this.__dataCollection.count();\n                     if (this.__treeCollection?.count() > count)\n                        count = this.__treeCollection.count();\n\n                     let currCursor = this.__dataCollection.getCursor();\n                     this.clearAll();\n                     this.reloadData(0, count).then(() => {\n                        this.__dataCollection.setCursor(currCursor);\n                        this.emit(\"cursorSelect\", currCursor);\n                     });\n                  } else {\n                     // if the linked DC does have my data populated:\n\n                     // the values I currently contain can fall into 1 of 3 categories:\n                     // 1) A value I currently have that I need to Keep\n                     // 2) A value I currently have that I need to remove\n                     // 3) A value I don't have, but need to Add\n\n                     // the current value of the cursor should have the ID references\n                     // to what SHOULD be in my display\n\n                     // get the current cursor of our linked DC\n                     let linkCursor;\n\n                     if (dvLink) {\n                        linkCursor = dvLink.getCursor();\n                     }\n                     if (!linkCursor) {\n                        // if linkCursor is no longer set, then we should clear()\n                        this.clearAll();\n                        return;\n                     }\n\n                     let PK = this.datasource.PK();\n\n                     // lets start by assuming all the current values in cursor are #3\n                     // -> all the values into valuesToAdd:\n\n                     let colName = this.fieldLink?.fieldLink?.relationName?.();\n                     let valuesToAdd = {};\n                     let valuesIn = colName ? linkCursor[colName] || [] : [];\n                     if (!Array.isArray(valuesIn)) valuesIn = [valuesIn];\n                     valuesIn = valuesIn.filter((v) => v);\n                     valuesIn.forEach((v) => {\n                        valuesToAdd[v[PK]] = v;\n                     });\n\n                     let valuesToRemove = [];\n                     // step through all the values I currently have\n                     let currValues = this.__dataCollection.find(() => true);\n                     currValues.forEach((value) => {\n                        // if value is in valuesToAdd\n                        if (valuesToAdd[value[PK]]) {\n                           // we already have it so turns out we don't need to add\n                           // it after all\n                           delete valuesToAdd[value[PK]];\n                        } else {\n                           // the current state of the Link Cursor value doesn't have\n                           // this value, so we need to remove it:\n                           valuesToRemove.push(value[PK]);\n                        }\n                     });\n\n                     // now remove the items we don't want:\n                     this.__dataCollection.remove(valuesToRemove);\n\n                     // then we have to ask for the values we need to add:\n                     valuesToAdd = Object.keys(valuesToAdd); // convert to []\n                     // NOTE: .staleRefresh() is designed to handle a single requst\n                     // that will be compiled with other requests to be more efficient\n                     // so we need to make 1 .staleRefresh() at a time and then\n                     // compile those results into our data collection.\n                     let prmsAllRefreshes = [];\n                     let allAdds = [];\n                     (valuesToAdd || []).forEach((v) => {\n                        let cond = { where: {} };\n                        cond.where[PK] = v;\n                        // NOTE: we are using the abbreviated condition syntax here.\n\n                        // NOTE: staleRefresh() has some buffering capabilities\n                        // that combine multiple calls into 1 more efficient call:\n                        prmsAllRefreshes.push(\n                           this.model.staleRefresh(cond).then((res) => {\n                              // check to make sure there is data to work with\n                              if (Array.isArray(res.data) && res.data.length) {\n                                 res.data.forEach((d) => {\n                                    allAdds.push(d);\n                                 });\n                              } else {\n                                 if (res.data) {\n                                    allAdds.push(res.data);\n                                 }\n                              }\n                           })\n                        );\n                     });\n                     Promise.all(prmsAllRefreshes).then(() => {\n                        allAdds.forEach((d) => {\n                           if (this.isValidData(d)) {\n                              if (!this.__dataCollection.exists(d[PK])) {\n                                 this.__dataCollection.add(d);\n                              }\n                           }\n                        });\n                     });\n                  }\n\n                  return;\n               }\n\n               // Otherwise, we need to refilter our data:\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            },\n         });\n      }\n\n      // add listeners when cursor of the followed data collection is changed\n      const followDC = this.datacollectionFollow;\n      if (followDC) {\n         this.eventAdd({\n            emitter: followDC,\n            eventName: \"changeCursor\",\n            listener: () => {\n               const followCursor = followDC.getCursor();\n               const currentCursor = this.getCursor();\n\n               // If the cursor is not the new, then it should not reload.\n               if (\n                  followCursor?.[followDC.datasource.PK()] ==\n                  currentCursor?.[this.datasource.PK()]\n               )\n                  return;\n\n               this.clearAll();\n               this.loadData();\n            },\n         });\n\n         this.eventAdd({\n            emitter: followDC,\n            eventName: \"cursorStale\",\n            listener: () => {\n               // cursorStale : the current cursor hasn't CHANGED, but the data\n               // of that value has changed.\n               // This is triggered by one of our socket updates that detects\n               // changes to the cursor data.\n\n               this.clearAll();\n               this.loadData();\n            },\n         });\n      }\n   }\n\n   /*\n    * waitForDataCollectionToInitialize()\n    * there are certain situations where this datacollection shouldn't\n    * load until another one has loaded.  In those cases, the fn()\n    * will wait for the required datacollection to emit \"initializedData\"\n    * before continuing on.\n    * @param {ABViewDataCollection} DC\n    *      the DC this datacollection depends on.\n    * @returns {Promise}\n    */\n   async waitForDataCollectionToInitialize(DC, msg) {\n      DC.init();\n\n      return new Promise((resolve, reject) => {\n         /* eslint-disable no-fallthrough */\n         switch (DC.dataStatus) {\n            // if that DC hasn't started initializing yet, start it!\n            case DC.dataStatusFlag.notInitial:\n               DC.loadData().catch(reject);\n            // no break;\n\n            // once in the process of initializing\n\n            case DC.dataStatusFlag.initializing:\n               /* eslint-enable no-fallthrough*/\n               // listen for \"initializedData\" event from the DC\n               // then we can continue.\n               this.eventRemove(\"initializedData\", DC);\n               this.eventAdd({\n                  emitter: DC,\n                  eventName: \"initializedData\",\n                  listener: () => {\n                     // go next\n                     resolve();\n                  },\n               });\n               break;\n\n            // if it is already initialized, we can continue:\n            case DC.dataStatusFlag.initialized:\n               resolve();\n               break;\n\n            // just in case, if the status is not known, just continue\n            default:\n               resolve();\n               break;\n         }\n         /* eslint-enable no-fallthrough */\n      });\n   }\n\n   // /**\n   //  * @method whereCleanUp()\n   //  * Parse through the current where condition and remove any null or\n   //  * empty logical blocks.\n   //  * @param {obj} curr\n   //  *        1) The current where condition in ABQuery Format:\n   //  *        {\n   //  *           glue: [AND, OR],\n   //  *           rules: [ {rule} ]\n   //  *        }\n   //  *        or 2) The current {rule} to validate\n   //  *        {\n   //  *          key:{string},\n   //  *          rule:{string},\n   //  *          vlaue:{mixed}\n   //  *        }\n   //  * @return {ABQuery.where} / { Rule }\n   //  */\n   // whereCleanUp(curr) {\n   //    if (curr) {\n   //       if (curr.glue && curr.rules) {\n   //          // this is a logical Block (AND, OR)\n   //          // we need to filter the children\n   //          let newValue = { glue: curr.glue, rules: [] };\n   //          curr.rules.forEach((r) => {\n   //             let cleanRule = this.whereCleanUp(r);\n   //             // don't add values that didn't pass\n   //             if (cleanRule) {\n   //                newValue.rules.push(cleanRule);\n   //             }\n   //          });\n\n   //          // if we have a non empty block, then return it:\n   //          if (newValue.rules.length > 0) {\n   //             return newValue;\n   //          }\n\n   //          // this isn't really a valid conditional, so null\n   //          return null;\n   //       }\n\n   //       // This is a specific rule, that isn't null so:\n   //       return curr;\n   //    }\n   //    return null;\n   // }\n\n   /**\n    * @method getWhereClause()\n    * Return the current where condition for the datacollection.\n    * The where condition might change depending if we are following\n    * another datacollection or not.\n    *\n    * NOTE: start and limit might be effected by some of our settings\n    * so we include them here and then return those values as well.\n    *\n    * @param {int} start\n    * @param {int} limit\n    * @returns [ wheres, start, limit ]\n    */\n   getWhereClause(start, limit) {\n      // pull filter conditions\n      let wheres = this.AB.cloneDeep(\n         this.settings.objectWorkspace.filterConditions ?? {}\n      );\n      // if we pass new wheres with a reload use them instead\n      if (this.__reloadWheres) {\n         wheres = this.__reloadWheres;\n      }\n      wheres.glue = wheres.glue || \"and\";\n      wheres.rules = wheres.rules || [];\n\n      const __additionalWheres = {\n         glue: \"and\",\n         rules: [],\n      };\n\n      // add the filterCond if there are rules to add\n      if (this.__filterCond?.rules?.length > 0) {\n         __additionalWheres.rules.push(this.__filterCond);\n      }\n\n      // Filter by a selected cursor of a link DC\n      let linkRule = this.ruleLinkedData();\n      if (!this.settings.loadAll && linkRule) {\n         __additionalWheres.rules.push(linkRule);\n      }\n      // pull data rows following the follow data collection\n      else if (this.datacollectionFollow) {\n         const followCursor = this.datacollectionFollow.getCursor();\n         // store the PK as a variable\n         let PK = this.datasource.PK();\n         // if the datacollection we are following is a query\n         // add \"BASE_OBJECT.\" to the PK so we can select the\n         // right value to report the cursor change to\n         if (this.datacollectionFollow.settings.isQuery) {\n            PK = \"BASE_OBJECT.\" + PK;\n         }\n         if (followCursor) {\n            start = 0;\n            limit = null;\n            wheres = {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.datasource.PK(),\n                     rule: \"equals\",\n                     value: followCursor[PK],\n                  },\n               ],\n            };\n         }\n         // Set no return rows\n         else {\n            wheres = {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.datasource.PK(),\n                     rule: \"equals\",\n                     value: \"NO RESULT ROW\",\n                  },\n               ],\n            };\n         }\n      }\n\n      // Combine setting & program filters\n      if (__additionalWheres.rules.length) {\n         if (wheres.rules.length) {\n            __additionalWheres.rules.unshift(wheres);\n         }\n         wheres = __additionalWheres;\n      }\n\n      // remove any null in the .rules\n      // if (wheres?.rules?.filter) wheres.rules = wheres.rules.filter((r) => r);\n      wheres = this.datasource.whereCleanUp(wheres);\n\n      return [wheres, start, limit];\n   }\n\n   async loadData(start, limit) {\n      // mark data status is initializing\n      if (this._dataStatus == this.dataStatusFlag.notInitial) {\n         this._dataStatus = this.dataStatusFlag.initializing;\n         this.emit(\"initializingData\", {});\n      }\n\n      var obj = this.datasource;\n      if (obj == null) {\n         this._dataStatus = this.dataStatusFlag.initialized;\n         return Promise.resolve([]);\n      }\n\n      var model = obj.model();\n      if (model == null) {\n         this._dataStatus = this.dataStatusFlag.initialized;\n         return Promise.resolve([]);\n      }\n\n      // pull the defined sort values\n      var sorts = this.settings.objectWorkspace.sortFields || [];\n\n      let [wheres, s2, l2] = this.getWhereClause(start, limit);\n      start = s2;\n      limit = l2;\n\n      // // pull filter conditions\n      // let wheres = this.AB.cloneDeep(\n      //    this.settings.objectWorkspace.filterConditions ?? {}\n      // );\n      // // if we pass new wheres with a reload use them instead\n      // if (this.__reloadWheres) {\n      //    wheres = this.__reloadWheres;\n      // }\n      // wheres.glue = wheres.glue || \"and\";\n      // wheres.rules = wheres.rules || [];\n\n      // const __additionalWheres = {\n      //    glue: \"and\",\n      //    rules: [],\n      // };\n\n      // // add the filterCond if there are rules to add\n      // if (this.__filterCond?.rules?.length > 0) {\n      //    __additionalWheres.rules.push(this.__filterCond);\n      // }\n\n      // // Filter by a selected cursor of a link DC\n      // let linkRule = this.ruleLinkedData();\n      // if (!this.settings.loadAll && linkRule) {\n      //    __additionalWheres.rules.push(linkRule);\n      // }\n      // // pull data rows following the follow data collection\n      // else if (this.datacollectionFollow) {\n      //    const followCursor = this.datacollectionFollow.getCursor();\n      //    // store the PK as a variable\n      //    let PK = this.datasource.PK();\n      //    // if the datacollection we are following is a query\n      //    // add \"BASE_OBJECT.\" to the PK so we can select the\n      //    // right value to report the cursor change to\n      //    if (this.datacollectionFollow.settings.isQuery) {\n      //       PK = \"BASE_OBJECT.\" + PK;\n      //    }\n      //    if (followCursor) {\n      //       start = 0;\n      //       limit = null;\n      //       wheres = {\n      //          glue: \"and\",\n      //          rules: [\n      //             {\n      //                key: this.datasource.PK(),\n      //                rule: \"equals\",\n      //                value: followCursor[PK],\n      //             },\n      //          ],\n      //       };\n      //    }\n      //    // Set no return rows\n      //    else {\n      //       wheres = {\n      //          glue: \"and\",\n      //          rules: [\n      //             {\n      //                key: this.datasource.PK(),\n      //                rule: \"equals\",\n      //                value: \"NO RESULT ROW\",\n      //             },\n      //          ],\n      //       };\n      //    }\n      // }\n\n      // // Combine setting & program filters\n      // if (__additionalWheres.rules.length) {\n      //    if (wheres.rules.length) {\n      //       __additionalWheres.rules.unshift(wheres);\n      //    }\n      //    wheres = __additionalWheres;\n      // }\n\n      // // remove any null in the .rules\n      // // if (wheres?.rules?.filter) wheres.rules = wheres.rules.filter((r) => r);\n      // wheres = obj.whereCleanUp(wheres);\n\n      // set query condition\n      var cond = {\n         where: wheres || {},\n         // limit: limit || 20,\n         skip: start || 0,\n         sort: sorts,\n         populate: this.shouldPopulate,\n      };\n\n      //// NOTE: we no longer set a default limit on loadData() but\n      //// require the platform.loadData() to pass in a default limit.\n      if (limit != null) {\n         cond.limit = limit;\n      }\n\n      // if settings specify loadAll, then remove the limit\n      if (this.settings.loadAll && !this.isCursorFollow) {\n         delete cond.limit;\n      }\n\n      //\n      // Step 1: make sure any DataCollections we are linked to are\n      // initialized first.  Then proceed with our initialization.\n      //\n      const parentDc = this.datacollectionLink ?? this.datacollectionFollow;\n      // If we are linked to another datacollection then wait for it\n      if (parentDc) {\n         await this.waitForDataCollectionToInitialize(parentDc);\n      }\n\n      //\n      // Step 2: if we have any filter rules that depend on other DataCollections,\n      // then wait for them to be initialized first.\n      // eg: \"(not_)in_data_collection\" rule filters\n      if (wheres?.rules?.length) {\n         const dcFilters = [];\n\n         wheres.rules.forEach((rule) => {\n            // if this collection is filtered by data collections we need to load them in case we need to validate from them later\n            if (\n               rule.rule == \"in_data_collection\" ||\n               rule.rule == \"not_in_data_collection\"\n            ) {\n               const dv = this.AB.datacollectionByID(rule.value);\n               if (dv) {\n                  dcFilters.push(this.waitForDataCollectionToInitialize(dv));\n               }\n            }\n         });\n\n         await Promise.all(dcFilters);\n      }\n\n      //\n      // Step 3: pull data to data collection\n      // we will keep track of the resolve, reject for this\n      // operation.\n      // the actual resolve() should happen in the\n      // .processIncomingData() after the  data is processed.\n      return new Promise((resolve, reject) => {\n         const jobID = this.AB.jobID();\n         cond.jobID = jobID;\n         this._pendingLoadDataResolves[jobID] = { resolve, reject };\n         this.platformFind(model, cond).catch((err) => {\n            delete this._pendingLoadDataResolves[jobID];\n            reject(err);\n         });\n      });\n   }\n\n   platformFind(model, cond) {\n      //// Core Migration Note:\n      //// the ABViewDataCollectionCore now manages data in a different way:\n      //// local data  vs  Remote Data\n      //// this will need to be updated to reflect that management:\n      //// (and also explains why we refactored things into .processIncomingData())\n      return model.findAll(cond).then((data) => {\n         return this.processIncomingData(data);\n      });\n   }\n\n   /**\n    * @method shouldPopulate()\n    * Return our populate status. We now want to query this info outside this\n    * object.\n    * @return {bool|Array}\n    *         true/false,  or an array of columnNames that are being populated.\n    */\n   get shouldPopulate() {\n      return (\n         this.settings.populate ??\n         (this.settings.preventPopulate ? false : true)\n      );\n   }\n\n   /**\n    * @method queuedParse()\n    * This is an attempt at loading very large datasets into a Webix DC without locking up\n    * the display.\n    * @param {array} data\n    *        The data to load into the __dataCollection\n    * @param {callback} cb\n    *        A callback to call when the data has been fully loaded.\n    */\n   async queuedParse(incomingData, cb) {\n      const data = incomingData?.data || incomingData;\n      if (!data?.length) {\n         cb?.();\n         return Promise.resolve();\n      }\n\n      const total_count = incomingData.total_count;\n\n      let nextData;\n      if (data.length > 250) {\n         // let pos = this.__dataCollection.count();\n         let pos = this.__dataCollection.find({}).length;\n         let remain = data.splice(250);\n         nextData = {\n            data: remain,\n            pos: pos + data.length,\n            total_count,\n         };\n      }\n\n      const parsedData = {\n         data,\n         pos: incomingData.pos,\n         total_count,\n      };\n      this.__dataCollection.parse(parsedData);\n\n      return new Promise((resolve) => {\n         setTimeout(async () => {\n            await this.queuedParse(nextData);\n\n            // Introduce a delay to ensure the UI has fully rendered the list before proceeding\n            setTimeout(async () => {\n               cb?.();\n               resolve();\n            }, 50);\n         }, 15);\n      });\n   }\n\n   /**\n    * processIncomingData()\n    * is called from loadData() once the data is returned.  This method\n    * allows the platform to make adjustments to the data based upon any\n    * platform defined criteria.\n    * @param {obj} data  the data as it was returned from the Server\n    *        which should be in following format:\n    *        {\n    *          status: \"success\", // or \"error\"\n    *          data:[ {ABObjectData}, {ABObjectData}, ...]\n    *        }\n    */\n   processIncomingData(data) {\n      return Promise.resolve().then(() => {\n         // store total count\n         this.__totalCount = data.total_count;\n\n         // Need to .parse at the first time\n         if (!this.__dataCollection.find({}).length) {\n            this.__dataCollection.clearAll();\n            // this.__dataCollection.parse(data);\n         }\n\n         if (this.__throttleIncoming) clearTimeout(this.__throttleIncoming);\n         this.__throttleIncoming = setTimeout(async () => {\n            // using queuedParse() to responsively handle large datasets.\n            await this.queuedParse(data);\n\n            // In order to get the total_count updated I had to use .load()\n            this.__dataCollection.load(async () => {\n               setTimeout(() => {\n                  this.refreshLinkCursor();\n               }, 250);\n\n               return {\n                  // NOTE: return a empty array to prevent render items in DataTable twice. (Items are rendered in .queuedParse function)\n                  data: [],\n                  pos: data.pos,\n                  total_count: data.total_count,\n               };\n            });\n\n            // this does nothing???\n            this.parseTreeCollection(data);\n\n            // if we are linked, then refresh our cursor\n            var linkDv = this.datacollectionLink;\n            if (linkDv) {\n               // filter data by match link data collection\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            } else {\n               // set static cursor\n               this.setStaticCursor();\n            }\n\n            // now we close out our .loadData() promise.resolve() :\n            if (data.jobID) { \n               this._pendingLoadDataResolves[data.jobID].resolve();\n               delete this._pendingLoadDataResolves[data.jobID];\n            }\n\n            // If dc set load all, then it will not trigger .loadData in dc at\n            // .onAfterLoad event\n            if (this.settings.loadAll) {\n               this.emit(\"loadData\", {});\n            }\n\n            // mark initialized data\n            if (this._dataStatus != this.dataStatusFlag.initialized) {\n               this._dataStatus = this.dataStatusFlag.initialized;\n               this.emit(\"initializedData\", {});\n            }\n         }, 100);\n      });\n   }\n\n   /**\n    * @method reloadData()\n    * Trigger the DataCollection to reload its data from the server.\n    * @param {int} start\n    *        Start position of where we want the data to load.\n    * @param {int} limit\n    *        How many entries to load at a time.\n    * @return {Promise}\n    */\n   reloadData(start, limit) {\n      // var waitForDataCollectionToInitialize = (DC) => {\n      //    return new Promise((resolve, reject) => {\n      //       switch (DC.dataStatus) {\n      //          // if that DC hasn't started initializing yet, start it!\n      //          case DC.dataStatusFlag.notInitial:\n      //             DC.loadData().catch(reject);\n      //          // no break;\n\n      //          // once in the process of initializing\n      //          /* eslint-disable no-fallthrough*/\n      //          case DC.dataStatusFlag.initializing:\n      //             /* eslint-enable no-fallthrough*/\n      //             // listen for \"initializedData\" event from the DC\n      //             // then we can continue.\n      //             this.eventAdd({\n      //                emitter: DC,\n      //                eventName: \"initializedData\",\n      //                listener: () => {\n      //                   // go next\n      //                   resolve();\n      //                },\n      //             });\n      //             break;\n\n      //          // if it is already initialized, we can continue:\n      //          case DC.dataStatusFlag.initialized:\n      //             resolve();\n      //             break;\n\n      //          // just in case, if the status is not known, just continue\n      //          default:\n      //             resolve();\n      //             break;\n      //       }\n      //    });\n      // };\n\n      return Promise.resolve().then(() => {\n         // check if we are currently waiting for more data requests on this datacollection before continuing\n         if (this.reloadTimer) {\n            // if we are already waiting delete the current timer\n            clearTimeout(this.reloadTimer);\n            delete this.reloadTimer;\n         }\n\n         // return a promise\n         if (!this.reloadPromise) {\n            this.reloadPromise = new Promise((resolve, reject) => {\n               this.reloadPromise__resolve = resolve;\n               this.reloadPromise__reject = reject;\n            });\n         }\n\n         // then create a new timeout to delete current timeout, clear data\n         // and load new\n         this.reloadTimer = setTimeout(() => {\n            // clear the data from the dataCollection,\n            this.clearAll();\n            // then loads new data from the server\n            return this.loadData(start, limit)\n               .then(() => {\n                  if (this.reloadPromise) {\n                     this.reloadPromise__resolve();\n                     delete this.reloadPromise;\n                     delete this.reloadPromise__resolve;\n                     delete this.reloadPromise__reject;\n                  }\n\n                  // delete the current setTimeout\n                  clearTimeout(this.reloadTimer);\n                  delete this.reloadTimer;\n               })\n               .catch((err) => {\n                  if (this.reloadPromise) {\n                     this.reloadPromise__reject(err);\n                     delete this.reloadPromise;\n                     delete this.reloadPromise__resolve;\n                     delete this.reloadPromise__reject;\n                  }\n                  // delete the current setTimeout\n                  clearTimeout(this.reloadTimer);\n                  delete this.reloadTimer;\n               });\n         }, 50);\n         // setting to 50ms because right now we do not see many\n         // concurrent calls,  we need to increase this if we begin to\n\n         return this.reloadPromise;\n      });\n   }\n\n   /**\n    * reloadWheres()\n    * stores the child data collections filters for subsequent loads.\n    * It is called from bindParentDc() when child data collections that are not\n    * marked to load all data are initializing. To do this we use webix\n    * server side binding by setting the param of \"dataFeed\".\n    * @param {obj} wheres  the new filters for the data collection\n    *        This is a combination of any exisiting filters the data collection\n    *        alreay had as well as the filter for the current cursor set by the\n    *        master data collection. We store this in __reloadWheres for when\n    *        the data needs to be updated.\n    *        The format of the wheres is our Query Builder Format\n    *        ex: {\n    *              \"glue\": \"and\",\n    *              \"rules\": [{\n    *                \"key\": \"33ba8957-6b9c-4ddb-9533-c46b13878ae1\",\n    *                \"rule\": \"contains\",\n    *                \"value\": \"1594176994894\"\n    *              }]\n    *            }\n    */\n   reloadWheres(wheres) {\n      this.__reloadWheres = wheres;\n   }\n\n   getData(filter) {\n      var dc = this.__dataCollection;\n      if (dc) {\n         return dc.find((row) => {\n            let isValid = true;\n\n            // data collection filter\n            // isValid = this.isValidData(row);\n\n            // NOTE: data are filtered from the server side (webix.dataFeed)\n            // parent dc filter\n            let linkDv = this.datacollectionLink;\n            if (linkDv && this.settings.loadAll && isValid) {\n               isValid = this.isParentFilterValid(row);\n            }\n\n            // addition filter\n            if (isValid && filter) {\n               isValid = filter(row);\n            }\n\n            return isValid;\n         });\n      } else {\n         return [];\n      }\n   }\n\n   isParentFilterValid(rowData) {\n      // data is empty\n      if (rowData == null) return false;\n\n      var linkDv = this.datacollectionLink;\n      if (linkDv == null) return true;\n\n      const linkObj = linkDv.datasource;\n      if (linkObj == null) return true;\n\n      var fieldLink = this.fieldLink;\n      if (fieldLink == null) return true;\n\n      // if the parent's cursor is not set we have not filted this collection\n      // yet so the data that comes back should be valid\n      var linkCursor = linkDv.getCursor();\n      if (linkCursor == null) {\n         return true;\n      }\n\n      var linkVal = rowData[fieldLink.relationName()];\n      if (linkVal == null) {\n         // try to get relation value(id) again\n         if (rowData[fieldLink.columnName]) {\n            linkVal = rowData[fieldLink.columnName];\n         } else {\n            return false;\n         }\n      }\n\n      let PK = fieldLink.object.PK();\n\n      // array - 1:M , M:N\n      if (linkVal.filter) {\n         return (\n            linkVal.filter(\n               (val) =>\n                  (val[PK] || val.id || val) ==\n                  (linkCursor[linkObj.PK()] || linkCursor.id || linkCursor)\n            ).length > 0\n         );\n      } else {\n         return (\n            (linkVal[PK] || linkVal.id || linkVal) ==\n            (linkCursor[linkObj.PK()] || linkCursor.id || linkCursor)\n         );\n      }\n   }\n\n   clearAll() {\n      if (this.__dataCollection) this.__dataCollection.clearAll();\n\n      if (this.__treeCollection) this.__treeCollection.clearAll();\n\n      this._dataStatus = this.dataStatusFlag.notInitial;\n   }\n\n   get totalCount() {\n      return this.__totalCount || 0;\n   }\n\n   ///\n   /// Components\n   ///\n\n   /**\n    * @method bind\n    * @param {Object} component - a webix element instance\n    */\n   bind(/* component */) {\n      console.error(\"Platform.ABDataCollection.bind() Not implemented\");\n   }\n\n   unbind(/* component */) {\n      console.error(\"Platform.ABDataCollection.unbind() Not implemented\");\n   }\n\n   removeComponent(comId) {\n      // get index\n      let index = this.__bindComponentIds.indexOf(comId);\n\n      // delete\n      this.__bindComponentIds.splice(index, 1);\n   }\n\n   /**\n    * @method ruleLinkedData()\n    * return a QueryFilter rule that also checks that incoming data is linked\n    * to our .datacollectionLink (if it exists).\n    * @return {obj} {QueryFilterRule}\n    */\n   ruleLinkedData() {\n      let rule = null;\n      const dataCollectionLink = this.datacollectionLink;\n      const fieldLink = this.fieldLink;\n      if (dataCollectionLink && fieldLink) {\n         const linkCursorId = dataCollectionLink?.getCursor()?.id;\n         if (linkCursorId) {\n            const linkType = `${fieldLink.linkType()}:${fieldLink.linkViaType()}`;\n\n            let filterRule;\n            // NOTE: If object is query, then use \"contains\" because ABOBjectQuery return JSON\n            if (fieldLink.alias) {\n               filterRule = \"contains\";\n            }\n            // M:1\n            else if (linkType == \"many:one\") {\n               filterRule = \"have_relation\";\n            }\n            // 1:M\n            else {\n               filterRule = \"equals\";\n            }\n\n            rule = {\n               alias: fieldLink.alias, // ABObjectQuery\n               key: fieldLink.id,\n               rule: filterRule,\n               value: fieldLink.getRelationValue(\n                  dataCollectionLink.__dataCollection.getItem(linkCursorId)\n               ),\n            };\n         }\n      }\n      return rule;\n   }\n\n   /**\n    * @method refreshFilterConditions()\n    * This is called in two primary cases:\n    *    - on initialization of a DC to setup our filters.\n    *    - in the operation of the ABDesigner when using a DC to display data\n    *      in the Work_object_grid and the datacollection_work(?)\n    * In the case of the ABDesigner, new temporary where conditions are provided\n    * from the possible filters we can set, and those need to effect the data\n    * we display.\n    * @param {ABRowFilter.where} wheres\n    *        The filter condition from the ABRowFilter values we are storing.\n    */\n   refreshFilterConditions(wheres = null) {\n      // There are 3 Filters that help us know if our data is Valid:\n      // 1) A filter for any ABObjectQuery we are managing.\n      // 2) A filter for our own filter condition\n      // 3) A filter that represents what our scopes allows\n\n      // Set filter of ABObject\n      if (this.__filterDatasource == null)\n         this.__filterDatasource = this.AB.filterComplexNew(\n            `${this.id}_filterDatasource`\n         );\n\n      if (this.datasource) {\n         // this.__filterDatasource.applicationLoad(this.datasource.application);\n         this.__filterDatasource.fieldsLoad(this.datasource.fields());\n\n         let filterConditions;\n\n         // Query\n         if (this.datasource instanceof this.AB.Class.ABObjectQuery) {\n            filterConditions = this.datasource.where;\n         }\n         // Apr 29, 2021 Removed this because we do not want Object filters to\n         // effect validation of DataCollections\n         // Object\n\n         // else if (this.datasource instanceof ABObject) {\n         //    let currentView = this.datasource.currentView();\n         //    if (currentView && currentView.filterConditions)\n         //       filterConditions = currentView.filterConditions;\n         // }\n\n         if (filterConditions)\n            this.__filterDatasource.setValue(filterConditions);\n         else this.__filterDatasource.setValue({});\n      } else {\n         this.__filterDatasource.fieldsLoad([]);\n         this.__filterDatasource.setValue(\n            DefaultValues.settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Set filter of data view\n      // Apr 29, 2021 Added this code back to validate with DataCollection Filters\n      if (this.__filterDatacollection == null)\n         this.__filterDatacollection = this.AB.filterComplexNew(\n            `${this.id}_filterDatacollection`\n         );\n\n      // this.__filterDatacollection.applicationLoad(\n      //    this.datasource ? this.datasource.application : null\n      // );\n      this.__filterDatacollection.fieldsLoad(\n         this.datasource ? this.datasource.fields() : []\n      );\n\n      // if we pass in wheres, then Save that value to our internal .filterConditions\n      if (wheres) this.settings.objectWorkspace.filterConditions = wheres;\n\n      let filter = this.AB.cloneDeep(\n         this.settings.objectWorkspace?.filterConditions ?? {\n            glue: \"and\",\n            rules: [],\n         }\n      );\n      // sanity checks:\n      // I've learned not to trust: this.settings.objectWorkspace\n      filter.glue = filter.glue || \"and\";\n      filter.rules = filter.rules || [];\n\n      // if there is a linkRule, add it to filter\n      let linkRule = this.ruleLinkedData(); // returns a rule if we are linked\n      if (linkRule) {\n         // NOTE: linkRule was originally designed to produce a rule for the\n         // loadData() routine.  In SQL, our linkRule might have an \"equals\"\n         // rule, to match.  But in this context if our linktype is \"many\"\n         // we need to change the rule to \"contains\":\n         // QUESTION: If this is still required, consider moving it into the `ruleLinkedData` function for maintainability. ??\n         // if (this.fieldLink?.linkType() == \"many\") {\n         //    linkRule.rule = \"contains\";\n         // }\n\n         // if linkRule not already IN filter:\n         let isAlreadyThere = false;\n         let keys = Object.keys(linkRule);\n         (filter.rules || []).forEach((r) => {\n            if (isAlreadyThere) return;\n            let allMatch = true;\n            keys.forEach((k) => {\n               if (r[k] != linkRule[k]) {\n                  allMatch = false;\n               }\n            });\n            isAlreadyThere = allMatch;\n         });\n         if (!isAlreadyThere) {\n            // link Rule needs to be ANDed to our current Rules:\n            if (filter.glue == \"and\") {\n               filter.rules.push(linkRule);\n            } else {\n               filter = { glue: \"and\", rules: [filter, linkRule] };\n            }\n         }\n      }\n\n      if ((filter.rules || []).length > 0 && !this.isCursorFollow) {\n         this.__filterDatacollection.setValue(filter);\n      } else {\n         this.__filterDatacollection.setValue(\n            DefaultValues.settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Set filter of user's scope\n      if (this.__filterScope == null)\n         this.__filterScope = this.AB.filterComplexNew(\n            `${this.id}_filterScope`\n         );\n\n      if (this.datasource) {\n         let scopeList = (this.userScopes || []).filter(\n            (s) =>\n               !s.allowAll &&\n               (s.objectIds || []).indexOf(this.datasource.id) > -1\n         );\n         if (scopeList && scopeList.length > 0) {\n            // this.__filterScope.applicationLoad(this.datasource.application);\n            this.__filterScope.fieldsLoad(this.datasource.fields() || []);\n\n            // concat all rules of scopes\n            let scopeRules = [];\n            scopeList\n               .filter(\n                  (s) => s.filter && s.filter.rules && s.filter.rules.length\n               )\n               .forEach((s) => {\n                  let sRules = (s.filter.rules || []).filter(\n                     (r) =>\n                        this.datasource.fields((f) => f.id == r.key).length > 0\n                  );\n\n                  scopeRules = scopeRules.concat(sRules);\n               });\n\n            let scopeWhere = {\n               glue: \"or\",\n               rules: scopeRules,\n            };\n            this.__filterScope.setValue(scopeWhere);\n         }\n      }\n   }\n\n   get isGroup() {\n      return this.__isGroup || false;\n   }\n\n   ///\n   /// Sync type\n   ///\n\n   get syncTypeFlag() {\n      return {\n         server: 1,\n         client: 2,\n      };\n   }\n\n   get syncType() {\n      return this.settings.syncType || DefaultValues.syncType;\n   }\n\n   /** Private methods */\n\n   /**\n    * @method _dataCollectionNew\n    * Get webix.DataCollection\n    *\n    * @return {webix.DataCollection}\n    *\n    * @param {Array} data - initial data\n    */\n   _dataCollectionNew(/*data*/) {\n      var error = new Error(\n         \"the platform.ABDataCollection._dataCollectionNew() is expected to return a proper DataCollection!\"\n      );\n      console.error(error);\n      return null;\n   }\n\n   /**\n    * @method _treeCollectionNew\n    * Get webix.TreeCollection\n    *\n    * @return {webix.TreeCollection}\n    *\n    */\n   _treeCollectionNew() {\n      console.error(\n         \"the platform.ABDataCollection._treeCollectionNew() is expected to return a proper TreeCollection!\"\n      );\n      return null;\n   }\n\n   parseTreeCollection(data = {}) {\n      // TODO all this does is log \"is missing?\"\n      // if (false) {\n      //    console.log(\n      //       \"Platform.ABDataCollection.parseTreeCollection() missing!\"\n      //    );\n      // }\n   }\n   // parseTreeCollection(data = {}) {\n\n   //  if (!(this.__datasource instanceof ABObjectQuery) ||\n   //    !this.__datasource.isGroup ||\n   //    !this.__treeCollection)\n   //    return;\n\n   //  let addRowToTree = (join = {}, parentAlias = null) => {\n\n   //    let alias = join.alias;\n\n   //    (data.data || []).forEach(row => {\n\n   //      let dataId = row[`${alias}.uuid`] || row[`${alias}.id`];\n   //      if (!dataId) return;\n\n   //      // find parent nodes\n   //      let parentItemIds = [];\n   //      let parentId = row[`${parentAlias}.uuid`] || row[`${parentAlias}.id`];\n   //      if (parentId) {\n   //        parentItemIds = this.__treeCollection\n   //          .find(item => item._alias == parentAlias && item._dataId == parentId)\n   //          .map(item => item.id);\n   //      }\n\n   //      // check exists\n   //      let exists = this.__treeCollection.find(item => {\n   //        return item._alias == alias &&\n   //          item._dataId == dataId &&\n   //          (parentItemIds.length == 0 || parentItemIds.indexOf(item.$parent) > -1);\n   //      }, true);\n   //      if (exists) return;\n\n   //      let treeNode = {};\n   //      treeNode._alias = alias;\n   //      treeNode._dataId = dataId;\n   //      treeNode._itemId = row.id; // Keep row id for set cursor to data collection\n\n   //      Object.keys(row).forEach(propName => {\n\n   //        // Pull value from alias\n   //        if (propName.indexOf(`${alias}.`) == 0) {\n   //          treeNode[propName] = row[propName];\n   //        }\n\n   //      });\n\n   //      if (row.translations)\n   //        treeNode.translations = row.translations;\n\n   //      // child nodes\n   //      if (parentItemIds.length > 0)\n   //        parentItemIds.forEach(parentItemId => {\n   //          this.__treeCollection.add(treeNode, null, parentItemId);\n   //        });\n   //      // root node\n   //      else\n   //        this.__treeCollection.add(treeNode, null);\n\n   //    });\n\n   //    // Sub-joins\n   //    (join.links || []).forEach(link => {\n   //      addRowToTree(link, alias);\n   //    });\n\n   //  };\n\n   //  // Show loading cursor\n   //  (this.__bindComponentIds || []).forEach(comId => {\n\n   //    let boundComp = $$(comId);\n   //    if (boundComp &&\n   //      boundComp.showProgress)\n   //      boundComp.showProgress({ type: \"icon\" });\n\n   //  });\n\n   //  addRowToTree(this.__datasource.joins());\n\n   //  // Hide loading cursor\n   //  (this.__bindComponentIds || []).forEach(comId => {\n\n   //    let boundComp = $$(comId);\n   //    if (boundComp &&\n   //      boundComp.hideProgress)\n   //      boundComp.hideProgress();\n\n   //  })\n   // }\n\n   /**\n    * @method _queryUpdateData\n    *\n    * @param {Array} objList - List of ABObject\n    * @param {Object} values\n    */\n   _queryUpdateData(objList, values) {\n      let updatedVals = {};\n\n      // Add alias to properties of update data\n      Object.keys(values).forEach((key) => {\n         objList.forEach((oItem) => {\n            let alias = this.datasource.objectAlias(oItem.id);\n\n            updatedVals[`${alias}.${key}`] = values[key];\n\n            // Add alias to properties of .translations\n            if (\n               key == \"translations\" &&\n               values[\"translations\"] &&\n               values[\"translations\"].length\n            ) {\n               updatedVals.translations = [];\n\n               values[\"translations\"].forEach((tran) => {\n                  let updatedTran = {};\n\n                  Object.keys(tran).forEach((tranKey) => {\n                     if (tranKey == \"language_code\")\n                        updatedTran[\"language_code\"] = tran[\"language_code\"];\n                     else updatedTran[`${alias}.${tranKey}`] = tran[tranKey];\n                  });\n\n                  updatedVals.translations.push(updatedTran);\n               });\n            }\n         });\n      });\n\n      return updatedVals;\n   }\n\n   isValidData(rowData, skipDatasourceFilter = false) {\n      let result = true;\n\n      // NOTE: should we use filter of the current view of object to filter\n      //        if yes, update .wheres condition in .loadData too\n      if (this.__filterDatasource && !skipDatasourceFilter)\n         result = result && this.__filterDatasource.isValid(rowData);\n\n      if (this.__filterDatacollection)\n         result = result && this.__filterDatacollection.isValid(rowData);\n\n      if (result && this.__filterScope)\n         result = result && this.__filterScope.isValid(rowData);\n\n      return result;\n   }\n\n   updateRelationalDataFromLinkDC(objectId, rowData) {\n      const dcLink = this.datacollectionLink;\n      const cursorLink = dcLink?.getCursor();\n\n      // Add the new data that just relate to the Link DC\n      if (\n         dcLink?.datasource.id == objectId &&\n         cursorLink &&\n         cursorLink.id == rowData?.id\n      ) {\n         const obj = this.datasource;\n         const linkedField = this.fieldLink;\n         let relatedData = rowData[linkedField.fieldLink.relationName()];\n         if (relatedData && !Array.isArray(relatedData))\n            relatedData = [relatedData];\n\n         (relatedData ?? []).forEach((item) => {\n            if (item == null) return;\n\n            if (!this.__dataCollection.exists(item[obj.PK()])) {\n               // QUESTION: Should we .find to get fully info here ?\n               const newItem = this.AB.cloneDeep(item);\n               newItem[linkedField.relationName()] = [rowData];\n               this.__dataCollection.add(newItem);\n            }\n         });\n\n         // trigger to components to know there are updated data.\n         this.emit(\"warnRefresh\");\n      }\n   }\n\n   // Clone\n\n   clone(settings) {\n      settings = settings || this.toObj();\n      var clonedDatacollection = new this.constructor(settings, this.AB);\n      clonedDatacollection.__datasource = this.__datasource;\n      clonedDatacollection._dataStatus = this._dataStatus;\n\n      // clonedDatacollection.__dataCollection = this.__dataCollection.copy();\n      clonedDatacollection.__filterDatacollection.setValue(\n         settings.settings.objectWorkspace.filterConditions\n      );\n\n      var parseMe = () => {\n         if (clonedDatacollection.__dataCollection) {\n            clonedDatacollection.__dataCollection.parse(\n               this.__dataCollection\n                  .find({})\n                  .filter((row) =>\n                     clonedDatacollection.__filterDatacollection.isValid(row)\n                  )\n            );\n         }\n         if (clonedDatacollection.__treeCollection) {\n            clonedDatacollection.__treeCollection.parse(\n               this.__treeCollection\n                  .find({})\n                  .filter((row) =>\n                     clonedDatacollection.__filterDatacollection.isValid(row)\n                  )\n            );\n         }\n      };\n\n      parseMe();\n\n      // return new Promise((resolve, reject) => {\n      //    // load the data\n      //    clonedDatacollection\n      //       .loadData()\n      //       .then(() => {\n\n      // set the cursor\n      clonedDatacollection.setStaticCursor();\n\n      var cursorID = this.getCursor();\n      if (cursorID) {\n         // NOTE: webix documentation issue: .getCursor() is supposed to return\n         // the .id of the item.  However it seems to be returning the {obj}\n         if (cursorID.id) cursorID = cursorID.id;\n\n         clonedDatacollection.setCursor(cursorID);\n      }\n\n      return clonedDatacollection;\n\n      // resolve(clonedDatacollection);\n      //       })\n      //       .catch(reject);\n      // });\n   }\n\n   filteredClone(filters) {\n      var obj = this.toObj();\n\n      // check to see that filters are set (this is sometimes helpful to select the first record without doing so at the data collection level)\n      if (filters?.rules?.length) {\n         if (obj.settings.objectWorkspace.filterConditions?.rules?.length) {\n            obj.settings.objectWorkspace.filterConditions.rules =\n               obj.settings.objectWorkspace.filterConditions.rules.concat(\n                  filters.rules\n               );\n         } else {\n            obj.settings.objectWorkspace.filterConditions = filters;\n         }\n      }\n      let clonedDC = this.clone(obj);\n      return clonedDC; // new ABViewDataCollection(settings, this.application, this.parent);\n   }\n\n   //\n   // Event handles\n   //\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    *              emitter: object,\n    *              eventName: string,\n    *              listener: function\n    *            }\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      this.__events = this.__events || [];\n\n      let exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    */\n   eventClear() {\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   /**\n    * @method eventRemove()\n    * unsubscribe a event.\n    *\n    * @param {string} eventName - Name of the event\n    * @param {object} emitter - Emitter object\n    */\n   eventRemove(eventName, emitter = null) {\n      if (this.__events?.length > 0 && eventName) {\n         this.__events.forEach((e) => {\n            if (eventName == e.eventName && (!emitter || emitter == e.emitter))\n               e.emitter.removeListener(e.eventName, e.listener);\n         });\n\n         this.__events = this.__events.filter((e) => e.eventName != eventName);\n      }\n   }\n\n   get userScopes() {\n      return [];\n   }\n\n   get isCursorFollow() {\n      return (\n         this.settings.followDatacollectionID &&\n         (!this.settings.linkDatacollectionID || !this.settings.linkFieldID)\n      );\n   }\n\n   get datacollectionFollow() {\n      if (!this.isCursorFollow) return null;\n\n      return (this.AB ?? AB).datacollectionByID(\n         this.settings.followDatacollectionID\n      );\n   }\n\n   get previousCursorId() {\n      return this.__previousCursorId;\n   }\n\n   waitReady() {\n      // if (this.dataStatus == this.dataStatusFlag.initialized) {\n      //    return Promise.resolve();\n      // }\n      // console.log(`DC[${this.label}] waiting for initializedData.`);\n      // return new Promise((resolve /*, reject */) => {\n      //    this.once(\"initializedData\", ()=>{\n      //       resolve();\n      //    })\n\n      // })\n\n      return this.waitForDataCollectionToInitialize(this);\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nmodule.exports = class ABDefinitionCore {\n   constructor(attributes, AB) {\n      this.AB = AB;\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n\t\t{\n\t\t\tid: uuid(),\n\t\t\tname: 'name',\n\t\t\ttype: 'xxxxx',\n\t\t\tjson: \"{json}\"\n\t\t}\n\t\t*/\n      if (attributes.id) {\n         this.id = attributes.id;\n      }\n      this.name =\n         attributes?.name ||\n         attributes?.json?.name ||\n         attributes?.json?.label ||\n         attributes?.json?.translations?.[0]?.label ||\n         \"\";\n      if (!this.name) {\n         this.AB.notify.builder(\n            new Error(\"Attributes for definition had no 'name'\"),\n            {\n               context: \"ABDefinitionCore.fromValues()\",\n               attributes,\n            }\n         );\n      }\n      this.type = attributes.type || attributes?.json?.type || \"\";\n      this.json = attributes.json || null;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      return {\n         id: this.id,\n         name: this.name,\n         type: this.type,\n         json: this.json,\n      };\n   }\n\n   /**\n    * @method destroy()\n    * destroy the current instance of ABDefinition\n    * Also remove it from our parent application\n    * @return {Promise}\n    */\n   destroy() {\n      return this.AB.definitionDestroy(this.id);\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABObject with it's parent ABApplication\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   async save() {\n      if (this.id) {\n         return this.AB.definitionUpdate(this.id, this.toObj());\n      } else {\n         return this.AB.definitionCreate(this.toObj());\n      }\n   }\n};\n","/*\n * ABFactoryCore\n * an object that contains the definitions and references for a single tenant.\n * It is expected that an instance of this should be returned from an\n * ABBootstrap.init(req).then((AB)=>{}) call.\n */\n\n// const _ = require(\"lodash\");\n// const uuidv4 = require(\"uuid\");\n\nconst ABApplication = require(\"../platform/ABApplication\");\nconst ABApplicationMobile = require(\"../platform/ABApplicationMobile\");\nconst ABDefinition = require(\"../platform/ABDefinition\");\n\nconst ABComponent = require(\"../platform/ABComponent\");\n\nconst ABFieldManager = require(\"./ABFieldManager\");\n\nconst ABIndex = require(\"../platform/ABIndex\");\nconst ABObject = require(\"../platform/ABObject\");\nconst ABObjectExternal = require(\"../platform/ABObjectExternal\");\nconst ABObjectImport = require(\"../platform/ABObjectImport\");\nconst ABObjectApi = require(\"../platform/ABObjectApi\");\nconst ABObjectApiNetsuite = require(\"../platform/ABObjectApiNetsuite\");\nconst ABDataCollection = require(\"../platform/ABDataCollection\");\nconst ABObjectQuery = require(\"../platform/ABObjectQuery\");\n\nconst ABHint = require(\"../platform/ABHint\");\nconst ABProcess = require(\"../platform/ABProcess\");\n\nconst ABProcessParticipant = require(\"../platform/process/ABProcessParticipant\");\nconst ABProcessLane = require(\"../platform/process/ABProcessLane\");\nconst ABProcessTaskManager = require(\"./process/ABProcessTaskManager\");\n\nconst ABStep = require(\"../platform/ABStep\");\n\nconst ABViewDetailItem = require(\"../platform/views/ABViewDetailItem\");\nconst ABViewFormItem = require(\"../platform/views/ABViewFormItem\");\nconst ABMobileViewFormItem = require(\"../platform/mobile/ABMobileViewFormItem\");\n\n// const ABObjectWorkspaceViewGrid = require(\"../platform/workspaceViews/ABObjectWorkspaceViewGrid\");\n// const ABObjectWorkspaceViewKanban = require(\"../platform/workspaceViews/ABObjectWorkspaceViewKanban\");\n// const ABObjectWorkspaceViewGantt = require(\"../platform/workspaceViews/ABObjectWorkspaceViewGantt\");\n\nconst RowFilter = require(\"../platform/RowFilter\");\nconst FilterComplex = require(\"../platform/FilterComplex\");\n\nconst ABMLClass = require(\"../platform/ABMLClass\");\n\nconst EventEmitter = require(\"../platform/ABEmitter\");\n\nclass ABFactory extends EventEmitter {\n   constructor(definitions) {\n      /**\n       * @param {hash} definitions\n       *        { ABDefinition.id : {ABDefinition} }\n       *        of all the definitions defined for the current Tenant\n       */\n\n      super();\n      this.setMaxListeners(0);\n\n      this._definitions = definitions || {};\n      // {hash}  { ABDefinition.id : {ABDefinition} }\n      // ensure ._definitions is a HASH{ ID : {ABDefinition}}\n      if (Array.isArray(definitions)) {\n         var hash = {};\n         definitions.forEach((d) => {\n            hash[d.id] = d;\n         });\n         this._definitions = hash;\n      }\n\n      //\n      //\n      // Manage our working objects\n      //\n\n      this._allApplications = [];\n      // {array} of all the ABApplication(s) in our site.\n\n      this._allObjects = [];\n      // {array} of all the ABObject(s) in our site.\n\n      this._allHints = [];\n      // {array} of all the ABHint(s) in our site.\n\n      this._allProcesses = [];\n      // {array} of all the ABProcess(s) in our site.\n\n      this._allQueries = [];\n      // {array} of all the ABObjectQuery(s) in our site.\n\n      this._allSteps = [];\n      // {array} of all the ABStep(s) in our site.\n\n      this._allDatacollections = [];\n      // {array} of all the ABDataCollection(s) in our site.\n\n      //\n      // Class References\n      //\n      this.Class = {\n         ABApplication,\n         ABComponent,\n         ABDefinition,\n         ABFieldManager,\n         ABIndex,\n         ABMLClass,\n         ABObject,\n         ABObjectExternal,\n         ABObjectImport,\n         ABObjectApi,\n         ABObjectApiNetsuite,\n         ABObjectQuery,\n         ABProcessParticipant,\n         // ABRole      // Do we need this anymore?\n\n         // ABObjectWorkspaceViewGrid,\n         // ABObjectWorkspaceViewKanban,\n         // ABObjectWorkspaceViewGantt,\n\n         ABProcessTaskManager,\n\n         ABViewDetailItem,\n         ABViewFormItem,\n         ABMobileViewFormItem,\n      };\n\n      //\n      // Rules\n      // These are a common set of \"rules\" for all platforms.\n      //\n      this.rules = {\n         /**\n          * @method AB.rules.isUUID\n          * evaluate a given value to see if it matches the format of a uuid\n          * @param {string} key\n          * @return {boolean}\n          */\n         isUUID: function (key) {\n            var checker = RegExp(\n               \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\",\n               \"i\"\n            );\n            return checker.test(key);\n         },\n\n         /**\n          * @method AB.rules.nameFilter()\n          * return a properly formatted name for an AppBuilder object.\n          * @param {string} name\n          *        The name of the object we are conditioning.\n          * @return {string}\n          */\n         nameFilter: function (name) {\n            return String(name).replace(/[^a-z0-9_.]/gi, \"\");\n         },\n\n         /**\n          * @method AB.rules.toApplicationNameFormat()\n          * return a properly formatted Application Name\n          * @param {string} name\n          *        The name of the Application we are conditioning.\n          * @return {string}\n          */\n         toApplicationNameFormat: function (name) {\n            return \"AB_\" + this.nameFilter(name);\n         },\n\n         /**\n          * @method AB.rules.toFieldRelationFormat()\n          * This function uses for define relation name of Knex Objection\n          * return a relation name of column\n          * @param {string} colName\n          *        The name of the Column\n          * @return {string}\n          */\n         toFieldRelationFormat: function (colName) {\n            return this.nameFilter(colName) + \"__relation\";\n         },\n\n         /**\n          * @method AB.rules.toJunctionTableFK()\n          * return foriegnkey (FK) column name for a junction table name\n          * @param {string} objectName\n          *        The name of the Object with a connection\n          * @param {string} columnName\n          *        The name of the connection columnName.\n          * @return {string}\n          */\n         toJunctionTableFK: function (objectName, columnName) {\n            var fkName = objectName + \"_\" + columnName;\n\n            if (fkName.length > 64) fkName = fkName.substring(0, 64);\n\n            return fkName;\n         },\n\n         /**\n          * @method AB.rules.toJunctionTableNameFormat()\n          * return many-to-many junction table name\n          * @param {string} appName\n          *        The name of the Application for this object\n          * @param {string} sourceTableName\n          *        The name of the source object we are conditioning.\n          * @param {string} targetTableName\n          *        The name of the target object we are conditioning.\n          * @param {string} colName\n          * @return {string}\n          */\n         toJunctionTableNameFormat: function (\n            appName,\n            sourceTableName,\n            targetTableName,\n            colName\n         ) {\n            // The maximum length of a table name in MySql is 64 characters\n            appName = this.toApplicationNameFormat(appName);\n            if (appName.length > 17) appName = appName.substring(0, 17);\n\n            if (sourceTableName.length > 15)\n               sourceTableName = sourceTableName.substring(0, 15);\n\n            if (targetTableName.length > 15)\n               targetTableName = targetTableName.substring(0, 15);\n\n            colName = this.nameFilter(colName);\n            if (colName.length > 14) colName = colName.substring(0, 14);\n\n            return \"{appName}_{sourceName}_{targetName}_{colName}\"\n               .replace(\"{appName}\", appName)\n               .replace(\"{sourceName}\", sourceTableName)\n               .replace(\"{targetName}\", targetTableName)\n               .replace(\"{colName}\", colName);\n         },\n\n         /**\n          * @method AB.rules.toObjectNameFormat\n          * return a properly formatted Object/Table Name\n          * @param {string} objectName\n          *        The {ABObject}.name of the Object we are conditioning.\n          * @return {string}\n          */\n         toObjectNameFormat: function (objectName) {\n            return `AB_${this.nameFilter(objectName)}`;\n         },\n      };\n\n      // Notify Helpers\n      this.notify.builder = (...params) => {\n         this.notify(\"builder\", ...params);\n      };\n\n      this.notify.developer = (...params) => {\n         this.notify(\"developer\", ...params);\n      };\n   }\n\n   /**\n    * @method definitionClean()\n    * make sure the provided ABDefinition values are properly formatted\n    * @param {ABDefinition} d\n    *        The json settings of an ABDefinition object.\n    */\n   definitionClean(d) {\n      if (typeof d.json == \"string\") {\n         try {\n            d.json = JSON.parse(d.json);\n         } catch (e) {\n            console.log(e);\n            console.error(` Error on definition id[${d.id}]`);\n         }\n      }\n   }\n\n   init() {\n      let allDefinitions = Object.keys(this._definitions).map(\n         (k) => this._definitions[k]\n      );\n      // {array} all our definitions in an Array format.\n\n      // make sure our definitions.json field is an {} and not string\n      allDefinitions.forEach((d) => {\n         this.definitionClean(d);\n      });\n\n      // perform these in order:\n      [\n         \"object\",\n         \"query\",\n         \"datacollection\",\n         \"process\",\n         \"hint\",\n         \"step\",\n         \"application\",\n      ].forEach((type) => {\n         var objTypes = allDefinitions.filter((d) => d.type == type);\n         objTypes.forEach((def) => {\n            let { keyList, keyFn } = this.objectKeysByDef(def);\n            if (keyList) {\n               this[keyList].push(this[keyFn](def.json));\n            }\n         });\n      });\n\n      this.emit(\"init.objects_ready\");\n      return Promise.resolve();\n   }\n\n   /**\n    * @method objectKeysByDef()\n    * Analyze the provided ABDefinition json and return which set of list and\n    * functions are used to create a new instance of this definition.\n    * @param {json} def\n    *        the ABDefinition json of the definition we are evaluating\n    * @return { keyList, keyFn }\n    *        keyList: {string}  which of our internal lists to store this new\n    *                 object.\n    *        keyFn: {string} which of our methods to call with the def.json\n    *               as the param that will create the new object.\n    *\n    *        ex:  this[keyList].push( this[keyFn](def.json));\n    *\n    *        if this def is not one of the types we track,\n    *        keyList = keyFn = null;\n    */\n   objectKeysByDef(def) {\n      switch (def.type) {\n         case \"application\":\n            return { keyList: \"_allApplications\", keyFn: \"applicationNew\" };\n\n         case \"datacollection\":\n            return {\n               keyList: \"_allDatacollections\",\n               keyFn: \"datacollectionNew\",\n            };\n\n         case \"hint\":\n            return { keyList: \"_allHints\", keyFn: \"hintNew\" };\n\n         case \"steps\":\n            return { keyList: \"_allSteps\", keyFn: \"stepNew\" };\n\n         case \"object\":\n            return { keyList: \"_allObjects\", keyFn: \"objectNew\" };\n\n         case \"process\":\n            return { keyList: \"_allProcesses\", keyFn: \"processNew\" };\n\n         case \"query\":\n            return { keyList: \"_allQueries\", keyFn: \"queryNew\" };\n\n         default:\n            // we don't manage any other\n            return { keyList: null, keyFn: null };\n      }\n   }\n\n   //\n   // Definitions\n   //\n\n   /**\n    * definitionByID(id)\n    * return an ABDefinition.json value ready for our objects to use.\n    * @param {string} id\n    *        the uuid of the ABDefinition to delete\n    * @param {bool} isRaw\n    *        indicates if we want the full ABDefinition, or the .json param\n    *        true : returns full ABDefinition value.\n    *        false: returns the .json parameter used by most ABObjects.\n    * @return {Promise}\n    */\n   definitionByID(id, isRaw = false) {\n      if (this._definitions[id]) {\n         if (isRaw) {\n            return this._definitions[id];\n         } else {\n            return this._definitions[id].json;\n         }\n      }\n      return null;\n   }\n\n   /**\n    * definitionNew(values)\n    * return an ABDefinition object tied to this Tenant.\n    * @param {obj} values\n    *        The value hash of the ABDefinition object to create.\n    * @return {ABDefinition}\n    */\n   definitionNew(values) {\n      return new ABDefinition(values, this);\n   }\n\n   /**\n    * definitionsParse()\n    * include the incoming definitions into our ABFactory. These new\n    * definitions will replace any existing ones with the same .id.\n    * @param {array[ABDefinitioin]} defs\n    *     the incoming array of ABDefinitions to parse.\n    * @return {Promise}\n    */\n   definitionsParse(defs = []) {\n      if (!Array.isArray(defs)) {\n         defs = [defs];\n      }\n\n      // store/replace the incoming definitions\n      // 1st: insert ALL our definitions internally\n      defs.forEach((d) => {\n         this.definitionClean(d);\n         this._definitions[d.id] = d;\n      });\n      // 2nd: Now we can then go through and signal the \"updates\"\n      // and the related objects can find their dependent definitions.\n      defs.forEach((d) => {\n         this.definitionSync(\"updated\", d.id, d);\n      });\n\n      return Promise.resolve();\n   }\n\n   /**\n    * definitionSync()\n    * Synchronize an individual definition into our repository of definitions.\n    * @param {string} op\n    *        the type of synchronization this is\n    *        [ \"created\", \"updated\", \"destroyed\"]\n    * @param {uuid} id\n    *        the definition.id of the definition we are synchronizing\n    * @param {json} def\n    *        the ABDefinition attributes we are storing.\n    */\n   definitionSync(op, id, def) {\n      var { keyList, keyFn } = this.objectKeysByDef(def);\n      if (keyList) {\n         var curr;\n         switch (op) {\n            case \"created\":\n               this[keyList].push(this[keyFn](def.json));\n               this.emit(\"definition.created\", def.json);\n               break;\n\n            case \"updated\":\n               // get the current object\n               curr = this[keyList].find((d) => d.id == id);\n\n               // remove from list\n               this[keyList] = this[keyList].filter((d) => d.id != id);\n               // add new one:\n               this[keyList].push(this[keyFn](def.json));\n\n               // signal this object needs to be updated:\n               // NOTE: if this is one of the objects we are tracking,\n               // we don't need to this.emit() the message.\n               if (curr) {\n                  curr.emit(\"definition.updated\", def.json);\n               } else {\n                  this.emit(\"definition.updated\", def.json);\n               }\n               break;\n\n            case \"destroyed\":\n               // get the current object\n               curr = this[keyList].find((d) => d.id == id);\n               if (curr) {\n                  // remove from list\n                  this[keyList] = this[keyList].filter((d) => d.id != id);\n\n                  // signal this object needs to be updated:\n                  curr.emit(\"definition.deleted\", def.json);\n\n                  this.emit(\"definition.deleted\", def.json);\n               }\n               break;\n         }\n      }\n   }\n\n   //\n   // ABObjects\n   //\n   /**\n    * @method applications()\n    * return all the ABApplications that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABApplications.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   applications(fn = () => true) {\n      return (this._allApplications || []).filter(fn);\n   }\n\n   /**\n    * @method applicationByID()\n    * returns a single ABApplication that matches the given ID.\n    * @param {string} ID\n    *        the .id/.name/.label of the ABApplication we are searching\n    *        for.\n    * @return {ABApplication}\n    *        the matching ABApplication object if found\n    *        {null} if not found.\n    */\n   applicationByID(ID) {\n      return this.applications((a) => a.id == ID)[0];\n   }\n\n   /**\n    * @method applicationNew()\n    * Return a new instance of an ABApplication object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABApplication object we are\n    *        creating.\n    * @return {ABApplication}\n    */\n   applicationNew(values) {\n      // just in case we got here by mistake:\n      if (values.appType == \"mobile\") {\n         return this.applicationMobileNew(values);\n      }\n\n      return new ABApplication(values, this);\n   }\n\n   /**\n    * @method applicationMobileNew()\n    * Return a new instance of an ABApplicationMobile object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABApplicationMobile object we are\n    *        creating.\n    * @return {ABApplicationMobile}\n    */\n   applicationMobileNew(values) {\n      return new ABApplicationMobile(values, this);\n   }\n\n   /**\n    * @method datacollections()\n    * return an array of all the ABDataCollection for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABDataCollection that\n    *        this fn returns true for.\n    * @return {array}\n    *        array of ABDataCollection\n    */\n   datacollections(filter = () => true) {\n      return (this._allDatacollections || []).filter(filter);\n   }\n\n   /**\n    * @method datacollectionByID()\n    * returns a single ABDatacollection that matches the given ID.\n    * @param {string} ID\n    *        the .id/.name/.label of the ABDatacollection we are searching\n    *        for.\n    * @return {ABDatacollection}\n    *        the matching ABDatacollection object if found\n    *        {null} if not found.\n    */\n   datacollectionByID(ID) {\n      // an undefined or null ID should not match any DC.\n      if (!ID) return null;\n\n      return this.datacollections((dc) => {\n         return dc.id == ID || dc.name == ID || dc.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method datacollectionNew()\n    * create a new instance of ABDataCollection\n    * @param {obj} values\n    *        the initial values for the DC\n    * @return {ABDatacollection}\n    */\n   datacollectionNew(values) {\n      var dc = new ABDataCollection(values, this);\n      dc.on(\"destroyed\", () => {\n         // make sure it is no longer in our internal list\n         this._allDatacollections = this._allDatacollections.filter(\n            (d) => d.id != dc.id\n         );\n      });\n      return dc;\n   }\n\n   /**\n    * @method fieldNew()\n    * return an instance of a new (unsaved) ABField that is tied to a given\n    * ABObject.\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    * @param {obj} values  the initial values for this field.\n    *                - { key:'{string}'} is required\n    * @param {ABObject} object  the parent object this field belongs to.\n    * @return {ABField}\n    */\n   fieldNew(values, object) {\n      // NOTE: ABFieldManager returns the proper ABFieldXXXX instance.\n      return ABFieldManager.newField(values, object);\n   }\n\n   /**\n    * @method indexNew()\n    * return an instance of a new (unsaved) ABIndex.\n    * @return {ABIndex}\n    */\n   indexNew(values, object) {\n      return new ABIndex(values, object);\n   }\n\n   /**\n    * @method Label()\n    * a simple label factory.\n    * It is expected to be called like this:\n    * @codestart\n    *    var L = AB.Label();\n    *    var outputText = L(\"Hello World\");\n    *    var o2 = L(\"I'm {0} years old\", [5]);\n    * @codeend\n    * @return {fn}\n    */\n   Label() {\n      return (key, altText, values = []) => {\n         var label = key;\n         if (altText) {\n            if (Array.isArray(altText)) {\n               values = altText;\n            } else {\n               label = altText;\n            }\n         }\n\n         values.forEach((v, i) => {\n            var sub = `{${i}}`;\n            label = label.replaceAll(sub, v);\n         });\n\n         return label;\n      };\n   }\n\n   /**\n    * @method objects()\n    * return an array of all the ABObjects for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABObjects that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of ABObject\n    */\n   objects(filter = () => true) {\n      return (this._allObjects || []).filter(filter);\n   }\n\n   /**\n    * @method objectByID()\n    * return the specific object requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   objectByID(ID) {\n      return this.objects((o) => {\n         return o.id == ID || o.name == ID || o.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method objectNew()\n    * return an instance of a new (unsaved) ABObject that is tied to this\n    * ABApplication.\n    * NOTE: this new object is not included in our this.objects until a .save()\n    * is performed on the object.\n    * @return {ABObject}\n    */\n   objectNew(values) {\n      var newObj = null;\n\n      if (values.isExternal == true)\n         newObj = new ABObjectExternal(values, this);\n      else if (values.isImported == true)\n         newObj = new ABObjectImport(values, this);\n      else if (values.isNetsuite == true)\n         newObj = new ABObjectApiNetsuite(values, this);\n      else if (values.isAPI == true) newObj = new ABObjectApi(values, this);\n      else newObj = new ABObject(values, this);\n\n      /*\n      // IS THIS CORRECT?\n      newObj.on(\"destroyed\", () => {\n         // make sure it is no longer in our internal list\n         this._allObjects = this._allObjects.filter((o) => o.id != newObj.id);\n      });\n      */\n\n      return newObj;\n   }\n\n   objectFile() {\n      return this.objectByID(\"4a9d89c9-f4eb-41af-91e4-909eff389f3e\");\n   }\n\n   objectLanguage() {\n      return this.objectByID(\"d84cd351-d96c-490f-9afb-2a0b880ca0ec\");\n   }\n\n   objectProcessDefinition() {\n      return this.objectByID(\"af91fc75-fb73-4d71-af14-e22832eb5915\");\n   }\n\n   objectProcessForm() {\n      return this.objectByID(\"d36ae4c8-edef-48d8-bd9c-79a0edcaa067\");\n   }\n\n   objectProcessInstance() {\n      return this.objectByID(\"2ba85be0-78db-4eda-ba43-c2c4e3831849\");\n   }\n\n   objectRole() {\n      return this.objectByID(\"c33692f3-26b7-4af3-a02e-139fb519296d\");\n   }\n\n   objectScope() {\n      return this.objectByID(\"af10e37c-9b3a-4dc6-a52a-85d52320b659\");\n   }\n\n   objectToken() {\n      return this.objectByID(\"08826ac7-4b33-4745-a3d7-f7831ca4ff59\");\n   }\n\n   objectUser() {\n      return this.objectByID(\"228e3d91-5e42-49ec-b37c-59323ae433a1\");\n   }\n\n   objectKey() {\n      return this.objectByID(\"d734fe8c-b615-446c-8a5f-793ddece19f9\");\n   }\n\n   objectSecret() {\n      return this.objectByID(\"db5b3b26-5300-4c92-bc73-8ce4f4696992\");\n   }\n\n   //\n   // Hints\n   //\n   /**\n    * @method hints()\n    * return all the ABHints that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABHints.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   hints(filter = () => true) {\n      return (this._allHints || []).filter(filter);\n   }\n\n   /**\n    * @method hintByID()\n    * return the specific hint requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   hintID(ID) {\n      return this.hints((h) => {\n         return h.id == ID || h.name == ID || h.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method hintNew()\n    * return an instance of a new (unsaved) ABHint that is tied to this\n    * ABApplication.\n    * NOTE: this new hint is not included in our this.hints until a .save()\n    * is performed on the object.\n    * @return {ABHint}\n    */\n   hintNew(values) {\n      var newHint = new ABHint(values, this);\n\n      return newHint;\n   }\n\n   //\n   // Steps\n   //\n   /**\n    * @method steps()\n    * return all the ABSteps that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABSteps.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   steps(filter = () => true) {\n      return (this._allSteps || []).filter(filter);\n   }\n\n   /**\n    * @method stepByID()\n    * return the specific step requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   stepID(ID) {\n      return this.steps((s) => {\n         return s.id == ID || s.name == ID || s.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method stepNew()\n    * return an instance of a new (unsaved) ABStep that is tied to this\n    * ABApplication.\n    * NOTE: this new step is not included in our this.steps until a .save()\n    * is performed on the object.\n    * @return {ABHint}\n    */\n   stepNew(id, hintID) {\n      var stepDef = this.definitionByID(id);\n      if (stepDef) {\n         var getStep = new ABStep(stepDef, this);\n         return getStep;\n      } else {\n         var params = {\n            settings: {\n               hint: hintID,\n            },\n         };\n         var newStep = new ABStep(params, this);\n         return newStep;\n      }\n      // return null;\n   }\n\n   //\n   // Processes\n   //\n   /**\n    * @method processes()\n    * return all the ABProcess that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABProcess.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   processes(filter = () => true) {\n      return (this._allProcesses || []).filter(filter);\n   }\n\n   /**\n    * @method processByID()\n    * return the specific process requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   processByID(ID) {\n      return this.processes((p) => {\n         return p.id == ID || p.name == ID || p.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method processNew()\n    * Return a new instance of an ABProcess object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABProcess object we are\n    *        creating.\n    * @return {ABProcess}\n    */\n   processNew(values) {\n      return new ABProcess(values, this);\n   }\n\n   /**\n    * @method processElementNew(id)\n    * return an instance of a new ABProcessOBJ that is tied to a given\n    * ABProcess.\n    * @param {string} id\n    *        the ABDefinition.id of the element we are creating\n    * @param {ABProcess} process\n    *        the process this task is a part of.\n    * @return {ABProcessTask}\n    */\n   processElementNew(id, process) {\n      var taskDef = this.definitionByID(id);\n      if (taskDef) {\n         switch (taskDef.type) {\n            case ABProcessParticipant.defaults().type:\n               return new ABProcessParticipant(taskDef, process, this);\n            // break;\n\n            case ABProcessLane.defaults().type:\n               return new ABProcessLane(taskDef, process, this);\n            // break;\n\n            default:\n               // default to a Task\n               return ABProcessTaskManager.newTask(taskDef, process, this);\n            // break;\n         }\n      }\n      return null;\n   }\n\n   /**\n    * @method processElementNewForModelDefinition(def)\n    *\n    * return an instance of a new ABProcess[OBJ] that is tied to the given\n    * BPMI:Element definition.\n    *\n    * @param {BPMI:Element} element the element definition from our BPMI\n    *              modler.\n    * @return {ABProcess[OBJ]}\n    */\n   processElementNewForModelDefinition(element, process) {\n      var newElement = null;\n\n      switch (element.type) {\n         case \"bpmn:Participant\":\n            newElement = new ABProcessParticipant({}, process, this);\n            break;\n\n         case \"bpmn:Lane\":\n            newElement = new ABProcessLane({}, process, this);\n            break;\n\n         default:\n            var defaultDef = ABProcessTaskManager.definitionForElement(element);\n            if (defaultDef) {\n               newElement = ABProcessTaskManager.newTask(\n                  defaultDef,\n                  process,\n                  this\n               );\n            }\n            break;\n      }\n\n      // now make sure this new Obj pulls any relevant info from the\n      // diagram element\n      if (newElement) {\n         newElement.fromElement(element);\n      }\n      return newElement;\n   }\n\n   /**\n    * @method queries()\n    * return an array of all the ABObjectQuery(s).\n    * @param {fn} filter\n    *        a filter fn to return a set of ABObjectQuery(s) that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of ABObjectQuery\n    */\n   queries(filter = () => true) {\n      return (this._allQueries || []).filter(filter);\n   }\n   // queriesAll() {\n   //    console.error(\n   //       \"ABFactory.queriesAll() Depreciated! Use .queries() instead. \"\n   //    );\n   //    return this.queries();\n   // }\n\n   /**\n    * @method queryByID()\n    * return the specific query requested by the provided id.\n    * NOTE: this method has been extended to allow .name and .label\n    * as possible lookup values.\n    * @param {string} ID\n    * @return {ABObjectQuery}\n    */\n   queryByID(ID) {\n      return this.queries((q) => {\n         return q.id == ID || q.name == ID || q.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method queryNew()\n    * return an instance of a new (unsaved) ABObjectQuery that is tied to this\n    * ABFactory.\n    * @return {ABObjectQuery}\n    */\n   queryNew(values) {\n      return new ABObjectQuery(values, this);\n   }\n\n   /**\n    * @method rowfilterNew()\n    * return an instance of a new RowFilter that is tied to this\n    * ABFactory.\n    * @return {RowFilter}\n    */\n   rowfilterNew(App, idBase) {\n      if (App) {\n         console.error(\"!! Who is calling this with an App?\");\n      }\n      return new RowFilter(App || this._App, idBase, this);\n   }\n\n   /**\n    * @method filterComplexNew()\n    * return an instance of a new FilterComplex that is tied to this\n    * ABFactory.\n    * @return {FilterComplex}\n    */\n   filterComplexNew(idBase, options = {}) {\n      return new FilterComplex(idBase, this, options);\n   }\n\n   /**\n    * @method viewNewDetatched()\n    * Return an instance of a View that is NOT attached to an ABApplication.\n    * @return {ABViewXXX}\n    */\n   viewNewDetatched(values) {\n      if (!this._mockApp) {\n         this._mockApp = this.applicationNew({});\n      }\n      return this._mockApp.viewNew(values, this._mockApp);\n   }\n\n   //\n   // Utilities\n   //\n\n   /**\n    * notify()\n    * will send alerts to a group of people. These alerts are usually about\n    * configuration errors, or software problems.\n    * @param {string} domain\n    *     which group of people we are sending a notification to.\n    * @param {Error} error\n    *     An error object generated at the point of issue.\n    * @param {json} info\n    *     Additional related information concerning the issue.\n    */\n   notify(/* ...params */) {\n      console.error(\n         \"ABFactory.notify() is expected to be overwritten by the platform!\"\n      );\n   }\n\n   /**\n    * notifyInfo()\n    * a common routine to parse the info parameter provided to .notify() into\n    * a more detailed set of data.\n    * @param {json} info\n    * @return {json}\n    */\n   _notifyInfo(info) {\n      var moreInfo = {};\n\n      if (info) {\n         Object.keys(info).forEach((k) => {\n            switch (k) {\n               case \"field\":\n                  moreInfo.objectID = info[k].object?.id;\n                  moreInfo.objectName = info[k].object?.name;\n                  moreInfo.fieldID = info[k].id;\n                  moreInfo.fieldName = info[k].label || info[k].name;\n                  break;\n\n               case \"object\":\n                  moreInfo.objectID = info[k].id;\n                  moreInfo.objectName = info[k].name;\n                  break;\n\n               case \"datacollection\":\n                  moreInfo.datacollectionID = info[k].id;\n                  moreInfo.datacollectionName = info[k].label || info[k].name;\n                  var ds = info[k].datasource;\n                  if (ds) {\n                     moreInfo.datacollectionDSID = ds.id;\n                     moreInfo.datacollectionDSName = ds.name;\n                  }\n                  break;\n\n               case \"process\":\n                  moreInfo.processID = info[k].id;\n                  moreInfo.processName = info[k].label || info[k].name;\n                  break;\n\n               case \"req\":\n                  moreInfo.req = {\n                     jobID: info[k].jobID,\n                     tenantID: info[k]._tenantID,\n                     user: info[k]._user,\n                  };\n                  break;\n\n               case \"task\":\n                  if (info[k].process) {\n                     moreInfo.processID = info[k].process.id;\n                     moreInfo.processName =\n                        info[k].process.label || info[k].process.name;\n                  }\n                  moreInfo.taskID = info[k].id;\n                  moreInfo.taskName = info[k].label || info[k].name;\n                  break;\n\n               case \"view\":\n                  if (info[k].application) {\n                     moreInfo.applicationID = info[k].application.id;\n                     moreInfo.applicationName =\n                        info[k].application.label || info[k].application.name;\n                  }\n                  moreInfo.viewID = info[k].id;\n                  moreInfo.viewName = info[k].label || info[k].name;\n                  moreInfo.viewKey = info[k].key;\n                  break;\n               default:\n                  moreInfo[k] = info[k];\n                  break;\n            }\n         });\n      }\n\n      return moreInfo;\n   }\n}\n\nmodule.exports = ABFactory;\n","/*\n * ABFieldManager\n *\n * An interface for managing the different ABFields available in our AppBuilder.\n *\n */\n\n/*\n * Fields\n * A name => ABField  hash of the different ABFields available.\n */\nvar Fields = {};\n\nvar AllFieldClasses = [\n   require(\"../platform/dataFields/ABFieldString\"),\n   require(\"../platform/dataFields/ABFieldLongText\"),\n   require(\"../platform/dataFields/ABFieldNumber\"),\n   require(\"../platform/dataFields/ABFieldDate\"),\n   require(\"../platform/dataFields/ABFieldDateTime\"),\n   require(\"../platform/dataFields/ABFieldBoolean\"),\n   require(\"../platform/dataFields/ABFieldList\"),\n   require(\"../platform/dataFields/ABFieldTree\"),\n   require(\"../platform/dataFields/ABFieldEmail\"),\n   require(\"../platform/dataFields/ABFieldFile\"),\n   require(\"../platform/dataFields/ABFieldImage\"),\n   require(\"../platform/dataFields/ABFieldUser\"),\n   require(\"../platform/dataFields/ABFieldConnect\"),\n   require(\"../platform/dataFields/ABFieldCalculate\"),\n   require(\"../platform/dataFields/ABFieldTextFormula\"),\n   require(\"../platform/dataFields/ABFieldFormula\"),\n   require(\"../platform/dataFields/ABFieldAutoIndex\"),\n   require(\"../platform/dataFields/ABFieldJson\"),\n   require(\"../platform/dataFields/ABFieldCombine\"),\n   require(\"../platform/dataFields/ABFieldSelectivity\"),\n];\n\nAllFieldClasses.forEach((FIELD) => {\n   Fields[FIELD.defaults().key] = FIELD;\n});\n\nmodule.exports = class ABFieldManager {\n   /*\n    * @function allFields\n    * return all the currently defined ABFields in an array.\n    * @return [{ABField},...]\n    */\n   static allFields() {\n      var fields = [];\n      for (var f in Fields) {\n         fields.push(Fields[f]);\n      }\n      return fields;\n   }\n\n   /**\n    * @function fieldByKey()\n    * Return a specific ABField that matches the given key\n    * @param {string} key\n    *        The ABField.key value we are looking for.\n    * @return {ABFieldXXX || undefined}\n    */\n   static fieldByKey(key) {\n      return Fields[key];\n   }\n\n   /*\n    * @function newField\n    * return an instance of an ABField based upon the values.key value.\n    * @return {ABField}\n    */\n   static newField(values, object) {\n      if (values.key) {\n         try {\n            return new Fields[values.key](values, object);\n         } catch (err) {\n            console.log(\"Error\", err);\n            console.log(\"Available fields\", Fields);\n            console.log(\"Requested field\", values.key);\n         }\n      } else {\n         console.log(\"-------\");\n         console.log(\"values:\");\n         console.error(values);\n         console.log();\n         console.error(\"object:\");\n         console.error(object);\n         console.log(\"-------\");\n         throw new Error(\n            `ABFieldManager.newField(): Unknown Field Key [${values.name}][${values.key}] for object[${object.name}]`\n         );\n         //// TODO: what to do here?\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nmodule.exports = class ABHintCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"name\", \"description\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      // this.elements().forEach((e) => {\n      //    e.onProcessReady();\n      // });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      description: 'description',\n      type: 'hint',\n      settings: {\n         active: {boolean},\n         view: uuid\n      }\n    }\n    */\n\n      let active = attributes?.settings?.active ?? \"1\";\n\n      this.id = attributes?.id || \"\";\n      this.name = attributes?.name || \"New Tutorial\";\n      this.description = attributes?.description || \"\";\n      this.type = attributes?.type || \"hint\";\n      this.settings = {};\n      this.settings.active = active;\n      this.settings.transition = attributes?.settings?.transition;\n      this.settings.showIntroStep = attributes?.settings?.showIntroStep;\n      this.settings.view = attributes?.settings?.view || \"\";\n      this.stepIDs = attributes?.stepIDs || [];\n\n      let currSteps = this?._steps || {};\n      this._steps = {};\n      (attributes?.stepIDs || []).forEach((sID) => {\n         if (!sID) return;\n         var ele = this.AB.stepNew(sID, this.id);\n         if (ele) {\n            this._steps[sID] = ele;\n         }\n      });\n      if (attributes) super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"type\", \"settings\", \"stepIDs\", \"id\", \"name\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   /**\n    * steps()\n    * return an array of steps that match the given filter (or all steps\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABStep]}\n    */\n   steps(fn = () => true) {\n      var allSteps = Object.keys(this._steps).map((e) => {\n         return this._steps[e];\n      });\n      return allSteps.filter(fn);\n   }\n\n   /**\n    * stepAdd()\n    * insert a step to be added to this hint.\n    * @param {ABStep} element\n    *        the full instance of an ABStep to track.\n    */\n   stepAdd(step) {\n      this._steps[step.id] = step;\n   }\n\n   /**\n    * stepByID()\n    * return the {ABStep} that has the given .id\n    * @param {string} id\n    * @return {ABStep[OBJ]}\n    */\n   stepByID(id) {\n      return this._steps[id] ?? null;\n   }\n\n   /**\n    * stepRemove()\n    * remove a step from being displayed by this hint.\n    * @param {id} ABStep ID\n    *        an ID of a step\n    *        to remove.\n    */\n   stepRemove(id) {\n      // remove from stepIDs array\n      let stepIndex = this.stepIDs.indexOf(id);\n      if (stepIndex > -1) {\n         this.stepIDs.splice(stepIndex, 1);\n      }\n      // remove from _steps definitions\n      delete this._steps[id];\n   }\n};\n","const ABMLClass = require(\"../platform/ABMLClass\");\n\nmodule.exports = class ABIndexCore extends ABMLClass {\n   constructor(attributes, object) {\n      super([\"label\"], object.AB);\n      this.object = object;\n\n      this.fromValues(attributes);\n   }\n\n   fromValues(attributes) {\n      /*\n      {\n        id: uuid(),\n        name: 'name',\n        fields:[\n            {ABDataField.id}\n        ],\n        unique: {boolean}\n      }\n      */\n      this.id = attributes.id;\n      this.type = \"index\";\n      this.name = attributes.name;\n      this.unique = JSON.parse(attributes.unique || false);\n\n      // Convert to an array\n      if (attributes.fieldIDs && !Array.isArray(attributes.fieldIDs)) {\n         attributes.fieldIDs = [attributes.fieldIDs];\n      }\n\n      this._unknownFieldIDs = [];\n      this.fields = (attributes.fieldIDs || [])\n         .map((f) => {\n            let field = this.object.fieldByID(f);\n            if (!field) {\n               this._unknownFieldIDs.push(f);\n               let err = new Error(\n                  `Index[${this.name}][${this.id}] is referencing an unknown field[${f}]`\n               );\n               this.AB.notify.developer(err, {\n                  index: this.id,\n                  field: f,\n               });\n            }\n            return field;\n         })\n         .filter((fId) => fId);\n\n      if (this.fields.length == 0) {\n         let err = new Error(\n            `Index[${this.name}][${this.id}] is not referencing any fields`\n         );\n         this.AB.notify.developer(err, {\n            index: this.id,\n            attributeFieldIDs: attributes.fieldIDs || [],\n         });\n      }\n\n      // let the MLClass process the Translations\n      super.fromValues(attributes);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      let result = super.toObj();\n\n      result.id = this.id;\n      result.type = \"index\";\n      result.name = this.name;\n      result.unique = this.unique;\n\n      // Convert to an array\n      if (this.fields && !Array.isArray(this.fields)) {\n         this.fields = [this.fields];\n      }\n\n      result.fieldIDs = (this.fields || [])\n         .map((f) => {\n            // Convert to the id of field\n            return f.id || f;\n         })\n         .filter((fId) => fId);\n\n      // carry along the unknown Field IDs so a\n      // developer/builder can come along and trace\n      // what happened.\n      this._unknownFieldIDs.forEach((f) => {\n         result.fieldIDs.push(f);\n      });\n\n      return result;\n   }\n\n   get indexName() {\n      let tableName = this.object.dbTableName();\n\n      // Maximum 64 characters long\n      return `${tableName}_${this.name}`.replace(/ /g, \"\").substring(0, 64);\n   }\n\n   get uniqueName() {\n      let indexName = this.indexName.substring(0, 57);\n\n      return `${indexName}_unique`;\n   }\n};\n","/**\n * ABMLClassCore\n * manage the multilingual information of an instance of a AB Defined Class.\n *\n * these classes have certain fields (\"label\", \"description\"), that can be\n * represented in different language options as defined by our platform.\n *\n * This core ABMLClass will internally track the multilingual fields\n * (this.mlFields) and auto\n */\nvar ABEmitter = require(\"../platform/ABEmitter\");\nmodule.exports = class ABMLClassCore extends ABEmitter {\n   constructor(fieldList, AB) {\n      super();\n      this.mlFields = fieldList || [\"label\"];\n      // {array}\n      // field names of values that are multilingual\n\n      this.AB = AB;\n      // {ABFactory}\n      // our common source of references for other AB objects\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   /**\n    * @method fromValues\n    * called during the .fromValues() work chain.  Should be called\n    * AFTER all the current data is already populated.\n    */\n   fromValues(attributes) {\n      this.translations = attributes.translations;\n\n      // if translations were provided\n      if (this.translations) {\n         // multilingual fields: label, description\n         this.translate();\n      } else {\n         // maybe this came from a form that has ML values in the attributes, but\n         // no .translations[] yet:\n         // check for mlFields in attributes and record them here:\n         (this.mlFields || []).forEach((field) => {\n            if (attributes[field]) {\n               this[field] = attributes[field];\n            }\n         });\n      }\n   }\n\n   /**\n    * @function defaultTranslations()\n    * return an initial .translations entry to initialize the\n    * translations values of a given translateable object.\n    * @param {array} fields  the multilingual fields this obj manages.\n    * @param {json}  values  a default set of values for this object.\n    * @return {array}  of translation entries.\n    */\n   defaultTranslations(fields, values) {\n      values = values || {};\n\n      var entry = {\n         // Question: should this be this.AB.Multilingual.currentLanguage() || \"en\"\n         // currently since the defaults are sent in programattically, we are\n         // expecting the labels to be in \"en\"\n         language_code: \"en\",\n      };\n\n      fields.forEach((f) => {\n         entry[f] = values[f] || f;\n      });\n\n      return [entry];\n   }\n\n   /**\n    * @method languageDefault\n    * return a default language code.\n    * @return {string}\n    */\n   languageDefault() {\n      return \"en\";\n   }\n\n   /**\n    * @method toObj()\n    * called during the .toObj() work chain.  Should be called\n    * BEFORE the current data is populated.\n    */\n   toObj() {\n      this.unTranslate();\n\n      return {\n         translations: this.translations,\n      };\n   }\n\n   /**\n    * @method toDefinition()\n    * convert this instance into an ABDefinition object.\n    * @return {ABDefinition}\n    */\n   toDefinition() {\n      return this.AB.definitionNew({\n         id: this.id,\n         name: this.name,\n         type: this.type,\n         json: this.toObj(),\n      });\n   }\n\n   /**\n    * @method translate\n    * Given a set of json data, pull out any multilingual translations\n    * and flatten those values to the base object.\n    * @param {obj} obj  The instance of the object being translated\n    * @param {json} json The json data being used for translation.\n    *                      There should be json.translations = [ {transEntry}, ...]\n    *                      where transEntry = {\n    *                          language_code:'en',\n    *                          field1:'value',\n    *                          ...\n    *                      }\n    * @param {array} fields an Array of multilingual fields to pull to\n    *                       the obj[field] value.\n    */\n   translate(obj, json, fields, languageCode = null) {\n      if (!obj) obj = this;\n      if (!json) json = this;\n      if (!fields) fields = this.mlFields || [];\n\n      if (!json.translations) {\n         json.translations = [];\n      }\n\n      if (typeof json.translations == \"string\") {\n         json.translations = JSON.parse(json.translations);\n      }\n\n      var currLanguage = languageCode || this.languageDefault();\n\n      if (fields && fields.length > 0) {\n         // [fix] if no matching translation is in our json.translations\n         //       object, then just use the 1st one.\n         var first = null; // the first translation entry encountered\n         var found = false; // did we find a matching translation?\n\n         json.translations.forEach(function (t) {\n            if (!first) first = t;\n\n            // find the translation for the current language code\n            if (t.language_code == currLanguage) {\n               found = true;\n\n               // copy each field to the root object\n               fields.forEach(function (f) {\n                  if (t[f] != null) obj[f] = t[f];\n\n                  obj[f] = t[f] || \"\"; // default to '' if not found.\n               });\n            }\n         });\n\n         // if !found, then use the 1st entry we did find.  prepend desired\n         // [language_code] to each of the fields.\n         if (!found && first) {\n            // copy each field to the root object\n            fields.forEach(function (f) {\n               if (first[f] != null && first[f] != \"\")\n                  obj[f] = `[${currLanguage}]${first[f]}`;\n               else obj[f] = \"\"; // default to '' if not found.\n            });\n         }\n      }\n   }\n\n   /**\n    * @method unTranslate\n    * Take the multilingual information in the base obj, and push that\n    * down into the json.translations data.\n    * @param {obj} obj  The instance of the object with the translation\n    * @param {json} json The json data being used for translation.\n    *                      There should be json.translations = [ {transEntry}, ...]\n    *                      where transEntry = {\n    *                          language_code:'en',\n    *                          field1:'value',\n    *                          ...\n    *                      }\n    * @param {array} fields an Array of multilingual fields to pull from\n    *                       the obj[field] value.\n    */\n   unTranslate(obj, json, fields) {\n      if (!obj) obj = this;\n      if (!json) json = this;\n      if (!fields) fields = this.mlFields || [];\n\n      if (!json.translations) {\n         json.translations = [];\n      }\n\n      var currLanguage = this.languageDefault();\n\n      if (fields && fields.length > 0) {\n         var foundOne = false;\n\n         json.translations.forEach(function (t) {\n            // find the translation for the current language code\n            if (t.language_code == currLanguage) {\n               // copy each field to the root object\n               fields.forEach(function (f) {\n                  // verify obj[f] is defined\n                  // --> DONT erase the existing translation\n                  if (obj[f] != null) {\n                     t[f] = obj[f];\n                  }\n               });\n\n               foundOne = true;\n            }\n         });\n\n         // if we didn't update an existing translation\n         if (!foundOne) {\n            // create a translation entry:\n            var trans = {};\n\n            // assume current languageCode:\n            trans.language_code = currLanguage;\n\n            fields.forEach(function (field) {\n               if (obj[field] != null) {\n                  trans[field] = obj[field];\n               }\n            });\n\n            json.translations.push(trans);\n         }\n      }\n   }\n};\n","//\n// ABModelCore\n//\n// Represents the Data interface for an ABObject data.\n//\n// to use an ABModel to load a DataTable:\n// Method 1:\n//  gather all the data externally and send to the DataTable\n//    Model.findAll()\n//    .then((data)=>{\n//      DataTable.parse(data);\n//    })\n//\n\n// const { isArray } = require(\"lodash\");\n\nmodule.exports = class ABModelCore {\n   constructor(object) {\n      // link me to my ABObject\n      this.object = object;\n      this.AB = object.AB;\n\n      this._where = null;\n      this._sort = null;\n      this._skip = null;\n      this._limit = null;\n\n      this.staleRefreshInProcess = false;\n      this.staleRefreshMap = {\n         /* id : Promise */\n      };\n      this.staleRefreshPending = [];\n      this.staleRefreshTimerID = null;\n\n      // include this\n      this.responseContext = { key: \"--\", context: {} };\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   contextKey(key) {\n      this.responseContext.key = key || \"--\";\n   }\n\n   contextValues(values) {\n      this.responseContext.context = values || {};\n   }\n\n   // Prepare multilingual fields to be untranslated\n   // Before untranslating we need to ensure that values.translations is set.\n   prepareMultilingualData(values) {\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n      // if mlFields are inside of the values saved we want to translate otherwise do not because it will reset the translation field and you may loose unchanged translations\n      var shouldTranslate = false;\n      if (mlFields.length) {\n         mlFields.forEach(function (field) {\n            if (values[field] != null) {\n               shouldTranslate = true;\n            }\n         });\n      }\n      if (shouldTranslate) {\n         if (\n            values.translations == null ||\n            typeof values.translations == \"undefined\" ||\n            values.translations == \"\"\n         ) {\n            values.translations = [];\n         }\n         this.object.unTranslate(values, values, mlFields);\n      }\n   }\n\n   request(/* method, params */) {\n      console.error(\n         \"!!! ABModelCore.request() should be overridden by platform.\"\n      );\n      return Promise.resolve();\n   }\n\n   // /**\n   //  * @method create\n   //  * update model values on the server.\n   //  */\n   // create(values) {\n\n   //   this.prepareMultilingualData(values);\n\n   //   var params = {\n   //     url: this.object.urlRest(),\n   //     params: values\n   //   }\n   //   return this.request('post', params)\n   //     .then((data) => {\n\n   //       this.normalizeData(data);\n\n   //       return data;\n\n   //       // FIX: now with sockets, the triggers are fired from socket updates.\n   //       // trigger a create event\n   //       // triggerEvent('create', this.object, data);\n\n   //     })\n   //     .catch(reject);\n\n   // }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   // delete(id) {\n\n   //   var params = {\n   //     url: this.object.urlRestItem(id)\n   //   }\n   //   return this.request('delete', params)\n   //     .then((data) => {\n\n   //       return data;\n\n   //       // FIX: now with sockets, the triggers are fired from socket updates.\n   //       // trigger a delete event\n   //       // triggerEvent('delete', this.object, id);\n\n   //     })\n   // }\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   //   findAll(cond) {\n\n   //     cond = cond || {};\n\n   //     var params = {\n   //       url: this.object.urlRest(),\n   //       params: cond\n   //     }\n   //     return this.request('get', params)\n   //       .then((data) => {\n\n   //         this.normalizeData(data.data);\n\n   //         resolve(data);\n   //       })\n   //       .catch((err) => {\n   // /// TODO: this should be done in platform/ABModel:\n   //         // if (err && err.code) {\n   //         //  switch(err.code) {\n   //         //    case \"ER_PARSE_ERROR\":\n   //         //      OP.Error.log('AppBuilder:ABModel:findAll(): Parse Error with provided condition', { error: err, condition:cond })\n   //         //      break;\n\n   //         //    default:\n   //         //      OP.Error.log('AppBuilder:ABModel:findAll(): Unknown Error with provided condition', { error: err, condition:cond })\n   //         //      break;\n   //         //  }\n\n   //         // }\n   // console.error(err);\n   //       })\n\n   //   }\n\n   urlParamsCreate(values) {\n      return {\n         url: this.object.urlRest(),\n         params: values,\n      };\n   }\n\n   urlParamsDelete(id) {\n      return {\n         url: this.object.urlRestItem(id),\n      };\n   }\n\n   urlParamsFind(cond) {\n      return {\n         url: this.object.urlRest(),\n         params: cond || {},\n      };\n   }\n\n   urlParamsUpdate(id, values) {\n      return {\n         url: this.object.urlRestItem(id),\n         params: values,\n      };\n   }\n\n   /**\n    * @method count\n    * count a data find with the provided condition.\n    */\n   count(cond) {\n      cond = cond || {};\n\n      var params = {\n         url: this.object.urlRestCount(),\n         params: cond,\n      };\n      return this.request(\"get\", params)\n         .then((numberOfRows) => {\n            // resolve(numberOfRows);\n            return numberOfRows;\n         })\n         .catch((err) => {\n            // TODO: this should be done in platform/ABModel\n\n            // OP.Error.log('AppBuilder:ABModel:count(): Parse Error with provided condition', { error: err, condition:cond })\n\n            // reject(err);\n            console.error(err);\n         });\n   }\n\n   /**\n    * @method staleRefresh\n    * Process a request to refresh the data for a given entry.\n    * This method is called from a ABDataview when it receives\n    * a 'ab.datacollection.stale' message.\n    * This method will try to queue similar reqeusts and then issue 1 large\n    * request, rather than numerous individual ones.\n    * @param {obj} cond  the condition of the entry we are requesting.\n    * @return {Promise}\n    */\n   staleRefresh(cond) {\n      // cond should be { where:{ id: X } } format.\n      var PK = this.object.PK();\n\n      var currID = cond[PK]; // just in case we get a { id: X }\n      if (cond.where) {\n         currID = cond.where[PK];\n      }\n\n      return new Promise((resolve, reject) => {\n         if (!currID) {\n            var Err = new Error(\n               \"Model.staleRefresh(): could not resolve .\" + PK\n            );\n            Err.cond = cond;\n            reject(Err);\n            return;\n         }\n\n         // convert to PK : Promise object:\n         var entry = {\n            resolve: resolve,\n            reject: reject,\n         };\n         entry[PK] = currID;\n\n         // queue up refresh condition\n         this.staleRefreshPending.push(entry);\n\n         // if ! staleRefreshInProcess\n         if (!this.staleRefreshInProcess) {\n            // set timeout to another 200ms wait after LAST staleRefresh()\n            if (this.staleRefreshTimerID) {\n               clearTimeout(this.staleRefreshTimerID);\n            }\n            this.staleRefreshTimerID = setTimeout(() => {\n               this.staleRefreshProcess();\n            }, 200);\n         }\n      });\n   }\n\n   /**\n    * @method staleRefreshProcess\n    * Actually process the current pending requests.\n    */\n   staleRefreshProcess() {\n      this.staleRefreshInProcess = true;\n      var currentEntries = this.staleRefreshPending;\n      this.staleRefreshPending = [];\n      var PK = this.object.PK();\n\n      var responseHash = {\n         /* id : [{entry}] */\n      };\n      var cond = { where: {}, populate: true };\n      cond.where[PK] = [];\n\n      console.log(\n         \"Model.staleRefreshProcess(): buffered \" +\n            currentEntries.length +\n            \" requests\"\n      );\n      currentEntries.forEach((e) => {\n         responseHash[e[PK]] = responseHash[e[PK]] || [];\n         responseHash[e[PK]].push(e);\n      });\n\n      cond.where[PK] = Object.keys(responseHash);\n\n      this.findAll(cond).then((res) => {\n         // for each entry we got back\n         if (Array.isArray(res.data) && res.data.length) {\n            res.data.forEach((data) => {\n               // find it's matching request:\n               if (responseHash[data[PK]]) {\n                  // respond to the pending promise\n                  // and remove these entries from responseHash\n                  var entries = responseHash[data[PK]];\n                  entries.forEach((entry) => {\n                     var resolve = entry.resolve;\n                     resolve({ data: [data] });\n                  });\n\n                  delete responseHash[data[PK]];\n               } else {\n                  console.error(\n                     \"Model.staleRefreshProcess(): returned entry was not in our responseHash:\",\n                     data,\n                     responseHash\n                  );\n               }\n            });\n         }\n\n         // now if there are any entries left in responseHash,\n         // respond with an empty entry:\n         var allKeys = Object.keys(responseHash);\n         if (allKeys.length > 0) {\n            console.warn(\n               \"Model.staleRefreshProcess(): \" +\n                  allKeys.length +\n                  \" entries with no responses. \"\n            );\n         }\n         allKeys.forEach((key) => {\n            let entry = responseHash[key];\n            let resolve;\n            if (Array.isArray(entry)) {\n               resolve = entry[0].resolve;\n            } else {\n               resolve = entry.resolve;\n            }\n            resolve({ data: [] });\n            delete responseHash[key];\n         });\n\n         // now check to see if there are any more pending requests:\n         if (this.staleRefreshPending.length > 0) {\n            // process them:\n            this.staleRefreshProcess();\n         } else {\n            // mark we are no longer processing stale requests.\n            this.staleRefreshInProcess = false;\n         }\n      });\n   }\n\n   /**\n     * @method findConnected\n     * return the connected data associated with an instance of this model.\n     *\n     * to limit the result to only a single connected column:\n     *    model.findConnected( 'col1', {data})\n     *    then ((data) => {\n     *      // data = [{obj1}, {obj2}, ... {objN}]\n     *    })\n     *\n     * To find >1 connected field data:\n     *    model.findConnected( ['col1', 'col2'], {data} )\n     *    .then((data) =>{\n     *    \n     *      // data = {\n     *      //     col1 : [{obj1}, {obj2}, ... {objN}],\n     *      //     col2 : [{obj1}, {obj2}, ... {objN}]\n     *      // }\n     *    })\n     *\n     * To find all connected field data:\n     *    model.findConnected( {data} )\n     *    .then((data) =>{\n     *    \n     *      // data = {\n     *      //     connectedColName1 : [{obj1}, {obj2}, ... {objN}],\n     *      //     connectedColName2 : [{obj1}, {obj2}, ... {objN}],\n     *      //    ...\n     *      //     connectedColNameN : [{obj1}, {obj2}, ... {objN}]\n     *      // }\n     *    })\n\n     * @param {string/array} fields  [optional] an array of connected fields you want to return.\n     * @param {obj} data  the current object instance (data) to lookup\n     * @return {Promise}\n     */\n   findConnected(fields, data) {\n      if (typeof data == \"undefined\") {\n         if (!Array.isArray(fields) && typeof fields == \"object\") {\n            data = fields;\n            fields = []; // return all fields\n         }\n      }\n\n      if (typeof fields == \"string\") {\n         fields = [fields]; // convert to an array of values\n      }\n\n      return new Promise((resolve, reject) => {\n         // sanity checking:\n         if (!data.id) {\n            // I can't find any connected items, if I can't find this one:\n            resolve(null);\n            return;\n         }\n\n         let cond = {};\n         cond[this.object.PK()] = data.id;\n         this.findAll({ where: cond, populate: true })\n            .then((results) => {\n               if (\n                  !results.data ||\n                  !Array.isArray(results.data) ||\n                  results.data.length == 0\n               ) {\n                  resolve([]); // no data to return.\n                  return;\n               }\n\n               // work with the first object.\n               var myObj = results.data[0];\n\n               // if only 1 field requested, then return that\n               if (fields.length == 1) {\n                  let data =\n                     myObj[\n                        fields[0].replace(/[^a-z0-9.]/gi, \"\") + \"__relation\"\n                     ];\n                  if (!data) return resolve([]);\n\n                  if (!Array.isArray(data)) data = [data];\n\n                  resolve(data);\n                  return;\n               }\n\n               // if no fields requested, return them all:\n               if (fields.length == 0) {\n                  var allFields = this.object.fields((f) => {\n                     return f.settings.linkType;\n                  });\n                  allFields.forEach((f) => {\n                     fields.push(f.columnName);\n                  });\n               }\n\n               var returnData = {};\n               fields.forEach((colName) => {\n                  returnData[colName] =\n                     myObj[colName.replace(/[^a-z0-9.]/gi, \"\") + \"__relation\"];\n               });\n\n               resolve(returnData);\n            })\n            .catch((err) => {\n               console.error(\"!!! error with findConnected() attempt:\", err);\n               reject(err);\n            });\n      });\n   }\n\n   // /**\n   //  * @method loadInto\n   //  * loads the current values into the provided Webix DataTable\n   //  * @param {DataTable} DT  A Webix component that can dynamically load data.\n   //  */\n   // loadInto(DT) {\n\n   //   // if a limit was applied, then this component should be loading dynamically\n   //   if (this._limit) {\n\n   //     DT.define('datafetch', this._limit);\n   //     DT.define('datathrottle', 250);  // 250ms???\n\n   //     // catch the event where data is requested:\n   //     // here we will do our own findAll() so we can persist\n   //     // the provided .where condition.\n\n   //     // oh yeah, and make sure to remove any existing event handler when we\n   //     // perform a new .loadInto()\n   //     DT.___AD = DT.___AD || {};\n   //     if (DT.___AD.onDataRequestEvent) {\n   //       DT.detachEvent(DT.___AD.onDataRequestEvent);\n   //     }\n   //     DT.___AD.onDataRequestEvent = DT.attachEvent(\"onDataRequest\", (start, count) => {\n\n   //       var cond = {\n   //         where: this._where,\n   //         sort: this._sort,\n   //         limit: count,\n   //         skip: start\n   //       }\n\n   //       if (DT.showProgress)\n   //         DT.showProgress({ type: \"icon\" });\n\n   //       this.findAll(cond)\n   //         .then((data) => {\n   //           data.data.forEach((item) => {\n   //             if (item.properties != null && item.properties.height != \"undefined\" && parseInt(item.properties.height) > 0) {\n   //               item.$height = parseInt(item.properties.height);\n   //             } else if (parseInt(this._where.height) > 0) {\n   //               item.$height = parseInt(this._where.height)\n   //             }\n   //           });\n   //           DT.parse(data);\n\n   //           if (DT.hideProgress)\n   //             DT.hideProgress();\n\n   //         })\n\n   //       return false; // <-- prevent the default \"onDataRequest\"\n   //     });\n\n   //     DT.refresh();\n   //   }\n\n   //   // else just load it all at once:\n   //   var cond = {};\n   //   if (this._where) cond.where = this._where;\n   //   if (this._sort) cond.sort = this._sort;\n   //   if (this._limit != null) cond.limit = this._limit;\n   //   if (this._skip != null) cond.skip = this._skip;\n\n   //   if (DT.showProgress)\n   //     DT.showProgress({ type: \"icon\" });\n\n   //   this.findAll(cond)\n   //     .then((data) => {\n   //       data.data.forEach((item) => {\n   //         if (item.properties != null && item.properties.height != \"undefined\" && parseInt(item.properties.height) > 0) {\n   //           item.$height = parseInt(item.properties.height);\n   //         } else if (parseInt(this._where.height) > 0) {\n   //           item.$height = parseInt(this._where.height)\n   //         }\n   //       });\n   //       DT.parse(data);\n\n   //       if (DT.hideProgress)\n   //         DT.hideProgress();\n\n   //     })\n   //     .catch((err) => {\n   //       console.error('!!!!!', err);\n   //     })\n\n   // }\n\n   // /**\n   //  * @method limit\n   //  * set the limit value for this set of data\n   //  * @param {integer} limit  the number or elements to return in this call\n   //  * @return {ABModel} this object that is chainable.\n   //  */\n   // limit(limit) {\n   //   this._limit = limit;\n   //   return this;\n   // }\n\n   // /**\n   //  * @method skip\n   //  * set the skip value for this set of data\n   //  * @param {integer} skip  the number or elements to skip\n   //  * @return {ABModel} this object that is chainable.\n   //  */\n   // skip(skip) {\n   //   this._skip = skip;\n   //   return this;\n   // }\n\n   //   /**\n   //    * @method update\n   //    * update model values on the server.\n   //    */\n   //   update(id, values) {\n\n   //     this.prepareMultilingualData(values);\n\n   //     // remove empty properties\n   //     for (var key in values) {\n   //       if (values[key] == null)\n   //         delete values[key];\n   //     }\n\n   //     var params = {\n   //       url: this.object.urlRestItem(id),\n   //       params: values\n   //     }\n   //     return this.request('put', params)\n   //       .then((data) => {\n\n   //         // .data is an empty object ??\n\n   //         this.normalizeData(data);\n\n   //         return data;\n\n   //         // FIX: now with sockets, the triggers are fired from socket updates.\n   //         // trigger a update event\n   //         // triggerEvent('update', this.object, data);\n\n   //       })\n   //       .catch((err)=>{\n   // console.error(err);\n   //       });\n\n   //   }\n\n   /**\n    * @method upsert\n    * upsert model values on the server.\n    */\n   upsert(values) {\n      this.prepareMultilingualData(values);\n\n      // remove empty properties\n      for (var key in values) {\n         if (values[key] == null) delete values[key];\n      }\n\n      var params = {\n         url: this.object.urlRest(),\n         params: values,\n      };\n      return this.request(\"put\", params)\n         .then((data) => {\n            // .data is an empty object ??\n\n            this.normalizeData(data);\n\n            return data;\n\n            // FIX: now with sockets, the triggers are fired from socket updates.\n            // trigger a update event\n            // triggerEvent('update', this.object, data);\n         })\n         .catch((err) => {\n            console.error(err);\n         });\n   }\n\n   /**\n    * @method where\n    * set the where condition for the data being loaded.\n    * @param {json} cond  the json condition statement.\n    * @return {ABModel} this object that is chainable.\n    */\n   where(cond) {\n      this._where = cond;\n      return this;\n   }\n\n   /**\n    * @method where\n    * set the sort condition for the data being loaded.\n    * @param {json} cond  the json condition statement.\n    * @return {ABModel} this object that is chainable.\n    */\n   sort(cond) {\n      this._sort = cond;\n      return this;\n   }\n\n   /**\n    * @method refresh\n    * refresh model definition on the server.\n    */\n   refresh() {\n      console.error(\"!!! Depreciated: where is this being called from?\");\n      return Promise.resolve();\n\n      // var params = {\n      //    url: this.object.urlRestRefresh(),\n      // };\n      // return this.request(\"put\", params);\n   }\n\n   /**\n    * @method isCsvPacked\n    * check if the data is packed in a csv format\n    * @param {json} data  the json condition statement.\n    * @return {boolean} true if the data is packed in a csv format\n    *                   false if the data is not packed in a csv format\n    */\n   isCsvPacked(data) {\n      if (data.csv_packed) {\n         return true;\n      }\n      return false;\n   }\n\n   /**\n    * @method csvPack\n    * pack the data into a csv format\n    * @param {json} data\n    *               The original data format.\n    *              {\n    *                data: [{obj1}, {obj2}, ... {objN}],\n    *                total_bytes:xx,\n    *              }\n    * @return {json} the csv packed data\n    *                {\n    *                  csv_packed:{\n    *                    data: \"<csv data>\",\n    *                    relations: {\n    *                      {connectionID}: \"<csv data>\",\n    *                      {connectionID}: \"<csv data>\",\n    *                      ...\n    *                    },\n    *                  },\n    *                  total_bytes:xx,\n    *                }\n    */\n   csvPack(data) {\n      // data should be the original json data packet we want to send\n      // {\n      //   data: [{obj1}, {obj2}, ... {objN}],\n      //   total_bytes:xx,\n      // }\n      // we want to convert this to:\n      // {\n      //   csv_packed:{\n      //     data: \"csv data\",\n      //     relations: {\n      //       {connectionID}: \"csv data\", // each entry has entry._csvID, that is the lookup\n      //       {connectionID}: \"csv data\",\n      //       ...\n      //   }\n      //   total_bytes:xx,\n      // }\n      let packedData = { data: \"\", relations: {} };\n      let myObject = this.object;\n\n      let content = data.data;\n      let returnType = \"array\";\n      if (!Array.isArray(content)) {\n         returnType = \"single\";\n         content = [content];\n      }\n      content = content.filter((row) => !this.AB.isNil(row));\n\n      // stringify any potential json data\n      // starting with List data\n      let keys = [\"list\", \"json\"];\n      let stringifyFields = myObject.fields((f) => keys.indexOf(f.key) > -1);\n      stringifyFields.forEach((f) => {\n         for (let I = 0; I < content.length; I++) {\n            let row = content[I];\n            if (row[f.columnName]) {\n               row[f.columnName] = JSON.stringify(row[f.columnName]);\n            }\n         }\n      });\n\n      // break out and compact the connected data\n      let connections = myObject.connectFields();\n      connections.forEach((connField) => {\n         let connHash = {};\n         let relationName = connField.relationName();\n         let connPK = connField.datasourceLink.PK();\n\n         // gather all the connected data for this field\n         for (let I = 0; I < content.length; I++) {\n            let row = content[I];\n            if (row[relationName]) {\n               if (Array.isArray(row[relationName])) {\n                  row[relationName].forEach((r) => {\n                     if (!connHash[r.id]) {\n                        connHash[r.id] = r;\n                     }\n                  });\n               } else {\n                  let r = row[relationName];\n                  if (!connHash[r.id]) {\n                     connHash[r.id] = r;\n                  }\n               }\n            }\n         }\n\n         // assign a smaller id value\n         Object.keys(connHash).forEach((id, indx) => {\n            connHash[id]._csvID = indx;\n         });\n\n         // now reencode the connection data to reference the new _csvID\n         for (let I = 0; I < content.length; I++) {\n            let row = content[I];\n            let ids = [];\n            let hasRelationData = false;\n            if (row[relationName]) {\n               hasRelationData = true;\n               if (Array.isArray(row[relationName])) {\n                  row[relationName].forEach((r) => {\n                     ids.push(connHash[r.id]._csvID);\n                  });\n               } else {\n                  let r = row[relationName];\n                  ids.push(connHash[r.id]._csvID);\n               }\n            }\n            // only make an update if it did have relation data\n            if (hasRelationData) {\n               row[connField.columnName] = JSON.stringify(ids);\n               delete row[relationName];\n            }\n         }\n\n         let connData = Object.values(connHash);\n         const isPKID = connPK === \"id\";\n         connData.forEach((c) => {\n            if (!isPKID && c.id == c[connPK]) {\n               delete c.id;\n            }\n\n            // if translations are present return them to an object\n            if (c.translations) {\n               c.translations = JSON.stringify(c.translations);\n            }\n         });\n         let connDataCsv = this.AB.jsonToCsv(connData);\n         packedData.relations[connField.id] = connDataCsv;\n      });\n\n      // final data preparations for csv encoding\n      const isPKID = myObject.PK();\n      for (let I = 0; I < content.length; I++) {\n         let row = content[I];\n         // client side .normalizeData() should repopulate .id\n         !isPKID && delete row.id;\n\n         // we don't use .properties anymore, right?\n         delete row.properties;\n\n         // make sure embedded translations are stringified.\n         if (row.translations) {\n            row.translations = JSON.stringify(row.translations);\n         }\n\n         // special case for relations that are empty\n         connections.forEach((connField) => {\n            let relationName = connField.relationName();\n            if (row[relationName] === null) {\n               delete row[relationName];\n            }\n         });\n      }\n\n      // now convert the data to CSV\n      packedData.data = this.AB.jsonToCsv(content);\n      packedData.type = returnType; // single or array\n\n      let newData = {};\n      Object.keys(data).forEach((key) => {\n         if (key != \"data\") {\n            newData[key] = data[key];\n         }\n      });\n      newData.csv_packed = packedData;\n      return newData;\n   }\n\n   /**\n    * @method csvUnpack\n    * unpack the data from our csv format\n    * @param {json} data\n    *              The csv packed data format.\n    * @return {json} the unpacked data\n    */\n   csvUnpack(data) {\n      // data should be a data packet returned from the server\n      // {\n      //   csv_packed:{\n      //     data: \"csv data\",\n      //     relations: {\n      //       {connectionID}: \"csv data\", // each entry has entry._csvID, that is the lookup\n      //       {connectionID}: \"csv data\",\n      //       ...\n      //   }\n      //   total_bytes:xx,\n      // }\n      // we want to convert this to:\n      // {\n      //   data: [{obj1}, {obj2}, ... {objN}],\n      //   total_bytes:xx,\n      // }\n\n      let myObject = this.object;\n      let parseResult = this.AB.csvToJson(data.csv_packed.data);\n      // parseResult = { data: [], errors:[], meta:{}}\n\n      let returnType = data.csv_packed.type;\n\n      if (parseResult.errors?.length) {\n         // ignore common error when .data is \"\"\n         if (data.csv_packed.data !== \"\") {\n            console.error(\"Error parsing CSV data:\", parseResult.errors);\n            console.error(\"Original CSV data:\");\n            console.error(data.csv_packed.data);\n            console.error(\"result:\");\n            console.error(parseResult.data);\n         }\n      }\n      let jsonData = parseResult.data;\n\n      let keyFields = [\"list\", \"boolean\", \"number\", \"json\"];\n      let parseFields = myObject.fields((f) => keyFields.indexOf(f.key) > -1);\n      jsonData.forEach((row) => {\n         // unstringify any list,bool,number fields\n         parseFields.forEach((f) => {\n            let val = row[f.columnName];\n            if (val && typeof val == \"string\") {\n               try {\n                  row[f.columnName] = JSON.parse(val);\n               } catch (e) {\n                  console.error(\n                     \"Error parsing JSON data for column: \" + f.columnName,\n                     val,\n                     e\n                  );\n               }\n            }\n         });\n\n         // if translations are present return them to an object\n         if (row.translations) {\n            row.translations = JSON.parse(row.translations);\n         }\n      });\n\n      let connections = myObject.connectFields();\n      connections.forEach((connField) => {\n         let relationName = connField.relationName();\n\n         if (data.csv_packed.relations[connField.id]) {\n            let connDataParseResult = this.AB.csvToJson(\n               data.csv_packed.relations[connField.id]\n            );\n            let connData = connDataParseResult.data;\n\n            let connHash = {};\n            let connPK = connField.datasourceLink.PK();\n            connData.forEach((c) => {\n               if (!c.id) {\n                  c.id = c[connPK];\n               }\n               connHash[c._csvID] = c;\n            });\n\n            jsonData.forEach((row) => {\n               let ids = [];\n               let populatedData = [];\n               let entries = [];\n               try {\n                  // ok, we know this is a possibility, so just skip it\n                  if (row[connField.columnName] !== \"\") {\n                     entries = JSON.parse(row[connField.columnName]);\n                  }\n               } catch (e) {\n                  if (row[connField.columnName] == \"\") {\n                     // not a problem, just no data\n                  } else {\n                     // this might be a situation on the server where\n                     // row[columnName] has a value, but row[relationName] is empty.\n                     if (typeof row[relationName] == \"undefined\") {\n                        row[relationName] = null;\n                     }\n                     // console.error(\n                     //    \"Error parsing JSON data for column: \" +\n                     //       connField.columnName,\n                     //    e\n                     // );\n                  }\n               }\n               if (!Array.isArray(entries)) {\n                  entries = [entries];\n               }\n               entries.forEach((id) => {\n                  if (connHash[id]) {\n                     let connEntry = connHash[id];\n                     ids.push(connField.getRelationValue(connEntry));\n                     // Alternatively, we could remove the row[columnName] and let\n                     // normalizeData() repopulate it.\n                     populatedData.push(connEntry);\n                  }\n               });\n               if (connField.linkType() == \"many\") {\n                  row[connField.columnName] = ids;\n                  row[connField.relationName()] = populatedData;\n               } else {\n                  row[connField.columnName] = ids[0];\n                  row[connField.relationName()] = populatedData[0];\n               }\n            });\n\n            // now clear the ._csvID from the data\n            Object.keys(connHash).forEach((id) => {\n               delete connHash[id]._csvID;\n            });\n         }\n      });\n\n      // final pass to clear up stringified relation data\n      jsonData.forEach((row) => {\n         connections.forEach((connField) => {\n            // many connections must be an array, not \"[]\"\n            if (connField.linkType() == \"many\") {\n               let val = row[connField.columnName];\n               if (val && typeof val == \"string\") {\n                  row[connField.columnName] = JSON.parse(val);\n               }\n            }\n         });\n      });\n\n      let returnData = {};\n      Object.keys(data).forEach((key) => {\n         if (key != \"csv_packed\") {\n            returnData[key] = data[key];\n         }\n      });\n      returnData.data = jsonData;\n\n      if (returnType == \"single\" && Array.isArray(returnData.data)) {\n         returnData.data = returnData.data[0];\n      }\n      return returnData;\n   }\n\n   normalizeData(data) {\n      // convert to array\n      if (!(data instanceof Array)) data = [data];\n\n      // find all connected fields\n      var connectedFields = this.object.connectFields();\n\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n\n      // if this object has some date fields, convert the data to date object:\n      var dateFields =\n         this.object.fields(function (f) {\n            return f.key == \"date\" || f.key == \"datetime\";\n         }) || [];\n\n      // calculate fields\n      var calculatedFields = this.object.fields((f) => f.key == \"calculate\");\n\n      data.forEach((d) => {\n         if (d == null) return;\n\n         // various PK name\n         if (!d.id && this.object.PK() != \"id\") d.id = d[this.object.PK()];\n\n         // loop through data's connected fields\n         connectedFields.forEach((c) => {\n            // get the relation name so we can change the original object\n            var relationName = c.relationName();\n\n            // if (d[c.columnName] == null)\n            //  d[c.columnName] = '';\n\n            // Our client side tools need to know that this value is null if it\n            // isn't provided:\n            if (\n               typeof d[relationName] == \"undefined\" &&\n               typeof d[c.columnName] == \"undefined\"\n            ) {\n               d[relationName] = null;\n               d[c.columnName] = null;\n               return;\n            }\n\n            // if there is no data we can exit now\n            if (d[relationName] == null) return;\n\n            // if relation data is still a string and isn't empty\n            if (\n               typeof d[relationName] == \"string\" &&\n               d[relationName].length > 0\n            ) {\n               // parse the string into an object\n               d[relationName] = JSON.parse(d[relationName]);\n            }\n\n            // if the data is an array we need to loop through it\n            if (Array.isArray(d[relationName])) {\n               d[relationName].forEach((r) => {\n                  // if translations are present and they are still a string\n                  if (r.translations && typeof r.translations == \"string\") {\n                     // parse the string into an object\n                     r.translations = JSON.parse(r.translations);\n                  }\n               });\n               // if the data is not an array it is a single item...check that has translations and it is a string\n            } else if (\n               d[relationName].translations &&\n               typeof d[relationName].translations == \"string\"\n            ) {\n               // if so parse the string into an object\n               d[relationName].translations = JSON.parse(\n                  d[relationName].translations\n               );\n            }\n\n            // set .id to relation columns\n            let objectLink = c.datasourceLink;\n\n            // if we didn't get the linked object, just return.\n            if (!objectLink) return;\n\n            let olPK = objectLink.PK();\n            var relatedMlFields = objectLink.multilingualFields();\n\n            if (Array.isArray(d[relationName])) {\n               d[relationName].forEach((subData) => {\n                  // update .id values\n                  // if (olPK != \"id\" && subData[olPK]) subData.id = subData[olPK];\n                  const relationValue = c.getRelationValue(subData);\n                  if (olPK != \"id\") subData.id = relationValue;\n\n                  // perform Translation\n                  if (relatedMlFields.length) {\n                     objectLink.translate(subData, subData, relatedMlFields);\n                  }\n               });\n            } else {\n               // update .id value\n               // if (d[relationName][olPK]) {\n               //    d[relationName].id = d[relationName][olPK];\n               // }\n               const relationValue = c.getRelationValue(d[relationName]);\n               if (relationValue) {\n                  d[relationName].id = relationValue;\n               }\n\n               // perform Translation\n               if (relatedMlFields.length) {\n                  objectLink.translate(\n                     d[relationName],\n                     d[relationName],\n                     relatedMlFields\n                  );\n               }\n            }\n\n            // if (\n            //    objectLink &&\n            //    olPK != \"id\" &&\n            //    d[relationName] &&\n            //    !d[relationName].id\n            // ) {\n            //    // is array\n            //    if (d[relationName].forEach) {\n            //       d[relationName].forEach((subData) => {\n            //          if (subData[olPK]) subData.id = subData[olPK];\n            //       });\n            //    } else if (d[relationName][olPK]) {\n            //       d[relationName].id = d[relationName][olPK];\n            //    }\n            // }\n\n            // if (relatedMlFields.length) {\n            //    d[relationName];\n            //    objectLink.translate(\n            //       d[relationName],\n            //       d[relationName],\n            //       relatedMlFields\n            //    );\n            // }\n\n            // Change property name of connected field\n            if (!d[c.columnName]) {\n               if (c.linkType() == \"one\") {\n                  if (d[relationName]) {\n                     // d[c.columnName] = d[relationName][olPK];\n                     d[c.columnName] = c.getRelationValue(d[relationName]);\n                  } else {\n                     d[c.columnName] = null;\n                  }\n               } else {\n                  if (d[relationName]) {\n                     if (Array.isArray(d[relationName])) {\n                        try {\n                           d[c.columnName] = (d[relationName] || []).map(\n                              // (i) => i[olPK]\n                              (i) => c.getRelationValue(i)\n                           );\n                        } catch (e) {\n                           console.log(\"+++++++++++++++\");\n                           console.log(`ID:[${c.id}]`);\n                           console.log(`ColumnName:[${c.label}]`);\n                           console.log(`relationName:[${relationName}]`);\n                           console.log(`linkType:[${c.linkType()}]`);\n                           console.log(\"data:\");\n                           console.log(JSON.stringify(d[relationName]));\n                           console.log(\"+++++++++++++++\");\n                        }\n                     } else {\n                        // this is strange: supposed to be \"many\" but coming in\n                        // as \"one\"\n                        console.log(\"+++++++++++++++\");\n                        console.log(`ID:[${c.id}]`);\n                        console.log(`ColumnName:[${c.label}]`);\n                        console.log(`relationName:[${relationName}]`);\n                        console.log(`linkType:[${c.linkType()}]`);\n                        console.log(\"data:\");\n                        console.log(JSON.stringify(d[relationName]));\n                        console.log(\"+++++++++++++++\");\n                        // d[c.columnName] = [d[relationName][olPK]];\n                        d[c.columnName] = [c.getRelationValue(d[relationName])];\n                     }\n                  } else {\n                     d[c.columnName] = [];\n                  }\n               }\n            }\n         });\n\n         if (mlFields.length) {\n            this.object.translate(d, d, mlFields);\n         }\n\n         // convert the data to date object\n         dateFields.forEach((date) => {\n            if (d && d[date.columnName] != null) {\n               // check to see if data has already been converted to a date object\n               if (typeof d[date.columnName] == \"string\") {\n                  if (date.key == \"date\") {\n                     // if we are ignoring the time it means we ignore timezone as well\n                     // so lets trim that off when creating the date so it can be a simple date\n                     d[date.columnName] = this.AB.rules.toDate(\n                        d[date.columnName],\n                        {\n                           format: \"MM/DD/YYYY\",\n                           ignoreTime: true,\n                        }\n                     );\n                  } else {\n                     // Convert UTC to Date\n                     d[date.columnName] = this.AB.rules.toDate(\n                        d[date.columnName]\n                     );\n                     // d[date.columnName] = new Date(moment(d[date.columnName]));\n                  }\n               }\n            }\n         });\n\n         calculatedFields.forEach((calField) => {\n            d[calField.columnName] = calField.format(d);\n         });\n      });\n   }\n};\n","const ABObject = require(\"../platform/ABObject\");\nconst ABModelApi = require(\"../platform/ABModelApi\");\n\nmodule.exports = class ABObjectApiCore extends ABObject {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      this.isAPI = true;\n\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.readonly = parseInt(attributes.readonly) || 0;\n      this.apiType = attributes.apiType || \"Read\";\n      this.request = attributes.request ?? {};\n      this.request.headers = attributes.request?.headers ?? [];\n      this.response = attributes.response ?? {};\n      this.response.fields = attributes.response?.fields ?? [];\n      this.isFetched = attributes.isFetched ?? false;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABObjectQuery instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const result = super.toObj();\n\n      result.isAPI = this.isAPI;\n      result.readonly = this.readonly;\n      result.apiType = this.apiType;\n      result.request = this.request ?? {};\n      result.request.headers = this.request?.headers ?? [];\n      result.response = this.response ?? {};\n      result.response.fields = this.response?.fields ?? [];\n      result.isFetched = this.isFetched;\n\n      return result;\n   }\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObjectQuery.\n    */\n   model() {\n      var model = new ABModelApi(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(this.constructor.contextKey());\n      model.contextValues({ id: this.id }); // the datacollection.id\n\n      return model;\n   }\n\n   /**\n    * @function getPagingValues()\n    *\n    * @return {Object} - {\n    *                       start: \"Property name of the API for start index\",\n    *                       limit: \"Property name of the API for limit return the item number\"\n    *                     }\n    */\n   getPagingValues({ skip, limit }) {\n      const result = {};\n      const pagingSettings = this.request?.paging ?? {};\n\n      if (pagingSettings.start && skip != null) {\n         result[pagingSettings.start] = skip;\n      }\n      if (pagingSettings.limit && limit != null) {\n         result[pagingSettings.limit] = limit;\n      }\n\n      return result;\n   }\n\n   dataFromKey(data) {\n      let result = [];\n\n      if (!Array.isArray(data)) data = [data];\n\n      data.forEach((item) => {\n         // Clone item\n         let itemResult = { ...item };\n\n         // Pull data from `Data key` of the API object\n         // FORMAT: \"Property.Name.Value\"\n         (this.response.dataKey ?? \"\").split(\".\").forEach((key) => {\n            if (key == \"\" || key == null) return;\n            itemResult = itemResult?.[key];\n         });\n\n         if (Array.isArray(itemResult)) {\n            result = result.concat(itemResult);\n         } else if (itemResult) {\n            result.push(itemResult);\n         }\n      });\n\n      return result;\n   }\n\n   get headers() {\n      const headers = {};\n\n      (this.request.headers ?? []).forEach((header) => {\n         if (header?.value == null) return;\n\n         headers[header.key] = header.value;\n      });\n\n      return headers;\n   }\n};\n","const ABObjectApi = require(\"../platform/ABObjectApi\");\nconst ABModelApiNetsuite = require(\"../platform/ABModelApiNetsuite\");\n\nmodule.exports = class ABObjectApiNetsuiteCore extends ABObjectApi {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      this.isNetsuite = true;\n\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.credentials = attributes.credentials ?? {};\n      this.columnRef = attributes.columnRef ?? {};\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABObjectQuery instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const result = super.toObj();\n\n      result.isNetsuite = true;\n      result.credentials = this.credentials;\n      result.columnRef = this.columnRef;\n\n      return result;\n   }\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObjectQuery.\n    */\n   model() {\n      var model = new ABModelApiNetsuite(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(this.constructor.contextKey());\n      model.contextValues({ id: this.id }); // the datacollection.id\n\n      return model;\n   }\n\n   /**\n    * @function getPagingValues()\n    *\n    * @return {Object} - {\n    *                       start: \"Property name of the API for start index\",\n    *                       limit: \"Property name of the API for limit return the item number\"\n    *                     }\n    */\n   /*\n   getPagingValues({ skip, limit }) {\n      const result = {};\n      const pagingSettings = this.request?.paging ?? {};\n\n      if (pagingSettings.start && skip != null) {\n         result[pagingSettings.start] = skip;\n      }\n      if (pagingSettings.limit && limit != null) {\n         result[pagingSettings.limit] = limit;\n      }\n\n      return result;\n   }\n\n   dataFromKey(data) {\n      let result = [];\n\n      if (!Array.isArray(data)) data = [data];\n\n      data.forEach((item) => {\n         // Clone item\n         let itemResult = { ...item };\n\n         // Pull data from `Data key` of the API object\n         // FORMAT: \"Property.Name.Value\"\n         (this.response.dataKey ?? \"\").split(\".\").forEach((key) => {\n            if (key == \"\" || key == null) return;\n            itemResult = itemResult?.[key];\n         });\n\n         if (Array.isArray(itemResult)) {\n            result = result.concat(itemResult);\n         } else if (itemResult) {\n            result.push(itemResult);\n         }\n      });\n\n      return result;\n   }\n\n   get headers() {\n      const headers = {};\n\n      (this.request.headers ?? []).forEach((header) => {\n         if (header?.value == null) return;\n\n         headers[header.key] = header.value;\n      });\n\n      return headers;\n   }\n\n   */\n};\n","/**\n * ABObjectCore\n *\n * Manage the loading of specific ABObject data into useable objects\n * that can instantiate themselves and provide field and model resources.\n */\n\nvar ABModel = require(\"../platform/ABModel\");\nvar ABMLClass = require(\"../platform/ABMLClass\");\n\n/* eslint-disable-next-line no-undef */\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABObjectCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      /*\n{\n\tid: uuid(),\n\tconnName: 'string', // Sails DB connection name: 'appdev_default', 'legacy_hris', etc. Default is 'appBuilder'.\n\tname: 'name',\n\tlabelFormat: 'xxxxx',\n\tlabelSettings: Object,\n\tisImported: 1/0,\n\tisExternal: 1/0,\n\ttableName:'string',  // NOTE: store table name of import object to ignore async\n\tprimaryColumnName: 'string', // NOTE: store column name of PK\n\ttransColumnName: 'string', // NOTE: store column name of translations table\n\turlPath:'string',\n\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t// to get other object:\t ABApplication.objectFromRef(obj.importFromObject);\n\ttranslations:[\n\t\t{}\n\t],\n\tfields:[\n\t\t{ABDataField}\n   ],\n   indexes: [\n      {ABIndex}\n   ]\n}\n*/\n\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object. These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   static contextKey() {\n      return \"object\";\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            connName: 'string', // Sails DB connection name: 'appdev_default', 'legacy_hris', etc. Default is 'appBuilder'.\n            name: 'name',\n            labelFormat: 'xxxxx',\n            labelSettings: Object,\n            isImported: 1/0,\n            isExternal: 1/0,\n            tableName:'string',  // NOTE: store table name of import object to ignore async\n            primaryColumnName: 'string', // NOTE: store column name of PK\n            transColumnName: 'string', // NOTE: store column name of translations table\n            urlPath:'string',\n            importFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n                                        // to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n            translations:[\n                {}\n            ],\n            fields:[\n                {ABDataField}\n            ],\n            indexes: [\n               {ABIndex}\n            ]\n        }\n        */\n\n      this.id = attributes.id;\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = attributes.type || \"object\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.connName = attributes.connName || undefined; // undefined == 'appBuilder'\n      // {string} .connName\n      // the sails.config.connections[connName] configuration reference.\n      // if not set ({undefined}), then our default \"appBuilder\" config is used\n\n      this.name = attributes.name || \"\";\n      // {string} .name\n      // A name reference for this ABObject. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      this.labelFormat = attributes.labelFormat || \"\";\n      // {string} .labelFormat\n      // A string template for how to display an entry for this ABObject in\n      // common UI elements like grids, lists, etc...\n\n      this.labelSettings = attributes.labelSettings || {};\n      // {Object} .labelSettings\n\n      this.labelSettings.isNoLabelDisplay = parseInt(\n         this.labelSettings.isNoLabelDisplay || 0\n      );\n      // {bool} .isNoLabelDisplay\n\n      this.isImported = parseInt(attributes.isImported || 0);\n      // {depreciated}\n      // {bool} .isImported\n      // previously used to mark ABObjects that were created in other\n      // ABApplicaitons.  No longer relevant with Global ABObjects\n\n      this.isExternal = parseInt(attributes.isExternal || 0);\n      // {bool} .isExternal\n      // Marks this ABObject as referencing a pre-existing table in the DB that\n      // we are treating as an ABObject.\n      // These objects are not allowed to create/update/destroy the db table\n      // nor can we add/remove fields.\n      // However we are able to customize the Field definitions to change the\n      // column names, hidden attributes, Object label, etc...\n      // We can update our Defintion attributes, but not any actual DB changes.\n\n      this.tableName = attributes.tableName || \"\"; // NOTE: store table name of import object to ignore async\n      // {string} .tableName\n      // the `{database}.{tableName}` of the db table that this ABObject's data\n      // is stored in.\n      // knex does not like .(dot) in table and column names\n      // https://github.com/knex/knex/issues/2762\n      this.tableName = this.tableName.replace(/[^a-zA-Z0-9_ ]/gi, \"\");\n\n      this.primaryColumnName = attributes.primaryColumnName || \"\"; // NOTE: store column name of PK\n      // {string} .primaryColumnName\n      // is the col_name of which key is the primary key.  By default it is\n      // \"uuid\", but in some external objects this might be something else\n      // (\"id\", \"ren_id\", etc...).\n\n      this.transColumnName = attributes.transColumnName || \"\"; // NOTE: store column name of translations table\n      // {string} .transColumnName\n      // this is a workaround to include hris_ren_data and hris_ren_trans data\n\n      this.urlPath = attributes.urlPath || \"\";\n\n      // this.importFromObject = attributes.importFromObject || \"\";\n\n      this.isSystemObject = attributes.isSystemObject;\n      // {bool} .isSystemObject\n      // We are now storing some of our System Required Data as ABObjects as well.\n      // These Objects should not be allowed to be modified by typical AppBuilder\n      // designer.  However we can enable a mode for AB Designer to then expand these\n      // ABObjects, and eventually we can use the AppBuilder to Create the AppBuilder.\n      if (\n         typeof this.isSystemObject == \"undefined\" ||\n         this.isSystemObject == \"false\"\n      ) {\n         this.isSystemObject = false;\n      }\n\n      this.createdInAppID = attributes.createdInAppID;\n      // {string} .createdInAppID\n      // the .id of the ABApplication that originally created this ABObject.\n\n      // if attributes.objectWorkspace DOES exist, make sure it is fully\n      // populated.\n      if (typeof attributes.objectWorkspace != \"undefined\") {\n         if (typeof attributes.objectWorkspace.sortFields == \"undefined\")\n            attributes.objectWorkspace.sortFields = [];\n         if (typeof attributes.objectWorkspace.filterConditions == \"undefined\")\n            attributes.objectWorkspace.filterConditions = [];\n         if (typeof attributes.objectWorkspace.frozenColumnID == \"undefined\")\n            attributes.objectWorkspace.frozenColumnID = \"\";\n         if (typeof attributes.objectWorkspace.hiddenFields == \"undefined\")\n            attributes.objectWorkspace.hiddenFields = [];\n      }\n      this.objectWorkspace = attributes.objectWorkspace || {\n         sortFields: [], // array of columns with their sort configurations\n         filterConditions: [], // array of filters to apply to the data table\n         frozenColumnID: \"\", // id of column you want to stop freezing\n         hiddenFields: [], // array of [ids] to add hidden:true to\n      };\n      // {obj} .objectWorkspace\n      // When in the ABObject editor in the AppBuilder Designer, different\n      // views of the information can be created.  These views are stored here\n      // and are avaiable to other users in the Designer.\n\n      // pull in field definitions:\n      var fields = [];\n      this.fieldIDs = attributes.fieldIDs || [];\n      // {array}  [ ABField.id, ... ]\n      // this is a collection of ALL the ABFields this object references.\n      // This will include ABFields that were directly created for this object\n      // and will include ABFields that were imported.\n\n      this.importedFieldIDs = attributes.importedFieldIDs || [];\n      // {array} [ ABField.id, ... ]\n      // this is a collection of the ABFields in our .fieldIDs that were\n      // IMPORTED.\n\n      this._unknownFieldIDs = [];\n      this.fieldIDs.forEach((id) => {\n         if (!id) return;\n\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            fields.push(this.AB.fieldNew(def, this));\n         } else {\n            this._unknownFieldIDs.push(id);\n            let err = new Error(\n               `O[${this.name}] is referenceing an unknown field id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      });\n      this._fields = fields;\n\n      // pull in index definitions:\n      this.importIndexes(attributes.indexIDs);\n\n      // let the MLClass now process the translations:\n      super.fromValues(attributes);\n   }\n\n   /**\n    * @method importIndexes\n    * instantiate a set of indexes from the given ids.\n    * @param {array} indexIDs The different ABDefinition IDs for each index\n    *        [ \"uuid11\", \"uuid2\", ... \"uuidN\" ]\n    */\n   importIndexes(indexIDs) {\n      this._unknownIndex = [];\n      var indexes = [];\n      (indexIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            indexes.push(this.AB.indexNew(def, this));\n         } else {\n            this._unknownIndex.push(id);\n            let err = new Error(\n               `O[${this.name}] is referenceing an unknown index id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      });\n      this._indexes = indexes;\n   }\n\n   /**\n    * @method exportFields\n    * convert our array of fields into a settings object for saving to disk.\n    * @return {array}\n    */\n   // exportFields() {\n   //     var currFields = [];\n   //     this._fields.forEach((obj) => {\n   //         currFields.push(obj.toObj());\n   //     });\n   //     return currFields;\n   // }\n\n   // /**\n   //  * @method exportFields\n   //  * convert our array of fields into a settings object for saving to disk.\n   //  * @return {array}\n   //  */\n   // exportIndexes() {\n   //    var currIndexes = [];\n   //    this._indexes.forEach((idx) => {\n   //       currIndexes.push(idx.toObj());\n   //    });\n   //    return currIndexes;\n   // }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      var obj = super.toObj();\n\n      // track the field .ids of our fields\n      var fieldIDs = this.fields().map((f) => f.id);\n      (this._unknownFieldIDs || []).forEach((id) => {\n         fieldIDs.push(id);\n      });\n      // NOTE: we keep the ._unknownFieldIDs so a developer/builder\n      // can come back and track down what happened to the missing\n      // ids.\n\n      // track the index .ids of our indexes\n      var indexIDs = this.indexes().map((f) => f.id);\n      (this._unknownIndex || []).forEach((id) => {\n         indexIDs.push(id);\n      });\n\n      return {\n         id: this.id,\n         type: this.type || \"object\",\n         connName: this.connName,\n         name: this.name,\n         labelFormat: this.labelFormat,\n         labelSettings: this.labelSettings || {},\n         isImported: this.isImported,\n         isExternal: this.isExternal,\n         tableName: this.tableName,\n         // NOTE: store table name of import object to ignore async\n         primaryColumnName: this.primaryColumnName,\n         // NOTE: store column name of PK\n         transColumnName: this.transColumnName,\n         // NOTE: store column name of translations table\n         urlPath: this.urlPath,\n         // importFromObject: this.importFromObject,\n         objectWorkspace: this.objectWorkspace,\n         isSystemObject: this.isSystemObject,\n\n         translations: obj.translations,\n         fieldIDs: fieldIDs,\n         importedFieldIDs: this.importedFieldIDs,\n         indexIDs: indexIDs,\n         createdInAppID: this.createdInAppID,\n      };\n   }\n\n   ///\n   /// Objects\n   ///\n\n   /**\n    * @method objectLinks()\n    *\n    *  return an array of ABObject that's connected.\n    *\n    * @param {object} filter\n    * @return {array} - An array of ABObject\n    */\n   objectLinks(/* filter */) {\n      var connectFields = this.connectFields();\n\n      return connectFields.map((f) => f.datasourceLink);\n   }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method fields()\n    * return an array of all the ABFields for this ABObject.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array[ABFieldxxx]}\n    */\n   fields(fn = () => true) {\n      return this._fields.filter(fn);\n   }\n\n   /**\n    * @method fieldByID()\n    * return the object's field from the given {ABField.id}\n    * @param {string} id\n    *        the uuid of the field to return.\n    * @return {ABFieldxxx}\n    */\n   fieldByID(id) {\n      return this.fields((f) => f?.id == id)[0];\n   }\n\n   /**\n    * @method connectFields()\n    *\n    * return an array of the ABFieldConnect that is connect object fields.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array}\n    */\n   connectFields(fn = () => true) {\n      return this.fields((f) => f && f.isConnection).filter(fn);\n   }\n\n   /**\n    * @method fieldImport\n    * register the given ABField.id as an imported field for this ABObject.\n    * The ABField definition should be available before making this call.\n    * After this call, the ABField is included in the ABObject, but the ABObject\n    * has NOT been saved.\n    * @param {ABField} fieldID The ABDefinition.id for a field that is imported\n    *        into this object.\n    */\n   fieldImport(id) {\n      if (!id) return;\n\n      if (this.importedFieldIDs.indexOf(id) == -1) {\n         this.importedFieldIDs.push(id);\n      }\n\n      // just to be safe:\n      var isThere = this._fields.find((f) => f.id == id);\n      if (!isThere) {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            this._fields.push(this.AB.fieldNew(def, this));\n         } else {\n            this._unknownFieldIDs = this._unknownFieldIDs || [];\n            this._unknownFieldIDs.push(id);\n            let err = new Error(\n               `O[${this.name}] is importing an unknown field id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      }\n   }\n\n   /**\n    * @method fieldNew()\n    *\n    * return an instance of a new (unsaved) ABField that is tied to this\n    * ABObject.\n    *\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    *\n    * @return {ABField}\n    */\n   fieldNew(values) {\n      return this.AB.fieldNew(values, this);\n   }\n\n   /**\n    * @method fieldRemove()\n    *\n    * remove the given ABField from our ._fields array and persist the current\n    * values.\n    *\n    * @param {ABField} field The instance of the field to remove.\n    * @return {Promise}\n    */\n   fieldRemove(field) {\n      var origLen = this._fields.length;\n      this._fields = this.fields(function (o) {\n         return o.id != field.id;\n      });\n\n      // be sure to remove this from our imported ids if it was\n      // listed there.\n      this.importedFieldIDs = this.importedFieldIDs.filter(\n         (fid) => fid != field.id\n      );\n\n      if (this._fields.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method fieldReorder()\n    *\n    * reorder the fields in our object\n    *\n    * @param {ABField} field The instance of the field to remove.\n    * @return {Promise}\n    */\n   fieldReorder(sourceId, targetId) {\n      // We know what was moved and what item it has replaced/pushed forward\n      // so first we want to splice the item moved out of the array of fields\n      // and store it so we can put it somewhere else\n      let itemMoved = null;\n      let oPos = 0; // original position\n      for (var i = 0; i < this._fields.length; i++) {\n         if (this._fields[i].columnName == sourceId) {\n            itemMoved = this._fields[i];\n            this._fields.splice(i, 1);\n            oPos = i;\n            break;\n         }\n      }\n      // once we have removed/stored it we can find where its new position\n      // will be by looping back through the array and finding the item it\n      // is going to push forward\n      for (var j = 0; j < this._fields.length; j++) {\n         if (this._fields[j].columnName == targetId) {\n            // if the original position was before the new position we will\n            // follow webix's logic that the drop should go after the item\n            // it was placed on\n            if (oPos <= j) {\n               j++;\n            }\n            this._fields.splice(j, 0, itemMoved);\n            break;\n         }\n      }\n\n      return this.save();\n   }\n\n   /**\n    * @method fieldSave()\n    *\n    * save the given ABField in our ._fields array and persist the current\n    * values.\n    *\n    * @param {ABField} field The instance of the field to save.\n    * @return {Promise}\n    */\n   fieldSave(field) {\n      var isIncluded = this.fieldByID(field.id);\n      if (!isIncluded) {\n         this._fields.push(field);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method fieldAdd()\n    *\n    * save the given ABField in our ._fields array and persist the current\n    * values if they changed.\n    *\n    * @param {ABField} field The instance of the field to save.\n    * @return {Promise}\n    */\n   fieldAdd(field) {\n      var isIncluded = this.fieldByID(field.id);\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._fields.push(field);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method imageFields()\n    *\n    * return an array of the ABFieldImage fields this object has.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array}\n    */\n   imageFields(fn = () => true) {\n      return this.fields((f) => f && f.key == \"image\").filter(fn);\n   }\n\n   /**\n    * @method multilingualFields()\n    *\n    * return an array of columnnames that are multilingual.\n    *\n    * @return {array}\n    */\n   multilingualFields() {\n      return this.fields((f) => f && f.isMultilingual).map((f) => f.columnName);\n   }\n\n   /**\n    * @method indexes()\n    *\n    * return an array of all the ABIndex for this ABObject.\n    *\n    * @param filter {Object}\n    *\n    * @return {array}\n    */\n   indexes(filter = () => true) {\n      return this._indexes.filter(filter);\n   }\n\n   /**\n    * @method indexByID()\n    * return the object's index from the given {ABIndex.id}\n    * @param {string} id\n    *        the id of the ABIndex to return.\n    * @return {ABIndex}\n    */\n   indexByID(id) {\n      return this.indexes((f) => f.id == id)[0];\n   }\n\n   /**\n    * @method indexRemove()\n    * remove the given ABIndex from our ._indexes array and persist the current\n    * values.\n    * @param {ABIndex} index\n    * @return {Promise}\n    */\n   indexRemove(index) {\n      var origLen = this._indexes.length;\n      this._indexes = this.indexes(function (idx) {\n         return idx.id != index.id;\n      });\n\n      // persist our changes if something changed.\n      if (origLen != this._indexes.length) {\n         return this.save();\n      }\n\n      // nothing was removed, so continue on.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method indexSave()\n    * save the given ABIndex in our ._indexes array and persist the current\n    * values.\n    * @param {ABIndex} index\n    * @return {Promise}\n    */\n   indexSave(index) {\n      var isIncluded = this.indexByID(index.id);\n      if (!isIncluded) {\n         this._indexes.push(index);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   ///\n   /// Working with data from server\n   ///\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObject.\n    */\n   model() {\n      var model = new ABModel(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(ABObjectCore.contextKey());\n      model.contextValues({ id: this.id });\n\n      return model;\n   }\n\n   ///\n   /// URL\n   ///\n\n   /**\n    * @method urlRest\n    * return the url to access the data for this object.\n    * @return {string}\n    */\n   urlRest() {\n      return `/app_builder/model/${this.id}`;\n   }\n\n   /**\n    * @method urlRestBatch\n    * return the url to use for batch creates for this object\n    * @return {string}\n    */\n   urlRestBatch() {\n      return `/app_builder/batch/model/${this.id}`;\n   }\n\n   /**\n    * @method urlRestItem\n    * return the url to access the data for an instance of this object.\n    * @return {string}\n    */\n   urlRestItem(id) {\n      return `/app_builder/model/${this.id}/${id}`;\n   }\n\n   /**\n    * @method urlRestLog\n    * return the url to access the logs for this ABObject.\n    * @return {string}\n    */\n   urlRestLog() {\n      return `/app_builder/object/${this.id}/track`;\n   }\n\n   /**\n    * @method urlRestRefresh\n    * return the url to signal a refresh for this object.\n    * @return {string}\n    */\n   urlRestRefresh() {\n      return `/app_builder/model/refreshobject/${this.id}`;\n   }\n\n   /**\n    * @method urlCount\n    * return the url to count of data for this object.\n    * @return {string}\n    */\n   urlRestCount() {\n      return `/app_builder/model/${this.id}/count`;\n   }\n\n   ///\n   ///\tObject Workspace Settings\n   ///\n   get workspaceSortFields() {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) return currView.sortFields;\n         else return null;\n      }\n      // old version\n      else {\n         return this.objectWorkspace.sortFields;\n      }\n   }\n\n   set workspaceSortFields(fields) {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) currView.sortFields = fields;\n      }\n      // old version\n      else {\n         this.objectWorkspace.sortFields = fields;\n      }\n   }\n\n   get workspaceFilterConditions() {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) return currView.filterConditions;\n         else return null;\n      }\n      // old version\n      else {\n         return this.objectWorkspace.filterConditions;\n      }\n   }\n\n   set workspaceFilterConditions(filterConditions) {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) currView.filterConditions = filterConditions;\n      }\n      // old version\n      else {\n         this.objectWorkspace.filterConditions = filterConditions;\n      }\n   }\n\n   get workspaceFrozenColumnID() {\n      return this.objectWorkspace.frozenColumnID;\n   }\n\n   set workspaceFrozenColumnID(id) {\n      this.objectWorkspace.frozenColumnID = id;\n   }\n\n   get workspaceHiddenFields() {\n      return this.objectWorkspace.hiddenFields || [];\n   }\n\n   set workspaceHiddenFields(fields) {\n      this.objectWorkspace.hiddenFields = fields;\n   }\n\n   /**\n    * @method isReadOnly\n    *\n    * @return {boolean}\n    */\n   get isReadOnly() {\n      return this.isImported || this.isExternal || this.readonly;\n   }\n\n   /**\n    * @method defaultValues\n    * Collect a hash of key=>value pairs that represent the default values\n    * from each of our fields.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   defaultValues() {\n      var values = {};\n      this.fields().forEach((f) => {\n         f.defaultValue(values);\n      });\n\n      return values;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an array of any invalid\n    * value errors.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   isValidData(/* data */) {\n      // NOTE: the platform needs to define a way to verify the data\n      console.warn(\"Platform.ABObject.isValidData() missing\");\n      return true;\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this object. This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this object.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      console.error(\"Who is calling this?\");\n\n      if (this.application == null) return null;\n\n      return this.application.urlObject(acrossApp) + this.id;\n   }\n\n   /**\n    * @method urlField\n    * return a string pointer to this object's fields\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlField(acrossApp) {\n      console.error(\"Who is calling this?\");\n\n      return this.urlPointer(acrossApp) + \"/_fields/\";\n   }\n\n   /**\n    * @method PK\n    * return a string of the primary column name\n    *\n    * @return {string}\n    */\n   PK() {\n      return this.primaryColumnName || \"uuid\";\n   }\n\n   remoteCreate(data) {\n      console.log(\n         \"object[\" + this.name + \"] received a remoteCreate() with data:\",\n         data\n      );\n   }\n\n   /**\n    * @method clone\n    * return a clone of ABObject\n    *\n    * @return {ABObjectBase}\n    */\n   clone() {\n      // ignore properties who're spend much performance\n      // NOTE: do not clone them. Just copy reference\n      let ignoreProps = [\"application\", \"_fields\"];\n\n      let cloneOne = JSON.parse(JSON.stringify(this));\n\n      ignoreProps.forEach((prop) => {\n         cloneOne[prop] = this[prop];\n      });\n\n      return cloneOne;\n   }\n\n   /**\n    * @method minRelationData()\n    * return an array of ABField.columnNames that make up\n    * the minimum fields required to display this objects __RELATION\n    * data in our UI widgets.\n    */\n   minRelationData() {\n      var fields = [this.PK()];\n\n      if (this.multilingualFields().length > 0) {\n         fields.push(\"translations\");\n      }\n\n      var labelData = this.labelFormat || \"\";\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            fields.push(field.columnName);\n         });\n      }\n      // Default defining label\n      else {\n         const defaultFld = this.fields((f) => f.fieldUseAsLabel())[0];\n         if (defaultFld) fields.push(defaultFld.columnName);\n      }\n\n      // System requires to include number field values\n      // because they are used on Formula/Calculate fields on client side\n      fields = fields.concat(\n         this.fields((f) => f.key == \"number\").map((f) => f.columnName)\n      );\n\n      return fields;\n   }\n\n   // Display data with label format of object\n   displayData(rowData) {\n      if (rowData == null) return \"\";\n\n      // translate multilingual\n      //// TODO: isn't this a MLObject??  use this.translate()\n      var mlFields = this.multilingualFields();\n      this.translate(rowData, rowData, mlFields);\n\n      var labelData = this.labelFormat || \"\";\n\n      // default label\n      if (!labelData && this.fields().length > 0) {\n         var defaultField = this.fields((f) => f.fieldUseAsLabel())[0];\n         if (defaultField) labelData = \"{\" + defaultField.id + \"}\";\n         else {\n            // if label is empty, then show .id\n            if (!labelData.trim()) {\n               let labelSettings = this.labelSettings || {};\n               if (labelSettings && labelSettings.isNoLabelDisplay) {\n                  labelData = L(labelSettings.noLabelText || \"[No Label]\");\n               } else {\n                  // show id of row\n                  labelData = `${\n                     this.AB.rules.isUUID(rowData.id) ? \"ID: \" : \"\"\n                  }${rowData.id}`;\n               }\n            }\n         }\n      }\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      // Using rawString to catch actual values we are pulling out.\n      // the label data might have additional characters \"-\" and such that will\n      // remain, and doing a .trim() on that wont catch that the label data\n      // is actually empty.\n      let rawString = \"\";\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            let valField = field.format(rowData) || \"\";\n            labelData = labelData.replace(colId, valField);\n            rawString = `${rawString}${valField}`;\n         });\n      }\n\n      // if label is empty, then show .id\n      if (!rawString.trim()) {\n         let labelSettings = this.labelSettings || {};\n         if (labelSettings && labelSettings.isNoLabelDisplay) {\n            labelData = L(labelSettings.noLabelText || \"[No Label]\");\n         } else {\n            // show id of row\n            labelData = `${this.AB.rules.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`;\n         }\n      }\n\n      return labelData;\n   }\n\n   /**\n    * @method whereCleanUp()\n    * Parse through the current where condition and remove any null or\n    * empty logical blocks.\n    * @param {obj} curr\n    *        1) The current where condition in ABQuery Format:\n    *        {\n    *           glue: [AND, OR],\n    *           rules: [ {rule} ]\n    *        }\n    *        or 2) The current {rule} to validate\n    *        {\n    *          key:{string},\n    *          rule:{string},\n    *          vlaue:{mixed}\n    *        }\n    * @return {ABQuery.where} / { Rule }\n    */\n   whereCleanUp(curr) {\n      if (curr) {\n         if (curr.glue && curr.rules) {\n            // SENTRY Error AB-APPBUILDER-4H\n            // \"curr.rules.forEach is not a function\"\n            // curr.rules is supposed to be an array. If we are not\n            // getting that, then let's send an alert to figure out what\n            // is happening here:\n            if (!Array.isArray(curr.rules)) {\n               // what is this entry?\n               let err = new Error(\n                  `ABObjectCore.whereCleanUP(): Sentry Error: AB-APPBUILDER-4H: current rule is not properly formed: ${JSON.stringify(\n                     curr\n                  )}`\n               );\n               this.AB.notify.developer(err, { curr });\n            }\n\n            // this is a logical Block (AND, OR)\n            // we need to filter the children\n            let newValue = { glue: curr.glue, rules: [] };\n            curr.rules.forEach((r) => {\n               let cleanRule = this.whereCleanUp(r);\n               // don't add values that didn't pass\n               if (cleanRule) {\n                  newValue.rules.push(cleanRule);\n               }\n            });\n\n            // if we have a non empty block, then return it:\n            if (newValue.rules.length > 0) {\n               return newValue;\n            }\n\n            // this isn't really a valid conditional, so null\n            return null;\n         }\n\n         // This is a specific rule, that isn't null so:\n         // if it isn't {}, then return it\n         if (Object.keys(curr).length > 0) return curr;\n\n         // otherwise we skip this as well\n         return null;\n      }\n      return null;\n   }\n};\n","//\n// ABObjectQuery\n//\n// A type of Object in our system that is based upon a complex relationship of multiple\n// existing Objects.\n//\n// In the QueryBuilder section of App Builder, a new Query Object can be created.\n// An initial Object can be chosen from our current list of Objects. After that, additional Objects\n// and a specified join type can be specified.\n//\n// A list of fields from each specified Object can also be included as the data to be returned.\n//\n// A where statement is also part of the definition.\n//\n\nvar ABObject = require(\"../platform/ABObject\");\nvar ABModelQuery = require(\"../platform/ABModelQuery\");\n\nmodule.exports = class ABObjectQueryCore extends ABObject {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      /*\n{\n\tid: uuid(),\n\tname: 'name',\n\tlabelFormat: 'xxxxx',\n\tisImported: 1/0,\n\turlPath:'string',\n\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t// to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n\ttranslations:[\n\t\t{}\n\t],\n\n\n\n\t// ABOBjectQuery Specific Changes\n\t// we store a list of fields by their urls:\n\tfields:[\n\t\t{\n\t\t\talias: \"\",\n\t\t\tfieldURL:'#/url/to/field',\n\t\t}\n\t],\n\n\n\t// we store a list of joins:\n\tjoins:{\n\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n\t\tobjectURL:\"#/...\",\t\t\t\t\t// the base object of the join\n\t\tlinks: [\n\t\t\t{\n\t\t\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n\t\t\t\tfieldID: \"uuid\",\t\t\t\t\t// the connection field of the object we are joining with.\n\t\t\t\ttype:[left, right, inner, outer]\t// join type: these should match the names of the knex methods\n\t\t\t\t\t\t=> innerJoin, leftJoin, leftOuterJoin, rightJoin, rightOuterJoin, fullOuterJoin\n\t\t\t\tlinks: [\n\t\t\t\t\t...\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\n\t},\n\n\n\twhere: { QBWhere }\n}\n*/\n      this.isQuery = true;\n      // {bool}\n      // a property to mark the difference between an ABObject and ABObjectQuery.\n\n      this.__missingObject = this.__missingObject ?? [];\n      // {array} fieldInfo\n      // the field info that defined an object we can't find.\n\n      this.__missingFields = this.__missingFields ?? [];\n      // {array} [ { objID, fieldID }, ... ]\n      // a list of field definitions that we are unable to resolve.\n\n      this.__cantFilter = [];\n      // {array} [ {field, fieldInfo}, ... ]\n      // a list of field that were assigned but can't be used for filtering.\n\n      this.__duplicateFields = [];\n      // {array} [ {fieldInfo}, ... ]\n      // a list of duplicate field definitions.\n\n      this.__linkProblems = [];\n      // {array} [ { message, data }, ...]\n      // a list of warning messages related to link objects\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   /**\n    * contextKey()\n    * returns a unique key that represents a query in\n    * our networking job resolutions.\n    * @return {string}\n    */\n   static contextKey() {\n      return \"query\";\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.type = \"query\";\n\n      // populate connection objects\n      // this._objects = {};\n      // this.obj2Alias = attributes.obj2Alias || {};\n\n      this.alias2Obj = {}; // this gets built in the .importJoins()\n      // { \"alias\" : object.id }\n      // this is a lookup hash of a referenced alias to the Object it\n      // references.\n\n      this.objectIDs = [];\n      // {array}  of ABObject.id s that are referenced by this query.\n      // this is how we limit our searches on objects.\n      // this gets built in the .importJoins();\n\n      this.viewName = attributes.viewName || \"\";\n      // {string}\n      // this is the SQL tablename of where our Query will store it's\n      // view data.\n\n      // import all our ABObjects\n      this.importJoins(attributes.joins || {});\n\n      // import fields after joins are imported\n      this._fields = null;\n      this.importFields(attributes.fields || []);\n      // {array} [ { alias, field}, {},... ]\n      // an array of field definition structures that mark what fields this\n      // query is interested in pulling data from.\n      //    .alias : {string} matches the alias of the ABObject that the field\n      //             is from\n      //    .field : {ABFieldXXX} the link to the actual ABField instance\n\n      // Import our Where condition\n      this.where = attributes.where || {}; // .workspaceFilterConditions\n      // Fix default where.glue value\n      if (\n         this.where &&\n         !this.where.glue &&\n         this.where.rules &&\n         this.where.rules.length > 0\n      )\n         this.where.glue = \"and\";\n\n      this._objectWorkspaceViews = attributes.objectWorkspaceViews || {};\n\n      this.settings = this.settings || {};\n\n      if (attributes && attributes.settings) {\n         // convert from \"0\" => true/false\n         this.settings.grouping = JSON.parse(\n            attributes.settings.grouping || false\n         );\n         this.settings.hidePrefix = JSON.parse(\n            attributes.settings.hidePrefix || false\n         );\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABObjectQuery instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var result = super.toObj();\n\n      result.viewName = this.viewName;\n\n      result.joins = this.exportJoins();\n      result.fields = this.exportFields();\n      result.where = this.where; // .workspaceFilterConditions\n\n      result.settings = this.settings;\n\n      return result;\n   }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method importFields\n    * instantiate a set of fields from the given attributes.\n    * Our attributes are a set of field URLs That should already be created in their respective\n    * ABObjects.\n    * @param {array} fieldSettings The different field urls for each field\n    */\n   importFields(fieldSettings) {\n      var newFields = [];\n      (fieldSettings || []).forEach((fieldInfo) => {\n         if (fieldInfo == null) return;\n\n         // pull object by alias name\n         let object = this.objectByAlias(fieldInfo.alias);\n\n         // Pull object from .AB\n         if (!object && this.AB) {\n            object = this.AB.objectByID(fieldInfo.objectID);\n\n            // keep\n            if (object) {\n               this._objects = this._objects || {};\n               this._objects[fieldInfo.alias] = object;\n            }\n         }\n\n         if (!object) {\n            this.__missingObject = this.__missingObject ?? [];\n            this.__missingObject.push(fieldInfo);\n            return;\n         }\n\n         let field = object.fieldByID(fieldInfo.fieldID);\n         if (!field) {\n            this.__missingFields = this.__missingFields ?? [];\n            this.__missingFields.push({\n               objID: object.id,\n               fieldID: fieldInfo.fieldID,\n               fieldInfo,\n            });\n            return;\n         }\n\n         if (!this.canFilterField(field)) {\n            this.__cantFilter = this.__cantFilter ?? [];\n            this.__cantFilter.push({ field, fieldInfo });\n         }\n\n         // check duplicate\n         let isNew =\n            newFields.filter(\n               (f) =>\n                  f.alias == fieldInfo.alias && f.field.id == fieldInfo.fieldID\n            ).length < 1;\n\n         if (!isNew) {\n            this.__duplicateFields = this.__duplicateFields ?? [];\n            this.__duplicateFields.push({ fieldInfo });\n         }\n\n         // should be a field of base/join objects\n         if (field && this.canFilterField(field) && isNew) {\n            // add alias to field\n            // create new instance of this field:\n            var def = field.toObj();\n            let clonedField = new field.constructor(def, field.object);\n\n            clonedField.alias = fieldInfo.alias;\n\n            let alias = fieldInfo.alias;\n            if (Array.isArray(this.joins())) {\n               // NOTE: query v1\n               alias = field.object.name;\n            }\n\n            newFields.push({\n               alias: alias,\n               field: clonedField,\n            });\n         }\n      });\n      this._fields = newFields;\n   }\n\n   /**\n    * @method exportFields\n    * convert our array of fields into a settings object for saving to disk.\n    * @return {array}\n    */\n   exportFields() {\n      var currFields = [];\n      this._fields.forEach((fieldInfo) => {\n         currFields.push({\n            alias: fieldInfo.alias,\n            objectID: fieldInfo.field.object.id,\n            fieldID: fieldInfo.field.id,\n         });\n      });\n\n      // let's persist the faulty settings so a developer or builder can\n      // review and fix it by hand.\n      (this.__missingObject || []).forEach((f) => {\n         currFields.push(f);\n      });\n\n      (this.__cantFilter || []).forEach((f) => {\n         currFields.push(f.fieldInfo);\n      });\n\n      return currFields;\n   }\n\n   /**\n    * @method fields()\n    *\n    * Support the ABObject api by returning a list of fields relevant\n    * to this ABObjectQuery.\n    *\n    * @return {array}\n    */\n   fields(fn = () => true) {\n      if (!fn) fn = () => true;\n      return this._fields.map((f) => f.field).filter(fn);\n   }\n\n   ///\n   /// Joins & Objects\n   ///\n\n   /**\n    * @method joins()\n    *\n    * return an object of joins for this Query.\n    *\n    * @return {Object}\n    */\n   joins() {\n      return this._joins || {};\n   }\n\n   /**\n    * @method objects()\n    *\n    * return an array of all the relevant ABObjects for this Query.\n    *\n    * @return {array}\n    */\n   objects(fn = () => true) {\n      // FOR proper expected operation, this fn must only return object\n      // matches for which this ABQuery is managing objects:\n\n      return this.AB.objects((o) => this.objectIDs.indexOf(o.id) > -1).filter(\n         fn\n      );\n   }\n\n   /**\n    * @method objectAlias()\n    *\n    * return alias of of ABObjects.\n    *\n    * @return {string}\n    */\n   objectAlias(objectId) {\n      let result = null;\n\n      Object.keys(this.alias2Obj || {}).forEach((alias) => {\n         if (!result && this.alias2Obj[alias] == objectId) {\n            result = alias;\n         }\n      });\n\n      return result;\n   }\n\n   /**\n    * @method objectBase\n    * return the origin object\n    *\n    * @return {ABObject}\n    */\n   objectBase() {\n      if (!this._joins.objectID) return null;\n\n      return this.AB.objectByID(this._joins.objectID) || null;\n   }\n\n   /**\n    * @method objectByAlias()\n    * return ABObject search by alias name\n    *\n    * @param {string} - alias name\n    * @return {ABClassObject}\n    */\n   objectByAlias(alias) {\n      var objID = this.alias2Obj[alias];\n      if (objID) {\n         return this.objects((o) => o.id == objID)[0];\n      }\n      return null;\n   }\n\n   /**\n    * @method objectByID()\n    * return ABObject search by ID\n    * @param {string} objID\n    *        The requested {ABObject}.id of the object to return.\n    * @return {ABObject} | null\n    */\n   objectByID(objID) {\n      if (objID) {\n         return this.objects((o) => o.id == objID)[0];\n      }\n      return null;\n   }\n\n   /**\n    * @method links()\n    *\n    * return an array of links for this Query.\n    *\n    * @return {array}\n    */\n   links(filter = () => true) {\n      return (this._links || []).filter(filter);\n   }\n\n   /**\n    * @method importJoins\n    * instantiate a set of joins from the given attributes.\n    * Our joins contain a set of ABObject URLs that should already be created in our Application.\n    * @param {Object} settings The different field urls for each field\n    *\t\t\t\t\t{ }\n    */\n   importJoins(settings) {\n      // copy join settings\n      this._joins = this.AB.cloneDeep(settings);\n\n      var uniqueObjectIDs = {};\n      // { obj.id : obj.id }\n      // a hash of object.ids for all the relevant ABObjects necessary for this\n      // ABObjectQuery\n\n      var newLinks = [];\n      // {array} of link definitions\n      // build the operating values for this._links\n\n      let storeObject = (object, alias) => {\n         if (!object) return;\n\n         // var inThere = newObjects.filter(obj => obj.id == object.id && obj.alias == alias ).length > 0;\n         // if (!inThere) {\n         // newObjects[alias] = object;\n         // this.obj2Alias[object.id] = alias;\n         this.alias2Obj[alias] = object.id;\n         uniqueObjectIDs[object.id] = object.id;\n         // newObjects.push({\n         // \talias: alias,\n         // \tobject: object\n         // });\n         // }\n      };\n\n      let storeLinks = (links) => {\n         (links || []).forEach((link) => {\n            // var inThere = newLinks.filter(l => l.fieldID == link.fieldID).length > 0;\n            // if (!inThere) {\n            newLinks.push(link);\n            // }\n         });\n      };\n\n      this.__linkProblems = this.__linkProblems ?? [];\n\n      let processJoin = (baseObject, joins) => {\n         if (!baseObject) return;\n\n         (joins || []).forEach((link) => {\n            // Convert our saved settings:\n            //\t{\n            //\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n            //\t\tobjectID: \"uuid\",\t\t\t\t\t// id of the connection object\n            //\t\tlinks: [\n            //\t\t\t{\n            //\t\t\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n            //\t\t\t\tfieldID: \"uuid\",\t\t\t\t\t// uhe connection field of the object we are joining with.\n            //\t\t\t\ttype:[left, right, inner, outer]\t// join type: these should match the names of the knex methods\n            //\t\t\t\t\t\t=> innerJoin, leftJoin, leftOuterJoin, rightJoin, rightOuterJoin, fullOuterJoin\n            //\t\t\t\tlinks: [\n            //\t\t\t\t\t...\n            //\t\t\t\t]\n            //\t\t\t}\n            //\t\t]\n            //\t},\n\n            var linkField = baseObject.fieldByID(link.fieldID);\n            if (!linkField) {\n               this.__linkProblems.push({\n                  message: `could not resolve our linkField[${link.fieldID}]`,\n                  data: {\n                     link,\n                  },\n               });\n               return;\n            }\n\n            // track our linked object\n            var linkObject = this.AB.objectByID(linkField.settings.linkObject);\n            if (!linkObject) {\n               this.__linkProblems.push({\n                  message: `could not resolve our linked field -> linkObject[${linkField.settings.linkObject}]`,\n                  data: {\n                     link,\n                  },\n               });\n               return;\n            }\n\n            storeObject(linkObject, link.alias);\n\n            storeLinks(link.links);\n\n            processJoin(linkObject, link.links);\n         });\n      };\n\n      // if (!this._joins.objectURL)\n      // \t// TODO: this is old query version\n      // \treturn;\n\n      // store the root object\n      var rootObject = this.objectBase();\n      if (!rootObject) {\n         // this._objects = newObjects;\n         this.__linkProblems.push({\n            message: \"could not resolve our base object\",\n            data: {\n               objectID: this._joins?.objectID,\n            },\n         });\n         return;\n      }\n\n      storeObject(rootObject, \"BASE_OBJECT\");\n\n      storeLinks(settings.links);\n\n      processJoin(rootObject, settings.links);\n\n      // this._objects = newObjects;\n      this._links = newLinks;\n      this.objectIDs = Object.keys(uniqueObjectIDs);\n   }\n\n   /**\n    * @method exportJoins\n    * save our list of objects into our format for persisting on the server\n    * @param {array} settings\n    */\n   exportJoins() {\n      return this.AB.cloneDeep(this._joins || {});\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObjectQuery.\n    */\n   model() {\n      var model = new ABModelQuery(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(this.constructor.contextKey());\n      model.contextValues({ id: this.id }); // the datacollection.id\n\n      return model;\n   }\n\n   /**\n    * @method canFilterObject\n    * evaluate the provided object to see if it can directly be filtered by this\n    * query.\n    * @param {ABObject} object\n    * @return {bool}\n    */\n   canFilterObject(object) {\n      if (!object) return false;\n\n      // I can filter this object if it is one of the objects in my joins\n      return (\n         this.objects((obj) => {\n            return obj.id == object.id;\n         }).length > 0\n      );\n   }\n\n   /**\n    * @method canFilterField\n    * evaluate the provided field to see if it can be filtered by this\n    * query.\n    * @param {ABObject} object\n    * @return {bool}\n    */\n   canFilterField(field) {\n      if (!field) return false;\n\n      // I can filter a field if it's object OR the object it links to can be filtered:\n      let object = field.object;\n      // Transition:\n      // let linkedObject = this.objects(\n      //    (obj) => obj.id == field.settings.linkObject\n      // )[0];\n      var linkedObject = field.datasourceLink;\n\n      return this.canFilterObject(object) || this.canFilterObject(linkedObject);\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this object. This url pointer\n    * should be able to be used by this.AB.urlResolve() to return\n    * this object.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      console.error(\n         \"ABQueryCore.urlPointer(): Depreciated: Where is this being called?\"\n      );\n      return this.application.urlQuery(acrossApp) + this.id;\n   }\n\n   /**\n    * @method isGroup\n    *\n    * @return {boolean}\n    */\n   get isGroup() {\n      return this.settings.grouping || false;\n   }\n\n   /**\n    * @method isReadOnly\n    *\n    * @return {boolean}\n    */\n   get isReadOnly() {\n      return true;\n   }\n\n   /**\n    * @method isDisabled()\n    * check this contains removed objects or fields\n    *\n    * @return {boolean}\n    */\n   isDisabled() {\n      return this.disabled || false;\n   }\n\n   get workspaceFilterConditions() {\n      let filterConditions = super.workspaceFilterConditions;\n      if (\n         filterConditions == null ||\n         filterConditions.rules == null ||\n         !filterConditions.rules.length\n      ) {\n         filterConditions = this.where;\n      }\n\n      return filterConditions;\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nconst ABProcessTaskSubProcess = require(\"../platform/process/tasks/ABProcessTaskSubProcess\");\n\nmodule.exports = class ABProcessCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      this.elements().forEach((e) => {\n         e.onProcessReady();\n      });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      type: 'xxxxx',\n      json: \"{json}\"\n    }\n    */\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || \"process\";\n      this.xmlDefinition = attributes.xmlDefinition || null;\n\n      // this.json = attributes.json || null;\n      let currElements = this._elements || {};\n      this._elements = {};\n      (attributes.elementIDs || []).forEach((eID) => {\n         var ele = this.AB.processElementNew(eID, this);\n         if (ele) {\n            this._elements[eID] = ele;\n         } else {\n            // current eID isn't one of our definitions yet, so might be\n            // a temporary .diagramID from an unsaved task:\n            if (currElements[eID]) {\n               this._elements[eID] = currElements[eID];\n            } else {\n               this.emit(\n                  \"warning\",\n                  `P[${this.name}] is referencing an unknown process element id[${eID}]`,\n                  { process: this.id, eID }\n               );\n            }\n         }\n      });\n\n      this._connections = attributes.connections || {};\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"id\", \"name\", \"xmlDefinition\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      data.elementIDs = [];\n      for (var e in this._elements) {\n         // NOTE: when a task is initially created, it doesn't have an .id\n         // so we need to reference it by it's .diagramID\n         data.elementIDs.push(\n            this._elements[e].id ?? this._elements[e].diagramID\n         );\n      }\n\n      data.connections = this._connections;\n\n      // data.participantIDs = [];\n      // for (var p in this._participants) {\n      //     data.participantIDs.push(this._participants[p].id);\n      // }\n\n      return data;\n   }\n\n   //\n   // XML Model\n   //\n\n   /**\n    * modelDefinition()\n    * return the current xml definition for this process\n    * @return {string}\n    */\n   modelDefinition() {\n      return this.xmlDefinition;\n   }\n\n   /**\n    * modelNew()\n    * initialze our xml definition to a new state.\n    * @return {string}\n    */\n   modelNew() {\n      this.xmlDefinition = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<bpmn2:definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:bpmn2=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:di=\"http://www.omg.org/spec/DD/20100524/DI\" xsi:schemaLocation=\"http://www.omg.org/spec/BPMN/20100524/MODEL BPMN20.xsd\" id=\"process-def-${this.id}\" targetNamespace=\"http://bpmn.io/schema/bpmn\">\n  <bpmn2:process id=\"Process_1\" isExecutable=\"true\">\n    <bpmn2:startEvent id=\"StartEvent_1\"/>\n  </bpmn2:process>\n  <bpmndi:BPMNDiagram id=\"BPMNDiagram_1\">\n    <bpmndi:BPMNPlane id=\"BPMNPlane_1\" bpmnElement=\"Process_1\">\n      <bpmndi:BPMNShape id=\"_BPMNShape_StartEvent_2\" bpmnElement=\"StartEvent_1\">\n        <dc:Bounds height=\"36.0\" width=\"36.0\" x=\"412.0\" y=\"240.0\"/>\n      </bpmndi:BPMNShape>\n    </bpmndi:BPMNPlane>\n  </bpmndi:BPMNDiagram>\n</bpmn2:definitions>`;\n\n      //// TODO: create a default Start Task here??\n   }\n\n   /**\n    * modelUpdate()\n    * update our xml definition from the provided description.\n    * @param {string} xml  bpmn2 xml definition from our modeler.\n    * @return {string}\n    */\n   modelUpdate(xml) {\n      this.xmlDefinition = xml;\n   }\n\n   //\n   // Diagram Elements\n   //\n\n   /**\n    * connections()\n    * return an array of connections that describe the relationships between\n    * our process elements.\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return [{SimpleConnectionObj}]\n    */\n   connections(fn = () => true) {\n      var allConnections = Object.keys(this._connections).map((e) => {\n         return this._connections[e];\n      });\n\n      // If parent, merge connections\n      if (this.process && this.key === \"SubProcess\") {\n         allConnections = allConnections.concat(this.process.connections());\n      }\n\n      return allConnections.filter(fn);\n   }\n\n   /**\n    * connectionForDiagramID()\n    * return the connection for the given diagram id\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionForDiagramID(dID) {\n      return this.connections((t) => {\n         return t.id == dID;\n      })[0];\n   }\n\n   /**\n    * connectionsIncoming()\n    * return the connections that are entering this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsIncoming(dID) {\n      return this.connections((c) => {\n         return c.to == dID;\n      });\n   }\n\n   /**\n    * connectionsOutgoing()\n    * return the connections that are leaving this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsOutgoing(dID) {\n      return this.connections((c) => {\n         return c.from == dID;\n      });\n   }\n\n   /**\n    * connectionRemove()\n    * remove the connection info for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionRemove(element) {\n      delete this._connections[element.id];\n   }\n\n   /**\n    * connectionSimplyElement()\n    * given a BPMN diagram element, return a simplified object that describes\n    * the connection between two elements.\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    * @return {SimpleConnectionObj}\n    *        .id : {string} diagram id of the connection element\n    *        .type : {string} the type of connection\n    *        .from : {string} the diagram id of the source element\n    *        .to : {string} the diagram id of the dest element\n    */\n   connectionSimplyElement(element) {\n      var bo = element.businessObject;\n      var from = null;\n      if (bo.sourceRef) {\n         from = bo.sourceRef.id;\n      }\n\n      var to = null;\n      if (bo.targetRef) {\n         to = bo.targetRef.id;\n      }\n\n      var connection = {\n         id: element.id,\n         type: element.type,\n         from: from,\n         to: to,\n      };\n      return connection;\n   }\n\n   /**\n    * connectionUpsert()\n    * add or update the connection information for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionUpsert(element) {\n      var simpleConn = this.connectionSimplyElement(element);\n      if (simpleConn.from && simpleConn.to && element.parent) {\n         this._connections[simpleConn.id] = simpleConn;\n      } else {\n         // this connection is no longer connecting anything thing.\n         // it is being removed.\n         this.connectionRemove(element);\n      }\n   }\n\n   /**\n    * elements()\n    * return an array of elements that match the given filter (or all elements\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABProcessTask, ABProcessParticipant, etc...]}\n    */\n   elements(fn = () => true) {\n      var allElements = Object.keys(this._elements).map((e) => {\n         return this._elements[e];\n      });\n      return allElements.filter(fn);\n   }\n\n   /**\n    * elementAdd()\n    * insert an element to be tracked by this process.\n    * @param {ABProcessElement} element\n    *        the full instance of an ABProcessElement to track.\n    */\n   elementAdd(element) {\n      this._elements[element.id || element.diagramID] = element;\n   }\n\n   /**\n    * elementByID()\n    * return the {ABProcessElement} that has the given .id\n    * @param {string} id\n    * @return {ABProcess[OBJ]}\n    */\n   elementByID(id) {\n      return this._elements[id] ?? null;\n   }\n\n   /**\n    * elementForDiagramID()\n    * return the object that is tied to the given xml diagram ID.\n    * @param {string} dID the diagram ID\n    * @return {ABProcess[OBJ]}\n    */\n   elementForDiagramID(dID) {\n      return this.elements((t) => {\n         return t.diagramID == dID;\n      })[0];\n   }\n\n   /**\n    * elementRemove()\n    * remove an element from being tracked by this process.\n    * @param {obj|ABProcessElement} def\n    *        a definition of, or full Object instance of the ABProcessElement\n    *        to remove.\n    */\n   elementRemove(def) {\n      delete this._elements[def.id || def.diagramID];\n   }\n\n   /**\n    * isTriggeredBy()\n    * scan our tasks and see if we have a \"trigger\" task that responds to\n    * the provided key.\n    * @param {string} key the trigger key\n    * @return {bool}\n    */\n   isTriggeredBy(key) {\n      return this.taskForTriggerKey(key) != null;\n   }\n\n   /**\n    * connectionNextTask()\n    * return the ABProcessElement(s) that are after the given Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionNextTask(currElement) {\n      var elements = [];\n      var nextConnections = this.connections((c) => {\n         return c.from == currElement.diagramID;\n      });\n      nextConnections.forEach((c) => {\n         var element = this.elements((e) => {\n            return e.diagramID == c.to;\n         })[0];\n         if (element) {\n            elements.push(element);\n         }\n      });\n      return elements;\n   }\n\n   /**\n    * connectionPreviousTask()\n    * return the ABProcessElement(s) that was a previous Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionPreviousTask(currElement) {\n      var elements = [];\n      var prevConnections = this.connections((c) => {\n         return c.to == currElement.diagramID;\n      });\n      prevConnections.forEach((c) => {\n         var element = this.elements((e) => {\n            return e.diagramID == c.from;\n         })[0];\n         if (element) {\n            elements.push(element);\n         }\n      });\n      return elements;\n   }\n\n   /**\n    * processData()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processData(currElement, params) {\n      // var tasksToAsk = this.connectionPreviousTask(currElement);\n      // var values = queryPreviousTasks(tasksToAsk, \"processData\", params, this);\n      // return values.length > 0\n      //    ? values.length > 1\n      //       ? values\n      //       : values[0]\n      //    : null;\n\n      var tasksToAsk = this.allPreviousTasks(currElement);\n      var values = queryPreviousTasks(tasksToAsk, \"processData\", params, this);\n      return values.length > 0\n         ? values.length > 1\n            ? values\n            : values[0]\n         : null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can request from other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataFields(currElement) {\n      var tasksToAsk = this.allPreviousTasks(currElement);\n      // var tasksToAsk = this.connectionPreviousTask(currElement);\n      var fields = queryPreviousTasks(\n         tasksToAsk,\n         \"processDataFields\",\n         null,\n         this\n      );\n      // Include data from the main process as well\n      if (this.key === \"SubProcess\") {\n         const parentFields = this.process.processDataFields(this);\n         if (parentFields) {\n            fields.push(...parentFields);\n         }\n      }\n      return fields.length > 0 ? fields : null;\n   }\n\n   /**\n    * allPreviousConnections()\n    * walk through the current graph and return all the previous connections\n    * leading up to the given {ProcessElement}\n    * @param {Connection} conn\n    * @param {hash} hashConn\n    *        { connection.id : connection }\n    * @return {array}\n    */\n   allPreviousConnectionsForConnection(conn, hashConn) {\n      var prevConnections = this.connections((c) => {\n         return c.to == conn.from;\n      });\n\n      prevConnections.forEach((c) => {\n         if (!hashConn[c.id]) {\n            hashConn[c.id] = c;\n            this.allPreviousConnectionsForConnection(c, hashConn);\n         }\n      });\n   }\n   allPreviousConnectionsForElement(currElement) {\n      var prevConnections = this.connections((c) => {\n         return c.to == currElement.diagramID;\n      });\n      var hashConn = {\n         /* connection.id : connection */\n      };\n      // hashConn will contains the final collection of connections.\n\n      prevConnections.forEach((c) => {\n         hashConn[c.id] = c;\n         this.allPreviousConnectionsForConnection(c, hashConn);\n      });\n\n      // TODO: detect circle backs and remove connections that\n      // resolve back to currElement\n\n      // convert our hash into an array\n      return Object.keys(hashConn).map((k) => hashConn[k]);\n   }\n\n   allPreviousTasks(currElement) {\n      var prevTasks = {}; /* task.id : task */\n      var allPreviousConnections =\n         this.allPreviousConnectionsForElement(currElement);\n      var task;\n      allPreviousConnections.forEach((conn) => {\n         // each conn has a .to and a .from => grab both tasks\n         task = this.elementForDiagramID(conn.to);\n         if (task) prevTasks[task.id] = task;\n\n         task = this.elementForDiagramID(conn.from);\n         if (task) prevTasks[task.id] = task;\n      });\n\n      var tasksToAsk = Object.keys(prevTasks)\n         .map((k) => prevTasks[k])\n         .filter((t) => t.id != currElement.id);\n\n      return tasksToAsk;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataObjects(currElement) {\n      var tasksToAsk = this.connectionPreviousTask(currElement);\n      var fields = queryPreviousTasks(\n         tasksToAsk,\n         \"processDataObjects\",\n         null,\n         this\n      );\n      return fields.length > 0 ? fields : null;\n   }\n\n   /**\n    * taskForTriggerKey()\n    * return one or more tasks that respond to the given trigger key\n    * @param {string} key a trigger key\n    * @return {[ABProcessTask,...]}\n    */\n   taskForTriggerKey(key) {\n      var trigger = this.elements((t) => {\n         return t.triggerKey == key;\n      })[0];\n      if (trigger) {\n         return trigger;\n      } else {\n         return null;\n      }\n   }\n\n   //\n   // Participants\n   //\n\n   // /**\n   //  * participants()\n   //  * return an array of participants that match the given filter (or all tasks\n   //  * if no filter is provided).\n   //  * @param {fn} fn an iterator that returns true if the provided participants\n   //  *                should be returned.\n   //  * @return {[ABProcessParticipant,...]}\n   //  */\n   // participants(fn) {\n   //     if (!fn)\n   //         fn = () => {\n   //             return true;\n   //         };\n   //     var all = Object.keys(this._participants).map((p) => {\n   //         return this._participants[p];\n   //     });\n   //     return all.filter(fn);\n   // }\n\n   // /**\n   //  * participantsForDiagramID()\n   //  * return the participant(s) that are tied to the given xml diagram ID.\n   //  * @param {string} dID the diagram ID\n   //  * @return {[ABProcessParticipant,...]}\n   //  */\n   // participantsForDiagramID(dID) {\n   //     return this.participants((p) => {\n   //         return p.diagramID == dID;\n   //     });\n   // }\n};\n\nvar queryPreviousTasks = (\n   list,\n   method,\n   param,\n   process,\n   responses,\n   processedIDs\n) => {\n   // recursive fn() to step through our graph and compile\n   // results.\n   if (typeof responses == \"undefined\") {\n      responses = [];\n   }\n   if (typeof processedIDs == \"undefined\") {\n      processedIDs = [];\n   }\n   if (list.length == 0) {\n      return responses;\n   } else {\n      // get next task\n      const task = list.shift();\n\n      // if we haven't already done task:\n      if (processedIDs.indexOf(task.diagramID) == -1) {\n         // mark this task as having been processed\n         processedIDs.push(task.diagramID);\n\n         let value = null;\n\n         // get any field's it provides\n         if (!(task instanceof ABProcessTaskSubProcess))\n            value = task[method].apply(task, param);\n\n         // value = task[method].apply(task, param);\n\n         if (value === null) value = [];\n         responses = _concat(responses, value);\n\n         // add any previous tasks to our list\n         list = _concat(list, process.connectionPreviousTask(task));\n      }\n\n      // process next Task\n      return queryPreviousTasks(\n         list,\n         method,\n         param,\n         process,\n         responses,\n         processedIDs\n      );\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nmodule.exports = class ABStepCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"name\", \"text\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      // this.elements().forEach((e) => {\n      //    e.onProcessReady();\n      // });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      type: 'xxxxx',\n      json: \"{json}\"\n    }\n    */\n      this.id = attributes.id;\n      this.name = attributes.name || \"New Step\";\n      this.type = attributes.type || \"step\";\n      this.text = attributes.text || \"\";\n      this.settings = attributes.settings || {};\n      this.settings.event = attributes?.settings?.event || \"click\";\n      this.settings.el = attributes?.settings?.el || \"\";\n      // this.xmlDefinition = attributes.xmlDefinition || null;\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // debugger;\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"id\", \"name\", \"settings\", \"type\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   // /**\n   //  * steps()\n   //  * return an array of steps that match the given filter (or all steps\n   //  * if no filter is provided).\n   //  * @param {fn} fn an iterator that returns true if the provided element\n   //  *                should be returned.\n   //  * @return {[ABStep]}\n   //  */\n   // steps(fn = () => true) {\n   //    var allSteps = Object.keys(this._steps).map((e) => {\n   //       return this._steps[e];\n   //    });\n   //    return allSteps.filter(fn);\n   // }\n\n   // /**\n   //  * stepAdd()\n   //  * insert a step to be added to this hint.\n   //  * @param {ABStep} element\n   //  *        the full instance of an ABStep to track.\n   //  */\n   // stepAdd(step) {\n   //    this._steps[step.id] = step;\n   // }\n\n   // /**\n   //  * stepByID()\n   //  * return the {ABStep} that has the given .id\n   //  * @param {string} id\n   //  * @return {ABStep[OBJ]}\n   //  */\n   // stepByID(id) {\n   //    return this._step[id] ?? null;\n   // }\n\n   // /**\n   //  * stepRemove()\n   //  * remove a step from being displayed by this hint.\n   //  * @param {obj|ABStep} def\n   //  *        a definition of, or full Object instance of the ABStep\n   //  *        to remove.\n   //  */\n   // stepRemove(def) {\n   //    delete this._steps[def.id];\n   // }\n};\n","/*\n * ABViewManager\n *\n * An interface for managing the different ABViews available in our AppBuilder.\n *\n */\n\nvar AllViews = [\n   require(\"../platform/views/ABView\"),\n   require(\"../platform/views/ABViewCarousel\"),\n   require(\"../platform/views/ABViewChart\"),\n   require(\"../platform/views/ABViewChartArea\"),\n   require(\"../platform/views/ABViewChartBar\"),\n   require(\"../platform/views/ABViewChartLine\"),\n   require(\"../platform/views/ABViewChartPie\"),\n   require(\"../platform/views/ABViewComment\"),\n   require(\"../platform/views/ABViewConditionalContainer\"),\n   require(\"../platform/views/ABViewConnectDataFilter\"),\n   require(\"../platform/views/ABViewContainer\"),\n   require(\"../platform/views/ABViewCSVExporter\"),\n   require(\"../platform/views/ABViewCSVImporter\"),\n   require(\"../platform/views/ABViewDataFilter\"),\n   require(\"../platform/views/ABViewDataSelect\"),\n   require(\"../platform/views/ABViewDataview\"),\n   require(\"../platform/views/ABViewDocxBuilder\"),\n   require(\"../platform/views/ABViewGrid\"),\n   require(\"../platform/views/ABViewImage\"),\n   require(\"../platform/views/ABViewLabel\"),\n   require(\"../platform/views/ABViewLayout\"),\n   require(\"../platform/views/ABViewList\"),\n   require(\"../platform/views/ABViewMenu\"),\n   require(\"../platform/views/ABViewPage\"),\n   require(\"../platform/views/ABViewPDFImporter\"),\n   require(\"../platform/views/ABViewPivot\"),\n   require(\"../platform/views/ABViewTab\"),\n   require(\"../platform/views/ABViewText\"),\n\n   //\n   // Special Editors\n   //\n   require(\"../platform/views/ABViewGantt\"),\n   require(\"../platform/views/ABViewKanban\"),\n   require(\"../platform/views/ABViewReportsManager\"),\n   require(\"../platform/views/ABViewScheduler\"),\n\n   //\n   // Detail Components\n   //\n   require(\"../platform/views/ABViewDetail\"),\n   require(\"../platform/views/ABViewDetailCheckbox\"),\n   require(\"../platform/views/ABViewDetailConnect\"),\n   require(\"../platform/views/ABViewDetailCustom\"),\n   require(\"../platform/views/ABViewDetailImage\"),\n   // require(\"../platform/views/ABViewDetailSelectivity\"),\n   require(\"../platform/views/ABViewDetailText\"),\n   require(\"../platform/views/ABViewDetailTree\"),\n\n   //\n   // Form Components\n   //\n   require(\"../platform/views/ABViewForm\"),\n   require(\"../platform/views/ABViewFormButton\"),\n   require(\"../platform/views/ABViewFormCheckbox\"),\n   require(\"../platform/views/ABViewFormConnect\"),\n   require(\"../platform/views/ABViewFormCustom\"),\n   require(\"../platform/views/ABViewFormDatepicker\"),\n   require(\"../platform/views/ABViewFormJson\"),\n   require(\"../platform/views/ABViewFormNumber\"),\n   require(\"../platform/views/ABViewFormReadonly\"),\n   require(\"../platform/views/ABViewFormSelectMultiple\"),\n   require(\"../platform/views/ABViewFormSelectSingle\"),\n   require(\"../platform/views/ABViewFormTextbox\"),\n   require(\"../platform/views/ABViewFormTree\"),\n];\n\n/*\n * Views\n * A name => ABView  hash of the different ABViews available.\n */\nvar Views = {};\nAllViews.forEach((v) => {\n   if (v.default?.common) {\n      v = v.default;\n   }\n   Views[v.common().key] = v;\n});\n\nmodule.exports = class ABViewManagerCore {\n   /**\n    * @function allViews\n    * return all the currently defined ABViews in an array.\n    * @return [{ABView},...]\n    */\n   static allViews(fn = () => true) {\n      var views = [];\n      for (var v in Views) {\n         var V = Views[v];\n         if (fn(V)) {\n            views.push(V);\n         }\n      }\n      return views;\n   }\n\n   /**\n    * @function newView\n    * return an instance of an ABView based upon the values.key value.\n    * @return {ABView}\n    */\n   static newView(values, application, parent) {\n      parent = parent || null;\n\n      if (values.key == \"detailselectivity\") {\n         values.key = \"detailconnect\";\n      }\n\n      //\t\tif ((values.key) && (Views[values.key])) {\n      if (values.key) {\n         if (!Views[values.key]) {\n            if (!isPlugin(values.key)) {\n               console.error(\n                  \"!! View[\" +\n                  values.key +\n                  \"] not yet defined.  Have an ABView instead:\"\n               );\n            }\n            return new Views[\"view\"](values, application, parent);\n         }\n\n         return new Views[values.key](values, application, parent);\n      } else {\n         var err = new Error(`Unknown view key [${values.key}]`);\n         console.error(err); // show the stack.\n         console.error({\n            error: err,\n            values: values,\n            application: application,\n         });\n         return null;\n      }\n   }\n\n   static viewClass(key) {\n      if (Views[key]) {\n         return Views[key];\n      }\n      console.error(`Unknown View Key[${key}]`);\n      return;\n   }\n\n   static addViewClass(View) {\n      Views[View.common().key] = View;\n   }\n};\n\n/**\n * Check if the key starts with plugin_\n */\nfunction isPlugin(key) {\n   return key.split(\"_\")[0] === \"plugin\";\n}\n","/*\n * ABViewManagerMobile\n *\n * An interface for managing the different ABViews available in our AppBuilder.\n *\n */\n\n/*\n * Views\n * A name => ABView  hash of the different ABViews available.\n */\nvar Views = {};\n[\n   require(\"../platform/mobile/ABMobilePage\"),\n   require(\"../platform/mobile/ABMobileView\"),\n   require(\"../platform/mobile/ABMobileViewCustom\"),\n   require(\"../platform/mobile/ABMobileViewForm\"),\n   require(\"../platform/mobile/ABMobileViewFormButton\"),\n   require(\"../platform/mobile/ABMobileViewFormCheckbox\"),\n   require(\"../platform/mobile/ABMobileViewFormConnect\"),\n   require(\"../platform/mobile/ABMobileViewFormDate\"),\n   require(\"../platform/mobile/ABMobileViewFormDatetime\"),\n   require(\"../platform/mobile/ABMobileViewFormEmail\"),\n   require(\"../platform/mobile/ABMobileViewFormFile\"),\n   require(\"../platform/mobile/ABMobileViewFormFormula\"),\n   require(\"../platform/mobile/ABMobileViewFormImage\"),\n   require(\"../platform/mobile/ABMobileViewFormNumber\"),\n   require(\"../platform/mobile/ABMobileViewFormReadonly\"),\n   require(\"../platform/mobile/ABMobileViewFormSelectMultiple\"),\n   require(\"../platform/mobile/ABMobileViewFormSelectSingle\"),\n   require(\"../platform/mobile/ABMobileViewFormTextbox\"),\n   require(\"../platform/mobile/ABMobileViewLabel\"),\n   require(\"../platform/mobile/ABMobileViewList\"),\n   require(\"../platform/mobile/ABMobileViewTimeline\"),\n].forEach((v) => {\n   if (v.default?.common) {\n      v = v.default;\n   }\n   Views[v.common().key] = v;\n});\n\nmodule.exports = class ABViewManagerCore {\n   /**\n    * @function allViews\n    * return all the currently defined ABViews in an array.\n    * @return [{ABView},...]\n    */\n   static allViews(fn = () => true) {\n      var views = [];\n      for (var v in Views) {\n         var V = Views[v];\n         if (fn(V)) {\n            views.push(V);\n         }\n      }\n      return views;\n   }\n\n   /**\n    * @function newView\n    * return an instance of an ABView based upon the values.key value.\n    * @return {ABView}\n    */\n   static newView(values, application, parent) {\n      parent = parent || null;\n\n      if (values.key == \"detailselectivity\") {\n         values.key = \"detailconnect\";\n      }\n\n      //\t\tif ((values.key) && (Views[values.key])) {\n      if (values.key) {\n         if (!Views[values.key]) {\n            console.error(\n               \"!! View[\" +\n                  values.key +\n                  \"] not yet defined.  Have an ABView instead:\"\n            );\n            return new Views[\"mobile-view\"](values, application, parent);\n         }\n\n         return new Views[values.key](values, application, parent);\n      } else {\n         var err = new Error(`Unknown view key [${values.key}]`);\n         console.error(err); // show the stack.\n         console.error({\n            error: err,\n            values: values,\n            application: application,\n         });\n         return null;\n      }\n   }\n\n   static viewClass(key) {\n      if (Views[key]) {\n         return Views[key];\n      }\n      console.error(`Unknown View Key[${key}]`);\n      return;\n   }\n};\n","const ABComponent = require(\"../platform/ABComponent\");\n// const ABObjectQuery = require(\"../platform/ABObjectQuery\");\n\n/**\n *  support get data from objects and queries\n */\nfunction getFieldVal(rowData, field) {\n   if (!field) return null;\n   if (!field.columnName) return null;\n   const columnName = field.columnName;\n\n   let value = null;\n\n   if (columnName.indexOf(\".\") > -1) {\n      let colName = columnName.split(\".\")[1];\n      value = rowData[columnName] || rowData[colName];\n   } else {\n      value = rowData[columnName];\n   }\n\n   // pull relation data\n   if (value == null && field.relationName) {\n      const relationName = field.relationName();\n      const pureRelationName = relationName.split(\".\")[1]; // support [BASE_OBJECT.columnName] field name of ABQuery\n      value = rowData[relationName] || rowData[pureRelationName];\n   }\n\n   if (value != null && !isNaN(value)) {\n      return value;\n   }\n\n   // otherwise, this might be a process check where the rowData keys have\n   // '[diagramID].[field.id]'\n   for (const k in rowData) {\n      const key = k.split(\".\")[1];\n      if (key && key == field.id) {\n         value = rowData[k];\n      }\n   }\n\n   if (\n      (value == null || (typeof value == \"number\" && isNaN(value))) &&\n      field.format\n   )\n      value = field.format(rowData);\n\n   return value;\n}\n\nfunction getConnectFieldValue(rowData, field) {\n   let connectedVal = \"\";\n\n   const extractVal = (itemData) => {\n      let val;\n      const relationName = field.relationName();\n      if (itemData[relationName]) {\n         val =\n            (field.indexField\n               ? itemData[relationName][field.indexField.columnName]\n               : null) ?? // custom index\n            (field.indexField2\n               ? itemData[relationName][field.indexField2.columnName]\n               : null) ?? // custom index 2\n            itemData[relationName].id ??\n            itemData[relationName];\n      } else {\n         let fieldVal = getFieldVal(itemData, field);\n         if (fieldVal != null) {\n            val = fieldVal;\n         }\n      }\n      return val;\n   };\n\n   if (Array.isArray(rowData)) {\n      connectedVal = rowData.map((data) => extractVal(data));\n   } else if (rowData) {\n      connectedVal = extractVal(rowData);\n   }\n   return connectedVal;\n}\n\nmodule.exports = class FilterComplexCore extends ABComponent {\n   constructor(idBase, AB) {\n      idBase = idBase || \"ab_filter_complex\";\n\n      if (typeof AB === \"undefined\") {\n         console.error(\"FilterComplexCore(): being called without an AB!\");\n      }\n\n      super(null, idBase, AB);\n\n      this.Account = { username: \"??\" };\n      this._settings = {};\n      this.condition = {};\n      // const batchName; // we need to revert to this default when switching away from a in/by query field\n\n      this._QueryFields = [];\n      this._Fields;\n\n      // internal business logic\n      const _logic = (this._logic = {\n         callbacks: {\n            onChange: () => {},\n         },\n\n         removeHtmlTags: function (text) {\n            let result = \"\";\n            try {\n               let div = document.createElement(\"div\");\n               div.innerHTML = text;\n\n               result = div.textContent || div.innerText || \"\";\n            } catch (err) {\n               result = (text || \"\").replace(/(<([^>]+)>)/gi, \"\");\n            }\n\n            return result;\n         },\n      });\n\n      // Interface methods for parent component:\n      // this.objectLoad = _logic.objectLoad;\n      // this.viewLoad = _logic.viewLoad;\n      // this.setValue = _logic.setValue;\n      // this.isValid = _logic.isValid;\n   }\n\n   init(options = {}) {\n      this._settings = options;\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    * @param condition {Object} - [Optional] {\n    *                                           glue: \"and\" | \"or\",\n    *                                           rules: []\n    *                                        }\n    */\n   isValid(rowData, condition = this.condition) {\n      // If conditions but no data return false\n      if (condition?.rules?.length && rowData == null) return false;\n\n      // If no conditions, then return true\n      if (!condition?.rules?.length || rowData == null) return true;\n\n      let result = condition.glue === \"and\" ? true : false;\n\n      condition.rules.forEach((filter) => {\n         // Nested filters\n         if (filter?.rules?.length) {\n            if (condition.glue === \"or\")\n               result = result || this.isValid(rowData, filter);\n            else result = result && this.isValid(rowData, filter);\n            return;\n         }\n         // Skip incomplete filter condition\n         else if (!filter || !filter.key || !filter.rule) return;\n\n         const fieldInfo = (this._Fields || []).filter(\n            (f) => f.id == filter.key || f.columnName == filter.key\n         )[0];\n\n         if (!fieldInfo) return;\n\n         let condResult = null;\n\n         // Filters that have \"this_object\" don't have a fieldInfo.key, so in that case,\n         // define a special .key == \"this_object\"\n         let ruleFieldType = fieldInfo.key;\n\n         if (typeof fieldInfo.key == \"undefined\") {\n            if (fieldInfo.id != \"this_object\") {\n               fieldInfo.key = \"connectField\"; // if you are looking at the parent object it won't have a key to analyze\n               ruleFieldType = fieldInfo.key;\n            } else ruleFieldType = \"this_object\";\n         }\n\n         let value = null;\n\n         if (fieldInfo.relationName) {\n            value = getConnectFieldValue(rowData, fieldInfo);\n         } else {\n            value = getFieldVal(rowData, fieldInfo);\n         }\n\n         switch (ruleFieldType) {\n            case \"string\":\n            case \"LongText\":\n            case \"email\":\n               if (value == null) value = \"\";\n\n               condResult = this.textValid(value, filter.rule, filter.value);\n               break;\n            case \"date\":\n            case \"datetime\":\n               condResult = this.dateValid(value, filter.rule, filter.value);\n               break;\n            case \"number\":\n            case \"calculate\":\n            case \"formula\":\n               condResult = this.numberValid(value, filter.rule, filter.value);\n               break;\n            case \"list\":\n               condResult = this.listValid(value, filter.rule, filter.value);\n               break;\n            case \"boolean\":\n               condResult = this.booleanValid(value, filter.rule, filter.value);\n               break;\n            case \"user\":\n               condResult = this.userValid(value, filter.rule, filter.value);\n               break;\n            case \"connectField\":\n            case \"connectObject\":\n               condResult = this.connectFieldValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"this_object\":\n               condResult = this.thisObjectValid(\n                  rowData,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n         }\n\n         if (condition.glue === \"and\") {\n            result = result && condResult;\n         } else {\n            result = result || condResult;\n         }\n      });\n\n      return result;\n   }\n\n   textValid(value, rule, compareValue) {\n      let result = false;\n\n      value = value.trim().toLowerCase();\n      value = this._logic.removeHtmlTags(value); // remove html tags - rich text editor\n\n      compareValue = compareValue.trim().toLowerCase().replace(/  +/g, \" \");\n\n      // support \"john smith\" => \"john\" OR/AND \"smith\"\n      const compareArray = compareValue.split(\" \");\n\n      switch (rule) {\n         case \"contains\":\n            compareArray.forEach((val) => {\n               if (result == false)\n                  // OR\n                  result = value.indexOf(val) > -1;\n            });\n            break;\n         case \"not_contains\":\n            result = true;\n            compareArray.forEach((val) => {\n               if (result == true)\n                  // AND\n                  result = value.indexOf(val) < 0;\n            });\n            break;\n         case \"equals\":\n            compareArray.forEach((val) => {\n               if (result == false)\n                  // OR\n                  result = value == val;\n            });\n            break;\n         case \"not_equal\":\n            result = true;\n            compareArray.forEach((val) => {\n               if (result == true)\n                  // AND\n                  result = value != val;\n            });\n            break;\n         case \"is_empty\":\n            result = value == \"\" || value == null;\n            break;\n         case \"is_not_empty\":\n            result = value != \"\" && value != null;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   dateValid(value, rule, compareValue) {\n      let result = false;\n\n      if (!(value instanceof Date)) value = new Date(value);\n\n      if (!(compareValue instanceof Date))\n         compareValue = new Date(compareValue);\n      switch (rule) {\n         case \"less\":\n            result = value < compareValue;\n            break;\n         case \"greater\":\n            result = value > compareValue;\n            break;\n         case \"less_or_equal\":\n            result = value <= compareValue;\n            break;\n         case \"greater_or_equal\":\n            result = value >= compareValue;\n            break;\n         case \"is_current_date\":\n            result =\n               value.setHours(0, 0, 0, 0) == compareValue.setHours(0, 0, 0, 0);\n            break;\n         case \"is_empty\":\n            result = !value;\n            break;\n         case \"is_not_empty\":\n            result = !!value;\n            break;\n         case \"is_null\":\n            result = value == null;\n            break;\n         case \"is_not_null\":\n            result = value != null;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n      return result;\n   }\n\n   numberValid(value, rule, compareValue) {\n      let result = false;\n\n      value = Number(value);\n      compareValue = Number(compareValue);\n\n      switch (rule) {\n         case \"equal\":\n         case \"equals\":\n            result = value == compareValue;\n            break;\n         case \"not_equal\":\n            result = value != compareValue;\n            break;\n         case \"less\":\n            result = value < compareValue;\n            break;\n         case \"greater\":\n            result = value > compareValue;\n            break;\n         case \"less_or_equal\":\n            result = value <= compareValue;\n            break;\n         case \"greater_or_equal\":\n            result = value >= compareValue;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   listValid(value, rule, compareValue) {\n      let result = false;\n\n      // compareValue = compareValue.toLowerCase();\n\n      if (!Array.isArray(compareValue)) compareValue = [compareValue];\n\n      switch (rule) {\n         case \"equals\":\n            if (value) result = compareValue.indexOf(value) > -1;\n            break;\n         case \"not_equal\":\n            if (value) result = compareValue.indexOf(value) < 0;\n            else result = true;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   booleanValid(value, rule, compareValue) {\n      let result = false;\n\n      switch (rule) {\n         case \"checked\":\n            result = value == true || value > 0 || value == \"true\";\n            break;\n         case \"unchecked\":\n            result =\n               value == false ||\n               value <= 0 ||\n               value == \"false\" ||\n               value == null;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   userValid(value, rule, compareValue) {\n      if (!value || !value?.length) return false;\n      let result = false;\n\n      if (!Array.isArray(value)) value = [value];\n\n      /* eslint-disable no-fallthrough */\n      switch (rule) {\n         case \"is_current_user\":\n            result =\n               value.filter((v) => (v?.username || v) == this.Account.username)\n                  .length > 0;\n            break;\n         case \"is_not_current_user\":\n            result =\n               value.filter((v) => (v?.username || v) != this.Account.username)\n                  .length > 0;\n            break;\n         case \"contain_current_user\":\n            compareValue = this.Account.username;\n         // break;  <-- NO BREAK HERE: fall through to \"equals\"\n\n         case \"equals\":\n            result =\n               value.filter((v) => (v?.username || v) == compareValue).length >\n               0;\n            break;\n         case \"not_contain_current_user\":\n            compareValue = this.Account.username;\n         // break;  <-- NO BREAK HERE: fall through to \"not_equals\"\n\n         case \"not_equal\":\n            result =\n               value.filter((v) => (v?.username || v) == compareValue).length <\n               1;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n      /* eslint-enable no-fallthrough */\n\n      return result;\n   }\n\n   queryFieldValid(rowData, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue) return result;\n\n      // queryId:fieldId\n      const queryId = compareValue.split(\":\")[0],\n         fieldId = compareValue.split(\":\")[1];\n\n      // if no query\n      const query = this.AB.queries((q) => q.id == queryId)[0];\n      if (!query) return result;\n\n      // if no field\n      const field = query.fields((f) => f.id == fieldId)[0];\n      if (!field) return result;\n\n      let qIdBase = \"{idBase}-query-field-{id}\"\n            .replace(\"{idBase}\", this.idBase)\n            .replace(\"{id}\", query.id),\n         inQueryFieldFilter = new this.constructor(qIdBase, this.AB);\n      inQueryFieldFilter.Account = this.Account;\n      inQueryFieldFilter.fieldsLoad(query.fields());\n      inQueryFieldFilter.setValue(query.workspaceFilterConditions);\n\n      switch (rule) {\n         case \"in_query_field\":\n            result = inQueryFieldFilter.isValid(rowData);\n            break;\n         case \"not_in_query_field\":\n            result = !inQueryFieldFilter.isValid(rowData);\n            break;\n      }\n\n      return result;\n   }\n\n   inQueryValid(rowData, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue || !this.AB) return result;\n\n      // if no query\n      let query = this.AB.queries((q) => q.id == compareValue)[0];\n      if (!query) return result;\n\n      let qIdBase = \"{idBase}-query-{id}\"\n            .replace(\"{idBase}\", this.idBase)\n            .replace(\"{id}\", query.id),\n         inQueryFilter = new this.constructor(qIdBase, this.AB);\n      inQueryFilter.Account = this.Account;\n      inQueryFilter.fieldsLoad(query.fields());\n      inQueryFilter.setValue(query.workspaceFilterConditions);\n\n      switch (rule) {\n         case \"in_query\":\n            result = inQueryFilter.isValid(rowData);\n            break;\n         case \"not_in_query\":\n            result = !inQueryFilter.isValid(rowData);\n            break;\n      }\n\n      return result;\n   }\n\n   dataCollectionValid(value, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue) return result;\n\n      let dc = this.AB.datacollections((d) => d.id == compareValue)[0];\n\n      switch (rule) {\n         case \"in_data_collection\":\n            if (!dc) return false;\n\n            result = dc.getData((d) => d.id == value.id).length > 0;\n            break;\n         case \"not_in_data_collection\":\n            if (!dc) return true;\n\n            result = dc.getData((d) => d.id == value.id).length < 1;\n            break;\n      }\n\n      return result;\n   }\n\n   connectFieldValid(rowData, field, rule, compareValue) {\n      let relationName = field.relationName();\n\n      let connectedVal = \"\";\n\n      let linkType = field.linkType();\n\n      if (rowData) {\n         if (rowData[relationName]) {\n            if (linkType == \"many\") {\n               // lets get an array of connected ids => stringified()\n               connectedVal = JSON.stringify(\n                  getConnectFieldValue(rowData, field).map((i) => i.id || i)\n               );\n            } else {\n               // connectedVal = (\n               //    (field.indexField\n               //       ? rowData[relationName][field.indexField.columnName]\n               //       : null) ?? // custom index\n               //    (field.indexField2\n               //       ? rowData[relationName][field.indexField2.columnName]\n               //       : null) ?? // custom index 2\n               //    rowData[relationName].id ??\n               //    rowData[relationName]\n               // )\n               connectedVal = getConnectFieldValue(rowData, field)\n                  .toString()\n                  .toLowerCase();\n            }\n         } else {\n            let fieldVal = getFieldVal(rowData, field);\n            if (fieldVal != null) {\n               connectedVal = fieldVal;\n            }\n         }\n      }\n\n      // If value will be the connected object, then pull value (string)\n      if (typeof connectedVal == \"object\") {\n         connectedVal =\n            (field.indexField\n               ? connectedVal[field.indexField.columnName]\n               : null) ??\n            (field.indexField2\n               ? connectedVal[field.indexField2.columnName]\n               : null) ??\n            connectedVal[field.columnName] ??\n            connectedVal.id ??\n            connectedVal;\n      }\n\n      // Compare value isn't always a string?\n      // https://appdev-designs.sentry.io/issues/5056850389/\n      let compareValueLowercase =\n         typeof compareValue === \"string\"\n            ? compareValue.toLowerCase?.()\n            : compareValue;\n\n      // NOTE: if linkType == many, and rule is equals/not_equal,\n      // these will be interpreted as \"contains/not_contains\"\n      let ruleSafe = rule;\n      if (linkType == \"many\") {\n         switch (rule) {\n            case \"equals\":\n               ruleSafe = \"contains\";\n               break;\n            case \"not_equal\":\n               ruleSafe = \"not_contains\";\n               break;\n         }\n      }\n\n      switch (ruleSafe) {\n         case \"contains\":\n            return connectedVal.toString().indexOf(compareValueLowercase) > -1;\n         case \"not_contains\":\n            return connectedVal.toString().indexOf(compareValueLowercase) == -1;\n         case \"equals\":\n            return connectedVal == compareValueLowercase;\n         case \"not_equal\":\n            return connectedVal != compareValueLowercase;\n         case \"in_query\":\n         case \"not_in_query\":\n            return this.inQueryValid(rowData[relationName], rule, compareValue);\n         case \"is_current_user\":\n         case \"is_not_current_user\":\n         case \"contain_current_user\":\n         case \"not_contain_current_user\":\n            return this.userValid(connectedVal, rule, compareValue);\n         case \"is_empty\":\n            return (\n               rowData[relationName] == null ||\n               rowData[relationName].length < 1 ||\n               rowData[relationName] == \"\"\n            );\n         case \"is_not_empty\":\n            return (\n               rowData[relationName] != null &&\n               ((Array.isArray(rowData[relationName]) &&\n                  rowData[relationName].length > 0) ||\n                  rowData[relationName] != \"\")\n            );\n         case \"in_data_collection\":\n         case \"not_in_data_collection\":\n            return this.dataCollectionValid(connectedVal, rule, compareValue);\n      }\n   }\n\n   thisObjectValid(rowData, rule, compareValue) {\n      let result = false;\n      let query = null;\n      let listThisObjects = null;\n      let alias = null;\n      let newRowData = null;\n\n      switch (rule) {\n         // if in_query condition\n         case \"in_query\":\n         case \"not_in_query\":\n            if (!this._Object) return result;\n\n            // if > 1 copy of this object in query ==> Error!\n            query = this.AB.queries((q) => q.id == compareValue)[0];\n\n            if (!query) return result;\n\n            listThisObjects = query.objects((o) => {\n               return o.id == this._Object.id;\n            });\n\n            if (listThisObjects.length > 1) {\n               // Alternative: choose the 1st instance of this object in the query, and make the compare on that.\n               // Be sure to warn the developer of the limitiations of an \"this_object\" \"in_query\"  when query has > 1 copy of\n               // this object as part of the query.\n\n               console.error(\n                  \"HEY!  Can't compare this_object to a query that has > 1 copy of that object!\"\n               );\n\n               return true;\n            }\n\n            // get this object's alias from the query\n            alias = query.objectAlias(this._Object.id);\n\n            // make sure all my columns in rowData are prefixed by \"alias\".columnName\n            newRowData = {};\n\n            Object.keys(rowData).forEach((key) => {\n               newRowData[`${alias}.${key}`] = rowData[key];\n            });\n\n            // then pass this on to the _logic.queryValid();\n            return this.inQueryValid(newRowData, rule, compareValue);\n\n         // if in_datacollection condition\n         case \"in_data_collection\":\n         case \"not_in_data_collection\":\n            // send rowData, null to datacollectionValid()\n            return this.dataCollectionValid(rowData, rule, compareValue);\n      }\n   }\n\n   processFieldsLoad(processFields = []) {\n      if (processFields && !Array.isArray(processFields)) {\n         processFields = [processFields];\n      }\n      this._ProcessFields = processFields;\n\n      this.uiInit();\n   }\n\n   /**\n    * @method fieldsLoad\n    * set fields\n    *\n    * @param array {ABField}\n    * @param object {ABObject} [optional]\n    */\n   fieldsLoad(fields = [], object = null) {\n      this._Fields = fields.filter(\n         (f) => f && f.fieldIsFilterable && f.fieldIsFilterable()\n      );\n      this._QueryFields = this._Fields\n         ? this._Fields.filter((f) => f && f.isConnection && f.key != \"user\")\n         : [];\n\n      // insert our 'this object' entry if an Object was given.\n      if (object) {\n         this._Object = object;\n\n         // insert our uuid in addition to the rest of our fields\n         let thisObjOption = {\n            id: \"this_object\",\n            label: object.label,\n            key: \"uuid\",\n         };\n\n         // If object is query ,then should define default alias: \"BASE_OBJECT\"\n         // NOTE: Could not reference ABObjectQuery because recursive looping reference\n         // if (object instanceof ABObjectQuery) {\n         if (object.viewName) {\n            thisObjOption.alias = \"BASE_OBJECT\";\n         }\n\n         this._Fields.unshift(thisObjOption);\n      } else {\n         delete this._Object;\n      }\n   }\n\n   fieldsToQB() {\n      /*\n      let mapTypes = {\n         LongText: \"string\",\n         email: \"string\",\n         datetime: \"date\",\n         connectField: \"connectObject\"\n      };\n\n      const fields = this._Fields.map((f) => {\n         // Label\n         let label = f.label;\n         if (this._settings.showObjectName && f.object && f.object.label)\n            label = `${f.object.label}.${f.label}`;\n\n         // Type\n         let type = f.key || f.type;\n         if (mapTypes[type]) type = mapTypes[type];\n\n         // the format for webix querybuilder:\n         // { id  value:\"label\" type }\n         //      type: {string} the type of value it is.\n         //            since we want to tailor value selectors per field,\n         //            we will make a unique type for each field. and then\n         //            add value selectors for that specific .type\n         return { id: f.columnName, value: label, type: type };\n      });\n      return fields;\n      */\n\n      let fields = (this._Fields || []).map((f) => {\n         let label = f.label;\n         if (this._settings.showObjectName && f.object && f.object.label)\n            label = `${f.object.label}.${f.label}`;\n\n         let type = \"text\"; // \"text\", \"number\", \"date\"\n         let conditions = [];\n         let processFieldKeys = [];\n         let hasQueryField = true;\n\n         if (!this._settings.isProcessParticipant)\n            switch (f.key) {\n               case \"boolean\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersBoolean(f)\n                  );\n                  processFieldKeys = [\"boolean\"];\n\n                  break;\n\n               case \"connectObject\":\n                  conditions = this.fieldsAddFiltersConnectObject(f);\n\n                  // Add filter options to Custom index\n                  if (\n                     // 1:M\n                     (f.settings.linkType == \"one\" &&\n                        f.settings.linkViaType == \"many\") ||\n                     // 1:1 isSource = true\n                     (f.settings.linkType == \"one\" &&\n                        f.settings.linkViaType == \"one\" &&\n                        f.settings.isSource)\n                  ) {\n                     const stringResults = this.fieldsAddFiltersString(\n                        f\n                     ).filter(\n                        (opt) =>\n                           f.settings.isCustomFK ||\n                           // If this connect field does not use custom FK, then allow just `is empty` and `is not empty` filter options\n                           opt.id == \"is_empty\" ||\n                           opt.id == \"is_not_empty\"\n                     );\n                     conditions = stringResults.concat(conditions);\n\n                     // By Query Field\n                     conditions = conditions.concat(\n                        this.fieldsAddFiltersQuery(f, true)\n                     );\n                  }\n\n                  hasQueryField = false;\n                  processFieldKeys = [\"connectObject\"];\n\n                  break;\n\n               case \"date\":\n               case \"datetime\":\n                  type = \"date\";\n                  conditions = conditions.concat(this.fieldsAddFiltersDate(f));\n                  processFieldKeys = [\"date\", \"datetime\"];\n\n                  break;\n\n               case \"calculate\":\n               case \"formula\":\n               case \"number\":\n                  type = \"number\";\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersNumber(f)\n                  );\n                  processFieldKeys = [\"calculate\", \"formula\", \"number\"];\n\n                  break;\n\n               case \"string\":\n               case \"LongText\":\n               case \"email\":\n               case \"AutoIndex\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersString(f)\n                  );\n                  processFieldKeys = [\n                     \"string\",\n                     \"LongText\",\n                     \"email\",\n                     \"AutoIndex\",\n                  ];\n\n                  break;\n\n               case \"list\":\n                  conditions = conditions.concat(this.fieldsAddFiltersList(f));\n\n                  break;\n\n               case \"user\":\n                  conditions = conditions.concat(this.fieldsAddFiltersUser(f));\n                  processFieldKeys = [\"user\"];\n\n                  break;\n\n               case \"uuid\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersThisObject(f)\n                  );\n                  hasQueryField = false;\n\n                  break;\n               default:\n                  break;\n            }\n         else\n            switch (f.key) {\n               case \"connectObject\":\n               case \"uuid\":\n                  hasQueryField = false;\n\n                  break;\n            }\n\n         conditions = conditions.concat(\n            this.fieldsAddFiltersQuery(f, hasQueryField)\n         );\n\n         if (this._settings.isRecordRule) {\n            conditions = conditions.concat(this.fieldsAddFiltersRecordRule(f));\n         }\n\n         let isProcessField =\n            (this._ProcessFields || []).filter((processField) => {\n               if (!processField) return false;\n\n               if (processField.field) {\n                  return processFieldKeys.includes(processField.field.key);\n               } else if (processField.key) {\n                  // uuid\n                  let processFieldId = processField.key.split(\".\").pop();\n                  return processFieldId == f.id || processFieldId == f.key;\n               }\n            }).length > 0;\n\n         if (isProcessField) {\n            conditions = conditions.concat(this.fieldsAddFiltersContext(f));\n         }\n\n         conditions = conditions.concat(this.fieldsAddFiltersCustom(f));\n\n         // let type = f.id; // the default unique identifier for our filter types\n         // if (f.id == \"this_object\") {\n         //    // if this happens to be our special \"this_object\" field, then our\n         //    // type needs to be the \"uuid\" type in the definition:\n         //    type = f.type;\n         // }\n\n         // the format for webix querybuilder:\n         // { id  value:\"label\" type }\n         //      type: {string} the type of value it is.\n         //            since we want to tailor value selectors per field,\n         //            we will make a unique type for each field. and then\n         //            add value selectors for that specific .type\n         return {\n            id: f.id,\n            value: label,\n            type: type,\n            conditions: conditions,\n            // format: () => {},\n         };\n      });\n\n      // !!! Process Fields of ABProcess\n      // https://github.com/digi-serve/appbuilder_class_core/blob/master/FilterComplexCore.js#L636\n      // https://github.com/digi-serve/appbuilder_class_core/blob/master/FilterComplexCore.js#L564\n      // (this._ProcessFields || [])\n      //    // if there is no .field, it is probably an embedded special field\n      //    .filter((pField) => pField.field == null)\n      //    .forEach((pField) => {\n      //       // like: .uuid\n      //       let key = pField.key.split(\".\").pop();\n      //       if (key == \"uuid\" && this._Object) {\n      //          fields.unshift({\n      //             id: pField.key,\n      //             value: this._Object.label,\n      //             type: \"text\",\n      //             conditions: this.fieldsAddFiltersContext(),\n      //          });\n      //       }\n      //    });\n\n      return fields;\n   }\n\n   fieldsAddFiltersDate(field) {\n      let dateConditions = {\n         less: this.labels.component.beforeCondition,\n         greater: this.labels.component.afterCondition,\n         less_or_equal: this.labels.component.onOrBeforeCondition,\n         greater_or_equal: this.labels.component.onOrAfterCondition,\n         is_current_date: this.labels.component.isCurrentDateCondition,\n         less_current: this.labels.component.beforeCurrentCondition,\n         greater_current: this.labels.component.afterCurrentCondition,\n         less_or_equal_current:\n            this.labels.component.onOrBeforeCurrentCondition,\n         greater_or_equal_current:\n            this.labels.component.onOrAfterCurrentCondition,\n         last_days: this.labels.component.onLastDaysCondition,\n         next_days: this.labels.component.onNextDaysCondition,\n         is_empty: this.labels.component.isEmpty,\n         is_not_empty: this.labels.component.isNotEmpty,\n      };\n\n      let result = [];\n\n      for (let condKey in dateConditions)\n         switch (condKey) {\n            case \"is_current_date\":\n            case \"less_current\":\n            case \"greater_current\":\n            case \"less_or_equal_current\":\n            case \"greater_or_equal_current\":\n            case \"is_empty\":\n            case \"is_not_empty\":\n               result.push({\n                  id: condKey,\n                  value: dateConditions[condKey],\n                  batch: \"none\",\n                  handler: (a, b) => this.dateValid(a, condKey, b),\n               });\n               break;\n            case \"last_days\":\n               result.push({\n                  id: condKey,\n                  value: dateConditions[condKey],\n                  batch: \"text\",\n                  handler: (a, b) => this.dateValid(a, condKey, b),\n               });\n               break;\n            default:\n               result.push({\n                  id: condKey,\n                  value: dateConditions[condKey],\n                  batch: \"datepicker\",\n                  handler: (a, b) => this.dateValid(a, condKey, b),\n               });\n               break;\n         }\n      return result;\n   }\n\n   fieldsAddFiltersString(field) {\n      let stringConditions = {\n         contains: {\n            batch: \"text\",\n            label: this.labels.component.containsCondition,\n         },\n         not_contains: {\n            batch: \"text\",\n            label: this.labels.component.notContainsCondition,\n         },\n         equals: {\n            batch: \"text\",\n            label: this.labels.component.isCondition,\n         },\n         not_equal: {\n            batch: \"text\",\n            label: this.labels.component.isNotCondition,\n         },\n         is_empty: {\n            batch: \"none\",\n            label: this.labels.component.isEmpty,\n         },\n         is_not_empty: {\n            batch: \"none\",\n            label: this.labels.component.isNotEmpty,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in stringConditions) {\n         result.push({\n            id: condKey,\n            value: stringConditions[condKey].label,\n            batch: stringConditions[condKey].batch,\n            handler: (a, b) => this.textValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersNumber(field) {\n      let numberConditions = {\n         equals: this.labels.component.equalCondition,\n         not_equal: this.labels.component.notEqualCondition,\n         less: this.labels.component.lessThanCondition,\n         greater: this.labels.component.moreThanCondition,\n         less_or_equal: this.labels.component.lessThanOrEqualCondition,\n         greater_or_equal: this.labels.component.moreThanOrEqualCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in numberConditions) {\n         result.push({\n            id: condKey,\n            value: numberConditions[condKey],\n            batch: \"text\",\n            handler: (a, b) => this.numberValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersList(field) {\n      let listConditions = {\n         equals: this.labels.component.equalListCondition,\n         not_equal: this.labels.component.notEqualListCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in listConditions) {\n         result.push({\n            id: condKey,\n            value: listConditions[condKey],\n            batch: \"list\",\n            handler: (a, b) => this.listValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersBoolean(field) {\n      let booleanConditions = {\n         checked: this.labels.component.checkedCondition,\n         unchecked: this.labels.component.notCheckedCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in booleanConditions) {\n         result.push({\n            id: condKey,\n            value: booleanConditions[condKey],\n            batch: \"none\",\n            handler: (a, b) => this.booleanValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersUser(field) {\n      let userConditions = {\n         is_current_user: {\n            batch: \"none\",\n            label: this.labels.component.isCurrentUserCondition,\n         },\n         is_not_current_user: {\n            batch: \"none\",\n            label: this.labels.component.isNotCurrentUserCondition,\n         },\n         contain_current_user: {\n            batch: \"none\",\n            label: this.labels.component.containsCurrentUserCondition,\n         },\n         not_contain_current_user: {\n            batch: \"none\",\n            label: this.labels.component.notContainsCurrentUserCondition,\n         },\n         equals: {\n            batch: \"user\",\n            label: this.labels.component.equalListCondition,\n         },\n         not_equal: {\n            batch: \"user\",\n            label: this.labels.component.notEqualListCondition,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in userConditions) {\n         result.push({\n            id: condKey,\n            value: userConditions[condKey].label,\n            batch: userConditions[condKey].batch,\n            handler: (a, b) => this.userValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersConnectObject(field) {\n      const connectConditions = {\n         same_as_user: {\n            batch: \"user\",\n            label: this.labels.component.sameAsUser,\n            handler: (a, b) => this.userValid(a, \"same_as_user\", b),\n         },\n         not_same_as_user: {\n            batch: \"user\",\n            label: this.labels.component.notSameAsUser,\n            handler: (a, b) => this.userValid(a, \"not_same_as_user\", b),\n         },\n         in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.inDataCollection,\n            handler: (a, b) =>\n               this.dataCollectionValid(a, \"in_data_collection\", b),\n         },\n         not_in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.notInDataCollection,\n            handler: (a, b) =>\n               this.dataCollectionValid(a, \"not_in_data_collection\", b),\n         },\n         // TODO\n         // contains: this.labels.component.containsCondition,\n         // not_contains: this.labels.component.notContainCondition,\n         // equals: this.labels.component.isCondition,\n         // not_equal: this.labels.component.isNotCondition\n      };\n\n      const result = [];\n\n      for (let condKey in connectConditions) {\n         result.push({\n            id: condKey,\n            value: connectConditions[condKey].label,\n            batch: connectConditions[condKey].batch,\n            handler: connectConditions[condKey].handler,\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersQuery(field, hasQueryField = false) {\n      const queryConditions = hasQueryField\n         ? {\n              in_query_field: {\n                 label: this.labels.component.inQueryField,\n                 batch: \"queryField\",\n              },\n              not_in_query_field: {\n                 label: this.labels.component.notInQueryField,\n                 batch: \"queryField\",\n              },\n           }\n         : {\n              in_query: {\n                 label: this.labels.component.inQuery,\n                 batch: \"query\",\n              },\n              not_in_query: {\n                 label: this.labels.component.notInQuery,\n                 batch: \"query\",\n              },\n           };\n\n      const result = [];\n\n      for (const condKey in queryConditions) {\n         result.push({\n            id: condKey,\n            value: queryConditions[condKey].label,\n            batch: queryConditions[condKey].batch,\n            handler: (a, b) => this.queryFieldValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersThisObject(field) {\n      let thisObjectConditions = {\n         in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.inDataCollection,\n         },\n         not_in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.notInDataCollection,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in thisObjectConditions) {\n         result.push({\n            id: condKey,\n            value: thisObjectConditions[condKey].label,\n            batch: thisObjectConditions[condKey].batch,\n            handler: (a, b) => this.thisObjectValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersRecordRule(field) {\n      let recordRuleConditions = {\n         same_as_field: this.labels.component.sameAsField,\n         not_same_as_field: this.labels.component.notSameAsField,\n      };\n\n      let result = [];\n\n      for (let condKey in recordRuleConditions) {\n         result.push({\n            id: condKey,\n            value: recordRuleConditions[condKey],\n            batch: \"recordRule\",\n            handler: (a, b) => true, // TODO: record rule validation\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersContext(field) {\n      let contextConditions = {\n         context_equals: {\n            batch: \"context\",\n            label: this.labels.component.equalsProcessValue,\n            handler: (a, b) => a == b,\n         },\n         context_not_equal: {\n            batch: \"context\",\n            label: this.labels.component.notEqualsProcessValueCondition,\n            handler: (a, b) => a != b,\n         },\n         context_in: {\n            batch: \"context\",\n            label: this.labels.component.inProcessValueCondition,\n            handler: (a, b) => a.indexOf(b) > -1,\n         },\n         context_not_in: {\n            batch: \"context\",\n            label: this.labels.component.notInProcessValueCondition,\n            handler: (a, b) => a.indexOf(b) == -1,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in contextConditions) {\n         result.push({\n            id: condKey,\n            value: contextConditions[condKey].label,\n            batch: contextConditions[condKey].batch,\n            handler: contextConditions[condKey].handler,\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersCustom(field) {\n      const customOptions = this._customOptions ?? {};\n      const options = customOptions[field.id || field] ?? {};\n      return options.conditions ?? [];\n   }\n\n   queriesLoad(queries = []) {\n      this._Queries = queries;\n   }\n\n   /**\n    * @method queries()\n    *\n    * return an array of all the ABObjectQuery.\n    *\n    * @param filter {Object}\n    *\n    * @return {array}\n    */\n   queries(filter = () => true) {\n      const queryList = this._Queries ?? this.AB?.queries?.() ?? [];\n\n      return queryList.filter((q) => filter(q));\n   }\n\n   setValue(settings) {\n      this.condition = settings || {};\n\n      this.condition.rules = this.condition.rules || [];\n   }\n\n   /**\n    * @method getValue\n    * return the current condition of the filter.\n    * @return {JSON} -\n    * {\n    * \tglue: '', // 'and', 'or'\n    *\t\trules: [\n    *\t\t\t{\n    *\t\t\t\tkey:\t'uuid',\n    *\t\t\t\trule:\t'rule',\n    *\t\t\t\tvalue:\t'value'\n    *\t\t\t}\n    *\t\t]\n    * }\n    */\n   getValue() {\n      // When asked for a value before a condition is set, default the\n      // unset glue to \"and\";\n      if (typeof this.condition.glue == \"undefined\") {\n         this.condition.glue = \"and\";\n      }\n      return this.condition;\n   }\n\n   isComplete() {\n      let result = true;\n\n      const noValueRules = [\n         \"is_current_user\",\n         \"is_not_current_user\",\n         \"contain_current_user\",\n         \"not_contain_current_user\",\n         \"same_as_user\",\n         \"not_same_as_user\",\n         \"is_empty\",\n         \"is_not_empty\",\n         \"checked\",\n         \"unchecked\",\n         \"is_current_date\",\n      ];\n\n      const isCompleteRules = (rules = []) => {\n         if (result == false) return;\n\n         rules.forEach((r) => {\n            if (r?.rules && Array.isArray(r?.rules)) {\n               isCompleteRules(r?.rules);\n            } else {\n               result =\n                  result &&\n                  r?.key != null &&\n                  r?.key != \"\" &&\n                  r?.rule != null &&\n                  r?.rule != \"\" &&\n                  ((r?.value != null && r?.value != \"\") ||\n                     noValueRules.indexOf(r?.rule) > -1);\n            }\n         });\n      };\n\n      isCompleteRules(this.condition?.rules);\n\n      return result;\n   }\n};\n","const ABComponent = require(\"../platform/ABComponent\");\n\n/**\n *  support get data from objects and queries\n */\nfunction getFieldVal(rowData, field, returnSingular = true) {\n   if (!field) return null;\n   if (!field.columnName) return null;\n   // if rowData is an array, then pull the first element to get value\n   if (rowData && rowData[0]) rowData = rowData[0];\n\n   let columnId = field.id;\n   let columnName = field.columnName;\n\n   let value = null;\n   if (columnName.indexOf(\".\") > -1) {\n      let colName = columnName.split(\".\")[1];\n      value = rowData[columnName] || rowData[colName] || rowData[columnId];\n   } else {\n      value = rowData[columnName] || rowData[columnId];\n   }\n\n   if (value) {\n      return value;\n   }\n\n   // otherwise, this might be a process check where the rowData keys have\n   // '[diagramID].[field.id]'\n   for (var k in rowData) {\n      var key = k.split(\".\")[1];\n      if (key && (key == columnId || key == columnName)) {\n         value = rowData[k];\n      }\n   }\n\n   // if value is an array, filter empty item\n   if (value && Array.isArray(value)) {\n      value = value.filter((v) => v != null);\n      if (returnSingular) value = value[0];\n   }\n\n   return value;\n}\n\nmodule.exports = class RowFilterCore extends ABComponent {\n   constructor(App, idBase, AB) {\n      idBase = idBase || \"ab_row_filter\";\n\n      super(App, idBase, AB);\n\n      this.Account = { username: \"??\" };\n      this._settings = {};\n      this.config_settings = {};\n      // var batchName; // we need to revert to this default when switching away from a in/by query field\n\n      this._QueryFields = [];\n      this._Fields;\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onChange: () => {},\n         },\n\n         /**\n          * @method getValue\n          *\n          * @return {JSON} -\n          * {\n          * \t\tglue: '', // 'and', 'or'\n          *\t\trules: [\n          *\t\t\t{\n          *\t\t\t\tkey:\t'column name',\n          *\t\t\t\trule:\t'rule',\n          *\t\t\t\tvalue:\t'value'\n          *\t\t\t}\n          *\t\t]\n          * }\n          */\n         getValue: () => {\n            return this.config_settings;\n         },\n\n         removeHtmlTags: function (text) {\n            let result = \"\";\n            try {\n               let div = document.createElement(\"div\");\n               div.innerHTML = text;\n\n               result = div.textContent || div.innerText || \"\";\n            } catch (err) {\n               result = (text || \"\").replace(/(<([^>]+)>)/gi, \"\");\n            }\n\n            return result;\n         },\n\n         textValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (value == null) value = \"\";\n\n            value = value.toString().trim().toLowerCase();\n            value = _logic.removeHtmlTags(value); // remove html tags - rich text editor\n\n            compareValue = compareValue\n               .toString()\n               .trim()\n               .toLowerCase()\n               .replace(/  +/g, \" \");\n\n            // support \"john smith\" => \"john\" OR/AND \"smith\"\n            var compareArray = compareValue.split(\" \");\n\n            switch (rule) {\n               case \"contains\":\n                  compareArray.forEach((val) => {\n                     if (result == false)\n                        // OR\n                        result = value.indexOf(val) > -1;\n                  });\n                  break;\n               case \"not_contains\":\n                  result = true;\n                  compareArray.forEach((val) => {\n                     if (result == true)\n                        // AND\n                        result = value.indexOf(val) < 0;\n                  });\n                  break;\n               case \"equals\":\n                  compareArray.forEach((val) => {\n                     if (result == false)\n                        // OR\n                        result = value == val;\n                  });\n                  break;\n               case \"not_equal\":\n                  result = true;\n                  compareArray.forEach((val) => {\n                     if (result == true)\n                        // AND\n                        result = value != val;\n                  });\n                  break;\n               case \"is_empty\":\n                  result = value == null || value == \"\";\n                  break;\n               case \"is_not_empty\":\n                  result = value != null && value != \"\";\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         dateValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (!(value instanceof Date)) value = new Date(value);\n\n            if (!(compareValue instanceof Date))\n               compareValue = new Date(compareValue);\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               case \"less\":\n                  result = value < compareValue;\n                  break;\n               case \"greater\":\n                  result = value > compareValue;\n                  break;\n               case \"less_or_equal\":\n                  result = value <= compareValue;\n                  break;\n               case \"greater_or_equal\":\n                  result = value >= compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         numberValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            value = Number(value);\n            compareValue = Number(compareValue);\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               case \"less\":\n                  result = value < compareValue;\n                  break;\n               case \"greater\":\n                  result = value > compareValue;\n                  break;\n               case \"less_or_equal\":\n                  result = value <= compareValue;\n                  break;\n               case \"greater_or_equal\":\n                  result = value >= compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         listValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (value && value.toLowerCase) value = value.toLowerCase();\n\n            compareValue = compareValue.toLowerCase();\n\n            if (!Array.isArray(compareValue)) compareValue = [compareValue];\n\n            switch (rule) {\n               case \"equals\":\n                  if (value) result = compareValue.indexOf(value) > -1;\n                  break;\n               case \"not_equal\":\n                  if (value) result = compareValue.indexOf(value) < 0;\n                  else result = true;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         booleanValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n\n            // default value should be false\n            if (value == null) value = false;\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         userValid: (rowData, field, rule, compareValue) => {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n\n            // if (Array.isArray(value)) value = [value];\n\n            switch (rule) {\n               case \"is_current_user\":\n                  result = value == this.Account.username;\n                  break;\n               case \"is_not_current_user\":\n                  result = value != this.Account.username;\n                  break;\n               case \"contain_current_user\":\n                  if (!value) {\n                     result = false;\n                     break;\n                  }\n                  if (!Array.isArray(value)) value = [value];\n\n                  result =\n                     (value || []).filter((v) => {\n                        if (v) {\n                           return (\n                              (v.username || v.id || v.text || v) ==\n                              this.Account.username\n                           );\n                        } else {\n                           return false;\n                        }\n                     }).length > 0;\n                  break;\n               case \"not_contain_current_user\":\n                  if (!value) {\n                     result = false;\n                     break;\n                  }\n                  if (!Array.isArray(value)) value = [value];\n\n                  result =\n                     (value || []).filter((v) => {\n                        if (v) {\n                           return (\n                              (v.username || v.id || v.text || v) ==\n                              this.Account.username\n                           );\n                        } else {\n                           return false;\n                        }\n                     }).length == 0;\n                  break;\n               case \"equals\":\n                  result = value.indexOf(compareValue) > -1;\n                  break;\n               case \"not_equal\":\n                  result = value.indexOf(compareValue) < 0;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         queryValid: (rowData, rule, compareValue) => {\n            var result = false;\n\n            if (!this.AB || !compareValue) return result;\n\n            // queryId:fieldId\n            var queryId = compareValue.split(\":\")[0],\n               fieldId = compareValue.split(\":\")[1];\n\n            // if no query\n            var query = this.queries((q) => q.id == queryId)[0];\n            if (!query) return result;\n\n            // if no field\n            var field = query.fields((f) => f.id == fieldId)[0];\n            if (!field) return result;\n\n            let qIdBase = \"{idBase}-query-field-{id}\"\n                  .replace(\"{idBase}\", idBase)\n                  .replace(\"{id}\", query.id),\n               inQueryFieldFilter = new this.constructor(this.App, qIdBase);\n            inQueryFieldFilter.Account = this.Account;\n            // inQueryFieldFilter.applicationLoad(this._Application);\n            inQueryFieldFilter.fieldsLoad(query.fields());\n            inQueryFieldFilter.setValue(query.workspaceFilterConditions);\n\n            switch (rule) {\n               case \"in_query_field\":\n                  result = inQueryFieldFilter.isValid(rowData);\n                  break;\n               case \"not_in_query_field\":\n                  result = !inQueryFieldFilter.isValid(rowData);\n                  break;\n            }\n\n            return result;\n         },\n\n         inQueryValid: (rowData, columnName, rule, compareValue) => {\n            let result = false;\n\n            if (columnName) {\n               rowData = rowData[columnName] || {};\n            }\n\n            if (!compareValue || !this.AB) return result;\n\n            // if no query\n            let query = this.queries((q) => q.id == compareValue)[0];\n            if (!query) return result;\n\n            let qIdBase = \"{idBase}-query-{id}\"\n                  .replace(\"{idBase}\", idBase)\n                  .replace(\"{id}\", query.id),\n               inQueryFilter = new this.constructor(this.App, qIdBase);\n            inQueryFilter.Account = this.Account;\n            // inQueryFilter.applicationLoad(this._Application);\n            inQueryFilter.fieldsLoad(query.fields());\n            inQueryFilter.setValue(query.workspaceFilterConditions);\n\n            switch (rule) {\n               case \"in_query\":\n                  result = inQueryFilter.isValid(rowData);\n                  break;\n               case \"not_in_query\":\n                  result = !inQueryFilter.isValid(rowData);\n                  break;\n            }\n\n            return result;\n         },\n\n         dataCollectionValid: (rowData, columnName, rule, compareValue) => {\n            var result = false;\n\n            if (!compareValue || !this.AB) return result;\n\n            if (columnName) {\n               rowData = rowData[columnName] || {};\n            }\n\n            let dc = this.AB.datacollectionByID(compareValue);\n\n            switch (rule) {\n               case \"in_data_collection\":\n                  if (!dc) return false;\n\n                  result =\n                     dc.getData(\n                        (d) => (d.id || d.uuid) == (rowData.id || rowData.uuid)\n                     ).length > 0;\n                  break;\n               case \"not_in_data_collection\":\n                  if (!dc) return true;\n\n                  result =\n                     dc.getData(\n                        (d) => (d.id || d.uuid) == (rowData.id || rowData.uuid)\n                     ).length < 1;\n                  break;\n            }\n\n            return result;\n         },\n\n         connectFieldValid: function (rowData, field, rule, compareValue) {\n            let relationName = field.relationName();\n\n            let connectedVal = \"\";\n\n            if (rowData) {\n               if (rowData[relationName]) {\n                  connectedVal = (\n                     (field.indexField\n                        ? rowData[relationName][field.indexField.columnName]\n                        : false) || // custom index\n                     (field.indexField2\n                        ? rowData[relationName][field.indexField2.columnName]\n                        : false) || // custom index 2\n                     rowData[relationName].id ||\n                     rowData[relationName]\n                  )\n                     .toString()\n                     .toLowerCase();\n               } else {\n                  let fieldVal = getFieldVal(rowData, field);\n                  if (fieldVal != null) {\n                     connectedVal = fieldVal;\n\n                     // an Object to a String\n                     if (typeof connectedVal == \"object\") {\n                        connectedVal =\n                           field.datasourceLink.displayData(connectedVal);\n                     }\n                  }\n               }\n            }\n\n            let compareValueLowercase = (compareValue || \"\").toLowerCase();\n\n            switch (rule) {\n               case \"contains\":\n                  return (\n                     connectedVal.toString().indexOf(compareValueLowercase) > -1\n                  );\n               case \"not_contains\":\n                  return (\n                     connectedVal.toString().indexOf(compareValueLowercase) ==\n                     -1\n                  );\n               case \"equals\":\n                  return connectedVal == compareValueLowercase;\n               case \"not_equal\":\n                  return connectedVal != compareValueLowercase;\n               case \"in_query\":\n               case \"not_in_query\":\n                  return _logic.inQueryValid(\n                     rowData,\n                     relationName,\n                     rule,\n                     compareValue\n                  );\n               case \"is_current_user\":\n               case \"is_not_current_user\":\n               case \"contain_current_user\":\n               case \"not_contain_current_user\":\n                  return _logic.userValid(rowData, field, rule, compareValue);\n               case \"is_empty\":\n                  return (\n                     rowData[relationName] == null ||\n                     rowData[relationName].length < 1 ||\n                     rowData[relationName] == \"\"\n                  );\n               case \"is_not_empty\":\n                  return (\n                     rowData[relationName] != null &&\n                     ((Array.isArray(rowData[relationName]) &&\n                        rowData[relationName].length > 0) ||\n                        rowData[relationName] != \"\")\n                  );\n               case \"in_data_collection\":\n               case \"not_in_data_collection\":\n                  return _logic.dataCollectionValid(\n                     rowData,\n                     relationName,\n                     rule,\n                     compareValue\n                  );\n            }\n         },\n\n         thisObjectValid: (rowData, rule, compareValue) => {\n            let result = false;\n\n            switch (rule) {\n               // if in_query condition\n               case \"in_query\":\n               case \"not_in_query\":\n                  if (!this.AB || !this._Object) return result;\n\n                  // if > 1 copy of this object in query ==> Error!\n                  var query = this.queries((q) => q.id == compareValue)[0];\n                  if (!query) return result;\n\n                  var listThisObjects = query.objects((o) => {\n                     return o.id == this._Object.id;\n                  });\n                  if (listThisObjects.length > 1) {\n                     // Alternative: choose the 1st instance of this object in the query, and make the compare on that.\n                     // Be sure to warn the developer of the limitiations of an \"this_object\" \"in_query\"  when query has > 1 copy of\n                     // this object as part of the query.\n\n                     console.error(\n                        \"HEY!  Can't compare this_object to a query that has > 1 copy of that object!\"\n                     );\n                     return true;\n                  }\n\n                  // get this object's alias from the query\n                  var alias = query.objectAlias(this._Object.id);\n\n                  // make sure all my columns in rowData are prefixed by \"alias\".columnName\n                  var newRowData = {};\n                  Object.keys(rowData).forEach((key) => {\n                     newRowData[`${alias}.${key}`] = rowData[key];\n                  });\n\n                  // then pass this on to the _logic.queryValid();\n                  return _logic.inQueryValid(\n                     newRowData,\n                     null,\n                     rule,\n                     compareValue\n                  );\n               // break; /* eslint no-unreachable */\n\n               // if in_datacollection condition\n               case \"in_data_collection\":\n               case \"not_in_data_collection\":\n                  // send rowData, null to datacollectionValid()\n                  return _logic.dataCollectionValid(\n                     rowData,\n                     null,\n                     rule,\n                     compareValue\n                  );\n               // break; /* eslint no-unreachable */\n            }\n         },\n      });\n\n      // Interface methods for parent component:\n      // this.objectLoad = _logic.objectLoad;\n      // this.viewLoad = _logic.viewLoad;\n      this.getValue = _logic.getValue;\n      // this.setValue = _logic.setValue;\n      // this.isValid = _logic.isValid;\n   }\n\n   init(options) {\n      if (options.showObjectName) {\n         this._settings.showObjectName = options.showObjectName;\n      }\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    */\n   isValid(rowData) {\n      var config_settings = this.config_settings;\n      var _logic = this._logic;\n\n      // If no conditions, then return true\n      if (\n         config_settings == null ||\n         config_settings.rules == null ||\n         config_settings.rules.length == 0\n      )\n         return true;\n\n      if (rowData == null) return false;\n\n      var result = config_settings.glue === \"and\" ? true : false;\n\n      config_settings.rules.forEach((filter) => {\n         if (!filter?.key || !filter?.rule) return;\n\n         var fieldInfo = this._Fields.filter((f) => f.id == filter.key)[0];\n         if (!fieldInfo) return;\n\n         var condResult;\n\n         // Filters that have \"this_object\" don't have a fieldInfo.key, so in that case,\n         // define a special .key == \"this_object\"\n         var ruleFieldType = fieldInfo.key;\n         if (typeof fieldInfo.key == \"undefined\") {\n            if (fieldInfo.id != \"this_object\") {\n               fieldInfo.key = \"connectField\"; // if you are looking at the parent object it won't have a key to analyze\n               ruleFieldType = fieldInfo.key;\n            } else ruleFieldType = \"this_object\";\n         }\n\n         switch (ruleFieldType) {\n            case \"string\":\n            case \"LongText\":\n            case \"email\":\n               condResult = _logic.textValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"date\":\n            case \"datetime\":\n               condResult = _logic.dateValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"number\":\n            case \"formula\":\n               condResult = _logic.numberValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"list\":\n               condResult = _logic.listValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"boolean\":\n               condResult = _logic.booleanValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"user\":\n               condResult = _logic.userValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"connectField\":\n            case \"connectObject\":\n               condResult = _logic.connectFieldValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"this_object\":\n               condResult = _logic.thisObjectValid(\n                  rowData,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n         }\n\n         if (config_settings.glue === \"and\") {\n            result = result && condResult;\n         } else {\n            result = result || condResult;\n         }\n      });\n\n      return result;\n   }\n\n   /**\n    * @method applicationLoad\n    * set application\n    *\n    * @param application {ABApplication}\n    */\n   // applicationLoad(application) {\n   //    this._Application = application;\n   // }\n\n   /**\n    * @method fieldsLoad\n    * set fields\n    *\n    * @param {array} fields\n    *        an array of fields used in this Query\n    * @param {ABObject} object [optional]\n    *        (optional) ABObject reference if this Filter should support\n    *        the \"this object\" conditions.\n    */\n   fieldsLoad(fields = [], object = null) {\n      this._Fields = fields.filter((f) => f?.fieldIsFilterable?.());\n      // NOTE: User fields are now Connections, but we want to treat them\n      // differently.\n      this._QueryFields = this._Fields\n         ? this._Fields.filter((f) => f && f.isConnection && f.key != \"user\")\n         : [];\n\n      // insert our 'this object' entry if an Object was given.\n      if (object) {\n         this._Object = object;\n\n         let thisObjOption = {\n            id: \"this_object\",\n            label: object.label,\n         };\n\n         // If object is query ,then should define default alias: \"BASE_OBJECT\"\n         if (object.viewName) {\n            thisObjOption.alias = \"BASE_OBJECT\";\n         }\n\n         this._Fields.unshift(thisObjOption);\n      } else {\n         delete this._Object;\n      }\n   }\n\n   queriesLoad(queries = []) {\n      this._Queries = queries;\n   }\n\n   /**\n    * @method queries()\n    * return an array of all the ABObjectQuery.\n    * @param {fn} filter\n    * @return {array}\n    */\n   queries(filter = () => true) {\n      let result = [];\n\n      if (this.AB) {\n         result = result.concat(this.AB.queries(filter));\n      }\n\n      if (this._Queries) {\n         result = result.concat(\n            (this._Queries || []).filter(\n               (q) => filter(q) && result.filter((r) => r.id == q.id).length < 1\n            )\n         );\n      }\n\n      return result;\n   }\n\n   setValue(settings) {\n      this.config_settings = settings || {};\n      this.config_settings.rules = this.config_settings.rules || [];\n   }\n};\n","/*\n * ABFieldAutoIndex\n *\n * An ABFieldAutoIndex defines a AutoIndex field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldAutoIndexDefaults = {\n   key: \"AutoIndex\",\n   // unique key to reference this specific DataField\n\n   description: \"Auto Increment Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"key\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'key'  to\n   // reference 'fa-key'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Auto Index\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"tinyint\", \"smallint\", \"mediumint\", \"int\", \"integer\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   prefix: \"\",\n   delimiter: \"none\",\n   displayLength: 4,\n   previewText: \"0000\",\n};\n\nmodule.exports = class ABFieldAutoIndexCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldAutoIndexDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldAutoIndexDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static getDelimiterSign(text) {\n      const delimiterItem = this.delimiterList().filter((item) => {\n         return item.id == text;\n      })[0];\n\n      return delimiterItem ? delimiterItem.sign : \"\";\n   }\n\n   static delimiterList() {\n      return [\n         { id: \"none\", value: L(\"None\"), sign: \"\" },\n         { id: \"comma\", value: L(\"Comma\"), sign: \", \" },\n         { id: \"slash\", value: L(\"Slash\"), sign: \"/\" },\n         { id: \"space\", value: L(\"Space\"), sign: \" \" },\n         { id: \"dash\", value: L(\"Dash\"), sign: \"-\" },\n         { id: \"colon\", value: L(\"Colon\"), sign: \":\" },\n      ];\n   }\n\n   static setValueToIndex(prefix, delimiter, displayLength, displayNumber) {\n      const resultIndex =\n         prefix +\n         this.getDelimiterSign(delimiter) +\n         (\"0000000000\" + displayNumber).slice(-parseInt(displayLength));\n\n      return resultIndex;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.displayLength = parseInt(this.settings.displayLength);\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Remove every values, then we will use AUTO_INCREMENT of MySQL\n      delete values[this.columnName];\n   }\n\n   format(rowData) {\n      if (!rowData?.[this.columnName]) return \"\";\n\n      try {\n         const resultAutoIndex = this.constructor.setValueToIndex(\n            this.settings.prefix,\n            this.settings.delimiter,\n            this.settings.displayLength,\n            rowData[this.columnName]\n         );\n\n         return resultAutoIndex;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n","/*\n * ABFieldBoolean\n *\n * An ABFieldBoolean defines a boolean field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldBooleanDefaults = {\n   key: \"boolean\",\n   // unique key to reference this specific DataField\n\n   description: \"A single checkbox that can be checked or unchecked.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"check-square-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'check-square-o'  to\n   // reference 'fa-check-square-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Checkbox\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"boolean\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"bool\", \"boolean\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   default: 0,\n};\n\nmodule.exports = class ABFieldBooleanCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldBooleanDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldBooleanDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      if (this.settings.default != null)\n         this.settings.default = parseInt(this.settings.default);\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] == null && this.settings.default != null) {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n};\n","/*\n * ABFieldCalculate\n *\n * An ABFieldCalculate defines a calculate field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\n/** Private methods */\nfunction AGE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   const today = new Date();\n   const oneYear = 31536000000; // (24 * 60 * 60 * 1000) * 365;\n   const diffYears = (today - dataDate) / oneYear;\n\n   if (diffYears < 1) return Math.round(diffYears * 10) / 10;\n   // float 2 digits\n   else return Math.floor(diffYears); // no float digit\n\n   // const today = new Date();\n   // const age = today.getFullYear() - dataDate.getFullYear();\n   // if (age < 1) {\n   // \tconst m = today.getMonth() - dataDate.getMonth();\n\n   // \tage = parseFloat(\"0.\" + m);\n\n   // \t// if (m < 0 || (m === 0 && today.getDate() < dataDate.getDate())) {\n   // \t// \tage--;\n   // \t// }\n   // }\n   // return age;\n}\n\nfunction YEAR(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   return dataDate.getFullYear();\n}\n\nfunction MONTH(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // Start at 0\n   return dataDate.getMonth();\n}\n\nfunction DAY(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   return dataDate.getDate();\n}\n\nfunction DATE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one day\n   const oneDay = 86400000; // 1000 * 60 * 60 * 24\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneDay);\n}\n\nfunction HOUR(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one hour\n   const oneHour = 3600000; // 1000 * 60 * 60\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneHour);\n}\n\nfunction MINUTE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one hour\n   const oneMinute = 60000; // 1000 * 60\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneMinute);\n}\n\nfunction MINUTE_TO_HOUR(mins) {\n   const hours = mins / 60;\n   const rhours = Math.floor(hours);\n   const minutes = (hours - rhours) * 60;\n   const rminutes = Math.round(minutes);\n\n   return parseFloat(`${rhours}.${rminutes}`);\n}\n\nconst ABFieldCalculateDefaults = {\n   key: \"calculate\",\n   // unique key to reference this specific DataField\n\n   description: \"Perform a calculation based upon existing values\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"calculator\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'calculator'  to\n   // reference 'fa-calculator'\n\n   isFilterable: (field) => {\n      const unsupportedInFilter = [\"MINUTE_TO_HOUR\", \"DATE\", \"HOUR\", \"MINUTE\"];\n      const unsupported = unsupportedInFilter.filter((item) =>\n         field.settings.formula.includes(item)\n      );\n      return unsupported.length == 0;\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Calculate\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   formula: \"\",\n   decimalSign: \"none\", // \"none\", \"comma\", \"period\", \"space\"\n   decimalPlaces: 0, // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\n};\n\nmodule.exports = class ABFieldCalculateCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldCalculateDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldCalculateDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   /**\n    * @method convertToJs\n    *\n    * @param {ABOBject} object\n    * @param {string} formula\n    * @param {object} rowData\n    * @param {integer} place\n    * @param {string} alias [Optional]\n    */\n   static convertToJs(\n      object,\n      formula,\n      rowData,\n      place,\n      alias = null,\n      recalculate = false\n   ) {\n      if (!formula) return \"\";\n\n      // replace with current date\n      formula = formula.replace(/\\(CURRENT\\)/g, \"(new Date())\");\n\n      object.fields().forEach((f) => {\n         let colName = f.columnName;\n         if (colName.indexOf(\".\") > -1)\n            // QUERY: get only column name\n            colName = colName.split(\".\")[1];\n\n         // if template does not contain, then should skip\n         if (formula.indexOf(\"{\" + colName + \"}\") < 0) return;\n\n         const data =\n            rowData[`${object.alias ?? alias}.${f.columnName}`] ??\n            rowData[f.columnName];\n\n         // number fields\n         if (f.key == \"number\") {\n            const numberVal = `(${data || 0})`; // (number) - NOTE : (-5) to support negative number\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               numberVal\n            );\n         }\n         // calculate and formula fields\n         else if (f.key == \"calculate\" || f.key == \"formula\") {\n            let calVal = f.format(rowData, recalculate) || 0;\n\n            // pull number only\n            if (typeof calVal == \"string\")\n               calVal = calVal.replace(/[^-0-9.]/g, \"\");\n\n            calVal = `(${calVal})`;\n\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               calVal\n            );\n         }\n         // date fields\n         else if (f.key == \"date\" || f.key == \"datetime\") {\n            const dateVal = `\"${data || \"\"}\"`; // \"date\"\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               dateVal\n            );\n         }\n         // boolean fields\n         else if (f.key == \"boolean\") {\n            const booleanVal = `(${data || 0})`; // show 1 or 0 for boolean\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               booleanVal\n            );\n         }\n      });\n\n      // decimal places - toFixed()\n      // FIX: floating number calculation\n      // https://randomascii.wordpress.com/2012/02/25/comparing-floating-point-numbers-2012-edition/\n      return eval(formula).toFixed(place || 0);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // this field is read only\n      delete values[this.columnName];\n   }\n\n   format(rowData, recalculate = false) {\n      let place = 0;\n      if (this.settings.decimalSign != \"none\") {\n         place = this.settings.decimalPlaces;\n      }\n\n      try {\n         let result = this.constructor.convertToJs(\n            this.object,\n            this.settings.formula,\n            rowData,\n            place,\n            this.alias,\n            recalculate\n         );\n\n         if (typeof result == \"string\")\n            result = result.replace(/[^-0-9.]/g, \"\");\n\n         switch (this.settings.decimalSign) {\n            case \"comma\":\n               result = result.replace(\".\", \",\");\n               break;\n            case \"space\":\n               result = result.replace(\".\", \" \");\n               break;\n         }\n\n         return result;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n","/*\n * ABFieldCombine\n *\n * An ABFieldCombine defines a combined field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\n// function L(key, altText) {\n//    // TODO:\n//    return altText; // AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABFieldCombinedDefaults = {\n   key: \"combined\",\n   // unique key to reference this specific DataField\n\n   description: \"Combined Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"key\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'key'  to\n   // reference 'fa-key'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Combined Field\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   combinedFields: \"\",\n   // {string} \"field's uuid1, field's uuid2, field's uuid3, ...\"\n   // This tells us what fields will be combined.\n   // if we don't have this, the old value which we filled out won't be cleared when we do \"Add field\" this type again.\n\n   delimiter: \"plus\", // plus, space, dash, period\n};\n\nmodule.exports = class ABFieldCombineCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldCombinedDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldCombinedDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.delimiter =\n         values.settings.delimiter || defaultValues.delimiter;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Remove every values, then we will use AUTO_INCREMENT of MySQL\n      delete values[this.columnName];\n   }\n\n   /**\n    * @method getCombinedFields\n    * Retrieve the fields used to combine and generate a specific value\n    *\n    * @return {Array}\n    */\n   getCombinedFields() {\n      const result = [];\n\n      (this.settings?.combinedFields ?? \"\").split(\",\").forEach((fieldId) => {\n         const fld = this.object.fields((f) => f.id == fieldId)[0];\n         if (!fld) return;\n\n         result.push(fld);\n      });\n\n      return result;\n   }\n\n   /**\n    * @method format\n    * Convert the value of a connected field (without a custom index) to display the label of the linked object\n    *\n    * @param {Object} rowData\n    * @returns {String}\n    */\n   format(rowData) {\n      let val = rowData[this.columnName] ?? \"\";\n\n      this.getCombinedFields().forEach((f, index) => {\n         if (\n            f.key != \"connectObject\" ||\n            f.settings.indexField ||\n            f.settings.indexField2\n         )\n            return;\n\n         let connectVal = rowData[f.relationName()];\n         if (!connectVal) return;\n\n         if (!Array.isArray(connectVal)) connectVal = [connectVal];\n\n         const connectLabel = connectVal\n            .map((item) => item.text ?? f.datasourceLink.displayData(item))\n            .join(\"|\");\n\n         val = val.replace(rowData[f.columnName], connectLabel);\n      });\n\n      return val;\n   }\n};\n","/*\n * ABFieldConnect\n *\n * An ABFieldConnect defines a connect to other object field type.\n *\n */\n\nvar ABField = require(\"../../platform/dataFields/ABField\");\n\n// function L(key, altText) {\n//    // TODO:\n//    return altText; // AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABFieldConnectDefaults = {\n   key: \"connectObject\",\n   // unique key to reference this specific DataField\n\n   description: \"Connect two data objects together\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"external-link\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'external-link'  to\n   // reference 'fa-external-link'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      const linkType = `${field?.settings?.linkType}:${field?.settings?.linkViaType}`;\n      return [\"one:many\", \"one:one\"].indexOf(linkType) > -1;\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Connect to another record\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   linkObject: \"\", // ABObject.id\n   // the .id of the ABObject we are connected to\n\n   linkType: \"one\", // [one, many]\n   // 'one' : this object can have only 1 of our linkObject\n   // 'many': this object can have MANY of our linkObject\n\n   linkViaType: \"many\", // [one, many]\n   // 'one' : the linkedObject can only have 1 of me\n   // 'many' : the linkedObject can have many of me\n\n   linkColumn: \"\", // ABField.id\n   // the .id of the field in the linkedObject that is our\n   // connected field.\n\n   isSource: null, // bit : 1,0\n   // isSource indicates that this object is the source of the connection:\n   // if linkType==one, and isSource=1, then the value in this object's field\n   // \t\tis the connected object's id\n   // if linkType == one, and isSource = 0, then the linkObject has this obj.id\n   //  \tin it's connected field (linkColumn)\n\n   // the next 3 Fields are concerning how we connect to other ABObjects when\n   // we are NOT using the .uuid as the connecting Value. Instead, there is an\n   // ABIndex setting we are connecting with.\n   isCustomFK: 0,\n   // {bool} truthy [0,1, etc...]\n   // indicates that this connection is using 1 or more custom foreign keys\n   // for the data it is storing in it's relationship.\n\n   indexField: \"\", // ABField.id\n   // {string} {ABField.id}\n   // In a Connection defined between A --> B, this field represents the ABField\n   // that is used for the data being stored.\n   // In 1:1,  1:M  or M:1  relationships, .indexField always refers to the\n   //       field we are pulling the Data FROM.\n   // In M:N relationships:  this will refer to the A.Field.id that is a custom\n   //       key (if any).\n\n   indexField2: \"\", // ABField.id\n   // {string}  {ABField.id}\n   // In the M:N relationship: this field refers to the B.Field.id that is a\n   //       custom Key for the data we are storing.\n};\n\nmodule.exports = class ABFieldConnectCore extends ABField {\n   constructor(values, object, fieldDefaults = ABFieldConnectDefaults) {\n      super(values, object, fieldDefaults);\n\n      this.isConnection = true;\n      // {bool}\n      // is this an ABFieldConnect type of field.\n      // this is a simplified helper to identify if an ABField is a type\n      // of connect field.  Since this is the only place it is defined,\n      // all other field types will be falsy\n\n      // // text to Int:\n      // this.settings.isSource = parseInt(this.settings.isSource || 0);\n      // this.settings.isCustomFK = parseInt(this.settings.isCustomFK || 0);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldConnectDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.isSource = parseInt(this.settings.isSource || 0);\n      this.settings.isCustomFK = parseInt(this.settings.isCustomFK || 0);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(/* values */) {}\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n\n   relationName() {\n      // there is object name - {objectName}.{columnName}\n      if (this.columnName.indexOf(\".\") > -1) {\n         const names = this.columnName.split(\".\");\n         return `${names[0]}.${this.AB.rules.toFieldRelationFormat(names[1])}`;\n      } else {\n         return this.AB.rules.toFieldRelationFormat(this.columnName);\n      }\n   }\n\n   /**\n    * @method datasourceLink\n    * return the ABObject that this field connection links to\n    * @return {ABObject}\n    */\n   get datasourceLink() {\n      const linkObj = this.AB.objectByID(this.settings.linkObject);\n      if (!linkObj) {\n         const configError = new Error(\n            `ConnectField[${this.label}][${this.id}] unable to find linkObject[${this.settings.linkObject}]`\n         );\n         this.AB.notify.builder(configError, {\n            field: this,\n            linkObject: this.settings.linkObject,\n         });\n      }\n      return linkObj;\n   }\n\n   /**\n    * @method fieldLink\n    * return the ABField that we are linked to.\n    * @return {ABDataField}  or undefined if not found.\n    */\n   get fieldLink() {\n      const objectLink = this.datasourceLink;\n      if (!objectLink) return null; // note: already Notified\n\n      const linkColumn = objectLink.fieldByID(this.settings.linkColumn);\n      if (!linkColumn) {\n         const configError = new Error(\n            `ConnectField[${this.label}][${this.id}] unable to find linkColumn[${this.settings.linkColumn}]`\n         );\n         this.AB.notify.builder(configError, {\n            field: this,\n            linkColumn: this.settings.linkColumn,\n         });\n      }\n      return linkColumn;\n   }\n\n   /**\n    * @method pullRelationValues\n    * Return the data values for this field entry in the provided data row.\n    * @param {*} row\n    * @return {array}\n    */\n   pullRelationValues(row) {\n      let selectedData;\n\n      // Get linked object\n      const linkedObject = this.datasourceLink;\n\n      let data = this.dataValue(row);\n      if (data && linkedObject) {\n         // convert to JSON\n         if (typeof data == \"string\") {\n            try {\n               data = JSON.parse(data);\n            } catch (e) {\n               // must be a UUID\n               // so just set that to selectedData:\n               selectedData = data;\n            }\n         }\n\n         selectedData = data;\n      }\n\n      return selectedData;\n   }\n\n   dataValue(rowData) {\n      if (rowData == null) return \"\";\n\n      const propName = `${this.object.name}.${this.relationName()}`;\n\n      return (\n         rowData[this.relationName()] ||\n         rowData[propName] ||\n         rowData[this.columnName] ||\n         \"\"\n      );\n   }\n\n   format(rowData) {\n      const val = this.pullRelationValues(rowData);\n      const linkedObject = this.datasourceLink;\n\n      // array\n      if (Array.isArray(val))\n         return val\n            .map((v) => {\n               if (v.text == null) return linkedObject.displayData(v) || \"\";\n               else return v.text || \"\";\n            })\n            .join(\", \");\n      // string\n      else if (val) {\n         if (val.text == null) return linkedObject.displayData(val) || \"\";\n         else if (val.text) return val.text || \"\";\n      }\n      // empty string\n      else return \"\";\n   }\n\n   /**\n    * @method linkType\n    * return the type of connection we have to our connected object\n    * @return {string}\n    */\n   linkType() {\n      return this.settings.linkType;\n   }\n\n   /**\n    * @method linkType\n    * return the type of connection we have to our connected object\n    * @return {string}\n    */\n   linkViaType() {\n      return this.settings.linkViaType;\n   }\n\n   /**\n    * @method isSource\n    * does this object contain the .id of the remote object (in case of linkType : one )\n    * @return {bool}\n    */\n   isSource() {\n      return this.settings.isSource;\n   }\n\n   /**\n    * @property indexField\n    * @return {ABField}\n    */\n   get indexField() {\n      if (!this.settings.isCustomFK || !this.settings.indexField) {\n         return null;\n      }\n      const linkType = `${this.settings.linkType}:${this.settings.linkViaType}`;\n      // 1:M\n      if (linkType === \"one:many\") {\n         return this.datasourceLink.fieldByID(this.settings.indexField);\n      }\n      // 1:1\n      else if (linkType === \"one:one\") {\n         if (this.settings.isSource) {\n            return this.datasourceLink.fieldByID(this.settings.indexField);\n         } else {\n            return this.object.fieldByID(this.settings.indexField);\n         }\n      }\n      // M:1\n      else if (linkType === \"many:one\") {\n         return this.object.fieldByID(this.settings.indexField);\n      }\n      // M:N\n      else if (linkType === \"many:many\") {\n         let indexField = this.object.fieldByID(this.settings.indexField);\n\n         if (indexField == null)\n            indexField = this.datasourceLink.fieldByID(\n               this.settings.indexField\n            );\n\n         return indexField;\n      }\n\n      return null;\n   }\n\n   /**\n    * @property indexField2\n    * @return {ABField}\n    */\n   get indexField2() {\n      if (!this.settings.isCustomFK || !this.settings.indexField2) {\n         return null;\n      }\n\n      let indexField;\n\n      // M:N only\n      if (\n         this.settings.linkType == \"many\" &&\n         this.settings.linkViaType == \"many\"\n      ) {\n         indexField = this.object.fieldByID(this.settings.indexField2);\n\n         if (indexField == null)\n            indexField = this.datasourceLink.fieldByID(\n               this.settings.indexField2\n            );\n      }\n\n      return indexField;\n   }\n\n   /**\n    * @method getRelationValue\n    * pull values for update connect data\n    * @param {Object} rowData\n    * @param {Object} options - {\n    *                               forUpdate: boolean\n    *                           }\n    * @return {Object}\n    */\n   getRelationValue(rowData, options = {}) {\n      if (rowData == null) return;\n      let colName;\n      const indexField = this.indexField;\n      const datasourceLink = this.datasourceLink;\n\n      const linkType = `${this.settings.linkType}:${this.settings.linkViaType}`;\n\n      // custom index\n      // M:N\n      if (linkType === \"many:many\") {\n         const indexField2 = this.indexField2;\n\n         if (indexField && indexField.object.id == datasourceLink.id) {\n            colName = indexField.columnName;\n         } else if (indexField2 && indexField2.object.id == datasourceLink.id) {\n            colName = indexField2.columnName;\n         }\n      }\n      // 1:M, 1:1 isSource = true\n      else if (\n         indexField &&\n         (linkType === \"one:many\" ||\n            (linkType === \"one:one\" && this.settings.isSource))\n      ) {\n         colName = indexField.columnName;\n      }\n      // M:1\n      else if (linkType === \"many:one\") {\n         // NOTE: M:1 has special case\n         // it uses different value for search and update.\n         // UPDATE uses row id\n         // SEARCH uses custom index value\n         if (options.forUpdate) {\n            colName = datasourceLink.PK();\n         } else {\n            colName = indexField ? indexField.columnName : datasourceLink.PK();\n         }\n      }\n      // NO CUSTOM INDEX\n      else if (datasourceLink) {\n         colName = datasourceLink.PK();\n      }\n\n      let result =\n         rowData[colName] ||\n         rowData[this.object?.PK()] ||\n         rowData.id ||\n         rowData;\n\n      if (colName == \"id\") {\n         result = parseInt(result);\n      }\n\n      return result;\n   }\n};\n","/*\n * ABFieldCore\n *\n * ABFieldBase defines the common ABField structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABObject classes.\n *\n */\n// const ABEmitter = require(\"../../platform/ABEmitter\");\nconst ABMLClass = require(\"../../platform/ABMLClass\");\n\nmodule.exports = class ABFieldCore extends ABMLClass {\n   constructor(values, object, fieldDefaults) {\n      super([\"label\"], object.AB);\n\n      // NOTE: setup this first so later we can use .fieldType(), .fieldIcon()\n      this.defaults = fieldDefaults || {};\n\n      /*\n  \t\t{\n  \t\t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n  \t\t\tkey:'fieldKey',\t\t\t\t// unique key for this Field\n  \t\t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this Field Type\n  \t\t\tlabel:'',\t\t\t\t\t// pulled from translation\n\t\t\tcolumnName:'column_name',\t// a valid mysql table.column name\n\t\t\tisImported: 1/0,\t\t\t// flag to mark is import from other object\n\t\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n\t\t\t\tshowIcon:true/false,\t// only useful in Object Workspace DataTable\n\t\t\t\tisImported: 1/0,\t\t// flag to mark is import from other object\n\t\t\t\trequired: 1/0,\t\t\t// field allows does not allow NULL or it does allow NULL\n\t\t\t\twidth: {int}\t\t\t// width of display column\n\n\t\t\t\t// specific for dataField\n\t\t\t},\n\t\t\ttranslations:[]\n  \t\t}\n  \t\t*/\n\n      this.object = object;\n\n      this.fromValues(values);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n   static get reservedNames() {\n      return [\n         \"id\",\n         \"created_at\",\n         \"updated_at\",\n         \"properties\",\n         \"createdAt\",\n         \"updatedAt\",\n      ];\n   }\n\n   static defaultValues() {\n      return {};\n   }\n\n   // unique key to reference this specific DataField\n   fieldKey() {\n      return this.defaults.key;\n   }\n\n   /**\n    * Sails ORM data types that can be imported to this DataField\n    * @return {Array}\n    */\n   fieldOrmTypes() {\n      if (this.defaults.compatibleOrmTypes) {\n         if (Array.isArray(this.defaults.compatibleOrmTypes)) {\n            return this.defaults.compatibleOrmTypes;\n         } else {\n            return [this.defaults.compatibleOrmTypes];\n         }\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * Mysql data types that can be imported to this DataField\n    * @return {Array}\n    */\n   fieldMysqlTypes() {\n      if (this.defaults.compatibleMysqlTypes) {\n         if (Array.isArray(this.defaults.compatibleMysqlTypes)) {\n            return this.defaults.compatibleMysqlTypes;\n         } else {\n            return [this.defaults.compatibleMysqlTypes];\n         }\n      } else {\n         return [];\n      }\n   }\n\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   fieldIcon() {\n      return this.defaults.icon;\n   }\n\n   // the multilingual text for the name of this data field.\n   fieldMenuName() {\n      return this.defaults.menuName;\n   }\n\n   // the multilingual text for the name of this data field.\n   fieldDescription() {\n      return this.defaults.description;\n   }\n\n   // the flag to set when checking if field should be filterable\n   fieldIsFilterable() {\n      if (this.defaults.isFilterable != null) {\n         if (typeof this.defaults.isFilterable === \"function\") {\n            return this.defaults.isFilterable(this);\n         } else {\n            return this.defaults.isFilterable;\n         }\n      }\n\n      return 1;\n   }\n\n   // the flag to set when checking if field should be sortable\n   fieldIsSortable() {\n      if (this.defaults.isSortable != null) {\n         if (typeof this.defaults.isSortable === \"function\") {\n            return this.defaults.isSortable(this);\n         } else {\n            return this.defaults.isSortable;\n         }\n      }\n\n      return 1;\n   }\n\n   // the flag to set when checking if the field should be used as a label\n   fieldUseAsLabel() {\n      if (this.defaults.useAsLabel != null) {\n         if (typeof this.defaults.useAsLabel === \"function\") {\n            return this.defaults.useAsLabel(this);\n         } else {\n            return this.defaults.useAsLabel;\n         }\n      }\n\n      return 1;\n   }\n\n   fieldSupportRequire() {\n      if (this.defaults.supportRequire) return this.defaults.supportRequire;\n      // default\n      else return true;\n   }\n\n   fieldSupportQuery() {\n      if (this.defaults.supportQuery != null) {\n         if (typeof this.defaults.supportQuery === \"function\") {\n            return this.defaults.supportQuery(this);\n         } else {\n            return this.defaults.supportQuery;\n         }\n      }\n\n      return true;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABField instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      return {\n         id: this.id,\n         type: this.type || \"field\",\n         key: this.key,\n         icon: this.icon,\n         isImported: this.isImported,\n         columnName: this.columnName,\n         settings: this.settings,\n         translations: obj.translations,\n      };\n   }\n\n   defaultCheck(val, defaultVal) {\n      let returnVal = defaultVal;\n      if (typeof val != \"undefined\") {\n         returnVal = val;\n      }\n      return returnVal;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      if (!this.id) this.id = values.id; // NOTE: only exists after .save()\n      this.type == values.type || \"field\";\n      this.key = values.key || this.fieldKey();\n      this.icon = values.icon || this.fieldIcon();\n\n      values.settings = values.settings || {};\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.columnName = values.columnName || \"\";\n\n      this.isImported = values.isImported || 0;\n\n      this.settings = values.settings;\n      this.settings.showIcon = this.defaultCheck(values.settings.showIcon, \"1\");\n      this.settings.required = this.defaultCheck(values.settings.required, \"0\");\n      this.settings.width = this.defaultCheck(values.settings.width, \"0\");\n\n      // convert from \"0\" => 0\n      this.isImported = parseInt(this.isImported);\n      this.settings.showIcon = parseInt(this.settings.showIcon);\n      this.settings.required = parseInt(this.settings.required);\n      this.settings.unique = parseInt(this.settings.unique || 0);\n      this.settings.width = parseInt(this.settings.width);\n\n      // we're responsible for setting up our specific settings:\n      const defaultValues = this.constructor.defaultValues() || {};\n      for (const dv in defaultValues) {\n         this.settings[dv] = this.defaultCheck(\n            values.settings[dv],\n            defaultValues[dv]\n         );\n      }\n\n      // const the MLClass now process the Translations\n      super.fromValues(values);\n\n      // final validity check: columnName really should have a value:\n      this.columnName = this.columnName || this.label;\n\n      // knex does not like .(dot) in table and column names\n      // https://github.com/knex/knex/issues/2762\n      this.columnName = this.columnName.replace(/[^a-zA-Z0-9_ ]/gi, \"\");\n   }\n\n   /**\n    * @method urlPointer()\n    * return a string pointer to decode this object from the root application\n    * object.\n    * @return {string} pointer reference\n    */\n   urlPointer() {\n      return this.object.urlField() + this.id;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      values[this.columnName] = \"\";\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    */\n   isValidData(data, validator) {\n      // console.error('!!! Field ['+this.fieldKey()+'] has not implemented .isValidData()!!!');\n      if (\n         this.settings.required &&\n         (data[this.columnName] == null || data[this.columnName] == \"\") &&\n         data[this.columnName] != 0\n      ) {\n         validator.addError(this.columnName, \"This is a required field.\");\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return false;\n   }\n\n   dataValue(rowData) {\n      const propName = `${this.alias || this.object.name}.${this.columnName}`;\n\n      let result = \"\";\n      if (rowData?.[this.columnName] != null) {\n         result = rowData[this.columnName];\n      } else if (rowData?.[propName] != null) {\n         result = rowData[propName];\n      }\n\n      return result;\n   }\n\n   /**\n    * @method format\n    * return display text to detail comonent and define label of object\n    *\n    * @param {Object} rowData - data\n    */\n   format(rowData) {\n      if (rowData) {\n         return this.dataValue(rowData);\n      } else return \"\";\n   }\n\n   /**\n    * @method toDefinition()\n    *\n    * convert this instance into an ABDefinition object.\n    *\n    * @return {ABDefinition}\n    */\n   toDefinition() {\n      const myDef = super.toDefinition();\n\n      // attempt to provide a more descriptive name:\n      // [obj]->[fieldName]\n      if (myDef.name == \"\") {\n         myDef.name =\n            myDef.json.name || myDef.json.label || myDef.json.columnName;\n      }\n      if (this.object && this.object.name) {\n         myDef.name = `${this.object.name}->${myDef.name}`;\n      }\n      return myDef;\n   }\n};\n","/*\n * ABFieldDate\n *\n * An ABFieldDate defines a date field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\n/*function L(key, altText) {\n   // TODO:git \n   // return altText; // AD.lang.label.getLabel(key) || altText;\n}*/\n\nconst ABFieldDateDefaults = {\n   key: \"date\",\n   // unique key to reference this specific DataField\n\n   description: \"Pick one from a calendar.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"calendar\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'calendar'  to\n   // reference 'fa-calendar'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Date\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"date\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"date\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   dateFormat: 2, // 1 (Ignore date), 2, 3, 4, 5\n   defaultDate: 1, // 1 (None), 2 (Current Date), 3 (Specific Date)\n   defaultDateValue: null, // {Date}\n   validateCondition: \"none\",\n   validateRangeUnit: \"days\",\n   validateRangeBefore: 0,\n   validateRangeAfter: 0,\n   validateStartDate: null,\n   validateEndDate: null,\n};\n\nmodule.exports = class ABFieldDateCore extends ABField {\n   constructor(values, object, defaultValues = ABFieldDateDefaults) {\n      super(values, object, defaultValues);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldDateDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   // TODO: current webpack install fails here without babel-loader,\n   // so swtich this to old JS method of Static Values (see bottom)\n   // static RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2}$\";\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.dateFormat = parseInt(this.settings.dateFormat);\n      this.settings.defaultDate = parseInt(this.settings.defaultDate);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] != null) return;\n\n      let dateResult;\n\n      // Set current date as default\n      if (this.settings.defaultDate == 2) {\n         dateResult = new Date();\n      }\n      // Set specific date as default\n      else if (\n         this.settings.defaultDate == 3 &&\n         this.settings.defaultDateValue\n      ) {\n         dateResult = new Date(this.settings.defaultDateValue);\n      }\n\n      // if no default value is set, then don't insert a value.\n      if (dateResult != null) {\n         values[this.columnName] = this.AB.rules.toDateFormat(dateResult, {\n            format: \"YYYY-MM-DD\",\n         });\n         // values[this.columnName] = moment(dateResult).format(\"YYYY-MM-DD\");\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n      var L = this.AB.Label();\n\n      const currentDate = new Date();\n      currentDate.setHours(0, 0, 0, 0);\n\n      if (data[this.columnName]) {\n         let value = data[this.columnName];\n\n         if (!(value instanceof Date)) {\n            value = this.AB.rules.toDate(value);\n            // value = new Date(this.convertToMoment(value));\n         }\n\n         // verify we didn't end up with an InValid Date result.\n         if (\n            Object.prototype.toString.call(value) === \"[object Date]\" &&\n            isFinite(value)\n         ) {\n            let isValid = true;\n\n            // Custom vaildate is here\n            if (this.settings && this.settings.validateCondition) {\n               const startDate = this.settings.validateStartDate\n                     ? new Date(this.settings.validateStartDate)\n                     : null,\n                  endDate = this.settings.validateEndDate\n                     ? new Date(this.settings.validateEndDate)\n                     : null,\n                  startDateDisplay = this.getDateDisplay(startDate),\n                  endDateDisplay = this.getDateDisplay(endDate);\n               const minDate = this.AB.rules.subtractDate(\n                  new Date(),\n                  this.settings.validateRangeBefore,\n                  this.settings.validateRangeUnit\n               );\n               const maxDate = this.AB.rules.addDate(\n                  new Date(),\n                  this.settings.validateRangeAfter,\n                  this.settings.validateRangeUnit\n               );\n               switch (this.settings.validateCondition) {\n                  case \"dateRange\":\n                     if (minDate < value && value < maxDate) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should be in between {0} and {1}\", [\n                              this.getDateDisplay(minDate),\n                              this.getDateDisplay(maxDate),\n                           ])\n                        );\n                     }\n\n                     break;\n                  case \"between\":\n                     if (startDate < value && value < endDate) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should be in between {0} and {1}\", [\n                              startDateDisplay,\n                              endDateDisplay,\n                           ])\n                        );\n                     }\n                     break;\n                  case \"notBetween\":\n                     if (value < startDate && endDate < value) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should not be in between {0} and {1}\", [\n                              startDateDisplay,\n                              endDateDisplay,\n                           ])\n                        );\n                     }\n                     break;\n                  case \"=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() == startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<>\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() != startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should not equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \">\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() > startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should after {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() < startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should before {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \">=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() >= startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should after or equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() <= startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should before or equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"lessCurrentDate\":\n                     isValid =\n                        value.getTime &&\n                        value.getTime() < currentDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should before {0}\", [\n                              this.getDateDisplay(currentDate),\n                           ])\n                        );\n                     break;\n                  case \"lessEqualCurrentDate\":\n                     isValid =\n                        value.getTime &&\n                        value.getTime() <= currentDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should before or equal {0}\", [\n                              this.getDateDisplay(currentDate),\n                           ])\n                        );\n                     break;\n               }\n            }\n\n            if (isValid) {\n               // Reformat value to DB\n               // NOTE: should we update here?\n               data[this.columnName] = this.exportValue(value);\n            }\n         } else {\n            // return a validation error\n            validator.addError(this.columnName, \"Should be a Date!\");\n         }\n      }\n   }\n\n   format(rowData) {\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n\n      // pull format from settings.\n      const dateObj = this.AB.rules.toDate(d);\n      return this.getDateDisplay(dateObj);\n\n      // const momentObj = this.convertToMoment(d);\n      // return this.getDateDisplay(new Date(momentObj));\n   }\n\n   getFormat() {\n      let dateFormatString = \"\";\n\n      const dateFormat =\n         this.settings && this.settings.dateFormat\n            ? this.settings.dateFormat\n            : \"\";\n\n      switch (dateFormat) {\n         //Ignore Date\n         case (1, 2):\n            {\n               dateFormatString = \"%d/%m/%Y\";\n            }\n            break;\n         //mm/dd/yyyy\n         case 3:\n            {\n               dateFormatString = \"%m/%d/%Y\";\n            }\n            break;\n         //M D, yyyy\n         case 4:\n            {\n               dateFormatString = \"%M %d, %Y\";\n            }\n            break;\n         //D M, yyyy\n         case 5:\n            {\n               dateFormatString = \"%d %M, %Y\";\n            }\n            break;\n         default:\n            {\n               dateFormatString = \"%d/%m/%Y\";\n            }\n            break;\n      }\n\n      return dateFormatString;\n   }\n\n   getDateDisplay(dateData) {\n      const dateFormat = this.getFormat();\n\n      return this.dateToString(dateFormat, dateData);\n   }\n\n   // convertToMoment(string) {\n   //    const result = moment(string);\n\n   //    const supportFormats = [\n   //       \"DD/MM/YYYY\",\n   //       \"MM/DD/YYYY\",\n   //       \"DD-MM-YYYY\",\n   //       \"MM-DD-YYYY\"\n   //    ];\n\n   //    supportFormats.forEach((format) => {\n   //       if (!result || !result.isValid()) result = moment(string, format);\n   //    });\n\n   //    return result;\n   // }\n\n   exportValue(value) {\n      return value\n         ? this.AB.rules.toDateFormat(value, {\n              format: \"YYYY-MM-DD\",\n           })\n         : \"\";\n      // return this.convertToMoment(value).format(\"YYYY-MM-DD\");\n   }\n\n   dateToString(dateFormat, dateData) {\n      if (dateData && dateData.toString) return dateData.toString();\n      else return \"\";\n   }\n};\n\n// Transition Code:\n// revert to static RegEx once babel-loader is working locally.\nmodule.exports.RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2}$\";\n","/*\n * ABFieldDateTime\n *\n * An ABFieldDateTime defines a datetime field type.\n *\n */\n\nconst ABFieldDateCore = require(\"./ABFieldDateCore\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldDateDefaults = {\n   key: \"datetime\",\n   // unique key to reference this specific DataField\n\n   description: \"Pick one from date & time.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"clock-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'clock-o'  to\n   // reference 'clock-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Date & Time\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"datetime\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"datetime\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   timeFormat: 2, // 1 (Ignore time), 2, 3\n   defaultTime: 1, // 1 (None), 2 (Current Time), 3 (Specific Time)\n   defaultTimeValue: null, // {Date}\n};\n\nmodule.exports = class ABFieldDateTimeCore extends ABFieldDateCore {\n   constructor(values, object) {\n      super(values, object, ABFieldDateDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldDateDefaults;\n   }\n\n   static defaultValues() {\n      const baseDefault = super.defaultValues();\n      return Object.assign(baseDefault, defaultValues);\n   }\n\n   // TODO: current webpack install fails here without babel-loader,\n   // so swtich this to old JS method of Static Values (see bottom)\n   // static RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$\";\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.timeFormat = parseInt(this.settings.timeFormat);\n      this.settings.defaultTime = parseInt(this.settings.defaultTime);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] != null) return;\n\n      super.defaultValue(values);\n\n      let dateResult;\n\n      // From default value of ABFieldDateCore\n      if (values[this.columnName]) {\n         dateResult = this.AB.rules.toDate(values[this.columnName]);\n         // const momentVal = this.convertToMoment(values[this.columnName]);\n         // if (momentVal.isValid()) {\n         //    dateResult = new Date(momentVal);\n         // }\n      }\n\n      // Set current time as default\n      if (this.settings.defaultTime == 2) {\n         const currDate = new Date();\n\n         if (dateResult == null) dateResult = new Date();\n\n         dateResult.setHours(currDate.getHours());\n         dateResult.setMinutes(currDate.getMinutes());\n         dateResult.setSeconds(currDate.getSeconds());\n         dateResult.setMilliseconds(currDate.getMilliseconds());\n      }\n      // Set specific time as default\n      else if (\n         this.settings.defaultTime == 3 &&\n         this.settings.defaultTimeValue\n      ) {\n         const defaultTime = new Date(this.settings.defaultTimeValue);\n\n         if (dateResult == null) dateResult = new Date();\n\n         dateResult.setHours(defaultTime.getHours());\n         dateResult.setMinutes(defaultTime.getMinutes());\n         dateResult.setSeconds(defaultTime.getSeconds());\n         dateResult.setMilliseconds(defaultTime.getMilliseconds());\n      }\n\n      // if no default value is set, then don't insert a value.\n      if (dateResult != null)\n         values[this.columnName] = dateResult.toISOString();\n   }\n\n   getFormat() {\n      const timeFormat = this.getTimeFormat();\n\n      this.settings = this.settings || {};\n\n      if (this.settings.dateFormat == 1) {\n         return timeFormat;\n      }\n\n      const dateFormat = super.getFormat();\n\n      return `${dateFormat} ${timeFormat}`;\n   }\n\n   format(rowData) {\n      const datetimeFormat = this.getFormat();\n      const d = this.dataValue(rowData);\n      const dateObj = this.AB.rules.toDate(d);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n\n      if (this.AB.Webix)\n         return this.AB.Webix.Date.dateToStr(datetimeFormat)(dateObj);\n      else\n         return dateObj?.toISOString() ?? \"\";\n   }\n\n   getTimeFormat() {\n      this.settings = this.settings || {};\n      switch (this.settings.timeFormat) {\n         case 2:\n            return \" %h:%i %A\";\n         case 3:\n            return \" %H:%i\";\n         default:\n            return \"\";\n      }\n   }\n\n   /**\n    * @method exportValue\n    * @param {Date} date\n    * @return {string}\n    */\n   exportValue(date) {\n      return date?.toISOString?.() ?? \"\";\n   }\n};\n\n// Transition Code:\n// revert to static RegEx once babel-loader is working locally.\nmodule.exports.RegEx =\n   \"^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$\";\n","/*\n * ABFieldEmail\n *\n * An ABFieldEmail defines a boolean field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldEmailDefaults = {\n   key: \"email\",\n   // unique key to reference this specific DataField\n\n   description: \"Email fields are used to store email addresses.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"envelope\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'envelope'  to\n   // reference 'fa-envelope'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Email\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: true,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   default: \"\",\n   defaultCheckbox: 0,\n};\n\nmodule.exports = class ABFieldEmailCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldEmailDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldEmailDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.default = values.settings.default || \"\";\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            values[this.columnName] = this.settings.default;\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      if (data[this.columnName]) {\n         const Reg =\n            /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n         let value = data[this.columnName];\n         value = String(value).toLowerCase();\n         if (!Reg.test(value)) {\n            validator.addError(this.columnName, \"Invalid email\");\n         }\n      }\n   }\n};\n","/*\n * ABFieldFile\n *\n * An ABFieldFile defines a File field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldFileDefaults = {\n   key: \"file\",\n   // unique key to reference this specific DataField\n\n   description: \"Attach a File to this object.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"file\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'file'  to\n   // reference 'fa-file'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"File Attachment\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   removeExistingData: 0,\n   fileSize: 0,\n   fileType: \"\",\n};\n\nmodule.exports = class ABFieldFileCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldFileDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldFileDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.fileSize = parseInt(this.settings.fileSize);\n      this.settings.limitFileSize = parseInt(this.settings.limitFileSize);\n      this.settings.limitFileType = parseInt(this.settings.limitFileType);\n      this.settings.removeExistingData = parseInt(\n         this.settings.removeExistingData\n      );\n   }\n\n   /**\n    * @method dataValue\n    * return the file data stored as part of this field.\n    *\n    * An ABFieldFile column contains a json structure that contains\n    *  .uuid : {string} a file uuid reference\n    *  .filename : {string} the name of the file that was uploaded.\n    *\n    * This will return the json object.\n    * @param {obj} values a key=>value hash of the current values.\n    * @return {obj} { uuid, filename }, or {} if empty.\n    */\n   dataValue(rowData) {\n      const propName = `${this.alias || this.object.name}.${this.columnName}`;\n\n      let result = rowData[this.columnName] || rowData[propName] || {};\n      if (typeof result == \"string\") {\n         try {\n            result = JSON.parse(result);\n         } catch (err) {\n            // ignore error\n         }\n      }\n\n      return result;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    *\n    * An ABFieldFile expects a json structure that contains\n    *  .uuid : {string} a file uuid reference\n    *  .filename : {string} the name of the file that was uploaded.\n    *\n    * For a default value, we return an empty json object: \"{}\"\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      values[this.columnName] = \"{}\";\n   }\n\n   format(rowData) {\n      let result = this.dataValue(rowData);\n      if (result) {\n         if (typeof result == \"string\") {\n            try {\n               result = JSON.parse(result);\n            } catch (err) {\n               // ignore error.\n            }\n         }\n\n         // return file name\n         return result ? result.filename || \"\" : \"\";\n      } else {\n         return \"\";\n      }\n   }\n\n   /**\n    * @method requestParam\n    * return the entry in the given input that relates to this field.\n    * @param {obj} allParameters  a key=>value hash of the inputs to parse.\n    * @return {obj} or undefined\n    */\n   requestParam(allParameters) {\n      const myParameter = super.requestParam(allParameters);\n\n      // if we have our default empty object, then remove the entry\n      // and let the DB insert a null value.\n      let val = myParameter?.[this.columnName];\n      if (val == \"{}\" || val == \"\") {\n         delete myParameter[this.columnName];\n      }\n      if (\"string\" === typeof val) {\n         try {\n            myParameter[this.columnName] = JSON.parse(val);\n         } catch (e) {\n            /* ignore */\n         }\n      }\n\n      return myParameter;\n   }\n};\n","/*\n * ABFieldFormula\n *\n * An ABFieldFormula are used to run calculations on connected (child) records\n * and store the total of that calculation in the parent.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldFormulaDefaults = {\n   key: \"formula\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Perform a calculation by a formula type based upon existing values\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"circle-o-notch\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'circle-o-notch'  to\n   // reference 'fa-circle-o-notch'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Formula\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportQuery: (field) => {\n      const fieldLink = field.fieldLink;\n      if (fieldLink == null) return false;\n\n      // Not support calculate field in query\n      return fieldLink.key !== \"calculate\";\n   },\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   field: \"\", // id of ABField : NOTE - store our connect field to support when there are multi - linked columns\n   objectLink: \"\", // id of ABObject\n   fieldLink: \"\", // id of ABField\n   type: \"sum\", // \"sum\", \"average\", \"max\", \"min\", \"count\"\n   where: \"\",\n};\n\nmodule.exports = class ABFieldFormulaCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldFormulaDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // this field is read only\n      delete values[this.columnName];\n   }\n\n   /**\n    * @method format\n    * both calculate and format the data input based of user settings\n    * for this field.\n    * @param {obj} rowData\n    *        a key=>value hash of the current values.\n    * @param {boolean} reCalculate\n    *        a boolean that signals if we should force recalculation of values\n    */\n   format(rowData, reCalculate = false, isGrouped = false) {\n      const fieldLink = this.fieldLink;\n\n      const reformat = (numData) => {\n         // ABFieldCalculate does not need to .format again\n         if (!fieldLink || fieldLink.key == \"calculate\") {\n            return numData;\n         } else {\n            const rowDataFormat = {};\n            rowDataFormat[fieldLink.columnName] = numData;\n            return fieldLink.format(rowDataFormat);\n         }\n      };\n\n      // if data exists, then will not calculate on client side\n      // unless we pass reCalculate=true to force the recalculation\n      if (rowData[this.columnName] != null && !reCalculate && !isGrouped) {\n         // reformat data\n         return reformat(rowData[this.columnName]);\n      } else if (\n         rowData[this.columnName] != null &&\n         !reCalculate &&\n         isGrouped\n      ) {\n         return rowData[this.columnName];\n      }\n\n      if (!fieldLink) return 0;\n\n      const fieldBase = this.fieldBase();\n      if (!fieldBase) return 0;\n\n      let data =\n         rowData[fieldBase.relationName()] ||\n         rowData[fieldBase.columnName] ||\n         [];\n      if (!Array.isArray(data)) data = [data];\n\n      // Filter\n      if (\n         data &&\n         data.length &&\n         this.settings &&\n         this.settings.where &&\n         this.settings.where.rules &&\n         this.settings.where.rules.length\n      ) {\n         this.filterHelper.setValue(this.settings.where);\n         data = data.filter((item) => this.filterHelper.isValid(item));\n      }\n\n      let numberList = [];\n\n      // pull number from data\n      switch (fieldLink.key) {\n         case \"calculate\":\n            data.forEach((d) => {\n               numberList.push(parseFloat(fieldLink.format(d) || 0));\n            });\n            break;\n         case \"number\":\n            numberList = data.map((d) => d[fieldLink.columnName] || 0);\n            break;\n      }\n\n      let result = 0;\n\n      // get the decimal size of the numbers being calculated\n      const decimalSize = fieldLink.getDecimalSize();\n\n      // calculate\n      switch (this.settings.type) {\n         case \"sum\":\n            if (numberList.length > 0) {\n               // get power of 10 to the number of decimal places this number\n               // is formated to require\n               const multiplier = Math.pow(10, decimalSize);\n               // multiply values by muliplyier and add them to pervious value\n               // because in javascript adding number with decimals can cause issues\n               // ex: 9.11 + 222.11 = 231.22000000000003\n               let sum = 0;\n               numberList.forEach((val) => {\n                  sum += val * multiplier || 0;\n               });\n               // divide result by multiplier to get actual value\n               result = sum / multiplier;\n            }\n            break;\n\n         case \"average\":\n            if (numberList.length > 0) {\n               // get power of 10 to the number of decimal places this number\n               // is formated to require\n               const multiplier = Math.pow(10, decimalSize);\n               // multiply values by muliplyier and add them to pervious value\n               // because in javascript adding number with decimals can cause issues\n               // ex: 9.11 + 222.11 = 231.22000000000003\n               let sum = 0;\n               numberList.forEach((val) => {\n                  sum += val * multiplier || 0;\n               });\n               // divide result by multiplier to get actual value\n               // and divide by length to get the average\n               result = sum / multiplier / numberList.length;\n            }\n            break;\n\n         case \"max\":\n            result = Math.max(...numberList) || 0;\n            break;\n         case \"min\":\n            result = Math.min(...numberList) || 0;\n            break;\n         case \"count\":\n            result = numberList.length;\n            break;\n      }\n\n      rowData[this.columnName] = result;\n\n      // ABFieldCalculate does not need to .format again\n      if (fieldLink.key == \"calculate\") {\n         return result;\n      } else {\n         return reformat(result);\n      }\n   }\n\n   fieldBase() {\n      return this.object.fieldByID(this.settings.field);\n   }\n\n   get fieldLink() {\n      const obj = this.AB.objectByID(this.settings.object);\n      if (!obj) return null;\n\n      const field = obj.fieldByID(this.settings.fieldLink);\n      if (!field) return null;\n\n      return field;\n   }\n\n   get filterHelper() {\n      if (this._rowFilter == null) {\n         this._rowFilter = this.AB.filterComplexNew(`${this.id}_filterComplex`);\n\n         if (this.fieldLink && this.fieldLink.object) {\n            this._rowFilter.fieldsLoad(this.fieldLink.object.fields());\n            this._rowFilter.setValue(this.settings.where);\n         }\n      }\n\n      return this._rowFilter;\n   }\n};\n","/*\n * ABFieldImageCore\n *\n * An ABFieldImage defines a Image field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldImageDefaults = {\n   key: \"image\",\n   // unique key to reference this specific DataField\n\n   description: \"Attach an image to this object.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"file-image-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'file-image-o'  to\n   // reference 'fa-file-image-o'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Image Attachment\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   useWidth: 0,\n   imageWidth: \"\",\n   useHeight: 0,\n   imageHeight: \"\",\n   removeExistingData: 0,\n   useDefaultImage: false,\n   defaultImageUrl: \"\",\n};\n\nmodule.exports = class ABFieldImageCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldImageDefaults);\n\n      // NOTE: our Labels are ready here:\n      // if (\n      //    ABFieldImageDefaults.menuName == \"*Image Attachment\" &&\n      //    this.AB.Label\n      // ) {\n      //    const L = this.AB.Label();\n      //    ABFieldImageDefaults.menuName = L(\"Image Attachment\");\n      //    ABFieldImageDefaults.description = L(\"Attach an image to this object.\");\n      // }\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\t'useWidth':0,\n\t\t\t\t'imageWidth':'',\n\t\t\t\t'useHeight': 0,\n\t\t\t\t'imageHeight': '',\n\t\t\t\t'removeExistingData': 0\n\t\t\t}\n    \t}\n    \t*/\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldImageDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.useWidth = parseInt(this.settings.useWidth);\n      this.settings.useHeight = parseInt(this.settings.useHeight);\n      this.settings.imageWidth = parseInt(this.settings.imageWidth);\n      this.settings.imageHeight = parseInt(this.settings.imageHeight);\n      this.settings.useDefaultImage = parseInt(this.settings.useDefaultImage);\n      this.settings.removeExistingData = parseInt(\n         this.settings.removeExistingData\n      );\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n};\n","/*\n * ABFieldJson\n *\n * An ABFieldJson defines a JSON field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldJsonDefaults = {\n   key: \"json\",\n   // unique key to reference this specific DataField\n\n   description: \"JSON value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"font\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'font'  to\n   // reference 'fa-font'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"JSON\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"json\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"json\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {};\n\nmodule.exports = class ABFieldJsonCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldJsonDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldJsonDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // in the case of a JSON data type, we should NOT insert a \"\"\n      //\n      // values[this.columnName] = \"\";\n   }\n};\n","/*\n * ABFieldListCore\n *\n * An ABFieldList defines a select list field type.\n *\n */\n\n// const ABFieldSelectivity = require(\"../../platform/dataFields/ABFieldSelectivity\");\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldListDefaults = {\n   key: \"list\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Select list allows you to select predefined options below from a dropdown.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"th-list\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'th-list'  to\n   // reference 'fa-th-list'\n\n   isFilterable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Select list\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"char\",\n      \"varchar\",\n      \"tinytext\" /* \"text\", \"mediumtext\" */,\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   hasColors: (field) => {\n      if (field.settings.hasColors) {\n         return true;\n      } else {\n         return false;\n      }\n   },\n};\n\nconst defaultValues = {\n   isMultiple: 0,\n   // {bool}\n   // can multiple values be selected?\n\n   hasColors: 0,\n   // {bool}\n   // are we to display our values in colors?\n\n   options: [],\n   // {array}\n   // The options defined for this list:\n   // [ { id, text, hex, translations },...]\n   //    .id {string} a unique id for this value\n   //    .text {string} the displayed text of this value\n   //    .hex {string} a color hex definition for this value\n   //    .translations {obj} the multilingual definitions for this value.\n\n   default: \"none\",\n   multipleDefault: [],\n};\n\nmodule.exports = class ABFieldListCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldListDefaults);\n\n      this.pendingDeletions = [];\n      // {array}\n      // a list of pending option deletions that need to be processed\n      // when this is saved.\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldListDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // translate options list\n      if (this.settings.options && this.settings.options.length > 0) {\n         this.settings.options.forEach((opt) => {\n            this.translate(opt, opt, [\"text\"]);\n         });\n      }\n\n      this.settings.isMultiple = parseInt(this.settings.isMultiple);\n      this.settings.hasColors = parseInt(this.settings.hasColors);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      // Un-translate options list\n      obj.settings.options.forEach((opt) => {\n         this.unTranslate(opt, opt, [\"text\"]);\n      });\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Multiple select list\n      if (this.settings.isMultiple == true) {\n         let defaultVals = [];\n         this.settings.multipleDefault.forEach((def) => {\n            this.settings.options.forEach((opt) => {\n               if (opt.id == def.text) {\n                  defaultVals.push(opt);\n               }\n            });\n         });\n         values[this.columnName] = defaultVals || [];\n      }\n      // Single select list\n      else if (this.settings.default && this.settings.default != \"\") {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n\n   /**\n    * @method options\n    * Return an array of [{ id, text }] options defined by this field.\n    * @return {array}\n    */\n   options() {\n      return this.settings.options.map((opt) => {\n         return {\n            id: opt.id,\n            text: opt.text,\n            hex: opt.hex ? opt.hex : \"\",\n            translations: opt.translations ? opt.translations : \"\",\n         };\n      });\n   }\n\n   format(rowData, options = {}) {\n      let val = this.dataValue(rowData) || [];\n\n      if (typeof val == \"string\") {\n         try {\n            val = JSON.parse(val);\n         } catch (e) {\n            // continue regardless of error\n         }\n      }\n\n      // Convert to array\n      if (!Array.isArray(val)) val = [val];\n\n      const displayOpts = this.settings.options\n         .filter((opt) => val.filter((v) => (v.id || v) == opt.id).length > 0)\n         .map((opt) => {\n            let text = opt.text;\n            const languageCode = options.languageCode || \"en\";\n\n            // Pull text of option with specify language code\n            const optTran = (opt.translations || []).filter(\n               (o) => o.language_code == languageCode\n            )[0];\n            if (optTran) text = optTran.text;\n\n            return text;\n         });\n\n      return displayOpts.join(\", \");\n   }\n};\n","/*\n * ABFieldLongText\n *\n * An ABFieldLongText defines a LongText field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst MAX_CHAR_LENGTH = 5000;\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldLongTextDefaults = {\n   key: \"LongText\", // unique key to reference this specific DataField\n\n   description: \"Multiple lines of text\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"align-right\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'align-right'  to\n   // reference 'fa-align-right'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Long text\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"longtext\", \"mediumtext\", \"text\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   MAX_CHAR_LENGTH,\n   // {integer}\n   // The maximum length our ABFieldLongText can be.\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   default: \"\",\n   supportMultilingual: 0,\n};\n\nmodule.exports = class ABFieldLongText extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldLongTextDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n    \t}\n    \t*/\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldLongTextDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.default = values.settings.default || \"\";\n\n      // we're responsible for setting up our specific settings:\n      this.settings.supportMultilingual =\n         values.settings.supportMultilingual + \"\" ||\n         defaultValues.supportMultilingual;\n\n      // text to Int:\n      this.settings.supportMultilingual = parseInt(\n         this.settings.supportMultilingual\n      );\n\n      if (this.settings.supportMultilingual) {\n         if (this.object)\n            this.object.translate(this.settings, this.settings, [\"default\"]);\n      } else this.settings.default = values.settings.default || \"\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.settings.supportMultilingual)\n         if (this.object)\n            this.object.unTranslate(obj.settings, obj.settings, [\"default\"]);\n         else obj.settings.default = this.settings.default;\n\n      return obj;\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] == null) {\n         if (typeof this.settings.default == \"string\") {\n            values[this.columnName] = this.settings.default;\n         } else {\n            values[this.columnName] = \"\";\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (\n         data &&\n         data[this.columnName] &&\n         data[this.columnName].length > MAX_CHAR_LENGTH\n      ) {\n         validator.addError(\n            this.columnName,\n            `should NOT be longer than ${MAX_CHAR_LENGTH} characters`\n         );\n      }\n   }\n};\n","/*\n * ABFieldNumber\n *\n * An ABFieldNumber defines a Number field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldNumberDefaults = {\n   key: \"number\",\n   // unique key to reference this specific DataField\n\n   description: \"A Float or Integer Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"hashtag\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'hashtag'  to\n   // reference 'fa-hashtag'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Number\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: true,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   // 'allowRequired': 0,\n   default: \"\",\n   typeFormat: \"none\",\n   typeDecimals: \"none\",\n   typeDecimalPlaces: 0,\n   typeRounding: \"none\",\n   typeThousands: \"none\",\n   validation: 0,\n   validateMinimum: \"\",\n   validateMaximum: \"\",\n};\n\nlet L = null; //AB.Label();\n\nmodule.exports = class ABFieldNumberCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldNumberDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\t'allowRequired':0,\n\t\t\t\t'default':null,\n\t\t\t\t'typeFormat': 'none',\n\t\t\t\t'typeDecimals': 'none',\n\t\t\t\t'typeDecimalPlaces': 'none',\n\t\t\t\t'typeRounding' : 'none',\n\t\t\t\t'typeThousands': 'none',\n\t\t\t\t'validation':0,\n\t\t\t\t'validateMinimum':null,\n\t\t\t\t'validateMaximum':null\n\t\t\t}\n    \t}\n    \t*/\n      if (!L) {\n         L = this.AB.Label();\n      }\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldNumberDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static formatList(iL) {\n      if (iL && !L) L = iL;\n      return [\n         { id: \"none\", value: L(\"None\") },\n         {\n            id: \"dollar\",\n            value: L(\"$\"),\n            sign: \"$\",\n            position: \"prefix\",\n         },\n         {\n            id: \"yen\",\n            value: L(\"¥\"),\n            sign: \"¥\",\n            position: \"prefix\",\n         },\n         {\n            id: \"pound\",\n            value: L(\"£\"),\n            sign: \"£\",\n            position: \"prefix\",\n         },\n         {\n            id: \"euroBefore\",\n            value: L(\"€ (before)\"),\n            sign: \"€\",\n            position: \"prefix\",\n         },\n         {\n            id: \"euroAfter\",\n            value: L(\"€ (after)\"),\n            sign: \"€\",\n            position: \"postfix\",\n         },\n         {\n            id: \"percent\",\n            value: L(\"%\"),\n            sign: \"%\",\n            position: \"postfix\",\n         },\n      ];\n   }\n\n   static delimiterList() {\n      return [\n         { id: \"none\", value: L(\"None\") },\n         {\n            id: \"comma\",\n            value: L(\"Comma\"),\n            sign: \",\",\n         },\n         {\n            id: \"period\",\n            value: L(\"Period\"),\n            sign: \".\",\n         },\n         {\n            id: \"space\",\n            value: L(\"Space\"),\n            sign: \" \",\n         },\n      ];\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      // this.settings.allowRequired = parseInt(this.settings.allowRequired);\n      this.settings.validation = parseInt(this.settings.validation);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (this.settings.default != \"\") {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      // const L = this.AB.Label();\n\n      if (data[this.columnName] != null && data[this.columnName] != \"\") {\n         let value = data[this.columnName];\n\n         // if this is an integer:\n         if (this.settings.typeDecimals == \"none\") {\n            value = parseInt(value);\n         } else {\n            const places = parseInt(this.settings.typeDecimalPlaces) || 2;\n            value = parseFloat(parseFloat(value).toFixed(places));\n         }\n\n         const isNumeric = (n) => {\n            return !Number.isNaN(parseFloat(n)) && Number.isFinite(n);\n         };\n         if (!isNumeric(value)) {\n            validator.addError(this.columnName, L(\"invalid number\"));\n         }\n\n         // validate Minimum\n         if (\n            this.settings.validation == true &&\n            this.settings.validateMinimum != null &&\n            this.settings.validateMinimum > value\n         ) {\n            const errMessage = L(\"should be greater than {0}\", [\n               this.settings.validateMinimum,\n            ]);\n\n            validator.addError(this.columnName, errMessage);\n         }\n\n         // validate Maximum\n         if (\n            this.settings.validation == true &&\n            this.settings.validateMaximum != null &&\n            this.settings.validateMaximum < value\n         ) {\n            const errMessage = L(\"should be less than {0}\", [\n               this.settings.validateMaximum,\n            ]);\n\n            validator.addError(this.columnName, errMessage);\n         }\n      }\n   }\n\n   format(rowData) {\n      if (\n         rowData?.[this.columnName] == null ||\n         (rowData[this.columnName] !== 0 && rowData[this.columnName] == \"\")\n      )\n         return \"\";\n\n      let data = rowData[this.columnName] || 0;\n\n      if (typeof data == \"string\") {\n         data = data.replace(/,/g, \"\");\n      }\n\n      // Validate number\n      if (isNaN(parseFloat(data))) data = 0;\n\n      const formatSign = this.constructor\n         .formatList()\n         .filter((item) => item.id == this.settings.typeFormat)[0];\n      const decimalPlaces =\n         this.settings.typeDecimalPlaces != \"none\"\n            ? parseInt(this.settings.typeDecimalPlaces)\n            : 0;\n\n      let thousandsSign = this.constructor\n         .delimiterList()\n         .filter((item) => item.id == this.settings.typeThousands)[0];\n      let decimalSign = this.constructor\n         .delimiterList()\n         .filter((item) => item.id == this.settings.typeDecimals)[0];\n      let prefix = \"\";\n      let postfix = \"\";\n\n      if (formatSign && formatSign.sign) {\n         switch (formatSign.position) {\n            case \"prefix\":\n               prefix = formatSign.sign;\n               break;\n            case \"postfix\":\n               postfix = formatSign.sign;\n               break;\n         }\n      }\n\n      decimalSign = decimalSign.sign || \"\";\n      thousandsSign = thousandsSign.sign || \"\";\n\n      // round number\n      if (this.settings.typeRounding == \"roundDown\") {\n         const digit = Math.pow(10, decimalPlaces);\n         data = Math.floor(data * digit) / digit;\n      }\n\n      const number = this.formatNumber(data, {\n         groupDelimiter: thousandsSign,\n         groupSize: 3,\n         decimalDelimiter: decimalSign,\n         decimalSize: decimalPlaces,\n      });\n\n      return `${prefix} ${number} ${postfix}`;\n   }\n\n   formatNumber(data, options = {}) {\n      if (data === \"\" || data == null) return data;\n\n      data = parseFloat(data);\n      const negativeSign = data < 0 ? \"-\" : \"\";\n      data = Math.abs(data);\n\n      const dataStr = data.toString();\n      const integerStr = dataStr.split(\".\")[0];\n      const decimalStr = dataStr.split(\".\")[1];\n\n      let integerValue = \"\";\n\n      // Thousands digit sign\n      if (options.groupDelimiter) {\n         const step = 3;\n         let i = integerStr.length;\n\n         do {\n            i -= step;\n            const chunk =\n               i > 0\n                  ? integerStr.substr(i, step)\n                  : integerStr.substr(0, step + i);\n            integerValue = `${chunk}${\n               integerValue ? options.groupDelimiter + integerValue : \"\"\n            }`;\n         } while (i > 0);\n      } else {\n         integerValue = integerStr;\n      }\n\n      // Integer\n      let result = `${negativeSign}${integerValue}`;\n\n      // Decimal\n      if (decimalStr && options.decimalDelimiter && options.decimalSize) {\n         const decimalVal = data.toFixed(options.decimalSize).split(\".\")[1];\n         result += `${options.decimalDelimiter}${decimalVal}`;\n      }\n\n      return result;\n   }\n\n   getDecimalSize() {\n      if (this.settings.typeDecimalPlaces != \"none\") {\n         return parseInt(this.settings.typeDecimalPlaces);\n      } else {\n         return 0;\n      }\n   }\n};\n","/*\n * ABFieldString\n *\n * An ABFieldString defines a string field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst MAX_CHAR_LENGTH = 255;\n\nconst ABFieldStringDefaults = {\n   key: \"string\",\n   // unique key to reference this specific DataField\n\n   description: \"short string value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"font\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'font'  to\n   // reference 'fa-font'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Single line text\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   MAX_CHAR_LENGTH,\n   // {integer}\n   // The maximum length our ABFieldString can be.\n};\n\nconst defaultValues = {\n   default: \"\",\n   supportMultilingual: 0,\n};\n\nmodule.exports = class ABFieldStringCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldStringDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n    \t}\n        */\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldStringDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // we're responsible for setting up our specific settings:\n      this.settings.default = values.settings.default || defaultValues.default;\n      this.settings.supportMultilingual =\n         values.settings.supportMultilingual + \"\" ||\n         defaultValues.supportMultilingual;\n\n      // text to Int:\n      this.settings.supportMultilingual = parseInt(\n         this.settings.supportMultilingual\n      );\n\n      if (this.settings.supportMultilingual) {\n         this.translate(this.settings, this.settings, [\"default\"]);\n      } else this.settings.default = values.settings.default || \"\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.settings.supportMultilingual) {\n         this.unTranslate(obj.settings, obj.settings, [\"default\"]);\n      } else obj.settings.default = this.settings.default;\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            if (this.settings.default.indexOf(\"{uuid}\") >= 0) {\n               values[this.columnName] = this.AB.uuid();\n            } else {\n               values[this.columnName] = this.settings.default;\n            }\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (data?.[this.columnName]?.length > MAX_CHAR_LENGTH) {\n         const L = this.AB.Label();\n         validator.addError(\n            this.columnName,\n            L(\"should NOT be longer than {0} characters\", [MAX_CHAR_LENGTH])\n         );\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n};\n","/*\n * ABFieldTextFormula\n *\n * An ABFieldTextFormula defines a TextFormula field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldTextFormulaDefaults = {\n   key: \"TextFormula\",\n   // unique key to reference this specific DataField\n\n   description: \"Text Formula\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"question\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'question'  to\n   // reference 'fa-question'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Text Formula\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   textFormula: \"\",\n   // {string} \"some text or text with formula ...\"\n   // This tells us what the formula we need to do with text included text string.\n   // if we don't have this, the old value which we filled out won't be cleared when we do \"Add field\" this type again.\n\n   // 'imageWidth':'',\n   // 'useHeight': 0,\n   // 'imageHeight': ''\n};\n\n/** Private methods */\n\n/**\n * @method setValueToFormula\n *\n * @param {ABOBject} object\n * @param {string} formulaString\n * @param {object} rowData\n */\n\nfunction setValueToFormula(object, formulaString, rowData) {\n   if (!formulaString) return;\n\n   const fieldRegExp = /{[^{}]+}/gm;\n   const matches_field_array = formulaString.match(fieldRegExp);\n   matches_field_array.forEach((element) => {\n      const columnName = element.replace(/{|}|\"/g, \"\");\n      object.fields().forEach((field) => {\n         if (field.columnName == columnName) {\n            if (field.key == \"AutoIndex\") {\n               //Check AutoIndex Field\n               const autoIndexVal = field.format(rowData) || 0;\n               formulaString = formulaString.replace(element, autoIndexVal);\n            } else if (field.key == \"calculate\") {\n               //Calculate Field\n               const calVal = `(${field.format(rowData) || 0})`;\n               formulaString = formulaString.replace(element, eval(calVal));\n            } else if (field.key == \"date\") {\n               formulaString = formulaString.replace(\n                  element,\n                  rowData[columnName]\n                     ? field.exportValue(rowData[columnName])\n                     : \"\"\n               );\n            } else {\n               formulaString = formulaString.replace(\n                  element,\n                  rowData[columnName] ? field.format(rowData) : \"\"\n               );\n            }\n         }\n      });\n   });\n\n   return formulaString;\n}\n\n/**\n * @method setBuildinValueToFormula\n *\n * @param {ABFactory} AB\n * @param {string} formulaString\n */\n\nfunction setBuildinValueToFormula(AB, formulaString) {\n   const buildInRegExp = /\\w+\\(.*?\\)/gm;\n   const matches_buildin_array = formulaString.match(buildInRegExp);\n   if (matches_buildin_array) {\n      const buildinList = getBuildInFunction();\n      matches_buildin_array.forEach((element) => {\n         const formula_array = element.split(/\\(|\\)/);\n         const isBracketInBracket =\n            formula_array.length > 2 && formula_array[2] != \"\";\n         const functionName = formula_array[0];\n         const parameters_array = formula_array[1].split(\",\");\n         let isMatch = false;\n         for (let i = 0; i < buildinList.length; i++) {\n            let resultParameters = element;\n            if (functionName == buildinList[i].id) {\n               if (parameters_array.length == buildinList[i].parameter_size) {\n                  switch (functionName) {\n                     case \"left\":\n                        resultParameters = getLeft(\n                           parameters_array[0],\n                           parameters_array[1]\n                        );\n                        break;\n                     case \"right\":\n                        resultParameters = getRight(\n                           parameters_array[0],\n                           parameters_array[1]\n                        );\n                        break;\n                     case \"mid\":\n                        resultParameters = getMid(\n                           parameters_array[0],\n                           parameters_array[1],\n                           parameters_array[2]\n                        );\n                        break;\n                     case \"trim\":\n                        resultParameters = getTrim(parameters_array[0]);\n                        break;\n                     case \"trimLeft\":\n                        resultParameters = getTrimLeft(parameters_array[0]);\n                        break;\n                     case \"trimRight\":\n                        resultParameters = getTrimRight(parameters_array[0]);\n                        break;\n                     case \"length\":\n                        resultParameters = getLength(parameters_array[0]);\n                        break;\n                     case \"regexReplace\":\n                        resultParameters = getRegExpReplace(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft(),\n                           parameters_array[2].trimLeft()\n                        );\n                        break;\n                     case \"extractRegex\":\n                        resultParameters = getExtractRegex(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft()\n                        );\n                        break;\n                     case \"replace\":\n                        resultParameters = getReplace(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft(),\n                           parameters_array[2].trimLeft()\n                        );\n                        break;\n                     case \"lower\":\n                        resultParameters = getLower(parameters_array[0]);\n                        break;\n                     case \"upper\":\n                        resultParameters = getUpper(parameters_array[0]);\n                        break;\n                     case \"capitalize\":\n                        resultParameters = getCapitalize(parameters_array[0]);\n                        break;\n                     case \"random\":\n                        resultParameters = getRandom(parameters_array[0]);\n                        break;\n                     case \"numberToWords\":\n                        resultParameters = getNumberToWords(\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"getDateDayOfWeekName\":\n                        if (isBracketInBracket) {\n                           element = element + \")\";\n                        }\n                        resultParameters = getDateDayOfWeekName(\n                           AB,\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"getDateMonthOfYearName\":\n                        if (isBracketInBracket) {\n                           element = element + \")\";\n                        }\n                        resultParameters = getDateMonthOfYearName(\n                           AB,\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"formatDate\":\n                        resultParameters = getFormatDate(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft()\n                        );\n                        break;\n                     default:\n                        break;\n                  }\n                  isMatch = true;\n                  formulaString = formulaString.replace(\n                     element,\n                     resultParameters\n                  );\n                  return;\n               } else {\n                  resultParameters = functionName + \"(Bad Parameter)\";\n                  formulaString = formulaString.replace(\n                     element,\n                     resultParameters\n                  );\n               }\n            }\n         }\n      });\n   }\n   return formulaString;\n}\n\nfunction getBuildInFunction() {\n   const functionList = [\n      {\n         id: \"left\",\n         value: \"left({COLUMN_NAME}, 1)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"right\",\n         value: \"right({COLUMN_NAME}, 1)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"mid\",\n         value: \"mid({COLUMN_NAME}, 1, 1)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"trim\",\n         value: \"trim({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"trimLeft\",\n         value: \"trimLeft({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"trimRight\",\n         value: \"trimRight({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"length\",\n         value: \"length({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"regexReplace\",\n         value: \"regexReplace({COLUMN_NAME}, [*], REPLACE_VALUE)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"extractRegex\",\n         value: \"extractRegex({COLUMN_NAME}, [*])\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"replace\",\n         value: \"replace({COLUMN_NAME}, SEARCH_VALUE, REPLACE_VALUE)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"lower\",\n         value: \"lower({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"upper\",\n         value: \"upper({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"capitalize\",\n         value: \"capitalize({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      { id: \"random\", value: \"random(1)\", type: \"build-in\", parameter_size: 1 },\n      {\n         id: \"numberToWords\",\n         value: \"numberToWords({NUMBER_COLUMN} or 012...)\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"getDateDayOfWeekName\",\n         value: \"getDateDayOfWeekName({DATE_COLUMN})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"getDateMonthOfYearName\",\n         value: \"getDateMonthOfYearName({DATE_COLUMN})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"formatDate\",\n         value: \"formatDate({DATE_COLUMN}, OUTPUT_FORMAT)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n   ];\n   return functionList;\n}\n\nfunction getLeft(string, endPosition) {\n   return string.substring(0, parseInt(endPosition));\n}\n\nfunction getRight(string, endposition) {\n   const reverseStr = reverseString(string).substring(0, parseInt(endposition));\n   return reverseString(reverseStr);\n}\n\nfunction reverseString(string) {\n   return string.split(\" \").reverse().join(\" \");\n}\n\nfunction getMid(string, startPosition, length) {\n   if (string.length < startPosition) return \"mid(Bad Parameter)\";\n   return string.substring(\n      parseInt(startPosition),\n      parseInt(startPosition) + parseInt(length)\n   );\n}\n\nfunction getTrim(string) {\n   return string.trim();\n}\n\nfunction getTrimLeft(string) {\n   return string.trimLeft();\n}\n\nfunction getTrimRight(string) {\n   return string.trimRight();\n}\n\nfunction getLength(string) {\n   return string.length;\n}\n\nfunction getRegExpReplace(string, regexp, replaceString) {\n   return string.replace(regexp, replaceString);\n}\n\nfunction getExtractRegex(string, regexp) {\n   const extractResult = string.match(regexp);\n   if (Array.isArray(extractResult)) {\n      return extractResult[0];\n   }\n   return extractResult;\n}\n\nfunction getReplace(string, searchValue, replaceValue) {\n   return string.replace(searchValue, replaceValue);\n}\n\nfunction getLower(string) {\n   return string.toLowerCase();\n}\n\nfunction getUpper(string) {\n   return string.toUpperCase();\n}\n\nfunction getCapitalize(string) {\n   return string\n      .toLowerCase()\n      .split(\" \")\n      .map((s) => s.charAt(0).toUpperCase() + s.substring(1))\n      .join(\" \");\n}\n\nfunction getRandom(max) {\n   return Math.floor(Math.random() * (max + 1));\n}\n\nfunction getNumberToWords(number) {\n   const string = number.trim(\",\").toString();\n\n   let units,\n      tens,\n      scales,\n      start,\n      end,\n      chunks,\n      chunksLen,\n      chunk,\n      ints,\n      i,\n      word,\n      words;\n\n   const and = \"\";\n\n   /* Is number zero? */\n   if (parseInt(string) === 0) {\n      return \"zero\";\n   }\n\n   /* Array of units as words */\n   units = [\n      \"\",\n      \"one\",\n      \"two\",\n      \"three\",\n      \"four\",\n      \"five\",\n      \"six\",\n      \"seven\",\n      \"eight\",\n      \"nine\",\n      \"ten\",\n      \"eleven\",\n      \"twelve\",\n      \"thirteen\",\n      \"fourteen\",\n      \"fifteen\",\n      \"sixteen\",\n      \"seventeen\",\n      \"eighteen\",\n      \"nineteen\",\n   ];\n\n   /* Array of tens as words */\n   tens = [\n      \"\",\n      \"\",\n      \"twenty\",\n      \"thirty\",\n      \"forty\",\n      \"fifty\",\n      \"sixty\",\n      \"seventy\",\n      \"eighty\",\n      \"ninety\",\n   ];\n\n   /* Array of scales as words */\n   scales = [\n      \"\",\n      \"thousand\",\n      \"million\",\n      \"billion\",\n      \"trillion\",\n      \"quadrillion\",\n      \"quintillion\",\n      \"sextillion\",\n      \"septillion\",\n      \"octillion\",\n      \"nonillion\",\n      \"decillion\",\n      \"undecillion\",\n      \"duodecillion\",\n      \"tredecillion\",\n      \"quatttuor-decillion\",\n      \"quindecillion\",\n      \"sexdecillion\",\n      \"septen-decillion\",\n      \"octodecillion\",\n      \"novemdecillion\",\n      \"vigintillion\",\n      \"centillion\",\n   ];\n\n   /* Split user arguemnt into 3 digit chunks from right to left */\n   start = string.length;\n   chunks = [];\n   while (start > 0) {\n      end = start;\n      chunks.push(string.slice((start = Math.max(0, start - 3)), end));\n   }\n\n   /* Check if function has enough scale words to be able to stringify the user argument */\n   chunksLen = chunks.length;\n   if (chunksLen > scales.length) {\n      return \"\";\n   }\n\n   /* Stringify each integer in each chunk */\n   words = [];\n   for (i = 0; i < chunksLen; i++) {\n      chunk = parseInt(chunks[i]);\n\n      if (chunk) {\n         /* Split chunk into array of individual integers */\n         ints = chunks[i].split(\"\").reverse().map(parseFloat);\n\n         /* If tens integer is 1, i.e. 10, then add 10 to units integer */\n         if (ints[1] === 1) {\n            ints[0] += 10;\n         }\n\n         /* Add scale word if chunk is not zero and array item exists */\n         if ((word = scales[i])) {\n            words.push(word);\n         }\n\n         /* Add unit word if array item exists */\n         if ((word = units[ints[0]])) {\n            words.push(word);\n         }\n\n         /* Add tens word if array item exists */\n         if ((word = tens[ints[1]])) {\n            words.push(word);\n         }\n\n         /* Add 'and' string after units or tens integer if: */\n         if (ints[0] || ints[1]) {\n            /* Chunk has a hundreds integer or chunk is the first of multiple chunks */\n            if (ints[2] || (!i && chunksLen)) {\n               words.push(and);\n            }\n         }\n\n         /* Add hundreds word if array item exists */\n         if ((word = units[ints[2]])) {\n            words.push(word + \" hundred\");\n         }\n      }\n   }\n\n   return words.reverse().join(\" \");\n}\n\nfunction getDateDayOfWeekName(AB, date) {\n   // const localizeDT = moment(date);\n   // localizeDT.locale(AD.lang.currentLanguage);\n   // return localizeDT.format(\"dddd\");\n\n   return AB.rules.toDateFormat(date, {\n      format: \"dddd\",\n      localeCode: AB.Account.language(),\n   });\n}\n\nfunction getDateMonthOfYearName(AB, date) {\n   // const localizeDT = moment(date);\n   // localizeDT.locale(AD.lang.currentLanguage);\n   // return localizeDT.format(\"MMMM\");\n\n   return AB.rules.toDateFormat(date, {\n      format: \"MMMM\",\n      localeCode: AB.Account.language(),\n   });\n}\n\nfunction getFormatDate(date, format) {\n   const dt = new Date(date);\n   return dt.toString(format);\n}\n\nmodule.exports = class ABFieldTextFormulaCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldTextFormulaDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\ttextDefault: 'string',\n\t\t\t\tsupportMultilingual: true/false\n\t\t\t}\n    \t}\n    \t*/\n\n      // // text to Int:\n      // this.settings.supportMultilingual = parseInt(this.settings.supportMultilingual);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldTextFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static getBuildInFunction() {\n      return getBuildInFunction();\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default value\n         // values[this.columnName] = this.settings.DEFAULT_VALUE;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      validator = super.isValid();\n\n      // validator.addError(this.columnName, L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      // return this.settings.supportMultilingual == 1;\n      return false;\n   }\n\n   format(rowData) {\n      try {\n         if (!this.settings.textFormula) return \"\";\n\n         let resultFormula = this.settings.textFormula;\n\n         //Set Field value first\n         resultFormula = setValueToFormula(this.object, resultFormula, rowData);\n\n         //then Check Build-in Function\n         resultFormula = setBuildinValueToFormula(this.AB, resultFormula);\n\n         return resultFormula;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n\n//// NOTE: if you need a unique [edit_type] by your returned config.editor above:\n// webix.editors = {\n//   \"[edit_type]\": {\n//     focus: function () {...}\n//     getValue: function () {...},\n//     setValue: function (value) {...},\n//     render: function () {...}\n//   }\n// };\n\n//// NOTE: if you need a unique [sort_type] by your returned config.sort above:\n// webix.DataStore.prototype.sorting.as.[sort_type] = function(a,b){\n//     return a > b ? 1 : -1;\n// }\n","/*\n * ABFieldTreeCore\n *\n * An ABFieldTree defines a select list field type.\n *\n */\n\nconst ABFieldSelectivity = require(\"../../platform/dataFields/ABFieldSelectivity\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldTreeDefaults = {\n   key: \"tree\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Data tree allows you to build a hierarchical set of selectable data. (ex: Categories and sub-categories)\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"sitemap\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'sitemap'  to\n   // reference 'fa-sitemap'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Data Tree\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   options: [],\n};\n\nmodule.exports = class ABFieldTreeCore extends ABFieldSelectivity {\n   constructor(values, object) {\n      super(values, object, ABFieldTreeDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldTreeDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // translate options list\n      if (this.settings.options && this.settings.options.length > 0) {\n         this.settings.options.forEach((opt) => {\n            this.translate(opt, opt, [\"text\"]);\n         });\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      // Un-translate options list\n      if (obj.settings.options && obj.settings.options.length > 0) {\n         obj.settings.options.forEach((opt) => {\n            this.unTranslate(opt, opt, [\"text\"]);\n         });\n      }\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {}\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n};\n","/*\n * ABFieldUser\n *\n * An ABFieldUser defines a user field type.\n *\n */\n\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldUserDefaults = {\n   key: \"user\",\n   // unique key to reference this specific DataField\n\n   description: \"Add users to a record.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"user-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'user-o'  to\n   // reference 'fa-user-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"User\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   USERNAME_FIELD_ID: \"5760560b-c078-47ca-98bf-e18ac492a561\",\n   // {string} .uuid\n   // the ABField.id of the SiteUser.username field.  This is what other\n   // objects will link to in their ABFieldUser connections.\n};\n\nconst defaultValues = {\n   editable: 1,\n   isMultiple: 0,\n   isCurrentUser: 0,\n   isShowProfileImage: 0,\n   isShowUsername: 1,\n};\n\nmodule.exports = class ABFieldUserCore extends ABFieldConnect {\n   constructor(values, object) {\n      super(values, object, ABFieldUserDefaults);\n\n      this.isUser = true;\n      // {bool}\n      // is this an ABFieldUser type of field.\n      // this is a simplified helper to identify if an ABField is a type\n      // of User field.  Since this is the only place it is defined,\n      // all other field types will be falsy\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldUserDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.editable = parseInt(this.settings.editable);\n      this.settings.isMultiple = parseInt(this.settings.isMultiple);\n      this.settings.isCurrentUser = parseInt(this.settings.isCurrentUser);\n      this.settings.isShowProfileImage = parseInt(\n         this.settings.isShowProfileImage\n      );\n      this.settings.isShowUsername = parseInt(this.settings.isShowUsername);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   format(rowData) {\n      let val = this.dataValue(rowData) || [];\n\n      if (val && !Array.isArray(val)) val = [val];\n      if (!val) val = [];\n\n      return val.map((v) => v.username || v).join(\", \");\n   }\n};\n","/*\n * ABMobilePageCore\n *\n * An view that represents a \"Page\" on the Mobile Device.\n *\n * Pages are\n *\t- allowed to be displayed in the interface list\n *\t- return a full list of components that can be added to the view editor\n *\n *\n */\n\nconst ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n// var ABViewManager = require(\"../ABViewManager\");\n\n// function L(key, altText) {\n//     return AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABMobilePageDefaults = {\n   key: \"mobile-page\", // unique key identifier for this ABView\n   icon: \"file\", // icon reference: (without 'fa-'  )\n};\n\nconst ABPropertyComponentDefaults = {\n   type: \"page\",\n   // {string}\n   // What type of \"Page\" this is: ['page', 'popup', 'reportPage']\n\n   defaultPage: 0,\n   // {bool} 1|0\n   // is this the default page for the Mobile App? If so, this is the initial\n   // Page that is displayed when the App is loaded.\n   // NOTE: there can be only 1 page defined in the app as .defaultPage\n\n   hideTitle: 0,\n   // {bool} 1|0\n   // By default we will display this.label as our Title. Set this to 1 to not\n   // show the tile on the page.\n\n   hideTabs: 0,\n   // {bool} 1|0\n   // By default, pages will show any Tab options on their display.  Set this\n   // to 1 to not show the tab options for this Page. (good for pages that\n   // are linkedPages with forms )\n};\n\nmodule.exports = class ABMobilePageCore extends ABMobileView {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABMobilePageDefaults);\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'viewKey',\t\t\t\t// unique key for this View Type\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this View Type\n\n      //\t\tname: '',\t\t\t\t\t// unique page name\n\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      //\t\t},\n\n      //\t\ttranslations:[]\n      // \t}\n\n      this.parent = null; // will be set by the pageNew() that creates this obj.\n      // {obj} .parent\n      // this points to the ABView object that manages this object as a child.\n      // this param is shared across ABViews as well as ABMobilePage, but has\n      // different implications ... so we default an ABMobilePage.parent = null\n      // and the place that Creates the Page must assign the .parent externally.\n   }\n\n   static common() {\n      return ABMobilePageDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABMobilePage instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.name = this.name;\n      obj.route = this.route;\n\n      obj.myAppID = this.myAppID;\n\n      obj.menuType = this.menuType;\n\n      obj.defaultPage = this.defaultPage;\n\n      // icon of popup page\n      if (this.settings.type == \"popup\") obj.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") obj.label = obj.name;\n\n      // compile our pages\n      obj.pageIDs = (this._pages || []).map((p) => p.id);\n\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      const DV = ABPropertyComponentDefaults;\n\n      this.route =\n         values.route || (this.name || this.label).replaceAll(\" \", \"_\");\n\n      // icon of popup page\n      if (values.settings.type == \"popup\") this.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") this.label = this.name;\n\n      // track which application this Page belongs to:\n      this.myAppID = values.myAppID;\n      if (!this.myAppID && this.application) {\n         this.myAppID = this.application.id;\n      }\n\n      this.menuType = values.menuType || \"menu\";\n      // {string}  [\"menu\", \"tab\"]\n      // indicates if this Page was added as a Mobile App's \"menu\" or \"Tab\"\n\n      this.defaultPage = values.defaultPage || 0;\n      // {bool}  1|0\n      // indicates if this is the default page that is loaded when the mobile app\n      // is started.\n      // NOTE: only 1 Page in a Mobile App can have this setting = 1.\n\n      this.settings.hideTitle = parseInt(\n         values.settings.hideTitle ?? DV.hideTitle\n      );\n      // {bool} 1|0\n      // By default an ABMobilePage will display it's this.label for a title\n      // on the page.  Setting this to TRUE (1) will hide the title.\n\n      this.settings.hideTabs = parseInt(\n         values.settings.hideTabs ?? DV.hideTabs\n      );\n      // {bool} 1|0\n      // By default, pages will show any Tab options on their display.  Set this\n      // to 1 to not show the tab options for this Page. (good for pages that\n      // are linkedPages with forms )\n\n      // now properly handle our sub pages.\n      var pages = [];\n      (values.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            pages.push(this.pageNew(def));\n         } else {\n            this.emit(\n               \"warning\",\n               `App[${this.application.name}][${this.application.id}]->Page[${this.name}][${this.id}] referenced an unknown Page[${id}]`,\n               {\n                  appID: this.application.id,\n                  pageID: this.id,\n                  missingPageID: id,\n               }\n            );\n         }\n      });\n      this._pages = pages;\n\n      // the default columns of ABView is 1\n      // this.settings.columns = this.settings.columns || 1;\n      // this.settings.gravity = this.settings.gravity || [1];\n\n      // convert from \"0\" => 0\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABMobilePage\n            // be sure to remove any of it's ABMobilePage as well\n            // This cleans out any dangling ABDefinitions\n\n            var allPageDeletes = [];\n            var allPages = this.pages();\n            this._pages = [];\n            // doing ._pages = [] prevents any of my updates when\n            // a sub-page is .destroy()ed\n\n            allPages.forEach((p) => {\n               allPageDeletes.push(p.destroy());\n            });\n            return Promise.all(allPageDeletes);\n         })\n         .then(() => {\n            var parent = this.parent || this.application;\n\n            return parent.pageRemove(this);\n         })\n         .then(() => {\n            return super.destroy();\n         });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABMobilePage\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // now we can persist ourself in our parent\n            var parent = this.parent || this.application;\n\n            return parent.pageInsert(this);\n         })\n         .then(() => {\n            // make sure .defaultPage is properly set\n            if (this.defaultPage) {\n               return this.application.setPageDefault(this);\n            }\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   /**\n    * @method refreshInstance()\n    * This returns a NEW instance of a ABMobilePage based upon the latest\n    * version of it's Definition.  It also resolves any current listeners\n    * this copy currently has and prepare this to discard itself.\n    */\n   refreshInstance() {\n      console.warn(\n         \"This version of ABMobilePage hasn't updated it's refreshInstance()\",\n         this\n      );\n      return this;\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    *\n    * return an array of all the ABMobilePages for this ABMobilePage.\n    *\n    * @param {fn} filter\t\ta filter fn to return a set of ABMobilePages that this fn\n    *\t\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\tflag to find in sub pages\n    *\n    * @return {array}\t\t\tarray of ABMobilePages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         // if (this._pages && this._pages.length > 0) {\n         //    result = this._pages.filter(filter);\n\n         //    if (result.length < 1) {\n         //       this._pages.forEach((p) => {\n         //          var subPages = p.pages(filter, deep);\n         //          if (subPages && subPages.length > 0) {\n         //             result = subPages;\n         //          }\n         //       });\n         //    }\n         // }\n         result = this.application._searchDeep(this, \"_pages\", filter);\n      }\n      // find root pages\n      else {\n         result = this._pages.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method pageInsert()\n    *\n    * save the given ABMobilePage in our ._pages array and persist the current\n    * values if they changed.\n    *\n    * @param {ABMobilePage} page The instance of the page to save.\n    * @return {Promise}\n    */\n   pageInsert(page) {\n      var isIncluded = this.pages((o) => o.id === page.id).length > 0;\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._pages.push(page);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABMobilePage that is tied to this\n    * ABMobilePage.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABMobilePage}\n    */\n   pageNew(values) {\n      // make sure this is an ABMobilePage description\n      values.key = ABMobilePageDefaults.key;\n\n      // NOTE: this returns a new ABView component.\n      // when creating a new page, the 3rd param should be null, to signify\n      // the top level component.\n      var page = this.application.viewNew(values, this.application, null);\n      page.parent = this;\n      return page;\n   }\n\n   /**\n    * @method pageRemove()\n    *\n    * remove the given ABMobilePage from our ._pages array and persist the current\n    * values.\n    *\n    * @param {ABMobilePage} page The instance of the page to remove.\n    * @return {Promise}\n    */\n   pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages((p) => p.id != page.id);\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   updateIcon(obj) {\n      // icon of page\n      if (obj.settings.type == \"popup\") {\n         obj.icon = \"clone\";\n      } else {\n         obj.icon = ABMobilePageDefaults.icon;\n      }\n      return obj;\n   }\n\n   /**\n    * @method clone()\n    * clone the defintions of this ABMobilePage object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {obj}\n    *        defs of the copied ABView\n    */\n   clone(lookUpIds, parent) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // copy\n      let result = super.clone(lookUpIds, parent);\n\n      // page's name should not be duplicate\n      result.name = null;\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABMobilePage object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // now continue with the default .copy()\n      return super.copy(lookUpIds, parent, options);\n   }\n};\n","/*\n * ABViewCore\n *\n * ABViewCore defines the common ABView structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABView classes.\n *\n */\n\nvar ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABMobileViewDefaults = {\n   key: \"mobile-view\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"view\", // {string} the multilingual label key for the class label\n   tabicon: \"\", // no default tab icons\n};\n\nconst ABViewPropertyComponentDefaults = {\n   label: \"\",\n};\n\nmodule.exports = class ABMobileViewCore extends ABMLClass {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super([\"label\"], application.AB);\n\n      this.__events = [];\n      // keep track of any event listeners attached to this ABView object\n\n      this.defaults = defaultValues || ABMobileViewDefaults;\n\n      this.application = application;\n\n      this.parent = parent || null;\n\n      this.warningsSilent = false;\n      // {bool}\n      // Should we suppress our configuration warnings?\n\n      this.__missingViews = [];\n      // {array}\n      // Any ABView.id we have stored that we can't find.\n\n      this.fromValues(values);\n   }\n\n   static common() {\n      return ABMobileViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyComponentDefaults;\n   }\n\n   /**\n    * @method newInstance()\n    * return a new instance of this ABView.  Most likely called from interfaces\n    * that create new UI elements like the ABDesigner.\n    * @param {ABApplication} application  \t: the root ABApplication this view is under\n    * @param {ABView/ABApplication} parent\t: the parent object of this ABView.\n    * @return {ABView}\n    */\n   static newInstance(application, parent) {\n      // return a new instance from ABViewManager:\n      return application.viewNew(\n         { key: this.common().key },\n         application,\n         parent\n      );\n   }\n\n   viewKey() {\n      return this.defaults.key;\n   }\n\n   viewIcon() {\n      return this.defaults.icon;\n   }\n\n   tabIcon() {\n      return this.defaults.tabicon;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABView instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      var obj = super.toObj();\n\n      var result = {\n         id: this.id,\n         type: this.type || this.viewKey(),\n         key: this.key,\n         icon: this.icon,\n         tabicon: this.tabicon,\n         name: this.name,\n         settings: this.AB.cloneDeep(this.settings || {}),\n         // accessLevels: this.accessLevels,\n         translations: obj.translations,\n      };\n\n      // encode our child view references\n      result.viewIDs = (this._views || []).map((v) => v.id).filter((id) => id);\n      result.viewIDs = result.viewIDs.concat(this.__missingViews);\n\n      if (this.position) result.position = this.position;\n\n      // encode our .isRoot() reference.\n      // (NOTE: this is set so our server side code can distinguish) between a .view\n      // and a root page:\n      // NOTE: we intentionally do NOT pull this out in .fromValues()\n      result.isRoot = this.isRoot();\n\n      return result;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id; // NOTE: only exists after .save()\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = values.type || this.viewKey();\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.key = values.key || this.viewKey();\n      // {string} .key\n      // the unique lookup key for our ABViewManager to create new\n      // instances of this object.\n\n      this.icon = values.icon || this.viewIcon();\n      // {string} .icon\n      // the font awesome icon reference for showing an icon for this\n      // view in the AppBuilder interface builder.\n\n      this.tabicon = values.tabicon || this.tabIcon();\n\n      this.name = values.name;\n      // {string} .name\n      // A name reference for this ABView. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      values.settings = values.settings || {};\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.settings = values.settings || {};\n      // {obj} .settings\n      // the property settings for this ABView\n\n      // make sure .settings.height is an int and not a string\n      this.settings.height = parseInt(this.settings.height || 0);\n\n      // this.accessLevels = values.accessLevels || {};\n      // {obj} .accessLevels\n      // Hash: { ABRole.id : accessLevel }\n      // tracks the Role -> AccessLevel settings of this particular\n      // view.\n      // accessLevel: 0 : no access, 1 : view only, 2: full access\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n\n      // If the View / DataCollection does not have a .name already,\n      // use the English label translation as the .name instead.\n      if (!this.name && Array.isArray(this.translations)) {\n         for (var i = 0; i < this.translations.length; i++) {\n            if (i == 0) {\n               // Use the first label found, in case there is no 'en'\n               this.name = this.translations[i].label;\n            }\n            if (this.translations[i].language_code == \"en\") {\n               // But the 'en' label will have final priority\n               this.name = this.translations[i].label;\n               break;\n            }\n         }\n      }\n\n      // default value for our label\n      if (this.label == \"?label?\") {\n         if (this.parent) {\n            this.label =\n               this.parent.label +\n               \".\" +\n               (this.field?.()?.columnName ?? this.defaults.key);\n         }\n      }\n\n      var views = [];\n      this.__missingViews = this.__missingViews || [];\n      (values.viewIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            views.push(this.application.viewNew(def, this.application, this));\n         } else {\n            this.__missingViews.push(id);\n         }\n      });\n      this._views = views;\n\n      this.position = values.position || {};\n\n      if (this.position.x != null) this.position.x = parseInt(this.position.x);\n      if (this.position.y != null) this.position.y = parseInt(this.position.y);\n\n      this.position.dx = parseInt(this.position.dx || 1);\n      this.position.dy = parseInt(this.position.dy || 1);\n   }\n\n   isRoot() {\n      return this.parent == null || this.parent == this.application;\n   }\n\n   /**\n    * @method allParents()\n    * return a flattened array of all the ABViews parents\n    * @return {array}      array of ABViews\n    */\n   allParents() {\n      var parents = [];\n      var curView = this;\n\n      // add current view to array\n      parents.unshift(curView);\n\n      while (!curView.isRoot() && curView.parent) {\n         parents.unshift(curView.parent);\n\n         curView = curView.parent;\n      }\n\n      return parents;\n   }\n\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABViewPage is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   // isAccessibleForRoles(roles) {\n   //    var foundRole = false;\n\n   //    var accessibleRoles = Object.keys(this.accessLevels) || [];\n   //    (roles || []).forEach((r) => {\n   //       if (accessibleRoles.indexOf(r.uuid || r) > -1) {\n   //          foundRole = true;\n   //       }\n   //    });\n\n   //    return foundRole;\n   // }\n\n   /**\n    * @method getUserAccess()\n    *\n    * return the access level of the current user on the current view\n    *\n    * @return {integer}  // 0 = No Access // 1 = Read Only // 2 = Full Access\n    */\n   // getUserAccess() {\n   //    // by default everyone has no access\n   //    var accessLevel = 0;\n\n   //    if (this.application.isAccessManaged) {\n   //       // check to see if the current users is the access manager\n   //       var isAccessManager = false;\n   //       // first check if manager is defined by their role\n   //       if (parseInt(this.application.accessManagers.useRole) == 1) {\n   //          // if so check if any of the user's role match the managers\n   //          this.AB.Account.roles().forEach((role) => {\n   //             if (\n   //                this.application.accessManagers.role.indexOf(\n   //                   role.id || role.uuid\n   //                ) > -1\n   //             ) {\n   //                // if so set the access level to full access\n   //                isAccessManager = true;\n   //                accessLevel = 2;\n   //             }\n   //          });\n   //       }\n   //       // if the user isn't already set as the manager and the manager is defined by their account\n   //       if (\n   //          !isAccessManager &&\n   //          parseInt(this.application.accessManagers.useAccount) == 1\n   //       ) {\n   //          // check if the user's account matches the managers\n   //          if (\n   //             this.application.accessManagers.account.indexOf(\n   //                this.AB.Account.uuid() + \"\"\n   //             ) > -1\n   //          ) {\n   //             // if so set the access level to full access\n   //             isAccessManager = true;\n   //             accessLevel = 2;\n   //          }\n   //       }\n\n   //       // if the user is not the manager check if the page has access levels defined for roles\n   //       if (\n   //          this.accessLevels &&\n   //          Object.keys(this.accessLevels).length > 0 &&\n   //          !isAccessManager\n   //       ) {\n   //          // check to see if the user's roles matches one of the roles defined\n   //          this.AB.Account.roles().forEach((role) => {\n   //             var currentRole = this.accessLevels[role.id || role.uuid];\n   //             if (currentRole && parseInt(currentRole) > accessLevel)\n   //                // if the access level is higher than a previous role set to the new level\n   //                accessLevel = parseInt(currentRole);\n   //          });\n   //       }\n   //    } else {\n   //       accessLevel = 2;\n   //    }\n\n   //    return accessLevel;\n   // }\n\n   /**\n    * @method parentFormComponent\n    * return the closest form object this component is on.\n    */\n   parentFormComponent() {\n      var form = null;\n\n      var curr = this;\n      while (curr.key != \"mobile-form\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"mobile-form\") {\n         form = curr;\n      }\n\n      return form;\n   }\n\n   /**\n    * @method parentDetailComponent\n    * return the closest detail object that this component is on.\n    * @returns {ABViewDetail} detail component\n    */\n   parentDetailComponent() {\n      var detail = null;\n\n      var curr = this;\n      while (curr.key != \"mobile-detail\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"mobile-detail\") {\n         detail = curr;\n      }\n\n      return detail;\n   }\n\n   pageParent(filterFn) {\n      if (filterFn == null) filterFn = () => true;\n\n      // if current page is the root page, then return itself.\n      if (this.isRoot()) {\n         return this;\n      }\n\n      var parentPage = this.parent;\n      while (\n         parentPage &&\n         (parentPage.key != \"mobile-page\" || !filterFn(parentPage))\n      ) {\n         parentPage = parentPage.parent;\n      }\n\n      return parentPage;\n   }\n\n   pageRoot() {\n      var rootPage = this.pageParent();\n\n      while (!rootPage.isRoot()) {\n         rootPage = rootPage.pageParent();\n      }\n\n      return rootPage;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    *\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) {\n         if (\n            [\n               \"mobile-form\",\n               \"grid\",\n               \"line\",\n               \"area\",\n               \"bar\",\n               \"gantt\",\n               \"kanban\",\n            ].indexOf(this.key) > -1\n         ) {\n            // NOTE: ignore kanban side forms where this is the case:\n            if (this.key == \"mobile-form\" && this._currentObject) return null;\n\n            if (this.warningsSilent) return null;\n\n            var errNoDCID = new Error(\n               `ABViewCore:get datacollection(): View[${this.key}] didn't define a dataviewID.`\n            );\n            this.AB.notify.builder(errNoDCID, {\n               view: this,\n               settings: this.settings,\n            });\n         } else {\n            // These views shouldn't matter if they don't have a datacollection.\n            if (\n               [\n                  \"button\",\n                  \"label\",\n                  \"mobile-page\",\n                  \"tab\",\n                  \"viewcontainer\",\n               ].indexOf(this.key) == -1\n            ) {\n               console.warn(\n                  `TODO: figure out which ABView* require a .dataviewID: ${this.key}?`\n               );\n            }\n         }\n         return null;\n      }\n\n      var dc = this.AB.datacollectionByID(dataviewID);\n      if (!dc) {\n         var errNoDC = new Error(\n            `MobileView[${this.label}][${this.id}] is unable to find associated DataCollection`\n         );\n         this.AB.notify.builder(errNoDC, {\n            view: this,\n            dataviewID,\n         });\n      }\n      return dc;\n   }\n\n   ///\n   /// Update Access accessLevels\n   ///\n\n   /**\n    * @method updateAccessLevels()\n    *\n    *\n    * @param {string} roleId\n    *\n    * @param {string} accessLevel\n    *\n    * @return {Promise}\n    *\n    */\n   // updateAccessLevels(roleId, accessLevel) {\n   //    if (parseInt(accessLevel) == 0) {\n   //       if (this.accessLevels[roleId]) delete this.accessLevels[roleId];\n   //    } else {\n   //       this.accessLevels[roleId] = accessLevel;\n   //    }\n\n   //    return this.save(false, false);\n   // }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    *\n    * return an array of all the ABViews children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViews that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\n    *\n    * @return {array} \tarray of ABViews\n    */\n   views(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._views || this._views.length < 1) return result;\n\n      // find into recursively\n      if (filter && deep) {\n         // result = result.concat(this._views.filter(filter));\n\n         // this._views.forEach((v) => {\n         //    var subViews = v.views(filter, deep);\n         //    if (subViews && subViews.length > 0) {\n         //       result = result.concat(subViews);\n         //    }\n         // });\n         result = this.application._searchDeep(this, \"_views\", filter);\n      } else {\n         result = this._views.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewByID()\n    *\n    * return the specific View referenced by the given ID.\n    *\n    * @param {uuid} ID\n    *        the {ABMobileView}.id of the child view we are requesting\n    *\n    * @return {ABMobileView || undefined}\n    */\n   viewByID(ID) {\n      return this.views((v) => v.id == ID, true)[0];\n   }\n\n   /**\n    * @method viewNew()\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return this.application.viewNew(\n         values,\n         application || this.application,\n         parent || this\n      );\n   }\n\n   /**\n    * @method viewDestroy()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   // viewDestroy(view) {\n   //    console.error(\"DEPRECIATED: where is this called?\");\n   //    return this.viewRemove(view);\n   // }\n\n   /**\n    * @method viewRemove()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewRemove(view) {\n      var origLen = this._views.length;\n      this._views = this.views(function (v) {\n         return v.id != view.id;\n      });\n\n      if (this._views.length < origLen) {\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewInsert()\n    *\n    * persist the current ABView in our list of ._views.\n    *\n    * @param {ABView} object\n    * @return {Promise}\n    */\n   viewInsert(view) {\n      var isIncluded =\n         this.views(function (v) {\n            return v.id == view.id;\n         }).length > 0;\n      if (!isIncluded) {\n         this._views.push(view);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewReorder()\n    *\n    * reorder the current ABView in our list of ._views.\n    *\n    * @param {string} viewId - id of the active view\n    * @param {string} toPosition - 'to' postion\n    * @return {Promise}\n    */\n   viewReorder(viewId, toPosition) {\n      var from = this._views.findIndex((v) => v.id == viewId);\n      if (from < 0) return;\n\n      // move drag item to 'to' position\n      this._views.splice(toPosition, 0, this._views.splice(from, 1)[0]);\n\n      // save to database\n      return this.save(true);\n   }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // unsubscribe events\n      this.eventClear(true);\n\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABView\n            // be sure to remove any of it's ABViews as well\n            // This cleans out any dangling ABDefinitions\n\n            var allViewDeletes = [];\n            var allViews = this.views();\n            this._views = [];\n            // doing ._views = [] prevents any of my updates when\n            // a sub-view is .destroy()ed\n\n            allViews.forEach((v) => {\n               allViewDeletes.push(v.destroy());\n            });\n            return Promise.all(allViewDeletes);\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects\n            if (this.parent && !this.pages) {\n               return this.parent.viewRemove(this);\n            }\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABView\n    * @return {Promise}\n    *\t\t.resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects:\n            if (this.parent && !this.pages) {\n               // if we have a .parent, make sure we are included in our .parent's\n               // viewIDs\n               return this.parent.viewInsert(this);\n            }\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   /**\n    * @method wantsAdd()\n    * Some widgets can indicate to their containing ABMobilePage that\n    * it wants to provide an [Add] feature.\n    * @return {bool}\n    */\n   get wantsAdd() {\n      // the default widget doesn't.\n      // only those that actually do, should override this.\n      return false;\n   }\n\n   ///\n   /// Events\n   ///\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    * \t\t\t\t\t\t\temitter: object,\n    * \t\t\t\t\t\t\teventName: string,\n    * \t\t\t\t\t\t\tlistener: function\n    * \t\t\t\t\t\t}\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      var exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    * @param {bool} deep - clear events of child views\n    */\n   eventClear(deep) {\n      if (deep) {\n         this.views().forEach((v) => {\n            v.eventClear(deep);\n         });\n      }\n\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   /**\n    * @method clone()\n    * clone the definitions of this ABView object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    * @return {obj}\n    *        obj defs of this ABView\n    */\n   clone(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pages\", \"views\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.viewNew(config, this.application, parent);\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // copy sub pages\n      if (this.pages && !options.ignoreSubPages) {\n         result._pages = [];\n         this.pages().forEach((p) => {\n            let copiedSubPage = p.clone(lookUpIds, result, options);\n            copiedSubPage.parent = result;\n\n            result._pages.push(copiedSubPage);\n         });\n      }\n\n      // copy sub views\n      if (this.views && !options.ignoreSubViews) {\n         result._views = [];\n         this.views().forEach((v) => {\n            let copiedView = v.clone(lookUpIds, result, options);\n\n            result._views.push(copiedView);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABView object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    *        options.newName {string}\n    *             new user determined name for page\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pageIDs\", \"viewIDs\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.application.viewNew(config, this.application, parent);\n\n      // keep the parent\n      result.parent = parent || this.parent;\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application.\n         // pages with null parent ids default to getting put on root\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // page's name should not be duplicate\n      if (this.key == \"mobile-page\") {\n         result.name =\n            options?.newName ||\n            `${result.name}_copied_${this.AB.uuid().slice(0, 3)}`;\n\n         result.label = options?.newName || `${result.label} (copied)`;\n      }\n\n      return Promise.resolve()\n         .then(() => {\n            // copy sub pages\n            var allSaves = [];\n\n            if (this._pages && !options.ignoreSubPages) {\n               result._pages = [];\n               this.pages().forEach((p) => {\n                  // this prevents result.save() from happening on each of these\n                  // p.copy():\n                  if (p.isRoot())\n                     this.application._pages.push({ id: lookUpIds[p.id] });\n\n                  allSaves.push(\n                     p\n                        .copy(lookUpIds, result, options)\n                        .then((copiedSubPage) => {\n                           copiedSubPage.parent = result;\n                           // remove the temp {id:} entry above:\n                           this.application._pages =\n                              this.application._pages.filter(\n                                 (p2) => p2.id != lookUpIds[p.id]\n                              );\n\n                           // now add the full copiedSubPage:\n                           result._pages.push(copiedSubPage);\n                        })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // copy sub views\n            var allSaves = [];\n\n            if (this._views && !options.ignoreSubViews) {\n               result._views = [];\n               this.views().forEach((v) => {\n                  allSaves.push(\n                     // send a null for parent, so that the .save() wont trigger\n                     // a save of the parent.\n                     v.copy(lookUpIds, result, options).then((copiedView) => {\n                        // now patch up the parent connection:\n                        // copiedView.parent = result;\n                        if (\n                           result._views.filter((vi) => vi.id == copiedView.id)\n                              .length < 1\n                        ) {\n                           result._views.push(copiedView);\n                        }\n                     })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // now we do 1 save for all the views\n            return result.save();\n         })\n         .then(() => {\n            return result;\n         });\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABViewCustomPropertyComponentDefaults = {\n   dataviewID: null,\n   field: null,\n   height: 0,\n   hideTitle: 0,\n   hideTabs: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"mobile-custom\", // {string} unique key for this view\n   icon: \"palette\", // {string} fa-[icon] reference for this view\n   labelKey: \"Custom\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewCustomCore extends ABMobileView {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCustomPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   // field() {\n   //    var dv = this.datacollection;\n   //    if (!dv) return null;\n\n   //    var object = dv.datasource;\n   //    if (!object) return null;\n\n   //    return object.fieldByID(this.settings.field);\n   // }\n\n   /**\n    * @method wantsAdd()\n    * Some widgets can indicate to their containing ABMobilePage that\n    * it wants to provide an [Add] feature.\n    * @return {bool}\n    */\n   get wantsAdd() {\n      // we do if we have a setting for linkPageAdd\n      return this.settings.wantsAdd ?? false;\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABViewFormButtonPropertyComponentDefaults = {\n   includeSave: true,\n   saveLabel: \"\",\n   includeCancel: false,\n   cancelLabel: \"\",\n   includeReset: false,\n   resetLabel: \"\",\n   afterCancel: null,\n   alignment: \"right\",\n   isDefault: false, // mark default button of form widget\n};\n\nconst ABViewFormButtonDefaults = {\n   key: \"mobile-button\",\n   // {string} unique key for this view\n\n   icon: \"square\",\n   // {string} fa-[icon] reference for this view\n\n   labelKey: \"button\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormButtonCore extends ABMobileView {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormButtonDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormButtonDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormButtonPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   toObj() {\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      let result = super.toObj();\n\n      return result;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      Object.keys(ABViewFormButtonPropertyComponentDefaults).forEach((k) => {\n         let val =\n            this.settings[k] ?? ABViewFormButtonPropertyComponentDefaults[k];\n         try {\n            val = JSON.parse(val);\n         } catch (e) {\n            // just ignore the error and save val\n         }\n         this.settings[k] = val;\n      });\n\n      // this.settings.includeSave = JSON.parse(\n      //    this.settings.includeSave ||\n      //       ABViewFormButtonPropertyComponentDefaults.includeSave\n      // );\n      // this.settings.includeCancel = JSON.parse(\n      //    this.settings.includeCancel ||\n      //       ABViewFormButtonPropertyComponentDefaults.includeCancel\n      // );\n      // this.settings.includeReset = JSON.parse(\n      //    this.settings.includeReset ||\n      //       ABViewFormButtonPropertyComponentDefaults.includeReset\n      // );\n\n      // this.settings.isDefault = JSON.parse(\n      //    this.settings.isDefault ||\n      //       ABViewFormButtonPropertyComponentDefaults.isDefault\n      // );\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormCheckboxPropertyComponentDefaults = {};\n\nconst ABMobileViewFormCheckboxDefaults = {\n   key: \"mobile-checkbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormCheckboxCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormCheckboxPropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormConnectPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n   filterConditions: {\n      glue: \"and\",\n      rules: [],\n   },\n   sortFields: [],\n   popupWidth: 700,\n   popupHeight: 450,\n};\n\nconst ABMobileViewFormConnectDefaults = {\n   key: \"mobile-connect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormConnectCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormConnectDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormConnectDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormConnectPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.filterConditions =\n         this.settings.filterConditions ||\n         ABMobileViewFormConnectPropertyComponentDefaults.filterConditions;\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\nconst ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\nconst ABViewFormDefaults = {\n   key: \"mobile-form\", // unique key identifier for this ABMobileViewForm\n   icon: \"list-alt\", // icon reference: (without 'fa-' )\n   labelKey: \"Form\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewFormPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   clearOnLoad: false,\n   clearOnSave: false,\n   displayRules: [],\n   editForm: \"none\", // The url pointer of ABViewForm\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalues: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tvalue: {object}\n   //\t\t\t}\n   //\t\t]\n   //\t}]\n   recordRules: [],\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalue: {string}\n   //\t}]\n   submitRules: [],\n};\n\nmodule.exports = class ABMobileViewFormCore extends ABMobileView {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewFormDefaults);\n   }\n\n   static common() {\n      return ABViewFormDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewFormPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewFormPropertyComponentDefaults.showLabel\n      );\n      this.settings.clearOnLoad = JSON.parse(\n         this.settings.clearOnLoad != null\n            ? this.settings.clearOnLoad\n            : ABViewFormPropertyComponentDefaults.clearOnLoad\n      );\n      this.settings.clearOnSave = JSON.parse(\n         this.settings.clearOnSave != null\n            ? this.settings.clearOnSave\n            : ABViewFormPropertyComponentDefaults.clearOnSave\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth == null\n            ? ABViewFormPropertyComponentDefaults.labelWidth\n            : this.settings.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height == null\n            ? ABViewFormPropertyComponentDefaults.height\n            : this.settings.height\n      );\n   }\n\n   // Use this function in kanban\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      var viewsToAllow = [\"mobile-label\", \"mobile-button\", \"mobile-text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   /**\n    * @method fieldComponents()\n    * return an array of all the ABViewFormField children\n    * @param {fn} filter\n    *        a filter fn to return a set of ABViewFormField that this fn\n    *\t       returns true for.\n    * @return {array} \tarray of ABViewFormField\n    */\n   fieldComponents(filter) {\n      const flattenComponents = (views) => {\n         let components = [];\n\n         views.forEach((v) => {\n            if (v == null) return;\n\n            components.push(v);\n\n            if (v._views?.length) {\n               components = components.concat(flattenComponents(v._views));\n            }\n         });\n\n         return components;\n      };\n\n      if (this._views?.length) {\n         const allComponents = flattenComponents(this._views);\n\n         if (filter == null) {\n            filter = (comp) =>\n               comp instanceof this.AB.Class.ABMobileViewFormItem;\n         }\n\n         return allComponents.filter(filter);\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * @method addFieldToForm()\n    * Create a New Form Item on this Form from a given ABFieldXXX object.\n    * @param {ABFieldXXX} field\n    * @param {int} yPosition\n    * @return {ABMobileViewFormXXX}\n    */\n   addFieldToForm(field, yPosition) {\n      if (field == null) return;\n\n      // TODO: figure out how to decode the Data Field and return a form\n      // element.\n\n      var fieldComponent = field.formComponentMobile();\n      if (fieldComponent == null) return;\n\n      var newView = fieldComponent.newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings || {};\n      newView.settings.fieldId = field.id;\n      // TODO : Default settings\n\n      if (yPosition != null) newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n\n   get RecordRule() {\n      let object = this.datacollection.datasource;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   /**\n    * @method recordRulesReady()\n    * This returns a Promise that gets resolved when all record rules report\n    * that they are ready.\n    * @return {Promise}\n    */\n   async recordRulesReady() {\n      return this.RecordRule.rulesReady();\n   }\n\n   doRecordRulesPre(rowData) {\n      return this.RecordRule.processPre({ data: rowData, form: this });\n   }\n\n   doRecordRules(rowData) {\n      // validate for record rules\n      if (rowData) {\n         let object = this.datacollection.datasource;\n         let ruleValidator = object.isValidData(rowData);\n         let isUpdatedDataValid = ruleValidator.pass();\n         if (!isUpdatedDataValid) {\n            console.error(\"Updated data is invalid.\", { rowData: rowData });\n            return Promise.reject(new Error(\"Updated data is invalid.\"));\n         }\n      }\n\n      return this.RecordRule.process({ data: rowData, form: this });\n   }\n\n   doSubmitRules(rowData) {\n      var object = this.datacollection.datasource;\n\n      var SubmitRules = new ABSubmitRule();\n      SubmitRules.formLoad(this);\n      SubmitRules.fromSettings(this.settings.submitRules);\n      SubmitRules.objectLoad(object);\n\n      return SubmitRules.process({ data: rowData, form: this });\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABViewFormCustomPropertyComponentDefaults = {};\n\nconst ABViewFormCustomDefaults = {\n   key: \"mobile-fieldcustom\",\n   // {string} unique key for this view\n   icon: \"object-group\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"custom\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormCustomCore extends ABMobileViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCustomPropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormDatepickerPropertyComponentDefaults = {\n   timepicker: false,\n};\n\nconst ABMobileViewFormDatepickerDefaults = {\n   key: \"mobile-date\", // {string} unique key for this view\n   icon: \"calendar\", // {string} fa-[icon] reference for this view\n   labelKey: \"datepicker\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormDatepickerCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormDatepickerDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormDatepickerDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormDatepickerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormDatetimePropertyComponentDefaults = {\n   timepicker: false,\n};\n\nconst ABMobileViewFormDatetimeDefaults = {\n   key: \"mobile-datetime\", // {string} unique key for this view\n   icon: \"calendar\", // {string} fa-[icon] reference for this view\n   labelKey: \"Date and Time\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormDatetimeCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormDatetimeDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormDatetimeDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormDatetimePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormEmailPropertyComponentDefaults = {\n   timepicker: false,\n};\n\nconst ABMobileViewFormEmailDefaults = {\n   key: \"mobile-email\", // {string} unique key for this view\n   icon: \"envelope\", // {string} fa-[icon] reference for this view\n   labelKey: \"Email\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormEmailCore extends ABMobileViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormEmailDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormEmailDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormEmailPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABViewFormFilePropertyComponentDefaults = {};\n\nconst ABViewFormFileDefaults = {\n   key: \"mobile-file\",\n   // {string} unique key for this view\n   icon: \"file\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"file\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormFileCore extends ABMobileViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormFileDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormFileDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormFilePropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABViewFormFormulaPropertyComponentDefaults = {};\n\nconst ABViewFormFormulaDefaults = {\n   key: \"mobile-formula\",\n   // {string} unique key for this view\n   icon: \"circle-o-notch\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"Formula\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormFormulaCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormFormulaDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormFormulaPropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormFile = require(\"../../platform/mobile/ABMobileViewFormFile\");\n\nconst ABViewFormImagePropertyComponentDefaults = {};\n\nconst ABViewImageFileDefaults = {\n   key: \"mobile-image\",\n   // {string} unique key for this view\n   icon: \"file-image-o\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"Image\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormImageCore extends ABMobileViewFormFile {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewImageFileDefaults\n      );\n   }\n\n   static common() {\n      return ABViewImageFileDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormImagePropertyComponentDefaults;\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABViewFormFieldPropertyComponentDefaults = {\n   required: 0,\n   disable: 0,\n};\n\nmodule.exports = class ABMobileViewFormItemCore extends ABMobileView {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static defaultValues() {\n      return ABViewFormFieldPropertyComponentDefaults;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let form = this.parentFormComponent();\n      if (form == null) return null;\n\n      let datacollection = form.datacollection;\n      if (datacollection == null) return null;\n\n      return datacollection;\n   }\n\n   field() {\n      if (this.settings.objectId) {\n         let object = this.AB.objectByID(this.settings.objectId);\n         if (!object) return null;\n\n         return object.fieldByID(this.settings.fieldId);\n      } else {\n         let form = this.parentFormComponent();\n         if (form == null) return null;\n\n         let object;\n         if (form._currentObject) {\n            object = form._currentObject;\n         } else {\n            let datacollection = form.datacollection;\n            if (datacollection == null) return null;\n\n            object = datacollection.datasource;\n         }\n\n         if (object == null) return null;\n\n         let field = object.fieldByID(this.settings.fieldId);\n         return field;\n      }\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormNumberPropertyComponentDefaults = {\n   isStepper: 0,\n};\n\nconst ABMobileViewFormNumberDefaults = {\n   key: \"mobile-numberbox\", // {string} unique key for this view\n   icon: \"hashtag\", // {string} fa-[icon] reference for this view\n   labelKey: \"number\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormNumberCore extends ABMobileViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormNumberDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormNumberDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormNumberPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewFormText instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"formLabel\"]);\n\n      var obj = super.toObj();\n      obj.views = []; // no subviews\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.isStepper =\n         this.settings.isStepper ||\n         ABMobileViewFormNumberPropertyComponentDefaults.isStepper;\n\n      // convert from \"0\" => 0\n      this.settings.isStepper = parseInt(this.settings.isStepper);\n   }\n};\n","const ABMobileViewFormCustom = require(\"../../platform/mobile/ABMobileViewFormCustom\");\n\nconst ABMobileViewFormReadonlyPropertyComponentDefaults = {};\n\nconst ABMobileViewFormReadonlyDefaults = {\n   key: \"mobile-fieldreadonly\", // {string} unique key for this view\n   icon: \"calculator\", // {string} fa-[icon] reference for this view\n   labelKey: \"readonly\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormReadonly extends ABMobileViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormReadonlyDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormReadonlyDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormReadonlyPropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormSelectSingle = require(\"../../platform/mobile/ABMobileViewFormSelectSingle\");\n\nconst ABMobileViewFormSelectMultiplePropertyComponentDefaults = {\n   type: \"richselect\", // 'richselect' or 'radio'\n};\n\nconst ABMobileViewFormSelectMultipleDefaults = {\n   key: \"mobile-selectmultiple\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"selectmultiple\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormSelectMultipleCore extends (\n   ABMobileViewFormSelectSingle\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormSelectMultipleDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormSelectMultipleDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormSelectMultiplePropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormSelectSinglePropertyComponentDefaults = {\n   type: \"richselect\", // 'richselect' or 'radio'\n};\n\nconst ABMobileViewFormSelectSingleDefaults = {\n   key: \"mobile-selectsingle\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"selectsingle\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormSelectSingleCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormSelectSingleDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormSelectSingleDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormSelectSinglePropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABViewFormTextboxPropertyComponentDefaults = {\n   type: \"single\", // 'single', 'multiple' or 'rich'\n   placeholder: \"\", // default placeholder text\n};\n\nconst ABViewFormTextboxDefaults = {\n   key: \"mobile-textbox\", // {string} unique key for this view\n   icon: \"i-cursor\", // {string} fa-[icon] reference for this view\n   labelKey: \"textbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormTextboxCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormTextboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormTextboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTextboxPropertyComponentDefaults;\n   }\n\n   toObj() {\n      // placeholder is a multilingual value:\n      this.unTranslate(this.settings, this.settings, [\"placeholder\"]);\n\n      return super.toObj();\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // placeholder is a multilingual value:\n      this.unTranslate(this.settings, this.settings, [\"placeholder\"]);\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABViewLabelPropertyComponentDefaults = {\n   text: \"\",\n   format: 0, // 0 - normal, 1 - title, 2 - description\n   alignment: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"mobile-label\", // {string} unique key for this view\n   icon: \"font\", // {string} fa-[icon] reference for this view\n   labelKey: \"Label\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewLabelCore extends ABMobileView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewLabelPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"text\"]);\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values); // <-- this performs the translations\n\n      // if this is being instantiated on a read from the Property UI,\n      // .text is coming in under .settings.label\n      this.text = values.text || values.settings.text || \"*text\";\n\n      this.settings.format =\n         this.settings.format || ABViewLabelPropertyComponentDefaults.format;\n      this.settings.alignment =\n         this.settings.alignment ||\n         ABViewLabelPropertyComponentDefaults.alignment;\n\n      // we are not allowed to have sub views:\n      this._views = [];\n\n      // convert from \"0\" => 0\n      this.settings.format = parseInt(this.settings.format);\n\n      this.translate(this, this, [\"label\", \"text\"]);\n   }\n\n   //// Allow external interface to manipulate our settings:\n\n   /**\n    * @method formatNormal\n    * display text in the normal format.\n    */\n   formatNormal() {\n      this.settings.format = 0;\n   }\n\n   /**\n    * @method formatTitle\n    * display text as a Title.\n    */\n   formatTitle() {\n      this.settings.format = 1;\n   }\n\n   /**\n    * @method formatDescription\n    * display text as a description.\n    */\n   formatDescription() {\n      this.settings.format = 2;\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABViewListPropertyComponentDefaults = {\n   dataviewID: null,\n   field: null,\n   height: 0,\n   hideTitle: 0,\n   hideTabs: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"mobile-list\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"List\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABMobileView {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewListPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   field() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var object = dv.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.field);\n   }\n\n   /**\n    * @method wantsAdd()\n    * Some widgets can indicate to their containing ABMobilePage that\n    * it wants to provide an [Add] feature.\n    * @return {bool}\n    */\n   get wantsAdd() {\n      // we do if we have a setting for linkPageAdd\n      return this.settings.linkPageAdd != \"\";\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABViewTimelinePropertyComponentDefaults = {\n   dataviewID: null,\n   field: null,\n   height: 0,\n   hideTitle: 0,\n   hideTabs: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"mobile-timeline\", // {string} unique key for this view\n   icon: \"timeline\", // {string} fa-[icon] reference for this view\n   labelKey: \"Timeline\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewTimelineCore extends ABMobileView {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewTimelinePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   field() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var object = dv.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.field);\n   }\n\n   /**\n    * @method wantsAdd()\n    * Some widgets can indicate to their containing ABMobilePage that\n    * it wants to provide an [Add] feature.\n    * @return {bool}\n    */\n   get wantsAdd() {\n      // we do if we have a setting for linkPageAdd\n      return this.settings.linkPageAdd != \"\";\n   }\n};\n","/**\n * ABProcessLane\n * manages the lanes in a Process Diagram.\n *\n * Lanes manage users in the system, and provide a way to lookup a SiteUser.\n */\nconst ABProcessParticipant = require(\"../../platform/process/ABProcessParticipant\");\n\nconst ABProcessLaneDefaults = {\n   type: \"process.lane\",\n   // {string} .type\n   // unique key to reference this specific object\n\n   // icon: \"key\"\n   // {string} .icon\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n};\n\nmodule.exports = class ABProcessLaneCore extends ABProcessParticipant {\n   constructor(attributes, process, AB) {\n      super(attributes, process, AB);\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n   }\n\n   static defaults() {\n      return ABProcessLaneDefaults;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      this.type = attributes.type || ABProcessLaneDefaults.type;\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   // toObj() {\n   //     // default label value\n   //     if (!this.label && this.name && this.name != \"\") {\n   //         this.label = this.name;\n   //     }\n\n   //     // untranslate this object:\n   //     var data = super.toObj();\n\n   //     var fieldsToSave = [\n   //         \"id\",\n   //         \"name\",\n   //         \"type\",\n   //         \"processID\",\n   //         \"diagramID\",\n   //         \"where\"\n   //     ];\n   //     fieldsToSave.forEach((f) => {\n   //         data[f] = this[f];\n   //     });\n\n   //     return data;\n   // }\n};\n","/**\n * ABProcessParticipant\n * manages the participant lanes in a Process Diagram.\n *\n * Participants manage users in the system, and provide a way to lookup a SiteUser.\n */\nconst ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABProcessParticipantDefaults = {\n   type: \"process.participant\",\n   // {string} .type\n   // unique key to reference this specific object\n\n   // icon: \"key\" // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n};\n\nmodule.exports = class ABProcessParticipantCore extends ABMLClass {\n   constructor(attributes, process, AB) {\n      super([\"label\"], AB);\n\n      this.process = process;\n      if (!this.processID) {\n         this.processID = process.id;\n      }\n\n      this.fromValues(attributes);\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n   }\n\n   static defaults() {\n      return ABProcessParticipantDefaults;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      // These Values are needed By ABDefinition:\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || ABProcessParticipantDefaults.type;\n      this.key = attributes.key || ABProcessParticipantDefaults.type;\n\n      // Process Values:\n      this.processID = attributes.processID || null;\n      this.diagramID = attributes.diagramID || \"?diagramID?\";\n      this.laneIDs = attributes.laneIDs || [];\n      this.stashed = false;\n      if (attributes.stashed && attributes.stashed != \"\") {\n         this.stashed = attributes.stashed;\n      }\n\n      function validChecker(attribute) {\n         return typeof attribute != \"undefined\" && attribute != null;\n      }\n\n      this.useRole = 0;\n      if (validChecker(attributes.useRole)) {\n         this.useRole = parseInt(attributes.useRole);\n      }\n\n      this.role = 0;\n      if (validChecker(attributes.role)) {\n         this.role = attributes.role;\n      }\n\n      this.useAccount = 0;\n      if (validChecker(attributes.useAccount)) {\n         this.useAccount = parseInt(attributes.useAccount);\n      }\n\n      this.account = 0;\n      if (validChecker(attributes.account)) {\n         this.account = attributes.account;\n      }\n\n      this.useField = 0;\n      if (validChecker(attributes.useField)) {\n         this.useField = parseInt(attributes.useField);\n      }\n\n      this.userField = [];\n      if (validChecker(attributes.userField)) {\n         this.userField = attributes.userField;\n      }\n\n      // depreciated\n      this.fields = [];\n      if (validChecker(attributes.fields)) {\n         this.fields = attributes.fields;\n      }\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label && this.name && this.name != \"\") {\n         this.label = this.name;\n      }\n\n      // untranslate this object:\n      var data = super.toObj();\n\n      var fieldsToSave = [\n         \"id\",\n         \"name\",\n         \"type\",\n         \"processID\",\n         \"diagramID\",\n         \"laneIDs\",\n         \"where\",\n         \"useRole\",\n         \"role\",\n         \"useAccount\",\n         \"account\",\n         \"useField\",\n         \"userField\",\n         \"fields\",\n         \"stashed\",\n      ];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   /**\n    * @method onProcessReady()\n    * perform any tasks/checks necessary after the parent Process is\n    * setup and ready.\n    */\n   onProcessReady() {}\n};\n","/*\n * ABProcessTaskManager\n *\n * An interface for managing the different ABProcessTasks in AppBuilder.\n *\n */\n\n/*\n * Tasks\n * A name => ABProcessElement hash of the different ABProcessElements available.\n */\nvar Tasks = {};\n\n/*\n * DEFINITIONTYPES\n * a hash of BPMN:Element.type to Default values\n * for each of our Process Objects.\n *\n * NOTE: For Tasks, the key should be target.type,\n * for Triggers or End elements, the key should be\n * the target.eventDefinitionType\n */\nvar DEFINITIONTYPES = {};\n\nvar AllProcessElements = [\n   require(\"../../platform/process/tasks/ABProcessEnd\"),\n   require(\"../../platform/process/tasks/ABProcessGatewayExclusive\"),\n   require(\"../../platform/process/tasks/ABProcessTaskEmail\"),\n   require(\"../../platform/process/tasks/ABProcessTaskService\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingBatchProcessing\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingFPClose\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingFPYearClose\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingJEArchive\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceCalculate\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceInsertRecord\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceQuery\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceGetResetPasswordUrl\"),\n   require(\"../../platform/process/tasks/ABProcessTaskSubProcess\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUser\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUserApproval\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUserExternal\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUserForm\"),\n   require(\"../../platform/process/tasks/ABProcessTrigger\"),\n   require(\"../../platform/process/tasks/ABProcessTriggerLifecycle\"),\n   require(\"../../platform/process/tasks/ABProcessTriggerTimer\"),\n];\n\nAllProcessElements.forEach((ELEMENT) => {\n   Tasks[ELEMENT.defaults().key] = ELEMENT;\n\n   switch (ELEMENT.defaults().category) {\n      case \"start\":\n      case \"end\":\n         DEFINITIONTYPES[ELEMENT.DiagramReplace().target.eventDefinitionType] =\n            ELEMENT.defaults();\n         break;\n\n      case \"gateway\":\n      case \"task\":\n         DEFINITIONTYPES[ELEMENT.DiagramReplace().target.type] =\n            ELEMENT.defaults();\n         break;\n   }\n});\n\nmodule.exports = {\n   /*\n    * @function allTasks\n    * return all the currently defined ABProcessTasks in an array.\n    * @return [{ABProcessTask},...]\n    */\n   allTasks: function () {\n      var tasks = [];\n      for (var t in Tasks) {\n         tasks.push(Tasks[t]);\n      }\n      return tasks;\n   },\n\n   /*\n    * @function newTask\n    * return an instance of an ABProcessTask based upon the values.type value.\n    * @return {ABProcessTask}\n    */\n   newTask: function (values, process, AB) {\n      if (values.key) {\n         return new Tasks[values.key](values, process, AB);\n      } else {\n         //// TODO: what to do here?\n      }\n   },\n\n   DiagramReplaceDefinitionsForType: function (type) {\n      var definitions = AllProcessElements.filter((e) => {\n         return e.defaults().category == type;\n      }).map((e) => {\n         return e.DiagramReplace();\n      });\n      return definitions;\n   },\n\n   StartEvents: function () {\n      return this.DiagramReplaceDefinitionsForType(\"start\");\n   },\n\n   Gateways: function () {\n      return this.DiagramReplaceDefinitionsForType(\"gateway\");\n   },\n\n   Tasks: function () {\n      return this.DiagramReplaceDefinitionsForType(\"task\");\n   },\n\n   EndEvents: function () {\n      return this.DiagramReplaceDefinitionsForType(\"end\");\n   },\n\n   definitionForElement: function (element) {\n      // pull the key from the embedded .eventDefinition\n      // if there is one\n      var key = null;\n      if (element.businessObject.eventDefinitions) {\n         var def = element.businessObject.eventDefinitions[0];\n         if (def) {\n            key = def.$type;\n         }\n      }\n\n      // if not, then just use the base .type\n      if (!key) {\n         key = element.type;\n      }\n\n      return DEFINITIONTYPES[key];\n   },\n};\n","var ABMLClass = require(\"../../../platform/ABMLClass\");\n\nmodule.exports = class ABProcessTaskCore extends ABMLClass {\n   constructor(attributes, process, AB, defaultValues) {\n      super([\"label\"], AB);\n\n      this.defaults = defaultValues || { key: \"core\", icon: \"core\" };\n      // {obj} .defaults\n      // a value hash of default values for an ABProcessTask\n      // NOTE: needs to be set before .fromValues()\n\n      this.fromValues(attributes);\n\n      this.process = process;\n      if (!this.processID) {\n         this.processID = process.id;\n      }\n      // {ABProcess} .process\n      // The parent ABProcess this process element is a part of.\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n      this.state = null;\n   }\n\n   ///\n   /// Static Methods\n   ///\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      // ABDefinition Related fields:\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || \"process.task.unknown\";\n\n      // ABProcess related fields:\n      this.key = attributes.key || this.defaults.key || \"?key?\";\n      this.processID = attributes.processID || null;\n      this.diagramID = attributes.diagramID || \"?diagramID?\";\n      this.laneDiagramID = attributes.laneDiagramID || \"?laneID?\";\n      // laneDiagramID : connects to the parent object that defines any\n      //      default User information for the Task.  In our case, it\n      //      might be a {ABProcessParticipant} object, or a {ABProcessLane}\n      //      object.  by default, a diagram's Participant obj doesn't define\n      //      any lanes, and therefore can provide that info.  Once a lane\n      //      is added, however, an object is assigned to it, and the\n      //      Lane will provide that info.\n\n      // initialize any defined settings\n      if (this.defaults && this.defaults.settings) {\n         this.defaults.settings.forEach((s) => {\n            if (typeof attributes[s] == \"undefined\") this[s] = null;\n            else this[s] = attributes[s];\n         });\n      }\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label && this.name && this.name != \"\") {\n         this.label = this.name;\n      }\n\n      // untranslate this object:\n      var data = super.toObj();\n\n      var fieldsToSave = [\n         \"id\",\n         \"name\",\n         \"type\",\n         \"processID\",\n         \"diagramID\",\n         \"laneDiagramID\",\n         \"key\",\n      ];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      // save any defined settings\n      if (this.defaults && this.defaults.settings) {\n         this.defaults.settings.forEach((s) => {\n            data[s] = this[s];\n         });\n      }\n\n      return data;\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * errorConfig()\n    * Respond with an error when expected configuration parameters do not\n    * pull data.\n    * @param {obj} instance\n    *        the instance data of this task\n    * @param {string} msg\n    *        the display message for this error.\n    * @param {array[string]} fields\n    *        an array of parameter keys that should be included in the error\n    *        for additional information.\n    * @return {Promise.reject(error)}\n    */\n   errorConfig(instance, msg, fields = []) {\n      this.log(instance, msg);\n      var error = new Error(`${this.type}: ${msg}`);\n      var info = { task: this };\n      if (!Array.isArray(fields)) fields = [fields];\n      fields.forEach((field) => {\n         info[field] = this[field];\n      });\n      this.AB.notify.builder(error, info);\n      return Promise.reject(error);\n   }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context\n    *        the context data of the process instance\n    * @param {obj} defaults\n    *        any values to include from our child classes\n    * @param {obj} val\n    *        any values to override the default state\n    */\n   initState(context, defaults, val) {\n      defaults = defaults || {};\n      if (!val) {\n         val = defaults;\n         defaults = {};\n\n         // in this case, then auto initi blank instanceValues:\n         if (this.defaults && this.defaults.instanceValues) {\n            this.defaults.instanceValues.forEach((v) => {\n               defaults[v] = null;\n            });\n         }\n      }\n\n      context.taskState = context.taskState || {};\n\n      // don't overwrite your settings if they already exist:\n      if (!context.taskState[this.diagramID]) {\n         context.taskState[this.diagramID] = {\n            initialized: true,\n            status: \"initialized\",\n         };\n         for (var d in defaults) {\n            context.taskState[this.diagramID][d] = defaults[d];\n         }\n         for (var v in val) {\n            context.taskState[this.diagramID][v] = val[v];\n         }\n      }\n   }\n\n   /*\n    * @function isEndTask\n    * return true if the current type of task is an End task. False otherwise.\n    * @return {bool}\n    */\n   isEndTask() {\n      return false;\n   }\n\n   /**\n    * log()\n    * enter a log in the current process instance\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {...} ...allArgs the remaining parameters sent to the log\n    */\n   log(instance, ...allArgs) {\n      var text = `${this.diagramID} : ${\n         this.name ? this.name : this.key\n      } : ${allArgs.join(\" \")}`;\n      instance.log.push(text);\n   }\n\n   /**\n    * myLane()\n    * return the ABProcessParticipant | ABProcessLane element we are\n    * in.\n    * @return {ABProcessParticipant|ABProcessLane}\n    */\n   myLane() {\n      return this.process.elementForDiagramID(this.laneDiagramID);\n   }\n\n   /**\n    * myState()\n    * return the current state values for this ABProcessTask\n    * @param {obj} instance  the current ABProcessInstance\n    * @return {obj}\n    */\n   myState(instance) {\n      return instance.context.taskState[this.diagramID];\n   }\n\n   /**\n    * nextTasks()\n    * follow the current instance diagram and return the next task(s)\n    * after this task.\n    * @param {obj} instance  the current ABProcessInstance\n    * @return {array}  [ABProcessTask, ...] or {null} if an error\n    */\n   nextTasks(instance) {\n      var nextTasks = [];\n\n      var myDiagramObj = instance.hashDiagramObjects[this.diagramID];\n      if (!myDiagramObj) {\n         let error = new Error(\n            `Configuration Error: Did not find my definition for dID[${this.diagramID}]`\n         );\n         this.onError(instance, error);\n         return null;\n      }\n\n      // myDiagramObj :\n      // {\n      //     \"bpmn2:outgoing\": [{\"_text\": \"SequenceFlow_00fbxm3\"} ...],\n      //     \"_attributes\": {id: \"StartEvent_1\"},\n      //     \"_type\": \"start\"\n      // }\n\n      // find my possible exits:\n      var exitFlows = myDiagramObj[\"bpmn2:outgoing\"];\n      if (!exitFlows) {\n         let error = new Error(\n            `Configuration Error: Did not find any outgoing flows for dID[${this.diagramID}]`\n         );\n         this.AB.notify.builder(error, { task: this });\n         this.onError(instance, error);\n         return null;\n      }\n\n      if (!Array.isArray(exitFlows)) {\n         exitFlows = [exitFlows];\n      }\n\n      var tasksFromFlow = (flow) => {\n         // follow a flow and grab each of it's exit tasks\n         // place them into nextTasks[];\n\n         var flowObj = instance.hashDiagramObjects[flow[\"_text\"]];\n         if (!flowObj) return;\n\n         var targetIDs = flowObj[\"_attributes\"][\"targetRef\"];\n         if (!targetIDs) return;\n\n         if (!Array.isArray(targetIDs)) {\n            targetIDs = [targetIDs];\n         }\n\n         targetIDs.forEach((tid) => {\n            var targetTask = this.process.elementForDiagramID(tid);\n            if (targetTask) {\n               if (nextTasks) {\n                  nextTasks.push(targetTask);\n               }\n            } else {\n               let error = new Error(\n                  `Configuration Error: No ProcessTask instance for diagramID[${tid}]`\n               );\n               this.AB.notify.builder(error, { task: this });\n               this.onError(instance, error);\n               nextTasks = null;\n            }\n         });\n      };\n\n      exitFlows.forEach((f) => {\n         tasksFromFlow(f);\n      });\n\n      return nextTasks;\n   }\n\n   /**\n    * onError()\n    * perform the following actions (log it) on an error.\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {Error} error\n    */\n   onError(instance, error) {\n      if (error) {\n         var text = `${error.toString()}`;\n         this.log(instance, text);\n      }\n      var myState = this.myState(instance);\n      myState.status = \"error\";\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can request from other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return null;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      return null;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that this element\n    * can provide to other ProcessElements.\n    * @return {array} | null\n    */\n   processDataObjects() {\n      return null;\n   }\n\n   /**\n    * hashProcessDataValues()\n    * return a hash of live Process Data Values\n    * @param {obj} instance\n    * @return {array} | null\n    */\n   hashProcessDataValues(instance) {\n      var listDataFields = this.process.processDataFields(this);\n      var currentProcessValues = {};\n      listDataFields.forEach((f) => {\n         currentProcessValues[f.key] = this.process.processData(this, [\n            instance,\n            f.key,\n         ]);\n      });\n      return currentProcessValues;\n   }\n\n   /**\n    * reset()\n    * prepare this task to run again if it was already completed.\n    *\n    * This might happen in a process where a loop is formed and tasks\n    * are repeated until a certain outcome.\n    *\n    * @param {obj} instance  the current ABProcessInstance\n    */\n   reset(instance) {\n      // a task wants to run me.  Possibly again.\n      var myState = this.myState(instance);\n\n      // if I haven't setup my state (why?) then just\n      // do that again:\n      if (!myState) {\n         this.initState(instance.context);\n      } else {\n         // if I have already \"completed\" and we are being\n         // asked to run again (it's possible)\n         if (myState.status == \"completed\" || myState.status == \"error\") {\n            // remove my current state\n            delete instance.context.taskState[this.diagramID];\n\n            // store a new state in the context\n            this.initState(instance.context);\n\n            // remember our previous state\n            var newState = this.myState(instance);\n            newState._prevState = myState;\n            this.log(instance, \" Reset() called. Running again. \");\n         }\n      }\n   }\n\n   /**\n    * stateCompleted()\n    * mark this task has having completed.\n    * @param {obj} instance  the current ABProcessInstance\n    */\n   stateCompleted(instance) {\n      var myState = this.myState(instance);\n      myState.status = \"completed\";\n   }\n\n   /**\n    * stateUpdate()\n    * update my state values with the given values data\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {obj} values    the new state values\n    */\n   stateUpdate(instance, values) {\n      values = values || {};\n      var myState = this.myState(instance);\n      for (var v in values) {\n         myState[v] = values[v];\n      }\n   }\n\n   /**\n    * wantToDoSomething()\n    * determine if this task still has something to do.\n    * @param {obj} instance  the instance data of the process we are working on\n    * @return {bool} true if there is still pending actions\n    */\n   wantToDoSomething(instance) {\n      var state = this.myState(instance);\n      if (state) {\n         return state.status != \"completed\" && state.status != \"error\";\n      } else {\n         // my state wasn't defined?\n         console.warn(\n            \"ABProcessTaskCore:wantToDoSomething(): called without having initialized our state first.\",\n            instance\n         );\n         // initialize our state and try again\n         this.initState(instance.context);\n         return this.wantToDoSomething(instance);\n      }\n   }\n\n   /**\n    * @method onProcessReady()\n    * Perform any setup actions after the parent process has indicated it is \"ready\"\n    */\n   onProcessReady() {}\n\n   get startElements() {\n      let startElems =\n         this.process.elements(\n            (elem) =>\n               elem && elem.defaults && elem.defaults.category === \"start\"\n         ) || [];\n      return startElems;\n   }\n\n   get previousElements() {\n      return this.process.connectionPreviousTask(this);\n   }\n\n   get objectOfStartElement() {\n      const startElem = this.startElements[0];\n      if (!startElem) return null;\n\n      return this.AB.objectByID(startElem.objectID);\n   }\n\n   get objectOfPrevElement() {\n      let prevElem = this.previousElements[0];\n      if (!prevElem) return null;\n\n      let objectID;\n      switch (prevElem.type) {\n         case \"process.task.service.query\":\n            objectID = prevElem.qlObj ? prevElem.qlObj.objectID : null;\n            break;\n         case \"process.task.service.insertRecord\":\n         default:\n            objectID = prevElem.objectID;\n            break;\n      }\n\n      return this.AB.objectByID(objectID);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskEndDefaults = {\n   category: \"end\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"stop\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to\n   // reference 'fa-user'\n\n   key: \"End\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTaskEndCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.end\";\n      super(attributes, process, AB, ABProcessTaskEndDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskEndDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Terminate End Event\",\n         actionName: \"replace-with-terminate-end\",\n         className: \"bpmn-icon-end-event-terminate\",\n         target: {\n            type: \"bpmn:EndEvent\",\n            eventDefinitionType: \"bpmn:TerminateEventDefinition\",\n         },\n      };\n   }\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // An End Event doesn't perform any other actions\n   //         // than to signal it has successfully completed.\n   //         // But it provides no Additional Tasks to work on.\n   //         // for testing:\n   //         this.stateCompleted(instance);\n   //         this.log(instance, \"End Event Reached\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         triggered: false,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n\n   /*\n    * @function isEndTask\n    * return true if the current type of task is an End task. False otherwise.\n    * @return {bool}\n    */\n   isEndTask() {\n      return true;\n   }\n\n   /**\n    * nextTasks()\n    * return the next tasks to be run after this task is complete.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve([])\n    */\n   nextTasks(instance) {\n      // I'm an End Event.  There are no nextTasks()\n      return [];\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessGatewayExclusiveDefaults = {\n   category: \"gateway\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to\n   // reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"GatewayExclusive\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"conditions\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessGatewayExclusiveCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.gateway.exclusive\";\n      super(attributes, process, AB, ABProcessGatewayExclusiveDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessGatewayExclusiveDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Exclusive Gateway\",\n         actionName: \"replace-with-exclusive-gateway\",\n         className: \"bpmn-icon-gateway-xor\",\n         target: {\n            type: \"bpmn:ExclusiveGateway\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      this.conditions = this.conditions || {};\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        ABProcessGatewayExclusiveDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            userFormID: null,\n            userFormResponse: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.userFormResponse`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskEmailDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"to\",\n      \"from\",\n      \"subject\",\n      \"message\",\n      \"toCustom\",\n      \"fromCustom\",\n      \"toUsers\",\n      \"fromUsers\",\n      \"toCustomFields\",\n      \"fromCustomFields\",\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"email\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"Email\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTaskEmailCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.email\";\n      super(attributes, process, AB, ABProcessTaskEmailDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskEmailDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Send Task\",\n         actionName: \"replace-with-send-task\",\n         className: \"bpmn-icon-send\",\n         target: {\n            type: \"bpmn:SendTask\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      ABProcessTaskEmailDefaults.fields.forEach((f) => {\n         this[f] = attributes[f];\n      });\n   }\n\n   /**\n    * onProcessReady()\n    * Perform our warnings checks once the parent Process is ready\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      ABProcessTaskEmailDefaults.fields.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // for testing:\n   //         var myState = this.myState(instance);\n   //         myState.status = \"completed\";\n   //         this.log(instance, \"Email Sent successfully\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         to: [],\n         from: [],\n         subject: this.subject,\n         message: this.message,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingBatchProcessingDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingBatchProcessing\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"objectBatch\",\n      \"processBatchValue\",\n      \"fieldBatchEntries\",\n      \"fieldBatchFinancialPeriod\",\n      \"objectJE\",\n      \"fieldJEAccount\",\n      \"fieldJERC\",\n      \"fieldJEStatus\",\n      \"fieldJEStatusComplete\",\n      \"objectBR\",\n      \"fieldBRFinancialPeriod\",\n      \"fieldBRAccount\",\n      \"fieldBRRC\",\n      \"fieldBREntries\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingBatchProcessingCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.batchProcessing\";\n      super(attributes, process, AB, AccountingBatchProcessingDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingBatchProcessingDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingFPCloseDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingFPClose\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processFPValue\",\n      \"objectFP\",\n      \"objectGL\",\n      \"objectAcc\",\n      \"fieldFPStart\",\n      \"fieldFPOpen\",\n      \"fieldFPStatus\",\n      \"fieldFPActive\",\n      \"fieldGLStarting\",\n      \"fieldGLRunning\",\n      \"fieldGLAccount\",\n      \"fieldGLRc\",\n      \"fieldGLDebit\",\n      \"fieldGLCredit\",\n      \"fieldAccType\",\n      \"fieldAccAsset\",\n      \"fieldAccExpense\",\n      \"fieldAccLiabilities\",\n      \"fieldAccEquity\",\n      \"fieldAccIncome\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingFPCloseCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.fpClose\";\n      super(attributes, process, AB, AccountingFPCloseDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingFPCloseDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingFPYearCloseDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingFPYearClose\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processFPYearValue\",\n      \"objectFPYear\",\n      \"objectFPMonth\",\n      \"objectGL\",\n      \"objectAccount\",\n      \"valueFundBalances\",\n      \"valueNetIncome\",\n      \"fieldFPYearStart\",\n      \"fieldFPYearEnd\",\n      \"fieldFPYearStatus\",\n      \"fieldFPYearActive\",\n      \"fieldFPMonthStart\",\n      \"fieldFPMonthEnd\",\n      \"fieldGLStartBalance\",\n      \"fieldGLRunningBalance\",\n      \"fieldGLrc\",\n      \"fieldAccNumber\",\n      \"fieldAccType\",\n      \"fieldAccTypeIncome\",\n      \"fieldAccTypeExpense\",\n      \"fieldAccTypeEquity\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingFPYearCloseCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.fpYearClose\";\n      super(attributes, process, AB, AccountingFPYearCloseDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingFPYearCloseDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet AccountingJEArchiveDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"archive\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingJEArchive\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processBatchValue\",\n      \"objectBatch\",\n      \"objectBalance\",\n      \"objectJE\",\n      \"objectJEArchive\",\n\n      \"fieldBatchFiscalMonth\",\n      \"fieldJeAccount\",\n      \"fieldJeRC\",\n      \"fieldJeArchiveBalance\",\n      \"fieldBrFiscalMonth\",\n      \"fieldBrAccount\",\n      \"fieldBrRC\",\n      \"fieldsMatch\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingJEArchiveCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.jeArchive\";\n      super(attributes, process, AB, AccountingJEArchiveDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingJEArchiveDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet CalculateDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"calculator\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"Calculate\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"formulaText\"],\n};\n\nmodule.exports = class CalculateTaskCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.calculate\";\n      super(attributes, process, AB, CalculateDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return CalculateDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      const label = `${this.label}->Value`;\n      // this is a calculate task, so let's include a fake ABFieldNumber\n      // for the .field value, so other tasks that limit their operations\n      // to fields can use this as a number\n      if (!this._fakeNum) {\n         this._fakeObj = this.AB.objectNew({});\n         this._fakeNum = this.AB.fieldNew(\n            { key: \"number\", name: label, label },\n            this._fakeObj\n         );\n      }\n      return {\n         key: `${this.id}.value`,\n         label,\n         field: this._fakeNum,\n      };\n   }\n};\n","/**\n * ABProcessTaskServiceCore\n *\n * This defines the base Service Task element that can be placed on a BPMN\n * diagram.  In our system, we will let the designer choose a sub class\n * to make active for this element.\n *\n * Currently a ServiceTask performs a dedicated operation on the server.\n *  - performing a query, looking up data, etc...\n *\n */\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskServiceDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskService\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskServiceCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service\";\n      super(attributes, process, AB, ABProcessTaskServiceDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskServiceDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Service Task\",\n         actionName: \"replace-with-service-task\",\n         className: \"bpmn-icon-service\",\n         target: {\n            type: \"bpmn:ServiceTask\",\n         },\n      };\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        ABProcessTaskServiceDefaults.fields.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        ABProcessTaskServiceDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            userFormID: null,\n            userFormResponse: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.userFormResponse`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABProcessTaskGetResetPasswordUrlDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"GetResetPasswordUrl\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"email\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskGetResetPasswordUrlCore extends (\n   ABProcessElement\n) {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.getResetPasswordUrl\";\n      super(attributes, process, AB, ABProcessTaskGetResetPasswordUrlDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskGetResetPasswordUrlDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return {\n         key: `${this.id}.url`,\n         label: `${this.label}->URL`,\n      };\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet InsertRecordDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"InsertRecord\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"objectID\",\n      \"fieldValues\",\n      \"isRepeat\",\n      \"repeatMode\",\n      \"repeatColumn\",\n   ],\n};\n\nmodule.exports = class InsertRecordCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.insertRecord\";\n      super(attributes, process, AB, InsertRecordDefaults);\n\n      this.results = [];\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return InsertRecordDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.isRepeat = JSON.parse(attributes.isRepeat || false);\n   }\n\n   get startElement() {\n      let startElem = null;\n      let currProcess = this.process;\n\n      // Find the start (trigger) task\n      while (!startElem && currProcess) {\n         startElem = currProcess.elements(\n            (elem) => elem?.defaults?.category == \"start\"\n         )[0];\n\n         // If .currProcess is a sub task, then go to the parent process for get the start task\n         currProcess = currProcess.process;\n      }\n\n      return startElem;\n   }\n\n   get previousElement() {\n      return this.process.connectionPreviousTask(this)[0];\n   }\n\n   get objectOfStartElement() {\n      let startElem = this.startElement;\n      if (!startElem) return null;\n\n      let startElemObj = this.AB.objectByID(startElem.objectID);\n      return startElemObj;\n   }\n\n   get objectOfPrevElement() {\n      let prevElem = this.previousElement;\n      if (!prevElem) return null;\n\n      let objectID;\n      switch (prevElem.type) {\n         case \"process.task.service.query\":\n            objectID = prevElem.qlObj ? prevElem.qlObj.objectID : null;\n            break;\n         case \"process.task.service.insertRecord\":\n         default:\n            objectID = prevElem.objectID;\n            break;\n      }\n\n      return this.AB.objectByID(objectID);\n   }\n\n   get fieldRepeat() {\n      let obj = this.objectOfStartElement;\n      if (!obj) return null;\n\n      return obj.fields((f) => f.id == this.repeatColumn)[0];\n   }\n\n   /**\n    * processDataFields()\n    * return a single available data field from this element\n    * this will be the record inserted by this task\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return [\n         {\n            key: `${this.id}.[PK]`,\n            label: `${this.label}-> Inserted record [PK]`,\n            field: {\n               id: this.id,\n               object: { id: this.objectID },\n               key: \"InsertedRecord\",\n               columnName: \"uuid\",\n            },\n            object: this.objectID,\n            set: true,\n         },\n      ];\n   }\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n     toObj() {\n         var data = super.toObj();\n \n         AccountingBatchProcessingDefaults.settings.forEach((f) => {\n             data[f] = this[f];\n         });\n \n         return data;\n     }\n     */\n\n   ////\n   //// Process Instance Methods\n   ////\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABQLManager = require(\"../../../platform/ql/ABQLManager.js\");\n\nconst ABProcessTaskServiceQueryDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskServiceQuery\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"qlObj\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskServiceQueryCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.query\";\n      super(attributes, process, AB, ABProcessTaskServiceQueryDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskServiceQueryDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      // Before we make instances of qlObj:\n      this._datasources = [];\n\n      // comvert our qlObj into an ABQLxxx instance.\n      if (this.qlObj) {\n         this.qlObj = ABQLManager.fromAttributes(this.qlObj, this, this.AB);\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      const data = super.toObj();\n\n      // convert qlObj into obj format:\n      if (this.qlObj) data.qlObj = this.qlObj.toObj();\n\n      return data;\n   }\n\n   registerDatasource(obj) {\n      this._datasources.push(obj);\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        const myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      // in this Task, we can return the Response to the UserForm\n      let fields = null;\n\n      if (this._datasources.length > 0) {\n         fields = [];\n\n         this._datasources.forEach((s) => {\n            const param = s.processDataField(this.id, this.label);\n\n            if (param) {\n               fields.push(param);\n            }\n         });\n      }\n\n      return fields;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      const parts = key.split(\".\");\n\n      if (parts[0] === this.id) {\n         const myState = this.myState(instance);\n\n         return myState[parts[1]];\n      }\n\n      return null;\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet SubProcessDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"object-group\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"SubProcess\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"isEnable\",\n      \"parameterId\",\n      \"connectionAttrs\",\n      \"elementIDs\",\n      \"loopType\",\n   ],\n};\n\nconst NOSPAM = {\n   /*message : bool */\n};\n// prevent sending the same message over and over.\n\nmodule.exports = class SubProcessCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.subProcess\";\n      super(attributes, process, AB, SubProcessDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return SubProcessDefaults;\n   }\n\n   static DiagramReplace() {\n      // taken from \"bpmn-js/lib/features/replace/ReplaceOptions\"\n      return {\n         label: \"Sub Process\",\n         actionName: \"replace-with-subprocess\",\n         className: \"bpmn-icon-subprocess-expanded\",\n         target: {\n            type: \"bpmn:SubProcess\",\n            isExpanded: true,\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      // Convert string to boolean\n      this.isEnable = this.isEnable == null ? true : JSON.parse(this.isEnable);\n\n      let currElements = this._elements || {};\n      this._unknownElementIDs = [];\n      this._elements = {};\n      (attributes.elementIDs || []).forEach((eID) => {\n         let ele = this.AB.processElementNew(eID, this);\n         if (ele) {\n            this._elements[eID] = ele;\n         } else {\n            // current eID isn't one of our definitions yet, so might be\n            // a temporary .diagramID from an unsaved task:\n            if (currElements[eID]) {\n               this._elements[eID] = currElements[eID];\n            } else {\n               this._unknownElementIDs.push(eID);\n            }\n         }\n      });\n\n      this._unknownElementIDs.forEach((eID) => {\n         let key = `Process[${this.processID}] Task[${this.label}] is referencing an unknown element id:[${eID}]`;\n         if (!NOSPAM[key]) {\n            let err = new Error(key);\n            this.AB.notify.builder(err, { processTask: this.id, eID });\n            NOSPAM[key] = true;\n         }\n      });\n\n      this._connections = attributes.connectionAttrs || {};\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      let data = super.toObj();\n\n      data.elementIDs = [];\n      for (let e in this._elements) {\n         data.elementIDs.push(this._elements[e].id);\n      }\n\n      data.connectionAttrs = this._connections;\n\n      return data;\n   }\n\n   /**\n    * @method processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataFields(currElement) {\n      if (this.parameterId == null) return [];\n\n      // only call processDataFields once, filter it to get the different queries\n      let dataFieldsAll = this.process.processDataFields(this) || [];\n\n      // get the subtask data\n      let dataFieldOpt = dataFieldsAll.filter(\n         (opt) => opt.key === this.parameterId\n      )[0];\n\n      // get data from insert tasks\n      let dataFieldsAllInserted = dataFieldsAll.filter(\n         (opt) => (opt?.field?.key ?? opt?.field) === \"InsertedRecord\"\n      );\n\n      if (dataFieldOpt == null) return [];\n\n      let result = [];\n\n      // Connect field type\n      if (\n         dataFieldOpt.field &&\n         dataFieldOpt.field.key == \"connectObject\" &&\n         dataFieldOpt.field.datasourceLink &&\n         dataFieldOpt.field.datasourceLink.fields\n      ) {\n         result.push({\n            key: `${this.id}.uuid`,\n            label: `${this.label}->Repeat Data.ID`,\n            object: dataFieldOpt.field.datasourceLink,\n         });\n\n         dataFieldOpt.field.datasourceLink.fields().forEach((f) => {\n            result.push({\n               key: `${this.id}.${f.id}`,\n               label: `${this.label}->Repeat Data.${f.label}`,\n               field: f,\n               object: f.object,\n            });\n         });\n      }\n      // Other field types\n      else {\n         result.push({\n            key: dataFieldOpt.field\n               ? `${this.id}.${dataFieldOpt.field.id}`\n               : `${this.id}.subProcess`,\n            label: `${this.label}->Repeat Data`,\n            field: dataFieldOpt.field,\n            object: dataFieldOpt.object,\n         });\n      }\n\n      dataFieldsAllInserted.forEach((opt) => {\n         result.push({\n            key: `${opt.key || opt.id}`,\n            label: `Parent Process Data->${opt.label}`,\n            field: opt.field,\n            object: opt.object,\n         });\n      });\n\n      // Get any tasks that exist inside the subprocess\n      let previousFields = this.process.processDataFields.call(\n         this,\n         currElement\n      );\n      if (previousFields && previousFields.length > 0) {\n         result = result.concat(previousFields);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method processData()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processData(currElement, params) {\n      let instance = params[0];\n      let key = params[1];\n      let data;\n\n      if (instance && key?.startsWith?.(this.id)) {\n         let fieldId = key.split(\".\")[1];\n         let myState = this.myState(instance);\n         let stateData = myState ? myState.data : null;\n         data = stateData;\n\n         if (stateData && fieldId) {\n            let dataFieldOpt = (\n               this.process.processDataFields(this) || []\n            ).filter((opt) => opt.key == this.parameterId)[0];\n\n            if (dataFieldOpt?.field?.key == \"connectObject\") {\n               if (!Array.isArray(stateData)) stateData = [stateData];\n\n               // Extract data\n               data = stateData.map((item) => {\n                  if (fieldId == \"uuid\" || fieldId == \"id\") {\n                     return item.uuid || item.id || item;\n                  } else if (dataFieldOpt.field.datasourceLink) {\n                     let returnField = dataFieldOpt.field.datasourceLink.fields(\n                        (f) => f.id == fieldId\n                     )[0];\n                     if (returnField) return item[returnField.columnName];\n                     else return item;\n                  }\n               });\n            }\n         }\n      }\n\n      // Filter none data items\n      if (Array.isArray(data)) data = data.filter((d) => d != null);\n\n      if (data == null || data.length == 0)\n         data = this.process.processData.call(this, currElement, params);\n\n      if (data == null || data.length == 0)\n         data = this.process.processData(this, params);\n\n      return data;\n   }\n\n   allPreviousTasks(...params) {\n      return this.process.allPreviousTasks.call(this, ...params);\n   }\n\n   allPreviousConnectionsForElement(...params) {\n      return this.process.allPreviousConnectionsForElement.call(\n         this,\n         ...params\n      );\n   }\n\n   allPreviousConnectionsForConnection(...params) {\n      return this.process.allPreviousConnectionsForConnection.call(\n         this,\n         ...params\n      );\n   }\n\n   //\n   // Diagram Elements\n   //\n\n   /**\n    * @method connections()\n    * return an array of connections that describe the relationships between\n    * our process elements.\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return [{SimpleConnectionObj}]\n    */\n   connections(fn) {\n      return this.process.connections.call(this, fn);\n   }\n\n   /**\n    * @method connectionForDiagramID()\n    * return the connection for the given diagram id\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionForDiagramID(dID) {\n      if (!dID) return;\n\n      return this.process.connectionForDiagramID.call(this, dID);\n   }\n\n   /**\n    * @method connectionsIncoming()\n    * return the connections that are entering this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsIncoming(dID) {\n      if (!dID) return;\n\n      return this.process.connectionsIncoming.call(this, dID);\n   }\n\n   /**\n    * @method connectionsOutgoing()\n    * return the connections that are leaving this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsOutgoing(dID) {\n      if (!dID) return;\n\n      return this.process.connectionsOutgoing.call(this, dID);\n   }\n\n   /**\n    * @method connectionRemove()\n    * remove the connection info for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionRemove(element) {\n      if (!element) return;\n\n      this.process.connectionRemove.call(this, element);\n   }\n\n   /**\n    * @method connectionSimplyElement()\n    * given a BPMN diagram element, return a simplified object that describes\n    * the connection between two elements.\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    * @return {SimpleConnectionObj}\n    *        .id : {string} diagram id of the connection element\n    *        .type : {string} the type of connection\n    *        .from : {string} the diagram id of the source element\n    *        .to : {string} the diagram id of the dest element\n    */\n   connectionSimplyElement(element) {\n      if (!element) return;\n\n      return this.process.connectionSimplyElement.call(this, element);\n   }\n\n   /**\n    * @method connectionUpsert()\n    * add or update the connection information for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionUpsert(element) {\n      if (!element) return;\n\n      this.process.connectionUpsert.call(this, element);\n   }\n\n   /**\n    * @method connectionPreviousTask()\n    * return the ABProcessElement(s) that was a previous Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionPreviousTask(currElement) {\n      if (!currElement) return;\n\n      return this.process.connectionPreviousTask.call(this, currElement);\n   }\n\n   /**\n    * @method elements()\n    * return an array of elements that match the given filter (or all elements\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABProcessTask, ABProcessParticipant, etc...]}\n    */\n   elements(fn = () => true) {\n      return this.process.elements.call(this, fn);\n   }\n\n   /**\n    * @method elementAdd()\n    * insert an element to be tracked by this process.\n    * @param {ABProcessElement} element\n    *        the full instance of an ABProcessElement to track.\n    */\n   elementAdd(element) {\n      if (!element) return;\n\n      this.process.elementAdd.call(this, element);\n   }\n\n   /**\n    * @method elementForDiagramID()\n    * return the object that is tied to the given xml diagram ID.\n    * @param {string} dID the diagram ID\n    * @return {ABProcess[OBJ]}\n    */\n   elementForDiagramID(dID) {\n      if (!dID) return null;\n\n      return this.process.elementForDiagramID.call(this, dID);\n   }\n\n   /**\n    * @method elementRemove()\n    * remove an element from being tracked by this process.\n    * @param {obj|ABProcessElement} def\n    *        a definition of, or full Object instance of the ABProcessElement\n    *        to remove.\n    */\n   elementRemove(def) {\n      if (!def) return;\n\n      this.process.elementRemove.call(this, def);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABFieldList = require(\"../../../platform/dataFields/ABFieldList.js\");\n\nvar ABProcessTaskApprovalDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [\"userFormID\", \"userFormResponse\"],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"Approval\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"who\", \"toUsers\", \"formBuilder\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskUserApprovalCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.user.approval\";\n      super(attributes, process, AB, ABProcessTaskApprovalDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskApprovalDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      function fixBoolean(obj) {\n         if (obj) {\n            Object.keys(obj).forEach((k) => {\n               if (obj[k] == \"false\") {\n                  obj[k] = false;\n               } else if (obj[k] == \"true\") {\n                  obj[k] = true;\n               } else if (typeof obj[k] == \"object\") {\n                  fixBoolean(obj[k]);\n               }\n            });\n         }\n      }\n      fixBoolean(this.formBuilder);\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   /*     \n    toObj() {\n        var data = super.toObj();\n\n        ABProcessTaskApprovalDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n*/\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {};\n        ABProcessTaskApprovalDefaults.instanceValues.forEach((v) => {\n            myDefaults[v] = null;\n        });\n\n        super.initState(context, myDefaults, val);\n    }\n*/\n\n   /*\n    * preProcessFormIOComponents()\n    * we need to parse the form.io components to ensure the proper columnName\n    * and labels are being used. We also will translate the columnNames at this\n    * point in the code\n    */\n   preProcessFormIOComponents() {\n      var fields = this.process.processDataFields(this);\n      if (fields && this.formBuilder && this.formBuilder.components) {\n         this.formBuilder.components.forEach((c) => {\n            if (c.abFieldID) {\n               fields.filter((entry) => {\n                  if (entry.field?.id == c.abFieldID) {\n                     c.label = entry.field.label;\n                     c.key = entry.key;\n                     if (c.data?.values && entry.field.settings.options) {\n                        var vals = [];\n                        entry.field.settings.options.forEach((opt) => {\n                           vals.push({\n                              label: opt.text,\n                              value: opt.id,\n                           });\n                        });\n                        c.data.values = vals;\n                     }\n                  }\n               });\n            } else if (c.components && c.components.length) {\n               c.key = c.path;\n               c.components.forEach((o) => {\n                  if (o.abFieldID) {\n                     // these are plucked conneted values\n                     // gather up all their fields to be used\n                     var pluck = fields.filter((f) => {\n                        return f.key == c.path;\n                     })[0];\n                     if (!pluck) return;\n                     pluck.object.fields().filter((entry) => {\n                        if (entry?.id == o.abFieldID) {\n                           o.label = entry.label;\n                           o.key = entry.columnName;\n                           if (o.data?.values && entry.settings.options) {\n                              var vals = [];\n                              entry.settings.options.forEach((opt) => {\n                                 vals.push({\n                                    label: opt.text,\n                                    value: opt.id,\n                                 });\n                              });\n                              o.data.values = vals;\n                           }\n                        }\n                     });\n                  }\n               });\n            }\n         });\n      }\n      return this.formBuilder;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      // we need to get the button events defined by the form.io formBuilder\n      var options = [];\n      this.formBuilder.components.forEach((comp) => {\n         if (comp.type == \"button\" && comp.action == \"event\" && comp.event) {\n            options.push({\n               id: comp.event,\n               text: comp.label,\n            });\n         }\n      });\n      // in this Task, we can return the Response to the UserForm\n      // The Response can be in the form of a List Field, with one or more\n      // return options.\n\n      var myID = this.diagramID;\n\n      // create an ABFieldList object:\n      // make sure the options follow what is currently defined for our\n      // responses:\n      var myObj = this.AB.objectNew({});\n      var listField = new ABFieldList(\n         {\n            id: `${myID}.userFormResponse`,\n            label: `${this.label}->Response`,\n            columnName: `${myID}.userFormResponse`,\n            settings: {\n               options: options,\n            },\n         },\n         myObj\n      );\n\n      // NOTE: We are pretending our response is a type of ABFieldList. But our\n      // ABField objects no longer allow \".\" in our columnNames:\n      //    ( https://github.com/digi-serve/appbuilder_class_core/blob/212cf5fa1c1d5c959aa246c730582ed50809ee0f/dataFields/ABFieldCore.js#L262 )\n      // But our Process tasks really will be expecting it there so lets put\n      // it back:\n      listField.columnName = `${myID}.userFormResponse`;\n\n      return [\n         {\n            key: `${myID}.userFormResponse`,\n            label: `${this.label}->Response`,\n            field: listField,\n            object: null,\n         },\n      ];\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      if (key) {\n         var parts = key.split(\".\");\n         if (parts[0] == this.diagramID) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n         }\n      }\n      return null;\n   }\n};\n","/**\n * ABProcessTaskUserCore\n *\n * This defines the base User Task element that can be placed on a BPMN\n * diagram.  In our system, we will let the designer choose a sub class\n * to make active for this element.\n *\n * Currently a UserTask expects a human user to perform an action.  These\n * actions are in the possible forms:\n *  - confirm offline action\n *  - approve data\n *  - fill out a form\n *\n */\n\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskUserDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"user\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskUser\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskUserCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.user\";\n      super(attributes, process, AB, ABProcessTaskUserDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskUserDefaults;\n   }\n\n   static DiagramReplace() {\n      // taken from \"bpmn-js/lib/features/replace/ReplaceOptions\"\n      return {\n         label: \"User Task\",\n         actionName: \"replace-with-user-task\",\n         className: \"bpmn-icon-user\",\n         target: {\n            type: \"bpmn:UserTask\",\n         },\n      };\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // for testing:\n   //         var myState = this.myState(instance);\n   //         myState.status = \"completed\";\n   //         this.log(instance, \"Email Sent successfully\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         roles: [],\n         ui: null,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABProcessTaskUserExternalDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [\"userFormID\", \"userFormResponse\"],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"External\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"who\", \"toUsers\", \"url\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nconst settings = {\n   who: 0,\n   toUsers: null,\n   url: \"\",\n};\n\nmodule.exports = class ABProcessTaskUserExternalCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      for (const key in settings)\n         attributes[key] = attributes[key] ?? settings[key];\n      super(\n         Object.assign(\n            {\n               type: \"process.task.service.external\",\n            },\n            attributes\n         ),\n         process,\n         AB,\n         ABProcessTaskUserExternalDefaults\n      );\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskUserExternalDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return [\n         {\n            key: `${this.id}.userFormResponse`,\n            label: `${this.label}->Response`,\n         },\n      ];\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABProcessTaskUserFormDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"form\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [\"\"],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"Form\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"formBuilder\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nconst settings = {};\n\nmodule.exports = class ABProcessTaskUserFormCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      for (const key in settings)\n         attributes[key] = attributes[key] ?? settings[key];\n      super(\n         Object.assign(\n            {\n               type: \"process.task.service.form\",\n            },\n            attributes\n         ),\n         process,\n         AB,\n         ABProcessTaskUserFormDefaults\n      );\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskUserFormDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return (this.formBuilder?.components ?? [])\n         .filter((comp) => comp.type != \"button\")\n         .map((comp) => {\n            return {\n               key: comp.key,\n               label: `${this.label}->${comp.label}`,\n            };\n         });\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      if (!key) return null;\n\n      const myState = this.myState(instance);\n\n      return myState[key];\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTriggerDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"key\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"Trigger\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTriggerCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"trigger\";\n      super(attributes, process, AB, ABProcessTriggerDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTriggerDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Signal Start Event\",\n         actionName: \"replace-with-signal-start\",\n         className: \"bpmn-icon-start-event-signal\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"bpmn:SignalEventDefinition\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.triggerKey = attributes.triggerKey || \"triggerKey.??\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.triggerKey = this.triggerKey;\n\n      return data;\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTrigger = require(\"../../../platform/process/tasks/ABProcessTrigger.js\");\n\nvar ABProcessTaskTriggerLifecycleDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"objectID\",\n      \"lifecycleKey\" /* , \"triggerKey\" is tracked in ABProcessTrigger */,\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"key\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"TriggerLifecycle\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTriggerLifecycle extends ABProcessTrigger {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"trigger\";\n      super(attributes, process, AB, ABProcessTaskTriggerLifecycleDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskTriggerLifecycleDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Object Lifecycle Trigger\",\n         actionName: \"replace-with-signal-lifecycle-start\",\n         // type: {string} a unique key to reference this element\n         className: \"bpmn-icon-start-event-signal\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"ab:SignalLifecycle\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.objectID = attributes.objectID || \"objID.??\";\n      this.lifecycleKey = attributes.lifecycleKey || \"lifecycle.key??\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.objectID = this.objectID;\n      data.lifecycleKey = this.lifecycleKey;\n      return data;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      var fields = null;\n      if (this.objectID) {\n         fields = [];\n         var object = this.AB.objectByID(this.objectID);\n         if (object) {\n            var myID = this.diagramID;\n            object.fields().forEach((field) => {\n               fields.push({\n                  key: `${myID}.${field.id}`,\n                  label: `${this.label}->${object.label}->${field.label}`,\n                  field,\n                  object,\n               });\n            });\n            fields.push({\n               key: `${myID}.uuid`,\n               label: `${this.label}->${object.label}`,\n               field: null,\n               object,\n            });\n         } else {\n            // OK, so we have an this.objectID defined, but we can't find it.\n            // that's something we need to alert:\n            var error = new Error(\n               `ABProcessTriggerLifecycleCore.processDataFields():TaskID[${this.id}]: could not find referenced object by ID [${this.objectID}]`\n            );\n            this.AB.notify.builder(error, {\n               task: this.id,\n               objID: this.objectID,\n            });\n         }\n      }\n      return fields;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      var parts = key.split(\".\");\n      if (parts[0] == this.diagramID) {\n         var myState = this.myState(instance);\n         if (myState[\"data\"]) {\n            var object = this.AB.objectByID(this.objectID);\n            var field = object.fields((f) => {\n               return f.id == parts[1];\n            })[0];\n            if (field) {\n               if (parts[2]) {\n                  return field[parts[2]].call(field, myState[\"data\"]);\n               } else {\n                  // instance.context.data[field.column_name];\n                  // if field is \"calculate\" or \"TextFormula\" data is not stored\n                  // in data base and we need to run format method\n                  if ([\"calculate\", \"TextFormula\"].indexOf(field.key) != -1) {\n                     return field.format(myState[\"data\"]);\n                  } else if (\n                     field.key == \"connectObject\" ||\n                     field.key == \"user\"\n                  ) {\n                     return (\n                        myState[\"data\"][field.relationName()] ||\n                        myState[\"data\"][field.columnName]\n                     );\n                  } else {\n                     return myState[\"data\"][field.columnName];\n                  }\n               }\n            } else if (parts[1] == \"uuid\") {\n               return myState[\"data\"][\"uuid\"];\n            } else {\n               ///\n               /// Questioning the validity of this section of code.\n               /// In order to get here, we tried to find field, and it\n               /// didn't exist.\n               /// then we turn around and REPEAT the same attempt\n               /// and check for field again.\n               /*\n               // parts[1] should be a field.id\n               object = this.AB.objectByID(this.objectID);\n               field = object.fields((f) => {\n                  return f.id == parts[1];\n               })[0];\n               if (field) {\n                  if (parts[2]) {\n                     return field[parts[2]].call(field, myState[\"data\"]);\n                  } else {\n                     // instance.context.data[field.column_name];\n                     return myState[\"data\"][field.columnName];\n                  }\n               }\n               */\n            }\n         }\n      }\n      return null;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that this element\n    * can provide to other ProcessElements.\n    * @return {array} | null\n    */\n   processDataObjects() {\n      var objects = null;\n      if (this.objectID) {\n         objects = [this.AB.objectByID(this.objectID)];\n      }\n      return objects;\n   }\n};\n","const ABProcessTrigger = require(\"../../../platform/process/tasks/ABProcessTrigger.js\");\n\nvar ABProcessTaskTriggerLifecycleDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"repeatEvery\",\n      \"repeatTime\",\n      \"repeatDaily\",\n      \"repeatWeekly\",\n      \"repeatMonthly\",\n      \"isEnabled\",\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"clock-o\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"TimerStartEvent\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   repeatEvery: \"daily\",\n   repeatTime: \"01:00\",\n   repeatDaily: \"day\",\n   repeatWeekly: \"FRI\",\n   repeatMonthly: \"last\",\n   isEnabled: true,\n};\n\nmodule.exports = class ABProcessTriggerTimer extends ABProcessTrigger {\n   constructor(attributes, process, application) {\n      attributes.type = attributes.type || \"trigger\";\n      super(\n         attributes,\n         process,\n         application,\n         ABProcessTaskTriggerLifecycleDefaults\n      );\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskTriggerLifecycleDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Timer Start Event\",\n         actionName: \"replace-with-signal-timer-start\",\n         // type: {string} a unique key to reference this element\n         className: \"bpmn-icon-start-event-timer\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"ab:SignalTriggerTimer\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.repeatEvery =\n         attributes.repeatEvery ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatEvery;\n\n      this.repeatDaily =\n         attributes.repeatDaily ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatDaily;\n\n      this.repeatWeekly =\n         attributes.repeatWeekly ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatWeekly;\n\n      this.repeatMonthly =\n         attributes.repeatMonthly ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatMonthly;\n\n      // Convert UTC to local time\n      if (attributes.repeatTime) {\n         let timeVals = attributes.repeatTime.split(\":\");\n         let currDate = new Date();\n         currDate.setUTCHours(timeVals[0]);\n         currDate.setUTCMinutes(timeVals[1]);\n         this.repeatTime = `${currDate.getHours()}:${currDate.getMinutes()}`;\n      } else {\n         this.repeatTime = ABProcessTaskTriggerLifecycleDefaults.repeatTime;\n      }\n\n      if (typeof attributes.isEnabled != \"undefined\") {\n         this.isEnabled = JSON.parse(attributes.isEnabled);\n      } else {\n         this.isEnabled = ABProcessTaskTriggerLifecycleDefaults.isEnabled;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.repeatEvery = this.repeatEvery;\n      data.repeatDaily = this.repeatDaily;\n      data.repeatWeekly = this.repeatWeekly;\n      data.repeatMonthly = this.repeatMonthly;\n\n      // Convert local time to UTC\n      data.repeatTime = this.repeatTime;\n      if (data.repeatTime && data.repeatTime instanceof Date) {\n         data.repeatTime = `${data.repeatTime.getUTCHours()}:${data.repeatTime.getMinutes()}`;\n      }\n\n      data.isEnabled = this.isEnabled;\n\n      return data;\n   }\n\n   getCronExpression() {\n      let timeVals = this.repeatTime.split(\":\");\n      let second = \"*\";\n      let minute = timeVals[1];\n      let hour = timeVals[0];\n      let day;\n      let month;\n      let dayWeek;\n      let year = \"*\";\n\n      switch (this.repeatEvery) {\n         case \"daily\":\n            day = \"*\";\n            month = \"*\";\n            dayWeek = this.repeatDaily == \"weekday\" ? \"1-5\" : \"*\";\n            break;\n         case \"weekly\":\n            day = \"*\";\n            month = \"*\";\n            dayWeek = this.repeatWeekly;\n            break;\n         case \"monthly\":\n            day = this.repeatMonthly;\n            month = \"*\";\n            dayWeek = \"*\";\n            break;\n      }\n\n      return `${second} ${minute} ${hour} ${day} ${month} ${dayWeek} ${year}`;\n   }\n};\n","/*\n * ABQL\n *\n * An ABQL defines the base class for our AB Query Language Objects.\n * These classes share a common way to\n *   - parse input strings for commands\n *\n *\n */\nvar ABEmitter = require(\"../../platform/ABEmitter\");\nclass ABQLCore extends ABEmitter {\n   constructor(attributes, parameterDefinitions, prevOP, task, AB) {\n      super();\n\n      // manage the incoming Parameter Definitions\n      if (!Array.isArray(parameterDefinitions)) {\n         parameterDefinitions = [parameterDefinitions];\n      }\n\n      this.parameterDefinitions = parameterDefinitions;\n\n      this.object = prevOP ? prevOP.object : null;\n      // {ABObject}\n      // The current {ABObject} the current Query Language Operation is associated\n      // with.\n\n      // if the previous Operation defined an .objectOut then our .object is THAT\n      // one.\n      if (prevOP && prevOP.objectOut) this.object = prevOP.objectOut;\n\n      this.prevOP = prevOP;\n      this.task = task;\n      // {ABProcessTaskxxx}\n      // This is running under a specific ABProcessTaskServiceQuery.  When\n      // searching for data from the Process, we must go through this.task\n      // to do so.\n\n      this.AB = AB;\n      this.next = null;\n\n      this.fromAttributes(attributes);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n   initObject(attributes) {}\n\n   fromAttributes(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n\n      // super.fromValues(attributes);\n      this.key = this.constructor.key ?? null;\n\n      // this.entryComplete = attributes.entryComplete || false;\n      this.params = attributes.params ?? {};\n      // {hash}\n      // The configuration values entered by the AppBuilder UI for this\n      // operation.\n\n      this.objectID = attributes.objectID || null;\n\n      // be sure to do a hard lookup if an objectID was saved:\n      if (this.objectID) this.object = this.objectLookup(this.objectID);\n\n      this.initObject(attributes);\n\n      // at least dump a warning here:\n      if (this.objectID && !this.object)\n         this.AB.notify.developer(\n            new Error(\n               `ABQLCore.fromAttributes(): unable to initialize ABObject [${this.objectID}]`\n            ),\n            {\n               attributes,\n               objectID: this.objectID,\n            }\n         );\n\n      if (attributes.next) {\n         let nextOP = null;\n\n         (this.NextQLOps ?? this.constructor.NextQLOps).forEach((OP) => {\n            if (OP.key === attributes.next.key) nextOP = OP;\n         });\n\n         if (nextOP) {\n            // exact match, so add next:\n            const qlOP = new nextOP(attributes.next, this, this.task, this.AB);\n\n            this.next = qlOP;\n         }\n      }\n   }\n\n   /**\n    * @method objectLookup()\n    * return a matching {ABObject} that is represented by the given id.\n    * NOTE: we will try to match on: our initial .objectID first, then\n    * the given objID.\n    * NOTE: this will match an object.id as well as object.label\n    * @param {string} objID\n    */\n   objectLookup(objID) {\n      return this.AB.objects((o) => {\n         const quotedLabel = `\"${o.label}\"`;\n\n         return (\n            // o.id === this.objectID ||\n            o.id === objID || quotedLabel.indexOf(objID) === 0\n         );\n      })[0];\n   }\n\n   /**\n    * @method availableProcessDataFieldsHash()\n    * return a { \"field.key\" => {processFieldDef} } hash of the currently\n    * available fields in the process.\n    * @return {obj}\n    */\n   availableProcessDataFieldsHash() {\n      const availableProcessDataFields =\n         this.task.process.processDataFields(this.task) ?? [];\n      const hashFieldIDs = {};\n\n      availableProcessDataFields.forEach((f) => {\n         if (f.field) {\n            hashFieldIDs[f.field.id] = f;\n         } else {\n            hashFieldIDs[f.key] = f;\n         }\n      });\n\n      return hashFieldIDs;\n   }\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {}\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABQL instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      const obj = {\n         key: this.constructor.key,\n         // entryComplete: this.entryComplete,\n         params: this.params,\n         // currQuery: this.currQuery,\n         // queryValid: this.queryValid,\n         objectID: this.object?.id ?? null,\n      };\n\n      if (this.next) {\n         obj.next = this.next.toObj();\n      }\n\n      return obj;\n   }\n}\n\nmodule.exports = ABQLCore;\n","/*\n * ABQLFindCore\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\nconst NextQLOps = require(\"./ABQLSet.js\");\n// {array} of {ABQLxxx} options\n// this is an array of what possible next Operations can come after an\n// ABQLFind task is complete.  In this case the {ABQLSet} operations come\n// next.  {ABQLSet} operations work on a Set|{Array} or data results.\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectConditions\",\n      name: \"cond\",\n   },\n];\n\nclass ABQLFindCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLFindCore.key = \"find\";\nABQLFindCore.label = \"find\";\nABQLFindCore.NextQLOps = NextQLOps;\n\nmodule.exports = ABQLFindCore;\n","/*\n * ABQLManagerCore\n *\n * An interface for managing the different ABQL Operations available in our\n * AppBuilder.\n *\n */\n\nconst QLObject = require(\"../../platform/ql/ABQLRootObject.js\");\nconst QLOps = [QLObject];\n\nconst ABQLManagerCore = {\n   /**\n    * @method fromAttributes()\n    * return an {ABQL} object that represents the given attributes that\n    * were saved from the previous .toObj()\n    * @param {object} attributes\n    *\t\t  the values returned from the previous .toObj() call\n    * @param {ABProcessTask***} task\n    *\t\t  the current ABProcessTaskServiceQuery that contains this QL\n    * @param {ABFactory} AB\n    *\t\t  the current ABFactory we are operating under.\n    * @return {ABQL} | null\n    */\n   fromAttributes: function (attributes, task, AB) {\n      if (!attributes) return null;\n\n      const matchingOPs = [];\n\n      ABQLManagerCore.QLOps.forEach((Op) => {\n         if (Op.key === attributes.key) matchingOPs.push(Op);\n      });\n\n      if (matchingOPs.length === 1) {\n         // let this Operation initialize and return the last OP\n         // in the chain\n         const qlOP = new matchingOPs[0](attributes, task, AB);\n\n         return qlOP;\n      } else return null;\n   },\n\n   /**\n    * @array QLOps\n    * An array of the root QL Operations.\n    */\n   QLOps: QLOps,\n};\nmodule.exports = ABQLManagerCore;\n","/*\n * ABQLRootObjectCore\n *\n * An ABQL defines a Query Language Operation. A QL Operation\n * is intended to be evaluated at run time and return a value that can be\n * assigned to form value or an object.\n *\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n\n// Define the Operations that can be performed off of a RootObject.\n// Each Root Object might have a different set of Operations, so we\n// define them here.\nconst QLFind = require(\"../../platform/ql/ABQLFind.js\");\nconst NextQLOps = [QLFind];\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectName\",\n      name: \"name\",\n   },\n];\n\nclass ABQLObjectCore extends ABQL {\n   constructor(attributes, task, AB) {\n      // NOTE: keep this so we can insert the prevOp == null\n      super(attributes, ParameterDefinitions, null, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n   initObject(/* attributes */) {\n      if (!this.object && this.params) {\n         const objNameDef = this.parameterDefinitions.find((pDef) => {\n            return pDef.type === \"objectName\";\n         });\n\n         if (objNameDef) {\n            this.objectID = this.params[objNameDef.name];\n            this.object = this.objectLookup(this.objectID);\n         }\n\n         if (!this.object) {\n            // This function exists on platform_web but not platform_service\n            this.warningMessage?.(\"has no object set.\", {\n               objectID: this.objectID,\n            });\n         }\n      }\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      // if we don't have an objectID, but we have an objectName parameter\n      // definition then save that as our objectID\n      if (!obj.objectID && this.params) {\n         const objNameDef = this.parameterDefinitions.find((pDef) => {\n            return pDef.type === \"objectName\";\n         });\n\n         if (objNameDef) obj.objectID = this.params[objNameDef.name];\n      }\n\n      return obj;\n   }\n}\n\nABQLObjectCore.key = \"object\";\nABQLObjectCore.label = \"object\";\nABQLObjectCore.NextQLOps = NextQLOps;\n\nmodule.exports = ABQLObjectCore;\n","/*\n * ABQLRow\n *\n * Defines all the QL operations that can be performed on a Row of data. This is a\n * Single row/instance of an object.\n *\n */\n\nconst QLUpdate = require(\"../../platform/ql/ABQLRowUpdate.js\");\nconst QLSave = require(\"../../platform/ql/ABQLRowSave\");\nconst QLPluck = require(\"../../platform/ql/ABQLRowPluck\");\n\nmodule.exports = [QLUpdate, QLSave, QLPluck];\n","/*\n/*\n * ABQLRowPluckCore\n *\n * An ABQLRowPluckCore can process a value of data and puck out a specified\n * field to then make an object of values that only contain that field.\n *\n */\n\n// const ABQLValue = require(\"./ABQLValue.js\");\n// const ABQLSet = require(\"./ABQLSet.js\");\nconst ABQLSetPluck = require(\"../../platform/ql/ABQLSetPluck.js\");\nconst ABQLRowUpdate = require(\"../../platform/ql/ABQLRowUpdate.js\");\nconst ABQLRowSave = require(\"../../platform/ql/ABQLRowSave.js\");\n\nclass ABQLRowPluckCore extends ABQLSetPluck {\n   // Dynamic NextQLOps\n   get NextQLOps() {\n      let nextQLOps = [];\n\n      const field = this.field ?? this.object.fieldByID(this.fieldID) ?? null;\n\n      // Update .NextQLOps WARN: update to static it affects to every ABQLRowPluck instances.\n      switch (field?.key) {\n         // M:1 M:N connect field, then set ABQLSet to next steps\n         case \"connectObject\":\n            if (field.settings.linkType === \"many\") {\n               // NOTE: Could not require(\"./ABQLSet.js\") on the top. It returns an empty object. Why ><\n               const ABQLSet = require(\"./ABQLSet.js\");\n\n               nextQLOps = ABQLSet;\n\n               break;\n            }\n\n            // return ABQLRow.js\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) =>\n                  NextQLOp.key === this.constructor.key ||\n                  NextQLOp.key === ABQLRowUpdate.key\n            );\n\n            break;\n\n         case \"user\":\n            // TODO set this up corectlys\n            if (\n               field.settings.linkType === \"many\" ||\n               field.settings.isMultiple // may be unnessicary\n            ) {\n               // NOTE: Could not require(\"./ABQLSet.js\") on the top. It returns an empty object. Why ><\n               const ABQLSet = require(\"./ABQLSet.js\");\n\n               nextQLOps = ABQLSet;\n\n               break;\n            }\n\n            // default\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) =>\n                  NextQLOp.key === this.constructor.key ||\n                  NextQLOp.key === ABQLRowUpdate.key ||\n                  NextQLOp.key === ABQLRowSave.key\n            );\n\n            break;\n\n         default:\n            // Normal field and _PK\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) => NextQLOp.key === ABQLRowSave.key\n            );\n\n            break;\n      }\n\n      return nextQLOps;\n   }\n}\n\nABQLRowPluckCore.key = \"row_pluck\";\nABQLRowPluckCore.label = \"Read the value from the field\";\nABQLRowPluckCore.NextQLOps = []; // Static NextQLOps\n\nmodule.exports = ABQLRowPluckCore;\n","/*\n/*\n * ABQLRowSaveCore\n *\n * An ABQLRowSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLSetSave = require(\"../../platform/ql/ABQLSetSave.js\");\n\nclass ABQLRowSaveCore extends ABQLSetSave {}\n\nABQLRowSaveCore.key = \"row_save\";\nABQLRowSaveCore.label = \"Save the value as\";\nABQLRowSaveCore.NextQLOps = [];\n// NOTE: currently, this is an ending step. but it doesn't have to be...\n\nmodule.exports = ABQLRowSaveCore;\n","/*\n * ABQLRowUpdateCore\n *\n * An ABQLRow Update allows you to update the values on the current\n * Row of data.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n// const ABQLRow = require(\"./ABQLRow.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectValues\",\n      name: \"values\",\n   },\n];\n\nclass ABQLRowUpdateCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = prevOP.constructor.NextQLOps;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLRowUpdateCore.key = \"update\";\nABQLRowUpdateCore.label = \"Update this record\";\nABQLRowUpdateCore.NextQLOps = [];\n// NOTE: .NextQLOps => see the #Hack in the constructor\n\nmodule.exports = ABQLRowUpdateCore;\n","/*\n * ABQLSet\n *\n * Here we define the group of operations that can be performed on a SET of data.\n * A SET is an array of objects/row data.\n *\n */\n\nmodule.exports = [\n   require(\"../../platform/ql/ABQLSetFirst.js\"),\n   require(\"../../platform/ql/ABQLSetPluck.js\"),\n   require(\"../../platform/ql/ABQLSetSave.js\"),\n];\n","/*\n/*\n * ABQLSetFirstCore\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\nconst ABQLRow = require(\"./ABQLRow.js\");\n// {array} of {ABQLxxx} options\n// this is an array of what possible next Operations can come after an\n// ABQLSetFirst task is complete.  In this case the {ABQLRow} operations come\n// next.  {ABQLRow} operations work on a single row of data.\n\nclass ABQLSetFirstCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, [], prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLSetFirstCore.key = \"first\";\nABQLSetFirstCore.label = \"Select the first record\";\nABQLSetFirstCore.NextQLOps = ABQLRow;\n\nmodule.exports = ABQLSetFirstCore;\n","/*\n/*\n * ABQLSetPluckCore\n *\n * An ABQLSetPluck can process a set (array) of data and puck out a specified\n * field to then make an array of values that only contain that field.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n// const ABQLSet = require(\"./ABQLSet.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectFields\",\n      name: \"fieldID\",\n   },\n];\n\nclass ABQLSetPluckCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromAttributes(attributes) {\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = this.prevOP.constructor.NextQLOps;\n\n      // we need to gather our .field and .objectOut before we\n      // allow our base class to continue forward:\n\n      this.fieldID = attributes.fieldID;\n      this.field = this.object?.fieldByID(this.fieldID);\n\n      //// TODO: figure out how to dynamically update the next row of options\n      //// based upon the current choice of field.\n      // // based upon the type of field, we now configure what next steps\n      // // are available.\n      // if (this.field) {\n      //    // if connected, then we can stay with same .NextQLOps\n      //    // so we can just leave what we did above.\n\n      //    // if a discreet value, then we need to remove SetPluck\n      //    if (!this.field.isConnection) {\n      //       this.constructor.NextQLOps = [\n      //          ...this.prevOP.constructor.NextQLOps,\n      //       ].filter((o) => o.key != this.constructor.key);\n      //    }\n      // }\n\n      if (attributes.objectOutID)\n         this.objectOut = this.objectLookup(attributes.objectOutID);\n\n      super.fromAttributes(attributes);\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.fieldID) {\n         obj.fieldID = this.fieldID;\n\n         if (this.objectOut) obj.objectOutID = this.objectOut.id;\n      } else {\n         obj.fieldID = this.params.field || null;\n\n         const field = this.object.fieldByID(obj.fieldID);\n\n         if (field?.isConnection) obj.objectOutID = field.datasourceLink.id;\n      }\n\n      return obj;\n   }\n}\n\nABQLSetPluckCore.key = \"set_pluck\";\nABQLSetPluckCore.label = \"Read the value from the field\";\nABQLSetPluckCore.NextQLOps = [];\n\nmodule.exports = ABQLSetPluckCore;\n","/*\n/*\n * ABQLSetSaveCore\n *\n * An ABQLSetSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"taskParam\",\n      name: \"task_param\",\n   },\n];\n\nclass ABQLSetSaveCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n\n      // TODO: register with the task that we can provide data.\n      if (this.taskParam) {\n         task.registerDatasource(this);\n         this.registered = true;\n      }\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromAttributes(attributes) {\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = this.prevOP.constructor.NextQLOps;\n\n      super.fromAttributes(attributes);\n\n      this.taskParam = attributes.taskParam || this.params.task_param;\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      obj.taskParam = this.taskParam || this.params.task_param;\n\n      return obj;\n   }\n\n   processDataField(id, label) {\n      // we have to report back on:\n      // key:  id.taskParam\n      // label: label->taskParam\n      // object: ABObject\n      // field: ABField\n      // set : {bool}\n\n      let field = null;\n      // {ABField}\n      // if the value being stored is NOT a connectObject, then it is\n      // a particular field in the previous object.\n\n      // if we are saving a specific field of an Object, pass that\n      // ABField along:\n      if (this.prevOP?.field?.key !== \"connectObject\")\n         field = this?.prevOP?.field;\n\n      return {\n         key: `${id}.${this.taskParam || this.params.task_param}`,\n         label: `${label}->${this.taskParam || this.params.task_param}`,\n         field: field,\n         object: this.object,\n         set: true,\n      };\n   }\n}\n\nABQLSetSaveCore.key = \"set_save\";\nABQLSetSaveCore.label = \"Save the value as\";\nABQLSetSaveCore.NextQLOps = [];\n// NOTE: currently, this is an ending step. but it doesn't have to be...\n\nmodule.exports = ABQLSetSaveCore;\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCSVExporterDefaults = {\n   key: \"csvExporter\", // unique key identifier for this ABViewForm\n   icon: \"download\", // icon reference: (without 'fa-' )\n   labelKey: \"CSV Exporter\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewCSVExporterPropertyComponentDefaults = {\n   dataviewID: null,\n   where: null,\n   buttonLabel: \"Export CSV\",\n   filename: \"exportCSV\",\n   hasHeader: true,\n   width: 150,\n   hiddenFieldIds: [],\n};\n\nmodule.exports = class ABViewCSVExporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewCSVExporterDefaults\n      );\n   }\n\n   static common() {\n      return ABViewCSVExporterDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCSVExporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert to boolean\n      if (typeof values.settings.hasHeader == \"string\")\n         this.settings.hasHeader = JSON.parse(values.settings.hasHeader);\n\n      if (this.settings.hasHeader == null)\n         this.settings.hasHeader =\n            ABViewCSVExporterPropertyComponentDefaults.hasHeader;\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         values.settings.width ||\n            ABViewCSVExporterPropertyComponentDefaults.width\n      );\n\n      this.settings.hiddenFieldIds =\n         values.settings.hiddenFieldIds ||\n         ABViewCSVExporterPropertyComponentDefaults.hiddenFieldIds;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\n\nconst ABViewCSVImporterDefaults = {\n   key: \"csvImporter\",\n   // {string}\n   // unique key identifier for this ABViewForm\n\n   icon: \"upload\",\n   // {string}\n   // font-awesome icon reference: (without 'fa-' )\n\n   labelKey: \"CSV Importer\",\n   // {string}\n   // the multilingual label key for the class label\n   // NOTE: will be used as L(labelKey)\n};\n\nconst ABViewCSVImporterPropertyComponentDefaults = {\n   dataviewID: null,\n   // {uuid}\n   // The ABDataCollection.uuid that we are using to store the data.\n   // NOTE: we actually use the DC to get the ABObject it is connected to.\n\n   availableFieldIds: [],\n   //{array}\n   // A list of ABField.ids that are allowed to be imported using this widget.\n\n   buttonLabel: \"Upload CSV\",\n   // {string}\n   // The Label(key) to display on the initial button\n\n   width: 0,\n   // {integer}\n   // Width of the Popup.\n\n   recordRules: [],\n   // {array}  [ {RecordRule}, ... ]\n   // A list of ABViewRuleListFormRecordRules that should be performed upon\n   // each row of data imported.\n   // The Array should look like:\n   // [{\n   //    action: {string},\n   //    when: [\n   //       {\n   //          fieldId: {UUID},\n   //          comparer: {string},\n   //          value: {string}\n   //       }\n   //    ],\n   //    values: [\n   //       {\n   //          fieldId: {UUID},\n   //          value: {object}\n   //       }\n   //    ]\n   // }]\n};\n\nmodule.exports = class ABViewCSVImporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewCSVImporterDefaults\n      );\n   }\n\n   /**\n    * @method common()\n    * Provides the default settings for an instance of an ABViewCSVImporter\n    * @return {json}\n    */\n   static common() {\n      return ABViewCSVImporterDefaults;\n   }\n\n   /**\n    * @method defaultValues()\n    * Provides the default settings for an instance of an ABViewCSVImporter\n    * Component that is displayed on the UI.\n    * @return {json}\n    */\n   static defaultValues() {\n      return ABViewCSVImporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewCSVImporterPropertyComponentDefaults.width\n      );\n   }\n\n   get RecordRule() {\n      let object = this.datacollection?.datasource;\n      if (!object) return null;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   doRecordRulesPre(rowDatas) {\n      if (rowDatas && !Array.isArray(rowDatas)) {\n         rowDatas = [rowDatas];\n      }\n\n      rowDatas.forEach((row) => {\n         this.RecordRule?.processPre({ data: row.data || row, form: this });\n      });\n   }\n\n   doRecordRules(rowDatas) {\n      if (rowDatas && !Array.isArray(rowDatas)) {\n         rowDatas = [rowDatas];\n      }\n\n      if (!this.RecordRule) return Promise.resolve();\n\n      let tasks = [];\n\n      rowDatas.forEach((row) => {\n         tasks.push(\n            this.RecordRule.process({ data: row.data || row, form: this })\n         );\n      });\n\n      return Promise.all(tasks);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCarouselPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid\n\n   width: 460,\n   height: 275,\n   showLabel: true,\n   hideItem: false,\n   hideButton: false,\n   navigationType: \"corner\", // \"corner\" || \"side\"\n   filterByCursor: false,\n\n   detailsPage: null, // uuid\n   detailsTab: null, // uuid\n   editPage: null, // uuid\n   editTab: null, // uuid\n};\n\nconst ABViewDefaults = {\n   key: \"carousel\", // {string} unique key for this view\n   icon: \"clone\", // {string} fa-[icon] reference for this view\n   labelKey: \"Carousel\", // {string} the multilingual label key for the class label\n};\n\nfunction parseIntOrDefault(_this, key) {\n   if (typeof _this.settings[key] != \"undefined\") {\n      _this.settings[key] = parseInt(_this.settings[key]);\n   } else {\n      _this.settings[key] = ABViewCarouselPropertyComponentDefaults[key];\n   }\n}\n\nfunction parseOrDefault(_this, key) {\n   try {\n      _this.settings[key] = JSON.parse(_this.settings[key]);\n   } catch (e) {\n      _this.settings[key] = ABViewCarouselPropertyComponentDefaults[key];\n   }\n}\n\nmodule.exports = class ABViewCarouselCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCarouselPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      parseIntOrDefault(this, \"width\");\n      parseIntOrDefault(this, \"height\");\n\n      // json\n      parseOrDefault(this, \"showLabel\");\n      parseOrDefault(this, \"hideItem\");\n      parseOrDefault(this, \"hideButton\");\n\n      this.settings.navigationType =\n         this.settings.navigationType ||\n         ABViewCarouselPropertyComponentDefaults.navigationType;\n\n      parseOrDefault(this, \"filterByCursor\");\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   get imageField() {\n      let dc = this.datacollection;\n      if (!dc) return null;\n\n      let obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.field);\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartAreaPropertyComponentDefaults = {\n   areaType: \"area\",\n   isLegend: 1,\n   // chartWidth: 600,\n   chartHeight: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"area\", // {string} unique key for this view\n   icon: \"area-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Area\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartAreaCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartAreaPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.areaType =\n         this.settings.areaType ||\n         ABViewChartAreaPropertyComponentDefaults.areaType;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartAreaPropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartAreaPropertyComponentDefaults.chartWidth);\n      this.settings.chartHeight = parseInt(\n         this.settings.chartHeight ??\n            ABViewChartAreaPropertyComponentDefaults.chartHeight\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartAreaPropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartAreaPropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartAreaPropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"areaLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartBarPropertyComponentDefaults = {\n   barType: \"bar\",\n   barPreset: \"column\",\n   isLegend: 1,\n   // chartWidth: 600,\n   height: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"bar\", // {string} unique key for this view\n   icon: \"bar-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Bar\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartBarCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartBarPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.barType =\n         this.settings.barType ||\n         ABViewChartBarPropertyComponentDefaults.barType;\n\n      this.settings.barPreset =\n         this.settings.barPreset ||\n         ABViewChartBarPropertyComponentDefaults.barPreset;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartBarPropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartBarPropertyComponentDefaults.chartWidth);\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartBarPropertyComponentDefaults.height\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartBarPropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartBarPropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartBarPropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"barLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewChartPropertyComponentDefaults = {\n   dataviewID: \"\",\n   columnValue: \"\",\n   columnLabel: \"\",\n   columnValue2: \"\",\n   isPercentage: 1,\n   showLabel: 1,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   multipleSeries: 0,\n};\n\nconst ABViewChartDefaults = {\n   key: \"chart\", // {string} unique key for this view\n   icon: \"bar-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Chart\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewChartDefaults);\n   }\n\n   static common() {\n      return ABViewChartDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.dataviewID =\n         this.settings.dataviewID ??\n         ABViewChartPropertyComponentDefaults.dataviewID;\n\n      this.settings.columnValue =\n         this.settings.columnValue ??\n         ABViewChartPropertyComponentDefaults.columnValue;\n\n      this.settings.columnLabel =\n         this.settings.columnLabel ??\n         ABViewChartPropertyComponentDefaults.columnLabel;\n\n      this.settings.columnValue2 =\n         this.settings.columnValue2 ??\n         ABViewChartPropertyComponentDefaults.columnValue2;\n\n      this.settings.isPercentage = parseInt(\n         this.settings.isPercentage ??\n            ABViewChartPropertyComponentDefaults.isPercentage\n      );\n\n      this.settings.showLabel = parseInt(\n         this.settings.showLabel ??\n            ABViewChartPropertyComponentDefaults.showLabel\n      );\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewChartPropertyComponentDefaults.labelPosition;\n\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth ??\n            ABViewChartPropertyComponentDefaults.labelWidth\n      );\n\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartPropertyComponentDefaults.height\n      );\n\n      this.settings.multipleSeries = parseInt(\n         this.settings.multipleSeries ??\n            ABViewChartPropertyComponentDefaults.multipleSeries\n      );\n\n      this.translate(this, this, [\"chartLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      const viewsToAllow = [\"label\", \"pie\", \"bar\", \"line\", \"area\"];\n      return this.application.viewAll((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   labelField() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnLabel);\n   }\n\n   valueField() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnValue);\n   }\n\n   valueField2() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnValue2);\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartLinePropertyComponentDefaults = {\n   lineType: \"line\",\n   linePreset: \"plot\",\n   isLegend: 1,\n   // chartWidth: 600,\n   chartHeight: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"line\", // {string} unique key for this view\n   icon: \"line-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Line\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartLineCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartLinePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.lineType =\n         this.settings.lineType ||\n         ABViewChartLinePropertyComponentDefaults.lineType;\n\n      this.settings.linePreset =\n         this.settings.linePreset ||\n         ABViewChartLinePropertyComponentDefaults.linePreset;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartLinePropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartLinePropertyComponentDefaults.chartWidth);\n      this.settings.chartHeight = parseInt(\n         this.settings.chartHeight ??\n            ABViewChartLinePropertyComponentDefaults.chartHeight\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartLinePropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartLinePropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartLinePropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"lineLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartPiePropertyComponentDefaults = {\n   pieType: \"pie\",\n   isLegend: 1,\n   // chartWidth: 600,\n   height: 200,\n   innerFontSize: 12,\n   labelFontSize: 12,\n};\n\nconst ABViewDefaults = {\n   key: \"pie\", // {string} unique key for this view\n   icon: \"pie-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Pie\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartPieCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartPiePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.pieType =\n         this.settings.pieType ||\n         ABViewChartPiePropertyComponentDefaults.pieType;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartPiePropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartPiePropertyComponentDefaults.chartWidth);\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartPiePropertyComponentDefaults.height\n      );\n\n      this.settings.innerFontSize = parseInt(\n         this.settings.innerFontSize ??\n            ABViewChartPiePropertyComponentDefaults.innerFontSize\n      );\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartPiePropertyComponentDefaults.labelFontSize\n      );\n\n      this.translate(this, this, [\"pieLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCommentPropertyComponentDefaults = {\n   dataviewID: null,\n   columnUser: null,\n   columnComment: null,\n   columnDate: null,\n   height: 300,\n   label: \"\", // label is required and you can add more if the component needs them\n   // format:0  \t// 0 - normal, 1 - title, 2 - description\n};\n\nconst ABViewDefaults = {\n   key: \"comment\", // {string} unique key for this view\n   icon: \"comments\", // {string} fa-[icon] reference for this view\n   labelKey: \"Comment\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewCommentCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCommentPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      // this.settings.format = parseInt(this.settings.format);\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.height = parseInt(this.settings.height || 0);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   getCurrentUserId() {\n      const userObject = this.getUsers();\n      const currentUser = this.AB.Account.username();\n      //Anonymous User = 0\n\n      if (!userObject) return;\n\n      return userObject.findIndex((e) => e.value === currentUser) + 1;\n   }\n\n   getUsers() {\n      return this.AB.Account.userList().map((e) => {\n         return {\n            id: e.username,\n            value: e.username,\n            image: e.image_id,\n         };\n      });\n   }\n\n   getUserField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnUser);\n   }\n\n   getCommentField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnComment);\n   }\n\n   getDateField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnDate);\n   }\n\n   getUserData() {\n      let UserImageField = this.AB.objectUser().fieldByID(\n         \"6383ce19-b344-44ee-87e6-decced7361f8\"\n      );\n\n      var userObject = this.getUsers();\n      var userList = [];\n\n      if (!userObject) return;\n\n      userObject.forEach((item, index) => {\n         var imageURL = \"\";\n         if (item.image) {\n            imageURL = UserImageField.urlImage(item.image);\n         }\n         var user = { id: index + 1, value: item.value, image: imageURL };\n         userList.push(user);\n      });\n      return userList;\n   }\n\n   model() {\n      let dv = this.datacollection;\n      if (!dv) return null; // TODO: refactor in v2\n\n      // get ABModel\n      let model = dv.model; // already notified\n      if (!model) return null;\n\n      return model;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewPropertyDefaults = {\n   dataviewID: null,\n   filterConditions: {},\n};\n\nconst ABViewDefaults = {\n   key: \"conditionalcontainer\", // unique key identifier for this ABView\n   icon: \"shield\", // icon reference: (without 'fa-' )\n   labelKey: \"Conditional Container\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewConditionalContainerCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      const L = (...params) => this.AB.Multilingual.label(...params);\n\n      // the conditional container always has 'If' and 'Else' panels\n      if (this.views((v) => v instanceof ABViewContainer).length < 2) {\n         this._views = [];\n\n         // 'If' panel\n         const ifPanel = application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: L(\"If\"),\n               name: \"If\",\n               settings: {\n                  removable: false,\n               },\n            },\n            application,\n            this\n         );\n\n         this._views.push(ifPanel);\n\n         // 'Else' panel\n         const elsePanel = application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: L(\"Else\"),\n               name: \"Else\",\n               settings: {\n                  removable: false,\n               },\n            },\n            application,\n            this\n         );\n\n         this._views.push(elsePanel);\n      }\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * For a Conditional Container, we don't allow any other items to be placed on it.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewConnectDataFilterPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid\n};\n\nconst ABViewDefaults = {\n   key: \"connect-data-filter\", // {string} unique key for this view\n   icon: \"filter\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connected Data Filter\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewConnectDataFilterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewConnectDataFilterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","/*\n * ABViewContainerCore\n *\n * An ABViewContainerCore defines a UI display component.\n *\n * A container might have multiple columns of display info.\n *\n */\n\nconst ABView = require(\"../../platform/views/ABView\");\n\n// function L(key, altText) {\n// \treturn AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABViewDefaults = {\n   key: \"viewcontainer\", // {string} unique key for this view\n   icon: \"braille\", // {string} fa-[icon] reference for this view\n   labelKey: \"Container\", // {string} the multilingual label key for the class label\n};\n\nconst ABPropertyComponentDefaults = {\n   columns: 1,\n   gravity: 1,\n   movable: true,\n   removable: true,\n};\n\nmodule.exports = class ABViewContainerCore extends ABView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    * @param {obj} defaultValues special sub class defined default values.\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.columns = parseInt(\n         this.settings.columns || ABPropertyComponentDefaults.columns\n      );\n\n      if (typeof this.settings.gravity != \"undefined\") {\n         this.settings.gravity.map(function (gravity) {\n            return parseInt(gravity);\n         });\n      }\n\n      if (this.settings.removable != null) {\n         this.settings.removable = JSON.parse(this.settings.removable); // convert to boolean\n      } else {\n         this.settings.removable = ABPropertyComponentDefaults.removable;\n      }\n\n      if (this.settings.movable != null) {\n         this.settings.movable = JSON.parse(this.settings.movable); // convert to boolean\n      } else {\n         this.settings.movable = ABPropertyComponentDefaults.movable;\n      }\n   }\n\n   viewsSortByPosition() {\n      // Sort views from y, x positions\n      return this.views().sort((a, b) => {\n         if (a.position.y == b.position.y) return a.position.x - b.position.x;\n         else return a.position.y - b.position.y;\n      });\n   }\n\n   // saveReorder() {\n   //    return this.application.viewReorder(this);\n   // }\n};\n","/*\n * ABViewCore\n *\n * ABViewCore defines the common ABView structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABView classes.\n *\n */\n\nvar ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABViewDefaults = {\n   key: \"view\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.view\", // {string} the multilingual label key for the class label\n   tabicon: \"\", // no default tab icons\n};\n\nconst ABViewPropertyComponentDefaults = {\n   label: \"\",\n};\n\nmodule.exports = class ABViewCore extends ABMLClass {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super([\"label\"], application.AB);\n\n      this.__events = [];\n      // keep track of any event listeners attached to this ABView object\n\n      this.defaults = defaultValues || ABViewDefaults;\n\n      this.application = application;\n\n      this.parent = parent || null;\n\n      this.warningsSilent = false;\n      // {bool}\n      // Should we suppress our configuration warnings?\n\n      this.__missingViews = [];\n      // {array}\n      // Any ABView.id we have stored that we can't find.\n\n      this.fromValues(values);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyComponentDefaults;\n   }\n\n   /**\n    * @method newInstance()\n    * return a new instance of this ABView.  Most likely called from interfaces\n    * that create new UI elements like the ABDesigner.\n    * @param {ABApplication} application  \t: the root ABApplication this view is under\n    * @param {ABView/ABApplication} parent\t: the parent object of this ABView.\n    * @return {ABView}\n    */\n   static newInstance(application, parent) {\n      // return a new instance from ABViewManager:\n      return application.viewNew(\n         { key: this.common().key },\n         application,\n         parent\n      );\n   }\n\n   viewKey() {\n      return this.defaults.key;\n   }\n\n   viewIcon() {\n      return this.defaults.icon;\n   }\n\n   tabIcon() {\n      return this.defaults.tabicon;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABView instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // // NOTE: ensure we have a uuid() set:\n      // if (!this.id) {\n      //    this.id = this.application.uuid();\n      // }\n\n      // this.application.unTranslate(this, this, [\"label\"]);\n\n      // MLClass translation\n      var obj = super.toObj();\n\n      var result = {\n         id: this.id,\n         type: this.type || \"view\",\n         key: this.key,\n         icon: this.icon,\n         tabicon: this.tabicon,\n         name: this.name,\n         settings: this.AB.cloneDeep(this.settings || {}),\n         accessLevels: this.accessLevels,\n         translations: obj.translations,\n      };\n\n      // encode our child view references\n      result.viewIDs = (this._views || []).map((v) => v.id).filter((id) => id);\n      result.viewIDs = result.viewIDs.concat(this.__missingViews);\n\n      if (this.position) result.position = this.position;\n\n      // encode our .isRoot() reference.\n      // (NOTE: this is set so our server side code can distinguish) between a .view\n      // and a root page:\n      // NOTE: we intentionally do NOT pull this out in .fromValues()\n      result.isRoot = this.isRoot();\n\n      return result;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id; // NOTE: only exists after .save()\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = values.type || \"view\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.key = values.key || this.viewKey();\n      // {string} .key\n      // the unique lookup key for our ABViewManager to create new\n      // instances of this object.\n\n      this.icon = values.icon || this.viewIcon();\n      // {string} .icon\n      // the font awesome icon reference for showing an icon for this\n      // view in the AppBuilder interface builder.\n\n      this.tabicon = values.tabicon || this.tabIcon();\n\n      this.name = values.name;\n      // {string} .name\n      // A name reference for this ABView. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      values.settings = values.settings || {};\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.settings = values.settings || {};\n      // {obj} .settings\n      // the property settings for this ABView\n\n      // make sure .settings.height is an int and not a string\n      this.settings.height = parseInt(this.settings.height || 0);\n\n      this.accessLevels = values.accessLevels || {};\n      // {obj} .accessLevels\n      // Hash: { ABRole.id : accessLevel }\n      // tracks the Role -> AccessLevel settings of this particular\n      // view.\n      // accessLevel: 0 : no access, 1 : view only, 2: full access\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n\n      // If the View / DataCollection does not have a .name already,\n      // use the English label translation as the .name instead.\n      if (!this.name && Array.isArray(this.translations)) {\n         for (var i = 0; i < this.translations.length; i++) {\n            if (i == 0) {\n               // Use the first label found, in case there is no 'en'\n               this.name = this.translations[i].label;\n            }\n            if (this.translations[i].language_code == \"en\") {\n               // But the 'en' label will have final priority\n               this.name = this.translations[i].label;\n               break;\n            }\n         }\n      }\n\n      // default value for our label\n      if (this.label == \"?label?\") {\n         if (this.parent) {\n            this.label = this.parent.label + \".\" + this.defaults.key;\n         }\n      }\n\n      var views = [];\n      this.__missingViews = this.__missingViews || [];\n      (values.viewIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            views.push(this.application.viewNew(def, this.application, this));\n         } else {\n            this.__missingViews.push(id);\n         }\n      });\n      this._views = views;\n\n      // convert from \"0\" => 0\n      this.position = values.position || {};\n\n      if (this.position.x != null) this.position.x = parseInt(this.position.x);\n      if (this.position.y != null) this.position.y = parseInt(this.position.y);\n\n      this.position.dx = parseInt(this.position.dx || 1);\n      this.position.dy = parseInt(this.position.dy || 1);\n   }\n\n   isRoot() {\n      return this.parent == null || this.parent == this.application;\n   }\n\n   /**\n    * @method allParents()\n    * return a flattened array of all the ABViews parents\n    * @return {array}      array of ABViews\n    */\n   allParents() {\n      var parents = [];\n      var curView = this;\n\n      // add current view to array\n      parents.unshift(curView);\n\n      while (!curView.isRoot() && curView.parent) {\n         parents.unshift(curView.parent);\n\n         curView = curView.parent;\n      }\n\n      return parents;\n   }\n\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABViewPage is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   isAccessibleForRoles(roles) {\n      var foundRole = false;\n\n      var accessibleRoles = Object.keys(this.accessLevels) || [];\n      (roles || []).forEach((r) => {\n         if (accessibleRoles.indexOf(r.uuid || r) > -1) {\n            foundRole = true;\n         }\n      });\n\n      return foundRole;\n   }\n\n   /**\n    * @method getUserAccess()\n    *\n    * return the access level of the current user on the current view\n    *\n    * @return {integer}  // 0 = No Access // 1 = Read Only // 2 = Full Access\n    */\n   getUserAccess() {\n      // by default everyone has no access\n      var accessLevel = 0;\n\n      if (this.application.isAccessManaged) {\n         // check to see if the current users is the access manager\n         var isAccessManager = false;\n         // first check if manager is defined by their role\n         if (parseInt(this.application.accessManagers.useRole) == 1) {\n            // if so check if any of the user's role match the managers\n            this.AB.Account.roles().forEach((role) => {\n               if (\n                  this.application.accessManagers.role.indexOf(\n                     role.id || role.uuid\n                  ) > -1\n               ) {\n                  // if so set the access level to full access\n                  isAccessManager = true;\n                  accessLevel = 2;\n               }\n            });\n         }\n         // if the user isn't already set as the manager and the manager is defined by their account\n         if (\n            !isAccessManager &&\n            parseInt(this.application.accessManagers.useAccount) == 1\n         ) {\n            // check if the user's account matches the managers\n            if (\n               this.application.accessManagers.account.indexOf(\n                  this.AB.Account.uuid() + \"\"\n               ) > -1\n            ) {\n               // if so set the access level to full access\n               isAccessManager = true;\n               accessLevel = 2;\n            }\n         }\n\n         // if the user is not the manager check if the page has access levels defined for roles\n         if (\n            this.accessLevels &&\n            Object.keys(this.accessLevels).length > 0 &&\n            !isAccessManager\n         ) {\n            // check to see if the user's roles matches one of the roles defined\n            this.AB.Account.roles().forEach((role) => {\n               var currentRole = this.accessLevels[role.id || role.uuid];\n               if (currentRole && parseInt(currentRole) > accessLevel)\n                  // if the access level is higher than a previous role set to the new level\n                  accessLevel = parseInt(currentRole);\n            });\n         }\n      } else {\n         accessLevel = 2;\n      }\n\n      return accessLevel;\n   }\n\n   /**\n    * @method parentFormComponent\n    * return the closest form object this component is on.\n    */\n   parentFormComponent() {\n      var form = null;\n\n      var curr = this;\n      while (curr.key != \"form\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"form\") {\n         form = curr;\n      }\n\n      return form;\n   }\n\n   /**\n    * @method parentDetailComponent\n    * return the closest detail object that this component is on.\n    * @returns {ABViewDetail} detail component\n    */\n   parentDetailComponent() {\n      var detail = null;\n\n      var curr = this;\n      while (curr.key != \"detail\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"detail\") {\n         detail = curr;\n      }\n\n      return detail;\n   }\n\n   pageParent(filterFn) {\n      if (filterFn == null) filterFn = () => true;\n\n      // if current page is the root page, then return itself.\n      if (this.isRoot()) {\n         return this;\n      }\n\n      var parentPage = this.parent;\n      while (\n         parentPage &&\n         (parentPage.key != \"page\" || !filterFn(parentPage))\n      ) {\n         parentPage = parentPage.parent;\n      }\n\n      return parentPage;\n   }\n\n   pageRoot() {\n      var rootPage = this.pageParent();\n\n      while (!rootPage.isRoot()) {\n         rootPage = rootPage.pageParent();\n      }\n\n      return rootPage;\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this view.  This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this view object.\n    * @return {string}\n    */\n   urlPointer() {\n      if (this.parent) {\n         return this.parent.urlView() + this.id;\n      } else {\n         return this.application.urlPage() + this.id;\n      }\n   }\n\n   /**\n    * @method urlView\n    * return a string pointer to this object's views.\n    * @return {string}\n    */\n   urlView() {\n      return this.urlPointer() + \"/_views/\";\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    *\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) {\n         if (\n            [\"form\", \"grid\", \"line\", \"area\", \"bar\", \"gantt\", \"kanban\"].indexOf(\n               this.key\n            ) > -1\n         ) {\n            // NOTE: ignore kanban side forms where this is the case:\n            if (this.key == \"form\" && this._currentObject) return null;\n\n            if (this.warningsSilent) return null;\n\n            var errNoDCID = new Error(\n               `ABViewCore:get datacollection(): View[${this.key}] didn't define a dataviewID.`\n            );\n            this.AB.notify.builder(errNoDCID, {\n               view: this,\n               settings: this.settings,\n            });\n         } else {\n            // These views shouldn't matter if they don't have a datacollection.\n            if (\n               [\"button\", \"label\", \"page\", \"tab\", \"viewcontainer\"].indexOf(\n                  this.key\n               ) == -1\n            ) {\n               console.warn(\n                  `TODO: figure out which ABView* require a .dataviewID: ${this.key}?`\n               );\n            }\n         }\n         return null;\n      }\n\n      var dc = this.AB.datacollectionByID(dataviewID);\n      if (!dc) {\n         var errNoDC = new Error(\n            `View[${this.label}][${this.id}] is unable to find associated DataCollection`\n         );\n         this.AB.notify.builder(errNoDC, {\n            view: this,\n            dataviewID,\n         });\n      }\n      return dc;\n   }\n\n   ///\n   /// Update Access accessLevels\n   ///\n\n   /**\n    * @method updateAccessLevels()\n    *\n    *\n    * @param {string} roleId\n    *\n    * @param {string} accessLevel\n    *\n    * @return {Promise}\n    *\n    */\n   updateAccessLevels(roleId, accessLevel) {\n      if (parseInt(accessLevel) == 0) {\n         if (this.accessLevels[roleId]) delete this.accessLevels[roleId];\n      } else {\n         this.accessLevels[roleId] = accessLevel;\n      }\n\n      return this.save(false, false);\n   }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    *\n    * return an array of all the ABViews children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViews that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\n    *\n    * @return {array} \tarray of ABViews\n    */\n   views(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._views || this._views.length < 1) return result;\n\n      // find into recursively\n      if (filter && deep) {\n         result = result.concat(this._views.filter(filter));\n\n         this._views.forEach((v) => {\n            var subViews = v.views(filter, deep);\n            if (subViews && subViews.length > 0) {\n               result = result.concat(subViews);\n            }\n         });\n      } else {\n         result = this._views.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewNew()\n    *\n    *\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return this.application.viewNew(\n         values,\n         application || this.application,\n         parent || this\n      );\n   }\n\n   /**\n    * @method viewDestroy()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewDestroy(view) {\n      console.error(\"DEPRECIATED: where is this called?\");\n      return this.viewRemove(view);\n   }\n\n   /**\n    * @method viewRemove()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewRemove(view) {\n      var origLen = this._views.length;\n      this._views = this.views(function (v) {\n         return v.id != view.id;\n      });\n\n      if (this._views.length < origLen) {\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewInsert()\n    *\n    * persist the current ABView in our list of ._views.\n    *\n    * @param {ABView} object\n    * @return {Promise}\n    */\n   viewInsert(view) {\n      var isIncluded =\n         this.views(function (v) {\n            return v.id == view.id;\n         }).length > 0;\n      if (!isIncluded) {\n         this._views.push(view);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewReorder()\n    *\n    * reorder the current ABView in our list of ._views.\n    *\n    * @param {string} viewId - id of the active view\n    * @param {string} toPosition - 'to' postion\n    * @return {Promise}\n    */\n   viewReorder(viewId, toPosition) {\n      var from = this._views.findIndex((v) => v.id == viewId);\n      if (from < 0) return;\n\n      // move drag item to 'to' position\n      this._views.splice(toPosition, 0, this._views.splice(from, 1)[0]);\n\n      // save to database\n      return this.save(true);\n   }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // unsubscribe events\n      this.eventClear(true);\n\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABView\n            // be sure to remove any of it's ABViews as well\n            // This cleans out any dangling ABDefinitions\n\n            var allViewDeletes = [];\n            var allViews = this.views();\n            this._views = [];\n            // doing ._views = [] prevents any of my updates when\n            // a sub-view is .destroy()ed\n\n            allViews.forEach((v) => {\n               allViewDeletes.push(v.destroy());\n            });\n            return Promise.all(allViewDeletes);\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects\n            if (this.parent && !this.pages) {\n               return this.parent.viewRemove(this);\n            }\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABView\n    * @return {Promise}\n    *\t\t.resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects:\n            if (this.parent && !this.pages) {\n               // if we have a .parent, make sure we are included in our .parent's\n               // viewIDs\n               return this.parent.viewInsert(this);\n            }\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   ///\n   /// Events\n   ///\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    * \t\t\t\t\t\t\temitter: object,\n    * \t\t\t\t\t\t\teventName: string,\n    * \t\t\t\t\t\t\tlistener: function\n    * \t\t\t\t\t\t}\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      var exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    * @param {bool} deep - clear events of child views\n    */\n   eventClear(deep) {\n      if (deep) {\n         this.views().forEach((v) => {\n            v.eventClear(deep);\n         });\n      }\n\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   /**\n    * @method clone()\n    * clone the definitions of this ABView object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    * @return {obj}\n    *        obj defs of this ABView\n    */\n   clone(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pages\", \"views\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.viewNew(config, this.application, parent);\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // copy sub pages\n      if (this.pages && !options.ignoreSubPages) {\n         result._pages = [];\n         this.pages().forEach((p) => {\n            let copiedSubPage = p.clone(lookUpIds, result, options);\n            copiedSubPage.parent = result;\n\n            result._pages.push(copiedSubPage);\n         });\n      }\n\n      // copy sub views\n      if (this.views && !options.ignoreSubViews) {\n         result._views = [];\n         this.views().forEach((v) => {\n            let copiedView = v.clone(lookUpIds, result, options);\n\n            result._views.push(copiedView);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABView object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    *        options.newName {string}\n    *             new user determined name for page\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pageIDs\", \"viewIDs\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.application.viewNew(config, this.application, parent);\n\n      // keep the parent\n      result.parent = parent || this.parent;\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application.\n         // pages with null parent ids default to getting put on root\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // page's name should not be duplicate\n      if (this.key == \"page\") {\n         result.name =\n            options?.newName ||\n            `${result.name}_copied_${this.AB.uuid().slice(0, 3)}`;\n\n         result.label = options?.newName || `${result.label} (copied)`;\n      }\n\n      return Promise.resolve()\n         .then(() => {\n            // copy sub pages\n            var allSaves = [];\n\n            if (this._pages && !options.ignoreSubPages) {\n               result._pages = [];\n               this.pages().forEach((p) => {\n                  // this prevents result.save() from happening on each of these\n                  // p.copy():\n                  if (p.isRoot())\n                     this.application._pages.push({ id: lookUpIds[p.id] });\n\n                  allSaves.push(\n                     p\n                        .copy(lookUpIds, result, options)\n                        .then((copiedSubPage) => {\n                           copiedSubPage.parent = result;\n                           // remove the temp {id:} entry above:\n                           this.application._pages =\n                              this.application._pages.filter(\n                                 (p2) => p2.id != lookUpIds[p.id]\n                              );\n\n                           // now add the full copiedSubPage:\n                           result._pages.push(copiedSubPage);\n                        })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // copy sub views\n            var allSaves = [];\n\n            if (this._views && !options.ignoreSubViews) {\n               result._views = [];\n               this.views().forEach((v) => {\n                  allSaves.push(\n                     // send a null for parent, so that the .save() wont trigger\n                     // a save of the parent.\n                     v.copy(lookUpIds, result, options).then((copiedView) => {\n                        // now patch up the parent connection:\n                        // copiedView.parent = result;\n                        if (\n                           result._views.filter((vi) => vi.id == copiedView.id)\n                              .length < 1\n                        ) {\n                           result._views.push(copiedView);\n                        }\n                     })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // now we do 1 save for all the views\n            return result.save();\n         })\n         .then(() => {\n            return result;\n         });\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewDataFilterPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid,\n   viewType: \"advanced\",\n   showFilter: 1,\n   showSort: 1,\n};\n\nconst ABViewDefaults = {\n   key: \"data-filter\", // {string} unique key for this view\n   icon: \"filter\", // {string} fa-[icon] reference for this view\n   labelKey: \"Data Filter\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDataFilterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDataFilterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewDataSelectPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n};\n\nconst ABViewDefaults = {\n   key: \"data-select\", // {string} unique key for this view\n   icon: \"chevron-circle-down\", // {string} fa-[icon] reference for this view\n   labelKey: \"Data Select\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDataSelectCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDataSelectPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewDetail = require(\"../../platform/views/ABViewDetail\");\n\nconst ABViewDataviewPropertyComponentDefaults = {\n   xCount: 1, // {int} the number of columns per row (need at least one)\n   detailsPage: \"\",\n   detailsTab: \"\",\n   editPage: \"\",\n   editTab: \"\",\n};\n\nconst ABViewDataviewDefaults = {\n   key: \"dataview\", // {string} unique key for this view\n   icon: \"th\", // {string} fa-[icon] reference for this view\n   labelKey: \"Data view\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDataviewCore extends ABViewDetail {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewDataviewDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDataviewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDataviewPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.xCount = parseInt(\n         this.settings.xCount || ABViewDataviewPropertyComponentDefaults.xCount\n      );\n      this.settings.detailsPage =\n         this.settings.detailsPage ||\n         ABViewDataviewPropertyComponentDefaults.detailsPage;\n      this.settings.editPage =\n         this.settings.editPage ||\n         ABViewDataviewPropertyComponentDefaults.editPage;\n      this.settings.detailsTab =\n         this.settings.detailsTab ||\n         ABViewDataviewPropertyComponentDefaults.detailsTab;\n      this.settings.editTab =\n         this.settings.editTab ||\n         ABViewDataviewPropertyComponentDefaults.editTab;\n   }\n\n   parentDetailComponent() {\n      let dataview = null;\n\n      let curr = this;\n      while (curr.key != \"dataview\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"dataview\") {\n         dataview = curr;\n      }\n\n      return dataview;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailCheckboxPropertyComponentDefaults = {};\n\nconst ABViewDetailCheckboxDefaults = {\n   key: \"detailcheckbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailCheckboxCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailCheckboxPropertyComponentDefaults;\n   }\n};\n","// const ABViewDetailSelectivity = require(\"../../platform/views/ABViewDetailSelectivity\");\nconst ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n};\n\nconst ABViewDefaults = {\n   key: \"detailconnect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailConnectCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewDetailDefaults = {\n   key: \"detail\", // {string} unique key for this view\n   icon: \"file-text-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"Detail\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewDetailPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 0,\n};\n\nmodule.exports = class ABViewDetailCore extends ABViewContainer {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDetailDefaults);\n   }\n\n   static common() {\n      return ABViewDetailDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewDetailPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewDetailPropertyComponentDefaults.showLabel\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth ||\n            ABViewDetailPropertyComponentDefaults.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewDetailPropertyComponentDefaults.height\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      let viewsToAllow = [\"label\", \"text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   addFieldToDetail(field, yPosition) {\n      if (field == null) return;\n\n      let newView = field.detailComponent().newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings ?? {};\n      newView.settings.fieldId = field.id;\n      newView.settings.labelWidth =\n         this.settings.labelWidth ||\n         ABViewDetailPropertyComponentDefaults.labelWidth;\n\n      // keep alias to support Query that contains alias name\n      // [alias].[columnName]\n      newView.settings.alias = field.alias;\n\n      // TODO : Default settings\n\n      newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailCustomPropertyComponentDefaults = {};\n\nconst ABViewDetailCustomDefaults = {\n   key: \"detailcustom\", // {string} unique key for this view\n   icon: \"dot-circle-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.custom\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailCustomCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailCustomPropertyComponentDefaults;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailImagePropertyComponentDefaults = {\n   height: 80,\n   width: 120,\n};\n\nconst ABViewDetailImageDefaults = {\n   key: \"detailimage\", // {string} unique key for this view\n   icon: \"image\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.image\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailImageCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailImageDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailImageDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailImagePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height ||\n            ABViewDetailImagePropertyComponentDefaults.height\n      );\n      this.settings.width = parseInt(\n         this.settings.width ?? ABViewDetailImagePropertyComponentDefaults.width\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nmodule.exports = class ABViewDetailItemCore extends ABViewWidget {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   detailComponent() {\n      let detailView = null;\n\n      let curr = this;\n      while (\n         !curr.isRoot() &&\n         curr.parent &&\n         curr.key != \"detail\" &&\n         curr.key != \"dataview\"\n      ) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"detail\" || curr.key == \"dataview\") {\n         detailView = curr;\n      }\n\n      return detailView;\n   }\n\n   field() {\n      let detailComponent = this.detailComponent();\n      if (detailComponent == null) return null;\n\n      let datacollection = detailComponent.datacollection;\n      if (datacollection == null) return null;\n\n      let object = datacollection.datasource;\n      if (object == null) return null;\n\n      let field = object.fields((v) => v.id == this.settings.fieldId)[0];\n\n      // set .alias to support queries that contains alias name\n      // [aliasName].[columnName]\n      if (field && this.settings.alias) {\n         field.alias = this.settings.alias;\n      }\n\n      return field;\n   }\n\n   getCurrentData() {\n      let detailCom = this.detailComponent();\n      if (!detailCom) return null;\n\n      let dv = detailCom.datacollection;\n      if (!dv) return null;\n\n      let field = this.field();\n      if (!field) return null;\n\n      let currData = dv.getCursor();\n      if (currData) return currData[field.columnName];\n      else return null;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailTextPropertyComponentDefaults = {\n   height: 0,\n};\n\nconst ABViewDetailTextDefaults = {\n   key: \"detailtext\", // {string} unique key for this view\n   icon: \"etsy\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.text\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailTextCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailTextDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailTextDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailTextPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height ||\n            ABViewDetailTextPropertyComponentDefaults.height\n      );\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailPropertyComponentDefaults = {};\n\nconst ABViewDetailTreeDefaults = {\n   key: \"detailtree\", // {string} unique key for this view\n   icon: \"sitemap\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.tree\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailTextCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailTreeDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailTreeDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewDocxBuilderPropertyComponentDefaults = {\n   buttonlabel: \"Download DOCX\",\n   dataviewID: null,\n   width: 0,\n   filename: \"\", // uuid\n   filelabel: \"output.docx\",\n   language: \"en\", // en\n   toolbarBackground: \"ab-background-default\",\n   buttonPosition: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"docxBuilder\", // {string} unique key for this view\n   icon: \"file-word-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"DOCX Builder\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDocxBuilderCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDocxBuilderPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"filelabel\", \"buttonlabel\"]);\n\n      let obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewDocxBuilderPropertyComponentDefaults.width\n      );\n\n      this.translate(this, this, [\"filelabel\", \"buttonlabel\"]);\n   }\n\n   uploadUrl() {\n      // TODO: Convert this to use ABFactory.urlFileUpload() or a ABFieldFile\n      // to get the URL:\n\n      // support uploading template when more than one data source is selected\n      const object = this.datacollections[0].datasource;\n\n      // NOTE: file-upload API needs to have the id of ANY field.\n      const field = object ? object.fields()[0] : null;\n\n      return `/file/upload/${object?.id}/${field?.id}/1`;\n   }\n\n   downloadUrl() {\n      return `/file/${this.settings.filename}`;\n   }\n\n   get languageCode() {\n      return (\n         this.settings.language ||\n         ABViewDocxBuilderPropertyComponentDefaults.language\n      );\n   }\n\n   get datacollections() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) return [];\n\n      let dvList = dataviewID.split(\",\") || [];\n\n      return this.AB.datacollections((dv) => dvList.indexOf(dv.id) > -1) || [];\n   }\n};\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewFormButtonPropertyComponentDefaults = {\n   includeSave: true,\n   saveLabel: \"\",\n   includeCancel: false,\n   cancelLabel: \"\",\n   includeReset: false,\n   resetLabel: \"\",\n   includeDelete: false,\n   deleteLabel: \"\",\n   afterCancel: null,\n   alignment: \"right\",\n   isDefault: false, // mark default button of form widget\n};\n\nconst ABViewFormButtonDefaults = {\n   key: \"button\",\n   // {string} unique key for this view\n\n   icon: \"square\",\n   // {string} fa-[icon] reference for this view\n\n   labelKey: \"ab.components.button\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormButtonCore extends ABView {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormButtonDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormButtonDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormButtonPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   toObj() {\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      if (this.settings.deleteLabel) labels.push(\"deleteLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      let result = super.toObj();\n\n      return result;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      if (this.settings.deleteLabel) labels.push(\"deleteLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      this.settings.includeSave = JSON.parse(\n         (this.settings?.includeSave ?? true) &&\n            ABViewFormButtonPropertyComponentDefaults.includeSave\n      );\n      this.settings.includeCancel = JSON.parse(\n         this.settings.includeCancel ||\n            ABViewFormButtonPropertyComponentDefaults.includeCancel\n      );\n      this.settings.includeReset = JSON.parse(\n         this.settings.includeReset ||\n            ABViewFormButtonPropertyComponentDefaults.includeReset\n      );\n      this.settings.includeDelete = JSON.parse(\n         this.settings.includeDelete ||\n            ABViewFormButtonPropertyComponentDefaults.includeDelete\n      );\n\n      this.settings.isDefault = JSON.parse(\n         this.settings.isDefault ||\n            ABViewFormButtonPropertyComponentDefaults.isDefault\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormCheckboxPropertyComponentDefaults = {};\n\nconst ABViewFormCheckboxDefaults = {\n   key: \"checkbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormCheckboxCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCheckboxPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormConnectPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n   filterConditions: {\n      // array of filters to apply to the data table\n      glue: \"and\",\n      rules: [],\n   },\n   sortFields: [],\n   // objectWorkspace: {\n   //    filterConditions: {\n   //       // array of filters to apply to the data table\n   //       glue: \"and\",\n   //       rules: [],\n   //    },\n   // },\n   popupWidth: 700,\n   popupHeight: 450,\n};\n\nconst ABViewFormConnectDefaults = {\n   key: \"connect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormConnectCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormConnectDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormConnectDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormConnectPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.filterConditions =\n         this.settings.filterConditions ||\n         ABViewFormConnectPropertyComponentDefaults.filterConditions;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\nconst ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\nconst ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\nconst ABViewFormDefaults = {\n   key: \"form\", // unique key identifier for this ABViewForm\n   icon: \"list-alt\", // icon reference: (without 'fa-' )\n   labelKey: \"Form\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewFormPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   clearOnLoad: false,\n   clearOnSave: false,\n   displayRules: [],\n   editForm: \"none\", // The url pointer of ABViewForm\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalues: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tvalue: {object}\n   //\t\t\t}\n   //\t\t]\n   //\t}]\n   recordRules: [],\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalue: {string}\n   //\t}]\n   submitRules: [],\n};\n\nmodule.exports = class ABViewFormCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewFormDefaults);\n   }\n\n   static common() {\n      return ABViewFormDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewFormPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewFormPropertyComponentDefaults.showLabel\n      );\n      this.settings.clearOnLoad = JSON.parse(\n         this.settings.clearOnLoad != null\n            ? this.settings.clearOnLoad\n            : ABViewFormPropertyComponentDefaults.clearOnLoad\n      );\n      this.settings.clearOnSave = JSON.parse(\n         this.settings.clearOnSave != null\n            ? this.settings.clearOnSave\n            : ABViewFormPropertyComponentDefaults.clearOnSave\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth == null\n            ? ABViewFormPropertyComponentDefaults.labelWidth\n            : this.settings.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height == null\n            ? ABViewFormPropertyComponentDefaults.height\n            : this.settings.height\n      );\n   }\n\n   // Use this function in kanban\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      var viewsToAllow = [\"label\", \"layout\", \"button\", \"text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   /**\n    * @method fieldComponents()\n    *\n    * return an array of all the ABViewFormField children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViewFormField that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @return {array} \tarray of ABViewFormField\n    */\n   fieldComponents(filter) {\n      const flattenComponents = (views) => {\n         let components = [];\n\n         views.forEach((v) => {\n            if (v == null) return;\n\n            components.push(v);\n\n            if (v._views?.length) {\n               components = components.concat(flattenComponents(v._views));\n            }\n         });\n\n         return components;\n      };\n\n      if (this._views?.length) {\n         const allComponents = flattenComponents(this._views);\n\n         if (filter == null) {\n            filter = (comp) => comp instanceof ABViewFormItem;\n         }\n\n         return allComponents.filter(filter);\n      } else {\n         return [];\n      }\n   }\n\n   addFieldToForm(field, yPosition) {\n      if (field == null) return;\n\n      var fieldComponent = field.formComponent();\n      if (fieldComponent == null) return;\n\n      var newView = fieldComponent.newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings || {};\n      newView.settings.fieldId = field.id;\n      // TODO : Default settings\n\n      if (yPosition != null) newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n\n   get RecordRule() {\n      let object = this.datacollection.datasource;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   doRecordRulesPre(rowData) {\n      return this.RecordRule.processPre({ data: rowData, form: this });\n   }\n\n   doRecordRules(rowData) {\n      // validate for record rules\n      if (rowData) {\n         let object = this.datacollection.datasource;\n         let ruleValidator = object.isValidData(rowData);\n         let isUpdatedDataValid = ruleValidator.pass();\n         if (!isUpdatedDataValid) {\n            console.error(\"Updated data is invalid.\", { rowData: rowData });\n            return Promise.reject(new Error(\"Updated data is invalid.\"));\n         }\n      }\n\n      return this.RecordRule.process({ data: rowData, form: this });\n   }\n\n   doSubmitRules(rowData) {\n      var object = this.datacollection.datasource;\n\n      var SubmitRules = new ABSubmitRule();\n      SubmitRules.formLoad(this);\n      SubmitRules.fromSettings(this.settings.submitRules);\n      SubmitRules.objectLoad(object);\n\n      return SubmitRules.process({ data: rowData, form: this });\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormCustomPropertyComponentDefaults = {};\n\nconst ABViewFormCustomDefaults = {\n   key: \"fieldcustom\",\n   // {string} unique key for this view\n   icon: \"object-group\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.custom\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormCustom extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCustomPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormDatepickerPropertyComponentDefaults = {\n   timepicker: false,\n};\n\nconst ABViewFormDatepickerDefaults = {\n   key: \"datepicker\", // {string} unique key for this view\n   icon: \"calendar\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.datepicker\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormDatepickerCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormDatepickerDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormDatepickerDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormDatepickerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewFormFieldPropertyComponentDefaults = {\n   required: 0,\n   disable: 0,\n};\n\nmodule.exports = class ABViewFormComponentCore extends ABView {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static defaultValues() {\n      return ABViewFormFieldPropertyComponentDefaults;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let form = this.parentFormComponent();\n      if (form == null) return null;\n\n      let datacollection = form.datacollection;\n      if (datacollection == null) return null;\n\n      return datacollection;\n   }\n\n   field() {\n      if (this.settings.objectId) {\n         let object = this.AB.objectByID(this.settings.objectId);\n         if (!object) return null;\n\n         return object.fieldByID(this.settings.fieldId);\n      } else {\n         let form = this.parentFormComponent();\n         if (form == null) return null;\n\n         let object;\n         if (form._currentObject) {\n            object = form._currentObject;\n         } else {\n            let datacollection = form.datacollection;\n            if (datacollection == null) return null;\n\n            object = datacollection.datasource;\n         }\n\n         if (object == null) return null;\n\n         let field = object.fieldByID(this.settings.fieldId);\n         return field;\n      }\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormJsonPropertyComponentDefaults = {\n   type: \"string\", // 'string', 'systemObject' or 'filter'\n};\n\nconst ABViewFormJsonDefaults = {\n   key: \"json\", // {string} unique key for this view\n   icon: \"brackets-curly\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.json\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormJsonCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormJsonDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormJsonDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormJsonPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormNumberPropertyComponentDefaults = {\n   isStepper: 0,\n};\n\nconst ABViewFormNumberDefaults = {\n   key: \"numberbox\", // {string} unique key for this view\n   icon: \"hashtag\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.number\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormNumberCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormNumberDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormNumberDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormNumberPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewFormText instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"formLabel\"]);\n\n      var obj = super.toObj();\n      obj.views = []; // no subviews\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.isStepper =\n         this.settings.isStepper ||\n         ABViewFormNumberPropertyComponentDefaults.isStepper;\n\n      // convert from \"0\" => 0\n      this.settings.isStepper = parseInt(this.settings.isStepper);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormCustom = require(\"../../platform/views/ABViewFormCustom\");\n\nconst ABViewFormReadonlyPropertyComponentDefaults = {};\n\nconst ABViewFormReadonlyDefaults = {\n   key: \"fieldreadonly\", // {string} unique key for this view\n   icon: \"calculator\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.readonly\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormReadonly extends ABViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormReadonlyDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormReadonlyDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormReadonlyPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormSelectMultiplePropertyComponentDefaults = {\n   type: \"multicombo\", // 'richselect' or 'radio'\n};\n\nconst ABSelectMultipleDefaults = {\n   key: \"selectmultiple\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.selectmultiple\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormSelectMultipleCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABSelectMultipleDefaults\n      );\n   }\n\n   static common() {\n      return ABSelectMultipleDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormSelectMultiplePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormSelectSinglePropertyComponentDefaults = {\n   type: \"richselect\", // 'richselect' or 'radio'\n};\n\nconst ABSelectSingleDefaults = {\n   key: \"selectsingle\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.selectsingle\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormSelectSingleCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABSelectSingleDefaults\n      );\n   }\n\n   static common() {\n      return ABSelectSingleDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormSelectSinglePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormTextboxPropertyComponentDefaults = {\n   type: \"single\", // 'single', 'multiple' or 'rich'\n};\n\nconst ABViewFormTextboxDefaults = {\n   key: \"textbox\", // {string} unique key for this view\n   icon: \"i-cursor\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.textbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormTextboxCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormTextboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormTextboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTextboxPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormCustom = require(\"../../platform/views/ABViewFormCustom\");\n\nconst ABViewFormTreePropertyComponentDefaults = {};\n\nconst ABTreeDefaults = {\n   key: \"formtree\", // {string} unique key for this view\n   icon: \"sitemap\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.tree\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormTreeCore extends ABViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABTreeDefaults);\n   }\n\n   static common() {\n      return ABTreeDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTreePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewGanttPropertyComponentDefaults = {\n   dataviewID: \"\",\n   // {string}\n   // {ABDatacollection.id} of the datacollection that contains the data for\n   // the Gantt chart.\n\n   titleFieldID: \"\",\n   // {string}\n   // {ABFieldXXX.id} of the field that contains the value of the title\n   // ABFieldString, ABFieldLongText\n\n   startDateFieldID: \"\",\n   // {string}\n   // {ABFieldDate.id} of the field that contains the start date\n\n   endDateFieldID: \"\",\n   // {string}\n   // {ABFieldDate.id} of the field that contains the end date\n\n   durationFieldID: \"\",\n   // {string}\n   // {ABFieldNumber.id} of the field that contains the duration\n\n   progressFieldID: \"\",\n   // {string}\n   // {ABFieldNumber.id} of the field that marks the progress\n\n   notesFieldID: \"\",\n   // {string}\n   // {ABFieldXXX.id} of the field that contains the value of the title\n   // ABFieldString, ABFieldLongText\n};\n\nconst ABViewDefaults = {\n   key: \"gantt\", // {string} unique key for this view\n   icon: \"tasks\", // {string} fa-[icon] reference for this view\n   labelKey: \"Gantt\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewGanttCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewGanttPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      Object.keys(ABViewGanttPropertyComponentDefaults).forEach((k) => {\n         this.settings[k] =\n            this.settings[k] || ABViewGanttPropertyComponentDefaults[k];\n      });\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewGridPropertyComponentDefaults = {\n   label: \"\",\n   // {string}\n   // label is required and you can add more if the component needs them\n\n   // format:0  \t// 0 - normal, 1 - title, 2 - description\n   dataviewID: \"\",\n   // {uuid}\n   // uuid of ABDataCollection that drives the data for our Grid\n\n   padding: 17,\n   // {int}\n   // the default padding surrounding the component\n\n   showToolbar: 1,\n   // {bool}\n   // do we show our toolbar?\n\n   isEditable: 0,\n   // {bool}\n   // do we allow editing in the grid?\n\n   massUpdate: 0,\n   // {bool}\n   // do we allow the Mass Update capability? (row checkboxes and the\n   // MassUpdate popup)\n\n   allowDelete: 0,\n   // {bool}\n   // do we allow deleting multiple rows at a time? Mass Delete.\n\n   // isFilterable:0,\n\n   isSortable: 1,\n   // {bool}\n   // do we allow the sort options.\n\n   isExportable: 0,\n   // {bool}\n   // do we enable the webix export from grid capabilities?\n\n   // linkedObject:'',\n   // linkedField:'',\n   // linkedPage:'',\n   // linkedPageView:'',\n   // linkedEditPage:'',\n   // linkedEditPageForm:'',\n\n   detailsPage: \"\",\n   // {ABViewPage.id}\n   // the ABViewPage that has the details component.\n\n   detailsTab: \"\",\n   // {ABViewTab.id}\n   // the ABViewTab component, that has the details component.\n   // NOTE: if your details is embedded on a TAB, we need both the\n   // .detailsPage & .detailsTab to successfully show the item.\n\n   editPage: \"\",\n   // {ABViewPage.id}\n   // the ABViewPage that has the edit component.\n\n   editTab: \"\",\n   // {ABViewTab.id}\n   // the ABViewTab component, that has the edit component.\n   // NOTE: if your editor is embedded on a TAB, we need both the\n   // .editPage & .editTab to successfully show the form.\n\n   trackView: 0,\n   // {bool}\n   // Do we offer the ability to track changes to this object/row?\n\n   frozenColumnID: \"\",\n   // {ABField.id}\n   // id of column you want to stop freezing the left hand side at.\n\n   hiddenFields: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add hidden:true to\n\n   summaryColumns: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add the SUM footer to\n\n   countColumns: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add the Count footer to\n\n   // TODO: get rid of objectWorkspace!\n   objectWorkspace: {\n      // sortFields:[], // array of columns with their sort configurations\n      // filterConditions:[], // array of filters to apply to the data table\n      frozenColumnID: \"\", // id of column you want to stop freezing\n      hiddenFields: [], // array of [ids] to add hidden:true to\n      summaryColumns: [],\n      countColumns: [],\n   },\n   gridFilter: {\n      filterOption: 1,\n      userFilterPosition: \"toolbar\",\n      isGlobalToolbar: 1,\n   },\n   // summaryFields: [], // array of [field ids] to add the summary column in footer\n   // countFields: [], // array of [field ids] to add the summary column in footer\n\n   height: 0,\n   // {int}\n   // The Height of our Grid.\n   // See ../views/ABViewDataview.js\n\n   hideHeader: 0,\n   labelAsField: 0,\n   hideButtons: 0,\n   groupBy: \"\", // id of field\n\n   // TODO: add to ABDesigner.interface design:\n   columnConfig: [],\n   // {array} [ {columnHeader}, {columnHeader} ... ]\n   // An array of column headers for the grid to display. These should\n   // be generated at Design time, and can allow the designer to ORDER the\n   // columns, assign column widths, fillspace, etc...\n   //    {columnHeader}\n   //    The minimum amount of information a Grid needs for it's customization\n   //    .id {string} ABField.columnName\n   //    .fieldId {string} ABField.id\n   //    .width {int}\n   //    .fillspace {bool}\n   //    .minwidth\n   //\n   //    When displaying column headers, we will ask the\n   //    CurrentObject.columnHeaders(), and then modify them with our settings\n   //    here.\n\n   saveLocal: 1,\n   // {bool}\n   // Allow saving of local changes to our grid display. This will enable\n   // a user to modify the Grid display locally.\n};\n\nconst ABViewDefaults = {\n   key: \"grid\", // {string} unique key for this view\n   icon: \"table\", // {string} fa-[icon] reference for this view\n   labelKey: \"Grid\", // {string} the multilingual label key for the class label\n};\n\n/**\n * @function settingsDefault()\n * Verifies a given field is set and if not, defaults to what we havein our\n * ABViewGridPropertyComponentDefaults.\n * NOTE: use this fn() for values that are NOT TRUTHY ... so not for numeric\n * 1 or 0.\n * @param {hash} base\n *        The current settings value hash.\n * @param {string} field\n *        The parameter we are checking.\n */\nfunction settingsDefault(base, field) {\n   if (typeof base[field] == \"undefined\") {\n      base[field] = ABViewGridPropertyComponentDefaults[field];\n      return;\n   }\n   base[field] = base[field] || ABViewGridPropertyComponentDefaults[field];\n}\n\n/**\n * @function settingsDefaultJSON()\n * Verifies a given field is set and if not, defaults to what we havein our\n * ABViewGridPropertyComponentDefaults.\n * NOTE: use this fn() for values that ARE TRUTHY ... so for numeric 1 or 0\n * @param {hash} base\n *        The current settings value hash.\n * @param {string} field\n *        The parameter we are checking.\n */\nfunction settingsDefaultJSON(base, field) {\n   try {\n      if (typeof base[field] == \"string\") {\n         base[field] = JSON.parse(base[field]);\n      }\n   } catch (e) {\n      base[field] = ABViewGridPropertyComponentDefaults[field];\n   }\n}\n\nmodule.exports = class ABViewGridCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewGridPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      settingsDefault(this.settings, \"dataviewID\");\n\n      // Convert to boolean\n      // these values are sometimes 0 (number) at this point so the JSON.parse\n      // with the || (or) statement was always falling to the default so I am\n      // trying to parse the value...if it fails we use the default value\n      settingsDefaultJSON(this.settings, \"padding\");\n      settingsDefaultJSON(this.settings, \"showToolbar\");\n      settingsDefaultJSON(this.settings, \"isEditable\");\n      settingsDefaultJSON(this.settings, \"massUpdate\");\n      settingsDefaultJSON(this.settings, \"allowDelete\");\n      // this.settings.isFilterable = JSON.parse(this.settings.isFilterable || ABViewGridPropertyComponentDefaults.isFilterable);\n      settingsDefaultJSON(this.settings, \"isSortable\");\n      settingsDefaultJSON(this.settings, \"isExportable\");\n      settingsDefaultJSON(this.settings, \"hideHeader\");\n      settingsDefaultJSON(this.settings, \"labelAsField\");\n      settingsDefaultJSON(this.settings, \"hideButtons\");\n      settingsDefaultJSON(this.settings, \"columnConfig\");\n      settingsDefaultJSON(this.settings, \"saveLocal\");\n\n      this.settings.gridFilter =\n         this.settings.gridFilter ||\n         ABViewGridPropertyComponentDefaults.gridFilter;\n\n      try {\n         this.settings.gridFilter.filterOption = JSON.parse(\n            this.settings.gridFilter.filterOption\n         );\n      } catch (e) {\n         this.settings.gridFilter.filterOption =\n            ABViewGridPropertyComponentDefaults.gridFilter.filterOption;\n      }\n\n      try {\n         this.settings.gridFilter.isGlobalToolbar = JSON.parse(\n            this.settings.gridFilter.isGlobalToolbar\n         );\n      } catch (e) {\n         this.settings.gridFilter.isGlobalToolbar =\n            ABViewGridPropertyComponentDefaults.gridFilter.isGlobalToolbar;\n      }\n\n      // this.settings.linkedObject = this.settings.linkedObject || ABViewGridPropertyComponentDefaults.linkedObject;\n      // this.settings.linkedField = this.settings.linkedField || ABViewGridPropertyComponentDefaults.linkedField;\n      // this.settings.linkedPage = this.settings.linkedPage || ABViewGridPropertyComponentDefaults.linkedPage;\n      // this.settings.linkedPageView = this.settings.linkedPageView || ABViewGridPropertyComponentDefaults.linkedPageView;\n      // this.settings.linkedEditPage = this.settings.linkedEditPage || ABViewGridPropertyComponentDefaults.linkedEditPage;\n      // this.settings.linkedEditPageForm = this.settings.linkedEditPageForm || ABViewGridPropertyComponentDefaults.linkedEditPageForm;\n\n      settingsDefault(this.settings, \"detailsPage\");\n      settingsDefault(this.settings, \"editPage\");\n      settingsDefault(this.settings, \"detailsTab\");\n      settingsDefault(this.settings, \"editTab\");\n      settingsDefaultJSON(this.settings, \"trackView\");\n\n      // TODO: remove objectworkspace!\n      // this.settings.objectWorkspace =\n      //    this.settings.objectWorkspace ||\n      //    ABViewGridPropertyComponentDefaults.objectWorkspace;\n\n      // if (typeof this.settings.objectWorkspace != \"undefined\") {\n      //    if (typeof this.settings.objectWorkspace.sortFields == \"undefined\")\n      //       this.settings.objectWorkspace.sortFields = [];\n      //    if (\n      //       typeof this.settings.objectWorkspace.filterConditions == \"undefined\"\n      //    )\n      //       this.settings.objectWorkspace.filterConditions = [];\n      //    if (typeof this.settings.objectWorkspace.frozenColumnID == \"undefined\")\n      //       this.settings.objectWorkspace.frozenColumnID = \"\";\n      //    if (typeof this.settings.objectWorkspace.hiddenFields == \"undefined\")\n      //       this.settings.objectWorkspace.hiddenFields = [];\n      //    if (typeof this.settings.objectWorkspace.summaryColumns == \"undefined\")\n      //       this.settings.objectWorkspace.summaryColumns = [];\n      //    if (typeof this.settings.objectWorkspace.countColumns == \"undefined\")\n      //       this.settings.objectWorkspace.countColumns = [];\n      // }\n\n      var owFields = [\n         \"sortFields\",\n         \"filterConditions\",\n         \"frozenColumnID\",\n         \"hiddenFields\",\n         \"summaryColumns\",\n         \"countColumns\",\n      ];\n      // Transition: if we have an .objectWorkspace, copy those values in here:\n      if (this.settings.objectWorkspace) {\n         owFields.forEach((f) => {\n            if (this.settings[f] == null)\n               this.settings[f] = this.settings.objectWorkspace[f];\n         });\n      }\n\n      // make sure they have actual default values now.\n      owFields.forEach((f) => {\n         settingsDefault(this.settings, f);\n      });\n\n      // we are not allowed to have sub views:\n      this._views = [];\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   removeField(field, cb) {\n      let shouldSave = false;\n\n      // check to see if there is a frozenColumnID and if it matches the\n      // deleted field\n      if (this.settings?.frozenColumnID == field.columnName) {\n         // remove the column name from the frozen column id\n         this.settings.frozenColumnID = \"\";\n         // flag the object to be saved later\n         shouldSave = true;\n      }\n\n      // check to see if there are hidden fields\n      if (this.settings.hiddenFields?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.hiddenFields.indexOf(field.columnName);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.hiddenFields.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n\n      // check to see if there are Summary fields\n      if (this.settings.summaryColumns?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.summaryColumns.indexOf(field.id);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.summaryColumns.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n\n      // check to see if there are hidden fields\n      if (this.settings.countColumns?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.countColumns.indexOf(field.id);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.countColumns.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n      // if settings were changed call the callback\n\n      cb(null, shouldSave);\n   }\n\n   copyUpdateProperyList() {\n      return [\"detailsPage\", \"detailsTab\", \"editPage\", \"editTab\"];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewImagePropertyComponentDefaults = {\n   filename: \"\",\n   width: 200,\n   height: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"image\", // {string} unique key for this view\n   icon: \"picture-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"Image\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewImageCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewImagePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewImagePropertyComponentDefaults.width\n      );\n      this.settings.height = parseInt(\n         this.settings.height || ABViewImagePropertyComponentDefaults.height\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewKanbanPropertyComponentDefaults = {\n   dataviewID: null,\n   // {uuid}\n   // The ABDataCollection.uuid that we are using to store the data.\n   // NOTE: we actually use the DC to get the ABObject it is connected to.\n\n   editFields: [],\n   // {array}\n   // An array of {ABField.id} that determines which fields should show up\n   // in the editor.\n\n   verticalGroupingField: \"\",\n   // {ABField.id}\n   // the .id of the ABField instance that determines the Vertical Grouping\n   // of the Kanban.\n\n   horizontalGroupingField: \"\",\n   // {ABField.id}\n   // the .id of the ABField instance that determines the horizontal Grouping\n   // of the Kanban.\n\n   ownerField: \"\",\n   // {ABFieldUser.id}\n   // the .id of the ABFieldUser instance that determines the owner of the\n   // entries.\n\n   template: \"\",\n   // {json}\n   // The {ABViewText} definition used to display the template for this KanBan.\n   //\n   // A display template used for displaying the information in each Card. The\n   // template is a basic string with special placeholders:  {field.id}\n   // Given a row of data, the current object will scan the template for any\n   // placeholders matching one of it's fields, and then update it with the\n   // current value.\n};\n\nconst ABViewDefaults = {\n   key: \"kanban\",\n   // {string}\n   // unique key identifier for this ABView object\n\n   icon: \"columns\",\n   // {string}\n   // font-awesome icon reference: (without 'fa-' )\n\n   labelKey: \"Kanban\",\n   // {string}\n   // the multilingual label key\n   // NOTE: will be used as L(labelKey)\n};\n\nmodule.exports = class ABViewKanbanCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // set a default .template value\n      if (!this.settings.template) {\n         this.settings.template = { id: `${this.id}_template`, key: \"text\" };\n         this.settings.template.text = this.settings.textTemplate;\n      }\n\n      this.TextTemplate = this.AB.viewNewDetatched(this.settings.template);\n   }\n\n   toObj() {\n      var obj = super.toObj();\n      obj.settings.template = this.TextTemplate.toObj();\n      // NOTE: this corrects the initial save where this.id == undefined\n      // all the rest will set the .id correctly.\n      obj.settings.template.id = `${this.id}_template`;\n      return obj;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewKanbanPropertyComponentDefaults;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewLabelPropertyComponentDefaults = {\n   text: \"\",\n   format: 0, // 0 - normal, 1 - title, 2 - description\n   alignment: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"label\", // {string} unique key for this view\n   icon: \"font\", // {string} fa-[icon] reference for this view\n   labelKey: \"Label\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewLabelPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"text\"]);\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values); // <-- this performs the translations\n\n      // if this is being instantiated on a read from the Property UI,\n      // .text is coming in under .settings.label\n      this.text = values.text || values.settings.text || \"*text\";\n\n      this.settings.format =\n         this.settings.format || ABViewLabelPropertyComponentDefaults.format;\n      this.settings.alignment =\n         this.settings.alignment ||\n         ABViewLabelPropertyComponentDefaults.alignment;\n\n      // we are not allowed to have sub views:\n      this._views = [];\n\n      // convert from \"0\" => 0\n      this.settings.format = parseInt(this.settings.format);\n\n      this.translate(this, this, [\"label\", \"text\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   //// Allow external interface to manipulate our settings:\n\n   /**\n    * @method formatNormal\n    * display text in the normal format.\n    */\n   formatNormal() {\n      this.settings.format = 0;\n   }\n\n   /**\n    * @method formatTitle\n    * display text as a Title.\n    */\n   formatTitle() {\n      this.settings.format = 1;\n   }\n\n   /**\n    * @method formatDescription\n    * display text as a description.\n    */\n   formatDescription() {\n      this.settings.format = 2;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\nconst ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst PropertyComponentDefaults = {\n   label: \"\",\n   numColumns: 1, // The number of columns for this layout\n};\n\nconst ABViewDefaults = {\n   key: \"layout\", // {string} unique key for this view\n   icon: \"columns\", // {string} fa-[icon] reference for this view\n   labelKey: \"Layout\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLayoutCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return PropertyComponentDefaults;\n   }\n\n   /**\n    * @method addColumn\n    * method to actually add a new ABView as one of our columns.\n    * This is called by the static .addView() method.\n    */\n   addColumn() {\n      this._views.push(\n         this.application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n            },\n            this.application,\n            this\n         )\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      if (isEdited) {\n         // if the layout component is being edited in the editor (isEdited == true)\n         // then we return [];\n         return [];\n      } else {\n         // the layout view doesn't care what components are offered, it get's\n         // the list from it's parent view.\n         // ## NOTE: layout views should not be root views.\n         if (this.parent) {\n            return this.parent.componentList(false);\n         } else {\n            return [];\n         }\n      }\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewListPropertyComponentDefaults = {\n   dataviewID: null,\n   field: null,\n   height: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"list\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"List\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewListPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   field() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var object = dv.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.field);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewMenuPropertyComponentDefaults = {\n   orientation: \"x\",\n   buttonStyle: \"ab-menu-default\",\n   menuAlignment: \"ab-menu-left\",\n   menuInToolbar: 1,\n   menuPadding: 10,\n   menuTheme: \"bg_gray\",\n   menuPosition: \"left\",\n   menuTextLeft: \"\",\n   menuTextRight: \"\",\n   menuTextCenter: \"\",\n   // [\n   // \t\t{\n   //\t\t\tpageId: uuid,\n   //\t\t\ttabId: uuid,\n   //\t\t\ttype: string, // \"page\", \"tab\"\n   //\t\t\tisChecked: bool,\n   //\t\t\taliasname: string,\n   //\t\t\ttranslations: []\n   //\t\t}\n   // ]\n   pages: [],\n   order: [],\n};\n\nconst ABMenuDefaults = {\n   key: \"menu\", // {string} unique key for this view\n   icon: \"th-large\", // {string} fa-[icon] reference for this view\n   labelKey: \"Menu\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewMenuCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABMenuDefaults);\n   }\n\n   static common() {\n      return ABMenuDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewMenuPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewMenu instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\n         \"menuTextLeft\",\n         \"menuTextCenter\",\n         \"menuTextRight\",\n      ]);\n      if (this.settings.pages) {\n         this.settings.pages.forEach((page) => {\n            this.unTranslate(page, page, [\"aliasname\"]);\n         });\n      }\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.translate(this, this, [\n         \"menuTextLeft\",\n         \"menuTextCenter\",\n         \"menuTextRight\",\n      ]);\n\n      this.settings.pages =\n         this.settings.pages || ABViewMenuPropertyComponentDefaults.pages;\n\n      for (var i = 0; i < this.settings.pages.length; i++) {\n         var page = this.settings.pages[i];\n         if (page instanceof Object) {\n            page.isChecked = JSON.parse(page.isChecked || false);\n\n            this.translate(page, page, [\"aliasname\"]);\n         }\n         // Compatible with old data\n         else if (typeof page == \"string\") {\n            this.settings.pages[i] = {\n               pageId: page,\n               isChecked: true,\n            };\n         }\n      }\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   ClearPagesInView(view) {\n      // clear menu items\n      if (view && view.count() > 1) {\n         view.find({}).forEach((item) => {\n            view.remove(item.id);\n         });\n      }\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   AddPagesToView(view, pages) {\n      if (!view || !pages) return;\n\n      (pages || []).forEach((displayPage) => {\n         if (displayPage.isChecked) {\n            let existsPage = this.application.pages(\n               (p) => p.id == displayPage.pageId,\n               true\n            )[0];\n            if (!existsPage) return;\n\n            var pageAccessLevel = existsPage.getUserAccess();\n            if (pageAccessLevel == 0) return;\n\n            if (displayPage.tabId) {\n               let existsTab = this.application.views(\n                  (v) => v.id == displayPage.tabId,\n                  true\n               )[0];\n               if (!existsTab) return;\n\n               var tabAccessLevel = existsTab.getUserAccess();\n               if (tabAccessLevel == 0) return;\n            }\n\n            let label = this.getAliasname(displayPage);\n            // create a temporaty store for the menu item\n            var menuItem;\n            // check if page has a parent or not\n            if (displayPage.parent && displayPage.parent != \"0\") {\n               // if page has a parent attempt to grab its submenu\n               menuItem = view.getSubMenu(displayPage.parent);\n            } else {\n               // if the page doesn't have parent use the current menu\n               menuItem = view;\n            }\n            // if the menu item doesn't have a menu selected find it\n            if (menuItem == null) {\n               // get the menu item\n               var curMenu = view.getMenuItem(displayPage.parent);\n               // create a submenu placeholder\n               curMenu.submenu = [];\n               // update the menu with the new submenu included\n               view.refresh(displayPage.parent);\n               // get the submenu we just created\n               menuItem = view.getSubMenu(displayPage.parent);\n            }\n            if (menuItem.exists(displayPage.tabId || displayPage.pageId))\n               return;\n            // add a new item to the menu/submenu\n            menuItem.add(\n               {\n                  id: displayPage.tabId || displayPage.pageId,\n                  value: label,\n                  type: displayPage.type,\n                  pageId: displayPage.pageId,\n                  icon: displayPage.icon\n                     ? \"fa fa-fw fa-\" + displayPage.icon\n                     : \"\",\n               },\n               displayPage.position ? parseInt(displayPage.position) : 0\n            );\n         }\n      });\n   }\n\n   /**\n    * @method getAliasname\n    * @param pageInfo - an object in settings\n    * {\n    * \tpageId: uuid,\n    * \ttabId: uuid,\n    * \ttype: string, - \"page\" or \"tab\"\n    * \tisChecked: bool,\n    * \taliasname: string,\n    *\ttranslations: []\n    *}\n    *\n    * @return {string}\n    */\n   getAliasname(pageInfo) {\n      var lang = this.AB.Multilingual.currentLanguage();\n      var translation = pageInfo.translations.filter((t) => {\n         return t.language_code == lang;\n      });\n\n      var label = \"\";\n\n      if (translation.length) {\n         if (translation[0].aliasname) {\n            label = translation[0].aliasname;\n         } else if (translation[0].label) {\n            label = translation[0].label;\n         }\n      }\n\n      // Just in case there isn't one stored in the translations yet\n      if (!label && pageInfo.aliasname) {\n         label = pageInfo.aliasname;\n      }\n\n      // if alias is empty, then find label of page or tab\n      if (\n         !label ||\n         // remove [en] or [th] etc.\n         !label.replace(/\\[.{2,}\\]/g, \"\")\n      ) {\n         // first check to see if we are actually on a page\n         // if not recursivly look up for the nearest parent page\n         var pageId;\n         if (pageInfo.pageId) {\n            pageId = pageInfo.pageId;\n         } else {\n            pageId = this.getParentPageId(pageInfo);\n         }\n         // find label of the actual page\n         var page = this.application.pages((p) => p.id == pageId, true)[0];\n         if (page) {\n            // find label of the tab view\n            if (pageInfo.type == \"tab\" || pageInfo.key == \"viewcontainer\") {\n               var tabView = page.views(\n                  (v) => v.id == pageInfo.tabId || v.id == pageInfo.id,\n                  true\n               )[0];\n               if (tabView) {\n                  label = tabView.label;\n               }\n            } else {\n               label = page.label;\n            }\n         }\n      }\n\n      return label;\n   }\n\n   getParentPageId(currentView) {\n      if (currentView.key != \"page\") {\n         return this.getParentPageId(currentView.parent);\n      } else {\n         return currentView.id;\n      }\n   }\n\n   copy(lookUpIds, parent) {\n      return super.copy(lookUpIds, parent).then((result) => {\n         // update ids of page's settings\n         (result.settings.pages || []).forEach((p, i) => {\n            let page = result.settings.pages[i];\n\n            // Compatible with old data\n            if (typeof page == \"string\") {\n               result.settings.pages[i] = lookUpIds[page];\n            } else {\n               page.pageId = lookUpIds[page.pageId];\n               page.tabId = lookUpIds[page.tabId];\n            }\n         });\n\n         return result.save().then(() => {\n            return result;\n         });\n      });\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\nconst ABViewPDFImporterPropertyComponentDefaults = {\n   dataviewID: null,\n   fieldID: null,\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalue: {string}\n   //\t}]\n   submitRules: [],\n};\n\nconst ABViewDefaults = {\n   key: \"pdfImporter\", // {string} unique key for this view\n   icon: \"file-pdf-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"PDF Importer\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewPDFImporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPDFImporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.dataviewID =\n         this.settings.dataviewID ??\n         ABViewPDFImporterPropertyComponentDefaults.dataviewID;\n\n      this.settings.fieldID =\n         this.settings.fieldID ??\n         ABViewPDFImporterPropertyComponentDefaults.fieldID;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.settings = obj.settings ?? {};\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   doSubmitRules(rowDatas) {\n      const object = this.datacollection.datasource;\n\n      const SubmitRules = new ABSubmitRule();\n      SubmitRules.formLoad(this);\n      SubmitRules.fromSettings(this.settings.submitRules);\n      SubmitRules.objectLoad(object);\n\n      if (rowDatas && !Array.isArray(rowDatas)) rowDatas = [rowDatas];\n\n      rowDatas?.forEach((rowData) => {\n         SubmitRules.process({ data: rowData, form: this });\n      });\n   }\n};\n","/*\n * ABViewPage\n *\n * An ABView that represents a \"Page\" in the system.\n *\n * Pages are\n *\t- allowed to be displayed in the interface list\n *\t- return a full list of components that can be added to the view editor\n *\n *\n */\n\nconst ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n// var ABViewManager = require(\"../ABViewManager\");\n\n// function L(key, altText) {\n//     return AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABViewDefaults = {\n   key: \"page\", // unique key identifier for this ABView\n   icon: \"file\", // icon reference: (without 'fa-' )\n};\n\nconst ABPropertyComponentDefaults = {\n   type: \"page\", // 'page', 'popup' or 'reportPage'\n   popupWidth: 700,\n   popupHeight: 450,\n   pageWidth: null,\n   fixedPageWidth: 0,\n   pageBackground: \"ab-background-default\",\n};\n\nmodule.exports = class ABViewPageCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'viewKey',\t\t\t\t// unique key for this View Type\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this View Type\n\n      //\t\tname: '',\t\t\t\t\t// unique page name\n\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      //\t\t},\n\n      //\t\ttranslations:[]\n      // \t}\n\n      this.parent = null; // will be set by the pageNew() that creates this obj.\n      // {obj} .parent\n      // this points to the ABView object that manages this object as a child.\n      // this param is shared across ABViews as well as ABViewPage, but has\n      // different implications ... so we default an ABViewPage.parent = null\n      // and the place that Creates the Page must assign the .parent externally.\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   static getPageActionKey(view) {\n      return [\n         \"opstools\",\n         \"AB_\" + String(view.application.name).replace(/[^a-z0-9]/gi, \"\"),\n         String(view.name)\n            .replace(/[^a-z0-9]/gi, \"\")\n            .toLowerCase(),\n         \"view\",\n      ].join(\".\");\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewPage instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.name = this.name;\n\n      obj.myAppID = this.myAppID;\n\n      // icon of popup page\n      if (this.settings.type == \"popup\") obj.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") obj.label = obj.name;\n\n      // compile our pages\n      obj.pageIDs = (this._pages || []).map((p) => p.id);\n\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // icon of popup page\n      if (values.settings.type == \"popup\") this.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") this.label = this.name;\n\n      // track which application this Page belongs to:\n      this.myAppID = values.myAppID;\n      if (!this.myAppID && this.application) {\n         this.myAppID = this.application.id;\n      }\n\n      // now properly handle our sub pages.\n      var pages = [];\n      (values.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            pages.push(this.pageNew(def));\n         } else {\n            this.AB.error(\n               `App[${this.application.name}][${this.application.id}]->Page[${this.name}][${this.id}] referenced an unknown Page[${id}]`\n            );\n         }\n      });\n      this._pages = pages;\n\n      // the default columns of ABView is 1\n      this.settings.columns = this.settings.columns || 1;\n      this.settings.gravity = this.settings.gravity || [1];\n\n      // convert from \"0\" => 0\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABViewPage\n            // be sure to remove any of it's ABViewPages as well\n            // This cleans out any dangling ABDefinitions and cleans up the\n            // OpsPortal Permissions:\n\n            var allPageDeletes = [];\n            var allPages = this.pages();\n            this._pages = [];\n            // doing ._pages = [] prevents any of my updates when\n            // a sub-page is .destroy()ed\n\n            allPages.forEach((p) => {\n               allPageDeletes.push(p.destroy());\n            });\n            return Promise.all(allPageDeletes);\n         })\n         .then(() => {\n            var parent = this.parent || this.application;\n\n            return parent.pageRemove(this);\n         })\n         .then(() => {\n            return super.destroy();\n         });\n\n      // return new Promise((resolve, reject) => {\n      //    // verify we have been .save() before:\n      //    if (this.id) {\n      //       this.application\n      //          .viewDestroy(this)\n      //          .then(() => {\n      //             // remove the page in list\n      //             var parent = this.parent || this.application;\n      //             var remainingPages = parent.pages((p) => {\n      //                return p.id != this.id;\n      //             });\n      //             parent._pages = remainingPages;\n\n      //             resolve();\n      //          })\n      //          .catch(reject);\n      //    } else {\n      //       resolve(); // nothing to do really\n      //    }\n      // });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABViewPage\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // now we can persist ourself in our parent\n            var parent = this.parent || this.application;\n\n            return parent.pageInsert(this);\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   /**\n    * @method refreshInstance()\n    * This returns a NEW instance of a ABViewPage based upon the latest\n    * version of it's Definition.  It also resolves any current listeners\n    * this copy currently has and prepare this to discard itself.\n    */\n   refreshInstance() {\n      console.warn(\n         \"This version of ABViewPage hasn't updated it's refreshInstance()\",\n         this\n      );\n      return this;\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    *\n    * return an array of all the ABViewPages for this ABViewPage.\n    *\n    * @param {fn} filter\t\ta filter fn to return a set of ABViewPages that this fn\n    *\t\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\tflag to find in sub pages\n    *\n    * @return {array}\t\t\tarray of ABViewPages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         if (this._pages && this._pages.length > 0) {\n            result = this._pages.filter(filter);\n\n            if (result.length < 1) {\n               this._pages.forEach((p) => {\n                  var subPages = p.pages(filter, deep);\n                  if (subPages && subPages.length > 0) {\n                     result = subPages;\n                  }\n               });\n            }\n         }\n      }\n      // find root pages\n      else {\n         result = this._pages.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method pageInsert()\n    *\n    * save the given ABViewPage in our ._pages array and persist the current\n    * values if they changed.\n    *\n    * @param {ABViewPage} page The instance of the page to save.\n    * @return {Promise}\n    */\n   pageInsert(page) {\n      var isIncluded = this.pages((o) => o.id === page.id).length > 0;\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._pages.push(page);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABViewPage that is tied to this\n    * ABViewPage.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      // make sure this is an ABViewPage description\n      values.key = ABViewDefaults.key;\n\n      // NOTE: this returns a new ABView component.\n      // when creating a new page, the 3rd param should be null, to signify\n      // the top level component.\n      var page = this.application.viewNew(values, this.application, null);\n      page.parent = this;\n      return page;\n   }\n\n   /**\n    * @method pageRemove()\n    *\n    * remove the given ABViewPage from our ._pages array and persist the current\n    * values.\n    *\n    * @param {ABViewPage} page The instance of the page to remove.\n    * @return {Promise}\n    */\n   pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages(function (p) {\n         return p.id != page.id;\n      });\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method urlView()\n    * return the url pointer for views in this application.\n    * @return {string}\n    */\n   urlPage() {\n      return this.urlPointer() + \"/_pages/\";\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this view.  This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this view object.\n    * @return {string}\n    */\n   urlPointer() {\n      if (this.parent) {\n         return this.parent.urlPage() + this.id;\n      } else {\n         return this.application.urlPage() + this.id;\n      }\n   }\n\n   updateIcon(obj) {\n      // icon of page\n      if (obj.settings.type == \"popup\") {\n         obj.icon = \"clone\";\n      } else {\n         obj.icon = ABViewDefaults.icon;\n      }\n      return obj;\n   }\n\n   /**\n    * @method clone()\n    * clone the defintions of this ABViewPage object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {obj}\n    *        defs of the copied ABView\n    */\n   clone(lookUpIds, parent) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // copy\n      let result = super.clone(lookUpIds, parent);\n\n      // page's name should not be duplicate\n      result.name = null;\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABViewPage object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // now continue with the default .copy()\n      return super.copy(lookUpIds, parent, options);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewPivotPropertyComponentDefaults = {\n   dataviewID: null,\n   removeMissed: 0,\n   totalColumn: 0,\n   separateLabel: 0,\n   min: 0,\n   max: 0,\n   height: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"pivot\", // {string} unique key for this view\n   icon: \"cube\", // {string} fa-[icon] reference for this view\n   labelKey: \"Pivot\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewPivotCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPivotPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // Convert to boolean\n      this.settings.removeMissed = JSON.parse(\n         this.settings.removeMissed ||\n            ABViewPivotPropertyComponentDefaults.removeMissed\n      );\n      this.settings.totalColumn = JSON.parse(\n         this.settings.totalColumn ||\n            ABViewPivotPropertyComponentDefaults.totalColumn\n      );\n      this.settings.separateLabel = JSON.parse(\n         this.settings.separateLabel ||\n            ABViewPivotPropertyComponentDefaults.separateLabel\n      );\n      this.settings.min = JSON.parse(\n         this.settings.min || ABViewPivotPropertyComponentDefaults.min\n      );\n      this.settings.max = JSON.parse(\n         this.settings.max || ABViewPivotPropertyComponentDefaults.max\n      );\n\n      if (this.settings.structure && typeof this.settings.structure == \"string\")\n         this.settings.structure = JSON.parse(this.settings.structure);\n\n      // \"0\" -> 0\n      this.settings.height = parseInt(\n         this.settings.height || ABViewPivotPropertyComponentDefaults.height\n      );\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.views = [];\n      obj.settings = obj.settings || {};\n\n      if (this.settings.structure)\n         obj.settings.structure = JSON.stringify(this.settings.structure);\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewReportManagerPropertyComponentDefaults = {\n   dataviewID: \"\",\n   dataviewFields: {\n      name: \"\", // id of a String field\n      text: \"\", // id of a LongText field\n      queries: \"\", // id of a json field\n   },\n   datacollectionIDs: [],\n   editMode: 0,\n   hideCommonTab: 0,\n   hideDataTab: 0,\n   hideViewTab: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"reportsManager\", // {string} unique key for this view\n   icon: \"wpforms\", // {string} fa-[icon] reference for this view\n   labelKey: \"Reports Manager\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewReportsManagerCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewReportManagerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      const parsedSettings = {};\n\n      Object.keys(ABViewReportManagerPropertyComponentDefaults).forEach(\n         (key1) => {\n            if (\n               typeof ABViewReportManagerPropertyComponentDefaults[key1] ===\n                  \"object\" &&\n               !Array.isArray(\n                  ABViewReportManagerPropertyComponentDefaults[key1]\n               )\n            ) {\n               parsedSettings[key1] = {};\n\n               Object.keys(\n                  ABViewReportManagerPropertyComponentDefaults[key1]\n               ).forEach((key2) => {\n                  parsedSettings[key1][key2] =\n                     this.settings[key1]?.[key2] ??\n                     ABViewReportManagerPropertyComponentDefaults[key1][key2];\n               });\n\n               return;\n            }\n\n            parsedSettings[key1] =\n               this.settings[key1] ??\n               ABViewReportManagerPropertyComponentDefaults[key1];\n         }\n      );\n\n      this.settings = parsedSettings;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.settings = obj.settings || {};\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewSchedulerPropertyComponentDefaults = {\n   readonly: 0,\n   dataviewID: \"\",\n   dataviewFields: {\n      name: \"\", // id of a String field\n      start: \"\", // id of a DateTime field\n      end: \"\", // id of a DateTime field\n      allDay: \"\", // id of a Checkbox field\n      repeat: \"\", // id of a String field\n      calendar: \"\", // id of a String field\n      color: \"\", // id of a String field\n      sectionID: \"\", // id of a String field\n      unitID: \"\", // id of a String field\n      notes: \"\", // id of a LongText field\n      originID: \"\", // id of a LongText field\n   },\n   calendarDataviewID: \"\",\n   calendarDataviewFields: {\n      title: \"\", // id of a String field\n      color: \"\", // id of a String field\n      active: \"\", // id of a Checkbox field\n   },\n   timeline: {\n      day: 1,\n      week: 1,\n      month: 1,\n      year: 1,\n      agenda: 1,\n      timeline: 1,\n      units: 1,\n   },\n   timelineSectionList: \"\",\n   unitList: \"\",\n   export: {\n      excel: 0,\n      csv: 0,\n      pdf: 0,\n   },\n};\n\nconst ABViewDefaults = {\n   key: \"scheduler\",\n   // {string}\n   // unique key for this view\n\n   icon: \"calendar\",\n   // {string}\n   // fa-[icon] reference for this view\n\n   labelKey: \"Scheduler\",\n   // {string}\n   // the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewSchedulerCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      this._object = null;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewSchedulerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.unTranslate(this, this, [\"scheduler\"]);\n\n      const obj = super.toObj();\n\n      obj.views = [];\n\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings = this.settings || {};\n      this.settings.dataviewFields = this.settings.dataviewFields || {};\n      this.settings.calendarDataviewFields =\n         this.settings.calendarDataviewFields || {};\n      this.settings.timeline = this.settings.timeline || {};\n      this.settings.export = this.settings.export || {};\n\n      const parsedSettings = {};\n\n      Object.keys(ABViewSchedulerPropertyComponentDefaults).forEach((key1) => {\n         if (\n            typeof ABViewSchedulerPropertyComponentDefaults[key1] === \"object\"\n         ) {\n            parsedSettings[key1] = {};\n\n            Object.keys(ABViewSchedulerPropertyComponentDefaults[key1]).forEach(\n               (key2) => {\n                  parsedSettings[key1][key2] =\n                     this.settings[key1][key2] ??\n                     ABViewSchedulerPropertyComponentDefaults[key1][key2];\n               }\n            );\n\n            return;\n         }\n\n         parsedSettings[key1] =\n            this.settings[key1] ??\n            ABViewSchedulerPropertyComponentDefaults[key1];\n      });\n\n      this.settings = parsedSettings;\n\n      // if this is being instantiated on a read from the Property UI,\n      this.scheduler =\n         values.scheduler || ABViewSchedulerPropertyComponentDefaults.scheduler;\n\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.translate(this, this, [\"scheduler\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\nconst ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewTabPropertyComponentDefaults = {\n   height: 0,\n   minWidth: 0,\n   stackTabs: 0, // use sidebar view instead of tabview\n   darkTheme: 0, // set dark theme css or not\n   sidebarWidth: 200, // width of sidebar menu when stacking tabs\n   sidebarPos: \"left\", // the default position of sidebar\n   iconOnTop: 0, // do you want to put the icon above the text label?\n   hintID: null, // store the ID of a webix hint tutorial for this view\n};\n\nconst ABViewTabDefaults = {\n   key: \"tab\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"Tab\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewTabCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewTabDefaults);\n   }\n\n   static common() {\n      return ABViewTabDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewTabPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(this.settings.height);\n      this.settings.minWidth = parseInt(this.settings.minWidth || 0);\n      this.settings.stackTabs = parseInt(this.settings.stackTabs);\n      this.settings.darkTheme = parseInt(this.settings.darkTheme);\n      this.settings.sidebarWidth = parseInt(this.settings.sidebarWidth);\n      // this.settings.sidebarPos = this.settings.sidebarPos;\n      this.settings.iconOnTop = parseInt(this.settings.iconOnTop);\n   }\n\n   addTab(tabName, tabIcon) {\n      return this.application\n         .viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: tabName,\n               tabicon: tabIcon,\n            },\n            this.application,\n            this\n         )\n         .save();\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewTextPropertyComponentDefaults = {\n   text: \"\",\n   // {string}\n   // A multilingual text template that is used to display a given set of\n   // values.\n\n   height: 0,\n   // {integer}\n   // The default height of this widget.\n\n   dataviewID: null,\n   // {uuid}\n   // The {ABDataCollection.id} of the datacollection this ABViewText is\n   // pulling data from.\n   // In most usage situations this ABView is tied to the data in an\n   // ABDataCollection.  However, it is possible for an ABObject to be\n   // directly assigned to the ABView, and that will be used instead.\n};\n\nconst ABViewDefaults = {\n   key: \"text\",\n   // {string}\n   // unique key for this view\n\n   icon: \"font\",\n   // {string}\n   // fa-[icon] reference for this view\n\n   labelKey: \"Text\",\n   // {string}\n   // the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewTextCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      this._object = null;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewTextPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.unTranslate(this, this, [\"text\"]);\n\n      var obj = super.toObj();\n      obj.views = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings = this.settings || {};\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height || ABViewTextPropertyComponentDefaults.height\n      );\n\n      // if this is being instantiated on a read from the Property UI,\n      this.text = values.text || ABViewTextPropertyComponentDefaults.text;\n\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.translate(this, this, [\"text\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return ABDatacollection of this form\n    *\n    * @return {ABDatacollection}\n    */\n   get datacollection() {\n      if (this.parent?.key == \"dataview\") {\n         return this.AB.datacollectionByID(this.parent.settings.dataviewID);\n      } else {\n         return this.AB.datacollectionByID(this.settings.dataviewID);\n      }\n   }\n\n   fieldKey(field) {\n      let label = field.label || \"\";\n      label = label.replace(/\\(/g, \"\\\\(\");\n      label = label.replace(/\\)/g, \"\\\\)\");\n      return label;\n   }\n\n   displayText(val, componentID) {\n      var result = this.text;\n\n      let clearTemplateValue = (result) => {\n         return result.replace(/{(.*?)}/g, \"\");\n      };\n\n      var dv = this.datacollection;\n      // if (!dv) return clearTemplateValue(result);\n\n      var object = dv?.datasource ?? this._object;\n      if (!object) return clearTemplateValue(result);\n\n      const rowData = val || dv.getCursor() || {};\n\n      object.fields().forEach((f) => {\n         // add \\\\ in front of the regular expression special charactors\n         // let label = f.label || \"\";\n         // label = label.replace(/\\(/g, \"\\\\(\");\n         // label = label.replace(/\\)/g, \"\\\\)\");\n         let label = this.fieldKey(f);\n\n         var template = new RegExp(\"{\" + label + \"}\", \"g\");\n\n         // IDEA: I'd like to keep all the image url logic INSIDE the ABFieldImage\n         // object.  Is there some way we can simply call: f.imageTemplate(rowData)\n         // and parse the results for the url to display here?\n\n         var data = f.format(rowData);\n         if (f.key == \"image\") {\n            var fData = data;\n            data = f.urlImage(fData);\n\n            // Question: should we change f.urlImage() to return the defaultImageUrl\n            // if fData is \"\" and .useDefaultImage = true?\n\n            if (\n               !fData &&\n               f.settings.defaultImageUrl &&\n               f.settings.useDefaultImage\n            ) {\n               data = f.urlImage(f.settings.defaultImageUrl);\n\n               ////\n               //// James:  Revisit this and make sure we are handling things ok now.\n               // result = result.replace(\n               //    \"img\",\n               //    'img onload=\\'AD.comm.hub.publish(\"component.adjust\", {\"containerID\": \"' +\n               //       componentID +\n               //       \"\\\"});' \"\n               // );\n               // } else if (\n               //    fData != \"\" &&\n               //    result.indexOf(\"onload\") == -1 &&\n               //    componentID\n               // ) {\n               // result = result.replace(\n               //    \"img\",\n               //    'img onload=\\'AD.comm.hub.publish(\"component.adjust\", {\"containerID\": \"' +\n               //       componentID +\n               //       \"\\\"});' \"\n               // );\n            } else {\n               ////\n               //// James: It looks like this routine assumes the this.text template will\n               //// only have 1 <img> tag in it.  Is that necessarilly true?\n               ////\n               //// If NOT, then we need to rethink this next line:\n\n               result = result.replace(\n                  \"img\",\n                  \"img onerror='this.parentNode.removeChild(this);' \"\n               );\n            }\n         }\n\n         result = result.replace(template, data);\n      });\n\n      // Support {uuid} tag in tempalte\n      result = result.replace(/{PK}/g, rowData[object.PK()]);\n\n      return result;\n   }\n\n   objectLoad(object) {\n      this._object = object;\n   }\n};\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewDefaults = {\n   key: \"viewwidget\", // {string} unique key for this view\n   icon: \"circle-o-notch \", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.widget\", // {string} the multilingual label key for the class label\n};\n\nconst ABPropertyComponentDefaults = {\n   columnSpan: 1,\n   rowSpan: 1,\n};\n\nmodule.exports = class ABViewWidgetCore extends ABView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    * @param {obj} defaultValues special sub class defined default values.\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.columnSpan = parseInt(\n         this.settings.columnSpan || ABPropertyComponentDefaults.columnSpan\n      );\n      this.settings.rowSpan = parseInt(\n         this.settings.rowSpan || ABPropertyComponentDefaults.rowSpan\n      );\n   }\n};\n","const _ = require(\"lodash\");\n\n// prettier-ignore\nconst ABApplicationCore = require(\"../core/ABApplicationCore.js\");\n\nconst ABViewPage = require(\"./views/ABViewPage\");\nconst ABViewManager = require(\"./ABViewManager\");\n\nmodule.exports = class ABClassApplication extends ABApplicationCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // now listen for any updates to our managed objects\n      this._handler_page_updated = (definition) => {\n         // we want to keep the same pageID order:\n         var newPages = [];\n         this.pages().forEach((pg) => {\n            if (pg.id === definition.id) {\n               newPages.push(pg.refreshInstance(this));\n               return;\n            }\n            newPages.push(pg);\n         });\n\n         this._pages = newPages;\n\n         // var currPage = this._pages.find((p) => p.id === definition.id);\n         // if (currPage) {\n         //    this._pages = this._pages.filter((p) => p.id != currPage.id);\n         //    this._pages.push(currPage.refreshInstance());\n         // }\n      };\n      this._pages.forEach((p) => {\n         p.on(\"definition.updated\", this._handler_page_updated);\n      });\n   }\n\n   static applications(/*fn = () => true*/) {\n      console.error(\n         \"ABApplication.applicationForID(): Depreciated. Who is doing this?\"\n      );\n      return null;\n   }\n   static applicationForID(/*id*/) {\n      var errDepreciated = new Error(\n         \"ABApplication.applicationForID(): Depreciated. Who is doing this?\"\n      );\n      console.error(errDepreciated);\n      return null;\n   }\n\n   static definitionForID(/*id*/) {\n      var errDepreciated = new Error(\n         \"ABApplication.definitionForID(): Depreciated. Who is doing this?\"\n      );\n      console.error(errDepreciated);\n      return null;\n   }\n\n   areaKey() {\n      return this.AB.kebabCase(`ab-${this.name}`);\n   }\n\n   /**\n    * @method refreshInstance()\n    * Used when a definition.updated message is detected on this ABApplication.\n    * This method will return a new instance based upon the current definition\n    * and properly resolve any handlers and pending network Requests.\n    * @return {ABObject}\n    */\n   refreshInstance() {\n      var newObj = this.AB.applicationByID(this.id);\n\n      // remove my listeners\n      this._pages.forEach((p) => {\n         p.removeListener(\"definition.updated\", this._handler_page_updated);\n      });\n\n      return newObj;\n   }\n\n   ///\n   /// Definition\n   ///\n\n   /**\n    * @method _listInsert()\n    * save the given entity into our desired list:\n    * @param {varid} entity\n    * @param {string} key\n    *        the key of the list we are managing\n    * @return {Promise}\n    */\n   async _listInsert(entity, key) {\n      var isIncluded = this[key].indexOf(entity.id) != -1;\n      if (!isIncluded) {\n         this[key].push(entity.id);\n         await this.save();\n      }\n   }\n\n   async _listRemove(entity, key) {\n      var begLen = this[key].length;\n      this[key] = this[key].filter((id) => {\n         return id != entity.id;\n      });\n      // if there was a change then save this.\n      if (begLen != this[key].length) {\n         await this.save();\n      }\n   }\n\n   /**\n    * @method datacollectionInsert()\n    * persist the current ABDataCollection in our list of .datacollectionIDs.\n    * @param {ABDataCollection} dc\n    * @return {Promise}\n    */\n   datacollectionInsert(dc) {\n      return this._listInsert(dc, \"datacollectionIDs\");\n   }\n\n   /**\n    * @method datacollectionRemove()\n    * remove the given ABDataCollection from our list of .datacollectionIDs.\n    * @param {ABDataCollection} dc\n    * @return {Promise}\n    */\n   datacollectionRemove(dc) {\n      return this._listRemove(dc, \"datacollectionIDs\");\n   }\n\n   /**\n    * @method objectInsert()\n    * persist the current ABObject in our list of .objectIDs.\n    * @param {ABObject} object\n    * @return {Promise}\n    */\n   objectInsert(object) {\n      return this._listInsert(object, \"objectIDs\");\n   }\n\n   /**\n    * @method objectRemove()\n    * remove the current ABObject from our list of .objectIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABObject} object\n    * @return {Promise}\n    */\n   objectRemove(object) {\n      return this._listRemove(object, \"objectIDs\");\n   }\n\n   /**\n    * @method processInsert()\n    * persist the current ABProcess in our list of .processIDs.\n    * @param {ABProcess} process\n    * @return {Promise}\n    */\n   processInsert(process) {\n      return this._listInsert(process, \"processIDs\");\n   }\n\n   /**\n    * @method processRemove()\n    * remove the current ABProcess from our list of .processIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABProcess} process\n    * @return {Promise}\n    */\n   processRemove(process) {\n      return this._listRemove(process, \"processIDs\");\n   }\n\n   /**\n    * @method queryInsert()\n    * persist the current ABObjectQuery in our list of .queryIDs.\n    * @param {ABObjectQuery} query\n    * @return {Promise}\n    */\n   queryInsert(query) {\n      return this._listInsert(query, \"queryIDs\");\n   }\n\n   /**\n    * @method queryRemove()\n    * remove the current ABObjectQuery from our list of .queryIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABObjectQuery} query\n    * @return {Promise}\n    */\n   queryRemove(query) {\n      return this._listRemove(query, \"queryIDs\");\n   }\n\n   /**\n    * @method exportIDs()\n    * export any relevant .ids for the necessary operation of this application.\n    * @param {array} ids\n    *         the array of ids to insert any relevant .ids into\n    */\n   exportIDs(ids) {\n      // make sure we don't get into an infinite loop:\n      if (ids.indexOf(this.id) > -1) return;\n\n      ids.push(this.id);\n\n      // start with Objects:\n      this.objectsIncluded().forEach((o) => {\n         o.exportIDs(ids);\n      });\n\n      // get all Hints\n      this.hintsIncluded().forEach((h) => {\n         h.exportIDs(ids);\n      });\n\n      // Queries\n      this.queriesIncluded().forEach((q) => {\n         q.exportIDs(ids);\n      });\n\n      // Datacollections\n      // NOTE: currently the server doesn't make instances of DataCollections\n      // so we manually parse the related info here:\n      this.datacollectionIDs.forEach((dID) => {\n         if (ids.indexOf(dID) > -1) return;\n\n         var def = this.AB.definitionByID(dID);\n         if (def) {\n            ids.push(dID);\n            if (def.settings.datasourceID) {\n               var object = this.AB.objectByID(def.settings.datasourceID);\n               if (object) {\n                  object.exportIDs(ids);\n               }\n            }\n         }\n      });\n\n      // Processes\n      this.processes().forEach((p) => {\n         p.exportIDs(ids);\n      });\n\n      // Pages\n      // NOTE: currently the server doesn't make instances of ABViews\n      // so we manually parse the object data here:\n      var parseView = (view) => {\n         if (ids.indexOf(view.id) > -1) return;\n         ids.push(view.id);\n         (view.pageIDs || []).forEach((pid) => {\n            var pdef = this.AB.definitionByID(pid);\n            if (pdef) {\n               parseView(pdef);\n            }\n         });\n\n         (view.viewIDs || []).forEach((vid) => {\n            var vdef = this.AB.definitionByID(vid);\n            if (vdef) {\n               parseView(vdef);\n            }\n         });\n      };\n\n      var pageIDs = this._pages.map((p) => p.id);\n      (pageIDs || []).forEach((pid) => {\n         var pdef = this.AB.definitionByID(pid);\n         if (pdef) {\n            parseView(pdef);\n         }\n      });\n\n      // return only unique entries:\n      ids = this.AB.uniq(ids);\n   }\n\n   /**\n    * @method pageNew()\n    * return a new instance of an ABViewPage\n    * @param values\n    *        The initial settings for the page.\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      return new ABViewPage(values, this);\n   }\n\n   /**\n    * @method pageInsert()\n    * Insert a new ABViewPage into this Application.\n    * @param {ABViewPage} page\n    *        The instance of the page to save.\n    * @return {Promise}\n    */\n   async pageInsert(page) {\n      // var isIncluded = this.pageByID(page.id);\n      var isIncluded = this._pages.filter((p) => p.id == page.id)[0];\n      if (!isIncluded) {\n         this._pages.push(page);\n         // Save our own Info:\n         return this.save();\n      }\n   }\n\n   /**\n    * @method pageRemove()\n    * remove the current ABViewPage from our list of pages.\n    * @param {ABViewPage} page\n    * @return {Promise}\n    */\n   async pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages(function (p) {\n         return p.id != page.id;\n      });\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n   }\n\n   save() {\n      // if someone just changed the name of our ABApplication, reflect that\n      // in our Def.Name\n      if (this.name != this.label) {\n         this.name = this.label;\n      }\n      return super.save();\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      //\n      // check for valid object references:\n      //\n      var checks = {\n         objectIDs: \"object\",\n         queryIDs: \"query\",\n         datacollectionIDs: \"datacollection\",\n      };\n\n      Object.keys(checks).forEach((k) => {\n         this[k].forEach((id) => {\n            var def = this.AB.definitionByID(id);\n            if (!def) {\n               this.warningsMessage(` is referencing a missing ${checks[k]}`, {\n                  appID: this.id,\n                  id,\n               });\n            }\n         });\n      });\n\n      //\n      // Make sure there is some way to access this Application:\n      //\n      if (this.roleAccess.length == 0 && !this.isAccessManaged) {\n         this.warningsMessage(\" has no Role assigned, and is unaccessible.\");\n      }\n\n      // do our Role references exist?\n      var allRoles = this.AB.Account.rolesAll().map((r) => r.id);\n      this.roleAccess.forEach((r) => {\n         if (allRoles.indexOf(r) == -1) {\n            this.warningsMessage(\n               `Specified Role Access [${r}] does not exist in this system`,\n               { role: r }\n            );\n         }\n      });\n\n      // Make sure all our Pages perform a new warningsEval();\n      this.pages().forEach((p) => {\n         p.warningsEval();\n      });\n   }\n\n   warningsAll() {\n      var warnings = [].concat(this._warnings);\n      [\n         \"objectsIncluded\",\n         \"queriesIncluded\",\n         \"datacollectionsIncluded\",\n         \"processes\",\n         \"pages\",\n         // \"views\", // <-- these are gathered in \"pages\"\n      ].forEach((k) => {\n         this[k]().forEach((o) => {\n            warnings = warnings.concat(o.warningsAll());\n         });\n      });\n\n      return warnings;\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Application[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   /**\n    * @method mobileAppNew()\n    *\n    * return an instance of a new (unsaved) ABMobileApp that is tied to this\n    * ABApplication.\n    *\n    * @return {ABMobileApp}\n    */\n   // mobileAppNew(values) {\n   //    return new ABMobileApp(values, this);\n   // }\n};\n","const _ = require(\"lodash\");\n\n// prettier-ignore\nconst ABApplicationMobileCore = require(\"../core/ABApplicationMobileCore.js\");\n\nconst ABViewPageMobile = require(\"./mobile/ABMobilePage\");\nconst ABViewManager = require(\"./ABViewManager\");\n\nmodule.exports = class ABClassApplicationMobile extends (\n   ABApplicationMobileCore\n) {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n   }\n\n   ///\n   /// Definition\n   ///\n\n   /**\n    * @method pageNew()\n    * return a new instance of an ABViewPageMobile\n    * @param values\n    *        The initial settings for the page.\n    * @return {ABViewPageMobile}\n    */\n   pageNew(values) {\n      const newPage = new ABViewPageMobile(values, this);\n      newPage.parent = this;\n      return newPage;\n   }\n\n   async setPageDefault(page) {\n      if (this.pageDefault != page.id) {\n         let oldPage = this.pageByID(this.pageDefault, true);\n         if (oldPage) {\n            oldPage.defaultPage = 0;\n            await oldPage.save();\n         }\n\n         this.pageDefault = page.id;\n         await this.save();\n      }\n   }\n};\n","const ABEmitter = require(\"./ABEmitter\");\n\nconst CustomComponentManager = require(\"../../webix_custom_components/customComponentManager\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABComponent extends ABEmitter {\n   /**\n    * @param {object} App ?what is this?\n    * @param {string} idBase Identifier for this component\n    * @param {import(\"../ABFactory\").default} AB ABFactory instance\n    */\n   constructor(App, idBase, AB) {\n      super();\n\n      this.AB = AB;\n      // Transition Code:\n      // make sure we have an this.AB\n      if (!AB && App?.AB) {\n         this.AB = App.AB;\n      }\n\n      if (!App) {\n         if (this.AB._App) {\n            App = this.AB._App;\n         } else {\n            App = {\n               uuid: this.AB.Webix.uid(),\n\n               /*\n                * AB\n                * the {ABFactory} for our interface.\n                */\n               AB: this.AB,\n\n               /*\n                * actions:\n                * a hash of exposed application methods that are shared among our\n                * components, so one component can invoke an action that updates\n                * another component.\n                */\n               actions: {},\n\n               /*\n                * config\n                * webix configuration settings for our current browser\n                */\n               config: this.AB.UISettings.config(),\n\n               /*\n                * custom\n                * a collection of custom components for this App Instance.\n                */\n               custom: null,\n\n               /*\n                * Icons\n                * this will provide you with the list of avaialbe font awesome 4.7.0 icons to use in interface building\n                */\n               icons: this.AB.UISettings.icons,\n\n               Label: L,\n\n               /*\n                * labels\n                * a collection of labels that are common for the Application.\n                */\n               labels: {\n                  add: L(\"Add\"),\n                  create: L(\"Create\"),\n                  delete: L(\"Delete\"),\n                  edit: L(\"Edit\"),\n                  export: L(\"Export\"),\n                  formName: L(\"Name\"),\n                  import: L(\"Import\"),\n                  rename: L(\"Rename\"),\n                  ok: L(\"Ok\"),\n\n                  cancel: L(\"Cancel\"),\n                  save: L(\"Save\"),\n\n                  yes: L(\"Yes\"),\n                  no: L(\"No\"),\n\n                  none: L(\"None\"),\n                  close: L(\"Close\"),\n\n                  default: L(\"Default\"),\n                  defaultPlaceholder: L(\"Enter default value\"),\n\n                  disable: L(\"Disable\"),\n\n                  required: L(\"Required\"),\n                  unique: L(\"Unique\"),\n\n                  invalidMessage: {\n                     required: L(\"This field is required\"),\n                  },\n\n                  createErrorMessage: L(\"System could not create <b>{0}</b>.\"),\n                  createSuccessMessage: L(\"<b>{0}</b> is created.\"),\n\n                  updateErrorMessage: L(\"System could not update <b>{0}</b>.\"),\n                  updateSucessMessage: L(\"<b>{0}</b> is updated.\"),\n\n                  deleteErrorMessage: L(\"System could not delete <b>{0}</b>.\"),\n                  deleteSuccessMessage: L(\"<b>{0}</b> is deleted.\"),\n\n                  renameErrorMessage: L(\"System could not rename <b>{0}</b>.\"),\n                  renameSuccessMessage: L(\"<b>{0}</b> is renamed.\"),\n\n                  // Data Field  common Property labels:\n                  dataFieldHeaderLabel: L(\"Section Title\"),\n                  dataFieldHeaderLabelPlaceholder: L(\"Section Name\"),\n\n                  dataFieldLabel: L(\"Label\"),\n                  dataFieldLabelPlaceholder: L(\"Label\"),\n\n                  dataFieldColumnName: L(\"Field Name\"),\n                  dataFieldColumnNamePlaceholder: L(\"Database field name\"),\n\n                  dataFieldShowIcon: L(\"show icon?\"),\n\n                  componentDropZone: L(\"add widgets here\"),\n               },\n\n               /*\n                * unique()\n                * A function that returns a globally unique Key.\n                * @param {string} key   The key to modify and return.\n                * @return {string}\n                */\n               unique: function (key) {\n                  return `${key}${this.uuid}`;\n               },\n            };\n            this.AB._App = App;\n         }\n      }\n\n      if (!App.custom) {\n         if (!this.AB.custom) {\n            var componentManager = new CustomComponentManager();\n            componentManager.initComponents(App);\n         } else {\n            App.custom = this.AB.custom;\n         }\n      }\n\n      this.App = App;\n\n      this.idBase = idBase || \"?idbase?\";\n   }\n\n   actions(_actions) {\n      console.error(\"!!! REFACTOR out .actions()\");\n      if (_actions) {\n         for (var a in _actions) {\n            this.App.actions[a] = _actions[a];\n         }\n      }\n   }\n\n   Label() {\n      return (...params) => {\n         // console.error(\"!! App.label() depreciated.\");\n         return this.AB.Multilingual.label(...params);\n      };\n   }\n\n   unique(key) {\n      return this.App.unique(`${this.idBase}_${key}`);\n   }\n};\n","const ABObjectQuery = require(\"./ABObjectQuery\");\nconst ABDataCollectionCore = require(\"../core/ABDataCollectionCore\");\n\nmodule.exports = class ABDataCollection extends ABDataCollectionCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      this.setMaxListeners(0);\n      this.blacklistLoadData = {};\n      // { key : ?? }\n      // keep track of previous loadData() calls that might not\n      // have fully completed yet. We don't want to get in a\n      // race condition where we keep trying to load the same frame\n      // over and over again.\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABDataCollection with it's parent\n    *\n    *\n    * @return {Promise}\n    *       .resolve( {this} )\n    */\n   async save() {\n      if (!this.id) {\n         this.label = this.label || this.name;\n      }\n      await super.save();\n      this.AB.emit(\"ab.datacollection.update\", {\n         datacollectionId: this.id,\n      });\n      return this;\n   }\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n      var L = this.AB.Label();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.datacollections((o) => {\n            return (\n               o.id != this.id &&\n               o.name.toLowerCase() == this.name.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L('Name must be unique (\"{0}\" already in use)', [this.name])\n         );\n      }\n\n      return validator;\n   }\n\n   ///\n   /// Cursor\n   ///\n\n   /**\n    * currentUserUsername\n    * must return the proper value for the current user that would match a \"user\" field\n    * in an object.\n    * This is platform dependent, so must be implemented by a child object.\n    * @return {string}\n    */\n   currentUserUsername() {\n      return this.AB.Account.username();\n   }\n\n   ///\n   /// Data\n   ///\n\n   init() {\n      // prevent initialize many times\n      if (this.initialized) return;\n      // this.initialized = true;  // <<---- DO NOT SET THIS HERE\n\n      super.init();\n\n      //// Now connect our platform hub to our Object Triggers:\n\n      // events\n      [\n         \"ab.datacollection.create\",\n         \"ab.datacollection.update\",\n         \"ab.datacollection.stale\",\n         \"ab.datacollection.delete\",\n      ].forEach((key) => {\n         this.AB.on(key, (data) => {\n            this.emit(key, data);\n         });\n      });\n\n      this.bindParentDc();\n   }\n\n   bindParentDc() {\n      // if we pass the master datacollection and the field it is linked to\n      // we want to bind it with that field as second param so dataFeed is\n      // used on the slave datacollection\n      let dataCollectionLink = this.datacollectionLink;\n      let fieldLink = this.fieldLink;\n      if (!this.settings.loadAll && dataCollectionLink && fieldLink) {\n         let dc = this.__dataCollection;\n         // the second param is the field id we bind the data to the master with\n         dc.bind(dataCollectionLink.__dataCollection, fieldLink.id);\n         // defining dataFeed allows us to query the database when the table is scrolled\n         dc.define(\"dataFeed\", (value, params) => {\n            let cursorUpdated = false;\n            // check if the current cursor was updated\n            if (dc.__prevLinkDcCursor != value) {\n               cursorUpdated = true;\n            }\n\n            dc.__prevLinkDcCursor = this?.datacollectionLink?.getCursor()?.id;\n\n            // NOTE: If no cursor of the parent DC, then show empty list\n            if (\n               this.datacollectionLink &&\n               value == null &&\n               dc.__prevLinkDcCursor == null\n            ) {\n               this.clearAll();\n            }\n            // this is the same item that was already bound...don't reload data\n            else if (cursorUpdated) {\n               // now that we have the modified wheres the dataCollections wheres\n               // need to be modified for subsequent loads on scroll so lets set them\n               // this.reloadWheres(wheres);\n\n               // reload data\n               this.reloadData(0, 20);\n            }\n         });\n      }\n   }\n\n   loadData(start, limit = 20) {\n      console.log(`loadData: ${start}, ${limit}`);\n      return super.loadData(start, limit).catch((err) => {\n         // hideProgressOfComponents() is a platform specific action.\n         this.hideProgressOfComponents();\n         this.emit(\"loadData\", {});\n\n         // propagate the error here:\n         if (err) {\n            throw err;\n         }\n      });\n   }\n\n   /**\n    * processIncomingData()\n    * is called from loadData() once the data is returned.  This method\n    * allows the platform to make adjustments to the data based upon any\n    * platform defined criteria.\n    * @param {obj} data  the data as it was returned from the Server\n    *        which should be in following format:\n    *        {\n    *          status: \"success\", // or \"error\"\n    *          data:[ {ABObjectData}, {ABObjectData}, ...]\n    *        }\n    */\n   processIncomingData(data) {\n      // Web Platform:\n\n      // data check:\n      if (data.data && !Array.isArray(data.data)) {\n         data.data = [data.data];\n      }\n\n      // standardize the heights\n\n      /*\n       // In v2: we move the row height calculation into the Interface designer.\n       //\n\n      // calculate default value of $height of rows\n      let obj = this.datasource;\n      let defaultHeight = 0;\n      let minHeight = 0;\n      let imageFields = obj.fields((f) => f.key == \"image\");\n      let hiddenFields = obj.objectWorkspace.hiddenFields;\n      imageFields.forEach(function (f) {\n         if (hiddenFields.indexOf(f.columnName) == -1) {\n            if (\n               parseInt(f.settings.useHeight) == 1 &&\n               parseInt(f.settings.imageHeight) > minHeight\n            ) {\n               minHeight = parseInt(f.settings.imageHeight) + 20;\n            } else {\n               minHeight = 100;\n            }\n         }\n      });\n      if (minHeight > 0) {\n         defaultHeight = minHeight;\n      }\n\n      (data.data || []).forEach((d) => {\n         // define $height of rows to render in webix elements\n         if (\n            d.properties != null &&\n            d.properties.height != \"undefined\" &&\n            parseInt(d.properties.height) > 0\n         ) {\n            d.$height = parseInt(d.properties.height);\n         } else if (defaultHeight > 0) {\n            d.$height = defaultHeight;\n         }\n      });\n      */\n\n      return super.processIncomingData(data).then(() => {\n         // Web Platform:\n         // when that is done:\n         this.hideProgressOfComponents();\n      });\n   }\n\n   ///\n   /// Components\n   ///\n\n   /**\n    * @method attachFlexlayout\n    *\n    *\n    * @param {Object} component - a webix flexlayout element instance\n    */\n   attachFlexlayout(component) {\n      var dc = this.__dataCollection;\n\n      // prevent attach many times\n      if (this.__flexComponentIds.indexOf(component.config.id) > -1) {\n         return;\n      } else {\n         // keep component id to an array\n         this.__flexComponentIds.push(component.config.id);\n      }\n   }\n\n   /**\n    * @method bind\n    *\n    *\n    * @param {Object} component - a webix element instance\n    */\n   bind(component) {\n      var dc = this.__dataCollection;\n\n      // prevent bind many times\n      // keep component id to an array\n      if (this.__bindComponentIds.indexOf(component.config.id) === -1)\n         this.__bindComponentIds.push(component.config.id);\n\n      if ($$(component.config.id).data?.find?.({}).length > 0) return;\n\n      if (\n         component.config.view == \"datatable\" ||\n         component.config.view == \"dataview\" ||\n         component.config.view == \"treetable\" ||\n         component.config.view == \"kanban\"\n      ) {\n         if (dc) {\n            var items = dc.count();\n            if (\n               items == 0 &&\n               (this._dataStatus == this.dataStatusFlag.notInitial ||\n                  this._dataStatus == this.dataStatusFlag.initializing) &&\n               component.showProgress\n            ) {\n               component.showProgress({ type: \"icon\" });\n            }\n\n            component.define(\"datafetch\", 20);\n            component.define(\"datathrottle\", 500);\n\n            // initial data of treetable\n            if (component.config.view == \"treetable\") {\n               if (\n                  this.datasource &&\n                  this.datasource.isGroup &&\n                  this.__treeCollection\n               ) {\n                  component.define(\"data\", this.__treeCollection);\n                  component.refresh();\n               } else {\n                  // NOTE: tree data does not support dynamic loading when scrolling\n                  // https://forum.webix.com/discussion/3078/dynamic-loading-in-treetable\n                  component.define(\"data\", []);\n                  component.parse(dc.find({}));\n               }\n            } else {\n               component.data.sync(dc);\n            }\n\n            // Implement .onDataRequest for paging loading\n            if (!this.settings.loadAll) {\n               component.___AD = component.___AD || {};\n               // if (component.___AD.onDataRequestEvent) component.detachEvent(component.___AD.onDataRequestEvent);\n               if (!component.___AD.onDataRequestEvent) {\n                  component.___AD.onDataRequestEvent = component.attachEvent(\n                     \"onDataRequest\",\n                     (start, count) => {\n                        if (component.showProgress)\n                           component.showProgress({ type: \"icon\" });\n\n                        // load more data to the data collection\n                        dc.loadNext(count, start);\n\n                        return false; // <-- prevent the default \"onDataRequest\"\n                     }\n                  );\n               }\n\n               // // NOTE : treetable should use .parse or TreeCollection\n               // // https://forum.webix.com/discussion/1694/tree-and-treetable-using-data-from-datacollection\n               // if (\n               //    component.config.view == \"treetable\" &&\n               //    !this.datasource.isGroup\n               // ) {\n               //    component.___AD = component.___AD || {};\n               //    if (!component.___AD.onDcLoadData) {\n               //       component.___AD.onDcLoadData = () => {\n               //          component.parse(dc.find({}));\n               //       };\n\n               //       this.on(\"loadData\", component.___AD.onDcLoadData);\n               //    }\n               // }\n            }\n         } else {\n            component.data.unsync();\n         }\n      } else if (component.bind) {\n         if (dc) {\n            // Do I need to check if there is any data in the collection before binding?\n            component.bind(dc);\n         } else {\n            component.unbind();\n         }\n\n         if (component.refresh) component.refresh();\n      }\n   }\n\n   unbind(component) {\n      if (!component) return;\n\n      component.detachEvent(\"onDataRequest\");\n      if (component.___AD) {\n         if (component.___AD.onDataRequestEvent)\n            delete component.___AD.onDataRequestEvent;\n\n         if (component.___AD.onDcLoadData) {\n            if (this.off) this.off(\"loadData\", component.___AD.onDcLoadData);\n            delete component.___AD.onDcLoadData;\n         }\n      }\n\n      if (component.data && component.data.unsync) {\n         component.data.unsync();\n         component.define(\"data\", []);\n      }\n\n      if (component.unbind) component.unbind();\n\n      if (component.refresh) component.refresh();\n\n      // remove from array\n      this.__bindComponentIds = (this.__bindComponentIds || []).filter(\n         (id) => id != component.config.id\n      );\n   }\n\n   hideProgressOfComponents() {\n      this.__bindComponentIds.forEach((comId) => {\n         if ($$(comId) && $$(comId).hideProgress) $$(comId).hideProgress();\n      });\n   }\n\n   /** Private methods */\n\n   /**\n    * @method _dataCollectionNew\n    * Get webix.DataCollection\n    *\n    * @return {webix.DataCollection}\n    *\n    * @param {Array} data - initial data\n    */\n   _dataCollectionNew(data) {\n      // get a webix data collection\n      let dc = new webix.DataCollection({\n         data: data || [],\n      });\n\n      this._extendCollection(dc);\n\n      return dc;\n   }\n\n   /**\n    * @method _treeCollectionNew\n    * Get webix.TreeCollection\n    *\n    * @return {webix.TreeCollection}\n    *\n    */\n   _treeCollectionNew() {\n      // get a webix data collection\n      let treeStore = new webix.TreeCollection();\n\n      this._extendCollection(treeStore);\n\n      return treeStore;\n   }\n\n   _extendCollection(dataStore) {\n      // Apply this data collection to support multi-selection\n      // https://docs.webix.com/api__refs__selectionmodel.html\n      webix.extend(dataStore, webix.SelectionModel);\n\n      dataStore.___AD = dataStore.___AD || {};\n\n      // Implement .onDataRequest for paging loading\n      if (!this.settings.loadAll) {\n         if (!dataStore.___AD.onDataRequestEvent) {\n            dataStore.___AD.onDataRequestEvent = dataStore.attachEvent(\n               \"onDataRequest\",\n               (start, count) => {\n                  if (start < 0) start = 0;\n\n                  // since the where clause can change if we are following\n                  // another cursor, include the where as part of the key:\n                  let [where] = this.getWhereClause(start, 0);\n                  let key = `${JSON.stringify(where)}-${start}-${count}`;\n                  if (this.blacklistLoadData[key]) {\n                     return false;\n                  }\n                  this.blacklistLoadData[key] = true;\n                  // load more data to the data collection\n                  this.loadData(start, count).finally(() => {\n                     // remove from blacklist\n                     delete this.blacklistLoadData[key];\n                  });\n\n                  return false; // <-- prevent the default \"onDataRequest\"\n               }\n            );\n         }\n\n         if (!dataStore.___AD.onAfterLoadEvent) {\n            dataStore.___AD.onAfterLoadEvent = dataStore.attachEvent(\n               \"onAfterLoad\",\n               () => {\n                  this.emit(\"loadData\", {});\n               }\n            );\n         }\n      }\n\n      // override unused functions of selection model\n      dataStore.addCss = function () {};\n      dataStore.removeCss = function () {};\n      dataStore.render = function () {};\n\n      if (!dataStore.___AD.onAfterLoad) {\n         dataStore.___AD.onAfterLoad = dataStore.attachEvent(\n            \"onAfterLoad\",\n            () => {\n               this.hideProgressOfComponents();\n            }\n         );\n      }\n   }\n\n   parseTreeCollection(data = {}) {\n      if (\n         !(this.__datasource instanceof ABObjectQuery) ||\n         !this.__datasource.isGroup ||\n         !this.__treeCollection\n      )\n         return;\n\n      let addRowToTree = (join = {}, parentAlias = null) => {\n         let alias = join.alias;\n\n         (data.data || []).forEach((row) => {\n            let dataId = row[`${alias}.uuid`] || row[`${alias}.id`];\n            if (!dataId) return;\n\n            // find parent nodes\n            let parentItemIds = [];\n            let parentId =\n               row[`${parentAlias}.uuid`] || row[`${parentAlias}.id`];\n            if (parentId) {\n               parentItemIds = this.__treeCollection\n                  .find(\n                     (item) =>\n                        item._alias == parentAlias && item._dataId == parentId\n                  )\n                  .map((item) => item.id);\n            }\n\n            // check exists\n            let exists = this.__treeCollection.find((item) => {\n               return (\n                  item._alias == alias &&\n                  item._dataId == dataId &&\n                  (parentItemIds.length == 0 ||\n                     parentItemIds.indexOf(item.$parent) > -1)\n               );\n            }, true);\n            if (exists) return;\n\n            let treeNode = {};\n            treeNode._alias = alias;\n            treeNode._dataId = dataId;\n            treeNode._itemId = row.id; // Keep row id for set cursor to data collection\n\n            Object.keys(row).forEach((propName) => {\n               // Pull value from alias\n               if (propName.indexOf(`${alias}.`) == 0) {\n                  treeNode[propName] = row[propName];\n               }\n            });\n\n            if (row.translations) treeNode.translations = row.translations;\n\n            // child nodes\n            if (parentItemIds.length > 0)\n               parentItemIds.forEach((parentItemId) => {\n                  this.__treeCollection.add(treeNode, null, parentItemId);\n               });\n            // root node\n            else this.__treeCollection.add(treeNode, null);\n         });\n\n         // Sub-joins\n         (join.links || []).forEach((link) => {\n            addRowToTree(link, alias);\n         });\n      };\n\n      // Show loading cursor\n      (this.__bindComponentIds || []).forEach((comId) => {\n         //// Webix Command here:\n         let boundComp = $$(comId);\n         if (boundComp && boundComp.showProgress)\n            boundComp.showProgress({ type: \"icon\" });\n\n         if (boundComp.data && boundComp.data.unsync) boundComp.data.unsync();\n      });\n\n      addRowToTree(this.__datasource.joins());\n\n      // Hide loading cursor\n      (this.__bindComponentIds || []).forEach((comId) => {\n         let boundComp = $$(comId);\n         if (boundComp && boundComp.hideProgress) boundComp.hideProgress();\n         boundComp.define(\"data\", this.__treeCollection);\n      });\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.datasource) {\n         this.warningsMessage(`doesn't have a datasource.`);\n      } else if (this.linkDatacollectionID) {\n         const linkDC = this.AB.datacollectionById(this.linkDatacollectionID);\n\n         if (!linkDC)\n            this.warningsMessage(\n               `can't resolve linkDatacollectionID[${this.linkDatacollectionID}]`\n            );\n      }\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Datacollection[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   get userScopes() {\n      return this.AB.Account.scopes();\n   }\n};\n","var ABDefinitionCore = require(\"../core/ABDefinitionCore\");\n\nmodule.exports = class ABDefinition extends ABDefinitionCore {\n   // constructor(attributes, AB) {\n   //    super(attributes, AB);\n   // }\n};\n","/**\n * ABEmitter\n *\n * This is the platform dependent implementation of an Emitter object.\n *\n */\n\nvar EventEmitter = require(\"events\").EventEmitter;\n\nmodule.exports = class ABEmitter extends EventEmitter {\n   constructor() {\n      super(/*{ maxListeners: 0 }*/);\n   }\n};\n","const ABHintCore = require(\"../core/ABHintCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABHint extends ABHintCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // listen\n      // this.AB.on(\"ab.abprocess.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy(App) {\n      // debugger;\n      // remove all my Elements\n      var allSteps = this.steps();\n      var allDestroy = [];\n      allSteps.forEach((e) => {\n         allDestroy.push(e.destroy());\n      });\n      // remove reference on App and View\n      let hintIndex = App.hintIDs.indexOf(this.id);\n      if (hintIndex > -1) {\n         App.hintIDs.splice(hintIndex, 1);\n         App.save();\n      }\n\n      let view = App.views((v) => {\n         return v.id == this.settings.view;\n      })[0];\n\n      if (view) {\n         delete view.settings.hintID;\n         view.save();\n      }\n\n      return Promise.all(allDestroy).then(() => {\n         // now remove myself\n         return new Promise((resolve, reject) => {\n            this.toDefinition()\n               .destroy()\n               .then(() => {\n                  webix.message({\n                     text: L(\"Tutorial Deleted\"),\n                     type: \"success\",\n                     expire: 3000,\n                  });\n                  resolve();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n      });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *                .resolve( {this} )\n    */\n   save() {\n      return this.toDefinition()\n         .save()\n         .then((data) => {\n            // if I didn't have an .id then this was a create()\n            // and I need to update my data with the generated .id\n\n            if (!this.id) {\n               this.id = data.id;\n            }\n            return this;\n         });\n   }\n\n   isValid() {\n      // debugger;\n      return true;\n      // var validator = this.AB.Validation.validator();\n\n      // // label/name must be unique:\n      // var isNameUnique =\n      //    this.AB.processes((o) => {\n      //       return o.name.toLowerCase() == this.name.toLowerCase();\n      //    }).length == 0;\n      // if (!isNameUnique) {\n      //    validator.addError(\n      //       \"name\",\n      //       L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n      //    );\n      // }\n\n      // return validator;\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // debugger;\n      // report both OUR warnings, and any warnings from any of our fields\n      // var allWarnings = [].concat(this._warnings);\n      // this.elements().forEach((e) => {\n      //    e.warningsEval();\n      //    allWarnings = allWarnings.concat(e.warnings());\n      // });\n      // if (this.elements().length == 0) {\n      //    allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      // }\n      // // perform a check of our xml document to see if we have any unknown\n      // // shapes\n      // if (!this._DOMParser) {\n      //    if (window.DOMParser) {\n      //       // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n      //       this._DOMParser = function (xmlStr) {\n      //          return new window.DOMParser().parseFromString(\n      //             xmlStr,\n      //             \"text/xml\"\n      //          );\n      //       };\n      //    } else if (\n      //       typeof window.ActiveXObject != \"undefined\" &&\n      //       new window.ActiveXObject(\"Microsoft.XMLDOM\")\n      //    ) {\n      //       this._DOMParser = function (xmlStr) {\n      //          var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n      //          xmlDoc.async = \"false\";\n      //          xmlDoc.loadXML(xmlStr);\n      //          return xmlDoc;\n      //       };\n      //    } else {\n      //       throw new Error(\"No XML parser found\");\n      //    }\n      // }\n      // // find any references to our generic shapes\n      // let xml = this._DOMParser(this.xmlDefinition);\n      // const genericShapes = [\n      //    \"bpmn2:startEvent\",\n      //    \"bpmn2:task\",\n      //    \"bpmn2:endEvent\",\n      // ];\n      // genericShapes.forEach((s) => {\n      //    let allElements = xml.getElementsByTagName(s);\n      //    for (let x = 0; x < allElements.length; x++) {\n      //       // if we don't know about this shape\n      //       let ele = allElements[x];\n      //       let myEle = this.elementForDiagramID(allElements[x].id);\n      //       if (!myEle) {\n      //          this.unknownShape(allElements[x]);\n      //       }\n      //    }\n      // });\n      // // if any unknown shapes have been reported:\n      // if (this._unknownShapes.length) {\n      //    allWarnings.push({\n      //       message: \"Generic Tasks still undefined.\",\n      //       data: {},\n      //    });\n      // }\n      //\n      // return allWarnings;\n   }\n\n   createHintUI() {\n      // if already loaded skip\n      if ($$(this.id)) return;\n\n      let steps = [];\n      let next = 0;\n      let display = webix.storage.cookie.get(this.id);\n      if (display?.hide) return;\n      let dontShow = `<label class=\"dontShow\">\n                        <input onclick=\"webix.storage.cookie.put(this.dataset.hintId, {'hide': this.checked});\" data-hint-id=\"${\n                           this.id\n                        }\" type=\"checkbox\">\n                        ${L(\"Don't show this again.\")}\n                     </label>`;\n      this.stepIDs.forEach((step) => {\n         next++;\n         let newStep = {};\n         newStep.id = this._steps[step].id;\n         newStep.el = this._steps[step].settings.el;\n         newStep.event = this._steps[step].settings.event;\n         newStep.title = this._steps[step].name;\n         newStep.text = this._steps[step].text + dontShow;\n         if (this.stepIDs[next]) {\n            newStep.nextEl = this._steps[this.stepIDs[next]].settings.el;\n            if (newStep.nextEl) {\n               newStep.hintId = this.id;\n               newStep.eventEl = \"button\"; // added this so we do not trigger a second advance on the hint when triggering the click below\n               newStep.next = function (event) {\n                  let nextEl = this.nextEl;\n                  let theNextEl = document.querySelector(nextEl);\n                  if (theNextEl && theNextEl.checkVisibility()) {\n                     return false;\n                  } else {\n                     document.querySelector(this.el).click();\n                     return false;\n                  }\n               };\n            }\n         }\n         if (newStep.el) steps.push(newStep);\n      });\n\n      let ui = {\n         view: \"hint\",\n         id: this.id,\n         steps: steps,\n         on: {\n            onNext: (step) => {\n               setTimeout(() => {\n                  const boxes = document.querySelectorAll(\n                     \"input[data-hint-id='\" + this.id + \"']\"\n                  );\n                  let display = webix.storage.cookie.get(this.id);\n                  boxes.forEach((b) => {\n                     b.checked = display?.hide || false;\n                  });\n               }, 100);\n            },\n            onPrevious: (step) => {\n               setTimeout(() => {\n                  const boxes = document.querySelectorAll(\n                     \"input[data-hint-id='\" + this.id + \"']\"\n                  );\n                  let display = webix.storage.cookie.get(this.id);\n                  boxes.forEach((b) => {\n                     b.checked = display?.hide || false;\n                  });\n               }, 100);\n            },\n         },\n      };\n\n      webix.delay(\n         () => {\n            try {\n               webix.ui(ui).start();\n            } catch (err) {\n               this.AB.notify.developer(err, {\n                  context:\n                     \"ABHint.createUIHint() error calling webix.ui(ui).start()\",\n                  ui,\n               });\n            }\n         },\n         null,\n         null,\n         2000\n      );\n\n      // $$(this.id);\n   }\n};\n","const ABIndexCore = require(\"../core/ABIndexCore\");\n\nmodule.exports = class ABIndex extends ABIndexCore {\n   // constructor(attributes, object) {\n   //    super(attributes, object);\n   // }\n\n   /**\n    * @method save()\n    * persist this instance of ABIndex with it's parent ABObject\n    * @return {Promise}\n    */\n   save() {\n      return super\n         .save()\n         .then(() => this.object.indexSave(this))\n         .then(() => this.migrateCreate());\n   }\n\n   /**\n    * @method destroy()\n    * destroy the current instance of ABIndex\n    * also remove it from our parent ABObject\n    * @return {Promise}\n    */\n   destroy() {\n      return new Promise((resolve, reject) => {\n         if (this.id) {\n            this.migrateDrop()\n               .then(() => {\n                  return super.destroy();\n               })\n               .then(() => this.object.indexRemove(this))\n               .then(resolve)\n               .catch(reject);\n         } else {\n            resolve();\n         }\n      });\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this._unknownFieldIDs || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown field id[${id}]`);\n      });\n\n      if (this.fields.length == 0) {\n         this.warningsMessage(`is not referencing any fields`);\n      }\n   }\n\n   /**\n    * @method warningsMessage()\n    * generate a commonly formatted warning message for this ABField.\n    * This is expected to be called from within a .warningsEval()\n    * method when generating warnings.\n    * @param {string} msg\n    *        the warning string to display\n    * @param {json} data\n    *        any relevant additional information for a developer to refer to.\n    */\n   warningsMessage(msg, data = {}) {\n      let message = `Index[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return this.AB.Network.post({\n         url: `/definition/migrate/object/${this.object.id}/index/${this.id}`,\n         // data: this.toObj(),\n      });\n   }\n\n   migrateDrop() {\n      return this.AB.Network[\"delete\"]({\n         url: `/definition/migrate/object/${this.object.id}/index/${this.id}`,\n      });\n   }\n};\n","/**\n * ABMLClass\n * manage the multilingual information of an instance of a AB Defined Class.\n *\n * these classes have certain fields (\"label\", \"description\"), that can be\n * represented in different language options as defined by our platform.\n *\n * This platform ABMLClass will define 2 methods that allow for the translation\n * untranslation of this data.\n */\nvar ABMLClassCore = require(\"../core/ABMLClassCore\");\n\nmodule.exports = class ABMLClass extends ABMLClassCore {\n   constructor(fieldList, AB) {\n      super(fieldList, AB);\n\n      this._warnings = [];\n      // {array}\n      // an array of warning messages for this object.\n      // each warning entry should be in the format:\n      // WarningMessage: {\n      //    message: {string} \"message to display\"\n      //    data: {json} additional debugging information\n      // }\n   }\n\n   // fromValues(attributes) {\n   //    super.fromValues(attributes);\n   // }\n\n   /**\n    * @method warnings()\n    * returns the stored warnings for this ONE object.\n    * @return {array} WarningMessage\n    */\n   warnings() {\n      return this._warnings;\n   }\n\n   /**\n    * @method warningsEval()\n    * This method causes an object to re-evaluate it's settings to see if there\n    * are any potential errors.\n    */\n   warningsEval() {\n      this._warnings = [];\n   }\n\n   /**\n    * @method warningsAll()\n    * returns all relevant warnings for the current Object. This includes any\n    * sub fields, links, views, etc...\n    * @return {array} warning structures\n    *          [ {WarningMessage}, ... ]\n    */\n   warningsAll() {\n      return this.warnings();\n   }\n\n   /**\n    * @method languageDefault\n    * return a default language code.\n    * @return {string}\n    */\n   languageDefault() {\n      return this.AB.Account.language() || \"en\";\n   }\n\n   /**\n    * @method destroy()\n    * remove this definition.\n    * @return {Promise}\n    */\n   async destroy() {\n      var def = this.toDefinition();\n      if (def.id) {\n         return def.destroy().catch((err) => {\n            if (err.toString().indexOf(\"No record found\") > -1) {\n               // this is weird, but not breaking:\n               console.log(\n                  `ABMLClass.destroy(): could not find record for id[${def.id}]`\n               );\n               console.log(def);\n               return;\n            }\n            throw err;\n         });\n      }\n      return Promise.resolve();\n   }\n\n   /**\n    * @method save()\n    * persist this definition of our {ABxxx} Object\n    * @return {Promise}\n    */\n   async save() {\n      var def = this.toDefinition();\n      // if not name, try to use our label as the name\n      def.name = def.name || this.name || this.label || \"name\";\n      var data = await def.save();\n      if (!this.id) {\n         this.id = data.id;\n      }\n   }\n};\n","const ABModelCore = require(\"../core/ABModelCore\");\n\n//\n// ABModel\n//\n// Represents the Data interface for an ABObject data.\n//\n// 2 ways to use an ABModel to load a DataTable:\n// \tMethod 1:\n// \tgather all the data externally and send to the DataTable\n//\t\tModel.findAll()\n//\t\t.then((data)=>{\n//\t\t\tDataTable.parse(data);\n//\t\t})\n//\n// \tMethod 2:\n// \tSet the Model object with a condition / skip / limit, then\n// \tuse it to load the DataTable:\n//\t\tModel.where({})\n//\t\t.skip(XX)\n//\t\t.limit(XX)\n//\t\t.loadInto(DataTable);\n\nfunction errorPopup(error) {\n   // Show the pop up\n   if (error && error.data && error.data.error == \"READONLY\") {\n      webix.alert({\n         title: \"Your action is blocked\",\n         ok: \"Ok\",\n         text: error.data.message || \"\",\n         type: \"alert-warning\",\n      });\n   }\n}\n\n/*\n * @function no_socket_trigger()\n * a common routine to trigger an update.\n * In the case where our AB.Network.type() isn't a socket implementation\n * we need to manually trigger the expected socket events ourselves.\n * This fn() attempts to simulate the socket responses in such a case.\n * @param {ABModel} model\n *        The ABModel currently processing the network transaction.\n * @param {string} key\n *        The socket update trigger we are simulating.\n * @param {json} data\n *        The relevant response from our network transaction.\n */\nfunction no_socket_trigger(model, key, data) {\n   // If we do not have socket updates available, then trigger an\n   // update event with this data.\n   if (model.AB.Network.type() != \"socket\") {\n      model.AB.emit(key, {\n         objectId: model.object.id,\n         data,\n      });\n   }\n}\n\nmodule.exports = class ABModel extends ABModelCore {\n   constructor(object) {\n      super(object);\n\n      this.handler_create = (...params) => {\n         this.handler_common(\"ab.datacollection.create\", ...params);\n      };\n\n      this.handler_delete = (...params) => {\n         this.handler_common(\"ab.datacollection.delete\", ...params);\n      };\n\n      this.handler_findAll = (...params) => {\n         this.handler_common(null, ...params);\n      };\n\n      this.handler_logs = (context, err, data) => {\n         if (err) {\n            context.reject?.(err);\n            return;\n         }\n         context.resolve?.(data);\n      };\n\n      this.handler_update = (...params) => {\n         this.handler_common(\"ab.datacollection.update\", ...params);\n      };\n\n      this.handler_common = (key, context, err, data) => {\n         // key: {string} the relevant socket event key\n         //      can be null if not relevant.\n         // context : {obj} any provided context data provided on the\n         //           this.AB.Network.get() call.\n         // err: {Error} any returned error message from api\n         // data: {obj} returned data from the model-get api in format:\n         //       {data: [], total_count: 1, pos: 0, offset: 0, limit: 0}\n         if (err) {\n            context.reject?.(err);\n            return;\n         }\n\n         if (this.isCsvPacked(data)) {\n            let lengthPacked = JSON.stringify(data).length;\n            data = this.csvUnpack(data);\n\n            // JOHNNY: getting \"RangeError: Invalid string length\"\n            // when data.data is too large. So we are just going\n            // to .stringify() the rows individually and count the\n            // length of each one.\n\n            let lengthUnpacked = 0;\n            if (Array.isArray(data.data)) {\n               for (var d = 0; d < data.data.length; d++) {\n                  lengthUnpacked += JSON.stringify(data.data[d]).length;\n               }\n            } else {\n               lengthUnpacked += JSON.stringify(data.data).length;\n            }\n\n            Object.keys(data)\n               .filter((k) => k != \"data\")\n               .map((k) => {\n                  lengthUnpacked += `${k}:${data[k]},`.length;\n               });\n\n            lengthUnpacked += 5; // for the brackets\n\n            console.log(\n               `CSV Pack: ${lengthUnpacked} -> ${lengthPacked} (${(\n                  (lengthPacked / lengthUnpacked) *\n                  100\n               ).toFixed(2)}%)`\n            );\n         }\n\n         // let jobID = this.AB.jobID();\n         // console.log(`${jobID} : normalization begin`);\n         // let timeFrom = performance.now();\n         if (key) {\n            // on \"update\" & \"create\" we want to normalizeData()\n            if (key.indexOf(\"delete\") == -1) {\n               // on anything with a key, we shouldn't have data.data\n               data = data.data || data;\n\n               this.normalizeData(data);\n            } else {\n               // triggers to ab.datacollection.delete need to send the .id\n               // of the item deleted:\n               data = data.data || context.id;\n            }\n         } else {\n            // on a findAll we normalize data.data\n            this.normalizeData(data.data);\n         }\n         // let timeTo = performance.now();\n         // console.log(`${jobID} : normalization end:  ${timeTo - timeFrom}ms`);\n\n         context.resolve?.(data);\n\n         // if (key) {\n         //    no_socket_trigger(this, key, data);\n         // }\n      };\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   // Prepare multilingual fields to be untranslated\n   // Before untranslating we need to ensure that values.translations is set.\n   prepareMultilingualData(values) {\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n      // if mlFields are inside of the values saved we want to translate otherwise do not because it will reset the translation field and you may loose unchanged translations\n      var shouldTranslate = false;\n      if (mlFields.length) {\n         mlFields.forEach(function (field) {\n            if (values[field] != null) {\n               shouldTranslate = true;\n            }\n         });\n      }\n      if (shouldTranslate) {\n         if (\n            values.translations == null ||\n            typeof values.translations == \"undefined\" ||\n            values.translations == \"\"\n         ) {\n            values.translations = [];\n         }\n         this.object.unTranslate(values, values, mlFields);\n      }\n   }\n\n   request(method, params) {\n      return this.AB.Network[method](params);\n   }\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      values.batch.map((vals) => {\n         return this.prepareMultilingualData(vals.data);\n      });\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, (context, err, data) => {\n            if (err) {\n               reject(err);\n               return;\n            }\n            this.normalizeData(data);\n            resolve(data);\n            // FIX: now with sockets, the triggers are fired from socket updates.\n            // trigger a create event\n            // triggerEvent('create', this.object, data);\n         });\n\n         this.AB.Network.post(\n            {\n               url: this.object.urlRestBatch(),\n               params: values,\n            },\n            {\n               key: jobID,\n               context: {},\n            }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data);\n\n            //    resolve(data);\n\n            //    // FIX: now with sockets, the triggers are fired from socket updates.\n            //    // trigger a create event\n            //    // triggerEvent('create', this.object, data);\n            // })\n            .catch(reject);\n      });\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   create(values) {\n      this.prepareMultilingualData(values);\n\n      // add default values record if no value is passed for column\n      this.object.fields().forEach((f) => {\n         if (values[f.columnName] === undefined) {\n            f.defaultValue(values);\n         }\n      });\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_create);\n         this.AB.Network.post(\n            {\n               url: this.object.urlRest(),\n               params: values,\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         )\n            .then((newVal) => {})\n            .catch((err) => {\n               errorPopup(err);\n               reject(err);\n            });\n      }).then((newVal) => {\n         no_socket_trigger(this, \"ab.datacollection.create\", newVal);\n         return newVal;\n      });\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_delete);\n         this.AB.Network[\"delete\"](\n            {\n               url: this.object.urlRestItem(id),\n            },\n            {\n               key: jobID,\n               id,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            errorPopup(err);\n            reject(err);\n         });\n      }).then((res) => {\n         // properly issue the delete\n         no_socket_trigger(this, \"ab.datacollection.delete\", id);\n         return res;\n      });\n   }\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   async findAll(cond) {\n      cond = cond || {};\n\n      // scan the rules and convert any is_current_date rules to UTC daytime range.\n      let rules = cond.where?.rules;\n      while (rules?.length) {\n         let nestedRules = [];\n         rules.forEach((rule) => {\n            if (rule.rule === \"is_current_date\")\n               rule.value = this.AB.rules.getUTCDayTimeRange();\n            else if (rule.rules?.length)\n               nestedRules = nestedRules.concat(rule.rules);\n         });\n\n         rules = nestedRules;\n      }\n\n      // \t\t// prepare our condition:\n      // \t\tvar newCond = {};\n\n      // \t\t// if the provided cond looks like our { where:{}, skip:xx, limit:xx } format,\n      // \t\t// just use this one.\n      // \t\tif (cond.where) {\n      // \t\t\tnewCond = cond;\n      // \t\t} else {\n\n      // \t\t\t// else, assume the provided condition is the .where clause.\n      // \t\t\tnewCond.where = cond;\n      // \t\t}\n\n      // /// if this is our depreciated format:\n      // if (newCond.where.where) {\n      // \tOP.Error.log('Depreciated Embedded .where condition.');\n      // }\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_findAll);\n         this.AB.Network.get(\n            {\n               url: this.object.urlRest(),\n               params: cond,\n               // params: newCond\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data.data);\n\n            //    resolve(data);\n            // })\n            .catch((err) => {\n               if (err && err.code) {\n                  switch (err.code) {\n                     case \"ER_PARSE_ERROR\":\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"AppBuilder:ABModel:findAll(): Parse Error with provided condition\",\n                           condition: cond,\n                        });\n                        break;\n\n                     default:\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"AppBuilder:ABModel:findAll(): Unknown Error with provided condition\",\n                           condition: cond,\n                        });\n                        break;\n                  }\n               }\n               reject(err);\n            });\n      });\n   }\n\n   /**\n    * @method loadInto\n    * loads the current values into the provided Webix DataTable\n    * @param {DataTable} DT  A Webix component that can dynamically load data.\n    */\n   loadInto(DT) {\n      // if a limit was applied, then this component should be loading dynamically\n      if (this._limit) {\n         DT.define(\"datafetch\", this._limit);\n         DT.define(\"datathrottle\", 250); // 250ms???\n\n         // catch the event where data is requested:\n         // here we will do our own findAll() so we can persist\n         // the provided .where condition.\n\n         // oh yeah, and make sure to remove any existing event handler when we\n         // perform a new .loadInto()\n         DT.___AD = DT.___AD || {};\n         if (DT.___AD.onDataRequestEvent) {\n            DT.detachEvent(DT.___AD.onDataRequestEvent);\n         }\n         DT.___AD.onDataRequestEvent = DT.attachEvent(\n            \"onDataRequest\",\n            (start, count) => {\n               var cond = {\n                  where: this._where,\n                  sort: this._sort,\n                  limit: count,\n                  skip: start,\n               };\n\n               if (DT.showProgress) DT.showProgress({ type: \"icon\" });\n\n               this.findAll(cond).then((data) => {\n                  /*\n                   // In V2: we move the row height processing into \n                   // the interface designer \n\n                  data.data.forEach((item) => {\n                     if (\n                        item.properties != null &&\n                        item.properties.height != \"undefined\" &&\n                        parseInt(item.properties.height) > 0\n                     ) {\n                        item.$height = parseInt(item.properties.height);\n                     } else if (parseInt(this._where.height) > 0) {\n                        item.$height = parseInt(this._where.height);\n                     }\n                  });\n                  */\n                  DT.parse(data);\n\n                  if (DT.hideProgress) DT.hideProgress();\n               });\n\n               return false; // <-- prevent the default \"onDataRequest\"\n            }\n         );\n\n         DT.refresh();\n      }\n\n      // else just load it all at once:\n      var cond = {};\n      if (this._where) cond.where = this._where;\n      if (this._sort) cond.sort = this._sort;\n      if (this._limit != null) cond.limit = this._limit;\n      if (this._skip != null) cond.skip = this._skip;\n\n      if (DT.showProgress) DT.showProgress({ type: \"icon\" });\n\n      this.findAll(cond)\n         .then((data) => {\n            // v2: we no longer process item $height\n            /*\n            data.data.forEach((item) => {\n               if (\n                  item.properties != null &&\n                  item.properties.height != \"undefined\" &&\n                  parseInt(item.properties.height) > 0\n               ) {\n                  item.$height = parseInt(item.properties.height);\n               } else if (parseInt(this._where.height) > 0) {\n                  item.$height = parseInt(this._where.height);\n               }\n            });\n            */\n\n            DT.parse(data);\n\n            if (DT.hideProgress) DT.hideProgress();\n         })\n         .catch((err) => {\n            console.error(\"!!!!!\", err);\n         });\n   }\n\n   /**\n    * @method logs()\n    * return the log history related to this model's ABObject.\n    * @param {hash} options\n    *        a key=>value hash of optional search criteria\n    *        .rowId {string} the uuid of the individual entry we are querying\n    *        .levelName {string} the type of entry [\"insert\", \"update\", \"delete\"]\n    *        .username {string} the entries associated with the given user\n    *        .startDate {date} entries that happened ON or AFTER this date\n    *        .endDate {date} entries that happened ON or BEFORE this date\n    *        .start {integer} paging control: how many entries to skip\n    *        .limit {integer} paging control: only return this # entries\n    * @return {Promise}\n    */\n   logs(options) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_logs);\n         this.AB.Network.get(\n            {\n               url: this.object.urlRestLog(),\n               params: options,\n               // params: newCond\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            if (err && err.code) {\n               this.AB.notify.developer(err, {\n                  context: \"AppBuilder:ABModel:logs(): Error\",\n                  options,\n               });\n            }\n            reject(err);\n         });\n      });\n   }\n\n   /**\n    * @method limit\n    * set the limit value for this set of data\n    * @param {integer} limit  the number or elements to return in this call\n    * @return {ABModel} this object that is chainable.\n    */\n   limit(limit) {\n      this._limit = limit;\n      return this;\n   }\n\n   /**\n    * @method skip\n    * set the skip value for this set of data\n    * @param {integer} skip  the number or elements to skip\n    * @return {ABModel} this object that is chainable.\n    */\n   skip(skip) {\n      this._skip = skip;\n      return this;\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      this.prepareMultilingualData(values);\n\n      // remove empty properties\n      for (var key in values) {\n         if (values[key] == null) delete values[key];\n      }\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_update);\n         this.AB.Network.put(\n            {\n               url: this.object.urlRestItem(id),\n               params: values,\n            },\n            { key: jobID, context: { resolve, reject } }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data);\n\n            //    resolve(data);\n\n            //    // If we do not have socket updates available, then trigger an\n            //    // update event with this data.\n            //    if (this.AB.Network.type() != \"socket\") {\n            //       this.AB.emit(\"ab.datacollection.update\", {\n            //          objectId: this.object.id,\n            //          data,\n            //       });\n            //    }\n            // })\n            .catch((err) => {\n               errorPopup(err);\n               reject(err);\n            });\n      }).then((newVal) => {\n         // properly issue the update\n         no_socket_trigger(this, \"ab.datacollection.update\", newVal);\n         return newVal;\n      });\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, (context, err /*, data */) => {\n            if (err) {\n               reject(err);\n               return;\n            }\n            // this.normalizeData(data);\n            resolve(true);\n            // what about checking for socket updates?\n         });\n         this.AB.Network.put(\n            {\n               url: this.object.urlRestBatch(),\n               params: {\n                  rowIds,\n                  values,\n               },\n            },\n            { key: jobID, context: {} }\n         )\n            // .then(() => {\n            //    resolve(true);\n            // })\n            .catch(reject);\n      });\n   }\n};\n","//\n// ABModelAPI\n//\n// Represents the Data interface for an ABObjectQuery data.\n\nconst ABModel = require(\"./ABModel\");\n\nmodule.exports = class ABModelAPI extends ABModel {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   async findAll(cond = {}) {\n      cond.isAPI = true;\n      cond.url = this.object?.request?.url;\n\n      return super.findAll(cond);\n   }\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.batchCreate() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   async create(values) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.create() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.delete() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.update() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.batchUpdate() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n};\n","//\n// ABModelAPINetsuite\n//\n// Represents the Data interface for a connection to Netsuite.\n\nconst ABModel = require(\"./ABModel\");\n\nmodule.exports = class ABModelAPINetsuite extends ABModel {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method normalizeData()\n    * For a Netsuite object, there are additional steps we need to handle\n    * to normalize our data.\n    */\n   normalizeData(data) {\n      super.normalizeData(data);\n\n      if (!Array.isArray(data)) {\n         data = [data];\n      }\n\n      var boolFields = this.object.fields((f) => f.key == \"boolean\");\n      let allFields = this.object.fields();\n\n      data.forEach((d) => {\n         // Netsuite sometimes keeps keys all lowercase\n         // which might not match up with what it told us in the meta-catalog\n         // which we need:\n         for (var i = 0; i < allFields.length; i++) {\n            let actualColumn = allFields[i].columnName;\n            let lcColumn = actualColumn.toLowerCase();\n\n            if (\n               typeof d[actualColumn] == \"undefined\" &&\n               typeof d[lcColumn] != \"undefined\"\n            ) {\n               d[actualColumn] = d[lcColumn];\n               delete d[lcColumn];\n            }\n         }\n\n         // Netsuite Booleans are \"T\" or \"F\"\n         boolFields.forEach((bField) => {\n            let val = d[bField.columnName];\n            // just how many ways can a DB indicate True/False?\n            if (typeof val == \"string\") {\n               val = val.toLowerCase();\n\n               if (val === \"t\") val = true;\n               else val = false;\n\n               d[bField.columnName] = val;\n            }\n         });\n      });\n   }\n};\n","//\n// ABModelQuery\n//\n// Represents the Data interface for an ABObjectQuery data.\n\nconst ABModel = require(\"./ABModel\");\n\nmodule.exports = class ABModelQuery extends ABModel {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.batchCreate() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   create(values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.create() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.delete() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.update() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.batchUpdate() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n};\n","const ABObjectCore = require(\"../core/ABObjectCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\n// NOTE: this has been moved to NetworkRestSocket:\n//\n// // Start listening for server events for object updates and call triggerEvent as the callback\n// if (typeof io != \"undefined\") {\n//    io.socket.on(\"ab.object.update\", function (msg) {\n//       AB.emit(\"ab.object.update\", {\n//          objectId: msg.objectId,\n//          data: msg.data,\n//       });\n//    });\n// } else {\n//    console.error(\"TODO: ABObject: configure Socket.io\");\n// }\n\n// io.socket.on(\"ab.object.delete\", function (msg) {\n// });\n\nmodule.exports = class ABObject extends ABObjectCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // listen for our ABFields.\"definition.updated\"\n      this.fields().forEach((f) => {\n         f.on(\"definition.updated\", (field) => {\n            // create a new Field with the updated def\n            var def = this.AB.definitionByID(field.id);\n            if (!def) return;\n\n            var newField = this.AB.fieldNew(def, this);\n\n            // we want to keep the same fieldID order:\n            var newFields = [];\n            this.fields().forEach((f) => {\n               if (f.id === field.id) {\n                  newFields.push(newField);\n                  return;\n               }\n               newFields.push(f);\n            });\n\n            this._fields = newFields;\n         });\n      });\n\n      // listen\n      // this.AB.on(\"ab.object.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n\n      this._pendingNetworkRequests = {};\n      // {hash}   uuid : {Promise}\n      // convert our migrateXXXX() operations to be Relay/offline compatible.\n      // if a queued operation is sent after a web browser refresh, then\n      // we will NOT have a pending promise to .resolve()/.reject()\n\n      this._handler_object_migrate = (context, err, response) => {\n         // NOTE:\n         var pending = this._pendingNetworkRequests?.[context.uuid];\n         if (err) {\n            pending?.reject(err);\n            return;\n         }\n         pending?.resolve(response);\n      };\n      this.AB.Network.on(\"object.migrate\", this._handler_object_migrate);\n   }\n\n   /**\n    * @method refreshInstance()\n    * Used when a definition.updated message is detected on this ABObject.\n    * This method will return a new instance based upon the current definition\n    * and properly resolve any handlers and pending network Requests.\n    * @return {ABObject}\n    */\n   refreshInstance() {\n      var newObj = this.AB.objectByID(this.id);\n\n      // prevent doing this multiple times:\n      if (this._pendingNetworkRequests) {\n         // remove object.migrate listener\n         this.AB.Network.removeListener(\n            \"object.migrate\",\n            this._handler_object_migrate\n         );\n\n         // transfer the pending network requests\n         newObj._pendingNetworkRequests = this._pendingNetworkRequests;\n         this._pendingNetworkRequests = null;\n      }\n\n      return newObj;\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n\t\t{\n\t\t\tid: uuid(),\n\t\t\tname: 'name',\n\t\t\tlabelFormat: 'xxxxx',\n\t\t\tisImported: 1/0,\n\t\t\tisExternal: 1/0,\n\t\t\turlPath:'string',\n\t\t\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t\t\t// to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n\t\t\ttranslations:[\n\t\t\t\t{}\n\t\t\t],\n\t\t\tfields:[\n\t\t\t\t{ABDataField}\n\t\t\t]\n\t\t}\n\t\t*/\n\n      super.fromValues(attributes);\n\n      if (this.workspaceViews) this.workspaceViews.fromObj(attributes);\n   }\n\n   //// TODO: Refactor isValid() to ignore op and not error if duplicateName is own .id\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.objects((o) => {\n            return (\n               o.id != this.id &&\n               o.name.toLowerCase() == this.name.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L('Object name must be unique (\"{0}\" already in use)', [this.name])\n         );\n      }\n\n      // Check the common validations:\n      // TODO:\n      // if (!inputValidator.validate(values.label)) {\n      // \t_logic.buttonSaveEnable();\n      // \treturn false;\n      // }\n\n      return validator;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an array of any invalid\n    * value errors.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   isValidData(data) {\n      var validator = this.AB.Validation.validator();\n      this.fields().forEach((f) => {\n         // check if value was passed, if so validate it\n         if (Object.prototype.hasOwnProperty.call(data, f.columnName))\n            f.isValidData(data, validator);\n      });\n\n      return validator;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fieldNew()\n    *\n    * return an instance of a new (unsaved) ABField that is tied to this\n    * ABObject.\n    *\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    *\n    * @param {obj} values  the initial values for this field.\n    *\t\t\t\t\t\t{ key:'{string}'} is required\n    * @return {ABField}\n    */\n   // fieldNew ( values ) {\n   // \t// NOTE: ABFieldManager returns the proper ABFieldXXXX instance.\n   // \treturn ABFieldManager.newField( values, this );\n   // }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      /*\n        return new Promise((resolve, reject) => {\n            // Remove the import object, then its model will not be destroyed\n            if (this.isImported) {\n                this.application\n                    .objectDestroy(this)\n                    .catch(reject)\n                    .then(() => {\n                        resolve();\n                    });\n\n                return;\n            }\n\n            // OK, some of our Fields have special follow up actions that need to be\n            // considered when they no longer exist, so before we simply drop this\n            // object/table, drop each of our fields and give them a chance to clean up\n            // what needs cleaning up.\n\n            // ==> More work, but safer.\n            var fieldDrops = [];\n            this.fields().forEach((f) => {\n                fieldDrops.push(f.destroy());\n            });\n\n            Promise.all(fieldDrops)\n                .then(() => {\n                    return new Promise((next, err) => {\n                        // now drop our table\n                        // NOTE: our .migrateXXX() routines expect the object to currently exist\n                        // in the DB before we perform the DB operations.  So we need to\n                        // .migrateDrop()  before we actually .objectDestroy() this.\n                        this.migrateDrop()\n                            .then(() => {\n                                // finally remove us from the application storage\n                                return this.application.objectDestroy(this);\n                            })\n                            .then(next)\n                            .catch(err);\n                    });\n                })\n\n                // flag .disable to queries who contains this removed object\n                .then(() => {\n                    return new Promise((next, err) => {\n                        this.application\n                            .queries(\n                                (q) =>\n                                    q.objects((o) => o.id == this.id).length > 0\n                            )\n                            .forEach((q) => {\n                                q._objects = q.objects((o) => o.id != this.id);\n\n                                q.disabled = true;\n                            });\n\n                        next();\n                    });\n                })\n                .then(resolve)\n                .catch(reject);\n        });\n */\n\n      var removeFromApplications = () => {\n         var allRemoves = [];\n         this.AB.applications().forEach((app) => {\n            allRemoves.push(app.objectRemove(this));\n         });\n         return Promise.all(allRemoves);\n      };\n\n      var disableRelatedQueries = () => {\n         return new Promise((next /*, err */) => {\n            this.AB.queries(\n               (q) => q.objects((o) => o.id == this.id).length > 0\n            ).forEach((q) => {\n               // q._objects = q.objects((o) => o.id != this.id);\n\n               q.disabled = true;\n            });\n\n            next();\n         });\n      };\n\n      try {\n         // 1) remove us from all Application:\n         await removeFromApplications();\n\n         // 2) disable any connected Queries\n         await disableRelatedQueries();\n\n         // if an imported Object (FederatedTable, Existing Table, etc...)\n         // then skip this step\n         if (this.isImported) {\n            return Promise.resolve();\n         }\n\n         // time to remove my table:\n         // NOTE: our .migrateXXX() routines expect the object to currently exist\n         // in the DB before we perform the DB operations.  So we need to\n         // .migrateDrop()  before we actually .destroy() this.\n         await this.migrateDrop();\n\n         // now remove my definition\n\n         // start with my fields:\n         var fieldDrops = [];\n\n         // Only ABObjects should attempt any fieldDrops.\n         // ABObjectQueries can safely skip this step:\n         if (this.type == \"object\") {\n            var allFields = this.fields();\n            this._fields = []; // clear our field counter so we don't retrigger\n            // this.save() on each field.destroy();\n\n            allFields.forEach((f) => {\n               fieldDrops.push(f.destroy());\n            });\n         }\n         await Promise.all(fieldDrops);\n\n         await super.destroy();\n         this.emit(\"destroyed\");\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABObject.destroy(): error destroying object.\",\n         });\n      }\n\n      // return Promise.resolve()\n      //    .then(() => {\n      //       // 1) remove us from all Application:\n      //       return removeFromApplications();\n      //    })\n      //    .then(() => {\n      //       // 2) disable any connected Queries\n      //       return disableRelatedQueries();\n      //    })\n      //    .then(() => {\n      //       // if an imported Object (FederatedTable, Existing Table, etc...)\n      //       // then skip this step\n      //       if (this.isImported) {\n      //          return Promise.resolve();\n      //       }\n\n      //       // time to remove my table:\n      //       // NOTE: our .migrateXXX() routines expect the object to currently exist\n      //       // in the DB before we perform the DB operations.  So we need to\n      //       // .migrateDrop()  before we actually .destroy() this.\n      //       return this.migrateDrop();\n      //    })\n      //    .then(() => {\n      //       // now remove my definition\n\n      //       // start with my fields:\n      //       var fieldDrops = [];\n\n      //       // Only ABObjects should attempt any fieldDrops.\n      //       // ABObjectQueries can safely skip this step:\n      //       if (this.type == \"object\") {\n      //          var allFields = this.fields();\n      //          this._fields = []; // clear our field counter so we don't retrigger\n      //          // this.save() on each field.destroy();\n\n      //          allFields.forEach((f) => {\n      //             fieldDrops.push(f.destroy());\n      //          });\n      //       }\n\n      //       return Promise.all(fieldDrops)\n      //          .then(() => {\n      //             // now me.\n      //             return super.destroy();\n      //          })\n      //          .then(() => {\n      //             this.emit(\"destroyed\");\n      //          });\n      //    });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save(skipMigrate = false) {\n      var isAdd = false;\n\n      // if this is our initial save()\n      if (!this.id) {\n         this.label = this.label || this.name;\n         isAdd = true;\n      }\n\n      try {\n         await super.save();\n         if (isAdd && !skipMigrate) {\n            await this.migrateCreate();\n         }\n         return this;\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABObject.save()\",\n            obj: this.toObj(),\n         });\n         throw err;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var result = super.toObj();\n\n      result.objectWorkspaceViews = this.workspaceViews?.toObj();\n\n      return result;\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return new Promise((resolve, reject) => {\n         var uuid = this.AB.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"object.migrate\",\n            context: { uuid, id: this.id },\n         };\n         this.AB.Network.post(\n            {\n               url: `/definition/migrate/object/${this.id}`,\n            },\n            jobResponse\n         );\n      });\n   }\n\n   migrateDrop() {\n      return new Promise((resolve, reject) => {\n         var uuid = this.AB.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"object.migrate\",\n            context: { uuid, id: this.id },\n         };\n         this.AB.Network[\"delete\"](\n            {\n               url: `/definition/migrate/object/${this.id}`,\n            },\n            jobResponse\n         );\n      });\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   /**\n    * @method columnResize()\n    *\n    * save the new width of a column\n    *\n    * @param {} id The instance of the field to save.\n    * @param {int} newWidth the new width of the field\n    * @param {int} oldWidth the old width of the field\n    * @return {Promise}\n    */\n   columnResize(columnName, newWidth /*, oldWidth */) {\n      var fieldID = null;\n      for (var i = 0; i < this._fields.length; i++) {\n         if (this._fields[i].columnName == columnName) {\n            fieldID = this._fields[i].id;\n            break;\n            // this._fields[i].settings.width = newWidth;\n         }\n      }\n\n      // Johnny: This is better but still not right.  the ABObject should not be\n      // storing sizes for field widths.  That is a function of the UI and which\n      // Grid is being displayed.  THAT GRID should be storing a column width\n      // locally.\n      // TODO: once we have v2 in place.\n\n      var fieldSettings = this.AB.localSettings(fieldID);\n      fieldSettings = fieldSettings || {};\n      fieldSettings.width = newWidth;\n\n      return this.AB.localSettings(fieldID, fieldSettings);\n      // return this.save();\n   }\n\n   // return the column headers for this object\n   // @param {bool} isObjectWorkspace  return the settings saved for the object workspace\n   columnHeaders(\n      isObjectWorkspace,\n      isEditable,\n      summaryColumns,\n      countColumns,\n      hiddenFieldNames\n   ) {\n      summaryColumns = summaryColumns || [];\n      countColumns = countColumns || [];\n\n      var headers = [];\n      // var columnNameLookup = {};\n\n      // get the header for each of our fields:\n      this.fields().forEach((f) => {\n         var header = f.columnHeader({\n            isObjectWorkspace: isObjectWorkspace,\n            editable: isEditable,\n         });\n\n         if (isEditable) {\n            header.validationRules = f.settings.validationRules;\n         }\n\n         header.alias = f.alias || undefined; // query type\n         header.fieldID = f.id;\n         // header.fieldURL = f.urlPointer();\n\n         // if the field specifies a width\n         if (f.settings.width != 0) {\n            header.width = f.settings.width;\n         }\n\n         // if the User has already updated a local width for this\n         var fieldSettings = this.AB.localSettings(f.id);\n         if (fieldSettings && fieldSettings.width) {\n            if (!header.width || fieldSettings.width > header.width) {\n               // set column width to the customized width\n               header.width = fieldSettings.width;\n            }\n         }\n\n         if (!header.width) {\n            // set column width to adjust:true by default;\n            header.adjust = true;\n         }\n\n         // add the summary footer\n         if (summaryColumns.indexOf(f.id) > -1) {\n            if (f.key == \"calculate\" || f.key == \"formula\") {\n               header.footer = { content: \"totalColumn\", field: f };\n            } else {\n               header.footer = { content: \"summColumn\" };\n            }\n         }\n         // add the count footer\n         else if (countColumns.indexOf(f.id) > -1)\n            header.footer = { content: \"countColumn\" };\n\n         headers.push(header);\n         // columnNameLookup[header.id] = f.columnName; // name => id\n      });\n\n      // update our headers with any settings applied in the Object Workspace\n      /*\n      // In v2: this is handled by the ABDesigner\n      //\n      if (isObjectWorkspace) {\n         let hiddenFieldList = [];\n\n         if (hiddenFieldNames && hiddenFieldNames.length > 0)\n            hiddenFieldList = hiddenFieldNames;\n         // else if (this.workspaceHiddenFields)\n         //    hiddenFieldList = this.workspaceHiddenFields;\n\n         if (hiddenFieldList.length > 0) {\n            hiddenFieldList.forEach((hfID) => {\n               headers.forEach((h) => {\n                  if (columnNameLookup[h.id] == hfID) {\n                     h.hidden = true;\n                  }\n               });\n            });\n         }\n      }\n      */\n\n      return headers;\n   }\n\n   // after a component has rendered, tell each of our fields to perform\n   // any custom display operations\n   // @param {Webix.DataStore} data a webix datastore of all the rows effected\n   //        by the render.\n   customDisplays(data, App, DataTable, rowIds, isEditable) {\n      if (!data || !data.getFirstId) return;\n\n      // var fields = this.fields(f => this.workspaceHiddenFields.indexOf(f.columnName) < 0);\n      let fields = [];\n      DataTable.eachColumn((columnName) => {\n         let field = this.fields((f) => f.columnName == columnName)[0];\n         if (field) fields.push(field);\n      });\n\n      if (rowIds != null) {\n         rowIds.forEach((id) => {\n            let row = data.getItem(id);\n            if (row) {\n               fields.forEach((f) => {\n                  let node = DataTable.getItemNode({\n                     row: row.id,\n                     column: f.columnName,\n                  });\n                  f.customDisplay(row, App, node, {\n                     editable: isEditable,\n                  });\n               });\n            }\n         });\n      } else {\n         let id = data.getFirstId();\n         while (id) {\n            var row = data.getItem(id);\n            if (row) {\n               fields.forEach((f) => {\n                  var node = DataTable.getItemNode({\n                     row: row.id,\n                     column: f.columnName,\n                  });\n                  f.customDisplay(row, App, node, {\n                     editable: isEditable,\n                  });\n               });\n            }\n            id = data.getNextId(id);\n         }\n      }\n   }\n\n   // Display data with label format of object\n   displayData(rowData) {\n      if (rowData == null) return \"\";\n\n      // translate multilingual\n      //// TODO: isn't this a MLObject??  use this.translate()\n      var mlFields = this.multilingualFields();\n      this.translate(rowData, rowData, mlFields);\n\n      var labelData = this.labelFormat || \"\";\n\n      // default label\n      if (!labelData && this.fields().length > 0) {\n         var defaultField = this.fields((f) => f.fieldUseAsLabel())[0];\n         if (defaultField) labelData = `{${defaultField.id}}`;\n         else\n            labelData = `${this.AB.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`; // show id of row\n      }\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            labelData = labelData.replace(colId, field.format(rowData) || \"\");\n         });\n      }\n\n      // if label is empty, then show .id\n      if (!labelData.trim()) {\n         let labelSettings = this.labelSettings || {};\n         if (labelSettings && labelSettings.isNoLabelDisplay) {\n            labelData = L(labelSettings.noLabelText || \"[No Label]\");\n         } else {\n            // show id of row\n            labelData = `${this.AB.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`;\n         }\n      }\n\n      return labelData;\n   }\n\n   currentView() {\n      return this.workspaceViews.getCurrentView();\n   }\n\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = super.warningsAll();\n      this.fields().forEach((f) => {\n         if (!f) return;\n         allWarnings = allWarnings.concat(f?.warnings());\n      });\n\n      this.indexes().forEach((i) => {\n         if (!i) return;\n         allWarnings = allWarnings.concat(i?.warnings());\n      });\n\n      return allWarnings.filter((w) => w);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allFields = this.fields();\n\n      if (allFields.length == 0) {\n         this.warningsMessage(\"has no fields\");\n      }\n\n      (this._unknownFieldIDs || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown field id[${id}]`);\n      });\n\n      (this._unknownIndex || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown index id[${id}]`);\n      });\n\n      allFields.forEach((f) => {\n         f?.warningsEval();\n      });\n\n      this.indexes().forEach((i) => {\n         i?.warningsEval();\n      });\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Object[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n      // this.emit(\"warning\", warnMsg, data);\n   }\n\n   isUuid(text) {\n      console.error(\n         \"ABObject.isUuid(): is depreciated.  directly reference AB.Rules.isUUID() instead.\"\n      );\n      return this.AB.isUUID(text);\n   }\n\n   async getDbInfo() {\n      return this.AB.Network.get({\n         url: `/definition/info/object/${this.id}`,\n      });\n   }\n\n   /**\n    * @method formCleanValues()\n    * perform a final review of the data a form will try to submit for\n    * this object.  The lets individual fields have a chance to update or\n    * remove values before they are sent.\n    * @param {obj} rowData\n    *        The {data} a form has collected and is about to save.\n    * @return {undefined}\n    */\n   formCleanValues(rowData) {\n      this.fields().forEach((f) => {\n         f.formCleanData(rowData);\n      });\n   }\n};\n","const atomicjs = require(\"atomicjs\");\nconst ABObjectApiCore = require(\"../core/ABObjectApiCore\");\n\nmodule.exports = class ABObjectApi extends ABObjectApiCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n   }\n\n   async fetchData(insertDataMax = 20) {\n      if (this.isFetched) return;\n\n      const headers = this.headers;\n\n      const response = await atomicjs(this.request.url, {\n         method: this.request.verb,\n         headers,\n         data: {},\n         timeout: null,\n         withCredentials: false,\n      });\n\n      let parsedResponse = this.dataFromKey(response);\n\n      const model = this.model();\n\n      if (parsedResponse.length == null || parsedResponse.length === 0) {\n         const data = {};\n\n         this.response.fields.forEach((f) => {\n            data[f.columnName] = parsedResponse[f.columnName];\n         });\n\n         await model.create(data);\n\n         return;\n      }\n\n      let pendingModelCreate = [];\n\n      for (let i = 0; i < parsedResponse.length; i++) {\n         const data = {};\n\n         this.response.fields.forEach((f) => {\n            data[f.columnName] = parsedResponse[i][f.columnName];\n         });\n\n         pendingModelCreate.push(model.create(data));\n\n         if (pendingModelCreate.length % insertDataMax === 0)\n            await Promise.all(pendingModelCreate);\n      }\n\n      if (pendingModelCreate.length > 0) await Promise.all(pendingModelCreate);\n\n      this.isFetched = true;\n\n      await this.save();\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save() {\n      return await super.save(true);\n   }\n\n   migrateCreate() {\n      return Promise.resolve();\n   }\n\n   migrateDrop() {\n      return Promise.resolve();\n   }\n};\n","const ABObjectApiNetsuiteCore = require(\"../core/ABObjectApiNetsuiteCore\");\n\nmodule.exports = class ABObjectApiNetsuite extends ABObjectApiNetsuiteCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n   }\n\n   async getDbInfo() {\n      /*\n      // Data format:\n      {\n          \"definitionId\": \"f2416a1a-d75c-40f2-8180-bad9b5f8b9cc\",\n          \"tableName\": \"AB_MockupHR_TeamTargetLocation\",\n          \"fields\": [\n              {\n                  \"Field\": \"uuid\",\n                  \"Type\": \"varchar(255)\",\n                  \"Null\": \"NO\",\n                  \"Key\": \"PRI\",\n                  \"Default\": null,\n                  \"Extra\": \"\"\n              },\n              {\n                  \"Field\": \"created_at\",\n                  \"Type\": \"datetime\",\n                  \"Null\": \"YES\",\n                  \"Key\": \"\",\n                  \"Default\": null,\n                  \"Extra\": \"\"\n              },\n              {\n                  \"Field\": \"updated_at\",\n                  \"Type\": \"datetime\",\n                  \"Null\": \"YES\",\n                  \"Key\": \"\",\n                  \"Default\": null,\n                  \"Extra\": \"\"\n              },\n              {\n                  \"Field\": \"properties\",\n                  \"Type\": \"text\",\n                  \"Null\": \"YES\",\n                  \"Key\": \"\",\n                  \"Default\": null,\n                  \"Extra\": \"\"\n              }\n          ]\n      }\n      */\n      let PK = this.PK();\n      let fieldInfo = [];\n      this.fields().forEach((f) => {\n         let field = {\n            Field: f.columnName,\n            Type: f.key,\n            Null: f.settings.required ? \"NO\" : \"YES\",\n            Key: PK == f.columnName ? \"PRI\" : \"\",\n            Default: \"\",\n            Extra: \"\",\n         };\n         fieldInfo.push(field);\n      });\n\n      let TableInfo = {\n         definitionId: this.id,\n         tableName: this.tableName,\n         fields: fieldInfo,\n      };\n\n      return TableInfo;\n   }\n};\n","const ABObject = require(\"./ABObject\");\n\n/**\n * ABObjectExternal\n * These are ABObjects that ... (might need to be refactored out?)\n * NOTE: on the web client, these should function just like ABObjects\n */\nmodule.exports = class ABObjectExternal extends ABObject {};\n","const ABObject = require(\"./ABObject\");\n\n/**\n * ABObjectImport\n * These are ABObjects that were Imported from existing Tables in the\n * system.\n *\n * NOTE: on the web client, these should function just like ABObjects\n */\nmodule.exports = class ABObjectImport extends ABObject {};\n","//\n// ABObjectQuery\n//\n// A type of Object in our system that is based upon a complex relationship of multiple\n// existing Objects.\n//\n// In the QueryBuilder section of App Builder, a new Query Object can be created.\n// An initial Object can be chosen from our current list of Objects. After that, additional Objects\n// and a specified join type can be specified.\n//\n// A list of fields from each specified Object can also be included as the data to be returned.\n//\n// A where statement is also part of the definition.\n//\n\nconst ABObjectQueryCore = require(\"../core/ABObjectQueryCore\");\n\nvar ABFactory = null;\nif (typeof io != \"undefined\") {\n   io.socket.on(\"ab.query.update\", function (msg) {\n      if (ABFactory) {\n         ABFactory.emit(\"ab.query.update\", {\n            queryId: msg.queryId,\n            data: msg.data,\n         });\n      } else {\n         console.error(\n            \"ABObjectQuery:: received io.socket msg before ABFactory is defined\"\n         );\n         console.error(\"TODO: move this to ABFactory!\");\n      }\n   });\n} else {\n   console.error(\"TODO: install socket.io client for sails updates.\");\n}\n\n// io.socket.on(\"ab.query.delete\", function (msg) {\n// });\n\nmodule.exports = class ABObjectQuery extends ABObjectQueryCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      if (!ABFactory) {\n         ABFactory = AB;\n      }\n      // listen\n      this.AB.on(\"ab.query.update\", (data) => {\n         if (this.id == data.queryId) this.fromValues(data.data);\n      });\n\n      // .fromValues() should already have been called in super()\n      // so now add in our conditionScan()\n      // NOTE: this can be folded into the Core once filterComplex\n      // is fully implemented and not on Platform only.\n\n      // now scan our conditions to make sure they are\n      // 1) reference fields that exist in our Query\n      // 2) completely filled out conditions.\n      this.conditionScan(this.where);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObjectQuery\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   // destroy() {\n   //    return super.destroy().then(() => {\n   //       console.error(\"Move .queryRemove() to Appbuilder Designer.\");\n   //       // return this.AB.queryRemove(this);\n   //    });\n   // }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObjectQuery with it's parent ABApplication\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   // async save() {\n   //    try {\n   //       await super.save();\n   //       return this;\n   //    } catch (err) {\n   //       this.AB.notify.developer(err, {\n   //          context: \"ABObjectQuery.save()\",\n   //          query: this.toObj(),\n   //       });\n   //       throw err;\n   //    }\n   // }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method importFields\n    * instantiate a set of fields from the given attributes.\n    * Our attributes are a set of field URLs That should already be created in their respective\n    * ABObjects.\n    * @param {array} fieldSettings The different field urls for each field\n    *             { }\n    * @param {bool} shouldAliasColumn\n    *        should we add the object alias to the columnNames?\n    *        this is primarily used on the web client\n    */\n   importFields(fieldSettings) {\n      super.importFields(fieldSettings);\n\n      this._fields.forEach((fieldEntry) => {\n         // include object name {aliasName}.{columnName}\n         // to use it in grid headers & hidden fields\n         fieldEntry.field.columnName = `${fieldEntry.alias}.${fieldEntry.field.columnName}`;\n      });\n   }\n\n   /**\n    * @method columnResize()\n    *\n    * save the new width of a column\n    *\n    * @param {} id The instance of the field to save.\n    * @param {int} newWidth the new width of the field\n    * @param {int} oldWidth the old width of the field\n    * @return {Promise}\n    */\n   columnResize(columnName, newWidth, oldWidth) {\n      let field = this.fields((f) => f.columnName == columnName)[0];\n      if (field) {\n         field.settings.width = newWidth;\n\n         return this.save();\n      } else {\n         return Promise.resolve();\n      }\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   // return the column headers for this object\n   // @param {bool} isObjectWorkspace  return the settings saved for the object workspace\n   columnHeaders(\n      isObjectWorkspace,\n      isEditable,\n      summaryColumns,\n      countColumns,\n      hiddenFieldNames\n   ) {\n      var headers = super.columnHeaders(\n         isObjectWorkspace,\n         isEditable,\n         summaryColumns,\n         countColumns,\n         hiddenFieldNames\n      );\n\n      headers.forEach((h) => {\n         // pull object by alias\n         let object = this.objectByAlias(h.alias);\n         if (!object) return;\n\n         let field = object.fieldByID(h.fieldID);\n         if (!field) return;\n\n         // NOTE: query v1\n         let alias = \"\";\n         if (Array.isArray(this.joins())) {\n            alias = field.object.name;\n         } else {\n            alias = h.alias;\n         }\n\n         // include object name {aliasName}.{columnName}\n         // to use it in grid headers & hidden fields\n         h.id = `${alias}.${field.columnName}`;\n\n         // label\n         if (this.settings && this.settings.hidePrefix) {\n            h.header = `${field.label || \"\"}`;\n         } else {\n            h.header = `${field.object.label || \"\"}.${field.label || \"\"}`;\n         }\n\n         // icon\n         if (field.settings && field.settings.showIcon) {\n            h.header = `<span class=\"webix_icon fa fa-${field.fieldIcon()}\"></span>${\n               h.header\n            }`;\n         }\n\n         // If this query supports grouping, then add folder icon to display in grid\n         if (this.isGroup) {\n            let originTemplate = h.template;\n\n            h.template = (item, common) => {\n               if (item[h.id])\n                  return (\n                     common.icon(item, common) +\n                     (originTemplate\n                        ? originTemplate(item, common, item[h.id])\n                        : item[h.id])\n                  );\n               else return \"\";\n            };\n         }\n\n         h.adjust = true;\n         h.minWidth = 220;\n      });\n\n      return headers;\n   }\n\n   /**\n    * @method conditionScan()\n    * Scan the provided condition object and determine if there are any\n    * configuration issues.\n    * @param {obj} rule\n    *        the QueryBuilder rule that we are scanning.\n    * @param {array} listWarnings\n    *        An array of warnings that we should add our notices to.\n    */\n   conditionScan(rule) {\n      if (!rule) {\n         return;\n      }\n\n      if (rule.glue) {\n         (rule.rules || []).forEach((r) => {\n            this.conditionScan(r);\n         });\n         return;\n      }\n\n      // 1) we need to have any key as one of our fields.\n      let field = this.fieldByID(rule.key);\n      if (!field && rule.key != \"this_object\") {\n         this.warningsMessage(\n            \"condition does not reference one of our fields\",\n            {\n               rule,\n            }\n         );\n      }\n\n      // 2) completely filled out conditions.\n      if (!this._conditionCheck) {\n         this._conditionCheck = this.AB.filterComplexNew(\n            `${this.id}_conditionCheck`\n         );\n         // {FilterComplex} ._conditionCheck\n         // has our .isConditionComplete() method.\n      }\n      if (!this._conditionCheck.isConditionComplete(rule)) {\n         this.warningsMessage(\"incomplete condition definition\", {\n            rule,\n         });\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      this.conditionScan(this.where);\n\n      /// include importFields() warnings:\n      this.__missingObject.forEach((f) => {\n         this.warningsMessage(\n            `IMPORT FIELDS: could not resolve object[${\n               f.objectID\n            }] for fieldSetting ${JSON.stringify(f)}`,\n            {\n               fieldInfo: f,\n            }\n         );\n      });\n\n      this.__missingFields.forEach((f) => {\n         this.warningsMessage(\n            `IMPORT FIELDS: Object[${f.objID}] could not find field[${\n               f.fieldID\n            }] for fieldSetting ${JSON.stringify(f.fieldInfo)}`,\n            {\n               object: f.objID,\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__cantFilter.forEach((f) => {\n         this.warningsMessage(\n            `Field[${f.field.id}] referenced in fieldSetting[${JSON.stringify(\n               f.fieldInfo\n            )}] did not pass .canFilterField`,\n            {\n               field: f.field.toObj(),\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__duplicateFields.forEach((f) => {\n         this.warningsMessage(\n            `Field[${\n               f.fieldInfo.fieldID\n            }] referenced in fieldSetting[${JSON.stringify(\n               f.fieldInfo\n            )}] is a duplicate`,\n            {\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__linkProblems.forEach((f) => {\n         this.warningsMessage(f.message, f.data);\n      });\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Query[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   isUuid(text) {\n      console.error(\n         \"ABObject.isUuid(): is depreciated.  directly reference AB.Rules.isUUID() instead.\"\n      );\n      return this.AB.isUUID(text);\n   }\n};\n","const ABProcessCore = require(\"../core/ABProcessCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcess extends ABProcessCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      this._unknownShapes = [];\n      // {array} [ BPMN:Shape, ... ]\n      // Generic Shapes that are added to the Process are registered here.\n      // We will list these as warnings to the ABDesigner.\n\n      // listen\n      this.AB.on(\"ab.abprocess.update\", (data) => {\n         if (this.id == data.objectId) this.fromValues(data.data);\n      });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // remove all my Elements\n      var allElements = this.elements();\n      var allDestroy = [];\n      allElements.forEach((e) => {\n         allDestroy.push(e.destroy());\n      });\n\n      return Promise.all(allDestroy).then(() => {\n         // now remove myself\n         return new Promise((resolve, reject) => {\n            this.toDefinition()\n               .destroy()\n               .then(() => {\n                  // allow normal processing to contine now:\n                  resolve();\n               })\n               .then(() => {\n                  // in the background\n                  // remove this reference from ALL Applications that link\n                  // to me:\n                  console.error(\n                     \"TODO: ABProcess.destroy(): refactor to .emit('destroyed') and let containing Apps self remove.\"\n                  );\n                  var appsWithProcess = this.AB.applications().find((a) => {\n                     return a.hasProcess(this);\n                  });\n                  if (appsWithProcess.length > 0) {\n                     appsWithProcess.forEach((a) => {\n                        a.processRemove(this);\n                     });\n                  }\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n      });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   save() {\n      // if this is an update:\n      // if (this.id) {\n      // \treturn ABDefinition.update(this.id, this.toDefinition());\n      // } else {\n\n      // \treturn ABDefinition.create(this.toDefinition());\n      // }\n\n      // make sure all our tasks have save()ed.\n      var allSaves = [];\n      var allTasks = this.elements();\n      allTasks.forEach((t) => {\n         allSaves.push(t.save());\n      });\n      return Promise.all(allSaves).then(() => {\n         // now we can save our Process definition\n         return this.toDefinition()\n            .save()\n            .then((data) => {\n               // if I didn't have an .id then this was a create()\n               // and I need to update my data with the generated .id\n\n               if (!this.id) {\n                  this.id = data.id;\n               }\n\n               // Also, our embedded elements now all have .ids\n               // where they might not have before.  So now\n               // rebuild our this._elements hash with all id\n               var _new = {};\n               let _old = this._elements;\n               Object.keys(this._elements).forEach((k) => {\n                  _new[this._elements[k].id] = this._elements[k];\n               });\n               this._elements = _new;\n\n               // check to see if an update happened and then make\n               // sure we have that saved.\n               let needSave = false;\n               Object.keys(_new).forEach((k) => {\n                  if (!_old[k]) {\n                     needSave = true;\n                  }\n               });\n\n               if (needSave) {\n                  return this.save();\n               }\n            });\n      });\n   }\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.processes((o) => {\n            return o.name.toLowerCase() == this.name.toLowerCase();\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n         );\n      }\n\n      return validator;\n   }\n\n   /**\n    * @method elementNewForModelDefinition()\n    * create a new process element defined by the given BPMN:Element\n    *\n    * the BPMN:Element definition comes from the BPMN Modeler when a new\n    * diagram element is created.\n    *\n    * @param {BPMN:Element} element\n    *        the BPMN modeler diagram element definition\n    * @return {ABProcess[OBJ]}\n    */\n   elementNewForModelDefinition(element) {\n      var task = this.AB.processElementNewForModelDefinition(element, this);\n      if (task) {\n         this.elementAdd(task);\n      }\n      return task;\n   }\n\n   /**\n    * @method unknownShape()\n    * store a reference to a BPMN Shape that is in our XML diagram,\n    * but we don't have an element for.\n    * @param {BPMN:Shape} shape\n    */\n   unknownShape(shape) {\n      this.unknownShapeRemove(shape);\n      this._unknownShapes.push(shape);\n   }\n\n   /**\n    * @method unknownShapeRemove()\n    * make sure we no longer track the provided BPMN Shape as an unknown shape.\n    * @param {BPMN:Shape} shape\n    */\n   unknownShapeRemove(shape) {\n      this._unknownShapes = this._unknownShapes.filter((s) => s.id != shape.id);\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = [].concat(this._warnings);\n      this.elements().forEach((e) => {\n         e.warningsEval();\n         allWarnings = allWarnings.concat(e.warnings());\n      });\n\n      if (this.elements().length == 0) {\n         allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      }\n\n      // perform a check of our xml document to see if we have any unknown\n      // shapes\n      if (!this._DOMParser) {\n         if (window.DOMParser) {\n            // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n            this._DOMParser = function (xmlStr) {\n               return new window.DOMParser().parseFromString(\n                  xmlStr,\n                  \"text/xml\"\n               );\n            };\n         } else if (\n            typeof window.ActiveXObject != \"undefined\" &&\n            new window.ActiveXObject(\"Microsoft.XMLDOM\")\n         ) {\n            this._DOMParser = function (xmlStr) {\n               var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n               xmlDoc.async = \"false\";\n               xmlDoc.loadXML(xmlStr);\n               return xmlDoc;\n            };\n         } else {\n            throw new Error(\"No XML parser found\");\n         }\n      }\n\n      // find any references to our generic shapes\n      let xml = this._DOMParser(this.xmlDefinition);\n      const genericShapes = [\n         \"bpmn2:startEvent\",\n         \"bpmn2:task\",\n         \"bpmn2:endEvent\",\n      ];\n      genericShapes.forEach((s) => {\n         let allElements = xml.getElementsByTagName(s);\n         for (let x = 0; x < allElements.length; x++) {\n            // if we don't know about this shape\n            let ele = allElements[x];\n            let myEle = this.elementForDiagramID(allElements[x].id);\n            if (!myEle) {\n               this.unknownShape(allElements[x]);\n            }\n         }\n      });\n\n      // if any unknown shapes have been reported:\n      if (this._unknownShapes.length) {\n         allWarnings.push({\n            message: \"Generic Tasks still undefined.\",\n            data: {},\n         });\n      }\n\n      return allWarnings;\n   }\n};\n","const ABStepCore = require(\"../core/ABStepCore\");\n\n// let L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABStep extends ABStepCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // listen\n      // this.AB.on(\"ab.abprocess.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // debugger;\n\n      return new Promise((resolve, reject) => {\n         this.toDefinition()\n            .destroy()\n            .then(() => {\n               resolve();\n            })\n            .catch((err) => {\n               reject(err);\n            });\n      });\n\n      // remove all my Elements\n      // var allElements = this.elements();\n      // var allDestroy = [];\n      // allElements.forEach((e) => {\n      //    allDestroy.push(e.destroy());\n      // });\n\n      // return Promise.all(allDestroy).then(() => {\n      //    // now remove myself\n      //    return new Promise((resolve, reject) => {\n      //       this.toDefinition()\n      //          .destroy()\n      //          .then(() => {\n      //             // allow normal processing to contine now:\n      //             resolve();\n      //          })\n      //          .then(() => {\n      //             // in the background\n      //             // remove this reference from ALL Applications that link\n      //             // to me:\n      //             console.error(\n      //                \"TODO: ABProcess.destroy(): refactor to .emit('destroyed') and let containing Apps self remove.\"\n      //             );\n      //             var appsWithProcess = this.AB.applications().find((a) => {\n      //                return a.hasProcess(this);\n      //             });\n      //             if (appsWithProcess.length > 0) {\n      //                appsWithProcess.forEach((a) => {\n      //                   a.processRemove(this);\n      //                });\n      //             }\n      //          })\n      //          .catch((err) => {\n      //             reject(err);\n      //          });\n      //    });\n      // });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *                .resolve( {this} )\n    */\n   save() {\n      // debugger;\n      return this.toDefinition()\n         .save()\n         .then((data) => {\n            // if I didn't have an .id then this was a create()\n            // and I need to update my data with the generated .id\n\n            if (!this.id) {\n               this.id = data.id;\n            }\n            return this;\n         });\n   }\n\n   isValid() {\n      // debugger;\n      return true;\n      // var validator = this.AB.Validation.validator();\n\n      // // label/name must be unique:\n      // var isNameUnique =\n      //    this.AB.processes((o) => {\n      //       return o.name.toLowerCase() == this.name.toLowerCase();\n      //    }).length == 0;\n      // if (!isNameUnique) {\n      //    validator.addError(\n      //       \"name\",\n      //       L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n      //    );\n      // }\n\n      // return validator;\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // debugger;\n      // report both OUR warnings, and any warnings from any of our fields\n      // var allWarnings = [].concat(this._warnings);\n      // this.elements().forEach((e) => {\n      //    e.warningsEval();\n      //    allWarnings = allWarnings.concat(e.warnings());\n      // });\n      // if (this.elements().length == 0) {\n      //    allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      // }\n      // // perform a check of our xml document to see if we have any unknown\n      // // shapes\n      // if (!this._DOMParser) {\n      //    if (window.DOMParser) {\n      //       // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n      //       this._DOMParser = function (xmlStr) {\n      //          return new window.DOMParser().parseFromString(\n      //             xmlStr,\n      //             \"text/xml\"\n      //          );\n      //       };\n      //    } else if (\n      //       typeof window.ActiveXObject != \"undefined\" &&\n      //       new window.ActiveXObject(\"Microsoft.XMLDOM\")\n      //    ) {\n      //       this._DOMParser = function (xmlStr) {\n      //          var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n      //          xmlDoc.async = \"false\";\n      //          xmlDoc.loadXML(xmlStr);\n      //          return xmlDoc;\n      //       };\n      //    } else {\n      //       throw new Error(\"No XML parser found\");\n      //    }\n      // }\n      // // find any references to our generic shapes\n      // let xml = this._DOMParser(this.xmlDefinition);\n      // const genericShapes = [\n      //    \"bpmn2:startEvent\",\n      //    \"bpmn2:task\",\n      //    \"bpmn2:endEvent\",\n      // ];\n      // genericShapes.forEach((s) => {\n      //    let allElements = xml.getElementsByTagName(s);\n      //    for (let x = 0; x < allElements.length; x++) {\n      //       // if we don't know about this shape\n      //       let ele = allElements[x];\n      //       let myEle = this.elementForDiagramID(allElements[x].id);\n      //       if (!myEle) {\n      //          this.unknownShape(allElements[x]);\n      //       }\n      //    }\n      // });\n      // // if any unknown shapes have been reported:\n      // if (this._unknownShapes.length) {\n      //    allWarnings.push({\n      //       message: \"Generic Tasks still undefined.\",\n      //       data: {},\n      //    });\n      // }\n      //\n      // return allWarnings;\n   }\n};\n","const ABViewManagerCore = require(\"../core/ABViewManagerCore\");\n\nmodule.exports = class ABViewManager extends ABViewManagerCore {};\n","const ABViewManagerMobileCore = require(\"../core/ABViewManagerMobileCore\");\n\nmodule.exports = class ABViewManagerMobile extends ABViewManagerMobileCore {};\n","var L = null;\n// multilingual Label fn()\n\nmodule.exports = class CSVImporter {\n   constructor(Label) {\n      // {ABMultilingual.label()} function.\n      //\n      if (!L) {\n         L = Label;\n\n         // if this was a v1: App param:\n         if (Label.Label) {\n            L = Label.Label;\n         }\n      }\n   }\n\n   /**\n    * @method getSeparateItems()\n    * Return the options of how the CSV values are separated.\n    * @return {array}  [ {id, value} ... ]\n    */\n   getSeparateItems() {\n      return [\n         { id: \",\", value: L(\"Comma (,)\") },\n         { id: \"\\t\", value: L(\"Tab (&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)\") },\n         { id: \";\", value: L(\"Semicolon (;)\") },\n         { id: \"s\", value: L(\"Space ( )\") },\n      ];\n   }\n\n   /**\n    * @method validateFile\n    * Validate file extension\n    * @param {*} fileInfo\n    *        https://docs.webix.com/api__ui.uploader_onbeforefileadd_event.html\n    * @return {boolean}\n    */\n   validateFile(fileInfo) {\n      if (!fileInfo || !fileInfo.file || !fileInfo.file.type) return false;\n\n      // validate file type\n      let extensionType = fileInfo.file.type.toLowerCase();\n      if (\n         extensionType == \"text/csv\" ||\n         extensionType == \"application/vnd.ms-excel\"\n      ) {\n         return true;\n      } else {\n         return false;\n      }\n   }\n\n   /**\n    * @method getDataRows\n    * Pull data rows from the CSV file\n    *\n    * @param {Object} fileInfo - https://docs.webix.com/api__ui.uploader_onbeforefileadd_event.html\n    * @param {string} separatedBy\n    *\n    * @return {Promise} -[\n    * \t\t\t\t\t\t[\"Value 1.1\", \"Value 1.2\", \"Value 1.3\"],\n    * \t\t\t\t\t\t[\"Value 2.1\", \"Value 2.2\", \"Value 2.3\"],\n    * \t\t\t\t\t]\n    */\n   getDataRows(fileInfo, separatedBy) {\n      if (!this.validateFile(fileInfo)) return Promise.reject();\n\n      return new Promise((resolve, reject) => {\n         // read CSV file\n         let reader = new window.FileReader();\n         reader.onload = (e) => {\n            let result = [];\n\n            // split lines\n            let dataRows = reader.result\n               .split(/\\r\\n|\\n|\\r/) // CRLF = \\r\\n; LF = \\n; CR = \\r;\n               .filter((row) => row && row.length > 0);\n\n            // split columns\n            (dataRows || []).forEach((row) => {\n               let dataCols = [];\n               if (separatedBy == \",\") {\n                  // NOTE: if the file contains ,, .match() can not reconize this empty string\n                  row = row.replace(/,,/g, \", ,\");\n\n                  // https://stackoverflow.com/questions/11456850/split-a-string-by-commas-but-ignore-commas-within-double-quotes-using-javascript#answer-11457952\n                  dataCols = row.match(/(\".*?\"|[^\",]+)(?=\\s*,|\\s*$)/g);\n               } else {\n                  dataCols = row.split(separatedBy);\n               }\n\n               result.push(dataCols.map((dCol) => this.reformat(dCol)));\n            });\n\n            resolve(result);\n         };\n         reader.readAsText(fileInfo.file);\n      });\n   }\n\n   /**\n    * @method getGuessDataType\n    * return our best guess of what type of data for the requested column.\n    * @param {array} dataRows\n    *        The data we are evaluating:\n    *        [\n    *           [\"Value 1.1\", \"Value 1.2\", \"Value 1.3\"],\n    *           [\"Value 2.1\", \"Value 2.2\", \"Value 2.3\"],\n    * \t\t ]\n    * @param colIndex {Number}\n    * @return {string}\n    */\n   getGuessDataType(dataRows, colIndex) {\n      var data,\n         // {various} the data pulled from the requested row/column\n         repeatNum = 10;\n      // {integer} how many rows do we want to scan trying to find a value\n\n      // Loop to find a value\n      for (var i = 1; i <= repeatNum; i++) {\n         var line = dataRows[i];\n         if (!line) break;\n\n         data = line[colIndex];\n\n         if (data != null && data.length > 0) break;\n      }\n\n      if (data == null || data == \"\") {\n         return \"string\";\n      } else if (\n         data == 0 ||\n         data == 1 ||\n         data == true ||\n         data == false ||\n         data == \"checked\" ||\n         data == \"unchecked\"\n      ) {\n         return \"boolean\";\n      } else if (!isNaN(data)) {\n         return \"number\";\n      } else if (Date.parse(data)) {\n         return \"date\";\n      } else {\n         // determine which type of string this might be:\n         if (data.length > 100) return \"LongText\";\n         else return \"string\";\n      }\n   }\n\n   /**\n    * @method reformat\n    * @param {string} str\n    */\n   reformat(str) {\n      if (!str) return \"\";\n\n      return str.trim().replace(/\"/g, \"\").replace(/'/g, \"\");\n   }\n};\n","const FilterComplexCore = require(\"../core/FilterComplexCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\n/**\n * @function _toInternal()\n * translate our external QB conditions into our internal format that\n * makes the cond.rule unique by adding the field.id to the rule.\n * @param {obj} cond - {\n *                         rules: [\n *                            {\n *                               alias: string || undefined,\n *                               key: uuid,\n *                               rule: string,\n *                               value: object,\n *                            }\n *                         ]\n *                      }\n *        the QB condition format we use exernally in our AB system.\n */\nfunction _toInternal(cond, fields = []) {\n   if (!cond) return;\n   if (cond.key) {\n      // Convert to format\n      // {\n      //    glue: \"and\",\n      //    rules: [\n      //       {\n      //          field: \"test_col\",\n      //          condition: { type: \"greater\", filter: 100 },\n      //       },\n      //    ],\n      // }\n      const field = fields.filter((f) => f.id == cond.key)[0];\n      cond.field = field?.id;\n\n      cond.condition = {\n         type: cond.rule,\n         filter: cond.value,\n      };\n\n      if (Array.isArray(cond.value)) cond.includes = cond.value;\n      if (\n         cond.rule === \"in_query_field\" ||\n         cond.rule === \"not_in_query_field\"\n      ) {\n         cond.includes = cond.value.split(\":\");\n      }\n\n      // else cond.includes = cond.value?.split?.(/,|:/) ?? [];\n\n      // if (field?.key == \"date\" || field?.key == \"datetime\") {\n      //    cond.condition.filter = cond.condition.filter\n      //       ? AB.rules.toDate(cond.condition.filter)\n      //       : null;\n      //\n      //    cond.includes = cond.includes.map((v) => AB.rules.toDate(v));\n      // }\n\n      delete cond.key;\n      delete cond.rule;\n      delete cond.value;\n   }\n\n   if (cond.rules && cond.rules.length) {\n      (cond.rules ?? []).forEach((r) => {\n         _toInternal(r, fields);\n      });\n   }\n}\n\n/**\n * @function _toExternal()\n * translate our internal QB conditions into our external format that\n * where the cond.rule no longer has the field.id.\n * @param {obj} cond - {\n *                         glue: \"and\",\n *                         rules: [\n *                            {\n *                               field: \"test_col\",\n *                               condition: { type: \"greater\", filter: 100 },\n *                            },\n *                         ],\n *                      }\n *        the QB condition format we use internally\n */\nfunction _toExternal(cond, fields = []) {\n   if (!cond) return;\n   if (cond.field) {\n      let field = fields.filter((f) => f.id == cond.field)[0];\n      // cond.alias = alias || undefined;\n      cond.key = field?.id ?? cond.field;\n      cond.condition = cond.condition ?? {};\n      cond.rule = cond.condition.type;\n\n      let values =\n         cond.includes?.map((v) => (v instanceof Date ? v.toISOString() : v)) ??\n         [];\n\n      // Convert multi-values to a string\n      if (cond.condition.filter) {\n         if (cond.condition.filter instanceof Date) {\n            if (values.indexOf(cond.condition.filter.toISOString()) < 0) {\n               values.push(cond.condition.filter);\n            }\n         } else if (values.indexOf(cond.condition.filter) < 0)\n            values.push(cond.condition.filter);\n      }\n\n      if (cond.rule === \"is_current_date\") {\n         cond.value = AB.rules.getUTCDayTimeRange();\n      } else if (\n         cond.rule === \"in_query_field\" ||\n         cond.rule === \"not_in_query_field\"\n      ) {\n         cond.value =\n            cond.includes?.length == 2 ? cond.includes.join(\":\") : null;\n      } else {\n         cond.value = values\n            .map((v) => {\n               // Convert date format\n               if (\n                  field &&\n                  (field.key === \"date\" || field.key === \"datetime\") &&\n                  cond.rule != \"last_days\"\n               ) {\n                  return field.exportValue(new Date(v));\n               }\n               return v;\n            })\n            .join(\",\");\n      }\n\n      delete cond.field;\n      delete cond.type;\n      delete cond.includes;\n      delete cond.condition;\n   }\n\n   if (cond.rules && cond.rules.length) {\n      (cond.rules ?? []).forEach((r) => {\n         _toExternal(r, fields);\n      });\n   }\n}\n\nfunction _uiQueryOptionId(fieldId) {\n   return `byQueryField-query-option-${fieldId}`;\n}\n\nfunction _uiFieldOptionId(fieldId) {\n   return `byQueryField-field-option-${fieldId}`;\n}\n\nmodule.exports = class FilterComplex extends FilterComplexCore {\n   constructor(idBase, AB, options = {}) {\n      idBase = idBase ?? \"ab_filterComplex\";\n\n      super(idBase, AB);\n\n      this._options = options ?? {};\n\n      this._initComplete = false;\n      // {bool}\n      // trying to prevent multiple .init() from being called due to\n      // various ways of initializing the component.\n\n      this.observing = false;\n      // {bool}\n      // try to prevent multiple observers generating >1 \"changed\"\n      // event.\n\n      let labels = (this.labels = {\n         common: (AB._App ?? {}).labels,\n         component: {\n            and: L(\"And\"),\n            or: L(\"Or\"),\n\n            thisObject: L(\"This Object\"),\n            inQuery: L(\"In Query\"),\n            notInQuery: L(\"Not In Query\"),\n            inQueryField: L(\"By Query Field\"),\n            notInQueryField: L(\"Not By Query Field\"),\n\n            inQueryFieldQueryPlaceholder: L(\"Choose a Query\"),\n            inQueryFieldFieldPlaceholder: L(\"Choose a Field\"),\n\n            sameAsUser: L(\"Same As User\"),\n            notSameAsUser: L(\"Not Same As User\"),\n\n            sameAsField: L(\"Same As Field\"),\n            notSameAsField: L(\"Not Field\"),\n\n            inDataCollection: L(\"In Data Collection\"),\n            notInDataCollection: L(\"Not In Data Collection\"),\n\n            containsCondition: L(\"contains\"),\n            notContainsCondition: L(\"doesn't contain\"),\n            isCondition: L(\"is\"),\n            isNotCondition: L(\"is not\"),\n            isEmpty: L(\"is empty\"),\n            isNotEmpty: L(\"is not empty\"),\n            isCurrentDateCondition: L(\"is current date\"),\n            beforeCondition: L(\"is before\"),\n            afterCondition: L(\"is after\"),\n            onOrBeforeCondition: L(\"is on or before\"),\n            onOrAfterCondition: L(\"is on or after\"),\n            beforeCurrentCondition: L(\"is before current date\"),\n            afterCurrentCondition: L(\"is after current date\"),\n            onOrBeforeCurrentCondition: L(\"is on or before current date\"),\n            onOrAfterCurrentCondition: L(\"is on or after current date\"),\n            onLastDaysCondition: L(\"last ... days\"),\n            onNextDaysCondition: L(\"next ... days\"),\n\n            equalCondition: L(\":\"),\n            notEqualCondition: L(\"≠\"),\n            lessThanCondition: L(\"<\"),\n            moreThanCondition: L(\">\"),\n            lessThanOrEqualCondition: L(\"≤\"),\n            moreThanOrEqualCondition: L(\"≥\"),\n\n            equalListCondition: L(\"equals\"),\n            notEqualListCondition: L(\"does not equal\"),\n\n            checkedCondition: L(\"is checked\"),\n            notCheckedCondition: L(\"is unchecked\"),\n\n            isCurrentUserCondition: L(\"is current user\"),\n            isNotCurrentUserCondition: L(\"is not current user\"),\n            containsCurrentUserCondition: L(\"contains current user\"),\n            notContainsCurrentUserCondition: L(\"does not contain current user\"),\n\n            contextDefaultOption: L(\"choose option\"),\n            equalsProcessValue: L(\"equals process value\"),\n            notEqualsProcessValueCondition: L(\"not equals process value\"),\n            inProcessValueCondition: L(\"in process value\"),\n            notInProcessValueCondition: L(\"not in process value\"),\n         },\n      });\n\n      // internal list of Webix IDs to reference our UI components.\n      let ids = (this.ids = {\n         popup: this.unique(`${idBase}_popup`),\n         querybuilder: this.unique(`${idBase}_querybuilder`),\n         save: this.unique(`${idBase}_save`),\n      });\n\n      // Set current username\n      this.Account.username = this.AB.Account.username();\n\n      this._settings.recordRuleFieldOptions = [];\n\n      // webix UI definition:\n      this.ui = {\n         rows: [\n            {\n               view: \"layout\",\n               type: \"clean\",\n               borderless: this._options.borderless ?? true,\n               rows: [\n                  {\n                     id: ids.querybuilder,\n                     view: \"query\",\n                     data: () => [],\n                     // data: async (field) => await this.pullOptions(field),\n                     fields: [],\n                     disabled: true,\n                     height: this._options.height,\n                  },\n               ],\n            },\n            {\n               id: ids.save,\n               view: \"button\",\n               css: \"webix_primary\",\n               value: L(\"Save\"),\n               hidden: this._options.isSaveHidden ?? false,\n               click: () => {\n                  if (this.myPopup) this.myPopup.hide();\n                  this.emit(\"save\", this.getValue());\n               },\n            },\n         ],\n      };\n   }\n\n   // setting up UI\n   init(options) {\n      if (this._initComplete) return;\n\n      super.init(options);\n\n      const el = $$(this.ids.querybuilder);\n\n      if (el) {\n         if (!this.observing) {\n            this.__blockOnChange = true;\n            el.getState().$observe(\"value\", (v) => {\n               if (this.__blockOnChange) return false;\n\n               this.emit(\"changed\", this.getValue());\n            });\n            this.__blockOnChange = false;\n\n            // HACK!! The process of setting the $observe() is actually\n            // calling the cb() when set.  This is clearing our .condition\n            // if we call init() after we have setValues(). which can happen\n            // when using the popUp() method.\n            let _cond = this.condition;\n            this.condition = _cond;\n            this.observing = true;\n         }\n         this._initComplete = true;\n      }\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    * @param condition {Object} - [Optional] {\n    *                                           glue: \"and\" | \"or\",\n    *                                           rules: []\n    *                                        }\n    */\n   isValid(rowData, condition = this.condition) {\n      let helper = () => true;\n\n      let $query = $$(this.ids.querybuilder);\n      if ($query) {\n         helper = $query.getFilterFunction();\n         return helper(rowData);\n      } else {\n         return super.isValid(rowData, condition);\n      }\n   }\n\n   /**\n    * @method isConditionComplete()\n    * Check a given condition entry and indicate if it is fully\n    * filled out.\n    * @param {obj} cond\n    *        The Condition object we are checking.  If a Macro\n    *        condition if provided: { glue:\"and\", rules:[] } then\n    *        this method will return True/False if All rules are\n    *        complete.\n    *        If an individual rule is provided, then it evaluates\n    *        the completness of that rule. { key, rule, value }\n    * @return {bool}\n    */\n   isConditionComplete(cond) {\n      if (!cond) return false;\n\n      let isComplete = true;\n      // start optimistically.\n\n      if (cond?.glue) {\n         (cond.rules ?? []).forEach((r) => {\n            isComplete = isComplete && this.isConditionComplete(r);\n         });\n      } else {\n         // every condition needs a .key & .rule\n         if (!cond.key || cond.key == \"\") {\n            isComplete = false;\n         }\n\n         if (!cond.rule || cond.rule == \"\") {\n            isComplete = false;\n         }\n\n         if (isComplete) {\n            switch (cond.rule) {\n               case \"is_current_user\":\n               case \"is_not_current_user\":\n               case \"contain_current_user\":\n               case \"not_contain_current_user\":\n               case \"same_as_user\":\n               case \"not_same_as_user\":\n               case \"less_current\":\n               case \"greater_current\":\n               case \"less_or_equal_current\":\n               case \"greater_or_equal_current\":\n               case \"is_empty\":\n               case \"is_not_empty\":\n               case \"checked\":\n               case \"unchecked\":\n               case \"is_current_date\":\n                  // There are only a few rules that don't need a\n                  // value\n                  break;\n\n               case \"in_data_collection\":\n               case \"not_in_data_collection\":\n                  // a value needs to exist\n                  if (!cond.value || cond.value == \"\") {\n                     isComplete = false;\n                  }\n                  // and it needs to reference a valid DC\n                  if (isComplete) {\n                     let dc = this.AB.datacollectionByID(cond.value);\n                     if (!dc) {\n                        isComplete = false;\n                     }\n                  }\n                  break;\n\n               case \"in_query\":\n               case \"not_in_query\":\n                  // a value needs to exist\n                  if (!cond.value || cond.value == \"\") {\n                     isComplete = false;\n                  }\n                  // and it needs to reference a valid query\n                  if (isComplete) {\n                     let query = this.AB.queryByID(cond.value);\n                     if (!query) {\n                        isComplete = false;\n                     }\n                  }\n                  break;\n\n               case \"in_query_field\":\n               case \"not_in_query_field\":\n                  // a value needs to exist\n                  if (!cond.value || cond.value == \"\") {\n                     isComplete = false;\n                  }\n                  // and it needs to reference a valid query\n                  if (isComplete) {\n                     let queryId = cond.value.split(\":\")[0],\n                        fieldId = cond.value.split(\":\")[1];\n                     let query = this.AB.queryByID(queryId);\n                     if (!query) {\n                        isComplete = false;\n                     } else {\n                        // and a valid field\n                        let field = query.fieldByID(fieldId);\n                        if (!field) {\n                           isComplete = false;\n                        }\n                     }\n                  }\n                  break;\n\n               default:\n                  // The rest do need a .value\n                  if (!cond.value || cond.value == \"\") {\n                     isComplete = false;\n                  }\n                  break;\n            }\n         }\n      }\n\n      return isComplete;\n   }\n\n   setValue(settings) {\n      super.setValue(settings);\n      this.condition = settings;\n\n      const el = $$(this.ids.querybuilder);\n      if (el) {\n         if (!settings) {\n            // Clear settings value of webix.query\n            el.define(\"value\", {\n               glue: \"and\",\n               rules: [],\n            });\n            return;\n         }\n\n         let qbSettings = this.AB.cloneDeep(settings);\n\n         // Settings should match a condition built upon our QB format:\n         // {\n         //    glue:\"and\",\n         //    rules:[\n         //       {\n         //          key:\"uuid\",\n         //          rule:\"\",\n         //          value:\"\"\n         //       }\n         //    ]\n         // }\n         // externally our key should be the field.id and the rules should be\n         // the \"contains\", \"not_contains\", \"equal\" ... keywords.\n         // However, internally, we convert these rules into .ids that are\n         // unique for each field (see uiInit()).  So when we bring in settings\n         // we need to translate them into our internal format:\n\n         _toInternal(qbSettings, this._Fields);\n\n         this.__blockOnChange = true;\n         el.define(\"value\", qbSettings);\n         this.__blockOnChange = false;\n      }\n   }\n\n   getValue() {\n      if ($$(this.ids.querybuilder)) {\n         let settings = this.AB.cloneDeep(\n            $$(this.ids.querybuilder).getState().value ?? {}\n         );\n\n         // what we pull out of the QB will have .rules in our internal format:\n         // {field.id}_{rule}  (see uiInit() )\n         // But we need to store them in our generic QB format for use outside\n         // our FilterComplex widget.\n         _toExternal(settings, this._Fields);\n         this.condition = settings;\n      }\n\n      return super.getValue();\n   }\n\n   fieldsLoad(fields = [], object = null) {\n      super.fieldsLoad(fields, object);\n      // Format date types\n      fields.forEach((f) => {\n         if (f.type === \"date\")\n            f.format = (v) => this.AB.Webix.il8n.dateFormatStr(v);\n      });\n      this.uiInit();\n   }\n\n   toShortHand() {\n      return \"Add Filters\";\n   }\n\n   uiInit() {\n      this.uiQueryCustomValue();\n\n      let el = $$(this.ids.querybuilder);\n      if (el) {\n         // Clear fields\n         while (el.config.fields.length > 0) {\n            el.config.fields.pop();\n         }\n         // Set fields\n         (this.fieldsToQB() ?? []).forEach((f) => {\n            el.config.fields.push(f);\n         });\n         if (el.config.fields.length) {\n            el.enable();\n         } else {\n            this.setValue(\"\");\n            el.disable();\n         }\n      }\n   }\n\n   // HACK: have to overwrite Webix Query's function to support our custom input requirement.\n   // HooWoo\n   uiQueryCustomValue() {\n      const $el = $$(this.ids.querybuilder);\n      if (!$el) return;\n\n      const _this = this;\n      const $filterView = $el.$app.require(\"jet-views\", \"filter\");\n\n      if (!this._fnBaseGetValue)\n         this._fnBaseGetValue = $filterView.prototype.GetValue;\n      $filterView.prototype.GetValue = function () {\n         const rule = _this._fnBaseGetValue.call(this);\n         if (!rule) {\n            // Not sure if its a problem, so report in case it is.\n            _this.AB.notify.developer(new Error(\"No rule found\"), {\n               context: \"No rule from $filterView.GetValue()\",\n            });\n            return;\n         }\n\n         if (\n            rule.condition.type == \"in_query_field\" ||\n            rule.condition.type == \"not_in_query_field\"\n         ) {\n            const queryOptId = _uiQueryOptionId(rule.field);\n            const fieldOptId = _uiFieldOptionId(rule.field);\n            const selectedQueryId = $$(queryOptId)?.getValue();\n            const selectedFieldId = $$(fieldOptId)?.getValue();\n\n            if (selectedQueryId && selectedFieldId) {\n               rule.includes = [selectedQueryId, selectedFieldId];\n            }\n         }\n\n         return rule;\n      };\n\n      // window.query.views.filter.prototype.CreateFilter = (\n      $filterView.prototype.CreateFilter = async function (\n         fieldId,\n         type,\n         format,\n         conditions,\n         place\n      ) {\n         let inputs = _this.uiValue(fieldId);\n\n         let ui = {\n            id: place.config.id,\n            view: \"filter\",\n            localId: \"filter\",\n            conditions: conditions,\n            field: fieldId,\n            mode: type,\n            template: function (o) {\n               let str = o[fieldId];\n               let parser =\n                  format ?? (type == \"date\" ? webix.i18n.dateFormatStr : null);\n               if (parser) str = parser(str);\n               return str;\n            },\n            inputs: inputs,\n            margin: 6,\n         };\n\n         let filter = webix.ui(ui, place);\n\n         // NOTE: Need this to have filter.config.value?.includes value\n         // let data = [];\n         if ($el) {\n            await $el.$app.getService(\"backend\").data(fieldId);\n            // data = await $query.getService(\"backend\").data(fieldId);\n         }\n         // filter.parse(data);\n\n         // Populate options of \"in_query_field\" and \"not_in_query_field\"\n         if (\n            conditions.filter(\n               (cond) =>\n                  cond.id == \"in_query_field\" || cond.id == \"not_in_query_field\"\n            ).length &&\n            filter.config.value?.includes?.length == 2\n         ) {\n            // inputs = _this.uiValue(fieldId, filter.config.value.includes);\n            // filter.define(\"inputs\", inputs);\n            const queryOptId = _uiQueryOptionId(fieldId);\n            const fieldOptId = _uiFieldOptionId(fieldId);\n            const $queryOpt = $$(queryOptId);\n            const $fieldOpt = $$(fieldOptId);\n            const vals = filter.config.value?.includes ?? [];\n            if (vals?.length > 1 && $queryOpt && $fieldOpt) {\n               $queryOpt.setValue(vals[0]);\n               $fieldOpt.setValue(vals[1]);\n               $queryOpt.refresh();\n               $fieldOpt.refresh();\n            }\n         }\n\n         return filter;\n      };\n   }\n\n   uiValue(fieldColumnName, defaultValue = null) {\n      let result;\n\n      // Special case: this_object\n      if (fieldColumnName == \"this_object\") {\n         return []\n            .concat(this.uiQueryValue(\"this_object\"))\n            .concat(this.uiDataCollectionValue(\"this_object\"))\n            .concat(this.uiCustomValue(\"this_object\"))\n            .concat(this.uiContextValue(\"this_object\", \"uuid\"));\n      }\n\n      let field = (this._Fields ?? []).filter(\n         (f) => f.id == fieldColumnName\n      )[0];\n\n      switch (field?.key) {\n         case \"boolean\":\n            result = this.uiNoneValue(field);\n            break;\n         case \"connectObject\":\n            result = []\n               .concat(this.uiQueryValue(field))\n               .concat(this.uiUserValue(field))\n               .concat(this.uiDataCollectionValue(field))\n               .concat(this.uiContextValue(field))\n               .concat(this.uiNoneValue());\n            break;\n         case \"date\":\n         case \"datetime\":\n            result = [\"datepicker\", \"daterangepicker\"]\n               .concat(this.uiNoneValue())\n               .concat(this.uiContextValue(field));\n            break;\n         case \"list\":\n            result = this.uiListValue(field);\n            break;\n         case \"user\":\n            result = []\n               .concat(this.uiNoneValue())\n               .concat(this.uiUserValue(field));\n            break;\n         // case \"number\":\n         //    result = [\"text\"];\n         //    break;\n         case \"string\":\n         case \"LongText\":\n         case \"email\":\n            result = this.uiNoneValue();\n            break;\n      }\n\n      // Add filter options to Custom index\n      const LinkType = `${field?.settings?.linkType}:${field?.settings?.linkViaType}`;\n      if (\n         // 1:M\n         LinkType == \"one:many\" ||\n         // 1:1 isSource = true\n         (LinkType == \"one:one\" && field?.settings?.isSource)\n      ) {\n         result = result ?? [];\n\n         if (field?.settings?.isCustomFK)\n            result = result.concat(this.uiTextValue(field));\n\n         result = result.concat(this.uiQueryFieldValue(field, defaultValue));\n      } else if (field?.key != \"connectObject\") {\n         result = (result ?? [])\n            .concat(this.uiTextValue(field))\n            .concat(this.uiQueryFieldValue(field, defaultValue))\n            .concat(this.uiContextValue(field));\n      }\n      // Special case: from Process builder\n      // .processFieldsLoad()\n      else if (fieldColumnName.indexOf(\"uuid\") > -1) {\n         result = this.uiContextValue(null, fieldColumnName);\n      }\n\n      if (this._settings.isRecordRule) {\n         result = (result ?? []).concat(this.uiRecordRuleValue(field));\n      }\n\n      result = (result ?? []).concat(this.uiCustomValue(field));\n\n      return result;\n   }\n\n   uiNoneValue() {\n      return [\n         {\n            batch: \"none\",\n            borderless: true,\n            view: \"template\",\n            template: \"\",\n         },\n      ];\n   }\n\n   uiBooleanValue(field) {\n      return [\n         {\n            batch: \"boolean\",\n            view: \"checkbox\",\n         },\n      ];\n   }\n\n   uiTextValue(field) {\n      return [\n         {\n            batch: \"text\",\n            view: \"text\",\n            on: {\n               onAfterRender: function () {\n                  // HACK: focus on webix.text and webix.textarea\n                  // Why!! If the parent layout has zIndex lower than 101,\n                  // then is not able to focus to webix.text and webix.textarea\n                  let $layout =\n                     this.queryView(function (a) {\n                        return !a.getParentView();\n                     }, \"parent\") ?? this;\n                  $layout.$view.style.zIndex = 202;\n               },\n            },\n         },\n      ];\n   }\n\n   uiQueryValue(field) {\n      let options = [];\n\n      let isQueryField =\n         this._QueryFields?.filter((f) => f.id == field.id).length > 0;\n\n      // populate the list of Queries for this_object:\n      if (field == \"this_object\" && this._Object) {\n         options = this.queries((q) => q.canFilterObject(this._Object));\n      }\n      // populate the list of Queries for a query field\n      else if (isQueryField) {\n         options = this.queries(\n            (q) =>\n               (this._Object ? this._Object.id : \"\") != q.id && // Prevent filter looping\n               q.canFilterObject(field.datasourceLink)\n         );\n      }\n\n      options?.forEach((q) => {\n         options.push({\n            id: q.id,\n            value: q.label,\n         });\n      });\n\n      return [\n         {\n            batch: \"query\",\n            view: \"combo\",\n            options: options ?? [],\n         },\n      ];\n   }\n\n   uiListValue(field) {\n      return [\n         {\n            batch: \"list\",\n            view: \"combo\",\n            options: field?.settings?.options?.map(function (x) {\n               return {\n                  id: x.id,\n                  value: x.text,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiUserValue(field) {\n      return [\n         {\n            batch: \"user\",\n            view: \"combo\",\n            options: this.AB.Account.userList().map((u) => {\n               return {\n                  id: u.username,\n                  value: u.username,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiDataCollectionValue(field) {\n      let linkObjectId;\n      if (field == \"this_object\" && this._Object) {\n         linkObjectId = this._Object.id;\n      } else {\n         linkObjectId = field?.settings?.linkObject;\n      }\n\n      return [\n         {\n            batch: \"datacollection\",\n            view: \"combo\",\n            options: linkObjectId\n               ? this.AB.datacollections(\n                    (dc) => dc?.datasource?.id == linkObjectId\n                 ).map((dc) => {\n                    return {\n                       id: dc.id,\n                       value: dc.label,\n                    };\n                 })\n               : [],\n         },\n      ];\n   }\n\n   uiQueryFieldValue(field, defaultValue) {\n      // ABQuery Options\n      const qOpts = this.queries(\n         (q) => this._Object == null || q.id != this._Object.id\n      ).map((q) => {\n         return {\n            id: q.id,\n            value: q.label,\n         };\n      });\n\n      const pullFieldOption = (queryId) => {\n         const options = [];\n\n         // Get fields of the query\n         const Query = this.AB.queryByID(queryId);\n         if (Query) {\n            Query.fields((f) => !f.isConnection).forEach((q) => {\n               options.push({\n                  id: q.id,\n                  value: `${q.object.label}.${q.label}`,\n               });\n            });\n         }\n\n         return options;\n      };\n\n      const refreshFieldOption = ($queryOpt, queryId) => {\n         const options = pullFieldOption(queryId);\n\n         // Update UI\n         if ($queryOpt) {\n            const $queryContainer = $queryOpt.getParentView();\n            const $fieldOption = $queryContainer.getChildViews()[1];\n            $fieldOption?.define(\"options\", options);\n            $fieldOption?.refresh();\n         }\n      };\n\n      let queryId;\n      let fieldId;\n      let fieldOptions = [];\n      if (defaultValue?.length == 2) {\n         queryId = defaultValue[0];\n         fieldId = defaultValue[1];\n\n         fieldOptions = pullFieldOption(queryId);\n      }\n\n      return [\n         {\n            batch: \"queryField\",\n            view: \"form\",\n            borderless: true,\n            padding: 0,\n            elements: [\n               {\n                  id: _uiQueryOptionId(field?.id),\n                  name: \"query\",\n                  view: \"combo\",\n                  placeholder:\n                     this.labels.component.inQueryFieldQueryPlaceholder,\n                  options: qOpts,\n                  value: queryId,\n                  on: {\n                     onChange: function (qVal) {\n                        refreshFieldOption(this, qVal);\n                     },\n                  },\n               },\n               {\n                  id: _uiFieldOptionId(field?.id),\n                  name: \"field\",\n                  view: \"combo\",\n                  placeholder: L(\"Choose a Field\"),\n                  options: fieldOptions,\n                  value: fieldId,\n               },\n            ],\n         },\n      ];\n   }\n\n   uiRecordRuleValue(field) {\n      return [\n         {\n            batch: \"recordRule\",\n            view: \"select\",\n            options: this._settings.recordRuleFieldOptions ?? [],\n         },\n      ];\n   }\n\n   uiContextValue(field, processFieldKey = null) {\n      const processFields = (this._ProcessFields ?? [])\n         .filter((pField) => {\n            if (!pField) return false;\n\n            let result = false;\n            switch (field) {\n               case \"this_object\":\n                  result =\n                     this._Object.id === pField.object?.id && !pField.field;\n\n                  break;\n\n               default:\n                  switch (field.key) {\n                     case \"boolean\":\n                        result = [\"boolean\"].includes(pField.field?.key);\n\n                        break;\n\n                     case \"connectObject\":\n                        result =\n                           field.settings.linkObject ===\n                           (pField.field?.object.id ?? pField.object.id);\n\n                        if (!field.settings.isCustomFK) {\n                           result = result && !pField.field;\n\n                           break;\n                        }\n\n                        result =\n                           result &&\n                           (field.settings.indexField ||\n                              field.settings.indexField2) === pField.field?.id;\n\n                        break;\n\n                     case \"date\":\n                     case \"datetime\":\n                        result = [\"date\", \"datetime\"].includes(\n                           pField.field?.key\n                        );\n\n                        break;\n\n                     case \"calculate\":\n                     case \"formula\":\n                     case \"number\":\n                        result = [\"calculate\", \"formula\", \"number\"].includes(\n                           pField.field?.key\n                        );\n\n                        break;\n\n                     case \"string\":\n                     case \"LongText\":\n                     case \"email\":\n                     case \"AutoIndex\":\n                     case \"list\":\n                        result = [\n                           \"string\",\n                           \"LongText\",\n                           \"email\",\n                           \"AutoIndex\",\n                           \"list\",\n                        ].includes(pField.field?.key);\n\n                        break;\n\n                     case \"user\":\n                        result = [\"user\"].includes(pField.field?.key);\n\n                        break;\n\n                     default:\n                        if (pField.key) {\n                           // uuid\n                           const processFieldId = pField.key.split(\".\").pop();\n\n                           result =\n                              processFieldId === field.id ||\n                              processFieldId === field.key ||\n                              processFieldId === processFieldKey ||\n                              pField.key === processFieldKey;\n                        }\n\n                        break;\n                  }\n\n                  break;\n            }\n\n            return result;\n         })\n         .map((e) => {\n            return {\n               id: e.key,\n               value: L(\"context({0})\", [e.label]),\n            };\n         });\n\n      if (!processFields) return [];\n\n      return [\n         {\n            batch: \"context\",\n            view: \"select\",\n            options: [\n               {\n                  id: \"empty\",\n                  value: this.labels.component.contextDefaultOption,\n               },\n               ...processFields,\n            ],\n         },\n      ];\n   }\n\n   uiCustomValue(field) {\n      if (!field) return [];\n\n      const customOptions = this._customOptions ?? {};\n      const options = customOptions[field.id ?? field] ?? {};\n      return options.values ?? [];\n   }\n\n   popUp(...options) {\n      const condition = Object.assign({}, this.condition);\n\n      if (!this.myPopup) {\n         let ui = {\n            id: this.ids.popup,\n            view: \"popup\",\n            height: 400,\n            width: 800,\n            body: this.ui,\n         };\n\n         if (!$$(this.ids.popup)) {\n            this.myPopup = webix.ui(ui);\n            this.init(this._settings);\n            if (this._Fields) {\n               this.fieldsLoad(this._Fields, this._Object);\n            }\n\n            // NOTE: do this, before the .setValue() operation, as we need to have\n            // our fields and filters defined BEFORE a setValue() is performed.\n            // this.uiInit();\n\n            if (condition) {\n               this.setValue(condition);\n            }\n\n            this.myPopup.show(...options);\n         } else {\n            $$(this.ids.popup).show(...options);\n         }\n      } else {\n         this.myPopup.show(...options);\n      }\n   }\n\n   /**\n    * @method addCustomOption\n    *\n    * @param {string|uuid} fieldId\n    * @param {Object} options - {\n    *                               conditions: [],\n    *                               values: []\n    *                           }\n    */\n   addCustomOption(fieldId, options = {}) {\n      this._customOptions = this._customOptions ?? {};\n      this._customOptions[fieldId] = options;\n   }\n};\n","const RowFilterCore = require(\"../core/RowFilterCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class RowFilter extends RowFilterCore {\n   constructor(App, idBase, AB) {\n      super(App, idBase, AB);\n\n      console.error(\"TODO: Switch RowFilter => FilterComplex\");\n\n      // internal list of Webix IDs to reference our UI components.\n      let ids = (this.ids = {\n         component: this.unique(`${idBase}_rowFilter`),\n         filterForm: this.unique(`${idBase}_rowFilter_form`),\n         addNewFilter: this.unique(`${idBase}_rowFilter_addNewFilter`),\n\n         glue: this.unique(`${idBase}_rowFilter_glue`),\n         field: this.unique(`${idBase}_rowFilter_field`),\n         rule: this.unique(`${idBase}_rowFilter_rule`),\n         inputValue: this.unique(`${idBase}_rowFilter_inputValue`),\n\n         queryCombo: this.unique(`${idBase}_rowFilter_queryCombo`),\n         queryFieldCombo: this.unique(`${idBase}_rowFilter_queryFieldCombo`),\n         queryFieldComboQuery: this.unique(\n            `${idBase}_rowFilter_queryFieldComboQuery`\n         ),\n         queryFieldComboField: this.unique(\n            `${idBase}_rowFilter_queryFieldComboField`\n         ),\n         fieldMatch: this.unique(`${idBase}_rowFilter_fieldMatchCombo`),\n\n         dataCollection: this.unique(`${idBase}_rowFilter_dataCollection`),\n\n         listOptions: this.unique(`${idBase}_rowFilter_listOptions`),\n\n         datePicker: this.unique(`${idBase}_rowFilter_datePicker`),\n      });\n\n      // Set current username\n      // this.Account.username = this.AB.Account.username();\n\n      var batchName; // we need to revert to this default when switching away from a in/by query field\n\n      // Default options list to push to all fields\n      this.queryFieldOptions = [\n         {\n            value: L(\"By Query Field\"),\n            id: \"in_query_field\",\n         },\n         {\n            value: L(\"Not In Query\"),\n            id: \"not_in_query_field\",\n         },\n      ];\n\n      this.recordRuleOptions = [];\n      this.recordRuleFieldOptions = [];\n\n      let _logic = this._logic || {};\n\n      /**\n       * @method getFieldList\n       * return field list to render options\n       */\n      _logic.getFieldList = () => {\n         return (this._Fields || []).map((f) => {\n            let label = f.label;\n\n            // include object's name to options\n            if (this._settings.showObjectName && f.object) {\n               label = f.object.label + \".\" + f.label;\n            }\n\n            return {\n               id: f.id,\n               value: label,\n               alias: f.alias || undefined, // ABObjectQuery\n            };\n         });\n      };\n\n      _logic.getFilterUI = () => {\n         let instance = this;\n         let config_settings = this.config_settings || {};\n\n         return {\n            id: \"f\" + webix.uid(),\n            isolate: true,\n            cols: [\n               {\n                  // Add / Or\n                  view: \"combo\",\n                  id: ids.glue,\n                  width: 80,\n                  value: config_settings.glue || \"and\",\n                  options: [\n                     {\n                        value: L(\"And\"),\n                        id: \"and\",\n                     },\n                     {\n                        value: L(\"Or\"),\n                        id: \"or\",\n                     },\n                  ],\n                  on: {\n                     onChange: function (newVal, oldVal) {\n                        _logic.selectCombineCondition(newVal);\n                     },\n                  },\n               },\n               {\n                  // Field list\n                  view: \"combo\",\n                  id: ids.field,\n                  suggest: {\n                     on: {\n                        onBeforeShow: function () {\n                           this.define(\"width\", 400);\n                           this.resize();\n                        },\n                     },\n                     data: _logic.getFieldList(),\n                  },\n                  on: {\n                     onChange: function (columnId) {\n                        var $viewCond = this.getParentView();\n                        _logic.selectField(columnId, $viewCond);\n                     },\n                  },\n               },\n               // Comparer\n               {\n                  id: ids.rule,\n                  width: 220,\n                  cells: [\n                     {},\n                     // Query\n                     {\n                        batch: \"query\",\n                        view: \"combo\",\n                        value: \"in_query\",\n                        options: [\n                           {\n                              value: L(\"In Query\"),\n                              id: \"in_query\",\n                           },\n                           {\n                              value: L(\"Not In Query\"),\n                              id: \"not_in_query\",\n                           },\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"is empty\"),\n                              id: \"is_empty\",\n                           },\n                           {\n                              value: L(\"is not empty\"),\n                              id: \"is_not_empty\",\n                           },\n                           {\n                              value: L(\"Same As User\"),\n                              id: \"same_as_user\",\n                           },\n                           {\n                              value: L(\"Not Same As User\"),\n                              id: \"not_same_as_user\",\n                           },\n                           {\n                              value: L(\"In Data Collection\"),\n                              id: \"in_data_collection\",\n                           },\n                           {\n                              value: L(\"Not In Data Collection\"),\n                              id: \"not_in_data_collection\",\n                           },\n                        ].concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition, oldValue) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n\n                     // Date\n                     {\n                        batch: \"date\",\n                        view: \"combo\",\n                        value: \"less\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"is before\"),\n                              id: \"less\",\n                           },\n                           {\n                              value: L(\"is after\"),\n                              id: \"greater\",\n                           },\n                           {\n                              value: L(\"is on or before\"),\n                              id: \"less_or_equal\",\n                           },\n                           {\n                              value: L(\"is on or after\"),\n                              id: \"greater_or_equal\",\n                           },\n                           {\n                              value: L(\"is before current date\"),\n                              id: \"less_current\",\n                           },\n                           {\n                              value: L(\"is after current date\"),\n                              id: \"greater_current\",\n                           },\n                           {\n                              value: L(\"is on or before current date\"),\n                              id: \"less_or_equal_current\",\n                           },\n                           {\n                              value: L(\"is on or after current date\"),\n                              id: \"greater_or_equal_current\",\n                           },\n                           {\n                              value: L(\"last ... days\"),\n                              id: \"last_days\",\n                           },\n                           {\n                              value: L(\"next ... days\"),\n                              id: \"next_days\",\n                           },\n                           {\n                              value: L(\"is current date\"),\n                              id: \"is_current_date\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Number\n                     {\n                        batch: \"number\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\":\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"≠\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"<\"),\n                              id: \"less\",\n                           },\n                           {\n                              value: L(\">\"),\n                              id: \"greater\",\n                           },\n                           {\n                              value: L(\"≤\"),\n                              id: \"less_or_equal\",\n                           },\n                           {\n                              value: L(\"≥\"),\n                              id: \"greater_or_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // List\n                     {\n                        batch: \"list\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"Same As User\"),\n                              id: \"same_as_user\",\n                           },\n                           {\n                              value: L(\"Not Same As User\"),\n                              id: \"not_same_as_user\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition, oldValue) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Boolean\n                     {\n                        batch: \"boolean\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // User\n                     {\n                        batch: \"user\",\n                        view: \"combo\",\n                        value: \"is_current_user\",\n                        options: [\n                           {\n                              value: L(\"is current user\"),\n                              id: \"is_current_user\",\n                           },\n                           {\n                              value: L(\"is not current user\"),\n                              id: \"is_not_current_user\",\n                           },\n                           {\n                              value: L(\"contains current user\"),\n                              id: \"contain_current_user\",\n                           },\n                           {\n                              value: L(\"does not contain current user\"),\n                              id: \"not_contain_current_user\",\n                           },\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // String\n                     {\n                        batch: \"string\",\n                        view: \"combo\",\n                        value: \"contains\",\n                        options: [\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Email\n                     {\n                        batch: \"email\",\n                        view: \"combo\",\n                        value: \"contains\",\n                        options: [\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               // Value\n               {\n                  id: ids.inputValue,\n                  isolate: true,\n                  cells: [\n                     {\n                        batch: \"empty\",\n                     },\n\n                     // Query\n                     {\n                        id: ids.queryCombo,\n\n                        batch: \"query\",\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Query Field\n                     {\n                        id: ids.queryFieldCombo,\n                        batch: \"queryField\",\n                        rows: [\n                           {\n                              id: ids.queryFieldComboQuery,\n                              view: \"combo\",\n                              options: [],\n                              placeholder: L(\"Choose a Query\"),\n                              on: {\n                                 onChange: function (value) {\n                                    var $viewComparer = this.getParentView();\n                                    var $viewCond = $viewComparer\n                                       .getParentView()\n                                       .getParentView();\n                                    _logic.onChangeQueryFieldCombo(\n                                       value,\n                                       $viewCond\n                                    );\n\n                                    _logic.onChange();\n                                 },\n                              },\n                           },\n                           {\n                              id: ids.queryFieldComboField,\n                              view: \"combo\",\n                              options: [],\n                              placeholder: L(\"Choose a Field\"),\n                              on: {\n                                 onChange: _logic.onChange,\n                              },\n                           },\n                        ],\n                     },\n\n                     // Field match\n                     {\n                        id: ids.fieldMatch,\n                        batch: \"fieldMatch\",\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Data collection\n                     {\n                        id: ids.dataCollection,\n                        batch: \"dataCollection\",\n                        view: \"richselect\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Date\n                     {\n                        // inputView.format = field.getDateFormat();\n                        batch: \"date\",\n                        id: ids.datePicker,\n                        view: \"datepicker\",\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Number\n                     {\n                        batch: \"number\",\n                        view: \"text\",\n                        validate: webix.rules.isNumber,\n                        on: {\n                           onTimedKeyPress: function () {\n                              if (this.validate()) _logic.onChange();\n                           },\n                        },\n                     },\n                     // List\n                     {\n                        batch: \"list\",\n                        id: ids.listOptions,\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Boolean\n                     {\n                        batch: \"boolean\",\n                        view: \"checkbox\",\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // User\n                     {\n                        batch: \"user\",\n                        view: \"combo\",\n                        options: this.AB.Account.userList().map((u) => {\n                           return {\n                              id: u.username,\n                              value: u.username,\n                           };\n                        }),\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // String\n                     {\n                        batch: \"string\",\n                        view: \"text\",\n                        on: {\n                           onTimedKeyPress: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Email\n                     {\n                        batch: \"email\",\n                        view: \"text\",\n                        on: {\n                           onTimedKeyPress: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  icon: \"fa fa-plus\",\n                  type: \"icon\",\n                  autowidth: true,\n                  click: function () {\n                     var $viewForm = this.getFormView();\n\n                     var indexView = $viewForm.index(this.getParentView());\n\n                     _logic.addNewFilter(indexView + 1);\n                  },\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_danger\",\n                  icon: \"fa fa-trash\",\n                  type: \"icon\",\n                  autowidth: true,\n                  click: function () {\n                     var $viewCond = this.getParentView();\n\n                     _logic.removeNewFilter($viewCond);\n                  },\n               },\n            ],\n         };\n      };\n\n      _logic.getAddButtonUI = () => {\n         return {\n            view: \"button\",\n            id: ids.addNewFilter,\n            css: \"webix_primary\",\n            type: \"form\",\n            label: L(\"Add a filter\"),\n            click: () => {\n               _logic.addNewFilter();\n            },\n         };\n      };\n\n      _logic.addNewFilter = (index, fieldId) => {\n         var viewId;\n         var ui = _logic.getFilterUI();\n\n         var $viewForm = $$(ids.filterForm);\n         if ($viewForm) {\n            viewId = $viewForm.addView(ui, index);\n\n            _logic.toggleAddNewButton();\n\n            // select a option of field\n            if (fieldId) _logic.selectField(fieldId, $$(viewId), true);\n         }\n\n         return viewId;\n      };\n\n      _logic.removeNewFilter = function ($viewCond) {\n         var $viewForm = $$(ids.filterForm);\n\n         $viewForm.removeView($viewCond);\n\n         _logic.toggleAddNewButton();\n\n         _logic.onChange();\n      };\n\n      _logic.toggleAddNewButton = function () {\n         if (!$$(ids.filterForm)) return;\n\n         // Show \"Add new filter\" button\n         if ($$(ids.filterForm).getChildViews().length < 1) {\n            $$(ids.filterForm).hide();\n            $$(ids.addNewFilter).show();\n         }\n         // Hide \"Add new filter\" button\n         else {\n            $$(ids.filterForm).show();\n            $$(ids.addNewFilter).hide();\n         }\n      };\n\n      _logic.selectCombineCondition = (val, ignoreNotify) => {\n         // define combine value to configuration\n         this.config_settings.glue = val;\n\n         // update value of every combine conditions\n         var $viewConds = $$(ids.filterForm).getChildViews();\n         $viewConds.forEach((v) => {\n            if (v.$$ && v.$$(ids.glue)) v.$$(ids.glue).setValue(val);\n         });\n\n         if (!ignoreNotify) _logic.onChange();\n      };\n\n      _logic.selectField = (columnId, $viewCond, ignoreNotify) => {\n         if (!this._Fields) return;\n\n         var field = this._Fields.filter((f) => f.id == columnId)[0];\n         if (!field) return;\n\n         // switch view\n         batchName = field.key;\n         if (field.id == \"this_object\") batchName = \"query\";\n         // Special this object query\n         else if (batchName == \"LongText\" || batchName == \"combined\")\n            batchName = \"string\";\n         else if (field.key == \"formula\") batchName = \"number\";\n         var isQueryField =\n            this._QueryFields.filter((f) => {\n               return f.id == field.id;\n            }).length > 0;\n         if (isQueryField) {\n            // we chose a connectField which is now a Query type\n            batchName = \"query\";\n         }\n         $viewCond.$$(ids.rule).showBatch(batchName);\n         $viewCond.$$(ids.inputValue).showBatch(batchName);\n\n         let options = [];\n         let Queries = [];\n\n         // populate the list of Queries for this_object:\n         if (field.id == \"this_object\" && this._Object) {\n            Queries = this.queries((q) => q.canFilterObject(this._Object));\n         }\n         // populate the list of Queries for a query field\n         else if (isQueryField) {\n            Queries = this.queries((q) => {\n               return (\n                  (this._Object ? this._Object.id : \"\") != q.id && // Prevent filter looping\n                  q.canFilterObject(field.datasourceLink)\n               );\n            });\n         }\n\n         Queries.forEach((q) => {\n            options.push({\n               id: q.id,\n               value: q.label,\n            });\n         });\n         $viewCond\n            .$$(ids.inputValue)\n            .$$(ids.queryCombo)\n            .define(\"options\", options);\n         $viewCond.$$(ids.inputValue).$$(ids.queryCombo).refresh();\n\n         // populate options of list\n         if (field.key == \"list\") {\n            let listOptions = field.settings.options.map(function (x) {\n               return {\n                  id: x.id,\n                  value: x.text,\n               };\n            });\n\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.listOptions)\n               .define(\"options\", listOptions);\n            $viewCond.$$(ids.inputValue).$$(ids.listOptions).refresh();\n         }\n         // set format of datepicker\n         else if (field.key == \"date\") {\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.datePicker)\n               .define(\"format\", field.getFormat());\n            $viewCond.$$(ids.inputValue).$$(ids.datePicker).refresh();\n         }\n\n         var rule = null,\n            ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n            $viewComparer = $viewCond\n               .$$(ids.rule)\n               .queryView({ id: ruleViewId });\n         if ($viewComparer && $viewComparer.getList) {\n            let defaultOpt = ($viewComparer.getList().config.data || [])[0];\n            if (defaultOpt) {\n               $viewComparer.setValue(defaultOpt.id);\n            }\n\n            // rule = $viewComparer.getValue();\n            // if (rule == \"in_query_field\" || rule == \"not_in_query_field\") {\n            // \t// Show the new value inputs\n            // \t$viewCond.$$(ids.inputValue).showBatch(\"queryField\");\n            // } else if (rule == \"same_as_field\" || rule == \"not_same_as_field\") {\n            // \t// Show the new value inputs\n            // \t$viewCond.$$(ids.inputValue).showBatch(\"fieldMatch\");\n            // }\n         }\n\n         if (!ignoreNotify) _logic.onChange();\n      };\n\n      _logic.onChangeRule = (rule, $viewCond, notify = false) => {\n         switch (rule) {\n            case \"contains\":\n            case \"not_contains\":\n            case \"equals\":\n            case \"not_equal\":\n               // For \"connect_fields\" search by CUSTOM index value\n               if (batchName == \"query\") {\n                  $viewCond.$$(ids.inputValue).showBatch(\"string\");\n               }\n               // If want to call notify or call .onChange(), then pass notify is true.\n               // _logic.onChange();\n               break;\n\n            case \"is_current_user\":\n            case \"is_not_current_user\":\n            case \"contain_current_user\":\n            case \"not_contain_current_user\":\n            case \"same_as_user\":\n            case \"not_same_as_user\":\n            case \"less_current\":\n            case \"greater_current\":\n            case \"less_or_equal_current\":\n            case \"greater_or_equal_current\":\n            case \"is_empty\":\n            case \"is_not_empty\":\n            case \"is_current_date\":\n               // clear and disable the value field\n               $viewCond.$$(ids.inputValue).showBatch(\"empty\");\n               _logic.onChange();\n               break;\n\n            case \"last_days\":\n            case \"next_days\":\n               // Show the number input\n               $viewCond.$$(ids.inputValue).showBatch(\"number\");\n               break;\n\n            case \"in_query_field\":\n            case \"not_in_query_field\":\n               // populate the list of Queries for this_object:\n               var options = [];\n\n               // Get all application's queries\n               this.queries(\n                  (q) => this._Object == null || q.id != this._Object.id\n               ).forEach((q) => {\n                  options.push({\n                     id: q.id,\n                     value: q.label,\n                  });\n               });\n\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.queryFieldComboQuery)\n                  .define(\"options\", options);\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.queryFieldComboQuery)\n                  .refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"queryField\");\n               break;\n\n            case \"same_as_field\":\n            case \"not_same_as_field\":\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.fieldMatch)\n                  .define(\"options\", this.recordRuleFieldOptions);\n               $viewCond.$$(ids.inputValue).$$(ids.fieldMatch).refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"fieldMatch\");\n               break;\n\n            case \"in_data_collection\":\n            case \"not_in_data_collection\": {\n               let dcOptions = [];\n\n               // pull data collection list\n\n               // get id of the link object\n               let linkObjectId,\n                  columnId = $viewCond.$$(ids.field).getValue();\n               if (columnId == \"this_object\" && this._Object) {\n                  linkObjectId = this._Object.id;\n               } else {\n                  let field = this._Fields.filter((f) => f.id == columnId)[0];\n                  if (field) linkObjectId = field.settings.linkObject;\n               }\n\n               if (this._Application && linkObjectId) {\n                  this._Application\n                     .datacollections(\n                        (dc) =>\n                           dc.datasource && dc.datasource.id == linkObjectId\n                     )\n                     .forEach((dc) => {\n                        dcOptions.push({\n                           id: dc.id,\n                           value: dc.label,\n                        });\n                     });\n               }\n\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.dataCollection)\n                  .define(\"options\", dcOptions);\n               $viewCond.$$(ids.inputValue).$$(ids.dataCollection).refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"dataCollection\");\n               break;\n            }\n\n            default:\n               // Show the default value inputs\n               $viewCond.$$(ids.inputValue).showBatch(batchName);\n\n               if (notify) _logic.onChange();\n\n               break;\n         }\n      };\n\n      _logic.onChangeQueryFieldCombo = (value, $viewCond) => {\n         // populate the list of Queries for this_object:\n         let options = [];\n         // Get all queries fields\n         let Query = this.queries((q) => {\n            return q.id == value;\n         })[0];\n         if (Query) {\n            Query.fields((f) => {\n               return !f.isConnection;\n            }).forEach((q) => {\n               options.push({\n                  id: q.id,\n                  value: q.object.label + \".\" + q.label,\n               });\n            });\n\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.queryFieldComboField)\n               .define(\"options\", options);\n            $viewCond.$$(ids.inputValue).$$(ids.queryFieldComboField).refresh();\n         }\n\n         // _logic.onChange();\n      };\n\n      _logic.onChange = () => {\n         if (!this.__blockOnChange) {\n            // refresh config settings before notify\n            _logic.getValue();\n\n            console.warn(\"convert RowFilter.callback.onChange() to .emit()\");\n            _logic.callbacks.onChange();\n            this.emit(\"change\");\n         }\n\n         return false;\n      };\n\n      _logic.blockOnChange = () => {\n         this.__blockOnChange = true;\n      };\n\n      _logic.unblockOnChange = () => {\n         this.__blockOnChange = false;\n      };\n\n      /**\n       * @method getValue\n       *\n       * @return {JSON} -\n       * {\n       * \t\tglue: '', // 'and', 'or'\n       *\t\trules: [\n       *\t\t\t{\n       *\t\t\t\tkey:\t'column name',\n       *\t\t\t\trule:\t'rule',\n       *\t\t\t\tvalue:\t'value'\n       *\t\t\t}\n       *\t\t]\n       * }\n       */\n      _logic.getValue = () => {\n         let config_settings = {\n            glue: \"and\",\n            rules: [],\n         };\n\n         var $viewForm = $$(ids.filterForm);\n         if ($viewForm) {\n            $viewForm.getChildViews().forEach(($viewCond, index) => {\n               if (index == 0) {\n                  config_settings.glue = $viewCond.$$(ids.glue).getValue();\n               }\n\n               var $fieldElem = $viewCond.$$(ids.field);\n               if (!$fieldElem) return;\n\n               /* field id */\n               var fieldId = $fieldElem.getValue();\n               if (!fieldId) return;\n\n               /* alias */\n               var alias;\n               var selectedOpt = $viewCond\n                  .$$(ids.field)\n                  .getPopup()\n                  .config.body.data.filter((opt) => opt.id == fieldId)[0];\n               if (selectedOpt) alias = selectedOpt.alias || undefined;\n\n               /* rule */\n               var rule = null,\n                  ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n                  $viewComparer = $viewCond\n                     .$$(ids.rule)\n                     .queryView({ id: ruleViewId });\n               if ($viewComparer && $viewComparer.getValue)\n                  rule = $viewComparer.getValue();\n\n               /* value */\n               var value = null,\n                  valueViewId = $viewCond.$$(ids.inputValue).getActiveId(),\n                  $viewConditionValue = $viewCond\n                     .$$(ids.inputValue)\n                     .queryView({ id: valueViewId });\n               if ($viewConditionValue && $viewConditionValue.getValue) {\n                  value = $viewConditionValue.getValue();\n               } else if (\n                  $viewConditionValue &&\n                  $viewConditionValue.getChildViews()\n               ) {\n                  var vals = [];\n                  $viewConditionValue.getChildViews().forEach((element) => {\n                     vals.push($$(element).getValue());\n                  });\n                  value = vals.join(\":\");\n               }\n\n               // Convert date format\n               if (value instanceof Date) {\n                  let dateField = this._Fields.filter(\n                     (f) => f.id == fieldId\n                  )[0];\n                  if (dateField) {\n                     value = dateField.exportValue(value);\n                  } else {\n                     value = value.toISOString();\n                  }\n               }\n\n               config_settings.rules.push({\n                  alias: alias || undefined,\n                  key: fieldId,\n                  rule: rule,\n                  value: value,\n               });\n            });\n         }\n\n         this.config_settings = config_settings;\n\n         return this.config_settings;\n      };\n\n      // webix UI definition:\n      this.ui = {\n         id: ids.component,\n         rows: [\n            {\n               view: \"form\",\n               id: ids.filterForm,\n               hidden: true,\n               elements: [],\n            },\n            _logic.getAddButtonUI(),\n         ],\n      };\n   }\n\n   // setting up UI\n   init(options = {}) {\n      super.init(options);\n\n      // register our callbacks:\n      for (var c in this._logic.callbacks) {\n         this._logic.callbacks[c] = options[c] || this._logic.callbacks[c];\n      }\n\n      if (options.showObjectName)\n         this._settings.showObjectName = options.showObjectName;\n\n      if (options.isRecordRule) {\n         this.recordRuleOptions = [\n            {\n               value: L(\"Same As Field\"),\n               id: \"same_as_field\",\n            },\n            {\n               value: L(\"Not Field\"),\n               id: \"not_same_as_field\",\n            },\n         ];\n         this.recordRuleFieldOptions = options.fieldOptions;\n      }\n   }\n\n   setValue(settings) {\n      settings = settings || {};\n\n      super.setValue(settings);\n\n      let ids = this.ids;\n      let logic = this._logic;\n\n      // block .onChange event\n      logic.blockOnChange();\n\n      let config_settings = this.AB.cloneDeep(settings);\n      config_settings.rules = config_settings.rules || [];\n\n      // Redraw form with no elements\n      var $viewForm = $$(ids.filterForm);\n      if ($viewForm) webix.ui([], $viewForm);\n\n      // Add \"new filter\" button\n      if (config_settings.rules.length == 0) {\n         logic.toggleAddNewButton();\n      }\n\n      config_settings.rules.forEach((f) => {\n         var viewId = logic.addNewFilter(),\n            $viewCond = $$(viewId);\n\n         if ($viewCond == null) return;\n\n         var field = this._Fields.filter((col) => col.id == f.key)[0];\n\n         // \"and\" \"or\"\n         $viewCond.$$(ids.glue).define(\"value\", config_settings.glue);\n         $viewCond.$$(ids.glue).refresh();\n\n         // Select Field\n         $viewCond.$$(ids.field).define(\"value\", f.key);\n         $viewCond.$$(ids.field).refresh();\n         logic.selectField(f.key, $viewCond, true);\n\n         // Comparer\n         var ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n            $viewComparer = $viewCond\n               .$$(ids.rule)\n               .queryView({ id: ruleViewId });\n         if ($viewComparer && $viewComparer.setValue) {\n            $viewComparer.define(\"value\", f.rule);\n            $viewComparer.refresh();\n         }\n\n         // if (f.rule == \"in_query_field\" || f.rule == \"not_in_query_field\" || f.rule == \"same_as_field\" || f.rule == \"not_same_as_field\") {\n         $viewCond.blockEvent();\n         logic.onChangeRule(f.rule, $viewCond);\n         $viewCond.unblockEvent();\n         // }\n\n         // Input\n         var valueViewId = $viewCond.$$(ids.inputValue).getActiveId(),\n            $viewConditionValue = $viewCond\n               .$$(ids.inputValue)\n               .queryView({ id: valueViewId });\n         if ($viewConditionValue && $viewConditionValue.setValue) {\n            // convert to Date object\n            if (\n               field &&\n               field.key == \"date\" &&\n               f.value &&\n               (f.rule == \"less\" ||\n                  f.rule == \"greater\" ||\n                  f.rule == \"less_or_equal\" ||\n                  f.rule == \"greater_or_equal\")\n            ) {\n               $viewConditionValue.define(\"value\", new Date(f.value));\n            } else {\n               $viewConditionValue.define(\"value\", f.value);\n            }\n\n            $viewConditionValue.refresh();\n         } else if (\n            $viewConditionValue &&\n            $viewConditionValue.getChildViews()\n         ) {\n            let vals = (f.value || \"\").split(\":\");\n            let index = 0;\n            $viewConditionValue.getChildViews().forEach((element) => {\n               $$(element).blockEvent();\n               $$(element).setValue(vals[index]);\n               if (index == 0) {\n                  logic.onChangeQueryFieldCombo(vals[index], $viewCond);\n               }\n               $$(element).unblockEvent();\n               // $$(element).refresh();\n               index++;\n            });\n         }\n\n         if (field && field.key == \"user\") {\n            $viewCond.blockEvent();\n            logic.onChangeRule(f.rule, $viewCond);\n            $viewCond.blockEvent();\n         }\n      });\n\n      // unblock .onChange event\n      logic.unblockOnChange();\n   }\n\n   /**\n    * @method isComplete()\n    * returns a truthy value representing whether or not our current condition\n    * expression is fully completed.  Then externally checks can be made to\n    * verify if the data is complete.\n    * @return {bool}\n    */\n   isComplete() {\n      if (!this._completeConditions) {\n         this._completeConditions = this.AB.filterComplexNew(\n            `${this.ids.component}_iscomplete`\n         );\n      }\n\n      return this._completeConditions.isConditionComplete(this.getValue());\n   }\n};\n","// const ABComponent = require(\"./ABComponent\");\nimport ClassUI from \"../../ui/ClassUI\";\nconst ABViewForm = require(\"../platform/views/ABViewForm\");\n\nlet L = null;\n\nclass RowUpdater extends ClassUI {\n   constructor(idBase, AB) {\n      super(idBase, {\n         form: `${idBase}_rowUpdaterForm`,\n         addNew: `${idBase}_rowUpdaterAddNew`,\n         field: `${idBase}_rowUpdaterField`,\n      });\n\n      this.idBase = idBase;\n\n      this._Object = null;\n      // {ABObject}\n      // The ABObject we are building a form for.\n\n      this._mockFormWidget = null;\n      // {ABViewForm}\n      // When building our form components to display, they need a\n      // ABViewForm to be associated with.\n\n      this.AB = AB;\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   /**\n    * @method uiItem()\n    * Return the webix description of a new field/value row.\n    * @return {json}\n    */\n   uiItem() {\n      const self = this;\n\n      return {\n         rows: [\n            {\n               view: \"layout\",\n               isolate: true,\n               cols: [\n                  {\n                     // Label\n                     view: \"label\",\n                     width: 40,\n                     label: L(\"Set\"),\n                  },\n                  {\n                     // Field list\n                     view: \"combo\",\n                     id: this.ids.field,\n                     options: this.getFieldList(true),\n                     on: {\n                        onChange: async function (columnId) {\n                           const $viewItem = this.getParentView();\n\n                           await self.selectField(columnId, $viewItem);\n                        },\n                     },\n                  },\n                  {\n                     // Label\n                     view: \"label\",\n                     width: 40,\n                     label: L(\"To\"),\n                  },\n                  {\n                     view: \"segmented\",\n                     value: \"custom\",\n                     height: 40,\n                     maxWidth: 160,\n                     options: [\n                        { id: \"custom\", value: L(\"Custom\") },\n                        { id: \"process\", value: L(\"Process\") },\n                     ],\n                     hidden:\n                        this._extendedOptions == null ||\n                        !this._extendedOptions.length,\n                     on: {\n                        onChange: function (val) {\n                           const $viewItem = this.getParentView();\n\n                           self.toggleCustomProcessOption(\n                              $viewItem,\n                              val == \"process\"\n                           );\n                        },\n                     },\n                  },\n                  // Field value\n                  {},\n                  // Extended value\n                  {\n                     hidden: true,\n                  },\n                  {\n                     // \"Remove\" button\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     icon: \"fa fa-trash\",\n                     type: \"icon\",\n                     autowidth: true,\n\n                     click: function () {\n                        const $viewCond = this.getParentView().getParentView();\n\n                        self.removeItem($viewCond);\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   /**\n    * @method ui()\n    * return the webix description of our Entry form.\n    * @return {json}\n    */\n   ui() {\n      // webix UI definition:\n      return {\n         rows: [\n            {\n               view: \"form\",\n               id: this.ids.form,\n               hidden: true,\n               borderless: true,\n               elements: [],\n            },\n            {\n               view: \"button\",\n               id: this.ids.addNew,\n               icon: \"fa fa-plus\",\n               type: \"iconButton\",\n               label: L(\"Add field to edit\"),\n               click: () => {\n                  this.addItem();\n               },\n            },\n         ],\n      };\n   }\n\n   init(AB) {\n      const $form = $$(this.ids.form);\n      if ($form) AB.Webix.extend($form, AB.Webix.ProgressBar);\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method addItem()\n    * Add another field/value entry item to our form.\n    * @param {integer} index\n    *        which position in the list of form elements do we want to\n    *        insert the new row.\n    * @return {string} the webix .id of the new row we just added.\n    */\n   addItem(index) {\n      const $form = $$(this.ids.form);\n      const remainFields = this.getFieldList(true);\n\n      if (remainFields.length < 1) return;\n\n      const ui = this.uiItem();\n      const viewId = $form.addView(ui, index);\n\n      this.toggleForm();\n\n      return viewId;\n   }\n\n   /**\n    * @method getFieldList()\n    * Return an array of options in a webix.list format that represents the\n    * possible fields that can be selected on the current ABObject.\n    * @param {bool} excludeSelected\n    *        should we exclude from the list the fields that are ALREADY\n    *        displayed on the form?\n    * @return {array} [ { id, value }, ... ]\n    *         id: ABField.id\n    *         value: ABField.label\n    */\n   getFieldList(excludeSelected) {\n      let options = (this._Object.fields() || []).map((f) => {\n         return {\n            id: f.id,\n            value: f.label,\n         };\n      });\n\n      if (excludeSelected) {\n         const $form = $$(this.ids.form);\n\n         $form.getChildViews().forEach(($viewCond) => {\n            // Ignore \"Add new\" button\n            if (!$viewCond || !$viewCond.$$) return;\n\n            const $fieldElem = $viewCond.$$(this.ids.field);\n\n            if (!$fieldElem) return;\n\n            const fieldId = $fieldElem.getValue();\n\n            if (!fieldId) return;\n\n            options = options.filter((opt) => opt.id != fieldId);\n         });\n      }\n      return options;\n   }\n\n   /**\n    * @method getValue\n    * Return an array of field:value results that have been entered on this\n    * form.\n    * @return {Array}\n    *         [\n    *            {\n    *               fieldId: {UUID}\n    *               isProcessValue: {Boolean} - If it is true, then value is from Process parameter\n    *               value: {Object}\n    *            },\n    *            ...\n    *         ]\n    */\n   getValue() {\n      const result = [];\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         $form.getChildViews().forEach(($viewContainer) => {\n            const $viewItem = $viewContainer.getChildViews()[0];\n\n            // Ignore \"Add new\" button\n            if (!$viewItem || !$viewItem.$$) return;\n\n            const $fieldElem = $viewItem.$$(this.ids.field);\n\n            if (!$fieldElem) return;\n\n            const fieldId = $fieldElem.getValue();\n\n            if (!fieldId) return;\n\n            let $customValueElem = $viewItem.getChildViews()[4];\n            $customValueElem = this._pullInputElement($customValueElem);\n\n            const $processValueElem = $viewItem.getChildViews()[5];\n\n            if (!$customValueElem && !$processValueElem) return;\n\n            const fieldInfo = this._Object.fieldByID(fieldId);\n            const val = {\n               fieldId: fieldId,\n            };\n\n            // Custom value\n            if ($customValueElem && $customValueElem.isVisible()) {\n               if (\n                  fieldInfo.key === \"connectObject\" ||\n                  fieldInfo.key === \"user\"\n               )\n                  val.value = fieldInfo.getValue($customValueElem);\n               else if (\n                  fieldInfo.key === \"date\" ||\n                  fieldInfo.key === \"datetime\"\n               ) {\n                  const currDateCheckbox =\n                     $customValueElem.getChildViews()[0] ?? $customValueElem;\n\n                  if (currDateCheckbox.getValue() == true)\n                     val.value = \"ab-current-date\";\n                  else {\n                     const datePicker =\n                        $customValueElem.getChildViews()[1] ?? $customValueElem;\n\n                     val.value = fieldInfo.getValue(datePicker);\n                  }\n               }\n               // Get value from data field manager\n               else val.value = fieldInfo.getValue($customValueElem);\n            }\n            // Process value\n            else if ($processValueElem && $processValueElem.isVisible()) {\n               val.isProcessValue = true;\n               val.value = $processValueElem.getValue();\n            }\n\n            // Add to output\n            result.push(val);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method objectLoad\n    * Load the Object we are currently working with.\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      this._Object = object;\n\n      this._mockApp = this.AB.applicationNew({});\n      this._mockFormWidget = new ABViewForm(\n         {\n            settings: {\n               showLabel: false,\n               labelWidth: 0,\n            },\n         },\n         this._mockApp // just need any ABApplication here\n      );\n      this._mockFormWidget.objectLoad(object);\n\n      this.setValue(null); // clear\n   }\n\n   /**\n    * @method removeItem\n    * Remove the current form row.\n    * @param {webix.view} $viewCond\n    *        This is the webix.view that contains the whole value row\n    *        we are removing.\n    */\n   removeItem($viewCond) {\n      const $form = $$(this.ids.form);\n\n      $form.removeView($viewCond);\n      this.toggleForm();\n   }\n\n   /**\n    * @method selectField\n    * Update the value display when a field is selected. Changing to a\n    * different field will change the types of values that can be entered.\n    * @param {string} columnId\n    *        The field.uuid of the object that was selected.\n    * @param {webix.view} $viewItem\n    *        The webix.view that contains the value expression of the field\n    *        that was selected.\n    */\n   async selectField(columnId, $viewItem) {\n      const field = this._Object.fieldByID(columnId);\n\n      if (!field) {\n         this.AB.notify.builder(\n            new Error(`could not find field for id[${columnId}]`),\n            {\n               context: \"RowUpdater.selectField() could not find a field\",\n               fieldID: columnId,\n            }\n         );\n\n         return;\n      }\n\n      const fieldComponent = field.formComponent(),\n         formFieldWidget = fieldComponent.newInstance(\n            this._mockApp,\n            this._mockFormWidget\n         ),\n         formFieldComponent = formFieldWidget.component(\n            this.AB._App,\n            this.idBase\n         );\n      const childViews = $viewItem.getChildViews();\n\n      let inputView =\n         typeof formFieldComponent.ui == \"function\"\n            ? formFieldComponent.ui()\n            : formFieldComponent.ui;\n\n      // Add extended value options\n      $viewItem.removeView(childViews[5]);\n\n      if (this._extendedOptions?.length)\n         $viewItem.addView(\n            {\n               view: \"richselect\",\n               options: this._extendedOptions,\n               hidden: true,\n            },\n            5\n         );\n      else\n         $viewItem.addView(\n            {\n               hidden: true,\n            },\n            5\n         );\n\n      await this.busy();\n\n      // WORKAROUND: add '[Current User]' option to the user data field\n      switch (field.key) {\n         case \"connectObject\":\n         case \"user\":\n            inputView = inputView.rows[0].rows[0];\n            inputView.suggest.body.data =\n               (await field.getOptions()).map((e) => {\n                  return {\n                     id: field.getRelationValue(e),\n                     value: e.text,\n                  };\n               }) ?? [];\n\n            if (field.key === \"user\")\n               inputView.suggest.body.data.unshift({\n                  id: \"ab-current-user\",\n                  value: \"ab-current-user\",\n                  // This one is saved with the \"value\" not \"id\".\n                  // value: L(\"Current User\"),\n               });\n\n            break;\n\n         case \"date\":\n         case \"datetime\":\n            inputView = {\n               view: \"layout\",\n               rows: [\n                  {\n                     view: \"checkbox\",\n                     labelWidth: 0,\n                     labelRight: L(\"Current Date/Time\"),\n                     on: {\n                        onChange: function (newVal) {\n                           const layout = this.getParentView();\n\n                           if (!layout) return;\n\n                           const datePicker = layout.getChildViews()[1];\n\n                           if (!datePicker) return;\n\n                           newVal ? datePicker.hide() : datePicker.show();\n                        },\n                     },\n                  },\n                  inputView,\n               ],\n            };\n\n            break;\n      }\n\n      // Change component to display value\n      $viewItem.removeView(childViews[4]);\n      $viewItem.addView(inputView, 4);\n\n      formFieldComponent.init();\n\n      // Show custom display of data field\n      if (field.customDisplay)\n         field.customDisplay({}, this.AB._App, childViews[4].$view);\n\n      this.toggleCustomProcessOption(\n         $viewItem,\n         childViews[3].getValue() === \"process\"\n      );\n      $$($viewItem).adjust();\n      $viewItem.getFormView().adjust();\n\n      this.ready();\n   }\n\n   /**\n    * @method setValue\n    * Given the previous settings, redraw the form with the field/value\n    * entries.\n    * @param {array} settings\n    *        [\n    *           {\n    *              fieldId: {UUID}\n    *              value: {Object|String}\n    *           }, ...\n    *        ]\n    */\n   setValue(settings) {\n      const $form = $$(this.ids.form);\n\n      if (!$form) return;\n\n      // Redraw form with no elements\n      webix.ui([], $form);\n\n      settings = settings || [];\n      if (settings.length < 1) return;\n\n      settings.forEach(async (item) => {\n         const $viewContainer = $$(this.addItem());\n         const $viewItem = $viewContainer.getChildViews()[0];\n         const $valueTypeButton = $viewItem.queryView(\n            { view: \"segmented\" },\n            \"self\"\n         );\n\n         $valueTypeButton.setValue(item.isProcessValue ? \"process\" : \"custom\");\n\n         const $field = $viewItem.$$(this.ids.field);\n\n         $field.define(\"value\", item.fieldId);\n         $field.refresh();\n\n         await this.selectField(item.fieldId, $viewItem);\n\n         const fieldInfo = this._Object.fieldByID(item.fieldId);\n\n         if (!fieldInfo) return;\n\n         // Set process value\n         if (item.isProcessValue) {\n            const $processValueElem = $viewItem.getChildViews()[5];\n\n            $processValueElem.setValue?.(item.value);\n\n            return;\n         }\n\n         // Set custom value\n         let $customValueElem = $viewItem.getChildViews()[4];\n         $customValueElem = this._pullInputElement($customValueElem);\n         const rowData = {};\n\n         rowData[fieldInfo.columnName] = item.value?.value ?? item.value;\n         fieldInfo.setValue($customValueElem, rowData);\n\n         // Set \"Current Date/Time\" check box\n         if (\n            (fieldInfo.key == \"date\" || fieldInfo.key == \"datetime\") &&\n            rowData[fieldInfo.columnName] == \"ab-current-date\" &&\n            $customValueElem.config.view == \"checkbox\"\n         ) {\n            $customValueElem.setValue(true);\n         }\n      });\n\n      this.toggleForm();\n   }\n\n   /**\n    * @method toggleForm\n    * decide if the form with the field/value elements should be displayed.\n    */\n   toggleForm() {\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         const childViews = $form.getChildViews();\n\n         if (childViews && childViews.length) $form.show();\n         else $form.hide();\n         $form.adjust();\n      }\n   }\n\n   setExtendedOptions(options) {\n      this._extendedOptions = options;\n   }\n\n   toggleCustomProcessOption($viewItem, showProcessOption) {\n      const $customOption = $viewItem.getChildViews()[4];\n      const $processOption = $viewItem.getChildViews()[5];\n\n      if (showProcessOption) {\n         $customOption.hide();\n         $processOption.show();\n      } else {\n         $customOption.show();\n         $processOption.hide();\n      }\n   }\n\n   async busy() {\n      $$(this.ids.addNew).disable();\n\n      const $form = $$(this.ids.form);\n\n      if (!$form) return;\n\n      if (!$form.showProgress) await this.init(this.AB);\n\n      $form.showProgress({ type: \"icon\" });\n   }\n\n   ready() {\n      $$(this.ids.addNew).enable();\n      $$(this.ids.form).hideProgress();\n   }\n\n   _pullInputElement($elem) {\n      if (!$elem?.getValue && $elem?.getChildViews) {\n         return (\n            $elem\n               .getChildViews()\n               .filter((childView) => childView.getValue)[0] ?? $elem\n         );\n      } else {\n         return $elem;\n      }\n   }\n}\n\nexport default RowUpdater;\n","/*\n * ABField\n *\n * An ABField defines a single unique Field/Column in a ABObject.\n *\n */\n\nconst ABFieldCore = require(\"../../core/dataFields/ABFieldCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABField extends ABFieldCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n\n      this.AB.on(\"ab.abdefinition.update\", (def) => {\n         if (def.id == this.id) {\n            this.emit(\"definition.updated\", this);\n         }\n      });\n\n      //  \t// NOTE: setup this first so later we can use .fieldType(), .fieldIcon()\n      //  \tthis.defaults = fieldDefaults;\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'fieldKey',\t\t\t\t// unique key for this Field\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this Field Type\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n      // \t\tcolumnName:'column_name',\t// a valid mysql table.column name\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      // \t\t\tshowIcon:true/false,\t// only useful in Object Workspace DataTable\n      // \t\t\tisImported: 1/0,\t\t// flag to mark is import from other object\n      // \t\t\trequired: 1/0,\t\t\t// field allows does not allow NULL or it does allow NULL\n      // \t\t\twidth: {int}\t\t\t// width of display column\n\n      // \t\t// specific for dataField\n      // \t\t},\n      // \t\ttranslations:[]\n      // \t}\n\n      // \tthis.fromValues(values);\n\n      // this.object = object;\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   static editorValues(settings) {\n      const obj = {\n         label: settings.label,\n         columnName: settings.columnName,\n         settings: settings,\n      };\n\n      delete settings.label;\n      delete settings.columnName;\n\n      return obj;\n   }\n\n   addValidation(ids, settings) {\n      const App = this.object.application.App;\n      const Filter = this.AB.filterComplexNew(\n         `${this.id}_field_validation_rules`\n      );\n      $$(ids.filterComplex).addView({\n         view: \"form\",\n         css: \"abValidationForm\",\n         cols: [\n            {\n               rows: [\n                  {\n                     view: \"text\",\n                     name: \"invalidMessage\",\n                     labelWidth: this.AB.UISettings.config().labelWidthLarge,\n                     value:\n                        settings && settings.invalidMessage\n                           ? settings.invalidMessage\n                           : \"\",\n                     label: L(\"Invalid Message\"),\n                  },\n                  Filter.ui,\n               ],\n            },\n            {\n               view: \"button\",\n               css: \"webix_danger\",\n               icon: \"fa fa-trash\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  const $viewCond = this.getParentView();\n                  $$(ids.filterComplex).removeView($viewCond);\n               },\n            },\n         ],\n      });\n      $$(Filter.ids.save).hide();\n      // Filter.applicationLoad(this.object.application);\n      Filter.fieldsLoad(this.object.fields());\n      if (settings && settings.rules) Filter.setValue(settings.rules);\n   }\n\n   /*\n    * @method isValid\n    * check the current values to make sure they are valid.\n    * Here we check the default values provided by ABField.\n    *\n    * @return null or [{OP.Validation.validator()}] objects.\n    */\n   isValid() {\n      const validator = this.AB.Validation.validator();\n\n      // .columnName must be unique among fileds on the same object\n      const isNameUnique =\n         this.object.fields((f) => {\n            return (\n               f.id != this.id &&\n               f.columnName.toLowerCase() == this.columnName.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"columnName\",\n            L(\n               \"Field columnName must be unique ({0} already used in this Object)\",\n               [this.columnName]\n            )\n         );\n      }\n\n      return validator;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      // verify we have been .save() before:\n      if (!this.id) return;\n\n      // NOTE: our .migrateXXX() routines expect the object to currently exist\n      // in the DB before we perform the DB operations.  So we need to\n      // .migrateDrop()  before we actually .objectDestroy() this.\n      if (!this.object.isAPI) {\n         await this.migrateDrop();\n      }\n\n      // the server still references an ABField in relationship to it's\n      // ABObject, so we need to destroy the Field 1st, then remove it\n      // from it's object.\n      await super.destroy();\n\n      await this.object.fieldRemove(this);\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABField with it's parent ABObject\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save(skipMigrate = false) {\n      let isAdd = false;\n      // if this is our initial save()\n      if (!this.id) {\n         isAdd = true;\n      }\n\n      // Whenever we update our settings, make sure any\n      // existing rows that have NULL values for this field\n      // are updated to have our current .default value.\n      if (!isAdd && this.settings.required && this.settings.default) {\n         const model = this.object.model();\n\n         // pull rows that has null value\n         const result = await model.findAll({\n            where: {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.id,\n                     rule: \"is_null\",\n                  },\n               ],\n            },\n         });\n\n         const tasks = [];\n\n         // updating ...\n         result.data.forEach((d) => {\n            if (!d[this.columnName]) d[this.columnName] = this.settings.default;\n\n            tasks.push(model.update(d.id, d));\n         });\n\n         await Promise.all(tasks);\n      }\n\n      // New ABDefinition method of saving:\n      // when this is done, we now have an .id\n      await super.save();\n\n      // incase this was an ADD operation, make sure the\n      // parent Obj now includes this object:\n      // NOTE: must be done after the .save() so we have an .id\n      await this.object.fieldAdd(this);\n\n      // perform any server side migrations for this Field:\n\n      // but not connectObject fields:\n      // ABFieldConnect.migrateXXX() gets called from the UI popupNewDataField\n      // in order to handle the timings of the 2 fields that need to be created\n      if (!this.isConnection && !skipMigrate && !this.object.isAPI) {\n         const fnMigrate = isAdd ? this.migrateCreate() : this.migrateUpdate();\n         await fnMigrate;\n      }\n\n      return this;\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return this.AB.Network.post({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   migrateUpdate() {\n      return this.AB.Network.put({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   migrateDrop() {\n      return this.AB.Network[\"delete\"]({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @function columnHeader\n    * Return the column header for a webix grid component for this specific\n    * data field.\n    * @param {Object} options\n    * {\n    *    isObjectWorkspace: {bool},  is this being used in the Object workspace.\n    *    width: {int},\n    *    height: {int},\n    *    editable: {bool}\n    * }\n    * @return {obj}  configuration obj\n    */\n   columnHeader(options) {\n      options = options || {};\n\n      const config = {\n         id: this.columnName, // this.id,\n         header: this.label,\n      };\n\n      if (options.isObjectWorkspace && this.settings.showIcon) {\n         config.header = `<span class=\"webix_icon fa fa-${this.fieldIcon()}\"></span>${\n            config.header\n         }`;\n      }\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.  If this isn't\n    * a standard value display (think image, Map, graph, etc...) then use this\n    * method to create the display in the table/grid cell.\n    * @param {object} row\n    *        is the {name=>value} hash of the current row of data.\n    * @param {App} App\n    *        the shared ui App object useful more making globally\n    *\t\t\t unique id references.\n    * @param {HtmlDOM} node\n    *        the HTML Dom object for this field's display.\n    * @param {object} options\n    *        option of additional settings\n    */\n   customDisplay(row, App, node, options) {}\n\n   /*\n    * @function customEdit\n    *\n    *\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node) {\n      return true;\n   }\n\n   /**\n    * @method getValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   getValue(item, rowData) {\n      return item.getValue();\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    */\n   setValue(item, rowData, defaultValue) {\n      if (!item) return;\n\n      let val;\n\n      if (\n         (rowData == null || rowData[this.columnName] == null) &&\n         defaultValue != null\n      ) {\n         val = defaultValue;\n      } else if (rowData && rowData[this.columnName] != null) {\n         val = rowData[this.columnName];\n      } else {\n         val = rowData;\n      }\n\n      try {\n         item.setValue(val);\n      } catch (err) {\n         // this error is fine because we handled it already\n      }\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent(formKey) {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n\n      let FC = {\n         // .common() is used to create the display in the list\n         common: () => {\n            return {\n               key: formKey,\n\n               // // but since this is a common place holder: use the\n               // // multilingual label here:\n               // labelKey: 'ab.abfield.labelPlaceholder',\n               // icon:  'square'\n            };\n         },\n\n         // .newInstance() is used to create the view instance when the component\n         // \t\tis dropped onto the ABView list.\n         newInstance: (application, parent) => {\n            application = application ?? this.AB._mockApp;\n\n            // NOTE: in case you were wondering, the base ABField\n            // \t\t will just return a label with 'ABFieldPlaceholder'\n            // \t\t as the text.  Any sub class of ABField should overwrite\n            // \t\t this and return an actual Form Component.\n\n            // store object id and field id to field component\n            const values = FC.common();\n            values.settings = values.settings || {};\n            values.settings.objectId = this.object.id;\n            values.settings.fieldId = this.id;\n\n            const ABFieldPlaceholder = application.viewNew(\n               values,\n               application,\n               parent\n            ); // ABViewManager.newView(values, application, parent);\n            // ABFieldPlaceholder.formatTitle();\n            // ABFieldPlaceholder.text = \"ABFieldPlaceholder\";\n\n            return ABFieldPlaceholder;\n         },\n      };\n      return FC;\n   }\n\n   /**\n    * @method detailComponent\n    */\n   detailComponent() {\n      return {\n         common: () => {\n            return {\n               icon: \"square\",\n            };\n         },\n\n         // .newInstance() is used to create the view instance when the component\n         // \t\tis dropped onto the ABView list.\n         newInstance: (application, parent) => {\n            application = application ?? this.AB._mockApp;\n\n            // store object id and field id to field component\n            const values = this.detailComponent().common();\n            values.settings = values.settings || {};\n            values.settings.objectId = this.object.id;\n            values.settings.fieldId = this.id;\n\n            const ABFieldPlaceholder = application.viewNew(\n               values,\n               application,\n               parent\n            ); // ABViewManager.newView(values, application, parent);\n\n            return ABFieldPlaceholder;\n         },\n      };\n   }\n\n   /**\n    * @method getSettings()\n    * return a copy of this.settings.\n    * @return {object}\n    */\n   getSettings() {\n      return Object.assign({}, this.settings);\n   }\n\n   /**\n    * @method warningsMessage()\n    * generate a commonly formatted warning message for this ABField.\n    * This is expected to be called from within a .warningsEval()\n    * method when generating warnings.\n    * @param {string} msg\n    *        the warning string to display\n    * @param {json} data\n    *        any relevant additional information for a developer to refer to.\n    */\n   warningsMessage(msg, data = {}) {\n      let message = `${this.fieldKey()}[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   async getDbInfo() {\n      return this.AB.Network.get({\n         url: `/definition/info/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   /**\n    * @method formCleanData()\n    * Review the data a form is about to submit and change/remove it as\n    * appropriate.\n    * @param {obj} rowData\n    *        The {data} a form has collected and is about to save.\n    * @return {undefined}\n    */\n   formCleanData(rowData) {\n      // default is to just leave data as is.\n   }\n};\n","const ABFieldAutoIndexCore = require(\"../../core/dataFields/ABFieldAutoIndexCore\");\n\nmodule.exports = class ABFieldAutoIndex extends ABFieldAutoIndexCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldAutoIndex\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldBooleanCore = require(\"../../core/dataFields/ABFieldBooleanCore\");\n\nmodule.exports = class ABFieldBoolean extends ABFieldBooleanCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldBoolean\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n\n      config.editor = \"template\";\n      config.css = \"center\";\n      config.template = (row, common, value, config) => {\n         // Group header\n         if (row.$group) return row[this.columnName];\n\n         // editable\n         if (options.editable) {\n            return (\n               '<div class=\"ab-boolean-display\">' +\n               common.checkbox(row, common, value, config) +\n               \"</div>\"\n            );\n         }\n\n         // readonly\n         else {\n            if (value)\n               return \"<div class='webix_icon fa fa-check-square-o'></div>\";\n            else return \"<div class='webix_icon fa fa-square-o'></div>\";\n         }\n      };\n\n      return config;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"checkbox\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-checkbox\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailcheckbox\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldCalculateCore = require(\"../../core/dataFields/ABFieldCalculateCore\");\n\nmodule.exports = class ABFieldCalculate extends ABFieldCalculateCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldCalculate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         if (rowData.$group) return rowData[this.columnName];\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldCombineCore = require(\"../../core/dataFields/ABFieldCombineCore\");\n\nmodule.exports = class ABFieldCombine extends ABFieldCombineCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldCombine\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this.settings.combinedFields.split(\",\") || []).forEach((id) => {\n         var field = this.object.fieldByID(id);\n         if (!field) {\n            this.warningsMessage(`dependent field[${id}] not found.`, {\n               fieldID: id,\n               combinedFields: this.settings.combinedFields,\n            });\n         }\n      });\n   }\n};\n","const ABFieldConnectCore = require(\"../../core/dataFields/ABFieldConnectCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldConnect extends ABFieldConnectCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      // verify we have been .save()d before:\n      if (!this.id) return Promise.resolve();\n\n      // NOTE: our .migrateXXX() routines expect the object to currently exist\n      // in the DB before we perform the DB operations.  So we need to\n      // .migrateDrop()  before we actually .objectDestroy() this.\n      // this.migrateDrop()\n      //    // .then(() => {\n      //    //    // NOTE : prevent recursive remove connected fields\n      //    //    // - remove this field from JSON\n      //    //    this.object._fields = this.object.fields((f) => {\n      //    //       return f.id != this.id;\n      //    //    });\n      //    // })\n      //    .then(() => {\n      //       // Save JSON of the object\n      //       return this.object.fieldRemove(this);\n      //    })\n      await super.destroy();\n\n      // Now we need to remove our linked Object->field\n\n      const linkObject = this.datasourceLink;\n      if (!linkObject) return Promise.resolve(); // already notified\n\n      const linkField = this.fieldLink;\n      if (!linkField) return Promise.resolve(); // already notified\n\n      // destroy linked field\n      return linkField.destroy();\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method pullRelationValues\n    *\n    * On the Web client, we want our returned relation values to be\n    * ready for Webix objects that require a .text and .value field.\n    *\n    * @param {*} row\n    * @return {array}\n    */\n   pullRelationValues(row) {\n      let selectedData = [];\n\n      const data = super.pullRelationValues(row);\n      const linkedObject = this.datasourceLink;\n\n      if (data && linkedObject) {\n         // if this select value is array\n         if (Array.isArray(data)) {\n            selectedData = data.map(function (d) {\n               // display label in format\n               if (d) {\n                  d.text = d.text || linkedObject.displayData(d);\n                  d.value = d.text;\n               }\n\n               return d;\n            });\n         } else if (data.id || data.uuid) {\n            selectedData = data;\n            selectedData.text =\n               selectedData.text || linkedObject.displayData(selectedData);\n            selectedData.value = selectedData.text;\n         } else if (typeof data == \"string\") {\n            selectedData = { text: data };\n         }\n      }\n\n      return selectedData;\n   }\n\n   columnHeader(options) {\n      options = options || {};\n      const config = super.columnHeader(options);\n      const field = this;\n      const App = field.AB._App;\n\n      if (options.filters == null) {\n         options.filters = {};\n      }\n\n      var multiselect = this.settings.linkType == \"many\";\n\n      config.editor = multiselect ? \"multiselect\" : \"combo\";\n      config.editFormat = (value) => {\n         return this.editFormat(value);\n      };\n      config.editParse = (value) => {\n         return this.editParse(value);\n      };\n      config.template = (row) => {\n         var selectedData = field.pullRelationValues(row);\n         var values = [];\n         values.push('<div class=\"badgeContainer\">');\n         if (\n            selectedData &&\n            Array.isArray(selectedData) &&\n            selectedData.length\n         ) {\n            selectedData.forEach((val) => {\n               values.push(\n                  `<div class='webix_multicombo_value'><span>${val.value}</span><!-- span data-uuid=\"${val.id}\" class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span --></div>`\n               );\n            });\n            if (selectedData.length > 1) {\n               values.push(\n                  `<span class=\"webix_badge selectivityBadge\">${selectedData.length}</span>`\n               );\n            }\n         } else if (selectedData.value) {\n            let clear = \"\";\n            if (options.editable) {\n               clear = `<span class=\"webix_multicombo_delete clear-combo-value\" role=\"button\" aria-label=\"Remove item\"></span>`;\n            }\n            values.push(\n               `<div class='webix_multicombo_value'>${clear}<span class=\"ellip\">${selectedData.value}</span></div>`\n            );\n         } else {\n            return \"\";\n         }\n         values.push(\"</div>\");\n         return values.join(\"\");\n      };\n\n      config.suggest = {\n         on: {\n            onBeforeShow: function () {\n               field.openOptions(this);\n            },\n         },\n\n         // Support partial matches\n         filter: ({ value }, search) =>\n            (value ?? \"\").toLowerCase().includes((search ?? \"\").toLowerCase()),\n      };\n\n      if (multiselect) {\n         config.suggest.view = \"checksuggest\";\n         config.suggest.button = true;\n      }\n\n      return config;\n   }\n\n   openOptions($suggest) {\n      // PREVENT repeatedly pull data:\n      // If not a x->1 relation and the options list was populated, then skip\n      const $list = $suggest.getList();\n      if (this.settings.linkViaType != \"one\") {\n         if (($list?.find({}) ?? []).length) return;\n      }\n\n      // Listen create/update events of the linked object, then clear data list to re-populate\n      [\"create\", \"update\"].forEach((key) => {\n         if (this[`_dc_${key}_event`]) return;\n\n         this[`_dc_${key}_event`] = this.AB.on(\n            `ab.datacollection.${key}`,\n            (res) => {\n               if (this.datasourceLink.id == res.objectId) $list.clearAll();\n            }\n         );\n      });\n\n      this.getAndPopulateOptions($suggest, null, this);\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n\n   //// NOTE: why do we pass in row, App, and node?  is this something we do in our external components?\n   ////       are these values present when this Object is instanciated? Can't we just pass these into the\n   ////       object constructor and have it internally track these things?\n   customEdit(row, /*App,*/ node) {\n      // var selectedData = this.pullRelationValues(row);\n      // this._selectedData = selectedData;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"connect\");\n   }\n\n   formComponentMobile() {\n      if (this.settings.linkType == \"many\") {\n         return super.formComponent(\"mobile-selectmultiple\");\n      }\n      return super.formComponent(\"mobile-selectsingle\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailconnect\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method getOptions\n    * show options list in selectivity\n    *\n    * @return {Promise}\n    */\n   async getOptions(whereClause, term, sort, editor, populate = false) {\n      const theEditor = editor;\n\n      if (theEditor) {\n         // PREVENT: repeatly refresh data too often\n         if (theEditor._getOptionsThrottle) {\n            clearTimeout(theEditor._getOptionsThrottle);\n            // NOTE: remove variables that reference the Promise and Resolve to let GC cleans up.\n            // https://dev.to/xnimorz/js-promises-3-garbage-collection-and-memory-leaks-2oi7?fbclid=IwAR1wqgNz2KqchaM7eRkclR6YWHT01eva4y5IWpnaY0in6BrxmTAtpNCnEXM\n            delete theEditor._timeToPullData;\n            delete theEditor._getOptionsResolve;\n         }\n         theEditor._timeToPullData = await new Promise((resolve) => {\n            theEditor._getOptionsResolve = resolve;\n            theEditor._getOptionsThrottle = setTimeout(() => {\n               resolve(true);\n            }, 100);\n         });\n         if (!theEditor._timeToPullData) return;\n      }\n\n      return new Promise((resolve, reject) => {\n         let haveResolved = false;\n         // {bool}\n         // have we already passed back a result?\n\n         const respond = (options) => {\n            // filter the raw lookup with the provided search term\n            options = options.filter((item) => {\n               if (item.text.toLowerCase().includes(term.toLowerCase())) {\n                  return true;\n               }\n            });\n\n            if (!haveResolved) {\n               haveResolved = true;\n               resolve(options);\n            } else {\n               // if we have already resolved() then .emit() that we have\n               // updated \"option.data\".\n               this.emit(\"option.data\", options);\n            }\n         };\n\n         // Prepare Where clause\n\n         const where = this.AB.cloneDeep(whereClause || {});\n         sort = sort || [];\n\n         if (!where.glue) where.glue = \"and\";\n\n         if (!where.rules) where.rules = [];\n\n         term = term || \"\";\n\n         // check if linked object value is not define, should return a empty array\n         if (!this.settings.linkObject) return [];\n\n         // if options was cached\n         // if (this._options != null) return resolve(this._options);\n\n         const linkedObj = this.datasourceLink;\n\n         // System could not found the linked object - It may be deleted ?\n         if (linkedObj == null) throw new Error(\"No linked object\");\n\n         const linkedCol = this.fieldLink;\n\n         // System could not found the linked field - It may be deleted ?\n         if (linkedCol == null) throw new Error(\"No linked column\");\n\n         // Get linked object model\n         const linkedModel = linkedObj.model();\n\n         // M:1 - get data that's only empty relation value\n         if (\n            this.settings.linkType == \"many\" &&\n            this.settings.linkViaType == \"one\" &&\n            editor?.config?.showAllOptions != true\n         ) {\n            where.rules.push({\n               key: linkedCol.id,\n               rule: \"is_null\",\n            });\n            // where[linkedCol.columnName] = null;\n         }\n         // 1:1\n         else if (\n            this.settings.linkType == \"one\" &&\n            this.settings.linkViaType == \"one\" &&\n            editor?.config?.showAllOptions != true\n         ) {\n            // 1:1 - get data is not match link id that we have\n            if (this.settings.isSource == true) {\n               // NOTE: make sure \"haveNoRelation\" shows up as an operator\n               // the value \":0\" doesn't matter, we just need 'haveNoRelation' as an operator.\n               // newRule[linkedCol.id] = { 'haveNoRelation': 0 };\n               where.rules.push({\n                  key: linkedCol.id,\n                  rule: \"have_no_relation\",\n               });\n            }\n            // 1:1 - get data that's only empty relation value by query null value from link table\n            else {\n               where.rules.push({\n                  key: linkedCol.id,\n                  rule: \"is_null\",\n               });\n               // newRule[linkedCol.id] = 'null';\n               // where[linkedCol.id] = null;\n            }\n         }\n\n         const storageID = this.getStorageID(where);\n\n         Promise.resolve()\n            .then(async () => {\n               // Mar 23, 2023 disabling local storage of options because users\n               // were reporting not seeing the correct options list with either\n               // new, updated or deleted records that should or should not appear\n               return false;\n               // Get Local Storage unless xxx->one connected field\n               // if (this?.settings?.linkViaType != \"one\") {\n               //    // We store the .findAll() results locally and return that for a\n               //    // quick response:\n               //    return await this.AB.Storage.get(storageID);\n               // }\n            })\n            .then(async (storedOptions) => {\n               if (storedOptions) {\n                  // immediately respond with our stored options.\n                  this._options = storedOptions;\n                  return respond(this._options);\n               }\n               // Pull linked object data\n               let options = function () {\n                  return linkedModel.findAll({\n                     where: where,\n                     sort: sort,\n                     populate,\n                  });\n               };\n\n               // placeholder for selected options\n               let selected = function () {\n                  return new Promise((resolve, reject) => {\n                     // empty data array to pass to all()\n                     resolve({ data: [] });\n                  });\n               };\n\n               // we also need to get selected values of xxx->one connections\n               // if we are looking at a field in a form we look at linkViaOneValues\n               // if we are looking at a grid we are editing we look at theEditor?.config?.value\n               if (\n                  this?.settings?.linkViaType == \"one\" &&\n                  (this?.linkViaOneValues || theEditor?.config?.value)\n               ) {\n                  let values = \"\";\n                  // determine if we are looking in a grid or at a form field\n                  if (\n                     (theEditor?.config?.view == \"multicombo\" ||\n                        theEditor?.config?.view == \"combo\") &&\n                     this?.linkViaOneValues\n                  ) {\n                     values = this?.linkViaOneValues;\n                  } else if (theEditor?.config?.value) {\n                     if (Array.isArray(theEditor.config.value)) {\n                        values = theEditor?.config?.value.join();\n                     } else {\n                        values = theEditor?.config?.value;\n                     }\n                  }\n                  let whereRels = {};\n                  let sortRels = [];\n\n                  whereRels.glue = \"or\";\n                  whereRels.rules = [];\n\n                  // make sure values are unique:\n                  let valHash = {};\n                  values.split(\",\").forEach((v) => {\n                     valHash[v] = v;\n                  });\n                  Object.keys(valHash).forEach((v) => {\n                     whereRels.rules.push({\n                        key: linkedObj.PK(),\n                        rule: \"equals\",\n                        value: v,\n                     });\n                  });\n                  selected = function () {\n                     return linkedModel.findAll({\n                        where: whereRels,\n                        sort: sortRels,\n                        populate: false,\n                     });\n                  };\n               }\n               try {\n                  const results = await Promise.all([options(), selected()]);\n\n                  // combine options and selected items and\n                  // put the selected options at the top of the list\n                  const result = results[1].data.concat(results[0].data);\n\n                  // store results in _options\n                  this._options = result.data || result || [];\n\n                  // populate display text\n                  (this._options || []).forEach((opt) => {\n                     opt.text = linkedObj.displayData(opt);\n                     opt.value = opt.text;\n                  });\n\n                  // 8/10/2023 - We are not actually using this (see line 338) - If we need to store\n                  // user data in local storage we should encrypt it.\n                  // cache options if not a xxx->one connection\n                  // if (this?.settings?.linkViaType != \"one\") {\n                  //    this.AB.Storage.set(storageID, this._options);\n                  // }\n                  return respond(this._options);\n               } catch (err) {\n                  this.AB.notify.developer(err, {\n                     context:\n                        \"ABFieldConnect:getOptions(): unable to retrieve options from server\",\n                     field: this.toObj(),\n                     where,\n                  });\n\n                  haveResolved = true;\n                  throw err;\n               }\n            });\n      });\n   }\n\n   getStorageID(where) {\n      return `${this.id}-${JSON.stringify(where)}`;\n   }\n\n   async clearStorage(where) {\n      const storageID = this.getStorageID(where);\n      await this.AB.Storage.set(storageID, null);\n   }\n\n   editFormat(value) {\n      if (!value) return \"\";\n      let vals = [];\n      if (Array.isArray(value)) {\n         value.forEach((val) => {\n            if (typeof val == \"object\") {\n               vals.push(val.id);\n            } else {\n               let itemObj = this.getItemFromVal(val);\n               if (itemObj && itemObj.id) {\n                  vals.push(itemObj.id);\n               } else {\n                  vals.push(val);\n               }\n            }\n         });\n      } else {\n         if (typeof value == \"object\") {\n            vals.push(value.id);\n         } else {\n            let itemObj = this.getItemFromVal(value);\n            if (itemObj && itemObj.id) {\n               vals.push(itemObj.id);\n            } else {\n               vals.push(value);\n            }\n         }\n      }\n      return vals.join();\n   }\n\n   editParse(value) {\n      var multiselect = this.settings.linkType == \"many\";\n      if (multiselect) {\n         if (!value) {\n            return [];\n         } else {\n            let returnVals = [];\n            let vals = value.split(\",\");\n            vals.forEach((val) => {\n               returnVals.push(this.getItemFromVal(val));\n            });\n            return returnVals;\n         }\n      } else {\n         let item = this.getItemFromVal(value);\n         return item;\n      }\n   }\n\n   getAndPopulateOptions(editor, options, field, form) {\n      if (!editor) return Promise.resolve([]);\n\n      const theEditor = editor;\n      // if editor has options and is xxx->one store the options on the field\n      if (\n         this?.settings?.linkViaType == \"one\" &&\n         theEditor.getValue() &&\n         !field.linkViaOneValues\n      ) {\n         field.linkViaOneValues = theEditor.getValue();\n      }\n\n      // if we are filtering based off another selectivity's value we\n      // need to do it on fetch each time because the value can change\n      // copy the filters so we don't add to them every time there is a change\n      const combineFilters = options?.filters\n         ? Object.assign({}, options.filters)\n         : { glue: \"and\", rules: [] };\n\n      if (options?.filterByConnectValues) {\n         const parseFilterByConnectValues = (conditions, values, depth = 0) => {\n            const valuesByDepth = values.filter((e) => e?.depth === depth);\n\n            return [\n               ...conditions.rules.map((e) => {\n                  if (e.glue)\n                     return {\n                        glue: e.glue,\n                        rules: parseFilterByConnectValues(e, values, depth + 1),\n                     };\n\n                  const value = valuesByDepth.filter(\n                     (ef) => ef.key === e.key && ef.value === e.value\n                  )[0];\n\n                  if (!value) return e;\n\n                  const $parentField = value?.filterValue?.config.id\n                     ? $$(value.filterValue.config.id)\n                     : null;\n\n                  if (!$parentField)\n                     throw Error(\n                        \"Some parent field's view components don't exist\"\n                     );\n\n                  const parentValue = value?.filterValue\n                     ? $parentField.getValue() ?? \"\"\n                     : \"\";\n\n                  let newVal = \"\";\n\n                  if (parentValue) {\n                     if (value.filterColumn) {\n                        const filterField = field.object.fieldByID(\n                           value.filterValue.config.dataFieldId\n                        );\n                        let valItem;\n\n                        // When options does not load yet, then pull select value from DC\n                        if (!filterField._options?.length) {\n                           const linkedField =\n                              (form.datacollection.datasource?.fields(\n                                 (f) =>\n                                    f.id == value.value ||\n                                    f.columnName == value.value\n                              ) ?? [])[0];\n\n                           if (linkedField) {\n                              // Get values from DC\n                              const formVals = form.datacollection?.getCursor();\n\n                              valItem =\n                                 formVals[linkedField.relationName()] ??\n                                 formVals[value.value];\n                           }\n                        } else {\n                           valItem = filterField.getItemFromVal(parentValue);\n                        }\n\n                        if (valItem) {\n                           newVal = valItem[value.filterColumn];\n                        } else {\n                           newVal = parentValue;\n                        }\n                     } else {\n                        newVal = parentValue;\n                     }\n                  }\n\n                  return {\n                     key: e.key,\n                     rule: \"equals\",\n                     value: newVal,\n                  };\n               }),\n            ];\n         };\n\n         combineFilters.rules = parseFilterByConnectValues(\n            combineFilters,\n            options.filterByConnectValues\n         );\n      }\n\n      if (!this.handlerOptionData) {\n         this.handlerOptionData = (data) => {\n            if (theEditor.$destructed) {\n               this.removeListener(\"option.data\", this.handlerOptionData);\n               return;\n            }\n            this.populateOptions(theEditor, data, field, form, true);\n         };\n      }\n\n      // try to make sure we don't continually add up listeners.\n      this.removeListener(\"option.data\", this.handlerOptionData).once(\n         \"option.data\",\n         this.handlerOptionData\n      );\n\n      return new Promise((resolve, reject) => {\n         this.getOptions(\n            combineFilters,\n            \"\",\n            options?.sort ?? \"\",\n            theEditor\n         ).then(async (data) => {\n            await this.populateOptions(theEditor, data, field, form, true);\n            resolve(data);\n         });\n      });\n   }\n\n   async populateOptions(theEditor, data, field, form, addCy) {\n      if (theEditor == null || theEditor.$destructed) return;\n\n      await this._sortByRecent(data);\n\n      theEditor.blockEvent();\n      theEditor.getList().clearAll();\n      theEditor.getList().define(\"data\", data);\n      if (addCy) {\n         this.populateOptionsDataCy(theEditor, field, form);\n      }\n      if (theEditor.getValue?.() && data?.length) {\n         let currVal = theEditor.getValue();\n         // in a multiselect environment, the current val can be an encoded string:\n         // \"id1,id2\".  Break this into an array:\n         if (field.linkType() == \"many\" && typeof currVal == \"string\") {\n            currVal = currVal.split(\",\");\n         }\n         if (!Array.isArray(currVal)) {\n            currVal = [currVal];\n         }\n\n         let selectedVals = [];\n         currVal.forEach((cVal) => {\n            // Check exists item\n            const isExists = data.some((d) => d.id == cVal);\n\n            if (isExists) {\n               selectedVals.push(cVal);\n            }\n\n            // if we couldn't find it by it's .id, then check to see\n            // if there is a custom index (.indexField  .indexField2)\n            // that does match.\n            // Select option item from custom index value\n            if (\n               !isExists &&\n               field.isConnection &&\n               (field.indexField || field.indexField2)\n            ) {\n               const selectedItem = data.filter(\n                  (d) =>\n                     d[field.indexField?.columnName ?? \"\"] == cVal ||\n                     d[field.indexField2?.columnName ?? \"\"] == cVal\n               )[0];\n\n               if (selectedItem) selectedVals.push(selectedItem.id);\n            }\n         });\n\n         theEditor.setValue(selectedVals);\n      }\n      theEditor.unblockEvent();\n   }\n\n   populateOptionsDataCy(theEditor, field, form) {\n      if (theEditor?.$destructed) return;\n\n      // Add data-cy attributes\n      if (theEditor?.getList) {\n         if (!theEditor.getPopup) return;\n         var popup = theEditor.getPopup();\n         if (!popup) return;\n         theEditor.getList().data.each((option) => {\n            if (!option) return;\n            var node = popup.$view.querySelector(\n               \"[webix_l_id='\" + option.id + \"']\"\n            );\n            if (!node) return;\n            node.setAttribute(\n               \"data-cy\",\n               `${field.key} options ${option.id} ${field.id} ${form?.id}`\n            );\n         });\n      }\n   }\n\n   getItemFromVal(val) {\n      let item;\n      let options = this._options || [];\n      if (options.length > 0) {\n         for (let i = 0; i < options.length; i++) {\n            if (\n               this.indexField &&\n               options[i][this.indexField.object.PK()] == val\n            ) {\n               item = options[i];\n               break;\n            } else if (\n               this.indexField2 &&\n               options[i][this.indexField2.object.PK()] == val\n            ) {\n               item = options[i];\n               break;\n            } else {\n               if (\n                  options[i].id == val ||\n                  options[i].value == val ||\n                  options[i][this.indexField?.columnName ?? \"\"] == val ||\n                  options[i][this.indexField2?.columnName ?? \"\"] == val\n               ) {\n                  item = options[i];\n                  break;\n               }\n            }\n         }\n         return item;\n      } else {\n         return \"\";\n      }\n   }\n\n   getValue(item) {\n      let val = item.getValue();\n      var multiselect = this.settings.linkType == \"many\";\n      if (multiselect) {\n         let vals = [];\n         if (!Array.isArray(val)) {\n            if (val) {\n               val = val.split(\",\");\n               val.forEach((record) => {\n                  // make sure we are returning the .uuid values and\n                  // not full {Record} values.\n                  vals.push(\n                     this.getRelationValue(item.getList().getItem(record), {\n                        forUpdate: true,\n                     })\n                  );\n               });\n            }\n         } else {\n            vals = val;\n         }\n\n         return vals;\n      } else {\n         if (val) {\n            // return just the .uuid and not the full {Record}\n            return this.getRelationValue(item.getList().getItem(val));\n         } else {\n            return \"\";\n         }\n      }\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n      // if (AB.isEmpty(rowData)) return; removed because sometimes we will\n      // want to set this to empty\n      let val = this.pullRelationValues(rowData);\n      // put in current values as options so we can display them before\n      // the rest of the options are fetched when field is clicked\n      if (item.getList && item.getList().count() == 0) {\n         if (this.settings.linkType !== \"one\" && !Array.isArray(val)) {\n            val = [val];\n         }\n\n         const $list = item.getList();\n\n         $list.define(\"data\", val);\n         $list.refresh();\n      }\n\n      // try to prevent form flicker:\n      // Only reset the value if the value changes:\n      let currVal = item.getValue();\n      let newVal = Array.isArray(val)\n         ? val\n              .map(\n                 (e) =>\n                    this.getRelationValue(e, { forUpdate: true }) ??\n                    e.id ??\n                    e.uuid ??\n                    e\n              )\n              .join(\",\")\n         : this.getRelationValue(val, { forUpdate: true }) ??\n           val.id ??\n           val.uuid ??\n           val;\n      if (currVal != newVal) {\n         item.setValue(newVal);\n      }\n   }\n\n   /**\n    * @method pullRecordRelationValues\n    *\n    * On the Web client, we want our returned relation values to be\n    * ready for Webix objects that require a .text and .value field.\n    *\n    * @param {*} row\n    * @return {array}\n    */\n   pullRecordRelationValues(record) {\n      var selectedData = [];\n\n      var data = record;\n      var linkedObject = this.datasourceLink;\n\n      if (data && linkedObject) {\n         // if this select value is array\n         if (Array.isArray(data)) {\n            selectedData = data.map(function (d) {\n               // display label in format\n               if (d) {\n                  d.text = d.text || linkedObject.displayData(d);\n                  d.value = d.text;\n               }\n\n               return d;\n            });\n         } else if (data.id || data.uuid) {\n            selectedData = data;\n            selectedData.text =\n               selectedData.text || linkedObject.displayData(selectedData);\n            selectedData.value = selectedData.text;\n         }\n      }\n\n      return selectedData;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      var linkField = this.fieldLink;\n      if (!linkField) {\n         this.warningsMessage(\n            `is unable to find linked field[${this.settings.linkColumn}]`,\n            {\n               linkColumn: this.settings.linkColumn,\n            }\n         );\n      }\n\n      let linkObj = this.datasourceLink;\n      if (!linkObj) {\n         this.warningsMessage(\n            `is unable to find linked object[${this.settings.linkObject}]`,\n            {\n               linkObject: this.settings.linkObject,\n            }\n         );\n      }\n   }\n\n   get _recentStorageId() {\n      return `${this.id}_recent_selected`;\n   }\n\n   /**\n    * @method saveSelect\n    * This function stores the user's selected option in local storage.\n    * It ensures that the user's recent selection is saved, allowing the system\n    * to retrieve it and provide a more personalized experience during future visits.\n    * @param {Array} selectedItems\n    * @return {Promise}\n    */\n   async saveSelect(selectedItems) {\n      if (!selectedItems) return;\n\n      if (!Array.isArray(selectedItems)) selectedItems = [selectedItems];\n\n      let recentSelected =\n         (await this.AB.Storage.get(this._recentStorageId)) ?? [];\n\n      selectedItems.forEach((item) => {\n         if (item == null) return;\n\n         const itemId = item.uuid ?? item.id ?? item;\n         recentSelected = recentSelected.filter((id) => id != itemId);\n         recentSelected.unshift(itemId);\n      });\n\n      return this.AB.Storage.set(this._recentStorageId, recentSelected);\n   }\n\n   /**\n    * @method _sortByRecent\n    * This function sorts the options based on the user's most recently selected item, which is retrieved from local storage.\n    *\n    * @param {Array} options\n    */\n   async _sortByRecent(options) {\n      if (!options?.length) return options;\n\n      const recentSelected = await this.AB.Storage.get(this._recentStorageId);\n      if (!recentSelected?.length) return options;\n\n      if (!Array.isArray(options)) options = [options];\n\n      options.sort((a, b) => {\n         const aId = a.uuid ?? a.id ?? a;\n         const bId = b.uuid ?? b.id ?? b;\n\n         return recentSelected.indexOf(bId) - recentSelected.indexOf(aId);\n      });\n   }\n};\n","const ABFieldDateCore = require(\"../../core/dataFields/ABFieldDateCore\");\n\nmodule.exports = class ABFieldDate extends ABFieldDateCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldDate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // if (this.settings.includeTime)\n      // config.editor = \"datetime\";\n      // else\n      config.editor = this.AB.Account?.language() == \"th\" ? \"thaidate\" : \"date\";\n\n      // allows entering characters in datepicker input, false by default\n      config.editable = true;\n\n      // NOTE: it seems that the default value is a string in ISO format.\n\n      //// NOTE: webix seems unable to parse ISO string into => date here.\n      // config.map = '(date)#'+this.columnName+'#';   // so don't use this.\n\n      config.template = (row) => {\n         if (row.$group) return row[this.columnName];\n\n         return this.format(row);\n      };\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      config.editFormat = (d) => {\n         // this routine needs to return a Date() object for the editor to work with.\n\n         if (d == \"\" || d == null) {\n            return \"\";\n         }\n\n         // else retun the actual ISO string => Date() value\n         return this.AB.rules.toDate(d);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"datepicker\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"datepicker\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"mobile-date\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-date\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   dateToString(dateFormat, dateData) {\n      return webix.Date.dateToStr(dateFormat)(dateData);\n   }\n\n   // Overwrite core.format to use webix locales.\n   format(rowData) {\n      if (!window.webixLocale) return super.format(rowData);\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n      const dateObj = this.AB.rules.toDate(d);\n\n      const dateFormat = this.settings.dateFormat;\n      // @const {int} dateFormat AB Date Format\n      // 1 - ignore, 2 - dd/mm/yyyy, 3 - mm/dd/yyyy, 4 - M D, yyyy, 5 - D M, yyyy\n\n      // Return longdate if option 4 or 5\n      if (dateFormat >= 4) {\n         return webix.i18n.longDateFormatStr(dateObj);\n      } else {\n         return webix.i18n.dateFormatStr(dateObj);\n      }\n   }\n};\n","const ABFieldDateTimeCore = require(\"../../core/dataFields/ABFieldDateTimeCore\");\n\nmodule.exports = class ABFieldDateTime extends ABFieldDateTimeCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldDate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // Ignore date\n      if (this.settings.dateFormat == 1) {\n         config.editor = \"time\";\n      } else {\n         config.editor =\n            this.AB.Account?._config?.languageCode == \"th\"\n               ? \"thaidatetime\"\n               : \"datetime\";\n      }\n\n      // allows entering characters in datepicker input, false by default\n      config.editable = true;\n\n      // NOTE: it seems that the default value is a string in ISO format.\n\n      //// NOTE: webix seems unable to parse ISO string into => date here.\n      // config.map = '(date)#'+this.columnName+'#';   // so don't use this.\n\n      config.template = (row) => {\n         if (row.$group) return row[this.columnName];\n\n         return this.format(row);\n      };\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      config.editFormat = (d) => {\n         // this routine needs to return a Date() object for the editor to work with.\n\n         if (d == \"\" || d == null) {\n            return \"\";\n         }\n\n         // else retun the actual ISO string => Date() value\n         return this.AB.rules.toDate(d);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"datepicker\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"datepicker\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"mobile-datetime\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-datetime\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   // Overwrite core.format to use webix locales.\n   format(rowData) {\n      if (!window.webixLocale) return super.format(rowData);\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n      const dateObj = this.AB.rules.toDate(d);\n\n      const dateFormat = this.settings.dateFormat;\n      // @const {int} dateFormat AB Date Format\n      // 1 - ignore, 2 - dd/mm/yyyy, 3 - mm/dd/yyyy, 4 - M D, yyyy, 5 - D M, yyyy\n      const timeToStr = webix.Date.dateToStr(this.getTimeFormat());\n\n      if (dateFormat >= 4) {\n         return `${webix.i18n.longDateFormatStr(dateObj)} ${timeToStr(\n            dateObj\n         )}`;\n      } else {\n         return `${webix.i18n.dateFormatStr(dateObj)} ${timeToStr(dateObj)}`;\n      }\n   }\n};\n","const ABFieldEmailCore = require(\"../../core/dataFields/ABFieldEmailCore\");\n\nmodule.exports = class ABFieldEmail extends ABFieldEmailCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldBoolean\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\";\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-email\",\n            settings: {},\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldFileCore = require(\"../../core/dataFields/ABFieldFileCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldFile extends ABFieldFileCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   /**\n    * @function destroy\n    * On a destroy operation, ask if the user wants to keep the related file.\n    */\n   async destroy() {\n      return new Promise((resolve, reject) => {\n         // verify we have been .save()d before:\n         if (!this.id) {\n            resolve();\n            return;\n         }\n\n         // Ask the user what to do about the existing file:\n         webix.confirm({\n            title: L(\"Keep Files?\"),\n            message: L(\"Do you want to keep the files referenced by {0}?\", [\n               this.label,\n            ]),\n            callback: async (result) => {\n               // update this setting so the server can respond correctly in\n               // ABFieldFile.migrateDrop()\n               this.settings.removeExistingData = result ? 0 : 1;\n\n               try {\n                  await this.save();\n\n                  // TODO: a reminder that you still got alot on the server to do!\n                  webix.alert({\n                     title: \"!! TODO !!\",\n                     text: \"Tell a Developer to actually pay attention to this!\",\n                  });\n\n                  // now the default .destroy()\n                  await super.destroy();\n\n                  resolve();\n               } catch (err) {\n                  reject(err);\n               }\n            },\n         });\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldFile\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n\n      config.editor = false;\n\n      const editable = options.editable;\n\n      // populate our default template:\n      config.template = (obj) => {\n         if (obj.$group) return this.dataValue(obj);\n\n         const fileDiv = [\n            '<div class=\"ab-file-data-field\" style=\"float: left;\">',\n            '<div class=\"webix_view ab-file-holder\">',\n            '<div class=\"webix_template\">',\n            this.fileTemplate(obj, editable),\n            \"</div>\",\n            \"</div>\",\n            \"</div>\",\n         ].join(\"\");\n\n         return fileDiv;\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n      options = options || {};\n\n      let typesList = [];\n      let maximumSize = 0;\n\n      if (this.settings.limitFileType && this.settings.fileType) {\n         typesList = this.settings.fileType.split(\",\");\n      }\n\n      if (this.settings.limitFileSize && this.settings.fileSize) {\n         maximumSize = this.settings.fileSize;\n      }\n\n      // \t\t// safety check:\n      // \t\t// webix seems to crash if you specify a .container that doesn't exists:\n      // \t\t// Note: when the template is first created, we don't have App.unique()\n      const parentContainer = node.querySelector(\".ab-file-holder\");\n      if (parentContainer) {\n         parentContainer.innerHTML = \"\";\n         // parentContainer.id = idBase;\t// change it to the unique one.\n\n         // \t\t\t// use a webix component for displaying the content.\n         // \t\t\t// do this so I can use the progress spinner\n\n         const webixContainer = webix.ui({\n            view: \"template\",\n            container: parentContainer,\n\n            template: this.fileTemplate(row, options.editable),\n\n            borderless: true,\n            width: 160,\n            height: 60,\n         });\n         webix.extend(webixContainer, webix.ProgressBar);\n\n         // \t\t\t////\n         // \t\t\t//// Prepare the Uploader\n         // \t\t\t////\n\n         if (!options.editable) {\n            const domNode = parentContainer.querySelector(\".delete-image\");\n            if (domNode) domNode.style.display = \"none\";\n\n            return;\n         }\n\n         const url = this.urlUpload(true);\n\n         const uploader = webix.ui({\n            view: \"uploader\",\n            apiOnly: true,\n            upload: url,\n            inputName: \"file\",\n            multiple: false,\n            on: {\n               // when a file is added to the uploader\n               onBeforeFileAdd: function (item) {\n                  node.classList.remove(\"webix_invalid\");\n                  node.classList.remove(\"webix_invalid_cell\");\n\n                  // verify file type\n                  const acceptableTypes = typesList;\n                  if (acceptableTypes && acceptableTypes != \"\") {\n                     const type = item.type.toLowerCase();\n                     if (acceptableTypes.indexOf(type) == -1) {\n                        webix.message(\n                           L(\"Only [{0}] files are supported\", [\n                              acceptableTypes.join(\", \"),\n                           ])\n                        );\n                        return false;\n                     }\n                  }\n\n                  //verify file size\n                  //Convert to MegaBytes\n                  if (maximumSize > 0) {\n                     const acceptableSizes = maximumSize * 1000000;\n                     if (item.size > acceptableSizes) {\n                        webix.message(\n                           L(\"Maximum file size is {0}MB\", [maximumSize])\n                        );\n                        return false;\n                     }\n                  }\n\n                  // start progress indicator\n                  webixContainer.showProgress({\n                     type: \"icon\",\n                     delay: 2000,\n                  });\n               },\n\n               // when upload is complete:\n               onFileUpload: async (item, response) => {\n                  webixContainer.hideProgress();\n                  // this.showFile(idBase, response.data.uuid);\n\n                  const values = {};\n                  values[this.columnName] = {};\n                  values[this.columnName].uuid = response.data.uuid;\n                  values[this.columnName].filename = item.name;\n\n                  // update just this value on our current object.model\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if ($$(node) && $$(node).updateItem)\n                           $$(node).updateItem(row.id, values);\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABFieldFile.onFileUpload(): Error updating our entry.\",\n                           row: row,\n                           values: values,\n                        });\n                     }\n                  }\n\n                  // update value in the form component\n                  this.setValue($$(node), values);\n               },\n\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  this.AB.notify.developer(new Error(\"Error loading file\"), {\n                     message:\n                        \"ABFieldFile:onFileUploadError(): Error loading file\",\n                     response,\n                  });\n                  webixContainer.hideProgress();\n               },\n            },\n         });\n         uploader.addDropZone(webixContainer.$view);\n\n         // store upload id into html element (it will be used in .customEdit)\n         node.dataset[\"uploaderId\"] = uploader.config.id;\n\n         // open file upload dialog when's click\n         node.addEventListener(\"click\", (e) => {\n            if (e.target.className.indexOf(\"delete-image\") > -1) {\n               this.deleteFile = true;\n            }\n         });\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node) {\n      if (this.deleteFile == true) {\n         // remove the property because it is only needed to prevent the file dialog from showing\n         delete this.deleteFile;\n\n         // Ask the user if they really want to delete the photo\n         webix.confirm({\n            title: \"\",\n            text: L(\"Are you sure you want to remove this file?\"),\n            callback: async (result) => {\n               const confirmDelete = result ? 1 : 0;\n               if (confirmDelete) {\n                  // update just this value on our current object.model\n                  const values = {};\n\n                  values[this.columnName] = {};\n\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if ($$(node) && $$(node).updateItem)\n                           $$(node).updateItem(row.id, values);\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"ABFieldFile:customEdit(): Error updating our entry.\",\n                           row: row,\n                           values: values,\n                        });\n                     }\n                  }\n                  // update value in the form component\n                  else {\n                     this.setValue($$(node), values);\n                  }\n               }\n            },\n         });\n      } else {\n         const rowData = this.dataValue(row);\n         if (!rowData || !rowData.uuid) {\n            const uploaderId = node.dataset[\"uploaderId\"],\n               uploader = $$(uploaderId);\n\n            if (uploader && uploader.fileDialog)\n               uploader.fileDialog({ rowid: row.id });\n         }\n      }\n\n      return false;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldcustom\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-file\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailcustom\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   //File Template\n\n   fileTemplate(obj, editable) {\n      let iconDisplay = \"\";\n      let fileDisplay = \"display:none;\";\n      let fileURL = \"\";\n\n      let value = \"\";\n      let name = \"\";\n\n      const rowData = this.dataValue(obj);\n      if (rowData) {\n         value = rowData.uuid;\n         name = rowData.filename;\n      }\n\n      if (value && name) {\n         iconDisplay = \"display:none;\";\n         fileDisplay = \"\";\n         fileURL = \"/file/\" + value;\n      }\n\n      const html = [\n         `<div class=\"file-data-field-icon\" style=\"text-align: center; height: inherit; display: table-cell; vertical-align: middle; border: 2px dotted #CCC; background: #FFF; border-radius: 10px; font-size: 11px; line-height: 13px; padding: 0 10px; ${iconDisplay}\"><i class=\"fa fa-file fa-2x\" style=\"opacity: 0.6; font-size: 32px; margin-top: 3px; margin-bottom: 5px;\"></i>${\n            editable ? `<br/>${L(\"Drag and drop or click here\")}` : \"\"\n         }</div>`,\n         `<div class=\"file-data-field-name\" style=\" width:100%; height:100%; position:relative; \"><a target=\"_blank\" href=\"${fileURL}\">${\n            name || \"\"\n         }</a>${\n            editable\n               ? `<a style=\"${fileDisplay}\" class=\"ab-delete-photo\" href=\"javascript:void(0);\"><i class=\"fa fa-times delete-image\"></i></a>`\n               : \"\"\n         }</div>`,\n      ].join(\"\");\n\n      return html;\n   }\n\n   getValue(item, rowData) {\n      const file = item.$view.querySelector(\".file-data-field-name\");\n      const fileLink = file.querySelector(\"a\");\n\n      return {\n         uuid: file.getAttribute(\"file-uuid\"),\n         filename: fileLink.innerHTML,\n      };\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      const domNode = item.$view;\n      if (!domNode) return;\n\n      let val = null;\n      if (rowData) {\n         val = this.dataValue(rowData);\n\n         // if (val == null) {\n         // \t// assume they just sent us a single value\n         // \tval = rowData;\n         // }\n      }\n\n      const fileicon = domNode.querySelector(\".file-data-field-icon\");\n      if (fileicon) fileicon.style.display = val && val.uuid ? \"none\" : \"block\";\n\n      const file = domNode.querySelector(\".file-data-field-name\");\n      if (file) {\n         const fileDeleteIcon = file.querySelector(\".ab-delete-photo\");\n         if (fileDeleteIcon)\n            fileDeleteIcon.style.display = val && val.uuid ? \"block\" : \"none\";\n\n         file.style.display = val && val.uuid ? \"block\" : \"none\";\n         if (val && val.uuid) file.setAttribute(\"file-uuid\", val.uuid);\n         else file.removeAttribute(\"file-uuid\");\n\n         const fileLink = file.querySelector(\"a\");\n         const fileURL = \"/file/\" + (val ? val.uuid : \"\");\n         fileLink.href = fileURL;\n         fileLink.innerHTML = val ? val.filename : \"\";\n      }\n   }\n\n   /**\n    * @method urlUpload()\n    * return the url for uploading a file.\n    * When used in a webix widget, the response is different than our normal\n    * API, so we can pass in a param to indicate a response compatible with\n    * webix.\n    * @param {bool} isWebix\n    *        Is this url being used by a webix component?\n    * @return {string}\n    */\n   urlUpload(isWebix = true) {\n      return `/file/upload/${this.object.id}/${this.id}/${isWebix ? \"1\" : \"0\"}`;\n   }\n\n   /**\n    * @method urlFile\n    * return the url to use to reference the file by it's id.\n    * @param {string} id uuid reference of this file.\n    * @return {string}\n    */\n   urlFile(id) {\n      return `/file/${id}`;\n   }\n};\n","const ABFieldFormulaCore = require(\"../../core/dataFields/ABFieldFormulaCore\");\n\nmodule.exports = class ABFieldFormula extends ABFieldFormulaCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldFormula\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         if (rowData.$group) return rowData[this.columnName];\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // not support in the form widget\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldImageCore = require(\"../../core/dataFields/ABFieldImageCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldImage extends ABFieldImageCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @function destroy\n    * On a destroy operation, ask if the user wants to keep the related images.\n    */\n   async destroy() {\n      return new Promise((resolve, reject) => {\n         // verify we have been .save()d before:\n         if (this.id) {\n            // Ask the user what to do about the existing images:\n            webix.confirm({\n               title: L(\"Keep Images?\"),\n               message: L(\"Do you want to keep the images referenced by {0}?\", [\n                  this.label,\n               ]),\n               callback: async (result) => {\n                  // update this setting so the server can respond correctly in\n                  // ABFieldImage.migrateDrop()\n                  this.settings.removeExistingData = result ? 0 : 1;\n\n                  try {\n                     await this.save();\n\n                     // TODO: a reminder that you still got alot on the server to do!\n                     webix.alert({\n                        title: \"!! TODO !!\",\n                        text: \"ABFieldImage.destroy(): Tell a Developer to actually pay attention to this!\",\n                     });\n\n                     await super.destroy();\n\n                     resolve();\n                  } catch (err) {\n                     reject(err);\n                  }\n               },\n            });\n         } else {\n            resolve(); // nothing to do really\n         }\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   idCustomContainer(obj, formId) {\n      // if formId is passed the field is in a form view not a grid and\n      // we won't have the obj and each time this\n      // field is in a form it will conflict with the last one rendered\n      if (formId) {\n         return `${this.columnName.replace(/ /g, \"_\")}-${formId}-image`;\n      } else {\n         return `${this.columnName.replace(/ /g, \"_\")}-${obj.id}-image`;\n      }\n   }\n\n   // return the grid column header definition for this instance of ABFieldImage\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n\n      config.editor = false; // 'text';  // '[edit_type]'   for your unique situation\n      // config.sort   = 'string' // '[sort_type]'   for your unique situation\n\n      let containerHeight = \"100%\";\n      let imageHeight = \"100%\";\n      let width = \"100%\";\n      let imageSrcHeight = \"100%\";\n      if (field.settings.useWidth) {\n         config.width = field.settings.imageWidth || 100;\n         const heightVal =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight + 20\n               : 80;\n         containerHeight = `${heightVal}px`;\n         width = `${field.settings.imageWidth || 100}px`;\n         imageHeight =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight\n               : 80;\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight\n               : 60;\n         imageSrcHeight = `${imageSrcHeight}px`;\n      } else if (options.width) {\n         config.width = options.width || 100;\n         width = `${options.width || 100}px`;\n         imageHeight = options.width;\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight = options.width;\n         imageSrcHeight = `${imageSrcHeight}px`;\n      }\n      if (\n         field.settings.useHeight &&\n         field.settings.imageHeight &&\n         field.settings.imageHeight != \"NaN\"\n      ) {\n         config.height = field.settings.imageHeight || 0;\n         containerHeight = parseInt(config.height) + 20;\n         containerHeight = `${containerHeight}px`;\n         imageHeight = parseInt(config.height);\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight = parseInt(config.height);\n         imageSrcHeight = `${imageSrcHeight}px`;\n      }\n\n      const editable = options.editable;\n\n      // populate our default template:\n      // debugger;\n      config.template = (obj) => {\n         if (obj.$group) return obj[this.columnName];\n\n         const widthStyle = `width: ${width}; height: ${containerHeight}`;\n\n         const imageStyle = `width: ${width}; height: ${imageHeight}`;\n\n         const imgDiv = [\n            `<div class=\"ab-image-data-field\" style=\"float: left; ${widthStyle}\">`,\n            `<div class=\"webix_view ab-image-holder\" style=\"${imageStyle}\">`,\n            '<div class=\"webix_template\">',\n            this.imageTemplate(obj, {\n               editable: editable,\n               height: imageSrcHeight,\n               width: width,\n            }),\n            \"</div>\",\n            \"</div>\",\n            \"</div>\",\n         ].join(\"\");\n\n         return imgDiv;\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    * @param {object} options - {\n    * \t\teditable {Bool}   where or not this field is currently editable\n    * \t\tformId {string}   the id of the presenting form if any\n    * }\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      // safety check:\n      // webix seems to crash if you specify a .container that doesn't exists:\n      // Note: when the template is first created, we don't have App.unique()\n      const parentContainer = node.querySelector(\".ab-image-holder\");\n      if (parentContainer) {\n         parentContainer.innerHTML = \"\";\n         // parentContainer.id = idBase;\t// change it to the unique one.\n\n         let imgHeight = 0;\n         if (this.settings.useHeight) {\n            imgHeight = parseInt(this.settings.imageHeight) || imgHeight;\n         }\n\n         let imgWidth = 0;\n         if (this.settings.useWidth) {\n            imgWidth = parseInt(this.settings.imageWidth) || imgWidth;\n         }\n\n         if (options.height) imgHeight = options.height;\n\n         if (options.width) imgWidth = options.width;\n         //// TODO: actually pay attention to the height and width when\n         //// displaying the images.\n\n         // use a webix component for displaying the content.\n         // do this so I can use the progress spinner\n         const webixContainer = webix.ui({\n            view: \"template\",\n            css: \"ab-image-holder\",\n            // id: ids.container,\n            container: parentContainer,\n\n            template: this.imageTemplate(row, {\n               editable: options.editable,\n               height: imgHeight ? imgHeight + \"px\" : 0,\n               width: imgWidth ? imgWidth + \"px\" : 0,\n            }),\n\n            borderless: true,\n            height: imgHeight,\n            width: imgWidth,\n         });\n         webix.extend(webixContainer, webix.ProgressBar);\n\n         ////\n         //// Prepare the Uploader\n         ////\n\n         if (!options.editable) {\n            const domNode = parentContainer.querySelector(\".delete-image\");\n            if (domNode) domNode.style.display = \"none\";\n            return;\n         }\n\n         const url = this.urlUpload();\n\n         const uploader = webix.ui({\n            view: \"uploader\",\n            // id:ids.uploader,\n            apiOnly: true,\n            upload: url,\n            inputName: \"file\",\n            multiple: false,\n            status: (f) => {\n               if (f.percent) {\n                  webixContainer.hideProgress();\n                  webixContainer.showProgress({\n                     type: \"top\",\n                     position: f.percent / 100,\n                  });\n               }\n            },\n            // formData:{\n            // \tappKey:application.name,\n            // \tpermission:actionKey,\n            // \tisWebix:true,\n            // \timageParam:'upload'\n            // },\n            on: {\n               // when a file is added to the uploader\n               onBeforeFileAdd: (item) => {\n                  node.classList.remove(\"webix_invalid\");\n                  node.classList.remove(\"webix_invalid_cell\");\n\n                  // verify file type\n                  const acceptableTypes = [\n                     \"jpg\",\n                     \"jpeg\",\n                     \"bmp\",\n                     \"png\",\n                     \"gif\",\n                     \"webp\",\n                  ];\n                  const type = item.type.toLowerCase();\n                  if (acceptableTypes.indexOf(type) == -1) {\n                     webix.message(\n                        L(\"Only [{0}] images are supported\", [\n                           acceptableTypes.join(\", \"),\n                        ])\n                     );\n                     return false;\n                  }\n                  this.uploadInProgress = true;\n                  // Display the image from local file\n                  var reader = new FileReader();\n                  reader.onload = (e) => {\n                     this.showImage(null, node, e.target.result);\n                     webixContainer.showProgress({\n                        type: \"top\",\n                        delay: 2000,\n                     });\n                  };\n                  reader.readAsDataURL(item.file);\n               },\n\n               // when upload is complete:\n               onFileUpload: async (item, response) => {\n                  webixContainer.hideProgress();\n                  this.showImage(response.data.uuid, node);\n                  this.uploadInProgress = false;\n\n                  const values = {};\n                  values[this.columnName] = response.data.uuid;\n\n                  // update just this value on our current object.model\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if (\n                           $$(node) &&\n                           $$(node).getItem &&\n                           $$(node).getItem(row.id)\n                        ) {\n                           $$(node).updateItem(row.id, values);\n                        } else {\n                           // if you scroll the table the connection to the datatable is lost so we need to find it again\n                           const dataTable =\n                              document.querySelector(\".webix_dtable\");\n                           if ($$(dataTable) && $$(dataTable).getItem(row.id))\n                              $$(dataTable).updateItem(row.id, values);\n                        }\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABFieldImage.onFileUpload(): model.update(): error updating our entry\",\n                           field: this.toObj(),\n                           row,\n                           values,\n                        });\n                     }\n                  }\n\n                  // update value in the form component\n                  this.setValue($$(node), values);\n               },\n\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  this.AB.notify.developer(new Error(\"Error uploading image\"), {\n                     context: \"ABFieldImage. uploader. onFileUploadError():\",\n                     field: this.toObj(),\n                     response,\n                  });\n                  webixContainer.hideProgress();\n               },\n            },\n         });\n         uploader.addDropZone(webixContainer.$view);\n\n         // store upload id into html element (it will be used in .customEdit)\n         node.dataset[\"uploaderId\"] = uploader.config.id;\n\n         // if we are working in a datagrid we need to add a click event to\n         // check if the user is clicking on the delete button\n         if (node.className == \"webix_cell\") {\n            node.addEventListener(\"click\", (e) => {\n               if (e.target.className.indexOf(\"delete-image\") > -1) {\n                  this.deleteImage = true;\n               }\n            });\n         }\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node, id, evt) {\n      if (\n         (evt && evt.target.className.indexOf(\"delete-image\") > -1) ||\n         this.deleteImage\n      ) {\n         delete this.deleteImage;\n         if (!row.removeDefaultImage) {\n            row.removeDefaultImage = [];\n         }\n         row.removeDefaultImage[this.columnName] = true;\n\n         // Ask the user if they really want to delete the photo\n         webix.confirm({\n            title: L(\"Are you sure you want to remove this image?\"),\n            callback: async (result) => {\n               const confirmDelete = result ? 1 : 0;\n               if (confirmDelete) {\n                  // update just this value on our current object.model\n                  const values = {};\n                  values[this.columnName] = \"\"; // removing the reference to the image here\n\n                  try {\n                     await this.object.model().update(row.id, values);\n\n                     // update the client side data object as well so other data changes won't cause this save to be reverted\n                     if ($$(node) && $$(node).updateItem)\n                        $$(node).updateItem(row.id, values);\n\n                     // update value in the form component\n                     this.setValue($$(node), values);\n                  } catch (err) {\n                     node.classList.add(\"webix_invalid\");\n                     node.classList.add(\"webix_invalid_cell\");\n\n                     this.AB.notify.developer(err, {\n                        context:\n                           \"ABFieldImage: customEdit(): Error updating our entry\",\n                        field: this.toObj(),\n                        row: row,\n                        values: values,\n                     });\n                  }\n               }\n            },\n         });\n      } else {\n         const uploaderId = node.dataset[\"uploaderId\"],\n            uploader = $$(uploaderId);\n\n         if (uploader && uploader.fileDialog)\n            uploader.fileDialog({ rowid: row.id });\n      }\n\n      return false;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldcustom\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-image\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailimage\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   imageTemplate(obj, options) {\n      options = options || {};\n      options.height = options.height || \"100%\";\n      options.width = options.width || \"100%\";\n\n      // deault view is icon:\n      let iconDisplay = \"\";\n      let imageDisplay = \"display:none;\";\n      let imageURL = \"\";\n\n      let value = \"\";\n      let isRemoveDefaultImage = false;\n      if (obj[this.columnName]) {\n         value = obj[this.columnName];\n      }\n      if (obj.removeDefaultImage) {\n         if (obj.removeDefaultImage[this.columnName]) {\n            isRemoveDefaultImage = obj.removeDefaultImage[this.columnName];\n         }\n      }\n\n      if (value) {\n         iconDisplay = \"display:none;\";\n         imageDisplay = \"\";\n         imageURL = `background-image:url('${this.urlImage(value)}');`;\n      } else {\n         if (this.settings.useDefaultImage && !isRemoveDefaultImage) {\n            iconDisplay = \"display:none;\";\n            imageDisplay = \"\";\n            imageURL = `background-image:url('${this.urlImage(\n               this.settings.defaultImageUrl\n            )}');`;\n         }\n      }\n\n      let html = [\n         `<div class=\"image-data-field-icon\" style=\"${iconDisplay}\">#drag#</div>` +\n            `<div class=\"image-data-field-image\" style=\"${imageDisplay} height:${options.height}; ${imageURL}\">#remove#</div>`,\n      ].join(\"\");\n\n      html = html.replace(\n         \"#drag#\",\n         options.editable\n            ? `<div>${L(\"Drag and drop or click here\")}</div>`\n            : \"\"\n      );\n      html = html.replace(\n         \"#remove#\",\n         options.editable\n            ? `<a style=\"${imageDisplay}\" class=\"ab-delete-photo\" href=\"javascript:void(0);\"><i class=\"fa fa-times delete-image\"></i></a>`\n            : \"\"\n      );\n\n      return html;\n   }\n\n   showImage(uuid, node, url) {\n      const parentContainer = node.querySelector(\".ab-image-holder\");\n      if (parentContainer) {\n         parentContainer.querySelector(\".image-data-field-icon\").style.display =\n            \"none\";\n         const image = parentContainer.querySelector(\".image-data-field-image\");\n         image.style.display = \"\";\n         image.style.backgroundImage = `url('${url ?? this.urlImage(uuid)}')`;\n         image.setAttribute(\"image-uuid\", uuid);\n      }\n   }\n\n   getValue(item, rowData) {\n      const image = item.$view.querySelector(\".image-data-field-image\");\n      return image.getAttribute(\"image-uuid\");\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      const domNode = item.$view;\n      if (!domNode) return;\n\n      let val = null;\n      if (rowData) {\n         val = this.dataValue(rowData);\n\n         // if (val == null) {\n         // \t// assume they just sent us a single value\n         // \tval = rowData;\n         // }\n      }\n\n      const imageIcon = domNode.querySelector(\".image-data-field-icon\");\n      if (imageIcon) imageIcon.style.display = val ? \"none\" : \"\";\n\n      const image = domNode.querySelector(\".image-data-field-image\");\n      if (image) {\n         const imageDeleteIcon = image.querySelector(\".ab-delete-photo\");\n         if (imageDeleteIcon)\n            imageDeleteIcon.style.display = val ? \"block\" : \"none\";\n\n         image.style.display = val ? \"block\" : \"none\";\n\n         if (val) {\n            image.style.backgroundImage = `url('${this.urlImage(val)}')`;\n            image.setAttribute(\"image-uuid\", val);\n         } else {\n            image.removeAttribute(\"image-uuid\");\n         }\n      }\n   }\n\n   /**\n    * @method toBase64\n    *\n    * @param {Object} rowData\n    *\n    * @return {Promise} - {\n    * \t\tdata: string,\n    * \t\twidth: number,\n    * \t\theight: number\n    * }\n    */\n   toBase64(rowData) {\n      return new Promise((resolve, reject) => {\n         if (!rowData[this.columnName]) return resolve(null);\n\n         const img = new Image();\n         img.crossOrigin = \"Anonymous\";\n         img.onerror = function (err) {\n            reject(err);\n         };\n         img.onload = function () {\n            const canvas = document.createElement(\"canvas\");\n            canvas.width = img.width;\n            canvas.height = img.height;\n            const ctx = canvas.getContext(\"2d\");\n            ctx.drawImage(img, 0, 0);\n            const dataURL = canvas.toDataURL();\n            const imageData = {\n               data: dataURL,\n               width: img.width,\n               height: img.height,\n            };\n            resolve(imageData);\n         };\n\n         img.src = this.urlImage(rowData[this.columnName]);\n      });\n   }\n\n   /**\n    * @method urlImage()\n    * return the url to use to reference the image by it's id.\n    * @param {string} id\n    *        the file.uuid reference of this image.\n    * @return {string}\n    */\n   urlImage(id) {\n      return `/file/${id}`;\n   }\n\n   /**\n    * @method urlUpload()\n    * return the url for uploading a file.\n    * When used in a webix widget, the response is different than our normal\n    * API, so we can pass in a param to indicate a response compatible with\n    * webix.\n    * @param {bool} isWebix\n    *        Is this url being used by a webix component?\n    * @return {string}\n    */\n   urlUpload(isWebix = true) {\n      return `/file/upload/${this.object.id}/${this.id}/${isWebix ? \"1\" : \"0\"}`;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n      if (this.uploadInProgress)\n         validator.addError(this.columnName, L(\"Image still uploading\"));\n   }\n\n   rotateLeft(imgFile) {\n      return this.AB.Network.put({\n         url: `/image/rotate/${imgFile}?direction=left`,\n      });\n   }\n\n   rotateRight(imgFile) {\n      return this.AB.Network.put({\n         url: `/image/rotate/${imgFile}?direction=right`,\n      });\n   }\n};\n","const ABFieldJsonCore = require(\"../../core/dataFields/ABFieldJsonCore\");\n\nmodule.exports = class ABFieldJson extends ABFieldJsonCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldJson\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // config.editor = null; // read only for now\n      config.editor = \"text\";\n      config.css = \"textCell\";\n\n      // when called by ABViewFormCustom, will need a .template() fn.\n      // currently we don't need to return anything so ...\n      config.template = () => \"\";\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // read-only for now\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"json\",\n            settings: {\n               type: \"string\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n      if (item) {\n         item.config.value = rowData[this.columnName];\n      }\n   }\n\n   /**\n    * @method formCleanData()\n    * Review the data a form is about to submit and change/remove it as\n    * appropriate.\n    * @param {obj} rowData\n    *        The {data} a form has collected and is about to save.\n    * @return {undefined}\n    */\n   formCleanData(rowData) {\n      let val = rowData[this.columnName];\n      if (val === \"\") {\n         // \"\" isn't a valid json value, so just remove the data and\n         // let the DB handle the default value.\n         delete rowData[this.columnName];\n      }\n   }\n};\n","const ABFieldListCore = require(\"../../core/dataFields/ABFieldListCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldList extends ABFieldListCore {\n   constructor(values, object) {\n      super(values, object);\n\n      // this._Selectivity = new ABFieldSelectivity(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   save() {\n      return super.save().then(() => {\n         // Now we want to clear out any entries that had values == to item removed from our list:\n         if (this.pendingDeletions.length) {\n            const model = this.object.model();\n\n            if (this.settings.isMultiple == true) {\n               // find all the entries that have one of the deleted values:\n               // use Promise to prevent issues with data being loaded before it is deleted on client side\n               return new Promise((resolve, reject) => {\n                  let numDone = 0;\n                  let numToDo = 0;\n\n                  model\n                     .findAll({})\n                     .then((list) => {\n                        list = list.data || list;\n\n                        // for each list item\n                        list.forEach((item) => {\n                           if (Array.isArray(item[this.columnName])) {\n                              // get fields not in pendingDeletions\n                              let remainingFields = item[\n                                 this.columnName\n                              ].filter((i) => {\n                                 return (\n                                    this.pendingDeletions.indexOf(i.id) == -1\n                                 );\n                              });\n\n                              if (\n                                 remainingFields.length !=\n                                 item[this.columnName].length\n                              ) {\n                                 numToDo++;\n\n                                 // update value to new field list\n                                 if (remainingFields.length == 0) {\n                                    remainingFields = \"\";\n                                 }\n                                 const value = {};\n                                 value[this.columnName] = remainingFields;\n                                 model.update(item.id, value).then(() => {\n                                    // if ($$(node) && $$(node).updateItem)\n                                    //    $$(node).updateItem(value.id, value);\n                                    numDone++;\n                                    if (numDone >= numToDo) {\n                                       resolve();\n                                    }\n                                 });\n                              }\n                           }\n                        });\n                        if (numToDo == 0) {\n                           resolve();\n                        }\n                     })\n                     .catch(reject);\n               });\n            } else {\n               // find all the entries that have one of the deleted values:\n               const where = {};\n               where[this.columnName] = this.pendingDeletions;\n               return new Promise((resolve, reject) => {\n                  let numDone = 0;\n\n                  model\n                     .findAll(where)\n                     .then((list) => {\n                        // make sure we just work with the { data:[] } that was returned\n                        list = list.data || list;\n\n                        // for each one, set the value to ''\n                        // NOTE: jQuery ajax routines filter out null values, so we can't\n                        // set them to null. :(\n                        // const numDone = 0;\n                        const value = {};\n                        value[this.columnName] = \"\";\n\n                        list.forEach((item) => {\n                           model.update(item.id, value).then(() => {\n                              numDone++;\n                              if (numDone >= list.length) {\n                                 resolve();\n                              }\n                           });\n                        });\n                        if (list.length == 0) {\n                           resolve();\n                        }\n                     })\n                     .catch(reject);\n               });\n            }\n         }\n      });\n   }\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldList\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n      const App = field.AB._App;\n\n      var formClass = \"\";\n      var placeHolder = \"\";\n      if (options.editable) {\n         formClass = \" form-entry\";\n         placeHolder = `<span style='color: #CCC; padding: 0 5px;'>${L(\n            \"Select item\"\n         )}</span>`;\n      }\n      var isRemovable = options.editable && !this.settings.required;\n\n      config.editFormat = (value) => {\n         return this.editFormat(value);\n      };\n      config.editParse = (value) => {\n         return this.editParse(value);\n      };\n\n      config.template = (rowData) => {\n         let selectedData = rowData[this.columnName];\n         if (selectedData == null) return \"\";\n         if (this.settings.isMultiple) {\n            selectedData = _getSelectedOptions(this, rowData);\n         }\n         var values = [];\n         values.push('<div class=\"badgeContainer\">');\n         let hasCustomColor = \"\";\n         let optionHex = \"\";\n         if (\n            selectedData &&\n            Array.isArray(selectedData) &&\n            selectedData.length\n         ) {\n            selectedData.forEach((val) => {\n               if (this.settings.hasColors && val.hex) {\n                  hasCustomColor = \"hascustomcolor\";\n                  optionHex = `background: ${val.hex};`;\n               }\n               if (val.text) {\n                  values.push(\n                     `<div style=\"${optionHex}\" class='webix_multicombo_value ${hasCustomColor}'><span>${val.text}</span><!-- span data-uuid=\"${val.id}\" class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span --></div>`\n                  );\n               }\n            });\n            if (selectedData.length > 1) {\n               values.push(\n                  `<span class=\"webix_badge selectivityBadge\">${selectedData.length}</span>`\n               );\n            }\n         } else if (selectedData) {\n            let selectedObj = selectedData;\n            if (typeof selectedData == \"string\") {\n               selectedObj = this.getItemFromVal(selectedData);\n            }\n            if (!selectedObj) return \"\";\n            if (this.settings.hasColors && selectedObj.hex) {\n               hasCustomColor = \"hascustomcolor\";\n               optionHex = `background: ${selectedObj.hex};`;\n            }\n            if (selectedObj.text) {\n               let clear = \"\";\n               if (options.editable && !this.settings.required) {\n                  clear = `<span class=\"webix_multicombo_delete clear-combo-value\" role=\"button\" aria-label=\"Remove item\"></span>`;\n               }\n               values.push(\n                  `<div style=\"${optionHex}\" class='webix_multicombo_value ${hasCustomColor}'>${clear}<span class=\"ellip\">${selectedObj.text}</span></div>`\n               );\n            }\n         } else {\n            return \"\";\n         }\n         values.push(\"</div>\");\n         return values.join(\"\");\n      };\n      config.editor = this.settings.isMultiple ? \"multiselect\" : \"combo\";\n      config.suggest = {\n         button: true,\n         data: this.settings.options.map(function (opt) {\n            return {\n               id: opt.id,\n               value: opt.text,\n               hex: opt.hex,\n            };\n         }),\n      };\n      if (this.settings.isMultiple) {\n         config.suggest.view = \"checksuggest\";\n      }\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      if (!node.querySelector) return;\n\n      var clearButton = node.querySelector(\n         \".selectivity-single-selected-item-remove\"\n      );\n      if (clearButton) {\n         clearButton.addEventListener(\"click\", (e) => {\n            e.stopPropagation();\n            var values = {};\n            values[this.columnName] = \"\";\n            this.object\n               .model()\n               .update(row.id, values)\n               .then(() => {\n                  // update the client side data object as well so other data changes won't cause this save to be reverted\n                  $$(node)?.updateItem?.(row.id, values);\n               })\n               .catch((err) => {\n                  node.classList.add(\"webix_invalid\");\n                  node.classList.add(\"webix_invalid_cell\");\n\n                  this.AB.notify.developer(err, {\n                     message:\n                        \"ABFieldList:customDisplay(): Error updating our entry.\",\n                     row: row,\n                     values: \"\",\n                     field: this.toObj(),\n                  });\n               });\n         });\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   // customEdit(row, App, node) {\n   //    return super.customEdit(row, App, node);\n   // }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple ? \"selectmultiple\" : \"selectsingle\",\n            settings: {\n               options: this.settings.options.map(function (opt) {\n                  return {\n                     id: opt.id,\n                     value: opt.text,\n                     hex: opt.hex,\n                  };\n               }),\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple\n               ? \"mobile-selectmultiple\"\n               : \"mobile-selectsingle\",\n            settings: {\n               options: this.settings.options.map(function (opt) {\n                  return {\n                     id: opt.id,\n                     value: opt.text,\n                     hex: opt.hex,\n                  };\n               }),\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple ? \"detailtext\" : \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   editFormat(value) {\n      if (!value) return \"\";\n      let vals = [];\n      if (Array.isArray(value)) {\n         value.forEach((val) => {\n            if (typeof val == \"object\") {\n               vals.push(val.id);\n            } else {\n               let itemObj = this.getItemFromVal(val);\n               vals.push(itemObj.id);\n            }\n         });\n      } else {\n         if (typeof value == \"object\") {\n            vals.push(value.id);\n         } else {\n            let itemObj = this.getItemFromVal(value);\n            if (itemObj && itemObj.id) {\n               vals.push(itemObj.id);\n            }\n         }\n      }\n      return vals.join();\n   }\n\n   editParse(value) {\n      if (this.settings.isMultiple) {\n         let returnVals = [];\n         let vals = value.split(\",\");\n         vals.forEach((val) => {\n            returnVals.push(this.getItemFromVal(val));\n         });\n         return returnVals;\n      } else {\n         return value;\n      }\n   }\n\n   getItemFromVal(val) {\n      let item;\n      let options = this.options();\n      if (options.length > 1) {\n         options.forEach((option) => {\n            if (option.id == val) {\n               item = option;\n               return false;\n            }\n         });\n         return item;\n      } else {\n         return \"\";\n      }\n   }\n\n   getValue(item, rowData) {\n      return this.editParse(item.getValue());\n   }\n\n   getSelectedOptions(field, rowData = {}) {\n      let result = [];\n      if (rowData[this.columnName] != null) {\n         result = rowData[this.columnName];\n      } else if (rowData) {\n         if (Array.isArray(rowData)) {\n            result = rowData;\n         } else {\n            result.push(rowData);\n         }\n      }\n      if (result.length) {\n         if (typeof result == \"string\") result = JSON.parse(result);\n\n         // Pull text with current language\n         if (this.settings) {\n            result = (this.settings.options || []).filter((opt) => {\n               return (\n                  (result || []).filter((v) => (opt.id || opt) == (v.id || v))\n                     .length > 0\n               );\n            });\n         }\n      }\n\n      return result;\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      if (this.settings.isMultiple) {\n         // do we need anything here?\n      } else {\n         super.setValue(item, rowData);\n      }\n   }\n};\n\n// == Private methods ==\nfunction _getSelectedOptions(field, rowData = {}) {\n   let result = [];\n   if (rowData[field.columnName] != null) {\n      result = rowData[field.columnName];\n\n      if (typeof result == \"string\") result = JSON.parse(result);\n\n      // Pull text with current language\n      if (field.settings) {\n         result = (field.settings.options || []).filter((opt) => {\n            return (\n               (result || []).filter(\n                  (v) => opt && v && (opt.id || opt) == (v.id || v)\n               ).length > 0\n            );\n         });\n      }\n   }\n\n   return result;\n}\n","const ABFieldLongTextCore = require(\"../../core/dataFields/ABFieldLongTextCore\");\n\nmodule.exports = class ABFieldLongText extends ABFieldLongTextCore {\n   constructor(values, object) {\n      super(values, object);\n\n      /*\n\t\t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n\t\t}\n\t\t*/\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldLongText\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\"; // '[edit_type]'   for your unique situation\n      // config.sort = 'string' // '[sort_type]'   for your unique situation\n      config.template = (obj, common, value, col, ind) => {\n         return (value || \"\").toString().replace(/[<]/g, \"&lt;\");\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"multiple\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-textbox\",\n            settings: {\n               type: \"multiple\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n   }\n};\n","const ABFieldNumberCore = require(\"../../core/dataFields/ABFieldNumberCore\");\n\nlet INIT_EDITOR = false;\n// {bool} INIT_EDITOR\n// Transition code between previous Framework and current.\n// we now need to wait until webix is declared or accessible globally.\n\nmodule.exports = class ABFieldNumber extends ABFieldNumberCore {\n   constructor(values, object) {\n      if (!INIT_EDITOR) {\n         // NOTE: if you need a unique [edit_type] by your returned config.editor above:\n         webix.editors.number = webix.extend(\n            {\n               // TODO : Validate number only\n            },\n            webix.editors.text\n         );\n         INIT_EDITOR = true;\n      }\n      super(values, object);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   // return the grid column header definition for this instance of ABFieldNumber\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"number\"; // [edit_type] simple inline editing.\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"numberbox\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-numberbox\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","/*\n * ABFieldSelectivity\n *\n * An ABFieldSelectivity defines a single unique Field/Column in a ABObject.\n *\n */\n\nconst ABField = require(\"./ABField\");\n\nconst defaultSettings = {\n   allowClear: true,\n   removeOnly: false,\n   readOnly: false,\n   showDropdown: true,\n   placeholder: \"\",\n   multiple: false,\n};\n\nconst ABFieldSelectivityDefaults = {\n   key: \"selectivity\",\n};\n\nmodule.exports = class ABFieldSelectivity extends ABField {\n   constructor(values, object, fieldDefaults = ABFieldSelectivityDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return {\n         key: \"selectivity\",\n         icon: \"bars\",\n         menuName: \"\",\n         description: \"\",\n      };\n   }\n\n   selectivityRender(domNode, settings, App, row) {\n      if (domNode == null) return;\n\n      const cypress = settings.dataCy || \"\";\n      domNode.setAttribute(\"data-cy\", cypress);\n\n      // setting up our specific settings:\n      settings = settings || {};\n      for (const dv in defaultSettings) {\n         if (settings[dv] === null) {\n            settings[dv] = null;\n         } else {\n            settings[dv] = settings[dv] || defaultSettings[dv];\n         }\n      }\n\n      if (\n         settings.multiple &&\n         settings.items &&\n         settings.data &&\n         settings.data.length\n      ) {\n         settings.data.forEach(function (d) {\n            settings.items.map(function (i) {\n               if (i.id == d.id) d.hex = i.hex;\n            });\n         });\n         settings[\"data\"] = this.prepareData(\n            settings[\"data\"],\n            settings.multiple\n         );\n      } else if (settings[\"data\"] == null || settings[\"data\"] == \"\") {\n         settings[\"data\"] = this.prepareData([], settings.multiple);\n      } else {\n         settings[\"data\"] = this.prepareData(\n            settings[\"data\"],\n            settings.multiple\n         );\n      }\n\n      // store the field id so we can look it up on click events later\n      settings[\"field\"] = this.id;\n\n      // Prevent render selectivity duplicate\n      if (domNode.selectivity != null) {\n         // Refresh selectivity settings\n         domNode.selectivity.setOptions(settings);\n\n         return;\n      }\n\n      settings.element = domNode;\n\n      // Render selectivity\n      let selectivityInput;\n      if (settings.multiple) {\n         if (settings.isUsers) {\n            settings.templates = {\n               multipleSelectedItem: function (options) {\n                  return `<span class=\"selectivity-multiple-selected-item ${\n                     options.highlighted ? \" highlighted\" : \"\"\n                  }\"\n\t\t\t\t\t\t\t\tstyle=\"background-color: #eee !important; color: #666 !important; box-shadow: inset 0px 1px 1px #333;\"\n\t\t\t\t\t\t\t\tdata-item-id=\"${options.uuid}\" data-field-id=\"${settings.field}\">\n\t\t\t\t\t\t\t\t<i class=\"fa fa-user\" style=\"color: #666; opacity: 0.6;\"></i> \n                        ${\n                           settings.additionalText\n                              ? settings.additionalText(options)\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t\t${!settings.isLabelHidden ? options.text : \"\"}\n\t\t\t\t\t\t\t\t${\n                           options.removable\n                              ? ` <a class=\"selectivity-multiple-selected-item-remove\" style=\"color: #333;\"><i class=\"fa fa-remove\"></i></a>`\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t</span>`;\n               },\n            };\n         } else {\n            settings.templates = {\n               multipleSelectedItem: function (options) {\n                  return `<span class=\"selectivity-multiple-selected-item ${\n                     options.highlighted ? \" highlighted\" : \"\"\n                  }\"\n\t\t\t\t\t\t\t\tstyle=\"background-color: ${options.hex} !important;\"\n\t\t\t\t\t\t\t\tdata-item-id=\"${options.uuid}\" data-field-id=\"${settings.field}\">\n                        ${\n                           settings.editPage\n                              ? ` <a class=\"selectivity-multiple-selected-item-edit\"><i class=\"fa fa-edit\"></i></a>`\n                              : \"\"\n                        }\n                        ${\n                           settings.additionalText\n                              ? settings.additionalText(options)\n                              : \"\"\n                        }\n                        ${!settings.isLabelHidden ? options.text : \"\"}\n                        ${\n                           options.removable\n                              ? ` <a class=\"selectivity-multiple-selected-item-remove\"><i class=\"fa fa-remove\"></i></a>`\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t</span>`;\n               },\n            };\n         }\n         selectivityInput = new Selectivity.Inputs.Multiple(settings);\n\n         domNode.selectivity = selectivityInput;\n         this.selectivitySetBadge(domNode, App, row);\n      } else {\n         settings.templates = {\n            singleSelectedItem: function (options) {\n               return `<span class=\"selectivity-single-selected-item\" data-item-id=\"${\n                  options.uuid\n               }\" data-field-id=\"${settings.field}\">\n\t\t\t\t\t\t\t${\n                        settings.editPage\n                           ? '<a class=\"selectivity-single-selected-item-edit\"><i class=\"fa fa-edit\"></i></a>'\n                           : \"\"\n                     }\n                     ${\n                        settings.additionalText\n                           ? settings.additionalText(options)\n                           : \"\"\n                     }\n                     ${!settings.isLabelHidden ? options.text : \"\"}\n                     ${\n                        options.removable\n                           ? '<a class=\"selectivity-single-selected-item-remove\"><i class=\"fa fa-remove\"></i></a>'\n                           : \"\"\n                     }\n\t\t\t\t\t\t</span>`;\n            },\n         };\n\n         selectivityInput = new Selectivity.Inputs.Single(settings);\n         domNode.selectivity = selectivityInput;\n      }\n\n      if (settings.editPage) {\n         const trigerEditPageEvent = () => {\n            const instance = this;\n            const editMenus = document.querySelectorAll(\n               \".selectivity-single-selected-item-edit, .selectivity-multiple-selected-item-edit\"\n            );\n            for (let i = 0; i < editMenus.length; i++) {\n               const eMenu = editMenus[i];\n               if (eMenu && !eMenu.__hasClickEvent) {\n                  eMenu.addEventListener(\n                     \"click\",\n                     function (e) {\n                        e.stopPropagation();\n                        e.preventDefault();\n\n                        const parentElm = this.parentElement;\n                        if (!parentElm) return;\n\n                        const rowId = parentElm.getAttribute(\"data-item-id\");\n                        if (!rowId) return;\n\n                        const fieldId = parentElm.getAttribute(\"data-field-id\");\n                        if (!fieldId) return;\n\n                        const thisField = instance.object.fieldByID(fieldId);\n                        if (!thisField) return;\n\n                        thisField.emit(\"editPage\", rowId);\n                     },\n                     true\n                  );\n                  eMenu.__hasClickEvent = true;\n               }\n            }\n         };\n\n         setTimeout(() => {\n            trigerEditPageEvent();\n\n            domNode.addEventListener(\"change\", () => {\n               trigerEditPageEvent();\n            });\n         }, 500);\n      }\n\n      // WORKAROUND : remove caret icon of selectivity\n      if (settings.readOnly) {\n         const caretElems = domNode.getElementsByClassName(\"selectivity-caret\");\n         for (let i = 0; i < caretElems.length; i++) {\n            const caretElm = caretElems[i];\n            if (caretElm) {\n               caretElm.parentNode.removeChild(caretElm);\n            }\n         }\n      }\n\n      // remember our settings values\n      this.selectivitySettings = settings;\n   }\n\n   selectivityGet(domNode) {\n      if (domNode && domNode.selectivity) {\n         if (this.selectivitySettings && this.selectivitySettings.multiple) {\n            // on a multiple select, return an array of results, or empty array\n            return domNode.selectivity.getData() || [];\n         } else {\n            // if a single select, return the object or null\n            return domNode.selectivity.getData() || null;\n         }\n      } else {\n         if (this.selectivitySettings && this.selectivitySettings.multiple)\n            return [];\n         else return null;\n      }\n   }\n\n   selectivitySet(domNode, data) {\n      if (!domNode || !domNode.selectivity) return;\n\n      data = this.prepareData(data, domNode.selectivity.options.multiple);\n\n      if (\n         (Array.isArray(data) && data[0]) || // Check Array\n         (data && data.id)\n      )\n         // Check a object\n         domNode.selectivity.setData(data);\n      else domNode.selectivity.clear();\n   }\n\n   selectivityDestroy(domNode) {\n      if (domNode && domNode.selectivity) {\n         domNode.selectivity.destroy();\n\n         delete domNode.selectivity;\n      }\n   }\n\n   prepareData(data, multiple = true) {\n      if (!data && multiple) {\n         return [];\n      } else if (multiple && data && Array.isArray(data) && data.length == 0) {\n         return [];\n      } else if (!multiple && data && Array.isArray(data) && data.length == 0) {\n         return null;\n      } else if (!data && !multiple) {\n         return null;\n      }\n\n      if (typeof data == \"string\" && data.length > 0) {\n         try {\n            data = JSON.parse(data);\n         } catch (e) {\n            // not JSON parsable, so convert to\n            data = { id: data, text: data };\n         }\n      }\n\n      // if single select, then it should be object\n      if (!multiple && Array.isArray(data)) {\n         data = data[0];\n      } else if (multiple && !Array.isArray(data)) {\n         data = [data];\n      }\n\n      // check to see if id is present on each item\n      if (multiple) {\n         data.forEach((d) => {\n            if (!d.id && d.uuid) {\n               d.id = d.uuid;\n            }\n         });\n      } else {\n         if (!data.id && data.uuid) data.id = data.uuid;\n      }\n\n      if (data == null && multiple) {\n         data = [];\n      }\n\n      return data;\n   }\n\n   selectivitySetBadge(domNode) {\n      if (!domNode.clientHeight) return;\n      const innerHeight = domNode.clientHeight;\n      const outerHeight = domNode.parentElement.clientHeight;\n      if (innerHeight - outerHeight > 5) {\n         let count = 0;\n         let values = [];\n         if (domNode && domNode.selectivity)\n            values = domNode.selectivity.getValue() || [];\n\n         count = values.length;\n         if (count > 1) {\n            const badge = domNode.querySelector(\n               \".webix_badge.selectivityBadge\"\n            );\n            if (badge != null) {\n               badge.innerHTML = count;\n            } else {\n               const anchor = document.createElement(\"A\");\n               anchor.href = \"javascript:void(0);\";\n               // v2: this just updated the $height property for this row\n               // we don't do that anymore:\n               // anchor.addEventListener(\"click\", function () {\n               //    App.actions.onRowResizeAuto(row.id, innerHeight);\n               // });\n               const node = document.createElement(\"SPAN\");\n               const textnode = document.createTextNode(count);\n               node.classList.add(\"webix_badge\", \"selectivityBadge\");\n               node.appendChild(textnode);\n               anchor.appendChild(node);\n               domNode.appendChild(anchor);\n            }\n         }\n      }\n   }\n};\n","const ABFieldStringCore = require(\"../../core/dataFields/ABFieldStringCore\");\n\nmodule.exports = class ABFieldString extends ABFieldStringCore {\n   // constructor(values, object) {\n   //    super(values, object);\n\n   // {\n   //   settings: {\n   // \t  default: 'string',\n   // \t  supportMultilingual: 1/0\n   //   }\n   // }\n\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldString\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\";\n      config.css = \"textCell\";\n      // config.sort   = 'string'\n      config.template = (obj, common, value /* , col, ind */) => {\n         // if this isn't part of a group header display the default format\n         if (!obj.$group) {\n            return (value || \"\").toString().replace(/[<]/g, \"&lt;\");\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            if (this.settings.default.indexOf(\"{uuid}\") >= 0) {\n               values[this.columnName] = this.AB.uuid();\n            } else {\n               values[this.columnName] = this.settings.default;\n            }\n         }\n      }\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   // formComponentMobile() {\n   //    // NOTE: what is being returned here needs to mimic an ABView CLASS.\n   //    // primarily the .common() and .newInstance() methods.\n   //    const formComponentSetting = super.formComponent();\n\n   //    // .common() is used to create the display in the list\n   //    formComponentSetting.common = () => {\n   //       return {\n   //          key: \"mobile-textbox\",\n   //          settings: {\n   //             type: \"single\",\n   //          },\n   //       };\n   //    };\n\n   //    return formComponentSetting;\n   // }\n\n   /**\n    * @method formComponentMobile\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n   }\n};\n","const ABFieldTextFormulaCore = require(\"../../core/dataFields/ABFieldTextFormulaCore\");\n\nmodule.exports = class ABFieldTextFormula extends ABFieldTextFormulaCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldTextFormula\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(/* row, App, node, options */) {}\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // not support in the form widget\n      return null;\n   }\n\n   formComponentMobile() {\n      return null;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldTreeCore = require(\"../../core/dataFields/ABFieldTreeCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldTree extends ABFieldTreeCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   idCustomContainer(obj) {\n      return `${this.columnName.replace(/ /g, \"_\")}-${obj.id}-tree`;\n   }\n\n   // return the grid column header definition for this instance of ABFieldTree\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n\n      let formClass = \"\";\n      let placeHolder = \"\";\n      if (options.isForm) {\n         formClass = \" form-entry\";\n         placeHolder =\n            \"<span style='color: #CCC; padding: 0 5px;'>\" +\n            L(\"Select items\") +\n            \"</span>\";\n      }\n\n      const width = options.width;\n\n      config.template = (obj) => {\n         if (obj.$group) return obj[field.columnName];\n\n         const branches = [];\n         let selectOptions = this.AB.cloneDeep(field.settings.options);\n         selectOptions = new webix.TreeCollection({\n            data: selectOptions,\n         });\n\n         let values = obj;\n         if (obj[field.columnName] != null) {\n            values = obj[field.columnName];\n         }\n\n         selectOptions.data.each(function (obj) {\n            if (\n               typeof values.indexOf != \"undefined\" &&\n               values.indexOf(obj.id) != -1\n            ) {\n               let html = \"\";\n\n               let rootid = obj.id;\n               while (this.getParentId(rootid)) {\n                  selectOptions.data.each(function (par) {\n                     if (selectOptions.data.getParentId(rootid) == par.id) {\n                        html = par.text + \": \" + html;\n                     }\n                  });\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n         let nodeHTML = \"\";\n         nodeHTML += \"<div class='list-data-values'>\";\n         if (branches.length == 0) {\n            nodeHTML += placeHolder;\n         } else {\n            branches.forEach(function (item) {\n               nodeHTML +=\n                  '<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color:' +\n                  myHex +\n                  ' !important;\">' +\n                  item +\n                  \"</span>\";\n            });\n         }\n         nodeHTML += \"</div>\";\n\n         // field.setBadge(node, App, row);\n\n         if (width) {\n            return (\n               '<div style=\"margin-left: ' +\n               width +\n               'px;\" class=\"list-data-values' +\n               formClass +\n               '\">' +\n               nodeHTML +\n               \"</div>\"\n            );\n         } else {\n            return (\n               '<div class=\"list-data-values' +\n               formClass +\n               '\">' +\n               nodeHTML +\n               \"</div>\"\n            );\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      const field = this;\n\n      if (options.isForm) {\n         if (!row || row.length == 0) {\n            node.innerHTML =\n               \"<div class='list-data-values form-entry'><span style='color: #CCC; padding: 0 5px;'>\" +\n               L(\"Select items\") +\n               \"</span></div>\";\n            return;\n         }\n\n         const branches = [];\n         options = this.AB.cloneDeep(field.settings.options);\n         options = new webix.TreeCollection({\n            data: options,\n         });\n\n         let values = row;\n         if (row[field.columnName] != null) {\n            values = row[field.columnName];\n         }\n\n         options.data.each(function (obj) {\n            if (\n               typeof values.indexOf != \"undefined\" &&\n               values.indexOf(obj.id) != -1\n            ) {\n               let html = \"\";\n\n               let rootid = obj.id;\n               while (this.getParentId(rootid)) {\n                  options.data.each(function (par) {\n                     if (options.data.getParentId(rootid) == par.id) {\n                        html = par.text + \": \" + html;\n                     }\n                  });\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n         let nodeHTML = \"\";\n         nodeHTML += \"<div class='list-data-values form-entry'>\";\n         branches.forEach(function (item) {\n            nodeHTML +=\n               '<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color:' +\n               myHex +\n               ' !important;\">' +\n               item +\n               \"</span>\";\n         });\n         nodeHTML += \"</div>\";\n\n         node.innerHTML = nodeHTML;\n      }\n\n      field.setBadge(node, App, row);\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node, component) {\n      const idBase = App.unique(this.idCustomContainer(row));\n      const idPopup = `${idBase}-popup`;\n      const idTree = `${idBase}-tree`;\n      const view = $$(node);\n      const field = this;\n      const parentComponent = component;\n      let values = {};\n      let firstRender = true;\n\n      function getValues(field, row) {\n         let values = {};\n         if (\n            typeof field != \"undefined\" &&\n            typeof field.columnName != \"undefined\" &&\n            typeof row[field.columnName] != \"undefined\"\n         ) {\n            values = row[field.columnName];\n         }\n         return values;\n      }\n\n      function populateTree(field, vals) {\n         values = getValues(field, vals);\n\n         const $Tree = $$(idTree);\n         $Tree.blockEvent(); // prevents endless loop\n\n         const options = field.AB.cloneDeep(field.settings.options);\n         $Tree.clearAll();\n         $Tree.parse(options);\n         $Tree.refresh();\n         $Tree.uncheckAll();\n         $Tree.openAll();\n\n         if (values != null && values.length) {\n            values.forEach(function (id) {\n               if ($Tree.exists(id)) {\n                  $Tree.checkItem(id);\n                  const dom = $Tree.getItemNode(id);\n                  dom.classList.add(\"selected\");\n               }\n            });\n         }\n         $Tree.unblockEvent();\n      }\n\n      if ($$(idPopup)) {\n         $$(idPopup).show();\n         populateTree(this, row);\n      } else {\n         webix\n            .ui({\n               id: idPopup,\n               view: \"popup\",\n               width: 500,\n               height: 400,\n               on: {\n                  onShow: () => {\n                     if (firstRender == true) populateTree(this, row);\n\n                     firstRender = false;\n                  },\n               },\n               body: {\n                  id: idTree,\n                  view: \"tree\",\n                  css: \"ab-data-tree\",\n                  template: function (obj, common) {\n                     return (\n                        \"<label>\" +\n                        common.checkbox(obj, common) +\n                        \"&nbsp;\" +\n                        obj.text +\n                        \"</label>\"\n                     );\n                  },\n                  on: {\n                     onItemCheck: async function (id, value, event) {\n                        const dom = this.getItemNode(id);\n                        const tree = this;\n                        if (value == true) {\n                           dom.classList.add(\"selected\");\n                        } else {\n                           dom.classList.remove(\"selected\");\n                        }\n                        // works for the same-level children only\n                        // except root items\n                        if (this.getParentId(id)) {\n                           tree.blockEvent(); // prevents endless loop\n\n                           let rootid = id;\n                           while (this.getParentId(rootid)) {\n                              rootid = this.getParentId(rootid);\n                              if (rootid != id) tree.uncheckItem(rootid);\n                           }\n\n                           this.data.eachSubItem(rootid, function (item) {\n                              if (item.id != id) tree.uncheckItem(item.id);\n                           });\n\n                           tree.unblockEvent();\n                        } else {\n                           tree.blockEvent(); // prevents endless loop\n                           this.data.eachSubItem(id, function (obj) {\n                              if (obj.id != id) tree.uncheckItem(obj.id);\n                           });\n                           tree.unblockEvent();\n                        }\n                        const values = {};\n                        values[field.columnName] = $$(idTree).getChecked();\n\n                        if (row.id) {\n                           // pass null because it could not put empty array in REST api\n                           if (values[field.columnName].length == 0)\n                              values[field.columnName] = \"\";\n\n                           try {\n                              await field.object.model().update(row.id, values);\n\n                              // update the client side data object as well so other data changes won't cause this save to be reverted\n                              if (view && view.updateItem) {\n                                 view.updateItem(row.id, values);\n                              }\n                           } catch (err) {\n                              node.classList.add(\"webix_invalid\");\n                              node.classList.add(\"webix_invalid_cell\");\n\n                              this.AB.notify.developer(err, {\n                                 message:\n                                    \"ABFieldTree:onItemClick(): Error updating our entry.\",\n                                 row: row,\n                                 values: values,\n                              });\n                           }\n                        } else {\n                           const rowData = {};\n                           rowData[field.columnName] = $$(idTree).getChecked();\n\n                           field.setValue($$(parentComponent.ui.id), rowData);\n                        }\n                     },\n                  },\n               },\n            })\n            .show(node, {\n               x: -7,\n            });\n      }\n      return false;\n   }\n\n   setBadge(domNode, row) {\n      const field = this;\n      domNode = domNode.querySelector(\".list-data-values\");\n      const innerHeight = domNode.scrollHeight;\n      const outerHeight = domNode.parentElement.clientHeight;\n      if (innerHeight - outerHeight > 5) {\n         let count = 0;\n         if (row[field.columnName] && row[field.columnName].length)\n            count = row[field.columnName].length;\n         else count = 0;\n\n         if (count > 1) {\n            const badge = domNode.querySelector(\n               \".webix_badge.selectivityBadge\"\n            );\n            if (badge != null) {\n               badge.innerHTML = count;\n            } else {\n               const anchor = document.createElement(\"A\");\n               anchor.href = \"javascript:void(0);\";\n               anchor.addEventListener(\"click\", function (event) {\n                  // v2: this was just saving the new height to the\n                  // field properties. We don't do that anymore:\n                  // App.actions.onRowResizeAuto(row.id, innerHeight);\n                  event.stopPropagation();\n               });\n               const node = document.createElement(\"SPAN\");\n               const textnode = document.createTextNode(count);\n               node.classList.add(\"webix_badge\", \"selectivityBadge\");\n               node.appendChild(textnode);\n               anchor.appendChild(node);\n               domNode.appendChild(anchor);\n            }\n         }\n      }\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"formtree\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtree\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   getValue(item, rowData) {\n      let values = {};\n      values = item.getValues();\n      return values;\n   }\n\n   setValue(item, rowData) {\n      if (!item) return false;\n\n      const val = rowData[this.columnName] || [];\n\n      item.setValues(val);\n      // get dom\n      const dom = item.$view.querySelector(\".list-data-values\");\n\n      if (!dom) return false;\n\n      // set value to selectivity\n      this.customDisplay(val, this.App, dom, {\n         editable: true,\n         isForm: true,\n      });\n\n      setTimeout(function () {\n         let height = 33;\n         if (dom.scrollHeight > 33) {\n            height = dom.scrollHeight;\n         }\n         item.config.height = height + 5;\n         item.resize();\n      }, 200);\n   }\n};\n","const ABFieldConnectCore = require(\"../../core/dataFields/ABFieldConnectCore\");\nconst ABFieldUserCore = require(\"../../core/dataFields/ABFieldUserCore\");\n\nmodule.exports = class ABFieldUser extends ABFieldUserCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   async save() {\n      // Add new\n      if (this.id == null) {\n         const SiteUser = this.AB.objectUser();\n         const Defaults = ABFieldUserCore.defaults();\n\n         this.settings.linkObject = SiteUser.id;\n         this.settings.isCustomFK = 1;\n\n         if (this.settings.isMultiple) {\n            this.settings.indexField2 = Defaults.USERNAME_FIELD_ID;\n            this.settings.linkType = \"many\";\n            this.settings.linkViaType = \"many\";\n            this.settings.isSource = 1;\n         } else {\n            this.settings.indexField = Defaults.USERNAME_FIELD_ID;\n            this.settings.linkType = \"one\";\n            this.settings.linkViaType = \"many\";\n            this.settings.isSource = 1;\n         }\n\n         // TODO: .fieldCustomNew() for saving \"local\" changes.\n         // NOTE: The Object adding this Field sees it's data as a ABFieldUser\n         //       connection.\n         //       However, the SiteUser will see the data as a ABFieldConnect\n         //       connection\n         const linkCol = SiteUser.fieldNew({\n            key: ABFieldConnectCore.defaults().key,\n            columnName: `${this.object.name}_${this.label}`,\n            label: this.object.label,\n            settings: {\n               showIcon: this.settings.showIcon,\n               linkObject: this.object.id,\n               linkType: this.settings.linkViaType,\n               linkViaType: this.settings.linkType,\n               isCustomFK: this.settings.isCustomFK,\n               indexField: this.settings.indexField,\n               indexField2: this.settings.indexField2,\n               isSource: 0,\n            },\n         });\n\n         // // Create definitions of the connected fields\n         // // NOTE: skip directly to the ABMLClass.save() to avoid the\n         // // migrations caused during the ABField.save() operations.\n         // await ABFieldUserCore.prototype.save.call(this);\n\n         // linkCol.settings.linkColumn = this.id;\n         // await ABFieldUserCore.prototype.save.call(linkCol);\n\n         // // Update the id value of linked field to connect together\n         // this.settings.linkColumn = linkCol.id;\n         // await ABFieldUserCore.prototype.save.call(this);\n\n         let newDef = await this.toDefinition().save();\n         this.id = newDef.id;\n\n         linkCol.settings.linkColumn = this.id;\n         let newLinkDef = await linkCol.toDefinition().save();\n         linkCol.id = newLinkDef.id;\n\n         this.settings.linkColumn = linkCol.id;\n         await this.toDefinition().save();\n\n         // Add fields to Objects\n         await this.object.fieldAdd(this);\n\n         await SiteUser.fieldAdd(linkCol);\n\n         // Create column to DB\n         await this.migrateCreate();\n\n         await linkCol.migrateCreate();\n\n         return this;\n      } else {\n         return super.save();\n      }\n   }\n\n   // return the grid column header definition for this instance of ABFieldUser\n\n   columnHeader(options) {\n      // debugger;\n      options = this.setDisplayOptions(options);\n      return super.columnHeader(options);\n   }\n\n   /**\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   // customDisplay(row, App, node, options = {}) {\n   //    debugger;\n   //    options = this.setDisplayOptions(options);\n   //\n   //    return super.customDisplay(row, App, node, options);\n   // }\n\n   setDisplayOptions(options) {\n      options = options || {};\n      options.editable =\n         this.settings.editable != null ? this.settings.editable : true;\n\n      options.isLabelHidden =\n         this.settings.isShowUsername != null\n            ? !this.settings.isShowUsername\n            : false;\n\n      options.additionalText = (opt) => {\n         if (!this.settings.isShowProfileImage) return \"\";\n\n         if (opt.image_id)\n            return `<img src='/file/${opt.image_id}' style='border-radius:100%; object-fit: cover; margin: 0 5px 0 -10px;' width='28' height='28' />`;\n         else return '<i style=\"opacity: 0.6;\" class=\"fa fa-user\"></i> ';\n      };\n\n      return options;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (this.settings.isCurrentUser) {\n         if (this.settings.isMultiple) {\n            values[this.columnName] = [\n               {\n                  id: this.AB.Account.username(),\n                  text: this.AB.Account.username(),\n               },\n            ];\n         } else {\n            values[this.columnName] = this.AB.Account.username();\n         }\n      }\n   }\n\n   getValue(item) {\n      let val = super.getValue(item);\n\n      if (val) {\n         if (typeof val == \"string\")\n            val = val.replace(/ab-current-user/g, this.AB.Account.username());\n         else if (Array.isArray(val))\n            val = val.map((v) =>\n               (v?.username ?? v?.uuid ?? v?.id ?? v)?.replace(\n                  /ab-current-user/g,\n                  this.AB.Account.username()\n               )\n            );\n      }\n\n      return val;\n   }\n\n   setValue(item, rowData) {\n      let val = rowData[this.columnName];\n      if (val === \"\") {\n         // this means this value isn't set.\n         // can we remove this from the data?\n         delete rowData[this.columnName];\n         super.setValue(item, rowData);\n         return;\n      }\n\n      if (this.linkType() == \"many\") {\n         // val should be an array.\n         if (!Array.isArray(val)) {\n            val = [val];\n         }\n         // if any of those contain \"ab-current-user\" replace it:\n         val = val.map((v) =>\n            v == \"ab-current-user\" ? this.AB.Account.username() : v\n         );\n      } else {\n         // val is a single entry string\n         // Select \"[Current user]\" to update\n         if (val == \"ab-current-user\") val = this.AB.Account.username();\n      }\n\n      rowData[this.columnName] = val;\n\n      super.setValue(item, rowData);\n   }\n\n   getUsers() {\n      return this.AB.Account.userList().map((u) => {\n         const result = {\n            id: u.username,\n            image: u.image_id,\n         };\n\n         if (this.settings.isMultiple) {\n            result.text = u.username;\n         } else {\n            result.value = u.username;\n         }\n\n         return result;\n      });\n   }\n\n   getOptions(...params) {\n      return super.getOptions(...params).then((options) => {\n         // in a ABFieldUser, our options.id elements need to have\n         // the username, not the .uuid:\n         (options || []).forEach((o) => {\n            if (o.username) {\n               o.id = o.username;\n            }\n         });\n\n         return options;\n      });\n   }\n\n   pullRelationValues(row) {\n      let values = super.pullRelationValues(row);\n\n      // remember, our .id == .username\n      if (Array.isArray(values)) {\n         // prevent any null or undefined:\n         values = values.filter((v) => v);\n         values = values.map((v) => {\n            v.id = v.username || v.id;\n            return v;\n         });\n      } else {\n         if (values) {\n            values.id = values.username || values.id;\n         }\n      }\n\n      return values;\n   }\n\n   pullRecordRelationValues(record) {\n      let data = super.pullRecordRelationValues(record);\n      if (Array.isArray(data)) {\n         data = data.map((d) => {\n            d.id = d.username ?? d.id;\n            return d;\n         });\n      } else {\n         data.id = data.username || data.id;\n      }\n\n      return data;\n   }\n};\n","const ABMobilePageCore = require(\"../../core/mobile/ABMobilePageCore\");\n\nmodule.exports = class ABMobilePage extends ABMobilePageCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      // check to see if I've been updated, if so, alert my parent:\n      this.__Handler_ABDEF_UPDATED = (def) => {\n         if (def.id == this.id) {\n            this.emit(\"definition.updated\", this);\n            this.AB.off(\"ab.abdefinition.update\", this.__Handler_ABDEF_UPDATED);\n         }\n      };\n      this.AB.on(\"ab.abdefinition.update\", this.__Handler_ABDEF_UPDATED);\n\n      // check to see if any of my child pages have been updated and\n      // update my defintion of them:\n      this.__Handler_DEF_UPDATED = (page) => {\n         // create a new Field with the updated def\n         var def = this.AB.definitionByID(page.id);\n         if (!def) return;\n\n         var newPage = this.pageNew(def);\n\n         // we want to keep the same pageID order:\n         var newPages = [];\n         this.pages().forEach((pg) => {\n            if (pg.id === page.id) {\n               newPages.push(newPage);\n               return;\n            }\n            newPages.push(pg);\n         });\n\n         this._pages = newPages;\n\n         page.off(\"definition.updated\", this.__Handler_DEF_UPDATED);\n      };\n      this.pages().forEach((p) => {\n         p.on(\"definition.updated\", this.__Handler_DEF_UPDATED);\n      });\n   }\n\n   /**\n    * @method refreshInstance()\n    * This returns a NEW instance of a ABMobilePage based upon the latest\n    * version of it's Definition.  It also resolves any current listeners\n    * this copy currently has and prepare this to discard itself.\n    */\n   refreshInstance(parent) {\n      // create a new Field with the updated def\n      var def = this.AB.definitionByID(this.id);\n      if (!def) return;\n\n      var newPage = (parent ?? this.parent)?.pageNew(def);\n\n      try {\n         // detatch ourself from other emitters:\n         this.AB.off(\"ab.abdefinition.update\", this.__Handler_ABDEF_UPDATED);\n         this.pages().forEach((pg) => {\n            pg.removeAllListeners(\"definition.updated\");\n         });\n      } catch (e) {\n         // debugger;\n         console.error(e);\n      }\n\n      return newPage;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let allViews = this.views();\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no widgets\");\n      }\n      (this.pages() || []).forEach((p) => {\n         p.warningsEval();\n      });\n   }\n};\n","const ABMobileViewCore = require(\"../../core/mobile/ABMobileViewCore.js\");\n\nmodule.exports = class ABMobileView extends ABMobileViewCore {\n   // constructor(attributes, application, parent) {\n   //    super(attributes, application, parent);\n   // }\n\n   /**\n\n\n   /*\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      // views not allowed to drop onto this View:\n      var viewsToIgnore = [\n         \"mobile-view\",\n         \"mobile-page\",\n         // \"formpanel\",\n         // \"viewcontainer\",\n         // // not allowed Detail's widgets\n         // \"detailcheckbox\",\n         // \"detailcustom\",\n         // \"detailconnect\",\n         // \"detailimage\",\n         // \"detailselectivity\",\n         // \"detailtext\",\n         // \"detailtree\",\n         // // not allowed Form's widgets\n         // \"button\",\n         // \"checkbox\",\n         // \"connect\",\n         // \"datepicker\",\n         // \"fieldcustom\",\n         // \"textbox\",\n         // \"numberbox\",\n         // \"selectsingle\",\n         // \"selectmultiple\",\n         // \"formtree\",\n         // \"fieldreadonly\",\n         // // not allowed Chart's Widgets\n         // \"pie\",\n         // \"bar\",\n         // \"line\",\n         // \"area\",\n         // // not allowed Report page\n         // \"report\",\n         // \"reportPage\",\n         // \"reportPanel\",\n      ];\n\n      var allComponents = this.application.viewAll();\n      var allowedComponents = allComponents.filter((c) => {\n         return viewsToIgnore.indexOf(c.common().key) == -1;\n      });\n\n      return allowedComponents;\n   }\n\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our sub views\n      var allWarnings = super.warningsAll();\n      this.views().forEach((v) => {\n         allWarnings = allWarnings.concat(v.warningsAll());\n      });\n\n      (this.pages?.() || []).forEach((p) => {\n         allWarnings = allWarnings.concat(p.warningsAll());\n      });\n\n      return allWarnings.filter((w) => w);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      (this.__missingViews || []).forEach((id) => {\n         this.warningsMessage(`references unknown View[${id}]`);\n      });\n\n      allViews.forEach((v) => {\n         v.warningsEval();\n      });\n\n      // if a datacollection is specified, verify it can be accessed.\n      if (this.settings.dataviewID) {\n         let dc = this.datacollections || this.datacollection;\n         if (!dc) {\n            this.warningsMessage(\n               `references unknown dataviewID[${this.settings.dataviewID}]`\n            );\n         }\n      }\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `${this.key}[${this.name}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABMobileViewCustomCore = require(\"../../core/mobile/ABMobileViewCustomCore\");\n\nmodule.exports = class ABMobileViewCustom extends ABMobileViewCustomCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n   warningsEval() {\n      super.warningsEval();\n\n      // Add in here any missing or unfindable setting reference\n      // like datacollection ...\n   }\n};\n","const ABMobileViewFormCore = require(\"../../core/mobile/ABMobileViewFormCore\");\n\nconst ABMobileViewFormButton = require(\"./ABMobileViewFormButton\");\n\nmodule.exports = class ABMobileViewForm extends ABMobileViewFormCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method refreshDefaultButton()\n    * On the ABDesigner once a Form Field is added/removed from a form, we want\n    * to make sure the default Form Button is pushed down to the bottom of the\n    * list of form Items.\n    * @param {obj} ids\n    *        The id hash of the webix widgets that show the fields.\n    * @return {ABMobileViewFormButton}\n    */\n   refreshDefaultButton(ids) {\n      // If default button is not exists, then skip this\n      let defaultButton = this.views(\n         (v) => v instanceof ABMobileViewFormButton && v.settings.isDefault\n      )[0];\n\n      // Add a default button\n      if (defaultButton == null) {\n         defaultButton = ABMobileViewFormButton.newInstance(\n            this.application,\n            this\n         );\n         defaultButton.settings.isDefault = true;\n      }\n      // Remove default button from array, then we will add it to be the last item later (.push)\n      else {\n         this._views = this.views((v) => v.id != defaultButton.id);\n      }\n\n      // Calculate position Y of the default button\n      let yList = this.views().map((v) => (v.position.y || 0) + 1);\n      yList.push(this._views.length || 0);\n      yList.push($$(ids.fields).length || 0);\n      let posY = Math.max(...yList);\n\n      // Update to be the last item\n      defaultButton.position.y = posY;\n\n      // Keep the default button is always the last item of array\n      this._views.push(defaultButton);\n\n      return defaultButton;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.settings.dataviewID) {\n         this.warningsMessage(`does not have a DataCollection assigned.`);\n      } else {\n         let DC = this.datacollection;\n         if (!DC) {\n            this.warningsMessage(\n               `references an unknown DataCollection [${this.settings.dataviewID}].`\n            );\n         }\n      }\n   }\n};\n","const ABMobileViewFormButtonCore = require(\"../../core/mobile/ABMobileViewFormButtonCore\");\n\nmodule.exports = class ABMobileViewFormButton extends (\n   ABMobileViewFormButtonCore\n) {};\n","const ABMobileViewFormCheckboxCore = require(\"../../core/mobile/ABMobileViewFormCheckboxCore\");\n\nmodule.exports = class ABMobileViewFormCheckbox extends (\n   ABMobileViewFormCheckboxCore\n) {};\n","const ABMobileViewFormConnectCore = require(\"../../core/mobile/ABMobileViewFormConnectCore\");\n\n// const ABViewPropertyAddPage =\n//    require(\"./viewProperties/ABViewPropertyAddPage\").default;\n// const ABViewPropertyEditPage =\n//    require(\"./viewProperties/ABViewPropertyEditPage\").default;\n\n// const ABViewFormConnectPropertyComponentDefaults =\n//    ABMobileViewFormConnectCore.defaultValues();\n\n// const ABPopupSort = require(\"../../../ABDesigner/ab_work_object_workspace_popupSortFields\");\n\n// let FilterComponent = null;\n// let SortComponent = null;\n\nmodule.exports = class ABMobileViewFormConnect extends (\n   ABMobileViewFormConnectCore\n) {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      // Set filter value\n      this.__filterComponent = this.AB.filterComplexNew(\n         `${this.id}__filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.__filterComponent.fieldsLoad(\n         this.datasource ? this.datasource.fields() : [],\n         this.datasource ? this.datasource : null\n      );\n\n      this.__filterComponent.setValue(\n         this.settings.filterConditions\n         /* ??\n            ABViewFormConnectPropertyComponentDefaults.filterConditions\n         */\n      );\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // Does this do anything here?\n      // this.addPageTool.fromSettings(this.settings);\n      // this.editPageTool.fromSettings(this.settings);\n   }\n\n   // static get addPageProperty() {\n   //    return ABViewPropertyAddPage.propertyComponent(this.App, this.idBase);\n   // }\n\n   // static get editPageProperty() {\n   //    return ABViewPropertyEditPage.propertyComponent(this.App, this.idBase);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   // component() {\n   //    return new ABViewFormConnectComponent(this);\n   // }\n\n   // get addPageTool() {\n   //    if (this.__addPageTool == null)\n   //       this.__addPageTool = new ABViewPropertyAddPage();\n\n   //    return this.__addPageTool;\n   // }\n\n   // get editPageTool() {\n   //    if (this.__editPageTool == null)\n   //       this.__editPageTool = new ABViewPropertyEditPage();\n\n   //    return this.__editPageTool;\n   // }\n};\n","const ABMobileViewFormCustomCore = require(\"../../core/mobile/ABMobileViewFormCustomCore\");\n\nmodule.exports = class ABMobileViewFormCustom extends (\n   ABMobileViewFormCustomCore\n) {};\n","const ABMobileViewFormDateCore = require(\"../../core/mobile/ABMobileViewFormDateCore\");\n\nmodule.exports = class ABMobileViewFormDate extends ABMobileViewFormDateCore {};\n","const ABMobileViewFormDatetimeCore = require(\"../../core/mobile/ABMobileViewFormDatetimeCore\");\n\nmodule.exports = class ABMobileViewFormDatetime extends (\n   ABMobileViewFormDatetimeCore\n) {};\n","const ABMobileViewFormEmailCore = require(\"../../core/mobile/ABMobileViewFormEmailCore\");\n\nmodule.exports = class ABMobileViewFormEmail extends (\n   ABMobileViewFormEmailCore\n) {};\n","const ABMobileViewFormFileCore = require(\"../../core/mobile/ABMobileViewFormFileCore\");\n\nmodule.exports = class ABMobileViewFormFile extends ABMobileViewFormFileCore {};\n","const ABMobileViewFormFormulaCore = require(\"../../core/mobile/ABMobileViewFormFormulaCore\");\n\nmodule.exports = class ABMobileViewFormFormula extends (\n   ABMobileViewFormFormulaCore\n) {};\n","const ABMobileViewFormImageCore = require(\"../../core/mobile/ABMobileViewFormImageCore\");\n\nmodule.exports = class ABMobileViewFormImage extends (\n   ABMobileViewFormImageCore\n) {};\n","const ABMobileViewFormItemCore = require(\"../../core/mobile/ABMobileViewFormItemCore\");\n\nmodule.exports = class ABMobileViewFormItem extends ABMobileViewFormItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n   // warningsEval() {\n   //    super.warningsEval();\n   //    this.warningsMessage(`FormItem Test Warning.`);\n   // }\n};\n","const ABMobileViewFormNumberCore = require(\"../../core/mobile/ABMobileViewFormNumberCore\");\n\nmodule.exports = class ABMobileViewFormNumber extends (\n   ABMobileViewFormNumberCore\n) {};\n","const ABMobileViewFormReadonlyCore = require(\"../../core/mobile/ABMobileViewFormReadonlyCore\");\n\nmodule.exports = class ABMobileViewFormReadonly extends (\n   ABMobileViewFormReadonlyCore\n) {};\n","const ABMobileViewFormSelectMultipleCore = require(\"../../core/mobile/ABMobileViewFormSelectMultipleCore\");\n\nmodule.exports = class ABMobileViewFormSelectMultiple extends (\n   ABMobileViewFormSelectMultipleCore\n) {};\n","const ABMobileViewFormSelectSingleCore = require(\"../../core/mobile/ABMobileViewFormSelectSingleCore\");\n\nmodule.exports = class ABMobileViewFormSelectSingle extends (\n   ABMobileViewFormSelectSingleCore\n) {};\n","const ABMobileViewFormTextboxCore = require(\"../../core/mobile/ABMobileViewFormTextboxCore\");\n\nmodule.exports = class ABMobileViewFormTextbox extends (\n   ABMobileViewFormTextboxCore\n) {\n   // warningsEval() {\n   //    super.warningsEval();\n   //    this.warningsMessage(`${k} references an unknown Page.`);\n   // }\n};\n","const ABMobileViewLabelCore = require(\"../../core/mobile/ABMobileViewLabelCore\");\n// const ABViewLabelComponent = require(\"./viewComponent/ABViewLabelComponent\");\n\nmodule.exports = class ABMobileViewLabel extends ABMobileViewLabelCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   // component() {\n\n   //    // return new ABViewLabelComponent(this);\n   // }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.text) {\n         this.warningsMessage(\"has no text value set.\");\n      }\n   }\n};\n","const ABMobileViewListCore = require(\"../../core/mobile/ABMobileViewListCore\");\n\nmodule.exports = class ABMobileViewList extends ABMobileViewListCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n   warningsEval() {\n      super.warningsEval();\n\n      [\"linkPageAdd\", \"linkPageDetail\"].forEach((k) => {\n         if (this.settings[k]) {\n            let page = this.application.pageByID(this.settings[k], true);\n            if (!page) {\n               this.warningsMessage(`${k} references an unknown Page.`);\n            }\n         }\n      });\n   }\n};\n","const ABMobileViewTimelineCore = require(\"../../core/mobile/ABMobileViewTimelineCore\");\n\nmodule.exports = class ABMobileViewTimeline extends ABMobileViewTimelineCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n   warningsEval() {\n      super.warningsEval();\n\n      [\"linkPageAdd\", \"linkPageDetail\"].forEach((k) => {\n         if (this.settings[k]) {\n            let page = this.application.pageByID(this.settings[k], true);\n            if (!page) {\n               this.warningsMessage(`${k} references an unknown Page.`);\n            }\n         }\n      });\n   }\n};\n","/**\n * ABProcessLane\n * manages a lane in a Process Diagram.\n *\n * Lanes manage users in the system, and provide a way to lookup a SiteUser.\n */\nvar ABProcessLaneCore = require(\"../../core/process/ABProcessLaneCore\");\n\nmodule.exports = class ABProcessLane extends ABProcessLaneCore {\n   // constructor(attributes, process, application) {\n   //    super(attributes, process, application);\n   // }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   transferParticipantWhereToMe(id) {\n      var myParticipant = this.process.elementForDiagramID(id);\n      if (myParticipant) {\n         // if I haven't already set my where clause, and my Participant\n         // has one, then take it:\n         if (!this.stashed && myParticipant.stashed) {\n            var copyParams = [\n               \"stashed\",\n               \"useRole\",\n               \"role\",\n               \"useAccount\",\n               \"account\",\n            ];\n            copyParams.forEach((p) => {\n               var swap = this[p];\n               this[p] = myParticipant[p];\n               myParticipant[p] = swap; // ?? do this ??\n            });\n         }\n      }\n   }\n\n   /**\n    * fromElement()\n    * initialize this Lane's values from the given BPMN:Lane\n    * @param {BPMNParticipant}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n\n      // on creation, if I have child objects, then move the .where definition\n      // from my parent Participant to ME\n      if (element.children && element.children.length > 0) {\n         if (element.parent && element.parent.type == \"bpmn:Participant\") {\n            this.transferParticipantWhereToMe(element.parent.id);\n         }\n      } else {\n         // this info might just reside in the .parent.children[]\n         if (\n            element.parent &&\n            element.parent.children &&\n            element.parent.children.length > 0\n         ) {\n            element.parent.children.forEach((child) => {\n               if (child.type != \"bpmn:Lane\") {\n                  // if child has lanes\n                  if (\n                     child.businessObject.lanes &&\n                     child.businessObject.lanes.length > 0\n                  ) {\n                     // if lane is me\n                     var myLane = child.businessObject.lanes.find((l) => {\n                        return l.id == this.diagramID;\n                     });\n                     if (myLane) {\n                        this.transferParticipantWhereToMe(element.parent.id);\n\n                        // tell child I'm it's lane:\n                        var objChild = this.process.elementForDiagramID(\n                           child.id\n                        );\n                        if (objChild) {\n                           objChild.setLane(this);\n                        }\n                     }\n                  }\n               }\n            });\n         }\n      }\n\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Lane with information that was relevant\n    * from the provided BPMN:Lane\n    * @param {BPMNParticipant}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Participant_185ljkg\",\n                \"width\": 958,\n                \"height\": 240,\n                \"type\": \"bpmn:Participant\",\n                \"x\": -810,\n                \"y\": -2010,\n                \"order\": {\n                    \"level\": -2\n                },\n               \"businessObject\": {\n                    \"$type\": \"bpmn:Participant\",\n                    \"id\": \"Participant_185ljkg\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": -810,\n                            \"y\": -2010,\n                            \"width\": 958,\n                            \"height\": 240\n                        },\n                        \"id\": \"Participant_185ljkg_di\",\n                        \"isHorizontal\": true\n                    },\n                    \"processRef\": {\n                        \"$type\": \"bpmn:Process\",\n                        \"id\": \"Process_0x3sul5\"\n                    }\n                }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      // if I picked up a new task, inform it I am it's lane:\n   }\n};\n","/**\n * ABProcessParticipant\n * manages the participant lanes in a Process Diagram.\n *\n * Participants manage users in the system (when there are no lanes defined)\n * and provide a way to lookup a SiteUser.\n */\nvar ABProcessParticipantCore = require(\"../../core/process/ABProcessParticipantCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessParticipant extends ABProcessParticipantCore {\n   // constructor(attributes, process, AB) {\n   //    super(attributes, process, AB);\n   // }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   /**\n    * fromElement()\n    * initialize this Participant's values from the given BPMN:Participant\n    * @param {BPMNParticipant}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Participant with information that was relevant\n    * from the provided BPMN:Participant\n    * @param {BPMNParticipant}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Participant_185ljkg\",\n                \"width\": 958,\n                \"height\": 240,\n                \"type\": \"bpmn:Participant\",\n                \"x\": -810,\n                \"y\": -2010,\n                \"order\": {\n                    \"level\": -2\n                },\n               \"businessObject\": {\n                    \"$type\": \"bpmn:Participant\",\n                    \"id\": \"Participant_185ljkg\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": -810,\n                            \"y\": -2010,\n                            \"width\": 958,\n                            \"height\": 240\n                        },\n                        \"id\": \"Participant_185ljkg_di\",\n                        \"isHorizontal\": true\n                    },\n                    \"processRef\": {\n                        \"$type\": \"bpmn:Process\",\n                        \"id\": \"Process_0x3sul5\"\n                    }\n                }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      if (defElement.children) {\n         var laneIDs = [];\n         defElement.children.forEach((c) => {\n            if (c.type == \"bpmn:Lane\") {\n               laneIDs.push(c.id);\n            }\n         });\n         this.laneIDs = laneIDs;\n      }\n   }\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this objec.\n    * @return {json}\n    */\n   diagramProperties() {\n      return [\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n         },\n      ];\n   }\n};\n","const ABProcessElementCore = require(\"../../../core/process/tasks/ABProcessElementCore.js\");\n\nmodule.exports = class ABProcessElement extends ABProcessElementCore {\n   // constructor(attributes, process, AB, defaultValues) {\n   //    super(attributes, process, AB, defaultValues);\n\n   //    // listen\n   // }\n\n   /**\n    * @method destroy()\n    * remove this task definition.\n    * @return {Promise}\n    */\n   destroy() {\n      ////\n      //// TODO: once our core conversion is complete, this .save() can be\n      //// moved to ABProcessTaskCore, and our ABDefinition.save() can take\n      //// care of the proper method to save depending on the current Platform.\n      ////\n      // return this.toDefinition()\n      //     .destroy()\n\n      return super.destroy().then(() => {\n         return this.process.elementRemove(this);\n      });\n   }\n\n   isValid() {\n      /*\n        var validator = OP.Validation.validator();\n\n        // label/name must be unique:\n        var isNameUnique =\n            this.AB.processes((o) => {\n                return o.name.toLowerCase() == this.name.toLowerCase();\n            }).length == 0;\n        if (!isNameUnique) {\n            validator.addError(\n                \"name\",\n                L(\n                    \"ab.validation.object.name.unique\",\n                    `Process name must be unique (\"${this.name}\"\" already used in this Application)`\n                )\n            );\n        }\n\n        return validator;\n        */\n\n      // var isValid =\n      //     this.AB.processes((o) => {\n      //         return o.name.toLowerCase() == this.name.toLowerCase();\n      //     }).length == 0;\n      // return isValid;\n\n      return true;\n   }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   findLane(curr, cb) {\n      if (!curr) {\n         cb(null, null);\n         return;\n      }\n\n      // if current object has a LANE definition, use that one:\n      if (curr.lanes && curr.lanes.length > 0) {\n         cb(null, curr.lanes[0]);\n      } else if (curr.$type == \"bpmn:Participant\") {\n         // if the current is a Participant, take that one\n         cb(null, curr);\n      } else {\n         // else move upwards and check again:\n         curr = curr.$parent;\n         this.findLane(curr, cb);\n      }\n   }\n\n   setLane(Lane) {\n      this.laneDiagramID = Lane.diagramID;\n   }\n\n   /**\n    * fromElement()\n    * initialize this Task's values from the given BPMN:Element\n    * @param {BPMNElement}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Task with information that was relevant\n    * from the provided BPMN:Element\n    * @param {BPMNElement}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Task_08j07ni\",\n                \"width\": 100,\n                \"height\": 80,\n                \"type\": \"bpmn:SendTask\",\n                \"x\": 20,\n                \"y\": -2130,\n                \"order\": {\n                    \"level\": 5\n                },\n                \"businessObject\": {\n                    \"$type\": \"bpmn:SendTask\",\n                    \"id\": \"Task_08j07ni\",\n                    \"name\": \"ffff\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": 20,\n                            \"y\": -2130,\n                            \"width\": 100,\n                            \"height\": 80\n                        },\n                        \"id\": \"SendTask_0iidv6o_di\"\n                    }\n\n                    // Some elements (like EndEvents) have:\n                    .eventDefinitions: [\n                        {\n                            $type: \"actual bpmn:ElementType\",\n                            ...\n                        }\n                    ]\n                },\n                \"incoming\":[],\n                \"outgoing\":[]\n            }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      // our lane may have changed:\n      var currObj = defElement.businessObject;\n      this.findLane(currObj, (err, obj) => {\n         if (obj) {\n            this.laneDiagramID = obj.id;\n         } else {\n            // if my parent shape is a Participant, then use that:\n            if (\n               defElement.parent &&\n               defElement.parent.type == \"bpmn:Participant\"\n            ) {\n               this.laneDiagramID = defElement.parent.id;\n            } else {\n               this.laneDiagramID = null;\n            }\n         }\n      });\n   }\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties() {\n      const warnings = this.warnings();\n      return [\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n            warn: warnings.length ? warnings : null,\n         },\n      ];\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ui = {\n         id: id,\n         view: \"label\",\n         label: \"this task has not implement properties yet...\",\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {}\n\n   /**\n    * property()\n    * return the specific property value if it exists.\n    * @return {mixed} | undefined\n    */\n   property(id) {\n      if ($$(id)) {\n         return $$(id).getValue();\n      }\n   }\n\n   /**\n    * switchTo()\n    * replace this object with an instance of one of our child classes:\n    * @param {ABProcessTask*} child\n    *        an instance of the new Process Task we are replaced with.\n    * @param {string} propertiesID\n    *        the webix ui.id container for the properties panel.\n    */\n   switchTo(child, propertiesID) {\n      // remove myself from our containing process's elements\n      this.process.elementRemove(this);\n\n      // add the new Process WITH the same id\n      this.process.elementAdd(child);\n\n      // show the child properties:\n      child.propertiesShow(propertiesID);\n\n      this.emit(\"switchTo\", child);\n   }\n\n   /**\n    * @method warningsEval()\n    * re-evaluate our warnings for this Process Task.\n    * Most of our ProcessTasks need to also verify data related to\n    * other available tasks, so we need to call the onProcessReady()\n    * so we can access those values.\n    */\n   warningsEval() {\n      super.warningsEval();\n      this.onProcessReady();\n\n      // if this isn't an end type of task, then there must be\n      // > 0 next tasks\n      if (!this.isEndTask()) {\n         const myOutgoingConnections = this.process.connectionsOutgoing(\n            this.diagramID\n         );\n         if (myOutgoingConnections.length < 1) {\n            this.warningMessage(\"should have another task after this one\");\n         }\n      }\n   }\n\n   /**\n    * @method warningMessage(message)\n    * Save a warning message in a common format for our ProcessTasks.\n    */\n   warningMessage(msg, data = {}) {\n      let message = `${this.defaults.key}[${\n         this.label ? this.label : this.name\n      }]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABProcessEndCore = require(\"../../../core/process/tasks/ABProcessEndCore.js\");\n\nmodule.exports = class ABProcessEnd extends ABProcessEndCore {\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // An End Event doesn't perform any other actions\n   //         // than to signal it has successfully completed.\n   //         // But it provides no Additional Tasks to work on.\n   //         // for testing:\n   //         this.stateCompleted(instance);\n   //         this.log(instance, \"End Event Reached\");\n   //         resolve(true);\n   //     });\n   // }\n};\n","const ABProcessGatewayExclusiveCore = require(\"../../../core/process/tasks/ABProcessGatewayExclusiveCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessGatewayExclusive extends (\n   ABProcessGatewayExclusiveCore\n) {\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties() {\n      // the first entry is for the gateway element itself\n      var properties = super.diagramProperties();\n      /*[\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n         },\n      ];\n      */\n\n      // now add any additional updates for each of our connections:\n      var myOutgoingConnections = this.process.connectionsOutgoing(\n         this.diagramID\n      );\n      myOutgoingConnections.forEach((conn) => {\n         properties.push({\n            id: conn.id,\n            def: {\n               name: this.conditions[conn.id]?.label ?? \"\",\n            },\n         });\n      });\n      return properties;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      // make sure we have > 1 connection.\n      const myOutgoingConnections = this.process.connectionsOutgoing(\n         this.diagramID\n      );\n      if (myOutgoingConnections.length < 2) {\n         this.warningMessage(\"should have multiple outgoing connections\");\n      }\n\n      // make sure there is no more then 1 connection that doesn't have\n      // a condition:\n      let numCondWithOne = 0;\n      myOutgoingConnections.forEach((c) => {\n         if ((this.conditions[c.id]?.filterValue.rules?.length ?? 0) == 0) {\n            numCondWithOne++;\n         }\n      });\n\n      if (numCondWithOne > 1) {\n         this.warningMessage(\n            \"should not have more than 1 unfiltered connection.\"\n         );\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskEmailCore = require(\"../../../core/process/tasks/ABProcessTaskEmailCore.js\");\n\nmodule.exports = class ABProcessTaskEmail extends ABProcessTaskEmailCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   warningsEval() {\n      super.warningsEval();\n\n      // check for warnings:\n\n      if (!this.subject) {\n         this.warningMessage(\"is missing a subject\");\n      }\n\n      if (!this.message) {\n         this.warningMessage(\"is missing a message\");\n      }\n\n      this.verifySetting(\"to\");\n      this.verifySetting(\"from\");\n      this.verifyNextLane(\"to\");\n      if (this.from == \"0\") {\n         let thisLane = this.myLane();\n         if (!thisLane) {\n            this.warningMessage(\n               \"can not resolve the lane participant for [.from] field.\"\n            );\n         }\n      }\n      this.verifyRoleAccount(\"to\", \"toUsers\");\n      this.verifyRoleAccount(\"from\", \"fromUsers\");\n   }\n\n   /**\n    * @method verifySetting()\n    * make sure the given field key has a value assigned.\n    * @param {string} key\n    *        the property of this object to check. (to, from)\n    */\n   verifySetting(key) {\n      if (this[key] == \"\") {\n         this.warningMessage(`does not have a [${key}] setting.`);\n      }\n   }\n\n   /**\n    * @method verifyNextLane()\n    * make sure we can access a Lane for the given property key.\n    * The \"to\" field can reference the \"Next Participant\". This checks to\n    * see if we can reference a lane for the next task.\n    * @param {string} key\n    *        the property that has the value for Next Participant. [to]\n    */\n   verifyNextLane(key) {\n      if (this[key] === \"0\") {\n         // Next Participant\n         // we need to resolve our next task and see if we can pull the participant info from it.\n\n         let nextTasks = this.process.connectionNextTask(this);\n         let nextLanesResolved = true;\n         nextTasks.forEach((t) => {\n            let lane = t.myLane();\n            if (!lane) {\n               nextLanesResolved = false;\n            }\n         });\n         if (!nextLanesResolved || nextTasks.length == 0) {\n            this.warningMessage(\n               `can not resolve next lane participant for [${key}] field.`\n            );\n         }\n      }\n   }\n\n   /**\n    * @method verifyRoleAccount()\n    * Check to see if the provided property is set to use a Role/Account for\n    * the email, and make sure there are values set for what is chosen.\n    * @param {string} key\n    *        the property we are currently validating.\n    * @param {string} valKey\n    *        the property that contains the specific value object.\n    */\n   verifyRoleAccount(key, valKey) {\n      if (this[key] == \"1\") {\n         if (this[valKey]) {\n            if (this[valKey].useRole) {\n               if (this[valKey].role.length == 0) {\n                  this.warningMessage(`can not resolve [${key}] Role setting.`);\n               }\n            }\n            if (this[valKey].useAccount) {\n               if (this[valKey].account.length == 0) {\n                  this.warningMessage(\n                     `can not resolve [${key}] Account setting.`\n                  );\n               }\n            }\n            // TODO:\n            // if (this[valKey].userFields.length > 0) {\n            //    // how to know if this is a problem?\n            // }\n         }\n      }\n   }\n};\n","const ABProcessTaskServiceCore = require(\"../../../core/process/tasks/ABProcessTaskServiceCore.js\");\n\nmodule.exports = class ABProcessTaskService extends ABProcessTaskServiceCore {};\n","const AccountingBatchProcessingCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingBatchProcessingCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingBatchProcessing extends (\n   AccountingBatchProcessingCore\n) {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processBatchValue: `${id}_processBatchValue`,\n         objectBatch: `${id}_objectBatch`,\n         fieldBatchEntries: `${id}_fieldBatchEntries`,\n         fieldBatchFinancialPeriod: `${id}_fieldBatchFinancialPeriod`,\n         objectJE: `${id}_objectJE`,\n         fieldJEAccount: `${id}_fieldJEAccount`,\n         fieldJERC: `${id}_fieldJERC`,\n         fieldJEStatus: `${id}_fieldJEStatus`,\n         fieldJEStatusComplete: `${id}_fieldJEStatusComplete`,\n         objectBR: `${id}_objectBR`,\n         fieldBRFinancialPeriod: `${id}_fieldBRFinancialPeriod`,\n         fieldBRAccount: `${id}_fieldBRAccount`,\n         fieldBRRC: `${id}_fieldBRRC`,\n         fieldBREntries: `${id}_fieldBREntries`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      //\n      // set up field settings:\n      //\n\n      var blankField = {\n         id: 0,\n         value: L(\"Select a Field\"),\n      };\n      // blankField : generic Select a field entry\n\n      function defaultFields(objID) {\n         // create a new options array of Field Choices for the given obj.id\n\n         var fields = [blankField];\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object.fields().forEach((f) => {\n                  fields.push({ id: f.id, value: f.label, field: f });\n               });\n            }\n         }\n         return fields;\n      }\n\n      function updateFields(fieldPickers, fieldValues, defaultValue) {\n         // update the list of field select choices with the new field choices\n\n         fieldPickers.forEach((fp) => {\n            var picker = $$(fp);\n            if (picker) {\n               picker.define(\"options\", fieldValues);\n               // if (defaultValue) {\n               //    picker.define(\"value\", defaultValue);\n               // } else {\n               //    picker.define(\"value\", fieldValues[0].value);\n               // }\n               picker.refresh();\n               picker.show();\n            }\n         });\n      }\n\n      var batchFields = defaultFields(this.objectBatch);\n      // batchFields : the default list of fields for the Batch Object\n\n      var fieldPickersBatch = [\n         ids.fieldBatchEntries,\n         ids.fieldBatchFinancialPeriod,\n      ];\n      // fieldPickersBatch : the list of field selects to update for the Batch\n      //      object.\n\n      var jeFields = defaultFields(this.objectJE);\n      // jeFields : the default list of fields for the Journal Entry Object\n\n      var fieldPickersJE = [\n         ids.fieldJEAccount,\n         ids.fieldJERC,\n         ids.fieldJEStatus,\n      ];\n      // fieldPickersJE : the list of field selects to update for the Journal Entry\n      //      object.\n\n      function compileStatusValues(statusField) {\n         var values = [{ id: 0, value: L(\"Select the Complete Value\") }];\n         if (statusField && statusField.options) {\n            statusField.options().forEach((o) => {\n               values.push({ id: o.id, value: o.text });\n            });\n         }\n         return values;\n      }\n\n      function updatePickerStatusComplete(values) {\n         var wbxComplete = $$(ids.fieldJEStatusComplete);\n         if (wbxComplete) {\n            // update fieldJEStatusComplete options\n            wbxComplete.define(\"options\", values);\n            wbxComplete.refresh();\n            // show fieldJEStatusComplete\n            wbxComplete.show();\n         }\n      }\n\n      function onStatusComplete(newVal) {\n         // pull the ABField object from newValue\n         var jeEntryID = $$(ids.objectJE).getValue();\n         var jeEntry = objectList.find((o) => o.id == jeEntryID);\n         if (jeEntry && jeEntry.object) {\n            var statusField = jeEntry.object.fieldByID(newVal);\n            if (statusField && statusField.options) {\n               // get the options as an []\n               jeFieldStatusValues = compileStatusValues(statusField);\n\n               updatePickerStatusComplete(jeFieldStatusValues);\n            }\n         }\n      }\n\n      var jeFieldStatusValues = compileStatusValues();\n      // jeFieldStatusValues : the list of status options from the fieldJEStatus\n      //      selected entry.\n\n      var brFields = defaultFields(this.objectBR);\n      // jeFields : the default list of fields for the Journal Entry Object\n\n      var fieldPickersBR = [\n         ids.fieldBRFinancialPeriod,\n         ids.fieldBRAccount,\n         ids.fieldBRRC,\n         ids.fieldBREntries,\n      ];\n      // fieldPickersBR : the list of field selects to update for the Balance Record\n      //      object.\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processBatchValue,\n               view: \"select\",\n               label: L(\"Process Batch Value\"),\n               value: this.processBatchValue,\n               name: \"processBatchValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectBatch,\n               view: \"select\",\n               label: L(\"Batch Object\"),\n               value: this.objectBatch,\n               name: \"objectBatch\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        batchFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersBatch, batchFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldBatchEntries,\n               view: \"select\",\n               label: L(\"Batch->JE[]\"),\n               value: this.fieldBatchEntries,\n               name: \"fieldBatchEntries\",\n               options: batchFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBatchFinancialPeriod,\n               view: \"select\",\n               label: L(\"Batch->FinancialPeriod\"),\n               value: this.fieldBatchFinancialPeriod,\n               name: \"fieldBatchFinancialPeriod\",\n               options: batchFields,\n               hidden: true,\n            },\n            {\n               id: ids.objectJE,\n               view: \"select\",\n               label: L(\"Journal Entry Object\"),\n               value: this.objectJE,\n               name: \"objectJE\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of jeFields\n                        jeFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersJE, jeFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldJEAccount,\n               view: \"select\",\n               label: L(\"JE->Account\"),\n               value: this.fieldJEAccount,\n               name: \"fieldJEAccount\",\n               options: jeFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldJERC,\n               view: \"select\",\n               label: L(\"JE->RC\"),\n               value: this.fieldJERC,\n               name: \"fieldJERC\",\n               options: jeFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldJEStatus,\n               view: \"select\",\n               label: L(\"JE->Status\"),\n               value: this.fieldJEStatus,\n               name: \"fieldJEStatus\",\n               options: jeFields,\n               hidden: true,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        onStatusComplete(newVal);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldJEStatusComplete,\n               view: \"select\",\n               label: L(\"JE->Status->Complete\"),\n               value: this.fieldJEStatusComplete,\n               name: \"fieldJEStatusComplete\",\n               options: jeFieldStatusValues,\n               hidden: true,\n            },\n            {\n               id: ids.objectBR,\n               view: \"select\",\n               label: L(\"Balance Record\"),\n               value: this.objectBR,\n               name: \"objectBR\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of jeFields\n                        brFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersBR, brFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldBRFinancialPeriod,\n               view: \"select\",\n               label: L(\"BR->FP\"),\n               value: this.fieldBRFinancialPeriod,\n               name: \"fieldBRFinancialPeriod\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBRAccount,\n               view: \"select\",\n               label: L(\"BR->Account\"),\n               value: this.fieldBRAccount,\n               name: \"fieldBRAccount\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBRRC,\n               view: \"select\",\n               label: L(\"BR->RC\"),\n               value: this.fieldBRRC,\n               name: \"fieldBRRC\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBREntries,\n               view: \"select\",\n               label: L(\"BR->Entries\"),\n               value: this.fieldBREntries,\n               name: \"fieldBREntries\",\n               options: brFields,\n               hidden: true,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      // if there are already default values for our Objects,\n      // unhide the field selectors:\n      if (this.objectBatch && this.objectBatch != 0) {\n         updateFields(fieldPickersBatch, batchFields);\n      }\n\n      if (this.objectJE && this.objectJE != 0) {\n         updateFields(fieldPickersJE, jeFields);\n      }\n\n      if (this.fieldJEStatus) {\n         onStatusComplete(this.fieldJEStatus);\n      }\n\n      if (this.objectBR && this.objectBR != 0) {\n         updateFields(fieldPickersBR, brFields);\n      }\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingFPCloseCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingFPCloseCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingFPClose extends AccountingFPCloseCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processFPValue: `${id}_processFPValue`,\n         objectFP: `${id}_objectFP`,\n         objectGL: `${id}_objectGL`,\n         objectAcc: `${id}_objectAcc`,\n         fieldFPStart: `${id}_fieldFPStart`,\n         fieldFPOpen: `${id}_fieldFPOpen`,\n         fieldFPStatus: `${id}_fieldFPStatus`,\n         fieldFPActive: `${id}_fieldFPActive`,\n         fieldGLStarting: `${id}_fieldGLStarting`,\n         fieldGLRunning: `${id}_fieldGLRunning`,\n         fieldGLAccount: `${id}_fieldGLAccount`,\n         fieldGLRc: `${id}_fieldGLRc`,\n         fieldGLDebit: `${id}fieldGLDebit`,\n         fieldGLCredit: `${id}_fieldGLCredit`,\n         fieldAccType: `${id}_fieldAccType`,\n         fieldAccAsset: `${id}_fieldAccAsset`,\n         fieldAccExpense: `${id}_fieldAccExpense`,\n         fieldAccLiabilities: `${id}_fieldAccLiabilities`,\n         fieldAccEquity: `${id}_fieldAccEquity`,\n         fieldAccIncome: `${id}_fieldAccIncome`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getFieldOptions = (objID) => {\n         let fields = [\n            {\n               id: 0,\n               value: L(\"Select a Field\"),\n            },\n         ];\n\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object.fields().forEach((f) => {\n                  fields.push({ id: f.id, value: f.label, field: f });\n               });\n            }\n         }\n         return fields;\n      };\n\n      let getStatusFieldOptions = (statusFieldId) => {\n         let result = [];\n         let fpObject = this.AB.objectByID(this.objectFP);\n         if (!fpObject) return result;\n\n         let fpStatusField = fpObject.fieldByID(statusFieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let updateFPFields = (fpFields) => {\n         [ids.fieldFPStart, ids.fieldFPOpen, ids.fieldFPStatus].forEach(\n            (fieldGLElem) => {\n               $$(fieldGLElem).define(\"options\", fpFields);\n               $$(fieldGLElem).refresh();\n            }\n         );\n      };\n\n      let updateFPStatusFields = (fpStatusOptions) => {\n         $$(ids.fieldFPActive).define(\"options\", fpStatusOptions);\n         $$(ids.fieldFPActive).refresh();\n      };\n\n      let updateGLFields = (glFields) => {\n         [\n            ids.fieldGLRunning,\n            ids.fieldGLAccount,\n            ids.fieldGLRc,\n            ids.fieldGLDebit,\n            ids.fieldGLCredit,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", glFields);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateAccFields = (accFields) => {\n         $$(ids.fieldAccType).define(\"options\", accFields);\n         $$(ids.fieldAccType).refresh();\n      };\n\n      let updateAccTypeOptions = (accTypeOptions) => {\n         [\n            ids.fieldAccAsset,\n            ids.fieldAccExpense,\n            ids.fieldAccLiabilities,\n            ids.fieldAccEquity,\n            ids.fieldAccIncome,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", accTypeOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let getListOptions = (objectId, fieldId) => {\n         let result = [];\n         let object = this.AB.objectByID(objectId);\n         if (!object) return result;\n\n         let fpStatusField = object.fieldByID(fieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let fpFields = getFieldOptions(this.objectFP);\n      let glFields = getFieldOptions(this.objectGL);\n      let accFields = getFieldOptions(this.objectAcc);\n      let fpStatusFields = getStatusFieldOptions(this.fieldFPStatus);\n      let accTypeOptions = getListOptions(this.objectAcc, this.fieldAccType);\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 200,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processFPValue,\n               view: \"select\",\n               label: L(\"Process Fiscal Period Value\"),\n               value: this.processFPValue,\n               name: \"processFPValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectFP,\n               view: \"select\",\n               label: L(\"FP Object\"),\n               value: this.objectFP,\n               name: \"objectFP\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        fpFields = getFieldOptions(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFPFields(fpFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectGL,\n               view: \"select\",\n               label: L(\"GL Object\"),\n               value: this.objectGL,\n               name: \"objectGL\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        glFields = getFieldOptions(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateGLFields(glFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectAcc,\n               view: \"select\",\n               label: L(\"Account Object\"),\n               value: this.objectAcc,\n               name: \"objectAcc\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        accFields = getFieldOptions(newVal);\n                        updateAccFields(accFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPStart,\n               view: \"select\",\n               label: L(\"FP -> Start\"),\n               value: this.fieldFPStart,\n               name: \"fieldFPStart\",\n               options: fpFields,\n            },\n            {\n               id: ids.fieldFPOpen,\n               view: \"select\",\n               label: L(\"FP -> Open\"),\n               value: this.fieldFPOpen,\n               name: \"fieldFPOpen\",\n               options: fpFields,\n            },\n            {\n               id: ids.fieldFPStatus,\n               view: \"select\",\n               label: L(\"FP -> Status\"),\n               value: this.fieldFPStatus,\n               name: \"fieldFPStatus\",\n               options: fpFields,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        fpStatusFields = getStatusFieldOptions(newVal);\n                        updateFPStatusFields(fpStatusFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPActive,\n               view: \"select\",\n               label: L(\"FP -> Active\"),\n               value: this.fieldFPActive,\n               name: \"fieldFPActive\",\n               options: fpStatusFields,\n            },\n            {\n               id: ids.fieldGLStarting,\n               view: \"select\",\n               label: L(\"GL -> Starting BL\"),\n               value: this.fieldGLStarting,\n               name: \"fieldGLStarting\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLRunning,\n               view: \"select\",\n               label: L(\"GL -> Running BL\"),\n               value: this.fieldGLRunning,\n               name: \"fieldGLRunning\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLAccount,\n               view: \"select\",\n               label: L(\"GL -> Account\"),\n               value: this.fieldGLAccount,\n               name: \"fieldGLAccount\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLRc,\n               view: \"select\",\n               label: L(\"GL -> RC\"),\n               value: this.fieldGLRc,\n               name: \"fieldGLRc\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLDebit,\n               view: \"select\",\n               label: L(\"GL -> Debit\"),\n               value: this.fieldGLDebit,\n               name: \"fieldGLDebit\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLCredit,\n               view: \"select\",\n               label: L(\"GL -> Credit\"),\n               value: this.fieldGLCredit,\n               name: \"fieldGLCredit\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldAccType,\n               view: \"select\",\n               label: L(\"Acc -> Type\"),\n               value: this.fieldAccType,\n               name: \"fieldAccType\",\n               options: accFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeOptions = getListOptions(\n                           this.objectAcc || $$(ids.objectAcc).getValue(),\n                           newVal\n                        );\n                        updateAccTypeOptions(accTypeOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldAccAsset,\n               view: \"select\",\n               label: L(\"Acc -> Asset\"),\n               value: this.fieldAccAsset,\n               name: \"fieldAccAsset\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccExpense,\n               view: \"select\",\n               label: L(\"Acc -> Expense\"),\n               value: this.fieldAccExpense,\n               name: \"fieldAccExpense\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccLiabilities,\n               view: \"select\",\n               label: L(\"Acc -> Liabilities\"),\n               value: this.fieldAccLiabilities,\n               name: \"fieldAccLiabilities\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccEquity,\n               view: \"select\",\n               label: L(\"Acc -> Equity\"),\n               value: this.fieldAccEquity,\n               name: \"fieldAccEquity\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccIncome,\n               view: \"select\",\n               label: L(\"Acc -> Income\"),\n               value: this.fieldAccIncome,\n               name: \"fieldAccIncome\",\n               options: accTypeOptions,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingFPYearCloseCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingFPYearCloseCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingFPYearClose extends AccountingFPYearCloseCore {\n   ////\n   //// Process Instance Methods\n   ////\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processFPYearValue: `${id}_processFPYearValue`,\n         objectFPYear: `${id}_objectFPYear`,\n         objectFPMonth: `${id}_objectFPMonth`,\n         objectGL: `${id}_objectGL`,\n         objectAccount: `${id}_objectAccount`,\n         valueFundBalances: `${id}_valueFundBalances`,\n         valueNetIncome: `${id}_valueNetIncome`,\n         fieldFPYearStart: `${id}_fieldFPYearStart`,\n         fieldFPYearEnd: `${id}_fieldFPYearEnd`,\n         fieldFPYearStatus: `${id}_fieldFPYearStatus`,\n         fieldFPYearActive: `${id}_fieldFPYearActive`,\n         fieldFPMonthStart: `${id}_fieldFPMonthStart`,\n         fieldFPMonthEnd: `${id}_fieldFPMonthEnd`,\n         fieldGLStartBalance: `${id}_fieldGLStartBalance`,\n         fieldGLRunningBalance: `${id}_fieldGLRunningBalance`,\n         fieldGLrc: `${id}_fieldGLrc`,\n         fieldAccNumber: `${id}_fieldAccNumber`,\n         fieldAccType: `${id}_fieldAccType`,\n         fieldAccTypeIncome: `${id}_fieldAccTypeIncome`,\n         fieldAccTypeExpense: `${id}_fieldAccTypeExpense`,\n         fieldAccTypeEquity: `${id}_fieldAccTypeEquity`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getFieldOptions = (objID, fieldKey) => {\n         let fields = [\n            {\n               id: 0,\n               value: L(\"Select a Field\"),\n            },\n         ];\n\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object\n                  .fields((f) => f.key == fieldKey)\n                  .forEach((f) => {\n                     fields.push({ id: f.id, value: f.label, field: f });\n                  });\n            }\n         }\n         return fields;\n      };\n\n      let getListOptions = (objectId, fieldId) => {\n         let result = [];\n         let object = this.AB.objectByID(objectId);\n         if (!object) return result;\n\n         let fpStatusField = object.fieldByID(fieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let updateAccNumberFields = (accNumberFields) => {\n         $$(ids.fieldAccNumber).define(\"options\", accNumberFields);\n         $$(ids.fieldAccNumber).refresh();\n      };\n\n      let updateAccFields = (accFields) => {\n         $$(ids.fieldAccType).define(\"options\", accFields);\n         $$(ids.fieldAccType).refresh();\n      };\n\n      let updateAccTypeOptions = (accTypeOptions) => {\n         [\n            ids.fieldAccTypeIncome,\n            ids.fieldAccTypeExpense,\n            ids.fieldAccTypeEquity,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", accTypeOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateFPYearDateOptions = (fpYearDateOptions) => {\n         [ids.fieldFPYearStart, ids.fieldFPYearEnd].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", fpYearDateOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateFPYearStatusOptions = (fpYearStatusFields) => {\n         $$(ids.fieldFPYearStatus).define(\"options\", fpYearStatusFields);\n         $$(ids.fieldFPYearStatus).refresh();\n      };\n\n      let updateFPYearActiveOptions = (fpYearStatusOptions) => {\n         $$(ids.fieldFPYearActive).define(\"options\", fpYearStatusOptions);\n         $$(ids.fieldFPYearActive).refresh();\n      };\n\n      let updateFPMonthDateFields = (fpMonthDateOpts) => {\n         [ids.fieldFPMonthStart, ids.fieldFPMonthEnd].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", fpMonthDateOpts);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateGlNumberFields = (glNumberOptions) => {\n         [ids.fieldGLStartBalance, ids.fieldGLRunningBalance].forEach(\n            (fieldGLElem) => {\n               $$(fieldGLElem).define(\"options\", glNumberOptions);\n               $$(fieldGLElem).refresh();\n            }\n         );\n      };\n\n      let updateGlConnectFields = (glRcOptions) => {\n         $$(ids.fieldGLrc).define(\"options\", glRcOptions);\n         $$(ids.fieldGLrc).refresh();\n      };\n\n      let fpYearDateFields = getFieldOptions(this.objectFPYear, \"date\");\n      let fpYearStatusFields = getFieldOptions(this.objectFPYear, \"list\");\n      let fpYearStatusOptions = getListOptions(\n         this.objectFPYear,\n         this.fieldFPYearStatus\n      );\n      let fpMonthDateFields = getFieldOptions(this.objectFPMonth, \"date\");\n      let glNumberFields = getFieldOptions(this.objectGL, \"number\");\n      let glRcFields = getFieldOptions(this.objectGL, \"connectObject\");\n      let accNumberFields = getFieldOptions(this.objectAccount, \"number\");\n      let accTypeFields = getFieldOptions(this.objectAccount, \"list\");\n      let accTypeOptions = getListOptions(\n         this.objectAccount,\n         this.fieldAccType\n      );\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 200,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processFPYearValue,\n               view: \"select\",\n               label: L(\"Process Fiscal Period Year Value\"),\n               value: this.processFPYearValue,\n               name: \"processFPYearValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectFPYear,\n               view: \"select\",\n               label: L(\"FP Year Object\"),\n               value: this.objectFPYear,\n               name: \"objectFPYear\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpYearDateFields = getFieldOptions(newVal, \"date\");\n                        updateFPYearDateOptions(fpYearDateFields);\n\n                        accTypeFields = getFieldOptions(newVal, \"list\");\n                        updateFPYearStatusOptions(accTypeFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectFPMonth,\n               view: \"select\",\n               label: L(\"FP Month Object\"),\n               value: this.objectFPMonth,\n               name: \"objectFPMonth\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpMonthDateFields = getFieldOptions(newVal, \"date\");\n                        updateFPMonthDateFields(fpMonthDateFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectGL,\n               view: \"select\",\n               label: L(\"Balance Object\"),\n               value: this.objectGL,\n               name: \"objectGL\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        glNumberFields = getFieldOptions(newVal, \"number\");\n                        updateGlNumberFields(glNumberFields);\n\n                        glRcFields = getFieldOptions(newVal, \"connectObject\");\n                        updateGlConnectFields(glRcFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectAccount,\n               view: \"select\",\n               label: L(\"Account Object\"),\n               value: this.objectAccount,\n               name: \"objectAccount\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeFields = getFieldOptions(newVal, \"list\");\n                        updateAccFields(accTypeFields);\n\n                        accNumberFields = getFieldOptions(newVal, \"number\");\n                        updateAccNumberFields(accNumberFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.valueFundBalances,\n               view: \"text\",\n               label: L(\"Fund Balances Code\"),\n               value: this.valueFundBalances,\n               name: \"valueFundBalances\",\n            },\n            {\n               id: ids.valueNetIncome,\n               view: \"text\",\n               label: L(\"Net Income Code\"),\n               value: this.valueNetIncome,\n               name: \"valueNetIncome\",\n            },\n            {\n               id: ids.fieldFPYearStart,\n               view: \"select\",\n               label: L(\"FP Year -> Start\"),\n               value: this.fieldFPYearStart,\n               name: \"fieldFPYearStart\",\n               options: fpYearDateFields,\n            },\n            {\n               id: ids.fieldFPYearEnd,\n               view: \"select\",\n               label: L(\"FP Year -> End\"),\n               value: this.fieldFPYearEnd,\n               name: \"fieldFPYearEnd\",\n               options: fpYearDateFields,\n            },\n            {\n               id: ids.fieldFPYearStatus,\n               view: \"select\",\n               label: L(\"FP Year -> Status\"),\n               value: this.fieldFPYearStatus,\n               name: \"fieldFPYearStatus\",\n               options: fpYearStatusFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpYearStatusOptions = getListOptions(\n                           this.objectFPYear || $$(ids.objectFPYear).getValue(),\n                           newVal\n                        );\n                        updateFPYearActiveOptions(fpYearStatusOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPYearActive,\n               view: \"select\",\n               label: L(\"FP Year -> Active\"),\n               value: this.fieldFPYearActive,\n               name: \"fieldFPYearActive\",\n               options: fpYearStatusOptions,\n            },\n            {\n               id: ids.fieldFPMonthStart,\n               view: \"select\",\n               label: L(\"FP Month -> Start\"),\n               value: this.fieldFPMonthStart,\n               name: \"fieldFPMonthStart\",\n               options: fpMonthDateFields,\n            },\n            {\n               id: ids.fieldFPMonthEnd,\n               view: \"select\",\n               label: L(\"FP Month -> End\"),\n               value: this.fieldFPMonthEnd,\n               name: \"fieldFPMonthEnd\",\n               options: fpMonthDateFields,\n            },\n            {\n               id: ids.fieldGLStartBalance,\n               view: \"select\",\n               label: L(\"GL -> Start Balance\"),\n               value: this.fieldGLStartBalance,\n               name: \"fieldGLStartBalance\",\n               options: glNumberFields,\n            },\n            {\n               id: ids.fieldGLRunningBalance,\n               view: \"select\",\n               label: L(\"GL -> Running Balance\"),\n               value: this.fieldGLRunningBalance,\n               name: \"fieldGLRunningBalance\",\n               options: glNumberFields,\n            },\n            {\n               id: ids.fieldGLrc,\n               view: \"select\",\n               label: L(\"GL -> RC\"),\n               value: this.fieldGLrc,\n               name: \"fieldGLrc\",\n               options: glRcFields,\n            },\n            {\n               id: ids.fieldAccNumber,\n               view: \"select\",\n               label: L(\"Acc -> Account Number\"),\n               value: this.fieldAccNumber,\n               name: \"fieldAccNumber\",\n               options: accNumberFields,\n            },\n            {\n               id: ids.fieldAccType,\n               view: \"select\",\n               label: L(\"Acc -> Type\"),\n               value: this.fieldAccType,\n               name: \"fieldAccType\",\n               options: accTypeFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeOptions = getListOptions(\n                           this.objectAccount ||\n                              $$(ids.objectAccount).getValue(),\n                           newVal\n                        );\n                        updateAccTypeOptions(accTypeOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldAccTypeIncome,\n               view: \"select\",\n               label: L(\"Acc -> Income\"),\n               value: this.fieldAccTypeIncome,\n               name: \"fieldAccTypeIncome\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccTypeExpense,\n               view: \"select\",\n               label: L(\"Acc -> Expense\"),\n               value: this.fieldAccTypeExpense,\n               name: \"fieldAccTypeExpense\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccTypeEquity,\n               view: \"select\",\n               label: L(\"Acc -> Equity\"),\n               value: this.fieldAccTypeEquity,\n               name: \"fieldAccTypeEquity\",\n               options: accTypeOptions,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingJEArchiveCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingJEArchiveCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingJEArchive extends AccountingJEArchiveCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processBatchValue: `${id}_processBatchValue`,\n         objectBatch: `${id}_objectBatch`,\n         objectBalance: `${id}_objectBalance`,\n         objectJE: `${id}_objectJE`,\n         objectJEArchive: `${id}_objectJEArchive`,\n\n         fieldBatchFiscalMonth: `${id}_fieldBatchFiscalMonth`,\n         fieldJeAccount: `${id}_fieldJeAccount`,\n         fieldJeRC: `${id}_fieldJeRC`,\n         fieldJeArchiveBalance: `${id}_fieldJeArchiveBalance`,\n         fieldBrFiscalMonth: `${id}_fieldBrFiscalMonth`,\n         fieldBrAccount: `${id}_fieldBrAccount`,\n         fieldBrRC: `${id}_fieldBrRC`,\n\n         fieldsMatch: `${id}_fieldsMatch`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      let ids = this.propertyIDs(id);\n\n      let processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      let processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      let objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getConnectFieldOptions = (objectId) => {\n         let object = this.AB.objectByID(objectId);\n         if (!object) return [];\n\n         let options = object\n            .fields((f) => f.isConnection)\n            .map((f) => {\n               return {\n                  id: f.id,\n                  value: f.label,\n               };\n            });\n\n         options.unshift({\n            id: 0,\n            value: L(\"Select a Field\"),\n         });\n\n         return options;\n      };\n\n      let updateFields = (fieldPickers, fieldValues) => {\n         fieldPickers.forEach((fp) => {\n            var picker = $$(fp);\n            if (picker) {\n               picker.define(\"options\", fieldValues);\n               picker.refresh();\n               picker.show();\n            }\n         });\n      };\n\n      let refreshBatchFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldBatchFiscalMonth], options);\n      };\n\n      let refreshBRFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields(\n            [ids.fieldBrAccount, ids.fieldBrFiscalMonth, ids.fieldBrRC],\n            options\n         );\n      };\n\n      let refreshJeFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldJeAccount, ids.fieldJeRC], options);\n      };\n\n      let refreshJeArchiveFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldJeArchiveBalance], options);\n      };\n\n      let refreshFieldsMatch = () => {\n         let $fieldsMatch = $$(ids.fieldsMatch);\n         if (!$fieldsMatch) return;\n\n         // clear form\n         webix.ui([], $fieldsMatch);\n\n         let JEObj = this.AB.objectByID(this.objectJE);\n         if (!JEObj) return;\n\n         let JEArchiveObj = this.AB.objectByID(this.objectJEArchive);\n         if (!JEArchiveObj) return;\n\n         // create JE acrhive field options to the form\n         JEArchiveObj.fields().forEach((f) => {\n            let jeFields = [];\n\n            if (f.isConnection) {\n               jeFields = JEObj.fields((fJe) => {\n                  return (\n                     fJe.isConnection &&\n                     fJe.settings &&\n                     f.settings &&\n                     fJe.settings.linkObject == f.settings.linkObject &&\n                     fJe.settings.linkType == f.settings.linkType &&\n                     fJe.settings.linkViaType == f.settings.linkViaType &&\n                     fJe.settings.isCustomFK == f.settings.isCustomFK\n                  );\n               });\n            } else {\n               jeFields = JEObj.fields((fJe) => fJe.key == f.key);\n            }\n\n            jeFields = jeFields.map((fJe) => {\n               return {\n                  id: fJe.id,\n                  value: fJe.label,\n               };\n            });\n\n            $fieldsMatch.addView({\n               view: \"select\",\n               name: f.id,\n               label: f.label,\n               options: jeFields,\n            });\n         });\n\n         $fieldsMatch.setValues(this.fieldsMatch || {});\n      };\n\n      let fieldBatchList = getConnectFieldOptions(this.objectBatch);\n      let fieldBalanceList = getConnectFieldOptions(this.objectBalance);\n      let fieldJeList = getConnectFieldOptions(this.objectJE);\n      let fieldJeArchiveList = getConnectFieldOptions(this.objectJEArchive);\n\n      let ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 180,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processBatchValue,\n               view: \"select\",\n               label: L(\"Process Batch Value\"),\n               value: this.processBatchValue,\n               name: \"processBatchValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectBatch,\n               view: \"select\",\n               label: L(\"Batch Object\"),\n               value: this.objectBatch,\n               name: \"objectBatch\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectBatch = newVal;\n                     refreshBatchFields(newVal);\n                  },\n               },\n            },\n            {\n               id: ids.fieldBatchFiscalMonth,\n               view: \"select\",\n               label: L(\"Batch -> Fiscal Month\"),\n               value: this.fieldBatchFiscalMonth,\n               name: \"fieldBatchFiscalMonth\",\n               options: fieldBatchList,\n            },\n            {\n               id: ids.objectBalance,\n               view: \"select\",\n               label: L(\"BR Object\"),\n               value: this.objectBalance,\n               name: \"objectBalance\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectBalance = newVal;\n                     refreshBRFields(newVal);\n                  },\n               },\n            },\n            {\n               id: ids.fieldBrFiscalMonth,\n               view: \"select\",\n               label: L(\"BR -> Fiscal Month\"),\n               value: this.fieldBrFiscalMonth,\n               name: \"fieldBrFiscalMonth\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.fieldBrAccount,\n               view: \"select\",\n               label: L(\"BR -> Account\"),\n               value: this.fieldBrAccount,\n               name: \"fieldBrAccount\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.fieldBrRC,\n               view: \"select\",\n               label: L(\"BR -> RC\"),\n               value: this.fieldBrRC,\n               name: \"fieldBrRC\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.objectJE,\n               view: \"select\",\n               label: L(\"JE Object\"),\n               value: this.objectJE,\n               name: \"objectJE\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectJE = newVal;\n                     refreshJeFields(newVal);\n                     refreshFieldsMatch();\n                  },\n               },\n            },\n            {\n               id: ids.fieldJeAccount,\n               view: \"select\",\n               label: L(\"JE -> Account\"),\n               value: this.fieldJeAccount,\n               name: \"fieldJeAccount\",\n               options: fieldJeList,\n            },\n            {\n               id: ids.fieldJeRC,\n               view: \"select\",\n               label: L(\"JE -> RC\"),\n               value: this.fieldJeRC,\n               name: \"fieldJeRC\",\n               options: fieldJeList,\n            },\n            {\n               id: ids.objectJEArchive,\n               view: \"select\",\n               label: L(\"JE Archive Object\"),\n               value: this.objectJEArchive,\n               name: \"objectJEArchive\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectJEArchive = newVal;\n                     refreshJeArchiveFields(newVal);\n                     refreshFieldsMatch();\n                  },\n               },\n            },\n            {\n               id: ids.fieldJeArchiveBalance,\n               view: \"select\",\n               label: L(\"JE Archive -> BR\"),\n               value: this.fieldJeArchiveBalance,\n               name: \"fieldJeArchiveBalance\",\n               options: fieldJeArchiveList,\n            },\n            {\n               view: \"fieldset\",\n               label: \"Fields Matching\",\n               body: {\n                  id: ids.fieldsMatch,\n                  view: \"form\",\n                  borderless: true,\n                  elements: [],\n               },\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n\n      refreshFieldsMatch();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      let ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         if (s === \"fieldsMatch\") {\n            this[s] = $$(ids.fieldsMatch).getValues();\n         } else {\n            this[s] = this.property(ids[s]);\n         }\n      });\n   }\n};\n","const CalculateTaskCore = require(\"../../../core/process/tasks/ABProcessTaskServiceCalculateCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class CalculateTask extends CalculateTaskCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.formulaText) {\n         this.warningMessage(\"is missing a formula.\");\n      }\n\n      if (this.formulaText) {\n         const hash = {};\n         (this.process.processDataFields(this) || []).forEach((item) => {\n            hash[`{${item.label}}`] = item;\n         });\n\n         let exp = new RegExp(`{[^}]*}`, \"g\");\n         let entries = this.formulaText.match(exp) || [];\n         entries.forEach((entry) => {\n            if (!hash[entry]) {\n               this.warningMessage(\n                  `could not resolve process value [${entry}]`\n               );\n            }\n         });\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskServiceGetResetPasswordUrlCore = require(\"../../../core/process/tasks/ABProcessTaskServiceGetResetPasswordUrlCore.js\");\n\nmodule.exports = class ABProcessTaskServiceGetResetPasswordUrl extends (\n   ABProcessTaskServiceGetResetPasswordUrlCore\n) {\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.email) {\n         this.warningMessage(\"is missing the email address.\");\n      }\n\n      const processData = (this.process.processDataFields(this) ?? [])\n         .filter((item) => item.field?.key == \"email\")\n         .map((item) => {\n            return {\n               id: item.key,\n               value: item.label,\n            };\n         });\n\n      if (processData.length == 0) {\n         this.warningMessage(\"has no previous tasks exporting email fields.\");\n      }\n   }\n};\n","const InsertRecordTaskCore = require(\"../../../core/process/tasks/ABProcessTaskServiceInsertRecordCore.js\");\n\nmodule.exports = class InsertRecordTask extends InsertRecordTaskCore {\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.objectID) {\n         this.warningMessage(\"has no Object set.\");\n      }\n\n      const fv = Object.keys(this.fieldValues || {}) || [];\n      if (fv.length == 0) {\n         this.warningMessage(\"has no fields set\");\n      } else {\n         let isSet = false;\n         fv.forEach((f) => {\n            if (\n               this.fieldValues[f]?.set != \"0\" &&\n               this.fieldValues[f]?.value != null\n            ) {\n               isSet = true;\n            }\n         });\n         if (!isSet) {\n            this.warningMessage(\"has no fields set\");\n         }\n      }\n   }\n};\n","const ABProcessTaskServiceQueryCore = require(\"../../../core/process/tasks/ABProcessTaskServiceQueryCore.js\");\n\nconst ABQLManager = require(\"../../ql/ABQLManager.js\");\n\nmodule.exports = class ABProcessTaskServiceQuery extends (\n   ABProcessTaskServiceQueryCore\n) {\n   constructor(attributes, process, AB) {\n      super(attributes, process, AB);\n\n      this.attributes = attributes;\n   }\n\n   ABQLManager() {\n      return ABQLManager;\n   }\n\n   warnings() {\n      // first get all our embedded QL Command warnings\n      let qlWarnings = [];\n      if (this.qlObj) {\n         qlWarnings = qlWarnings.concat(this.qlObj.warnings());\n      }\n      // run the QL Warnings through our .warningMessage() to get a message\n      // that includes this task's name:\n      qlWarnings.forEach((w) => {\n         if (w?.message) this.warningMessage(w.message);\n      });\n      let myWarnings = super.warnings();\n      return myWarnings.filter((w) => w); // filter out any undefined.\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (this.qlObj) {\n         this.qlObj.warningsEval();\n      } else {\n         this.warningMessage(`has no Query defined.`);\n      }\n\n      if (!this.name) {\n         this.warningMessage(\"does not have a name.\", {\n            attributes: this.attributes,\n         });\n      }\n\n      let hasSave = false;\n      let curr = this.qlObj;\n      while (curr) {\n         if (curr.key === \"row_save\" || curr.key === \"set_save\") {\n            hasSave = true;\n            curr = null; // just stop here.\n         } else {\n            curr = curr.next;\n         }\n      }\n\n      if (!hasSave) {\n         this.warningMessage(\"requires at least one Save operation.\");\n      }\n   }\n};\n","const SubProcessCore = require(\"../../../core/process/tasks/ABProcessTaskSubProcessCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class SubProcess extends SubProcessCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   /*\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         isEnable: `${id}_isEnable`,\n         parameterId: `${id}_parameterId`,\n      };\n   }\n\n   /**\n    * @method propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    * /\n   propertiesShow(id) {\n      let ids = this.propertyIDs(id);\n\n      // Pull query tasks option list\n      let parameterOptions = (this.process.processDataFields(this) || []).map(\n         (item) => {\n            return {\n               id: item.key,\n               value: item.label,\n            };\n         }\n      );\n\n      let ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 120,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.isEnable,\n               view: \"switch\",\n               label: L(\"Enable\"),\n               value: this.isEnable,\n            },\n            {\n               id: ids.parameterId,\n               view: \"richselect\",\n               label: L(\"Repeat for\"),\n               options: parameterOptions,\n               value: this.parameterId,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * @method propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    * /\n   propertiesStash(id) {\n      let ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n      this.isEnable = this.property(ids.isEnable);\n      this.parameterId = this.property(ids.parameterId);\n   }\n   */\n\n   /**\n    * @method diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties(bpmnModeler) {\n      let props = super.diagramProperties();\n      props = props || [{}];\n      props[0].def = props[0].def || {};\n\n      if (this.parameterId != null) {\n         props[0].def = props[0].def || {};\n         props[0].def.loopCharacteristics = bpmnModeler\n            .get(\"moddle\")\n            .create(\"bpmn:MultiInstanceLoopCharacteristics\");\n         props[0].def.loopCharacteristics.isSequential = true;\n      }\n\n      return props;\n   }\n\n   /**\n    * @method onChange()\n    * update the current Task with information that was relevant\n    * from the provided BPMN:Element\n    * @param {BPMNElement}\n    */\n   onChange(defElement) {\n      let loopCharacteristics =\n         defElement.loopCharacteristics ||\n         defElement.businessObject.loopCharacteristics ||\n         {};\n\n      switch (loopCharacteristics.$type) {\n         case \"bpmn:MultiInstanceLoopCharacteristics\":\n            this.loopType = loopCharacteristics.isSequential\n               ? \"sequential\"\n               : \"parallel\";\n            break;\n         case \"bpmn:StandardLoopCharacteristics\":\n            this.loopType = \"looping\";\n            break;\n      }\n   }\n\n   /**\n    * @method destroy()\n    * destroy this sub process and inside tasks\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // reuse .destroy function of ABProcess\n      // to clear tasks within this sub process\n      return this.process.destroy.call(this);\n   }\n\n   /**\n    * @method save()\n    * persist this sub process\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   save() {\n      // reuse .save function of ABProcess\n      // to update tasks within this sub process\n      return this.process.save.call(this);\n   }\n\n   /**\n    * @method elementNewForModelDefinition()\n    * create a new process element defined by the given BPMN:Element\n    *\n    * the BPMN:Element definition comes from the BPMN Modeler when a new\n    * diagram element is created.\n    *\n    * @param {BPMN:Element} element\n    *        the BPMN modeler diagram element definition\n    * @return {ABProcessParticipant|ABProcessLane|ABProcessElement}\n    *\n    */\n   elementNewForModelDefinition(element) {\n      let task = this.AB.processElementNewForModelDefinition(element, this);\n\n      // Add a new task to this sub process\n      if (task) {\n         this.elementAdd(task);\n      }\n      return task;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this._unknownElementIDs || []).forEach((eID) => {\n         this.warningMessage(\n            `is referencing an unknown process element id[${eID}]`,\n            { process: this.id, eID }\n         );\n      });\n   }\n};\n","const ABProcessTaskUserCore = require(\"../../../core/process/tasks/ABProcessTaskUserCore.js\");\n\nmodule.exports = class ABProcessTaskUser extends ABProcessTaskUserCore {};\n","const ABProcessTaskUserApprovalCore = require(\"../../../core/process/tasks/ABProcessTaskUserApprovalCore.js\");\n\nmodule.exports = class ABProcessTaskUserApproval extends (\n   ABProcessTaskUserApprovalCore\n) {};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskUserExternalCore = require(\"../../../core/process/tasks/ABProcessTaskUserExternalCore.js\");\n\nmodule.exports = class ABProcessTaskUserExternal extends (\n   ABProcessTaskUserExternalCore\n) {};\n","const ABProcessTaskUserFormCore = require(\"../../../core/process/tasks/ABProcessTaskUserFormCore.js\");\n\nmodule.exports = class ABProcessTaskUserForm extends (\n   ABProcessTaskUserFormCore\n) {};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTriggerCore = require(\"../../../core/process/tasks/ABProcessTriggerCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessTrigger extends ABProcessTriggerCore {};\n","const ABProcessTriggerLifecycleCore = require(\"../../../core/process/tasks/ABProcessTriggerLifecycleCore.js\");\n\nmodule.exports = class ABProcessTriggerLifecycle extends (\n   ABProcessTriggerLifecycleCore\n) {};\n","const ABProcessTriggerTimerCore = require(\"../../../core/process/tasks/ABProcessTriggerTimerCore.js\");\n\nconst START_URL = \"/process/timer/#id#/start\";\nconst STOP_URL = \"/process/timer/#id#/stop\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessTriggerTimer extends ABProcessTriggerTimerCore {\n   /**\n    * @method save()\n    * persist this instance of ABObject with it's parent ABApplication\n    * @return {Promise}\n    */\n   save() {\n      return (\n         Promise.resolve()\n            .then(() => super.save())\n            // Restart the timer\n            .then((result) => {\n               return this.AB.Network.put({\n                  url: (this.isEnabled ? START_URL : STOP_URL).replace(\n                     \"#id#\",\n                     this.id\n                  ),\n               });\n            })\n      );\n   }\n};\n","/*\n * ABQL\n *\n * An ABQL defines the base class for our AB Query Language Objects.\n * These classes share a common way to\n *   - parse input strings for commands\n *\n *\n */\nconst ABQLCore = require(\"../../core/ql/ABQLCore.js\");\nconst RowUpdater = require(\"../RowUpdater.js\").default;\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nclass ABQL extends ABQLCore {\n   constructor(attributes, parameterDefinitions, prevOP, task, AB) {\n      super(attributes, parameterDefinitions, prevOP, task, AB);\n\n      this.on(\"warning\", (message, data) => {\n         this._warnings.push({ message, data });\n      });\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      // const allColumns = row.getChildViews();\n      // allColumns.shift(); // remove selector\n      this.parameterDefinitions.forEach((pDef) => {\n         // const col = allColumns.shift();\n         const myID = this.uiID(id);\n\n         this.ids = this.toIDs(myID);\n         this.params = this.params ?? {};\n\n         let $uiCondition = null;\n\n         switch (pDef.type) {\n            case \"objectFields\":\n               this.params[pDef.name] = $$(this.ids.objectfields).getValue();\n\n               break;\n\n            case \"objectName\":\n               this.params[pDef.name] = $$(this.ids.objectname).getValue();\n\n               break;\n\n            case \"objectConditions\":\n            case \"objectValues\":\n               $uiCondition = $$(this.ids.condition);\n\n               if ($uiCondition) {\n                  const condition = $uiCondition.getValue();\n\n                  if (condition && condition !== \"\") {\n                     this.params[pDef.name] = JSON.parse(condition);\n                  }\n               }\n\n               break;\n\n            case \"taskParam\":\n               this.params[pDef.name] = $$(this.ids.taskparam).getValue();\n\n               break;\n         }\n      });\n   }\n\n   /*\n    * @method toIDs()\n    * generate a set of unique webix ids to use for our UI.\n    * @param {string} myID\n    *        the unique id generated by .uiID()\n    */\n   toIDs(myID) {\n      return {\n         condition: `${myID}_condition`,\n         objectfields: `${myID}_objectfields`,\n         objectname: `${myID}_objname`,\n         popup: `${myID}_popup`,\n         select: `${myID}_select`,\n         shorthand: `${myID}_shorthand`,\n         taskparam: `${myID}_taskparam`,\n         spacer: `${myID}_spacer`,\n      };\n   }\n\n   /**\n    * @method uiAddParamForDef()\n    * Add an operation parameter for each parameterDefinition we have defined.\n    * @param {obj} pDef\n    *        the current parameterDefinition entry we are creating the UI\n    *        for.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddParamForDef(pDef, id, ui) {\n      // params are added to a .col[] definition.\n      // if our ui isn't down to the current .col element, then drill down\n      if (!ui.cols) {\n         if (ui.rows) {\n            for (let i = 0; i < ui.rows.length; i++)\n               if (ui.rows[i].cols) {\n                  this.uiAddParamForDef(pDef, id, ui.rows[i]);\n\n                  break;\n               }\n         } else throw new Error(\"provided ui is not able to add a parameter!\");\n\n         return;\n      }\n\n      const paramUI = this.uiParamUI(pDef, id);\n\n      if (paramUI) {\n         // if we only have 1 param\n         if (this.parameterDefinitions.length === 1) {\n            ui.cols.pop();\n            ui.cols.push(paramUI);\n         }\n         // if we haven't already added a parameter\n         else {\n            // create a row stack of parameters:\n            if (ui.cols.length < 3)\n               ui.cols.push({\n                  rows: [paramUI],\n               });\n            // add to the current stack of parameters\n            else ui.cols[2].rows.push(paramUI);\n         }\n      }\n   }\n\n   /**\n    * @method uiAddNext()\n    * Add the next row selector for this operation:\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddNext(id, ui) {\n      const uiRow = this.uiNextRow(id);\n\n      // if we have a next operation defined, then add on the ui definitions\n      // for that operation:\n      if (this.next) {\n         this.next.uiAddParams(id, uiRow);\n         ui.rows.push(uiRow);\n         this.next.uiAddNext(id, ui);\n      }\n      // otherwise we just leave the selector:\n      else ui.rows.push(uiRow);\n   }\n\n   /**\n    * @method uiAddParams()\n    * Add operation parameter(s) for each parameterDefinition we have defined.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddParams(id, ui) {\n      this.parameterDefinitions.forEach((pDef) => {\n         this.uiAddParamForDef(pDef, id, ui);\n      });\n   }\n\n   /*\n    * @method uiID()\n    * generate a unique webix id for this operation.\n    * @param {string} id\n    *        the webix id of the base property.query holder\n    */\n   uiID(id) {\n      if (this.prevOP) return `${this.prevOP.uiID(id)}_${this.constructor.key}`;\n\n      return `${id}_${this.constructor.key}`;\n   }\n\n   /*\n    * uiXXX Operations:\n    * are UI building operations that are performed BEFORE the webix UI\n    * is generated.  They work by filling out a {ui} object definition\n    * that webix will eventually create into the DOM.\n    *\n    * viewXXX Operations:\n    * are UI building operations that are performed AFTER the webix UI\n    * is generated. They work by adding in child views to an existing\n    * DOM.\n    */\n\n   /**\n    * @method uiNextRow()\n    * return the webix UI definition for the next of UI chaining.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @return {obj}\n    */\n   uiNextRow(id) {\n      const nextOptions = this.NextQLOps ?? this.constructor.NextQLOps;\n      const options = nextOptions.map((op) => {\n         return { id: op.key, value: op.label };\n      });\n\n      options.unshift({ id: 0, value: L(\"choose next operation\") });\n\n      const myID = this.uiID(id);\n      const ids = this.toIDs(myID);\n\n      const uiRow = {\n         cols: [\n            {\n               id: ids.select,\n               view: \"select\",\n               value: this.next ? this.next.constructor.key : 0,\n               options: options,\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     const resetValue = () => {\n                        const select = $$(ids.select);\n\n                        select.blockEvent();\n                        select.setValue(oldValue);\n                        select.unblockEvent();\n                     };\n\n                     if (newValue === oldValue) return;\n\n                     const newOP = nextOptions.find(\n                        (op) => op.key === newValue\n                     );\n\n                     if (!newOP) {\n                        resetValue();\n\n                        return;\n                     }\n\n                     const thisRow = $$(ids.select).getParentView();\n                     const thisQuery = thisRow.getParentView();\n                     const addOP = () => {\n                        if (newOP) {\n                           const nextOP = new newOP(\n                              {},\n                              this,\n                              this.task,\n                              this.AB\n                           );\n\n                           this.next = nextOP;\n\n                           nextOP.viewAddParams(id, thisRow);\n                           nextOP.viewAddNext(id, thisQuery);\n                        }\n                     };\n\n                     // if there are rows after this one, then warn\n                     // about changing\n                     const allRows = thisQuery.getChildViews();\n\n                     if (allRows.length - 1 > allRows.indexOf(thisRow))\n                        webix.confirm({\n                           title: L(\"continue?\"),\n                           text: L(\n                              \"changing this rule will reset any following rules.\"\n                           ),\n                           ok: L(\"Yes\"),\n                           cancel: L(\"No\"),\n                           callback: (result) => {\n                              if (result) {\n                                 // remove the current additional Rows:\n                                 let ir = allRows.length - 1;\n\n                                 while (\n                                    allRows[ir].config.id !== thisRow.config.id\n                                 ) {\n                                    thisQuery.removeView(allRows[ir]);\n                                    ir--;\n                                 }\n\n                                 // now remove the parameters\n                                 const allCols = thisRow.getChildViews();\n\n                                 let ic = allCols.length;\n\n                                 while (ic > 1) {\n                                    thisRow.removeView(allCols[ic - 1]);\n                                    ic--;\n                                 }\n\n                                 addOP();\n                              } else resetValue();\n                           },\n                        });\n                     else addOP();\n                  },\n               },\n            },\n            {\n               id: ids.spacer,\n            },\n         ],\n      };\n\n      return uiRow;\n   }\n\n   uiNextRowSelectorRefresh(id) {\n      const $select = $$(this.ids.select);\n\n      if (!$select) return;\n\n      const uiNextRow = this.uiNextRow(id);\n\n      const uiNextCol =\n         uiNextRow.cols.filter((c) => c.id == $select.config.id)[0] ??\n         uiNextRow.cols[1];\n\n      if (uiNextCol) AB.Webix.ui(uiNextCol, $select);\n   }\n\n   /**\n    * @method uiParamUI()\n    * return the webix UI definition for the parameter entry of this current\n    * operation.\n    * @param {obj} pDef\n    *        the current parameterDefinition entry we are creating the UI\n    *        for.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @return {obj}\n    */\n   uiParamUI(pDef, id) {\n      const uiConfig = AB.Config.uiSettings();\n\n      let myID = this.uiID(id);\n\n      this.ids = this.toIDs(myID);\n\n      let paramUI = null;\n      let options = null;\n      let Filter = null;\n      let hashFieldIDs = null;\n      let initialCond = null;\n      let displayLabel = null;\n      let initialValue = null;\n      let Updater = null;\n      let popUp = null;\n\n      // now add the parameter\n      switch (pDef.type) {\n         case \"objectFields\":\n            // an objectFields parameter returns a select list of fields\n            // available on an Object.\n            if (this.object)\n               options = this.object.fields().map((f) => {\n                  return { id: f.id, value: f.label, icon: `fa fa-${f.icon}` };\n               });\n\n            options.unshift({\n               id: \"_PK\",\n               value: \"[PK]\",\n            });\n\n            // if not set, default .fieldID to the 1st entry in options\n            // so we will have a default.  In use, if a user sees the\n            // 1st item and continues on, then we will have chosen it.\n            if (!this.fieldID && options.length > 0) {\n               // act like it was selected:\n               this.params[pDef.name] = options[0].id;\n               this.paramChanged(pDef, id);\n            }\n\n            paramUI = {\n               id: this.ids.objectfields,\n               view: \"richselect\",\n               label: L(\"Field\"),\n               labelWidth: 70,\n               value: this.fieldID,\n               options: options,\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     // this.params = this.params ?? {};\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef, id);\n                     }\n                  },\n               },\n            };\n\n            break;\n\n         case \"objectName\":\n            // an objectName parameter returns a select list of available\n            // objects in this ABFactory.\n            options = this.AB.objects().map((o) => {\n               return { id: o.id, value: o.label };\n            });\n\n            if (!this.objectID && options.length > 0) {\n               this.objectID = options[0].id;\n               this.params[pDef.name] = this.objectID;\n               this.paramChanged(pDef);\n            }\n\n            paramUI = {\n               id: this.ids.objectname,\n               view: \"select\",\n               label: L(\"Data Source\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               value: this.objectID,\n               options: options,\n               on: {\n                  onChange: (newValue /*, oldValue */) => {\n                     this.params = this.params ?? {};\n\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef);\n                     }\n                  },\n               },\n            };\n\n            break;\n\n         case \"objectConditions\":\n            // objectConditions: returns a filter text summary, that when\n            // clicked, pops up a Filter Entry Popup.\n            // the actual value is stored in a hidden field.\n\n            // we will create a new FilterComplex() object to use for our\n            // filtering.\n            // Our goal is to create a special filter entry for each avaiable\n            // process data value that is available.\n            // A filter entry needs to look like:\n            // {\n            //     id: `{string}`,      // A unique id selector for this filter\n            //     name: `{string}`,    // the operation name displayed\n            //     type, {obj}          // an object defining the editor to show\n            //     fn: ()=>{}           // a function used for filtering elements\n            // }\n            //\n            // In our filters, we are assigning filters to EACH field by the\n            // field.id.  So the type definition needs to look like:\n            // {\n            //     \"uniqueID of the field (field.id)\" : {webixUI definition}\n            // }\n\n            Filter = this.AB.filterComplexNew(id);\n            hashFieldIDs = this.availableProcessDataFieldsHash();\n\n            if (this.object) {\n               Filter.fieldsLoad(this.object.fields(), this.object);\n               // NOTE: this will create default filters based upon the\n               // object fields() and their types\n\n               // Now we need to add in the Process Data Fields:\n               // for each Process Data Field that matches our same object\n               const foundFields = Object.keys(hashFieldIDs).map(\n                  (f) => hashFieldIDs[f]\n               );\n\n               Filter.processFieldsLoad(foundFields);\n               /*\n               (foundFields ?? []).forEach((processField) => {\n                  const type = {};\n                  if (processField.field) {\n                     type[processField.field.id] = {\n                        view: \"select\",\n                        options: [\n                           {\n                              id: \"empty\",\n                              value: \"choose option\"\n                           },\n                           {\n                              id: processField.key,\n                              value: `context(${processField.label})`\n                           }\n                        ]\n                     };\n                  } else {\n                     // if there is no .field, it is probably an embedded special field\n                     // like: .uuid\n                     const key = processField.key.split(\".\").pop();\n                     type[key] = {\n                        view: \"select\",\n                        options: [\n                           {\n                              id: \"empty\",\n                              value: \"choose option\"\n                           },\n                           {\n                              id: processField.key,\n                              value: `context(${processField.label})`\n                           }\n                        ]\n                     };\n                  }\n\n                  // add an \"equals\" and \"not equals\" filter for each:\n                  Filter.filterAdd([\n                     {\n                        id: `context_equals`,\n                        name: `equals`,\n                        type,\n                        fn: (a, b) => {\n                           return a === b;\n                        }\n                     },\n                     {\n                        id: `context_not_equal`,\n                        name: `not equals`,\n                        type,\n                        fn: (a, b) => {\n                           return a !== b;\n                        }\n                     }\n                  ]);\n\n               }); */\n            }\n\n            // every time the Filter \"saves\" it's data, it emits this event:\n            // take the given condition and store it in our hidden element.\n            Filter.on(\"save\", (condition) => {\n               // @param {obj} condition an object describing the filter\n               // condition.\n\n               this.params = this.params ?? {};\n               this.params[pDef.name] = condition;\n\n               const shortHand = $$(this.ids.shorthand);\n\n               shortHand.define({\n                  label: Filter.toShortHand(),\n               });\n               shortHand.refresh();\n\n               // NOTE: the hidden element is a text field, so convert the\n               // {condition object} => a string\n               const elCondition = $$(this.ids.condition);\n\n               elCondition.define({\n                  value: JSON.stringify(this.params[pDef.name]),\n               });\n               elCondition.refresh();\n            });\n\n            // create the initial condition value from our inputs.\n            initialCond = \"\";\n\n            if (this.params && this.params[pDef.name]) {\n               Filter.setValue(this.params[pDef.name]);\n               initialCond = JSON.stringify(this.params[pDef.name]);\n            } else {\n               Filter.setValue(null);\n            }\n\n            // what we show on the panel, is a text representation\n            // of the current condition.\n            displayLabel = Filter.toShortHand();\n\n            paramUI = {\n               rows: [\n                  {\n                     id: this.ids.shorthand,\n                     view: \"button\",\n                     label: displayLabel,\n                     on: {\n                        onItemClick: function () {\n                           Filter.popUp(this.$view, null, {\n                              pos: \"center\",\n                           });\n                        },\n                     },\n                  },\n                  // have a hidden field to contain the condition\n                  // value we will parse out later\n                  {\n                     id: this.ids.condition,\n                     view: \"text\",\n                     value: initialCond,\n                     hidden: true,\n                  },\n               ],\n            };\n\n            break;\n\n         case \"objectValues\":\n            // objectValues : shows a condenced textual representation of the\n            // field => value changes.  Clicking on the text will show a popup\n            // that allows you to add/remove additional field updates for\n            // the current object.\n\n            initialValue = \"\";\n            Updater = new RowUpdater(myID, this.AB);\n\n            if (this.object) Updater.objectLoad(this.object);\n\n            // Set processed data key to value options\n            Updater.setExtendedOptions(\n               (this.task.process.processDataFields(this.task) ?? []).map(\n                  (item) => {\n                     return {\n                        id: item.key,\n                        value: item.label,\n                     };\n                  }\n               )\n            );\n\n            // NOTE: .setValue() must be called once the RowUpdater is already\n            // displayed.  See the end of popUp() below:\n            if (this.params && this.params[pDef.name]) {\n               Updater.setValue(this.params[pDef.name]);\n               initialValue = JSON.stringify(this.params[pDef.name]);\n            }\n\n            popUp = () => {\n               // show the RowUpdater in a popup:\n               const ui = {\n                  id: this.ids.popup,\n                  view: \"popup\",\n                  position: \"center\",\n                  minWidth: 700,\n                  modal: true,\n                  resize: true,\n                  body: {\n                     rows: [\n                        {\n                           height: 30,\n                           borderless: true,\n                           cols: [\n                              { fillspace: true },\n                              {\n                                 view: \"button\",\n                                 value: \"X\",\n                                 width: 30,\n                                 click: () => {\n                                    $$(this.ids.popup).hide();\n                                 },\n                              },\n                           ],\n                        },\n                        Updater.ui(),\n                        {\n                           view: \"button\",\n                           value: L(\"Save\"),\n                           css: \"webix_primary\",\n                           click: () => {\n                              this.params = this.params ?? {};\n                              this.params[pDef.name] = Updater.getValue();\n                              const sh = $$(this.ids.shorthand);\n\n                              sh.define({\n                                 badge: this.params[pDef.name].length,\n                              });\n                              sh.refresh();\n\n                              const cond = $$(this.ids.condition);\n\n                              cond.define({\n                                 value: JSON.stringify(this.params[pDef.name]),\n                              });\n                              cond.refresh();\n\n                              $$(this.ids.popup).hide();\n                           },\n                        },\n                     ],\n                  },\n               };\n\n               // create and show the popup\n               this._myPopup = webix.ui(ui);\n               this._myPopup.show();\n\n               // NOTE: on a RowUpdater, the values need to be set\n               // AFTER it is displayed:\n               if (this.params && this.params[pDef.name])\n                  Updater.setValue(this.params[pDef.name]);\n            };\n\n            paramUI = {\n               rows: [\n                  // the textual shorthand for these values\n                  {\n                     id: this.ids.shorthand,\n                     view: \"button\",\n                     label: L(\"Update Popout\"),\n                     badge: this.params[pDef.name]?.length,\n                     on: {\n                        onItemClick: () => {\n                           popUp();\n                        },\n                     },\n                  },\n                  // the hidden field that contains the results\n                  {\n                     id: this.ids.condition,\n                     view: \"text\",\n                     value: initialValue,\n                     hidden: true,\n                  },\n               ],\n            };\n\n            break;\n\n         case \"taskParam\":\n            paramUI = {\n               id: this.ids.taskparam,\n               view: \"text\",\n               label: L(\"Variable\"),\n               labelWidth: 70,\n               value: this.params[pDef.name],\n               placeholder: L(\"Enter parameter name\"),\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     // this.params = this.params ?? {};\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef, id);\n                     }\n                  },\n               },\n            };\n\n            break;\n      }\n\n      return paramUI;\n   }\n\n   /**\n    * @method viewAddNext()\n    * Add the next selector row After this Operation:\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {webixNode} topView\n    *        the current webix node that needs this view added to\n    *        NOTE: this should be the top container that is adding a new\n    *        row for each operation.\n    */\n   viewAddNext(id, topView) {\n      const uiRow = this.uiNextRow(id);\n\n      topView.addView(uiRow);\n   }\n\n   /**\n    * @method viewAddParams()\n    * Add operation parameter(s) for each parameterDefinition we have defined.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {webixNode} rowView\n    *        the current webix node that needs this view added to\n    *        NOTE: this should be the ROW that the parameters are added to\n    */\n   viewAddParams(id, rowView) {\n      const params = [];\n\n      this.parameterDefinitions.forEach((pDef) => {\n         // get the definition from .uiParamUI()\n         params.push(this.uiParamUI(pDef, id));\n      });\n\n      let toInsert = null;\n\n      // stack parameters in a row if there are more than 1\n      if (params.length > 1)\n         toInsert = {\n            rows: params,\n         };\n      else toInsert = params.pop();\n\n      if (toInsert) {\n         rowView.removeView(rowView.getChildViews()[1]);\n         rowView.addView(toInsert);\n      }\n   }\n\n   warnings() {\n      let myWarnings = this._warnings || [];\n      if (this.next)\n         myWarnings = myWarnings.concat(this.next.warnings()).filter((w) => w);\n      return this.AB.uniq(myWarnings);\n   }\n\n   warningsEval() {\n      this._warnings = [];\n      if (this.next) this.next.warningsEval();\n   }\n\n   // warningsAll() {\n   //    let myWarnings = this.warnings();\n   //    if (this.next) {\n   //       myWarnings = myWarnings.concat(this.next.warningsAll());\n   //    }\n   //    return myWarnings;\n   // }\n\n   /**\n    * @method warningMessage(message)\n    * Save a warning message in a common format for our ProcessTasks.\n    */\n   warningMessage(message) {\n      // this.emit(\"warning\", `${this.key}: ${message}`);\n      this._warnings = this._warnings || [];\n      this._warnings.push({ message: `${this.key}: ${message}` });\n   }\n\n   ////\n   //// QueryString Parser routines:\n   ////\n}\n\nmodule.exports = ABQL;\n","/*\n * ABQLFind\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\nconst ABQLFindCore = require(\"../../core/ql/ABQLFindCore.js\");\n\nclass ABQLFind extends ABQLFindCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, ParameterDefinitions, prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLFind;\n","/*\n * ABQLManager\n *\n * An interface for managing the different ABQL Operations available in our\n * AppBuilder.\n *\n */\n\nconst ABQLManagerCore = require(\"../../core/ql/ABQLManagerCore.js\");\nconst ABQLRootObject = require(\"./ABQLRootObject.js\");\n\nconst ABQLManager = {\n   /**\n    * @method fromAttributes()\n    * return an {ABQL} object that represents the given attributes that\n    * were saved from the previous .toObj()\n    * @param {object} attributes\n    *\t\t  the values returned from the previous .toObj() call\n    * @param {ABProcessTask***} task\n    *\t\t  the current ABProcessTaskServiceQuery that contains this QL\n    * @param {ABFactory} AB\n    *\t\t  the current {ABFactory} active for this interface.\n    * @return {ABQL} | null\n    */\n   fromAttributes: ABQLManagerCore.fromAttributes,\n\n   /**\n    * @method ids()\n    * return a set of unique webix ids for the ui portions of this object.\n    * @param {string} id\n    *\t\t  the webix base id of the parameters panel.\n    * @return {object}\n    */\n   ids: (id) => {\n      return {\n         root: `${id}_root`,\n         select: `${id}_root_select`,\n         options: `${id}_root_options`,\n      };\n   },\n\n   /**\n    * @method builder\n    * return a UI component like object that will display the QL builder.\n    * The component will support:\n    *\t\t.ui(id) : returns a webix ui definition for the current builder\n    *\t\t.init(id) : performs any special actions to prepare the webix ui\n    * @param {object} rootOP\n    *\t\t  the root ABQLxxxx operation\n    * @param {ABProcessTask***} task\n    *\t\t  the current Process Task that is requesting the data.\n    * @param {ABFactory} AB\n    *\t\t  the {ABFactory} active for this display.\n    * @return {object}\n    */\n   builder: (rootOP, task, AB) => {\n      // const rootOP = this.fromAttributes(attributes, task, AB);\n      // const L = (...params) => AB.Multilingual.label(...params);\n\n      return {\n         ui: (id) => {\n            rootOP = rootOP ?? new ABQLRootObject({}, task, AB);\n\n            const ids = ABQLManager.ids(id);\n            const ui = {\n               rows: [\n                  {\n                     id: ids.root,\n                     cols: [],\n                  },\n               ],\n            };\n\n            rootOP.uiAddParams(id, ui);\n            rootOP.uiAddNext(id, ui);\n\n            return ui;\n         },\n         init: (id) => {},\n      };\n   },\n\n   /**\n    * @method parse\n    * step through the current properties panel and decode the QL objects\n    * and their parameters.\n    * Return the .toOBJ() attributes definition as a result.\n    * @param {string} id\n    *\t\t  the webix base id of the parameters panel.\n    * @param {ABProcessTask***} task\n    *\t\t  the current Process Task that is requesting the data.\n    * @param {ABFactory} AB\n    *\t\t  the {ABFactory} object that is currently active.\n    * @return {object}\n    */\n   parse: (id, task, AB) => {\n      const ids = ABQLManager.ids(id);\n      const root = $$(ids.root);\n\n      if (!root) {\n         console.warn(\"ABQLManager.parse(): unable to find root element\");\n\n         return;\n      }\n\n      // get all the input rows\n      const rows = root.getParentView().getChildViews();\n\n      const parseCurrent = (rows, options, prevOP) => {\n         if (rows.length === 0) return null;\n\n         const row = rows.shift();\n\n         // get which operation was selected\n         // find the operation selector (skip any indents)\n         const views = row.getChildViews();\n\n         let selector = views.shift();\n\n         while (!selector?.getValue) selector = views.shift();\n\n         const value = selector.getValue();\n\n         // figure out the QLOP object\n         const OP = options.find((o) => {\n            return o.key === value || o.key === ABQLRootObject.key;\n         });\n\n         if (OP) {\n            let currOP = null;\n\n            if (prevOP) currOP = new OP({}, prevOP, task, AB);\n            else currOP = new OP({}, task, AB);\n\n            // now get currOP to initialize from it's parameters:\n            currOP.parseRow(row, id);\n\n            // carry forward any .object info if not already established\n            // by the .parseRow():\n            if (!currOP.object && prevOP) {\n               currOP.object = prevOP.object;\n               currOP.objectID = currOP.object?.id ?? null;\n            }\n\n            const nextRow = parseCurrent(\n               rows,\n               currOP.NextQLOps ?? currOP.constructor.NextQLOps,\n               currOP\n            );\n\n            currOP.next = nextRow;\n\n            return currOP;\n         }\n\n         return null;\n      };\n\n      const operation = parseCurrent(rows, ABQLManagerCore.QLOps, null);\n\n      return operation;\n   },\n};\n\nmodule.exports = ABQLManager;\n","/*\n * ABQLRootObject\n *\n * An ABQL defines a Query Language Operation. A QL Operation\n * is intended to be evaluated at run time and return a value that can be\n * assigned to form value or an object.\n *\n *\n */\n\nconst ABQLRootObjectCore = require(\"../../core/ql/ABQLRootObjectCore.js\");\n\nclass ABQLObject extends ABQLRootObjectCore {\n   // constructor(attributes, task, application) {\n   //     // NOTE: keep this so we can insert the prevOp === null\n   //     super(attributes, ParameterDefinitions, null, task, application);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"name\") {\n         this.objectID = this.params[pDef.name];\n         this.object = this.objectLookup(this.objectID);\n\n         // ?? is this correct?\n         // if we already have created a .next operation, and we have\n         // just changed our .object, pass that information forward.\n         if (this.next) this.next.object = this.object;\n      }\n   }\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      // for an Object operation, we need to set our .objectID after\n      // the values are parsed.\n\n      if (this.params.name) {\n         this.objectID = this.params.name;\n         this.object = this.objectLookup(this.params.name);\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (!this.object) {\n         this.warningMessage(\"has no object set.\", {\n            objectID: this.objectID,\n         });\n      }\n   }\n}\n\nmodule.exports = ABQLObject;\n","const ABQLRowPluckCore = require(\"../../core/ql/ABQLRowPluckCore.js\");\n\nclass ABQLRowPluck extends ABQLRowPluckCore {\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef, id) {\n      super.paramChanged(pDef);\n\n      // Re-generate next select options\n      if (pDef.name === \"fieldID\") this.uiNextRowSelectorRefresh(id);\n   }\n}\n\nmodule.exports = ABQLRowPluck;\n","/*\n * ABQLRowSave\n *\n * An ABQLRowSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLRowSaveCore = require(\"../../core/ql/ABQLRowSaveCore.js\");\n\nclass ABQLRowSave extends ABQLRowSaveCore {\n   paramChanged(pDef, id) {\n      super.paramChanged(pDef);\n   }\n}\n\nmodule.exports = ABQLRowSave;\n","/*\n * ABQLRowUpdate\n *\n * An ABQLRow Update allows you to update the values on the current\n * Row of data.\n *\n */\n\nconst ABQLRowUpdateCore = require(\"../../core/ql/ABQLRowUpdateCore.js\");\n\nclass ABQLRowUpdate extends ABQLRowUpdateCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, ParameterDefinitions, prevOP, task, application);\n   //     // #Hack! : when an Operation provides the same .NextQlOps that it\n   //     // was defined in, we can't require it again ==> circular dependency.\n   //     // so we manually set it here from the operation that created us:\n   //     this.constructor.NextQLOps = prevOP.constructor.NextQLOps;\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLRowUpdate;\n","/*\n * ABQLSetFirst\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQLSetFirstCore = require(\"../../core/ql/ABQLSetFirstCore.js\");\n\nclass ABQLSetFirst extends ABQLSetFirstCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLSetFirst;\n","/*\n * ABQLSetPluck\n *\n * An ABQLSetPluck can process a set (array) of data and pluck out a specified\n * field from each row to then make an array of values that only contain that \n * field.\n * \n * Example: \narray = [\n {\n\tname: \"Neo\",\n\temail: \"neo@thematrix.com\",\n\trelationships: [ { morpheous}, {trinity} ]\n },\n {\n\tname: \"trinity\",\n\temail: \"trinity@thematrix.com\",\n\trelationships: [ {neo}, {morpheous} ]\n },\n {\n\tname: \"morpheous\",\n\temail: \"morpheous@thematrix.com\",\n\trelationships: [ {neo}, {trinity}]\n }\n\n]\n\npluck(\"email\") :\n\t[\n\t\t\"neo@thematrix.com\",\n\t\t\"trinity@thematrix.com\",\n\t\t\"morpheous@thematrix.com\"\n\t]\n\npluck(\"relationships\"):\n\t[\n\t\t{neo},\n\t\t{trinity},\n\t\t{morpheous}\n\t]\n *\n */\n\nconst ABQLSetPluckCore = require(\"../../core/ql/ABQLSetPluckCore.js\");\n\nclass ABQLSetPluck extends ABQLSetPluckCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"fieldID\") {\n         // debugger;\n         this.fieldID = this.params[pDef.name];\n         // v2 method:\n         // this.field = this.object.fieldByID(this.fieldID);\n         this.field = this.object.fieldByID(this.fieldID);\n\n         // v2 method:\n         // if (this.field && this.field.isConnected) {\n         if (this.field && this.field.key === \"connectObject\") {\n            this.objectOut = this.field.datasourceLink;\n            this.objectOutID = this.objectOut.id;\n\n            // ?? is this correct?\n            // if we already have created a .next operation, and we have\n            // just changed our .object, pass that information forward.\n            if (this.next) this.next.object = this.objectOut;\n         }\n      }\n   }\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * NOTE: in this process our .object and .objectOut isn't as simple\n    * as the other QL node types.  We'll have to interpolate our values\n    * from the given fieldID in our property panel.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      this.fieldID = this.params.fieldID;\n\n      // we now have to build backwards from the current fieldID to set our\n      // relevant .object and .objectOut\n      this.AB.objects((o) => {\n         if (!this.field) {\n            // const field = o.fieldByID(this.fieldID);\n            const field = o.fieldByID(this.fieldID);\n\n            if (field) this.field = field;\n         }\n      });\n\n      if (this.field) {\n         this.object = this.field.object;\n\n         // v2 method:\n         // if (this.field.isConnected) {\n         if (this.field && this.field.key === \"connectObject\") {\n            this.objectOut = this.field.datasourceLink;\n            this.objectOutID = this.objectOut.id;\n         }\n      }\n   }\n}\n\nmodule.exports = ABQLSetPluck;\n","/*\n * ABQLSetSave\n *\n * An ABQLSetSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLSetSaveCore = require(\"../../core/ql/ABQLSetSaveCore.js\");\n\nclass ABQLSetSave extends ABQLSetSaveCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"task_param\") {\n         this.taskParam = this.params[pDef.name];\n      }\n   }\n\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      this.taskParam = this.params[\"task_param\"];\n\n      if (!this.registered) {\n         this.task.registerDatasource(this);\n         this.registered = true;\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (!this.taskParam || this.taskParam === \"\") {\n         this.warningMessage(\"requires a name to save our data as.\");\n      }\n   }\n}\n\nmodule.exports = ABQLSetSave;\n","const ABViewCore = require(\"../../core/views/ABViewCore.js\");\nconst ABViewComponent = require(\"./viewComponent/ABViewComponent\").default;\n\nmodule.exports = class ABView extends ABViewCore {\n   // constructor(attributes, application, parent) {\n   //    super(attributes, application, parent);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewComponent(this);\n   }\n\n   /*\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      // views not allowed to drop onto this View:\n      var viewsToIgnore = [\n         \"view\",\n         \"page\",\n         \"formpanel\",\n         \"viewcontainer\",\n         // not allowed Detail's widgets\n         \"detailcheckbox\",\n         \"detailcustom\",\n         \"detailconnect\",\n         \"detailimage\",\n         \"detailselectivity\",\n         \"detailtext\",\n         \"detailtree\",\n         // not allowed Form's widgets\n         \"button\",\n         \"checkbox\",\n         \"connect\",\n         \"datepicker\",\n         \"fieldcustom\",\n         \"textbox\",\n         \"numberbox\",\n         \"selectsingle\",\n         \"selectmultiple\",\n         \"formtree\",\n         \"fieldreadonly\",\n         // not allowed Chart's Widgets\n         \"pie\",\n         \"bar\",\n         \"line\",\n         \"area\",\n         // not allowed Report page\n         \"report\",\n         \"reportPage\",\n         \"reportPanel\",\n      ];\n\n      var allComponents = this.application.viewAll(); // ABViewManager.allViews();\n      var allowedComponents = allComponents.filter((c) => {\n         return viewsToIgnore.indexOf(c.common().key) == -1;\n      });\n\n      return allowedComponents;\n   }\n\n   changePage(pageId) {\n      this.emit(\"changePage\", pageId);\n   }\n\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = super.warningsAll();\n      this.views().forEach((v) => {\n         allWarnings = allWarnings.concat(v.warningsAll());\n      });\n\n      (this.pages?.() || []).forEach((p) => {\n         allWarnings = allWarnings.concat(p.warningsAll());\n      });\n\n      return allWarnings.filter((w) => w);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      (this.__missingViews || []).forEach((id) => {\n         this.warningsMessage(`references unknown View[${id}]`);\n      });\n\n      allViews.forEach((v) => {\n         v.warningsEval();\n      });\n\n      // if a datacollection is specified, verify it can be accessed.\n      if (this.settings.dataviewID) {\n         let dc = this.datacollections || this.datacollection;\n         if (!dc) {\n            this.warningsMessage(\n               `references unknown dataviewID[${this.settings.dataviewID}]`\n            );\n         }\n      }\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `${this.key}[${this.name}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABViewCSVExporterCore = require(\"../../core/views/ABViewCSVExporterCore\");\nconst ABViewCSVExporterComponent = require(\"./viewComponent/ABViewCSVExporterComponent\");\n\nmodule.exports = class ABViewCSVExporter extends ABViewCSVExporterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewCSVExporterComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewCSVImporterCore = require(\"../../core/views/ABViewCSVImporterCore\");\nconst ABViewCSVImporterComponent = require(\"./viewComponent/ABViewCSVImporterComponent\");\n\nmodule.exports = class ABViewCSVImporter extends ABViewCSVImporterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component(idBase) {\n      return new ABViewCSVImporterComponent(this, idBase);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (!this.settings.availableFieldIds?.length) {\n         this.warningsMessage(\"has no fields set for matching import data\");\n      }\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewCarouselComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewCarousel_${baseView.id}`,\n         Object.assign(\n            {\n               carousel: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_doOnShow = () => {\n         this.onShow();\n      };\n\n      this._handler_doReload = () => {\n         // this.datacollection?.reloadData();\n      };\n\n      this._handler_doFilter = (fnFilter, filterRules) => {\n         // NOTE: fnFilter is depreciated and will be removed.\n\n         // this.onShow(filterRules);\n         const dv = this.datacollection;\n\n         if (!dv) return;\n\n         dv.filterCondition(filterRules);\n         dv.reloadData();\n      };\n\n      this._handler_busy = () => {\n         this.busy();\n      };\n\n      this._handler_ready = () => {\n         this.ready();\n      };\n   }\n\n   ui() {\n      const ids = this.ids;\n\n      const baseView = this.view;\n\n      this.filterUI = baseView.filterHelper; // component(/* App, idBase */);\n      this.linkPage = baseView.linkPageHelper.component(/* App, idBase */);\n\n      const spacer = {};\n      const settings = this.settings;\n\n      if (settings.width === 0)\n         Object.assign(spacer, {\n            width: 1,\n         });\n\n      const _ui = super.ui([\n         {\n            borderless: true,\n            cols: [\n               spacer, // spacer\n               {\n                  borderless: true,\n                  rows: [\n                     this.filterUI.ui(), // filter UI\n                     {\n                        id: ids.carousel,\n                        view: \"carousel\",\n                        cols: [],\n                        width: settings.width,\n                        height: settings.height,\n                        navigation: {\n                           items: !settings.hideItem,\n                           buttons: !settings.hideButton,\n                           type: settings.navigationType,\n                        },\n                        on: {\n                           onShow: () => {\n                              const activeIndex = $$(\n                                 ids.carousel\n                              ).getActiveIndex();\n\n                              this.switchImage(activeIndex);\n                           },\n                        },\n                     },\n                  ],\n               },\n               spacer, // spacer\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // make sure each of our child views get .init() called\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) {\n         AB.notify.builder(`Datacollection is ${dv}`, {\n            message: \"This is an invalid datacollection\",\n         });\n\n         return;\n      }\n\n      const object = dv.datasource;\n\n      if (!object) {\n         AB.notify.developer(`Object is ${dv}`, {\n            message: \"This is an invalid object\",\n         });\n\n         return;\n      }\n\n      dv.removeListener(\"loadData\", this._handler_doOnShow);\n      dv.on(\"loadData\", this._handler_doOnShow);\n\n      dv.removeListener(\"update\", this._handler_doReload);\n      dv.on(\"update\", this._handler_doReload);\n\n      dv.removeListener(\"delete\", this._handler_doReload);\n      dv.on(\"delete\", this._handler_doReload);\n\n      dv.removeListener(\"create\", this._handler_doReload);\n      dv.on(\"create\", this._handler_doReload);\n\n      dv.removeListener(\"initializingData\", this._handler_busy);\n      dv.on(\"initializingData\", this._handler_busy);\n\n      dv.removeListener(\"initializedData\", this._handler_ready);\n      dv.on(\"initializedData\", this._handler_ready);\n\n      if (this.settings.filterByCursor) {\n         [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n            dv.removeListener(key, this._handler_doOnShow);\n            dv.on(key, this._handler_doOnShow);\n         });\n      }\n\n      const baseView = this.view;\n\n      // filter helper\n      baseView.filterHelper.objectLoad(object);\n      baseView.filterHelper.viewLoad(this);\n\n      this.filterUI.init(this.AB);\n      this.filterUI.removeListener(\"filter.data\", this._handler_doFilter);\n      this.filterUI.on(\"filter.data\", this._handler_doFilter);\n\n      // link page helper\n      this.linkPage.init({\n         view: baseView,\n         datacollection: dv,\n      });\n\n      // set data-cy\n      const $carouselView = $$(this.ids.carousel)?.$view;\n\n      if ($carouselView) {\n         $carouselView.setAttribute(\n            \"data-cy\",\n            `${baseView.key} ${baseView.id}`\n         );\n         $carouselView\n            .querySelector(\".webix_nav_button_prev\")\n            ?.firstElementChild?.setAttribute(\n               \"data-cy\",\n               `${baseView.key} button previous ${baseView.id}`\n            );\n         $carouselView\n            .querySelector(\".webix_nav_button_next\")\n            ?.firstElementChild?.setAttribute(\n               \"data-cy\",\n               `${baseView.key} button next ${baseView.id}`\n            );\n      }\n   }\n\n   /**\n    * @method detatch()\n    * Will make sure all our handlers are removed from any object\n    * we have attached them to.\n    *\n    * You'll want to call this in situations when we are dynamically\n    * creating and recreating instances of the same Widget (like in\n    * the ABDesigner).\n    */\n   detatch() {\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      dv.removeListener(\"loadData\", this._handler_doOnShow);\n\n      if (this._handler_doReload) {\n         dv.removeListener(\"update\", this._handler_doReload);\n         dv.removeListener(\"delete\", this._handler_doReload);\n         dv.removeListener(\"create\", this._handler_doReload);\n      }\n\n      dv.removeListener(\"initializingData\", this._handler_busy);\n\n      dv.removeListener(\"initializedData\", this._handler_ready);\n\n      if (this.settings.filterByCursor)\n         [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n            dv.removeListener(key, this._handler_doOnShow);\n         });\n\n      this.filterUI.removeListener(\"filter.data\", this._handler_doOnShow);\n   }\n\n   myTemplate(row) {\n      if (row?.src) {\n         const settings = this.settings;\n\n         return `<div class=\"ab-carousel-image-container\">\n            <link rel=\"preload\" href=\"${\n               row.src\n            }\" as=\"image\" fetchpriotity=\"low\"/>\n            <img id=\"${this.ids.component}-${row.id}\" src=\"${\n            row.src\n         }\" class=\"content\" ondragstart=\"return false\" loading=\"lazy\" />\n            ${\n               settings.showLabel\n                  ? `<div class=\"ab-carousel-image-title\">${\n                       row.label || \"\"\n                    }</div>`\n                  : \"\"\n            }\n            <div class=\"ab-carousel-image-icon\">\n            ${\n               settings.detailsPage || settings.detailsTab\n                  ? `<span ab-row-id=\"${row.id}\" class=\"ab-carousel-detail webix_icon fa fa-eye\"></span>`\n                  : \"\"\n            }\n            ${\n               settings.editPage || settings.editTab\n                  ? `<span ab-row-id=\"${row.id}\" class=\"ab-carousel-edit webix_icon fa fa-pencil\"></span>`\n                  : \"\"\n            }\n            <span class=\"webix_icon ab-carousel-zoom-in fa fa-search-plus\"></span>\n            <span class=\"webix_icon ab-carousel-zoom-out fa fa-search-minus\"></span>\n                  <span ab-row-id=\"${row.id}\" ab-img-file=\"${\n            row.imgFile\n         }\" class=\"webix_icon ab-carousel-rotate-left fa fa-rotate-left\"></span>\n               <span ab-row-id=\"${row.id}\" ab-img-file=\"${\n            row.imgFile\n         }\" class=\"webix_icon ab-carousel-rotate-right fa fa-rotate-right\"></span>\n               <span class=\"webix_icon ab-carousel-fullscreen fa fa-arrows-alt\"></span>\n               <span style=\"display: none;\" class=\"webix_icon ab-carousel-exit-fullscreen fa fa-times\"></span>\n            </div>\n         </div>`;\n      }\n      // empty image\n      else return \"\";\n   }\n\n   busy() {\n      const $carousel = $$(this.ids.carousel);\n\n      $carousel?.disable();\n      $carousel?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      const $carousel = $$(this.ids.carousel);\n\n      $carousel?.enable();\n      $carousel?.hideProgress?.();\n   }\n\n   async switchImage(currentPosition) {\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      // Check want to load more images\n      if (\n         currentPosition >= this._imageCount - 1 && // check last image\n         dv.totalCount > this._rowCount\n      ) {\n         // loading cursor\n         this.busy();\n\n         try {\n            await dv.loadData(this._rowCount || 0);\n         } catch (err) {\n            this.AB.notify.developer(err, {\n               message:\n                  \"ABViewCarousel:switchImage():Error when load data from a Data collection\",\n            });\n         }\n\n         this.ready();\n      }\n   }\n\n   onShow(fnFilter = this.filterUI.getFilter()) {\n      const ids = this.ids;\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const obj = dv.datasource;\n\n      if (!obj) return;\n\n      const field = this.view.imageField;\n\n      if (!field) return;\n\n      if (dv.dataStatus == dv.dataStatusFlag.notInitial) {\n         // load data when a widget is showing\n         dv.loadData();\n\n         // it will call .onShow again after dc loads completely\n         return;\n      }\n\n      const settings = this.settings;\n\n      let rows = dv.getData(fnFilter);\n\n      // Filter images by cursor\n      if (settings.filterByCursor) {\n         const cursor = dv.getCursor();\n\n         if (cursor)\n            rows = rows.filter(\n               (r) =>\n                  (r[obj.PK()] || r.id || r) ===\n                  (cursor[obj.PK()] || cursor.id || cursor)\n            );\n      }\n\n      const images = [];\n\n      rows.forEach((r) => {\n         const imgFile = r[field.columnName];\n\n         if (imgFile) {\n            const imgData = {\n               id: r.id,\n               src: `/file/${imgFile}`,\n               imgFile,\n            };\n\n            // label of row data\n            if (settings.showLabel) imgData.label = obj.displayData(r);\n\n            images.push({\n               css: \"image\",\n               borderless: true,\n               template: (...params) => {\n                  return this.myTemplate(...params);\n               },\n               data: imgData,\n            });\n         }\n      });\n\n      const ab = this.AB;\n\n      // insert the default image to first item\n      if (field.settings.defaultImageUrl)\n         images.unshift({\n            css: \"image\",\n            template: (...params) => this.myTemplate(...params),\n            data: {\n               id: ab.uuid(),\n               src: `/file/${field.settings.defaultImageUrl}`,\n               label: this.label(\"Default image\"),\n            },\n         });\n\n      // empty image\n      if (images.length < 1)\n         images.push({\n            rows: [\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  height: settings.height,\n                  label: \"<div style='display: block; font-size: 180px; background-color: #666; color: transparent; text-shadow: 0px 1px 1px rgba(255,255,255,0.5); -webkit-background-clip: text; -moz-background-clip: text; background-clip: text;' class='fa fa-picture-o'></div>\",\n               },\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  label: this.label(\"No image\"),\n               },\n            ],\n         });\n\n      // store total of rows\n      this._rowCount = rows.length;\n\n      // store total of images\n      this._imageCount = images.length;\n\n      const $carousel = $$(ids.carousel);\n      const abWebix = ab.Webix;\n\n      if ($carousel) {\n         // re-render\n         abWebix.ui(images, $carousel);\n\n         // add loading cursor\n         abWebix.extend($carousel, abWebix.ProgressBar);\n\n         // link pages events\n         const editPage = settings.editPage;\n         const detailsPage = settings.detailsPage;\n\n         // if (detailsPage || editPage) {\n         $carousel.$view.onclick = async (e) => {\n            if (e.target.className) {\n               if (e.target.className.indexOf(\"ab-carousel-edit\") > -1) {\n                  abWebix.html.removeCss($carousel.getNode(), \"fullscreen\");\n                  abWebix.fullscreen.exit();\n                  let rowId = e.target.getAttribute(\"ab-row-id\");\n                  this.linkPage.changePage(editPage, rowId);\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-detail\") > -1\n               ) {\n                  abWebix.html.removeCss($carousel.getNode(), \"fullscreen\");\n                  abWebix.fullscreen.exit();\n                  let rowId = e.target.getAttribute(\"ab-row-id\");\n                  this.linkPage.changePage(detailsPage, rowId);\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-fullscreen\") > -1\n               ) {\n                  $carousel.define(\"css\", \"fullscreen\");\n                  abWebix.fullscreen.set(ids.carousel, {\n                     head: {\n                        view: \"toolbar\",\n                        css: \"webix_dark\",\n                        elements: [\n                           {},\n                           {\n                              view: \"icon\",\n                              icon: \"fa fa-times\",\n                              click: function () {\n                                 abWebix.html.removeCss(\n                                    $carousel.getNode(),\n                                    \"fullscreen\"\n                                 );\n                                 abWebix.fullscreen.exit();\n                              },\n                           },\n                        ],\n                     },\n                  });\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-rotate-left\") > -1\n               ) {\n                  const rowId = e.target.getAttribute(\"ab-row-id\");\n                  const imgFile = e.target.getAttribute(\"ab-img-file\");\n                  this.rotateImage(rowId, imgFile, field, \"left\");\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-rotate-right\") > -1\n               ) {\n                  const rowId = e.target.getAttribute(\"ab-row-id\");\n                  const imgFile = e.target.getAttribute(\"ab-img-file\");\n                  this.rotateImage(rowId, imgFile, field, \"right\");\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-zoom-in\") > -1\n               ) {\n                  this.zoom(\"in\");\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-zoom-out\") > -1\n               ) {\n                  this.zoom(\"out\");\n               }\n            }\n         };\n      }\n   }\n\n   showFilterPopup($view) {\n      this.filterUI.showPopup($view);\n   }\n\n   async rotateImage(rowId, imgFile, field, direction = \"right\") {\n      this.busy();\n\n      // call api to rotate\n      if (direction == \"left\") await field.rotateLeft(imgFile);\n      else await field.rotateRight(imgFile);\n\n      // refresh image\n      const imgElm = document.getElementById(`${this.ids.component}-${rowId}`);\n      if (imgElm) {\n         await fetch(imgElm.src, { cache: \"reload\", mode: \"no-cors\" });\n         imgElm.src = `${imgElm.src}#${new Date().getTime()}`;\n      }\n\n      this.ready();\n   }\n\n   zoom(inOrOut = \"in\") {\n      const imgContainer = document.getElementsByClassName(\n         \"ab-carousel-image-container\"\n      )[0];\n      if (!imgContainer) return;\n\n      const imgElem = imgContainer.getElementsByTagName(\"img\")[0];\n      if (!imgElem) return;\n\n      const step = 15;\n      const height = parseInt(\n         (imgElem.style.height || 100).toString().replace(\"%\", \"\")\n      );\n      const newHeight = inOrOut == \"in\" ? height + step : height - step;\n      imgElem.style.height = `${newHeight}%`;\n\n      imgContainer.style.overflow = newHeight > 100 ? \"auto\" : \"\";\n   }\n}\n","const ABViewCarouselCore = require(\"../../core/views/ABViewCarouselCore\");\nimport ABViewCarouselComponent from \"./viewComponent/ABViewCarouselComponent\";\n\n// const ABViewPropertyFilterData = require(\"./viewProperties/ABViewPropertyFilterData\");\n// const ABViewPropertyLinkPage = require(\"./viewProperties/ABViewPropertyLinkPage\");\n\nimport ABViewPropertyFilterData from \"./viewProperties/ABViewPropertyFilterData\";\nimport ABViewPropertyLinkPage from \"./viewProperties/ABViewPropertyLinkPage\";\n\nlet PopupCarouselFilterMenu = null;\n\nexport default class ABViewCarousel extends ABViewCarouselCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // filter property\n      this.filterHelper.fromSettings(this.settings.filter);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      var dv = this.datacollection;\n      if (dv) {\n         this.filterHelper.objectLoad(dv.datasource);\n         this.filterHelper.fromSettings(this.settings.filter);\n      }\n\n      return new ABViewCarouselComponent(this);\n   }\n\n   get idBase() {\n      return `ABViewCarousel_${this.id}`;\n   }\n\n   get filterHelper() {\n      if (this.__filterHelper == null)\n         this.__filterHelper = new ABViewPropertyFilterData(\n            this.AB,\n            this.idBase\n         );\n\n      return this.__filterHelper;\n   }\n\n   get linkPageHelper() {\n      if (this.__linkPageHelper == null)\n         this.__linkPageHelper = new ABViewPropertyLinkPage();\n\n      return this.__linkPageHelper;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let field = this.imageField;\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve image field[${this.settings.field}]`\n         );\n      }\n   }\n}\n","const ABViewChartCore = require(\"../../core/views/ABViewChartCore\");\nconst ABViewChartComponent = require(\"./viewComponent/ABViewChartComponent\");\n\nmodule.exports = class ABViewChart extends ABViewChartCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartComponent(this);\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n      this.refreshData();\n   }\n\n   getDCChart() {\n      if (!this._dcChart) this._dcChart = new webix.DataCollection();\n\n      return this._dcChart;\n   }\n\n   refreshData() {\n      const dc = this.datacollection;\n      if (dc == null) return this.dcChart;\n\n      const labelCol = this.labelField();\n      const valueCol = this.valueField();\n      const valueCol2 = this.valueField2();\n\n      if (!labelCol || !valueCol) return this.dcChart;\n\n      // const labelColName = labelCol.columnName;\n      const numberColName = valueCol.columnName;\n\n      let numberColName2 = \"\";\n\n      if (this.settings.multipleSeries && valueCol2) {\n         numberColName2 = valueCol2.columnName;\n      }\n\n      const colorList = [\n         \"#ee4339\",\n         \"#ee9336\",\n         \"#eed236\",\n         \"#d3ee36\",\n         \"#a7ee70\",\n         \"#58dccd\",\n         \"#36abee\",\n         \"#476cee\",\n         \"#a244ea\",\n         \"#e33fc7\",\n      ];\n\n      const dInfo = dc.getData();\n\n      let results = [];\n      let sumData = {};\n      let sumNumber = 0;\n      let sumNumber2 = 0;\n      let countNumber = dInfo.length;\n\n      dInfo.forEach((item) => {\n         const labelKey = labelCol.format(item) || item.id;\n\n         let numberVal = parseFloat(item[numberColName] || 0);\n         let numberVal2 = null;\n\n         if (this.settings.multipleSeries)\n            numberVal2 = parseFloat(item[numberColName2]) || 0;\n\n         switch (valueCol.key) {\n            //Formula Datatype\n            case \"formula\":\n               numberVal = valueCol.format(item);\n\n               break;\n\n            //Calcualte Datatype\n            case \"calculate\":\n               numberVal = parseFloat(\n                  valueCol.constructor.convertToJs(\n                     valueCol.object,\n                     valueCol.settings.formula,\n                     item,\n                     valueCol.settings.decimalPlaces\n                  )\n               );\n\n               break;\n\n            default:\n               break;\n         }\n\n         if (sumData[labelKey] == null) {\n            let label = labelKey;\n\n            // Get label of the connect field\n            if (labelCol.isConnection) {\n               let relateValues = labelCol.pullRelationValues(item);\n               if (relateValues != null) {\n                  if (Array.isArray(relateValues))\n                     label = relateValues\n                        .map((val) => val.text || \"\")\n                        .join(\", \");\n                  else label = relateValues.text;\n               }\n            }\n\n            if (this.settings.multipleSeries) {\n               sumData[labelKey] = {\n                  label: label || item.id,\n                  value: 0,\n                  value2: 0,\n               };\n            } else {\n               sumData[labelKey] = {\n                  label: label || item.id,\n                  value: 0,\n               };\n            }\n         }\n\n         sumData[labelKey].value += numberVal;\n         sumNumber += numberVal;\n\n         if (this.settings.multipleSeries) {\n            sumData[labelKey].value2 += numberVal2;\n            sumNumber2 += numberVal2;\n         }\n      });\n\n      let index = 0;\n\n      for (const key in sumData) {\n         let val = sumData[key].value;\n\n         if (val <= 0) continue;\n\n         // Display to percent values\n         if (this.settings.isPercentage) {\n            val = (val / sumNumber) * 100;\n            val = Math.round(val * 100) / 100; // round decimal 2 digits\n            val = val + \" %\";\n         }\n\n         if (this.settings.multipleSeries) {\n            let val2 = sumData[key].value2;\n\n            if (val2 <= 0) continue;\n\n            // Display to percent values\n            if (this.settings.isPercentage) {\n               val2 = (val2 / sumNumber2) * 100;\n               val2 = Math.round(val2 * 100) / 100; // round decimal 2 digits\n               val2 = val2 + \" %\";\n            }\n\n            results.push({\n               label: sumData[key].label,\n               value: val,\n               value2: val2,\n               color: colorList[index % colorList.length],\n               count: countNumber,\n            });\n         } else {\n            results.push({\n               label: sumData[key].label,\n               value: val,\n               color: colorList[index % colorList.length],\n               count: countNumber,\n            });\n         }\n\n         index += 1;\n      }\n\n      const dcChart = this.getDCChart();\n\n      dcChart.clearAll();\n      dcChart.parse(results);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let labelField = this.labelField();\n      if (!labelField) {\n         this.warningsMessage(\n            `can't resolve label field[${this.settings.columnLabel}]`\n         );\n      }\n\n      let valueField = this.valueField();\n      if (!valueField) {\n         this.warningsMessage(\n            `can't resolve value field[${this.settings.columnValue}]`\n         );\n      }\n   }\n};\n","const ABViewChartAreaCore = require(\"../../core/views/ABViewChartAreaCore\");\nconst ABViewChartAreaComponent = require(\"./viewComponent/ABViewChartAreaComponent\");\n\nmodule.exports = class ABViewChartArea extends ABViewChartAreaCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartAreaComponent(this);\n   }\n};\n","const ABViewChartBarCore = require(\"../../core/views/ABViewChartBarCore\");\nconst ABViewChartBarComponent = require(\"./viewComponent/ABViewChartBarComponent\");\n\nmodule.exports = class ABViewChartBar extends ABViewChartBarCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartBarComponent(this);\n   }\n};\n","const ABViewWidget = require(\"./ABViewWidget\");\nconst ABViewChartContainerComponent = require(\"./viewComponent/ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartContainer extends ABViewWidget {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartContainerComponent(this);\n   }\n\n   get datacollection() {\n      return this.parent.datacollection;\n   }\n};\n","const ABViewChartLineCore = require(\"../../core/views/ABViewChartLineCore\");\nconst ABViewChartLineComponent = require(\"./viewComponent/ABViewChartLineComponent\");\n\nmodule.exports = class ABViewChartLine extends ABViewChartLineCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartLineComponent(this);\n   }\n};\n","const ABViewChartPieCore = require(\"../../core/views/ABViewChartPieCore\");\nconst ABViewChartPieComponent = require(\"./viewComponent/ABViewChartPieComponent\");\n\nmodule.exports = class ABViewChartPie extends ABViewChartPieCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartPieComponent(this);\n   }\n};\n","const ABViewCommentCore = require(\"../../core/views/ABViewCommentCore\");\nconst ABViewCommentComponent = require(\"./viewComponent/ABViewCommentComponent\");\n\nmodule.exports = class ABViewComment extends ABViewCommentCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewCommentComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let field = this.getUserField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve user field[${this.settings.columnUser}]`\n         );\n      }\n\n      field = this.getCommentField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve comment field[${this.settings.columnComment}]`\n         );\n      }\n\n      field = this.getDateField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve date field[${this.settings.columnDate}]`\n         );\n      }\n   }\n};\n","const ABViewConditionalContainerCore = require(\"../../core/views/ABViewConditionalContainerCore\");\nconst ABViewConditionalContainerComponent = require(\"./viewComponent/ABViewConditionalContainerComponent\");\n\nmodule.exports = class ABViewConditionalContainer extends (\n   ABViewConditionalContainerCore\n) {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewConditionalContainerComponent(this);\n   }\n\n   async save() {\n      const viewIf = this.views().find((v) => v.name === \"If\");\n      const viewElse = this.views().find((v) => v.name === \"Else\");\n      const pendingSave = [];\n\n      if (viewIf) pendingSave.push(viewIf.save());\n\n      if (viewElse) pendingSave.push(viewElse.save());\n\n      await Promise.all(pendingSave);\n\n      await super.save();\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (\n         !this.settings.filterConditions ||\n         this.settings.filterConditions?.rules?.length == 0\n      ) {\n         this.warningsMessage(\"has no filter conditions set\");\n      }\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewConnectDataFilterComponent extends ABViewComponent {\n   constructor(baseView, idbase, ids) {\n      super(\n         baseView,\n         idbase || `ABViewConnectDataFilter_${baseView.id}`,\n         Object.assign(\n            {\n               filter: \"\",\n               reset: \"\",\n            },\n            ids\n         )\n      );\n\n      this.field = null;\n   }\n\n   ui() {\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            type: \"space\",\n            borderless: true,\n            cols: [\n               {\n                  view: \"icon\",\n                  icon: \"fa fa-filter\",\n                  align: \"left\",\n                  disabled: true,\n               },\n               {\n                  view: \"combo\",\n                  id: ids.filter,\n                  labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n                  disabled: true,\n                  on: {\n                     onChange: (id) => this.applyConnectFilter(id),\n                  },\n               },\n               {\n                  view: \"icon\",\n                  id: ids.reset,\n                  icon: \"fa fa-times\",\n                  align: \"left\",\n                  disabled: true,\n                  tooltip: this.label(\"Renmove this filter\"),\n                  on: {\n                     onItemClick: () => this.resetConnectFilter(),\n                  },\n               },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const object = dv.datasource;\n\n      if (!object) return;\n\n      const [field] = object.fields(\n         (f) => f.columnName === this.settings.field\n      );\n\n      if (!field) {\n         this.AB.notify.developer(\n            `Cannot find field \"${this.settings.field}\" in ${object.name}`,\n            {\n               context: \"ABViewConnectDataFilterComponent.init()\",\n               data: { settings: this.settings },\n            }\n         );\n\n         return;\n      }\n\n      this.field = field;\n\n      const ids = this.ids;\n      const suggest = webix.ui({\n         view: \"suggest\",\n         filter: ({ value }, search) =>\n            value.toLowerCase().includes(search.toLowerCase()),\n         on: {\n            onShow: () => {\n               field.populateOptionsDataCy($$(ids.filter), field, {});\n            },\n         },\n      });\n      field.getAndPopulateOptions(suggest, null, field);\n\n      const $filter = $$(ids.filter);\n\n      $filter.define(\"suggest\", suggest);\n      $filter.define(\"label\", `${this.label(\"Filter by\")} ${field.label}`);\n      $filter.enable();\n      $filter.refresh();\n   }\n\n   resetConnectFilter() {\n      const ids = this.ids;\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: [] });\n      dc.reloadData();\n      // Block applyConnectFields() from triggering\n\n      const $filter = $$(ids.filter);\n\n      $filter.blockEvent();\n      $filter.setValue();\n      $filter.unblockEvent();\n      $$(ids.reset).disable();\n   }\n\n   applyConnectFilter(connectId) {\n      const filterRule = {\n         key: this.field.id,\n         rule: \"equals\",\n         value: connectId,\n      };\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: [filterRule] });\n      dc.reloadData();\n      $$(this.ids.reset).enable();\n   }\n}\n","import ABViewConnectDataFilterCore from \"../../core/views/ABViewConnectDataFilterCore\";\nimport ABViewConnectDataFilterComponent from \"./viewComponent/ABViewConnectDataFilterComponent\";\n\nexport default class ABViewConnectDataFilter extends ABViewConnectDataFilterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewConnectDataFilterComponent(this);\n   }\n}\n","const ABViewContainerCore = require(\"../../core/views/ABViewContainerCore\");\nconst ABViewContainerComponent = require(\"./viewComponent/ABViewContainerComponent\");\n\nmodule.exports = class ABViewContainer extends ABViewContainerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewContainerComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no content\");\n      }\n\n      // NOTE: this is done in ABView:\n      // (allViews || []).forEach((v) => {\n      //    v.warningsEval();\n      // });\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\nimport ABPopupSortField from \"../ABViewGridPopupSortFields\";\nimport ABViewCustomFilter from \"../viewProperties/ABViewPropertyFilterData\";\nimport _ from \"lodash\";\n\nexport default class ABViewDataFilterComponent extends ABViewComponent {\n   constructor(baseView, idbase, ids) {\n      super(\n         baseView,\n         idbase || `ABViewDataFilter_${baseView.id}`,\n         Object.assign(\n            {\n               filter: \"\",\n               reset: \"\",\n               sortButton: \"\",\n               filterButton: \"\",\n               globalSearchToolbar: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_filterData = (fnFilter, filterRules) => {\n         this.callbackFilterData(fnFilter, filterRules); // be notified when there is a change in the filter\n      };\n\n      this.field = null;\n      const ab = this.AB;\n\n      // {ABViewGridPopupSortFields}\n      // The popup for adding sort criteria to our grid.\n      this.PopupSortComponent = new ABPopupSortField(\n         `ABViewDataFilter_Sort_Popup_${this.settings.dataviewID}`\n      );\n      this.PopupSortComponent.init(ab);\n      this.PopupSortComponent.on(\"changed\", (sortOptions) => {\n         this.callbackSortData(sortOptions);\n      });\n\n      this.filterHelper = new ABViewCustomFilter(\n         this.AB,\n         `ABViewDataFilter_Filter_Popup_${this.settings.dataviewID}`\n      );\n      this.filterHelper.settings = {\n         filterOption: 1,\n         userFilterPosition: \"toolbar\",\n         isGlobalToolbar: 1,\n      };\n      this.filterHelper.init(ab);\n      this.detatch();\n      this.filterHelper.on(\"filter.data\", this._handler_filterData);\n   }\n\n   advancedUI() {\n      const compId = this.ids.component;\n      return [\n         {\n            css: \"bg_gray\",\n            maxHeight: 60,\n            rows: [\n               {},\n               {\n                  cols: [\n                     {\n                        width: 18,\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-filter\",\n                        width: 40,\n                        id: this.ids.filterButton,\n                        css: `webix_primary abFilterButton${this.settings.dataviewID}`,\n                        click: (id, event) => {\n                           this.toolbarFilter($$(this.ids.filterButton).$view);\n                        },\n                        on: {\n                           onAfterRender: function () {\n                              this.getInputNode().setAttribute(\n                                 \"data-cy\",\n                                 `${compId} filter button`\n                              );\n                           },\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-sort\",\n                        width: 40,\n                        id: this.ids.sortButton,\n                        css: `webix_primary abSortButton${this.settings.dataviewID}`,\n                        click: (id, event) => {\n                           this.openSort($$(this.ids.sortButton).$view);\n                        },\n                        on: {\n                           onAfterRender: function () {\n                              this.getInputNode().setAttribute(\n                                 \"data-cy\",\n                                 `${compId} sort button`\n                              );\n                           },\n                        },\n                     },\n                     {\n                        id: this.ids.globalSearchToolbar,\n                        view: \"search\",\n                        placeholder: this.label(\"Search..\"),\n                        css: `abGlobalSearchField${this.settings.dataviewID}`,\n                        width: 0,\n                        attributes: {\n                           \"data-cy\": `${this.ids.component} global search`,\n                           datacollection: this.settings.dataviewID,\n                        },\n                        on: {\n                           onTimedKeyPress: () => {\n                              const searchText = $$(\n                                 this.ids.globalSearchToolbar\n                              ).getValue();\n                              // store search text in datacollection because\n                              // it is shared amoung the similar filterHelpers\n                              const dc = this.datacollection;\n                              dc.settings.objectWorkspace.searchText =\n                                 searchText;\n\n                              this.filterHelper.externalSearchText(searchText);\n                           },\n                        },\n                     },\n                     {\n                        width: 18,\n                     },\n                  ],\n               },\n               {},\n            ],\n         },\n      ];\n   }\n\n   connectedFieldUI() {\n      return [\n         {\n            css: \"bg_gray\",\n            maxHeight: 60,\n            cols: [\n               {\n                  width: 18,\n               },\n               {\n                  rows: [\n                     {},\n                     {\n                        view: \"abslayout\",\n                        cells: [\n                           {\n                              css: \"bg_gray\",\n                              view: \"combo\",\n                              id: this.ids.filter,\n                              labelWidth: 0,\n                              relative: true,\n                              disabled: true,\n                              on: {\n                                 onChange: (id) => {\n                                    this.applyConnectFilter(\n                                       $$(this.ids.filter).getList().getItem(id)\n                                    );\n                                 },\n                              },\n                           },\n                           {\n                              view: \"icon\",\n                              id: this.ids.reset,\n                              icon: \"fa fa-times\",\n                              right: 24,\n                              top: 7,\n                              width: 24,\n                              height: 24,\n                              hidden: true,\n                              tooltip: this.label(\"Remove this filter\"),\n                              on: {\n                                 onItemClick: () =>\n                                    $$(this.ids.filter).setValue(),\n                              },\n                           },\n                        ],\n                     },\n                     {},\n                  ],\n               },\n               {\n                  width: 18,\n               },\n            ],\n         },\n      ];\n   }\n\n   ui() {\n      if (\n         !this.settings?.dataviewID ||\n         (this.settings?.viewType !== \"advanced\" && !this.settings?.field)\n      )\n         return { height: 1, id: this.ids.component };\n\n      const ui =\n         this.settings.viewType == \"advanced\"\n            ? this.advancedUI()\n            : this.connectedFieldUI();\n      const _ui = super.ui(ui);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const object = dv.datasource;\n\n      if (!object) return;\n\n      if (this.settings.viewType == \"advanced\") {\n         if (this.settings.showSort) {\n            this.PopupSortComponent.objectLoad(object);\n            // if there are some preset sorts show them to user\n            this.PopupSortComponent.setSettings(\n               dv?.settings?.objectWorkspace?.sortFields\n            );\n         } else {\n            $$(this.ids.sortButton).hide();\n         }\n         if (this.settings.showFilter) {\n            this.filterHelper.objectLoad(object);\n         } else {\n            $$(this.ids.filterButton).hide();\n         }\n      } else if (this.settings.viewType == \"connected\") {\n         const [field] = object.fields(\n            (f) => f.columnName === this.settings.field\n         );\n\n         if (!field) {\n            this.AB.notify.developer(\n               `Cannot find field \"${this.settings.field}\" in ${object.name}`,\n               {\n                  context: \"ABViewDataFilterComponent.init()\",\n                  data: { settings: this.settings },\n               }\n            );\n\n            return;\n         }\n\n         this.field = field;\n\n         const ids = this.ids;\n         const suggest = webix.ui({\n            view: \"suggest\",\n            filter: ({ value }, search) =>\n               value.toLowerCase().includes(search.toLowerCase()),\n            on: {\n               onShow: () => {\n                  field.populateOptionsDataCy($$(ids.filter), field, {});\n               },\n            },\n            showAllOptions: true,\n         });\n         field.getAndPopulateOptions(suggest, null, field);\n\n         const $filter = $$(ids.filter);\n\n         $filter.define(\"suggest\", suggest);\n         $filter.define(\n            \"placeholder\",\n            `${this.label(\"Filter by\")} ${field.label}`\n         );\n         $filter.enable();\n         $filter.refresh();\n      }\n   }\n\n   onShow() {\n      super.onShow();\n      this.updateUI();\n   }\n\n   applyConnectFilter(rowData) {\n      let connectedVal = rowData?.id ?? null;\n\n      if (\n         connectedVal &&\n         this.field.settings?.isCustomFK &&\n         this.field.settings?.isSource\n      ) {\n         connectedVal =\n            (this.field.indexField\n               ? rowData[this.field.indexField.columnName]\n               : null) ?? // custom index\n            (this.field.indexField2\n               ? rowData[this.field.indexField2.columnName]\n               : null) ?? // custom index 2\n            rowData.id ??\n            rowData;\n      }\n\n      let filterRule = [];\n      if (connectedVal) {\n         $$(this.ids.reset).show();\n         filterRule = [\n            {\n               key: this.field.id,\n               rule: \"equals\",\n               value: connectedVal,\n            },\n         ];\n      } else {\n         $$(this.ids.reset).hide();\n      }\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: filterRule });\n      dc.reloadData();\n   }\n\n   openSort($view) {\n      this.PopupSortComponent.show($view);\n   }\n\n   /**\n    * @method callbackSortData()\n    * Process the provided sort options from our sort ui.\n    * @param {array} sortRules\n    *        Any Sort Rules added by the user.\n    */\n   async callbackSortData(sortRules = []) {\n      const dc = this.datacollection;\n      if (!_.isEqual(dc?.settings?.objectWorkspace?.sortFields, sortRules)) {\n         dc.settings.objectWorkspace.sortFields = sortRules;\n         await this.datacollection.reloadData();\n      }\n      this.updateUI();\n   }\n\n   /**\n    * @method callbackFilterData()\n    * Process the provided filter options from our filterHelper.\n    * @param {fn} fnFilter\n    *        A function that returns true/false for each row of data\n    *        to determine if is should exist.\n    * @param {array} filterRules\n    *        Any Filter Rules added by the user.\n    */\n   callbackFilterData(fnFilter, filterRules = []) {\n      const dc = this.datacollection;\n      if (!_.isEqual(dc?.__filterCond, filterRules)) {\n         dc.filterCondition(filterRules);\n         dc.reloadData();\n         this.updateUI();\n      }\n   }\n\n   toolbarFilter($view) {\n      this.filterHelper.showPopup($view);\n   }\n\n   updateUI() {\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      var filterButtons = document.getElementsByClassName(\n         `abFilterButton${this.settings.dataviewID}`\n      );\n\n      const onlyFilterRules = this.filterHelper.filterRules();\n      let filterBadge =\n         onlyFilterRules?.rules?.length > 0\n            ? onlyFilterRules?.rules?.length\n            : null;\n      for (let b of filterButtons) {\n         $$(b).define(\"badge\", filterBadge);\n         $$(b).refresh();\n      }\n\n      var sortButtons = document.getElementsByClassName(\n         `abSortButton${this.settings.dataviewID}`\n      );\n\n      const onlySortRules = dc.settings.objectWorkspace.sortFields;\n      let sortBadge = onlySortRules?.length > 0 ? onlySortRules?.length : null;\n\n      for (let b of sortButtons) {\n         $$(b).define(\"badge\", sortBadge);\n         $$(b).refresh();\n      }\n\n      var searchFields = document.getElementsByClassName(\n         `abGlobalSearchField${this.settings.dataviewID}`\n      );\n\n      const searchText = dc.settings.objectWorkspace.searchText;\n      if (searchText != null) {\n         for (let s of searchFields) {\n            var activeElement = document.activeElement;\n            if (\n               activeElement?.attributes?.datacollection?.value ==\n                  this.settings.dataviewID &&\n               activeElement == s.getElementsByTagName(\"input\")[0]\n            ) {\n               // skip the already selected input\n            } else {\n               $$(s).setValue(searchText);\n            }\n         }\n      }\n   }\n\n   detatch() {\n      this.filterHelper.removeListener(\"filter.data\", this._handler_filterData);\n      // this.datacollection?.removeListener(\"changeCursor\", this.handler_select);\n   }\n}\n","import ABViewDataFilterCore from \"../../core/views/ABViewDataFilterCore\";\nimport ABViewDataFilterComponent from \"./viewComponent/ABViewDataFilterComponent\";\n\nexport default class ABViewDataFilter extends ABViewDataFilterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDataFilterComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      } else {\n         if (this.settings.viewType == \"connected\") {\n            const object = DC.datasource;\n            const [field] = object.fields(\n               (f) => f.columnName === this.settings.field\n            );\n            if (!field) {\n               this.warningsMessage(`can't resolve field reference`);\n            }\n         }\n      }\n   }\n}\n","import ABViewComponent from \"./ABViewComponent\";\nexport default class ABViewDataSelectComponent extends ABViewComponent {\n   constructor(baseView, idbase, ids) {\n      super(\n         baseView,\n         idbase || `ABViewDataSelect_${baseView.id}`,\n         Object.assign(\n            {\n               select: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const _ui = super.ui([\n         {\n            view: \"combo\",\n            id: this.ids.select,\n            on: {\n               onChange: (n, o) => {\n                  if (n !== o) this.cursorChange(n);\n               },\n            },\n         },\n      ]);\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async onShow() {\n      super.onShow();\n      const dc = this.datacollection;\n      if (!dc) return;\n      await dc.waitReady();\n      const labelField = this.AB.definitionByID(\n         this.settings.labelField\n      )?.columnName;\n      const options = dc\n         .getData()\n         .map((o) => ({ id: o.id, value: o[labelField] }))\n         .sort((a, b) => (a.value > b.value ? 1 : -1));\n      const $select = $$(this.ids.select);\n      $select.define(\"options\", options);\n      $select.refresh();\n      $select.setValue(dc.getCursor().id);\n   }\n\n   cursorChange(n) {\n      this.datacollection.setCursor(n);\n   }\n}\n","import ABViewDataSelectCore from \"../../core/views/ABViewDataSelectCore\";\nimport ABViewDataSelectComponent from \"./viewComponent/ABViewDataSelectComponent\";\n\nexport default class ABViewDataSelect extends ABViewDataSelectCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDataSelectComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      } else {\n         if (this.settings.viewType == \"connected\") {\n            const object = DC.datasource;\n            const [field] = object.fields(\n               (f) => f.columnName === this.settings.field\n            );\n            if (!field) {\n               this.warningsMessage(`can't resolve field reference`);\n            }\n         }\n      }\n   }\n}\n","const ABViewDataviewCore = require(\"../../core/views/ABViewDataviewCore\");\nconst ABViewDataviewComponent = require(\"./viewComponent/ABViewDataviewComponent\");\n\nconst ABViewDataviewDefaults = ABViewDataviewCore.defaultValues();\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewDataview extends ABViewDataviewCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.detailsPage =\n         this.settings.detailsPage ?? ABViewDataviewDefaults.detailsPage;\n      this.settings.editPage =\n         this.settings.editPage ?? ABViewDataviewDefaults.editPage;\n      this.settings.detailsTab =\n         this.settings.detailsTab ?? ABViewDataviewDefaults.detailsTab;\n      this.settings.editTab =\n         this.settings.editTab ?? ABViewDataviewDefaults.editTab;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj } v1App\n    * @param {string} idPrefix - define to support in 'Datacollection' widget\n    *\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewDataviewComponent(this);\n   }\n};\n","const ABViewDetailCore = require(\"../../core/views/ABViewDetailCore\");\nconst ABViewDetailComponent = require(\"./viewComponent/ABViewDetailComponent\");\n\nmodule.exports = class ABViewDetail extends ABViewDetailCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj } v1App\n    * @param {string} idPrefix - define to support in 'Datacollection' widget\n    *\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewDetailComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewDetailCheckboxCore = require(\"../../core/views/ABViewDetailCheckboxCore\");\nconst ABViewDetailCheckboxComponent = require(\"./viewComponent/ABViewDetailCheckboxComponent\");\n\nmodule.exports = class ABViewDetailCheckbox extends ABViewDetailCheckboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailCheckboxComponent(this);\n   }\n};\n","const ABViewDetailConnectCore = require(\"../../core/views/ABViewDetailConnectCore\");\nconst ABViewPropertyAddPage =\n   require(\"./viewProperties/ABViewPropertyAddPage\").default;\n\nconst ABViewDetailConnectComponent = require(\"./viewComponent/ABViewDetailConnectComponent\");\n\nmodule.exports = class ABViewDetailConnect extends ABViewDetailConnectCore {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n      this.addPageTool.fromSettings(this.settings);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailConnectComponent(this);\n   }\n\n   get addPageTool() {\n      if (this.__addPageTool == null)\n         this.__addPageTool = new ABViewPropertyAddPage();\n\n      return this.__addPageTool;\n   }\n};\n","const ABViewDetailCustomCore = require(\"../../core/views/ABViewDetailCustomCore\");\nconst ABViewDetailCustomComponent = require(\"./viewComponent/ABViewDetailCustomComponent\");\n\nmodule.exports = class ABViewDetailCustom extends ABViewDetailCustomCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailCustomComponent(this);\n   }\n};\n","const ABViewDetailImageCore = require(\"../../core/views/ABViewDetailImageCore\");\nconst ABViewDetailImageComponent = require(\"./viewComponent/ABViewDetailImageComponent\");\n\nmodule.exports = class ABViewDetailImage extends ABViewDetailImageCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailImageComponent(this);\n   }\n};\n","const ABViewDetailItemCore = require(\"../../core/views/ABViewDetailItemCore\");\nconst ABViewDetailItemComponent = require(\"./viewComponent/ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailItem extends ABViewDetailItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailItemComponent(this);\n   }\n};\n","const ABViewDetailTextCore = require(\"../../core/views/ABViewDetailTextCore\");\nconst ABViewDetailTextComponent = require(\"./viewComponent/ABViewDetailTextComponent\");\n\nmodule.exports = class ABViewDetailText extends ABViewDetailTextCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailTextComponent(this);\n   }\n};\n","const ABViewDetailTreeCore = require(\"../../core/views/ABViewDetailTreeCore\");\nconst ABViewDetailTreeComponent = require(\"./viewComponent/ABViewDetailTreeComponent\");\n\nmodule.exports = class ABViewDetailTree extends ABViewDetailTreeCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailTreeComponent(this);\n   }\n};\n","const ABViewDocxBuilderCore = require(\"../../core/views/ABViewDocxBuilderCore\");\nconst ABViewDocxBuilderComponent = require(\"./viewComponent/ABViewDocxBuilderComponent\");\n\nmodule.exports = class ABViewDocxBuilder extends ABViewDocxBuilderCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDocxBuilderComponent(this);\n   }\n\n   letUserDownload(blob, filename) {\n      const url = window.URL.createObjectURL(blob);\n\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a); // we need to append the element to the dom -> otherwise it will not work in firefox\n      a.click();\n      a.remove(); //afterwards we remove the element again\n\n      window.URL.revokeObjectURL(url);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollections || this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (!this.settings.filename) {\n         this.warningsMessage(\"is missing a DOCX template file\");\n      } else {\n         // TODO: should we check for the existance of the file?\n         // this isn't currently an async friendly fn, so how?\n         // let url = this.downloadUrl();\n      }\n   }\n};\n","const ABViewFormCore = require(\"../../core/views/ABViewFormCore\");\nconst ABViewFormComponent = require(\"./viewComponent/ABViewFormComponent\");\nconst ABViewFormButton = require(\"./ABViewFormButton\");\nconst ABViewFormCustom = require(\"./ABViewFormCustom\");\nconst ABViewFormConnect = require(\"./ABViewFormConnect\");\nconst ABViewFormDatepicker = require(\"./ABViewFormDatepicker\");\nconst ABViewFormSelectMultiple = require(\"./ABViewFormSelectMultiple\");\nconst ABViewFormTextbox = require(\"./ABViewFormTextbox\");\nconst ABViewFormJson = require(\"./ABViewFormJson\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\n// const ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\n// const ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\n// let PopupRecordRule = null;\n// let PopupSubmitRule = null;\n\nconst ABViewFormPropertyComponentDefaults = ABViewFormCore.defaultValues();\n\nmodule.exports = class ABViewForm extends ABViewFormCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      this._callbacks = {\n         onBeforeSaveData: () => true,\n      };\n   }\n\n   superComponent() {\n      if (this._superComponent == null)\n         this._superComponent = super.component();\n\n      return this._superComponent;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormComponent(this);\n   }\n\n   refreshDefaultButton(ids) {\n      // If default button is not exists, then skip this\n      let defaultButton = this.views(\n         (v) => v instanceof ABViewFormButton && v.settings.isDefault\n      )[0];\n\n      // Add a default button\n      if (defaultButton == null) {\n         defaultButton = ABViewFormButton.newInstance(this.application, this);\n         defaultButton.settings.isDefault = true;\n      }\n      // Remove default button from array, then we will add it to be the last item later (.push)\n      else {\n         this._views = this.views((v) => v.id != defaultButton.id);\n      }\n\n      // Calculate position Y of the default button\n      let yList = this.views().map((v) => (v.position.y || 0) + 1);\n      yList.push(this._views.length || 0);\n      yList.push($$(ids.fields).length || 0);\n      let posY = Math.max(...yList);\n\n      // Update to be the last item\n      defaultButton.position.y = posY;\n\n      // Keep the default button is always the last item of array\n      this._views.push(defaultButton);\n\n      return defaultButton;\n   }\n\n   /**\n    * @method getFormValues\n    *\n    * @param {webix form} formView\n    * @param {ABObject} obj\n    * @param {ABDatacollection} dc\n    * @param {ABDatacollection} dcLink [optional]\n    */\n   getFormValues(formView, obj, dc, dcLink) {\n      // get the fields that are on this form\n      const visibleFields = [\"id\"]; // we always want the id so we can udpate records\n      formView.getValues(function (obj) {\n         visibleFields.push(obj.config.name);\n      });\n\n      // only get data passed from form\n      const allVals = formView.getValues();\n      const formVals = {};\n      visibleFields.forEach((val) => {\n         formVals[val] = allVals[val];\n      });\n\n      // get custom values\n      this.fieldComponents(\n         (comp) =>\n            comp instanceof ABViewFormCustom ||\n            comp instanceof ABViewFormConnect ||\n            comp instanceof ABViewFormDatepicker ||\n            comp instanceof ABViewFormSelectMultiple ||\n            (comp instanceof ABViewFormJson && comp.settings.type == \"filter\")\n      ).forEach((f) => {\n         const vComponent = this.viewComponents[f.id];\n         if (vComponent == null) return;\n\n         const field = f.field();\n         if (field) {\n            const getValue = vComponent.getValue ?? vComponent.logic.getValue;\n            if (getValue)\n               formVals[field.columnName] = getValue.call(vComponent, formVals);\n         }\n      });\n\n      // remove connected fields if they were not on the form and they are present in the formVals because it is a datacollection\n      obj.connectFields().forEach((f) => {\n         if (\n            visibleFields.indexOf(f.columnName) == -1 &&\n            formVals[f.columnName]\n         ) {\n            delete formVals[f.columnName];\n            delete formVals[f.relationName()];\n         }\n      });\n\n      // clear undefined values or empty arrays\n      for (const prop in formVals) {\n         if (formVals[prop] == null || formVals[prop].length == 0)\n            formVals[prop] = \"\";\n      }\n\n      // Add parent's data collection cursor when a connect field does not show\n      let linkValues;\n\n      if (dcLink) {\n         linkValues = dcLink.getCursor();\n      }\n\n      if (linkValues) {\n         const objectLink = dcLink.datasource;\n\n         const connectFields = obj.connectFields();\n         connectFields.forEach((f) => {\n            const formFieldCom = this.fieldComponents(\n               (fComp) => fComp?.field?.()?.id === f?.id\n            );\n\n            if (\n               objectLink.id == f.settings.linkObject &&\n               formFieldCom.length < 1 && // check field does not show\n               formVals[f.columnName] === undefined\n            ) {\n               const linkColName = f.indexField\n                  ? f.indexField.columnName\n                  : objectLink.PK();\n\n               formVals[f.columnName] = {};\n               formVals[f.columnName][linkColName] =\n                  linkValues[linkColName] ?? linkValues.id;\n            }\n         });\n      }\n\n      // NOTE: need to pull data of current cursor to calculate Calculate & Formula fields\n      // .formVals variable does not include data that does not display in the Form widget\n      const cursorFormVals = Object.assign(dc.getCursor() ?? {}, formVals);\n\n      // Set value of calculate or formula fields to use in record rule\n      obj.fields((f) => f.key == \"calculate\" || f.key == \"formula\").forEach(\n         (f) => {\n            if (formVals[f.columnName] == null) {\n               let reCalculate = true;\n\n               // WORKAROUND: If \"Formula\" field will have Filter conditions,\n               // Then it is not able to re-calculate on client side\n               // because relational data is not full data so FilterComplex will not have data to check\n               if (f.key == \"formula\" && f.settings?.where?.rules?.length > 0) {\n                  reCalculate = false;\n               }\n\n               formVals[f.columnName] = f.format(cursorFormVals, reCalculate);\n            }\n         }\n      );\n\n      if (allVals.translations?.length > 0)\n         formVals.translations = allVals.translations;\n\n      // give the Object a final chance to review the data being handled.\n      obj.formCleanValues(formVals);\n\n      return formVals;\n   }\n\n   /**\n    * @method validateData\n    *\n    * @param {webix form} formView\n    * @param {ABObject} object\n    * @param {object} formVals\n    *\n    * @return {boolean} isValid\n    */\n   validateData($formView, object, formVals) {\n      let list = \"\";\n\n      // validate required fields\n      const requiredFields = this.fieldComponents(\n         (fComp) =>\n            fComp?.field?.().settings?.required == true ||\n            fComp?.settings?.required == true\n      ).map((fComp) => fComp.field());\n\n      // validate data\n      const validator = object.isValidData(formVals);\n      let isValid = validator.pass();\n\n      // $$($formView).validate();\n      $formView.validate();\n      /**\n       * helper function to fix the webix ui after adding an validation error\n       * message.\n       * @param {string} col - field.columnName\n       */\n      const fixInvalidMessageUI = (col) => {\n         const $forminput = $formView.elements[col];\n         if (!$forminput) return;\n         // Y position\n         const height = $forminput.$height;\n         if (height < 56) {\n            $forminput.define(\"height\", 60);\n            $forminput.resize();\n         }\n\n         // X position\n         const domInvalidMessage = $forminput.$view.getElementsByClassName(\n            \"webix_inp_bottom_label\"\n         )[0];\n         if (!domInvalidMessage?.style[\"margin-left\"]) {\n            domInvalidMessage.style.marginLeft = `${\n               this.settings.labelWidth ??\n               ABViewFormPropertyComponentDefaults.labelWidth\n            }px`;\n         }\n      };\n\n      // Display required messages\n      requiredFields.forEach((f) => {\n         if (!f) return;\n\n         const fieldVal = formVals[f.columnName];\n         if (fieldVal == \"\" || fieldVal == null || fieldVal.length < 1) {\n            $formView.markInvalid(f.columnName, L(\"This is a required field.\"));\n            list += `<li>${L(\"Missing Required Field\")} ${f.columnName}</li>`;\n            isValid = false;\n\n            // Fix position of invalid message\n            fixInvalidMessageUI(f.columnName);\n         }\n      });\n\n      // if data is invalid\n      if (!isValid) {\n         const saveButton = $formView.queryView({\n            view: \"button\",\n            type: \"form\",\n         });\n\n         // error message\n         if (validator?.errors?.length) {\n            validator.errors.forEach((err) => {\n               $formView.markInvalid(err.name, err.message);\n               list += `<li>${err.name}: ${err.message}</li>`;\n               fixInvalidMessageUI(err.name);\n            });\n\n            saveButton?.disable();\n         } else {\n            saveButton?.enable();\n         }\n      }\n      if (list) {\n         webix.alert({\n            type: \"alert-error\",\n            title: L(\"Problems Saving\"),\n            width: 400,\n            text: `<ul style='text-align:left'>${list}</ul>`,\n         });\n      }\n\n      return isValid;\n   }\n\n   /**\n    * @method recordRulesReady()\n    * This returns a Promise that gets resolved when all record rules report\n    * that they are ready.\n    * @return {Promise}\n    */\n   async recordRulesReady() {\n      return this.RecordRule.rulesReady();\n   }\n\n   /**\n    * @method saveData\n    * save data in to database\n    * @param $formView - webix's form element\n    *\n    * @return {Promise}\n    */\n   async saveData($formView) {\n      // call .onBeforeSaveData event\n      // if this function returns false, then it will not go on.\n      if (!this._callbacks?.onBeforeSaveData?.()) return;\n\n      $formView.clearValidation();\n\n      // get ABDatacollection\n      const dv = this.datacollection;\n      if (dv == null) return;\n\n      // get ABObject\n      const obj = dv.datasource;\n      if (obj == null) return;\n\n      // get ABModel\n      const model = dv.model;\n      if (model == null) return;\n\n      // show progress icon\n      $formView.showProgress?.({ type: \"icon\" });\n\n      // get update data\n      const formVals = this.getFormValues(\n         $formView,\n         obj,\n         dv,\n         dv.datacollectionLink\n      );\n\n      // form ready function\n      const formReady = (newFormVals) => {\n         // clear cursor after saving.\n         if (dv) {\n            if (this.settings.clearOnSave) {\n               dv.setCursor(null);\n               $formView.clear();\n            } else {\n               if (newFormVals && newFormVals.id) dv.setCursor(newFormVals.id);\n            }\n         }\n\n         $formView.hideProgress?.();\n\n         // if there was saved data pass it up to the onSaveData callback\n         // if (newFormVals) this._logic.callbacks.onSaveData(newFormVals);\n         if (newFormVals) this.emit(\"saved\", newFormVals); // Q? is this the right upgrade?\n      };\n\n      const formError = (err) => {\n         const $saveButton = $formView.queryView({\n            view: \"button\",\n            type: \"form\",\n         });\n\n         // mark error\n         if (err) {\n            if (err.invalidAttributes) {\n               for (const attr in err.invalidAttributes) {\n                  let invalidAttrs = err.invalidAttributes[attr];\n                  if (invalidAttrs && invalidAttrs[0])\n                     invalidAttrs = invalidAttrs[0];\n\n                  $formView.markInvalid(attr, invalidAttrs.message);\n               }\n            } else if (err.sqlMessage) {\n               webix.message({\n                  text: err.sqlMessage,\n                  type: \"error\",\n               });\n            } else {\n               webix.message({\n                  text: L(\"System could not save your data\"),\n                  type: \"error\",\n               });\n               this.AB.notify.developer(err, {\n                  message: \"Could not save your data\",\n                  view: this.toObj(),\n               });\n            }\n         }\n\n         $saveButton?.enable();\n\n         $formView?.hideProgress?.();\n      };\n\n      // Load data of DCs that use in record rules\n      await this.loadDcDataOfRecordRules();\n\n      // wait for our Record Rules to be ready before we continue.\n      await this.recordRulesReady();\n\n      // update value from the record rule (pre-update)\n      this.doRecordRulesPre(formVals);\n\n      // validate data\n      if (!this.validateData($formView, obj, formVals)) {\n         // console.warn(\"Data is invalid.\");\n         $formView.hideProgress?.();\n         return;\n      }\n\n      let newFormVals;\n      // {obj}\n      // The fully populated values returned back from service call\n      // We use this in our post processing Rules\n\n      try {\n         // is this an update or create?\n         if (formVals.id) {\n            newFormVals = await model.update(formVals.id, formVals);\n         } else {\n            newFormVals = await model.create(formVals);\n         }\n      } catch (err) {\n         formError(err.data);\n         throw err;\n      }\n\n      /*\n      // OLD CODE:\n      try {\n         await this.doRecordRules(newFormVals);\n         // make sure any updates from RecordRules get passed along here.\n         this.doSubmitRules(newFormVals);\n         formReady(newFormVals);\n         return newFormVals;\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: \"Error processing Record Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n         // Question:  how do we respond to an error?\n         // ?? just keep going ??\n         this.doSubmitRules(newFormVals);\n         formReady(newFormVals);\n         return;\n      }\n      */\n\n      try {\n         await this.doRecordRules(newFormVals);\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: \"Error processing Record Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n      }\n\n      // make sure any updates from RecordRules get passed along here.\n      try {\n         this.doSubmitRules(newFormVals);\n      } catch (errs) {\n         this.AB.notify.developer(errs, {\n            message: \"Error processing Submit Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n      }\n\n      formReady(newFormVals);\n      return newFormVals;\n   }\n\n   focusOnFirst() {\n      let topPosition = 0;\n      let topPositionId = \"\";\n      this.views().forEach((item) => {\n         if (item.key == \"textbox\" || item.key == \"numberbox\") {\n            if (item.position.y == topPosition) {\n               // topPosition = item.position.y;\n               topPositionId = item.id;\n            }\n         }\n      });\n      let childComponent = this.viewComponents[topPositionId];\n      if (childComponent && $$(childComponent.ui.id)) {\n         $$(childComponent.ui.id).focus();\n      }\n   }\n\n   async loadDcDataOfRecordRules() {\n      const tasks = [];\n\n      (this.settings?.recordRules ?? []).forEach((rule) => {\n         (rule?.actionSettings?.valueRules?.fieldOperations ?? []).forEach(\n            (op) => {\n               if (op.valueType !== \"exist\") return;\n\n               const pullDataDC = this.AB.datacollectionByID(op.value);\n\n               if (\n                  pullDataDC?.dataStatus ===\n                  pullDataDC.dataStatusFlag.notInitial\n               )\n                  tasks.push(pullDataDC.loadData());\n            }\n         );\n      });\n\n      await Promise.all(tasks);\n\n      return true;\n   }\n\n   get viewComponents() {\n      const superComponent = this.superComponent();\n      return superComponent.viewComponents;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (this.settings.recordRules) {\n         // TODO: scan recordRules for warnings\n      }\n\n      if (this.settings.submitRules) {\n         // TODO: scan submitRules for warnings.\n      }\n   }\n\n   /**\n    * @method deleteData\n    * delete data in to database\n    * @param $formView - webix's form element\n    *\n    * @return {Promise}\n    */\n   async deleteData($formView) {\n      // get ABDatacollection\n      const dc = this.datacollection;\n      if (dc == null) return;\n\n      // get ABObject\n      const obj = dc.datasource;\n      if (obj == null) return;\n\n      // get ABModel\n      const model = dc.model;\n      if (model == null) return;\n\n      // get update data\n      const formVals = $formView.getValues();\n\n      if (formVals?.id) {\n         const result = await model.delete(formVals.id);\n\n         // clear form\n         if (result) {\n            dc.setCursor(null);\n            $formView.clear();\n         }\n\n         return result;\n      }\n   }\n};\n","const ABViewFormButtonCore = require(\"../../core/views/ABViewFormButtonCore\");\nconst ABViewFormButtonComponent = require(\"./viewComponent/ABViewFormButtonComponent\");\n\nmodule.exports = class ABViewFormButton extends ABViewFormButtonCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormButtonComponent(this);\n   }\n};\n","const ABViewFormCheckboxCore = require(\"../../core/views/ABViewFormCheckboxCore\");\nconst ABViewFormCheckboxComponent = require(\"./viewComponent/ABViewFormCheckboxComponent\");\n\nmodule.exports = class ABViewFormCheckbox extends ABViewFormCheckboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormCheckboxComponent(this);\n   }\n};\n","const ABViewFormConnectCore = require(\"../../core/views/ABViewFormConnectCore\");\nconst ABViewFormConnectComponent = require(\"./viewComponent/ABViewFormConnectComponent\");\nconst ABViewPropertyAddPage =\n   require(\"./viewProperties/ABViewPropertyAddPage\").default;\nconst ABViewPropertyEditPage =\n   require(\"./viewProperties/ABViewPropertyEditPage\").default;\n\nconst ABViewFormConnectPropertyComponentDefaults =\n   ABViewFormConnectCore.defaultValues();\n\nmodule.exports = class ABViewFormConnect extends ABViewFormConnectCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      // Set filter value\n      this.__filterComponent = this.AB.filterComplexNew(\n         `${this.id}__filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.__filterComponent.fieldsLoad(\n         this.datasource ? this.datasource.fields() : [],\n         this.datasource ? this.datasource : null\n      );\n\n      // NOTE: .objectWorkspace is a v1 setting\n      // if (\n      //    !this.settings.objectWorkspace ||\n      //    !this.settings.objectWorkspace.filterConditions\n      // ) {\n      //    this.AB.error(\"Error: filter conditions do not exist\", {\n      //       error: \"filterConditions do not exist\",\n      //       viewLocation: {\n      //          application: this.application.name,\n      //          id: this.id,\n      //          name: this.label,\n      //       },\n      //       view: this,\n      //    });\n      //    // manually place an empty filter\n      //    this.settings[\"objectWorkspace\"] = {};\n      //    this.settings[\"objectWorkspace\"][\"filterConditions\"] = { glue: \"and\" };\n      // }\n\n      this.__filterComponent.setValue(\n         this.settings.filterConditions ??\n            ABViewFormConnectPropertyComponentDefaults.filterConditions\n      );\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.addPageTool.fromSettings(this.settings);\n      this.editPageTool.fromSettings(this.settings);\n   }\n\n   static get addPageProperty() {\n      return ABViewPropertyAddPage.propertyComponent(this.App, this.idBase);\n   }\n\n   static get editPageProperty() {\n      return ABViewPropertyEditPage.propertyComponent(this.App, this.idBase);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormConnectComponent(this);\n   }\n\n   get addPageTool() {\n      if (this.__addPageTool == null)\n         this.__addPageTool = new ABViewPropertyAddPage();\n\n      return this.__addPageTool;\n   }\n\n   get editPageTool() {\n      if (this.__editPageTool == null)\n         this.__editPageTool = new ABViewPropertyEditPage();\n\n      return this.__editPageTool;\n   }\n};\n","const ABViewFormCustomCore = require(\"../../core/views/ABViewFormCustomCore\");\nconst ABViewFormCustomComponent = require(\"./viewComponent/ABViewFormCustomComponent\");\n\nmodule.exports = class ABViewFormCustom extends ABViewFormCustomCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormCustomComponent(this);\n   }\n};\n","const ABViewFormDatepickerCore = require(\"../../core/views/ABViewFormDatepickerCore\");\nconst ABViewFormDatepickerComponent = require(\"./viewComponent/ABViewFormDatepickerComponent\");\n\nmodule.exports = class ABViewFormDatepicker extends ABViewFormDatepickerCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormDatepickerComponent(this);\n   }\n};\n","const ABViewFormItemCore = require(\"../../core/views/ABViewFormItemCore\");\nconst ABViewFormItemComponent = require(\"./viewComponent/ABViewFormItemComponent\");\n\nconst ABViewFormFieldPropertyComponentDefaults =\n   ABViewFormItemCore.defaultValues();\n\nmodule.exports = class ABViewFormItem extends ABViewFormItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static get componentUI() {\n      return ABViewFormItemComponent;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormItemComponent(this);\n   }\n\n   /**\n    * @method parentFormUniqueID\n    * return a unique ID based upon the closest form object this component is on.\n    * @param {string} key  The basic id string we will try to make unique\n    * @return {string}\n    */\n   parentFormUniqueID(key) {\n      var form = this.parentFormComponent();\n      var uniqueInstanceID;\n      if (form) {\n         uniqueInstanceID = form.uniqueInstanceID;\n      } else {\n         uniqueInstanceID = webix.uid();\n      }\n\n      return key + uniqueInstanceID;\n   }\n};\n","const ABViewFormJsonCore = require(\"../../core/views/ABViewFormJsonCore\");\nconst ABViewFormJsonComponent = require(\"./viewComponent/ABViewFormJsonComponent\");\n\nmodule.exports = class ABViewFormJson extends ABViewFormJsonCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormJsonComponent(this);\n   }\n};\n","const ABViewFormNumberCore = require(\"../../core/views/ABViewFormNumberCore\");\nconst ABViewFormNumberComponent = require(\"./viewComponent/ABViewFormNumberComponent\");\n\nmodule.exports = class ABViewFormNumber extends ABViewFormNumberCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormNumberComponent(this);\n   }\n};\n","const ABViewFormReadonlyCore = require(\"../../core/views/ABViewFormReadonlyCore\");\nconst ABViewFormReadonlyComponent = require(\"./viewComponent/ABViewFormReadonlyComponent\");\n\nmodule.exports = class ABViewFormReadonly extends ABViewFormReadonlyCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormReadonlyComponent(this);\n   }\n};\n","const ABViewFormSelectMultipleCore = require(\"../../core/views/ABViewFormSelectMultipleCore\");\nconst ABViewFormSelectMultipleComponent = require(\"./viewComponent/ABViewFormSelectMultipleComponent\");\n\nmodule.exports = class ABViewFormSelectMultiple extends (\n   ABViewFormSelectMultipleCore\n) {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormSelectMultipleComponent(this);\n   }\n};\n","const ABViewFormSelectSingleCore = require(\"../../core/views/ABViewFormSelectSingleCore\");\nconst ABViewFormSelectSingleComponent = require(\"./viewComponent/ABViewFormSelectSingleComponent\");\n\nmodule.exports = class ABViewFormSelectSingle extends (\n   ABViewFormSelectSingleCore\n) {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormSelectSingleComponent(this);\n   }\n};\n","const ABViewFormTextboxCore = require(\"../../core/views/ABViewFormTextboxCore\");\nconst ABViewFormTextboxComponent = require(\"./viewComponent/ABViewFormTextboxComponent\");\n\nmodule.exports = class ABViewFormTextbox extends ABViewFormTextboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormTextboxComponent(this);\n   }\n};\n","const ABViewFormTreeCore = require(\"../../core/views/ABViewFormTreeCore\");\nconst ABViewFormTreeComponent = require(\"./viewComponent/ABViewFormTreeComponent\");\n\nmodule.exports = class ABViewFormTree extends ABViewFormTreeCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormTreeComponent(this);\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewGanttComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewGantt_${baseView.id}`,\n         Object.assign(\n            {\n               menu: \"\",\n               gantt: \"\",\n            },\n            ids\n         )\n      );\n\n      this._tempDC = null;\n      // {ABDataCollection}\n      // A link to a DC that was passed in.  NOTE: this is only for\n      // the temp DCs created in the AppBuilder Designer and passed\n      // in.  Normal DCs are handled by the default CurrentDatacollection\n      // methods.\n\n      this.TitleField = null;\n      this.StartDateField = null;\n      this.EndDateField = null;\n      this.DurationField = null;\n      this.ProgressField = null;\n      this.NotesField = null;\n\n      this.originalStartDate = null;\n      this.originalEndDate = null;\n\n      this.pendingAdds = {};\n      // {Promise}  /* id : {Promise} */\n      // In order to prevent a race condition where multiple adds can be\n      // generated on the same item, we catch the repeats and just return\n      // the same data for each.\n\n      const idGantt = this.ids.gantt;\n\n      this.ganttElement = {\n         isExistsTask: (taskId) => {\n            const localService = $$(idGantt).getService(\"local\");\n            if (!localService) return false;\n\n            const tasksData = localService.tasks();\n            if (!tasksData || !tasksData.exists) return false;\n\n            return tasksData.exists(taskId);\n         },\n         removeTask: (taskId) => {\n            if (!this.ganttElement.isExistsTask(taskId)) return;\n\n            const opsService = $$(idGantt).getService(\"operations\");\n            if (!opsService) return;\n\n            return opsService.removeTask(taskId);\n         },\n      };\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      const { YEAR_SCALE, MONTH_SCALE, DAY_SCALE } = this.getConstantScales;\n      const _ui = super.ui([\n         {\n            cols: [\n               { fillspace: true },\n               {\n                  view: \"menu\",\n                  id: ids.menu,\n                  layout: \"x\",\n                  width: 300,\n                  data: [\n                     {\n                        id: \"day\",\n                        value: this.label(\"Day\"),\n                     },\n                     {\n                        id: \"week\",\n                        value: this.label(\"Week\"),\n                     },\n                     {\n                        id: \"month\",\n                        value: this.label(\"Month\"),\n                     },\n                     {\n                        id: \"year\",\n                        value: this.label(\"Year\"),\n                     },\n                  ],\n                  on: {\n                     onItemClick: (id /* , e, node */) => {\n                        this.setScale(id);\n                     },\n                  },\n               },\n            ],\n         },\n         {\n            id: ids.gantt,\n            view: \"gantt\",\n            scales: [YEAR_SCALE, MONTH_SCALE, DAY_SCALE],\n            override: new Map([\n               [\n                  gantt.services.Backend,\n                  // global webix gantt object\n                  class MyBackend extends gantt.services.Backend {\n                     async tasks() {\n                        const DC = self.CurrentDatacollection;\n                        if (!DC) return [];\n\n                        // if (DC.dataStatus != DC.dataStatusFlag.initialized) {\n                        //    await DC.loadData().catch((err) => {\n                        //       console.error(err);\n                        //    });\n                        // }\n                        return (DC.getData() || []).map((d, indx) =>\n                           self.convertFormat(d, indx)\n                        );\n                     }\n                     links() {\n                        return Promise.resolve([]);\n                     }\n                     async addTask(obj, index, parent) {\n                        if (!self.pendingAdds[obj.id]) {\n                           self.pendingAdds[obj.id] = self.taskAdd(obj);\n                        }\n                        const newTask = await self.pendingAdds[obj.id];\n                        delete self.pendingAdds[obj.id];\n                        return {\n                           id: (newTask || {}).id,\n                        };\n                     }\n                     async updateTask(id, obj) {\n                        return await self.taskUpdate(obj.id, obj);\n                     }\n                     async removeTask(id) {\n                        return await self.taskRemove(id);\n                     }\n                  },\n               ],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      // #HACK!: as of webix v.8.1.1 there is a visual glitch of the Gantt\n      // object if you replace a gantt widget with a new definition (like in\n      // the ABDesigner you can switch from Gantt1 to Gantt2 in the object\n      // workspace).  In that one case, the menu would disappear even though\n      // the data is present.  So this makes sure the menu is shown\n      const $menu = $$(this.ids.menu);\n\n      if ($menu) $menu.showItem(\"day\");\n   }\n\n   /**\n    * @method CurrentDatacollection()\n    * A helper to return the current ABDataCollection we are working with.\n    * @return {ABDataCollection}\n    */\n   get CurrentDatacollection() {\n      return super.CurrentDatacollection || this._tempDC;\n   }\n\n   /**\n    * @method convertFormat()\n    * Convert an ABObject's row value into a gantt task data format.\n    * @param {obj} row\n    *        The current row of data returned from an ABObject.\n    * @param {int} index\n    *        The order of this task.\n    * @return {obj}\n    *         A key=>value hash corresponding to the gantt task that\n    *         represents this row of data.\n    */\n   convertFormat(row = {}, index = null) {\n      const data = {};\n      const StartDateField = this.StartDateField;\n      const EndDateField = this.EndDateField;\n      const DurationField = this.DurationField;\n\n      if (!StartDateField || (!EndDateField && !DurationField)) return data;\n\n      const currDate = new Date();\n\n      data[\"id\"] = row.id || row.uuid;\n      data[\"type\"] = \"task\";\n      data[\"parent\"] = 0;\n      data[\"open\"] = true;\n\n      // define label\n      const TitleField = this.TitleField;\n      const ProgressField = this.ProgressField;\n      const NotesField = this.NotesField;\n\n      data[\"text\"] = TitleField\n         ? row[TitleField.columnName] || \"\"\n         : this.CurrentObject.displayData(row);\n      data[\"start_date\"] = row[StartDateField.columnName] || currDate;\n      data[\"progress\"] = ProgressField\n         ? parseFloat(row[ProgressField.columnName] || 0)\n         : 0;\n\n      if (NotesField) data[\"details\"] = row[NotesField.columnName] || \"\";\n\n      if (EndDateField)\n         data[\"end_date\"] = row[EndDateField.columnName] || currDate;\n\n      if (DurationField) data[\"duration\"] = row[DurationField.columnName] || 1;\n\n      // Default values\n      if (!data[\"end_date\"] && !data[\"duration\"]) {\n         data[\"end_date\"] = currDate;\n         data[\"duration\"] = 1;\n      }\n\n      if (index) data[\"order\"] = index;\n\n      return data;\n   }\n\n   /**\n    * @method convertValues()\n    * Convert a Gantt task into a set of values for our ABObject.\n    * @param {obj} task\n    *        The current gantt task data.\n    * @return {obj}\n    *         A key=>value hash corresponding to the ABObject that\n    *         is tied to this gantt.\n    */\n   convertValues(task) {\n      const patch = {};\n      const TitleField = this.TitleField;\n      const StartDateField = this.StartDateField;\n      const ProgressField = this.ProgressField;\n      const NotesField = this.NotesField;\n      const EndDateField = this.EndDateField;\n      const DurationField = this.DurationField;\n\n      if (TitleField) patch[TitleField.columnName] = task[\"text\"] || \"\";\n\n      if (StartDateField) patch[StartDateField.columnName] = task[\"start_date\"];\n\n      if (ProgressField)\n         patch[ProgressField.columnName] = parseFloat(task[\"progress\"] || 0);\n\n      if (NotesField) patch[NotesField.columnName] = task[\"details\"];\n\n      if (EndDateField) patch[EndDateField.columnName] = task[\"end_date\"];\n\n      if (DurationField) patch[DurationField.columnName] = task[\"duration\"];\n\n      return patch;\n   }\n\n   /**\n    * @method objectLoad\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      super.objectLoad(object);\n\n      // const baseView = this.view;\n      const settings = this.settings;\n\n      if (object) {\n         this.TitleField = object.fieldByID(settings.titleFieldID);\n         this.StartDateField = object.fieldByID(settings.startDateFieldID);\n         this.EndDateField = object.fieldByID(settings.endDateFieldID);\n         this.DurationField = object.fieldByID(settings.durationFieldID);\n         this.ProgressField = object.fieldByID(settings.progressFieldID);\n         this.NotesField = object.fieldByID(settings.notesFieldID);\n      }\n   }\n\n   /**\n    * @method datacollectionLoad\n    * @param {ABDatacollection} datacollection\n    */\n   datacollectionLoad(datacollection) {\n      super.datacollectionLoad(datacollection);\n\n      const dc = this.CurrentDatacollection || datacollection;\n      if (!dc) return;\n\n      // NOTE: this can happen in the ABDesigner object workspace.\n      // we send in a temp DC with no .id\n      this._tempDC = datacollection;\n\n      // NOTE: keep .objectLoad() before any .initData() is called.\n      this.objectLoad(dc.datasource);\n\n      const eventNames = [\"create\", \"update\", \"delete\", \"initializedData\"];\n\n      eventNames.forEach((e) => {\n         if (\n            e in dc._events &&\n            this.__events.findIndex((eo) => eo.eventName === e) !== -1\n         )\n            return;\n\n         switch (e) {\n            case \"delete\":\n               this.eventAdd({\n                  emitter: dc,\n                  eventName: \"delete\",\n                  listener: (taskId) => {\n                     // remove this task in gantt\n                     if (this.ganttElement.isExistsTask(taskId))\n                        this.ganttElement.removeTask(taskId);\n                  },\n               });\n\n               break;\n\n            default:\n               this.eventAdd({\n                  emitter: dc,\n                  eventName: e,\n                  listener: () => {\n                     this.initData();\n                  },\n               });\n\n               break;\n         }\n      });\n   }\n\n   /**\n    * @function hide()\n    * hide this component.\n    */\n   hide() {\n      $$(this.ids.component)?.hide();\n   }\n\n   initData() {\n      const ganttElem = $$(this.ids.gantt);\n      if (!ganttElem) return;\n\n      const dataService = ganttElem.getService(\"local\");\n      if (!dataService) return;\n\n      const dcTasks = dataService.tasks();\n      if (!dcTasks) return;\n\n      // gantt v 8.1.1\n      // Note: there is a race condition that can happen here.\n      // dataService.tasks() calls the MyBackend.tasks() above which\n      // returns a Promise.\n      // when you call dcTasks.clearAll() before the promise\n      // is resolved, the gantt internally throws an error.\n      //\n      // So give webix some time to internally complete it's process\n      // before we do .clearAll();\n      setTimeout(() => {\n         dcTasks.clearAll();\n\n         const DC = this.CurrentDatacollection;\n         const gantt_data = {\n            data: DC\n               ? (DC.getData() || []).map((d, index) =>\n                    this.convertFormat(d, index)\n                 )\n               : [],\n         };\n\n         // check required fields before parse\n         if (this.StartDateField && (this.EndDateField || this.DurationField)) {\n            dcTasks.parse(gantt_data);\n         }\n\n         // Keep original start and end dates for calculate scale to display\n         const currScale = dataService.getScales();\n\n         this.originalStartDate = currScale.start;\n         this.originalEndDate = currScale.end;\n\n         this.sort();\n      }, 10);\n   }\n\n   get getConstantScales() {\n      const DAY_SCALE = { unit: \"day\", format: \"%d\" },\n         WEEK_SCALE = {\n            unit: \"week\",\n            format: (start) => {\n               const parser = webix.Date.dateToStr(\"%d %M\");\n               const wstart = webix.Date.weekStart(start);\n               const wend = webix.Date.add(\n                  webix.Date.add(wstart, 1, \"week\", true),\n                  -1,\n                  \"day\",\n                  true\n               );\n\n               return parser(wstart) + \" - \" + parser(wend);\n            },\n         },\n         MONTH_SCALE = { unit: \"month\", format: \"%F\" },\n         YEAR_SCALE = { unit: \"year\", format: \"%Y\" };\n\n      return {\n         DAY_SCALE,\n         WEEK_SCALE,\n         MONTH_SCALE,\n         YEAR_SCALE,\n      };\n   }\n\n   setScale(scale) {\n      const ganttElem = $$(this.ids.gantt);\n      if (!ganttElem) return;\n\n      const ganttData = ganttElem.getService(\"local\");\n      if (!ganttData) return;\n\n      const newScales = [];\n      const { YEAR_SCALE, MONTH_SCALE, WEEK_SCALE, DAY_SCALE } =\n         this.getConstantScales;\n\n      switch (scale) {\n         case \"day\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE, DAY_SCALE);\n            break;\n\n         case \"week\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE, WEEK_SCALE);\n            break;\n\n         case \"month\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE);\n            break;\n\n         case \"year\":\n            newScales.push(YEAR_SCALE);\n            break;\n      }\n\n      const abWebix = this.AB.Webix;\n      const currScale = ganttElem.getService(\"local\").getScales(),\n         start = abWebix.Date.add(this.originalStartDate, -1, scale, true),\n         end = abWebix.Date.add(this.originalEndDate, 1, scale, true);\n\n      ganttData.setScales(\n         start,\n         end,\n         currScale.precise,\n         currScale.cellWidth,\n         currScale.cellHeight,\n         newScales\n      );\n      ganttElem.$app.refresh();\n      ganttElem.getState().$batch({ top: 0, left: 0 });\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    */\n   onShow() {\n      super.onShow();\n      this.datacollectionLoad(this.datacollection);\n\n      $$(this.ids.component)?.show();\n   }\n\n   sort() {\n      // TODO: sorting;\n      return;\n      // const gantt = $$(ids.gantt).getGantt();\n      // if (!gantt) return;\n\n      // // default sort\n      // const MAX_date = new Date(8640000000000000);\n      // gantt.sort(function(a, b) {\n      //    const aStartDate = a[\"start_date\"],\n      //       aEndDate = a[\"end_date\"],\n      //       aDuration = a[\"duration\"] || 1,\n      //       bStartDate = b[\"start_date\"],\n      //       bEndDate = b[\"end_date\"],\n      //       bDuration = b[\"duration\"] || 1;\n\n      //    // if no start date, then be a last item\n      //    if (\n      //       a[this.StartDateField.columnName] == null ||\n      //       b[this.StartDateField.columnName] == null\n      //    ) {\n      //       return (\n      //          (a[this.StartDateField.columnName] || MAX_date) -\n      //          (b[this.StartDateField.columnName] || MAX_date)\n      //       );\n      //    } else if (aStartDate != bStartDate) {\n      //       return aStartDate - bStartDate;\n      //    } else if (aEndDate != bEndDate) {\n      //       return aEndDate - bEndDate;\n      //    } else if (aDuration != bDuration) {\n      //       return bDuration - aDuration;\n      //    }\n      // }, false);\n   }\n\n   async taskAdd(taskData) {\n      const patch = this.convertValues(taskData);\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend addTask() method\n         // On Webix documents, the method addTask() have to return the added object so we have to pass the data we add through this method.\n         return await this.CurrentObject?.model().create(patch);\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Saving Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to save this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskAdd(): Error Saving Item\",\n            patch,\n         });\n\n         throw e;\n      }\n   }\n\n   async taskRemove(rowId) {\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend removeTask() method\n         // On Webix documents, the method removeTask() return {} (an empty object) so we return {} in removeTask() instead.\n         await this.CurrentObject.model().delete(rowId);\n\n         return {};\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Removing Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to remove this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskRemove(): Error Removing Item\",\n            rowId,\n         });\n\n         throw e;\n      }\n   }\n\n   async taskUpdate(rowId, updatedTask) {\n      const patch = this.convertValues(updatedTask);\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend updateTask() method\n         // On Webix documents, the method updateTask() return {} (an empty object) so we return {} in updateTask() instead.\n         await this.CurrentObject.model().update(rowId, patch);\n\n         return {};\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Updating Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to update this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskUpdate(): Error Updating Item\",\n            patch,\n         });\n\n         throw e;\n      }\n   }\n}\n","import ABViewGanttComponent from \"./viewComponent/ABViewGanttComponent\";\n\nconst ABViewGanttCore = require(\"../../core/views/ABViewGanttCore\");\n\nexport default class ABViewGantt extends ABViewGanttCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewGanttComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      } else {\n         if (!this.settings.startDateFieldID) {\n            this.warningsMessage(`doesn't have a start date field set.`);\n         } else {\n            let field = DC.datasource?.fieldByID(\n               this.settings.startDateFieldID\n            );\n            if (!field) {\n               this.warningsMessage(\n                  `can't lookup field: startDate[${this.settings.startDateFieldID}]`\n               );\n            }\n         }\n      }\n   }\n}\n","/*\n * ABViewGridPopupExport.js\n * Manage the Popup that allows you to export data into one of our supported\n * formats.\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\n\nexport default class ABWorkObjectPopupExport extends ClassUI {\n   constructor(idBase) {\n      idBase = idBase || \"abviewgridpopupExport\";\n\n      super({\n         popupExport: `${idBase}_popupExport`,\n         list: `${idBase}_popupExport_list`,\n      });\n\n      this._currentObject = null;\n      // {ABObject}\n      // The ABObject of the data we will export.  We can find out the fields\n      // from the object.\n\n      this._dataCollection = null;\n      // {ABDatacCollection}\n      // The ABDataCollection that contains the data we are going to export.\n\n      this._grid = null;\n      // {webix.grid}\n      // the current webix.grid that contains the data we are going to export.\n\n      this._filename = null;\n      // {string}\n      // the name of the desired output file.\n\n      this._hiddenFields = [];\n      // {array}\n      // An array of ABField.columnName(s) that we are not wanting to export\n   }\n\n   ui() {\n      var self = this;\n\n      // webix UI definition:\n      return {\n         view: \"popup\",\n         id: this.ids.popupExport,\n         width: 160,\n         height: 0, //150,\n         select: false,\n         hidden: true,\n         body: {\n            id: this.ids.list,\n            view: \"list\",\n            autoheight: true,\n            data: [\n               { name: \"CSV\", icon: \"file-excel-o\" },\n               { name: \"Excel\", icon: \"file-excel-o\" },\n               { name: \"PDF\", icon: \"file-pdf-o\" },\n               { name: \"PNG\", icon: \"file-image-o\" },\n            ],\n            template:\n               \"<div><i class='fa fa-#icon# webix_icon_btn' aria-hidden='true'></i> #name#</div>\",\n            on: {\n               onItemClick: function (id /*, e, node */) {\n                  var component = this.getItem(id);\n                  self.export(component.name);\n               },\n            },\n         },\n      };\n   }\n\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n      webix.ui(this.ui());\n      $$(this.ids.popupExport).resize();\n   }\n\n   // internal business logic\n\n   /**\n    * @method dataCollectionLoad()\n    * the current ABDataCollection we are working with.\n    * @param {ABDataCollection} dc\n    */\n   dataCollectionLoad(dc) {\n      this._dataCollection = dc;\n   }\n\n   /**\n    * @method objectLoad()\n    * The current ABObject we are working with.\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method setHiddenFields\n    * Register Fields we don't want exported in our data.\n    * @param {array} fields\n    *        An array of ABField.columnName(s) to exclude from our export.\n    */\n   setHiddenFields(fields = []) {\n      this._hiddenFields = fields ?? [];\n   }\n\n   /**\n    * @method setFilename()\n    * Register the name of the file we want our data to export as.\n    * @param {string} filename\n    */\n   setFilename(filename) {\n      this._filename = filename;\n   }\n\n   /**\n    * @method setGridComponent()\n    * Register the webix.grid that currently stores the data we are\n    * exporting.\n    * @param {webix.grid} $grid\n    */\n   setGridComponent($grid) {\n      this._grid = $grid;\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    */\n   show($view) {\n      $$(this.ids.popupExport).show($view);\n   }\n\n   async export(name) {\n      let fnExport;\n\n      let columns = {};\n\n      let dc = this._dataCollection;\n      let _currentObject = this._currentObject;\n      let _grid = this._grid;\n      let _filename = this._filename;\n\n      if (\n         dc &&\n         (!dc.settings.loadAll || dc.dataStatus == dc.dataStatusFlag.notInitial)\n      ) {\n         // Load all data\n         await dc.reloadData(0, null);\n         dc.settings.loadAll = true;\n      }\n\n      // client filter data\n      // template of report\n      if (_currentObject) {\n         _currentObject.fields().forEach((f) => {\n            // hidden fields\n            if (this._hiddenFields.indexOf(f.columnName) > -1) return;\n\n            columns[f.columnName] = {\n               template: (rowData) => {\n                  return f.format(rowData);\n               },\n            };\n         });\n      }\n\n      // If there are checked items, then export them only\n      // Otherwise export all items\n      const noCheckedRow =\n         _grid.data.find({ appbuilder_select_item: 1 }).length < 1;\n      const filterRow = (row) =>\n         noCheckedRow || row?.appbuilder_select_item == 1;\n\n      switch (name) {\n         case \"CSV\":\n            webix.csv.delimiter.cols = \",\";\n\n            fnExport = webix.toCSV(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               columns: columns,\n               filter: filterRow,\n            });\n            break;\n         case \"Excel\":\n            fnExport = webix.toExcel(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               name:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               columns: columns,\n               filterHTML: true,\n               filter: filterRow,\n            });\n            break;\n         case \"PDF\":\n            fnExport = webix.toPDF(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               filterHTML: true,\n               filter: filterRow,\n            });\n            break;\n         case \"PNG\":\n            fnExport = webix.toPNG(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               // filter: NOT SUPPORT\n            });\n            break;\n      }\n\n      try {\n         await fnExport;\n         $$(this.ids.popupExport).hide();\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: `ABViewGridPopupExport:export(): System could not export: ${name}`,\n            exportType: name,\n            columns,\n            fileName: _filename,\n         });\n      }\n   }\n\n   // this.dataCollectionLoad = _logic.dataCollectionLoad;\n   // this.objectLoad = _logic.objectLoad;\n   // this.setGridComponent = _logic.setGridComponent;\n   // this.setFilename = _logic.setFilename;\n   // this.setHiddenFields = _logic.setHiddenFields;\n   // this.show = _logic.show;\n}\n","/*\n * ABViewGridPopupMassUpdate\n *\n * An ABViewGrid can offer a mass update feature.  This is a ui component\n * to help with the processing of the update.\n *\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\nimport RowUpdater from \"../RowUpdater\";\n\nvar L = null;\n\nexport default class ABViewGridPopupMassUpdate extends ClassUI {\n   //.extend(idBase, function(App) {\n\n   constructor(ABViewGridComponent, idBase) {\n      idBase = idBase || \"abviewgridpopupMassUpdate\";\n\n      super({\n         component: `${idBase}_popupMassUpdate`,\n         submit: `${idBase}_submitMassUpdate`,\n      });\n\n      this.CurrentObject = null;\n      // {ABObject}\n      // Which ABObject are we currently working with.\n\n      this.GridComponent = ABViewGridComponent;\n      // {ABViewGridComponent}\n      // The current ABViewGridComponent we are working with.\n\n      this.AB = ABViewGridComponent.AB;\n      // {ABFactory}\n\n      this.rowUpdater = new RowUpdater(idBase, this.AB);\n      // {RowUpdater}\n      // An instance of our RowUpdater form builder.\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   ui() {\n      var ids = this.ids;\n\n      // Our webix UI definition:\n      return {\n         view: \"popup\",\n         id: ids.component,\n         // modal: true,\n         body: {\n            width: 500,\n            rows: [\n               // Update panel\n               this.rowUpdater.ui(),\n               { height: 15 },\n               {\n                  cols: [\n                     {},\n                     {\n                        view: \"button\",\n                        value: L(\"Cancel\"),\n                        width: 100,\n                        click: () => {\n                           this.hide();\n                        },\n                     },\n                     {\n                        id: ids.submit,\n                        css: \"webix_primary\",\n                        view: \"button\",\n                        label: L(\"Update\"),\n                        type: \"form\",\n                        width: 120,\n                        click: () => {\n                           this.submit();\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n         on: {\n            onShow: () => {\n               this.onShow();\n            },\n         },\n      };\n   }\n\n   async init(AB) {\n      webix.ui(this.ui());\n      this.rowUpdater.init(AB);\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method hide()\n    * Hide the popup.\n    */\n   hide() {\n      $$(this.ids.component).hide();\n   }\n\n   /**\n    * @function objectLoad\n    * Ready the Popup according to the current object & datatable\n    * @param {ABObject} object\n    *        the currently selected object.\n    * @param {webix.datatable} dataTable\n    *        the dataTable we need to run the mass update on...trust me this\n    *        will be good\n    */\n   objectLoad(object, dataTable) {\n      this.CurrentObject = object;\n      this.rowUpdater.objectLoad(object);\n      this.DataTable = dataTable;\n   }\n\n   onShow() {}\n\n   /**\n    * @method show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    * @param {json} options\n    *        Additional webix options related to the .show() method.\n    */\n   show($view, options = null) {\n      if (options != null) {\n         $$(this.ids.component).show($view, options);\n      } else {\n         $$(this.ids.component).show($view);\n      }\n   }\n\n   /**\n    * @method submit()\n    * Process the submit action by getting the values to change and then\n    * running a batchUpdate() on the items in our datatable that were selected.\n    */\n   submit() {\n      // Update values to records\n      let update_button = $$(this.ids.submit),\n         update_items = this.rowUpdater.getValue() || [];\n\n      update_button.disable();\n\n      if (!this.GridComponent) {\n         // TODO : Message\n         // console.log(\"no data collection to update\");\n         update_button.enable();\n         return;\n      } else if (update_items.length < 1) {\n         // TODO : Message\n         update_button.enable();\n         return;\n      }\n\n      let $datatable = this.GridComponent.getDataTable(); // $$(DataTable.ui.id);\n      let updatedRowIds = [];\n      $datatable.data.each(function (row) {\n         if (\n            row &&\n            Object.prototype.hasOwnProperty.call(\n               row,\n               \"appbuilder_select_item\"\n            ) &&\n            row.appbuilder_select_item == 1\n         ) {\n            updatedRowIds.push(row.id);\n         }\n      });\n\n      let vals = {};\n      update_items.forEach((item) => {\n         let fieldInfo = this.CurrentObject.fieldByID(item.fieldId);\n         if (!fieldInfo) return;\n\n         vals[fieldInfo.columnName] = item.value;\n      });\n\n      if (updatedRowIds.length > 0) {\n         webix.confirm({\n            title: L(\"Updating Multiple Records\"),\n            text: L(\"Are you sure you want to update the selected records?\"),\n            callback: (result) => {\n               if (result) {\n                  if ($datatable && $datatable.showProgress)\n                     $datatable.showProgress({ type: \"icon\" });\n\n                  let objModel = this.CurrentObject.model();\n                  objModel\n                     .batchUpdate({\n                        rowIds: updatedRowIds,\n                        values: vals,\n                     })\n                     .then(() => {\n                        // Update webix.datatable\n                        (updatedRowIds ?? []).forEach((rowId) => {\n                           $datatable.updateItem(rowId, vals);\n                        });\n\n                        // Anything we need to do after we are done.\n                        update_button.enable();\n                        this.hide();\n\n                        if ($datatable && $datatable.hideProgress)\n                           $datatable.hideProgress();\n                     })\n                     .catch((err) => {\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewGridPopupMassUpdate:submit(): Error during batchUpdate\",\n                           rowIds: updatedRowIds,\n                           values: vals,\n                        });\n                     });\n               } else {\n                  update_button.enable();\n               }\n            },\n         });\n      } else {\n         webix.alert({\n            title: L(\"No Records Selected\"),\n            text: L(\n               \"You need to select at least one record...did you drink your coffee today?\"\n            ),\n         });\n         update_button.enable();\n         this.hide();\n      }\n   }\n}\n","import ABViewComponent from \"./ABViewComponent\";\nimport ABPopupExport from \"../ABViewGridPopupExport\";\nimport ABPopupMassUpdateClass from \"../ABViewGridPopupMassUpdate\";\nimport ABPopupSortField from \"../ABViewGridPopupSortFields\";\n\nexport default class ABViewGridComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewGrid_${baseView.id}`,\n         Object.assign(\n            {\n               table: \"\",\n\n               // component: `${base}_component`,\n               toolbar: \"\",\n               buttonDeleteSelected: \"\",\n\n               buttonFilter: \"\",\n               buttonMassUpdate: \"\",\n               buttonSort: \"\",\n               buttonExport: \"\",\n\n               globalSearchToolbar: \"\",\n\n               datatable: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_filterData = (fnFilter, filterRules) => {\n         this.callbackFilterData(fnFilter, filterRules); // be notified when there is a change in the filter\n      };\n\n      this.handler_select = (...params) => {\n         this.selectRow(...params);\n      };\n      // {fn} .handler_select\n      // the callback fn for our selectRow()\n      // We want this called when the .datacollection we are linked to\n      // emits an \"onChange\" event.\n\n      this.detatch();\n      baseView.filterHelper.on(\"filter.data\", this._handler_filterData);\n\n      // derive these from viewGrid\n      this.id = baseView.id;\n\n      /////\n      ///// For TEsting:\n      /////\n      // this.settings.showToolbar = 1;\n      // this.settings.isEditable = 1;\n      // this.settings.isExportable = 1;\n      // this.settings.gridFilter = {\n      //    filterOption: 1,\n      //    userFilterPosition: \"form\",\n      //    isGlobalToolbar: 1,\n      // };\n\n      // this.settings.detailsPage = \"some-uuid\";\n      // this.settings.detailTab = \"some_uuid_2\";\n      // this.settings.trackView = 1;\n      /////\n      ///// end testing\n      /////\n\n      this.columnSplitLeft = 0;\n      // {integer}\n      // Which column to \"split\"/\"freeze\" from the left side of the grid.\n\n      this.columnSplitRight = 0;\n      // {integer}\n      // The # columns to the right to freeze.\n\n      // this.datacollection = null;\n      // // {ABDataCollection}\n      // // The Webix DataCollection that manages the data we are displaying.\n\n      this.validationError = false;\n      // {bool}\n      // Has a Validation Error occured?\n\n      this.linkPage = baseView.linkPageHelper.component();\n      // {ABViewPropertyLinkPage}\n      //\n\n      const idTable = this.ids.table;\n      const ab = this.AB;\n\n      this.PopupExport = new ABPopupExport(idTable);\n      this.PopupExport.init(ab);\n      // {ABViewGridPopupExport}\n      // Popup for managing how to export our data.\n\n      this.PopupMassUpdateComponent = new ABPopupMassUpdateClass(this, idTable);\n      this.PopupMassUpdateComponent.init(ab);\n      // this.PopupMassUpdateComponent.on(\"\")\n      // {}\n      // The popup for performing a Mass Edit operation.\n\n      this.PopupSortDataTableComponent = new ABPopupSortField(idTable);\n      this.PopupSortDataTableComponent.init(ab);\n      this.PopupSortDataTableComponent.on(\"changed\", (sortOptions) => {\n         this.callbackSortData(sortOptions);\n      });\n      // {ABViewGridPopupSortFields}\n      // The popup for adding sort criteria to our grid.\n\n      this.skippableColumns = [\n         \"appbuilder_select_item\",\n         \"appbuilder_view_detail\",\n         \"appbuilder_view_track\",\n         \"appbuilder_view_edit\",\n         \"appbuilder_trash\",\n      ];\n      // {array}\n      // An array of column names that should be skipped from some of our\n      // event handlers.\n\n      // this.EditField = null;\n      // // {ABFieldXXX}\n      // // Which ABField is the focus of our PopupHeader menu?\n\n      // this.EditNode = null;\n      // // {HTML DOM}\n      // // The webix.$node where the ABField Header is that our PopupHeader\n      // // should be displayed at.\n\n      this.ignoreLocalSettings = false;\n      // {bool}\n      // should we ignore our local settings in our current context?\n      // (used in ABDesigner when our settings will change as we need to\n      // use those instead of the saved settings.)\n\n      this._gridSettings = null;\n      // {hash} { grid.id : [ {columnHeader}, {columnHeader} ...]}\n      // Keep a global copy of our local Grid settings, so we can optimize the header\n      // sizes.\n\n      this._isDatacollectionLoaded = false;\n   }\n\n   // {string}\n   // the unique key for ABViewGrids to store/retrieve their local settings\n   get keyStorageSettings() {\n      return \"abviewgrid_settings\";\n   }\n\n   detatch() {\n      this.view.filterHelper.removeAllListeners(\"filter.data\");\n      [\"changeCursor\", \"cursorStale\", \"cursorSelect\"].forEach((key) => {\n         this.datacollection?.removeListener(key, this.handler_select);\n      });\n   }\n\n   /**\n    * @method getColumnIndex()\n    * return the Datatable.getColumnIndex() value\n    * @param {string} id\n    *        the uuid of the column we are referencing.\n    * @return {integer}\n    */\n   getColumnIndex(id) {\n      let indx = this.getDataTable().getColumnIndex(id);\n      if (!this.settings.massUpdate) {\n         // the index is 0 based. So if the massUpdate feature isn't\n         // enabled, we need to add 1 to the result so they look like\n         // a 1, 2, ...\n\n         indx++;\n      }\n      return indx;\n   }\n\n   uiDatatable() {\n      const ids = this.ids;\n      const settings = this.settings;\n      const self = this;\n\n      let view = \"datatable\";\n\n      if (settings.isTreeDatable || settings.groupBy)\n         // switch datatable to support tree\n         view = \"treetable\";\n\n      let selectType = \"cell\";\n\n      if (!settings.isEditable && (settings.detailsPage || settings.editPage))\n         selectType = \"row\";\n\n      return {\n         view,\n         id: ids.datatable,\n         resizeColumn: { size: 10 },\n         resizeRow: { size: 10 },\n         prerender: false,\n         editable: settings.isEditable,\n         fixedRowHeight: false,\n         height: settings.height || 0,\n         editaction: \"custom\",\n         select: selectType,\n         footer:\n            // show footer when there are summary columns\n            settings.summaryColumns.length > 0 ||\n            settings.countColumns.length > 0,\n         tooltip: true,\n         // tooltip: {\n         //    // id: ids.tooltip,\n         //    template: (obj, common) => {\n         //       return this.toolTip(obj, common);\n         //    },\n         //    on: {\n         //       // When showing a larger image preview the tooltip sometime displays part of the image off the screen...this attempts to fix that problem\n         //       onBeforeRender: function () {\n         //          self.toolTipOnBeforeRender(this.getNode());\n         //       },\n         //       onAfterRender: function (data) {\n         //          self.toolTipOnAfterRender(this.getNode());\n         //       },\n         //    },\n         // },\n         dragColumn: true,\n         on: {\n            onBeforeSelect: function (data, preserve) {\n               if (self.skippableColumns.indexOf(data.column) != -1) {\n                  return false;\n               } else if (settings.isEditable) {\n                  const currObject = self.datacollection.datasource;\n                  const selectField = currObject.fields(\n                     (f) => f.columnName === data.column\n                  )[0];\n\n                  if (selectField == null) return true;\n\n                  const cellNode = this.getItemNode({\n                        row: data.row,\n                        column: data.column,\n                     }),\n                     rowData = this.getItem(data.row);\n\n                  return selectField.customEdit(rowData, null, cellNode);\n               } else if (!settings.detailsPage && !settings.editPage)\n                  return false;\n            },\n            onAfterSelect: (data, preserve) => {\n               // {ABObject} data\n               //            the selected object\n               // {bool} prevent\n               //        indicates whether the previous selection state should\n               //        be saved. (is multiselect and they are holding SHIFT)\n               if (this.settings.isEditable) {\n                  this.onAfterSelect(data, preserve);\n               }\n            },\n            // onBeforeEditStart: function (/*id*/) {\n            //    // Not sure what this is suposed to check, but this condition\n            //    // will always be false.\n            //    if (!this.getItem(id) == \"appbuilder_select_item\") return false;\n            // },\n            onCheck: function (row, col, val) {\n               // Update checkbox data\n               if (col == \"appbuilder_select_item\") {\n                  // do nothing because we will parse the table once we decide\n                  // if we are deleting or updating rows\n                  self.toggleUpdateDelete();\n               } else {\n                  if (settings.isEditable) {\n                     // get the field related to this col\n                     const currObject = self.datacollection.datasource;\n                     const selectField = currObject.fields(\n                        (f) => f.columnName === col\n                     )[0];\n\n                     // if the colum is not the select item column move on to\n                     // the next step to save\n                     const state = {\n                        value: val,\n                     };\n                     const editor = {\n                        row: row,\n                        column: col,\n                        config: { fieldID: selectField?.id ?? null },\n                     };\n\n                     self.onAfterEditStop(state, editor);\n                  } else {\n                     const node = this.getItemNode({\n                        row: row,\n                        column: col,\n                     });\n                     const checkbox = node.querySelector(\n                        'input[type=\"checkbox\"]'\n                     );\n\n                     if (val == 1) {\n                        checkbox.checked = false;\n                     } else {\n                        checkbox.checked = true;\n                     }\n                  }\n               }\n            },\n            onBeforeEditStop: function (state, editor) {\n               // Check if data loading is complete\n               const oldValue = state.old;\n               let newValue = state.value;\n               if (!Array.isArray(newValue)) newValue = [newValue];\n               if (\n                  oldValue != null &&\n                  oldValue != \"\" &&\n                  // If options does not load completely, then Webix returns state.value as ['', '', '']\n                  newValue.filter((val) => val != null && val != \"\").length <\n                     1 &&\n                  // Check if no data load to the option\n                  editor.getPopup?.().getList?.().data?.find({}).length < 1\n               ) {\n                  return false;\n               }\n            },\n            onAfterEditStop: (state, editor, ignoreUpdate) => {\n               if (this.validationError == false)\n                  this.onAfterEditStop(state, editor, ignoreUpdate);\n            },\n            onValidationError: function () {\n               this.validationError = true;\n            },\n            onValidationSuccess: function () {\n               this.validationError = false;\n            },\n\n            // We are sorting with server side requests now so we can remove this\n            // onAfterLoad: function () {\n            //    _logic.onAfterLoad();\n            // },\n            onColumnResize: function (\n               columnName,\n               newWidth,\n               oldWidth,\n               user_action\n            ) {\n               // if we resize the delete column we want to resize the last\n               // column but Webix will not allow since the column is split\n               const rightSplitItems = [\n                  \"appbuilder_view_detail\",\n                  \"appbuilder_view_track\",\n                  \"appbuilder_view_edit\",\n                  \"appbuilder_trash\",\n               ];\n\n               if (rightSplitItems.indexOf(columnName) != -1) {\n                  // Block events so we can leave the delete column alone\n                  this.blockEvent();\n                  // keeps original width\n                  this.setColumnWidth(columnName, oldWidth);\n                  this.unblockEvent();\n                  // Listen to events again\n\n                  // find the last column's config\n                  const column = self.getLastColumn();\n\n                  columnName = column.id;\n\n                  // determine if we are making the column larger or smaller\n                  if (newWidth < oldWidth) {\n                     newWidth = column.width + 40;\n                     // add 40 because there is not any more space to drag so we\n                     // will allow 40px increments\n                  } else {\n                     newWidth = column.width - (newWidth - 40);\n                     // take the column's width and subtrack the difference of\n                     // the expanded delet column drag\n                  }\n                  // we don't want columns to be smaller than 50 ?? do we ??\n                  // I could be wrong maybe a checkbox could be smaller so this\n                  // could change\n                  if (newWidth < 50) {\n                     newWidth = 50;\n                  }\n                  // minWidth is important because we are using fillspace:true\n                  column.minWidth = newWidth;\n                  // Sets the UI\n                  this.setColumnWidth(columnName, newWidth);\n               }\n               // Saves the new width\n               if (user_action) {\n                  self.onColumnResize(\n                     columnName,\n                     newWidth,\n                     oldWidth,\n                     user_action\n                  );\n               }\n            },\n            onRowResize: (rowId) => {\n               // V2: we no longer do anything onRowResize()\n               // before we saved the row height in the record.\n               // this.onRowResize(rowId);\n            },\n            onBeforeColumnDrag: (sourceId, event) =>\n               !(this.skippableColumns.indexOf(sourceId) !== -1),\n            onBeforeColumnDrop: (sourceId, targetId, event) =>\n               // Make sure we are not trying to drop onto one of our special\n               // columns ...\n               !(this.skippableColumns.indexOf(targetId) !== -1),\n            onAfterColumnDrop: (sourceId, targetId, event) =>\n               this.onAfterColumnDrop(sourceId, targetId, event),\n            // onAfterColumnShow: function (id) {\n            //    // console.warn(\"!! ToDo: onAfterColumnShow()\");\n            //    // $$(self.webixUiId.visibleFieldsPopup).showField(id);\n            // },\n            // onAfterColumnHide: function (id) {\n            //    // console.warn(\"!! ToDo: onAfterColumnHide()\");\n            //    // $$(self.webixUiId.visibleFieldsPopup).hideField(id);\n            // },\n\n            onHeaderClick: (id, e, node) => {\n               /* if (settings.configureHeaders) */\n               this.onHeaderClick(id, e, node);\n            },\n         },\n      };\n   }\n\n   uiFilter() {\n      return this.view.filterHelper.ui();\n\n      // make sure onFilterData is now .emit()ed instead of passing in a callback.\n   }\n\n   /**\n    * @method uiToolbar()\n    * Return the webix definition for the toolbar row for our Grids.\n    * @return {json}\n    */\n   uiToolbar() {\n      const ids = this.ids;\n      const self = this;\n\n      return {\n         view: \"toolbar\",\n         id: ids.toolbar,\n         hidden: true,\n         css: \"ab-data-toolbar\",\n         cols: [\n            {\n               view: \"button\",\n               id: ids.buttonMassUpdate,\n               css: \"webix_transparent\",\n               label: this.label(\"Edit\"),\n               icon: \"fa fa-pencil-square-o\",\n               type: \"icon\",\n               disabled: true,\n               autowidth: true,\n               click: function () {\n                  self.toolbarMassUpdate(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonDeleteSelected,\n               css: \"webix_transparent\",\n               label: this.label(\"Delete\"),\n               icon: \"fa fa-trash\",\n               type: \"icon\",\n               disabled: true,\n               autowidth: true,\n               click: function () {\n                  self.toolbarDeleteSelected(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonFilter,\n               css: \"webix_transparent\",\n               label: this.label(\"Filters\"),\n               icon: \"fa fa-filter\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarFilter(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonSort,\n               css: \"webix_transparent\",\n               label: this.label(\"Sort\"),\n               icon: \"fa fa-sort\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarSort(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonExport,\n               css: \"webix_transparent\",\n               label: this.label(\"Export\"),\n               icon: \"fa fa-print\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarExport(this.$view);\n               },\n            },\n            {},\n            {\n               id: ids.globalSearchToolbar,\n               view: \"search\",\n               placeholder: this.label(\"Search...\"),\n               on: {\n                  onTimedKeyPress: () => {\n                     const searchText = $$(ids.globalSearchToolbar).getValue();\n\n                     this.view.filterHelper.externalSearchText(searchText);\n                  },\n               },\n            },\n         ],\n      };\n   }\n\n   ui() {\n      const _uiGrid = {\n         id: this.ids.table,\n         type: \"space\",\n         borderless: true,\n         rows: [\n            {},\n            {\n               view: \"label\",\n               label: this.label(\"Select an object to load.\"),\n               inputWidth: 200,\n               align: \"center\",\n            },\n            {},\n         ],\n      };\n\n      const settings = this.settings;\n\n      if (this.datacollection || settings.dataviewID !== \"\") {\n         _uiGrid.padding = settings.padding;\n         _uiGrid.rows = [];\n         if (settings.showToolbar) {\n            _uiGrid.rows.push(this.uiToolbar());\n         }\n         if (this.settings.gridFilter.filterOption) {\n            _uiGrid.rows.push(this.uiFilter());\n         }\n\n         _uiGrid.rows.push(this.uiDatatable());\n      }\n\n      const _ui = super.ui([_uiGrid]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel = 2) {\n      if (AB) await super.init(AB);\n\n      const self = this;\n      const ids = this.ids;\n\n      // WORKAROUND : Where should we define this ??\n      // For include PDF.js\n      const abWebix = AB.Webix;\n\n      abWebix.codebase = \"\";\n      abWebix.cdn = \"/js/webix\";\n\n      // this shows the options to Hide, Filter, sort , etc...\n      // only in Designer?\n      // PopupHeaderEditComponent.init({\n      //    onClick: _logic.callbackHeaderEdit, // be notified when there is a change in the hidden fields\n      // });\n\n      // NOTE: register the onAfterRender() here, so it only registers\n      // one.\n      const $DataTable = this.getDataTable();\n\n      let throttleCustomDisplay = null;\n      let scrollStarted = null;\n\n      if (!$DataTable) return;\n\n      abWebix.extend($DataTable, abWebix.ProgressBar);\n\n      $DataTable.config.accessLevel = accessLevel;\n\n      if (accessLevel < 2) $DataTable.define(\"editable\", false);\n\n      const settings = this.settings;\n\n      const customDisplays = (data) => {\n         const CurrentObject = this.datacollection?.datasource;\n\n         if (!CurrentObject || !$DataTable.data) return;\n\n         const displayRecords = [];\n\n         const verticalScrollState = $DataTable.getScrollState().y,\n            rowHeight = $DataTable.config.rowHeight,\n            height =\n               $DataTable.$view.querySelector(\".webix_ss_body\").clientHeight,\n            startRecIndex = Math.floor(verticalScrollState / rowHeight),\n            endRecIndex = startRecIndex + $DataTable.getVisibleCount();\n\n         let index = 0;\n\n         $DataTable.data.order.each((id) => {\n            if (id != null && startRecIndex <= index && index <= endRecIndex)\n               displayRecords.push(id);\n\n            index++;\n         });\n\n         let editable = settings.isEditable;\n\n         if ($DataTable.config.accessLevel < 2) editable = false;\n\n         CurrentObject.customDisplays(\n            data,\n            this.AB._App,\n            $DataTable,\n            displayRecords,\n            editable\n         );\n      };\n\n      $DataTable.attachEvent(\"onAfterRender\", function (data) {\n         $DataTable.resize();\n\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         throttleCustomDisplay = setTimeout(() => {\n            if (scrollStarted) clearTimeout(scrollStarted);\n            customDisplays(this.data);\n         }, 350);\n\n         AB.ClassUI.CYPRESS_REF($DataTable);\n         Object.keys(ids).forEach((key) => {\n            const $el = $$(ids[key]);\n            if ($el) {\n               AB.ClassUI.CYPRESS_REF($el);\n            }\n         });\n      });\n\n      // we have some data types that have custom displays that don't look\n      // right after scrolling large data sets we need to call customDisplays\n      // again\n      $DataTable.attachEvent(\"onScroll\", function () {\n         if (scrollStarted) clearTimeout(scrollStarted);\n\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         scrollStarted = setTimeout(() => {\n            customDisplays(this.data);\n         }, 1500);\n      });\n      $DataTable.attachEvent(\"onAfterScroll\", function () {\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         throttleCustomDisplay = setTimeout(() => {\n            if (scrollStarted) clearTimeout(scrollStarted);\n            customDisplays(this.data);\n         }, 350);\n      });\n\n      // Process our onItemClick events.\n      // this is a good place to check if our delete/trash icon was clicked.\n      $DataTable.attachEvent(\"onItemClick\", function (id, e, node) {\n         // make sure we have an object selected before processing this.\n         const dc = self.datacollection;\n         const CurrentObject = dc?.datasource;\n\n         if (!CurrentObject) return;\n\n         if (settings.isEditable === 0) {\n            const items = $DataTable.getItem(id);\n         }\n         // if this was our edit icon:\n         // console.log(e.target.className);\n         if (e === \"auto\" || e.target.className.indexOf(\"eye\") > -1) {\n            // View a Details Page:\n            self.changePage(dc, id, settings.detailsPage);\n            self.toggleTab(settings.detailsTab, this);\n         } else if (e.target.className.indexOf(\"pencil\") > -1) {\n            self.changePage(dc, id, settings.editPage);\n            self.toggleTab(settings.editTab, this);\n         } else if (e.target.className.indexOf(\"track\") > -1)\n            self.emit(\"object.track\", CurrentObject, id.row);\n         // App.actions.openObjectTrack(CurrentObject, id.row);\n         else if (e.target.className.indexOf(\"clear-combo-value\") > -1) {\n            const clearValue = {};\n\n            clearValue[id.column] = \"\";\n\n            const updateRow = async () => {\n               try {\n                  const response = await CurrentObject.model().update(\n                     id.row,\n                     clearValue\n                  );\n\n                  // console.log(response);\n               } catch (err) {\n                  self.AB.notify.developer(err, {\n                     context: \"ABViewGridComponent.onItemClick\",\n                     message: \"Error updating item\",\n                     obj: CurrentObject.toObj(),\n                     id: id.row,\n                  });\n               }\n            };\n\n            updateRow();\n         }\n         // if this was our trash icon:\n         else if (e.target.className.indexOf(\"trash\") > -1) {\n            // If the confirm popup is showing, then skip to show a new one\n            if (!this._deleteConfirmPopup) {\n               this._deleteConfirmPopup = abWebix.confirm({\n                  title: self.label(\"Delete data\"),\n                  text: self.label(\"Do you want to delete this row?\"),\n                  callback: (result) => {\n                     delete this._deleteConfirmPopup;\n                     if (result) {\n                        const deleteRow = async () => {\n                           try {\n                              const response =\n                                 await CurrentObject.model().delete(id.row);\n\n                              if (response.numRows > 0) {\n                                 $DataTable.remove(id);\n                                 $DataTable.clearSelection();\n                              } else\n                                 abWebix.alert({\n                                    text: self.label(\n                                       \"No rows were effected.  This does not seem right.\"\n                                    ),\n                                 });\n                           } catch (err) {\n                              self.AB.notify.developer(err, {\n                                 context: \"ABViewGridComponent.onItemClick\",\n                                 message: \"Error deleting item\",\n                                 obj: CurrentObject.toObj(),\n                                 id: id.row,\n                              });\n\n                              //// TODO: what do we do here?\n                           }\n                        };\n\n                        deleteRow();\n                     }\n\n                     $DataTable.clearSelection();\n\n                     return true;\n                  },\n               });\n            }\n         } else if (settings.detailsPage.length) {\n            // If an icon wasn't selected but a details page is set\n            // view the details page\n            self.changePage(dc, id, settings.detailsPage);\n            self.toggleTab(settings.detailsTab, this);\n         } else if (settings.editPage.length) {\n            // If an icon wasn't selected but an edit page is set\n            // view the edit page\n            self.changePage(dc, id, settings.editPage);\n            self.toggleTab(settings.editTab, this);\n         }\n      });\n\n      // ABViewGrid Original init();\n      if (settings.showToolbar) {\n         if (\n            settings.massUpdate ||\n            settings.isSortable ||\n            settings.isExportable ||\n            (settings.gridFilter &&\n               settings.gridFilter.filterOption &&\n               settings.gridFilter.userFilterPosition === \"toolbar\")\n         )\n            $$(ids.toolbar).show();\n\n         if (!settings.massUpdate) {\n            $$(ids.buttonMassUpdate).hide();\n            $$(ids.buttonDeleteSelected).hide();\n         }\n\n         if (!settings.allowDelete) $$(ids.buttonDeleteSelected).hide();\n\n         if (settings.gridFilter) {\n            if (\n               settings.gridFilter.filterOption !== 1 ||\n               settings.gridFilter.userFilterPosition !== \"toolbar\"\n            )\n               $$(ids.buttonFilter).hide();\n\n            if (\n               settings.gridFilter.filterOption === 3 &&\n               settings.gridFilter.globalFilterPosition === \"single\"\n            )\n               $DataTable.hide();\n\n            if (settings.gridFilter.isGlobalToolbar)\n               $$(ids.globalSearchToolbar).show();\n            else $$(ids.globalSearchToolbar).hide();\n\n            if (settings.gridFilter.filterOption)\n               this.view.filterHelper.init(this.AB);\n         }\n\n         if (!settings.isSortable) $$(ids.buttonSort).hide();\n\n         if (!settings.isExportable) $$(ids.buttonExport).hide();\n      }\n\n      if (settings.hideHeader) this.hideHeader();\n\n      const dc =\n         this.datacollection || this.AB.datacollectionByID(settings.dataviewID);\n\n      if (!this._isDatacollectionLoaded) this.datacollectionLoad(dc);\n\n      // Make sure\n      this._gridSettings =\n         this._gridSettings ||\n         (await this.AB.Storage.get(this.keyStorageSettings)) ||\n         {};\n\n      if (dc?.datasource) {\n         // TRANSITION: ABViewGrid_orig line 862 ...\n\n         this.linkPage.init({\n            view: this.view,\n            datacollection: dc,\n         });\n\n         this.refreshHeader();\n      }\n   }\n\n   /**\n    * @method busy()\n    * Indicate that our datatable is currently busy loading/processing\n    * data.\n    */\n   busy() {\n      this.getDataTable()?.showProgress?.({ type: \"icon\" });\n   }\n\n   /**\n    * @method callbackFilterData()\n    * Process the provided filter options from our filterHelper.\n    * @param {fn} fnFilter\n    *        A function that returns true/false for each row of data\n    *        to determine if is should exist.\n    * @param {array} filterRules\n    *        Any Filter Rules added by the user.\n    */\n   callbackFilterData(fnFilter, filterRules = []) {\n      const ids = this.ids;\n      const $ButtonFilter = $$(ids.buttonFilter);\n\n      if ($ButtonFilter) {\n         const onlyFilterRules = this.view.filterHelper.filterRules();\n\n         $ButtonFilter.define(\"badge\", onlyFilterRules?.rules?.length ?? 0);\n         $ButtonFilter.refresh();\n      }\n\n      const dc = this.datacollection;\n\n      dc.filterCondition(filterRules);\n      dc.reloadData();\n   }\n\n   async callbackSortData(sortRules = []) {\n      const $buttonSort = $$(this.ids.buttonSort);\n\n      $buttonSort.define(\"badge\", sortRules.length || null);\n      $buttonSort.refresh();\n\n      const gridElem = this.getDataTable();\n\n      if (gridElem.data.find({}).length < gridElem.data.count()) {\n         try {\n            // NOTE: Webix's client sorting does not support dynamic loading.\n            // If the data does not be loaded, then load all data.\n            await this.datacollection.reloadData(0, 0);\n         } catch (err) {\n            this.AB.notify.developer(err, {\n               context:\n                  \"ABViewGrid:callbackSortData(): Error perform datacollection.reloadData()\",\n            });\n         }\n      }\n\n      // wait until the grid component will done to repaint UI\n      setTimeout(() => {\n         gridElem.sort((a, b) => this.PopupSortDataTableComponent.sort(a, b));\n      }, 777);\n   }\n\n   /**\n    * @method changePage()\n    * Helper method to switch to another View.\n    * @param {ABDataCollection} dv\n    *        The DataCollection we are working with.\n    * @param {obj} rowItem\n    *        the { row:#, column:{string} } of the item that was clicked.\n    * @param {ABViewPage.uuid} page\n    *        The .uuid of the ABViewPage/ABViewTab we are to swtich to.\n    *\n    */\n   changePage(dv, rowItem, page) {\n      const rowId = rowItem?.row ?? null;\n\n      // Set cursor to data view\n      if (dv) dv.setCursor(rowId);\n\n      // Pass settings to link page module\n      if (this.linkPage) this.linkPage.changePage(page, rowId);\n      else super.changePage(page);\n   }\n\n   columnConfig(headers = []) {\n      this.settings.columnConfig = headers;\n   }\n   /**\n    * @method datacollectionLoad()\n    * Assign an ABDataCollection to this component to use instead of any\n    * provided .dataviewID in our settings.\n    * NOTE: this primarily happens in the ABDesigner's Object Workspace.\n    * @param {ABDataCollection} dc\n    */\n   datacollectionLoad(dc) {\n      const oldDC = this.datacollection;\n      this.datacollection = dc;\n\n      const CurrentObject = dc?.datasource;\n      const $DataTable = this.getDataTable();\n\n      if ($DataTable) {\n         // preventing too many handlers\n         if (!this.__handler_dc_busy) {\n            this.__handler_dc_busy = () => {\n               this.busy();\n            };\n\n            this.__handler_dc_ready = () => {\n               this.ready();\n               this.populateGroupData();\n            };\n\n            this.__handler_dc_loadData = () => {\n               this.populateGroupData();\n            };\n         }\n\n         if (oldDC) {\n            // remove our listeners from the previous DC\n            oldDC.removeListener(\"initializingData\", this.__handler_dc_busy);\n            oldDC.removeListener(\"initializedData\", this.__handler_dc_ready);\n            oldDC.removeListener(\"loadData\", this.__handler_dc_loadData);\n         }\n\n         if (dc) {\n            if (dc.datacollectionLink && dc.fieldLink)\n               dc.bind($DataTable, dc.datacollectionLink, dc.fieldLink);\n            else dc.bind($DataTable);\n\n            // making sure we only have 1 registered listener on this dc\n            dc.removeListener(\"initializingData\", this.__handler_dc_busy);\n            dc.on(\"initializingData\", this.__handler_dc_busy);\n            dc.removeListener(\"initializedData\", this.__handler_dc_ready);\n            dc.on(\"initializedData\", this.__handler_dc_ready);\n            dc.removeListener(\"loadData\", this.__handler_dc_loadData);\n            dc.on(\"loadData\", this.__handler_dc_loadData);\n            this.grouping();\n\n            this._isDatacollectionLoad = true;\n         } else $DataTable.unbind();\n\n         // Be sure to pass on our CurrentObject to our dependent components.\n         if (CurrentObject) {\n            this.view.filterHelper.objectLoad(CurrentObject);\n            this.PopupMassUpdateComponent.objectLoad(\n               CurrentObject,\n               this.getDataTable()\n            );\n            this.PopupSortDataTableComponent.objectLoad(CurrentObject);\n\n            this.PopupExport.objectLoad(CurrentObject);\n            this.PopupExport.dataCollectionLoad(dc);\n            this.PopupExport.setGridComponent(this.getDataTable());\n            this.PopupExport.setHiddenFields(this.settings.hiddenFields);\n            this.PopupExport.setFilename(this.view.label);\n         }\n      }\n   }\n\n   /**\n    * @function enableUpdateDelete\n    *\n    * disable the update or delete buttons in the toolbar if there no items selected\n    * we will make this externally accessible so we can call it from within the datatable component\n    */\n   disableUpdateDelete() {\n      $$(this.ids.buttonMassUpdate)?.disable();\n      $$(this.ids.buttonDeleteSelected)?.disable();\n      // externally indicate that no rows are selected\n      this.emit(\"selection.cleared\");\n   }\n\n   /**\n    * @function enableUpdateDelete\n    *\n    * enable the update or delete buttons in the toolbar if there are any items selected\n    * we will make this externally accessible so we can call it from within the datatable component\n    */\n   enableUpdateDelete() {\n      $$(this.ids.buttonMassUpdate)?.enable();\n      $$(this.ids.buttonDeleteSelected)?.enable();\n      // externally indicate that a row has been selected\n      this.emit(\"selection\");\n   }\n\n   freezeDeleteColumn() {\n      // we are going to always freeze the delete column if the datatable\n      // is wider than the container so it is easy to get to\n      return this.getDataTable().define(\"rightSplit\", this.columnSplitRight);\n   }\n\n   /**\n    * @method getDataTable()\n    * return the webix grid component.\n    * @return {webix.grid}\n    */\n   getDataTable() {\n      return $$(this.ids.datatable);\n   }\n\n   /**\n    * @method getLastColumn\n    * return the last column of a datagrid that is resizeable\n    */\n   getLastColumn() {\n      const $DataTable = this.getDataTable();\n\n      let lastColumn = {};\n\n      // Loop through each columns config to find out if it is in the split 1 region and set it as the last item...then it will be overwritten by next in line\n      $DataTable.eachColumn((columnId) => {\n         const columnConfig = $DataTable.getColumnConfig(columnId);\n\n         if (columnConfig.split === 1) lastColumn = columnConfig;\n      });\n\n      return lastColumn;\n   }\n\n   /**\n    * @method grouping()\n    * perform any grouping operations\n    */\n   grouping() {\n      if (!this.settings.groupBy) return;\n\n      const $treetable = this.getDataTable();\n\n      // map: {\n      //     votes:[\"votes\", \"sum\"],\n      //     title:[\"year\"]\n      // }\n      const baseGroupMap = {};\n      const CurrentObject = this.datacollection.datasource;\n\n      CurrentObject.fields().forEach((f) => {\n         switch (f.key) {\n            case \"number\":\n               baseGroupMap[f.columnName] = [f.columnName, \"sum\"];\n\n               break;\n\n            case \"calculate\":\n            case \"formula\":\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  (prop, listData) => {\n                     if (!listData) return 0;\n\n                     let sum = 0;\n\n                     listData.forEach((r) => {\n                        // we only want numbers returned so pass `true` as third param\n                        // to signify that this is part of a grouping row\n                        sum += f.format(r, false, true) * 1;\n                     });\n\n                     // simulate reformat from ABFieldFormulaCore\n                     if (!f.fieldLink || f.fieldLink.key === \"calculate\")\n                        return sum;\n                     else {\n                        const rowDataFormat = {};\n\n                        rowDataFormat[f.fieldLink.columnName] = sum;\n\n                        return f.fieldLink.format(rowDataFormat);\n                     }\n                  },\n               ];\n\n               break;\n\n            case \"connectObject\":\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  (prop, listData) => {\n                     if (!listData || !listData.length) return 0;\n\n                     let count = 0;\n\n                     listData.forEach((r) => {\n                        const valRelation = r[f.relationName()];\n\n                        // array\n                        if (valRelation?.length) count += valRelation.length;\n                        // object\n                        else if (valRelation) count += 1;\n                     });\n\n                     return count;\n                  },\n               ];\n\n               break;\n\n            default:\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  function (prop, listData) {\n                     if (!listData || !listData.length) return 0;\n\n                     let count = 0;\n\n                     listData.forEach((r) => {\n                        const val = prop(r);\n\n                        // count only exists data\n                        if (val) count += 1;\n                     });\n\n                     return count;\n                  },\n               ];\n\n               break;\n         }\n      });\n\n      // set group definition\n      // $DataTable.define(\"scheme\", {\n      //    $group: {\n      //       by: settings.groupBy,\n      //       map: groupMap\n      //    }\n      // });\n\n      // NOTE: https://snippet.webix.com/e3a2bf60\n      let groupBys = (this.settings.groupBy || \"\")\n         .split(\",\")\n         .map((g) => g.trim());\n      // Reverse the array NOTE: call .group from child to root\n      groupBys = groupBys.reverse();\n\n      groupBys.forEach((colName, gIndex) => {\n         const groupMap = this.AB.cloneDeep(baseGroupMap);\n\n         let by;\n\n         // Root\n         if (gIndex === groupBys.length - 1) by = colName;\n         // Sub groups\n         else {\n            by = (row) => {\n               let byValue = row[colName];\n\n               for (let i = gIndex + 1; i < groupBys.length; i++) {\n                  byValue = `${row[groupBys[i]]} - ${byValue}`;\n               }\n\n               return byValue;\n            };\n\n            // remove parent group data\n            groupBys.forEach((gColName) => {\n               if (gColName !== colName) groupMap[gColName] = [gColName];\n            });\n         }\n\n         $treetable.data.group({\n            by: by,\n            map: groupMap,\n         });\n      });\n   }\n\n   hideHeader() {\n      const $DataTable = this.getDataTable();\n\n      $DataTable.define(\"header\", false);\n      $DataTable.refresh();\n   }\n\n   /**\n    * @function onAfterColumnDrop\n    * When an editor drops a column to save a new column order\n    * @param {string} sourceId\n    *        the columnName of the item dragged\n    * @param {string} targetId\n    *        the columnName of the item dropped on\n    * @param {event} event\n    */\n   async onAfterColumnDrop(sourceId, targetId, event) {\n      const $DataTable = this.getDataTable();\n      const CurrentObject = this.datacollection.datasource;\n      const settings = this.settings;\n      const columnConfig = this.localSettings();\n\n      // Reorder our current columnConfig\n      // We know what was moved and what item it has replaced/pushed forward\n      // so first we want to splice the item moved out of the array of fields\n      // and store it so we can put it somewhere else\n      let itemMoved = null;\n      let oPos = 0; // original position\n\n      for (let i = 0; i < columnConfig.length; i++)\n         if (columnConfig[i].id == sourceId) {\n            itemMoved = columnConfig[i];\n            columnConfig.splice(i, 1);\n            oPos = i;\n\n            break;\n         }\n      // once we have removed/stored it we can find where its new position\n      // will be by looping back through the array and finding the item it\n      // is going to push forward\n      for (let j = 0; j < columnConfig.length; j++)\n         if (columnConfig[j].id == targetId) {\n            // if the original position was before the new position we will\n            // follow webix's logic that the drop should go after the item\n            // it was placed on\n            if (oPos <= j) j++;\n\n            columnConfig.splice(j, 0, itemMoved);\n\n            break;\n         }\n\n      // special case: dropped on end and need to update .fillspace\n      // if (j == columnConfig.length - 1) {\n      //    if (columnConfig[j - 1].fillspace) {\n      //       columnConfig[j - 1].fillspace = false;\n      //       columnConfig[j].fillspace = true;\n      //    }\n      // }\n\n      // if we allow local changes\n      this.localSettings(columnConfig);\n\n      if (settings.saveLocal) this.localSettingsSave();\n\n      // Now emit this event, in case an external object is wanting to\n      // respond to this: ABDesigner.objectBuilder, Interface  Designer,\n      // we send back an array[ ABField.id, ...] in the order we have\n      // them.\n      this.emit(\n         \"column.order\",\n         columnConfig.map((c) => c.fieldID)\n      );\n\n      this.refreshHeader();\n\n      // CurrentObject.fieldReorder(sourceId, targetId)\n      //    .then(() => {\n      //       // reset each column after a drop so we do not have multiple fillspace and minWidth settings\n      //       var editiable = settings.isEditable;\n      //       if ($DataTable.config.accessLevel < 2) {\n      //          editiable = false;\n      //       }\n      //       var columnHeaders = CurrentObject.columnHeaders(true, editiable);\n      //       columnHeaders.forEach(function (col) {\n      //          if (col.id == sourceId && col.fillspace == true) {\n      //             columnHeader.fillspace = false;\n      //             columnHeader.minWidth = columnHeader.width;\n      //          }\n      //       });\n\n      //       _logic.callbacks.onColumnOrderChange(CurrentObject);\n      //       // freeze columns:\n      //       let frozenColumnID =\n      //          settings.frozenColumnID != null\n      //             ? settings.frozenColumnID\n      //             : CurrentObject.workspaceFrozenColumnID;\n      //       if (frozenColumnID != \"\") {\n      //          $DataTable.define(\n      //             \"leftSplit\",\n      //             $DataTable.getColumnIndex(frozenColumnID) + columnSplitLeft\n      //          );\n      //       } else {\n      //          $DataTable.define(\"leftSplit\", columnSplitLeft);\n      //       }\n      //       _logic.freezeDeleteColumn();\n      //       $DataTable.refreshColumns();\n      //    })\n      //    .catch((err) => {\n      //       OP.Error.log(\"Error saving new column order:\", {\n      //          error: err,\n      //       });\n      //    });\n   }\n\n   /**\n    * @function onAfterEditStop\n    * When an editor is finished.\n    * @param {json} state\n    * @param {} editor\n    * @param {} ignoreUpdate\n    * @return\n    */\n   async onAfterEditStop(state, editor, ignoreUpdate) {\n      // state:   {value: \"new value\", old: \"old value\"}\n      // editor:  { column:\"columnName\", row:ID, value:'value', getInputNode:fn(), config:{}, focus: fn(), getValue: fn(), setValue: function, getInputNode: function, render: function…}\n\n      const $DataTable = this.getDataTable();\n\n      // if you don't edit an empty cell we just need to move on\n      if (\n         (!state.old && state.value === \"\") ||\n         (state.old === \"\" && state.value === \"\")\n      ) {\n         $DataTable?.clearSelection();\n\n         return false;\n      }\n\n      const CurrentObject = this.datacollection.datasource;\n\n      if (editor.config)\n         switch (editor.config.editor) {\n            case \"number\":\n               state.value = parseFloat(state.value);\n\n               break;\n\n            case \"datetime\":\n               state.value = state.value.getTime();\n\n               if (state && state.old && state.old.getTime)\n                  state.old = state.old.getTime();\n\n               break;\n\n            default:\n            // code block\n         }\n\n      // lets make sure we are comparing things properly:\n      // reduce newValue and oldValue down to PK if they were objects\n      let newVal = state.value;\n      if (newVal) {\n         newVal = newVal[CurrentObject.PK()] || newVal;\n      }\n      let oldVal = state.old;\n      if (oldVal) {\n         oldVal = oldVal[CurrentObject.PK()] || oldVal;\n      }\n\n      // NOTE: != vs !== :\n      // want to handle when newVal = \"3\" and oldVal = 3\n      // that is why we don't use !== so that we convert the values into\n      // the same case.\n      if (newVal != oldVal) {\n         const item = $DataTable?.getItem(editor.row);\n\n         item[editor.column] = state.value;\n\n         $DataTable.removeCellCss(item.id, editor.column, \"webix_invalid\");\n         $DataTable.removeCellCss(item.id, editor.column, \"webix_invalid_cell\");\n\n         //maxlength field\n         const f = CurrentObject.fieldByID(editor.config?.fieldID);\n         if (\n            f?.settings.maxLength &&\n            state.value.length > f.settings.maxLength\n         ) {\n            this.AB.alert({\n               title: this.label(\"Limit max length\"),\n               text: this.label(\n                  \"You can enter a maximum of \" +\n                     f.settings.maxLength +\n                     \" characters\"\n               ),\n            });\n            $DataTable.addCellCss(item.id, editor.column, \"webix_invalid_cell\");\n            $DataTable.refresh(editor.row);\n            $DataTable.clearSelection();\n            return false;\n         }\n\n         const validator = CurrentObject.isValidData(item);\n\n         if (validator.pass()) {\n            //// Question: do we submit full item updates?  or just patches?\n            // IF Patch:\n            // var patch = {};\n            // patch.id = item.id;\n            // patch[editor.column] = item[editor.column];\n            // await CurrentObject.model().update(item.id, patch)\n\n            const ab = this.AB;\n\n            try {\n               await CurrentObject.model().update(item.id, item);\n\n               if ($DataTable.exists(editor.row)) {\n                  $DataTable.updateItem(editor.row, item);\n                  $DataTable.clearSelection();\n                  $DataTable.refresh(editor.row);\n               }\n            } catch (err) {\n               ab.notify.developer(err, {\n                  context: \"ABViewGrid:onAfterEditStop(): Error saving item\",\n                  item,\n                  editor,\n                  state,\n                  object: CurrentObject.toObj(),\n               });\n\n               $DataTable.clearSelection();\n\n               if (\n                  ab.Validation.isGridValidationError(\n                     err,\n                     editor.row,\n                     $DataTable\n                  )\n               ) {\n                  // Do we reset the value?\n                  // item[editor.column] = state.old;\n                  // $DataTable.updateItem(editor.row, item);\n               } else {\n                  // this was some other Error!\n               }\n            }\n            // CurrentObject.model()\n            //    .update(item.id, item)\n            //    .then(() => {\n            //       if ($DataTable.exists(editor.row)) {\n            //          $DataTable.updateItem(editor.row, item);\n            //          $DataTable.clearSelection();\n            //          $DataTable.refresh(editor.row);\n            //       }\n            //    })\n            //    .catch((err) => {\n            //       OP.Error.log(\"Error saving item:\", {\n            //          error: err\n            //       });\n\n            //       $DataTable.clearSelection();\n            //       if (\n            //          OP.Validation.isGridValidationError(\n            //             err,\n            //             editor.row,\n            //             $DataTable\n            //          )\n            //       ) {\n            //          // Do we reset the value?\n            //          // item[editor.column] = state.old;\n            //          // $DataTable.updateItem(editor.row, item);\n            //       } else {\n            //          // this was some other Error!\n            //       }\n            //    });\n         } else validator.updateGrid(editor.row, $DataTable);\n      } else $DataTable?.clearSelection();\n\n      return false;\n\n      // var item = $$(self.webixUiId.objectDatatable).getItem(editor.row);\n\n      // self.updateRowData(state, editor, ignoreUpdate)\n      //    .fail(function (err) { // Cached\n      //       item[editor.column] = state.old;\n      //       $$(self.webixUiId.objectDatatable).updateItem(editor.row, item);\n      //       $$(self.webixUiId.objectDatatable).refresh(editor.row);\n\n      //       // TODO : Message\n\n      //       $$(self.webixUiId.objectDatatable).hideProgress();\n      //    })\n      //    .then(function (result) {\n      //       if (item) {\n      //          item[editor.column] = state.value;\n\n      //          if (result && result.constructor.name === 'Cached' && result.isUnsync())\n      //             item.isUnsync = true;\n\n      //          $$(self.webixUiId.objectDatatable).updateItem(editor.row, item);\n      //       }\n\n      //       // TODO : Message\n\n      //       $$(self.webixUiId.objectDatatable).hideProgress();\n      //    });\n   }\n\n   /**\n    * @function onAfterSelect\n    * This is when a user clicks on a cell.  We use the onAfterSelect to\n    * trigger a normal .editCell() if there isn't a custom editor for this field.\n    * @param {json} data webix cell data\n    * @return\n    */\n   onAfterSelect(data /*, preserve */) {\n      // data: {row: 1, column: \"name\", id: \"1_name\", toString: function}\n      // data.row: ABObject.id\n      // data.column => columnName of the field\n\n      // Normal update data\n      this.getDataTable()?.editCell(data.row, data.column);\n   }\n\n   /**\n    * @function onColumnResizeResize\n    * This is when a user adjusts the size of a column\n    * @param {} columnName\n    * @param {int} newWidth\n    * @param {int} oldWidth\n    * @param {} user_action\n    * @return\n    */\n   async onColumnResize(columnName, newWidth, oldWidth, user_action) {\n      // update the settings\n\n      let requireRefresh = false;\n\n      const ab = this.AB;\n\n      if (newWidth < 30) {\n         newWidth = 30;\n         requireRefresh = true;\n\n         ab.Webix.message({\n            type: \"info\",\n            text: this.label(\"minimum column width is {0}\", [30]),\n            expire: 1000,\n         });\n      }\n\n      const localSettings = this.localSettings();\n\n      if (localSettings) {\n         const header = localSettings.find((h) => h.id == columnName);\n\n         if (header) {\n            header.width = newWidth;\n\n            delete header.adjust;\n         }\n      }\n\n      this.localSettings(localSettings);\n\n      if (this.settings.saveLocal) {\n         await this.localSettingsSave();\n         // for (const item in GridSettings) {\n         //    GridSettings[item].forEach((item) => {\n         //       // we cannot include field info because of the cicular structure\n         //       if (item?.footer?.field) {\n         //          delete item.footer.field;\n         //       }\n         //    });\n         // }\n         // await this.AB.Storage.set(this.keyStorageSettings, GridSettings);\n      }\n\n      // refresh the display\n      if (requireRefresh) this.refreshHeader();\n\n      this.freezeDeleteColumn();\n\n      // this.getDataTable().refreshColumns();\n\n      // TODO: allow external app to respond in special cases:\n      // eg: ABDesigner object workspace, interface builder, etc...\n      this.emit(\"column.resize\", columnName, newWidth, oldWidth);\n   }\n\n   /**\n    * @method onHeaderClick\n    * process the user clicking on the header for one of our columns.\n    */\n   onHeaderClick(id, e, node) {\n      if (this.skippableColumns.indexOf(id.column) !== -1) return false;\n\n      // save our EditNode & EditField:\n      // this.EditNode = node;\n\n      const EditField = this.datacollection.datasource.fields(\n         (f) => f.columnName === id.column\n      )[0];\n      // if (this.EditField) {\n      //    // show the popup\n      //    PopupHeaderEditComponent.show(node, this.EditField);\n      // }\n\n      this.emit(\"column.header.clicked\", node, EditField);\n\n      return false;\n   }\n\n   /**\n    * @method onShow()\n    * perform any preparations necessary when showing this component.\n    */\n   onShow() {\n      super.onShow();\n\n      // make sure our grid is properly .adjust()ed to the screen.\n      this.getDataTable()?.adjust();\n\n      const dv = this.datacollection;\n\n      if (dv)\n         [\"changeCursor\", \"cursorStale\", \"cursorSelect\"].forEach((key) => {\n            this.eventAdd({\n               emitter: dv,\n               eventName: key,\n               listener: this.handler_select.bind(this),\n            });\n         });\n   }\n\n   /**\n    * @method ready()\n    * Indicate that our datatable is currently ready for operation.\n    */\n   ready() {\n      const dc = this.datacollection;\n      if (\n         this.isCustomGroup &&\n         dc?.dataStatus != dc?.dataStatusFlag.initialized\n      )\n         return;\n\n      this.getDataTable()?.hideProgress?.();\n   }\n\n   /**\n    * @function refreshHeader()\n    *\n    * refresh the header for the table apart from the refresh() command\n    * @param {bool} ignoreLocal\n    *        Should we ignore our local settings and build directly from\n    *        our config settings?\n    */\n   refreshHeader(ignoreLocal = this.ignoreLocal) {\n      // columnSplitRight = 0;\n      // wait until we have an Object defined:\n      const CurrentObject = this.datacollection.datasource;\n\n      if (!CurrentObject) return;\n\n      const ids = this.ids;\n      const $DataTable = $$(ids.datatable);\n\n      if (!$DataTable) return;\n\n      const accessLevel = $DataTable.config.accessLevel;\n\n      $DataTable.define(\"leftSplit\", 0);\n      $DataTable.define(\"rightSplit\", 0);\n\n      let rowHeight = 0;\n\n      CurrentObject.imageFields().forEach((image) => {\n         const settings = image.getSettings();\n\n         if (settings.useHeight && settings.imageHeight > rowHeight)\n            rowHeight = settings.imageHeight;\n      });\n\n      if (rowHeight) $DataTable.define(\"rowHeight\", rowHeight);\n\n      // $DataTable.clearAll();\n\n      const settings = this.settings;\n\n      let editable = settings.isEditable;\n\n      if ($DataTable.config.accessLevel < 2) editable = false;\n\n      //// update DataTable structure:\n      // get column list from our local settings\n      const objColumnHeaders = CurrentObject.columnHeaders(\n         true,\n         editable,\n         // TRANSITION: moving these from .columnHeaders() to here:\n         [], //settings.summaryColumns,\n         [], //settings.countColumns,\n         [] //settings.hiddenFields\n      );\n\n      let columnHeaders = this.localSettings();\n\n      const ab = this.AB;\n\n      // if that is empty, pull from our settings.columnConfig\n      if (!columnHeaders || ignoreLocal)\n         columnHeaders = ab.cloneDeep(this.settings.columnConfig);\n\n      // if that is empty for some reason, rebuild from our CurrentObject\n      if (!columnHeaders || columnHeaders.length === 0)\n         columnHeaders = objColumnHeaders;\n\n      // sanity check:\n      // columnHeaders can't contain a column that doesn't exist in objColumHeaders:\n      // (eg: a field might have been removed but localStorage doesn't know that )\n      const objColumnHeaderIDs = objColumnHeaders.map((h) => h.fieldID);\n\n      columnHeaders = columnHeaders.filter(\n         (c) => objColumnHeaderIDs.indexOf(c.fieldID) > -1\n      );\n\n      // default our columnConfig values to our columnHeaders:\n      columnHeaders.forEach((c) => {\n         // we want to overwrite our default settings with anything stored\n         // in local storage\n         const origCol = objColumnHeaders.find((h) => h.fieldID === c.fieldID);\n\n         // none of our functions can be stored in localStorage, so scan\n         // the original column and attach any template functions to our\n         // stashed copy.\n         // also the suggest for selects and connected fields may contain a\n         // function so go ahead and copy the original suggest to the column\n         Object.keys(origCol).forEach((k) => {\n            if (typeof origCol[k] === \"function\" || k === \"suggest\") {\n               c[k] = origCol[k];\n            }\n         });\n\n         const f = CurrentObject.fieldByID(c.fieldID);\n\n         if (!f) return;\n\n         // if it's a hidden field:\n         if (settings.hiddenFields.indexOf(f.columnName) > -1) {\n            c.hidden = true;\n         }\n\n         // add summary footer:\n         if (settings.summaryColumns.indexOf(f.id) > -1) {\n            if (f.key == \"calculate\" || f.key == \"formula\")\n               c.footer = { content: \"totalColumn\", field: f };\n            else c.footer = { content: \"summColumn\" };\n         }\n         // or add the count footer\n         else if (settings.countColumns.indexOf(f.id) > -1)\n            c.footer = { content: \"countColumn\" };\n      });\n\n      let localSettings = this.localSettings();\n\n      if (!localSettings || ignoreLocal) {\n         this.localSettings(columnHeaders);\n\n         localSettings = columnHeaders;\n      }\n\n      columnHeaders = ab.cloneDeep(localSettings);\n\n      const fieldValidations = [];\n      const rulePops = [];\n\n      columnHeaders.forEach((col) => {\n         col.fillspace = false;\n\n         // parse the rules because they were stored as a string\n         // check if rules are still a string...if so lets parse them\n         if (col.validationRules) {\n            if (typeof col.validationRules === \"string\") {\n               col.validationRules = JSON.parse(col.validationRules);\n            }\n\n            if (col.validationRules.length) {\n               const validationUI = [];\n\n               // there could be more than one so lets loop through and build the UI\n               col.validationRules.forEach((rule) => {\n                  const Filter = ab.filterComplexNew(\n                     col.id /*+ \"_\" + webix.uid()*/\n                  );\n                  // add the new ui to an array so we can add them all at the same time\n                  validationUI.push(Filter.ui);\n                  // store the filter's info so we can assign values and settings after the ui is rendered\n                  fieldValidations.push({\n                     filter: Filter,\n                     view: Filter.ids.querybuilder,\n                     columnName: col.id,\n                     validationRules: rule.rules,\n                     invalidMessage: rule.invalidMessage,\n                  });\n               });\n\n               // create a unique view id for popup\n               const popUpId =\n                  ids.rules + \"_\" + col.id; /* + \"_\" + webix.uid() */\n\n               // store the popup ids so we can remove the later\n               rulePops.push(popUpId);\n               // add the popup to the UI but don't show it\n               ab.Webix.ui({\n                  view: \"popup\",\n                  css: \"ab-rules-popup\",\n                  id: popUpId,\n                  body: {\n                     rows: validationUI,\n                  },\n               });\n            }\n         }\n\n         // group header\n         if (\n            settings.groupBy &&\n            (settings.groupBy || \"\").indexOf(col.id) > -1\n         ) {\n            const groupField = CurrentObject.fieldByID(col.fieldID);\n\n            if (groupField)\n               col.template = (obj, common) => {\n                  // return common.treetable(obj, common) + obj.value;\n                  if (obj.$group) {\n                     const rowData = ab.cloneDeep(obj);\n\n                     rowData[groupField.columnName] = rowData.value;\n\n                     return (\n                        common.treetable(obj, common) +\n                        groupField.format(rowData)\n                     );\n                  } else return groupField.format(obj);\n               };\n         }\n      });\n\n      if (fieldValidations.length) {\n         // we need to store the rules for use later so lets build a container array\n         const complexValidations = [];\n\n         fieldValidations.forEach((f) => {\n            // init each ui to have the properties (app and fields) of the object we are editing\n            // f.filter.applicationLoad(CurrentObject.application);\n            f.filter.fieldsLoad(CurrentObject.fields());\n            // now we can set the value because the fields are properly initialized\n            f.filter.setValue(f.validationRules);\n            // if there are validation rules present we need to store them in a lookup hash\n            // so multiple rules can be stored on a single field\n            if (!Array.isArray(complexValidations[f.columnName]))\n               complexValidations[f.columnName] = [];\n\n            // now we can push the rules into the hash\n            complexValidations[f.columnName].push({\n               filters: f.filter.getValue(),\n               values: $DataTable.getSelectedItem[f.columnName],\n               invalidMessage: f.invalidMessage,\n            });\n         });\n\n         const rules = {};\n\n         // store the rules in a data param to be used later\n         $DataTable.$view.complexValidations = complexValidations;\n         // use the lookup to build the validation rules\n         Object.keys(complexValidations).forEach((key) => {\n            rules[key] = (value, data) => {\n               // default valid is true\n               let isValid = true;\n               let invalidMessage = \"\";\n\n               $DataTable.$view.complexValidations[key].forEach((filter) => {\n                  // convert rowData from { colName : data } to { id : data }\n                  const newData = {};\n\n                  (CurrentObject.fields() || []).forEach((field) => {\n                     newData[field.id] = data[field.columnName];\n                  });\n\n                  // for the case of \"this_object\" conditions:\n                  if (data.uuid) {\n                     newData[\"this_object\"] = data.uuid;\n                     data[\"this_object\"] = data.uuid;\n                  }\n\n                  // use helper funtion to check if valid\n                  // const ruleValid = filter.filters(newData);\n                  const filterComplex = ab.filterComplexNew(\n                     `rule-validate-${key}`\n                  );\n                  filterComplex.fieldsLoad(\n                     CurrentObject.fields(),\n                     CurrentObject\n                  );\n                  const ruleValid = filterComplex.isValid(data, filter.filters);\n\n                  // if invalid we need to tell the field\n                  if (!ruleValid) {\n                     isValid = false;\n                     invalidMessage = filter.invalidMessage;\n                  }\n               });\n\n               // we also need to define an error message\n               if (!isValid)\n                  ab.Webix.message({\n                     type: \"error\",\n                     text: invalidMessage,\n                  });\n\n               return isValid;\n            };\n         });\n         // define validation rules\n         $DataTable.define(\"rules\", rules);\n         // store the array of view ids on the webix object so we can get it later\n         $DataTable.config.rulePops = rulePops;\n         $DataTable.refresh();\n      } else {\n         // check if the previous datatable had rule popups and remove them\n         if ($DataTable.config.rulePops)\n            $DataTable.config.rulePops.forEach((popup) => {\n               if ($$(popup)) $$(popup).destructor();\n            });\n         // remove any validation rules from the previous table\n         $DataTable.define(\"rules\", {});\n         $DataTable.refresh();\n      }\n\n      const addedColumns = [];\n      // {array} the .id of the columnHeaders we add based upon our settings.\n      // this will help us pick the lastColumn that is part of the\n      // object.\n\n      if (settings.labelAsField) {\n         // console.log(CurrentObject);\n         columnHeaders.unshift({\n            id: \"appbuilder_label_field\",\n            header: \"Label\",\n            fillspace: true,\n            template: (obj) => CurrentObject.displayData(obj),\n            // css: { 'text-align': 'center' }\n         });\n         addedColumns.push(\"appbuilder_label_field\");\n      }\n\n      if (settings.massUpdate && accessLevel === 2) {\n         columnHeaders.unshift({\n            id: \"appbuilder_select_item\",\n            header: { content: \"masterCheckbox\", contentId: \"mch\" },\n            width: 40,\n            template: \"<div class='singleSelect'>{common.checkbox()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         this.columnSplitLeft = 1;\n         addedColumns.push(\"appbuilder_select_item\");\n      } else this.columnSplitLeft = 0;\n\n      if (settings.detailsPage !== \"\" && !settings.hideButtons) {\n         columnHeaders.push({\n            id: \"appbuilder_view_detail\",\n            header: \"\",\n            width: 40,\n            template: (obj, common) =>\n               \"<div class='detailsView'><span class='webix_icon fa fa-eye'></span></div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_detail\");\n      }\n\n      if (settings.trackView !== 0 && accessLevel === 2) {\n         columnHeaders.push({\n            id: \"appbuilder_view_track\",\n            header: \"\",\n            width: 40,\n            template:\n               \"<div class='track'><span class='track fa fa-history'></span></div>\",\n            css: { \"text-align\": \"center\", cursor: \"pointer\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_track\");\n      }\n\n      if (\n         settings.editPage !== \"\" &&\n         !settings.hideButtons &&\n         accessLevel === 2\n      ) {\n         columnHeaders.push({\n            id: \"appbuilder_view_edit\",\n            header: \"\",\n            width: 40,\n            template: \"<div class='edit'>{common.editIcon()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_edit\");\n      }\n\n      if (settings.allowDelete && accessLevel === 2) {\n         columnHeaders.push({\n            id: \"appbuilder_trash\",\n            header: \"\",\n            width: 40,\n            template: \"<div class='trash'>{common.trashIcon()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_trash\");\n      }\n\n      // find our last displayed column (that isn't one we added);\n      let lastCol = null;\n\n      for (let i = columnHeaders.length - 1; i >= 0; i--) {\n         const col = columnHeaders[i];\n         if (!col.hidden && addedColumns.indexOf(col.id) === -1) {\n            lastCol = col;\n            break;\n         }\n      }\n\n      if (lastCol) {\n         lastCol.fillspace = true;\n         lastCol.minWidth = lastCol.width;\n         lastCol.width = 150; // set a width for last column but by default it will fill the available space or use the minWidth to take up more\n      }\n\n      $DataTable.refreshColumns(columnHeaders);\n\n      // the addedColumns represent the additional icons that can be added.\n      this.columnSplitRight = addedColumns.length;\n\n      // the .massUpdate gets added to Left so don't include that in split right:\n      if (addedColumns.indexOf(\"appbuilder_select_item\") > -1)\n         this.columnSplitRight -= 1;\n      // .columnSplitRight can't be < 0\n      if (this.columnSplitRight < 0) this.columnSplitRight = 0;\n\n      // freeze columns:\n      const frozenColumnID = settings.frozenColumnID;\n\n      if (frozenColumnID != \"\")\n         $DataTable.define(\n            \"leftSplit\",\n            $DataTable.getColumnIndex(frozenColumnID) + 1\n         );\n      else $DataTable.define(\"leftSplit\", this.columnSplitLeft);\n\n      this.freezeDeleteColumn();\n      $DataTable.refreshColumns();\n      // }\n   }\n\n   /**\n    * localSettingsSave()\n    * Persist our current working copy of our GridSettings to localStorage.\n    * @return {Promise}\n    */\n   async localSettingsSave() {\n      const ab = this.AB;\n      const savedLocalSettings =\n         (await ab.Storage.get(this.keyStorageSettings)) || {};\n      const _gridSettings = this._gridSettings;\n\n      savedLocalSettings[this.settingsID()] = _gridSettings[this.settingsID()]\n         ? _gridSettings[this.settingsID()]\n         : [];\n\n      for (const item in savedLocalSettings) {\n         savedLocalSettings[item].forEach((item) => {\n            // we cannot include field info because of the cicular structure\n            if (item?.footer?.field) delete item.footer.field;\n         });\n      }\n\n      await ab.Storage.set(this.keyStorageSettings, savedLocalSettings);\n   }\n\n   /**\n    * @method localSettings()\n    * An interface method to handle get/set operations on our local GridSettings\n    * storage.\n    * .localStorage() : a getter to return the current value\n    * .localStorage(value) : a setter to save value as our current value.\n    * @param {various} value\n    *        the value to set to our settings.\n    * @return {various}\n    */\n   localSettings(value = null) {\n      const _gridSettings = this._gridSettings;\n\n      if (value) _gridSettings[this.settingsID()] = value;\n      else return _gridSettings[this.settingsID()];\n   }\n\n   /**\n    * @method selectRow()\n    * Select the grid row that correspondes to the provided rowData.\n    * @param {json} rowData\n    *        A key=>value hash of data that matches an entry in the grid.\n    *        rowData.id should match an existing entry.\n    */\n   selectRow(rowData) {\n      let id = rowData?.id ?? rowData;\n      if (this.__timeout_selectRow) {\n         console.log(\"Duplicate selectRow():\", id);\n         clearTimeout(this.__timeout_selectRow);\n      }\n      this.__timeout_selectRow = setTimeout(() => {\n         const $DataTable = this.getDataTable();\n         if (!$DataTable) return;\n\n         if (!id) $DataTable.unselect();\n         else if ($DataTable.exists(id)) {\n            $DataTable.select(id, false);\n            $DataTable.showItem(id);\n         } else $DataTable.select(null, false);\n\n         this.__timeout_selectRow = null;\n      }, 15);\n   }\n\n   /**\n    * @method settingsID()\n    * return the unique key for this Grid + object combo to store data\n    * in our localStorage.\n    * @return {string}\n    */\n   settingsID() {\n      const CurrentObject = this.datacollection.datasource;\n\n      return `${this.id}-${CurrentObject ? CurrentObject.id : \"0\"}`;\n   }\n\n   /**\n    * @method toggleTab()\n    * recursively toggle tabs into view once a user chooses a detail/edit view\n    * to display.\n    * @param {ABView.id} parentTab\n    * @param {webix.view} wb\n    */\n   toggleTab(parentTab, wb) {\n      // find the tab || if we didn't pass and id we may have passed a domNode\n      const tab =\n         wb.getTopParentView().queryView({ id: parentTab }) || $$(parentTab);\n\n      if (!tab) return;\n\n      // set the tabbar to to the tab\n      const tabbar = tab.getParentView().getParentView();\n\n      if (!tabbar) return;\n\n      // if we have reached the top we won't have a tab\n      if (tabbar.setValue) tabbar.setValue(parentTab);\n\n      // find if it is in a multiview of a tab\n      const nextTab = tabbar.queryView({ view: \"scrollview\" }, \"parent\");\n\n      // if so then do this again\n      if (nextTab) this.toggleTab(nextTab, wb);\n   }\n\n   toggleUpdateDelete() {\n      const $DataTable = this.getDataTable();\n\n      let checkedItems = 0;\n\n      $DataTable.data.each((obj) => {\n         if (\n            typeof obj !== \"undefined\" &&\n            Object.prototype.hasOwnProperty.call(\n               obj,\n               \"appbuilder_select_item\"\n            ) &&\n            obj.appbuilder_select_item === 1\n         )\n            checkedItems++;\n      });\n\n      if (checkedItems > 0) this.enableUpdateDelete();\n      else this.disableUpdateDelete();\n   }\n\n   toolbarDeleteSelected($view) {\n      const $DataTable = this.getDataTable();\n      const CurrentObject = this.datacollection.datasource;\n      const deleteTasks = [];\n\n      $DataTable.data.each((row) => {\n         if (\n            typeof row !== \"undefined\" &&\n            // row.hasOwnProperty(\"appbuilder_select_item\") &&\n            Object.prototype.hasOwnProperty.call(\n               row,\n               \"appbuilder_select_item\"\n            ) &&\n            row.appbuilder_select_item === 1\n         ) {\n            // NOTE: store a fn() to run later.\n            deleteTasks.push(() => CurrentObject.model().delete(row.id));\n         }\n      });\n\n      const abWebix = this.AB.Webix;\n\n      if (deleteTasks.length > 0)\n         abWebix.confirm({\n            title: this.label(\"Delete Multiple Records\"),\n            text: this.label(\n               \"Are you sure you want to delete the selected records?\"\n            ),\n            callback: async (result) => {\n               if (result) {\n                  // Now run those functions\n                  await Promise.all(deleteTasks.map((t) => t()));\n\n                  // Anything we need to do after we are done.\n                  this.disableUpdateDelete();\n               }\n            },\n         });\n      else\n         abWebix.alert({\n            title: this.label(\"No Records Selected\"),\n            text: this.label(\n               \"You need to select at least one record...did you drink your coffee today?\"\n            ),\n         });\n   }\n\n   toolbarFilter($view) {\n      this.view.filterHelper.showPopup($view);\n   }\n\n   toolbarSort($view) {\n      this.PopupSortDataTableComponent.show($view);\n   }\n\n   toolbarExport($view) {\n      this.PopupExport.show($view);\n   }\n\n   toolbarMassUpdate($view) {\n      this.PopupMassUpdateComponent.show($view);\n   }\n\n   /**\n    * @function toolTip()\n    *\n    * Retrieve the items toolTip\n    */\n   toolTip(obj, common) {\n      const CurrentObject = this.datacollection.datasource;\n      const imageFieldColNames = CurrentObject.imageFields().map(\n         (f) => f.columnName\n      );\n\n      let tip = \"\";\n\n      const columnName = common.column.id.replace(\" \", \"\");\n\n      if (Array.isArray(obj[columnName])) {\n         obj[columnName].forEach(function (o) {\n            if (o.text) tip += o.text + \"<br/>\";\n         });\n      } else if (\n         typeof obj[columnName + \"__relation\"] !== \"undefined\" &&\n         typeof obj[columnName] === \"number\"\n      )\n         tip = obj[columnName + \"__relation\"].text;\n      else if (typeof obj[columnName + \"__relation\"] !== \"undefined\") {\n         let relationData = obj[columnName + \"__relation\"];\n\n         if (!Array.isArray(relationData)) relationData = [relationData];\n\n         (relationData || []).forEach(function (o) {\n            if (o) tip += o.text + \"<br/>\";\n         });\n      } else if (imageFieldColNames.indexOf(columnName) !== -1) {\n         if (!obj[columnName]) {\n            return \"\";\n         } else {\n            // TODO: we need to get this URL from the ABFieldImage object!\n            tip = `<img style='max-width: 500px; max-height: 500px;' src='/file/${obj[columnName]}' />`;\n         }\n      } else if (common.column.editor === \"date\")\n         tip = common.column.format(obj[columnName]);\n      else if (common.column.editor === \"richselect\")\n         CurrentObject.fields().forEach((f) => {\n            if (f.columnName === columnName) {\n               if (f.settings.options) {\n                  f.settings.options.forEach((o) => {\n                     if (o.id === obj[columnName]) {\n                        tip = o.text;\n                     }\n                  });\n               }\n            }\n         });\n      else tip = obj[columnName];\n\n      if (!tip) return \"\";\n      else return tip;\n   }\n\n   /**\n    * @function toolTipOnBeforeRender()\n    *\n    * Add visibility \"hidden\" to all tooltips before render so we can move to a new location without the visual jump\n    */\n   toolTipOnBeforeRender(node) {\n      // var node = $$(ids.tooltip).getNode();\n      node.style.visibility = \"hidden\";\n   }\n\n   /**\n    * @function toolTipOnAfterRender()\n    *\n    * If the tooltip is displaying off the screen we want to try to reposition it for a better experience\n    */\n   toolTipOnAfterRender(node) {\n      // var node = $$(ids.tooltip).getNode();\n      if (node.firstChild?.nodeName === \"IMG\") {\n         setTimeout(() => {\n            const imgBottom = parseInt(node.style.top.replace(\"px\", \"\")) + 500;\n            const imgRight = parseInt(node.style.left.replace(\"px\", \"\")) + 500;\n\n            if (imgBottom > window.innerHeight) {\n               const imgOffsetY = imgBottom - window.innerHeight;\n               const newTop =\n                  parseInt(node.style.top.replace(\"px\", \"\")) - imgOffsetY;\n               node.style.top = newTop + \"px\";\n            }\n\n            if (imgRight > window.innerWidth) {\n               const imgOffsetX = imgRight - window.innerWidth;\n               const newLeft =\n                  parseInt(node.style.left.replace(\"px\", \"\")) - imgOffsetX;\n               node.style.left = newLeft + \"px\";\n            }\n\n            node.style.visibility = \"visible\";\n         }, 250);\n      } else node.style.visibility = \"visible\";\n   }\n\n   get isCustomGroup() {\n      const dc = this.datacollection;\n      const CurrentObject = dc?.datasource;\n      const $DataTable = this.getDataTable();\n\n      return (\n         $DataTable?.config?.view === \"treetable\" && !CurrentObject?.isGroup\n      );\n   }\n\n   populateGroupData() {\n      if (!this.isCustomGroup) return;\n\n      this.busy();\n\n      const dc = this.datacollection;\n      const $DataTable = this.getDataTable();\n\n      $DataTable.clearAll();\n      $DataTable.parse(dc.getData() || []);\n\n      this.grouping();\n      this.ready();\n   }\n}\n","const ABViewGridCore = require(\"../../core/views/ABViewGridCore\");\nimport ABViewGridComponent from \"./viewComponent/ABViewGridComponent\";\nimport ABViewGridFilter from \"./viewProperties/ABViewPropertyFilterData\";\nconst ABViewPropertyLinkPage =\n   require(\"./viewProperties/ABViewPropertyLinkPage\").default;\n\nexport default class ABViewGrid extends ABViewGridCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // filter property\n      this.filterHelper.fromSettings(this.settings.gridFilter);\n   }\n\n   propertyGroupByList(ids, groupBy) {\n      let colNames = groupBy || [];\n      if (typeof colNames == \"string\") {\n         colNames = colNames.split(\",\");\n      }\n\n      let options = $$(ids.groupBy).getList().data.find({});\n\n      $$(ids.groupByList).clearAll();\n      colNames.forEach((colName) => {\n         let opt = options.filter((o) => o.id == colName)[0];\n         if (opt) {\n            $$(ids.groupByList).add(opt);\n         }\n      });\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewGridComponent(this);\n   }\n\n   get filterHelper() {\n      if (this.__filterHelper == null) {\n         this.__filterHelper = new ABViewGridFilter(\n            this.AB,\n            `${this.id}_filterHelper`\n         );\n      }\n\n      return this.__filterHelper;\n   }\n\n   get linkPageHelper() {\n      if (this.__linkPageHelper == null)\n         this.__linkPageHelper = new ABViewPropertyLinkPage();\n\n      return this.__linkPageHelper;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let origWS = this.warningsSilent;\n      this.warningsSilent = true;\n      let DC = this.datacollection;\n      this.warningsSilent = origWS;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n}\n","/*\n * ABViewGridPopupSortFields\n *\n * Manage the Sort Fields popup.\n *\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\n\nvar L = null;\n\nexport default class AB_Work_Object_Workspace_PopupSortFields extends ClassUI {\n   constructor(idBase) {\n      idBase = idBase || \"abviewgridpopupSortFields\";\n\n      super({\n         component: `${idBase}_popupSort`,\n         list: `${idBase}_popupSort_list`,\n         form: `${idBase}_popupSort_form`,\n      });\n\n      this.CurrentObject = null;\n      // {ABObject}\n      // The current ABObject we are working with.\n\n      this._blockOnChange = false;\n      // {bool}\n      // Should we skip the onChange handler processing at this time?\n\n      this._settings = null;\n      // {json}\n      // default sort settings.\n\n      if (!L) {\n         L = (...params) => {\n            return (this.AB ?? AB).Multilingual.label(...params);\n         };\n      }\n   }\n\n   uiForm() {\n      const compId = this.ids.component;\n      return {\n         view: \"form\",\n         id: this.ids.form,\n         borderless: true,\n         elements: [\n            {\n               view: \"button\",\n               type: \"form\",\n               css: \"webix_primary\",\n               value: L(\"Add new sort\"),\n               on: {\n                  onItemClick: (/* id, e, node */) => {\n                     this.clickAddNewSort();\n                     this.triggerOnChange();\n                  },\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `${compId} add sort button`\n                     );\n                  },\n               },\n            },\n         ],\n      };\n   }\n\n   ui() {\n      return {\n         view: \"popup\",\n         id: this.ids.component,\n         // autoheight:true,\n         width: 600,\n         body: this.uiForm(),\n         on: {\n            onShow: () => {\n               this.onShow();\n            },\n         },\n      };\n   }\n\n   // Our init() function for setting up our UI\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n\n      (this.AB.Webix ?? webix).ui(this.ui());\n   }\n\n   /**\n    * @function clickAddNewSort\n    * When the user clicks the \"Add New Sort\" button, this routine will\n    * add another row to the sort form.\n    * @param {string} fieldId\n    *        The ABField.id of the field to auto select in this new row.\n    * @param {string} dir\n    *        The sort order to auto select in this new row.\n    */\n   // clickAddNewSort: function(by, dir, isMulti, id) {\n   clickAddNewSort(fieldId, dir) {\n      var self = this;\n      var sort_form = $$(this.ids.form);\n\n      var viewIndex = sort_form.getChildViews().length - 1;\n      var listFields = this.getFieldList(true);\n      sort_form.addView(\n         {\n            id: `sort_${viewIndex + 1}`,\n            cols: [\n               {\n                  view: \"combo\",\n                  width: 220,\n                  options: listFields,\n                  on: {\n                     onChange: function (columnId) {\n                        var el = this;\n                        self.onChangeCombo(columnId, el);\n                     },\n                  },\n               },\n               this._valueElement(),\n               {\n                  view: \"button\",\n                  css: \"webix_danger\",\n                  icon: \"fa fa-trash\",\n                  type: \"icon\",\n                  width: 30,\n                  on: {\n                     onItemClick: function () {\n                        sort_form.removeView(this.getParentView());\n                        self.refreshFieldList(true);\n                        self.triggerOnChange();\n                     },\n                  },\n               },\n            ],\n         },\n         viewIndex\n      );\n\n      // Select field\n      if (fieldId) {\n         var fieldsCombo = sort_form\n            .getChildViews()\n            [viewIndex].getChildViews()[0];\n         fieldsCombo.setValue(fieldId);\n      }\n      // select direction\n      if (dir) {\n         var dirElem = sort_form.getChildViews()[viewIndex].getChildViews()[1];\n         dirElem.setValue?.(dir);\n\n         // [ABFieldList] Sorting following order\n         dirElem.sort?.((a, b) => {\n            return (dir ?? \"\").indexOf(a.id ?? a) >\n               (dir ?? \"\").indexOf(b.id ?? b)\n               ? 1\n               : -1;\n         });\n      }\n   }\n\n   /**\n    * @function getFieldList\n    * return field list so we can present a custom UI for view\n    * @param {bool} excludeSelected\n    *        Should we ignore fields that already exist in the form?\n    * @return {array} [ { id, value } ]\n    *         an array that is compatible with the webix.list\n    *         widget.\n    */\n   getFieldList(excludeSelected) {\n      var sort_form = $$(this.ids.form),\n         listFields = [];\n\n      var allFields = this.CurrentObject.fields();\n      if (!allFields || !allFields.length) return listFields;\n\n      // Get all fields include hidden fields\n      allFields.forEach((f) => {\n         if (f.fieldIsSortable()) {\n            listFields.push({\n               id: f.id,\n               value: f.label,\n            });\n         }\n      });\n\n      // Remove selected field\n      if (excludeSelected) {\n         var childViews = sort_form.getChildViews();\n         if (childViews.length > 1) {\n            // Ignore 'Add new sort' button\n            childViews.forEach(function (cView, index) {\n               if (childViews.length - 1 <= index) return false;\n\n               var selectedValue = cView.getChildViews()[0].getValue();\n               if (selectedValue) {\n                  listFields = listFields.filter((f) => f.id != selectedValue);\n               }\n            });\n         }\n      }\n      return listFields;\n   }\n\n   /**\n    * @function objectLoad\n    * Ready the Popup according to the current object\n    * @param {ABObject} object  the currently selected object.\n    */\n   objectLoad(object) {\n      this.CurrentObject = object;\n   }\n\n   /**\n    * @method setSettings\n    * Initialize the form with a set of conditions.\n    * @param {Array} settings\n    *        The default settings for this form.\n    *        [\n    *           {\n    *              key: uuid,     // ABField.id\n    *              dir: string,   // 'asc' or 'desc'\n    *           }\n    *        ]\n    */\n   setSettings(settings) {\n      this._settings = this.AB.cloneDeep(settings);\n   }\n\n   /**\n    * @method getSettings\n    * return the current sort settings stored by this form.\n    * @return {Array} -\n    *         [\n    *            {\n    *               key: uuid,     // ABField.id\n    *               dir: string,   // 'asc' or 'desc'\n    *            }\n    *         ]\n    */\n   getSettings() {\n      var sort_form = $$(this.ids.form),\n         sortFields = [];\n\n      var childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            var fieldId = cView.getChildViews()[0].getValue();\n            const dirElem = cView.getChildViews()[1];\n            var dir =\n               dirElem?.getValue?.() ??\n               dirElem?.data?.getRange?.()?.map((opt) => opt.id) ?? // Select list field type\n               \"\";\n            sortFields.push({\n               key: fieldId,\n               dir: dir,\n            });\n         });\n      }\n      return sortFields;\n   }\n\n   /**\n    * @method onChangeCombo()\n    * Update the display once they have chosen a field to sort by.\n    * We now need to offer the appropriate sort direction chooser.\n    * @param {string} fieldID\n    *        The value of the combo box now.\n    * @param {webix.$view} el\n    *        The current Webix.$view that was the combo box that just\n    *        changed.\n    */\n   onChangeCombo(fieldID, el) {\n      var allFields = this.CurrentObject.fields();\n      var chosenField = null,\n         sortDir = el.getParentView().getChildViews()[1],\n         // isMultiLingual = el.getParentView().getChildViews()[2],\n         // isMulti = 0,\n         options = null;\n\n      chosenField = allFields.find((f) => f.id == fieldID);\n      if (!chosenField) return;\n\n      switch (chosenField.key) {\n         case \"date\":\n            options = [\n               { id: \"asc\", value: L(\"Before -> After\") },\n               { id: \"desc\", value: L(\"After -> Before\") },\n            ];\n            break;\n         case \"number\":\n            options = [\n               { id: \"asc\", value: L(\"1 -> 9\") },\n               { id: \"desc\", value: L(\"9 -> 1\") },\n            ];\n            break;\n         case \"string\":\n         default:\n            options = [\n               { id: \"asc\", value: L(\"A -> Z\") },\n               { id: \"desc\", value: L(\"Z -> A\") },\n            ];\n            break;\n      }\n\n      if (chosenField.key == \"list\") {\n         AB.Webix.ui(this._valueListElement(chosenField), sortDir);\n      } else {\n         const valElem = this._valueElement();\n         valElem.options = options;\n         AB.Webix.ui(valElem, sortDir);\n      }\n\n      // if (columnConfig.settings.supportMultilingual)\n      //    isMulti = columnConfig.settings.supportMultilingual;\n\n      // isMultiLingual.setValue(isMulti);\n\n      this.refreshFieldList();\n      this.triggerOnChange();\n   }\n\n   /**\n    * @function onShow\n    * Rebuild the form when an onShow() is called.\n    */\n   onShow(view, options) {\n      var sort_form = $$(this.ids.form);\n\n      // clear field options in the form\n      webix.ui(this.uiForm(), sort_form);\n\n      var sorts = this._settings;\n      if (sorts && sorts.forEach) {\n         sorts.forEach((s) => {\n            this.clickAddNewSort(s.key, s.dir);\n         });\n      }\n\n      if (sorts == null || sorts.length == 0) {\n         this.clickAddNewSort();\n      }\n\n      const $popup = $$(this.ids.component);\n      $popup?.blockEvent();\n      $popup?.show(view, options);\n      $popup?.unblockEvent();\n   }\n\n   /**\n    * @method refreshFieldList\n    * return an updated field list so you cannot duplicate a sort\n    * @param {bool} ignoreRemoveViews\n    *\n    */\n   refreshFieldList(ignoreRemoveViews) {\n      var sort_form = $$(this.ids.form),\n         listFields = this.getFieldList(false),\n         selectedFields = [],\n         removeChildViews = [];\n\n      var childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            let fieldId = cView.getChildViews()[0].getValue(),\n               // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId });\n               fieldObj = listFields.filter((f) => {\n                  return f.id == fieldId;\n               });\n\n            if (fieldObj.length > 0) {\n               // Add selected field to list\n               selectedFields.push(fieldObj[0]);\n            } else {\n               // Add condition to remove\n               removeChildViews.push(cView);\n            }\n         });\n      }\n\n      // Remove filter conditions when column is deleted\n      if (!ignoreRemoveViews) {\n         removeChildViews.forEach((cView /*, index */) => {\n            sort_form.removeView(cView);\n         });\n      }\n\n      // Field list should not duplicate field items\n      childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach((cView, index) => {\n            if (childViews.length - 1 <= index) return false;\n\n            let fieldId = cView.getChildViews()[0].getValue(),\n               // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId }),\n               fieldObj = listFields.filter((f) => {\n                  return f.id == fieldId;\n               });\n\n            // var selectedFieldsExcludeCurField = $(selectedFields).not(fieldObj);\n            var selectedFieldsExcludeCurField = selectedFields.filter((x) => {\n               if (Array.isArray(fieldObj) && fieldObj.indexOf(x) !== -1) {\n                  return false;\n               }\n               return true;\n            });\n\n            // var enableFields = $(listFields).not(selectedFieldsExcludeCurField).get();\n            var enableFields = listFields.filter((x) => {\n               if (\n                  Array.isArray(selectedFieldsExcludeCurField) &&\n                  selectedFieldsExcludeCurField.indexOf(x) !== -1\n               ) {\n                  return false;\n               }\n               return true;\n            });\n\n            // Update field list\n            cView.getChildViews()[0].define(\"options\", enableFields);\n            cView.getChildViews()[0].refresh();\n         });\n      }\n   }\n\n   /**\n    * @function triggerOnChange\n    * This parses the sort form to build in order the sorts then saves to the application object workspace\n    */\n   triggerOnChange() {\n      // block .onChange callback\n      if (this._blockOnChange) return;\n\n      this._settings = this.getSettings();\n\n      this.emit(\"changed\", this._settings);\n   }\n\n   blockOnChange() {\n      this._blockOnChange = true;\n   }\n\n   unblockOnChange() {\n      this._blockOnChange = false;\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    * @param {uuid} fieldId\n    *        the ABField.id we want to prefill the sort with\n    * @param {json} options\n    *        Additional webix.show() options parameters.\n    */\n   show($view, fieldId, options) {\n      this.blockOnChange();\n\n      this.onShow($view, options || null);\n\n      if (fieldId) {\n         this.clickAddNewSort(fieldId);\n      }\n\n      this.unblockOnChange();\n   }\n\n   /**\n    * @function sort()\n    * client sort data in list\n    *\n    * @param {Object} a\n    * @param {Object} b\n    */\n   sort(a, b) {\n      let result = 0;\n\n      const childViews = $$(this.ids.form).getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach((cView, index) => {\n            if (childViews.length - 1 <= index || result != 0) return;\n\n            const fieldId = cView.getChildViews()[0].getValue();\n            const dirElem = cView.getChildViews()[1];\n            const dir =\n               dirElem?.getValue?.() ??\n               dirElem?.data?.getRange?.()?.map((opt) => opt.id) ?? // Select list field type\n               \"\";\n\n            const field = this.CurrentObject.fieldByID(fieldId);\n            if (!field) return;\n\n            const by = field.columnName; // column name\n\n            let aValue = a[by],\n               bValue = b[by];\n\n            if (field.key == \"list\") {\n               aValue = dir.indexOf(aValue);\n               bValue = dir.indexOf(bValue);\n            }\n\n            if (Array.isArray(aValue)) {\n               aValue = (aValue || [])\n                  .map((item) => item.text || item)\n                  .join(\" \");\n            }\n\n            if (Array.isArray(bValue)) {\n               bValue = (bValue ?? [])\n                  .map((item) => item.text || item)\n                  .join(\" \");\n            }\n\n            if (aValue != bValue) {\n               if (dir == \"asc\" || field.key == \"list\") {\n                  result = aValue > bValue ? 1 : -1;\n               } else {\n                  result = aValue < bValue ? 1 : -1;\n               }\n            }\n         });\n      }\n\n      return result;\n   }\n\n   _valueElement() {\n      return {\n         view: \"segmented\",\n         width: 200,\n         options: [\n            {\n               id: \"\",\n               value: L(\"Please select field\"),\n            },\n         ],\n         on: {\n            onChange: (/* newv, oldv */) => {\n               // 'asc' or 'desc' values\n               this.triggerOnChange();\n            },\n         },\n      };\n   }\n\n   _valueListElement(field) {\n      return {\n         view: \"list\",\n         template: \"<div class='webix_drag_handle'></div> #text#\",\n         type: {\n            height: 35,\n         },\n         height: 150,\n         select: true,\n         drag: \"order\",\n         data: field.options(),\n         on: {\n            onChange: () => {\n               this.triggerOnChange();\n            },\n            onAfterDrop: () => {\n               this.triggerOnChange();\n            },\n         },\n      };\n   }\n}\n","const ABViewImageCore = require(\"../../core/views/ABViewImageCore\");\nconst ABViewImageComponent = require(\"./viewComponent/ABViewImageComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewImage extends ABViewImageCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewImageComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.settings.filename) {\n         this.warningsMessage(`has no image set`);\n      }\n   }\n};\n","const ABViewKanbanCore = require(\"../../core/views/ABViewKanbanCore\");\nconst ABViewKanbanComponent = require(\"./viewComponent/ABViewKanbanComponent\");\n\nconst ABViewPropertyLinkPage =\n   require(\"./viewProperties/ABViewPropertyLinkPage\").default;\n\nexport default class ABViewKanban extends ABViewKanbanCore {\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n\n   component() {\n      return new ABViewKanbanComponent(this);\n   }\n\n   get linkPageHelper() {\n      return (this.__linkPageHelper =\n         this.__linkPageHelper || new ABViewPropertyLinkPage());\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n}\n","/*\n * ABViewKanbanFormSidePanel\n *\n * Provide a form area for editing data in the Kan Ban view.\n *\n */\n\nconst ABViewComponent = require(\"./viewComponent/ABViewComponent\").default;\nconst ABViewForm = require(\"./ABViewForm\");\nconst ABViewFormButton = require(\"./ABViewFormButton\");\n\nvar L = null;\n// multilingual Label fn()\n\nmodule.exports = class ABWorkObjectKanBan extends ABViewComponent {\n   constructor(comKanBan, idBase, editFields) {\n      idBase = idBase || `${comKanBan.view?.id}_formSidePanel`;\n      super(idBase, {\n         form: \"\",\n      });\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n\n      this.AB = comKanBan.AB;\n\n      this.CurrentObjectID = null;\n      // {string}\n      // the ABObject.id of the object we are working with.\n\n      this.editFields = editFields;\n      // {array}\n      // An array of {ABField.id} that determines which fields should show up\n      // in the editor.\n\n      this._mockApp = this.AB.applicationNew({});\n      // {ABApplication}\n      // Any ABViews we create are expected to be in relation to\n      // an ABApplication, so we create a \"mock\" app for our\n      // workspace views to use to display.\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n\n   ui() {\n      var ids = this.ids;\n\n      // Our webix UI definition:\n      return {\n         id: ids.component,\n         width: 300,\n         hidden: true,\n         rows: [\n            {\n               view: \"toolbar\",\n               css: \"webix_dark\",\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Edit Record\"),\n                  },\n                  {\n                     view: \"icon\",\n                     icon: \"wxi-close\",\n                     align: \"right\",\n                     click: (/* id */) => {\n                        this.hide();\n                     },\n                  },\n               ],\n            },\n            {\n               view: \"scrollview\",\n               body: {\n                  rows: [\n                     {\n                        id: ids.form,\n                        view: \"form\",\n                        borderless: true,\n                        rows: [],\n                     },\n                  ],\n               },\n            },\n         ],\n      };\n   }\n\n   async init(AB) {\n      this.AB = AB;\n   }\n\n   objectLoad(object) {\n      this.CurrentObjectID = object.id;\n   }\n\n   hide() {\n      $$(this.ids.component)?.hide();\n\n      this.emit(\"close\");\n   }\n\n   show(data) {\n      $$(this.ids.component)?.show();\n\n      this.refreshForm(data);\n   }\n\n   isVisible() {\n      return $$(this.ids.component)?.isVisible() ?? false;\n   }\n\n   refreshForm(data) {\n      var ids = this.ids;\n      let $formView = $$(ids.form);\n      let CurrentObject = this.CurrentObject;\n\n      if (!CurrentObject || !$formView) return;\n\n      data = data || {};\n\n      let formAttrs = {\n         id: `${this.ids.component}_sideform`,\n         key: ABViewForm.common().key,\n         settings: {\n            columns: 1,\n            labelPosition: \"top\",\n            showLabel: 1,\n            clearOnLoad: 0,\n            clearOnSave: 0,\n            labelWidth: 120,\n            height: 0,\n         },\n      };\n\n      // let form = new ABViewForm(formAttrs, this._mockApp);\n      let form = this.AB.viewNewDetatched(formAttrs);\n\n      form.objectLoad(CurrentObject);\n\n      // Populate child elements\n      CurrentObject.fields().forEach((f, index) => {\n         // if this is one of our .editFields\n         if (!this.editFields || this.editFields.indexOf(f.id) > -1) {\n            form.addFieldToForm(f, index);\n         }\n      });\n\n      // add default button (Save button)\n      form._views.push(\n         new ABViewFormButton(\n            {\n               settings: {\n                  includeSave: true,\n                  includeCancel: false,\n                  includeReset: false,\n               },\n               position: {\n                  y: CurrentObject.fields().length, // yPosition\n               },\n            },\n            this._mockApp,\n            form\n         )\n      );\n\n      // add temp id to views\n      form._views.forEach(\n         (v, index) => (v.id = `${form.id}_${v.key}_${index}`)\n      );\n\n      let formCom = form.component(this.AB._App);\n\n      // Rebuild form\n      webix.ui(formCom.ui().rows.concat({}), $formView);\n      webix.extend($formView, webix.ProgressBar);\n\n      formCom.init(\n         this.AB,\n         2,\n         {\n            onBeforeSaveData: () => {\n               // get update data\n               var formVals = form.getFormValues($formView, CurrentObject);\n\n               // validate data\n               if (!form.validateData($formView, CurrentObject, formVals))\n                  return false;\n\n               // show progress icon\n               $formView?.showProgress({ type: \"icon\" });\n\n               if (formVals.id) {\n                  CurrentObject.model()\n                     .update(formVals.id, formVals)\n                     .then((updateVals) => {\n                        this.emit(\"update\", updateVals);\n                        // _logic.callbacks.onUpdateData(updateVals);\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     })\n                     .catch((err) => {\n                        // TODO : error message\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewKanbanFormSidePanel:onBeforeSaveData():update(): Error updating value\",\n                           formVals,\n                        });\n                        $formView?.hideProgress({ type: \"icon\" });\n                     });\n               }\n               // else add new row\n               else {\n                  CurrentObject.model()\n                     .create(formVals)\n                     .then((newVals) => {\n                        // _logic.callbacks.onAddData(newVals);\n                        this.emit(\"add\", newVals);\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     })\n                     .catch((err) => {\n                        // TODO : error message\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewKanbanFormSidePanel:onBeforeSaveData():.create(): Error creating value\",\n                           formVals,\n                        });\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     });\n               }\n\n               return false;\n            },\n         },\n         2 /* NOTE: if you can see this KanBan, you should be able to see the side form? */\n      );\n\n      // display data\n      $formView.clear();\n      $formView.parse(data);\n\n      formCom.onShow(data);\n   }\n};\n","const ABViewLabelCore = require(\"../../core/views/ABViewLabelCore\");\nconst ABViewLabelComponent = require(\"./viewComponent/ABViewLabelComponent\");\n\nmodule.exports = class ABViewLabel extends ABViewLabelCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewLabelComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.text) {\n         this.warningsMessage(\"has no text value set.\");\n      }\n   }\n};\n","const ABViewLayoutCore = require(\"../../core/views/ABViewLayoutCore\");\nconst ABViewLayoutComponent = require(\"./viewComponent/ABViewLayoutComponent\");\n\nmodule.exports = class ABViewLayout extends ABViewLayoutCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewLayoutComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (this._views.length == 0) {\n         this.warningsMessage(\"has no columns set.\");\n      }\n   }\n};\n","const ABViewListCore = require(\"../../core/views/ABViewListCore\");\nconst ABViewListComponent = require(\"./viewComponent/ABViewListComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewList extends ABViewListCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewListComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewMenuCore = require(\"../../core/views/ABViewMenuCore\");\nconst ABViewMenuComponent = require(\"./viewComponent/ABViewMenuComponent\");\n\nmodule.exports = class ABViewMenu extends ABViewMenuCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewMenuComponent(this);\n   }\n};\n","const ABViewPDFImporterCore = require(\"../../core/views/ABViewPDFImporterCore\");\nconst ABViewPDFImporterComponent = require(\"./viewComponent/ABViewPDFImporterComponent\");\n\nmodule.exports = class ABViewPDFImporter extends ABViewPDFImporterCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewPDFImporterComponent(this);\n   }\n};\n","const ABViewPageCore = require(\"../../core/views/ABViewPageCore\");\n\nconst ABPropertyComponentDefaults = ABViewPageCore.defaultValues();\n\nmodule.exports = class ABViewPage extends ABViewPageCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @param {obj} v1App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      var component = super.component();\n\n      component._ui = component.ui();\n\n      // wrap our ABViewContainer in our Page scrollview\n      component.ui = () => {\n         return {\n            view: \"scrollview\",\n            borderless: true,\n            css:\n               this.settings.pageBackground ||\n               ABPropertyComponentDefaults.pageBackground,\n            body: component._ui,\n         };\n      };\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               accessLevel = accessLevel ?? this.getUserAccess();\n               return newComponent.init(this.AB, accessLevel, options);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no sub views\");\n      }\n\n      (this.pages() || []).forEach((p) => {\n         p.warningsEval();\n      });\n   }\n};\n","const ABViewPivotCore = require(\"../../core/views/ABViewPivotCore\");\nconst ABViewPivotComponent = require(\"./viewComponent/ABViewPivotComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewPivot extends ABViewPivotCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewPivotComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewReportsManagerCore = require(\"../../core/views/ABViewReportsManagerCore\");\nconst ABViewReportsManagerComponent = require(\"./viewComponent/ABViewReportsManagerComponent\");\n\nmodule.exports = class ABViewReportsManager extends ABViewReportsManagerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewReportsManagerComponent(this);\n   }\n};\n","const ABViewSchedulerCore = require(\"../../core/views/ABViewSchedulerCore\");\nconst ABViewSchedulerComponent = require(\"./viewComponent/ABViewSchedulerComponent\");\n\nmodule.exports = class ABViewScheduler extends ABViewSchedulerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewSchedulerComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n   }\n};\n","const ABViewTabCore = require(\"../../core/views/ABViewTabCore\");\n\nconst ABViewTabComponent = require(\"./viewComponent/ABViewTabComponent\");\n\nmodule.exports = class ABViewTab extends ABViewTabCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewTabComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no tabs set\");\n      }\n\n      // NOTE: this is done in ABView:\n      // (this.views() || []).forEach((v) => {\n      //    v.warningsEval();\n      // });\n   }\n};\n","const ABViewTextCore = require(\"../../core/views/ABViewTextCore\");\n\nconst ABViewTextComponent = require(\"./viewComponent/ABViewTextComponent\");\n\nmodule.exports = class ABViewText extends ABViewTextCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component(parentId) {\n      return new ABViewTextComponent(this, parentId);\n   }\n};\n","const ABViewWidgetCore = require(\"../../core/views/ABViewWidgetCore\");\n\nconst ABPropertyComponentDefaults = ABViewWidgetCore.defaultValues();\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewWidget extends ABViewWidgetCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(App) {\n      let base = super.component(App);\n\n      base.onShow = (viewId) => {\n         let dv = this.datacollection; // get from a function or a (get) property\n         if (dv && dv.dataStatus == dv.dataStatusFlag.notInitial) {\n            // load data when a widget is showing\n            dv.loadData();\n         }\n      };\n\n      return base;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewCSVExporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABCSVExporter_${baseView.id}`,\n         Object.assign(\n            {\n               button: \"\",\n               buttonFilter: \"\",\n               filterComplex: \"\",\n            },\n            ids\n         )\n      );\n\n      this.clientFilter = null;\n   }\n\n   ui() {\n      const ids = this.ids;\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n      const _ui = super.ui([\n         {\n            view: \"layout\",\n            type: \"clean\",\n            borderless: true,\n            cols: [\n               {\n                  id: ids.buttonFilter,\n                  view: \"button\",\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"fa fa-filter\",\n                  borderless: true,\n                  width: 50,\n                  label: \"\",\n                  click: () => {\n                     this.showFilterPopup();\n                  },\n               },\n               {\n                  id: ids.button,\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-download\",\n                  borderless: true,\n                  width: settings.width || defaultSettings.width,\n                  label: settings.buttonLabel ?? defaultSettings.buttonLabel,\n                  click: () => {\n                     this.downloadCsvFile();\n                  },\n               },\n               { fillspace: true },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      if (!this.clientFilter) {\n         const clientFilter = AB.filterComplexNew(this.ids.filterComplex);\n\n         const dc = this.datacollection;\n\n         if (dc) {\n            const obj = dc.datasource;\n\n            clientFilter.fieldsLoad(obj?.fields?.() ?? []);\n         }\n\n         clientFilter.init();\n         clientFilter.on(\"change\", (val) => {\n            this.onFilterChange(val);\n         });\n\n         this.clientFilter = clientFilter;\n      }\n   }\n\n   downloadCsvFile() {\n      let url = `/appbuilder/csv-export/${this.view.id}`;\n\n      const where = {\n         glue: \"and\",\n         rules: [],\n      };\n\n      const whereWidget = this.view.settings?.where;\n      if ((whereWidget?.rules ?? []).length) {\n         where.rules.push(whereWidget);\n      }\n\n      const whereClient = this.clientFilter.getValue();\n      if ((whereClient?.rules ?? []).length) {\n         where.rules.push(whereClient);\n      }\n\n      if ((where?.rules || []).length) {\n         let qsWhere = JSON.stringify(where);\n\n         qsWhere = encodeURIComponent(qsWhere);\n         url = `${url}?where=${qsWhere}`;\n      }\n\n      window.open(url);\n   }\n\n   showFilterPopup() {\n      const $buttonFilter = $$(this.ids.buttonFilter);\n\n      this.clientFilter.popUp($buttonFilter ? $buttonFilter.$view : null);\n   }\n\n   onFilterChange() {\n      const $buttonFilter = $$(this.ids.buttonFilter);\n\n      if (!$buttonFilter) return;\n\n      const where = this.clientFilter.getValue();\n\n      $buttonFilter.define(\"badge\", (where.rules || []).length || null);\n      $buttonFilter.refresh();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst CSVImporter = require(\"../../CSVImporter\");\n\nmodule.exports = class ABViewCSVImporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABCSVImporter_${baseView.id}`,\n         Object.assign(\n            {\n               button: \"\",\n               popup: \"\",\n\n               form: \"\",\n               uploader: \"\",\n               uploadFileList: \"\",\n               separatedBy: \"\",\n               headerOnFirstLine: \"\",\n               columnList: \"\",\n\n               search: \"\",\n               datatable: \"\",\n\n               statusMessage: \"\",\n               progressBar: \"\",\n\n               linkedDataButton: \"\",\n               importButton: \"\",\n               rules: \"\",\n            },\n            ids\n         )\n      );\n\n      this.csvImporter = new CSVImporter((...args) => this.label(...args));\n      // {CSVImporter}\n      // An instance of the object that imports the CSV data.\n\n      this.validationError = false;\n\n      this._dataRows = null;\n      this._csvFileInfo = null;\n   }\n\n   ui() {\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n      const _ui = super.ui([\n         {\n            cols: [\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-upload\",\n                  label: this.label(\n                     settings.buttonLabel || defaultSettings.buttonLabel\n                  ),\n                  width: settings.width || defaultSettings.width,\n                  click: () => {\n                     this.showPopup();\n                  },\n               },\n               {\n                  fillspace: true,\n               },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiConfig() {\n      const ids = this.ids;\n\n      return {\n         id: ids.form,\n         view: \"form\",\n         type: \"clean\",\n         borderless: true,\n         minWidth: 400,\n         gravity: 1,\n         elements: [\n            {\n               rows: [\n                  {\n                     id: ids.uploader,\n                     view: \"uploader\",\n                     name: \"csvFile\",\n                     css: \"webix_primary\",\n                     value: this.label(\"Choose a CSV file\"),\n                     accept: \"text/csv\",\n                     multiple: false,\n                     autosend: false,\n                     link: ids.uploadFileList,\n                     on: {\n                        onBeforeFileAdd: (fileInfo) => {\n                           this._csvFileInfo = fileInfo;\n\n                           return this.loadCsvFile();\n                        },\n                     },\n                  },\n                  {\n                     id: ids.uploadFileList,\n                     name: \"uploadedFile\",\n                     view: \"list\",\n                     type: \"uploader\",\n                     autoheight: true,\n                     borderless: true,\n                     onClick: {\n                        webix_remove_upload: (e, id /*, trg */) => {\n                           this.removeCsvFile(id);\n                        },\n                     },\n                  },\n                  {\n                     padding: 10,\n                     rows: [\n                        {\n                           id: ids.separatedBy,\n                           view: \"richselect\",\n                           name: \"separatedBy\",\n                           label: this.label(\"Separated by\"),\n                           labelWidth: 140,\n                           options: this.csvImporter.getSeparateItems(),\n                           value: \",\",\n                           on: {\n                              onChange: () => {\n                                 this.loadCsvFile();\n                              },\n                           },\n                        },\n                        {\n                           id: ids.headerOnFirstLine,\n                           view: \"checkbox\",\n                           name: \"headerOnFirstLine\",\n                           label: this.label(\"Header on first line\"),\n                           labelWidth: 140,\n                           disabled: true,\n                           value: true,\n                           on: {\n                              onChange: (/*newVal, oldVal*/) => {\n                                 this.populateColumnList();\n                              },\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     type: \"space\",\n                     rows: [\n                        {\n                           view: \"scrollview\",\n                           minHeight: 300,\n                           body: {\n                              padding: 10,\n                              id: ids.columnList,\n                              rows: [],\n                           },\n                        },\n                     ],\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   uiRecordsView() {\n      const ids = this.ids;\n\n      return {\n         gravity: 2,\n         rows: [\n            {\n               view: \"toolbar\",\n               css: \"bg_gray\",\n               cols: [\n                  { width: 5 },\n                  {\n                     id: ids.search,\n                     view: \"search\",\n                     value: \"\",\n                     label: \"\",\n                     placeholder: this.label(\"Search records...\"),\n                     keyPressTimeout: 200,\n                     on: {\n                        onTimedKeyPress: () => {\n                           this.search($$(ids.search).getValue());\n                        },\n                     },\n                  },\n                  { width: 2 },\n               ],\n            },\n            {\n               id: ids.datatable,\n               view: \"datatable\",\n               resizeColumn: true,\n               editable: true,\n               editaction: \"dblclick\",\n               css: \"ab-csv-importer\",\n               borderless: false,\n               tooltip: (obj) => {\n                  const tooltip = obj._errorMsg\n                     ? obj._errorMsg\n                     : \"No validation errors\";\n                  return tooltip;\n               },\n               minWidth: 650,\n               columns: [],\n               on: {\n                  onValidationError: (id, obj, details) => {\n                     // console.log(`item ${id} invalid`);\n                     let errors = \"\";\n\n                     Object.keys(details).forEach((key) => {\n                        this.$view.complexValidations[key].forEach((err) => {\n                           errors += err.invalidMessage + \"</br>\";\n                        });\n                     });\n\n                     const $dt = $$(ids.datatable);\n\n                     $dt.blockEvent();\n                     $dt.updateItem(id, {\n                        _status: \"invalid\",\n                        _errorMsg: errors,\n                     });\n                     $dt.unblockEvent();\n\n                     this.validationError = true;\n                  },\n                  onValidationSuccess: (id, obj, details) => {\n                     // console.log(`item ${id} valid`);\n                     const $dt = $$(ids.datatable);\n\n                     $dt.blockEvent();\n                     $dt.updateItem(id, {\n                        _status: \"valid\",\n                        _errorMsg: \"\",\n                     });\n                     $dt.unblockEvent();\n                     this.validationError = false;\n                  },\n                  onCheck: () => {\n                     const selected = $$(ids.datatable).find({\n                        _included: true,\n                     });\n                     const $importButton = $$(ids.importButton);\n\n                     $importButton.setValue(this.labelImport(selected));\n\n                     if (this.overLimitAlert(selected)) $importButton.disable();\n                     else $importButton.enable();\n                  },\n               },\n            },\n            {\n               id: ids.progressBar,\n               height: 6,\n            },\n            {\n               cols: [\n                  {\n                     id: ids.linkedDataButton,\n                     view: \"button\",\n                     label: this.label(\"Linked Data\"),\n                     type: \"icon\",\n                     icon: \"fa fa-info\",\n                     maxWidth: 180,\n                     click: () => {\n                        this.showLinkedData();\n                     },\n                  },\n                  {\n                     view: \"button\",\n                     name: \"import\",\n                     id: ids.importButton,\n                     label: this.label(\"Import\"),\n                     css: \"webix_primary\",\n                     disabled: true,\n                     type: \"icon\",\n                     icon: \"fa fa-upload\",\n                     click: () => {\n                        this.import();\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   uiPopup() {\n      const ids = this.ids;\n\n      return {\n         id: ids.popup,\n         view: \"window\",\n         hidden: true,\n         position: \"center\",\n         modal: true,\n         resize: true,\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {},\n               {\n                  view: \"label\",\n                  label: this.label(\"CSV Importer\"),\n                  autowidth: true,\n               },\n               {},\n               {\n                  view: \"button\",\n                  width: 35,\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"nomargin fa fa-times\",\n                  click: () => {\n                     this.hide();\n                  },\n               },\n            ],\n         },\n         body: {\n            type: \"form\",\n            rows: [\n               {\n                  type: \"line\",\n                  cols: [\n                     this.uiConfig(),\n                     { width: 20 },\n                     this.uiRecordsView(),\n                     { width: 1 },\n                  ],\n               },\n               {\n                  id: ids.statusMessage,\n                  view: \"label\",\n                  align: \"right\",\n                  hidden: true,\n               },\n               {\n                  hidden: true,\n                  margin: 5,\n                  cols: [\n                     { fillspace: true },\n                     {\n                        view: \"button\",\n                        name: \"cancel\",\n                        value: this.label(\"Cancel\"),\n                        css: \"ab-cancel-button\",\n                        autowidth: true,\n                        click: () => {\n                           this.hide();\n                        },\n                     },\n                     /*,\n                        {\n                           view: \"button\",\n                           name: \"import\",\n                           id: ids.importButton,\n                           value: labels.component.import,\n                           css: \"webix_primary\",\n                           disabled: true,\n                           autowidth: true,\n                           type: \"form\",\n                           click: () => {\n                              _logic.import();\n                           }\n                        }*/\n                  ],\n               },\n            ],\n         },\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n\n      // Populate values to rules\n\n      const dc = this.datacollection;\n\n      if (dc) this.objectLoad(dc.datasource);\n\n      const abWebix = AB.Webix;\n\n      abWebix.ui(this.uiPopup());\n\n      const $form = $$(ids.form);\n\n      if ($form) abWebix.extend($form, abWebix.ProgressBar);\n\n      const $progressBar = $$(ids.progressBar);\n\n      if ($progressBar) abWebix.extend($progressBar, abWebix.ProgressBar);\n   }\n\n   showPopup() {\n      const ids = this.ids;\n\n      $$(ids.popup)?.show();\n\n      this.formClear();\n\n      // open file dialog to upload\n      $$(ids.uploader).fileDialog();\n   }\n\n   hide() {\n      $$(this.ids.popup)?.hide();\n   }\n\n   formClear() {\n      const ids = this.ids;\n\n      this._dataRows = null;\n      this._csvFileInfo = null;\n\n      const $form = $$(ids.form);\n\n      $form.clearValidation();\n      $form.clear();\n\n      $$(ids.separatedBy).setValue(\",\");\n\n      this.AB.Webix.ui([], $$(ids.columnList));\n\n      $$(ids.headerOnFirstLine).disable();\n      $$(ids.importButton).disable();\n\n      $$(ids.search).setValue(\"\");\n      $$(ids.uploadFileList).clearAll();\n      $$(ids.datatable).clearAll();\n\n      const $statusMessage = $$(ids.statusMessage);\n\n      $statusMessage.setValue(\"\");\n      $statusMessage.hide();\n   }\n\n   search(searchText) {\n      const $datatable = $$(this.ids.datatable);\n\n      if (!$datatable) return;\n\n      searchText = (searchText || \"\").toLowerCase();\n\n      const matchFields = this.getMatchFields();\n\n      $datatable.filter((row) => {\n         let exists = false;\n\n         (matchFields || []).forEach((f) => {\n            if (exists) return;\n\n            exists =\n               (row[`${f.columnIndex}`] || \"\")\n                  .toString()\n                  .toLowerCase()\n                  .indexOf(searchText) > -1;\n         });\n\n         return exists;\n      });\n   }\n\n   statusTemplate(item) {\n      let template = \"\";\n\n      if (!item) return template;\n\n      switch (item._status) {\n         case \"in-progress\":\n            template = \"<span class='fa fa-refresh'></span>\";\n            break;\n         case \"invalid\":\n            template = \"<span class='fa fa-exclamation-triangle'></span>\";\n            break;\n         case \"valid\":\n            template = \"<span class='fa fa-check'></span>\";\n            break;\n         case \"done\":\n            template = \"<span class='fa fa-check'></span>\";\n            break;\n         case \"fail\":\n            template = \"<span class='fa fa-remove'></span>\";\n            break;\n      }\n\n      return template;\n   }\n\n   async loadCsvFile() {\n      const _csvFileInfo = this._csvFileInfo;\n\n      if (!_csvFileInfo) return false;\n\n      const csvImporter = this.csvImporter;\n\n      if (!csvImporter.validateFile(_csvFileInfo)) {\n         this.AB.Webix.alert({\n            title: this.label(\"This file extension is not allowed\"),\n            text: this.label(\"Please only upload CSV files\"),\n            ok: this.label(\"Ok\"),\n         });\n\n         return false;\n      }\n\n      const ids = this.ids;\n\n      // show loading cursor\n      const $form = $$(ids.form);\n\n      $form?.showProgress?.({ type: \"icon\" });\n\n      // read CSV file\n      const $headerOnFirstLine = $$(ids.headerOnFirstLine);\n      const $importButton = $$(ids.importButton);\n\n      $headerOnFirstLine.enable();\n      $importButton.enable();\n\n      this._dataRows = await csvImporter.getDataRows(\n         _csvFileInfo,\n         $$(ids.separatedBy).getValue()\n      );\n\n      const _dataRows = this._dataRows;\n\n      let length = _dataRows.length;\n\n      if ($headerOnFirstLine.getValue()) length = _dataRows.length - 1;\n\n      $importButton.setValue(this.labelImport(length));\n      this.populateColumnList();\n      $form?.hideProgress?.();\n\n      return true;\n   }\n\n   removeCsvFile(fileId) {\n      $$(this.ids.uploadFileList).remove(fileId);\n      this.formClear();\n\n      return true;\n   }\n\n   populateColumnList() {\n      const self = this;\n      const ids = this.ids;\n      const abWebix = this.AB.Webix;\n\n      // clear list\n      const $columnList = $$(ids.columnList);\n\n      abWebix.ui([], $columnList);\n\n      const _dataRows = this._dataRows;\n\n      if (!_dataRows) return;\n\n      // check first line of CSV\n      const firstLine = _dataRows[0];\n\n      if (!firstLine) return;\n\n      const csvColumnList = [];\n      const fieldList = [];\n      const currentObject = this.CurrentObject;\n\n      if (currentObject)\n         fieldList.push(\n            ...currentObject.fields((f) => {\n               // available fields\n               if (\n                  this.settings.availableFieldIds?.length &&\n                  this.settings.availableFieldIds.indexOf(f.id) < 0\n               ) {\n                  return false;\n               }\n\n               // filter editable fields\n               const formComp = f.formComponent();\n\n               if (!formComp) return true;\n\n               const formConfig = formComp.common();\n\n               if (!formConfig) return true;\n\n               return formConfig.key != \"fieldreadonly\";\n            })\n         );\n\n      const csvImporter = this.csvImporter;\n\n      // check first line be header columns\n      if ($$(ids.headerOnFirstLine).getValue())\n         csvColumnList.push(\n            ...firstLine.map((colName, index) => {\n               return {\n                  id: index + 1, // webix .options list disallow value 0\n                  value: colName,\n                  key: csvImporter.getGuessDataType(_dataRows, index),\n               };\n            })\n         );\n      else\n         firstLine.forEach((e, i) => {\n            csvColumnList.push({\n               id: i + 1, // webix .options list disallow value 0\n               value: this.label(\"Column {0}\", [i + 1]),\n               key: csvImporter.getGuessDataType(_dataRows, i),\n            });\n         });\n\n      // Add unselect item\n      csvColumnList.unshift({\n         id: \"none\",\n         value: this.label(\"None\"),\n      });\n\n      // populate columns to UI\n      const uiColumns = [];\n      const selectedCsvCols = [];\n\n      fieldList.forEach((f) => {\n         // match up by data type\n         const matchCol = csvColumnList.filter(\n            (c) => c.key == f.key && selectedCsvCols.indexOf(c.id) < 0\n         )[0];\n\n         let selectVal = \"none\";\n\n         if (matchCol) {\n            selectVal = matchCol.id;\n\n            // cache\n            selectedCsvCols.push(selectVal);\n         }\n\n         let columnOptUI = {\n            view: \"richselect\",\n            gravity: 2,\n            options: csvColumnList,\n            fieldId: f.id,\n            abName: \"columnIndex\",\n            value: selectVal,\n            on: {\n               onChange: function () {\n                  self.toggleLinkFields(this);\n                  self.loadDataToGrid();\n               },\n            },\n         };\n\n         // Add date format options\n         if (f.key === \"date\") {\n            const dateSeparatorOptions = [\"/\", \"-\", \".\", \",\", \" \"];\n            const dayFormatOptions = [\n               { value: this.label(\"1 to 31\"), id: \"D\" },\n               { value: this.label(\"01 to 31\"), id: \"DD\" },\n            ];\n            const monthFormatOptions = [\n               { value: this.label(\"1 to 12\"), id: \"M\" },\n               { value: this.label(\"01 to 12\"), id: \"MM\" },\n            ];\n            const yearFormatOptions = [\n               { value: this.label(\"00 to 99\"), id: \"YY\" },\n               { value: this.label(\"2000 to 2099\"), id: \"YYYY\" },\n            ];\n            const dateOrderOptions = [\n               {\n                  value: this.label(\"D-M-Y\"),\n                  id: 1,\n               },\n               {\n                  value: this.label(\"M-D-Y\"),\n                  id: 2,\n               },\n               {\n                  value: this.label(\"Y-M-D\"),\n                  id: 3,\n               },\n               {\n                  value: this.label(\"Y-D-M\"),\n                  id: 4,\n               },\n            ];\n\n            columnOptUI = {\n               gravity: 2,\n               rows: [\n                  columnOptUI,\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Separator\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"separator\",\n                     abName: \"columnDateFormat\",\n                     options: dateSeparatorOptions,\n                     value: \"/\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Day\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"day\",\n                     abName: \"columnDateFormat\",\n                     options: dayFormatOptions,\n                     value: \"D\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Month\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"month\",\n                     abName: \"columnDateFormat\",\n                     options: monthFormatOptions,\n                     value: \"M\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Year\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"year\",\n                     abName: \"columnDateFormat\",\n                     options: yearFormatOptions,\n                     value: \"YY\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Order\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"order\",\n                     abName: \"columnDateFormat\",\n                     options: dateOrderOptions,\n                     value: 1,\n                  },\n               ],\n            };\n         }\n\n         // Add connected field options\n         if (f.isConnection) {\n            let linkFieldOptions = [];\n\n            if (f.datasourceLink) {\n               linkFieldOptions = f.datasourceLink\n                  .fields((fld) => !fld.isConnection)\n                  .map((fld) => {\n                     return {\n                        id: fld.id,\n                        value: fld.label,\n                     };\n                  });\n            }\n\n            columnOptUI = {\n               gravity: 2,\n               rows: [\n                  columnOptUI,\n                  {\n                     view: \"richselect\",\n                     label: \"=\",\n                     labelWidth: 20,\n                     abName: \"columnLinkData\",\n                     hidden: true,\n                     options: linkFieldOptions,\n                     value: linkFieldOptions[0] ? linkFieldOptions[0].id : null,\n                  },\n               ],\n            };\n         }\n\n         uiColumns.push({\n            view: \"layout\",\n            borderless: true,\n            cols: [\n               {\n                  view: \"template\",\n                  gravity: 1,\n                  borderless: true,\n                  css: { \"padding-top\": 10 },\n                  template: `<span class=\"fa fa-${f.icon}\"></span> ${f.label}`,\n               },\n               columnOptUI,\n            ],\n         });\n      });\n      abWebix.ui(uiColumns, $columnList);\n\n      this.loadDataToGrid();\n   }\n\n   toggleLinkFields($columnOption) {\n      if (!$columnOption) return;\n\n      const $optionPanel = $columnOption.getParentView();\n      const $linkFieldOption = $optionPanel.queryView(\n         { abName: \"columnLinkData\" },\n         \"all\"\n      )[0];\n\n      if (!$linkFieldOption) return;\n\n      if ($columnOption.getValue() === \"none\") $linkFieldOption.hide();\n      else $linkFieldOption.show();\n   }\n\n   overLimitAlert(data) {\n      const limit = 1000;\n\n      if (data.length > limit) {\n         // we only allow 1000 record imports\n         this.AB.Webix.alert({\n            title: this.label(\"Too many records\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\n               \"Due to browser limitations we only allow imports of {0} records. Please upload a new CSV or deselect records to import.\",\n               [limit]\n            ),\n         });\n\n         return true;\n      }\n\n      return false;\n   }\n\n   loadDataToGrid() {\n      const ids = this.ids;\n      const $datatable = $$(ids.datatable);\n      const ab = this.AB;\n\n      if (!$datatable) return;\n\n      $datatable.clearAll();\n\n      // show loading cursor\n      $datatable.showProgress?.({ type: \"icon\" });\n\n      /** Prepare Columns */\n      const matchFields = this.getMatchFields();\n      const columns = [];\n\n      // add \"status\" column\n      columns.push({\n         id: \"_status\",\n         header: \"\",\n         template: this.statusTemplate,\n         width: 30,\n      });\n\n      // add \"checkbox\" column\n      columns.push({\n         id: \"_included\",\n         header: { content: \"masterCheckbox\" },\n         template: \"{common.checkbox()}\",\n         width: 30,\n      });\n\n      const fieldValidations = [];\n      const rulePops = [];\n\n      // populate columns\n      (matchFields || []).forEach((f) => {\n         let validationRules = f.field.settings.validationRules;\n         // parse the rules because they were stored as a string\n         // check if rules are still a string...if so lets parse them\n         if (validationRules && typeof validationRules === \"string\")\n            validationRules = JSON.parse(validationRules);\n\n         if (validationRules?.length) {\n            const validationUI = [];\n\n            // there could be more than one so lets loop through and build the UI\n            validationRules.forEach((rule) => {\n               const Filter = ab.filterComplexNew(\n                  `${f.field.id}_${ab.Webix.uid()}`\n               );\n               // add the new ui to an array so we can add them all at the same time\n               validationUI.push(Filter.ui);\n               // store the filter's info so we can assign values and settings after the ui is rendered\n               fieldValidations.push({\n                  filter: Filter,\n                  view: Filter.ids.querybuilder,\n                  columnName: f.field.id,\n                  validationRules: rule.rules,\n                  invalidMessage: rule.invalidMessage,\n                  columnIndex: f.columnIndex,\n               });\n            });\n\n            // create a unique view id for popup\n            const popUpId = `${ids.rules}_${f.field.id}_${ab.Webix.uid()}`;\n\n            // store the popup ids so we can remove the later\n            rulePops.push(popUpId);\n            // add the popup to the UI but don't show it\n            ab.Webix.ui({\n               view: \"popup\",\n               css: \"ab-rules-popup\",\n               id: popUpId,\n               body: {\n                  rows: validationUI,\n               },\n            });\n         }\n\n         const editor = f.field?.key == \"number\" ? \"number\" : \"text\";\n\n         columns.push({\n            id: f.columnIndex,\n            header: f.field.label,\n            editor: editor,\n            template: (obj, common, value /*, col, ind */) =>\n               value.replace(/[<]/g, \"&lt;\"),\n            minWidth: 150,\n            fillspace: true,\n         });\n      });\n\n      if (fieldValidations.length) {\n         // we need to store the rules for use later so lets build a container array\n         const complexValidations = [];\n\n         fieldValidations.forEach((f) => {\n            // init each ui to have the properties (app and fields) of the object we are editing\n            // f.filter.applicationLoad(App);\n            f.filter.fieldsLoad(this.CurrentObject.fields());\n            // now we can set the value because the fields are properly initialized\n            f.filter.setValue(f.validationRules);\n            // if there are validation rules present we need to store them in a lookup hash\n            // so multiple rules can be stored on a single field\n            if (!Array.isArray(complexValidations[f.columnName]))\n               complexValidations[f.columnName] = [];\n\n            // now we can push the rules into the hash\n            complexValidations[f.columnName].push({\n               filters: $$(f.view).getFilterHelper(),\n               values: $datatable.getSelectedItem(),\n               invalidMessage: f.invalidMessage,\n               columnIndex: f.columnIndex,\n            });\n         });\n\n         const rules = {};\n\n         // store the rules in a data param to be used later\n         $datatable.$view.complexValidations = complexValidations;\n\n         // use the lookup to build the validation rules\n         Object.keys(complexValidations).forEach((key) => {\n            rules[key] = (value, data) => {\n               // default valid is true\n               let isValid = true;\n\n               $datatable.$view.complexValidations[key].forEach((filter) => {\n                  const rowValue = {};\n                  // use helper funtion to check if valid\n                  // map the column names to the index numbers of data\n                  // reformat data to display\n\n                  (matchFields || []).forEach((f) => {\n                     const record = data[f.columnIndex];\n\n                     if (\n                        f.field.key === \"date\" &&\n                        record.includes(\"Invalid date\")\n                     )\n                        isValid = false;\n\n                     rowValue[f.field.id] = record;\n                  });\n\n                  const ruleValid = filter.filters(rowValue);\n\n                  // if invalid we need to tell the field\n                  if (!ruleValid) {\n                     isValid = false;\n                     // this.AB.Webix.message({\n                     //    type: \"error\",\n                     //    text: invalidMessage\n                     // });\n                  }\n               });\n\n               return isValid;\n            };\n         });\n         // define validation rules\n         $datatable.define(\"rules\", rules);\n         // store the array of view ids on the webix object so we can get it later\n         $datatable.config.rulePops = rulePops;\n         $datatable.refresh();\n      } else {\n         // check if the previous datatable had rule popups and remove them\n         if ($datatable.config.rulePops) {\n            $datatable.config.rulePops.forEach((popup) => {\n               const $popup = $$(popup);\n\n               if (!$popup) return;\n\n               $popup.destructor();\n            });\n         }\n\n         // remove any validation rules from the previous table\n         $datatable.define(\"rules\", {});\n         $datatable.refresh();\n      }\n\n      /** Prepare Data */\n      const parsedData = [];\n\n      (this._dataRows || []).forEach((row, index) => {\n         const rowValue = {\n            id: index + 1,\n         };\n\n         // reformat data to display\n         (matchFields || []).forEach((f) => {\n            const data = row[f.columnIndex - 1];\n\n            if (f.field.key === \"date\") {\n               // let dateFormat = moment(data, f.format).format(\n               //    \"YYYY-MM-DD\"\n               // );\n               // debugger;\n               let dateFormat = ab.rules.toDate(data, {\n                  format: f.format,\n               });\n               dateFormat = ab.rules.toDateFormat(dateFormat, {\n                  format: \"YYYY-MM-DD\",\n               });\n\n               if (dateFormat === \"Invalid date\")\n                  dateFormat = dateFormat + \" - \" + data;\n\n               rowValue[f.columnIndex] = dateFormat;\n            } else rowValue[f.columnIndex] = data; // array to object\n         });\n\n         // insert \"true\" value of checkbox\n         rowValue[\"_included\"] = true;\n\n         parsedData.push(rowValue);\n      });\n\n      // skip the first line\n      const isSkipFirstLine = $$(ids.headerOnFirstLine).getValue();\n\n      if (isSkipFirstLine && parsedData.length > 1) parsedData.shift();\n\n      const $importButton = $$(ids.importButton);\n\n      $importButton.setValue(this.labelImport(parsedData));\n      $datatable.refreshColumns(columns);\n      $datatable.parse(parsedData);\n\n      if (this.overLimitAlert(parsedData)) $importButton.disable();\n      else $importButton.enable();\n\n      // hide loading cursor\n      $datatable.hideProgress?.();\n   }\n\n   refreshRemainingTimeText(startUpdateTime, total, index) {\n      const ids = this.ids;\n\n      // Calculate remaining time\n      const spentTime = new Date() - startUpdateTime; // milliseconds that has passed since last completed record since start\n\n      const averageRenderTime = spentTime / index; // average milliseconds per single render at this point\n\n      const remainTime = averageRenderTime * (total - index);\n\n      let result = \"\";\n\n      // Convert milliseconds to a readable string\n      const days = (remainTime / 86400000).toFixed(0);\n      const hours = (remainTime / 3600000).toFixed(0);\n      const minutes = (remainTime / 60000).toFixed(0);\n      const seconds = (remainTime / 1000).toFixed(0);\n\n      if (seconds < 1) result = \"\";\n      else if (seconds < 60)\n         result = this.label(\"Approximately {0} second(s) remaining\", [\n            seconds,\n         ]);\n      // result = `Approximately ${seconds} second${\n      //    seconds > 1 ? \"s\" : \"\"\n      // }`;\n      else if (minutes == 1)\n         result = this.label(\"Approximately 1 minute {0} seconds remaining\", [\n            seconds - 60,\n         ]);\n      // result = `Approximately 1 minute ${seconds - 60} seconds`;\n      else if (minutes < 60)\n         result = this.label(\"Approximately {0} minutes remaining\", [minutes]);\n      else if (hours < 24)\n         result = this.label(\"Approximately {0} hour(s) remaining\", [hours]);\n      else result = this.label(\"Approximately {0} day(s) remaining\", [days]);\n\n      if (result) {\n         $$(ids.importButton)?.setValue(result);\n      } else {\n         const selected = $$(ids.datatable)?.find({ _included: true });\n         $$(ids.importButton)?.setValue(this.labelImport(selected));\n      }\n   }\n\n   /**\n    * @method getMatchFields\n    *\n    * @return {Object} - [\n    *                      {\n    *                         columnIndex: {number},\n    *                         field: {ABField},\n    *                         searchField: {ABField} [optional]\n    *                      },\n    *                      ...\n    *                    ]\n    */\n   getMatchFields() {\n      const result = [];\n      const ids = this.ids;\n\n      // get richselect components\n      const $selectorViews = $$(ids.columnList)\n         .queryView({ abName: \"columnIndex\" }, \"all\")\n         .filter((selector) => selector.getValue() != \"none\");\n\n      ($selectorViews || []).forEach(($selector) => {\n         const currentObject = this.CurrentObject;\n\n         if (!currentObject) return;\n\n         // webix .options list disallow value 0\n         const field = currentObject.fieldByID($selector.config.fieldId);\n\n         if (!field) return;\n\n         const colIndex = $selector.getValue();\n         const fieldData = {\n            columnIndex: colIndex,\n            field: field,\n         };\n\n         if (field.key === \"date\") {\n            const $optionPanel = $selector.getParentView();\n            const $dateFormatSelectors = $optionPanel.queryView(\n               { abName: \"columnDateFormat\" },\n               \"all\"\n            );\n\n            // define the column to compare data to search .id\n            if ($dateFormatSelectors) {\n               $dateFormatSelectors.forEach((selector) => {\n                  fieldData[selector.config.name] = selector.getValue();\n               });\n\n               // convert all dates into mysql date format YYYY-DD-MM\n               let format;\n\n               switch (fieldData.order) {\n                  case \"1\":\n                     format =\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.year;\n                     break;\n                  case \"2\":\n                     format =\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.year;\n                     break;\n                  case \"3\":\n                     format =\n                        fieldData.year +\n                        fieldData.separator +\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.day;\n                     break;\n                  case \"4\":\n                     format =\n                        fieldData.year +\n                        fieldData.separator +\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.month;\n               }\n\n               fieldData.format = format;\n            }\n         }\n\n         if (field.isConnection) {\n            const $optionPanel = $selector.getParentView();\n            const $linkDataSelector = $optionPanel.queryView(\n               { abName: \"columnLinkData\" },\n               \"all\"\n            )[0];\n\n            // define the column to compare data to search .id\n            if ($linkDataSelector) {\n               const searchField = field.datasourceLink.fieldByID(\n                  $linkDataSelector.getValue()\n               );\n\n               fieldData.searchField = searchField;\n            }\n         }\n\n         result.push(fieldData);\n      });\n\n      return result;\n   }\n\n   labelImport(selected) {\n      let length = selected;\n\n      if (Array.isArray(selected)) length = selected.length;\n\n      return this.label(\"Import {0} Records\", [length]);\n   }\n\n   /**\n    * @method import\n    *\n    * @return {Promise}\n    */\n   async import() {\n      // if (dv == null) return Promise.resolve();\n\n      // // get ABObject\n      // let obj = dv.datasource;\n\n      // Make sure we are connected to an Object\n      const currentObject = this.CurrentObject;\n\n      if (!currentObject) return;\n\n      // get ABModel\n      // let model = dv.model;\n      // if (model == null) return Promise.resolve();\n\n      const ids = this.ids;\n      const $importButton = $$(ids.importButton);\n\n      $importButton.disable();\n\n      // Show loading cursor\n      const $form = $$(ids.form);\n      const $progressBar = $$(ids.progressBar);\n\n      $form.showProgress({ type: \"icon\" });\n      $progressBar.showProgress({\n         type: \"top\",\n         position: 0.0001,\n      });\n\n      // get richselect components\n      const matchFields = this.getMatchFields();\n\n      // Get object's model\n      const objModel = currentObject.model();\n      const $datatable = $$(ids.datatable);\n      const selectedRows = $datatable.find({ _included: true });\n\n      let _currProgress = 0;\n\n      const increaseProgressing = () => {\n         _currProgress += 1;\n         $progressBar.showProgress({\n            type: \"bottom\",\n            position: _currProgress / selectedRows.length,\n         });\n      };\n      const itemFailed = (itemId, errMessage) => {\n         if ($datatable) {\n            // set \"fail\" status\n            $datatable.addRowCss(itemId, \"row-fail\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"fail\",\n               _errorMsg: errMessage,\n            });\n            $datatable.unblockEvent();\n         }\n\n         increaseProgressing();\n\n         console.error(errMessage);\n      };\n      const abWebix = this.AB.Webix;\n      const itemInvalid = (itemId, errors = []) => {\n         if ($datatable) {\n            // combine all error messages to display in tooltip\n            const errorMsg = [];\n            // mark which column are invalid\n            errors.forEach((err) => {\n               if (!err?.name) return;\n\n               const fieldInfo = matchFields.filter(\n                  (f) => f.field && f.field.columnName == err.name\n               )[0];\n\n               errorMsg.push(err.name + \": \" + err.message);\n               // we also need to define an error message\n               // abWebix.message({\n               //    type: \"error\",\n               //    text: err.name + \": \" + err.message\n               // });\n            });\n\n            // set \"fail\" status\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"invalid\",\n               _errorMsg: errorMsg.join(\"</br>\"),\n            });\n            $datatable.unblockEvent();\n            $datatable.addRowCss(itemId, \"webix_invalid\");\n         }\n         // increaseProgressing();\n      };\n      const itemPass = (itemId) => {\n         if ($datatable) {\n            // set \"done\" status\n            $datatable.removeRowCss(itemId, \"row-fail\");\n            $datatable.addRowCss(itemId, \"row-pass\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"done\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n         }\n\n         increaseProgressing();\n      };\n      const itemValid = (itemId) => {\n         if ($datatable) {\n            // mark all columns valid (just in case they were invalid before)\n            // matchFields.forEach((f) => {\n            //    $datatable.removeCellCss(\n            //       itemId,\n            //       f.columnIndex,\n            //       \"webix_invalid_cell\"\n            //    );\n            // });\n            // highlight the row\n            $datatable.removeRowCss(itemId, \"webix_invalid\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n            // $datatable.addRowCss(itemId, \"row-pass\");\n         }\n      };\n      const $statusMessage = $$(ids.statusMessage);\n      const uiCleanUp = () => {\n         // To Do anyUI updates\n         // console.log(\"ui clean up now\");\n         $importButton.enable();\n\n         // Hide loading cursor\n         $form.hideProgress();\n         $progressBar.hideProgress();\n\n         $statusMessage.setValue(\"\");\n         $statusMessage.hide();\n\n         const selected = $datatable.find({ _included: true });\n\n         $importButton.setValue(this.labelImport(selected));\n         this.emit(\"done\");\n      };\n\n      const validRows = [];\n\n      let allValid = true;\n\n      // Pre Check Validations of whole CSV import\n      // update row to green if valid\n      // update row to red if !valid\n      (selectedRows || []).forEach((data, index) => {\n         const newRowData = this.getParentValues();\n\n         matchFields.forEach((f) => {\n            if (!f.field?.key) return;\n\n            switch (f.field.key) {\n               // case \"connectObject\":\n               //    // skip\n               //    break;\n               case \"number\":\n                  if (typeof data[f.columnIndex] !== \"number\") {\n                     newRowData[f.field.columnName] = (\n                        data[f.columnIndex] || \"\"\n                     ).replace(/[^-0-9.]/gi, \"\");\n\n                     break;\n                  }\n\n                  newRowData[f.field.columnName] = data[f.columnIndex];\n\n                  break;\n\n               default:\n                  newRowData[f.field.columnName] = data[f.columnIndex];\n\n                  break;\n            }\n         });\n\n         let isValid = false;\n         let errorMsg = \"\";\n\n         // first check legacy and server side validation\n         const validator = currentObject.isValidData(newRowData);\n\n         isValid = validator.pass();\n         errorMsg = validator.errors;\n\n         if (isValid)\n            // now check complex field validation rules\n            isValid = $datatable.validate(data.id);\n         else {\n            allValid = false;\n\n            itemInvalid(data.id, errorMsg);\n         }\n\n         if (isValid) {\n            itemValid(data.id);\n            validRows.push({ id: data.id, data: newRowData });\n         } else allValid = false;\n\n         // $datatable.unblockEvent();\n      });\n\n      if (!allValid) {\n         // To Do anyUI updates\n         // $importButton.enable();\n         //\n         // // Hide loading cursor\n         // $form.hideProgress();\n         // $progressBar.hideProgress();\n         // $statusMessage.setValue(\"\");\n         // $statusMessage.hide();\n         //\n         // // _logic.hide();\n         //\n         // if (_logic.callbacks && _logic.callbacks.onDone)\n         //    _logic.callbacks.onDone();\n         uiCleanUp();\n\n         abWebix.alert({\n            title: this.label(\"Invalid Data\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\n               \"The highlighted row has invalid data. Please edit in the window or update the CSV and try again.\"\n            ),\n         });\n\n         return;\n      }\n\n      // if pass, then continue to process each row\n      // ?? : can we process in Parallel?\n      // ?? : implement hash Lookups for connected Fields\n      const hashLookups = {};\n      // {obj}  /*  { connectField.id : { 'searchWord' : \"uuid\"}}\n      // use this hash to reduce the # of lookups needed to fill in our\n      // connected entries\n\n      const connectedFields = matchFields.filter(\n         (f) => f && f.field?.isConnection && f.searchField\n      );\n\n      const throttledSize = 10;\n      let startUpdateTime;\n      let numDone = 0;\n\n      try {\n         // forEach connectedFields in csv\n         const allLookups = [];\n\n         (connectedFields || []).forEach((f) => {\n            const connectField = f.field;\n            // const searchWord = newRowData[f.columnIndex];\n            const connectObject = connectField.datasourceLink;\n\n            if (!connectObject) return;\n\n            const connectModel = connectObject.model();\n\n            if (!connectModel) return;\n\n            const linkIdKey = connectField.indexField\n               ? connectField.indexField.columnName\n               : connectField.object.PK();\n\n            // prepare default hash entry:\n            hashLookups[connectField.id] = {};\n\n            // load all values of connectedField entries\n            const gethashLookup = async () => {\n               try {\n                  const list = await connectModel.findAll({\n                     where: {}, // !!!\n                     populate: false,\n                  });\n                  const data = list.data || list;\n\n                  (data || []).forEach((row) => {\n                     // store in hash[field.id] = { 'searchKey' : \"uuid\" }\n\n                     hashLookups[connectField.id][\n                        row[f.searchField.columnName]\n                     ] = row[linkIdKey];\n                  });\n               } catch (err) {\n                  console.error(err);\n               }\n            };\n\n            allLookups.push(gethashLookup());\n         });\n\n         await Promise.all(allLookups);\n\n         // forEach validRow\n         validRows.forEach((data) => {\n            const newRowData = data.data;\n\n            // update the datagrid row to in-progress\n            $datatable.blockEvent();\n            $datatable.updateItem(data.id, {\n               _status: \"in-progress\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n\n            // forEach ConnectedField\n            (connectedFields || []).forEach((f) => {\n               // find newRowData[field.columnName] = { field.PK : hash[field.id][searchWord] }\n               const connectField = f.field;\n               const linkIdKey = connectField.indexField\n                  ? connectField.indexField.columnName\n                  : connectField.object.PK();\n               const uuid =\n                  hashLookups[connectField.id][\n                     newRowData[connectField.columnName]\n                  ];\n\n               if (!uuid) {\n                  itemInvalid(data.id, [{ name: connectField.columnName }]);\n                  allValid = false;\n               }\n\n               newRowData[connectField.columnName] = {};\n               newRowData[connectField.columnName][linkIdKey] = uuid;\n            });\n         });\n\n         if (!allValid) {\n            abWebix.alert({\n               title: this.label(\"Invalid Data\"),\n               ok: this.label(\"Ok\"),\n               text: this.label(\n                  \"The highlighted row has invalid data. Please edit in the window or update the CSV and try again.\"\n               ),\n            });\n            uiCleanUp();\n\n            return;\n         }\n\n         // NOTE: Parallel exectuion of all these:\n         const allSaves = [];\n         const createRecord = (objModel, newRowsData, element, total) =>\n            new Promise((resolve, reject) => {\n               element.doRecordRulesPre(newRowsData);\n\n               const processResult = async () => {\n                  try {\n                     const result = await objModel.batchCreate({\n                        batch: newRowsData,\n                     });\n                     const resultErrors = result.errors;\n\n                     // Show errors of each row\n                     Object.keys(resultErrors).forEach((rowIndex) => {\n                        const error = resultErrors[rowIndex];\n\n                        if (error) {\n                           itemFailed(\n                              rowIndex,\n                              error.message || error.sqlMessage || error\n                           );\n                        }\n                     });\n\n                     const resultData = result.data;\n                     const penddingRecordRules = [];\n\n                     Object.keys(resultData).forEach((rowIndex) => {\n                        penddingRecordRules.push(\n                           new Promise((resolve, reject) => {\n                              // Process Record Rule\n                              const processRowData = async () => {\n                                 try {\n                                    await element.doRecordRules(\n                                       resultData[rowIndex]\n                                    );\n\n                                    itemPass(rowIndex);\n                                    resolve();\n                                 } catch (err) {\n                                    itemFailed(rowIndex, err);\n                                    reject(\"that didn't work\");\n                                 }\n                              };\n\n                              processRowData();\n                           })\n                        );\n                     });\n\n                     const waitPenddingRecordRules = async () => {\n                        try {\n                           await Promise.all(penddingRecordRules);\n\n                           newRowsData.forEach((row) => {\n                              // itemPass(row.id);\n                              numDone++;\n                              if (numDone % throttledSize == 0) {\n                                 this.refreshRemainingTimeText(\n                                    startUpdateTime,\n                                    validRows.length,\n                                    numDone\n                                 );\n                              }\n                           });\n\n                           if (numDone === total) {\n                              uiCleanUp();\n                              $importButton.disable();\n                           }\n\n                           resolve();\n                        } catch (err) {\n                           // newRowsData.forEach((row) => {\n                           //    itemFailed(row.id, err);\n                           // });\n                           // throw err;\n                           reject(err);\n                        }\n                     };\n\n                     await waitPenddingRecordRules();\n                  } catch (err) {\n                     console.error(err);\n                     reject(err);\n                  }\n               };\n\n               processResult();\n            });\n\n         validRows.forEach((data) => {\n            allSaves.push({ id: data.id, data: data.data });\n         });\n\n         // we are going to store these promises in an array of\n         // arrays with 50 in each sub array\n         const throttledSaves = [];\n         const total = allSaves.length;\n\n         let index = 0;\n\n         while (allSaves.length) {\n            throttledSaves[index] = allSaves.splice(0, throttledSize);\n\n            index++;\n         }\n\n         // execute the array of array of 100 promises one at at time\n         const performThrottledSaves = (\n            currentRecords,\n            remainingRecords,\n            importer,\n            total\n         ) =>\n            new Promise((resolve, reject) => {\n               // execute the next 100\n               // const requests = currentRecords.map((data) => {\n               //    return createRecord(\n               //       objModel,\n               //       data.record,\n               //       data.data,\n               //       importer\n               //    );\n               // });\n\n               const processRequest = async () => {\n                  try {\n                     await createRecord(\n                        objModel,\n                        currentRecords,\n                        importer,\n                        total\n                     );\n\n                     // when done get the next 10\n                     const nextRecords = remainingRecords.shift();\n\n                     // if there are any remaining in the group call performThrottledSaves\n                     if (nextRecords?.length) {\n                        await performThrottledSaves(\n                           nextRecords,\n                           remainingRecords,\n                           importer,\n                           total\n                        );\n                     } else {\n                        // uiCleanUp();\n                        resolve();\n                     }\n                  } catch (err) {\n                     // Handle errors here\n                     reject(err);\n                  }\n               };\n\n               processRequest();\n            });\n\n         // now we are going to processes these new containers one at a time\n         // $datatable.blockEvent();\n         // this is when the real work starts so lets begin our countdown timer now\n         startUpdateTime = new Date();\n         // get the first group of Promises out of the collection\n         const next = throttledSaves.shift();\n\n         // execute our Promise iterator\n         await performThrottledSaves(next, throttledSaves, this.view, total);\n      } catch (err) {\n         // resolve Error UI\n         abWebix.alert({\n            title: this.label(\"Error Creating Records\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\"One or more records failed upon creation.\"),\n         });\n         // $datatable.unblockEvent();\n         uiCleanUp();\n         console.error(err);\n      }\n   }\n\n   // Display linked data\n   uiLinkedData() {\n      const dcLink = this.datacollection?.datacollectionLink;\n      const linkedData = dcLink?.getCursor();\n      if (!linkedData) return;\n\n      return {\n         view: \"window\",\n         modal: true,\n         resize: false,\n         head: {\n            view: \"toolbar\",\n            cols: [\n               {},\n               {\n                  view: \"button\",\n                  width: 35,\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"nomargin fa fa-times\",\n                  click: () => {\n                     this.hideLinkedData();\n                  },\n               },\n            ],\n         },\n         body: {\n            view: \"property\",\n            id: \"sets\",\n            editable: false,\n            width: 400,\n            height: 200,\n            elements: [\n               { label: this.label(\"Linked Data\"), type: \"label\" },\n               {\n                  label: \"ID\",\n                  type: \"text\",\n                  value: linkedData.uuid ?? linkedData.id,\n               },\n               {\n                  label: \"Label\",\n                  type: \"text\",\n                  value: dcLink.datasource.displayData(linkedData),\n               },\n            ],\n         },\n      };\n   }\n\n   showLinkedData() {\n      const ui = this.uiLinkedData();\n      this._info_popup = this.AB.Webix.ui(ui);\n      this._info_popup.show($$(this.ids.linkedDataButton).$view, {\n         pos: \"top\",\n      });\n   }\n\n   hideLinkedData() {\n      this._info_popup?.hide();\n   }\n\n   getParentValues() {\n      const result = {};\n\n      // get ABDatacollection\n      const dc = this.datacollection;\n      const currentObject = this.CurrentObject;\n\n      // Set parent's data collection cursor\n      const dcLink = dc?.datacollectionLink;\n      const linkConnectFields = [];\n\n      let objectLink;\n      let linkValues;\n\n      if (dcLink?.getCursor()) {\n         objectLink = dcLink.datasource;\n\n         linkConnectFields.push(\n            ...currentObject.fields(\n               (f) => f.isConnection && f.settings.linkObject === objectLink.id\n            )\n         );\n\n         linkValues = dcLink.getCursor();\n      }\n\n      // Set parent's data collection cursor\n      if (objectLink && linkConnectFields.length && linkValues) {\n         linkConnectFields.forEach((f) => {\n            const linkColName = f.indexField\n               ? f.indexField.columnName\n               : objectLink.PK();\n\n            result[f.columnName] = result[f.columnName] ?? {};\n            result[f.columnName][linkColName] =\n               linkValues[linkColName] ?? linkValues.id;\n         });\n      }\n\n      return result;\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartAreaComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartArea_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.areaType,\n         yAxis: {\n            start: 0,\n            step: settings.stepValue, //\"#stepValue#\",\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend: settings.isLegend\n            ? {\n                 template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                 values: [], // TODO : bug in webix 5.1.7\n              }\n            : null,\n         series: [\n            {\n               alpha: 0.7,\n               value: \"#value#\",\n               color: \"#ee4339\",\n            },\n            {\n               alpha: 0.4,\n               value: \"#value2#\",\n               color: \"#a7ee70\",\n            },\n         ],\n         height: settings.chartHeight,\n         // width: settings.chartWidth,\n      });\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartBarComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartBar_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.barType,\n         preset: settings.barPreset,\n         value: \"#value#\",\n         color: \"#color#\",\n         yAxis: {\n            start: 0,\n            step: settings.stepValue, //\"#stepValue#\",\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend:\n            settings.barType === \"bar\" || !settings.barType\n               ? settings.isLegend\n                  ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n                  : \"\"\n               : settings.isLegend\n               ? {\n                    template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                    values: [], // TODO : bug in webix 5.1.7\n                 }\n               : null,\n         height: settings.height,\n         // width: settings.chartWidth,\n      });\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewChartComponent extends ABViewContainerComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChart_${baseView.id}`, ids);\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB, accessLevel);\n\n      const $component = $$(this.ids.component);\n      const abWebix = this.AB.Webix;\n\n      if ($component) abWebix.extend($component, abWebix.ProgressBar);\n\n      const baseView = this.view;\n      const dc = this.datacollection;\n\n      if (dc) {\n         const eventNames = [\n            \"changeCursor\",\n            \"cursorStale\",\n            \"create\",\n            \"update\",\n            \"delete\",\n            \"initializedData\",\n         ];\n\n         [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n            // QUESTION: is this a problem if the check !(key in (...)) finds\n            // an event that some OTHER widget has added and not this one?\n            if (\n               dc.datacollectionLink &&\n               !(key in (dc.datacollectionLink._events ?? []))\n            )\n               baseView.eventAdd({\n                  emitter: dc.datacollectionLink,\n                  eventName: key,\n                  listener: () => {\n                     baseView.refreshData();\n                  },\n               });\n         });\n\n         eventNames.forEach((evtName) => {\n            baseView.eventAdd({\n               emitter: dc,\n               eventName: evtName,\n               listener: () => {\n                  baseView.refreshData();\n               },\n            });\n         });\n      }\n\n      baseView.refreshData();\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewChartContainerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewChartContainer_${baseView.id}`,\n         Object.assign(\n            {\n               chartContainer: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui(uiChartComponent) {\n      const _ui = super.ui([\n         Object.assign({ id: this.ids.chartContainer }, uiChartComponent ?? {}),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n      // if (!this._isShow) {\n\n      // Mark this widget is showing\n      const baseView = this.view;\n\n      baseView._isShow = true;\n\n      this.refreshData(baseView.parent.getDCChart());\n      // }\n   }\n\n   refreshData(dcChart) {\n      const $chartContainer = $$(this.ids.chartContainer);\n      const $chartComponent = $$(this.ids.component);\n\n      if ($chartContainer?.data) $chartContainer.data.sync(dcChart);\n\n      setTimeout(() => {\n         $chartComponent?.adjust();\n         $chartContainer?.adjust();\n      }, 160);\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartLineComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartLine_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.lineType,\n         preset: settings.linePreset,\n         value: \"#value#\",\n         color: \"#color#\",\n         yAxis: {\n            start: 0,\n            step: settings.stepValue,\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend: settings.isLegend\n            ? {\n                 template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                 values: [], // TODO : bug in webix 5.1.7\n              }\n            : null,\n         height: settings.chartHeight,\n         // width: settings.chartWidth,\n      });\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartPieComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartPie_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.pieType,\n         value: \"#value#\",\n         color: \"#color#\",\n         legend: settings.isLegend\n            ? {\n                 width: this.view.parent.settings.labelWidth,\n                 template: `<div style='font-size: ${settings.labelFontSize}px;'>#label#</div>`,\n              }\n            : null,\n         pieInnerText: `<div style='font-size: ${settings.innerFontSize}px;'>#value#</div>`,\n         shadow: 1,\n         height: settings.height,\n         // width: settings.chartWidth,\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewCommentComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewComment_${baseView.id}`,\n         Object.assign(\n            {\n               comment: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const _ui = super.ui([\n         {\n            id: this.ids.comment,\n            view: \"comments\",\n            users: baseView.getUserData(),\n            currentUser: baseView.getCurrentUserId(),\n            height: this.settings.height,\n            data: this.getCommentData(),\n            on: {\n               onBeforeAdd: (id, obj, index) => {\n                  this.addComment(obj.text, new Date());\n               },\n               // NOTE: no update event of comment widget !!\n               // Updating event handles in .init function\n               // https://docs.webix.com/api__ui.comments_onbeforeeditstart_event.html#comment-4509366150\n\n               // onAfterEditStart: function (rowId) {\n               //    let item = this.getItem(rowId);\n\n               //    _logic.updateComment(rowId, item);\n               // },\n               onAfterDelete: (rowId) => {\n                  this.deleteComment(rowId);\n               },\n            },\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const baseView = this.view;\n\n      baseView.__dvEvents = baseView.__dvEvents || {};\n\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if ($comment) {\n         const $commentList = $comment.queryView({ view: \"list\" });\n\n         if ($commentList) {\n            // Updating comment event\n            if (!baseView.__dvEvents.onStoreUpdated)\n               baseView.__dvEvents.onStoreUpdated =\n                  $commentList.data.attachEvent(\n                     \"onStoreUpdated\",\n                     (rowId, data, operate) => {\n                        if (operate === \"update\") {\n                           this.updateComment(rowId, (data || {}).text);\n                        }\n                     }\n                  );\n\n            // Implement progress bar\n            webix.extend($commentList, webix.ProgressBar);\n         }\n      }\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      // bind dc to component\n      // dv.bind($$(ids.comment));\n\n      if (!baseView.__dvEvents.create)\n         baseView.__dvEvents.create = dv.on(\"create\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.update)\n         baseView.__dvEvents.update = dv.on(\"update\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.delete)\n         baseView.__dvEvents.delete = dv.on(\"delete\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.loadData)\n         baseView.__dvEvents.loadData = dv.on(\"loadData\", () =>\n            this.refreshComment()\n         );\n\n      $comment.refresh();\n   }\n\n   getCommentData() {\n      const baseView = this.view;\n      const dv = this.datacollection;\n\n      if (!dv) return null;\n\n      const userCol = baseView.getUserField();\n      const commentCol = baseView.getCommentField();\n      const dateCol = baseView.getDateField();\n\n      if (!userCol || !commentCol) return null;\n\n      const userColName = userCol.columnName;\n      const commentColName = commentCol.columnName;\n      const dateColName = dateCol ? dateCol.columnName : null;\n      const dataObject = dv.getData();\n      const dataList = [];\n\n      dataObject.forEach((item, index) => {\n         if (item[commentColName]) {\n            const user = baseView.getUserData().find((user) => {\n               return user.value === item[userColName];\n            });\n            const data = {\n               id: item.id,\n               user_id: user ? user.id : 0,\n               date: item[dateColName] ? new Date(item[dateColName]) : null,\n               default_date: new Date(item[\"created_at\"]),\n               text: item[commentColName],\n            };\n\n            dataList.push(data);\n         }\n      });\n\n      dataList.sort(function (a, b) {\n         if (dateColName)\n            return new Date(a.date).getTime() - new Date(b.date).getTime();\n         else\n            return (\n               new Date(a.default_date).getTime() -\n               new Date(b.default_date).getTime()\n            );\n      });\n\n      return dataList;\n   }\n\n   refreshComment() {\n      const baseView = this.view;\n\n      if (baseView.__refreshTimeout) clearTimeout(baseView.__refreshTimeout);\n\n      this.busy();\n\n      const ids = this.ids;\n\n      baseView.__refreshTimeout = setTimeout(() => {\n         const $comment = $$(ids.comment);\n\n         if (!$comment) return;\n\n         // clear comments\n         const $commentList = $comment.queryView({ view: \"list\" });\n\n         if ($commentList) $commentList.clearAll();\n\n         // populate comments\n         const commentData = this.getCommentData();\n\n         if (commentData) {\n            $comment.parse(commentData);\n         }\n\n         // scroll to the last item\n         if ($commentList) $commentList.scrollTo(0, Number.MAX_SAFE_INTEGER);\n\n         delete baseView.__refreshTimeout;\n\n         this.ready();\n      }, 90);\n   }\n\n   addComment(commentText, dateTime) {\n      this.saveData(commentText, dateTime);\n   }\n\n   async updateComment(rowId, commentText) {\n      const baseView = this.view;\n      const model = baseView.model();\n\n      if (!model) return; // already notified\n\n      const commentField = baseView.getCommentField();\n\n      if (!commentField) return; // already notified\n\n      const values = {};\n\n      values[commentField.columnName] = commentText ?? \"\";\n\n      return await model.update(rowId, values);\n   }\n\n   async deleteComment(rowId) {\n      const baseView = this.view;\n      const model = baseView.model();\n\n      if (!model) return;\n\n      return await model.delete(rowId);\n   }\n\n   busy() {\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if (!$comment) return;\n\n      const $commentList = $comment.queryView({ view: \"list\" });\n\n      if (!$commentList) return;\n\n      $commentList.disable();\n\n      if ($commentList.showProgress)\n         $commentList.showProgress({ type: \"icon\" });\n   }\n\n   ready() {\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if (!$comment) return;\n\n      const $commentList = $comment.queryView({ view: \"list\" });\n\n      if (!$commentList) return;\n\n      $commentList.enable();\n\n      if ($commentList.hideProgress) $commentList.hideProgress();\n   }\n\n   async saveData(commentText, dateTime) {\n      if (!commentText) return;\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const baseView = this.view;\n      const model = baseView.model();\n      const ab = this.AB;\n\n      if (!model) {\n         ab.notify.builder(\n            {},\n            {\n               message:\n                  \"ABViewComment.saveData(): could not pull a model to work with.\",\n               viewName: baseView.label,\n            }\n         );\n\n         return;\n      }\n\n      const comment = {};\n      const userField = baseView.getUserField();\n\n      if (userField) comment[userField.columnName] = ab.Account.username();\n\n      const commentField = baseView.getCommentField();\n\n      if (commentField) comment[commentField.columnName] = commentText;\n\n      const dateField = baseView.getDateField();\n\n      if (dateField) comment[dateField.columnName] = dateTime;\n\n      // add parent cursor to default\n      const dvLink = dv.datacollectionLink;\n\n      if (dvLink?.getCursor()) {\n         const objectLink = dvLink.datasource;\n         const fieldLink = dv.fieldLink;\n\n         if (objectLink && fieldLink) {\n            comment[fieldLink.columnName] = {};\n            comment[fieldLink.columnName][objectLink.PK()] =\n               dvLink.getCursor().id;\n         }\n      }\n\n      return await model.create(comment);\n   }\n};\n","/**\n * ABViewComponent\n * A common UI component class for our UI widgets.\n */\nimport ClassUI from \"../../../../ui/ClassUI\";\n\nexport default class ABViewComponent extends ClassUI {\n   constructor(baseView, idBase, ids) {\n      super(idBase || `ABView_${baseView.id}`, ids);\n\n      this.view = baseView;\n      this.settings = baseView.settings;\n      this.AB = baseView.AB;\n      this.datacollection = baseView.datacollections || baseView.datacollection;\n\n      this.__events = [];\n      // {array}\n      // A collection of any listeners we are managing.\n      // {\n      //   emitter:   {EventEmitter} the object we are listening on\n      //   eventName: {string} the event key we are listening for\n      //   listener:  {fn} the function to call on\n      // }\n\n      this.CurrentObjectID = null;\n      // {string}\n      // the ABObject.id of the object we are working with.\n\n      this.CurrentDatacollectionID = null;\n      // {string}\n      // the ABDataCollection.id of the DC we are working with\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n   /**\n    * @method CurrentDatacollection()\n    * A helper to return the current ABDataCollection we are working with.\n    * @return {ABDataCollection}\n    */\n   get CurrentDatacollection() {\n      return this.AB.datacollectionByID(this.CurrentDatacollectionID);\n   }\n\n   ui(uiComponents = []) {\n      // an ABView is a collection of rows:\n      const _ui = {\n         id: this.ids.component,\n         view: \"layout\",\n         type: \"space\",\n         rows: uiComponents,\n      };\n\n      // if this form is empty, then force a minimal row height\n      // so the component isn't completely hidden on the screen.\n      // (important in the editor so we don't loose the ability to edit the\n      // component)\n      if (!_ui.rows.length) _ui.height = 30;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      this.AB = AB;\n   }\n\n   /**\n    * @method datacollectionLoad\n    *\n    * @param datacollection {ABDatacollection}\n    */\n   datacollectionLoad(datacollection) {\n      this.CurrentDatacollectionID = datacollection?.id;\n   }\n\n   objectLoad(object) {\n      this.CurrentObjectID = object?.id;\n   }\n\n   /**\n    * @method eventAdd()\n    * Create a new listener on an object. Note, this will prevent multiple\n    * listeners being applied to the same Object.\n    * @param {object} evt\n    *        The definition of the event we are adding:\n    *        {\n    *           emitter:   {EventEmitter} the object we are listening on\n    *           eventName: {string} the event key we are listening for\n    *           listener:   {fn} the function to call on\n    *        }\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      // make sure we haven't done this before:\n      const __events = this.__events;\n      const exists = __events.filter(\n         (e) => e.emitter === evt.emitter && e.eventName === evt.eventName\n         // && e.listener === evt.listener\n      );\n\n      if (!exists.length) {\n         // add to array\n         __events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventsClear()\n    * Remove all the attached event listeners and reset our tracking.\n    */\n   eventsClear() {\n      this.__events.forEach((evt) => {\n         evt.emitter.removeListener(evt.eventName, evt.listener);\n      });\n\n      this.__events = [];\n   }\n\n   /**\n    * @method waitInitializingDCEvery()\n    * Wait until the DC is initialized, checking every millisecond as specified by the parameter\n    * @param {number} milliSeconds\n    * The amount of milliseconds to recheck DC status.\n    * @param {object} dc\n    * the AB DC instance.\n    */\n\n   async waitInitializingDCEvery(milliSeconds, dc) {\n      if (!this.__isShowing || dc == null) return;\n      // if we manage a datacollection, then make sure it has started\n      // loading it's data when we are showing our component.\n      // load data when a widget is showing\n      if (dc.dataStatus === dc.dataStatusFlag.notInitial) await dc.loadData();\n\n      return await new Promise((resolve) => {\n         if (dc.dataStatus === dc.dataStatusFlag.initialized) {\n            resolve();\n\n            return;\n         }\n\n         const interval = setInterval(() => {\n            if (dc.dataStatus === dc.dataStatusFlag.initialized) {\n               clearInterval(interval);\n\n               resolve();\n            }\n         }, milliSeconds);\n      });\n   }\n\n   /**\n    * @method onShow()\n    * perform any preparations necessary when showing this component.\n    */\n   onShow() {\n      // check if tab has a hint\n      if (this?.view?.settings?.hintID) {\n         // fetch the steps for the hint\n         let hint = this.AB.hintID(this.view.settings.hintID);\n         if (hint.settings.active) {\n            hint.createHintUI();\n         }\n      }\n      // if we manage a datacollection, then make sure it has started\n      // loading it's data when we are showing our component.\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      if (Array.isArray(dc)) {\n         dc.forEach((item) => {\n            if (item.dataStatus === item.dataStatusFlag.notInitial)\n               // load data when a widget is showing\n               item.loadData();\n         });\n      } else {\n         if (dc.dataStatus === dc.dataStatusFlag.notInitial)\n            // load data when a widget is showing\n            dc.loadData();\n      }\n   }\n}\n","const ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewConditionalContainerComponent extends (\n   ABViewContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewConditionalContainer_${baseView.id}`,\n         Object.assign(\n            {\n               batch: \"\",\n            },\n            ids\n         )\n      );\n\n      this._ifComponent = null;\n      this._elseComponent = null;\n\n      // Set filter value\n      this.__filterComponent = baseView.AB.filterComplexNew(\n         `${baseView.id}_filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.populateFilterComponent();\n   }\n\n   ui() {\n      const _uiConditionalContainer = {\n         id: this.ids.batch,\n         view: \"multiview\",\n         cells: [\n            {\n               batch: \"wait\",\n               view: \"layout\",\n               rows: [\n                  {\n                     view: \"label\",\n                     label: this.label(\"Please wait...\"),\n                  },\n               ],\n            },\n         ],\n      };\n      const _ui = super.ui([_uiConditionalContainer]);\n\n      _uiConditionalContainer.cells.push(\n         Object.assign({ batch: \"if\" }, this.ifComponent.ui()),\n         Object.assign({ batch: \"else\" }, this.elseComponent.ui())\n      );\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB, accessLevel);\n\n      await Promise.all([\n         this.ifComponent.init(AB, accessLevel),\n         this.elseComponent.init(AB, accessLevel),\n      ]);\n\n      this.populateFilterComponent();\n\n      const dc = this.datacollection;\n\n      if (dc) {\n         const baseView = this.view;\n\n         // listen DC events\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"loadData\",\n            listener: () => this.displayView(), // Q? does this need to remain empty param?\n         });\n\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"initializedData\",\n            listener: () => this.displayView(), // Q? does this need to remain empty param?\n         });\n\n         [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n            baseView.eventAdd({\n               emitter: dc,\n               eventName: key,\n               listener: (...p) => this.displayView(...p),\n            });\n         });\n      }\n\n      this.displayView();\n   }\n\n   onShow() {\n      super.onShow();\n\n      this.populateFilterComponent();\n      this.displayView();\n   }\n\n   get ifComponent() {\n      return (this._ifComponent =\n         this._ifComponent ||\n         this.view\n            .views()\n            .find((v) => v?.name === \"If\")\n            .component());\n   }\n\n   get elseComponent() {\n      return (this._elseComponent =\n         this._elseComponent ||\n         this.view\n            .views()\n            .find((v) => v?.name === \"Else\")\n            .component());\n   }\n\n   displayView(currData) {\n      const dc = this.datacollection;\n      const ids = this.ids;\n      const $batch = $$(ids.batch);\n\n      if (dc) {\n         if (!currData) currData = dc.getCursor();\n\n         // show 'waiting' panel\n         if (\n            !currData &&\n            (dc.dataStatus === dc.dataStatusFlag.notInitial ||\n               dc.dataStatus === dc.dataStatusFlag.initializing)\n         ) {\n            $batch?.showBatch(\"wait\");\n\n            return;\n         }\n      }\n\n      const isValid = this.__filterComponent.isValid(currData);\n\n      if (isValid) {\n         // if (isValid && currData) {\n         $batch?.showBatch(\"if\");\n         this.ifComponent?.onShow?.();\n      } else {\n         $batch?.showBatch(\"else\");\n         this.elseComponent?.onShow?.();\n      }\n   }\n\n   populateFilterComponent() {\n      const dc = this.datacollection;\n      const __filterComponent = this.__filterComponent;\n\n      if (dc?.datasource) __filterComponent.fieldsLoad(dc.datasource.fields());\n      else __filterComponent.fieldsLoad([]);\n\n      __filterComponent.setValue(\n         this.settings.filterConditions ??\n            this.view.constructor.defaultValues().filterConditions\n      );\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewContainerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewContainer_${baseView.id}`, ids);\n\n      this.idBase = idBase;\n      this.options = null;\n\n      this.viewComponents = {\n         /* view.id : {viewComponent} */\n      };\n      // {hash}\n      // a reference of all our child views that we manage\n\n      this.viewComponentIDs = {\n         /* view.id : {viewComponent} */\n      };\n      // {hash}\n      // a reference of all our child.ui().ids of the views we manage\n\n      this._handlerChangePage = (pageId) => {\n         baseView.changePage(pageId);\n      };\n   }\n\n   ui(uiComponents) {\n      // Generate rows & cols of views to .layout\n      const views = this.view.viewsSortByPosition();\n      const rowViews = this.getElements(views);\n      const _ui = super.ui(uiComponents || rowViews);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // make sure each of our child views get .init() called\n   async init(AB, accessLevel = 0, options = {}) {\n      await super.init(AB);\n\n      this.options = options;\n\n      const allInits = [];\n\n      // // register our callbacks:\n      // if (options) {\n      //    for (var c in _logic.callbacks) {\n      //       _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n      //    }\n      // }\n\n      // see access by CSS class\n      $$(this.ids.component)?.define(\"css\", `accessLevel-${accessLevel}`);\n\n      const viewComponents = this.viewComponents;\n\n      // attach all the .UI views:\n      for (const key in viewComponents) {\n         // skip when the view is removed.\n         if (\n            !viewComponents[key] ??\n            !this.view.views((v) => v.id === key).length\n         )\n            continue;\n\n         // Initial component along with options in case there are callbacks we need to listen for\n         if (accessLevel) {\n            allInits.push(viewComponents[key].init(AB, accessLevel, options));\n\n            continue;\n         }\n\n         $$(this.viewComponentIDs[key])?.hide();\n      }\n\n      await Promise.all(allInits);\n   }\n\n   getElements(views) {\n      const rows = [];\n      const componentMap = {};\n\n      let curRowIndex;\n      let curColIndex;\n\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n\n      views.forEach((v) => {\n         // let component = v.component(/* App, idPrefix */);\n         // NOTE: PONG - Just temporary to be compatible old & new versions\n         let component;\n\n         try {\n            component = v.component(this.idBase);\n            // make sure any existing handlers for changePage are removed.\n            v.removeAllListeners(\"changePage\");\n         } catch (err) {\n            component = v.component(this.idBase);\n\n            const ui = component.ui;\n\n            component.ui = (() => ui).bind(component);\n         }\n\n         this.viewComponents[v.id] = component;\n\n         ////\n         //// TODO: figure out the embedded Callbacks => emit()\n         ////\n         // if key == \"form\" or \"button\" register the callbacks to the parent\n         // NOTE this will only work on the last form of a page!\n         // if (v.key == \"form\" && v._logic.callbacks) {\n         //    _logic.callbacks = v._logic.callbacks;\n         // }\n\n         // Create a new row\n         if (v.position.y == null || v.position.y !== curRowIndex) {\n            curRowIndex = v.position.y || rows.length;\n            curColIndex = 0;\n\n            const rowNew = {\n               cols: [],\n            };\n\n            // Create columns following setting value\n            const colNumber = settings.columns || defaultSettings.columns;\n\n            for (let i = 0; i < colNumber; i++)\n               rowNew.cols.push({\n                  gravity: settings.gravity?.[i]\n                     ? parseInt(settings.gravity[i])\n                     : defaultSettings.gravity,\n               });\n\n            rows.push(rowNew);\n         }\n\n         // Get the last row\n         const rowIndx = rows.length - 1;\n         const curRow = rows[rowIndx];\n         const newPos = v.position.x ?? 0;\n         const mapKey = `${rowIndx}-${newPos}`;\n\n         let getGrav = 1;\n\n         if (componentMap[mapKey])\n            console.error(\n               `Component[${component?.ids?.component}] is overwriting component[${componentMap[mapKey].ids?.component}]. <-- Reorder them to fix.`\n            );\n\n         componentMap[mapKey] = component;\n\n         if (curRow.cols[newPos]?.gravity)\n            getGrav = curRow.cols[newPos].gravity;\n\n         const _ui = component.ui();\n\n         this.viewComponentIDs[v.id] = _ui.id;\n         _ui.gravity = getGrav;\n\n         // Add ui of sub-view to column\n         curRow.cols[newPos] = _ui;\n\n         // Trigger 'changePage' event to parent\n         this.eventAdd({\n            emitter: v,\n            eventName: \"changePage\",\n            listener: this._handlerChangePage,\n         });\n\n         curColIndex++;\n      });\n\n      return rows;\n   }\n\n   onShow() {\n      super.onShow();\n\n      // calll .onShow in child components\n      Object.values(this.viewComponents).forEach((val) => {\n         val.onShow?.();\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABViewDetailComponent = require(\"./ABViewDetailComponent\");\nconst ABViewPropertyLinkPage =\n   require(\"../viewProperties/ABViewPropertyLinkPage\").default;\n\nmodule.exports = class ABViewDataviewComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDataview_${baseView.id}`,\n         Object.assign(\n            {\n               dataview: \"\",\n               reload: \"\",\n            },\n            ids\n         )\n      );\n\n      this.linkPage = null;\n   }\n\n   ui() {\n      // NOTE: need to initial the detail component here\n      // because its dom width & height values are used .template function\n      this.initDetailComponent();\n\n      const ids = this.ids;\n      const L = (...params) => (this.AB ?? AB).Multilingual.label(...params);\n      const _ui = super.ui([\n         {\n            view: \"layout\",\n            rows: [\n               {\n                  id: ids.reload,\n                  view: \"button\",\n                  value: L(\"New data available. Click to reload.\"),\n                  css: \"webix_primary webix_warn\",\n                  hidden: true,\n                  click: (id, event) => {\n                     this.reloadData();\n                  },\n               },\n               {\n                  id: ids.dataview,\n                  view: \"dataview\",\n                  scroll: \"y\",\n                  sizeToContent: true,\n                  css: \"borderless transparent\",\n                  xCount: this.settings.xCount != 1 ? this.settings.xCount : 0,\n                  height: this.settings.height,\n                  template: (item) => this.itemTemplate(item),\n                  on: {\n                     onAfterRender: () => {\n                        this.applyClickEvent();\n                        this.addCyAttribute();\n                     },\n                  },\n               },\n            ],\n         },\n      ]);\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dc = this.datacollection;\n      if (!dc) return;\n\n      // Initial the link page helper\n      this.linkPage = this.linkPageHelper.component();\n      this.linkPage.init({\n         view: this.view,\n         datacollection: dc,\n      });\n\n      const ids = this.ids;\n      const $dataView = $$(ids.dataview);\n      AB.Webix.extend($dataView, AB.Webix.ProgressBar);\n      dc.bind($dataView);\n\n      this.initRefreshWarning();\n\n      window.addEventListener(\"resize\", () => {\n         clearTimeout(this._resizeEvent);\n         this._resizeEvent = setTimeout(() => {\n            this.resize($dataView.getParentView());\n            delete this._resizeEvent;\n         }, 20);\n      });\n   }\n\n   /**\n    * @method initRefreshWarning\n    *\n    */\n   initRefreshWarning() {\n      const dc = this.datacollection;\n      const includeInQuery =\n         (dc?.settings?.objectWorkspace?.filterConditions?.rules ?? []).filter(\n            (r) =>\n               [\n                  \"in_query\",\n                  \"not_in_query\",\n                  \"in_query_field\",\n                  \"not_in_query_field\",\n               ].includes(r.rule)\n         ).length > 0;\n\n      if (!includeInQuery) return;\n      [\n         \"ab.datacollection.create\",\n         \"ab.datacollection.update\",\n         \"ab.datacollection.delete\",\n      ].forEach((eventKey) => {\n         dc.on(eventKey, (data) => {\n            if (data.objectId == dc.datasource.id)\n               this.showRefreshWarning(data);\n         });\n      });\n   }\n\n   showRefreshWarning() {\n      if (this.__throttleRefreshWarning)\n         clearTimeout(this.__throttleRefreshWarning);\n\n      this.__throttleRefreshWarning = setTimeout(() => {\n         $$(this.ids.reload)?.show();\n      }, 200);\n   }\n\n   reloadData() {\n      const dc = this.datacollection;\n      dc?.reloadData();\n\n      $$(this.ids.reload)?.hide();\n   }\n\n   onShow() {\n      super.onShow();\n\n      this.resize();\n   }\n\n   resize(base_element) {\n      const $dataview = $$(this.ids.dataview);\n      if (!$dataview) {\n         // Not sure if its a problem so notify\n         this.AB.notify.developer(\n            new Error(\"Resize called on missing dataview component\"),\n            { context: \"ABViewDataviewComponent.resize()\", ids: this.ids }\n         );\n         return;\n      }\n      $dataview.resize();\n\n      const item_width = this.getItemWidth(base_element);\n      $dataview.customize({ width: item_width });\n      $dataview.getTopParentView?.().resize?.();\n   }\n\n   initDetailComponent() {\n      const detailUI = this.getDetailUI();\n      this._detail_ui = this.AB.Webix.ui(detailUI);\n\n      // 2 - Always allow access to components inside data view\n      this.detailComponent.init(null, 2);\n   }\n\n   getDetailUI() {\n      const detailCom = this.detailComponent;\n      const editPage = this.settings.editPage;\n      const detailsPage = this.settings.detailsPage;\n\n      const _ui = detailCom.ui();\n      // adjust the UI to make sure it will look like a \"card\"\n      _ui.type = \"clean\";\n      _ui.css = \"ab-detail-view\";\n\n      if (detailsPage || editPage) {\n         _ui.css += ` ab-detail-hover ab-record-#itemId#`;\n\n         if (detailsPage) _ui.css += \" ab-detail-page\";\n         if (editPage) _ui.css += \" ab-edit-page\";\n      }\n\n      return _ui;\n   }\n\n   itemTemplate(item) {\n      const detailCom = this.detailComponent;\n      const $dataview = $$(this.ids.dataview);\n      const $detail_item = this._detail_ui;\n\n      // Mock up data to initialize height of item\n      if (!item || !Object.keys(item).length) {\n         item = item ?? {};\n         this.datacollection?.datasource?.fields().forEach((f) => {\n            switch (f.key) {\n               case \"string\":\n               case \"LongText\":\n                  item[f.columnName] = \"Lorem Ipsum\";\n                  break;\n               case \"date\":\n               case \"datetime\":\n                  item[f.columnName] = new Date();\n                  break;\n               case \"number\":\n                  item[f.columnName] = 7;\n                  break;\n            }\n         });\n      }\n      detailCom.displayData(item);\n\n      const itemWidth =\n         $dataview.data.count() > 0\n            ? $dataview.type.width\n            : ($detail_item.$width - 20) / this.settings.xCount;\n\n      const itemHeight =\n         $dataview.data.count() > 0\n            ? $dataview.type.height\n            : $detail_item.getChildViews()?.[0]?.$height;\n\n      const tmp_dom = document.createElement(\"div\");\n      tmp_dom.appendChild($detail_item.$view);\n\n      $detail_item.define(\"width\", itemWidth - 24);\n      $detail_item.define(\"height\", itemHeight + 15);\n      $detail_item.adjust();\n\n      // Add cy attributes\n      this.addCyItemAttributes(tmp_dom, item);\n\n      return tmp_dom.innerHTML.replace(/#itemId#/g, item.id);\n   }\n\n   getItemWidth(base_element) {\n      const $dataview = $$(this.ids.dataview);\n\n      let currElem = base_element ?? $dataview;\n      let parentWidth = currElem?.$width;\n      while (currElem) {\n         if (\n            currElem.config.view == \"scrollview\" ||\n            currElem.config.view == \"layout\"\n         )\n            parentWidth =\n               currElem?.$width < parentWidth ? currElem?.$width : parentWidth;\n\n         currElem = currElem?.getParentView?.();\n      }\n\n      if (!parentWidth)\n         parentWidth = $dataview?.getParentView?.().$width || window.innerWidth;\n\n      if (parentWidth > window.innerWidth) parentWidth = window.innerWidth;\n\n      // check if the browser window minus webix default padding is the same as the parent window\n      // if so we need to check to see if there is a sidebar and reduce the usable space by the\n      // width of the sidebar\n      if (window.innerWidth - 19 <= parentWidth) {\n         const $sidebar = this.getTabSidebar();\n         if ($sidebar) {\n            parentWidth -= $sidebar.$width;\n         }\n      }\n\n      const recordWidth = Math.floor(parentWidth / this.settings.xCount);\n\n      return recordWidth;\n   }\n\n   getTabSidebar() {\n      const $dataview = $$(this.ids.dataview);\n      let $sidebar;\n      let currElem = $dataview;\n      while (currElem && !$sidebar) {\n         $sidebar = (currElem.getChildViews?.() ?? []).filter(\n            (item) => item?.config?.view == \"sidebar\"\n         )[0];\n\n         currElem = currElem?.getParentView?.();\n      }\n\n      return $sidebar;\n   }\n\n   applyClickEvent() {\n      const editPage = this.settings.editPage;\n      const detailsPage = this.settings.detailsPage;\n      if (!detailsPage && !editPage) return;\n\n      const $dataview = $$(this.ids.dataview);\n      if (!$dataview) return;\n\n      $dataview.$view.onclick = (e) => {\n         let clicked = false;\n         let divs = e.path ?? [];\n\n         // NOTE: Some web browser clients do not support .path\n         if (!divs.length) {\n            divs.push(e.target);\n            divs.push(e.target.parentNode);\n         }\n\n         if (editPage) {\n            for (let p of divs) {\n               if (\n                  p.className &&\n                  p.className.indexOf(\"webix_accordionitem_header\") > -1\n               ) {\n                  clicked = true;\n                  p.parentNode.parentNode.classList.forEach((c) => {\n                     if (c.indexOf(\"ab-record-\") > -1) {\n                        // var record = parseInt(c.replace(\"ab-record-\", \"\"));\n                        const record = c.replace(\"ab-record-\", \"\");\n                        this.linkPage.changePage(editPage, record);\n                        // com.logic.toggleTab(detailsTab, ids.component);\n                     }\n                  });\n                  break;\n               }\n            }\n         }\n\n         if (detailsPage && !clicked) {\n            for (let p of divs) {\n               if (\n                  p.className &&\n                  p.className.indexOf(\"webix_accordionitem\") > -1\n               ) {\n                  p.parentNode.parentNode.classList.forEach((c) => {\n                     if (c.indexOf(\"ab-record-\") > -1) {\n                        // var record = parseInt(c.replace(\"ab-record-\", \"\"));\n                        const record = c.replace(\"ab-record-\", \"\");\n                        this.linkPage.changePage(detailsPage, record);\n                        // com.logic.toggleTab(detailsTab, ids.component);\n                     }\n                  });\n\n                  break;\n               }\n            }\n         }\n      };\n   }\n\n   addCyAttribute() {\n      const baseView = this.view;\n      const $dataview = $$(this.ids.dataview);\n      const name = (baseView.name ?? \"\").replace(\".dataview\", \"\");\n\n      $dataview.$view.setAttribute(\n         \"data-cy\",\n         `dataview container ${name} ${baseView.id}`\n      );\n   }\n\n   addCyItemAttributes(dom, item) {\n      const baseView = this.view;\n      const uuid = item.uuid;\n      const name = (baseView.name ?? \"\").replace(\".dataview\", \"\");\n      dom.querySelector(\".webix_accordionitem_body\")?.setAttribute(\n         \"data-cy\",\n         `dataview item ${name} ${uuid} ${baseView.id}`\n      );\n      dom.querySelector(\".webix_accordionitem_button\")?.setAttribute(\n         \"data-cy\",\n         `dataview item button ${name} ${uuid} ${baseView.id}`\n      );\n   }\n\n   get detailComponent() {\n      return (this._detailComponent =\n         this._detailComponent ??\n         new ABViewDetailComponent(\n            this.view,\n            `${this.ids.component}_detail_view`\n         ));\n   }\n\n   get linkPageHelper() {\n      return (this.__linkPageHelper =\n         this.__linkPageHelper || new ABViewPropertyLinkPage());\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailCheckboxComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailCheckbox_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      return super.ui({\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail checkbox ${field?.columnName} ${\n                  field?.id\n               } ${baseView.parentDetailComponent()?.id ?? baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   setValue(val) {\n      let checkbox = \"\";\n\n      // Check\n      if (val && JSON.parse(val))\n         checkbox =\n            '<span class=\"check webix_icon fa fa-check-square-o\"></span>';\n      // Uncheck\n      else checkbox = '<span class=\"check webix_icon fa fa-square-o\"></span>';\n\n      super.setValue(checkbox);\n   }\n};\n","const ABObjectQuery = require(\"../../ABObjectQuery\");\nconst ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewDetailComponent extends ABViewContainerComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetail_${baseView.id}`, ids);\n      this.idBase = idBase;\n   }\n\n   ui() {\n      let _ui = super.ui();\n\n      // this wrapper allows the detail view to have a\n      // card appearance as well as enables the edit and\n      // details functions to work when clicked\n      return {\n         type: \"form\",\n         id: this.ids.component,\n         borderless: true,\n         rows: [\n            {\n               body: _ui,\n            },\n         ],\n      };\n   }\n\n   onShow() {\n      const baseView = this.view;\n\n      try {\n         const dataCy = `Detail ${baseView.name?.split(\".\")[0]} ${baseView.id}`;\n\n         $$(this.ids.component)?.$view.setAttribute(\"data-cy\", dataCy);\n      } catch (e) {\n         console.warn(\"Problem setting data-cy\", e);\n      }\n\n      // listen DC events\n      const dv = this.datacollection;\n\n      if (dv) {\n         const currData = dv.getCursor();\n\n         if (currData) this.displayData(currData);\n\n         [\"changeCursor\", \"cursorStale\", \"collectionEmpty\"].forEach((key) => {\n            this.eventAdd({\n               emitter: dv,\n               eventName: key,\n               listener: (...p) => this.displayData(...p),\n            });\n         });\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"create\",\n            listener: (createdRow) => {\n               const currCursor = dv.getCursor();\n\n               if (currCursor?.id === createdRow.id)\n                  this.displayData(createdRow);\n            },\n         });\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"update\",\n            listener: (updatedRow) => {\n               const currCursor = dv.getCursor();\n\n               if (currCursor?.id === updatedRow.id)\n                  this.displayData(updatedRow);\n            },\n         });\n      }\n\n      super.onShow();\n   }\n\n   displayData(rowData = {}) {\n      // make sure we have data to work with.  If null is passed in\n      // then pull current cursor.\n      if (rowData == null) {\n         rowData = this.datacollection.getCursor();\n      }\n\n      const views = (this.view.views() || []).sort((a, b) => {\n         if (!a?.field?.() || !b?.field?.()) return 0;\n\n         // NOTE: sort order of calculated fields.\n         // FORMULA field type should be calculated before CALCULATE field type\n         if (a.field().key === \"formula\" && b.field().key === \"calculate\")\n            return -1;\n         else if (a.field().key === \"calculate\" && b.field().key === \"formula\")\n            return 1;\n\n         return 0;\n      });\n\n      views.forEach((f) => {\n         let val;\n\n         if (f.field) {\n            const field = f.field();\n\n            if (!field) return;\n\n            // get value of relation when field is a connect field\n            switch (field.key) {\n               case \"connectObject\":\n                  val = field.pullRelationValues(rowData);\n\n                  break;\n\n               case \"list\":\n                  val = rowData?.[field.columnName];\n\n                  if (!val) {\n                     val = \"\";\n\n                     break;\n                  }\n\n                  if (field.settings.isMultiple === 0) {\n                     let myVal = \"\";\n\n                     field.settings.options.forEach((options) => {\n                        if (options.id === val) myVal = options.text;\n                     });\n\n                     if (field.settings.hasColors) {\n                        let myHex = \"#66666\";\n                        let hasCustomColor = \"\";\n\n                        field.settings.options.forEach((h) => {\n                           if (h.text === myVal) {\n                              myHex = h.hex;\n                              hasCustomColor = \"hascustomcolor\";\n                           }\n                        });\n\n                        myVal = `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"background-color: ${myHex} !important;\"><span>${myVal}</span></span>`;\n                     }\n\n                     val = myVal;\n                  } else {\n                     const items = [];\n\n                     let myVal = \"\";\n\n                     val.forEach((value) => {\n                        let hasCustomColor = \"\";\n                        let optionHex = \"\";\n\n                        if (field.settings.hasColors && value.hex) {\n                           hasCustomColor = \"hascustomcolor\";\n                           optionHex = `background: ${value.hex};`;\n                        }\n\n                        field.settings.options.forEach((options) => {\n                           if (options.id === value.id) myVal = options.text;\n                        });\n                        items.push(\n                           `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${value.id}\"><span>${myVal}</span></span>`\n                        );\n                     });\n\n                     val = items.join(\"\");\n                  }\n\n                  break;\n\n               case \"user\":\n                  val = field.pullRelationValues(rowData);\n\n                  break;\n\n               case \"file\":\n                  val = rowData?.[field.columnName];\n\n                  if (!val) {\n                     val = \"\";\n\n                     break;\n                  }\n\n                  break;\n\n               case \"formula\":\n                  if (rowData) {\n                     // const dv = this.datacollection;\n                     // const ds = dv ? dv.datasource : null;\n                     // const needRecalculate =\n                     //    !ds || ds instanceof ABObjectQuery ? false : true;\n\n                     // NOTE: Could not to re-calculate because `__relation` data is extracted from full data at the moment\n                     // rowData.__relation format\n                     // {\n                     //    id: \"string\"\n                     //    text: \"string\"\n                     //    translations: []\n                     //    uuid:  \"0cb52669-d626-4c9d-85ea-2d931751d0ce\"\n                     //    value: \"LABEL\"\n                     // }\n                     const needRecalculate = false;\n\n                     val = field.format(rowData, needRecalculate);\n                  }\n\n                  break;\n\n               default:\n                  val = field.format(rowData);\n               // break;\n            }\n         }\n\n         // set value to each components\n         const vComponent = f.component(this.idBase);\n\n         // vComponent?.onShow();\n\n         vComponent?.setValue?.(val);\n         vComponent?.displayText?.(rowData);\n      });\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailConnectComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailConnect_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const settings = this.settings;\n\n      return super.ui({\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const columnName =\n                  baseView.field((fld) => fld.id === settings.fieldId)\n                     ?.columnName ?? \"\";\n               const dataCy = `detail connected ${columnName} ${\n                  settings.fieldId\n               } ${baseView.parentDetailComponent()?.id || baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   setValue(val) {\n      const vals = [];\n\n      if (Array.isArray(val))\n         val.forEach((record) => {\n            vals.push(\n               `<span class=\"webix_multicombo_value\">${record.text}</span>`\n            );\n         });\n      else vals.push(`<span class=\"webix_multicombo_value\">${val.text}</span>`);\n\n      super.setValue(vals.join(\"\"));\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailCustomComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailCustom_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const detailView = baseView.detailComponent();\n\n      let template = field ? field.columnHeader().template({}) : \"\";\n\n      return super.ui({\n         minHeight: 45,\n         height: 60,\n         template,\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail custom ${field?.columnName} ${\n                  field?.id\n               } ${baseView.parentDetailComponent()?.id || baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   onShow() {\n      super.onShow();\n\n      const baseView = this.view;\n      const field = baseView.field();\n\n      if (!field) return;\n\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const detailCom = baseView.detailComponent(),\n         rowData = detailCom.datacollection.getCursor() || {},\n         node = $detailItem.$view;\n\n      field.customDisplay(rowData, null, node, {\n         editable: false,\n      });\n      // Hack: remove the extra webix_template class here, which adds padding so\n      // the item is not alligned with the others\n      node\n         .getElementsByClassName(\"webix_template\")[1]\n         ?.removeAttribute(\"class\");\n   }\n\n   setValue(val) {\n      const field = this.view.field();\n\n      if (!field) return;\n\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const rowData = {};\n\n      rowData[field.columnName] = val;\n\n      field.setValue($detailItem, rowData);\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailImageComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailImage_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const _ui = {\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail image ${field?.columnName} ${field?.id} ${\n                  baseView.parentDetailComponent()?.id || baseView.parent.id\n               }`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      };\n      const settings = this.settings;\n\n      if (settings.height) _ui.height = settings.height;\n\n      return super.ui(_ui);\n   }\n\n   setValue(val) {\n      const field = this.view.field();\n\n      if (!field) {\n         super.setValue(\"\");\n\n         return;\n      }\n\n      const parsedImageUrl = val || field.settings.defaultImageUrl;\n\n      if (!parsedImageUrl) {\n         super.setValue(\"\");\n\n         return;\n      }\n\n      const imageUrl = field.urlImage(parsedImageUrl);\n      const settings = this.settings;\n      const width = settings.width || field.settings.imageWidth || 200;\n      const height = settings.height\n         ? `${settings.height}px`\n         : field.settings.imageHeight\n         ? `${field.settings.imageHeight}px`\n         : \"100%\";\n      const imageTemplate = [\n         `<div class=\"ab-image-data-field\">`,\n         `<div style=\"float: left; background-size: cover; background-position: center center; background-image:url('${imageUrl}');  width: ${width}px; height: ${height}; position:relative;\">`,\n         `<a href=\"${imageUrl}\" target=\"_blank\" title=\"\" class=\"fa fa-download ab-image-data-field-download\"></a>`,\n         `</div></div>`,\n      ].join(\"\");\n\n      super.setValue(imageTemplate);\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nconst SAFE_HTML_TAGS = [\n   \"abbr\",\n   \"acronym\",\n   \"b\",\n   \"blockquote\",\n   \"br\",\n   \"code\",\n   \"div\",\n   \"em\",\n   \"i\",\n   \"li\",\n   \"ol\",\n   \"p\",\n   \"span\",\n   \"strong\",\n   \"table\",\n   \"td\",\n   \"tr\",\n   \"ul\",\n   \"h1\",\n   \"h2\",\n   \"h3\",\n   \"h4\",\n   \"h5\",\n];\n\nmodule.exports = class ABViewDetailItemComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDetailItem_${baseView.id}`,\n         Object.assign(\n            {\n               detailItem: \"\",\n               detailItemLabel: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui(uiDetailItemComponent = {}) {\n      const baseView = this.view;\n\n      // setup 'label' of the element\n      const settings = baseView.detailComponent()?.settings ?? {};\n      const field = baseView.field();\n\n      const isLabelTop = settings.labelPosition == \"top\";\n\n      const group = [];\n      /** @const group will be used later as rows or cols depending on label position */\n      if (settings.showLabel) {\n         const templateLabel = isLabelTop\n            ? \"<label style='display:block; text-align: left; line-height: 32px;' class='webix_inp_top_label'>#label#</label>\"\n            : \"<label style='display: inline-block; float: left; line-height: 32px; width:#width#px;'>#label#</label>\";\n\n         const labelUi = {\n            id: this.ids.detailItemLabel,\n            view: \"template\",\n            borderless: true,\n            height: 38,\n            template: templateLabel,\n            data: { label: field?.label ?? \"\" },\n         };\n         if (!isLabelTop) labelUi.width = settings.labelWidth + 24; // Add 24px to compensate for webix padding\n         group.push(labelUi);\n      }\n\n      let height;\n      if (field?.settings?.useHeight === 1)\n         height = parseInt(field.settings.imageHeight) || height;\n\n      const valueUi = Object.assign(\n         {\n            id: this.ids.detailItem,\n            view: \"template\",\n            borderless: true,\n            autowidth: true,\n            height,\n            isUsers: field?.key === \"user\",\n            template: isLabelTop\n               ? \"<div style='min-height: 38px'>#display#</div>\"\n               : \"<div class='ab-detail-component-holder'>#display#</div>\",\n            data: { display: \"\" }, // show empty data in template\n         },\n         uiDetailItemComponent\n      );\n      // height = 0 behaves a bit differently then autoheight here.\n      if (!valueUi.height || valueUi.height == 0) {\n         delete valueUi.height;\n         valueUi.autoheight = true;\n      }\n      group.push(valueUi);\n      const itemUi = {};\n      settings.labelPosition == \"top\"\n         ? (itemUi.rows = group)\n         : (itemUi.cols = group);\n      const _ui = super.ui([itemUi]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // async init(AB) {\n   //    await super.init(AB);\n   // }\n\n   setValue(val, detailId) {\n      const $detailItem = $$(detailId ?? this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const field = this.view.field();\n\n      switch (field?.key) {\n         case \"string\":\n         case \"LongText\": {\n            const strVal = val\n               // Sanitize all of HTML tags\n               .replace(/[<]/gm, \"&lt;\")\n               // Allow safe HTML tags\n               .replace(\n                  new RegExp(`(&lt;(/)?(${SAFE_HTML_TAGS.join(\"|\")}))`, \"gm\"),\n                  \"<$2$3\"\n               );\n\n            $detailItem.setValues({ display: strVal });\n            break;\n         }\n         default:\n            $detailItem.setValues({ display: val });\n            break;\n      }\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailTextComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailText_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const field = this.view.field();\n      const _ui = {\n         css: \"ab-text\",\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail text ${field?.columnName} ${field?.id} ${\n                  this.view.parentDetailComponent()?.id || this.view.parent.id\n               }`;\n\n               $$(this.ids.component)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      };\n      const settings = this.settings;\n\n      if (settings.height) _ui.height = settings.height;\n\n      return super.ui(_ui);\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailTreeComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailTree_${baseView.id}`, ids);\n   }\n\n   get className() {\n      return \"ab-detail-tree\";\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      // add div of tree to detail\n      this.setValue(`<div class=\"${this.className}\"></div>`);\n   }\n\n   getDomTree() {\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      return $detailItem.$view.getElementsByClassName(this.className)[0];\n   }\n\n   setValue(val) {\n      // convert value to array\n      const vals = [];\n\n      if (val && !Array.isArray(val)) vals.push(val);\n\n      setTimeout(() => {\n         // get tree dom\n         const domTree = this.getDomTree();\n\n         if (!domTree) return false;\n\n         const field = this.view.field();\n         const branches = [];\n\n         if (typeof field.settings.options.data === \"undefined\")\n            field.settings.options = new this.AB.Webix.TreeCollection({\n               data: field.settings.options,\n            });\n\n         field.settings.options.data.each(function (obj) {\n            if (vals.indexOf(obj.id) !== -1) {\n               let html = \"\";\n               let rootid = obj.id;\n\n               while (this.getParentId(rootid)) {\n                  field.settings.options.data.each(function (par) {\n                     if (\n                        field.settings.options.data.getParentId(rootid) ===\n                        par.id\n                     ) {\n                        html = `${par.text}: ${html}`;\n                     }\n                  });\n\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n\n         let nodeHTML = \"<div class='list-data-values'>\";\n\n         branches.forEach(function (item) {\n            nodeHTML += `<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color: ${myHex} !important;\">${item}</span>`;\n         });\n\n         nodeHTML += \"</div>\";\n         domTree.innerHTML = nodeHTML;\n\n         let height = 33;\n\n         if (domTree.scrollHeight > 33) height = domTree.scrollHeight;\n\n         const $detailItem = $$(this.ids.detailItem);\n\n         $detailItem.config.height = height;\n         $detailItem.resize();\n      }, 50);\n   }\n};\n","const Docxtemplater = require(\"../../../../js/docxtemplater.v3.0.12.min.js\");\nconst ImageModule = require(\"../../../../js/docxtemplater-image-module.v3.0.2.min.js\");\nconst JSZipUtils = require(\"jszip-utils/dist/jszip-utils.min.js\");\nconst JSZip = require(\"../../../../js/jszip.min.js\");\nconst sizeOf = require(\"image-size\");\n\nconst ABFieldConnect = require(\"../../dataFields/ABFieldConnect\");\nconst ABFieldImage = require(\"../../dataFields/ABFieldImage\");\nconst ABObjectQuery = require(\"../../ABObjectQuery\");\n\nconst ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewDocxBuilderComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDocxBuilder_${baseView.id}`,\n         Object.assign(\n            {\n               downloadButton: \"\",\n               noFileLabel: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const settings = this.settings;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const buttonWidth = settings.width ?? defaultSettings.width;\n\n      let autowidth = false;\n\n      if (buttonWidth === 0) autowidth = true;\n\n      let leftSpacer = {\n         type: \"spacer\",\n         width: 1,\n      };\n      let rightSpacer = {\n         type: \"spacer\",\n         width: 1,\n      };\n\n      switch (settings.buttonPosition ?? defaultSettings.buttonPosition) {\n         case \"left\":\n            break;\n         case \"center\":\n            leftSpacer = {\n               type: \"spacer\",\n            };\n            rightSpacer = {\n               type: \"spacer\",\n            };\n            break;\n         case \"right\":\n            leftSpacer = {\n               type: \"spacer\",\n            };\n            break;\n      }\n\n      const buttonLabelText =\n         baseView.buttonlabel ||\n         settings.buttonlabel ||\n         defaultSettings.buttonlabel; // Use || to check empty string \"\"\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            view: \"toolbar\",\n            css:\n               settings.toolbarBackground ?? defaultSettings.toolbarBackground,\n            cols: [\n               leftSpacer,\n               {\n                  id: ids.downloadButton,\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-file-word-o\",\n                  label: buttonLabelText,\n                  width: settings.width || defaultSettings.width,\n                  autowidth: autowidth,\n                  click: () => {\n                     this.renderFile();\n                  },\n                  on: {\n                     // Add data-cy attribute for cypress tests\n                     onAfterRender: () => {\n                        const name = baseView.name?.replace(\".docxBuilder\", \"\");\n                        const dataCy = `docx download ${name} ${baseView.id}`;\n                        $$(ids.downloadButton)\n                           ?.$view.querySelector(\"button\")\n                           .setAttribute(\"data-cy\", dataCy);\n                     },\n                  },\n               },\n               {\n                  id: ids.noFileLabel,\n                  view: \"label\",\n                  label: this.label(\"No template file\"),\n               },\n               {\n                  type: \"spacer\",\n               },\n               rightSpacer,\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n      const $downloadButton = $$(ids.downloadButton);\n      const $noFileLabel = $$(ids.noFileLabel);\n\n      if (this.view.settings.filename) {\n         $downloadButton.show();\n         $noFileLabel.hide();\n      } else {\n         $downloadButton.hide();\n         $noFileLabel.show();\n      }\n   }\n\n   async onShow() {\n      super.onShow();\n\n      const tasks = [];\n\n      this.view.datacollections.forEach((dc) => {\n         if (dc.dataStatus === dc.dataStatusFlag.notInitial)\n            // load data when a widget is showing\n            tasks.push(dc.loadData());\n      });\n\n      // Show loading cursor\n      if (tasks.length > 0) this.busy();\n\n      await Promise.all(tasks);\n\n      // Hide loading cursor\n      this.ready();\n   }\n\n   busy() {\n      const $downloadButton = $$(this.ids.downloadButton);\n\n      if (!$downloadButton) return;\n\n      $downloadButton.disable();\n      $downloadButton.define(\"icon\", \"fa fa-refresh fa-spin\");\n      $downloadButton.refresh();\n   }\n\n   ready() {\n      const $downloadButton = $$(this.ids.downloadButton);\n\n      if (!$downloadButton) return;\n\n      $downloadButton.enable();\n      $downloadButton.define(\"icon\", \"fa fa-file-word-o\");\n      $downloadButton.refresh();\n   }\n\n   async renderFile() {\n      this.busy();\n\n      const reportValues = await this.getReportData();\n\n      // console.log(\"DOCX data: \", reportValues);\n\n      // Download images\n      const images = await this.downloadImages(reportValues);\n\n      // Download the template file\n      const contentTemplateFile = await this.downloadTemplateFile();\n\n      // Generate Docx file\n      const blobFile = this.generateDocxFile(\n         contentTemplateFile,\n         reportValues,\n         images\n      );\n\n      const baseView = this.view;\n\n      // Let user download the output file\n      baseView.letUserDownload(blobFile, baseView.filelabel);\n\n      // Final step\n      this.ready();\n   }\n\n   async getReportData() {\n      const result = {};\n      const tasks = [];\n\n      // Get current cursor\n      const datacollections = this.view.datacollections;\n      const isDcLabelAdded = datacollections.length > 1;\n\n      datacollections\n         .filter((dc) => dc?.datasource)\n         .forEach(async (dc) => {\n            tasks.push(\n               new Promise((resolve, reject) => {\n                  const obj = dc.datasource;\n                  const objModel = obj.model();\n                  const dcCursor = dc.getCursor();\n                  const dcValues = [];\n\n                  // pull the defined sort values\n                  let sorts = dc.settings.objectWorkspace.sortFields || [];\n\n                  // pull filter conditions\n                  let wheres = this.AB.cloneDeep(\n                     dc.settings.objectWorkspace.filterConditions ?? {}\n                  );\n                  // if there is a selected cursor set the filter here\n                  if (dcCursor) {\n                     // if there is a selected cursor set the filter here\n                     wheres = {\n                        glue: \"and\",\n                        rules: [\n                           {\n                              key: obj.PK(),\n                              rule: \"equals\",\n                              value: dcCursor[obj.PK()],\n                           },\n                        ],\n                     };\n                  } else if (dc.__reloadWheres) {\n                     // if we pass new wheres with a reload use them instead\n                     wheres = dc.__reloadWheres;\n                  }\n                  wheres.glue = wheres.glue || \"and\";\n                  wheres.rules = wheres.rules || [];\n\n                  const __additionalWheres = {\n                     glue: \"and\",\n                     rules: [],\n                  };\n\n                  // add the filterCond from user filters if there are rules to add\n                  if (dc?.__filterCond?.rules?.length > 0) {\n                     __additionalWheres.rules.push(dc?.__filterCond);\n                  }\n\n                  // Filter by a selected cursor of a link DC\n                  let linkRule = dc.ruleLinkedData();\n                  if (!dc.settings.loadAll && linkRule) {\n                     __additionalWheres.rules.push(linkRule);\n                  }\n                  // pull data rows following the follow data collection\n                  else if (dc.datacollectionFollow) {\n                     const followCursor = dc.datacollectionFollow.getCursor();\n                     // store the PK as a variable\n                     let PK = dc.datasource.PK();\n                     // if the datacollection we are following is a query\n                     // add \"BASE_OBJECT.\" to the PK so we can select the\n                     // right value to report the cursor change to\n                     if (dc.datacollectionFollow.settings.isQuery) {\n                        PK = \"BASE_OBJECT.\" + PK;\n                     }\n                     if (followCursor) {\n                        wheres = {\n                           glue: \"and\",\n                           rules: [\n                              {\n                                 key: dc.datasource.PK(),\n                                 rule: \"equals\",\n                                 value: followCursor[PK],\n                              },\n                           ],\n                        };\n                     }\n                     // Set no return rows\n                     else {\n                        wheres = {\n                           glue: \"and\",\n                           rules: [\n                              {\n                                 key: this.datasource.PK(),\n                                 rule: \"equals\",\n                                 value: \"NO RESULT ROW\",\n                              },\n                           ],\n                        };\n                     }\n                  }\n\n                  // Combine setting & program filters\n                  if (__additionalWheres.rules.length) {\n                     if (wheres.rules.length) {\n                        __additionalWheres.rules.unshift(wheres);\n                     }\n                     wheres = __additionalWheres;\n                  }\n\n                  // remove any null in the .rules\n                  // if (wheres?.rules?.filter) wheres.rules = wheres.rules.filter((r) => r);\n                  wheres = obj.whereCleanUp(wheres);\n\n                  // Pull data that have full relation values.\n                  // NOTE: When get data from DataCollection, those data is pruned.\n                  objModel\n                     .findAll({\n                        where: wheres || {},\n                        skip: 0,\n                        sort: sorts,\n                        populate: true,\n                     })\n                     .then((dataList) => {\n                        // update property names to column labels to match format names in docx file\n                        const mlFields = obj.multilingualFields();\n\n                        dataList?.data.forEach((data) => {\n                           let resultData;\n\n                           // For support label of columns every languages\n                           obj.fields().forEach((f) => {\n                              const fieldLabels = [];\n\n                              // Query Objects\n                              if (obj instanceof ABObjectQuery) {\n                                 if (typeof f.object.translations === \"string\")\n                                    f.object.translations = JSON.parse(\n                                       f.object.translations\n                                    );\n\n                                 if (typeof f.translations === \"string\")\n                                    f.translations = JSON.parse(f.translations);\n\n                                 (f.object.translations || []).forEach(\n                                    (objTran) => {\n                                       const fieldTran = (\n                                          f.translations || []\n                                       ).filter(\n                                          (fieldTran) =>\n                                             fieldTran.language_code ===\n                                             objTran.language_code\n                                       )[0];\n\n                                       if (!fieldTran) return;\n\n                                       const objectLabel = objTran.label;\n                                       const fieldLabel = fieldTran.label;\n\n                                       // Replace alias with label of object\n                                       fieldLabels.push(\n                                          `${objectLabel}.${fieldLabel}`\n                                       );\n                                    }\n                                 );\n                              }\n                              // Normal Objects\n                              else if (typeof f.translations === \"string\")\n                                 f.translations = JSON.parse(f.translations);\n\n                              f.translations.forEach((tran) => {\n                                 fieldLabels.push(tran.label);\n                              });\n\n                              resultData = Object.assign(\n                                 resultData ?? {},\n                                 this.setReportValues(\n                                    data,\n                                    f,\n                                    fieldLabels,\n                                    mlFields\n                                 ) ?? {}\n                              );\n\n                              // Keep ABObject into .scope of DOCX templater\n                              resultData._object = obj;\n                           });\n\n                           dcValues.push(resultData);\n                        });\n\n                        // If data sources have more than 1 or the result data more than 1 items, then add label of data source\n                        const datacollectionData =\n                           dcValues.length > 1 ? dcValues : dcValues[0];\n\n                        if (\n                           isDcLabelAdded ||\n                           (Array.isArray(datacollectionData) &&\n                              datacollectionData.length > 1)\n                        )\n                           (dc.translations || []).forEach((tran) => {\n                              result[tran.label] = datacollectionData;\n                           });\n                        else Object.assign(result, datacollectionData);\n\n                        resolve();\n                     });\n               })\n            );\n         });\n\n      await Promise.all(tasks);\n\n      return result;\n   }\n\n   setReportValues(data, field, fieldLabels = [], multilinguageFields) {\n      const result = {};\n\n      let val = null;\n\n      result.id = data.id;\n      result[`${field.columnName}_ORIGIN`] = data[field.columnName]; // Keep origin value for compare value with custom index\n\n      const baseView = this.view;\n\n      // Translate multilinguage fields\n      if (multilinguageFields.length) {\n         const transFields = (multilinguageFields || []).filter(\n            (fieldName) => data[fieldName] != null\n         );\n\n         baseView.translate(data, data, transFields, baseView.languageCode);\n      }\n\n      // Pull value\n      if (field instanceof ABFieldConnect) {\n         // If field is connected field, then\n         // {\n         //    fieldName: {Object} or [Array]\n         // }\n         val = data[this.AB.rules.toFieldRelationFormat(field.columnName)];\n\n         if (val?.forEach)\n            val.forEach((v) => {\n               if (!v) return;\n\n               // Sentry Fix: sometimes v is just the uuid\n               // Q: what should we do in this case?\n               if (typeof v == \"string\") return;\n\n               // format relation data\n               if (field.datasourceLink) {\n                  field.datasourceLink\n                     .fields((f) => !f.isConnection)\n                     .forEach((f) => {\n                        v[`${f.columnName}_ORIGIN`] = v[f.columnName];\n\n                        v[f.columnName] = f.format(v, {\n                           languageCode: baseView.languageCode,\n                        });\n                     });\n               }\n\n               // Keep ABObject to relation data\n               if (v && typeof v === \"object\") v._object = field.datasourceLink;\n            });\n\n         // TODO\n         // data[label + '_label'] = field.format(baseData);\n      } else\n         val = field.format(data, {\n            languageCode: baseView.languageCode,\n         });\n\n      // Set value to report with every languages of label\n      fieldLabels.forEach((label) => {\n         if (val) result[label] = val;\n         else if (!result[label]) result[label] = \"\";\n      });\n\n      // normalize child items\n      if (data.data?.length) {\n         result.data = result.data || [];\n\n         (data.data || []).forEach((childItem, index) => {\n            // add new data item\n            result.data[index] = this.setReportValues(\n               childItem,\n               field,\n               fieldLabels,\n               multilinguageFields\n            );\n         });\n      }\n\n      return result;\n   }\n\n   async downloadImages(reportValues) {\n      const images = {};\n      const tasks = [];\n      const addDownloadTask = (fieldImage, data = []) => {\n         if (Array.isArray(data) == false) {\n            data = [data];\n         }\n         data.forEach((d) => {\n            const imageVal = fieldImage.format(d);\n\n            if (imageVal && !images[imageVal]) {\n               tasks.push(\n                  new Promise((resolve, reject) => {\n                     const imgUrl = fieldImage.urlImage(imageVal); // `/opsportal/image/${this.application.name}/${imageVal}`;\n\n                     JSZipUtils.getBinaryContent(imgUrl, (error, content) => {\n                        if (error) return reject(error);\n\n                        // store binary of image\n                        images[imageVal] = content;\n\n                        resolve();\n                     });\n                  })\n               );\n            }\n\n            // download images of child items\n            addDownloadTask(fieldImage, d.data || []);\n         });\n      };\n\n      this.view.datacollections\n         .filter((dc) => dc?.datasource)\n         .forEach((dc) => {\n            const obj = dc.datasource;\n\n            // let currCursor = dc.getCursor();\n\n            // if (currCursor) {\n            //    // Current cursor\n            //    const treeCursor = dc.getCursor(true);\n\n            //    currCursor = [this.AB.merge({}, currCursor, treeCursor)];\n            // } // List of data\n            // else currCursor = dc.getData();\n\n            obj.fields((f) => f instanceof ABFieldImage).forEach((f) => {\n               addDownloadTask(f, reportValues[dc.label] || [reportValues]);\n            });\n         });\n\n      await Promise.all(tasks);\n\n      return images;\n   }\n\n   downloadTemplateFile() {\n      const url = this.view.downloadUrl();\n\n      return new Promise((resolve, reject) => {\n         JSZipUtils.getBinaryContent(url, (error, content) => {\n            if (error) return reject(error);\n\n            resolve(content);\n         });\n      });\n   }\n\n   generateDocxFile(contentFile, data, images) {\n      const summaries = {}; // { varName: sum number, ..., varName2: number2 }\n      const zip = new JSZip(contentFile);\n      const doc = new Docxtemplater();\n      const imageModule = new ImageModule({\n         centered: false,\n         getImage: (tagValue, tagName) => {\n            // NOTE: .getImage of version 3.0.2 does not support async\n            //       we can buy newer version to support it\n            //       https://docxtemplater.com/modules/image/\n\n            return images[tagValue] || \"\";\n         },\n         getSize: (imgBuffer, tagValue, tagName) => {\n            const defaultVal = [300, 160];\n            const baseView = this.view;\n            const dc = baseView.datacollection;\n\n            if (!dc) {\n               const dcs = baseView.datacollections;\n\n               if (dcs) {\n                  dcs.forEach((dc) => {\n                     let obj = dc.datasource;\n\n                     if (!obj) return false;\n\n                     // This is a query object\n                     if (tagName.indexOf(\".\") > -1) {\n                        let tagNames = tagName.split(\".\");\n\n                        if (!obj.objects) return false; // not a query\n\n                        obj = obj.objects((o) => o.label === tagNames[0])[0]; // Label of object\n\n                        if (!obj) return false;\n\n                        tagName = tagNames[1]; // Field name\n                     }\n\n                     const imageField = obj.fields(\n                        (f) => f.columnName === tagName\n                     )[0];\n\n                     if (!imageField?.settings) return false;\n\n                     if (\n                        imageField.settings.useWidth &&\n                        imageField.settings.imageWidth\n                     )\n                        defaultVal[0] = imageField.settings.imageWidth;\n\n                     if (\n                        imageField.settings.useHeight &&\n                        imageField.settings.imageHeight\n                     )\n                        defaultVal[1] = imageField.settings.imageHeight;\n\n                     return false;\n                  });\n               }\n            } else {\n               let obj = dc.datasource;\n\n               if (!obj) return defaultVal;\n\n               // This is a query object\n               if (tagName.indexOf(\".\") > -1) {\n                  const tagNames = tagName.split(\".\");\n\n                  obj = obj.objects((o) => o.label === tagNames[0])[0]; // Label of object\n\n                  if (!obj) return defaultVal;\n\n                  tagName = tagNames[1]; // Field name\n               }\n\n               const imageField = obj.fields(\n                  (f) => f.columnName === tagName\n               )[0];\n\n               if (!imageField?.settings) return defaultVal;\n\n               if (\n                  imageField.settings.useWidth &&\n                  imageField.settings.imageWidth\n               )\n                  defaultVal[0] = imageField.settings.imageWidth;\n\n               if (\n                  imageField.settings.useHeight &&\n                  imageField.settings.imageHeight\n               )\n                  defaultVal[1] = imageField.settings.imageHeight;\n            }\n            // Find aspect ratio image dimensions\n            try {\n               var img = new Uint8Array(imgBuffer);\n               var image = sizeOf(img);\n               var ratio = Math.min(\n                  defaultVal[0] / image.width,\n                  defaultVal[1] / image.height\n               );\n\n               return [image.width * ratio, image.height * ratio];\n            } catch (err) {\n               // if invalid image, then should return 0, 0 sizes\n               return defaultVal;\n            }\n         },\n         // getSize: function (imgBuffer, tagValue, tagName) {\n         //    if (imgBuffer) {\n         //       var maxWidth = 300;\n         //       var maxHeight = 160;\n\n         //       // Find aspect ratio image dimensions\n         //       try {\n         //          var image = sizeOf(imgBuffer);\n         //          var ratio = Math.min(maxWidth / image.width, maxHeight / image.height);\n\n         //          return [image.width * ratio, image.height * ratio];\n         //       }\n         //       // if invalid image, then should return 0, 0 sizes\n         //       catch (err) {\n         //          return [0, 0];\n         //       }\n\n         //    }\n         //    else {\n         //       return [0, 0];\n         //    }\n         // }\n      });\n\n      try {\n         doc.attachModule(imageModule)\n            .loadZip(zip)\n            .setData(data)\n            .setOptions({\n               parser: function (tag) {\n                  return {\n                     get: function (scope, context) {\n                        // NOTE: AppBuilder custom filter : no return empty items\n                        if (tag.indexOf(\"data|\") === 0) {\n                           const prop = (tag.split(\"|\")[1] || \"\").trim();\n\n                           return (scope[\"data\"] || []).filter(function (item) {\n                              return item[prop] ? true : false;\n                           });\n                        }\n                        // Mark number to add to a variable\n                        else if (tag.indexOf(\"|$sum?\") > -1) {\n                           const prop = tag.split(\"|$sum?\")[0];\n                           const varName = tag.split(\"|$sum?\")[1];\n\n                           let number = scope[prop];\n\n                           if (typeof number === \"string\")\n                              number = number.replace(\n                                 /[^\\d.]/g, // return only number and dot\n                                 \"\"\n                              );\n\n                           if (!summaries[varName]) summaries[varName] = 0.0;\n\n                           summaries[varName] += parseFloat(number);\n\n                           return scope[prop];\n                        }\n                        // Show sum value ^\n                        else if (tag.indexOf(\"$sum?\") === 0) {\n                           const varName = tag.replace(\"$sum?\", \"\");\n\n                           return summaries[varName] || 0;\n                        }\n                        // // Sum number of .data (Grouped query)\n                        // else if (tag.indexOf(\"$sum|\") === 0) {\n                        //    const prop = (\n                        //       tag.split(\"|\")[1] || \"\"\n                        //    ).trim();\n\n                        //    let sum = 0;\n                        //    (scope[\"data\"] || []).forEach(\n                        //       (childItem) => {\n                        //          if (!childItem[prop]) return;\n\n                        //          let number = childItem[prop];\n                        //          if (typeof number === \"string\") {\n                        //             number = number.replace(\n                        //                /[^\\d.]/g, // return only number and dot\n                        //                \"\"\n                        //             );\n                        //          }\n\n                        //          try {\n                        //             sum += parseFloat(\n                        //                number || 0\n                        //             );\n                        //          } catch (e) {}\n                        //       }\n                        //    );\n\n                        //    // Print number with commas\n                        //    if (sum) {\n                        //       sum = sum\n                        //          .toString()\n                        //          .replace(\n                        //             /\\B(?=(\\d{3})+(?!\\d))/g,\n                        //             \",\"\n                        //          );\n                        //    }\n\n                        //    return sum;\n                        // }\n                        // NOTE: AppBuilder custom filter of another data source\n                        else if (tag.indexOf(\"$\") === 0) {\n                           const props = tag.replace(\"$\", \"\").split(\"|\");\n                           const propSource = props[0].trim();\n                           const propFilter = props[1].trim(); // column name of ABFieldConnect\n\n                           if (!propSource || !propFilter) return \"\";\n\n                           // Pull Index field of connect field\n                           let indexColName;\n\n                           const obj = scope._object;\n\n                           if (obj) {\n                              const connectedField = obj.fields(\n                                 (f) => f.columnName === propFilter\n                              )[0];\n\n                              if (connectedField) {\n                                 const indexField = connectedField.indexField;\n\n                                 indexColName = indexField\n                                    ? indexField.columnName\n                                    : null;\n                              }\n                           }\n\n                           let sourceVals = data[propSource];\n\n                           if (sourceVals && !Array.isArray(sourceVals))\n                              sourceVals = [sourceVals];\n\n                           const getVal = (data) =>\n                              data[`${indexColName}_ORIGIN`] || // Pull origin data to compare by custom index\n                              data[indexColName] ||\n                              data.id ||\n                              data;\n\n                           return (sourceVals || []).filter(function (item) {\n                              // Pull data of parent to compare\n                              let comparer = scope[propFilter];\n\n                              if (Array.isArray(comparer))\n                                 return (\n                                    comparer.filter(\n                                       (c) => getVal(c) === getVal(item)\n                                    ).length > 0\n                                 );\n                              else return getVal(item) === getVal(comparer);\n                           });\n                        }\n                        // ์NOTE : Custom filter\n                        else if (tag.indexOf(\"?\") > -1) {\n                           const result = scope;\n                           const prop = tag.split(\"?\")[0];\n                           const condition = tag.split(\"?\")[1];\n\n                           if (prop && condition) {\n                              let data = scope[prop];\n\n                              if (data) {\n                                 if (!Array.isArray(data)) data = [data];\n\n                                 return data.filter((d) =>\n                                    eval(condition.replace(/\\./g, \"d.\"))\n                                 );\n                              }\n                           }\n                           return result;\n                        } else if (tag === \".\") return scope;\n                        else return scope[tag];\n                     },\n                  };\n               },\n            })\n            .render(); // render the document\n      } catch (error) {\n         return error;\n      }\n\n      // Output the document using Data-URI\n      const docxFile = doc.getZip().generate({\n         type: \"blob\",\n         mimeType:\n            \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n      });\n\n      return docxFile;\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormButton extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormButton_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const self = this;\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const settings = baseView.settings ?? {};\n\n      const alignment =\n         settings.alignment || baseView.constructor.defaultValues().alignment;\n\n      const _ui = {\n         cols: [],\n      };\n\n      // spacer\n      if (alignment === \"center\" || alignment === \"right\") {\n         _ui.cols.push({});\n      }\n\n      // delete button\n      if (settings.includeDelete) {\n         _ui.cols.push(\n            {\n               view: \"button\",\n               autowidth: true,\n               value: settings.deleteLabel || this.label(\"Delete\"),\n               css: \"webix_danger\",\n               click: function () {\n                  self.onDelete(this);\n               },\n               on: {\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `button delete ${form.id}`\n                     );\n                  },\n               },\n            },\n            {\n               width: 10,\n            }\n         );\n      }\n\n      // cancel button\n      if (settings.includeCancel) {\n         _ui.cols.push(\n            {\n               view: \"button\",\n               autowidth: true,\n               value: settings.cancelLabel || this.label(\"Cancel\"),\n               click: function () {\n                  self.onCancel(this);\n               },\n               on: {\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `button cancel ${form.id}`\n                     );\n                  },\n               },\n            },\n            {\n               width: 10,\n            }\n         );\n      }\n\n      // reset button\n      if (settings.includeReset) {\n         _ui.cols.push(\n            {\n               view: \"button\",\n               autowidth: true,\n               value: settings.resetLabel || this.label(\"Reset\"),\n               click: function () {\n                  self.onClear(this);\n               },\n               on: {\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `button reset ${form.id}`\n                     );\n                  },\n               },\n            },\n            {\n               width: 10,\n            }\n         );\n      }\n\n      // save button\n      if (settings.includeSave) {\n         _ui.cols.push({\n            view: \"button\",\n            type: \"form\",\n            css: \"webix_primary\",\n            autowidth: true,\n            value: settings.saveLabel || this.label(\"Save\"),\n            click: function () {\n               self.onSave(this);\n            },\n            on: {\n               onAfterRender: function () {\n                  this.getInputNode().setAttribute(\n                     \"data-cy\",\n                     `button save ${form.id}`\n                  );\n               },\n            },\n         });\n      }\n\n      // spacer\n      if (alignment === \"center\" || alignment === \"left\") _ui.cols.push({});\n\n      return super.ui(_ui);\n   }\n\n   onCancel(cancelButton) {\n      const baseView = this.view;\n      const settings = baseView.settings ?? {};\n\n      // get form component\n      const form = baseView.parentFormComponent();\n\n      // get ABDatacollection\n      const dc = form.datacollection;\n\n      // clear cursor of DC if not set to follow another\n      if (!dc?.isCursorFollow) {\n         dc?.setCursor(null);\n      }\n      // dc?.setStaticCursor(); // unless it should be static\n\n      cancelButton?.getFormView?.().clear();\n\n      if (settings.afterCancel) form.changePage(settings.afterCancel);\n      // If the redirect page is not defined, then redirect to parent page\n      else {\n         const noPopupFilter = (p) => p.settings && p.settings.type != \"popup\";\n\n         const pageCurr = this.view.pageParent();\n         if (pageCurr) {\n            const pageParent = pageCurr.pageParent(noPopupFilter) ?? pageCurr;\n\n            if (pageParent) form.changePage(pageParent.id);\n         }\n      }\n   }\n\n   onClear(resetButton) {\n      // get form component\n      const form = this.view.parentFormComponent();\n\n      // get ABDatacollection\n      const dc = form.datacollection;\n\n      // clear cursor of DC\n      if (dc) {\n         dc.setCursor(null);\n      }\n\n      resetButton?.getFormView?.().clear();\n   }\n\n   onSave(saveButton) {\n      if (!saveButton) {\n         console.error(\"Require the button element\");\n         return;\n      }\n      // get form component\n      const form = this.view.parentFormComponent();\n      const formView = saveButton.getFormView();\n\n      // disable the save button\n      saveButton.disable?.();\n\n      // save data\n      form\n         .saveData(formView)\n         .then(() => {\n            saveButton.enable?.();\n\n            //Focus on first focusable component\n            form.focusOnFirst();\n         })\n         .catch((err) => {\n            console.error(err);\n            // Catch uncaught error reported in Sentry and add context\n            // APPBUILDER-WEB-1A3(https://appdev-designs.sentry.io/issues/4631880265/)\n            try {\n               saveButton.enable?.();\n            } catch (e) {\n               this.AB.notify.developer(e, {\n                  context:\n                     \"formButton.onSave > catch err > saveButton.enable()\",\n                  buttonID: this?.view?.id,\n                  formID: this?.view?.parent?.id,\n               });\n            }\n         });\n   }\n\n   onDelete(deleteButton) {\n      this.AB.Webix.confirm({\n         title: this.label(\"Delete data\"),\n         text: this.label(\"Do you want to delete this data?\"),\n         callback: async (confirm) => {\n            if (!confirm) return;\n\n            deleteButton.disable?.();\n\n            try {\n               // get form component\n               const form = this.view.parentFormComponent();\n               const $formView = deleteButton.getFormView();\n\n               // delete a record row\n               await form.deleteData($formView);\n            } catch (err) {\n               console.error(err);\n            } finally {\n               deleteButton.enable?.();\n            }\n         },\n      });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormCheckboxComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormCheckbox_${baseView.id}`, ids);\n   }\n\n   ui() {\n      return super.ui({\n         view: \"checkbox\",\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABViewFormItem = require(\"../ABViewFormItem\");\nconst ABViewFormConnect = require(\"../ABViewFormConnect\");\nconst ABViewFormCustom = require(\"../ABViewFormCustom\");\nconst ABViewFormTextbox = require(\"../ABViewFormTextbox\");\nconst ABViewFormJson = require(\"../ABViewFormJson\");\n\nasync function timeout(ms) {\n   return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nconst fieldValidations = [];\n\nmodule.exports = class ABViewFormComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewForm_${baseView.id}`,\n         Object.assign(\n            {\n               form: \"\",\n\n               layout: \"\",\n               filterComplex: \"\",\n            },\n            ids\n         )\n      );\n\n      this.timerId = null;\n      this._showed = false;\n   }\n\n   ui() {\n      const baseView = this.view;\n      const superComponent = baseView.superComponent();\n      const rows = superComponent.ui().rows ?? [];\n      const fieldValidationsHolder = this.uiValidationHolder();\n      const _ui = super.ui([\n         {\n            id: this.ids.form,\n            view: \"form\",\n            abid: baseView.id,\n            rows: rows.concat(fieldValidationsHolder),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiValidationHolder() {\n      const result = [\n         {\n            hidden: true,\n            rows: [],\n         },\n      ];\n\n      // NOTE: this._currentObject can be set in the KanBan Side Panel\n      const baseView = this.view;\n      const object = this.datacollection?.datasource ?? baseView._currentObject;\n\n      if (!object) return result;\n\n      const validationUI = [];\n      const existsFields = baseView.fieldComponents();\n\n      object\n         // Pull fields that have validation rules\n         .fields((f) => f?.settings?.validationRules)\n         .forEach((f) => {\n            const view = existsFields.find(\n               (com) => f.id === com.settings.fieldId\n            );\n            if (!view) return;\n\n            // parse the rules because they were stored as a string\n            // check if rules are still a string...if so lets parse them\n            if (typeof f.settings.validationRules === \"string\") {\n               f.settings.validationRules = JSON.parse(\n                  f.settings.validationRules\n               );\n            }\n\n            // there could be more than one so lets loop through and build the UI\n            f.settings.validationRules.forEach((rule, indx) => {\n               const Filter = this.AB.filterComplexNew(\n                  `${f.columnName}_${indx}`\n               );\n               // add the new ui to an array so we can add them all at the same time\n               if (typeof Filter.ui === \"function\") {\n                  validationUI.push(Filter.ui());\n               } else {\n                  // Legacy v1 method:\n                  validationUI.push(Filter.ui);\n               }\n\n               // store the filter's info so we can assign values and settings after the ui is rendered\n               fieldValidations.push({\n                  filter: Filter,\n                  view: Filter.ids.querybuilder,\n                  columnName: f.columnName,\n                  validationRules: rule.rules,\n                  invalidMessage: rule.invalidMessage,\n               });\n            });\n         });\n\n      result.rows = validationUI;\n\n      return result;\n   }\n\n   async init(AB, accessLevel, options = {}) {\n      await super.init(AB);\n\n      this.view.superComponent().init(AB, accessLevel, options);\n\n      this.initCallbacks(options);\n      this.initEvents();\n      this.initValidationRules();\n\n      const abWebix = this.AB.Webix;\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         abWebix.extend($form, abWebix.ProgressBar);\n      }\n\n      if (accessLevel < 2) $form.disable();\n   }\n\n   initCallbacks(options = {}) {\n      // ? We need to determine from these options whether to clear on load?\n      if (options?.clearOnLoad) {\n         // does this need to be a function?\n         this.view.settings.clearOnLoad = options.clearOnLoad();\n      }\n      // Q: Should we use emit the event instead ?\n      const baseView = this.view;\n\n      if (options.onBeforeSaveData)\n         baseView._callbacks.onBeforeSaveData = options.onBeforeSaveData;\n      else baseView._callbacks.onBeforeSaveData = () => true;\n   }\n\n   initEvents() {\n      // bind a data collection to form component\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      // listen DC events\n      [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n         this.eventAdd({\n            emitter: dc,\n            eventName: key,\n            listener: (rowData) => {\n               const baseView = this.view;\n               const linkViaOneConnection = baseView.fieldComponents(\n                  (comp) => comp instanceof ABViewFormConnect\n               );\n               // clear previous xxx->one selections and add new from\n               // cursor change\n               linkViaOneConnection.forEach((f) => {\n                  const field = f.field();\n                  if (\n                     field?.settings?.linkViaType == \"one\" &&\n                     field?.linkViaOneValues\n                  ) {\n                     delete field.linkViaOneValues;\n                     const relationVals =\n                        rowData?.[field.relationName()] ??\n                        rowData?.[field.columnName];\n                     if (relationVals) {\n                        if (Array.isArray(relationVals)) {\n                           const valArray = [];\n                           relationVals.forEach((v) => {\n                              valArray.push(\n                                 field.getRelationValue(v, { forUpdate: true })\n                              );\n                           });\n                           field.linkViaOneValues = valArray.join(\",\");\n                        } else {\n                           field.linkViaOneValues = field.getRelationValue(\n                              relationVals,\n                              { forUpdate: true }\n                           );\n                        }\n                     }\n                  }\n               });\n\n               this.displayData(rowData);\n            },\n         });\n      });\n\n      const ids = this.ids;\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"initializingData\",\n         listener: () => {\n            const $form = $$(ids.form);\n\n            if ($form) {\n               $form.disable();\n\n               $form.showProgress?.({ type: \"icon\" });\n            }\n         },\n      });\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"initializedData\",\n         listener: () => {\n            const $form = $$(ids.form);\n\n            if ($form) {\n               $form.enable();\n\n               $form.hideProgress?.();\n            }\n         },\n      });\n\n      // I think this case is currently handled by the DC.[changeCursor, cursorStale]\n      // events:\n      // this.eventAdd({\n      //    emitter: dc,\n      //    eventName: \"ab.datacollection.update\",\n      //    listener: (msg, data) => {\n      //       if (!data?.objectId) return;\n\n      //       const object = dc.datasource;\n\n      //       if (!object) return;\n\n      //       if (\n      //          object.id === data.objectId ||\n      //          object.fields((f) => f.settings.linkObject === data.objectId)\n      //             .length > 0\n      //       ) {\n      //          const currData = dc.getCursor();\n\n      //          if (currData) this.displayData(currData);\n      //       }\n      //    },\n      // });\n\n      // bind the cursor event of the parent DC\n      const linkDv = dc.datacollectionLink;\n\n      if (linkDv)\n         // update the value of link field when data of the parent dc is changed\n         [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n            this.eventAdd({\n               emitter: linkDv,\n               eventName: key,\n               listener: (rowData) => {\n                  this.displayParentData(rowData);\n               },\n            });\n         });\n   }\n\n   initValidationRules() {\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      if (!fieldValidations.length) return;\n\n      // we need to store the rules for use later so lets build a container array\n      const complexValidations = [];\n\n      fieldValidations.forEach((f) => {\n         // init each ui to have the properties (app and fields) of the object we are editing\n         f.filter.applicationLoad(dc.datasource.application);\n         f.filter.fieldsLoad(dc.datasource.fields());\n         // now we can set the value because the fields are properly initialized\n         f.filter.setValue(f.validationRules);\n\n         // if there are validation rules present we need to store them in a lookup hash\n         // so multiple rules can be stored on a single field\n         if (!Array.isArray(complexValidations[f.columnName]))\n            complexValidations[f.columnName] = [];\n\n         // now we can push the rules into the hash\n         complexValidations[f.columnName].push({\n            filters: $$(f.view).getFilterHelper(),\n            // values: $$(ids.form).getValues(),\n            invalidMessage: f.invalidMessage,\n         });\n      });\n\n      const ids = this.ids;\n\n      // use the lookup to build the validation rules\n      Object.keys(complexValidations).forEach((key) => {\n         // get our field that has validation rules\n         const formField = $$(ids.form).queryView({\n            name: key,\n         });\n\n         // store the rules in a data param to be used later\n         formField.$view.complexValidations = complexValidations[key];\n         // define validation rules\n         formField.define(\"validate\", function (nval, oval, field) {\n            // get field now that we are validating\n            const fieldValidating = $$(ids.form).queryView({\n               name: field,\n            });\n\n            // default valid is true\n            let isValid = true;\n\n            // check each rule that was stored previously on the element\n            fieldValidating.$view.complexValidations.forEach((filter) => {\n               const object = dc.datasource;\n               const data = this.getValues();\n\n               // convert rowData from { colName : data } to { id : data }\n               const newData = {};\n\n               (object.fields() || []).forEach((field) => {\n                  newData[field.id] = data[field.columnName];\n               });\n\n               // for the case of \"this_object\" conditions:\n               if (data.uuid) newData[\"this_object\"] = data.uuid;\n\n               // use helper funtion to check if valid\n               const ruleValid = filter.filters(newData);\n\n               // if invalid we need to tell the field\n               if (!ruleValid) {\n                  isValid = false;\n                  // we also need to define an error message\n                  fieldValidating.define(\n                     \"invalidMessage\",\n                     filter.invalidMessage\n                  );\n               }\n            });\n\n            return isValid;\n         });\n\n         formField.refresh();\n      });\n   }\n\n   async onShow(data) {\n      this.saveButton?.disable();\n\n      this._showed = true;\n\n      const baseView = this.view;\n\n      // call .onShow in the base component\n      const superComponent = baseView.superComponent();\n      await superComponent.onShow();\n\n      const $form = $$(this.ids.form);\n      const dc = this.datacollection;\n\n      if (dc) {\n         // clear current cursor on load\n         // if (this.settings.clearOnLoad || _logic.callbacks.clearOnLoad() ) {\n         const settings = this.settings;\n\n         if (settings.clearOnLoad) {\n            dc.setCursor(null);\n         }\n\n         // pull data of current cursor\n         // await dc.waitReady();\n         const rowData = dc.getCursor();\n\n         if ($form) dc.bind($form);\n\n         // do this for the initial form display so we can see defaults\n         await this.displayData(rowData);\n      }\n      // show blank data in the form\n      else await this.displayData(data ?? {});\n\n      //Focus on first focusable component\n      this.focusOnFirst();\n\n      if ($form) $form.adjust();\n\n      // Load data of DCs that are use in record rules here\n      // no need to wait until they are done. (Let the save button enable)\n      // It will be re-check again when saving.\n      baseView.loadDcDataOfRecordRules();\n\n      this.saveButton?.enable();\n   }\n\n   async displayData(rowData) {\n      // If setTimeout is already scheduled, no need to do anything\n      if (this.timerId) return;\n      else this.timerId = await timeout(80);\n\n      const baseView = this.view;\n      const customFields = baseView.fieldComponents(\n         (comp) =>\n            comp instanceof ABViewFormCustom ||\n            // rich text\n            (comp instanceof ABViewFormTextbox &&\n               comp.settings.type === \"rich\") ||\n            (comp instanceof ABViewFormJson && comp.settings.type === \"filter\")\n      );\n\n      const normalFields = baseView.fieldComponents(\n         (comp) =>\n            comp instanceof ABViewFormItem &&\n            !(comp instanceof ABViewFormCustom)\n      );\n\n      // Set default values\n      if (!rowData) {\n         customFields.forEach((f) => {\n            const field = f.field();\n            if (!field) return;\n\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            // var colName = field.columnName;\n            if (this._showed) comp?.onShow?.();\n\n            // set value to each components\n            const defaultRowData = {};\n\n            field.defaultValue(defaultRowData);\n            field.setValue($$(comp.ids.formItem), defaultRowData);\n\n            comp?.refresh?.(defaultRowData);\n         });\n\n         normalFields.forEach((f) => {\n            if (f.key === \"button\") return;\n\n            const field = f.field();\n            if (!field) return;\n\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            const colName = field.columnName;\n\n            // set value to each components\n            const values = {};\n\n            field.defaultValue(values);\n            $$(comp.ids.formItem)?.setValue(values[colName] ?? \"\");\n         });\n\n         // select parent data to default value\n         const dc = this.datacollection;\n         const linkDv = dc.datacollectionLink;\n\n         if (linkDv) {\n            const parentData = linkDv.getCursor();\n\n            this.displayParentData(parentData);\n         }\n      }\n\n      // Populate value to custom fields\n      else {\n         customFields.forEach((f) => {\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            if (this._showed) comp?.onShow?.();\n\n            // set value to each components\n            f?.field()?.setValue($$(comp.ids.formItem), rowData);\n\n            comp?.refresh?.(rowData);\n         });\n\n         normalFields.forEach((f) => {\n            if (f.key === \"button\") return;\n\n            const field = f.field();\n            if (!field) return;\n\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n            //\n            if (f.key === \"datepicker\") {\n               // Not sure why, but the local format isn't applied correctly\n               // without a timeout here\n               setTimeout(() => {\n                  field.setValue($$(comp.ids.formItem), rowData);\n               }, 200);\n               return;\n            }\n\n            field.setValue($$(comp.ids.formItem), rowData);\n         });\n      }\n\n      this.timerId = null;\n   }\n\n   displayParentData(rowData) {\n      const dc = this.datacollection;\n\n      // If the cursor is selected, then it will not update value of the parent field\n      const currCursor = dc.getCursor();\n      if (currCursor) return;\n\n      const relationField = dc.fieldLink;\n      if (!relationField) return;\n\n      const baseView = this.view;\n      // Pull a component of relation field\n      const relationFieldCom = baseView.fieldComponents((comp) => {\n         if (!(comp instanceof ABViewFormItem)) return false;\n\n         return comp.field()?.id === relationField.id;\n      })[0];\n      if (!relationFieldCom) return;\n\n      const relationFieldView = baseView.viewComponents[relationFieldCom.id];\n      if (!relationFieldView) return;\n\n      const $relationFieldView = $$(relationFieldView.ids.formItem),\n         relationName = relationField.relationName();\n\n      // pull data of parent's dc\n      const formData = {};\n\n      formData[relationName] = rowData;\n\n      // set data of parent to default value\n      relationField.setValue($relationFieldView, formData);\n   }\n\n   detatch() {\n      // TODO: remove any handlers we have attached.\n   }\n\n   focusOnFirst() {\n      const baseView = this.view;\n\n      let topPosition = 0;\n      let topPositionId = \"\";\n\n      baseView.views().forEach((item) => {\n         if (item.key === \"textbox\" || item.key === \"numberbox\")\n            if (item.position.y === topPosition) {\n               topPosition = item.position.y;\n               topPositionId = item.id;\n            }\n      });\n\n      const childComponent = baseView.viewComponents[topPositionId];\n\n      if (childComponent && $$(childComponent.ids.formItem))\n         $$(childComponent.ids.formItem).focus();\n   }\n\n   get saveButton() {\n      return $$(this.ids.form)?.queryView({\n         view: \"button\",\n         type: \"form\",\n      });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormConnectComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormConnect_${baseView.id}`,\n         Object.assign(\n            {\n               popup: \"\",\n               editpopup: \"\",\n            },\n            ids\n         )\n      );\n\n      this.addPageComponent = null;\n      this.editPageComponent = null;\n   }\n\n   get field() {\n      return this.view.field();\n   }\n\n   get multiselect() {\n      return this.field?.settings.linkType == \"many\";\n   }\n\n   ui() {\n      const field = this.field;\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const settings = this.settings;\n\n      if (!field) {\n         console.error(`This field could not found : ${settings.fieldId}`);\n\n         return super.ui({\n            view: \"label\",\n            label: \"\",\n         });\n      }\n\n      const multiselect = this.multiselect; // field.settings.linkType == \"many\";\n      const formSettings = form?.settings || {};\n      const ids = this.ids;\n\n      let _ui = {\n         id: ids.formItem,\n         view: multiselect ? \"multicombo\" : \"combo\",\n         name: field.columnName,\n         required:\n            field?.settings?.required || parseInt(settings?.required) || false,\n         // label: field.label,\n         // labelWidth: settings.labelWidth,\n         dataFieldId: field.id,\n         on: {\n            onItemClick: (id, e) => {\n               if (\n                  e.target.classList.contains(\"editConnectedPage\") &&\n                  e.target.dataset.itemId\n               ) {\n                  const rowId = e.target.dataset.itemId;\n                  if (!rowId) return;\n                  this.goToEditPage(rowId);\n               }\n            },\n            onChange: (data) => {\n               this._onChange(data);\n            },\n         },\n      };\n\n      if (formSettings.showLabel) {\n         _ui.label = field.label;\n         _ui.labelWidth = formSettings.labelWidth;\n         _ui.labelPosition = formSettings.labelPosition;\n      }\n\n      this.initAddEditTool();\n\n      _ui.suggest = {\n         button: true,\n         selectAll: multiselect ? true : false,\n         body: {\n            data: [],\n            template: `${\n               baseView?.settings?.editForm\n                  ? '<i data-item-id=\"#id#\" class=\"fa fa-cog editConnectedPage\"></i>'\n                  : \"\"\n            }#value#`,\n         },\n         on: {\n            onShow: () => {\n               field.populateOptionsDataCy($$(ids.formItem), field, form);\n            },\n         },\n         // Support partial matches\n         filter: ({ value }, search) =>\n            value.toLowerCase().includes(search.toLowerCase()),\n      };\n\n      _ui.onClick = {\n         customField: (id, e, trg) => {\n            if (settings.disable === 1) return;\n\n            const rowData = {};\n            const $formItem = $$(ids.formItem);\n\n            if ($formItem) {\n               const node = $formItem.$view;\n\n               field.customEdit(rowData, /* App,*/ node);\n            }\n         },\n      };\n\n      let apcUI = this.addPageComponent?.ui;\n      if (apcUI) {\n         // reset some component vals to make room for button\n         _ui.label = \"\";\n         _ui.labelWidth = 0;\n\n         // add click event to add new button\n         apcUI.on = {\n            onItemClick: (/*id, evt*/) => {\n               // let $form = $$(id).getFormView();\n               this.addPageComponent?.onClick(form.datacollection);\n\n               return false;\n            },\n         };\n\n         if (_ui.labelPosition == \"top\") {\n            _ui.labelPosition = \"left\";\n            _ui = {\n               inputId: ids.formItem,\n               rows: [\n                  {\n                     view: \"label\",\n                     label: field.label,\n                     // height: 22,\n                     align: \"left\",\n                  },\n                  {\n                     cols: [apcUI, _ui],\n                  },\n               ],\n            };\n         } else {\n            _ui = {\n               inputId: ids.formItem,\n               rows: [\n                  {\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: field.label,\n                           width: formSettings.labelWidth,\n                           align: \"left\",\n                        },\n                        apcUI,\n                        _ui,\n                     ],\n                  },\n               ],\n            };\n         }\n\n         _ui = super.ui(_ui);\n      } else {\n         _ui = {\n            inputId: ids.formItem,\n            rows: [_ui],\n         };\n\n         _ui = super.ui(_ui);\n\n         delete _ui.rows[0].id;\n      }\n\n      return _ui;\n   }\n\n   async _onChange(data) {\n      const ids = this.ids;\n      const field = this.field;\n      const baseView = this.view;\n\n      if (this.multiselect) {\n         if (typeof data == \"string\") {\n            data = data.split(\",\");\n         }\n      }\n\n      let selectedValues;\n      if (Array.isArray(data)) {\n         selectedValues = [];\n         data.forEach((record) => {\n            selectedValues.push(record.id || record);\n            // let recordObj = record;\n            // if (typeof record != \"object\") {\n            //    // we need to convert either index or uuid to full data object\n            //    recordObj = field.getItemFromVal(record);\n            // }\n            // if (recordObj?.id) selectedValues.push(recordObj.id);\n         });\n      } else {\n         selectedValues = data;\n         if (typeof data != \"object\") {\n            // we need to convert either index or uuid to full data object\n            selectedValues = field.getItemFromVal(data);\n         }\n         // selectedValues = field.pullRecordRelationValues(selectedValues);\n         if (selectedValues?.id) {\n            selectedValues = selectedValues.id;\n         } else {\n            selectedValues = data;\n         }\n      }\n\n      // We can now set the new value but we need to block event listening\n      // so it doesn't trigger onChange again\n      const $formItem = $$(ids.formItem);\n\n      // Q: if we don't have a $formItem, is any of the rest valid?\n      if ($formItem) {\n         // for xxx->one connections we need to populate again before setting\n         // values because we need to use the selected values to add options\n         // to the UI\n         if (this?.field?.settings?.linkViaType == \"one\") {\n            this.busy();\n            await field.getAndPopulateOptions(\n               $formItem,\n               baseView.options,\n               field,\n               baseView.parentFormComponent()\n            );\n            this.ready();\n         }\n\n         $formItem.blockEvent();\n\n         // store the user's selected option in local storage.\n         field.saveSelect(selectedValues);\n\n         const prepedVals = selectedValues.join\n            ? selectedValues.join()\n            : selectedValues;\n\n         $formItem.setValue(prepedVals);\n         $formItem.unblockEvent();\n      }\n   }\n\n   async init(AB, options) {\n      await super.init(AB);\n\n      const $formItem = $$(this.ids.formItem);\n      if ($formItem) webix.extend($formItem, webix.ProgressBar);\n\n      this.initAddEditTool();\n   }\n\n   initAddEditTool() {\n      const baseView = this.view;\n\n      // Initial add/edit page tools\n      const addFormID = baseView?.settings?.formView;\n      if (addFormID && baseView && !this.addPageComponent) {\n         this.addPageComponent = baseView.addPageTool.component(\n            this.AB,\n            `${baseView.id}_${addFormID}`\n         );\n         this.addPageComponent.applicationLoad(baseView.application);\n         this.addPageComponent.init({\n            onSaveData: this.callbackSaveData.bind(this),\n            onCancelClick: this.callbackCancel.bind(this),\n            clearOnLoad: this.callbackClearOnLoad.bind(this),\n         });\n      }\n\n      const editFormID = baseView?.settings?.editForm;\n      if (editFormID && baseView && !this.editPageComponent) {\n         this.editPageComponent = baseView.editPageTool.component(\n            this.AB,\n            `${baseView.id}_${editFormID}`\n         );\n         this.editPageComponent.applicationLoad(baseView.application);\n         this.editPageComponent.init({\n            onSaveData: this.callbackSaveData.bind(this),\n            onCancelClick: this.callbackCancel.bind(this),\n            clearOnLoad: this.callbackClearOnLoad.bind(this),\n         });\n      }\n   }\n\n   async callbackSaveData(saveData) {\n      if (saveData == null) return;\n      else if (!Array.isArray(saveData)) saveData = [saveData];\n\n      const ids = this.ids;\n      const field = this.field;\n\n      // find the select component\n      const $formItem = $$(ids.formItem);\n      if (!$formItem) return;\n\n      // Refresh option list\n      this.busy();\n      field.clearStorage(this.view.settings.filterConditions);\n      const data = await field.getAndPopulateOptions(\n         $formItem,\n         this.view.options,\n         field,\n         this.view.parentFormComponent()\n      );\n      this.ready();\n\n      // field.once(\"option.data\", (data) => {\n      data.forEach((item) => {\n         item.value = item.text;\n      });\n\n      $formItem.getList().clearAll();\n      $formItem.getList().define(\"data\", data);\n\n      if (field.settings.linkType === \"many\") {\n         let selectedItems = $formItem.getValue();\n         saveData.forEach((sData) => {\n            if (selectedItems.indexOf(sData.id) === -1)\n               selectedItems = selectedItems\n                  ? `${selectedItems},${sData.id}`\n                  : sData.id;\n         });\n\n         $formItem.setValue(selectedItems);\n      } else {\n         $formItem.setValue(saveData[0].id);\n      }\n      // close the popup when we are finished\n      // $$(ids.popup)?.close();\n      // $$(ids.editpopup)?.close();\n      // });\n\n      // field.getOptions(this.settings.filterConditions, \"\");\n      // .then(function (data) {\n      //    // we need new option that will be returned from server (above)\n      //    // so we will not set this and then just reset it.\n      // });\n   }\n\n   callbackCancel() {\n      $$(this.ids?.popup)?.close?.();\n\n      return false;\n   }\n\n   callbackClearOnLoad() {\n      return true;\n   }\n\n   getValue(rowData) {\n      return this.field.getValue($$(this.ids.formItem), rowData);\n   }\n\n   formBusy($form) {\n      if (!$form) return;\n\n      $form.disable?.();\n      $form.showProgress?.({ type: \"icon\" });\n   }\n\n   formReady($form) {\n      if (!$form) return;\n\n      $form.enable?.();\n      $form.hideProgress?.();\n   }\n\n   goToEditPage(rowId) {\n      const settings = this.settings;\n\n      if (!settings.editForm) return;\n\n      const editForm = this.view.application.urlResolve(settings.editForm);\n\n      if (!editForm) return;\n\n      const $form = $$(this.ids.formItem).getFormView() || null;\n\n      // Open the form popup\n      this.editPageComponent.onClick().then(() => {\n         const dc = editForm.datacollection;\n\n         if (dc) {\n            dc.setCursor(rowId);\n\n            this.__editFormDcEvent =\n               this.__editFormDcEvent ||\n               dc.on(\"initializedData\", () => {\n                  dc.setCursor(rowId);\n               });\n         }\n      });\n   }\n\n   async onShow() {\n      const ids = this.ids;\n      const $formItem = $$(ids.formItem);\n\n      if (!$formItem) return;\n\n      const field = this.field;\n\n      if (!field) return;\n\n      const node = $formItem.$view;\n\n      if (!node) return;\n\n      const $node = $$(node);\n\n      if (!$node) return;\n\n      const settings = this.settings;\n      let filterConditions = {\n         glue: \"and\",\n         rules: [],\n      };\n\n      if (settings?.filterConditions?.rules?.length) {\n         filterConditions = this.AB.cloneDeep(\n            this.view.settings.filterConditions\n         );\n      }\n\n      // NOTE: compatible with version 1. This code should not be here too long.\n      if (\n         !filterConditions?.rules?.length &&\n         settings?.objectWorkspace?.filterConditions?.rules?.length\n      ) {\n         filterConditions = this.AB.cloneDeep(\n            settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Add the filter connected value\n      if ((settings?.filterConnectedValue ?? \"\").indexOf(\":\") > -1) {\n         const values = settings.filterConnectedValue.split(\":\"),\n            uiConfigName = values[0],\n            connectFieldId = values[1];\n\n         filterConditions.rules.push({\n            key: connectFieldId,\n            rule: \"filterByConnectValue\",\n            value: uiConfigName,\n         });\n      }\n\n      const getFilterByConnectValues = (conditions, depth = 0) => {\n         return [\n            ...conditions.rules\n               .filter((e) => e.rule === \"filterByConnectValue\")\n               .map((e) => {\n                  const filterByConnectValue = Object.assign({}, e);\n\n                  filterByConnectValue.depth = depth;\n\n                  return filterByConnectValue;\n               }),\n         ].concat(\n            ...conditions.rules\n               .filter((e) => e.glue)\n               .map((e) => getFilterByConnectValues(e, depth + 1))\n         );\n      };\n\n      const baseView = this.view;\n      const filterByConnectValues = getFilterByConnectValues(\n         filterConditions\n      ).map((e) => {\n         for (const key in baseView.parent.viewComponents) {\n            if (\n               !(\n                  baseView.parent.viewComponents[key] instanceof\n                  this.constructor\n               )\n            )\n               continue;\n\n            const $ui = $$(\n               baseView.parent.viewComponents[key]\n                  .ui()\n                  .rows.find((vc) => vc.inputId)?.inputId\n            );\n\n            if ($ui?.config?.name === e.value) {\n               // we need to use the element id stored in the settings to find out what the\n               // ui component id is so later we can use it to look up its current value\n               e.filterValue = $ui;\n\n               break;\n            }\n         }\n\n         const ab = this.AB;\n         const field = ab\n            .objectByID(settings.objectId)\n            .fieldByID(settings.fieldId);\n         const linkedObject = ab.objectByID(field.settings.linkObject);\n         const linkedField = linkedObject.fieldByID(e.key);\n\n         if (linkedField?.settings?.isCustomFK) {\n            // finally if this is a custom foreign key we need the stored columnName by\n            // default uuid is passed for all non CFK\n            e.filterColumn = ab\n               .objectByID(linkedField.settings.linkObject)\n               .fields(\n                  (filter) =>\n                     filter.id === linkedField.settings.indexField ||\n                     linkedField.settings.indexField2\n               )[0].columnName;\n         } else e.filterColumn = null;\n\n         return e;\n      });\n\n      baseView.options = {\n         formView: settings.formView,\n         filters: filterConditions,\n         // NOTE: settings.objectWorkspace.xxx is a depreciated setting.\n         // We will be phasing this out.\n         sort: settings.sortFields ?? settings.objectWorkspace?.sortFields,\n         editable: settings.disable === 1 ? false : true,\n         editPage:\n            !settings.editForm || settings.editForm === \"none\" ? false : true,\n         filterByConnectValues,\n      };\n\n      // if this field's options are filtered off another field's value we need\n      // to make sure the UX helps the user know what to do.\n      // fetch the options and set placeholder text for this view\n      if (baseView.options.editable) {\n         const parentFields = [];\n\n         filterByConnectValues.forEach((fv) => {\n            if (fv.filterValue && fv.key) {\n               const $filterValueConfig = $$(fv.filterValue.config.id);\n\n               let parentField = null;\n\n               if (!$filterValueConfig) {\n                  // this happens in the Interface Builder when only the single form UI is displayed\n                  parentField = {\n                     id: \"perentElement\",\n                     label: this.label(\"PARENT ELEMENT\"),\n                  };\n               } else {\n                  const value = field.getValue($filterValueConfig);\n\n                  if (!value) {\n                     // if there isn't a value on the parent select element set this one to readonly and change placeholder text\n                     parentField = {\n                        id: fv.filterValue.config.id,\n                        label: $filterValueConfig.config.label,\n                     };\n                  }\n\n                  $filterValueConfig.attachEvent(\n                     \"onChange\",\n                     async (e) => {\n                        const parentVal = $filterValueConfig.getValue();\n\n                        if (parentVal) {\n                           $node.define(\"disabled\", false);\n                           $node.define(\n                              \"placeholder\",\n                              this.label(\"Select items\")\n                           );\n                           this.busy();\n                           await field.getAndPopulateOptions(\n                              $node,\n                              baseView.options,\n                              field,\n                              baseView.parentFormComponent()\n                           );\n                           this.ready();\n                        } else {\n                           $node.define(\"disabled\", true);\n                           $node.define(\n                              \"placeholder\",\n                              this.label(\"Must select item from '{0}' first.\", [\n                                 $filterValueConfig.config.label,\n                              ])\n                           );\n                        }\n\n                        // TODO: Do we need to clear selected value?\n                        // $node.setValue(\"\");\n                        $node.refresh();\n                     },\n                     false\n                  );\n               }\n\n               if (\n                  parentField &&\n                  parentFields.findIndex((e) => e.id === parentField.id) < 0\n               )\n                  parentFields.push(parentField);\n            }\n         });\n\n         if (parentFields.length && !$node.getValue()) {\n            $node.define(\"disabled\", true);\n            $node.define(\n               \"placeholder\",\n               this.label(`Must select item from '{0}' first.`, [\n                  parentFields.map((e) => e.label).join(\", \"),\n               ])\n            );\n         } else {\n            $node.define(\"disabled\", false);\n            $node.define(\"placeholder\", this.label(\"Select items\"));\n         }\n      } else {\n         $node.define(\"placeholder\", \"\");\n         $node.define(\"disabled\", true);\n      }\n\n      $node.refresh();\n\n      // Add data-cy attributes\n      const dataCy = `${field.key} ${field.columnName} ${field.id} ${baseView.parent.id}`;\n      node.setAttribute(\"data-cy\", dataCy);\n\n      this.busy();\n      try {\n         await field.getAndPopulateOptions(\n            // $node,\n            $formItem,\n            baseView.options,\n            field,\n            baseView.parentFormComponent()\n         );\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context:\n               \"ABViewFormConnectComponent > onShow() error calling field.getAndPopulateOptions\",\n         });\n      }\n      this.ready();\n\n      // Need to refresh selected values when they are custom index\n      this._onChange($formItem.getValue());\n   }\n\n   busy() {\n      const $formItem = $$(this.ids.formItem);\n\n      $formItem?.disable();\n      $formItem?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      const $formItem = $$(this.ids.formItem);\n\n      $formItem?.enable();\n      $formItem?.hideProgress?.();\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\nconst ABFieldImage = require(\"../../dataFields/ABFieldImage\");\nconst FocusableTemplate = require(\"../../../../webix_custom_components/focusableTemplate\");\n\nconst DEFAULT_HEIGHT = 80;\n\nmodule.exports = class ABViewFormCustomComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormCustom_${baseView.id}`, ids);\n   }\n\n   get new_width() {\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const formSettings = form?.settings ?? {};\n      const settings = baseView.settings ?? {};\n\n      let newWidth = formSettings.labelWidth;\n\n      if (settings.formView) newWidth += 40;\n      else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         newWidth = 0;\n\n      return newWidth;\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const form = baseView.parentFormComponent();\n      const formSettings = form?.settings ?? {};\n      const settings = field?.settings ?? baseView.settings ?? {};\n\n      const requiredClass =\n         field?.settings?.required || this.settings.required\n            ? \"webix_required\"\n            : \"\";\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"box-sizing: border-box; display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap; color: #313131;\" class=\"webix_inp_top_label ${requiredClass}\">#label#</label>`;\n         else\n            templateLabel = `<label style=\"box-sizing: border-box; width: #width#px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 8px 0 0; text-overflow:ellipsis; overflow:hidden; white-space:nowrap; color: #313131;\" class=\"${requiredClass}\">#label#</label>`;\n      }\n\n      let height = 38;\n      let width = this.new_width;\n\n      if (typeof field == \"undefined\") {\n         console.warn(\n            `BaseView[${baseView.id}] returned an undefined field()`,\n            baseView.toObj()\n         );\n      }\n\n      if (field instanceof ABFieldImage) {\n         if (settings.useHeight) {\n            if (formSettings.labelPosition === \"top\") {\n               height = parseInt(settings.imageHeight) || DEFAULT_HEIGHT;\n               height += 38;\n            } else {\n               height = parseInt(settings.imageHeight) || DEFAULT_HEIGHT;\n            }\n         } else if (formSettings.labelPosition === \"top\") {\n            height = DEFAULT_HEIGHT + 38;\n         } else {\n            if (DEFAULT_HEIGHT > 38) {\n               height = DEFAULT_HEIGHT;\n            }\n         }\n         width =\n            settings.useWidth && settings.imageWidth ? settings.imageWidth : 0;\n      } else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         height = DEFAULT_HEIGHT;\n\n      let template = `<div class=\"customField ${formSettings.labelPosition}\">${\n         formSettings.labelPosition == \"top\" ? \"\" : templateLabel\n      }#template#</div>`\n         .replace(/#width#/g, formSettings.labelWidth)\n         .replace(/#label#/g, field?.label ?? \"\")\n         .replace(\n            /#template#/g,\n            field\n               ?.columnHeader({\n                  width: width,\n                  height: height,\n                  editable: true,\n               })\n               .template({}) ?? \"\"\n         );\n\n      if (settings.useWidth == 0) {\n         template = template.replace(\n            /\"ab-image-data-field\" style=\"float: left; width: 100%/g,\n            '\"ab-image-data-field\" style=\"float: left; width: calc(100% - ' +\n               formSettings.labelWidth +\n               \"px)\"\n         );\n      }\n\n      return super.ui({\n         view: \"forminput\",\n         labelWidth: 0,\n         paddingY: 0,\n         paddingX: 0,\n         css: \"ab-custom-field\",\n         // label:  field.label,\n         // labelPosition: settings.labelPosition, // webix.forminput does not have .labelPosition T T\n         // labelWidth: settings.labelWidth,\n         body: {\n            view: new FocusableTemplate(this.AB._App).key,\n            css: \"customFieldCls\",\n            borderless: true,\n            template: template,\n            height: height,\n            onClick: {\n               customField: (evt, e, trg) => {\n                  if (settings.disable === 1) return;\n\n                  let rowData = {};\n\n                  const formView =\n                     this?.parentFormComponent?.() ||\n                     this.view?.parentFormComponent?.();\n\n                  if (formView) {\n                     const dv = formView.datacollection;\n                     if (dv) rowData = dv.getCursor() || {};\n                  }\n\n                  // var node = $$(ids.formItem).$view;\n                  let node = $$(trg).getParentView().$view;\n                  field?.customEdit(\n                     rowData,\n                     this.AB_App,\n                     node,\n                     this.ids.formItem,\n                     evt\n                  );\n               },\n            },\n         },\n      });\n   }\n\n   onShow() {\n      const ids = this.ids;\n      const $formItem = $$(ids.formItem);\n\n      if (!$formItem) return;\n\n      const baseView = this.view;\n      const field = baseView.field(),\n         rowData = {},\n         node = $formItem.$view;\n\n      // Add data-cy attributes\n      const dataCy = `${baseView.key} ${field.key} ${field.columnName} ${baseView.id} ${baseView.parent.id}`;\n      node.setAttribute(\"data-cy\", dataCy);\n\n      const options = {\n         formId: ids.formItem,\n         editable: baseView.settings.disable === 1 ? false : true,\n      };\n\n      if (field instanceof ABFieldImage) {\n         options.height = field.settings.useHeight\n            ? parseInt(field.settings.imageHeight) || DEFAULT_HEIGHT\n            : DEFAULT_HEIGHT;\n         options.width = field.settings.useWidth\n            ? parseInt(field.settings.imageWidth) || 0\n            : 0;\n      }\n\n      field.customDisplay(rowData, this.AB._App, node, options);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      const $formItem = $$(this.ids.formItem);\n\n      return field.getValue($formItem, rowData);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormDatepickerComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormDatepicker_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const self = this;\n      const field = this.view.field();\n\n      const _ui = {\n         view: \"datepicker\",\n         suggest: {\n            body: {\n               view:\n                  this.AB.Account?._config?.languageCode == \"th\"\n                     ? \"thaicalendar\"\n                     : \"calendar\",\n               type: field.settings?.dateFormat === 1 ? \"time\" : \"\",\n               timepicker:\n                  field.key === \"datetime\" && field.settings?.timeFormat !== 1\n                     ? true\n                     : false,\n               editable: true,\n               on: {\n                  onAfterDateSelect: function (date) {\n                     this.getParentView().setMasterValue({\n                        value: date,\n                     });\n                  },\n                  onTodaySet: function (date) {\n                     this.getParentView().setMasterValue({\n                        value: date,\n                     });\n                  },\n                  onDateClear: function (date) {\n                     this.getParentView().setMasterValue({\n                        value: date,\n                     });\n                  },\n               },\n            },\n            on: {\n               onShow: function () {\n                  const text = this.getMasterValue();\n                  const field = self.view.field();\n                  if (!text || !field) return true;\n\n                  const vals = {};\n                  vals[field.columnName] = text;\n                  const date = self.getValue(vals);\n\n                  const $calendar = this.getChildViews()[0];\n                  $calendar.setValue(date);\n               },\n            },\n         },\n      };\n\n      if (!field) return _ui;\n\n      // Ignore date - Only time picker\n      if (field.settings?.dateFormat === 1) _ui.type = \"time\";\n\n      // Date & Time picker\n      if (field.key === \"datetime\" && field.settings?.timeFormat !== 1)\n         _ui.timepicker = true;\n\n      // allows entering characters in datepicker input, false by default\n      _ui.editable = true;\n\n      // default value\n      if (_ui.value && !(_ui.value instanceof Date))\n         _ui.value = new Date(_ui.value);\n\n      // if we have webix locale set, will use the date format form there.\n      if (!window.webixLocale) _ui.format = field.getFormat();\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      const text = rowData[field.columnName];\n      if (!field || !text) return null;\n\n      // Sentry Fix: caught an error where this.AB was not set, but this.view was...\n      // attempt to catch this situation and post more data:\n      if (!this.AB) {\n         if (this.view.AB) {\n            this.AB = this.view.AB;\n         } else {\n            let errNoAB = new Error(\n               \"ABViewFormDatePicerComponent:getValue(): AB was not set.\"\n            );\n            // sentry logs the console before the error, so dump the offending view here:\n            console.log(\"view:\", JSON.stringify(this.view.toObj()));\n            throw errNoAB;\n         }\n      }\n      // NOTE: if we are using the Thai language we force the format to be \"%d/%m/%Y\" in th-TH.js:13\n      //       so we have to use that format here\n      let dateVal = this.AB.Webix.Date.strToDate(field.getFormat())(text);\n      if (this.AB.Account?._config?.languageCode == \"th\") {\n         dateVal = this.AB.Webix.Date.strToDate(\"%j/%m/%Y\")(text);\n      }\n      const date = dateVal;\n\n      if (\n         this.AB.Account?._config?.languageCode == \"th\" &&\n         field.settings?.dateFormat !== 1\n      )\n         date.setFullYear(date.getFullYear() - 543);\n\n      return date;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewFormItemComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormItem_${baseView.id}`,\n         Object.assign({ formItem: \"\" }, ids)\n      );\n   }\n\n   ui(uiFormItemComponent = {}) {\n      // setup 'label' of the element\n      const baseView = this.view;\n      const form = baseView.parentFormComponent(),\n         field = baseView.field?.() || null,\n         label = \"\";\n      const settings = form?.settings || {};\n      const _uiFormItem = {\n         id: this.ids.formItem,\n         labelPosition: settings.labelPosition,\n         labelWidth: settings.labelWidth,\n         label,\n      };\n\n      if (field) {\n         _uiFormItem.name = field.columnName;\n\n         // default value\n         const data = {};\n\n         field.defaultValue(data);\n\n         if (data[field.columnName]) _uiFormItem.value = data[field.columnName];\n\n         if (settings.showLabel) _uiFormItem.label = field.label;\n\n         if (field.settings.required || baseView.settings?.required)\n            _uiFormItem.required = 1;\n\n         if (baseView.settings?.disable === 1) _uiFormItem.disabled = true;\n\n         // add data-cy to form element for better testing code\n         _uiFormItem.on = {\n            onAfterRender() {\n               if (this.getList) {\n                  const popup = this.getPopup();\n\n                  if (!popup) return;\n\n                  this.getList().data.each((option) => {\n                     if (!option) return;\n\n                     // our option.ids are based on builder input and can include the ' character\n                     const node = popup.$view.querySelector(\n                        `[webix_l_id='${(option?.id ?? \"\")\n                           .toString()\n                           .replaceAll(\"'\", \"\\\\'\")}']`\n                     );\n\n                     if (!node) return;\n\n                     node.setAttribute(\n                        \"data-cy\",\n                        `${field.key} options ${option.id} ${field.id} ${\n                           form?.id || \"nf\"\n                        }`\n                     );\n                  });\n               }\n\n               this.getInputNode?.().setAttribute?.(\n                  \"data-cy\",\n                  `${field.key} ${field.columnName} ${field.id} ${\n                     form?.id || \"nf\"\n                  }`\n               );\n            },\n         };\n\n         // this may be needed if we want to format data at this point\n         // if (field.format) data = field.format(data);\n\n         _uiFormItem.validate = (val, data, colName) => {\n            const validator = this.AB.Validation.validator();\n\n            field.isValidData(data, validator);\n\n            return validator.pass();\n         };\n      }\n\n      const _ui = super.ui([\n         Object.assign({}, _uiFormItem, uiFormItemComponent),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormJsonComponent extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormJson_${baseView.id}`, ids);\n      if (this.settings.type == \"filter\") {\n         this.rowFilter = this.AB.filterComplexNew(\n            `${baseView.id}_filterComplex`,\n            {\n               isSaveHidden: true,\n               height: 300,\n               borderless: false,\n               showObjectName: true,\n            }\n         );\n      }\n   }\n\n   getFilterField(instance) {\n      if (\n         instance?.settings?.filterField &&\n         instance?.view?.parent?.viewComponents\n      ) {\n         let filterField = \"\";\n         for (const [key, value] of Object.entries(\n            instance.view.parent.viewComponents\n         )) {\n            if (value.settings.fieldId == instance.settings.filterField) {\n               filterField = value;\n            }\n         }\n\n         if (filterField?.ids?.formItem) {\n            return filterField.ids.formItem;\n         } else {\n            return \"\";\n         }\n      } else {\n         return \"\";\n      }\n   }\n\n   get getSystemObjects() {\n      // get list of all objects in the app\n      let objects = this.AB.objects();\n      // reformat objects into simple array for Webix multicombo\n      // if you do not the data causes a maximum stack error\n      let objectsArray = [];\n      objects.forEach((obj) => {\n         objectsArray.push({ id: obj.id, label: obj.label });\n      });\n      // return the simple array\n      return objectsArray;\n   }\n\n   refreshFilter(values) {\n      if (values) {\n         let fieldDefs = [];\n         values.forEach((obj) => {\n            let object = this.AB.objectByID(obj);\n            let fields = object.fields();\n            if (fields.length) {\n               fields.forEach((f) => {\n                  fieldDefs.push(f);\n               });\n            }\n         });\n         this.rowFilter.fieldsLoad(fieldDefs);\n         if ($$(this.ids.formItem).config.value)\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n      } else {\n         this.rowFilter.fieldsLoad([]);\n         if ($$(this.ids.formItem).config.value)\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n      }\n   }\n\n   getValue() {\n      return this.rowFilter.getValue();\n   }\n\n   setValue(formVals) {\n      $$(this.ids.formItem).config.value = formVals;\n   }\n\n   ui() {\n      const _ui = {};\n\n      switch (\n         this.settings.type ||\n         this.view.settings.type ||\n         this.view.constructor.defaultValues().type\n      ) {\n         case \"string\":\n            _ui.view = \"textarea\";\n            _ui.disabled = true;\n            _ui.height = 200;\n            _ui.format = {\n               parse: function (parsed) {\n                  try {\n                     parsed = JSON.parse(parsed);\n                  } catch (err) {\n                     // already parsed\n                  }\n                  return parsed;\n               },\n               edit: function (stringify) {\n                  try {\n                     stringify = JSON.stringify(stringify);\n                  } catch (err) {\n                     // already a string\n                  }\n                  return stringify;\n               },\n            };\n            break;\n         case \"systemObject\":\n            _ui.view = \"multicombo\";\n            _ui.placeholder = this.label(\"Select one or more system objects\");\n            _ui.button = false;\n            _ui.stringResult = false;\n            _ui.suggest = {\n               selectAll: true,\n               body: {\n                  data: this.getSystemObjects,\n                  template: webix.template(\"#label#\"),\n               },\n            };\n            break;\n         case \"filter\":\n            _ui.view = \"forminput\";\n            _ui.css = \"ab-custom-field\";\n            _ui.body = this.rowFilter.ui;\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   init() {\n      // if (this.settings.type == \"filter\") {\n      //    this.rowFilter.init({ showObjectName: true });\n      // }\n   }\n\n   onShow() {\n      const _ui = this.ui();\n      if (this?.settings?.type == \"filter\") {\n         let filterField = this.getFilterField(this);\n         if (!$$(filterField)) return;\n         $$(filterField).detachEvent(\"onChange\");\n         $$(filterField).attachEvent(\"onChange\", (values) => {\n            this.refreshFilter(values);\n         });\n         this.rowFilter.init({ showObjectName: true });\n         this.rowFilter.on(\"changed\", (val) => {\n            this.setValue(val);\n         });\n         if ($$(this.ids.formItem).config.value) {\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n         } else {\n            this.rowFilter.setValue(\"\");\n         }\n      }\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\nconst NumberTextInput = require(\"../../../../webix_custom_components/numbertext\");\n\nmodule.exports = class ABViewFormNumberComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormNumber_${baseView.id}`, ids);\n\n      this._numberTextInputKey = null;\n   }\n\n   get numberTextInputKey() {\n      return (this._numberTextInputKey =\n         this._numberTextInputKey || new NumberTextInput(this.AB._App).key);\n   }\n\n   ui() {\n      return super.ui({\n         view: this.settings.isStepper ? \"counter\" : this.numberTextInputKey,\n         type: \"number\",\n         validate: (val) => !isNaN(val * 1),\n      });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormReadonlyComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormReadonly_${baseView.id}`,\n         Object.assign(\n            {\n               template: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      const _ui = {\n         view: \"forminput\",\n         labelWidth: 0,\n         paddingY: 0,\n         paddingX: 0,\n         readonly: true,\n         css: \"ab-readonly-field\",\n         // name: component.ui.name,\n         // label:  field.label,\n         // labelPosition: settings.labelPosition, // webix.forminput does not have .labelPosition T T\n         // labelWidth: settings.labelWidth,\n         body: {\n            id: this.ids.template,\n            view: \"label\",\n            borderless: true,\n            css: { \"background-color\": \"#fff\" },\n            label: \"\",\n         },\n      };\n\n      const settings = baseView.parentFormComponent().settings || {};\n\n      if (settings.showLabel == true && settings.labelPosition == \"top\") {\n         _ui.body.height = 80;\n      } else if (field.settings.useHeight) {\n         _ui.body.height = parseInt(field.settings.imageHeight) || 38;\n      } else _ui.body.height = 38;\n\n      return super.ui(_ui);\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $formItem = $$(this.ids.formItem);\n      if (!$formItem) return;\n\n      const $form = $formItem.getFormView();\n      const rowData = $form?.getValues() ?? {};\n\n      this.refresh(rowData);\n      $form?.attachEvent(\"onChange\", (newv, oldv) => {\n         const rowData = $form?.getValues() ?? {};\n\n         this.refresh(rowData);\n      });\n   }\n\n   onShow() {\n      const $formItem = $$(this.ids.formItem);\n      if (!$formItem) return;\n\n      const $form = $formItem.getFormView();\n      const rowData = $form?.getValues() ?? {};\n\n      this.refresh(rowData);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      if (!field) return null;\n\n      return rowData[field.columnName];\n   }\n\n   refresh(rowData) {\n      const baseView = this.view;\n      const form = baseView.parentFormComponent(),\n         field = baseView.field();\n\n      const formSettings = form.settings || {};\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"webix_inp_top_label\">${field.label}</label>`;\n         else\n            templateLabel = `<label style=\"width: ${formSettings.labelWidth}px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\">${field.label}</label>`;\n      }\n\n      let newWidth = formSettings.labelWidth;\n\n      if (this.settings.formView) newWidth += 40;\n      else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         newWidth = 0;\n\n      const template =\n         `<div class=\"readonlyField\">${templateLabel}#template#</div>`.replace(\n            /#template#/g,\n            field\n               .columnHeader({\n                  width: newWidth,\n                  editable: true,\n               })\n               .template(rowData)\n         );\n\n      // Re-build template element\n      $$(this.ids.template)?.setHTML(template);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormSelectMultipleComponentComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormSelectMultiple_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field(),\n         settings = this.settings;\n      const options = [];\n\n      if (field?.key === \"user\") options.push(...field.getUsers());\n      else if (field)\n         options.push(...(field.settings.options ?? settings.options ?? []));\n\n      const ids = this.ids;\n      const _ui = {\n         id: ids.formItem,\n         view: settings.type || baseView.constructor.defaultValues().type,\n         options: options.map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n               hex: opt.hex,\n            };\n         }),\n      };\n\n      switch (_ui.view) {\n         case \"multicombo\":\n            _ui.tagMode = false;\n            _ui.css = \"hideWebixMulticomboTag\";\n            _ui.tagTemplate = (values) => {\n               const selectedOptions = [];\n               const $formItem = $$(ids.formItem) ?? $$(_ui.id);\n\n               values.forEach((val) => {\n                  selectedOptions.push($formItem.getList().getItem(val));\n               });\n\n               let vals = selectedOptions;\n\n               if (field.getSelectedOptions)\n                  vals = field.getSelectedOptions(field, selectedOptions);\n\n               const items = [];\n\n               vals.forEach((val) => {\n                  let hasCustomColor = \"\";\n                  let optionHex = \"\";\n\n                  if (field.settings.hasColors && val.hex) {\n                     hasCustomColor = \"hascustomcolor\";\n                     optionHex = `background: ${val.hex};`;\n                  }\n\n                  const text = val.text ? val.text : val.value;\n\n                  items.push(\n                     `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${val.id}\"><span>${text}</span><span class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span></span>`\n                  );\n               });\n\n               return items.join(\"\");\n            };\n\n            break;\n\n         case \"checkbox\":\n            // radio element could not be empty options\n            _ui.options.push({\n               id: \"temp\",\n               value: this.label(\"Option\"),\n            });\n\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field(),\n         $formItem = $$(this.ids.formItem);\n\n      return field.getValue($formItem, rowData);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormSelectSingleComponentComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormSelectSingle_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field(),\n         settings = baseView.settings;\n      const options = [];\n\n      if (field?.key === \"user\") options.push(...field.getUsers());\n      else if (field)\n         options.push(...(field.settings.options ?? settings.options ?? []));\n      else options.push(...(settings.options ?? []));\n\n      const _ui = {\n         view: settings.type || baseView.constructor.defaultValues().type,\n      };\n\n      if (field?.settings.hasColors) {\n         _ui.css = \"combowithcolors\";\n         _ui.options = {\n            view: \"suggest\",\n            body: {\n               view: \"list\",\n               data: options.map((opt) => {\n                  return {\n                     id: opt.id,\n                     value: opt.text || opt.value,\n                     hex: field.settings.hasColors ? opt.hex : \"\",\n                  };\n               }),\n               template: function (value) {\n                  const items = [];\n\n                  let hasCustomColor = \"\";\n                  let optionHex = \"\";\n\n                  if (value.hex) {\n                     hasCustomColor = \"hascustomcolor\";\n                     optionHex = `background: ${value.hex};`;\n                  }\n\n                  items.push(\n                     `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${value.id}\"><span>${value.value}</span></span>`\n                  );\n\n                  return items.join(\"\");\n               },\n            },\n         };\n      } else\n         _ui.options = options.map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text || opt.value,\n            };\n         });\n\n      // radio element could not be empty options\n      if (_ui.view === \"radio\" && _ui.options.length < 1)\n         _ui.options.push({\n            id: \"temp\",\n            value: this.label(\"Option\"),\n         });\n\n      return super.ui(_ui);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormTextboxComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormTextbox_${baseView.id}`, ids);\n      this.type =\n         this.settings.type ||\n         this.view.settings.type ||\n         this.view.constructor.defaultValues().type;\n   }\n\n   ui() {\n      const _ui = {};\n\n      switch (this.type) {\n         case \"single\":\n            _ui.view = \"text\";\n            break;\n         case \"multiple\":\n            _ui.view = \"textarea\";\n            _ui.height = 200;\n            break;\n         case \"rich\":\n            _ui.view = \"forminput\";\n            _ui.height = 200;\n            _ui.css = \"ab-rich-text\";\n            _ui.body = {\n               view: \"tinymce-editor\",\n               value: \"\",\n               cdn: \"/js/webix/extras/tinymce\",\n               config: {\n                  plugins: \"link\",\n                  menubar: \"format edit\",\n                  toolbar:\n                     \"undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | fontsizeselect | link\",\n               },\n            };\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   async onShow() {\n      if (this.type !== \"rich\") return;\n      await this.initTinyMCE();\n      const _ui = this.ui();\n      const _uiFormItem = _ui.rows[0];\n      let $formItem = $$(this.ids.formItem);\n\n      // WORKAROUND : to fix breaks TinyMCE when switch pages/tabs\n      // https://forum.webix.com/discussion/6772/switching-tabs-breaks-tinymce\n      if ($formItem) {\n         // recreate rich editor\n         $formItem = this.AB.Webix.ui(_uiFormItem, $formItem);\n\n         // Add dataCy to TinyMCE text editor\n         const baseView = this.view;\n\n         $formItem\n            .getChildViews()[0]\n            .getEditor(true)\n            .then((editor) => {\n               const dataCy = `${baseView.key} rich ${_uiFormItem.name} ${\n                  baseView.id ?? \"\"\n               } ${baseView.parent?.id ?? \"\"}`;\n\n               editor.contentAreaContainer.setAttribute(\"data-cy\", dataCy);\n            });\n      }\n   }\n\n   /**\n    * Ensure TinyMCE has been loaded and initialized.\n    */\n   async initTinyMCE() {\n      await this.AB.custom[\"tinymce-editor\"].init();\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormTreeComponent extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormTree_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      const _ui = {};\n\n      // this field may be deleted\n      if (!field) return super.ui(_ui);\n\n      const formSettings = baseView.parentFormComponent().settings || {};\n\n      const requiredClass =\n         field.settings.required === 1 ? \"webix_required\" : \"\";\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"webix_inp_top_label ${requiredClass}\">#label#</label>`;\n         else\n            templateLabel = `<label style=\"width: #width#px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"${requiredClass}\">#label#</label>`;\n      }\n\n      let newWidth = formSettings.labelWidth;\n\n      if (this.settings.formView) newWidth += 40;\n\n      const template = `${templateLabel}#template#`\n         .replace(/#width#/g, formSettings.labelWidth)\n         .replace(/#label#/g, field.label)\n         .replace(\n            /#template#/g,\n            field.columnHeader({\n               width: newWidth,\n            }).template\n         );\n\n      _ui.view = \"template\";\n      _ui.css = \"webix_el_box\";\n      _ui.height =\n         field.settings.useHeight === 1\n            ? parseInt(field.settings.imageHeight)\n            : 38;\n      _ui.borderless = true;\n\n      _ui.template = `<div class=\"customField\">${template}</div>`;\n\n      _ui.onClick = {\n         customField: (id, e, trg) => {\n            const rowData = {},\n               node = $$(this.ids.formItem).$view;\n\n            rowData[field.columnName] = this.getValue();\n            field.customEdit(rowData, this.AB._App, node, this);\n         },\n      };\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      let vals = $$(this.ids.formItem).getValues();\n\n      // Pass empty string if the returned values is empty array\n      if (Array.isArray(vals) && vals.length === 0) vals = \"\";\n\n      return vals;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewImageComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewImage_${baseView.id}`,\n         Object.assign({ image: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _ui = super.ui([\n         {\n            cols: [\n               {\n                  id: this.ids.image,\n                  view: \"template\",\n                  template: \"\",\n                  height: settings.height,\n                  width: settings.width,\n               },\n               {},\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $image = $$(this.ids.image);\n      if (!$image) return;\n\n      const settings = this.settings;\n\n      if (settings.filename)\n         $image.define(\n            \"template\",\n            `<img src=\"/file/${settings.filename}\" height=\"${settings.height}\" width=\"${settings.width}\">`\n         );\n      else $image.define(\"template\", \"\");\n\n      $image.refresh();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABFormSidePanel = require(\"../ABViewKanbanFormSidePanel\");\n\nmodule.exports = class ABViewKanbanComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewKanBan_${baseView.id}`,\n         Object.assign(\n            {\n               kanbanView: \"\",\n\n               kanban: \"\",\n               resizer: \"\",\n               formSidePanel: \"\",\n            },\n            ids\n         )\n      );\n\n      this.FormSide = new ABFormSidePanel(\n         this,\n         this.ids.formSidePanel,\n         this.settings.editFields\n      );\n\n      this.CurrentVerticalField = null;\n      this.CurrentHorizontalField = null;\n      this.CurrentOwnerField = null;\n\n      this.TextTemplate = baseView.TextTemplate;\n\n      this._updatingOwnerRowId = null;\n      this._ABFieldConnect = null;\n      this._ABFieldUser = null;\n      this._ABFieldList = null;\n   }\n\n   get ABFieldConnect() {\n      return (this._ABFieldConnect =\n         this._ABFieldConnect ||\n         this.AB.Class.ABFieldManager.fieldByKey(\"connectObject\"));\n   }\n\n   get ABFieldUser() {\n      return (this._ABFieldUser =\n         this._ABFieldUser || this.AB.Class.ABFieldManager.fieldByKey(\"user\"));\n   }\n\n   get ABFieldList() {\n      return (this._ABFieldList =\n         this._ABFieldList || this.AB.Class.ABFieldManager.fieldByKey(\"list\"));\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      this.linkPage = this.view.linkPageHelper.component();\n\n      const _ui = super.ui([\n         {\n            id: ids.kanbanView,\n            cols: [\n               {\n                  id: ids.kanban,\n                  view: \"kanban\",\n                  cols: [],\n                  userList: {\n                     view: \"menu\",\n                     // yCount: 8,\n                     // scroll: false,\n                     template: '<i class=\"fa fa-user\"></i> #value#',\n                     width: 150,\n                     on: {\n                        onSelectChange: function () {\n                           // get this row id from onAvatarClick event\n                           if (!self._updatingOwnerRowId) return;\n\n                           const userId = this.getSelectedId(false);\n                           if (!userId) return;\n\n                           self.updateOwner(self._updatingOwnerRowId, userId);\n                        },\n                     },\n                  },\n                  editor: false, // we use side bar\n                  users: [],\n                  tags: [],\n                  data: [],\n                  on: {\n                     onListAfterSelect: (itemId, list) => {\n                        this.CurrentDatacollection?.setCursor(itemId);\n                        this.emit(\"select\", itemId);\n\n                        // link pages events\n                        const editPage = this.settings.editPage;\n                        if (editPage)\n                           this.linkPage.changePage(editPage, itemId);\n\n                        const detailsPage = this.settings.detailsPage;\n                        if (detailsPage)\n                           this.linkPage.changePage(detailsPage, itemId);\n                     },\n                     onAfterStatusChange: (rowId, status /*, list */) => {\n                        this.updateStatus(rowId, status);\n                     },\n                     onAvatarClick: (rowId /*, ev, node, list */) => {\n                        // keep this row id for update owner data in .userList\n                        this._updatingOwnerRowId = rowId;\n                     },\n                  },\n               },\n               {\n                  id: ids.resizer,\n                  view: \"resizer\",\n                  css: \"bg_gray\",\n                  width: 11,\n                  hidden: true,\n               },\n               this.FormSide.ui(),\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const abWebix = this.AB.Webix;\n\n      if (this.$kb) abWebix.extend(this.$kb, abWebix.ProgressBar);\n\n      this.FormSide.init(AB);\n      this.FormSide.on(\"add\", (newVals) => {\n         this.saveData(newVals);\n      });\n      this.FormSide.on(\"update\", (updateVals) => {\n         this.saveData(updateVals);\n      });\n\n      let dc = this.view.datacollection;\n      if (dc) this.datacollectionLoad(dc);\n\n      this.linkPage.init({\n         view: this.view,\n         datacollection: dc,\n      });\n\n      this.show();\n   }\n\n   get $kb() {\n      return (this._kb = this._kb || $$(this.ids.kanban));\n   }\n\n   kanbanListTemplate() {\n      return {\n         icons: [\n            // { icon: \"mdi mdi-comment\", show: function (obj) { return !!obj.comments }, template: \"#comments.length#\" },\n            {\n               icon: \"fa fa-trash-o\",\n               click: (rowId /*, e */) => {\n                  this.removeCard(rowId);\n               },\n            },\n         ],\n         // avatar template\n         templateAvatar: (obj) => {\n            if (\n               this.CurrentOwnerField &&\n               obj[this.CurrentOwnerField.columnName]\n            )\n               return this.CurrentOwnerField.format(obj);\n            else return \"<span class='webix_icon fa fa-user'></span>\";\n         },\n         // template for item body\n         // show item image and text\n         templateBody: (data) => {\n            // if (!this.settings.template)\n            if (!this.TextTemplate.text)\n               return this.CurrentObject?.displayData(data);\n\n            // return our default text template\n            return this.TextTemplate.displayText(data);\n         },\n      };\n   }\n\n   /**\n    * @function hide()\n    *\n    * hide this component.\n    */\n   hide() {\n      $$(this.ids.kanbanView)?.hide();\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    */\n   async show() {\n      const ids = this.ids;\n\n      $$(ids.kanbanView)?.show();\n\n      this.FormSide.hide();\n\n      $$(ids.resizer)?.hide();\n\n      var CurrentObject = this.CurrentObject;\n      if (!CurrentObject) {\n         CurrentObject = this.datacollection?.datasource;\n      }\n      if (!CurrentObject) return;\n\n      // Get vertical grouping field and populate to kanban list\n      // NOTE: this field should be the select list type\n      const CurrentVerticalField = CurrentObject.fieldByID(\n         this.settings.verticalGroupingField\n      );\n      if (!CurrentVerticalField) return;\n\n      this.CurrentVerticalField = CurrentVerticalField;\n\n      let horizontalOptions = [];\n\n      const CurrentHorizontalField = CurrentObject.fieldByID(\n         this.settings.horizontalGroupingField\n      );\n\n      this.CurrentHorizontalField = CurrentHorizontalField;\n\n      if (\n         CurrentHorizontalField &&\n         CurrentHorizontalField instanceof this.ABFieldConnect\n      )\n         // Pull horizontal options\n         horizontalOptions = await CurrentHorizontalField.getOptions();\n\n      // Option format -  { id: \"1543563751920\", text: \"Normal\", hex: \"#4CAF50\" }\n      const verticalOptions = (CurrentVerticalField.settings.options || []).map(\n         (opt) => {\n            // Vertical & Horizontal fields\n            if (CurrentVerticalField && CurrentHorizontalField) {\n               let rows = [],\n                  // [{\n                  //    id: '',\n                  //    text: ''\n                  // }]\n                  horizontalVals = [];\n\n               // pull options of the Horizontal field\n               if (CurrentHorizontalField instanceof this.ABFieldList) {\n                  // make a copy of the settings.\n                  horizontalVals = (\n                     CurrentHorizontalField.settings.options || []\n                  ).map((o) => o);\n               } else if (CurrentHorizontalField instanceof this.ABFieldUser) {\n                  horizontalVals = CurrentHorizontalField.getUsers().map(\n                     (u) => {\n                        return {\n                           id: u.id,\n                           text: u.text || u.value,\n                        };\n                     }\n                  );\n               } else if (CurrentHorizontalField instanceof this.ABFieldConnect)\n                  horizontalVals = horizontalOptions.map(({ id, text }) => ({\n                     id,\n                     text,\n                  }));\n\n               horizontalVals.push({\n                  id: null,\n                  text: this.label(\"Other\"),\n               });\n\n               horizontalVals.forEach((val) => {\n                  const statusOps = {};\n\n                  statusOps[CurrentVerticalField.columnName] = opt.id;\n                  statusOps[CurrentHorizontalField.columnName] = val.id;\n\n                  // Header\n                  rows.push({\n                     template: val.text,\n                     height: 20,\n                     css: \"progress_header\",\n                  });\n\n                  // Kanban list\n                  rows.push({\n                     view: \"kanbanlist\",\n                     status: statusOps,\n                     type: this.kanbanListTemplate(),\n                  });\n               });\n\n               return {\n                  header: opt.text,\n                  body: {\n                     margin: 0,\n                     rows: rows,\n                  },\n               };\n            }\n            // Vertical field only\n            else if (CurrentVerticalField) {\n               const statusOps = {};\n\n               statusOps[CurrentVerticalField.columnName] = opt.id;\n\n               return {\n                  header: opt.text,\n                  body: {\n                     view: \"kanbanlist\",\n                     status: statusOps,\n                     type: this.kanbanListTemplate(),\n                  },\n               };\n            }\n         }\n      );\n\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      // Rebuild kanban that contains options\n      // NOTE: webix kanban does not support dynamic vertical list\n      abWebix.ui(verticalOptions, $$(ids.kanban));\n      $$(ids.kanban).reconstruct();\n\n      // Owner field\n      const CurrentOwnerField = CurrentObject.fieldByID(\n         this.settings.ownerField\n      );\n\n      this.CurrentOwnerField = CurrentOwnerField;\n\n      if (CurrentOwnerField) {\n         const $menuUser = $$(ids.kanban).getUserList();\n\n         $menuUser.clearAll();\n\n         if (CurrentOwnerField instanceof this.ABFieldUser) {\n            const users = ab.Account.userList().map((u) => {\n               return {\n                  id: u.username,\n                  value: u.username,\n               };\n            });\n\n            $menuUser.parse(users);\n         } else if (CurrentOwnerField instanceof this.ABFieldConnect) {\n            const options = await CurrentOwnerField.getOptions();\n\n            try {\n               $menuUser.parse(\n                  options.map((opt) => {\n                     return {\n                        id: opt.id,\n                        value: opt.text,\n                     };\n                  })\n               );\n            } catch (e) {\n               // TODO: remove this.  Trying to catch a random webix error:\n               // Cannot read properties of null (reading 'driver')\n               console.error(e);\n               console.warn(options);\n            }\n         }\n      }\n   }\n\n   busy() {\n      this.$kb?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      this.$kb?.hideProgress?.();\n   }\n\n   objectLoad(object) {\n      super.objectLoad(object);\n\n      this.TextTemplate.objectLoad(object);\n      this.FormSide.objectLoad(object);\n   }\n\n   /**\n    * @method datacollectionLoad\n    *\n    * @param datacollection {ABDatacollection}\n    */\n   datacollectionLoad(datacollection) {\n      super.datacollectionLoad(datacollection);\n\n      const DC = this.CurrentDatacollection || datacollection;\n\n      if (DC) {\n         DC.bind(this.$kb);\n\n         const obj = DC.datasource;\n\n         if (obj) this.objectLoad(obj);\n\n         return;\n      }\n\n      this.$kb.unbind();\n   }\n\n   async updateStatus(rowId, status) {\n      if (!this.CurrentVerticalField) return;\n\n      // Show loading cursor\n      this.busy();\n\n      let patch = {};\n\n      // update multi-values\n      if (status instanceof Object) patch = status;\n      // update single value\n      else patch[this.CurrentVerticalField.columnName] = status;\n\n      // update empty value\n      let needRefresh = false;\n\n      for (const key in patch)\n         if (!patch[key]) {\n            patch[key] = \"\";\n\n            // WORKAROUND: if update data is empty, then it will need to refresh\n            // the kanban after update\n            needRefresh = true;\n         }\n\n      try {\n         await this.CurrentObject?.model().update(rowId, patch);\n\n         this.ready();\n\n         if (needRefresh) this.show();\n\n         // update form data\n         if (this.FormSide.isVisible()) {\n            const data = $$(this.ids.kanban).getItem(rowId);\n\n            this.FormSide.refresh(data);\n         }\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABViewKanban:updateStatus(): Error saving item:\",\n            rowId,\n            patch,\n         });\n      }\n   }\n\n   async updateOwner(rowId, val) {\n      if (!this.CurrentOwnerField) return;\n\n      // Show loading cursor\n      this.busy();\n\n      const patch = {};\n\n      patch[this.CurrentOwnerField.columnName] = val;\n\n      try {\n         const updatedRow = await this.CurrentObject?.model().update(\n            rowId,\n            patch\n         );\n\n         // update card\n         this.$kb?.updateItem(rowId, updatedRow);\n\n         // update form data\n         if (this.FormSide.isVisible()) {\n            const data = this.$kb.getItem(rowId);\n\n            this.FormSide.refresh(data);\n         }\n\n         this.ready();\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABViewKanban:updateOwner(): Error saving item:\",\n            rowId,\n            val,\n         });\n\n         this.ready();\n      }\n   }\n\n   saveData(data) {\n      // update\n      if (data.id && this.$kb.exists(data.id))\n         this.$kb.updateItem(data.id, data);\n      // insert\n      else this.$kb.add(data);\n   }\n\n   unselect() {\n      if (this.$kb)\n         this.$kb.eachList((list /*, status*/) => {\n            list?.unselect?.();\n         });\n   }\n\n   addCard() {\n      this.unselect();\n\n      // show the side form\n      this.FormSide.show();\n      $$(this.ids.resizer).show();\n   }\n\n   async removeCard(rowId) {\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      abWebix.confirm({\n         title: this.label(\"Remove card\"),\n         text: this.label(\"Do you want to delete this card?\"),\n         callback: async (result) => {\n            if (!result) return;\n\n            this.busy();\n\n            try {\n               const response = await this.CurrentObject?.model().delete(rowId);\n\n               if (response.numRows > 0) {\n                  this.$kb.remove(rowId);\n               } else {\n                  abWebix.alert({\n                     text: this.label(\n                        \"No rows were effected. This does not seem right.\"\n                     ),\n                  });\n               }\n            } catch (err) {\n               ab.notify.developer(err, {\n                  message: \"ABViewKanban:removeCard(): Error deleting item:\",\n                  rowId,\n               });\n            }\n\n            this.ready();\n         },\n      });\n   }\n\n   /**\n    * @method setFields()\n    * Save the current view options.\n    * @param options - {\n    *       verticalGrouping:    {ABField} - required\n    *       horizontalGrouping:  {ABField} - optional\n    *       ownerField:          {ABField} - optional\n    * }\n    */\n   setFields(options) {\n      this.CurrentVerticalField = options.verticalGrouping;\n      this.CurrentHorizontalField = options.horizontalGrouping;\n      this.CurrentOwnerField = options.ownerField;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewLabelComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewLabel_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n\n      const _ui = super.ui([\n         this.uiFormatting({\n            view: \"label\",\n            // css: 'ab-component-header ab-ellipses-text',\n            label: baseView.text || \"*\",\n            align: this.settings.alignment,\n            type: {\n               height: \"auto\",\n            },\n         }),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   /**\n    * @method uiFormatting\n    * a common routine to properly update the displayed label\n    * UI with the css formatting for the given .settings\n    * @param {obj} _ui the current webix.ui definition\n    * @return {obj} a properly formatted webix.ui definition\n    */\n   uiFormatting(ui) {\n      // add different css settings based upon it's format\n      // type.\n      switch (parseInt(this.settings.format)) {\n         // normal\n         case 0:\n            ui.css = \"ab-component-label ab-ellipses-text\";\n            break;\n\n         // title\n         case 1:\n            ui.css = \"ab-component-header ab-ellipses-text\";\n            break;\n\n         // description\n         case 2:\n            ui.css = \"ab-component-description ab-ellipses-text\";\n            break;\n      }\n\n      return ui;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewLayoutComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewLayout_${baseView.id}`, ids);\n\n      const viewComponents = this.viewComponents ?? {}; // { viewId: viewComponent, ..., viewIdn: viewComponent }\n\n      baseView.views().forEach((v) => {\n         viewComponents[v.id] = v.component();\n      });\n\n      this.viewComponents = viewComponents;\n   }\n\n   ui() {\n      const viewComponents = this.viewComponents;\n      const uiComponents = Object.keys(viewComponents)\n         .map((vId) => viewComponents[vId].ui())\n         .filter((ui) => ui);\n\n      if (uiComponents.length == 0) {\n         uiComponents.push({});\n         uiComponents.push({\n            view: \"label\",\n            label: this.label(\"no content\"),\n         });\n         uiComponents.push({});\n      }\n\n      const _ui = super.ui([\n         {\n            view: \"layout\",\n            cols: uiComponents,\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB);\n\n      const baseView = this.view;\n\n      // make sure each of our child views get .init() called\n      baseView.views().forEach((v) => {\n         const component = this.viewComponents[v.id];\n\n         // initial sub-component\n         component?.init(AB, accessLevel);\n\n         // Trigger 'changePage' event to parent\n         baseView.eventAdd({\n            emitter: v,\n            eventName: \"changePage\",\n            listener: (pageId) => {\n               baseView.changePage(pageId);\n            },\n         });\n      });\n   }\n\n   onShow() {\n      // calll .onShow in child components\n      this.view.views().forEach((v) => {\n         const component = this.viewComponents[v.id];\n         component?.onShow();\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewListComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewList_${baseView.id}`,\n         Object.assign({ list: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _uiList = {\n         id: this.ids.list,\n         view: \"dataview\",\n         type: {\n            width: 1000,\n            height: 30,\n         },\n         template: (item) => {\n            const field = this.view.field();\n\n            if (!field) return \"\";\n\n            return field.format(item);\n         },\n      };\n\n      // set height or autoHeight\n      if (settings.height !== 0) _uiList.height = settings.height;\n      else _uiList.autoHeight = true;\n\n      const _ui = super.ui([_uiList]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      // bind dc to component\n      dc.bind($$(this.ids.list));\n      // $$(ids.list).sync(dv);\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewMenuComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewMenu_${baseView.id}`,\n         Object.assign(\n            {\n               menu: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _ui = super.ui([\n         parseInt(settings.menuInToolbar) ? this.uiToolbar() : this.uiMenu(),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiMenu() {\n      const baseView = this.view;\n      const settings = this.settings;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const css = `${settings.buttonStyle || defaultSettings.buttonStyle} ${\n         settings.menuAlignment || defaultSettings.menuAlignment\n      } `;\n\n      return {\n         id: this.ids.menu,\n         view: \"menu\",\n         autoheight: true,\n         autowidth: true,\n         datatype: \"json\",\n         css: css,\n         layout: settings.orientation || defaultSettings.orientation,\n         on: {\n            onMenuItemClick: (id /*, e, node */) => {\n               this.onClick(id);\n            },\n            onAfterRender: () => {\n               this.defineCypress();\n            },\n         },\n         type: {\n            subsign: true,\n         },\n      };\n   }\n\n   uiToolbar() {\n      const settings = this.settings;\n      const baseView = this.view;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const _uiMenu = this.uiMenu();\n\n      let elems = [];\n      let menuIncluded = false;\n\n      // Legacy support: use old settings values if translated values are not set\n      const menuTextLeft = baseView.menuTextLeft ?? settings.menuTextLeft;\n      const menuTextCenter = baseView.menuTextCenter ?? settings.menuTextCenter;\n      const menuTextRight = baseView.menuTextRight ?? settings.menuTextRight;\n\n      if (settings.menuPosition === \"left\") {\n         menuIncluded = true;\n         elems.push(_uiMenu);\n      } else if (menuTextLeft?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push({\n            view: \"label\",\n            label: menuTextLeft,\n            align: \"left\",\n            width: width,\n         });\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (settings?.menuPosition === \"center\") {\n         menuIncluded = true;\n\n         elems.push(_uiMenu);\n      } else if (menuTextCenter?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push(\n            {},\n            {\n               view: \"label\",\n               label: menuTextCenter,\n               align: \"center\",\n               width: width,\n            },\n            {}\n         );\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (settings?.menuPosition === \"right\") {\n         menuIncluded = true;\n\n         elems.push(_uiMenu);\n      } else if (menuTextRight?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push({\n            view: \"label\",\n            label: menuTextRight,\n            align: \"right\",\n            width: width,\n         });\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (menuIncluded === false) elems = [_uiMenu];\n\n      return {\n         view: \"toolbar\",\n         css: settings.menuTheme ?? defaultSettings.menuTheme,\n         padding: settings.menuPadding\n            ? parseInt(settings.menuPadding)\n            : defaultSettings.menuPadding,\n         elements: elems,\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $menu = $$(this.ids.menu);\n      const baseView = this.view;\n\n      if ($menu) {\n         const settings = this.settings;\n\n         baseView.ClearPagesInView($menu);\n\n         if (settings.order?.length) {\n            baseView.AddPagesToView($menu, settings.order);\n            // Force onAfterRender to fire\n            $menu.refresh();\n         }\n      }\n   }\n\n   onClick(itemId) {\n      const $menu = $$(this.ids.menu);\n      let $item;\n      try {\n         $item = $menu.getMenuItem(itemId);\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context:\n               \"ABViewMenuComponent > onClick error gettint menu / menu item\",\n            itemId,\n            menu: {\n               id: this.view.id,\n               settings: this.view.settings,\n            },\n         });\n         return;\n      }\n      const baseView = this.view;\n\n      // switch tab view\n      if ($item.type === \"tab\") {\n         baseView.changePage($item.pageId);\n\n         const redirectPage = baseView.application.pages(\n            (p) => p.id === $item.pageId,\n            true\n         )[0];\n\n         if (!redirectPage) return;\n\n         const tabView = redirectPage.views((v) => v.id === $item.id, true)[0];\n\n         if (!tabView) return;\n\n         const tab = tabView.parent;\n\n         if (!tab) return;\n\n         this.toggleParent(tab);\n\n         // if (!$$(tabView.id) || !$$(tabView.id).isVisible()) {\n         const showIt = setInterval(() => {\n            if ($$(tabView.id) && $$(tabView.id).isVisible()) {\n               clearInterval(showIt);\n\n               return;\n            }\n\n            tab.emit(\"changeTab\", tabView.id);\n         }, 100);\n         // }\n      }\n      // switch page\n      else baseView.changePage(itemId);\n   }\n\n   toggleParent(element) {\n      if (!element.parent) return false;\n\n      const parentElem = element.parent;\n\n      if (!parentElem?.parent) return false;\n\n      parentElem.parent.emit(\"changeTab\", parentElem.id);\n      this.toggleParent(parentElem.parent);\n   }\n\n   defineCypress() {\n      const $menu = $$(this.ids.menu);\n\n      if (!$menu) return;\n\n      $menu.data.each((item) => {\n         const node = $menu.getItemNode(item.id);\n\n         if (!node) return;\n\n         // get linked page/tab info so we can use its name in the data-cy\n         const viewInfo = this.AB.definitionByID(item.id);\n\n         node.setAttribute(\n            \"data-cy\",\n            `menu-item ${viewInfo?.name} ${item.id} ${this.view.id}`\n         );\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nconst SMALL_PAGE_WIDTH = 150;\nconst BIG_PAGE_WIDTH = 250;\n\nmodule.exports = class ABViewPDFImporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewPDFImporter_${baseView.id}`,\n         Object.assign(\n            {\n               fileUploader: \"\",\n               uploadList: \"\",\n               dataview: \"\",\n               fullImagePopup: \"\",\n               fullImageCarousel: \"\",\n               fullImageSelectToggle: \"\",\n               fullImageLabel: \"\",\n               selectAll: \"\",\n               unselectAll: \"\",\n               submit: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      const _ui = super.ui([\n         {\n            rows: [\n               {\n                  cols: [\n                     {\n                        id: ids.fileUploader,\n                        view: \"uploader\",\n                        name: \"records\",\n                        link: ids.uploadList,\n                        label: this.label(\"Upload a PDF file\"),\n                        inputWidth: 200,\n                        width: 210,\n                        accept: \"application/pdf\",\n                        multiple: false,\n                        autosend: false,\n                        type: \"icon\",\n                        icon: \"fa fa-file-pdf-o\",\n                        on: {\n                           onBeforeFileAdd: (fileInfo) => {\n                              this._csvFileInfo = fileInfo;\n                              if (!this._csvFileInfo) return false;\n\n                              this.loadFile();\n\n                              return true;\n                           },\n                        },\n                     },\n                     {\n                        id: ids.uploadList,\n                        view: \"list\",\n                        type: \"uploader\",\n                        autoheight: true,\n                        borderless: true,\n                        onClick: {\n                           webix_remove_upload: (e, id) => {\n                              this.removeFile(id);\n                           },\n                        },\n                     },\n                     {\n                        width: 10,\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-th-large\",\n                        maxWidth: 30,\n                        click: () => {\n                           this.displayBig();\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-th\",\n                        maxWidth: 30,\n                        click: () => {\n                           this.displaySmall();\n                        },\n                     },\n                  ],\n               },\n               {\n                  height: 10,\n               },\n               {\n                  id: ids.dataview,\n                  view: \"dataview\",\n                  borderless: true,\n                  css: \"pdf-data-view\",\n                  multiselect: false,\n                  select: false,\n                  type: {\n                     template: (item) => {\n                        return this.pageTemplate(item);\n                     },\n                     width: \"auto\",\n                     height: \"auto\",\n                  },\n                  on: {\n                     onSelectChange: (pageIds) => {\n                        this.renderPageImages();\n                     },\n                     onItemClick: function (id, e, node) {\n                        // Unselect\n                        if (e?.target?.className?.includes?.(\"unselect-page\")) {\n                           self.unselect(id);\n                        }\n                        // Select\n                        else if (\n                           e?.target?.className?.includes?.(\"select-page\")\n                        ) {\n                           self.select(id);\n                        }\n                        // Zoom\n                        else if (e?.target?.className?.includes?.(\"pdf-zoom\")) {\n                           self._fullImagePopup.show();\n                           $$(self.ids.fullImageCarousel).setActiveIndex(\n                              parseInt(id ?? 0) - 1\n                           );\n                           self.refreshFullImage();\n                        }\n                     },\n                  },\n               },\n               {\n                  height: 10,\n               },\n               {\n                  cols: [\n                     {\n                        id: ids.selectAll,\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-check-square-o\",\n                        maxWidth: 160,\n                        label: this.label(\"Select All\"),\n                        click: () => {\n                           this.selectAll();\n                        },\n                     },\n                     {\n                        id: ids.unselectAll,\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-square-o\",\n                        maxWidth: 160,\n                        label: this.label(\"Unselect All\"),\n                        click: () => {\n                           this.unselectAll();\n                        },\n                     },\n                     {\n                        fillspace: true,\n                     },\n                     {\n                        id: ids.submit,\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        type: \"icon\",\n                        icon: \"fa fa-floppy-o\",\n                        disabled: true,\n                        maxWidth: 180,\n                        label: this.label(\"Submit\"),\n                        click: () => {\n                           this.submit();\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n      ]);\n\n      return _ui;\n   }\n\n   uiPopup() {\n      const ids = this.ids;\n      return {\n         id: ids.fullImagePopup,\n         view: \"window\",\n         modal: true,\n         position: \"center\",\n         headHeight: 25,\n         head: {\n            cols: [\n               { fillspace: true },\n               {\n                  view: \"button\",\n                  type: \"icon\",\n                  icon: \"fa fa-times\",\n                  maxWidth: 25,\n                  height: 25,\n                  click: () => {\n                     $$(ids.fullImagePopup)?.hide();\n                  },\n               },\n            ],\n         },\n         body: {\n            rows: [\n               {\n                  id: ids.fullImageCarousel,\n                  view: \"carousel\",\n                  width: 600,\n                  height: 500,\n                  navigation: {\n                     items: true,\n                     buttons: true,\n                     type: \"side\",\n                  },\n                  cols: [],\n                  on: {\n                     onShow: () => {\n                        this.refreshFullImage();\n                     },\n                  },\n               },\n               {\n                  view: \"layout\",\n                  cols: [\n                     {\n                        id: ids.fullImageSelectToggle,\n                        view: \"toggle\",\n                        type: \"icon\",\n                        offIcon: \"fa fa-square-o\",\n                        onIcon: \"fa fa-check-square-o\",\n                        offLabel: this.label(\"Unselected\"),\n                        onLabel: this.label(\"Selected\"),\n                        width: 130,\n                        on: {\n                           onChange: (isSelected) => {\n                              const activeIndex = $$(\n                                 this.ids.fullImageCarousel\n                              ).getActiveIndex();\n                              const pageNumber = activeIndex + 1;\n\n                              if (isSelected) this.select(pageNumber);\n                              else this.unselect(pageNumber);\n                           },\n                        },\n                     },\n                     {\n                        fillspace: true,\n                     },\n                     {\n                        id: ids.fullImageLabel,\n                        view: \"label\",\n                        width: 120,\n                        label: `${this.label(\"Page Number\")}: ${\"#\"}`,\n                     },\n                  ],\n               },\n            ],\n         },\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $dataview = $$(this.ids.dataview);\n      if ($dataview) this.AB.Webix.extend($dataview, webix.ProgressBar);\n\n      if (!this._fullImagePopup) {\n         const fullImagePopup = this.uiPopup();\n         this._fullImagePopup = this.AB.Webix.ui(fullImagePopup);\n      }\n   }\n\n   onShow() {\n      this.initPdfjs();\n      super.onShow();\n   }\n\n   /**\n    * Loads the pdfjs dependecies. We defer loading since it is a large library\n    * that is not needed in the initial page load.\n    */\n   async initPdfjs() {\n      if (this.pdfjs && window.pdfjsWorker) return;\n      this.busy();\n      this.pdfjs = (\n         await import(\n            /* webpackPrefetch: true */\n            \"../../../../init/pdfjs\"\n         )\n      ).default;\n      this.ready();\n   }\n\n   async _readFileBuffer() {\n      const _csvFileInfo = this._csvFileInfo;\n      if (!_csvFileInfo || !_csvFileInfo.file)\n         return Promise.resolve(new ArrayBuffer(0));\n\n      const fileReader = new FileReader();\n\n      return new Promise((resolve, reject) => {\n         fileReader.onload = (event) => {\n            const fileBuffer = event.target.result;\n            resolve(fileBuffer);\n         };\n         fileReader.onerror = (event) => {\n            reject(event);\n         };\n         fileReader.readAsArrayBuffer(_csvFileInfo.file);\n      });\n   }\n\n   async _toBlob(pageNumber, canvas) {\n      if (!canvas) return;\n\n      return new Promise((resolve, reject) => {\n         canvas.toBlob((blob) => {\n            const file = new File([blob], `${pageNumber}.png`, {\n               type: \"image/png\",\n            });\n\n            resolve(file);\n         }, \"image/png\");\n      });\n   }\n\n   async _uploadImage(pageNumber) {\n      // set quality of the saving image\n      const WIDTH_OF_SAVE_IMAGE = 1200;\n\n      // Create a temporary CANVAS dom to render page image with specify the height\n      const canvasId = `${this.view.id}_temp_canvas`;\n      const canvas =\n         document.getElementById(canvasId) ?? document.createElement(\"canvas\");\n      canvas.id = canvasId;\n      canvas.width = WIDTH_OF_SAVE_IMAGE;\n\n      await this.showPage(pageNumber, canvas);\n      const fileBlob = await this._toBlob(pageNumber, canvas);\n\n      return new Promise((resolve, reject) => {\n         // Create a uploader to upload images\n         const $uploader = this.AB.Webix.ui({\n            view: \"uploader\",\n            apiOnly: true,\n            upload: this.field.urlUpload(),\n            inputName: \"file\",\n            multiple: false,\n            on: {\n               // when upload is complete:\n               onFileUpload: (item, response) => {\n                  // RETURN HERE\n                  resolve(response?.data?.uuid);\n               },\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  reject(response);\n               },\n               onUploadComplete: () => $uploader.destructor(),\n            },\n         });\n\n         $uploader.addFile(fileBlob, fileBlob.size);\n      });\n   }\n\n   _increaseProgressValue() {\n      const $dataview = $$(this.ids.dataview);\n      const maxProgressStep = ($dataview.getSelectedId(true) ?? []).length * 2;\n\n      this._progressSteps = this._progressSteps ?? 0;\n      this._progressSteps++;\n\n      $dataview?.showProgress?.({\n         type: \"bottom\",\n         position: this._progressSteps / maxProgressStep,\n      });\n   }\n\n   async loadFile() {\n      this.clearDataview();\n\n      const _csvFileInfo = this._csvFileInfo;\n      if (!_csvFileInfo) return;\n\n      const fileBuffer = await this._readFileBuffer();\n      this._pdfDoc = await this.pdfjs.getDocument(fileBuffer).promise;\n\n      const total_page = this._pdfDoc.numPages;\n      const $dataview = $$(this.ids.dataview);\n      const $carousel = $$(this.ids.fullImageCarousel);\n      const carousel_list = [];\n      for (let pageNumber = 1; pageNumber <= total_page; pageNumber++) {\n         $dataview.add({\n            id: pageNumber,\n            pageNumber,\n         });\n\n         carousel_list.push({\n            template: (item) => {\n               return this.fullImageTemplate(item);\n            },\n            data: {\n               pageNumber,\n            },\n         });\n      }\n\n      this.renderPageImages();\n      if ($carousel) this.AB.Webix.ui(carousel_list, $carousel);\n\n      // Select all of images by default\n      this.selectAll();\n\n      $$(this.ids.submit)?.enable();\n   }\n\n   removeFile(id) {\n      $$(this.ids.uploadList)?.remove(id);\n\n      delete this._pdfDoc;\n      delete this._csvFileInfo;\n      this.clearDataview();\n\n      $$(this.ids.submit)?.disable();\n\n      return true;\n   }\n\n   pageTemplateId(pageNumber) {\n      return `pdf-importer-${this.view.id}-${pageNumber}`;\n   }\n\n   pageTemplate(item) {\n      const $dataview = $$(this.ids.dataview);\n      let selectedPageIds = $dataview.getSelectedId(true);\n\n      return `\n      <div>\n         <div class=\"pdf-data-view-item\">\n            <div>\n            ${\n               selectedPageIds.filter((pageId) => pageId == item.id).length\n                  ? '<i class=\"unselect-page fa fa-check-square-o\"></i>'\n                  : '<i class=\"select-page fa fa-square-o\"></i>'\n            }\n            </div>\n            <div style=\"width: 15px;\">\n               ${item.pageNumber}\n            </div>\n         </div>\n         <div class=\"pdf-zoom pdf-data-view-image\">\n            <canvas class=\"pdf-zoom\" width=\"${\n               this.pageItemWidth\n            }\" id=\"${this.pageTemplateId(item.pageNumber)}\"></canvas>\n            <div class=\"pdf-zoom pdf-data-view-image-icon\">\n               <i class=\"pdf-zoom fa fa-search-plus fa-4x\"></i>\n            </div>\n         </div>\n      </div>\n      `;\n   }\n\n   renderPageImages() {\n      const $dataview = $$(this.ids.dataview);\n      $dataview?.find({}).forEach((item) => {\n         const canvas_dom = document.querySelector(\n            `#${this.pageTemplateId(item.pageNumber)}`\n         );\n         this.showPage(item.pageNumber, canvas_dom);\n      });\n   }\n\n   async showPage(pageNumber, canvas_dom) {\n      if (!this._pdfDoc) return;\n\n      pageNumber = parseInt(pageNumber);\n      const page = await this._pdfDoc.getPage(pageNumber);\n      const pdf_original_width = page.getViewport({ scale: 1 }).width;\n      const scale_required = canvas_dom.width / pdf_original_width;\n\n      // get viewport to render the page at required scale\n      const viewport = page.getViewport({ scale: scale_required });\n      canvas_dom.height = viewport.height;\n\n      return page.render({\n         canvasContext: canvas_dom.getContext(\"2d\"),\n         viewport: viewport,\n      }).promise;\n   }\n\n   clearDataview() {\n      const $dataview = $$(this.ids.dataview);\n      const $carousel = $$(this.ids.fullImageCarousel);\n\n      $dataview?.clearAll();\n      if ($carousel)\n         this.AB.Webix.ui(\n            [\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  height: $carousel.height,\n                  label: this.label(\"No image\"),\n               },\n            ],\n            $carousel\n         );\n   }\n\n   displaySmall() {\n      this._isDisplayBig = false;\n      $$(this.ids.dataview)?.render();\n      this.renderPageImages();\n   }\n\n   displayBig() {\n      this._isDisplayBig = true;\n      $$(this.ids.dataview)?.render();\n      this.renderPageImages();\n   }\n\n   get pageItemWidth() {\n      return this._isDisplayBig ? BIG_PAGE_WIDTH : SMALL_PAGE_WIDTH;\n   }\n\n   select(pageNumber) {\n      const $dataview = $$(this.ids.dataview);\n\n      let selectedIds = $dataview.getSelectedId(true);\n\n      selectedIds.push(pageNumber);\n      selectedIds = selectedIds.filter((pageId) => pageId);\n\n      if (selectedIds.length) $dataview.select(selectedIds);\n      else $dataview.unselectAll();\n   }\n\n   unselect(pageNumber) {\n      const $dataview = $$(this.ids.dataview);\n\n      let selectedIds = $dataview.getSelectedId(true);\n\n      selectedIds = selectedIds.filter(\n         (pageId) => pageId && pageId != pageNumber\n      );\n\n      if (selectedIds.length) $dataview.select(selectedIds);\n      else $dataview.unselectAll();\n   }\n\n   selectAll() {\n      $$(this.ids.dataview)?.selectAll();\n   }\n\n   unselectAll() {\n      $$(this.ids.dataview)?.unselectAll();\n   }\n\n   fullImageTemplateId(pageNumber) {\n      return `${this.pageTemplateId(pageNumber)}_full_size`;\n   }\n\n   fullImageTemplate(item) {\n      const $carousel = $$(this.ids.fullImageCarousel);\n      return `<canvas width=\"${\n         $carousel.config.width - 20\n      }\" id=\"${this.fullImageTemplateId(item.pageNumber)}\"></canvas>`;\n   }\n\n   refreshFullImage() {\n      const ids = this.ids;\n      const activeIndex = $$(ids.fullImageCarousel).getActiveIndex();\n      const pageNumber = activeIndex + 1;\n      const canvas_dom = document.querySelector(\n         `#${this.fullImageTemplateId(pageNumber)}`\n      );\n      this.showPage(pageNumber, canvas_dom);\n\n      const selectedPageIds = $$(ids.dataview).getSelectedId(true);\n      const isSelected =\n         selectedPageIds.filter((pageId) => pageId == pageNumber).length > 0;\n      $$(ids.fullImageSelectToggle).setValue(isSelected);\n\n      $$(ids.fullImageLabel).setValue(\n         `${this.label(\"Page Number\")}: ${pageNumber}`\n      );\n   }\n\n   get object() {\n      return this.view.datacollection?.datasource;\n   }\n\n   get field() {\n      return this.object?.fields?.(\n         (f) => f.id == this.view.settings.fieldID\n      )[0];\n   }\n\n   busy() {\n      const ids = this.ids;\n\n      const $fileUploader = $$(ids.fileUploader);\n      const $uploadList = $$(ids.uploadList);\n      const $dataview = $$(ids.dataview);\n      const $submit = $$(ids.submit);\n      const $selectAll = $$(ids.selectAll);\n      const $unselectAll = $$(ids.unselectAll);\n      const $selectToggle = $$(ids.fullImageSelectToggle);\n\n      $fileUploader?.disable();\n      $uploadList?.disable();\n      $submit?.disable();\n      $selectAll?.disable();\n      $unselectAll?.disable();\n      $selectToggle?.disable();\n      $dataview?.showProgress?.({\n         type: \"bottom\",\n         position: 0.001,\n      });\n   }\n\n   ready() {\n      const ids = this.ids;\n\n      const $fileUploader = $$(ids.fileUploader);\n      const $uploadList = $$(ids.uploadList);\n      const $dataview = $$(ids.dataview);\n      const $submit = $$(ids.submit);\n      const $selectAll = $$(ids.selectAll);\n      const $unselectAll = $$(ids.unselectAll);\n      const $selectToggle = $$(ids.fullImageSelectToggle);\n\n      $fileUploader?.enable();\n      $uploadList?.enable();\n      $submit?.enable();\n      $selectAll?.enable();\n      $unselectAll?.enable();\n      $selectToggle?.enable();\n      $dataview?.hideProgress?.();\n\n      delete this._progressSteps;\n   }\n\n   async submit() {\n      const field = this.field;\n      if (!this._pdfDoc || !field) return;\n\n      this.busy();\n\n      const ids = this.ids;\n      const $dataview = $$(ids.dataview);\n      const selectedPageIds = $dataview.getSelectedId(true) ?? [];\n      const model = field.object.model();\n      const dcLink = this.datacollection.datacollectionLink;\n      const newValues = [];\n\n      for (let i = 0; i < selectedPageIds.length; i++) {\n         const pageNumber = selectedPageIds[i];\n         if (pageNumber == null || pageNumber == \"\") return;\n\n         const uploadId = await this._uploadImage(pageNumber);\n\n         this._increaseProgressValue();\n\n         // Insert Data\n         const values = field.object.defaultValues();\n         values[field.columnName] = uploadId;\n\n         // Set linked data from the parent DC\n         const linkValues = dcLink?.getCursor();\n         if (linkValues) {\n            const objectLink = dcLink?.datasource;\n\n            const connectFields = field.object.connectFields();\n            connectFields.forEach((f) => {\n               if (\n                  objectLink.id == f.settings.linkObject &&\n                  values[f.columnName] === undefined\n               ) {\n                  const linkColName = f.indexField\n                     ? f.indexField.columnName\n                     : objectLink.PK();\n\n                  values[f.columnName] = {};\n                  values[f.columnName][linkColName] =\n                     linkValues[linkColName] ?? linkValues.id;\n               }\n            });\n         }\n\n         newValues.push(await model.create(values));\n\n         this._increaseProgressValue();\n      }\n\n      this.view.doSubmitRules(newValues);\n\n      // NOTE: trigger this event to ABViewPropertyAddPage\n      if (newValues) this.view.emit(\"saved\", newValues);\n\n      this.ready();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABFieldCalculate = require(\"../../dataFields/ABFieldCalculate\");\nconst ABFieldFormula = require(\"../../dataFields/ABFieldFormula\");\nconst ABFieldNumber = require(\"../../dataFields/ABFieldNumber\");\n/* global pivot */\nmodule.exports = class ABViewPivotComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewPivot_${baseView.id}`,\n         Object.assign({ pivot: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const self = this;\n      const settings = this.settings;\n      const uiPivot = {\n         id: this.ids.pivot,\n         view: \"pivot\",\n         readonly: true,\n         removeMissed: settings.removeMissed,\n         totalColumn: settings.totalColumn,\n         separateLabel: settings.separateLabel,\n         min: settings.min,\n         max: settings.max,\n         height: settings.height,\n         fields: this._getFields(),\n         format: (value) => {\n            const decimalPlaces = settings.decimalPlaces ?? 2;\n\n            return value && value != \"0\"\n               ? parseFloat(value).toFixed(decimalPlaces || 0)\n               : value;\n         },\n         override: new Map([\n            [\n               pivot.services.Backend,\n               class MyBackend extends pivot.services.Backend {\n                  async data() {\n                     const dc = self.datacollection;\n                     if (!dc) return webix.promise.resolve([]);\n\n                     const object = dc.datasource;\n                     if (!object) return webix.promise.resolve([]);\n\n                     switch (dc.dataStatus) {\n                        case dc.dataStatusFlag.notInitial:\n                           await dc.loadData();\n                           break;\n                     }\n\n                     const data = dc.getData();\n                     const dataMapped = data.map((d) => {\n                        const result = {};\n\n                        object.fields().forEach((f) => {\n                           if (\n                              f instanceof ABFieldCalculate ||\n                              f instanceof ABFieldFormula ||\n                              f instanceof ABFieldNumber\n                           )\n                              result[f.columnName] = d[f.columnName];\n                           else result[f.columnName] = f.format(d);\n                        });\n\n                        return result;\n                     });\n\n                     return webix.promise.resolve(dataMapped);\n                  }\n               },\n            ],\n            [\n               pivot.views.table,\n               class CustomTable extends pivot.views.table {\n                  CellFormat(value) {\n                     const decimalPlaces = settings.decimalPlaces ?? 2;\n                     if (!value) value = value === 0 ? \"0\" : \"\";\n                     return value\n                        ? parseFloat(value).toFixed(decimalPlaces)\n                        : value;\n                  }\n               },\n            ],\n         ]),\n      };\n\n      if (settings.structure) uiPivot.structure = settings.structure;\n\n      const _ui = super.ui([uiPivot]);\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   _getFields() {\n      const dc = this.datacollection;\n      if (!dc) return [];\n\n      const object = dc.datasource;\n      if (!object) return [];\n\n      const fields = object.fields().map((f) => {\n         let fieldType = \"text\";\n\n         switch (f.key) {\n            case \"calculate\":\n            case \"formula\":\n            case \"number\":\n               fieldType = \"number\";\n               break;\n            case \"date\":\n            case \"datetime\":\n               fieldType = \"date\";\n               break;\n         }\n\n         return {\n            id: f.columnName,\n            value: f.label,\n            type: fieldType,\n         };\n      });\n\n      return fields;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewReportsManagerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewReportManager_${baseView.id}`,\n         Object.assign(\n            {\n               reportManager: \"\",\n            },\n            ids\n         )\n      );\n\n      this.readonly = false;\n   }\n\n   ui() {\n      const self = this;\n      const settings = this.settings;\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n      const dc = this.datacollection;\n      const fieldName = dc?.datasource.fieldByID(\n         settings.dataviewFields.name\n      )?.columnName;\n      const fieldText = dc?.datasource.fieldByID(\n         settings.dataviewFields.text\n      )?.columnName;\n      const fieldQueries = dc?.datasource.fieldByID(\n         settings.dataviewFields.queries\n      )?.columnName;\n      const ids = this.ids;\n      class MyBackend extends reports.services.Backend {\n         async getModules() {\n            if (dc == null) return [];\n\n            await self.waitInitializingDCEvery(1000, dc);\n\n            return dc.getData().map((e) => {\n               return {\n                  id: e.id,\n                  name: e[fieldName],\n                  text: JSON.stringify(e[fieldText]),\n                  updated: e[\"updated_at\"],\n               };\n            });\n         }\n\n         async addModule(data) {\n            const parsedData = {};\n\n            parsedData[fieldName] = data.name;\n            parsedData[fieldText] = data.text;\n\n            const response = await dc.model.create(parsedData);\n\n            return {\n               id: response.id,\n            };\n         }\n\n         async updateModule(id, data) {\n            const parsedData = {};\n\n            parsedData[fieldName] = data.name;\n            parsedData[fieldText] = data.text;\n\n            let response = {};\n\n            response = await dc.model.update(id, parsedData);\n\n            return { id: response.id };\n         }\n\n         async deleteModule(id) {\n            await dc.model.delete(id);\n\n            return { id: id };\n         }\n\n         async getModels() {\n            const reportModels = {};\n\n            // If no selected DC then get all DCs\n            (settings.datacollectionIDs.length > 0\n               ? settings.datacollectionIDs\n               : self.view.application.datacollectionIDs\n            ).forEach((dcID) => {\n               const dc = ab.datacollectionByID(dcID);\n\n               if (!dc) return;\n\n               const obj = dc.datasource;\n\n               if (!obj) return;\n\n               const reportFields = self.getReportFields(dc);\n\n               // get connected data collections\n               // let linkedFields = [];\n               // (obj.connectFields() || []).forEach((f, index) => {\n               //    let connectedDcs = ab.datacollections(\n               //       (dColl) =>\n               //          dColl &&\n               //          dColl.datasource &&\n               //          dColl.datasource.id === f.settings.linkObject\n               //    );\n               //    (connectedDcs || []).forEach((linkedDc) => {\n               //       linkedFields.push({\n               //          id: index + 1,\n               //          name: linkedDc.label,\n               //          source: dc.id,\n               //          target: linkedDc.id\n               //       });\n               //    });\n               // });\n\n               // // MOCK UP for testing\n               // let linkedFields = [\n               //    {\n               //       id: \"id\",\n               //       name: \"id\",\n               //       source: \"39378ee0-38f0-4b9d-a5aa-dddc61137fcd\", // Player\n               //       target: \"0de82362-4ab5-4f0f-8cfa-d1288d173cba\" // Team\n               //    }\n               // ];\n\n               reportModels[dc.id] = {\n                  id: dc.id,\n                  name: dc.label,\n                  data: reportFields,\n                  refs: [],\n               };\n            });\n\n            return reportModels;\n         }\n\n         async getQueries() {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return [];\n\n            return (\n               (\n                  await dc.model.findAll({\n                     where: {\n                        uuid: moduleID,\n                     },\n                  })\n               ).data[0][fieldQueries] || []\n            );\n         }\n\n         async addQuery(data) {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return {};\n\n            const moduleData = (\n               await dc.model.findAll({\n                  where: {\n                     uuid: moduleID,\n                  },\n               })\n            ).data[0];\n\n            if (moduleData == null) return {};\n\n            const queries = [...(moduleData[fieldQueries] || [])];\n            const queryID = abWebix.uid();\n\n            queries.push(Object.assign({ id: queryID }, data));\n\n            const parsedData = {};\n\n            parsedData[fieldQueries] = queries.sort((a, b) => {\n               if (a.name < b.name) return -1;\n\n               if (a.name > b.name) return 1;\n\n               return 0;\n            });\n\n            await dc.model.update(moduleID, parsedData);\n\n            return { id: queryID };\n         }\n\n         async updateQuery(id, data) {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return {};\n\n            const moduleData = (\n               await dc.model.findAll({\n                  where: {\n                     uuid: moduleID,\n                  },\n               })\n            ).data[0];\n\n            if (moduleData == null) return {};\n\n            const queries = [...(moduleData[fieldQueries] || [])];\n            const queryIndex = queries.findIndex((e) => e.id === id);\n\n            queries[queryIndex] = Object.assign({ id }, data);\n\n            const parsedData = {};\n\n            parsedData[fieldQueries] = queries.sort((a, b) => {\n               if (a.name < b.name) return -1;\n\n               if (a.name > b.name) return 1;\n\n               return 0;\n            });\n\n            await dc.model.update(moduleID, parsedData);\n\n            return { id };\n         }\n\n         async deleteQuery(id) {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return {};\n\n            const moduleData = (\n               await dc.model.findAll({\n                  where: {\n                     uuid: moduleID,\n                  },\n               })\n            ).data[0];\n\n            if (moduleData == null) return {};\n\n            const queries = moduleData[fieldQueries] || [];\n            const queryIndex = queries.findIndex((e) => e.id === id);\n\n            if (queryIndex >= 0) {\n               const parsedData = {};\n\n               parsedData[fieldQueries] = queries\n                  .filter((e, i) => i !== queryIndex)\n                  .sort((a, b) => {\n                     if (a.name < b.name) return -1;\n\n                     if (a.name > b.name) return 1;\n\n                     return 0;\n                  });\n\n               await dc.model.update(moduleID, parsedData);\n            }\n\n            return { id: id };\n         }\n\n         async getData(config) {\n            let result = [];\n            let pullDataTasks = [];\n            let dcIds = [];\n            let dcData = {};\n            let reportFields = [];\n\n            // pull data of the base and join DCs\n            dcIds.push(config.data);\n            (config.joins || []).forEach((j) => {\n               dcIds.push(j.sid);\n               dcIds.push(j.tid);\n            });\n            dcIds = ab.uniq(dcIds);\n            dcIds.forEach((dcId) => {\n               pullDataTasks.push(\n                  new Promise((resolve, reject) => {\n                     const getData = async () => {\n                        try {\n                           dcData[dcId] = (await self.getData(dcId)) || [];\n\n                           resolve();\n                        } catch (err) {\n                           reject(err);\n                        }\n                     };\n\n                     getData();\n                  })\n               );\n            });\n\n            dcIds.forEach((dcId) => {\n               const dataCol = ab.datacollectionByID(dcId);\n\n               if (!dataCol) return;\n\n               reportFields = reportFields.concat(\n                  self.getReportFields(dataCol).map((f) => {\n                     // change format of id to match the report widget\n                     f.id = `${dcId}.${f.id}`; // dc_id.field_id\n                     return f;\n                  })\n               );\n            });\n\n            await Promise.all(pullDataTasks);\n\n            // the data result equals data of the base DC\n            result = dcData[config.data] || [];\n\n            if (config.joins?.length)\n               (config.joins || []).forEach((j) => {\n                  const sourceDc = ab.datacollectionByID(j.sid);\n                  if (!sourceDc) return;\n\n                  const sourceObj = sourceDc.datasource;\n                  if (!sourceObj) return;\n\n                  const targetDc = ab.datacollectionByID(j.tid);\n                  if (!targetDc) return;\n\n                  const targetObj = targetDc.datasource;\n                  if (!targetObj) return;\n\n                  const sourceLinkField = sourceObj.fieldByID(j.sf);\n                  const targetLinkField = targetObj.fieldByID(j.tf);\n                  if (!sourceLinkField && !targetLinkField) return;\n\n                  const sourceData = dcData[j.sid] || [];\n                  const targetData = dcData[j.tid] || [];\n\n                  sourceData.forEach((sData) => {\n                     targetData.forEach((tData) => {\n                        let sVal =\n                           sData[\n                              sourceLinkField\n                                 ? `${j.sid}.${sourceLinkField.columnName}.id`\n                                 : `${j.sid}.id`\n                           ] || [];\n\n                        let tVal =\n                           tData[\n                              targetLinkField\n                                 ? `${j.tid}.${targetLinkField.columnName}.id`\n                                 : `${j.tid}.id`\n                           ] || [];\n\n                        if (!Array.isArray(sVal)) sVal = [sVal];\n\n                        if (!Array.isArray(tVal)) tVal = [tVal];\n\n                        // Add joined row to the result array\n                        const matchedVal = sVal.filter(\n                           (val) => tVal.indexOf(val) > -1\n                        );\n\n                        if (matchedVal?.length) {\n                           const updateRows =\n                              result.filter(\n                                 (r) =>\n                                    r[`${j.sid}.id`] === sData[`${j.sid}.id`] &&\n                                    !r[`${j.tid}.id`]\n                              ) || [];\n\n                           if (updateRows?.length)\n                              (updateRows || []).forEach((r) => {\n                                 for (const key in tData)\n                                    if (key !== \"id\") r[key] = tData[key];\n                              });\n                           else\n                              result.push(\n                                 Object.assign(\n                                    ab.cloneDeep(sData),\n                                    ab.cloneDeep(tData)\n                                 )\n                              );\n                        }\n                     });\n                  });\n               });\n\n            // filter & sort\n            const queryVal = JSON.parse(config.query || \"{}\");\n\n            if (queryVal?.rules?.length)\n               queryVal.rules.forEach((r) => {\n                  if (!r || !r.type || !r.condition) return;\n\n                  switch (r.type) {\n                     case \"date\":\n                        // Convert string to Date object\n                        if (r.condition.filter) {\n                           if (typeof r.condition.filter === \"string\")\n                              r.condition.filter = ab.rules.toDate(\n                                 r.condition.filter\n                              );\n\n                           if (\n                              r.condition.filter.start &&\n                              typeof r.condition.filter.start === \"string\"\n                           )\n                              r.condition.filter.start = ab.rules.toDate(\n                                 r.condition.filter.start\n                              );\n\n                           if (\n                              r.condition.filter.end &&\n                              typeof r.condition.filter.end === \"string\"\n                           )\n                              r.condition.filter.end = ab.rules.toDate(\n                                 r.condition.filter.end\n                              );\n                        }\n\n                        break;\n                  }\n               });\n\n            // create a new query widget to get the filter function\n            const filterElem = abWebix.ui({\n               view: \"query\",\n               fields: reportFields,\n               value: queryVal,\n            });\n\n            // create a new data collection and apply the query filter\n            const tempDc = new abWebix.DataCollection();\n\n            tempDc.parse(result);\n\n            // filter\n            let filterFn;\n\n            try {\n               filterFn = filterElem.getFilterFunction();\n            } catch (error) {\n               // continue regardless of error\n            }\n\n            if (filterFn) tempDc.filter(filterFn);\n\n            // sorting\n            (config.sort || []).forEach((sort) => {\n               if (sort.id)\n                  tempDc.sort({\n                     as: \"string\",\n                     dir: sort.mod || \"asc\",\n                     by: `#${sort.id}#`,\n                  });\n            });\n\n            result = tempDc.serialize();\n\n            // clear\n            filterElem.destructor();\n            tempDc.destructor();\n\n            // group by\n            if (config?.group?.length) {\n               result = _.groupBy(result, (e) => {\n                  return config.group\n                     .map((column) => {\n                        const parsedColumn = column.split(\".\");\n                        const originalColumn =\n                           parsedColumn.length > 2\n                              ? `${parsedColumn[1]}.${parsedColumn[2]}`\n                              : column;\n                        const reportField = reportFields.find(\n                           (reportField) => reportField.id === originalColumn\n                        );\n\n                        switch (reportField.type) {\n                           case \"date\": {\n                              const dateStringData = abWebix.i18n.dateFormatStr(\n                                 e[originalColumn]\n                              );\n                              const parsedDateStringData =\n                                 dateStringData.split(\"/\");\n\n                              switch (parsedColumn[0]) {\n                                 case \"day\":\n                                    e[column] = parsedDateStringData[1];\n\n                                    return parsedDateStringData[1];\n\n                                 case \"month\":\n                                    e[column] = parsedDateStringData[0];\n\n                                    return parsedDateStringData[0];\n\n                                 case \"year\":\n                                    e[column] = parsedDateStringData[2];\n\n                                    return parsedDateStringData[2];\n\n                                 case \"yearmonth\": {\n                                    e[\n                                       column\n                                    ] = `${parsedDateStringData[0]}/${parsedDateStringData[2]}`;\n\n                                    return e[column];\n                                 }\n\n                                 default:\n                                    e[column] = dateStringData;\n\n                                    return dateStringData;\n\n                                 // switch (reportField.abField.key) {\n                                 //    case \"datetime\":\n                                 //       return abWebix.i18n.fullDateFormatStr(\n                                 //          e[originalColumn]\n                                 //       );\n\n                                 //    default:\n                                 //       break;\n                                 // }\n                              }\n                           }\n\n                           default:\n                              return e[originalColumn]?.toString?.();\n                        }\n                     })\n                     .join(\"\");\n               });\n\n               result = Object.values(result).map((groupedData) => {\n                  const groupedResult = {};\n\n                  (config.columns || []).forEach((col) => {\n                     const agg = col.split(\".\")[0];\n                     const rawCol = col.replace(\n                        /sum.|avg.|count.|max.|min./g,\n                        \"\"\n                     );\n\n                     switch (agg) {\n                        case \"sum\":\n                           groupedResult[col] = ab.sumBy(groupedData, rawCol);\n                           break;\n                        case \"avg\":\n                           groupedResult[col] = ab.meanBy(groupedData, rawCol);\n                           break;\n                        case \"count\":\n                           groupedResult[col] = (groupedData || []).length;\n                           break;\n                        case \"max\":\n                           groupedResult[col] =\n                              (ab.maxBy(groupedData, rawCol) || {})[rawCol] ||\n                              \"\";\n                           break;\n                        case \"min\":\n                           groupedResult[col] =\n                              (ab.minBy(groupedData, rawCol) || {})[rawCol] ||\n                              \"\";\n                           break;\n                        default:\n                           groupedResult[col] = groupedData[0][col];\n                           break;\n                     }\n                  });\n\n                  return groupedResult;\n               });\n            }\n\n            return result;\n         }\n\n         async getOptions(fields) {\n            return [];\n         }\n         async getFieldData(fieldId) {\n            return [];\n         }\n      }\n      class MyLocal extends reports.services.Local {\n         constructor(app) {\n            super(app);\n\n            this._currentModuleID = \"\";\n         }\n\n         getQueries() {\n            const currentModuleID = $$(ids.reportManager).getState().moduleId;\n\n            if (this._currentModuleID !== currentModuleID) {\n               this._currentModuleID = currentModuleID;\n               this._queries = null;\n            }\n\n            return super.getQueries();\n         }\n      }\n      class MyEditor extends reports.views.editor {\n         init() {\n            super.init();\n\n            if (!self.readonly || settings.editMode === 1) return;\n\n            const $tabbar = this.$$(\"tabbar\");\n\n            if (settings.hideCommonTab === 1) {\n               const listener = () => {\n                  $tabbar.callEvent(\"onChange\", [\"data\"]);\n                  $tabbar.disableOption(\"common\");\n                  self.removeListener(\"editMode.tabbar.query\", listener);\n               };\n\n               self.on(\"editMode.tabbar.query\", listener);\n            }\n\n            if (settings.hideDataTab === 1) $tabbar.disableOption(\"other\");\n\n            if (settings.hideViewTab === 1) $tabbar.disableOption(\"structure\");\n\n            this.on(this.app, \"editMode.button.back\", () => {\n               this.Reset(true);\n            });\n         }\n\n         Reset(forceReset = false) {\n            const id = this.AppState.moduleId;\n            const condition = self.readonly && !(settings.editMode === 1);\n\n            if (!condition || id == null || forceReset) super.Reset();\n\n            this.Local.getModule(id);\n         }\n\n         TrackChanges() {\n            super.TrackChanges();\n\n            if (settings.hideCommonTab) self.emit(\"editMode.tabbar.query\");\n         }\n      }\n      class MyToolBar extends reports.views.toolbar {\n         config() {\n            const ui = super.config();\n\n            if (self.readonly && !(settings.editMode === 1)) {\n               ui.elements[5].cols = ui.elements[5].cols.map((e) =>\n                  Object.assign(e, {\n                     hidden: self.readonly && !(settings.editMode === 1),\n                  })\n               );\n\n               ui.elements[5].cols.push(\n                  {},\n                  {\n                     view: \"button\",\n                     type: \"icon\",\n                     icon: \"wxi-angle-double-left\",\n                     label: self.label(\"Back\"),\n                     localId: \"forceReset\",\n                     click: () => {\n                        return this.app.callEvent(\"editMode.button.back\", []);\n                     },\n                  }\n               );\n            }\n\n            return ui;\n         }\n      }\n      class MyEditorCommon extends reports.views[\"editor/common\"] {\n         config() {\n            const ui = super.config();\n\n            if (!self.readonly) return ui;\n\n            return Object.assign({}, ui, {\n               elements: ui.elements.map((e, i) =>\n                  Object.assign(\n                     {\n                        hidden: !(i >= 2 && i < 5),\n                     },\n                     e\n                  )\n               ),\n            });\n         }\n\n         ShowDeleteButton() {\n            super.ShowDeleteButton();\n\n            if (self.readonly) this.$$(\"delete\").hide();\n         }\n      }\n      class MyEditorData extends reports.views[\"editor/data\"] {\n         config() {\n            const ui = super.config();\n\n            if (self.readonly) {\n               ui.rows[0].rows[0].hidden = true;\n\n               ui.rows[0].rows.unshift({\n                  label: \"Filtering query\",\n                  view: \"label\",\n                  width: 120,\n               });\n            }\n\n            return ui;\n         }\n      }\n      class MyTable extends reports.views.table {\n         // NOTE: fix format of date column type\n         GetColumnConfig(a) {\n            let config = {\n               id: a.id,\n               header:\n                  !a.meta.header || a.meta.header === \"none\"\n                     ? a.meta.name || a.name\n                     : [\n                          a.meta.name || a.name,\n                          {\n                             content:\n                                a.header === \"text\"\n                                   ? \"textFilter\"\n                                   : \"richSelectFilter\",\n                          },\n                       ],\n               type: a.type,\n               sort: \"date\",\n               width: a.width || 200,\n            };\n\n            const abField = self.AB.datacollectionByID(\n               a.mid\n            )?.datasource.fields((field) => field.columnName === a.name)[0];\n\n            switch (a.type) {\n               case \"date\":\n                  config.format = (val) => {\n                     // check valid date\n                     if (val?.getTime && !isNaN(val.getTime()))\n                        return abField?.key === \"datetime\"\n                           ? abWebix.i18n.fullDateFormatStr(val)\n                           : abWebix.i18n.dateFormatStr(val);\n                     else return \"\";\n                  };\n\n                  break;\n\n               default:\n                  config = super.GetColumnConfig(a);\n\n                  break;\n            }\n\n            return config;\n         }\n\n         async GetTableData(mod) {\n            const data = await super.GetTableData(mod);\n            const buckets = mod.buckets;\n\n            if (!buckets) return data;\n\n            if (buckets.length === 0) return data;\n\n            const columnIDs = mod.columns.map((e) => e.id);\n            const parsedBuckets = mod.buckets.filter((bucket) =>\n               columnIDs.includes(bucket.column)\n            );\n\n            if (parsedBuckets.length === 0) return data;\n\n            const records = data[0].map((e) => {\n               const parseRecord = {};\n\n               parsedBuckets.forEach((bucket) => {\n                  const options = bucket.options;\n\n                  for (let i = 0; i < options.length; i++)\n                     if (\n                        options[i].values?.includes(e[bucket.column]) ||\n                        i === options.length - 1\n                     ) {\n                        parseRecord[bucket.column] = options[i].id;\n\n                        break;\n                     }\n               });\n\n               return Object.assign({}, e, parseRecord);\n            });\n\n            return [records, data[1]];\n         }\n      }\n\n      const _ui = super.ui([\n         {\n            id: ids.reportManager,\n            view: \"reports\",\n            toolbar: true,\n            override: new Map([\n               [reports.services.Backend, MyBackend],\n               [reports.services.Local, MyLocal],\n               [reports.views.editor, MyEditor],\n               [reports.views.toolbar, MyToolBar],\n               [reports.views[\"editor/common\"], MyEditorCommon],\n               [reports.views[\"editor/data\"], MyEditorData],\n               [reports.views.table, MyTable],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n      delete _ui.height;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      this.AB = AB;\n      this.readonly = accessLevel < 2;\n\n      const $reportManager = $$(this.ids.reportManager);\n      const state = $reportManager.getState();\n\n      state.readonly = this.readonly;\n      state.mode =\n         this.readonly && this.settings.editMode === 1 ? \"edit\" : \"list\";\n   }\n\n   getReportFields(dc) {\n      if (!dc) return [];\n\n      const object = dc.datasource;\n      if (!object) return [];\n\n      const fields = [];\n\n      object.fields().forEach((f) => {\n         const columnFormat = f.columnHeader();\n\n         if (!f.isConnection) {\n            let type = \"text\";\n\n            switch (f.key) {\n               case \"boolean\":\n               case \"number\":\n               case \"date\":\n                  type = f.key;\n\n                  break;\n\n               case \"datetime\":\n                  type = \"date\";\n\n                  break;\n\n               default:\n                  break;\n            }\n\n            fields.push({\n               id: f.columnName,\n               name: f.label,\n               filter: f.fieldIsFilterable(),\n               edit: false,\n               type: type,\n               format: columnFormat.format,\n               options: columnFormat.options,\n               ref: \"\",\n               key: false,\n               show: true,\n               abField: f,\n            });\n\n            return;\n         }\n\n         if (f.isSource()) {\n            const linkedDcs = this.view.application.datacollectionsIncluded(\n               (dc) =>\n                  this.settings.datacollectionIDs.includes(dc.id) &&\n                  dc.settings.datasourceID === f.settings.linkObject\n            );\n\n            (linkedDcs || []).forEach((linkDc) => {\n               fields.push({\n                  id: f.id,\n                  name: f.label,\n                  filter: false,\n                  edit: false,\n                  type: \"reference\",\n                  ref: linkDc.id,\n                  key: false,\n                  show: false,\n               });\n            });\n         }\n      });\n\n      return fields;\n   }\n\n   async getData(datacollectionId) {\n      const datacollection = this.AB.datacollectionByID(datacollectionId);\n      if (!datacollection) return [];\n\n      const object = datacollection.datasource;\n      if (!object) return [];\n\n      await this.waitInitializingDCEvery(1000, datacollection);\n\n      const reportFields = this.getReportFields(datacollection);\n      const reportData = [];\n      const rawData = datacollection.getData();\n\n      (rawData || []).forEach((row) => {\n         const reportRow = { id: row.id };\n\n         reportRow[`${datacollection.id}.id`] = row.id;\n\n         object.fields().forEach((field) => {\n            const columnName = field.columnName;\n            const col = `${datacollection.id}.${columnName}`;\n\n            if (field) {\n               // FK value of the connect field\n               if (field.isConnection) {\n                  let $pk = field.datasourceLink.PK();\n                  if (Array.isArray(row[columnName]))\n                     reportRow[`${col}.id`] = row[columnName].map(\n                        (link) => link[$pk] || link.id || link\n                     );\n                  else if (row[columnName])\n                     reportRow[`${col}.id`] =\n                        row[columnName][$pk] ||\n                        row[columnName].id ||\n                        row[columnName];\n               } else reportRow[col] = field.format(row);\n            } else reportRow[col] = row[columnName];\n\n            const rField = reportFields.find(\n               (f) => f.id === columnName || f.id === field.id\n            );\n\n            if (!rField) return;\n\n            switch (rField.type) {\n               case \"text\":\n               case \"reference\":\n                  reportRow[col] = (reportRow[col] || \"\").toString();\n                  break;\n\n               case \"number\":\n                  reportRow[col] = parseFloat(\n                     (reportRow[col] || 0).toString().replace(/[^\\d.-]/g, \"\")\n                  );\n                  break;\n\n               case \"date\":\n                  reportRow[col] = row[columnName];\n                  if (reportRow[col]) {\n                     if (!(reportRow[col] instanceof Date))\n                        reportRow[col] = this.AB.rules.toDate(row[columnName]);\n                  } else reportRow[col] = \"\";\n                  break;\n            }\n         });\n\n         reportData.push(reportRow);\n      });\n\n      return reportData;\n   }\n\n   async onShow() {\n      super.onShow();\n\n      const ids = this.ids;\n      const $component = $$(ids.component);\n\n      if ($component != null && !this.__isShowing) {\n         this.__isShowing = true;\n\n         $component.reconstruct();\n      }\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewSchedulerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewScheduler_${baseView.id}`,\n         Object.assign(\n            {\n               scheduler: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const ab = this.AB;\n      const self = this;\n      const abWebix = this.AB.Webix;\n      const settings = this.settings;\n      const dc = this.datacollection;\n      const fieldName = dc?.datasource.fieldByID(\n         settings.dataviewFields.name\n      )?.columnName;\n      const fieldStart = dc?.datasource.fieldByID(\n         settings.dataviewFields.start\n      )?.columnName;\n      const fieldEnd = dc?.datasource.fieldByID(\n         settings.dataviewFields.end\n      )?.columnName;\n      const fieldAllDay = dc?.datasource.fieldByID(\n         settings.dataviewFields.allDay\n      )?.columnName;\n      const fieldRepeat = dc?.datasource.fieldByID(\n         settings.dataviewFields.repeat\n      )?.columnName;\n      const fieldCalendar = dc?.datasource.fieldByID(\n         settings.dataviewFields.calendar\n      )?.columnName;\n      const fieldEventColor = dc?.datasource.fieldByID(\n         settings.dataviewFields.color\n      )?.columnName;\n      const fieldNotes = dc?.datasource.fieldByID(\n         settings.dataviewFields.notes\n      )?.columnName;\n      const fieldOriginID = dc?.datasource.fieldByID(\n         settings.dataviewFields.originID\n      )?.columnName;\n      const fieldSectionID = dc?.datasource.fieldByID(\n         settings.dataviewFields.sectionID\n      )?.columnName;\n      const fieldUnitID = dc?.datasource.fieldByID(\n         settings.dataviewFields.unitID\n      )?.columnName;\n      const dcCalendar = ab.datacollectionByID(\n         this.settings.calendarDataviewID\n      );\n      const fieldTitle = dcCalendar?.datasource.fieldByID(\n         settings.calendarDataviewFields.title\n      )?.columnName;\n      const fieldCalendarColor = dcCalendar?.datasource.fieldByID(\n         settings.calendarDataviewFields.color\n      )?.columnName;\n      const fieldActive = dcCalendar?.datasource.fieldByID(\n         settings.calendarDataviewFields.active\n      )?.columnName;\n      const timelineOptions = [];\n\n      Object.keys(settings.timeline).forEach((key) => {\n         if (settings.timeline[key] === 0) return;\n\n         timelineOptions.push({\n            id: `${key}`,\n            value: `${key.charAt(0).toUpperCase()}${key.slice(1)}`,\n         });\n      });\n\n      const _ui = super.ui([\n         {\n            padding: 6,\n            cols: [\n               { view: \"label\", width: 150, label: \"Export events data to: \" },\n               {\n                  view: \"button\",\n                  width: 100,\n                  value: this.label(\"Excel\"),\n                  hidden: settings.export.excel === 0,\n                  click: () => {\n                     abWebix.toExcel(ids.scheduler);\n                  },\n               },\n               {\n                  view: \"button\",\n                  width: 100,\n                  value: this.label(\"CSV\"),\n                  hidden: settings.export.csv === 0,\n                  click: () => {\n                     abWebix.toCSV(ids.scheduler);\n                  },\n               },\n               {\n                  view: \"button\",\n                  width: 100,\n                  value: this.label(\"PDF\"),\n                  hidden: settings.export.pdf === 0,\n                  click: () => {\n                     abWebix.toPDF(ids.scheduler, { autowidth: true });\n                  },\n               },\n               {},\n            ],\n         },\n         {\n            id: ids.scheduler,\n            view: \"scheduler\",\n            date: new Date(),\n            readonly: settings.readonly === 1,\n            timeline: settings.timeline.timeline === 1,\n            override: new Map([\n               [\n                  scheduler.services.Backend,\n                  class MyBackend extends reports.services.Backend {\n                     async addCalendar(obj) {\n                        if (dcCalendar == null) return {};\n\n                        const data = {};\n\n                        data[fieldTitle] = obj.text;\n                        data[fieldCalendarColor] = obj.color;\n                        data[fieldActive] = obj.active;\n\n                        const response = await dcCalendar.model.create(data);\n\n                        return { id: response.id };\n                     }\n                     async addEvent(obj) {\n                        if (dc == null) return {};\n\n                        const data = {};\n\n                        data[fieldName] = obj.text;\n                        data[fieldStart] = new Date(obj.start_date);\n                        data[fieldEnd] = new Date(obj.end_date);\n                        data[fieldAllDay] = obj.all_day;\n                        data[fieldRepeat] = obj.recurring;\n                        data[fieldCalendar] = obj.calendar;\n                        data[fieldEventColor] = obj.color;\n                        data[fieldSectionID] = obj.section || \"No Section\";\n                        data[fieldUnitID] = obj.units || \"No Unit\";\n                        data[fieldNotes] = obj.details;\n                        data[fieldOriginID] = obj.origin_id;\n\n                        const response = await dc.model.create(data);\n\n                        return { id: response.id };\n                     }\n                     async calendars() {\n                        // if we manage a datacollection, then make sure it has started\n                        // loading it's data when we are showing our component.\n                        if (dcCalendar == null) return [];\n\n                        await self.waitInitializingDCEvery(1000, dcCalendar);\n\n                        return dcCalendar.getData().map((e) => {\n                           return {\n                              id: e.id,\n                              text: e[fieldTitle],\n                              color: e[fieldCalendarColor],\n                              active: e[fieldActive],\n                           };\n                        });\n                     }\n                     async events(params) {\n                        // if we manage a datacollection, then make sure it has started\n                        // loading it's data when we are showing our component.\n                        if (dc == null) return [];\n\n                        await self.waitInitializingDCEvery(1000, dc);\n\n                        const units = await this.units();\n                        const sections = await this.sections();\n\n                        return dc.getData().map((e) => {\n                           let unitID = units.find(\n                              (u) => u.id === e[fieldUnitID]\n                           )?.id;\n                           let sectionID = sections.find(\n                              (s) => s.id === e[fieldSectionID]\n                           )?.id;\n\n                           if (sectionID == null || unitID == null) {\n                              sectionID = sectionID || \"No Section\";\n                              unitID = unitID || \"No Unit\";\n\n                              // const data = {};\n\n                              // data[fieldSectionID] = sectionID;\n                              // data[fieldUnitID] = unitID;\n\n                              // dc.model.update(e.id, data);\n                           }\n\n                           return {\n                              id: e.id,\n                              text: e[fieldName],\n                              start_date: abWebix.Date.dateToStr(\n                                 \"%Y-%m-%d %H:%i:%s\"\n                              )(e[fieldStart]),\n                              end_date: abWebix.Date.dateToStr(\n                                 \"%Y-%m-%d %H:%i:%s\"\n                              )(e[fieldEnd]),\n                              all_day: e[fieldAllDay],\n                              recurring: e[fieldRepeat],\n                              calendar: e[fieldCalendar],\n                              color: e[fieldEventColor],\n                              section: sectionID,\n                              units: unitID,\n                              details: e[fieldNotes],\n                              origin_id: e[fieldOriginID],\n                           };\n                        });\n                     }\n                     async removeCalendar(id) {\n                        await dcCalendar.model.delete(id);\n                     }\n                     async removeEvent(id) {\n                        await dc.model.delete(id);\n                     }\n                     async sections() {\n                        return [\n                           { text: \"No Section\", id: \"No Section\" },\n                        ].concat(\n                           settings.timelineSectionList.split(\", \").map((e) => {\n                              return {\n                                 id: e,\n                                 text: e,\n                              };\n                           })\n                        );\n                     }\n                     async units() {\n                        return [{ id: \"No Unit\", value: \"No Unit\" }].concat(\n                           settings.unitList.split(\", \").map((e) => {\n                              return {\n                                 id: e,\n                                 value: e,\n                              };\n                           })\n                        );\n                     }\n                     async updateCalendar(id, obj) {\n                        if (dcCalendar == null) return {};\n\n                        const data = {};\n\n                        data[fieldTitle] = obj.text;\n                        data[fieldCalendarColor] = obj.color;\n                        data[fieldActive] = obj.active;\n\n                        await dcCalendar.model.update(id, data);\n                     }\n                     async updateEvent(id, obj, mode, date) {\n                        if (dc == null) return {};\n\n                        const data = {};\n\n                        data[fieldName] = obj.text;\n                        data[fieldStart] = new Date(obj.start_date);\n                        data[fieldEnd] = new Date(obj.end_date);\n                        data[fieldAllDay] = obj.all_day;\n                        data[fieldRepeat] = obj.recurring;\n                        data[fieldCalendar] = obj.calendar;\n                        data[fieldEventColor] = obj.color;\n                        data[fieldSectionID] = obj.section || \"No Section\";\n                        data[fieldUnitID] = obj.units || \"No Unit\";\n                        data[fieldNotes] = obj.details;\n                        data[fieldOriginID] = obj.origin_id;\n\n                        await dc.model.update(id, data);\n                     }\n                  },\n               ],\n               [\n                  scheduler.views[\"bars/nav\"],\n                  class CustomBarsView extends scheduler.views[\"bars/nav\"] {\n                     config() {\n                        const uiNav = super.config();\n                        uiNav.width = 160;\n                        uiNav.options = timelineOptions;\n                        return uiNav;\n                     }\n                  },\n               ],\n               [\n                  scheduler.views[\"bars/navpopup\"],\n                  class CustomNavPopupView extends scheduler.views[\n                     \"bars/navpopup\"\n                  ] {\n                     config() {\n                        const uiNavPopup = super.config();\n\n                        const options = timelineOptions.map((e) =>\n                           Object.assign({ icon: `shi-${e.id}` }, e)\n                        );\n\n                        if (this.app.config.calendars)\n                           uiNavPopup.body.body.rows[0].data = options;\n                        else uiNavPopup.body.data = options;\n\n                        return uiNavPopup;\n                     }\n                  },\n               ],\n               [\n                  scheduler.views[\"modes/day/multiday\"],\n                  class CustomModesDayMultiday extends scheduler.views[\n                     \"modes/day/multiday\"\n                  ] {\n                     LimitData(data) {\n                        // Get an error the case when the data parameter is undefined.\n                        super.LimitData(data || []);\n                     }\n                  },\n               ],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async onShow() {\n      super.onShow();\n\n      const ids = this.ids;\n      const $component = $$(ids.component);\n\n      if ($component != null && !this.__isShowing) {\n         this.__isShowing = true;\n\n         $component.reconstruct();\n      }\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewTabComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewTab_${baseView.id}`,\n         Object.assign(\n            {\n               tab: \"\",\n\n               sidebar: \"\",\n               expandMenu: \"\",\n               collapseMenu: \"\",\n\n               popupTabManager: \"\",\n               popupTabManagerForm: \"\",\n               popupTabManagerSaveButton: \"\",\n            },\n            ids\n         )\n      );\n\n      this.viewComponents =\n         this.viewComponents ||\n         baseView\n            .views((v) => v.getUserAccess())\n            .map((v) => {\n               return {\n                  view: v,\n                  // component: v.component(App)\n               };\n            });\n   }\n\n   ui() {\n      const ids = this.ids;\n      const baseView = this.view;\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      let _ui = null;\n\n      // We are going to make a custom icon using the first letter of a menu item for menu items that don't have an icon\n      // to do this we need to modify the default template with the method webix recommended form this snippet https://snippet.webix.com/b566d9f8\n      abWebix.type(abWebix.ui.tree, {\n         baseType: \"sideBar\", // inherit everything else from sidebar type\n         name: \"customIcons\",\n         icon: (obj, common) => {\n            if (obj.icon.length)\n               return [\n                  \"<span class='webix_icon webix_sidebar_icon fa fa-fw fa-\",\n                  obj.icon,\n                  \"'></span>\",\n               ].join(\"\");\n\n            return [\n               \"<span class='webix_icon webix_sidebar_icon sidebarCustomIcon'>\",\n               obj.value.charAt(0).toUpperCase(),\n               \"</span>\",\n            ].join(\"\");\n         },\n      });\n\n      const viewComponents = this.viewComponents;\n      const settings = this.settings;\n\n      if (viewComponents.length > 0) {\n         if (settings.stackTabs) {\n            // define your menu items from the view components\n            const menuItems = viewComponents.map((vc) => {\n               const view = vc.view;\n\n               return {\n                  id: `${view.id}_menu`,\n                  value: view.label,\n                  icon: view.tabicon ? view.tabicon : \"\",\n               };\n            });\n\n            if (menuItems.length) {\n               // create a menu item for the collapse option to use later\n               const collapseMenu = {\n                  id: ids.collapseMenu,\n                  value: this.label(\"Collapse Menu\"),\n                  icon: \"chevron-circle-left\",\n               };\n\n               // create a menu item from the expand option to use later\n               const expandMenu = {\n                  id: ids.expandMenu,\n                  value: this.label(\"Expand Menu\"),\n                  icon: \"chevron-circle-right\",\n                  hidden: true,\n               };\n\n               // find out what the first option is so we can set it later\n               let selectedItem = `${viewComponents[0].view.id}_menu`;\n\n               const abStorage = ab.Storage;\n               const sidebar = {\n                  view: \"sidebar\",\n                  type: \"customIcons\", // define the sidebar type with the new template created above\n                  id: ids.sidebar,\n                  height: settings.height,\n                  width: settings.sidebarWidth ? settings.sidebarWidth : 0,\n                  scroll: true,\n                  position: settings.sidebarPos ? settings.sidebarPos : \"left\",\n                  css: settings.darkTheme ? \"webix_dark\" : \"\",\n                  data: menuItems.concat(collapseMenu), // add you menu items along with the collapse option to start\n                  on: {\n                     onItemClick: (id) => {\n                        // when a menu item is clicked\n                        if (id === ids.collapseMenu) {\n                           // if it was the collapse menu item\n                           setTimeout(() => {\n                              const $sidebar = $$(ids.sidebar);\n\n                              // remove the collapse option from the menu\n                              $sidebar.remove(ids.collapseMenu);\n                              // add the expand option to the menu\n                              $sidebar.add(expandMenu);\n                              // toggle the sidebar state\n                              $sidebar.toggle();\n                              // we just clicked the collapse...but we don't wanted highlighted\n                              // so highlight the previously selected menu item\n                              $sidebar.select(selectedItem);\n                              // store this state in local storage the user preference is\n                              // remembered next time they see this sidebar\n                              abStorage.set(\n                                 `${ids.tab}-state`,\n                                 $sidebar.getState()\n                              );\n                           }, 0);\n                        } else if (id === ids.expandMenu) {\n                           setTimeout(() => {\n                              const $sidebar = $$(ids.sidebar);\n\n                              // remove the expand option from the menu\n                              $sidebar.remove(ids.expandMenu);\n                              // add the collapse option to the menu\n                              $sidebar.add(collapseMenu);\n                              // toggle the sidebar state\n                              $sidebar.toggle();\n                              // we just clicked the collapse...but we don't wanted highlighted\n                              // so highlight the previously selected menu item\n                              $sidebar.select(selectedItem);\n                              // store this state in local storage the user preference is\n                              // remembered next time they see this sidebar\n                              abStorage.set(\n                                 `${ids.tab}-state`,\n                                 $sidebar.getState()\n                              );\n                           }, 0);\n                        } else {\n                           // store the selecte menu item just in case someone toggles the menu later\n                           selectedItem = id;\n                           // if the menu item is a regular menu item\n                           // call the onShow with the view id to load the view\n\n                           id = id.replace(\"_menu\", \"\");\n                           let node = $$(id);\n                           if (node) {\n                              node.show(false, false);\n                           } else {\n                              // How often does this occure?\n                              let msg = `ABViewTabComponent[${this.name}][${this.id}] could not resolve UI panel for provided menu [${selectedItem}].`;\n                              this.AB.notify(\"developer\", msg, {});\n                           }\n                           // $$(id).show(false, false);\n\n                           // onShow(id);\n                        }\n                     },\n                     onSelectChange: () => {\n                        addDataCy();\n                     },\n                     onAfterRender: () => {\n                        addDataCy();\n                     },\n                  },\n               };\n\n               const multiview = {\n                  view: \"multiview\",\n                  id: ids.tab,\n                  keepViews: true,\n                  minWidth: settings.minWidth,\n                  cells: viewComponents.map((view) => {\n                     const tabUi = {\n                        id: view.view.id,\n                        // ui will be loaded when its tab is opened\n                        view: \"layout\",\n                        rows: [],\n                     };\n\n                     return tabUi;\n                  }),\n                  on: {\n                     onViewChange: (prevId, nextId) => {\n                        this.onShow(nextId);\n                     },\n                  },\n               };\n\n               const addDataCy = function () {\n                  const $sidebar = $$(ids.sidebar);\n\n                  // set ids of controller buttons\n                  const collapseNode = $sidebar?.$view.querySelector(\n                     `[webix_tm_id=\"${ids.collapseMenu}\"]`\n                  );\n\n                  if (collapseNode)\n                     collapseNode.setAttribute(\n                        \"data-cy\",\n                        `tab-collapseMenu-${ids.collapseMenu}`\n                     );\n\n                  const expandNode = $sidebar?.$view.querySelector(\n                     `[webix_tm_id=\"${ids.expandMenu}\"]`\n                  );\n\n                  if (expandNode)\n                     expandNode.setAttribute(\n                        \"data-cy\",\n                        `tab-expandMenu-${ids.expandMenu}`\n                     );\n\n                  baseView.views((view) => {\n                     const node = $sidebar?.$view?.querySelector(\n                        `[webix_tm_id=\"${view.id}_menu\"]`\n                     );\n\n                     if (!node) {\n                        return;\n                     }\n\n                     node.setAttribute(\n                        \"data-cy\",\n                        `tab-${view.name.replace(\" \", \"\")}-${view.id}-${\n                           baseView.id\n                        }`\n                     );\n                  });\n               };\n\n               let columns = [sidebar, multiview];\n\n               if (settings.sidebarPos === \"right\") {\n                  columns = [multiview, sidebar];\n               }\n\n               _ui = {\n                  cols: columns,\n               };\n            } else\n               _ui = {\n                  view: \"spacer\",\n               };\n         } else {\n            const cells = baseView\n               .views((view) => {\n                  const accessLevel = view.getUserAccess();\n\n                  if (accessLevel > 0) {\n                     return view;\n                  }\n               })\n               .map((view) => {\n                  const tabUi = {\n                     id: view.id,\n                     // ui will be loaded when its tab is opened\n                     view: \"layout\",\n                     rows: [],\n                  };\n\n                  let tabTemplate = \"\";\n\n                  // tab icon\n                  if (view.tabicon) {\n                     if (settings.iconOnTop)\n                        tabTemplate = [\n                           \"<div class='ab-tabIconContainer'><span class='fa fa-lg fa-fw fa-\",\n                           view.tabicon,\n                           \"'></span><br/>\",\n                           view.label,\n                           \"</div>\",\n                        ].join(\"\");\n                     else\n                        tabTemplate = [\n                           \"<span class='fa fa-lg fa-fw fa-\",\n                           view.tabicon,\n                           \"'></span> \",\n                           view.label,\n                        ].join(\"\");\n                  }\n\n                  // no icon\n                  else tabTemplate = view.label;\n\n                  return {\n                     header: tabTemplate,\n                     body: tabUi,\n                  };\n               });\n\n            // if there are cells to display then return a tabview\n            if (cells.length) {\n               _ui = {\n                  rows: [\n                     {\n                        view: \"tabview\",\n                        id: ids.tab,\n                        minWidth: settings.minWidth,\n                        height: settings.height,\n                        tabbar: {\n                           height: 60,\n                           type: \"bottom\",\n                           css: settings.darkTheme ? \"webix_dark\" : \"\",\n                           on: {\n                              onAfterRender: () => {\n                                 baseView.views((view) => {\n                                    const node = $$(\n                                       ids.tab\n                                    )?.$view?.querySelector(\n                                       `[button_id=\"${view.id}\"]`\n                                    );\n\n                                    if (!node) return;\n\n                                    node.setAttribute(\n                                       \"data-cy\",\n                                       `tab ${view.name} ${view.id} ${baseView.id}`\n                                    );\n                                 });\n                              },\n                           },\n                        },\n                        multiview: {\n                           on: {\n                              onViewChange: (prevId, nextId) => {\n                                 this.onShow(nextId);\n                              },\n                           },\n                        },\n                        cells: cells,\n                     },\n                  ],\n               };\n            }\n            // else we return a spacer\n            else\n               _ui = {\n                  view: \"spacer\",\n               };\n         }\n      } else\n         _ui = {\n            view: \"spacer\",\n         };\n\n      _ui = super.ui([_ui]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n      const $tab = $$(ids.tab);\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      if ($tab) abWebix.extend($tab, abWebix.ProgressBar);\n\n      const baseView = this.view;\n      const viewComponents = this.viewComponents;\n\n      viewComponents.forEach((vc) => {\n         // vc.component.init(AB);\n\n         // Trigger 'changePage' event to parent\n         this.eventAdd({\n            emitter: vc.view,\n            eventName: \"changePage\",\n            listener: (...p) => this.changePage(...p),\n         });\n      });\n\n      // Trigger 'changeTab' event to parent\n      this.eventAdd({\n         emitter: baseView,\n         eventName: \"changeTab\",\n         listener: (...p) => this.changeTab(...p),\n      });\n\n      // initialize the sidebar and figure out if it should be collased or not\n      const $sidebar = $$(ids.sidebar);\n\n      if (!$sidebar) return;\n\n      const state = await ab.Storage.get(`${ids.tab}-state`);\n\n      if (!state) return;\n\n      // create a menu item for the collapse option to use later\n      const collapseMenu = {\n         id: ids.collapseMenu,\n         value: this.label(\"Collapse Menu\"),\n         icon: \"chevron-circle-left\",\n      };\n\n      // create a menu item from the expand option to use later\n      const expandMenu = {\n         id: ids.expandMenu,\n         value: this.label(\"Expand Menu\"),\n         icon: \"chevron-circle-right\",\n         hidden: true,\n      };\n\n      // this will collapse or expand the sidebar\n      $sidebar.setState(state);\n\n      const checkCollapseMenu = $sidebar.getItem(ids.collapseMenu) ?? null;\n      const checkExpandMenu = $sidebar.getItem(ids.expandMenu) ?? null;\n\n      // if the state is collapsed we need to make sure the expand option is available\n      if (state.collapsed) {\n         if (checkCollapseMenu && checkExpandMenu)\n            // $sidebar.remove(ids.collapseMenu);\n            $sidebar.add(expandMenu);\n      } else if (checkCollapseMenu && checkExpandMenu)\n         // $sidebar.remove(ids.collapseMenu);\n         $sidebar.add(collapseMenu);\n   }\n\n   changePage(pageId) {\n      const $tab = $$(this.ids.tab);\n\n      $tab?.blockEvent();\n      this.view.changePage(pageId);\n      $tab?.unblockEvent();\n   }\n\n   changeTab(tabViewId) {\n      const baseView = this.view;\n      const $tabViewId = $$(tabViewId);\n\n      // switch tab view\n      this.toggleParent(baseView.parent);\n\n      if (this.settings.stackTabs)\n         if (!$tabViewId.isVisible()) {\n            const showIt = setInterval(() => {\n               if ($tabViewId.isVisible()) clearInterval(showIt);\n\n               $tabViewId.show(false, false);\n            }, 200);\n         } else $$(this.ids.tab).setValue(tabViewId);\n   }\n\n   toggleParent(view) {\n      const $viewID = $$(view.id);\n\n      if (view.key === \"tab\" || view.key === \"viewcontainer\") {\n         $viewID?.show(false, false);\n      }\n      if (view.parent) {\n         this.toggleParent(view.parent);\n      }\n   }\n\n   onShow(viewId) {\n      const ids = this.ids;\n\n      let defaultViewIsSet = false;\n\n      const $sidebar = $$(ids.sidebar);\n\n      // if no viewId is given, then try to get the currently selected ID\n      if (!viewId && $sidebar)\n         viewId = $sidebar.getSelectedId().replace(\"_menu\", \"\");\n\n      const baseView = this.view;\n      const viewComponents = this.viewComponents;\n\n      viewComponents.forEach((vc) => {\n         // set default view id\n         const currView = baseView.views((view) => {\n            return view.id === vc.view.id;\n         });\n\n         let accessLevel = 0;\n\n         if (currView.length) accessLevel = currView[0].getUserAccess();\n\n         // choose the 1st View if we don't have one we are looking for.\n         if (!viewId && !defaultViewIsSet && accessLevel > 0) {\n            viewId = vc.view.id;\n\n            defaultViewIsSet = true;\n         }\n\n         // create view's component once\n         const $tab = $$(ids.tab);\n         const settings = this.settings;\n\n         if (!vc?.component && vc?.view?.id === viewId) {\n            // show loading cursor\n            if ($tab?.showProgress) $tab.showProgress({ type: \"icon\" });\n\n            vc.component = vc.view.component();\n\n            const $viewID = $$(vc.view.id);\n            const ab = this.AB;\n            const abWebix = ab.Webix;\n\n            if (settings.stackTabs) {\n               // update multiview UI\n               abWebix.ui(\n                  {\n                     // able to 'scroll' in tab view\n                     id: vc.view.id,\n                     view: \"scrollview\",\n                     css: \"ab-multiview-scrollview\",\n                     body: vc.component.ui(),\n                  },\n                  $viewID\n               );\n            } else {\n               // update tab UI\n               abWebix.ui(\n                  {\n                     // able to 'scroll' in tab view\n                     id: vc.view.id,\n                     view: \"scrollview\",\n                     css: \"ab-tabview-scrollview\",\n                     body: vc.component.ui(),\n                  },\n                  $viewID\n               );\n            }\n\n            // for tabs we need to look at the view's accessLevels\n            accessLevel = vc.view.getUserAccess();\n\n            vc.component.init(ab, accessLevel);\n\n            // done\n            setTimeout(() => {\n               // $$(v.view.id).adjust();\n\n               $tab?.hideProgress?.();\n               // check if tab has a hint\n               // if (vc?.view?.settings?.hintID) {\n               //    // fetch the steps for the hint\n               //    let hint = ab.hintID(vc.view.settings.hintID);\n               //    hint.createHintUI();\n               // }\n            }, 10);\n         }\n\n         // show UI\n         if (vc?.view?.id === viewId && vc?.component?.onShow)\n            vc.component.onShow();\n\n         if (settings.stackTabs && vc?.view?.id === viewId) {\n            $$(viewId)?.show(false, false);\n            $sidebar?.select(`${viewId}_menu`);\n         }\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewTextComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewText_${baseView.id}`,\n         Object.assign(\n            {\n               text: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const settings = this.settings;\n\n      const _uiText = {\n         id: ids.text,\n         view: \"template\",\n         minHeight: 10,\n         css: \"ab-custom-template\",\n         borderless: true,\n      };\n\n      if (settings.height) _uiText.height = settings.height;\n      else _uiText.autoheight = true;\n\n      const _ui = super.ui([_uiText]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   displayText(value) {\n      const ids = this.ids;\n      const result = this.view.displayText(value, ids.text);\n\n      const $text = $$(ids.text);\n\n      if (!$text) return;\n\n      $text.define(\"template\", result);\n      $text.refresh();\n   }\n\n   onShow() {\n      super.onShow();\n\n      // listen DC events\n      const dataview = this.datacollection;\n      const baseView = this.view;\n\n      if (dataview && baseView.parent.key !== \"dataview\") {\n         [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n            baseView.eventAdd({\n               emitter: dataview,\n               eventName: key,\n               listener: (...p) => this.displayText(...p),\n            });\n         });\n      }\n\n      this.displayText();\n   }\n};\n","import ClassUI from \"../../../../ui/ClassUI\";\n\nexport default class ABViewProperty extends ClassUI {\n   // constructor() {}\n\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {};\n   }\n\n   /** == Property == */\n   /**\n    * @function propertyComponent\n    * return the view and logic to display in property panel\n    *\n    * @return {Object} - {\n    * \t\t\t\t\t\tui: webix element,\n    * \t\t\t\t\t\tinit: function,\n    * \t\t\t\t\t\tlogic: object\n    * \t\t\t\t\t}\n    */\n   static propertyComponent() {\n      let ui = {\n         view: \"template\",\n         template: \"No UI\",\n      };\n\n      let init = (options) => {\n         // register callbacks:\n         for (var c in logic.callbacks) {\n            logic.callbacks[c] = options[c] || logic.callbacks[c];\n         }\n      };\n\n      let logic = {\n         callbacks: {},\n      };\n\n      return {\n         ui: ui,\n         init: init,\n         logic: logic,\n      };\n   }\n\n   fromSettings(settings) {\n      this.settings = settings;\n   }\n\n   toSettings() {\n      return this.settings || {};\n   }\n\n   /** == UI == */\n   /**\n    * @function component\n    * return the view and logic to display in display widget\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    *\n    * @return {Object} - {\n    * \t\t\t\t\t\tui: webix element,\n    * \t\t\t\t\t\tinit: function,\n    * \t\t\t\t\t\tlogic: object\n    * \t\t\t\t\t}\n    */\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      let ui = {\n         view: \"template\",\n         template: \"No UI\",\n      };\n\n      let init = (options) => {\n         // register callbacks:\n         for (var c in logic.callbacks) {\n            logic.callbacks[c] = options[c] || logic.callbacks[c];\n         }\n      };\n\n      let logic = {\n         callbacks: {},\n      };\n\n      return {\n         ui: ui,\n         init: init,\n         logic: logic,\n      };\n   }\n}\n","import ABViewProperty from \"./ABViewProperty\";\nimport ABViewFormButton from \"../ABViewFormButton\";\nimport ABViewPDFImporter from \"../ABViewPDFImporter\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nexport default class ABViewPropertyAddPage extends ABViewProperty {\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         formView: \"none\", // id of form to add new data\n      };\n   }\n\n   static propertyComponent(App, idBase) {\n      let ids = {\n         formView: `${idBase}_formView`,\n      };\n\n      let ui = {\n         id: ids.formView,\n         name: \"formView\",\n         view: \"richselect\",\n         label: L(\"Add New Form\"),\n         labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n         on: {\n            onChange: (newVal, oldVal) => {\n               if (newVal == L(\"No add new option\")) {\n                  $$(ids.formView).setValue(\"\");\n               }\n\n               _logic.callbacks.onSave();\n            },\n         },\n      };\n\n      let _init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      let _logic = {\n         callbacks: {\n            onSave: function () {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         setSettings: (view, settings = {}) => {\n            if (view == null) return;\n\n            // Set the options of the possible edit forms\n            let editForms = [\n               {\n                  id: \"none\",\n                  value: L(\"No add new option\"),\n               },\n            ];\n\n            let pagesHasForm = view\n               .pageRoot()\n               .pages((p) => {\n                  return p.views((v) => {\n                     return (\n                        v &&\n                        v.key == \"form\" &&\n                        v.datacollection &&\n                        v.datacollection.datasource &&\n                        v.datacollection.datasource.id ==\n                           view.field().settings.linkObject\n                     );\n                  }, true).length;\n               }, true)\n               .map((p) => {\n                  return {\n                     id: p.id,\n                     value: p.label,\n                  };\n               });\n\n            editForms = editForms.concat(pagesHasForm);\n\n            let $selector = $$(ids.formView);\n            if ($selector) {\n               $selector.define(\"options\", editForms);\n               $selector.define(\n                  \"value\",\n                  settings.formView || this.default.formView\n               );\n               $selector.refresh();\n            }\n         },\n\n         getSettings: (view) => {\n            let settings = view.settings || {};\n\n            settings.formView = $$(ids.formView).getValue();\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: ui,\n         init: _init,\n         setSettings: _logic.setSettings,\n         getSettings: _logic.getSettings,\n      };\n   }\n\n   fromSettings(settings = {}) {\n      this.settings = this.settings || {};\n      this.settings.formView =\n         settings.formView || this.constructor.default.formView;\n   }\n\n   getIds(idBase, App) {\n      return {\n         popup: App._App.unique(`${idBase}_popup_add_new`),\n         field: idBase.split(\"_\")[1],\n         button: App._App.unique(`${idBase}_popup_add_new_button`),\n      };\n   }\n\n   component(App, idBase) {\n      // This can be overwritten by creating a different getIds before calling .super\n      let ids = this.getIds(idBase, App);\n\n      let ui = \"\";\n\n      if (\n         this.settings.formView &&\n         this.settings.formView != this.constructor.default.formView\n      ) {\n         // let iDiv = document.createElement(\"div\");\n         // iDiv.className = \"ab-connect-add-new\";\n         const dataCy = `add new CR button ${this.settings.formView} ${ids.field}`;\n         // iDiv.innerHTML = `<a href=\"javascript:void(0);\" class=\"fa fa-plus ab-connect-add-new-link\" data-cy=\"${dataCy}\"></a>`;\n         // iDiv.appendChild(node);\n         // ui = iDiv.outerHTML;\n         ui = {\n            id: ids.button,\n            view: \"button\",\n            type: \"icon\",\n            icon: \"fa fa-plus\",\n            width: 32,\n            height: 32,\n            css: \"webix_primary ab-connect-add-new-link\",\n            on: {\n               onAfterRender: () => {\n                  $$(ids.button)\n                     ?.$view.querySelector(\"button\")\n                     .setAttribute(\"data-cy\", dataCy);\n               },\n            },\n         };\n      }\n\n      let _logic = {\n         callbacks: {\n            onSaveData: (saveData) => {\n               if ($$(ids.popup)) $$(ids.popup).close();\n            },\n            onCancel: () => {\n               if ($$(ids.popup)) $$(ids.popup).close();\n\n               return false;\n            },\n            onClearOnLoad: () => {\n               return true;\n            },\n            clearOnLoad: () => {\n               return true;\n            },\n         },\n\n         applicationLoad: (application) => {\n            this._application = application;\n         },\n\n         onClick: (dc) => {\n            let pageId = this.settings.formView;\n            let page = this._application.pages((p) => p.id == pageId, true)[0];\n\n            return _logic.openFormPopup(page, dc);\n         },\n\n         /**\n          * @method openFormPopup\n          *\n          * @param page {ABViewPage}\n          * @param dc {ABDataCollection}\n          */\n         openFormPopup: (page, dc) => {\n            return new Promise((resolve, reject) => {\n               if (this._application == null) return resolve();\n\n               if ($$(ids.popup)) {\n                  $$(ids.popup).show();\n                  return resolve();\n               }\n\n               // Clone page so we modify without causing problems\n               let pageClone = page.clone(null, null, { ignoreSubPages: true });\n               pageClone.id = this._application.AB.uuid(); // lets take the stored id can create a new dynamic one so our views don't duplicate\n               // pageClone.id = pageClone.id + \"-\" + webix.uid(); // lets take the stored id can create a new dynamic one so our views don't duplicate\n               let popUpComp = pageClone.component();\n               let ui = popUpComp.ui();\n\n               // Listen 'saved' event of the form widget\n               const saveViews =\n                  pageClone.views(\n                     (v) =>\n                        v instanceof ABViewFormButton ||\n                        v instanceof ABViewPDFImporter,\n                     true\n                  ) ?? [];\n\n               saveViews.forEach((view) => {\n                  const v =\n                     view instanceof ABViewFormButton ? view.parent : view;\n                  v.on(\"saved\", (savedData) => {\n                     _logic?.callbacks?.onSaveData(savedData);\n                     // ? is there ever a case where we want to keep an add popup open after saving?\n                     // ! setting this to always close\n\n                     if ($$(ids.popup)) {\n                        $$(ids.popup).close();\n                     } else {\n                        var popup = this.getTopParentView();\n                        popup.close();\n                     }\n                  });\n               });\n\n               let popupTemplate = {\n                  view: \"window\",\n                  id: ids.popup,\n                  modal: true,\n                  position: \"center\",\n                  // position:function(stthis.__addPageToolate){\n                  // \tstate.left = x + 20this.__addPageTool; // offset the popups\n                  // \tstate.top = y + 20;this.__addPageTool\n                  // },\n                  resize: true,\n                  width: parseInt(this.settings.popupWidth) || 700,\n                  height: parseInt(this.settings.popupHeight) + 44 || 450,\n                  css: \"ab-main-container\",\n                  head: {\n                     view: \"toolbar\",\n                     css: \"webix_dark\",\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: page.label,\n                           css: \"modal_title\",\n                           align: \"center\",\n                        },\n                        {\n                           view: \"button\",\n                           label: L(\"Close\"),\n                           autowidth: true,\n                           align: \"center\",\n                           click: function () {\n                              var popup = this.getTopParentView();\n                              popup.close();\n                           },\n                        },\n                     ],\n                  },\n                  body: {\n                     view: \"scrollview\",\n                     scroll: true,\n                     body: ui,\n                  },\n               };\n\n               // Create popup\n               webix.ui(popupTemplate).show();\n\n               // Initial UI components\n               const accessLevel = 3; // TODO: Is it correct\n               popUpComp.init(this._application.AB, accessLevel, {\n                  onSaveData: _logic.callbacks.onSaveData,\n                  onCancelClick: _logic.callbacks.onCancel,\n                  clearOnLoad: _logic.callbacks.clearOnLoad,\n                  onClearOnLoad: _logic.callbacks.onClearOnLoad,\n               });\n\n               popUpComp.onShow();\n\n               setTimeout(async () => {\n                  _logic.setDefaultValue(dc, pageClone);\n\n                  resolve();\n               }, 100);\n            });\n         },\n\n         setDefaultValue: (dc, page) => {\n            if (!dc) return;\n\n            let obj = dc.datasource;\n            if (!obj) return;\n\n            let linkedData = dc.getCursor();\n            if (!linkedData) return;\n\n            page.views().forEach((v) => {\n               if (!v || v.key != \"form\") return;\n\n               v.views().forEach((fView) => {\n                  if (fView.key != \"connect\" || fView.settings == null) return;\n\n                  let field = fView.field();\n                  if (field == null) return;\n\n                  let objLink = field.datasourceLink;\n                  if (objLink == null || objLink.id != obj.id) return;\n\n                  let data = {};\n                  let relationName = field.relationName();\n                  data[relationName] = {\n                     id: linkedData.id,\n                  };\n\n                  // Add custom index values\n                  let indexes = obj.indexes() || [];\n                  indexes.forEach((idx) => {\n                     (idx.fields || []).forEach((f) => {\n                        data[relationName][f.columnName] =\n                           linkedData[f.columnName];\n                     });\n                  });\n\n                  // Set label of selected item\n                  if (linkedData.text) {\n                     data[relationName].text = linkedData.text;\n                     data[relationName].value = data[relationName].text;\n                  } else {\n                     let rawData = {};\n                     rawData[relationName] = linkedData;\n                     data[relationName].text = field.format(rawData);\n                     data[relationName].value = data[relationName].text;\n                  }\n\n                  let comp = v.viewComponents[fView.id];\n                  if (!comp) return;\n\n                  const ui = typeof comp.ui == \"function\" ? comp.ui() : comp.ui;\n                  const inputId = ui?.inputId || ui?.rows?.[0]?.inputId;\n\n                  if (inputId) field.setValue($$(inputId), data);\n               });\n            });\n         },\n      };\n\n      let init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n         if (ui) {\n            for (let c in options) {\n               ui.on[c] = options[c];\n            }\n         }\n      };\n\n      return {\n         ui: ui,\n         init: init,\n\n         applicationLoad: _logic.applicationLoad,\n         onClick: _logic.onClick,\n         openFormPopup: _logic.openFormPopup,\n      };\n   }\n}\n","import ABViewPropertyAddPage from \"./ABViewPropertyAddPage\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nexport default class ABViewPropertyEditPage extends ABViewPropertyAddPage {\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         editForm: \"none\", // The url pointer of ABViewForm\n      };\n   }\n\n   static propertyComponent(App, idBase) {\n      let ids = {\n         formEdit: `${idBase}_editForm`,\n      };\n\n      let ui = {\n         id: ids.formEdit,\n         name: \"editForm\",\n         view: \"richselect\",\n         label: L(\"Edit Form\"),\n         labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n         on: {\n            onChange: (newVal, oldVal) => {\n               if (newVal == L(\"No add new option\")) {\n                  $$(ids.formEdit).setValue(\"\");\n               }\n\n               _logic.callbacks.onSave();\n            },\n         },\n      };\n\n      let _init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      let _logic = {\n         callbacks: {\n            onSave: function () {\n               console.warn(\"NO onSave()!\");\n            },\n            clearOnLoad: () => {\n               return false; // always false, we're trying to edit data\n            },\n         },\n\n         setSettings: (view, settings = {}) => {\n            if (view == null) return;\n            settings.clearOnLoad = false; // doesn't work\n\n            // Set the options of the possible edit forms\n            let editForms = [\n               {\n                  id: \"none\",\n\n                  value: L(\"No add new option\"),\n               },\n            ];\n\n            (view.pageRoot().pages(() => true, true) || []).forEach((p) => {\n               if (!p) return;\n\n               p.views(() => true, true).forEach((v) => {\n                  if (\n                     v &&\n                     v.key == \"form\" &&\n                     v.datacollection &&\n                     v.datacollection.datasource &&\n                     v.datacollection.datasource.id ==\n                        view.field().settings.linkObject\n                  ) {\n                     editForms.push({\n                        id: v.urlPointer(),\n                        value: `${p.label} - ${v.label}`,\n                     });\n                  }\n               });\n            });\n\n            let $selector = $$(ids.formEdit);\n            if ($selector) {\n               $selector.define(\"options\", editForms);\n               $selector.define(\n                  \"value\",\n                  settings.editForm || this.default.editForm\n               );\n               $selector.refresh();\n            }\n         },\n\n         getSettings: (view) => {\n            let settings = view.settings || {};\n\n            let $selector = $$(ids.formEdit);\n            let $selectPopup = $selector.getPopup();\n            let selectedItem = ($selectPopup.config.body.data || []).filter(\n               (opt) => opt.id == $selector.getValue()\n            )[0];\n            if (selectedItem) {\n               settings.editForm = selectedItem.id; // The url pointer of ABViewForm\n            }\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: ui,\n         init: _init,\n         setSettings: _logic.setSettings,\n         getSettings: _logic.getSettings,\n      };\n   }\n\n   fromSettings(settings = {}) {\n      this.settings = this.settings || {};\n      this.settings.editForm =\n         settings.editForm || this.constructor.default.editForm;\n   }\n\n   component(App, idBase) {\n      // Overwrite the popup-lookup function\n      function getIds(idBase, App) {\n         return {\n            popup: App._App.unique(`${idBase}_popup_edit_form`),\n            field: idBase.split(\"_\")[1],\n         };\n      }\n      this.getIds = getIds;\n\n      // call to addpage\n      let comp = super.component(App, idBase);\n\n      comp.onClick = () => {\n         if (\n            !this._application ||\n            !this.settings.editForm ||\n            this.settings.editForm == this.constructor.default.editForm\n         )\n            return Promise.resolve();\n\n         let form = this._application.urlResolve(this.settings.editForm);\n         if (!form) return Promise.resolve();\n\n         let page = form.pageParent();\n         if (!page) return Promise.resolve();\n\n         return comp.openFormPopup(page);\n      };\n\n      return comp;\n   }\n}\n","/*\n * ABViewPropertyFilterData\n * This is a displayable ui component that will manage displaying a\n * means of searching for the user.\n *\n * This component will emit: \"filter.data\" when one of the filter options\n * have been enabled.\n *    \"filter.data\" has 2 parameters: fnFilter, filterRules\n *       fnFilter {function} when passed a row of data from the grid,\n *                return true/false if it passes the filter.\n *       filterRules {array} of each of the filter rules that have been\n *                created. Note: the fnFilter still checks the validity\n *                of the row based on these rules.\n *                (this is used for the parent component to indicate how\n *                many rules are currently applied to the data being displayed)\n */\nconst ABMLClass = require(\"../../ABMLClass\");\nimport ABViewProperty from \"./ABViewProperty\";\nimport ABViewComponent from \"../viewComponent/ABViewComponent\";\n\n// const ABViewGridFilterRule = require(\"../../../rules/ABViewGridFilterRule\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nclass FilterRuleSettings extends ABMLClass {\n   constructor() {\n      super([\"label\"], AB);\n   }\n\n   fromSettings(settings) {\n      super.fromValues(settings);\n      this.filters = settings.filters;\n   }\n\n   toSettings() {\n      let obj = super.toObj();\n      obj.filters = this.filters;\n      return obj;\n   }\n}\n\nclass ABViewPropertyFilterDataComponent extends ABViewComponent {\n   constructor(viewPropertyFilterData, idBase) {\n      var base = idBase || viewPropertyFilterData.idBase;\n      super(base, {});\n   }\n}\n\nexport default class ABViewPropertyFilterData extends ABViewProperty {\n   constructor(AB, idBase) {\n      super(idBase, {\n         buttonAddfilter: \"\",\n         filterPanel: \"\",\n         globalFilterFormContainer: \"\",\n         globalFilterForm: \"\",\n         filterMenutoolbar: \"\",\n         resetFilterButton: \"\",\n      });\n\n      this.AB = AB;\n      this.idBase = idBase;\n      this.object = null;\n      // this.queryRules = [];\n\n      this.__externalSearchText = null;\n      // {string}\n      // External sources of text filters are stored here. This is most likely\n      // from the global search toolbar entry.\n      this.rowFilter = this.AB.filterComplexNew(`${this.ids.component}_filter`);\n      // {RowFilter}\n      // When .userFilterPosition == \"toolbar\" we use this RowFilter to\n      // display a form in a popup where the toolbar button is.\n\n      this.rowFilterForm = this.AB.filterComplexNew(\n         `${this.ids.component}_filter_form`\n      );\n      // {RowFilter}\n      // When .userFilterPosition == \"form\" we use this RowFilter to\n      // display a form under the toolbar.\n\n      this._handler_rowFilterChanged = (value) => {\n         let filterRules = value.rules || [];\n\n         // if ($$(ids.buttonFilter)) {\n         //    $$(ids.buttonFilter).define('badge', filterRules.length || null);\n         //    $$(ids.buttonFilter).refresh();\n         // }\n\n         // be notified when there is a change in the filter\n         this.triggerCallback((rowData) => {\n            return this.rowFilter.isValid(rowData);\n         }, filterRules);\n      };\n\n      this._handler_rowFilterFormChanged = () => {\n         this.triggerCallback();\n      };\n\n      this.initialized = false;\n      // {bool}\n      // make sure this is not .init() more than once\n   }\n\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         filterOption: 1,\n         // {integer}\n         // 0 - Not allow\n         // 1 - Enable user filter\n         // 2 - Predefined filter menu\n         // 3 - Global filter input\n\n         // filterOptions == 1 options\n         userFilterPosition: \"toolbar\",\n         // {string} the location of the filter:\n         //    \"toolbar\" : there will be an \"Add Filters\" button on\n         //                the toolbar that will trigger the form popup\n         //    \"form\"    : there will be a button under the toolbar that\n         //                will bring up the form popup.\n\n         isGlobalToolbar: 1,\n         // {boolean|truthy}\n         // when \"toolbar\" is chosen for userFilterPosition, this setting\n         // allows us to also include the search criteria specified in\n         // the search box on the toolbar.\n\n         // filterOptions == 2 options\n         // predefined filters created by the builders. There will be\n         // an area under the toolbar that displays buttons to choose\n         // between one of the predefined queryRules.\n         // queryRules: [], // An array of ABViewGridFilterRule object\n\n         // filterOptions == 3 options\n         // globalFilterPosition: \"default\",\n         // {string} [ \"default\", \"single\" ]\n         //    \"default\" : shows default grid with all potential matches\n         //    \"single\"  : grid only shows when it has a match.  only 1\n         //                match is shown. ( is this true?? )\n      };\n   }\n\n   /**\n    * @method fromSettings\n    * Create an initial set of default values based upon our settings object.\n    * @param {obj} settings  The settings object we created in .toSettings()\n    */\n   fromSettings(settings) {\n      settings = settings || {};\n\n      settings.filterOption =\n         typeof settings.filterOption != \"undefined\"\n            ? settings.filterOption\n            : ABViewPropertyFilterData.default.filterOption;\n\n      settings.isGlobalToolbar =\n         typeof settings.isGlobalToolbar != \"undefined\"\n            ? settings.isGlobalToolbar\n            : ABViewPropertyFilterData.default.isGlobalToolbar;\n\n      this.settings = settings;\n   }\n\n   /**\n    * @method objectLoad\n    * A rule is based upon a Form that was working with an Object.\n    * .objectLoad() is how we specify which object we are working with.\n    *\n    * @param {ABObject} The object that will be used to evaluate the Rules\n    */\n   objectLoad(object) {\n      this.object = object;\n\n      if (this.rowFilter) {\n         // this.rowFilter.applicationLoad(object.application);\n         this.rowFilter.fieldsLoad(object.fields());\n      }\n\n      if (this.rowFilterForm) {\n         // this.rowFilterForm.applicationLoad(object.application);\n         this.rowFilterForm.fieldsLoad(object.fields());\n      }\n   }\n\n   viewLoad(view) {\n      this.view = view;\n   }\n\n   /** == UI == */\n   ui() {\n      var self = this;\n      var ids = this.ids;\n\n      return {\n         id: ids.filterPanel,\n         type: \"space\",\n         borderless: true,\n         padding: 0,\n         hidden: true,\n         rows: [\n            {\n               id: ids.globalFilterFormContainer,\n               hidden: true,\n               cols: [\n                  {\n                     id: ids.globalFilterForm,\n                     view: \"text\",\n                     placeholder: L(\"Search or scan a barcode to see results\"),\n                     on: {\n                        onTimedKeyPress: () => {\n                           this.triggerCallback();\n                        },\n                     },\n                  },\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     width: 28,\n                     type: \"icon\",\n                     icon: \"fa fa-times\",\n                     click: function () {\n                        var $form = $$(ids.globalFilterForm);\n                        $form.setValue(\"\");\n                        $form.focus();\n                        $form.callEvent(\"onTimedKeyPress\");\n                     },\n                  },\n               ],\n            },\n            {\n               id: ids.buttonAddfilter,\n               view: \"button\",\n               css: \"webix_primary\",\n               value: L(\"Add Filter\"),\n               click: () => {\n                  this.rowFilterForm.popUp($$(ids.buttonAddfilter).getNode(), {\n                     pos: \"bottom\",\n                  });\n               },\n            },\n            {\n               view: \"toolbar\",\n               id: ids.filterMenutoolbar,\n               css: \"ab-data-toolbar\",\n               hidden: true,\n               cols: [\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     id: ids.resetFilterButton,\n                     label: L(\"Reset Filter\"),\n                     icon: \"fa fa-ban\",\n                     type: \"icon\",\n                     // badge: 0,\n                     autowidth: true,\n                     click: function () {\n                        self.resetFilter();\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n\n      var ids = this.ids;\n      // this.filter_popup = webix.ui({\n      //    view: \"popup\",\n      //    id: ids.component,\n      //    width: 600,\n      //    height: 400,\n      //    hidden: true,\n      //    body: this.rowFilter.ui,\n      // });\n\n      this.rowFilter.init();\n      this.rowFilter.removeListener(\"changed\", this._handler_rowFilterChanged);\n      this.rowFilter.on(\"changed\", this._handler_rowFilterChanged);\n\n      this.rowFilterForm.init();\n      this.rowFilterForm.removeListener(\n         \"changed\",\n         this._handler_rowFilterFormChanged\n      );\n      this.rowFilterForm.on(\"changed\", this._handler_rowFilterFormChanged);\n      this.rowFilterForm.removeListener(\n         \"save\",\n         this._handler_rowFilterFormChanged\n      );\n      this.rowFilterForm.on(\"save\", this._handler_rowFilterFormChanged);\n\n      $$(ids.filterPanel)?.hide();\n      $$(ids.buttonAddfilter)?.hide();\n      $$(ids.filterMenutoolbar)?.hide();\n      $$(ids.globalFilterFormContainer)?.hide();\n\n      switch (this.settings.filterOption) {\n         case 0:\n            break;\n         case 1:\n            switch (this.settings.userFilterPosition) {\n               case \"form\":\n                  $$(ids.buttonAddfilter)?.show();\n                  $$(ids.filterPanel)?.show();\n                  break;\n               case \"toolbar\":\n                  $$(ids.filterPanel)?.hide();\n                  break;\n            }\n            break;\n         case 2:\n            $$(ids.filterPanel)?.show();\n            var $filterMenutoolbar = $$(ids.filterMenutoolbar);\n            if ($filterMenutoolbar) {\n               $filterMenutoolbar.show();\n\n               // populate filter items\n               if (this.settings?.queryRules) {\n                  (this.settings.queryRules || []).forEach((qr) => {\n                     let Rule = new FilterRuleSettings();\n                     Rule.fromSettings(qr);\n                     var filterRuleButton = {\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        label: Rule.label,\n                        icon: \"fa fa-filter\",\n                        type: \"icon\",\n                        // badge: 0,\n                        autowidth: true,\n                        click: () => {\n                           this.emit(\"filter.data\", null, Rule.filters);\n                           // this.selectFilter(qr.filter);\n                        },\n                     };\n                     $filterMenutoolbar.addView(filterRuleButton);\n                  });\n               }\n            }\n            break;\n         case 3:\n            $$(ids.globalFilterFormContainer)?.show();\n            $$(ids.filterPanel)?.show();\n            break;\n      }\n   }\n\n   filterRules() {\n      let rowFilterRules = null;\n\n      switch (this.settings.userFilterPosition) {\n         case \"form\":\n            rowFilterRules = this.rowFilterForm.getValue();\n            break;\n         case \"toolbar\":\n            rowFilterRules = this.rowFilter.getValue();\n            break;\n      }\n\n      return rowFilterRules;\n   }\n\n   /**\n    * @method getFilter()\n    * Return a fn() that returns {truthy} with a given row of\n    * data.\n    */\n   getFilter() {\n      // default filter\n      if (this.__currentFilter == null) {\n         // if empty search text in global single mode, then no display rows\n         if (\n            this.settings.filterOption == 3 &&\n            this.settings.globalFilterPosition == \"single\"\n         )\n            this.__currentFilter = (/* row */) => {\n               return false;\n            };\n         // always true, show every rows\n         else\n            this.__currentFilter = (/* row */) => {\n               return true;\n            };\n      }\n\n      return this.__currentFilter;\n   }\n\n   /**\n    * @method triggerCallback()\n    * We compile our current search options and emit them back to our\n    * parent container.\n    */\n   triggerCallback(/*fnFilter, filterRules*/) {\n      let searchRules = this.searchText(this.__externalSearchText);\n      let rowFilterRules = this.filterRules();\n\n      let badgeCount = 0;\n      if (rowFilterRules?.rules?.length) {\n         badgeCount = rowFilterRules?.rules?.length;\n         if (searchRules) {\n            badgeCount++;\n            rowFilterRules = {\n               glue: \"and\",\n               rules: [rowFilterRules, searchRules],\n            };\n         }\n      } else {\n         rowFilterRules = searchRules;\n      }\n\n      this.emit(\"filter.data\", null, rowFilterRules);\n\n      if (badgeCount == 0) badgeCount = false;\n      const $button = $$(this.ids.buttonAddfilter);\n      if ($button) {\n         $button.config.badge = badgeCount;\n         $button.refresh();\n      }\n   }\n\n   resetFilter() {\n      this.triggerCallback(() => true, []);\n   }\n\n   /**\n    * @method externalSearchText()\n    * Save any search criteria established from outside this filterHelper.\n    * NOTE: The ABViewGrid has a toolbar search entry that will provide\n    * this value.\n    * @param {string} search\n    *        The typed in search criteria.\n    */\n   externalSearchText(search = null) {\n      this.__externalSearchText = search;\n      this.triggerCallback(); // update each time\n   }\n\n   /**\n    * @method searchText()\n    * Retrieve the typed in search terms from the user, and convert them\n    * into a set of Rules that will modify our results.\n    * If an external search param is provided, use that instead.\n    * @param {string} externalText\n    * @return {json} The QB Rule condition for the search criteria\n    */\n   searchText(externalText) {\n      var search;\n      if (externalText) {\n         search = externalText;\n      } else {\n         search = ($$(this.ids.globalFilterForm)?.getValue() ?? \"\").trim();\n      }\n      if (!search) return null; // <-- includes \"\"\n\n      // find the individual \"terms\" that we should search for\n      let terms = search.trim().toLowerCase().split(\" \");\n\n      // build a set of conditions for each term\n      var allTerms = [];\n\n      var allFields = this.object?.fields() || [];\n\n      terms.forEach((t) => {\n         var fieldTerms = [];\n\n         // for each field, add a match condition for that field\n         // (if the field applies)\n         allFields.forEach((f) => {\n            if (f.fieldIsFilterable()) {\n               switch (f.key) {\n                  case \"number\":\n                  case \"string\":\n                  case \"LongText\":\n                  case \"email\":\n                     fieldTerms.push({\n                        key: f.id,\n                        rule: \"contains\",\n                        value: t,\n                     });\n                     break;\n\n                  case \"list\":\n                     var options = f.options();\n                     options.forEach((o) => {\n                        if (o.text.indexOf(t) > -1) {\n                           fieldTerms.push({\n                              key: f.id,\n                              rule: \"equals\",\n                              value: o.id,\n                           });\n                        }\n                     });\n                     break;\n               }\n            }\n         });\n\n         if (fieldTerms.length > 0) {\n            allTerms.push({\n               glue: \"or\",\n               rules: fieldTerms,\n            });\n         }\n      });\n\n      if (allTerms.length > 0) {\n         var searchRules = {\n            glue: \"and\",\n            rules: allTerms,\n         };\n         return searchRules;\n      } else {\n         return null;\n      }\n   }\n\n   showPopup($view) {\n      // this.filter_popup.show($view, null, { pos: \"top\" });\n      this.rowFilter.popUp($view, null, { pos: \"center\" });\n   }\n}\n","import ABViewProperty from \"./ABViewProperty\";\nimport ABViewComponent from \"../viewComponent/ABViewComponent\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nclass ABViewPropertyLinkPageComponent extends ABViewComponent {\n   constructor(linkPageHelper, idBase) {\n      let base = idBase || `ABViewPropertyLinkPage_xxx`;\n      super(base, {});\n\n      this.linkPageHelper = linkPageHelper;\n      this.AB = linkPageHelper.AB;\n\n      this.view = null;\n      // {ABViewXXXX}\n      // the ABView object this link references.\n\n      this.datacollection = null;\n      // {ABDataCollection}\n      // The related Datacollection to this view that drives it's data.\n      // we usually have to set the cursor before the view displays the\n      // appropriate data.\n   }\n\n   ui() {\n      return {};\n   }\n\n   init(options) {\n      if (options.view) this.view = options.view;\n\n      if (options.datacollection) this.datacollection = options.datacollection;\n   }\n\n   changePage(pageId, rowId) {\n      if (this.datacollection) {\n         this.datacollection.once(\"changeCursor\", () => {\n            this.view?.changePage(pageId);\n         });\n         this.datacollection.setCursor(rowId);\n      } else {\n         this.view?.changePage(pageId);\n      }\n   }\n}\n\nexport default class ABViewPropertyLinkPage extends ABViewProperty {\n   // constructor() {\n   //    super();\n   // }\n\n   /** == UI == */\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   component(v1App = false) {\n      let component = new ABViewPropertyLinkPageComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (...params) => {\n               return newComponent.init(...params);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n            changePage: (...params) => {\n               return newComponent.changePage(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n}\n","//\n// ABViewQueryBuilderObjectFieldConditions\n//\n// A UI component that is responsible for displaying a QueryBuilder based upon\n// the fields of a given ABObject.\n//\n// This object is also responsible for saving it's state to a settings value,\n// and generating the settings value to be saved.\n\nmodule.exports = class ABViewQueryBuilderObjectFieldConditions {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(label) {\n      this.label = label;\n      this.ui = null;\n   }\n\n   /**\n    * cleanRules\n    * walk through all the QueryBuilder (QB) rules and make conversions\n    * of the data into their proper formats.\n    * @param {obj} rules  the {rules} obj that is returned from the QB object\n    * @param {array} fields  an array of field definitions from the QB object\n    * @param {bool} dateToString  convert Dates to String format?\n    */\n   cleanRules(rules, fields, dateToString) {\n      if (typeof dateToString == \"undefined\") dateToString = true;\n\n      // walk the given condition rules / values, walk them and make sure\n      // any given rules have properly formatted values.\n      function processCondition(rule) {\n         // make sure rule is provided\n         if (rule) {\n            if (rule.glue && rule.rules) {\n               rule.rules.forEach((r) => {\n                  processCondition(r);\n               });\n            } else {\n               // converting a single rule:\n\n               var field = fields.filter((f) => {\n                  return f.id == rule.key;\n               })[0];\n               if (field) {\n                  switch (field.type) {\n                     case \"number\":\n                     case \"formula\":\n                        // when getting data from the server, the numbers are\n                        // sent back as strings (\"100.25\").\n                        // make sure to convert strings to numbers:\n                        if (typeof rule.value == \"string\") {\n                           if (rule.value.indexOf(\".\") == -1) {\n                              rule.value = parseInt(rule.value);\n                           } else {\n                              rule.value = parseFloat(rule.value);\n                           }\n                        }\n                        break;\n                     case \"date\":\n                        // in some cases we want to convert the Date() object returned\n                        // by QueryBuilder into a string for saving on the Server.\n                        if (dateToString) {\n                           // if we have a Date() obj returned from QueryBuilder,\n                           // convert to a string format:\n                           if (rule.value instanceof Date) {\n                              rule.value = webix.i18n.dateFormatStr(rule.value);\n                           }\n                        } else {\n                           // in other cases we want to convert the string returned\n                           // by the server into a Date() for the QB\n                           if (typeof rule.value == \"string\") {\n                              rule.value = new Date(rule.value);\n                           }\n                        }\n\n                        break;\n                  }\n               }\n            }\n         }\n      }\n      processCondition(rules);\n   }\n\n   // component\n   // initialize the UI display for this popup editor.\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      var L = App.Label;\n\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return this.unique(idBase + key ) + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         component: myUnique(\"qbObjectFieldConditions\"),\n         queryBuilder: myUnique(\"qBuilder\"),\n         queryBuilderContainer: myUnique(\"qBuilderContainer\"),\n         queryBuilderLayout: myUnique(\"qBuilderLayout\"),\n         showQBButton: myUnique(\"showQBButton\"),\n      });\n\n      // webix UI definition:\n      this.ui = {\n         view: \"layout\",\n         id: ids.queryBuilderLayout,\n         hidden: true,\n         type: \"line\",\n         rows: [\n            {\n               id: ids.showQBButton,\n               cols: [\n                  { fillspace: true },\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     name: \"addqb\",\n                     value: L(\"Add Custom Conditions\"),\n                     autowidth: true,\n                     click: function () {\n                        $$(ids.queryBuilderContainer).show();\n                        $$(ids.showQBButton).hide();\n                        // _logic.buttonCancel();\n                     },\n                  },\n                  { fillspace: true },\n               ],\n            },\n            {\n               hidden: true,\n               id: ids.queryBuilderContainer,\n               cols: [\n                  {\n                     view: \"querybuilder\",\n                     id: ids.queryBuilder,\n                     fields: this.conditionFields(),\n                  },\n               ],\n            },\n         ],\n      };\n\n      // tack on a label if provided.\n      if (this.label) {\n         this.ui.rows[1].cols.unshift({\n            view: \"label\",\n            css: \"ab-text-bold\",\n            label: this.label,\n            width: this.AB.UISettings.config().labelWidthLarge,\n         });\n      }\n\n      // for setting up UI\n      this.init = (options) => {\n         options = options || {};\n\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         /**\n          * cleanRules\n          * walk through all the QueryBuilder (QB) rules and make conversions\n          * of the data into their proper formats.\n          * @param {obj} rules  the {rules} obj that is returned from the QB object\n          * @param {array} fields  an array of field definitions from the QB object\n          * @param {bool} dateToString  convert Dates to String format?\n          */\n         cleanRules: (rules, fields, dateToString) => {\n            this.cleanRules(rules, fields, dateToString);\n         },\n\n         getValue: () => {\n            var values = null;\n            var QB = $$(ids.queryBuilder);\n            if (QB) {\n               values = QB.getValue();\n            }\n\n            // convert dates to simpler format:\n            // by default we're getting long values: \"Mon Feb 2, 2018 GMT xxxxxxx\",\n            // and webix doesn't seem to understand them when we send them back.\n            // so save simple date values: \"mm/dd/yyyy\"\n            if (values) {\n               _logic.cleanRules(values[0], values[1], true);\n            }\n\n            return values;\n         },\n\n         setValue: (values) => {\n            values = values || [];\n            if (!Array.isArray(values)) values = [values];\n            if (values.length == 0) {\n               values.push({});\n            } // push default rules\n            if (values.length < 2) {\n               values.push(this.conditionFields());\n            }\n\n            // convert dates from our server side \"string\" format into\n            // Date() objects.\n            _logic.cleanRules(values[0], values[1], false);\n\n            var QB = $$(ids.queryBuilder);\n            if (QB) {\n               if (values[0] && values[0].rules && values[0].rules.length) {\n                  QB.setValue(values[0]);\n                  $$(ids.queryBuilderContainer).show();\n                  $$(ids.showQBButton).hide();\n               }\n            }\n         },\n      });\n\n      this.getValue = _logic.getValue;\n      this.show = _logic.show;\n      this.setValue = _logic.setValue;\n   }\n\n   objectLoad(object) {\n      this.currentObject = object;\n   }\n\n   // conditionFields()\n   // Return the list of fields we are able to update.\n   // @return {array} of querybuilder field definitions:\n   //\t\t\t\t\t[\n   // \t\t\t\t\t\t{ id:\"fname\",   value:\"First Name\", type:\"string\" },\n   //\t\t\t\t\t    { id:\"lname\",   value:\"Last Name\",  type:\"string\" },\n   //\t\t\t\t\t    { id:\"age\",     value:\"Age\",        type:\"number\" },\n   //\t\t\t\t\t    { id:\"bdate\",   value:\"Birth Date\", type:\"date\" }\n   //\t\t\t\t\t]\n   conditionFields() {\n      var fieldTypes = [\n         \"string\",\n         \"LongText\",\n         \"number\",\n         \"date\",\n         \"email\",\n         \"formula\",\n         \"calculate\",\n      ];\n\n      var currFields = [];\n\n      if (this.currentObject) {\n         this.currentObject.fields().forEach((f) => {\n            if (fieldTypes.indexOf(f.key) != -1) {\n               // NOTE: the .id value must match the obj[.id]  in the data set\n               // so if your object data looks like:\n               // \t{\n               //\t\tname_first:'Neo',\n               //\t\tname_last: 'The One'\n               //  },\n               // then the ids should be:\n               // { id:'name_first', value:'xxx', type:'string' }\n\n               let type = f.key;\n               if (f.key == \"formula\" || f.key == \"calculate\") type = \"number\";\n               else if (f.key == \"LongText\") type = \"string\";\n\n               currFields.push({\n                  id: f.columnName,\n                  value: f.label,\n                  type: type,\n               });\n            }\n         });\n      }\n\n      return currFields;\n   }\n\n   // process\n   // Take the provided data and process each of our rules.\n   // @param {obj} options\n   // @return {promise}\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var numDone = 0;\n         var onDone = () => {\n            numDone++;\n            if (numDone >= this.listRules.length) {\n               resolve();\n            }\n         };\n\n         this.listRules.forEach((rule) => {\n            rule\n               .process(options)\n               .then(function () {\n                  onDone();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n\n         if (this.listRules.length == 0) {\n            resolve();\n         }\n      });\n   }\n\n   showQueryBuilderContainer() {\n      $$(this.ids.queryBuilderLayout).show();\n      $$(this.ids.queryBuilderContainer).show();\n      $$(this.ids.showQBButton).hide();\n   }\n\n   // // fromSettings\n   // // Create an initial set of default values based upon our settings object.\n   // // @param {obj} settings  The settings object we created in .toSettings()\n   // fromSettings (settings) {\n   // \t// settings: [\n   // \t//  { rule.settings },\n   // \t//  { rule.settings }\n   // \t// ]\n\n   // \t// clear any existing Rules:\n   // \tthis.listRules.forEach((rule)=>{\n   // \t\t$$(this.ids.rules).removeView(rule.ids.component);\n   // \t})\n   // \tthis.listRules = [];\n\n   // \tif (settings) {\n   // \t\tsettings.forEach((ruleSettings)=>{\n   // \t\t\tthis.addRule(ruleSettings);\n   // \t\t})\n   // \t}\n   // }\n\n   // // toSettings\n   // // create a settings object to be persisted with the application.\n   // // @return {array} of rule settings.\n   // toSettings () {\n   // \tvar settings = [];\n   // \tthis.listRules.forEach((r)=>{\n   // \t\tsettings.push(r.toSettings());\n   // \t})\n   // \treturn settings;\n   // }\n};\n","//\n// ABViewRule\n//\n// A component that manages an individual Rule in a Rule list.\n//\n// Each rule can manage a set of given Actions.  For each Rule, one Action\n// can be chosen, A condition for when that action is executed, and then\n// inputs for any additional data required by that action.\n//\n// Rules are used in the Interface Builder to present the designer an interface\n// for defining the Action+Condition:\n//\n//\n//\n// In live apps, Rules are used when processing events and determining if an\n// action is to be performed:\n//\n//\n//\n// A Rule needs to save it's current state to an objects settings, and to\n// initialize itself from those settings.\n//\nconst ObjectQueryBuilder = require(\"./ABViewQueryBuilderObjectFieldConditions\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRule {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(listActions) {\n      this.listActions = listActions || []; // the list of Actions this Rule manages\n\n      this.actionDropList = []; // the Webix UI droplist\n      this.listActions.forEach((a) => {\n         this.actionDropList.push({ id: a.key, value: a.label });\n      });\n\n      this.selectedAction = null; // the currently selected Action.key\n      if (this.actionDropList.length > 0) {\n         this.selectedAction = this.actionDropList[0].id;\n      }\n\n      this.removable = true; // can I delete this rule?\n\n      this.currentObject = null; // What ABObject is this associated with\n      // NOTE: this is important for Actions.\n\n      this.objectQB = null; // The QueryBuilder (QB) object\n\n      this.currentForm = null;\n   }\n\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      // this is different because multiple instances of this View can be displayed\n      // at the same time.  So make each instance Unique:\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return this.unique(idBase + key ) + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         // each instance must be unique\n         component: myUnique(\"component\"),\n\n         selectAction: myUnique(\"chooseAction\"),\n\n         queryBuilder: myUnique(\"queryBuilder\"),\n\n         valueDisplay: myUnique(\"valueArea\"),\n      });\n\n      this.objectQB.label = L(\"When\");\n      this.objectQB.component(this.App, this.idBase);\n      this.ui = this._generateUI();\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         this.objectQB.init();\n\n         // make sure the current Action's value display is initialized:\n         var Action = this.currentAction();\n         if (Action) {\n            Action.component(this.App, this.idBase);\n            var comp = Action.valueDisplay(ids.valueDisplay);\n\n            _logic.replaceValueDisplay(comp);\n\n            // webix.ui(comp.ui, $$(this.ids.valueDisplay));\n            comp.init();\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onDelete: function () {\n               console.warn(\"NO onDelete()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         replaceValueDisplay: (component) => {\n            // remove current content area:\n            var $ValueDisplay = $$(this.ids.valueDisplay);\n            if (!$ValueDisplay) return;\n\n            var children = $ValueDisplay.getChildViews();\n            var cloneChildren = [];\n            children.forEach((c) => {\n               cloneChildren.push(c);\n            });\n            cloneChildren.forEach((c) => {\n               $ValueDisplay.removeView(c);\n            });\n\n            $ValueDisplay.addView(component.ui);\n         },\n\n         selectAction: (newValue, oldVal) => {\n            if (newValue) {\n               $$(this.ids.component)\n                  .getChildViews()\n                  .forEach((views) => {\n                     views.show();\n                  });\n            }\n            // bonus:  save current state of previous Action\n            var prevAction = this.getAction(oldVal);\n            if (prevAction) {\n               prevAction.stashCondition(this.objectQB.getValue());\n            }\n\n            // now switch to the new Action\n            this.selectedAction = newValue;\n            var currAction = this.currentAction();\n            if (currAction) {\n               // reset Condition filters.\n               this.objectQB.setValue(currAction.condition());\n\n               // have Action display it's values form\n               currAction.component(this.App, this.idBase);\n               var component = currAction.valueDisplay(ids.valueDisplay);\n               _logic.replaceValueDisplay(component);\n               component.init();\n               // currAction.valueDisplay(ids.valueDisplay);\n            }\n         },\n      });\n   }\n\n   // not intended to be called externally\n   _generateUI() {\n      return {\n         id: this.ids.component,\n         view: \"layout\",\n         css: \"ab-component-form-rules\",\n         padding: 20,\n         // margin: 10,\n\n         // this should be a CSS setting: this.AB.Config.xxxx\n         // width: 680,\n         type: \"line\",\n         rows: [\n            {\n               view: \"template\",\n               css: \"ab-component-form-rules-delete\",\n               template: '<i class=\"fa fa-trash ab-component-remove\"></i>',\n               height: 30,\n               borderless: true,\n               hidddatasourceen: this.removable == false,\n               onClick: {\n                  \"ab-component-remove\": (e, id, trg) => {\n                     this._logic.callbacks.onDelete(this);\n                  },\n               },\n            },\n            // Action\n            {\n               id: this.ids.selectAction,\n               view: \"richselect\",\n               label: L(\"Action\"),\n               placeholder: L(\"Choose an action\"),\n               labelWidth: this.AB.UISettings.config().labelWidthLarge,\n               options: this.actionDropList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     this._logic.selectAction(newVal, oldVal);\n                  },\n               },\n            },\n\n            // Values\n            {\n               for: \"values\",\n               hidden: true,\n               cells: [\n                  {\n                     view: \"layout\",\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: L(\"Values\"),\n                           css: \"ab-text-bold\",\n                           width: this.AB.UISettings.config().labelWidthLarge,\n                        },\n                        {\n                           id: this.ids.valueDisplay,\n                           view: \"layout\",\n                           rows: [\n                              {\n                                 label: L(\n                                    \" ABViewRule: This should be the Set Area\"\n                                 ),\n                                 css: \"ab-text-bold\",\n                                 height: 30,\n                              },\n                           ],\n                        },\n                     ],\n                  },\n               ],\n            },\n\n            // When\n            this.objectQB.ui,\n         ],\n      };\n   }\n\n   // return the QueryBuilder fields data for the currently selected Action.\n   conditionFields() {\n      var fields = [];\n\n      var selectedAction = this.currentAction();\n      if (selectedAction) {\n         fields = selectedAction.conditionFields();\n      }\n\n      return fields;\n   }\n\n   currentAction() {\n      return this.getAction(this.selectedAction);\n   }\n\n   getAction(key) {\n      return this.listActions.filter((a) => {\n         return a.key == key;\n      })[0];\n   }\n\n   objectLoad(object) {\n      this.currentObject = object;\n      this.listActions.forEach((a) => {\n         a.objectLoad(object);\n      });\n\n      var label = L(\"When\");\n\n      this.objectQB = new ObjectQueryBuilder(label);\n      this.objectQB.objectLoad(object);\n\n      // regenerate our UI when a new object is loaded.\n      if (this.ids) {\n         this.ui = this._generateUI();\n      }\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n      this.listActions.forEach((a) => {\n         a.formLoad(form);\n      });\n   }\n\n   processPre(options = {}) {\n      let isValid = this.isValid(options.data);\n      if (!isValid) return;\n\n      let currentAction = this.currentAction();\n      if (!currentAction) return;\n\n      currentAction.processUpdateObject({}, options.data);\n   }\n\n   // process\n   // Take the provided data and process this rule\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      var currentAction = this.currentAction();\n      if (!currentAction) return Promise.resolve();\n\n      let isValid = this.isValid(options.data);\n      if (isValid) {\n         return currentAction.process(options);\n      } else {\n         // else just resolve and continue on\n         return new Promise((resolve, reject) => {\n            resolve();\n         });\n      }\n   }\n\n   fromSettings(settings) {\n      settings = settings || {};\n\n      if (settings.selectedAction) {\n         // store our Query Rules\n         this.selectedAction = settings.selectedAction;\n         var selectedAction = this.currentAction();\n         if (!selectedAction) return;\n         selectedAction.stashCondition(settings.queryRules || {});\n\n         // if our UI components are present, populate them properly:\n         if (this.ids) {\n            // Trigger our UI to refresh with this selected Action:\n            // NOTE: this also populates the QueryBuilder\n            $$(this.ids.selectAction).setValue(this.selectedAction);\n            // this._logic.selectAction(this.selectedAction);\n         }\n\n         // now continue with setting up our settings:\n         selectedAction.fromSettings(settings.actionSettings);\n      }\n   }\n\n   toSettings() {\n      var settings = {};\n\n      if (this.selectedAction) {\n         settings.selectedAction = this.selectedAction;\n         settings.queryRules = this.objectQB.getValue();\n         let currentAction = this.currentAction();\n         if (currentAction) {\n            settings.actionSettings = currentAction.toSettings();\n         }\n      }\n\n      return settings;\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      var currAction = this.currentAction();\n      if (currAction && this.objectQB) {\n         this.objectQB.setValue(currAction.condition());\n         currAction.qbFixAfterShow();\n      }\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   async isReady() {\n      let currentAction = this.currentAction();\n      if (currentAction) {\n         return currentAction.isReady();\n      }\n      return Promise.resolve();\n   }\n\n   isValid(data = {}) {\n      const fields = this.currentObject.fields(),\n         currentAction = this.currentAction(),\n         QBCondition = currentAction.condition(),\n         query = QBCondition[0] ?? {};\n\n      const convertToNumber = (text = \"\") => {\n         // if we have multiple rules we need to check if value is already a number before converting.\n         if (typeof text == \"number\") return text;\n\n         return parseFloat(text.replace(/[^-0-9.]/g, \"\"));\n      };\n\n      // Fix string data in number type\n      // NOTE: \"1000\" > \"99\" = false    >_<!\n      fields\n         .filter(\n            (f) =>\n               f.key == \"number\" || f.key == \"calculate\" || f.key == \"formula\"\n         )\n         .forEach((f) => {\n            try {\n               // filter conditions\n               if (Array.isArray(query?.rules)) {\n                  query.rules.forEach((r) => {\n                     // NOTE: compatible with old settings\n                     if (r.key == f.id || r.key == f.columnName)\n                        r.value = convertToNumber(r.value);\n                  });\n               }\n\n               // row data\n               if (\n                  data[f.columnName] &&\n                  typeof data[f.columnName] === \"string\"\n               ) {\n                  data[f.columnName] = convertToNumber(data[f.columnName]);\n               }\n            } catch (e) {\n               // continue regardless of error\n            }\n         });\n\n      const hiddenFilter = (this.AB ?? AB).filterComplexNew(\n         `${this.idBase}_filter_complex`\n      );\n      hiddenFilter.fieldsLoad(fields, this.currentObject);\n      hiddenFilter.setValue(query);\n      hiddenFilter.init();\n\n      return hiddenFilter.isValid(data);\n\n      // var id = \"hiddenQB_\" + webix.uid();\n\n      // // if our data passes the QueryRules then tell Action to process\n      // var ui = {\n      //    id: id,\n      //    hidden: true,\n      //    view: \"querybuilder\",\n      // };\n      // var hiddenQB = webix.ui(ui);\n\n      // let currentAction = this.currentAction();\n      // var QBCondition = currentAction.condition();\n\n      // if (this.objectQB) {\n      //    this.objectQB.cleanRules(QBCondition[0], QBCondition[1], false);\n      // }\n\n      // let query = QBCondition[0] || {},\n      //    fields = QBCondition[1] || [];\n\n      // // hiddenQB.setValue(QBCondition);\n      // hiddenQB.setValue({\n      //    query: query,\n      //    fields: fields,\n      // });\n\n      // var QBHelper = hiddenQB.getFilterHelper();\n      // var isValid = QBHelper(data);\n\n      // hiddenQB.destructor(); // remove the QB\n\n      // return isValid;\n   }\n\n   get isPreProcess() {\n      let currentAction = this.currentAction();\n      return currentAction.isPreProcess || false;\n   }\n};\n","//\n// ABViewRuleAction\n//\n// A component that manages an individual Action in a Rule.\n//\n// Each Action is responsible for figuring out when it can run, and what to do.\n//\n// Actions are used in the Interface Builder to present the designer an interface\n// for defining the a Condition and a set of data necessary to complete the Action:\n//\n//\n//\n// In live apps, Actions are used when processing events and determining if an\n// if and what is to be performed:\n//\n//\n//\n// An Action needs to save it's current state to an objects settings, and to\n// initialize itself from those settings.\n//\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleAction {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    * @param {ABViewForm} currentForm\tthe current form this Action is associated with.\n    */\n   constructor(App, idBase, currentForm) {\n      this.key = \"ABViewRuleAction\";\n\n      this.queryObject = null; // the current ABObject we use to create QueryBuilder information.\n\n      this.currentForm = null;\n\n      this.queryRules = {}; // default set of rules for the Query Builder condition\n\n      this.valueRules = {}; // the initial Value Rules for this Action\n      // The Action Subclass defines what this {} is.\n\n      this.currentForm = currentForm; // the ABViewForm object that this rule Action is tied to.\n   }\n\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      this.label = L(\"generic abviewruleaction\");\n\n      function myUnique(key) {\n         return App.unique(`${idBase}_${key}`);\n      }\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         // each instance must be unique\n         component: `${myUnique(\"component\")}_${webix.uid()}`,\n      });\n\n      this._ui = null; // internally track our UI Component value Rules\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onDelete: function () {\n               console.warn(\"NO onDelete()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n      });\n   }\n\n   // condition\n   // Return the querybuilder setup structure for this Action.\n   // @return {array}  of querybuilder setup\n   //\t\t\t\t\t[\n   //\t\t\t\t\t\t{rules},\n   //\t\t\t\t\t\t[fields]\n   //\t\t\t\t\t]\n   condition() {\n      return [this.conditionRules(), this.conditionFields()];\n   }\n\n   // stashCondition\n   // capture the current set of rules provided by the QB object.\n   // This doesn't guarantee these will be saved to the App settings.\n   // Instead it is a temporary stash. Only the selected Action's\n   // values will be persisited to the App settings.\n   // @param {obj/Array} rules  The QueryBuilder rule value returned from\n   //\t\t\t\t\t\t\t .getValue()\n   //\t\t\t\t\t\t\t note: it is the first entry .getValue()[0]\n   //\n   stashCondition(rules) {\n      // check to see if they sent us the raw QueryBuilder values and only\n      // pull off the rules if they did\n      if (Array.isArray(rules)) {\n         rules = rules[0];\n      }\n\n      // sanity check on glue value: don't update if null or not given.\n      if (rules) {\n         // sometimes .glue is undefined  so default to 'and'\n         if (rules.glue != \"or\") rules.glue = \"and\";\n\n         this.queryRules = rules;\n      }\n   }\n\n   // conditionFields()\n   // Return the list of fields we are able to update.\n   // @return {array} of querybuilder field definitions:\n   //\t\t\t\t\t[\n   // \t\t\t\t\t\t{ id:\"fname\",   value:\"First Name\", type:\"string\" },\n   //\t\t\t\t\t    { id:\"lname\",   value:\"Last Name\",  type:\"string\" },\n   //\t\t\t\t\t    { id:\"age\",     value:\"Age\",        type:\"number\" },\n   //\t\t\t\t\t    { id:\"bdate\",   value:\"Birth Date\", type:\"date\" }\n   //\t\t\t\t\t]\n   conditionFields() {\n      var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n      var currFields = [];\n\n      if (this.queryObject) {\n         this.queryObject.fields().forEach((f) => {\n            if (fieldTypes.indexOf(f.key) != -1) {\n               // NOTE: the .id value must match the obj[.id]  in the data set\n               // so if your object data looks like:\n               // \t{\n               //\t\tname_first:'Neo',\n               //\t\tname_last: 'The One'\n               //  },\n               // then the ids should be:\n               // { id:'name_first', value:'xxx', type:'string' }\n               currFields.push({\n                  id: f.columnName,\n                  value: f.label,\n                  type: f.key,\n               });\n            }\n         });\n      }\n\n      return currFields;\n   }\n\n   // conditionRules()\n   // Return the current rule definition object for this Action.\n   // @return {obj}\n   conditionRules() {\n      return this.queryRules;\n   }\n\n   // objectLoad\n   // save the current object this Action is associated with.\n   objectLoad(object) {\n      // this.currentObject = object;\t\t\t\t// DO WE NEED THIS?\n      this.queryObjectLoad(object);\n   }\n\n   // queryObjectLoad\n   // save the current object this Action is using to build query rules.\n   queryObjectLoad(object) {\n      this.queryObject = object;\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      console.error(\n         \"!!! ABViewRuleAction.process() should be overridden by its child class.\"\n      );\n      return new Promise((resolve, reject) => {\n         reject(\n            new Error(\n               \"ABViewRuleAction.process() should be overridden by its child class.\"\n            )\n         );\n      });\n   }\n\n   // valueDisplay\n   // create the form to collect the specific data this Action needs to function.\n   // @param {string} webixID  the $$(webixID) of the area to insert our display.\n   valueDisplay(webixID) {\n      return this.valueDisplayComponent(webixID);\n   }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      return (this._ui = {\n         ui: {\n            template: \"ABViewRuleAction.valueDisplayComponent\",\n         },\n         init: (data) => {\n            console.error(\n               \"!!! ABViewRuleAction.valueDisplayComponent() should be overridden.\"\n            );\n            console.warn(\" --> passed in data:\", data);\n         },\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      // settings: {\n      //\tvalueRules:{}\n      // }\n      settings = settings ?? {};\n      this.valueRules = settings.valueRules ?? settings;\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      var settings = {};\n\n      // require the child to insert the valueRules\n      return settings;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   isReady() {\n      return Promise.resolve();\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      // our child classes can implement this if needed.\n      // \t- ABViewRuleActionFormRecordRuleUpdateConnected\n   }\n};\n","//\n// ABViewRuleList\n//\n// A UI component that is responsible for displaying a list of current \"Rules\"\n// for a given purpose.  Some examples are the\n//\t\tForm -> Submit Rules,\n//\t\tForm -> Display Rules\n// \t\tForm -> Record Rules.\n//\n\n// ABViewRuleList is the parent object that manages displaying the common popup,\n// list, adding a rule, removing rules, etc...\n//\n// It is intending to be subclassed by a Specific List object that will load\n// up a given set of Actions for their list.\n//\n// When using it in the AppBuilder Interface Builder, this object provides:\n// \tvar PopupRecordList = new ABViewRuleList(App, idBase);\n//  PopupRecordList.fromSettings(CurrentObjectDefinition.rules); // populates List with current settings defined in CurrentObjectDefinition\n//  PopupRecordList.init({ onSave:()=>{}})\t// displays the popup for IB\n//  CurrentObjectDefinition.rules = PopupRecordList.toSettings(); // save the settings to store in json config\n//\n// When using on a live running App:\n//  PopupRecordList = new ABViewRuleList(App, idBase);\n//  PopupRecordList.fromSettings();\n//\n//  onFormSubmit(data) {\n//\t\t// note: this automatically validates and runs each rule:\n//\t\tPopupRecordList.process({data:data, view:{ current ABViewForm object }})\n//\t\t.then()\n//\t\t.catch();\n//  }\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleList {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(childSettings) {\n      this.listRules = [];\n      this.currentObject = null;\n\n      // ensure required values:\n      childSettings = childSettings || {};\n      childSettings.labels = childSettings.labels || {};\n      childSettings.labels.header =\n         childSettings.labels.header || \"ab.components.form.ruleList\";\n      childSettings.labels.headerDefault =\n         childSettings.labels.headerDefault || \"*Rule List\";\n      this.childSettings = childSettings;\n   }\n\n   /**\n    * @method component\n    * initialize the UI display for this popup editor.\n    * @param {obj} App  The common UI App object shared among our UI components\n    * @param {string} idBase A unique Key used the the base of our unique ids\n    */\n   component(App, idBase) {\n      this.App = this.App || App;\n      this.idBase = idBase;\n\n      App = App || this.App;\n\n      this.currentForm = null;\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         component: `${idBase}_component`,\n         rules: `${idBase}_rules`,\n         rulesScrollview: `${idBase}_rulesScrollview`,\n\n         action: `${idBase}_action`,\n         when: `${idBase}_when`,\n\n         values: `${idBase}_values`,\n         set: `${idBase}_set`,\n      });\n\n      // webix UI definition:\n      this.ui = {\n         view: \"window\",\n         id: ids.component,\n         modal: true,\n         position: \"center\",\n         resize: true,\n         width: 700,\n         height: 450,\n         css: \"ab-main-container\",\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {\n                  view: \"label\",\n                  label: this.childSettings.labels.headerDefault,\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  icon: \"fa fa-plus\",\n                  type: \"iconButton\",\n                  label: L(\"Add new rule\"),\n                  width: 150,\n                  click: () => {\n                     this.addRule();\n                     console.log($$(ids.rules).$height);\n                     $$(ids.rulesScrollview).scrollTo(0, $$(ids.rules).$height);\n                  },\n               },\n            ],\n         },\n         body: {\n            type: \"form\",\n            rows: [\n               {\n                  view: \"scrollview\",\n                  id: ids.rulesScrollview,\n                  scroll: \"xy\",\n                  body: {\n                     view: \"layout\",\n                     id: ids.rules,\n                     margin: 20,\n                     padding: 10,\n                     rows: [],\n                  },\n               },\n               // {\n               // \tcss: { 'background-color': '#fff' },\n               // \tcols: [\n               // \t\t{\n               // \t\t\tview: \"button\",\n               // \t\t\ticon: \"plus\",\n               // \t\t\ttype: \"iconButton\",\n               // \t\t\tlabel: labels.component.addNewRule,\n               // \t\t\twidth: 150,\n               // \t\t\tclick: () => {\n               // \t\t\t\tthis.addRule();\n               // \t\t\t}\n               // \t\t},\n               // \t\t{ fillspace: true }\n               // \t]\n               // },\n               {\n                  css: { \"background-color\": \"#fff\" },\n                  cols: [\n                     { fillspace: true },\n                     {\n                        view: \"button\",\n                        name: \"cancel\",\n                        value: L(\"Cancel\"),\n                        css: \"ab-cancel-button\",\n                        autowidth: true,\n                        click: function () {\n                           _logic.buttonCancel();\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        name: \"save\",\n                        label: L(\"Save\"),\n                        type: \"form\",\n                        autowidth: true,\n                        click: function () {\n                           _logic.buttonSave();\n                        },\n                     },\n                     { fillspace: true },\n                  ],\n               },\n            ],\n         },\n      };\n\n      // var _currentObject = null;\n      var _rules = [];\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         webix.ui(this.ui);\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         buttonCancel: function () {\n            $$(ids.component).hide();\n         },\n\n         buttonSave: () => {\n            var results = this.toSettings();\n\n            _logic.callbacks.onSave(results);\n            _logic.hide();\n         },\n\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         hide: function () {\n            $$(ids.component).hide();\n         },\n\n         show: function () {\n            $$(ids.component).show();\n         },\n      });\n\n      this.show = _logic.show;\n      this.setValue = _logic.setValue;\n   }\n\n   /**\n    * @method addRule\n    * Instantiate a new Rule in our list.\n    * @param {obj} settings  The settings object from the Rule we created in .toSettings()\n    */\n   addRule(settings) {\n      var Rule = this.getRule();\n      if (!Rule) return;\n\n      this.listRules.push(Rule);\n\n      // if we have tried to create our component:\n      if (this.ids) {\n         // if our actually exists, then populate it:\n         var RulesUI = $$(this.ids.rules);\n         if (RulesUI) {\n            // make sure Rule.ui is created before calling .init()\n            Rule.component(this.App, this.idBase); // prepare the UI component\n            var viewId = RulesUI.addView(Rule.ui);\n\n            Rule.init({\n               onDelete: (deletedRule) => {\n                  $$(this.ids.rules).removeView(Rule.ids.component);\n\n                  var index = this.listRules.indexOf(deletedRule);\n                  if (index !== -1) {\n                     this.listRules.splice(index, 1);\n                  }\n               },\n            });\n         }\n      }\n\n      if (settings) {\n         Rule.fromSettings(settings);\n      }\n   }\n\n   /**\n    * @method fromSettings\n    * Create an initial set of default values based upon our settings object.\n    * @param {obj} settings  The settings object we created in .toSettings()\n    */\n   fromSettings(settings) {\n      // settings: [\n      //  { rule.settings },\n      //  { rule.settings }\n      // ]\n\n      // clear any existing Rules:\n      this.listRules.forEach((rule) => {\n         if (\n            this.ids &&\n            this.ids.rules &&\n            rule &&\n            rule.ids &&\n            rule.ids.component\n         ) {\n            $$(this.ids.rules).removeView(rule.ids.component);\n         }\n      });\n      this.listRules = [];\n\n      if (settings) {\n         settings.forEach((ruleSettings) => {\n            this.addRule(ruleSettings);\n         });\n      }\n   }\n\n   /**\n    * @method objectLoad\n    * A rule is based upon a Form that was working with an Object.\n    * .objectLoad() is how we specify which object we are working with.\n    *\n    * @param {ABObject} The object that will be used to evaluate the Rules\n    */\n   objectLoad(object) {\n      this.currentObject = object;\n\n      // tell each of our rules about our object\n      this.listRules.forEach((r) => {\n         r.objectLoad(object);\n      });\n   }\n\n   processPre(options) {\n      (this.listRules || [])\n         .filter((rule) => rule.isPreProcess == true)\n         .forEach((rule) => {\n            rule.processPre(options, options.data);\n         });\n   }\n\n   /**\n    * @method process\n    * Take the provided data and process each of our rules.\n    * @param {obj} options\n    * @return {promise}\n    */\n   process(options) {\n      return new Promise((resolve, reject) => {\n         let listRules = (this.listRules || []).filter(\n            (rule) => !rule.isPreProcess\n         );\n\n         var numDone = 0;\n         var onDone = () => {\n            numDone++;\n            if (numDone >= listRules.length) {\n               resolve();\n            }\n         };\n\n         listRules.forEach((rule) => {\n            rule\n               .process(options)\n               .then(function () {\n                  onDone();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n\n         if (listRules.length == 0) {\n            resolve();\n         }\n      });\n   }\n\n   /**\n    * @method toSettings\n    * create a settings object to be persisted with the application.\n    * @return {array} of rule settings.\n    */\n   toSettings() {\n      var settings = [];\n      this.listRules.forEach((r) => {\n         settings.push(r.toSettings());\n      });\n      return settings;\n   }\n\n   getRule() {\n      console.error(\n         \"!!! ABViewRuleList.getRule() should be overridded by a child object.\"\n      );\n      return null;\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n      this.App = this.App || form.App;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   rulesReady() {\n      // This base class should be overwritten by any subclass that needs\n      // to prepare:\n      return Promise.resolve();\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      this.listRules.forEach((r) => {\n         r.qbFixAfterShow();\n      });\n   }\n};\n","//\n// ABViewRuleListFormRecordRules\n//\n// A component that is responsible for displaying the specific list of Record\n// Rules for a form.\n//\nconst ABViewRuleList = require(\"./ABViewRuleList\");\nconst ABViewRule = require(\"./ABViewRule\");\n\nconst RoleUpdateExisting = require(\"./ruleActions/ABViewRuleActionFormRecordRuleUpdate\");\nconst RoleInsertConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleInsertConnected\");\nconst RoleUpdateConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleUpdateConnected\");\nconst RoleRemoveConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleRemoveConnected\");\n\nmodule.exports = class ABViewRuleListFormRecordRules extends ABViewRuleList {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor() {\n      var settings = {\n         labels: {\n            header: \"ab.components.form.recordRules\",\n            headerDefault: \"*Record Rules\",\n         },\n      };\n      super(settings);\n   }\n\n   // must return the actual Rule object.\n   getRule() {\n      var listActions = [\n         new RoleUpdateExisting(\n            this.App,\n            `${this.idBase}_ruleActionUpdate`,\n            this.currentForm\n         ),\n         new RoleInsertConnected(\n            this.App,\n            `${this.idBase}_ruleActionInsert`,\n            this.currentForm\n         ),\n         new RoleUpdateConnected(\n            this.App,\n            `${this.idBase}_ruleActionUpdateConnected`,\n            this.currentForm\n         ),\n         new RoleRemoveConnected(\n            this.App,\n            `${this.idBase}_ruleActionRemoveConnected`,\n            this.currentForm\n         ),\n      ];\n\n      var Rule = new ABViewRule(listActions);\n      if (this.currentObject) {\n         Rule.objectLoad(this.currentObject);\n      }\n      return Rule;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our list of Rules is\n    * ready to work.\n    * @return {Promise}\n    */\n   async rulesReady() {\n      var allReady = (this.listRules || []).map((r) => r.isReady());\n      await Promise.all(allReady);\n   }\n};\n","//\n// ABViewRuleListFormSubmitRules\n//\n// A component that is responsible for displaying the specific list of Submit\n// Rules for a form.\n//\nconst ABViewRuleList = require(\"./ABViewRuleList\");\nconst ABViewRule = require(\"./ABViewRule\");\n\nconst RoleConfirmMessage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleConfirmMessage\");\nconst RuleExistPage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleExistPage\");\nconst RuleParentPage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleParentPage\");\nconst RuleClosePopup = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleClosePopup\");\nconst RuleWebsite = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleWebsite\");\nconst RuleEmail = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleEmail\");\n\nmodule.exports = class ABViewRuleListFormSubmitRules extends ABViewRuleList {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor() {\n      var settings = {\n         labels: {\n            header: \"ab.component.form.submitRule\",\n            headerDefault: \"*Submit Rules\",\n         },\n      };\n      super(settings);\n   }\n\n   // must return the actual Rule object.\n   getRule() {\n      var listActions = [\n         new RoleConfirmMessage(\n            this.App,\n            `${this.idBase}_ruleActionConfirmMessage`\n         ),\n         new RuleExistPage(this.App, `${this.idBase}_ruleActionExistPage`),\n         new RuleParentPage(this.App, `${this.idBase}_ruleActionParentPage`),\n         new RuleClosePopup(this.App, `${this.idBase}_ruleActionClosePopup`),\n         new RuleWebsite(this.App, `${this.idBase}_ruleActionWebsite`),\n         new RuleEmail(this.App, `${this.idBase}_ruleActionEmail`),\n      ];\n\n      var Rule = new ABViewRule(listActions);\n      Rule.objectLoad(this.currentObject);\n      Rule.formLoad(this.currentForm);\n      return Rule;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleInsertConnected\n//\n// An action that allows you to insert a connected object.\n//\n// NOTE: this is very similar to the Update Connected Rule, so we subclass that one and\n// modify it to only Insert data.\n//\n//\nconst UpdateConnected = require(\"./ABViewRuleActionFormRecordRuleUpdateConnected\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleInsertConnected extends (\n   UpdateConnected\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleInsertConnected\";\n      this.label = L(\"Insert Connected Object\");\n   }\n\n   /**\n    * valueDisplayChooser\n    * Our Values Display is a Select Box with a choice of connected fields.\n    * Once a field is chosen, then we display the Updater form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayChooser(idBase) {\n      var Component = super.valueDisplayChooser(idBase);\n\n      // in our case, there are no additional QB conditions:\n      // so overwrite the .showQBIfNeeded() routine to not show anything:\n      Component._logic.showQBIfNeeded = function () {};\n\n      return Component;\n   }\n\n   /**\n    * queryBuilderDisplay\n    * override our parent .queryBuilderDisplay to not create a new .objectQB\n    * @return {null}\n    */\n   queryBuilderDisplay() {\n      return null;\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      // get connected object\n      var connObj = this.connectedObject();\n      var model = connObj.model();\n\n      var connectionField = this.selectedField();\n\n      // var condition = null; // our lookup condition\n\n      // we are going to create a new instance of the connected object\n      // and make sure our .id is in the connected object's connectionField\n      // the server side will take care of making the proper relationship.\n\n      // first, create a new set of values:\n      var newObjectValues = {};\n\n      // update them according to our rules\n      this.processUpdateObject({}, newObjectValues);\n\n      if (newObjectValues.newRecords) {\n         // now add our .id to the proper field in newObjectValues\n         let connectedObjectField = connObj.fieldByID(\n            connectionField.settings.linkColumn\n         );\n\n         if (!connectedObjectField)\n            return Promise.reject(\"No connected object field\");\n\n         newObjectValues.newRecords.forEach((r) => {\n            r[connectedObjectField.columnName] = options.data.id;\n            // perform the update/insert\n            return model.create(r);\n         });\n      } else {\n         // now add our .id to the proper field in newObjectValues\n         let connectedObjectField = connObj.fieldByID(\n            connectionField.settings.linkColumn\n         );\n\n         if (!connectedObjectField)\n            return Promise.reject(\"No connected object field\");\n\n         newObjectValues[connectedObjectField.columnName] = options.data.id;\n\n         // perform the update/insert\n         return model.create(newObjectValues);\n      }\n   }\n\n   /**\n    * toSettings\n    * return an object that represents the current state of this Action\n    * @return {obj}\n    */\n   toSettings() {\n      // settings: {\n      // \tselectedFieldID: 'guid',\n      //\tvalueRules:{}\t\t// from ABViewRuleActionObjectUpdater\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      // we don't use .qpCondition\n      delete settings.qbCondition;\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleRemoveConnected\n//\n// An action that allows you to update fields on an object that is connected to\n// the current object we just Added/Updated\n//\n//\nconst ABViewRuleActionFormRecordRuleUpdateConnected = require(\"./ABViewRuleActionFormRecordRuleUpdateConnected\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleRemoveConnected extends (\n   ABViewRuleActionFormRecordRuleUpdateConnected\n) {\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleRemoveConnected\";\n      this.label = L(\"Remove Connected Record\");\n\n      this.isUpdateValueDisabled = true; // disable update data of each fields\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      let selectedField = this.selectedField();\n      this._formData = options.data;\n\n      return new Promise((resolve, reject) => {\n         // get the model from the provided Form Obj:\n         let dc = options.form.datacollection;\n         if (!dc) return resolve();\n\n         let model = dc.model;\n         if (!model) return resolve();\n\n         let updatedVals = {};\n         updatedVals[selectedField.columnName] = \"\";\n\n         model\n            .update(options.data.id, updatedVals)\n            .then(resolve)\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message:\n                     \"!!! ABViewRuleActionFormRecordRuleUpdate.process(): update error:\",\n                  data: options.data,\n               });\n               reject(err);\n            });\n      });\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleUpdate\n//\n// An action that allows you to update fields on an object that was currently\n// Added/Updated.\n//\n//\nconst ABViewRuleActionObjectUpdater = require(\"./ABViewRuleActionObjectUpdater\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleUpdate extends (\n   ABViewRuleActionObjectUpdater\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdate\";\n      this.label = L(\"Update Record\");\n   }\n\n   get isPreProcess() {\n      return true;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleUpdateConnected\n//\n// An action that allows you to update fields on an object that is connected to\n// the current object we just Added/Updated\n//\n//\nconst ABViewRuleActionObjectUpdater = require(\"./ABViewRuleActionObjectUpdater\");\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\nconst ObjectQueryBuilder = require(\"../ABViewQueryBuilderObjectFieldConditions\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleUpdateConnected extends (\n   ABViewRuleActionObjectUpdater\n) {\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdateConnected\";\n      this.label = L(\"Update Connected Record\");\n\n      this.baseObject = null; // the object the current form is working with.\n      // Use this to find our connected fields.\n\n      this.selectedFieldID = null; // the selected field ID in the .baseObject that is\n      // used for updating.  This should be one of the connection Fields.\n\n      this.fieldDropList = []; // the list of fields to offer based upon the current .baseObject.\n\n      this.objectQB = null; // the QueryBuilder used for offering conditions based upon our connected Object.\n      this.qbCondition = null; // the QB condition entered for selecting which remote object.\n   }\n\n   // field\n\n   /**\n    * objectLoad\n    * save the current object this Action is associated with.\n    * in the case of the UpdateConnected Action, assigning us\n    * this object only impacts the queryObject.\n    *\n    * The Updater form will use another object we select in\n    * the form dropdown.\n    *\n    * @param {object} object\n    *\n    */\n   objectLoad(object) {\n      this.queryObjectLoad(object);\n      this.baseObject = object;\n\n      // now build our fieldDropList for the select\n      var connectionFields = this.connectedFieldList();\n      connectionFields.forEach((cf) => {\n         this.fieldDropList.push({\n            id: cf.id,\n            value: cf.label,\n         });\n      });\n   }\n\n   /**\n    * connectedFieldList\n    * return the fields in our .baseObject that are connections to other objects.\n    * @return {array} of {ABField}\n    */\n   connectedFieldList() {\n      var connectKey = ABFieldConnect.defaults().key;\n      if (this.baseObject && this.baseObject.fields) {\n         return this.baseObject.fields((f) => {\n            return f.key == connectKey;\n         });\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * connectedObject\n    * return the ABObject associated with the selected connection field.\n    * @return {ABObject}\n    */\n   connectedObject() {\n      if (this.selectedFieldID) {\n         var selectedField = this.selectedField();\n         if (selectedField) {\n            return selectedField.datasourceLink;\n         }\n      }\n\n      return null;\n   }\n\n   /**\n    * selectedField\n    * return the selected {ABField} object.\n    * @return {ABField}\n    */\n   selectedField() {\n      return this.connectedFieldList().filter((f) => {\n         return f.id == this.selectedFieldID;\n      })[0];\n   }\n\n   /**\n    * valueDisplayComponent\n    * Return an ABView to display our values form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayComponent(idBase) {\n      if (this._uiChooser == null) {\n         this._uiChooser = this.valueDisplayChooser(idBase);\n      }\n\n      return this._uiChooser;\n   }\n\n   /**\n    * valueDisplayChooser\n    * Our Values Display is a Select Box with a choice of connected fields.\n    * Once a field is chosen, then we display the Updater form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayChooser(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return key + \"_\" + uniqueInstanceID;\n      };\n\n      var ids = {\n         component: myUnique(\"updateConnectedValues\"),\n         updateForm: myUnique(\"updateChooser\"),\n         selectConnectedField: myUnique(\"updateSelect\"),\n         updateFieldsForm: myUnique(\"updateForm\"),\n      };\n\n      var _ui = {\n         id: ids.component,\n         view: \"layout\",\n         css: \"ab-component-form-rule\",\n         rows: [\n            {\n               id: ids.selectConnectedField,\n               view: \"richselect\",\n               label: L(\"Select which connected object to update.\"),\n               labelWidth: 300,\n               value: this.selectedField,\n               options: this.fieldDropList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     _logic.selectAction(newVal, oldVal);\n                  },\n               },\n            },\n         ],\n      };\n\n      var init = (valueRules) => {\n         valueRules = valueRules || this.valueRules;\n\n         // make sure our currently selected field is selected.\n         if (this.selectedFieldID) {\n            var select = $$(ids.selectConnectedField);\n            if (select) {\n               select.setValue(this.selectedFieldID);\n            }\n         }\n      };\n\n      var _logic = (this._logic = {\n         addDisplay: (view) => {\n            $$(ids.component).addView(view);\n         },\n\n         // removePreviousDisplays\n         // remove the previous components that reflected the conditions and\n         // update values of the previously selected field.\n         removePreviousDisplays: () => {\n            var allViews = $$(ids.component).getChildViews();\n            var cloneAllViews = [];\n            allViews.forEach((v) => {\n               cloneAllViews.push(v);\n            });\n            cloneAllViews.forEach((v) => {\n               // don't remove the field picker\n               if (v.config.id != ids.selectConnectedField) {\n                  $$(ids.component).removeView(v);\n               }\n            });\n         },\n\n         selectAction: (newVal, oldVal) => {\n            _logic.removePreviousDisplays(); // of the Query Builder and Update form for old selection:\n\n            this.selectedFieldID = newVal;\n            var connectedObject = this.connectedObject();\n\n            if (connectedObject) {\n               // it is the remote object that we are allowed to Update fields on.\n               this.updateObjectLoad(connectedObject);\n               ///// NOTE: important to call super.valueDisplayComponent()\n               this.updateComponent = super.valueDisplayComponent(\n                  ids.updateFieldsForm\n               ); // parent obj\n\n               _logic.showQBIfNeeded();\n\n               // create a new blank update form\n               _logic.addDisplay(this.updateComponent.ui);\n               this.updateComponent.init();\n\n               if (this.isUpdateValueDisabled) {\n                  let $updateForm = $$(this.updateComponent.ui.id);\n                  if ($updateForm) {\n                     $updateForm.disable();\n                     $updateForm.hide();\n                  }\n               }\n            } else {\n               this.AB.notify.builder(new Error(\"No connectedObject found.\"), {\n                  fieldID: this.selectedFieldID,\n               });\n            }\n         },\n\n         showQBIfNeeded: () => {\n            //// NOTE: we decided to go ahead and display the QB in ALL situations to give\n            //// the user the ability to set a condition on the update even if the field\n            //// is only a one to one.\n            //// If we want to remove the filter in case of a \"one\" linkType, then put\n            //// these conditions back in:\n\n            // var field = this.selectedField();\n\n            // // we don't need the QB if the destination object link type if 'one'.\n            // // there will only be one to get back, so no conditions needed.\n            // if (field.settings.linkType != 'one') {\n\n            var qbComponent = this.queryBuilderDisplay();\n\n            qbComponent.component(this.App, this.idBase);\n            _logic.addDisplay(qbComponent.ui);\n            qbComponent.init({});\n\n            // }\n         },\n\n         fromSettings: (settings) => {\n            // // first time through, be sure to set the connectedObject first\n            // this.selectedFieldID = settings.selectedFieldID;\n            // var connectedObject = this.connectedObject();\n\n            // this triggers the update of the display, creation of QB,\n            $$(ids.selectConnectedField).setValue(settings.selectedFieldID);\n\n            if (this.objectQB) {\n               this.objectQB.setValue(this.qbCondition);\n            }\n\n            if (this.updateComponent) {\n               this.updateComponent.fromSettings(settings);\n            }\n         },\n\n         toSettings: () => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n            var settings = { fieldOperations: [] };\n\n            // for each of our formRows, decode the propery {}\n            this.formRows.forEach((fr) => {\n               var rowSettings = fr.toSettings();\n               if (rowSettings) {\n                  settings.fieldOperations.push(rowSettings);\n               }\n            });\n\n            return settings;\n         },\n      });\n\n      return {\n         ui: _ui,\n         init: init,\n         fromSettings: (settings) => {\n            _logic.fromSettings(settings);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   /**\n    * queryBuilderDisplay\n    * returns our Query Builder object used in our display.\n    * It is called by the .showQBIfNeeded() method.\n    * @return {ABViewQueryBuilderObjectFieldConditions}\n    */\n   queryBuilderDisplay() {\n      if (!this.objectQB) {\n         this.objectQB = new ObjectQueryBuilder(\n            L(\"How to choose which object:\")\n         );\n\n         var connObj = this.connectedObject();\n         if (connObj) this.objectQB.objectLoad(connObj);\n      }\n      return this.objectQB;\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      this._formData = options.data;\n\n      // get connected object\n      var connObj = this.connectedObject();\n      var model = connObj.model();\n\n      var connectionField = this.selectedField();\n\n      var condition = null; // our lookup condition\n\n      // modifyCondition\n      // async fn() to fill out what the condition should be for limiting the remote\n      // objects to values in use by the current object.\n      // @param {fn} cb  the callback to use when we are finished:\n      //\t\t\t\t\tcb(err, )\n      var modifyCondition = (cb) => {\n         // So, let's get a copy of our current data, with all it's connected items\n         // attached.\n         var thisModel = this.baseObject.model();\n         thisModel\n            .findConnected(connectionField.columnName, options.data)\n            .then((items) => {\n               // if we didn't get any results, then simply return\n               // NOTE: this will leave condition == null and cancel this update.\n               if (!items || items.length == 0) {\n                  cb();\n                  return;\n               }\n\n               // then use these to limit the connected data of our Action:\n\n               // get all the ids\n               var ids = items.map((i) => {\n                  return i.id;\n               });\n\n               // resulting condition: { id in [listIDs]} AND { QB Condition }\n               condition = {\n                  glue: \"and\",\n                  rules: [\n                     {\n                        key: `${connObj.tableName}.${connObj.PK()}`,\n                        rule: \"in\",\n                        value: ids,\n                     },\n                  ],\n               };\n\n               // check to make sure qbCondition actually has a condition before adding it\n               // to our condition:\n               if (Object.keys(this.qbCondition).length > 0) {\n                  condition.rules.push(this.qbCondition);\n               }\n\n               cb();\n            })\n            .catch(cb);\n      };\n\n      // .process() returns a Promise\n      return new Promise((resolve, reject) => {\n         // upateIt()\n         // updates a given item with our changes.\n         // @param {obj} item  the item to update\n         // @param {fn}  cb    a callback function when update is complete.\n         var updateIt = (item, cb) => {\n            let isUpdated = this.processUpdateObject({}, item);\n            if (!isUpdated) {\n               cb();\n            } else {\n               model\n                  .update(item.id, item)\n                  .then(() => {\n                     cb();\n                  })\n                  .catch((err) => {\n                     this.AB.notify.developer(err, {\n                        message:\n                           \"!!! ABViewRuleActionFormRecordRuleUpdateConnected.process(): update error:\",\n                        data: options.data,\n                     });\n                     cb(err);\n                  });\n            }\n         };\n\n         // now figure out which elements belong to this object\n         // done in modifyCondition()\n         modifyCondition((err) => {\n            if (err) {\n               AB.notify.developer(err, {\n                  message:\n                     \"!!! ABViewRuleActionFormRecordRuleUpdateConnected.modifyCondition: error:\",\n                  data: options.data,\n               });\n               reject(err);\n               return;\n            }\n\n            if (condition === null) {\n               // this is the case where we didn't have the proper data to complete our\n               // update.  So let's just fail gracefully, and continue on.\n\n               // QUESTION: is this the right way to handle it?\n               resolve();\n            } else {\n               // get all the entries that match our condition:\n               model\n                  .findAll({ where: condition })\n                  .then((list) => {\n                     var done = 0;\n\n                     // list : {data: Array(4), total_count: 4, pos: null, offset: null, limit: null}\n                     if (list && list.data) {\n                        list = list.data;\n                     }\n\n                     // for each entry, update it with our values:\n                     list.forEach((item) => {\n                        updateIt(item, (err) => {\n                           if (err) {\n                              return reject(err);\n                           }\n                           done++;\n                           if (done >= list.length) {\n                              // now they are all updated, so continue.\n                              resolve();\n                           }\n                        });\n                     });\n\n                     // if there were no entries to update -> continue\n                     if (list.length == 0) {\n                        resolve();\n                     }\n                  })\n                  .catch(reject);\n            }\n         }); // end modifyCondition()\n      }); // end Promise()\n   }\n\n   /**\n    * fromSettings\n    * initialize this Action = require(a given set of setting values.\n    * @param {obj} settings  the settings {} returned = require(toSettings()\n    */\n   fromSettings(settings) {\n      settings = settings || {};\n\n      this.selectedFieldID = settings.selectedFieldID || null;\n      this.qbCondition = settings.qbCondition || {};\n\n      super.fromSettings(settings);\n\n      // if we have a display component, then populate it:\n      if (this._uiChooser) {\n         this._logic.fromSettings(settings);\n      }\n   }\n\n   /**\n    * toSettings\n    * return an object that represents the current state of this Action\n    * @return {obj}\n    */\n   toSettings() {\n      // settings: {\n      // \tselectedFieldID: 'guid',\n      //  qbCondition: [],\n      //\tvalueRules:{}\t\t// = require(ABViewRuleActionObjectUpdater\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.selectedFieldID = this.selectedFieldID;\n\n      var qbCond = null;\n      if (this.objectQB) {\n         qbCond = this.objectQB.getValue();\n         if (Array.isArray(qbCond)) {\n            qbCond = qbCond[0];\n         }\n\n         // FIX: make sure qbCond root element has a 'glue'\n         if (qbCond) {\n            qbCond.glue = qbCond?.glue || \"and\";\n         }\n      }\n      settings.qbCondition = qbCond;\n\n      // if we have a display component, then request our details = require(it:\n      if (this._uiChooser) {\n         settings.valueRules = this._logic.toSettings();\n      }\n\n      return settings;\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      if (this.objectQB) {\n         this.objectQB.setValue(this.qbCondition);\n      }\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleClosePopup\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleClosePopup extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleClosePopup\";\n      this.label = L(\"Close the current popup\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      this._ui = {\n         ui: {\n            view: \"layout\",\n            rows: [],\n         },\n\n         init: () => {},\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         let form = options.form;\n         if (!form) return;\n\n         let popup = form.pageParent((p) => p.settings.type == \"popup\");\n         if (!popup) return;\n\n         // get the dom id of page. it is dom id that is generated in ABLiveTool.js\n         // let pageDomId = [\"ab_live_page\", popup.application.id, popup.id].join(\n         //    \"_\"\n         // );\n\n         // close current popup\n         let $popup = $$(popup.id);\n         if ($popup) $popup.hide();\n\n         // this clears the UI's record of the current form.\n         options.form.changePage(null);\n\n         resolve();\n      });\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleConfirmMessage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleConfirmMessage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleConfirmMessage\";\n      this.label = L(\"Show a confirmation message\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         message: `${idBase}_message`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.message,\n            view: \"textarea\",\n            // label: this.labels.component.message,\n            // labelWidth: this.AB.UISettings.config().labelWidthLarge,\n            height: 130,\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.message).setValue(valueRules.message || \"\");\n         },\n\n         toSettings: () => {\n            // return the confirm message\n            return {\n               message: $$(ids.message).getValue() || \"\",\n            };\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var confirmMessage = this.valueRules.message || \"\";\n\n         webix.message({\n            text: confirmMessage,\n            type: \"info\",\n         });\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleWebsite\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\nconst ABFieldEmail = require(\"../../platform/dataFields/ABFieldEmail\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleEmail extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleEmail\";\n      this.label = L(\"Send a custom email\");\n\n      this.queryObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.queryObject) {\n   //       this.queryObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         form: `${idBase}_form`,\n         popup: `${idBase}_popup`,\n         list: `${idBase}_fieldList`,\n         toEmailsContainer: `${idBase}_toEmailsContainer`,\n         toEmails: `${idBase}_toEmails`,\n         message: `${idBase}_message`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.form,\n            view: \"form\",\n            width: 450,\n            elementsConfig: {\n               labelPosition: \"top\",\n               labelWidth: 100,\n            },\n            cols: [\n               // email form\n               {\n                  width: 330,\n                  rows: [\n                     {\n                        view: \"text\",\n                        name: \"fromName\",\n                        label: L(\"From Name\"),\n                     },\n                     {\n                        view: \"text\",\n                        name: \"fromEmail\",\n                        label: L(\"From Email\"),\n                        validate: webix.rules.isEmail,\n                        on: {\n                           onChange: function (newVal, oldVal) {\n                              if (this.getValue() && !this.validate()) {\n                                 $$(ids.form).markInvalid(\n                                    \"fromEmail\",\n                                    \"Email is invalid\"\n                                 );\n                              } else {\n                                 $$(ids.form).markInvalid(\"fromEmail\", false);\n                              }\n                           },\n                        },\n                     },\n                     {\n                        id: ids.toEmailsContainer,\n                        view: \"forminput\",\n                        name: \"toEmails\",\n                        label: L(\"Send\"),\n                        css: \"ab-rich-text\",\n                        width: 320,\n                        body: {\n                           width: 320,\n                           rows: [\n                              {\n                                 height: 25,\n                              },\n                              {\n                                 id: ids.toEmails,\n                                 width: 320,\n                                 view: \"layout\",\n                                 rows: [],\n                              },\n                              {\n                                 view: \"button\",\n                                 css: \"webix_primary\",\n                                 type: \"icon\",\n                                 icon: \"fa fa-plus\",\n                                 label: L(\"Add a recipient\"),\n                                 width: 150,\n                                 click: () => {\n                                    _logic.toEmailAdd();\n                                 },\n                              },\n                           ],\n                        },\n                     },\n                     {\n                        view: \"text\",\n                        name: \"subject\",\n                        label: L(\"Subject\"),\n                     },\n                     {\n                        view: \"textarea\",\n                        id: ids.message,\n                        name: \"message\",\n                        label: L(\"Message\"),\n                        width: 320,\n                        height: 400,\n                     },\n                     // {\n                     // \tview: 'label',\n                     // \tlabel: 'Message',\n                     // \tcss: { 'font-weight': 'bold' }\n                     // },\n                     // {\n                     // \tview: 'forminput',\n                     // \tid: ids.message,\n                     // \tname: 'message',\n                     // \tlabel: 'Message',\n                     // \tcss: \"ab-rich-text\",\n                     // \twidth: 320,\n                     // \theight: 400,\n                     // \tbody: {\n                     // \t\tview: 'tinymce-editor'\n                     // \t}\n                     // }\n                  ],\n               },\n               // field list\n               {\n                  rows: [\n                     {\n                        view: \"template\",\n                        type: \"header\",\n                        template: \"Fields\",\n                     },\n                     {\n                        id: ids.list,\n                        view: \"list\",\n                        width: 120,\n                        css: { \"background-color\": \"#fff !important;\" },\n                        template: function (obj, common) {\n                           return _logic.fieldTemplate(obj, common);\n                        },\n                        on: {\n                           onItemClick: function (id, e, node) {\n                              var component = this.getItem(id);\n\n                              _logic.enterField(component);\n                           },\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n\n         init: () => {\n            if (this.queryObject) {\n               $$(ids.list).parse(\n                  this.queryObject.fields((f) => f.fieldUseAsLabel())\n               );\n               $$(ids.list).refresh();\n            }\n\n            _logic.refreshUI();\n         },\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.form).setValues(valueRules);\n\n            // Populate recipients\n            var recipients = valueRules.toEmails || [];\n            recipients.forEach((r) => {\n               _logic.toEmailAdd({\n                  type: r.type, // 'to', 'cc' or 'bcc'\n                  emailType: r.emailType, // 'email' or 'field'\n                  value: r.value,\n               });\n            });\n\n            _logic.refreshUI();\n         },\n\n         toSettings: () => {\n            var formVals = $$(ids.form).getValues() || {};\n\n            // Get recipients\n            var recipients = [];\n            $$(ids.toEmails)\n               .getChildViews()\n               .forEach((e) => {\n                  // var type = e.queryView({ name: 'type' }).getValue();\n                  var type = \"to\"; // TODO\n                  var emailType = e.queryView({ name: \"emailType\" }).getValue();\n                  var value = e.queryView({ name: emailType }).getValue();\n\n                  recipients.push({\n                     type: type,\n                     emailType: emailType,\n                     value: value,\n                  });\n               });\n\n            // return the confirm message\n            return {\n               fromName: formVals[\"fromName\"],\n               fromEmail: formVals[\"fromEmail\"],\n               toEmails: recipients,\n               subject: formVals[\"subject\"],\n               message: formVals[\"message\"],\n            };\n         },\n\n         /**\n          * @method toEmailTemplate\n          *\n          * @param settings - {\n          * \t\t\ttype: string, // 'to', 'cc' or 'bcc'\n          * \t\t\temailType: string, // 'email' or 'field'\n          * \t\t\tvalue: string\n          * }\n          */\n         toEmailTemplate: (settings) => {\n            settings = settings || {};\n\n            return {\n               width: 320,\n               cols: [\n                  // {\n                  // \tview: 'richselect',\n                  // \tname: 'type',\n                  // \tvalue: settings.type || 'to',\n                  // \twidth: 80,\n                  // \toptions: [\n                  // \t\t{ id: 'to', value: \"To:\" },\n                  // \t\t// EmailNotification does not support cc, bcc and reply.\n                  // \t\t// { id: 'cc', value: \"Cc:\" },\n                  // \t\t// { id: 'bcc', value: \"Bcc:\" },\n                  // \t\t// { id: 'reply', value: \"Reply-To:\" }\n                  // \t]\n                  // },\n                  {\n                     view: \"richselect\",\n                     name: \"emailType\",\n                     value: settings.emailType || \"email\",\n                     width: 150,\n                     options: [\n                        {\n                           id: \"email\",\n                           value: L(\"A custom email address\"),\n                        },\n                        { id: \"field\", value: L(\"An email field\") },\n                        { id: \"query\", value: L(\"From query\") },\n                     ],\n                     on: {\n                        onChange: function (newVal, oldVal) {\n                           _logic.emailTypeChange(newVal, this);\n                        },\n                     },\n                  },\n                  {\n                     width: 150,\n                     name: \"emailValue\",\n                     visibleBatch: settings.emailType || \"email\",\n                     cols: [\n                        {\n                           view: \"text\",\n                           name: \"email\",\n                           batch: \"email\",\n                           value:\n                              settings.emailType == \"email\"\n                                 ? settings.value\n                                 : \"\",\n                           validate: webix.rules.isEmail,\n                           width: 150,\n                           on: {\n                              onChange: function (newVal, oldVal) {\n                                 _logic.toEmailValidate();\n                              },\n                           },\n                        },\n                        {\n                           view: \"richselect\",\n                           name: \"field\",\n                           batch: \"field\",\n                           value:\n                              settings.emailType == \"field\"\n                                 ? settings.value\n                                 : \"\",\n                           width: 150,\n                           suggest: {\n                              on: {\n                                 onBeforeShow: function () {\n                                    this.define(\"width\", 300);\n                                    this.resize();\n                                 },\n                              },\n                              data: _logic.emailFieldOptions(),\n                           },\n                        },\n                        {\n                           view: \"richselect\",\n                           name: \"query\",\n                           batch: \"query\",\n                           value:\n                              settings.emailType == \"query\"\n                                 ? settings.value\n                                 : \"\",\n                           width: 150,\n                           suggest: {\n                              on: {\n                                 onBeforeShow: function () {\n                                    this.define(\"width\", 300);\n                                    this.resize();\n                                 },\n                              },\n                              data: _logic.queryOptions(),\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     type: \"icon\",\n                     icon: \"fa fa-trash-o\",\n                     width: 32,\n                     click: function () {\n                        var $toView = this.getParentView();\n\n                        _logic.toEmailRemove($toView);\n                     },\n                  },\n               ],\n            };\n         },\n\n         toEmailAdd: (settings) => {\n            var count = $$(ids.toEmails).getChildViews().length;\n\n            $$(ids.toEmails).addView(_logic.toEmailTemplate(settings), count);\n\n            _logic.refreshUI();\n         },\n\n         emailTypeChange: (type, $select) => {\n            var $recipient = $select.getParentView();\n            var $emailValue = $recipient.queryView({ name: \"emailValue\" });\n\n            switch (type) {\n               case \"field\":\n                  $emailValue.showBatch(\"field\");\n                  break;\n               case \"query\":\n                  $emailValue.showBatch(\"query\");\n                  break;\n               default:\n                  $emailValue.showBatch(\"email\");\n                  break;\n            }\n\n            $$(ids.toEmailsContainer).adjust();\n         },\n\n         toEmailRemove: ($toView) => {\n            $$(ids.toEmails).removeView($toView);\n\n            _logic.refreshUI();\n         },\n\n         toEmailValidate: () => {\n            var isAllValid = true;\n\n            $$(ids.toEmails)\n               .getChildViews()\n               .forEach((v) => {\n                  let emailText = v.queryView({ name: \"email\" });\n                  if (emailText.getValue() && !emailText.validate()) {\n                     isAllValid = false;\n                  }\n               });\n\n            if (isAllValid) $$(ids.form).markInvalid(\"toEmails\", false);\n            else $$(ids.form).markInvalid(\"toEmails\", \"Email is invalid\");\n         },\n\n         fieldTemplate: (field, common) => {\n            return `<i class='fa fa-${field.icon} webix_icon_btn' aria-hidden='true'></i> ${field.label}`;\n         },\n\n         emailFieldOptions: () => {\n            var existsFieldIds = [];\n            var options = [];\n\n            var fnAddOptions = (currObj, fLink) => {\n               var emailFields = currObj\n                  .fields((f) => f instanceof ABFieldEmail)\n                  .map((f) => {\n                     var optId = \"\",\n                        optLabel = \"\";\n\n                     if (fLink) {\n                        optId = `${fLink.id}|${f.urlPointer()}`;\n                        optLabel = `${currObj.label}.${f.label} (${fLink.label})`;\n                     } else {\n                        optId = `|${f.urlPointer()}`;\n                        optLabel = `${currObj.label}.${f.label}`;\n                     }\n\n                     return {\n                        id: optId, // linkFieldId|fieldUrl\n                        value: optLabel,\n                     };\n                  });\n\n               // TODO: prevent duplicate\n\n               options = options.concat(emailFields);\n            };\n\n            fnAddOptions(this.queryObject);\n\n            this.queryObject.connectFields().forEach((f) => {\n               // prevent looping\n               if (\n                  // - prevent include connect objects of the base object\n                  // f.datasourceLink.id == this.queryObject.id ||\n                  // - check duplicate include objects\n                  existsFieldIds.indexOf(f.id) > -1\n               )\n                  return;\n\n               // store\n               existsFieldIds.push(f.id);\n\n               // add email fields of link object\n               fnAddOptions(f.datasourceLink, f);\n            });\n\n            return options;\n         },\n\n         queryOptions: () => {\n            var options = [];\n\n            // get data collections who is query and contains email field\n            let dcQueries = this.currentForm.AB.datacollections((dc) => {\n               let obj = dc.datasource;\n               return (\n                  dc.settings.isQuery &&\n                  obj &&\n                  obj.fields((f) => f.key == \"email\").length > 0\n               );\n            });\n\n            dcQueries.forEach((dv) => {\n               if (dv.datasource) {\n                  dv.datasource\n                     .fields((f) => f.key == \"email\")\n                     .forEach((f) => {\n                        options.push({\n                           id: `${dv.id}|${f.id}`, // ABDatacollectionID|fieldID\n                           value: `${dv.label}.${f.label}`,\n                        });\n                     });\n               }\n            });\n\n            return options;\n         },\n\n         enterField: (field) => {\n            var focusElem = webix.UIManager.getFocus();\n            var val = \"\";\n\n            if (\n               focusElem.config.view != \"text\" ||\n               focusElem.config.view != \"textarea\"\n            ) {\n               if (focusElem.getValue) val = focusElem.getValue();\n\n               if (focusElem.setValue)\n                  focusElem.setValue(`${val}${field.label}`);\n\n               webix.UIManager.setFocus(focusElem);\n            }\n         },\n\n         refreshUI: () => {\n            $$(ids.toEmailsContainer).adjust();\n            $$(ids.message).adjust();\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options - {\n   //\t\t\t\t\t\t\tdata: {obj} rowData,\n   //\t\t\t\t\t\t\tform: {ABViewForm}\n   //\t\t\t\t\t\t}\n   process(options) {\n      // validate sender's email is invalid\n      if (!webix.rules.isEmail(this.valueRules.fromEmail)) {\n         return Promise.resolve();\n      }\n\n      var recipients = [];\n\n      return Promise.resolve()\n         .then(() => {\n            // Pull recipients data\n            return new Promise((resolve, reject) => {\n               var tasks = [];\n\n               this.valueRules.toEmails.forEach((rec) => {\n                  tasks.push(\n                     new Promise((next, err) => {\n                        // TODO: Cc, Bcc\n\n                        // field\n                        if (rec.emailType == \"field\") {\n                           var emailFieldUrl = rec.value.split(\"|\")[1]; // linkFieldId|emailFieldUrl\n                           var emailField =\n                              this.queryObject.application.urlResolve(\n                                 emailFieldUrl\n                              );\n                           if (emailField) {\n                              // Pull email source object\n                              if (emailField.object.id == this.queryObject.id) {\n                                 var emailData =\n                                    options.data[emailField.columnName];\n                                 if (emailData)\n                                    recipients = recipients.concat(emailData);\n                              }\n                              // Pull emails from link object\n                              else {\n                                 let linkFieldId = rec.value.split(\"|\")[0];\n                                 let linkFields = this.queryObject.fields(\n                                    (f) =>\n                                       f instanceof ABFieldConnect &&\n                                       f.id == linkFieldId\n                                 );\n                                 linkFields.forEach((f) => {\n                                    var linkedData =\n                                       options.data[f.relationName()] || [];\n\n                                    // convert to an array\n                                    if (\n                                       linkedData &&\n                                       !Array.isArray(linkedData)\n                                    )\n                                       linkedData = [linkedData];\n\n                                    // pull email address\n                                    linkedData.forEach((d) => {\n                                       var email = d[emailField.columnName];\n                                       if (email)\n                                          recipients = recipients.concat(email);\n                                    });\n                                 });\n                              }\n\n                              next();\n                           } else {\n                              next();\n                           }\n                        }\n\n                        // query\n                        else if (rec.emailType == \"query\") {\n                           var dvIdAndFieldId = rec.value; // ABDatacollectionId|fieldId\n                           if (!dvIdAndFieldId) return next();\n\n                           var dcId = dvIdAndFieldId.split(\"|\")[0];\n                           var fieldId = dvIdAndFieldId.split(\"|\")[1];\n\n                           var dcQuery =\n                              this.currentForm.AB.datacollectionByID(dcId);\n                           if (!dcQuery) return next();\n\n                           var field = dcQuery.datasource.fieldByID(fieldId);\n                           if (!field) return next();\n\n                           // get data of data collection\n                           dcQuery.getData().forEach((data) => {\n                              var emailAddr = data[field.columnName];\n                              if (emailAddr) recipients.push(emailAddr);\n                           });\n\n                           next();\n                        }\n\n                        // email\n                        else {\n                           recipients.push(rec.value);\n                           next();\n                        }\n                     })\n                  );\n               });\n\n               Promise.all(tasks).catch(reject).then(resolve);\n            });\n         })\n         .then(() => {\n            // send out\n            return new Promise((resolve, reject) => {\n               recipients = this.AB.uniq(recipients).filter((r) => r);\n\n               if (!recipients || recipients.length < 1) return resolve();\n\n               // replace form value to template\n               var fromName = this.valueRules.fromName,\n                  subject = this.valueRules.subject,\n                  message = this.valueRules.message;\n\n               this.queryObject\n                  .fields((f) => f.fieldUseAsLabel())\n                  .forEach((f) => {\n                     var template = new RegExp(`{${f.label}}`, \"g\"),\n                        data = f.format(options.data);\n\n                     fromName = fromName.replace(template, data);\n                     subject = subject.replace(template, data);\n                     message = message.replace(template, data);\n                  });\n\n               // send a email\n               this.AB.Network.post({\n                  url: \"/app_builder/email\",\n                  params: {\n                     fromName: fromName,\n                     fromEmail: this.valueRules.fromEmail,\n                     subject: subject,\n                     message: message,\n                     recipients: this.AB.uniq(recipients),\n                  },\n               })\n                  .then(() => {\n                     resolve();\n                  })\n                  .catch(reject);\n            });\n         });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleExistPage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleExistPage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleExistPage\";\n      this.label = L(\"Redirect to an existing page\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         pagesAndTabs: `${idBase}_PagesAndTabs`,\n      };\n\n      this._ui = {\n         ui: { id: ids.pagesAndTabs, view: \"richselect\", options: [] },\n\n         init: () => {\n            _logic.populateOptions();\n         },\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         populateOptions: () => {\n            // Pull page list to \"Redirect to an existing page\"\n            var _pageOptions = [];\n\n            /**\n             * @param pageOrTab\t{Object}\t- ABViewPage or ABViewTab\n             * @param indent\t{integer}\n             * @param type\t\t{string}\t- 'page' or 'tab'\n             * @param pageId\t{uuid}\t\t- the id of page (only tab)\n             */\n            var addPage = (pageOrTab, indent, type, pageId) => {\n               indent = indent || \"\";\n\n               let icon = \"fa fa-file-o\";\n               if (type == \"tab\") icon = \"fa fa-window-maximize\";\n\n               let pageParent = pageOrTab.pageParent();\n\n               _pageOptions.push({\n                  id: pageOrTab.id,\n                  value: indent + pageOrTab.label,\n                  type: type,\n                  pageId: pageParent ? pageParent.id : null,\n\n                  icon: icon,\n               });\n\n               if (type == \"page\" || type == \"tab\") {\n                  if (pageOrTab.pages) {\n                     pageOrTab.pages().forEach(function (p) {\n                        addPage(p, indent + \"-\", \"page\");\n                     });\n                  }\n\n                  // add 'tab' options\n                  if (pageOrTab.views) {\n                     pageOrTab\n                        .views((v) => v.key == \"tab\")\n                        .forEach((tab) => {\n                           // add 'tab view' to options\n                           tab.views().forEach((tabView) => {\n                              addPage(\n                                 tabView,\n                                 indent + \"-\",\n                                 \"tab\",\n                                 pageOrTab.id\n                              );\n                           });\n                        });\n                  }\n               }\n            };\n\n            addPage(this.currentForm.pageRoot(), \"\", \"page\");\n\n            $$(ids.pagesAndTabs).define(\"options\", _pageOptions);\n            $$(ids.pagesAndTabs).refresh();\n         },\n\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.pagesAndTabs).setValue(\n               valueRules.tabId || valueRules.pageId || \"\"\n            );\n         },\n\n         toSettings: () => {\n            var result = {};\n\n            var selectedId = $$(ids.pagesAndTabs).getValue();\n            var selectedItem = $$(ids.pagesAndTabs)\n               .getPopup()\n               .getList()\n               .config.data.filter((opt) => opt.id == selectedId)[0];\n            if (selectedItem) {\n               if (selectedItem.type == \"tab\") {\n                  // store page id and tab id\n                  result = {\n                     pageId: selectedItem.pageId,\n                     tabId: selectedId,\n                  };\n               } else {\n                  // store only page id\n                  result = {\n                     pageId: selectedId,\n                  };\n               }\n            }\n\n            // return the confirm message\n            return result;\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         // redirect page\n         if (this.valueRules.pageId) {\n            options.form.changePage(this.valueRules.pageId);\n\n            if (this.valueRules.tabId) {\n               var curPage = options.form.application.pages(\n                  (p) => p.id == this.valueRules.pageId,\n                  true\n               )[0];\n               if (!curPage) return resolve();\n\n               // switch tab\n               var tabView = curPage.views(\n                  (v) => v.id == this.valueRules.tabId,\n                  true\n               )[0];\n               if (!tabView) return resolve();\n\n               var tab = tabView.parent;\n               if (!tab) return resolve();\n\n               var toggleParent = (element) => {\n                  if (!element.parent) return false;\n                  var parentElem = element.parent;\n                  if (!parentElem.parent) return false;\n                  parentElem.parent.emit(\"changeTab\", parentElem.id);\n                  toggleParent(parentElem.parent);\n               };\n\n               toggleParent(tab);\n               let showIt = setInterval(function () {\n                  if ($$(tabView.id) && $$(tabView.id).isVisible()) {\n                     clearInterval(showIt);\n                     return;\n                  }\n                  tab.emit(\"changeTab\", tabView.id);\n               }, 100);\n            }\n         }\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleParentPage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleParentPage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleParentPage\";\n      this.label = L(\"Redirect to the parent page\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      this._ui = {\n         ui: {\n            view: \"label\",\n            label: this.label,\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n      };\n\n      var _logic = {};\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var pageCurrent = options.form.pageParent();\n         var pageParent = pageCurrent.pageParent();\n\n         // redirect page\n         options.form.changePage(pageParent.id);\n\n         resolve();\n      });\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleWebsite\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleWebsite extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleWebsite\";\n      this.label = L(\"Redirect to another website URL\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         website: `${idBase}_website`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.website,\n            view: \"text\",\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.website).setValue(valueRules.website || \"\");\n         },\n\n         toSettings: () => {\n            // return the confirm message\n            return {\n               website: $$(ids.website).getValue() || \"\",\n            };\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         // redirect to website\n         if (this.valueRules.website)\n            window.open(\n               `http://${this.valueRules.website.replace(\"http://\", \"\")}`,\n               \"_blank\"\n            );\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","// ABViewRuleActionObjectUpdater\n//\n// An action that allows you to update fields on an object.\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nvar ABViewRuleActionObjectUpdaterDefaults = {\n   filterConditions: {\n      // array of filters to apply to the data table\n      glue: \"and\",\n      rules: [],\n   },\n};\n\nmodule.exports = class ABViewRuleActionObjectUpdater extends ABViewRuleAction {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdate\";\n      this.label = L(\"Update Record\");\n\n      this.updateObject = null; // the object this Action will Update.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n\n      this.stashRules = {}; // keep track of rule settings among our selected objects.\n   }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      if (this._uiUpdater == null) {\n         this._uiUpdater = this.valueDisplayList(idBase);\n      }\n\n      return this._uiUpdater;\n   }\n\n   // Our Values Display is a List of ValueRows\n   // Each ValueRow will display an additional set of [add] [delete] buttons.\n\n   valueDisplayList(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n      var ids = {\n         updateForm: myUnique(\"updateForm\"),\n      };\n\n      var _ui = {\n         view: \"form\",\n         id: ids.updateForm,\n         elements: [],\n      };\n\n      var init = (valueRules) => {\n         valueRules = valueRules || this.valueRules;\n         _logic.setValues(valueRules);\n      };\n\n      var _logic = {\n         removeAddRow: () => {\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // check row that's unselect a field\n            var rows = UpdateForm.getChildViews();\n\n            var addRow = rows.filter((r) => {\n               return r.queryView(function (view) {\n                  return view.config.name == \"field\" && !view.getValue();\n               });\n            })[0];\n            if (!addRow) return;\n\n            UpdateForm.removeView(addRow);\n         },\n\n         // addRow\n         // add a new data entry to this form.\n         // @param {obj} data  (optional) initial values for this row.\n         addRow: (data) => {\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // check row that's unselect a field\n            var rows = UpdateForm.getChildViews();\n            if (\n               data == null &&\n               rows.filter((r) => {\n                  return r.queryView(function (view) {\n                     return view.config.name == \"field\" && !view.getValue();\n                  });\n               }).length > 0\n            )\n               return;\n\n            // get a new Row Component\n            var row = this.valueDisplayRow(idBase);\n\n            // add row to Form\n            UpdateForm.addView(row.ui);\n\n            // initialize row with any provided data:\n            row.init({\n               onAdd: () => {\n                  // add a new Row\n                  _logic.addRow();\n               },\n               onDelete: (rowId) => {\n                  // remove a row\n                  _logic.delRow(rowId);\n               },\n               data: data,\n            });\n\n            // store this row\n            this.formRows.push(row);\n         },\n\n         delRow: (rowId) => {\n            // store this row\n            this.formRows.forEach((r, index) => {\n               if (r.ui.id == rowId) this.formRows.splice(index, 0);\n            });\n\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // remove UI\n            UpdateForm.removeView($$(rowId));\n         },\n\n         formClear: () => {\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            var children = UpdateForm.getChildViews();\n\n            // NOTE: need to clone this array, because it is connected with the UpdatForm's\n            // internal array of items.  Once we start .removeView() the element actually\n            // is removed from the internal array, which then upset's the .forEach() from\n            // properly iterating through the structure.  It results in missed items from\n            // being sent to the .forEach().\n            // So Clone it and use that for .forEach()\n            var cloneChildren = [];\n            children.forEach((c) => {\n               cloneChildren.push(c);\n            });\n            cloneChildren.forEach((c) => {\n               UpdateForm.removeView(c);\n            });\n\n            // clear our stored .formRows\n            this.formRows = [];\n         },\n\n         formGet: () => {\n            var UpdateForm = $$(ids.updateForm);\n            if (!UpdateForm) {\n               // this is a problem!\n               this.currentForm.AB.notify.developer(\n                  new Error(\"no webix form\"),\n                  {\n                     context:\n                        \"ABViewRuleActionObjectUpdater:formGet  could not find webix form\",\n                     id: ids.updateForm,\n                  }\n               );\n               return null;\n            }\n\n            return UpdateForm;\n         },\n\n         setValues: (valueRules) => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n\n            valueRules = valueRules || {};\n            valueRules.fieldOperations = valueRules.fieldOperations || [];\n\n            // find the form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // clear form:\n            _logic.formClear();\n\n            // if there are values to\n            if (valueRules.fieldOperations.length > 0) {\n               valueRules.fieldOperations.forEach((r) => {\n                  _logic.addRow(r);\n               });\n            }\n\n            // our default operation will cause an empty row to\n            // appear after our first value entry.\n            // let's remove that one, and then add a new one\n            // at the end:\n            _logic.removeAddRow();\n\n            // display an empty row\n            _logic.addRow();\n         },\n\n         fromSettings: (settings) => {\n            // Note: we just want the { valueRules:[] } here:\n            var mySettings = settings.valueRules || settings;\n\n            _logic.setValues(mySettings);\n         },\n\n         toSettings: () => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n            var settings = { fieldOperations: [] };\n\n            // for each of our formRows, decode the propery {}\n            this.formRows.forEach((fr) => {\n               var rowSettings = fr.toSettings();\n               if (rowSettings) {\n                  settings.fieldOperations.push(fr.toSettings());\n               }\n            });\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: _ui,\n         init: init,\n         fromSettings: (settings) => {\n            _logic.fromSettings(settings);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   valueDisplayRow(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return key + \"_\" + uniqueInstanceID;\n      };\n\n      var ids = {\n         row: myUnique(\"row\"),\n         updateForm: myUnique(\"updateFormRow\"),\n         field: myUnique(\"field\"),\n         value: myUnique(\"value\"),\n         selectDc: myUnique(\"selectDc\"),\n         selectBy: myUnique(\"selectBy\"),\n         queryField: myUnique(\"queryField\"),\n         multiview: myUnique(\"multiview\"),\n         buttonAdd: myUnique(\"add\"),\n         buttonDelete: myUnique(\"delete\"),\n      };\n\n      var FilterComponent;\n\n      var _logic = {\n         callbacks: {\n            onAdd: () => {},\n            onDelete: () => {},\n         },\n\n         buttonsToggle: () => {\n            $$(ids.row).getChildViews()[0].getChildViews()[4].hide();\n            $$(ids.row).getChildViews()[0].getChildViews()[5].show();\n         },\n\n         getFieldList: (shouldFilter) => {\n            var options = [];\n            if (this.updateObject) {\n               options = (this.updateObject.fields() || []).map((f) => {\n                  return {\n                     id: f.id,\n                     value: f.label,\n                  };\n               });\n\n               // options = (this.updateObject.fields() || [])\n               // .filter(f => {\n               //\n               // \tif (f.key != 'connectObject') {\n               // \t\treturn true;\n               // \t} else {\n               // \t\t// if this is a connection field, only return\n               // \t\t// fields that are 1:x  where this field is the\n               // \t\t// source:\n               // \t\t// return ((f.linkType() == 'one') && (f.isSource()))\n               //\n               // \t\t// 6-14-2018 Changing from only 1:x to support many\n               // \t\t// if this is a connected field, only return\n               // \t\t// fields that this is the source\n               // \t\treturn (f.isSource())\n               // \t}\n               // })\n               // .map(f => {\n               // \treturn {\n               // \t\tid: f.id,\n               // \t\tvalue: f.label\n               // \t};\n               // });\n\n               // Remove fields who are selected\n               if (shouldFilter) {\n                  // store this row\n                  var usedHash = {};\n                  this.formRows.forEach((row) => {\n                     var rowView = $$(row.ui.id);\n                     if (rowView) {\n                        var field = rowView\n                           .getChildViews()[0]\n                           .getChildViews()[1];\n                        usedHash[field.getValue()] = true;\n                     }\n                  });\n                  options = options.filter((o) => {\n                     return !usedHash[o.id];\n                  });\n               }\n            }\n            return options;\n         },\n\n         isValid: () => {\n            var validator = this.currentForm.AB.Validation.validator();\n            var valueField = $$(ids.row).getChildViews()[0].getChildViews()[3];\n            var FormView = valueField.getParentView().getParentView();\n\n            var field = this.getUpdateObjectField($$(ids.field).getValue());\n            if (field) {\n               var value = field.getValue(valueField, {});\n\n               // // if a standard component that supports .getValue()\n               // if (valueField.getValue) {\n               // \tvalue = valueField.getValue();\n               // } else {\n               // \t// else use for field.getValue();\n               // \tvalue = field.getValue(valueField, {});\n               // }\n\n               // our .isValidData() wants value in an object:\n               var obj = {};\n               obj[field.columnName] = value;\n\n               field.isValidData(obj, validator);\n\n               // if value is empty, this is also an error:\n               if (\n                  value == \"\" ||\n                  value == null ||\n                  (Array.isArray(value) && value.length == 0)\n               ) {\n                  validator.addError(\n                     field.columnName,\n                     L(\"A value is required\")\n                  );\n               }\n\n               // field.getParentView()  ->  row\n               // row.getParentView()  -> Form\n               FormView.clearValidation();\n               validator.updateForm(FormView);\n\n               return validator.pass();\n            } else {\n               // if we didn't find an associated field ... then this isn't good\n               // data.\n\n               //// TODO: display error for our field picker.  Note, it doesn't have a unique .name\n               // field.\n               var fieldField = $$(ids.row)\n                  .getChildViews()[0]\n                  .getChildViews()[1];\n               fieldField.define(\"invalidMessage\", L(\"A value is required\"));\n               fieldField.define(\"invalid\", true);\n               fieldField.refresh();\n               // fieldField.markInvalid(this.labels.component.errorRequired);\n               return false;\n            }\n         },\n\n         selectField: (columnID) => {\n            var field = this.getUpdateObjectField(columnID);\n            if (!field) return;\n\n            var fieldComponent = field.formComponent(),\n               abView = fieldComponent.newInstance(field.object.application),\n               formFieldComponent = abView.component(this.App),\n               $componentView = formFieldComponent.ui,\n               $inputView;\n\n            $componentView.id = ids.value; // set our expected id\n\n            // find all the DataSources\n            var datasources = this.currentForm.AB.datacollections(\n               (dc) => dc.datasource\n            );\n\n            // create a droplist with those dataSources\n            var optionsDataSources = [];\n            datasources.forEach((dc) => {\n               optionsDataSources.push({ id: dc.id, value: dc.label });\n            });\n\n            // create a droplist with select options\n            var optionsSelectBy = [\n               { id: \"select-one\", value: L(\"Current selection\") },\n               {\n                  id: \"filter-select-one\",\n                  value: L(\"Select first after filter by...\"),\n               },\n            ];\n\n            var $optionUpdateExsits = {\n               type: \"clean\",\n               rows: [\n                  {\n                     cols: [\n                        {\n                           id: ids.selectDc,\n                           view: \"combo\",\n                           options: optionsDataSources,\n                           placeholder: L(\"Choose a data source\"),\n                           on: {\n                              onChange: (newv, oldv) => {\n                                 var selectedDC =\n                                    this.currentForm.AB.datacollectionByID(\n                                       newv\n                                    );\n                                 if (\n                                    selectedDC &&\n                                    (selectedDC.sourceType == \"query\" ||\n                                       !field.isConnection)\n                                 ) {\n                                    var queryFieldOptions = [];\n                                    selectedDC.datasource\n                                       .fields()\n                                       .forEach((f) => {\n                                          queryFieldOptions.push({\n                                             id: f.id,\n                                             value: f.label,\n                                          });\n                                       });\n                                    $$(ids.queryField).define(\n                                       \"options\",\n                                       queryFieldOptions\n                                    );\n                                    $$(ids.queryField).refresh();\n                                    $$(ids.queryField).show();\n                                 } else {\n                                    $$(ids.queryField).hide();\n                                 }\n                              },\n                           },\n                        },\n                        // we will place a list of query fields if you choose a datasource that has a query source type\n                        {\n                           id: ids.queryField,\n                           view: \"combo\",\n                           hidden: true,\n                           placeholder: L(\"Choose value from...\"),\n                           options: [{ id: 1, value: \"figure this out\" }],\n                        },\n                     ],\n                  },\n                  {\n                     id: ids.selectBy,\n                     view: \"combo\",\n                     options: optionsSelectBy,\n                     placeholder: L(\"Choose select option\"),\n                     on: {\n                        onChange: (newv, oldv) => {\n                           var $row = $$(ids.row);\n                           $row.removeView($row.getChildViews()[1]);\n                           if (newv == \"select-one\") {\n                              $row.addView({}, 1);\n                           } else {\n                              var options =\n                                 this.currentForm.datacollection.datasource\n                                    .fields()\n                                    .map(function (f) {\n                                       return {\n                                          id: f.id,\n                                          value: f.label,\n                                       };\n                                    });\n\n                              FilterComponent = this.AB.filterComplexNew(\n                                 `${idBase}_filter`\n                              );\n                              // FilterComponent.applicationLoad(\n                              //    this.currentForm.application\n                              // );\n                              FilterComponent.init({\n                                 isRecordRule: true,\n                                 recordRuleFieldOptions: options,\n                              });\n                              FilterComponent.on(\"change\", (val) => {\n                                 _logic.onFilterChange(val);\n                              });\n\n                              $row.addView(FilterComponent.ui, 1);\n\n                              var dcId = $$(ids.selectDc).getValue();\n                              var dataCollection =\n                                 this.currentForm.AB.datacollectionByID(dcId);\n                              if (dataCollection) {\n                                 _logic.populateFilters(dataCollection);\n                              }\n                           }\n                        },\n                     },\n                  },\n               ],\n            };\n\n            // WORKAROUND: add '[Current User]' option to the user data field\n            if (field.key == \"user\") {\n               $componentView.options = $componentView.options || [];\n               $componentView.options.unshift({\n                  id: \"ab-current-user\",\n                  value: L(\"[Current User]\"),\n               });\n            }\n\n            // UPDATE: ok, in practice we have not had any use cases where\n            // we want individual values on connectedObject fields, but\n            // instead we want to insert the current selected element from\n            // a relevant data view.  So, replace the fieldComponet\n            // from a connectedObject field with a list of data views that\n            // are based upon the same object we are connected to:\n            if (field.isConnection) {\n               // find the ABObject this field connects to\n               var connectedObject = field.datasourceLink;\n\n               // find all the DataSources that are based upon this ABObject\n               // to do this, we find the root Page we are on, then ask that Page for datasources:\n               datasources = datasources.filter((dc) => {\n                  return dc.datasource.id == connectedObject.id;\n               });\n\n               var dcQueries = this.currentForm.AB.datacollections((dc) => {\n                  return (\n                     dc.sourceType == \"query\" &&\n                     dc.datasource &&\n                     dc.datasource.canFilterObject(connectedObject)\n                  );\n                  // return dc.datasource.id == connectedObject.id;\n               });\n\n               datasources = datasources.concat(dcQueries);\n\n               // refresh a droplist with those dataSources\n               optionsDataSources = [];\n               datasources.forEach((dc) => {\n                  optionsDataSources.push({ id: dc.id, value: dc.label });\n               });\n\n               // add select an array value option\n               optionsSelectBy.push({\n                  id: \"filter-select-all\",\n                  value: L(\"Select all after filter by...\"),\n               });\n\n               $inputView = $optionUpdateExsits;\n\n               // and the upcoming formFieldComponent.init()\n               // doesn't need to do anything:\n               formFieldComponent = {\n                  init: function () {},\n               };\n\n               // and we reset field so it's customDisplay isn't called:\n               // field = {};\n            } else {\n               $inputView = {\n                  id: ids.multiview,\n                  view: \"multiview\",\n                  cells: [\n                     {\n                        batch: \"custom\",\n                        rows: [\n                           $componentView,\n                           {\n                              view: \"label\",\n                              label: `<a>${L(\"Or exists value\")}</a>`,\n                              on: {\n                                 onItemClick: function () {\n                                    var $container = this.getParentView(),\n                                       $multiview = $container.getParentView();\n\n                                    $multiview.showBatch(\"exist\");\n                                 },\n                              },\n                           },\n                        ],\n                     },\n                     {\n                        // Update value from exists object\n                        batch: \"exist\",\n                        rows: [\n                           $optionUpdateExsits,\n                           {\n                              view: \"label\",\n                              label: `<a>${L(\"Or custom value\")}</a>`,\n                              on: {\n                                 onItemClick: function () {\n                                    var $container = this.getParentView(),\n                                       $multiview = $container.getParentView();\n\n                                    // clear filter view\n                                    $$(ids.selectBy).setValue(\"select-one\");\n\n                                    $multiview.showBatch(\"custom\");\n                                 },\n                              },\n                           },\n                        ],\n                     },\n                  ],\n               };\n            }\n\n            // Change component to display this field's form input\n            var $row = $$(ids.row).getChildViews()[0];\n            $row.removeView($row.getChildViews()[3]);\n            $row.addView($inputView, 3);\n\n            formFieldComponent.init();\n\n            // Show custom display of data field\n            if (!field.isConnection && field.customDisplay) {\n               // field.customDisplay(field, this.App, $row.getChildViews()[3].$view, {\n\n               var compNodeView = $$($componentView.id).$view;\n\n               // wait until render UI complete\n               setTimeout(() => {\n                  field.customDisplay(field, this.App, compNodeView, {\n                     editable: true,\n\n                     // tree\n                     isForm: true,\n                  });\n               }, 50);\n            }\n\n            // Show the remove button\n            var $buttonRemove = $row.getChildViews()[4];\n            $buttonRemove.show();\n\n            // Add a new row\n            if (columnID) _logic.callbacks.onAdd();\n         },\n\n         setValue: (data) => {\n            $$(ids.field).setValue(data.fieldID);\n            // note: this triggers our _logic.selectField() fn.\n            var field = this.getUpdateObjectField(data.fieldID);\n            if (field) {\n               var setValueFn = () => {\n                  $$(ids.selectDc).setValue(data.value);\n                  if (data.queryField) {\n                     $$(ids.queryField).setValue(data.queryField);\n                  }\n                  var selectBy = data.selectBy || \"select-one\";\n                  $$(ids.selectBy).setValue(selectBy);\n\n                  if (selectBy != \"select-one\") {\n                     var collectionId = data.value;\n                     var dataCollection =\n                        this.currentForm.AB.datacollectionByID(collectionId);\n                     if (dataCollection && data.filterConditions) {\n                        _logic.populateFilters(\n                           dataCollection,\n                           data.filterConditions\n                        );\n                     }\n                  }\n               };\n\n               // now handle our special connectedObject case:\n               if (field.isConnection) {\n                  setValueFn();\n               } else {\n                  if (data.valueType == \"exist\") {\n                     $$(ids.multiview).showBatch(\"exist\");\n\n                     setValueFn();\n                  } else {\n                     $$(ids.multiview).showBatch(\"custom\");\n\n                     // wait until render UI complete\n                     setTimeout(function () {\n                        // set value to custom field\n                        var rowData = {};\n                        rowData[field.columnName] = data.value;\n                        field.setValue($$(ids.value), rowData);\n                     }, 50);\n                  }\n               }\n            }\n         },\n\n         populateFilters: (dataView, filterConditions) => {\n            filterConditions =\n               filterConditions ||\n               ABViewRuleActionObjectUpdaterDefaults.filterConditions;\n\n            // Populate data to popups\n            // FilterComponent.objectLoad(objectCopy);\n            FilterComponent.fieldsLoad(\n               dataView.datasource ? dataView.datasource.fields() : []\n            );\n            FilterComponent.setValue(filterConditions);\n         },\n\n         toSettings: () => {\n            // if this isn't the last entry row\n            // * a row with valid data has the [delete] button showing.\n            var buttonDelete = $$(ids.buttonDelete);\n            if (buttonDelete && buttonDelete.isVisible()) {\n               var data = {};\n               data.fieldID = $$(ids.field).getValue();\n\n               var $valueField = $$(ids.value);\n               var field = this.getUpdateObjectField(data.fieldID);\n\n               var getValueFn = () => {\n                  data.value = $$(ids.selectDc).getValue();\n                  data.queryField = $$(ids.queryField).getValue();\n                  data.op = \"set\"; // possible to create other types of operations.\n                  data.type = field.key;\n                  data.selectBy = $$(ids.selectBy).getValue();\n                  data.valueType = \"exist\";\n                  if (FilterComponent) {\n                     data.filterConditions = FilterComponent.getValue();\n                  }\n               };\n\n               // now handle our special connectedObject case:\n               if (field.isConnection) {\n                  getValueFn();\n               } else {\n                  if ($$(ids.multiview).config.visibleBatch == \"exist\") {\n                     getValueFn();\n                  } else {\n                     data.value = field.getValue($valueField, {});\n                     data.op = \"set\"; // possible to create other types of operations.\n                     data.type = field.key;\n                     data.valueType = \"custom\";\n                  }\n               }\n\n               return data;\n            } else {\n               return null;\n            }\n         },\n      };\n\n      var _ui = {\n         id: ids.row,\n         view: \"layout\",\n         rows: [\n            {\n               cols: [\n                  {\n                     // Label\n                     view: \"label\",\n                     width: this.currentForm.AB.Config.labelWidthSmall,\n                     label: L(\"Set\"),\n                  },\n                  {\n                     // Field list\n                     view: \"combo\",\n                     name: \"field\",\n                     placeholder: L(\"Choose a field\"),\n                     id: ids.field,\n                     height: 32,\n                     options: _logic.getFieldList(true),\n                     on: {\n                        onChange: function (columnId) {\n                           _logic.selectField(columnId);\n                        },\n                     },\n                  },\n                  {\n                     // Label\n                     view: \"label\",\n                     width: this.currentForm.AB.Config.labelWidthSmall,\n                     label: L(\"To\"),\n                  },\n\n                  // Field value\n                  // NOTE: this view gets replaced each time a field is selected.\n                  // We replace it with a component associated with the Field\n                  {},\n\n                  {\n                     // \"Remove\" button\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     id: ids.buttonDelete,\n                     icon: \"fa fa-trash\",\n                     type: \"icon\",\n                     width: 30,\n                     hidden: true,\n                     click: function () {\n                        _logic.callbacks.onDelete(ids.row);\n                     },\n                  },\n               ],\n            },\n            {}, // we will add filters here if we need them\n         ],\n      };\n\n      var init = (options) => {\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         if (options.data) {\n            // options.data = { formID:xxx, value:yyy,  type:zzzz }\n            _logic.setValue(options.data);\n\n            // _logic.buttonsToggle();\n         }\n      };\n\n      return {\n         ui: _ui,\n         init: init,\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   getUpdateObjectField(fieldID) {\n      return (\n         this.queryObject?.fieldByID(fieldID) ??\n         this.updateObject?.fieldByID(fieldID) ??\n         this.currentForm.AB.fieldNew(\n            this.currentForm.AB.definitionByID(fieldID) ?? {},\n            this.currentForm.AB.objectNew({})\n         )\n      );\n   }\n\n   /**\n    * @method processUpdateObject\n    * Perform the specified update actions on the provided objectToUpdate\n    * @param {obj} options  Additional information required to make updates.\n    * @param {obj} objectToUpdate  The object to make the updates on.\n    * @return {boolean}   true if an update took place, false if no updates.\n    */\n   processUpdateObject(options, objectToUpdate) {\n      this._formData = objectToUpdate;\n      // return new Promise((resolve, reject) => {\n      var isUpdated = false;\n\n      this.valueRules = this.valueRules || {};\n      this.valueRules.fieldOperations = this.valueRules.fieldOperations || [];\n\n      // var allPromises = [];\n\n      // for each of our operations\n      this.valueRules.fieldOperations.forEach((op) => {\n         // op = {\n         // \tfieldID:'zzzzz',\n         //\tvalue: 'xxx',\n         //\top: 'set',\n         //  type:'',\n         //  queryField: '', // id of ABField\n         //  selectBy:'',   ['select-one', 'filter-select-one', 'filter-select-all']\n         //  valueType: \"\", ['custom', 'exist']\n         // \tfilterConditions: { // array of filters to apply to the data table\n         //\t\tglue: 'and',\n         // \t\trules: []\n         //  }\n         // }\n\n         var field = this.getUpdateObjectField(op.fieldID);\n         if (!field) return;\n\n         let value = op?.value?.id ?? op?.value;\n\n         switch (value) {\n            case \"ab-current-user\":\n               value = this.currentForm.AB.Account.username();\n               break;\n            case \"ab-current-date\":\n               value = new Date();\n               break;\n         }\n\n         // in the case of a connected Field, we use op.value to get the\n         // datacollection, and find it's currently selected value:\n         if ((field.isConnection && !field.isUser) || op.valueType == \"exist\") {\n            // NOTE: 30 May 2018 :current decision from Ric is to limit this\n            // to only handle 1:x connections where we update the current obj\n            // with the PK of the value from the DC.\n            //\n            // In the future, if we want to handle the other options,\n            // we need to modify this to handle the M:x connections where\n            // we insert our PK into the value from the DC.\n\n            // op.value is the ABDatacollection.id we need to find\n            const dataCollection = this.currentForm.AB.datacollectionByID(\n               op.value\n            );\n            if (!dataCollection) {\n               isUpdated = false;\n               return;\n            }\n\n            // we don't want to mess with the dataView directly since it might\n            // be used by other parts of the system and this refresh might reset\n            // it's cursor.\n            // var clonedDataCollection = dataView.filteredClone(op.filterConditions);\n\n            // loop through rules to find \"same-as-field\" or \"not-same-as-field\"\n            // adjust operator and switch key value to actual value when found\n            var filterConditions = this.currentForm.AB.cloneDeep(\n               op.filterConditions\n            );\n            if (filterConditions && filterConditions.rules) {\n               filterConditions.rules\n                  .filter((r) => {\n                     return (\n                        r.rule == \"same_as_field\" ||\n                        r.rule == \"not_same_as_field\"\n                     );\n                  })\n                  .forEach((item) => {\n                     var valueField =\n                        this.currentForm.datacollection.datasource.fieldByID(\n                           item.value\n                        );\n                     if (valueField.isConnection) {\n                        item.value = valueField.format(this._formData);\n                     } else {\n                        item.value = this._formData[valueField.columnName];\n                     }\n\n                     if (item.rule == \"not_same_as_field\") {\n                        item.rule = \"not equals\";\n                     } else {\n                        item.rule = \"equals\";\n                     }\n                  });\n            }\n\n            let clonedDataCollection =\n               dataCollection.filteredClone(filterConditions);\n\n            switch (op.selectBy) {\n               // the 'select-one' is getting the currently set cursor on this data collection\n               // and using that value.\n               // TODO: rename to 'select-cursor'\n               case \"select-one\":\n               default: // dataView.getItem(dataView.getCursor());\n                  value = clonedDataCollection.getCursor();\n\n                  if (value) {\n                     // NOTE: webix documentation issue: .getCursor() is supposed to return\n                     // the .id of the item.  However it seems to be returning the {obj}\n\n                     if (op.valueType == \"exist\") {\n                        let fieldWithValue =\n                           clonedDataCollection.datasource.fieldByID(\n                              op.queryField\n                           );\n\n                        if (fieldWithValue)\n                           value = value[fieldWithValue.columnName];\n                     } else if (value.id) {\n                        value = value.id;\n                     }\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        if (!value) break;\n\n                        if (field.isConnection) {\n                           // if we are setting a connection we do not want to pass the full object because\n                           // batch creates payload gets too large\n                           objectToUpdate[field.columnName] = {};\n                           objectToUpdate[field.columnName].id =\n                              value[field.datasourceLink.PK()];\n                           objectToUpdate[field.columnName][\n                              field.datasourceLink.PK()\n                           ] = value[field.datasourceLink.PK()];\n\n                           // If the connect field use the custom FK, then it requires to pass value of the custom FK.\n                           if (field.settings.isCustomFK) {\n                              if (field.indexField) {\n                                 objectToUpdate[field.columnName][\n                                    field.indexField.columnName\n                                 ] = value[field.indexField.columnName];\n                              }\n                              if (field.indexField2) {\n                                 objectToUpdate[field.columnName][\n                                    field.indexField2.columnName\n                                 ] = value[field.indexField2.columnName];\n                              }\n                           }\n\n                           field.datasourceLink\n                              .fields(\n                                 (f) =>\n                                    f.key == \"combined\" || f.key == \"AutoIndex\"\n                              )\n                              .forEach((f) => {\n                                 objectToUpdate[field.columnName][\n                                    f.columnName\n                                 ] = value[f.columnName];\n                              });\n                        } else {\n                           objectToUpdate[field.columnName] = value;\n                        }\n\n                        break;\n                  }\n                  break;\n\n               // attempt to filter this data collection by the given filterConditions\n               case \"filter-select-all\":\n                  var newValues = [];\n\n                  var currRow = clonedDataCollection.getFirstRecord();\n                  while (currRow) {\n                     // do something there\n\n                     switch (clonedDataCollection.sourceType) {\n                        // case: datacollection is an object\n                        // we want to set our field to this values\n                        case \"object\":\n                           newValues.push(currRow.id);\n                           break;\n\n                        // case: datacollection is a query\n                        // our field is a pointer to an object. we want to pull out that object\n                        // from the query data.\n                        case \"query\": {\n                           let fieldWithValue =\n                              clonedDataCollection.datasource.fieldByID(\n                                 op.queryField\n                              );\n\n                           var newValue = currRow[fieldWithValue.columnName];\n\n                           if (typeof newValue == \"undefined\") {\n                              newValue = currRow[fieldWithValue.relationName()];\n\n                              if (Array.isArray(newValue)) {\n                                 newValue = newValue.map((v) => {\n                                    return v.id ? v.id : v;\n                                 });\n                              } else if (newValue.id) {\n                                 newValue = newValue.id;\n                              }\n                           }\n\n                           newValues = this.currentForm.AB.uniq(\n                              newValues.concat(newValue)\n                           );\n\n                           break;\n                        }\n                     }\n\n                     currRow = clonedDataCollection.getNextRecord(currRow);\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        if (field.linkType() == \"one\") {\n                           var updates = [];\n                           newValues.forEach((v) => {\n                              var objectToUpdateClone =\n                                 this.currentForm.AB.cloneDeep(objectToUpdate);\n                              objectToUpdateClone[field.columnName] = v;\n                              updates.push(objectToUpdateClone);\n                           });\n                           objectToUpdate.newRecords = updates;\n                        } else {\n                           objectToUpdate[field.columnName] = newValues;\n                        }\n                        break;\n                  }\n                  break;\n\n               case \"filter-select-one\":\n                  newValues = [];\n\n                  value = clonedDataCollection.getFirstRecord();\n\n                  if (value) {\n                     // case: datacollection is a query\n                     // our field is a pointer to an object. we want to pull out that object\n                     // from the query data.\n                     if (\n                        clonedDataCollection.sourceType == \"query\" ||\n                        (op.valueType == \"exist\" && op.queryField)\n                     ) {\n                        let fieldWithValue =\n                           clonedDataCollection.datasource.fieldByID(\n                              op.queryField\n                           );\n\n                        newValue = value[fieldWithValue.columnName];\n\n                        if (typeof newValue == \"undefined\") {\n                           newValue = value[fieldWithValue.relationName()];\n                           if (Array.isArray(newValue)) {\n                              newValue = newValue[0];\n                           }\n                           if (newValue.id) newValue = newValue.id;\n                        }\n\n                        value = newValue;\n                     }\n                     // case: datacollection is an object\n                     // we want to set our field to this values\n                     else if (clonedDataCollection.sourceType == \"object\") {\n                        // NOTE: webix documentation issue: .getCursor() is supposed to return\n                        // the .id of the item.  However it seems to be returning the {obj}\n\n                        // we need to use the objects indexField(2) if there is one\n                        // otherwise default to the id\n                        var lookup;\n                        if (field.indexField) {\n                           lookup = field.indexField.columnName;\n                        } else if (field.indexField2) {\n                           lookup = field.indexField2.columnName;\n                        }\n                        if (lookup && value[lookup]) {\n                           value = value[lookup];\n                        } else if (value.id) {\n                           value = value.id;\n                        }\n                     }\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        objectToUpdate[field.columnName] = value;\n                        break;\n                  }\n                  break;\n            }\n\n            isUpdated = true;\n\n            // allPromises.push(connectedPromise);\n         } else {\n            // var setPromise = new Promise((resolve, reject) => {\n            switch (op.op) {\n               case \"set\":\n                  objectToUpdate[field.columnName] = value;\n                  break;\n            }\n\n            isUpdated = true;\n\n            //    resolve(isUpdated);\n            // });\n\n            // allPromises.push(setPromise);\n\n            // console.log(\"finished\");\n         }\n      });\n\n      return isUpdated;\n      // Promise.all(allPromises).then(() => {\n      //    resolve(isUpdated);\n      // });\n      // });\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      this._formData = options.data;\n\n      return new Promise((resolve, reject) => {\n         let isUpdated = this.processUpdateObject({}, options.data);\n         if (!isUpdated) {\n            resolve();\n         } else {\n            // get the model from the provided Form Obj:\n            var dv = options.form.datacollection;\n            if (!dv) return resolve();\n\n            var model = dv.model;\n            model\n               .update(options.data.id, options.data)\n               .then(resolve)\n               .catch((err) => {\n                  this.currentForm.AB.notify.developer(err, {\n                     context:\n                        \"ABViewRuleActionObjectUpdater:process  update error\",\n                     id: options.data.id,\n                     data: options.data,\n                  });\n                  reject(err);\n               });\n         }\n      });\n   }\n\n   // objectLoad\n   // save the current object this Action is associated with.\n   objectLoad(object) {\n      super.objectLoad(object);\n      this.updateObjectLoad(object);\n   }\n\n   // updateObjectLoad\n   // save the given object as the object we will update.\n   updateObjectLoad(object) {\n      // stash rules for old object\n      if (this.updateObject) {\n         this.stashRules[this.updateObject.id] = this.valueRules;\n      }\n\n      this.updateObject = object;\n\n      // with a new updateObject, then reset our UI\n      this._uiUpdater = null;\n\n      // reload any stashed rules, or set to {}\n      this.valueRules = this.stashRules[this.updateObject.id] || {};\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // make sure UI is updated:\n      // set our updateObject\n      if (settings.updateObjectID) {\n         this.updateObject = this.currentForm.AB.objectByID(\n            settings.updateObjectID\n         );\n      } else {\n         // DEPRECIATED method of resolving objects .urlResolve()\n         if (settings.updateObjectURL) {\n            var updateObject = this.currentForm.application.urlResolve(\n               settings.updateObjectURL\n            );\n            this.updateObject = updateObject;\n         }\n      }\n\n      // if we have a display component, then populate it:\n      if (this._uiUpdater) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._uiUpdater.fromSettings(settings);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tvalueRules:{}\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._uiUpdater.toSettings();\n      settings.updateObjectURL = this.updateObject.urlPointer();\n\n      return settings;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * Here we need to scan each of our field operations, and verify all\n    * related data collections are initialized before we can continue.\n    * @return {Promise}\n    */\n   isReady() {\n      var allReady = [];\n      let fieldOps = this.valueRules?.fieldOperations ?? [];\n      fieldOps.forEach((op) => {\n         let field = this.getUpdateObjectField(op.fieldID);\n         if (!field) return;\n         if (!field.isConnection && op.valueType !== \"exist\") return;\n\n         // this references a DC\n         let DC = this.currentForm.AB.datacollectionByID(op.value);\n         if (DC?.dataStatus === DC?.dataStatusFlag.initialized) return;\n\n         // not ready yet, so wait until the 'initializedData' event\n         allReady.push(\n            new Promise((resolve /*, reject */) => {\n               DC.on(\"initializedData\", () => {\n                  resolve();\n               });\n            })\n         );\n      });\n      return Promise.all(allReady);\n   }\n};\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.ImageModule=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){\"use strict\";var DocUtils=require(\"docxtemplater\").DocUtils;DocUtils.convertPixelsToEmus=function(pixel){return Math.round(pixel*9525)};module.exports=DocUtils},{docxtemplater:5}],2:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./docUtils\");var extensionRegex=/[^.]+\\.([^.]+)/;var rels={getPrefix:function getPrefix(fileType){return fileType===\"docx\"?\"word\":\"ppt\"},getFileTypeName:function getFileTypeName(fileType){return fileType===\"docx\"?\"document\":\"presentation\"},getRelsFileName:function getRelsFileName(fileName){return fileName.replace(/^.*?([a-zA-Z0-9]+)\\.xml$/,\"$1\")+\".xml.rels\"},getRelsFilePath:function getRelsFilePath(fileName,fileType){var relsFileName=rels.getRelsFileName(fileName);var prefix=fileType===\"pptx\"?\"ppt/slides\":\"word\";return prefix+\"/_rels/\"+relsFileName}};module.exports=function(){function ImgManager(zip,fileName,xmlDocuments,fileType){_classCallCheck(this,ImgManager);this.fileName=fileName;this.prefix=rels.getPrefix(fileType);this.zip=zip;this.xmlDocuments=xmlDocuments;this.fileTypeName=rels.getFileTypeName(fileType);this.mediaPrefix=fileType===\"pptx\"?\"../media\":\"media\";var relsFilePath=rels.getRelsFilePath(fileName,fileType);this.relsDoc=xmlDocuments[relsFilePath]||this.createEmptyRelsDoc(xmlDocuments,relsFilePath)}_createClass(ImgManager,[{key:\"createEmptyRelsDoc\",value:function createEmptyRelsDoc(xmlDocuments,relsFileName){var mainRels=this.prefix+\"/_rels/\"+this.fileTypeName+\".xml.rels\";var doc=xmlDocuments[mainRels];if(!doc){var err=new Error(\"Could not copy from empty relsdoc\");err.properties={mainRels:mainRels,relsFileName:relsFileName,files:Object.keys(this.zip.files)};throw err}var relsDoc=DocUtils.str2xml(DocUtils.xml2str(doc));var relationships=relsDoc.getElementsByTagName(\"Relationships\")[0];var relationshipChilds=relationships.getElementsByTagName(\"Relationship\");for(var i=0,l=relationshipChilds.length;i<l;i++){relationships.removeChild(relationshipChilds[i])}xmlDocuments[relsFileName]=relsDoc;return relsDoc}},{key:\"loadImageRels\",value:function loadImageRels(){var iterable=this.relsDoc.getElementsByTagName(\"Relationship\");return Array.prototype.reduce.call(iterable,function(max,relationship){var id=relationship.getAttribute(\"Id\");if(/^rId[0-9]+$/.test(id)){return Math.max(max,parseInt(id.substr(3),10))}return max},0)}},{key:\"addExtensionRels\",value:function addExtensionRels(contentType,extension){var contentTypeDoc=this.xmlDocuments[\"[Content_Types].xml\"];var defaultTags=contentTypeDoc.getElementsByTagName(\"Default\");var extensionRegistered=Array.prototype.some.call(defaultTags,function(tag){return tag.getAttribute(\"Extension\")===extension});if(extensionRegistered){return}var types=contentTypeDoc.getElementsByTagName(\"Types\")[0];var newTag=contentTypeDoc.createElement(\"Default\");newTag.namespaceURI=null;newTag.setAttribute(\"ContentType\",contentType);newTag.setAttribute(\"Extension\",extension);types.appendChild(newTag)}},{key:\"addImageRels\",value:function addImageRels(imageName,imageData,i){if(i==null){i=0}var realImageName=i===0?imageName:imageName+(\"(\"+i+\")\");var imagePath=this.prefix+\"/media/\"+realImageName;if(this.zip.files[imagePath]!=null){return this.addImageRels(imageName,imageData,i+1)}var image={name:imagePath,data:imageData,options:{binary:true}};this.zip.file(image.name,image.data,image.options);var extension=realImageName.replace(extensionRegex,\"$1\");this.addExtensionRels(\"image/\"+extension,extension);var relationships=this.relsDoc.getElementsByTagName(\"Relationships\")[0];var newTag=this.relsDoc.createElement(\"Relationship\");newTag.namespaceURI=null;var maxRid=this.loadImageRels()+1;newTag.setAttribute(\"Id\",\"rId\"+maxRid);newTag.setAttribute(\"Type\",\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\");newTag.setAttribute(\"Target\",this.mediaPrefix+\"/\"+realImageName);relationships.appendChild(newTag);return maxRid}}]);return ImgManager}()},{\"./docUtils\":1}],3:[function(require,module,exports){\"use strict\";module.exports={getImageXml:function getImageXml(rId,size){return('<w:drawing>\\n\\t\\t<wp:inline distT=\"0\" distB=\"0\" distL=\"0\" distR=\"0\">\\n\\t\\t\\t<wp:extent cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t<wp:effectExtent l=\"0\" t=\"0\" r=\"0\" b=\"0\"/>\\n\\t\\t\\t<wp:docPr id=\"2\" name=\"Image 2\" descr=\"image\"/>\\n\\t\\t\\t<wp:cNvGraphicFramePr>\\n\\t\\t\\t\\t<a:graphicFrameLocks xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\" noChangeAspect=\"1\"/>\\n\\t\\t\\t</wp:cNvGraphicFramePr>\\n\\t\\t\\t<a:graphic xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\">\\n\\t\\t\\t\\t<a:graphicData uri=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t<pic:pic xmlns:pic=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t<pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPr id=\"0\" name=\"Picture 1\" descr=\"image\"/>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t</pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t<pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a:ext uri=\"{28A0092B-C50C-407E-A947-70E740481C1C}\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a14:useLocalDpi xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" val=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t\\t\\t\\t\\t</a:blip>\\n\\t\\t\\t\\t\\t\\t\\t<a:srcRect/>\\n\\t\\t\\t\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t\\t\\t\\t</pic:blipFill>\\n\\t\\t\\t\\t\\t\\t<pic:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:off x=\"0\" y=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t<a:ln>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t\\t\\t</pic:spPr>\\n\\t\\t\\t\\t\\t</pic:pic>\\n\\t\\t\\t\\t</a:graphicData>\\n\\t\\t\\t</a:graphic>\\n\\t\\t</wp:inline>\\n\\t</w:drawing>\\n\\t\\t').replace(/\\t|\\n/g,\"\")},getImageXmlCentered:function getImageXmlCentered(rId,size){return('<w:p>\\n\\t\\t\\t<w:pPr>\\n\\t\\t\\t\\t<w:jc w:val=\"center\"/>\\n\\t\\t\\t</w:pPr>\\n\\t\\t\\t<w:r>\\n\\t\\t\\t\\t<w:rPr/>\\n\\t\\t\\t\\t<w:drawing>\\n\\t\\t\\t\\t\\t<wp:inline distT=\"0\" distB=\"0\" distL=\"0\" distR=\"0\">\\n\\t\\t\\t\\t\\t<wp:extent cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t<wp:docPr id=\"0\" name=\"Picture\" descr=\"\"/>\\n\\t\\t\\t\\t\\t<a:graphic xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\">\\n\\t\\t\\t\\t\\t\\t<a:graphicData uri=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t<pic:pic xmlns:pic=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t\\t<pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPr id=\"0\" name=\"Picture\" descr=\"\"/>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t</pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t</pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<pic:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:off x=\"0\" y=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t<a:ln w=\"9525\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:miter lim=\"800000\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:headEnd/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:tailEnd/>\\n\\t\\t\\t\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t\\t\\t\\t</pic:spPr>\\n\\t\\t\\t\\t\\t\\t</pic:pic>\\n\\t\\t\\t\\t\\t\\t</a:graphicData>\\n\\t\\t\\t\\t\\t</a:graphic>\\n\\t\\t\\t\\t\\t</wp:inline>\\n\\t\\t\\t\\t</w:drawing>\\n\\t\\t\\t</w:r>\\n\\t\\t</w:p>\\n\\t\\t').replace(/\\t|\\n/g,\"\")},getPptxImageXml:function getPptxImageXml(rId,size,offset){return('<p:pic>\\n\\t\\t\\t<p:nvPicPr>\\n\\t\\t\\t\\t<p:cNvPr id=\"6\" name=\"Picture 2\"/>\\n\\t\\t\\t\\t<p:cNvPicPr>\\n\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t</p:cNvPicPr>\\n\\t\\t\\t\\t<p:nvPr/>\\n\\t\\t\\t</p:nvPicPr>\\n\\t\\t\\t<p:blipFill>\\n\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\" cstate=\"print\">\\n\\t\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t\\t<a:ext uri=\"{28A0092B-C50C-407E-A947-70E740481C1C}\">\\n\\t\\t\\t\\t\\t\\t\\t<a14:useLocalDpi xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" val=\"0\"/>\\n\\t\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t\\t</a:blip>\\n\\t\\t\\t\\t<a:srcRect/>\\n\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t</p:blipFill>\\n\\t\\t\\t<p:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t<a:off x=\"'+offset.x+'\" y=\"'+offset.y+'\"/>\\n\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t<a:ln>\\n\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t<a:effectLst/>\\n\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{909E8E84-426E-40DD-AFC4-6F175D3DCCD1}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenFill xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\">\\n\\t\\t\\t\\t\\t\\t\\t<a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"accent1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:solidFill>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenFill>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{91240B29-F687-4F45-9708-019B960494DF}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenLine xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" w=\"9525\">\\n\\t\\t\\t\\t\\t\\t\\t<a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"tx1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:miter lim=\"800000\"/>\\n\\t\\t\\t\\t\\t\\t\\t<a:headEnd/>\\n\\t\\t\\t\\t\\t\\t\\t<a:tailEnd/>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenLine>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{AF507438-7753-43E0-B8FC-AC1667EBCBE1}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenEffects xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\">\\n\\t\\t\\t\\t\\t\\t\\t<a:effectLst>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:outerShdw dist=\"35921\" dir=\"2700000\" algn=\"ctr\" rotWithShape=\"0\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"bg2\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t</a:outerShdw>\\n\\t\\t\\t\\t\\t\\t\\t</a:effectLst>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenEffects>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t</p:spPr>\\n\\t\\t</p:pic>\\n\\t\\t').replace(/\\t|\\n/g,\"\")}}},{}],4:[function(require,module,exports){\"use strict\";function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}var memoize=require(\"./memoize\");var DOMParser=require(\"xmldom\").DOMParser;var XMLSerializer=require(\"xmldom\").XMLSerializer;var Errors=require(\"./errors\");var DocUtils={};function parser(tag){return _defineProperty({},\"get\",function get(scope){if(tag===\".\"){return scope}return scope[tag]})}DocUtils.defaults={nullGetter:function nullGetter(part){if(!part.module){return\"undefined\"}if(part.module===\"rawxml\"){return\"\"}return\"\"},parser:memoize(parser),fileType:\"docx\",delimiters:{start:\"{\",end:\"}\"}};DocUtils.mergeObjects=function(){var resObj={};var obj=void 0,keys=void 0;for(var i=0;i<arguments.length;i+=1){obj=arguments[i];keys=Object.keys(obj);for(var j=0;j<keys.length;j+=1){resObj[keys[j]]=obj[keys[j]]}}return resObj};DocUtils.xml2str=function(xmlNode){var a=new XMLSerializer;return a.serializeToString(xmlNode)};DocUtils.decodeUtf8=function(s){try{if(s===undefined){return undefined}return decodeURIComponent(escape(DocUtils.convertSpaces(s)))}catch(e){var err=new Error(\"End\");err.properties.data=s;err.properties.explanation=\"Could not decode string to UTF8\";throw err}};DocUtils.encodeUtf8=function(s){return unescape(encodeURIComponent(s))};DocUtils.str2xml=function(str,errorHandler){var parser=new DOMParser({errorHandler:errorHandler});return parser.parseFromString(str,\"text/xml\")};DocUtils.charMap={\"&\":\"&amp;\",\"'\":\"&apos;\",\"<\":\"&lt;\",\">\":\"&gt;\"};var regexStripRegexp=/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g;DocUtils.escapeRegExp=function(str){return str.replace(regexStripRegexp,\"\\\\$&\")};DocUtils.charMapRegexes=Object.keys(DocUtils.charMap).map(function(endChar){var startChar=DocUtils.charMap[endChar];return{rstart:new RegExp(DocUtils.escapeRegExp(startChar),\"g\"),rend:new RegExp(DocUtils.escapeRegExp(endChar),\"g\"),start:startChar,end:endChar}});DocUtils.wordToUtf8=function(string){var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rstart,r.end)}return string};DocUtils.utf8ToWord=function(string){if(typeof string!==\"string\"){string=string.toString()}var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rend,r.start)}return string};DocUtils.cloneDeep=function(obj){return JSON.parse(JSON.stringify(obj))};DocUtils.concatArrays=function(arrays){return arrays.reduce(function(result,array){Array.prototype.push.apply(result,array);return result},[])};var spaceRegexp=new RegExp(String.fromCharCode(160),\"g\");DocUtils.convertSpaces=function(s){return s.replace(spaceRegexp,\" \")};DocUtils.pregMatchAll=function(regex,content){var matchArray=[];var match=void 0;while((match=regex.exec(content))!=null){matchArray.push({array:match,offset:match.index})}return matchArray};DocUtils.sizeOfObject=function(obj){return Object.keys(obj).length};function throwXmlTagNotFound(options){var err=new Errors.XTTemplateError(\"No tag '\"+options.element+\"' was found at the \"+options.position);err.properties={id:\"no_xml_tag_found_at_\"+options.position,explanation:\"No tag '\"+options.element+\"' was found at the \"+options.position,parsed:options.parsed,index:options.index,element:options.element};throw err}DocUtils.getRight=function(parsed,element,index){for(var i=index,l=parsed.length;i<l;i++){var part=parsed[i];if(part.value===\"</\"+element+\">\"){return i}}throwXmlTagNotFound({position:\"right\",element:element,parsed:parsed,index:index})};DocUtils.getLeft=function(parsed,element,index){var parts=parsed.slice(0,index);for(var i=parts.length-1;i>=0;i--){var part=parts[i];if(part.value.indexOf(\"<\"+element)===0&&[\">\",\" \"].indexOf(part.value[element.length+1])!==-1){return i}}throwXmlTagNotFound({position:\"left\",element:element,parsed:parsed,index:index})};module.exports=DocUtils;DocUtils.traits=require(\"./traits\");DocUtils.moduleWrapper=require(\"./module-wrapper\")},{\"./errors\":6,\"./memoize\":9,\"./module-wrapper\":11,\"./traits\":20,xmldom:23}],5:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var wrapper=DocUtils.moduleWrapper;var Docxtemplater=function(){function Docxtemplater(){_classCallCheck(this,Docxtemplater);if(arguments.length>0){throw new Error(\"The constructor with parameters have been removed in docxtemplater 3.0, please check the upgrade guide.\")}this.compiled={};this.modules=[];this.setOptions({})}_createClass(Docxtemplater,[{key:\"attachModule\",value:function attachModule(module){this.modules.push(wrapper(module));return this}},{key:\"setOptions\",value:function setOptions(options){var _this=this;this.options=options;Object.keys(DocUtils.defaults).forEach(function(key){var defaultValue=DocUtils.defaults[key];_this[key]=_this.options[key]!=null?_this.options[key]:defaultValue});if(this.fileType===\"docx\"||this.fileType===\"pptx\"){this.fileTypeConfig=Docxtemplater.FileTypeConfig[this.fileType]}this.fileTypeConfig=this.options.fileTypeConfig||this.fileTypeConfig;this.options.xmlFileNames=[];return this}},{key:\"loadZip\",value:function loadZip(zip){if(zip.loadAsync){throw new Error(\"Docxtemplater doesn't handle JSZip version >=3, see changelog\")}this.zip=zip;return this}},{key:\"compileFile\",value:function compileFile(fileName){var currentFile=this.createTemplateClass(fileName);currentFile.parse();this.compiled[fileName]=currentFile}},{key:\"compile\",value:function compile(){this.templatedFiles=this.fileTypeConfig.getTemplatedFiles(this.zip)}},{key:\"render\",value:function render(){var _this2=this;this.modules=this.fileTypeConfig.baseModules.map(function(moduleFunction){return moduleFunction()}).concat(this.modules);this.options=this.modules.reduce(function(options,module){return module.optionsTransformer(options,_this2)},this.options);this.xmlDocuments=this.options.xmlFileNames.reduce(function(xmlDocuments,fileName){var content=_this2.zip.files[fileName].asText();xmlDocuments[fileName]=DocUtils.str2xml(content);return xmlDocuments},{});this.modules.forEach(function(module){module.set({zip:_this2.zip,xmlDocuments:_this2.xmlDocuments,data:_this2.data})});this.compile();this.modules.forEach(function(module){module.set({compiled:_this2.compiled})});this.templatedFiles.forEach(function(fileName){if(_this2.zip.files[fileName]!=null){_this2.compileFile(fileName)}});this.mapper=this.modules.reduce(function(value,module){return module.getRenderedMap(value)},{});Object.keys(this.mapper).forEach(function(to){var mapped=_this2.mapper[to];var from=mapped.from;var currentFile=_this2.compiled[from];currentFile.setTags(mapped.data);currentFile.render();_this2.zip.file(to,currentFile.content)});Object.keys(this.xmlDocuments).forEach(function(fileName){_this2.zip.remove(fileName);var content=DocUtils.encodeUtf8(DocUtils.xml2str(_this2.xmlDocuments[fileName]));return _this2.zip.file(fileName,content,{})});return this}},{key:\"setData\",value:function setData(data){this.data=data;return this}},{key:\"getZip\",value:function getZip(){return this.zip}},{key:\"createTemplateClass\",value:function createTemplateClass(path){var usedData=this.zip.files[path].asText();return this.createTemplateClassFromContent(usedData,path)}},{key:\"createTemplateClassFromContent\",value:function createTemplateClassFromContent(content,filePath){var _this3=this;var xmltOptions={filePath:filePath};Object.keys(DocUtils.defaults).forEach(function(key){xmltOptions[key]=_this3[key]});xmltOptions.fileTypeConfig=this.fileTypeConfig;xmltOptions.modules=this.modules;return new Docxtemplater.XmlTemplater(content,xmltOptions)}},{key:\"getFullText\",value:function getFullText(path){return this.createTemplateClass(path||this.fileTypeConfig.textPath).getFullText()}},{key:\"getTemplatedFiles\",value:function getTemplatedFiles(){this.compile();return this.templatedFiles}}]);return Docxtemplater}();Docxtemplater.DocUtils=require(\"./doc-utils\");Docxtemplater.Errors=require(\"./errors\");Docxtemplater.XmlTemplater=require(\"./xml-templater\");Docxtemplater.FileTypeConfig=require(\"./file-type-config\");Docxtemplater.XmlMatcher=require(\"./xml-matcher\");module.exports=Docxtemplater},{\"./doc-utils\":4,\"./errors\":6,\"./file-type-config\":7,\"./xml-matcher\":21,\"./xml-templater\":22}],6:[function(require,module,exports){\"use strict\";function XTError(message){this.name=\"GenericError\";this.message=message;this.stack=new Error(message).stack}XTError.prototype=Error.prototype;function XTTemplateError(message){this.name=\"TemplateError\";this.message=message;this.stack=new Error(message).stack}XTTemplateError.prototype=new XTError;function XTScopeParserError(message){this.name=\"ScopeParserError\";this.message=message;this.stack=new Error(message).stack}XTScopeParserError.prototype=new XTError;function XTInternalError(message){this.name=\"InternalError\";this.properties={explanation:\"InternalError\"};this.message=message;this.stack=new Error(message).stack}XTInternalError.prototype=new XTError;module.exports={XTError:XTError,XTTemplateError:XTTemplateError,XTInternalError:XTInternalError,XTScopeParserError:XTScopeParserError}},{}],7:[function(require,module,exports){\"use strict\";var loopModule=require(\"./modules/loop\");var spacePreserveModule=require(\"./modules/space-preserve\");var rawXmlModule=require(\"./modules/rawxml\");var expandPairTrait=require(\"./modules/expand-pair-trait\");var render=require(\"./modules/render\");var PptXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/ppt\\/(slides|slideMasters)\\/(slide|slideMaster)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"ppt/presentation.xml\"])},textPath:\"ppt/slides/slide1.xml\",tagsXmlTextArray:[\"a:t\",\"m:t\"],tagsXmlLexedArray:[\"p:sp\",\"a:tc\",\"a:tr\",\"a:table\",\"a:p\",\"a:r\"],tagRawXml:\"p:sp\",tagTextXml:\"a:t\",baseModules:[render,expandPairTrait,rawXmlModule,loopModule]};var DocXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/word\\/(header|footer)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"word/document.xml\"])},textPath:\"word/document.xml\",tagsXmlTextArray:[\"w:t\",\"m:t\"],tagsXmlLexedArray:[\"w:tc\",\"w:tr\",\"w:table\",\"w:p\",\"w:r\"],tagRawXml:\"w:p\",tagTextXml:\"w:t\",baseModules:[render,spacePreserveModule,expandPairTrait,rawXmlModule,loopModule]};module.exports={docx:DocXFileTypeConfig,pptx:PptXFileTypeConfig}},{\"./modules/expand-pair-trait\":12,\"./modules/loop\":13,\"./modules/rawxml\":14,\"./modules/render\":15,\"./modules/space-preserve\":16}],8:[function(require,module,exports){\"use strict\";var Errors=require(\"./errors\");var DocUtils=require(\"./doc-utils\");function inRange(range,match){return range[0]<=match.offset&&match.offset<range[1]}function updateInTextTag(part,inTextTag){if(part.type===\"tag\"&&part.position===\"start\"&&part.text){if(inTextTag){throw new Error(\"Malformed xml : Already in text tag\")}return true}if(part.type===\"tag\"&&part.position===\"end\"&&part.text){if(!inTextTag){throw new Error(\"Malformed xml : Already not in text tag\")}return false}return inTextTag}function offsetSort(a,b){return a.offset-b.offset}function getTag(tag){var start=1;if(tag[1]===\"/\"){start=2}var index=tag.indexOf(\" \");var end=index===-1?tag.length-1:index;return{tag:tag.slice(start,end),position:start===1?\"start\":\"end\"}}function tagMatcher(content,textMatchArray,othersMatchArray){var cursor=0;var contentLength=content.length;var allMatches=DocUtils.concatArrays([textMatchArray.map(function(tag){return{tag:tag,text:true}}),othersMatchArray.map(function(tag){return{tag:tag,text:false}})]).reduce(function(allMatches,t){allMatches[t.tag]=t.text;return allMatches},{});var totalMatches=[];while(cursor<contentLength){cursor=content.indexOf(\"<\",cursor);if(cursor===-1){break}var offset=cursor;cursor=content.indexOf(\">\",cursor);var tagText=content.slice(offset,cursor+1);var _getTag=getTag(tagText),tag=_getTag.tag,position=_getTag.position;var text=allMatches[tag];if(text==null){continue}totalMatches.push({type:\"tag\",position:position,text:text,offset:offset,value:tagText})}return totalMatches}function throwUnopenedTagException(options){var err=new Errors.XTTemplateError(\"Unopened tag\");err.properties={xtag:options.xtag.split(\" \")[0],id:\"unopened_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function throwUnclosedTagException(options){var err=new Errors.XTTemplateError(\"Unclosed tag\");err.properties={xtag:options.xtag.split(\" \")[0].substr(1),id:\"unclosed_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function assertDelimiterOrdered(delimiterMatches,fullText){var inDelimiter=false;var lastDelimiterMatch={offset:0};var xtag=void 0;delimiterMatches.forEach(function(delimiterMatch){xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(delimiterMatch.position===\"start\"&&inDelimiter||delimiterMatch.position===\"end\"&&!inDelimiter){if(delimiterMatch.position===\"start\"){throwUnclosedTagException({xtag:xtag})}else{throwUnopenedTagException({xtag:xtag})}}inDelimiter=!inDelimiter;lastDelimiterMatch=delimiterMatch});var delimiterMatch={offset:fullText.length};xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(inDelimiter){throwUnclosedTagException({xtag:xtag})}}function getAllIndexes(arr,val,position){var indexes=[];var offset=-1;do{offset=arr.indexOf(val,offset+1);if(offset!==-1){indexes.push({offset:offset,position:position})}}while(offset!==-1);return indexes}function Reader(innerContentParts){var _this=this;this.innerContentParts=innerContentParts;this.full=\"\";this.parseDelimiters=function(delimiters){_this.full=_this.innerContentParts.join(\"\");var offset=0;_this.ranges=_this.innerContentParts.map(function(part){offset+=part.length;return offset-part.length});var delimiterMatches=DocUtils.concatArrays([getAllIndexes(_this.full,delimiters.start,\"start\"),getAllIndexes(_this.full,delimiters.end,\"end\")]).sort(offsetSort);assertDelimiterOrdered(delimiterMatches,_this.full);var delimiterLength={start:delimiters.start.length,end:delimiters.end.length};var cutNext=0;var delimiterIndex=0;_this.parsed=_this.ranges.map(function(offset,i){var range=[offset,offset+this.innerContentParts[i].length];var partContent=this.innerContentParts[i];var delimitersInOffset=[];while(delimiterIndex<delimiterMatches.length&&inRange(range,delimiterMatches[delimiterIndex])){delimitersInOffset.push(delimiterMatches[delimiterIndex]);delimiterIndex++}var parts=[];var cursor=0;if(cutNext>0){cursor=cutNext;cutNext=0}delimitersInOffset.forEach(function(delimiterInOffset){var value=partContent.substr(cursor,delimiterInOffset.offset-offset-cursor);if(value.length>0){parts.push({type:\"content\",value:value})}parts.push({type:\"delimiter\",position:delimiterInOffset.position});cursor=delimiterInOffset.offset-offset+delimiterLength[delimiterInOffset.position]});cutNext=cursor-partContent.length;var value=partContent.substr(cursor);if(value.length>0){parts.push({type:\"content\",value:value})}return parts},_this)}}module.exports={parse:function parse(xmlparsed,delimiters){var inTextTag=false;var innerContentParts=[];xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(inTextTag&&part.type===\"content\"){innerContentParts.push(part.value)}});var reader=new Reader(innerContentParts);reader.parseDelimiters(delimiters);var newArray=[];var index=0;xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(part.type===\"content\"){part.position=inTextTag?\"insidetag\":\"outsidetag\"}if(inTextTag&&part.type===\"content\"){Array.prototype.push.apply(newArray,reader.parsed[index].map(function(p){if(p.type===\"content\"){p.position=\"insidetag\"}return p}));index++}else{newArray.push(part)}});return newArray},xmlparse:function xmlparse(content,xmltags){var matches=tagMatcher(content,xmltags.text,xmltags.other);var cursor=0;var parsed=matches.reduce(function(parsed,match){var value=content.substr(cursor,match.offset-cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}cursor=match.offset+match.value.length;delete match.offset;if(match.value.length>0){parsed.push(match)}return parsed},[]);var value=content.substr(cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}return parsed}}},{\"./doc-utils\":4,\"./errors\":6}],9:[function(require,module,exports){\"use strict\";function memoize(func){var stringifyJson=JSON.stringify,cache={};function cachedfun(){var hash=stringifyJson(arguments);return hash in cache?cache[hash]:cache[hash]=func.apply(this,arguments)}return cachedfun}module.exports=memoize},{}],10:[function(require,module,exports){\"use strict\";function getMinFromArrays(arrays,state){var minIndex=-1;for(var i=0,l=arrays.length;i<l;i++){if(state[i]>=arrays[i].length){continue}if(minIndex===-1||arrays[i][state[i]].offset<arrays[minIndex][state[minIndex]].offset){minIndex=i}}if(minIndex===-1){throw new Error(\"minIndex negative\")}return minIndex}module.exports=function(arrays){var totalLength=arrays.reduce(function(sum,array){return sum+array.length},0);arrays=arrays.filter(function(array){return array.length>0});var resultArray=new Array(totalLength);var state=arrays.map(function(){return 0});var i=0;while(i<=totalLength-1){var arrayIndex=getMinFromArrays(arrays,state);resultArray[i]=arrays[arrayIndex][state[arrayIndex]];state[arrayIndex]++;i++}return resultArray}},{}],11:[function(require,module,exports){\"use strict\";function emptyFun(){}function identity(i){return i}module.exports=function(module){var defaults={set:emptyFun,parse:emptyFun,render:emptyFun,getTraits:emptyFun,optionsTransformer:identity,getRenderedMap:identity,postparse:identity};if(Object.keys(defaults).every(function(key){return!module[key]})){throw new Error(\"This module cannot be wrapped, because it doesn't define any of the necessary functions\")}Object.keys(defaults).forEach(function(key){module[key]=module[key]||defaults[key]});return module}},{}],12:[function(require,module,exports){\"use strict\";var traitName=\"expandPair\";var mergeSort=require(\"../mergesort\");var DocUtils=require(\"../doc-utils\");var wrapper=require(\"../module-wrapper\");var _require=require(\"../traits\"),getExpandToDefault=_require.getExpandToDefault;var Errors=require(\"../errors\");function throwUnmatchedLoopException(options){var location=options.location;var t=location===\"start\"?\"unclosed\":\"unopened\";var T=location===\"start\"?\"Unclosed\":\"Unopened\";var err=new Errors.XTTemplateError(T+\" loop\");var tag=options.part.value;err.properties={id:t+\"_loop\",explanation:\"The loop with tag \"+tag+\" is \"+t,xtag:tag};throw err}function throwClosingTagNotMatchOpeningTag(options){var tags=options.tags;var err=new Errors.XTTemplateError(\"Closing tag does not match opening tag\");err.properties={id:\"closing_tag_does_not_match_opening_tag\",explanation:'The tag \"'+tags[0].value+'\" is closed by the tag \"'+tags[1].value+'\"',openingtag:tags[0].value,closingtag:tags[1].value};throw err}function getOpenCountChange(part){switch(part.location){case\"start\":return 1;case\"end\":return-1;default:throw new Error(\"Location should be one of 'start' or 'end' (given : \"+part.location+\")\")}}function getPairs(traits){if(traits.length===0){return[]}var countOpen=1;var firstTrait=traits[0];for(var i=1;i<traits.length;i++){var currentTrait=traits[i];countOpen+=getOpenCountChange(currentTrait.part);if(countOpen===0){if(currentTrait.part.value!==firstTrait.part.value&&currentTrait.part.value!==\"\"){throwClosingTagNotMatchOpeningTag({tags:[firstTrait.part,currentTrait.part]})}var outer=getPairs(traits.slice(i+1));\nreturn[[firstTrait,currentTrait]].concat(outer)}}var part=firstTrait.part;throwUnmatchedLoopException({part:part,location:part.location})}var expandPairTrait={name:\"ExpandPairTrait\",postparse:function postparse(parsed,_ref){var getTraits=_ref.getTraits,_postparse=_ref.postparse;var traits=getTraits(traitName,parsed);traits=traits.map(function(trait){return trait||[]});traits=mergeSort(traits);var pairs=getPairs(traits);var expandedPairs=pairs.map(function(pair){var expandTo=pair[0].part.expandTo;if(expandTo===\"auto\"){expandTo=getExpandToDefault(parsed.slice(pair[0].offset,pair[1].offset))}if(!expandTo){return[pair[0].offset,pair[1].offset]}var left=DocUtils.getLeft(parsed,expandTo,pair[0].offset);var right=DocUtils.getRight(parsed,expandTo,pair[1].offset);return[left,right]});var currentPairIndex=0;var innerParts=void 0;return parsed.reduce(function(newParsed,part,i){var inPair=currentPairIndex<pairs.length&&expandedPairs[currentPairIndex][0]<=i;var pair=pairs[currentPairIndex];var expandedPair=expandedPairs[currentPairIndex];if(!inPair){newParsed.push(part);return newParsed}if(expandedPair[0]===i){innerParts=[]}if(pair[0].offset!==i&&pair[1].offset!==i){innerParts.push(part)}if(expandedPair[1]===i){var basePart=parsed[pair[0].offset];delete basePart.location;delete basePart.expandTo;basePart.subparsed=_postparse(innerParts);newParsed.push(basePart);currentPairIndex++}return newParsed},[])}};module.exports=function(){return wrapper(expandPairTrait)}},{\"../doc-utils\":4,\"../errors\":6,\"../mergesort\":10,\"../module-wrapper\":11,\"../traits\":20}],13:[function(require,module,exports){\"use strict\";var DocUtils=require(\"../doc-utils\");var dashInnerRegex=/^-([^\\s]+)\\s(.+)$/;var wrapper=require(\"../module-wrapper\");var moduleName=\"loop\";var loopModule={name:\"LoopModule\",parse:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent[0]===\"#\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:false}}if(placeHolderContent[0]===\"^\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:true}}if(placeHolderContent[0]===\"/\"){return{type:type,value:placeHolderContent.substr(1),module:module,location:\"end\"}}if(placeHolderContent[0]===\"-\"){var value=placeHolderContent.replace(dashInnerRegex,\"$2\");var expandTo=placeHolderContent.replace(dashInnerRegex,\"$1\");return{type:type,value:value,expandTo:expandTo,module:module,location:\"start\",inverted:false}}return null},getTraits:function getTraits(traitName,parsed){if(traitName!==\"expandPair\"){return}return parsed.reduce(function(tags,part,offset){if(part.type===\"placeholder\"&&part.module===moduleName){tags.push({part:part,offset:offset})}return tags},[])},render:function render(part,options){if(!part.type===\"placeholder\"||part.module!==moduleName){return null}var totalValue=[];function loopOver(scope){var scopeManager=options.scopeManager.createSubScopeManager(scope,part.value);totalValue.push(options.render(DocUtils.mergeObjects({},options,{compiled:part.subparsed,tags:{},scopeManager:scopeManager})))}options.scopeManager.loopOver(part.value,loopOver,part.inverted);return{value:totalValue.join(\"\")}}};module.exports=function(){return wrapper(loopModule)}},{\"../doc-utils\":4,\"../module-wrapper\":11}],14:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"../doc-utils\");var Errors=require(\"../errors\");var moduleName=\"rawxml\";var wrapper=require(\"../module-wrapper\");function throwRawTagShouldBeOnlyTextInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag should be the only text in paragraph\");var tag=options.part.value;err.properties={id:\"raw_xml_tag_should_be_only_text_in_paragraph\",explanation:\"The tag \"+tag,xtag:options.part.value,paragraphParts:options.paragraphParts};throw err}function getInner(_ref){var part=_ref.part,left=_ref.left,right=_ref.right,postparsed=_ref.postparsed,index=_ref.index;var paragraphParts=postparsed.slice(left+1,right);paragraphParts.forEach(function(p,i){if(i===index-left-1){return}if(p.type===\"placeholder\"||p.type===\"content\"&&p.position===\"insidetag\"){throwRawTagShouldBeOnlyTextInParagraph({paragraphParts:paragraphParts,part:part})}});return part}var RawXmlModule=function(){function RawXmlModule(){_classCallCheck(this,RawXmlModule);this.name=\"RawXmlModule\"}_createClass(RawXmlModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){this.fileTypeConfig=docxtemplater.fileTypeConfig;return options}},{key:\"parse\",value:function parse(placeHolderContent){var type=\"placeholder\";if(placeHolderContent[0]!==\"@\"){return null}return{type:type,value:placeHolderContent.substr(1),module:moduleName}}},{key:\"postparse\",value:function postparse(parsed){return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:this.fileTypeConfig.tagRawXml})}},{key:\"render\",value:function render(part,options){if(part.module!==moduleName){return null}var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return{value:value}}}]);return RawXmlModule}();module.exports=function(){return wrapper(new RawXmlModule)}},{\"../doc-utils\":4,\"../errors\":6,\"../module-wrapper\":11}],15:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var wrapper=require(\"../module-wrapper\");var Render=function(){function Render(){_classCallCheck(this,Render);this.name=\"Render\"}_createClass(Render,[{key:\"set\",value:function set(obj){if(obj.compiled){this.compiled=obj.compiled}if(obj.data!=null){this.data=obj.data}}},{key:\"getRenderedMap\",value:function getRenderedMap(mapper){var _this=this;return Object.keys(this.compiled).reduce(function(mapper,from){mapper[from]={from:from,data:_this.data};return mapper},mapper)}}]);return Render}();module.exports=function(){return wrapper(new Render)}},{\"../module-wrapper\":11}],16:[function(require,module,exports){\"use strict\";var wrapper=require(\"../module-wrapper\");var spacePreserve={name:\"SpacePreserveModule\",postparse:function postparse(parsed){var chunk=[];var inChunk=false;var result=parsed.reduce(function(parsed,part){if(part.type===\"tag\"&&part.position===\"start\"&&part.text&&part.value===\"<w:t>\"){inChunk=true}if(inChunk){if(part.type===\"placeholder\"&&!part.module){chunk[0].value='<w:t xml:space=\"preserve\">'}chunk.push(part)}else{parsed.push(part)}if(part.type===\"tag\"&&part.position===\"end\"&&part.text&&part.value===\"</w:t>\"){Array.prototype.push.apply(parsed,chunk);inChunk=false;chunk=[]}return parsed},[]);Array.prototype.push.apply(result,chunk);return result}};module.exports=function(){return wrapper(spacePreserve)}},{\"../module-wrapper\":11}],17:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var parser={postparse:function postparse(parsed,modules){function getTraits(traitName,parsed){return modules.map(function(module){return module.getTraits(traitName,parsed)})}function postparse(parsed){return modules.reduce(function(parsed,module){return module.postparse(parsed,{postparse:postparse,getTraits:getTraits})},parsed)}return postparse(parsed)},parse:function parse(lexed,modules){function moduleParse(placeHolderContent,parsed){var moduleParsed=void 0;for(var i=0,l=modules.length;i<l;i++){var _module=modules[i];moduleParsed=_module.parse(placeHolderContent);if(moduleParsed){parsed.push(moduleParsed);return moduleParsed}}return null}var inPlaceHolder=false;var placeHolderContent=void 0;var tailParts=[];return lexed.reduce(function(parsed,token){if(token.type===\"delimiter\"){inPlaceHolder=token.position===\"start\";if(token.position===\"end\"){placeHolderContent=DocUtils.wordToUtf8(placeHolderContent);if(!moduleParse(placeHolderContent,parsed)){parsed.push({type:\"placeholder\",value:placeHolderContent})}Array.prototype.push.apply(parsed,tailParts);tailParts=[];return parsed}placeHolderContent=\"\";return parsed}if(inPlaceHolder){if(token.type===\"content\"&&token.position===\"insidetag\"){placeHolderContent+=token.value}else{tailParts.push(token)}return parsed}parsed.push(token);return parsed},[])}};module.exports=parser},{\"./doc-utils\":4}],18:[function(require,module,exports){\"use strict\";var ScopeManager=require(\"./scope-manager\");var DocUtils=require(\"./doc-utils\");function moduleRender(part,options){var moduleRendered=void 0;for(var i=0,l=options.modules.length;i<l;i++){var _module=options.modules[i];moduleRendered=_module.render(part,options);if(moduleRendered){return moduleRendered}}return false}function render(options){options.render=render;options.modules=options.modules;if(!options.scopeManager){options.scopeManager=ScopeManager.createBaseScopeManager(options)}return options.compiled.map(function(part){var moduleRendered=moduleRender(part,options);if(moduleRendered){return moduleRendered.value}if(part.type===\"placeholder\"){var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return DocUtils.utf8ToWord(value)}if(part.type===\"content\"||part.type===\"tag\"){return part.value}throw new Error('Unimplemented tag type \"'+part.type+'\"')}).join(\"\")}module.exports=render},{\"./doc-utils\":4,\"./scope-manager\":19}],19:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var Errors=require(\"./errors\");var ScopeManager=function(){function ScopeManager(options){_classCallCheck(this,ScopeManager);this.scopePath=options.scopePath;this.scopeList=options.scopeList;this.parser=options.parser}_createClass(ScopeManager,[{key:\"loopOver\",value:function loopOver(tag,callback,inverted){inverted=inverted||false;return this.loopOverValue(this.getValue(tag),callback,inverted)}},{key:\"functorIfInverted\",value:function functorIfInverted(inverted,functor,value){if(inverted){functor(value)}}},{key:\"isValueFalsy\",value:function isValueFalsy(value,type){return value==null||!value||type===\"[object Array]\"&&value.length===0}},{key:\"loopOverValue\",value:function loopOverValue(value,functor,inverted){var type=Object.prototype.toString.call(value);var currentValue=this.scopeList[this.num];if(this.isValueFalsy(value,type)){return this.functorIfInverted(inverted,functor,currentValue)}if(type===\"[object Array]\"){for(var i=0,scope;i<value.length;i++){scope=value[i];this.functorIfInverted(!inverted,functor,scope)}return}if(type===\"[object Object]\"){return this.functorIfInverted(!inverted,functor,value)}if(value===true){return this.functorIfInverted(!inverted,functor,currentValue)}}},{key:\"getValue\",value:function getValue(tag,num){this.num=num==null?this.scopeList.length-1:num;var err=void 0;var parser=void 0;var result=void 0;var scope=this.scopeList[this.num];try{parser=this.parser(tag)}catch(error){err=new Errors.XTScopeParserError(\"Scope parser compilation failed\");err.properties={id:\"scopeparser_compilation_failed\",tag:tag,explanation:\"The scope parser for the tag \"+tag+\" failed to compile\",rootError:error};throw err}try{result=parser.get(scope,{num:this.num,scopeList:this.scopeList})}catch(error){err=new Errors.XTScopeParserError(\"Scope parser execution failed\");err.properties={id:\"scopeparser_execution_failed\",explanation:\"The scope parser for the tag \"+tag+\" failed to execute\",scope:scope,tag:tag,rootError:error};throw err}if(result==null&&this.num>0){return this.getValue(tag,this.num-1)}return result}},{key:\"createSubScopeManager\",value:function createSubScopeManager(scope,tag){var options={scopePath:this.scopePath.slice(0),scopeList:this.scopeList.slice(0)};options.parser=this.parser;options.scopeList=this.scopeList.concat(scope);options.scopePath=this.scopePath.concat(tag);return new ScopeManager(options)}}]);return ScopeManager}();ScopeManager.createBaseScopeManager=function(_ref){var parser=_ref.parser,tags=_ref.tags;var options={parser:parser,tags:tags};options.scopePath=[];options.scopeList=[tags];return new ScopeManager(options)};module.exports=ScopeManager},{\"./errors\":6}],20:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var Errors=require(\"./errors\");function throwRawTagNotInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag not in paragraph\");var tag=options.part.value;err.properties={id:\"raw_tag_outerxml_invalid\",explanation:'The tag \"'+tag+'\"',rootError:options.rootError,xtag:tag};throw err}function lastTagIsOpenTag(array,tag){if(array.length===0){return false}var lastTag=array[array.length-1];var innerLastTag=lastTag.tag.substr(1);var innerCurrentTag=tag.substr(2,tag.length-3);return innerLastTag.indexOf(innerCurrentTag)===0}function addTag(array,tag){array.push({tag:tag});return array}function getListXmlElements(parts){var tags=parts.filter(function(part){return part.type===\"tag\"}).map(function(part){return part.value});var result=[];for(var i=0,tag;i<tags.length;i++){tag=tags[i];if(tag[1]===\"/\"){if(lastTagIsOpenTag(result,tag)){result.pop()}else{result=addTag(result,tag)}}else if(tag[tag.length-1]!==\"/\"){result=addTag(result,tag)}}return result}function getExpandToDefault(parts){var xmlElements=getListXmlElements(parts);for(var i=0;i<xmlElements.length;i++){var xmlElement=xmlElements[i];if(xmlElement.tag.indexOf(\"<w:tc\")===0){return\"w:tr\"}}return false}function expandOne(part,postparsed,options){var expandTo=part.expandTo||options.expandTo;var index=postparsed.indexOf(part);if(!expandTo){return postparsed}var right=void 0,left=void 0;try{right=DocUtils.getRight(postparsed,expandTo,index);left=DocUtils.getLeft(postparsed,expandTo,index)}catch(rootError){throwRawTagNotInParagraph({part:part,rootError:rootError})}var leftParts=postparsed.slice(left,index);var rightParts=postparsed.slice(index+1,right+1);var inner=options.getInner({index:index,part:part,leftParts:leftParts,rightParts:rightParts,left:left,right:right,postparsed:postparsed});var type=Object.prototype.toString.call(inner);if(type===\"[object Array]\"){inner=DocUtils.concatArrays(inner)}return DocUtils.concatArrays([postparsed.slice(0,left),[inner],postparsed.slice(right+1)])}function expandToOne(postparsed,options){var expandToElements=postparsed.reduce(function(elements,part){if(part.type===\"placeholder\"&&part.module===options.moduleName){elements.push(part)}return elements},[]);expandToElements.forEach(function(part){postparsed=expandOne(part,postparsed,options)});return postparsed}module.exports={expandToOne:expandToOne,getExpandToDefault:getExpandToDefault}},{\"./doc-utils\":4,\"./errors\":6}],21:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var memoize=require(\"./memoize\");function handleRecursiveCase(res){function replacerUnshift(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.shift();var match=pn.array[0]+pn.array[1];pn.array.unshift(match);pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.first=true;res.matches.unshift(pn);res.charactersAdded.unshift(0);return res.charactersAddedCumulative.unshift(0)}if(res.content.indexOf(\"<\")===-1&&res.content.indexOf(\">\")===-1){res.content.replace(/^()([^<>]*)$/,replacerUnshift)}var r=new RegExp(\"^()([^<]+)</(?:\"+res.tagsXmlArrayJoined+\")>\");res.content.replace(r,replacerUnshift);function replacerPush(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.last=true;res.matches.push(pn);res.charactersAdded.push(0);return res.charactersAddedCumulative.push(0)}r=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^>]+)$\");res.content.replace(r,replacerPush);return res}function xmlMatcher(content,tagsXmlArray){var res={};res.content=content;res.tagsXmlArray=tagsXmlArray;res.tagsXmlArrayJoined=res.tagsXmlArray.join(\"|\");var regexp=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^<>]*)</(?:\"+res.tagsXmlArrayJoined+\")>\",\"g\");res.matches=DocUtils.pregMatchAll(regexp,res.content);res.charactersAddedCumulative=res.matches.map(function(){return 0});res.charactersAdded=res.matches.map(function(){return 0});return handleRecursiveCase(res)}var memoized=memoize(xmlMatcher);module.exports=function(content,tagsXmlArray){return DocUtils.cloneDeep(memoized(content,tagsXmlArray))}},{\"./doc-utils\":4,\"./memoize\":9}],22:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var ScopeManager=require(\"./scope-manager\");var xmlMatcher=require(\"./xml-matcher\");var Errors=require(\"./errors\");var Lexer=require(\"./lexer\");var Parser=require(\"./parser.js\");var _render=require(\"./render.js\");function _getFullText(content,tagsXmlArray){var matcher=xmlMatcher(content,tagsXmlArray);var result=matcher.matches.map(function(match){return match.array[2]});return DocUtils.wordToUtf8(DocUtils.convertSpaces(result.join(\"\")))}module.exports=function(){function XmlTemplater(content,options){_classCallCheck(this,XmlTemplater);this.fromJson(options);this.setModules({inspect:{filePath:this.filePath}});this.load(content)}_createClass(XmlTemplater,[{key:\"load\",value:function load(content){if(typeof content!==\"string\"){var err=new Errors.XTInternalError(\"Content must be a string\");err.properties.id=\"xmltemplater_content_must_be_string\";throw err}this.content=content}},{key:\"setTags\",value:function setTags(tags){this.tags=tags!=null?tags:{};this.scopeManager=ScopeManager.createBaseScopeManager({tags:this.tags,parser:this.parser});return this}},{key:\"fromJson\",value:function fromJson(options){this.filePath=options.filePath;this.modules=options.modules;this.fileTypeConfig=options.fileTypeConfig;Object.keys(DocUtils.defaults).map(function(key){this[key]=options[key]!=null?options[key]:DocUtils.defaults[key]},this)}},{key:\"getFullText\",value:function getFullText(){return _getFullText(this.content,this.fileTypeConfig.tagsXmlTextArray)}},{key:\"setModules\",value:function setModules(obj){this.modules.forEach(function(module){module.set(obj)})}},{key:\"parse\",value:function parse(){this.xmllexed=Lexer.xmlparse(this.content,{text:this.fileTypeConfig.tagsXmlTextArray,other:this.fileTypeConfig.tagsXmlLexedArray});this.setModules({inspect:{xmllexed:this.xmllexed}});this.lexed=Lexer.parse(this.xmllexed,this.delimiters);this.setModules({inspect:{lexed:this.lexed}});this.parsed=Parser.parse(this.lexed,this.modules);this.setModules({inspect:{parsed:this.parsed}});this.postparsed=Parser.postparse(this.parsed,this.modules);return this}},{key:\"render\",value:function render(){this.setModules({inspect:{postparsed:this.postparsed}});this.content=_render({compiled:this.postparsed,tags:this.tags,modules:this.modules,parser:this.parser,nullGetter:this.nullGetter,filePath:this.filePath});this.setModules({inspect:{content:this.content}});return this}}]);return XmlTemplater}()},{\"./doc-utils\":4,\"./errors\":6,\"./lexer\":8,\"./parser.js\":17,\"./render.js\":18,\"./scope-manager\":19,\"./xml-matcher\":21}],23:[function(require,module,exports){function DOMParser(options){this.options=options||{locator:{}}}DOMParser.prototype.parseFromString=function(source,mimeType){var options=this.options;var sax=new XMLReader;var domBuilder=options.domBuilder||new DOMHandler;var errorHandler=options.errorHandler;var locator=options.locator;var defaultNSMap=options.xmlns||{};var entityMap={lt:\"<\",gt:\">\",amp:\"&\",quot:'\"',apos:\"'\"};if(locator){domBuilder.setDocumentLocator(locator)}sax.errorHandler=buildErrorHandler(errorHandler,domBuilder,locator);sax.domBuilder=options.domBuilder||domBuilder;if(/\\/x?html?$/.test(mimeType)){entityMap.nbsp=\" \";entityMap.copy=\"©\";defaultNSMap[\"\"]=\"http://www.w3.org/1999/xhtml\"}defaultNSMap.xml=defaultNSMap.xml||\"http://www.w3.org/XML/1998/namespace\";if(source){sax.parse(source,defaultNSMap,entityMap)}else{sax.errorHandler.error(\"invalid doc source\")}return domBuilder.doc};function buildErrorHandler(errorImpl,domBuilder,locator){if(!errorImpl){if(domBuilder instanceof DOMHandler){return domBuilder}errorImpl=domBuilder}var errorHandler={};var isCallback=errorImpl instanceof Function;locator=locator||{};function build(key){var fn=errorImpl[key];if(!fn&&isCallback){fn=errorImpl.length==2?function(msg){errorImpl(key,msg)}:errorImpl}errorHandler[key]=fn&&function(msg){fn(\"[xmldom \"+key+\"]\\t\"+msg+_locator(locator))}||function(){}}build(\"warning\");build(\"error\");build(\"fatalError\");return errorHandler}function DOMHandler(){this.cdata=false}function position(locator,node){node.lineNumber=locator.lineNumber;node.columnNumber=locator.columnNumber}DOMHandler.prototype={startDocument:function(){this.doc=(new DOMImplementation).createDocument(null,null,null);if(this.locator){this.doc.documentURI=this.locator.systemId}},startElement:function(namespaceURI,localName,qName,attrs){var doc=this.doc;var el=doc.createElementNS(namespaceURI,qName||localName);var len=attrs.length;appendElement(this,el);this.currentElement=el;this.locator&&position(this.locator,el);for(var i=0;i<len;i++){var namespaceURI=attrs.getURI(i);var value=attrs.getValue(i);var qName=attrs.getQName(i);var attr=doc.createAttributeNS(namespaceURI,qName);this.locator&&position(attrs.getLocator(i),attr);attr.value=attr.nodeValue=value;el.setAttributeNode(attr)}},endElement:function(namespaceURI,localName,qName){var current=this.currentElement;var tagName=current.tagName;this.currentElement=current.parentNode},startPrefixMapping:function(prefix,uri){},endPrefixMapping:function(prefix){},processingInstruction:function(target,data){var ins=this.doc.createProcessingInstruction(target,data);this.locator&&position(this.locator,ins);appendElement(this,ins)},ignorableWhitespace:function(ch,start,length){},characters:function(chars,start,length){chars=_toString.apply(this,arguments);if(chars){if(this.cdata){var charNode=this.doc.createCDATASection(chars)}else{var charNode=this.doc.createTextNode(chars)}if(this.currentElement){this.currentElement.appendChild(charNode)}else if(/^\\s*$/.test(chars)){this.doc.appendChild(charNode)}this.locator&&position(this.locator,charNode)}},skippedEntity:function(name){},endDocument:function(){this.doc.normalize()},setDocumentLocator:function(locator){if(this.locator=locator){locator.lineNumber=0}},comment:function(chars,start,length){chars=_toString.apply(this,arguments);var comm=this.doc.createComment(chars);this.locator&&position(this.locator,comm);appendElement(this,comm)},startCDATA:function(){this.cdata=true},endCDATA:function(){this.cdata=false},startDTD:function(name,publicId,systemId){var impl=this.doc.implementation;if(impl&&impl.createDocumentType){var dt=impl.createDocumentType(name,publicId,systemId);this.locator&&position(this.locator,dt);appendElement(this,dt)}},warning:function(error){console.warn(\"[xmldom warning]\\t\"+error,_locator(this.locator))},error:function(error){console.error(\"[xmldom error]\\t\"+error,_locator(this.locator))},fatalError:function(error){console.error(\"[xmldom fatalError]\\t\"+error,_locator(this.locator));throw error}};function _locator(l){if(l){return\"\\n@\"+(l.systemId||\"\")+\"#[line:\"+l.lineNumber+\",col:\"+l.columnNumber+\"]\"}}function _toString(chars,start,length){if(typeof chars==\"string\"){return chars.substr(start,length)}else{if(chars.length>=start+length||start){return new java.lang.String(chars,start,length)+\"\"}return chars}}\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){DOMHandler.prototype[key]=function(){return null}});function appendElement(hander,node){if(!hander.currentElement){hander.doc.appendChild(node)}else{hander.currentElement.appendChild(node)}}var XMLReader=require(\"./sax\").XMLReader;var DOMImplementation=exports.DOMImplementation=require(\"./dom\").DOMImplementation;exports.XMLSerializer=require(\"./dom\").XMLSerializer;exports.DOMParser=DOMParser},{\"./dom\":24,\"./sax\":25}],24:[function(require,module,exports){function copy(src,dest){for(var p in src){dest[p]=src[p]}}function _extends(Class,Super){var pt=Class.prototype;if(Object.create){var ppt=Object.create(Super.prototype);pt.__proto__=ppt}if(!(pt instanceof Super)){function t(){}t.prototype=Super.prototype;t=new t;copy(pt,t);Class.prototype=pt=t}if(pt.constructor!=Class){if(typeof Class!=\"function\"){console.error(\"unknow Class:\"+Class)}pt.constructor=Class}}var htmlns=\"http://www.w3.org/1999/xhtml\";var NodeType={};var ELEMENT_NODE=NodeType.ELEMENT_NODE=1;var ATTRIBUTE_NODE=NodeType.ATTRIBUTE_NODE=2;var TEXT_NODE=NodeType.TEXT_NODE=3;var CDATA_SECTION_NODE=NodeType.CDATA_SECTION_NODE=4;var ENTITY_REFERENCE_NODE=NodeType.ENTITY_REFERENCE_NODE=5;var ENTITY_NODE=NodeType.ENTITY_NODE=6;var PROCESSING_INSTRUCTION_NODE=NodeType.PROCESSING_INSTRUCTION_NODE=7;var COMMENT_NODE=NodeType.COMMENT_NODE=8;var DOCUMENT_NODE=NodeType.DOCUMENT_NODE=9;var DOCUMENT_TYPE_NODE=NodeType.DOCUMENT_TYPE_NODE=10;var DOCUMENT_FRAGMENT_NODE=NodeType.DOCUMENT_FRAGMENT_NODE=11;var NOTATION_NODE=NodeType.NOTATION_NODE=12;var ExceptionCode={};var ExceptionMessage={};var INDEX_SIZE_ERR=ExceptionCode.INDEX_SIZE_ERR=(ExceptionMessage[1]=\"Index size error\",1);var DOMSTRING_SIZE_ERR=ExceptionCode.DOMSTRING_SIZE_ERR=(ExceptionMessage[2]=\"DOMString size error\",2);var HIERARCHY_REQUEST_ERR=ExceptionCode.HIERARCHY_REQUEST_ERR=(ExceptionMessage[3]=\"Hierarchy request error\",3);var WRONG_DOCUMENT_ERR=ExceptionCode.WRONG_DOCUMENT_ERR=(ExceptionMessage[4]=\"Wrong document\",4);var INVALID_CHARACTER_ERR=ExceptionCode.INVALID_CHARACTER_ERR=(ExceptionMessage[5]=\"Invalid character\",5);var NO_DATA_ALLOWED_ERR=ExceptionCode.NO_DATA_ALLOWED_ERR=(ExceptionMessage[6]=\"No data allowed\",6);var NO_MODIFICATION_ALLOWED_ERR=ExceptionCode.NO_MODIFICATION_ALLOWED_ERR=(ExceptionMessage[7]=\"No modification allowed\",7);var NOT_FOUND_ERR=ExceptionCode.NOT_FOUND_ERR=(ExceptionMessage[8]=\"Not found\",8);var NOT_SUPPORTED_ERR=ExceptionCode.NOT_SUPPORTED_ERR=(ExceptionMessage[9]=\"Not supported\",9);var INUSE_ATTRIBUTE_ERR=ExceptionCode.INUSE_ATTRIBUTE_ERR=(ExceptionMessage[10]=\"Attribute in use\",10);var INVALID_STATE_ERR=ExceptionCode.INVALID_STATE_ERR=(ExceptionMessage[11]=\"Invalid state\",11);var SYNTAX_ERR=ExceptionCode.SYNTAX_ERR=(ExceptionMessage[12]=\"Syntax error\",12);var INVALID_MODIFICATION_ERR=ExceptionCode.INVALID_MODIFICATION_ERR=(ExceptionMessage[13]=\"Invalid modification\",13);var NAMESPACE_ERR=ExceptionCode.NAMESPACE_ERR=(ExceptionMessage[14]=\"Invalid namespace\",14);var INVALID_ACCESS_ERR=ExceptionCode.INVALID_ACCESS_ERR=(ExceptionMessage[15]=\"Invalid access\",15);function DOMException(code,message){if(message instanceof Error){var error=message}else{error=this;Error.call(this,ExceptionMessage[code]);this.message=ExceptionMessage[code];if(Error.captureStackTrace)Error.captureStackTrace(this,DOMException)}error.code=code;if(message)this.message=this.message+\": \"+message;return error}DOMException.prototype=Error.prototype;copy(ExceptionCode,DOMException);function NodeList(){}NodeList.prototype={length:0,item:function(index){return this[index]||null},toString:function(isHTML,nodeFilter){for(var buf=[],i=0;i<this.length;i++){serializeToString(this[i],buf,isHTML,nodeFilter)}return buf.join(\"\")}};function LiveNodeList(node,refresh){this._node=node;this._refresh=refresh;_updateLiveList(this)}function _updateLiveList(list){var inc=list._node._inc||list._node.ownerDocument._inc;if(list._inc!=inc){var ls=list._refresh(list._node);__set__(list,\"length\",ls.length);copy(ls,list);list._inc=inc}}LiveNodeList.prototype.item=function(i){_updateLiveList(this);return this[i]};_extends(LiveNodeList,NodeList);function NamedNodeMap(){}function _findNodeIndex(list,node){var i=list.length;while(i--){if(list[i]===node){return i}}}function _addNamedNode(el,list,newAttr,oldAttr){if(oldAttr){list[_findNodeIndex(list,oldAttr)]=newAttr}else{list[list.length++]=newAttr}if(el){newAttr.ownerElement=el;var doc=el.ownerDocument;if(doc){oldAttr&&_onRemoveAttribute(doc,el,oldAttr);_onAddAttribute(doc,el,newAttr)}}}function _removeNamedNode(el,list,attr){var i=_findNodeIndex(list,attr);if(i>=0){var lastIndex=list.length-1;while(i<lastIndex){list[i]=list[++i]}list.length=lastIndex;if(el){var doc=el.ownerDocument;if(doc){_onRemoveAttribute(doc,el,attr);attr.ownerElement=null}}}else{throw DOMException(NOT_FOUND_ERR,new Error(el.tagName+\"@\"+attr))}}NamedNodeMap.prototype={length:0,item:NodeList.prototype.item,getNamedItem:function(key){var i=this.length;while(i--){var attr=this[i];if(attr.nodeName==key){return attr}}},setNamedItem:function(attr){var el=attr.ownerElement;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}var oldAttr=this.getNamedItem(attr.nodeName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},setNamedItemNS:function(attr){var el=attr.ownerElement,oldAttr;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}oldAttr=this.getNamedItemNS(attr.namespaceURI,attr.localName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},removeNamedItem:function(key){var attr=this.getNamedItem(key);_removeNamedNode(this._ownerElement,this,attr);return attr},removeNamedItemNS:function(namespaceURI,localName){var attr=this.getNamedItemNS(namespaceURI,localName);_removeNamedNode(this._ownerElement,this,attr);return attr},getNamedItemNS:function(namespaceURI,localName){var i=this.length;while(i--){var node=this[i];if(node.localName==localName&&node.namespaceURI==namespaceURI){return node}}return null}};function DOMImplementation(features){this._features={};if(features){for(var feature in features){this._features=features[feature]}}}DOMImplementation.prototype={hasFeature:function(feature,version){var versions=this._features[feature.toLowerCase()];if(versions&&(!version||version in versions)){\nreturn true}else{return false}},createDocument:function(namespaceURI,qualifiedName,doctype){var doc=new Document;doc.implementation=this;doc.childNodes=new NodeList;doc.doctype=doctype;if(doctype){doc.appendChild(doctype)}if(qualifiedName){var root=doc.createElementNS(namespaceURI,qualifiedName);doc.appendChild(root)}return doc},createDocumentType:function(qualifiedName,publicId,systemId){var node=new DocumentType;node.name=qualifiedName;node.nodeName=qualifiedName;node.publicId=publicId;node.systemId=systemId;return node}};function Node(){}Node.prototype={firstChild:null,lastChild:null,previousSibling:null,nextSibling:null,attributes:null,parentNode:null,childNodes:null,ownerDocument:null,nodeValue:null,namespaceURI:null,prefix:null,localName:null,insertBefore:function(newChild,refChild){return _insertBefore(this,newChild,refChild)},replaceChild:function(newChild,oldChild){this.insertBefore(newChild,oldChild);if(oldChild){this.removeChild(oldChild)}},removeChild:function(oldChild){return _removeChild(this,oldChild)},appendChild:function(newChild){return this.insertBefore(newChild,null)},hasChildNodes:function(){return this.firstChild!=null},cloneNode:function(deep){return cloneNode(this.ownerDocument||this,this,deep)},normalize:function(){var child=this.firstChild;while(child){var next=child.nextSibling;if(next&&next.nodeType==TEXT_NODE&&child.nodeType==TEXT_NODE){this.removeChild(next);child.appendData(next.data)}else{child.normalize();child=next}}},isSupported:function(feature,version){return this.ownerDocument.implementation.hasFeature(feature,version)},hasAttributes:function(){return this.attributes.length>0},lookupPrefix:function(namespaceURI){var el=this;while(el){var map=el._nsMap;if(map){for(var n in map){if(map[n]==namespaceURI){return n}}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},lookupNamespaceURI:function(prefix){var el=this;while(el){var map=el._nsMap;if(map){if(prefix in map){return map[prefix]}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},isDefaultNamespace:function(namespaceURI){var prefix=this.lookupPrefix(namespaceURI);return prefix==null}};function _xmlEncoder(c){return c==\"<\"&&\"&lt;\"||c==\">\"&&\"&gt;\"||c==\"&\"&&\"&amp;\"||c=='\"'&&\"&quot;\"||\"&#\"+c.charCodeAt()+\";\"}copy(NodeType,Node);copy(NodeType,Node.prototype);function _visitNode(node,callback){if(callback(node)){return true}if(node=node.firstChild){do{if(_visitNode(node,callback)){return true}}while(node=node.nextSibling)}}function Document(){}function _onAddAttribute(doc,el,newAttr){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){el._nsMap[newAttr.prefix?newAttr.localName:\"\"]=newAttr.value}}function _onRemoveAttribute(doc,el,newAttr,remove){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){delete el._nsMap[newAttr.prefix?newAttr.localName:\"\"]}}function _onUpdateChild(doc,el,newChild){if(doc&&doc._inc){doc._inc++;var cs=el.childNodes;if(newChild){cs[cs.length++]=newChild}else{var child=el.firstChild;var i=0;while(child){cs[i++]=child;child=child.nextSibling}cs.length=i}}}function _removeChild(parentNode,child){var previous=child.previousSibling;var next=child.nextSibling;if(previous){previous.nextSibling=next}else{parentNode.firstChild=next}if(next){next.previousSibling=previous}else{parentNode.lastChild=previous}_onUpdateChild(parentNode.ownerDocument,parentNode);return child}function _insertBefore(parentNode,newChild,nextChild){var cp=newChild.parentNode;if(cp){cp.removeChild(newChild)}if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){var newFirst=newChild.firstChild;if(newFirst==null){return newChild}var newLast=newChild.lastChild}else{newFirst=newLast=newChild}var pre=nextChild?nextChild.previousSibling:parentNode.lastChild;newFirst.previousSibling=pre;newLast.nextSibling=nextChild;if(pre){pre.nextSibling=newFirst}else{parentNode.firstChild=newFirst}if(nextChild==null){parentNode.lastChild=newLast}else{nextChild.previousSibling=newLast}do{newFirst.parentNode=parentNode}while(newFirst!==newLast&&(newFirst=newFirst.nextSibling));_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){newChild.firstChild=newChild.lastChild=null}return newChild}function _appendSingleChild(parentNode,newChild){var cp=newChild.parentNode;if(cp){var pre=parentNode.lastChild;cp.removeChild(newChild);var pre=parentNode.lastChild}var pre=parentNode.lastChild;newChild.parentNode=parentNode;newChild.previousSibling=pre;newChild.nextSibling=null;if(pre){pre.nextSibling=newChild}else{parentNode.firstChild=newChild}parentNode.lastChild=newChild;_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);return newChild}Document.prototype={nodeName:\"#document\",nodeType:DOCUMENT_NODE,doctype:null,documentElement:null,_inc:1,insertBefore:function(newChild,refChild){if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){var child=newChild.firstChild;while(child){var next=child.nextSibling;this.insertBefore(child,refChild);child=next}return newChild}if(this.documentElement==null&&newChild.nodeType==ELEMENT_NODE){this.documentElement=newChild}return _insertBefore(this,newChild,refChild),newChild.ownerDocument=this,newChild},removeChild:function(oldChild){if(this.documentElement==oldChild){this.documentElement=null}return _removeChild(this,oldChild)},importNode:function(importedNode,deep){return importNode(this,importedNode,deep)},getElementById:function(id){var rtv=null;_visitNode(this.documentElement,function(node){if(node.nodeType==ELEMENT_NODE){if(node.getAttribute(\"id\")==id){rtv=node;return true}}});return rtv},createElement:function(tagName){var node=new Element;node.ownerDocument=this;node.nodeName=tagName;node.tagName=tagName;node.childNodes=new NodeList;var attrs=node.attributes=new NamedNodeMap;attrs._ownerElement=node;return node},createDocumentFragment:function(){var node=new DocumentFragment;node.ownerDocument=this;node.childNodes=new NodeList;return node},createTextNode:function(data){var node=new Text;node.ownerDocument=this;node.appendData(data);return node},createComment:function(data){var node=new Comment;node.ownerDocument=this;node.appendData(data);return node},createCDATASection:function(data){var node=new CDATASection;node.ownerDocument=this;node.appendData(data);return node},createProcessingInstruction:function(target,data){var node=new ProcessingInstruction;node.ownerDocument=this;node.tagName=node.target=target;node.nodeValue=node.data=data;return node},createAttribute:function(name){var node=new Attr;node.ownerDocument=this;node.name=name;node.nodeName=name;node.localName=name;node.specified=true;return node},createEntityReference:function(name){var node=new EntityReference;node.ownerDocument=this;node.nodeName=name;return node},createElementNS:function(namespaceURI,qualifiedName){var node=new Element;var pl=qualifiedName.split(\":\");var attrs=node.attributes=new NamedNodeMap;node.childNodes=new NodeList;node.ownerDocument=this;node.nodeName=qualifiedName;node.tagName=qualifiedName;node.namespaceURI=namespaceURI;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}attrs._ownerElement=node;return node},createAttributeNS:function(namespaceURI,qualifiedName){var node=new Attr;var pl=qualifiedName.split(\":\");node.ownerDocument=this;node.nodeName=qualifiedName;node.name=qualifiedName;node.namespaceURI=namespaceURI;node.specified=true;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}return node}};_extends(Document,Node);function Element(){this._nsMap={}}Element.prototype={nodeType:ELEMENT_NODE,hasAttribute:function(name){return this.getAttributeNode(name)!=null},getAttribute:function(name){var attr=this.getAttributeNode(name);return attr&&attr.value||\"\"},getAttributeNode:function(name){return this.attributes.getNamedItem(name)},setAttribute:function(name,value){var attr=this.ownerDocument.createAttribute(name);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},removeAttribute:function(name){var attr=this.getAttributeNode(name);attr&&this.removeAttributeNode(attr)},appendChild:function(newChild){if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){return this.insertBefore(newChild,null)}else{return _appendSingleChild(this,newChild)}},setAttributeNode:function(newAttr){return this.attributes.setNamedItem(newAttr)},setAttributeNodeNS:function(newAttr){return this.attributes.setNamedItemNS(newAttr)},removeAttributeNode:function(oldAttr){return this.attributes.removeNamedItem(oldAttr.nodeName)},removeAttributeNS:function(namespaceURI,localName){var old=this.getAttributeNodeNS(namespaceURI,localName);old&&this.removeAttributeNode(old)},hasAttributeNS:function(namespaceURI,localName){return this.getAttributeNodeNS(namespaceURI,localName)!=null},getAttributeNS:function(namespaceURI,localName){var attr=this.getAttributeNodeNS(namespaceURI,localName);return attr&&attr.value||\"\"},setAttributeNS:function(namespaceURI,qualifiedName,value){var attr=this.ownerDocument.createAttributeNS(namespaceURI,qualifiedName);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},getAttributeNodeNS:function(namespaceURI,localName){return this.attributes.getNamedItemNS(namespaceURI,localName)},getElementsByTagName:function(tagName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType==ELEMENT_NODE&&(tagName===\"*\"||node.tagName==tagName)){ls.push(node)}});return ls})},getElementsByTagNameNS:function(namespaceURI,localName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType===ELEMENT_NODE&&(namespaceURI===\"*\"||node.namespaceURI===namespaceURI)&&(localName===\"*\"||node.localName==localName)){ls.push(node)}});return ls})}};Document.prototype.getElementsByTagName=Element.prototype.getElementsByTagName;Document.prototype.getElementsByTagNameNS=Element.prototype.getElementsByTagNameNS;_extends(Element,Node);function Attr(){}Attr.prototype.nodeType=ATTRIBUTE_NODE;_extends(Attr,Node);function CharacterData(){}CharacterData.prototype={data:\"\",substringData:function(offset,count){return this.data.substring(offset,offset+count)},appendData:function(text){text=this.data+text;this.nodeValue=this.data=text;this.length=text.length},insertData:function(offset,text){this.replaceData(offset,0,text)},appendChild:function(newChild){throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])},deleteData:function(offset,count){this.replaceData(offset,count,\"\")},replaceData:function(offset,count,text){var start=this.data.substring(0,offset);var end=this.data.substring(offset+count);text=start+text+end;this.nodeValue=this.data=text;this.length=text.length}};_extends(CharacterData,Node);function Text(){}Text.prototype={nodeName:\"#text\",nodeType:TEXT_NODE,splitText:function(offset){var text=this.data;var newText=text.substring(offset);text=text.substring(0,offset);this.data=this.nodeValue=text;this.length=text.length;var newNode=this.ownerDocument.createTextNode(newText);if(this.parentNode){this.parentNode.insertBefore(newNode,this.nextSibling)}return newNode}};_extends(Text,CharacterData);function Comment(){}Comment.prototype={nodeName:\"#comment\",nodeType:COMMENT_NODE};_extends(Comment,CharacterData);function CDATASection(){}CDATASection.prototype={nodeName:\"#cdata-section\",nodeType:CDATA_SECTION_NODE};_extends(CDATASection,CharacterData);function DocumentType(){}DocumentType.prototype.nodeType=DOCUMENT_TYPE_NODE;_extends(DocumentType,Node);function Notation(){}Notation.prototype.nodeType=NOTATION_NODE;_extends(Notation,Node);function Entity(){}Entity.prototype.nodeType=ENTITY_NODE;_extends(Entity,Node);function EntityReference(){}EntityReference.prototype.nodeType=ENTITY_REFERENCE_NODE;_extends(EntityReference,Node);function DocumentFragment(){}DocumentFragment.prototype.nodeName=\"#document-fragment\";DocumentFragment.prototype.nodeType=DOCUMENT_FRAGMENT_NODE;_extends(DocumentFragment,Node);function ProcessingInstruction(){}ProcessingInstruction.prototype.nodeType=PROCESSING_INSTRUCTION_NODE;_extends(ProcessingInstruction,Node);function XMLSerializer(){}XMLSerializer.prototype.serializeToString=function(node,isHtml,nodeFilter){return nodeSerializeToString.call(node,isHtml,nodeFilter)};Node.prototype.toString=nodeSerializeToString;function nodeSerializeToString(isHtml,nodeFilter){var buf=[];var refNode=this.nodeType==9?this.documentElement:this;var prefix=refNode.prefix;var uri=refNode.namespaceURI;if(uri&&prefix==null){var prefix=refNode.lookupPrefix(uri);if(prefix==null){var visibleNamespaces=[{namespace:uri,prefix:null}]}}serializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);return buf.join(\"\")}function needNamespaceDefine(node,isHTML,visibleNamespaces){var prefix=node.prefix||\"\";var uri=node.namespaceURI;if(!prefix&&!uri){return false}if(prefix===\"xml\"&&uri===\"http://www.w3.org/XML/1998/namespace\"||uri==\"http://www.w3.org/2000/xmlns/\"){return false}var i=visibleNamespaces.length;while(i--){var ns=visibleNamespaces[i];if(ns.prefix==prefix){return ns.namespace!=uri}}return true}function serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){if(nodeFilter){node=nodeFilter(node);if(node){if(typeof node==\"string\"){buf.push(node);return}}else{return}}switch(node.nodeType){case ELEMENT_NODE:if(!visibleNamespaces)visibleNamespaces=[];var startVisibleNamespaces=visibleNamespaces.length;var attrs=node.attributes;var len=attrs.length;var child=node.firstChild;var nodeName=node.tagName;isHTML=htmlns===node.namespaceURI||isHTML;buf.push(\"<\",nodeName);for(var i=0;i<len;i++){var attr=attrs.item(i);if(attr.prefix==\"xmlns\"){visibleNamespaces.push({prefix:attr.localName,namespace:attr.value})}else if(attr.nodeName==\"xmlns\"){visibleNamespaces.push({prefix:\"\",namespace:attr.value})}}for(var i=0;i<len;i++){var attr=attrs.item(i);if(needNamespaceDefine(attr,isHTML,visibleNamespaces)){var prefix=attr.prefix||\"\";var uri=attr.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}serializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces)}if(needNamespaceDefine(node,isHTML,visibleNamespaces)){var prefix=node.prefix||\"\";var uri=node.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}if(child||isHTML&&!/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){buf.push(\">\");if(isHTML&&/^script$/i.test(nodeName)){while(child){if(child.data){buf.push(child.data)}else{serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces)}child=child.nextSibling}}else{while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}}buf.push(\"</\",nodeName,\">\")}else{buf.push(\"/>\")}return;case DOCUMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var child=node.firstChild;while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}return;case ATTRIBUTE_NODE:return buf.push(\" \",node.name,'=\"',node.value.replace(/[<&\"]/g,_xmlEncoder),'\"');case TEXT_NODE:return buf.push(node.data.replace(/[<&]/g,_xmlEncoder));case CDATA_SECTION_NODE:return buf.push(\"<![CDATA[\",node.data,\"]]>\");case COMMENT_NODE:return buf.push(\"<!--\",node.data,\"-->\");case DOCUMENT_TYPE_NODE:var pubid=node.publicId;var sysid=node.systemId;buf.push(\"<!DOCTYPE \",node.name);if(pubid){buf.push(' PUBLIC \"',pubid);if(sysid&&sysid!=\".\"){buf.push('\" \"',sysid)}buf.push('\">')}else if(sysid&&sysid!=\".\"){buf.push(' SYSTEM \"',sysid,'\">')}else{var sub=node.internalSubset;if(sub){buf.push(\" [\",sub,\"]\")}buf.push(\">\")}return;case PROCESSING_INSTRUCTION_NODE:return buf.push(\"<?\",node.target,\" \",node.data,\"?>\");case ENTITY_REFERENCE_NODE:return buf.push(\"&\",node.nodeName,\";\");default:buf.push(\"??\",node.nodeName)}}function importNode(doc,node,deep){var node2;switch(node.nodeType){case ELEMENT_NODE:node2=node.cloneNode(false);node2.ownerDocument=doc;case DOCUMENT_FRAGMENT_NODE:break;case ATTRIBUTE_NODE:deep=true;break}if(!node2){node2=node.cloneNode(false)}node2.ownerDocument=doc;node2.parentNode=null;if(deep){var child=node.firstChild;while(child){node2.appendChild(importNode(doc,child,deep));child=child.nextSibling}}return node2}function cloneNode(doc,node,deep){var node2=new node.constructor;for(var n in node){var v=node[n];if(typeof v!=\"object\"){if(v!=node2[n]){node2[n]=v}}}if(node.childNodes){node2.childNodes=new NodeList}node2.ownerDocument=doc;switch(node2.nodeType){case ELEMENT_NODE:var attrs=node.attributes;var attrs2=node2.attributes=new NamedNodeMap;var len=attrs.length;attrs2._ownerElement=node2;for(var i=0;i<len;i++){node2.setAttributeNode(cloneNode(doc,attrs.item(i),true))}break;case ATTRIBUTE_NODE:deep=true}if(deep){var child=node.firstChild;while(child){node2.appendChild(cloneNode(doc,child,deep));child=child.nextSibling}}return node2}function __set__(object,key,value){object[key]=value}try{if(Object.defineProperty){Object.defineProperty(LiveNodeList.prototype,\"length\",{get:function(){_updateLiveList(this);return this.$$length}});Object.defineProperty(Node.prototype,\"textContent\",{get:function(){return getTextContent(this)},set:function(data){switch(this.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:while(this.firstChild){this.removeChild(this.firstChild)}if(data||String(data)){this.appendChild(this.ownerDocument.createTextNode(data))}break;default:this.data=data;this.value=data;this.nodeValue=data}}});function getTextContent(node){switch(node.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var buf=[];node=node.firstChild;while(node){if(node.nodeType!==7&&node.nodeType!==8){buf.push(getTextContent(node))}node=node.nextSibling}return buf.join(\"\");default:return node.nodeValue}}__set__=function(object,key,value){object[\"$$\"+key]=value}}}catch(e){}exports.DOMImplementation=DOMImplementation;exports.XMLSerializer=XMLSerializer},{}],25:[function(require,module,exports){var nameStartChar=/[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;var nameChar=new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");var tagNamePattern=new RegExp(\"^\"+nameStartChar.source+nameChar.source+\"*(?::\"+nameStartChar.source+nameChar.source+\"*)?$\");var S_TAG=0;var S_ATTR=1;var S_ATTR_SPACE=2;var S_EQ=3;var S_ATTR_NOQUOT_VALUE=4;var S_ATTR_END=5;var S_TAG_SPACE=6;var S_TAG_CLOSE=7;function XMLReader(){}XMLReader.prototype={parse:function(source,defaultNSMap,entityMap){var domBuilder=this.domBuilder;domBuilder.startDocument();_copy(defaultNSMap,defaultNSMap={});parse(source,defaultNSMap,entityMap,domBuilder,this.errorHandler);domBuilder.endDocument()}};function parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){function fixedFromCharCode(code){if(code>65535){code-=65536;var surrogate1=55296+(code>>10),surrogate2=56320+(code&1023);return String.fromCharCode(surrogate1,surrogate2)}else{return String.fromCharCode(code)}}function entityReplacer(a){var k=a.slice(1,-1);if(k in entityMap){return entityMap[k]}else if(k.charAt(0)===\"#\"){return fixedFromCharCode(parseInt(k.substr(1).replace(\"x\",\"0x\")))}else{errorHandler.error(\"entity not found:\"+a);return a}}function appendText(end){if(end>start){var xt=source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);locator&&position(start);domBuilder.characters(xt,0,end-start);start=end}}function position(p,m){while(p>=lineEnd&&(m=linePattern.exec(source))){lineStart=m.index;lineEnd=lineStart+m[0].length;locator.lineNumber++}locator.columnNumber=p-lineStart+1}var lineStart=0;var lineEnd=0;var linePattern=/.*(?:\\r\\n?|\\n)|.*$/g;var locator=domBuilder.locator;var parseStack=[{currentNSMap:defaultNSMapCopy}];var closeMap={};var start=0;while(true){try{var tagStart=source.indexOf(\"<\",start);if(tagStart<0){if(!source.substr(start).match(/^\\s*$/)){var doc=domBuilder.doc;var text=doc.createTextNode(source.substr(start));doc.appendChild(text);domBuilder.currentElement=text}return}if(tagStart>start){appendText(tagStart)}switch(source.charAt(tagStart+1)){case\"/\":var end=source.indexOf(\">\",tagStart+3);var tagName=source.substring(tagStart+2,end);var config=parseStack.pop();if(end<0){tagName=source.substring(tagStart+2).replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" is not complete:\"+config.tagName);end=tagStart+1+tagName.length}else if(tagName.match(/\\s</)){tagName=tagName.replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" maybe not complete\");end=tagStart+1+tagName.length}var localNSMap=config.localNSMap;var endMatch=config.tagName==tagName;var endIgnoreCaseMach=endMatch||config.tagName&&config.tagName.toLowerCase()==tagName.toLowerCase();if(endIgnoreCaseMach){domBuilder.endElement(config.uri,config.localName,tagName);if(localNSMap){for(var prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}if(!endMatch){errorHandler.fatalError(\"end tag name: \"+tagName+\" is not match the current start tagName:\"+config.tagName)}}else{parseStack.push(config)}end++;break;case\"?\":locator&&position(tagStart);end=parseInstruction(source,tagStart,domBuilder);break;case\"!\":locator&&position(tagStart);end=parseDCC(source,tagStart,domBuilder,errorHandler);break;default:locator&&position(tagStart);var el=new ElementAttributes;var currentNSMap=parseStack[parseStack.length-1].currentNSMap;var end=parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);var len=el.length;if(!el.closed&&fixSelfClosed(source,end,el.tagName,closeMap)){el.closed=true;if(!entityMap.nbsp){errorHandler.warning(\"unclosed xml attribute\")}}if(locator&&len){var locator2=copyLocator(locator,{});for(var i=0;i<len;i++){var a=el[i];position(a.offset);a.locator=copyLocator(locator,{})}domBuilder.locator=locator2;if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}domBuilder.locator=locator}else{if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}}if(el.uri===\"http://www.w3.org/1999/xhtml\"&&!el.closed){end=parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)}else{end++}}}catch(e){errorHandler.error(\"element parse error: \"+e);end=-1}if(end>start){start=end}else{appendText(Math.max(tagStart,start)+1)}}}function copyLocator(f,t){t.lineNumber=f.lineNumber;t.columnNumber=f.columnNumber;return t}function parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){var attrName;var value;var p=++start;var s=S_TAG;while(true){var c=source.charAt(p);switch(c){case\"=\":if(s===S_ATTR){attrName=source.slice(start,p);s=S_EQ}else if(s===S_ATTR_SPACE){s=S_EQ}else{throw new Error(\"attribute equal must after attrName\")}break;case\"'\":case'\"':if(s===S_EQ||s===S_ATTR){if(s===S_ATTR){errorHandler.warning('attribute value must after \"=\"');attrName=source.slice(start,p)}start=p+1;p=source.indexOf(c,start);if(p>0){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start-1);s=S_ATTR_END}else{throw new Error(\"attribute value no end '\"+c+\"' match\")}}else if(s==S_ATTR_NOQUOT_VALUE){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start);errorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+\")!!\");start=p+1;s=S_ATTR_END}else{throw new Error('attribute value must after \"=\"')}break;case\"/\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:s=S_TAG_CLOSE;el.closed=true;case S_ATTR_NOQUOT_VALUE:case S_ATTR:case S_ATTR_SPACE:break;default:throw new Error(\"attribute invalid close char('/')\")}break;case\"\":errorHandler.error(\"unexpected end of input\");if(s==S_TAG){el.setTagName(source.slice(start,p))}return p;case\">\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:break;case S_ATTR_NOQUOT_VALUE:case S_ATTR:value=source.slice(start,p);if(value.slice(-1)===\"/\"){el.closed=true;value=value.slice(0,-1)}case S_ATTR_SPACE:if(s===S_ATTR_SPACE){value=attrName}if(s==S_ATTR_NOQUOT_VALUE){errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value.replace(/&#?\\w+;/g,entityReplacer),start)}else{if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!value.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')}el.add(value,value,start)}break;case S_EQ:throw new Error(\"attribute value missed!!\")}return p;case\"\":c=\" \";default:if(c<=\" \"){switch(s){case S_TAG:el.setTagName(source.slice(start,p));s=S_TAG_SPACE;break;case S_ATTR:attrName=source.slice(start,p);s=S_ATTR_SPACE;break;case S_ATTR_NOQUOT_VALUE:var value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value,start);case S_ATTR_END:s=S_TAG_SPACE;break}}else{switch(s){case S_ATTR_SPACE:var tagName=el.tagName;if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!attrName.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')}el.add(attrName,attrName,start);start=p;s=S_ATTR;break;case S_ATTR_END:errorHandler.warning('attribute space is required\"'+attrName+'\"!!');case S_TAG_SPACE:s=S_ATTR;start=p;break;case S_EQ:s=S_ATTR_NOQUOT_VALUE;start=p;break;case S_TAG_CLOSE:throw new Error(\"elements closed character '/' and '>' must be connected to\")}}}p++}}function appendElement(el,domBuilder,currentNSMap){var tagName=el.tagName;var localNSMap=null;var i=el.length;while(i--){var a=el[i];var qName=a.qName;var value=a.value;var nsp=qName.indexOf(\":\");if(nsp>0){var prefix=a.prefix=qName.slice(0,nsp);var localName=qName.slice(nsp+1);var nsPrefix=prefix===\"xmlns\"&&localName}else{localName=qName;prefix=null;nsPrefix=qName===\"xmlns\"&&\"\"}a.localName=localName;if(nsPrefix!==false){if(localNSMap==null){localNSMap={};_copy(currentNSMap,currentNSMap={})}currentNSMap[nsPrefix]=localNSMap[nsPrefix]=value;a.uri=\"http://www.w3.org/2000/xmlns/\";domBuilder.startPrefixMapping(nsPrefix,value)}}var i=el.length;while(i--){a=el[i];var prefix=a.prefix;if(prefix){if(prefix===\"xml\"){a.uri=\"http://www.w3.org/XML/1998/namespace\"}if(prefix!==\"xmlns\"){a.uri=currentNSMap[prefix||\"\"]}}}var nsp=tagName.indexOf(\":\");if(nsp>0){prefix=el.prefix=tagName.slice(0,nsp);localName=el.localName=tagName.slice(nsp+1)}else{prefix=null;localName=el.localName=tagName}var ns=el.uri=currentNSMap[prefix||\"\"];domBuilder.startElement(ns,localName,tagName,el);if(el.closed){domBuilder.endElement(ns,localName,tagName);if(localNSMap){for(prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}}else{el.currentNSMap=currentNSMap;el.localNSMap=localNSMap;return true}}function parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){if(/^(?:script|textarea)$/i.test(tagName)){var elEndStart=source.indexOf(\"</\"+tagName+\">\",elStartEnd);var text=source.substring(elStartEnd+1,elEndStart);if(/[&<]/.test(text)){if(/^script$/i.test(tagName)){domBuilder.characters(text,0,text.length);return elEndStart}text=text.replace(/&#?\\w+;/g,entityReplacer);domBuilder.characters(text,0,text.length);return elEndStart}}return elStartEnd+1}function fixSelfClosed(source,elStartEnd,tagName,closeMap){var pos=closeMap[tagName];if(pos==null){pos=source.lastIndexOf(\"</\"+tagName+\">\");if(pos<elStartEnd){pos=source.lastIndexOf(\"</\"+tagName)}closeMap[tagName]=pos}return pos<elStartEnd}function _copy(source,target){for(var n in source){target[n]=source[n]}}function parseDCC(source,start,domBuilder,errorHandler){var next=source.charAt(start+2);switch(next){case\"-\":if(source.charAt(start+3)===\"-\"){var end=source.indexOf(\"-->\",start+4);if(end>start){domBuilder.comment(source,start+4,end-start-4);return end+3}else{errorHandler.error(\"Unclosed comment\");return-1}}else{return-1}default:if(source.substr(start+3,6)==\"CDATA[\"){var end=source.indexOf(\"]]>\",start+9);domBuilder.startCDATA();domBuilder.characters(source,start+9,end-start-9);domBuilder.endCDATA();return end+3}var matchs=split(source,start);var len=matchs.length;if(len>1&&/!doctype/i.test(matchs[0][0])){var name=matchs[1][0];var pubid=len>3&&/^public$/i.test(matchs[2][0])&&matchs[3][0];var sysid=len>4&&matchs[4][0];var lastMatch=matchs[len-1];domBuilder.startDTD(name,pubid&&pubid.replace(/^(['\"])(.*?)\\1$/,\"$2\"),sysid&&sysid.replace(/^(['\"])(.*?)\\1$/,\"$2\"));domBuilder.endDTD();return lastMatch.index+lastMatch[0].length}}return-1}function parseInstruction(source,start,domBuilder){var end=source.indexOf(\"?>\",start);if(end){var match=source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);if(match){var len=match[0].length;domBuilder.processingInstruction(match[1],match[2]);return end+2}else{return-1}}return-1}function ElementAttributes(source){}ElementAttributes.prototype={setTagName:function(tagName){if(!tagNamePattern.test(tagName)){throw new Error(\"invalid tagName:\"+tagName)}this.tagName=tagName},add:function(qName,value,offset){if(!tagNamePattern.test(qName)){throw new Error(\"invalid attribute:\"+qName)}this[this.length++]={qName:qName,value:value,offset:offset}},length:0,getLocalName:function(i){return this[i].localName},getLocator:function(i){return this[i].locator},getQName:function(i){return this[i].qName},getURI:function(i){return this[i].uri},getValue:function(i){return this[i].value}};function _set_proto_(thiz,parent){thiz.__proto__=parent;return thiz}if(!(_set_proto_({},_set_proto_.prototype)instanceof _set_proto_)){_set_proto_=function(thiz,parent){function p(){}p.prototype=parent;p=new p;for(parent in thiz){p[parent]=thiz[parent]}return p}}function split(source,start){var match;var buf=[];var reg=/'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;reg.lastIndex=start;reg.exec(source);while(match=reg.exec(source)){buf.push(match);if(match[1])return buf}}exports.XMLReader=XMLReader},{}],\"/src/js/index.js\":[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var templates=require(\"./templates\");var DocUtils=require(\"docxtemplater\").DocUtils;var DOMParser=require(\"xmldom\").DOMParser;function isNaN(number){return!(number===number)}var ImgManager=require(\"./imgManager\");var moduleName=\"open-xml-templating/docxtemplater-image-module\";function getInnerDocx(_ref){var part=_ref.part;return part}function getInnerPptx(_ref2){var part=_ref2.part,left=_ref2.left,right=_ref2.right,postparsed=_ref2.postparsed;var xmlString=postparsed.slice(left+1,right).reduce(function(concat,item){return concat+item.value},\"\");var xmlDoc=(new DOMParser).parseFromString(\"<xml>\"+xmlString+\"</xml>\");var offset=xmlDoc.getElementsByTagName(\"a:off\");var ext=xmlDoc.getElementsByTagName(\"a:ext\");part.ext={cx:parseInt(ext[0].getAttribute(\"cx\"),10),cy:parseInt(ext[0].getAttribute(\"cy\"),10)};part.offset={x:parseInt(offset[0].getAttribute(\"x\"),10),y:parseInt(offset[0].getAttribute(\"y\"),10)};return part}var ImageModule=function(){function ImageModule(options){_classCallCheck(this,ImageModule);this.name=\"ImageModule\";this.options=options||{};this.imgManagers={};if(this.options.centered==null){this.options.centered=false}if(this.options.getImage==null){throw new Error(\"You should pass getImage\")}if(this.options.getSize==null){throw new Error(\"You should pass getSize\")}this.imageNumber=1}_createClass(ImageModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){\nvar relsFiles=docxtemplater.zip.file(/\\.xml\\.rels/).concat(docxtemplater.zip.file(/\\[Content_Types\\].xml/)).map(function(file){return file.name});this.fileTypeConfig=docxtemplater.fileTypeConfig;this.fileType=docxtemplater.fileType;this.zip=docxtemplater.zip;options.xmlFileNames=options.xmlFileNames.concat(relsFiles);return options}},{key:\"set\",value:function set(options){if(options.zip){this.zip=options.zip}if(options.xmlDocuments){this.xmlDocuments=options.xmlDocuments}}},{key:\"parse\",value:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent.substring(0,2)===\"%%\"){return{type:type,value:placeHolderContent.substr(2),module:module,centered:true}}if(placeHolderContent.substring(0,1)===\"%\"){return{type:type,value:placeHolderContent.substr(1),module:module,centered:false}}return null}},{key:\"postparse\",value:function postparse(parsed){var expandTo=void 0;var getInner=void 0;if(this.fileType===\"pptx\"){expandTo=\"p:sp\";getInner=getInnerPptx}else{expandTo=this.options.centered?\"w:p\":\"w:t\";getInner=getInnerDocx}return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:expandTo})}},{key:\"render\",value:function render(part,options){this.imgManagers[options.filePath]=this.imgManagers[options.filePath]||new ImgManager(this.zip,options.filePath,this.xmlDocuments,this.fileType);var imgManager=this.imgManagers[options.filePath];if(!part.type===\"placeholder\"||part.module!==moduleName){return null}try{var tagValue=options.scopeManager.getValue(part.value);if(!tagValue){throw new Error(\"tagValue is empty\")}var imgBuffer=this.options.getImage(tagValue,part.value);var rId=imgManager.addImageRels(this.getNextImageName(),imgBuffer);var sizePixel=this.options.getSize(imgBuffer,tagValue,part.value);return this.getRenderedPart(part,rId,sizePixel)}catch(e){return{value:this.fileTypeConfig.tagTextXml}}}},{key:\"getRenderedPart\",value:function getRenderedPart(part,rId,sizePixel){if(isNaN(rId)){throw new Error(\"rId is NaN, aborting\")}var size=[DocUtils.convertPixelsToEmus(sizePixel[0]),DocUtils.convertPixelsToEmus(sizePixel[1])];var centered=this.options.centered||part.centered;var newText=void 0;if(this.fileType===\"pptx\"){newText=this.getRenderedPartPptx(part,rId,size,centered)}else{newText=this.getRenderedPartDocx(rId,size,centered)}return{value:newText}}},{key:\"getRenderedPartPptx\",value:function getRenderedPartPptx(part,rId,size,centered){var offset={x:part.offset.x,y:part.offset.y};var cellCX=part.ext.cx;var cellCY=part.ext.cy;var imgW=size[0];var imgH=size[1];if(centered){offset.x+=cellCX/2-imgW/2;offset.y+=cellCY/2-imgH/2}return templates.getPptxImageXml(rId,[imgW,imgH],offset)}},{key:\"getRenderedPartDocx\",value:function getRenderedPartDocx(rId,size,centered){return centered?templates.getImageXmlCentered(rId,size):templates.getImageXml(rId,size)}},{key:\"getNextImageName\",value:function getNextImageName(){var name=\"image_generated_\"+this.imageNumber+\".png\";this.imageNumber++;return name}}]);return ImageModule}();module.exports=ImageModule},{\"./imgManager\":2,\"./templates\":3,docxtemplater:5,xmldom:23}]},{},[])(\"/src/js/index.js\")});","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Docxtemplater=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){\"use strict\";function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}var memoize=require(\"./memoize\");var DOMParser=require(\"xmldom\").DOMParser;var XMLSerializer=require(\"xmldom\").XMLSerializer;var Errors=require(\"./errors\");var DocUtils={};function parser(tag){return _defineProperty({},\"get\",function get(scope){if(tag===\".\"){return scope}return scope[tag]})}DocUtils.defaults={nullGetter:function nullGetter(part){if(!part.module){return\"undefined\"}if(part.module===\"rawxml\"){return\"\"}return\"\"},parser:memoize(parser),delimiters:{start:\"{\",end:\"}\"}};DocUtils.mergeObjects=function(){var resObj={};var obj=void 0,keys=void 0;for(var i=0;i<arguments.length;i+=1){obj=arguments[i];keys=Object.keys(obj);for(var j=0;j<keys.length;j+=1){resObj[keys[j]]=obj[keys[j]]}}return resObj};DocUtils.xml2str=function(xmlNode){var a=new XMLSerializer;return a.serializeToString(xmlNode)};DocUtils.decodeUtf8=function(s){try{if(s===undefined){return undefined}return decodeURIComponent(escape(DocUtils.convertSpaces(s)))}catch(e){var err=new Error(\"End\");err.properties.data=s;err.properties.explanation=\"Could not decode string to UTF8\";throw err}};DocUtils.encodeUtf8=function(s){return unescape(encodeURIComponent(s))};DocUtils.str2xml=function(str,errorHandler){var parser=new DOMParser({errorHandler:errorHandler});return parser.parseFromString(str,\"text/xml\")};DocUtils.charMap={\"&\":\"&amp;\",\"'\":\"&apos;\",\"<\":\"&lt;\",\">\":\"&gt;\"};var regexStripRegexp=/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g;DocUtils.escapeRegExp=function(str){return str.replace(regexStripRegexp,\"\\\\$&\")};DocUtils.charMapRegexes=Object.keys(DocUtils.charMap).map(function(endChar){var startChar=DocUtils.charMap[endChar];return{rstart:new RegExp(DocUtils.escapeRegExp(startChar),\"g\"),rend:new RegExp(DocUtils.escapeRegExp(endChar),\"g\"),start:startChar,end:endChar}});DocUtils.wordToUtf8=function(string){var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rstart,r.end)}return string};DocUtils.utf8ToWord=function(string){if(typeof string!==\"string\"){string=string.toString()}var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rend,r.start)}return string};DocUtils.cloneDeep=function(obj){return JSON.parse(JSON.stringify(obj))};DocUtils.concatArrays=function(arrays){return arrays.reduce(function(result,array){Array.prototype.push.apply(result,array);return result},[])};var spaceRegexp=new RegExp(String.fromCharCode(160),\"g\");DocUtils.convertSpaces=function(s){return s.replace(spaceRegexp,\" \")};DocUtils.pregMatchAll=function(regex,content){var matchArray=[];var match=void 0;while((match=regex.exec(content))!=null){matchArray.push({array:match,offset:match.index})}return matchArray};DocUtils.sizeOfObject=function(obj){return Object.keys(obj).length};function throwXmlTagNotFound(options){var err=new Errors.XTTemplateError(\"No tag '\"+options.element+\"' was found at the \"+options.position);err.properties={id:\"no_xml_tag_found_at_\"+options.position,explanation:\"No tag '\"+options.element+\"' was found at the \"+options.position,parsed:options.parsed,index:options.index,element:options.element};throw err}DocUtils.getRight=function(parsed,element,index){for(var i=index,l=parsed.length;i<l;i++){var part=parsed[i];if(part.value===\"</\"+element+\">\"){return i}}throwXmlTagNotFound({position:\"right\",element:element,parsed:parsed,index:index})};DocUtils.getLeft=function(parsed,element,index){for(var i=index;i>=0;i--){var part=parsed[i];if(part.value.indexOf(\"<\"+element)===0&&[\">\",\" \"].indexOf(part.value[element.length+1])!==-1){return i}}throwXmlTagNotFound({position:\"left\",element:element,parsed:parsed,index:index})};module.exports=DocUtils},{\"./errors\":2,\"./memoize\":5,xmldom:19}],2:[function(require,module,exports){\"use strict\";function XTError(message){this.name=\"GenericError\";this.message=message;this.stack=new Error(message).stack}XTError.prototype=Error.prototype;function XTTemplateError(message){this.name=\"TemplateError\";this.message=message;this.stack=new Error(message).stack}XTTemplateError.prototype=new XTError;function XTScopeParserError(message){this.name=\"ScopeParserError\";this.message=message;this.stack=new Error(message).stack}XTScopeParserError.prototype=new XTError;function XTInternalError(message){this.name=\"InternalError\";this.properties={explanation:\"InternalError\"};this.message=message;this.stack=new Error(message).stack}XTInternalError.prototype=new XTError;module.exports={XTError:XTError,XTTemplateError:XTTemplateError,XTInternalError:XTInternalError,XTScopeParserError:XTScopeParserError}},{}],3:[function(require,module,exports){\"use strict\";var loopModule=require(\"./modules/loop\");var spacePreserveModule=require(\"./modules/space-preserve\");var rawXmlModule=require(\"./modules/rawxml\");var expandPairTrait=require(\"./modules/expand-pair-trait\");var render=require(\"./modules/render\");var PptXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/ppt\\/(slides|slideMasters)\\/(slide|slideMaster)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"ppt/presentation.xml\"])},textPath:\"ppt/slides/slide1.xml\",tagsXmlTextArray:[\"a:t\",\"m:t\"],tagsXmlLexedArray:[\"p:sp\",\"a:tc\",\"a:tr\",\"a:table\",\"a:p\",\"a:r\"],tagRawXml:\"p:sp\",tagTextXml:\"a:t\",baseModules:[render,expandPairTrait,rawXmlModule,loopModule]};var DocXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/word\\/(header|footer)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"word/document.xml\"])},textPath:\"word/document.xml\",tagsXmlTextArray:[\"w:t\",\"m:t\"],tagsXmlLexedArray:[\"w:tc\",\"w:tr\",\"w:table\",\"w:p\",\"w:r\"],tagRawXml:\"w:p\",tagTextXml:\"w:t\",baseModules:[render,spacePreserveModule,expandPairTrait,rawXmlModule,loopModule]};module.exports={docx:DocXFileTypeConfig,pptx:PptXFileTypeConfig}},{\"./modules/expand-pair-trait\":8,\"./modules/loop\":9,\"./modules/rawxml\":10,\"./modules/render\":11,\"./modules/space-preserve\":12}],4:[function(require,module,exports){\"use strict\";var Errors=require(\"./errors\");var DocUtils=require(\"./doc-utils\");function inRange(range,match){return range[0]<=match.offset&&match.offset<range[1]}function updateInTextTag(part,inTextTag){if(part.type===\"tag\"&&part.position===\"start\"&&part.text){if(inTextTag){throw new Error(\"Malformed xml : Already in text tag\")}return true}if(part.type===\"tag\"&&part.position===\"end\"&&part.text){if(!inTextTag){throw new Error(\"Malformed xml : Already not in text tag\")}return false}return inTextTag}function offsetSort(a,b){return a.offset-b.offset}function getTag(tag){var start=1;if(tag[1]===\"/\"){start=2}var index=tag.indexOf(\" \");var end=index===-1?tag.length-1:index;return{tag:tag.slice(start,end),position:start===1?\"start\":\"end\"}}function tagMatcher(content,textMatchArray,othersMatchArray){var cursor=0;var contentLength=content.length;var allMatches=DocUtils.concatArrays([textMatchArray.map(function(tag){return{tag:tag,text:true}}),othersMatchArray.map(function(tag){return{tag:tag,text:false}})]).reduce(function(allMatches,t){allMatches[t.tag]=t.text;return allMatches},{});var totalMatches=[];while(cursor<contentLength){cursor=content.indexOf(\"<\",cursor);if(cursor===-1){break}var offset=cursor;cursor=content.indexOf(\">\",cursor);var tagText=content.slice(offset,cursor+1);var _getTag=getTag(tagText),tag=_getTag.tag,position=_getTag.position;var text=allMatches[tag];if(text==null){continue}totalMatches.push({type:\"tag\",position:position,text:text,offset:offset,value:tagText})}return totalMatches}function throwUnopenedTagException(options){var err=new Errors.XTTemplateError(\"Unopened tag\");err.properties={xtag:options.xtag.split(\" \")[0],id:\"unopened_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function throwUnclosedTagException(options){var err=new Errors.XTTemplateError(\"Unclosed tag\");err.properties={xtag:options.xtag.split(\" \")[0].substr(1),id:\"unclosed_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function assertDelimiterOrdered(delimiterMatches,fullText){var inDelimiter=false;var lastDelimiterMatch={offset:0};var xtag=void 0;delimiterMatches.forEach(function(delimiterMatch){xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(delimiterMatch.position===\"start\"&&inDelimiter||delimiterMatch.position===\"end\"&&!inDelimiter){if(delimiterMatch.position===\"start\"){throwUnclosedTagException({xtag:xtag})}else{throwUnopenedTagException({xtag:xtag})}}inDelimiter=!inDelimiter;lastDelimiterMatch=delimiterMatch});var delimiterMatch={offset:fullText.length};xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(inDelimiter){throwUnclosedTagException({xtag:xtag})}}function getAllIndexes(arr,val,position){var indexes=[];var offset=-1;do{offset=arr.indexOf(val,offset+1);if(offset!==-1){indexes.push({offset:offset,position:position})}}while(offset!==-1);return indexes}function Reader(innerContentParts){var _this=this;this.innerContentParts=innerContentParts;this.full=\"\";this.parseDelimiters=function(delimiters){_this.full=_this.innerContentParts.join(\"\");var offset=0;_this.ranges=_this.innerContentParts.map(function(part){offset+=part.length;return offset-part.length});var delimiterMatches=DocUtils.concatArrays([getAllIndexes(_this.full,delimiters.start,\"start\"),getAllIndexes(_this.full,delimiters.end,\"end\")]).sort(offsetSort);assertDelimiterOrdered(delimiterMatches,_this.full);var delimiterLength={start:delimiters.start.length,end:delimiters.end.length};var cutNext=0;var delimiterIndex=0;_this.parsed=_this.ranges.map(function(offset,i){var range=[offset,offset+this.innerContentParts[i].length];var partContent=this.innerContentParts[i];var delimitersInOffset=[];while(delimiterIndex<delimiterMatches.length&&inRange(range,delimiterMatches[delimiterIndex])){delimitersInOffset.push(delimiterMatches[delimiterIndex]);delimiterIndex++}var parts=[];var cursor=0;if(cutNext>0){cursor=cutNext;cutNext=0}delimitersInOffset.forEach(function(delimiterInOffset){var value=partContent.substr(cursor,delimiterInOffset.offset-offset-cursor);if(value.length>0){parts.push({type:\"content\",value:value})}parts.push({type:\"delimiter\",position:delimiterInOffset.position});cursor=delimiterInOffset.offset-offset+delimiterLength[delimiterInOffset.position]});cutNext=cursor-partContent.length;var value=partContent.substr(cursor);if(value.length>0){parts.push({type:\"content\",value:value})}return parts},_this)}}module.exports={parse:function parse(xmlparsed,delimiters){var inTextTag=false;var innerContentParts=[];xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(inTextTag&&part.type===\"content\"){innerContentParts.push(part.value)}});var reader=new Reader(innerContentParts);reader.parseDelimiters(delimiters);var newArray=[];var index=0;xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(part.type===\"content\"){part.position=inTextTag?\"insidetag\":\"outsidetag\"}if(inTextTag&&part.type===\"content\"){Array.prototype.push.apply(newArray,reader.parsed[index].map(function(p){if(p.type===\"content\"){p.position=\"insidetag\"}return p}));index++}else{newArray.push(part)}});return newArray},xmlparse:function xmlparse(content,xmltags){var matches=tagMatcher(content,xmltags.text,xmltags.other);var cursor=0;var parsed=matches.reduce(function(parsed,match){var value=content.substr(cursor,match.offset-cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}cursor=match.offset+match.value.length;delete match.offset;if(match.value.length>0){parsed.push(match)}return parsed},[]);var value=content.substr(cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}return parsed}}},{\"./doc-utils\":1,\"./errors\":2}],5:[function(require,module,exports){\"use strict\";function memoize(func){var stringifyJson=JSON.stringify,cache={};function cachedfun(){var hash=stringifyJson(arguments);return hash in cache?cache[hash]:cache[hash]=func.apply(this,arguments)}return cachedfun}module.exports=memoize},{}],6:[function(require,module,exports){\"use strict\";function getMinFromArrays(arrays,state){var minIndex=-1;for(var i=0,l=arrays.length;i<l;i++){if(state[i]>=arrays[i].length){continue}if(minIndex===-1||arrays[i][state[i]].offset<arrays[minIndex][state[minIndex]].offset){minIndex=i}}if(minIndex===-1){throw new Error(\"minIndex negative\")}return minIndex}module.exports=function(arrays){var totalLength=arrays.reduce(function(sum,array){return sum+array.length},0);arrays=arrays.filter(function(array){return array.length>0});var resultArray=new Array(totalLength);var state=arrays.map(function(){return 0});var i=0;while(i<=totalLength-1){var arrayIndex=getMinFromArrays(arrays,state);resultArray[i]=arrays[arrayIndex][state[arrayIndex]];state[arrayIndex]++;i++}return resultArray}},{}],7:[function(require,module,exports){\"use strict\";function emptyFun(){}function identity(i){return i}module.exports=function(module){var defaults={set:emptyFun,parse:emptyFun,render:emptyFun,getTraits:emptyFun,optionsTransformer:identity,getRenderedMap:identity,postparse:identity};if(Object.keys(defaults).every(function(key){return!module[key]})){throw new Error(\"This module cannot be wrapped, because it doesn't define any of the necessary functions\")}Object.keys(defaults).forEach(function(key){module[key]=module[key]||defaults[key]});return module}},{}],8:[function(require,module,exports){\"use strict\";var traitName=\"expandPair\";var mergeSort=require(\"../mergesort\");var DocUtils=require(\"../doc-utils\");var wrapper=require(\"../module-wrapper\");var _require=require(\"../traits\"),getExpandToDefault=_require.getExpandToDefault;var Errors=require(\"../errors\");function throwUnmatchedLoopException(options){var location=options.location;var t=location===\"start\"?\"unclosed\":\"unopened\";var T=location===\"start\"?\"Unclosed\":\"Unopened\";var err=new Errors.XTTemplateError(T+\" loop\");var tag=options.part.value;err.properties={id:t+\"_loop\",explanation:\"The loop with tag \"+tag+\" is \"+t,xtag:tag};throw err}function throwClosingTagNotMatchOpeningTag(options){var tags=options.tags;var err=new Errors.XTTemplateError(\"Closing tag does not match opening tag\");err.properties={id:\"closing_tag_does_not_match_opening_tag\",explanation:'The tag \"'+tags[0].value+'\" is closed by the tag \"'+tags[1].value+'\"',openingtag:tags[0].value,closingtag:tags[1].value};throw err}function getOpenCountChange(part){switch(part.location){case\"start\":return 1;case\"end\":return-1;default:throw new Error(\"Location should be one of 'start' or 'end' (given : \"+part.location+\")\")}}function getPairs(traits){if(traits.length===0){return[]}var countOpen=1;var firstTrait=traits[0];for(var i=1;i<traits.length;i++){var currentTrait=traits[i];countOpen+=getOpenCountChange(currentTrait.part);if(countOpen===0){if(currentTrait.part.value!==firstTrait.part.value&&currentTrait.part.value!==\"\"){throwClosingTagNotMatchOpeningTag({tags:[firstTrait.part,currentTrait.part]})}var outer=getPairs(traits.slice(i+1));return[[firstTrait,currentTrait]].concat(outer)}}var part=firstTrait.part;throwUnmatchedLoopException({part:part,location:part.location})}var expandPairTrait={name:\"ExpandPairTrait\",postparse:function postparse(parsed,_ref){var getTraits=_ref.getTraits,_postparse=_ref.postparse;var traits=getTraits(traitName,parsed);traits=traits.map(function(trait){return trait||[]});traits=mergeSort(traits);var pairs=getPairs(traits);var expandedPairs=pairs.map(function(pair){var expandTo=pair[0].part.expandTo;if(expandTo===\"auto\"){expandTo=getExpandToDefault(parsed.slice(pair[0].offset,pair[1].offset))}if(!expandTo){return[pair[0].offset,pair[1].offset]}var left=DocUtils.getLeft(parsed,expandTo,pair[0].offset);var right=DocUtils.getRight(parsed,expandTo,pair[1].offset);return[left,right]});var currentPairIndex=0;var innerParts=void 0;return parsed.reduce(function(newParsed,part,i){var inPair=currentPairIndex<pairs.length&&expandedPairs[currentPairIndex][0]<=i;var pair=pairs[currentPairIndex];var expandedPair=expandedPairs[currentPairIndex];if(!inPair){newParsed.push(part);return newParsed}if(expandedPair[0]===i){innerParts=[]}if(pair[0].offset!==i&&pair[1].offset!==i){innerParts.push(part)}if(expandedPair[1]===i){var basePart=parsed[pair[0].offset];delete basePart.location;delete basePart.expandTo;basePart.subparsed=_postparse(innerParts);newParsed.push(basePart);currentPairIndex++}return newParsed},[])}};module.exports=function(){return wrapper(expandPairTrait)}},{\"../doc-utils\":1,\"../errors\":2,\"../mergesort\":6,\"../module-wrapper\":7,\"../traits\":16}],9:[function(require,module,exports){\"use strict\";var DocUtils=require(\"../doc-utils\");var dashInnerRegex=/^-([^\\s]+)\\s(.+)$/;var wrapper=require(\"../module-wrapper\");var moduleName=\"loop\";var loopModule={name:\"LoopModule\",parse:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent[0]===\"#\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:false}}if(placeHolderContent[0]===\"^\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:true}}if(placeHolderContent[0]===\"/\"){return{type:type,value:placeHolderContent.substr(1),module:module,location:\"end\"}}if(placeHolderContent[0]===\"-\"){var value=placeHolderContent.replace(dashInnerRegex,\"$2\");var expandTo=placeHolderContent.replace(dashInnerRegex,\"$1\");return{type:type,value:value,expandTo:expandTo,module:module,location:\"start\",inverted:false}}return null},getTraits:function getTraits(traitName,parsed){if(traitName!==\"expandPair\"){return}return parsed.reduce(function(tags,part,offset){if(part.type===\"placeholder\"&&part.module===moduleName){tags.push({part:part,offset:offset})}return tags},[])},render:function render(part,options){if(!part.type===\"placeholder\"||part.module!==moduleName){return null}var totalValue=[];function loopOver(scope){var scopeManager=options.scopeManager.createSubScopeManager(scope,part.value);totalValue.push(options.render(DocUtils.mergeObjects({},options,{compiled:part.subparsed,tags:{},scopeManager:scopeManager})))}options.scopeManager.loopOver(part.value,loopOver,part.inverted);return{value:totalValue.join(\"\")}}};module.exports=function(){return wrapper(loopModule)}},{\"../doc-utils\":1,\"../module-wrapper\":7}],10:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"../doc-utils\");var Errors=require(\"../errors\");var moduleName=\"rawxml\";var wrapper=require(\"../module-wrapper\");function throwRawTagShouldBeOnlyTextInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag should be the only text in paragraph\");var tag=options.part.value;err.properties={id:\"raw_xml_tag_should_be_only_text_in_paragraph\",explanation:\"The tag \"+tag,xtag:options.part.value,paragraphParts:options.paragraphParts};throw err}function getInner(_ref){var part=_ref.part,left=_ref.left,right=_ref.right,postparsed=_ref.postparsed,index=_ref.index;var paragraphParts=postparsed.slice(left+1,right);paragraphParts.forEach(function(p,i){if(i===index-left-1){return}if(p.type===\"placeholder\"||p.type===\"content\"&&p.position===\"insidetag\"){throwRawTagShouldBeOnlyTextInParagraph({paragraphParts:paragraphParts,part:part})}});return part}var RawXmlModule=function(){function RawXmlModule(){_classCallCheck(this,RawXmlModule);this.name=\"RawXmlModule\"}_createClass(RawXmlModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){this.fileTypeConfig=docxtemplater.fileTypeConfig;return options}},{key:\"parse\",value:function parse(placeHolderContent){var type=\"placeholder\";if(placeHolderContent[0]!==\"@\"){return null}return{type:type,value:placeHolderContent.substr(1),module:moduleName}}},{key:\"postparse\",value:function postparse(parsed){return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:this.fileTypeConfig.tagRawXml})}},{key:\"render\",value:function render(part,options){if(part.module!==moduleName){return null}var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return{value:value}}}]);return RawXmlModule}();module.exports=function(){return wrapper(new RawXmlModule)}},{\"../doc-utils\":1,\"../errors\":2,\"../module-wrapper\":7}],11:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var wrapper=require(\"../module-wrapper\");var Render=function(){function Render(){_classCallCheck(this,Render);this.name=\"Render\"}_createClass(Render,[{key:\"set\",value:function set(obj){if(obj.compiled){this.compiled=obj.compiled}if(obj.data!=null){this.data=obj.data}}},{key:\"getRenderedMap\",value:function getRenderedMap(mapper){var _this=this;return Object.keys(this.compiled).reduce(function(mapper,from){mapper[from]={from:from,data:_this.data};return mapper},mapper)}}]);return Render}();module.exports=function(){return wrapper(new Render)}},{\"../module-wrapper\":7}],12:[function(require,module,exports){\"use strict\";var wrapper=require(\"../module-wrapper\");var spacePreserve={name:\"SpacePreserveModule\",postparse:function postparse(parsed){var chunk=[];var inChunk=false;var result=parsed.reduce(function(parsed,part){if(part.type===\"tag\"&&part.position===\"start\"&&part.text&&part.value===\"<w:t>\"){inChunk=true}if(inChunk){if(part.type===\"placeholder\"&&!part.module){chunk[0].value='<w:t xml:space=\"preserve\">'}chunk.push(part)}else{parsed.push(part)}if(part.type===\"tag\"&&part.position===\"end\"&&part.text&&part.value===\"</w:t>\"){Array.prototype.push.apply(parsed,chunk);inChunk=false;chunk=[]}return parsed},[]);Array.prototype.push.apply(result,chunk);return result}};module.exports=function(){return wrapper(spacePreserve)}},{\"../module-wrapper\":7}],13:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var parser={postparse:function postparse(parsed,modules){function getTraits(traitName,parsed){return modules.map(function(module){return module.getTraits(traitName,parsed)})}function postparse(parsed){return modules.reduce(function(parsed,module){return module.postparse(parsed,{postparse:postparse,getTraits:getTraits})},parsed)}return postparse(parsed)},parse:function parse(lexed,modules){function moduleParse(placeHolderContent,parsed){var moduleParsed=void 0;for(var i=0,l=modules.length;i<l;i++){var _module=modules[i];moduleParsed=_module.parse(placeHolderContent);if(moduleParsed){parsed.push(moduleParsed);return moduleParsed}}return null}var inPlaceHolder=false;var placeHolderContent=void 0;var tailParts=[];return lexed.reduce(function(parsed,token){if(token.type===\"delimiter\"){inPlaceHolder=token.position===\"start\";if(token.position===\"end\"){placeHolderContent=DocUtils.wordToUtf8(placeHolderContent);if(!moduleParse(placeHolderContent,parsed)){parsed.push({type:\"placeholder\",value:placeHolderContent})}Array.prototype.push.apply(parsed,tailParts);tailParts=[];return parsed}placeHolderContent=\"\";return parsed}if(inPlaceHolder){if(token.type===\"content\"&&token.position===\"insidetag\"){placeHolderContent+=token.value}else{tailParts.push(token)}return parsed}parsed.push(token);return parsed},[])}};module.exports=parser},{\"./doc-utils\":1}],14:[function(require,module,exports){\"use strict\";var ScopeManager=require(\"./scope-manager\");var DocUtils=require(\"./doc-utils\");function moduleRender(part,options){var moduleRendered=void 0;for(var i=0,l=options.modules.length;i<l;i++){var _module=options.modules[i];moduleRendered=_module.render(part,options);if(moduleRendered){return moduleRendered}}return false}function render(options){options.render=render;options.modules=options.modules;if(!options.scopeManager){options.scopeManager=ScopeManager.createBaseScopeManager(options)}return options.compiled.map(function(part){var moduleRendered=moduleRender(part,options);if(moduleRendered){return moduleRendered.value}if(part.type===\"placeholder\"){var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return DocUtils.utf8ToWord(value)}if(part.type===\"content\"||part.type===\"tag\"){return part.value}throw new Error('Unimplemented tag type \"'+part.type+'\"')}).join(\"\")}module.exports=render},{\"./doc-utils\":1,\"./scope-manager\":15}],15:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var Errors=require(\"./errors\");var ScopeManager=function(){function ScopeManager(options){_classCallCheck(this,ScopeManager);this.scopePath=options.scopePath;this.scopeList=options.scopeList;this.parser=options.parser}_createClass(ScopeManager,[{key:\"loopOver\",value:function loopOver(tag,callback,inverted){inverted=inverted||false;return this.loopOverValue(this.getValue(tag),callback,inverted)}},{key:\"functorIfInverted\",value:function functorIfInverted(inverted,functor,value){if(inverted){functor(value)}}},{key:\"isValueFalsy\",value:function isValueFalsy(value,type){return value==null||!value||type===\"[object Array]\"&&value.length===0}},{key:\"loopOverValue\",value:function loopOverValue(value,functor,inverted){var type=Object.prototype.toString.call(value);var currentValue=this.scopeList[this.num];if(this.isValueFalsy(value,type)){return this.functorIfInverted(inverted,functor,currentValue)}if(type===\"[object Array]\"){for(var i=0,scope;i<value.length;i++){scope=value[i];this.functorIfInverted(!inverted,functor,scope)}return}if(type===\"[object Object]\"){return this.functorIfInverted(!inverted,functor,value)}if(value===true){return this.functorIfInverted(!inverted,functor,currentValue)}}},{key:\"getValue\",value:function getValue(tag,num){this.num=num==null?this.scopeList.length-1:num;var err=void 0;var parser=void 0;var result=void 0;var scope=this.scopeList[this.num];try{parser=this.parser(tag)}catch(error){err=new Errors.XTScopeParserError(\"Scope parser compilation failed\");err.properties={id:\"scopeparser_compilation_failed\",tag:tag,explanation:\"The scope parser for the tag \"+tag+\" failed to compile\",rootError:error};throw err}try{result=parser.get(scope,{num:this.num,scopeList:this.scopeList})}catch(error){err=new Errors.XTScopeParserError(\"Scope parser execution failed\");err.properties={id:\"scopeparser_execution_failed\",explanation:\"The scope parser for the tag \"+tag+\" failed to execute\",scope:scope,tag:tag,rootError:error};throw err}if(result==null&&this.num>0){return this.getValue(tag,this.num-1)}return result}},{key:\"createSubScopeManager\",value:function createSubScopeManager(scope,tag){var options={scopePath:this.scopePath.slice(0),scopeList:this.scopeList.slice(0)};options.parser=this.parser;options.scopeList=this.scopeList.concat(scope);options.scopePath=this.scopePath.concat(tag);return new ScopeManager(options)}}]);return ScopeManager}();ScopeManager.createBaseScopeManager=function(_ref){var parser=_ref.parser,tags=_ref.tags;var options={parser:parser,tags:tags};options.scopePath=[];options.scopeList=[tags];return new ScopeManager(options)};module.exports=ScopeManager},{\"./errors\":2}],16:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var Errors=require(\"./errors\");function throwRawTagNotInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag not in paragraph\");var tag=options.part.value;err.properties={id:\"raw_tag_outerxml_invalid\",explanation:'The tag \"'+tag+'\"',rootError:options.rootError,xtag:tag,postparsed:options.postparsed,expandTo:options.expandTo,index:options.index};throw err}function lastTagIsOpenTag(array,tag){if(array.length===0){return false}var lastTag=array[array.length-1];var innerLastTag=lastTag.tag.substr(1);var innerCurrentTag=tag.substr(2,tag.length-3);return innerLastTag.indexOf(innerCurrentTag)===0}function addTag(array,tag){array.push({tag:tag});return array}function getListXmlElements(parts){var tags=parts.filter(function(part){return part.type===\"tag\"}).map(function(part){return part.value});var result=[];for(var i=0,tag;i<tags.length;i++){tag=tags[i];if(tag[1]===\"/\"){if(lastTagIsOpenTag(result,tag)){result.pop()}else{result=addTag(result,tag)}}else if(tag[tag.length-1]!==\"/\"){result=addTag(result,tag)}}return result}function getExpandToDefault(parts){var xmlElements=getListXmlElements(parts);for(var i=0;i<xmlElements.length;i++){var xmlElement=xmlElements[i];if(xmlElement.tag.indexOf(\"<w:tc\")===0){return\"w:tr\"}if(xmlElement.tag.indexOf(\"<a:tc\")===0){return\"a:tr\"}}return false}function expandOne(part,postparsed,options){var expandTo=part.expandTo||options.expandTo;var index=postparsed.indexOf(part);if(!expandTo){return postparsed}var right=void 0,left=void 0;try{right=DocUtils.getRight(postparsed,expandTo,index);left=DocUtils.getLeft(postparsed,expandTo,index)}catch(rootError){if(rootError instanceof Errors.XTTemplateError){throwRawTagNotInParagraph({part:part,rootError:rootError,postparsed:postparsed,expandTo:expandTo,index:index})}throw rootError}var leftParts=postparsed.slice(left,index);var rightParts=postparsed.slice(index+1,right+1);var inner=options.getInner({index:index,part:part,leftParts:leftParts,rightParts:rightParts,left:left,right:right,postparsed:postparsed});if(!inner.length){inner.expanded=[leftParts,rightParts];inner=[inner]}return DocUtils.concatArrays([postparsed.slice(0,left),inner,postparsed.slice(right+1)])}function expandToOne(postparsed,options){var expandToElements=postparsed.reduce(function(elements,part){if(part.type===\"placeholder\"&&part.module===options.moduleName){elements.push(part)}return elements},[]);expandToElements.forEach(function(part){postparsed=expandOne(part,postparsed,options)});return postparsed}module.exports={expandToOne:expandToOne,getExpandToDefault:getExpandToDefault}},{\"./doc-utils\":1,\"./errors\":2}],17:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var memoize=require(\"./memoize\");function handleRecursiveCase(res){function replacerUnshift(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.shift();var match=pn.array[0]+pn.array[1];pn.array.unshift(match);pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.first=true;res.matches.unshift(pn);res.charactersAdded.unshift(0);return res.charactersAddedCumulative.unshift(0)}if(res.content.indexOf(\"<\")===-1&&res.content.indexOf(\">\")===-1){res.content.replace(/^()([^<>]*)$/,replacerUnshift)}var r=new RegExp(\"^()([^<]+)</(?:\"+res.tagsXmlArrayJoined+\")>\");res.content.replace(r,replacerUnshift);function replacerPush(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.last=true;res.matches.push(pn);res.charactersAdded.push(0);return res.charactersAddedCumulative.push(0)}r=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^>]+)$\");res.content.replace(r,replacerPush);return res}function xmlMatcher(content,tagsXmlArray){var res={};res.content=content;res.tagsXmlArray=tagsXmlArray;res.tagsXmlArrayJoined=res.tagsXmlArray.join(\"|\");var regexp=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^<>]*)</(?:\"+res.tagsXmlArrayJoined+\")>\",\"g\");res.matches=DocUtils.pregMatchAll(regexp,res.content);res.charactersAddedCumulative=res.matches.map(function(){return 0});res.charactersAdded=res.matches.map(function(){return 0});return handleRecursiveCase(res)}var memoized=memoize(xmlMatcher);module.exports=function(content,tagsXmlArray){return DocUtils.cloneDeep(memoized(content,tagsXmlArray))}},{\"./doc-utils\":1,\"./memoize\":5}],18:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var ScopeManager=require(\"./scope-manager\");var xmlMatcher=require(\"./xml-matcher\");var Errors=require(\"./errors\");var Lexer=require(\"./lexer\");var Parser=require(\"./parser.js\");var _render=require(\"./render.js\");function _getFullText(content,tagsXmlArray){var matcher=xmlMatcher(content,tagsXmlArray);var result=matcher.matches.map(function(match){return match.array[2]});return DocUtils.wordToUtf8(DocUtils.convertSpaces(result.join(\"\")))}module.exports=function(){function XmlTemplater(content,options){_classCallCheck(this,XmlTemplater);this.fromJson(options);this.setModules({inspect:{filePath:this.filePath}});this.load(content)}_createClass(XmlTemplater,[{key:\"load\",value:function load(content){if(typeof content!==\"string\"){var err=new Errors.XTInternalError(\"Content must be a string\");err.properties.id=\"xmltemplater_content_must_be_string\";throw err}this.content=content}},{key:\"setTags\",value:function setTags(tags){this.tags=tags!=null?tags:{};this.scopeManager=ScopeManager.createBaseScopeManager({tags:this.tags,parser:this.parser});return this}},{key:\"fromJson\",value:function fromJson(options){this.filePath=options.filePath;this.modules=options.modules;this.fileTypeConfig=options.fileTypeConfig;Object.keys(DocUtils.defaults).map(function(key){this[key]=options[key]!=null?options[key]:DocUtils.defaults[key]},this)}},{key:\"getFullText\",value:function getFullText(){return _getFullText(this.content,this.fileTypeConfig.tagsXmlTextArray)}},{key:\"setModules\",value:function setModules(obj){this.modules.forEach(function(module){module.set(obj)})}},{key:\"parse\",value:function parse(){this.xmllexed=Lexer.xmlparse(this.content,{text:this.fileTypeConfig.tagsXmlTextArray,other:this.fileTypeConfig.tagsXmlLexedArray});this.setModules({inspect:{xmllexed:this.xmllexed}});this.lexed=Lexer.parse(this.xmllexed,this.delimiters);this.setModules({inspect:{lexed:this.lexed}});this.parsed=Parser.parse(this.lexed,this.modules);this.setModules({inspect:{parsed:this.parsed}});this.postparsed=Parser.postparse(this.parsed,this.modules);return this}},{key:\"render\",value:function render(to){this.filePath=to;this.setModules({inspect:{postparsed:this.postparsed}});this.content=_render({compiled:this.postparsed,tags:this.tags,modules:this.modules,parser:this.parser,nullGetter:this.nullGetter,filePath:this.filePath});this.setModules({inspect:{content:this.content}});return this}}]);return XmlTemplater}()},{\"./doc-utils\":1,\"./errors\":2,\"./lexer\":4,\"./parser.js\":13,\"./render.js\":14,\"./scope-manager\":15,\"./xml-matcher\":17}],19:[function(require,module,exports){function DOMParser(options){this.options=options||{locator:{}}}DOMParser.prototype.parseFromString=function(source,mimeType){var options=this.options;var sax=new XMLReader;var domBuilder=options.domBuilder||new DOMHandler;var errorHandler=options.errorHandler;var locator=options.locator;var defaultNSMap=options.xmlns||{};var entityMap={lt:\"<\",gt:\">\",amp:\"&\",quot:'\"',apos:\"'\"};if(locator){domBuilder.setDocumentLocator(locator)}sax.errorHandler=buildErrorHandler(errorHandler,domBuilder,locator);sax.domBuilder=options.domBuilder||domBuilder;if(/\\/x?html?$/.test(mimeType)){entityMap.nbsp=\" \";entityMap.copy=\"©\";defaultNSMap[\"\"]=\"http://www.w3.org/1999/xhtml\"}defaultNSMap.xml=defaultNSMap.xml||\"http://www.w3.org/XML/1998/namespace\";if(source){sax.parse(source,defaultNSMap,entityMap)}else{sax.errorHandler.error(\"invalid doc source\")}return domBuilder.doc};function buildErrorHandler(errorImpl,domBuilder,locator){if(!errorImpl){if(domBuilder instanceof DOMHandler){return domBuilder}errorImpl=domBuilder}var errorHandler={};var isCallback=errorImpl instanceof Function;locator=locator||{};function build(key){var fn=errorImpl[key];if(!fn&&isCallback){fn=errorImpl.length==2?function(msg){errorImpl(key,msg)}:errorImpl}errorHandler[key]=fn&&function(msg){fn(\"[xmldom \"+key+\"]\\t\"+msg+_locator(locator))}||function(){}}build(\"warning\");build(\"error\");build(\"fatalError\");return errorHandler}function DOMHandler(){this.cdata=false}function position(locator,node){node.lineNumber=locator.lineNumber;node.columnNumber=locator.columnNumber}DOMHandler.prototype={startDocument:function(){this.doc=(new DOMImplementation).createDocument(null,null,null);if(this.locator){this.doc.documentURI=this.locator.systemId}},startElement:function(namespaceURI,localName,qName,attrs){var doc=this.doc;var el=doc.createElementNS(namespaceURI,qName||localName);var len=attrs.length;appendElement(this,el);this.currentElement=el;this.locator&&position(this.locator,el);for(var i=0;i<len;i++){var namespaceURI=attrs.getURI(i);var value=attrs.getValue(i);var qName=attrs.getQName(i);var attr=doc.createAttributeNS(namespaceURI,qName);this.locator&&position(attrs.getLocator(i),attr);attr.value=attr.nodeValue=value;el.setAttributeNode(attr)}},endElement:function(namespaceURI,localName,qName){var current=this.currentElement;var tagName=current.tagName;this.currentElement=current.parentNode},startPrefixMapping:function(prefix,uri){},endPrefixMapping:function(prefix){},processingInstruction:function(target,data){var ins=this.doc.createProcessingInstruction(target,data);this.locator&&position(this.locator,ins);appendElement(this,ins)},ignorableWhitespace:function(ch,start,length){},characters:function(chars,start,length){chars=_toString.apply(this,arguments);if(chars){if(this.cdata){var charNode=this.doc.createCDATASection(chars)}else{var charNode=this.doc.createTextNode(chars)}if(this.currentElement){this.currentElement.appendChild(charNode)}else if(/^\\s*$/.test(chars)){this.doc.appendChild(charNode)}this.locator&&position(this.locator,charNode)}},skippedEntity:function(name){},endDocument:function(){this.doc.normalize()},setDocumentLocator:function(locator){if(this.locator=locator){locator.lineNumber=0}},comment:function(chars,start,length){chars=_toString.apply(this,arguments);var comm=this.doc.createComment(chars);this.locator&&position(this.locator,comm);appendElement(this,comm)},startCDATA:function(){this.cdata=true},endCDATA:function(){this.cdata=false},startDTD:function(name,publicId,systemId){var impl=this.doc.implementation;if(impl&&impl.createDocumentType){var dt=impl.createDocumentType(name,publicId,systemId);this.locator&&position(this.locator,dt);appendElement(this,dt)}},warning:function(error){console.warn(\"[xmldom warning]\\t\"+error,_locator(this.locator))},error:function(error){console.error(\"[xmldom error]\\t\"+error,_locator(this.locator))},fatalError:function(error){console.error(\"[xmldom fatalError]\\t\"+error,_locator(this.locator));throw error}};function _locator(l){if(l){return\"\\n@\"+(l.systemId||\"\")+\"#[line:\"+l.lineNumber+\",col:\"+l.columnNumber+\"]\"}}function _toString(chars,start,length){if(typeof chars==\"string\"){return chars.substr(start,length)}else{if(chars.length>=start+length||start){return new java.lang.String(chars,start,length)+\"\"}return chars}}\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){DOMHandler.prototype[key]=function(){return null}});function appendElement(hander,node){if(!hander.currentElement){hander.doc.appendChild(node)}else{hander.currentElement.appendChild(node)}}var XMLReader=require(\"./sax\").XMLReader;var DOMImplementation=exports.DOMImplementation=require(\"./dom\").DOMImplementation;exports.XMLSerializer=require(\"./dom\").XMLSerializer;exports.DOMParser=DOMParser},{\"./dom\":20,\"./sax\":21}],20:[function(require,module,exports){function copy(src,dest){for(var p in src){dest[p]=src[p]}}function _extends(Class,Super){var pt=Class.prototype;if(Object.create){var ppt=Object.create(Super.prototype);pt.__proto__=ppt}if(!(pt instanceof Super)){function t(){}t.prototype=Super.prototype;t=new t;copy(pt,t);Class.prototype=pt=t}if(pt.constructor!=Class){if(typeof Class!=\"function\"){console.error(\"unknow Class:\"+Class)}pt.constructor=Class}}var htmlns=\"http://www.w3.org/1999/xhtml\";var NodeType={};var ELEMENT_NODE=NodeType.ELEMENT_NODE=1;var ATTRIBUTE_NODE=NodeType.ATTRIBUTE_NODE=2;var TEXT_NODE=NodeType.TEXT_NODE=3;var CDATA_SECTION_NODE=NodeType.CDATA_SECTION_NODE=4;var ENTITY_REFERENCE_NODE=NodeType.ENTITY_REFERENCE_NODE=5;var ENTITY_NODE=NodeType.ENTITY_NODE=6;var PROCESSING_INSTRUCTION_NODE=NodeType.PROCESSING_INSTRUCTION_NODE=7;var COMMENT_NODE=NodeType.COMMENT_NODE=8;var DOCUMENT_NODE=NodeType.DOCUMENT_NODE=9;var DOCUMENT_TYPE_NODE=NodeType.DOCUMENT_TYPE_NODE=10;var DOCUMENT_FRAGMENT_NODE=NodeType.DOCUMENT_FRAGMENT_NODE=11;var NOTATION_NODE=NodeType.NOTATION_NODE=12;var ExceptionCode={};var ExceptionMessage={};var INDEX_SIZE_ERR=ExceptionCode.INDEX_SIZE_ERR=(ExceptionMessage[1]=\"Index size error\",1);var DOMSTRING_SIZE_ERR=ExceptionCode.DOMSTRING_SIZE_ERR=(ExceptionMessage[2]=\"DOMString size error\",2);var HIERARCHY_REQUEST_ERR=ExceptionCode.HIERARCHY_REQUEST_ERR=(ExceptionMessage[3]=\"Hierarchy request error\",3);var WRONG_DOCUMENT_ERR=ExceptionCode.WRONG_DOCUMENT_ERR=(ExceptionMessage[4]=\"Wrong document\",4);var INVALID_CHARACTER_ERR=ExceptionCode.INVALID_CHARACTER_ERR=(ExceptionMessage[5]=\"Invalid character\",5);var NO_DATA_ALLOWED_ERR=ExceptionCode.NO_DATA_ALLOWED_ERR=(ExceptionMessage[6]=\"No data allowed\",6);var NO_MODIFICATION_ALLOWED_ERR=ExceptionCode.NO_MODIFICATION_ALLOWED_ERR=(ExceptionMessage[7]=\"No modification allowed\",7);var NOT_FOUND_ERR=ExceptionCode.NOT_FOUND_ERR=(ExceptionMessage[8]=\"Not found\",8);var NOT_SUPPORTED_ERR=ExceptionCode.NOT_SUPPORTED_ERR=(ExceptionMessage[9]=\"Not supported\",9);var INUSE_ATTRIBUTE_ERR=ExceptionCode.INUSE_ATTRIBUTE_ERR=(ExceptionMessage[10]=\"Attribute in use\",10);var INVALID_STATE_ERR=ExceptionCode.INVALID_STATE_ERR=(ExceptionMessage[11]=\"Invalid state\",11);var SYNTAX_ERR=ExceptionCode.SYNTAX_ERR=(ExceptionMessage[12]=\"Syntax error\",12);var INVALID_MODIFICATION_ERR=ExceptionCode.INVALID_MODIFICATION_ERR=(ExceptionMessage[13]=\"Invalid modification\",13);var NAMESPACE_ERR=ExceptionCode.NAMESPACE_ERR=(ExceptionMessage[14]=\"Invalid namespace\",14);var INVALID_ACCESS_ERR=ExceptionCode.INVALID_ACCESS_ERR=(ExceptionMessage[15]=\"Invalid access\",15);function DOMException(code,message){if(message instanceof Error){var error=message}else{error=this;Error.call(this,ExceptionMessage[code]);this.message=ExceptionMessage[code];if(Error.captureStackTrace)Error.captureStackTrace(this,DOMException)}error.code=code;if(message)this.message=this.message+\": \"+message;return error}DOMException.prototype=Error.prototype;copy(ExceptionCode,DOMException);function NodeList(){}NodeList.prototype={length:0,item:function(index){return this[index]||null},toString:function(isHTML,nodeFilter){for(var buf=[],i=0;i<this.length;i++){serializeToString(this[i],buf,isHTML,nodeFilter)}return buf.join(\"\")}};function LiveNodeList(node,refresh){this._node=node;this._refresh=refresh;_updateLiveList(this)}function _updateLiveList(list){var inc=list._node._inc||list._node.ownerDocument._inc;if(list._inc!=inc){var ls=list._refresh(list._node);__set__(list,\"length\",ls.length);copy(ls,list);list._inc=inc}}LiveNodeList.prototype.item=function(i){_updateLiveList(this);return this[i]};_extends(LiveNodeList,NodeList);function NamedNodeMap(){}function _findNodeIndex(list,node){var i=list.length;while(i--){if(list[i]===node){return i}}}function _addNamedNode(el,list,newAttr,oldAttr){if(oldAttr){list[_findNodeIndex(list,oldAttr)]=newAttr}else{list[list.length++]=newAttr}if(el){newAttr.ownerElement=el;var doc=el.ownerDocument;if(doc){oldAttr&&_onRemoveAttribute(doc,el,oldAttr);_onAddAttribute(doc,el,newAttr)}}}function _removeNamedNode(el,list,attr){var i=_findNodeIndex(list,attr);if(i>=0){var lastIndex=list.length-1;while(i<lastIndex){list[i]=list[++i]}list.length=lastIndex;if(el){var doc=el.ownerDocument;if(doc){_onRemoveAttribute(doc,el,attr);attr.ownerElement=null}}}else{throw DOMException(NOT_FOUND_ERR,new Error(el.tagName+\"@\"+attr))}}NamedNodeMap.prototype={length:0,item:NodeList.prototype.item,getNamedItem:function(key){var i=this.length;while(i--){var attr=this[i];if(attr.nodeName==key){return attr}}},setNamedItem:function(attr){var el=attr.ownerElement;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}var oldAttr=this.getNamedItem(attr.nodeName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},setNamedItemNS:function(attr){var el=attr.ownerElement,oldAttr;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}oldAttr=this.getNamedItemNS(attr.namespaceURI,attr.localName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},removeNamedItem:function(key){var attr=this.getNamedItem(key);_removeNamedNode(this._ownerElement,this,attr);return attr},removeNamedItemNS:function(namespaceURI,localName){var attr=this.getNamedItemNS(namespaceURI,localName);_removeNamedNode(this._ownerElement,this,attr);return attr},getNamedItemNS:function(namespaceURI,localName){var i=this.length;while(i--){var node=this[i];if(node.localName==localName&&node.namespaceURI==namespaceURI){return node}}return null}};function DOMImplementation(features){this._features={};if(features){for(var feature in features){this._features=features[feature]}}}DOMImplementation.prototype={hasFeature:function(feature,version){var versions=this._features[feature.toLowerCase()];if(versions&&(!version||version in versions)){return true}else{return false}},createDocument:function(namespaceURI,qualifiedName,doctype){var doc=new Document;doc.implementation=this;doc.childNodes=new NodeList;doc.doctype=doctype;if(doctype){doc.appendChild(doctype)}if(qualifiedName){var root=doc.createElementNS(namespaceURI,qualifiedName);doc.appendChild(root)}return doc},createDocumentType:function(qualifiedName,publicId,systemId){var node=new DocumentType;node.name=qualifiedName;node.nodeName=qualifiedName;node.publicId=publicId;node.systemId=systemId;return node}};function Node(){}Node.prototype={firstChild:null,lastChild:null,previousSibling:null,nextSibling:null,attributes:null,parentNode:null,childNodes:null,ownerDocument:null,nodeValue:null,namespaceURI:null,prefix:null,localName:null,insertBefore:function(newChild,refChild){return _insertBefore(this,newChild,refChild)},replaceChild:function(newChild,oldChild){this.insertBefore(newChild,oldChild);if(oldChild){this.removeChild(oldChild)}},removeChild:function(oldChild){return _removeChild(this,oldChild)},appendChild:function(newChild){return this.insertBefore(newChild,null)},hasChildNodes:function(){return this.firstChild!=null},cloneNode:function(deep){return cloneNode(this.ownerDocument||this,this,deep)},normalize:function(){var child=this.firstChild;while(child){var next=child.nextSibling;if(next&&next.nodeType==TEXT_NODE&&child.nodeType==TEXT_NODE){this.removeChild(next);child.appendData(next.data)}else{child.normalize();child=next}}},isSupported:function(feature,version){return this.ownerDocument.implementation.hasFeature(feature,version)},hasAttributes:function(){return this.attributes.length>0},lookupPrefix:function(namespaceURI){var el=this;while(el){var map=el._nsMap;if(map){for(var n in map){if(map[n]==namespaceURI){return n}}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},lookupNamespaceURI:function(prefix){var el=this;while(el){var map=el._nsMap;if(map){if(prefix in map){return map[prefix]}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},isDefaultNamespace:function(namespaceURI){var prefix=this.lookupPrefix(namespaceURI);return prefix==null}};function _xmlEncoder(c){return c==\"<\"&&\"&lt;\"||c==\">\"&&\"&gt;\"||c==\"&\"&&\"&amp;\"||c=='\"'&&\"&quot;\"||\"&#\"+c.charCodeAt()+\";\"}copy(NodeType,Node);copy(NodeType,Node.prototype);function _visitNode(node,callback){if(callback(node)){return true}if(node=node.firstChild){do{if(_visitNode(node,callback)){return true}}while(node=node.nextSibling)}}function Document(){}function _onAddAttribute(doc,el,newAttr){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){el._nsMap[newAttr.prefix?newAttr.localName:\"\"]=newAttr.value}}function _onRemoveAttribute(doc,el,newAttr,remove){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){delete el._nsMap[newAttr.prefix?newAttr.localName:\"\"]}}function _onUpdateChild(doc,el,newChild){if(doc&&doc._inc){doc._inc++;var cs=el.childNodes;if(newChild){cs[cs.length++]=newChild}else{var child=el.firstChild;var i=0;while(child){cs[i++]=child;child=child.nextSibling}cs.length=i}}}function _removeChild(parentNode,child){var previous=child.previousSibling;var next=child.nextSibling;if(previous){previous.nextSibling=next}else{parentNode.firstChild=next}if(next){next.previousSibling=previous}else{parentNode.lastChild=previous}_onUpdateChild(parentNode.ownerDocument,parentNode);return child}function _insertBefore(parentNode,newChild,nextChild){var cp=newChild.parentNode;if(cp){cp.removeChild(newChild)}if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){var newFirst=newChild.firstChild;if(newFirst==null){return newChild}var newLast=newChild.lastChild}else{newFirst=newLast=newChild}var pre=nextChild?nextChild.previousSibling:parentNode.lastChild;newFirst.previousSibling=pre;newLast.nextSibling=nextChild;if(pre){pre.nextSibling=newFirst}else{parentNode.firstChild=newFirst}if(nextChild==null){parentNode.lastChild=newLast}else{nextChild.previousSibling=newLast}do{newFirst.parentNode=parentNode}while(newFirst!==newLast&&(newFirst=newFirst.nextSibling));_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){newChild.firstChild=newChild.lastChild=null}return newChild}function _appendSingleChild(parentNode,newChild){var cp=newChild.parentNode;if(cp){var pre=parentNode.lastChild;cp.removeChild(newChild);var pre=parentNode.lastChild}var pre=parentNode.lastChild;newChild.parentNode=parentNode;newChild.previousSibling=pre;newChild.nextSibling=null;if(pre){pre.nextSibling=newChild}else{parentNode.firstChild=newChild}parentNode.lastChild=newChild;_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);return newChild}Document.prototype={nodeName:\"#document\",nodeType:DOCUMENT_NODE,doctype:null,documentElement:null,_inc:1,insertBefore:function(newChild,refChild){if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){var child=newChild.firstChild;while(child){var next=child.nextSibling;this.insertBefore(child,refChild);child=next}return newChild}if(this.documentElement==null&&newChild.nodeType==ELEMENT_NODE){this.documentElement=newChild}return _insertBefore(this,newChild,refChild),newChild.ownerDocument=this,newChild},removeChild:function(oldChild){if(this.documentElement==oldChild){this.documentElement=null}return _removeChild(this,oldChild)},importNode:function(importedNode,deep){return importNode(this,importedNode,deep)},getElementById:function(id){var rtv=null;_visitNode(this.documentElement,function(node){if(node.nodeType==ELEMENT_NODE){if(node.getAttribute(\"id\")==id){rtv=node;return true}}});return rtv},createElement:function(tagName){var node=new Element;node.ownerDocument=this;node.nodeName=tagName;node.tagName=tagName;node.childNodes=new NodeList;var attrs=node.attributes=new NamedNodeMap;attrs._ownerElement=node;return node},createDocumentFragment:function(){var node=new DocumentFragment;node.ownerDocument=this;node.childNodes=new NodeList;return node},createTextNode:function(data){var node=new Text;node.ownerDocument=this;node.appendData(data);return node},createComment:function(data){var node=new Comment;node.ownerDocument=this;node.appendData(data);return node},createCDATASection:function(data){var node=new CDATASection;node.ownerDocument=this;node.appendData(data);return node},createProcessingInstruction:function(target,data){var node=new ProcessingInstruction;node.ownerDocument=this;node.tagName=node.target=target;node.nodeValue=node.data=data;return node},createAttribute:function(name){var node=new Attr;node.ownerDocument=this;node.name=name;node.nodeName=name;node.localName=name;node.specified=true;return node},createEntityReference:function(name){var node=new EntityReference;node.ownerDocument=this;node.nodeName=name;return node},createElementNS:function(namespaceURI,qualifiedName){var node=new Element;var pl=qualifiedName.split(\":\");var attrs=node.attributes=new NamedNodeMap;node.childNodes=new NodeList;node.ownerDocument=this;node.nodeName=qualifiedName;node.tagName=qualifiedName;node.namespaceURI=namespaceURI;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}attrs._ownerElement=node;return node},createAttributeNS:function(namespaceURI,qualifiedName){var node=new Attr;var pl=qualifiedName.split(\":\");node.ownerDocument=this;node.nodeName=qualifiedName;node.name=qualifiedName;node.namespaceURI=namespaceURI;node.specified=true;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}return node}};_extends(Document,Node);function Element(){this._nsMap={}}Element.prototype={nodeType:ELEMENT_NODE,hasAttribute:function(name){return this.getAttributeNode(name)!=null},getAttribute:function(name){var attr=this.getAttributeNode(name);return attr&&attr.value||\"\"},getAttributeNode:function(name){return this.attributes.getNamedItem(name)},setAttribute:function(name,value){var attr=this.ownerDocument.createAttribute(name);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},removeAttribute:function(name){var attr=this.getAttributeNode(name);attr&&this.removeAttributeNode(attr)},appendChild:function(newChild){if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){return this.insertBefore(newChild,null)}else{return _appendSingleChild(this,newChild)}},setAttributeNode:function(newAttr){return this.attributes.setNamedItem(newAttr)},setAttributeNodeNS:function(newAttr){return this.attributes.setNamedItemNS(newAttr)},removeAttributeNode:function(oldAttr){return this.attributes.removeNamedItem(oldAttr.nodeName)},removeAttributeNS:function(namespaceURI,localName){var old=this.getAttributeNodeNS(namespaceURI,localName);old&&this.removeAttributeNode(old)},hasAttributeNS:function(namespaceURI,localName){return this.getAttributeNodeNS(namespaceURI,localName)!=null},getAttributeNS:function(namespaceURI,localName){var attr=this.getAttributeNodeNS(namespaceURI,localName);return attr&&attr.value||\"\"},setAttributeNS:function(namespaceURI,qualifiedName,value){var attr=this.ownerDocument.createAttributeNS(namespaceURI,qualifiedName);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},getAttributeNodeNS:function(namespaceURI,localName){return this.attributes.getNamedItemNS(namespaceURI,localName)},getElementsByTagName:function(tagName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType==ELEMENT_NODE&&(tagName===\"*\"||node.tagName==tagName)){ls.push(node)}});return ls})},getElementsByTagNameNS:function(namespaceURI,localName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType===ELEMENT_NODE&&(namespaceURI===\"*\"||node.namespaceURI===namespaceURI)&&(localName===\"*\"||node.localName==localName)){ls.push(node)}});return ls})}};Document.prototype.getElementsByTagName=Element.prototype.getElementsByTagName;Document.prototype.getElementsByTagNameNS=Element.prototype.getElementsByTagNameNS;_extends(Element,Node);function Attr(){}Attr.prototype.nodeType=ATTRIBUTE_NODE;_extends(Attr,Node);function CharacterData(){}CharacterData.prototype={data:\"\",substringData:function(offset,count){return this.data.substring(offset,offset+count)},appendData:function(text){text=this.data+text;this.nodeValue=this.data=text;this.length=text.length},insertData:function(offset,text){this.replaceData(offset,0,text)},appendChild:function(newChild){throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])},deleteData:function(offset,count){this.replaceData(offset,count,\"\")},replaceData:function(offset,count,text){var start=this.data.substring(0,offset);var end=this.data.substring(offset+count);text=start+text+end;this.nodeValue=this.data=text;this.length=text.length}};_extends(CharacterData,Node);function Text(){}Text.prototype={nodeName:\"#text\",nodeType:TEXT_NODE,splitText:function(offset){var text=this.data;var newText=text.substring(offset);text=text.substring(0,offset);this.data=this.nodeValue=text;this.length=text.length;var newNode=this.ownerDocument.createTextNode(newText);if(this.parentNode){this.parentNode.insertBefore(newNode,this.nextSibling)}return newNode}};_extends(Text,CharacterData);function Comment(){}Comment.prototype={nodeName:\"#comment\",nodeType:COMMENT_NODE};_extends(Comment,CharacterData);function CDATASection(){}CDATASection.prototype={nodeName:\"#cdata-section\",nodeType:CDATA_SECTION_NODE};_extends(CDATASection,CharacterData);function DocumentType(){}DocumentType.prototype.nodeType=DOCUMENT_TYPE_NODE;_extends(DocumentType,Node);function Notation(){}Notation.prototype.nodeType=NOTATION_NODE;_extends(Notation,Node);function Entity(){}Entity.prototype.nodeType=ENTITY_NODE;_extends(Entity,Node);function EntityReference(){}EntityReference.prototype.nodeType=ENTITY_REFERENCE_NODE;_extends(EntityReference,Node);function DocumentFragment(){}DocumentFragment.prototype.nodeName=\"#document-fragment\";DocumentFragment.prototype.nodeType=DOCUMENT_FRAGMENT_NODE;_extends(DocumentFragment,Node);function ProcessingInstruction(){}ProcessingInstruction.prototype.nodeType=PROCESSING_INSTRUCTION_NODE;_extends(ProcessingInstruction,Node);function XMLSerializer(){}XMLSerializer.prototype.serializeToString=function(node,isHtml,nodeFilter){return nodeSerializeToString.call(node,isHtml,nodeFilter)};Node.prototype.toString=nodeSerializeToString;function nodeSerializeToString(isHtml,nodeFilter){var buf=[];var refNode=this.nodeType==9?this.documentElement:this;var prefix=refNode.prefix;var uri=refNode.namespaceURI;if(uri&&prefix==null){var prefix=refNode.lookupPrefix(uri);if(prefix==null){var visibleNamespaces=[{namespace:uri,prefix:null}]}}serializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);return buf.join(\"\")}function needNamespaceDefine(node,isHTML,visibleNamespaces){var prefix=node.prefix||\"\";var uri=node.namespaceURI;if(!prefix&&!uri){return false}if(prefix===\"xml\"&&uri===\"http://www.w3.org/XML/1998/namespace\"||uri==\"http://www.w3.org/2000/xmlns/\"){return false}var i=visibleNamespaces.length;while(i--){var ns=visibleNamespaces[i];if(ns.prefix==prefix){return ns.namespace!=uri}}return true}function serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){if(nodeFilter){node=nodeFilter(node);if(node){if(typeof node==\"string\"){buf.push(node);return}}else{return}}switch(node.nodeType){case ELEMENT_NODE:if(!visibleNamespaces)visibleNamespaces=[];var startVisibleNamespaces=visibleNamespaces.length;var attrs=node.attributes;var len=attrs.length;var child=node.firstChild;var nodeName=node.tagName;isHTML=htmlns===node.namespaceURI||isHTML;buf.push(\"<\",nodeName);for(var i=0;i<len;i++){var attr=attrs.item(i);if(attr.prefix==\"xmlns\"){visibleNamespaces.push({prefix:attr.localName,namespace:attr.value})}else if(attr.nodeName==\"xmlns\"){visibleNamespaces.push({prefix:\"\",namespace:attr.value})}}for(var i=0;i<len;i++){var attr=attrs.item(i);if(needNamespaceDefine(attr,isHTML,visibleNamespaces)){var prefix=attr.prefix||\"\";var uri=attr.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}serializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces)}if(needNamespaceDefine(node,isHTML,visibleNamespaces)){var prefix=node.prefix||\"\";var uri=node.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}if(child||isHTML&&!/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){buf.push(\">\");if(isHTML&&/^script$/i.test(nodeName)){while(child){if(child.data){buf.push(child.data)}else{serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces)}child=child.nextSibling}}else{while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}}buf.push(\"</\",nodeName,\">\")}else{buf.push(\"/>\")}return;case DOCUMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var child=node.firstChild;while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}return;case ATTRIBUTE_NODE:return buf.push(\" \",node.name,'=\"',node.value.replace(/[<&\"]/g,_xmlEncoder),'\"');case TEXT_NODE:return buf.push(node.data.replace(/[<&]/g,_xmlEncoder));case CDATA_SECTION_NODE:return buf.push(\"<![CDATA[\",node.data,\"]]>\");case COMMENT_NODE:return buf.push(\"\\x3c!--\",node.data,\"--\\x3e\");case DOCUMENT_TYPE_NODE:var pubid=node.publicId;var sysid=node.systemId;buf.push(\"<!DOCTYPE \",node.name);if(pubid){buf.push(' PUBLIC \"',pubid);if(sysid&&sysid!=\".\"){buf.push('\" \"',sysid)}buf.push('\">')}else if(sysid&&sysid!=\".\"){buf.push(' SYSTEM \"',sysid,'\">')}else{var sub=node.internalSubset;if(sub){buf.push(\" [\",sub,\"]\")}buf.push(\">\")}return;case PROCESSING_INSTRUCTION_NODE:return buf.push(\"<?\",node.target,\" \",node.data,\"?>\");case ENTITY_REFERENCE_NODE:return buf.push(\"&\",node.nodeName,\";\");default:buf.push(\"??\",node.nodeName)}}function importNode(doc,node,deep){var node2;switch(node.nodeType){case ELEMENT_NODE:node2=node.cloneNode(false);node2.ownerDocument=doc;case DOCUMENT_FRAGMENT_NODE:break;case ATTRIBUTE_NODE:deep=true;break}if(!node2){node2=node.cloneNode(false)}node2.ownerDocument=doc;node2.parentNode=null;if(deep){var child=node.firstChild;while(child){node2.appendChild(importNode(doc,child,deep));child=child.nextSibling}}return node2}function cloneNode(doc,node,deep){var node2=new node.constructor;for(var n in node){var v=node[n];if(typeof v!=\"object\"){if(v!=node2[n]){node2[n]=v}}}if(node.childNodes){node2.childNodes=new NodeList}node2.ownerDocument=doc;switch(node2.nodeType){case ELEMENT_NODE:var attrs=node.attributes;var attrs2=node2.attributes=new NamedNodeMap;var len=attrs.length;attrs2._ownerElement=node2;for(var i=0;i<len;i++){node2.setAttributeNode(cloneNode(doc,attrs.item(i),true))}break;case ATTRIBUTE_NODE:deep=true}if(deep){var child=node.firstChild;while(child){node2.appendChild(cloneNode(doc,child,deep));child=child.nextSibling}}return node2}function __set__(object,key,value){object[key]=value}try{if(Object.defineProperty){Object.defineProperty(LiveNodeList.prototype,\"length\",{get:function(){_updateLiveList(this);return this.$$length}});Object.defineProperty(Node.prototype,\"textContent\",{get:function(){return getTextContent(this)},set:function(data){switch(this.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:while(this.firstChild){this.removeChild(this.firstChild)}if(data||String(data)){this.appendChild(this.ownerDocument.createTextNode(data))}break;default:this.data=data;this.value=data;this.nodeValue=data}}});function getTextContent(node){switch(node.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var buf=[];node=node.firstChild;while(node){if(node.nodeType!==7&&node.nodeType!==8){buf.push(getTextContent(node))}node=node.nextSibling}return buf.join(\"\");default:return node.nodeValue}}__set__=function(object,key,value){object[\"$$\"+key]=value}}}catch(e){}exports.DOMImplementation=DOMImplementation;exports.XMLSerializer=XMLSerializer},{}],21:[function(require,module,exports){var nameStartChar=/[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;var nameChar=new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");var tagNamePattern=new RegExp(\"^\"+nameStartChar.source+nameChar.source+\"*(?::\"+nameStartChar.source+nameChar.source+\"*)?$\");var S_TAG=0;var S_ATTR=1;var S_ATTR_SPACE=2;var S_EQ=3;var S_ATTR_NOQUOT_VALUE=4;var S_ATTR_END=5;var S_TAG_SPACE=6;var S_TAG_CLOSE=7;function XMLReader(){}XMLReader.prototype={parse:function(source,defaultNSMap,entityMap){var domBuilder=this.domBuilder;domBuilder.startDocument();_copy(defaultNSMap,defaultNSMap={});parse(source,defaultNSMap,entityMap,domBuilder,this.errorHandler);domBuilder.endDocument()}};function parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){function fixedFromCharCode(code){if(code>65535){code-=65536;var surrogate1=55296+(code>>10),surrogate2=56320+(code&1023);return String.fromCharCode(surrogate1,surrogate2)}else{return String.fromCharCode(code)}}function entityReplacer(a){var k=a.slice(1,-1);if(k in entityMap){return entityMap[k]}else if(k.charAt(0)===\"#\"){return fixedFromCharCode(parseInt(k.substr(1).replace(\"x\",\"0x\")))}else{errorHandler.error(\"entity not found:\"+a);return a}}function appendText(end){if(end>start){var xt=source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);locator&&position(start);domBuilder.characters(xt,0,end-start);start=end}}function position(p,m){while(p>=lineEnd&&(m=linePattern.exec(source))){lineStart=m.index;lineEnd=lineStart+m[0].length;locator.lineNumber++}locator.columnNumber=p-lineStart+1}var lineStart=0;var lineEnd=0;var linePattern=/.*(?:\\r\\n?|\\n)|.*$/g;var locator=domBuilder.locator;var parseStack=[{currentNSMap:defaultNSMapCopy}];var closeMap={};var start=0;while(true){try{var tagStart=source.indexOf(\"<\",start);if(tagStart<0){if(!source.substr(start).match(/^\\s*$/)){var doc=domBuilder.doc;var text=doc.createTextNode(source.substr(start));doc.appendChild(text);domBuilder.currentElement=text}return}if(tagStart>start){appendText(tagStart)}switch(source.charAt(tagStart+1)){case\"/\":var end=source.indexOf(\">\",tagStart+3);var tagName=source.substring(tagStart+2,end);var config=parseStack.pop();if(end<0){tagName=source.substring(tagStart+2).replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" is not complete:\"+config.tagName);end=tagStart+1+tagName.length}else if(tagName.match(/\\s</)){tagName=tagName.replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" maybe not complete\");end=tagStart+1+tagName.length}var localNSMap=config.localNSMap;var endMatch=config.tagName==tagName;var endIgnoreCaseMach=endMatch||config.tagName&&config.tagName.toLowerCase()==tagName.toLowerCase();if(endIgnoreCaseMach){domBuilder.endElement(config.uri,config.localName,tagName);if(localNSMap){for(var prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}if(!endMatch){errorHandler.fatalError(\"end tag name: \"+tagName+\" is not match the current start tagName:\"+config.tagName)}}else{parseStack.push(config)}end++;break;case\"?\":locator&&position(tagStart);end=parseInstruction(source,tagStart,domBuilder);break;case\"!\":locator&&position(tagStart);end=parseDCC(source,tagStart,domBuilder,errorHandler);break;default:locator&&position(tagStart);var el=new ElementAttributes;var currentNSMap=parseStack[parseStack.length-1].currentNSMap;var end=parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);var len=el.length;if(!el.closed&&fixSelfClosed(source,end,el.tagName,closeMap)){el.closed=true;if(!entityMap.nbsp){errorHandler.warning(\"unclosed xml attribute\")}}if(locator&&len){var locator2=copyLocator(locator,{});for(var i=0;i<len;i++){var a=el[i];position(a.offset);a.locator=copyLocator(locator,{})}domBuilder.locator=locator2;if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}domBuilder.locator=locator}else{if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}}if(el.uri===\"http://www.w3.org/1999/xhtml\"&&!el.closed){end=parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)}else{end++}}}catch(e){errorHandler.error(\"element parse error: \"+e);end=-1}if(end>start){start=end}else{appendText(Math.max(tagStart,start)+1)}}}function copyLocator(f,t){t.lineNumber=f.lineNumber;t.columnNumber=f.columnNumber;return t}function parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){var attrName;var value;var p=++start;var s=S_TAG;while(true){var c=source.charAt(p);switch(c){case\"=\":if(s===S_ATTR){attrName=source.slice(start,p);s=S_EQ}else if(s===S_ATTR_SPACE){s=S_EQ}else{throw new Error(\"attribute equal must after attrName\")}break;case\"'\":case'\"':if(s===S_EQ||s===S_ATTR){if(s===S_ATTR){errorHandler.warning('attribute value must after \"=\"');attrName=source.slice(start,p)}start=p+1;p=source.indexOf(c,start);if(p>0){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start-1);s=S_ATTR_END}else{throw new Error(\"attribute value no end '\"+c+\"' match\")}}else if(s==S_ATTR_NOQUOT_VALUE){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start);errorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+\")!!\");start=p+1;s=S_ATTR_END}else{throw new Error('attribute value must after \"=\"')}break;case\"/\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:s=S_TAG_CLOSE;el.closed=true;case S_ATTR_NOQUOT_VALUE:case S_ATTR:case S_ATTR_SPACE:break;default:throw new Error(\"attribute invalid close char('/')\")}break;case\"\":errorHandler.error(\"unexpected end of input\");if(s==S_TAG){el.setTagName(source.slice(start,p))}return p;case\">\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:break;case S_ATTR_NOQUOT_VALUE:case S_ATTR:value=source.slice(start,p);if(value.slice(-1)===\"/\"){el.closed=true;value=value.slice(0,-1)}case S_ATTR_SPACE:if(s===S_ATTR_SPACE){value=attrName}if(s==S_ATTR_NOQUOT_VALUE){errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value.replace(/&#?\\w+;/g,entityReplacer),start)}else{if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!value.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')}el.add(value,value,start)}break;case S_EQ:throw new Error(\"attribute value missed!!\")}return p;case\"\":c=\" \";default:if(c<=\" \"){switch(s){case S_TAG:el.setTagName(source.slice(start,p));s=S_TAG_SPACE;break;case S_ATTR:attrName=source.slice(start,p);s=S_ATTR_SPACE;break;case S_ATTR_NOQUOT_VALUE:var value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value,start);case S_ATTR_END:s=S_TAG_SPACE;break}}else{switch(s){case S_ATTR_SPACE:var tagName=el.tagName;if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!attrName.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')}el.add(attrName,attrName,start);start=p;s=S_ATTR;break;case S_ATTR_END:errorHandler.warning('attribute space is required\"'+attrName+'\"!!');case S_TAG_SPACE:s=S_ATTR;start=p;break;case S_EQ:s=S_ATTR_NOQUOT_VALUE;start=p;break;case S_TAG_CLOSE:throw new Error(\"elements closed character '/' and '>' must be connected to\")}}}p++}}function appendElement(el,domBuilder,currentNSMap){var tagName=el.tagName;var localNSMap=null;var i=el.length;while(i--){var a=el[i];var qName=a.qName;var value=a.value;var nsp=qName.indexOf(\":\");if(nsp>0){var prefix=a.prefix=qName.slice(0,nsp);var localName=qName.slice(nsp+1);var nsPrefix=prefix===\"xmlns\"&&localName}else{localName=qName;prefix=null;nsPrefix=qName===\"xmlns\"&&\"\"}a.localName=localName;if(nsPrefix!==false){if(localNSMap==null){localNSMap={};_copy(currentNSMap,currentNSMap={})}currentNSMap[nsPrefix]=localNSMap[nsPrefix]=value;a.uri=\"http://www.w3.org/2000/xmlns/\";domBuilder.startPrefixMapping(nsPrefix,value)}}var i=el.length;while(i--){a=el[i];var prefix=a.prefix;if(prefix){if(prefix===\"xml\"){a.uri=\"http://www.w3.org/XML/1998/namespace\"}if(prefix!==\"xmlns\"){a.uri=currentNSMap[prefix||\"\"]}}}var nsp=tagName.indexOf(\":\");if(nsp>0){prefix=el.prefix=tagName.slice(0,nsp);localName=el.localName=tagName.slice(nsp+1)}else{prefix=null;localName=el.localName=tagName}var ns=el.uri=currentNSMap[prefix||\"\"];domBuilder.startElement(ns,localName,tagName,el);if(el.closed){domBuilder.endElement(ns,localName,tagName);if(localNSMap){for(prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}}else{el.currentNSMap=currentNSMap;el.localNSMap=localNSMap;return true}}function parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){if(/^(?:script|textarea)$/i.test(tagName)){var elEndStart=source.indexOf(\"</\"+tagName+\">\",elStartEnd);var text=source.substring(elStartEnd+1,elEndStart);if(/[&<]/.test(text)){if(/^script$/i.test(tagName)){domBuilder.characters(text,0,text.length);return elEndStart}text=text.replace(/&#?\\w+;/g,entityReplacer);domBuilder.characters(text,0,text.length);return elEndStart}}return elStartEnd+1}function fixSelfClosed(source,elStartEnd,tagName,closeMap){var pos=closeMap[tagName];if(pos==null){pos=source.lastIndexOf(\"</\"+tagName+\">\");if(pos<elStartEnd){pos=source.lastIndexOf(\"</\"+tagName)}closeMap[tagName]=pos}return pos<elStartEnd}function _copy(source,target){for(var n in source){target[n]=source[n]}}function parseDCC(source,start,domBuilder,errorHandler){var next=source.charAt(start+2);switch(next){case\"-\":if(source.charAt(start+3)===\"-\"){var end=source.indexOf(\"--\\x3e\",start+4);if(end>start){domBuilder.comment(source,start+4,end-start-4);return end+3}else{errorHandler.error(\"Unclosed comment\");return-1}}else{return-1}default:if(source.substr(start+3,6)==\"CDATA[\"){var end=source.indexOf(\"]]>\",start+9);domBuilder.startCDATA();domBuilder.characters(source,start+9,end-start-9);domBuilder.endCDATA();return end+3}var matchs=split(source,start);var len=matchs.length;if(len>1&&/!doctype/i.test(matchs[0][0])){var name=matchs[1][0];var pubid=len>3&&/^public$/i.test(matchs[2][0])&&matchs[3][0];var sysid=len>4&&matchs[4][0];var lastMatch=matchs[len-1];domBuilder.startDTD(name,pubid&&pubid.replace(/^(['\"])(.*?)\\1$/,\"$2\"),sysid&&sysid.replace(/^(['\"])(.*?)\\1$/,\"$2\"));domBuilder.endDTD();return lastMatch.index+lastMatch[0].length}}return-1}function parseInstruction(source,start,domBuilder){var end=source.indexOf(\"?>\",start);if(end){var match=source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);if(match){var len=match[0].length;domBuilder.processingInstruction(match[1],match[2]);return end+2}else{return-1}}return-1}function ElementAttributes(source){}ElementAttributes.prototype={setTagName:function(tagName){if(!tagNamePattern.test(tagName)){throw new Error(\"invalid tagName:\"+tagName)}this.tagName=tagName},add:function(qName,value,offset){if(!tagNamePattern.test(qName)){throw new Error(\"invalid attribute:\"+qName)}this[this.length++]={qName:qName,value:value,offset:offset}},length:0,getLocalName:function(i){return this[i].localName},getLocator:function(i){return this[i].locator},getQName:function(i){return this[i].qName},getURI:function(i){return this[i].uri},getValue:function(i){return this[i].value}};function _set_proto_(thiz,parent){thiz.__proto__=parent;return thiz}if(!(_set_proto_({},_set_proto_.prototype)instanceof _set_proto_)){_set_proto_=function(thiz,parent){function p(){}p.prototype=parent;p=new p;for(parent in thiz){p[parent]=thiz[parent]}return p}}function split(source,start){var match;var buf=[];var reg=/'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;reg.lastIndex=start;reg.exec(source);while(match=reg.exec(source)){buf.push(match);if(match[1])return buf}}exports.XMLReader=XMLReader},{}],\"/src/js/docxtemplater.js\":[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");DocUtils.traits=require(\"./traits\");DocUtils.moduleWrapper=require(\"./module-wrapper\");var wrapper=DocUtils.moduleWrapper;var Docxtemplater=function(){function Docxtemplater(){_classCallCheck(this,Docxtemplater);if(arguments.length>0){throw new Error(\"The constructor with parameters have been removed in docxtemplater 3.0, please check the upgrade guide.\")}this.compiled={};this.modules=[];this.setOptions({})}_createClass(Docxtemplater,[{key:\"attachModule\",value:function attachModule(module){this.modules.push(wrapper(module));return this}},{key:\"setOptions\",value:function setOptions(options){var _this=this;this.options=options;Object.keys(DocUtils.defaults).forEach(function(key){var defaultValue=DocUtils.defaults[key];_this[key]=_this.options[key]!=null?_this.options[key]:defaultValue});if(this.zip){this.updateFileTypeConfig()}return this}},{key:\"loadZip\",value:function loadZip(zip){if(zip.loadAsync){throw new Error(\"Docxtemplater doesn't handle JSZip version >=3, see changelog\")}this.zip=zip;this.updateFileTypeConfig();return this}},{key:\"compileFile\",value:function compileFile(fileName){var currentFile=this.createTemplateClass(fileName);currentFile.parse();this.compiled[fileName]=currentFile}},{key:\"compile\",value:function compile(){this.templatedFiles=this.fileTypeConfig.getTemplatedFiles(this.zip);return this}},{key:\"updateFileTypeConfig\",value:function updateFileTypeConfig(){this.fileType=this.zip.files[\"word/document.xml\"]?\"docx\":\"pptx\";this.fileTypeConfig=this.options.fileTypeConfig||Docxtemplater.FileTypeConfig[this.fileType];return this}},{key:\"render\",value:function render(){var _this2=this;this.options.xmlFileNames=[];this.modules=this.fileTypeConfig.baseModules.map(function(moduleFunction){return moduleFunction()}).concat(this.modules);this.options=this.modules.reduce(function(options,module){return module.optionsTransformer(options,_this2)},this.options);this.xmlDocuments=this.options.xmlFileNames.reduce(function(xmlDocuments,fileName){var content=_this2.zip.files[fileName].asText();xmlDocuments[fileName]=DocUtils.str2xml(content);return xmlDocuments},{});this.modules.forEach(function(module){module.set({zip:_this2.zip,xmlDocuments:_this2.xmlDocuments,data:_this2.data})});this.compile();this.modules.forEach(function(module){module.set({compiled:_this2.compiled})});this.templatedFiles.forEach(function(fileName){if(_this2.zip.files[fileName]!=null){_this2.compileFile(fileName)}});this.mapper=this.modules.reduce(function(value,module){return module.getRenderedMap(value)},{});Object.keys(this.mapper).forEach(function(to){var mapped=_this2.mapper[to];var from=mapped.from;var currentFile=_this2.compiled[from];currentFile.setTags(mapped.data);currentFile.render(to);_this2.zip.file(to,currentFile.content)});Object.keys(this.xmlDocuments).forEach(function(fileName){_this2.zip.remove(fileName);var content=DocUtils.xml2str(_this2.xmlDocuments[fileName]);return _this2.zip.file(fileName,content,{})});return this}},{key:\"setData\",value:function setData(data){this.data=data;return this}},{key:\"getZip\",value:function getZip(){return this.zip}},{key:\"createTemplateClass\",value:function createTemplateClass(path){var usedData=this.zip.files[path].asText();return this.createTemplateClassFromContent(usedData,path)}},{key:\"createTemplateClassFromContent\",value:function createTemplateClassFromContent(content,filePath){var _this3=this;var xmltOptions={filePath:filePath};Object.keys(DocUtils.defaults).forEach(function(key){xmltOptions[key]=_this3[key]});xmltOptions.fileTypeConfig=this.fileTypeConfig;xmltOptions.modules=this.modules;return new Docxtemplater.XmlTemplater(content,xmltOptions)}},{key:\"getFullText\",value:function getFullText(path){return this.createTemplateClass(path||this.fileTypeConfig.textPath).getFullText()}},{key:\"getTemplatedFiles\",value:function getTemplatedFiles(){this.compile();return this.templatedFiles}}]);return Docxtemplater}();Docxtemplater.DocUtils=require(\"./doc-utils\");Docxtemplater.Errors=require(\"./errors\");Docxtemplater.XmlTemplater=require(\"./xml-templater\");Docxtemplater.FileTypeConfig=require(\"./file-type-config\");Docxtemplater.XmlMatcher=require(\"./xml-matcher\");module.exports=Docxtemplater},{\"./doc-utils\":1,\"./errors\":2,\"./file-type-config\":3,\"./module-wrapper\":7,\"./traits\":16,\"./xml-matcher\":17,\"./xml-templater\":18}]},{},[])(\"/src/js/docxtemplater.js\")});","/*!\n\nJSZip - A Javascript class for generating and reading zip files\n<http://stuartk.com/jszip>\n\n(c) 2009-2014 Stuart Knightley <stuart [at] stuartk.com>\nDual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip/master/LICENSE.markdown.\n\nJSZip uses the library pako released under the MIT license :\nhttps://github.com/nodeca/pako/blob/master/LICENSE\n*/\n!function(a){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=a();else if(\"function\"==typeof define&&define.amd)define([],a);else{var b;b=\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:this,b.JSZip=a()}}(function(){return function a(b,c,d){function e(g,h){if(!c[g]){if(!b[g]){var i=\"function\"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);var j=new Error(\"Cannot find module '\"+g+\"'\");throw j.code=\"MODULE_NOT_FOUND\",j}var k=c[g]={exports:{}};b[g][0].call(k.exports,function(a){var c=b[g][1][a];return e(c?c:a)},k,k.exports,a,b,c,d)}return c[g].exports}for(var f=\"function\"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}({1:[function(a,b,c){\"use strict\";function d(a){if(a){this.data=a,this.length=this.data.length,this.index=0,this.zero=0;for(var b=0;b<this.data.length;b++)a[b]=255&a[b]}}var e=a(\"./dataReader\");d.prototype=new e,d.prototype.byteAt=function(a){return this.data[this.zero+a]},d.prototype.lastIndexOfSignature=function(a){for(var b=a.charCodeAt(0),c=a.charCodeAt(1),d=a.charCodeAt(2),e=a.charCodeAt(3),f=this.length-4;f>=0;--f)if(this.data[f]===b&&this.data[f+1]===c&&this.data[f+2]===d&&this.data[f+3]===e)return f-this.zero;return-1},d.prototype.readData=function(a){if(this.checkOffset(a),0===a)return[];var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./dataReader\":6}],2:[function(a,b,c){\"use strict\";var d=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";c.encode=function(a,b){for(var c,e,f,g,h,i,j,k=\"\",l=0;l<a.length;)c=a.charCodeAt(l++),e=a.charCodeAt(l++),f=a.charCodeAt(l++),g=c>>2,h=(3&c)<<4|e>>4,i=(15&e)<<2|f>>6,j=63&f,isNaN(e)?i=j=64:isNaN(f)&&(j=64),k=k+d.charAt(g)+d.charAt(h)+d.charAt(i)+d.charAt(j);return k},c.decode=function(a,b){var c,e,f,g,h,i,j,k=\"\",l=0;for(a=a.replace(/[^A-Za-z0-9\\+\\/\\=]/g,\"\");l<a.length;)g=d.indexOf(a.charAt(l++)),h=d.indexOf(a.charAt(l++)),i=d.indexOf(a.charAt(l++)),j=d.indexOf(a.charAt(l++)),c=g<<2|h>>4,e=(15&h)<<4|i>>2,f=(3&i)<<6|j,k+=String.fromCharCode(c),64!=i&&(k+=String.fromCharCode(e)),64!=j&&(k+=String.fromCharCode(f));return k}},{}],3:[function(a,b,c){\"use strict\";function d(){this.compressedSize=0,this.uncompressedSize=0,this.crc32=0,this.compressionMethod=null,this.compressedContent=null}d.prototype={getContent:function(){return null},getCompressedContent:function(){return null}},b.exports=d},{}],4:[function(a,b,c){\"use strict\";c.STORE={magic:\"\\0\\0\",compress:function(a,b){return a},uncompress:function(a){return a},compressInputType:null,uncompressInputType:null},c.DEFLATE=a(\"./flate\")},{\"./flate\":9}],5:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=[0,1996959894,3993919788,2567524794,124634137,1886057615,3915621685,2657392035,249268274,2044508324,3772115230,2547177864,162941995,2125561021,3887607047,2428444049,498536548,1789927666,4089016648,2227061214,450548861,1843258603,4107580753,2211677639,325883990,1684777152,4251122042,2321926636,335633487,1661365465,4195302755,2366115317,997073096,1281953886,3579855332,2724688242,1006888145,1258607687,3524101629,2768942443,901097722,1119000684,3686517206,2898065728,853044451,1172266101,3705015759,2882616665,651767980,1373503546,3369554304,3218104598,565507253,1454621731,3485111705,3099436303,671266974,1594198024,3322730930,2970347812,795835527,1483230225,3244367275,3060149565,1994146192,31158534,2563907772,4023717930,1907459465,112637215,2680153253,3904427059,2013776290,251722036,2517215374,3775830040,2137656763,141376813,2439277719,3865271297,1802195444,476864866,2238001368,4066508878,1812370925,453092731,2181625025,4111451223,1706088902,314042704,2344532202,4240017532,1658658271,366619977,2362670323,4224994405,1303535960,984961486,2747007092,3569037538,1256170817,1037604311,2765210733,3554079995,1131014506,879679996,2909243462,3663771856,1141124467,855842277,2852801631,3708648649,1342533948,654459306,3188396048,3373015174,1466479909,544179635,3110523913,3462522015,1591671054,702138776,2966460450,3352799412,1504918807,783551873,3082640443,3233442989,3988292384,2596254646,62317068,1957810842,3939845945,2647816111,81470997,1943803523,3814918930,2489596804,225274430,2053790376,3826175755,2466906013,167816743,2097651377,4027552580,2265490386,503444072,1762050814,4150417245,2154129355,426522225,1852507879,4275313526,2312317920,282753626,1742555852,4189708143,2394877945,397917763,1622183637,3604390888,2714866558,953729732,1340076626,3518719985,2797360999,1068828381,1219638859,3624741850,2936675148,906185462,1090812512,3747672003,2825379669,829329135,1181335161,3412177804,3160834842,628085408,1382605366,3423369109,3138078467,570562233,1426400815,3317316542,2998733608,733239954,1555261956,3268935591,3050360625,752459403,1541320221,2607071920,3965973030,1969922972,40735498,2617837225,3943577151,1913087877,83908371,2512341634,3803740692,2075208622,213261112,2463272603,3855990285,2094854071,198958881,2262029012,4057260610,1759359992,534414190,2176718541,4139329115,1873836001,414664567,2282248934,4279200368,1711684554,285281116,2405801727,4167216745,1634467795,376229701,2685067896,3608007406,1308918612,956543938,2808555105,3495958263,1231636301,1047427035,2932959818,3654703836,1088359270,936918e3,2847714899,3736837829,1202900863,817233897,3183342108,3401237130,1404277552,615818150,3134207493,3453421203,1423857449,601450431,3009837614,3294710456,1567103746,711928724,3020668471,3272380065,1510334235,755167117];b.exports=function(a,b){if(\"undefined\"==typeof a||!a.length)return 0;var c=\"string\"!==d.getTypeOf(a);\"undefined\"==typeof b&&(b=0);var f=0,g=0,h=0;b^=-1;for(var i=0,j=a.length;i<j;i++)h=c?a[i]:a.charCodeAt(i),g=255&(b^h),f=e[g],b=b>>>8^f;return b^-1}},{\"./utils\":22}],6:[function(a,b,c){\"use strict\";function d(a){this.data=null,this.length=0,this.index=0,this.zero=0}var e=a(\"./utils\");d.prototype={checkOffset:function(a){this.checkIndex(this.index+a)},checkIndex:function(a){if(this.length<this.zero+a||a<0)throw new Error(\"End of data reached (data length = \"+this.length+\", asked index = \"+a+\"). Corrupted zip ?\")},setIndex:function(a){this.checkIndex(a),this.index=a},skip:function(a){this.setIndex(this.index+a)},byteAt:function(a){},readInt:function(a){var b,c=0;for(this.checkOffset(a),b=this.index+a-1;b>=this.index;b--)c=(c<<8)+this.byteAt(b);return this.index+=a,c},readString:function(a){return e.transformTo(\"string\",this.readData(a))},readData:function(a){},lastIndexOfSignature:function(a){},readDate:function(){var a=this.readInt(4);return new Date((a>>25&127)+1980,(a>>21&15)-1,a>>16&31,a>>11&31,a>>5&63,(31&a)<<1)}},b.exports=d},{\"./utils\":22}],7:[function(a,b,c){\"use strict\";c.base64=!1,c.binary=!1,c.dir=!1,c.createFolders=!1,c.date=null,c.compression=null,c.compressionOptions=null,c.comment=null,c.unixPermissions=null,c.dosPermissions=null},{}],8:[function(a,b,c){\"use strict\";var d=a(\"./utils\");c.string2binary=function(a){return d.string2binary(a)},c.string2Uint8Array=function(a){return d.transformTo(\"uint8array\",a)},c.uint8Array2String=function(a){return d.transformTo(\"string\",a)},c.string2Blob=function(a){var b=d.transformTo(\"arraybuffer\",a);return d.arrayBuffer2Blob(b)},c.arrayBuffer2Blob=function(a){return d.arrayBuffer2Blob(a)},c.transformTo=function(a,b){return d.transformTo(a,b)},c.getTypeOf=function(a){return d.getTypeOf(a)},c.checkSupport=function(a){return d.checkSupport(a)},c.MAX_VALUE_16BITS=d.MAX_VALUE_16BITS,c.MAX_VALUE_32BITS=d.MAX_VALUE_32BITS,c.pretty=function(a){return d.pretty(a)},c.findCompression=function(a){return d.findCompression(a)},c.isRegExp=function(a){return d.isRegExp(a)}},{\"./utils\":22}],9:[function(a,b,c){\"use strict\";var d=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Uint32Array,e=a(\"pako\");c.uncompressInputType=d?\"uint8array\":\"array\",c.compressInputType=d?\"uint8array\":\"array\",c.magic=\"\\b\\0\",c.compress=function(a,b){return e.deflateRaw(a,{level:b.level||-1})},c.uncompress=function(a){return e.inflateRaw(a)}},{pako:25}],10:[function(a,b,c){\"use strict\";function d(a,b){return this instanceof d?(this.files={},this.comment=null,this.root=\"\",a&&this.load(a,b),void(this.clone=function(){var a=new d;for(var b in this)\"function\"!=typeof this[b]&&(a[b]=this[b]);return a})):new d(a,b)}var e=a(\"./base64\");d.prototype=a(\"./object\"),d.prototype.load=a(\"./load\"),d.support=a(\"./support\"),d.defaults=a(\"./defaults\"),d.utils=a(\"./deprecatedPublicUtils\"),d.base64={encode:function(a){return e.encode(a)},decode:function(a){return e.decode(a)}},d.compressions=a(\"./compressions\"),b.exports=d},{\"./base64\":2,\"./compressions\":4,\"./defaults\":7,\"./deprecatedPublicUtils\":8,\"./load\":11,\"./object\":14,\"./support\":18}],11:[function(a,b,c){\"use strict\";var d=a(\"./base64\"),e=a(\"./utf8\"),f=a(\"./utils\"),g=a(\"./zipEntries\");b.exports=function(a,b){var c,h,i,j;for(b=f.extend(b||{},{base64:!1,checkCRC32:!1,optimizedBinaryString:!1,createFolders:!1,decodeFileName:e.utf8decode}),b.base64&&(a=d.decode(a)),h=new g(a,b),c=h.files,i=0;i<c.length;i++)j=c[i],this.file(j.fileNameStr,j.decompressed,{binary:!0,optimizedBinaryString:!0,date:j.date,dir:j.dir,comment:j.fileCommentStr.length?j.fileCommentStr:null,unixPermissions:j.unixPermissions,dosPermissions:j.dosPermissions,createFolders:b.createFolders});return h.zipComment.length&&(this.comment=h.zipComment),this}},{\"./base64\":2,\"./utf8\":21,\"./utils\":22,\"./zipEntries\":23}],12:[function(a,b,c){(function(a){\"use strict\";b.exports=function(b,c){return new a(b,c)},b.exports.test=function(b){return a.isBuffer(b)}}).call(this,\"undefined\"!=typeof Buffer?Buffer:void 0)},{}],13:[function(a,b,c){\"use strict\";function d(a){this.data=a,this.length=this.data.length,this.index=0,this.zero=0}var e=a(\"./uint8ArrayReader\");d.prototype=new e,d.prototype.readData=function(a){this.checkOffset(a);var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./uint8ArrayReader\":19}],14:[function(a,b,c){\"use strict\";var d=a(\"./support\"),e=a(\"./utils\"),f=a(\"./crc32\"),g=a(\"./signature\"),h=a(\"./defaults\"),i=a(\"./base64\"),j=a(\"./compressions\"),k=a(\"./compressedObject\"),l=a(\"./nodeBuffer\"),m=a(\"./utf8\"),n=a(\"./stringWriter\"),o=a(\"./uint8ArrayWriter\"),p=function(a){if(a._data instanceof k&&(a._data=a._data.getContent(),a.options.binary=!0,a.options.base64=!1,\"uint8array\"===e.getTypeOf(a._data))){var b=a._data;a._data=new Uint8Array(b.length),0!==b.length&&a._data.set(b,0)}return a._data},q=function(a){var b=p(a),c=e.getTypeOf(b);return\"string\"===c?!a.options.binary&&d.nodebuffer?l(b,\"utf-8\"):a.asBinary():b},r=function(a){var b=p(this);return null===b||\"undefined\"==typeof b?\"\":(this.options.base64&&(b=i.decode(b)),b=a&&this.options.binary?D.utf8decode(b):e.transformTo(\"string\",b),a||this.options.binary||(b=e.transformTo(\"string\",D.utf8encode(b))),b)},s=function(a,b,c){this.name=a,this.dir=c.dir,this.date=c.date,this.comment=c.comment,this.unixPermissions=c.unixPermissions,this.dosPermissions=c.dosPermissions,this._data=b,this.options=c,this._initialMetadata={dir:c.dir,date:c.date}};s.prototype={asText:function(){return r.call(this,!0)},asBinary:function(){return r.call(this,!1)},asNodeBuffer:function(){var a=q(this);return e.transformTo(\"nodebuffer\",a)},asUint8Array:function(){var a=q(this);return e.transformTo(\"uint8array\",a)},asArrayBuffer:function(){return this.asUint8Array().buffer}};var t=function(a,b){var c,d=\"\";for(c=0;c<b;c++)d+=String.fromCharCode(255&a),a>>>=8;return d},u=function(a){return a=a||{},a.base64!==!0||null!==a.binary&&void 0!==a.binary||(a.binary=!0),a=e.extend(a,h),a.date=a.date||new Date,null!==a.compression&&(a.compression=a.compression.toUpperCase()),a},v=function(a,b,c){var d,f=e.getTypeOf(b);if(c=u(c),\"string\"==typeof c.unixPermissions&&(c.unixPermissions=parseInt(c.unixPermissions,8)),c.unixPermissions&&16384&c.unixPermissions&&(c.dir=!0),c.dosPermissions&&16&c.dosPermissions&&(c.dir=!0),c.dir&&(a=x(a)),c.createFolders&&(d=w(a))&&y.call(this,d,!0),c.dir||null===b||\"undefined\"==typeof b)c.base64=!1,c.binary=!1,b=null,f=null;else if(\"string\"===f)c.binary&&!c.base64&&c.optimizedBinaryString!==!0&&(b=e.string2binary(b));else{if(c.base64=!1,c.binary=!0,!(f||b instanceof k))throw new Error(\"The data of '\"+a+\"' is in an unsupported format !\");\"arraybuffer\"===f&&(b=e.transformTo(\"uint8array\",b))}var g=new s(a,b,c);return this.files[a]=g,g},w=function(a){\"/\"==a.slice(-1)&&(a=a.substring(0,a.length-1));var b=a.lastIndexOf(\"/\");return b>0?a.substring(0,b):\"\"},x=function(a){return\"/\"!=a.slice(-1)&&(a+=\"/\"),a},y=function(a,b){return b=\"undefined\"!=typeof b&&b,a=x(a),this.files[a]||v.call(this,a,null,{dir:!0,createFolders:b}),this.files[a]},z=function(a,b,c){var d,g=new k;return a._data instanceof k?(g.uncompressedSize=a._data.uncompressedSize,g.crc32=a._data.crc32,0===g.uncompressedSize||a.dir?(b=j.STORE,g.compressedContent=\"\",g.crc32=0):a._data.compressionMethod===b.magic?g.compressedContent=a._data.getCompressedContent():(d=a._data.getContent(),g.compressedContent=b.compress(e.transformTo(b.compressInputType,d),c))):(d=q(a),d&&0!==d.length&&!a.dir||(b=j.STORE,d=\"\"),g.uncompressedSize=d.length,g.crc32=f(d),g.compressedContent=b.compress(e.transformTo(b.compressInputType,d),c)),g.compressedSize=g.compressedContent.length,g.compressionMethod=b.magic,g},A=function(a,b){var c=a;return a||(c=b?16893:33204),(65535&c)<<16},B=function(a,b){return 63&(a||0)},C=function(a,b,c,d,h,i){var j,k,l,n,o=(c.compressedContent,i!==m.utf8encode),p=e.transformTo(\"string\",i(b.name)),q=e.transformTo(\"string\",m.utf8encode(b.name)),r=b.comment||\"\",s=e.transformTo(\"string\",i(r)),u=e.transformTo(\"string\",m.utf8encode(r)),v=q.length!==b.name.length,w=u.length!==r.length,x=b.options,y=\"\",z=\"\",C=\"\";l=b._initialMetadata.dir!==b.dir?b.dir:x.dir,n=b._initialMetadata.date!==b.date?b.date:x.date;var D=0,E=0;l&&(D|=16),\"UNIX\"===h?(E=798,D|=A(b.unixPermissions,l)):(E=20,D|=B(b.dosPermissions,l)),j=n.getHours(),j<<=6,j|=n.getMinutes(),j<<=5,j|=n.getSeconds()/2,k=n.getFullYear()-1980,k<<=4,k|=n.getMonth()+1,k<<=5,k|=n.getDate(),v&&(z=t(1,1)+t(f(p),4)+q,y+=\"up\"+t(z.length,2)+z),w&&(C=t(1,1)+t(this.crc32(s),4)+u,y+=\"uc\"+t(C.length,2)+C);var F=\"\";F+=\"\\n\\0\",F+=o||!v&&!w?\"\\0\\0\":\"\\0\\b\",F+=c.compressionMethod,F+=t(j,2),F+=t(k,2),F+=t(c.crc32,4),F+=t(c.compressedSize,4),F+=t(c.uncompressedSize,4),F+=t(p.length,2),F+=t(y.length,2);var G=g.LOCAL_FILE_HEADER+F+p+y,H=g.CENTRAL_FILE_HEADER+t(E,2)+F+t(s.length,2)+\"\\0\\0\\0\\0\"+t(D,4)+t(d,4)+p+y+s;return{fileRecord:G,dirRecord:H,compressedObject:c}},D={load:function(a,b){throw new Error(\"Load method is not defined. Is the file jszip-load.js included ?\")},filter:function(a){var b,c,d,f,g=[];for(b in this.files)this.files.hasOwnProperty(b)&&(d=this.files[b],f=new s(d.name,d._data,e.extend(d.options)),c=b.slice(this.root.length,b.length),b.slice(0,this.root.length)===this.root&&a(c,f)&&g.push(f));return g},file:function(a,b,c){if(1===arguments.length){if(e.isRegExp(a)){var d=a;return this.filter(function(a,b){return!b.dir&&d.test(a)})}return this.filter(function(b,c){return!c.dir&&b===a})[0]||null}return a=this.root+a,v.call(this,a,b,c),this},folder:function(a){if(!a)return this;if(e.isRegExp(a))return this.filter(function(b,c){return c.dir&&a.test(b)});var b=this.root+a,c=y.call(this,b),d=this.clone();return d.root=c.name,d},remove:function(a){a=this.root+a;var b=this.files[a];if(b||(\"/\"!=a.slice(-1)&&(a+=\"/\"),b=this.files[a]),b&&!b.dir)delete this.files[a];else for(var c=this.filter(function(b,c){return c.name.slice(0,a.length)===a}),d=0;d<c.length;d++)delete this.files[c[d].name];return this},generate:function(a){a=e.extend(a||{},{base64:!0,compression:\"STORE\",compressionOptions:null,type:\"base64\",platform:\"DOS\",comment:null,mimeType:\"application/zip\",encodeFileName:m.utf8encode}),e.checkSupport(a.type),\"darwin\"!==a.platform&&\"freebsd\"!==a.platform&&\"linux\"!==a.platform&&\"sunos\"!==a.platform||(a.platform=\"UNIX\"),\"win32\"===a.platform&&(a.platform=\"DOS\");var b,c,d=[],f=0,h=0,k=e.transformTo(\"string\",a.encodeFileName(a.comment||this.comment||\"\"));for(var l in this.files)if(this.files.hasOwnProperty(l)){var p=this.files[l],q=p.options.compression||a.compression.toUpperCase(),r=j[q];if(!r)throw new Error(q+\" is not a valid compression method !\");var s=p.options.compressionOptions||a.compressionOptions||{},u=z.call(this,p,r,s),v=C.call(this,l,p,u,f,a.platform,a.encodeFileName);f+=v.fileRecord.length+u.compressedSize,h+=v.dirRecord.length,d.push(v)}var w=\"\";w=g.CENTRAL_DIRECTORY_END+\"\\0\\0\\0\\0\"+t(d.length,2)+t(d.length,2)+t(h,4)+t(f,4)+t(k.length,2)+k;var x=a.type.toLowerCase();for(b=\"uint8array\"===x||\"arraybuffer\"===x||\"blob\"===x||\"nodebuffer\"===x?new o(f+h+w.length):new n(f+h+w.length),c=0;c<d.length;c++)b.append(d[c].fileRecord),b.append(d[c].compressedObject.compressedContent);for(c=0;c<d.length;c++)b.append(d[c].dirRecord);b.append(w);var y=b.finalize();switch(a.type.toLowerCase()){case\"uint8array\":case\"arraybuffer\":case\"nodebuffer\":return e.transformTo(a.type.toLowerCase(),y);case\"blob\":return e.arrayBuffer2Blob(e.transformTo(\"arraybuffer\",y),a.mimeType);case\"base64\":return a.base64?i.encode(y):y;default:return y}},crc32:function(a,b){return f(a,b)},utf8encode:function(a){return e.transformTo(\"string\",m.utf8encode(a))},utf8decode:function(a){return m.utf8decode(a)}};b.exports=D},{\"./base64\":2,\"./compressedObject\":3,\"./compressions\":4,\"./crc32\":5,\"./defaults\":7,\"./nodeBuffer\":12,\"./signature\":15,\"./stringWriter\":17,\"./support\":18,\"./uint8ArrayWriter\":20,\"./utf8\":21,\"./utils\":22}],15:[function(a,b,c){\"use strict\";c.LOCAL_FILE_HEADER=\"PK\u0003\u0004\",c.CENTRAL_FILE_HEADER=\"PK\u0001\u0002\",c.CENTRAL_DIRECTORY_END=\"PK\u0005\u0006\",c.ZIP64_CENTRAL_DIRECTORY_LOCATOR=\"PK\u0006\u0007\",c.ZIP64_CENTRAL_DIRECTORY_END=\"PK\u0006\u0006\",c.DATA_DESCRIPTOR=\"PK\u0007\\b\"},{}],16:[function(a,b,c){\"use strict\";function d(a,b){this.data=a,b||(this.data=f.string2binary(this.data)),this.length=this.data.length,this.index=0,this.zero=0}var e=a(\"./dataReader\"),f=a(\"./utils\");d.prototype=new e,d.prototype.byteAt=function(a){return this.data.charCodeAt(this.zero+a)},d.prototype.lastIndexOfSignature=function(a){return this.data.lastIndexOf(a)-this.zero},d.prototype.readData=function(a){this.checkOffset(a);var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./dataReader\":6,\"./utils\":22}],17:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=function(){this.data=[]};e.prototype={append:function(a){a=d.transformTo(\"string\",a),this.data.push(a)},finalize:function(){return this.data.join(\"\")}},b.exports=e},{\"./utils\":22}],18:[function(a,b,c){(function(a){\"use strict\";if(c.base64=!0,c.array=!0,c.string=!0,c.arraybuffer=\"undefined\"!=typeof ArrayBuffer&&\"undefined\"!=typeof Uint8Array,c.nodebuffer=\"undefined\"!=typeof a,c.uint8array=\"undefined\"!=typeof Uint8Array,\"undefined\"==typeof ArrayBuffer)c.blob=!1;else{var b=new ArrayBuffer(0);try{c.blob=0===new Blob([b],{type:\"application/zip\"}).size}catch(d){try{var e=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,f=new e;f.append(b),c.blob=0===f.getBlob(\"application/zip\").size}catch(d){c.blob=!1}}}}).call(this,\"undefined\"!=typeof Buffer?Buffer:void 0)},{}],19:[function(a,b,c){\"use strict\";function d(a){a&&(this.data=a,this.length=this.data.length,this.index=0,this.zero=0)}var e=a(\"./arrayReader\");d.prototype=new e,d.prototype.readData=function(a){if(this.checkOffset(a),0===a)return new Uint8Array(0);var b=this.data.subarray(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./arrayReader\":1}],20:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=function(a){this.data=new Uint8Array(a),this.index=0};e.prototype={append:function(a){0!==a.length&&(a=d.transformTo(\"uint8array\",a),this.data.set(a,this.index),this.index+=a.length)},finalize:function(){return this.data}},b.exports=e},{\"./utils\":22}],21:[function(a,b,c){\"use strict\";for(var d=a(\"./utils\"),e=a(\"./support\"),f=a(\"./nodeBuffer\"),g=new Array(256),h=0;h<256;h++)g[h]=h>=252?6:h>=248?5:h>=240?4:h>=224?3:h>=192?2:1;g[254]=g[254]=1;var i=function(a){var b,c,d,f,g,h=a.length,i=0;for(f=0;f<h;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),i+=c<128?1:c<2048?2:c<65536?3:4;for(b=e.uint8array?new Uint8Array(i):new Array(i),g=0,f=0;g<i;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),c<128?b[g++]=c:c<2048?(b[g++]=192|c>>>6,b[g++]=128|63&c):c<65536?(b[g++]=224|c>>>12,b[g++]=128|c>>>6&63,b[g++]=128|63&c):(b[g++]=240|c>>>18,b[g++]=128|c>>>12&63,b[g++]=128|c>>>6&63,b[g++]=128|63&c);return b},j=function(a,b){var c;for(b=b||a.length,b>a.length&&(b=a.length),c=b-1;c>=0&&128===(192&a[c]);)c--;return c<0?b:0===c?b:c+g[a[c]]>b?c:b},k=function(a){var b,c,e,f,h=a.length,i=new Array(2*h);for(c=0,b=0;b<h;)if(e=a[b++],e<128)i[c++]=e;else if(f=g[e],f>4)i[c++]=65533,b+=f-1;else{for(e&=2===f?31:3===f?15:7;f>1&&b<h;)e=e<<6|63&a[b++],f--;f>1?i[c++]=65533:e<65536?i[c++]=e:(e-=65536,i[c++]=55296|e>>10&1023,i[c++]=56320|1023&e)}return i.length!==c&&(i.subarray?i=i.subarray(0,c):i.length=c),d.applyFromCharCode(i)};c.utf8encode=function(a){return e.nodebuffer?f(a,\"utf-8\"):i(a)},c.utf8decode=function(a){if(e.nodebuffer)return d.transformTo(\"nodebuffer\",a).toString(\"utf-8\");a=d.transformTo(e.uint8array?\"uint8array\":\"array\",a);for(var b=[],c=0,f=a.length,g=65536;c<f;){var h=j(a,Math.min(c+g,f));e.uint8array?b.push(k(a.subarray(c,h))):b.push(k(a.slice(c,h))),c=h}return b.join(\"\")}},{\"./nodeBuffer\":12,\"./support\":18,\"./utils\":22}],22:[function(a,b,c){\"use strict\";function d(a){return a}function e(a,b){for(var c=0;c<a.length;++c)b[c]=255&a.charCodeAt(c);return b}function f(a){var b=65536,d=[],e=a.length,f=c.getTypeOf(a),g=0,h=!0;try{switch(f){case\"uint8array\":String.fromCharCode.apply(null,new Uint8Array(0));break;case\"nodebuffer\":String.fromCharCode.apply(null,j(0))}}catch(i){h=!1}if(!h){for(var k=\"\",l=0;l<a.length;l++)k+=String.fromCharCode(a[l]);return k}for(;g<e&&b>1;)try{\"array\"===f||\"nodebuffer\"===f?d.push(String.fromCharCode.apply(null,a.slice(g,Math.min(g+b,e)))):d.push(String.fromCharCode.apply(null,a.subarray(g,Math.min(g+b,e)))),g+=b}catch(i){b=Math.floor(b/2)}return d.join(\"\")}function g(a,b){for(var c=0;c<a.length;c++)b[c]=a[c];return b}var h=a(\"./support\"),i=a(\"./compressions\"),j=a(\"./nodeBuffer\");c.string2binary=function(a){for(var b=\"\",c=0;c<a.length;c++)b+=String.fromCharCode(255&a.charCodeAt(c));return b},c.arrayBuffer2Blob=function(a,b){c.checkSupport(\"blob\"),b=b||\"application/zip\";try{return new Blob([a],{type:b})}catch(d){try{var e=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,f=new e;return f.append(a),f.getBlob(b)}catch(d){throw new Error(\"Bug : can't construct the Blob.\")}}},c.applyFromCharCode=f;var k={};k.string={string:d,array:function(a){return e(a,new Array(a.length))},arraybuffer:function(a){return k.string.uint8array(a).buffer},uint8array:function(a){return e(a,new Uint8Array(a.length))},nodebuffer:function(a){return e(a,j(a.length))}},k.array={string:f,array:d,arraybuffer:function(a){return new Uint8Array(a).buffer},uint8array:function(a){return new Uint8Array(a)},nodebuffer:function(a){return j(a)}},k.arraybuffer={string:function(a){return f(new Uint8Array(a))},array:function(a){return g(new Uint8Array(a),new Array(a.byteLength))},arraybuffer:d,uint8array:function(a){return new Uint8Array(a)},nodebuffer:function(a){return j(new Uint8Array(a))}},k.uint8array={string:f,array:function(a){return g(a,new Array(a.length))},arraybuffer:function(a){return a.buffer},uint8array:d,nodebuffer:function(a){return j(a)}},k.nodebuffer={string:f,array:function(a){return g(a,new Array(a.length))},arraybuffer:function(a){return k.nodebuffer.uint8array(a).buffer},uint8array:function(a){return g(a,new Uint8Array(a.length))},nodebuffer:d},c.transformTo=function(a,b){if(b||(b=\"\"),!a)return b;c.checkSupport(a);var d=c.getTypeOf(b),e=k[d][a](b);return e},c.getTypeOf=function(a){return\"string\"==typeof a?\"string\":\"[object Array]\"===Object.prototype.toString.call(a)?\"array\":h.nodebuffer&&j.test(a)?\"nodebuffer\":h.uint8array&&a instanceof Uint8Array?\"uint8array\":h.arraybuffer&&a instanceof ArrayBuffer?\"arraybuffer\":void 0},c.checkSupport=function(a){var b=h[a.toLowerCase()];if(!b)throw new Error(a+\" is not supported by this browser\")},c.MAX_VALUE_16BITS=65535,c.MAX_VALUE_32BITS=-1,c.pretty=function(a){var b,c,d=\"\";for(c=0;c<(a||\"\").length;c++)b=a.charCodeAt(c),d+=\"\\\\x\"+(b<16?\"0\":\"\")+b.toString(16).toUpperCase();return d},c.findCompression=function(a){for(var b in i)if(i.hasOwnProperty(b)&&i[b].magic===a)return i[b];return null},c.isRegExp=function(a){return\"[object RegExp]\"===Object.prototype.toString.call(a)},c.extend=function(){var a,b,c={};for(a=0;a<arguments.length;a++)for(b in arguments[a])arguments[a].hasOwnProperty(b)&&\"undefined\"==typeof c[b]&&(c[b]=arguments[a][b]);return c}},{\"./compressions\":4,\"./nodeBuffer\":12,\"./support\":18}],23:[function(a,b,c){\"use strict\";function d(a,b){this.files=[],this.loadOptions=b,a&&this.load(a)}var e=a(\"./stringReader\"),f=a(\"./nodeBufferReader\"),g=a(\"./uint8ArrayReader\"),h=a(\"./arrayReader\"),i=a(\"./utils\"),j=a(\"./signature\"),k=a(\"./zipEntry\"),l=a(\"./support\");a(\"./object\");d.prototype={checkSignature:function(a){var b=this.reader.readString(4);if(b!==a)throw new Error(\"Corrupted zip or bug : unexpected signature (\"+i.pretty(b)+\", expected \"+i.pretty(a)+\")\")},isSignature:function(a,b){var c=this.reader.index;this.reader.setIndex(a);var d=this.reader.readString(4),e=d===b;return this.reader.setIndex(c),e},readBlockEndOfCentral:function(){this.diskNumber=this.reader.readInt(2),this.diskWithCentralDirStart=this.reader.readInt(2),this.centralDirRecordsOnThisDisk=this.reader.readInt(2),this.centralDirRecords=this.reader.readInt(2),this.centralDirSize=this.reader.readInt(4),this.centralDirOffset=this.reader.readInt(4),this.zipCommentLength=this.reader.readInt(2);var a=this.reader.readData(this.zipCommentLength),b=l.uint8array?\"uint8array\":\"array\",c=i.transformTo(b,a);this.zipComment=this.loadOptions.decodeFileName(c)},readBlockZip64EndOfCentral:function(){this.zip64EndOfCentralSize=this.reader.readInt(8),this.versionMadeBy=this.reader.readString(2),this.versionNeeded=this.reader.readInt(2),this.diskNumber=this.reader.readInt(4),this.diskWithCentralDirStart=this.reader.readInt(4),this.centralDirRecordsOnThisDisk=this.reader.readInt(8),this.centralDirRecords=this.reader.readInt(8),this.centralDirSize=this.reader.readInt(8),this.centralDirOffset=this.reader.readInt(8),this.zip64ExtensibleData={};for(var a,b,c,d=this.zip64EndOfCentralSize-44,e=0;e<d;)a=this.reader.readInt(2),b=this.reader.readInt(4),c=this.reader.readString(b),this.zip64ExtensibleData[a]={id:a,length:b,value:c}},readBlockZip64EndOfCentralLocator:function(){if(this.diskWithZip64CentralDirStart=this.reader.readInt(4),this.relativeOffsetEndOfZip64CentralDir=this.reader.readInt(8),this.disksCount=this.reader.readInt(4),this.disksCount>1)throw new Error(\"Multi-volumes zip are not supported\")},readLocalFiles:function(){var a,b;for(a=0;a<this.files.length;a++)b=this.files[a],this.reader.setIndex(b.localHeaderOffset),this.checkSignature(j.LOCAL_FILE_HEADER),b.readLocalPart(this.reader),b.handleUTF8(),b.processAttributes()},readCentralDir:function(){var a;for(this.reader.setIndex(this.centralDirOffset);this.reader.readString(4)===j.CENTRAL_FILE_HEADER;)a=new k({zip64:this.zip64},this.loadOptions),a.readCentralPart(this.reader),this.files.push(a);if(this.centralDirRecords!==this.files.length&&0!==this.centralDirRecords&&0===this.files.length)throw new Error(\"Corrupted zip or bug: expected \"+this.centralDirRecords+\" records in central dir, got \"+this.files.length)},readEndOfCentral:function(){var a=this.reader.lastIndexOfSignature(j.CENTRAL_DIRECTORY_END);if(a<0){var b=!this.isSignature(0,j.LOCAL_FILE_HEADER);throw b?new Error(\"Can't find end of central directory : is this a zip file ? If it is, see http://stuk.github.io/jszip/documentation/howto/read_zip.html\"):new Error(\"Corrupted zip : can't find end of central directory\")}this.reader.setIndex(a);var c=a;if(this.checkSignature(j.CENTRAL_DIRECTORY_END),this.readBlockEndOfCentral(),this.diskNumber===i.MAX_VALUE_16BITS||this.diskWithCentralDirStart===i.MAX_VALUE_16BITS||this.centralDirRecordsOnThisDisk===i.MAX_VALUE_16BITS||this.centralDirRecords===i.MAX_VALUE_16BITS||this.centralDirSize===i.MAX_VALUE_32BITS||this.centralDirOffset===i.MAX_VALUE_32BITS){if(this.zip64=!0,a=this.reader.lastIndexOfSignature(j.ZIP64_CENTRAL_DIRECTORY_LOCATOR),a<0)throw new Error(\"Corrupted zip : can't find the ZIP64 end of central directory locator\");if(this.reader.setIndex(a),this.checkSignature(j.ZIP64_CENTRAL_DIRECTORY_LOCATOR),this.readBlockZip64EndOfCentralLocator(),!this.isSignature(this.relativeOffsetEndOfZip64CentralDir,j.ZIP64_CENTRAL_DIRECTORY_END)&&(this.relativeOffsetEndOfZip64CentralDir=this.reader.lastIndexOfSignature(j.ZIP64_CENTRAL_DIRECTORY_END),this.relativeOffsetEndOfZip64CentralDir<0))throw new Error(\"Corrupted zip : can't find the ZIP64 end of central directory\");this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir),this.checkSignature(j.ZIP64_CENTRAL_DIRECTORY_END),this.readBlockZip64EndOfCentral()}var d=this.centralDirOffset+this.centralDirSize;this.zip64&&(d+=20,d+=12+this.zip64EndOfCentralSize);var e=c-d;if(e>0)this.isSignature(c,j.CENTRAL_FILE_HEADER)||(this.reader.zero=e);else if(e<0)throw new Error(\"Corrupted zip: missing \"+Math.abs(e)+\" bytes.\")},prepareReader:function(a){var b=i.getTypeOf(a);if(i.checkSupport(b),\"string\"!==b||l.uint8array)if(\"nodebuffer\"===b)this.reader=new f(a);else if(l.uint8array)this.reader=new g(i.transformTo(\"uint8array\",a));else{if(!l.array)throw new Error(\"Unexpected error: unsupported type '\"+b+\"'\");this.reader=new h(i.transformTo(\"array\",a))}else this.reader=new e(a,this.loadOptions.optimizedBinaryString)},load:function(a){this.prepareReader(a),this.readEndOfCentral(),this.readCentralDir(),this.readLocalFiles()}},b.exports=d},{\"./arrayReader\":1,\"./nodeBufferReader\":13,\"./object\":14,\"./signature\":15,\"./stringReader\":16,\"./support\":18,\"./uint8ArrayReader\":19,\"./utils\":22,\"./zipEntry\":24}],24:[function(a,b,c){\"use strict\";function d(a,b){this.options=a,this.loadOptions=b}var e=a(\"./stringReader\"),f=a(\"./utils\"),g=a(\"./compressedObject\"),h=a(\"./object\"),i=a(\"./support\"),j=0,k=3;d.prototype={isEncrypted:function(){return 1===(1&this.bitFlag)},useUTF8:function(){return 2048===(2048&this.bitFlag)},prepareCompressedContent:function(a,b,c){return function(){var d=a.index;a.setIndex(b);var e=a.readData(c);return a.setIndex(d),e}},prepareContent:function(a,b,c,d,e){return function(){var a=f.transformTo(d.uncompressInputType,this.getCompressedContent()),b=d.uncompress(a);if(b.length!==e)throw new Error(\"Bug : uncompressed data size mismatch\");return b}},readLocalPart:function(a){var b,c;if(a.skip(22),this.fileNameLength=a.readInt(2),c=a.readInt(2),this.fileName=a.readData(this.fileNameLength),a.skip(c),this.compressedSize==-1||this.uncompressedSize==-1)throw new Error(\"Bug or corrupted zip : didn't get enough informations from the central directory (compressedSize == -1 || uncompressedSize == -1)\");if(b=f.findCompression(this.compressionMethod),null===b)throw new Error(\"Corrupted zip : compression \"+f.pretty(this.compressionMethod)+\" unknown (inner file : \"+f.transformTo(\"string\",this.fileName)+\")\");if(this.decompressed=new g,this.decompressed.compressedSize=this.compressedSize,this.decompressed.uncompressedSize=this.uncompressedSize,this.decompressed.crc32=this.crc32,this.decompressed.compressionMethod=this.compressionMethod,this.decompressed.getCompressedContent=this.prepareCompressedContent(a,a.index,this.compressedSize,b),this.decompressed.getContent=this.prepareContent(a,a.index,this.compressedSize,b,this.uncompressedSize),this.loadOptions.checkCRC32&&(this.decompressed=f.transformTo(\"string\",this.decompressed.getContent()),h.crc32(this.decompressed)!==this.crc32))throw new Error(\"Corrupted zip : CRC32 mismatch\");\n},readCentralPart:function(a){if(this.versionMadeBy=a.readInt(2),this.versionNeeded=a.readInt(2),this.bitFlag=a.readInt(2),this.compressionMethod=a.readString(2),this.date=a.readDate(),this.crc32=a.readInt(4),this.compressedSize=a.readInt(4),this.uncompressedSize=a.readInt(4),this.fileNameLength=a.readInt(2),this.extraFieldsLength=a.readInt(2),this.fileCommentLength=a.readInt(2),this.diskNumberStart=a.readInt(2),this.internalFileAttributes=a.readInt(2),this.externalFileAttributes=a.readInt(4),this.localHeaderOffset=a.readInt(4),this.isEncrypted())throw new Error(\"Encrypted zip are not supported\");this.fileName=a.readData(this.fileNameLength),this.readExtraFields(a),this.parseZIP64ExtraField(a),this.fileComment=a.readData(this.fileCommentLength)},processAttributes:function(){this.unixPermissions=null,this.dosPermissions=null;var a=this.versionMadeBy>>8;this.dir=!!(16&this.externalFileAttributes),a===j&&(this.dosPermissions=63&this.externalFileAttributes),a===k&&(this.unixPermissions=this.externalFileAttributes>>16&65535),this.dir||\"/\"!==this.fileNameStr.slice(-1)||(this.dir=!0)},parseZIP64ExtraField:function(a){if(this.extraFields[1]){var b=new e(this.extraFields[1].value);this.uncompressedSize===f.MAX_VALUE_32BITS&&(this.uncompressedSize=b.readInt(8)),this.compressedSize===f.MAX_VALUE_32BITS&&(this.compressedSize=b.readInt(8)),this.localHeaderOffset===f.MAX_VALUE_32BITS&&(this.localHeaderOffset=b.readInt(8)),this.diskNumberStart===f.MAX_VALUE_32BITS&&(this.diskNumberStart=b.readInt(4))}},readExtraFields:function(a){var b,c,d,e=a.index;for(this.extraFields=this.extraFields||{};a.index<e+this.extraFieldsLength;)b=a.readInt(2),c=a.readInt(2),d=a.readString(c),this.extraFields[b]={id:b,length:c,value:d}},handleUTF8:function(){var a=i.uint8array?\"uint8array\":\"array\";if(this.useUTF8())this.fileNameStr=h.utf8decode(this.fileName),this.fileCommentStr=h.utf8decode(this.fileComment);else{var b=this.findExtraFieldUnicodePath();if(null!==b)this.fileNameStr=b;else{var c=f.transformTo(a,this.fileName);this.fileNameStr=this.loadOptions.decodeFileName(c)}var d=this.findExtraFieldUnicodeComment();if(null!==d)this.fileCommentStr=d;else{var e=f.transformTo(a,this.fileComment);this.fileCommentStr=this.loadOptions.decodeFileName(e)}}},findExtraFieldUnicodePath:function(){var a=this.extraFields[28789];if(a){var b=new e(a.value);return 1!==b.readInt(1)?null:h.crc32(this.fileName)!==b.readInt(4)?null:h.utf8decode(b.readString(a.length-5))}return null},findExtraFieldUnicodeComment:function(){var a=this.extraFields[25461];if(a){var b=new e(a.value);return 1!==b.readInt(1)?null:h.crc32(this.fileComment)!==b.readInt(4)?null:h.utf8decode(b.readString(a.length-5))}return null}},b.exports=d},{\"./compressedObject\":3,\"./object\":14,\"./stringReader\":16,\"./support\":18,\"./utils\":22}],25:[function(a,b,c){\"use strict\";var d=a(\"./lib/utils/common\").assign,e=a(\"./lib/deflate\"),f=a(\"./lib/inflate\"),g=a(\"./lib/zlib/constants\"),h={};d(h,e,f,g),b.exports=h},{\"./lib/deflate\":26,\"./lib/inflate\":27,\"./lib/utils/common\":28,\"./lib/zlib/constants\":31}],26:[function(a,b,c){\"use strict\";function d(a){if(!(this instanceof d))return new d(a);this.options=i.assign({level:s,method:u,chunkSize:16384,windowBits:15,memLevel:8,strategy:t,to:\"\"},a||{});var b=this.options;b.raw&&b.windowBits>0?b.windowBits=-b.windowBits:b.gzip&&b.windowBits>0&&b.windowBits<16&&(b.windowBits+=16),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new l,this.strm.avail_out=0;var c=h.deflateInit2(this.strm,b.level,b.method,b.windowBits,b.memLevel,b.strategy);if(c!==p)throw new Error(k[c]);if(b.header&&h.deflateSetHeader(this.strm,b.header),b.dictionary){var e;if(e=\"string\"==typeof b.dictionary?j.string2buf(b.dictionary):\"[object ArrayBuffer]\"===m.call(b.dictionary)?new Uint8Array(b.dictionary):b.dictionary,c=h.deflateSetDictionary(this.strm,e),c!==p)throw new Error(k[c]);this._dict_set=!0}}function e(a,b){var c=new d(b);if(c.push(a,!0),c.err)throw c.msg;return c.result}function f(a,b){return b=b||{},b.raw=!0,e(a,b)}function g(a,b){return b=b||{},b.gzip=!0,e(a,b)}var h=a(\"./zlib/deflate\"),i=a(\"./utils/common\"),j=a(\"./utils/strings\"),k=a(\"./zlib/messages\"),l=a(\"./zlib/zstream\"),m=Object.prototype.toString,n=0,o=4,p=0,q=1,r=2,s=-1,t=0,u=8;d.prototype.push=function(a,b){var c,d,e=this.strm,f=this.options.chunkSize;if(this.ended)return!1;d=b===~~b?b:b===!0?o:n,\"string\"==typeof a?e.input=j.string2buf(a):\"[object ArrayBuffer]\"===m.call(a)?e.input=new Uint8Array(a):e.input=a,e.next_in=0,e.avail_in=e.input.length;do{if(0===e.avail_out&&(e.output=new i.Buf8(f),e.next_out=0,e.avail_out=f),c=h.deflate(e,d),c!==q&&c!==p)return this.onEnd(c),this.ended=!0,!1;0!==e.avail_out&&(0!==e.avail_in||d!==o&&d!==r)||(\"string\"===this.options.to?this.onData(j.buf2binstring(i.shrinkBuf(e.output,e.next_out))):this.onData(i.shrinkBuf(e.output,e.next_out)))}while((e.avail_in>0||0===e.avail_out)&&c!==q);return d===o?(c=h.deflateEnd(this.strm),this.onEnd(c),this.ended=!0,c===p):d!==r||(this.onEnd(p),e.avail_out=0,!0)},d.prototype.onData=function(a){this.chunks.push(a)},d.prototype.onEnd=function(a){a===p&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=i.flattenChunks(this.chunks)),this.chunks=[],this.err=a,this.msg=this.strm.msg},c.Deflate=d,c.deflate=e,c.deflateRaw=f,c.gzip=g},{\"./utils/common\":28,\"./utils/strings\":29,\"./zlib/deflate\":33,\"./zlib/messages\":38,\"./zlib/zstream\":40}],27:[function(a,b,c){\"use strict\";function d(a){if(!(this instanceof d))return new d(a);this.options=h.assign({chunkSize:16384,windowBits:0,to:\"\"},a||{});var b=this.options;b.raw&&b.windowBits>=0&&b.windowBits<16&&(b.windowBits=-b.windowBits,0===b.windowBits&&(b.windowBits=-15)),!(b.windowBits>=0&&b.windowBits<16)||a&&a.windowBits||(b.windowBits+=32),b.windowBits>15&&b.windowBits<48&&0===(15&b.windowBits)&&(b.windowBits|=15),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new l,this.strm.avail_out=0;var c=g.inflateInit2(this.strm,b.windowBits);if(c!==j.Z_OK)throw new Error(k[c]);this.header=new m,g.inflateGetHeader(this.strm,this.header)}function e(a,b){var c=new d(b);if(c.push(a,!0),c.err)throw c.msg;return c.result}function f(a,b){return b=b||{},b.raw=!0,e(a,b)}var g=a(\"./zlib/inflate\"),h=a(\"./utils/common\"),i=a(\"./utils/strings\"),j=a(\"./zlib/constants\"),k=a(\"./zlib/messages\"),l=a(\"./zlib/zstream\"),m=a(\"./zlib/gzheader\"),n=Object.prototype.toString;d.prototype.push=function(a,b){var c,d,e,f,k,l,m=this.strm,o=this.options.chunkSize,p=this.options.dictionary,q=!1;if(this.ended)return!1;d=b===~~b?b:b===!0?j.Z_FINISH:j.Z_NO_FLUSH,\"string\"==typeof a?m.input=i.binstring2buf(a):\"[object ArrayBuffer]\"===n.call(a)?m.input=new Uint8Array(a):m.input=a,m.next_in=0,m.avail_in=m.input.length;do{if(0===m.avail_out&&(m.output=new h.Buf8(o),m.next_out=0,m.avail_out=o),c=g.inflate(m,j.Z_NO_FLUSH),c===j.Z_NEED_DICT&&p&&(l=\"string\"==typeof p?i.string2buf(p):\"[object ArrayBuffer]\"===n.call(p)?new Uint8Array(p):p,c=g.inflateSetDictionary(this.strm,l)),c===j.Z_BUF_ERROR&&q===!0&&(c=j.Z_OK,q=!1),c!==j.Z_STREAM_END&&c!==j.Z_OK)return this.onEnd(c),this.ended=!0,!1;m.next_out&&(0!==m.avail_out&&c!==j.Z_STREAM_END&&(0!==m.avail_in||d!==j.Z_FINISH&&d!==j.Z_SYNC_FLUSH)||(\"string\"===this.options.to?(e=i.utf8border(m.output,m.next_out),f=m.next_out-e,k=i.buf2string(m.output,e),m.next_out=f,m.avail_out=o-f,f&&h.arraySet(m.output,m.output,e,f,0),this.onData(k)):this.onData(h.shrinkBuf(m.output,m.next_out)))),0===m.avail_in&&0===m.avail_out&&(q=!0)}while((m.avail_in>0||0===m.avail_out)&&c!==j.Z_STREAM_END);return c===j.Z_STREAM_END&&(d=j.Z_FINISH),d===j.Z_FINISH?(c=g.inflateEnd(this.strm),this.onEnd(c),this.ended=!0,c===j.Z_OK):d!==j.Z_SYNC_FLUSH||(this.onEnd(j.Z_OK),m.avail_out=0,!0)},d.prototype.onData=function(a){this.chunks.push(a)},d.prototype.onEnd=function(a){a===j.Z_OK&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=h.flattenChunks(this.chunks)),this.chunks=[],this.err=a,this.msg=this.strm.msg},c.Inflate=d,c.inflate=e,c.inflateRaw=f,c.ungzip=e},{\"./utils/common\":28,\"./utils/strings\":29,\"./zlib/constants\":31,\"./zlib/gzheader\":34,\"./zlib/inflate\":36,\"./zlib/messages\":38,\"./zlib/zstream\":40}],28:[function(a,b,c){\"use strict\";var d=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Int32Array;c.assign=function(a){for(var b=Array.prototype.slice.call(arguments,1);b.length;){var c=b.shift();if(c){if(\"object\"!=typeof c)throw new TypeError(c+\"must be non-object\");for(var d in c)c.hasOwnProperty(d)&&(a[d]=c[d])}}return a},c.shrinkBuf=function(a,b){return a.length===b?a:a.subarray?a.subarray(0,b):(a.length=b,a)};var e={arraySet:function(a,b,c,d,e){if(b.subarray&&a.subarray)return void a.set(b.subarray(c,c+d),e);for(var f=0;f<d;f++)a[e+f]=b[c+f]},flattenChunks:function(a){var b,c,d,e,f,g;for(d=0,b=0,c=a.length;b<c;b++)d+=a[b].length;for(g=new Uint8Array(d),e=0,b=0,c=a.length;b<c;b++)f=a[b],g.set(f,e),e+=f.length;return g}},f={arraySet:function(a,b,c,d,e){for(var f=0;f<d;f++)a[e+f]=b[c+f]},flattenChunks:function(a){return[].concat.apply([],a)}};c.setTyped=function(a){a?(c.Buf8=Uint8Array,c.Buf16=Uint16Array,c.Buf32=Int32Array,c.assign(c,e)):(c.Buf8=Array,c.Buf16=Array,c.Buf32=Array,c.assign(c,f))},c.setTyped(d)},{}],29:[function(a,b,c){\"use strict\";function d(a,b){if(b<65537&&(a.subarray&&g||!a.subarray&&f))return String.fromCharCode.apply(null,e.shrinkBuf(a,b));for(var c=\"\",d=0;d<b;d++)c+=String.fromCharCode(a[d]);return c}var e=a(\"./common\"),f=!0,g=!0;try{String.fromCharCode.apply(null,[0])}catch(h){f=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(h){g=!1}for(var i=new e.Buf8(256),j=0;j<256;j++)i[j]=j>=252?6:j>=248?5:j>=240?4:j>=224?3:j>=192?2:1;i[254]=i[254]=1,c.string2buf=function(a){var b,c,d,f,g,h=a.length,i=0;for(f=0;f<h;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),i+=c<128?1:c<2048?2:c<65536?3:4;for(b=new e.Buf8(i),g=0,f=0;g<i;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),c<128?b[g++]=c:c<2048?(b[g++]=192|c>>>6,b[g++]=128|63&c):c<65536?(b[g++]=224|c>>>12,b[g++]=128|c>>>6&63,b[g++]=128|63&c):(b[g++]=240|c>>>18,b[g++]=128|c>>>12&63,b[g++]=128|c>>>6&63,b[g++]=128|63&c);return b},c.buf2binstring=function(a){return d(a,a.length)},c.binstring2buf=function(a){for(var b=new e.Buf8(a.length),c=0,d=b.length;c<d;c++)b[c]=a.charCodeAt(c);return b},c.buf2string=function(a,b){var c,e,f,g,h=b||a.length,j=new Array(2*h);for(e=0,c=0;c<h;)if(f=a[c++],f<128)j[e++]=f;else if(g=i[f],g>4)j[e++]=65533,c+=g-1;else{for(f&=2===g?31:3===g?15:7;g>1&&c<h;)f=f<<6|63&a[c++],g--;g>1?j[e++]=65533:f<65536?j[e++]=f:(f-=65536,j[e++]=55296|f>>10&1023,j[e++]=56320|1023&f)}return d(j,e)},c.utf8border=function(a,b){var c;for(b=b||a.length,b>a.length&&(b=a.length),c=b-1;c>=0&&128===(192&a[c]);)c--;return c<0?b:0===c?b:c+i[a[c]]>b?c:b}},{\"./common\":28}],30:[function(a,b,c){\"use strict\";function d(a,b,c,d){for(var e=65535&a|0,f=a>>>16&65535|0,g=0;0!==c;){g=c>2e3?2e3:c,c-=g;do e=e+b[d++]|0,f=f+e|0;while(--g);e%=65521,f%=65521}return e|f<<16|0}b.exports=d},{}],31:[function(a,b,c){\"use strict\";b.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},{}],32:[function(a,b,c){\"use strict\";function d(){for(var a,b=[],c=0;c<256;c++){a=c;for(var d=0;d<8;d++)a=1&a?3988292384^a>>>1:a>>>1;b[c]=a}return b}function e(a,b,c,d){var e=f,g=d+c;a^=-1;for(var h=d;h<g;h++)a=a>>>8^e[255&(a^b[h])];return a^-1}var f=d();b.exports=e},{}],33:[function(a,b,c){\"use strict\";function d(a,b){return a.msg=I[b],b}function e(a){return(a<<1)-(a>4?9:0)}function f(a){for(var b=a.length;--b>=0;)a[b]=0}function g(a){var b=a.state,c=b.pending;c>a.avail_out&&(c=a.avail_out),0!==c&&(E.arraySet(a.output,b.pending_buf,b.pending_out,c,a.next_out),a.next_out+=c,b.pending_out+=c,a.total_out+=c,a.avail_out-=c,b.pending-=c,0===b.pending&&(b.pending_out=0))}function h(a,b){F._tr_flush_block(a,a.block_start>=0?a.block_start:-1,a.strstart-a.block_start,b),a.block_start=a.strstart,g(a.strm)}function i(a,b){a.pending_buf[a.pending++]=b}function j(a,b){a.pending_buf[a.pending++]=b>>>8&255,a.pending_buf[a.pending++]=255&b}function k(a,b,c,d){var e=a.avail_in;return e>d&&(e=d),0===e?0:(a.avail_in-=e,E.arraySet(b,a.input,a.next_in,e,c),1===a.state.wrap?a.adler=G(a.adler,b,e,c):2===a.state.wrap&&(a.adler=H(a.adler,b,e,c)),a.next_in+=e,a.total_in+=e,e)}function l(a,b){var c,d,e=a.max_chain_length,f=a.strstart,g=a.prev_length,h=a.nice_match,i=a.strstart>a.w_size-la?a.strstart-(a.w_size-la):0,j=a.window,k=a.w_mask,l=a.prev,m=a.strstart+ka,n=j[f+g-1],o=j[f+g];a.prev_length>=a.good_match&&(e>>=2),h>a.lookahead&&(h=a.lookahead);do if(c=b,j[c+g]===o&&j[c+g-1]===n&&j[c]===j[f]&&j[++c]===j[f+1]){f+=2,c++;do;while(j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&f<m);if(d=ka-(m-f),f=m-ka,d>g){if(a.match_start=b,g=d,d>=h)break;n=j[f+g-1],o=j[f+g]}}while((b=l[b&k])>i&&0!==--e);return g<=a.lookahead?g:a.lookahead}function m(a){var b,c,d,e,f,g=a.w_size;do{if(e=a.window_size-a.lookahead-a.strstart,a.strstart>=g+(g-la)){E.arraySet(a.window,a.window,g,g,0),a.match_start-=g,a.strstart-=g,a.block_start-=g,c=a.hash_size,b=c;do d=a.head[--b],a.head[b]=d>=g?d-g:0;while(--c);c=g,b=c;do d=a.prev[--b],a.prev[b]=d>=g?d-g:0;while(--c);e+=g}if(0===a.strm.avail_in)break;if(c=k(a.strm,a.window,a.strstart+a.lookahead,e),a.lookahead+=c,a.lookahead+a.insert>=ja)for(f=a.strstart-a.insert,a.ins_h=a.window[f],a.ins_h=(a.ins_h<<a.hash_shift^a.window[f+1])&a.hash_mask;a.insert&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[f+ja-1])&a.hash_mask,a.prev[f&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=f,f++,a.insert--,!(a.lookahead+a.insert<ja)););}while(a.lookahead<la&&0!==a.strm.avail_in)}function n(a,b){var c=65535;for(c>a.pending_buf_size-5&&(c=a.pending_buf_size-5);;){if(a.lookahead<=1){if(m(a),0===a.lookahead&&b===J)return ua;if(0===a.lookahead)break}a.strstart+=a.lookahead,a.lookahead=0;var d=a.block_start+c;if((0===a.strstart||a.strstart>=d)&&(a.lookahead=a.strstart-d,a.strstart=d,h(a,!1),0===a.strm.avail_out))return ua;if(a.strstart-a.block_start>=a.w_size-la&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.strstart>a.block_start&&(h(a,!1),0===a.strm.avail_out)?ua:ua}function o(a,b){for(var c,d;;){if(a.lookahead<la){if(m(a),a.lookahead<la&&b===J)return ua;if(0===a.lookahead)break}if(c=0,a.lookahead>=ja&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart),0!==c&&a.strstart-c<=a.w_size-la&&(a.match_length=l(a,c)),a.match_length>=ja)if(d=F._tr_tally(a,a.strstart-a.match_start,a.match_length-ja),a.lookahead-=a.match_length,a.match_length<=a.max_lazy_match&&a.lookahead>=ja){a.match_length--;do a.strstart++,a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart;while(0!==--a.match_length);a.strstart++}else a.strstart+=a.match_length,a.match_length=0,a.ins_h=a.window[a.strstart],a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+1])&a.hash_mask;else d=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++;if(d&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=a.strstart<ja-1?a.strstart:ja-1,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function p(a,b){for(var c,d,e;;){if(a.lookahead<la){if(m(a),a.lookahead<la&&b===J)return ua;if(0===a.lookahead)break}if(c=0,a.lookahead>=ja&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart),a.prev_length=a.match_length,a.prev_match=a.match_start,a.match_length=ja-1,0!==c&&a.prev_length<a.max_lazy_match&&a.strstart-c<=a.w_size-la&&(a.match_length=l(a,c),a.match_length<=5&&(a.strategy===U||a.match_length===ja&&a.strstart-a.match_start>4096)&&(a.match_length=ja-1)),a.prev_length>=ja&&a.match_length<=a.prev_length){e=a.strstart+a.lookahead-ja,d=F._tr_tally(a,a.strstart-1-a.prev_match,a.prev_length-ja),a.lookahead-=a.prev_length-1,a.prev_length-=2;do++a.strstart<=e&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart);while(0!==--a.prev_length);if(a.match_available=0,a.match_length=ja-1,a.strstart++,d&&(h(a,!1),0===a.strm.avail_out))return ua}else if(a.match_available){if(d=F._tr_tally(a,0,a.window[a.strstart-1]),d&&h(a,!1),a.strstart++,a.lookahead--,0===a.strm.avail_out)return ua}else a.match_available=1,a.strstart++,a.lookahead--}return a.match_available&&(d=F._tr_tally(a,0,a.window[a.strstart-1]),a.match_available=0),a.insert=a.strstart<ja-1?a.strstart:ja-1,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function q(a,b){for(var c,d,e,f,g=a.window;;){if(a.lookahead<=ka){if(m(a),a.lookahead<=ka&&b===J)return ua;if(0===a.lookahead)break}if(a.match_length=0,a.lookahead>=ja&&a.strstart>0&&(e=a.strstart-1,d=g[e],d===g[++e]&&d===g[++e]&&d===g[++e])){f=a.strstart+ka;do;while(d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&e<f);a.match_length=ka-(f-e),a.match_length>a.lookahead&&(a.match_length=a.lookahead)}if(a.match_length>=ja?(c=F._tr_tally(a,1,a.match_length-ja),a.lookahead-=a.match_length,a.strstart+=a.match_length,a.match_length=0):(c=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++),c&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function r(a,b){for(var c;;){if(0===a.lookahead&&(m(a),0===a.lookahead)){if(b===J)return ua;break}if(a.match_length=0,c=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++,c&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function s(a,b,c,d,e){this.good_length=a,this.max_lazy=b,this.nice_length=c,this.max_chain=d,this.func=e}function t(a){a.window_size=2*a.w_size,f(a.head),a.max_lazy_match=D[a.level].max_lazy,a.good_match=D[a.level].good_length,a.nice_match=D[a.level].nice_length,a.max_chain_length=D[a.level].max_chain,a.strstart=0,a.block_start=0,a.lookahead=0,a.insert=0,a.match_length=a.prev_length=ja-1,a.match_available=0,a.ins_h=0}function u(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=$,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new E.Buf16(2*ha),this.dyn_dtree=new E.Buf16(2*(2*fa+1)),this.bl_tree=new E.Buf16(2*(2*ga+1)),f(this.dyn_ltree),f(this.dyn_dtree),f(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new E.Buf16(ia+1),this.heap=new E.Buf16(2*ea+1),f(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new E.Buf16(2*ea+1),f(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function v(a){var b;return a&&a.state?(a.total_in=a.total_out=0,a.data_type=Z,b=a.state,b.pending=0,b.pending_out=0,b.wrap<0&&(b.wrap=-b.wrap),b.status=b.wrap?na:sa,a.adler=2===b.wrap?0:1,b.last_flush=J,F._tr_init(b),O):d(a,Q)}function w(a){var b=v(a);return b===O&&t(a.state),b}function x(a,b){return a&&a.state?2!==a.state.wrap?Q:(a.state.gzhead=b,O):Q}function y(a,b,c,e,f,g){if(!a)return Q;var h=1;if(b===T&&(b=6),e<0?(h=0,e=-e):e>15&&(h=2,e-=16),f<1||f>_||c!==$||e<8||e>15||b<0||b>9||g<0||g>X)return d(a,Q);8===e&&(e=9);var i=new u;return a.state=i,i.strm=a,i.wrap=h,i.gzhead=null,i.w_bits=e,i.w_size=1<<i.w_bits,i.w_mask=i.w_size-1,i.hash_bits=f+7,i.hash_size=1<<i.hash_bits,i.hash_mask=i.hash_size-1,i.hash_shift=~~((i.hash_bits+ja-1)/ja),i.window=new E.Buf8(2*i.w_size),i.head=new E.Buf16(i.hash_size),i.prev=new E.Buf16(i.w_size),i.lit_bufsize=1<<f+6,i.pending_buf_size=4*i.lit_bufsize,i.pending_buf=new E.Buf8(i.pending_buf_size),i.d_buf=1*i.lit_bufsize,i.l_buf=3*i.lit_bufsize,i.level=b,i.strategy=g,i.method=c,w(a)}function z(a,b){return y(a,b,$,aa,ba,Y)}function A(a,b){var c,h,k,l;if(!a||!a.state||b>N||b<0)return a?d(a,Q):Q;if(h=a.state,!a.output||!a.input&&0!==a.avail_in||h.status===ta&&b!==M)return d(a,0===a.avail_out?S:Q);if(h.strm=a,c=h.last_flush,h.last_flush=b,h.status===na)if(2===h.wrap)a.adler=0,i(h,31),i(h,139),i(h,8),h.gzhead?(i(h,(h.gzhead.text?1:0)+(h.gzhead.hcrc?2:0)+(h.gzhead.extra?4:0)+(h.gzhead.name?8:0)+(h.gzhead.comment?16:0)),i(h,255&h.gzhead.time),i(h,h.gzhead.time>>8&255),i(h,h.gzhead.time>>16&255),i(h,h.gzhead.time>>24&255),i(h,9===h.level?2:h.strategy>=V||h.level<2?4:0),i(h,255&h.gzhead.os),h.gzhead.extra&&h.gzhead.extra.length&&(i(h,255&h.gzhead.extra.length),i(h,h.gzhead.extra.length>>8&255)),h.gzhead.hcrc&&(a.adler=H(a.adler,h.pending_buf,h.pending,0)),h.gzindex=0,h.status=oa):(i(h,0),i(h,0),i(h,0),i(h,0),i(h,0),i(h,9===h.level?2:h.strategy>=V||h.level<2?4:0),i(h,ya),h.status=sa);else{var m=$+(h.w_bits-8<<4)<<8,n=-1;n=h.strategy>=V||h.level<2?0:h.level<6?1:6===h.level?2:3,m|=n<<6,0!==h.strstart&&(m|=ma),m+=31-m%31,h.status=sa,j(h,m),0!==h.strstart&&(j(h,a.adler>>>16),j(h,65535&a.adler)),a.adler=1}if(h.status===oa)if(h.gzhead.extra){for(k=h.pending;h.gzindex<(65535&h.gzhead.extra.length)&&(h.pending!==h.pending_buf_size||(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending!==h.pending_buf_size));)i(h,255&h.gzhead.extra[h.gzindex]),h.gzindex++;h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),h.gzindex===h.gzhead.extra.length&&(h.gzindex=0,h.status=pa)}else h.status=pa;if(h.status===pa)if(h.gzhead.name){k=h.pending;do{if(h.pending===h.pending_buf_size&&(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending===h.pending_buf_size)){l=1;break}l=h.gzindex<h.gzhead.name.length?255&h.gzhead.name.charCodeAt(h.gzindex++):0,i(h,l)}while(0!==l);h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),0===l&&(h.gzindex=0,h.status=qa)}else h.status=qa;if(h.status===qa)if(h.gzhead.comment){k=h.pending;do{if(h.pending===h.pending_buf_size&&(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending===h.pending_buf_size)){l=1;break}l=h.gzindex<h.gzhead.comment.length?255&h.gzhead.comment.charCodeAt(h.gzindex++):0,i(h,l)}while(0!==l);h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),0===l&&(h.status=ra)}else h.status=ra;if(h.status===ra&&(h.gzhead.hcrc?(h.pending+2>h.pending_buf_size&&g(a),h.pending+2<=h.pending_buf_size&&(i(h,255&a.adler),i(h,a.adler>>8&255),a.adler=0,h.status=sa)):h.status=sa),0!==h.pending){if(g(a),0===a.avail_out)return h.last_flush=-1,O}else if(0===a.avail_in&&e(b)<=e(c)&&b!==M)return d(a,S);if(h.status===ta&&0!==a.avail_in)return d(a,S);if(0!==a.avail_in||0!==h.lookahead||b!==J&&h.status!==ta){var o=h.strategy===V?r(h,b):h.strategy===W?q(h,b):D[h.level].func(h,b);if(o!==wa&&o!==xa||(h.status=ta),o===ua||o===wa)return 0===a.avail_out&&(h.last_flush=-1),O;if(o===va&&(b===K?F._tr_align(h):b!==N&&(F._tr_stored_block(h,0,0,!1),b===L&&(f(h.head),0===h.lookahead&&(h.strstart=0,h.block_start=0,h.insert=0))),g(a),0===a.avail_out))return h.last_flush=-1,O}return b!==M?O:h.wrap<=0?P:(2===h.wrap?(i(h,255&a.adler),i(h,a.adler>>8&255),i(h,a.adler>>16&255),i(h,a.adler>>24&255),i(h,255&a.total_in),i(h,a.total_in>>8&255),i(h,a.total_in>>16&255),i(h,a.total_in>>24&255)):(j(h,a.adler>>>16),j(h,65535&a.adler)),g(a),h.wrap>0&&(h.wrap=-h.wrap),0!==h.pending?O:P)}function B(a){var b;return a&&a.state?(b=a.state.status,b!==na&&b!==oa&&b!==pa&&b!==qa&&b!==ra&&b!==sa&&b!==ta?d(a,Q):(a.state=null,b===sa?d(a,R):O)):Q}function C(a,b){var c,d,e,g,h,i,j,k,l=b.length;if(!a||!a.state)return Q;if(c=a.state,g=c.wrap,2===g||1===g&&c.status!==na||c.lookahead)return Q;for(1===g&&(a.adler=G(a.adler,b,l,0)),c.wrap=0,l>=c.w_size&&(0===g&&(f(c.head),c.strstart=0,c.block_start=0,c.insert=0),k=new E.Buf8(c.w_size),E.arraySet(k,b,l-c.w_size,c.w_size,0),b=k,l=c.w_size),h=a.avail_in,i=a.next_in,j=a.input,a.avail_in=l,a.next_in=0,a.input=b,m(c);c.lookahead>=ja;){d=c.strstart,e=c.lookahead-(ja-1);do c.ins_h=(c.ins_h<<c.hash_shift^c.window[d+ja-1])&c.hash_mask,c.prev[d&c.w_mask]=c.head[c.ins_h],c.head[c.ins_h]=d,d++;while(--e);c.strstart=d,c.lookahead=ja-1,m(c)}return c.strstart+=c.lookahead,c.block_start=c.strstart,c.insert=c.lookahead,c.lookahead=0,c.match_length=c.prev_length=ja-1,c.match_available=0,a.next_in=i,a.input=j,a.avail_in=h,c.wrap=g,O}var D,E=a(\"../utils/common\"),F=a(\"./trees\"),G=a(\"./adler32\"),H=a(\"./crc32\"),I=a(\"./messages\"),J=0,K=1,L=3,M=4,N=5,O=0,P=1,Q=-2,R=-3,S=-5,T=-1,U=1,V=2,W=3,X=4,Y=0,Z=2,$=8,_=9,aa=15,ba=8,ca=29,da=256,ea=da+1+ca,fa=30,ga=19,ha=2*ea+1,ia=15,ja=3,ka=258,la=ka+ja+1,ma=32,na=42,oa=69,pa=73,qa=91,ra=103,sa=113,ta=666,ua=1,va=2,wa=3,xa=4,ya=3;D=[new s(0,0,0,0,n),new s(4,4,8,4,o),new s(4,5,16,8,o),new s(4,6,32,32,o),new s(4,4,16,16,p),new s(8,16,32,32,p),new s(8,16,128,128,p),new s(8,32,128,256,p),new s(32,128,258,1024,p),new s(32,258,258,4096,p)],c.deflateInit=z,c.deflateInit2=y,c.deflateReset=w,c.deflateResetKeep=v,c.deflateSetHeader=x,c.deflate=A,c.deflateEnd=B,c.deflateSetDictionary=C,c.deflateInfo=\"pako deflate (from Nodeca project)\"},{\"../utils/common\":28,\"./adler32\":30,\"./crc32\":32,\"./messages\":38,\"./trees\":39}],34:[function(a,b,c){\"use strict\";function d(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name=\"\",this.comment=\"\",this.hcrc=0,this.done=!1}b.exports=d},{}],35:[function(a,b,c){\"use strict\";var d=30,e=12;b.exports=function(a,b){var c,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C;c=a.state,f=a.next_in,B=a.input,g=f+(a.avail_in-5),h=a.next_out,C=a.output,i=h-(b-a.avail_out),j=h+(a.avail_out-257),k=c.dmax,l=c.wsize,m=c.whave,n=c.wnext,o=c.window,p=c.hold,q=c.bits,r=c.lencode,s=c.distcode,t=(1<<c.lenbits)-1,u=(1<<c.distbits)-1;a:do{q<15&&(p+=B[f++]<<q,q+=8,p+=B[f++]<<q,q+=8),v=r[p&t];b:for(;;){if(w=v>>>24,p>>>=w,q-=w,w=v>>>16&255,0===w)C[h++]=65535&v;else{if(!(16&w)){if(0===(64&w)){v=r[(65535&v)+(p&(1<<w)-1)];continue b}if(32&w){c.mode=e;break a}a.msg=\"invalid literal/length code\",c.mode=d;break a}x=65535&v,w&=15,w&&(q<w&&(p+=B[f++]<<q,q+=8),x+=p&(1<<w)-1,p>>>=w,q-=w),q<15&&(p+=B[f++]<<q,q+=8,p+=B[f++]<<q,q+=8),v=s[p&u];c:for(;;){if(w=v>>>24,p>>>=w,q-=w,w=v>>>16&255,!(16&w)){if(0===(64&w)){v=s[(65535&v)+(p&(1<<w)-1)];continue c}a.msg=\"invalid distance code\",c.mode=d;break a}if(y=65535&v,w&=15,q<w&&(p+=B[f++]<<q,q+=8,q<w&&(p+=B[f++]<<q,q+=8)),y+=p&(1<<w)-1,y>k){a.msg=\"invalid distance too far back\",c.mode=d;break a}if(p>>>=w,q-=w,w=h-i,y>w){if(w=y-w,w>m&&c.sane){a.msg=\"invalid distance too far back\",c.mode=d;break a}if(z=0,A=o,0===n){if(z+=l-w,w<x){x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}}else if(n<w){if(z+=l+n-w,w-=n,w<x){x-=w;do C[h++]=o[z++];while(--w);if(z=0,n<x){w=n,x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}}}else if(z+=n-w,w<x){x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}for(;x>2;)C[h++]=A[z++],C[h++]=A[z++],C[h++]=A[z++],x-=3;x&&(C[h++]=A[z++],x>1&&(C[h++]=A[z++]))}else{z=h-y;do C[h++]=C[z++],C[h++]=C[z++],C[h++]=C[z++],x-=3;while(x>2);x&&(C[h++]=C[z++],x>1&&(C[h++]=C[z++]))}break}}break}}while(f<g&&h<j);x=q>>3,f-=x,q-=x<<3,p&=(1<<q)-1,a.next_in=f,a.next_out=h,a.avail_in=f<g?5+(g-f):5-(f-g),a.avail_out=h<j?257+(j-h):257-(h-j),c.hold=p,c.bits=q}},{}],36:[function(a,b,c){\"use strict\";function d(a){return(a>>>24&255)+(a>>>8&65280)+((65280&a)<<8)+((255&a)<<24)}function e(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new s.Buf16(320),this.work=new s.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function f(a){var b;return a&&a.state?(b=a.state,a.total_in=a.total_out=b.total=0,a.msg=\"\",b.wrap&&(a.adler=1&b.wrap),b.mode=L,b.last=0,b.havedict=0,b.dmax=32768,b.head=null,b.hold=0,b.bits=0,b.lencode=b.lendyn=new s.Buf32(pa),b.distcode=b.distdyn=new s.Buf32(qa),b.sane=1,b.back=-1,D):G}function g(a){var b;return a&&a.state?(b=a.state,b.wsize=0,b.whave=0,b.wnext=0,f(a)):G}function h(a,b){var c,d;return a&&a.state?(d=a.state,b<0?(c=0,b=-b):(c=(b>>4)+1,b<48&&(b&=15)),b&&(b<8||b>15)?G:(null!==d.window&&d.wbits!==b&&(d.window=null),d.wrap=c,d.wbits=b,g(a))):G}function i(a,b){var c,d;return a?(d=new e,a.state=d,d.window=null,c=h(a,b),c!==D&&(a.state=null),c):G}function j(a){return i(a,sa)}function k(a){if(ta){var b;for(q=new s.Buf32(512),r=new s.Buf32(32),b=0;b<144;)a.lens[b++]=8;for(;b<256;)a.lens[b++]=9;for(;b<280;)a.lens[b++]=7;for(;b<288;)a.lens[b++]=8;for(w(y,a.lens,0,288,q,0,a.work,{bits:9}),b=0;b<32;)a.lens[b++]=5;w(z,a.lens,0,32,r,0,a.work,{bits:5}),ta=!1}a.lencode=q,a.lenbits=9,a.distcode=r,a.distbits=5}function l(a,b,c,d){var e,f=a.state;return null===f.window&&(f.wsize=1<<f.wbits,f.wnext=0,f.whave=0,f.window=new s.Buf8(f.wsize)),d>=f.wsize?(s.arraySet(f.window,b,c-f.wsize,f.wsize,0),f.wnext=0,f.whave=f.wsize):(e=f.wsize-f.wnext,e>d&&(e=d),s.arraySet(f.window,b,c-d,e,f.wnext),d-=e,d?(s.arraySet(f.window,b,c-d,d,0),f.wnext=d,f.whave=f.wsize):(f.wnext+=e,f.wnext===f.wsize&&(f.wnext=0),f.whave<f.wsize&&(f.whave+=e))),0}function m(a,b){var c,e,f,g,h,i,j,m,n,o,p,q,r,pa,qa,ra,sa,ta,ua,va,wa,xa,ya,za,Aa=0,Ba=new s.Buf8(4),Ca=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!a||!a.state||!a.output||!a.input&&0!==a.avail_in)return G;c=a.state,c.mode===W&&(c.mode=X),h=a.next_out,f=a.output,j=a.avail_out,g=a.next_in,e=a.input,i=a.avail_in,m=c.hold,n=c.bits,o=i,p=j,xa=D;a:for(;;)switch(c.mode){case L:if(0===c.wrap){c.mode=X;break}for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(2&c.wrap&&35615===m){c.check=0,Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0),m=0,n=0,c.mode=M;break}if(c.flags=0,c.head&&(c.head.done=!1),!(1&c.wrap)||(((255&m)<<8)+(m>>8))%31){a.msg=\"incorrect header check\",c.mode=ma;break}if((15&m)!==K){a.msg=\"unknown compression method\",c.mode=ma;break}if(m>>>=4,n-=4,wa=(15&m)+8,0===c.wbits)c.wbits=wa;else if(wa>c.wbits){a.msg=\"invalid window size\",c.mode=ma;break}c.dmax=1<<wa,a.adler=c.check=1,c.mode=512&m?U:W,m=0,n=0;break;case M:for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(c.flags=m,(255&c.flags)!==K){a.msg=\"unknown compression method\",c.mode=ma;break}if(57344&c.flags){a.msg=\"unknown header flags set\",c.mode=ma;break}c.head&&(c.head.text=m>>8&1),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0,c.mode=N;case N:for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.head&&(c.head.time=m),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,Ba[2]=m>>>16&255,Ba[3]=m>>>24&255,c.check=u(c.check,Ba,4,0)),m=0,n=0,c.mode=O;case O:for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,\nn+=8}c.head&&(c.head.xflags=255&m,c.head.os=m>>8),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0,c.mode=P;case P:if(1024&c.flags){for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.length=m,c.head&&(c.head.extra_len=m),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0}else c.head&&(c.head.extra=null);c.mode=Q;case Q:if(1024&c.flags&&(q=c.length,q>i&&(q=i),q&&(c.head&&(wa=c.head.extra_len-c.length,c.head.extra||(c.head.extra=new Array(c.head.extra_len)),s.arraySet(c.head.extra,e,g,q,wa)),512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,c.length-=q),c.length))break a;c.length=0,c.mode=R;case R:if(2048&c.flags){if(0===i)break a;q=0;do wa=e[g+q++],c.head&&wa&&c.length<65536&&(c.head.name+=String.fromCharCode(wa));while(wa&&q<i);if(512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,wa)break a}else c.head&&(c.head.name=null);c.length=0,c.mode=S;case S:if(4096&c.flags){if(0===i)break a;q=0;do wa=e[g+q++],c.head&&wa&&c.length<65536&&(c.head.comment+=String.fromCharCode(wa));while(wa&&q<i);if(512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,wa)break a}else c.head&&(c.head.comment=null);c.mode=T;case T:if(512&c.flags){for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m!==(65535&c.check)){a.msg=\"header crc mismatch\",c.mode=ma;break}m=0,n=0}c.head&&(c.head.hcrc=c.flags>>9&1,c.head.done=!0),a.adler=c.check=0,c.mode=W;break;case U:for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}a.adler=c.check=d(m),m=0,n=0,c.mode=V;case V:if(0===c.havedict)return a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,F;a.adler=c.check=1,c.mode=W;case W:if(b===B||b===C)break a;case X:if(c.last){m>>>=7&n,n-=7&n,c.mode=ja;break}for(;n<3;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}switch(c.last=1&m,m>>>=1,n-=1,3&m){case 0:c.mode=Y;break;case 1:if(k(c),c.mode=ca,b===C){m>>>=2,n-=2;break a}break;case 2:c.mode=_;break;case 3:a.msg=\"invalid block type\",c.mode=ma}m>>>=2,n-=2;break;case Y:for(m>>>=7&n,n-=7&n;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if((65535&m)!==(m>>>16^65535)){a.msg=\"invalid stored block lengths\",c.mode=ma;break}if(c.length=65535&m,m=0,n=0,c.mode=Z,b===C)break a;case Z:c.mode=$;case $:if(q=c.length){if(q>i&&(q=i),q>j&&(q=j),0===q)break a;s.arraySet(f,e,g,q,h),i-=q,g+=q,j-=q,h+=q,c.length-=q;break}c.mode=W;break;case _:for(;n<14;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(c.nlen=(31&m)+257,m>>>=5,n-=5,c.ndist=(31&m)+1,m>>>=5,n-=5,c.ncode=(15&m)+4,m>>>=4,n-=4,c.nlen>286||c.ndist>30){a.msg=\"too many length or distance symbols\",c.mode=ma;break}c.have=0,c.mode=aa;case aa:for(;c.have<c.ncode;){for(;n<3;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.lens[Ca[c.have++]]=7&m,m>>>=3,n-=3}for(;c.have<19;)c.lens[Ca[c.have++]]=0;if(c.lencode=c.lendyn,c.lenbits=7,ya={bits:c.lenbits},xa=w(x,c.lens,0,19,c.lencode,0,c.work,ya),c.lenbits=ya.bits,xa){a.msg=\"invalid code lengths set\",c.mode=ma;break}c.have=0,c.mode=ba;case ba:for(;c.have<c.nlen+c.ndist;){for(;Aa=c.lencode[m&(1<<c.lenbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(sa<16)m>>>=qa,n-=qa,c.lens[c.have++]=sa;else{if(16===sa){for(za=qa+2;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m>>>=qa,n-=qa,0===c.have){a.msg=\"invalid bit length repeat\",c.mode=ma;break}wa=c.lens[c.have-1],q=3+(3&m),m>>>=2,n-=2}else if(17===sa){for(za=qa+3;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=qa,n-=qa,wa=0,q=3+(7&m),m>>>=3,n-=3}else{for(za=qa+7;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=qa,n-=qa,wa=0,q=11+(127&m),m>>>=7,n-=7}if(c.have+q>c.nlen+c.ndist){a.msg=\"invalid bit length repeat\",c.mode=ma;break}for(;q--;)c.lens[c.have++]=wa}}if(c.mode===ma)break;if(0===c.lens[256]){a.msg=\"invalid code -- missing end-of-block\",c.mode=ma;break}if(c.lenbits=9,ya={bits:c.lenbits},xa=w(y,c.lens,0,c.nlen,c.lencode,0,c.work,ya),c.lenbits=ya.bits,xa){a.msg=\"invalid literal/lengths set\",c.mode=ma;break}if(c.distbits=6,c.distcode=c.distdyn,ya={bits:c.distbits},xa=w(z,c.lens,c.nlen,c.ndist,c.distcode,0,c.work,ya),c.distbits=ya.bits,xa){a.msg=\"invalid distances set\",c.mode=ma;break}if(c.mode=ca,b===C)break a;case ca:c.mode=da;case da:if(i>=6&&j>=258){a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,v(a,p),h=a.next_out,f=a.output,j=a.avail_out,g=a.next_in,e=a.input,i=a.avail_in,m=c.hold,n=c.bits,c.mode===W&&(c.back=-1);break}for(c.back=0;Aa=c.lencode[m&(1<<c.lenbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(ra&&0===(240&ra)){for(ta=qa,ua=ra,va=sa;Aa=c.lencode[va+((m&(1<<ta+ua)-1)>>ta)],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(ta+qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=ta,n-=ta,c.back+=ta}if(m>>>=qa,n-=qa,c.back+=qa,c.length=sa,0===ra){c.mode=ia;break}if(32&ra){c.back=-1,c.mode=W;break}if(64&ra){a.msg=\"invalid literal/length code\",c.mode=ma;break}c.extra=15&ra,c.mode=ea;case ea:if(c.extra){for(za=c.extra;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.length+=m&(1<<c.extra)-1,m>>>=c.extra,n-=c.extra,c.back+=c.extra}c.was=c.length,c.mode=fa;case fa:for(;Aa=c.distcode[m&(1<<c.distbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(0===(240&ra)){for(ta=qa,ua=ra,va=sa;Aa=c.distcode[va+((m&(1<<ta+ua)-1)>>ta)],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(ta+qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=ta,n-=ta,c.back+=ta}if(m>>>=qa,n-=qa,c.back+=qa,64&ra){a.msg=\"invalid distance code\",c.mode=ma;break}c.offset=sa,c.extra=15&ra,c.mode=ga;case ga:if(c.extra){for(za=c.extra;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.offset+=m&(1<<c.extra)-1,m>>>=c.extra,n-=c.extra,c.back+=c.extra}if(c.offset>c.dmax){a.msg=\"invalid distance too far back\",c.mode=ma;break}c.mode=ha;case ha:if(0===j)break a;if(q=p-j,c.offset>q){if(q=c.offset-q,q>c.whave&&c.sane){a.msg=\"invalid distance too far back\",c.mode=ma;break}q>c.wnext?(q-=c.wnext,r=c.wsize-q):r=c.wnext-q,q>c.length&&(q=c.length),pa=c.window}else pa=f,r=h-c.offset,q=c.length;q>j&&(q=j),j-=q,c.length-=q;do f[h++]=pa[r++];while(--q);0===c.length&&(c.mode=da);break;case ia:if(0===j)break a;f[h++]=c.length,j--,c.mode=da;break;case ja:if(c.wrap){for(;n<32;){if(0===i)break a;i--,m|=e[g++]<<n,n+=8}if(p-=j,a.total_out+=p,c.total+=p,p&&(a.adler=c.check=c.flags?u(c.check,f,p,h-p):t(c.check,f,p,h-p)),p=j,(c.flags?m:d(m))!==c.check){a.msg=\"incorrect data check\",c.mode=ma;break}m=0,n=0}c.mode=ka;case ka:if(c.wrap&&c.flags){for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m!==(4294967295&c.total)){a.msg=\"incorrect length check\",c.mode=ma;break}m=0,n=0}c.mode=la;case la:xa=E;break a;case ma:xa=H;break a;case na:return I;case oa:default:return G}return a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,(c.wsize||p!==a.avail_out&&c.mode<ma&&(c.mode<ja||b!==A))&&l(a,a.output,a.next_out,p-a.avail_out)?(c.mode=na,I):(o-=a.avail_in,p-=a.avail_out,a.total_in+=o,a.total_out+=p,c.total+=p,c.wrap&&p&&(a.adler=c.check=c.flags?u(c.check,f,p,a.next_out-p):t(c.check,f,p,a.next_out-p)),a.data_type=c.bits+(c.last?64:0)+(c.mode===W?128:0)+(c.mode===ca||c.mode===Z?256:0),(0===o&&0===p||b===A)&&xa===D&&(xa=J),xa)}function n(a){if(!a||!a.state)return G;var b=a.state;return b.window&&(b.window=null),a.state=null,D}function o(a,b){var c;return a&&a.state?(c=a.state,0===(2&c.wrap)?G:(c.head=b,b.done=!1,D)):G}function p(a,b){var c,d,e,f=b.length;return a&&a.state?(c=a.state,0!==c.wrap&&c.mode!==V?G:c.mode===V&&(d=1,d=t(d,b,f,0),d!==c.check)?H:(e=l(a,b,f,f))?(c.mode=na,I):(c.havedict=1,D)):G}var q,r,s=a(\"../utils/common\"),t=a(\"./adler32\"),u=a(\"./crc32\"),v=a(\"./inffast\"),w=a(\"./inftrees\"),x=0,y=1,z=2,A=4,B=5,C=6,D=0,E=1,F=2,G=-2,H=-3,I=-4,J=-5,K=8,L=1,M=2,N=3,O=4,P=5,Q=6,R=7,S=8,T=9,U=10,V=11,W=12,X=13,Y=14,Z=15,$=16,_=17,aa=18,ba=19,ca=20,da=21,ea=22,fa=23,ga=24,ha=25,ia=26,ja=27,ka=28,la=29,ma=30,na=31,oa=32,pa=852,qa=592,ra=15,sa=ra,ta=!0;c.inflateReset=g,c.inflateReset2=h,c.inflateResetKeep=f,c.inflateInit=j,c.inflateInit2=i,c.inflate=m,c.inflateEnd=n,c.inflateGetHeader=o,c.inflateSetDictionary=p,c.inflateInfo=\"pako inflate (from Nodeca project)\"},{\"../utils/common\":28,\"./adler32\":30,\"./crc32\":32,\"./inffast\":35,\"./inftrees\":37}],37:[function(a,b,c){\"use strict\";var d=a(\"../utils/common\"),e=15,f=852,g=592,h=0,i=1,j=2,k=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],l=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],m=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],n=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];b.exports=function(a,b,c,o,p,q,r,s){var t,u,v,w,x,y,z,A,B,C=s.bits,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=null,O=0,P=new d.Buf16(e+1),Q=new d.Buf16(e+1),R=null,S=0;for(D=0;D<=e;D++)P[D]=0;for(E=0;E<o;E++)P[b[c+E]]++;for(H=C,G=e;G>=1&&0===P[G];G--);if(H>G&&(H=G),0===G)return p[q++]=20971520,p[q++]=20971520,s.bits=1,0;for(F=1;F<G&&0===P[F];F++);for(H<F&&(H=F),K=1,D=1;D<=e;D++)if(K<<=1,K-=P[D],K<0)return-1;if(K>0&&(a===h||1!==G))return-1;for(Q[1]=0,D=1;D<e;D++)Q[D+1]=Q[D]+P[D];for(E=0;E<o;E++)0!==b[c+E]&&(r[Q[b[c+E]]++]=E);if(a===h?(N=R=r,y=19):a===i?(N=k,O-=257,R=l,S-=257,y=256):(N=m,R=n,y=-1),M=0,E=0,D=F,x=q,I=H,J=0,v=-1,L=1<<H,w=L-1,a===i&&L>f||a===j&&L>g)return 1;for(var T=0;;){T++,z=D-J,r[E]<y?(A=0,B=r[E]):r[E]>y?(A=R[S+r[E]],B=N[O+r[E]]):(A=96,B=0),t=1<<D-J,u=1<<I,F=u;do u-=t,p[x+(M>>J)+u]=z<<24|A<<16|B|0;while(0!==u);for(t=1<<D-1;M&t;)t>>=1;if(0!==t?(M&=t-1,M+=t):M=0,E++,0===--P[D]){if(D===G)break;D=b[c+r[E]]}if(D>H&&(M&w)!==v){for(0===J&&(J=H),x+=F,I=D-J,K=1<<I;I+J<G&&(K-=P[I+J],!(K<=0));)I++,K<<=1;if(L+=1<<I,a===i&&L>f||a===j&&L>g)return 1;v=M&w,p[v]=H<<24|I<<16|x-q|0}}return 0!==M&&(p[x+M]=D-J<<24|64<<16|0),s.bits=H,0}},{\"../utils/common\":28}],38:[function(a,b,c){\"use strict\";b.exports={2:\"need dictionary\",1:\"stream end\",0:\"\",\"-1\":\"file error\",\"-2\":\"stream error\",\"-3\":\"data error\",\"-4\":\"insufficient memory\",\"-5\":\"buffer error\",\"-6\":\"incompatible version\"}},{}],39:[function(a,b,c){\"use strict\";function d(a){for(var b=a.length;--b>=0;)a[b]=0}function e(a,b,c,d,e){this.static_tree=a,this.extra_bits=b,this.extra_base=c,this.elems=d,this.max_length=e,this.has_stree=a&&a.length}function f(a,b){this.dyn_tree=a,this.max_code=0,this.stat_desc=b}function g(a){return a<256?ia[a]:ia[256+(a>>>7)]}function h(a,b){a.pending_buf[a.pending++]=255&b,a.pending_buf[a.pending++]=b>>>8&255}function i(a,b,c){a.bi_valid>X-c?(a.bi_buf|=b<<a.bi_valid&65535,h(a,a.bi_buf),a.bi_buf=b>>X-a.bi_valid,a.bi_valid+=c-X):(a.bi_buf|=b<<a.bi_valid&65535,a.bi_valid+=c)}function j(a,b,c){i(a,c[2*b],c[2*b+1])}function k(a,b){var c=0;do c|=1&a,a>>>=1,c<<=1;while(--b>0);return c>>>1}function l(a){16===a.bi_valid?(h(a,a.bi_buf),a.bi_buf=0,a.bi_valid=0):a.bi_valid>=8&&(a.pending_buf[a.pending++]=255&a.bi_buf,a.bi_buf>>=8,a.bi_valid-=8)}function m(a,b){var c,d,e,f,g,h,i=b.dyn_tree,j=b.max_code,k=b.stat_desc.static_tree,l=b.stat_desc.has_stree,m=b.stat_desc.extra_bits,n=b.stat_desc.extra_base,o=b.stat_desc.max_length,p=0;for(f=0;f<=W;f++)a.bl_count[f]=0;for(i[2*a.heap[a.heap_max]+1]=0,c=a.heap_max+1;c<V;c++)d=a.heap[c],f=i[2*i[2*d+1]+1]+1,f>o&&(f=o,p++),i[2*d+1]=f,d>j||(a.bl_count[f]++,g=0,d>=n&&(g=m[d-n]),h=i[2*d],a.opt_len+=h*(f+g),l&&(a.static_len+=h*(k[2*d+1]+g)));if(0!==p){do{for(f=o-1;0===a.bl_count[f];)f--;a.bl_count[f]--,a.bl_count[f+1]+=2,a.bl_count[o]--,p-=2}while(p>0);for(f=o;0!==f;f--)for(d=a.bl_count[f];0!==d;)e=a.heap[--c],e>j||(i[2*e+1]!==f&&(a.opt_len+=(f-i[2*e+1])*i[2*e],i[2*e+1]=f),d--)}}function n(a,b,c){var d,e,f=new Array(W+1),g=0;for(d=1;d<=W;d++)f[d]=g=g+c[d-1]<<1;for(e=0;e<=b;e++){var h=a[2*e+1];0!==h&&(a[2*e]=k(f[h]++,h))}}function o(){var a,b,c,d,f,g=new Array(W+1);for(c=0,d=0;d<Q-1;d++)for(ka[d]=c,a=0;a<1<<ba[d];a++)ja[c++]=d;for(ja[c-1]=d,f=0,d=0;d<16;d++)for(la[d]=f,a=0;a<1<<ca[d];a++)ia[f++]=d;for(f>>=7;d<T;d++)for(la[d]=f<<7,a=0;a<1<<ca[d]-7;a++)ia[256+f++]=d;for(b=0;b<=W;b++)g[b]=0;for(a=0;a<=143;)ga[2*a+1]=8,a++,g[8]++;for(;a<=255;)ga[2*a+1]=9,a++,g[9]++;for(;a<=279;)ga[2*a+1]=7,a++,g[7]++;for(;a<=287;)ga[2*a+1]=8,a++,g[8]++;for(n(ga,S+1,g),a=0;a<T;a++)ha[2*a+1]=5,ha[2*a]=k(a,5);ma=new e(ga,ba,R+1,S,W),na=new e(ha,ca,0,T,W),oa=new e(new Array(0),da,0,U,Y)}function p(a){var b;for(b=0;b<S;b++)a.dyn_ltree[2*b]=0;for(b=0;b<T;b++)a.dyn_dtree[2*b]=0;for(b=0;b<U;b++)a.bl_tree[2*b]=0;a.dyn_ltree[2*Z]=1,a.opt_len=a.static_len=0,a.last_lit=a.matches=0}function q(a){a.bi_valid>8?h(a,a.bi_buf):a.bi_valid>0&&(a.pending_buf[a.pending++]=a.bi_buf),a.bi_buf=0,a.bi_valid=0}function r(a,b,c,d){q(a),d&&(h(a,c),h(a,~c)),G.arraySet(a.pending_buf,a.window,b,c,a.pending),a.pending+=c}function s(a,b,c,d){var e=2*b,f=2*c;return a[e]<a[f]||a[e]===a[f]&&d[b]<=d[c]}function t(a,b,c){for(var d=a.heap[c],e=c<<1;e<=a.heap_len&&(e<a.heap_len&&s(b,a.heap[e+1],a.heap[e],a.depth)&&e++,!s(b,d,a.heap[e],a.depth));)a.heap[c]=a.heap[e],c=e,e<<=1;a.heap[c]=d}function u(a,b,c){var d,e,f,h,k=0;if(0!==a.last_lit)do d=a.pending_buf[a.d_buf+2*k]<<8|a.pending_buf[a.d_buf+2*k+1],e=a.pending_buf[a.l_buf+k],k++,0===d?j(a,e,b):(f=ja[e],j(a,f+R+1,b),h=ba[f],0!==h&&(e-=ka[f],i(a,e,h)),d--,f=g(d),j(a,f,c),h=ca[f],0!==h&&(d-=la[f],i(a,d,h)));while(k<a.last_lit);j(a,Z,b)}function v(a,b){var c,d,e,f=b.dyn_tree,g=b.stat_desc.static_tree,h=b.stat_desc.has_stree,i=b.stat_desc.elems,j=-1;for(a.heap_len=0,a.heap_max=V,c=0;c<i;c++)0!==f[2*c]?(a.heap[++a.heap_len]=j=c,a.depth[c]=0):f[2*c+1]=0;for(;a.heap_len<2;)e=a.heap[++a.heap_len]=j<2?++j:0,f[2*e]=1,a.depth[e]=0,a.opt_len--,h&&(a.static_len-=g[2*e+1]);for(b.max_code=j,c=a.heap_len>>1;c>=1;c--)t(a,f,c);e=i;do c=a.heap[1],a.heap[1]=a.heap[a.heap_len--],t(a,f,1),d=a.heap[1],a.heap[--a.heap_max]=c,a.heap[--a.heap_max]=d,f[2*e]=f[2*c]+f[2*d],a.depth[e]=(a.depth[c]>=a.depth[d]?a.depth[c]:a.depth[d])+1,f[2*c+1]=f[2*d+1]=e,a.heap[1]=e++,t(a,f,1);while(a.heap_len>=2);a.heap[--a.heap_max]=a.heap[1],m(a,b),n(f,j,a.bl_count)}function w(a,b,c){var d,e,f=-1,g=b[1],h=0,i=7,j=4;for(0===g&&(i=138,j=3),b[2*(c+1)+1]=65535,d=0;d<=c;d++)e=g,g=b[2*(d+1)+1],++h<i&&e===g||(h<j?a.bl_tree[2*e]+=h:0!==e?(e!==f&&a.bl_tree[2*e]++,a.bl_tree[2*$]++):h<=10?a.bl_tree[2*_]++:a.bl_tree[2*aa]++,h=0,f=e,0===g?(i=138,j=3):e===g?(i=6,j=3):(i=7,j=4))}function x(a,b,c){var d,e,f=-1,g=b[1],h=0,k=7,l=4;for(0===g&&(k=138,l=3),d=0;d<=c;d++)if(e=g,g=b[2*(d+1)+1],!(++h<k&&e===g)){if(h<l){do j(a,e,a.bl_tree);while(0!==--h)}else 0!==e?(e!==f&&(j(a,e,a.bl_tree),h--),j(a,$,a.bl_tree),i(a,h-3,2)):h<=10?(j(a,_,a.bl_tree),i(a,h-3,3)):(j(a,aa,a.bl_tree),i(a,h-11,7));h=0,f=e,0===g?(k=138,l=3):e===g?(k=6,l=3):(k=7,l=4)}}function y(a){var b;for(w(a,a.dyn_ltree,a.l_desc.max_code),w(a,a.dyn_dtree,a.d_desc.max_code),v(a,a.bl_desc),b=U-1;b>=3&&0===a.bl_tree[2*ea[b]+1];b--);return a.opt_len+=3*(b+1)+5+5+4,b}function z(a,b,c,d){var e;for(i(a,b-257,5),i(a,c-1,5),i(a,d-4,4),e=0;e<d;e++)i(a,a.bl_tree[2*ea[e]+1],3);x(a,a.dyn_ltree,b-1),x(a,a.dyn_dtree,c-1)}function A(a){var b,c=4093624447;for(b=0;b<=31;b++,c>>>=1)if(1&c&&0!==a.dyn_ltree[2*b])return I;if(0!==a.dyn_ltree[18]||0!==a.dyn_ltree[20]||0!==a.dyn_ltree[26])return J;for(b=32;b<R;b++)if(0!==a.dyn_ltree[2*b])return J;return I}function B(a){pa||(o(),pa=!0),a.l_desc=new f(a.dyn_ltree,ma),a.d_desc=new f(a.dyn_dtree,na),a.bl_desc=new f(a.bl_tree,oa),a.bi_buf=0,a.bi_valid=0,p(a)}function C(a,b,c,d){i(a,(L<<1)+(d?1:0),3),r(a,b,c,!0)}function D(a){i(a,M<<1,3),j(a,Z,ga),l(a)}function E(a,b,c,d){var e,f,g=0;a.level>0?(a.strm.data_type===K&&(a.strm.data_type=A(a)),v(a,a.l_desc),v(a,a.d_desc),g=y(a),e=a.opt_len+3+7>>>3,f=a.static_len+3+7>>>3,f<=e&&(e=f)):e=f=c+5,c+4<=e&&b!==-1?C(a,b,c,d):a.strategy===H||f===e?(i(a,(M<<1)+(d?1:0),3),u(a,ga,ha)):(i(a,(N<<1)+(d?1:0),3),z(a,a.l_desc.max_code+1,a.d_desc.max_code+1,g+1),u(a,a.dyn_ltree,a.dyn_dtree)),p(a),d&&q(a)}function F(a,b,c){return a.pending_buf[a.d_buf+2*a.last_lit]=b>>>8&255,a.pending_buf[a.d_buf+2*a.last_lit+1]=255&b,a.pending_buf[a.l_buf+a.last_lit]=255&c,a.last_lit++,0===b?a.dyn_ltree[2*c]++:(a.matches++,b--,a.dyn_ltree[2*(ja[c]+R+1)]++,a.dyn_dtree[2*g(b)]++),a.last_lit===a.lit_bufsize-1}var G=a(\"../utils/common\"),H=4,I=0,J=1,K=2,L=0,M=1,N=2,O=3,P=258,Q=29,R=256,S=R+1+Q,T=30,U=19,V=2*S+1,W=15,X=16,Y=7,Z=256,$=16,_=17,aa=18,ba=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],ca=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],da=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],ea=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],fa=512,ga=new Array(2*(S+2));d(ga);var ha=new Array(2*T);d(ha);var ia=new Array(fa);d(ia);var ja=new Array(P-O+1);d(ja);var ka=new Array(Q);d(ka);var la=new Array(T);d(la);var ma,na,oa,pa=!1;c._tr_init=B,c._tr_stored_block=C,c._tr_flush_block=E,c._tr_tally=F,c._tr_align=D},{\"../utils/common\":28}],40:[function(a,b,c){\"use strict\";function d(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg=\"\",this.state=null,this.data_type=2,this.adler=0}b.exports=d},{}]},{},[10])(10)});\n","/*\n * custom_activelist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomActiveList {\n   get key() {\n      return \"activelist\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.list, webix.ActiveContent);\n   }\n};\n","/*\n * countfooter\n *\n * Add the count footer to the webix's datatable.\n *\n */\n\nmodule.exports = class ABCountFooter {\n   get key() {\n      return \"countfooter\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {};\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {};\n\n      // Our webix UI definition:\n      var _ui = {};\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix :\n      webix.ui.datafilter.countColumn = webix.extend(\n         {\n            refresh: function (datatable, node, info) {\n               var result = 0;\n\n               var rowData = datatable.find({}) || [];\n               rowData.forEach((row) => {\n                  if (row == null) return;\n\n                  var data =\n                     row[info.columnId] || row[info.columnId + \"__relation\"];\n\n                  // array\n                  if (data && Array.isArray(data)) {\n                     result += data.length;\n                  } else if (\n                     data != null &&\n                     data != \"\" &&\n                     data != false &&\n                     data != \"false\" &&\n                     data != \"0\"\n                  ) {\n                     result += 1;\n                  }\n               });\n\n               node.innerHTML = result;\n            },\n         },\n         webix.ui.datafilter.summColumn\n      );\n   }\n};\n","/*\n * Custom Component Manager\n * Make sure our {ABComponent}s are initialized with our custom\n * Webix Components.\n */\n\n// Import our Custom Components here:\nvar componentList = [\n   require(\"./activelist\"),\n   require(\"./countfooter\"),\n   require(\"./datetimepicker\"),\n   require(\"./editlist\"),\n   require(\"./edittree\"),\n   require(\"./editunitlist\"),\n   require(\"./focusableTemplate\"),\n   require(\"./formioPreview\"),\n   require(\"./formioBuilder\").default,\n   require(\"./numbertext\"),\n   require(\"./thaicalendar\"),\n   require(\"./timepicker\"),\n   require(\"./tinyMce\").default,\n   require(\"./totalfooter\"),\n   require(\"./treesuggest\"),\n   // require('./savablelayout')\n];\n\nmodule.exports = class ABCustomComponentManager {\n   constructor() {}\n\n   initComponents(App) {\n      App.custom = App.custom || {};\n\n      componentList.forEach((Component) => {\n         var component = new Component(App);\n         App.custom[component.key] = component;\n      });\n\n      // Transition to v2:\n      App.AB.custom = App.custom;\n   }\n};\n","/*\n * custom_datetimepicker\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomDateTimePicker {\n   //.extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"datetimepicker\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: App.unique(\"custom_datetimepicker\"), // keep this unique for this App instance.\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.editors.$popup.datetime = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: \"calendar\",\n            icons: true,\n            borderless: true,\n            timepicker: true,\n         },\n      };\n\n      webix.editors.datetime = webix.extend(\n         {\n            popupType: \"datetime\",\n         },\n         webix.editors.date\n      );\n   }\n};\n","/*\n * custom_editlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"editlist\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.list);\n   }\n};\n","/*\n * custom_edittree\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditTree {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"edittree\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.tree);\n   }\n};\n","/*\n * custom_editunitlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditUnitList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"editunitlist\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n      /*\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n*/\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.unitlist);\n   }\n};\n","/*\n * custom_activelist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomFocusableTemplate {\n   get key() {\n      return \"focusabletemplate\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         focus: function () {\n            return false;\n         },\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.template, webix.UIManager);\n   }\n};\n","/*\n * formioBuilder\n *\n * Create a custom webix component.\n *\n * Note: Moved from ABDesigner to prevent loading formIO library globally or\n * duplicating it. Revisit when formIOv5 releases as it should then be possible\n * to package the form renderer without the builder.\n *\n * Note: This component is lazy loaded and requires calling .init() before using\n */\nimport ABLazyCustomComponent from \"./lazyComponent.js\";\nexport default class ABCustomFormBuilderBuilder extends ABLazyCustomComponent {\n   get key() {\n      return \"formiobuilder\";\n   }\n\n   constructor(App) {\n      super(App);\n      this.label = this.AB.Label();\n      this.view = this.key;\n   }\n\n   /**\n    * Load the FormIO dependency and add the component to webix\n    * @returns {Promise<null>}\n    */\n   async init() {\n      if (this.initialized) return;\n      const { FormBuilder } = await import(\n         /* webpackPrefetch: true */\n         /* webpackFetchPrioirtiy: \"low\" */\n         \"../init/formio.js\"\n      );\n      this.FormBuilder = FormBuilder;\n      // Tell Webix to create an INSTANCE of our custom component:\n      this.AB.Webix.protoUI(this.ui(), this.AB.Webix.ui.popup);\n      this.initialized = true;\n   }\n\n   /**\n    * Generate the custom webix ui\n    * @method ui\n    * @returns {Object} custom webix ui\n    */\n   ui() {\n      const _this = this;\n\n      return {\n         name: this.key,\n         defaults: {\n            css: \"scrolly forceOpen\",\n            hidden: false,\n            autofit: true,\n         },\n         $init: async function (config) {\n            let comp, defaultComponent;\n\n            if (config.dataFields) {\n               comp = this.parseDataFields(config.dataFields);\n               defaultComponent = comp.approveButton.schema;\n            } else {\n               comp = _this.inputComponents();\n               defaultComponent = comp.saveButton.schema;\n            }\n\n            const formComponents = config.formComponents\n               ? config.formComponents\n               : { components: [defaultComponent] };\n\n            try {\n               this.builder = new this.FormBuilder(this.$view, formComponents, {\n                  noDefaultSubmitButton: true,\n                  noNewEdit: true,\n                  builder: {\n                     basic: false,\n                     advanced: false,\n                     customBasic: false,\n                     premium: false,\n                     custom: {\n                        title: this.label(\"Fields\"),\n                        weight: 0,\n                        default: true,\n                        components: comp,\n                     },\n                     layout: {\n                        components: {\n                           table: true,\n                        },\n                     },\n                  },\n               });\n               await this.builder.ready;\n            } catch (err) {\n               this.notify(\"Error initializing formio builder\", err);\n            }\n         },\n         // set up a function that can be called to request the form schema\n         getFormData: function () {\n            return this.builder.schema ?? this.builder.form;\n         },\n         // Pass functions into the Webix component to be use in $init\n         label: this.label,\n         parseDataFields: this.parseDataFields,\n         notify: this.AB.notify.developer,\n         FormBuilder: this.FormBuilder,\n      };\n   }\n\n   /**\n    * Generate the formio custom components based on the fields.\n    * Used internally in the webix component.\n    * @method parseDataFields\n    * @param {object[]} fields {field: ABField, key, label, object: ABObject}\n    * @returns {object} each key is a formio component\n    */\n   parseDataFields(fields) {\n      const components = {};\n      fields?.forEach(({ field, key, label }) => {\n         if (!field) return;\n\n         const schema = {\n            abFieldID: field.id,\n            label: field.label,\n            disabled: true,\n            key,\n            _key: key,\n            type: \"textfield\",\n            input: true,\n         };\n\n         switch (field.key) {\n            case \"boolean\":\n               schema.type = \"checkbox\";\n               break;\n            case \"calculate\":\n               schema.inputType = \"text\";\n               schema.calculateValue = `value = ${field.settings.formula\n                  .replace(/{/g, \"data['\")\n                  .replace(/}/g, \"']\")}`;\n               break;\n            case \"connectObject\":\n               schema.inputType = \"text\";\n               schema.calculateValue = `value = data['${key}.format']`;\n               break;\n            case \"date\":\n               schema.type = \"datetime\";\n               schema.format = \"MMMM d, yyyy\";\n               break;\n            case \"datetime\":\n               schema.type = \"datetime\";\n               schema.format = \"MMMM d, yyyy h:mm a\";\n               break;\n            case \"email\":\n               schema.type = \"email\";\n               break;\n            case \"file\":\n               schema.type = \"htmlelement\";\n               schema.tag = \"a\";\n               schema.className = \"btn btn-primary btn-block\";\n               schema.content = `<i class='fa fa-paperclip'></i> {{data['${key}']?.filename ?? \"No File\"}}`;\n               schema.attrs = [\n                  {\n                     attr: \"href\",\n                     value: field.urlFile(`{{data['${key}'].uuid}}`),\n                  },\n                  {\n                     attr: \"target\",\n                     value: \"_blank\",\n                  },\n               ];\n               schema.refreshOnChange = true;\n               schema.input = false;\n               break;\n            case \"image\":\n               schema.type = \"htmlelement\";\n               schema.tag = \"img\";\n               schema.className = \"img-thumbnail max100\";\n               schema.content = \"\";\n               (schema.attrs = [\n                  {\n                     attr: \"src\",\n                     value: field.urlImage(`{{data['${key}']}}`),\n                  },\n               ]),\n                  (schema.refreshOnChange = true);\n               schema.input = false;\n               break;\n            case \"list\":\n               var values = [];\n               field.settings.options.forEach((opt) => {\n                  values.push({\n                     label: opt.text,\n                     value: opt.id,\n                  });\n               });\n               schema.type = \"select\";\n               schema.data = { values };\n               schema.multiple = field.settings.isMultiple;\n               break;\n            case \"LongText\":\n               schema.type = \"textarea\";\n               break;\n            case \"number\":\n               schema.type = \"number\";\n               break;\n            case \"TextFormula\":\n               schema.inputType = \"text\";\n               schema.calculateValue = `value = '${field.settings.textFormula}'`;\n               break;\n            default:\n               break;\n         }\n         components[key] = {\n            title: label,\n            key,\n            icon: field.icon,\n            schema,\n         };\n      });\n\n      components[\"approveButton\"] = {\n         title: this.label(\"Approve Button\"),\n         key: \"approve\",\n         icon: \"check-square\",\n         schema: {\n            label: this.label(\"Approve\"),\n            type: \"button\",\n            key: \"approve\",\n            event: \"approve\",\n            block: true,\n            size: \"lg\",\n            input: false,\n            leftIcon: \"fa fa-thumbs-up\",\n            action: \"event\",\n            theme: \"success\",\n         },\n      };\n      components[\"denyButton\"] = {\n         title: this.label(\"Deny Button\"),\n         key: \"deny\",\n         icon: \"ban\",\n         schema: {\n            label: this.label(\"Deny\"),\n            type: \"button\",\n            key: \"deny\",\n            event: \"deny\",\n            block: true,\n            size: \"lg\",\n            input: false,\n            leftIcon: \"fa fa-thumbs-down\",\n            action: \"event\",\n            theme: \"danger\",\n         },\n      };\n      components[\"customButton\"] = {\n         title: this.label(\"Custom Action Button\"),\n         key: \"custom\",\n         icon: \"cog\",\n         schema: {\n            label: this.label(\"Custom Name\"),\n            type: \"button\",\n            key: \"custom\",\n            event: \"yourEvent\",\n            block: true,\n            size: \"lg\",\n            input: false,\n            leftIcon: \"fa fa-cog\",\n            action: \"event\",\n            theme: \"primary\",\n         },\n      };\n      return components;\n   }\n\n   inputComponents() {\n      return {\n         textbox: {\n            title: \"Textbox\",\n            key: \"YOUR_KEY\",\n            icon: \"font\",\n            schema: {\n               type: \"textfield\",\n               key: \"YOUR_KEY\",\n               label: \"[YOUR LABEL]\",\n               placeholder: \"Enter your information.\",\n               input: true,\n            },\n         },\n         textarea: {\n            title: \"Textarea\",\n            key: \"YOUR_KEY\",\n            icon: \"bold\",\n            schema: {\n               type: \"textarea\",\n               key: \"YOUR_KEY\",\n               label: \"[YOUR LABEL]\",\n               placeholder: \"Enter your information.\",\n            },\n         },\n         saveButton: {\n            title: \"Submit Button\",\n            key: \"submit\",\n            icon: \"check-square\",\n            schema: {\n               label: \"Submit\",\n               type: \"button\",\n               key: \"submit\",\n               event: \"submit\",\n               block: true,\n               size: \"lg\",\n               input: false,\n               leftIcon: \"fa fa-check-square\",\n               action: \"event\",\n               theme: \"success\",\n            },\n         },\n      };\n   }\n}\n","/*\n * formioBuilder\n *\n * Create a custom webix component.\n *\n * Note: This component is lazy loaded and requires calling .init() before using\n *\n */\nconst ABLazyCustomComponent = require(\"./lazyComponent.js\");\nmodule.exports = class ABCustomFormIOPreview extends ABLazyCustomComponent {\n   get key() {\n      return \"formiopreview\";\n   }\n\n   async init() {\n      if (this.initialized) return;\n      const { Form } = await import(\n         /* webpackPrefetch: true */\n         /* webpackFetchPrioirtiy: \"low\" */\n         \"../init/formio.js\"\n      );\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         defaults: {\n            css: \"scrolly\",\n            borderless: true,\n         },\n         $init: async function (config) {\n            this.$ready.push(() => this.initForm(config));\n         },\n\n         initForm: async (config) => {\n            var formComponents = config.formComponents ?? {};\n            var formData = config.formData ?? {};\n            const component = $$(config.id);\n\n            // JOHNNY: we now have formio designs where we need to pull out\n            // more than just an .id from connected fields. Let's no longer\n            // do this:\n            // // we need to find out when we are passing an array of objects and reduce it down to an array of IDs\n            // for (var data in formData) {\n            //    if (\n            //       Array.isArray(formData[data]) &&\n            //       typeof formData[data][0] == \"object\"\n            //    ) {\n            //       formData[data] = formData[data].map((item) => item.id);\n            //    }\n            // }\n\n            const form = new Form(component.$view, formComponents);\n            component._formio = form;\n            // readOnly: true\n            // sanitizeConfig: {\n            //     addTags: [\"a\", \"label\", \"img\", \"i\"],\n            //     addAttr: [\"src\", \"href\", \"class\", \"target\"]\n            // }\n            // }).then(function (form) {\n            await form.build();\n            // now that it is set up we can push it into the global var\n            // formBuilder = builder;\n            // Provide a default submission.\n            form.instance.submission = {\n               data: formData,\n            };\n            (formComponents.components || []).forEach((comp) => {\n               if (\n                  comp.type == \"button\" &&\n                  comp.action == \"event\" &&\n                  comp.event\n               ) {\n                  form.instance.once(comp.event, function (/* click */) {\n                     config?.onButton(comp.event);\n                     // _this.emit(\"button\", comp.event);\n                  });\n               }\n            });\n            // });\n         },\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      this._logic = {};\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      this.AB.Webix.protoUI(_ui, this.AB.Webix.ui.view);\n      this.initialized = true;\n   }\n};\n","/**\n * Base class for any custom webix component that we want to initalize lazily,\n * usually to reduce the dependency size required on load.\n */\nvar ABEmitter = require(\"../AppBuilder/platform/ABEmitter.js\");\nmodule.exports = class ABLazyCustomComponent extends ABEmitter {\n   constructor({ AB }) {\n      super();\n      this.initialized = false;\n      this.AB = AB;\n      this.setDefaultUI();\n   }\n\n   /**\n    * Sets a default UI used before the actual webix component is ready. Meant as\n    * a helper to future developers.\n    */\n   setDefaultUI() {\n      this.AB.Webix.protoUI(\n         {\n            name: this.key,\n            defaults: {\n               template:\n                  \"This custom webix component has not been initialized. <br>Call AB.custom.#key#.init() before using this component.\",\n               data: { key: this.key },\n            },\n            $init: () =>\n               console.warn(\n                  `${this.key} custom webix component used before being initalized`\n               ),\n         },\n         this.AB.Webix.ui.template\n      );\n   }\n};\n","/*\n * numbertext\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomNumberText {\n   get key() {\n      return \"numbertext\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n\n         defaults: {\n            css: \"webix_el_text\",\n         },\n\n         // override this function to return number value type\n         $getValue: function () {\n            var val = this.getInputNode().value;\n            if (val) return JSON.parse(val);\n            // Convert to number\n            else return \"\";\n         },\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.text);\n   }\n};\n","/*\n * Thai Calendar\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomThaiCalendar {\n   get key() {\n      return \"thaicalendar\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      this.view = this.key;\n\n      const i18n = webix.i18n;\n\n      // Our webix UI definition:\n      const _ui = {\n         name: this.key,\n         defaults: {\n            calendarHeader: function (d) {\n               return `${i18n.calendar.monthFull[d.getMonth()]} ${\n                  d.getFullYear() + 543\n               }`;\n            },\n         },\n      };\n\n      if (webix.ui.calendar.$protoWait[0]._zoom_logic) {\n         _ui._zoom_logic = AB.cloneDeep(\n            webix.ui.calendar.$protoWait[0]._zoom_logic\n         );\n         _ui._zoom_logic[1] = Object.assign(_ui._zoom_logic[1], {\n            _getTitle: this._getYearTitle,\n         });\n         _ui._zoom_logic[2] = Object.assign(_ui._zoom_logic[2], {\n            _getTitle: this._getYearRangeTitle,\n            _getContent: this._getYearContent,\n            _setContent: this._setYear,\n         });\n      }\n\n      if (webix.ui.calendar.$protoWait[0].Qd) {\n         _ui.Qd = AB.cloneDeep(webix.ui.calendar.$protoWait[0].Qd);\n         _ui.Qd[1] = Object.assign(_ui.Qd[1], {\n            Jv: this._getYearTitle,\n         });\n         _ui.Qd[2] = Object.assign(_ui.Qd[2], {\n            Jv: this._getYearRangeTitle,\n            Zv: this._getYearContent,\n            Xv: this._setYear,\n         });\n      }\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.calendar);\n\n      webix.editors.$popup.thaidate = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: this.key,\n            icons: true,\n            borderless: true,\n            timepicker: false,\n         },\n      };\n\n      webix.editors.$popup.thaidatetime = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: this.key,\n            icons: true,\n            borderless: true,\n            timepicker: true,\n         },\n      };\n\n      webix.editors.thaidate = webix.extend(\n         {\n            popupType: \"thaidate\",\n         },\n         webix.editors.date\n      );\n\n      webix.editors.thaidatetime = webix.extend(\n         {\n            popupType: \"thaidatetime\",\n         },\n         webix.editors.date\n      );\n   }\n\n   _getYearTitle(date) {\n      return date.getFullYear() + 543;\n   }\n\n   _getYearRangeTitle(date, calendar) {\n      let start = date.getFullYear() + 543;\n      calendar._zoom_start_date = start = start - (start % 10) - 1;\n      return start + \" - \" + (start + 10 + 1);\n   }\n\n   _getYearContent(i, calendar) {\n      return calendar._zoom_start_date + i;\n   }\n\n   _setYear(next, i, calendar) {\n      next.setFullYear(calendar._zoom_start_date - 543 + i);\n   }\n};\n","/*\n * custom_timepicker\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomTimePicker {\n   //.extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"timepicker\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: App.unique(\"custom_timepicker\"), // keep this unique for this App instance.\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.editors.$popup.time = {\n         view: \"popup\",\n         body: {\n            view: \"calendar\",\n            width: 220,\n            height: 200,\n            type: \"time\",\n         },\n      };\n\n      webix.editors.time = webix.extend(\n         {\n            popupType: \"time\",\n         },\n         webix.editors.date\n      );\n   }\n};\n","/*\n * tinyMce\n *\n * Create a custom webix component.\n *\n * Note: This component is lazy loaded and requires calling .init() before using\n */\nimport ABLazyCustomComponent from \"./lazyComponent.js\";\nexport default class ABCustomTinyMCE extends ABLazyCustomComponent {\n   get key() {\n      return \"tinymce-editor\";\n   }\n\n   async init() {\n      if (this.initialized) return;\n\n      await import(\n         /* webpackPrefetch: true */\n         \"../js/webix/extras/tinymce.js\"\n      );\n      this.initialized = true;\n   }\n}\n","/*\n * totalfooter\n *\n * Add the contents of records to show in footer of the webix's datatable.\n *\n */\n\nmodule.exports = class ABTotalFooter {\n   get key() {\n      return \"totalfooter\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {};\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {};\n\n      // Our webix UI definition:\n      var _ui = {};\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix :\n      webix.ui.datafilter.totalColumn = webix.extend(\n         {\n            refresh: function (datatable, node, info) {\n               var result = 0;\n\n               datatable.eachRow(function (row) {\n                  var record = datatable.getItem(row);\n\n                  var data = info.field.format(record);\n\n                  // array\n                  if (data) {\n                     result += parseFloat(data); // we need to use parseFloat because numbers could be decimals\n                  }\n               });\n\n               node.innerHTML = result;\n            },\n         },\n         webix.ui.datafilter.summColumn\n      );\n   }\n};\n","/*\n * custom_editlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"treesuggest\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         defaults: {\n            type: \"tree\",\n            width: 0,\n            body: {\n               borderless: true,\n               select: true,\n               template: function (obj, common) {\n                  return (\n                     \"<span>\" +\n                     (obj.$count ? \"<b>\" + obj.value + \"</b>\" : obj.value) +\n                     \"</span>\"\n                  );\n               },\n               ready: function () {\n                  this.openAll();\n               },\n               on: {\n                  onAfterSelect: function (id, e) {\n                     if (this.getItem(id).$count) {\n                        this.getParentView().setMasterValue(\"\");\n                        this.show(\n                           $$(this.getParentView().config.master).getInputNode()\n                        );\n                     }\n                  },\n               },\n            },\n         },\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.suggest);\n   }\n};\n"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","EventEmitter","constructor","super","this","isAuthenticated","_config","_listRoles","_listScopes","_listUsers","init","AB","UserConfig","Config","userConfig","MetaConfig","metaConfig","roles","scopes","users","Network","on","context","err","data","console","error","emit","Promise","canSwitcheroo","r","uuid","length","isSwitcherood","userReal","isSystemDesigner","email","language","languageCode","logout","post","url","tenantUrl","Tenant","setting","key","fn","filter","rolesAll","username","userList","imageID","image_id","sendEmailNotifications","Alert","opts","webix","alert","title","Multilingual","label","text","message","ok","Confirm","labelYes","labelNo","cancel","confirm","callback","result","fnYes","fnNo","ConfirmDelete","Message","timeout","expire","MLClass","_missingLabelID","_missingLabels","_pluginLabelsMissing","isLabelUpdateEnabled","labels","labelConfig","_languages","languageConfig","pluginLabels","currentLanguage","Account","enableLabelUpdates","altText","values","postMissing","arguments","Array","isArray","replace","newKey","slice","postMissingLabel","forEach","v","i","sub","replaceAll","labelPlugin","plugin","languages","pluginLoadLabels","pluginLabelReport","warn","JSON","stringify","clearTimeout","sendBatch","batchLabels","missingLabels","k","l","shift","push","then","catch","toString","indexOf","setTimeout","destroy","save","toObj","toDefinition","Atomic","parent","wildcard","newListener","maxListeners","baseURL","numRetries","_network","isRealTime","options","siteConfig","appbuilder","urlCoreServer","networkNumRetries","get","params","jobResponse","type","useThese","search","val","encodeURIComponent","join","_request","put","isNetworkConnected","salSend","packet","_retry","notify","developer","publishResponse","reject","headers","authToken","Authorization","prototype","call","tenantID","method","statusText","Analytics","log","_err","status","responseText","parse","response","queue","resend","listSocketEvents","socketDataSave","HashSocketJobs","packets","keyBlacklist","ev","io","socket","__length","objectId","obj","objectByID","name","jobID","socketDataLog","blKey","parts","PK","blacklistKey","time","blacklist","model","isCsvPacked","lengthPacked","csvUnpack","lengthUnpacked","__lengthPacked","toFixed","performance","mark","op","normalizeData","measure","socketLog","socketLogClear","isConnected","route","query","match","http","undefined","toLowerCase","request","jwres","statusCode","errStr","body","Stringify","setMaxListeners","queueLock","_queueCount","cachJobResponse","Lock","networkType","queueFlush","idConnectionCheck","window","addEventListener","delete","_connectionCheck","isNetworkSlow","_networkSlow","registerNetworkTestWorker","worker","slow","_networkTestWorker","onmessage","setContext","category","level","networkStatus","navigator","connection","Connection","onLine","NONE","refQueue","queueCount","acquire","Storage","jID","set","release","logError","hasResponded","resCount","resNumber","processRequest","cb","entry","job","res","rej","done","reset","getTokens","tenantStorage","Webix","storage","prefix","local","value","clear","remove","clearAll","_storage","config","encrypted","textClickToEnter","tenantConfig","String","appListRowHeight","buttonWidthLarge","buttonWidthMedium","buttonWidthSmall","buttonWidthExtraSmall","tabWidthLarge","tabWidthMedium","tabWidthSmall","tabWidthExtraSmall","columnWidthXLarge","columnWidthLarge","columnWidthMedium","columnWidthSmall","columnWidthExtraSmall","xSmallSpacer","smallSpacer","mediumSpacer","largeSpacer","xLargeSpacer","xxLargeSpacer","xxxLargeSpacer","appListSpacerRowHeight","appListSpacerColMinWidth","appListSpacerColMaxWidth","objectWorkspaceColWidth","labelWidthSmall","labelWidthMedium","labelWidthLarge","labelWidthXLarge","labelWidthXXLarge","labelWidthXXXLarge","labelWidthCheckbox","hideMobile","innerWidth","icons","ABValidator","errors","addError","pass","fail","toValidationObject","invalidAttributes","attr","updateForm","form","vObj","Validation","isFormValidationError","updateGrid","rowID","grid","isGridValidationError","ABFactory","definitions","Dialog","ClassUI","Class","FilterComplex","ABViewManager","SortPopup","ABViewComponent","A","UISettings","validator","errorSailsCleanup","raw","hasFocused","attrs","wasForm","elements","msg","markInvalid","focus","row","Grid","wasGrid","addCellCss","refresh","clearSelection","Definitions","_plugins","_pendingNetworkRequests","fullDef","pending","pkt","newDef","definitionNew","serverDef","definitionCreate","_definitions","platformRules","toDate","dateText","ignoreTime","format","isValid","Date","toDateFormat","date","momentObj","localeCode","locale","subtractDate","number","unit","subtract","addDate","add","getUTCDayTimeRange","now","year","getFullYear","month","getMonth","getDate","startOfDay","endOfDay","startOfDayUTC","getTime","getTimezoneOffset","endOfDayUTC","formatDate","isoString","toISOString","concat","rules","allInits","all","_localSettings","json","definitionSync","def","definitionDestroy","definitionUpdate","domain","info","plugins","pluginLoad","p","cloneDeep","rest","emitData","Label","localSettings","isNil","isUUID","RegExp","test","merge","orderBy","uniq","kebabCase","sumBy","meanBy","maxBy","minBy","isString","scriptLoad","head","document","script","createElement","src","onreadystatechange","onload","onerror","appendChild","scriptLoadAll","urls","u","cssLoad","link","rel","href","cssLoadAll","csvToJson","csvData","header","skipEmptyLines","jsonToCsv","jsonData","ABMLClass","attributes","appType","versionData","versionNumber","changeLog","author","version","keepVersion","commitMessage","timestamp","icon","isSystemObject","roleAccess","isAccessManaged","accessManagers","isTranslationManaged","translationManagers","isTutorialManaged","tutorialManagers","hintIDs","objectIDs","queryIDs","datacollectionIDs","newPages","pageIDs","definitionByID","pageNew","appID","pageID","_pages","processIDs","pID","processByID","processID","objectListSettings","isOpen","searchText","sortDirection","isGroup","translations","fromValues","ViewManager","isAccessibleForRoles","foundRole","parseInt","useRole","role","pages","isWebApp","isMobile","datacollectionsExcluded","datacollections","datacollectionsIncluded","sort","sortFn","a","b","localeCompare","objectsExcluded","objects","objectsIncluded","hintsExcluded","hints","h","hintsIncluded","connectedObjects","connectedFields","connectFields","connectedObj","f","settings","linkObject","linkedObjects","currObjID","linkedObjectID","linkedFields","columnName","deep","_searchDeep","curr","items","resultsCurr","resultsP","processes","hasProcess","process","views","_views","subViews","lookDeep","view","pageViews","subPages","viewAll","allViews","queriesExcluded","queries","q","queriesIncluded","urlResolve","pointer","split","parseStep","steps","urlPointer","acrossApp","urlObject","urlPage","urlQuery","objectlistIsOpen","objectlistSearchText","objectlistSortDirection","objectlistIsGroup","newView","pageByID","viewNew","application","ABViewManagerMobile","ABApplication","pageDefault","DefaultValues","object","datasourceID","linkDatacollectionID","linkFieldID","followDatacollectionID","objectWorkspace","filterConditions","glue","sortFields","loadAll","populate","isQuery","fixSelect","syncType","__dataCollection","_dataCollectionNew","refreshFilterConditions","__bindComponentIds","__flexComponentIds","_dataStatus","dataStatusFlag","notInitial","__filterCond","__model","_pendingLoadDataResolves","contextKey","preventPopulate","__datasource","queryByID","__treeCollection","_treeCollectionNew","__isGroup","removeFromApplications","next","apps","applications","allRemoves","app","datacollectionRemove","$dc","datasource","datacollection","sourceType","datacollectionLink","datacollectionByID","fieldLink","fieldByID","initializing","initialized","dataStatus","isDataInitialized","dataInitialized","setCursor","itemId","setCursorTree","currTreeId","getCursor","currTreeItem","getItem","_itemId","dc","__previousCursorId","exists","tc","find","treeItem","$parent","treeCursor","currId","currItem","item","currItemAndChilds","serialize","refreshLinkCursor","getFirstRecord","getFirstId","getNextRecord","record","getNextId","force","linkCursor","dvLink","filterData","rowData","isParentFilterValid","setStaticCursor","currentUserUsername","userFields","fields","found","currRowId","rowId","count","isCursorFollow","dcFollow","datacollectionFollow","loadData","filterCondition","cond","___AD","onAfterCursorChange","attachEvent","currData","isRelated","relateData","needAdd","updatedVals","bad","ABObjectQuery","objList","where","newDataId","alias","objectAlias","rule","findAll","newQueryData","updatedV","skipDatasourceFilter","isValidData","__reloadWheres","bcids","$$","pos","getParentView","index","DC","addView","L","css","click","event","reloadData","removeView","parseTreeCollection","datasourceLink","d","updateItemData","updateRelateVal","relationName","rowRelateVal","valIsRelated","updateItem","updateRelationalDataFromLinkDC","incomingObj","iPK","newData","currCursor","needsRefresh","localField","colName","relName","linkType","rval","getRelationValue","newPacket","objectID","field","fieldID","needUpdate","isExists","updatedIds","updatedTreeIds","_queryUpdateData","updateCursor","ABObject","assign","dcItem","staleRefresh","deleteId","needDelete","deletedIds","deletedTreeIds","delId","updateRelateVals","relateVal","linkDC","eventAdd","emitter","eventName","listener","currentCursor","previousCursorId","isMyDataThere","shouldPopulate","valuesToAdd","valuesIn","valuesToRemove","prmsAllRefreshes","allAdds","followDC","followCursor","waitForDataCollectionToInitialize","eventRemove","getWhereClause","start","limit","wheres","__additionalWheres","linkRule","ruleLinkedData","unshift","whereCleanUp","sorts","s2","l2","skip","parentDc","dcFilters","dv","platformFind","processIncomingData","queuedParse","incomingData","total_count","nextData","remain","splice","parsedData","async","__totalCount","__throttleIncoming","load","reloadTimer","reloadPromise","reloadPromise__resolve","reloadPromise__reject","reloadWheres","getData","linkDv","linkObj","linkVal","totalCount","bind","unbind","removeComponent","comId","dataCollectionLink","linkCursorId","linkViaType","filterRule","__filterDatasource","filterComplexNew","fieldsLoad","setValue","__filterDatacollection","isAlreadyThere","allMatch","__filterScope","scopeList","userScopes","s","allowAll","objectIds","scopeRules","sRules","scopeWhere","syncTypeFlag","server","client","oItem","tran","updatedTran","tranKey","dcLink","cursorLink","linkedField","relatedData","newItem","clone","clonedDatacollection","parseMe","cursorID","filteredClone","filters","evt","__events","eventClear","removeListener","waitReady","builder","ABApplicationMobile","ABDefinition","ABComponent","ABFieldManager","ABIndex","ABObjectExternal","ABObjectImport","ABObjectApi","ABObjectApiNetsuite","ABDataCollection","ABHint","ABProcess","ABProcessParticipant","ABProcessLane","ABProcessTaskManager","ABStep","ABViewDetailItem","ABViewFormItem","ABMobileViewFormItem","RowFilter","hash","_allApplications","_allObjects","_allHints","_allProcesses","_allQueries","_allSteps","_allDatacollections","nameFilter","toApplicationNameFormat","toFieldRelationFormat","toJunctionTableFK","objectName","fkName","substring","toJunctionTableNameFormat","appName","sourceTableName","targetTableName","toObjectNameFormat","definitionClean","allDefinitions","keyList","keyFn","objectKeysByDef","isRaw","definitionsParse","defs","applicationByID","ID","applicationNew","applicationMobileNew","datacollectionNew","fieldNew","newField","indexNew","objectNew","isExternal","isImported","isNetsuite","isAPI","objectFile","objectLanguage","objectProcessDefinition","objectProcessForm","objectProcessInstance","objectRole","objectScope","objectToken","objectUser","objectKey","objectSecret","hintID","hintNew","stepID","stepNew","stepDef","hint","processNew","processElementNew","taskDef","defaults","newTask","processElementNewForModelDefinition","element","newElement","defaultDef","definitionForElement","fromElement","queryNew","rowfilterNew","App","idBase","_App","viewNewDetatched","_mockApp","_notifyInfo","moreInfo","fieldName","datacollectionID","datacollectionName","ds","datacollectionDSID","datacollectionDSName","processName","_tenantID","user","_user","taskID","taskName","applicationID","applicationName","viewID","viewName","viewKey","Fields","FIELD","allFields","fieldByKey","active","description","transition","showIntroStep","stepIDs","_steps","sID","ele","stepAdd","step","stepByID","stepRemove","stepIndex","unique","fieldIDs","_unknownFieldIDs","fId","attributeFieldIDs","indexName","dbTableName","uniqueName","ABEmitter","fieldList","mlFields","translate","defaultTranslations","language_code","languageDefault","unTranslate","currLanguage","first","t","foundOne","trans","_where","_sort","_skip","_limit","staleRefreshInProcess","staleRefreshMap","staleRefreshPending","staleRefreshTimerID","responseContext","contextValues","prepareMultilingualData","multilingualFields","shouldTranslate","urlParamsCreate","urlRest","urlParamsDelete","urlRestItem","urlParamsFind","urlParamsUpdate","urlRestCount","numberOfRows","currID","Err","staleRefreshProcess","currentEntries","responseHash","allKeys","findConnected","results","myObj","returnData","upsert","csv_packed","csvPack","packedData","relations","myObject","content","returnType","I","connections","connField","connHash","connPK","indx","_csvID","ids","hasRelationData","connData","isPKID","c","connDataCsv","properties","parseResult","keyFields","parseFields","populatedData","entries","connEntry","dateFields","calculatedFields","objectLink","olPK","relatedMlFields","subData","relationValue","calField","ABModelApi","readonly","apiType","isFetched","getPagingValues","pagingSettings","paging","dataFromKey","itemResult","dataKey","ABModelApiNetsuite","credentials","columnRef","ABModel","ABObjectCore","connName","labelFormat","labelSettings","isNoLabelDisplay","tableName","primaryColumnName","transColumnName","urlPath","createdInAppID","frozenColumnID","hiddenFields","importedFieldIDs","_fields","importIndexes","indexIDs","_unknownIndex","indexes","_indexes","objectLinks","isConnection","fieldImport","fieldRemove","origLen","fid","fieldReorder","sourceId","targetId","itemMoved","oPos","j","fieldSave","fieldAdd","imageFields","isMultilingual","indexByID","indexRemove","idx","indexSave","urlRestBatch","urlRestLog","urlRestRefresh","workspaceSortFields","workspaceViews","currView","getCurrentView","workspaceFilterConditions","workspaceFrozenColumnID","workspaceHiddenFields","isReadOnly","defaultValues","defaultValue","urlField","remoteCreate","cloneOne","prop","minRelationData","colIds","colId","colIdNoBracket","defaultFld","fieldUseAsLabel","displayData","labelData","defaultField","trim","noLabelText","rawString","valField","newValue","cleanRule","ABModelQuery","__missingObject","__missingFields","__cantFilter","__duplicateFields","__linkProblems","alias2Obj","importJoins","joins","importFields","_objectWorkspaceViews","objectWorkspaceViews","grouping","hidePrefix","exportJoins","exportFields","fieldSettings","newFields","fieldInfo","objectByAlias","_objects","objID","canFilterField","isNew","clonedField","currFields","_joins","objectBase","links","_links","uniqueObjectIDs","newLinks","storeObject","storeLinks","processJoin","baseObject","linkField","rootObject","canFilterObject","linkedObject","isDisabled","disabled","_concat","ABProcessTaskSubProcess","onProcessReady","xmlDefinition","currElements","_elements","elementIDs","eID","_connections","diagramID","modelDefinition","modelNew","modelUpdate","xml","allConnections","connectionForDiagramID","dID","connectionsIncoming","to","connectionsOutgoing","from","connectionRemove","connectionSimplyElement","bo","businessObject","sourceRef","targetRef","connectionUpsert","simpleConn","elementAdd","elementByID","elementForDiagramID","elementRemove","isTriggeredBy","taskForTriggerKey","connectionNextTask","currElement","connectionPreviousTask","processData","tasksToAsk","allPreviousTasks","queryPreviousTasks","processDataFields","parentFields","allPreviousConnectionsForConnection","conn","hashConn","allPreviousConnectionsForElement","prevConnections","task","prevTasks","processDataObjects","triggerKey","list","param","responses","processedIDs","apply","el","AllViews","Views","default","common","V","viewClass","addViewClass","View","getFieldVal","pureRelationName","isNaN","getConnectFieldValue","connectedVal","extractVal","itemData","indexField","indexField2","fieldVal","_settings","condition","_QueryFields","_Fields","_logic","callbacks","onChange","removeHtmlTags","div","innerHTML","textContent","innerText","condResult","ruleFieldType","textValid","dateValid","numberValid","listValid","booleanValid","userValid","connectFieldValid","thisObjectValid","compareValue","compareArray","queryFieldValid","setHours","Number","queryId","fieldId","qIdBase","inQueryFieldFilter","inQueryValid","inQueryFilter","dataCollectionValid","compareValueLowercase","ruleSafe","listThisObjects","newRowData","_Object","processFieldsLoad","processFields","_ProcessFields","uiInit","fieldIsFilterable","thisObjOption","fieldsToQB","showObjectName","conditions","processFieldKeys","hasQueryField","isProcessParticipant","fieldsAddFiltersBoolean","fieldsAddFiltersConnectObject","isSource","fieldsAddFiltersString","opt","isCustomFK","fieldsAddFiltersQuery","fieldsAddFiltersDate","fieldsAddFiltersNumber","fieldsAddFiltersList","fieldsAddFiltersUser","fieldsAddFiltersThisObject","isRecordRule","fieldsAddFiltersRecordRule","processField","includes","processFieldId","pop","fieldsAddFiltersContext","fieldsAddFiltersCustom","dateConditions","less","component","beforeCondition","greater","afterCondition","less_or_equal","onOrBeforeCondition","greater_or_equal","onOrAfterCondition","is_current_date","isCurrentDateCondition","less_current","beforeCurrentCondition","greater_current","afterCurrentCondition","less_or_equal_current","onOrBeforeCurrentCondition","greater_or_equal_current","onOrAfterCurrentCondition","last_days","onLastDaysCondition","next_days","onNextDaysCondition","is_empty","isEmpty","is_not_empty","isNotEmpty","condKey","batch","handler","stringConditions","contains","containsCondition","not_contains","notContainsCondition","equals","isCondition","not_equal","isNotCondition","numberConditions","equalCondition","notEqualCondition","lessThanCondition","moreThanCondition","lessThanOrEqualCondition","moreThanOrEqualCondition","listConditions","equalListCondition","notEqualListCondition","booleanConditions","checked","checkedCondition","unchecked","notCheckedCondition","userConditions","is_current_user","isCurrentUserCondition","is_not_current_user","isNotCurrentUserCondition","contain_current_user","containsCurrentUserCondition","not_contain_current_user","notContainsCurrentUserCondition","connectConditions","same_as_user","sameAsUser","not_same_as_user","notSameAsUser","in_data_collection","inDataCollection","not_in_data_collection","notInDataCollection","queryConditions","in_query_field","inQueryField","not_in_query_field","notInQueryField","in_query","inQuery","not_in_query","notInQuery","thisObjectConditions","recordRuleConditions","same_as_field","sameAsField","not_same_as_field","notSameAsField","contextConditions","context_equals","equalsProcessValue","context_not_equal","notEqualsProcessValueCondition","context_in","inProcessValueCondition","context_not_in","notInProcessValueCondition","_customOptions","queriesLoad","_Queries","getValue","isComplete","noValueRules","isCompleteRules","returnSingular","columnId","config_settings","queryValid","ABField","ABFieldAutoIndexDefaults","isFilterable","isSortable","menuName","supportRequire","supportUnique","useAsLabel","compatibleOrmTypes","compatibleMysqlTypes","delimiter","displayLength","previewText","getDelimiterSign","delimiterItem","delimiterList","sign","setValueToIndex","displayNumber","ABFieldBooleanDefaults","AGE","dateString","dataDate","diffYears","Math","round","floor","YEAR","MONTH","DAY","DATE","HOUR","MINUTE","MINUTE_TO_HOUR","mins","hours","rhours","minutes","rminutes","parseFloat","ABFieldCalculateDefaults","formula","decimalSign","decimalPlaces","ABFieldCalculateCore","convertToJs","place","recalculate","numberVal","calVal","dateVal","booleanVal","eval","ABFieldCombinedDefaults","combinedFields","getCombinedFields","fld","connectVal","connectLabel","ABFieldConnectDefaults","linkColumn","fieldDefaults","names","configError","pullRelationValues","selectedData","dataValue","propName","forUpdate","reservedNames","fieldKey","fieldOrmTypes","fieldMysqlTypes","fieldIcon","fieldMenuName","fieldDescription","fieldIsSortable","fieldSupportRequire","fieldSupportQuery","supportQuery","defaultCheck","defaultVal","returnVal","showIcon","required","width","myDef","ABFieldDateDefaults","dateFormat","defaultDate","defaultDateValue","validateCondition","validateRangeUnit","validateRangeBefore","validateRangeAfter","validateStartDate","validateEndDate","dateResult","currentDate","isFinite","startDate","endDate","startDateDisplay","getDateDisplay","endDateDisplay","minDate","maxDate","exportValue","dateObj","getFormat","dateFormatString","dateData","dateToString","RegEx","ABFieldDateCore","timeFormat","defaultTime","defaultTimeValue","baseDefault","currDate","getHours","setMinutes","getMinutes","setSeconds","getSeconds","setMilliseconds","getMilliseconds","getTimeFormat","datetimeFormat","dateToStr","ABFieldEmailDefaults","defaultCheckbox","Reg","ABFieldFileDefaults","removeExistingData","fileSize","fileType","limitFileSize","limitFileType","filename","requestParam","allParameters","myParameter","ABFieldFormulaDefaults","reCalculate","isGrouped","reformat","numData","rowDataFormat","fieldBase","filterHelper","numberList","decimalSize","getDecimalSize","multiplier","pow","sum","max","min","_rowFilter","ABFieldImageDefaults","useWidth","imageWidth","useHeight","imageHeight","useDefaultImage","defaultImageUrl","ABFieldJsonDefaults","ABFieldListDefaults","isMultiple","hasColors","multipleDefault","pendingDeletions","defaultVals","hex","optTran","ABFieldLongTextDefaults","MAX_CHAR_LENGTH","supportMultilingual","ABFieldNumberDefaults","typeFormat","typeDecimals","typeDecimalPlaces","typeRounding","typeThousands","validation","validateMinimum","validateMaximum","formatList","iL","position","places","n","errMessage","formatSign","thousandsSign","postfix","digit","formatNumber","groupDelimiter","groupSize","decimalDelimiter","negativeSign","dataStr","abs","integerStr","decimalStr","integerValue","substr","decimalVal","ABFieldStringDefaults","ABFieldTextFormulaDefaults","textFormula","setValueToFormula","formulaString","fieldRegExp","matches_field_array","autoIndexVal","setBuildinValueToFormula","matches_buildin_array","buildinList","getBuildInFunction","formula_array","isBracketInBracket","functionName","parameters_array","isMatch","resultParameters","parameter_size","getLeft","getRight","getMid","getTrim","getTrimLeft","getTrimRight","getLength","getRegExpReplace","trimLeft","getExtractRegex","getReplace","getLower","getUpper","getCapitalize","getRandom","getNumberToWords","getDateDayOfWeekName","getDateMonthOfYearName","getFormatDate","string","endPosition","endposition","reverseStr","reverseString","reverse","startPosition","trimRight","regexp","replaceString","extractResult","searchValue","replaceValue","toUpperCase","charAt","random","units","tens","scales","end","chunks","chunksLen","chunk","ints","word","words","resultFormula","ABFieldSelectivity","ABFieldTreeDefaults","ABFieldConnect","ABFieldUserDefaults","USERNAME_FIELD_ID","editable","isCurrentUser","isShowProfileImage","isShowUsername","isUser","ABMobileView","ABMobilePageDefaults","ABPropertyComponentDefaults","defaultPage","hideTitle","hideTabs","myAppID","menuType","DV","missingPageID","allPageDeletes","allPages","pageRemove","pageInsert","setPageDefault","refreshInstance","page","updateIcon","lookUpIds","mapNewIdFn","copy","ABMobileViewDefaults","labelKey","tabicon","ABViewPropertyComponentDefaults","warningsSilent","__missingViews","newInstance","viewIcon","tabIcon","viewIDs","isRoot","height","x","y","dx","dy","allParents","parents","curView","parentFormComponent","parentDetailComponent","detail","pageParent","filterFn","parentPage","pageRoot","rootPage","dataviewID","_currentObject","errNoDCID","errNoDC","viewByID","viewRemove","viewInsert","viewReorder","viewId","toPosition","findIndex","allViewDeletes","wantsAdd","copyUpdateProperyList","ignoreSubPages","copiedSubPage","ignoreSubViews","copiedView","newName","allSaves","p2","vi","ABViewCustomPropertyComponentDefaults","ABViewDefaults","componentList","ABViewFormButtonPropertyComponentDefaults","includeSave","saveLabel","includeCancel","cancelLabel","includeReset","resetLabel","afterCancel","alignment","isDefault","ABViewFormButtonDefaults","ABMobileViewFormCheckboxPropertyComponentDefaults","ABMobileViewFormCheckboxDefaults","ABMobileViewFormConnectPropertyComponentDefaults","formView","popupWidth","popupHeight","ABMobileViewFormConnectDefaults","ABRecordRule","ABSubmitRule","ABViewFormDefaults","ABViewFormPropertyComponentDefaults","showLabel","labelPosition","labelWidth","clearOnLoad","clearOnSave","displayRules","editForm","recordRules","submitRules","objectLoad","viewsToAllow","fieldComponents","flattenComponents","components","comp","addFieldToForm","yPosition","fieldComponent","formComponentMobile","RecordRule","_recordRule","formLoad","fromSettings","recordRulesReady","rulesReady","doRecordRulesPre","processPre","doRecordRules","doSubmitRules","SubmitRules","ABViewFormCustomPropertyComponentDefaults","ABViewFormCustomDefaults","ABMobileViewFormDatepickerPropertyComponentDefaults","timepicker","ABMobileViewFormDatepickerDefaults","ABMobileViewFormDatetimePropertyComponentDefaults","ABMobileViewFormDatetimeDefaults","ABMobileViewFormEmailPropertyComponentDefaults","ABMobileViewFormEmailDefaults","ABViewFormFilePropertyComponentDefaults","ABViewFormFileDefaults","ABViewFormFormulaPropertyComponentDefaults","ABViewFormFormulaDefaults","ABMobileViewFormFile","ABViewFormImagePropertyComponentDefaults","ABViewImageFileDefaults","ABViewFormFieldPropertyComponentDefaults","disable","ABMobileViewFormNumberPropertyComponentDefaults","isStepper","ABMobileViewFormNumberDefaults","ABMobileViewFormCustom","ABMobileViewFormReadonlyPropertyComponentDefaults","ABMobileViewFormReadonlyDefaults","ABMobileViewFormSelectSingle","ABMobileViewFormSelectMultiplePropertyComponentDefaults","ABMobileViewFormSelectMultipleDefaults","ABMobileViewFormSelectSinglePropertyComponentDefaults","ABMobileViewFormSelectSingleDefaults","ABViewFormTextboxPropertyComponentDefaults","placeholder","ABViewFormTextboxDefaults","ABViewLabelPropertyComponentDefaults","formatNormal","formatTitle","formatDescription","ABViewListPropertyComponentDefaults","linkPageAdd","ABViewTimelinePropertyComponentDefaults","ABProcessLaneDefaults","ABProcessParticipantDefaults","validChecker","attribute","laneIDs","stashed","useAccount","account","useField","userField","Tasks","DEFINITIONTYPES","AllProcessElements","ELEMENT","DiagramReplace","target","eventDefinitionType","allTasks","tasks","DiagramReplaceDefinitionsForType","StartEvents","Gateways","EndEvents","eventDefinitions","$type","state","laneDiagramID","errorConfig","instance","initState","instanceValues","taskState","isEndTask","allArgs","myLane","myState","nextTasks","myDiagramObj","hashDiagramObjects","onError","exitFlows","tasksFromFlow","flow","flowObj","targetIDs","tid","targetTask","hashProcessDataValues","listDataFields","currentProcessValues","_prevState","stateCompleted","stateUpdate","wantToDoSomething","startElements","elem","previousElements","objectOfStartElement","startElem","objectOfPrevElement","prevElem","qlObj","ABProcessElement","ABProcessTaskEndDefaults","actionName","className","triggered","ABProcessGatewayExclusiveDefaults","ABProcessTaskEmailDefaults","myDefaults","subject","AccountingBatchProcessingDefaults","AccountingFPCloseDefaults","AccountingFPYearCloseDefaults","AccountingJEArchiveDefaults","CalculateDefaults","_fakeNum","_fakeObj","ABProcessTaskServiceDefaults","ABProcessTaskGetResetPasswordUrlDefaults","InsertRecordDefaults","isRepeat","startElement","currProcess","previousElement","fieldRepeat","repeatColumn","ABQLManager","ABProcessTaskServiceQueryDefaults","_datasources","fromAttributes","registerDatasource","processDataField","SubProcessDefaults","NOSPAM","isExpanded","isEnable","_unknownElementIDs","processTask","connectionAttrs","parameterId","dataFieldsAll","dataFieldOpt","dataFieldsAllInserted","previousFields","startsWith","stateData","returnField","ABFieldList","ABProcessTaskApprovalDefaults","fixBoolean","formBuilder","preProcessFormIOComponents","abFieldID","vals","path","pluck","action","myID","listField","ABProcessTaskUserDefaults","ui","ABProcessTaskUserExternalDefaults","who","toUsers","ABProcessTaskUserFormDefaults","ABProcessTriggerDefaults","ABProcessTrigger","ABProcessTaskTriggerLifecycleDefaults","lifecycleKey","repeatEvery","repeatTime","repeatDaily","repeatWeekly","repeatMonthly","isEnabled","timeVals","setUTCHours","setUTCMinutes","getUTCHours","getCronExpression","day","dayWeek","minute","hour","parameterDefinitions","prevOP","objectOut","initObject","objectLookup","nextOP","NextQLOps","OP","qlOP","quotedLabel","availableProcessDataFieldsHash","availableProcessDataFields","hashFieldIDs","paramChanged","pDef","ABQL","ParameterDefinitions","ABQLFindCore","ABQLManagerCore","matchingOPs","QLOps","Op","ABQLObjectCore","objNameDef","warningMessage","QLUpdate","QLSave","QLPluck","ABQLSetPluck","ABQLRowUpdate","ABQLRowSave","ABQLRowPluckCore","nextQLOps","NextQLOp","ABQLSetSave","ABQLRowSaveCore","ABQLRowUpdateCore","ABQLRow","ABQLSetFirstCore","ABQLSetPluckCore","objectOutID","ABQLSetSaveCore","taskParam","registered","task_param","ABViewWidget","ABViewCSVExporterDefaults","ABViewCSVExporterPropertyComponentDefaults","buttonLabel","hasHeader","hiddenFieldIds","ABViewCSVImporterDefaults","ABViewCSVImporterPropertyComponentDefaults","availableFieldIds","rowDatas","ABViewCarouselPropertyComponentDefaults","hideItem","hideButton","navigationType","filterByCursor","detailsPage","detailsTab","editPage","editTab","parseIntOrDefault","_this","parseOrDefault","imageField","ABViewChartContainer","ABViewChartAreaPropertyComponentDefaults","areaType","isLegend","chartHeight","labelFontSize","stepValue","maxValue","ABViewChartBarPropertyComponentDefaults","barType","barPreset","ABViewContainer","ABViewChartPropertyComponentDefaults","columnValue","columnLabel","columnValue2","isPercentage","multipleSeries","ABViewChartDefaults","labelField","valueField","valueField2","ABViewChartLinePropertyComponentDefaults","lineType","linePreset","ABViewChartPiePropertyComponentDefaults","pieType","innerFontSize","ABViewCommentPropertyComponentDefaults","columnUser","columnComment","columnDate","getCurrentUserId","userObject","getUsers","currentUser","image","getUserField","getCommentField","getDateField","getUserData","UserImageField","imageURL","urlImage","ABViewPropertyDefaults","ifPanel","removable","elsePanel","ABViewConnectDataFilterPropertyComponentDefaults","ABView","columns","gravity","movable","viewsSortByPosition","accessLevels","accessibleRoles","getUserAccess","accessLevel","isAccessManager","currentRole","urlView","updateAccessLevels","roleId","viewDestroy","ABViewDataFilterPropertyComponentDefaults","viewType","showFilter","showSort","ABViewDataSelectPropertyComponentDefaults","ABViewDetail","ABViewDataviewPropertyComponentDefaults","xCount","ABViewDataviewDefaults","dataview","ABViewDetailCheckboxPropertyComponentDefaults","ABViewDetailCheckboxDefaults","ABViewDetailPropertyComponentDefaults","ABViewDetailDefaults","addFieldToDetail","detailComponent","ABViewDetailCustomPropertyComponentDefaults","ABViewDetailCustomDefaults","ABViewDetailImagePropertyComponentDefaults","ABViewDetailImageDefaults","detailView","getCurrentData","detailCom","ABViewDetailTextPropertyComponentDefaults","ABViewDetailTextDefaults","ABViewDetailTreeDefaults","ABViewDocxBuilderPropertyComponentDefaults","buttonlabel","filelabel","toolbarBackground","buttonPosition","uploadUrl","downloadUrl","dvList","includeDelete","deleteLabel","ABViewFormCheckboxPropertyComponentDefaults","ABViewFormCheckboxDefaults","ABViewFormConnectPropertyComponentDefaults","ABViewFormConnectDefaults","formComponent","ABViewFormDatepickerPropertyComponentDefaults","ABViewFormDatepickerDefaults","ABViewFormJsonPropertyComponentDefaults","ABViewFormJsonDefaults","ABViewFormNumberPropertyComponentDefaults","ABViewFormNumberDefaults","ABViewFormCustom","ABViewFormReadonlyPropertyComponentDefaults","ABViewFormReadonlyDefaults","ABViewFormSelectMultiplePropertyComponentDefaults","ABSelectMultipleDefaults","ABViewFormSelectSinglePropertyComponentDefaults","ABSelectSingleDefaults","ABViewFormTreePropertyComponentDefaults","ABTreeDefaults","ABViewGanttPropertyComponentDefaults","titleFieldID","startDateFieldID","endDateFieldID","durationFieldID","progressFieldID","notesFieldID","ABViewGridPropertyComponentDefaults","padding","showToolbar","isEditable","massUpdate","allowDelete","isExportable","trackView","summaryColumns","countColumns","gridFilter","filterOption","userFilterPosition","isGlobalToolbar","hideHeader","labelAsField","hideButtons","groupBy","columnConfig","saveLocal","settingsDefault","base","settingsDefaultJSON","owFields","removeField","shouldSave","ABViewImagePropertyComponentDefaults","ABViewKanbanPropertyComponentDefaults","editFields","verticalGroupingField","horizontalGroupingField","ownerField","template","textTemplate","TextTemplate","PropertyComponentDefaults","numColumns","addColumn","isEdited","ABViewMenuPropertyComponentDefaults","orientation","buttonStyle","menuAlignment","menuInToolbar","menuPadding","menuTheme","menuPosition","menuTextLeft","menuTextRight","menuTextCenter","order","ABMenuDefaults","isChecked","pageId","ClearPagesInView","AddPagesToView","displayPage","existsPage","tabId","existsTab","getAliasname","menuItem","getSubMenu","getMenuItem","submenu","pageInfo","lang","translation","aliasname","getParentPageId","tabView","currentView","ABViewPDFImporterPropertyComponentDefaults","pageWidth","fixedPageWidth","pageBackground","getPageActionKey","ABViewPivotPropertyComponentDefaults","removeMissed","totalColumn","separateLabel","structure","ABViewReportManagerPropertyComponentDefaults","dataviewFields","editMode","hideCommonTab","hideDataTab","hideViewTab","parsedSettings","key1","key2","ABViewSchedulerPropertyComponentDefaults","allDay","repeat","calendar","color","sectionID","unitID","notes","originID","calendarDataviewID","calendarDataviewFields","timeline","week","agenda","timelineSectionList","unitList","export","excel","csv","pdf","_object","scheduler","ABViewTabPropertyComponentDefaults","minWidth","stackTabs","darkTheme","sidebarWidth","sidebarPos","iconOnTop","ABViewTabDefaults","addTab","tabName","ABViewTextPropertyComponentDefaults","displayText","componentID","clearTemplateValue","fData","columnSpan","rowSpan","ABApplicationCore","ABViewPage","_handler_page_updated","definition","pg","applicationForID","errDepreciated","definitionForID","areaKey","newObj","_listInsert","entity","_listRemove","begLen","datacollectionInsert","objectInsert","objectRemove","processInsert","processRemove","queryInsert","queryRemove","exportIDs","parseView","pid","pdef","vid","vdef","warningsEval","checks","warningsMessage","allRoles","warningsAll","warnings","_warnings","ABApplicationMobileCore","ABViewPageMobile","newPage","oldPage","CustomComponentManager","uid","actions","custom","create","edit","formName","import","rename","yes","no","none","close","defaultPlaceholder","invalidMessage","createErrorMessage","createSuccessMessage","updateErrorMessage","updateSucessMessage","deleteErrorMessage","deleteSuccessMessage","renameErrorMessage","renameSuccessMessage","dataFieldHeaderLabel","dataFieldHeaderLabelPlaceholder","dataFieldLabel","dataFieldLabelPlaceholder","dataFieldColumnName","dataFieldColumnNamePlaceholder","dataFieldShowIcon","componentDropZone","initComponents","_actions","ABDataCollectionCore","blacklistLoadData","datacollectionId","bindParentDc","define","cursorUpdated","__prevLinkDcCursor","hideProgressOfComponents","attachFlexlayout","showProgress","sync","onDataRequestEvent","loadNext","unsync","detachEvent","onDcLoadData","off","hideProgress","DataCollection","_extendCollection","treeStore","TreeCollection","dataStore","extend","SelectionModel","finally","onAfterLoadEvent","addCss","removeCss","render","onAfterLoad","addRowToTree","parentAlias","dataId","parentItemIds","parentId","_alias","_dataId","treeNode","parentItemId","boundComp","datacollectionById","ABDefinitionCore","ABHintCore","allSteps","allDestroy","hintIndex","createHintUI","display","cookie","hide","dontShow","newStep","nextEl","hintId","eventEl","theNextEl","querySelector","checkVisibility","onNext","boxes","querySelectorAll","onPrevious","delay","ABIndexCore","migrateCreate","migrateDrop","ABMLClassCore","ABModelCore","errorPopup","no_socket_trigger","handler_create","handler_common","handler_delete","handler_findAll","handler_logs","handler_update","batchCreate","once","newVal","nestedRules","loadInto","DT","logs","update","batchUpdate","rowIds","boolFields","actualColumn","lcColumn","bField","_handler_object_migrate","fromObj","hasOwnProperty","disableRelatedQueries","fieldDrops","skipMigrate","isAdd","columnResize","newWidth","columnHeaders","isObjectWorkspace","hiddenFieldNames","columnHeader","validationRules","adjust","footer","customDisplays","DataTable","eachColumn","node","getItemNode","column","customDisplay","allWarnings","w","isUuid","getDbInfo","formCleanValues","formCleanData","atomicjs","ABObjectApiCore","fetchData","insertDataMax","verb","withCredentials","parsedResponse","pendingModelCreate","ABObjectApiNetsuiteCore","Field","Type","Null","Key","Default","Extra","definitionId","ABObjectQueryCore","conditionScan","fieldEntry","oldWidth","originTemplate","_conditionCheck","isConditionComplete","ABProcessCore","_unknownShapes","allElements","appsWithProcess","_new","_old","needSave","elementNewForModelDefinition","unknownShape","shape","unknownShapeRemove","_DOMParser","DOMParser","xmlStr","parseFromString","ActiveXObject","xmlDoc","loadXML","getElementsByTagName","ABStepCore","ABViewManagerCore","ABViewManagerMobileCore","getSeparateItems","validateFile","fileInfo","file","extensionType","getDataRows","separatedBy","reader","FileReader","dataCols","dCol","readAsText","getGuessDataType","dataRows","colIndex","line","str","FilterComplexCore","_toInternal","_toExternal","_uiQueryOptionId","_uiFieldOptionId","_options","_initComplete","observing","and","or","thisObject","inQueryFieldQueryPlaceholder","inQueryFieldFieldPlaceholder","contextDefaultOption","popup","querybuilder","recordRuleFieldOptions","rows","borderless","hidden","isSaveHidden","myPopup","__blockOnChange","getState","$observe","_cond","helper","$query","getFilterFunction","qbSettings","il8n","dateFormatStr","toShortHand","uiQueryCustomValue","enable","$el","$filterView","$app","require","_fnBaseGetValue","GetValue","queryOptId","fieldOptId","selectedQueryId","selectedFieldId","CreateFilter","inputs","uiValue","localId","mode","parser","i18n","margin","getService","$queryOpt","$fieldOpt","fieldColumnName","uiQueryValue","uiDataCollectionValue","uiCustomValue","uiContextValue","uiNoneValue","uiUserValue","uiListValue","LinkType","uiTextValue","uiQueryFieldValue","uiRecordRuleValue","uiBooleanValue","onAfterRender","queryView","$view","style","zIndex","isQueryField","linkObjectId","qOpts","pullFieldOption","Query","fieldOptions","qVal","$fieldOption","getChildViews","refreshFieldOption","processFieldKey","pField","popUp","show","addCustomOption","RowFilterCore","filterForm","addNewFilter","inputValue","queryCombo","queryFieldCombo","queryFieldComboQuery","queryFieldComboField","fieldMatch","dataCollection","listOptions","datePicker","batchName","queryFieldOptions","recordRuleOptions","getFieldList","getFilterUI","isolate","cols","oldVal","selectCombineCondition","suggest","onBeforeShow","resize","$viewCond","selectField","cells","oldValue","onChangeRule","onChangeQueryFieldCombo","validate","isNumber","onTimedKeyPress","autowidth","indexView","getFormView","removeNewFilter","getAddButtonUI","$viewForm","toggleAddNewButton","ignoreNotify","showBatch","Queries","ruleViewId","getActiveId","$viewComparer","getList","defaultOpt","dcOptions","_Application","blockOnChange","unblockOnChange","$fieldElem","selectedOpt","getPopup","valueViewId","$viewConditionValue","dateField","logic","col","blockEvent","unblockEvent","_completeConditions","ABViewForm","RowUpdater","addNew","_mockFormWidget","uiItem","self","$viewItem","maxWidth","_extendedOptions","toggleCustomProcessOption","removeItem","addItem","$form","ProgressBar","toggleForm","excludeSelected","$viewContainer","$customValueElem","_pullInputElement","$processValueElem","isVisible","isProcessValue","formFieldComponent","childViews","inputView","busy","getOptions","labelRight","layout","ready","$field","setExtendedOptions","showProcessOption","$customOption","$processOption","$elem","childView","ABFieldCore","editorValues","addValidation","Filter","filterComplex","fnMigrate","migrateUpdate","customEdit","formKey","FC","getSettings","ABFieldAutoIndexCore","editor","$group","detailComponentSetting","ABFieldBooleanCore","checkbox","ABFieldCombineCore","ABFieldConnectCore","multiselect","editFormat","editParse","openOptions","button","$suggest","$list","getAndPopulateOptions","whereClause","term","theEditor","_getOptionsThrottle","_timeToPullData","_getOptionsResolve","haveResolved","respond","linkedObj","linkedCol","linkedModel","showAllOptions","getStorageID","storedOptions","selected","linkViaOneValues","whereRels","sortRels","valHash","clearStorage","storageID","itemObj","getItemFromVal","returnVals","combineFilters","filterByConnectValues","parseFilterByConnectValues","depth","valuesByDepth","ef","$parentField","filterValue","parentValue","filterColumn","filterField","dataFieldId","valItem","formVals","handlerOptionData","$destructed","populateOptions","addCy","_sortByRecent","populateOptionsDataCy","currVal","selectedVals","cVal","some","selectedItem","each","option","setAttribute","pullRecordRelationValues","_recentStorageId","saveSelect","selectedItems","recentSelected","aId","bId","formComponentSetting","webixLocale","longDateFormatStr","ABFieldDateTimeCore","timeToStr","ABFieldEmailCore","ABFieldFileCore","fileTemplate","typesList","maximumSize","parentContainer","webixContainer","container","domNode","urlUpload","uploader","apiOnly","upload","inputName","multiple","onBeforeFileAdd","classList","acceptableTypes","acceptableSizes","size","onFileUpload","onFileUploadError","addDropZone","dataset","deleteFile","uploaderId","fileDialog","rowid","iconDisplay","fileDisplay","fileURL","fileLink","getAttribute","fileicon","fileDeleteIcon","removeAttribute","isWebix","urlFile","ABFieldFormulaCore","ABFieldImageCore","idCustomContainer","formId","containerHeight","imageSrcHeight","heightVal","imageTemplate","imgHeight","imgWidth","percent","uploadInProgress","showImage","readAsDataURL","dataTable","deleteImage","removeDefaultImage","imageDisplay","isRemoveDefaultImage","html","backgroundImage","imageIcon","imageDeleteIcon","toBase64","img","Image","crossOrigin","canvas","getContext","drawImage","imageData","toDataURL","rotateLeft","imgFile","rotateRight","ABFieldJsonCore","ABFieldListCore","numDone","numToDo","remainingFields","_getSelectedOptions","hasCustomColor","optionHex","selectedObj","clearButton","stopPropagation","getSelectedOptions","ABFieldLongTextCore","ind","ABFieldNumberCore","INIT_EDITOR","editors","defaultSettings","allowClear","removeOnly","readOnly","showDropdown","ABFieldSelectivityDefaults","selectivityRender","cypress","dataCy","prepareData","selectivity","setOptions","selectivityInput","isUsers","templates","multipleSelectedItem","highlighted","additionalText","isLabelHidden","Selectivity","Inputs","Multiple","selectivitySetBadge","singleSelectedItem","Single","trigerEditPageEvent","editMenus","eMenu","__hasClickEvent","preventDefault","parentElm","parentElement","thisField","caretElems","getElementsByClassName","caretElm","parentNode","removeChild","selectivitySettings","selectivityGet","selectivitySet","setData","selectivityDestroy","clientHeight","badge","anchor","textnode","createTextNode","ABFieldStringCore","ABFieldTextFormulaCore","ABFieldTreeCore","formClass","placeHolder","isForm","branches","selectOptions","rootid","getParentId","par","nodeHTML","myHex","setBadge","idPopup","idTree","parentComponent","firstRender","populateTree","getValues","$Tree","uncheckAll","openAll","checkItem","onShow","onItemCheck","dom","tree","uncheckItem","eachSubItem","getChecked","scrollHeight","setValues","ABFieldUserCore","SiteUser","Defaults","linkCol","newLinkDef","setDisplayOptions","ABMobilePageCore","__Handler_ABDEF_UPDATED","__Handler_DEF_UPDATED","removeAllListeners","ABMobileViewCore","viewsToIgnore","ABMobileViewCustomCore","ABMobileViewFormCore","ABMobileViewFormButton","refreshDefaultButton","defaultButton","yList","posY","ABMobileViewFormButtonCore","ABMobileViewFormCheckboxCore","ABMobileViewFormConnectCore","__filterComponent","ABMobileViewFormCustomCore","ABMobileViewFormDateCore","ABMobileViewFormDatetimeCore","ABMobileViewFormEmailCore","ABMobileViewFormFileCore","ABMobileViewFormFormulaCore","ABMobileViewFormImageCore","ABMobileViewFormItemCore","ABMobileViewFormNumberCore","ABMobileViewFormReadonlyCore","ABMobileViewFormSelectMultipleCore","ABMobileViewFormSelectSingleCore","ABMobileViewFormTextboxCore","ABMobileViewLabelCore","ABMobileViewListCore","ABMobileViewTimelineCore","ABProcessLaneCore","transferParticipantWhereToMe","myParticipant","swap","children","child","lanes","objChild","setLane","defElement","ABProcessParticipantCore","diagramProperties","ABProcessElementCore","findLane","Lane","currObj","propertiesShow","propertiesStash","property","switchTo","propertiesID","ABProcessEndCore","ABProcessGatewayExclusiveCore","myOutgoingConnections","numCondWithOne","ABProcessTaskEmailCore","verifySetting","verifyNextLane","verifyRoleAccount","nextLanesResolved","valKey","ABProcessTaskServiceCore","AccountingBatchProcessingCore","propertyIDs","processBatchValue","objectBatch","fieldBatchEntries","fieldBatchFinancialPeriod","objectJE","fieldJEAccount","fieldJERC","fieldJEStatus","fieldJEStatusComplete","objectBR","fieldBRFinancialPeriod","fieldBRAccount","fieldBRRC","fieldBREntries","processValues","objectList","blankField","defaultFields","updateFields","fieldPickers","fieldValues","fp","picker","batchFields","fieldPickersBatch","jeFields","fieldPickersJE","compileStatusValues","statusField","onStatusComplete","wbxComplete","jeEntryID","jeEntry","jeFieldStatusValues","brFields","fieldPickersBR","AccountingFPCloseCore","processFPValue","objectFP","objectGL","objectAcc","fieldFPStart","fieldFPOpen","fieldFPStatus","fieldFPActive","fieldGLStarting","fieldGLRunning","fieldGLAccount","fieldGLRc","fieldGLDebit","fieldGLCredit","fieldAccType","fieldAccAsset","fieldAccExpense","fieldAccLiabilities","fieldAccEquity","fieldAccIncome","getFieldOptions","getStatusFieldOptions","statusFieldId","fpObject","fpStatusField","getListOptions","fpFields","glFields","accFields","fpStatusFields","accTypeOptions","elementsConfig","fieldGLElem","updateFPFields","updateGLFields","updateAccFields","fpStatusOptions","updateAccTypeOptions","AccountingFPYearCloseCore","processFPYearValue","objectFPYear","objectFPMonth","objectAccount","valueFundBalances","valueNetIncome","fieldFPYearStart","fieldFPYearEnd","fieldFPYearStatus","fieldFPYearActive","fieldFPMonthStart","fieldFPMonthEnd","fieldGLStartBalance","fieldGLRunningBalance","fieldGLrc","fieldAccNumber","fieldAccTypeIncome","fieldAccTypeExpense","fieldAccTypeEquity","fpYearDateFields","fpYearStatusFields","fpYearStatusOptions","fpMonthDateFields","glNumberFields","glRcFields","accNumberFields","accTypeFields","fpYearDateOptions","updateFPYearStatusOptions","fpMonthDateOpts","glRcOptions","glNumberOptions","updateAccNumberFields","updateFPYearActiveOptions","AccountingJEArchiveCore","objectBalance","objectJEArchive","fieldBatchFiscalMonth","fieldJeAccount","fieldJeRC","fieldJeArchiveBalance","fieldBrFiscalMonth","fieldBrAccount","fieldBrRC","fieldsMatch","getConnectFieldOptions","refreshFieldsMatch","$fieldsMatch","JEObj","JEArchiveObj","fJe","fieldBatchList","fieldBalanceList","fieldJeList","fieldJeArchiveList","refreshBatchFields","refreshBRFields","refreshJeFields","refreshJeArchiveFields","CalculateTaskCore","formulaText","exp","ABProcessTaskServiceGetResetPasswordUrlCore","InsertRecordTaskCore","fv","isSet","ABProcessTaskServiceQueryCore","qlWarnings","hasSave","SubProcessCore","bpmnModeler","props","loopCharacteristics","isSequential","loopType","ABProcessTaskUserCore","ABProcessTaskUserApprovalCore","ABProcessTaskUserExternalCore","ABProcessTaskUserFormCore","ABProcessTriggerCore","ABProcessTriggerLifecycleCore","ABProcessTriggerTimerCore","ABQLCore","parseRow","uiID","toIDs","$uiCondition","objectfields","objectname","taskparam","select","shorthand","spacer","uiAddParamForDef","paramUI","uiParamUI","uiAddNext","uiRow","uiNextRow","uiAddParams","nextOptions","resetValue","newOP","thisRow","thisQuery","addOP","viewAddParams","viewAddNext","allRows","ir","allCols","ic","uiNextRowSelectorRefresh","$select","uiNextCol","uiConfig","uiSettings","initialCond","displayLabel","initialValue","Updater","foundFields","shortHand","elCondition","onItemClick","modal","fillspace","sh","_myPopup","topView","rowView","toInsert","myWarnings","ABQLRootObject","root","rootOP","parseCurrent","selector","currOP","nextRow","ABQLRootObjectCore","ABViewCore","changePage","ABViewCSVExporterCore","ABViewCSVExporterComponent","ABViewCSVImporterCore","ABViewCSVImporterComponent","ABViewCarouselComponent","baseView","carousel","_handler_doOnShow","_handler_doReload","_handler_doFilter","fnFilter","filterRules","_handler_busy","_handler_ready","filterUI","linkPage","linkPageHelper","_ui","navigation","buttons","activeIndex","getActiveIndex","switchImage","viewLoad","$carouselView","firstElementChild","detatch","myTemplate","$carousel","currentPosition","_imageCount","_rowCount","getFilter","cursor","images","imgData","ab","align","abWebix","onclick","getNode","fullscreen","exit","rotateImage","zoom","showFilterPopup","showPopup","direction","imgElm","getElementById","fetch","cache","inOrOut","imgContainer","imgElem","newHeight","overflow","ABViewCarouselCore","ABViewCarousel","__filterHelper","ABViewPropertyFilterData","__linkPageHelper","ABViewPropertyLinkPage","ABViewChartCore","ABViewChartComponent","refreshData","getDCChart","_dcChart","dcChart","labelCol","valueCol","valueCol2","numberColName","numberColName2","colorList","dInfo","sumData","sumNumber","sumNumber2","countNumber","numberVal2","relateValues","value2","val2","ABViewChartAreaCore","ABViewChartAreaComponent","ABViewChartBarCore","ABViewChartBarComponent","ABViewChartContainerComponent","ABViewChartLineCore","ABViewChartLineComponent","ABViewChartPieCore","ABViewChartPieComponent","ABViewCommentCore","ABViewCommentComponent","ABViewConditionalContainerCore","ABViewConditionalContainerComponent","viewIf","viewElse","pendingSave","ABViewConnectDataFilterComponent","idbase","applyConnectFilter","tooltip","resetConnectFilter","$filter","connectId","ABViewConnectDataFilter","ABViewContainerCore","ABViewContainerComponent","ABViewDataFilterComponent","sortButton","filterButton","globalSearchToolbar","_handler_filterData","callbackFilterData","PopupSortComponent","sortOptions","callbackSortData","advancedUI","compId","maxHeight","toolbarFilter","getInputNode","openSort","externalSearchText","connectedFieldUI","relative","right","top","setSettings","updateUI","sortRules","filterButtons","onlyFilterRules","filterBadge","sortButtons","onlySortRules","sortBadge","searchFields","activeElement","ABViewDataFilter","ABViewDataSelectComponent","cursorChange","ABViewDataSelect","ABViewDataviewCore","ABViewDataviewComponent","ABViewDetailCore","ABViewDetailComponent","ABViewDetailCheckboxCore","ABViewDetailCheckboxComponent","ABViewDetailConnectCore","ABViewPropertyAddPage","ABViewDetailConnectComponent","addPageTool","__addPageTool","ABViewDetailCustomCore","ABViewDetailCustomComponent","ABViewDetailImageCore","ABViewDetailImageComponent","ABViewDetailItemCore","ABViewDetailItemComponent","ABViewDetailTextCore","ABViewDetailTextComponent","ABViewDetailTreeCore","ABViewDetailTreeComponent","ABViewDocxBuilderCore","ABViewDocxBuilderComponent","letUserDownload","blob","URL","createObjectURL","download","revokeObjectURL","ABViewFormCore","ABViewFormComponent","ABViewFormButton","ABViewFormConnect","ABViewFormDatepicker","ABViewFormSelectMultiple","ABViewFormJson","_callbacks","onBeforeSaveData","superComponent","_superComponent","getFormValues","visibleFields","allVals","vComponent","viewComponents","linkValues","formFieldCom","fComp","linkColName","cursorFormVals","validateData","$formView","requiredFields","fixInvalidMessageUI","$forminput","$height","domInvalidMessage","marginLeft","saveButton","saveData","clearValidation","formError","$saveButton","invalidAttrs","sqlMessage","loadDcDataOfRecordRules","newFormVals","errs","formReady","focusOnFirst","topPositionId","childComponent","actionSettings","valueRules","fieldOperations","valueType","pullDataDC","deleteData","ABViewFormButtonCore","ABViewFormButtonComponent","ABViewFormCheckboxCore","ABViewFormCheckboxComponent","ABViewFormConnectCore","ABViewFormConnectComponent","ABViewPropertyEditPage","editPageTool","addPageProperty","propertyComponent","editPageProperty","__editPageTool","ABViewFormCustomCore","ABViewFormCustomComponent","ABViewFormDatepickerCore","ABViewFormDatepickerComponent","ABViewFormItemCore","ABViewFormItemComponent","componentUI","parentFormUniqueID","uniqueInstanceID","ABViewFormJsonCore","ABViewFormJsonComponent","ABViewFormNumberCore","ABViewFormNumberComponent","ABViewFormReadonlyCore","ABViewFormReadonlyComponent","ABViewFormSelectMultipleCore","ABViewFormSelectMultipleComponent","ABViewFormSelectSingleCore","ABViewFormSelectSingleComponent","ABViewFormTextboxCore","ABViewFormTextboxComponent","ABViewFormTreeCore","ABViewFormTreeComponent","ABViewGanttComponent","menu","gantt","_tempDC","TitleField","StartDateField","EndDateField","DurationField","ProgressField","NotesField","originalStartDate","originalEndDate","pendingAdds","idGantt","ganttElement","isExistsTask","taskId","localService","tasksData","removeTask","opsService","YEAR_SCALE","MONTH_SCALE","DAY_SCALE","getConstantScales","setScale","override","Map","services","Backend","CurrentDatacollection","convertFormat","addTask","taskAdd","updateTask","taskUpdate","taskRemove","$menu","showItem","CurrentObject","convertValues","patch","datacollectionLoad","_events","eo","initData","ganttElem","dataService","dcTasks","gantt_data","currScale","getScales","WEEK_SCALE","wstart","weekStart","wend","scale","ganttData","newScales","setScales","precise","cellWidth","cellHeight","$batch","left","taskData","updatedTask","ABViewGanttCore","ABViewGantt","ABWorkObjectPopupExport","popupExport","_dataCollection","_grid","_filename","_hiddenFields","autoheight","dataCollectionLoad","setHiddenFields","setFilename","setGridComponent","$grid","fnExport","noCheckedRow","appbuilder_select_item","filterRow","toCSV","toExcel","filterHTML","toPDF","toPNG","exportType","fileName","ABViewGridPopupMassUpdate","ABViewGridComponent","submit","GridComponent","rowUpdater","update_button","update_items","$datatable","getDataTable","updatedRowIds","table","toolbar","buttonDeleteSelected","buttonFilter","buttonMassUpdate","buttonSort","buttonExport","datatable","handler_select","selectRow","columnSplitLeft","columnSplitRight","validationError","idTable","PopupExport","PopupMassUpdateComponent","PopupSortDataTableComponent","skippableColumns","ignoreLocalSettings","_gridSettings","_isDatacollectionLoaded","keyStorageSettings","getColumnIndex","uiDatatable","isTreeDatable","selectType","resizeColumn","resizeRow","prerender","fixedRowHeight","editaction","dragColumn","onBeforeSelect","preserve","cellNode","onAfterSelect","onCheck","toggleUpdateDelete","onAfterEditStop","onBeforeEditStop","old","ignoreUpdate","onValidationError","onValidationSuccess","onColumnResize","user_action","setColumnWidth","getLastColumn","onRowResize","onBeforeColumnDrag","onBeforeColumnDrop","onAfterColumnDrop","onHeaderClick","uiFilter","uiToolbar","toolbarMassUpdate","toolbarDeleteSelected","toolbarSort","toolbarExport","_uiGrid","inputWidth","codebase","cdn","$DataTable","throttleCustomDisplay","scrollStarted","displayRecords","verticalScrollState","getScrollState","rowHeight","startRecIndex","endRecIndex","getVisibleCount","CYPRESS_REF","toggleTab","clearValue","updateRow","_deleteConfirmPopup","numRows","deleteRow","globalFilterPosition","refreshHeader","$ButtonFilter","$buttonSort","gridElem","rowItem","oldDC","__handler_dc_busy","__handler_dc_ready","populateGroupData","__handler_dc_loadData","_isDatacollectionLoad","disableUpdateDelete","enableUpdateDelete","freezeDeleteColumn","lastColumn","getColumnConfig","$treetable","baseGroupMap","listData","valRelation","groupBys","g","gIndex","groupMap","by","byValue","gColName","group","localSettingsSave","removeCellCss","maxLength","editCell","requireRefresh","EditField","isCustomGroup","ignoreLocal","objColumnHeaders","objColumnHeaderIDs","origCol","fieldValidations","rulePops","validationUI","popUpId","groupField","treetable","complexValidations","getSelectedItem","destructor","addedColumns","contentId","lastCol","refreshColumns","savedLocalSettings","settingsID","__timeout_selectRow","unselect","parentTab","wb","tab","getTopParentView","tabbar","nextTab","checkedItems","deleteTasks","toolTip","imageFieldColNames","tip","relationData","toolTipOnBeforeRender","visibility","toolTipOnAfterRender","firstChild","nodeName","imgBottom","imgRight","innerHeight","imgOffsetY","newTop","imgOffsetX","newLeft","ABViewGridCore","ABViewGrid","propertyGroupByList","colNames","groupByList","origWS","AB_Work_Object_Workspace_PopupSortFields","_blockOnChange","uiForm","clickAddNewSort","triggerOnChange","dir","sort_form","viewIndex","listFields","onChangeCombo","_valueElement","refreshFieldList","dirElem","cView","selectedValue","getRange","chosenField","sortDir","_valueListElement","valElem","$popup","ignoreRemoveViews","selectedFields","removeChildViews","fieldObj","selectedFieldsExcludeCurField","enableFields","aValue","bValue","drag","onAfterDrop","ABViewImageCore","ABViewImageComponent","ABViewKanbanCore","ABViewKanbanComponent","ABViewKanban","comKanBan","CurrentObjectID","refreshForm","formAttrs","formCom","updateVals","newVals","ABViewLabelCore","ABViewLabelComponent","ABViewLayoutCore","ABViewLayoutComponent","ABViewListCore","ABViewListComponent","ABViewMenuCore","ABViewMenuComponent","ABViewPDFImporterCore","ABViewPDFImporterComponent","ABViewPageCore","v1App","newComponent","ABViewPivotCore","ABViewPivotComponent","ABViewReportsManagerCore","ABViewReportsManagerComponent","ABViewSchedulerCore","ABViewSchedulerComponent","ABViewTabCore","ABViewTabComponent","ABViewTextCore","ABViewTextComponent","ABViewWidgetCore","clientFilter","downloadCsvFile","onFilterChange","whereWidget","whereClient","qsWhere","open","$buttonFilter","CSVImporter","uploadFileList","headerOnFirstLine","columnList","statusMessage","progressBar","linkedDataButton","importButton","csvImporter","args","_dataRows","_csvFileInfo","accept","autosend","loadCsvFile","onClick","webix_remove_upload","removeCsvFile","populateColumnList","minHeight","uiRecordsView","keyPressTimeout","_errorMsg","details","$dt","_status","_included","$importButton","labelImport","overLimitAlert","showLinkedData","uiPopup","$progressBar","formClear","$statusMessage","matchFields","getMatchFields","columnIndex","statusTemplate","$headerOnFirstLine","fileId","$columnList","firstLine","csvColumnList","currentObject","formComp","formConfig","uiColumns","selectedCsvCols","matchCol","selectVal","columnOptUI","abName","toggleLinkFields","loadDataToGrid","dateSeparatorOptions","dayFormatOptions","monthFormatOptions","yearFormatOptions","dateOrderOptions","linkFieldOptions","$columnOption","$linkFieldOption","getFilterHelper","rowValue","refreshRemainingTimeText","startUpdateTime","total","remainTime","days","seconds","$selector","fieldData","$dateFormatSelectors","separator","$linkDataSelector","searchField","objModel","selectedRows","_currProgress","increaseProgressing","itemFailed","addRowCss","itemInvalid","errorMsg","uiCleanUp","validRows","allValid","getParentValues","removeRowCss","hashLookups","allLookups","connectField","connectObject","connectModel","linkIdKey","gethashLookup","createRecord","newRowsData","resultErrors","rowIndex","resultData","penddingRecordRules","processRowData","waitPenddingRecordRules","processResult","throttledSaves","performThrottledSaves","currentRecords","remainingRecords","importer","nextRecords","uiLinkedData","linkedData","hideLinkedData","_info_popup","linkConnectFields","yAxis","xAxis","legend","series","alpha","preset","$component","eventNames","evtName","chartContainer","uiChartComponent","_isShow","$chartContainer","$chartComponent","pieInnerText","shadow","comment","getCommentData","onBeforeAdd","addComment","onAfterDelete","deleteComment","__dvEvents","$comment","$commentList","onStoreUpdated","operate","updateComment","refreshComment","userCol","commentCol","dateCol","userColName","commentColName","dateColName","dataObject","dataList","user_id","default_date","__refreshTimeout","commentData","scrollTo","MAX_SAFE_INTEGER","commentText","dateTime","commentField","CurrentDatacollectionID","uiComponents","eventsClear","waitInitializingDCEvery","milliSeconds","__isShowing","interval","setInterval","clearInterval","_ifComponent","_elseComponent","populateFilterComponent","_uiConditionalContainer","ifComponent","elseComponent","displayView","viewComponentIDs","_handlerChangePage","rowViews","getElements","componentMap","curRowIndex","curColIndex","rowNew","colNumber","rowIndx","curRow","newPos","mapKey","getGrav","reload","initDetailComponent","scroll","sizeToContent","itemTemplate","applyClickEvent","addCyAttribute","$dataView","initRefreshWarning","_resizeEvent","eventKey","showRefreshWarning","__throttleRefreshWarning","base_element","$dataview","item_width","getItemWidth","customize","detailUI","getDetailUI","_detail_ui","$detail_item","itemWidth","$width","itemHeight","tmp_dom","addCyItemAttributes","currElem","parentWidth","$sidebar","getTabSidebar","clicked","divs","_detailComponent","detailItem","createdRow","updatedRow","myVal","needRecalculate","$detailItem","parsedImageUrl","imageUrl","SAFE_HTML_TAGS","detailItemLabel","uiDetailItemComponent","isLabelTop","templateLabel","labelUi","valueUi","itemUi","detailId","strVal","getDomTree","domTree","Docxtemplater","ImageModule","JSZipUtils","JSZip","sizeOf","ABFieldImage","downloadButton","noFileLabel","leftSpacer","rightSpacer","buttonLabelText","renderFile","$downloadButton","$noFileLabel","reportValues","getReportData","downloadImages","contentTemplateFile","downloadTemplateFile","blobFile","generateDocxFile","isDcLabelAdded","dcCursor","dcValues","fieldLabels","objTran","fieldTran","objectLabel","fieldLabel","setReportValues","datacollectionData","multilinguageFields","transFields","childItem","addDownloadTask","fieldImage","imageVal","imgUrl","getBinaryContent","contentFile","summaries","zip","doc","imageModule","centered","getImage","tagValue","tagName","getSize","imgBuffer","tagNames","dcs","Uint8Array","ratio","attachModule","loadZip","tag","scope","varName","propSource","propFilter","indexColName","connectedField","sourceVals","getVal","comparer","docxFile","getZip","generate","mimeType","onDelete","onCancel","onClear","onSave","cancelButton","noPopupFilter","pageCurr","resetButton","buttonID","formID","deleteButton","ABViewFormTextbox","timerId","_showed","fieldValidationsHolder","uiValidationHolder","abid","existsFields","com","initCallbacks","initEvents","initValidationRules","relationVals","valArray","displayParentData","applicationLoad","formField","nval","oval","fieldValidating","ms","customFields","normalFields","formItem","defaultRowData","parentData","relationField","relationFieldCom","relationFieldView","$relationFieldView","formData","topPosition","editpopup","addPageComponent","editPageComponent","formSettings","goToEditPage","_onChange","initAddEditTool","selectAll","customField","trg","$formItem","apcUI","inputId","selectedValues","prepedVals","addFormID","onSaveData","callbackSaveData","onCancelClick","callbackCancel","callbackClearOnLoad","editFormID","sData","formBusy","__editFormDcEvent","$node","filterConnectedValue","uiConfigName","connectFieldId","getFilterByConnectValues","filterByConnectValue","$ui","vc","$filterValueConfig","parentField","FocusableTemplate","new_width","requiredClass","DEFAULT_HEIGHT","paddingY","paddingX","AB_App","onAfterDateSelect","setMasterValue","onTodaySet","onDateClear","getMasterValue","errNoAB","strToDate","setFullYear","uiFormItemComponent","_uiFormItem","rowFilter","getFilterField","getSystemObjects","objectsArray","refreshFilter","fieldDefs","parsed","stringResult","NumberTextInput","_numberTextInputKey","numberTextInputKey","newv","oldv","setHTML","tagMode","tagTemplate","selectedOptions","menubar","initTinyMCE","getEditor","contentAreaContainer","$image","ABFormSidePanel","kanbanView","kanban","resizer","formSidePanel","FormSide","CurrentVerticalField","CurrentHorizontalField","CurrentOwnerField","_updatingOwnerRowId","_ABFieldConnect","_ABFieldUser","_ABFieldList","ABFieldUser","onSelectChange","userId","getSelectedId","updateOwner","tags","onListAfterSelect","onAfterStatusChange","updateStatus","onAvatarClick","$kb","_kb","kanbanListTemplate","removeCard","templateAvatar","templateBody","horizontalOptions","verticalOptions","horizontalVals","statusOps","reconstruct","$menuUser","getUserList","needRefresh","eachList","addCard","setFields","verticalGrouping","horizontalGrouping","uiFormatting","vId","_uiList","autoHeight","uiMenu","datatype","onMenuItemClick","defineCypress","subsign","_uiMenu","elems","menuIncluded","$item","redirectPage","toggleParent","showIt","parentElem","viewInfo","fileUploader","uploadList","fullImagePopup","fullImageCarousel","fullImageSelectToggle","fullImageLabel","unselectAll","loadFile","removeFile","displayBig","displaySmall","pageTemplate","pageIds","renderPageImages","_fullImagePopup","setActiveIndex","refreshFullImage","headHeight","offIcon","onIcon","offLabel","onLabel","isSelected","pageNumber","initPdfjs","pdfjs","pdfjsWorker","_readFileBuffer","ArrayBuffer","fileReader","fileBuffer","readAsArrayBuffer","_toBlob","toBlob","File","_uploadImage","canvasId","showPage","fileBlob","$uploader","onUploadComplete","addFile","_increaseProgressValue","maxProgressStep","_progressSteps","clearDataview","_pdfDoc","getDocument","promise","total_page","numPages","carousel_list","fullImageTemplate","pageTemplateId","pageItemWidth","canvas_dom","getPage","pdf_original_width","getViewport","scale_required","viewport","canvasContext","_isDisplayBig","selectedIds","fullImageTemplateId","$fileUploader","$uploadList","$submit","$selectAll","$unselectAll","$selectToggle","selectedPageIds","newValues","uploadId","ABFieldCalculate","ABFieldFormula","ABFieldNumber","pivot","uiPivot","_getFields","dataMapped","CellFormat","fieldType","reportManager","fieldText","fieldQueries","MyBackend","reports","getModules","updated","addModule","updateModule","deleteModule","getModels","reportModels","dcID","reportFields","getReportFields","refs","getQueries","moduleID","moduleId","addQuery","moduleData","queryID","updateQuery","queryIndex","deleteQuery","pullDataTasks","dcIds","dcData","sid","dcId","dataCol","sourceDc","sourceObj","targetDc","targetObj","sourceLinkField","sf","targetLinkField","tf","sourceData","targetData","tData","sVal","tVal","matchedVal","updateRows","queryVal","filterElem","tempDc","as","mod","_","parsedColumn","originalColumn","reportField","dateStringData","parsedDateStringData","groupedData","groupedResult","agg","rawCol","getFieldData","MyLocal","Local","_currentModuleID","currentModuleID","_queries","MyEditor","$tabbar","callEvent","disableOption","Reset","forceReset","AppState","getModule","TrackChanges","MyToolBar","MyEditorCommon","ShowDeleteButton","MyEditorData","MyTable","GetColumnConfig","meta","abField","mid","fullDateFormatStr","GetTableData","buckets","columnIDs","parsedBuckets","bucket","parseRecord","columnFormat","linkedDcs","linkDc","ref","reportData","reportRow","$pk","rField","fieldStart","fieldEnd","fieldAllDay","fieldCalendar","fieldEventColor","fieldNotes","fieldOriginID","fieldSectionID","fieldUnitID","dcCalendar","fieldTitle","fieldCalendarColor","fieldActive","timelineOptions","addCalendar","addEvent","start_date","end_date","all_day","recurring","section","origin_id","calendars","events","sections","removeCalendar","removeEvent","updateCalendar","updateEvent","uiNav","uiNavPopup","LimitData","sidebar","expandMenu","collapseMenu","popupTabManager","popupTabManagerForm","popupTabManagerSaveButton","baseType","menuItems","abStorage","toggle","addDataCy","multiview","keepViews","onViewChange","prevId","nextId","collapseNode","expandNode","tabUi","tabTemplate","$tab","changeTab","setState","checkCollapseMenu","checkExpandMenu","collapsed","tabViewId","$tabViewId","$viewID","defaultViewIsSet","_uiText","$text","ABViewProperty","toSettings","editForms","pagesHasForm","getIds","onClearOnLoad","_application","openFormPopup","pageClone","popUpComp","savedData","popupTemplate","setDefaultValue","fView","objLink","rawData","formEdit","FilterRuleSettings","buttonAddfilter","filterPanel","globalFilterFormContainer","globalFilterForm","filterMenutoolbar","resetFilterButton","__externalSearchText","rowFilterForm","_handler_rowFilterChanged","triggerCallback","_handler_rowFilterFormChanged","resetFilter","$filterMenutoolbar","queryRules","qr","Rule","filterRuleButton","rowFilterRules","__currentFilter","searchRules","badgeCount","$button","externalText","terms","allTerms","fieldTerms","ABViewPropertyLinkPageComponent","cleanRules","processCondition","myUnique","queryBuilder","queryBuilderContainer","queryBuilderLayout","showQBButton","conditionFields","QB","fieldTypes","onDone","listRules","showQueryBuilderContainer","ObjectQueryBuilder","listActions","actionDropList","selectedAction","objectQB","currentForm","selectAction","valueDisplay","_generateUI","Action","currentAction","replaceValueDisplay","$ValueDisplay","cloneChildren","prevAction","getAction","stashCondition","currAction","hidddatasourceen","for","processUpdateObject","qbFixAfterShow","isReady","convertToNumber","hiddenFilter","isPreProcess","queryObject","conditionRules","queryObjectLoad","webixID","valueDisplayComponent","childSettings","headerDefault","rulesScrollview","when","addRule","buttonCancel","buttonSave","getRule","RulesUI","deletedRule","ruleSettings","ABViewRuleList","ABViewRule","RoleUpdateExisting","RoleInsertConnected","RoleUpdateConnected","RoleRemoveConnected","allReady","RoleConfirmMessage","RuleExistPage","RuleParentPage","RuleClosePopup","RuleWebsite","RuleEmail","UpdateConnected","valueDisplayChooser","Component","showQBIfNeeded","queryBuilderDisplay","connObj","connectedObject","connectionField","selectedField","newObjectValues","newRecords","connectedObjectField","qbCondition","ABViewRuleActionFormRecordRuleUpdateConnected","isUpdateValueDisabled","_formData","ABViewRuleActionObjectUpdater","selectedFieldID","fieldDropList","connectedFieldList","cf","connectKey","_uiChooser","selectConnectedField","updateFieldsForm","addDisplay","removePreviousDisplays","cloneAllViews","updateObjectLoad","updateComponent","$updateForm","qbComponent","formRows","fr","rowSettings","modifyCondition","updateIt","qbCond","ABViewRuleAction","confirmMessage","ABFieldEmail","toEmailsContainer","toEmails","isEmail","toEmailAdd","fieldTemplate","enterField","refreshUI","emailType","recipients","fromName","fromEmail","toEmailTemplate","emailTypeChange","visibleBatch","toEmailValidate","emailFieldOptions","queryOptions","$toView","toEmailRemove","$emailValue","isAllValid","emailText","existsFieldIds","fnAddOptions","fLink","emailFields","optId","optLabel","focusElem","UIManager","getFocus","setFocus","rec","emailFieldUrl","emailField","emailData","linkFieldId","dvIdAndFieldId","dcQuery","emailAddr","pagesAndTabs","_pageOptions","addPage","pageOrTab","indent","selectedId","curPage","website","ABViewRuleActionObjectUpdaterDefaults","updateObject","stashRules","_uiUpdater","valueDisplayList","removeAddRow","UpdateForm","formGet","addRow","valueDisplayRow","onAdd","delRow","mySettings","FilterComponent","selectDc","selectBy","queryField","buttonAdd","buttonDelete","buttonsToggle","shouldFilter","usedHash","FormView","getUpdateObjectField","fieldField","columnID","$inputView","$componentView","datasources","optionsDataSources","optionsSelectBy","$optionUpdateExsits","selectedDC","$row","populateFilters","dcQueries","$multiview","compNodeView","setValueFn","collectionId","dataView","$valueField","objectToUpdate","isUpdated","clonedDataCollection","fieldWithValue","currRow","updates","objectToUpdateClone","lookup","updateObjectID","updateObjectURL","DocUtils","convertPixelsToEmus","pixel","docxtemplater","_createClass","defineProperties","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","extensionRegex","rels","getPrefix","getFileTypeName","getRelsFileName","getRelsFilePath","ImgManager","xmlDocuments","TypeError","_classCallCheck","fileTypeName","mediaPrefix","relsFilePath","relsDoc","createEmptyRelsDoc","relsFileName","mainRels","files","str2xml","xml2str","relationships","relationshipChilds","iterable","reduce","relationship","contentType","extension","contentTypeDoc","defaultTags","types","newTag","namespaceURI","imageName","realImageName","imagePath","addImageRels","binary","addExtensionRels","maxRid","loadImageRels","getImageXml","rId","getImageXmlCentered","getPptxImageXml","offset","memoize","XMLSerializer","Errors","nullGetter","part","delimiters","mergeObjects","resObj","xmlNode","serializeToString","decodeUtf8","decodeURIComponent","escape","convertSpaces","explanation","encodeUtf8","unescape","errorHandler","charMap","regexStripRegexp","escapeRegExp","charMapRegexes","endChar","startChar","rstart","rend","wordToUtf8","utf8ToWord","concatArrays","arrays","array","spaceRegexp","fromCharCode","throwXmlTagNotFound","XTTemplateError","pregMatchAll","regex","matchArray","exec","sizeOfObject","traits","moduleWrapper","xmldom","wrapper","compiled","modules","fileTypeConfig","FileTypeConfig","xmlFileNames","loadAsync","currentFile","createTemplateClass","templatedFiles","getTemplatedFiles","_this2","baseModules","moduleFunction","optionsTransformer","asText","compile","compileFile","mapper","getRenderedMap","mapped","setTags","usedData","createTemplateClassFromContent","filePath","_this3","xmltOptions","XmlTemplater","textPath","getFullText","XmlMatcher","XTError","stack","XTScopeParserError","XTInternalError","loopModule","spacePreserveModule","rawXmlModule","expandPairTrait","PptXFileTypeConfig","tagsXmlTextArray","tagsXmlLexedArray","tagRawXml","tagTextXml","DocXFileTypeConfig","docx","pptx","inRange","range","updateInTextTag","inTextTag","offsetSort","getTag","throwUnclosedTagException","xtag","assertDelimiterOrdered","delimiterMatches","fullText","inDelimiter","lastDelimiterMatch","delimiterMatch","throwUnopenedTagException","getAllIndexes","arr","Reader","innerContentParts","full","parseDelimiters","ranges","delimiterLength","cutNext","delimiterIndex","partContent","delimitersInOffset","delimiterInOffset","xmlparsed","newArray","xmlparse","xmltags","matches","textMatchArray","othersMatchArray","contentLength","allMatches","totalMatches","tagText","_getTag","tagMatcher","other","func","stringifyJson","getMinFromArrays","minIndex","totalLength","resultArray","arrayIndex","emptyFun","identity","getTraits","postparse","every","mergeSort","getExpandToDefault","throwClosingTagNotMatchOpeningTag","openingtag","closingtag","getOpenCountChange","location","getPairs","countOpen","firstTrait","currentTrait","outer","T","throwUnmatchedLoopException","_ref","_postparse","trait","pairs","expandedPairs","pair","expandTo","currentPairIndex","innerParts","newParsed","inPair","expandedPair","basePart","subparsed","dashInnerRegex","moduleName","placeHolderContent","inverted","traitName","totalValue","scopeManager","loopOver","createSubScopeManager","getInner","postparsed","paragraphParts","throwRawTagShouldBeOnlyTextInParagraph","RawXmlModule","expandToOne","Render","spacePreserve","inChunk","lexed","inPlaceHolder","tailParts","token","moduleParsed","moduleParse","ScopeManager","createBaseScopeManager","moduleRendered","moduleRender","scopePath","loopOverValue","functor","currentValue","num","isValueFalsy","functorIfInverted","rootError","lastTagIsOpenTag","innerLastTag","innerCurrentTag","addTag","expandOne","throwRawTagNotInParagraph","leftParts","rightParts","inner","xmlElements","getListXmlElements","memoized","tagsXmlArray","tagsXmlArrayJoined","charactersAddedCumulative","charactersAdded","replacerUnshift","pn","last","handleRecursiveCase","xmlMatcher","Lexer","Parser","_render","fromJson","setModules","inspect","xmllexed","locator","DOMHandler","cdata","lineNumber","columnNumber","_locator","systemId","_toString","chars","java","appendElement","hander","currentElement","source","sax","XMLReader","domBuilder","defaultNSMap","xmlns","entityMap","lt","gt","amp","quot","apos","setDocumentLocator","errorImpl","isCallback","Function","build","buildErrorHandler","nbsp","startDocument","DOMImplementation","createDocument","documentURI","localName","qName","createElementNS","len","getURI","getQName","createAttributeNS","getLocator","nodeValue","setAttributeNode","endElement","current","startPrefixMapping","uri","endPrefixMapping","processingInstruction","ins","createProcessingInstruction","ignorableWhitespace","ch","characters","charNode","createCDATASection","skippedEntity","endDocument","normalize","comm","createComment","startCDATA","endCDATA","startDTD","publicId","impl","implementation","createDocumentType","dt","warning","fatalError","dest","_extends","Super","pt","ppt","__proto__","htmlns","NodeType","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","ExceptionCode","ExceptionMessage","HIERARCHY_REQUEST_ERR","INDEX_SIZE_ERR","DOMSTRING_SIZE_ERR","NOT_FOUND_ERR","WRONG_DOCUMENT_ERR","INVALID_CHARACTER_ERR","NO_DATA_ALLOWED_ERR","NO_MODIFICATION_ALLOWED_ERR","INUSE_ATTRIBUTE_ERR","NOT_SUPPORTED_ERR","DOMException","captureStackTrace","NodeList","LiveNodeList","_node","_refresh","_updateLiveList","inc","_inc","ownerDocument","ls","__set__","NamedNodeMap","_findNodeIndex","_addNamedNode","newAttr","oldAttr","ownerElement","_onRemoveAttribute","_nsMap","_onAddAttribute","_removeNamedNode","lastIndex","features","_features","feature","Node","_xmlEncoder","charCodeAt","_visitNode","nextSibling","Document","_onUpdateChild","newChild","cs","childNodes","_removeChild","previous","previousSibling","lastChild","_insertBefore","nextChild","cp","nodeType","newFirst","newLast","pre","Element","Attr","CharacterData","Text","Comment","CDATASection","DocumentType","Notation","Entity","EntityReference","DocumentFragment","ProcessingInstruction","nodeSerializeToString","isHtml","nodeFilter","buf","refNode","documentElement","lookupPrefix","visibleNamespaces","namespace","needNamespaceDefine","isHTML","ns","pubid","sysid","internalSubset","importNode","node2","cloneNode","attrs2","_ownerElement","INVALID_STATE_ERR","SYNTAX_ERR","INVALID_MODIFICATION_ERR","NAMESPACE_ERR","INVALID_ACCESS_ERR","getNamedItem","setNamedItem","setNamedItemNS","getNamedItemNS","removeNamedItem","removeNamedItemNS","hasFeature","versions","qualifiedName","doctype","insertBefore","refChild","replaceChild","oldChild","hasChildNodes","appendData","isSupported","hasAttributes","lookupNamespaceURI","isDefaultNamespace","importedNode","rtv","createDocumentFragment","createAttribute","specified","createEntityReference","pl","hasAttribute","getAttributeNode","removeAttributeNode","_appendSingleChild","setAttributeNodeNS","removeAttributeNS","getAttributeNodeNS","hasAttributeNS","getAttributeNS","setAttributeNS","getElementsByTagNameNS","substringData","insertData","replaceData","splitText","newText","newNode","getTextContent","$$length","nameStartChar","nameChar","tagNamePattern","S_TAG","S_ATTR","S_ATTR_SPACE","S_EQ","S_ATTR_NOQUOT_VALUE","S_ATTR_END","S_TAG_SPACE","S_TAG_CLOSE","defaultNSMapCopy","entityReplacer","surrogate1","surrogate2","fixedFromCharCode","appendText","xt","m","lineEnd","linePattern","lineStart","parseStack","currentNSMap","closeMap","tagStart","localNSMap","endMatch","parseInstruction","parseDCC","ElementAttributes","parseElementStartPart","closed","fixSelfClosed","locator2","copyLocator","parseHtmlSpecialContent","attrName","setTagName","nsp","nsPrefix","_copy","elStartEnd","elEndStart","lastIndexOf","matchs","reg","lastMatch","endDTD","_set_proto_","thiz","getLocalName","getInnerDocx","getInnerPptx","_ref2","xmlString","ext","cx","cy","imgManagers","imageNumber","relsFiles","imgManager","getNextImageName","sizePixel","getRenderedPart","getRenderedPartPptx","getRenderedPartDocx","cellCX","cellCY","imgW","imgH","expanded","xmlElement","updateFileTypeConfig","zero","byteAt","lastIndexOfSignature","readData","checkOffset","encode","decode","compressedSize","uncompressedSize","crc32","compressionMethod","compressedContent","getContent","getCompressedContent","STORE","magic","compress","uncompress","compressInputType","uncompressInputType","DEFLATE","getTypeOf","checkIndex","setIndex","readInt","readString","transformTo","readDate","base64","createFolders","compression","compressionOptions","unixPermissions","dosPermissions","string2binary","string2Uint8Array","uint8Array2String","string2Blob","arrayBuffer2Blob","checkSupport","MAX_VALUE_16BITS","MAX_VALUE_32BITS","pretty","findCompression","isRegExp","Uint16Array","Uint32Array","deflateRaw","inflateRaw","pako","support","utils","compressions","checkCRC32","optimizedBinaryString","decodeFileName","utf8decode","fileNameStr","decompressed","fileCommentStr","zipComment","isBuffer","Buffer","_data","nodebuffer","asBinary","D","utf8encode","_initialMetadata","asNodeBuffer","asUint8Array","asArrayBuffer","buffer","z","C","E","B","F","fileRecord","LOCAL_FILE_HEADER","dirRecord","CENTRAL_FILE_HEADER","compressedObject","folder","platform","encodeFileName","CENTRAL_DIRECTORY_END","append","finalize","ZIP64_CENTRAL_DIRECTORY_LOCATOR","ZIP64_CENTRAL_DIRECTORY_END","DATA_DESCRIPTOR","arraybuffer","uint8array","Blob","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","getBlob","subarray","applyFromCharCode","byteLength","loadOptions","checkSignature","isSignature","readBlockEndOfCentral","diskNumber","diskWithCentralDirStart","centralDirRecordsOnThisDisk","centralDirRecords","centralDirSize","centralDirOffset","zipCommentLength","readBlockZip64EndOfCentral","zip64EndOfCentralSize","versionMadeBy","versionNeeded","zip64ExtensibleData","readBlockZip64EndOfCentralLocator","diskWithZip64CentralDirStart","relativeOffsetEndOfZip64CentralDir","disksCount","readLocalFiles","localHeaderOffset","readLocalPart","handleUTF8","processAttributes","readCentralDir","zip64","readCentralPart","readEndOfCentral","prepareReader","isEncrypted","bitFlag","useUTF8","prepareCompressedContent","prepareContent","fileNameLength","extraFieldsLength","fileCommentLength","diskNumberStart","internalFileAttributes","externalFileAttributes","readExtraFields","parseZIP64ExtraField","fileComment","extraFields","findExtraFieldUnicodePath","findExtraFieldUnicodeComment","chunkSize","windowBits","memLevel","strategy","gzip","ended","strm","avail_out","deflateInit2","deflateSetHeader","dictionary","string2buf","deflateSetDictionary","_dict_set","input","next_in","avail_in","output","Buf8","next_out","deflate","onEnd","onData","buf2binstring","shrinkBuf","deflateEnd","flattenChunks","Deflate","inflateInit2","Z_OK","inflateGetHeader","Z_FINISH","Z_NO_FLUSH","binstring2buf","inflate","Z_NEED_DICT","inflateSetDictionary","Z_BUF_ERROR","Z_STREAM_END","Z_SYNC_FLUSH","utf8border","buf2string","arraySet","inflateEnd","Inflate","ungzip","Int32Array","setTyped","Buf16","Buf32","Z_PARTIAL_FLUSH","Z_FULL_FLUSH","Z_BLOCK","Z_TREES","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","Z_BINARY","Z_TEXT","Z_UNKNOWN","Z_DEFLATED","pending_buf","pending_out","total_out","_tr_flush_block","block_start","strstart","wrap","adler","G","H","total_in","max_chain_length","prev_length","nice_match","w_size","la","w_mask","prev","ka","good_match","lookahead","match_start","window_size","hash_size","insert","ja","ins_h","hash_shift","hash_mask","J","ua","match_length","_tr_tally","max_lazy_match","M","wa","xa","last_lit","va","prev_match","U","match_available","good_length","max_lazy","nice_length","max_chain","pending_buf_size","gzhead","gzindex","$","last_flush","w_bits","hash_bits","dyn_ltree","ha","dyn_dtree","fa","bl_tree","ga","l_desc","d_desc","bl_desc","bl_count","ia","heap","ea","heap_len","heap_max","l_buf","lit_bufsize","d_buf","opt_len","static_len","bi_buf","bi_valid","data_type","Z","na","sa","_tr_init","O","Q","X","K","N","P","R","S","W","Y","aa","ba","da","ma","oa","pa","qa","ra","ta","ya","deflateInit","deflateReset","deflateResetKeep","hcrc","extra","os","_tr_align","_tr_stored_block","deflateInfo","xflags","extra_len","dmax","wsize","whave","wnext","hold","bits","lencode","distcode","lenbits","distbits","sane","havedict","flags","check","wbits","ncode","nlen","ndist","have","lens","work","lendyn","distdyn","back","was","ca","inflateReset","inflateReset2","inflateResetKeep","inflateInit","za","Aa","Ba","Ca","inflateInfo","static_tree","extra_bits","extra_base","max_length","has_stree","dyn_tree","max_code","stat_desc","protoUI","ActiveContent","datafilter","countColumn","summColumn","datetime","popupType","EditAbility","unitlist","ABCustomFormBuilderBuilder","FormBuilder","autofit","$init","defaultComponent","dataFields","parseDataFields","approveButton","schema","inputComponents","formComponents","noDefaultSubmitButton","noNewEdit","basic","advanced","customBasic","premium","weight","getFormData","_key","inputType","calculateValue","refreshOnChange","block","leftIcon","theme","textbox","textarea","ABLazyCustomComponent","Form","$ready","initForm","_formio","submission","onButton","setDefaultUI","$getValue","calendarHeader","monthFull","$protoWait","_zoom_logic","_getTitle","_getYearTitle","_getYearRangeTitle","_getContent","_getYearContent","_setContent","_setYear","Qd","Jv","Zv","Xv","thaidate","thaidatetime","_zoom_start_date","ABCustomTinyMCE","eachRow","$count","master"],"sourceRoot":""}