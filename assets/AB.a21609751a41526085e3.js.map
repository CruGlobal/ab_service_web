{"version":3,"file":"AB.a21609751a41526085e3.js","mappings":";inBAAA,IAAIA,EAAM,CACT,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,KACX,aAAc,KACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,KACX,aAAc,KACd,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,QAAS,MACT,WAAY,MACZ,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,gBAAiB,MACjB,aAAc,MACd,gBAAiB,MACjB,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,UAAW,MACX,aAAc,MACd,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,WAAY,MACZ,cAAe,MACf,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,WAAY,MACZ,cAAe,MACf,UAAW,MACX,aAAc,MACd,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,YAAa,KACb,eAAgB,KAChB,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,IACR,UAAW,IACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,QAAS,MACT,WAAY,MACZ,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,UAAW,MACX,aAAc,MACd,QAAS,MACT,WAAY,MACZ,OAAQ,MACR,UAAW,MACX,QAAS,MACT,WAAY,MACZ,QAAS,MACT,aAAc,MACd,gBAAiB,MACjB,WAAY,MACZ,UAAW,MACX,aAAc,MACd,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,YAAa,MACb,eAAgB,MAChB,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,gBAAiB,MACjB,OAAQ,KACR,UAAW,KACX,UAAW,MACX,aAAc,MACd,UAAW,KACX,aAAc,KACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,OAIf,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,EAC5B,CACA,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,CACP,CACA,OAAOP,EAAIE,EACZ,CACAD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,EACpB,EACAC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,2MCvShBY,EAAe,sBAyHnB,YAvHA,cAAsBA,EACnB,WAAAC,GACGC,QAEAC,KAAKC,iBAAkB,EACvBD,KAAKE,QAAU,KAEfF,KAAKG,WAAa,KAIlBH,KAAKI,YAAc,KAInBJ,KAAKK,WAAa,IAGrB,CAEA,IAAAC,CAAKC,GAGFP,KAAKO,GAAKA,EACV,IAAIC,EAAaR,KAAKO,GAAGE,OAAOC,aAC5BF,IACDR,KAAKC,iBAAkB,EACvBD,KAAKE,QAAUM,GAGlB,IAAIG,EAAaX,KAAKO,GAAGE,OAAOG,aAehC,OAdID,IACDX,KAAKG,WAAaQ,EAAWE,OAAS,GACtCb,KAAKI,YAAcO,EAAWG,QAAU,GACxCd,KAAKK,WAAaM,EAAWI,OAAS,IAGzCf,KAAKO,GAAGS,QAAQC,GAAG,kBAAkB,CAACC,EAASC,EAAKC,KAC7CD,EACDE,QAAQC,MAAMH,GAGjBnB,KAAKuB,KAAK,SAAUH,EAAK,IAGrBI,QAAQ9B,SAClB,CAEA,aAAA+B,GACG,OACGzB,KAAKa,OAAOa,GAAiB,yCAAXA,EAAEC,OAChBC,OAAS,CAEnB,CAEA,aAAAC,GACG,OAAO7B,KAAKO,GAAGE,OAAOqB,UACzB,CAEA,gBAAAC,GACG,OACG/B,KAAKa,OAAOa,GAAiB,yCAAXA,EAAEC,OAChBC,OAAS,CAEnB,CAEA,KAAAI,GACG,OAAOhC,KAAKE,SAAS8B,OAAS,EACjC,CAEA,QAAAC,GACG,OAAOjC,KAAKE,SAASgC,cAAgB,IACxC,CAEA,MAAAC,GACG,OAAOnC,KAAKO,GAAGS,QAAQoB,KACpB,CACGC,IAAK,eACLjB,KAAM,CAAEkB,UAAWtC,KAAKO,GAAGgC,OAAOC,QAAQ,SAE7C,CACGC,IAAK,iBACLvB,QAAS,CAAC,GAGnB,CAEA,KAAAL,CAAM6B,EAAK,MAAM,IACd,OAAQ1C,KAAKE,SAASW,OAAS,IAAI8B,OAAOD,EAC7C,CACA,QAAAE,GACG,OAAO5C,KAAKG,UACf,CAEA,MAAAW,GACG,OAAOd,KAAKI,WACf,CAEA,QAAAyC,GACG,OAAO7C,KAAKE,SAAS2C,QACxB,CAEA,QAAAC,GACG,OAAO9C,KAAKK,UACf,CAEA,IAAAsB,GACG,OAAO3B,KAAKE,SAASyB,IACxB,CAEA,OAAAoB,GACG,OAAO/C,KAAKE,SAAS8C,QACxB,CAEA,sBAAAC,GACG,OAAOjD,KAAKE,SAAS+C,sBACxB,kBC9GH,SAKGC,MAAO,SAAUC,GACdC,MAAMC,MAAM,CACTC,MACGH,EAAKG,OACL/C,GAAGgD,aAAaC,MAAM,yBAA0B,UACnDC,KACGN,EAAKM,MACLN,EAAKO,SACLnD,GAAGgD,aAAaC,MACb,wBACA,wBAENG,GAAIR,EAAKQ,IAAMpD,GAAGgD,aAAaC,MAAM,sBAAuB,QAElE,EAIAI,QAAS,SAAUT,GAChB,IAAIG,EACDH,EAAKG,OACL/C,GAAGgD,aAAaC,MAAM,kCAAmC,aACxDE,EACDP,EAAKM,MACLN,EAAKO,SACLnD,GAAGgD,aAAaC,MACb,gCACA,uCAGFK,EACDV,EAAKU,UACLV,EAAKQ,IACLpD,GAAGgD,aAAaC,MAAM,iBAAkB,SACvCM,EACDX,EAAKW,SACLX,EAAKY,QACLxD,GAAGgD,aAAaC,MAAM,gBAAiB,QAK1CJ,MAAMY,QAAQ,CACXV,MAAOA,EACPG,KAAMC,EAENC,GAAIE,EACJE,OAAQD,EAERG,SAAU,SAAUC,GACbA,EACGf,EAAKgB,OAAOhB,EAAKgB,QAEjBhB,EAAKiB,MAAMjB,EAAKiB,OAGnBjB,EAAKc,UAAUd,EAAKc,SAASC,EACpC,GAmBN,EAKAG,cAAe,SAAUlB,GACtBnD,KAAK4D,QAAQ,CACVN,MACGH,EAAKG,OACL/C,GAAGgD,aAAaC,MACb,iCACA,oBAENG,GAAIR,EAAKQ,IAAMpD,GAAGgD,aAAaC,MAAM,oBAAqB,YAC1DO,OACGZ,EAAKY,QACLxD,GAAGgD,aAAaC,MAAM,oBAAqB,YAC9CC,KACGN,EAAKM,MACLN,EAAKO,SACLnD,GAAGgD,aAAaC,MACb,+BACA,0CACA,CAAC,SAEPS,SAAU,SAAUC,GACbA,EACGf,EAAKgB,OAAOhB,EAAKgB,QAEjBhB,EAAKiB,MAAMjB,EAAKiB,OAGnBjB,EAAKc,UAAUd,EAAKc,SAASC,EACpC,GAEN,EAIAI,QAAS,SAAUnB,GAChB,IAAIO,EAAUP,EAAKM,MAAQN,EAAKO,QAC5Ba,EAAUpB,EAAKoB,SAAW,IAE9BnB,MAAMM,QAAQ,CACXD,KAAMC,EACNc,OAAQD,GAEd,GCnIH,IAAIE,EAAU,EAAQ,OA0MtB,YAxMA,cAA2BA,EACxB,WAAA3E,GACGC,MAAM,GAAI,CAAC,GAKXC,KAAKC,iBAAkB,EACvBD,KAAKE,QAAU,KAEfF,KAAK0E,iBAAkB,EACvB1E,KAAK2E,eAAiB,CAAC,EACvB3E,KAAK4E,qBAAuB,CAAC,EAE7B5E,KAAK6E,sBAAuB,CAK/B,CAEA,IAAAvE,CAAKC,GAWF,OARAP,KAAKO,GAAKA,EAEVP,KAAK8E,OAAS9E,KAAKO,GAAGE,OAAOsE,cAC7B/E,KAAKgF,WAAahF,KAAKO,GAAGE,OAAOwE,iBAEjCjF,KAAKkF,aAAe,CAAC,EAGd1D,QAAQ9B,SAClB,CAEA,eAAAyF,GACG,OAAOnF,KAAKO,GAAG6E,QAAQnD,UAC1B,CAEA,kBAAAoD,GACGrF,KAAK6E,sBAAuB,CAC/B,CAEA,KAAArB,CAAMf,EAAK6C,EAASC,EAAS,GAAIC,GAAc,QAEtB,IAAXF,GAA0B7C,IAClC6C,EAAU7C,GAIW,GAApBgD,UAAU7D,QAAe8D,MAAMC,QAAQL,KACxCC,EAASD,EACTA,EAAU7C,GAKb6C,EAAUA,EAAQM,QAAQ,KAAM,OAChCnD,EAAMA,EAAImD,QAAQ,KAAM,OAYxB,IAAIC,EAASP,EACI,KAAbO,EAAO,KACRA,EAASA,EAAOC,MAAM,IAEzB,IAAItC,EAAQxD,KAAK8E,OAAOe,GAaxB,OAZKrC,IACEgC,GACDxF,KAAK+F,iBAAiBtD,EAAK6C,GAE9B9B,EAAQ8B,GAGXC,EAAOS,SAAQ,CAACC,EAAGC,KAChB,IAAIC,EAAM,IAAID,KACd1C,EAAQA,EAAM4C,WAAWD,EAAKF,EAAE,IAEnCzC,EAAQA,EAAMoC,QAAQ,OAAQ,IAEjC,CAEA,WAAAS,CAAYC,EAAQhB,EAASC,EAAS,IAEnC,IAAI/B,EAAQxD,KAAKwD,MAAM8B,EAASA,EAASC,GAAQ,GAgBjD,OAfK/B,IAEFA,EAAQxD,KAAKkF,aAAaoB,GAAQhB,IAEhC9B,IAEFxD,KAAK4E,qBAAqB0B,GACvBtG,KAAK4E,qBAAqB0B,IAAW,CAAC,EACzCtG,KAAK4E,qBAAqB0B,GAAQhB,GAAWA,EAC7C9B,EAAQ8B,GAEXC,EAAOS,SAAQ,CAACC,EAAGC,KAChB,IAAIC,EAAM,IAAID,KACd1C,EAAQA,EAAM4C,WAAWD,EAAKF,EAAE,IAE5BzC,CACV,CAEA,SAAA+C,GACG,OAAOvG,KAAKgF,UAMf,CAEA,gBAAAwB,CAAiB/D,EAAKqC,GACnB9E,KAAKkF,aAAazC,GAAOqC,CAC5B,CACA,iBAAA2B,CAAkBhE,GACfpB,QAAQqF,KAAK,8BAA+BjE,GAC5CpB,QAAQqF,KAAK,oBAAqB1G,KAAKmF,mBACvC,IAAIL,EAAS6B,KAAKC,UAAU5G,KAAK4E,qBAAqBnC,GAAM,KAAM,GAClEpB,QAAQqF,KAAK5B,EAChB,CAEA,gBAAAiB,CAAiBtD,EAAK6C,GACnB,GAAKtF,KAAK6E,qBAAV,CAEI7E,KAAK0E,iBACNmC,aAAa7G,KAAK0E,iBAErB,IACIoC,EAAY,KACb,IAAIC,EAAc,GAClB,IAAIC,EAAgBvH,OAAOD,KAAKQ,KAAK2E,gBAAgB7F,KACjDmI,GAAMjH,KAAK2E,eAAesC,KAE9B,GAAID,EAAcpF,QANH,GAOZmF,EAAcC,EACdhH,KAAK2E,eAAiB,CAAC,OAEvB,IAAK,IAAIuB,EAAI,EAAGA,GAVJ,GAUsBA,IAAK,CACpC,IAAIgB,EAAIF,EAAcG,QACtBJ,EAAYK,KAAKF,UACVlH,KAAK2E,eAAeuC,EAAEzE,IAChC,CAEHzC,KAAKO,GAAGS,QAAQoB,KAAK,CAClBC,IAAK,8BACLjB,KAAM,CAAE0D,OAAQ6B,KAAKC,UAAUG,MAE9BM,MAAK,KACC5H,OAAOD,KAAKQ,KAAK2E,gBAAgB/C,OAAS,GAC3CkF,GACH,IAEFQ,OAAOnG,IACUA,EAAIoG,WACRC,QAAQ,kBAAoB,GACpCnG,QAAQC,MACL,8BAAgCtB,KAAKmF,kBAE3C,GACD,EAERnF,KAAK0E,gBAAkB+C,YAAW,KAC/BX,GAAW,GACX,KAEH9G,KAAK2E,eAAelC,GAAO,CAAEA,MAAK6C,UA3CI,CA4CzC,CAOA,OAAAoC,GAEG,OADArG,QAAQC,MAAM,iDACPE,QAAQ9B,SAClB,CACA,IAAAiI,GAEG,OADAtG,QAAQC,MAAM,8CACPE,QAAQ9B,SAClB,CACA,KAAAkI,GAEG,OADAvG,QAAQC,MAAM,+CACP,CAAC,CACX,CACA,YAAAuG,GAEG,OADAxG,QAAQC,MAAM,sDACP,CAAC,CACX,GClMH,IAAI,EAAe,sBAWnB,MAAMwG,EAAS,EAAQ,MAGvB,IAAI,EAAS,KA4Wb,QAxWA,cAA0B,EACvB,WAAAhI,CAAYiI,GAGThI,MAAM,CACHiI,UAAU,EACVC,aAAa,EACbC,aAAc,IAGjBlI,KAAKmI,QAAU,KAIfnI,KAAKoI,WAAa,EAIlBpI,KAAKqI,SAAWN,EAKhB/H,KAAKsI,YAAa,CAGrB,CASA,IAAAhI,CAAKC,EAAIgI,GAUN,OATAvI,KAAKO,GAAKA,EAEV,EAASP,KAAKO,GAAGE,OAAO+H,cACxBD,EAAUA,GAAW,CAAC,KAEnBvI,KAAKmI,QAAUI,EAAQJ,SAAW,EAAOM,WAAWC,cACpD1I,KAAKoI,WACFG,EAAQI,mBAAqB,EAAOF,WAAWE,mBAE9CnH,QAAQ9B,SAClB,CAiBA,GAAAkJ,CAAIC,EAAQC,GACTD,EAAOE,KAAOF,EAAOE,MAAQ,MAI7B,IAAI3H,EAAOyH,EAAOzH,MAAQyH,EAAOA,OACjC,GAAIzH,EAAM,CACP,IAAI4H,EAAW,CAAC,SAAU,SAAU,WAChCC,EAASxJ,OAAOD,KAAK4B,GACrBtC,KAAI,SAAU2D,GACZ,IAAIyG,EAAM9H,EAAKqB,GAIf,OAHqC,GAAjCuG,EAASxB,eAAe0B,KACzBA,EAAMvC,KAAKC,UAAUsC,IAEjBzG,EAAM,IAAM0G,mBAAmBD,EACzC,IACCE,KAAK,KAELA,EAAO,IACPP,EAAOxG,IAAImF,QAAQ,MAAQ,IAC5B4B,EAAO,KAEVP,EAAOxG,IAAM,CAACwG,EAAOxG,IAAK4G,GAAQG,KAAKA,EAC1C,CAEA,OAAOpJ,KAAKqJ,SAASR,EAAQC,EAChC,CAcA,IAAA1G,CAAKyG,EAAQC,GAEV,OADAD,EAAOE,KAAOF,EAAOE,MAAQ,OACtB/I,KAAKqJ,SAASR,EAAQC,EAChC,CAcA,GAAAQ,CAAIT,EAAQC,GAET,OADAD,EAAOE,KAAOF,EAAOE,MAAQ,MACtB/I,KAAKqJ,SAASR,EAAQC,EAChC,CAcA,OAAOD,EAAQC,GAEZ,OADAD,EAAOE,KAAOF,EAAOE,MAAQ,SACtB/I,KAAKqJ,SAASR,EAAQC,EAChC,CAMA,kBAAAS,GACG,OAAOvJ,KAAKqI,SAASkB,oBACxB,CAEA,OAAAC,CAAQX,GACL,OAAOf,EAAOe,EAAOxG,IAAKwG,GAAQxB,MAAMoC,GAK9BA,EAAOrI,MAEpB,CASA,QAAAiI,CAASR,EAAQC,GAGd,GADAD,EAAOa,OAASb,EAAOa,QAAU,EAC7Bb,EAAOa,QAAU1J,KAAKoI,WAAY,CACnC,IAAIjH,EAAM,IAAI7B,MACX,qBAAqBU,KAAKoI,mBAAmBS,EAAOxG,OAWvD,OATAlB,EAAI5B,KAAO,kBACXS,KAAKO,GAAGoJ,OAAOC,UAAUzI,EAAK,CAC3BD,QAAS,2CAGR4H,GACD9I,KAAKqI,SAASwB,gBAAgBf,EAAa3H,GAGvCK,QAAQsI,OAAO3I,EACzB,CAEA,OAAO,IAAIK,SAAQ,CAAC9B,EAASoK,KAC1BjB,EAAOxG,IAAMwG,EAAOxG,KAAO,IACN,KAAjBwG,EAAOxG,IAAI,KACZwG,EAAOxG,IAAMrC,KAAKmI,QAAUU,EAAOxG,KAGtCwG,EAAOkB,QAAUlB,EAAOkB,SAAW,CAAC,EAChC/J,KAAKO,GAAG6E,QAAQ4E,YACjBnB,EAAOkB,QAAQE,cAAgBjK,KAAKO,GAAG6E,QAAQ4E,WAElDnB,EAAOkB,QAAQ,gBAAkB,mBAEjC,IAAIG,EAAWlK,KAAKO,GAAGgC,OAAOtD,KAC1BiL,IACDrB,EAAOkB,QAAQ,gBAAkBG,GAKhClK,KAAKuJ,sBACNV,EAAOsB,OAAStB,EAAOsB,QAAUtB,EAAOE,KACxCF,EAAOtE,QAAU,IACjBsE,EAAOzH,KAAOyH,EAAOzH,MAAQyH,EAAOA,cAC7BA,EAAOA,OAEd7I,KAAKwJ,QAAQX,GACTxB,MAAMoC,IAKJ,IAAIrI,EAAOqI,EACPX,GACD9I,KAAKqI,SAASwB,gBAAgBf,EAAa,KAAM1H,GAEpD1B,EAAQ0B,EAAK,IAEfkG,OAAOnG,IAQL,GACqB,mBAAlBA,EAAIiJ,YACHjJ,EAAIuC,SAAWvC,EAAIuC,QAAQ8D,QAAQ,iBAAmB,EA0BvD,OAvBAxH,KAAKO,GAAG8J,UAAUC,IACf,0EAGHzB,EAAOa,cAGP1J,KAAKqJ,SAASR,GACVxB,MAAMjG,IAEJpB,KAAKO,GAAGmG,KACL,wDAEHhH,EAAQ0B,EAAK,IAEfkG,OAAOiD,IACLvK,KAAKO,GAAGoJ,OAAOC,UAAUW,EAAM,CAC5B7G,QACG,sDAENoG,EAAOS,EAAK,IAOA,KAAdpJ,EAAIqJ,OACLxK,KAAKuB,KAAK,gBAAiBJ,GACnBA,EAAIqJ,QAAU,KAAOrJ,EAAIqJ,OAAS,IAC1CxK,KAAKuB,KAAK,mBAAoBJ,GACtBA,EAAIqJ,QAAU,KACtBxK,KAAKuB,KAAK,kBAAmBJ,GAInC,IAAIsI,EAAS,KACb,GAAItI,EAAIsJ,aACL,IACGhB,EAAS9C,KAAK+D,MAAMvJ,EAAIsJ,aAC3B,CAAE,MAAOpL,GAET,CAGH,GAAIoK,GAA2B,SAAjBA,EAAOe,OAElB,OAAiB,GAAbf,EAAOxK,IAA0B,YAAfwK,EAAOlK,UAC1BS,KAAKqI,SAAS9G,KAAK,WAItBvB,KAAKO,GAAGoJ,OAAOC,UAAU,IAAItK,MAAMmK,EAAO/F,SAAU,CACjDxC,QACG,mEACHE,KAAMqI,EAAOrI,KACboJ,OAAQf,EAAOe,SAId1B,GACD9I,KAAKqI,SAASwB,gBACXf,EACAW,EACA,MAGCK,EAAOL,EAAOrI,OAGrB,IAAIE,EAAQ,IAAIhC,MACb,GAAG6B,EAAIqJ,UAAUrJ,EAAIiJ,YAAcjJ,EAAIuC,YACpCmF,EAAOsB,UACNtB,EAAOxG,OAmBd,OAjBAf,EAAMqJ,SAAWxJ,EAAIsJ,aACrBnJ,EAAMmC,KAAOtC,EAAIiJ,WACjB9I,EAAMH,IAAMA,EACZG,EAAMe,IAAM,GAAGwG,EAAOsB,UAAUtB,EAAOxG,MACvCrC,KAAKO,GAAGoJ,OAAOC,UAAUtI,EAAO,CAC7BJ,QACG,0DACHC,MACAwJ,SAAUxJ,EAAIsJ,aACdhH,KAAMtC,EAAIiJ,YAAcjJ,EAAIuC,QAC5BrB,IAAKf,EAAMe,MAIVyG,GACD9I,KAAKqI,SAASwB,gBAAgBf,EAAaxH,GAEvCwI,EAAOxI,EACjB,MAINtB,KAAKO,GAAG8J,UAAUC,IACf,gEAEHtK,KAAKqI,SACDuC,MAAM/B,EAAQC,GACdzB,MAAK,KACH3H,EAAQ,CAAE8K,OAAQ,UAAW,IAE/BlD,MAAMwC,GACb,GAEN,CAUA,MAAAe,CAAOhC,EAAQC,GAEZ,OAAO9I,KAAKqJ,SAASR,EAAQC,EAChC,GCxXGgC,EAAmB,CAMtB,2BACA,2BACA,0BACA,2BACA,kBACA,mBAOH,SAASC,EAAetI,EAAKb,GACrBoJ,EAAevI,KACjBuI,EAAevI,GAAO,CACnBwI,QAAS,EACTrJ,OAAQ,IAIdoJ,EAAevI,GAAKwI,UACpBD,EAAevI,GAAKb,QAAUA,CACjC,CA+BA,IAAIoJ,EAAiB,CAErB,EAEIE,EAAe,CAEnB,EAiOA,QAzJA,cAAgC,EAC7B,WAAApL,CAAYiI,GAGThI,MAAMgI,GAEN/H,KAAKsI,YAAa,EAKlBwC,EAAiB9E,SAASmF,IACvBC,GAAGC,OAAOpK,GAAGkK,GAAK/J,KAxH3B,SAAuBb,EAAIkC,EAAKrB,GAC7B,IAAIQ,EAAS,KACb,IACGA,EAAS+E,KAAKC,UAAUxF,GAAMQ,OAC9BR,EAAKkK,SAAW1J,CACnB,CAAE,MAAOvC,GACNgC,QAAQiJ,IAAIjL,EAEf,CAEA,GAAI+B,EAAKmK,SAAU,CAChB,IAAIC,EAAMjL,EAAGkL,WAAWrK,EAAKmK,UACxBC,EAGFnK,QAAQqF,KACL,WAAWjE,KAAO+I,EAAIhI,OAASgI,EAAIE,QAAQ9J,KAC3CR,GAJHC,QAAQqF,KAAK,WAAWjE,oBAAsBb,KAAWR,EAO/D,MACGC,QAAQqF,KAAK,WAAWjE,MAAQb,KAAWR,GAG1CA,EAAKuK,QACNZ,EAAe3J,EAAKuK,MAAO/J,GAC3BmJ,EAAe,GAAG3J,EAAKuK,SAASlJ,IAAOb,GAE7C,CA6FYgK,CAAc5L,KAAKO,GAAI4K,EAAI/J,GAG3B,IAAIyK,EA3EhB,SAAsBtL,EAAI4K,EAAI/J,GAC3B,IAAI0K,EAAQ,CAACX,GAMb,GAJI/J,EAAKuK,OACNG,EAAM1E,KAAKhG,EAAKuK,OAGfvK,EAAKA,KAAM,CACZ,IAAI2K,EAAK,OACLP,EAAMjL,EAAGkL,WAAWrK,EAAKmK,UACzBC,IACDO,EAAKP,EAAIO,MAEZD,EAAM1E,KAAKhG,EAAKA,KAAK2K,IAAO3K,EAAKA,KAAKnC,GACzC,CAEA,GAAImC,EAAKkK,SACNQ,EAAM1E,KAAKhG,EAAKkK,cACZ,CACJ,IAAI1J,EAAS,KACb,IACGA,EAAS+E,KAAKC,UAAUxF,GAAMQ,MACjC,CAAE,MAAOvC,GAET,CACAyM,EAAM1E,KAAKxF,EACd,CAEA,OAAOkK,EAAM1C,KAAK,IACrB,CA8CwB4C,CAAahM,KAAKO,GAAI4K,EAAI/J,GACtC,IArCF8J,EAqCoBW,GAAlB,CAMA,GA9BZ,SAAmBpJ,EAAKwJ,EAAO,KAC5Bf,EAAazI,IAAO,EACpBgF,YAAW,YACDyD,EAAazI,EAAI,GACxBwJ,EACN,CAoBYC,CAAUL,EAAO,KAKbV,EAAG3D,QAAQ,sBAAwB,GACvBpG,EAAKA,KACN,CACT,IAAIoK,EAAMxL,KAAKO,GAAGkL,WAAWrK,EAAKmK,UAClC,GAAIC,EAAK,CACN,IAAIW,EAAQX,EAAIW,QAChB,GAAU,4BAANhB,EAAkC,CACnC,IAAIQ,EAAQ3L,KAAKO,GAAGoL,QACpBS,EAAA,EAAYC,KAAK,GAAGlB,kBAAoB,CACrCmB,GAAI,WACJlL,KAAM,CAAEuK,WAEXQ,EAAMI,cAAcnL,EAAKA,MACzBgL,EAAA,EAAYI,QAAQ,GAAGrB,kBAC1B,CACH,CACH,CAEHnL,KAAKO,GAAGgB,KAAK4J,EAAI/J,EAxBe,CAwBV,GACvB,GAER,CAMA,SAAAqL,GACGpL,QAAQqF,KAAKC,KAAKC,UAAUoE,EAAgB,KAAM,GACrD,CAEA,cAAA0B,GACG1B,EAAiB,CAAC,CACrB,CAMA,kBAAAzB,GACG,OAAO6B,GAAGC,OAAOsB,aACpB,CAEA,OAAAnD,CAAQX,GACL,IAAI+D,EAAOC,EACX,KAEI,CAAED,EAAOC,GAAShE,EAAOxG,IAAIyK,MAC3B,oCAEHF,EAAQA,EAAMhH,QAAQ,uBAAwB,OAC9CwG,EAAA,EAAYC,KAAKO,EAAO,CACrBN,GAAI,mBACJlL,KAAM,CACH2L,KAAM,CACHF,MAAOA,QAASG,EAChB7C,OAAQtB,EAAOsB,QAElB9H,IAAKwG,EAAOxG,MAGrB,CAAE,MAAOlB,GACNnB,KAAKO,GAAGoJ,OAAOC,UAAUzI,EAAK,CAC3BD,QAAS,qCAEf,CAEA,OAAO,IAAIM,SAAQ,CAAC9B,EAASoK,KAC1BjB,EAAOsB,OAAStB,EAAOsB,OAAO8C,cAE9B7B,GAAGC,OAAO6B,QAAQrE,GAAQ,CAACzH,EAAM+L,KAU9B,GAAIA,EAAMC,YAAc,IAAK,CAM1B,IAAIC,EAASF,EAAM7L,MAAQ6L,EAAM7L,MAAMiG,WAAa4F,EAAMG,KAEtDnM,EAAM,IAAI7B,MAAM,iBAAiB+N,KACrClM,EAAIqJ,OAAS2C,EAAMC,WACnBjM,EAAIiJ,WAAaiD,EACjBlM,EAAIsJ,aAAe0C,EAAMG,KAKzBxD,EAAO3I,EACV,KAAO,CAEJ,GAAIC,aAAgB9B,MAEjB,YADAwK,EAAO1I,GAIS,iBAARA,IACRgL,EAAA,EAAYC,KAAK,aAAc,CAAEC,GAAI,cACrClL,EAAOuF,KAAK+D,MAAMtJ,GAClBgL,EAAA,EAAYI,QAAQ,eAKH,SAAhBpL,GAAMoJ,OAEPV,EAAO,CACJU,OAAQ2C,EAAMC,WACd3C,aAAc9D,KAAK4G,UAAUnM,MAKhCgL,EAAA,EAAYI,QAAQI,GACpBlN,EAAQ0B,GAEd,IACD,GAER,GCnSH,IAAI,EAAe,sBAihBnB,YA3gBA,cAAsB,EACnB,WAAAtB,GACGC,QAEAC,KAAKwN,gBAAgB,GAGrBxN,KAAKyN,UAAY,KAIjBzN,KAAKE,QAAU,KACfF,KAAKqI,SAAW,KAMhBrI,KAAK0N,YAAc,EAKnB1N,KAAK2N,gBAAkB,CAAC,CAM3B,CAEA,IAAArN,CAAKC,GAQF,GALAP,KAAKO,GAAKA,EAEVP,KAAKyN,UAAY,IAAIzN,KAAKO,GAAGqN,KAE7B5N,KAAKE,QAAUF,KAAKO,GAAGE,OAAO+H,aAC1BxI,KAAKE,QAAS,CACf,OAAQF,KAAKE,QAAQuI,WAAWoF,aAC7B,IAAK,QAEF,MAEH,IAAK,SACF7N,KAAKqI,SAAW,IAAI,EAAkBrI,MACtC,MAGH,QACGA,KAAKqI,SAAW,IAAI,EAAYrI,MAItC,OAAOA,KAAKqI,SAAS/H,KAAKC,EAC7B,CAqBA,OApBGc,QAAQC,MAAM,8BAMb8J,IAAMA,GAAGC,OAEVD,GAAGC,OAAOpK,GAAG,aAAa,KACvBjB,KAAK8N,aACD9N,KAAK+N,oBACNlH,aAAa7G,KAAK+N,mBAClB/N,KAAK+N,kBAAoB,KAC5B,KAGH1M,QAAQC,MAAM,+CACd0M,OAAOC,iBAAiB,UAAU,IAAMjO,KAAK8N,gBAGzCtM,QAAQ9B,SAClB,CAWA,cAAI4I,GACD,OAAOtI,KAAKqI,SAASC,UACxB,CAcA,GAAAM,IAAOC,GACJ,OAAO7I,KAAKqI,SAASO,OAAOC,GAAQxB,MAAMjG,GAChCpB,KAAKuM,cAAcnL,IAEhC,CAeA,IAAAgB,IAAQyG,GACL,OAAO7I,KAAKqI,SAASjG,QAAQyG,GAAQxB,MAAMjG,GACjCpB,KAAKuM,cAAcnL,IAEhC,CAeA,GAAAkI,IAAOT,GACJ,OAAO7I,KAAKqI,SAASiB,OAAOT,GAAQxB,MAAMjG,GAChCpB,KAAKuM,cAAcnL,IAEhC,CAcA,UAAUyH,GACP,OAAO7I,KAAKqI,SAAS6F,UAAUrF,GAAQxB,MAAMjG,GACnCpB,KAAKuM,cAAcnL,IAEhC,CAMA,gBAAA+M,GAEOnO,KAAKuJ,sBACNvJ,KAAK8N,aAAaxG,OAAM,KAErBtH,KAAK+N,kBAAoBtG,YAAW,KACjCzH,KAAKmO,kBAAkB,GACvB,IAAI,IAEVnO,KAAK+N,kBAAoB,MAEzB/N,KAAK+N,kBAAoBtG,YAAW,KACjCzH,KAAKmO,kBAAkB,GACvB,IAGT,CAMA,aAAAC,GACG,QAASpO,KAAKqO,YACjB,CAOA,yBAAAC,CAA0BC,EAAQC,GAC/BxO,KAAKyO,mBAAqBF,EAC1BvO,KAAKqO,aAAeG,EACpBxO,KAAKyO,mBAAmBC,UAAY,EAAGtN,WAChCpB,KAAKqO,eAAiBjN,IACvBpB,KAAKqO,aAAejN,EACpBpB,KAAKuB,KAAK,cAAevB,KAAKqO,cAE9BjC,EAAA,EAAYuC,WAAW,aAAc,CAClCC,SAAU,UACVlL,QAAS1D,KAAKqO,aACT,wBACA,yBACLQ,MAAO,SAEb,CAEN,CAQA,aAAAC,GACG,OAAOC,UAAUC,WAAWjG,IAC/B,CAQA,kBAAAQ,GAEG,OAAI6B,IAAMA,GAAGC,QAAUD,GAAGC,OAAOsB,YACvBvB,GAAGC,OAAOsB,cAIK,oBAAdsC,WAGDF,UAAUG,OAIblP,KAAK8O,iBAAmBG,WAAWE,IAC7C,CASA,eAAAtF,CAAgBf,EAAaxH,EAAOF,GAC7BA,IACDA,EAAOpB,KAAKuM,cAAcnL,IAE7BpB,KAAKuB,KAAKuH,EAAYrG,IAAKqG,EAAY5H,QAASI,EAAOF,EAC1D,CAEA,aAAAmL,CAAcnL,GAmBX,MAAoB,UAAhBA,EAAKoJ,OAECpJ,EAKHA,EAAKA,MAAQA,CACvB,CAWA,QAAAgO,GACG,MAAO,cACV,CAOA,UAAAC,GACG,OAAOrP,KAAK0N,WACf,CASA,KAAA9C,CAAMxJ,EAAM0H,GACT,IAAIsG,EAAWpP,KAAKoP,WAEpB,OAAO,IAAI5N,SAAQ,CAAC9B,EAASoK,KAC1B9J,KAAKyN,UACD6B,UACAjI,MAAK,IACIrH,KAAKO,GAAGgP,QAAQ3G,IAAIwG,KAE7B/H,MAAMuD,IACJA,EAAQA,GAAS,GACjB,IAAI4E,EAAMxP,KAAKO,GAAGoL,QASlB,OARA3L,KAAK2N,gBAAgB6B,GAAO1G,EAC5B8B,EAAMxD,KAAK,CAAEhG,OAAM0H,YAAa0G,IAChCxP,KAAKO,GAAG+J,IACL,QAAQM,EAAMhJ,iBACXgJ,EAAMhJ,OAAS,EAAI,IAAM,aAG/B5B,KAAK0N,YAAc9C,EAAMhJ,OAClB5B,KAAKO,GAAGgP,QAAQE,IAAIL,EAAUxE,EAAM,IAE7CvD,MAAK,KACHrH,KAAKuB,KAAK,UAELvB,KAAK+N,mBACP/N,KAAKmO,mBAERnO,KAAKyN,UAAUiC,UACfhQ,GAAS,IAEX4H,OAAOnG,IACLnB,KAAKO,GAAGoJ,OAAOC,UAAUzI,EAAK,CAC3BuC,QAAS,8BAEZ1D,KAAKO,GAAG8J,UAAUsF,SAASxO,GAC3B2I,EAAO3I,GAEPnB,KAAKyN,UAAUiC,SAAS,GACzB,GAEX,CAMA,UAAA5B,GACG,IAAIsB,EAAWpP,KAAKoP,WAGpB,IAAKpP,KAAKuJ,qBAAsB,CAC7B,IAAIjI,EAAQ,IAAIhC,MAAM,kCAEtB,OADAgC,EAAM/B,KAAO,iBACNiC,QAAQsI,OAAOxI,EACzB,CAGA,OAAO,IAAIE,SAAQ,CAAC9B,EAASoK,KAC1B9J,KAAKyN,UACD6B,UAKAjI,MAAK,IACIrH,KAAKO,GAAGgP,QAAQ3G,IAAIwG,KAM7B/H,MAAMuD,IAIJ,IAAIgF,GAAe,EACfC,EAAW,EACXC,GAJJlF,EAAQA,GAAS,IAIKhJ,OAiBtB,IAAImO,EAAkBC,IACnB,GAAoB,GAAhBpF,EAAMhJ,OACPoO,QACI,CACJ,IAAIC,EAAQrF,EAAMzD,QACd0B,EAASoH,EAAM7O,KACnB,IAAI8O,EAAMlQ,KAAK2N,gBAAgBsC,EAAMnH,aAErC9I,KAAKqI,SACDwC,OAAOhC,EAAQqH,GACf7I,MAAK,YACIrH,KAAK2N,gBAAgBsC,EAAMnH,aAElCkH,GAAI,IAEN1I,OAAOnG,IAEDA,GAAmB,mBAAZA,EAAI5B,MACZyQ,EAAG7O,EAEN,IAIN4O,EAAeC,EAClB,GAGH,OAAO,IAAIxO,SAAQ,CAAC2O,EAAKC,KACtBL,GAAgB5O,IA5CR,EAACgP,EAAKC,EAAKjP,KACnB,IAAKyO,EAAc,CAChB,GAAIzO,EAGD,OAFAiP,EAAIjP,QACJyO,GAAe,GAGlBC,IACIA,GAAYC,IACbF,GAAe,EACfO,IAEN,GAiCGE,CAAKF,EAAKC,EAAKjP,EAAI,GAMpB,GACH,IAMJkG,MAAK,KACHrH,KAAK2N,gBAAkB,CAAC,EACxB3N,KAAK0N,YAAc,EACZ1N,KAAKO,GAAGgP,QAAQE,IAAIL,EAAU,OAIvC/H,MAAK,KACHrH,KAAKuB,KAAK,gBACHvB,KAAKyN,UAAUiC,aAIxBrI,MAAK,KACH3H,GAAS,IAIX4H,OAAOnG,IACLnB,KAAKO,GAAGoJ,OAAOC,UAAUzI,EAAK,CAC3BuC,QAAS,6BAEZ1D,KAAKO,GAAG8J,UAAUsF,SAASxO,GAE3BnB,KAAKyN,UAAUiC,UAAUrI,MAAK,KAC3ByC,EAAO3I,EAAI,GACZ,GACH,GAEX,CAMA,KAAAmP,GACG,OAAO9O,QAAQ9B,SAClB,CAQA,IAAAqJ,GACG,OAAO/I,KAAKE,QAAQuI,WAAWoF,WAClC,CAMA,SAAA0C,GAEG,MAAO,CAAC,CACX,GCxgBH,IAAI,EAAe,sBA0DnB,YAxDA,cAA2B,EACxB,WAAAzQ,GACGC,QAEAC,KAAKwQ,cAAgB,IAKxB,CAEA,IAAAlQ,CAAKC,GAGFP,KAAKO,GAAKA,EACV,IAAI2J,EAAWlK,KAAKO,GAAGgC,OAAOtD,KAa9B,OAZKiL,IACFA,EAAW,UAKdlK,KAAKwQ,cAAgBxQ,KAAKO,GAAGkQ,MAAMC,QAAQC,OACxCzG,EACAlK,KAAKO,GAAGkQ,MAAMC,QAAQE,OAIlBpP,QAAQ9B,SAClB,CAEA,GAAA+P,CAAIhN,EAAKoO,GACN,OAAOrP,QAAQ9B,UAAU2H,MAAK,IACpBrH,KAAKwQ,cAAclH,IAAI7G,EAAKoO,IAEzC,CAEA,GAAAjI,CAAInG,GACD,OAAOjB,QAAQ9B,UAAU2H,MAAK,IACpBrH,KAAKwQ,cAAc5H,IAAInG,IAEpC,CAEA,KAAAqO,CAAMrO,GACH,OAAOjB,QAAQ9B,UAAU2H,MAAK,IACpBrH,KAAKwQ,cAAcO,OAAOtO,IAEvC,CAEA,QAAAuO,GACG,OAAOxP,QAAQ9B,UAAU2H,MAAK,IACpBrH,KAAKwQ,cAAcM,SAEhC,GClEH,IAAI,EAAe,sBAoDnB,YAhDA,cAAsB,EACnB,WAAAhR,GACGC,QAEAC,KAAKwQ,cAAgB,KACrBxQ,KAAKE,QAAU,KACfF,KAAKiR,SAAW,IACnB,CAEA,IAAA3Q,CAAKC,GAGFP,KAAKO,GAAKA,EACV,IAAI2Q,EAASlR,KAAKO,GAAGE,OAAO+H,aAC5B,OAAI0I,GACGA,EAAOR,SAAWQ,EAAOR,QAAQS,WAClC9P,QAAQC,MAAM,qCAEdtB,KAAKiR,SAAW,GAEhBjR,KAAKiR,SAAW,EAGZjR,KAAKiR,SAAS3Q,KAAKC,KAE1Bc,QAAQC,MAAM,8BAGVE,QAAQ9B,UAClB,CAEA,GAAA+P,IAAO5G,GACJ,OAAO7I,KAAKiR,SAASxB,OAAO5G,EAC/B,CAEA,GAAAD,IAAOC,GACJ,OAAO7I,KAAKiR,SAASrI,OAAOC,EAC/B,CAEA,KAAAiI,IAASjI,GACN,OAAO7I,KAAKiR,SAASH,SAASjI,EACjC,CAEA,QAAAmI,IAAYnI,GACT,OAAO7I,KAAKiR,SAASD,YAAYnI,EACpC,2BCjDC,EAAe,sBAsDnB,YAlDA,cAAqB,EAClB,WAAA/I,GACGC,QAEAC,KAAKyD,MAAO,EACZzD,KAAKE,QAAU,KACfF,KAAKoR,iBAAmB,IAC3B,CAEA,IAAA9Q,GACG,IAAI4Q,EAASzQ,EAAA,EAAO4Q,eACpB,GAAIH,EAAQ,CAET,GAC6B,iBAAnBA,EAAO3I,SACd2I,EAAO3I,mBAAmB+I,OAG1B,IACGJ,EAAO3I,QAAU5B,KAAK+D,MAAMwG,EAAO3I,QACtC,CAAE,MAAOjH,GACND,QAAQC,MAAMA,EACjB,CAEHtB,KAAKE,QAAUgR,EACflR,KAAKoR,iBAAmBF,EAAO3I,QAAQ6I,gBAC1C,CAGA,OAAO5P,QAAQ9B,SAClB,CAEA,EAAAT,GACG,OAAKe,KAAKE,SAA8B,MAAnBF,KAAKE,QAAQjB,GAG3Be,KAAKE,QAAQjB,GAFV,IAGb,CAEA,OAAAuD,CAAQC,EAAKoO,GACV,GAAI7Q,KAAKE,QACN,OAAI2Q,OACD7Q,KAAKE,QAAQqI,QAAQ9F,GAAOoO,GAGxB7Q,KAAKE,QAAQqI,QAAQ9F,EAElC,GC5CH,GAEG8O,iBAAkB,GAGlBC,iBAAkB,IAClBC,kBAAmB,IACnBC,iBAAkB,IAClBC,sBAAuB,GAGvBC,cAAe,IACfC,eAAgB,IAChBC,cAAe,IACfC,mBAAoB,GAGpBC,kBAAmB,IACnBC,iBAAkB,IAClBC,kBAAmB,IACnBC,iBAAkB,IAClBC,sBAAuB,IAGvBC,aAAc,EACdC,YAAa,GACbC,aAAc,GACdC,YAAa,GACbC,aAAc,IACdC,cAAe,IACfC,eAAgB,IAChBC,uBAAwB,IACxBC,yBAA0B,IAC1BC,yBAA0B,IAC1BC,wBAAyB,GAGzBC,gBAAiB,GACjBC,iBAAkB,GAClBC,gBAAiB,IACjBC,iBAAkB,IAClBC,kBAAmB,IACnBC,mBAAoB,IACpBC,mBAAoB,EAGpBC,YAAY,GC9Cf,GAEGhC,iBAAkB,GAGlBC,iBAAkB,IAClBC,kBAAmB,IACnBC,iBAAkB,IAClBC,sBAAuB,GAGvBC,cAAe,IACfC,eAAgB,IAChBC,cAAe,IACfC,mBAAoB,GAGpBE,iBAAkB,IAClBC,kBAAmB,IACnBC,iBAAkB,IAClBC,sBAAuB,IAGvBC,aAAc,EACdC,YAAa,EACbC,aAAc,GACdC,YAAa,GACbC,aAAc,GACdC,cAAe,IACfC,eAAgB,IAChBC,uBAAwB,GACxBC,yBAA0B,EAC1BC,yBAA0B,EAC1BC,wBAAyB,EAGzBC,gBAAiB,GACjBC,iBAAkB,GAClBC,gBAAiB,IACjBC,iBAAkB,IAClBC,kBAAmB,IACnBE,mBAAoB,EAGpBC,YAAY,GCzCf,GACGrC,OAAQ,WAEL,OAAIlD,OAAOwF,WAAa,IACd,EAEH,CACV,EACAC,MCjBO,CACJ,QACA,eACA,iBACA,eACA,iBACA,SACA,MACA,eACA,gBACA,aACA,cACA,SACA,YACA,sCACA,SACA,UACA,YACA,oBACA,oBACA,qBACA,kBACA,aACA,aACA,cACA,WACA,QACA,UACA,aACA,oBACA,oBACA,sBACA,sBACA,uBACA,oBACA,qBACA,kBACA,aACA,aACA,cACA,WACA,SACA,aACA,WACA,WACA,mBACA,8BACA,WACA,KACA,oBACA,aACA,WACA,gBACA,MACA,WACA,OACA,YACA,cACA,UACA,OACA,OACA,UACA,UACA,YACA,YACA,YACA,YACA,YACA,gBACA,eACA,eACA,kBACA,yBACA,MACA,OACA,UACA,iBACA,OACA,SACA,aACA,eACA,UACA,aACA,gBACA,YACA,mBACA,UACA,YACA,QACA,YACA,cACA,OACA,OACA,OACA,OACA,WACA,aACA,UACA,YACA,MACA,MACA,WACA,aACA,WACA,WACA,MACA,aACA,MACA,aACA,WACA,mBACA,mBACA,aACA,kBACA,mBACA,SACA,eACA,MACA,aACA,aACA,cACA,sBACA,sBACA,uBACA,oBACA,WACA,kBACA,YACA,KACA,UACA,iBACA,cACA,SACA,gBACA,YACA,YACA,UACA,cACA,QACA,eACA,QACA,eACA,iBACA,eACA,iBACA,sBACA,sBACA,uBACA,oBACA,eACA,eACA,gBACA,aACA,QACA,SACA,SACA,WACA,iBACA,cACA,YACA,UACA,QACA,QACA,QACA,iBACA,eACA,MACA,OACA,YACA,UACA,WACA,SACA,MACA,OACA,UACA,UACA,YACA,aACA,eACA,WACA,aACA,UACA,WACA,iBACA,SACA,OACA,YACA,mBACA,cACA,kBACA,OACA,aACA,OACA,OACA,QACA,MACA,UACA,YACA,WACA,WACA,OACA,WACA,SACA,YACA,UACA,aACA,UACA,OACA,SACA,eACA,WACA,WACA,kBACA,oBACA,UACA,SACA,OACA,OACA,UACA,QACA,aACA,aACA,SACA,WACA,aACA,gBACA,kBACA,kBACA,SACA,SACA,OACA,MACA,OACA,WACA,cACA,qBACA,uBACA,SACA,eACA,gBACA,uBACA,MACA,YACA,aACA,KACA,WACA,aACA,oBACA,kBACA,gBACA,eACA,MACA,OACA,SACA,cACA,OACA,iBACA,eACA,cACA,eACA,eACA,eACA,SACA,aACA,eACA,iBACA,oBACA,eACA,YACA,cACA,eACA,cACA,aACA,UACA,OACA,SACA,OACA,oBACA,UACA,cACA,OACA,iBACA,SACA,QACA,QACA,SACA,WACA,SACA,WACA,cACA,gBACA,OACA,eACA,YACA,eACA,WACA,UACA,aACA,iBACA,UACA,WACA,UACA,QACA,MACA,KACA,OACA,QACA,aACA,aACA,KACA,YACA,OACA,MACA,aACA,SACA,aACA,gBACA,SACA,SACA,QACA,QACA,UACA,QACA,SACA,cACA,qBACA,uBACA,qBACA,gBACA,iBACA,WACA,OACA,QACA,WACA,cACA,cACA,gBACA,cACA,cACA,eACA,YACA,eACA,eACA,iBACA,cACA,kBACA,eACA,cACA,cACA,kBACA,UACA,QACA,SACA,aACA,QACA,UACA,YACA,UACA,OACA,aACA,QACA,YACA,cACA,cACA,cACA,gBACA,iBACA,cACA,kBACA,QACA,QACA,WACA,WACA,UACA,YACA,MACA,QACA,OACA,QACA,SACA,WACA,OACA,cACA,MACA,YACA,cACA,oBACA,WACA,UACA,SACA,SACA,MACA,WACA,MACA,aACA,MACA,WACA,SACA,SACA,gBACA,OACA,UACA,QACA,UACA,aACA,WACA,YACA,YACA,YACA,aACA,cACA,aACA,OACA,WACA,kBACA,SACA,QACA,OACA,WACA,UACA,UACA,iBACA,OACA,kBACA,kBACA,mBACA,gBACA,aACA,QACA,SACA,eACA,aACA,iBACA,OACA,MACA,aACA,QACA,UACA,YACA,OACA,cACA,cACA,gBACA,gBACA,SACA,WACA,SACA,SACA,SACA,QACA,UACA,YACA,aACA,mBACA,QACA,eACA,eACA,iBACA,WACA,SACA,eACA,OACA,QACA,SACA,eACA,aACA,gBACA,QACA,UACA,SACA,cACA,eACA,iBACA,gBACA,uBACA,WACA,SACA,QACA,gBACA,UACA,YACA,cACA,cACA,gBACA,YACA,YACA,QACA,QACA,eACA,iBACA,MACA,SACA,SACA,gBACA,kBACA,UACA,QACA,eACA,QACA,YACA,YACA,aACA,iBACA,gBACA,YACA,cACA,mBACA,QACA,OACA,cACA,gBACA,OACA,OACA,cACA,cACA,gBACA,UACA,YACA,QACA,eACA,eACA,KACA,SACA,WACA,kBACA,oBACA,QACA,aACA,cACA,KACA,SACA,UACA,QACA,UACA,SACA,eACA,gBACA,UACA,aACA,SACA,SACA,UACA,SACA,QACA,YACA,aACA,UACA,MACA,OACA,SACA,cACA,eACA,SACA,MACA,aACA,MACA,QACA,QACA,MACA,SACA,OACA,WACA,SACA,SACA,eACA,cACA,SACA,OACA,SACA,SACA,QACA,YACA,mBACA,eACA,iBACA,SACA,SACA,SACA,OACA,eACA,eACA,kBACA,gBACA,SACA,UACA,gBACA,WACA,SACA,UACA,cACA,UACA,WACA,QACA,QACA,UACA,aACA,UACA,WACA,iBACA,kBACA,cACA,gBACA,OACA,iBACA,kBACA,kBACA,mBACA,WACA,YACA,YACA,mBACA,oBACA,UACA,aACA,gBACA,UACA,QACA,UACA,SACA,WACA,iBACA,iBACA,OACA,YACA,kBACA,iBACA,cACA,SACA,QACA,eACA,gBACA,eACA,cACA,cACA,gBACA,OACA,cACA,gBACA,cACA,gBACA,cACA,qBACA,YACA,SACA,WACA,QACA,cACA,cACA,UACA,QACA,SACA,aACA,MACA,OACA,QACA,OACA,WACA,aACA,gBACA,WACA,cACA,aACA,KACA,WACA,UACA,YACA,cACA,gBACA,gBACA,gBACA,gBACA,gBACA,oBACA,mBACA,mBACA,sBACA,6BACA,aACA,cACA,gBACA,cACA,YACA,SACA,QACA,eACA,iBACA,kBACA,oBACA,OACA,cACA,cACA,aACA,YACA,eACA,YACA,YACA,QACA,cACA,kBACA,QACA,UAC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","sources":["webpack://ab_platform_web/./node_modules/moment/locale/ sync ^\\.\\/.*$","webpack://ab_platform_web/./resources/Account.js","webpack://ab_platform_web/./AppBuilder/_factory_utils/Dialog.js","webpack://ab_platform_web/./resources/Multilingual.js","webpack://ab_platform_web/./resources/NetworkRest.js","webpack://ab_platform_web/./resources/NetworkRestSocket.js","webpack://ab_platform_web/./resources/Network.js","webpack://ab_platform_web/./resources/StorageLocal.js","webpack://ab_platform_web/./resources/Storage.js","webpack://ab_platform_web/./resources/Tenant.js","webpack://ab_platform_web/./AppBuilder/uiSettings/configDesktop.js","webpack://ab_platform_web/./AppBuilder/uiSettings/configMobile.js","webpack://ab_platform_web/./AppBuilder/uiSettings/config.js","webpack://ab_platform_web/./AppBuilder/uiSettings/icons.js","webpack://ab_platform_web/./AppBuilder/ABFactory.js","webpack://ab_platform_web/./AppBuilder/core/ABApplicationCore.js","webpack://ab_platform_web/./AppBuilder/core/ABApplicationMobileCore.js","webpack://ab_platform_web/./AppBuilder/core/ABDataCollectionCore.js","webpack://ab_platform_web/./AppBuilder/core/ABDefinitionCore.js","webpack://ab_platform_web/./AppBuilder/core/ABFactoryCore.js","webpack://ab_platform_web/./AppBuilder/core/ABFieldManager.js","webpack://ab_platform_web/./AppBuilder/core/ABHintCore.js","webpack://ab_platform_web/./AppBuilder/core/ABIndexCore.js","webpack://ab_platform_web/./AppBuilder/core/ABMLClassCore.js","webpack://ab_platform_web/./AppBuilder/core/ABModelCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectApiCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectQueryCore.js","webpack://ab_platform_web/./AppBuilder/core/ABProcessCore.js","webpack://ab_platform_web/./AppBuilder/core/ABStepCore.js","webpack://ab_platform_web/./AppBuilder/core/ABViewManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/ABViewManagerMobileCore.js","webpack://ab_platform_web/./AppBuilder/core/FilterComplexCore.js","webpack://ab_platform_web/./AppBuilder/core/RowFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldAutoIndexCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldBooleanCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCalculateCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCombineCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldDateCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldDateTimeCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldFileCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldImageCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldJsonCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldListCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldLongTextCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldStringCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldTextFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldUserCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobilePageCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormButtonCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormDateCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormDatetimeCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormFileCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormImageCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormItemCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormReadonlyCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormSelectMultipleCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormSelectSingleCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormTextboxCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewLabelCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewListCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessLaneCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessParticipantCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessTaskManager.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessElementCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessEndCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessGatewayExclusiveCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingBatchProcessingCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingFPCloseCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingFPYearCloseCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingJEArchiveCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceCalculateCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceGetResetPasswordUrlCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceInsertRecordCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceQueryCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskSubProcessCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserApprovalCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserExternalCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerLifecycleCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerTimerCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLFindCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRootObjectCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRow.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowPluckCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowSaveCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowUpdateCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSet.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetFirstCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetPluckCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetSaveCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCSVExporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCSVImporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCarouselCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartAreaCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartBarCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartLineCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartPieCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCommentCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewConditionalContainerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewConnectDataFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewContainerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDataFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDataSelectCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDataviewCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailImageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailItemCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailTextCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDocxBuilderCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormButtonCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormDatepickerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormItemCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormJsonCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormReadonlyCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormSelectMultipleCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormSelectSingleCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormTextboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewGanttCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewGridCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewImageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewKanbanCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewLabelCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewLayoutCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewListCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewMenuCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewOrgChartCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPDFImporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPivotCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewReportsManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewSchedulerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewTabCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewTextCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewWidgetCore.js","webpack://ab_platform_web/./AppBuilder/platform/ABApplication.js","webpack://ab_platform_web/./AppBuilder/platform/ABApplicationMobile.js","webpack://ab_platform_web/./AppBuilder/platform/ABComponent.js","webpack://ab_platform_web/./AppBuilder/platform/ABDataCollection.js","webpack://ab_platform_web/./AppBuilder/platform/ABDefinition.js","webpack://ab_platform_web/./AppBuilder/platform/ABEmitter.js","webpack://ab_platform_web/./AppBuilder/platform/ABHint.js","webpack://ab_platform_web/./AppBuilder/platform/ABIndex.js","webpack://ab_platform_web/./AppBuilder/platform/ABMLClass.js","webpack://ab_platform_web/./AppBuilder/platform/ABModel.js","webpack://ab_platform_web/./AppBuilder/platform/ABModelApi.js","webpack://ab_platform_web/./AppBuilder/platform/ABModelQuery.js","webpack://ab_platform_web/./AppBuilder/platform/ABObject.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectApi.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectExternal.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectImport.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectQuery.js","webpack://ab_platform_web/./AppBuilder/platform/ABProcess.js","webpack://ab_platform_web/./AppBuilder/platform/ABStep.js","webpack://ab_platform_web/./AppBuilder/platform/ABViewManager.js","webpack://ab_platform_web/./AppBuilder/platform/ABViewManagerMobile.js","webpack://ab_platform_web/./AppBuilder/platform/CSVImporter.js","webpack://ab_platform_web/./AppBuilder/platform/FilterComplex.js","webpack://ab_platform_web/./AppBuilder/platform/RowFilter.js","webpack://ab_platform_web/./AppBuilder/platform/RowUpdater.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABField.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldAutoIndex.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldBoolean.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldCalculate.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldCombine.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldConnect.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldDate.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldDateTime.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldEmail.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldFile.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldFormula.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldImage.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldJson.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldList.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldLongText.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldNumber.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldSelectivity.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldString.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldTextFormula.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldTree.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldUser.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobilePage.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileView.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewForm.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormButton.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormConnect.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormCustom.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormDate.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormDatetime.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormEmail.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormFile.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormFormula.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormImage.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormItem.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormNumber.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormReadonly.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormSelectMultiple.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormSelectSingle.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormTextbox.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewLabel.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewList.js","webpack://ab_platform_web/./AppBuilder/platform/process/ABProcessLane.js","webpack://ab_platform_web/./AppBuilder/platform/process/ABProcessParticipant.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessElement.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessEnd.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessGatewayExclusive.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskEmail.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskService.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingBatchProcessing.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingFPClose.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingFPYearClose.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingJEArchive.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceCalculate.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceGetResetPasswordUrl.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceInsertRecord.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceQuery.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskSubProcess.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUser.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUserApproval.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUserExternal.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTrigger.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTriggerLifecycle.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTriggerTimer.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQL.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLFind.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLManager.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRootObject.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowPluck.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowSave.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowUpdate.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetFirst.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetPluck.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetSave.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABView.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCSVExporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCSVImporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCarouselComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCarousel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChart.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartArea.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartBar.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartLine.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartPie.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewComment.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewConditionalContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewConnectDataFilterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewConnectDataFilter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDataFilterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDataFilter.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDataSelectComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDataSelect.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDataview.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetail.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailConnect.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailCustom.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailImage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailItem.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailText.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailTree.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDocxBuilder.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewForm.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormButton.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormConnect.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormCustom.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormDatepicker.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormItem.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormJson.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormNumber.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormReadonly.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormSelectMultiple.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormSelectSingle.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormTextbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormTree.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewGanttComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGantt.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupExport.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupMassUpdate.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewGridComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGrid.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupSortFields.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewImage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewKanban.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewKanbanFormSidePanel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewLabel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewLayout.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewList.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewMenu.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewOrgChart.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPDFImporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPivot.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewReportsManager.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewScheduler.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewTab.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewText.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewWidget.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCSVExporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCSVImporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartAreaComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartBarComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartLineComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartPieComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCommentComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewConditionalContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDataviewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailCheckboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailConnectComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailCustomComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailImageComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailItemComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailTextComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailTreeComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDocxBuilderComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormButtonComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormCheckboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormConnectComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormCustomComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormDatepickerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormItemComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormJsonComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormNumberComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormReadonlyComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormSelectMultipleComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormSelectSingleComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormTextboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormTreeComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewImageComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewKanbanComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewLabelComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewLayoutComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewListComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewMenuComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewOrgChartComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewPDFImporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewPivotComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewReportsManagerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewSchedulerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewTabComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewTextComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewProperty.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyAddPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyEditPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyFilterData.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyLinkPage.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewQueryBuilderObjectFieldConditions.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRule.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleAction.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleList.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleListFormRecordRules.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleListFormSubmitRules.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleInsertConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleRemoveConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleUpdate.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleUpdateConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleClosePopup.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleConfirmMessage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleEmail.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleExistPage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleParentPage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleWebsite.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionObjectUpdater.js","webpack://ab_platform_web/./js/docxtemplater-image-module.v3.0.2.min.js","webpack://ab_platform_web/./js/docxtemplater.v3.0.12.min.js","webpack://ab_platform_web/./js/jszip.min.js","webpack://ab_platform_web/./webix_custom_components/activelist.js","webpack://ab_platform_web/./webix_custom_components/countfooter.js","webpack://ab_platform_web/./webix_custom_components/customComponentManager.js","webpack://ab_platform_web/./webix_custom_components/datetimepicker.js","webpack://ab_platform_web/./webix_custom_components/editlist.js","webpack://ab_platform_web/./webix_custom_components/edittree.js","webpack://ab_platform_web/./webix_custom_components/editunitlist.js","webpack://ab_platform_web/./webix_custom_components/focusableTemplate.js","webpack://ab_platform_web/./webix_custom_components/formioBuilder.js","webpack://ab_platform_web/./webix_custom_components/formioPreview.js","webpack://ab_platform_web/./webix_custom_components/lazyComponent.js","webpack://ab_platform_web/./webix_custom_components/numbertext.js","webpack://ab_platform_web/./webix_custom_components/thaicalendar.js","webpack://ab_platform_web/./webix_custom_components/timepicker.js","webpack://ab_platform_web/./webix_custom_components/tinyMce.js","webpack://ab_platform_web/./webix_custom_components/totalfooter.js","webpack://ab_platform_web/./webix_custom_components/treesuggest.js"],"sourcesContent":["var map = {\n\t\"./af\": 19183,\n\t\"./af.js\": 19183,\n\t\"./ar\": 31035,\n\t\"./ar-dz\": 47214,\n\t\"./ar-dz.js\": 47214,\n\t\"./ar-kw\": 40830,\n\t\"./ar-kw.js\": 40830,\n\t\"./ar-ly\": 68899,\n\t\"./ar-ly.js\": 68899,\n\t\"./ar-ma\": 77258,\n\t\"./ar-ma.js\": 77258,\n\t\"./ar-ps\": 19121,\n\t\"./ar-ps.js\": 19121,\n\t\"./ar-sa\": 64096,\n\t\"./ar-sa.js\": 64096,\n\t\"./ar-tn\": 97826,\n\t\"./ar-tn.js\": 97826,\n\t\"./ar.js\": 31035,\n\t\"./az\": 20051,\n\t\"./az.js\": 20051,\n\t\"./be\": 23813,\n\t\"./be.js\": 23813,\n\t\"./bg\": 64323,\n\t\"./bg.js\": 64323,\n\t\"./bm\": 57837,\n\t\"./bm.js\": 57837,\n\t\"./bn\": 75780,\n\t\"./bn-bd\": 25959,\n\t\"./bn-bd.js\": 25959,\n\t\"./bn.js\": 75780,\n\t\"./bo\": 81451,\n\t\"./bo.js\": 81451,\n\t\"./br\": 76480,\n\t\"./br.js\": 76480,\n\t\"./bs\": 91607,\n\t\"./bs.js\": 91607,\n\t\"./ca\": 23232,\n\t\"./ca.js\": 23232,\n\t\"./cs\": 91034,\n\t\"./cs.js\": 91034,\n\t\"./cv\": 54213,\n\t\"./cv.js\": 54213,\n\t\"./cy\": 95800,\n\t\"./cy.js\": 95800,\n\t\"./da\": 40739,\n\t\"./da.js\": 40739,\n\t\"./de\": 66951,\n\t\"./de-at\": 82181,\n\t\"./de-at.js\": 82181,\n\t\"./de-ch\": 61339,\n\t\"./de-ch.js\": 61339,\n\t\"./de.js\": 66951,\n\t\"./dv\": 16938,\n\t\"./dv.js\": 16938,\n\t\"./el\": 59573,\n\t\"./el.js\": 59573,\n\t\"./en-au\": 62458,\n\t\"./en-au.js\": 62458,\n\t\"./en-ca\": 51816,\n\t\"./en-ca.js\": 51816,\n\t\"./en-gb\": 8069,\n\t\"./en-gb.js\": 8069,\n\t\"./en-ie\": 15586,\n\t\"./en-ie.js\": 15586,\n\t\"./en-il\": 60009,\n\t\"./en-il.js\": 60009,\n\t\"./en-in\": 51207,\n\t\"./en-in.js\": 51207,\n\t\"./en-nz\": 83724,\n\t\"./en-nz.js\": 83724,\n\t\"./en-sg\": 1953,\n\t\"./en-sg.js\": 1953,\n\t\"./eo\": 1292,\n\t\"./eo.js\": 1292,\n\t\"./es\": 66328,\n\t\"./es-do\": 61452,\n\t\"./es-do.js\": 61452,\n\t\"./es-mx\": 94444,\n\t\"./es-mx.js\": 94444,\n\t\"./es-us\": 81285,\n\t\"./es-us.js\": 81285,\n\t\"./es.js\": 66328,\n\t\"./et\": 7181,\n\t\"./et.js\": 7181,\n\t\"./eu\": 62830,\n\t\"./eu.js\": 62830,\n\t\"./fa\": 19565,\n\t\"./fa.js\": 19565,\n\t\"./fi\": 85541,\n\t\"./fi.js\": 85541,\n\t\"./fil\": 65661,\n\t\"./fil.js\": 65661,\n\t\"./fo\": 26087,\n\t\"./fo.js\": 26087,\n\t\"./fr\": 25396,\n\t\"./fr-ca\": 96581,\n\t\"./fr-ca.js\": 96581,\n\t\"./fr-ch\": 81294,\n\t\"./fr-ch.js\": 81294,\n\t\"./fr.js\": 25396,\n\t\"./fy\": 12533,\n\t\"./fy.js\": 12533,\n\t\"./ga\": 55796,\n\t\"./ga.js\": 55796,\n\t\"./gd\": 50847,\n\t\"./gd.js\": 50847,\n\t\"./gl\": 60439,\n\t\"./gl.js\": 60439,\n\t\"./gom-deva\": 46514,\n\t\"./gom-deva.js\": 46514,\n\t\"./gom-latn\": 66525,\n\t\"./gom-latn.js\": 66525,\n\t\"./gu\": 34232,\n\t\"./gu.js\": 34232,\n\t\"./he\": 50915,\n\t\"./he.js\": 50915,\n\t\"./hi\": 22095,\n\t\"./hi.js\": 22095,\n\t\"./hr\": 10762,\n\t\"./hr.js\": 10762,\n\t\"./hu\": 88275,\n\t\"./hu.js\": 88275,\n\t\"./hy-am\": 73094,\n\t\"./hy-am.js\": 73094,\n\t\"./id\": 27769,\n\t\"./id.js\": 27769,\n\t\"./is\": 99676,\n\t\"./is.js\": 99676,\n\t\"./it\": 74313,\n\t\"./it-ch\": 25141,\n\t\"./it-ch.js\": 25141,\n\t\"./it.js\": 74313,\n\t\"./ja\": 11985,\n\t\"./ja.js\": 11985,\n\t\"./jv\": 53908,\n\t\"./jv.js\": 53908,\n\t\"./ka\": 32808,\n\t\"./ka.js\": 32808,\n\t\"./kk\": 33930,\n\t\"./kk.js\": 33930,\n\t\"./km\": 71532,\n\t\"./km.js\": 71532,\n\t\"./kn\": 69461,\n\t\"./kn.js\": 69461,\n\t\"./ko\": 60502,\n\t\"./ko.js\": 60502,\n\t\"./ku\": 18660,\n\t\"./ku-kmr\": 58035,\n\t\"./ku-kmr.js\": 58035,\n\t\"./ku.js\": 18660,\n\t\"./ky\": 83088,\n\t\"./ky.js\": 83088,\n\t\"./lb\": 65742,\n\t\"./lb.js\": 65742,\n\t\"./lo\": 25417,\n\t\"./lo.js\": 25417,\n\t\"./lt\": 64968,\n\t\"./lt.js\": 64968,\n\t\"./lv\": 41202,\n\t\"./lv.js\": 41202,\n\t\"./me\": 34438,\n\t\"./me.js\": 34438,\n\t\"./mi\": 18498,\n\t\"./mi.js\": 18498,\n\t\"./mk\": 6744,\n\t\"./mk.js\": 6744,\n\t\"./ml\": 63949,\n\t\"./ml.js\": 63949,\n\t\"./mn\": 4459,\n\t\"./mn.js\": 4459,\n\t\"./mr\": 46679,\n\t\"./mr.js\": 46679,\n\t\"./ms\": 56960,\n\t\"./ms-my\": 47483,\n\t\"./ms-my.js\": 47483,\n\t\"./ms.js\": 56960,\n\t\"./mt\": 99989,\n\t\"./mt.js\": 99989,\n\t\"./my\": 64978,\n\t\"./my.js\": 64978,\n\t\"./nb\": 88460,\n\t\"./nb.js\": 88460,\n\t\"./ne\": 23993,\n\t\"./ne.js\": 23993,\n\t\"./nl\": 95378,\n\t\"./nl-be\": 62678,\n\t\"./nl-be.js\": 62678,\n\t\"./nl.js\": 95378,\n\t\"./nn\": 67560,\n\t\"./nn.js\": 67560,\n\t\"./oc-lnc\": 87060,\n\t\"./oc-lnc.js\": 87060,\n\t\"./pa-in\": 62187,\n\t\"./pa-in.js\": 62187,\n\t\"./pl\": 93532,\n\t\"./pl.js\": 93532,\n\t\"./pt\": 49396,\n\t\"./pt-br\": 92485,\n\t\"./pt-br.js\": 92485,\n\t\"./pt.js\": 49396,\n\t\"./ro\": 33179,\n\t\"./ro.js\": 33179,\n\t\"./ru\": 93797,\n\t\"./ru.js\": 93797,\n\t\"./sd\": 40675,\n\t\"./sd.js\": 40675,\n\t\"./se\": 59036,\n\t\"./se.js\": 59036,\n\t\"./si\": 59160,\n\t\"./si.js\": 59160,\n\t\"./sk\": 31266,\n\t\"./sk.js\": 31266,\n\t\"./sl\": 74699,\n\t\"./sl.js\": 74699,\n\t\"./sq\": 69728,\n\t\"./sq.js\": 69728,\n\t\"./sr\": 87129,\n\t\"./sr-cyrl\": 55000,\n\t\"./sr-cyrl.js\": 55000,\n\t\"./sr.js\": 87129,\n\t\"./ss\": 74346,\n\t\"./ss.js\": 74346,\n\t\"./sv\": 9877,\n\t\"./sv.js\": 9877,\n\t\"./sw\": 918,\n\t\"./sw.js\": 918,\n\t\"./ta\": 24787,\n\t\"./ta.js\": 24787,\n\t\"./te\": 6199,\n\t\"./te.js\": 6199,\n\t\"./tet\": 91851,\n\t\"./tet.js\": 91851,\n\t\"./tg\": 33881,\n\t\"./tg.js\": 33881,\n\t\"./th\": 87828,\n\t\"./th.js\": 87828,\n\t\"./tk\": 99677,\n\t\"./tk.js\": 99677,\n\t\"./tl-ph\": 29253,\n\t\"./tl-ph.js\": 29253,\n\t\"./tlh\": 95586,\n\t\"./tlh.js\": 95586,\n\t\"./tr\": 17254,\n\t\"./tr.js\": 17254,\n\t\"./tzl\": 61192,\n\t\"./tzl.js\": 61192,\n\t\"./tzm\": 69631,\n\t\"./tzm-latn\": 72841,\n\t\"./tzm-latn.js\": 72841,\n\t\"./tzm.js\": 69631,\n\t\"./ug-cn\": 71720,\n\t\"./ug-cn.js\": 71720,\n\t\"./uk\": 28048,\n\t\"./uk.js\": 28048,\n\t\"./ur\": 86751,\n\t\"./ur.js\": 86751,\n\t\"./uz\": 96343,\n\t\"./uz-latn\": 60513,\n\t\"./uz-latn.js\": 60513,\n\t\"./uz.js\": 96343,\n\t\"./vi\": 44821,\n\t\"./vi.js\": 44821,\n\t\"./x-pseudo\": 23973,\n\t\"./x-pseudo.js\": 23973,\n\t\"./yo\": 15000,\n\t\"./yo.js\": 15000,\n\t\"./zh-cn\": 43762,\n\t\"./zh-cn.js\": 43762,\n\t\"./zh-hk\": 9246,\n\t\"./zh-hk.js\": 9246,\n\t\"./zh-mo\": 41107,\n\t\"./zh-mo.js\": 41107,\n\t\"./zh-tw\": 79014,\n\t\"./zh-tw.js\": 79014\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 35358;","var EventEmitter = require(\"events\").EventEmitter;\n\nclass Account extends EventEmitter {\n   constructor() {\n      super();\n\n      this.isAuthenticated = false;\n      this._config = null;\n\n      this._listRoles = null;\n      // {array}\n      // a list of all the Defined Roles in the Tenant's system.\n\n      this._listScopes = null;\n      // {array | null}\n      // a list of all the Defined Scopes in the Tenant's sytem.\n\n      this._listUsers = null;\n      // {array | null}\n      // a list of all the Defined Users in the Tenant's system.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var UserConfig = this.AB.Config.userConfig();\n      if (UserConfig) {\n         this.isAuthenticated = true;\n         this._config = UserConfig;\n      }\n\n      var MetaConfig = this.AB.Config.metaConfig();\n      if (MetaConfig) {\n         this._listRoles = MetaConfig.roles || [];\n         this._listScopes = MetaConfig.scopes || [];\n         this._listUsers = MetaConfig.users || [];\n      }\n\n      this.AB.Network.on(\"account.logout\", (context, err, data) => {\n         if (err) {\n            console.error(err);\n            return;\n         }\n         this.emit(\"logout\", data);\n      });\n\n      return Promise.resolve();\n   }\n\n   canSwitcheroo() {\n      return (\n         this.roles((r) => r.uuid === \"320ef94a-73b5-476e-9db4-c08130c64bb8\")\n            .length > 0\n      );\n   }\n\n   isSwitcherood() {\n      return this.AB.Config.userReal();\n   }\n\n   isSystemDesigner() {\n      return (\n         this.roles((r) => r.uuid === \"6cc04894-a61b-4fb5-b3e5-b8c3f78bd331\")\n            .length > 0\n      );\n   }\n\n   email() {\n      return this._config?.email ?? \"\";\n   }\n\n   language() {\n      return this._config?.languageCode ?? \"en\";\n   }\n\n   logout() {\n      return this.AB.Network.post(\n         {\n            url: \"/auth/logout\",\n            data: { tenantUrl: this.AB.Tenant.setting(\"url\") },\n         },\n         {\n            key: \"account.logout\",\n            context: {},\n         }\n      );\n   }\n\n   roles(fn = () => true) {\n      return (this._config?.roles || []).filter(fn);\n   }\n   rolesAll() {\n      return this._listRoles;\n   }\n\n   scopes() {\n      return this._listScopes;\n   }\n\n   username() {\n      return this._config?.username;\n   }\n\n   userList() {\n      return this._listUsers;\n   }\n\n   uuid() {\n      return this._config?.uuid;\n   }\n\n   imageID() {\n      return this._config?.image_id;\n   }\n\n   sendEmailNotifications() {\n      return this._config?.sendEmailNotifications;\n   }\n}\n\nexport default new Account();\n","//\n// Dialog\n// A common set of UI dialogs to show the User.\n//\n// NOTE: IN TRANSITION: this is our previous method of handling\n// dialogs.  In future, refactor to use webix directly in code.\n//\n\nexport default {\n   // Instance properties\n\n   // Alert\n   // A dialogue that popup with a message, and requires an [ok] button press\n   Alert: function (opts) {\n      webix.alert({\n         title:\n            opts.title ||\n            AB.Multilingual.label(\"opp.dialog.alert.title\", \"*Alert\"),\n         text:\n            opts.text ||\n            opts.message ||\n            AB.Multilingual.label(\n               \"opp.dialog.alert.text\",\n               \"*Something is wrong.\"\n            ),\n         ok: opts.ok || AB.Multilingual.label(\"opp.dialog.alert.ok\", \"*OK\"),\n      });\n   },\n\n   // Confirm\n   // A [Yes] [No] dialogue that pops up with a message\n   Confirm: function (opts) {\n      var title =\n         opts.title ||\n         AB.Multilingual.label(\"opp.dialog.confirm.confirmTitle\", \"* Confirm\");\n      var message =\n         opts.text ||\n         opts.message ||\n         AB.Multilingual.label(\n            \"opp.dialog.confirm.confirmMsg\",\n            \"* Are you sure you want to do this?\"\n         );\n\n      var labelYes =\n         opts.labelYes ||\n         opts.ok ||\n         AB.Multilingual.label(\"opp.common.yes\", \"* yes\");\n      var labelNo =\n         opts.labelNo ||\n         opts.cancel ||\n         AB.Multilingual.label(\"opp.common.no\", \"* no\");\n\n      // var fnYes = opts.fnYes || function () { };\n      // var fnNo = opts.fnNo || function () { };\n\n      webix.confirm({\n         title: title,\n         text: message,\n\n         ok: labelYes,\n         cancel: labelNo,\n\n         callback: function (result) {\n            if (result) {\n               if (opts.fnYes) opts.fnYes();\n            } else {\n               if (opts.fnNo) opts.fnNo();\n            }\n\n            if (opts.callback) opts.callback(result);\n         },\n      });\n\n      // bootbox.dialog({\n      //     title: title,\n      //     message: message,\n      //     buttons: {\n      //         yes: {\n      //             label: labelYes,\n      //             className: 'btn-primary',\n      //             callback: fnYes\n      //         },\n      //         no: {\n      //             label: labelNo,\n      //             className: 'btn-default',\n      //             callback: fnNo\n      //         }\n      //     }\n      // });\n   },\n\n   // ConfirmDelete\n   // A Confirm dialogue geared towards deleting items.\n   // [delete] [cancel]\n   ConfirmDelete: function (opts) {\n      this.Confirm({\n         title:\n            opts.title ||\n            AB.Multilingual.label(\n               \"opp.dialog.confirm.deleteTitle\",\n               \"* Confirm Delete\"\n            ),\n         ok: opts.ok || AB.Multilingual.label(\"opp.common.delete\", \"* Delete\"),\n         cancel:\n            opts.cancel ||\n            AB.Multilingual.label(\"opp.common.cancel\", \"* Cancel\"),\n         text:\n            opts.text ||\n            opts.message ||\n            AB.Multilingual.label(\n               \"opp.dialog.confirm.deleteMsg\",\n               \"* Are you sure you want to delete this?\",\n               [\"this\"]\n            ),\n         callback: function (result) {\n            if (result) {\n               if (opts.fnYes) opts.fnYes();\n            } else {\n               if (opts.fnNo) opts.fnNo();\n            }\n\n            if (opts.callback) opts.callback(result);\n         },\n      });\n   },\n\n   // Message\n   // A simple message displayed to the user.  Can time out\n   Message: function (opts) {\n      var message = opts.text || opts.message;\n      var timeout = opts.timeout || 2000;\n\n      webix.message({\n         text: message,\n         expire: timeout,\n      });\n   },\n};\n","/*\n * Multilingual\n * manage our multilingual Translations/Labels/etc.\n */\n\nvar MLClass = require(\"../AppBuilder/platform/ABMLClass\");\n\nclass Multilingual extends MLClass {\n   constructor() {\n      super([], {});\n      // super()\n      //    [] = no labels\n      //    {} = placeholder ABFactory entry until .init() is called.\n\n      this.isAuthenticated = false;\n      this._config = null;\n\n      this._missingLabelID = false;\n      this._missingLabels = {};\n      this._pluginLabelsMissing = {};\n\n      this.isLabelUpdateEnabled = false;\n      // {bool}\n      // we can only update labels on the server if this is enabled.\n      // Only on a Developers environment should we enable this:\n      // javascript console: > window.AB.Multilingual.enableLabelUpdates();\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n\n      this.labels = this.AB.Config.labelConfig();\n      this._languages = this.AB.Config.languageConfig();\n\n      this.pluginLabels = {};\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   currentLanguage() {\n      return this.AB.Account.language();\n   }\n\n   enableLabelUpdates() {\n      this.isLabelUpdateEnabled = true;\n   }\n\n   label(key, altText, values = [], postMissing = true) {\n      // part of our transition: L(\"single string\") should start to work:\n      if (typeof altText == \"undefined\" && key) {\n         altText = key;\n      }\n\n      // other case: L(\"single string {0}\", [])\n      if (arguments.length == 2 && Array.isArray(altText)) {\n         values = altText;\n         altText = key;\n      }\n\n      // We need to escape \" characters or else they will get added to the the lang.js\n      // then we get errors next time we try to parse it as JSON (see appbuilder.label-missing)\n      altText = altText.replace(/\"/g, '\\\\\"');\n      key = key.replace(/\"/g, '\\\\\"');\n\n      // NOTE: transition to new Labels\n      // currently our code still uses the L(key, altText, values) format, but\n      // the labels we get back are in L(altText, values) format.\n      //\n      // we are going to keep this like this until we have a well functioning\n      // UI display of our Apps, which should flesh out most of the missing\n      // labels to our files.\n      //\n      // After that, convert our L(k, t, v) to L(t, v)\n\n      var newKey = altText;\n      if (newKey[0] == \"*\") {\n         newKey = newKey.slice(1);\n      }\n      var label = this.labels[newKey];\n      if (!label) {\n         if (postMissing) {\n            this.postMissingLabel(key, altText);\n         }\n         label = altText;\n      }\n\n      values.forEach((v, i) => {\n         var sub = `{${i}}`;\n         label = label.replaceAll(sub, v);\n      });\n      label = label.replace(/\\\\\"/g, '\"'); // unescape \" in the label\n      return label;\n   }\n\n   labelPlugin(plugin, altText, values = []) {\n      // 1st check to see if it is a common label from platform:\n      var label = this.label(altText, altText, values, false);\n      if (!label) {\n         // ok, so check to see if it is a Plugin Label:\n         label = this.pluginLabels[plugin][altText];\n      }\n      if (!label) {\n         // !! record it missing.\n         this._pluginLabelsMissing[plugin] =\n            this._pluginLabelsMissing[plugin] || {};\n         this._pluginLabelsMissing[plugin][altText] = altText;\n         label = altText;\n      }\n      values.forEach((v, i) => {\n         var sub = `{${i}}`;\n         label = label.replaceAll(sub, v);\n      });\n      return label;\n   }\n\n   languages() {\n      return this._languages;\n\n      // console.error(\n      //    \"Multilingual:languages(): Implement Language Storage/Retrieval.\"\n      // );\n      // return [];\n   }\n\n   pluginLoadLabels(key, labels) {\n      this.pluginLabels[key] = labels;\n   }\n   pluginLabelReport(key) {\n      console.warn(\"missing labels for plugin: \", key);\n      console.warn(\"current language:\", this.currentLanguage());\n      var labels = JSON.stringify(this._pluginLabelsMissing[key], null, 3);\n      console.warn(labels);\n   }\n\n   postMissingLabel(key, altText) {\n      if (!this.isLabelUpdateEnabled) return;\n\n      if (this._missingLabelID) {\n         clearTimeout(this._missingLabelID);\n      }\n      var batchLength = 50;\n      var sendBatch = () => {\n         var batchLabels = [];\n         let missingLabels = Object.keys(this._missingLabels).map(\n            (k) => this._missingLabels[k]\n         );\n         if (missingLabels.length <= batchLength) {\n            batchLabels = missingLabels;\n            this._missingLabels = {};\n         } else {\n            for (var i = 0; i <= batchLength; i++) {\n               var l = missingLabels.shift();\n               batchLabels.push(l);\n               delete this._missingLabels[l.key];\n            }\n         }\n         this.AB.Network.post({\n            url: \"/multilingual/label-missing\",\n            data: { labels: JSON.stringify(batchLabels) },\n         })\n            .then(() => {\n               if (Object.keys(this._missingLabels).length > 0) {\n                  sendBatch();\n               }\n            })\n            .catch((err) => {\n               const strErr = err.toString();\n               if (strErr.indexOf(\"unable to get\") > -1) {\n                  console.error(\n                     \"Missing language file for :\" + this.currentLanguage()\n                  );\n               }\n            });\n      };\n      this._missingLabelID = setTimeout(() => {\n         sendBatch();\n      }, 1000);\n\n      this._missingLabels[key] = { key, altText };\n   }\n   ///\n   /// Disable un-needed ABMLClass functionality\n   ///\n   /// NOTE: we are mainly Piggybacking on ABMLClass for it's\n   /// .translate() and .unTranslate() capabilities. So disable these\n   /// for good measure.\n   destroy() {\n      console.error(\"Multilingual:destroy(): Should not be called.\");\n      return Promise.resolve();\n   }\n   save() {\n      console.error(\"Multilingual:save(): Should not be called.\");\n      return Promise.resolve();\n   }\n   toObj() {\n      console.error(\"Multilingual:toObj(): Should not be called.\");\n      return {};\n   }\n   toDefinition() {\n      console.error(\"Multilingual:toDefinition(): Should not be called.\");\n      return {};\n   }\n}\n\nexport default new Multilingual();\n","/*\n * NetworkRest.js\n * The base Networking class.  This class is responsible for job submissions\n * and outlines the basic Network interface.\n */\n\n/* global Connection */\n// import Account from \"./Account\";\n// import analytics from \"./Analytics\";\n// import EventEmitter from \"eventemitter2\";\nvar EventEmitter = require(\"events\").EventEmitter;\n// import Lock from \"./Lock\";\n\n// import { storage } from \"./Storage\";\n// import Tenant from \"./Tenant\";\n// import { v4 as uuidv4 } from \"uuid\";\n\n// Temp placeholders until Resources are implemented:\n\n// End Temp\n\nconst Atomic = require(\"atomicjs/dist/atomic.min.js\");\n// Atomic : a small $.ajax() replacement\n\nvar Config = null;\n// {} Config\n// the site specific configuration information\n\nclass NetworkRest extends EventEmitter {\n   constructor(parent) {\n      // {Network} parent\n\n      super({\n         wildcard: true,\n         newListener: false,\n         maxListeners: 0,\n      });\n\n      this.baseURL = null;\n      // {string} .baseURL\n      // the url of our site.\n\n      this.numRetries = 3;\n      // {int} .numRetries\n      // the number or times we should attempt to issue a network request.\n\n      this._network = parent;\n      // {Network} ._network\n      // the Parent Network Resource that the rest of the Platform actually\n      // works with.\n\n      this.isRealTime = false;\n      // {bool}\n      // does this Network type support RealTime updates. (socket = true);\n   }\n\n   /**\n    * @method init\n    * @param {ABFactory} AB\n    * @param {object} options\n    * @param {string} options.baseURL\n    * @return {Promise}\n    */\n   init(AB, options) {\n      this.AB = AB;\n\n      Config = this.AB.Config.siteConfig();\n      options = options || {};\n      if (options) {\n         this.baseURL = options.baseURL || Config.appbuilder.urlCoreServer;\n         this.numRetries =\n            options.networkNumRetries || Config.appbuilder.networkNumRetries;\n      }\n      return Promise.resolve();\n   }\n\n   //\n   // Interface API\n   //\n   /**\n    * Network.get(options, jobResponse)\n    * perform a GET request back to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   get(params, jobResponse) {\n      params.type = params.type || \"GET\";\n\n      // data sent to params on a \"GET\" request need to be converted to\n      // uri querystring values:\n      var data = params.data || params.params;\n      if (data) {\n         var useThese = [\"string\", \"number\", \"boolean\"];\n         var search = Object.keys(data)\n            .map(function (key) {\n               var val = data[key];\n               if (useThese.indexOf(typeof val) == -1) {\n                  val = JSON.stringify(val);\n               }\n               return key + \"=\" + encodeURIComponent(val);\n            })\n            .join(\"&\");\n\n         var join = \"?\";\n         if (params.url.indexOf(\"?\") > -1) {\n            join = \"&\";\n         }\n         params.url = [params.url, search].join(join);\n      }\n\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.post()\n    * perform an AJAX POST request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   post(params, jobResponse) {\n      params.type = params.type || \"POST\";\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.put()\n    * perform a PUT request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   put(params, jobResponse) {\n      params.type = params.type || \"PUT\";\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.delete()\n    * perform an AJAX DELETE request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   delete(params, jobResponse) {\n      params.type = params.type || \"DELETE\";\n      return this._request(params, jobResponse);\n   }\n\n   ////\n   //// Network Utilities\n   ////\n\n   isNetworkConnected() {\n      return this._network.isNetworkConnected();\n   }\n\n   salSend(params) {\n      return Atomic(params.url, params).then((packet) => {\n         // {json} packet\n         // the response from Atomic is in format:\n         // {data: {…}, xhr: XMLHttpRequest}\n         // we just want to send back our { status:\"\", data:xxx } packet.\n         return packet.data;\n      });\n   }\n\n   /**\n    * _request()\n    * perform the actual AJAX request for this operation.\n    * @param {obj} params  the jQuery.ajax() formatted params\n    * @param {obj} jobRequest  the information about the request's response.\n    * @return {Promise}\n    */\n   _request(params, jobResponse) {\n      // make sure we don't process too many retries:\n      params._retry = params._retry || 0;\n      if (params._retry >= this.numRetries) {\n         var err = new Error(\n            `Too many retries (${this.numRetries}) for ${params.url}`\n         );\n         err.code = \"E_TOMANYRETRIES\";\n         this.AB.notify.developer(err, {\n            context: \"NetworkRest:_request: Too Many Retries\",\n         });\n         // this.AB.Analytics.logError(err);\n         if (jobResponse) {\n            this._network.publishResponse(jobResponse, err);\n         }\n\n         return Promise.reject(err);\n      }\n\n      return new Promise((resolve, reject) => {\n         params.url = params.url || \"/\";\n         if (params.url[0] == \"/\") {\n            params.url = this.baseURL + params.url;\n         }\n\n         params.headers = params.headers || {};\n         if (this.AB.Account.authToken) {\n            params.headers.Authorization = this.AB.Account.authToken;\n         }\n         params.headers[\"Content-type\"] = \"application/json\";\n\n         var tenantID = this.AB.Tenant.id();\n         if (tenantID) {\n            params.headers[\"tenant-token\"] = tenantID;\n         }\n\n         // params.timeout = params.timeout || 6000;\n\n         if (this.isNetworkConnected()) {\n            params.method = params.method || params.type;\n            params.timeout = 6000; // ??\n            params.data = params.data || params.params;\n            delete params.params;\n\n            this.salSend(params)\n               .then((packet) => {\n                  // TODO: check if packet.status == \"error\"\n                  // and then .publishResponse() as an error\n\n                  //\n                  var data = packet;\n                  if (jobResponse) {\n                     this._network.publishResponse(jobResponse, null, data);\n                  }\n                  resolve(data);\n               })\n               .catch((err) => {\n                  // err.status\n                  // err.statusText\n                  // err.responseText\n                  // err.message  {socket}\n                  // err.stack    {socket}\n\n                  // if this is a network connection error, send the attempt again:\n                  if (\n                     err.statusText == \"Request timeout\" ||\n                     (err.message && err.message.indexOf(\"disconnected\") > -1)\n                  ) {\n                     //// Network Error: conneciton refused, access denied, etc...\n                     this.AB.Analytics.log(\n                        \"NetworkRest._request():network connection error detected. Trying again\"\n                     );\n\n                     params._retry++;\n\n                     // retry the attempt:\n                     this._request(params)\n                        .then((data) => {\n                           // console.log('--- timeout.then():',data);\n                           this.AB.warn(\n                              \"*** NetworkRest._request().then(): attempt resolved.\"\n                           );\n                           resolve(data);\n                        })\n                        .catch((_err) => {\n                           this.AB.notify.developer(_err, {\n                              message:\n                                 \"*** NetworkRest._request().catch(): retry failed:\",\n                           });\n                           reject(_err);\n                        });\n\n                     return;\n                  } else {\n                     // Else attempt to emit() some common Error types for\n                     // additional Platform Handling.\n                     if (err.status == 403) {\n                        this.emit(\"error.badAuth\", err);\n                     } else if (err.status >= 400 && err.status < 500) {\n                        this.emit(\"error.badRequest\", err);\n                     } else if (err.status >= 500) {\n                        this.emit(\"error.badServer\", err);\n                     }\n                  }\n\n                  var packet = null;\n                  if (err.responseText) {\n                     try {\n                        packet = JSON.parse(err.responseText);\n                     } catch (e) {\n                        /* ignore */\n                     }\n                  }\n                  // if this is an req.ab.error() response:\n                  if (packet && packet.status == \"error\") {\n                     // check if REAUTH Error:\n                     if (packet.id == 5 || packet.code == \"E_REAUTH\") {\n                        this._network.emit(\"reauth\");\n                        return;\n                     }\n\n                     this.AB.notify.developer(new Error(packet.message), {\n                        context:\n                           \"NetworkRest:_request:Error returned from Server (req.ab.error())\",\n                        data: packet.data,\n                        status: packet.status,\n                     });\n                     // this.AB.Analytics.logError(packet.data);\n                     // this.AB.error(packet.data);\n                     if (jobResponse) {\n                        this._network.publishResponse(\n                           jobResponse,\n                           packet,\n                           null\n                        );\n                     }\n                     return reject(packet.data);\n                  } else {\n                     // unknown/unexpected error:\n                     var error = new Error(\n                        `${err.status} ${err.statusText || err.message}: ${\n                           params.method\n                        } ${params.url}`\n                     );\n                     error.response = err.responseText;\n                     error.text = err.statusText;\n                     error.err = err;\n                     error.url = `${params.method} ${params.url}`;\n                     this.AB.notify.developer(error, {\n                        context:\n                           \"NetworkRest:_request:Unknown Error returned from server\",\n                        err,\n                        response: err.responseText,\n                        text: err.statusText || err.message,\n                        url: error.url,\n                     });\n                     // this.AB.Analytics.logError(error);\n                     // this.AB.error(error);\n                     if (jobResponse) {\n                        this._network.publishResponse(jobResponse, error);\n                     }\n                     return reject(error);\n                  }\n               });\n         } else {\n            // now Queue this request params.\n            this.AB.Analytics.log(\n               \"NetworkRest:_request(): Network is offline. Queuing request.\"\n            );\n            this._network\n               .queue(params, jobResponse)\n               .then(() => {\n                  resolve({ status: \"queued\" });\n               })\n               .catch(reject);\n         }\n      });\n   }\n\n   /**\n    * resend()\n    * processes messages that were queued due to network connectivity\n    * issues.\n    * @param {obj} params  the jQuery.ajax() formatted params\n    * @param {obj} jobRequest  the information about the request's response.\n    * @return {Promise}\n    */\n   resend(params, jobResponse) {\n      // var op = params.type.toLowerCase();\n      return this._request(params, jobResponse);\n   }\n}\n\nexport default NetworkRest;\n","/*\n * NetworkRest.js\n * The base Networking class.  This class is responsible for job submissions\n * and outlines the basic Network interface.\n */\n\nimport performance from \"../utils/performance\";\nimport NetworkRest from \"./NetworkRest\";\n\nconst listSocketEvents = [\n   // NOTE: ABFactory.definitionXXX() will manage emitting these\n   // events internally:\n   // \"ab.abdefinition.create\",\n   // \"ab.abdefinition.update\",\n   // \"ab.abdefinition.delete\",\n   \"ab.datacollection.create\",\n   \"ab.datacollection.update\",\n   \"ab.datacollection.stale\",\n   \"ab.datacollection.delete\",\n   \"ab.inbox.create\",\n   \"ab.inbox.update\",\n   // \"ab.object.update\",\n];\n// {array}\n// The io.socket.* events we are listening for that relate to our datacollection\n// maintainence.\n\nfunction socketDataSave(key, length) {\n   if (!HashSocketJobs[key]) {\n      HashSocketJobs[key] = {\n         packets: 0,\n         length: 0,\n      };\n   }\n\n   HashSocketJobs[key].packets++;\n   HashSocketJobs[key].length += length;\n}\nfunction socketDataLog(AB, key, data) {\n   let length = \"??\";\n   try {\n      length = JSON.stringify(data).length;\n      data.__length = length;\n   } catch (e) {\n      console.log(e);\n      //\n   }\n\n   if (data.objectId) {\n      let obj = AB.objectByID(data.objectId);\n      if (!obj) {\n         console.warn(`socket: ${key} unkown object (${length})`, data);\n      } else {\n         console.warn(\n            `socket: ${key} ${obj.label ?? obj.name}(${length})`,\n            data\n         );\n      }\n   } else {\n      console.warn(`socket: ${key} (${length})`, data);\n   }\n\n   if (data.jobID) {\n      socketDataSave(data.jobID, length);\n      socketDataSave(`${data.jobID}-${key}`, length);\n   }\n}\n\nlet HashSocketJobs = {\n   /* jobID : { #packets, length } */\n};\n\nlet keyBlacklist = {\n   /* key : true */\n};\n// a list of incoming message keys, that indicate wether or not we have\n// processed this message.  If a message has been processed, we skip it.\n\n/**\n * @function blacklistKey()\n * create a unique key for this network event.\n * @param {event} ev\n *        the incoming network event key (ab.datacollection.create)\n * @param {obj} data\n *        the related network packet of the incoming event.\n * @return {string}\n */\nfunction blacklistKey(AB, ev, data) {\n   let parts = [ev];\n\n   if (data.jobID) {\n      parts.push(data.jobID);\n   }\n\n   if (data.data) {\n      let PK = \"uuid\";\n      let obj = AB.objectByID(data.objectId);\n      if (obj) {\n         PK = obj.PK();\n      }\n      parts.push(data.data[PK] || data.data.id);\n   }\n\n   if (data.__length) {\n      parts.push(data.__length);\n   } else {\n      let length = \"??\";\n      try {\n         length = JSON.stringify(data).length;\n      } catch (e) {\n         // ignore\n      }\n      parts.push(length);\n   }\n\n   return parts.join(\"-\");\n}\n\n/**\n * @function isBlacklisted()\n * return True/False if a given key is already blacklisted.\n * @param {string} key\n *        the () we are checking\n * @return {bool}\n */\nfunction isBlacklisted(key) {\n   return keyBlacklist[key] ?? false;\n}\n\n/**\n * @function blacklist()\n * mark a given key as blacklisted. This prevents additional calls with\n * the same key from being processed.\n * A Key is only blacklisted for a given amount of time (1s by default).\n * @param {string} key\n *        the blacklistKey() we are checking\n * @param {int} time\n *        The duration in ms of how long to keep the key blacklisted.\n */\nfunction blacklist(key, time = 1000) {\n   keyBlacklist[key] = true;\n   setTimeout(() => {\n      delete keyBlacklist[key];\n   }, time);\n}\n\nclass NetworkRestSocket extends NetworkRest {\n   constructor(parent) {\n      // {Network} parent\n\n      super(parent);\n\n      this.isRealTime = true;\n      // {bool}\n      // does this Network type support RealTime updates. (socket = true);\n\n      // Pass the io.socket.on(*) events to our AB factory.\n      listSocketEvents.forEach((ev) => {\n         io.socket.on(ev, (data) => {\n            socketDataLog(this.AB, ev, data);\n\n            // ensure we only process a network update 1x\n            let blKey = blacklistKey(this.AB, ev, data);\n            if (isBlacklisted(blKey)) return;\n            blacklist(blKey, 5000); // now prevent additional ones\n\n            // check if the ev contains 'datacollection'\n            // and do a single normalizeData() on the incoming data here\n            // before sending it off to be processed.\n            if (ev.indexOf(\"ab.datacollection\") > -1) {\n               let values = data.data;\n               if (values) {\n                  let obj = this.AB.objectByID(data.objectId);\n                  if (obj) {\n                     let model = obj.model();\n                     if (ev != \"ab.datacollection.delete\") {\n                        let jobID = this.AB.jobID();\n                        performance.mark(`${ev}:normalization`, {\n                           op: \"function\",\n                           data: { jobID },\n                        });\n                        model.normalizeData(data.data);\n                        performance.measure(`${ev}:normalization`);\n                     }\n                  }\n               }\n            }\n            this.AB.emit(ev, data);\n         });\n      });\n   }\n\n   //\n   // Interface API\n   //\n\n   socketLog() {\n      console.warn(JSON.stringify(HashSocketJobs, null, 4));\n   }\n\n   socketLogClear() {\n      HashSocketJobs = {};\n   }\n\n   ////\n   //// Network Utilities\n   ////\n\n   isNetworkConnected() {\n      return io.socket.isConnected();\n   }\n\n   salSend(params) {\n      let route, query;\n      try {\n         // Extract paramitized route (ex: `/app_builder/model/:ID`) for performance tracking\n         [, route, query] = params.url.match(\n            /https?:\\/\\/[^/]+(\\/[^?]+)\\??(.*)/\n         );\n         route = route.replace(/\\b[a-fA-F\\d-]{36}\\b/g, \":ID\");\n         performance.mark(route, {\n            op: \"websocket.client\",\n            data: {\n               http: {\n                  query: query || undefined,\n                  method: params.method,\n               },\n               url: params.url,\n            },\n         });\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: `salSend() create performance.mark`,\n         });\n      }\n\n      return new Promise((resolve, reject) => {\n         params.method = params.method.toLowerCase();\n\n         io.socket.request(params, (data, jwres) => {\n            // {json} data\n            // the data response from the request\n            // {json} jwres\n            // A JSON WebSocket Response object.\n            //    {json} jwres.headers :  header values\n            //    {int}  jwres.statusCode : http response code\n            //    {json} jwres.body === resData\n\n            // if this is an  error\n            if (jwres.statusCode >= 400) {\n               // Our NetworkRest.error( err ) should be in this format:\n               // err.status\n               // err.statusText\n               // err.responseText\n\n               var errStr = jwres.error ? jwres.error.toString() : jwres.body;\n\n               var err = new Error(`Socket Error: ${errStr}`);\n               err.status = jwres.statusCode;\n               err.statusText = errStr;\n               err.responseText = jwres.body;\n\n               // on RequestTimeout:\n               // err.statusText == \"Request timeout\"\n\n               reject(err);\n            } else {\n               // some errors like socket disconnected return an Error for data\n               if (data instanceof Error) {\n                  reject(data);\n                  return;\n               }\n\n               if (typeof data == \"string\") {\n                  performance.mark(\"JSON.parse\", { op: \"serialize\" });\n                  data = JSON.parse(data);\n                  performance.measure(\"JSON.parse\");\n               }\n\n               // Got a JSON response but was the service response an error?\n               // this would be a strange case where the .statusCode < 400\n               if (data?.status == \"error\") {\n                  // make sure to reject an err.responseText = data\n                  reject({\n                     status: jwres.statusCode,\n                     responseText: JSON.Stringify(data),\n                  });\n               }\n               // Success!\n               else {\n                  performance.measure(route);\n                  resolve(data);\n               }\n            }\n         });\n      });\n   }\n}\n\nexport default NetworkRestSocket;\n","/*\n * Network.js\n * A network manager for interfacing with our AppBuilder server.\n */\n/* global Connection */\nvar EventEmitter = require(\"events\").EventEmitter;\nimport performance from \"../utils/performance\";\nimport NetworkRest from \"./NetworkRest\";\nimport NetworkRestSocket from \"./NetworkRestSocket\";\n// import NetworkRelay from \"./NetworkRelay\";\n\nclass Network extends EventEmitter {\n   constructor() {\n      super();\n\n      this.setMaxListeners(0);\n      // we'll have > 10 for sure!\n\n      this.queueLock = null;\n      // {Lock} .queueLock\n      // our semaphore for coordinating our access to our local storage.\n\n      this._config = null;\n      this._network = null;\n      // {NetworkRelay | NetworkRest | NetworkSocket}\n      // the underlying Network connection object actually performing the\n      // communications with the Server.\n      // Which one is specified in the config.appbuilder.networkType setting\n\n      this._queueCount = 0;\n      // {int} _queueCount\n      // the # of network operations currently queued, pending Network\n      // reconnect.\n\n      this.cachJobResponse = {};\n      // { jobID : { jobResponse } }\n      // hash of the queued jobResponses for network requests that are in\n      // our queue.\n      // We need to keep our own cache that isn't serialized so that once\n      // we complete the request, we can resume the resolve() promise chains\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n\n      this.queueLock = new this.AB.Lock();\n\n      this._config = this.AB.Config.siteConfig();\n      if (this._config) {\n         switch (this._config.appbuilder.networkType) {\n            case \"relay\":\n               // this._network = new NetworkRelay();\n               break;\n\n            case \"socket\":\n               this._network = new NetworkRestSocket(this);\n               break;\n\n            case \"rest\":\n            default:\n               this._network = new NetworkRest(this);\n               break;\n         }\n\n         return this._network.init(AB);\n      } else {\n         console.error(\"??? Why No site config ???\");\n      }\n\n      //\n      // Handle reconnections and flushing the Queue:\n      //\n      if (io && io.socket) {\n         // When our Socket reconnects, be sure to flush any pending transactions.\n         io.socket.on(\"connected\", () => {\n            this.queueFlush();\n            if (this.idConnectionCheck) {\n               clearTimeout(this.idConnectionCheck);\n               this.idConnectionCheck = null;\n            }\n         });\n      } else {\n         console.error(\"!!! Network.init() : Did not find io.socket\");\n         window.addEventListener(\"online\", () => this.queueFlush());\n      }\n\n      return Promise.resolve();\n   }\n\n   //\n   // Interface API\n   //\n   /**\n    * Network.isRealTime\n    * indicates wether or not the current network connection supports\n    * RealTime updates.\n    * @return {bool}\n    */\n   get isRealTime() {\n      return this._network.isRealTime;\n   }\n\n   /**\n    * Network.get(options, jobResponse)\n    * perform a GET request back to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   get(...params) {\n      return this._network.get(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.post()\n    * perform an AJAX POST request to the AppBuilder server.\n    * this is a CREATE operation.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   post(...params) {\n      return this._network.post(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.put()\n    * perform a PUT request to the AppBuilder server.\n    * This is for UPDATE/REPLACE operations to data on the server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   put(...params) {\n      return this._network.put(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.delete()\n    * perform an AJAX DELETE request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   delete(...params) {\n      return this._network.delete(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   ////\n   //// Network Utilities\n   ////\n\n   _connectionCheck() {\n      // if (!this.idConnectionCheck) {\n      if (this.isNetworkConnected()) {\n         this.queueFlush().catch(() => {\n            // on an error, we are still having connection issues\n            this.idConnectionCheck = setTimeout(() => {\n               this._connectionCheck();\n            }, 250);\n         });\n         this.idConnectionCheck = null;\n      } else {\n         this.idConnectionCheck = setTimeout(() => {\n            this._connectionCheck();\n         }, 250);\n      }\n      // }\n   }\n\n   /**\n    * Check whether the network is slow\n    * @returns {Boolean}\n    */\n   isNetworkSlow() {\n      return !!this._networkSlow;\n   }\n\n   /**\n    * Register the network speed test worker\n    * @param {Worker} worker\n    * @param {boolean} slow is the current state slow?\n    */\n   registerNetworkTestWorker(worker, slow) {\n      this._networkTestWorker = worker;\n      this._networkSlow = slow;\n      this._networkTestWorker.onmessage = ({ data }) => {\n         if (this._networkSlow !== data) {\n            this._networkSlow = data;\n            this.emit(\"networkslow\", this._networkSlow);\n            // Tell sentry our network speed changed\n            performance.setContext(\"breadcrumb\", {\n               category: \"network\",\n               message: this._networkSlow\n                  ? \"Slow network detected\"\n                  : \"Network speed restored\",\n               level: \"info\",\n            });\n         }\n      };\n   }\n\n   /**\n    * @method networkStatus\n    * return the connection type currently registered with the network\n    * plugin.\n    * @return {string}\n    */\n   networkStatus() {\n      return navigator.connection.type;\n   }\n\n   /**\n    * @method isNetworkConnected\n    * return true/false if the device is currently connected to the\n    * internet.\n    * @return {bool}\n    */\n   isNetworkConnected() {\n      // if this is a Web Client and using sails.socket.io\n      if (io && io.socket && io.socket.isConnected) {\n         return io.socket.isConnected();\n      }\n\n      // if this isn't a Cordova Plugin, then return navigator data:\n      if (typeof Connection == \"undefined\") {\n         // NOTE: this technically only detects if we are connected to a\n         // network.  It doesn't guarantee we can communicate across the 'net\n         return navigator.onLine;\n      }\n\n      // Cordova Plugin:\n      return this.networkStatus() != Connection.NONE;\n   }\n\n   /**\n    * publishResponse()\n    * emit the requested response for this network operation.\n    * @param {obj} jobResponse\n    * @param {obj} error\n    * @param {obj} data\n    */\n   publishResponse(jobResponse, error, data) {\n      if (data) {\n         data = this.normalizeData(data);\n      }\n      this.emit(jobResponse.key, jobResponse.context, error, data);\n   }\n\n   normalizeData(data) {\n      // Data returning from our server is wrapped in an outer layer of\n      // information that is for our Networking API.\n      // the outer wrapper should be:\n      // on success :\n      // {\n      //   status: \"success\",\n      //   data:{Data For App}\n      // }\n      // on Error:\n      // {\n      //   status: \"error\",\n      //   id: {int} error code\n      //   ... other data here\n      // }\n\n      // we have physically received a data packet from the server,\n      // but we are informed that our transaction was problematic\n      // (400 level USER problem?)\n      if (data.status === \"error\") {\n         // TODO: review Error procedure here\n         return data;\n      }\n\n      // on success\n      // make sure we return the Application Level Data packet:\n      return data.data || data;\n   }\n\n   ////\n   //// Queued Requests\n   ////\n\n   /**\n    * refQueue()\n    * sub classes can override this for their own separate Queue Data\n    * @return {string}\n    */\n   refQueue() {\n      return \"networkQueue\";\n   }\n\n   /**\n    * queueCount()\n    * return the # of messages in the queue.\n    * @return {int}\n    */\n   queueCount() {\n      return this._queueCount;\n   }\n\n   /**\n    * Adds a request to the outgoing queue.\n    *\n    * @param {object} data\n    * @param {object} jobResponse\n    * @return {Promise}\n    */\n   queue(data, jobResponse) {\n      var refQueue = this.refQueue();\n\n      return new Promise((resolve, reject) => {\n         this.queueLock\n            .acquire()\n            .then(() => {\n               return this.AB.Storage.get(refQueue);\n            })\n            .then((queue) => {\n               queue = queue || [];\n               let jID = this.AB.jobID();\n               this.cachJobResponse[jID] = jobResponse;\n               queue.push({ data, jobResponse: jID });\n               this.AB.log(\n                  `:::: ${queue.length} request${\n                     queue.length > 1 ? \"s\" : \"\"\n                  } queued`\n               );\n               this._queueCount = queue.length;\n               return this.AB.Storage.set(refQueue, queue);\n            })\n            .then(() => {\n               this.emit(\"queued\");\n               // if we are not already polling the network, start\n               if (!this.idConnectionCheck) {\n                  this._connectionCheck();\n               }\n               this.queueLock.release();\n               resolve();\n            })\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message: \"Error while queueing data\",\n               });\n               this.AB.Analytics.logError(err);\n               reject(err);\n\n               this.queueLock.release();\n            });\n      });\n   }\n\n   /**\n    * queueFlush()\n    * Flush the queue and send the contents to the relay server.\n    */\n   queueFlush() {\n      var refQueue = this.refQueue();\n\n      // if we are not connected, then stop\n      if (!this.isNetworkConnected()) {\n         var error = new Error(\"Not connected to the internet.\");\n         error.code = \"E_NOTCONNECTED\";\n         return Promise.reject(error);\n      }\n\n      // otherwise, attempt to flush the queue:\n      return new Promise((resolve, reject) => {\n         this.queueLock\n            .acquire()\n\n            //\n            // Get queue contents\n            //\n            .then(() => {\n               return this.AB.Storage.get(refQueue);\n            })\n\n            //\n            // Send off each queued request\n            //\n            .then((queue) => {\n               // default to [] if not found\n               queue = queue || [];\n\n               let hasResponded = false;\n               let resCount = 0;\n               let resNumber = queue.length;\n\n               let done = (res, rej, err) => {\n                  if (!hasResponded) {\n                     if (err) {\n                        rej(err);\n                        hasResponded = true;\n                        return;\n                     }\n                     resCount++;\n                     if (resCount >= resNumber) {\n                        hasResponded = true;\n                        res();\n                     }\n                  }\n               };\n               // recursively process each pending queue request\n               var processRequest = (cb) => {\n                  if (queue.length == 0) {\n                     cb();\n                  } else {\n                     var entry = queue.shift();\n                     var params = entry.data;\n                     let job = this.cachJobResponse[entry.jobResponse];\n                     // var job = entry.jobResponse;\n                     this._network\n                        .resend(params, job)\n                        .then(() => {\n                           delete this.cachJobResponse[entry.jobResponse];\n                           // processRequest(cb);\n                           cb();\n                        })\n                        .catch((err) => {\n                           // if the err was due to a network connection error\n                           if (err && err.code == \"E_TOMANYRETRIES\") {\n                              cb(err);\n                              return;\n                           }\n                           // otherwise, try the next\n                           // processRequest(cb);\n                        });\n                     processRequest(cb);\n                  }\n               };\n\n               return new Promise((res, rej) => {\n                  processRequest((err) => {\n                     done(res, rej, err);\n                     // if (err) {\n                     //    rej(err);\n                     // } else {\n                     //    res();\n                     // }\n                  });\n               });\n            })\n\n            //\n            // Clear queue contents\n            //\n            .then(() => {\n               this.cachJobResponse = {};\n               this._queueCount = 0;\n               return this.AB.Storage.set(refQueue, []);\n            })\n\n            // release the Lock\n            .then(() => {\n               this.emit(\"queue.synced\");\n               return this.queueLock.release();\n            })\n\n            // all done.\n            .then(() => {\n               resolve();\n            })\n\n            // respond to errors:\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message: \"commAPI queueFlush error\",\n               });\n               this.AB.Analytics.logError(err);\n\n               this.queueLock.release().then(() => {\n                  reject(err);\n               });\n            });\n      });\n   }\n\n   /**\n    * Reset credentials to a blank state.\n    * @return {Promise}\n    */\n   reset() {\n      return Promise.resolve();\n   }\n\n   /**\n    * type()\n    * return the type of network connection we are using.\n    * [\"rest\", \"socket\", \"relay\"]\n    * @return {string}\n    */\n   type() {\n      return this._config.appbuilder.networkType;\n   }\n\n   // uuid() {\n   //    return this.AB.uuid();\n   // }\n\n   getTokens() {\n      // called in appPage.js : openRelayLoader()\n      return {};\n   }\n}\n\nexport default new Network();\n","/*\n * StorageLocal\n *\n * An interface for storing and retrieving Client Side data.  Data stored\n * in StorageLoacal is NOT encrypted.\n *\n * This implementation is based upon the webix.storage.local library.\n * See: https://docs.webix.com/api__refs__storage.local.html\n *\n */\n\nvar EventEmitter = require(\"events\").EventEmitter;\n\nclass StorageLocal extends EventEmitter {\n   constructor() {\n      super();\n\n      this.tenantStorage = null;\n      // {Webix.storage} object.\n      // We divide the storage data according to the tenant we are working\n      // with.  This way Users who can move between different Tenants can\n      // keep their local data separated.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var tenantID = this.AB.Tenant.id();\n      if (!tenantID) {\n         tenantID = \"noAuth\";\n         // \"noAuth\" is considered the tenant on our Login sequence\n         // which should have a minimum of data stored (language maybe?)\n      }\n\n      this.tenantStorage = this.AB.Webix.storage.prefix(\n         tenantID,\n         this.AB.Webix.storage.local\n      );\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   set(key, value /* , options = {} */) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.put(key, value);\n      });\n   }\n\n   get(key /*, options = {} */) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.get(key);\n      });\n   }\n\n   clear(key) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.remove(key);\n      });\n   }\n\n   clearAll() {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.clear();\n      });\n   }\n}\n\nexport default new StorageLocal();\n","var EventEmitter = require(\"events\").EventEmitter;\n\nimport StorageLocal from \"./StorageLocal.js\";\n\nclass Storage extends EventEmitter {\n   constructor() {\n      super();\n\n      this.tenantStorage = null;\n      this._config = null;\n      this._storage = null;\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var config = this.AB.Config.siteConfig();\n      if (config) {\n         if (config.storage && config.storage.encrypted) {\n            console.error(\"TODO: Implement Encrypted Storage\");\n            // this._storage = StorageEncrypted;\n            this._storage = StorageLocal;\n         } else {\n            this._storage = StorageLocal;\n         }\n\n         return this._storage.init(AB);\n      } else {\n         console.error(\"??? Why No site config ???\");\n      }\n\n      return Promise.resolve();\n   }\n\n   set(...params) {\n      return this._storage.set(...params);\n   }\n\n   get(...params) {\n      return this._storage.get(...params);\n   }\n\n   clear(...params) {\n      return this._storage.clear(...params);\n   }\n\n   clearAll(...params) {\n      return this._storage.clearAll(...params);\n   }\n}\n\nexport default new Storage();\n","var EventEmitter = require(\"events\").EventEmitter;\n\nimport Config from \"../config/Config.js\";\n\nclass Tenant extends EventEmitter {\n   constructor() {\n      super();\n\n      this.text = false;\n      this._config = null;\n      this.textClickToEnter = null;\n   }\n\n   init() {\n      var config = Config.tenantConfig();\n      if (config) {\n         // check if we have options that are stored as a string\n         if (\n            typeof config.options === \"string\" ||\n            config.options instanceof String\n         ) {\n            // if we do try to parse them into a JSON object\n            try {\n               config.options = JSON.parse(config.options);\n            } catch (error) {\n               console.error(error);\n            }\n         }\n         this._config = config;\n         this.textClickToEnter = config.options.textClickToEnter;\n      }\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   id() {\n      if (!this._config || this._config.id == \"??\") {\n         return null;\n      }\n      return this._config.id;\n   }\n\n   setting(key, value) {\n      if (this._config) {\n         if (value) {\n            this._config.options[key] = value;\n            return;\n         }\n         return this._config.options[key];\n      }\n   }\n}\n\nexport default new Tenant();\n","/**\n * @class configDesktop\n *\n * Manage our configuration settings for Desktop styles.\n\n */\n\nexport default {\n   // Application List\n   appListRowHeight: 67,\n\n   // button types\n   buttonWidthLarge: 200,\n   buttonWidthMedium: 150,\n   buttonWidthSmall: 100,\n   buttonWidthExtraSmall: 50,\n\n   // tab types\n   tabWidthLarge: 200,\n   tabWidthMedium: 120,\n   tabWidthSmall: 100,\n   tabWidthExtraSmall: 50,\n\n   // column types\n   columnWidthXLarge: 350,\n   columnWidthLarge: 250,\n   columnWidthMedium: 200,\n   columnWidthSmall: 150,\n   columnWidthExtraSmall: 100,\n\n   // spacers\n   xSmallSpacer: 5,\n   smallSpacer: 10,\n   mediumSpacer: 25,\n   largeSpacer: 50,\n   xLargeSpacer: 100,\n   xxLargeSpacer: 200,\n   xxxLargeSpacer: 400,\n   appListSpacerRowHeight: 100,\n   appListSpacerColMinWidth: 100,\n   appListSpacerColMaxWidth: 200,\n   objectWorkspaceColWidth: 20,\n\n   // labels\n   labelWidthSmall: 50,\n   labelWidthMedium: 80,\n   labelWidthLarge: 120,\n   labelWidthXLarge: 150,\n   labelWidthXXLarge: 200,\n   labelWidthXXXLarge: 280,\n   labelWidthCheckbox: 0,\n\n   // show elements on desktop\n   hideMobile: false,\n};\n","/**\n * @class configMobile\n *\n * Manage our configuration settings for mobile styles.\n\n */\n\nexport default {\n   // Application List\n   appListRowHeight: 67,\n\n   // button types\n   buttonWidthLarge: 200,\n   buttonWidthMedium: 150,\n   buttonWidthSmall: 100,\n   buttonWidthExtraSmall: 50,\n\n   // tab types\n   tabWidthLarge: 200,\n   tabWidthMedium: 120,\n   tabWidthSmall: 100,\n   tabWidthExtraSmall: 50,\n\n   // column types\n   columnWidthLarge: 250,\n   columnWidthMedium: 200,\n   columnWidthSmall: 150,\n   columnWidthExtraSmall: 100,\n\n   // spacers\n   xSmallSpacer: 1,\n   smallSpacer: 1,\n   mediumSpacer: 10,\n   largeSpacer: 20,\n   xLargeSpacer: 50,\n   xxLargeSpacer: 100,\n   xxxLargeSpacer: 120,\n   appListSpacerRowHeight: 10,\n   appListSpacerColMinWidth: 1,\n   appListSpacerColMaxWidth: 1,\n   objectWorkspaceColWidth: 1,\n\n   // labels\n   labelWidthSmall: 50,\n   labelWidthMedium: 80,\n   labelWidthLarge: 120,\n   labelWidthXLarge: 120,\n   labelWidthXXLarge: 120,\n   labelWidthCheckbox: 0,\n\n   // hide elements for mobile\n   hideMobile: true,\n};\n","/**\n * @class config\n *\n * Manage our configuration settings.\n */\n\nimport ConfigDesktop from \"./configDesktop\";\nimport ConfigMobile from \"./configMobile\";\nimport Icons from \"./icons\";\n\nexport default {\n   config: function () {\n      // TODO: decide which config file to return here:\n      if (window.innerWidth < 768) {\n         return ConfigMobile;\n      }\n      return ConfigDesktop;\n   },\n   icons: Icons.icons,\n};\n","export default {\n   icons: [\n      \"500px\",\n      \"address-book\",\n      \"address-book-o\",\n      \"address-card\",\n      \"address-card-o\",\n      \"adjust\",\n      \"adn\",\n      \"align-center\",\n      \"align-justify\",\n      \"align-left\",\n      \"align-right\",\n      \"amazon\",\n      \"ambulance\",\n      \"american-sign-language-interpreting\",\n      \"anchor\",\n      \"android\",\n      \"angellist\",\n      \"angle-double-down\",\n      \"angle-double-left\",\n      \"angle-double-right\",\n      \"angle-double-up\",\n      \"angle-down\",\n      \"angle-left\",\n      \"angle-right\",\n      \"angle-up\",\n      \"apple\",\n      \"archive\",\n      \"area-chart\",\n      \"arrow-circle-down\",\n      \"arrow-circle-left\",\n      \"arrow-circle-o-down\",\n      \"arrow-circle-o-left\",\n      \"arrow-circle-o-right\",\n      \"arrow-circle-o-up\",\n      \"arrow-circle-right\",\n      \"arrow-circle-up\",\n      \"arrow-down\",\n      \"arrow-left\",\n      \"arrow-right\",\n      \"arrow-up\",\n      \"arrows\",\n      \"arrows-alt\",\n      \"arrows-h\",\n      \"arrows-v\",\n      \"asl-interpreting\",\n      \"assistive-listening-systems\",\n      \"asterisk\",\n      \"at\",\n      \"audio-description\",\n      \"automobile\",\n      \"backward\",\n      \"balance-scale\",\n      \"ban\",\n      \"bandcamp\",\n      \"bank\",\n      \"bar-chart\",\n      \"bar-chart-o\",\n      \"barcode\",\n      \"bars\",\n      \"bath\",\n      \"bathtub\",\n      \"battery\",\n      \"battery-0\",\n      \"battery-1\",\n      \"battery-2\",\n      \"battery-3\",\n      \"battery-4\",\n      \"battery-empty\",\n      \"battery-full\",\n      \"battery-half\",\n      \"battery-quarter\",\n      \"battery-three-quarters\",\n      \"bed\",\n      \"beer\",\n      \"behance\",\n      \"behance-square\",\n      \"bell\",\n      \"bell-o\",\n      \"bell-slash\",\n      \"bell-slash-o\",\n      \"bicycle\",\n      \"binoculars\",\n      \"birthday-cake\",\n      \"bitbucket\",\n      \"bitbucket-square\",\n      \"bitcoin\",\n      \"black-tie\",\n      \"blind\",\n      \"bluetooth\",\n      \"bluetooth-b\",\n      \"bold\",\n      \"bolt\",\n      \"bomb\",\n      \"book\",\n      \"bookmark\",\n      \"bookmark-o\",\n      \"braille\",\n      \"briefcase\",\n      \"btc\",\n      \"bug\",\n      \"building\",\n      \"building-o\",\n      \"bullhorn\",\n      \"bullseye\",\n      \"bus\",\n      \"buysellads\",\n      \"cab\",\n      \"calculator\",\n      \"calendar\",\n      \"calendar-check-o\",\n      \"calendar-minus-o\",\n      \"calendar-o\",\n      \"calendar-plus-o\",\n      \"calendar-times-o\",\n      \"camera\",\n      \"camera-retro\",\n      \"car\",\n      \"caret-down\",\n      \"caret-left\",\n      \"caret-right\",\n      \"caret-square-o-down\",\n      \"caret-square-o-left\",\n      \"caret-square-o-right\",\n      \"caret-square-o-up\",\n      \"caret-up\",\n      \"cart-arrow-down\",\n      \"cart-plus\",\n      \"cc\",\n      \"cc-amex\",\n      \"cc-diners-club\",\n      \"cc-discover\",\n      \"cc-jcb\",\n      \"cc-mastercard\",\n      \"cc-paypal\",\n      \"cc-stripe\",\n      \"cc-visa\",\n      \"certificate\",\n      \"chain\",\n      \"chain-broken\",\n      \"check\",\n      \"check-circle\",\n      \"check-circle-o\",\n      \"check-square\",\n      \"check-square-o\",\n      \"chevron-circle-down\",\n      \"chevron-circle-left\",\n      \"chevron-circle-right\",\n      \"chevron-circle-up\",\n      \"chevron-down\",\n      \"chevron-left\",\n      \"chevron-right\",\n      \"chevron-up\",\n      \"child\",\n      \"chrome\",\n      \"circle\",\n      \"circle-o\",\n      \"circle-o-notch\",\n      \"circle-thin\",\n      \"clipboard\",\n      \"clock-o\",\n      \"clone\",\n      \"close\",\n      \"cloud\",\n      \"cloud-download\",\n      \"cloud-upload\",\n      \"cny\",\n      \"code\",\n      \"code-fork\",\n      \"codepen\",\n      \"codiepie\",\n      \"coffee\",\n      \"cog\",\n      \"cogs\",\n      \"columns\",\n      \"comment\",\n      \"comment-o\",\n      \"commenting\",\n      \"commenting-o\",\n      \"comments\",\n      \"comments-o\",\n      \"compass\",\n      \"compress\",\n      \"connectdevelop\",\n      \"contao\",\n      \"copy\",\n      \"copyright\",\n      \"creative-commons\",\n      \"credit-card\",\n      \"credit-card-alt\",\n      \"crop\",\n      \"crosshairs\",\n      \"css3\",\n      \"cube\",\n      \"cubes\",\n      \"cut\",\n      \"cutlery\",\n      \"dashboard\",\n      \"dashcube\",\n      \"database\",\n      \"deaf\",\n      \"deafness\",\n      \"dedent\",\n      \"delicious\",\n      \"desktop\",\n      \"deviantart\",\n      \"diamond\",\n      \"digg\",\n      \"dollar\",\n      \"dot-circle-o\",\n      \"download\",\n      \"dribbble\",\n      \"drivers-license\",\n      \"drivers-license-o\",\n      \"dropbox\",\n      \"drupal\",\n      \"edge\",\n      \"edit\",\n      \"eercast\",\n      \"eject\",\n      \"ellipsis-h\",\n      \"ellipsis-v\",\n      \"empire\",\n      \"envelope\",\n      \"envelope-o\",\n      \"envelope-open\",\n      \"envelope-open-o\",\n      \"envelope-square\",\n      \"envira\",\n      \"eraser\",\n      \"etsy\",\n      \"eur\",\n      \"euro\",\n      \"exchange\",\n      \"exclamation\",\n      \"exclamation-circle\",\n      \"exclamation-triangle\",\n      \"expand\",\n      \"expeditedssl\",\n      \"external-link\",\n      \"external-link-square\",\n      \"eye\",\n      \"eye-slash\",\n      \"eyedropper\",\n      \"fa\",\n      \"facebook\",\n      \"facebook-f\",\n      \"facebook-official\",\n      \"facebook-square\",\n      \"fast-backward\",\n      \"fast-forward\",\n      \"fax\",\n      \"feed\",\n      \"female\",\n      \"fighter-jet\",\n      \"file\",\n      \"file-archive-o\",\n      \"file-audio-o\",\n      \"file-code-o\",\n      \"file-excel-o\",\n      \"file-image-o\",\n      \"file-movie-o\",\n      \"file-o\",\n      \"file-pdf-o\",\n      \"file-photo-o\",\n      \"file-picture-o\",\n      \"file-powerpoint-o\",\n      \"file-sound-o\",\n      \"file-text\",\n      \"file-text-o\",\n      \"file-video-o\",\n      \"file-word-o\",\n      \"file-zip-o\",\n      \"files-o\",\n      \"film\",\n      \"filter\",\n      \"fire\",\n      \"fire-extinguisher\",\n      \"firefox\",\n      \"first-order\",\n      \"flag\",\n      \"flag-checkered\",\n      \"flag-o\",\n      \"flash\",\n      \"flask\",\n      \"flickr\",\n      \"floppy-o\",\n      \"folder\",\n      \"folder-o\",\n      \"folder-open\",\n      \"folder-open-o\",\n      \"font\",\n      \"font-awesome\",\n      \"fonticons\",\n      \"fort-awesome\",\n      \"forumbee\",\n      \"forward\",\n      \"foursquare\",\n      \"free-code-camp\",\n      \"frown-o\",\n      \"futbol-o\",\n      \"gamepad\",\n      \"gavel\",\n      \"gbp\",\n      \"ge\",\n      \"gear\",\n      \"gears\",\n      \"genderless\",\n      \"get-pocket\",\n      \"gg\",\n      \"gg-circle\",\n      \"gift\",\n      \"git\",\n      \"git-square\",\n      \"github\",\n      \"github-alt\",\n      \"github-square\",\n      \"gitlab\",\n      \"gittip\",\n      \"glass\",\n      \"glide\",\n      \"glide-g\",\n      \"globe\",\n      \"google\",\n      \"google-plus\",\n      \"google-plus-circle\",\n      \"google-plus-official\",\n      \"google-plus-square\",\n      \"google-wallet\",\n      \"graduation-cap\",\n      \"gratipay\",\n      \"grav\",\n      \"group\",\n      \"h-square\",\n      \"hacker-news\",\n      \"hand-grab-o\",\n      \"hand-lizard-o\",\n      \"hand-o-down\",\n      \"hand-o-left\",\n      \"hand-o-right\",\n      \"hand-o-up\",\n      \"hand-paper-o\",\n      \"hand-peace-o\",\n      \"hand-pointer-o\",\n      \"hand-rock-o\",\n      \"hand-scissors-o\",\n      \"hand-spock-o\",\n      \"hand-stop-o\",\n      \"handshake-o\",\n      \"hard-of-hearing\",\n      \"hashtag\",\n      \"hdd-o\",\n      \"header\",\n      \"headphones\",\n      \"heart\",\n      \"heart-o\",\n      \"heartbeat\",\n      \"history\",\n      \"home\",\n      \"hospital-o\",\n      \"hotel\",\n      \"hourglass\",\n      \"hourglass-1\",\n      \"hourglass-2\",\n      \"hourglass-3\",\n      \"hourglass-end\",\n      \"hourglass-half\",\n      \"hourglass-o\",\n      \"hourglass-start\",\n      \"houzz\",\n      \"html5\",\n      \"i-cursor\",\n      \"id-badge\",\n      \"id-card\",\n      \"id-card-o\",\n      \"ils\",\n      \"image\",\n      \"imdb\",\n      \"inbox\",\n      \"indent\",\n      \"industry\",\n      \"info\",\n      \"info-circle\",\n      \"inr\",\n      \"instagram\",\n      \"institution\",\n      \"internet-explorer\",\n      \"intersex\",\n      \"ioxhost\",\n      \"italic\",\n      \"joomla\",\n      \"jpy\",\n      \"jsfiddle\",\n      \"key\",\n      \"keyboard-o\",\n      \"krw\",\n      \"language\",\n      \"laptop\",\n      \"lastfm\",\n      \"lastfm-square\",\n      \"leaf\",\n      \"leanpub\",\n      \"legal\",\n      \"lemon-o\",\n      \"level-down\",\n      \"level-up\",\n      \"life-bouy\",\n      \"life-buoy\",\n      \"life-ring\",\n      \"life-saver\",\n      \"lightbulb-o\",\n      \"line-chart\",\n      \"link\",\n      \"linkedin\",\n      \"linkedin-square\",\n      \"linode\",\n      \"linux\",\n      \"list\",\n      \"list-alt\",\n      \"list-ol\",\n      \"list-ul\",\n      \"location-arrow\",\n      \"lock\",\n      \"long-arrow-down\",\n      \"long-arrow-left\",\n      \"long-arrow-right\",\n      \"long-arrow-up\",\n      \"low-vision\",\n      \"magic\",\n      \"magnet\",\n      \"mail-forward\",\n      \"mail-reply\",\n      \"mail-reply-all\",\n      \"male\",\n      \"map\",\n      \"map-marker\",\n      \"map-o\",\n      \"map-pin\",\n      \"map-signs\",\n      \"mars\",\n      \"mars-double\",\n      \"mars-stroke\",\n      \"mars-stroke-h\",\n      \"mars-stroke-v\",\n      \"maxcdn\",\n      \"meanpath\",\n      \"medium\",\n      \"medkit\",\n      \"meetup\",\n      \"meh-o\",\n      \"mercury\",\n      \"microchip\",\n      \"microphone\",\n      \"microphone-slash\",\n      \"minus\",\n      \"minus-circle\",\n      \"minus-square\",\n      \"minus-square-o\",\n      \"mixcloud\",\n      \"mobile\",\n      \"mobile-phone\",\n      \"modx\",\n      \"money\",\n      \"moon-o\",\n      \"mortar-board\",\n      \"motorcycle\",\n      \"mouse-pointer\",\n      \"music\",\n      \"navicon\",\n      \"neuter\",\n      \"newspaper-o\",\n      \"object-group\",\n      \"object-ungroup\",\n      \"odnoklassniki\",\n      \"odnoklassniki-square\",\n      \"opencart\",\n      \"openid\",\n      \"opera\",\n      \"optin-monster\",\n      \"outdent\",\n      \"pagelines\",\n      \"paint-brush\",\n      \"paper-plane\",\n      \"paper-plane-o\",\n      \"paperclip\",\n      \"paragraph\",\n      \"paste\",\n      \"pause\",\n      \"pause-circle\",\n      \"pause-circle-o\",\n      \"paw\",\n      \"paypal\",\n      \"pencil\",\n      \"pencil-square\",\n      \"pencil-square-o\",\n      \"percent\",\n      \"phone\",\n      \"phone-square\",\n      \"photo\",\n      \"picture-o\",\n      \"pie-chart\",\n      \"pied-piper\",\n      \"pied-piper-alt\",\n      \"pied-piper-pp\",\n      \"pinterest\",\n      \"pinterest-p\",\n      \"pinterest-square\",\n      \"plane\",\n      \"play\",\n      \"play-circle\",\n      \"play-circle-o\",\n      \"plug\",\n      \"plus\",\n      \"plus-circle\",\n      \"plus-square\",\n      \"plus-square-o\",\n      \"podcast\",\n      \"power-off\",\n      \"print\",\n      \"product-hunt\",\n      \"puzzle-piece\",\n      \"qq\",\n      \"qrcode\",\n      \"question\",\n      \"question-circle\",\n      \"question-circle-o\",\n      \"quora\",\n      \"quote-left\",\n      \"quote-right\",\n      \"ra\",\n      \"random\",\n      \"ravelry\",\n      \"rebel\",\n      \"recycle\",\n      \"reddit\",\n      \"reddit-alien\",\n      \"reddit-square\",\n      \"refresh\",\n      \"registered\",\n      \"remove\",\n      \"renren\",\n      \"reorder\",\n      \"repeat\",\n      \"reply\",\n      \"reply-all\",\n      \"resistance\",\n      \"retweet\",\n      \"rmb\",\n      \"road\",\n      \"rocket\",\n      \"rotate-left\",\n      \"rotate-right\",\n      \"rouble\",\n      \"rss\",\n      \"rss-square\",\n      \"rub\",\n      \"ruble\",\n      \"rupee\",\n      \"s15\",\n      \"safari\",\n      \"save\",\n      \"scissors\",\n      \"scribd\",\n      \"search\",\n      \"search-minus\",\n      \"search-plus\",\n      \"sellsy\",\n      \"send\",\n      \"send-o\",\n      \"server\",\n      \"share\",\n      \"share-alt\",\n      \"share-alt-square\",\n      \"share-square\",\n      \"share-square-o\",\n      \"shekel\",\n      \"sheqel\",\n      \"shield\",\n      \"ship\",\n      \"shirtsinbulk\",\n      \"shopping-bag\",\n      \"shopping-basket\",\n      \"shopping-cart\",\n      \"shower\",\n      \"sign-in\",\n      \"sign-language\",\n      \"sign-out\",\n      \"signal\",\n      \"signing\",\n      \"simplybuilt\",\n      \"sitemap\",\n      \"skyatlas\",\n      \"skype\",\n      \"slack\",\n      \"sliders\",\n      \"slideshare\",\n      \"smile-o\",\n      \"snapchat\",\n      \"snapchat-ghost\",\n      \"snapchat-square\",\n      \"snowflake-o\",\n      \"soccer-ball-o\",\n      \"sort\",\n      \"sort-alpha-asc\",\n      \"sort-alpha-desc\",\n      \"sort-amount-asc\",\n      \"sort-amount-desc\",\n      \"sort-asc\",\n      \"sort-desc\",\n      \"sort-down\",\n      \"sort-numeric-asc\",\n      \"sort-numeric-desc\",\n      \"sort-up\",\n      \"soundcloud\",\n      \"space-shuttle\",\n      \"spinner\",\n      \"spoon\",\n      \"spotify\",\n      \"square\",\n      \"square-o\",\n      \"stack-exchange\",\n      \"stack-overflow\",\n      \"star\",\n      \"star-half\",\n      \"star-half-empty\",\n      \"star-half-full\",\n      \"star-half-o\",\n      \"star-o\",\n      \"steam\",\n      \"steam-square\",\n      \"step-backward\",\n      \"step-forward\",\n      \"stethoscope\",\n      \"sticky-note\",\n      \"sticky-note-o\",\n      \"stop\",\n      \"stop-circle\",\n      \"stop-circle-o\",\n      \"street-view\",\n      \"strikethrough\",\n      \"stumbleupon\",\n      \"stumbleupon-circle\",\n      \"subscript\",\n      \"subway\",\n      \"suitcase\",\n      \"sun-o\",\n      \"superpowers\",\n      \"superscript\",\n      \"support\",\n      \"table\",\n      \"tablet\",\n      \"tachometer\",\n      \"tag\",\n      \"tags\",\n      \"tasks\",\n      \"taxi\",\n      \"telegram\",\n      \"television\",\n      \"tencent-weibo\",\n      \"terminal\",\n      \"text-height\",\n      \"text-width\",\n      \"th\",\n      \"th-large\",\n      \"th-list\",\n      \"themeisle\",\n      \"thermometer\",\n      \"thermometer-0\",\n      \"thermometer-1\",\n      \"thermometer-2\",\n      \"thermometer-3\",\n      \"thermometer-4\",\n      \"thermometer-empty\",\n      \"thermometer-full\",\n      \"thermometer-half\",\n      \"thermometer-quarter\",\n      \"thermometer-three-quarters\",\n      \"thumb-tack\",\n      \"thumbs-down\",\n      \"thumbs-o-down\",\n      \"thumbs-o-up\",\n      \"thumbs-up\",\n      \"ticket\",\n      \"times\",\n      \"times-circle\",\n      \"times-circle-o\",\n      \"times-rectangle\",\n      \"times-rectangle-o\",\n      \"tint\",\n      \"toggle-down\",\n      \"toggle-left\",\n      \"toggle-off\",\n      \"toggle-on\",\n      \"toggle-right\",\n      \"toggle-up\",\n      \"trademark\",\n      \"train\",\n      \"transgender\",\n      \"transgender-alt\",\n      \"trash\",\n      \"trash-o\",\n      \"tree\",\n      \"trello\",\n      \"tripadvisor\",\n      \"trophy\",\n      \"truck\",\n      \"try\",\n      \"tty\",\n      \"tumblr\",\n      \"tumblr-square\",\n      \"turkish-lira\",\n      \"tv\",\n      \"twitch\",\n      \"twitter\",\n      \"twitter-square\",\n      \"umbrella\",\n      \"underline\",\n      \"undo\",\n      \"universal-access\",\n      \"university\",\n      \"unlink\",\n      \"unlock\",\n      \"unlock-alt\",\n      \"unsorted\",\n      \"upload\",\n      \"usb\",\n      \"usd\",\n      \"user\",\n      \"user-circle\",\n      \"user-circle-o\",\n      \"user-md\",\n      \"user-o\",\n      \"user-plus\",\n      \"user-secret\",\n      \"user-times\",\n      \"users\",\n      \"vcard\",\n      \"vcard-o\",\n      \"venus\",\n      \"venus-double\",\n      \"venus-mars\",\n      \"viacoin\",\n      \"viadeo\",\n      \"viadeo-square\",\n      \"video-camera\",\n      \"vimeo\",\n      \"vimeo-square\",\n      \"vine\",\n      \"vk\",\n      \"volume-control-phone\",\n      \"volume-down\",\n      \"volume-off\",\n      \"volume-up\",\n      \"warning\",\n      \"wechat\",\n      \"weibo\",\n      \"weixin\",\n      \"whatsapp\",\n      \"wheelchair\",\n      \"wheelchair-alt\",\n      \"wifi\",\n      \"wikipedia-w\",\n      \"window-close\",\n      \"window-close-o\",\n      \"window-maximize\",\n      \"window-minimize\",\n      \"window-restore\",\n      \"windows\",\n      \"won\",\n      \"wordpress\",\n      \"wpbeginner\",\n      \"wpexplorer\",\n      \"wpforms\",\n      \"wrench\",\n      \"xing\",\n      \"xing-square\",\n      \"y-combinator\",\n      \"y-combinator-square\",\n      \"yahoo\",\n      \"yc\",\n      \"yc-square\",\n      \"yelp\",\n      \"yen\",\n      \"yoast\",\n      \"youtube\",\n      \"youtube-play\",\n      \"youtube-square\",\n   ],\n};\n","import ABFactoryCore from \"./core/ABFactoryCore\";\n\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport { nanoid } from \"nanoid\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport performance from \"../utils/performance\";\nimport FilterComplex from \"./platform/FilterComplex\";\nimport SortPopup from \"./platform/views/ABViewGridPopupSortFields\";\n\n//\n// Our Common Resources\n//\nimport Config from \"../config/Config.js\";\n// Config : responsible for all the configuration/settings of our instance.\n\nimport Account from \"../resources/Account.js\";\n// Account : manages the current Logged in User and Account information.\n\nimport ClassUI from \"../ui/ClassUI.js\";\n\nimport Dialog from \"./_factory_utils/Dialog.js\";\n// Dialog : common UI dialogs.\n\nimport Multilingual from \"../resources/Multilingual.js\";\n// Multilingual: our interface Labels and language options\n\nimport Network from \"../resources/Network.js\";\n// Network: our interface for communicating to our server\n\nimport Storage from \"../resources/Storage.js\";\n// Storage: manages our interface for local storage\n\nimport ABViewManager from \"./core/ABViewManagerCore\";\n\nimport Tenant from \"../resources/Tenant.js\";\n// Tenant: manages the Tenant information of the current instance\n\nimport UISettings from \"./uiSettings/config.js\";\n// UISettings: detailed settings for our common UI elements\n\nclass ABValidator {\n   constructor(AB) {\n      this.AB = AB;\n      this.errors = [];\n   }\n\n   addError(name, message) {\n      this.errors.push({ name: name, message: message });\n   }\n\n   pass() {\n      return this.errors.length == 0;\n   }\n\n   fail() {\n      return this.errors.length > 0;\n   }\n\n   toValidationObject() {\n      var obj = {\n         error: \"E_VALIDATION\",\n         invalidAttributes: {},\n      };\n\n      var attr = obj.invalidAttributes;\n\n      this.errors.forEach((e) => {\n         attr[e.name] = attr[e.name] || [];\n         attr[e.name].push(e);\n      });\n\n      return obj;\n   }\n\n   updateForm(form) {\n      var vObj = this.toValidationObject();\n      this.AB.Validation.isFormValidationError(vObj, form);\n   }\n\n   updateGrid(rowID, grid) {\n      var vObj = this.toValidationObject();\n      this.AB.Validation.isGridValidationError(vObj, rowID, grid);\n   }\n}\n\n//\n// AppBuilder Objects\n//\n\nclass ABFactory extends ABFactoryCore {\n   constructor(definitions) {\n      super(definitions);\n\n      // Common Reference to Configuration Values\n      this.Config = Config;\n\n      //\n      // Resources\n      //\n      this.Account = Account;\n      this.Dialog = Dialog;\n      this.Multilingual = Multilingual;\n      this.Network = Network;\n      this.Storage = Storage;\n      this.Tenant = Tenant;\n      this.Webix = webix;\n\n      // Plugin Classes\n      this.ClassUI = ClassUI;\n\n      // additional Class definitions\n      this.Class.FilterComplex = FilterComplex;\n      this.Class.ABViewManager = ABViewManager;\n      this.Class.SortPopup = SortPopup;\n\n      // Temp placeholders until Resources are implemented:\n      this.Analytics = {\n         log: () => {},\n         logError: () => {},\n      };\n      this.Lock = class Lock {\n         constructor() {}\n\n         acquire() {\n            return Promise.resolve();\n         }\n         release() {\n            return Promise.resolve();\n         }\n      };\n\n      this.UISettings = UISettings;\n\n      this.Validation = {\n         validator: () => {\n            return new ABValidator(this);\n         },\n\n         errorSailsCleanup: function (error) {\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               // dig down to sails provided error object:\n               if (\n                  error.error &&\n                  error.error == \"E_UNKNOWN\" &&\n                  error.raw &&\n                  error.raw.length > 0\n               ) {\n                  error = error.raw[0];\n               }\n\n               // drill down to the embedded .err object if it exists\n               if (error.err) {\n                  error = error.err;\n               }\n\n               // if this is from our server response:\n               if (\n                  error.data &&\n                  error.data.error &&\n                  error.data.error == \"E_VALIDATION\"\n               ) {\n                  error = error.data;\n               }\n            }\n\n            return error;\n         },\n\n         /**\n          * @function AB.Validation.isFormValidationError\n          *\n          * scans the given error to see if it is a sails' response about an invalid\n          * value from one of the form elements.\n          *\n          * @codestart\n          * var form = $$('formID');\n          * var values = form.getValues();\n          * model.attr(values);\n          * model.save()\n          * .fail(function(err){\n          *     if (!OP.Form.isFormValidationError(err, form)) {\n          *         OP.error.log('Error saving current model ()', {error:err, values:values});\n          *     }\n          * })\n          * .then(function(newData){\n          *\n          * });\n          * @codeend\n          *\n          * @param {obj} error\n          *        the error response object\n          * @param {obj} form\n          *        the webix form instance (or reference)\n          * @return {bool}\n          *         true if error was about a form element.\n          *         false otherwise.\n          */\n         isFormValidationError: function (error, form) {\n            var hasFocused = false;\n            // {bool} have we set focus to form component?\n\n            // if we have an error object:\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               error = this.errorSailsCleanup(error);\n\n               //// Now process the error object\n               ////\n               if (\n                  (error.error && error.error == \"E_VALIDATION\") ||\n                  (error.code && error.code == \"E_VALIDATION\")\n               ) {\n                  var attrs = error.invalidAttributes;\n                  if (attrs) {\n                     var wasForm = false;\n                     for (var attr in attrs) {\n                        // if this is a field in the form:\n                        if (form.elements[attr]) {\n                           var errors = attrs[attr];\n                           var msg = [];\n                           errors.forEach(function (err) {\n                              msg.push(err.message);\n                           });\n\n                           // set the invalid error message\n                           form.markInvalid(attr, msg.join(\", \"));\n\n                           // set focus to the 1st form element we mark:\n                           if (!hasFocused) {\n                              form.elements[attr].focus();\n                              hasFocused = true;\n                           }\n\n                           wasForm = true;\n                        }\n                     }\n\n                     if (wasForm) {\n                        return true;\n                     }\n                  }\n               }\n            }\n\n            // if we missed updating our form with an error\n            // this was not a validation error so return false\n            return false;\n         },\n\n         /**\n          * @method AB.Validation.isGridValidationError\n          *\n          * scans the given error to see if it is a sails' response about an invalid\n          * value from one of our grid columns.\n          *\n          * @codestart\n          * var grid = $$('myGrid');\n          * model.attr(values);\n          * model.save()\n          * .fail(function(err){\n          *     if (!OP.Validation.isGridValidationError(err, editor, grid)) {\n          *         OP.error.log('Error saving current model ()', {error:err, values:values});\n          *     }\n          * })\n          * .then(function(newData){\n          *\n          * });\n          * @codeend\n          *\n          * @param {Error} error\n          *        the error response object\n          * @param {integer} row\n          *        the row id of the Grid to update.\n          * @param {webix.datatable} Grid\n          *        the webix grid instance (or reference)\n          * @return {bool}\n          *         true if error was about a grid column.\n          *         false otherwise.\n          */\n         isGridValidationError: function (error, row, Grid) {\n            // if we have an error object:\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               error = this.errorSailsCleanup(error);\n\n               //// Now process the error object\n               ////\n               if (\n                  (error.error && error.error == \"E_VALIDATION\") ||\n                  (error.code && error.code == \"E_VALIDATION\")\n               ) {\n                  var attrs = error.invalidAttributes;\n                  if (attrs) {\n                     var wasGrid = false;\n                     for (var attr in attrs) {\n                        Grid.addCellCss(row, attr, \"webix_invalid\");\n                        Grid.addCellCss(row, attr, \"webix_invalid_cell\");\n\n                        var msg = [];\n                        attrs[attr].forEach((e) => {\n                           msg.push(e.message);\n                        });\n\n                        webix.alert({\n                           text: attr + \": \" + msg.join(\", \"),\n                        });\n\n                        wasGrid = true;\n                     }\n\n                     Grid.refresh(row);\n                     Grid.clearSelection();\n\n                     if (wasGrid) {\n                        return true;\n                     }\n                  }\n               }\n            }\n\n            // if we missed updating our Grid with an error\n            // this was not a validation error so return false\n            return false;\n         },\n      };\n\n      // TODO: make sure \"error\" s are handled and sent to logs\n      // this.on(\"error\", ()=>{ Analytics.error })\n\n      this.Definitions = {};\n      // {obj} the provided interface for working with the ABDefinition table.\n      // NOTE: on the web client, we simply perform web API calls to perform\n      // the actions.  These are defined below.\n\n      this.on(\"error\", (err) => {\n         // this simply prevents thrown errors if there are no listeners.\n         console.error(err);\n      });\n\n      this._plugins = [];\n      // {array} of loaded Plugin.applications.\n\n      this._pendingNetworkRequests = {};\n      // {hash}   uuid : {Promise}\n      // convert our definitionsXXXX() operations to be Relay/offline compatible.\n      // if a queued operation is sent after a web browser refresh, then\n      // we will NOT have a pending promise to .resolve()/.reject()\n\n      this.Network.on(\"definition.create\", (context, err, fullDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: fullDef.id,\n            data: fullDef,\n         };\n         this.emit(\"ab.abdefinition.create\", pkt);\n\n         let newDef = this.definitionNew(fullDef);\n         pending?.resolve(newDef);\n      });\n\n      this.Network.on(\"definition.update\", (context, err, serverDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            if (err.toString().indexOf(\"Not Found\") > -1) {\n               return this.definitionCreate(context.values)\n                  .then(pending?.resolve)\n                  .catch(pending?.reject);\n            }\n            // log the error\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         this._definitions[context.id] = serverDef;\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: serverDef.id,\n            data: serverDef,\n         };\n         this.emit(\"ab.abdefinition.update\", pkt);\n\n         pending?.resolve(serverDef);\n      });\n\n      this.Network.on(\"definition.delete\", (context, err, serverDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            // log the error\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         delete this._definitions[context.id];\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: context.id,\n            data: serverDef,\n         };\n         this.emit(\"ab.abdefinition.delete\", pkt);\n\n         pending?.resolve();\n      });\n\n      //\n      // Rules\n      //\n      const platformRules = {\n         /**\n          * @method toDate\n          *\n          * @param {string} dateText\n          * @param {Object} options - {\n          *                               format: \"string\",\n          *                               ignoreTime: boolean\n          *                            }\n          * @return {Date}\n          */\n         toDate: (dateText = \"\", options = {}) => {\n            if (!dateText) return;\n\n            if (options.ignoreTime) dateText = dateText.replace(/T.*/, \"\");\n\n            let result = options.format\n               ? moment(dateText, options.format)\n               : moment(dateText);\n\n            let supportFormats = [\n               \"YYYY-MM-DD\",\n               \"YYYY/MM/DD\",\n               \"DD/MM/YYYY\",\n               \"MM/DD/YYYY\",\n               \"DD-MM-YYYY\",\n               \"MM-DD-YYYY\",\n            ];\n\n            supportFormats.forEach((format) => {\n               if (!result || !result.isValid())\n                  result = moment(dateText, format);\n            });\n\n            return new Date(result);\n         },\n\n         /**\n          * @method toDateFormat\n          *\n          * @param {Date} date\n          * @param {Object} options - {\n          *           format: \"string\",\n          *           localeCode: \"string\"\n          *         }\n          *\n          * @return {string}\n          */\n         toDateFormat: (date, options) => {\n            if (!date) return \"\";\n\n            let momentObj = moment(date);\n\n            if (options.localeCode) momentObj.locale(options.localeCode);\n\n            return momentObj.format(options.format);\n         },\n\n         /**\n          * @method subtractDate\n          *\n          * @param {Date} date\n          * @param {number} number\n          * @param {string} unit\n          *\n          * @return {Date}\n          */\n         subtractDate: (date, number, unit) => {\n            return moment(date).subtract(number, unit).toDate();\n         },\n\n         /**\n          * @method addDate\n          *\n          * @param {Date} date\n          * @param {number} number\n          * @param {string} unit\n          *\n          * @return {Date}\n          */\n         addDate: (date, number, unit) => {\n            return moment(date).add(number, unit).toDate();\n         },\n\n         /**\n          * Get today's UTC time range in \"YYYY-MM-DD HH:MM:SS\" format.\n          *\n          * It converts the start and end of today to UTC to keep things consistent\n          * across time zones. Handy when you need to deal with dates in different regions.\n          *\n          * @returns {string} UTC time range for today.\n          */\n\n         getUTCDayTimeRange: () => {\n            let now = new Date();\n            let year = now.getFullYear();\n            let month = now.getMonth();\n            let date = now.getDate();\n            let startOfDay = new Date(year, month, date, 0, 0, 0);\n            let endOfDay = new Date(year, month, date, 23, 59, 59);\n\n            // Convert to UTC by subtracting the timezone offset\n            let startOfDayUTC = new Date(\n               startOfDay.getTime() + startOfDay.getTimezoneOffset() * 60000\n            );\n            let endOfDayUTC = new Date(\n               endOfDay.getTime() + endOfDay.getTimezoneOffset() * 60000\n            );\n\n            //  Format the date in \"YYYY-MM-DD HH:MM:SS\" format\n            let formatDate = (date) => {\n               let isoString = date.toISOString();\n               return `${isoString.slice(0, 10)} ${isoString.slice(11, 19)}`;\n            };\n            return formatDate(startOfDayUTC).concat(\n               \"|\",\n               formatDate(endOfDayUTC)\n            );\n         },\n      };\n      (Object.keys(platformRules) || []).forEach((k) => {\n         this.rules[k] = platformRules[k];\n      });\n   }\n\n   /**\n    * init()\n    * prepare the ABFactory for operation. This includes parsing the\n    * definitions into useable objects, preparing the System Resources, etc.\n    * @return {Promise}\n    */\n   async init() {\n      //\n      // Prepare our Resources First\n      //\n      var allInits = [];\n\n      allInits.push(this.Account.init(this));\n      allInits.push(this.Multilingual.init(this));\n      allInits.push(this.Network.init(this));\n      allInits.push(this.Tenant.init(this));\n\n      await Promise.all(allInits);\n      await this.Storage.init(this);\n      var data = await this.Storage.get(\"local_settings\");\n      this._localSettings = data || {};\n\n      //\n      // Real Time Update Handlers\n      //\n\n      // new ABDefinition created:\n      this.on(\"ab.abdefinition.create\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         this._definitions[pkt.id] = pkt.data;\n         this.definitionSync(\"created\", pkt.id, pkt.data);\n      });\n\n      // ABDefinition updated:\n      this.on(\"ab.abdefinition.update\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         this._definitions[pkt.id] = pkt.data;\n         this.definitionSync(\"updated\", pkt.id, pkt.data);\n      });\n\n      // ABDefinition delete:\n      this.on(\"ab.abdefinition.delete\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         delete this._definitions[pkt.id];\n         this.definitionSync(\"destroyed\", pkt.id, pkt.data);\n      });\n\n      return super.init();\n\n      // return Promise.all(allInits)\n      //    .then(() => {\n      //       // some Resources depend on the above to be .init() before they can\n      //       // .init() themselves.\n      //       return this.Storage.init(this).then(() => {\n      //          return this.Storage.get(\"local_settings\").then((data) => {\n      //             this._localSettings = data || {};\n      //          });\n      //       });\n      //    })\n      //    .then(() => {\n      //       //\n      //       // RealTime Updates of our ABDefinitions\n      //       //\n\n      //       // new ABDefinition created:\n      //       this.on(\"ab.abdefinition.create\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          this._definitions[pkt.id] = pkt.data;\n      //          this.definitionSync(\"created\", pkt.id, pkt.data);\n      //       });\n\n      //       // ABDefinition updated:\n      //       this.on(\"ab.abdefinition.update\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          this._definitions[pkt.id] = pkt.data;\n      //          this.definitionSync(\"updated\", pkt.id, pkt.data);\n      //       });\n\n      //       // ABDefinition delete:\n      //       this.on(\"ab.abdefinition.delete\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          delete this._definitions[pkt.id];\n      //          this.definitionSync(\"destroyed\", pkt.id, pkt.data);\n      //       });\n\n      //       return super.init();\n      //    });\n   }\n\n   /**\n    * definiitonCreate(def)\n    * create a new ABDefinition\n    * @param {obj} def\n    *        the value hash of the new definition entry\n    * @return {Promise}\n    *        resolved with a new {ABDefinition} for the entry.\n    */\n   async definitionCreate(def) {\n      // we will set our uuid\n      if (typeof def.id == \"undefined\") {\n         def.id = this.uuid();\n         def.json.id = def.id;\n      }\n\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.create\",\n            context: {\n               uuid,\n            },\n         };\n         this.Network.post(\n            {\n               url: `/definition/create`,\n               data: def,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to CREATE definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to CREATE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionCreate()\",\n               message,\n               def,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionDestroy(id)\n    * delete an ABDefinition\n    * @param {string} id\n    *        the uuid of the ABDefinition to delete\n    * @return {Promise}\n    */\n   async definitionDestroy(id) {\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.delete\",\n            context: {\n               id,\n               uuid,\n            },\n         };\n         this.Network.delete(\n            {\n               url: `/definition/${id}`,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to DESTROY definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to DELETE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionDestroy()\",\n               message,\n               id,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionUpdate(id, def)\n    * update an existing ABDefinition\n    * @param {string} id\n    *        the uuid of the ABDefinition to update.\n    * @param {obj} values\n    *        the value hash of the new definition values\n    * @return {Promise}\n    *        resolved with a new {ABDefinition} for the entry.\n    */\n   async definitionUpdate(id, values) {\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.update\",\n            context: {\n               id,\n               uuid,\n               values,\n            },\n         };\n         this.Network.put(\n            {\n               url: `/definition/${id}`,\n               data: values,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to UPDATE definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to UPDATE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionUpdate()\",\n               message,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionsParse()\n    * include the incoming definitions into our ABFactory. These new\n    * definitions will replace any existing ones with the same .id.\n    * @param {array[ABDefinitioin]} defs\n    *     the incoming array of ABDefinitions to parse.\n    * @return {Promise}\n    */\n   // definitionsParse(defs = []) {\n   //    if (!Array.isArray(defs)) {\n   //       defs = [defs];\n   //    }\n\n   //    // store/replace the incoming definitions\n   //    // 1st: insert ALL our definitions internally\n   //    defs.forEach((d) => {\n   //       this._definitions[d.id] = d;\n   //    });\n   //    // 2nd: Now we can then go through and signal the \"updates\"\n   //    // and the related objects can find their dependent definitions.\n   //    defs.forEach((d) => {\n   //       this.definitionSync(\"updated\", d.id, d);\n   //    });\n\n   //    return Promise.resolve();\n   // }\n\n   /**\n    * will send alerts to a group of people. These alerts are usually about\n    * configuration errors, or software problems.\n    * @param {string} domain which group of people we are sending a notification to.\n    * @param {Error} error An error object generated at the point of issue.\n    * @param {json} info Additional related information concerning the issue.\n    */\n   notify(domain, error, info) {\n      performance.notify(domain, error, info);\n   }\n\n   plugins() {\n      return this._plugins;\n   }\n   pluginLoad(p) {\n      this._plugins.push(p);\n   }\n\n   //\n   // Utilities\n   //\n   alert(options) {\n      this.Webix.alert(options);\n   }\n\n   cloneDeep(value) {\n      return _.cloneDeep(value);\n   }\n\n   error(message, ...rest) {\n      var emitData = {\n         message: `ABFactory[${this.Tenant.id()}]:${message.toString()}`,\n      };\n\n      console.error(emitData.message);\n      if (message instanceof Error) {\n         emitData.error = message;\n         // this dumps the error.stack\n         console.error(message);\n      }\n\n      if (rest.length > 0) {\n         rest.forEach((r) => {\n            if (r instanceof Error) {\n               emitData.error = r;\n               // this dumps the error.stack\n               console.error(r);\n            }\n\n            if (typeof r == \"object\") {\n               for (var k in r) {\n                  emitData[k] = r[k];\n                  console.error(k, r[k]);\n               }\n            }\n         });\n      }\n      this.emit(\"error\", emitData);\n   }\n\n   jobID() {\n      return nanoid();\n   }\n\n   Label() {\n      return (...params) => {\n         return this.Multilingual.label(...params);\n      };\n   }\n\n   localSettings(key, value) {\n      if (typeof value == \"undefined\") {\n         // this is a getter:\n         return this._localSettings[key];\n      } else {\n         // setting a value:\n         this._localSettings[key] = value;\n         return this.Storage.set(`local_settings`, this._localSettings);\n      }\n   }\n\n   log(message, ...rest) {\n      console.log(message);\n      rest.forEach((r) => {\n         console.log(r);\n      });\n   }\n\n   isNil(value) {\n      return _.isNil(value);\n   }\n\n   /**\n    * @method rules.isUUID\n    * evaluate a given value to see if it matches the format of a uuid\n    * @param {string} key\n    * @return {boolean}\n    */\n   isUUID(key) {\n      var checker = RegExp(\n         \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\",\n         \"i\"\n      );\n      return checker.test(key);\n   }\n\n   merge(...params) {\n      return _.merge(...params);\n   }\n\n   orderBy(...params) {\n      return _.orderBy(...params);\n   }\n\n   uniq(...params) {\n      return _.uniq(...params);\n   }\n\n   kebabCase(...params) {\n      return _.kebabCase(...params);\n   }\n\n   sumBy(...params) {\n      return _.sumBy(...params);\n   }\n\n   meanBy(...params) {\n      return _.meanBy(...params);\n   }\n\n   maxBy(...params) {\n      return _.maxBy(...params);\n   }\n\n   minBy(...params) {\n      return _.minBy(...params);\n   }\n\n   uuid() {\n      return uuidv4();\n   }\n\n   warn(message, ...rest) {\n      console.warn(message);\n      rest.forEach((r) => {\n         console.warn(r);\n      });\n   }\n\n   isString(...params) {\n      return _.isString(params);\n   }\n}\n\nexport default ABFactory;\n","/**\n * ABApplicationCore\n *\n * This is the core ABApplication class that manages the common operations\n * of an ABApplication across platforms.\n *\n * It's primary responsibility is to decode a given set of attributes into\n * a working instance of an ABApplication that can return instances of\n * it's defined sub objects.\n *\n * Platform Specific versions of those objects should be defined in a peer\n * directory named platform. These versions of the objects should override\n * these Core objects with platform specific methods of operation (like\n * .save()).\n *\n * Initially your target application should load your platform/ABApplication.js\n * file, which will include this file and sub class it.\n *\n * However, this file will include the remaining files from your platform/*\n * versions.\n */\n\n// webpack can handle 'require()' statements, but node can't handle import\n// so let's use require():\nconst ABViewManager = require(\"../platform/ABViewManager\");\nvar ABMLClass = require(\"../platform/ABMLClass\");\n\nfunction toBool(val) {\n   if (typeof val == \"undefined\") {\n      return false;\n   }\n\n   if (val === \"\" || val === \"false\" || val === \"0\") {\n      return false;\n   }\n\n   if (val === \"true\" || val === \"1\") {\n      return true;\n   }\n\n   return val;\n}\n\nmodule.exports = class ABApplicationCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\", \"description\"], AB);\n\n      // attributes should be in format:\n      // {\n      //    id:##,\n      //    json:{},\n      //    name:\"XYZ\"\n      // }\n      attributes.json = attributes.json || {};\n\n      // ABApplication Attributes\n      this.id = attributes.id;\n      // {string} uuid\n\n      this.type = attributes.type || \"application\";\n      // {string} .type\n      // the ABDefinition.type of this object.\n\n      this.appType = attributes.appType || \"web\";\n      // {string} .appType\n      // the kind of Application this is. [\"web\", \"mobile\"]\n\n      this.json = attributes.json;\n      if (typeof this.json == \"string\") this.json = JSON.parse(this.json);\n      // {obj} .json\n      // the full settings of this ABApplication\n\n      this.json[\"versionData\"] = attributes.json?.versionData || {\n         versionNumber: \"1.0.0\",\n         changeLog: {\n            \"1.0.0\": {\n               author: \"N/A\",\n               version: \"1.0.0\",\n               keepVersion: 0,\n               commitMessage: \"Initial Version\",\n               timestamp: new Date().toISOString(),\n            },\n         },\n      };\n\n      if (typeof this.json.versionData == \"string\")\n         this.json.versionData = JSON.parse(this.json.versionData);\n      // {obj} .json\n      // the full version log data of this ABApplication\n\n      this.name = attributes.name || this.json.name || \"\";\n      // {string} .name\n      // the hard coded name of this ABDefinition Object, not to be confused\n      // with the .label.  The .name is created at design time and is a text\n      // reference for this object.\n\n      this.icon = attributes.icon || \"fa-rocket\";\n      // {string} .icon\n      // this is a reference to a font awesome icon including the `fa-`\n      // example `fa-child` should be stored for the `child` icon to be used\n      // if user wants to get creative they can add more to this field following\n      // these examples https://fontawesome.com/v4/examples/\n\n      this.isSystemObject = toBool(attributes.isSystemObject);\n      // {bool} .isSystemObject\n      // is this one of the integrated System Objects used by our framework?\n      // Some ABApplications and ABObjects are central to the running of the\n      // AppBuilder site.  They are marked with .isSystemObject = true;  It\n      // requires the role \"System Designer\" in order to edit/modify them.\n\n      this.roleAccess = attributes.roleAccess || [];\n      if (!Array.isArray(this.roleAccess)) {\n         this.roleAccess = [this.roleAccess];\n      }\n      this.roleAccess = this.roleAccess.filter((r) => r);\n      // {array}\n      // the {ABSiteRole.id}s of the roles allowed to work with this\n      // ABApplication. (see .isAccessManaged for more info)\n\n      this.isAccessManaged = JSON.parse(attributes.isAccessManaged || false);\n      // {bool} .isAccessManaged\n      // does this Application imploy the more sophisticated  Access\n      // permissions, or the simpler Role access permissions.\n      // {true} : allows an administrator to set which role can View|Edit|Delete\n      //          elements of an application.\n      // {false}: indicates users having one of the .roleAccess values can have\n      //          full access to this application\n\n      this.accessManagers = attributes.accessManagers;\n      if (typeof this.accessManagers == \"string\")\n         this.accessManagers = JSON.parse(this.accessManagers);\n      // {??} .accessManagers\n      // if .isAccessManaged == true, then .accessManagers contain the definitions\n      // of the detailed access permissions.\n\n      this.isTranslationManaged = JSON.parse(\n         attributes.isTranslationManaged || false\n      );\n      this.translationManagers = attributes.translationManagers;\n      if (typeof this.translationManagers == \"string\")\n         this.translationManagers = JSON.parse(this.translationManagers);\n\n      this.isTutorialManaged = JSON.parse(\n         attributes.isTutorialManaged || false\n      );\n      this.tutorialManagers = attributes.tutorialManagers;\n      if (typeof this.tutorialManagers == \"string\")\n         this.tutorialManagers = JSON.parse(this.tutorialManagers);\n\n      this.hintIDs = attributes.json.hintIDs || [];\n      // {array} .hintIDs\n      // All the {ABHint.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABHint}s are included or excluded from\n      // this app.\n\n      this.objectIDs = attributes.json.objectIDs || [];\n      // {array} .objectIDs\n      // All the {ABObject.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABObject}s are included or excluded from this app.\n\n      this.queryIDs = attributes.json.queryIDs || [];\n      // {array} .queryIDs\n      // All the {ABObjectQuery.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABObjectQueries}s are included or excluded from\n      // this app.\n\n      this.datacollectionIDs = attributes.json.datacollectionIDs || [];\n      // {array} .datacollectionIDs\n      // All the {ABDataCollection.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABDataCollection}s are included or excluded from\n      // this app.\n\n      // import all our {ABViewPage}s\n      let newPages = [];\n      (attributes.json.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            newPages.push(this.pageNew(def));\n         } else {\n            this.emit(\n               \"warning\",\n               `App[${this.id}] is referenceing an unknown Page[${id}]`,\n               {\n                  appID: this.id,\n                  pageID: id,\n               }\n            );\n            // console.error(\n            //    `App[${this.id}] is referenceing an unknown Page[${id}]`\n            // );\n         }\n      });\n      this._pages = newPages;\n      // {array} ._pages\n      // an array of all the {ABViewPages} this ABApplication offers as\n      // interfaces for working with our Data.\n      // ABViewPages operate within the confines of an ABApplication so\n      // they are created/stored/accessed from within an ABApplication\n\n      (attributes.json.processIDs || []).forEach((pID) => {\n         var p = this.AB.processByID(pID);\n         if (!p) {\n            this.emit(\n               \"warning\",\n               `Application is referencing an unknown process.`,\n               { appID: this.id, processID: pID }\n            );\n         }\n      });\n\n      this.processIDs = attributes.json.processIDs || [];\n      // {array} .processIDs\n      // an array of all the {ABProcess.id}s referenced by this Application.\n\n      // Object List Settings\n      attributes.json.objectListSettings =\n         attributes.json.objectListSettings || {};\n      this.objectListSettings = this.objectListSettings || {};\n      this.objectListSettings.isOpen = JSON.parse(\n         attributes.json.objectListSettings.isOpen || false\n      );\n      this.objectListSettings.searchText =\n         attributes.json.objectListSettings.searchText || \"\";\n      this.objectListSettings.sortDirection =\n         attributes.json.objectListSettings.sortDirection || \"asc\";\n      this.objectListSettings.isGroup = JSON.parse(\n         attributes.json.objectListSettings.isGroup || false\n      );\n\n      // let the MLClass now process the translations:\n      // transition issues:\n      attributes.translations =\n         attributes.translations || attributes.json.translations;\n\n      super.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   get ViewManager() {\n      return ABViewManager;\n   }\n\n   /// ABApplication data methods\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABApplication is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   isAccessibleForRoles(roles) {\n      var foundRole = false;\n\n      // if we are on the basic Role assignments:\n      if (!this.isAccessManaged) {\n         (roles || []).forEach((r) => {\n            if (this.roleAccess.indexOf(r.uuid || r) > -1) {\n               foundRole = true;\n            }\n         });\n         return foundRole;\n      }\n\n      // isAccessManaged has been set, so 2 kinds of ppl can\n      // see this App\n      // 1) an AccessManager\n      if (parseInt(this.accessManagers.useRole)) {\n         (roles || []).forEach((r) => {\n            if (this.accessManagers.role.indexOf(r.uuid || r) > -1) {\n               foundRole = true;\n            }\n         });\n      }\n\n      // stop here if found.\n      if (foundRole) return foundRole;\n\n      // 2) someone who has a role that can see one of it's pages.\n      // scan each Page of this Application\n      (this.pages() || []).forEach((p) => {\n         // check to see if that page.isAccessibleForRoles()\n         if (p.isAccessibleForRoles(roles)) {\n            foundRole = true;\n         }\n      });\n      return foundRole;\n   }\n\n   get isWebApp() {\n      return this.appType == \"web\";\n   }\n\n   get isMobile() {\n      return this.appType == \"mobile\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      let versionData = this.json.versionData;\n\n      this.json = super.toObj();\n\n      this.json.name = this.name;\n\n      this.json.versionData = versionData;\n\n      this.json.objectIDs = this.objectIDs;\n\n      this.json.objectListSettings = this.objectListSettings;\n\n      this.json.hintIDs = this.hintIDs;\n\n      this.json.queryIDs = this.queryIDs;\n\n      this.json.datacollectionIDs = this.datacollectionIDs;\n\n      this.json.pageIDs = (this._pages || []).map((p) => p.id);\n\n      this.json.processIDs = this.processIDs || [];\n\n      // // for each MobileApp: compile to json\n      // var currApps = [];\n      // this._mobileApps.forEach((app) => {\n      //    currApps.push(app.toObj())\n      // })\n      // this.json.mobileApps = currApps;\n\n      return {\n         id: this.id,\n         type: this.type || \"application\",\n         appType: this.appType || \"web\",\n         name: this.name,\n         icon: this.icon,\n         isSystemObject: this.isSystemObject,\n         json: this.json,\n         roleAccess: this.roleAccess,\n         translations: this.json.translations,\n         isAccessManaged: this.isAccessManaged,\n         isTranslationManaged: this.isTranslationManaged,\n         isTutorialManaged: this.isTutorialManaged,\n         accessManagers: this.accessManagers,\n         translationManagers: this.translationManagers,\n         tutorialManagers: this.tutorialManagers,\n      };\n   }\n\n   ///\n   /// Mobile Apps\n   ///\n\n   ///\n   /// Datacollections\n   ///\n\n   // datacollectionNew(values) {\n   //    return new ABDataCollectionCore(values, this);\n   // }\n\n   datacollectionsExcluded(filter = () => true) {\n      return this.AB.datacollections((o) => {\n         return this.datacollectionIDs.indexOf(o.id) == -1;\n      }).filter(filter);\n   }\n\n   datacollectionsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.datacollections((o) => {\n         return this.datacollectionIDs.indexOf(o.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Objects\n   ///\n\n   objectsExcluded(filter = () => true) {\n      return this.AB.objects((o) => {\n         return this.objectIDs.indexOf(o.id) == -1;\n      }).filter(filter);\n   }\n\n   objectsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.objects((o) => {\n         return this.objectIDs.indexOf(o.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Hints\n   ///\n\n   hintsExcluded(filter = () => true) {\n      return this.AB.hints((h) => {\n         return this.hintIDs.indexOf(h.id) == -1;\n      }).filter(filter);\n   }\n\n   hintsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.hints((h) => {\n         return this.hintIDs.indexOf(h.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   /**\n    * @method connectedObjects()\n    *\n    * return an array of all the connected ABObjects for a given ABObject.\n    *\n    * @param {string} id\n    *        an ID of an ABObject\n    * @return {array}   array of options for webix select\n    *         [ {id, value}, ... ]\n    */\n   connectedObjects(id) {\n      console.error(\n         \"ABApplicationCore.connectedObjects(): who is calling this?\"\n      );\n\n      if (id == \"\") return [];\n\n      // Determine the object from the ID\n      var myObj = this.AB.objectByID(id);\n\n      // Get all the connected Fields for that object\n      var connectedFields = myObj.connectFields();\n      // Store the related fields associatively inside their related Objects ID\n      var connectedObj = {};\n      connectedFields.forEach((f) => {\n         connectedObj[f.settings.linkObject] = this.AB.objectByID(\n            f.settings.linkObject\n         );\n      });\n      // Look up the objects by their ID and push them in an options array\n      var linkedObjects = [];\n      Object.keys(connectedObj).forEach(function (key /*, index */) {\n         linkedObjects.push({\n            id: this[key].id,\n            value: this[key].label,\n         });\n      }, connectedObj /* = this. inside fn */);\n\n      return linkedObjects;\n   }\n\n   /**\n    * @method connectedFields()\n    * return an array of all the connected ABFields for a given ABObject\n    * @param {string} currObjID\n    *        an ID of the current ABObject\n    * @param {string} linkedObjectID\n    *        an ID of the linked ABObject\n    * @return {array}\n    *        array of options for webix select\n    */\n   connectedFields(currObjID, linkedObjectID) {\n      console.error(\"!!! Who is calling this?\");\n\n      // Determine the object from the currObjID\n      var myObj = this.AB.objectByID(currObjID);\n\n      // Get all the connected Fields for our object that match the linkedObjectID\n      var connectedFields = myObj.connectFields(\n         (f) => f.settings.linkObject == linkedObjectID\n      );\n      // Build an arry of options for the webix select\n      var linkedFields = [];\n      connectedFields.forEach((f) => {\n         linkedFields.push({ id: f.columnName, value: f.label });\n      });\n\n      return linkedFields;\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    * return an array of all the ABViewPages for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABViewPages that this fn\n    *        returns true for.\n    * @param {boolean} deep\n    *        flag to search in sub pages\n    * @return {array}\n    *        array of ABViewPages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._pages || this._pages.length < 1) return result;\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         // function searchDeep(curr) {\n         //    let resultsCurr = curr._pages.filter(filter);\n\n         //    for (let p of curr._pages) {\n         //       let resultsP = searchDeep(p);\n         //       if (resultsP.length) {\n         //          resultsCurr = resultsCurr.concat(resultsP);\n         //       }\n         //    }\n         //    // if we get here, end\n         //    return resultsCurr;\n         // }\n\n         // result = searchDeep(this);\n         result = this._searchDeep(this, \"_pages\", filter);\n      }\n      // find root pages\n      else {\n         result = (this._pages || []).filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method _searchDeep()\n    * search each node of a tree and return all matches that pass the provided\n    * filter.\n    * @param {AB*} curr\n    *        An object that contains a tree structure.\n    * @param {string} key\n    *        The curr[key] reference of the array of items to search\n    * @param {function} filter\n    *        The curr[key].filter(filter) that returns true/false if a node is\n    *        to be included in the result.\n    * @return {array}\n    */\n   _searchDeep(curr, key, filter) {\n      let items = curr[key] ?? [];\n      let resultsCurr = items.filter?.(filter) ?? [];\n\n      for (let p of items) {\n         let resultsP = this._searchDeep(p, key, filter);\n         if (resultsP.length) {\n            resultsCurr = resultsCurr.concat(resultsP);\n         }\n      }\n\n      return resultsCurr;\n   }\n\n   ///\n   /// Processes\n   ///\n\n   /**\n    * @method processes()\n    * return an array of all the ABProcesses for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABProcesses that\n    *        this fn returns true for.\n    * @return {array}\n    *        array of ABProcesses\n    */\n   processes(filter = () => true) {\n      return this.AB.processes((p) => {\n         return this.processIDs.indexOf(p.id) > -1;\n      }).filter(filter);\n   }\n\n   hasProcess(process) {\n      if (process && process.id) {\n         return this.processIDs.indexOf(process.id) > -1;\n      } else {\n         return false;\n      }\n   }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    * return an array of all the Views for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of Views that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of Views\n    */\n   views(filter) {\n      var result = [];\n      var views = [];\n      var pages = [];\n\n      if (\n         (!this._pages || this._pages.length < 1) &&\n         (!this._views || this._views.length < 1)\n      )\n         return result;\n\n      function lookDeep(view) {\n         if (view._pages && view._pages.length) {\n            view._pages.forEach((p) => {\n               // check the page views recusively\n               var pageViews = p.views(filter, true);\n               // if there was a match store it\n               if (pageViews && pageViews.length > 0) {\n                  result = pageViews;\n               }\n               // if no match move on to the subpages\n               if (result.length < 1) {\n                  // loop through each subpage recursively\n                  var subPages = p.pages(filter, true);\n                  // if there was a match store it\n                  if (subPages && subPages.length > 0) {\n                     result = subPages;\n                  }\n                  if (result.length < 1) {\n                     lookDeep(p);\n                  }\n               }\n            });\n         }\n      }\n\n      // look at views recursively\n      if (filter) {\n         // look at views recursively (views can have subviews and so on)\n         if (this._views) {\n            views = this._views.filter(filter);\n\n            if (views.length < 1) {\n               this._views.forEach((v) => {\n                  var subViews = v.views(filter, true);\n                  if (subViews && subViews.length > 0) {\n                     views = subViews;\n                  }\n               });\n            }\n         }\n\n         // if no views of the root page match now look at the sub pages and their views\n         if (views.length) {\n            result = views;\n         } else {\n            // check the first level subpages\n            result = this._pages.filter(filter);\n\n            // if no match check each pages views and subpages\n            if (result.length < 1) {\n               // looping through pages\n               lookDeep(this);\n            }\n         }\n      }\n      // find all views\n      else {\n         // recusively gather all views on this view\n         if (this._views) {\n            views = this._views;\n            if (views.length) {\n               views.forEach((v) => {\n                  var subViews = v.views(() => true, true);\n                  if (subViews && subViews.length) {\n                     views = views.concat(subViews);\n                  }\n               });\n            }\n         }\n\n         // recursively gather all pages and their views\n         if (this._pages) {\n            pages = this._pages;\n            if (pages.length) {\n               pages.forEach((p) => {\n                  // grab all views on this page\n                  var pageViews = p.views(() => true, true);\n                  if (pageViews && pageViews.length) {\n                     views = views.concat(pageViews);\n                  }\n                  // grab all subpages on this page\n                  var subPages = p.pages(() => true, true);\n                  if (subPages && subPages.length) {\n                     pages = pages.concat(subPages);\n                     subPages.forEach((sub) => {\n                        var subViews = sub.views(() => true, true);\n                        if (subViews && subViews.length) {\n                           views = views.concat(subViews);\n                        }\n                     });\n                  }\n               });\n            }\n         }\n\n         result = result.concat(pages, views);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewAll()\n    * return a list of all the {ABViewxxx} classes available.\n    * @return {array} of ABView objects\n    */\n   viewAll(fn = () => true) {\n      return this.ViewManager.allViews(fn);\n   }\n\n   ///\n   /// Queries\n   ///\n\n   /**\n    * queriesExcluded()\n    * return a list of ABObjectQuery(s) that are not included in this\n    * ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which queries to return.\n    * @return {array}\n    */\n   queriesExcluded(filter = () => true) {\n      return this.AB.queries((q) => {\n         return this.queryIDs.indexOf(q.id) == -1;\n      }).filter(filter);\n   }\n\n   /**\n    * queriesIncluded()\n    * return a list of ABObjectQuery(s) that are included in this\n    * ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which queries to return.\n    * @param {fn} [sort] function to sort by, default is .label\n    * @return {array}\n    */\n   queriesIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.queries((q) => {\n         return this.queryIDs.indexOf(q.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Roles\n   ///\n\n   /**\n    * @method roles()\n    * return an array of all the ABRole for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which roles to return.\n    * @return {array}   array of ABRole\n    */\n   // roles(filter = () => true) {\n   //    return (this.role || []).filter(filter);\n   // }\n\n   /**\n    * @method urlResolve()\n    * given an object pointer, return the specific object referenced.\n    * pointer must start with a '#', use '/' as delimiters, and either\n    * reference an object's .id, or an object's .property.\n    * for example:\n    * #/_objects   : resolves to the array of ._objects pointed to by this\n    *               application.\n    * #/_objects/[object.id] : reolved to a specific object\n    * #/_objects/[object.id]/_fields/[field.id] : resolves to a specific data field\n    *               refereced by object.id.\n    *\n    * @param {string} pointer : the string url referencing the object you want\n    *                       to retrieve.\n    * @return {obj}\n    */\n   urlResolve(pointer) {\n      var parts = pointer.split(\"/\");\n\n      var parseStep = (obj, steps) => {\n         // we're done.  obj is what we are looking for:\n         if (steps.length == 0) {\n            return obj;\n         }\n\n         // pull the next step key:\n         var key = steps.shift();\n\n         // special case, \"#\" makes sure we are talking about the\n         // Application object\n         if (key == \"#\") {\n            return parseStep(this, steps);\n         }\n\n         // if obj is an [], then key should be an .id reference to\n         // lookup:\n         if (Array.isArray(obj)) {\n            obj = obj.filter(function (o) {\n               return o.id == key;\n            })[0];\n            return parseStep(obj, steps);\n         }\n\n         // otherwise obj should be an {} and key a property:\n         if (obj && obj[key]) {\n            return parseStep(obj[key], steps);\n         }\n\n         if (key == \"_objects\") {\n            console.error(new Error(\"REFACTOR: old objectBy url reference:\"));\n\n            // This can be gotten from our AB\n            var id = steps.shift();\n            return parseStep(this.AB.objectByID(id), steps);\n         }\n\n         // if we got here, there is an error!\n         // console.error('!!! failed to lookup url:'+pointer);\n         console.error(\"!!! failed to lookup url:\" + pointer);\n         return null;\n      };\n\n      return parseStep(this, parts);\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer for this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      // NOTE: if we need to expand this to search across\n      // applications, then add in this application.id here:\n      if (acrossApp) return \"#/\" + this.id + \"/\";\n      else return \"#/\";\n   }\n\n   /**\n    * @method urlObject()\n    * return the url pointer for objects in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlObject(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_objects/\";\n   }\n\n   /**\n    * @method urlView()\n    * return the url pointer for pages in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPage(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_pages/\";\n   }\n\n   /**\n    * @method urlQuery()\n    * return the url pointer for queries in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlQuery(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_queries/\";\n   }\n\n   /**\n    * @method version()\n    * return the current version of this Application.\n    * Version information is in format \"{Major}.{Minor}.{patch}\"\n    * @return {string}\n    */\n   get version() {\n      return this.json?.versionData?.versionNumber ?? \"0.0.0\";\n   }\n\n   ///\n   ///   Object List Settings\n   ///\n   get objectlistIsOpen() {\n      return this.objectListSettings.isOpen;\n   }\n\n   set objectlistIsOpen(isOpen) {\n      this.objectListSettings.isOpen = isOpen;\n   }\n\n   get objectlistSearchText() {\n      return this.objectListSettings.searchText;\n   }\n\n   set objectlistSearchText(searchText) {\n      this.objectListSettings.searchText = searchText;\n   }\n\n   get objectlistSortDirection() {\n      return this.objectListSettings.sortDirection;\n   }\n\n   set objectlistSortDirection(sortDirection) {\n      this.objectListSettings.sortDirection = sortDirection;\n   }\n\n   get objectlistIsGroup() {\n      return this.objectListSettings.isGroup;\n   }\n\n   set objectlistIsGroup(isGroup) {\n      this.objectListSettings.isGroup = isGroup;\n   }\n\n   ///\n   /// Instance generators\n   ///\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABViewPage that is tied to this\n    * ABApplication.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      // make sure this is an ABViewPage description\n      // values.key = ABViewPageCore.common().key;\n      values.key = \"page\";\n\n      return this.ViewManager.newView(values, this, null);\n   }\n\n   /**\n    * @method pageByID()\n    * return pages from the given {id}\n    * @param {string} id\n    *        the uuid of the page to return.\n    * @param {bool} deep\n    *        should this search deep (through all our children's children)\n    * @return {ABViewPage}\n    */\n   pageByID(id, deep = true) {\n      return this.pages((f) => f.id == id, deep)[0];\n   }\n\n   /**\n    * @method viewNew()\n    *\n    * return an instance of a new (unsaved) ABView.\n    *\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return this.ViewManager.newView(values, application, parent);\n   }\n\n   ///\n   /// Utilities\n   ///\n\n   cloneDeep(/* object */) {\n      var errorDepreciated = new Error(\n         \"ABApplicationCore.cloneDeep(): Depreciated!  Use AB.cloneDeep() instead.\"\n      );\n      throw errorDepreciated;\n\n      // return JSON.parse(JSON.stringify(object));\n   }\n};\n","/**\n * ABApplicationMobileCore\n *\n * This is the core ABApplicationMobile class that manages the common operations\n * of a Mobile PWA ABApplication.\n */\n\n// webpack can handle 'require()' statements, but node can't handle import\n// so let's use require():\nconst ABViewManagerMobile = require(\"../platform/ABViewManagerMobile\");\nvar ABApplication = require(\"../platform/ABApplication\");\n\nmodule.exports = class ABApplicationMobileCore extends ABApplication {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      this.appType = \"mobile\"; // Just making sure.\n      this.networkType = attributes.networkType;\n\n      this.pageDefault = attributes.pageDefault;\n      // {uuid}\n      // the {ABMobilePage}.uuid of the page that is our default Page.\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   get ViewManager() {\n      return ABViewManagerMobile;\n   }\n\n   pageNew(def) {\n      console.error(\"TODO: pageNew for ApplicationMobile\");\n      return null;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var json = super.toObj();\n      json.appType = \"mobile\";\n      json.networkType = this.networkType;\n\n      json.pageDefault = this.pageDefault;\n\n      return json;\n   }\n};\n","/*\n * ABDataCollection\n * Defines a set of data that other parts of the Application can work with.\n * it can point to either an ABObject, or ABObjectQuery, and can have an\n * filter, and sorts defined.\n *\n *\n *\n */\n// const ABEmitter = require(\"../platform/ABEmitter\");\nconst ABMLClass = require(\"../platform/ABMLClass\");\n\n// const ABObject = require(\"../platform/ABObject\");\n// const ABObjectQuery = require(\"../platform/ABObjectQuery\");\n// const RowFilter = require(\"../platform/RowFilter\");\n\nvar DefaultValues = {\n   id: \"uuid\",\n   label: \"\", // label\n   object: {}, // json of ABObject\n   query: {}, // json of ABObjectQuery\n   settings: {\n      datasourceID: \"\", // id of ABObject or ABObjectQuery\n      linkDatacollectionID: \"\", // id of ABDatacollection\n      linkFieldID: \"\", // id of ABField\n      followDatacollectionID: \"\", // id of ABDatacollection\n      objectWorkspace: {\n         filterConditions: {\n            // array of filters to apply to the data table\n            glue: \"and\",\n            rules: [],\n         },\n         sortFields: [], // array of columns with their sort configurations\n      },\n      loadAll: false,\n      // preventPopulate: false, depreciating in favour of populate\n      populate: true, // true/false or array of columns to populate.\n      isQuery: false, // if true it is a query, otherwise it is a object.\n\n      fixSelect: \"\", // _CurrentUser, _FirstRecord, _FirstRecordDefault or row id\n\n      syncType: 1, // 1 (Server), 2 (Client)\n   },\n};\n\nconst QueuedOperations = [];\n// {array} of operations that we want to perform but allow some space\n// between operations.\nvar _queueTimer = null;\n\nfunction runQueue() {\n   // if (!_queueTimer) {\n   //    _queueTimer = setInterval(() => {\n   //       runQueue();\n   //    }, 20);\n   // }\n   if (QueuedOperations.length == 0) {\n      // stop\n      // clearInterval(_queueTimer);\n      _queueTimer = null;\n      return;\n   }\n   var op = QueuedOperations.shift();\n   op.fn();\n   _queueTimer = setTimeout(runQueue, op.timeout);\n}\nfunction queueOperation(fn, timeout = 20) {\n   QueuedOperations.push({ fn, timeout });\n   if (!_queueTimer) {\n      runQueue();\n   }\n}\n\nmodule.exports = class ABDataCollectionCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      attributes = attributes || {};\n\n      // this.application = application;\n\n      this.fromValues(attributes);\n\n      this.__dataCollection = this._dataCollectionNew([]);\n      // {DataCollection}\n      // This is a working instance of a DataCollection, not an {ABDatacCollection}\n      // On web/mobile this is a webix component.  So keep the creation as part of\n      // the platform/ABDataCollection implementation.\n\n      // Set filter value\n      this.refreshFilterConditions();\n\n      this.__bindComponentIds = [];\n      this.__flexComponentIds = [];\n\n      // refresh a data collection\n      // this.init();\n\n      // mark data status does not be initialized\n      this._dataStatus = this.dataStatusFlag.notInitial;\n\n      this.__filterCond = null;\n      // {QueryCondition}\n      // A passed in Query Condition for filtering our DataCollection.\n      // This value is ANDed with our normal filter conditions.\n\n      this.__model = null;\n      // {ABModel}\n      // An instance of the ABModel used for this DataCollection to\n      // access data on the server.\n   }\n\n   /**\n    * contextKey()\n    *\n    * return a unique key that represents data from/for this type of object.\n    *\n    * used when creating Network jobs and needing to be notified when a job\n    * is complete.  We send a contextKey() to the Network job and then listen\n    * for it to know when it is complete.\n    * @return {string}\n    */\n   static contextKey() {\n      return \"datacollection\";\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id;\n      // {string} .id\n      // the uuid of this ABDataCollection Definition.\n\n      this.name = values.name || null;\n      // {string} .name\n      // the unchanging name of this ABDataCollection\n\n      this.type = values.type || \"datacollection\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      values.settings = values.settings || {};\n      this.settings = this.settings || {};\n      // {obj} .settings\n      // the specific operation values for this ABDataCollection\n\n      this.settings.linkDatacollectionID =\n         values.settings.linkDatacollectionID ||\n         DefaultValues.settings.linkDatacollectionID;\n      // {string} .settings.linkDatacollectionID\n      // the uuid of another ABDataCollection that provides the link/trigger\n      // for filtering the values of this ABDataCollection.\n\n      this.settings.linkFieldID =\n         values.settings.linkFieldID || DefaultValues.settings.linkFieldID;\n      // {string} .settings.linkFieldID\n      // this.fieldLink is intended to be the way to connect to the column in\n      // the datacollectionLink that we are following.  However this field\n      // is the field in this.datasource that connects to the field in\n      // datacollectionLink that has the value we are linked to.\n      // So, If this DC(ObjB), and our datacollectionLink (ObjA)\n      // then this.fieldLink = ObjB->FieldB\n      // To find the corresponding field in ObjA, we do:\n      // this.fieldLink.fieldLink  (ObjA->FieldA)\n\n      this.settings.followDatacollectionID =\n         values.settings.followDatacollectionID ||\n         DefaultValues.settings.followDatacollectionID;\n      // {string} .settings.followDatacollectionID\n      // the uuid of another ABDataCollection that provides the follow cursor data collection\n\n      this.settings.objectWorkspace = values.settings.objectWorkspace || {\n         filterConditions:\n            DefaultValues.settings.objectWorkspace.filterConditions,\n         sortFields: DefaultValues.settings.objectWorkspace.sortFields,\n      };\n      // {obj} .settings.objectWorkspace\n      // the default settings for what is shown in the AppBuilder's\n      // DataCollection workspace\n\n      this.settings.fixSelect = values.settings.fixSelect;\n\n      // Convert to boolean\n      this.settings.loadAll = JSON.parse(\n         values.settings.loadAll || DefaultValues.settings.loadAll\n      );\n      // {bool} .settings.loadAll\n      // do we load all the data at one time? false == load by pages.\n\n      this.settings.isQuery = JSON.parse(\n         values.settings.isQuery || DefaultValues.settings.isQuery\n      );\n      // {bool} .settings.isQuery\n      // is the data source for this ABDataCollection based upon an\n      // ABObjectQuery?\n\n      this.settings.populate = (() => {\n         // First check .populate\n         if (values.settings.populate != undefined) {\n            return values.settings.populate;\n            // Then check legacy .preventPopulate\n         } else if (\n            values.settings.preventPopulate == true ||\n            values.settings.preventPopulate == \"1\"\n         ) {\n            return false;\n         } else return DefaultValues.settings.populate;\n      })();\n      // {bool | array} populate\n      // Control whcih related connections to populate. Default, true, populates\n      // all connections. False loads no connnections. Also accepts an array of\n      // column names to load specefic connections.\n\n      // Convert to number\n      this.settings.syncType = parseInt(\n         values.settings.syncType || DefaultValues.settings.syncType\n      );\n      // {int} .settings.syncType\n      // how is the data between this ABDataCollection and it's\n      // .datasource synced?\n\n      this.__datasource = null;\n      // {obj} .__datasource\n      // the reference to the ABObject/ABObjectQuery that this ABDataCollection\n      // is based off of.\n\n      this.settings.datasourceID =\n         values.settings.datasourceID || DefaultValues.settings.datasourceID;\n      // {string} .settings.datasourceID\n      // the uuid of the .__datasource object to use\n\n      // now lookup and reference the proper datasource\n      if (this.settings.datasourceID) {\n         // check for an ABObject\n         var obj = this.AB.objectByID(this.settings.datasourceID);\n         if (!obj) {\n            // this must be an ABObjectQuery then ...\n            obj = this.AB.queryByID(this.settings.datasourceID);\n         }\n\n         if (obj) {\n            this.__datasource = obj;\n            this.settings.isQuery = obj.type === \"query\";\n            if (this.settings.isQuery) {\n               if (this.__datasource.isGroup) {\n                  if (!this.__treeCollection)\n                     this.__treeCollection = this._treeCollectionNew();\n                  // {TreeCollection}\n                  // This is a webix TreeCollection (or similar)\n                  // keep it's implementation as part of the platform\n\n                  this.__isGroup = true;\n               }\n            }\n         } else {\n            console.error(\n               `ABDataCollection[${this.name}][${this.id}] unable to find datasource [${this.settings.datasourceID}]`\n            );\n         }\n      }\n\n      // // Populate data source: ABObject or ABObjectQuery\n      // if (values.query && values.query[0]) {\n      //    this.__datasource = new ABObjectQuery(\n      //       values.query[0],\n      //       this.application\n      //    );\n      //    this.settings.isQuery = true;\n\n      //    if (this.__datasource.isGroup) {\n      //       if (!this.__treeCollection)\n      //          this.__treeCollection = this._treeCollectionNew();\n\n      //       this.__isGroup = true;\n      //    }\n      // } else if (values.object && values.object[0]) {\n      //    this.__datasource = new ABObject(values.object[0], this.application);\n      //    this.settings.isQuery = false;\n      // }\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj(); // untranslate the object\n\n      return {\n         id: this.id,\n         name: this.name || this.label,\n         type: this.type || \"datacollection\",\n         settings: this.AB.cloneDeep(this.settings || {}),\n         translations: obj.translations,\n      };\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABDatacollection with it's parent\n    *\n    *\n    * @return {Promise}\n    *      .resolve( {this} )\n    */\n   async save() {\n      if (!this.id) {\n         this.label = this.label || this.name;\n      }\n      await super.save();\n      return this;\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABDatacollection\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      var removeFromApplications = () => {\n         return new Promise((next, err) => {\n            // this.AB.applications().then((apps) => {\n\n            const apps = this.AB.applications();\n            // NOTE: apps is a webix datacollection\n\n            var allRemoves = [];\n\n            var appsWithObject = apps.filter((a) => {\n               return a.datacollectionsIncluded((o) => o.id == this.id);\n            });\n            appsWithObject.forEach((app) => {\n               allRemoves.push(app.datacollectionRemove(this));\n            });\n\n            return Promise.all(allRemoves).then(next).catch(err);\n            // });\n         });\n      };\n\n      return Promise.resolve()\n         .then(() => {\n            return removeFromApplications();\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @property $dc\n    * return the underlying webix datacollection\n    * @return {webix.datacollection}\n    */\n   get $dc() {\n      return this.__dataCollection;\n   }\n\n   /**\n    * @property datasource\n    * return a object of this component.\n    *\n    * @return {ABObject|ABObjectQuery}\n    */\n   get datasource() {\n      if (!this.__datasource) {\n         if (this.id && this.name) {\n            // occassionally we have blank DCs (without .id or .name)\n            // and I don't want to see errors for those\n            var err = new Error(\n               `DataCollection[${this.name}][${this.id}] missing reference datasource`\n            );\n            this.AB.notify(\"builder\", err, { datacollection: this.toObj() });\n         }\n         return null;\n      }\n      var obj = this.AB.objectByID(this.__datasource.id);\n      if (!obj) {\n         obj = this.AB.queryByID(this.__datasource.id);\n      }\n      return obj;\n   }\n\n   /**\n    * @property datasource\n    * set a object to data collection\n    *\n    * @param {ABObject|ABObjectQuery} object\n    */\n   set datasource(object) {\n      this.__datasource = object;\n\n      this.refreshFilterConditions();\n   }\n\n   /**\n    * @property sourceType\n    * return type of source.\n    *\n    * @return {string} - 'object' or 'query'\n    */\n   get sourceType() {\n      return this.settings.isQuery ? \"query\" : \"object\";\n   }\n\n   /**\n    * @method datacollectionLink\n    * return a ABDatacollection that link of this.\n    *\n    * @return {ABDatacollection}\n    */\n   get datacollectionLink() {\n      if (!this.AB) return null;\n\n      return this.AB.datacollectionByID(this.settings.linkDatacollectionID);\n   }\n\n   /**\n    * @property fieldLink\n    * return a ABFieldConnect field that link of this.\n    *\n    * @return {ABFieldConnect}\n    */\n   get fieldLink() {\n      let object = this.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.linkFieldID);\n   }\n\n   /**\n    * @property model\n    * return a source model\n    *\n    * @return ABModel\n    */\n   get model() {\n      if (!this.__model) {\n         let object = this.datasource; // already notified\n\n         this.__model = object ? object.model() : null;\n      }\n      return this.__model;\n   }\n\n   get dataStatusFlag() {\n      return {\n         notInitial: 0,\n         initializing: 1,\n         initialized: 2,\n      };\n   }\n\n   get dataStatus() {\n      return this._dataStatus;\n   }\n\n   ///\n   /// Cursor\n   ///\n\n   setCursor(itemId) {\n      // If the static cursor is set, then this DC could not set cursor to other rows\n      if (\n         this.settings.fixSelect &&\n         (this.settings.fixSelect != \"_FirstRecordDefault\" ||\n            this.settings.fixSelect == itemId)\n      )\n         return;\n\n      if (this.__treeCollection) {\n         // set cursor of tree collection\n         this.setCursorTree(itemId);\n\n         // pull current row id\n         let currTreeId = this.__treeCollection.getCursor();\n         if (currTreeId) {\n            let currTreeItem = this.__treeCollection.getItem(currTreeId);\n            if (currTreeItem) itemId = currTreeItem._itemId;\n         }\n      }\n\n      let dc = this.__dataCollection;\n      if (dc) {\n         // Store the old cursor id\n         this.__previousCursorId = dc.getCursor();\n\n         // clear cursor\n         if (itemId == null) {\n            dc.setCursor(null);\n         }\n         // If set rowId equal current cursor, it will not trigger .onAfterCursorChange event\n         else if (dc.getCursor() == itemId) {\n            this.emit(\"changeCursor\", this.getCursor());\n         }\n         // set new cursor\n         else if (dc.exists(itemId)) {\n            dc.setCursor(itemId);\n         }\n      }\n   }\n\n   /**\n    *\n    * @param {string|number} itemId - Id of item or Id of row data\n    */\n   setCursorTree(itemId) {\n      let tc = this.__treeCollection;\n      if (tc && tc.getCursor() != itemId) {\n         // If it is id of tree collection, then find row id of data\n         let treeCursor = tc.find({ id: itemId }, true);\n         if (treeCursor) {\n            tc.setCursor(itemId);\n         }\n         // If it is not id of tree collection, then find/set root of data\n         else {\n            let treeItem = tc.find({ _itemId: itemId, $parent: 0 }, true);\n            if (treeItem) tc.setCursor(treeItem.id);\n            else tc.setCursor(null);\n         }\n      }\n   }\n\n   getCursor(treeCursor = false) {\n      // Cursor of tree collection\n      if (treeCursor && this.__treeCollection) {\n         let currId = this.__treeCollection.getCursor();\n         if (currId) {\n            let currItem = this.__treeCollection.getItem(currId);\n\n            // filter current id for serialize\n            this.__treeCollection.filter(\n               (item) => item._itemId == currItem._itemId\n            );\n\n            // pull item with child items\n            let currItemAndChilds =\n               this.__treeCollection.serialize()[0] || null;\n\n            // refresh filter\n            this.refreshLinkCursor();\n\n            return currItemAndChilds;\n         }\n      }\n\n      let dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      let currId = dc.getCursor();\n      let currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   getFirstRecord() {\n      var dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      var currId = dc.getFirstId();\n      var currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   getNextRecord(record) {\n      var dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      var currId = dc.getNextId(record.id);\n      var currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   /**\n    * @method refreshLinkCursor\n    *    If the data collection is bound to another and it is the child connection\n    *    it finds it's parents current set cursor and then filters its data\n    *    based off of the cursor.\n    *\n    *    In cases where a DC has set .loadAll, our job is to filter existing data\n    *    that is already loaded in the internal __dataCollection.\n    *\n    *    Otherwise this is not the place to trigger a data refresh.  We depend\n    *    on other mechanisms (.reloadData(), datacollection .select()) to trigger\n    *    an update.\n    */\n   refreshLinkCursor(force = false) {\n      // our filter conditions need to know there was an updated cursor.\n      // some of our filters are based upon our linked data.\n      this.refreshFilterConditions();\n\n      // NOTE: If DC does not set load all data, then it does not need to filter by the parent DC.\n      // because it fetch data when the cursor of the parent DC changes.\n      if (!this.settings.loadAll && !force) return;\n\n      // do not set the filter unless this dc is initialized \"dataStatusFlag==2\"\n      // if (this.dataStatus != this.dataStatusFlag.initialized) return;\n\n      // filter the data in the data collection\n      // using its parents current cursor because all the data in this child\n      // data collection has been loaded and the frontend can decide what is\n      // seen or not seen\n      let linkCursor;\n      let dvLink = this.datacollectionLink;\n      if (dvLink) {\n         linkCursor = dvLink.getCursor();\n      }\n\n      let filterData = (rowData) => {\n         // This row is not loaded yet. It will be loaded when scrolling.\n         if (rowData == null) return true;\n\n         // if link dc cursor is null:\n         // ... if there's no parent show all data\n         // ... if we have a parent hide all data - address cases where user see\n         //     unexpected data (ns_app#318) - should this be a DC setting?\n         if (!linkCursor) return dvLink ? false : true;\n         else return this.isParentFilterValid(rowData);\n      };\n\n      if (this.__dataCollection) this.__dataCollection.filter(filterData);\n      if (this.__treeCollection) this.__treeCollection.filter(filterData);\n   }\n\n   setStaticCursor() {\n      if (this.settings.fixSelect) {\n         // set cursor to the current user\n         if (this.settings.fixSelect == \"_CurrentUser\") {\n            var username = this.currentUserUsername();\n            var userFields = this.datasource.fields((f) => f.key == \"user\");\n\n            // find a row that contains the current user\n            var row = this.__dataCollection.find((r) => {\n               var found = false;\n\n               userFields.forEach((f) => {\n                  if (found || r[f.columnName] == null) return;\n\n                  if (r[f.columnName].filter) {\n                     // Array - isMultiple\n                     found =\n                        r[f.columnName].filter((data) => data.id == username)\n                           .length > 0;\n                  } else if (r[f.columnName] == username) {\n                     found = true;\n                  }\n               });\n\n               return found;\n            }, true);\n\n            // set a first row of current user to cursor\n            if (row) {\n               this.__dataCollection.setCursor(row.id);\n\n               this.setCursorTree(row.id);\n            }\n         } else if (\n            this.settings.fixSelect == \"_FirstRecord\" ||\n            this.settings.fixSelect == \"_FirstRecordDefault\"\n         ) {\n            // // find a row that contains the current user\n            // var row = this.__dataCollection.find((r) => {\n\n            //  var found = false;\n            //  if (!found) {\n            //    found = true;\n            //    return true; // just give us the first record\n            //  }\n\n            // }, true);\n\n            // // set a first row of current user to cursor\n            // if (row)\n            //  this.__dataCollection.setCursor(row.id);\n\n            let currRowId = this.__dataCollection.getCursor();\n            if (\n               !currRowId ||\n               (currRowId && !this.__dataCollection.exists(currRowId))\n            ) {\n               // If current cursor is filtered by parent DC, then select new cursor\n\n               // set a first row to cursor\n               let rowId = this.__dataCollection.getFirstId();\n               // if (rowId) {\n               this.__dataCollection.setCursor(rowId || null);\n\n               if (this.__dataCollection.data.count() == 0) {\n                  this.emit(\"collectionEmpty\", {});\n               }\n\n               this.setCursorTree(rowId);\n               // }\n            }\n         } else {\n            this.__dataCollection.setCursor(this.settings.fixSelect);\n\n            this.setCursorTree(this.settings.fixSelect);\n         }\n      }\n\n      // Set the cursor to the first row\n      if (this.isCursorFollow) {\n         const rowId = this.__dataCollection.getFirstId();\n         this.setCursor(rowId || null);\n         this.setCursorTree(rowId || null);\n\n         // If no data but the parent DC set cursor, then this should be reload data.\n         const dcFollow = this.datacollectionFollow;\n         if (!rowId && dcFollow?.getCursor()) {\n            this.loadData();\n         }\n      }\n   }\n\n   ///\n   /// Data\n   ///\n\n   /**\n    * @method filterCondition()\n    * Provide a temporary filter condition to modify the data we are returning.\n    * Used by User search criterias.\n    * @param {json} cond\n    *        A valid QueryCondition to filter the response.\n    */\n   filterCondition(cond = null) {\n      this.__filterCond = cond;\n   }\n\n   init() {\n      // prevent initialize many times\n      if (this.initialized) return;\n      this.initialized = true;\n\n      if (!this.__dataCollection.___AD.onAfterCursorChange) {\n         this.__dataCollection.___AD.onAfterCursorChange =\n            this.__dataCollection.attachEvent(\"onAfterCursorChange\", () => {\n               // debugger;\n               var currData = this.getCursor();\n\n               this.emit(\"changeCursor\", currData);\n            });\n      }\n\n      // relate data functions\n      let isRelated = (relateData, rowId, PK = \"id\") => {\n         if (Array.isArray(relateData)) {\n            return relateData.filter((v) => (v[PK] || v) == rowId).length > 0;\n         } else {\n            return relateData && (relateData[PK] || relateData) == rowId;\n         }\n      };\n\n      // events\n      this.on(\"ab.datacollection.create\", (data) => {\n         // NOTE: UPDATing this process to add another check.\n         // .isCursorFollow only invalidates the 1st half of the routine.\n         // .isCursorFollow STILL needs to follow the 2nd half of the routine\n         // // If this DC is following cursor for other DC, then it should not add the new item to their list.\n         // if (this.isCursorFollow) return;\n\n         let obj = this.datasource;\n         if (!obj) return;\n\n         if (!data || !data.data) return;\n\n         let needAdd = false;\n         let updatedVals = [];\n\n         // Don't do First Step if .isCursorFollow\n         if (!this.isCursorFollow) {\n            // First Step\n            // Does this new entry need to be part of the data we are currently\n            // tracking?  If so, add it.\n            Promise.resolve()\n               .then(() => {\n                  return new Promise((next, bad) => {\n                     // Query\n                     if (obj instanceof this.AB.Class.ABObjectQuery) {\n                        let objList =\n                           obj.objects((o) => o.id == data.objectId) || [];\n\n                        needAdd = objList.length > 0;\n\n                        if (!needAdd) return next();\n\n                        let where = {\n                           glue: \"or\",\n                           rules: [],\n                        };\n\n                        objList.forEach((o) => {\n                           let newDataId = data.data[`${o.PK()}`];\n                           if (!newDataId) return;\n\n                           where.rules.push({\n                              key: `${\n                                 o.alias || obj.objectAlias(o.id)\n                              }.${o.PK()}`,\n                              rule: \"equals\",\n                              value: newDataId,\n                           });\n                        });\n\n                        obj.model()\n                           .findAll({\n                              where: where,\n                           })\n                           .then((newQueryData) => {\n                              updatedVals = newQueryData.data || [];\n                              updatedVals.forEach((v) => {\n                                 delete v.id;\n                              });\n\n                              next();\n                           })\n                           .catch(bad);\n                     }\n                     // Object\n                     else {\n                        needAdd = obj.id == data.objectId;\n                        updatedVals = [data.data];\n                        next();\n                     }\n                  });\n               })\n               .then(() => {\n                  if (needAdd) {\n                     (updatedVals || []).forEach((updatedV) => {\n                        // If this DC uses a query, it pulls refreshed data from the server in the previous step,\n                        // so there is no need to recheck the query's filter.\n                        const skipDatasourceFilter =\n                           obj instanceof this.AB.Class.ABObjectQuery;\n\n                        // filter condition before add\n                        if (!this.isValidData(updatedV, skipDatasourceFilter))\n                           return;\n\n                        // filter the cursor of parent DC\n                        const dcLink = this.datacollectionLink;\n                        if (dcLink && !this.isParentFilterValid(updatedV))\n                           return;\n\n                        // check to see if item already exisits in data collection\n                        // and check to see that we are not loading the data serverside from cursor\n                        if (\n                           !this.__dataCollection.exists(\n                              updatedV[`${obj.PK()}`]\n                           ) &&\n                           !this.__reloadWheres\n                        ) {\n                           this.__dataCollection.add(updatedV, 0);\n                           this.emit(\"create\", updatedV);\n                           // this.__dataCollection.setCursor(rowData.id);\n                        } else if (\n                           !this.__dataCollection.exists(\n                              updatedV[`${obj.PK()}`]\n                           ) &&\n                           this.__reloadWheres\n                        ) {\n                           // debugger;\n                           if (this.isParentFilterValid(updatedV)) {\n                              // we track bound components and flexlayout components\n                              var attachedComponents =\n                                 this.__bindComponentIds.concat(\n                                    this.__flexComponentIds\n                                 );\n                              attachedComponents.forEach((bcids) => {\n                                 // if the reload button already exisits move on\n                                 if ($$(bcids + \"_reloadView\")) {\n                                    return false;\n                                 }\n\n                                 // find the position of the data view\n                                 var pos = 0;\n                                 var parent = $$(bcids).getParentView();\n                                 if ($$(bcids).getParentView().index) {\n                                    pos = $$(bcids)\n                                       .getParentView()\n                                       .index($$(bcids));\n                                 } else if (\n                                    $$(bcids).getParentView().getParentView()\n                                       .index\n                                 ) {\n                                    // this is a data view and it is inside a\n                                    // scroll view that is inside an accodion\n                                    // so we need to go deeper to add the button\n                                    parent = $$(bcids)\n                                       .getParentView()\n                                       .getParentView();\n                                    pos = $$(bcids)\n                                       .getParentView()\n                                       .getParentView()\n                                       .index($$(bcids).getParentView());\n                                 }\n\n                                 // store the datacollection so we can pass it to the button later\n                                 var DC = this;\n                                 // add a button that reloads the view when clicked\n                                 if (parent.addView) {\n                                    var L = this.AB.Label();\n                                    parent.addView(\n                                       {\n                                          id: bcids + \"_reloadView\",\n                                          view: \"button\",\n                                          value: L(\n                                             \"New data available. Click to reload.\"\n                                          ),\n                                          css: \"webix_primary webix_warn\",\n                                          click: function (id, event) {\n                                             DC.reloadData();\n                                             $$(id)\n                                                .getParentView()\n                                                .removeView(id);\n                                          },\n                                       },\n                                       pos\n                                    );\n                                 }\n                              });\n                              // this.emit(\"create\", updatedV);\n                           }\n                        }\n                     });\n\n                     if (\n                        this.__treeCollection // && this.__treeCollection.exists(updatedVals.id)\n                     ) {\n                        this.parseTreeCollection({\n                           data: updatedVals,\n                        });\n                     }\n                  }\n\n                  // ABObject only\n                  if (!(obj instanceof this.AB.Class.ABObjectQuery)) {\n                     // if it is a linked object\n                     let connectedFields = this.datasource.connectFields(\n                        (f) =>\n                           f.datasourceLink &&\n                           f.datasourceLink.id == data.objectId\n                     );\n\n                     // It should always be only one item for ABObject\n                     updatedVals = updatedVals[0];\n\n                     // update relation data\n                     if (\n                        updatedVals &&\n                        connectedFields &&\n                        connectedFields.length > 0\n                     ) {\n                        // various PK name\n                        let PK = connectedFields[0].object.PK();\n                        if (!updatedVals.id && PK != \"id\")\n                           updatedVals.id = updatedVals[PK];\n\n                        this.__dataCollection.find({}).forEach((d) => {\n                           let updateItemData = {};\n\n                           connectedFields.forEach((f) => {\n                              var updateRelateVal = {};\n                              if (f && f.fieldLink) {\n                                 updateRelateVal =\n                                    updatedVals[f.fieldLink.relationName()] ||\n                                    {};\n                              }\n\n                              let rowRelateVal = d[f.relationName()] || {};\n\n                              let valIsRelated = isRelated(\n                                 updateRelateVal,\n                                 d.id,\n                                 PK\n                              );\n\n                              // Relate data\n                              if (\n                                 Array.isArray(rowRelateVal) &&\n                                 rowRelateVal.filter(\n                                    (v) =>\n                                       v == updatedVals.id ||\n                                       v.id == updatedVals.id ||\n                                       v[PK] == updatedVals.id\n                                 ).length < 1 &&\n                                 valIsRelated\n                              ) {\n                                 rowRelateVal.push(updatedVals);\n\n                                 updateItemData[f.relationName()] =\n                                    rowRelateVal;\n                                 updateItemData[f.columnName] = updateItemData[\n                                    f.relationName()\n                                 ].map((v) => v.id || v[PK] || v);\n                              } else if (\n                                 !Array.isArray(rowRelateVal) &&\n                                 (rowRelateVal != updatedVals.id ||\n                                    rowRelateVal.id != updatedVals.id ||\n                                    rowRelateVal[PK] != updatedVals.id) &&\n                                 valIsRelated\n                              ) {\n                                 updateItemData[f.relationName()] = updatedVals;\n                                 updateItemData[f.columnName] =\n                                    updatedVals.id || updatedVals;\n                              }\n                           });\n\n                           // If this item needs to update\n                           if (Object.keys(updateItemData).length > 0) {\n                              this.__dataCollection.updateItem(\n                                 d.id,\n                                 updateItemData\n                              );\n\n                              if (this.__treeCollection)\n                                 this.__treeCollection.updateItem(\n                                    d.id,\n                                    updateItemData\n                                 );\n\n                              this.emit(\n                                 \"update\",\n                                 this.__dataCollection.getItem(d.id)\n                              );\n                           }\n                        });\n                     }\n                  }\n\n                  this.updateRelationalDataFromLinkDC(data.objectId, data.data);\n                  // filter link data collection's cursor\n                  this.refreshLinkCursor();\n                  this.setStaticCursor();\n               });\n         }\n\n         // SECOND Step:\n         // Try to detect if this newly created entry connects to one of the\n         // values this DC is currently managing.  If so, than add this value\n         // to the connection.\n\n         let incomingObj = this.AB.objectByID(data.objectId);\n         if (!incomingObj) return;\n\n         // find any of incomingObj connections that are tied to my object:\n         let connectedFields = incomingObj\n            .connectFields((f) => f.datasourceLink?.id == obj.id)\n            .filter((f) => f); // <-- safety check, no undefined or nulls\n         if (connectedFields.length == 0) return;\n\n         let iPK = incomingObj.PK();\n         let PK = obj.PK();\n         let newData = this.AB.cloneDeep(data.data);\n\n         let currCursor = this.getCursor();\n         let needsRefresh = false;\n\n         connectedFields.forEach((f) => {\n            // pull the values in this connected fields\n            let values = data.data[f.columnName]; // just need the PK\n\n            if (!Array.isArray(values))\n               values = [values].filter((v) => !this.AB.isNil(v));\n\n            values.forEach((v) => {\n               v = v[PK] || v; // just in case this was an {} and not the {uuid}\n\n               // if this is one of the items we are managing\n               if (this.__dataCollection.exists(v)) {\n                  let localField = f.fieldLink;\n                  if (localField) {\n                     let row = this.__dataCollection.getItem(v);\n                     let colName = localField.columnName;\n                     let relName = localField.relationName();\n\n                     if (localField.linkType() == \"many\") {\n                        if (!Array.isArray(row[colName])) {\n                           row[colName] = [row[colName]].filter(\n                              (r) => !this.AB.isNil(r)\n                           );\n                        }\n                        // if it isn't already in the array, add it\n                        let rval = localField.getRelationValue(newData);\n                        if (row[colName].indexOf(rval) == -1) {\n                           row[colName].push(rval);\n                        }\n\n                        if (!Array.isArray(row[relName])) {\n                           row[relName] = [row[relName]].filter(\n                              (r) => !this.AB.isNil(r)\n                           );\n                        }\n                        if (\n                           row[relName].filter((r) => r[iPK] == newData[iPK])\n                              .length == 0\n                        ) {\n                           row[relName].push(newData);\n                        }\n                     } else {\n                        row[colName] = localField.getRelationValue(newData);\n                        row[relName] = newData;\n                     }\n\n                     // pass updated data back into DC:\n                     this.__dataCollection.updateItem(v, row);\n\n                     if (this.__treeCollection)\n                        this.__treeCollection.updateItem(v, row);\n\n                     this.emit(\"update\", this.__dataCollection.getItem(v));\n\n                     // if we just updated our Current Cursor, we need to\n                     // let our connected DC's know to refresh.\n                     if (currCursor?.id == v) {\n                        needsRefresh = true;\n                     }\n                  }\n               }\n            });\n         });\n\n         if (needsRefresh) {\n            this.emit(\"cursorStale\", null);\n         }\n      });\n\n      this.on(\"ab.datacollection.connection-added\", (data) => {\n         // This event notifies us of a specific relation being created between\n         // two records. In this case the source object that was originally\n         // operated on, is sent along in data.data.\n         //\n         // eg: if this was a `create` operation, the newly created value is\n         //     included in data.data.\n         // eg: if this was an `update` operation, the row that was modified\n         //     is included.\n         //\n         // {json} data\n         // incoming socket payload:\n         // data.objectID {string}\n         //      the ABObject this connection is being added to\n         // data.fieldID  {string}\n         //      which connect Field in this ABObject the value is added to\n         // data.rowID    {string}\n         //      which specific row/entry this is being added to\n         // data.data     {json}\n         //      The value being added.\n         //\n\n         let obj = this.datasource;\n         if (!obj) return;\n\n         if (!data.rowID) return;\n\n         // ABObject only\n         if (!(obj instanceof this.AB.Class.ABObjectQuery)) {\n            // if this is the object we are managing\n            if (obj.id === data.objectID) {\n               let field = obj.fieldByID(data.fieldID);\n               if (field) {\n                  // figure out if we actually have the value that was changed:\n                  let isExists = this.__dataCollection.exists(data.rowID);\n                  if (isExists) {\n                     let newData = this.AB.cloneDeep(data.data);\n                     let row = this.__dataCollection.getItem(data.rowID);\n\n                     let colName = field.columnName;\n                     let relName = field.relationName();\n\n                     if (field.linkType() == \"many\") {\n                        if (!Array.isArray(row[colName])) {\n                           // in case row[col]:{obj} this will make sure it\n                           // is included as an [ {obj} ], but will also prevent\n                           // [ undefined ] if row[col] isn't set:\n                           row[colName] = [row[colName]].filter(\n                              (r) => !this.AB.isNil(r)\n                           );\n                        }\n                        row[colName].push(f.getRelationValue(newData));\n\n                        if (!Array.isArray(row[relName])) {\n                           row[relName] = [row[relName]].filter(\n                              (r) => !this.AB.isNil(r)\n                           );\n                        }\n                        row[relName].push(newData);\n                     } else {\n                        row[colName] = f.getRelationValue(newData);\n                        row[relName] = newData;\n                     }\n\n                     // pass updated data back into DC:\n                     this.__dataCollection.updateItem(data.rowID, row);\n\n                     if (this.__treeCollection)\n                        this.__treeCollection.updateItem(data.rowID, row);\n\n                     this.emit(\n                        \"update\",\n                        this.__dataCollection.getItem(data.rowID)\n                     );\n                  }\n               }\n            }\n         } else if (obj instanceof this.AB.Class.ABObjectQuery) {\n            // ABQuery\n\n            // NOTE: that in this case, if this change is about one of the\n            // objects we track, we will most likely have to reload the data\n            // to make sure we are displaying proper data.\n\n            // This will follow the same logic as in \"ab.datacollection.create\"\n            // so instead of repeating that here, let's call our \"create\"\n            // handler instead:\n\n            ///// LEFT OFF HERE:\n            // need to pull out the data in data.data that represents the\n            // connection to data.objectId\n\n            //// WAIT!!!!!!\n            //// Instead, of this \"connection-added\", lets add the logic in\n            //// a \"created\" handler to detect if we should add the new entry\n            //// into A value we currently track.\n            //// ===> This way we only have to send out \"Created\" messages\n            ////\n\n            let newPacket = {\n               objectId: data.objectId,\n               data: this.AB.cloneDeep(data.data),\n            };\n            this.emit(\"ab.datacollection.create\", newPacket);\n         }\n      });\n\n      this.on(\"ab.datacollection.update\", (data) => {\n         // {json} data\n         // incoming socket payload:\n         // data.objectId {string} uuid of the ABObject's row that was updated\n         // data.data {json} the new updated value of that row entry.\n\n         let obj = this.datasource;\n         if (!obj) return;\n\n         // updated values\n         let values = data.data;\n         if (!values) return;\n\n         // #Johnny: removing this check.  A DC that is following another cursor\n         // still has a value that might need updating.\n         // DC who is following cursor should update only current cursor.\n         // if (\n         //    this.isCursorFollow &&\n         //    this.getCursor()?.id != (values[obj.PK()] ?? values.id)\n         // ) {\n         //    return;\n         // }\n\n         let needUpdate = false;\n         let skipDatasourceFilter = false;\n         let isExists = false;\n         let updatedIds = [];\n         // {array}\n         // an array of the row indexs in our DataCollection that have values\n         // that need to be updated.\n\n         let updatedTreeIds = [];\n         let updatedVals = {};\n\n         //\n         // Case 1: This DC contains the value that was updated\n         // In this case, we want to replace our current entry with\n         // the new one passed in.\n         // EX: This is a DC of Users, and the incoming Entry is a User\n         // that we are already displaying.\n         //\n\n         // Query\n         if (obj instanceof this.AB.Class.ABObjectQuery) {\n            let objList = obj.objects((o) => o.id == data.objectId) || [];\n            needUpdate = objList.length > 0;\n            if (needUpdate) {\n               // NOTE: Data needs to be updated in the query even if it doesn't match the filter conditions.\n               skipDatasourceFilter =\n                  obj instanceof this.AB.Class.ABObjectQuery;\n\n               (objList || []).forEach((o) => {\n                  updatedIds = updatedIds.concat(\n                     this.__dataCollection\n                        .find((item) => {\n                           return (\n                              item[\n                                 `${this.datasource.objectAlias(\n                                    o.id\n                                 )}.${o.PK()}`\n                              ] == (values[o.PK()] || values.id)\n                           );\n                        })\n                        .map((o) => o.id) || []\n                  );\n\n                  // grouped queries\n                  if (this.__treeCollection) {\n                     updatedTreeIds = updatedTreeIds.concat(\n                        this.__treeCollection\n                           .find((item) => {\n                              return (\n                                 item[\n                                    `${this.datasource.objectAlias(\n                                       o.id\n                                    )}.${o.PK()}`\n                                 ] == (values[o.PK()] || values.id)\n                              );\n                           })\n                           .map((o) => o.id) || []\n                     );\n                  }\n               });\n\n               isExists = updatedIds.length > 0;\n\n               updatedVals = this._queryUpdateData(objList, values);\n            }\n         }\n         // Object\n         else {\n            needUpdate = obj.id == data.objectId;\n            if (needUpdate) {\n               // various PK name\n               if (!values.id && obj.PK() != \"id\") values.id = values[obj.PK()];\n\n               updatedIds.push(values.id);\n\n               isExists = this.__dataCollection.exists(values.id);\n               updatedVals = values;\n            }\n         }\n\n         // if it is the source object\n         if (needUpdate) {\n            if (isExists) {\n               if (this.isValidData(updatedVals, skipDatasourceFilter)) {\n                  // only spread around cloned copies because some objects (I'm\n                  // looking at you ABFieldUser) will modify some data for local\n                  // usage.\n                  updatedVals = this.AB.cloneDeep(updatedVals);\n                  if (this.__dataCollection) {\n                     updatedIds = this.AB.uniq(updatedIds);\n                     updatedIds.forEach((itemId) => {\n                        this.__dataCollection.updateItem(itemId, updatedVals);\n                     });\n                  }\n\n                  if (this.__treeCollection) {\n                     // update data in tree\n                     updatedTreeIds = this.AB.uniq(updatedTreeIds);\n                     updatedTreeIds.forEach((itemId) => {\n                        this.__treeCollection.updateItem(itemId, updatedVals);\n                     });\n                  }\n\n                  this.emit(\"update\", updatedVals);\n\n                  // If the update item is current cursor, then should tell components to update.\n                  let currData = this.getCursor();\n                  if (currData?.id == updatedVals.id) {\n                     this.emit(\"cursorStale\", currData);\n                  }\n               } else {\n                  // Johnny: Here we are simply removing the DataCollection Entries that are\n                  // no longer valid.\n                  // Just cycle through the collected updatedIds and remove them.\n                  let currData = this.getCursor();\n                  updatedIds.forEach((id) => {\n                     // If the item is current cursor, then the current cursor should be cleared.\n\n                     if (currData?.id == id) this.emit(\"cursorStale\", null);\n\n                     this.__dataCollection.remove(id);\n\n                     // TODO: update tree list\n                     // if (this.__treeCollection) {\n                     //  this.__treeCollection.remove(id);\n                     // }\n\n                     this.emit(\"delete\", id);\n                  });\n               }\n            }\n            // filter before add new record\n            else if (this.isValidData(updatedVals)) {\n               // OK we have a value, that COULD be in our DC\n               // before we add it, let's make sure we are not limited in our selection of items:\n               if (!this.isCursorFollow && !this.settings.fixSelect) {\n                  // this means the updated record was not loaded yet so we are adding it to the top of the grid\n                  // the placement will probably change on the next load of the data\n                  this.__dataCollection.add(updatedVals, 0);\n\n                  if (this.__treeCollection)\n                     this.parseTreeCollection({\n                        data: [updatedVals],\n                     });\n\n                  this.emit(\"create\", updatedVals);\n               }\n            }\n         }\n\n         //\n         // Case 2: This DC has entries that CONNECT to the updated value.\n         // We need to make sure our connections, properly reflect the\n         // current state of the incoming data.\n         //\n         // EG: This DC is a list of Roles that connect to User, and an updated\n         // User is passed in.\n\n         let currCursor = this.getCursor();\n         let updateCursor = null;\n\n         // if it is a linked object\n         // look for connected fields that link to the incoming objectId\n         let connectedFields = obj.connectFields(\n            (f) => f.datasourceLink && f.datasourceLink.id == data.objectId\n         );\n\n         // update relation data\n         if (\n            obj instanceof this.AB.Class.ABObject &&\n            connectedFields?.length > 0\n         ) {\n            // various PK name\n            // webix datacollections require an .id value, so make sure\n            // this incoming value has an .id set\n            let PK = obj.PK();\n            if (!values.id && PK != \"id\") values.id = values[PK];\n\n            if (this.__dataCollection.count() > 0) {\n               this.__dataCollection.find({}).forEach((d) => {\n                  let updateItemData = {\n                     id: d.id,\n                  };\n\n                  connectedFields.forEach((f) => {\n                     if (!f) return;\n\n                     let updateRelateVal = {};\n                     let rowRelateVal = d[f.relationName()] || {};\n\n                     if (f.fieldLink)\n                        updateRelateVal =\n                           values[f.fieldLink.relationName()] || {};\n\n                     // check to see if we are supposed to be related to this\n                     let valIsRelated = isRelated(updateRelateVal, d.id, PK);\n\n                     // If NO, then make sure we Unrelate data\n                     // if this is an array -> filter out the entry\n                     if (\n                        Array.isArray(rowRelateVal) &&\n                        rowRelateVal.filter(\n                           (v) =>\n                              v == values.id ||\n                              v.id == values.id ||\n                              v[PK] == values.id\n                        ).length > 0 &&\n                        !valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = rowRelateVal.filter(\n                           // NOTE: Special case: the incoming value.id will be .uuid\n                           // however in case of User Fields, v.id == username and not .uuid\n                           // so we put our default check to be v[PK] here to play nice\n                           (v) => (v[PK] || v.id || v) != values.id\n                        );\n                        updateItemData[f.columnName] = updateItemData[\n                           f.relationName()\n                        ].map((v) => v.id || v[PK] || v);\n                     } else if (\n                        // this is not an array so set link to null\n                        !Array.isArray(rowRelateVal) &&\n                        (rowRelateVal == values.id ||\n                           rowRelateVal.id == values.id ||\n                           rowRelateVal[PK] == values.id) &&\n                        !valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = null;\n                        updateItemData[f.columnName] = null;\n                     }\n\n                     // However, if we are supposed to be related => make sure we are\n                     // If this is an array, then add to list\n                     // AND YES: make sure it is cloned\n                     if (valIsRelated) {\n                        values = this.AB.cloneDeep(values);\n                     }\n                     if (Array.isArray(rowRelateVal) && valIsRelated) {\n                        // update relate data\n                        if (\n                           rowRelateVal.filter(\n                              (v) =>\n                                 v == values.id ||\n                                 v.id == values.id ||\n                                 v[PK] == values.id\n                           ).length > 0\n                        ) {\n                           // just update the one entry in my array with the new\n                           // value\n                           rowRelateVal.forEach((v, index) => {\n                              if (\n                                 v == values.id ||\n                                 v.id == values.id ||\n                                 v[PK] == values.id\n                              )\n                                 rowRelateVal[index] = values;\n                           });\n                        }\n                        // add new relate\n                        else {\n                           rowRelateVal.push(values);\n                        }\n\n                        updateItemData[f.relationName()] = rowRelateVal;\n                        updateItemData[f.columnName] = updateItemData[\n                           f.relationName()\n                        ].map(\n                           (v) => f.getRelationValue(v) /*v.id || v[PK] || v*/\n                        );\n                     } else if (\n                        !Array.isArray(rowRelateVal) &&\n                        (rowRelateVal != values.id ||\n                           rowRelateVal.id != values.id ||\n                           rowRelateVal[PK] != values.id) &&\n                        valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = values;\n                        // make ConnectedField use .getRelationValue() here!\n                        updateItemData[f.columnName] =\n                           f.getRelationValue(values);\n                     }\n                  });\n\n                  // If this item needs to update\n                  // meaning there is > 1 key in the object (we always have .id)\n                  if (Object.keys(updateItemData).length > 1) {\n                     // normalize data before add to data collection\n                     // UPDATE: this should already have happened in NetworkRestSocket\n                     // when the initial data is received.\n\n                     // NOTE: We could not normalize relational data because they are not full data\n                     // Merge update data to exists data instead\n\n                     if (this.__treeCollection?.exists(d.id)) {\n                        const treeItem = Object.assign(\n                           this.__treeCollection.getItem(d.id),\n                           updateItemData\n                        );\n                        this.__treeCollection.updateItem(d.id, treeItem);\n                     }\n\n                     if (this.__dataCollection?.exists(d.id)) {\n                        const dcItem = Object.assign(\n                           this.__dataCollection.getItem(d.id),\n                           updateItemData\n                        );\n                        this.__dataCollection.updateItem(d.id, dcItem);\n                        this.emit(\n                           \"update\",\n                           this.__dataCollection.getItem(d.id)\n                        );\n                        if (currCursor?.id == dcItem.id) {\n                           updateCursor = dcItem;\n                        }\n                     }\n                  }\n               });\n            }\n         }\n\n         //\n         // Case 3: Our DC is linked to a DC that was effected by this update.\n         //\n         // We will approach it from another direction, if the current DC made\n         // an update to it's current Cursor, then we will emit a \"cursorStale\"\n         // event, so our linked DCs will update themselves with the new value:\n         if (updateCursor) {\n            this.emit(\"cursorStale\", null);\n         }\n         // this.updateRelationalDataFromLinkDC(data.objectId, values);\n         this.refreshLinkCursor();\n\n         this.setStaticCursor();\n      });\n\n      // We are subscribing to notifications from the server that an item may be stale and needs updating\n      // We will improve this later and verify that it needs updating before attempting the update on the client side\n      this.on(\"ab.datacollection.stale\", (data) => {\n         // debugger;\n         // if we don't have a datasource or model, there is nothing we can do here:\n         // Verify the datasource has the object we are listening for if not just stop here\n         if (\n            !this.datasource ||\n            !this.model ||\n            this.datasource.id != data.objectId\n         ) {\n            return;\n         }\n\n         // updated values\n         var values = data.data;\n\n         if (!values) return;\n\n         // use the Object's defined Primary Key:\n         var PK = this.model.object.PK();\n         if (!values[PK]) {\n            PK = \"id\";\n         }\n\n         // DC who is following cursor should update only current cursor.\n         if (\n            this.isCursorFollow &&\n            this.getCursor()?.[PK] != (values[PK] ?? values?.id)\n         ) {\n            return;\n         }\n\n         if (values) {\n            if (this.__dataCollection.exists(values[PK])) {\n               var cond = { where: {} };\n               cond.where[PK] = values[PK];\n               // this data collection has the record so we need to query the server to find out what it's latest data is so we can update all instances\n               this.model.staleRefresh(cond).then((res) => {\n                  // check to make sure there is data to work with\n                  if (Array.isArray(res.data) && res.data.length) {\n                     // debugger;\n                     let obj = this.datasource;\n                     if (!obj) return;\n                     // normalize data before add to data collection\n\n                     // UPDATE: this should already have happened in NetworkRestSocket\n                     // when the initial data is received.\n                     //var model = obj.model();\n                     // model.normalizeData(res.data[0]);\n\n                     // tell the webix data collection to update using their API with the row id (values.id) and content (res.data[0])\n                     if (this.__dataCollection.exists(values[PK])) {\n                        this.__dataCollection.updateItem(\n                           values[PK],\n                           res.data[0]\n                        );\n                     }\n\n                     // If the update item is current cursor, then should tell components to update.\n                     var currData = this.getCursor();\n                     if (currData?.[PK] == values[PK]) {\n                        this.emit(\"cursorStale\", currData);\n                     }\n                  } else {\n                     // If there is no data in the object then it was deleted...lets clean things up\n                     // If the deleted item is current cursor, then the current cursor should be cleared.\n                     var currId = this.getCursor();\n                     if (currId == values[PK]) this.emit(\"cursorStale\", null);\n\n                     this.__dataCollection.remove(values[PK]);\n                     this.emit(\"delete\", values[PK]);\n                  }\n               });\n            }\n         }\n\n         // filter link data collection's cursor\n         this.refreshLinkCursor();\n         this.setStaticCursor();\n      });\n\n      this.on(\"ab.datacollection.delete\", (data) => {\n         // debugger;\n         let obj = this.datasource;\n         if (!obj) return;\n\n         let deleteId = data.data;\n         let needDelete = false;\n         let deletedIds = [];\n         let deletedTreeIds = [];\n\n         // Query\n         if (obj instanceof this.AB.Class.ABObjectQuery) {\n            let objList = obj.objects((o) => o.id == data.objectId) || [];\n            needDelete = objList.length > 0;\n            if (needDelete) {\n               (objList || []).forEach((o) => {\n                  deletedIds =\n                     this.__dataCollection\n                        .find((item) => {\n                           return item[`${o.alias}.${o.PK()}`] == deleteId;\n                        })\n                        .map((o) => o.id) || [];\n\n                  // grouped queries\n                  if (this.__treeCollection) {\n                     deletedTreeIds =\n                        this.__treeCollection\n                           .find((item) => {\n                              return item[`${o.alias}.${o.PK()}`] == deleteId;\n                           })\n                           .map((o) => o.id) || [];\n                  }\n               });\n            }\n         }\n         // Object\n         else {\n            needDelete = obj.id == data.objectId;\n            if (needDelete) {\n               deletedIds.push(deleteId);\n            }\n         }\n\n         // if it is the source object\n         if (needDelete) {\n            // If the deleted item is current cursor, then the current cursor should be cleared.\n            var currData = this.getCursor();\n\n            deletedIds.forEach((delId) => {\n               if (currData?.[obj.PK()] == delId)\n                  this.emit(\"cursorStale\", null);\n\n               if (this.__dataCollection.exists(delId))\n                  this.__dataCollection.remove(delId);\n            });\n\n            if (this.__treeCollection) {\n               deletedTreeIds.forEach((delId) => {\n                  if (this.__treeCollection.exists(delId))\n                     this.__treeCollection.remove(delId);\n               });\n            }\n\n            if (deletedIds[0]) this.emit(\"delete\", deletedIds[0]);\n         }\n\n         // if it is a linked object\n         let connectedFields = obj.connectFields(\n            (f) => f.datasourceLink && f.datasourceLink.id == data.objectId\n         );\n\n         // update relation data\n         if (\n            obj instanceof this.AB.Class.ABObject &&\n            connectedFields &&\n            connectedFields.length > 0\n         ) {\n            // various PK name\n            let PK = connectedFields[0].object.PK();\n\n            this.__dataCollection.find({}).forEach((d) => {\n               let updateRelateVals = {};\n\n               connectedFields.forEach((f) => {\n                  let relateVal = d[f.relationName()];\n                  if (relateVal == null) return;\n\n                  if (\n                     Array.isArray(relateVal)\n                     // JOHNNY: for speed improvements, don't make this check:\n                     // just do it and that will reduce 1x through the array.\n                     // &&\n                     // relateVal.filter(\n                     //    (v) =>\n                     //       v == deleteId ||\n                     //       v.id == deleteId ||\n                     //       v[PK] == deleteId\n                     // ).length > 0\n                  ) {\n                     updateRelateVals[f.relationName()] = relateVal.filter(\n                        (v) => (v.id || v[PK] || v) != deleteId\n                     );\n                     updateRelateVals[f.columnName] = updateRelateVals[\n                        f.relationName()\n                     ].map((v) => v.id || v[PK] || v);\n                  } else if (\n                     relateVal == deleteId ||\n                     relateVal.id == deleteId ||\n                     relateVal[PK] == deleteId\n                  ) {\n                     updateRelateVals[f.relationName()] = null;\n                     updateRelateVals[f.columnName] = null;\n                  }\n               });\n\n               // If this item needs to update\n               if (Object.keys(updateRelateVals).length > 0) {\n                  // normalize data before add to data collection\n\n                  // var model = obj.model();\n                  // model.normalizeData(updateRelateVals);\n\n                  this.__dataCollection.updateItem(d.id, updateRelateVals);\n\n                  if (this.__treeCollection)\n                     this.__treeCollection.updateItem(d.id, updateRelateVals);\n\n                  this.emit(\"update\", this.__dataCollection.getItem(d.id));\n               }\n            });\n         }\n      });\n\n      // add listeners when cursor of link data collection is changed\n      const linkDC = this.datacollectionLink;\n      // if (linkDC && this.settings.loadAll) {\n      if (linkDC) {\n         this.eventAdd({\n            emitter: linkDC,\n            eventName: \"changeCursor\",\n            listener: (currentCursor) => {\n               // NOTE: we can clear data here to update UI display, then data will be fetched when webix.dataFeed event\n               if (\n                  !this.settings?.loadAll &&\n                  currentCursor?.id != linkDC.previousCursorId\n               )\n                  this.clearAll();\n\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            },\n         });\n\n         this.eventAdd({\n            emitter: linkDC,\n            eventName: \"cursorStale\",\n            listener: (currentCursor) => {\n               // cursorStale : the current cursor hasn't CHANGED, but the data\n               // of that value has changed.\n               // This is triggered by one of our socket updates that detects\n               // changes to the cursor data.\n\n               // if don't have .loadAll set,  we'll need to update our data:\n               if (!this.settings?.loadAll) {\n                  // What I do here depends on what my linked DC has set for\n                  // it's .loadConnections (shouldPopulate) value\n                  let dvLink = this.datacollectionLink;\n                  let isMyDataThere = dvLink.shouldPopulate;\n                  if (Array.isArray(isMyDataThere)) {\n                     // if this was an array: it should be an array of columnNames\n                     // of the dvLink that are being populated.\n\n                     // the column I'm interested in:\n                     let colName = this.fieldLink.fieldLink.columnName;\n\n                     // is it there?\n                     isMyDataThere = isMyDataThere.indexOf(colName) > -1;\n                  }\n                  if (!isMyDataThere) {\n                     // If it didn't populate it's data, then I can't be\n                     // efficient about how to update my data.\n                     // we'll just have to reload:\n\n                     // find out how many entries we have already loaded and try to\n                     // load at least that many again.:\n                     let count = 20;\n                     if (this.__dataCollection.count() > count)\n                        count = this.__dataCollection.count();\n                     if (this.__treeCollection?.count() > count)\n                        count = this.__treeCollection.count();\n\n                     let currCursor = this.__dataCollection.getCursor();\n                     this.clearAll();\n                     this.reloadData(0, count).then(() => {\n                        this.__dataCollection.setCursor(currCursor);\n                        this.emit(\"cursorSelect\", currCursor);\n                     });\n                  } else {\n                     // if the linked DC does have my data populated:\n\n                     // the values I currently contain can fall into 1 of 3 categories:\n                     // 1) A value I currently have that I need to Keep\n                     // 2) A value I currently have that I need to remove\n                     // 3) A value I don't have, but need to Add\n\n                     // the current value of the cursor should have the ID references\n                     // to what SHOULD be in my display\n\n                     // get the current cursor of our linked DC\n                     let linkCursor;\n\n                     if (dvLink) {\n                        linkCursor = dvLink.getCursor();\n                     }\n                     if (!linkCursor) {\n                        // if linkCursor is no longer set, then we should clear()\n                        this.clearAll();\n                        return;\n                     }\n\n                     let PK = this.datasource.PK();\n\n                     // lets start by assuming all the current values in cursor are #3\n                     // -> all the values into valuesToAdd:\n\n                     let colName = this.fieldLink?.fieldLink?.relationName?.();\n                     let valuesToAdd = {};\n                     let valuesIn = colName ? linkCursor[colName] || [] : [];\n                     if (!Array.isArray(valuesIn)) valuesIn = [valuesIn];\n                     valuesIn = valuesIn.filter((v) => v);\n                     valuesIn.forEach((v) => {\n                        valuesToAdd[v[PK]] = v;\n                     });\n\n                     let valuesToRemove = [];\n                     // step through all the values I currently have\n                     let currValues = this.__dataCollection.find(() => true);\n                     currValues.forEach((value) => {\n                        // if value is in valuesToAdd\n                        if (valuesToAdd[value[PK]]) {\n                           // we already have it so turns out we don't need to add\n                           // it after all\n                           delete valuesToAdd[value[PK]];\n                        } else {\n                           // the current state of the Link Cursor value doesn't have\n                           // this value, so we need to remove it:\n                           valuesToRemove.push(value[PK]);\n                        }\n                     });\n\n                     // now remove the items we don't want:\n                     this.__dataCollection.remove(valuesToRemove);\n\n                     // then we have to ask for the values we need to add:\n                     valuesToAdd = Object.keys(valuesToAdd); // convert to []\n                     if (valuesToAdd.length > 0) {\n                        let cond = { where: {} };\n                        cond.where[PK] = valuesToAdd;\n                        // NOTE: we are using the abbreviated condition syntax here.\n\n                        // NOTE: staleRefresh() has some buffering capabilities\n                        // that combine multiple calls into 1 more efficient call:\n                        this.model.staleRefresh(cond).then((res) => {\n                           // check to make sure there is data to work with\n                           if (Array.isArray(res.data) && res.data.length) {\n                              res.data.forEach((d) => {\n                                 if (!this.__dataCollection.exists(d[PK])) {\n                                    this.__dataCollection.add(d);\n                                 }\n                              });\n                           }\n                        });\n                     }\n                  }\n\n                  return;\n               }\n\n               // Otherwise, we need to refilter our data:\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            },\n         });\n      }\n\n      // add listeners when cursor of the followed data collection is changed\n      const followDC = this.datacollectionFollow;\n      if (followDC) {\n         this.eventAdd({\n            emitter: followDC,\n            eventName: \"changeCursor\",\n            listener: () => {\n               const followCursor = followDC.getCursor();\n               const currentCursor = this.getCursor();\n\n               // If the cursor is not the new, then it should not reload.\n               if (\n                  followCursor?.[followDC.datasource.PK()] ==\n                  currentCursor?.[this.datasource.PK()]\n               )\n                  return;\n\n               this.clearAll();\n               this.loadData();\n            },\n         });\n\n         this.eventAdd({\n            emitter: followDC,\n            eventName: \"cursorStale\",\n            listener: () => {\n               // cursorStale : the current cursor hasn't CHANGED, but the data\n               // of that value has changed.\n               // This is triggered by one of our socket updates that detects\n               // changes to the cursor data.\n\n               this.clearAll();\n               this.loadData();\n            },\n         });\n      }\n   }\n\n   /*\n    * waitForDataCollectionToInitialize()\n    * there are certain situations where this datacollection shouldn't\n    * load until another one has loaded.  In those cases, the fn()\n    * will wait for the required datacollection to emit \"initializedData\"\n    * before continuing on.\n    * @param {ABViewDataCollection} DC\n    *      the DC this datacollection depends on.\n    * @returns {Promise}\n    */\n   async waitForDataCollectionToInitialize(DC, msg) {\n      DC.init();\n\n      return new Promise((resolve, reject) => {\n         /* eslint-disable no-fallthrough */\n         switch (DC.dataStatus) {\n            // if that DC hasn't started initializing yet, start it!\n            case DC.dataStatusFlag.notInitial:\n               DC.loadData().catch(reject);\n            // no break;\n\n            // once in the process of initializing\n\n            case DC.dataStatusFlag.initializing:\n               /* eslint-enable no-fallthrough*/\n               // listen for \"initializedData\" event from the DC\n               // then we can continue.\n               this.eventRemove(\"initializedData\", DC);\n               this.eventAdd({\n                  emitter: DC,\n                  eventName: \"initializedData\",\n                  listener: () => {\n                     // go next\n                     resolve();\n                  },\n               });\n               break;\n\n            // if it is already initialized, we can continue:\n            case DC.dataStatusFlag.initialized:\n               resolve();\n               break;\n\n            // just in case, if the status is not known, just continue\n            default:\n               resolve();\n               break;\n         }\n         /* eslint-enable no-fallthrough */\n      });\n   }\n\n   // /**\n   //  * @method whereCleanUp()\n   //  * Parse through the current where condition and remove any null or\n   //  * empty logical blocks.\n   //  * @param {obj} curr\n   //  *        1) The current where condition in ABQuery Format:\n   //  *        {\n   //  *           glue: [AND, OR],\n   //  *           rules: [ {rule} ]\n   //  *        }\n   //  *        or 2) The current {rule} to validate\n   //  *        {\n   //  *          key:{string},\n   //  *          rule:{string},\n   //  *          vlaue:{mixed}\n   //  *        }\n   //  * @return {ABQuery.where} / { Rule }\n   //  */\n   // whereCleanUp(curr) {\n   //    if (curr) {\n   //       if (curr.glue && curr.rules) {\n   //          // this is a logical Block (AND, OR)\n   //          // we need to filter the children\n   //          let newValue = { glue: curr.glue, rules: [] };\n   //          curr.rules.forEach((r) => {\n   //             let cleanRule = this.whereCleanUp(r);\n   //             // don't add values that didn't pass\n   //             if (cleanRule) {\n   //                newValue.rules.push(cleanRule);\n   //             }\n   //          });\n\n   //          // if we have a non empty block, then return it:\n   //          if (newValue.rules.length > 0) {\n   //             return newValue;\n   //          }\n\n   //          // this isn't really a valid conditional, so null\n   //          return null;\n   //       }\n\n   //       // This is a specific rule, that isn't null so:\n   //       return curr;\n   //    }\n   //    return null;\n   // }\n\n   async loadData(start, limit) {\n      // mark data status is initializing\n      if (this._dataStatus == this.dataStatusFlag.notInitial) {\n         this._dataStatus = this.dataStatusFlag.initializing;\n         this.emit(\"initializingData\", {});\n      }\n\n      var obj = this.datasource;\n      if (obj == null) {\n         this._dataStatus = this.dataStatusFlag.initialized;\n         return Promise.resolve([]);\n      }\n\n      var model = obj.model();\n      if (model == null) {\n         this._dataStatus = this.dataStatusFlag.initialized;\n         return Promise.resolve([]);\n      }\n\n      // pull the defined sort values\n      var sorts = this.settings.objectWorkspace.sortFields || [];\n\n      // pull filter conditions\n      let wheres = this.AB.cloneDeep(\n         this.settings.objectWorkspace.filterConditions ?? {}\n      );\n      // if we pass new wheres with a reload use them instead\n      if (this.__reloadWheres) {\n         wheres = this.__reloadWheres;\n      }\n      wheres.glue = wheres.glue || \"and\";\n      wheres.rules = wheres.rules || [];\n\n      const __additionalWheres = {\n         glue: \"and\",\n         rules: [],\n      };\n\n      // add the filterCond if there are rules to add\n      if (this.__filterCond?.rules?.length > 0) {\n         __additionalWheres.rules.push(this.__filterCond);\n      }\n\n      // Filter by a selected cursor of a link DC\n      let linkRule = this.ruleLinkedData();\n      if (!this.settings.loadAll && linkRule) {\n         __additionalWheres.rules.push(linkRule);\n      }\n      // pull data rows following the follow data collection\n      else if (this.datacollectionFollow) {\n         const followCursor = this.datacollectionFollow.getCursor();\n         // store the PK as a variable\n         let PK = this.datasource.PK();\n         // if the datacollection we are following is a query\n         // add \"BASE_OBJECT.\" to the PK so we can select the\n         // right value to report the cursor change to\n         if (this.datacollectionFollow.settings.isQuery) {\n            PK = \"BASE_OBJECT.\" + PK;\n         }\n         if (followCursor) {\n            start = 0;\n            limit = null;\n            wheres = {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.datasource.PK(),\n                     rule: \"equals\",\n                     value: followCursor[PK],\n                  },\n               ],\n            };\n         }\n         // Set no return rows\n         else {\n            wheres = {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.datasource.PK(),\n                     rule: \"equals\",\n                     value: \"NO RESULT ROW\",\n                  },\n               ],\n            };\n         }\n      }\n\n      // Combine setting & program filters\n      if (__additionalWheres.rules.length) {\n         if (wheres.rules.length) {\n            __additionalWheres.rules.unshift(wheres);\n         }\n         wheres = __additionalWheres;\n      }\n\n      // remove any null in the .rules\n      // if (wheres?.rules?.filter) wheres.rules = wheres.rules.filter((r) => r);\n      wheres = obj.whereCleanUp(wheres);\n\n      // set query condition\n      var cond = {\n         where: wheres || {},\n         // limit: limit || 20,\n         skip: start || 0,\n         sort: sorts,\n         populate: this.shouldPopulate,\n      };\n\n      //// NOTE: we no longer set a default limit on loadData() but\n      //// require the platform.loadData() to pass in a default limit.\n      if (limit != null) {\n         cond.limit = limit;\n      }\n\n      // if settings specify loadAll, then remove the limit\n      if (this.settings.loadAll && !this.isCursorFollow) {\n         delete cond.limit;\n      }\n\n      //\n      // Step 1: make sure any DataCollections we are linked to are\n      // initialized first.  Then proceed with our initialization.\n      //\n      const parentDc = this.datacollectionLink ?? this.datacollectionFollow;\n      // If we are linked to another datacollection then wait for it\n      if (parentDc) {\n         await this.waitForDataCollectionToInitialize(parentDc);\n      }\n\n      //\n      // Step 2: if we have any filter rules that depend on other DataCollections,\n      // then wait for them to be initialized first.\n      // eg: \"(not_)in_data_collection\" rule filters\n      if (wheres?.rules?.length) {\n         const dcFilters = [];\n\n         wheres.rules.forEach((rule) => {\n            // if this collection is filtered by data collections we need to load them in case we need to validate from them later\n            if (\n               rule.rule == \"in_data_collection\" ||\n               rule.rule == \"not_in_data_collection\"\n            ) {\n               const dv = this.AB.datacollectionByID(rule.value);\n               if (dv) {\n                  dcFilters.push(this.waitForDataCollectionToInitialize(dv));\n               }\n            }\n         });\n\n         await Promise.all(dcFilters);\n      }\n\n      //\n      // Step 3: pull data to data collection\n      // we will keep track of the resolve, reject for this\n      // operation.\n      // the actual resolve() should happen in the\n      // .processIncomingData() after the  data is processed.\n      return new Promise((resolve, reject) => {\n         this._pendingLoadDataResolve = {\n            resolve: resolve,\n            reject: reject,\n         };\n\n         this.platformFind(model, cond).catch((err) => {\n            reject(err);\n         });\n      });\n   }\n\n   platformFind(model, cond) {\n      //// Core Migration Note:\n      //// the ABViewDataCollectionCore now manages data in a different way:\n      //// local data  vs  Remote Data\n      //// this will need to be updated to reflect that management:\n      //// (and also explains why we refactored things into .processIncomingData())\n      return model.findAll(cond).then((data) => {\n         return this.processIncomingData(data);\n      });\n   }\n\n   /**\n    * @method shouldPopulate()\n    * Return our populate status. We now want to query this info outside this\n    * object.\n    * @return {bool|Array}\n    *         true/false,  or an array of columnNames that are being populated.\n    */\n   get shouldPopulate() {\n      return (\n         this.settings.populate ??\n         (this.settings.preventPopulate ? false : true)\n      );\n   }\n\n   /**\n    * @method queuedParse()\n    * This is an attempt at loading very large datasets into a Webix DC without locking up\n    * the display.\n    * @param {array} data\n    *        The data to load into the __dataCollection\n    * @param {callback} cb\n    *        A callback to call when the data has been fully loaded.\n    */\n   async queuedParse(incomingData, cb) {\n      const data = incomingData?.data || incomingData;\n      if (!data?.length) {\n         cb?.();\n         return Promise.resolve();\n      }\n\n      const total_count = incomingData.total_count;\n\n      let nextData;\n      if (data.length > 250) {\n         // let pos = this.__dataCollection.count();\n         let pos = this.__dataCollection.find({}).length;\n         let remain = data.splice(250);\n         nextData = {\n            data: remain,\n            pos: pos + data.length,\n            total_count,\n         };\n      }\n\n      const parsedData = {\n         data,\n         pos: incomingData.pos,\n         total_count,\n      };\n      this.__dataCollection.parse(parsedData);\n\n      return new Promise((resolve) => {\n         setTimeout(async () => {\n            await this.queuedParse(nextData);\n\n            // Introduce a delay to ensure the UI has fully rendered the list before proceeding\n            setTimeout(async () => {\n               cb?.();\n               resolve();\n            }, 50);\n         }, 15);\n      });\n   }\n\n   /**\n    * processIncomingData()\n    * is called from loadData() once the data is returned.  This method\n    * allows the platform to make adjustments to the data based upon any\n    * platform defined criteria.\n    * @param {obj} data  the data as it was returned from the Server\n    *        which should be in following format:\n    *        {\n    *          status: \"success\", // or \"error\"\n    *          data:[ {ABObjectData}, {ABObjectData}, ...]\n    *        }\n    */\n   processIncomingData(data) {\n      return Promise.resolve().then(() => {\n         // store total count\n         this.__totalCount = data.total_count;\n\n         // Need to .parse at the first time\n         if (!this.__dataCollection.find({}).length) {\n            this.__dataCollection.clearAll();\n            // this.__dataCollection.parse(data);\n         }\n\n         if (this.__throttleIncoming) clearTimeout(this.__throttleIncoming);\n         this.__throttleIncoming = setTimeout(async () => {\n            // using queuedParse() to responsively handle large datasets.\n            await this.queuedParse(data);\n\n            // In order to get the total_count updated I had to use .load()\n            this.__dataCollection.load(async () => {\n               setTimeout(() => {\n                  this.refreshLinkCursor();\n               }, 250);\n\n               return {\n                  // NOTE: return a empty array to prevent render items in DataTable twice. (Items are rendered in .queuedParse function)\n                  data: [],\n                  pos: data.pos,\n                  total_count: data.total_count,\n               };\n            });\n\n            // this does nothing???\n            this.parseTreeCollection(data);\n\n            // if we are linked, then refresh our cursor\n            var linkDv = this.datacollectionLink;\n            if (linkDv) {\n               // filter data by match link data collection\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            } else {\n               // set static cursor\n               this.setStaticCursor();\n            }\n\n            // now we close out our .loadData() promise.resolve() :\n            if (this._pendingLoadDataResolve) {\n               this._pendingLoadDataResolve.resolve();\n\n               // after we call .resolve() stop tracking this:\n               this._pendingLoadDataResolve = null;\n            }\n\n            // If dc set load all, then it will not trigger .loadData in dc at\n            // .onAfterLoad event\n            if (this.settings.loadAll) {\n               this.emit(\"loadData\", {});\n            }\n\n            // mark initialized data\n            if (this._dataStatus != this.dataStatusFlag.initialized) {\n               this._dataStatus = this.dataStatusFlag.initialized;\n               this.emit(\"initializedData\", {});\n            }\n         }, 100);\n      });\n   }\n\n   /**\n    * @method reloadData()\n    * Trigger the DataCollection to reload its data from the server.\n    * @param {int} start\n    *        Start position of where we want the data to load.\n    * @param {int} limit\n    *        How many entries to load at a time.\n    * @return {Promise}\n    */\n   reloadData(start, limit) {\n      // var waitForDataCollectionToInitialize = (DC) => {\n      //    return new Promise((resolve, reject) => {\n      //       switch (DC.dataStatus) {\n      //          // if that DC hasn't started initializing yet, start it!\n      //          case DC.dataStatusFlag.notInitial:\n      //             DC.loadData().catch(reject);\n      //          // no break;\n\n      //          // once in the process of initializing\n      //          /* eslint-disable no-fallthrough*/\n      //          case DC.dataStatusFlag.initializing:\n      //             /* eslint-enable no-fallthrough*/\n      //             // listen for \"initializedData\" event from the DC\n      //             // then we can continue.\n      //             this.eventAdd({\n      //                emitter: DC,\n      //                eventName: \"initializedData\",\n      //                listener: () => {\n      //                   // go next\n      //                   resolve();\n      //                },\n      //             });\n      //             break;\n\n      //          // if it is already initialized, we can continue:\n      //          case DC.dataStatusFlag.initialized:\n      //             resolve();\n      //             break;\n\n      //          // just in case, if the status is not known, just continue\n      //          default:\n      //             resolve();\n      //             break;\n      //       }\n      //    });\n      // };\n\n      return Promise.resolve().then(() => {\n         // check if we are currently waiting for more data requests on this datacollection before continuing\n         if (this.reloadTimer) {\n            // if we are already waiting delete the current timer\n            clearTimeout(this.reloadTimer);\n            delete this.reloadTimer;\n         }\n\n         // return a promise\n         if (!this.reloadPromise) {\n            this.reloadPromise = new Promise((resolve, reject) => {\n               this.reloadPromise__resolve = resolve;\n               this.reloadPromise__reject = reject;\n            });\n         }\n\n         // then create a new timeout to delete current timeout, clear data\n         // and load new\n         this.reloadTimer = setTimeout(() => {\n            // clear the data from the dataCollection,\n            this.clearAll();\n            // then loads new data from the server\n            return this.loadData(start, limit)\n               .then(() => {\n                  if (this.reloadPromise) {\n                     this.reloadPromise__resolve();\n                     delete this.reloadPromise;\n                     delete this.reloadPromise__resolve;\n                     delete this.reloadPromise__reject;\n                  }\n\n                  // delete the current setTimeout\n                  clearTimeout(this.reloadTimer);\n                  delete this.reloadTimer;\n               })\n               .catch((err) => {\n                  if (this.reloadPromise) {\n                     this.reloadPromise__reject(err);\n                     delete this.reloadPromise;\n                     delete this.reloadPromise__resolve;\n                     delete this.reloadPromise__reject;\n                  }\n                  // delete the current setTimeout\n                  clearTimeout(this.reloadTimer);\n                  delete this.reloadTimer;\n               });\n         }, 50);\n         // setting to 50ms because right now we do not see many\n         // concurrent calls,  we need to increase this if we begin to\n\n         return this.reloadPromise;\n      });\n   }\n\n   /**\n    * reloadWheres()\n    * stores the child data collections filters for subsequent loads.\n    * It is called from bindParentDc() when child data collections that are not\n    * marked to load all data are initializing. To do this we use webix\n    * server side binding by setting the param of \"dataFeed\".\n    * @param {obj} wheres  the new filters for the data collection\n    *        This is a combination of any exisiting filters the data collection\n    *        alreay had as well as the filter for the current cursor set by the\n    *        master data collection. We store this in __reloadWheres for when\n    *        the data needs to be updated.\n    *        The format of the wheres is our Query Builder Format\n    *        ex: {\n    *              \"glue\": \"and\",\n    *              \"rules\": [{\n    *                \"key\": \"33ba8957-6b9c-4ddb-9533-c46b13878ae1\",\n    *                \"rule\": \"contains\",\n    *                \"value\": \"1594176994894\"\n    *              }]\n    *            }\n    */\n   reloadWheres(wheres) {\n      this.__reloadWheres = wheres;\n   }\n\n   getData(filter) {\n      var dc = this.__dataCollection;\n      if (dc) {\n         return dc.find((row) => {\n            let isValid = true;\n\n            // data collection filter\n            // isValid = this.isValidData(row);\n\n            // NOTE: data are filtered from the server side (webix.dataFeed)\n            // parent dc filter\n            let linkDv = this.datacollectionLink;\n            if (linkDv && this.settings.loadAll && isValid) {\n               isValid = this.isParentFilterValid(row);\n            }\n\n            // addition filter\n            if (isValid && filter) {\n               isValid = filter(row);\n            }\n\n            return isValid;\n         });\n      } else {\n         return [];\n      }\n   }\n\n   isParentFilterValid(rowData) {\n      // data is empty\n      if (rowData == null) return false;\n\n      var linkDv = this.datacollectionLink;\n      if (linkDv == null) return true;\n\n      const linkObj = linkDv.datasource;\n      if (linkObj == null) return true;\n\n      var fieldLink = this.fieldLink;\n      if (fieldLink == null) return true;\n\n      // if the parent's cursor is not set we have not filted this collection\n      // yet so the data that comes back should be valid\n      var linkCursor = linkDv.getCursor();\n      if (linkCursor == null) {\n         return true;\n      }\n\n      var linkVal = rowData[fieldLink.relationName()];\n      if (linkVal == null) {\n         // try to get relation value(id) again\n         if (rowData[fieldLink.columnName]) {\n            linkVal = rowData[fieldLink.columnName];\n         } else {\n            return false;\n         }\n      }\n\n      let PK = fieldLink.object.PK();\n\n      // array - 1:M , M:N\n      if (linkVal.filter) {\n         return (\n            linkVal.filter(\n               (val) =>\n                  (val[PK] || val.id || val) ==\n                  (linkCursor[linkObj.PK()] || linkCursor.id || linkCursor)\n            ).length > 0\n         );\n      } else {\n         return (\n            (linkVal[PK] || linkVal.id || linkVal) ==\n            (linkCursor[linkObj.PK()] || linkCursor.id || linkCursor)\n         );\n      }\n   }\n\n   clearAll() {\n      if (this.__dataCollection) this.__dataCollection.clearAll();\n\n      if (this.__treeCollection) this.__treeCollection.clearAll();\n\n      this._dataStatus = this.dataStatusFlag.notInitial;\n   }\n\n   get totalCount() {\n      return this.__totalCount || 0;\n   }\n\n   ///\n   /// Components\n   ///\n\n   /**\n    * @method bind\n    * @param {Object} component - a webix element instance\n    */\n   bind(/* component */) {\n      console.error(\"Platform.ABDataCollection.bind() Not implemented\");\n   }\n\n   unbind(/* component */) {\n      console.error(\"Platform.ABDataCollection.unbind() Not implemented\");\n   }\n\n   removeComponent(comId) {\n      // get index\n      let index = this.__bindComponentIds.indexOf(comId);\n\n      // delete\n      this.__bindComponentIds.splice(index, 1);\n   }\n\n   /**\n    * @method ruleLinkedData()\n    * return a QueryFilter rule that also checks that incoming data is linked\n    * to our .datacollectionLink (if it exists).\n    * @return {obj} {QueryFilterRule}\n    */\n   ruleLinkedData() {\n      let rule = null;\n      const dataCollectionLink = this.datacollectionLink;\n      const fieldLink = this.fieldLink;\n      if (dataCollectionLink && fieldLink) {\n         const linkCursorId = dataCollectionLink?.getCursor()?.id;\n         if (linkCursorId) {\n            const linkType = `${fieldLink.linkType()}:${fieldLink.linkViaType()}`;\n\n            let filterRule;\n            // NOTE: If object is query, then use \"contains\" because ABOBjectQuery return JSON\n            if (fieldLink.alias) {\n               filterRule = \"contains\";\n            }\n            // M:1\n            else if (linkType == \"many:one\") {\n               filterRule = \"have_relation\";\n            }\n            // 1:M\n            else {\n               filterRule = \"equals\";\n            }\n\n            rule = {\n               alias: fieldLink.alias, // ABObjectQuery\n               key: fieldLink.id,\n               rule: filterRule,\n               value: fieldLink.getRelationValue(\n                  dataCollectionLink.__dataCollection.getItem(linkCursorId)\n               ),\n            };\n         }\n      }\n      return rule;\n   }\n\n   /**\n    * @method refreshFilterConditions()\n    * This is called in two primary cases:\n    *    - on initialization of a DC to setup our filters.\n    *    - in the operation of the ABDesigner when using a DC to display data\n    *      in the Work_object_grid and the datacollection_work(?)\n    * In the case of the ABDesigner, new temporary where conditions are provided\n    * from the possible filters we can set, and those need to effect the data\n    * we display.\n    * @param {ABRowFilter.where} wheres\n    *        The filter condition from the ABRowFilter values we are storing.\n    */\n   refreshFilterConditions(wheres = null) {\n      // There are 3 Filters that help us know if our data is Valid:\n      // 1) A filter for any ABObjectQuery we are managing.\n      // 2) A filter for our own filter condition\n      // 3) A filter that represents what our scopes allows\n\n      // Set filter of ABObject\n      if (this.__filterDatasource == null)\n         this.__filterDatasource = this.AB.filterComplexNew(\n            `${this.id}_filterDatasource`\n         );\n\n      if (this.datasource) {\n         // this.__filterDatasource.applicationLoad(this.datasource.application);\n         this.__filterDatasource.fieldsLoad(this.datasource.fields());\n\n         let filterConditions;\n\n         // Query\n         if (this.datasource instanceof this.AB.Class.ABObjectQuery) {\n            filterConditions = this.datasource.where;\n         }\n         // Apr 29, 2021 Removed this because we do not want Object filters to\n         // effect validation of DataCollections\n         // Object\n\n         // else if (this.datasource instanceof ABObject) {\n         //    let currentView = this.datasource.currentView();\n         //    if (currentView && currentView.filterConditions)\n         //       filterConditions = currentView.filterConditions;\n         // }\n\n         if (filterConditions)\n            this.__filterDatasource.setValue(filterConditions);\n         else this.__filterDatasource.setValue({});\n      } else {\n         this.__filterDatasource.fieldsLoad([]);\n         this.__filterDatasource.setValue(\n            DefaultValues.settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Set filter of data view\n      // Apr 29, 2021 Added this code back to validate with DataCollection Filters\n      if (this.__filterDatacollection == null)\n         this.__filterDatacollection = this.AB.filterComplexNew(\n            `${this.id}_filterDatacollection`\n         );\n\n      // this.__filterDatacollection.applicationLoad(\n      //    this.datasource ? this.datasource.application : null\n      // );\n      this.__filterDatacollection.fieldsLoad(\n         this.datasource ? this.datasource.fields() : []\n      );\n\n      // if we pass in wheres, then Save that value to our internal .filterConditions\n      if (wheres) this.settings.objectWorkspace.filterConditions = wheres;\n\n      let filter = this.AB.cloneDeep(\n         this.settings.objectWorkspace?.filterConditions ?? {\n            glue: \"and\",\n            rules: [],\n         }\n      );\n      // sanity checks:\n      // I've learned not to trust: this.settings.objectWorkspace\n      filter.glue = filter.glue || \"and\";\n      filter.rules = filter.rules || [];\n\n      // if there is a linkRule, add it to filter\n      let linkRule = this.ruleLinkedData(); // returns a rule if we are linked\n      if (linkRule) {\n         // NOTE: linkRule was originally designed to produce a rule for the\n         // loadData() routine.  In SQL, our linkRule might have an \"equals\"\n         // rule, to match.  But in this context if our linktype is \"many\"\n         // we need to change the rule to \"contains\":\n         // QUESTION: If this is still required, consider moving it into the `ruleLinkedData` function for maintainability. ??\n         // if (this.fieldLink?.linkType() == \"many\") {\n         //    linkRule.rule = \"contains\";\n         // }\n\n         // if linkRule not already IN filter:\n         let isAlreadyThere = false;\n         let keys = Object.keys(linkRule);\n         (filter.rules || []).forEach((r) => {\n            if (isAlreadyThere) return;\n            let allMatch = true;\n            keys.forEach((k) => {\n               if (r[k] != linkRule[k]) {\n                  allMatch = false;\n               }\n            });\n            isAlreadyThere = allMatch;\n         });\n         if (!isAlreadyThere) {\n            // link Rule needs to be ANDed to our current Rules:\n            if (filter.glue == \"and\") {\n               filter.rules.push(linkRule);\n            } else {\n               filter = { glue: \"and\", rules: [filter, linkRule] };\n            }\n         }\n      }\n\n      if ((filter.rules || []).length > 0 && !this.isCursorFollow) {\n         this.__filterDatacollection.setValue(filter);\n      } else {\n         this.__filterDatacollection.setValue(\n            DefaultValues.settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Set filter of user's scope\n      if (this.__filterScope == null)\n         this.__filterScope = this.AB.filterComplexNew(\n            `${this.id}_filterScope`\n         );\n\n      if (this.datasource) {\n         let scopeList = (this.userScopes || []).filter(\n            (s) =>\n               !s.allowAll &&\n               (s.objectIds || []).indexOf(this.datasource.id) > -1\n         );\n         if (scopeList && scopeList.length > 0) {\n            // this.__filterScope.applicationLoad(this.datasource.application);\n            this.__filterScope.fieldsLoad(this.datasource.fields() || []);\n\n            // concat all rules of scopes\n            let scopeRules = [];\n            scopeList\n               .filter(\n                  (s) => s.filter && s.filter.rules && s.filter.rules.length\n               )\n               .forEach((s) => {\n                  let sRules = (s.filter.rules || []).filter(\n                     (r) =>\n                        this.datasource.fields((f) => f.id == r.key).length > 0\n                  );\n\n                  scopeRules = scopeRules.concat(sRules);\n               });\n\n            let scopeWhere = {\n               glue: \"or\",\n               rules: scopeRules,\n            };\n            this.__filterScope.setValue(scopeWhere);\n         }\n      }\n   }\n\n   get isGroup() {\n      return this.__isGroup || false;\n   }\n\n   ///\n   /// Sync type\n   ///\n\n   get syncTypeFlag() {\n      return {\n         server: 1,\n         client: 2,\n      };\n   }\n\n   get syncType() {\n      return this.settings.syncType || DefaultValues.syncType;\n   }\n\n   /** Private methods */\n\n   /**\n    * @method _dataCollectionNew\n    * Get webix.DataCollection\n    *\n    * @return {webix.DataCollection}\n    *\n    * @param {Array} data - initial data\n    */\n   _dataCollectionNew(/*data*/) {\n      var error = new Error(\n         \"the platform.ABDataCollection._dataCollectionNew() is expected to return a proper DataCollection!\"\n      );\n      console.error(error);\n      return null;\n   }\n\n   /**\n    * @method _treeCollectionNew\n    * Get webix.TreeCollection\n    *\n    * @return {webix.TreeCollection}\n    *\n    */\n   _treeCollectionNew() {\n      console.error(\n         \"the platform.ABDataCollection._treeCollectionNew() is expected to return a proper TreeCollection!\"\n      );\n      return null;\n   }\n\n   parseTreeCollection(data = {}) {\n      // TODO all this does is log \"is missing?\"\n      if (data === {}) {\n         console.log(\n            \"Platform.ABDataCollection.parseTreeCollection() missing!\"\n         );\n      }\n   }\n   // parseTreeCollection(data = {}) {\n\n   //  if (!(this.__datasource instanceof ABObjectQuery) ||\n   //    !this.__datasource.isGroup ||\n   //    !this.__treeCollection)\n   //    return;\n\n   //  let addRowToTree = (join = {}, parentAlias = null) => {\n\n   //    let alias = join.alias;\n\n   //    (data.data || []).forEach(row => {\n\n   //      let dataId = row[`${alias}.uuid`] || row[`${alias}.id`];\n   //      if (!dataId) return;\n\n   //      // find parent nodes\n   //      let parentItemIds = [];\n   //      let parentId = row[`${parentAlias}.uuid`] || row[`${parentAlias}.id`];\n   //      if (parentId) {\n   //        parentItemIds = this.__treeCollection\n   //          .find(item => item._alias == parentAlias && item._dataId == parentId)\n   //          .map(item => item.id);\n   //      }\n\n   //      // check exists\n   //      let exists = this.__treeCollection.find(item => {\n   //        return item._alias == alias &&\n   //          item._dataId == dataId &&\n   //          (parentItemIds.length == 0 || parentItemIds.indexOf(item.$parent) > -1);\n   //      }, true);\n   //      if (exists) return;\n\n   //      let treeNode = {};\n   //      treeNode._alias = alias;\n   //      treeNode._dataId = dataId;\n   //      treeNode._itemId = row.id; // Keep row id for set cursor to data collection\n\n   //      Object.keys(row).forEach(propName => {\n\n   //        // Pull value from alias\n   //        if (propName.indexOf(`${alias}.`) == 0) {\n   //          treeNode[propName] = row[propName];\n   //        }\n\n   //      });\n\n   //      if (row.translations)\n   //        treeNode.translations = row.translations;\n\n   //      // child nodes\n   //      if (parentItemIds.length > 0)\n   //        parentItemIds.forEach(parentItemId => {\n   //          this.__treeCollection.add(treeNode, null, parentItemId);\n   //        });\n   //      // root node\n   //      else\n   //        this.__treeCollection.add(treeNode, null);\n\n   //    });\n\n   //    // Sub-joins\n   //    (join.links || []).forEach(link => {\n   //      addRowToTree(link, alias);\n   //    });\n\n   //  };\n\n   //  // Show loading cursor\n   //  (this.__bindComponentIds || []).forEach(comId => {\n\n   //    let boundComp = $$(comId);\n   //    if (boundComp &&\n   //      boundComp.showProgress)\n   //      boundComp.showProgress({ type: \"icon\" });\n\n   //  });\n\n   //  addRowToTree(this.__datasource.joins());\n\n   //  // Hide loading cursor\n   //  (this.__bindComponentIds || []).forEach(comId => {\n\n   //    let boundComp = $$(comId);\n   //    if (boundComp &&\n   //      boundComp.hideProgress)\n   //      boundComp.hideProgress();\n\n   //  })\n   // }\n\n   /**\n    * @method _queryUpdateData\n    *\n    * @param {Array} objList - List of ABObject\n    * @param {Object} values\n    */\n   _queryUpdateData(objList, values) {\n      let updatedVals = {};\n\n      // Add alias to properties of update data\n      Object.keys(values).forEach((key) => {\n         objList.forEach((oItem) => {\n            let alias = this.datasource.objectAlias(oItem.id);\n\n            updatedVals[`${alias}.${key}`] = values[key];\n\n            // Add alias to properties of .translations\n            if (\n               key == \"translations\" &&\n               values[\"translations\"] &&\n               values[\"translations\"].length\n            ) {\n               updatedVals.translations = [];\n\n               values[\"translations\"].forEach((tran) => {\n                  let updatedTran = {};\n\n                  Object.keys(tran).forEach((tranKey) => {\n                     if (tranKey == \"language_code\")\n                        updatedTran[\"language_code\"] = tran[\"language_code\"];\n                     else updatedTran[`${alias}.${tranKey}`] = tran[tranKey];\n                  });\n\n                  updatedVals.translations.push(updatedTran);\n               });\n            }\n         });\n      });\n\n      return updatedVals;\n   }\n\n   isValidData(rowData, skipDatasourceFilter = false) {\n      let result = true;\n\n      // NOTE: should we use filter of the current view of object to filter\n      //        if yes, update .wheres condition in .loadData too\n      if (this.__filterDatasource && !skipDatasourceFilter)\n         result = result && this.__filterDatasource.isValid(rowData);\n\n      if (this.__filterDatacollection)\n         result = result && this.__filterDatacollection.isValid(rowData);\n\n      if (result && this.__filterScope)\n         result = result && this.__filterScope.isValid(rowData);\n\n      return result;\n   }\n\n   updateRelationalDataFromLinkDC(objectId, rowData) {\n      const dcLink = this.datacollectionLink;\n      const cursorLink = dcLink?.getCursor();\n\n      // Add the new data that just relate to the Link DC\n      if (\n         dcLink?.datasource.id == objectId &&\n         cursorLink &&\n         cursorLink.id == rowData?.id\n      ) {\n         const obj = this.datasource;\n         const linkedField = this.fieldLink;\n         let relatedData = rowData[linkedField.fieldLink.relationName()];\n         if (relatedData && !Array.isArray(relatedData))\n            relatedData = [relatedData];\n\n         (relatedData ?? []).forEach((item) => {\n            if (item == null) return;\n\n            if (!this.__dataCollection.exists(item[obj.PK()])) {\n               // QUESTION: Should we .find to get fully info here ?\n               const newItem = this.AB.cloneDeep(item);\n               newItem[linkedField.relationName()] = [rowData];\n               this.__dataCollection.add(newItem);\n            }\n         });\n\n         // trigger to components to know there are updated data.\n         this.emit(\"warnRefresh\");\n      }\n   }\n\n   // Clone\n\n   clone(settings) {\n      settings = settings || this.toObj();\n      var clonedDatacollection = new this.constructor(settings, this.AB);\n      clonedDatacollection.__datasource = this.__datasource;\n      clonedDatacollection._dataStatus = this._dataStatus;\n\n      // clonedDatacollection.__dataCollection = this.__dataCollection.copy();\n      clonedDatacollection.__filterDatacollection.setValue(\n         settings.settings.objectWorkspace.filterConditions\n      );\n\n      var parseMe = () => {\n         if (clonedDatacollection.__dataCollection) {\n            clonedDatacollection.__dataCollection.parse(\n               this.__dataCollection\n                  .find({})\n                  .filter((row) =>\n                     clonedDatacollection.__filterDatacollection.isValid(row)\n                  )\n            );\n         }\n         if (clonedDatacollection.__treeCollection) {\n            clonedDatacollection.__treeCollection.parse(\n               this.__treeCollection\n                  .find({})\n                  .filter((row) =>\n                     clonedDatacollection.__filterDatacollection.isValid(row)\n                  )\n            );\n         }\n      };\n\n      parseMe();\n\n      // return new Promise((resolve, reject) => {\n      //    // load the data\n      //    clonedDatacollection\n      //       .loadData()\n      //       .then(() => {\n\n      // set the cursor\n      clonedDatacollection.setStaticCursor();\n\n      var cursorID = this.getCursor();\n      if (cursorID) {\n         // NOTE: webix documentation issue: .getCursor() is supposed to return\n         // the .id of the item.  However it seems to be returning the {obj}\n         if (cursorID.id) cursorID = cursorID.id;\n\n         clonedDatacollection.setCursor(cursorID);\n      }\n\n      return clonedDatacollection;\n\n      // resolve(clonedDatacollection);\n      //       })\n      //       .catch(reject);\n      // });\n   }\n\n   filteredClone(filters) {\n      var obj = this.toObj();\n\n      // check to see that filters are set (this is sometimes helpful to select the first record without doing so at the data collection level)\n      if (filters?.rules?.length) {\n         if (obj.settings.objectWorkspace.filterConditions?.rules?.length) {\n            obj.settings.objectWorkspace.filterConditions.rules =\n               obj.settings.objectWorkspace.filterConditions.rules.concat(\n                  filters.rules\n               );\n         } else {\n            obj.settings.objectWorkspace.filterConditions = filters;\n         }\n      }\n      let clonedDC = this.clone(obj);\n      return clonedDC; // new ABViewDataCollection(settings, this.application, this.parent);\n   }\n\n   //\n   // Event handles\n   //\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    *              emitter: object,\n    *              eventName: string,\n    *              listener: function\n    *            }\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      this.__events = this.__events || [];\n\n      let exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    */\n   eventClear() {\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   /**\n    * @method eventRemove()\n    * unsubscribe a event.\n    *\n    * @param {string} eventName - Name of the event\n    * @param {object} emitter - Emitter object\n    */\n   eventRemove(eventName, emitter = null) {\n      if (this.__events?.length > 0 && eventName) {\n         this.__events.forEach((e) => {\n            if (eventName == e.eventName && (!emitter || emitter == e.emitter))\n               e.emitter.removeListener(e.eventName, e.listener);\n         });\n\n         this.__events = this.__events.filter((e) => e.eventName != eventName);\n      }\n   }\n\n   get userScopes() {\n      return [];\n   }\n\n   get isCursorFollow() {\n      return (\n         this.settings.followDatacollectionID &&\n         (!this.settings.linkDatacollectionID || !this.settings.linkFieldID)\n      );\n   }\n\n   get datacollectionFollow() {\n      if (!this.isCursorFollow) return null;\n\n      return (this.AB ?? AB).datacollectionByID(\n         this.settings.followDatacollectionID\n      );\n   }\n\n   get previousCursorId() {\n      return this.__previousCursorId;\n   }\n\n   waitReady() {\n      // if (this.dataStatus == this.dataStatusFlag.initialized) {\n      //    return Promise.resolve();\n      // }\n      // console.log(`DC[${this.label}] waiting for initializedData.`);\n      // return new Promise((resolve /*, reject */) => {\n      //    this.once(\"initializedData\", ()=>{\n      //       resolve();\n      //    })\n\n      // })\n\n      return this.waitForDataCollectionToInitialize(this);\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nmodule.exports = class ABDefinitionCore {\n   constructor(attributes, AB) {\n      this.AB = AB;\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n\t\t{\n\t\t\tid: uuid(),\n\t\t\tname: 'name',\n\t\t\ttype: 'xxxxx',\n\t\t\tjson: \"{json}\"\n\t\t}\n\t\t*/\n      if (attributes.id) {\n         this.id = attributes.id;\n      }\n      this.name =\n         attributes?.name ||\n         attributes?.json?.name ||\n         attributes?.json?.label ||\n         attributes?.json?.translations?.[0]?.label ||\n         \"\";\n      if (!this.name) {\n         this.AB.notify.builder(\n            new Error(\"Attributes for definition had no 'name'\"),\n            {\n               context: \"ABDefinitionCore.fromValues()\",\n               attributes,\n            }\n         );\n      }\n      this.type = attributes.type || attributes?.json?.type || \"\";\n      this.json = attributes.json || null;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      return {\n         id: this.id,\n         name: this.name,\n         type: this.type,\n         json: this.json,\n      };\n   }\n\n   /**\n    * @method destroy()\n    * destroy the current instance of ABDefinition\n    * Also remove it from our parent application\n    * @return {Promise}\n    */\n   destroy() {\n      return this.AB.definitionDestroy(this.id);\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABObject with it's parent ABApplication\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   async save() {\n      if (this.id) {\n         return this.AB.definitionUpdate(this.id, this.toObj());\n      } else {\n         return this.AB.definitionCreate(this.toObj());\n      }\n   }\n};\n","/*\n * ABFactoryCore\n * an object that contains the definitions and references for a single tenant.\n * It is expected that an instance of this should be returned from an\n * ABBootstrap.init(req).then((AB)=>{}) call.\n */\n\n// const _ = require(\"lodash\");\n// const uuidv4 = require(\"uuid\");\n\nconst ABApplication = require(\"../platform/ABApplication\");\nconst ABApplicationMobile = require(\"../platform/ABApplicationMobile\");\nconst ABDefinition = require(\"../platform/ABDefinition\");\n\nconst ABComponent = require(\"../platform/ABComponent\");\n\nconst ABFieldManager = require(\"./ABFieldManager\");\n\nconst ABIndex = require(\"../platform/ABIndex\");\nconst ABObject = require(\"../platform/ABObject\");\nconst ABObjectExternal = require(\"../platform/ABObjectExternal\");\nconst ABObjectImport = require(\"../platform/ABObjectImport\");\nconst ABObjectApi = require(\"../platform/ABObjectApi\");\nconst ABDataCollection = require(\"../platform/ABDataCollection\");\nconst ABObjectQuery = require(\"../platform/ABObjectQuery\");\n\nconst ABHint = require(\"../platform/ABHint\");\nconst ABProcess = require(\"../platform/ABProcess\");\n\nconst ABProcessParticipant = require(\"../platform/process/ABProcessParticipant\");\nconst ABProcessLane = require(\"../platform/process/ABProcessLane\");\nconst ABProcessTaskManager = require(\"./process/ABProcessTaskManager\");\n\nconst ABStep = require(\"../platform/ABStep\");\n\nconst ABViewDetailItem = require(\"../platform/views/ABViewDetailItem\");\nconst ABViewFormItem = require(\"../platform/views/ABViewFormItem\");\nconst ABMobileViewFormItem = require(\"../platform/mobile/ABMobileViewFormItem\");\n\n// const ABObjectWorkspaceViewGrid = require(\"../platform/workspaceViews/ABObjectWorkspaceViewGrid\");\n// const ABObjectWorkspaceViewKanban = require(\"../platform/workspaceViews/ABObjectWorkspaceViewKanban\");\n// const ABObjectWorkspaceViewGantt = require(\"../platform/workspaceViews/ABObjectWorkspaceViewGantt\");\n\nconst RowFilter = require(\"../platform/RowFilter\");\nconst FilterComplex = require(\"../platform/FilterComplex\");\n\nconst ABMLClass = require(\"../platform/ABMLClass\");\n\nconst EventEmitter = require(\"../platform/ABEmitter\");\n\nclass ABFactory extends EventEmitter {\n   constructor(definitions) {\n      /**\n       * @param {hash} definitions\n       *        { ABDefinition.id : {ABDefinition} }\n       *        of all the definitions defined for the current Tenant\n       */\n\n      super();\n      this.setMaxListeners(0);\n\n      this._definitions = definitions || {};\n      // {hash}  { ABDefinition.id : {ABDefinition} }\n      // ensure ._definitions is a HASH{ ID : {ABDefinition}}\n      if (Array.isArray(definitions)) {\n         var hash = {};\n         definitions.forEach((d) => {\n            hash[d.id] = d;\n         });\n         this._definitions = hash;\n      }\n\n      //\n      //\n      // Manage our working objects\n      //\n\n      this._allApplications = [];\n      // {array} of all the ABApplication(s) in our site.\n\n      this._allObjects = [];\n      // {array} of all the ABObject(s) in our site.\n\n      this._allHints = [];\n      // {array} of all the ABHint(s) in our site.\n\n      this._allProcesses = [];\n      // {array} of all the ABProcess(s) in our site.\n\n      this._allQueries = [];\n      // {array} of all the ABObjectQuery(s) in our site.\n\n      this._allSteps = [];\n      // {array} of all the ABStep(s) in our site.\n\n      this._allDatacollections = [];\n      // {array} of all the ABDataCollection(s) in our site.\n\n      //\n      // Class References\n      //\n      this.Class = {\n         ABApplication,\n         ABComponent,\n         ABDefinition,\n         ABFieldManager,\n         ABIndex,\n         ABMLClass,\n         ABObject,\n         ABObjectExternal,\n         ABObjectImport,\n         ABObjectApi,\n         ABObjectQuery,\n         ABProcessParticipant,\n         // ABRole      // Do we need this anymore?\n\n         // ABObjectWorkspaceViewGrid,\n         // ABObjectWorkspaceViewKanban,\n         // ABObjectWorkspaceViewGantt,\n\n         ABProcessTaskManager,\n\n         ABViewDetailItem,\n         ABViewFormItem,\n         ABMobileViewFormItem,\n      };\n\n      //\n      // Rules\n      // These are a common set of \"rules\" for all platforms.\n      //\n      this.rules = {\n         /**\n          * @method AB.rules.isUUID\n          * evaluate a given value to see if it matches the format of a uuid\n          * @param {string} key\n          * @return {boolean}\n          */\n         isUUID: function (key) {\n            var checker = RegExp(\n               \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\",\n               \"i\"\n            );\n            return checker.test(key);\n         },\n\n         /**\n          * @method AB.rules.nameFilter()\n          * return a properly formatted name for an AppBuilder object.\n          * @param {string} name\n          *        The name of the object we are conditioning.\n          * @return {string}\n          */\n         nameFilter: function (name) {\n            return String(name).replace(/[^a-z0-9_.]/gi, \"\");\n         },\n\n         /**\n          * @method AB.rules.toApplicationNameFormat()\n          * return a properly formatted Application Name\n          * @param {string} name\n          *        The name of the Application we are conditioning.\n          * @return {string}\n          */\n         toApplicationNameFormat: function (name) {\n            return \"AB_\" + this.nameFilter(name);\n         },\n\n         /**\n          * @method AB.rules.toFieldRelationFormat()\n          * This function uses for define relation name of Knex Objection\n          * return a relation name of column\n          * @param {string} colName\n          *        The name of the Column\n          * @return {string}\n          */\n         toFieldRelationFormat: function (colName) {\n            return this.nameFilter(colName) + \"__relation\";\n         },\n\n         /**\n          * @method AB.rules.toJunctionTableFK()\n          * return foriegnkey (FK) column name for a junction table name\n          * @param {string} objectName\n          *        The name of the Object with a connection\n          * @param {string} columnName\n          *        The name of the connection columnName.\n          * @return {string}\n          */\n         toJunctionTableFK: function (objectName, columnName) {\n            var fkName = objectName + \"_\" + columnName;\n\n            if (fkName.length > 64) fkName = fkName.substring(0, 64);\n\n            return fkName;\n         },\n\n         /**\n          * @method AB.rules.toJunctionTableNameFormat()\n          * return many-to-many junction table name\n          * @param {string} appName\n          *        The name of the Application for this object\n          * @param {string} sourceTableName\n          *        The name of the source object we are conditioning.\n          * @param {string} targetTableName\n          *        The name of the target object we are conditioning.\n          * @param {string} colName\n          * @return {string}\n          */\n         toJunctionTableNameFormat: function (\n            appName,\n            sourceTableName,\n            targetTableName,\n            colName\n         ) {\n            // The maximum length of a table name in MySql is 64 characters\n            appName = this.toApplicationNameFormat(appName);\n            if (appName.length > 17) appName = appName.substring(0, 17);\n\n            if (sourceTableName.length > 15)\n               sourceTableName = sourceTableName.substring(0, 15);\n\n            if (targetTableName.length > 15)\n               targetTableName = targetTableName.substring(0, 15);\n\n            colName = this.nameFilter(colName);\n            if (colName.length > 14) colName = colName.substring(0, 14);\n\n            return \"{appName}_{sourceName}_{targetName}_{colName}\"\n               .replace(\"{appName}\", appName)\n               .replace(\"{sourceName}\", sourceTableName)\n               .replace(\"{targetName}\", targetTableName)\n               .replace(\"{colName}\", colName);\n         },\n\n         /**\n          * @method AB.rules.toObjectNameFormat\n          * return a properly formatted Object/Table Name\n          * @param {string} objectName\n          *        The {ABObject}.name of the Object we are conditioning.\n          * @return {string}\n          */\n         toObjectNameFormat: function (objectName) {\n            return `AB_${this.nameFilter(objectName)}`;\n         },\n      };\n\n      // Notify Helpers\n      this.notify.builder = (...params) => {\n         this.notify(\"builder\", ...params);\n      };\n\n      this.notify.developer = (...params) => {\n         this.notify(\"developer\", ...params);\n      };\n   }\n\n   /**\n    * @method definitionClean()\n    * make sure the provided ABDefinition values are properly formatted\n    * @param {ABDefinition} d\n    *        The json settings of an ABDefinition object.\n    */\n   definitionClean(d) {\n      if (typeof d.json == \"string\") {\n         try {\n            d.json = JSON.parse(d.json);\n         } catch (e) {\n            console.log(e);\n            console.error(` Error on definition id[${d.id}]`);\n         }\n      }\n   }\n\n   init() {\n      let allDefinitions = Object.keys(this._definitions).map(\n         (k) => this._definitions[k]\n      );\n      // {array} all our definitions in an Array format.\n\n      // make sure our definitions.json field is an {} and not string\n      allDefinitions.forEach((d) => {\n         this.definitionClean(d);\n      });\n\n      // perform these in order:\n      [\n         \"object\",\n         \"query\",\n         \"datacollection\",\n         \"process\",\n         \"hint\",\n         \"step\",\n         \"application\",\n      ].forEach((type) => {\n         var objTypes = allDefinitions.filter((d) => d.type == type);\n         objTypes.forEach((def) => {\n            let { keyList, keyFn } = this.objectKeysByDef(def);\n            if (keyList) {\n               this[keyList].push(this[keyFn](def.json));\n            }\n         });\n      });\n\n      this.emit(\"init.objects_ready\");\n      return Promise.resolve();\n   }\n\n   /**\n    * @method objectKeysByDef()\n    * Analyze the provided ABDefinition json and return which set of list and\n    * functions are used to create a new instance of this definition.\n    * @param {json} def\n    *        the ABDefinition json of the definition we are evaluating\n    * @return { keyList, keyFn }\n    *        keyList: {string}  which of our internal lists to store this new\n    *                 object.\n    *        keyFn: {string} which of our methods to call with the def.json\n    *               as the param that will create the new object.\n    *\n    *        ex:  this[keyList].push( this[keyFn](def.json));\n    *\n    *        if this def is not one of the types we track,\n    *        keyList = keyFn = null;\n    */\n   objectKeysByDef(def) {\n      switch (def.type) {\n         case \"application\":\n            return { keyList: \"_allApplications\", keyFn: \"applicationNew\" };\n\n         case \"datacollection\":\n            return {\n               keyList: \"_allDatacollections\",\n               keyFn: \"datacollectionNew\",\n            };\n\n         case \"hint\":\n            return { keyList: \"_allHints\", keyFn: \"hintNew\" };\n\n         case \"steps\":\n            return { keyList: \"_allSteps\", keyFn: \"stepNew\" };\n\n         case \"object\":\n            return { keyList: \"_allObjects\", keyFn: \"objectNew\" };\n\n         case \"process\":\n            return { keyList: \"_allProcesses\", keyFn: \"processNew\" };\n\n         case \"query\":\n            return { keyList: \"_allQueries\", keyFn: \"queryNew\" };\n\n         default:\n            // we don't manage any other\n            return { keyList: null, keyFn: null };\n      }\n   }\n\n   //\n   // Definitions\n   //\n\n   /**\n    * definitionByID(id)\n    * return an ABDefinition.json value ready for our objects to use.\n    * @param {string} id\n    *        the uuid of the ABDefinition to delete\n    * @param {bool} isRaw\n    *        indicates if we want the full ABDefinition, or the .json param\n    *        true : returns full ABDefinition value.\n    *        false: returns the .json parameter used by most ABObjects.\n    * @return {Promise}\n    */\n   definitionByID(id, isRaw = false) {\n      if (this._definitions[id]) {\n         if (isRaw) {\n            return this._definitions[id];\n         } else {\n            return this._definitions[id].json;\n         }\n      }\n      return null;\n   }\n\n   /**\n    * definitionNew(values)\n    * return an ABDefinition object tied to this Tenant.\n    * @param {obj} values\n    *        The value hash of the ABDefinition object to create.\n    * @return {ABDefinition}\n    */\n   definitionNew(values) {\n      return new ABDefinition(values, this);\n   }\n\n   /**\n    * definitionsParse()\n    * include the incoming definitions into our ABFactory. These new\n    * definitions will replace any existing ones with the same .id.\n    * @param {array[ABDefinitioin]} defs\n    *     the incoming array of ABDefinitions to parse.\n    * @return {Promise}\n    */\n   definitionsParse(defs = []) {\n      if (!Array.isArray(defs)) {\n         defs = [defs];\n      }\n\n      // store/replace the incoming definitions\n      // 1st: insert ALL our definitions internally\n      defs.forEach((d) => {\n         this.definitionClean(d);\n         this._definitions[d.id] = d;\n      });\n      // 2nd: Now we can then go through and signal the \"updates\"\n      // and the related objects can find their dependent definitions.\n      defs.forEach((d) => {\n         this.definitionSync(\"updated\", d.id, d);\n      });\n\n      return Promise.resolve();\n   }\n\n   /**\n    * definitionSync()\n    * Synchronize an individual definition into our repository of definitions.\n    * @param {string} op\n    *        the type of synchronization this is\n    *        [ \"created\", \"updated\", \"destroyed\"]\n    * @param {uuid} id\n    *        the definition.id of the definition we are synchronizing\n    * @param {json} def\n    *        the ABDefinition attributes we are storing.\n    */\n   definitionSync(op, id, def) {\n      var { keyList, keyFn } = this.objectKeysByDef(def);\n      if (keyList) {\n         var curr;\n         switch (op) {\n            case \"created\":\n               this[keyList].push(this[keyFn](def.json));\n               this.emit(\"definition.created\", def.json);\n               break;\n\n            case \"updated\":\n               // get the current object\n               curr = this[keyList].find((d) => d.id == id);\n\n               // remove from list\n               this[keyList] = this[keyList].filter((d) => d.id != id);\n               // add new one:\n               this[keyList].push(this[keyFn](def.json));\n\n               // signal this object needs to be updated:\n               // NOTE: if this is one of the objects we are tracking,\n               // we don't need to this.emit() the message.\n               if (curr) {\n                  curr.emit(\"definition.updated\", def.json);\n               } else {\n                  this.emit(\"definition.updated\", def.json);\n               }\n               break;\n\n            case \"destroyed\":\n               // get the current object\n               curr = this[keyList].find((d) => d.id == id);\n               if (curr) {\n                  // remove from list\n                  this[keyList] = this[keyList].filter((d) => d.id != id);\n\n                  // signal this object needs to be updated:\n                  curr.emit(\"definition.deleted\", def.json);\n\n                  this.emit(\"definition.deleted\", def.json);\n               }\n               break;\n         }\n      }\n   }\n\n   //\n   // ABObjects\n   //\n   /**\n    * @method applications()\n    * return all the ABApplications that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABApplications.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   applications(fn = () => true) {\n      return (this._allApplications || []).filter(fn);\n   }\n\n   /**\n    * @method applicationByID()\n    * returns a single ABApplication that matches the given ID.\n    * @param {string} ID\n    *        the .id/.name/.label of the ABApplication we are searching\n    *        for.\n    * @return {ABApplication}\n    *        the matching ABApplication object if found\n    *        {null} if not found.\n    */\n   applicationByID(ID) {\n      return this.applications((a) => a.id == ID)[0];\n   }\n\n   /**\n    * @method applicationNew()\n    * Return a new instance of an ABApplication object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABApplication object we are\n    *        creating.\n    * @return {ABApplication}\n    */\n   applicationNew(values) {\n      // just in case we got here by mistake:\n      if (values.appType == \"mobile\") {\n         return this.applicationMobileNew(values);\n      }\n\n      return new ABApplication(values, this);\n   }\n\n   /**\n    * @method applicationMobileNew()\n    * Return a new instance of an ABApplicationMobile object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABApplicationMobile object we are\n    *        creating.\n    * @return {ABApplicationMobile}\n    */\n   applicationMobileNew(values) {\n      return new ABApplicationMobile(values, this);\n   }\n\n   /**\n    * @method datacollections()\n    * return an array of all the ABDataCollection for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABDataCollection that\n    *        this fn returns true for.\n    * @return {array}\n    *        array of ABDataCollection\n    */\n   datacollections(filter = () => true) {\n      return (this._allDatacollections || []).filter(filter);\n   }\n\n   /**\n    * @method datacollectionByID()\n    * returns a single ABDatacollection that matches the given ID.\n    * @param {string} ID\n    *        the .id/.name/.label of the ABDatacollection we are searching\n    *        for.\n    * @return {ABDatacollection}\n    *        the matching ABDatacollection object if found\n    *        {null} if not found.\n    */\n   datacollectionByID(ID) {\n      // an undefined or null ID should not match any DC.\n      if (!ID) return null;\n\n      return this.datacollections((dc) => {\n         return dc.id == ID || dc.name == ID || dc.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method datacollectionNew()\n    * create a new instance of ABDataCollection\n    * @param {obj} values\n    *        the initial values for the DC\n    * @return {ABDatacollection}\n    */\n   datacollectionNew(values) {\n      var dc = new ABDataCollection(values, this);\n      dc.on(\"destroyed\", () => {\n         // make sure it is no longer in our internal list\n         this._allDatacollections = this._allDatacollections.filter(\n            (d) => d.id != dc.id\n         );\n      });\n      return dc;\n   }\n\n   /**\n    * @method fieldNew()\n    * return an instance of a new (unsaved) ABField that is tied to a given\n    * ABObject.\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    * @param {obj} values  the initial values for this field.\n    *                - { key:'{string}'} is required\n    * @param {ABObject} object  the parent object this field belongs to.\n    * @return {ABField}\n    */\n   fieldNew(values, object) {\n      // NOTE: ABFieldManager returns the proper ABFieldXXXX instance.\n      return ABFieldManager.newField(values, object);\n   }\n\n   /**\n    * @method indexNew()\n    * return an instance of a new (unsaved) ABIndex.\n    * @return {ABIndex}\n    */\n   indexNew(values, object) {\n      return new ABIndex(values, object);\n   }\n\n   /**\n    * @method Label()\n    * a simple label factory.\n    * It is expected to be called like this:\n    * @codestart\n    *    var L = AB.Label();\n    *    var outputText = L(\"Hello World\");\n    *    var o2 = L(\"I'm {0} years old\", [5]);\n    * @codeend\n    * @return {fn}\n    */\n   Label() {\n      return (key, altText, values = []) => {\n         var label = key;\n         if (altText) {\n            if (Array.isArray(altText)) {\n               values = altText;\n            } else {\n               label = altText;\n            }\n         }\n\n         values.forEach((v, i) => {\n            var sub = `{${i}}`;\n            label = label.replaceAll(sub, v);\n         });\n\n         return label;\n      };\n   }\n\n   /**\n    * @method objects()\n    * return an array of all the ABObjects for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABObjects that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of ABObject\n    */\n   objects(filter = () => true) {\n      return (this._allObjects || []).filter(filter);\n   }\n\n   /**\n    * @method objectByID()\n    * return the specific object requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   objectByID(ID) {\n      return this.objects((o) => {\n         return o.id == ID || o.name == ID || o.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method objectNew()\n    * return an instance of a new (unsaved) ABObject that is tied to this\n    * ABApplication.\n    * NOTE: this new object is not included in our this.objects until a .save()\n    * is performed on the object.\n    * @return {ABObject}\n    */\n   objectNew(values) {\n      var newObj = null;\n\n      if (values.isExternal == true)\n         newObj = new ABObjectExternal(values, this);\n      else if (values.isImported == true)\n         newObj = new ABObjectImport(values, this);\n      else if (values.isAPI == true) newObj = new ABObjectApi(values, this);\n      else newObj = new ABObject(values, this);\n\n      /*\n      // IS THIS CORRECT?\n      newObj.on(\"destroyed\", () => {\n         // make sure it is no longer in our internal list\n         this._allObjects = this._allObjects.filter((o) => o.id != newObj.id);\n      });\n      */\n\n      return newObj;\n   }\n\n   objectFile() {\n      return this.objectByID(\"4a9d89c9-f4eb-41af-91e4-909eff389f3e\");\n   }\n\n   objectLanguage() {\n      return this.objectByID(\"d84cd351-d96c-490f-9afb-2a0b880ca0ec\");\n   }\n\n   objectProcessDefinition() {\n      return this.objectByID(\"af91fc75-fb73-4d71-af14-e22832eb5915\");\n   }\n\n   objectProcessForm() {\n      return this.objectByID(\"d36ae4c8-edef-48d8-bd9c-79a0edcaa067\");\n   }\n\n   objectProcessInstance() {\n      return this.objectByID(\"2ba85be0-78db-4eda-ba43-c2c4e3831849\");\n   }\n\n   objectRole() {\n      return this.objectByID(\"c33692f3-26b7-4af3-a02e-139fb519296d\");\n   }\n\n   objectScope() {\n      return this.objectByID(\"af10e37c-9b3a-4dc6-a52a-85d52320b659\");\n   }\n\n   objectToken() {\n      return this.objectByID(\"08826ac7-4b33-4745-a3d7-f7831ca4ff59\");\n   }\n\n   objectUser() {\n      return this.objectByID(\"228e3d91-5e42-49ec-b37c-59323ae433a1\");\n   }\n\n   objectKey() {\n      return this.objectByID(\"d734fe8c-b615-446c-8a5f-793ddece19f9\");\n   }\n\n   objectSecret() {\n      return this.objectByID(\"db5b3b26-5300-4c92-bc73-8ce4f4696992\");\n   }\n\n   //\n   // Hints\n   //\n   /**\n    * @method hints()\n    * return all the ABHints that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABHints.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   hints(filter = () => true) {\n      return (this._allHints || []).filter(filter);\n   }\n\n   /**\n    * @method hintByID()\n    * return the specific hint requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   hintID(ID) {\n      return this.hints((h) => {\n         return h.id == ID || h.name == ID || h.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method hintNew()\n    * return an instance of a new (unsaved) ABHint that is tied to this\n    * ABApplication.\n    * NOTE: this new hint is not included in our this.hints until a .save()\n    * is performed on the object.\n    * @return {ABHint}\n    */\n   hintNew(values) {\n      var newHint = new ABHint(values, this);\n\n      return newHint;\n   }\n\n   //\n   // Steps\n   //\n   /**\n    * @method steps()\n    * return all the ABSteps that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABSteps.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   steps(filter = () => true) {\n      return (this._allSteps || []).filter(filter);\n   }\n\n   /**\n    * @method stepByID()\n    * return the specific step requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   stepID(ID) {\n      return this.steps((s) => {\n         return s.id == ID || s.name == ID || s.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method stepNew()\n    * return an instance of a new (unsaved) ABStep that is tied to this\n    * ABApplication.\n    * NOTE: this new step is not included in our this.steps until a .save()\n    * is performed on the object.\n    * @return {ABHint}\n    */\n   stepNew(id, hintID) {\n      var stepDef = this.definitionByID(id);\n      if (stepDef) {\n         var getStep = new ABStep(stepDef, this);\n         return getStep;\n      } else {\n         var params = {\n            settings: {\n               hint: hintID,\n            },\n         };\n         var newStep = new ABStep(params, this);\n         return newStep;\n      }\n      // return null;\n   }\n\n   //\n   // Processes\n   //\n   /**\n    * @method processes()\n    * return all the ABProcess that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABProcess.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   processes(filter = () => true) {\n      return (this._allProcesses || []).filter(filter);\n   }\n\n   /**\n    * @method processByID()\n    * return the specific process requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   processByID(ID) {\n      return this.processes((p) => {\n         return p.id == ID || p.name == ID || p.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method processNew()\n    * Return a new instance of an ABProcess object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABProcess object we are\n    *        creating.\n    * @return {ABProcess}\n    */\n   processNew(values) {\n      return new ABProcess(values, this);\n   }\n\n   /**\n    * @method processElementNew(id)\n    * return an instance of a new ABProcessOBJ that is tied to a given\n    * ABProcess.\n    * @param {string} id\n    *        the ABDefinition.id of the element we are creating\n    * @param {ABProcess} process\n    *        the process this task is a part of.\n    * @return {ABProcessTask}\n    */\n   processElementNew(id, process) {\n      var taskDef = this.definitionByID(id);\n      if (taskDef) {\n         switch (taskDef.type) {\n            case ABProcessParticipant.defaults().type:\n               return new ABProcessParticipant(taskDef, process, this);\n            // break;\n\n            case ABProcessLane.defaults().type:\n               return new ABProcessLane(taskDef, process, this);\n            // break;\n\n            default:\n               // default to a Task\n               return ABProcessTaskManager.newTask(taskDef, process, this);\n            // break;\n         }\n      }\n      return null;\n   }\n\n   /**\n    * @method processElementNewForModelDefinition(def)\n    *\n    * return an instance of a new ABProcess[OBJ] that is tied to the given\n    * BPMI:Element definition.\n    *\n    * @param {BPMI:Element} element the element definition from our BPMI\n    *              modler.\n    * @return {ABProcess[OBJ]}\n    */\n   processElementNewForModelDefinition(element, process) {\n      var newElement = null;\n\n      switch (element.type) {\n         case \"bpmn:Participant\":\n            newElement = new ABProcessParticipant({}, process, this);\n            break;\n\n         case \"bpmn:Lane\":\n            newElement = new ABProcessLane({}, process, this);\n            break;\n\n         default:\n            var defaultDef = ABProcessTaskManager.definitionForElement(element);\n            if (defaultDef) {\n               newElement = ABProcessTaskManager.newTask(\n                  defaultDef,\n                  process,\n                  this\n               );\n            }\n            break;\n      }\n\n      // now make sure this new Obj pulls any relevant info from the\n      // diagram element\n      if (newElement) {\n         newElement.fromElement(element);\n      }\n      return newElement;\n   }\n\n   /**\n    * @method queries()\n    * return an array of all the ABObjectQuery(s).\n    * @param {fn} filter\n    *        a filter fn to return a set of ABObjectQuery(s) that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of ABObjectQuery\n    */\n   queries(filter = () => true) {\n      return (this._allQueries || []).filter(filter);\n   }\n   // queriesAll() {\n   //    console.error(\n   //       \"ABFactory.queriesAll() Depreciated! Use .queries() instead. \"\n   //    );\n   //    return this.queries();\n   // }\n\n   /**\n    * @method queryByID()\n    * return the specific query requested by the provided id.\n    * NOTE: this method has been extended to allow .name and .label\n    * as possible lookup values.\n    * @param {string} ID\n    * @return {ABObjectQuery}\n    */\n   queryByID(ID) {\n      return this.queries((q) => {\n         return q.id == ID || q.name == ID || q.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method queryNew()\n    * return an instance of a new (unsaved) ABObjectQuery that is tied to this\n    * ABFactory.\n    * @return {ABObjectQuery}\n    */\n   queryNew(values) {\n      return new ABObjectQuery(values, this);\n   }\n\n   /**\n    * @method rowfilterNew()\n    * return an instance of a new RowFilter that is tied to this\n    * ABFactory.\n    * @return {RowFilter}\n    */\n   rowfilterNew(App, idBase) {\n      if (App) {\n         console.error(\"!! Who is calling this with an App?\");\n      }\n      return new RowFilter(App || this._App, idBase, this);\n   }\n\n   /**\n    * @method filterComplexNew()\n    * return an instance of a new FilterComplex that is tied to this\n    * ABFactory.\n    * @return {FilterComplex}\n    */\n   filterComplexNew(idBase, options = {}) {\n      return new FilterComplex(idBase, this, options);\n   }\n\n   /**\n    * @method viewNewDetatched()\n    * Return an instance of a View that is NOT attached to an ABApplication.\n    * @return {ABViewXXX}\n    */\n   viewNewDetatched(values) {\n      if (!this._mockApp) {\n         this._mockApp = this.applicationNew({});\n      }\n      return this._mockApp.viewNew(values, this._mockApp);\n   }\n\n   //\n   // Utilities\n   //\n\n   /**\n    * notify()\n    * will send alerts to a group of people. These alerts are usually about\n    * configuration errors, or software problems.\n    * @param {string} domain\n    *     which group of people we are sending a notification to.\n    * @param {Error} error\n    *     An error object generated at the point of issue.\n    * @param {json} info\n    *     Additional related information concerning the issue.\n    */\n   notify(/* ...params */) {\n      console.error(\n         \"ABFactory.notify() is expected to be overwritten by the platform!\"\n      );\n   }\n\n   /**\n    * notifyInfo()\n    * a common routine to parse the info parameter provided to .notify() into\n    * a more detailed set of data.\n    * @param {json} info\n    * @return {json}\n    */\n   _notifyInfo(info) {\n      var moreInfo = {};\n\n      if (info) {\n         Object.keys(info).forEach((k) => {\n            switch (k) {\n               case \"field\":\n                  moreInfo.objectID = info[k].object?.id;\n                  moreInfo.objectName = info[k].object?.name;\n                  moreInfo.fieldID = info[k].id;\n                  moreInfo.fieldName = info[k].label || info[k].name;\n                  break;\n\n               case \"object\":\n                  moreInfo.objectID = info[k].id;\n                  moreInfo.objectName = info[k].name;\n                  break;\n\n               case \"datacollection\":\n                  moreInfo.datacollectionID = info[k].id;\n                  moreInfo.datacollectionName = info[k].label || info[k].name;\n                  var ds = info[k].datasource;\n                  if (ds) {\n                     moreInfo.datacollectionDSID = ds.id;\n                     moreInfo.datacollectionDSName = ds.name;\n                  }\n                  break;\n\n               case \"process\":\n                  moreInfo.processID = info[k].id;\n                  moreInfo.processName = info[k].label || info[k].name;\n                  break;\n\n               case \"req\":\n                  moreInfo.req = {\n                     jobID: info[k].jobID,\n                     tenantID: info[k]._tenantID,\n                     user: info[k]._user,\n                  };\n                  break;\n\n               case \"task\":\n                  if (info[k].process) {\n                     moreInfo.processID = info[k].process.id;\n                     moreInfo.processName =\n                        info[k].process.label || info[k].process.name;\n                  }\n                  moreInfo.taskID = info[k].id;\n                  moreInfo.taskName = info[k].label || info[k].name;\n                  break;\n\n               case \"view\":\n                  if (info[k].application) {\n                     moreInfo.applicationID = info[k].application.id;\n                     moreInfo.applicationName =\n                        info[k].application.label || info[k].application.name;\n                  }\n                  moreInfo.viewID = info[k].id;\n                  moreInfo.viewName = info[k].label || info[k].name;\n                  moreInfo.viewKey = info[k].key;\n                  break;\n               default:\n                  moreInfo[k] = info[k];\n                  break;\n            }\n         });\n      }\n\n      return moreInfo;\n   }\n}\n\nmodule.exports = ABFactory;\n","/*\n * ABFieldManager\n *\n * An interface for managing the different ABFields available in our AppBuilder.\n *\n */\n\n/*\n * Fields\n * A name => ABField  hash of the different ABFields available.\n */\nvar Fields = {};\n\nvar AllFieldClasses = [\n   require(\"../platform/dataFields/ABFieldString\"),\n   require(\"../platform/dataFields/ABFieldLongText\"),\n   require(\"../platform/dataFields/ABFieldNumber\"),\n   require(\"../platform/dataFields/ABFieldDate\"),\n   require(\"../platform/dataFields/ABFieldDateTime\"),\n   require(\"../platform/dataFields/ABFieldBoolean\"),\n   require(\"../platform/dataFields/ABFieldList\"),\n   require(\"../platform/dataFields/ABFieldTree\"),\n   require(\"../platform/dataFields/ABFieldEmail\"),\n   require(\"../platform/dataFields/ABFieldFile\"),\n   require(\"../platform/dataFields/ABFieldImage\"),\n   require(\"../platform/dataFields/ABFieldUser\"),\n   require(\"../platform/dataFields/ABFieldConnect\"),\n   require(\"../platform/dataFields/ABFieldCalculate\"),\n   require(\"../platform/dataFields/ABFieldTextFormula\"),\n   require(\"../platform/dataFields/ABFieldFormula\"),\n   require(\"../platform/dataFields/ABFieldAutoIndex\"),\n   require(\"../platform/dataFields/ABFieldJson\"),\n   require(\"../platform/dataFields/ABFieldCombine\"),\n   require(\"../platform/dataFields/ABFieldSelectivity\"),\n];\n\nAllFieldClasses.forEach((FIELD) => {\n   Fields[FIELD.defaults().key] = FIELD;\n});\n\nmodule.exports = class ABFieldManager {\n   /*\n    * @function allFields\n    * return all the currently defined ABFields in an array.\n    * @return [{ABField},...]\n    */\n   static allFields() {\n      var fields = [];\n      for (var f in Fields) {\n         fields.push(Fields[f]);\n      }\n      return fields;\n   }\n\n   /**\n    * @function fieldByKey()\n    * Return a specific ABField that matches the given key\n    * @param {string} key\n    *        The ABField.key value we are looking for.\n    * @return {ABFieldXXX || undefined}\n    */\n   static fieldByKey(key) {\n      return Fields[key];\n   }\n\n   /*\n    * @function newField\n    * return an instance of an ABField based upon the values.key value.\n    * @return {ABField}\n    */\n   static newField(values, object) {\n      if (values.key) {\n         try {\n            return new Fields[values.key](values, object);\n         } catch (err) {\n            console.log(\"Error\", err);\n            console.log(\"Available fields\", Fields);\n            console.log(\"Requested field\", values.key);\n         }\n      } else {\n         console.log(\"-------\");\n         console.log(\"values:\");\n         console.error(values);\n         console.log();\n         console.error(\"object:\");\n         console.error(object);\n         console.log(\"-------\");\n         throw new Error(\n            `ABFieldManager.newField(): Unknown Field Key [${values.name}][${values.key}] for object[${object.name}]`\n         );\n         //// TODO: what to do here?\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nmodule.exports = class ABHintCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"name\", \"description\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      // this.elements().forEach((e) => {\n      //    e.onProcessReady();\n      // });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      description: 'description',\n      type: 'hint',\n      settings: {\n         active: {boolean},\n         view: uuid\n      }\n    }\n    */\n\n      let active = attributes?.settings?.active ?? \"1\";\n\n      this.id = attributes?.id || \"\";\n      this.name = attributes?.name || \"New Tutorial\";\n      this.description = attributes?.description || \"\";\n      this.type = attributes?.type || \"hint\";\n      this.settings = {};\n      this.settings.active = active;\n      this.settings.transition = attributes?.settings?.transition;\n      this.settings.showIntroStep = attributes?.settings?.showIntroStep;\n      this.settings.view = attributes?.settings?.view || \"\";\n      this.stepIDs = attributes?.stepIDs || [];\n\n      let currSteps = this?._steps || {};\n      this._steps = {};\n      (attributes?.stepIDs || []).forEach((sID) => {\n         if (!sID) return;\n         var ele = this.AB.stepNew(sID, this.id);\n         if (ele) {\n            this._steps[sID] = ele;\n         }\n      });\n      if (attributes) super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"type\", \"settings\", \"stepIDs\", \"id\", \"name\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   /**\n    * steps()\n    * return an array of steps that match the given filter (or all steps\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABStep]}\n    */\n   steps(fn = () => true) {\n      var allSteps = Object.keys(this._steps).map((e) => {\n         return this._steps[e];\n      });\n      return allSteps.filter(fn);\n   }\n\n   /**\n    * stepAdd()\n    * insert a step to be added to this hint.\n    * @param {ABStep} element\n    *        the full instance of an ABStep to track.\n    */\n   stepAdd(step) {\n      this._steps[step.id] = step;\n   }\n\n   /**\n    * stepByID()\n    * return the {ABStep} that has the given .id\n    * @param {string} id\n    * @return {ABStep[OBJ]}\n    */\n   stepByID(id) {\n      return this._steps[id] ?? null;\n   }\n\n   /**\n    * stepRemove()\n    * remove a step from being displayed by this hint.\n    * @param {id} ABStep ID\n    *        an ID of a step\n    *        to remove.\n    */\n   stepRemove(id) {\n      // remove from stepIDs array\n      let stepIndex = this.stepIDs.indexOf(id);\n      if (stepIndex > -1) {\n         this.stepIDs.splice(stepIndex, 1);\n      }\n      // remove from _steps definitions\n      delete this._steps[id];\n   }\n};\n","const ABMLClass = require(\"../platform/ABMLClass\");\n\nmodule.exports = class ABIndexCore extends ABMLClass {\n   constructor(attributes, object) {\n      super([\"label\"], object.AB);\n      this.object = object;\n\n      this.fromValues(attributes);\n   }\n\n   fromValues(attributes) {\n      /*\n      {\n        id: uuid(),\n        name: 'name',\n        fields:[\n            {ABDataField.id}\n        ],\n        unique: {boolean}\n      }\n      */\n      this.id = attributes.id;\n      this.type = \"index\";\n      this.name = attributes.name;\n      this.unique = JSON.parse(attributes.unique || false);\n\n      // Convert to an array\n      if (attributes.fieldIDs && !Array.isArray(attributes.fieldIDs)) {\n         attributes.fieldIDs = [attributes.fieldIDs];\n      }\n\n      this._unknownFieldIDs = [];\n      this.fields = (attributes.fieldIDs || [])\n         .map((f) => {\n            let field = this.object.fieldByID(f);\n            if (!field) {\n               this._unknownFieldIDs.push(f);\n               let err = new Error(\n                  `Index[${this.name}][${this.id}] is referencing an unknown field[${f}]`\n               );\n               this.AB.notify.developer(err, {\n                  index: this.id,\n                  field: f,\n               });\n            }\n            return field;\n         })\n         .filter((fId) => fId);\n\n      if (this.fields.length == 0) {\n         let err = new Error(\n            `Index[${this.name}][${this.id}] is not referencing any fields`\n         );\n         this.AB.notify.developer(err, {\n            index: this.id,\n            attributeFieldIDs: attributes.fieldIDs || [],\n         });\n      }\n\n      // let the MLClass process the Translations\n      super.fromValues(attributes);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      let result = super.toObj();\n\n      result.id = this.id;\n      result.type = \"index\";\n      result.name = this.name;\n      result.unique = this.unique;\n\n      // Convert to an array\n      if (this.fields && !Array.isArray(this.fields)) {\n         this.fields = [this.fields];\n      }\n\n      result.fieldIDs = (this.fields || [])\n         .map((f) => {\n            // Convert to the id of field\n            return f.id || f;\n         })\n         .filter((fId) => fId);\n\n      // carry along the unknown Field IDs so a\n      // developer/builder can come along and trace\n      // what happened.\n      this._unknownFieldIDs.forEach((f) => {\n         result.fieldIDs.push(f);\n      });\n\n      return result;\n   }\n\n   get indexName() {\n      let tableName = this.object.dbTableName();\n\n      // Maximum 64 characters long\n      return `${tableName}_${this.name}`.replace(/ /g, \"\").substring(0, 64);\n   }\n\n   get uniqueName() {\n      let indexName = this.indexName.substring(0, 57);\n\n      return `${indexName}_unique`;\n   }\n};\n","/**\n * ABMLClassCore\n * manage the multilingual information of an instance of a AB Defined Class.\n *\n * these classes have certain fields (\"label\", \"description\"), that can be\n * represented in different language options as defined by our platform.\n *\n * This core ABMLClass will internally track the multilingual fields\n * (this.mlFields) and auto\n */\nvar ABEmitter = require(\"../platform/ABEmitter\");\nmodule.exports = class ABMLClassCore extends ABEmitter {\n   constructor(fieldList, AB) {\n      super();\n      this.mlFields = fieldList || [\"label\"];\n      // {array}\n      // field names of values that are multilingual\n\n      this.AB = AB;\n      // {ABFactory}\n      // our common source of references for other AB objects\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   /**\n    * @method fromValues\n    * called during the .fromValues() work chain.  Should be called\n    * AFTER all the current data is already populated.\n    */\n   fromValues(attributes) {\n      this.translations = attributes.translations;\n\n      // if translations were provided\n      if (this.translations) {\n         // multilingual fields: label, description\n         this.translate();\n      } else {\n         // maybe this came from a form that has ML values in the attributes, but\n         // no .translations[] yet:\n         // check for mlFields in attributes and record them here:\n         (this.mlFields || []).forEach((field) => {\n            if (attributes[field]) {\n               this[field] = attributes[field];\n            }\n         });\n      }\n   }\n\n   /**\n    * @function defaultTranslations()\n    * return an initial .translations entry to initialize the\n    * translations values of a given translateable object.\n    * @param {array} fields  the multilingual fields this obj manages.\n    * @param {json}  values  a default set of values for this object.\n    * @return {array}  of translation entries.\n    */\n   defaultTranslations(fields, values) {\n      values = values || {};\n\n      var entry = {\n         // Question: should this be this.AB.Multilingual.currentLanguage() || \"en\"\n         // currently since the defaults are sent in programattically, we are\n         // expecting the labels to be in \"en\"\n         language_code: \"en\",\n      };\n\n      fields.forEach((f) => {\n         entry[f] = values[f] || f;\n      });\n\n      return [entry];\n   }\n\n   /**\n    * @method languageDefault\n    * return a default language code.\n    * @return {string}\n    */\n   languageDefault() {\n      return \"en\";\n   }\n\n   /**\n    * @method toObj()\n    * called during the .toObj() work chain.  Should be called\n    * BEFORE the current data is populated.\n    */\n   toObj() {\n      this.unTranslate();\n\n      return {\n         translations: this.translations,\n      };\n   }\n\n   /**\n    * @method toDefinition()\n    * convert this instance into an ABDefinition object.\n    * @return {ABDefinition}\n    */\n   toDefinition() {\n      return this.AB.definitionNew({\n         id: this.id,\n         name: this.name,\n         type: this.type,\n         json: this.toObj(),\n      });\n   }\n\n   /**\n    * @method translate\n    * Given a set of json data, pull out any multilingual translations\n    * and flatten those values to the base object.\n    * @param {obj} obj  The instance of the object being translated\n    * @param {json} json The json data being used for translation.\n    *                      There should be json.translations = [ {transEntry}, ...]\n    *                      where transEntry = {\n    *                          language_code:'en',\n    *                          field1:'value',\n    *                          ...\n    *                      }\n    * @param {array} fields an Array of multilingual fields to pull to\n    *                       the obj[field] value.\n    */\n   translate(obj, json, fields, languageCode = null) {\n      if (!obj) obj = this;\n      if (!json) json = this;\n      if (!fields) fields = this.mlFields || [];\n\n      if (!json.translations) {\n         json.translations = [];\n      }\n\n      if (typeof json.translations == \"string\") {\n         json.translations = JSON.parse(json.translations);\n      }\n\n      var currLanguage = languageCode || this.languageDefault();\n\n      if (fields && fields.length > 0) {\n         // [fix] if no matching translation is in our json.translations\n         //       object, then just use the 1st one.\n         var first = null; // the first translation entry encountered\n         var found = false; // did we find a matching translation?\n\n         json.translations.forEach(function (t) {\n            if (!first) first = t;\n\n            // find the translation for the current language code\n            if (t.language_code == currLanguage) {\n               found = true;\n\n               // copy each field to the root object\n               fields.forEach(function (f) {\n                  if (t[f] != null) obj[f] = t[f];\n\n                  obj[f] = t[f] || \"\"; // default to '' if not found.\n               });\n            }\n         });\n\n         // if !found, then use the 1st entry we did find.  prepend desired\n         // [language_code] to each of the fields.\n         if (!found && first) {\n            // copy each field to the root object\n            fields.forEach(function (f) {\n               if (first[f] != null && first[f] != \"\")\n                  obj[f] = `[${currLanguage}]${first[f]}`;\n               else obj[f] = \"\"; // default to '' if not found.\n            });\n         }\n      }\n   }\n\n   /**\n    * @method unTranslate\n    * Take the multilingual information in the base obj, and push that\n    * down into the json.translations data.\n    * @param {obj} obj  The instance of the object with the translation\n    * @param {json} json The json data being used for translation.\n    *                      There should be json.translations = [ {transEntry}, ...]\n    *                      where transEntry = {\n    *                          language_code:'en',\n    *                          field1:'value',\n    *                          ...\n    *                      }\n    * @param {array} fields an Array of multilingual fields to pull from\n    *                       the obj[field] value.\n    */\n   unTranslate(obj, json, fields) {\n      if (!obj) obj = this;\n      if (!json) json = this;\n      if (!fields) fields = this.mlFields || [];\n\n      if (!json.translations) {\n         json.translations = [];\n      }\n\n      var currLanguage = this.languageDefault();\n\n      if (fields && fields.length > 0) {\n         var foundOne = false;\n\n         json.translations.forEach(function (t) {\n            // find the translation for the current language code\n            if (t.language_code == currLanguage) {\n               // copy each field to the root object\n               fields.forEach(function (f) {\n                  // verify obj[f] is defined\n                  // --> DONT erase the existing translation\n                  if (obj[f] != null) {\n                     t[f] = obj[f];\n                  }\n               });\n\n               foundOne = true;\n            }\n         });\n\n         // if we didn't update an existing translation\n         if (!foundOne) {\n            // create a translation entry:\n            var trans = {};\n\n            // assume current languageCode:\n            trans.language_code = currLanguage;\n\n            fields.forEach(function (field) {\n               if (obj[field] != null) {\n                  trans[field] = obj[field];\n               }\n            });\n\n            json.translations.push(trans);\n         }\n      }\n   }\n};\n","//\n// ABModelCore\n//\n// Represents the Data interface for an ABObject data.\n//\n// to use an ABModel to load a DataTable:\n// Method 1:\n//  gather all the data externally and send to the DataTable\n//    Model.findAll()\n//    .then((data)=>{\n//      DataTable.parse(data);\n//    })\n//\n\nmodule.exports = class ABModelCore {\n   constructor(object) {\n      // link me to my ABObject\n      this.object = object;\n      this.AB = object.AB;\n\n      this._where = null;\n      this._sort = null;\n      this._skip = null;\n      this._limit = null;\n\n      this.staleRefreshInProcess = false;\n      this.staleRefreshMap = {\n         /* id : Promise */\n      };\n      this.staleRefreshPending = [];\n      this.staleRefreshTimerID = null;\n\n      // include this\n      this.responseContext = { key: \"--\", context: {} };\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   contextKey(key) {\n      this.responseContext.key = key || \"--\";\n   }\n\n   contextValues(values) {\n      this.responseContext.context = values || {};\n   }\n\n   // Prepare multilingual fields to be untranslated\n   // Before untranslating we need to ensure that values.translations is set.\n   prepareMultilingualData(values) {\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n      // if mlFields are inside of the values saved we want to translate otherwise do not because it will reset the translation field and you may loose unchanged translations\n      var shouldTranslate = false;\n      if (mlFields.length) {\n         mlFields.forEach(function (field) {\n            if (values[field] != null) {\n               shouldTranslate = true;\n            }\n         });\n      }\n      if (shouldTranslate) {\n         if (\n            values.translations == null ||\n            typeof values.translations == \"undefined\" ||\n            values.translations == \"\"\n         ) {\n            values.translations = [];\n         }\n         this.object.unTranslate(values, values, mlFields);\n      }\n   }\n\n   request(method, params) {\n      console.error(\n         \"!!! ABModelCore.request() should be overridden by platform.\"\n      );\n      return Promise.resolve();\n   }\n\n   // /**\n   //  * @method create\n   //  * update model values on the server.\n   //  */\n   // create(values) {\n\n   //   this.prepareMultilingualData(values);\n\n   //   var params = {\n   //     url: this.object.urlRest(),\n   //     params: values\n   //   }\n   //   return this.request('post', params)\n   //     .then((data) => {\n\n   //       this.normalizeData(data);\n\n   //       return data;\n\n   //       // FIX: now with sockets, the triggers are fired from socket updates.\n   //       // trigger a create event\n   //       // triggerEvent('create', this.object, data);\n\n   //     })\n   //     .catch(reject);\n\n   // }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   // delete(id) {\n\n   //   var params = {\n   //     url: this.object.urlRestItem(id)\n   //   }\n   //   return this.request('delete', params)\n   //     .then((data) => {\n\n   //       return data;\n\n   //       // FIX: now with sockets, the triggers are fired from socket updates.\n   //       // trigger a delete event\n   //       // triggerEvent('delete', this.object, id);\n\n   //     })\n   // }\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   //   findAll(cond) {\n\n   //     cond = cond || {};\n\n   //     var params = {\n   //       url: this.object.urlRest(),\n   //       params: cond\n   //     }\n   //     return this.request('get', params)\n   //       .then((data) => {\n\n   //         this.normalizeData(data.data);\n\n   //         resolve(data);\n   //       })\n   //       .catch((err) => {\n   // /// TODO: this should be done in platform/ABModel:\n   //         // if (err && err.code) {\n   //         //  switch(err.code) {\n   //         //    case \"ER_PARSE_ERROR\":\n   //         //      OP.Error.log('AppBuilder:ABModel:findAll(): Parse Error with provided condition', { error: err, condition:cond })\n   //         //      break;\n\n   //         //    default:\n   //         //      OP.Error.log('AppBuilder:ABModel:findAll(): Unknown Error with provided condition', { error: err, condition:cond })\n   //         //      break;\n   //         //  }\n\n   //         // }\n   // console.error(err);\n   //       })\n\n   //   }\n\n   urlParamsCreate(values) {\n      return {\n         url: this.object.urlRest(),\n         params: values,\n      };\n   }\n\n   urlParamsDelete(id) {\n      return {\n         url: this.object.urlRestItem(id),\n      };\n   }\n\n   urlParamsFind(cond) {\n      return {\n         url: this.object.urlRest(),\n         params: cond || {},\n      };\n   }\n\n   urlParamsUpdate(id, values) {\n      return {\n         url: this.object.urlRestItem(id),\n         params: values,\n      };\n   }\n\n   /**\n    * @method count\n    * count a data find with the provided condition.\n    */\n   count(cond) {\n      cond = cond || {};\n\n      var params = {\n         url: this.object.urlRestCount(),\n         params: cond,\n      };\n      return this.request(\"get\", params)\n         .then((numberOfRows) => {\n            // resolve(numberOfRows);\n            return numberOfRows;\n         })\n         .catch((err) => {\n            // TODO: this should be done in platform/ABModel\n\n            // OP.Error.log('AppBuilder:ABModel:count(): Parse Error with provided condition', { error: err, condition:cond })\n\n            // reject(err);\n            console.error(err);\n         });\n   }\n\n   /**\n    * @method staleRefresh\n    * Process a request to refresh the data for a given entry.\n    * This method is called from a ABDataview when it receives\n    * a 'ab.datacollection.stale' message.\n    * This method will try to queue similar reqeusts and then issue 1 large\n    * request, rather than numerous individual ones.\n    * @param {obj} cond  the condition of the entry we are requesting.\n    * @return {Promise}\n    */\n   staleRefresh(cond) {\n      // cond should be { where:{ id: X } } format.\n      var PK = this.object.PK();\n\n      var currID = cond[PK]; // just in case we get a { id: X }\n      if (cond.where) {\n         currID = cond.where[PK];\n      }\n\n      return new Promise((resolve, reject) => {\n         if (!currID) {\n            var Err = new Error(\n               \"Model.staleRefresh(): could not resolve .\" + PK\n            );\n            Err.cond = cond;\n            reject(Err);\n            return;\n         }\n\n         // convert to PK : Promise object:\n         var entry = {\n            resolve: resolve,\n            reject: reject,\n         };\n         entry[PK] = currID;\n\n         // queue up refresh condition\n         this.staleRefreshPending.push(entry);\n\n         // if ! staleRefreshInProcess\n         if (!this.staleRefreshInProcess) {\n            // set timeout to another 200ms wait after LAST staleRefresh()\n            if (this.staleRefreshTimerID) {\n               clearTimeout(this.staleRefreshTimerID);\n            }\n            this.staleRefreshTimerID = setTimeout(() => {\n               this.staleRefreshProcess();\n            }, 200);\n         }\n      });\n   }\n\n   /**\n    * @method staleRefreshProcess\n    * Actually process the current pending requests.\n    */\n   staleRefreshProcess() {\n      this.staleRefreshInProcess = true;\n      var currentEntries = this.staleRefreshPending;\n      this.staleRefreshPending = [];\n      var PK = this.object.PK();\n\n      var responseHash = {\n         /* id : [{entry}] */\n      };\n      var cond = { where: {}, populate: true };\n      cond.where[PK] = [];\n\n      console.log(\n         \"Model.staleRefreshProcess(): buffered \" +\n            currentEntries.length +\n            \" requests\"\n      );\n      currentEntries.forEach((e) => {\n         responseHash[e[PK]] = responseHash[e[PK]] || [];\n         responseHash[e[PK]].push(e);\n      });\n\n      cond.where[PK] = Object.keys(responseHash);\n\n      this.findAll(cond).then((res) => {\n         // for each entry we got back\n         if (Array.isArray(res.data) && res.data.length) {\n            res.data.forEach((data) => {\n               // find it's matching request:\n               if (responseHash[data[PK]]) {\n                  // respond to the pending promise\n                  // and remove these entries from responseHash\n                  var entries = responseHash[data[PK]];\n                  entries.forEach((entry) => {\n                     var resolve = entry.resolve;\n                     resolve({ data: [data] });\n                  });\n\n                  delete responseHash[data[PK]];\n               } else {\n                  console.error(\n                     \"Model.staleRefreshProcess(): returned entry was not in our responseHash:\",\n                     data,\n                     responseHash\n                  );\n               }\n            });\n         }\n\n         // now if there are any entries left in responseHash,\n         // respond with an empty entry:\n         var allKeys = Object.keys(responseHash);\n         if (allKeys.length > 0) {\n            console.warn(\n               \"Model.staleRefreshProcess(): \" +\n                  allKeys.length +\n                  \" entries with no responses. \"\n            );\n         }\n         allKeys.forEach((key) => {\n            let entry = responseHash[key];\n            let resolve;\n            if (Array.isArray(entry)) {\n               resolve = entry[0].resolve;\n            } else {\n               resolve = entry.resolve;\n            }\n            resolve({ data: [] });\n            delete responseHash[key];\n         });\n\n         // now check to see if there are any more pending requests:\n         if (this.staleRefreshPending.length > 0) {\n            // process them:\n            this.staleRefreshProcess();\n         } else {\n            // mark we are no longer processing stale requests.\n            this.staleRefreshInProcess = false;\n         }\n      });\n   }\n\n   /**\n     * @method findConnected\n     * return the connected data associated with an instance of this model.\n     *\n     * to limit the result to only a single connected column:\n     *    model.findConnected( 'col1', {data})\n     *    then ((data) => {\n     *      // data = [{obj1}, {obj2}, ... {objN}]\n     *    })\n     *\n     * To find >1 connected field data:\n     *    model.findConnected( ['col1', 'col2'], {data} )\n     *    .then((data) =>{\n     *    \n     *      // data = {\n     *      //     col1 : [{obj1}, {obj2}, ... {objN}],\n     *      //     col2 : [{obj1}, {obj2}, ... {objN}]\n     *      // }\n     *    })\n     *\n     * To find all connected field data:\n     *    model.findConnected( {data} )\n     *    .then((data) =>{\n     *    \n     *      // data = {\n     *      //     connectedColName1 : [{obj1}, {obj2}, ... {objN}],\n     *      //     connectedColName2 : [{obj1}, {obj2}, ... {objN}],\n     *      //    ...\n     *      //     connectedColNameN : [{obj1}, {obj2}, ... {objN}]\n     *      // }\n     *    })\n\n     * @param {string/array} fields  [optional] an array of connected fields you want to return.\n     * @param {obj} data  the current object instance (data) to lookup\n     * @return {Promise}\n     */\n   findConnected(fields, data) {\n      if (typeof data == \"undefined\") {\n         if (!Array.isArray(fields) && typeof fields == \"object\") {\n            data = fields;\n            fields = []; // return all fields\n         }\n      }\n\n      if (typeof fields == \"string\") {\n         fields = [fields]; // convert to an array of values\n      }\n\n      return new Promise((resolve, reject) => {\n         // sanity checking:\n         if (!data.id) {\n            // I can't find any connected items, if I can't find this one:\n            resolve(null);\n            return;\n         }\n\n         let cond = {};\n         cond[this.object.PK()] = data.id;\n         this.findAll({ where: cond, populate: true })\n            .then((results) => {\n               if (\n                  !results.data ||\n                  !Array.isArray(results.data) ||\n                  results.data.length == 0\n               ) {\n                  resolve([]); // no data to return.\n                  return;\n               }\n\n               // work with the first object.\n               var myObj = results.data[0];\n\n               // if only 1 field requested, then return that\n               if (fields.length == 1) {\n                  let data =\n                     myObj[\n                        fields[0].replace(/[^a-z0-9.]/gi, \"\") + \"__relation\"\n                     ];\n                  if (!data) return resolve([]);\n\n                  if (!Array.isArray(data)) data = [data];\n\n                  resolve(data);\n                  return;\n               }\n\n               // if no fields requested, return them all:\n               if (fields.length == 0) {\n                  var allFields = this.object.fields((f) => {\n                     return f.settings.linkType;\n                  });\n                  allFields.forEach((f) => {\n                     fields.push(f.columnName);\n                  });\n               }\n\n               var returnData = {};\n               fields.forEach((colName) => {\n                  returnData[colName] =\n                     myObj[colName.replace(/[^a-z0-9.]/gi, \"\") + \"__relation\"];\n               });\n\n               resolve(returnData);\n            })\n            .catch((err) => {\n               console.error(\"!!! error with findConnected() attempt:\", err);\n               reject(err);\n            });\n      });\n   }\n\n   // /**\n   //  * @method loadInto\n   //  * loads the current values into the provided Webix DataTable\n   //  * @param {DataTable} DT  A Webix component that can dynamically load data.\n   //  */\n   // loadInto(DT) {\n\n   //   // if a limit was applied, then this component should be loading dynamically\n   //   if (this._limit) {\n\n   //     DT.define('datafetch', this._limit);\n   //     DT.define('datathrottle', 250);  // 250ms???\n\n   //     // catch the event where data is requested:\n   //     // here we will do our own findAll() so we can persist\n   //     // the provided .where condition.\n\n   //     // oh yeah, and make sure to remove any existing event handler when we\n   //     // perform a new .loadInto()\n   //     DT.___AD = DT.___AD || {};\n   //     if (DT.___AD.onDataRequestEvent) {\n   //       DT.detachEvent(DT.___AD.onDataRequestEvent);\n   //     }\n   //     DT.___AD.onDataRequestEvent = DT.attachEvent(\"onDataRequest\", (start, count) => {\n\n   //       var cond = {\n   //         where: this._where,\n   //         sort: this._sort,\n   //         limit: count,\n   //         skip: start\n   //       }\n\n   //       if (DT.showProgress)\n   //         DT.showProgress({ type: \"icon\" });\n\n   //       this.findAll(cond)\n   //         .then((data) => {\n   //           data.data.forEach((item) => {\n   //             if (item.properties != null && item.properties.height != \"undefined\" && parseInt(item.properties.height) > 0) {\n   //               item.$height = parseInt(item.properties.height);\n   //             } else if (parseInt(this._where.height) > 0) {\n   //               item.$height = parseInt(this._where.height)\n   //             }\n   //           });\n   //           DT.parse(data);\n\n   //           if (DT.hideProgress)\n   //             DT.hideProgress();\n\n   //         })\n\n   //       return false; // <-- prevent the default \"onDataRequest\"\n   //     });\n\n   //     DT.refresh();\n   //   }\n\n   //   // else just load it all at once:\n   //   var cond = {};\n   //   if (this._where) cond.where = this._where;\n   //   if (this._sort) cond.sort = this._sort;\n   //   if (this._limit != null) cond.limit = this._limit;\n   //   if (this._skip != null) cond.skip = this._skip;\n\n   //   if (DT.showProgress)\n   //     DT.showProgress({ type: \"icon\" });\n\n   //   this.findAll(cond)\n   //     .then((data) => {\n   //       data.data.forEach((item) => {\n   //         if (item.properties != null && item.properties.height != \"undefined\" && parseInt(item.properties.height) > 0) {\n   //           item.$height = parseInt(item.properties.height);\n   //         } else if (parseInt(this._where.height) > 0) {\n   //           item.$height = parseInt(this._where.height)\n   //         }\n   //       });\n   //       DT.parse(data);\n\n   //       if (DT.hideProgress)\n   //         DT.hideProgress();\n\n   //     })\n   //     .catch((err) => {\n   //       console.error('!!!!!', err);\n   //     })\n\n   // }\n\n   // /**\n   //  * @method limit\n   //  * set the limit value for this set of data\n   //  * @param {integer} limit  the number or elements to return in this call\n   //  * @return {ABModel} this object that is chainable.\n   //  */\n   // limit(limit) {\n   //   this._limit = limit;\n   //   return this;\n   // }\n\n   // /**\n   //  * @method skip\n   //  * set the skip value for this set of data\n   //  * @param {integer} skip  the number or elements to skip\n   //  * @return {ABModel} this object that is chainable.\n   //  */\n   // skip(skip) {\n   //   this._skip = skip;\n   //   return this;\n   // }\n\n   //   /**\n   //    * @method update\n   //    * update model values on the server.\n   //    */\n   //   update(id, values) {\n\n   //     this.prepareMultilingualData(values);\n\n   //     // remove empty properties\n   //     for (var key in values) {\n   //       if (values[key] == null)\n   //         delete values[key];\n   //     }\n\n   //     var params = {\n   //       url: this.object.urlRestItem(id),\n   //       params: values\n   //     }\n   //     return this.request('put', params)\n   //       .then((data) => {\n\n   //         // .data is an empty object ??\n\n   //         this.normalizeData(data);\n\n   //         return data;\n\n   //         // FIX: now with sockets, the triggers are fired from socket updates.\n   //         // trigger a update event\n   //         // triggerEvent('update', this.object, data);\n\n   //       })\n   //       .catch((err)=>{\n   // console.error(err);\n   //       });\n\n   //   }\n\n   /**\n    * @method upsert\n    * upsert model values on the server.\n    */\n   upsert(values) {\n      this.prepareMultilingualData(values);\n\n      // remove empty properties\n      for (var key in values) {\n         if (values[key] == null) delete values[key];\n      }\n\n      var params = {\n         url: this.object.urlRest(),\n         params: values,\n      };\n      return this.request(\"put\", params)\n         .then((data) => {\n            // .data is an empty object ??\n\n            this.normalizeData(data);\n\n            return data;\n\n            // FIX: now with sockets, the triggers are fired from socket updates.\n            // trigger a update event\n            // triggerEvent('update', this.object, data);\n         })\n         .catch((err) => {\n            console.error(err);\n         });\n   }\n\n   /**\n    * @method where\n    * set the where condition for the data being loaded.\n    * @param {json} cond  the json condition statement.\n    * @return {ABModel} this object that is chainable.\n    */\n   where(cond) {\n      this._where = cond;\n      return this;\n   }\n\n   /**\n    * @method where\n    * set the sort condition for the data being loaded.\n    * @param {json} cond  the json condition statement.\n    * @return {ABModel} this object that is chainable.\n    */\n   sort(cond) {\n      this._sort = cond;\n      return this;\n   }\n\n   /**\n    * @method refresh\n    * refresh model definition on the server.\n    */\n   refresh() {\n      console.error(\"!!! Depreciated: where is this being called from?\");\n      return Promise.resolve();\n\n      // var params = {\n      //    url: this.object.urlRestRefresh(),\n      // };\n      // return this.request(\"put\", params);\n   }\n\n   normalizeData(data) {\n      // convert to array\n      if (!(data instanceof Array)) data = [data];\n\n      // find all connected fields\n      var connectedFields = this.object.connectFields();\n\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n\n      // if this object has some date fields, convert the data to date object:\n      var dateFields =\n         this.object.fields(function (f) {\n            return f.key == \"date\" || f.key == \"datetime\";\n         }) || [];\n\n      // calculate fields\n      var calculatedFields = this.object.fields((f) => f.key == \"calculate\");\n\n      data.forEach((d) => {\n         if (d == null) return;\n\n         // various PK name\n         if (!d.id && this.object.PK() != \"id\") d.id = d[this.object.PK()];\n\n         // loop through data's connected fields\n         connectedFields.forEach((c) => {\n            // get the relation name so we can change the original object\n            var relationName = c.relationName();\n\n            // if (d[c.columnName] == null)\n            //  d[c.columnName] = '';\n\n            // if there is no data we can exit now\n            if (d[relationName] == null) return;\n\n            // if relation data is still a string and isn't empty\n            if (\n               typeof d[relationName] == \"string\" &&\n               d[relationName].length > 0\n            ) {\n               // parse the string into an object\n               d[relationName] = JSON.parse(d[relationName]);\n            }\n\n            // if the data is an array we need to loop through it\n            if (Array.isArray(d[relationName])) {\n               d[relationName].forEach((r) => {\n                  // if translations are present and they are still a string\n                  if (r.translations && typeof r.translations == \"string\") {\n                     // parse the string into an object\n                     r.translations = JSON.parse(r.translations);\n                  }\n               });\n               // if the data is not an array it is a single item...check that has translations and it is a string\n            } else if (\n               d[relationName].translations &&\n               typeof d[relationName].translations == \"string\"\n            ) {\n               // if so parse the string into an object\n               d[relationName].translations = JSON.parse(\n                  d[relationName].translations\n               );\n            }\n\n            // set .id to relation columns\n            let objectLink = c.datasourceLink;\n\n            // if we didn't get the linked object, just return.\n            if (!objectLink) return;\n\n            let olPK = objectLink.PK();\n            var relatedMlFields = objectLink.multilingualFields();\n\n            if (Array.isArray(d[relationName])) {\n               d[relationName].forEach((subData) => {\n                  // update .id values\n                  // if (olPK != \"id\" && subData[olPK]) subData.id = subData[olPK];\n                  const relationValue = c.getRelationValue(subData);\n                  if (olPK != \"id\") subData.id = relationValue;\n\n                  // perform Translation\n                  if (relatedMlFields.length) {\n                     objectLink.translate(subData, subData, relatedMlFields);\n                  }\n               });\n            } else {\n               // update .id value\n               // if (d[relationName][olPK]) {\n               //    d[relationName].id = d[relationName][olPK];\n               // }\n               const relationValue = c.getRelationValue(d[relationName]);\n               if (relationValue) {\n                  d[relationName].id = relationValue;\n               }\n\n               // perform Translation\n               if (relatedMlFields.length) {\n                  objectLink.translate(\n                     d[relationName],\n                     d[relationName],\n                     relatedMlFields\n                  );\n               }\n            }\n\n            // if (\n            //    objectLink &&\n            //    olPK != \"id\" &&\n            //    d[relationName] &&\n            //    !d[relationName].id\n            // ) {\n            //    // is array\n            //    if (d[relationName].forEach) {\n            //       d[relationName].forEach((subData) => {\n            //          if (subData[olPK]) subData.id = subData[olPK];\n            //       });\n            //    } else if (d[relationName][olPK]) {\n            //       d[relationName].id = d[relationName][olPK];\n            //    }\n            // }\n\n            // if (relatedMlFields.length) {\n            //    d[relationName];\n            //    objectLink.translate(\n            //       d[relationName],\n            //       d[relationName],\n            //       relatedMlFields\n            //    );\n            // }\n\n            // Change property name of connected field\n            if (!d[c.columnName]) {\n               if (c.linkType() == \"one\") {\n                  if (d[relationName]) {\n                     // d[c.columnName] = d[relationName][olPK];\n                     d[c.columnName] = c.getRelationValue(d[relationName]);\n                  } else {\n                     d[c.columnName] = null;\n                  }\n               } else {\n                  if (d[relationName]) {\n                     if (Array.isArray(d[relationName])) {\n                        try {\n                           d[c.columnName] = (d[relationName] || []).map(\n                              // (i) => i[olPK]\n                              (i) => c.getRelationValue(i)\n                           );\n                        } catch (e) {\n                           console.log(\"+++++++++++++++\");\n                           console.log(`ID:[${c.id}]`);\n                           console.log(`ColumnName:[${c.label}]`);\n                           console.log(`relationName:[${relationName}]`);\n                           console.log(`linkType:[${c.linkType()}]`);\n                           console.log(\"data:\");\n                           console.log(JSON.stringify(d[relationName]));\n                           console.log(\"+++++++++++++++\");\n                        }\n                     } else {\n                        // this is strange: supposed to be \"many\" but coming in\n                        // as \"one\"\n                        console.log(\"+++++++++++++++\");\n                        console.log(`ID:[${c.id}]`);\n                        console.log(`ColumnName:[${c.label}]`);\n                        console.log(`relationName:[${relationName}]`);\n                        console.log(`linkType:[${c.linkType()}]`);\n                        console.log(\"data:\");\n                        console.log(JSON.stringify(d[relationName]));\n                        console.log(\"+++++++++++++++\");\n                        // d[c.columnName] = [d[relationName][olPK]];\n                        d[c.columnName] = [c.getRelationValue(d[relationName])];\n                     }\n                  } else {\n                     d[c.columnName] = [];\n                  }\n               }\n            }\n         });\n\n         if (mlFields.length) {\n            this.object.translate(d, d, mlFields);\n         }\n\n         // convert the data to date object\n         dateFields.forEach((date) => {\n            if (d && d[date.columnName] != null) {\n               // check to see if data has already been converted to a date object\n               if (typeof d[date.columnName] == \"string\") {\n                  if (date.key == \"date\") {\n                     // if we are ignoring the time it means we ignore timezone as well\n                     // so lets trim that off when creating the date so it can be a simple date\n                     d[date.columnName] = this.AB.rules.toDate(\n                        d[date.columnName],\n                        {\n                           format: \"MM/DD/YYYY\",\n                           ignoreTime: true,\n                        }\n                     );\n                  } else {\n                     // Convert UTC to Date\n                     d[date.columnName] = this.AB.rules.toDate(\n                        d[date.columnName]\n                     );\n                     // d[date.columnName] = new Date(moment(d[date.columnName]));\n                  }\n               }\n            }\n         });\n\n         calculatedFields.forEach((calField) => {\n            d[calField.columnName] = calField.format(d);\n         });\n      });\n   }\n};\n","const ABObject = require(\"../platform/ABObject\");\nconst ABModelApi = require(\"../platform/ABModelApi\");\n\nmodule.exports = class ABObjectApiCore extends ABObject {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      this.isAPI = true;\n\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.readonly = parseInt(attributes.readonly) || 0;\n      this.apiType = attributes.apiType || \"Read\";\n      this.request = attributes.request ?? {};\n      this.request.headers = attributes.request?.headers ?? [];\n      this.response = attributes.response ?? {};\n      this.response.fields = attributes.response?.fields ?? [];\n      this.isFetched = attributes.isFetched ?? false;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABObjectQuery instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const result = super.toObj();\n\n      result.isAPI = this.isAPI;\n      result.readonly = this.readonly;\n      result.apiType = this.apiType;\n      result.request = this.request ?? {};\n      result.request.headers = this.request?.headers ?? [];\n      result.response = this.response ?? {};\n      result.response.fields = this.response?.fields ?? [];\n      result.isFetched = this.isFetched;\n\n      return result;\n   }\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObjectQuery.\n    */\n   model() {\n      var model = new ABModelApi(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(this.constructor.contextKey());\n      model.contextValues({ id: this.id }); // the datacollection.id\n\n      return model;\n   }\n\n   /**\n    * @function getPagingValues()\n    *\n    * @return {Object} - {\n    *                       start: \"Property name of the API for start index\",\n    *                       limit: \"Property name of the API for limit return the item number\"\n    *                     }\n    */\n   getPagingValues({ skip, limit }) {\n      const result = {};\n      const pagingSettings = this.request?.paging ?? {};\n\n      if (pagingSettings.start && skip != null) {\n         result[pagingSettings.start] = skip;\n      }\n      if (pagingSettings.limit && limit != null) {\n         result[pagingSettings.limit] = limit;\n      }\n\n      return result;\n   }\n\n   dataFromKey(data) {\n      let result = [];\n\n      if (!Array.isArray(data)) data = [data];\n\n      data.forEach((item) => {\n         // Clone item\n         let itemResult = { ...item };\n\n         // Pull data from `Data key` of the API object\n         // FORMAT: \"Property.Name.Value\"\n         (this.response.dataKey ?? \"\").split(\".\").forEach((key) => {\n            if (key == \"\" || key == null) return;\n            itemResult = itemResult?.[key];\n         });\n\n         if (Array.isArray(itemResult)) {\n            result = result.concat(itemResult);\n         } else if (itemResult) {\n            result.push(itemResult);\n         }\n      });\n\n      return result;\n   }\n\n   get headers() {\n      const headers = {};\n\n      (this.request.headers ?? []).forEach((header) => {\n         if (header?.value == null) return;\n\n         headers[header.key] = header.value;\n      });\n\n      return headers;\n   }\n};\n","/**\n * ABObjectCore\n *\n * Manage the loading of specific ABObject data into useable objects\n * that can instantiate themselves and provide field and model resources.\n */\n\nvar ABModel = require(\"../platform/ABModel\");\nvar ABMLClass = require(\"../platform/ABMLClass\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABObjectCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      /*\n{\n\tid: uuid(),\n\tconnName: 'string', // Sails DB connection name: 'appdev_default', 'legacy_hris', etc. Default is 'appBuilder'.\n\tname: 'name',\n\tlabelFormat: 'xxxxx',\n\tlabelSettings: Object,\n\tisImported: 1/0,\n\tisExternal: 1/0,\n\ttableName:'string',  // NOTE: store table name of import object to ignore async\n\tprimaryColumnName: 'string', // NOTE: store column name of PK\n\ttransColumnName: 'string', // NOTE: store column name of translations table\n\turlPath:'string',\n\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t// to get other object:\t ABApplication.objectFromRef(obj.importFromObject);\n\ttranslations:[\n\t\t{}\n\t],\n\tfields:[\n\t\t{ABDataField}\n   ],\n   indexes: [\n      {ABIndex}\n   ]\n}\n*/\n\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object. These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   static contextKey() {\n      return \"object\";\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            connName: 'string', // Sails DB connection name: 'appdev_default', 'legacy_hris', etc. Default is 'appBuilder'.\n            name: 'name',\n            labelFormat: 'xxxxx',\n            labelSettings: Object,\n            isImported: 1/0,\n            isExternal: 1/0,\n            tableName:'string',  // NOTE: store table name of import object to ignore async\n            primaryColumnName: 'string', // NOTE: store column name of PK\n            transColumnName: 'string', // NOTE: store column name of translations table\n            urlPath:'string',\n            importFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n                                        // to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n            translations:[\n                {}\n            ],\n            fields:[\n                {ABDataField}\n            ],\n            indexes: [\n               {ABIndex}\n            ]\n        }\n        */\n\n      this.id = attributes.id;\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = attributes.type || \"object\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.connName = attributes.connName || undefined; // undefined == 'appBuilder'\n      // {string} .connName\n      // the sails.config.connections[connName] configuration reference.\n      // if not set ({undefined}), then our default \"appBuilder\" config is used\n\n      this.name = attributes.name || \"\";\n      // {string} .name\n      // A name reference for this ABObject. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      this.labelFormat = attributes.labelFormat || \"\";\n      // {string} .labelFormat\n      // A string template for how to display an entry for this ABObject in\n      // common UI elements like grids, lists, etc...\n\n      this.labelSettings = attributes.labelSettings || {};\n      // {Object} .labelSettings\n\n      this.labelSettings.isNoLabelDisplay = parseInt(\n         this.labelSettings.isNoLabelDisplay || 0\n      );\n      // {bool} .isNoLabelDisplay\n\n      this.isImported = parseInt(attributes.isImported || 0);\n      // {depreciated}\n      // {bool} .isImported\n      // previously used to mark ABObjects that were created in other\n      // ABApplicaitons.  No longer relevant with Global ABObjects\n\n      this.isExternal = parseInt(attributes.isExternal || 0);\n      // {bool} .isExternal\n      // Marks this ABObject as referencing a pre-existing table in the DB that\n      // we are treating as an ABObject.\n      // These objects are not allowed to create/update/destroy the db table\n      // nor can we add/remove fields.\n      // However we are able to customize the Field definitions to change the\n      // column names, hidden attributes, Object label, etc...\n      // We can update our Defintion attributes, but not any actual DB changes.\n\n      this.tableName = attributes.tableName || \"\"; // NOTE: store table name of import object to ignore async\n      // {string} .tableName\n      // the `{database}.{tableName}` of the db table that this ABObject's data\n      // is stored in.\n      // knex does not like .(dot) in table and column names\n      // https://github.com/knex/knex/issues/2762\n      this.tableName = this.tableName.replace(/[^a-zA-Z0-9_ ]/gi, \"\");\n\n      this.primaryColumnName = attributes.primaryColumnName || \"\"; // NOTE: store column name of PK\n      // {string} .primaryColumnName\n      // is the col_name of which key is the primary key.  By default it is\n      // \"uuid\", but in some external objects this might be something else\n      // (\"id\", \"ren_id\", etc...).\n\n      this.transColumnName = attributes.transColumnName || \"\"; // NOTE: store column name of translations table\n      // {string} .transColumnName\n      // this is a workaround to include hris_ren_data and hris_ren_trans data\n\n      this.urlPath = attributes.urlPath || \"\";\n\n      // this.importFromObject = attributes.importFromObject || \"\";\n\n      this.isSystemObject = attributes.isSystemObject;\n      // {bool} .isSystemObject\n      // We are now storing some of our System Required Data as ABObjects as well.\n      // These Objects should not be allowed to be modified by typical AppBuilder\n      // designer.  However we can enable a mode for AB Designer to then expand these\n      // ABObjects, and eventually we can use the AppBuilder to Create the AppBuilder.\n      if (\n         typeof this.isSystemObject == \"undefined\" ||\n         this.isSystemObject == \"false\"\n      ) {\n         this.isSystemObject = false;\n      }\n\n      this.createdInAppID = attributes.createdInAppID;\n      // {string} .createdInAppID\n      // the .id of the ABApplication that originally created this ABObject.\n\n      // if attributes.objectWorkspace DOES exist, make sure it is fully\n      // populated.\n      if (typeof attributes.objectWorkspace != \"undefined\") {\n         if (typeof attributes.objectWorkspace.sortFields == \"undefined\")\n            attributes.objectWorkspace.sortFields = [];\n         if (typeof attributes.objectWorkspace.filterConditions == \"undefined\")\n            attributes.objectWorkspace.filterConditions = [];\n         if (typeof attributes.objectWorkspace.frozenColumnID == \"undefined\")\n            attributes.objectWorkspace.frozenColumnID = \"\";\n         if (typeof attributes.objectWorkspace.hiddenFields == \"undefined\")\n            attributes.objectWorkspace.hiddenFields = [];\n      }\n      this.objectWorkspace = attributes.objectWorkspace || {\n         sortFields: [], // array of columns with their sort configurations\n         filterConditions: [], // array of filters to apply to the data table\n         frozenColumnID: \"\", // id of column you want to stop freezing\n         hiddenFields: [], // array of [ids] to add hidden:true to\n      };\n      // {obj} .objectWorkspace\n      // When in the ABObject editor in the AppBuilder Designer, different\n      // views of the information can be created.  These views are stored here\n      // and are avaiable to other users in the Designer.\n\n      // pull in field definitions:\n      var fields = [];\n      this.fieldIDs = attributes.fieldIDs || [];\n      // {array}  [ ABField.id, ... ]\n      // this is a collection of ALL the ABFields this object references.\n      // This will include ABFields that were directly created for this object\n      // and will include ABFields that were imported.\n\n      this.importedFieldIDs = attributes.importedFieldIDs || [];\n      // {array} [ ABField.id, ... ]\n      // this is a collection of the ABFields in our .fieldIDs that were\n      // IMPORTED.\n\n      this._unknownFieldIDs = [];\n      this.fieldIDs.forEach((id) => {\n         if (!id) return;\n\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            fields.push(this.AB.fieldNew(def, this));\n         } else {\n            this._unknownFieldIDs.push(id);\n            let err = new Error(\n               `O[${this.name}] is referenceing an unknown field id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      });\n      this._fields = fields;\n\n      // pull in index definitions:\n      this.importIndexes(attributes.indexIDs);\n\n      // let the MLClass now process the translations:\n      super.fromValues(attributes);\n   }\n\n   /**\n    * @method importIndexes\n    * instantiate a set of indexes from the given ids.\n    * @param {array} indexIDs The different ABDefinition IDs for each index\n    *        [ \"uuid11\", \"uuid2\", ... \"uuidN\" ]\n    */\n   importIndexes(indexIDs) {\n      this._unknownIndex = [];\n      var indexes = [];\n      (indexIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            indexes.push(this.AB.indexNew(def, this));\n         } else {\n            this._unknownIndex.push(id);\n            let err = new Error(\n               `O[${this.name}] is referenceing an unknown index id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      });\n      this._indexes = indexes;\n   }\n\n   /**\n    * @method exportFields\n    * convert our array of fields into a settings object for saving to disk.\n    * @return {array}\n    */\n   // exportFields() {\n   //     var currFields = [];\n   //     this._fields.forEach((obj) => {\n   //         currFields.push(obj.toObj());\n   //     });\n   //     return currFields;\n   // }\n\n   // /**\n   //  * @method exportFields\n   //  * convert our array of fields into a settings object for saving to disk.\n   //  * @return {array}\n   //  */\n   // exportIndexes() {\n   //    var currIndexes = [];\n   //    this._indexes.forEach((idx) => {\n   //       currIndexes.push(idx.toObj());\n   //    });\n   //    return currIndexes;\n   // }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      var obj = super.toObj();\n\n      // track the field .ids of our fields\n      var fieldIDs = this.fields().map((f) => f.id);\n      (this._unknownFieldIDs || []).forEach((id) => {\n         fieldIDs.push(id);\n      });\n      // NOTE: we keep the ._unknownFieldIDs so a developer/builder\n      // can come back and track down what happened to the missing\n      // ids.\n\n      // track the index .ids of our indexes\n      var indexIDs = this.indexes().map((f) => f.id);\n      (this._unknownIndex || []).forEach((id) => {\n         indexIDs.push(id);\n      });\n\n      return {\n         id: this.id,\n         type: this.type || \"object\",\n         connName: this.connName,\n         name: this.name,\n         labelFormat: this.labelFormat,\n         labelSettings: this.labelSettings || {},\n         isImported: this.isImported,\n         isExternal: this.isExternal,\n         tableName: this.tableName,\n         // NOTE: store table name of import object to ignore async\n         primaryColumnName: this.primaryColumnName,\n         // NOTE: store column name of PK\n         transColumnName: this.transColumnName,\n         // NOTE: store column name of translations table\n         urlPath: this.urlPath,\n         // importFromObject: this.importFromObject,\n         objectWorkspace: this.objectWorkspace,\n         isSystemObject: this.isSystemObject,\n\n         translations: obj.translations,\n         fieldIDs: fieldIDs,\n         importedFieldIDs: this.importedFieldIDs,\n         indexIDs: indexIDs,\n         createdInAppID: this.createdInAppID,\n      };\n   }\n\n   ///\n   /// Objects\n   ///\n\n   /**\n    * @method objectLinks()\n    *\n    *  return an array of ABObject that's connected.\n    *\n    * @param {object} filter\n    * @return {array} - An array of ABObject\n    */\n   objectLinks(/* filter */) {\n      var connectFields = this.connectFields();\n\n      return connectFields.map((f) => f.datasourceLink);\n   }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method fields()\n    * return an array of all the ABFields for this ABObject.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array[ABFieldxxx]}\n    */\n   fields(fn = () => true) {\n      return this._fields.filter(fn);\n   }\n\n   /**\n    * @method fieldByID()\n    * return the object's field from the given {ABField.id}\n    * @param {string} id\n    *        the uuid of the field to return.\n    * @return {ABFieldxxx}\n    */\n   fieldByID(id) {\n      return this.fields((f) => f?.id == id)[0];\n   }\n\n   /**\n    * @method connectFields()\n    *\n    * return an array of the ABFieldConnect that is connect object fields.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array}\n    */\n   connectFields(fn = () => true) {\n      return this.fields((f) => f && f.isConnection).filter(fn);\n   }\n\n   /**\n    * @method fieldImport\n    * register the given ABField.id as an imported field for this ABObject.\n    * The ABField definition should be available before making this call.\n    * After this call, the ABField is included in the ABObject, but the ABObject\n    * has NOT been saved.\n    * @param {ABField} fieldID The ABDefinition.id for a field that is imported\n    *        into this object.\n    */\n   fieldImport(id) {\n      if (!id) return;\n\n      if (this.importedFieldIDs.indexOf(id) == -1) {\n         this.importedFieldIDs.push(id);\n      }\n\n      // just to be safe:\n      var isThere = this._fields.find((f) => f.id == id);\n      if (!isThere) {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            this._fields.push(this.AB.fieldNew(def, this));\n         } else {\n            this._unknownFieldIDs = this._unknownFieldIDs || [];\n            this._unknownFieldIDs.push(id);\n            let err = new Error(\n               `O[${this.name}] is importing an unknown field id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      }\n   }\n\n   /**\n    * @method fieldNew()\n    *\n    * return an instance of a new (unsaved) ABField that is tied to this\n    * ABObject.\n    *\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    *\n    * @return {ABField}\n    */\n   fieldNew(values) {\n      return this.AB.fieldNew(values, this);\n   }\n\n   /**\n    * @method fieldRemove()\n    *\n    * remove the given ABField from our ._fields array and persist the current\n    * values.\n    *\n    * @param {ABField} field The instance of the field to remove.\n    * @return {Promise}\n    */\n   fieldRemove(field) {\n      var origLen = this._fields.length;\n      this._fields = this.fields(function (o) {\n         return o.id != field.id;\n      });\n\n      // be sure to remove this from our imported ids if it was\n      // listed there.\n      this.importedFieldIDs = this.importedFieldIDs.filter(\n         (fid) => fid != field.id\n      );\n\n      if (this._fields.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method fieldReorder()\n    *\n    * reorder the fields in our object\n    *\n    * @param {ABField} field The instance of the field to remove.\n    * @return {Promise}\n    */\n   fieldReorder(sourceId, targetId) {\n      // We know what was moved and what item it has replaced/pushed forward\n      // so first we want to splice the item moved out of the array of fields\n      // and store it so we can put it somewhere else\n      let itemMoved = null;\n      let oPos = 0; // original position\n      for (var i = 0; i < this._fields.length; i++) {\n         if (this._fields[i].columnName == sourceId) {\n            itemMoved = this._fields[i];\n            this._fields.splice(i, 1);\n            oPos = i;\n            break;\n         }\n      }\n      // once we have removed/stored it we can find where its new position\n      // will be by looping back through the array and finding the item it\n      // is going to push forward\n      for (var j = 0; j < this._fields.length; j++) {\n         if (this._fields[j].columnName == targetId) {\n            // if the original position was before the new position we will\n            // follow webix's logic that the drop should go after the item\n            // it was placed on\n            if (oPos <= j) {\n               j++;\n            }\n            this._fields.splice(j, 0, itemMoved);\n            break;\n         }\n      }\n\n      return this.save();\n   }\n\n   /**\n    * @method fieldSave()\n    *\n    * save the given ABField in our ._fields array and persist the current\n    * values.\n    *\n    * @param {ABField} field The instance of the field to save.\n    * @return {Promise}\n    */\n   fieldSave(field) {\n      var isIncluded = this.fieldByID(field.id);\n      if (!isIncluded) {\n         this._fields.push(field);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method fieldAdd()\n    *\n    * save the given ABField in our ._fields array and persist the current\n    * values if they changed.\n    *\n    * @param {ABField} field The instance of the field to save.\n    * @return {Promise}\n    */\n   fieldAdd(field) {\n      var isIncluded = this.fieldByID(field.id);\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._fields.push(field);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method imageFields()\n    *\n    * return an array of the ABFieldImage fields this object has.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array}\n    */\n   imageFields(fn = () => true) {\n      return this.fields((f) => f && f.key == \"image\").filter(fn);\n   }\n\n   /**\n    * @method multilingualFields()\n    *\n    * return an array of columnnames that are multilingual.\n    *\n    * @return {array}\n    */\n   multilingualFields() {\n      return this.fields((f) => f && f.isMultilingual).map((f) => f.columnName);\n   }\n\n   /**\n    * @method indexes()\n    *\n    * return an array of all the ABIndex for this ABObject.\n    *\n    * @param filter {Object}\n    *\n    * @return {array}\n    */\n   indexes(filter = () => true) {\n      return this._indexes.filter(filter);\n   }\n\n   /**\n    * @method indexByID()\n    * return the object's index from the given {ABIndex.id}\n    * @param {string} id\n    *        the id of the ABIndex to return.\n    * @return {ABIndex}\n    */\n   indexByID(id) {\n      return this.indexes((f) => f.id == id)[0];\n   }\n\n   /**\n    * @method indexRemove()\n    * remove the given ABIndex from our ._indexes array and persist the current\n    * values.\n    * @param {ABIndex} index\n    * @return {Promise}\n    */\n   indexRemove(index) {\n      var origLen = this._indexes.length;\n      this._indexes = this.indexes(function (idx) {\n         return idx.id != index.id;\n      });\n\n      // persist our changes if something changed.\n      if (origLen != this._indexes.length) {\n         return this.save();\n      }\n\n      // nothing was removed, so continue on.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method indexSave()\n    * save the given ABIndex in our ._indexes array and persist the current\n    * values.\n    * @param {ABIndex} index\n    * @return {Promise}\n    */\n   indexSave(index) {\n      var isIncluded = this.indexByID(index.id);\n      if (!isIncluded) {\n         this._indexes.push(index);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   ///\n   /// Working with data from server\n   ///\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObject.\n    */\n   model() {\n      var model = new ABModel(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(ABObjectCore.contextKey());\n      model.contextValues({ id: this.id });\n\n      return model;\n   }\n\n   ///\n   /// URL\n   ///\n\n   /**\n    * @method urlRest\n    * return the url to access the data for this object.\n    * @return {string}\n    */\n   urlRest() {\n      return `/app_builder/model/${this.id}`;\n   }\n\n   /**\n    * @method urlRestBatch\n    * return the url to use for batch creates for this object\n    * @return {string}\n    */\n   urlRestBatch() {\n      return `/app_builder/batch/model/${this.id}`;\n   }\n\n   /**\n    * @method urlRestItem\n    * return the url to access the data for an instance of this object.\n    * @return {string}\n    */\n   urlRestItem(id) {\n      return `/app_builder/model/${this.id}/${id}`;\n   }\n\n   /**\n    * @method urlRestLog\n    * return the url to access the logs for this ABObject.\n    * @return {string}\n    */\n   urlRestLog() {\n      return `/app_builder/object/${this.id}/track`;\n   }\n\n   /**\n    * @method urlRestRefresh\n    * return the url to signal a refresh for this object.\n    * @return {string}\n    */\n   urlRestRefresh() {\n      return `/app_builder/model/refreshobject/${this.id}`;\n   }\n\n   /**\n    * @method urlCount\n    * return the url to count of data for this object.\n    * @return {string}\n    */\n   urlRestCount() {\n      return `/app_builder/model/${this.id}/count`;\n   }\n\n   ///\n   ///\tObject Workspace Settings\n   ///\n   get workspaceSortFields() {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) return currView.sortFields;\n         else return null;\n      }\n      // old version\n      else {\n         return this.objectWorkspace.sortFields;\n      }\n   }\n\n   set workspaceSortFields(fields) {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) currView.sortFields = fields;\n      }\n      // old version\n      else {\n         this.objectWorkspace.sortFields = fields;\n      }\n   }\n\n   get workspaceFilterConditions() {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) return currView.filterConditions;\n         else return null;\n      }\n      // old version\n      else {\n         return this.objectWorkspace.filterConditions;\n      }\n   }\n\n   set workspaceFilterConditions(filterConditions) {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) currView.filterConditions = filterConditions;\n      }\n      // old version\n      else {\n         this.objectWorkspace.filterConditions = filterConditions;\n      }\n   }\n\n   get workspaceFrozenColumnID() {\n      return this.objectWorkspace.frozenColumnID;\n   }\n\n   set workspaceFrozenColumnID(id) {\n      this.objectWorkspace.frozenColumnID = id;\n   }\n\n   get workspaceHiddenFields() {\n      return this.objectWorkspace.hiddenFields || [];\n   }\n\n   set workspaceHiddenFields(fields) {\n      this.objectWorkspace.hiddenFields = fields;\n   }\n\n   /**\n    * @method isReadOnly\n    *\n    * @return {boolean}\n    */\n   get isReadOnly() {\n      return this.isImported || this.isExternal || this.readonly;\n   }\n\n   /**\n    * @method defaultValues\n    * Collect a hash of key=>value pairs that represent the default values\n    * from each of our fields.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   defaultValues() {\n      var values = {};\n      this.fields().forEach((f) => {\n         f.defaultValue(values);\n      });\n\n      return values;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an array of any invalid\n    * value errors.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   isValidData(/* data */) {\n      // NOTE: the platform needs to define a way to verify the data\n      console.warn(\"Platform.ABObject.isValidData() missing\");\n      return true;\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this object. This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this object.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      console.error(\"Who is calling this?\");\n\n      if (this.application == null) return null;\n\n      return this.application.urlObject(acrossApp) + this.id;\n   }\n\n   /**\n    * @method urlField\n    * return a string pointer to this object's fields\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlField(acrossApp) {\n      console.error(\"Who is calling this?\");\n\n      return this.urlPointer(acrossApp) + \"/_fields/\";\n   }\n\n   /**\n    * @method PK\n    * return a string of the primary column name\n    *\n    * @return {string}\n    */\n   PK() {\n      return this.primaryColumnName || \"uuid\";\n   }\n\n   remoteCreate(data) {\n      console.log(\n         \"object[\" + this.name + \"] received a remoteCreate() with data:\",\n         data\n      );\n   }\n\n   /**\n    * @method clone\n    * return a clone of ABObject\n    *\n    * @return {ABObjectBase}\n    */\n   clone() {\n      // ignore properties who're spend much performance\n      // NOTE: do not clone them. Just copy reference\n      let ignoreProps = [\"application\", \"_fields\"];\n\n      let cloneOne = JSON.parse(JSON.stringify(this));\n\n      ignoreProps.forEach((prop) => {\n         cloneOne[prop] = this[prop];\n      });\n\n      return cloneOne;\n   }\n\n   /**\n    * @method minRelationData()\n    * return an array of ABField.columnNames that make up\n    * the minimum fields required to display this objects __RELATION\n    * data in our UI widgets.\n    */\n   minRelationData() {\n      var fields = [this.PK()];\n\n      if (this.multilingualFields().length > 0) {\n         fields.push(\"translations\");\n      }\n\n      var labelData = this.labelFormat || \"\";\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            fields.push(field.columnName);\n         });\n      }\n      // Default defining label\n      else {\n         const defaultFld = this.fields((f) => f.fieldUseAsLabel())[0];\n         if (defaultFld) fields.push(defaultFld.columnName);\n      }\n\n      // System requires to include number field values\n      // because they are used on Formula/Calculate fields on client side\n      fields = fields.concat(\n         this.fields((f) => f.key == \"number\").map((f) => f.columnName)\n      );\n\n      return fields;\n   }\n\n   // Display data with label format of object\n   displayData(rowData) {\n      if (rowData == null) return \"\";\n\n      // translate multilingual\n      //// TODO: isn't this a MLObject??  use this.translate()\n      var mlFields = this.multilingualFields();\n      this.translate(rowData, rowData, mlFields);\n\n      var labelData = this.labelFormat || \"\";\n\n      // default label\n      if (!labelData && this.fields().length > 0) {\n         var defaultField = this.fields((f) => f.fieldUseAsLabel())[0];\n         if (defaultField) labelData = \"{\" + defaultField.id + \"}\";\n         else {\n            // if label is empty, then show .id\n            if (!labelData.trim()) {\n               let labelSettings = this.labelSettings || {};\n               if (labelSettings && labelSettings.isNoLabelDisplay) {\n                  labelData = L(labelSettings.noLabelText || \"[No Label]\");\n               } else {\n                  // show id of row\n                  labelData = `${\n                     this.AB.rules.isUUID(rowData.id) ? \"ID: \" : \"\"\n                  }${rowData.id}`;\n               }\n            }\n         }\n      }\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      // Using rawString to catch actual values we are pulling out.\n      // the label data might have additional characters \"-\" and such that will\n      // remain, and doing a .trim() on that wont catch that the label data\n      // is actually empty.\n      let rawString = \"\";\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            let valField = field.format(rowData) || \"\";\n            labelData = labelData.replace(colId, valField);\n            rawString = `${rawString}${valField}`;\n         });\n      }\n\n      // if label is empty, then show .id\n      if (!rawString.trim()) {\n         let labelSettings = this.labelSettings || {};\n         if (labelSettings && labelSettings.isNoLabelDisplay) {\n            labelData = L(labelSettings.noLabelText || \"[No Label]\");\n         } else {\n            // show id of row\n            labelData = `${this.AB.rules.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`;\n         }\n      }\n\n      return labelData;\n   }\n\n   /**\n    * @method whereCleanUp()\n    * Parse through the current where condition and remove any null or\n    * empty logical blocks.\n    * @param {obj} curr\n    *        1) The current where condition in ABQuery Format:\n    *        {\n    *           glue: [AND, OR],\n    *           rules: [ {rule} ]\n    *        }\n    *        or 2) The current {rule} to validate\n    *        {\n    *          key:{string},\n    *          rule:{string},\n    *          vlaue:{mixed}\n    *        }\n    * @return {ABQuery.where} / { Rule }\n    */\n   whereCleanUp(curr) {\n      if (curr) {\n         if (curr.glue && curr.rules) {\n            // SENTRY Error AB-APPBUILDER-4H\n            // \"curr.rules.forEach is not a function\"\n            // curr.rules is supposed to be an array. If we are not\n            // getting that, then let's send an alert to figure out what\n            // is happening here:\n            if (!Array.isArray(curr.rules)) {\n               // what is this entry?\n               let err = new Error(\n                  `ABObjectCore.whereCleanUP(): Sentry Error: AB-APPBUILDER-4H: current rule is not properly formed: ${JSON.stringify(\n                     curr\n                  )}`\n               );\n               this.AB.notify.developer(err, { curr });\n            }\n\n            // this is a logical Block (AND, OR)\n            // we need to filter the children\n            let newValue = { glue: curr.glue, rules: [] };\n            curr.rules.forEach((r) => {\n               let cleanRule = this.whereCleanUp(r);\n               // don't add values that didn't pass\n               if (cleanRule) {\n                  newValue.rules.push(cleanRule);\n               }\n            });\n\n            // if we have a non empty block, then return it:\n            if (newValue.rules.length > 0) {\n               return newValue;\n            }\n\n            // this isn't really a valid conditional, so null\n            return null;\n         }\n\n         // This is a specific rule, that isn't null so:\n         // if it isn't {}, then return it\n         if (Object.keys(curr).length > 0) return curr;\n\n         // otherwise we skip this as well\n         return null;\n      }\n      return null;\n   }\n};\n","//\n// ABObjectQuery\n//\n// A type of Object in our system that is based upon a complex relationship of multiple\n// existing Objects.\n//\n// In the QueryBuilder section of App Builder, a new Query Object can be created.\n// An initial Object can be chosen from our current list of Objects. After that, additional Objects\n// and a specified join type can be specified.\n//\n// A list of fields from each specified Object can also be included as the data to be returned.\n//\n// A where statement is also part of the definition.\n//\n\nvar ABObject = require(\"../platform/ABObject\");\nvar ABModelQuery = require(\"../platform/ABModelQuery\");\n\nmodule.exports = class ABObjectQueryCore extends ABObject {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      /*\n{\n\tid: uuid(),\n\tname: 'name',\n\tlabelFormat: 'xxxxx',\n\tisImported: 1/0,\n\turlPath:'string',\n\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t// to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n\ttranslations:[\n\t\t{}\n\t],\n\n\n\n\t// ABOBjectQuery Specific Changes\n\t// we store a list of fields by their urls:\n\tfields:[\n\t\t{\n\t\t\talias: \"\",\n\t\t\tfieldURL:'#/url/to/field',\n\t\t}\n\t],\n\n\n\t// we store a list of joins:\n\tjoins:{\n\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n\t\tobjectURL:\"#/...\",\t\t\t\t\t// the base object of the join\n\t\tlinks: [\n\t\t\t{\n\t\t\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n\t\t\t\tfieldID: \"uuid\",\t\t\t\t\t// the connection field of the object we are joining with.\n\t\t\t\ttype:[left, right, inner, outer]\t// join type: these should match the names of the knex methods\n\t\t\t\t\t\t=> innerJoin, leftJoin, leftOuterJoin, rightJoin, rightOuterJoin, fullOuterJoin\n\t\t\t\tlinks: [\n\t\t\t\t\t...\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\n\t},\n\n\n\twhere: { QBWhere }\n}\n*/\n      this.isQuery = true;\n      // {bool}\n      // a property to mark the difference between an ABObject and ABObjectQuery.\n\n      this.__missingObject = this.__missingObject ?? [];\n      // {array} fieldInfo\n      // the field info that defined an object we can't find.\n\n      this.__missingFields = this.__missingFields ?? [];\n      // {array} [ { objID, fieldID }, ... ]\n      // a list of field definitions that we are unable to resolve.\n\n      this.__cantFilter = [];\n      // {array} [ {field, fieldInfo}, ... ]\n      // a list of field that were assigned but can't be used for filtering.\n\n      this.__duplicateFields = [];\n      // {array} [ {fieldInfo}, ... ]\n      // a list of duplicate field definitions.\n\n      this.__linkProblems = [];\n      // {array} [ { message, data }, ...]\n      // a list of warning messages related to link objects\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   /**\n    * contextKey()\n    * returns a unique key that represents a query in\n    * our networking job resolutions.\n    * @return {string}\n    */\n   static contextKey() {\n      return \"query\";\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.type = \"query\";\n\n      // populate connection objects\n      // this._objects = {};\n      // this.obj2Alias = attributes.obj2Alias || {};\n\n      this.alias2Obj = {}; // this gets built in the .importJoins()\n      // { \"alias\" : object.id }\n      // this is a lookup hash of a referenced alias to the Object it\n      // references.\n\n      this.objectIDs = [];\n      // {array}  of ABObject.id s that are referenced by this query.\n      // this is how we limit our searches on objects.\n      // this gets built in the .importJoins();\n\n      this.viewName = attributes.viewName || \"\";\n      // {string}\n      // this is the SQL tablename of where our Query will store it's\n      // view data.\n\n      // import all our ABObjects\n      this.importJoins(attributes.joins || {});\n\n      // import fields after joins are imported\n      this._fields = null;\n      this.importFields(attributes.fields || []);\n      // {array} [ { alias, field}, {},... ]\n      // an array of field definition structures that mark what fields this\n      // query is interested in pulling data from.\n      //    .alias : {string} matches the alias of the ABObject that the field\n      //             is from\n      //    .field : {ABFieldXXX} the link to the actual ABField instance\n\n      // Import our Where condition\n      this.where = attributes.where || {}; // .workspaceFilterConditions\n      // Fix default where.glue value\n      if (\n         this.where &&\n         !this.where.glue &&\n         this.where.rules &&\n         this.where.rules.length > 0\n      )\n         this.where.glue = \"and\";\n\n      this._objectWorkspaceViews = attributes.objectWorkspaceViews || {};\n\n      this.settings = this.settings || {};\n\n      if (attributes && attributes.settings) {\n         // convert from \"0\" => true/false\n         this.settings.grouping = JSON.parse(\n            attributes.settings.grouping || false\n         );\n         this.settings.hidePrefix = JSON.parse(\n            attributes.settings.hidePrefix || false\n         );\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABObjectQuery instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var result = super.toObj();\n\n      result.viewName = this.viewName;\n\n      result.joins = this.exportJoins();\n      result.fields = this.exportFields();\n      result.where = this.where; // .workspaceFilterConditions\n\n      result.settings = this.settings;\n\n      return result;\n   }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method importFields\n    * instantiate a set of fields from the given attributes.\n    * Our attributes are a set of field URLs That should already be created in their respective\n    * ABObjects.\n    * @param {array} fieldSettings The different field urls for each field\n    */\n   importFields(fieldSettings) {\n      var newFields = [];\n      (fieldSettings || []).forEach((fieldInfo) => {\n         if (fieldInfo == null) return;\n\n         // pull object by alias name\n         let object = this.objectByAlias(fieldInfo.alias);\n\n         // Pull object from .AB\n         if (!object && this.AB) {\n            object = this.AB.objectByID(fieldInfo.objectID);\n\n            // keep\n            if (object) {\n               this._objects = this._objects || {};\n               this._objects[fieldInfo.alias] = object;\n            }\n         }\n\n         if (!object) {\n            this.__missingObject = this.__missingObject ?? [];\n            this.__missingObject.push(fieldInfo);\n            return;\n         }\n\n         let field = object.fieldByID(fieldInfo.fieldID);\n         if (!field) {\n            this.__missingFields = this.__missingFields ?? [];\n            this.__missingFields.push({\n               objID: object.id,\n               fieldID: fieldInfo.fieldID,\n               fieldInfo,\n            });\n            return;\n         }\n\n         if (!this.canFilterField(field)) {\n            this.__cantFilter = this.__cantFilter ?? [];\n            this.__cantFilter.push({ field, fieldInfo });\n         }\n\n         // check duplicate\n         let isNew =\n            newFields.filter(\n               (f) =>\n                  f.alias == fieldInfo.alias && f.field.id == fieldInfo.fieldID\n            ).length < 1;\n\n         if (!isNew) {\n            this.__duplicateFields = this.__duplicateFields ?? [];\n            this.__duplicateFields.push({ fieldInfo });\n         }\n\n         // should be a field of base/join objects\n         if (field && this.canFilterField(field) && isNew) {\n            // add alias to field\n            // create new instance of this field:\n            var def = field.toObj();\n            let clonedField = new field.constructor(def, field.object);\n\n            clonedField.alias = fieldInfo.alias;\n\n            let alias = fieldInfo.alias;\n            if (Array.isArray(this.joins())) {\n               // NOTE: query v1\n               alias = field.object.name;\n            }\n\n            newFields.push({\n               alias: alias,\n               field: clonedField,\n            });\n         }\n      });\n      this._fields = newFields;\n   }\n\n   /**\n    * @method exportFields\n    * convert our array of fields into a settings object for saving to disk.\n    * @return {array}\n    */\n   exportFields() {\n      var currFields = [];\n      this._fields.forEach((fieldInfo) => {\n         currFields.push({\n            alias: fieldInfo.alias,\n            objectID: fieldInfo.field.object.id,\n            fieldID: fieldInfo.field.id,\n         });\n      });\n\n      // let's persist the faulty settings so a developer or builder can\n      // review and fix it by hand.\n      (this.__missingObject || []).forEach((f) => {\n         currFields.push(f);\n      });\n\n      (this.__cantFilter || []).forEach((f) => {\n         currFields.push(f.fieldInfo);\n      });\n\n      return currFields;\n   }\n\n   /**\n    * @method fields()\n    *\n    * Support the ABObject api by returning a list of fields relevant\n    * to this ABObjectQuery.\n    *\n    * @return {array}\n    */\n   fields(fn = () => true) {\n      if (!fn) fn = () => true;\n      return this._fields.map((f) => f.field).filter(fn);\n   }\n\n   ///\n   /// Joins & Objects\n   ///\n\n   /**\n    * @method joins()\n    *\n    * return an object of joins for this Query.\n    *\n    * @return {Object}\n    */\n   joins() {\n      return this._joins || {};\n   }\n\n   /**\n    * @method objects()\n    *\n    * return an array of all the relevant ABObjects for this Query.\n    *\n    * @return {array}\n    */\n   objects(fn = () => true) {\n      // FOR proper expected operation, this fn must only return object\n      // matches for which this ABQuery is managing objects:\n\n      return this.AB.objects((o) => this.objectIDs.indexOf(o.id) > -1).filter(\n         fn\n      );\n   }\n\n   /**\n    * @method objectAlias()\n    *\n    * return alias of of ABObjects.\n    *\n    * @return {string}\n    */\n   objectAlias(objectId) {\n      let result = null;\n\n      Object.keys(this.alias2Obj || {}).forEach((alias) => {\n         if (!result && this.alias2Obj[alias] == objectId) {\n            result = alias;\n         }\n      });\n\n      return result;\n   }\n\n   /**\n    * @method objectBase\n    * return the origin object\n    *\n    * @return {ABObject}\n    */\n   objectBase() {\n      if (!this._joins.objectID) return null;\n\n      return this.AB.objectByID(this._joins.objectID) || null;\n   }\n\n   /**\n    * @method objectByAlias()\n    * return ABObject search by alias name\n    *\n    * @param {string} - alias name\n    * @return {ABClassObject}\n    */\n   objectByAlias(alias) {\n      var objID = this.alias2Obj[alias];\n      if (objID) {\n         return this.objects((o) => o.id == objID)[0];\n      }\n      return null;\n   }\n\n   /**\n    * @method objectByID()\n    * return ABObject search by ID\n    * @param {string} objID\n    *        The requested {ABObject}.id of the object to return.\n    * @return {ABObject} | null\n    */\n   objectByID(objID) {\n      if (objID) {\n         return this.objects((o) => o.id == objID)[0];\n      }\n      return null;\n   }\n\n   /**\n    * @method links()\n    *\n    * return an array of links for this Query.\n    *\n    * @return {array}\n    */\n   links(filter = () => true) {\n      return (this._links || []).filter(filter);\n   }\n\n   /**\n    * @method importJoins\n    * instantiate a set of joins from the given attributes.\n    * Our joins contain a set of ABObject URLs that should already be created in our Application.\n    * @param {Object} settings The different field urls for each field\n    *\t\t\t\t\t{ }\n    */\n   importJoins(settings) {\n      // copy join settings\n      this._joins = this.AB.cloneDeep(settings);\n\n      var uniqueObjectIDs = {};\n      // { obj.id : obj.id }\n      // a hash of object.ids for all the relevant ABObjects necessary for this\n      // ABObjectQuery\n\n      var newLinks = [];\n      // {array} of link definitions\n      // build the operating values for this._links\n\n      let storeObject = (object, alias) => {\n         if (!object) return;\n\n         // var inThere = newObjects.filter(obj => obj.id == object.id && obj.alias == alias ).length > 0;\n         // if (!inThere) {\n         // newObjects[alias] = object;\n         // this.obj2Alias[object.id] = alias;\n         this.alias2Obj[alias] = object.id;\n         uniqueObjectIDs[object.id] = object.id;\n         // newObjects.push({\n         // \talias: alias,\n         // \tobject: object\n         // });\n         // }\n      };\n\n      let storeLinks = (links) => {\n         (links || []).forEach((link) => {\n            // var inThere = newLinks.filter(l => l.fieldID == link.fieldID).length > 0;\n            // if (!inThere) {\n            newLinks.push(link);\n            // }\n         });\n      };\n\n      this.__linkProblems = this.__linkProblems ?? [];\n\n      let processJoin = (baseObject, joins) => {\n         if (!baseObject) return;\n\n         (joins || []).forEach((link) => {\n            // Convert our saved settings:\n            //\t{\n            //\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n            //\t\tobjectID: \"uuid\",\t\t\t\t\t// id of the connection object\n            //\t\tlinks: [\n            //\t\t\t{\n            //\t\t\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n            //\t\t\t\tfieldID: \"uuid\",\t\t\t\t\t// uhe connection field of the object we are joining with.\n            //\t\t\t\ttype:[left, right, inner, outer]\t// join type: these should match the names of the knex methods\n            //\t\t\t\t\t\t=> innerJoin, leftJoin, leftOuterJoin, rightJoin, rightOuterJoin, fullOuterJoin\n            //\t\t\t\tlinks: [\n            //\t\t\t\t\t...\n            //\t\t\t\t]\n            //\t\t\t}\n            //\t\t]\n            //\t},\n\n            var linkField = baseObject.fieldByID(link.fieldID);\n            if (!linkField) {\n               this.__linkProblems.push({\n                  message: `could not resolve our linkField[${link.fieldID}]`,\n                  data: {\n                     link,\n                  },\n               });\n               return;\n            }\n\n            // track our linked object\n            var linkObject = this.AB.objectByID(linkField.settings.linkObject);\n            if (!linkObject) {\n               this.__linkProblems.push({\n                  message: `could not resolve our linked field -> linkObject[${linkField.settings.linkObject}]`,\n                  data: {\n                     link,\n                  },\n               });\n               return;\n            }\n\n            storeObject(linkObject, link.alias);\n\n            storeLinks(link.links);\n\n            processJoin(linkObject, link.links);\n         });\n      };\n\n      // if (!this._joins.objectURL)\n      // \t// TODO: this is old query version\n      // \treturn;\n\n      // store the root object\n      var rootObject = this.objectBase();\n      if (!rootObject) {\n         // this._objects = newObjects;\n         this.__linkProblems.push({\n            message: \"could not resolve our base object\",\n            data: {\n               objectID: this._joins?.objectID,\n            },\n         });\n         return;\n      }\n\n      storeObject(rootObject, \"BASE_OBJECT\");\n\n      storeLinks(settings.links);\n\n      processJoin(rootObject, settings.links);\n\n      // this._objects = newObjects;\n      this._links = newLinks;\n      this.objectIDs = Object.keys(uniqueObjectIDs);\n   }\n\n   /**\n    * @method exportJoins\n    * save our list of objects into our format for persisting on the server\n    * @param {array} settings\n    */\n   exportJoins() {\n      return this.AB.cloneDeep(this._joins || {});\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObjectQuery.\n    */\n   model() {\n      var model = new ABModelQuery(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(this.constructor.contextKey());\n      model.contextValues({ id: this.id }); // the datacollection.id\n\n      return model;\n   }\n\n   /**\n    * @method canFilterObject\n    * evaluate the provided object to see if it can directly be filtered by this\n    * query.\n    * @param {ABObject} object\n    * @return {bool}\n    */\n   canFilterObject(object) {\n      if (!object) return false;\n\n      // I can filter this object if it is one of the objects in my joins\n      return (\n         this.objects((obj) => {\n            return obj.id == object.id;\n         }).length > 0\n      );\n   }\n\n   /**\n    * @method canFilterField\n    * evaluate the provided field to see if it can be filtered by this\n    * query.\n    * @param {ABObject} object\n    * @return {bool}\n    */\n   canFilterField(field) {\n      if (!field) return false;\n\n      // I can filter a field if it's object OR the object it links to can be filtered:\n      let object = field.object;\n      // Transition:\n      // let linkedObject = this.objects(\n      //    (obj) => obj.id == field.settings.linkObject\n      // )[0];\n      var linkedObject = field.datasourceLink;\n\n      return this.canFilterObject(object) || this.canFilterObject(linkedObject);\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this object. This url pointer\n    * should be able to be used by this.AB.urlResolve() to return\n    * this object.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      console.error(\n         \"ABQueryCore.urlPointer(): Depreciated: Where is this being called?\"\n      );\n      return this.application.urlQuery(acrossApp) + this.id;\n   }\n\n   /**\n    * @method isGroup\n    *\n    * @return {boolean}\n    */\n   get isGroup() {\n      return this.settings.grouping || false;\n   }\n\n   /**\n    * @method isReadOnly\n    *\n    * @return {boolean}\n    */\n   get isReadOnly() {\n      return true;\n   }\n\n   /**\n    * @method isDisabled()\n    * check this contains removed objects or fields\n    *\n    * @return {boolean}\n    */\n   isDisabled() {\n      return this.disabled || false;\n   }\n\n   get workspaceFilterConditions() {\n      let filterConditions = super.workspaceFilterConditions;\n      if (\n         filterConditions == null ||\n         filterConditions.rules == null ||\n         !filterConditions.rules.length\n      ) {\n         filterConditions = this.where;\n      }\n\n      return filterConditions;\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nconst ABProcessTaskSubProcess = require(\"../platform/process/tasks/ABProcessTaskSubProcess\");\n\nmodule.exports = class ABProcessCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      this.elements().forEach((e) => {\n         e.onProcessReady();\n      });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      type: 'xxxxx',\n      json: \"{json}\"\n    }\n    */\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || \"process\";\n      this.xmlDefinition = attributes.xmlDefinition || null;\n\n      // this.json = attributes.json || null;\n      let currElements = this._elements || {};\n      this._elements = {};\n      (attributes.elementIDs || []).forEach((eID) => {\n         var ele = this.AB.processElementNew(eID, this);\n         if (ele) {\n            this._elements[eID] = ele;\n         } else {\n            // current eID isn't one of our definitions yet, so might be\n            // a temporary .diagramID from an unsaved task:\n            if (currElements[eID]) {\n               this._elements[eID] = currElements[eID];\n            } else {\n               this.emit(\n                  \"warning\",\n                  `P[${this.name}] is referencing an unknown process element id[${eID}]`,\n                  { process: this.id, eID }\n               );\n            }\n         }\n      });\n\n      this._connections = attributes.connections || {};\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"id\", \"name\", \"xmlDefinition\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      data.elementIDs = [];\n      for (var e in this._elements) {\n         // NOTE: when a task is initially created, it doesn't have an .id\n         // so we need to reference it by it's .diagramID\n         data.elementIDs.push(\n            this._elements[e].id ?? this._elements[e].diagramID\n         );\n      }\n\n      data.connections = this._connections;\n\n      // data.participantIDs = [];\n      // for (var p in this._participants) {\n      //     data.participantIDs.push(this._participants[p].id);\n      // }\n\n      return data;\n   }\n\n   //\n   // XML Model\n   //\n\n   /**\n    * modelDefinition()\n    * return the current xml definition for this process\n    * @return {string}\n    */\n   modelDefinition() {\n      return this.xmlDefinition;\n   }\n\n   /**\n    * modelNew()\n    * initialze our xml definition to a new state.\n    * @return {string}\n    */\n   modelNew() {\n      this.xmlDefinition = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<bpmn2:definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:bpmn2=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:di=\"http://www.omg.org/spec/DD/20100524/DI\" xsi:schemaLocation=\"http://www.omg.org/spec/BPMN/20100524/MODEL BPMN20.xsd\" id=\"process-def-${this.id}\" targetNamespace=\"http://bpmn.io/schema/bpmn\">\n  <bpmn2:process id=\"Process_1\" isExecutable=\"true\">\n    <bpmn2:startEvent id=\"StartEvent_1\"/>\n  </bpmn2:process>\n  <bpmndi:BPMNDiagram id=\"BPMNDiagram_1\">\n    <bpmndi:BPMNPlane id=\"BPMNPlane_1\" bpmnElement=\"Process_1\">\n      <bpmndi:BPMNShape id=\"_BPMNShape_StartEvent_2\" bpmnElement=\"StartEvent_1\">\n        <dc:Bounds height=\"36.0\" width=\"36.0\" x=\"412.0\" y=\"240.0\"/>\n      </bpmndi:BPMNShape>\n    </bpmndi:BPMNPlane>\n  </bpmndi:BPMNDiagram>\n</bpmn2:definitions>`;\n\n      //// TODO: create a default Start Task here??\n   }\n\n   /**\n    * modelUpdate()\n    * update our xml definition from the provided description.\n    * @param {string} xml  bpmn2 xml definition from our modeler.\n    * @return {string}\n    */\n   modelUpdate(xml) {\n      this.xmlDefinition = xml;\n   }\n\n   //\n   // Diagram Elements\n   //\n\n   /**\n    * connections()\n    * return an array of connections that describe the relationships between\n    * our process elements.\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return [{SimpleConnectionObj}]\n    */\n   connections(fn = () => true) {\n      var allConnections = Object.keys(this._connections).map((e) => {\n         return this._connections[e];\n      });\n\n      // If parent, merge connections\n      if (this.process && this.key === \"SubProcess\") {\n         allConnections = allConnections.concat(this.process.connections());\n      }\n\n      return allConnections.filter(fn);\n   }\n\n   /**\n    * connectionForDiagramID()\n    * return the connection for the given diagram id\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionForDiagramID(dID) {\n      return this.connections((t) => {\n         return t.id == dID;\n      })[0];\n   }\n\n   /**\n    * connectionsIncoming()\n    * return the connections that are entering this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsIncoming(dID) {\n      return this.connections((c) => {\n         return c.to == dID;\n      });\n   }\n\n   /**\n    * connectionsOutgoing()\n    * return the connections that are leaving this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsOutgoing(dID) {\n      return this.connections((c) => {\n         return c.from == dID;\n      });\n   }\n\n   /**\n    * connectionRemove()\n    * remove the connection info for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionRemove(element) {\n      delete this._connections[element.id];\n   }\n\n   /**\n    * connectionSimplyElement()\n    * given a BPMN diagram element, return a simplified object that describes\n    * the connection between two elements.\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    * @return {SimpleConnectionObj}\n    *        .id : {string} diagram id of the connection element\n    *        .type : {string} the type of connection\n    *        .from : {string} the diagram id of the source element\n    *        .to : {string} the diagram id of the dest element\n    */\n   connectionSimplyElement(element) {\n      var bo = element.businessObject;\n      var from = null;\n      if (bo.sourceRef) {\n         from = bo.sourceRef.id;\n      }\n\n      var to = null;\n      if (bo.targetRef) {\n         to = bo.targetRef.id;\n      }\n\n      var connection = {\n         id: element.id,\n         type: element.type,\n         from: from,\n         to: to,\n      };\n      return connection;\n   }\n\n   /**\n    * connectionUpsert()\n    * add or update the connection information for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionUpsert(element) {\n      var simpleConn = this.connectionSimplyElement(element);\n      if (simpleConn.from && simpleConn.to && element.parent) {\n         this._connections[simpleConn.id] = simpleConn;\n      } else {\n         // this connection is no longer connecting anything thing.\n         // it is being removed.\n         this.connectionRemove(element);\n      }\n   }\n\n   /**\n    * elements()\n    * return an array of elements that match the given filter (or all elements\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABProcessTask, ABProcessParticipant, etc...]}\n    */\n   elements(fn = () => true) {\n      var allElements = Object.keys(this._elements).map((e) => {\n         return this._elements[e];\n      });\n      return allElements.filter(fn);\n   }\n\n   /**\n    * elementAdd()\n    * insert an element to be tracked by this process.\n    * @param {ABProcessElement} element\n    *        the full instance of an ABProcessElement to track.\n    */\n   elementAdd(element) {\n      this._elements[element.id || element.diagramID] = element;\n   }\n\n   /**\n    * elementByID()\n    * return the {ABProcessElement} that has the given .id\n    * @param {string} id\n    * @return {ABProcess[OBJ]}\n    */\n   elementByID(id) {\n      return this._elements[id] ?? null;\n   }\n\n   /**\n    * elementForDiagramID()\n    * return the object that is tied to the given xml diagram ID.\n    * @param {string} dID the diagram ID\n    * @return {ABProcess[OBJ]}\n    */\n   elementForDiagramID(dID) {\n      return this.elements((t) => {\n         return t.diagramID == dID;\n      })[0];\n   }\n\n   /**\n    * elementRemove()\n    * remove an element from being tracked by this process.\n    * @param {obj|ABProcessElement} def\n    *        a definition of, or full Object instance of the ABProcessElement\n    *        to remove.\n    */\n   elementRemove(def) {\n      delete this._elements[def.id || def.diagramID];\n   }\n\n   /**\n    * isTriggeredBy()\n    * scan our tasks and see if we have a \"trigger\" task that responds to\n    * the provided key.\n    * @param {string} key the trigger key\n    * @return {bool}\n    */\n   isTriggeredBy(key) {\n      return this.taskForTriggerKey(key) != null;\n   }\n\n   /**\n    * connectionNextTask()\n    * return the ABProcessElement(s) that are after the given Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionNextTask(currElement) {\n      var elements = [];\n      var nextConnections = this.connections((c) => {\n         return c.from == currElement.diagramID;\n      });\n      nextConnections.forEach((c) => {\n         var element = this.elements((e) => {\n            return e.diagramID == c.to;\n         })[0];\n         if (element) {\n            elements.push(element);\n         }\n      });\n      return elements;\n   }\n\n   /**\n    * connectionPreviousTask()\n    * return the ABProcessElement(s) that was a previous Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionPreviousTask(currElement) {\n      var elements = [];\n      var prevConnections = this.connections((c) => {\n         return c.to == currElement.diagramID;\n      });\n      prevConnections.forEach((c) => {\n         var element = this.elements((e) => {\n            return e.diagramID == c.from;\n         })[0];\n         if (element) {\n            elements.push(element);\n         }\n      });\n      return elements;\n   }\n\n   /**\n    * processData()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processData(currElement, params) {\n      // var tasksToAsk = this.connectionPreviousTask(currElement);\n      // var values = queryPreviousTasks(tasksToAsk, \"processData\", params, this);\n      // return values.length > 0\n      //    ? values.length > 1\n      //       ? values\n      //       : values[0]\n      //    : null;\n\n      var tasksToAsk = this.allPreviousTasks(currElement);\n      var values = queryPreviousTasks(tasksToAsk, \"processData\", params, this);\n      return values.length > 0\n         ? values.length > 1\n            ? values\n            : values[0]\n         : null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can request from other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataFields(currElement) {\n      var tasksToAsk = this.allPreviousTasks(currElement);\n      // var tasksToAsk = this.connectionPreviousTask(currElement);\n      var fields = queryPreviousTasks(\n         tasksToAsk,\n         \"processDataFields\",\n         null,\n         this\n      );\n      // Include data from the main process as well\n      if (this.key === \"SubProcess\") {\n         const parentFields = this.process.processDataFields(this);\n         if (parentFields) {\n            fields.push(...parentFields);\n         }\n      }\n      return fields.length > 0 ? fields : null;\n   }\n\n   /**\n    * allPreviousConnections()\n    * walk through the current graph and return all the previous connections\n    * leading up to the given {ProcessElement}\n    * @param {Connection} conn\n    * @param {hash} hashConn\n    *        { connection.id : connection }\n    * @return {array}\n    */\n   allPreviousConnectionsForConnection(conn, hashConn) {\n      var prevConnections = this.connections((c) => {\n         return c.to == conn.from;\n      });\n\n      prevConnections.forEach((c) => {\n         if (!hashConn[c.id]) {\n            hashConn[c.id] = c;\n            this.allPreviousConnectionsForConnection(c, hashConn);\n         }\n      });\n   }\n   allPreviousConnectionsForElement(currElement) {\n      var prevConnections = this.connections((c) => {\n         return c.to == currElement.diagramID;\n      });\n      var hashConn = {\n         /* connection.id : connection */\n      };\n      // hashConn will contains the final collection of connections.\n\n      prevConnections.forEach((c) => {\n         hashConn[c.id] = c;\n         this.allPreviousConnectionsForConnection(c, hashConn);\n      });\n\n      // TODO: detect circle backs and remove connections that\n      // resolve back to currElement\n\n      // convert our hash into an array\n      return Object.keys(hashConn).map((k) => hashConn[k]);\n   }\n\n   allPreviousTasks(currElement) {\n      var prevTasks = {}; /* task.id : task */\n      var allPreviousConnections =\n         this.allPreviousConnectionsForElement(currElement);\n      var task;\n      allPreviousConnections.forEach((conn) => {\n         // each conn has a .to and a .from => grab both tasks\n         task = this.elementForDiagramID(conn.to);\n         if (task) prevTasks[task.id] = task;\n\n         task = this.elementForDiagramID(conn.from);\n         if (task) prevTasks[task.id] = task;\n      });\n\n      var tasksToAsk = Object.keys(prevTasks)\n         .map((k) => prevTasks[k])\n         .filter((t) => t.id != currElement.id);\n\n      return tasksToAsk;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataObjects(currElement) {\n      var tasksToAsk = this.connectionPreviousTask(currElement);\n      var fields = queryPreviousTasks(\n         tasksToAsk,\n         \"processDataObjects\",\n         null,\n         this\n      );\n      return fields.length > 0 ? fields : null;\n   }\n\n   /**\n    * taskForTriggerKey()\n    * return one or more tasks that respond to the given trigger key\n    * @param {string} key a trigger key\n    * @return {[ABProcessTask,...]}\n    */\n   taskForTriggerKey(key) {\n      var trigger = this.elements((t) => {\n         return t.triggerKey == key;\n      })[0];\n      if (trigger) {\n         return trigger;\n      } else {\n         return null;\n      }\n   }\n\n   //\n   // Participants\n   //\n\n   // /**\n   //  * participants()\n   //  * return an array of participants that match the given filter (or all tasks\n   //  * if no filter is provided).\n   //  * @param {fn} fn an iterator that returns true if the provided participants\n   //  *                should be returned.\n   //  * @return {[ABProcessParticipant,...]}\n   //  */\n   // participants(fn) {\n   //     if (!fn)\n   //         fn = () => {\n   //             return true;\n   //         };\n   //     var all = Object.keys(this._participants).map((p) => {\n   //         return this._participants[p];\n   //     });\n   //     return all.filter(fn);\n   // }\n\n   // /**\n   //  * participantsForDiagramID()\n   //  * return the participant(s) that are tied to the given xml diagram ID.\n   //  * @param {string} dID the diagram ID\n   //  * @return {[ABProcessParticipant,...]}\n   //  */\n   // participantsForDiagramID(dID) {\n   //     return this.participants((p) => {\n   //         return p.diagramID == dID;\n   //     });\n   // }\n};\n\nvar queryPreviousTasks = (\n   list,\n   method,\n   param,\n   process,\n   responses,\n   processedIDs\n) => {\n   // recursive fn() to step through our graph and compile\n   // results.\n   if (typeof responses == \"undefined\") {\n      responses = [];\n   }\n   if (typeof processedIDs == \"undefined\") {\n      processedIDs = [];\n   }\n   if (list.length == 0) {\n      return responses;\n   } else {\n      // get next task\n      const task = list.shift();\n\n      // if we haven't already done task:\n      if (processedIDs.indexOf(task.diagramID) == -1) {\n         // mark this task as having been processed\n         processedIDs.push(task.diagramID);\n\n         let value = null;\n\n         // get any field's it provides\n         if (!(task instanceof ABProcessTaskSubProcess))\n            value = task[method].apply(task, param);\n\n         // value = task[method].apply(task, param);\n\n         if (value === null) value = [];\n         responses = _concat(responses, value);\n\n         // add any previous tasks to our list\n         list = _concat(list, process.connectionPreviousTask(task));\n      }\n\n      // process next Task\n      return queryPreviousTasks(\n         list,\n         method,\n         param,\n         process,\n         responses,\n         processedIDs\n      );\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nmodule.exports = class ABStepCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"name\", \"text\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      // this.elements().forEach((e) => {\n      //    e.onProcessReady();\n      // });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      type: 'xxxxx',\n      json: \"{json}\"\n    }\n    */\n      this.id = attributes.id;\n      this.name = attributes.name || \"New Step\";\n      this.type = attributes.type || \"step\";\n      this.text = attributes.text || \"\";\n      this.settings = attributes.settings || {};\n      this.settings.event = attributes?.settings?.event || \"click\";\n      this.settings.el = attributes?.settings?.el || \"\";\n      // this.xmlDefinition = attributes.xmlDefinition || null;\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // debugger;\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"id\", \"name\", \"settings\", \"type\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   // /**\n   //  * steps()\n   //  * return an array of steps that match the given filter (or all steps\n   //  * if no filter is provided).\n   //  * @param {fn} fn an iterator that returns true if the provided element\n   //  *                should be returned.\n   //  * @return {[ABStep]}\n   //  */\n   // steps(fn = () => true) {\n   //    var allSteps = Object.keys(this._steps).map((e) => {\n   //       return this._steps[e];\n   //    });\n   //    return allSteps.filter(fn);\n   // }\n\n   // /**\n   //  * stepAdd()\n   //  * insert a step to be added to this hint.\n   //  * @param {ABStep} element\n   //  *        the full instance of an ABStep to track.\n   //  */\n   // stepAdd(step) {\n   //    this._steps[step.id] = step;\n   // }\n\n   // /**\n   //  * stepByID()\n   //  * return the {ABStep} that has the given .id\n   //  * @param {string} id\n   //  * @return {ABStep[OBJ]}\n   //  */\n   // stepByID(id) {\n   //    return this._step[id] ?? null;\n   // }\n\n   // /**\n   //  * stepRemove()\n   //  * remove a step from being displayed by this hint.\n   //  * @param {obj|ABStep} def\n   //  *        a definition of, or full Object instance of the ABStep\n   //  *        to remove.\n   //  */\n   // stepRemove(def) {\n   //    delete this._steps[def.id];\n   // }\n};\n","/*\n * ABViewManager\n *\n * An interface for managing the different ABViews available in our AppBuilder.\n *\n */\n\nvar AllViews = [\n   require(\"../platform/views/ABView\"),\n   require(\"../platform/views/ABViewCarousel\"),\n   require(\"../platform/views/ABViewChart\"),\n   require(\"../platform/views/ABViewChartArea\"),\n   require(\"../platform/views/ABViewChartBar\"),\n   require(\"../platform/views/ABViewChartLine\"),\n   require(\"../platform/views/ABViewChartPie\"),\n   require(\"../platform/views/ABViewComment\"),\n   require(\"../platform/views/ABViewConditionalContainer\"),\n   require(\"../platform/views/ABViewConnectDataFilter\"),\n   require(\"../platform/views/ABViewContainer\"),\n   require(\"../platform/views/ABViewCSVExporter\"),\n   require(\"../platform/views/ABViewCSVImporter\"),\n   require(\"../platform/views/ABViewDataFilter\"),\n   require(\"../platform/views/ABViewDataSelect\"),\n   require(\"../platform/views/ABViewDataview\"),\n   require(\"../platform/views/ABViewDocxBuilder\"),\n   require(\"../platform/views/ABViewGrid\"),\n   require(\"../platform/views/ABViewImage\"),\n   require(\"../platform/views/ABViewLabel\"),\n   require(\"../platform/views/ABViewLayout\"),\n   require(\"../platform/views/ABViewList\"),\n   require(\"../platform/views/ABViewMenu\"),\n   require(\"../platform/views/ABViewOrgChart\"),\n   require(\"../platform/views/ABViewPage\"),\n   require(\"../platform/views/ABViewPDFImporter\"),\n   require(\"../platform/views/ABViewPivot\"),\n   require(\"../platform/views/ABViewTab\"),\n   require(\"../platform/views/ABViewText\"),\n\n   //\n   // Special Editors\n   //\n   require(\"../platform/views/ABViewGantt\"),\n   require(\"../platform/views/ABViewKanban\"),\n   require(\"../platform/views/ABViewReportsManager\"),\n   require(\"../platform/views/ABViewScheduler\"),\n\n   //\n   // Detail Components\n   //\n   require(\"../platform/views/ABViewDetail\"),\n   require(\"../platform/views/ABViewDetailCheckbox\"),\n   require(\"../platform/views/ABViewDetailConnect\"),\n   require(\"../platform/views/ABViewDetailCustom\"),\n   require(\"../platform/views/ABViewDetailImage\"),\n   // require(\"../platform/views/ABViewDetailSelectivity\"),\n   require(\"../platform/views/ABViewDetailText\"),\n   require(\"../platform/views/ABViewDetailTree\"),\n\n   //\n   // Form Components\n   //\n   require(\"../platform/views/ABViewForm\"),\n   require(\"../platform/views/ABViewFormButton\"),\n   require(\"../platform/views/ABViewFormCheckbox\"),\n   require(\"../platform/views/ABViewFormConnect\"),\n   require(\"../platform/views/ABViewFormCustom\"),\n   require(\"../platform/views/ABViewFormDatepicker\"),\n   require(\"../platform/views/ABViewFormJson\"),\n   require(\"../platform/views/ABViewFormNumber\"),\n   require(\"../platform/views/ABViewFormReadonly\"),\n   require(\"../platform/views/ABViewFormSelectMultiple\"),\n   require(\"../platform/views/ABViewFormSelectSingle\"),\n   require(\"../platform/views/ABViewFormTextbox\"),\n   require(\"../platform/views/ABViewFormTree\"),\n];\n\n/*\n * Views\n * A name => ABView  hash of the different ABViews available.\n */\nvar Views = {};\nAllViews.forEach((v) => {\n   if (v.default?.common) {\n      v = v.default;\n   }\n   Views[v.common().key] = v;\n});\n\nmodule.exports = class ABViewManagerCore {\n   /**\n    * @function allViews\n    * return all the currently defined ABViews in an array.\n    * @return [{ABView},...]\n    */\n   static allViews(fn = () => true) {\n      var views = [];\n      for (var v in Views) {\n         var V = Views[v];\n         if (fn(V)) {\n            views.push(V);\n         }\n      }\n      return views;\n   }\n\n   /**\n    * @function newView\n    * return an instance of an ABView based upon the values.key value.\n    * @return {ABView}\n    */\n   static newView(values, application, parent) {\n      parent = parent || null;\n\n      if (values.key == \"detailselectivity\") {\n         values.key = \"detailconnect\";\n      }\n\n      //\t\tif ((values.key) && (Views[values.key])) {\n      if (values.key) {\n         if (!Views[values.key]) {\n            console.error(\n               \"!! View[\" +\n                  values.key +\n                  \"] not yet defined.  Have an ABView instead:\"\n            );\n            return new Views[\"view\"](values, application, parent);\n         }\n\n         return new Views[values.key](values, application, parent);\n      } else {\n         var err = new Error(`Unknown view key [${values.key}]`);\n         console.error(err); // show the stack.\n         console.error({\n            error: err,\n            values: values,\n            application: application,\n         });\n         return null;\n      }\n   }\n\n   static viewClass(key) {\n      if (Views[key]) {\n         return Views[key];\n      }\n      console.error(`Unknown View Key[${key}]`);\n      return;\n   }\n};\n","/*\n * ABViewManagerMobile\n *\n * An interface for managing the different ABViews available in our AppBuilder.\n *\n */\n\n/*\n * Views\n * A name => ABView  hash of the different ABViews available.\n */\nvar Views = {};\n[\n   require(\"../platform/mobile/ABMobilePage\"),\n   require(\"../platform/mobile/ABMobileView\"),\n   require(\"../platform/mobile/ABMobileViewForm\"),\n   require(\"../platform/mobile/ABMobileViewFormButton\"),\n   require(\"../platform/mobile/ABMobileViewFormCheckbox\"),\n   require(\"../platform/mobile/ABMobileViewFormConnect\"),\n   require(\"../platform/mobile/ABMobileViewFormDate\"),\n   require(\"../platform/mobile/ABMobileViewFormDatetime\"),\n   require(\"../platform/mobile/ABMobileViewFormEmail\"),\n   require(\"../platform/mobile/ABMobileViewFormFile\"),\n   require(\"../platform/mobile/ABMobileViewFormFormula\"),\n   require(\"../platform/mobile/ABMobileViewFormImage\"),\n   require(\"../platform/mobile/ABMobileViewFormNumber\"),\n   require(\"../platform/mobile/ABMobileViewFormReadonly\"),\n   require(\"../platform/mobile/ABMobileViewFormSelectMultiple\"),\n   require(\"../platform/mobile/ABMobileViewFormSelectSingle\"),\n   require(\"../platform/mobile/ABMobileViewFormTextbox\"),\n   require(\"../platform/mobile/ABMobileViewLabel\"),\n   require(\"../platform/mobile/ABMobileViewList\"),\n].forEach((v) => {\n   if (v.default?.common) {\n      v = v.default;\n   }\n   Views[v.common().key] = v;\n});\n\nmodule.exports = class ABViewManagerCore {\n   /**\n    * @function allViews\n    * return all the currently defined ABViews in an array.\n    * @return [{ABView},...]\n    */\n   static allViews(fn = () => true) {\n      var views = [];\n      for (var v in Views) {\n         var V = Views[v];\n         if (fn(V)) {\n            views.push(V);\n         }\n      }\n      return views;\n   }\n\n   /**\n    * @function newView\n    * return an instance of an ABView based upon the values.key value.\n    * @return {ABView}\n    */\n   static newView(values, application, parent) {\n      parent = parent || null;\n\n      if (values.key == \"detailselectivity\") {\n         values.key = \"detailconnect\";\n      }\n\n      //\t\tif ((values.key) && (Views[values.key])) {\n      if (values.key) {\n         if (!Views[values.key]) {\n            console.error(\n               \"!! View[\" +\n                  values.key +\n                  \"] not yet defined.  Have an ABView instead:\"\n            );\n            return new Views[\"mobile-view\"](values, application, parent);\n         }\n\n         return new Views[values.key](values, application, parent);\n      } else {\n         var err = new Error(`Unknown view key [${values.key}]`);\n         console.error(err); // show the stack.\n         console.error({\n            error: err,\n            values: values,\n            application: application,\n         });\n         return null;\n      }\n   }\n\n   static viewClass(key) {\n      if (Views[key]) {\n         return Views[key];\n      }\n      console.error(`Unknown View Key[${key}]`);\n      return;\n   }\n};\n","const ABComponent = require(\"../platform/ABComponent\");\n// const ABObjectQuery = require(\"../platform/ABObjectQuery\");\n\n/**\n *  support get data from objects and queries\n */\nfunction getFieldVal(rowData, field) {\n   if (!field) return null;\n   if (!field.columnName) return null;\n   const columnName = field.columnName;\n\n   let value = null;\n\n   if (columnName.indexOf(\".\") > -1) {\n      let colName = columnName.split(\".\")[1];\n      value = rowData[columnName] || rowData[colName];\n   } else {\n      value = rowData[columnName];\n   }\n\n   // pull relation data\n   if (value == null && field.relationName) {\n      const relationName = field.relationName();\n      const pureRelationName = relationName.split(\".\")[1]; // support [BASE_OBJECT.columnName] field name of ABQuery\n      value = rowData[relationName] || rowData[pureRelationName];\n   }\n\n   if (value != null && !isNaN(value)) {\n      return value;\n   }\n\n   // otherwise, this might be a process check where the rowData keys have\n   // '[diagramID].[field.id]'\n   for (const k in rowData) {\n      const key = k.split(\".\")[1];\n      if (key && key == field.id) {\n         value = rowData[k];\n      }\n   }\n\n   if (\n      (value == null || (typeof value == \"number\" && isNaN(value))) &&\n      field.format\n   )\n      value = field.format(rowData);\n\n   return value;\n}\n\nfunction getConnectFieldValue(rowData, field) {\n   let connectedVal = \"\";\n\n   const extractVal = (itemData) => {\n      let val;\n      const relationName = field.relationName();\n      if (itemData[relationName]) {\n         val =\n            (field.indexField\n               ? itemData[relationName][field.indexField.columnName]\n               : null) ?? // custom index\n            (field.indexField2\n               ? itemData[relationName][field.indexField2.columnName]\n               : null) ?? // custom index 2\n            itemData[relationName].id ??\n            itemData[relationName];\n      } else {\n         let fieldVal = getFieldVal(itemData, field);\n         if (fieldVal != null) {\n            val = fieldVal;\n         }\n      }\n      return val;\n   };\n\n   if (Array.isArray(rowData)) {\n      connectedVal = rowData.map((data) => extractVal(data));\n   } else if (rowData) {\n      connectedVal = extractVal(rowData);\n   }\n   return connectedVal;\n}\n\nmodule.exports = class FilterComplexCore extends ABComponent {\n   constructor(idBase, AB) {\n      idBase = idBase || \"ab_filter_complex\";\n\n      if (typeof AB === \"undefined\") {\n         console.error(\"FilterComplexCore(): being called without an AB!\");\n      }\n\n      super(null, idBase, AB);\n\n      this.Account = { username: \"??\" };\n      this._settings = {};\n      this.condition = {};\n      // const batchName; // we need to revert to this default when switching away from a in/by query field\n\n      this._QueryFields = [];\n      this._Fields;\n\n      // internal business logic\n      const _logic = (this._logic = {\n         callbacks: {\n            onChange: () => {},\n         },\n\n         removeHtmlTags: function (text) {\n            let result = \"\";\n            try {\n               let div = document.createElement(\"div\");\n               div.innerHTML = text;\n\n               result = div.textContent || div.innerText || \"\";\n            } catch (err) {\n               result = (text || \"\").replace(/(<([^>]+)>)/gi, \"\");\n            }\n\n            return result;\n         },\n      });\n\n      // Interface methods for parent component:\n      // this.objectLoad = _logic.objectLoad;\n      // this.viewLoad = _logic.viewLoad;\n      // this.setValue = _logic.setValue;\n      // this.isValid = _logic.isValid;\n   }\n\n   init(options = {}) {\n      this._settings = options;\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    * @param condition {Object} - [Optional] {\n    *                                           glue: \"and\" | \"or\",\n    *                                           rules: []\n    *                                        }\n    */\n   isValid(rowData, condition = this.condition) {\n      // If conditions but no data return false\n      if (condition?.rules?.length && rowData == null) return false;\n\n      // If no conditions, then return true\n      if (!condition?.rules?.length || rowData == null) return true;\n\n      let result = condition.glue === \"and\" ? true : false;\n\n      condition.rules.forEach((filter) => {\n         // Nested filters\n         if (filter?.rules?.length) {\n            if (condition.glue === \"or\")\n               result = result || this.isValid(rowData, filter);\n            else result = result && this.isValid(rowData, filter);\n            return;\n         }\n         // Skip incomplete filter condition\n         else if (!filter || !filter.key || !filter.rule) return;\n\n         const fieldInfo = (this._Fields || []).filter(\n            (f) => f.id == filter.key || f.columnName == filter.key\n         )[0];\n\n         if (!fieldInfo) return;\n\n         let condResult = null;\n\n         // Filters that have \"this_object\" don't have a fieldInfo.key, so in that case,\n         // define a special .key == \"this_object\"\n         let ruleFieldType = fieldInfo.key;\n\n         if (typeof fieldInfo.key == \"undefined\") {\n            if (fieldInfo.id != \"this_object\") {\n               fieldInfo.key = \"connectField\"; // if you are looking at the parent object it won't have a key to analyze\n               ruleFieldType = fieldInfo.key;\n            } else ruleFieldType = \"this_object\";\n         }\n\n         let value = null;\n\n         if (fieldInfo.relationName) {\n            value = getConnectFieldValue(rowData, fieldInfo);\n         } else {\n            value = getFieldVal(rowData, fieldInfo);\n         }\n\n         switch (ruleFieldType) {\n            case \"string\":\n            case \"LongText\":\n            case \"email\":\n               if (value == null) value = \"\";\n\n               condResult = this.textValid(value, filter.rule, filter.value);\n               break;\n            case \"date\":\n            case \"datetime\":\n               condResult = this.dateValid(value, filter.rule, filter.value);\n               break;\n            case \"number\":\n            case \"calculate\":\n            case \"formula\":\n               condResult = this.numberValid(value, filter.rule, filter.value);\n               break;\n            case \"list\":\n               condResult = this.listValid(value, filter.rule, filter.value);\n               break;\n            case \"boolean\":\n               condResult = this.booleanValid(value, filter.rule, filter.value);\n               break;\n            case \"user\":\n               condResult = this.userValid(value, filter.rule, filter.value);\n               break;\n            case \"connectField\":\n            case \"connectObject\":\n               condResult = this.connectFieldValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"this_object\":\n               condResult = this.thisObjectValid(\n                  rowData,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n         }\n\n         if (condition.glue === \"and\") {\n            result = result && condResult;\n         } else {\n            result = result || condResult;\n         }\n      });\n\n      return result;\n   }\n\n   textValid(value, rule, compareValue) {\n      let result = false;\n\n      value = value.trim().toLowerCase();\n      value = this._logic.removeHtmlTags(value); // remove html tags - rich text editor\n\n      compareValue = compareValue.trim().toLowerCase().replace(/  +/g, \" \");\n\n      // support \"john smith\" => \"john\" OR/AND \"smith\"\n      const compareArray = compareValue.split(\" \");\n\n      switch (rule) {\n         case \"contains\":\n            compareArray.forEach((val) => {\n               if (result == false)\n                  // OR\n                  result = value.indexOf(val) > -1;\n            });\n            break;\n         case \"not_contains\":\n            result = true;\n            compareArray.forEach((val) => {\n               if (result == true)\n                  // AND\n                  result = value.indexOf(val) < 0;\n            });\n            break;\n         case \"equals\":\n            compareArray.forEach((val) => {\n               if (result == false)\n                  // OR\n                  result = value == val;\n            });\n            break;\n         case \"not_equal\":\n            result = true;\n            compareArray.forEach((val) => {\n               if (result == true)\n                  // AND\n                  result = value != val;\n            });\n            break;\n         case \"is_empty\":\n            result = value == \"\" || value == null;\n            break;\n         case \"is_not_empty\":\n            result = value != \"\" && value != null;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   dateValid(value, rule, compareValue) {\n      let result = false;\n\n      if (!(value instanceof Date)) value = new Date(value);\n\n      if (!(compareValue instanceof Date))\n         compareValue = new Date(compareValue);\n      switch (rule) {\n         case \"less\":\n            result = value < compareValue;\n            break;\n         case \"greater\":\n            result = value > compareValue;\n            break;\n         case \"less_or_equal\":\n            result = value <= compareValue;\n            break;\n         case \"greater_or_equal\":\n            result = value >= compareValue;\n            break;\n         case \"is_current_date\":\n            result =\n               value.setHours(0, 0, 0, 0) == compareValue.setHours(0, 0, 0, 0);\n            break;\n         case \"is_empty\":\n            result = !value;\n            break;\n         case \"is_not_empty\":\n            result = !!value;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n      return result;\n   }\n\n   numberValid(value, rule, compareValue) {\n      let result = false;\n\n      value = Number(value);\n      compareValue = Number(compareValue);\n\n      switch (rule) {\n         case \"equal\":\n         case \"equals\":\n            result = value == compareValue;\n            break;\n         case \"not_equal\":\n            result = value != compareValue;\n            break;\n         case \"less\":\n            result = value < compareValue;\n            break;\n         case \"greater\":\n            result = value > compareValue;\n            break;\n         case \"less_or_equal\":\n            result = value <= compareValue;\n            break;\n         case \"greater_or_equal\":\n            result = value >= compareValue;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   listValid(value, rule, compareValue) {\n      let result = false;\n\n      // compareValue = compareValue.toLowerCase();\n\n      if (!Array.isArray(compareValue)) compareValue = [compareValue];\n\n      switch (rule) {\n         case \"equals\":\n            if (value) result = compareValue.indexOf(value) > -1;\n            break;\n         case \"not_equal\":\n            if (value) result = compareValue.indexOf(value) < 0;\n            else result = true;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   booleanValid(value, rule, compareValue) {\n      let result = false;\n\n      switch (rule) {\n         case \"checked\":\n            result = value == true || value > 0 || value == \"true\";\n            break;\n         case \"unchecked\":\n            result =\n               value == false ||\n               value <= 0 ||\n               value == \"false\" ||\n               value == null;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   userValid(value, rule, compareValue) {\n      if (!value || !value?.length) return false;\n      let result = false;\n\n      if (!Array.isArray(value)) value = [value];\n\n      /* eslint-disable no-fallthrough */\n      switch (rule) {\n         case \"is_current_user\":\n            result =\n               value.filter((v) => (v?.username || v) == this.Account.username)\n                  .length > 0;\n            break;\n         case \"is_not_current_user\":\n            result =\n               value.filter((v) => (v?.username || v) != this.Account.username)\n                  .length > 0;\n            break;\n         case \"contain_current_user\":\n            compareValue = this.Account.username;\n         // break;  <-- NO BREAK HERE: fall through to \"equals\"\n\n         case \"equals\":\n            result =\n               value.filter((v) => (v?.username || v) == compareValue).length >\n               0;\n            break;\n         case \"not_contain_current_user\":\n            compareValue = this.Account.username;\n         // break;  <-- NO BREAK HERE: fall through to \"not_equals\"\n\n         case \"not_equal\":\n            result =\n               value.filter((v) => (v?.username || v) == compareValue).length <\n               1;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n      /* eslint-enable no-fallthrough */\n\n      return result;\n   }\n\n   queryFieldValid(rowData, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue) return result;\n\n      // queryId:fieldId\n      const queryId = compareValue.split(\":\")[0],\n         fieldId = compareValue.split(\":\")[1];\n\n      // if no query\n      const query = this.AB.queries((q) => q.id == queryId)[0];\n      if (!query) return result;\n\n      // if no field\n      const field = query.fields((f) => f.id == fieldId)[0];\n      if (!field) return result;\n\n      let qIdBase = \"{idBase}-query-field-{id}\"\n            .replace(\"{idBase}\", this.idBase)\n            .replace(\"{id}\", query.id),\n         inQueryFieldFilter = new this.constructor(qIdBase, this.AB);\n      inQueryFieldFilter.Account = this.Account;\n      inQueryFieldFilter.fieldsLoad(query.fields());\n      inQueryFieldFilter.setValue(query.workspaceFilterConditions);\n\n      switch (rule) {\n         case \"in_query_field\":\n            result = inQueryFieldFilter.isValid(rowData);\n            break;\n         case \"not_in_query_field\":\n            result = !inQueryFieldFilter.isValid(rowData);\n            break;\n      }\n\n      return result;\n   }\n\n   inQueryValid(rowData, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue || !this.AB) return result;\n\n      // if no query\n      let query = this.AB.queries((q) => q.id == compareValue)[0];\n      if (!query) return result;\n\n      let qIdBase = \"{idBase}-query-{id}\"\n            .replace(\"{idBase}\", this.idBase)\n            .replace(\"{id}\", query.id),\n         inQueryFilter = new this.constructor(qIdBase, this.AB);\n      inQueryFilter.Account = this.Account;\n      inQueryFilter.fieldsLoad(query.fields());\n      inQueryFilter.setValue(query.workspaceFilterConditions);\n\n      switch (rule) {\n         case \"in_query\":\n            result = inQueryFilter.isValid(rowData);\n            break;\n         case \"not_in_query\":\n            result = !inQueryFilter.isValid(rowData);\n            break;\n      }\n\n      return result;\n   }\n\n   dataCollectionValid(value, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue) return result;\n\n      let dc = this.AB.datacollections((d) => d.id == compareValue)[0];\n\n      switch (rule) {\n         case \"in_data_collection\":\n            if (!dc) return false;\n\n            result = dc.getData((d) => d.id == value.id).length > 0;\n            break;\n         case \"not_in_data_collection\":\n            if (!dc) return true;\n\n            result = dc.getData((d) => d.id == value.id).length < 1;\n            break;\n      }\n\n      return result;\n   }\n\n   connectFieldValid(rowData, field, rule, compareValue) {\n      let relationName = field.relationName();\n\n      let connectedVal = \"\";\n\n      if (rowData) {\n         if (rowData[relationName]) {\n            connectedVal = (\n               (field.indexField\n                  ? rowData[relationName][field.indexField.columnName]\n                  : null) ?? // custom index\n               (field.indexField2\n                  ? rowData[relationName][field.indexField2.columnName]\n                  : null) ?? // custom index 2\n               rowData[relationName].id ??\n               rowData[relationName]\n            )\n               .toString()\n               .toLowerCase();\n         } else {\n            let fieldVal = getFieldVal(rowData, field);\n            if (fieldVal != null) {\n               connectedVal = fieldVal;\n            }\n         }\n      }\n\n      // If value will be the connected object, then pull value (string)\n      if (typeof connectedVal == \"object\") {\n         connectedVal =\n            (field.indexField\n               ? connectedVal[field.indexField.columnName]\n               : null) ??\n            (field.indexField2\n               ? connectedVal[field.indexField2.columnName]\n               : null) ??\n            connectedVal[field.columnName] ??\n            connectedVal.id ??\n            connectedVal;\n      }\n\n      // Compare value isn't always a string?\n      // https://appdev-designs.sentry.io/issues/5056850389/\n      let compareValueLowercase =\n         typeof compareValue === \"string\"\n            ? compareValue.toLowerCase?.()\n            : compareValue;\n\n      switch (rule) {\n         case \"contains\":\n            return connectedVal.toString().indexOf(compareValueLowercase) > -1;\n         case \"not_contains\":\n            return connectedVal.toString().indexOf(compareValueLowercase) == -1;\n         case \"equals\":\n            return connectedVal == compareValueLowercase;\n         case \"not_equal\":\n            return connectedVal != compareValueLowercase;\n         case \"in_query\":\n         case \"not_in_query\":\n            return this.inQueryValid(rowData[relationName], rule, compareValue);\n         case \"is_current_user\":\n         case \"is_not_current_user\":\n         case \"contain_current_user\":\n         case \"not_contain_current_user\":\n            return this.userValid(connectedVal, rule, compareValue);\n         case \"is_empty\":\n            return (\n               rowData[relationName] == null ||\n               rowData[relationName].length < 1 ||\n               rowData[relationName] == \"\"\n            );\n         case \"is_not_empty\":\n            return (\n               rowData[relationName] != null &&\n               ((Array.isArray(rowData[relationName]) &&\n                  rowData[relationName].length > 0) ||\n                  rowData[relationName] != \"\")\n            );\n         case \"in_data_collection\":\n         case \"not_in_data_collection\":\n            return this.dataCollectionValid(connectedVal, rule, compareValue);\n      }\n   }\n\n   thisObjectValid(rowData, rule, compareValue) {\n      let result = false;\n      let query = null;\n      let listThisObjects = null;\n      let alias = null;\n      let newRowData = null;\n\n      switch (rule) {\n         // if in_query condition\n         case \"in_query\":\n         case \"not_in_query\":\n            if (!this._Object) return result;\n\n            // if > 1 copy of this object in query ==> Error!\n            query = this.AB.queries((q) => q.id == compareValue)[0];\n\n            if (!query) return result;\n\n            listThisObjects = query.objects((o) => {\n               return o.id == this._Object.id;\n            });\n\n            if (listThisObjects.length > 1) {\n               // Alternative: choose the 1st instance of this object in the query, and make the compare on that.\n               // Be sure to warn the developer of the limitiations of an \"this_object\" \"in_query\"  when query has > 1 copy of\n               // this object as part of the query.\n\n               console.error(\n                  \"HEY!  Can't compare this_object to a query that has > 1 copy of that object!\"\n               );\n\n               return true;\n            }\n\n            // get this object's alias from the query\n            alias = query.objectAlias(this._Object.id);\n\n            // make sure all my columns in rowData are prefixed by \"alias\".columnName\n            newRowData = {};\n\n            Object.keys(rowData).forEach((key) => {\n               newRowData[`${alias}.${key}`] = rowData[key];\n            });\n\n            // then pass this on to the _logic.queryValid();\n            return this.inQueryValid(newRowData, rule, compareValue);\n\n         // if in_datacollection condition\n         case \"in_data_collection\":\n         case \"not_in_data_collection\":\n            // send rowData, null to datacollectionValid()\n            return this.dataCollectionValid(rowData, rule, compareValue);\n      }\n   }\n\n   processFieldsLoad(processFields = []) {\n      if (processFields && !Array.isArray(processFields)) {\n         processFields = [processFields];\n      }\n      this._ProcessFields = processFields;\n\n      this.uiInit();\n   }\n\n   /**\n    * @method fieldsLoad\n    * set fields\n    *\n    * @param array {ABField}\n    * @param object {ABObject} [optional]\n    */\n   fieldsLoad(fields = [], object = null) {\n      this._Fields = fields.filter(\n         (f) => f && f.fieldIsFilterable && f.fieldIsFilterable()\n      );\n      this._QueryFields = this._Fields\n         ? this._Fields.filter((f) => f && f.isConnection && f.key != \"user\")\n         : [];\n\n      // insert our 'this object' entry if an Object was given.\n      if (object) {\n         this._Object = object;\n\n         // insert our uuid in addition to the rest of our fields\n         let thisObjOption = {\n            id: \"this_object\",\n            label: object.label,\n            key: \"uuid\",\n         };\n\n         // If object is query ,then should define default alias: \"BASE_OBJECT\"\n         // NOTE: Could not reference ABObjectQuery because recursive looping reference\n         // if (object instanceof ABObjectQuery) {\n         if (object.viewName) {\n            thisObjOption.alias = \"BASE_OBJECT\";\n         }\n\n         this._Fields.unshift(thisObjOption);\n      } else {\n         delete this._Object;\n      }\n   }\n\n   fieldsToQB() {\n      /*\n      let mapTypes = {\n         LongText: \"string\",\n         email: \"string\",\n         datetime: \"date\",\n         connectField: \"connectObject\"\n      };\n\n      const fields = this._Fields.map((f) => {\n         // Label\n         let label = f.label;\n         if (this._settings.showObjectName && f.object && f.object.label)\n            label = `${f.object.label}.${f.label}`;\n\n         // Type\n         let type = f.key || f.type;\n         if (mapTypes[type]) type = mapTypes[type];\n\n         // the format for webix querybuilder:\n         // { id  value:\"label\" type }\n         //      type: {string} the type of value it is.\n         //            since we want to tailor value selectors per field,\n         //            we will make a unique type for each field. and then\n         //            add value selectors for that specific .type\n         return { id: f.columnName, value: label, type: type };\n      });\n      return fields;\n      */\n\n      let fields = (this._Fields || []).map((f) => {\n         let label = f.label;\n         if (this._settings.showObjectName && f.object && f.object.label)\n            label = `${f.object.label}.${f.label}`;\n\n         let type = \"text\"; // \"text\", \"number\", \"date\"\n         let conditions = [];\n         let processFieldKeys = [];\n         let hasQueryField = true;\n\n         if (!this._settings.isProcessParticipant)\n            switch (f.key) {\n               case \"boolean\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersBoolean(f)\n                  );\n                  processFieldKeys = [\"boolean\"];\n\n                  break;\n\n               case \"connectObject\":\n                  conditions = this.fieldsAddFiltersConnectObject(f);\n\n                  // Add filter options to Custom index\n                  if (\n                     // 1:M\n                     (f.settings.linkType == \"one\" &&\n                        f.settings.linkViaType == \"many\") ||\n                     // 1:1 isSource = true\n                     (f.settings.linkType == \"one\" &&\n                        f.settings.linkViaType == \"one\" &&\n                        f.settings.isSource)\n                  ) {\n                     const stringResults = this.fieldsAddFiltersString(\n                        f\n                     ).filter(\n                        (opt) =>\n                           f.settings.isCustomFK ||\n                           // If this connect field does not use custom FK, then allow just `is empty` and `is not empty` filter options\n                           opt.id == \"is_empty\" ||\n                           opt.id == \"is_not_empty\"\n                     );\n                     conditions = stringResults.concat(conditions);\n\n                     // By Query Field\n                     conditions = conditions.concat(\n                        this.fieldsAddFiltersQuery(f, true)\n                     );\n                  }\n\n                  hasQueryField = false;\n                  processFieldKeys = [\"connectObject\"];\n\n                  break;\n\n               case \"date\":\n               case \"datetime\":\n                  type = \"date\";\n                  conditions = conditions.concat(this.fieldsAddFiltersDate(f));\n                  processFieldKeys = [\"date\", \"datetime\"];\n\n                  break;\n\n               case \"calculate\":\n               case \"formula\":\n               case \"number\":\n                  type = \"number\";\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersNumber(f)\n                  );\n                  processFieldKeys = [\"calculate\", \"formula\", \"number\"];\n\n                  break;\n\n               case \"string\":\n               case \"LongText\":\n               case \"email\":\n               case \"AutoIndex\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersString(f)\n                  );\n                  processFieldKeys = [\n                     \"string\",\n                     \"LongText\",\n                     \"email\",\n                     \"AutoIndex\",\n                  ];\n\n                  break;\n\n               case \"list\":\n                  conditions = conditions.concat(this.fieldsAddFiltersList(f));\n\n                  break;\n\n               case \"user\":\n                  conditions = conditions.concat(this.fieldsAddFiltersUser(f));\n                  processFieldKeys = [\"user\"];\n\n                  break;\n\n               case \"uuid\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersThisObject(f)\n                  );\n                  hasQueryField = false;\n\n                  break;\n               default:\n                  break;\n            }\n         else\n            switch (f.key) {\n               case \"connectObject\":\n               case \"uuid\":\n                  hasQueryField = false;\n\n                  break;\n            }\n\n         conditions = conditions.concat(\n            this.fieldsAddFiltersQuery(f, hasQueryField)\n         );\n\n         if (this._settings.isRecordRule) {\n            conditions = conditions.concat(this.fieldsAddFiltersRecordRule(f));\n         }\n\n         let isProcessField =\n            (this._ProcessFields || []).filter((processField) => {\n               if (!processField) return false;\n\n               if (processField.field) {\n                  return processFieldKeys.includes(processField.field.key);\n               } else if (processField.key) {\n                  // uuid\n                  let processFieldId = processField.key.split(\".\").pop();\n                  return processFieldId == f.id || processFieldId == f.key;\n               }\n            }).length > 0;\n\n         if (isProcessField) {\n            conditions = conditions.concat(this.fieldsAddFiltersContext(f));\n         }\n\n         conditions = conditions.concat(this.fieldsAddFiltersCustom(f));\n\n         // let type = f.id; // the default unique identifier for our filter types\n         // if (f.id == \"this_object\") {\n         //    // if this happens to be our special \"this_object\" field, then our\n         //    // type needs to be the \"uuid\" type in the definition:\n         //    type = f.type;\n         // }\n\n         // the format for webix querybuilder:\n         // { id  value:\"label\" type }\n         //      type: {string} the type of value it is.\n         //            since we want to tailor value selectors per field,\n         //            we will make a unique type for each field. and then\n         //            add value selectors for that specific .type\n         return {\n            id: f.id,\n            value: label,\n            type: type,\n            conditions: conditions,\n            // format: () => {},\n         };\n      });\n\n      // !!! Process Fields of ABProcess\n      // https://github.com/digi-serve/appbuilder_class_core/blob/master/FilterComplexCore.js#L636\n      // https://github.com/digi-serve/appbuilder_class_core/blob/master/FilterComplexCore.js#L564\n      // (this._ProcessFields || [])\n      //    // if there is no .field, it is probably an embedded special field\n      //    .filter((pField) => pField.field == null)\n      //    .forEach((pField) => {\n      //       // like: .uuid\n      //       let key = pField.key.split(\".\").pop();\n      //       if (key == \"uuid\" && this._Object) {\n      //          fields.unshift({\n      //             id: pField.key,\n      //             value: this._Object.label,\n      //             type: \"text\",\n      //             conditions: this.fieldsAddFiltersContext(),\n      //          });\n      //       }\n      //    });\n\n      return fields;\n   }\n\n   fieldsAddFiltersDate(field) {\n      let dateConditions = {\n         less: this.labels.component.beforeCondition,\n         greater: this.labels.component.afterCondition,\n         less_or_equal: this.labels.component.onOrBeforeCondition,\n         greater_or_equal: this.labels.component.onOrAfterCondition,\n         is_current_date: this.labels.component.isCurrentDateCondition,\n         less_current: this.labels.component.beforeCurrentCondition,\n         greater_current: this.labels.component.afterCurrentCondition,\n         less_or_equal_current:\n            this.labels.component.onOrBeforeCurrentCondition,\n         greater_or_equal_current:\n            this.labels.component.onOrAfterCurrentCondition,\n         last_days: this.labels.component.onLastDaysCondition,\n         next_days: this.labels.component.onNextDaysCondition,\n         is_empty: this.labels.component.isEmpty,\n         is_not_empty: this.labels.component.isNotEmpty,\n      };\n\n      let result = [];\n\n      for (let condKey in dateConditions)\n         switch (condKey) {\n            case \"is_current_date\":\n            case \"less_current\":\n            case \"greater_current\":\n            case \"less_or_equal_current\":\n            case \"greater_or_equal_current\":\n            case \"is_empty\":\n            case \"is_not_empty\":\n               result.push({\n                  id: condKey,\n                  value: dateConditions[condKey],\n                  batch: \"none\",\n                  handler: (a, b) => this.dateValid(a, condKey, b),\n               });\n               break;\n            case \"last_days\":\n               result.push({\n                  id: condKey,\n                  value: dateConditions[condKey],\n                  batch: \"text\",\n                  handler: (a, b) => this.dateValid(a, condKey, b),\n               });\n               break;\n            default:\n               result.push({\n                  id: condKey,\n                  value: dateConditions[condKey],\n                  batch: \"datepicker\",\n                  handler: (a, b) => this.dateValid(a, condKey, b),\n               });\n               break;\n         }\n      return result;\n   }\n\n   fieldsAddFiltersString(field) {\n      let stringConditions = {\n         contains: {\n            batch: \"text\",\n            label: this.labels.component.containsCondition,\n         },\n         not_contains: {\n            batch: \"text\",\n            label: this.labels.component.notContainsCondition,\n         },\n         equals: {\n            batch: \"text\",\n            label: this.labels.component.isCondition,\n         },\n         not_equal: {\n            batch: \"text\",\n            label: this.labels.component.isNotCondition,\n         },\n         is_empty: {\n            batch: \"none\",\n            label: this.labels.component.isEmpty,\n         },\n         is_not_empty: {\n            batch: \"none\",\n            label: this.labels.component.isNotEmpty,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in stringConditions) {\n         result.push({\n            id: condKey,\n            value: stringConditions[condKey].label,\n            batch: stringConditions[condKey].batch,\n            handler: (a, b) => this.textValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersNumber(field) {\n      let numberConditions = {\n         equals: this.labels.component.equalCondition,\n         not_equal: this.labels.component.notEqualCondition,\n         less: this.labels.component.lessThanCondition,\n         greater: this.labels.component.moreThanCondition,\n         less_or_equal: this.labels.component.lessThanOrEqualCondition,\n         greater_or_equal: this.labels.component.moreThanOrEqualCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in numberConditions) {\n         result.push({\n            id: condKey,\n            value: numberConditions[condKey],\n            batch: \"text\",\n            handler: (a, b) => this.numberValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersList(field) {\n      let listConditions = {\n         equals: this.labels.component.equalListCondition,\n         not_equal: this.labels.component.notEqualListCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in listConditions) {\n         result.push({\n            id: condKey,\n            value: listConditions[condKey],\n            batch: \"list\",\n            handler: (a, b) => this.listValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersBoolean(field) {\n      let booleanConditions = {\n         checked: this.labels.component.checkedCondition,\n         unchecked: this.labels.component.notCheckedCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in booleanConditions) {\n         result.push({\n            id: condKey,\n            value: booleanConditions[condKey],\n            batch: \"none\",\n            handler: (a, b) => this.booleanValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersUser(field) {\n      let userConditions = {\n         is_current_user: {\n            batch: \"none\",\n            label: this.labels.component.isCurrentUserCondition,\n         },\n         is_not_current_user: {\n            batch: \"none\",\n            label: this.labels.component.isNotCurrentUserCondition,\n         },\n         contain_current_user: {\n            batch: \"none\",\n            label: this.labels.component.containsCurrentUserCondition,\n         },\n         not_contain_current_user: {\n            batch: \"none\",\n            label: this.labels.component.notContainsCurrentUserCondition,\n         },\n         equals: {\n            batch: \"user\",\n            label: this.labels.component.equalListCondition,\n         },\n         not_equal: {\n            batch: \"user\",\n            label: this.labels.component.notEqualListCondition,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in userConditions) {\n         result.push({\n            id: condKey,\n            value: userConditions[condKey].label,\n            batch: userConditions[condKey].batch,\n            handler: (a, b) => this.userValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersConnectObject(field) {\n      const connectConditions = {\n         same_as_user: {\n            batch: \"user\",\n            label: this.labels.component.sameAsUser,\n            handler: (a, b) => this.userValid(a, \"same_as_user\", b),\n         },\n         not_same_as_user: {\n            batch: \"user\",\n            label: this.labels.component.notSameAsUser,\n            handler: (a, b) => this.userValid(a, \"not_same_as_user\", b),\n         },\n         in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.inDataCollection,\n            handler: (a, b) =>\n               this.dataCollectionValid(a, \"in_data_collection\", b),\n         },\n         not_in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.notInDataCollection,\n            handler: (a, b) =>\n               this.dataCollectionValid(a, \"not_in_data_collection\", b),\n         },\n         // TODO\n         // contains: this.labels.component.containsCondition,\n         // not_contains: this.labels.component.notContainCondition,\n         // equals: this.labels.component.isCondition,\n         // not_equal: this.labels.component.isNotCondition\n      };\n\n      const result = [];\n\n      for (let condKey in connectConditions) {\n         result.push({\n            id: condKey,\n            value: connectConditions[condKey].label,\n            batch: connectConditions[condKey].batch,\n            handler: connectConditions[condKey].handler,\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersQuery(field, hasQueryField = false) {\n      const queryConditions = hasQueryField\n         ? {\n              in_query_field: {\n                 label: this.labels.component.inQueryField,\n                 batch: \"queryField\",\n              },\n              not_in_query_field: {\n                 label: this.labels.component.notInQueryField,\n                 batch: \"queryField\",\n              },\n           }\n         : {\n              in_query: {\n                 label: this.labels.component.inQuery,\n                 batch: \"query\",\n              },\n              not_in_query: {\n                 label: this.labels.component.notInQuery,\n                 batch: \"query\",\n              },\n           };\n\n      const result = [];\n\n      for (const condKey in queryConditions) {\n         result.push({\n            id: condKey,\n            value: queryConditions[condKey].label,\n            batch: queryConditions[condKey].batch,\n            handler: (a, b) => this.queryFieldValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersThisObject(field) {\n      let thisObjectConditions = {\n         in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.inDataCollection,\n         },\n         not_in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.notInDataCollection,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in thisObjectConditions) {\n         result.push({\n            id: condKey,\n            value: thisObjectConditions[condKey].label,\n            batch: thisObjectConditions[condKey].batch,\n            handler: (a, b) => this.thisObjectValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersRecordRule(field) {\n      let recordRuleConditions = {\n         same_as_field: this.labels.component.sameAsField,\n         not_same_as_field: this.labels.component.notSameAsField,\n      };\n\n      let result = [];\n\n      for (let condKey in recordRuleConditions) {\n         result.push({\n            id: condKey,\n            value: recordRuleConditions[condKey],\n            batch: \"recordRule\",\n            handler: (a, b) => true, // TODO: record rule validation\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersContext(field) {\n      let contextConditions = {\n         context_equals: {\n            batch: \"context\",\n            label: this.labels.component.equalsProcessValue,\n            handler: (a, b) => a == b,\n         },\n         context_not_equal: {\n            batch: \"context\",\n            label: this.labels.component.notEqualsProcessValueCondition,\n            handler: (a, b) => a != b,\n         },\n         context_in: {\n            batch: \"context\",\n            label: this.labels.component.inProcessValueCondition,\n            handler: (a, b) => a.indexOf(b) > -1,\n         },\n         context_not_in: {\n            batch: \"context\",\n            label: this.labels.component.notInProcessValueCondition,\n            handler: (a, b) => a.indexOf(b) == -1,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in contextConditions) {\n         result.push({\n            id: condKey,\n            value: contextConditions[condKey].label,\n            batch: contextConditions[condKey].batch,\n            handler: contextConditions[condKey].handler,\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersCustom(field) {\n      const customOptions = this._customOptions ?? {};\n      const options = customOptions[field.id || field] ?? {};\n      return options.conditions ?? [];\n   }\n\n   queriesLoad(queries = []) {\n      this._Queries = queries;\n   }\n\n   /**\n    * @method queries()\n    *\n    * return an array of all the ABObjectQuery.\n    *\n    * @param filter {Object}\n    *\n    * @return {array}\n    */\n   queries(filter = () => true) {\n      const queryList = this._Queries ?? this.AB?.queries?.() ?? [];\n\n      return queryList.filter((q) => filter(q));\n   }\n\n   setValue(settings) {\n      this.condition = settings || {};\n\n      this.condition.rules = this.condition.rules || [];\n   }\n\n   /**\n    * @method getValue\n    * return the current condition of the filter.\n    * @return {JSON} -\n    * {\n    * \tglue: '', // 'and', 'or'\n    *\t\trules: [\n    *\t\t\t{\n    *\t\t\t\tkey:\t'uuid',\n    *\t\t\t\trule:\t'rule',\n    *\t\t\t\tvalue:\t'value'\n    *\t\t\t}\n    *\t\t]\n    * }\n    */\n   getValue() {\n      // When asked for a value before a condition is set, default the\n      // unset glue to \"and\";\n      if (typeof this.condition.glue == \"undefined\") {\n         this.condition.glue = \"and\";\n      }\n      return this.condition;\n   }\n\n   isComplete() {\n      let result = true;\n\n      const noValueRules = [\n         \"is_current_user\",\n         \"is_not_current_user\",\n         \"contain_current_user\",\n         \"not_contain_current_user\",\n         \"same_as_user\",\n         \"not_same_as_user\",\n         \"is_empty\",\n         \"is_not_empty\",\n         \"checked\",\n         \"unchecked\",\n         \"is_current_date\",\n      ];\n\n      const isCompleteRules = (rules = []) => {\n         if (result == false) return;\n\n         rules.forEach((r) => {\n            if (r?.rules && Array.isArray(r?.rules)) {\n               isCompleteRules(r?.rules);\n            } else {\n               result =\n                  result &&\n                  r?.key != null &&\n                  r?.key != \"\" &&\n                  r?.rule != null &&\n                  r?.rule != \"\" &&\n                  ((r?.value != null && r?.value != \"\") ||\n                     noValueRules.indexOf(r?.rule) > -1);\n            }\n         });\n      };\n\n      isCompleteRules(this.condition?.rules);\n\n      return result;\n   }\n};\n","const ABComponent = require(\"../platform/ABComponent\");\n\n/**\n *  support get data from objects and queries\n */\nfunction getFieldVal(rowData, field, returnSingular = true) {\n   if (!field) return null;\n   if (!field.columnName) return null;\n   // if rowData is an array, then pull the first element to get value\n   if (rowData && rowData[0]) rowData = rowData[0];\n\n   let columnId = field.id;\n   let columnName = field.columnName;\n\n   let value = null;\n   if (columnName.indexOf(\".\") > -1) {\n      let colName = columnName.split(\".\")[1];\n      value = rowData[columnName] || rowData[colName] || rowData[columnId];\n   } else {\n      value = rowData[columnName] || rowData[columnId];\n   }\n\n   if (value) {\n      return value;\n   }\n\n   // otherwise, this might be a process check where the rowData keys have\n   // '[diagramID].[field.id]'\n   for (var k in rowData) {\n      var key = k.split(\".\")[1];\n      if (key && (key == columnId || key == columnName)) {\n         value = rowData[k];\n      }\n   }\n\n   // if value is an array, filter empty item\n   if (value && Array.isArray(value)) {\n      value = value.filter((v) => v != null);\n      if (returnSingular) value = value[0];\n   }\n\n   return value;\n}\n\nmodule.exports = class RowFilterCore extends ABComponent {\n   constructor(App, idBase, AB) {\n      idBase = idBase || \"ab_row_filter\";\n\n      super(App, idBase, AB);\n\n      this.Account = { username: \"??\" };\n      this._settings = {};\n      this.config_settings = {};\n      // var batchName; // we need to revert to this default when switching away from a in/by query field\n\n      this._QueryFields = [];\n      this._Fields;\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onChange: () => {},\n         },\n\n         /**\n          * @method getValue\n          *\n          * @return {JSON} -\n          * {\n          * \t\tglue: '', // 'and', 'or'\n          *\t\trules: [\n          *\t\t\t{\n          *\t\t\t\tkey:\t'column name',\n          *\t\t\t\trule:\t'rule',\n          *\t\t\t\tvalue:\t'value'\n          *\t\t\t}\n          *\t\t]\n          * }\n          */\n         getValue: () => {\n            return this.config_settings;\n         },\n\n         removeHtmlTags: function (text) {\n            let result = \"\";\n            try {\n               let div = document.createElement(\"div\");\n               div.innerHTML = text;\n\n               result = div.textContent || div.innerText || \"\";\n            } catch (err) {\n               result = (text || \"\").replace(/(<([^>]+)>)/gi, \"\");\n            }\n\n            return result;\n         },\n\n         textValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (value == null) value = \"\";\n\n            value = value.toString().trim().toLowerCase();\n            value = _logic.removeHtmlTags(value); // remove html tags - rich text editor\n\n            compareValue = compareValue\n               .toString()\n               .trim()\n               .toLowerCase()\n               .replace(/  +/g, \" \");\n\n            // support \"john smith\" => \"john\" OR/AND \"smith\"\n            var compareArray = compareValue.split(\" \");\n\n            switch (rule) {\n               case \"contains\":\n                  compareArray.forEach((val) => {\n                     if (result == false)\n                        // OR\n                        result = value.indexOf(val) > -1;\n                  });\n                  break;\n               case \"not_contains\":\n                  result = true;\n                  compareArray.forEach((val) => {\n                     if (result == true)\n                        // AND\n                        result = value.indexOf(val) < 0;\n                  });\n                  break;\n               case \"equals\":\n                  compareArray.forEach((val) => {\n                     if (result == false)\n                        // OR\n                        result = value == val;\n                  });\n                  break;\n               case \"not_equal\":\n                  result = true;\n                  compareArray.forEach((val) => {\n                     if (result == true)\n                        // AND\n                        result = value != val;\n                  });\n                  break;\n               case \"is_empty\":\n                  result = value == null || value == \"\";\n                  break;\n               case \"is_not_empty\":\n                  result = value != null && value != \"\";\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         dateValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (!(value instanceof Date)) value = new Date(value);\n\n            if (!(compareValue instanceof Date))\n               compareValue = new Date(compareValue);\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               case \"less\":\n                  result = value < compareValue;\n                  break;\n               case \"greater\":\n                  result = value > compareValue;\n                  break;\n               case \"less_or_equal\":\n                  result = value <= compareValue;\n                  break;\n               case \"greater_or_equal\":\n                  result = value >= compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         numberValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            value = Number(value);\n            compareValue = Number(compareValue);\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               case \"less\":\n                  result = value < compareValue;\n                  break;\n               case \"greater\":\n                  result = value > compareValue;\n                  break;\n               case \"less_or_equal\":\n                  result = value <= compareValue;\n                  break;\n               case \"greater_or_equal\":\n                  result = value >= compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         listValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (value && value.toLowerCase) value = value.toLowerCase();\n\n            compareValue = compareValue.toLowerCase();\n\n            if (!Array.isArray(compareValue)) compareValue = [compareValue];\n\n            switch (rule) {\n               case \"equals\":\n                  if (value) result = compareValue.indexOf(value) > -1;\n                  break;\n               case \"not_equal\":\n                  if (value) result = compareValue.indexOf(value) < 0;\n                  else result = true;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         booleanValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n\n            // default value should be false\n            if (value == null) value = false;\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         userValid: (rowData, field, rule, compareValue) => {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n\n            // if (Array.isArray(value)) value = [value];\n\n            switch (rule) {\n               case \"is_current_user\":\n                  result = value == this.Account.username;\n                  break;\n               case \"is_not_current_user\":\n                  result = value != this.Account.username;\n                  break;\n               case \"contain_current_user\":\n                  if (!value) {\n                     result = false;\n                     break;\n                  }\n                  if (!Array.isArray(value)) value = [value];\n\n                  result =\n                     (value || []).filter((v) => {\n                        if (v) {\n                           return (\n                              (v.username || v.id || v.text || v) ==\n                              this.Account.username\n                           );\n                        } else {\n                           return false;\n                        }\n                     }).length > 0;\n                  break;\n               case \"not_contain_current_user\":\n                  if (!value) {\n                     result = false;\n                     break;\n                  }\n                  if (!Array.isArray(value)) value = [value];\n\n                  result =\n                     (value || []).filter((v) => {\n                        if (v) {\n                           return (\n                              (v.username || v.id || v.text || v) ==\n                              this.Account.username\n                           );\n                        } else {\n                           return false;\n                        }\n                     }).length == 0;\n                  break;\n               case \"equals\":\n                  result = value.indexOf(compareValue) > -1;\n                  break;\n               case \"not_equal\":\n                  result = value.indexOf(compareValue) < 0;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         queryValid: (rowData, rule, compareValue) => {\n            var result = false;\n\n            if (!this.AB || !compareValue) return result;\n\n            // queryId:fieldId\n            var queryId = compareValue.split(\":\")[0],\n               fieldId = compareValue.split(\":\")[1];\n\n            // if no query\n            var query = this.queries((q) => q.id == queryId)[0];\n            if (!query) return result;\n\n            // if no field\n            var field = query.fields((f) => f.id == fieldId)[0];\n            if (!field) return result;\n\n            let qIdBase = \"{idBase}-query-field-{id}\"\n                  .replace(\"{idBase}\", idBase)\n                  .replace(\"{id}\", query.id),\n               inQueryFieldFilter = new this.constructor(this.App, qIdBase);\n            inQueryFieldFilter.Account = this.Account;\n            // inQueryFieldFilter.applicationLoad(this._Application);\n            inQueryFieldFilter.fieldsLoad(query.fields());\n            inQueryFieldFilter.setValue(query.workspaceFilterConditions);\n\n            switch (rule) {\n               case \"in_query_field\":\n                  result = inQueryFieldFilter.isValid(rowData);\n                  break;\n               case \"not_in_query_field\":\n                  result = !inQueryFieldFilter.isValid(rowData);\n                  break;\n            }\n\n            return result;\n         },\n\n         inQueryValid: (rowData, columnName, rule, compareValue) => {\n            let result = false;\n\n            if (columnName) {\n               rowData = rowData[columnName] || {};\n            }\n\n            if (!compareValue || !this.AB) return result;\n\n            // if no query\n            let query = this.queries((q) => q.id == compareValue)[0];\n            if (!query) return result;\n\n            let qIdBase = \"{idBase}-query-{id}\"\n                  .replace(\"{idBase}\", idBase)\n                  .replace(\"{id}\", query.id),\n               inQueryFilter = new this.constructor(this.App, qIdBase);\n            inQueryFilter.Account = this.Account;\n            // inQueryFilter.applicationLoad(this._Application);\n            inQueryFilter.fieldsLoad(query.fields());\n            inQueryFilter.setValue(query.workspaceFilterConditions);\n\n            switch (rule) {\n               case \"in_query\":\n                  result = inQueryFilter.isValid(rowData);\n                  break;\n               case \"not_in_query\":\n                  result = !inQueryFilter.isValid(rowData);\n                  break;\n            }\n\n            return result;\n         },\n\n         dataCollectionValid: (rowData, columnName, rule, compareValue) => {\n            var result = false;\n\n            if (!compareValue || !this.AB) return result;\n\n            if (columnName) {\n               rowData = rowData[columnName] || {};\n            }\n\n            let dc = this.AB.datacollectionByID(compareValue);\n\n            switch (rule) {\n               case \"in_data_collection\":\n                  if (!dc) return false;\n\n                  result =\n                     dc.getData(\n                        (d) => (d.id || d.uuid) == (rowData.id || rowData.uuid)\n                     ).length > 0;\n                  break;\n               case \"not_in_data_collection\":\n                  if (!dc) return true;\n\n                  result =\n                     dc.getData(\n                        (d) => (d.id || d.uuid) == (rowData.id || rowData.uuid)\n                     ).length < 1;\n                  break;\n            }\n\n            return result;\n         },\n\n         connectFieldValid: function (rowData, field, rule, compareValue) {\n            let relationName = field.relationName();\n\n            let connectedVal = \"\";\n\n            if (rowData) {\n               if (rowData[relationName]) {\n                  connectedVal = (\n                     (field.indexField\n                        ? rowData[relationName][field.indexField.columnName]\n                        : false) || // custom index\n                     (field.indexField2\n                        ? rowData[relationName][field.indexField2.columnName]\n                        : false) || // custom index 2\n                     rowData[relationName].id ||\n                     rowData[relationName]\n                  )\n                     .toString()\n                     .toLowerCase();\n               } else {\n                  let fieldVal = getFieldVal(rowData, field);\n                  if (fieldVal != null) {\n                     connectedVal = fieldVal;\n\n                     // an Object to a String\n                     if (typeof connectedVal == \"object\") {\n                        connectedVal =\n                           field.datasourceLink.displayData(connectedVal);\n                     }\n                  }\n               }\n            }\n\n            let compareValueLowercase = (compareValue || \"\").toLowerCase();\n\n            switch (rule) {\n               case \"contains\":\n                  return (\n                     connectedVal.toString().indexOf(compareValueLowercase) > -1\n                  );\n               case \"not_contains\":\n                  return (\n                     connectedVal.toString().indexOf(compareValueLowercase) ==\n                     -1\n                  );\n               case \"equals\":\n                  return connectedVal == compareValueLowercase;\n               case \"not_equal\":\n                  return connectedVal != compareValueLowercase;\n               case \"in_query\":\n               case \"not_in_query\":\n                  return _logic.inQueryValid(\n                     rowData,\n                     relationName,\n                     rule,\n                     compareValue\n                  );\n               case \"is_current_user\":\n               case \"is_not_current_user\":\n               case \"contain_current_user\":\n               case \"not_contain_current_user\":\n                  return _logic.userValid(rowData, field, rule, compareValue);\n               case \"is_empty\":\n                  return (\n                     rowData[relationName] == null ||\n                     rowData[relationName].length < 1 ||\n                     rowData[relationName] == \"\"\n                  );\n               case \"is_not_empty\":\n                  return (\n                     rowData[relationName] != null &&\n                     ((Array.isArray(rowData[relationName]) &&\n                        rowData[relationName].length > 0) ||\n                        rowData[relationName] != \"\")\n                  );\n               case \"in_data_collection\":\n               case \"not_in_data_collection\":\n                  return _logic.dataCollectionValid(\n                     rowData,\n                     relationName,\n                     rule,\n                     compareValue\n                  );\n            }\n         },\n\n         thisObjectValid: (rowData, rule, compareValue) => {\n            let result = false;\n\n            switch (rule) {\n               // if in_query condition\n               case \"in_query\":\n               case \"not_in_query\":\n                  if (!this.AB || !this._Object) return result;\n\n                  // if > 1 copy of this object in query ==> Error!\n                  var query = this.queries((q) => q.id == compareValue)[0];\n                  if (!query) return result;\n\n                  var listThisObjects = query.objects((o) => {\n                     return o.id == this._Object.id;\n                  });\n                  if (listThisObjects.length > 1) {\n                     // Alternative: choose the 1st instance of this object in the query, and make the compare on that.\n                     // Be sure to warn the developer of the limitiations of an \"this_object\" \"in_query\"  when query has > 1 copy of\n                     // this object as part of the query.\n\n                     console.error(\n                        \"HEY!  Can't compare this_object to a query that has > 1 copy of that object!\"\n                     );\n                     return true;\n                  }\n\n                  // get this object's alias from the query\n                  var alias = query.objectAlias(this._Object.id);\n\n                  // make sure all my columns in rowData are prefixed by \"alias\".columnName\n                  var newRowData = {};\n                  Object.keys(rowData).forEach((key) => {\n                     newRowData[`${alias}.${key}`] = rowData[key];\n                  });\n\n                  // then pass this on to the _logic.queryValid();\n                  return _logic.inQueryValid(\n                     newRowData,\n                     null,\n                     rule,\n                     compareValue\n                  );\n               // break; /* eslint no-unreachable */\n\n               // if in_datacollection condition\n               case \"in_data_collection\":\n               case \"not_in_data_collection\":\n                  // send rowData, null to datacollectionValid()\n                  return _logic.dataCollectionValid(\n                     rowData,\n                     null,\n                     rule,\n                     compareValue\n                  );\n               // break; /* eslint no-unreachable */\n            }\n         },\n      });\n\n      // Interface methods for parent component:\n      // this.objectLoad = _logic.objectLoad;\n      // this.viewLoad = _logic.viewLoad;\n      this.getValue = _logic.getValue;\n      // this.setValue = _logic.setValue;\n      // this.isValid = _logic.isValid;\n   }\n\n   init(options) {\n      if (options.showObjectName) {\n         this._settings.showObjectName = options.showObjectName;\n      }\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    */\n   isValid(rowData) {\n      var config_settings = this.config_settings;\n      var _logic = this._logic;\n\n      // If no conditions, then return true\n      if (\n         config_settings == null ||\n         config_settings.rules == null ||\n         config_settings.rules.length == 0\n      )\n         return true;\n\n      if (rowData == null) return false;\n\n      var result = config_settings.glue === \"and\" ? true : false;\n\n      config_settings.rules.forEach((filter) => {\n         if (!filter?.key || !filter?.rule) return;\n\n         var fieldInfo = this._Fields.filter((f) => f.id == filter.key)[0];\n         if (!fieldInfo) return;\n\n         var condResult;\n\n         // Filters that have \"this_object\" don't have a fieldInfo.key, so in that case,\n         // define a special .key == \"this_object\"\n         var ruleFieldType = fieldInfo.key;\n         if (typeof fieldInfo.key == \"undefined\") {\n            if (fieldInfo.id != \"this_object\") {\n               fieldInfo.key = \"connectField\"; // if you are looking at the parent object it won't have a key to analyze\n               ruleFieldType = fieldInfo.key;\n            } else ruleFieldType = \"this_object\";\n         }\n\n         switch (ruleFieldType) {\n            case \"string\":\n            case \"LongText\":\n            case \"email\":\n               condResult = _logic.textValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"date\":\n            case \"datetime\":\n               condResult = _logic.dateValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"number\":\n            case \"formula\":\n               condResult = _logic.numberValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"list\":\n               condResult = _logic.listValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"boolean\":\n               condResult = _logic.booleanValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"user\":\n               condResult = _logic.userValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"connectField\":\n            case \"connectObject\":\n               condResult = _logic.connectFieldValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"this_object\":\n               condResult = _logic.thisObjectValid(\n                  rowData,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n         }\n\n         if (config_settings.glue === \"and\") {\n            result = result && condResult;\n         } else {\n            result = result || condResult;\n         }\n      });\n\n      return result;\n   }\n\n   /**\n    * @method applicationLoad\n    * set application\n    *\n    * @param application {ABApplication}\n    */\n   // applicationLoad(application) {\n   //    this._Application = application;\n   // }\n\n   /**\n    * @method fieldsLoad\n    * set fields\n    *\n    * @param {array} fields\n    *        an array of fields used in this Query\n    * @param {ABObject} object [optional]\n    *        (optional) ABObject reference if this Filter should support\n    *        the \"this object\" conditions.\n    */\n   fieldsLoad(fields = [], object = null) {\n      this._Fields = fields.filter((f) => f?.fieldIsFilterable?.());\n      // NOTE: User fields are now Connections, but we want to treat them\n      // differently.\n      this._QueryFields = this._Fields\n         ? this._Fields.filter((f) => f && f.isConnection && f.key != \"user\")\n         : [];\n\n      // insert our 'this object' entry if an Object was given.\n      if (object) {\n         this._Object = object;\n\n         let thisObjOption = {\n            id: \"this_object\",\n            label: object.label,\n         };\n\n         // If object is query ,then should define default alias: \"BASE_OBJECT\"\n         if (object.viewName) {\n            thisObjOption.alias = \"BASE_OBJECT\";\n         }\n\n         this._Fields.unshift(thisObjOption);\n      } else {\n         delete this._Object;\n      }\n   }\n\n   queriesLoad(queries = []) {\n      this._Queries = queries;\n   }\n\n   /**\n    * @method queries()\n    * return an array of all the ABObjectQuery.\n    * @param {fn} filter\n    * @return {array}\n    */\n   queries(filter = () => true) {\n      let result = [];\n\n      if (this.AB) {\n         result = result.concat(this.AB.queries(filter));\n      }\n\n      if (this._Queries) {\n         result = result.concat(\n            (this._Queries || []).filter(\n               (q) => filter(q) && result.filter((r) => r.id == q.id).length < 1\n            )\n         );\n      }\n\n      return result;\n   }\n\n   setValue(settings) {\n      this.config_settings = settings || {};\n      this.config_settings.rules = this.config_settings.rules || [];\n   }\n};\n","/*\n * ABFieldAutoIndex\n *\n * An ABFieldAutoIndex defines a AutoIndex field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldAutoIndexDefaults = {\n   key: \"AutoIndex\",\n   // unique key to reference this specific DataField\n\n   description: \"Auto Increment Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"key\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'key'  to\n   // reference 'fa-key'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Auto Index\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"tinyint\", \"smallint\", \"mediumint\", \"int\", \"integer\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   prefix: \"\",\n   delimiter: \"none\",\n   displayLength: 4,\n   previewText: \"0000\",\n};\n\nmodule.exports = class ABFieldAutoIndexCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldAutoIndexDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldAutoIndexDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static getDelimiterSign(text) {\n      const delimiterItem = this.delimiterList().filter((item) => {\n         return item.id == text;\n      })[0];\n\n      return delimiterItem ? delimiterItem.sign : \"\";\n   }\n\n   static delimiterList() {\n      return [\n         { id: \"none\", value: L(\"None\"), sign: \"\" },\n         { id: \"comma\", value: L(\"Comma\"), sign: \", \" },\n         { id: \"slash\", value: L(\"Slash\"), sign: \"/\" },\n         { id: \"space\", value: L(\"Space\"), sign: \" \" },\n         { id: \"dash\", value: L(\"Dash\"), sign: \"-\" },\n         { id: \"colon\", value: L(\"Colon\"), sign: \":\" },\n      ];\n   }\n\n   static setValueToIndex(prefix, delimiter, displayLength, displayNumber) {\n      const resultIndex =\n         prefix +\n         this.getDelimiterSign(delimiter) +\n         (\"0000000000\" + displayNumber).slice(-parseInt(displayLength));\n\n      return resultIndex;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.displayLength = parseInt(this.settings.displayLength);\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Remove every values, then we will use AUTO_INCREMENT of MySQL\n      delete values[this.columnName];\n   }\n\n   format(rowData) {\n      if (!rowData?.[this.columnName]) return \"\";\n\n      try {\n         const resultAutoIndex = this.constructor.setValueToIndex(\n            this.settings.prefix,\n            this.settings.delimiter,\n            this.settings.displayLength,\n            rowData[this.columnName]\n         );\n\n         return resultAutoIndex;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n","/*\n * ABFieldBoolean\n *\n * An ABFieldBoolean defines a boolean field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldBooleanDefaults = {\n   key: \"boolean\",\n   // unique key to reference this specific DataField\n\n   description: \"A single checkbox that can be checked or unchecked.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"check-square-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'check-square-o'  to\n   // reference 'fa-check-square-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Checkbox\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"boolean\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"bool\", \"boolean\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   default: 0,\n};\n\nmodule.exports = class ABFieldBooleanCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldBooleanDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldBooleanDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      if (this.settings.default != null)\n         this.settings.default = parseInt(this.settings.default);\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] == null && this.settings.default != null) {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n};\n","/*\n * ABFieldCalculate\n *\n * An ABFieldCalculate defines a calculate field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\n/** Private methods */\nfunction AGE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   const today = new Date();\n   const oneYear = 31536000000; // (24 * 60 * 60 * 1000) * 365;\n   const diffYears = (today - dataDate) / oneYear;\n\n   if (diffYears < 1) return Math.round(diffYears * 10) / 10;\n   // float 2 digits\n   else return Math.floor(diffYears); // no float digit\n\n   // const today = new Date();\n   // const age = today.getFullYear() - dataDate.getFullYear();\n   // if (age < 1) {\n   // \tconst m = today.getMonth() - dataDate.getMonth();\n\n   // \tage = parseFloat(\"0.\" + m);\n\n   // \t// if (m < 0 || (m === 0 && today.getDate() < dataDate.getDate())) {\n   // \t// \tage--;\n   // \t// }\n   // }\n   // return age;\n}\n\nfunction YEAR(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   return dataDate.getFullYear();\n}\n\nfunction MONTH(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // Start at 0\n   return dataDate.getMonth();\n}\n\nfunction DAY(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   return dataDate.getDate();\n}\n\nfunction DATE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one day\n   const oneDay = 86400000; // 1000 * 60 * 60 * 24\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneDay);\n}\n\nfunction HOUR(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one hour\n   const oneHour = 3600000; // 1000 * 60 * 60\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneHour);\n}\n\nfunction MINUTE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one hour\n   const oneMinute = 60000; // 1000 * 60\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneMinute);\n}\n\nfunction MINUTE_TO_HOUR(mins) {\n   const hours = mins / 60;\n   const rhours = Math.floor(hours);\n   const minutes = (hours - rhours) * 60;\n   const rminutes = Math.round(minutes);\n\n   return parseFloat(`${rhours}.${rminutes}`);\n}\n\nconst ABFieldCalculateDefaults = {\n   key: \"calculate\",\n   // unique key to reference this specific DataField\n\n   description: \"Perform a calculation based upon existing values\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"calculator\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'calculator'  to\n   // reference 'fa-calculator'\n\n   isFilterable: (field) => {\n      const unsupportedInFilter = [\"MINUTE_TO_HOUR\", \"DATE\", \"HOUR\", \"MINUTE\"];\n      const unsupported = unsupportedInFilter.filter((item) =>\n         field.settings.formula.includes(item)\n      );\n      return unsupported.length == 0;\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Calculate\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   formula: \"\",\n   decimalSign: \"none\", // \"none\", \"comma\", \"period\", \"space\"\n   decimalPlaces: 0, // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\n};\n\nmodule.exports = class ABFieldCalculateCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldCalculateDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldCalculateDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   /**\n    * @method convertToJs\n    *\n    * @param {ABOBject} object\n    * @param {string} formula\n    * @param {object} rowData\n    * @param {integer} place\n    * @param {string} alias [Optional]\n    */\n   static convertToJs(\n      object,\n      formula,\n      rowData,\n      place,\n      alias = null,\n      recalculate = false\n   ) {\n      if (!formula) return \"\";\n\n      // replace with current date\n      formula = formula.replace(/\\(CURRENT\\)/g, \"(new Date())\");\n\n      object.fields().forEach((f) => {\n         let colName = f.columnName;\n         if (colName.indexOf(\".\") > -1)\n            // QUERY: get only column name\n            colName = colName.split(\".\")[1];\n\n         // if template does not contain, then should skip\n         if (formula.indexOf(\"{\" + colName + \"}\") < 0) return;\n\n         const data =\n            rowData[`${object.alias ?? alias}.${f.columnName}`] ??\n            rowData[f.columnName];\n\n         // number fields\n         if (f.key == \"number\") {\n            const numberVal = `(${data || 0})`; // (number) - NOTE : (-5) to support negative number\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               numberVal\n            );\n         }\n         // calculate and formula fields\n         else if (f.key == \"calculate\" || f.key == \"formula\") {\n            let calVal = f.format(rowData, recalculate) || 0;\n\n            // pull number only\n            if (typeof calVal == \"string\")\n               calVal = calVal.replace(/[^-0-9.]/g, \"\");\n\n            calVal = `(${calVal})`;\n\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               calVal\n            );\n         }\n         // date fields\n         else if (f.key == \"date\" || f.key == \"datetime\") {\n            const dateVal = `\"${data || \"\"}\"`; // \"date\"\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               dateVal\n            );\n         }\n         // boolean fields\n         else if (f.key == \"boolean\") {\n            const booleanVal = `(${data || 0})`; // show 1 or 0 for boolean\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               booleanVal\n            );\n         }\n      });\n\n      // decimal places - toFixed()\n      // FIX: floating number calculation\n      // https://randomascii.wordpress.com/2012/02/25/comparing-floating-point-numbers-2012-edition/\n      return eval(formula).toFixed(place || 0);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // this field is read only\n      delete values[this.columnName];\n   }\n\n   format(rowData, recalculate = false) {\n      let place = 0;\n      if (this.settings.decimalSign != \"none\") {\n         place = this.settings.decimalPlaces;\n      }\n\n      try {\n         let result = this.constructor.convertToJs(\n            this.object,\n            this.settings.formula,\n            rowData,\n            place,\n            this.alias,\n            recalculate\n         );\n\n         if (typeof result == \"string\")\n            result = result.replace(/[^-0-9.]/g, \"\");\n\n         switch (this.settings.decimalSign) {\n            case \"comma\":\n               result = result.replace(\".\", \",\");\n               break;\n            case \"space\":\n               result = result.replace(\".\", \" \");\n               break;\n         }\n\n         return result;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n","/*\n * ABFieldCombine\n *\n * An ABFieldCombine defines a combined field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\n// function L(key, altText) {\n//    // TODO:\n//    return altText; // AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABFieldCombinedDefaults = {\n   key: \"combined\",\n   // unique key to reference this specific DataField\n\n   description: \"Combined Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"key\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'key'  to\n   // reference 'fa-key'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Combined Field\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   combinedFields: \"\",\n   // {string} \"field's uuid1, field's uuid2, field's uuid3, ...\"\n   // This tells us what fields will be combined.\n   // if we don't have this, the old value which we filled out won't be cleared when we do \"Add field\" this type again.\n\n   delimiter: \"plus\", // plus, space, dash, period\n};\n\nmodule.exports = class ABFieldCombineCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldCombinedDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldCombinedDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.delimiter =\n         values.settings.delimiter || defaultValues.delimiter;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Remove every values, then we will use AUTO_INCREMENT of MySQL\n      delete values[this.columnName];\n   }\n\n   /**\n    * @method getCombinedFields\n    * Retrieve the fields used to combine and generate a specific value\n    *\n    * @return {Array}\n    */\n   getCombinedFields() {\n      const result = [];\n\n      (this.settings?.combinedFields ?? \"\").split(\",\").forEach((fieldId) => {\n         const fld = this.object.fields((f) => f.id == fieldId)[0];\n         if (!fld) return;\n\n         result.push(fld);\n      });\n\n      return result;\n   }\n\n   /**\n    * @method format\n    * Convert the value of a connected field (without a custom index) to display the label of the linked object\n    *\n    * @param {Object} rowData\n    * @returns {String}\n    */\n   format(rowData) {\n      let val = rowData[this.columnName] ?? \"\";\n\n      this.getCombinedFields().forEach((f, index) => {\n         if (\n            f.key != \"connectObject\" ||\n            f.settings.indexField ||\n            f.settings.indexField2\n         )\n            return;\n\n         let connectVal = rowData[f.relationName()];\n         if (!connectVal) return;\n\n         if (!Array.isArray(connectVal)) connectVal = [connectVal];\n\n         const connectLabel = connectVal\n            .map((item) => item.text ?? f.datasourceLink.displayData(item))\n            .join(\"|\");\n\n         val = val.replace(rowData[f.columnName], connectLabel);\n      });\n\n      return val;\n   }\n};\n","/*\n * ABFieldConnect\n *\n * An ABFieldConnect defines a connect to other object field type.\n *\n */\n\nvar ABField = require(\"../../platform/dataFields/ABField\");\n\n// function L(key, altText) {\n//    // TODO:\n//    return altText; // AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABFieldConnectDefaults = {\n   key: \"connectObject\",\n   // unique key to reference this specific DataField\n\n   description: \"Connect two data objects together\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"external-link\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'external-link'  to\n   // reference 'fa-external-link'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      const linkType = `${field?.settings?.linkType}:${field?.settings?.linkViaType}`;\n      return [\"one:many\", \"one:one\"].indexOf(linkType) > -1;\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Connect to another record\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   linkObject: \"\", // ABObject.id\n   // the .id of the ABObject we are connected to\n\n   linkType: \"one\", // [one, many]\n   // 'one' : this object can have only 1 of our linkObject\n   // 'many': this object can have MANY of our linkObject\n\n   linkViaType: \"many\", // [one, many]\n   // 'one' : the linkedObject can only have 1 of me\n   // 'many' : the linkedObject can have many of me\n\n   linkColumn: \"\", // ABField.id\n   // the .id of the field in the linkedObject that is our\n   // connected field.\n\n   isSource: null, // bit : 1,0\n   // isSource indicates that this object is the source of the connection:\n   // if linkType==one, and isSource=1, then the value in this object's field\n   // \t\tis the connected object's id\n   // if linkType == one, and isSource = 0, then the linkObject has this obj.id\n   //  \tin it's connected field (linkColumn)\n\n   // the next 3 Fields are concerning how we connect to other ABObjects when\n   // we are NOT using the .uuid as the connecting Value. Instead, there is an\n   // ABIndex setting we are connecting with.\n   isCustomFK: 0,\n   // {bool} truthy [0,1, etc...]\n   // indicates that this connection is using 1 or more custom foreign keys\n   // for the data it is storing in it's relationship.\n\n   indexField: \"\", // ABField.id\n   // {string} {ABField.id}\n   // In a Connection defined between A --> B, this field represents the ABField\n   // that is used for the data being stored.\n   // In 1:1,  1:M  or M:1  relationships, .indexField always refers to the\n   //       field we are pulling the Data FROM.\n   // In M:N relationships:  this will refer to the A.Field.id that is a custom\n   //       key (if any).\n\n   indexField2: \"\", // ABField.id\n   // {string}  {ABField.id}\n   // In the M:N relationship: this field refers to the B.Field.id that is a\n   //       custom Key for the data we are storing.\n};\n\nmodule.exports = class ABFieldConnectCore extends ABField {\n   constructor(values, object, fieldDefaults = ABFieldConnectDefaults) {\n      super(values, object, fieldDefaults);\n\n      this.isConnection = true;\n      // {bool}\n      // is this an ABFieldConnect type of field.\n      // this is a simplified helper to identify if an ABField is a type\n      // of connect field.  Since this is the only place it is defined,\n      // all other field types will be falsy\n\n      // // text to Int:\n      // this.settings.isSource = parseInt(this.settings.isSource || 0);\n      // this.settings.isCustomFK = parseInt(this.settings.isCustomFK || 0);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldConnectDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.isSource = parseInt(this.settings.isSource || 0);\n      this.settings.isCustomFK = parseInt(this.settings.isCustomFK || 0);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(/* values */) {}\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n\n   relationName() {\n      // there is object name - {objectName}.{columnName}\n      if (this.columnName.indexOf(\".\") > -1) {\n         const names = this.columnName.split(\".\");\n         return `${names[0]}.${this.AB.rules.toFieldRelationFormat(names[1])}`;\n      } else {\n         return this.AB.rules.toFieldRelationFormat(this.columnName);\n      }\n   }\n\n   /**\n    * @method datasourceLink\n    * return the ABObject that this field connection links to\n    * @return {ABObject}\n    */\n   get datasourceLink() {\n      const linkObj = this.AB.objectByID(this.settings.linkObject);\n      if (!linkObj) {\n         const configError = new Error(\n            `ConnectField[${this.label}][${this.id}] unable to find linkObject[${this.settings.linkObject}]`\n         );\n         this.AB.notify.builder(configError, {\n            field: this,\n            linkObject: this.settings.linkObject,\n         });\n      }\n      return linkObj;\n   }\n\n   /**\n    * @method fieldLink\n    * return the ABField that we are linked to.\n    * @return {ABDataField}  or undefined if not found.\n    */\n   get fieldLink() {\n      const objectLink = this.datasourceLink;\n      if (!objectLink) return null; // note: already Notified\n\n      const linkColumn = objectLink.fieldByID(this.settings.linkColumn);\n      if (!linkColumn) {\n         const configError = new Error(\n            `ConnectField[${this.label}][${this.id}] unable to find linkColumn[${this.settings.linkColumn}]`\n         );\n         this.AB.notify.builder(configError, {\n            field: this,\n            linkColumn: this.settings.linkColumn,\n         });\n      }\n      return linkColumn;\n   }\n\n   /**\n    * @method pullRelationValues\n    * Return the data values for this field entry in the provided data row.\n    * @param {*} row\n    * @return {array}\n    */\n   pullRelationValues(row) {\n      let selectedData;\n\n      // Get linked object\n      const linkedObject = this.datasourceLink;\n\n      let data = this.dataValue(row);\n      if (data && linkedObject) {\n         // convert to JSON\n         if (typeof data == \"string\") {\n            try {\n               data = JSON.parse(data);\n            } catch (e) {\n               // must be a UUID\n               // so just set that to selectedData:\n               selectedData = data;\n            }\n         }\n\n         selectedData = data;\n      }\n\n      return selectedData;\n   }\n\n   dataValue(rowData) {\n      if (rowData == null) return \"\";\n\n      const propName = `${this.object.name}.${this.relationName()}`;\n\n      return (\n         rowData[this.relationName()] ||\n         rowData[propName] ||\n         rowData[this.columnName] ||\n         \"\"\n      );\n   }\n\n   format(rowData) {\n      const val = this.pullRelationValues(rowData);\n      const linkedObject = this.datasourceLink;\n\n      // array\n      if (Array.isArray(val))\n         return val\n            .map((v) => {\n               if (v.text == null) return linkedObject.displayData(v) || \"\";\n               else return v.text || \"\";\n            })\n            .join(\", \");\n      // string\n      else if (val) {\n         if (val.text == null) return linkedObject.displayData(val) || \"\";\n         else if (val.text) return val.text || \"\";\n      }\n      // empty string\n      else return \"\";\n   }\n\n   /**\n    * @method linkType\n    * return the type of connection we have to our connected object\n    * @return {string}\n    */\n   linkType() {\n      return this.settings.linkType;\n   }\n\n   /**\n    * @method linkType\n    * return the type of connection we have to our connected object\n    * @return {string}\n    */\n   linkViaType() {\n      return this.settings.linkViaType;\n   }\n\n   /**\n    * @method isSource\n    * does this object contain the .id of the remote object (in case of linkType : one )\n    * @return {bool}\n    */\n   isSource() {\n      return this.settings.isSource;\n   }\n\n   /**\n    * @property indexField\n    * @return {ABField}\n    */\n   get indexField() {\n      if (!this.settings.isCustomFK || !this.settings.indexField) {\n         return null;\n      }\n      const linkType = `${this.settings.linkType}:${this.settings.linkViaType}`;\n      // 1:M\n      if (linkType === \"one:many\") {\n         return this.datasourceLink.fieldByID(this.settings.indexField);\n      }\n      // 1:1\n      else if (linkType === \"one:one\") {\n         if (this.settings.isSource) {\n            return this.datasourceLink.fieldByID(this.settings.indexField);\n         } else {\n            return this.object.fieldByID(this.settings.indexField);\n         }\n      }\n      // M:1\n      else if (linkType === \"many:one\") {\n         return this.object.fieldByID(this.settings.indexField);\n      }\n      // M:N\n      else if (linkType === \"many:many\") {\n         let indexField = this.object.fieldByID(this.settings.indexField);\n\n         if (indexField == null)\n            indexField = this.datasourceLink.fieldByID(\n               this.settings.indexField\n            );\n\n         return indexField;\n      }\n\n      return null;\n   }\n\n   /**\n    * @property indexField2\n    * @return {ABField}\n    */\n   get indexField2() {\n      if (!this.settings.isCustomFK || !this.settings.indexField2) {\n         return null;\n      }\n\n      let indexField;\n\n      // M:N only\n      if (\n         this.settings.linkType == \"many\" &&\n         this.settings.linkViaType == \"many\"\n      ) {\n         indexField = this.object.fieldByID(this.settings.indexField2);\n\n         if (indexField == null)\n            indexField = this.datasourceLink.fieldByID(\n               this.settings.indexField2\n            );\n      }\n\n      return indexField;\n   }\n\n   /**\n    * @method getRelationValue\n    * pull values for update connect data\n    * @param {Object} rowData\n    * @param {Object} options - {\n    *                               forUpdate: boolean\n    *                           }\n    * @return {Object}\n    */\n   getRelationValue(rowData, options = {}) {\n      if (rowData == null) return;\n      let colName;\n      const indexField = this.indexField;\n      const datasourceLink = this.datasourceLink;\n\n      const linkType = `${this.settings.linkType}:${this.settings.linkViaType}`;\n\n      // custom index\n      // M:N\n      if (linkType === \"many:many\") {\n         const indexField2 = this.indexField2;\n\n         if (indexField && indexField.object.id == datasourceLink.id) {\n            colName = indexField.columnName;\n         } else if (indexField2 && indexField2.object.id == datasourceLink.id) {\n            colName = indexField2.columnName;\n         }\n      }\n      // 1:M, 1:1 isSource = true\n      else if (\n         indexField &&\n         (linkType === \"one:many\" ||\n            (linkType === \"one:one\" && this.settings.isSource))\n      ) {\n         colName = indexField.columnName;\n      }\n      // M:1\n      else if (linkType === \"many:one\") {\n         // NOTE: M:1 has special case\n         // it uses different value for search and update.\n         // UPDATE uses row id\n         // SEARCH uses custom index value\n         if (options.forUpdate) {\n            colName = datasourceLink.PK();\n         } else {\n            colName = indexField\n               ? indexField.columnName\n               : datasourceLink.PK();\n         }\n      }\n      // NO CUSTOM INDEX\n      else if (datasourceLink) {\n         colName = datasourceLink.PK();\n      }\n\n      let result =\n         rowData[colName] ||\n         rowData[this.object?.PK()] ||\n         rowData.id ||\n         rowData;\n\n      if (colName == \"id\") {\n         result = parseInt(result);\n      }\n\n      return result;\n   }\n};\n","/*\n * ABFieldCore\n *\n * ABFieldBase defines the common ABField structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABObject classes.\n *\n */\n// const ABEmitter = require(\"../../platform/ABEmitter\");\nconst ABMLClass = require(\"../../platform/ABMLClass\");\n\nmodule.exports = class ABFieldCore extends ABMLClass {\n   constructor(values, object, fieldDefaults) {\n      super([\"label\"], object.AB);\n\n      // NOTE: setup this first so later we can use .fieldType(), .fieldIcon()\n      this.defaults = fieldDefaults || {};\n\n      /*\n  \t\t{\n  \t\t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n  \t\t\tkey:'fieldKey',\t\t\t\t// unique key for this Field\n  \t\t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this Field Type\n  \t\t\tlabel:'',\t\t\t\t\t// pulled from translation\n\t\t\tcolumnName:'column_name',\t// a valid mysql table.column name\n\t\t\tisImported: 1/0,\t\t\t// flag to mark is import from other object\n\t\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n\t\t\t\tshowIcon:true/false,\t// only useful in Object Workspace DataTable\n\t\t\t\tisImported: 1/0,\t\t// flag to mark is import from other object\n\t\t\t\trequired: 1/0,\t\t\t// field allows does not allow NULL or it does allow NULL\n\t\t\t\twidth: {int}\t\t\t// width of display column\n\n\t\t\t\t// specific for dataField\n\t\t\t},\n\t\t\ttranslations:[]\n  \t\t}\n  \t\t*/\n\n      this.object = object;\n\n      this.fromValues(values);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n   static get reservedNames() {\n      return [\n         \"id\",\n         \"created_at\",\n         \"updated_at\",\n         \"properties\",\n         \"createdAt\",\n         \"updatedAt\",\n      ];\n   }\n\n   static defaultValues() {\n      return {};\n   }\n\n   // unique key to reference this specific DataField\n   fieldKey() {\n      return this.defaults.key;\n   }\n\n   /**\n    * Sails ORM data types that can be imported to this DataField\n    * @return {Array}\n    */\n   fieldOrmTypes() {\n      if (this.defaults.compatibleOrmTypes) {\n         if (Array.isArray(this.defaults.compatibleOrmTypes)) {\n            return this.defaults.compatibleOrmTypes;\n         } else {\n            return [this.defaults.compatibleOrmTypes];\n         }\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * Mysql data types that can be imported to this DataField\n    * @return {Array}\n    */\n   fieldMysqlTypes() {\n      if (this.defaults.compatibleMysqlTypes) {\n         if (Array.isArray(this.defaults.compatibleMysqlTypes)) {\n            return this.defaults.compatibleMysqlTypes;\n         } else {\n            return [this.defaults.compatibleMysqlTypes];\n         }\n      } else {\n         return [];\n      }\n   }\n\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   fieldIcon() {\n      return this.defaults.icon;\n   }\n\n   // the multilingual text for the name of this data field.\n   fieldMenuName() {\n      return this.defaults.menuName;\n   }\n\n   // the multilingual text for the name of this data field.\n   fieldDescription() {\n      return this.defaults.description;\n   }\n\n   // the flag to set when checking if field should be filterable\n   fieldIsFilterable() {\n      if (this.defaults.isFilterable != null) {\n         if (typeof this.defaults.isFilterable === \"function\") {\n            return this.defaults.isFilterable(this);\n         } else {\n            return this.defaults.isFilterable;\n         }\n      }\n\n      return 1;\n   }\n\n   // the flag to set when checking if field should be sortable\n   fieldIsSortable() {\n      if (this.defaults.isSortable != null) {\n         if (typeof this.defaults.isSortable === \"function\") {\n            return this.defaults.isSortable(this);\n         } else {\n            return this.defaults.isSortable;\n         }\n      }\n\n      return 1;\n   }\n\n   // the flag to set when checking if the field should be used as a label\n   fieldUseAsLabel() {\n      if (this.defaults.useAsLabel != null) {\n         if (typeof this.defaults.useAsLabel === \"function\") {\n            return this.defaults.useAsLabel(this);\n         } else {\n            return this.defaults.useAsLabel;\n         }\n      }\n\n      return 1;\n   }\n\n   fieldSupportRequire() {\n      if (this.defaults.supportRequire) return this.defaults.supportRequire;\n      // default\n      else return true;\n   }\n\n   fieldSupportQuery() {\n      if (this.defaults.supportQuery != null) {\n         if (typeof this.defaults.supportQuery === \"function\") {\n            return this.defaults.supportQuery(this);\n         } else {\n            return this.defaults.supportQuery;\n         }\n      }\n\n      return true;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABField instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      return {\n         id: this.id,\n         type: this.type || \"field\",\n         key: this.key,\n         icon: this.icon,\n         isImported: this.isImported,\n         columnName: this.columnName,\n         settings: this.settings,\n         translations: obj.translations,\n      };\n   }\n\n   defaultCheck(val, defaultVal) {\n      let returnVal = defaultVal;\n      if (typeof val != \"undefined\") {\n         returnVal = val;\n      }\n      return returnVal;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      if (!this.id) this.id = values.id; // NOTE: only exists after .save()\n      this.type == values.type || \"field\";\n      this.key = values.key || this.fieldKey();\n      this.icon = values.icon || this.fieldIcon();\n\n      values.settings = values.settings || {};\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.columnName = values.columnName || \"\";\n\n      this.isImported = values.isImported || 0;\n\n      this.settings = values.settings;\n      this.settings.showIcon = this.defaultCheck(values.settings.showIcon, \"1\");\n      this.settings.required = this.defaultCheck(values.settings.required, \"0\");\n      this.settings.width = this.defaultCheck(values.settings.width, \"0\");\n\n      // convert from \"0\" => 0\n      this.isImported = parseInt(this.isImported);\n      this.settings.showIcon = parseInt(this.settings.showIcon);\n      this.settings.required = parseInt(this.settings.required);\n      this.settings.unique = parseInt(this.settings.unique || 0);\n      this.settings.width = parseInt(this.settings.width);\n\n      // we're responsible for setting up our specific settings:\n      const defaultValues = this.constructor.defaultValues() || {};\n      for (const dv in defaultValues) {\n         this.settings[dv] = this.defaultCheck(\n            values.settings[dv],\n            defaultValues[dv]\n         );\n      }\n\n      // const the MLClass now process the Translations\n      super.fromValues(values);\n\n      // final validity check: columnName really should have a value:\n      this.columnName = this.columnName || this.label;\n\n      // knex does not like .(dot) in table and column names\n      // https://github.com/knex/knex/issues/2762\n      this.columnName = this.columnName.replace(/[^a-zA-Z0-9_ ]/gi, \"\");\n   }\n\n   /**\n    * @method urlPointer()\n    * return a string pointer to decode this object from the root application\n    * object.\n    * @return {string} pointer reference\n    */\n   urlPointer() {\n      return this.object.urlField() + this.id;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      values[this.columnName] = \"\";\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    */\n   isValidData(data, validator) {\n      // console.error('!!! Field ['+this.fieldKey()+'] has not implemented .isValidData()!!!');\n      if (\n         this.settings.required &&\n         (data[this.columnName] == null || data[this.columnName] == \"\") &&\n         data[this.columnName] != 0\n      ) {\n         validator.addError(this.columnName, \"This is a required field.\");\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return false;\n   }\n\n   dataValue(rowData) {\n      const propName = `${this.alias || this.object.name}.${this.columnName}`;\n\n      let result = \"\";\n      if (rowData?.[this.columnName] != null) {\n         result = rowData[this.columnName];\n      } else if (rowData?.[propName] != null) {\n         result = rowData[propName];\n      }\n\n      return result;\n   }\n\n   /**\n    * @method format\n    * return display text to detail comonent and define label of object\n    *\n    * @param {Object} rowData - data\n    */\n   format(rowData) {\n      if (rowData) {\n         return this.dataValue(rowData);\n      } else return \"\";\n   }\n\n   /**\n    * @method toDefinition()\n    *\n    * convert this instance into an ABDefinition object.\n    *\n    * @return {ABDefinition}\n    */\n   toDefinition() {\n      const myDef = super.toDefinition();\n\n      // attempt to provide a more descriptive name:\n      // [obj]->[fieldName]\n      if (myDef.name == \"\") {\n         myDef.name =\n            myDef.json.name || myDef.json.label || myDef.json.columnName;\n      }\n      if (this.object && this.object.name) {\n         myDef.name = `${this.object.name}->${myDef.name}`;\n      }\n      return myDef;\n   }\n};\n","/*\n * ABFieldDate\n *\n * An ABFieldDate defines a date field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\n/*function L(key, altText) {\n   // TODO:git \n   // return altText; // AD.lang.label.getLabel(key) || altText;\n}*/\n\nconst ABFieldDateDefaults = {\n   key: \"date\",\n   // unique key to reference this specific DataField\n\n   description: \"Pick one from a calendar.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"calendar\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'calendar'  to\n   // reference 'fa-calendar'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Date\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"date\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"date\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   dateFormat: 2, // 1 (Ignore date), 2, 3, 4, 5\n   defaultDate: 1, // 1 (None), 2 (Current Date), 3 (Specific Date)\n   defaultDateValue: null, // {Date}\n   validateCondition: \"none\",\n   validateRangeUnit: \"days\",\n   validateRangeBefore: 0,\n   validateRangeAfter: 0,\n   validateStartDate: null,\n   validateEndDate: null,\n};\n\nmodule.exports = class ABFieldDateCore extends ABField {\n   constructor(values, object, defaultValues = ABFieldDateDefaults) {\n      super(values, object, defaultValues);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldDateDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   // TODO: current webpack install fails here without babel-loader,\n   // so swtich this to old JS method of Static Values (see bottom)\n   // static RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2}$\";\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.dateFormat = parseInt(this.settings.dateFormat);\n      this.settings.defaultDate = parseInt(this.settings.defaultDate);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] != null) return;\n\n      let dateResult;\n\n      // Set current date as default\n      if (this.settings.defaultDate == 2) {\n         dateResult = new Date();\n      }\n      // Set specific date as default\n      else if (\n         this.settings.defaultDate == 3 &&\n         this.settings.defaultDateValue\n      ) {\n         dateResult = new Date(this.settings.defaultDateValue);\n      }\n\n      // if no default value is set, then don't insert a value.\n      if (dateResult != null) {\n         values[this.columnName] = this.AB.rules.toDateFormat(dateResult, {\n            format: \"YYYY-MM-DD\",\n         });\n         // values[this.columnName] = moment(dateResult).format(\"YYYY-MM-DD\");\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n      var L = this.AB.Label();\n\n      const currentDate = new Date();\n      currentDate.setHours(0, 0, 0, 0);\n\n      if (data[this.columnName]) {\n         let value = data[this.columnName];\n\n         if (!(value instanceof Date)) {\n            value = this.AB.rules.toDate(value);\n            // value = new Date(this.convertToMoment(value));\n         }\n\n         // verify we didn't end up with an InValid Date result.\n         if (\n            Object.prototype.toString.call(value) === \"[object Date]\" &&\n            isFinite(value)\n         ) {\n            let isValid = true;\n\n            // Custom vaildate is here\n            if (this.settings && this.settings.validateCondition) {\n               const startDate = this.settings.validateStartDate\n                     ? new Date(this.settings.validateStartDate)\n                     : null,\n                  endDate = this.settings.validateEndDate\n                     ? new Date(this.settings.validateEndDate)\n                     : null,\n                  startDateDisplay = this.getDateDisplay(startDate),\n                  endDateDisplay = this.getDateDisplay(endDate);\n               const minDate = this.AB.rules.subtractDate(\n                  new Date(),\n                  this.settings.validateRangeBefore,\n                  this.settings.validateRangeUnit\n               );\n               const maxDate = this.AB.rules.addDate(\n                  new Date(),\n                  this.settings.validateRangeAfter,\n                  this.settings.validateRangeUnit\n               );\n               switch (this.settings.validateCondition) {\n                  case \"dateRange\":\n                     if (minDate < value && value < maxDate) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should be in between {0} and {1}\", [\n                              this.getDateDisplay(minDate),\n                              this.getDateDisplay(maxDate),\n                           ])\n                        );\n                     }\n\n                     break;\n                  case \"between\":\n                     if (startDate < value && value < endDate) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should be in between {0} and {1}\", [\n                              startDateDisplay,\n                              endDateDisplay,\n                           ])\n                        );\n                     }\n                     break;\n                  case \"notBetween\":\n                     if (value < startDate && endDate < value) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should not be in between {0} and {1}\", [\n                              startDateDisplay,\n                              endDateDisplay,\n                           ])\n                        );\n                     }\n                     break;\n                  case \"=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() == startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<>\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() != startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should not equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \">\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() > startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should after {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() < startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should before {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \">=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() >= startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should after or equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() <= startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should before or equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"lessCurrentDate\":\n                     isValid =\n                        value.getTime &&\n                        value.getTime() < currentDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should before {0}\", [\n                              this.getDateDisplay(currentDate),\n                           ])\n                        );\n                     break;\n                  case \"lessEqualCurrentDate\":\n                     isValid =\n                        value.getTime &&\n                        value.getTime() <= currentDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should before or equal {0}\", [\n                              this.getDateDisplay(currentDate),\n                           ])\n                        );\n                     break;\n               }\n            }\n\n            if (isValid) {\n               // Reformat value to DB\n               // NOTE: should we update here?\n               data[this.columnName] = this.exportValue(value);\n            }\n         } else {\n            // return a validation error\n            validator.addError(this.columnName, \"Should be a Date!\");\n         }\n      }\n   }\n\n   format(rowData) {\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n\n      // pull format from settings.\n      const dateObj = this.AB.rules.toDate(d);\n      return this.getDateDisplay(dateObj);\n\n      // const momentObj = this.convertToMoment(d);\n      // return this.getDateDisplay(new Date(momentObj));\n   }\n\n   getFormat() {\n      let dateFormatString = \"\";\n\n      const dateFormat =\n         this.settings && this.settings.dateFormat\n            ? this.settings.dateFormat\n            : \"\";\n\n      switch (dateFormat) {\n         //Ignore Date\n         case (1, 2):\n            {\n               dateFormatString = \"%d/%m/%Y\";\n            }\n            break;\n         //mm/dd/yyyy\n         case 3:\n            {\n               dateFormatString = \"%m/%d/%Y\";\n            }\n            break;\n         //M D, yyyy\n         case 4:\n            {\n               dateFormatString = \"%M %d, %Y\";\n            }\n            break;\n         //D M, yyyy\n         case 5:\n            {\n               dateFormatString = \"%d %M, %Y\";\n            }\n            break;\n         default:\n            {\n               dateFormatString = \"%d/%m/%Y\";\n            }\n            break;\n      }\n\n      return dateFormatString;\n   }\n\n   getDateDisplay(dateData) {\n      const dateFormat = this.getFormat();\n\n      return this.dateToString(dateFormat, dateData);\n   }\n\n   // convertToMoment(string) {\n   //    const result = moment(string);\n\n   //    const supportFormats = [\n   //       \"DD/MM/YYYY\",\n   //       \"MM/DD/YYYY\",\n   //       \"DD-MM-YYYY\",\n   //       \"MM-DD-YYYY\"\n   //    ];\n\n   //    supportFormats.forEach((format) => {\n   //       if (!result || !result.isValid()) result = moment(string, format);\n   //    });\n\n   //    return result;\n   // }\n\n   exportValue(value) {\n      return value\n         ? this.AB.rules.toDateFormat(value, {\n              format: \"YYYY-MM-DD\",\n           })\n         : \"\";\n      // return this.convertToMoment(value).format(\"YYYY-MM-DD\");\n   }\n\n   dateToString(dateFormat, dateData) {\n      if (dateData && dateData.toString) return dateData.toString();\n      else return \"\";\n   }\n};\n\n// Transition Code:\n// revert to static RegEx once babel-loader is working locally.\nmodule.exports.RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2}$\";\n","/*\n * ABFieldDateTime\n *\n * An ABFieldDateTime defines a datetime field type.\n *\n */\n\nconst ABFieldDateCore = require(\"./ABFieldDateCore\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldDateDefaults = {\n   key: \"datetime\",\n   // unique key to reference this specific DataField\n\n   description: \"Pick one from date & time.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"clock-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'clock-o'  to\n   // reference 'clock-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Date & Time\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"datetime\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"datetime\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   timeFormat: 2, // 1 (Ignore time), 2, 3\n   defaultTime: 1, // 1 (None), 2 (Current Time), 3 (Specific Time)\n   defaultTimeValue: null, // {Date}\n};\n\nmodule.exports = class ABFieldDateTimeCore extends ABFieldDateCore {\n   constructor(values, object) {\n      super(values, object, ABFieldDateDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldDateDefaults;\n   }\n\n   static defaultValues() {\n      const baseDefault = super.defaultValues();\n      return Object.assign(baseDefault, defaultValues);\n   }\n\n   // TODO: current webpack install fails here without babel-loader,\n   // so swtich this to old JS method of Static Values (see bottom)\n   // static RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$\";\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.timeFormat = parseInt(this.settings.timeFormat);\n      this.settings.defaultTime = parseInt(this.settings.defaultTime);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] != null) return;\n\n      super.defaultValue(values);\n\n      let dateResult;\n\n      // From default value of ABFieldDateCore\n      if (values[this.columnName]) {\n         dateResult = this.AB.rules.toDate(values[this.columnName]);\n         // const momentVal = this.convertToMoment(values[this.columnName]);\n         // if (momentVal.isValid()) {\n         //    dateResult = new Date(momentVal);\n         // }\n      }\n\n      // Set current time as default\n      if (this.settings.defaultTime == 2) {\n         const currDate = new Date();\n\n         if (dateResult == null) dateResult = new Date();\n\n         dateResult.setHours(currDate.getHours());\n         dateResult.setMinutes(currDate.getMinutes());\n         dateResult.setSeconds(currDate.getSeconds());\n         dateResult.setMilliseconds(currDate.getMilliseconds());\n      }\n      // Set specific time as default\n      else if (\n         this.settings.defaultTime == 3 &&\n         this.settings.defaultTimeValue\n      ) {\n         const defaultTime = new Date(this.settings.defaultTimeValue);\n\n         if (dateResult == null) dateResult = new Date();\n\n         dateResult.setHours(defaultTime.getHours());\n         dateResult.setMinutes(defaultTime.getMinutes());\n         dateResult.setSeconds(defaultTime.getSeconds());\n         dateResult.setMilliseconds(defaultTime.getMilliseconds());\n      }\n\n      // if no default value is set, then don't insert a value.\n      if (dateResult != null)\n         values[this.columnName] = dateResult.toISOString();\n   }\n\n   getFormat() {\n      const timeFormat = this.getTimeFormat();\n\n      this.settings = this.settings || {};\n\n      if (this.settings.dateFormat == 1) {\n         return timeFormat;\n      }\n\n      const dateFormat = super.getFormat();\n\n      return `${dateFormat} ${timeFormat}`;\n   }\n\n   format(rowData) {\n      const datetimeFormat = this.getFormat();\n      const d = this.dataValue(rowData);\n      const dateObj = this.AB.rules.toDate(d);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n\n      return webix.Date.dateToStr(datetimeFormat)(dateObj);\n   }\n\n   getTimeFormat() {\n      this.settings = this.settings || {};\n      switch (this.settings.timeFormat) {\n         case 2:\n            return \" %h:%i %A\";\n         case 3:\n            return \" %H:%i\";\n         default:\n            return \"\";\n      }\n   }\n\n   /**\n    * @method exportValue\n    * @param {Date} date\n    * @return {string}\n    */\n   exportValue(date) {\n      return date?.toISOString?.() ?? \"\";\n   }\n};\n\n// Transition Code:\n// revert to static RegEx once babel-loader is working locally.\nmodule.exports.RegEx =\n   \"^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$\";\n","/*\n * ABFieldEmail\n *\n * An ABFieldEmail defines a boolean field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldEmailDefaults = {\n   key: \"email\",\n   // unique key to reference this specific DataField\n\n   description: \"Email fields are used to store email addresses.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"envelope\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'envelope'  to\n   // reference 'fa-envelope'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Email\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: true,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   default: \"\",\n   defaultCheckbox: 0,\n};\n\nmodule.exports = class ABFieldEmailCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldEmailDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldEmailDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.default = values.settings.default || \"\";\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            values[this.columnName] = this.settings.default;\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      if (data[this.columnName]) {\n         const Reg =\n            /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n         let value = data[this.columnName];\n         value = String(value).toLowerCase();\n         if (!Reg.test(value)) {\n            validator.addError(this.columnName, \"Invalid email\");\n         }\n      }\n   }\n};\n","/*\n * ABFieldFile\n *\n * An ABFieldFile defines a File field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldFileDefaults = {\n   key: \"file\",\n   // unique key to reference this specific DataField\n\n   description: \"Attach a File to this object.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"file\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'file'  to\n   // reference 'fa-file'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"File Attachment\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   removeExistingData: 0,\n   fileSize: 0,\n   fileType: \"\",\n};\n\nmodule.exports = class ABFieldFileCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldFileDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldFileDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.fileSize = parseInt(this.settings.fileSize);\n      this.settings.limitFileSize = parseInt(this.settings.limitFileSize);\n      this.settings.limitFileType = parseInt(this.settings.limitFileType);\n      this.settings.removeExistingData = parseInt(\n         this.settings.removeExistingData\n      );\n   }\n\n   /**\n    * @method dataValue\n    * return the file data stored as part of this field.\n    *\n    * An ABFieldFile column contains a json structure that contains\n    *  .uuid : {string} a file uuid reference\n    *  .filename : {string} the name of the file that was uploaded.\n    *\n    * This will return the json object.\n    * @param {obj} values a key=>value hash of the current values.\n    * @return {obj} { uuid, filename }, or {} if empty.\n    */\n   dataValue(rowData) {\n      const propName = `${this.alias || this.object.name}.${this.columnName}`;\n\n      let result = rowData[this.columnName] || rowData[propName] || {};\n      if (typeof result == \"string\") {\n         try {\n            result = JSON.parse(result);\n         } catch (err) {\n            // ignore error\n         }\n      }\n\n      return result;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    *\n    * An ABFieldFile expects a json structure that contains\n    *  .uuid : {string} a file uuid reference\n    *  .filename : {string} the name of the file that was uploaded.\n    *\n    * For a default value, we return an empty json object: \"{}\"\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      values[this.columnName] = \"{}\";\n   }\n\n   format(rowData) {\n      let result = this.dataValue(rowData);\n      if (result) {\n         if (typeof result == \"string\") {\n            try {\n               result = JSON.parse(result);\n            } catch (err) {\n               // ignore error.\n            }\n         }\n\n         // return file name\n         return result ? result.filename || \"\" : \"\";\n      } else {\n         return \"\";\n      }\n   }\n\n   /**\n    * @method requestParam\n    * return the entry in the given input that relates to this field.\n    * @param {obj} allParameters  a key=>value hash of the inputs to parse.\n    * @return {obj} or undefined\n    */\n   requestParam(allParameters) {\n      const myParameter = super.requestParam(allParameters);\n\n      // if we have our default empty object, then remove the entry\n      // and let the DB insert a null value.\n      let val = myParameter?.[this.columnName];\n      if (val == \"{}\" || val == \"\") {\n         delete myParameter[this.columnName];\n      }\n      if (\"string\" === typeof val) {\n         try {\n            myParameter[this.columnName] = JSON.parse(val);\n         } catch (e) {\n            /* ignore */\n         }\n      }\n\n      return myParameter;\n   }\n};\n","/*\n * ABFieldFormula\n *\n * An ABFieldFormula are used to run calculations on connected (child) records\n * and store the total of that calculation in the parent.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldFormulaDefaults = {\n   key: \"formula\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Perform a calculation by a formula type based upon existing values\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"circle-o-notch\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'circle-o-notch'  to\n   // reference 'fa-circle-o-notch'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Formula\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportQuery: (field) => {\n      const fieldLink = field.fieldLink;\n      if (fieldLink == null) return false;\n\n      // Not support calculate field in query\n      return fieldLink.key !== \"calculate\";\n   },\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   field: \"\", // id of ABField : NOTE - store our connect field to support when there are multi - linked columns\n   objectLink: \"\", // id of ABObject\n   fieldLink: \"\", // id of ABField\n   type: \"sum\", // \"sum\", \"average\", \"max\", \"min\", \"count\"\n   where: \"\",\n};\n\nmodule.exports = class ABFieldFormulaCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldFormulaDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // this field is read only\n      delete values[this.columnName];\n   }\n\n   /**\n    * @method format\n    * both calculate and format the data input based of user settings\n    * for this field.\n    * @param {obj} rowData\n    *        a key=>value hash of the current values.\n    * @param {boolean} reCalculate\n    *        a boolean that signals if we should force recalculation of values\n    */\n   format(rowData, reCalculate = false, isGrouped = false) {\n      const fieldLink = this.fieldLink;\n\n      const reformat = (numData) => {\n         // ABFieldCalculate does not need to .format again\n         if (!fieldLink || fieldLink.key == \"calculate\") {\n            return numData;\n         } else {\n            const rowDataFormat = {};\n            rowDataFormat[fieldLink.columnName] = numData;\n            return fieldLink.format(rowDataFormat);\n         }\n      };\n\n      // if data exists, then will not calculate on client side\n      // unless we pass reCalculate=true to force the recalculation\n      if (rowData[this.columnName] != null && !reCalculate && !isGrouped) {\n         // reformat data\n         return reformat(rowData[this.columnName]);\n      } else if (\n         rowData[this.columnName] != null &&\n         !reCalculate &&\n         isGrouped\n      ) {\n         return rowData[this.columnName];\n      }\n\n      if (!fieldLink) return 0;\n\n      const fieldBase = this.fieldBase();\n      if (!fieldBase) return 0;\n\n      let data =\n         rowData[fieldBase.relationName()] ||\n         rowData[fieldBase.columnName] ||\n         [];\n      if (!Array.isArray(data)) data = [data];\n\n      // Filter\n      if (\n         data &&\n         data.length &&\n         this.settings &&\n         this.settings.where &&\n         this.settings.where.rules &&\n         this.settings.where.rules.length\n      ) {\n         this.filterHelper.setValue(this.settings.where);\n         data = data.filter((item) => this.filterHelper.isValid(item));\n      }\n\n      let numberList = [];\n\n      // pull number from data\n      switch (fieldLink.key) {\n         case \"calculate\":\n            data.forEach((d) => {\n               numberList.push(parseFloat(fieldLink.format(d) || 0));\n            });\n            break;\n         case \"number\":\n            numberList = data.map((d) => d[fieldLink.columnName] || 0);\n            break;\n      }\n\n      let result = 0;\n\n      // get the decimal size of the numbers being calculated\n      const decimalSize = fieldLink.getDecimalSize();\n\n      // calculate\n      switch (this.settings.type) {\n         case \"sum\":\n            if (numberList.length > 0) {\n               // get power of 10 to the number of decimal places this number\n               // is formated to require\n               const multiplier = Math.pow(10, decimalSize);\n               // multiply values by muliplyier and add them to pervious value\n               // because in javascript adding number with decimals can cause issues\n               // ex: 9.11 + 222.11 = 231.22000000000003\n               let sum = 0;\n               numberList.forEach((val) => {\n                  sum += val * multiplier || 0;\n               });\n               // divide result by multiplier to get actual value\n               result = sum / multiplier;\n            }\n            break;\n\n         case \"average\":\n            if (numberList.length > 0) {\n               // get power of 10 to the number of decimal places this number\n               // is formated to require\n               const multiplier = Math.pow(10, decimalSize);\n               // multiply values by muliplyier and add them to pervious value\n               // because in javascript adding number with decimals can cause issues\n               // ex: 9.11 + 222.11 = 231.22000000000003\n               let sum = 0;\n               numberList.forEach((val) => {\n                  sum += val * multiplier || 0;\n               });\n               // divide result by multiplier to get actual value\n               // and divide by length to get the average\n               result = sum / multiplier / numberList.length;\n            }\n            break;\n\n         case \"max\":\n            result = Math.max(...numberList) || 0;\n            break;\n         case \"min\":\n            result = Math.min(...numberList) || 0;\n            break;\n         case \"count\":\n            result = numberList.length;\n            break;\n      }\n\n      rowData[this.columnName] = result;\n\n      // ABFieldCalculate does not need to .format again\n      if (fieldLink.key == \"calculate\") {\n         return result;\n      } else {\n         return reformat(result);\n      }\n   }\n\n   fieldBase() {\n      return this.object.fieldByID(this.settings.field);\n   }\n\n   get fieldLink() {\n      const obj = this.AB.objectByID(this.settings.object);\n      if (!obj) return null;\n\n      const field = obj.fieldByID(this.settings.fieldLink);\n      if (!field) return null;\n\n      return field;\n   }\n\n   get filterHelper() {\n      if (this._rowFilter == null) {\n         this._rowFilter = this.AB.filterComplexNew(`${this.id}_filterComplex`);\n\n         if (this.fieldLink && this.fieldLink.object) {\n            this._rowFilter.fieldsLoad(this.fieldLink.object.fields());\n            this._rowFilter.setValue(this.settings.where);\n         }\n      }\n\n      return this._rowFilter;\n   }\n};\n","/*\n * ABFieldImageCore\n *\n * An ABFieldImage defines a Image field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldImageDefaults = {\n   key: \"image\",\n   // unique key to reference this specific DataField\n\n   description: \"Attach an image to this object.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"file-image-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'file-image-o'  to\n   // reference 'fa-file-image-o'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Image Attachment\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   useWidth: 0,\n   imageWidth: \"\",\n   useHeight: 0,\n   imageHeight: \"\",\n   removeExistingData: 0,\n   useDefaultImage: false,\n   defaultImageUrl: \"\",\n};\n\nmodule.exports = class ABFieldImageCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldImageDefaults);\n\n      // NOTE: our Labels are ready here:\n      // if (\n      //    ABFieldImageDefaults.menuName == \"*Image Attachment\" &&\n      //    this.AB.Label\n      // ) {\n      //    const L = this.AB.Label();\n      //    ABFieldImageDefaults.menuName = L(\"Image Attachment\");\n      //    ABFieldImageDefaults.description = L(\"Attach an image to this object.\");\n      // }\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\t'useWidth':0,\n\t\t\t\t'imageWidth':'',\n\t\t\t\t'useHeight': 0,\n\t\t\t\t'imageHeight': '',\n\t\t\t\t'removeExistingData': 0\n\t\t\t}\n    \t}\n    \t*/\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldImageDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.useWidth = parseInt(this.settings.useWidth);\n      this.settings.useHeight = parseInt(this.settings.useHeight);\n      this.settings.imageWidth = parseInt(this.settings.imageWidth);\n      this.settings.imageHeight = parseInt(this.settings.imageHeight);\n      this.settings.useDefaultImage = parseInt(this.settings.useDefaultImage);\n      this.settings.removeExistingData = parseInt(\n         this.settings.removeExistingData\n      );\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n};\n","/*\n * ABFieldJson\n *\n * An ABFieldJson defines a JSON field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldJsonDefaults = {\n   key: \"json\",\n   // unique key to reference this specific DataField\n\n   description: \"JSON value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"font\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'font'  to\n   // reference 'fa-font'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"JSON\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"json\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"json\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {};\n\nmodule.exports = class ABFieldJsonCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldJsonDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldJsonDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // in the case of a JSON data type, we should NOT insert a \"\"\n      //\n      // values[this.columnName] = \"\";\n   }\n};\n","/*\n * ABFieldListCore\n *\n * An ABFieldList defines a select list field type.\n *\n */\n\n// const ABFieldSelectivity = require(\"../../platform/dataFields/ABFieldSelectivity\");\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldListDefaults = {\n   key: \"list\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Select list allows you to select predefined options below from a dropdown.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"th-list\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'th-list'  to\n   // reference 'fa-th-list'\n\n   isFilterable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Select list\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"char\",\n      \"varchar\",\n      \"tinytext\" /* \"text\", \"mediumtext\" */,\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   hasColors: (field) => {\n      if (field.settings.hasColors) {\n         return true;\n      } else {\n         return false;\n      }\n   },\n};\n\nconst defaultValues = {\n   isMultiple: 0,\n   // {bool}\n   // can multiple values be selected?\n\n   hasColors: 0,\n   // {bool}\n   // are we to display our values in colors?\n\n   options: [],\n   // {array}\n   // The options defined for this list:\n   // [ { id, text, hex, translations },...]\n   //    .id {string} a unique id for this value\n   //    .text {string} the displayed text of this value\n   //    .hex {string} a color hex definition for this value\n   //    .translations {obj} the multilingual definitions for this value.\n\n   default: \"none\",\n   multipleDefault: [],\n};\n\nmodule.exports = class ABFieldListCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldListDefaults);\n\n      this.pendingDeletions = [];\n      // {array}\n      // a list of pending option deletions that need to be processed\n      // when this is saved.\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldListDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // translate options list\n      if (this.settings.options && this.settings.options.length > 0) {\n         this.settings.options.forEach((opt) => {\n            this.translate(opt, opt, [\"text\"]);\n         });\n      }\n\n      this.settings.isMultiple = parseInt(this.settings.isMultiple);\n      this.settings.hasColors = parseInt(this.settings.hasColors);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      // Un-translate options list\n      obj.settings.options.forEach((opt) => {\n         this.unTranslate(opt, opt, [\"text\"]);\n      });\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Multiple select list\n      if (this.settings.isMultiple == true) {\n         let defaultVals = [];\n         this.settings.multipleDefault.forEach((def) => {\n            this.settings.options.forEach((opt) => {\n               if (opt.id == def.text) {\n                  defaultVals.push(opt);\n               }\n            });\n         });\n         values[this.columnName] = defaultVals || [];\n      }\n      // Single select list\n      else if (this.settings.default && this.settings.default != \"\") {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n\n   /**\n    * @method options\n    * Return an array of [{ id, text }] options defined by this field.\n    * @return {array}\n    */\n   options() {\n      return this.settings.options.map((opt) => {\n         return {\n            id: opt.id,\n            text: opt.text,\n            hex: opt.hex ? opt.hex : \"\",\n            translations: opt.translations ? opt.translations : \"\",\n         };\n      });\n   }\n\n   format(rowData, options = {}) {\n      let val = this.dataValue(rowData) || [];\n\n      if (typeof val == \"string\") {\n         try {\n            val = JSON.parse(val);\n         } catch (e) {\n            // continue regardless of error\n         }\n      }\n\n      // Convert to array\n      if (!Array.isArray(val)) val = [val];\n\n      const displayOpts = this.settings.options\n         .filter((opt) => val.filter((v) => (v.id || v) == opt.id).length > 0)\n         .map((opt) => {\n            let text = opt.text;\n            const languageCode = options.languageCode || \"en\";\n\n            // Pull text of option with specify language code\n            const optTran = (opt.translations || []).filter(\n               (o) => o.language_code == languageCode\n            )[0];\n            if (optTran) text = optTran.text;\n\n            return text;\n         });\n\n      return displayOpts.join(\", \");\n   }\n};\n","/*\n * ABFieldLongText\n *\n * An ABFieldLongText defines a LongText field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst MAX_CHAR_LENGTH = 5000;\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldLongTextDefaults = {\n   key: \"LongText\", // unique key to reference this specific DataField\n\n   description: \"Multiple lines of text\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"align-right\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'align-right'  to\n   // reference 'fa-align-right'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Long text\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"longtext\", \"mediumtext\", \"text\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   MAX_CHAR_LENGTH,\n   // {integer}\n   // The maximum length our ABFieldLongText can be.\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   default: \"\",\n   supportMultilingual: 0,\n};\n\nmodule.exports = class ABFieldLongText extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldLongTextDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n    \t}\n    \t*/\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldLongTextDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.default = values.settings.default || \"\";\n\n      // we're responsible for setting up our specific settings:\n      this.settings.supportMultilingual =\n         values.settings.supportMultilingual + \"\" ||\n         defaultValues.supportMultilingual;\n\n      // text to Int:\n      this.settings.supportMultilingual = parseInt(\n         this.settings.supportMultilingual\n      );\n\n      if (this.settings.supportMultilingual) {\n         if (this.object)\n            this.object.translate(this.settings, this.settings, [\"default\"]);\n      } else this.settings.default = values.settings.default || \"\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.settings.supportMultilingual)\n         if (this.object)\n            this.object.unTranslate(obj.settings, obj.settings, [\"default\"]);\n         else obj.settings.default = this.settings.default;\n\n      return obj;\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] == null) {\n         if (typeof this.settings.default == \"string\") {\n            values[this.columnName] = this.settings.default;\n         } else {\n            values[this.columnName] = \"\";\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (\n         data &&\n         data[this.columnName] &&\n         data[this.columnName].length > MAX_CHAR_LENGTH\n      ) {\n         validator.addError(\n            this.columnName,\n            `should NOT be longer than ${MAX_CHAR_LENGTH} characters`\n         );\n      }\n   }\n};\n","/*\n * ABFieldNumber\n *\n * An ABFieldNumber defines a Number field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldNumberDefaults = {\n   key: \"number\",\n   // unique key to reference this specific DataField\n\n   description: \"A Float or Integer Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"hashtag\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'hashtag'  to\n   // reference 'fa-hashtag'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Number\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: true,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   // 'allowRequired': 0,\n   default: \"\",\n   typeFormat: \"none\",\n   typeDecimals: \"none\",\n   typeDecimalPlaces: 0,\n   typeRounding: \"none\",\n   typeThousands: \"none\",\n   validation: 0,\n   validateMinimum: \"\",\n   validateMaximum: \"\",\n};\n\nlet L = null; //AB.Label();\n\nmodule.exports = class ABFieldNumberCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldNumberDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\t'allowRequired':0,\n\t\t\t\t'default':null,\n\t\t\t\t'typeFormat': 'none',\n\t\t\t\t'typeDecimals': 'none',\n\t\t\t\t'typeDecimalPlaces': 'none',\n\t\t\t\t'typeRounding' : 'none',\n\t\t\t\t'typeThousands': 'none',\n\t\t\t\t'validation':0,\n\t\t\t\t'validateMinimum':null,\n\t\t\t\t'validateMaximum':null\n\t\t\t}\n    \t}\n    \t*/\n      if (!L) {\n         L = this.AB.Label();\n      }\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldNumberDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static formatList(iL) {\n      if (iL && !L) L = iL;\n      return [\n         { id: \"none\", value: L(\"None\") },\n         {\n            id: \"dollar\",\n            value: L(\"$\"),\n            sign: \"$\",\n            position: \"prefix\",\n         },\n         {\n            id: \"yen\",\n            value: L(\"¥\"),\n            sign: \"¥\",\n            position: \"prefix\",\n         },\n         {\n            id: \"pound\",\n            value: L(\"£\"),\n            sign: \"£\",\n            position: \"prefix\",\n         },\n         {\n            id: \"euroBefore\",\n            value: L(\"€ (before)\"),\n            sign: \"€\",\n            position: \"prefix\",\n         },\n         {\n            id: \"euroAfter\",\n            value: L(\"€ (after)\"),\n            sign: \"€\",\n            position: \"postfix\",\n         },\n         {\n            id: \"percent\",\n            value: L(\"%\"),\n            sign: \"%\",\n            position: \"postfix\",\n         },\n      ];\n   }\n\n   static delimiterList() {\n      return [\n         { id: \"none\", value: L(\"None\") },\n         {\n            id: \"comma\",\n            value: L(\"Comma\"),\n            sign: \",\",\n         },\n         {\n            id: \"period\",\n            value: L(\"Period\"),\n            sign: \".\",\n         },\n         {\n            id: \"space\",\n            value: L(\"Space\"),\n            sign: \" \",\n         },\n      ];\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      // this.settings.allowRequired = parseInt(this.settings.allowRequired);\n      this.settings.validation = parseInt(this.settings.validation);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (this.settings.default != \"\") {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      // const L = this.AB.Label();\n\n      if (data[this.columnName] != null && data[this.columnName] != \"\") {\n         let value = data[this.columnName];\n\n         // if this is an integer:\n         if (this.settings.typeDecimals == \"none\") {\n            value = parseInt(value);\n         } else {\n            const places = parseInt(this.settings.typeDecimalPlaces) || 2;\n            value = parseFloat(parseFloat(value).toFixed(places));\n         }\n\n         const isNumeric = (n) => {\n            return !Number.isNaN(parseFloat(n)) && Number.isFinite(n);\n         };\n         if (!isNumeric(value)) {\n            validator.addError(this.columnName, L(\"invalid number\"));\n         }\n\n         // validate Minimum\n         if (\n            this.settings.validation == true &&\n            this.settings.validateMinimum != null &&\n            this.settings.validateMinimum > value\n         ) {\n            const errMessage = L(\"should be greater than {0}\", [\n               this.settings.validateMinimum,\n            ]);\n\n            validator.addError(this.columnName, errMessage);\n         }\n\n         // validate Maximum\n         if (\n            this.settings.validation == true &&\n            this.settings.validateMaximum != null &&\n            this.settings.validateMaximum < value\n         ) {\n            const errMessage = L(\"should be less than {0}\", [\n               this.settings.validateMaximum,\n            ]);\n\n            validator.addError(this.columnName, errMessage);\n         }\n      }\n   }\n\n   format(rowData) {\n      if (\n         rowData?.[this.columnName] == null ||\n         (rowData[this.columnName] != 0 && rowData[this.columnName] == \"\")\n      )\n         return \"\";\n\n      let data = rowData[this.columnName] || 0;\n\n      if (typeof data == \"string\") {\n         data = data.replace(/,/g, \"\");\n      }\n\n      // Validate number\n      if (isNaN(parseFloat(data))) data = 0;\n\n      const formatSign = this.constructor\n         .formatList()\n         .filter((item) => item.id == this.settings.typeFormat)[0];\n      const decimalPlaces =\n         this.settings.typeDecimalPlaces != \"none\"\n            ? parseInt(this.settings.typeDecimalPlaces)\n            : 0;\n\n      let thousandsSign = this.constructor\n         .delimiterList()\n         .filter((item) => item.id == this.settings.typeThousands)[0];\n      let decimalSign = this.constructor\n         .delimiterList()\n         .filter((item) => item.id == this.settings.typeDecimals)[0];\n      let prefix = \"\";\n      let postfix = \"\";\n\n      if (formatSign && formatSign.sign) {\n         switch (formatSign.position) {\n            case \"prefix\":\n               prefix = formatSign.sign;\n               break;\n            case \"postfix\":\n               postfix = formatSign.sign;\n               break;\n         }\n      }\n\n      decimalSign = decimalSign.sign || \"\";\n      thousandsSign = thousandsSign.sign || \"\";\n\n      // round number\n      if (this.settings.typeRounding == \"roundDown\") {\n         const digit = Math.pow(10, decimalPlaces);\n         data = Math.floor(data * digit) / digit;\n      }\n\n      const number = this.formatNumber(data, {\n         groupDelimiter: thousandsSign,\n         groupSize: 3,\n         decimalDelimiter: decimalSign,\n         decimalSize: decimalPlaces,\n      });\n\n      return `${prefix} ${number} ${postfix}`;\n   }\n\n   formatNumber(data, options = {}) {\n      if (data === \"\" || data == null) return data;\n\n      data = parseFloat(data);\n      const negativeSign = data < 0 ? \"-\" : \"\";\n      data = Math.abs(data);\n\n      const dataStr = data.toString();\n      const integerStr = dataStr.split(\".\")[0];\n      const decimalStr = dataStr.split(\".\")[1];\n\n      let integerValue = \"\";\n\n      // Thousands digit sign\n      if (options.groupDelimiter) {\n         const step = 3;\n         let i = integerStr.length;\n\n         do {\n            i -= step;\n            const chunk =\n               i > 0\n                  ? integerStr.substr(i, step)\n                  : integerStr.substr(0, step + i);\n            integerValue = `${chunk}${\n               integerValue ? options.groupDelimiter + integerValue : \"\"\n            }`;\n         } while (i > 0);\n      } else {\n         integerValue = integerStr;\n      }\n\n      // Integer\n      let result = `${negativeSign}${integerValue}`;\n\n      // Decimal\n      if (decimalStr && options.decimalDelimiter && options.decimalSize) {\n         const decimalVal = data.toFixed(options.decimalSize).split(\".\")[1];\n         result += `${options.decimalDelimiter}${decimalVal}`;\n      }\n\n      return result;\n   }\n\n   getDecimalSize() {\n      if (this.settings.typeDecimalPlaces != \"none\") {\n         return parseInt(this.settings.typeDecimalPlaces);\n      } else {\n         return 0;\n      }\n   }\n};\n","/*\n * ABFieldString\n *\n * An ABFieldString defines a string field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst MAX_CHAR_LENGTH = 255;\n\nconst ABFieldStringDefaults = {\n   key: \"string\",\n   // unique key to reference this specific DataField\n\n   description: \"short string value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"font\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'font'  to\n   // reference 'fa-font'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Single line text\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   MAX_CHAR_LENGTH,\n   // {integer}\n   // The maximum length our ABFieldString can be.\n};\n\nconst defaultValues = {\n   default: \"\",\n   supportMultilingual: 0,\n};\n\nmodule.exports = class ABFieldStringCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldStringDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n    \t}\n        */\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldStringDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // we're responsible for setting up our specific settings:\n      this.settings.default = values.settings.default || defaultValues.default;\n      this.settings.supportMultilingual =\n         values.settings.supportMultilingual + \"\" ||\n         defaultValues.supportMultilingual;\n\n      // text to Int:\n      this.settings.supportMultilingual = parseInt(\n         this.settings.supportMultilingual\n      );\n\n      if (this.settings.supportMultilingual) {\n         this.translate(this.settings, this.settings, [\"default\"]);\n      } else this.settings.default = values.settings.default || \"\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.settings.supportMultilingual) {\n         this.unTranslate(obj.settings, obj.settings, [\"default\"]);\n      } else obj.settings.default = this.settings.default;\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            if (this.settings.default.indexOf(\"{uuid}\") >= 0) {\n               values[this.columnName] = this.AB.uuid();\n            } else {\n               values[this.columnName] = this.settings.default;\n            }\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (data?.[this.columnName]?.length > MAX_CHAR_LENGTH) {\n         const L = this.AB.Label();\n         validator.addError(\n            this.columnName,\n            L(\"should NOT be longer than {0} characters\", [MAX_CHAR_LENGTH])\n         );\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n};\n","/*\n * ABFieldTextFormula\n *\n * An ABFieldTextFormula defines a TextFormula field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldTextFormulaDefaults = {\n   key: \"TextFormula\",\n   // unique key to reference this specific DataField\n\n   description: \"Text Formula\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"question\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'question'  to\n   // reference 'fa-question'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Text Formula\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   textFormula: \"\",\n   // {string} \"some text or text with formula ...\"\n   // This tells us what the formula we need to do with text included text string.\n   // if we don't have this, the old value which we filled out won't be cleared when we do \"Add field\" this type again.\n\n   // 'imageWidth':'',\n   // 'useHeight': 0,\n   // 'imageHeight': ''\n};\n\n/** Private methods */\n\n/**\n * @method setValueToFormula\n *\n * @param {ABOBject} object\n * @param {string} formulaString\n * @param {object} rowData\n */\n\nfunction setValueToFormula(object, formulaString, rowData) {\n   if (!formulaString) return;\n\n   const fieldRegExp = /{[^{}]+}/gm;\n   const matches_field_array = formulaString.match(fieldRegExp);\n   matches_field_array.forEach((element) => {\n      const columnName = element.replace(/{|}|\"/g, \"\");\n      object.fields().forEach((field) => {\n         if (field.columnName == columnName) {\n            if (field.key == \"AutoIndex\") {\n               //Check AutoIndex Field\n               const autoIndexVal = field.format(rowData) || 0;\n               formulaString = formulaString.replace(element, autoIndexVal);\n            } else if (field.key == \"calculate\") {\n               //Calculate Field\n               const calVal = `(${field.format(rowData) || 0})`;\n               formulaString = formulaString.replace(element, eval(calVal));\n            } else if (field.key == \"date\") {\n               formulaString = formulaString.replace(\n                  element,\n                  rowData[columnName]\n                     ? field.exportValue(rowData[columnName])\n                     : \"\"\n               );\n            } else {\n               formulaString = formulaString.replace(\n                  element,\n                  rowData[columnName] ? field.format(rowData) : \"\"\n               );\n            }\n         }\n      });\n   });\n\n   return formulaString;\n}\n\n/**\n * @method setBuildinValueToFormula\n *\n * @param {ABFactory} AB\n * @param {string} formulaString\n */\n\nfunction setBuildinValueToFormula(AB, formulaString) {\n   const buildInRegExp = /\\w+\\(.*?\\)/gm;\n   const matches_buildin_array = formulaString.match(buildInRegExp);\n   if (matches_buildin_array) {\n      const buildinList = getBuildInFunction();\n      matches_buildin_array.forEach((element) => {\n         const formula_array = element.split(/\\(|\\)/);\n         const isBracketInBracket =\n            formula_array.length > 2 && formula_array[2] != \"\";\n         const functionName = formula_array[0];\n         const parameters_array = formula_array[1].split(\",\");\n         let isMatch = false;\n         for (let i = 0; i < buildinList.length; i++) {\n            let resultParameters = element;\n            if (functionName == buildinList[i].id) {\n               if (parameters_array.length == buildinList[i].parameter_size) {\n                  switch (functionName) {\n                     case \"left\":\n                        resultParameters = getLeft(\n                           parameters_array[0],\n                           parameters_array[1]\n                        );\n                        break;\n                     case \"right\":\n                        resultParameters = getRight(\n                           parameters_array[0],\n                           parameters_array[1]\n                        );\n                        break;\n                     case \"mid\":\n                        resultParameters = getMid(\n                           parameters_array[0],\n                           parameters_array[1],\n                           parameters_array[2]\n                        );\n                        break;\n                     case \"trim\":\n                        resultParameters = getTrim(parameters_array[0]);\n                        break;\n                     case \"trimLeft\":\n                        resultParameters = getTrimLeft(parameters_array[0]);\n                        break;\n                     case \"trimRight\":\n                        resultParameters = getTrimRight(parameters_array[0]);\n                        break;\n                     case \"length\":\n                        resultParameters = getLength(parameters_array[0]);\n                        break;\n                     case \"regexReplace\":\n                        resultParameters = getRegExpReplace(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft(),\n                           parameters_array[2].trimLeft()\n                        );\n                        break;\n                     case \"extractRegex\":\n                        resultParameters = getExtractRegex(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft()\n                        );\n                        break;\n                     case \"replace\":\n                        resultParameters = getReplace(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft(),\n                           parameters_array[2].trimLeft()\n                        );\n                        break;\n                     case \"lower\":\n                        resultParameters = getLower(parameters_array[0]);\n                        break;\n                     case \"upper\":\n                        resultParameters = getUpper(parameters_array[0]);\n                        break;\n                     case \"capitalize\":\n                        resultParameters = getCapitalize(parameters_array[0]);\n                        break;\n                     case \"random\":\n                        resultParameters = getRandom(parameters_array[0]);\n                        break;\n                     case \"numberToWords\":\n                        resultParameters = getNumberToWords(\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"getDateDayOfWeekName\":\n                        if (isBracketInBracket) {\n                           element = element + \")\";\n                        }\n                        resultParameters = getDateDayOfWeekName(\n                           AB,\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"getDateMonthOfYearName\":\n                        if (isBracketInBracket) {\n                           element = element + \")\";\n                        }\n                        resultParameters = getDateMonthOfYearName(\n                           AB,\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"formatDate\":\n                        resultParameters = getFormatDate(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft()\n                        );\n                        break;\n                     default:\n                        break;\n                  }\n                  isMatch = true;\n                  formulaString = formulaString.replace(\n                     element,\n                     resultParameters\n                  );\n                  return;\n               } else {\n                  resultParameters = functionName + \"(Bad Parameter)\";\n                  formulaString = formulaString.replace(\n                     element,\n                     resultParameters\n                  );\n               }\n            }\n         }\n      });\n   }\n   return formulaString;\n}\n\nfunction getBuildInFunction() {\n   const functionList = [\n      {\n         id: \"left\",\n         value: \"left({COLUMN_NAME}, 1)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"right\",\n         value: \"right({COLUMN_NAME}, 1)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"mid\",\n         value: \"mid({COLUMN_NAME}, 1, 1)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"trim\",\n         value: \"trim({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"trimLeft\",\n         value: \"trimLeft({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"trimRight\",\n         value: \"trimRight({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"length\",\n         value: \"length({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"regexReplace\",\n         value: \"regexReplace({COLUMN_NAME}, [*], REPLACE_VALUE)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"extractRegex\",\n         value: \"extractRegex({COLUMN_NAME}, [*])\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"replace\",\n         value: \"replace({COLUMN_NAME}, SEARCH_VALUE, REPLACE_VALUE)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"lower\",\n         value: \"lower({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"upper\",\n         value: \"upper({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"capitalize\",\n         value: \"capitalize({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      { id: \"random\", value: \"random(1)\", type: \"build-in\", parameter_size: 1 },\n      {\n         id: \"numberToWords\",\n         value: \"numberToWords({NUMBER_COLUMN} or 012...)\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"getDateDayOfWeekName\",\n         value: \"getDateDayOfWeekName({DATE_COLUMN})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"getDateMonthOfYearName\",\n         value: \"getDateMonthOfYearName({DATE_COLUMN})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"formatDate\",\n         value: \"formatDate({DATE_COLUMN}, OUTPUT_FORMAT)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n   ];\n   return functionList;\n}\n\nfunction getLeft(string, endPosition) {\n   return string.substring(0, parseInt(endPosition));\n}\n\nfunction getRight(string, endposition) {\n   const reverseStr = reverseString(string).substring(0, parseInt(endposition));\n   return reverseString(reverseStr);\n}\n\nfunction reverseString(string) {\n   return string.split(\" \").reverse().join(\" \");\n}\n\nfunction getMid(string, startPosition, length) {\n   if (string.length < startPosition) return \"mid(Bad Parameter)\";\n   return string.substring(\n      parseInt(startPosition),\n      parseInt(startPosition) + parseInt(length)\n   );\n}\n\nfunction getTrim(string) {\n   return string.trim();\n}\n\nfunction getTrimLeft(string) {\n   return string.trimLeft();\n}\n\nfunction getTrimRight(string) {\n   return string.trimRight();\n}\n\nfunction getLength(string) {\n   return string.length;\n}\n\nfunction getRegExpReplace(string, regexp, replaceString) {\n   return string.replace(regexp, replaceString);\n}\n\nfunction getExtractRegex(string, regexp) {\n   const extractResult = string.match(regexp);\n   if (Array.isArray(extractResult)) {\n      return extractResult[0];\n   }\n   return extractResult;\n}\n\nfunction getReplace(string, searchValue, replaceValue) {\n   return string.replace(searchValue, replaceValue);\n}\n\nfunction getLower(string) {\n   return string.toLowerCase();\n}\n\nfunction getUpper(string) {\n   return string.toUpperCase();\n}\n\nfunction getCapitalize(string) {\n   return string\n      .toLowerCase()\n      .split(\" \")\n      .map((s) => s.charAt(0).toUpperCase() + s.substring(1))\n      .join(\" \");\n}\n\nfunction getRandom(max) {\n   return Math.floor(Math.random() * (max + 1));\n}\n\nfunction getNumberToWords(number) {\n   const string = number.trim(\",\").toString();\n\n   let units,\n      tens,\n      scales,\n      start,\n      end,\n      chunks,\n      chunksLen,\n      chunk,\n      ints,\n      i,\n      word,\n      words;\n\n   const and = \"\";\n\n   /* Is number zero? */\n   if (parseInt(string) === 0) {\n      return \"zero\";\n   }\n\n   /* Array of units as words */\n   units = [\n      \"\",\n      \"one\",\n      \"two\",\n      \"three\",\n      \"four\",\n      \"five\",\n      \"six\",\n      \"seven\",\n      \"eight\",\n      \"nine\",\n      \"ten\",\n      \"eleven\",\n      \"twelve\",\n      \"thirteen\",\n      \"fourteen\",\n      \"fifteen\",\n      \"sixteen\",\n      \"seventeen\",\n      \"eighteen\",\n      \"nineteen\",\n   ];\n\n   /* Array of tens as words */\n   tens = [\n      \"\",\n      \"\",\n      \"twenty\",\n      \"thirty\",\n      \"forty\",\n      \"fifty\",\n      \"sixty\",\n      \"seventy\",\n      \"eighty\",\n      \"ninety\",\n   ];\n\n   /* Array of scales as words */\n   scales = [\n      \"\",\n      \"thousand\",\n      \"million\",\n      \"billion\",\n      \"trillion\",\n      \"quadrillion\",\n      \"quintillion\",\n      \"sextillion\",\n      \"septillion\",\n      \"octillion\",\n      \"nonillion\",\n      \"decillion\",\n      \"undecillion\",\n      \"duodecillion\",\n      \"tredecillion\",\n      \"quatttuor-decillion\",\n      \"quindecillion\",\n      \"sexdecillion\",\n      \"septen-decillion\",\n      \"octodecillion\",\n      \"novemdecillion\",\n      \"vigintillion\",\n      \"centillion\",\n   ];\n\n   /* Split user arguemnt into 3 digit chunks from right to left */\n   start = string.length;\n   chunks = [];\n   while (start > 0) {\n      end = start;\n      chunks.push(string.slice((start = Math.max(0, start - 3)), end));\n   }\n\n   /* Check if function has enough scale words to be able to stringify the user argument */\n   chunksLen = chunks.length;\n   if (chunksLen > scales.length) {\n      return \"\";\n   }\n\n   /* Stringify each integer in each chunk */\n   words = [];\n   for (i = 0; i < chunksLen; i++) {\n      chunk = parseInt(chunks[i]);\n\n      if (chunk) {\n         /* Split chunk into array of individual integers */\n         ints = chunks[i].split(\"\").reverse().map(parseFloat);\n\n         /* If tens integer is 1, i.e. 10, then add 10 to units integer */\n         if (ints[1] === 1) {\n            ints[0] += 10;\n         }\n\n         /* Add scale word if chunk is not zero and array item exists */\n         if ((word = scales[i])) {\n            words.push(word);\n         }\n\n         /* Add unit word if array item exists */\n         if ((word = units[ints[0]])) {\n            words.push(word);\n         }\n\n         /* Add tens word if array item exists */\n         if ((word = tens[ints[1]])) {\n            words.push(word);\n         }\n\n         /* Add 'and' string after units or tens integer if: */\n         if (ints[0] || ints[1]) {\n            /* Chunk has a hundreds integer or chunk is the first of multiple chunks */\n            if (ints[2] || (!i && chunksLen)) {\n               words.push(and);\n            }\n         }\n\n         /* Add hundreds word if array item exists */\n         if ((word = units[ints[2]])) {\n            words.push(word + \" hundred\");\n         }\n      }\n   }\n\n   return words.reverse().join(\" \");\n}\n\nfunction getDateDayOfWeekName(AB, date) {\n   // const localizeDT = moment(date);\n   // localizeDT.locale(AD.lang.currentLanguage);\n   // return localizeDT.format(\"dddd\");\n\n   return AB.rules.toDateFormat(date, {\n      format: \"dddd\",\n      localeCode: AB.Account.language(),\n   });\n}\n\nfunction getDateMonthOfYearName(AB, date) {\n   // const localizeDT = moment(date);\n   // localizeDT.locale(AD.lang.currentLanguage);\n   // return localizeDT.format(\"MMMM\");\n\n   return AB.rules.toDateFormat(date, {\n      format: \"MMMM\",\n      localeCode: AB.Account.language(),\n   });\n}\n\nfunction getFormatDate(date, format) {\n   const dt = new Date(date);\n   return dt.toString(format);\n}\n\nmodule.exports = class ABFieldTextFormulaCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldTextFormulaDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\ttextDefault: 'string',\n\t\t\t\tsupportMultilingual: true/false\n\t\t\t}\n    \t}\n    \t*/\n\n      // // text to Int:\n      // this.settings.supportMultilingual = parseInt(this.settings.supportMultilingual);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldTextFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static getBuildInFunction() {\n      return getBuildInFunction();\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default value\n         // values[this.columnName] = this.settings.DEFAULT_VALUE;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      validator = super.isValid();\n\n      // validator.addError(this.columnName, L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      // return this.settings.supportMultilingual == 1;\n      return false;\n   }\n\n   format(rowData) {\n      try {\n         if (!this.settings.textFormula) return \"\";\n\n         let resultFormula = this.settings.textFormula;\n\n         //Set Field value first\n         resultFormula = setValueToFormula(this.object, resultFormula, rowData);\n\n         //then Check Build-in Function\n         resultFormula = setBuildinValueToFormula(this.AB, resultFormula);\n\n         return resultFormula;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n\n//// NOTE: if you need a unique [edit_type] by your returned config.editor above:\n// webix.editors = {\n//   \"[edit_type]\": {\n//     focus: function () {...}\n//     getValue: function () {...},\n//     setValue: function (value) {...},\n//     render: function () {...}\n//   }\n// };\n\n//// NOTE: if you need a unique [sort_type] by your returned config.sort above:\n// webix.DataStore.prototype.sorting.as.[sort_type] = function(a,b){\n//     return a > b ? 1 : -1;\n// }\n","/*\n * ABFieldTreeCore\n *\n * An ABFieldTree defines a select list field type.\n *\n */\n\nconst ABFieldSelectivity = require(\"../../platform/dataFields/ABFieldSelectivity\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldTreeDefaults = {\n   key: \"tree\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Data tree allows you to build a hierarchical set of selectable data. (ex: Categories and sub-categories)\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"sitemap\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'sitemap'  to\n   // reference 'fa-sitemap'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Data Tree\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   options: [],\n};\n\nmodule.exports = class ABFieldTreeCore extends ABFieldSelectivity {\n   constructor(values, object) {\n      super(values, object, ABFieldTreeDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldTreeDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // translate options list\n      if (this.settings.options && this.settings.options.length > 0) {\n         this.settings.options.forEach((opt) => {\n            this.translate(opt, opt, [\"text\"]);\n         });\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      // Un-translate options list\n      if (obj.settings.options && obj.settings.options.length > 0) {\n         obj.settings.options.forEach((opt) => {\n            this.unTranslate(opt, opt, [\"text\"]);\n         });\n      }\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {}\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n};\n","/*\n * ABFieldUser\n *\n * An ABFieldUser defines a user field type.\n *\n */\n\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldUserDefaults = {\n   key: \"user\",\n   // unique key to reference this specific DataField\n\n   description: \"Add users to a record.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"user-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'user-o'  to\n   // reference 'fa-user-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"User\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   USERNAME_FIELD_ID: \"5760560b-c078-47ca-98bf-e18ac492a561\",\n   // {string} .uuid\n   // the ABField.id of the SiteUser.username field.  This is what other\n   // objects will link to in their ABFieldUser connections.\n};\n\nconst defaultValues = {\n   editable: 1,\n   isMultiple: 0,\n   isCurrentUser: 0,\n   isShowProfileImage: 0,\n   isShowUsername: 1,\n};\n\nmodule.exports = class ABFieldUserCore extends ABFieldConnect {\n   constructor(values, object) {\n      super(values, object, ABFieldUserDefaults);\n\n      this.isUser = true;\n      // {bool}\n      // is this an ABFieldUser type of field.\n      // this is a simplified helper to identify if an ABField is a type\n      // of User field.  Since this is the only place it is defined,\n      // all other field types will be falsy\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldUserDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.editable = parseInt(this.settings.editable);\n      this.settings.isMultiple = parseInt(this.settings.isMultiple);\n      this.settings.isCurrentUser = parseInt(this.settings.isCurrentUser);\n      this.settings.isShowProfileImage = parseInt(\n         this.settings.isShowProfileImage\n      );\n      this.settings.isShowUsername = parseInt(this.settings.isShowUsername);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   format(rowData) {\n      let val = this.dataValue(rowData) || [];\n\n      if (val && !Array.isArray(val)) val = [val];\n      if (!val) val = [];\n\n      return val.map((v) => v.username || v).join(\", \");\n   }\n};\n","/*\n * ABMobilePageCore\n *\n * An view that represents a \"Page\" on the Mobile Device.\n *\n * Pages are\n *\t- allowed to be displayed in the interface list\n *\t- return a full list of components that can be added to the view editor\n *\n *\n */\n\nconst ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n// var ABViewManager = require(\"../ABViewManager\");\n\n// function L(key, altText) {\n//     return AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABMobilePageDefaults = {\n   key: \"mobile-page\", // unique key identifier for this ABView\n   icon: \"file\", // icon reference: (without 'fa-'  )\n};\n\nconst ABPropertyComponentDefaults = {\n   type: \"page\",\n   // {string}\n   // What type of \"Page\" this is: ['page', 'popup', 'reportPage']\n\n   defaultPage: 0,\n   // {bool} 1|0\n   // is this the default page for the Mobile App? If so, this is the initial\n   // Page that is displayed when the App is loaded.\n   // NOTE: there can be only 1 page defined in the app as .defaultPage\n\n   hideTitle: 0,\n   // {bool} 1|0\n   // By default we will display this.label as our Title. Set this to 1 to not\n   // show the tile on the page.\n\n   hideTabs: 0,\n   // {bool} 1|0\n   // By default, pages will show any Tab options on their display.  Set this\n   // to 1 to not show the tab options for this Page. (good for pages that\n   // are linkedPages with forms )\n};\n\nmodule.exports = class ABMobilePageCore extends ABMobileView {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABMobilePageDefaults);\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'viewKey',\t\t\t\t// unique key for this View Type\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this View Type\n\n      //\t\tname: '',\t\t\t\t\t// unique page name\n\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      //\t\t},\n\n      //\t\ttranslations:[]\n      // \t}\n\n      this.parent = null; // will be set by the pageNew() that creates this obj.\n      // {obj} .parent\n      // this points to the ABView object that manages this object as a child.\n      // this param is shared across ABViews as well as ABMobilePage, but has\n      // different implications ... so we default an ABMobilePage.parent = null\n      // and the place that Creates the Page must assign the .parent externally.\n   }\n\n   static common() {\n      return ABMobilePageDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABMobilePage instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.name = this.name;\n      obj.route = this.route;\n\n      obj.myAppID = this.myAppID;\n\n      obj.menuType = this.menuType;\n\n      obj.defaultPage = this.defaultPage;\n\n      // icon of popup page\n      if (this.settings.type == \"popup\") obj.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") obj.label = obj.name;\n\n      // compile our pages\n      obj.pageIDs = (this._pages || []).map((p) => p.id);\n\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      const DV = ABPropertyComponentDefaults;\n\n      this.route =\n         values.route || (this.name || this.label).replaceAll(\" \", \"_\");\n\n      // icon of popup page\n      if (values.settings.type == \"popup\") this.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") this.label = this.name;\n\n      // track which application this Page belongs to:\n      this.myAppID = values.myAppID;\n      if (!this.myAppID && this.application) {\n         this.myAppID = this.application.id;\n      }\n\n      this.menuType = values.menuType || \"menu\";\n      // {string}  [\"menu\", \"tab\"]\n      // indicates if this Page was added as a Mobile App's \"menu\" or \"Tab\"\n\n      this.defaultPage = values.defaultPage || 0;\n      // {bool}  1|0\n      // indicates if this is the default page that is loaded when the mobile app\n      // is started.\n      // NOTE: only 1 Page in a Mobile App can have this setting = 1.\n\n      this.settings.hideTitle = parseInt(\n         values.settings.hideTitle ?? DV.hideTitle\n      );\n      // {bool} 1|0\n      // By default an ABMobilePage will display it's this.label for a title\n      // on the page.  Setting this to TRUE (1) will hide the title.\n\n      this.settings.hideTabs = parseInt(\n         values.settings.hideTabs ?? DV.hideTabs\n      );\n      // {bool} 1|0\n      // By default, pages will show any Tab options on their display.  Set this\n      // to 1 to not show the tab options for this Page. (good for pages that\n      // are linkedPages with forms )\n\n      // now properly handle our sub pages.\n      var pages = [];\n      (values.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            pages.push(this.pageNew(def));\n         } else {\n            this.emit(\n               \"warning\",\n               `App[${this.application.name}][${this.application.id}]->Page[${this.name}][${this.id}] referenced an unknown Page[${id}]`,\n               {\n                  appID: this.application.id,\n                  pageID: this.id,\n                  missingPageID: id,\n               }\n            );\n         }\n      });\n      this._pages = pages;\n\n      // the default columns of ABView is 1\n      // this.settings.columns = this.settings.columns || 1;\n      // this.settings.gravity = this.settings.gravity || [1];\n\n      // convert from \"0\" => 0\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABMobilePage\n            // be sure to remove any of it's ABMobilePage as well\n            // This cleans out any dangling ABDefinitions\n\n            var allPageDeletes = [];\n            var allPages = this.pages();\n            this._pages = [];\n            // doing ._pages = [] prevents any of my updates when\n            // a sub-page is .destroy()ed\n\n            allPages.forEach((p) => {\n               allPageDeletes.push(p.destroy());\n            });\n            return Promise.all(allPageDeletes);\n         })\n         .then(() => {\n            var parent = this.parent || this.application;\n\n            return parent.pageRemove(this);\n         })\n         .then(() => {\n            return super.destroy();\n         });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABMobilePage\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // now we can persist ourself in our parent\n            var parent = this.parent || this.application;\n\n            return parent.pageInsert(this);\n         })\n         .then(() => {\n            // make sure .defaultPage is properly set\n            if (this.defaultPage) {\n               return this.application.setPageDefault(this);\n            }\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   /**\n    * @method refreshInstance()\n    * This returns a NEW instance of a ABMobilePage based upon the latest\n    * version of it's Definition.  It also resolves any current listeners\n    * this copy currently has and prepare this to discard itself.\n    */\n   refreshInstance() {\n      console.warn(\n         \"This version of ABMobilePage hasn't updated it's refreshInstance()\",\n         this\n      );\n      return this;\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    *\n    * return an array of all the ABMobilePages for this ABMobilePage.\n    *\n    * @param {fn} filter\t\ta filter fn to return a set of ABMobilePages that this fn\n    *\t\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\tflag to find in sub pages\n    *\n    * @return {array}\t\t\tarray of ABMobilePages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         // if (this._pages && this._pages.length > 0) {\n         //    result = this._pages.filter(filter);\n\n         //    if (result.length < 1) {\n         //       this._pages.forEach((p) => {\n         //          var subPages = p.pages(filter, deep);\n         //          if (subPages && subPages.length > 0) {\n         //             result = subPages;\n         //          }\n         //       });\n         //    }\n         // }\n         result = this.application._searchDeep(this, \"_pages\", filter);\n      }\n      // find root pages\n      else {\n         result = this._pages.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method pageInsert()\n    *\n    * save the given ABMobilePage in our ._pages array and persist the current\n    * values if they changed.\n    *\n    * @param {ABMobilePage} page The instance of the page to save.\n    * @return {Promise}\n    */\n   pageInsert(page) {\n      var isIncluded = this.pages((o) => o.id === page.id).length > 0;\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._pages.push(page);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABMobilePage that is tied to this\n    * ABMobilePage.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABMobilePage}\n    */\n   pageNew(values) {\n      // make sure this is an ABMobilePage description\n      values.key = ABMobilePageDefaults.key;\n\n      // NOTE: this returns a new ABView component.\n      // when creating a new page, the 3rd param should be null, to signify\n      // the top level component.\n      var page = this.application.viewNew(values, this.application, null);\n      page.parent = this;\n      return page;\n   }\n\n   /**\n    * @method pageRemove()\n    *\n    * remove the given ABMobilePage from our ._pages array and persist the current\n    * values.\n    *\n    * @param {ABMobilePage} page The instance of the page to remove.\n    * @return {Promise}\n    */\n   pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages((p) => p.id != page.id);\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   updateIcon(obj) {\n      // icon of page\n      if (obj.settings.type == \"popup\") {\n         obj.icon = \"clone\";\n      } else {\n         obj.icon = ABMobilePageDefaults.icon;\n      }\n      return obj;\n   }\n\n   /**\n    * @method clone()\n    * clone the defintions of this ABMobilePage object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {obj}\n    *        defs of the copied ABView\n    */\n   clone(lookUpIds, parent) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // copy\n      let result = super.clone(lookUpIds, parent);\n\n      // page's name should not be duplicate\n      result.name = null;\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABMobilePage object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // now continue with the default .copy()\n      return super.copy(lookUpIds, parent, options);\n   }\n};\n","/*\n * ABViewCore\n *\n * ABViewCore defines the common ABView structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABView classes.\n *\n */\n\nvar ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABMobileViewDefaults = {\n   key: \"mobile-view\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"view\", // {string} the multilingual label key for the class label\n   tabicon: \"\", // no default tab icons\n};\n\nconst ABViewPropertyComponentDefaults = {\n   label: \"\",\n};\n\nmodule.exports = class ABMobileViewCore extends ABMLClass {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super([\"label\"], application.AB);\n\n      this.__events = [];\n      // keep track of any event listeners attached to this ABView object\n\n      this.defaults = defaultValues || ABMobileViewDefaults;\n\n      this.application = application;\n\n      this.parent = parent || null;\n\n      this.warningsSilent = false;\n      // {bool}\n      // Should we suppress our configuration warnings?\n\n      this.__missingViews = [];\n      // {array}\n      // Any ABView.id we have stored that we can't find.\n\n      this.fromValues(values);\n   }\n\n   static common() {\n      return ABMobileViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyComponentDefaults;\n   }\n\n   /**\n    * @method newInstance()\n    * return a new instance of this ABView.  Most likely called from interfaces\n    * that create new UI elements like the ABDesigner.\n    * @param {ABApplication} application  \t: the root ABApplication this view is under\n    * @param {ABView/ABApplication} parent\t: the parent object of this ABView.\n    * @return {ABView}\n    */\n   static newInstance(application, parent) {\n      // return a new instance from ABViewManager:\n      return application.viewNew(\n         { key: this.common().key },\n         application,\n         parent\n      );\n   }\n\n   viewKey() {\n      return this.defaults.key;\n   }\n\n   viewIcon() {\n      return this.defaults.icon;\n   }\n\n   tabIcon() {\n      return this.defaults.tabicon;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABView instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      var obj = super.toObj();\n\n      var result = {\n         id: this.id,\n         type: this.type || this.viewKey(),\n         key: this.key,\n         icon: this.icon,\n         tabicon: this.tabicon,\n         name: this.name,\n         settings: this.AB.cloneDeep(this.settings || {}),\n         // accessLevels: this.accessLevels,\n         translations: obj.translations,\n      };\n\n      // encode our child view references\n      result.viewIDs = (this._views || []).map((v) => v.id).filter((id) => id);\n      result.viewIDs = result.viewIDs.concat(this.__missingViews);\n\n      if (this.position) result.position = this.position;\n\n      // encode our .isRoot() reference.\n      // (NOTE: this is set so our server side code can distinguish) between a .view\n      // and a root page:\n      // NOTE: we intentionally do NOT pull this out in .fromValues()\n      result.isRoot = this.isRoot();\n\n      return result;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id; // NOTE: only exists after .save()\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = values.type || this.viewKey();\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.key = values.key || this.viewKey();\n      // {string} .key\n      // the unique lookup key for our ABViewManager to create new\n      // instances of this object.\n\n      this.icon = values.icon || this.viewIcon();\n      // {string} .icon\n      // the font awesome icon reference for showing an icon for this\n      // view in the AppBuilder interface builder.\n\n      this.tabicon = values.tabicon || this.tabIcon();\n\n      this.name = values.name;\n      // {string} .name\n      // A name reference for this ABView. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      values.settings = values.settings || {};\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.settings = values.settings || {};\n      // {obj} .settings\n      // the property settings for this ABView\n\n      // make sure .settings.height is an int and not a string\n      this.settings.height = parseInt(this.settings.height || 0);\n\n      // this.accessLevels = values.accessLevels || {};\n      // {obj} .accessLevels\n      // Hash: { ABRole.id : accessLevel }\n      // tracks the Role -> AccessLevel settings of this particular\n      // view.\n      // accessLevel: 0 : no access, 1 : view only, 2: full access\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n\n      // If the View / DataCollection does not have a .name already,\n      // use the English label translation as the .name instead.\n      if (!this.name && Array.isArray(this.translations)) {\n         for (var i = 0; i < this.translations.length; i++) {\n            if (i == 0) {\n               // Use the first label found, in case there is no 'en'\n               this.name = this.translations[i].label;\n            }\n            if (this.translations[i].language_code == \"en\") {\n               // But the 'en' label will have final priority\n               this.name = this.translations[i].label;\n               break;\n            }\n         }\n      }\n\n      // default value for our label\n      if (this.label == \"?label?\") {\n         if (this.parent) {\n            this.label =\n               this.parent.label +\n               \".\" +\n               (this.field?.()?.columnName ?? this.defaults.key);\n         }\n      }\n\n      var views = [];\n      this.__missingViews = this.__missingViews || [];\n      (values.viewIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            views.push(this.application.viewNew(def, this.application, this));\n         } else {\n            this.__missingViews.push(id);\n         }\n      });\n      this._views = views;\n\n      this.position = values.position || {};\n\n      if (this.position.x != null) this.position.x = parseInt(this.position.x);\n      if (this.position.y != null) this.position.y = parseInt(this.position.y);\n\n      this.position.dx = parseInt(this.position.dx || 1);\n      this.position.dy = parseInt(this.position.dy || 1);\n   }\n\n   isRoot() {\n      return this.parent == null || this.parent == this.application;\n   }\n\n   /**\n    * @method allParents()\n    * return a flattened array of all the ABViews parents\n    * @return {array}      array of ABViews\n    */\n   allParents() {\n      var parents = [];\n      var curView = this;\n\n      // add current view to array\n      parents.unshift(curView);\n\n      while (!curView.isRoot() && curView.parent) {\n         parents.unshift(curView.parent);\n\n         curView = curView.parent;\n      }\n\n      return parents;\n   }\n\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABViewPage is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   // isAccessibleForRoles(roles) {\n   //    var foundRole = false;\n\n   //    var accessibleRoles = Object.keys(this.accessLevels) || [];\n   //    (roles || []).forEach((r) => {\n   //       if (accessibleRoles.indexOf(r.uuid || r) > -1) {\n   //          foundRole = true;\n   //       }\n   //    });\n\n   //    return foundRole;\n   // }\n\n   /**\n    * @method getUserAccess()\n    *\n    * return the access level of the current user on the current view\n    *\n    * @return {integer}  // 0 = No Access // 1 = Read Only // 2 = Full Access\n    */\n   // getUserAccess() {\n   //    // by default everyone has no access\n   //    var accessLevel = 0;\n\n   //    if (this.application.isAccessManaged) {\n   //       // check to see if the current users is the access manager\n   //       var isAccessManager = false;\n   //       // first check if manager is defined by their role\n   //       if (parseInt(this.application.accessManagers.useRole) == 1) {\n   //          // if so check if any of the user's role match the managers\n   //          this.AB.Account.roles().forEach((role) => {\n   //             if (\n   //                this.application.accessManagers.role.indexOf(\n   //                   role.id || role.uuid\n   //                ) > -1\n   //             ) {\n   //                // if so set the access level to full access\n   //                isAccessManager = true;\n   //                accessLevel = 2;\n   //             }\n   //          });\n   //       }\n   //       // if the user isn't already set as the manager and the manager is defined by their account\n   //       if (\n   //          !isAccessManager &&\n   //          parseInt(this.application.accessManagers.useAccount) == 1\n   //       ) {\n   //          // check if the user's account matches the managers\n   //          if (\n   //             this.application.accessManagers.account.indexOf(\n   //                this.AB.Account.uuid() + \"\"\n   //             ) > -1\n   //          ) {\n   //             // if so set the access level to full access\n   //             isAccessManager = true;\n   //             accessLevel = 2;\n   //          }\n   //       }\n\n   //       // if the user is not the manager check if the page has access levels defined for roles\n   //       if (\n   //          this.accessLevels &&\n   //          Object.keys(this.accessLevels).length > 0 &&\n   //          !isAccessManager\n   //       ) {\n   //          // check to see if the user's roles matches one of the roles defined\n   //          this.AB.Account.roles().forEach((role) => {\n   //             var currentRole = this.accessLevels[role.id || role.uuid];\n   //             if (currentRole && parseInt(currentRole) > accessLevel)\n   //                // if the access level is higher than a previous role set to the new level\n   //                accessLevel = parseInt(currentRole);\n   //          });\n   //       }\n   //    } else {\n   //       accessLevel = 2;\n   //    }\n\n   //    return accessLevel;\n   // }\n\n   /**\n    * @method parentFormComponent\n    * return the closest form object this component is on.\n    */\n   parentFormComponent() {\n      var form = null;\n\n      var curr = this;\n      while (curr.key != \"mobile-form\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"mobile-form\") {\n         form = curr;\n      }\n\n      return form;\n   }\n\n   /**\n    * @method parentDetailComponent\n    * return the closest detail object that this component is on.\n    * @returns {ABViewDetail} detail component\n    */\n   parentDetailComponent() {\n      var detail = null;\n\n      var curr = this;\n      while (curr.key != \"mobile-detail\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"mobile-detail\") {\n         detail = curr;\n      }\n\n      return detail;\n   }\n\n   pageParent(filterFn) {\n      if (filterFn == null) filterFn = () => true;\n\n      // if current page is the root page, then return itself.\n      if (this.isRoot()) {\n         return this;\n      }\n\n      var parentPage = this.parent;\n      while (\n         parentPage &&\n         (parentPage.key != \"mobile-page\" || !filterFn(parentPage))\n      ) {\n         parentPage = parentPage.parent;\n      }\n\n      return parentPage;\n   }\n\n   pageRoot() {\n      var rootPage = this.pageParent();\n\n      while (!rootPage.isRoot()) {\n         rootPage = rootPage.pageParent();\n      }\n\n      return rootPage;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    *\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) {\n         if (\n            [\n               \"mobile-form\",\n               \"grid\",\n               \"line\",\n               \"area\",\n               \"bar\",\n               \"gantt\",\n               \"kanban\",\n            ].indexOf(this.key) > -1\n         ) {\n            // NOTE: ignore kanban side forms where this is the case:\n            if (this.key == \"mobile-form\" && this._currentObject) return null;\n\n            if (this.warningsSilent) return null;\n\n            var errNoDCID = new Error(\n               `ABViewCore:get datacollection(): View[${this.key}] didn't define a dataviewID.`\n            );\n            this.AB.notify.builder(errNoDCID, {\n               view: this,\n               settings: this.settings,\n            });\n         } else {\n            // These views shouldn't matter if they don't have a datacollection.\n            if (\n               [\n                  \"button\",\n                  \"label\",\n                  \"mobile-page\",\n                  \"tab\",\n                  \"viewcontainer\",\n               ].indexOf(this.key) == -1\n            ) {\n               console.warn(\n                  `TODO: figure out which ABView* require a .dataviewID: ${this.key}?`\n               );\n            }\n         }\n         return null;\n      }\n\n      var dc = this.AB.datacollectionByID(dataviewID);\n      if (!dc) {\n         var errNoDC = new Error(\n            `MobileView[${this.label}][${this.id}] is unable to find associated DataCollection`\n         );\n         this.AB.notify.builder(errNoDC, {\n            view: this,\n            dataviewID,\n         });\n      }\n      return dc;\n   }\n\n   ///\n   /// Update Access accessLevels\n   ///\n\n   /**\n    * @method updateAccessLevels()\n    *\n    *\n    * @param {string} roleId\n    *\n    * @param {string} accessLevel\n    *\n    * @return {Promise}\n    *\n    */\n   // updateAccessLevels(roleId, accessLevel) {\n   //    if (parseInt(accessLevel) == 0) {\n   //       if (this.accessLevels[roleId]) delete this.accessLevels[roleId];\n   //    } else {\n   //       this.accessLevels[roleId] = accessLevel;\n   //    }\n\n   //    return this.save(false, false);\n   // }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    *\n    * return an array of all the ABViews children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViews that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\n    *\n    * @return {array} \tarray of ABViews\n    */\n   views(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._views || this._views.length < 1) return result;\n\n      // find into recursively\n      if (filter && deep) {\n         // result = result.concat(this._views.filter(filter));\n\n         // this._views.forEach((v) => {\n         //    var subViews = v.views(filter, deep);\n         //    if (subViews && subViews.length > 0) {\n         //       result = result.concat(subViews);\n         //    }\n         // });\n         result = this.application._searchDeep(this, \"_views\", filter);\n      } else {\n         result = this._views.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewByID()\n    *\n    * return the specific View referenced by the given ID.\n    *\n    * @param {uuid} ID\n    *        the {ABMobileView}.id of the child view we are requesting\n    *\n    * @return {ABMobileView || undefined}\n    */\n   viewByID(ID) {\n      return this.views((v) => v.id == ID, true)[0];\n   }\n\n   /**\n    * @method viewNew()\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return this.application.viewNew(\n         values,\n         application || this.application,\n         parent || this\n      );\n   }\n\n   /**\n    * @method viewDestroy()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   // viewDestroy(view) {\n   //    console.error(\"DEPRECIATED: where is this called?\");\n   //    return this.viewRemove(view);\n   // }\n\n   /**\n    * @method viewRemove()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewRemove(view) {\n      var origLen = this._views.length;\n      this._views = this.views(function (v) {\n         return v.id != view.id;\n      });\n\n      if (this._views.length < origLen) {\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewInsert()\n    *\n    * persist the current ABView in our list of ._views.\n    *\n    * @param {ABView} object\n    * @return {Promise}\n    */\n   viewInsert(view) {\n      var isIncluded =\n         this.views(function (v) {\n            return v.id == view.id;\n         }).length > 0;\n      if (!isIncluded) {\n         this._views.push(view);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewReorder()\n    *\n    * reorder the current ABView in our list of ._views.\n    *\n    * @param {string} viewId - id of the active view\n    * @param {string} toPosition - 'to' postion\n    * @return {Promise}\n    */\n   viewReorder(viewId, toPosition) {\n      var from = this._views.findIndex((v) => v.id == viewId);\n      if (from < 0) return;\n\n      // move drag item to 'to' position\n      this._views.splice(toPosition, 0, this._views.splice(from, 1)[0]);\n\n      // save to database\n      return this.save(true);\n   }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // unsubscribe events\n      this.eventClear(true);\n\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABView\n            // be sure to remove any of it's ABViews as well\n            // This cleans out any dangling ABDefinitions\n\n            var allViewDeletes = [];\n            var allViews = this.views();\n            this._views = [];\n            // doing ._views = [] prevents any of my updates when\n            // a sub-view is .destroy()ed\n\n            allViews.forEach((v) => {\n               allViewDeletes.push(v.destroy());\n            });\n            return Promise.all(allViewDeletes);\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects\n            if (this.parent && !this.pages) {\n               return this.parent.viewRemove(this);\n            }\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABView\n    * @return {Promise}\n    *\t\t.resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects:\n            if (this.parent && !this.pages) {\n               // if we have a .parent, make sure we are included in our .parent's\n               // viewIDs\n               return this.parent.viewInsert(this);\n            }\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   /**\n    * @method wantsAdd()\n    * Some widgets can indicate to their containing ABMobilePage that\n    * it wants to provide an [Add] feature.\n    * @return {bool}\n    */\n   get wantsAdd() {\n      // the default widget doesn't.\n      // only those that actually do, should override this.\n      return false;\n   }\n\n   ///\n   /// Events\n   ///\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    * \t\t\t\t\t\t\temitter: object,\n    * \t\t\t\t\t\t\teventName: string,\n    * \t\t\t\t\t\t\tlistener: function\n    * \t\t\t\t\t\t}\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      var exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    * @param {bool} deep - clear events of child views\n    */\n   eventClear(deep) {\n      if (deep) {\n         this.views().forEach((v) => {\n            v.eventClear(deep);\n         });\n      }\n\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   /**\n    * @method clone()\n    * clone the definitions of this ABView object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    * @return {obj}\n    *        obj defs of this ABView\n    */\n   clone(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pages\", \"views\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.viewNew(config, this.application, parent);\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // copy sub pages\n      if (this.pages && !options.ignoreSubPages) {\n         result._pages = [];\n         this.pages().forEach((p) => {\n            let copiedSubPage = p.clone(lookUpIds, result, options);\n            copiedSubPage.parent = result;\n\n            result._pages.push(copiedSubPage);\n         });\n      }\n\n      // copy sub views\n      if (this.views && !options.ignoreSubViews) {\n         result._views = [];\n         this.views().forEach((v) => {\n            let copiedView = v.clone(lookUpIds, result, options);\n\n            result._views.push(copiedView);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABView object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    *        options.newName {string}\n    *             new user determined name for page\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pageIDs\", \"viewIDs\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.application.viewNew(config, this.application, parent);\n\n      // keep the parent\n      result.parent = parent || this.parent;\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application.\n         // pages with null parent ids default to getting put on root\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // page's name should not be duplicate\n      if (this.key == \"mobile-page\") {\n         result.name =\n            options?.newName ||\n            `${result.name}_copied_${this.AB.uuid().slice(0, 3)}`;\n\n         result.label = options?.newName || `${result.label} (copied)`;\n      }\n\n      return Promise.resolve()\n         .then(() => {\n            // copy sub pages\n            var allSaves = [];\n\n            if (this._pages && !options.ignoreSubPages) {\n               result._pages = [];\n               this.pages().forEach((p) => {\n                  // this prevents result.save() from happening on each of these\n                  // p.copy():\n                  if (p.isRoot())\n                     this.application._pages.push({ id: lookUpIds[p.id] });\n\n                  allSaves.push(\n                     p\n                        .copy(lookUpIds, result, options)\n                        .then((copiedSubPage) => {\n                           copiedSubPage.parent = result;\n                           // remove the temp {id:} entry above:\n                           this.application._pages =\n                              this.application._pages.filter(\n                                 (p2) => p2.id != lookUpIds[p.id]\n                              );\n\n                           // now add the full copiedSubPage:\n                           result._pages.push(copiedSubPage);\n                        })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // copy sub views\n            var allSaves = [];\n\n            if (this._views && !options.ignoreSubViews) {\n               result._views = [];\n               this.views().forEach((v) => {\n                  allSaves.push(\n                     // send a null for parent, so that the .save() wont trigger\n                     // a save of the parent.\n                     v.copy(lookUpIds, result, options).then((copiedView) => {\n                        // now patch up the parent connection:\n                        // copiedView.parent = result;\n                        if (\n                           result._views.filter((vi) => vi.id == copiedView.id)\n                              .length < 1\n                        ) {\n                           result._views.push(copiedView);\n                        }\n                     })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // now we do 1 save for all the views\n            return result.save();\n         })\n         .then(() => {\n            return result;\n         });\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABViewFormButtonPropertyComponentDefaults = {\n   includeSave: true,\n   saveLabel: \"\",\n   includeCancel: false,\n   cancelLabel: \"\",\n   includeReset: false,\n   resetLabel: \"\",\n   afterCancel: null,\n   alignment: \"right\",\n   isDefault: false, // mark default button of form widget\n};\n\nconst ABViewFormButtonDefaults = {\n   key: \"mobile-button\",\n   // {string} unique key for this view\n\n   icon: \"square\",\n   // {string} fa-[icon] reference for this view\n\n   labelKey: \"button\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormButtonCore extends ABMobileView {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormButtonDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormButtonDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormButtonPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   toObj() {\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      let result = super.toObj();\n\n      return result;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      Object.keys(ABViewFormButtonPropertyComponentDefaults).forEach((k) => {\n         let val =\n            this.settings[k] ?? ABViewFormButtonPropertyComponentDefaults[k];\n         try {\n            val = JSON.parse(val);\n         } catch (e) {\n            // just ignore the error and save val\n         }\n         this.settings[k] = val;\n      });\n\n      // this.settings.includeSave = JSON.parse(\n      //    this.settings.includeSave ||\n      //       ABViewFormButtonPropertyComponentDefaults.includeSave\n      // );\n      // this.settings.includeCancel = JSON.parse(\n      //    this.settings.includeCancel ||\n      //       ABViewFormButtonPropertyComponentDefaults.includeCancel\n      // );\n      // this.settings.includeReset = JSON.parse(\n      //    this.settings.includeReset ||\n      //       ABViewFormButtonPropertyComponentDefaults.includeReset\n      // );\n\n      // this.settings.isDefault = JSON.parse(\n      //    this.settings.isDefault ||\n      //       ABViewFormButtonPropertyComponentDefaults.isDefault\n      // );\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormCheckboxPropertyComponentDefaults = {};\n\nconst ABMobileViewFormCheckboxDefaults = {\n   key: \"mobile-checkbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormCheckboxCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormCheckboxPropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormConnectPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n   filterConditions: {\n      glue: \"and\",\n      rules: [],\n   },\n   sortFields: [],\n   popupWidth: 700,\n   popupHeight: 450,\n};\n\nconst ABMobileViewFormConnectDefaults = {\n   key: \"mobile-connect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormConnectCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormConnectDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormConnectDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormConnectPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.filterConditions =\n         this.settings.filterConditions ||\n         ABMobileViewFormConnectPropertyComponentDefaults.filterConditions;\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\nconst ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\nconst ABViewFormDefaults = {\n   key: \"mobile-form\", // unique key identifier for this ABMobileViewForm\n   icon: \"list-alt\", // icon reference: (without 'fa-' )\n   labelKey: \"Form\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewFormPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   clearOnLoad: false,\n   clearOnSave: false,\n   displayRules: [],\n   editForm: \"none\", // The url pointer of ABViewForm\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalues: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tvalue: {object}\n   //\t\t\t}\n   //\t\t]\n   //\t}]\n   recordRules: [],\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalue: {string}\n   //\t}]\n   submitRules: [],\n};\n\nmodule.exports = class ABMobileViewFormCore extends ABMobileView {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewFormDefaults);\n   }\n\n   static common() {\n      return ABViewFormDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewFormPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewFormPropertyComponentDefaults.showLabel\n      );\n      this.settings.clearOnLoad = JSON.parse(\n         this.settings.clearOnLoad != null\n            ? this.settings.clearOnLoad\n            : ABViewFormPropertyComponentDefaults.clearOnLoad\n      );\n      this.settings.clearOnSave = JSON.parse(\n         this.settings.clearOnSave != null\n            ? this.settings.clearOnSave\n            : ABViewFormPropertyComponentDefaults.clearOnSave\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth == null\n            ? ABViewFormPropertyComponentDefaults.labelWidth\n            : this.settings.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height == null\n            ? ABViewFormPropertyComponentDefaults.height\n            : this.settings.height\n      );\n   }\n\n   // Use this function in kanban\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      var viewsToAllow = [\"mobile-label\", \"mobile-button\", \"mobile-text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   /**\n    * @method fieldComponents()\n    * return an array of all the ABViewFormField children\n    * @param {fn} filter\n    *        a filter fn to return a set of ABViewFormField that this fn\n    *\t       returns true for.\n    * @return {array} \tarray of ABViewFormField\n    */\n   fieldComponents(filter) {\n      const flattenComponents = (views) => {\n         let components = [];\n\n         views.forEach((v) => {\n            if (v == null) return;\n\n            components.push(v);\n\n            if (v._views?.length) {\n               components = components.concat(flattenComponents(v._views));\n            }\n         });\n\n         return components;\n      };\n\n      if (this._views?.length) {\n         const allComponents = flattenComponents(this._views);\n\n         if (filter == null) {\n            filter = (comp) =>\n               comp instanceof this.AB.Class.ABMobileViewFormItem;\n         }\n\n         return allComponents.filter(filter);\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * @method addFieldToForm()\n    * Create a New Form Item on this Form from a given ABFieldXXX object.\n    * @param {ABFieldXXX} field\n    * @param {int} yPosition\n    * @return {ABMobileViewFormXXX}\n    */\n   addFieldToForm(field, yPosition) {\n      if (field == null) return;\n\n      // TODO: figure out how to decode the Data Field and return a form\n      // element.\n\n      var fieldComponent = field.formComponentMobile();\n      if (fieldComponent == null) return;\n\n      var newView = fieldComponent.newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings || {};\n      newView.settings.fieldId = field.id;\n      // TODO : Default settings\n\n      if (yPosition != null) newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n\n   get RecordRule() {\n      let object = this.datacollection.datasource;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   /**\n    * @method recordRulesReady()\n    * This returns a Promise that gets resolved when all record rules report\n    * that they are ready.\n    * @return {Promise}\n    */\n   async recordRulesReady() {\n      return this.RecordRule.rulesReady();\n   }\n\n   doRecordRulesPre(rowData) {\n      return this.RecordRule.processPre({ data: rowData, form: this });\n   }\n\n   doRecordRules(rowData) {\n      // validate for record rules\n      if (rowData) {\n         let object = this.datacollection.datasource;\n         let ruleValidator = object.isValidData(rowData);\n         let isUpdatedDataValid = ruleValidator.pass();\n         if (!isUpdatedDataValid) {\n            console.error(\"Updated data is invalid.\", { rowData: rowData });\n            return Promise.reject(new Error(\"Updated data is invalid.\"));\n         }\n      }\n\n      return this.RecordRule.process({ data: rowData, form: this });\n   }\n\n   doSubmitRules(rowData) {\n      var object = this.datacollection.datasource;\n\n      var SubmitRules = new ABSubmitRule();\n      SubmitRules.formLoad(this);\n      SubmitRules.fromSettings(this.settings.submitRules);\n      SubmitRules.objectLoad(object);\n\n      return SubmitRules.process({ data: rowData, form: this });\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABViewFormCustomPropertyComponentDefaults = {};\n\nconst ABViewFormCustomDefaults = {\n   key: \"mobile-fieldcustom\",\n   // {string} unique key for this view\n   icon: \"object-group\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"custom\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormCustomCore extends ABMobileViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCustomPropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormDatepickerPropertyComponentDefaults = {\n   timepicker: false,\n};\n\nconst ABMobileViewFormDatepickerDefaults = {\n   key: \"mobile-date\", // {string} unique key for this view\n   icon: \"calendar\", // {string} fa-[icon] reference for this view\n   labelKey: \"datepicker\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormDatepickerCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormDatepickerDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormDatepickerDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormDatepickerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormDatetimePropertyComponentDefaults = {\n   timepicker: false,\n};\n\nconst ABMobileViewFormDatetimeDefaults = {\n   key: \"mobile-datetime\", // {string} unique key for this view\n   icon: \"calendar\", // {string} fa-[icon] reference for this view\n   labelKey: \"Date and Time\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormDatetimeCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormDatetimeDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormDatetimeDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormDatetimePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormEmailPropertyComponentDefaults = {\n   timepicker: false,\n};\n\nconst ABMobileViewFormEmailDefaults = {\n   key: \"mobile-email\", // {string} unique key for this view\n   icon: \"envelope\", // {string} fa-[icon] reference for this view\n   labelKey: \"Email\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormEmailCore extends ABMobileViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormEmailDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormEmailDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormEmailPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABViewFormFilePropertyComponentDefaults = {};\n\nconst ABViewFormFileDefaults = {\n   key: \"mobile-file\",\n   // {string} unique key for this view\n   icon: \"file\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"file\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormFileCore extends ABMobileViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormFileDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormFileDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormFilePropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABViewFormFormulaPropertyComponentDefaults = {};\n\nconst ABViewFormFormulaDefaults = {\n   key: \"mobile-formula\",\n   // {string} unique key for this view\n   icon: \"circle-o-notch\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"Formula\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormFormulaCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormFormulaDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormFormulaPropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormFile = require(\"../../platform/mobile/ABMobileViewFormFile\");\n\nconst ABViewFormImagePropertyComponentDefaults = {};\n\nconst ABViewImageFileDefaults = {\n   key: \"mobile-image\",\n   // {string} unique key for this view\n   icon: \"file-image-o\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"Image\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormImageCore extends ABMobileViewFormFile {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewImageFileDefaults\n      );\n   }\n\n   static common() {\n      return ABViewImageFileDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormImagePropertyComponentDefaults;\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABViewFormFieldPropertyComponentDefaults = {\n   required: 0,\n   disable: 0,\n};\n\nmodule.exports = class ABMobileViewFormItemCore extends ABMobileView {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static defaultValues() {\n      return ABViewFormFieldPropertyComponentDefaults;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let form = this.parentFormComponent();\n      if (form == null) return null;\n\n      let datacollection = form.datacollection;\n      if (datacollection == null) return null;\n\n      return datacollection;\n   }\n\n   field() {\n      if (this.settings.objectId) {\n         let object = this.AB.objectByID(this.settings.objectId);\n         if (!object) return null;\n\n         return object.fieldByID(this.settings.fieldId);\n      } else {\n         let form = this.parentFormComponent();\n         if (form == null) return null;\n\n         let object;\n         if (form._currentObject) {\n            object = form._currentObject;\n         } else {\n            let datacollection = form.datacollection;\n            if (datacollection == null) return null;\n\n            object = datacollection.datasource;\n         }\n\n         if (object == null) return null;\n\n         let field = object.fieldByID(this.settings.fieldId);\n         return field;\n      }\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormNumberPropertyComponentDefaults = {\n   isStepper: 0,\n};\n\nconst ABMobileViewFormNumberDefaults = {\n   key: \"mobile-numberbox\", // {string} unique key for this view\n   icon: \"hashtag\", // {string} fa-[icon] reference for this view\n   labelKey: \"number\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormNumberCore extends ABMobileViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormNumberDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormNumberDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormNumberPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewFormText instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"formLabel\"]);\n\n      var obj = super.toObj();\n      obj.views = []; // no subviews\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.isStepper =\n         this.settings.isStepper ||\n         ABMobileViewFormNumberPropertyComponentDefaults.isStepper;\n\n      // convert from \"0\" => 0\n      this.settings.isStepper = parseInt(this.settings.isStepper);\n   }\n};\n","const ABMobileViewFormCustom = require(\"../../platform/mobile/ABMobileViewFormCustom\");\n\nconst ABMobileViewFormReadonlyPropertyComponentDefaults = {};\n\nconst ABMobileViewFormReadonlyDefaults = {\n   key: \"mobile-fieldreadonly\", // {string} unique key for this view\n   icon: \"calculator\", // {string} fa-[icon] reference for this view\n   labelKey: \"readonly\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormReadonly extends ABMobileViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormReadonlyDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormReadonlyDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormReadonlyPropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormSelectSingle = require(\"../../platform/mobile/ABMobileViewFormSelectSingle\");\n\nconst ABMobileViewFormSelectMultiplePropertyComponentDefaults = {\n   type: \"richselect\", // 'richselect' or 'radio'\n};\n\nconst ABMobileViewFormSelectMultipleDefaults = {\n   key: \"mobile-selectmultiple\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"selectmultiple\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormSelectMultipleCore extends (\n   ABMobileViewFormSelectSingle\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormSelectMultipleDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormSelectMultipleDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormSelectMultiplePropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormSelectSinglePropertyComponentDefaults = {\n   type: \"richselect\", // 'richselect' or 'radio'\n};\n\nconst ABMobileViewFormSelectSingleDefaults = {\n   key: \"mobile-selectsingle\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"selectsingle\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormSelectSingleCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormSelectSingleDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormSelectSingleDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormSelectSinglePropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABViewFormTextboxPropertyComponentDefaults = {\n   type: \"single\", // 'single', 'multiple' or 'rich'\n   placeholder: \"\", // default placeholder text\n};\n\nconst ABViewFormTextboxDefaults = {\n   key: \"mobile-textbox\", // {string} unique key for this view\n   icon: \"i-cursor\", // {string} fa-[icon] reference for this view\n   labelKey: \"textbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormTextboxCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormTextboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormTextboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTextboxPropertyComponentDefaults;\n   }\n\n   toObj() {\n      // placeholder is a multilingual value:\n      this.unTranslate(this.settings, this.settings, [\"placeholder\"]);\n\n      return super.toObj();\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // placeholder is a multilingual value:\n      this.unTranslate(this.settings, this.settings, [\"placeholder\"]);\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABViewLabelPropertyComponentDefaults = {\n   text: \"\",\n   format: 0, // 0 - normal, 1 - title, 2 - description\n   alignment: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"mobile-label\", // {string} unique key for this view\n   icon: \"font\", // {string} fa-[icon] reference for this view\n   labelKey: \"Label\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewLabelCore extends ABMobileView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewLabelPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"text\"]);\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values); // <-- this performs the translations\n\n      // if this is being instantiated on a read from the Property UI,\n      // .text is coming in under .settings.label\n      this.text = values.text || values.settings.text || \"*text\";\n\n      this.settings.format =\n         this.settings.format || ABViewLabelPropertyComponentDefaults.format;\n      this.settings.alignment =\n         this.settings.alignment ||\n         ABViewLabelPropertyComponentDefaults.alignment;\n\n      // we are not allowed to have sub views:\n      this._views = [];\n\n      // convert from \"0\" => 0\n      this.settings.format = parseInt(this.settings.format);\n\n      this.translate(this, this, [\"label\", \"text\"]);\n   }\n\n   //// Allow external interface to manipulate our settings:\n\n   /**\n    * @method formatNormal\n    * display text in the normal format.\n    */\n   formatNormal() {\n      this.settings.format = 0;\n   }\n\n   /**\n    * @method formatTitle\n    * display text as a Title.\n    */\n   formatTitle() {\n      this.settings.format = 1;\n   }\n\n   /**\n    * @method formatDescription\n    * display text as a description.\n    */\n   formatDescription() {\n      this.settings.format = 2;\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABViewListPropertyComponentDefaults = {\n   dataviewID: null,\n   field: null,\n   height: 0,\n   hideTitle: 0,\n   hideTabs: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"mobile-list\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"List\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABMobileView {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewListPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   field() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var object = dv.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.field);\n   }\n\n   /**\n    * @method wantsAdd()\n    * Some widgets can indicate to their containing ABMobilePage that\n    * it wants to provide an [Add] feature.\n    * @return {bool}\n    */\n   get wantsAdd() {\n      // we do if we have a setting for linkPageAdd\n      return this.settings.linkPageAdd != \"\";\n   }\n};\n","/**\n * ABProcessLane\n * manages the lanes in a Process Diagram.\n *\n * Lanes manage users in the system, and provide a way to lookup a SiteUser.\n */\nconst ABProcessParticipant = require(\"../../platform/process/ABProcessParticipant\");\n\nconst ABProcessLaneDefaults = {\n   type: \"process.lane\",\n   // {string} .type\n   // unique key to reference this specific object\n\n   // icon: \"key\"\n   // {string} .icon\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n};\n\nmodule.exports = class ABProcessLaneCore extends ABProcessParticipant {\n   constructor(attributes, process, AB) {\n      super(attributes, process, AB);\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n   }\n\n   static defaults() {\n      return ABProcessLaneDefaults;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      this.type = attributes.type || ABProcessLaneDefaults.type;\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   // toObj() {\n   //     // default label value\n   //     if (!this.label && this.name && this.name != \"\") {\n   //         this.label = this.name;\n   //     }\n\n   //     // untranslate this object:\n   //     var data = super.toObj();\n\n   //     var fieldsToSave = [\n   //         \"id\",\n   //         \"name\",\n   //         \"type\",\n   //         \"processID\",\n   //         \"diagramID\",\n   //         \"where\"\n   //     ];\n   //     fieldsToSave.forEach((f) => {\n   //         data[f] = this[f];\n   //     });\n\n   //     return data;\n   // }\n};\n","/**\n * ABProcessParticipant\n * manages the participant lanes in a Process Diagram.\n *\n * Participants manage users in the system, and provide a way to lookup a SiteUser.\n */\nconst ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABProcessParticipantDefaults = {\n   type: \"process.participant\",\n   // {string} .type\n   // unique key to reference this specific object\n\n   // icon: \"key\" // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n};\n\nmodule.exports = class ABProcessParticipantCore extends ABMLClass {\n   constructor(attributes, process, AB) {\n      super([\"label\"], AB);\n\n      this.process = process;\n      if (!this.processID) {\n         this.processID = process.id;\n      }\n\n      this.fromValues(attributes);\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n   }\n\n   static defaults() {\n      return ABProcessParticipantDefaults;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      // These Values are needed By ABDefinition:\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || ABProcessParticipantDefaults.type;\n      this.key = attributes.key || ABProcessParticipantDefaults.type;\n\n      // Process Values:\n      this.processID = attributes.processID || null;\n      this.diagramID = attributes.diagramID || \"?diagramID?\";\n      this.laneIDs = attributes.laneIDs || [];\n      this.stashed = false;\n      if (attributes.stashed && attributes.stashed != \"\") {\n         this.stashed = attributes.stashed;\n      }\n\n      function validChecker(attribute) {\n         return typeof attribute != \"undefined\" && attribute != null;\n      }\n\n      this.useRole = 0;\n      if (validChecker(attributes.useRole)) {\n         this.useRole = parseInt(attributes.useRole);\n      }\n\n      this.role = 0;\n      if (validChecker(attributes.role)) {\n         this.role = attributes.role;\n      }\n\n      this.useAccount = 0;\n      if (validChecker(attributes.useAccount)) {\n         this.useAccount = parseInt(attributes.useAccount);\n      }\n\n      this.account = 0;\n      if (validChecker(attributes.account)) {\n         this.account = attributes.account;\n      }\n\n      this.useField = 0;\n      if (validChecker(attributes.useField)) {\n         this.useField = parseInt(attributes.useField);\n      }\n\n      this.userField = [];\n      if (validChecker(attributes.userField)) {\n         this.userField = attributes.userField;\n      }\n\n      // depreciated\n      this.fields = [];\n      if (validChecker(attributes.fields)) {\n         this.fields = attributes.fields;\n      }\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label && this.name && this.name != \"\") {\n         this.label = this.name;\n      }\n\n      // untranslate this object:\n      var data = super.toObj();\n\n      var fieldsToSave = [\n         \"id\",\n         \"name\",\n         \"type\",\n         \"processID\",\n         \"diagramID\",\n         \"laneIDs\",\n         \"where\",\n         \"useRole\",\n         \"role\",\n         \"useAccount\",\n         \"account\",\n         \"useField\",\n         \"userField\",\n         \"fields\",\n         \"stashed\",\n      ];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   /**\n    * @method onProcessReady()\n    * perform any tasks/checks necessary after the parent Process is\n    * setup and ready.\n    */\n   onProcessReady() {}\n};\n","/*\n * ABProcessTaskManager\n *\n * An interface for managing the different ABProcessTasks in AppBuilder.\n *\n */\n\n/*\n * Tasks\n * A name => ABProcessElement hash of the different ABProcessElements available.\n */\nvar Tasks = {};\n\n/*\n * DEFINITIONTYPES\n * a hash of BPMN:Element.type to Default values\n * for each of our Process Objects.\n *\n * NOTE: For Tasks, the key should be target.type,\n * for Triggers or End elements, the key should be\n * the target.eventDefinitionType\n */\nvar DEFINITIONTYPES = {};\n\nvar AllProcessElements = [\n   require(\"../../platform/process/tasks/ABProcessEnd\"),\n   require(\"../../platform/process/tasks/ABProcessGatewayExclusive\"),\n   require(\"../../platform/process/tasks/ABProcessTaskEmail\"),\n   require(\"../../platform/process/tasks/ABProcessTaskService\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingBatchProcessing\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingFPClose\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingFPYearClose\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingJEArchive\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceCalculate\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceInsertRecord\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceQuery\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceGetResetPasswordUrl\"),\n   require(\"../../platform/process/tasks/ABProcessTaskSubProcess\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUser\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUserApproval\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUserExternal\"),\n   require(\"../../platform/process/tasks/ABProcessTrigger\"),\n   require(\"../../platform/process/tasks/ABProcessTriggerLifecycle\"),\n   require(\"../../platform/process/tasks/ABProcessTriggerTimer\"),\n];\n\nAllProcessElements.forEach((ELEMENT) => {\n   Tasks[ELEMENT.defaults().key] = ELEMENT;\n\n   switch (ELEMENT.defaults().category) {\n      case \"start\":\n      case \"end\":\n         DEFINITIONTYPES[ELEMENT.DiagramReplace().target.eventDefinitionType] =\n            ELEMENT.defaults();\n         break;\n\n      case \"gateway\":\n      case \"task\":\n         DEFINITIONTYPES[ELEMENT.DiagramReplace().target.type] =\n            ELEMENT.defaults();\n         break;\n   }\n});\n\nmodule.exports = {\n   /*\n    * @function allTasks\n    * return all the currently defined ABProcessTasks in an array.\n    * @return [{ABProcessTask},...]\n    */\n   allTasks: function () {\n      var tasks = [];\n      for (var t in Tasks) {\n         tasks.push(Tasks[t]);\n      }\n      return tasks;\n   },\n\n   /*\n    * @function newTask\n    * return an instance of an ABProcessTask based upon the values.type value.\n    * @return {ABProcessTask}\n    */\n   newTask: function (values, process, AB) {\n      if (values.key) {\n         return new Tasks[values.key](values, process, AB);\n      } else {\n         //// TODO: what to do here?\n      }\n   },\n\n   DiagramReplaceDefinitionsForType: function (type) {\n      var definitions = AllProcessElements.filter((e) => {\n         return e.defaults().category == type;\n      }).map((e) => {\n         return e.DiagramReplace();\n      });\n      return definitions;\n   },\n\n   StartEvents: function () {\n      return this.DiagramReplaceDefinitionsForType(\"start\");\n   },\n\n   Gateways: function () {\n      return this.DiagramReplaceDefinitionsForType(\"gateway\");\n   },\n\n   Tasks: function () {\n      return this.DiagramReplaceDefinitionsForType(\"task\");\n   },\n\n   EndEvents: function () {\n      return this.DiagramReplaceDefinitionsForType(\"end\");\n   },\n\n   definitionForElement: function (element) {\n      // pull the key from the embedded .eventDefinition\n      // if there is one\n      var key = null;\n      if (element.businessObject.eventDefinitions) {\n         var def = element.businessObject.eventDefinitions[0];\n         if (def) {\n            key = def.$type;\n         }\n      }\n\n      // if not, then just use the base .type\n      if (!key) {\n         key = element.type;\n      }\n\n      return DEFINITIONTYPES[key];\n   },\n};\n","var ABMLClass = require(\"../../../platform/ABMLClass\");\n\nmodule.exports = class ABProcessTaskCore extends ABMLClass {\n   constructor(attributes, process, AB, defaultValues) {\n      super([\"label\"], AB);\n\n      this.defaults = defaultValues || { key: \"core\", icon: \"core\" };\n      // {obj} .defaults\n      // a value hash of default values for an ABProcessTask\n      // NOTE: needs to be set before .fromValues()\n\n      this.fromValues(attributes);\n\n      this.process = process;\n      if (!this.processID) {\n         this.processID = process.id;\n      }\n      // {ABProcess} .process\n      // The parent ABProcess this process element is a part of.\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n      this.state = null;\n   }\n\n   ///\n   /// Static Methods\n   ///\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      // ABDefinition Related fields:\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || \"process.task.unknown\";\n\n      // ABProcess related fields:\n      this.key = attributes.key || this.defaults.key || \"?key?\";\n      this.processID = attributes.processID || null;\n      this.diagramID = attributes.diagramID || \"?diagramID?\";\n      this.laneDiagramID = attributes.laneDiagramID || \"?laneID?\";\n      // laneDiagramID : connects to the parent object that defines any\n      //      default User information for the Task.  In our case, it\n      //      might be a {ABProcessParticipant} object, or a {ABProcessLane}\n      //      object.  by default, a diagram's Participant obj doesn't define\n      //      any lanes, and therefore can provide that info.  Once a lane\n      //      is added, however, an object is assigned to it, and the\n      //      Lane will provide that info.\n\n      // initialize any defined settings\n      if (this.defaults && this.defaults.settings) {\n         this.defaults.settings.forEach((s) => {\n            if (typeof attributes[s] == \"undefined\") this[s] = null;\n            else this[s] = attributes[s];\n         });\n      }\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label && this.name && this.name != \"\") {\n         this.label = this.name;\n      }\n\n      // untranslate this object:\n      var data = super.toObj();\n\n      var fieldsToSave = [\n         \"id\",\n         \"name\",\n         \"type\",\n         \"processID\",\n         \"diagramID\",\n         \"laneDiagramID\",\n         \"key\",\n      ];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      // save any defined settings\n      if (this.defaults && this.defaults.settings) {\n         this.defaults.settings.forEach((s) => {\n            data[s] = this[s];\n         });\n      }\n\n      return data;\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * errorConfig()\n    * Respond with an error when expected configuration parameters do not\n    * pull data.\n    * @param {obj} instance\n    *        the instance data of this task\n    * @param {string} msg\n    *        the display message for this error.\n    * @param {array[string]} fields\n    *        an array of parameter keys that should be included in the error\n    *        for additional information.\n    * @return {Promise.reject(error)}\n    */\n   errorConfig(instance, msg, fields = []) {\n      this.log(instance, msg);\n      var error = new Error(`${this.type}: ${msg}`);\n      var info = { task: this };\n      if (!Array.isArray(fields)) fields = [fields];\n      fields.forEach((field) => {\n         info[field] = this[field];\n      });\n      this.AB.notify.builder(error, info);\n      return Promise.reject(error);\n   }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context\n    *        the context data of the process instance\n    * @param {obj} defaults\n    *        any values to include from our child classes\n    * @param {obj} val\n    *        any values to override the default state\n    */\n   initState(context, defaults, val) {\n      defaults = defaults || {};\n      if (!val) {\n         val = defaults;\n         defaults = {};\n\n         // in this case, then auto initi blank instanceValues:\n         if (this.defaults && this.defaults.instanceValues) {\n            this.defaults.instanceValues.forEach((v) => {\n               defaults[v] = null;\n            });\n         }\n      }\n\n      context.taskState = context.taskState || {};\n\n      // don't overwrite your settings if they already exist:\n      if (!context.taskState[this.diagramID]) {\n         context.taskState[this.diagramID] = {\n            initialized: true,\n            status: \"initialized\",\n         };\n         for (var d in defaults) {\n            context.taskState[this.diagramID][d] = defaults[d];\n         }\n         for (var v in val) {\n            context.taskState[this.diagramID][v] = val[v];\n         }\n      }\n   }\n\n   /*\n    * @function isEndTask\n    * return true if the current type of task is an End task. False otherwise.\n    * @return {bool}\n    */\n   isEndTask() {\n      return false;\n   }\n\n   /**\n    * log()\n    * enter a log in the current process instance\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {...} ...allArgs the remaining parameters sent to the log\n    */\n   log(instance, ...allArgs) {\n      var text = `${this.diagramID} : ${\n         this.name ? this.name : this.key\n      } : ${allArgs.join(\" \")}`;\n      instance.log.push(text);\n   }\n\n   /**\n    * myLane()\n    * return the ABProcessParticipant | ABProcessLane element we are\n    * in.\n    * @return {ABProcessParticipant|ABProcessLane}\n    */\n   myLane() {\n      return this.process.elementForDiagramID(this.laneDiagramID);\n   }\n\n   /**\n    * myState()\n    * return the current state values for this ABProcessTask\n    * @param {obj} instance  the current ABProcessInstance\n    * @return {obj}\n    */\n   myState(instance) {\n      return instance.context.taskState[this.diagramID];\n   }\n\n   /**\n    * nextTasks()\n    * follow the current instance diagram and return the next task(s)\n    * after this task.\n    * @param {obj} instance  the current ABProcessInstance\n    * @return {array}  [ABProcessTask, ...] or {null} if an error\n    */\n   nextTasks(instance) {\n      var nextTasks = [];\n\n      var myDiagramObj = instance.hashDiagramObjects[this.diagramID];\n      if (!myDiagramObj) {\n         let error = new Error(\n            `Configuration Error: Did not find my definition for dID[${this.diagramID}]`\n         );\n         this.onError(instance, error);\n         return null;\n      }\n\n      // myDiagramObj :\n      // {\n      //     \"bpmn2:outgoing\": [{\"_text\": \"SequenceFlow_00fbxm3\"} ...],\n      //     \"_attributes\": {id: \"StartEvent_1\"},\n      //     \"_type\": \"start\"\n      // }\n\n      // find my possible exits:\n      var exitFlows = myDiagramObj[\"bpmn2:outgoing\"];\n      if (!exitFlows) {\n         let error = new Error(\n            `Configuration Error: Did not find any outgoing flows for dID[${this.diagramID}]`\n         );\n         this.AB.notify.builder(error, { task: this });\n         this.onError(instance, error);\n         return null;\n      }\n\n      if (!Array.isArray(exitFlows)) {\n         exitFlows = [exitFlows];\n      }\n\n      var tasksFromFlow = (flow) => {\n         // follow a flow and grab each of it's exit tasks\n         // place them into nextTasks[];\n\n         var flowObj = instance.hashDiagramObjects[flow[\"_text\"]];\n         if (!flowObj) return;\n\n         var targetIDs = flowObj[\"_attributes\"][\"targetRef\"];\n         if (!targetIDs) return;\n\n         if (!Array.isArray(targetIDs)) {\n            targetIDs = [targetIDs];\n         }\n\n         targetIDs.forEach((tid) => {\n            var targetTask = this.process.elementForDiagramID(tid);\n            if (targetTask) {\n               if (nextTasks) {\n                  nextTasks.push(targetTask);\n               }\n            } else {\n               let error = new Error(\n                  `Configuration Error: No ProcessTask instance for diagramID[${tid}]`\n               );\n               this.AB.notify.builder(error, { task: this });\n               this.onError(instance, error);\n               nextTasks = null;\n            }\n         });\n      };\n\n      exitFlows.forEach((f) => {\n         tasksFromFlow(f);\n      });\n\n      return nextTasks;\n   }\n\n   /**\n    * onError()\n    * perform the following actions (log it) on an error.\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {Error} error\n    */\n   onError(instance, error) {\n      if (error) {\n         var text = `${error.toString()}`;\n         this.log(instance, text);\n      }\n      var myState = this.myState(instance);\n      myState.status = \"error\";\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can request from other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return null;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      return null;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that this element\n    * can provide to other ProcessElements.\n    * @return {array} | null\n    */\n   processDataObjects() {\n      return null;\n   }\n\n   /**\n    * hashProcessDataValues()\n    * return a hash of live Process Data Values\n    * @param {obj} instance\n    * @return {array} | null\n    */\n   hashProcessDataValues(instance) {\n      var listDataFields = this.process.processDataFields(this);\n      var currentProcessValues = {};\n      listDataFields.forEach((f) => {\n         currentProcessValues[f.key] = this.process.processData(this, [\n            instance,\n            f.key,\n         ]);\n      });\n      return currentProcessValues;\n   }\n\n   /**\n    * reset()\n    * prepare this task to run again if it was already completed.\n    *\n    * This might happen in a process where a loop is formed and tasks\n    * are repeated until a certain outcome.\n    *\n    * @param {obj} instance  the current ABProcessInstance\n    */\n   reset(instance) {\n      // a task wants to run me.  Possibly again.\n      var myState = this.myState(instance);\n\n      // if I haven't setup my state (why?) then just\n      // do that again:\n      if (!myState) {\n         this.initState(instance.context);\n      } else {\n         // if I have already \"completed\" and we are being\n         // asked to run again (it's possible)\n         if (myState.status == \"completed\" || myState.status == \"error\") {\n            // remove my current state\n            delete instance.context.taskState[this.diagramID];\n\n            // store a new state in the context\n            this.initState(instance.context);\n\n            // remember our previous state\n            var newState = this.myState(instance);\n            newState._prevState = myState;\n            this.log(instance, \" Reset() called. Running again. \");\n         }\n      }\n   }\n\n   /**\n    * stateCompleted()\n    * mark this task has having completed.\n    * @param {obj} instance  the current ABProcessInstance\n    */\n   stateCompleted(instance) {\n      var myState = this.myState(instance);\n      myState.status = \"completed\";\n   }\n\n   /**\n    * stateUpdate()\n    * update my state values with the given values data\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {obj} values    the new state values\n    */\n   stateUpdate(instance, values) {\n      values = values || {};\n      var myState = this.myState(instance);\n      for (var v in values) {\n         myState[v] = values[v];\n      }\n   }\n\n   /**\n    * wantToDoSomething()\n    * determine if this task still has something to do.\n    * @param {obj} instance  the instance data of the process we are working on\n    * @return {bool} true if there is still pending actions\n    */\n   wantToDoSomething(instance) {\n      var state = this.myState(instance);\n      if (state) {\n         return state.status != \"completed\" && state.status != \"error\";\n      } else {\n         // my state wasn't defined?\n         console.warn(\n            \"ABProcessTaskCore:wantToDoSomething(): called without having initialized our state first.\",\n            instance\n         );\n         // initialize our state and try again\n         this.initState(instance.context);\n         return this.wantToDoSomething(instance);\n      }\n   }\n\n   /**\n    * @method onProcessReady()\n    * Perform any setup actions after the parent process has indicated it is \"ready\"\n    */\n   onProcessReady() {}\n\n   get startElements() {\n      let startElems =\n         this.process.elements(\n            (elem) =>\n               elem && elem.defaults && elem.defaults.category === \"start\"\n         ) || [];\n      return startElems;\n   }\n\n   get previousElements() {\n      return this.process.connectionPreviousTask(this);\n   }\n\n   get objectOfStartElement() {\n      const startElem = this.startElements[0];\n      if (!startElem) return null;\n\n      return this.AB.objectByID(startElem.objectID);\n   }\n\n   get objectOfPrevElement() {\n      let prevElem = this.previousElements[0];\n      if (!prevElem) return null;\n\n      let objectID;\n      switch (prevElem.type) {\n         case \"process.task.service.query\":\n            objectID = prevElem.qlObj ? prevElem.qlObj.objectID : null;\n            break;\n         case \"process.task.service.insertRecord\":\n         default:\n            objectID = prevElem.objectID;\n            break;\n      }\n\n      return this.AB.objectByID(objectID);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskEndDefaults = {\n   category: \"end\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"stop\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to\n   // reference 'fa-user'\n\n   key: \"End\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTaskEndCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.end\";\n      super(attributes, process, AB, ABProcessTaskEndDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskEndDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Terminate End Event\",\n         actionName: \"replace-with-terminate-end\",\n         className: \"bpmn-icon-end-event-terminate\",\n         target: {\n            type: \"bpmn:EndEvent\",\n            eventDefinitionType: \"bpmn:TerminateEventDefinition\",\n         },\n      };\n   }\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // An End Event doesn't perform any other actions\n   //         // than to signal it has successfully completed.\n   //         // But it provides no Additional Tasks to work on.\n   //         // for testing:\n   //         this.stateCompleted(instance);\n   //         this.log(instance, \"End Event Reached\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         triggered: false,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n\n   /*\n    * @function isEndTask\n    * return true if the current type of task is an End task. False otherwise.\n    * @return {bool}\n    */\n   isEndTask() {\n      return true;\n   }\n\n   /**\n    * nextTasks()\n    * return the next tasks to be run after this task is complete.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve([])\n    */\n   nextTasks(instance) {\n      // I'm an End Event.  There are no nextTasks()\n      return [];\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessGatewayExclusiveDefaults = {\n   category: \"gateway\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to\n   // reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"GatewayExclusive\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"conditions\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessGatewayExclusiveCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.gateway.exclusive\";\n      super(attributes, process, AB, ABProcessGatewayExclusiveDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessGatewayExclusiveDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Exclusive Gateway\",\n         actionName: \"replace-with-exclusive-gateway\",\n         className: \"bpmn-icon-gateway-xor\",\n         target: {\n            type: \"bpmn:ExclusiveGateway\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      this.conditions = this.conditions || {};\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        ABProcessGatewayExclusiveDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            userFormID: null,\n            userFormResponse: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.userFormResponse`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskEmailDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"to\",\n      \"from\",\n      \"subject\",\n      \"message\",\n      \"toCustom\",\n      \"fromCustom\",\n      \"toUsers\",\n      \"fromUsers\",\n      \"toCustomFields\",\n      \"fromCustomFields\",\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"email\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"Email\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTaskEmailCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.email\";\n      super(attributes, process, AB, ABProcessTaskEmailDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskEmailDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Send Task\",\n         actionName: \"replace-with-send-task\",\n         className: \"bpmn-icon-send\",\n         target: {\n            type: \"bpmn:SendTask\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      ABProcessTaskEmailDefaults.fields.forEach((f) => {\n         this[f] = attributes[f];\n      });\n   }\n\n   /**\n    * onProcessReady()\n    * Perform our warnings checks once the parent Process is ready\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      ABProcessTaskEmailDefaults.fields.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // for testing:\n   //         var myState = this.myState(instance);\n   //         myState.status = \"completed\";\n   //         this.log(instance, \"Email Sent successfully\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         to: [],\n         from: [],\n         subject: this.subject,\n         message: this.message,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingBatchProcessingDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingBatchProcessing\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"objectBatch\",\n      \"processBatchValue\",\n      \"fieldBatchEntries\",\n      \"fieldBatchFinancialPeriod\",\n      \"objectJE\",\n      \"fieldJEAccount\",\n      \"fieldJERC\",\n      \"fieldJEStatus\",\n      \"fieldJEStatusComplete\",\n      \"objectBR\",\n      \"fieldBRFinancialPeriod\",\n      \"fieldBRAccount\",\n      \"fieldBRRC\",\n      \"fieldBREntries\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingBatchProcessingCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.batchProcessing\";\n      super(attributes, process, AB, AccountingBatchProcessingDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingBatchProcessingDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingFPCloseDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingFPClose\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processFPValue\",\n      \"objectFP\",\n      \"objectGL\",\n      \"objectAcc\",\n      \"fieldFPStart\",\n      \"fieldFPOpen\",\n      \"fieldFPStatus\",\n      \"fieldFPActive\",\n      \"fieldGLStarting\",\n      \"fieldGLRunning\",\n      \"fieldGLAccount\",\n      \"fieldGLRc\",\n      \"fieldGLDebit\",\n      \"fieldGLCredit\",\n      \"fieldAccType\",\n      \"fieldAccAsset\",\n      \"fieldAccExpense\",\n      \"fieldAccLiabilities\",\n      \"fieldAccEquity\",\n      \"fieldAccIncome\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingFPCloseCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.fpClose\";\n      super(attributes, process, AB, AccountingFPCloseDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingFPCloseDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingFPYearCloseDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingFPYearClose\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processFPYearValue\",\n      \"objectFPYear\",\n      \"objectFPMonth\",\n      \"objectGL\",\n      \"objectAccount\",\n      \"valueFundBalances\",\n      \"valueNetIncome\",\n      \"fieldFPYearStart\",\n      \"fieldFPYearEnd\",\n      \"fieldFPYearStatus\",\n      \"fieldFPYearActive\",\n      \"fieldFPMonthStart\",\n      \"fieldFPMonthEnd\",\n      \"fieldGLStartBalance\",\n      \"fieldGLRunningBalance\",\n      \"fieldGLrc\",\n      \"fieldAccNumber\",\n      \"fieldAccType\",\n      \"fieldAccTypeIncome\",\n      \"fieldAccTypeExpense\",\n      \"fieldAccTypeEquity\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingFPYearCloseCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.fpYearClose\";\n      super(attributes, process, AB, AccountingFPYearCloseDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingFPYearCloseDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet AccountingJEArchiveDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"archive\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingJEArchive\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processBatchValue\",\n      \"objectBatch\",\n      \"objectBalance\",\n      \"objectJE\",\n      \"objectJEArchive\",\n\n      \"fieldBatchFiscalMonth\",\n      \"fieldJeAccount\",\n      \"fieldJeRC\",\n      \"fieldJeArchiveBalance\",\n      \"fieldBrFiscalMonth\",\n      \"fieldBrAccount\",\n      \"fieldBrRC\",\n      \"fieldsMatch\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingJEArchiveCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.jeArchive\";\n      super(attributes, process, AB, AccountingJEArchiveDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingJEArchiveDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet CalculateDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"calculator\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"Calculate\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"formulaText\"],\n};\n\nmodule.exports = class CalculateTaskCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.calculate\";\n      super(attributes, process, AB, CalculateDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return CalculateDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      const label = `${this.label}->Value`;\n      // this is a calculate task, so let's include a fake ABFieldNumber\n      // for the .field value, so other tasks that limit their operations\n      // to fields can use this as a number\n      if (!this._fakeNum) {\n         this._fakeObj = this.AB.objectNew({});\n         this._fakeNum = this.AB.fieldNew(\n            { key: \"number\", name: label, label },\n            this._fakeObj\n         );\n      }\n      return {\n         key: `${this.id}.value`,\n         label,\n         field: this._fakeNum,\n      };\n   }\n};\n","/**\n * ABProcessTaskServiceCore\n *\n * This defines the base Service Task element that can be placed on a BPMN\n * diagram.  In our system, we will let the designer choose a sub class\n * to make active for this element.\n *\n * Currently a ServiceTask performs a dedicated operation on the server.\n *  - performing a query, looking up data, etc...\n *\n */\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskServiceDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskService\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskServiceCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service\";\n      super(attributes, process, AB, ABProcessTaskServiceDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskServiceDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Service Task\",\n         actionName: \"replace-with-service-task\",\n         className: \"bpmn-icon-service\",\n         target: {\n            type: \"bpmn:ServiceTask\",\n         },\n      };\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        ABProcessTaskServiceDefaults.fields.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        ABProcessTaskServiceDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            userFormID: null,\n            userFormResponse: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.userFormResponse`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABProcessTaskGetResetPasswordUrlDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"GetResetPasswordUrl\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"email\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskGetResetPasswordUrlCore extends (\n   ABProcessElement\n) {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.getResetPasswordUrl\";\n      super(attributes, process, AB, ABProcessTaskGetResetPasswordUrlDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskGetResetPasswordUrlDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return {\n         key: `${this.id}.url`,\n         label: `${this.label}->URL`,\n      };\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet InsertRecordDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"InsertRecord\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"objectID\",\n      \"fieldValues\",\n      \"isRepeat\",\n      \"repeatMode\",\n      \"repeatColumn\",\n   ],\n};\n\nmodule.exports = class InsertRecordCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.insertRecord\";\n      super(attributes, process, AB, InsertRecordDefaults);\n\n      this.results = [];\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return InsertRecordDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.isRepeat = JSON.parse(attributes.isRepeat || false);\n   }\n\n   get startElement() {\n      let startElem = null;\n      let currProcess = this.process;\n\n      // Find the start (trigger) task\n      while (!startElem && currProcess) {\n         startElem = currProcess.elements(\n            (elem) => elem?.defaults?.category == \"start\"\n         )[0];\n\n         // If .currProcess is a sub task, then go to the parent process for get the start task\n         currProcess = currProcess.process;\n      }\n\n      return startElem;\n   }\n\n   get previousElement() {\n      return this.process.connectionPreviousTask(this)[0];\n   }\n\n   get objectOfStartElement() {\n      let startElem = this.startElement;\n      if (!startElem) return null;\n\n      let startElemObj = this.AB.objectByID(startElem.objectID);\n      return startElemObj;\n   }\n\n   get objectOfPrevElement() {\n      let prevElem = this.previousElement;\n      if (!prevElem) return null;\n\n      let objectID;\n      switch (prevElem.type) {\n         case \"process.task.service.query\":\n            objectID = prevElem.qlObj ? prevElem.qlObj.objectID : null;\n            break;\n         case \"process.task.service.insertRecord\":\n         default:\n            objectID = prevElem.objectID;\n            break;\n      }\n\n      return this.AB.objectByID(objectID);\n   }\n\n   get fieldRepeat() {\n      let obj = this.objectOfStartElement;\n      if (!obj) return null;\n\n      return obj.fields((f) => f.id == this.repeatColumn)[0];\n   }\n\n   /**\n    * processDataFields()\n    * return a single available data field from this element\n    * this will be the record inserted by this task\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return [\n         {\n            key: `${this.id}.[PK]`,\n            label: `${this.label}-> Inserted record [PK]`,\n            field: {\n               id: this.id,\n               object: { id: this.objectID },\n               key: \"InsertedRecord\",\n               columnName: \"uuid\",\n            },\n            object: this.objectID,\n            set: true,\n         },\n      ];\n   }\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n     toObj() {\n         var data = super.toObj();\n \n         AccountingBatchProcessingDefaults.settings.forEach((f) => {\n             data[f] = this[f];\n         });\n \n         return data;\n     }\n     */\n\n   ////\n   //// Process Instance Methods\n   ////\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABQLManager = require(\"../../../platform/ql/ABQLManager.js\");\n\nconst ABProcessTaskServiceQueryDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskServiceQuery\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"qlObj\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskServiceQueryCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.query\";\n      super(attributes, process, AB, ABProcessTaskServiceQueryDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskServiceQueryDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      // Before we make instances of qlObj:\n      this._datasources = [];\n\n      // comvert our qlObj into an ABQLxxx instance.\n      if (this.qlObj) {\n         this.qlObj = ABQLManager.fromAttributes(this.qlObj, this, this.AB);\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      const data = super.toObj();\n\n      // convert qlObj into obj format:\n      if (this.qlObj) data.qlObj = this.qlObj.toObj();\n\n      return data;\n   }\n\n   registerDatasource(obj) {\n      this._datasources.push(obj);\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        const myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      // in this Task, we can return the Response to the UserForm\n      let fields = null;\n\n      if (this._datasources.length > 0) {\n         fields = [];\n\n         this._datasources.forEach((s) => {\n            const param = s.processDataField(this.id, this.label);\n\n            if (param) {\n               fields.push(param);\n            }\n         });\n      }\n\n      return fields;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      const parts = key.split(\".\");\n\n      if (parts[0] === this.id) {\n         const myState = this.myState(instance);\n\n         return myState[parts[1]];\n      }\n\n      return null;\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet SubProcessDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"object-group\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"SubProcess\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"isEnable\",\n      \"parameterId\",\n      \"connectionAttrs\",\n      \"elementIDs\",\n      \"loopType\",\n   ],\n};\n\nconst NOSPAM = {\n   /*message : bool */\n};\n// prevent sending the same message over and over.\n\nmodule.exports = class SubProcessCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.subProcess\";\n      super(attributes, process, AB, SubProcessDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return SubProcessDefaults;\n   }\n\n   static DiagramReplace() {\n      // taken from \"bpmn-js/lib/features/replace/ReplaceOptions\"\n      return {\n         label: \"Sub Process\",\n         actionName: \"replace-with-subprocess\",\n         className: \"bpmn-icon-subprocess-expanded\",\n         target: {\n            type: \"bpmn:SubProcess\",\n            isExpanded: true,\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      // Convert string to boolean\n      this.isEnable = this.isEnable == null ? true : JSON.parse(this.isEnable);\n\n      let currElements = this._elements || {};\n      this._unknownElementIDs = [];\n      this._elements = {};\n      (attributes.elementIDs || []).forEach((eID) => {\n         let ele = this.AB.processElementNew(eID, this);\n         if (ele) {\n            this._elements[eID] = ele;\n         } else {\n            // current eID isn't one of our definitions yet, so might be\n            // a temporary .diagramID from an unsaved task:\n            if (currElements[eID]) {\n               this._elements[eID] = currElements[eID];\n            } else {\n               this._unknownElementIDs.push(eID);\n            }\n         }\n      });\n\n      this._unknownElementIDs.forEach((eID) => {\n         let key = `Process[${this.processID}] Task[${this.label}] is referencing an unknown element id:[${eID}]`;\n         if (!NOSPAM[key]) {\n            let err = new Error(key);\n            this.AB.notify.builder(err, { processTask: this.id, eID });\n            NOSPAM[key] = true;\n         }\n      });\n\n      this._connections = attributes.connectionAttrs || {};\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      let data = super.toObj();\n\n      data.elementIDs = [];\n      for (let e in this._elements) {\n         data.elementIDs.push(this._elements[e].id);\n      }\n\n      data.connectionAttrs = this._connections;\n\n      return data;\n   }\n\n   /**\n    * @method processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataFields(currElement) {\n      if (this.parameterId == null) return [];\n\n      // only call processDataFields once, filter it to get the different queries\n      let dataFieldsAll = this.process.processDataFields(this) || [];\n\n      // get the subtask data\n      let dataFieldOpt = dataFieldsAll.filter(\n         (opt) => opt.key === this.parameterId\n      )[0];\n\n      // get data from insert tasks\n      let dataFieldsAllInserted = dataFieldsAll.filter(\n         (opt) => (opt?.field?.key ?? opt?.field) === \"InsertedRecord\"\n      );\n\n      if (dataFieldOpt == null) return [];\n\n      let result = [];\n\n      // Connect field type\n      if (\n         dataFieldOpt.field &&\n         dataFieldOpt.field.key == \"connectObject\" &&\n         dataFieldOpt.field.datasourceLink &&\n         dataFieldOpt.field.datasourceLink.fields\n      ) {\n         result.push({\n            key: `${this.id}.uuid`,\n            label: `${this.label}->Repeat Data.ID`,\n            object: dataFieldOpt.field.datasourceLink,\n         });\n\n         dataFieldOpt.field.datasourceLink.fields().forEach((f) => {\n            result.push({\n               key: `${this.id}.${f.id}`,\n               label: `${this.label}->Repeat Data.${f.label}`,\n               field: f,\n               object: f.object,\n            });\n         });\n      }\n      // Other field types\n      else {\n         result.push({\n            key: dataFieldOpt.field\n               ? `${this.id}.${dataFieldOpt.field.id}`\n               : `${this.id}.subProcess`,\n            label: `${this.label}->Repeat Data`,\n            field: dataFieldOpt.field,\n            object: dataFieldOpt.object,\n         });\n      }\n\n      dataFieldsAllInserted.forEach((opt) => {\n         result.push({\n            key: `${opt.key || opt.id}`,\n            label: `Parent Process Data->${opt.label}`,\n            field: opt.field,\n            object: opt.object,\n         });\n      });\n\n      // Get any tasks that exist inside the subprocess\n      let previousFields = this.process.processDataFields.call(\n         this,\n         currElement\n      );\n      if (previousFields && previousFields.length > 0) {\n         result = result.concat(previousFields);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method processData()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processData(currElement, params) {\n      let instance = params[0];\n      let key = params[1];\n      let data;\n\n      if (instance && key?.startsWith?.(this.id)) {\n         let fieldId = key.split(\".\")[1];\n         let myState = this.myState(instance);\n         let stateData = myState ? myState.data : null;\n         data = stateData;\n\n         if (stateData && fieldId) {\n            let dataFieldOpt = (\n               this.process.processDataFields(this) || []\n            ).filter((opt) => opt.key == this.parameterId)[0];\n\n            if (dataFieldOpt?.field?.key == \"connectObject\") {\n               if (!Array.isArray(stateData)) stateData = [stateData];\n\n               // Extract data\n               data = stateData.map((item) => {\n                  if (fieldId == \"uuid\" || fieldId == \"id\") {\n                     return item.uuid || item.id || item;\n                  } else if (dataFieldOpt.field.datasourceLink) {\n                     let returnField = dataFieldOpt.field.datasourceLink.fields(\n                        (f) => f.id == fieldId\n                     )[0];\n                     if (returnField) return item[returnField.columnName];\n                     else return item;\n                  }\n               });\n            }\n         }\n      }\n\n      // Filter none data items\n      if (Array.isArray(data)) data = data.filter((d) => d != null);\n\n      if (data == null || data.length == 0)\n         data = this.process.processData.call(this, currElement, params);\n\n      if (data == null || data.length == 0)\n         data = this.process.processData(this, params);\n\n      return data;\n   }\n\n   allPreviousTasks(...params) {\n      return this.process.allPreviousTasks.call(this, ...params);\n   }\n\n   allPreviousConnectionsForElement(...params) {\n      return this.process.allPreviousConnectionsForElement.call(\n         this,\n         ...params\n      );\n   }\n\n   allPreviousConnectionsForConnection(...params) {\n      return this.process.allPreviousConnectionsForConnection.call(\n         this,\n         ...params\n      );\n   }\n\n   //\n   // Diagram Elements\n   //\n\n   /**\n    * @method connections()\n    * return an array of connections that describe the relationships between\n    * our process elements.\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return [{SimpleConnectionObj}]\n    */\n   connections(fn) {\n      return this.process.connections.call(this, fn);\n   }\n\n   /**\n    * @method connectionForDiagramID()\n    * return the connection for the given diagram id\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionForDiagramID(dID) {\n      if (!dID) return;\n\n      return this.process.connectionForDiagramID.call(this, dID);\n   }\n\n   /**\n    * @method connectionsIncoming()\n    * return the connections that are entering this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsIncoming(dID) {\n      if (!dID) return;\n\n      return this.process.connectionsIncoming.call(this, dID);\n   }\n\n   /**\n    * @method connectionsOutgoing()\n    * return the connections that are leaving this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsOutgoing(dID) {\n      if (!dID) return;\n\n      return this.process.connectionsOutgoing.call(this, dID);\n   }\n\n   /**\n    * @method connectionRemove()\n    * remove the connection info for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionRemove(element) {\n      if (!element) return;\n\n      this.process.connectionRemove.call(this, element);\n   }\n\n   /**\n    * @method connectionSimplyElement()\n    * given a BPMN diagram element, return a simplified object that describes\n    * the connection between two elements.\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    * @return {SimpleConnectionObj}\n    *        .id : {string} diagram id of the connection element\n    *        .type : {string} the type of connection\n    *        .from : {string} the diagram id of the source element\n    *        .to : {string} the diagram id of the dest element\n    */\n   connectionSimplyElement(element) {\n      if (!element) return;\n\n      return this.process.connectionSimplyElement.call(this, element);\n   }\n\n   /**\n    * @method connectionUpsert()\n    * add or update the connection information for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionUpsert(element) {\n      if (!element) return;\n\n      this.process.connectionUpsert.call(this, element);\n   }\n\n   /**\n    * @method connectionPreviousTask()\n    * return the ABProcessElement(s) that was a previous Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionPreviousTask(currElement) {\n      if (!currElement) return;\n\n      return this.process.connectionPreviousTask.call(this, currElement);\n   }\n\n   /**\n    * @method elements()\n    * return an array of elements that match the given filter (or all elements\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABProcessTask, ABProcessParticipant, etc...]}\n    */\n   elements(fn = () => true) {\n      return this.process.elements.call(this, fn);\n   }\n\n   /**\n    * @method elementAdd()\n    * insert an element to be tracked by this process.\n    * @param {ABProcessElement} element\n    *        the full instance of an ABProcessElement to track.\n    */\n   elementAdd(element) {\n      if (!element) return;\n\n      this.process.elementAdd.call(this, element);\n   }\n\n   /**\n    * @method elementForDiagramID()\n    * return the object that is tied to the given xml diagram ID.\n    * @param {string} dID the diagram ID\n    * @return {ABProcess[OBJ]}\n    */\n   elementForDiagramID(dID) {\n      if (!dID) return null;\n\n      return this.process.elementForDiagramID.call(this, dID);\n   }\n\n   /**\n    * @method elementRemove()\n    * remove an element from being tracked by this process.\n    * @param {obj|ABProcessElement} def\n    *        a definition of, or full Object instance of the ABProcessElement\n    *        to remove.\n    */\n   elementRemove(def) {\n      if (!def) return;\n\n      this.process.elementRemove.call(this, def);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABFieldList = require(\"../../../platform/dataFields/ABFieldList.js\");\n\nvar ABProcessTaskApprovalDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [\"userFormID\", \"userFormResponse\"],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"Approval\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"who\", \"toUsers\", \"formBuilder\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskUserApprovalCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.user.approval\";\n      super(attributes, process, AB, ABProcessTaskApprovalDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskApprovalDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      function fixBoolean(obj) {\n         if (obj) {\n            Object.keys(obj).forEach((k) => {\n               if (obj[k] == \"false\") {\n                  obj[k] = false;\n               } else if (obj[k] == \"true\") {\n                  obj[k] = true;\n               } else if (typeof obj[k] == \"object\") {\n                  fixBoolean(obj[k]);\n               }\n            });\n         }\n      }\n      fixBoolean(this.formBuilder);\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   /*     \n    toObj() {\n        var data = super.toObj();\n\n        ABProcessTaskApprovalDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n*/\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {};\n        ABProcessTaskApprovalDefaults.instanceValues.forEach((v) => {\n            myDefaults[v] = null;\n        });\n\n        super.initState(context, myDefaults, val);\n    }\n*/\n\n   /*\n    * preProcessFormIOComponents()\n    * we need to parse the form.io components to ensure the proper columnName\n    * and labels are being used. We also will translate the columnNames at this\n    * point in the code\n    */\n   preProcessFormIOComponents() {\n      var fields = this.process.processDataFields(this);\n      if (fields && this.formBuilder && this.formBuilder.components) {\n         this.formBuilder.components.forEach((c) => {\n            if (c.abFieldID) {\n               fields.filter((entry) => {\n                  if (entry.field?.id == c.abFieldID) {\n                     c.label = entry.field.label;\n                     c.key = entry.key;\n                     if (c.data?.values && entry.field.settings.options) {\n                        var vals = [];\n                        entry.field.settings.options.forEach((opt) => {\n                           vals.push({\n                              label: opt.text,\n                              value: opt.id,\n                           });\n                        });\n                        c.data.values = vals;\n                     }\n                  }\n               });\n            } else if (c.components && c.components.length) {\n               c.key = c.path;\n               c.components.forEach((o) => {\n                  if (o.abFieldID) {\n                     // these are plucked conneted values\n                     // gather up all their fields to be used\n                     var pluck = fields.filter((f) => {\n                        return f.key == c.path;\n                     })[0];\n                     if (!pluck) return;\n                     pluck.object.fields().filter((entry) => {\n                        if (entry?.id == o.abFieldID) {\n                           o.label = entry.label;\n                           o.key = entry.columnName;\n                           if (o.data?.values && entry.settings.options) {\n                              var vals = [];\n                              entry.settings.options.forEach((opt) => {\n                                 vals.push({\n                                    label: opt.text,\n                                    value: opt.id,\n                                 });\n                              });\n                              o.data.values = vals;\n                           }\n                        }\n                     });\n                  }\n               });\n            }\n         });\n      }\n      return this.formBuilder;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      // we need to get the button events defined by the form.io formBuilder\n      var options = [];\n      this.formBuilder.components.forEach((comp) => {\n         if (comp.type == \"button\" && comp.action == \"event\" && comp.event) {\n            options.push({\n               id: comp.event,\n               text: comp.label,\n            });\n         }\n      });\n      // in this Task, we can return the Response to the UserForm\n      // The Response can be in the form of a List Field, with one or more\n      // return options.\n\n      var myID = this.diagramID;\n\n      // create an ABFieldList object:\n      // make sure the options follow what is currently defined for our\n      // responses:\n      var myObj = this.AB.objectNew({});\n      var listField = new ABFieldList(\n         {\n            id: `${myID}.userFormResponse`,\n            label: `${this.label}->Response`,\n            columnName: `${myID}.userFormResponse`,\n            settings: {\n               options: options,\n            },\n         },\n         myObj\n      );\n\n      // NOTE: We are pretending our response is a type of ABFieldList. But our\n      // ABField objects no longer allow \".\" in our columnNames:\n      //    ( https://github.com/digi-serve/appbuilder_class_core/blob/212cf5fa1c1d5c959aa246c730582ed50809ee0f/dataFields/ABFieldCore.js#L262 )\n      // But our Process tasks really will be expecting it there so lets put\n      // it back:\n      listField.columnName = `${myID}.userFormResponse`;\n\n      return [\n         {\n            key: `${myID}.userFormResponse`,\n            label: `${this.label}->Response`,\n            field: listField,\n            object: null,\n         },\n      ];\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      if (key) {\n         var parts = key.split(\".\");\n         if (parts[0] == this.diagramID) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n         }\n      }\n      return null;\n   }\n};\n","/**\n * ABProcessTaskUserCore\n *\n * This defines the base User Task element that can be placed on a BPMN\n * diagram.  In our system, we will let the designer choose a sub class\n * to make active for this element.\n *\n * Currently a UserTask expects a human user to perform an action.  These\n * actions are in the possible forms:\n *  - confirm offline action\n *  - approve data\n *  - fill out a form\n *\n */\n\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskUserDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"user\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskUser\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskUserCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.user\";\n      super(attributes, process, AB, ABProcessTaskUserDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskUserDefaults;\n   }\n\n   static DiagramReplace() {\n      // taken from \"bpmn-js/lib/features/replace/ReplaceOptions\"\n      return {\n         label: \"User Task\",\n         actionName: \"replace-with-user-task\",\n         className: \"bpmn-icon-user\",\n         target: {\n            type: \"bpmn:UserTask\",\n         },\n      };\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // for testing:\n   //         var myState = this.myState(instance);\n   //         myState.status = \"completed\";\n   //         this.log(instance, \"Email Sent successfully\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         roles: [],\n         ui: null,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABProcessTaskUserExternalDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [\"userFormID\", \"userFormResponse\"],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"External\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"who\", \"toUsers\", \"url\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nconst settings = {\n   who: 0,\n   toUsers: null,\n   url: \"\",\n};\n\nmodule.exports = class ABProcessTaskUserExternalCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      for (const key in settings)\n         attributes[key] = attributes[key] ?? settings[key];\n      super(\n         Object.assign(\n            {\n               type: \"process.task.service.external\",\n            },\n            attributes\n         ),\n         process,\n         AB,\n         ABProcessTaskUserExternalDefaults\n      );\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskUserExternalDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return [\n         {\n            key: `${this.id}.userFormResponse`,\n            label: `${this.label}->Response`,\n         },\n      ];\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTriggerDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"key\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"Trigger\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTriggerCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"trigger\";\n      super(attributes, process, AB, ABProcessTriggerDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTriggerDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Signal Start Event\",\n         actionName: \"replace-with-signal-start\",\n         className: \"bpmn-icon-start-event-signal\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"bpmn:SignalEventDefinition\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.triggerKey = attributes.triggerKey || \"triggerKey.??\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.triggerKey = this.triggerKey;\n\n      return data;\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTrigger = require(\"../../../platform/process/tasks/ABProcessTrigger.js\");\n\nvar ABProcessTaskTriggerLifecycleDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"objectID\",\n      \"lifecycleKey\" /* , \"triggerKey\" is tracked in ABProcessTrigger */,\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"key\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"TriggerLifecycle\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTriggerLifecycle extends ABProcessTrigger {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"trigger\";\n      super(attributes, process, AB, ABProcessTaskTriggerLifecycleDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskTriggerLifecycleDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Object Lifecycle Trigger\",\n         actionName: \"replace-with-signal-lifecycle-start\",\n         // type: {string} a unique key to reference this element\n         className: \"bpmn-icon-start-event-signal\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"ab:SignalLifecycle\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.objectID = attributes.objectID || \"objID.??\";\n      this.lifecycleKey = attributes.lifecycleKey || \"lifecycle.key??\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.objectID = this.objectID;\n      data.lifecycleKey = this.lifecycleKey;\n      return data;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      var fields = null;\n      if (this.objectID) {\n         fields = [];\n         var object = this.AB.objectByID(this.objectID);\n         if (object) {\n            var myID = this.diagramID;\n            object.fields().forEach((field) => {\n               fields.push({\n                  key: `${myID}.${field.id}`,\n                  label: `${this.label}->${object.label}->${field.label}`,\n                  field,\n                  object,\n               });\n            });\n            fields.push({\n               key: `${myID}.uuid`,\n               label: `${this.label}->${object.label}`,\n               field: null,\n               object,\n            });\n         } else {\n            // OK, so we have an this.objectID defined, but we can't find it.\n            // that's something we need to alert:\n            var error = new Error(\n               `ABProcessTriggerLifecycleCore.processDataFields():TaskID[${this.id}]: could not find referenced object by ID [${this.objectID}]`\n            );\n            this.AB.notify.builder(error, {\n               task: this.id,\n               objID: this.objectID,\n            });\n         }\n      }\n      return fields;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      var parts = key.split(\".\");\n      if (parts[0] == this.diagramID) {\n         var myState = this.myState(instance);\n         if (myState[\"data\"]) {\n            var object = this.AB.objectByID(this.objectID);\n            var field = object.fields((f) => {\n               return f.id == parts[1];\n            })[0];\n            if (field) {\n               if (parts[2]) {\n                  return field[parts[2]].call(field, myState[\"data\"]);\n               } else {\n                  // instance.context.data[field.column_name];\n                  // if field is \"calculate\" or \"TextFormula\" data is not stored\n                  // in data base and we need to run format method\n                  if ([\"calculate\", \"TextFormula\"].indexOf(field.key) != -1) {\n                     return field.format(myState[\"data\"]);\n                  } else if (\n                     field.key == \"connectObject\" ||\n                     field.key == \"user\"\n                  ) {\n                     return (\n                        myState[\"data\"][field.relationName()] ||\n                        myState[\"data\"][field.columnName]\n                     );\n                  } else {\n                     return myState[\"data\"][field.columnName];\n                  }\n               }\n            } else if (parts[1] == \"uuid\") {\n               return myState[\"data\"][\"uuid\"];\n            } else {\n               ///\n               /// Questioning the validity of this section of code.\n               /// In order to get here, we tried to find field, and it\n               /// didn't exist.\n               /// then we turn around and REPEAT the same attempt\n               /// and check for field again.\n               /*\n               // parts[1] should be a field.id\n               object = this.AB.objectByID(this.objectID);\n               field = object.fields((f) => {\n                  return f.id == parts[1];\n               })[0];\n               if (field) {\n                  if (parts[2]) {\n                     return field[parts[2]].call(field, myState[\"data\"]);\n                  } else {\n                     // instance.context.data[field.column_name];\n                     return myState[\"data\"][field.columnName];\n                  }\n               }\n               */\n            }\n         }\n      }\n      return null;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that this element\n    * can provide to other ProcessElements.\n    * @return {array} | null\n    */\n   processDataObjects() {\n      var objects = null;\n      if (this.objectID) {\n         objects = [this.AB.objectByID(this.objectID)];\n      }\n      return objects;\n   }\n};\n","const ABProcessTrigger = require(\"../../../platform/process/tasks/ABProcessTrigger.js\");\n\nvar ABProcessTaskTriggerLifecycleDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"repeatEvery\",\n      \"repeatTime\",\n      \"repeatDaily\",\n      \"repeatWeekly\",\n      \"repeatMonthly\",\n      \"isEnabled\",\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"clock-o\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"TimerStartEvent\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   repeatEvery: \"daily\",\n   repeatTime: \"01:00\",\n   repeatDaily: \"day\",\n   repeatWeekly: \"FRI\",\n   repeatMonthly: \"last\",\n   isEnabled: true,\n};\n\nmodule.exports = class ABProcessTriggerTimer extends ABProcessTrigger {\n   constructor(attributes, process, application) {\n      attributes.type = attributes.type || \"trigger\";\n      super(\n         attributes,\n         process,\n         application,\n         ABProcessTaskTriggerLifecycleDefaults\n      );\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskTriggerLifecycleDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Timer Start Event\",\n         actionName: \"replace-with-signal-timer-start\",\n         // type: {string} a unique key to reference this element\n         className: \"bpmn-icon-start-event-timer\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"ab:SignalTriggerTimer\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.repeatEvery =\n         attributes.repeatEvery ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatEvery;\n\n      this.repeatDaily =\n         attributes.repeatDaily ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatDaily;\n\n      this.repeatWeekly =\n         attributes.repeatWeekly ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatWeekly;\n\n      this.repeatMonthly =\n         attributes.repeatMonthly ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatMonthly;\n\n      // Convert UTC to local time\n      if (attributes.repeatTime) {\n         let timeVals = attributes.repeatTime.split(\":\");\n         let currDate = new Date();\n         currDate.setUTCHours(timeVals[0]);\n         currDate.setUTCMinutes(timeVals[1]);\n         this.repeatTime = `${currDate.getHours()}:${currDate.getMinutes()}`;\n      } else {\n         this.repeatTime = ABProcessTaskTriggerLifecycleDefaults.repeatTime;\n      }\n\n      if (typeof attributes.isEnabled != \"undefined\") {\n         this.isEnabled = JSON.parse(attributes.isEnabled);\n      } else {\n         this.isEnabled = ABProcessTaskTriggerLifecycleDefaults.isEnabled;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.repeatEvery = this.repeatEvery;\n      data.repeatDaily = this.repeatDaily;\n      data.repeatWeekly = this.repeatWeekly;\n      data.repeatMonthly = this.repeatMonthly;\n\n      // Convert local time to UTC\n      data.repeatTime = this.repeatTime;\n      if (data.repeatTime && data.repeatTime instanceof Date) {\n         data.repeatTime = `${data.repeatTime.getUTCHours()}:${data.repeatTime.getMinutes()}`;\n      }\n\n      data.isEnabled = this.isEnabled;\n\n      return data;\n   }\n\n   getCronExpression() {\n      let timeVals = this.repeatTime.split(\":\");\n      let second = \"*\";\n      let minute = timeVals[1];\n      let hour = timeVals[0];\n      let day;\n      let month;\n      let dayWeek;\n      let year = \"*\";\n\n      switch (this.repeatEvery) {\n         case \"daily\":\n            day = \"*\";\n            month = \"*\";\n            dayWeek = this.repeatDaily == \"weekday\" ? \"1-5\" : \"*\";\n            break;\n         case \"weekly\":\n            day = \"*\";\n            month = \"*\";\n            dayWeek = this.repeatWeekly;\n            break;\n         case \"monthly\":\n            day = this.repeatMonthly;\n            month = \"*\";\n            dayWeek = \"*\";\n            break;\n      }\n\n      return `${second} ${minute} ${hour} ${day} ${month} ${dayWeek} ${year}`;\n   }\n};\n","/*\n * ABQL\n *\n * An ABQL defines the base class for our AB Query Language Objects.\n * These classes share a common way to\n *   - parse input strings for commands\n *\n *\n */\nvar ABEmitter = require(\"../../platform/ABEmitter\");\nclass ABQLCore extends ABEmitter {\n   constructor(attributes, parameterDefinitions, prevOP, task, AB) {\n      super();\n\n      // manage the incoming Parameter Definitions\n      if (!Array.isArray(parameterDefinitions)) {\n         parameterDefinitions = [parameterDefinitions];\n      }\n\n      this.parameterDefinitions = parameterDefinitions;\n\n      this.object = prevOP ? prevOP.object : null;\n      // {ABObject}\n      // The current {ABObject} the current Query Language Operation is associated\n      // with.\n\n      // if the previous Operation defined an .objectOut then our .object is THAT\n      // one.\n      if (prevOP && prevOP.objectOut) this.object = prevOP.objectOut;\n\n      this.prevOP = prevOP;\n      this.task = task;\n      // {ABProcessTaskxxx}\n      // This is running under a specific ABProcessTaskServiceQuery.  When\n      // searching for data from the Process, we must go through this.task\n      // to do so.\n\n      this.AB = AB;\n      this.next = null;\n\n      this.fromAttributes(attributes);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n   initObject(attributes) {}\n\n   fromAttributes(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n\n      // super.fromValues(attributes);\n      this.key = this.constructor.key ?? null;\n\n      // this.entryComplete = attributes.entryComplete || false;\n      this.params = attributes.params ?? {};\n      // {hash}\n      // The configuration values entered by the AppBuilder UI for this\n      // operation.\n\n      this.objectID = attributes.objectID || null;\n\n      // be sure to do a hard lookup if an objectID was saved:\n      if (this.objectID) this.object = this.objectLookup(this.objectID);\n\n      this.initObject(attributes);\n\n      // at least dump a warning here:\n      if (this.objectID && !this.object)\n         this.AB.notify.developer(\n            new Error(\n               `ABQLCore.fromAttributes(): unable to initialize ABObject [${this.objectID}]`\n            ),\n            {\n               attributes,\n               objectID: this.objectID,\n            }\n         );\n\n      if (attributes.next) {\n         let nextOP = null;\n\n         (this.NextQLOps ?? this.constructor.NextQLOps).forEach((OP) => {\n            if (OP.key === attributes.next.key) nextOP = OP;\n         });\n\n         if (nextOP) {\n            // exact match, so add next:\n            const qlOP = new nextOP(attributes.next, this, this.task, this.AB);\n\n            this.next = qlOP;\n         }\n      }\n   }\n\n   /**\n    * @method objectLookup()\n    * return a matching {ABObject} that is represented by the given id.\n    * NOTE: we will try to match on: our initial .objectID first, then\n    * the given objID.\n    * NOTE: this will match an object.id as well as object.label\n    * @param {string} objID\n    */\n   objectLookup(objID) {\n      return this.AB.objects((o) => {\n         const quotedLabel = `\"${o.label}\"`;\n\n         return (\n            // o.id === this.objectID ||\n            o.id === objID || quotedLabel.indexOf(objID) === 0\n         );\n      })[0];\n   }\n\n   /**\n    * @method availableProcessDataFieldsHash()\n    * return a { \"field.key\" => {processFieldDef} } hash of the currently\n    * available fields in the process.\n    * @return {obj}\n    */\n   availableProcessDataFieldsHash() {\n      const availableProcessDataFields =\n         this.task.process.processDataFields(this.task) ?? [];\n      const hashFieldIDs = {};\n\n      availableProcessDataFields.forEach((f) => {\n         if (f.field) {\n            hashFieldIDs[f.field.id] = f;\n         } else {\n            hashFieldIDs[f.key] = f;\n         }\n      });\n\n      return hashFieldIDs;\n   }\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {}\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABQL instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      const obj = {\n         key: this.constructor.key,\n         // entryComplete: this.entryComplete,\n         params: this.params,\n         // currQuery: this.currQuery,\n         // queryValid: this.queryValid,\n         objectID: this.object?.id ?? null,\n      };\n\n      if (this.next) {\n         obj.next = this.next.toObj();\n      }\n\n      return obj;\n   }\n}\n\nmodule.exports = ABQLCore;\n","/*\n * ABQLFindCore\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\nconst NextQLOps = require(\"./ABQLSet.js\");\n// {array} of {ABQLxxx} options\n// this is an array of what possible next Operations can come after an\n// ABQLFind task is complete.  In this case the {ABQLSet} operations come\n// next.  {ABQLSet} operations work on a Set|{Array} or data results.\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectConditions\",\n      name: \"cond\",\n   },\n];\n\nclass ABQLFindCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLFindCore.key = \"find\";\nABQLFindCore.label = \"find\";\nABQLFindCore.NextQLOps = NextQLOps;\n\nmodule.exports = ABQLFindCore;\n","/*\n * ABQLManagerCore\n *\n * An interface for managing the different ABQL Operations available in our\n * AppBuilder.\n *\n */\n\nconst QLObject = require(\"../../platform/ql/ABQLRootObject.js\");\nconst QLOps = [QLObject];\n\nconst ABQLManagerCore = {\n   /**\n    * @method fromAttributes()\n    * return an {ABQL} object that represents the given attributes that\n    * were saved from the previous .toObj()\n    * @param {object} attributes\n    *\t\t  the values returned from the previous .toObj() call\n    * @param {ABProcessTask***} task\n    *\t\t  the current ABProcessTaskServiceQuery that contains this QL\n    * @param {ABFactory} AB\n    *\t\t  the current ABFactory we are operating under.\n    * @return {ABQL} | null\n    */\n   fromAttributes: function (attributes, task, AB) {\n      if (!attributes) return null;\n\n      const matchingOPs = [];\n\n      ABQLManagerCore.QLOps.forEach((Op) => {\n         if (Op.key === attributes.key) matchingOPs.push(Op);\n      });\n\n      if (matchingOPs.length === 1) {\n         // let this Operation initialize and return the last OP\n         // in the chain\n         const qlOP = new matchingOPs[0](attributes, task, AB);\n\n         return qlOP;\n      } else return null;\n   },\n\n   /**\n    * @array QLOps\n    * An array of the root QL Operations.\n    */\n   QLOps: QLOps,\n};\nmodule.exports = ABQLManagerCore;\n","/*\n * ABQLRootObjectCore\n *\n * An ABQL defines a Query Language Operation. A QL Operation\n * is intended to be evaluated at run time and return a value that can be\n * assigned to form value or an object.\n *\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n\n// Define the Operations that can be performed off of a RootObject.\n// Each Root Object might have a different set of Operations, so we\n// define them here.\nconst QLFind = require(\"../../platform/ql/ABQLFind.js\");\nconst NextQLOps = [QLFind];\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectName\",\n      name: \"name\",\n   },\n];\n\nclass ABQLObjectCore extends ABQL {\n   constructor(attributes, task, AB) {\n      // NOTE: keep this so we can insert the prevOp == null\n      super(attributes, ParameterDefinitions, null, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n   initObject(/* attributes */) {\n      if (!this.object && this.params) {\n         const objNameDef = this.parameterDefinitions.find((pDef) => {\n            return pDef.type === \"objectName\";\n         });\n\n         if (objNameDef) {\n            this.objectID = this.params[objNameDef.name];\n            this.object = this.objectLookup(this.objectID);\n         }\n\n         if (!this.object) {\n            // This function exists on platform_web but not platform_service\n            this.warningMessage?.(\"has no object set.\", {\n               objectID: this.objectID,\n            });\n         }\n      }\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      // if we don't have an objectID, but we have an objectName parameter\n      // definition then save that as our objectID\n      if (!obj.objectID && this.params) {\n         const objNameDef = this.parameterDefinitions.find((pDef) => {\n            return pDef.type === \"objectName\";\n         });\n\n         if (objNameDef) obj.objectID = this.params[objNameDef.name];\n      }\n\n      return obj;\n   }\n}\n\nABQLObjectCore.key = \"object\";\nABQLObjectCore.label = \"object\";\nABQLObjectCore.NextQLOps = NextQLOps;\n\nmodule.exports = ABQLObjectCore;\n","/*\n * ABQLRow\n *\n * Defines all the QL operations that can be performed on a Row of data. This is a\n * Single row/instance of an object.\n *\n */\n\nconst QLUpdate = require(\"../../platform/ql/ABQLRowUpdate.js\");\nconst QLSave = require(\"../../platform/ql/ABQLRowSave\");\nconst QLPluck = require(\"../../platform/ql/ABQLRowPluck\");\n\nmodule.exports = [QLUpdate, QLSave, QLPluck];\n","/*\n/*\n * ABQLRowPluckCore\n *\n * An ABQLRowPluckCore can process a value of data and puck out a specified\n * field to then make an object of values that only contain that field.\n *\n */\n\n// const ABQLValue = require(\"./ABQLValue.js\");\n// const ABQLSet = require(\"./ABQLSet.js\");\nconst ABQLSetPluck = require(\"../../platform/ql/ABQLSetPluck.js\");\nconst ABQLRowUpdate = require(\"../../platform/ql/ABQLRowUpdate.js\");\nconst ABQLRowSave = require(\"../../platform/ql/ABQLRowSave.js\");\n\nclass ABQLRowPluckCore extends ABQLSetPluck {\n   // Dynamic NextQLOps\n   get NextQLOps() {\n      let nextQLOps = [];\n\n      const field = this.field ?? this.object.fieldByID(this.fieldID) ?? null;\n\n      // Update .NextQLOps WARN: update to static it affects to every ABQLRowPluck instances.\n      switch (field?.key) {\n         // M:1 M:N connect field, then set ABQLSet to next steps\n         case \"connectObject\":\n            if (field.settings.linkType === \"many\") {\n               // NOTE: Could not require(\"./ABQLSet.js\") on the top. It returns an empty object. Why ><\n               const ABQLSet = require(\"./ABQLSet.js\");\n\n               nextQLOps = ABQLSet;\n\n               break;\n            }\n\n            // return ABQLRow.js\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) =>\n                  NextQLOp.key === this.constructor.key ||\n                  NextQLOp.key === ABQLRowUpdate.key\n            );\n\n            break;\n\n         case \"user\":\n            // TODO set this up corectlys\n            if (\n               field.settings.linkType === \"many\" ||\n               field.settings.isMultiple // may be unnessicary\n            ) {\n               // NOTE: Could not require(\"./ABQLSet.js\") on the top. It returns an empty object. Why ><\n               const ABQLSet = require(\"./ABQLSet.js\");\n\n               nextQLOps = ABQLSet;\n\n               break;\n            }\n\n            // default\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) =>\n                  NextQLOp.key === this.constructor.key ||\n                  NextQLOp.key === ABQLRowUpdate.key ||\n                  NextQLOp.key === ABQLRowSave.key\n            );\n\n            break;\n\n         default:\n            // Normal field and _PK\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) => NextQLOp.key === ABQLRowSave.key\n            );\n\n            break;\n      }\n\n      return nextQLOps;\n   }\n}\n\nABQLRowPluckCore.key = \"row_pluck\";\nABQLRowPluckCore.label = \"Read the value from the field\";\nABQLRowPluckCore.NextQLOps = []; // Static NextQLOps\n\nmodule.exports = ABQLRowPluckCore;\n","/*\n/*\n * ABQLRowSaveCore\n *\n * An ABQLRowSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLSetSave = require(\"../../platform/ql/ABQLSetSave.js\");\n\nclass ABQLRowSaveCore extends ABQLSetSave {}\n\nABQLRowSaveCore.key = \"row_save\";\nABQLRowSaveCore.label = \"Save the value as\";\nABQLRowSaveCore.NextQLOps = [];\n// NOTE: currently, this is an ending step. but it doesn't have to be...\n\nmodule.exports = ABQLRowSaveCore;\n","/*\n * ABQLRowUpdateCore\n *\n * An ABQLRow Update allows you to update the values on the current\n * Row of data.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n// const ABQLRow = require(\"./ABQLRow.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectValues\",\n      name: \"values\",\n   },\n];\n\nclass ABQLRowUpdateCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = prevOP.constructor.NextQLOps;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLRowUpdateCore.key = \"update\";\nABQLRowUpdateCore.label = \"Update this record\";\nABQLRowUpdateCore.NextQLOps = [];\n// NOTE: .NextQLOps => see the #Hack in the constructor\n\nmodule.exports = ABQLRowUpdateCore;\n","/*\n * ABQLSet\n *\n * Here we define the group of operations that can be performed on a SET of data.\n * A SET is an array of objects/row data.\n *\n */\n\nmodule.exports = [\n   require(\"../../platform/ql/ABQLSetFirst.js\"),\n   require(\"../../platform/ql/ABQLSetPluck.js\"),\n   require(\"../../platform/ql/ABQLSetSave.js\"),\n];\n","/*\n/*\n * ABQLSetFirstCore\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\nconst ABQLRow = require(\"./ABQLRow.js\");\n// {array} of {ABQLxxx} options\n// this is an array of what possible next Operations can come after an\n// ABQLSetFirst task is complete.  In this case the {ABQLRow} operations come\n// next.  {ABQLRow} operations work on a single row of data.\n\nclass ABQLSetFirstCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, [], prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLSetFirstCore.key = \"first\";\nABQLSetFirstCore.label = \"Select the first record\";\nABQLSetFirstCore.NextQLOps = ABQLRow;\n\nmodule.exports = ABQLSetFirstCore;\n","/*\n/*\n * ABQLSetPluckCore\n *\n * An ABQLSetPluck can process a set (array) of data and puck out a specified\n * field to then make an array of values that only contain that field.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n// const ABQLSet = require(\"./ABQLSet.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectFields\",\n      name: \"fieldID\",\n   },\n];\n\nclass ABQLSetPluckCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromAttributes(attributes) {\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = this.prevOP.constructor.NextQLOps;\n\n      // we need to gather our .field and .objectOut before we\n      // allow our base class to continue forward:\n\n      this.fieldID = attributes.fieldID;\n      this.field = this.object?.fieldByID(this.fieldID);\n\n      //// TODO: figure out how to dynamically update the next row of options\n      //// based upon the current choice of field.\n      // // based upon the type of field, we now configure what next steps\n      // // are available.\n      // if (this.field) {\n      //    // if connected, then we can stay with same .NextQLOps\n      //    // so we can just leave what we did above.\n\n      //    // if a discreet value, then we need to remove SetPluck\n      //    if (!this.field.isConnection) {\n      //       this.constructor.NextQLOps = [\n      //          ...this.prevOP.constructor.NextQLOps,\n      //       ].filter((o) => o.key != this.constructor.key);\n      //    }\n      // }\n\n      if (attributes.objectOutID)\n         this.objectOut = this.objectLookup(attributes.objectOutID);\n\n      super.fromAttributes(attributes);\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.fieldID) {\n         obj.fieldID = this.fieldID;\n\n         if (this.objectOut) obj.objectOutID = this.objectOut.id;\n      } else {\n         obj.fieldID = this.params.field || null;\n\n         const field = this.object.fieldByID(obj.fieldID);\n\n         if (field?.isConnection) obj.objectOutID = field.datasourceLink.id;\n      }\n\n      return obj;\n   }\n}\n\nABQLSetPluckCore.key = \"set_pluck\";\nABQLSetPluckCore.label = \"Read the value from the field\";\nABQLSetPluckCore.NextQLOps = [];\n\nmodule.exports = ABQLSetPluckCore;\n","/*\n/*\n * ABQLSetSaveCore\n *\n * An ABQLSetSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"taskParam\",\n      name: \"task_param\",\n   },\n];\n\nclass ABQLSetSaveCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n\n      // TODO: register with the task that we can provide data.\n      if (this.taskParam) {\n         task.registerDatasource(this);\n         this.registered = true;\n      }\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromAttributes(attributes) {\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = this.prevOP.constructor.NextQLOps;\n\n      super.fromAttributes(attributes);\n\n      this.taskParam = attributes.taskParam || this.params.task_param;\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      obj.taskParam = this.taskParam || this.params.task_param;\n\n      return obj;\n   }\n\n   processDataField(id, label) {\n      // we have to report back on:\n      // key:  id.taskParam\n      // label: label->taskParam\n      // object: ABObject\n      // field: ABField\n      // set : {bool}\n\n      let field = null;\n      // {ABField}\n      // if the value being stored is NOT a connectObject, then it is\n      // a particular field in the previous object.\n\n      // if we are saving a specific field of an Object, pass that\n      // ABField along:\n      if (this.prevOP?.field?.key !== \"connectObject\")\n         field = this?.prevOP?.field;\n\n      return {\n         key: `${id}.${this.taskParam || this.params.task_param}`,\n         label: `${label}->${this.taskParam || this.params.task_param}`,\n         field: field,\n         object: this.object,\n         set: true,\n      };\n   }\n}\n\nABQLSetSaveCore.key = \"set_save\";\nABQLSetSaveCore.label = \"Save the value as\";\nABQLSetSaveCore.NextQLOps = [];\n// NOTE: currently, this is an ending step. but it doesn't have to be...\n\nmodule.exports = ABQLSetSaveCore;\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCSVExporterDefaults = {\n   key: \"csvExporter\", // unique key identifier for this ABViewForm\n   icon: \"download\", // icon reference: (without 'fa-' )\n   labelKey: \"CSV Exporter\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewCSVExporterPropertyComponentDefaults = {\n   dataviewID: null,\n   where: null,\n   buttonLabel: \"Export CSV\",\n   filename: \"exportCSV\",\n   hasHeader: true,\n   width: 150,\n   hiddenFieldIds: [],\n};\n\nmodule.exports = class ABViewCSVExporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewCSVExporterDefaults\n      );\n   }\n\n   static common() {\n      return ABViewCSVExporterDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCSVExporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert to boolean\n      if (typeof values.settings.hasHeader == \"string\")\n         this.settings.hasHeader = JSON.parse(values.settings.hasHeader);\n\n      if (this.settings.hasHeader == null)\n         this.settings.hasHeader =\n            ABViewCSVExporterPropertyComponentDefaults.hasHeader;\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         values.settings.width ||\n            ABViewCSVExporterPropertyComponentDefaults.width\n      );\n\n      this.settings.hiddenFieldIds =\n         values.settings.hiddenFieldIds ||\n         ABViewCSVExporterPropertyComponentDefaults.hiddenFieldIds;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\n\nconst ABViewCSVImporterDefaults = {\n   key: \"csvImporter\",\n   // {string}\n   // unique key identifier for this ABViewForm\n\n   icon: \"upload\",\n   // {string}\n   // font-awesome icon reference: (without 'fa-' )\n\n   labelKey: \"CSV Importer\",\n   // {string}\n   // the multilingual label key for the class label\n   // NOTE: will be used as L(labelKey)\n};\n\nconst ABViewCSVImporterPropertyComponentDefaults = {\n   dataviewID: null,\n   // {uuid}\n   // The ABDataCollection.uuid that we are using to store the data.\n   // NOTE: we actually use the DC to get the ABObject it is connected to.\n\n   availableFieldIds: [],\n   //{array}\n   // A list of ABField.ids that are allowed to be imported using this widget.\n\n   buttonLabel: \"Upload CSV\",\n   // {string}\n   // The Label(key) to display on the initial button\n\n   width: 0,\n   // {integer}\n   // Width of the Popup.\n\n   recordRules: [],\n   // {array}  [ {RecordRule}, ... ]\n   // A list of ABViewRuleListFormRecordRules that should be performed upon\n   // each row of data imported.\n   // The Array should look like:\n   // [{\n   //    action: {string},\n   //    when: [\n   //       {\n   //          fieldId: {UUID},\n   //          comparer: {string},\n   //          value: {string}\n   //       }\n   //    ],\n   //    values: [\n   //       {\n   //          fieldId: {UUID},\n   //          value: {object}\n   //       }\n   //    ]\n   // }]\n};\n\nmodule.exports = class ABViewCSVImporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewCSVImporterDefaults\n      );\n   }\n\n   /**\n    * @method common()\n    * Provides the default settings for an instance of an ABViewCSVImporter\n    * @return {json}\n    */\n   static common() {\n      return ABViewCSVImporterDefaults;\n   }\n\n   /**\n    * @method defaultValues()\n    * Provides the default settings for an instance of an ABViewCSVImporter\n    * Component that is displayed on the UI.\n    * @return {json}\n    */\n   static defaultValues() {\n      return ABViewCSVImporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewCSVImporterPropertyComponentDefaults.width\n      );\n   }\n\n   get RecordRule() {\n      let object = this.datacollection?.datasource;\n      if (!object) return null;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   doRecordRulesPre(rowDatas) {\n      if (rowDatas && !Array.isArray(rowDatas)) {\n         rowDatas = [rowDatas];\n      }\n\n      rowDatas.forEach((row) => {\n         this.RecordRule?.processPre({ data: row.data || row, form: this });\n      });\n   }\n\n   doRecordRules(rowDatas) {\n      if (rowDatas && !Array.isArray(rowDatas)) {\n         rowDatas = [rowDatas];\n      }\n\n      if (!this.RecordRule) return Promise.resolve();\n\n      let tasks = [];\n\n      rowDatas.forEach((row) => {\n         tasks.push(\n            this.RecordRule.process({ data: row.data || row, form: this })\n         );\n      });\n\n      return Promise.all(tasks);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCarouselPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid\n\n   width: 460,\n   height: 275,\n   showLabel: true,\n   hideItem: false,\n   hideButton: false,\n   navigationType: \"corner\", // \"corner\" || \"side\"\n   filterByCursor: false,\n\n   detailsPage: null, // uuid\n   detailsTab: null, // uuid\n   editPage: null, // uuid\n   editTab: null, // uuid\n};\n\nconst ABViewDefaults = {\n   key: \"carousel\", // {string} unique key for this view\n   icon: \"clone\", // {string} fa-[icon] reference for this view\n   labelKey: \"Carousel\", // {string} the multilingual label key for the class label\n};\n\nfunction parseIntOrDefault(_this, key) {\n   if (typeof _this.settings[key] != \"undefined\") {\n      _this.settings[key] = parseInt(_this.settings[key]);\n   } else {\n      _this.settings[key] = ABViewCarouselPropertyComponentDefaults[key];\n   }\n}\n\nfunction parseOrDefault(_this, key) {\n   try {\n      _this.settings[key] = JSON.parse(_this.settings[key]);\n   } catch (e) {\n      _this.settings[key] = ABViewCarouselPropertyComponentDefaults[key];\n   }\n}\n\nmodule.exports = class ABViewCarouselCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCarouselPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      parseIntOrDefault(this, \"width\");\n      parseIntOrDefault(this, \"height\");\n\n      // json\n      parseOrDefault(this, \"showLabel\");\n      parseOrDefault(this, \"hideItem\");\n      parseOrDefault(this, \"hideButton\");\n\n      this.settings.navigationType =\n         this.settings.navigationType ||\n         ABViewCarouselPropertyComponentDefaults.navigationType;\n\n      parseOrDefault(this, \"filterByCursor\");\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   get imageField() {\n      let dc = this.datacollection;\n      if (!dc) return null;\n\n      let obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.field);\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartAreaPropertyComponentDefaults = {\n   areaType: \"area\",\n   isLegend: 1,\n   // chartWidth: 600,\n   chartHeight: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"area\", // {string} unique key for this view\n   icon: \"area-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Area\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartAreaCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartAreaPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.areaType =\n         this.settings.areaType ||\n         ABViewChartAreaPropertyComponentDefaults.areaType;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartAreaPropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartAreaPropertyComponentDefaults.chartWidth);\n      this.settings.chartHeight = parseInt(\n         this.settings.chartHeight ??\n            ABViewChartAreaPropertyComponentDefaults.chartHeight\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartAreaPropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartAreaPropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartAreaPropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"areaLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartBarPropertyComponentDefaults = {\n   barType: \"bar\",\n   barPreset: \"column\",\n   isLegend: 1,\n   // chartWidth: 600,\n   height: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"bar\", // {string} unique key for this view\n   icon: \"bar-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Bar\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartBarCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartBarPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.barType =\n         this.settings.barType ||\n         ABViewChartBarPropertyComponentDefaults.barType;\n\n      this.settings.barPreset =\n         this.settings.barPreset ||\n         ABViewChartBarPropertyComponentDefaults.barPreset;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartBarPropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartBarPropertyComponentDefaults.chartWidth);\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartBarPropertyComponentDefaults.height\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartBarPropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartBarPropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartBarPropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"barLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewChartPropertyComponentDefaults = {\n   dataviewID: \"\",\n   columnValue: \"\",\n   columnLabel: \"\",\n   columnValue2: \"\",\n   isPercentage: 1,\n   showLabel: 1,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   multipleSeries: 0,\n};\n\nconst ABViewChartDefaults = {\n   key: \"chart\", // {string} unique key for this view\n   icon: \"bar-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Chart\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewChartDefaults);\n   }\n\n   static common() {\n      return ABViewChartDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.dataviewID =\n         this.settings.dataviewID ??\n         ABViewChartPropertyComponentDefaults.dataviewID;\n\n      this.settings.columnValue =\n         this.settings.columnValue ??\n         ABViewChartPropertyComponentDefaults.columnValue;\n\n      this.settings.columnLabel =\n         this.settings.columnLabel ??\n         ABViewChartPropertyComponentDefaults.columnLabel;\n\n      this.settings.columnValue2 =\n         this.settings.columnValue2 ??\n         ABViewChartPropertyComponentDefaults.columnValue2;\n\n      this.settings.isPercentage = parseInt(\n         this.settings.isPercentage ??\n            ABViewChartPropertyComponentDefaults.isPercentage\n      );\n\n      this.settings.showLabel = parseInt(\n         this.settings.showLabel ??\n            ABViewChartPropertyComponentDefaults.showLabel\n      );\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewChartPropertyComponentDefaults.labelPosition;\n\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth ??\n            ABViewChartPropertyComponentDefaults.labelWidth\n      );\n\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartPropertyComponentDefaults.height\n      );\n\n      this.settings.multipleSeries = parseInt(\n         this.settings.multipleSeries ??\n            ABViewChartPropertyComponentDefaults.multipleSeries\n      );\n\n      this.translate(this, this, [\"chartLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      const viewsToAllow = [\"label\", \"pie\", \"bar\", \"line\", \"area\"];\n      return this.application.viewAll((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   labelField() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnLabel);\n   }\n\n   valueField() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnValue);\n   }\n\n   valueField2() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnValue2);\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartLinePropertyComponentDefaults = {\n   lineType: \"line\",\n   linePreset: \"plot\",\n   isLegend: 1,\n   // chartWidth: 600,\n   chartHeight: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"line\", // {string} unique key for this view\n   icon: \"line-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Line\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartLineCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartLinePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.lineType =\n         this.settings.lineType ||\n         ABViewChartLinePropertyComponentDefaults.lineType;\n\n      this.settings.linePreset =\n         this.settings.linePreset ||\n         ABViewChartLinePropertyComponentDefaults.linePreset;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartLinePropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartLinePropertyComponentDefaults.chartWidth);\n      this.settings.chartHeight = parseInt(\n         this.settings.chartHeight ??\n            ABViewChartLinePropertyComponentDefaults.chartHeight\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartLinePropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartLinePropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartLinePropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"lineLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartPiePropertyComponentDefaults = {\n   pieType: \"pie\",\n   isLegend: 1,\n   // chartWidth: 600,\n   height: 200,\n   innerFontSize: 12,\n   labelFontSize: 12,\n};\n\nconst ABViewDefaults = {\n   key: \"pie\", // {string} unique key for this view\n   icon: \"pie-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Pie\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartPieCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartPiePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.pieType =\n         this.settings.pieType ||\n         ABViewChartPiePropertyComponentDefaults.pieType;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartPiePropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartPiePropertyComponentDefaults.chartWidth);\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartPiePropertyComponentDefaults.height\n      );\n\n      this.settings.innerFontSize = parseInt(\n         this.settings.innerFontSize ??\n            ABViewChartPiePropertyComponentDefaults.innerFontSize\n      );\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartPiePropertyComponentDefaults.labelFontSize\n      );\n\n      this.translate(this, this, [\"pieLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCommentPropertyComponentDefaults = {\n   dataviewID: null,\n   columnUser: null,\n   columnComment: null,\n   columnDate: null,\n   height: 300,\n   label: \"\", // label is required and you can add more if the component needs them\n   // format:0  \t// 0 - normal, 1 - title, 2 - description\n};\n\nconst ABViewDefaults = {\n   key: \"comment\", // {string} unique key for this view\n   icon: \"comments\", // {string} fa-[icon] reference for this view\n   labelKey: \"Comment\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewCommentCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCommentPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      // this.settings.format = parseInt(this.settings.format);\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.height = parseInt(this.settings.height || 0);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   getCurrentUserId() {\n      const userObject = this.getUsers();\n      const currentUser = this.AB.Account.username();\n      //Anonymous User = 0\n\n      if (!userObject) return;\n\n      return userObject.findIndex((e) => e.value === currentUser) + 1;\n   }\n\n   getUsers() {\n      return this.AB.Account.userList().map((e) => {\n         return {\n            id: e.username,\n            value: e.username,\n            image: e.image_id,\n         };\n      });\n   }\n\n   getUserField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnUser);\n   }\n\n   getCommentField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnComment);\n   }\n\n   getDateField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnDate);\n   }\n\n   getUserData() {\n      let UserImageField = this.AB.objectUser().fieldByID(\n         \"6383ce19-b344-44ee-87e6-decced7361f8\"\n      );\n\n      var userObject = this.getUsers();\n      var userList = [];\n\n      if (!userObject) return;\n\n      userObject.forEach((item, index) => {\n         var imageURL = \"\";\n         if (item.image) {\n            imageURL = UserImageField.urlImage(item.image);\n         }\n         var user = { id: index + 1, value: item.value, image: imageURL };\n         userList.push(user);\n      });\n      return userList;\n   }\n\n   model() {\n      let dv = this.datacollection;\n      if (!dv) return null; // TODO: refactor in v2\n\n      // get ABModel\n      let model = dv.model; // already notified\n      if (!model) return null;\n\n      return model;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewPropertyDefaults = {\n   dataviewID: null,\n   filterConditions: {},\n};\n\nconst ABViewDefaults = {\n   key: \"conditionalcontainer\", // unique key identifier for this ABView\n   icon: \"shield\", // icon reference: (without 'fa-' )\n   labelKey: \"Conditional Container\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewConditionalContainerCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      const L = (...params) => this.AB.Multilingual.label(...params);\n\n      // the conditional container always has 'If' and 'Else' panels\n      if (this.views((v) => v instanceof ABViewContainer).length < 2) {\n         this._views = [];\n\n         // 'If' panel\n         const ifPanel = application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: L(\"If\"),\n               name: \"If\",\n               settings: {\n                  removable: false,\n               },\n            },\n            application,\n            this\n         );\n\n         this._views.push(ifPanel);\n\n         // 'Else' panel\n         const elsePanel = application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: L(\"Else\"),\n               name: \"Else\",\n               settings: {\n                  removable: false,\n               },\n            },\n            application,\n            this\n         );\n\n         this._views.push(elsePanel);\n      }\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * For a Conditional Container, we don't allow any other items to be placed on it.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewConnectDataFilterPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid\n};\n\nconst ABViewDefaults = {\n   key: \"connect-data-filter\", // {string} unique key for this view\n   icon: \"filter\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connected Data Filter\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewConnectDataFilterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewConnectDataFilterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","/*\n * ABViewContainerCore\n *\n * An ABViewContainerCore defines a UI display component.\n *\n * A container might have multiple columns of display info.\n *\n */\n\nconst ABView = require(\"../../platform/views/ABView\");\n\n// function L(key, altText) {\n// \treturn AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABViewDefaults = {\n   key: \"viewcontainer\", // {string} unique key for this view\n   icon: \"braille\", // {string} fa-[icon] reference for this view\n   labelKey: \"Container\", // {string} the multilingual label key for the class label\n};\n\nconst ABPropertyComponentDefaults = {\n   columns: 1,\n   gravity: 1,\n   movable: true,\n   removable: true,\n};\n\nmodule.exports = class ABViewContainerCore extends ABView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    * @param {obj} defaultValues special sub class defined default values.\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.columns = parseInt(\n         this.settings.columns || ABPropertyComponentDefaults.columns\n      );\n\n      if (typeof this.settings.gravity != \"undefined\") {\n         this.settings.gravity.map(function (gravity) {\n            return parseInt(gravity);\n         });\n      }\n\n      if (this.settings.removable != null) {\n         this.settings.removable = JSON.parse(this.settings.removable); // convert to boolean\n      } else {\n         this.settings.removable = ABPropertyComponentDefaults.removable;\n      }\n\n      if (this.settings.movable != null) {\n         this.settings.movable = JSON.parse(this.settings.movable); // convert to boolean\n      } else {\n         this.settings.movable = ABPropertyComponentDefaults.movable;\n      }\n   }\n\n   viewsSortByPosition() {\n      // Sort views from y, x positions\n      return this.views().sort((a, b) => {\n         if (a.position.y == b.position.y) return a.position.x - b.position.x;\n         else return a.position.y - b.position.y;\n      });\n   }\n\n   // saveReorder() {\n   //    return this.application.viewReorder(this);\n   // }\n};\n","/*\n * ABViewCore\n *\n * ABViewCore defines the common ABView structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABView classes.\n *\n */\n\nvar ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABViewDefaults = {\n   key: \"view\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.view\", // {string} the multilingual label key for the class label\n   tabicon: \"\", // no default tab icons\n};\n\nconst ABViewPropertyComponentDefaults = {\n   label: \"\",\n};\n\nmodule.exports = class ABViewCore extends ABMLClass {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super([\"label\"], application.AB);\n\n      this.__events = [];\n      // keep track of any event listeners attached to this ABView object\n\n      this.defaults = defaultValues || ABViewDefaults;\n\n      this.application = application;\n\n      this.parent = parent || null;\n\n      this.warningsSilent = false;\n      // {bool}\n      // Should we suppress our configuration warnings?\n\n      this.__missingViews = [];\n      // {array}\n      // Any ABView.id we have stored that we can't find.\n\n      this.fromValues(values);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyComponentDefaults;\n   }\n\n   /**\n    * @method newInstance()\n    * return a new instance of this ABView.  Most likely called from interfaces\n    * that create new UI elements like the ABDesigner.\n    * @param {ABApplication} application  \t: the root ABApplication this view is under\n    * @param {ABView/ABApplication} parent\t: the parent object of this ABView.\n    * @return {ABView}\n    */\n   static newInstance(application, parent) {\n      // return a new instance from ABViewManager:\n      return application.viewNew(\n         { key: this.common().key },\n         application,\n         parent\n      );\n   }\n\n   viewKey() {\n      return this.defaults.key;\n   }\n\n   viewIcon() {\n      return this.defaults.icon;\n   }\n\n   tabIcon() {\n      return this.defaults.tabicon;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABView instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // // NOTE: ensure we have a uuid() set:\n      // if (!this.id) {\n      //    this.id = this.application.uuid();\n      // }\n\n      // this.application.unTranslate(this, this, [\"label\"]);\n\n      // MLClass translation\n      var obj = super.toObj();\n\n      var result = {\n         id: this.id,\n         type: this.type || \"view\",\n         key: this.key,\n         icon: this.icon,\n         tabicon: this.tabicon,\n         name: this.name,\n         settings: this.AB.cloneDeep(this.settings || {}),\n         accessLevels: this.accessLevels,\n         translations: obj.translations,\n      };\n\n      // encode our child view references\n      result.viewIDs = (this._views || []).map((v) => v.id).filter((id) => id);\n      result.viewIDs = result.viewIDs.concat(this.__missingViews);\n\n      if (this.position) result.position = this.position;\n\n      // encode our .isRoot() reference.\n      // (NOTE: this is set so our server side code can distinguish) between a .view\n      // and a root page:\n      // NOTE: we intentionally do NOT pull this out in .fromValues()\n      result.isRoot = this.isRoot();\n\n      return result;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id; // NOTE: only exists after .save()\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = values.type || \"view\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.key = values.key || this.viewKey();\n      // {string} .key\n      // the unique lookup key for our ABViewManager to create new\n      // instances of this object.\n\n      this.icon = values.icon || this.viewIcon();\n      // {string} .icon\n      // the font awesome icon reference for showing an icon for this\n      // view in the AppBuilder interface builder.\n\n      this.tabicon = values.tabicon || this.tabIcon();\n\n      this.name = values.name;\n      // {string} .name\n      // A name reference for this ABView. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      values.settings = values.settings || {};\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.settings = values.settings || {};\n      // {obj} .settings\n      // the property settings for this ABView\n\n      // make sure .settings.height is an int and not a string\n      this.settings.height = parseInt(this.settings.height || 0);\n\n      this.accessLevels = values.accessLevels || {};\n      // {obj} .accessLevels\n      // Hash: { ABRole.id : accessLevel }\n      // tracks the Role -> AccessLevel settings of this particular\n      // view.\n      // accessLevel: 0 : no access, 1 : view only, 2: full access\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n\n      // If the View / DataCollection does not have a .name already,\n      // use the English label translation as the .name instead.\n      if (!this.name && Array.isArray(this.translations)) {\n         for (var i = 0; i < this.translations.length; i++) {\n            if (i == 0) {\n               // Use the first label found, in case there is no 'en'\n               this.name = this.translations[i].label;\n            }\n            if (this.translations[i].language_code == \"en\") {\n               // But the 'en' label will have final priority\n               this.name = this.translations[i].label;\n               break;\n            }\n         }\n      }\n\n      // default value for our label\n      if (this.label == \"?label?\") {\n         if (this.parent) {\n            this.label = this.parent.label + \".\" + this.defaults.key;\n         }\n      }\n\n      var views = [];\n      this.__missingViews = this.__missingViews || [];\n      (values.viewIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            views.push(this.application.viewNew(def, this.application, this));\n         } else {\n            this.__missingViews.push(id);\n         }\n      });\n      this._views = views;\n\n      // convert from \"0\" => 0\n      this.position = values.position || {};\n\n      if (this.position.x != null) this.position.x = parseInt(this.position.x);\n      if (this.position.y != null) this.position.y = parseInt(this.position.y);\n\n      this.position.dx = parseInt(this.position.dx || 1);\n      this.position.dy = parseInt(this.position.dy || 1);\n   }\n\n   isRoot() {\n      return this.parent == null || this.parent == this.application;\n   }\n\n   /**\n    * @method allParents()\n    * return a flattened array of all the ABViews parents\n    * @return {array}      array of ABViews\n    */\n   allParents() {\n      var parents = [];\n      var curView = this;\n\n      // add current view to array\n      parents.unshift(curView);\n\n      while (!curView.isRoot() && curView.parent) {\n         parents.unshift(curView.parent);\n\n         curView = curView.parent;\n      }\n\n      return parents;\n   }\n\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABViewPage is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   isAccessibleForRoles(roles) {\n      var foundRole = false;\n\n      var accessibleRoles = Object.keys(this.accessLevels) || [];\n      (roles || []).forEach((r) => {\n         if (accessibleRoles.indexOf(r.uuid || r) > -1) {\n            foundRole = true;\n         }\n      });\n\n      return foundRole;\n   }\n\n   /**\n    * @method getUserAccess()\n    *\n    * return the access level of the current user on the current view\n    *\n    * @return {integer}  // 0 = No Access // 1 = Read Only // 2 = Full Access\n    */\n   getUserAccess() {\n      // by default everyone has no access\n      var accessLevel = 0;\n\n      if (this.application.isAccessManaged) {\n         // check to see if the current users is the access manager\n         var isAccessManager = false;\n         // first check if manager is defined by their role\n         if (parseInt(this.application.accessManagers.useRole) == 1) {\n            // if so check if any of the user's role match the managers\n            this.AB.Account.roles().forEach((role) => {\n               if (\n                  this.application.accessManagers.role.indexOf(\n                     role.id || role.uuid\n                  ) > -1\n               ) {\n                  // if so set the access level to full access\n                  isAccessManager = true;\n                  accessLevel = 2;\n               }\n            });\n         }\n         // if the user isn't already set as the manager and the manager is defined by their account\n         if (\n            !isAccessManager &&\n            parseInt(this.application.accessManagers.useAccount) == 1\n         ) {\n            // check if the user's account matches the managers\n            if (\n               this.application.accessManagers.account.indexOf(\n                  this.AB.Account.uuid() + \"\"\n               ) > -1\n            ) {\n               // if so set the access level to full access\n               isAccessManager = true;\n               accessLevel = 2;\n            }\n         }\n\n         // if the user is not the manager check if the page has access levels defined for roles\n         if (\n            this.accessLevels &&\n            Object.keys(this.accessLevels).length > 0 &&\n            !isAccessManager\n         ) {\n            // check to see if the user's roles matches one of the roles defined\n            this.AB.Account.roles().forEach((role) => {\n               var currentRole = this.accessLevels[role.id || role.uuid];\n               if (currentRole && parseInt(currentRole) > accessLevel)\n                  // if the access level is higher than a previous role set to the new level\n                  accessLevel = parseInt(currentRole);\n            });\n         }\n      } else {\n         accessLevel = 2;\n      }\n\n      return accessLevel;\n   }\n\n   /**\n    * @method parentFormComponent\n    * return the closest form object this component is on.\n    */\n   parentFormComponent() {\n      var form = null;\n\n      var curr = this;\n      while (curr.key != \"form\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"form\") {\n         form = curr;\n      }\n\n      return form;\n   }\n\n   /**\n    * @method parentDetailComponent\n    * return the closest detail object that this component is on.\n    * @returns {ABViewDetail} detail component\n    */\n   parentDetailComponent() {\n      var detail = null;\n\n      var curr = this;\n      while (curr.key != \"detail\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"detail\") {\n         detail = curr;\n      }\n\n      return detail;\n   }\n\n   pageParent(filterFn) {\n      if (filterFn == null) filterFn = () => true;\n\n      // if current page is the root page, then return itself.\n      if (this.isRoot()) {\n         return this;\n      }\n\n      var parentPage = this.parent;\n      while (\n         parentPage &&\n         (parentPage.key != \"page\" || !filterFn(parentPage))\n      ) {\n         parentPage = parentPage.parent;\n      }\n\n      return parentPage;\n   }\n\n   pageRoot() {\n      var rootPage = this.pageParent();\n\n      while (!rootPage.isRoot()) {\n         rootPage = rootPage.pageParent();\n      }\n\n      return rootPage;\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this view.  This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this view object.\n    * @return {string}\n    */\n   urlPointer() {\n      if (this.parent) {\n         return this.parent.urlView() + this.id;\n      } else {\n         return this.application.urlPage() + this.id;\n      }\n   }\n\n   /**\n    * @method urlView\n    * return a string pointer to this object's views.\n    * @return {string}\n    */\n   urlView() {\n      return this.urlPointer() + \"/_views/\";\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    *\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) {\n         if (\n            [\"form\", \"grid\", \"line\", \"area\", \"bar\", \"gantt\", \"kanban\"].indexOf(\n               this.key\n            ) > -1\n         ) {\n            // NOTE: ignore kanban side forms where this is the case:\n            if (this.key == \"form\" && this._currentObject) return null;\n\n            if (this.warningsSilent) return null;\n\n            var errNoDCID = new Error(\n               `ABViewCore:get datacollection(): View[${this.key}] didn't define a dataviewID.`\n            );\n            this.AB.notify.builder(errNoDCID, {\n               view: this,\n               settings: this.settings,\n            });\n         } else {\n            // These views shouldn't matter if they don't have a datacollection.\n            if (\n               [\"button\", \"label\", \"page\", \"tab\", \"viewcontainer\"].indexOf(\n                  this.key\n               ) == -1\n            ) {\n               console.warn(\n                  `TODO: figure out which ABView* require a .dataviewID: ${this.key}?`\n               );\n            }\n         }\n         return null;\n      }\n\n      var dc = this.AB.datacollectionByID(dataviewID);\n      if (!dc) {\n         var errNoDC = new Error(\n            `View[${this.label}][${this.id}] is unable to find associated DataCollection`\n         );\n         this.AB.notify.builder(errNoDC, {\n            view: this,\n            dataviewID,\n         });\n      }\n      return dc;\n   }\n\n   ///\n   /// Update Access accessLevels\n   ///\n\n   /**\n    * @method updateAccessLevels()\n    *\n    *\n    * @param {string} roleId\n    *\n    * @param {string} accessLevel\n    *\n    * @return {Promise}\n    *\n    */\n   updateAccessLevels(roleId, accessLevel) {\n      if (parseInt(accessLevel) == 0) {\n         if (this.accessLevels[roleId]) delete this.accessLevels[roleId];\n      } else {\n         this.accessLevels[roleId] = accessLevel;\n      }\n\n      return this.save(false, false);\n   }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    *\n    * return an array of all the ABViews children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViews that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\n    *\n    * @return {array} \tarray of ABViews\n    */\n   views(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._views || this._views.length < 1) return result;\n\n      // find into recursively\n      if (filter && deep) {\n         result = result.concat(this._views.filter(filter));\n\n         this._views.forEach((v) => {\n            var subViews = v.views(filter, deep);\n            if (subViews && subViews.length > 0) {\n               result = result.concat(subViews);\n            }\n         });\n      } else {\n         result = this._views.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewNew()\n    *\n    *\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return this.application.viewNew(\n         values,\n         application || this.application,\n         parent || this\n      );\n   }\n\n   /**\n    * @method viewDestroy()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewDestroy(view) {\n      console.error(\"DEPRECIATED: where is this called?\");\n      return this.viewRemove(view);\n   }\n\n   /**\n    * @method viewRemove()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewRemove(view) {\n      var origLen = this._views.length;\n      this._views = this.views(function (v) {\n         return v.id != view.id;\n      });\n\n      if (this._views.length < origLen) {\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewInsert()\n    *\n    * persist the current ABView in our list of ._views.\n    *\n    * @param {ABView} object\n    * @return {Promise}\n    */\n   viewInsert(view) {\n      var isIncluded =\n         this.views(function (v) {\n            return v.id == view.id;\n         }).length > 0;\n      if (!isIncluded) {\n         this._views.push(view);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewReorder()\n    *\n    * reorder the current ABView in our list of ._views.\n    *\n    * @param {string} viewId - id of the active view\n    * @param {string} toPosition - 'to' postion\n    * @return {Promise}\n    */\n   viewReorder(viewId, toPosition) {\n      var from = this._views.findIndex((v) => v.id == viewId);\n      if (from < 0) return;\n\n      // move drag item to 'to' position\n      this._views.splice(toPosition, 0, this._views.splice(from, 1)[0]);\n\n      // save to database\n      return this.save(true);\n   }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // unsubscribe events\n      this.eventClear(true);\n\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABView\n            // be sure to remove any of it's ABViews as well\n            // This cleans out any dangling ABDefinitions\n\n            var allViewDeletes = [];\n            var allViews = this.views();\n            this._views = [];\n            // doing ._views = [] prevents any of my updates when\n            // a sub-view is .destroy()ed\n\n            allViews.forEach((v) => {\n               allViewDeletes.push(v.destroy());\n            });\n            return Promise.all(allViewDeletes);\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects\n            if (this.parent && !this.pages) {\n               return this.parent.viewRemove(this);\n            }\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABView\n    * @return {Promise}\n    *\t\t.resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects:\n            if (this.parent && !this.pages) {\n               // if we have a .parent, make sure we are included in our .parent's\n               // viewIDs\n               return this.parent.viewInsert(this);\n            }\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   ///\n   /// Events\n   ///\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    * \t\t\t\t\t\t\temitter: object,\n    * \t\t\t\t\t\t\teventName: string,\n    * \t\t\t\t\t\t\tlistener: function\n    * \t\t\t\t\t\t}\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      var exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    * @param {bool} deep - clear events of child views\n    */\n   eventClear(deep) {\n      if (deep) {\n         this.views().forEach((v) => {\n            v.eventClear(deep);\n         });\n      }\n\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   /**\n    * @method clone()\n    * clone the definitions of this ABView object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    * @return {obj}\n    *        obj defs of this ABView\n    */\n   clone(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pages\", \"views\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.viewNew(config, this.application, parent);\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // copy sub pages\n      if (this.pages && !options.ignoreSubPages) {\n         result._pages = [];\n         this.pages().forEach((p) => {\n            let copiedSubPage = p.clone(lookUpIds, result, options);\n            copiedSubPage.parent = result;\n\n            result._pages.push(copiedSubPage);\n         });\n      }\n\n      // copy sub views\n      if (this.views && !options.ignoreSubViews) {\n         result._views = [];\n         this.views().forEach((v) => {\n            let copiedView = v.clone(lookUpIds, result, options);\n\n            result._views.push(copiedView);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABView object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    *        options.newName {string}\n    *             new user determined name for page\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pageIDs\", \"viewIDs\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.application.viewNew(config, this.application, parent);\n\n      // keep the parent\n      result.parent = parent || this.parent;\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application.\n         // pages with null parent ids default to getting put on root\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // page's name should not be duplicate\n      if (this.key == \"page\") {\n         result.name =\n            options?.newName ||\n            `${result.name}_copied_${this.AB.uuid().slice(0, 3)}`;\n\n         result.label = options?.newName || `${result.label} (copied)`;\n      }\n\n      return Promise.resolve()\n         .then(() => {\n            // copy sub pages\n            var allSaves = [];\n\n            if (this._pages && !options.ignoreSubPages) {\n               result._pages = [];\n               this.pages().forEach((p) => {\n                  // this prevents result.save() from happening on each of these\n                  // p.copy():\n                  if (p.isRoot())\n                     this.application._pages.push({ id: lookUpIds[p.id] });\n\n                  allSaves.push(\n                     p\n                        .copy(lookUpIds, result, options)\n                        .then((copiedSubPage) => {\n                           copiedSubPage.parent = result;\n                           // remove the temp {id:} entry above:\n                           this.application._pages =\n                              this.application._pages.filter(\n                                 (p2) => p2.id != lookUpIds[p.id]\n                              );\n\n                           // now add the full copiedSubPage:\n                           result._pages.push(copiedSubPage);\n                        })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // copy sub views\n            var allSaves = [];\n\n            if (this._views && !options.ignoreSubViews) {\n               result._views = [];\n               this.views().forEach((v) => {\n                  allSaves.push(\n                     // send a null for parent, so that the .save() wont trigger\n                     // a save of the parent.\n                     v.copy(lookUpIds, result, options).then((copiedView) => {\n                        // now patch up the parent connection:\n                        // copiedView.parent = result;\n                        if (\n                           result._views.filter((vi) => vi.id == copiedView.id)\n                              .length < 1\n                        ) {\n                           result._views.push(copiedView);\n                        }\n                     })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // now we do 1 save for all the views\n            return result.save();\n         })\n         .then(() => {\n            return result;\n         });\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewDataFilterPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid,\n   viewType: \"advanced\",\n   showFilter: 1,\n   showSort: 1,\n};\n\nconst ABViewDefaults = {\n   key: \"data-filter\", // {string} unique key for this view\n   icon: \"filter\", // {string} fa-[icon] reference for this view\n   labelKey: \"Data Filter\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDataFilterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDataFilterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewDataSelectPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n};\n\nconst ABViewDefaults = {\n   key: \"data-select\", // {string} unique key for this view\n   icon: \"chevron-circle-down\", // {string} fa-[icon] reference for this view\n   labelKey: \"Data Select\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDataSelectCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDataSelectPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewDetail = require(\"../../platform/views/ABViewDetail\");\n\nconst ABViewDataviewPropertyComponentDefaults = {\n   xCount: 1, // {int} the number of columns per row (need at least one)\n   detailsPage: \"\",\n   detailsTab: \"\",\n   editPage: \"\",\n   editTab: \"\",\n};\n\nconst ABViewDataviewDefaults = {\n   key: \"dataview\", // {string} unique key for this view\n   icon: \"th\", // {string} fa-[icon] reference for this view\n   labelKey: \"Data view\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDataviewCore extends ABViewDetail {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewDataviewDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDataviewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDataviewPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.xCount = parseInt(\n         this.settings.xCount || ABViewDataviewPropertyComponentDefaults.xCount\n      );\n      this.settings.detailsPage =\n         this.settings.detailsPage ||\n         ABViewDataviewPropertyComponentDefaults.detailsPage;\n      this.settings.editPage =\n         this.settings.editPage ||\n         ABViewDataviewPropertyComponentDefaults.editPage;\n      this.settings.detailsTab =\n         this.settings.detailsTab ||\n         ABViewDataviewPropertyComponentDefaults.detailsTab;\n      this.settings.editTab =\n         this.settings.editTab ||\n         ABViewDataviewPropertyComponentDefaults.editTab;\n   }\n\n   parentDetailComponent() {\n      let dataview = null;\n\n      let curr = this;\n      while (curr.key != \"dataview\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"dataview\") {\n         dataview = curr;\n      }\n\n      return dataview;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailCheckboxPropertyComponentDefaults = {};\n\nconst ABViewDetailCheckboxDefaults = {\n   key: \"detailcheckbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailCheckboxCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailCheckboxPropertyComponentDefaults;\n   }\n};\n","// const ABViewDetailSelectivity = require(\"../../platform/views/ABViewDetailSelectivity\");\nconst ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n};\n\nconst ABViewDefaults = {\n   key: \"detailconnect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailConnectCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewDetailDefaults = {\n   key: \"detail\", // {string} unique key for this view\n   icon: \"file-text-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"Detail\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewDetailPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 0,\n};\n\nmodule.exports = class ABViewDetailCore extends ABViewContainer {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDetailDefaults);\n   }\n\n   static common() {\n      return ABViewDetailDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewDetailPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewDetailPropertyComponentDefaults.showLabel\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth ||\n            ABViewDetailPropertyComponentDefaults.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewDetailPropertyComponentDefaults.height\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      let viewsToAllow = [\"label\", \"text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   addFieldToDetail(field, yPosition) {\n      if (field == null) return;\n\n      let newView = field.detailComponent().newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings ?? {};\n      newView.settings.fieldId = field.id;\n      newView.settings.labelWidth =\n         this.settings.labelWidth ||\n         ABViewDetailPropertyComponentDefaults.labelWidth;\n\n      // keep alias to support Query that contains alias name\n      // [alias].[columnName]\n      newView.settings.alias = field.alias;\n\n      // TODO : Default settings\n\n      newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailCustomPropertyComponentDefaults = {};\n\nconst ABViewDetailCustomDefaults = {\n   key: \"detailcustom\", // {string} unique key for this view\n   icon: \"dot-circle-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.custom\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailCustomCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailCustomPropertyComponentDefaults;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailImagePropertyComponentDefaults = {\n   height: 80,\n   width: 120,\n};\n\nconst ABViewDetailImageDefaults = {\n   key: \"detailimage\", // {string} unique key for this view\n   icon: \"image\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.image\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailImageCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailImageDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailImageDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailImagePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height ||\n            ABViewDetailImagePropertyComponentDefaults.height\n      );\n      this.settings.width = parseInt(\n         this.settings.width ?? ABViewDetailImagePropertyComponentDefaults.width\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nmodule.exports = class ABViewDetailItemCore extends ABViewWidget {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   detailComponent() {\n      let detailView = null;\n\n      let curr = this;\n      while (\n         !curr.isRoot() &&\n         curr.parent &&\n         curr.key != \"detail\" &&\n         curr.key != \"dataview\"\n      ) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"detail\" || curr.key == \"dataview\") {\n         detailView = curr;\n      }\n\n      return detailView;\n   }\n\n   field() {\n      let detailComponent = this.detailComponent();\n      if (detailComponent == null) return null;\n\n      let datacollection = detailComponent.datacollection;\n      if (datacollection == null) return null;\n\n      let object = datacollection.datasource;\n      if (object == null) return null;\n\n      let field = object.fields((v) => v.id == this.settings.fieldId)[0];\n\n      // set .alias to support queries that contains alias name\n      // [aliasName].[columnName]\n      if (field && this.settings.alias) {\n         field.alias = this.settings.alias;\n      }\n\n      return field;\n   }\n\n   getCurrentData() {\n      let detailCom = this.detailComponent();\n      if (!detailCom) return null;\n\n      let dv = detailCom.datacollection;\n      if (!dv) return null;\n\n      let field = this.field();\n      if (!field) return null;\n\n      let currData = dv.getCursor();\n      if (currData) return currData[field.columnName];\n      else return null;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailTextPropertyComponentDefaults = {\n   height: 0,\n};\n\nconst ABViewDetailTextDefaults = {\n   key: \"detailtext\", // {string} unique key for this view\n   icon: \"etsy\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.text\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailTextCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailTextDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailTextDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailTextPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height ||\n            ABViewDetailTextPropertyComponentDefaults.height\n      );\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailPropertyComponentDefaults = {};\n\nconst ABViewDetailTreeDefaults = {\n   key: \"detailtree\", // {string} unique key for this view\n   icon: \"sitemap\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.tree\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailTextCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailTreeDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailTreeDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewDocxBuilderPropertyComponentDefaults = {\n   buttonlabel: \"Download DOCX\",\n   dataviewID: null,\n   width: 0,\n   filename: \"\", // uuid\n   filelabel: \"output.docx\",\n   language: \"en\", // en\n   toolbarBackground: \"ab-background-default\",\n   buttonPosition: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"docxBuilder\", // {string} unique key for this view\n   icon: \"file-word-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"DOCX Builder\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDocxBuilderCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDocxBuilderPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"filelabel\", \"buttonlabel\"]);\n\n      let obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewDocxBuilderPropertyComponentDefaults.width\n      );\n\n      this.translate(this, this, [\"filelabel\", \"buttonlabel\"]);\n   }\n\n   uploadUrl() {\n      // TODO: Convert this to use ABFactory.urlFileUpload() or a ABFieldFile\n      // to get the URL:\n\n      // support uploading template when more than one data source is selected\n      const object = this.datacollections[0].datasource;\n\n      // NOTE: file-upload API needs to have the id of ANY field.\n      const field = object ? object.fields()[0] : null;\n\n      return `/file/upload/${object?.id}/${field?.id}/1`;\n   }\n\n   downloadUrl() {\n      return `/file/${this.settings.filename}`;\n   }\n\n   get languageCode() {\n      return (\n         this.settings.language ||\n         ABViewDocxBuilderPropertyComponentDefaults.language\n      );\n   }\n\n   get datacollections() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) return [];\n\n      let dvList = dataviewID.split(\",\") || [];\n\n      return this.AB.datacollections((dv) => dvList.indexOf(dv.id) > -1) || [];\n   }\n};\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewFormButtonPropertyComponentDefaults = {\n   includeSave: true,\n   saveLabel: \"\",\n   includeCancel: false,\n   cancelLabel: \"\",\n   includeReset: false,\n   resetLabel: \"\",\n   includeDelete: false,\n   deleteLabel: \"\",\n   afterCancel: null,\n   alignment: \"right\",\n   isDefault: false, // mark default button of form widget\n};\n\nconst ABViewFormButtonDefaults = {\n   key: \"button\",\n   // {string} unique key for this view\n\n   icon: \"square\",\n   // {string} fa-[icon] reference for this view\n\n   labelKey: \"ab.components.button\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormButtonCore extends ABView {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormButtonDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormButtonDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormButtonPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   toObj() {\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      if (this.settings.deleteLabel) labels.push(\"deleteLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      let result = super.toObj();\n\n      return result;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      if (this.settings.deleteLabel) labels.push(\"deleteLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      this.settings.includeSave = JSON.parse(\n         (this.settings?.includeSave ?? true) &&\n            ABViewFormButtonPropertyComponentDefaults.includeSave\n      );\n      this.settings.includeCancel = JSON.parse(\n         this.settings.includeCancel ||\n            ABViewFormButtonPropertyComponentDefaults.includeCancel\n      );\n      this.settings.includeReset = JSON.parse(\n         this.settings.includeReset ||\n            ABViewFormButtonPropertyComponentDefaults.includeReset\n      );\n      this.settings.includeDelete = JSON.parse(\n         this.settings.includeDelete ||\n            ABViewFormButtonPropertyComponentDefaults.includeDelete\n      );\n\n      this.settings.isDefault = JSON.parse(\n         this.settings.isDefault ||\n            ABViewFormButtonPropertyComponentDefaults.isDefault\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormCheckboxPropertyComponentDefaults = {};\n\nconst ABViewFormCheckboxDefaults = {\n   key: \"checkbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormCheckboxCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCheckboxPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormConnectPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n   filterConditions: {\n      // array of filters to apply to the data table\n      glue: \"and\",\n      rules: [],\n   },\n   sortFields: [],\n   // objectWorkspace: {\n   //    filterConditions: {\n   //       // array of filters to apply to the data table\n   //       glue: \"and\",\n   //       rules: [],\n   //    },\n   // },\n   popupWidth: 700,\n   popupHeight: 450,\n};\n\nconst ABViewFormConnectDefaults = {\n   key: \"connect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormConnectCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormConnectDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormConnectDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormConnectPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.filterConditions =\n         this.settings.filterConditions ||\n         ABViewFormConnectPropertyComponentDefaults.filterConditions;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\nconst ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\nconst ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\nconst ABViewFormDefaults = {\n   key: \"form\", // unique key identifier for this ABViewForm\n   icon: \"list-alt\", // icon reference: (without 'fa-' )\n   labelKey: \"Form\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewFormPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   clearOnLoad: false,\n   clearOnSave: false,\n   displayRules: [],\n   editForm: \"none\", // The url pointer of ABViewForm\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalues: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tvalue: {object}\n   //\t\t\t}\n   //\t\t]\n   //\t}]\n   recordRules: [],\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalue: {string}\n   //\t}]\n   submitRules: [],\n};\n\nmodule.exports = class ABViewFormCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewFormDefaults);\n   }\n\n   static common() {\n      return ABViewFormDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewFormPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewFormPropertyComponentDefaults.showLabel\n      );\n      this.settings.clearOnLoad = JSON.parse(\n         this.settings.clearOnLoad != null\n            ? this.settings.clearOnLoad\n            : ABViewFormPropertyComponentDefaults.clearOnLoad\n      );\n      this.settings.clearOnSave = JSON.parse(\n         this.settings.clearOnSave != null\n            ? this.settings.clearOnSave\n            : ABViewFormPropertyComponentDefaults.clearOnSave\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth == null\n            ? ABViewFormPropertyComponentDefaults.labelWidth\n            : this.settings.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height == null\n            ? ABViewFormPropertyComponentDefaults.height\n            : this.settings.height\n      );\n   }\n\n   // Use this function in kanban\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      var viewsToAllow = [\"label\", \"layout\", \"button\", \"text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   /**\n    * @method fieldComponents()\n    *\n    * return an array of all the ABViewFormField children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViewFormField that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @return {array} \tarray of ABViewFormField\n    */\n   fieldComponents(filter) {\n      const flattenComponents = (views) => {\n         let components = [];\n\n         views.forEach((v) => {\n            if (v == null) return;\n\n            components.push(v);\n\n            if (v._views?.length) {\n               components = components.concat(flattenComponents(v._views));\n            }\n         });\n\n         return components;\n      };\n\n      if (this._views?.length) {\n         const allComponents = flattenComponents(this._views);\n\n         if (filter == null) {\n            filter = (comp) => comp instanceof ABViewFormItem;\n         }\n\n         return allComponents.filter(filter);\n      } else {\n         return [];\n      }\n   }\n\n   addFieldToForm(field, yPosition) {\n      if (field == null) return;\n\n      var fieldComponent = field.formComponent();\n      if (fieldComponent == null) return;\n\n      var newView = fieldComponent.newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings || {};\n      newView.settings.fieldId = field.id;\n      // TODO : Default settings\n\n      if (yPosition != null) newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n\n   get RecordRule() {\n      let object = this.datacollection.datasource;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   doRecordRulesPre(rowData) {\n      return this.RecordRule.processPre({ data: rowData, form: this });\n   }\n\n   doRecordRules(rowData) {\n      // validate for record rules\n      if (rowData) {\n         let object = this.datacollection.datasource;\n         let ruleValidator = object.isValidData(rowData);\n         let isUpdatedDataValid = ruleValidator.pass();\n         if (!isUpdatedDataValid) {\n            console.error(\"Updated data is invalid.\", { rowData: rowData });\n            return Promise.reject(new Error(\"Updated data is invalid.\"));\n         }\n      }\n\n      return this.RecordRule.process({ data: rowData, form: this });\n   }\n\n   doSubmitRules(rowData) {\n      var object = this.datacollection.datasource;\n\n      var SubmitRules = new ABSubmitRule();\n      SubmitRules.formLoad(this);\n      SubmitRules.fromSettings(this.settings.submitRules);\n      SubmitRules.objectLoad(object);\n\n      return SubmitRules.process({ data: rowData, form: this });\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormCustomPropertyComponentDefaults = {};\n\nconst ABViewFormCustomDefaults = {\n   key: \"fieldcustom\",\n   // {string} unique key for this view\n   icon: \"object-group\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.custom\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormCustom extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCustomPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormDatepickerPropertyComponentDefaults = {\n   timepicker: false,\n};\n\nconst ABViewFormDatepickerDefaults = {\n   key: \"datepicker\", // {string} unique key for this view\n   icon: \"calendar\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.datepicker\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormDatepickerCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormDatepickerDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormDatepickerDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormDatepickerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewFormFieldPropertyComponentDefaults = {\n   required: 0,\n   disable: 0,\n};\n\nmodule.exports = class ABViewFormComponentCore extends ABView {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static defaultValues() {\n      return ABViewFormFieldPropertyComponentDefaults;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let form = this.parentFormComponent();\n      if (form == null) return null;\n\n      let datacollection = form.datacollection;\n      if (datacollection == null) return null;\n\n      return datacollection;\n   }\n\n   field() {\n      if (this.settings.objectId) {\n         let object = this.AB.objectByID(this.settings.objectId);\n         if (!object) return null;\n\n         return object.fieldByID(this.settings.fieldId);\n      } else {\n         let form = this.parentFormComponent();\n         if (form == null) return null;\n\n         let object;\n         if (form._currentObject) {\n            object = form._currentObject;\n         } else {\n            let datacollection = form.datacollection;\n            if (datacollection == null) return null;\n\n            object = datacollection.datasource;\n         }\n\n         if (object == null) return null;\n\n         let field = object.fieldByID(this.settings.fieldId);\n         return field;\n      }\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormJsonPropertyComponentDefaults = {\n   type: \"string\", // 'string', 'systemObject' or 'filter'\n};\n\nconst ABViewFormJsonDefaults = {\n   key: \"json\", // {string} unique key for this view\n   icon: \"brackets-curly\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.json\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormJsonCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormJsonDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormJsonDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormJsonPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormNumberPropertyComponentDefaults = {\n   isStepper: 0,\n};\n\nconst ABViewFormNumberDefaults = {\n   key: \"numberbox\", // {string} unique key for this view\n   icon: \"hashtag\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.number\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormNumberCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormNumberDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormNumberDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormNumberPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewFormText instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"formLabel\"]);\n\n      var obj = super.toObj();\n      obj.views = []; // no subviews\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.isStepper =\n         this.settings.isStepper ||\n         ABViewFormNumberPropertyComponentDefaults.isStepper;\n\n      // convert from \"0\" => 0\n      this.settings.isStepper = parseInt(this.settings.isStepper);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormCustom = require(\"../../platform/views/ABViewFormCustom\");\n\nconst ABViewFormReadonlyPropertyComponentDefaults = {};\n\nconst ABViewFormReadonlyDefaults = {\n   key: \"fieldreadonly\", // {string} unique key for this view\n   icon: \"calculator\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.readonly\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormReadonly extends ABViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormReadonlyDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormReadonlyDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormReadonlyPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormSelectMultiplePropertyComponentDefaults = {\n   type: \"multicombo\", // 'richselect' or 'radio'\n};\n\nconst ABSelectMultipleDefaults = {\n   key: \"selectmultiple\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.selectmultiple\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormSelectMultipleCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABSelectMultipleDefaults\n      );\n   }\n\n   static common() {\n      return ABSelectMultipleDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormSelectMultiplePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormSelectSinglePropertyComponentDefaults = {\n   type: \"richselect\", // 'richselect' or 'radio'\n};\n\nconst ABSelectSingleDefaults = {\n   key: \"selectsingle\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.selectsingle\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormSelectSingleCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABSelectSingleDefaults\n      );\n   }\n\n   static common() {\n      return ABSelectSingleDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormSelectSinglePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormTextboxPropertyComponentDefaults = {\n   type: \"single\", // 'single', 'multiple' or 'rich'\n};\n\nconst ABViewFormTextboxDefaults = {\n   key: \"textbox\", // {string} unique key for this view\n   icon: \"i-cursor\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.textbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormTextboxCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormTextboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormTextboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTextboxPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormCustom = require(\"../../platform/views/ABViewFormCustom\");\n\nconst ABViewFormTreePropertyComponentDefaults = {};\n\nconst ABTreeDefaults = {\n   key: \"formtree\", // {string} unique key for this view\n   icon: \"sitemap\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.tree\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormTreeCore extends ABViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABTreeDefaults);\n   }\n\n   static common() {\n      return ABTreeDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTreePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewGanttPropertyComponentDefaults = {\n   dataviewID: \"\",\n   // {string}\n   // {ABDatacollection.id} of the datacollection that contains the data for\n   // the Gantt chart.\n\n   titleFieldID: \"\",\n   // {string}\n   // {ABFieldXXX.id} of the field that contains the value of the title\n   // ABFieldString, ABFieldLongText\n\n   startDateFieldID: \"\",\n   // {string}\n   // {ABFieldDate.id} of the field that contains the start date\n\n   endDateFieldID: \"\",\n   // {string}\n   // {ABFieldDate.id} of the field that contains the end date\n\n   durationFieldID: \"\",\n   // {string}\n   // {ABFieldNumber.id} of the field that contains the duration\n\n   progressFieldID: \"\",\n   // {string}\n   // {ABFieldNumber.id} of the field that marks the progress\n\n   notesFieldID: \"\",\n   // {string}\n   // {ABFieldXXX.id} of the field that contains the value of the title\n   // ABFieldString, ABFieldLongText\n};\n\nconst ABViewDefaults = {\n   key: \"gantt\", // {string} unique key for this view\n   icon: \"tasks\", // {string} fa-[icon] reference for this view\n   labelKey: \"Gantt\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewGanttCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewGanttPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      Object.keys(ABViewGanttPropertyComponentDefaults).forEach((k) => {\n         this.settings[k] =\n            this.settings[k] || ABViewGanttPropertyComponentDefaults[k];\n      });\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewGridPropertyComponentDefaults = {\n   label: \"\",\n   // {string}\n   // label is required and you can add more if the component needs them\n\n   // format:0  \t// 0 - normal, 1 - title, 2 - description\n   dataviewID: \"\",\n   // {uuid}\n   // uuid of ABDataCollection that drives the data for our Grid\n\n   padding: 17,\n   // {int}\n   // the default padding surrounding the component\n\n   showToolbar: 1,\n   // {bool}\n   // do we show our toolbar?\n\n   isEditable: 0,\n   // {bool}\n   // do we allow editing in the grid?\n\n   massUpdate: 0,\n   // {bool}\n   // do we allow the Mass Update capability? (row checkboxes and the\n   // MassUpdate popup)\n\n   allowDelete: 0,\n   // {bool}\n   // do we allow deleting multiple rows at a time? Mass Delete.\n\n   // isFilterable:0,\n\n   isSortable: 1,\n   // {bool}\n   // do we allow the sort options.\n\n   isExportable: 0,\n   // {bool}\n   // do we enable the webix export from grid capabilities?\n\n   // linkedObject:'',\n   // linkedField:'',\n   // linkedPage:'',\n   // linkedPageView:'',\n   // linkedEditPage:'',\n   // linkedEditPageForm:'',\n\n   detailsPage: \"\",\n   // {ABViewPage.id}\n   // the ABViewPage that has the details component.\n\n   detailsTab: \"\",\n   // {ABViewTab.id}\n   // the ABViewTab component, that has the details component.\n   // NOTE: if your details is embedded on a TAB, we need both the\n   // .detailsPage & .detailsTab to successfully show the item.\n\n   editPage: \"\",\n   // {ABViewPage.id}\n   // the ABViewPage that has the edit component.\n\n   editTab: \"\",\n   // {ABViewTab.id}\n   // the ABViewTab component, that has the edit component.\n   // NOTE: if your editor is embedded on a TAB, we need both the\n   // .editPage & .editTab to successfully show the form.\n\n   trackView: 0,\n   // {bool}\n   // Do we offer the ability to track changes to this object/row?\n\n   frozenColumnID: \"\",\n   // {ABField.id}\n   // id of column you want to stop freezing the left hand side at.\n\n   hiddenFields: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add hidden:true to\n\n   summaryColumns: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add the SUM footer to\n\n   countColumns: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add the Count footer to\n\n   // TODO: get rid of objectWorkspace!\n   objectWorkspace: {\n      // sortFields:[], // array of columns with their sort configurations\n      // filterConditions:[], // array of filters to apply to the data table\n      frozenColumnID: \"\", // id of column you want to stop freezing\n      hiddenFields: [], // array of [ids] to add hidden:true to\n      summaryColumns: [],\n      countColumns: [],\n   },\n   gridFilter: {\n      filterOption: 1,\n      userFilterPosition: \"toolbar\",\n      isGlobalToolbar: 1,\n   },\n   // summaryFields: [], // array of [field ids] to add the summary column in footer\n   // countFields: [], // array of [field ids] to add the summary column in footer\n\n   height: 0,\n   // {int}\n   // The Height of our Grid.\n   // See ../views/ABViewDataview.js\n\n   hideHeader: 0,\n   labelAsField: 0,\n   hideButtons: 0,\n   groupBy: \"\", // id of field\n\n   // TODO: add to ABDesigner.interface design:\n   columnConfig: [],\n   // {array} [ {columnHeader}, {columnHeader} ... ]\n   // An array of column headers for the grid to display. These should\n   // be generated at Design time, and can allow the designer to ORDER the\n   // columns, assign column widths, fillspace, etc...\n   //    {columnHeader}\n   //    The minimum amount of information a Grid needs for it's customization\n   //    .id {string} ABField.columnName\n   //    .fieldId {string} ABField.id\n   //    .width {int}\n   //    .fillspace {bool}\n   //    .minwidth\n   //\n   //    When displaying column headers, we will ask the\n   //    CurrentObject.columnHeaders(), and then modify them with our settings\n   //    here.\n\n   saveLocal: 1,\n   // {bool}\n   // Allow saving of local changes to our grid display. This will enable\n   // a user to modify the Grid display locally.\n};\n\nconst ABViewDefaults = {\n   key: \"grid\", // {string} unique key for this view\n   icon: \"table\", // {string} fa-[icon] reference for this view\n   labelKey: \"Grid\", // {string} the multilingual label key for the class label\n};\n\n/**\n * @function settingsDefault()\n * Verifies a given field is set and if not, defaults to what we havein our\n * ABViewGridPropertyComponentDefaults.\n * NOTE: use this fn() for values that are NOT TRUTHY ... so not for numeric\n * 1 or 0.\n * @param {hash} base\n *        The current settings value hash.\n * @param {string} field\n *        The parameter we are checking.\n */\nfunction settingsDefault(base, field) {\n   if (typeof base[field] == \"undefined\") {\n      base[field] = ABViewGridPropertyComponentDefaults[field];\n      return;\n   }\n   base[field] = base[field] || ABViewGridPropertyComponentDefaults[field];\n}\n\n/**\n * @function settingsDefaultJSON()\n * Verifies a given field is set and if not, defaults to what we havein our\n * ABViewGridPropertyComponentDefaults.\n * NOTE: use this fn() for values that ARE TRUTHY ... so for numeric 1 or 0\n * @param {hash} base\n *        The current settings value hash.\n * @param {string} field\n *        The parameter we are checking.\n */\nfunction settingsDefaultJSON(base, field) {\n   try {\n      base[field] = JSON.parse(base[field]);\n   } catch (e) {\n      base[field] = ABViewGridPropertyComponentDefaults[field];\n   }\n}\n\nmodule.exports = class ABViewGridCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewGridPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      settingsDefault(this.settings, \"dataviewID\");\n\n      // Convert to boolean\n      // these values are sometimes 0 (number) at this point so the JSON.parse\n      // with the || (or) statement was always falling to the default so I am\n      // trying to parse the value...if it fails we use the default value\n      settingsDefaultJSON(this.settings, \"padding\");\n      settingsDefaultJSON(this.settings, \"showToolbar\");\n      settingsDefaultJSON(this.settings, \"isEditable\");\n      settingsDefaultJSON(this.settings, \"massUpdate\");\n      settingsDefaultJSON(this.settings, \"allowDelete\");\n      // this.settings.isFilterable = JSON.parse(this.settings.isFilterable || ABViewGridPropertyComponentDefaults.isFilterable);\n      settingsDefaultJSON(this.settings, \"isSortable\");\n      settingsDefaultJSON(this.settings, \"isExportable\");\n      settingsDefaultJSON(this.settings, \"hideHeader\");\n      settingsDefaultJSON(this.settings, \"labelAsField\");\n      settingsDefaultJSON(this.settings, \"hideButtons\");\n      settingsDefaultJSON(this.settings, \"columnConfig\");\n      settingsDefaultJSON(this.settings, \"saveLocal\");\n\n      this.settings.gridFilter =\n         this.settings.gridFilter ||\n         ABViewGridPropertyComponentDefaults.gridFilter;\n\n      try {\n         this.settings.gridFilter.filterOption = JSON.parse(\n            this.settings.gridFilter.filterOption\n         );\n      } catch (e) {\n         this.settings.gridFilter.filterOption =\n            ABViewGridPropertyComponentDefaults.gridFilter.filterOption;\n      }\n\n      try {\n         this.settings.gridFilter.isGlobalToolbar = JSON.parse(\n            this.settings.gridFilter.isGlobalToolbar\n         );\n      } catch (e) {\n         this.settings.gridFilter.isGlobalToolbar =\n            ABViewGridPropertyComponentDefaults.gridFilter.isGlobalToolbar;\n      }\n\n      // this.settings.linkedObject = this.settings.linkedObject || ABViewGridPropertyComponentDefaults.linkedObject;\n      // this.settings.linkedField = this.settings.linkedField || ABViewGridPropertyComponentDefaults.linkedField;\n      // this.settings.linkedPage = this.settings.linkedPage || ABViewGridPropertyComponentDefaults.linkedPage;\n      // this.settings.linkedPageView = this.settings.linkedPageView || ABViewGridPropertyComponentDefaults.linkedPageView;\n      // this.settings.linkedEditPage = this.settings.linkedEditPage || ABViewGridPropertyComponentDefaults.linkedEditPage;\n      // this.settings.linkedEditPageForm = this.settings.linkedEditPageForm || ABViewGridPropertyComponentDefaults.linkedEditPageForm;\n\n      settingsDefault(this.settings, \"detailsPage\");\n      settingsDefault(this.settings, \"editPage\");\n      settingsDefault(this.settings, \"detailsTab\");\n      settingsDefault(this.settings, \"editTab\");\n      settingsDefaultJSON(this.settings, \"trackView\");\n\n      // TODO: remove objectworkspace!\n      // this.settings.objectWorkspace =\n      //    this.settings.objectWorkspace ||\n      //    ABViewGridPropertyComponentDefaults.objectWorkspace;\n\n      // if (typeof this.settings.objectWorkspace != \"undefined\") {\n      //    if (typeof this.settings.objectWorkspace.sortFields == \"undefined\")\n      //       this.settings.objectWorkspace.sortFields = [];\n      //    if (\n      //       typeof this.settings.objectWorkspace.filterConditions == \"undefined\"\n      //    )\n      //       this.settings.objectWorkspace.filterConditions = [];\n      //    if (typeof this.settings.objectWorkspace.frozenColumnID == \"undefined\")\n      //       this.settings.objectWorkspace.frozenColumnID = \"\";\n      //    if (typeof this.settings.objectWorkspace.hiddenFields == \"undefined\")\n      //       this.settings.objectWorkspace.hiddenFields = [];\n      //    if (typeof this.settings.objectWorkspace.summaryColumns == \"undefined\")\n      //       this.settings.objectWorkspace.summaryColumns = [];\n      //    if (typeof this.settings.objectWorkspace.countColumns == \"undefined\")\n      //       this.settings.objectWorkspace.countColumns = [];\n      // }\n\n      var owFields = [\n         \"sortFields\",\n         \"filterConditions\",\n         \"frozenColumnID\",\n         \"hiddenFields\",\n         \"summaryColumns\",\n         \"countColumns\",\n      ];\n      // Transition: if we have an .objectWorkspace, copy those values in here:\n      if (this.settings.objectWorkspace) {\n         owFields.forEach((f) => {\n            if (this.settings[f] == null)\n               this.settings[f] = this.settings.objectWorkspace[f];\n         });\n      }\n\n      // make sure they have actual default values now.\n      owFields.forEach((f) => {\n         settingsDefault(this.settings, f);\n      });\n\n      // we are not allowed to have sub views:\n      this._views = [];\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   removeField(field, cb) {\n      let shouldSave = false;\n\n      // check to see if there is a frozenColumnID and if it matches the\n      // deleted field\n      if (this.settings?.frozenColumnID == field.columnName) {\n         // remove the column name from the frozen column id\n         this.settings.frozenColumnID = \"\";\n         // flag the object to be saved later\n         shouldSave = true;\n      }\n\n      // check to see if there are hidden fields\n      if (this.settings.hiddenFields?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.hiddenFields.indexOf(field.columnName);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.hiddenFields.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n\n      // check to see if there are Summary fields\n      if (this.settings.summaryColumns?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.summaryColumns.indexOf(field.id);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.summaryColumns.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n\n      // check to see if there are hidden fields\n      if (this.settings.countColumns?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.countColumns.indexOf(field.id);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.countColumns.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n      // if settings were changed call the callback\n\n      cb(null, shouldSave);\n   }\n\n   copyUpdateProperyList() {\n      return [\"detailsPage\", \"detailsTab\", \"editPage\", \"editTab\"];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewImagePropertyComponentDefaults = {\n   filename: \"\",\n   width: 200,\n   height: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"image\", // {string} unique key for this view\n   icon: \"picture-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"Image\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewImageCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewImagePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewImagePropertyComponentDefaults.width\n      );\n      this.settings.height = parseInt(\n         this.settings.height || ABViewImagePropertyComponentDefaults.height\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewKanbanPropertyComponentDefaults = {\n   dataviewID: null,\n   // {uuid}\n   // The ABDataCollection.uuid that we are using to store the data.\n   // NOTE: we actually use the DC to get the ABObject it is connected to.\n\n   editFields: [],\n   // {array}\n   // An array of {ABField.id} that determines which fields should show up\n   // in the editor.\n\n   verticalGroupingField: \"\",\n   // {ABField.id}\n   // the .id of the ABField instance that determines the Vertical Grouping\n   // of the Kanban.\n\n   horizontalGroupingField: \"\",\n   // {ABField.id}\n   // the .id of the ABField instance that determines the horizontal Grouping\n   // of the Kanban.\n\n   ownerField: \"\",\n   // {ABFieldUser.id}\n   // the .id of the ABFieldUser instance that determines the owner of the\n   // entries.\n\n   template: \"\",\n   // {json}\n   // The {ABViewText} definition used to display the template for this KanBan.\n   //\n   // A display template used for displaying the information in each Card. The\n   // template is a basic string with special placeholders:  {field.id}\n   // Given a row of data, the current object will scan the template for any\n   // placeholders matching one of it's fields, and then update it with the\n   // current value.\n};\n\nconst ABViewDefaults = {\n   key: \"kanban\",\n   // {string}\n   // unique key identifier for this ABView object\n\n   icon: \"columns\",\n   // {string}\n   // font-awesome icon reference: (without 'fa-' )\n\n   labelKey: \"Kanban\",\n   // {string}\n   // the multilingual label key\n   // NOTE: will be used as L(labelKey)\n};\n\nmodule.exports = class ABViewKanbanCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // set a default .template value\n      if (!this.settings.template) {\n         this.settings.template = { id: `${this.id}_template`, key: \"text\" };\n         this.settings.template.text = this.settings.textTemplate;\n      }\n\n      this.TextTemplate = this.AB.viewNewDetatched(this.settings.template);\n   }\n\n   toObj() {\n      var obj = super.toObj();\n      obj.settings.template = this.TextTemplate.toObj();\n      // NOTE: this corrects the initial save where this.id == undefined\n      // all the rest will set the .id correctly.\n      obj.settings.template.id = `${this.id}_template`;\n      return obj;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewKanbanPropertyComponentDefaults;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewLabelPropertyComponentDefaults = {\n   text: \"\",\n   format: 0, // 0 - normal, 1 - title, 2 - description\n   alignment: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"label\", // {string} unique key for this view\n   icon: \"font\", // {string} fa-[icon] reference for this view\n   labelKey: \"Label\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewLabelPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"text\"]);\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values); // <-- this performs the translations\n\n      // if this is being instantiated on a read from the Property UI,\n      // .text is coming in under .settings.label\n      this.text = values.text || values.settings.text || \"*text\";\n\n      this.settings.format =\n         this.settings.format || ABViewLabelPropertyComponentDefaults.format;\n      this.settings.alignment =\n         this.settings.alignment ||\n         ABViewLabelPropertyComponentDefaults.alignment;\n\n      // we are not allowed to have sub views:\n      this._views = [];\n\n      // convert from \"0\" => 0\n      this.settings.format = parseInt(this.settings.format);\n\n      this.translate(this, this, [\"label\", \"text\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   //// Allow external interface to manipulate our settings:\n\n   /**\n    * @method formatNormal\n    * display text in the normal format.\n    */\n   formatNormal() {\n      this.settings.format = 0;\n   }\n\n   /**\n    * @method formatTitle\n    * display text as a Title.\n    */\n   formatTitle() {\n      this.settings.format = 1;\n   }\n\n   /**\n    * @method formatDescription\n    * display text as a description.\n    */\n   formatDescription() {\n      this.settings.format = 2;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\nconst ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst PropertyComponentDefaults = {\n   label: \"\",\n   numColumns: 1, // The number of columns for this layout\n};\n\nconst ABViewDefaults = {\n   key: \"layout\", // {string} unique key for this view\n   icon: \"columns\", // {string} fa-[icon] reference for this view\n   labelKey: \"Layout\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLayoutCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return PropertyComponentDefaults;\n   }\n\n   /**\n    * @method addColumn\n    * method to actually add a new ABView as one of our columns.\n    * This is called by the static .addView() method.\n    */\n   addColumn() {\n      this._views.push(\n         this.application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n            },\n            this.application,\n            this\n         )\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      if (isEdited) {\n         // if the layout component is being edited in the editor (isEdited == true)\n         // then we return [];\n         return [];\n      } else {\n         // the layout view doesn't care what components are offered, it get's\n         // the list from it's parent view.\n         // ## NOTE: layout views should not be root views.\n         if (this.parent) {\n            return this.parent.componentList(false);\n         } else {\n            return [];\n         }\n      }\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewListPropertyComponentDefaults = {\n   dataviewID: null,\n   field: null,\n   height: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"list\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"List\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewListPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   field() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var object = dv.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.field);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewMenuPropertyComponentDefaults = {\n   orientation: \"x\",\n   buttonStyle: \"ab-menu-default\",\n   menuAlignment: \"ab-menu-left\",\n   menuInToolbar: 1,\n   menuPadding: 10,\n   menuTheme: \"bg_gray\",\n   menuPosition: \"left\",\n   menuTextLeft: \"\",\n   menuTextRight: \"\",\n   menuTextCenter: \"\",\n   // [\n   // \t\t{\n   //\t\t\tpageId: uuid,\n   //\t\t\ttabId: uuid,\n   //\t\t\ttype: string, // \"page\", \"tab\"\n   //\t\t\tisChecked: bool,\n   //\t\t\taliasname: string,\n   //\t\t\ttranslations: []\n   //\t\t}\n   // ]\n   pages: [],\n   order: [],\n};\n\nconst ABMenuDefaults = {\n   key: \"menu\", // {string} unique key for this view\n   icon: \"th-large\", // {string} fa-[icon] reference for this view\n   labelKey: \"Menu\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewMenuCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABMenuDefaults);\n   }\n\n   static common() {\n      return ABMenuDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewMenuPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewMenu instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\n         \"menuTextLeft\",\n         \"menuTextCenter\",\n         \"menuTextRight\",\n      ]);\n      if (this.settings.pages) {\n         this.settings.pages.forEach((page) => {\n            this.unTranslate(page, page, [\"aliasname\"]);\n         });\n      }\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.translate(this, this, [\n         \"menuTextLeft\",\n         \"menuTextCenter\",\n         \"menuTextRight\",\n      ]);\n\n      this.settings.pages =\n         this.settings.pages || ABViewMenuPropertyComponentDefaults.pages;\n\n      for (var i = 0; i < this.settings.pages.length; i++) {\n         var page = this.settings.pages[i];\n         if (page instanceof Object) {\n            page.isChecked = JSON.parse(page.isChecked || false);\n\n            this.translate(page, page, [\"aliasname\"]);\n         }\n         // Compatible with old data\n         else if (typeof page == \"string\") {\n            this.settings.pages[i] = {\n               pageId: page,\n               isChecked: true,\n            };\n         }\n      }\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   ClearPagesInView(view) {\n      // clear menu items\n      if (view && view.count() > 1) {\n         view.find({}).forEach((item) => {\n            view.remove(item.id);\n         });\n      }\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   AddPagesToView(view, pages) {\n      if (!view || !pages) return;\n\n      (pages || []).forEach((displayPage) => {\n         if (displayPage.isChecked) {\n            let existsPage = this.application.pages(\n               (p) => p.id == displayPage.pageId,\n               true\n            )[0];\n            if (!existsPage) return;\n\n            var pageAccessLevel = existsPage.getUserAccess();\n            if (pageAccessLevel == 0) return;\n\n            if (displayPage.tabId) {\n               let existsTab = this.application.views(\n                  (v) => v.id == displayPage.tabId,\n                  true\n               )[0];\n               if (!existsTab) return;\n\n               var tabAccessLevel = existsTab.getUserAccess();\n               if (tabAccessLevel == 0) return;\n            }\n\n            let label = this.getAliasname(displayPage);\n            // create a temporaty store for the menu item\n            var menuItem;\n            // check if page has a parent or not\n            if (displayPage.parent && displayPage.parent != \"0\") {\n               // if page has a parent attempt to grab its submenu\n               menuItem = view.getSubMenu(displayPage.parent);\n            } else {\n               // if the page doesn't have parent use the current menu\n               menuItem = view;\n            }\n            // if the menu item doesn't have a menu selected find it\n            if (menuItem == null) {\n               // get the menu item\n               var curMenu = view.getMenuItem(displayPage.parent);\n               // create a submenu placeholder\n               curMenu.submenu = [];\n               // update the menu with the new submenu included\n               view.refresh(displayPage.parent);\n               // get the submenu we just created\n               menuItem = view.getSubMenu(displayPage.parent);\n            }\n            if (menuItem.exists(displayPage.tabId || displayPage.pageId))\n               return;\n            // add a new item to the menu/submenu\n            menuItem.add(\n               {\n                  id: displayPage.tabId || displayPage.pageId,\n                  value: label,\n                  type: displayPage.type,\n                  pageId: displayPage.pageId,\n                  icon: displayPage.icon\n                     ? \"fa fa-fw fa-\" + displayPage.icon\n                     : \"\",\n               },\n               displayPage.position ? parseInt(displayPage.position) : 0\n            );\n         }\n      });\n   }\n\n   /**\n    * @method getAliasname\n    * @param pageInfo - an object in settings\n    * {\n    * \tpageId: uuid,\n    * \ttabId: uuid,\n    * \ttype: string, - \"page\" or \"tab\"\n    * \tisChecked: bool,\n    * \taliasname: string,\n    *\ttranslations: []\n    *}\n    *\n    * @return {string}\n    */\n   getAliasname(pageInfo) {\n      var lang = this.AB.Multilingual.currentLanguage();\n      var translation = pageInfo.translations.filter((t) => {\n         return t.language_code == lang;\n      });\n\n      var label = \"\";\n\n      if (translation.length) {\n         if (translation[0].aliasname) {\n            label = translation[0].aliasname;\n         } else if (translation[0].label) {\n            label = translation[0].label;\n         }\n      }\n\n      // Just in case there isn't one stored in the translations yet\n      if (!label && pageInfo.aliasname) {\n         label = pageInfo.aliasname;\n      }\n\n      // if alias is empty, then find label of page or tab\n      if (\n         !label ||\n         // remove [en] or [th] etc.\n         !label.replace(/\\[.{2,}\\]/g, \"\")\n      ) {\n         // first check to see if we are actually on a page\n         // if not recursivly look up for the nearest parent page\n         var pageId;\n         if (pageInfo.pageId) {\n            pageId = pageInfo.pageId;\n         } else {\n            pageId = this.getParentPageId(pageInfo);\n         }\n         // find label of the actual page\n         var page = this.application.pages((p) => p.id == pageId, true)[0];\n         if (page) {\n            // find label of the tab view\n            if (pageInfo.type == \"tab\" || pageInfo.key == \"viewcontainer\") {\n               var tabView = page.views(\n                  (v) => v.id == pageInfo.tabId || v.id == pageInfo.id,\n                  true\n               )[0];\n               if (tabView) {\n                  label = tabView.label;\n               }\n            } else {\n               label = page.label;\n            }\n         }\n      }\n\n      return label;\n   }\n\n   getParentPageId(currentView) {\n      if (currentView.key != \"page\") {\n         return this.getParentPageId(currentView.parent);\n      } else {\n         return currentView.id;\n      }\n   }\n\n   copy(lookUpIds, parent) {\n      return super.copy(lookUpIds, parent).then((result) => {\n         // update ids of page's settings\n         (result.settings.pages || []).forEach((p, i) => {\n            let page = result.settings.pages[i];\n\n            // Compatible with old data\n            if (typeof page == \"string\") {\n               result.settings.pages[i] = lookUpIds[page];\n            } else {\n               page.pageId = lookUpIds[page.pageId];\n               page.tabId = lookUpIds[page.tabId];\n            }\n         });\n\n         return result.save().then(() => {\n            return result;\n         });\n      });\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewOrgChartPropertyComponentDefaults = {\n   datacollectionID: \"\",\n   fields: \"\",\n   direction: \"t2b\",\n   depth: 99,\n   color: \"#00BCD4\",\n   // visibleLevel: 2,\n   pan: 1,\n   zoom: 1,\n   height: 0,\n   export: 0,\n   exportFilename: \"\",\n};\n\nconst ABViewOrgChartDefaults = {\n   key: \"orgchart\", // {string} unique key for this view\n   icon: \"sitemap\", // {string} fa-[icon] reference for this view\n   labelKey: \"OrgChart\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewOrgChartCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewOrgChartDefaults\n      );\n   }\n\n   static common() {\n      return ABViewOrgChartDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewOrgChartPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.datacollectionID =\n         this.settings.datacollectionID ??\n         ABViewOrgChartPropertyComponentDefaults.datacollectionID;\n\n      this.settings.fields =\n         this.settings.fields ?? ABViewOrgChartPropertyComponentDefaults.fields;\n\n      this.settings.direction =\n         this.settings.direction ??\n         ABViewOrgChartPropertyComponentDefaults.direction;\n\n      this.settings.depth = parseInt(\n         this.settings.depth ?? ABViewOrgChartPropertyComponentDefaults.depth\n      );\n\n      this.settings.color =\n         this.settings.color ?? ABViewOrgChartPropertyComponentDefaults.color;\n\n      this.settings.pan = JSON.parse(\n         this.settings.pan ?? ABViewOrgChartPropertyComponentDefaults.pan\n      );\n\n      this.settings.zoom = JSON.parse(\n         this.settings.zoom ?? ABViewOrgChartPropertyComponentDefaults.zoom\n      );\n\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewOrgChartPropertyComponentDefaults.height\n      );\n\n      this.settings.export = JSON.parse(\n         this.settings.export ?? ABViewOrgChartPropertyComponentDefaults.export\n      );\n\n      this.settings.exportFilename =\n         this.settings.exportFilename ??\n         ABViewOrgChartPropertyComponentDefaults.exportFilename;\n   }\n\n   get datacollection() {\n      const datacollectionID = (this.settings || {}).datacollectionID;\n\n      return this.AB.datacollectionByID(datacollectionID);\n   }\n\n   getValueFields(object) {\n      // OrgChart supports only one parent node.\n      return (\n         object?.connectFields(\n            (f) => f.linkType() == \"many\" && f.linkViaType() == \"one\"\n         ) ?? []\n      );\n   }\n\n   /**\n    * @function valueFields()\n    * Return IDs of connect field for each layer of OrgChart, starting from the top to the bottom.\n    * \n    * @return {Array}\n    * \n    */\n   valueFields() {\n      let fieldValues = (this.settings?.fields ?? \"\").split(\",\");\n      if (!Array.isArray(fieldValues)) fieldValues = [fieldValues];\n\n      const result = [];\n\n      let obj = this.datacollection?.datasource;\n      fieldValues.forEach((fId) => {\n         if (!fId) return;\n\n         const field = obj?.fieldByID?.(fId);\n         if (!field) return;\n\n         result.push(field);\n         obj = field.datasourceLink;\n      });\n\n      return result;\n   }\n\n   // descriptionField() {\n   //    return this.valueField()?.datasourceLink?.fieldByID?.(\n   //       this.settings.columnDescription\n   //    );\n   // }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\nconst ABViewPDFImporterPropertyComponentDefaults = {\n   dataviewID: null,\n   fieldID: null,\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalue: {string}\n   //\t}]\n   submitRules: [],\n};\n\nconst ABViewDefaults = {\n   key: \"pdfImporter\", // {string} unique key for this view\n   icon: \"file-pdf-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"PDF Importer\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewPDFImporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPDFImporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.dataviewID =\n         this.settings.dataviewID ??\n         ABViewPDFImporterPropertyComponentDefaults.dataviewID;\n\n      this.settings.fieldID =\n         this.settings.fieldID ??\n         ABViewPDFImporterPropertyComponentDefaults.fieldID;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.settings = obj.settings ?? {};\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   doSubmitRules(rowDatas) {\n      const object = this.datacollection.datasource;\n\n      const SubmitRules = new ABSubmitRule();\n      SubmitRules.formLoad(this);\n      SubmitRules.fromSettings(this.settings.submitRules);\n      SubmitRules.objectLoad(object);\n\n      if (rowDatas && !Array.isArray(rowDatas)) rowDatas = [rowDatas];\n\n      rowDatas?.forEach((rowData) => {\n         SubmitRules.process({ data: rowData, form: this });\n      });\n   }\n};\n","/*\n * ABViewPage\n *\n * An ABView that represents a \"Page\" in the system.\n *\n * Pages are\n *\t- allowed to be displayed in the interface list\n *\t- return a full list of components that can be added to the view editor\n *\n *\n */\n\nconst ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n// var ABViewManager = require(\"../ABViewManager\");\n\n// function L(key, altText) {\n//     return AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABViewDefaults = {\n   key: \"page\", // unique key identifier for this ABView\n   icon: \"file\", // icon reference: (without 'fa-' )\n};\n\nconst ABPropertyComponentDefaults = {\n   type: \"page\", // 'page', 'popup' or 'reportPage'\n   popupWidth: 700,\n   popupHeight: 450,\n   pageWidth: null,\n   fixedPageWidth: 0,\n   pageBackground: \"ab-background-default\",\n};\n\nmodule.exports = class ABViewPageCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'viewKey',\t\t\t\t// unique key for this View Type\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this View Type\n\n      //\t\tname: '',\t\t\t\t\t// unique page name\n\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      //\t\t},\n\n      //\t\ttranslations:[]\n      // \t}\n\n      this.parent = null; // will be set by the pageNew() that creates this obj.\n      // {obj} .parent\n      // this points to the ABView object that manages this object as a child.\n      // this param is shared across ABViews as well as ABViewPage, but has\n      // different implications ... so we default an ABViewPage.parent = null\n      // and the place that Creates the Page must assign the .parent externally.\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   static getPageActionKey(view) {\n      return [\n         \"opstools\",\n         \"AB_\" + String(view.application.name).replace(/[^a-z0-9]/gi, \"\"),\n         String(view.name)\n            .replace(/[^a-z0-9]/gi, \"\")\n            .toLowerCase(),\n         \"view\",\n      ].join(\".\");\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewPage instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.name = this.name;\n\n      obj.myAppID = this.myAppID;\n\n      // icon of popup page\n      if (this.settings.type == \"popup\") obj.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") obj.label = obj.name;\n\n      // compile our pages\n      obj.pageIDs = (this._pages || []).map((p) => p.id);\n\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // icon of popup page\n      if (values.settings.type == \"popup\") this.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") this.label = this.name;\n\n      // track which application this Page belongs to:\n      this.myAppID = values.myAppID;\n      if (!this.myAppID && this.application) {\n         this.myAppID = this.application.id;\n      }\n\n      // now properly handle our sub pages.\n      var pages = [];\n      (values.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            pages.push(this.pageNew(def));\n         } else {\n            this.AB.error(\n               `App[${this.application.name}][${this.application.id}]->Page[${this.name}][${this.id}] referenced an unknown Page[${id}]`\n            );\n         }\n      });\n      this._pages = pages;\n\n      // the default columns of ABView is 1\n      this.settings.columns = this.settings.columns || 1;\n      this.settings.gravity = this.settings.gravity || [1];\n\n      // convert from \"0\" => 0\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABViewPage\n            // be sure to remove any of it's ABViewPages as well\n            // This cleans out any dangling ABDefinitions and cleans up the\n            // OpsPortal Permissions:\n\n            var allPageDeletes = [];\n            var allPages = this.pages();\n            this._pages = [];\n            // doing ._pages = [] prevents any of my updates when\n            // a sub-page is .destroy()ed\n\n            allPages.forEach((p) => {\n               allPageDeletes.push(p.destroy());\n            });\n            return Promise.all(allPageDeletes);\n         })\n         .then(() => {\n            var parent = this.parent || this.application;\n\n            return parent.pageRemove(this);\n         })\n         .then(() => {\n            return super.destroy();\n         });\n\n      // return new Promise((resolve, reject) => {\n      //    // verify we have been .save() before:\n      //    if (this.id) {\n      //       this.application\n      //          .viewDestroy(this)\n      //          .then(() => {\n      //             // remove the page in list\n      //             var parent = this.parent || this.application;\n      //             var remainingPages = parent.pages((p) => {\n      //                return p.id != this.id;\n      //             });\n      //             parent._pages = remainingPages;\n\n      //             resolve();\n      //          })\n      //          .catch(reject);\n      //    } else {\n      //       resolve(); // nothing to do really\n      //    }\n      // });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABViewPage\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // now we can persist ourself in our parent\n            var parent = this.parent || this.application;\n\n            return parent.pageInsert(this);\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   /**\n    * @method refreshInstance()\n    * This returns a NEW instance of a ABViewPage based upon the latest\n    * version of it's Definition.  It also resolves any current listeners\n    * this copy currently has and prepare this to discard itself.\n    */\n   refreshInstance() {\n      console.warn(\n         \"This version of ABViewPage hasn't updated it's refreshInstance()\",\n         this\n      );\n      return this;\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    *\n    * return an array of all the ABViewPages for this ABViewPage.\n    *\n    * @param {fn} filter\t\ta filter fn to return a set of ABViewPages that this fn\n    *\t\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\tflag to find in sub pages\n    *\n    * @return {array}\t\t\tarray of ABViewPages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         if (this._pages && this._pages.length > 0) {\n            result = this._pages.filter(filter);\n\n            if (result.length < 1) {\n               this._pages.forEach((p) => {\n                  var subPages = p.pages(filter, deep);\n                  if (subPages && subPages.length > 0) {\n                     result = subPages;\n                  }\n               });\n            }\n         }\n      }\n      // find root pages\n      else {\n         result = this._pages.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method pageInsert()\n    *\n    * save the given ABViewPage in our ._pages array and persist the current\n    * values if they changed.\n    *\n    * @param {ABViewPage} page The instance of the page to save.\n    * @return {Promise}\n    */\n   pageInsert(page) {\n      var isIncluded = this.pages((o) => o.id === page.id).length > 0;\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._pages.push(page);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABViewPage that is tied to this\n    * ABViewPage.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      // make sure this is an ABViewPage description\n      values.key = ABViewDefaults.key;\n\n      // NOTE: this returns a new ABView component.\n      // when creating a new page, the 3rd param should be null, to signify\n      // the top level component.\n      var page = this.application.viewNew(values, this.application, null);\n      page.parent = this;\n      return page;\n   }\n\n   /**\n    * @method pageRemove()\n    *\n    * remove the given ABViewPage from our ._pages array and persist the current\n    * values.\n    *\n    * @param {ABViewPage} page The instance of the page to remove.\n    * @return {Promise}\n    */\n   pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages(function (p) {\n         return p.id != page.id;\n      });\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method urlView()\n    * return the url pointer for views in this application.\n    * @return {string}\n    */\n   urlPage() {\n      return this.urlPointer() + \"/_pages/\";\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this view.  This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this view object.\n    * @return {string}\n    */\n   urlPointer() {\n      if (this.parent) {\n         return this.parent.urlPage() + this.id;\n      } else {\n         return this.application.urlPage() + this.id;\n      }\n   }\n\n   updateIcon(obj) {\n      // icon of page\n      if (obj.settings.type == \"popup\") {\n         obj.icon = \"clone\";\n      } else {\n         obj.icon = ABViewDefaults.icon;\n      }\n      return obj;\n   }\n\n   /**\n    * @method clone()\n    * clone the defintions of this ABViewPage object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {obj}\n    *        defs of the copied ABView\n    */\n   clone(lookUpIds, parent) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // copy\n      let result = super.clone(lookUpIds, parent);\n\n      // page's name should not be duplicate\n      result.name = null;\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABViewPage object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // now continue with the default .copy()\n      return super.copy(lookUpIds, parent, options);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewPivotPropertyComponentDefaults = {\n   dataviewID: null,\n   removeMissed: 0,\n   totalColumn: 0,\n   separateLabel: 0,\n   min: 0,\n   max: 0,\n   height: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"pivot\", // {string} unique key for this view\n   icon: \"cube\", // {string} fa-[icon] reference for this view\n   labelKey: \"Pivot\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewPivotCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPivotPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // Convert to boolean\n      this.settings.removeMissed = JSON.parse(\n         this.settings.removeMissed ||\n            ABViewPivotPropertyComponentDefaults.removeMissed\n      );\n      this.settings.totalColumn = JSON.parse(\n         this.settings.totalColumn ||\n            ABViewPivotPropertyComponentDefaults.totalColumn\n      );\n      this.settings.separateLabel = JSON.parse(\n         this.settings.separateLabel ||\n            ABViewPivotPropertyComponentDefaults.separateLabel\n      );\n      this.settings.min = JSON.parse(\n         this.settings.min || ABViewPivotPropertyComponentDefaults.min\n      );\n      this.settings.max = JSON.parse(\n         this.settings.max || ABViewPivotPropertyComponentDefaults.max\n      );\n\n      if (this.settings.structure && typeof this.settings.structure == \"string\")\n         this.settings.structure = JSON.parse(this.settings.structure);\n\n      // \"0\" -> 0\n      this.settings.height = parseInt(\n         this.settings.height || ABViewPivotPropertyComponentDefaults.height\n      );\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.views = [];\n      obj.settings = obj.settings || {};\n\n      if (this.settings.structure)\n         obj.settings.structure = JSON.stringify(this.settings.structure);\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewReportManagerPropertyComponentDefaults = {\n   dataviewID: \"\",\n   dataviewFields: {\n      name: \"\", // id of a String field\n      text: \"\", // id of a LongText field\n      queries: \"\", // id of a json field\n   },\n   datacollectionIDs: [],\n   editMode: 0,\n   hideCommonTab: 0,\n   hideDataTab: 0,\n   hideViewTab: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"reportsManager\", // {string} unique key for this view\n   icon: \"wpforms\", // {string} fa-[icon] reference for this view\n   labelKey: \"Reports Manager\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewReportsManagerCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewReportManagerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      const parsedSettings = {};\n\n      Object.keys(ABViewReportManagerPropertyComponentDefaults).forEach(\n         (key1) => {\n            if (\n               typeof ABViewReportManagerPropertyComponentDefaults[key1] ===\n                  \"object\" &&\n               !Array.isArray(\n                  ABViewReportManagerPropertyComponentDefaults[key1]\n               )\n            ) {\n               parsedSettings[key1] = {};\n\n               Object.keys(\n                  ABViewReportManagerPropertyComponentDefaults[key1]\n               ).forEach((key2) => {\n                  parsedSettings[key1][key2] =\n                     this.settings[key1]?.[key2] ??\n                     ABViewReportManagerPropertyComponentDefaults[key1][key2];\n               });\n\n               return;\n            }\n\n            parsedSettings[key1] =\n               this.settings[key1] ??\n               ABViewReportManagerPropertyComponentDefaults[key1];\n         }\n      );\n\n      this.settings = parsedSettings;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.settings = obj.settings || {};\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewSchedulerPropertyComponentDefaults = {\n   readonly: 0,\n   dataviewID: \"\",\n   dataviewFields: {\n      name: \"\", // id of a String field\n      start: \"\", // id of a DateTime field\n      end: \"\", // id of a DateTime field\n      allDay: \"\", // id of a Checkbox field\n      repeat: \"\", // id of a String field\n      calendar: \"\", // id of a String field\n      color: \"\", // id of a String field\n      sectionID: \"\", // id of a String field\n      unitID: \"\", // id of a String field\n      notes: \"\", // id of a LongText field\n      originID: \"\", // id of a LongText field\n   },\n   calendarDataviewID: \"\",\n   calendarDataviewFields: {\n      title: \"\", // id of a String field\n      color: \"\", // id of a String field\n      active: \"\", // id of a Checkbox field\n   },\n   timeline: {\n      day: 1,\n      week: 1,\n      month: 1,\n      year: 1,\n      agenda: 1,\n      timeline: 1,\n      units: 1,\n   },\n   timelineSectionList: \"\",\n   unitList: \"\",\n   export: {\n      excel: 0,\n      csv: 0,\n      pdf: 0,\n   },\n};\n\nconst ABViewDefaults = {\n   key: \"scheduler\",\n   // {string}\n   // unique key for this view\n\n   icon: \"calendar\",\n   // {string}\n   // fa-[icon] reference for this view\n\n   labelKey: \"Scheduler\",\n   // {string}\n   // the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewSchedulerCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      this._object = null;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewSchedulerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.unTranslate(this, this, [\"scheduler\"]);\n\n      const obj = super.toObj();\n\n      obj.views = [];\n\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings = this.settings || {};\n      this.settings.dataviewFields = this.settings.dataviewFields || {};\n      this.settings.calendarDataviewFields =\n         this.settings.calendarDataviewFields || {};\n      this.settings.timeline = this.settings.timeline || {};\n      this.settings.export = this.settings.export || {};\n\n      const parsedSettings = {};\n\n      Object.keys(ABViewSchedulerPropertyComponentDefaults).forEach((key1) => {\n         if (\n            typeof ABViewSchedulerPropertyComponentDefaults[key1] === \"object\"\n         ) {\n            parsedSettings[key1] = {};\n\n            Object.keys(ABViewSchedulerPropertyComponentDefaults[key1]).forEach(\n               (key2) => {\n                  parsedSettings[key1][key2] =\n                     this.settings[key1][key2] ??\n                     ABViewSchedulerPropertyComponentDefaults[key1][key2];\n               }\n            );\n\n            return;\n         }\n\n         parsedSettings[key1] =\n            this.settings[key1] ??\n            ABViewSchedulerPropertyComponentDefaults[key1];\n      });\n\n      this.settings = parsedSettings;\n\n      // if this is being instantiated on a read from the Property UI,\n      this.scheduler =\n         values.scheduler || ABViewSchedulerPropertyComponentDefaults.scheduler;\n\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.translate(this, this, [\"scheduler\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\nconst ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewTabPropertyComponentDefaults = {\n   height: 0,\n   minWidth: 0,\n   stackTabs: 0, // use sidebar view instead of tabview\n   darkTheme: 0, // set dark theme css or not\n   sidebarWidth: 200, // width of sidebar menu when stacking tabs\n   sidebarPos: \"left\", // the default position of sidebar\n   iconOnTop: 0, // do you want to put the icon above the text label?\n   hintID: null, // store the ID of a webix hint tutorial for this view\n};\n\nconst ABViewTabDefaults = {\n   key: \"tab\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"Tab\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewTabCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewTabDefaults);\n   }\n\n   static common() {\n      return ABViewTabDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewTabPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(this.settings.height);\n      this.settings.minWidth = parseInt(this.settings.minWidth || 0);\n      this.settings.stackTabs = parseInt(this.settings.stackTabs);\n      this.settings.darkTheme = parseInt(this.settings.darkTheme);\n      this.settings.sidebarWidth = parseInt(this.settings.sidebarWidth);\n      // this.settings.sidebarPos = this.settings.sidebarPos;\n      this.settings.iconOnTop = parseInt(this.settings.iconOnTop);\n   }\n\n   addTab(tabName, tabIcon) {\n      return this.application\n         .viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: tabName,\n               tabicon: tabIcon,\n            },\n            this.application,\n            this\n         )\n         .save();\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewTextPropertyComponentDefaults = {\n   text: \"\",\n   // {string}\n   // A multilingual text template that is used to display a given set of\n   // values.\n\n   height: 0,\n   // {integer}\n   // The default height of this widget.\n\n   dataviewID: null,\n   // {uuid}\n   // The {ABDataCollection.id} of the datacollection this ABViewText is\n   // pulling data from.\n   // In most usage situations this ABView is tied to the data in an\n   // ABDataCollection.  However, it is possible for an ABObject to be\n   // directly assigned to the ABView, and that will be used instead.\n};\n\nconst ABViewDefaults = {\n   key: \"text\",\n   // {string}\n   // unique key for this view\n\n   icon: \"font\",\n   // {string}\n   // fa-[icon] reference for this view\n\n   labelKey: \"Text\",\n   // {string}\n   // the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewTextCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      this._object = null;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewTextPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.unTranslate(this, this, [\"text\"]);\n\n      var obj = super.toObj();\n      obj.views = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings = this.settings || {};\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height || ABViewTextPropertyComponentDefaults.height\n      );\n\n      // if this is being instantiated on a read from the Property UI,\n      this.text = values.text || ABViewTextPropertyComponentDefaults.text;\n\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.translate(this, this, [\"text\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return ABDatacollection of this form\n    *\n    * @return {ABDatacollection}\n    */\n   get datacollection() {\n      if (this.parent?.key == \"dataview\") {\n         return this.AB.datacollectionByID(this.parent.settings.dataviewID);\n      } else {\n         return this.AB.datacollectionByID(this.settings.dataviewID);\n      }\n   }\n\n   fieldKey(field) {\n      let label = field.label || \"\";\n      label = label.replace(/\\(/g, \"\\\\(\");\n      label = label.replace(/\\)/g, \"\\\\)\");\n      return label;\n   }\n\n   displayText(val, componentID) {\n      var result = this.text;\n\n      let clearTemplateValue = (result) => {\n         return result.replace(/{(.*?)}/g, \"\");\n      };\n\n      var dv = this.datacollection;\n      // if (!dv) return clearTemplateValue(result);\n\n      var object = dv?.datasource ?? this._object;\n      if (!object) return clearTemplateValue(result);\n\n      const rowData = val || dv.getCursor() || {};\n\n      object.fields().forEach((f) => {\n         // add \\\\ in front of the regular expression special charactors\n         // let label = f.label || \"\";\n         // label = label.replace(/\\(/g, \"\\\\(\");\n         // label = label.replace(/\\)/g, \"\\\\)\");\n         let label = this.fieldKey(f);\n\n         var template = new RegExp(\"{\" + label + \"}\", \"g\");\n\n         // IDEA: I'd like to keep all the image url logic INSIDE the ABFieldImage\n         // object.  Is there some way we can simply call: f.imageTemplate(rowData)\n         // and parse the results for the url to display here?\n\n         var data = f.format(rowData);\n         if (f.key == \"image\") {\n            var fData = data;\n            data = f.urlImage(fData);\n\n            // Question: should we change f.urlImage() to return the defaultImageUrl\n            // if fData is \"\" and .useDefaultImage = true?\n\n            if (\n               !fData &&\n               f.settings.defaultImageUrl &&\n               f.settings.useDefaultImage\n            ) {\n               data = f.urlImage(f.settings.defaultImageUrl);\n\n               ////\n               //// James:  Revisit this and make sure we are handling things ok now.\n               // result = result.replace(\n               //    \"img\",\n               //    'img onload=\\'AD.comm.hub.publish(\"component.adjust\", {\"containerID\": \"' +\n               //       componentID +\n               //       \"\\\"});' \"\n               // );\n               // } else if (\n               //    fData != \"\" &&\n               //    result.indexOf(\"onload\") == -1 &&\n               //    componentID\n               // ) {\n               // result = result.replace(\n               //    \"img\",\n               //    'img onload=\\'AD.comm.hub.publish(\"component.adjust\", {\"containerID\": \"' +\n               //       componentID +\n               //       \"\\\"});' \"\n               // );\n            } else {\n               ////\n               //// James: It looks like this routine assumes the this.text template will\n               //// only have 1 <img> tag in it.  Is that necessarilly true?\n               ////\n               //// If NOT, then we need to rethink this next line:\n\n               result = result.replace(\n                  \"img\",\n                  \"img onerror='this.parentNode.removeChild(this);' \"\n               );\n            }\n         }\n\n         result = result.replace(template, data);\n      });\n\n      // Support {uuid} tag in tempalte\n      result = result.replace(/{PK}/g, rowData[object.PK()]);\n\n      return result;\n   }\n\n   objectLoad(object) {\n      this._object = object;\n   }\n};\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewDefaults = {\n   key: \"viewwidget\", // {string} unique key for this view\n   icon: \"circle-o-notch \", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.widget\", // {string} the multilingual label key for the class label\n};\n\nconst ABPropertyComponentDefaults = {\n   columnSpan: 1,\n   rowSpan: 1,\n};\n\nmodule.exports = class ABViewWidgetCore extends ABView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    * @param {obj} defaultValues special sub class defined default values.\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.columnSpan = parseInt(\n         this.settings.columnSpan || ABPropertyComponentDefaults.columnSpan\n      );\n      this.settings.rowSpan = parseInt(\n         this.settings.rowSpan || ABPropertyComponentDefaults.rowSpan\n      );\n   }\n};\n","const _ = require(\"lodash\");\n\n// prettier-ignore\nconst ABApplicationCore = require(\"../core/ABApplicationCore.js\");\n\nconst ABViewPage = require(\"./views/ABViewPage\");\nconst ABViewManager = require(\"./ABViewManager\");\n\nmodule.exports = class ABClassApplication extends ABApplicationCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // now listen for any updates to our managed objects\n      this._handler_page_updated = (definition) => {\n         // we want to keep the same pageID order:\n         var newPages = [];\n         this.pages().forEach((pg) => {\n            if (pg.id === definition.id) {\n               newPages.push(pg.refreshInstance(this));\n               return;\n            }\n            newPages.push(pg);\n         });\n\n         this._pages = newPages;\n\n         // var currPage = this._pages.find((p) => p.id === definition.id);\n         // if (currPage) {\n         //    this._pages = this._pages.filter((p) => p.id != currPage.id);\n         //    this._pages.push(currPage.refreshInstance());\n         // }\n      };\n      this._pages.forEach((p) => {\n         p.on(\"definition.updated\", this._handler_page_updated);\n      });\n   }\n\n   static applications(/*fn = () => true*/) {\n      console.error(\n         \"ABApplication.applicationForID(): Depreciated. Who is doing this?\"\n      );\n      return null;\n   }\n   static applicationForID(/*id*/) {\n      var errDepreciated = new Error(\n         \"ABApplication.applicationForID(): Depreciated. Who is doing this?\"\n      );\n      console.error(errDepreciated);\n      return null;\n   }\n\n   static definitionForID(/*id*/) {\n      var errDepreciated = new Error(\n         \"ABApplication.definitionForID(): Depreciated. Who is doing this?\"\n      );\n      console.error(errDepreciated);\n      return null;\n   }\n\n   areaKey() {\n      return this.AB.kebabCase(`ab-${this.name}`);\n   }\n\n   /**\n    * @method refreshInstance()\n    * Used when a definition.updated message is detected on this ABApplication.\n    * This method will return a new instance based upon the current definition\n    * and properly resolve any handlers and pending network Requests.\n    * @return {ABObject}\n    */\n   refreshInstance() {\n      var newObj = this.AB.applicationByID(this.id);\n\n      // remove my listeners\n      this._pages.forEach((p) => {\n         p.removeListener(\"definition.updated\", this._handler_page_updated);\n      });\n\n      return newObj;\n   }\n\n   ///\n   /// Definition\n   ///\n\n   /**\n    * @method _listInsert()\n    * save the given entity into our desired list:\n    * @param {varid} entity\n    * @param {string} key\n    *        the key of the list we are managing\n    * @return {Promise}\n    */\n   async _listInsert(entity, key) {\n      var isIncluded = this[key].indexOf(entity.id) != -1;\n      if (!isIncluded) {\n         this[key].push(entity.id);\n         await this.save();\n      }\n   }\n\n   async _listRemove(entity, key) {\n      var begLen = this[key].length;\n      this[key] = this[key].filter((id) => {\n         return id != entity.id;\n      });\n      // if there was a change then save this.\n      if (begLen != this[key].length) {\n         await this.save();\n      }\n   }\n\n   /**\n    * @method datacollectionInsert()\n    * persist the current ABDataCollection in our list of .datacollectionIDs.\n    * @param {ABDataCollection} dc\n    * @return {Promise}\n    */\n   datacollectionInsert(dc) {\n      return this._listInsert(dc, \"datacollectionIDs\");\n   }\n\n   /**\n    * @method datacollectionRemove()\n    * remove the given ABDataCollection from our list of .datacollectionIDs.\n    * @param {ABDataCollection} dc\n    * @return {Promise}\n    */\n   datacollectionRemove(dc) {\n      return this._listRemove(dc, \"datacollectionIDs\");\n   }\n\n   /**\n    * @method objectInsert()\n    * persist the current ABObject in our list of .objectIDs.\n    * @param {ABObject} object\n    * @return {Promise}\n    */\n   objectInsert(object) {\n      return this._listInsert(object, \"objectIDs\");\n   }\n\n   /**\n    * @method objectRemove()\n    * remove the current ABObject from our list of .objectIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABObject} object\n    * @return {Promise}\n    */\n   objectRemove(object) {\n      return this._listRemove(object, \"objectIDs\");\n   }\n\n   /**\n    * @method processInsert()\n    * persist the current ABProcess in our list of .processIDs.\n    * @param {ABProcess} process\n    * @return {Promise}\n    */\n   processInsert(process) {\n      return this._listInsert(process, \"processIDs\");\n   }\n\n   /**\n    * @method processRemove()\n    * remove the current ABProcess from our list of .processIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABProcess} process\n    * @return {Promise}\n    */\n   processRemove(process) {\n      return this._listRemove(process, \"processIDs\");\n   }\n\n   /**\n    * @method queryInsert()\n    * persist the current ABObjectQuery in our list of .queryIDs.\n    * @param {ABObjectQuery} query\n    * @return {Promise}\n    */\n   queryInsert(query) {\n      return this._listInsert(query, \"queryIDs\");\n   }\n\n   /**\n    * @method queryRemove()\n    * remove the current ABObjectQuery from our list of .queryIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABObjectQuery} query\n    * @return {Promise}\n    */\n   queryRemove(query) {\n      return this._listRemove(query, \"queryIDs\");\n   }\n\n   /**\n    * @method exportIDs()\n    * export any relevant .ids for the necessary operation of this application.\n    * @param {array} ids\n    *         the array of ids to insert any relevant .ids into\n    */\n   exportIDs(ids) {\n      // make sure we don't get into an infinite loop:\n      if (ids.indexOf(this.id) > -1) return;\n\n      ids.push(this.id);\n\n      // start with Objects:\n      this.objectsIncluded().forEach((o) => {\n         o.exportIDs(ids);\n      });\n\n      // get all Hints\n      this.hintsIncluded().forEach((h) => {\n         h.exportIDs(ids);\n      });\n\n      // Queries\n      this.queriesIncluded().forEach((q) => {\n         q.exportIDs(ids);\n      });\n\n      // Datacollections\n      // NOTE: currently the server doesn't make instances of DataCollections\n      // so we manually parse the related info here:\n      this.datacollectionIDs.forEach((dID) => {\n         if (ids.indexOf(dID) > -1) return;\n\n         var def = this.AB.definitionByID(dID);\n         if (def) {\n            ids.push(dID);\n            if (def.settings.datasourceID) {\n               var object = this.AB.objectByID(def.settings.datasourceID);\n               if (object) {\n                  object.exportIDs(ids);\n               }\n            }\n         }\n      });\n\n      // Processes\n      this.processes().forEach((p) => {\n         p.exportIDs(ids);\n      });\n\n      // Pages\n      // NOTE: currently the server doesn't make instances of ABViews\n      // so we manually parse the object data here:\n      var parseView = (view) => {\n         if (ids.indexOf(view.id) > -1) return;\n         ids.push(view.id);\n         (view.pageIDs || []).forEach((pid) => {\n            var pdef = this.AB.definitionByID(pid);\n            if (pdef) {\n               parseView(pdef);\n            }\n         });\n\n         (view.viewIDs || []).forEach((vid) => {\n            var vdef = this.AB.definitionByID(vid);\n            if (vdef) {\n               parseView(vdef);\n            }\n         });\n      };\n\n      var pageIDs = this._pages.map((p) => p.id);\n      (pageIDs || []).forEach((pid) => {\n         var pdef = this.AB.definitionByID(pid);\n         if (pdef) {\n            parseView(pdef);\n         }\n      });\n\n      // return only unique entries:\n      ids = this.AB.uniq(ids);\n   }\n\n   /**\n    * @method pageNew()\n    * return a new instance of an ABViewPage\n    * @param values\n    *        The initial settings for the page.\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      return new ABViewPage(values, this);\n   }\n\n   /**\n    * @method pageInsert()\n    * Insert a new ABViewPage into this Application.\n    * @param {ABViewPage} page\n    *        The instance of the page to save.\n    * @return {Promise}\n    */\n   async pageInsert(page) {\n      // var isIncluded = this.pageByID(page.id);\n      var isIncluded = this._pages.filter((p) => p.id == page.id)[0];\n      if (!isIncluded) {\n         this._pages.push(page);\n         // Save our own Info:\n         return this.save();\n      }\n   }\n\n   /**\n    * @method pageRemove()\n    * remove the current ABViewPage from our list of pages.\n    * @param {ABViewPage} page\n    * @return {Promise}\n    */\n   async pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages(function (p) {\n         return p.id != page.id;\n      });\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n   }\n\n   save() {\n      // if someone just changed the name of our ABApplication, reflect that\n      // in our Def.Name\n      if (this.name != this.label) {\n         this.name = this.label;\n      }\n      return super.save();\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      //\n      // check for valid object references:\n      //\n      var checks = {\n         objectIDs: \"object\",\n         queryIDs: \"query\",\n         datacollectionIDs: \"datacollection\",\n      };\n\n      Object.keys(checks).forEach((k) => {\n         this[k].forEach((id) => {\n            var def = this.AB.definitionByID(id);\n            if (!def) {\n               this.warningsMessage(` is referencing a missing ${checks[k]}`, {\n                  appID: this.id,\n                  id,\n               });\n            }\n         });\n      });\n\n      //\n      // Make sure there is some way to access this Application:\n      //\n      if (this.roleAccess.length == 0 && !this.isAccessManaged) {\n         this.warningsMessage(\" has no Role assigned, and is unaccessible.\");\n      }\n\n      // do our Role references exist?\n      var allRoles = this.AB.Account.rolesAll().map((r) => r.id);\n      this.roleAccess.forEach((r) => {\n         if (allRoles.indexOf(r) == -1) {\n            this.warningsMessage(\n               `Specified Role Access [${r}] does not exist in this system`,\n               { role: r }\n            );\n         }\n      });\n\n      // Make sure all our Pages perform a new warningsEval();\n      this.pages().forEach((p) => {\n         p.warningsEval();\n      });\n   }\n\n   warningsAll() {\n      var warnings = [].concat(this._warnings);\n      [\n         \"objectsIncluded\",\n         \"queriesIncluded\",\n         \"datacollectionsIncluded\",\n         \"processes\",\n         \"pages\",\n         // \"views\", // <-- these are gathered in \"pages\"\n      ].forEach((k) => {\n         this[k]().forEach((o) => {\n            warnings = warnings.concat(o.warningsAll());\n         });\n      });\n\n      return warnings;\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Application[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   /**\n    * @method mobileAppNew()\n    *\n    * return an instance of a new (unsaved) ABMobileApp that is tied to this\n    * ABApplication.\n    *\n    * @return {ABMobileApp}\n    */\n   // mobileAppNew(values) {\n   //    return new ABMobileApp(values, this);\n   // }\n};\n","const _ = require(\"lodash\");\n\n// prettier-ignore\nconst ABApplicationMobileCore = require(\"../core/ABApplicationMobileCore.js\");\n\nconst ABViewPageMobile = require(\"./mobile/ABMobilePage\");\nconst ABViewManager = require(\"./ABViewManager\");\n\nmodule.exports = class ABClassApplicationMobile extends (\n   ABApplicationMobileCore\n) {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n   }\n\n   ///\n   /// Definition\n   ///\n\n   /**\n    * @method pageNew()\n    * return a new instance of an ABViewPageMobile\n    * @param values\n    *        The initial settings for the page.\n    * @return {ABViewPageMobile}\n    */\n   pageNew(values) {\n      const newPage = new ABViewPageMobile(values, this);\n      newPage.parent = this;\n      return newPage;\n   }\n\n   async setPageDefault(page) {\n      if (this.pageDefault != page.id) {\n         let oldPage = this.pageByID(this.pageDefault, true);\n         if (oldPage) {\n            oldPage.defaultPage = 0;\n            await oldPage.save();\n         }\n\n         this.pageDefault = page.id;\n         await this.save();\n      }\n   }\n};\n","const ABEmitter = require(\"./ABEmitter\");\n\nconst CustomComponentManager = require(\"../../webix_custom_components/customComponentManager\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABComponent extends ABEmitter {\n   /**\n    * @param {object} App ?what is this?\n    * @param {string} idBase Identifier for this component\n    * @param {import(\"../ABFactory\").default} AB ABFactory instance\n    */\n   constructor(App, idBase, AB) {\n      super();\n\n      this.AB = AB;\n      // Transition Code:\n      // make sure we have an this.AB\n      if (!AB && App?.AB) {\n         this.AB = App.AB;\n      }\n\n      if (!App) {\n         if (this.AB._App) {\n            App = this.AB._App;\n         } else {\n            App = {\n               uuid: this.AB.Webix.uid(),\n\n               /*\n                * AB\n                * the {ABFactory} for our interface.\n                */\n               AB: this.AB,\n\n               /*\n                * actions:\n                * a hash of exposed application methods that are shared among our\n                * components, so one component can invoke an action that updates\n                * another component.\n                */\n               actions: {},\n\n               /*\n                * config\n                * webix configuration settings for our current browser\n                */\n               config: this.AB.UISettings.config(),\n\n               /*\n                * custom\n                * a collection of custom components for this App Instance.\n                */\n               custom: null,\n\n               /*\n                * Icons\n                * this will provide you with the list of avaialbe font awesome 4.7.0 icons to use in interface building\n                */\n               icons: this.AB.UISettings.icons,\n\n               Label: L,\n\n               /*\n                * labels\n                * a collection of labels that are common for the Application.\n                */\n               labels: {\n                  add: L(\"Add\"),\n                  create: L(\"Create\"),\n                  delete: L(\"Delete\"),\n                  edit: L(\"Edit\"),\n                  export: L(\"Export\"),\n                  formName: L(\"Name\"),\n                  import: L(\"Import\"),\n                  rename: L(\"Rename\"),\n                  ok: L(\"Ok\"),\n\n                  cancel: L(\"Cancel\"),\n                  save: L(\"Save\"),\n\n                  yes: L(\"Yes\"),\n                  no: L(\"No\"),\n\n                  none: L(\"None\"),\n                  close: L(\"Close\"),\n\n                  default: L(\"Default\"),\n                  defaultPlaceholder: L(\"Enter default value\"),\n\n                  disable: L(\"Disable\"),\n\n                  required: L(\"Required\"),\n                  unique: L(\"Unique\"),\n\n                  invalidMessage: {\n                     required: L(\"This field is required\"),\n                  },\n\n                  createErrorMessage: L(\"System could not create <b>{0}</b>.\"),\n                  createSuccessMessage: L(\"<b>{0}</b> is created.\"),\n\n                  updateErrorMessage: L(\"System could not update <b>{0}</b>.\"),\n                  updateSucessMessage: L(\"<b>{0}</b> is updated.\"),\n\n                  deleteErrorMessage: L(\"System could not delete <b>{0}</b>.\"),\n                  deleteSuccessMessage: L(\"<b>{0}</b> is deleted.\"),\n\n                  renameErrorMessage: L(\"System could not rename <b>{0}</b>.\"),\n                  renameSuccessMessage: L(\"<b>{0}</b> is renamed.\"),\n\n                  // Data Field  common Property labels:\n                  dataFieldHeaderLabel: L(\"Section Title\"),\n                  dataFieldHeaderLabelPlaceholder: L(\"Section Name\"),\n\n                  dataFieldLabel: L(\"Label\"),\n                  dataFieldLabelPlaceholder: L(\"Label\"),\n\n                  dataFieldColumnName: L(\"Field Name\"),\n                  dataFieldColumnNamePlaceholder: L(\"Database field name\"),\n\n                  dataFieldShowIcon: L(\"show icon?\"),\n\n                  componentDropZone: L(\"add widgets here\"),\n               },\n\n               /*\n                * unique()\n                * A function that returns a globally unique Key.\n                * @param {string} key   The key to modify and return.\n                * @return {string}\n                */\n               unique: function (key) {\n                  return `${key}${this.uuid}`;\n               },\n            };\n            this.AB._App = App;\n         }\n      }\n\n      if (!App.custom) {\n         if (!this.AB.custom) {\n            var componentManager = new CustomComponentManager();\n            componentManager.initComponents(App);\n         } else {\n            App.custom = this.AB.custom;\n         }\n      }\n\n      this.App = App;\n\n      this.idBase = idBase || \"?idbase?\";\n   }\n\n   actions(_actions) {\n      console.error(\"!!! REFACTOR out .actions()\");\n      if (_actions) {\n         for (var a in _actions) {\n            this.App.actions[a] = _actions[a];\n         }\n      }\n   }\n\n   Label() {\n      return (...params) => {\n         // console.error(\"!! App.label() depreciated.\");\n         return this.AB.Multilingual.label(...params);\n      };\n   }\n\n   unique(key) {\n      return this.App.unique(`${this.idBase}_${key}`);\n   }\n};\n","const ABObjectQuery = require(\"./ABObjectQuery\");\nconst ABDataCollectionCore = require(\"../core/ABDataCollectionCore\");\n\nmodule.exports = class ABDataCollection extends ABDataCollectionCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      this.setMaxListeners(0);\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABDataCollection with it's parent\n    *\n    *\n    * @return {Promise}\n    *       .resolve( {this} )\n    */\n   async save() {\n      if (!this.id) {\n         this.label = this.label || this.name;\n      }\n      await super.save();\n      this.AB.emit(\"ab.datacollection.update\", {\n         datacollectionId: this.id,\n      });\n      return this;\n   }\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n      var L = this.AB.Label();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.datacollections((o) => {\n            return (\n               o.id != this.id &&\n               o.name.toLowerCase() == this.name.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L('Name must be unique (\"{0}\" already in use)', [this.name])\n         );\n      }\n\n      return validator;\n   }\n\n   ///\n   /// Cursor\n   ///\n\n   /**\n    * currentUserUsername\n    * must return the proper value for the current user that would match a \"user\" field\n    * in an object.\n    * This is platform dependent, so must be implemented by a child object.\n    * @return {string}\n    */\n   currentUserUsername() {\n      return this.AB.Account.username();\n   }\n\n   ///\n   /// Data\n   ///\n\n   init() {\n      // prevent initialize many times\n      if (this.initialized) return;\n      // this.initialized = true;  // <<---- DO NOT SET THIS HERE\n\n      super.init();\n\n      //// Now connect our platform hub to our Object Triggers:\n\n      // events\n      [\n         \"ab.datacollection.create\",\n         \"ab.datacollection.update\",\n         \"ab.datacollection.stale\",\n         \"ab.datacollection.delete\",\n      ].forEach((key) => {\n         this.AB.on(key, (data) => {\n            this.emit(key, data);\n         });\n      });\n\n      this.bindParentDc();\n   }\n\n   bindParentDc() {\n      // if we pass the master datacollection and the field it is linked to\n      // we want to bind it with that field as second param so dataFeed is\n      // used on the slave datacollection\n      let dataCollectionLink = this.datacollectionLink;\n      let fieldLink = this.fieldLink;\n      if (!this.settings.loadAll && dataCollectionLink && fieldLink) {\n         let dc = this.__dataCollection;\n         // the second param is the field id we bind the data to the master with\n         dc.bind(dataCollectionLink.__dataCollection, fieldLink.id);\n         // defining dataFeed allows us to query the database when the table is scrolled\n         dc.define(\"dataFeed\", (value, params) => {\n            let cursorUpdated = false;\n            // check if the current cursor was updated\n            if (dc.__prevLinkDcCursor != value) {\n               cursorUpdated = true;\n            }\n\n            dc.__prevLinkDcCursor = this?.datacollectionLink?.getCursor()?.id;\n\n            // NOTE: If no cursor of the parent DC, then show empty list\n            if (\n               this.datacollectionLink &&\n               value == null &&\n               dc.__prevLinkDcCursor == null\n            ) {\n               this.clearAll();\n            }\n            // this is the same item that was already bound...don't reload data\n            else if (cursorUpdated) {\n               // now that we have the modified wheres the dataCollections wheres\n               // need to be modified for subsequent loads on scroll so lets set them\n               // this.reloadWheres(wheres);\n\n               // reload data\n               this.reloadData(0, 20);\n            }\n         });\n      }\n   }\n\n   loadData(start, limit = 20) {\n      return super.loadData(start, limit).catch((err) => {\n         // hideProgressOfComponents() is a platform specific action.\n         this.hideProgressOfComponents();\n         this.emit(\"loadData\", {});\n\n         // propagate the error here:\n         if (err) {\n            throw err;\n         }\n      });\n   }\n\n   /**\n    * processIncomingData()\n    * is called from loadData() once the data is returned.  This method\n    * allows the platform to make adjustments to the data based upon any\n    * platform defined criteria.\n    * @param {obj} data  the data as it was returned from the Server\n    *        which should be in following format:\n    *        {\n    *          status: \"success\", // or \"error\"\n    *          data:[ {ABObjectData}, {ABObjectData}, ...]\n    *        }\n    */\n   processIncomingData(data) {\n      // Web Platform:\n\n      // data check:\n      if (data.data && !Array.isArray(data.data)) {\n         data.data = [data.data];\n      }\n\n      // standardize the heights\n\n      /*\n       // In v2: we move the row height calculation into the Interface designer.\n       //\n\n      // calculate default value of $height of rows\n      let obj = this.datasource;\n      let defaultHeight = 0;\n      let minHeight = 0;\n      let imageFields = obj.fields((f) => f.key == \"image\");\n      let hiddenFields = obj.objectWorkspace.hiddenFields;\n      imageFields.forEach(function (f) {\n         if (hiddenFields.indexOf(f.columnName) == -1) {\n            if (\n               parseInt(f.settings.useHeight) == 1 &&\n               parseInt(f.settings.imageHeight) > minHeight\n            ) {\n               minHeight = parseInt(f.settings.imageHeight) + 20;\n            } else {\n               minHeight = 100;\n            }\n         }\n      });\n      if (minHeight > 0) {\n         defaultHeight = minHeight;\n      }\n\n      (data.data || []).forEach((d) => {\n         // define $height of rows to render in webix elements\n         if (\n            d.properties != null &&\n            d.properties.height != \"undefined\" &&\n            parseInt(d.properties.height) > 0\n         ) {\n            d.$height = parseInt(d.properties.height);\n         } else if (defaultHeight > 0) {\n            d.$height = defaultHeight;\n         }\n      });\n      */\n\n      return super.processIncomingData(data).then(() => {\n         // Web Platform:\n         // when that is done:\n         this.hideProgressOfComponents();\n      });\n   }\n\n   ///\n   /// Components\n   ///\n\n   /**\n    * @method attachFlexlayout\n    *\n    *\n    * @param {Object} component - a webix flexlayout element instance\n    */\n   attachFlexlayout(component) {\n      var dc = this.__dataCollection;\n\n      // prevent attach many times\n      if (this.__flexComponentIds.indexOf(component.config.id) > -1) {\n         return;\n      } else {\n         // keep component id to an array\n         this.__flexComponentIds.push(component.config.id);\n      }\n   }\n\n   /**\n    * @method bind\n    *\n    *\n    * @param {Object} component - a webix element instance\n    */\n   bind(component) {\n      var dc = this.__dataCollection;\n\n      // prevent bind many times\n      // keep component id to an array\n      if (this.__bindComponentIds.indexOf(component.config.id) === -1)\n         this.__bindComponentIds.push(component.config.id);\n\n      if ($$(component.config.id).data?.find?.({}).length > 0) return;\n\n      if (\n         component.config.view == \"datatable\" ||\n         component.config.view == \"dataview\" ||\n         component.config.view == \"treetable\" ||\n         component.config.view == \"kanban\"\n      ) {\n         if (dc) {\n            var items = dc.count();\n            if (\n               items == 0 &&\n               (this._dataStatus == this.dataStatusFlag.notInitial ||\n                  this._dataStatus == this.dataStatusFlag.initializing) &&\n               component.showProgress\n            ) {\n               component.showProgress({ type: \"icon\" });\n            }\n\n            component.define(\"datafetch\", 20);\n            component.define(\"datathrottle\", 500);\n\n            // initial data of treetable\n            if (component.config.view == \"treetable\") {\n               if (\n                  this.datasource &&\n                  this.datasource.isGroup &&\n                  this.__treeCollection\n               ) {\n                  component.define(\"data\", this.__treeCollection);\n                  component.refresh();\n               } else {\n                  // NOTE: tree data does not support dynamic loading when scrolling\n                  // https://forum.webix.com/discussion/3078/dynamic-loading-in-treetable\n                  component.define(\"data\", []);\n                  component.parse(dc.find({}));\n               }\n            } else {\n               component.data.sync(dc);\n            }\n\n            // Implement .onDataRequest for paging loading\n            if (!this.settings.loadAll) {\n               component.___AD = component.___AD || {};\n               // if (component.___AD.onDataRequestEvent) component.detachEvent(component.___AD.onDataRequestEvent);\n               if (!component.___AD.onDataRequestEvent) {\n                  component.___AD.onDataRequestEvent = component.attachEvent(\n                     \"onDataRequest\",\n                     (start, count) => {\n                        if (component.showProgress)\n                           component.showProgress({ type: \"icon\" });\n\n                        // load more data to the data collection\n                        dc.loadNext(count, start);\n\n                        return false; // <-- prevent the default \"onDataRequest\"\n                     }\n                  );\n               }\n\n               // // NOTE : treetable should use .parse or TreeCollection\n               // // https://forum.webix.com/discussion/1694/tree-and-treetable-using-data-from-datacollection\n               // if (\n               //    component.config.view == \"treetable\" &&\n               //    !this.datasource.isGroup\n               // ) {\n               //    component.___AD = component.___AD || {};\n               //    if (!component.___AD.onDcLoadData) {\n               //       component.___AD.onDcLoadData = () => {\n               //          component.parse(dc.find({}));\n               //       };\n\n               //       this.on(\"loadData\", component.___AD.onDcLoadData);\n               //    }\n               // }\n            }\n         } else {\n            component.data.unsync();\n         }\n      } else if (component.bind) {\n         if (dc) {\n            // Do I need to check if there is any data in the collection before binding?\n            component.bind(dc);\n         } else {\n            component.unbind();\n         }\n\n         if (component.refresh) component.refresh();\n      }\n   }\n\n   unbind(component) {\n      if (!component) return;\n\n      component.detachEvent(\"onDataRequest\");\n      if (component.___AD) {\n         if (component.___AD.onDataRequestEvent)\n            delete component.___AD.onDataRequestEvent;\n\n         if (component.___AD.onDcLoadData) {\n            if (this.off) this.off(\"loadData\", component.___AD.onDcLoadData);\n            delete component.___AD.onDcLoadData;\n         }\n      }\n\n      if (component.data && component.data.unsync) {\n         component.data.unsync();\n         component.define(\"data\", []);\n      }\n\n      if (component.unbind) component.unbind();\n\n      if (component.refresh) component.refresh();\n\n      // remove from array\n      this.__bindComponentIds = (this.__bindComponentIds || []).filter(\n         (id) => id != component.config.id\n      );\n   }\n\n   hideProgressOfComponents() {\n      this.__bindComponentIds.forEach((comId) => {\n         if ($$(comId) && $$(comId).hideProgress) $$(comId).hideProgress();\n      });\n   }\n\n   /** Private methods */\n\n   /**\n    * @method _dataCollectionNew\n    * Get webix.DataCollection\n    *\n    * @return {webix.DataCollection}\n    *\n    * @param {Array} data - initial data\n    */\n   _dataCollectionNew(data) {\n      // get a webix data collection\n      let dc = new webix.DataCollection({\n         data: data || [],\n      });\n\n      this._extendCollection(dc);\n\n      return dc;\n   }\n\n   /**\n    * @method _treeCollectionNew\n    * Get webix.TreeCollection\n    *\n    * @return {webix.TreeCollection}\n    *\n    */\n   _treeCollectionNew() {\n      // get a webix data collection\n      let treeStore = new webix.TreeCollection();\n\n      this._extendCollection(treeStore);\n\n      return treeStore;\n   }\n\n   _extendCollection(dataStore) {\n      // Apply this data collection to support multi-selection\n      // https://docs.webix.com/api__refs__selectionmodel.html\n      webix.extend(dataStore, webix.SelectionModel);\n\n      dataStore.___AD = dataStore.___AD || {};\n\n      // Implement .onDataRequest for paging loading\n      if (!this.settings.loadAll) {\n         if (!dataStore.___AD.onDataRequestEvent) {\n            dataStore.___AD.onDataRequestEvent = dataStore.attachEvent(\n               \"onDataRequest\",\n               (start, count) => {\n                  if (start < 0) start = 0;\n\n                  // load more data to the data collection\n                  this.loadData(start, count);\n\n                  return false; // <-- prevent the default \"onDataRequest\"\n               }\n            );\n         }\n\n         if (!dataStore.___AD.onAfterLoadEvent) {\n            dataStore.___AD.onAfterLoadEvent = dataStore.attachEvent(\n               \"onAfterLoad\",\n               () => {\n                  this.emit(\"loadData\", {});\n               }\n            );\n         }\n      }\n\n      // override unused functions of selection model\n      dataStore.addCss = function () {};\n      dataStore.removeCss = function () {};\n      dataStore.render = function () {};\n\n      if (!dataStore.___AD.onAfterLoad) {\n         dataStore.___AD.onAfterLoad = dataStore.attachEvent(\n            \"onAfterLoad\",\n            () => {\n               this.hideProgressOfComponents();\n            }\n         );\n      }\n   }\n\n   parseTreeCollection(data = {}) {\n      if (\n         !(this.__datasource instanceof ABObjectQuery) ||\n         !this.__datasource.isGroup ||\n         !this.__treeCollection\n      )\n         return;\n\n      let addRowToTree = (join = {}, parentAlias = null) => {\n         let alias = join.alias;\n\n         (data.data || []).forEach((row) => {\n            let dataId = row[`${alias}.uuid`] || row[`${alias}.id`];\n            if (!dataId) return;\n\n            // find parent nodes\n            let parentItemIds = [];\n            let parentId =\n               row[`${parentAlias}.uuid`] || row[`${parentAlias}.id`];\n            if (parentId) {\n               parentItemIds = this.__treeCollection\n                  .find(\n                     (item) =>\n                        item._alias == parentAlias && item._dataId == parentId\n                  )\n                  .map((item) => item.id);\n            }\n\n            // check exists\n            let exists = this.__treeCollection.find((item) => {\n               return (\n                  item._alias == alias &&\n                  item._dataId == dataId &&\n                  (parentItemIds.length == 0 ||\n                     parentItemIds.indexOf(item.$parent) > -1)\n               );\n            }, true);\n            if (exists) return;\n\n            let treeNode = {};\n            treeNode._alias = alias;\n            treeNode._dataId = dataId;\n            treeNode._itemId = row.id; // Keep row id for set cursor to data collection\n\n            Object.keys(row).forEach((propName) => {\n               // Pull value from alias\n               if (propName.indexOf(`${alias}.`) == 0) {\n                  treeNode[propName] = row[propName];\n               }\n            });\n\n            if (row.translations) treeNode.translations = row.translations;\n\n            // child nodes\n            if (parentItemIds.length > 0)\n               parentItemIds.forEach((parentItemId) => {\n                  this.__treeCollection.add(treeNode, null, parentItemId);\n               });\n            // root node\n            else this.__treeCollection.add(treeNode, null);\n         });\n\n         // Sub-joins\n         (join.links || []).forEach((link) => {\n            addRowToTree(link, alias);\n         });\n      };\n\n      // Show loading cursor\n      (this.__bindComponentIds || []).forEach((comId) => {\n         //// Webix Command here:\n         let boundComp = $$(comId);\n         if (boundComp && boundComp.showProgress)\n            boundComp.showProgress({ type: \"icon\" });\n\n         if (boundComp.data && boundComp.data.unsync) boundComp.data.unsync();\n      });\n\n      addRowToTree(this.__datasource.joins());\n\n      // Hide loading cursor\n      (this.__bindComponentIds || []).forEach((comId) => {\n         let boundComp = $$(comId);\n         if (boundComp && boundComp.hideProgress) boundComp.hideProgress();\n         boundComp.define(\"data\", this.__treeCollection);\n      });\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.datasource) {\n         this.warningsMessage(`doesn't have a datasource.`);\n      } else if (this.linkDatacollectionID) {\n         const linkDC = this.AB.datacollectionById(this.linkDatacollectionID);\n\n         if (!linkDC)\n            this.warningsMessage(\n               `can't resolve linkDatacollectionID[${this.linkDatacollectionID}]`\n            );\n      }\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Datacollection[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   get userScopes() {\n      return this.AB.Account.scopes();\n   }\n};\n","var ABDefinitionCore = require(\"../core/ABDefinitionCore\");\n\nmodule.exports = class ABDefinition extends ABDefinitionCore {\n   // constructor(attributes, AB) {\n   //    super(attributes, AB);\n   // }\n};\n","/**\n * ABEmitter\n *\n * This is the platform dependent implementation of an Emitter object.\n *\n */\n\nvar EventEmitter = require(\"events\").EventEmitter;\n\nmodule.exports = class ABEmitter extends EventEmitter {\n   constructor() {\n      super(/*{ maxListeners: 0 }*/);\n   }\n};\n","const ABHintCore = require(\"../core/ABHintCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABHint extends ABHintCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // listen\n      // this.AB.on(\"ab.abprocess.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy(App) {\n      // debugger;\n      // remove all my Elements\n      var allSteps = this.steps();\n      var allDestroy = [];\n      allSteps.forEach((e) => {\n         allDestroy.push(e.destroy());\n      });\n      // remove reference on App and View\n      let hintIndex = App.hintIDs.indexOf(this.id);\n      if (hintIndex > -1) {\n         App.hintIDs.splice(hintIndex, 1);\n         App.save();\n      }\n\n      let view = App.views((v) => {\n         return v.id == this.settings.view;\n      })[0];\n\n      if (view) {\n         delete view.settings.hintID;\n         view.save();\n      }\n\n      return Promise.all(allDestroy).then(() => {\n         // now remove myself\n         return new Promise((resolve, reject) => {\n            this.toDefinition()\n               .destroy()\n               .then(() => {\n                  webix.message({\n                     text: L(\"Tutorial Deleted\"),\n                     type: \"success\",\n                     expire: 3000,\n                  });\n                  resolve();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n      });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *                .resolve( {this} )\n    */\n   save() {\n      return this.toDefinition()\n         .save()\n         .then((data) => {\n            // if I didn't have an .id then this was a create()\n            // and I need to update my data with the generated .id\n\n            if (!this.id) {\n               this.id = data.id;\n            }\n            return this;\n         });\n   }\n\n   isValid() {\n      // debugger;\n      return true;\n      // var validator = this.AB.Validation.validator();\n\n      // // label/name must be unique:\n      // var isNameUnique =\n      //    this.AB.processes((o) => {\n      //       return o.name.toLowerCase() == this.name.toLowerCase();\n      //    }).length == 0;\n      // if (!isNameUnique) {\n      //    validator.addError(\n      //       \"name\",\n      //       L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n      //    );\n      // }\n\n      // return validator;\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // debugger;\n      // report both OUR warnings, and any warnings from any of our fields\n      // var allWarnings = [].concat(this._warnings);\n      // this.elements().forEach((e) => {\n      //    e.warningsEval();\n      //    allWarnings = allWarnings.concat(e.warnings());\n      // });\n      // if (this.elements().length == 0) {\n      //    allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      // }\n      // // perform a check of our xml document to see if we have any unknown\n      // // shapes\n      // if (!this._DOMParser) {\n      //    if (window.DOMParser) {\n      //       // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n      //       this._DOMParser = function (xmlStr) {\n      //          return new window.DOMParser().parseFromString(\n      //             xmlStr,\n      //             \"text/xml\"\n      //          );\n      //       };\n      //    } else if (\n      //       typeof window.ActiveXObject != \"undefined\" &&\n      //       new window.ActiveXObject(\"Microsoft.XMLDOM\")\n      //    ) {\n      //       this._DOMParser = function (xmlStr) {\n      //          var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n      //          xmlDoc.async = \"false\";\n      //          xmlDoc.loadXML(xmlStr);\n      //          return xmlDoc;\n      //       };\n      //    } else {\n      //       throw new Error(\"No XML parser found\");\n      //    }\n      // }\n      // // find any references to our generic shapes\n      // let xml = this._DOMParser(this.xmlDefinition);\n      // const genericShapes = [\n      //    \"bpmn2:startEvent\",\n      //    \"bpmn2:task\",\n      //    \"bpmn2:endEvent\",\n      // ];\n      // genericShapes.forEach((s) => {\n      //    let allElements = xml.getElementsByTagName(s);\n      //    for (let x = 0; x < allElements.length; x++) {\n      //       // if we don't know about this shape\n      //       let ele = allElements[x];\n      //       let myEle = this.elementForDiagramID(allElements[x].id);\n      //       if (!myEle) {\n      //          this.unknownShape(allElements[x]);\n      //       }\n      //    }\n      // });\n      // // if any unknown shapes have been reported:\n      // if (this._unknownShapes.length) {\n      //    allWarnings.push({\n      //       message: \"Generic Tasks still undefined.\",\n      //       data: {},\n      //    });\n      // }\n      //\n      // return allWarnings;\n   }\n\n   createHintUI() {\n      // if already loaded skip\n      if ($$(this.id)) return;\n\n      let steps = [];\n      let next = 0;\n      let display = webix.storage.cookie.get(this.id);\n      if (display?.hide) return;\n      let dontShow = `<label class=\"dontShow\">\n                        <input onclick=\"webix.storage.cookie.put(this.dataset.hintId, {'hide': this.checked});\" data-hint-id=\"${\n                           this.id\n                        }\" type=\"checkbox\">\n                        ${L(\"Don't show this again.\")}\n                     </label>`;\n      this.stepIDs.forEach((step) => {\n         next++;\n         let newStep = {};\n         newStep.id = this._steps[step].id;\n         newStep.el = this._steps[step].settings.el;\n         newStep.event = this._steps[step].settings.event;\n         newStep.title = this._steps[step].name;\n         newStep.text = this._steps[step].text + dontShow;\n         if (this.stepIDs[next]) {\n            newStep.nextEl = this._steps[this.stepIDs[next]].settings.el;\n            if (newStep.nextEl) {\n               newStep.hintId = this.id;\n               newStep.eventEl = \"button\"; // added this so we do not trigger a second advance on the hint when triggering the click below\n               newStep.next = function (event) {\n                  let nextEl = this.nextEl;\n                  let theNextEl = document.querySelector(nextEl);\n                  if (theNextEl && theNextEl.checkVisibility()) {\n                     return false;\n                  } else {\n                     document.querySelector(this.el).click();\n                     return false;\n                  }\n               };\n            }\n         }\n         if (newStep.el) steps.push(newStep);\n      });\n\n      let ui = {\n         view: \"hint\",\n         id: this.id,\n         steps: steps,\n         on: {\n            onNext: (step) => {\n               setTimeout(() => {\n                  const boxes = document.querySelectorAll(\n                     \"input[data-hint-id='\" + this.id + \"']\"\n                  );\n                  let display = webix.storage.cookie.get(this.id);\n                  boxes.forEach((b) => {\n                     b.checked = display?.hide || false;\n                  });\n               }, 100);\n            },\n            onPrevious: (step) => {\n               setTimeout(() => {\n                  const boxes = document.querySelectorAll(\n                     \"input[data-hint-id='\" + this.id + \"']\"\n                  );\n                  let display = webix.storage.cookie.get(this.id);\n                  boxes.forEach((b) => {\n                     b.checked = display?.hide || false;\n                  });\n               }, 100);\n            },\n         },\n      };\n\n      webix.delay(\n         () => {\n            try {\n               webix.ui(ui).start();\n            } catch (err) {\n               this.AB.notify.developer(err, {\n                  context:\n                     \"ABHint.createUIHint() error calling webix.ui(ui).start()\",\n                  ui,\n               });\n            }\n         },\n         null,\n         null,\n         2000\n      );\n\n      // $$(this.id);\n   }\n};\n","const ABIndexCore = require(\"../core/ABIndexCore\");\n\nmodule.exports = class ABIndex extends ABIndexCore {\n   // constructor(attributes, object) {\n   //    super(attributes, object);\n   // }\n\n   /**\n    * @method save()\n    * persist this instance of ABIndex with it's parent ABObject\n    * @return {Promise}\n    */\n   save() {\n      return super\n         .save()\n         .then(() => this.object.indexSave(this))\n         .then(() => this.migrateCreate());\n   }\n\n   /**\n    * @method destroy()\n    * destroy the current instance of ABIndex\n    * also remove it from our parent ABObject\n    * @return {Promise}\n    */\n   destroy() {\n      return new Promise((resolve, reject) => {\n         if (this.id) {\n            this.migrateDrop()\n               .then(() => {\n                  return super.destroy();\n               })\n               .then(() => this.object.indexRemove(this))\n               .then(resolve)\n               .catch(reject);\n         } else {\n            resolve();\n         }\n      });\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this._unknownFieldIDs || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown field id[${id}]`);\n      });\n\n      if (this.fields.length == 0) {\n         this.warningsMessage(`is not referencing any fields`);\n      }\n   }\n\n   /**\n    * @method warningsMessage()\n    * generate a commonly formatted warning message for this ABField.\n    * This is expected to be called from within a .warningsEval()\n    * method when generating warnings.\n    * @param {string} msg\n    *        the warning string to display\n    * @param {json} data\n    *        any relevant additional information for a developer to refer to.\n    */\n   warningsMessage(msg, data = {}) {\n      let message = `Index[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return this.AB.Network.post({\n         url: `/definition/migrate/object/${this.object.id}/index/${this.id}`,\n         // data: this.toObj(),\n      });\n   }\n\n   migrateDrop() {\n      return this.AB.Network[\"delete\"]({\n         url: `/definition/migrate/object/${this.object.id}/index/${this.id}`,\n      });\n   }\n};\n","/**\n * ABMLClass\n * manage the multilingual information of an instance of a AB Defined Class.\n *\n * these classes have certain fields (\"label\", \"description\"), that can be\n * represented in different language options as defined by our platform.\n *\n * This platform ABMLClass will define 2 methods that allow for the translation\n * untranslation of this data.\n */\nvar ABMLClassCore = require(\"../core/ABMLClassCore\");\n\nmodule.exports = class ABMLClass extends ABMLClassCore {\n   constructor(fieldList, AB) {\n      super(fieldList, AB);\n\n      this._warnings = [];\n      // {array}\n      // an array of warning messages for this object.\n      // each warning entry should be in the format:\n      // WarningMessage: {\n      //    message: {string} \"message to display\"\n      //    data: {json} additional debugging information\n      // }\n   }\n\n   // fromValues(attributes) {\n   //    super.fromValues(attributes);\n   // }\n\n   /**\n    * @method warnings()\n    * returns the stored warnings for this ONE object.\n    * @return {array} WarningMessage\n    */\n   warnings() {\n      return this._warnings;\n   }\n\n   /**\n    * @method warningsEval()\n    * This method causes an object to re-evaluate it's settings to see if there\n    * are any potential errors.\n    */\n   warningsEval() {\n      this._warnings = [];\n   }\n\n   /**\n    * @method warningsAll()\n    * returns all relevant warnings for the current Object. This includes any\n    * sub fields, links, views, etc...\n    * @return {array} warning structures\n    *          [ {WarningMessage}, ... ]\n    */\n   warningsAll() {\n      return this.warnings();\n   }\n\n   /**\n    * @method languageDefault\n    * return a default language code.\n    * @return {string}\n    */\n   languageDefault() {\n      return this.AB.Account.language() || \"en\";\n   }\n\n   /**\n    * @method destroy()\n    * remove this definition.\n    * @return {Promise}\n    */\n   async destroy() {\n      var def = this.toDefinition();\n      if (def.id) {\n         return def.destroy().catch((err) => {\n            if (err.toString().indexOf(\"No record found\") > -1) {\n               // this is weird, but not breaking:\n               console.log(\n                  `ABMLClass.destroy(): could not find record for id[${def.id}]`\n               );\n               console.log(def);\n               return;\n            }\n            throw err;\n         });\n      }\n      return Promise.resolve();\n   }\n\n   /**\n    * @method save()\n    * persist this definition of our {ABxxx} Object\n    * @return {Promise}\n    */\n   async save() {\n      var def = this.toDefinition();\n      // if not name, try to use our label as the name\n      def.name = def.name || this.name || this.label || \"name\";\n      var data = await def.save();\n      if (!this.id) {\n         this.id = data.id;\n      }\n   }\n};\n","const ABModelCore = require(\"../core/ABModelCore\");\n\n//\n// ABModel\n//\n// Represents the Data interface for an ABObject data.\n//\n// 2 ways to use an ABModel to load a DataTable:\n// \tMethod 1:\n// \tgather all the data externally and send to the DataTable\n//\t\tModel.findAll()\n//\t\t.then((data)=>{\n//\t\t\tDataTable.parse(data);\n//\t\t})\n//\n// \tMethod 2:\n// \tSet the Model object with a condition / skip / limit, then\n// \tuse it to load the DataTable:\n//\t\tModel.where({})\n//\t\t.skip(XX)\n//\t\t.limit(XX)\n//\t\t.loadInto(DataTable);\n\nfunction errorPopup(error) {\n   // Show the pop up\n   if (error && error.data && error.data.error == \"READONLY\") {\n      webix.alert({\n         title: \"Your action is blocked\",\n         ok: \"Ok\",\n         text: error.data.message || \"\",\n         type: \"alert-warning\",\n      });\n   }\n}\n\n/*\n * @function no_socket_trigger()\n * a common routine to trigger an update.\n * In the case where our AB.Network.type() isn't a socket implementation\n * we need to manually trigger the expected socket events ourselves.\n * This fn() attempts to simulate the socket responses in such a case.\n * @param {ABModel} model\n *        The ABModel currently processing the network transaction.\n * @param {string} key\n *        The socket update trigger we are simulating.\n * @param {json} data\n *        The relevant response from our network transaction.\n */\nfunction no_socket_trigger(model, key, data) {\n   // If we do not have socket updates available, then trigger an\n   // update event with this data.\n   if (model.AB.Network.type() != \"socket\") {\n      model.AB.emit(key, {\n         objectId: model.object.id,\n         data,\n      });\n   }\n}\n\nmodule.exports = class ABModel extends ABModelCore {\n   constructor(object) {\n      super(object);\n\n      this.handler_create = (...params) => {\n         this.handler_common(\"ab.datacollection.create\", ...params);\n      };\n\n      this.handler_delete = (...params) => {\n         this.handler_common(\"ab.datacollection.delete\", ...params);\n      };\n\n      this.handler_findAll = (...params) => {\n         this.handler_common(null, ...params);\n      };\n\n      this.handler_logs = (context, err, data) => {\n         if (err) {\n            context.reject?.(err);\n            return;\n         }\n         context.resolve?.(data);\n      };\n\n      this.handler_update = (...params) => {\n         this.handler_common(\"ab.datacollection.update\", ...params);\n      };\n\n      this.handler_common = (key, context, err, data) => {\n         // key: {string} the relevant socket event key\n         //      can be null if not relevant.\n         // context : {obj} any provided context data provided on the\n         //           this.AB.Network.get() call.\n         // err: {Error} any returned error message from api\n         // data: {obj} returned data from the model-get api in format:\n         //       {data: [], total_count: 1, pos: 0, offset: 0, limit: 0}\n         if (err) {\n            context.reject?.(err);\n            return;\n         }\n\n         // let jobID = this.AB.jobID();\n         // console.log(`${jobID} : normalization begin`);\n         // let timeFrom = performance.now();\n         if (key) {\n            // on \"update\" & \"create\" we want to normalizeData()\n            if (key.indexOf(\"delete\") == -1) {\n               this.normalizeData(data);\n            }\n         } else {\n            // on a findAll we normalize data.data\n            this.normalizeData(data.data);\n         }\n         // let timeTo = performance.now();\n         // console.log(`${jobID} : normalization end:  ${timeTo - timeFrom}ms`);\n\n         context.resolve?.(data);\n\n         // if (key) {\n         //    no_socket_trigger(this, key, data);\n         // }\n      };\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   // Prepare multilingual fields to be untranslated\n   // Before untranslating we need to ensure that values.translations is set.\n   prepareMultilingualData(values) {\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n      // if mlFields are inside of the values saved we want to translate otherwise do not because it will reset the translation field and you may loose unchanged translations\n      var shouldTranslate = false;\n      if (mlFields.length) {\n         mlFields.forEach(function (field) {\n            if (values[field] != null) {\n               shouldTranslate = true;\n            }\n         });\n      }\n      if (shouldTranslate) {\n         if (\n            values.translations == null ||\n            typeof values.translations == \"undefined\" ||\n            values.translations == \"\"\n         ) {\n            values.translations = [];\n         }\n         this.object.unTranslate(values, values, mlFields);\n      }\n   }\n\n   request(method, params) {\n      return this.AB.Network[method](params);\n   }\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      values.batch.map((vals) => {\n         return this.prepareMultilingualData(vals.data);\n      });\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, (context, err, data) => {\n            if (err) {\n               reject(err);\n               return;\n            }\n            this.normalizeData(data);\n            resolve(data);\n            // FIX: now with sockets, the triggers are fired from socket updates.\n            // trigger a create event\n            // triggerEvent('create', this.object, data);\n         });\n\n         this.AB.Network.post(\n            {\n               url: this.object.urlRestBatch(),\n               params: values,\n            },\n            {\n               key: jobID,\n               context: {},\n            }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data);\n\n            //    resolve(data);\n\n            //    // FIX: now with sockets, the triggers are fired from socket updates.\n            //    // trigger a create event\n            //    // triggerEvent('create', this.object, data);\n            // })\n            .catch(reject);\n      });\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   create(values) {\n      this.prepareMultilingualData(values);\n\n      // add default values record if no value is passed for column\n      this.object.fields().forEach((f) => {\n         if (values[f.columnName] === undefined) {\n            f.defaultValue(values);\n         }\n      });\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_create);\n         this.AB.Network.post(\n            {\n               url: this.object.urlRest(),\n               params: values,\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         )\n            .then((newVal) => {})\n            .catch((err) => {\n               errorPopup(err);\n               reject(err);\n            });\n      }).then((newVal) => {\n         no_socket_trigger(this, \"ab.datacollection.create\", newVal);\n         return newVal;\n      });\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_delete);\n         this.AB.Network[\"delete\"](\n            {\n               url: this.object.urlRestItem(id),\n            },\n            {\n               key: jobID,\n               id,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            errorPopup(err);\n            reject(err);\n         });\n      }).then((res) => {\n         // properly issue the delete\n         no_socket_trigger(this, \"ab.datacollection.delete\", id);\n         return res;\n      });\n   }\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   async findAll(cond) {\n      cond = cond || {};\n\n      // scan the rules and convert any is_current_date rules to UTC daytime range.\n      let rules = cond.where?.rules;\n      while (rules?.length) {\n         let nestedRules = [];\n         rules.forEach((rule) => {\n            if (rule.rule === \"is_current_date\")\n               rule.value = this.AB.rules.getUTCDayTimeRange();\n            else if (rule.rules?.length)\n               nestedRules = nestedRules.concat(rule.rules);\n         });\n\n         rules = nestedRules;\n      }\n\n      // \t\t// prepare our condition:\n      // \t\tvar newCond = {};\n\n      // \t\t// if the provided cond looks like our { where:{}, skip:xx, limit:xx } format,\n      // \t\t// just use this one.\n      // \t\tif (cond.where) {\n      // \t\t\tnewCond = cond;\n      // \t\t} else {\n\n      // \t\t\t// else, assume the provided condition is the .where clause.\n      // \t\t\tnewCond.where = cond;\n      // \t\t}\n\n      // /// if this is our depreciated format:\n      // if (newCond.where.where) {\n      // \tOP.Error.log('Depreciated Embedded .where condition.');\n      // }\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_findAll);\n         this.AB.Network.get(\n            {\n               url: this.object.urlRest(),\n               params: cond,\n               // params: newCond\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data.data);\n\n            //    resolve(data);\n            // })\n            .catch((err) => {\n               if (err && err.code) {\n                  switch (err.code) {\n                     case \"ER_PARSE_ERROR\":\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"AppBuilder:ABModel:findAll(): Parse Error with provided condition\",\n                           condition: cond,\n                        });\n                        break;\n\n                     default:\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"AppBuilder:ABModel:findAll(): Unknown Error with provided condition\",\n                           condition: cond,\n                        });\n                        break;\n                  }\n               }\n               reject(err);\n            });\n      });\n   }\n\n   /**\n    * @method loadInto\n    * loads the current values into the provided Webix DataTable\n    * @param {DataTable} DT  A Webix component that can dynamically load data.\n    */\n   loadInto(DT) {\n      // if a limit was applied, then this component should be loading dynamically\n      if (this._limit) {\n         DT.define(\"datafetch\", this._limit);\n         DT.define(\"datathrottle\", 250); // 250ms???\n\n         // catch the event where data is requested:\n         // here we will do our own findAll() so we can persist\n         // the provided .where condition.\n\n         // oh yeah, and make sure to remove any existing event handler when we\n         // perform a new .loadInto()\n         DT.___AD = DT.___AD || {};\n         if (DT.___AD.onDataRequestEvent) {\n            DT.detachEvent(DT.___AD.onDataRequestEvent);\n         }\n         DT.___AD.onDataRequestEvent = DT.attachEvent(\n            \"onDataRequest\",\n            (start, count) => {\n               var cond = {\n                  where: this._where,\n                  sort: this._sort,\n                  limit: count,\n                  skip: start,\n               };\n\n               if (DT.showProgress) DT.showProgress({ type: \"icon\" });\n\n               this.findAll(cond).then((data) => {\n                  /*\n                   // In V2: we move the row height processing into \n                   // the interface designer \n\n                  data.data.forEach((item) => {\n                     if (\n                        item.properties != null &&\n                        item.properties.height != \"undefined\" &&\n                        parseInt(item.properties.height) > 0\n                     ) {\n                        item.$height = parseInt(item.properties.height);\n                     } else if (parseInt(this._where.height) > 0) {\n                        item.$height = parseInt(this._where.height);\n                     }\n                  });\n                  */\n                  DT.parse(data);\n\n                  if (DT.hideProgress) DT.hideProgress();\n               });\n\n               return false; // <-- prevent the default \"onDataRequest\"\n            }\n         );\n\n         DT.refresh();\n      }\n\n      // else just load it all at once:\n      var cond = {};\n      if (this._where) cond.where = this._where;\n      if (this._sort) cond.sort = this._sort;\n      if (this._limit != null) cond.limit = this._limit;\n      if (this._skip != null) cond.skip = this._skip;\n\n      if (DT.showProgress) DT.showProgress({ type: \"icon\" });\n\n      this.findAll(cond)\n         .then((data) => {\n            // v2: we no longer process item $height\n            /*\n            data.data.forEach((item) => {\n               if (\n                  item.properties != null &&\n                  item.properties.height != \"undefined\" &&\n                  parseInt(item.properties.height) > 0\n               ) {\n                  item.$height = parseInt(item.properties.height);\n               } else if (parseInt(this._where.height) > 0) {\n                  item.$height = parseInt(this._where.height);\n               }\n            });\n            */\n\n            DT.parse(data);\n\n            if (DT.hideProgress) DT.hideProgress();\n         })\n         .catch((err) => {\n            console.error(\"!!!!!\", err);\n         });\n   }\n\n   /**\n    * @method logs()\n    * return the log history related to this model's ABObject.\n    * @param {hash} options\n    *        a key=>value hash of optional search criteria\n    *        .rowId {string} the uuid of the individual entry we are querying\n    *        .levelName {string} the type of entry [\"insert\", \"update\", \"delete\"]\n    *        .username {string} the entries associated with the given user\n    *        .startDate {date} entries that happened ON or AFTER this date\n    *        .endDate {date} entries that happened ON or BEFORE this date\n    *        .start {integer} paging control: how many entries to skip\n    *        .limit {integer} paging control: only return this # entries\n    * @return {Promise}\n    */\n   logs(options) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_logs);\n         this.AB.Network.get(\n            {\n               url: this.object.urlRestLog(),\n               params: options,\n               // params: newCond\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            if (err && err.code) {\n               this.AB.notify.developer(err, {\n                  context: \"AppBuilder:ABModel:logs(): Error\",\n                  options,\n               });\n            }\n            reject(err);\n         });\n      });\n   }\n\n   /**\n    * @method limit\n    * set the limit value for this set of data\n    * @param {integer} limit  the number or elements to return in this call\n    * @return {ABModel} this object that is chainable.\n    */\n   limit(limit) {\n      this._limit = limit;\n      return this;\n   }\n\n   /**\n    * @method skip\n    * set the skip value for this set of data\n    * @param {integer} skip  the number or elements to skip\n    * @return {ABModel} this object that is chainable.\n    */\n   skip(skip) {\n      this._skip = skip;\n      return this;\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      this.prepareMultilingualData(values);\n\n      // remove empty properties\n      for (var key in values) {\n         if (values[key] == null) delete values[key];\n      }\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_update);\n         this.AB.Network.put(\n            {\n               url: this.object.urlRestItem(id),\n               params: values,\n            },\n            { key: jobID, context: { resolve, reject } }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data);\n\n            //    resolve(data);\n\n            //    // If we do not have socket updates available, then trigger an\n            //    // update event with this data.\n            //    if (this.AB.Network.type() != \"socket\") {\n            //       this.AB.emit(\"ab.datacollection.update\", {\n            //          objectId: this.object.id,\n            //          data,\n            //       });\n            //    }\n            // })\n            .catch((err) => {\n               errorPopup(err);\n               reject(err);\n            });\n      }).then((newVal) => {\n         // properly issue the update\n         no_socket_trigger(this, \"ab.datacollection.update\", newVal);\n         return newVal;\n      });\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, (context, err /*, data */) => {\n            if (err) {\n               reject(err);\n               return;\n            }\n            // this.normalizeData(data);\n            resolve(true);\n            // what about checking for socket updates?\n         });\n         this.AB.Network.put(\n            {\n               url: this.object.urlRestBatch(),\n               params: {\n                  rowIds,\n                  values,\n               },\n            },\n            { key: jobID, context: {} }\n         )\n            // .then(() => {\n            //    resolve(true);\n            // })\n            .catch(reject);\n      });\n   }\n};\n","//\n// ABModelAPI\n//\n// Represents the Data interface for an ABObjectQuery data.\n\nconst ABModel = require(\"./ABModel\");\n\nmodule.exports = class ABModelAPI extends ABModel {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   async findAll(cond = {}) {\n      cond.isAPI = true;\n      cond.url = this.object?.request?.url;\n\n      return super.findAll(cond);\n   }\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.batchCreate() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   async create(values) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.create() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.delete() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.update() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.batchUpdate() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n};\n","//\n// ABModelQuery\n//\n// Represents the Data interface for an ABObjectQuery data.\n\nconst ABModel = require(\"./ABModel\");\n\nmodule.exports = class ABModelQuery extends ABModel {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.batchCreate() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   create(values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.create() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.delete() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.update() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.batchUpdate() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n};\n","const ABObjectCore = require(\"../core/ABObjectCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\n// NOTE: this has been moved to NetworkRestSocket:\n//\n// // Start listening for server events for object updates and call triggerEvent as the callback\n// if (typeof io != \"undefined\") {\n//    io.socket.on(\"ab.object.update\", function (msg) {\n//       AB.emit(\"ab.object.update\", {\n//          objectId: msg.objectId,\n//          data: msg.data,\n//       });\n//    });\n// } else {\n//    console.error(\"TODO: ABObject: configure Socket.io\");\n// }\n\n// io.socket.on(\"ab.object.delete\", function (msg) {\n// });\n\nmodule.exports = class ABObject extends ABObjectCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // listen for our ABFields.\"definition.updated\"\n      this.fields().forEach((f) => {\n         f.on(\"definition.updated\", (field) => {\n            // create a new Field with the updated def\n            var def = this.AB.definitionByID(field.id);\n            if (!def) return;\n\n            var newField = this.AB.fieldNew(def, this);\n\n            // we want to keep the same fieldID order:\n            var newFields = [];\n            this.fields().forEach((f) => {\n               if (f.id === field.id) {\n                  newFields.push(newField);\n                  return;\n               }\n               newFields.push(f);\n            });\n\n            this._fields = newFields;\n         });\n      });\n\n      // listen\n      // this.AB.on(\"ab.object.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n\n      this._pendingNetworkRequests = {};\n      // {hash}   uuid : {Promise}\n      // convert our migrateXXXX() operations to be Relay/offline compatible.\n      // if a queued operation is sent after a web browser refresh, then\n      // we will NOT have a pending promise to .resolve()/.reject()\n\n      this._handler_object_migrate = (context, err, response) => {\n         // NOTE:\n         var pending = this._pendingNetworkRequests?.[context.uuid];\n         if (err) {\n            pending?.reject(err);\n            return;\n         }\n         pending?.resolve(response);\n      };\n      this.AB.Network.on(\"object.migrate\", this._handler_object_migrate);\n   }\n\n   /**\n    * @method refreshInstance()\n    * Used when a definition.updated message is detected on this ABObject.\n    * This method will return a new instance based upon the current definition\n    * and properly resolve any handlers and pending network Requests.\n    * @return {ABObject}\n    */\n   refreshInstance() {\n      var newObj = this.AB.objectByID(this.id);\n\n      // prevent doing this multiple times:\n      if (this._pendingNetworkRequests) {\n         // remove object.migrate listener\n         this.AB.Network.removeListener(\n            \"object.migrate\",\n            this._handler_object_migrate\n         );\n\n         // transfer the pending network requests\n         newObj._pendingNetworkRequests = this._pendingNetworkRequests;\n         this._pendingNetworkRequests = null;\n      }\n\n      return newObj;\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n\t\t{\n\t\t\tid: uuid(),\n\t\t\tname: 'name',\n\t\t\tlabelFormat: 'xxxxx',\n\t\t\tisImported: 1/0,\n\t\t\tisExternal: 1/0,\n\t\t\turlPath:'string',\n\t\t\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t\t\t// to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n\t\t\ttranslations:[\n\t\t\t\t{}\n\t\t\t],\n\t\t\tfields:[\n\t\t\t\t{ABDataField}\n\t\t\t]\n\t\t}\n\t\t*/\n\n      super.fromValues(attributes);\n\n      if (this.workspaceViews) this.workspaceViews.fromObj(attributes);\n   }\n\n   //// TODO: Refactor isValid() to ignore op and not error if duplicateName is own .id\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.objects((o) => {\n            return (\n               o.id != this.id &&\n               o.name.toLowerCase() == this.name.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L('Object name must be unique (\"{0}\" already in use)', [this.name])\n         );\n      }\n\n      // Check the common validations:\n      // TODO:\n      // if (!inputValidator.validate(values.label)) {\n      // \t_logic.buttonSaveEnable();\n      // \treturn false;\n      // }\n\n      return validator;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an array of any invalid\n    * value errors.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   isValidData(data) {\n      var validator = this.AB.Validation.validator();\n      this.fields().forEach((f) => {\n         // check if value was passed, if so validate it\n         if (Object.prototype.hasOwnProperty.call(data, f.columnName))\n            f.isValidData(data, validator);\n      });\n\n      return validator;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fieldNew()\n    *\n    * return an instance of a new (unsaved) ABField that is tied to this\n    * ABObject.\n    *\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    *\n    * @param {obj} values  the initial values for this field.\n    *\t\t\t\t\t\t{ key:'{string}'} is required\n    * @return {ABField}\n    */\n   // fieldNew ( values ) {\n   // \t// NOTE: ABFieldManager returns the proper ABFieldXXXX instance.\n   // \treturn ABFieldManager.newField( values, this );\n   // }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      /*\n        return new Promise((resolve, reject) => {\n            // Remove the import object, then its model will not be destroyed\n            if (this.isImported) {\n                this.application\n                    .objectDestroy(this)\n                    .catch(reject)\n                    .then(() => {\n                        resolve();\n                    });\n\n                return;\n            }\n\n            // OK, some of our Fields have special follow up actions that need to be\n            // considered when they no longer exist, so before we simply drop this\n            // object/table, drop each of our fields and give them a chance to clean up\n            // what needs cleaning up.\n\n            // ==> More work, but safer.\n            var fieldDrops = [];\n            this.fields().forEach((f) => {\n                fieldDrops.push(f.destroy());\n            });\n\n            Promise.all(fieldDrops)\n                .then(() => {\n                    return new Promise((next, err) => {\n                        // now drop our table\n                        // NOTE: our .migrateXXX() routines expect the object to currently exist\n                        // in the DB before we perform the DB operations.  So we need to\n                        // .migrateDrop()  before we actually .objectDestroy() this.\n                        this.migrateDrop()\n                            .then(() => {\n                                // finally remove us from the application storage\n                                return this.application.objectDestroy(this);\n                            })\n                            .then(next)\n                            .catch(err);\n                    });\n                })\n\n                // flag .disable to queries who contains this removed object\n                .then(() => {\n                    return new Promise((next, err) => {\n                        this.application\n                            .queries(\n                                (q) =>\n                                    q.objects((o) => o.id == this.id).length > 0\n                            )\n                            .forEach((q) => {\n                                q._objects = q.objects((o) => o.id != this.id);\n\n                                q.disabled = true;\n                            });\n\n                        next();\n                    });\n                })\n                .then(resolve)\n                .catch(reject);\n        });\n */\n\n      var removeFromApplications = () => {\n         var allRemoves = [];\n         this.AB.applications().forEach((app) => {\n            allRemoves.push(app.objectRemove(this));\n         });\n         return Promise.all(allRemoves);\n      };\n\n      var disableRelatedQueries = () => {\n         return new Promise((next /*, err */) => {\n            this.AB.queries(\n               (q) => q.objects((o) => o.id == this.id).length > 0\n            ).forEach((q) => {\n               // q._objects = q.objects((o) => o.id != this.id);\n\n               q.disabled = true;\n            });\n\n            next();\n         });\n      };\n\n      try {\n         // 1) remove us from all Application:\n         await removeFromApplications();\n\n         // 2) disable any connected Queries\n         await disableRelatedQueries();\n\n         // if an imported Object (FederatedTable, Existing Table, etc...)\n         // then skip this step\n         if (this.isImported) {\n            return Promise.resolve();\n         }\n\n         // time to remove my table:\n         // NOTE: our .migrateXXX() routines expect the object to currently exist\n         // in the DB before we perform the DB operations.  So we need to\n         // .migrateDrop()  before we actually .destroy() this.\n         await this.migrateDrop();\n\n         // now remove my definition\n\n         // start with my fields:\n         var fieldDrops = [];\n\n         // Only ABObjects should attempt any fieldDrops.\n         // ABObjectQueries can safely skip this step:\n         if (this.type == \"object\") {\n            var allFields = this.fields();\n            this._fields = []; // clear our field counter so we don't retrigger\n            // this.save() on each field.destroy();\n\n            allFields.forEach((f) => {\n               fieldDrops.push(f.destroy());\n            });\n         }\n         await Promise.all(fieldDrops);\n\n         await super.destroy();\n         this.emit(\"destroyed\");\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABObject.destroy(): error destroying object.\",\n         });\n      }\n\n      // return Promise.resolve()\n      //    .then(() => {\n      //       // 1) remove us from all Application:\n      //       return removeFromApplications();\n      //    })\n      //    .then(() => {\n      //       // 2) disable any connected Queries\n      //       return disableRelatedQueries();\n      //    })\n      //    .then(() => {\n      //       // if an imported Object (FederatedTable, Existing Table, etc...)\n      //       // then skip this step\n      //       if (this.isImported) {\n      //          return Promise.resolve();\n      //       }\n\n      //       // time to remove my table:\n      //       // NOTE: our .migrateXXX() routines expect the object to currently exist\n      //       // in the DB before we perform the DB operations.  So we need to\n      //       // .migrateDrop()  before we actually .destroy() this.\n      //       return this.migrateDrop();\n      //    })\n      //    .then(() => {\n      //       // now remove my definition\n\n      //       // start with my fields:\n      //       var fieldDrops = [];\n\n      //       // Only ABObjects should attempt any fieldDrops.\n      //       // ABObjectQueries can safely skip this step:\n      //       if (this.type == \"object\") {\n      //          var allFields = this.fields();\n      //          this._fields = []; // clear our field counter so we don't retrigger\n      //          // this.save() on each field.destroy();\n\n      //          allFields.forEach((f) => {\n      //             fieldDrops.push(f.destroy());\n      //          });\n      //       }\n\n      //       return Promise.all(fieldDrops)\n      //          .then(() => {\n      //             // now me.\n      //             return super.destroy();\n      //          })\n      //          .then(() => {\n      //             this.emit(\"destroyed\");\n      //          });\n      //    });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save(skipMigrate = false) {\n      var isAdd = false;\n\n      // if this is our initial save()\n      if (!this.id) {\n         this.label = this.label || this.name;\n         isAdd = true;\n      }\n\n      try {\n         await super.save();\n         if (isAdd && !skipMigrate) {\n            await this.migrateCreate();\n         }\n         return this;\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABObject.save()\",\n            obj: this.toObj(),\n         });\n         throw err;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var result = super.toObj();\n\n      result.objectWorkspaceViews = this.workspaceViews?.toObj();\n\n      return result;\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return new Promise((resolve, reject) => {\n         var uuid = this.AB.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"object.migrate\",\n            context: { uuid, id: this.id },\n         };\n         this.AB.Network.post(\n            {\n               url: `/definition/migrate/object/${this.id}`,\n            },\n            jobResponse\n         );\n      });\n   }\n\n   migrateDrop() {\n      return new Promise((resolve, reject) => {\n         var uuid = this.AB.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"object.migrate\",\n            context: { uuid, id: this.id },\n         };\n         this.AB.Network[\"delete\"](\n            {\n               url: `/definition/migrate/object/${this.id}`,\n            },\n            jobResponse\n         );\n      });\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   /**\n    * @method columnResize()\n    *\n    * save the new width of a column\n    *\n    * @param {} id The instance of the field to save.\n    * @param {int} newWidth the new width of the field\n    * @param {int} oldWidth the old width of the field\n    * @return {Promise}\n    */\n   columnResize(columnName, newWidth /*, oldWidth */) {\n      var fieldID = null;\n      for (var i = 0; i < this._fields.length; i++) {\n         if (this._fields[i].columnName == columnName) {\n            fieldID = this._fields[i].id;\n            break;\n            // this._fields[i].settings.width = newWidth;\n         }\n      }\n\n      // Johnny: This is better but still not right.  the ABObject should not be\n      // storing sizes for field widths.  That is a function of the UI and which\n      // Grid is being displayed.  THAT GRID should be storing a column width\n      // locally.\n      // TODO: once we have v2 in place.\n\n      var fieldSettings = this.AB.localSettings(fieldID);\n      fieldSettings = fieldSettings || {};\n      fieldSettings.width = newWidth;\n\n      return this.AB.localSettings(fieldID, fieldSettings);\n      // return this.save();\n   }\n\n   // return the column headers for this object\n   // @param {bool} isObjectWorkspace  return the settings saved for the object workspace\n   columnHeaders(\n      isObjectWorkspace,\n      isEditable,\n      summaryColumns,\n      countColumns,\n      hiddenFieldNames\n   ) {\n      summaryColumns = summaryColumns || [];\n      countColumns = countColumns || [];\n\n      var headers = [];\n      // var columnNameLookup = {};\n\n      // get the header for each of our fields:\n      this.fields().forEach((f) => {\n         var header = f.columnHeader({\n            isObjectWorkspace: isObjectWorkspace,\n            editable: isEditable,\n         });\n\n         if (isEditable) {\n            header.validationRules = f.settings.validationRules;\n         }\n\n         header.alias = f.alias || undefined; // query type\n         header.fieldID = f.id;\n         // header.fieldURL = f.urlPointer();\n\n         // if the field specifies a width\n         if (f.settings.width != 0) {\n            header.width = f.settings.width;\n         }\n\n         // if the User has already updated a local width for this\n         var fieldSettings = this.AB.localSettings(f.id);\n         if (fieldSettings && fieldSettings.width) {\n            if (!header.width || fieldSettings.width > header.width) {\n               // set column width to the customized width\n               header.width = fieldSettings.width;\n            }\n         }\n\n         if (!header.width) {\n            // set column width to adjust:true by default;\n            header.adjust = true;\n         }\n\n         // add the summary footer\n         if (summaryColumns.indexOf(f.id) > -1) {\n            if (f.key == \"calculate\" || f.key == \"formula\") {\n               header.footer = { content: \"totalColumn\", field: f };\n            } else {\n               header.footer = { content: \"summColumn\" };\n            }\n         }\n         // add the count footer\n         else if (countColumns.indexOf(f.id) > -1)\n            header.footer = { content: \"countColumn\" };\n\n         headers.push(header);\n         // columnNameLookup[header.id] = f.columnName; // name => id\n      });\n\n      // update our headers with any settings applied in the Object Workspace\n      /*\n      // In v2: this is handled by the ABDesigner\n      //\n      if (isObjectWorkspace) {\n         let hiddenFieldList = [];\n\n         if (hiddenFieldNames && hiddenFieldNames.length > 0)\n            hiddenFieldList = hiddenFieldNames;\n         // else if (this.workspaceHiddenFields)\n         //    hiddenFieldList = this.workspaceHiddenFields;\n\n         if (hiddenFieldList.length > 0) {\n            hiddenFieldList.forEach((hfID) => {\n               headers.forEach((h) => {\n                  if (columnNameLookup[h.id] == hfID) {\n                     h.hidden = true;\n                  }\n               });\n            });\n         }\n      }\n      */\n\n      return headers;\n   }\n\n   // after a component has rendered, tell each of our fields to perform\n   // any custom display operations\n   // @param {Webix.DataStore} data a webix datastore of all the rows effected\n   //        by the render.\n   customDisplays(data, App, DataTable, rowIds, isEditable) {\n      if (!data || !data.getFirstId) return;\n\n      // var fields = this.fields(f => this.workspaceHiddenFields.indexOf(f.columnName) < 0);\n      let fields = [];\n      DataTable.eachColumn((columnName) => {\n         let field = this.fields((f) => f.columnName == columnName)[0];\n         if (field) fields.push(field);\n      });\n\n      if (rowIds != null) {\n         rowIds.forEach((id) => {\n            let row = data.getItem(id);\n            if (row) {\n               fields.forEach((f) => {\n                  let node = DataTable.getItemNode({\n                     row: row.id,\n                     column: f.columnName,\n                  });\n                  f.customDisplay(row, App, node, {\n                     editable: isEditable,\n                  });\n               });\n            }\n         });\n      } else {\n         let id = data.getFirstId();\n         while (id) {\n            var row = data.getItem(id);\n            if (row) {\n               fields.forEach((f) => {\n                  var node = DataTable.getItemNode({\n                     row: row.id,\n                     column: f.columnName,\n                  });\n                  f.customDisplay(row, App, node, {\n                     editable: isEditable,\n                  });\n               });\n            }\n            id = data.getNextId(id);\n         }\n      }\n   }\n\n   // Display data with label format of object\n   displayData(rowData) {\n      if (rowData == null) return \"\";\n\n      // translate multilingual\n      //// TODO: isn't this a MLObject??  use this.translate()\n      var mlFields = this.multilingualFields();\n      this.translate(rowData, rowData, mlFields);\n\n      var labelData = this.labelFormat || \"\";\n\n      // default label\n      if (!labelData && this.fields().length > 0) {\n         var defaultField = this.fields((f) => f.fieldUseAsLabel())[0];\n         if (defaultField) labelData = `{${defaultField.id}}`;\n         else\n            labelData = `${this.AB.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`; // show id of row\n      }\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            labelData = labelData.replace(colId, field.format(rowData) || \"\");\n         });\n      }\n\n      // if label is empty, then show .id\n      if (!labelData.trim()) {\n         let labelSettings = this.labelSettings || {};\n         if (labelSettings && labelSettings.isNoLabelDisplay) {\n            labelData = L(labelSettings.noLabelText || \"[No Label]\");\n         } else {\n            // show id of row\n            labelData = `${this.AB.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`;\n         }\n      }\n\n      return labelData;\n   }\n\n   currentView() {\n      return this.workspaceViews.getCurrentView();\n   }\n\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = super.warningsAll();\n      this.fields().forEach((f) => {\n         if (!f) return;\n         allWarnings = allWarnings.concat(f?.warnings());\n      });\n\n      this.indexes().forEach((i) => {\n         if (!i) return;\n         allWarnings = allWarnings.concat(i?.warnings());\n      });\n\n      return allWarnings.filter((w) => w);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allFields = this.fields();\n\n      if (allFields.length == 0) {\n         this.warningsMessage(\"has no fields\");\n      }\n\n      (this._unknownFieldIDs || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown field id[${id}]`);\n      });\n\n      (this._unknownIndex || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown index id[${id}]`);\n      });\n\n      allFields.forEach((f) => {\n         f?.warningsEval();\n      });\n\n      this.indexes().forEach((i) => {\n         i?.warningsEval();\n      });\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Object[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n      // this.emit(\"warning\", warnMsg, data);\n   }\n\n   isUuid(text) {\n      console.error(\n         \"ABObject.isUuid(): is depreciated.  directly reference AB.Rules.isUUID() instead.\"\n      );\n      return this.AB.isUUID(text);\n   }\n\n   async getDbInfo() {\n      return this.AB.Network.get({\n         url: `/definition/info/object/${this.id}`,\n      });\n   }\n\n   /**\n    * @method formCleanValues()\n    * perform a final review of the data a form will try to submit for\n    * this object.  The lets individual fields have a chance to update or\n    * remove values before they are sent.\n    * @param {obj} rowData\n    *        The {data} a form has collected and is about to save.\n    * @return {undefined}\n    */\n   formCleanValues(rowData) {\n      this.fields().forEach((f) => {\n         f.formCleanData(rowData);\n      });\n   }\n};\n","const atomicjs = require(\"atomicjs\");\nconst ABObjectApiCore = require(\"../core/ABObjectApiCore\");\n\nmodule.exports = class ABObjectApi extends ABObjectApiCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n   }\n\n   async fetchData(insertDataMax = 20) {\n      if (this.isFetched) return;\n\n      const headers = this.headers;\n\n      const response = await atomicjs(this.request.url, {\n         method: this.request.verb,\n         headers,\n         data: {},\n         timeout: null,\n         withCredentials: false,\n      });\n\n      let parsedResponse = this.dataFromKey(response);\n\n      const model = this.model();\n\n      if (parsedResponse.length == null || parsedResponse.length === 0) {\n         const data = {};\n\n         this.response.fields.forEach((f) => {\n            data[f.columnName] = parsedResponse[f.columnName];\n         });\n\n         await model.create(data);\n\n         return;\n      }\n\n      let pendingModelCreate = [];\n\n      for (let i = 0; i < parsedResponse.length; i++) {\n         const data = {};\n\n         this.response.fields.forEach((f) => {\n            data[f.columnName] = parsedResponse[i][f.columnName];\n         });\n\n         pendingModelCreate.push(model.create(data));\n\n         if (pendingModelCreate.length % insertDataMax === 0)\n            await Promise.all(pendingModelCreate);\n      }\n\n      if (pendingModelCreate.length > 0) await Promise.all(pendingModelCreate);\n\n      this.isFetched = true;\n\n      await this.save();\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save() {\n      return await super.save(true);\n   }\n};\n","const ABObject = require(\"./ABObject\");\n\n/**\n * ABObjectExternal\n * These are ABObjects that ... (might need to be refactored out?)\n * NOTE: on the web client, these should function just like ABObjects\n */\nmodule.exports = class ABObjectExternal extends ABObject {};\n","const ABObject = require(\"./ABObject\");\n\n/**\n * ABObjectImport\n * These are ABObjects that were Imported from existing Tables in the\n * system.\n *\n * NOTE: on the web client, these should function just like ABObjects\n */\nmodule.exports = class ABObjectImport extends ABObject {};\n","//\n// ABObjectQuery\n//\n// A type of Object in our system that is based upon a complex relationship of multiple\n// existing Objects.\n//\n// In the QueryBuilder section of App Builder, a new Query Object can be created.\n// An initial Object can be chosen from our current list of Objects. After that, additional Objects\n// and a specified join type can be specified.\n//\n// A list of fields from each specified Object can also be included as the data to be returned.\n//\n// A where statement is also part of the definition.\n//\n\nconst ABObjectQueryCore = require(\"../core/ABObjectQueryCore\");\n\nvar ABFactory = null;\nif (typeof io != \"undefined\") {\n   io.socket.on(\"ab.query.update\", function (msg) {\n      if (ABFactory) {\n         ABFactory.emit(\"ab.query.update\", {\n            queryId: msg.queryId,\n            data: msg.data,\n         });\n      } else {\n         console.error(\n            \"ABObjectQuery:: received io.socket msg before ABFactory is defined\"\n         );\n         console.error(\"TODO: move this to ABFactory!\");\n      }\n   });\n} else {\n   console.error(\"TODO: install socket.io client for sails updates.\");\n}\n\n// io.socket.on(\"ab.query.delete\", function (msg) {\n// });\n\nmodule.exports = class ABObjectQuery extends ABObjectQueryCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      if (!ABFactory) {\n         ABFactory = AB;\n      }\n      // listen\n      this.AB.on(\"ab.query.update\", (data) => {\n         if (this.id == data.queryId) this.fromValues(data.data);\n      });\n\n      // .fromValues() should already have been called in super()\n      // so now add in our conditionScan()\n      // NOTE: this can be folded into the Core once filterComplex\n      // is fully implemented and not on Platform only.\n\n      // now scan our conditions to make sure they are\n      // 1) reference fields that exist in our Query\n      // 2) completely filled out conditions.\n      this.conditionScan(this.where);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObjectQuery\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   // destroy() {\n   //    return super.destroy().then(() => {\n   //       console.error(\"Move .queryRemove() to Appbuilder Designer.\");\n   //       // return this.AB.queryRemove(this);\n   //    });\n   // }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObjectQuery with it's parent ABApplication\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   // async save() {\n   //    try {\n   //       await super.save();\n   //       return this;\n   //    } catch (err) {\n   //       this.AB.notify.developer(err, {\n   //          context: \"ABObjectQuery.save()\",\n   //          query: this.toObj(),\n   //       });\n   //       throw err;\n   //    }\n   // }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method importFields\n    * instantiate a set of fields from the given attributes.\n    * Our attributes are a set of field URLs That should already be created in their respective\n    * ABObjects.\n    * @param {array} fieldSettings The different field urls for each field\n    *             { }\n    * @param {bool} shouldAliasColumn\n    *        should we add the object alias to the columnNames?\n    *        this is primarily used on the web client\n    */\n   importFields(fieldSettings) {\n      super.importFields(fieldSettings);\n\n      this._fields.forEach((fieldEntry) => {\n         // include object name {aliasName}.{columnName}\n         // to use it in grid headers & hidden fields\n         fieldEntry.field.columnName = `${fieldEntry.alias}.${fieldEntry.field.columnName}`;\n      });\n   }\n\n   /**\n    * @method columnResize()\n    *\n    * save the new width of a column\n    *\n    * @param {} id The instance of the field to save.\n    * @param {int} newWidth the new width of the field\n    * @param {int} oldWidth the old width of the field\n    * @return {Promise}\n    */\n   columnResize(columnName, newWidth, oldWidth) {\n      let field = this.fields((f) => f.columnName == columnName)[0];\n      if (field) {\n         field.settings.width = newWidth;\n\n         return this.save();\n      } else {\n         return Promise.resolve();\n      }\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   // return the column headers for this object\n   // @param {bool} isObjectWorkspace  return the settings saved for the object workspace\n   columnHeaders(\n      isObjectWorkspace,\n      isEditable,\n      summaryColumns,\n      countColumns,\n      hiddenFieldNames\n   ) {\n      var headers = super.columnHeaders(\n         isObjectWorkspace,\n         isEditable,\n         summaryColumns,\n         countColumns,\n         hiddenFieldNames\n      );\n\n      headers.forEach((h) => {\n         // pull object by alias\n         let object = this.objectByAlias(h.alias);\n         if (!object) return;\n\n         let field = object.fieldByID(h.fieldID);\n         if (!field) return;\n\n         // NOTE: query v1\n         let alias = \"\";\n         if (Array.isArray(this.joins())) {\n            alias = field.object.name;\n         } else {\n            alias = h.alias;\n         }\n\n         // include object name {aliasName}.{columnName}\n         // to use it in grid headers & hidden fields\n         h.id = `${alias}.${field.columnName}`;\n\n         // label\n         if (this.settings && this.settings.hidePrefix) {\n            h.header = `${field.label || \"\"}`;\n         } else {\n            h.header = `${field.object.label || \"\"}.${field.label || \"\"}`;\n         }\n\n         // icon\n         if (field.settings && field.settings.showIcon) {\n            h.header = `<span class=\"webix_icon fa fa-${field.fieldIcon()}\"></span>${\n               h.header\n            }`;\n         }\n\n         // If this query supports grouping, then add folder icon to display in grid\n         if (this.isGroup) {\n            let originTemplate = h.template;\n\n            h.template = (item, common) => {\n               if (item[h.id])\n                  return (\n                     common.icon(item, common) +\n                     (originTemplate\n                        ? originTemplate(item, common, item[h.id])\n                        : item[h.id])\n                  );\n               else return \"\";\n            };\n         }\n\n         h.adjust = true;\n         h.minWidth = 220;\n      });\n\n      return headers;\n   }\n\n   /**\n    * @method conditionScan()\n    * Scan the provided condition object and determine if there are any\n    * configuration issues.\n    * @param {obj} rule\n    *        the QueryBuilder rule that we are scanning.\n    * @param {array} listWarnings\n    *        An array of warnings that we should add our notices to.\n    */\n   conditionScan(rule) {\n      if (!rule) {\n         return;\n      }\n\n      if (rule.glue) {\n         (rule.rules || []).forEach((r) => {\n            this.conditionScan(r);\n         });\n         return;\n      }\n\n      // 1) we need to have any key as one of our fields.\n      let field = this.fieldByID(rule.key);\n      if (!field && rule.key != \"this_object\") {\n         this.warningsMessage(\n            \"condition does not reference one of our fields\",\n            {\n               rule,\n            }\n         );\n      }\n\n      // 2) completely filled out conditions.\n      if (!this._conditionCheck) {\n         this._conditionCheck = this.AB.filterComplexNew(\n            `${this.id}_conditionCheck`\n         );\n         // {FilterComplex} ._conditionCheck\n         // has our .isConditionComplete() method.\n      }\n      if (!this._conditionCheck.isConditionComplete(rule)) {\n         this.warningsMessage(\"incomplete condition definition\", {\n            rule,\n         });\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      this.conditionScan(this.where);\n\n      /// include importFields() warnings:\n      this.__missingObject.forEach((f) => {\n         this.warningsMessage(\n            `IMPORT FIELDS: could not resolve object[${\n               f.objectID\n            }] for fieldSetting ${JSON.stringify(f)}`,\n            {\n               fieldInfo: f,\n            }\n         );\n      });\n\n      this.__missingFields.forEach((f) => {\n         this.warningsMessage(\n            `IMPORT FIELDS: Object[${f.objID}] could not find field[${\n               f.fieldID\n            }] for fieldSetting ${JSON.stringify(f.fieldInfo)}`,\n            {\n               object: f.objID,\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__cantFilter.forEach((f) => {\n         this.warningsMessage(\n            `Field[${f.field.id}] referenced in fieldSetting[${JSON.stringify(\n               f.fieldInfo\n            )}] did not pass .canFilterField`,\n            {\n               field: f.field.toObj(),\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__duplicateFields.forEach((f) => {\n         this.warningsMessage(\n            `Field[${\n               f.fieldInfo.fieldID\n            }] referenced in fieldSetting[${JSON.stringify(\n               f.fieldInfo\n            )}] is a duplicate`,\n            {\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__linkProblems.forEach((f) => {\n         this.warningsMessage(f.message, f.data);\n      });\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Query[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   isUuid(text) {\n      console.error(\n         \"ABObject.isUuid(): is depreciated.  directly reference AB.Rules.isUUID() instead.\"\n      );\n      return this.AB.isUUID(text);\n   }\n};\n","const ABProcessCore = require(\"../core/ABProcessCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcess extends ABProcessCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      this._unknownShapes = [];\n      // {array} [ BPMN:Shape, ... ]\n      // Generic Shapes that are added to the Process are registered here.\n      // We will list these as warnings to the ABDesigner.\n\n      // listen\n      this.AB.on(\"ab.abprocess.update\", (data) => {\n         if (this.id == data.objectId) this.fromValues(data.data);\n      });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // remove all my Elements\n      var allElements = this.elements();\n      var allDestroy = [];\n      allElements.forEach((e) => {\n         allDestroy.push(e.destroy());\n      });\n\n      return Promise.all(allDestroy).then(() => {\n         // now remove myself\n         return new Promise((resolve, reject) => {\n            this.toDefinition()\n               .destroy()\n               .then(() => {\n                  // allow normal processing to contine now:\n                  resolve();\n               })\n               .then(() => {\n                  // in the background\n                  // remove this reference from ALL Applications that link\n                  // to me:\n                  console.error(\n                     \"TODO: ABProcess.destroy(): refactor to .emit('destroyed') and let containing Apps self remove.\"\n                  );\n                  var appsWithProcess = this.AB.applications().find((a) => {\n                     return a.hasProcess(this);\n                  });\n                  if (appsWithProcess.length > 0) {\n                     appsWithProcess.forEach((a) => {\n                        a.processRemove(this);\n                     });\n                  }\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n      });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   save() {\n      // if this is an update:\n      // if (this.id) {\n      // \treturn ABDefinition.update(this.id, this.toDefinition());\n      // } else {\n\n      // \treturn ABDefinition.create(this.toDefinition());\n      // }\n\n      // make sure all our tasks have save()ed.\n      var allSaves = [];\n      var allTasks = this.elements();\n      allTasks.forEach((t) => {\n         allSaves.push(t.save());\n      });\n      return Promise.all(allSaves).then(() => {\n         // now we can save our Process definition\n         return this.toDefinition()\n            .save()\n            .then((data) => {\n               // if I didn't have an .id then this was a create()\n               // and I need to update my data with the generated .id\n\n               if (!this.id) {\n                  this.id = data.id;\n               }\n\n               // Also, our embedded elements now all have .ids\n               // where they might not have before.  So now\n               // rebuild our this._elements hash with all id\n               var _new = {};\n               let _old = this._elements;\n               Object.keys(this._elements).forEach((k) => {\n                  _new[this._elements[k].id] = this._elements[k];\n               });\n               this._elements = _new;\n\n               // check to see if an update happened and then make\n               // sure we have that saved.\n               let needSave = false;\n               Object.keys(_new).forEach((k) => {\n                  if (!_old[k]) {\n                     needSave = true;\n                  }\n               });\n\n               if (needSave) {\n                  return this.save();\n               }\n            });\n      });\n   }\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.processes((o) => {\n            return o.name.toLowerCase() == this.name.toLowerCase();\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n         );\n      }\n\n      return validator;\n   }\n\n   /**\n    * @method elementNewForModelDefinition()\n    * create a new process element defined by the given BPMN:Element\n    *\n    * the BPMN:Element definition comes from the BPMN Modeler when a new\n    * diagram element is created.\n    *\n    * @param {BPMN:Element} element\n    *        the BPMN modeler diagram element definition\n    * @return {ABProcess[OBJ]}\n    */\n   elementNewForModelDefinition(element) {\n      var task = this.AB.processElementNewForModelDefinition(element, this);\n      if (task) {\n         this.elementAdd(task);\n      }\n      return task;\n   }\n\n   /**\n    * @method unknownShape()\n    * store a reference to a BPMN Shape that is in our XML diagram,\n    * but we don't have an element for.\n    * @param {BPMN:Shape} shape\n    */\n   unknownShape(shape) {\n      this.unknownShapeRemove(shape);\n      this._unknownShapes.push(shape);\n   }\n\n   /**\n    * @method unknownShapeRemove()\n    * make sure we no longer track the provided BPMN Shape as an unknown shape.\n    * @param {BPMN:Shape} shape\n    */\n   unknownShapeRemove(shape) {\n      this._unknownShapes = this._unknownShapes.filter((s) => s.id != shape.id);\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = [].concat(this._warnings);\n      this.elements().forEach((e) => {\n         e.warningsEval();\n         allWarnings = allWarnings.concat(e.warnings());\n      });\n\n      if (this.elements().length == 0) {\n         allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      }\n\n      // perform a check of our xml document to see if we have any unknown\n      // shapes\n      if (!this._DOMParser) {\n         if (window.DOMParser) {\n            // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n            this._DOMParser = function (xmlStr) {\n               return new window.DOMParser().parseFromString(\n                  xmlStr,\n                  \"text/xml\"\n               );\n            };\n         } else if (\n            typeof window.ActiveXObject != \"undefined\" &&\n            new window.ActiveXObject(\"Microsoft.XMLDOM\")\n         ) {\n            this._DOMParser = function (xmlStr) {\n               var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n               xmlDoc.async = \"false\";\n               xmlDoc.loadXML(xmlStr);\n               return xmlDoc;\n            };\n         } else {\n            throw new Error(\"No XML parser found\");\n         }\n      }\n\n      // find any references to our generic shapes\n      let xml = this._DOMParser(this.xmlDefinition);\n      const genericShapes = [\n         \"bpmn2:startEvent\",\n         \"bpmn2:task\",\n         \"bpmn2:endEvent\",\n      ];\n      genericShapes.forEach((s) => {\n         let allElements = xml.getElementsByTagName(s);\n         for (let x = 0; x < allElements.length; x++) {\n            // if we don't know about this shape\n            let ele = allElements[x];\n            let myEle = this.elementForDiagramID(allElements[x].id);\n            if (!myEle) {\n               this.unknownShape(allElements[x]);\n            }\n         }\n      });\n\n      // if any unknown shapes have been reported:\n      if (this._unknownShapes.length) {\n         allWarnings.push({\n            message: \"Generic Tasks still undefined.\",\n            data: {},\n         });\n      }\n\n      return allWarnings;\n   }\n};\n","const ABStepCore = require(\"../core/ABStepCore\");\n\n// let L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABStep extends ABStepCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // listen\n      // this.AB.on(\"ab.abprocess.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // debugger;\n\n      return new Promise((resolve, reject) => {\n         this.toDefinition()\n            .destroy()\n            .then(() => {\n               resolve();\n            })\n            .catch((err) => {\n               reject(err);\n            });\n      });\n\n      // remove all my Elements\n      // var allElements = this.elements();\n      // var allDestroy = [];\n      // allElements.forEach((e) => {\n      //    allDestroy.push(e.destroy());\n      // });\n\n      // return Promise.all(allDestroy).then(() => {\n      //    // now remove myself\n      //    return new Promise((resolve, reject) => {\n      //       this.toDefinition()\n      //          .destroy()\n      //          .then(() => {\n      //             // allow normal processing to contine now:\n      //             resolve();\n      //          })\n      //          .then(() => {\n      //             // in the background\n      //             // remove this reference from ALL Applications that link\n      //             // to me:\n      //             console.error(\n      //                \"TODO: ABProcess.destroy(): refactor to .emit('destroyed') and let containing Apps self remove.\"\n      //             );\n      //             var appsWithProcess = this.AB.applications().find((a) => {\n      //                return a.hasProcess(this);\n      //             });\n      //             if (appsWithProcess.length > 0) {\n      //                appsWithProcess.forEach((a) => {\n      //                   a.processRemove(this);\n      //                });\n      //             }\n      //          })\n      //          .catch((err) => {\n      //             reject(err);\n      //          });\n      //    });\n      // });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *                .resolve( {this} )\n    */\n   save() {\n      // debugger;\n      return this.toDefinition()\n         .save()\n         .then((data) => {\n            // if I didn't have an .id then this was a create()\n            // and I need to update my data with the generated .id\n\n            if (!this.id) {\n               this.id = data.id;\n            }\n            return this;\n         });\n   }\n\n   isValid() {\n      // debugger;\n      return true;\n      // var validator = this.AB.Validation.validator();\n\n      // // label/name must be unique:\n      // var isNameUnique =\n      //    this.AB.processes((o) => {\n      //       return o.name.toLowerCase() == this.name.toLowerCase();\n      //    }).length == 0;\n      // if (!isNameUnique) {\n      //    validator.addError(\n      //       \"name\",\n      //       L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n      //    );\n      // }\n\n      // return validator;\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // debugger;\n      // report both OUR warnings, and any warnings from any of our fields\n      // var allWarnings = [].concat(this._warnings);\n      // this.elements().forEach((e) => {\n      //    e.warningsEval();\n      //    allWarnings = allWarnings.concat(e.warnings());\n      // });\n      // if (this.elements().length == 0) {\n      //    allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      // }\n      // // perform a check of our xml document to see if we have any unknown\n      // // shapes\n      // if (!this._DOMParser) {\n      //    if (window.DOMParser) {\n      //       // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n      //       this._DOMParser = function (xmlStr) {\n      //          return new window.DOMParser().parseFromString(\n      //             xmlStr,\n      //             \"text/xml\"\n      //          );\n      //       };\n      //    } else if (\n      //       typeof window.ActiveXObject != \"undefined\" &&\n      //       new window.ActiveXObject(\"Microsoft.XMLDOM\")\n      //    ) {\n      //       this._DOMParser = function (xmlStr) {\n      //          var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n      //          xmlDoc.async = \"false\";\n      //          xmlDoc.loadXML(xmlStr);\n      //          return xmlDoc;\n      //       };\n      //    } else {\n      //       throw new Error(\"No XML parser found\");\n      //    }\n      // }\n      // // find any references to our generic shapes\n      // let xml = this._DOMParser(this.xmlDefinition);\n      // const genericShapes = [\n      //    \"bpmn2:startEvent\",\n      //    \"bpmn2:task\",\n      //    \"bpmn2:endEvent\",\n      // ];\n      // genericShapes.forEach((s) => {\n      //    let allElements = xml.getElementsByTagName(s);\n      //    for (let x = 0; x < allElements.length; x++) {\n      //       // if we don't know about this shape\n      //       let ele = allElements[x];\n      //       let myEle = this.elementForDiagramID(allElements[x].id);\n      //       if (!myEle) {\n      //          this.unknownShape(allElements[x]);\n      //       }\n      //    }\n      // });\n      // // if any unknown shapes have been reported:\n      // if (this._unknownShapes.length) {\n      //    allWarnings.push({\n      //       message: \"Generic Tasks still undefined.\",\n      //       data: {},\n      //    });\n      // }\n      //\n      // return allWarnings;\n   }\n};\n","const ABViewManagerCore = require(\"../core/ABViewManagerCore\");\n\nmodule.exports = class ABViewManager extends ABViewManagerCore {};\n","const ABViewManagerMobileCore = require(\"../core/ABViewManagerMobileCore\");\n\nmodule.exports = class ABViewManagerMobile extends ABViewManagerMobileCore {};\n","var L = null;\n// multilingual Label fn()\n\nmodule.exports = class CSVImporter {\n   constructor(Label) {\n      // {ABMultilingual.label()} function.\n      //\n      if (!L) {\n         L = Label;\n\n         // if this was a v1: App param:\n         if (Label.Label) {\n            L = Label.Label;\n         }\n      }\n   }\n\n   /**\n    * @method getSeparateItems()\n    * Return the options of how the CSV values are separated.\n    * @return {array}  [ {id, value} ... ]\n    */\n   getSeparateItems() {\n      return [\n         { id: \",\", value: L(\"Comma (,)\") },\n         { id: \"\\t\", value: L(\"Tab (&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)\") },\n         { id: \";\", value: L(\"Semicolon (;)\") },\n         { id: \"s\", value: L(\"Space ( )\") },\n      ];\n   }\n\n   /**\n    * @method validateFile\n    * Validate file extension\n    * @param {*} fileInfo\n    *        https://docs.webix.com/api__ui.uploader_onbeforefileadd_event.html\n    * @return {boolean}\n    */\n   validateFile(fileInfo) {\n      if (!fileInfo || !fileInfo.file || !fileInfo.file.type) return false;\n\n      // validate file type\n      let extensionType = fileInfo.file.type.toLowerCase();\n      if (\n         extensionType == \"text/csv\" ||\n         extensionType == \"application/vnd.ms-excel\"\n      ) {\n         return true;\n      } else {\n         return false;\n      }\n   }\n\n   /**\n    * @method getDataRows\n    * Pull data rows from the CSV file\n    *\n    * @param {Object} fileInfo - https://docs.webix.com/api__ui.uploader_onbeforefileadd_event.html\n    * @param {string} separatedBy\n    *\n    * @return {Promise} -[\n    * \t\t\t\t\t\t[\"Value 1.1\", \"Value 1.2\", \"Value 1.3\"],\n    * \t\t\t\t\t\t[\"Value 2.1\", \"Value 2.2\", \"Value 2.3\"],\n    * \t\t\t\t\t]\n    */\n   getDataRows(fileInfo, separatedBy) {\n      if (!this.validateFile(fileInfo)) return Promise.reject();\n\n      return new Promise((resolve, reject) => {\n         // read CSV file\n         let reader = new window.FileReader();\n         reader.onload = (e) => {\n            let result = [];\n\n            // split lines\n            let dataRows = reader.result\n               .split(/\\r\\n|\\n|\\r/) // CRLF = \\r\\n; LF = \\n; CR = \\r;\n               .filter((row) => row && row.length > 0);\n\n            // split columns\n            (dataRows || []).forEach((row) => {\n               let dataCols = [];\n               if (separatedBy == \",\") {\n                  // NOTE: if the file contains ,, .match() can not reconize this empty string\n                  row = row.replace(/,,/g, \", ,\");\n\n                  // https://stackoverflow.com/questions/11456850/split-a-string-by-commas-but-ignore-commas-within-double-quotes-using-javascript#answer-11457952\n                  dataCols = row.match(/(\".*?\"|[^\",]+)(?=\\s*,|\\s*$)/g);\n               } else {\n                  dataCols = row.split(separatedBy);\n               }\n\n               result.push(dataCols.map((dCol) => this.reformat(dCol)));\n            });\n\n            resolve(result);\n         };\n         reader.readAsText(fileInfo.file);\n      });\n   }\n\n   /**\n    * @method getGuessDataType\n    * return our best guess of what type of data for the requested column.\n    * @param {array} dataRows\n    *        The data we are evaluating:\n    *        [\n    *           [\"Value 1.1\", \"Value 1.2\", \"Value 1.3\"],\n    *           [\"Value 2.1\", \"Value 2.2\", \"Value 2.3\"],\n    * \t\t ]\n    * @param colIndex {Number}\n    * @return {string}\n    */\n   getGuessDataType(dataRows, colIndex) {\n      var data,\n         // {various} the data pulled from the requested row/column\n         repeatNum = 10;\n      // {integer} how many rows do we want to scan trying to find a value\n\n      // Loop to find a value\n      for (var i = 1; i <= repeatNum; i++) {\n         var line = dataRows[i];\n         if (!line) break;\n\n         data = line[colIndex];\n\n         if (data != null && data.length > 0) break;\n      }\n\n      if (data == null || data == \"\") {\n         return \"string\";\n      } else if (\n         data == 0 ||\n         data == 1 ||\n         data == true ||\n         data == false ||\n         data == \"checked\" ||\n         data == \"unchecked\"\n      ) {\n         return \"boolean\";\n      } else if (!isNaN(data)) {\n         return \"number\";\n      } else if (Date.parse(data)) {\n         return \"date\";\n      } else {\n         // determine which type of string this might be:\n         if (data.length > 100) return \"LongText\";\n         else return \"string\";\n      }\n   }\n\n   /**\n    * @method reformat\n    * @param {string} str\n    */\n   reformat(str) {\n      if (!str) return \"\";\n\n      return str.trim().replace(/\"/g, \"\").replace(/'/g, \"\");\n   }\n};\n","const FilterComplexCore = require(\"../core/FilterComplexCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\n/**\n * @function _toInternal()\n * translate our external QB conditions into our internal format that\n * makes the cond.rule unique by adding the field.id to the rule.\n * @param {obj} cond - {\n *                         rules: [\n *                            {\n *                               alias: string || undefined,\n *                               key: uuid,\n *                               rule: string,\n *                               value: object,\n *                            }\n *                         ]\n *                      }\n *        the QB condition format we use exernally in our AB system.\n */\nfunction _toInternal(cond, fields = []) {\n   if (!cond) return;\n   if (cond.key) {\n      // Convert to format\n      // {\n      //    glue: \"and\",\n      //    rules: [\n      //       {\n      //          field: \"test_col\",\n      //          condition: { type: \"greater\", filter: 100 },\n      //       },\n      //    ],\n      // }\n      const field = fields.filter((f) => f.id == cond.key)[0];\n      cond.field = field?.id;\n\n      cond.condition = {\n         type: cond.rule,\n         filter: cond.value,\n      };\n\n      if (Array.isArray(cond.value)) cond.includes = cond.value;\n      if (\n         cond.rule === \"in_query_field\" ||\n         cond.rule === \"not_in_query_field\"\n      ) {\n         cond.includes = cond.value.split(\":\");\n      }\n\n      // else cond.includes = cond.value?.split?.(/,|:/) ?? [];\n\n      // if (field?.key == \"date\" || field?.key == \"datetime\") {\n      //    cond.condition.filter = cond.condition.filter\n      //       ? AB.rules.toDate(cond.condition.filter)\n      //       : null;\n      //\n      //    cond.includes = cond.includes.map((v) => AB.rules.toDate(v));\n      // }\n\n      delete cond.key;\n      delete cond.rule;\n      delete cond.value;\n   }\n\n   if (cond.rules && cond.rules.length) {\n      (cond.rules ?? []).forEach((r) => {\n         _toInternal(r, fields);\n      });\n   }\n}\n\n/**\n * @function _toExternal()\n * translate our internal QB conditions into our external format that\n * where the cond.rule no longer has the field.id.\n * @param {obj} cond - {\n *                         glue: \"and\",\n *                         rules: [\n *                            {\n *                               field: \"test_col\",\n *                               condition: { type: \"greater\", filter: 100 },\n *                            },\n *                         ],\n *                      }\n *        the QB condition format we use internally\n */\nfunction _toExternal(cond, fields = []) {\n   if (!cond) return;\n   if (cond.field) {\n      let field = fields.filter((f) => f.id == cond.field)[0];\n      // cond.alias = alias || undefined;\n      cond.key = field?.id ?? cond.field;\n      cond.condition = cond.condition ?? {};\n      cond.rule = cond.condition.type;\n\n      let values =\n         cond.includes?.map((v) => (v instanceof Date ? v.toISOString() : v)) ??\n         [];\n\n      // Convert multi-values to a string\n      if (cond.condition.filter) {\n         if (cond.condition.filter instanceof Date) {\n            if (values.indexOf(cond.condition.filter.toISOString()) < 0) {\n               values.push(cond.condition.filter);\n            }\n         } else if (values.indexOf(cond.condition.filter) < 0)\n            values.push(cond.condition.filter);\n      }\n\n      if (cond.rule === \"is_current_date\") {\n         cond.value = AB.rules.getUTCDayTimeRange();\n      } else if (\n         cond.rule === \"in_query_field\" ||\n         cond.rule === \"not_in_query_field\"\n      ) {\n         cond.value =\n            cond.includes?.length == 2 ? cond.includes.join(\":\") : null;\n      } else {\n         cond.value = values\n            .map((v) => {\n               // Convert date format\n               if (\n                  field &&\n                  (field.key === \"date\" || field.key === \"datetime\") &&\n                  cond.rule != \"last_days\"\n               ) {\n                  return field.exportValue(new Date(v));\n               }\n               return v;\n            })\n            .join(\",\");\n      }\n\n      delete cond.field;\n      delete cond.type;\n      delete cond.includes;\n      delete cond.condition;\n   }\n\n   if (cond.rules && cond.rules.length) {\n      (cond.rules ?? []).forEach((r) => {\n         _toExternal(r, fields);\n      });\n   }\n}\n\nfunction _uiQueryOptionId(fieldId) {\n   return `byQueryField-query-option-${fieldId}`;\n}\n\nfunction _uiFieldOptionId(fieldId) {\n   return `byQueryField-field-option-${fieldId}`;\n}\n\nmodule.exports = class FilterComplex extends FilterComplexCore {\n   constructor(idBase, AB, options = {}) {\n      idBase = idBase ?? \"ab_filterComplex\";\n\n      super(idBase, AB);\n\n      this._options = options ?? {};\n\n      this._initComplete = false;\n      // {bool}\n      // trying to prevent multiple .init() from being called due to\n      // various ways of initializing the component.\n\n      this.observing = false;\n      // {bool}\n      // try to prevent multiple observers generating >1 \"changed\"\n      // event.\n\n      let labels = (this.labels = {\n         common: (AB._App ?? {}).labels,\n         component: {\n            and: L(\"And\"),\n            or: L(\"Or\"),\n\n            thisObject: L(\"This Object\"),\n            inQuery: L(\"In Query\"),\n            notInQuery: L(\"Not In Query\"),\n            inQueryField: L(\"By Query Field\"),\n            notInQueryField: L(\"Not By Query Field\"),\n\n            inQueryFieldQueryPlaceholder: L(\"Choose a Query\"),\n            inQueryFieldFieldPlaceholder: L(\"Choose a Field\"),\n\n            sameAsUser: L(\"Same As User\"),\n            notSameAsUser: L(\"Not Same As User\"),\n\n            sameAsField: L(\"Same As Field\"),\n            notSameAsField: L(\"Not Field\"),\n\n            inDataCollection: L(\"In Data Collection\"),\n            notInDataCollection: L(\"Not In Data Collection\"),\n\n            containsCondition: L(\"contains\"),\n            notContainsCondition: L(\"doesn't contain\"),\n            isCondition: L(\"is\"),\n            isNotCondition: L(\"is not\"),\n            isEmpty: L(\"is empty\"),\n            isNotEmpty: L(\"is not empty\"),\n            isCurrentDateCondition: L(\"is current date\"),\n            beforeCondition: L(\"is before\"),\n            afterCondition: L(\"is after\"),\n            onOrBeforeCondition: L(\"is on or before\"),\n            onOrAfterCondition: L(\"is on or after\"),\n            beforeCurrentCondition: L(\"is before current date\"),\n            afterCurrentCondition: L(\"is after current date\"),\n            onOrBeforeCurrentCondition: L(\"is on or before current date\"),\n            onOrAfterCurrentCondition: L(\"is on or after current date\"),\n            onLastDaysCondition: L(\"last ... days\"),\n            onNextDaysCondition: L(\"next ... days\"),\n\n            equalCondition: L(\":\"),\n            notEqualCondition: L(\"≠\"),\n            lessThanCondition: L(\"<\"),\n            moreThanCondition: L(\">\"),\n            lessThanOrEqualCondition: L(\"≤\"),\n            moreThanOrEqualCondition: L(\"≥\"),\n\n            equalListCondition: L(\"equals\"),\n            notEqualListCondition: L(\"does not equal\"),\n\n            checkedCondition: L(\"is checked\"),\n            notCheckedCondition: L(\"is unchecked\"),\n\n            isCurrentUserCondition: L(\"is current user\"),\n            isNotCurrentUserCondition: L(\"is not current user\"),\n            containsCurrentUserCondition: L(\"contains current user\"),\n            notContainsCurrentUserCondition: L(\"does not contain current user\"),\n\n            contextDefaultOption: L(\"choose option\"),\n            equalsProcessValue: L(\"equals process value\"),\n            notEqualsProcessValueCondition: L(\"not equals process value\"),\n            inProcessValueCondition: L(\"in process value\"),\n            notInProcessValueCondition: L(\"not in process value\"),\n         },\n      });\n\n      // internal list of Webix IDs to reference our UI components.\n      let ids = (this.ids = {\n         popup: this.unique(`${idBase}_popup`),\n         querybuilder: this.unique(`${idBase}_querybuilder`),\n         save: this.unique(`${idBase}_save`),\n      });\n\n      // Set current username\n      this.Account.username = this.AB.Account.username();\n\n      this._settings.recordRuleFieldOptions = [];\n\n      // webix UI definition:\n      this.ui = {\n         rows: [\n            {\n               view: \"layout\",\n               type: \"clean\",\n               borderless: this._options.borderless ?? true,\n               rows: [\n                  {\n                     id: ids.querybuilder,\n                     view: \"query\",\n                     data: () => [],\n                     // data: async (field) => await this.pullOptions(field),\n                     fields: [],\n                     disabled: true,\n                     height: this._options.height,\n                  },\n               ],\n            },\n            {\n               id: ids.save,\n               view: \"button\",\n               css: \"webix_primary\",\n               value: L(\"Save\"),\n               hidden: this._options.isSaveHidden ?? false,\n               click: () => {\n                  if (this.myPopup) this.myPopup.hide();\n                  this.emit(\"save\", this.getValue());\n               },\n            },\n         ],\n      };\n   }\n\n   // setting up UI\n   init(options) {\n      if (this._initComplete) return;\n\n      super.init(options);\n\n      const el = $$(this.ids.querybuilder);\n\n      if (el) {\n         if (!this.observing) {\n            this.__blockOnChange = true;\n            el.getState().$observe(\"value\", (v) => {\n               if (this.__blockOnChange) return false;\n\n               this.emit(\"changed\", this.getValue());\n            });\n            this.__blockOnChange = false;\n\n            // HACK!! The process of setting the $observe() is actually\n            // calling the cb() when set.  This is clearing our .condition\n            // if we call init() after we have setValues(). which can happen\n            // when using the popUp() method.\n            let _cond = this.condition;\n            this.condition = _cond;\n            this.observing = true;\n         }\n         this._initComplete = true;\n      }\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    * @param condition {Object} - [Optional] {\n    *                                           glue: \"and\" | \"or\",\n    *                                           rules: []\n    *                                        }\n    */\n   isValid(rowData, condition = this.condition) {\n      let helper = () => true;\n\n      let $query = $$(this.ids.querybuilder);\n      if ($query) {\n         helper = $query.getFilterFunction();\n         return helper(rowData);\n      } else {\n         return super.isValid(rowData, condition);\n      }\n   }\n\n   /**\n    * @method isConditionComplete()\n    * Check a given condition entry and indicate if it is fully\n    * filled out.\n    * @param {obj} cond\n    *        The Condition object we are checking.  If a Macro\n    *        condition if provided: { glue:\"and\", rules:[] } then\n    *        this method will return True/False if All rules are\n    *        complete.\n    *        If an individual rule is provided, then it evaluates\n    *        the completness of that rule. { key, rule, value }\n    * @return {bool}\n    */\n   isConditionComplete(cond) {\n      if (!cond) return false;\n\n      let isComplete = true;\n      // start optimistically.\n\n      if (cond?.glue) {\n         (cond.rules ?? []).forEach((r) => {\n            isComplete = isComplete && this.isConditionComplete(r);\n         });\n      } else {\n         // every condition needs a .key & .rule\n         if (!cond.key || cond.key == \"\") {\n            isComplete = false;\n         }\n\n         if (!cond.rule || cond.rule == \"\") {\n            isComplete = false;\n         }\n\n         if (isComplete) {\n            switch (cond.rule) {\n               case \"is_current_user\":\n               case \"is_not_current_user\":\n               case \"contain_current_user\":\n               case \"not_contain_current_user\":\n               case \"same_as_user\":\n               case \"not_same_as_user\":\n               case \"less_current\":\n               case \"greater_current\":\n               case \"less_or_equal_current\":\n               case \"greater_or_equal_current\":\n               case \"is_empty\":\n               case \"is_not_empty\":\n               case \"checked\":\n               case \"unchecked\":\n               case \"is_current_date\":\n                  // There are only a few rules that don't need a\n                  // value\n                  break;\n\n               case \"in_data_collection\":\n               case \"not_in_data_collection\":\n                  // a value needs to exist\n                  if (!cond.value || cond.value == \"\") {\n                     isComplete = false;\n                  }\n                  // and it needs to reference a valid DC\n                  if (isComplete) {\n                     let dc = this.AB.datacollectionByID(cond.value);\n                     if (!dc) {\n                        isComplete = false;\n                     }\n                  }\n                  break;\n\n               case \"in_query\":\n               case \"not_in_query\":\n                  // a value needs to exist\n                  if (!cond.value || cond.value == \"\") {\n                     isComplete = false;\n                  }\n                  // and it needs to reference a valid query\n                  if (isComplete) {\n                     let query = this.AB.queryByID(cond.value);\n                     if (!query) {\n                        isComplete = false;\n                     }\n                  }\n                  break;\n\n               case \"in_query_field\":\n               case \"not_in_query_field\":\n                  // a value needs to exist\n                  if (!cond.value || cond.value == \"\") {\n                     isComplete = false;\n                  }\n                  // and it needs to reference a valid query\n                  if (isComplete) {\n                     let queryId = cond.value.split(\":\")[0],\n                        fieldId = cond.value.split(\":\")[1];\n                     let query = this.AB.queryByID(queryId);\n                     if (!query) {\n                        isComplete = false;\n                     } else {\n                        // and a valid field\n                        let field = query.fieldByID(fieldId);\n                        if (!field) {\n                           isComplete = false;\n                        }\n                     }\n                  }\n                  break;\n\n               default:\n                  // The rest do need a .value\n                  if (!cond.value || cond.value == \"\") {\n                     isComplete = false;\n                  }\n                  break;\n            }\n         }\n      }\n\n      return isComplete;\n   }\n\n   setValue(settings) {\n      super.setValue(settings);\n      this.condition = settings;\n\n      const el = $$(this.ids.querybuilder);\n      if (el) {\n         if (!settings) {\n            // Clear settings value of webix.query\n            el.define(\"value\", {\n               glue: \"and\",\n               rules: [],\n            });\n            return;\n         }\n\n         let qbSettings = this.AB.cloneDeep(settings);\n\n         // Settings should match a condition built upon our QB format:\n         // {\n         //    glue:\"and\",\n         //    rules:[\n         //       {\n         //          key:\"uuid\",\n         //          rule:\"\",\n         //          value:\"\"\n         //       }\n         //    ]\n         // }\n         // externally our key should be the field.id and the rules should be\n         // the \"contains\", \"not_contains\", \"equal\" ... keywords.\n         // However, internally, we convert these rules into .ids that are\n         // unique for each field (see uiInit()).  So when we bring in settings\n         // we need to translate them into our internal format:\n\n         _toInternal(qbSettings, this._Fields);\n\n         this.__blockOnChange = true;\n         el.define(\"value\", qbSettings);\n         this.__blockOnChange = false;\n      }\n   }\n\n   getValue() {\n      if ($$(this.ids.querybuilder)) {\n         let settings = this.AB.cloneDeep(\n            $$(this.ids.querybuilder).getState().value ?? {}\n         );\n\n         // what we pull out of the QB will have .rules in our internal format:\n         // {field.id}_{rule}  (see uiInit() )\n         // But we need to store them in our generic QB format for use outside\n         // our FilterComplex widget.\n         _toExternal(settings, this._Fields);\n         this.condition = settings;\n      }\n\n      return super.getValue();\n   }\n\n   fieldsLoad(fields = [], object = null) {\n      super.fieldsLoad(fields, object);\n      // Format date types\n      fields.forEach((f) => {\n         if (f.type === \"date\")\n            f.format = (v) => this.AB.Webix.il8n.dateFormatStr(v);\n      });\n      this.uiInit();\n   }\n\n   toShortHand() {\n      return \"Add Filters\";\n   }\n\n   uiInit() {\n      this.uiQueryCustomValue();\n\n      let el = $$(this.ids.querybuilder);\n      if (el) {\n         // Clear fields\n         while (el.config.fields.length > 0) {\n            el.config.fields.pop();\n         }\n         // Set fields\n         (this.fieldsToQB() ?? []).forEach((f) => {\n            el.config.fields.push(f);\n         });\n         if (el.config.fields.length) {\n            el.enable();\n         } else {\n            this.setValue(\"\");\n            el.disable();\n         }\n      }\n   }\n\n   // HACK: have to overwrite Webix Query's function to support our custom input requirement.\n   // HooWoo\n   uiQueryCustomValue() {\n      const $el = $$(this.ids.querybuilder);\n      if (!$el) return;\n\n      const _this = this;\n      const $filterView = $el.$app.require(\"jet-views\", \"filter\");\n\n      if (!this._fnBaseGetValue)\n         this._fnBaseGetValue = $filterView.prototype.GetValue;\n      $filterView.prototype.GetValue = function () {\n         const rule = _this._fnBaseGetValue.call(this);\n         if (!rule) {\n            // Not sure if its a problem, so report in case it is.\n            _this.AB.notify.developer(new Error(\"No rule found\"), {\n               context: \"No rule from $filterView.GetValue()\",\n            });\n            return;\n         }\n\n         if (\n            rule.condition.type == \"in_query_field\" ||\n            rule.condition.type == \"not_in_query_field\"\n         ) {\n            const queryOptId = _uiQueryOptionId(rule.field);\n            const fieldOptId = _uiFieldOptionId(rule.field);\n            const selectedQueryId = $$(queryOptId)?.getValue();\n            const selectedFieldId = $$(fieldOptId)?.getValue();\n\n            if (selectedQueryId && selectedFieldId) {\n               rule.includes = [selectedQueryId, selectedFieldId];\n            }\n         }\n\n         return rule;\n      };\n\n      // window.query.views.filter.prototype.CreateFilter = (\n      $filterView.prototype.CreateFilter = async function (\n         fieldId,\n         type,\n         format,\n         conditions,\n         place\n      ) {\n         let inputs = _this.uiValue(fieldId);\n\n         let ui = {\n            id: place.config.id,\n            view: \"filter\",\n            localId: \"filter\",\n            conditions: conditions,\n            field: fieldId,\n            mode: type,\n            template: function (o) {\n               let str = o[fieldId];\n               let parser =\n                  format ?? (type == \"date\" ? webix.i18n.dateFormatStr : null);\n               if (parser) str = parser(str);\n               return str;\n            },\n            inputs: inputs,\n            margin: 6,\n         };\n\n         let filter = webix.ui(ui, place);\n\n         // NOTE: Need this to have filter.config.value?.includes value\n         // let data = [];\n         if ($el) {\n            await $el.$app.getService(\"backend\").data(fieldId);\n            // data = await $query.getService(\"backend\").data(fieldId);\n         }\n         // filter.parse(data);\n\n         // Populate options of \"in_query_field\" and \"not_in_query_field\"\n         if (\n            conditions.filter(\n               (cond) =>\n                  cond.id == \"in_query_field\" || cond.id == \"not_in_query_field\"\n            ).length &&\n            filter.config.value?.includes?.length == 2\n         ) {\n            // inputs = _this.uiValue(fieldId, filter.config.value.includes);\n            // filter.define(\"inputs\", inputs);\n            const queryOptId = _uiQueryOptionId(fieldId);\n            const fieldOptId = _uiFieldOptionId(fieldId);\n            const $queryOpt = $$(queryOptId);\n            const $fieldOpt = $$(fieldOptId);\n            const vals = filter.config.value?.includes ?? [];\n            if (vals?.length > 1 && $queryOpt && $fieldOpt) {\n               $queryOpt.setValue(vals[0]);\n               $fieldOpt.setValue(vals[1]);\n               $queryOpt.refresh();\n               $fieldOpt.refresh();\n            }\n         }\n\n         return filter;\n      };\n   }\n\n   uiValue(fieldColumnName, defaultValue = null) {\n      let result;\n\n      // Special case: this_object\n      if (fieldColumnName == \"this_object\") {\n         return []\n            .concat(this.uiQueryValue(\"this_object\"))\n            .concat(this.uiDataCollectionValue(\"this_object\"))\n            .concat(this.uiCustomValue(\"this_object\"))\n            .concat(this.uiContextValue(\"this_object\", \"uuid\"));\n      }\n\n      let field = (this._Fields ?? []).filter(\n         (f) => f.id == fieldColumnName\n      )[0];\n\n      switch (field?.key) {\n         case \"boolean\":\n            result = this.uiNoneValue(field);\n            break;\n         case \"connectObject\":\n            result = []\n               .concat(this.uiQueryValue(field))\n               .concat(this.uiUserValue(field))\n               .concat(this.uiDataCollectionValue(field))\n               .concat(this.uiContextValue(field))\n               .concat(this.uiNoneValue());\n            break;\n         case \"date\":\n         case \"datetime\":\n            result = [\"datepicker\", \"daterangepicker\"]\n               .concat(this.uiNoneValue())\n               .concat(this.uiContextValue(field));\n            break;\n         case \"list\":\n            result = this.uiListValue(field);\n            break;\n         case \"user\":\n            result = []\n               .concat(this.uiNoneValue())\n               .concat(this.uiUserValue(field));\n            break;\n         // case \"number\":\n         //    result = [\"text\"];\n         //    break;\n         case \"string\":\n         case \"LongText\":\n         case \"email\":\n            result = this.uiNoneValue();\n            break;\n      }\n\n      // Add filter options to Custom index\n      const LinkType = `${field?.settings?.linkType}:${field?.settings?.linkViaType}`;\n      if (\n         // 1:M\n         LinkType == \"one:many\" ||\n         // 1:1 isSource = true\n         (LinkType == \"one:one\" && field?.settings?.isSource)\n      ) {\n         result = result ?? [];\n\n         if (field?.settings?.isCustomFK)\n            result = result.concat(this.uiTextValue(field));\n\n         result = result.concat(this.uiQueryFieldValue(field, defaultValue));\n      } else if (field?.key != \"connectObject\") {\n         result = (result ?? [])\n            .concat(this.uiTextValue(field))\n            .concat(this.uiQueryFieldValue(field, defaultValue))\n            .concat(this.uiContextValue(field));\n      }\n      // Special case: from Process builder\n      // .processFieldsLoad()\n      else if (fieldColumnName.indexOf(\"uuid\") > -1) {\n         result = this.uiContextValue(null, fieldColumnName);\n      }\n\n      if (this._settings.isRecordRule) {\n         result = (result ?? []).concat(this.uiRecordRuleValue(field));\n      }\n\n      result = (result ?? []).concat(this.uiCustomValue(field));\n\n      return result;\n   }\n\n   uiNoneValue() {\n      return [\n         {\n            batch: \"none\",\n            borderless: true,\n            view: \"template\",\n            template: \"\",\n         },\n      ];\n   }\n\n   uiBooleanValue(field) {\n      return [\n         {\n            batch: \"boolean\",\n            view: \"checkbox\",\n         },\n      ];\n   }\n\n   uiTextValue(field) {\n      return [\n         {\n            batch: \"text\",\n            view: \"text\",\n            on: {\n               onAfterRender: function () {\n                  // HACK: focus on webix.text and webix.textarea\n                  // Why!! If the parent layout has zIndex lower than 101,\n                  // then is not able to focus to webix.text and webix.textarea\n                  let $layout =\n                     this.queryView(function (a) {\n                        return !a.getParentView();\n                     }, \"parent\") ?? this;\n                  $layout.$view.style.zIndex = 202;\n               },\n            },\n         },\n      ];\n   }\n\n   uiQueryValue(field) {\n      let options = [];\n\n      let isQueryField =\n         this._QueryFields?.filter((f) => f.id == field.id).length > 0;\n\n      // populate the list of Queries for this_object:\n      if (field == \"this_object\" && this._Object) {\n         options = this.queries((q) => q.canFilterObject(this._Object));\n      }\n      // populate the list of Queries for a query field\n      else if (isQueryField) {\n         options = this.queries(\n            (q) =>\n               (this._Object ? this._Object.id : \"\") != q.id && // Prevent filter looping\n               q.canFilterObject(field.datasourceLink)\n         );\n      }\n\n      options?.forEach((q) => {\n         options.push({\n            id: q.id,\n            value: q.label,\n         });\n      });\n\n      return [\n         {\n            batch: \"query\",\n            view: \"combo\",\n            options: options ?? [],\n         },\n      ];\n   }\n\n   uiListValue(field) {\n      return [\n         {\n            batch: \"list\",\n            view: \"combo\",\n            options: field?.settings?.options?.map(function (x) {\n               return {\n                  id: x.id,\n                  value: x.text,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiUserValue(field) {\n      return [\n         {\n            batch: \"user\",\n            view: \"combo\",\n            options: this.AB.Account.userList().map((u) => {\n               return {\n                  id: u.username,\n                  value: u.username,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiDataCollectionValue(field) {\n      let linkObjectId;\n      if (field == \"this_object\" && this._Object) {\n         linkObjectId = this._Object.id;\n      } else {\n         linkObjectId = field?.settings?.linkObject;\n      }\n\n      return [\n         {\n            batch: \"datacollection\",\n            view: \"combo\",\n            options: linkObjectId\n               ? this.AB.datacollections(\n                    (dc) => dc?.datasource?.id == linkObjectId\n                 ).map((dc) => {\n                    return {\n                       id: dc.id,\n                       value: dc.label,\n                    };\n                 })\n               : [],\n         },\n      ];\n   }\n\n   uiQueryFieldValue(field, defaultValue) {\n      // ABQuery Options\n      const qOpts = this.queries(\n         (q) => this._Object == null || q.id != this._Object.id\n      ).map((q) => {\n         return {\n            id: q.id,\n            value: q.label,\n         };\n      });\n\n      const pullFieldOption = (queryId) => {\n         const options = [];\n\n         // Get fields of the query\n         const Query = this.AB.queryByID(queryId);\n         if (Query) {\n            Query.fields((f) => !f.isConnection).forEach((q) => {\n               options.push({\n                  id: q.id,\n                  value: `${q.object.label}.${q.label}`,\n               });\n            });\n         }\n\n         return options;\n      };\n\n      const refreshFieldOption = ($queryOpt, queryId) => {\n         const options = pullFieldOption(queryId);\n\n         // Update UI\n         if ($queryOpt) {\n            const $queryContainer = $queryOpt.getParentView();\n            const $fieldOption = $queryContainer.getChildViews()[1];\n            $fieldOption?.define(\"options\", options);\n            $fieldOption?.refresh();\n         }\n      };\n\n      let queryId;\n      let fieldId;\n      let fieldOptions = [];\n      if (defaultValue?.length == 2) {\n         queryId = defaultValue[0];\n         fieldId = defaultValue[1];\n\n         fieldOptions = pullFieldOption(queryId);\n      }\n\n      return [\n         {\n            batch: \"queryField\",\n            view: \"form\",\n            borderless: true,\n            padding: 0,\n            elements: [\n               {\n                  id: _uiQueryOptionId(field?.id),\n                  name: \"query\",\n                  view: \"combo\",\n                  placeholder:\n                     this.labels.component.inQueryFieldQueryPlaceholder,\n                  options: qOpts,\n                  value: queryId,\n                  on: {\n                     onChange: function (qVal) {\n                        refreshFieldOption(this, qVal);\n                     },\n                  },\n               },\n               {\n                  id: _uiFieldOptionId(field?.id),\n                  name: \"field\",\n                  view: \"combo\",\n                  placeholder: L(\"Choose a Field\"),\n                  options: fieldOptions,\n                  value: fieldId,\n               },\n            ],\n         },\n      ];\n   }\n\n   uiRecordRuleValue(field) {\n      return [\n         {\n            batch: \"recordRule\",\n            view: \"select\",\n            options: this._settings.recordRuleFieldOptions ?? [],\n         },\n      ];\n   }\n\n   uiContextValue(field, processFieldKey = null) {\n      const processFields = (this._ProcessFields ?? [])\n         .filter((pField) => {\n            if (!pField) return false;\n\n            let result = false;\n            switch (field) {\n               case \"this_object\":\n                  result =\n                     this._Object.id === pField.object?.id && !pField.field;\n\n                  break;\n\n               default:\n                  switch (field.key) {\n                     case \"boolean\":\n                        result = [\"boolean\"].includes(pField.field?.key);\n\n                        break;\n\n                     case \"connectObject\":\n                        result =\n                           field.settings.linkObject ===\n                           (pField.field?.object.id ?? pField.object.id);\n\n                        if (!field.settings.isCustomFK) {\n                           result = result && !pField.field;\n\n                           break;\n                        }\n\n                        result =\n                           result &&\n                           (field.settings.indexField ||\n                              field.settings.indexField2) === pField.field?.id;\n\n                        break;\n\n                     case \"date\":\n                     case \"datetime\":\n                        result = [\"date\", \"datetime\"].includes(\n                           pField.field?.key\n                        );\n\n                        break;\n\n                     case \"calculate\":\n                     case \"formula\":\n                     case \"number\":\n                        result = [\"calculate\", \"formula\", \"number\"].includes(\n                           pField.field?.key\n                        );\n\n                        break;\n\n                     case \"string\":\n                     case \"LongText\":\n                     case \"email\":\n                     case \"AutoIndex\":\n                     case \"list\":\n                        result = [\n                           \"string\",\n                           \"LongText\",\n                           \"email\",\n                           \"AutoIndex\",\n                           \"list\",\n                        ].includes(pField.field?.key);\n\n                        break;\n\n                     case \"user\":\n                        result = [\"user\"].includes(pField.field?.key);\n\n                        break;\n\n                     default:\n                        if (pField.key) {\n                           // uuid\n                           const processFieldId = pField.key.split(\".\").pop();\n\n                           result =\n                              processFieldId === field.id ||\n                              processFieldId === field.key ||\n                              processFieldId === processFieldKey ||\n                              pField.key === processFieldKey;\n                        }\n\n                        break;\n                  }\n\n                  break;\n            }\n\n            return result;\n         })\n         .map((e) => {\n            return {\n               id: e.key,\n               value: L(\"context({0})\", [e.label]),\n            };\n         });\n\n      if (!processFields) return [];\n\n      return [\n         {\n            batch: \"context\",\n            view: \"select\",\n            options: [\n               {\n                  id: \"empty\",\n                  value: this.labels.component.contextDefaultOption,\n               },\n               ...processFields,\n            ],\n         },\n      ];\n   }\n\n   uiCustomValue(field) {\n      if (!field) return [];\n\n      const customOptions = this._customOptions ?? {};\n      const options = customOptions[field.id ?? field] ?? {};\n      return options.values ?? [];\n   }\n\n   popUp(...options) {\n      const condition = Object.assign({}, this.condition);\n\n      if (!this.myPopup) {\n         let ui = {\n            id: this.ids.popup,\n            view: \"popup\",\n            height: 400,\n            width: 800,\n            body: this.ui,\n         };\n\n         if (!$$(this.ids.popup)) {\n            this.myPopup = webix.ui(ui);\n            this.init(this._settings);\n            if (this._Fields) {\n               this.fieldsLoad(this._Fields, this._Object);\n            }\n\n            // NOTE: do this, before the .setValue() operation, as we need to have\n            // our fields and filters defined BEFORE a setValue() is performed.\n            // this.uiInit();\n\n            if (condition) {\n               this.setValue(condition);\n            }\n\n            this.myPopup.show(...options);\n         } else {\n            $$(this.ids.popup).show(...options);\n         }\n      } else {\n         this.myPopup.show(...options);\n      }\n   }\n\n   /**\n    * @method addCustomOption\n    *\n    * @param {string|uuid} fieldId\n    * @param {Object} options - {\n    *                               conditions: [],\n    *                               values: []\n    *                           }\n    */\n   addCustomOption(fieldId, options = {}) {\n      this._customOptions = this._customOptions ?? {};\n      this._customOptions[fieldId] = options;\n   }\n};\n","const RowFilterCore = require(\"../core/RowFilterCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class RowFilter extends RowFilterCore {\n   constructor(App, idBase, AB) {\n      super(App, idBase, AB);\n\n      console.error(\"TODO: Switch RowFilter => FilterComplex\");\n\n      // internal list of Webix IDs to reference our UI components.\n      let ids = (this.ids = {\n         component: this.unique(`${idBase}_rowFilter`),\n         filterForm: this.unique(`${idBase}_rowFilter_form`),\n         addNewFilter: this.unique(`${idBase}_rowFilter_addNewFilter`),\n\n         glue: this.unique(`${idBase}_rowFilter_glue`),\n         field: this.unique(`${idBase}_rowFilter_field`),\n         rule: this.unique(`${idBase}_rowFilter_rule`),\n         inputValue: this.unique(`${idBase}_rowFilter_inputValue`),\n\n         queryCombo: this.unique(`${idBase}_rowFilter_queryCombo`),\n         queryFieldCombo: this.unique(`${idBase}_rowFilter_queryFieldCombo`),\n         queryFieldComboQuery: this.unique(\n            `${idBase}_rowFilter_queryFieldComboQuery`\n         ),\n         queryFieldComboField: this.unique(\n            `${idBase}_rowFilter_queryFieldComboField`\n         ),\n         fieldMatch: this.unique(`${idBase}_rowFilter_fieldMatchCombo`),\n\n         dataCollection: this.unique(`${idBase}_rowFilter_dataCollection`),\n\n         listOptions: this.unique(`${idBase}_rowFilter_listOptions`),\n\n         datePicker: this.unique(`${idBase}_rowFilter_datePicker`),\n      });\n\n      // Set current username\n      // this.Account.username = this.AB.Account.username();\n\n      var batchName; // we need to revert to this default when switching away from a in/by query field\n\n      // Default options list to push to all fields\n      this.queryFieldOptions = [\n         {\n            value: L(\"By Query Field\"),\n            id: \"in_query_field\",\n         },\n         {\n            value: L(\"Not In Query\"),\n            id: \"not_in_query_field\",\n         },\n      ];\n\n      this.recordRuleOptions = [];\n      this.recordRuleFieldOptions = [];\n\n      let _logic = this._logic || {};\n\n      /**\n       * @method getFieldList\n       * return field list to render options\n       */\n      _logic.getFieldList = () => {\n         return (this._Fields || []).map((f) => {\n            let label = f.label;\n\n            // include object's name to options\n            if (this._settings.showObjectName && f.object) {\n               label = f.object.label + \".\" + f.label;\n            }\n\n            return {\n               id: f.id,\n               value: label,\n               alias: f.alias || undefined, // ABObjectQuery\n            };\n         });\n      };\n\n      _logic.getFilterUI = () => {\n         let instance = this;\n         let config_settings = this.config_settings || {};\n\n         return {\n            id: \"f\" + webix.uid(),\n            isolate: true,\n            cols: [\n               {\n                  // Add / Or\n                  view: \"combo\",\n                  id: ids.glue,\n                  width: 80,\n                  value: config_settings.glue || \"and\",\n                  options: [\n                     {\n                        value: L(\"And\"),\n                        id: \"and\",\n                     },\n                     {\n                        value: L(\"Or\"),\n                        id: \"or\",\n                     },\n                  ],\n                  on: {\n                     onChange: function (newVal, oldVal) {\n                        _logic.selectCombineCondition(newVal);\n                     },\n                  },\n               },\n               {\n                  // Field list\n                  view: \"combo\",\n                  id: ids.field,\n                  suggest: {\n                     on: {\n                        onBeforeShow: function () {\n                           this.define(\"width\", 400);\n                           this.resize();\n                        },\n                     },\n                     data: _logic.getFieldList(),\n                  },\n                  on: {\n                     onChange: function (columnId) {\n                        var $viewCond = this.getParentView();\n                        _logic.selectField(columnId, $viewCond);\n                     },\n                  },\n               },\n               // Comparer\n               {\n                  id: ids.rule,\n                  width: 220,\n                  cells: [\n                     {},\n                     // Query\n                     {\n                        batch: \"query\",\n                        view: \"combo\",\n                        value: \"in_query\",\n                        options: [\n                           {\n                              value: L(\"In Query\"),\n                              id: \"in_query\",\n                           },\n                           {\n                              value: L(\"Not In Query\"),\n                              id: \"not_in_query\",\n                           },\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"is empty\"),\n                              id: \"is_empty\",\n                           },\n                           {\n                              value: L(\"is not empty\"),\n                              id: \"is_not_empty\",\n                           },\n                           {\n                              value: L(\"Same As User\"),\n                              id: \"same_as_user\",\n                           },\n                           {\n                              value: L(\"Not Same As User\"),\n                              id: \"not_same_as_user\",\n                           },\n                           {\n                              value: L(\"In Data Collection\"),\n                              id: \"in_data_collection\",\n                           },\n                           {\n                              value: L(\"Not In Data Collection\"),\n                              id: \"not_in_data_collection\",\n                           },\n                        ].concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition, oldValue) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n\n                     // Date\n                     {\n                        batch: \"date\",\n                        view: \"combo\",\n                        value: \"less\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"is before\"),\n                              id: \"less\",\n                           },\n                           {\n                              value: L(\"is after\"),\n                              id: \"greater\",\n                           },\n                           {\n                              value: L(\"is on or before\"),\n                              id: \"less_or_equal\",\n                           },\n                           {\n                              value: L(\"is on or after\"),\n                              id: \"greater_or_equal\",\n                           },\n                           {\n                              value: L(\"is before current date\"),\n                              id: \"less_current\",\n                           },\n                           {\n                              value: L(\"is after current date\"),\n                              id: \"greater_current\",\n                           },\n                           {\n                              value: L(\"is on or before current date\"),\n                              id: \"less_or_equal_current\",\n                           },\n                           {\n                              value: L(\"is on or after current date\"),\n                              id: \"greater_or_equal_current\",\n                           },\n                           {\n                              value: L(\"last ... days\"),\n                              id: \"last_days\",\n                           },\n                           {\n                              value: L(\"next ... days\"),\n                              id: \"next_days\",\n                           },\n                           {\n                              value: L(\"is current date\"),\n                              id: \"is_current_date\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Number\n                     {\n                        batch: \"number\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\":\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"≠\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"<\"),\n                              id: \"less\",\n                           },\n                           {\n                              value: L(\">\"),\n                              id: \"greater\",\n                           },\n                           {\n                              value: L(\"≤\"),\n                              id: \"less_or_equal\",\n                           },\n                           {\n                              value: L(\"≥\"),\n                              id: \"greater_or_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // List\n                     {\n                        batch: \"list\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"Same As User\"),\n                              id: \"same_as_user\",\n                           },\n                           {\n                              value: L(\"Not Same As User\"),\n                              id: \"not_same_as_user\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition, oldValue) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Boolean\n                     {\n                        batch: \"boolean\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // User\n                     {\n                        batch: \"user\",\n                        view: \"combo\",\n                        value: \"is_current_user\",\n                        options: [\n                           {\n                              value: L(\"is current user\"),\n                              id: \"is_current_user\",\n                           },\n                           {\n                              value: L(\"is not current user\"),\n                              id: \"is_not_current_user\",\n                           },\n                           {\n                              value: L(\"contains current user\"),\n                              id: \"contain_current_user\",\n                           },\n                           {\n                              value: L(\"does not contain current user\"),\n                              id: \"not_contain_current_user\",\n                           },\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // String\n                     {\n                        batch: \"string\",\n                        view: \"combo\",\n                        value: \"contains\",\n                        options: [\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Email\n                     {\n                        batch: \"email\",\n                        view: \"combo\",\n                        value: \"contains\",\n                        options: [\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               // Value\n               {\n                  id: ids.inputValue,\n                  isolate: true,\n                  cells: [\n                     {\n                        batch: \"empty\",\n                     },\n\n                     // Query\n                     {\n                        id: ids.queryCombo,\n\n                        batch: \"query\",\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Query Field\n                     {\n                        id: ids.queryFieldCombo,\n                        batch: \"queryField\",\n                        rows: [\n                           {\n                              id: ids.queryFieldComboQuery,\n                              view: \"combo\",\n                              options: [],\n                              placeholder: L(\"Choose a Query\"),\n                              on: {\n                                 onChange: function (value) {\n                                    var $viewComparer = this.getParentView();\n                                    var $viewCond = $viewComparer\n                                       .getParentView()\n                                       .getParentView();\n                                    _logic.onChangeQueryFieldCombo(\n                                       value,\n                                       $viewCond\n                                    );\n\n                                    _logic.onChange();\n                                 },\n                              },\n                           },\n                           {\n                              id: ids.queryFieldComboField,\n                              view: \"combo\",\n                              options: [],\n                              placeholder: L(\"Choose a Field\"),\n                              on: {\n                                 onChange: _logic.onChange,\n                              },\n                           },\n                        ],\n                     },\n\n                     // Field match\n                     {\n                        id: ids.fieldMatch,\n                        batch: \"fieldMatch\",\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Data collection\n                     {\n                        id: ids.dataCollection,\n                        batch: \"dataCollection\",\n                        view: \"richselect\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Date\n                     {\n                        // inputView.format = field.getDateFormat();\n                        batch: \"date\",\n                        id: ids.datePicker,\n                        view: \"datepicker\",\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Number\n                     {\n                        batch: \"number\",\n                        view: \"text\",\n                        validate: webix.rules.isNumber,\n                        on: {\n                           onTimedKeyPress: function () {\n                              if (this.validate()) _logic.onChange();\n                           },\n                        },\n                     },\n                     // List\n                     {\n                        batch: \"list\",\n                        id: ids.listOptions,\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Boolean\n                     {\n                        batch: \"boolean\",\n                        view: \"checkbox\",\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // User\n                     {\n                        batch: \"user\",\n                        view: \"combo\",\n                        options: this.AB.Account.userList().map((u) => {\n                           return {\n                              id: u.username,\n                              value: u.username,\n                           };\n                        }),\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // String\n                     {\n                        batch: \"string\",\n                        view: \"text\",\n                        on: {\n                           onTimedKeyPress: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Email\n                     {\n                        batch: \"email\",\n                        view: \"text\",\n                        on: {\n                           onTimedKeyPress: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  icon: \"fa fa-plus\",\n                  type: \"icon\",\n                  autowidth: true,\n                  click: function () {\n                     var $viewForm = this.getFormView();\n\n                     var indexView = $viewForm.index(this.getParentView());\n\n                     _logic.addNewFilter(indexView + 1);\n                  },\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_danger\",\n                  icon: \"fa fa-trash\",\n                  type: \"icon\",\n                  autowidth: true,\n                  click: function () {\n                     var $viewCond = this.getParentView();\n\n                     _logic.removeNewFilter($viewCond);\n                  },\n               },\n            ],\n         };\n      };\n\n      _logic.getAddButtonUI = () => {\n         return {\n            view: \"button\",\n            id: ids.addNewFilter,\n            css: \"webix_primary\",\n            type: \"form\",\n            label: L(\"Add a filter\"),\n            click: () => {\n               _logic.addNewFilter();\n            },\n         };\n      };\n\n      _logic.addNewFilter = (index, fieldId) => {\n         var viewId;\n         var ui = _logic.getFilterUI();\n\n         var $viewForm = $$(ids.filterForm);\n         if ($viewForm) {\n            viewId = $viewForm.addView(ui, index);\n\n            _logic.toggleAddNewButton();\n\n            // select a option of field\n            if (fieldId) _logic.selectField(fieldId, $$(viewId), true);\n         }\n\n         return viewId;\n      };\n\n      _logic.removeNewFilter = function ($viewCond) {\n         var $viewForm = $$(ids.filterForm);\n\n         $viewForm.removeView($viewCond);\n\n         _logic.toggleAddNewButton();\n\n         _logic.onChange();\n      };\n\n      _logic.toggleAddNewButton = function () {\n         if (!$$(ids.filterForm)) return;\n\n         // Show \"Add new filter\" button\n         if ($$(ids.filterForm).getChildViews().length < 1) {\n            $$(ids.filterForm).hide();\n            $$(ids.addNewFilter).show();\n         }\n         // Hide \"Add new filter\" button\n         else {\n            $$(ids.filterForm).show();\n            $$(ids.addNewFilter).hide();\n         }\n      };\n\n      _logic.selectCombineCondition = (val, ignoreNotify) => {\n         // define combine value to configuration\n         this.config_settings.glue = val;\n\n         // update value of every combine conditions\n         var $viewConds = $$(ids.filterForm).getChildViews();\n         $viewConds.forEach((v) => {\n            if (v.$$ && v.$$(ids.glue)) v.$$(ids.glue).setValue(val);\n         });\n\n         if (!ignoreNotify) _logic.onChange();\n      };\n\n      _logic.selectField = (columnId, $viewCond, ignoreNotify) => {\n         if (!this._Fields) return;\n\n         var field = this._Fields.filter((f) => f.id == columnId)[0];\n         if (!field) return;\n\n         // switch view\n         batchName = field.key;\n         if (field.id == \"this_object\") batchName = \"query\";\n         // Special this object query\n         else if (batchName == \"LongText\" || batchName == \"combined\")\n            batchName = \"string\";\n         else if (field.key == \"formula\") batchName = \"number\";\n         var isQueryField =\n            this._QueryFields.filter((f) => {\n               return f.id == field.id;\n            }).length > 0;\n         if (isQueryField) {\n            // we chose a connectField which is now a Query type\n            batchName = \"query\";\n         }\n         $viewCond.$$(ids.rule).showBatch(batchName);\n         $viewCond.$$(ids.inputValue).showBatch(batchName);\n\n         let options = [];\n         let Queries = [];\n\n         // populate the list of Queries for this_object:\n         if (field.id == \"this_object\" && this._Object) {\n            Queries = this.queries((q) => q.canFilterObject(this._Object));\n         }\n         // populate the list of Queries for a query field\n         else if (isQueryField) {\n            Queries = this.queries((q) => {\n               return (\n                  (this._Object ? this._Object.id : \"\") != q.id && // Prevent filter looping\n                  q.canFilterObject(field.datasourceLink)\n               );\n            });\n         }\n\n         Queries.forEach((q) => {\n            options.push({\n               id: q.id,\n               value: q.label,\n            });\n         });\n         $viewCond\n            .$$(ids.inputValue)\n            .$$(ids.queryCombo)\n            .define(\"options\", options);\n         $viewCond.$$(ids.inputValue).$$(ids.queryCombo).refresh();\n\n         // populate options of list\n         if (field.key == \"list\") {\n            let listOptions = field.settings.options.map(function (x) {\n               return {\n                  id: x.id,\n                  value: x.text,\n               };\n            });\n\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.listOptions)\n               .define(\"options\", listOptions);\n            $viewCond.$$(ids.inputValue).$$(ids.listOptions).refresh();\n         }\n         // set format of datepicker\n         else if (field.key == \"date\") {\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.datePicker)\n               .define(\"format\", field.getFormat());\n            $viewCond.$$(ids.inputValue).$$(ids.datePicker).refresh();\n         }\n\n         var rule = null,\n            ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n            $viewComparer = $viewCond\n               .$$(ids.rule)\n               .queryView({ id: ruleViewId });\n         if ($viewComparer && $viewComparer.getList) {\n            let defaultOpt = ($viewComparer.getList().config.data || [])[0];\n            if (defaultOpt) {\n               $viewComparer.setValue(defaultOpt.id);\n            }\n\n            // rule = $viewComparer.getValue();\n            // if (rule == \"in_query_field\" || rule == \"not_in_query_field\") {\n            // \t// Show the new value inputs\n            // \t$viewCond.$$(ids.inputValue).showBatch(\"queryField\");\n            // } else if (rule == \"same_as_field\" || rule == \"not_same_as_field\") {\n            // \t// Show the new value inputs\n            // \t$viewCond.$$(ids.inputValue).showBatch(\"fieldMatch\");\n            // }\n         }\n\n         if (!ignoreNotify) _logic.onChange();\n      };\n\n      _logic.onChangeRule = (rule, $viewCond, notify = false) => {\n         switch (rule) {\n            case \"contains\":\n            case \"not_contains\":\n            case \"equals\":\n            case \"not_equal\":\n               // For \"connect_fields\" search by CUSTOM index value\n               if (batchName == \"query\") {\n                  $viewCond.$$(ids.inputValue).showBatch(\"string\");\n               }\n               // If want to call notify or call .onChange(), then pass notify is true.\n               // _logic.onChange();\n               break;\n\n            case \"is_current_user\":\n            case \"is_not_current_user\":\n            case \"contain_current_user\":\n            case \"not_contain_current_user\":\n            case \"same_as_user\":\n            case \"not_same_as_user\":\n            case \"less_current\":\n            case \"greater_current\":\n            case \"less_or_equal_current\":\n            case \"greater_or_equal_current\":\n            case \"is_empty\":\n            case \"is_not_empty\":\n            case \"is_current_date\":\n               // clear and disable the value field\n               $viewCond.$$(ids.inputValue).showBatch(\"empty\");\n               _logic.onChange();\n               break;\n\n            case \"last_days\":\n            case \"next_days\":\n               // Show the number input\n               $viewCond.$$(ids.inputValue).showBatch(\"number\");\n               break;\n\n            case \"in_query_field\":\n            case \"not_in_query_field\":\n               // populate the list of Queries for this_object:\n               var options = [];\n\n               // Get all application's queries\n               this.queries(\n                  (q) => this._Object == null || q.id != this._Object.id\n               ).forEach((q) => {\n                  options.push({\n                     id: q.id,\n                     value: q.label,\n                  });\n               });\n\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.queryFieldComboQuery)\n                  .define(\"options\", options);\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.queryFieldComboQuery)\n                  .refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"queryField\");\n               break;\n\n            case \"same_as_field\":\n            case \"not_same_as_field\":\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.fieldMatch)\n                  .define(\"options\", this.recordRuleFieldOptions);\n               $viewCond.$$(ids.inputValue).$$(ids.fieldMatch).refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"fieldMatch\");\n               break;\n\n            case \"in_data_collection\":\n            case \"not_in_data_collection\": {\n               let dcOptions = [];\n\n               // pull data collection list\n\n               // get id of the link object\n               let linkObjectId,\n                  columnId = $viewCond.$$(ids.field).getValue();\n               if (columnId == \"this_object\" && this._Object) {\n                  linkObjectId = this._Object.id;\n               } else {\n                  let field = this._Fields.filter((f) => f.id == columnId)[0];\n                  if (field) linkObjectId = field.settings.linkObject;\n               }\n\n               if (this._Application && linkObjectId) {\n                  this._Application\n                     .datacollections(\n                        (dc) =>\n                           dc.datasource && dc.datasource.id == linkObjectId\n                     )\n                     .forEach((dc) => {\n                        dcOptions.push({\n                           id: dc.id,\n                           value: dc.label,\n                        });\n                     });\n               }\n\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.dataCollection)\n                  .define(\"options\", dcOptions);\n               $viewCond.$$(ids.inputValue).$$(ids.dataCollection).refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"dataCollection\");\n               break;\n            }\n\n            default:\n               // Show the default value inputs\n               $viewCond.$$(ids.inputValue).showBatch(batchName);\n\n               if (notify) _logic.onChange();\n\n               break;\n         }\n      };\n\n      _logic.onChangeQueryFieldCombo = (value, $viewCond) => {\n         // populate the list of Queries for this_object:\n         let options = [];\n         // Get all queries fields\n         let Query = this.queries((q) => {\n            return q.id == value;\n         })[0];\n         if (Query) {\n            Query.fields((f) => {\n               return !f.isConnection;\n            }).forEach((q) => {\n               options.push({\n                  id: q.id,\n                  value: q.object.label + \".\" + q.label,\n               });\n            });\n\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.queryFieldComboField)\n               .define(\"options\", options);\n            $viewCond.$$(ids.inputValue).$$(ids.queryFieldComboField).refresh();\n         }\n\n         // _logic.onChange();\n      };\n\n      _logic.onChange = () => {\n         if (!this.__blockOnChange) {\n            // refresh config settings before notify\n            _logic.getValue();\n\n            console.warn(\"convert RowFilter.callback.onChange() to .emit()\");\n            _logic.callbacks.onChange();\n            this.emit(\"change\");\n         }\n\n         return false;\n      };\n\n      _logic.blockOnChange = () => {\n         this.__blockOnChange = true;\n      };\n\n      _logic.unblockOnChange = () => {\n         this.__blockOnChange = false;\n      };\n\n      /**\n       * @method getValue\n       *\n       * @return {JSON} -\n       * {\n       * \t\tglue: '', // 'and', 'or'\n       *\t\trules: [\n       *\t\t\t{\n       *\t\t\t\tkey:\t'column name',\n       *\t\t\t\trule:\t'rule',\n       *\t\t\t\tvalue:\t'value'\n       *\t\t\t}\n       *\t\t]\n       * }\n       */\n      _logic.getValue = () => {\n         let config_settings = {\n            glue: \"and\",\n            rules: [],\n         };\n\n         var $viewForm = $$(ids.filterForm);\n         if ($viewForm) {\n            $viewForm.getChildViews().forEach(($viewCond, index) => {\n               if (index == 0) {\n                  config_settings.glue = $viewCond.$$(ids.glue).getValue();\n               }\n\n               var $fieldElem = $viewCond.$$(ids.field);\n               if (!$fieldElem) return;\n\n               /* field id */\n               var fieldId = $fieldElem.getValue();\n               if (!fieldId) return;\n\n               /* alias */\n               var alias;\n               var selectedOpt = $viewCond\n                  .$$(ids.field)\n                  .getPopup()\n                  .config.body.data.filter((opt) => opt.id == fieldId)[0];\n               if (selectedOpt) alias = selectedOpt.alias || undefined;\n\n               /* rule */\n               var rule = null,\n                  ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n                  $viewComparer = $viewCond\n                     .$$(ids.rule)\n                     .queryView({ id: ruleViewId });\n               if ($viewComparer && $viewComparer.getValue)\n                  rule = $viewComparer.getValue();\n\n               /* value */\n               var value = null,\n                  valueViewId = $viewCond.$$(ids.inputValue).getActiveId(),\n                  $viewConditionValue = $viewCond\n                     .$$(ids.inputValue)\n                     .queryView({ id: valueViewId });\n               if ($viewConditionValue && $viewConditionValue.getValue) {\n                  value = $viewConditionValue.getValue();\n               } else if (\n                  $viewConditionValue &&\n                  $viewConditionValue.getChildViews()\n               ) {\n                  var vals = [];\n                  $viewConditionValue.getChildViews().forEach((element) => {\n                     vals.push($$(element).getValue());\n                  });\n                  value = vals.join(\":\");\n               }\n\n               // Convert date format\n               if (value instanceof Date) {\n                  let dateField = this._Fields.filter(\n                     (f) => f.id == fieldId\n                  )[0];\n                  if (dateField) {\n                     value = dateField.exportValue(value);\n                  } else {\n                     value = value.toISOString();\n                  }\n               }\n\n               config_settings.rules.push({\n                  alias: alias || undefined,\n                  key: fieldId,\n                  rule: rule,\n                  value: value,\n               });\n            });\n         }\n\n         this.config_settings = config_settings;\n\n         return this.config_settings;\n      };\n\n      // webix UI definition:\n      this.ui = {\n         id: ids.component,\n         rows: [\n            {\n               view: \"form\",\n               id: ids.filterForm,\n               hidden: true,\n               elements: [],\n            },\n            _logic.getAddButtonUI(),\n         ],\n      };\n   }\n\n   // setting up UI\n   init(options = {}) {\n      super.init(options);\n\n      // register our callbacks:\n      for (var c in this._logic.callbacks) {\n         this._logic.callbacks[c] = options[c] || this._logic.callbacks[c];\n      }\n\n      if (options.showObjectName)\n         this._settings.showObjectName = options.showObjectName;\n\n      if (options.isRecordRule) {\n         this.recordRuleOptions = [\n            {\n               value: L(\"Same As Field\"),\n               id: \"same_as_field\",\n            },\n            {\n               value: L(\"Not Field\"),\n               id: \"not_same_as_field\",\n            },\n         ];\n         this.recordRuleFieldOptions = options.fieldOptions;\n      }\n   }\n\n   setValue(settings) {\n      settings = settings || {};\n\n      super.setValue(settings);\n\n      let ids = this.ids;\n      let logic = this._logic;\n\n      // block .onChange event\n      logic.blockOnChange();\n\n      let config_settings = this.AB.cloneDeep(settings);\n      config_settings.rules = config_settings.rules || [];\n\n      // Redraw form with no elements\n      var $viewForm = $$(ids.filterForm);\n      if ($viewForm) webix.ui([], $viewForm);\n\n      // Add \"new filter\" button\n      if (config_settings.rules.length == 0) {\n         logic.toggleAddNewButton();\n      }\n\n      config_settings.rules.forEach((f) => {\n         var viewId = logic.addNewFilter(),\n            $viewCond = $$(viewId);\n\n         if ($viewCond == null) return;\n\n         var field = this._Fields.filter((col) => col.id == f.key)[0];\n\n         // \"and\" \"or\"\n         $viewCond.$$(ids.glue).define(\"value\", config_settings.glue);\n         $viewCond.$$(ids.glue).refresh();\n\n         // Select Field\n         $viewCond.$$(ids.field).define(\"value\", f.key);\n         $viewCond.$$(ids.field).refresh();\n         logic.selectField(f.key, $viewCond, true);\n\n         // Comparer\n         var ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n            $viewComparer = $viewCond\n               .$$(ids.rule)\n               .queryView({ id: ruleViewId });\n         if ($viewComparer && $viewComparer.setValue) {\n            $viewComparer.define(\"value\", f.rule);\n            $viewComparer.refresh();\n         }\n\n         // if (f.rule == \"in_query_field\" || f.rule == \"not_in_query_field\" || f.rule == \"same_as_field\" || f.rule == \"not_same_as_field\") {\n         $viewCond.blockEvent();\n         logic.onChangeRule(f.rule, $viewCond);\n         $viewCond.unblockEvent();\n         // }\n\n         // Input\n         var valueViewId = $viewCond.$$(ids.inputValue).getActiveId(),\n            $viewConditionValue = $viewCond\n               .$$(ids.inputValue)\n               .queryView({ id: valueViewId });\n         if ($viewConditionValue && $viewConditionValue.setValue) {\n            // convert to Date object\n            if (\n               field &&\n               field.key == \"date\" &&\n               f.value &&\n               (f.rule == \"less\" ||\n                  f.rule == \"greater\" ||\n                  f.rule == \"less_or_equal\" ||\n                  f.rule == \"greater_or_equal\")\n            ) {\n               $viewConditionValue.define(\"value\", new Date(f.value));\n            } else {\n               $viewConditionValue.define(\"value\", f.value);\n            }\n\n            $viewConditionValue.refresh();\n         } else if (\n            $viewConditionValue &&\n            $viewConditionValue.getChildViews()\n         ) {\n            let vals = (f.value || \"\").split(\":\");\n            let index = 0;\n            $viewConditionValue.getChildViews().forEach((element) => {\n               $$(element).blockEvent();\n               $$(element).setValue(vals[index]);\n               if (index == 0) {\n                  logic.onChangeQueryFieldCombo(vals[index], $viewCond);\n               }\n               $$(element).unblockEvent();\n               // $$(element).refresh();\n               index++;\n            });\n         }\n\n         if (field && field.key == \"user\") {\n            $viewCond.blockEvent();\n            logic.onChangeRule(f.rule, $viewCond);\n            $viewCond.blockEvent();\n         }\n      });\n\n      // unblock .onChange event\n      logic.unblockOnChange();\n   }\n\n   /**\n    * @method isComplete()\n    * returns a truthy value representing whether or not our current condition\n    * expression is fully completed.  Then externally checks can be made to\n    * verify if the data is complete.\n    * @return {bool}\n    */\n   isComplete() {\n      if (!this._completeConditions) {\n         this._completeConditions = this.AB.filterComplexNew(\n            `${this.ids.component}_iscomplete`\n         );\n      }\n\n      return this._completeConditions.isConditionComplete(this.getValue());\n   }\n};\n","// const ABComponent = require(\"./ABComponent\");\nimport ClassUI from \"../../ui/ClassUI\";\nconst ABViewForm = require(\"../platform/views/ABViewForm\");\n\nlet L = null;\n\nclass RowUpdater extends ClassUI {\n   constructor(idBase, AB) {\n      super(idBase, {\n         form: `${idBase}_rowUpdaterForm`,\n         addNew: `${idBase}_rowUpdaterAddNew`,\n         field: `${idBase}_rowUpdaterField`,\n      });\n\n      this.idBase = idBase;\n\n      this._Object = null;\n      // {ABObject}\n      // The ABObject we are building a form for.\n\n      this._mockFormWidget = null;\n      // {ABViewForm}\n      // When building our form components to display, they need a\n      // ABViewForm to be associated with.\n\n      this.AB = AB;\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   /**\n    * @method uiItem()\n    * Return the webix description of a new field/value row.\n    * @return {json}\n    */\n   uiItem() {\n      const self = this;\n\n      return {\n         rows: [\n            {\n               view: \"layout\",\n               isolate: true,\n               cols: [\n                  {\n                     // Label\n                     view: \"label\",\n                     width: 40,\n                     label: L(\"Set\"),\n                  },\n                  {\n                     // Field list\n                     view: \"combo\",\n                     id: this.ids.field,\n                     options: this.getFieldList(true),\n                     on: {\n                        onChange: async function (columnId) {\n                           const $viewItem = this.getParentView();\n\n                           await self.selectField(columnId, $viewItem);\n                        },\n                     },\n                  },\n                  {\n                     // Label\n                     view: \"label\",\n                     width: 40,\n                     label: L(\"To\"),\n                  },\n                  {\n                     view: \"segmented\",\n                     value: \"custom\",\n                     height: 40,\n                     maxWidth: 160,\n                     options: [\n                        { id: \"custom\", value: L(\"Custom\") },\n                        { id: \"process\", value: L(\"Process\") },\n                     ],\n                     hidden:\n                        this._extendedOptions == null ||\n                        !this._extendedOptions.length,\n                     on: {\n                        onChange: function (val) {\n                           const $viewItem = this.getParentView();\n\n                           self.toggleCustomProcessOption(\n                              $viewItem,\n                              val == \"process\"\n                           );\n                        },\n                     },\n                  },\n                  // Field value\n                  {},\n                  // Extended value\n                  {\n                     hidden: true,\n                  },\n                  {\n                     // \"Remove\" button\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     icon: \"fa fa-trash\",\n                     type: \"icon\",\n                     autowidth: true,\n\n                     click: function () {\n                        const $viewCond = this.getParentView().getParentView();\n\n                        self.removeItem($viewCond);\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   /**\n    * @method ui()\n    * return the webix description of our Entry form.\n    * @return {json}\n    */\n   ui() {\n      // webix UI definition:\n      return {\n         rows: [\n            {\n               view: \"form\",\n               id: this.ids.form,\n               hidden: true,\n               borderless: true,\n               elements: [],\n            },\n            {\n               view: \"button\",\n               id: this.ids.addNew,\n               icon: \"fa fa-plus\",\n               type: \"iconButton\",\n               label: L(\"Add field to edit\"),\n               click: () => {\n                  this.addItem();\n               },\n            },\n         ],\n      };\n   }\n\n   init(AB) {\n      const $form = $$(this.ids.form);\n      if ($form) AB.Webix.extend($form, AB.Webix.ProgressBar);\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method addItem()\n    * Add another field/value entry item to our form.\n    * @param {integer} index\n    *        which position in the list of form elements do we want to\n    *        insert the new row.\n    * @return {string} the webix .id of the new row we just added.\n    */\n   addItem(index) {\n      const $form = $$(this.ids.form);\n      const remainFields = this.getFieldList(true);\n\n      if (remainFields.length < 1) return;\n\n      const ui = this.uiItem();\n      const viewId = $form.addView(ui, index);\n\n      this.toggleForm();\n\n      return viewId;\n   }\n\n   /**\n    * @method getFieldList()\n    * Return an array of options in a webix.list format that represents the\n    * possible fields that can be selected on the current ABObject.\n    * @param {bool} excludeSelected\n    *        should we exclude from the list the fields that are ALREADY\n    *        displayed on the form?\n    * @return {array} [ { id, value }, ... ]\n    *         id: ABField.id\n    *         value: ABField.label\n    */\n   getFieldList(excludeSelected) {\n      let options = (this._Object.fields() || []).map((f) => {\n         return {\n            id: f.id,\n            value: f.label,\n         };\n      });\n\n      if (excludeSelected) {\n         const $form = $$(this.ids.form);\n\n         $form.getChildViews().forEach(($viewCond) => {\n            // Ignore \"Add new\" button\n            if (!$viewCond || !$viewCond.$$) return;\n\n            const $fieldElem = $viewCond.$$(this.ids.field);\n\n            if (!$fieldElem) return;\n\n            const fieldId = $fieldElem.getValue();\n\n            if (!fieldId) return;\n\n            options = options.filter((opt) => opt.id != fieldId);\n         });\n      }\n      return options;\n   }\n\n   /**\n    * @method getValue\n    * Return an array of field:value results that have been entered on this\n    * form.\n    * @return {Array}\n    *         [\n    *            {\n    *               fieldId: {UUID}\n    *               isProcessValue: {Boolean} - If it is true, then value is from Process parameter\n    *               value: {Object}\n    *            },\n    *            ...\n    *         ]\n    */\n   getValue() {\n      const result = [];\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         $form.getChildViews().forEach(($viewContainer) => {\n            const $viewItem = $viewContainer.getChildViews()[0];\n\n            // Ignore \"Add new\" button\n            if (!$viewItem || !$viewItem.$$) return;\n\n            const $fieldElem = $viewItem.$$(this.ids.field);\n\n            if (!$fieldElem) return;\n\n            const fieldId = $fieldElem.getValue();\n\n            if (!fieldId) return;\n\n            let $customValueElem = $viewItem.getChildViews()[4];\n            $customValueElem = this._pullInputElement($customValueElem);\n\n            const $processValueElem = $viewItem.getChildViews()[5];\n\n            if (!$customValueElem && !$processValueElem) return;\n\n            const fieldInfo = this._Object.fieldByID(fieldId);\n            const val = {\n               fieldId: fieldId,\n            };\n\n            // Custom value\n            if ($customValueElem && $customValueElem.isVisible()) {\n               if (\n                  fieldInfo.key === \"connectObject\" ||\n                  fieldInfo.key === \"user\"\n               )\n                  val.value = fieldInfo.getValue($customValueElem);\n               else if (\n                  fieldInfo.key === \"date\" ||\n                  fieldInfo.key === \"datetime\"\n               ) {\n                  const currDateCheckbox =\n                     $customValueElem.getChildViews()[0] ?? $customValueElem;\n\n                  if (currDateCheckbox.getValue() == true)\n                     val.value = \"ab-current-date\";\n                  else {\n                     const datePicker =\n                        $customValueElem.getChildViews()[1] ?? $customValueElem;\n\n                     val.value = fieldInfo.getValue(datePicker);\n                  }\n               }\n               // Get value from data field manager\n               else val.value = fieldInfo.getValue($customValueElem);\n            }\n            // Process value\n            else if ($processValueElem && $processValueElem.isVisible()) {\n               val.isProcessValue = true;\n               val.value = $processValueElem.getValue();\n            }\n\n            // Add to output\n            result.push(val);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method objectLoad\n    * Load the Object we are currently working with.\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      this._Object = object;\n\n      this._mockApp = this.AB.applicationNew({});\n      this._mockFormWidget = new ABViewForm(\n         {\n            settings: {\n               showLabel: false,\n               labelWidth: 0,\n            },\n         },\n         this._mockApp // just need any ABApplication here\n      );\n      this._mockFormWidget.objectLoad(object);\n\n      this.setValue(null); // clear\n   }\n\n   /**\n    * @method removeItem\n    * Remove the current form row.\n    * @param {webix.view} $viewCond\n    *        This is the webix.view that contains the whole value row\n    *        we are removing.\n    */\n   removeItem($viewCond) {\n      const $form = $$(this.ids.form);\n\n      $form.removeView($viewCond);\n      this.toggleForm();\n   }\n\n   /**\n    * @method selectField\n    * Update the value display when a field is selected. Changing to a\n    * different field will change the types of values that can be entered.\n    * @param {string} columnId\n    *        The field.uuid of the object that was selected.\n    * @param {webix.view} $viewItem\n    *        The webix.view that contains the value expression of the field\n    *        that was selected.\n    */\n   async selectField(columnId, $viewItem) {\n      const field = this._Object.fieldByID(columnId);\n\n      if (!field) {\n         this.AB.notify.builder(\n            new Error(`could not find field for id[${columnId}]`),\n            {\n               context: \"RowUpdater.selectField() could not find a field\",\n               fieldID: columnId,\n            }\n         );\n\n         return;\n      }\n\n      const fieldComponent = field.formComponent(),\n         formFieldWidget = fieldComponent.newInstance(\n            this._mockApp,\n            this._mockFormWidget\n         ),\n         formFieldComponent = formFieldWidget.component(\n            this.AB._App,\n            this.idBase\n         );\n      const childViews = $viewItem.getChildViews();\n\n      let inputView =\n         typeof formFieldComponent.ui == \"function\"\n            ? formFieldComponent.ui()\n            : formFieldComponent.ui;\n\n      // Add extended value options\n      $viewItem.removeView(childViews[5]);\n\n      if (this._extendedOptions?.length)\n         $viewItem.addView(\n            {\n               view: \"richselect\",\n               options: this._extendedOptions,\n               hidden: true,\n            },\n            5\n         );\n      else\n         $viewItem.addView(\n            {\n               hidden: true,\n            },\n            5\n         );\n\n      await this.busy();\n\n      // WORKAROUND: add '[Current User]' option to the user data field\n      switch (field.key) {\n         case \"connectObject\":\n         case \"user\":\n            inputView = inputView.rows[0].rows[0];\n            inputView.suggest.body.data =\n               (await field.getOptions()).map((e) => {\n                  return {\n                     id: field.getRelationValue(e),\n                     value: e.text,\n                  };\n               }) ?? [];\n\n            if (field.key === \"user\")\n               inputView.suggest.body.data.unshift({\n                  id: \"ab-current-user\",\n                  value: \"ab-current-user\",\n                  // This one is saved with the \"value\" not \"id\".\n                  // value: L(\"Current User\"),\n               });\n\n            break;\n\n         case \"date\":\n         case \"datetime\":\n            inputView = {\n               view: \"layout\",\n               rows: [\n                  {\n                     view: \"checkbox\",\n                     labelWidth: 0,\n                     labelRight: L(\"Current Date/Time\"),\n                     on: {\n                        onChange: function (newVal) {\n                           const layout = this.getParentView();\n\n                           if (!layout) return;\n\n                           const datePicker = layout.getChildViews()[1];\n\n                           if (!datePicker) return;\n\n                           newVal ? datePicker.hide() : datePicker.show();\n                        },\n                     },\n                  },\n                  inputView,\n               ],\n            };\n\n            break;\n      }\n\n      // Change component to display value\n      $viewItem.removeView(childViews[4]);\n      $viewItem.addView(inputView, 4);\n\n      formFieldComponent.init();\n\n      // Show custom display of data field\n      if (field.customDisplay)\n         field.customDisplay({}, this.AB._App, childViews[4].$view);\n\n      this.toggleCustomProcessOption(\n         $viewItem,\n         childViews[3].getValue() === \"process\"\n      );\n      $$($viewItem).adjust();\n      $viewItem.getFormView().adjust();\n\n      this.ready();\n   }\n\n   /**\n    * @method setValue\n    * Given the previous settings, redraw the form with the field/value\n    * entries.\n    * @param {array} settings\n    *        [\n    *           {\n    *              fieldId: {UUID}\n    *              value: {Object|String}\n    *           }, ...\n    *        ]\n    */\n   setValue(settings) {\n      const $form = $$(this.ids.form);\n\n      if (!$form) return;\n\n      // Redraw form with no elements\n      webix.ui([], $form);\n\n      settings = settings || [];\n      if (settings.length < 1) return;\n\n      settings.forEach(async (item) => {\n         const $viewContainer = $$(this.addItem());\n         const $viewItem = $viewContainer.getChildViews()[0];\n         const $valueTypeButton = $viewItem.queryView(\n            { view: \"segmented\" },\n            \"self\"\n         );\n\n         $valueTypeButton.setValue(item.isProcessValue ? \"process\" : \"custom\");\n\n         const $field = $viewItem.$$(this.ids.field);\n\n         $field.define(\"value\", item.fieldId);\n         $field.refresh();\n\n         await this.selectField(item.fieldId, $viewItem);\n\n         const fieldInfo = this._Object.fieldByID(item.fieldId);\n\n         if (!fieldInfo) return;\n\n         // Set process value\n         if (item.isProcessValue) {\n            const $processValueElem = $viewItem.getChildViews()[5];\n\n            $processValueElem.setValue?.(item.value);\n\n            return;\n         }\n\n         // Set custom value\n         let $customValueElem = $viewItem.getChildViews()[4];\n         $customValueElem = this._pullInputElement($customValueElem);\n         const rowData = {};\n\n         rowData[fieldInfo.columnName] = item.value?.value ?? item.value;\n         fieldInfo.setValue($customValueElem, rowData);\n\n         // Set \"Current Date/Time\" check box\n         if (\n            (fieldInfo.key == \"date\" || fieldInfo.key == \"datetime\") &&\n            rowData[fieldInfo.columnName] == \"ab-current-date\" &&\n            $customValueElem.config.view == \"checkbox\"\n         ) {\n            $customValueElem.setValue(true);\n         }\n      });\n\n      this.toggleForm();\n   }\n\n   /**\n    * @method toggleForm\n    * decide if the form with the field/value elements should be displayed.\n    */\n   toggleForm() {\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         const childViews = $form.getChildViews();\n\n         if (childViews && childViews.length) $form.show();\n         else $form.hide();\n         $form.adjust();\n      }\n   }\n\n   setExtendedOptions(options) {\n      this._extendedOptions = options;\n   }\n\n   toggleCustomProcessOption($viewItem, showProcessOption) {\n      const $customOption = $viewItem.getChildViews()[4];\n      const $processOption = $viewItem.getChildViews()[5];\n\n      if (showProcessOption) {\n         $customOption.hide();\n         $processOption.show();\n      } else {\n         $customOption.show();\n         $processOption.hide();\n      }\n   }\n\n   async busy() {\n      $$(this.ids.addNew).disable();\n\n      const $form = $$(this.ids.form);\n\n      if (!$form) return;\n\n      if (!$form.showProgress) await this.init(this.AB);\n\n      $form.showProgress({ type: \"icon\" });\n   }\n\n   ready() {\n      $$(this.ids.addNew).enable();\n      $$(this.ids.form).hideProgress();\n   }\n\n   _pullInputElement($elem) {\n      if (!$elem?.getValue && $elem?.getChildViews) {\n         return (\n            $elem\n               .getChildViews()\n               .filter((childView) => childView.getValue)[0] ?? $elem\n         );\n      } else {\n         return $elem;\n      }\n   }\n}\n\nexport default RowUpdater;\n","/*\n * ABField\n *\n * An ABField defines a single unique Field/Column in a ABObject.\n *\n */\n\nconst ABFieldCore = require(\"../../core/dataFields/ABFieldCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABField extends ABFieldCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n\n      this.AB.on(\"ab.abdefinition.update\", (def) => {\n         if (def.id == this.id) {\n            this.emit(\"definition.updated\", this);\n         }\n      });\n\n      //  \t// NOTE: setup this first so later we can use .fieldType(), .fieldIcon()\n      //  \tthis.defaults = fieldDefaults;\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'fieldKey',\t\t\t\t// unique key for this Field\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this Field Type\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n      // \t\tcolumnName:'column_name',\t// a valid mysql table.column name\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      // \t\t\tshowIcon:true/false,\t// only useful in Object Workspace DataTable\n      // \t\t\tisImported: 1/0,\t\t// flag to mark is import from other object\n      // \t\t\trequired: 1/0,\t\t\t// field allows does not allow NULL or it does allow NULL\n      // \t\t\twidth: {int}\t\t\t// width of display column\n\n      // \t\t// specific for dataField\n      // \t\t},\n      // \t\ttranslations:[]\n      // \t}\n\n      // \tthis.fromValues(values);\n\n      // this.object = object;\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   static editorValues(settings) {\n      const obj = {\n         label: settings.label,\n         columnName: settings.columnName,\n         settings: settings,\n      };\n\n      delete settings.label;\n      delete settings.columnName;\n\n      return obj;\n   }\n\n   addValidation(ids, settings) {\n      const App = this.object.application.App;\n      const Filter = this.AB.filterComplexNew(\n         `${this.id}_field_validation_rules`\n      );\n      $$(ids.filterComplex).addView({\n         view: \"form\",\n         css: \"abValidationForm\",\n         cols: [\n            {\n               rows: [\n                  {\n                     view: \"text\",\n                     name: \"invalidMessage\",\n                     labelWidth: this.AB.UISettings.config().labelWidthLarge,\n                     value:\n                        settings && settings.invalidMessage\n                           ? settings.invalidMessage\n                           : \"\",\n                     label: L(\"Invalid Message\"),\n                  },\n                  Filter.ui,\n               ],\n            },\n            {\n               view: \"button\",\n               css: \"webix_danger\",\n               icon: \"fa fa-trash\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  const $viewCond = this.getParentView();\n                  $$(ids.filterComplex).removeView($viewCond);\n               },\n            },\n         ],\n      });\n      $$(Filter.ids.save).hide();\n      // Filter.applicationLoad(this.object.application);\n      Filter.fieldsLoad(this.object.fields());\n      if (settings && settings.rules) Filter.setValue(settings.rules);\n   }\n\n   /*\n    * @method isValid\n    * check the current values to make sure they are valid.\n    * Here we check the default values provided by ABField.\n    *\n    * @return null or [{OP.Validation.validator()}] objects.\n    */\n   isValid() {\n      const validator = this.AB.Validation.validator();\n\n      // .columnName must be unique among fileds on the same object\n      const isNameUnique =\n         this.object.fields((f) => {\n            return (\n               f.id != this.id &&\n               f.columnName.toLowerCase() == this.columnName.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"columnName\",\n            L(\n               \"Field columnName must be unique ({0} already used in this Object)\",\n               [this.columnName]\n            )\n         );\n      }\n\n      return validator;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      // verify we have been .save() before:\n      if (!this.id) return;\n\n      // NOTE: our .migrateXXX() routines expect the object to currently exist\n      // in the DB before we perform the DB operations.  So we need to\n      // .migrateDrop()  before we actually .objectDestroy() this.\n      await this.migrateDrop();\n\n      // the server still references an ABField in relationship to it's\n      // ABObject, so we need to destroy the Field 1st, then remove it\n      // from it's object.\n      await super.destroy();\n\n      await this.object.fieldRemove(this);\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABField with it's parent ABObject\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save(skipMigrate = false) {\n      let isAdd = false;\n      // if this is our initial save()\n      if (!this.id) {\n         isAdd = true;\n      }\n\n      // Whenever we update our settings, make sure any\n      // existing rows that have NULL values for this field\n      // are updated to have our current .default value.\n      if (!isAdd && this.settings.required && this.settings.default) {\n         const model = this.object.model();\n\n         // pull rows that has null value\n         const result = await model.findAll({\n            where: {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.id,\n                     rule: \"is_null\",\n                  },\n               ],\n            },\n         });\n\n         const tasks = [];\n\n         // updating ...\n         result.data.forEach((d) => {\n            if (!d[this.columnName]) d[this.columnName] = this.settings.default;\n\n            tasks.push(model.update(d.id, d));\n         });\n\n         await Promise.all(tasks);\n      }\n\n      // New ABDefinition method of saving:\n      // when this is done, we now have an .id\n      await super.save();\n\n      // incase this was an ADD operation, make sure the\n      // parent Obj now includes this object:\n      // NOTE: must be done after the .save() so we have an .id\n      await this.object.fieldAdd(this);\n\n      // perform any server side migrations for this Field:\n\n      // but not connectObject fields:\n      // ABFieldConnect.migrateXXX() gets called from the UI popupNewDataField\n      // in order to handle the timings of the 2 fields that need to be created\n      if (!this.isConnection && !skipMigrate) {\n         const fnMigrate = isAdd ? this.migrateCreate() : this.migrateUpdate();\n         await fnMigrate;\n      }\n\n      return this;\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return this.AB.Network.post({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   migrateUpdate() {\n      return this.AB.Network.put({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   migrateDrop() {\n      return this.AB.Network[\"delete\"]({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @function columnHeader\n    * Return the column header for a webix grid component for this specific\n    * data field.\n    * @param {Object} options\n    * {\n    *    isObjectWorkspace: {bool},  is this being used in the Object workspace.\n    *    width: {int},\n    *    height: {int},\n    *    editable: {bool}\n    * }\n    * @return {obj}  configuration obj\n    */\n   columnHeader(options) {\n      options = options || {};\n\n      const config = {\n         id: this.columnName, // this.id,\n         header: this.label,\n      };\n\n      if (options.isObjectWorkspace && this.settings.showIcon) {\n         config.header = `<span class=\"webix_icon fa fa-${this.fieldIcon()}\"></span>${\n            config.header\n         }`;\n      }\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.  If this isn't\n    * a standard value display (think image, Map, graph, etc...) then use this\n    * method to create the display in the table/grid cell.\n    * @param {object} row\n    *        is the {name=>value} hash of the current row of data.\n    * @param {App} App\n    *        the shared ui App object useful more making globally\n    *\t\t\t unique id references.\n    * @param {HtmlDOM} node\n    *        the HTML Dom object for this field's display.\n    * @param {object} options\n    *        option of additional settings\n    */\n   customDisplay(row, App, node, options) {}\n\n   /*\n    * @function customEdit\n    *\n    *\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node) {\n      return true;\n   }\n\n   /**\n    * @method getValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   getValue(item, rowData) {\n      return item.getValue();\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    */\n   setValue(item, rowData, defaultValue) {\n      if (!item) return;\n\n      let val;\n\n      if (\n         (rowData == null || rowData[this.columnName] == null) &&\n         defaultValue != null\n      ) {\n         val = defaultValue;\n      } else if (rowData && rowData[this.columnName] != null) {\n         val = rowData[this.columnName];\n      } else {\n         val = rowData;\n      }\n\n      try {\n         item.setValue(val);\n      } catch (err) {\n         // this error is fine because we handled it already\n      }\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent(formKey) {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n\n      let FC = {\n         // .common() is used to create the display in the list\n         common: () => {\n            return {\n               key: formKey,\n\n               // // but since this is a common place holder: use the\n               // // multilingual label here:\n               // labelKey: 'ab.abfield.labelPlaceholder',\n               // icon:  'square'\n            };\n         },\n\n         // .newInstance() is used to create the view instance when the component\n         // \t\tis dropped onto the ABView list.\n         newInstance: (application, parent) => {\n            application = application ?? this.AB._mockApp;\n\n            // NOTE: in case you were wondering, the base ABField\n            // \t\t will just return a label with 'ABFieldPlaceholder'\n            // \t\t as the text.  Any sub class of ABField should overwrite\n            // \t\t this and return an actual Form Component.\n\n            // store object id and field id to field component\n            const values = FC.common();\n            values.settings = values.settings || {};\n            values.settings.objectId = this.object.id;\n            values.settings.fieldId = this.id;\n\n            const ABFieldPlaceholder = application.viewNew(\n               values,\n               application,\n               parent\n            ); // ABViewManager.newView(values, application, parent);\n            // ABFieldPlaceholder.formatTitle();\n            // ABFieldPlaceholder.text = \"ABFieldPlaceholder\";\n\n            return ABFieldPlaceholder;\n         },\n      };\n      return FC;\n   }\n\n   /**\n    * @method detailComponent\n    */\n   detailComponent() {\n      return {\n         common: () => {\n            return {\n               icon: \"square\",\n            };\n         },\n\n         // .newInstance() is used to create the view instance when the component\n         // \t\tis dropped onto the ABView list.\n         newInstance: (application, parent) => {\n            application = application ?? this.AB._mockApp;\n\n            // store object id and field id to field component\n            const values = this.detailComponent().common();\n            values.settings = values.settings || {};\n            values.settings.objectId = this.object.id;\n            values.settings.fieldId = this.id;\n\n            const ABFieldPlaceholder = application.viewNew(\n               values,\n               application,\n               parent\n            ); // ABViewManager.newView(values, application, parent);\n\n            return ABFieldPlaceholder;\n         },\n      };\n   }\n\n   /**\n    * @method getSettings()\n    * return a copy of this.settings.\n    * @return {object}\n    */\n   getSettings() {\n      return Object.assign({}, this.settings);\n   }\n\n   /**\n    * @method warningsMessage()\n    * generate a commonly formatted warning message for this ABField.\n    * This is expected to be called from within a .warningsEval()\n    * method when generating warnings.\n    * @param {string} msg\n    *        the warning string to display\n    * @param {json} data\n    *        any relevant additional information for a developer to refer to.\n    */\n   warningsMessage(msg, data = {}) {\n      let message = `${this.fieldKey()}[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   async getDbInfo() {\n      return this.AB.Network.get({\n         url: `/definition/info/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   /**\n    * @method formCleanData()\n    * Review the data a form is about to submit and change/remove it as\n    * appropriate.\n    * @param {obj} rowData\n    *        The {data} a form has collected and is about to save.\n    * @return {undefined}\n    */\n   formCleanData(rowData) {\n      // default is to just leave data as is.\n   }\n};\n","const ABFieldAutoIndexCore = require(\"../../core/dataFields/ABFieldAutoIndexCore\");\n\nmodule.exports = class ABFieldAutoIndex extends ABFieldAutoIndexCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldAutoIndex\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldBooleanCore = require(\"../../core/dataFields/ABFieldBooleanCore\");\n\nmodule.exports = class ABFieldBoolean extends ABFieldBooleanCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldBoolean\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n\n      config.editor = \"template\";\n      config.css = \"center\";\n      config.template = (row, common, value, config) => {\n         // Group header\n         if (row.$group) return row[this.columnName];\n\n         // editable\n         if (options.editable) {\n            return (\n               '<div class=\"ab-boolean-display\">' +\n               common.checkbox(row, common, value, config) +\n               \"</div>\"\n            );\n         }\n\n         // readonly\n         else {\n            if (value)\n               return \"<div class='webix_icon fa fa-check-square-o'></div>\";\n            else return \"<div class='webix_icon fa fa-square-o'></div>\";\n         }\n      };\n\n      return config;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"checkbox\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-checkbox\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailcheckbox\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldCalculateCore = require(\"../../core/dataFields/ABFieldCalculateCore\");\n\nmodule.exports = class ABFieldCalculate extends ABFieldCalculateCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldCalculate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         if (rowData.$group) return rowData[this.columnName];\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldCombineCore = require(\"../../core/dataFields/ABFieldCombineCore\");\n\nmodule.exports = class ABFieldCombine extends ABFieldCombineCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldCombine\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this.settings.combinedFields.split(\",\") || []).forEach((id) => {\n         var field = this.object.fieldByID(id);\n         if (!field) {\n            this.warningsMessage(`dependent field[${id}] not found.`, {\n               fieldID: id,\n               combinedFields: this.settings.combinedFields,\n            });\n         }\n      });\n   }\n};\n","const ABFieldConnectCore = require(\"../../core/dataFields/ABFieldConnectCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldConnect extends ABFieldConnectCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      // verify we have been .save()d before:\n      if (!this.id) return Promise.resolve();\n\n      // NOTE: our .migrateXXX() routines expect the object to currently exist\n      // in the DB before we perform the DB operations.  So we need to\n      // .migrateDrop()  before we actually .objectDestroy() this.\n      // this.migrateDrop()\n      //    // .then(() => {\n      //    //    // NOTE : prevent recursive remove connected fields\n      //    //    // - remove this field from JSON\n      //    //    this.object._fields = this.object.fields((f) => {\n      //    //       return f.id != this.id;\n      //    //    });\n      //    // })\n      //    .then(() => {\n      //       // Save JSON of the object\n      //       return this.object.fieldRemove(this);\n      //    })\n      await super.destroy();\n\n      // Now we need to remove our linked Object->field\n\n      const linkObject = this.datasourceLink;\n      if (!linkObject) return Promise.resolve(); // already notified\n\n      const linkField = this.fieldLink;\n      if (!linkField) return Promise.resolve(); // already notified\n\n      // destroy linked field\n      return linkField.destroy();\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method pullRelationValues\n    *\n    * On the Web client, we want our returned relation values to be\n    * ready for Webix objects that require a .text and .value field.\n    *\n    * @param {*} row\n    * @return {array}\n    */\n   pullRelationValues(row) {\n      let selectedData = [];\n\n      const data = super.pullRelationValues(row);\n      const linkedObject = this.datasourceLink;\n\n      if (data && linkedObject) {\n         // if this select value is array\n         if (Array.isArray(data)) {\n            selectedData = data.map(function (d) {\n               // display label in format\n               if (d) {\n                  d.text = d.text || linkedObject.displayData(d);\n                  d.value = d.text;\n               }\n\n               return d;\n            });\n         } else if (data.id || data.uuid) {\n            selectedData = data;\n            selectedData.text =\n               selectedData.text || linkedObject.displayData(selectedData);\n            selectedData.value = selectedData.text;\n         } else if (typeof data == \"string\") {\n            selectedData = { text: data };\n         }\n      }\n\n      return selectedData;\n   }\n\n   columnHeader(options) {\n      options = options || {};\n      const config = super.columnHeader(options);\n      const field = this;\n      const App = field.AB._App;\n\n      if (options.filters == null) {\n         options.filters = {};\n      }\n\n      var multiselect = this.settings.linkType == \"many\";\n\n      config.editor = multiselect ? \"multiselect\" : \"combo\";\n      config.editFormat = (value) => {\n         return this.editFormat(value);\n      };\n      config.editParse = (value) => {\n         return this.editParse(value);\n      };\n      config.template = (row) => {\n         var selectedData = field.pullRelationValues(row);\n         var values = [];\n         values.push('<div class=\"badgeContainer\">');\n         if (\n            selectedData &&\n            Array.isArray(selectedData) &&\n            selectedData.length\n         ) {\n            selectedData.forEach((val) => {\n               values.push(\n                  `<div class='webix_multicombo_value'><span>${val.value}</span><!-- span data-uuid=\"${val.id}\" class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span --></div>`\n               );\n            });\n            if (selectedData.length > 1) {\n               values.push(\n                  `<span class=\"webix_badge selectivityBadge\">${selectedData.length}</span>`\n               );\n            }\n         } else if (selectedData.value) {\n            let clear = \"\";\n            if (options.editable) {\n               clear = `<span class=\"webix_multicombo_delete clear-combo-value\" role=\"button\" aria-label=\"Remove item\"></span>`;\n            }\n            values.push(\n               `<div class='webix_multicombo_value'>${clear}<span class=\"ellip\">${selectedData.value}</span></div>`\n            );\n         } else {\n            return \"\";\n         }\n         values.push(\"</div>\");\n         return values.join(\"\");\n      };\n\n      config.suggest = {\n         on: {\n            onBeforeShow: function () {\n               field.openOptions(this);\n            },\n         },\n\n         // Support partial matches\n         filter: ({ value }, search) =>\n            (value ?? \"\").toLowerCase().includes((search ?? \"\").toLowerCase()),\n      };\n\n      if (multiselect) {\n         config.suggest.view = \"checksuggest\";\n         config.suggest.button = true;\n      }\n\n      return config;\n   }\n\n   openOptions($suggest) {\n      // PREVENT repeatedly pull data:\n      // If not a x->1 relation and the options list was populated, then skip\n      const $list = $suggest.getList();\n      if (this.settings.linkViaType != \"one\") {\n         if (($list?.find({}) ?? []).length) return;\n      }\n\n      // Listen create/update events of the linked object, then clear data list to re-populate\n      [\"create\", \"update\"].forEach((key) => {\n         if (this[`_dc_${key}_event`]) return;\n\n         this[`_dc_${key}_event`] = this.AB.on(\n            `ab.datacollection.${key}`,\n            (res) => {\n               if (this.datasourceLink.id == res.objectId) $list.clearAll();\n            }\n         );\n      });\n\n      this.getAndPopulateOptions($suggest, null, this);\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n\n   //// NOTE: why do we pass in row, App, and node?  is this something we do in our external components?\n   ////       are these values present when this Object is instanciated? Can't we just pass these into the\n   ////       object constructor and have it internally track these things?\n   customEdit(row, /*App,*/ node) {\n      // var selectedData = this.pullRelationValues(row);\n      // this._selectedData = selectedData;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"connect\");\n   }\n\n   formComponentMobile() {\n      if (this.settings.linkType == \"many\") {\n         return super.formComponent(\"mobile-selectmultiple\");\n      }\n      return super.formComponent(\"mobile-selectsingle\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailconnect\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method getOptions\n    * show options list in selectivity\n    *\n    * @return {Promise}\n    */\n   async getOptions(whereClause, term, sort, editor) {\n      const theEditor = editor;\n\n      if (theEditor) {\n         // PREVENT: repeatly refresh data too often\n         if (theEditor._getOptionsThrottle) {\n            clearTimeout(theEditor._getOptionsThrottle);\n            // NOTE: remove variables that reference the Promise and Resolve to let GC cleans up.\n            // https://dev.to/xnimorz/js-promises-3-garbage-collection-and-memory-leaks-2oi7?fbclid=IwAR1wqgNz2KqchaM7eRkclR6YWHT01eva4y5IWpnaY0in6BrxmTAtpNCnEXM\n            delete theEditor._timeToPullData;\n            delete theEditor._getOptionsResolve;\n         }\n         theEditor._timeToPullData = await new Promise((resolve) => {\n            theEditor._getOptionsResolve = resolve;\n            theEditor._getOptionsThrottle = setTimeout(() => {\n               resolve(true);\n            }, 100);\n         });\n         if (!theEditor._timeToPullData) return;\n      }\n\n      return new Promise((resolve, reject) => {\n         let haveResolved = false;\n         // {bool}\n         // have we already passed back a result?\n\n         const respond = (options) => {\n            // filter the raw lookup with the provided search term\n            options = options.filter((item) => {\n               if (item.text.toLowerCase().includes(term.toLowerCase())) {\n                  return true;\n               }\n            });\n\n            if (!haveResolved) {\n               haveResolved = true;\n               resolve(options);\n            } else {\n               // if we have already resolved() then .emit() that we have\n               // updated \"option.data\".\n               this.emit(\"option.data\", options);\n            }\n         };\n\n         // Prepare Where clause\n\n         const where = this.AB.cloneDeep(whereClause || {});\n         sort = sort || [];\n\n         if (!where.glue) where.glue = \"and\";\n\n         if (!where.rules) where.rules = [];\n\n         term = term || \"\";\n\n         // check if linked object value is not define, should return a empty array\n         if (!this.settings.linkObject) return [];\n\n         // if options was cached\n         // if (this._options != null) return resolve(this._options);\n\n         const linkedObj = this.datasourceLink;\n\n         // System could not found the linked object - It may be deleted ?\n         if (linkedObj == null) throw new Error(\"No linked object\");\n\n         const linkedCol = this.fieldLink;\n\n         // System could not found the linked field - It may be deleted ?\n         if (linkedCol == null) throw new Error(\"No linked column\");\n\n         // Get linked object model\n         const linkedModel = linkedObj.model();\n\n         // M:1 - get data that's only empty relation value\n         if (\n            this.settings.linkType == \"many\" &&\n            this.settings.linkViaType == \"one\" &&\n            editor?.config?.showAllOptions != true\n         ) {\n            where.rules.push({\n               key: linkedCol.id,\n               rule: \"is_null\",\n            });\n            // where[linkedCol.columnName] = null;\n         }\n         // 1:1\n         else if (\n            this.settings.linkType == \"one\" &&\n            this.settings.linkViaType == \"one\" &&\n            editor?.config?.showAllOptions != true\n         ) {\n            // 1:1 - get data is not match link id that we have\n            if (this.settings.isSource == true) {\n               // NOTE: make sure \"haveNoRelation\" shows up as an operator\n               // the value \":0\" doesn't matter, we just need 'haveNoRelation' as an operator.\n               // newRule[linkedCol.id] = { 'haveNoRelation': 0 };\n               where.rules.push({\n                  key: linkedCol.id,\n                  rule: \"have_no_relation\",\n               });\n            }\n            // 1:1 - get data that's only empty relation value by query null value from link table\n            else {\n               where.rules.push({\n                  key: linkedCol.id,\n                  rule: \"is_null\",\n               });\n               // newRule[linkedCol.id] = 'null';\n               // where[linkedCol.id] = null;\n            }\n         }\n\n         const storageID = this.getStorageID(where);\n\n         Promise.resolve()\n            .then(async () => {\n               // Mar 23, 2023 disabling local storage of options because users\n               // were reporting not seeing the correct options list with either\n               // new, updated or deleted records that should or should not appear\n               return false;\n               // Get Local Storage unless xxx->one connected field\n               // if (this?.settings?.linkViaType != \"one\") {\n               //    // We store the .findAll() results locally and return that for a\n               //    // quick response:\n               //    return await this.AB.Storage.get(storageID);\n               // }\n            })\n            .then(async (storedOptions) => {\n               if (storedOptions) {\n                  // immediately respond with our stored options.\n                  this._options = storedOptions;\n                  return respond(this._options);\n               }\n               // Pull linked object data\n               let options = function () {\n                  return linkedModel.findAll({\n                     where: where,\n                     sort: sort,\n                     populate: false,\n                  });\n               };\n\n               // placeholder for selected options\n               let selected = function () {\n                  return new Promise((resolve, reject) => {\n                     // empty data array to pass to all()\n                     resolve({ data: [] });\n                  });\n               };\n\n               // we also need to get selected values of xxx->one connections\n               // if we are looking at a field in a form we look at linkViaOneValues\n               // if we are looking at a grid we are editing we look at theEditor?.config?.value\n               if (\n                  this?.settings?.linkViaType == \"one\" &&\n                  (this?.linkViaOneValues || theEditor?.config?.value)\n               ) {\n                  let values = \"\";\n                  // determine if we are looking in a grid or at a form field\n                  if (\n                     (theEditor?.config?.view == \"multicombo\" ||\n                        theEditor?.config?.view == \"combo\") &&\n                     this?.linkViaOneValues\n                  ) {\n                     values = this?.linkViaOneValues;\n                  } else if (theEditor?.config?.value) {\n                     if (Array.isArray(theEditor.config.value)) {\n                        values = theEditor?.config?.value.join();\n                     } else {\n                        values = theEditor?.config?.value;\n                     }\n                  }\n                  let whereRels = {};\n                  let sortRels = [];\n\n                  whereRels.glue = \"or\";\n                  whereRels.rules = [];\n\n                  values.split(\",\").forEach((v) => {\n                     whereRels.rules.push({\n                        key: \"uuid\",\n                        rule: \"equals\",\n                        value: v,\n                     });\n                  });\n                  selected = function () {\n                     return linkedModel.findAll({\n                        where: whereRels,\n                        sort: sortRels,\n                        populate: false,\n                     });\n                  };\n               }\n               try {\n                  const results = await Promise.all([options(), selected()]);\n\n                  // combine options and selected items and\n                  // put the selected options at the top of the list\n                  const result = results[1].data.concat(results[0].data);\n\n                  // store results in _options\n                  this._options = result.data || result || [];\n\n                  // populate display text\n                  (this._options || []).forEach((opt) => {\n                     opt.text = linkedObj.displayData(opt);\n                     opt.value = opt.text;\n                  });\n\n                  // 8/10/2023 - We are not actually using this (see line 338) - If we need to store\n                  // user data in local storage we should encrypt it.\n                  // cache options if not a xxx->one connection\n                  // if (this?.settings?.linkViaType != \"one\") {\n                  //    this.AB.Storage.set(storageID, this._options);\n                  // }\n                  return respond(this._options);\n               } catch (err) {\n                  this.AB.notify.developer(err, {\n                     context:\n                        \"ABFieldConnect:getOptions(): unable to retrieve options from server\",\n                     field: this.toObj(),\n                     where,\n                  });\n\n                  haveResolved = true;\n                  throw err;\n               }\n            });\n      });\n   }\n\n   getStorageID(where) {\n      return `${this.id}-${JSON.stringify(where)}`;\n   }\n\n   async clearStorage(where) {\n      const storageID = this.getStorageID(where);\n      await this.AB.Storage.set(storageID, null);\n   }\n\n   editFormat(value) {\n      if (!value) return \"\";\n      let vals = [];\n      if (Array.isArray(value)) {\n         value.forEach((val) => {\n            if (typeof val == \"object\") {\n               vals.push(val.id);\n            } else {\n               let itemObj = this.getItemFromVal(val);\n               if (itemObj && itemObj.id) {\n                  vals.push(itemObj.id);\n               } else {\n                  vals.push(val);\n               }\n            }\n         });\n      } else {\n         if (typeof value == \"object\") {\n            vals.push(value.id);\n         } else {\n            let itemObj = this.getItemFromVal(value);\n            if (itemObj && itemObj.id) {\n               vals.push(itemObj.id);\n            } else {\n               vals.push(value);\n            }\n         }\n      }\n      return vals.join();\n   }\n\n   editParse(value) {\n      var multiselect = this.settings.linkType == \"many\";\n      if (multiselect) {\n         if (!value) {\n            return [];\n         } else {\n            let returnVals = [];\n            let vals = value.split(\",\");\n            vals.forEach((val) => {\n               returnVals.push(this.getItemFromVal(val));\n            });\n            return returnVals;\n         }\n      } else {\n         let item = this.getItemFromVal(value);\n         return item;\n      }\n   }\n\n   getAndPopulateOptions(editor, options, field, form) {\n      if (!editor) return Promise.resolve([]);\n\n      const theEditor = editor;\n      // if editor has options and is xxx->one store the options on the field\n      if (\n         this?.settings?.linkViaType == \"one\" &&\n         theEditor.getValue() &&\n         !field.linkViaOneValues\n      ) {\n         field.linkViaOneValues = theEditor.getValue();\n      }\n\n      // if we are filtering based off another selectivity's value we\n      // need to do it on fetch each time because the value can change\n      // copy the filters so we don't add to them every time there is a change\n      const combineFilters = options?.filters\n         ? Object.assign({}, options.filters)\n         : { glue: \"and\", rules: [] };\n\n      if (options?.filterByConnectValues) {\n         const parseFilterByConnectValues = (conditions, values, depth = 0) => {\n            const valuesByDepth = values.filter((e) => e?.depth === depth);\n\n            return [\n               ...conditions.rules.map((e) => {\n                  if (e.glue)\n                     return {\n                        glue: e.glue,\n                        rules: parseFilterByConnectValues(e, values, depth + 1),\n                     };\n\n                  const value = valuesByDepth.filter(\n                     (ef) => ef.key === e.key && ef.value === e.value\n                  )[0];\n\n                  if (!value) return e;\n\n                  const $parentField = value?.filterValue?.config.id\n                     ? $$(value.filterValue.config.id)\n                     : null;\n\n                  if (!$parentField)\n                     throw Error(\n                        \"Some parent field's view components don't exist\"\n                     );\n\n                  const parentValue = value?.filterValue\n                     ? $parentField.getValue() ?? \"\"\n                     : \"\";\n\n                  let newVal = \"\";\n\n                  if (parentValue) {\n                     if (value.filterColumn) {\n                        const filterField = field.object.fieldByID(\n                           value.filterValue.config.dataFieldId\n                        );\n                        let valItem;\n\n                        // When options does not load yet, then pull select value from DC\n                        if (!filterField._options?.length) {\n                           const linkedField =\n                              (form.datacollection.datasource?.fields(\n                                 (f) =>\n                                    f.id == value.value ||\n                                    f.columnName == value.value\n                              ) ?? [])[0];\n\n                           if (linkedField) {\n                              // Get values from DC\n                              const formVals = form.datacollection?.getCursor();\n\n                              valItem =\n                                 formVals[linkedField.relationName()] ??\n                                 formVals[value.value];\n                           }\n                        } else {\n                           valItem = filterField.getItemFromVal(parentValue);\n                        }\n\n                        if (valItem) {\n                           newVal = valItem[value.filterColumn];\n                        } else {\n                           newVal = parentValue;\n                        }\n                     } else {\n                        newVal = parentValue;\n                     }\n                  }\n\n                  return {\n                     key: e.key,\n                     rule: \"equals\",\n                     value: newVal,\n                  };\n               }),\n            ];\n         };\n\n         combineFilters.rules = parseFilterByConnectValues(\n            combineFilters,\n            options.filterByConnectValues\n         );\n      }\n\n      if (!this.handlerOptionData) {\n         this.handlerOptionData = (data) => {\n            if (theEditor.$destructed) {\n               this.removeListener(\"option.data\", this.handlerOptionData);\n               return;\n            }\n            this.populateOptions(theEditor, data, field, form, true);\n         };\n      }\n\n      // try to make sure we don't continually add up listeners.\n      this.removeListener(\"option.data\", this.handlerOptionData).once(\n         \"option.data\",\n         this.handlerOptionData\n      );\n\n      return new Promise((resolve, reject) => {\n         this.getOptions(\n            combineFilters,\n            \"\",\n            options?.sort ?? \"\",\n            theEditor\n         ).then(async (data) => {\n            await this.populateOptions(theEditor, data, field, form, true);\n            resolve(data);\n         });\n      });\n   }\n\n   async populateOptions(theEditor, data, field, form, addCy) {\n      if (theEditor == null || theEditor.$destructed) return;\n\n      await this._sortByRecent(data);\n\n      theEditor.blockEvent();\n      theEditor.getList().clearAll();\n      theEditor.getList().define(\"data\", data);\n      if (addCy) {\n         this.populateOptionsDataCy(theEditor, field, form);\n      }\n      if (theEditor.getValue?.() && data?.length) {\n         let currVal = theEditor.getValue();\n         // in a multiselect environment, the current val can be an encoded string:\n         // \"id1,id2\".  Break this into an array:\n         if (field.linkType() == \"many\" && typeof currVal == \"string\") {\n            currVal = currVal.split(\",\");\n         }\n         if (!Array.isArray(currVal)) {\n            currVal = [currVal];\n         }\n\n         let selectedVals = [];\n         currVal.forEach((cVal) => {\n            // Check exists item\n            const isExists = data.some((d) => d.id == cVal);\n\n            if (isExists) {\n               selectedVals.push(cVal);\n            }\n\n            // if we couldn't find it by it's .id, then check to see\n            // if there is a custom index (.indexField  .indexField2)\n            // that does match.\n            // Select option item from custom index value\n            if (\n               !isExists &&\n               field.isConnection &&\n               (field.indexField || field.indexField2)\n            ) {\n               const selectedItem = data.filter(\n                  (d) =>\n                     d[field.indexField?.columnName ?? \"\"] == cVal ||\n                     d[field.indexField2?.columnName ?? \"\"] == cVal\n               )[0];\n\n               if (selectedItem) selectedVals.push(selectedItem.id);\n            }\n         });\n\n         theEditor.setValue(selectedVals);\n      }\n      theEditor.unblockEvent();\n   }\n\n   populateOptionsDataCy(theEditor, field, form) {\n      if (theEditor?.$destructed) return;\n\n      // Add data-cy attributes\n      if (theEditor?.getList) {\n         if (!theEditor.getPopup) return;\n         var popup = theEditor.getPopup();\n         if (!popup) return;\n         theEditor.getList().data.each((option) => {\n            if (!option) return;\n            var node = popup.$view.querySelector(\n               \"[webix_l_id='\" + option.id + \"']\"\n            );\n            if (!node) return;\n            node.setAttribute(\n               \"data-cy\",\n               `${field.key} options ${option.id} ${field.id} ${form?.id}`\n            );\n         });\n      }\n   }\n\n   getItemFromVal(val) {\n      let item;\n      let options = this._options || [];\n      if (options.length > 0) {\n         for (let i = 0; i < options.length; i++) {\n            if (\n               this.indexField &&\n               options[i][this.indexField.object.PK()] == val\n            ) {\n               item = options[i];\n               break;\n            } else if (\n               this.indexField2 &&\n               options[i][this.indexField2.object.PK()] == val\n            ) {\n               item = options[i];\n               break;\n            } else {\n               if (\n                  options[i].id == val ||\n                  options[i].value == val ||\n                  options[i][this.indexField?.columnName ?? \"\"] == val ||\n                  options[i][this.indexField2?.columnName ?? \"\"] == val\n               ) {\n                  item = options[i];\n                  break;\n               }\n            }\n         }\n         return item;\n      } else {\n         return \"\";\n      }\n   }\n\n   getValue(item) {\n      let val = item.getValue();\n      var multiselect = this.settings.linkType == \"many\";\n      if (multiselect) {\n         let vals = [];\n         if (!Array.isArray(val)) {\n            if (val) {\n               val = val.split(\",\");\n               val.forEach((record) => {\n                  // make sure we are returning the .uuid values and\n                  // not full {Record} values.\n                  vals.push(\n                     this.getRelationValue(item.getList().getItem(record), {\n                        forUpdate: true,\n                     })\n                  );\n               });\n            }\n         } else {\n            vals = val;\n         }\n\n         return vals;\n      } else {\n         if (val) {\n            // return just the .uuid and not the full {Record}\n            return this.getRelationValue(item.getList().getItem(val));\n         } else {\n            return \"\";\n         }\n      }\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n      // if (AB.isEmpty(rowData)) return; removed because sometimes we will\n      // want to set this to empty\n      let val = this.pullRelationValues(rowData);\n      // put in current values as options so we can display them before\n      // the rest of the options are fetched when field is clicked\n      if (item.getList && item.getList().count() == 0) {\n         if (this.settings.linkType !== \"one\" && !Array.isArray(val)) {\n            val = [val];\n         }\n\n         const $list = item.getList();\n\n         $list.define(\"data\", val);\n         $list.refresh();\n      }\n\n      // try to prevent form flicker:\n      // Only reset the value if the value changes:\n      let currVal = item.getValue();\n      let newVal = Array.isArray(val)\n         ? val\n              .map(\n                 (e) =>\n                    this.getRelationValue(e, { forUpdate: true }) ??\n                    e.id ??\n                    e.uuid ??\n                    e\n              )\n              .join(\",\")\n         : this.getRelationValue(val, { forUpdate: true }) ??\n           val.id ??\n           val.uuid ??\n           val;\n      if (currVal != newVal) {\n         item.setValue(newVal);\n      }\n   }\n\n   /**\n    * @method pullRecordRelationValues\n    *\n    * On the Web client, we want our returned relation values to be\n    * ready for Webix objects that require a .text and .value field.\n    *\n    * @param {*} row\n    * @return {array}\n    */\n   pullRecordRelationValues(record) {\n      var selectedData = [];\n\n      var data = record;\n      var linkedObject = this.datasourceLink;\n\n      if (data && linkedObject) {\n         // if this select value is array\n         if (Array.isArray(data)) {\n            selectedData = data.map(function (d) {\n               // display label in format\n               if (d) {\n                  d.text = d.text || linkedObject.displayData(d);\n                  d.value = d.text;\n               }\n\n               return d;\n            });\n         } else if (data.id || data.uuid) {\n            selectedData = data;\n            selectedData.text =\n               selectedData.text || linkedObject.displayData(selectedData);\n            selectedData.value = selectedData.text;\n         }\n      }\n\n      return selectedData;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      var linkField = this.fieldLink;\n      if (!linkField) {\n         this.warningsMessage(\n            `is unable to find linked field[${this.settings.linkColumn}]`,\n            {\n               linkColumn: this.settings.linkColumn,\n            }\n         );\n      }\n\n      let linkObj = this.datasourceLink;\n      if (!linkObj) {\n         this.warningsMessage(\n            `is unable to find linked object[${this.settings.linkObject}]`,\n            {\n               linkObject: this.settings.linkObject,\n            }\n         );\n      }\n   }\n\n   get _recentStorageId() {\n      return `${this.id}_recent_selected`;\n   }\n\n   /**\n    * @method saveSelect\n    * This function stores the user's selected option in local storage.\n    * It ensures that the user's recent selection is saved, allowing the system\n    * to retrieve it and provide a more personalized experience during future visits.\n    * @param {Array} selectedItems\n    * @return {Promise}\n    */\n   async saveSelect(selectedItems) {\n      if (!selectedItems) return;\n\n      if (!Array.isArray(selectedItems)) selectedItems = [selectedItems];\n\n      let recentSelected =\n         (await this.AB.Storage.get(this._recentStorageId)) ?? [];\n\n      selectedItems.forEach((item) => {\n         if (item == null) return;\n\n         const itemId = item.uuid ?? item.id ?? item;\n         recentSelected = recentSelected.filter((id) => id != itemId);\n         recentSelected.unshift(itemId);\n      });\n\n      return this.AB.Storage.set(this._recentStorageId, recentSelected);\n   }\n\n   /**\n    * @method _sortByRecent\n    * This function sorts the options based on the user's most recently selected item, which is retrieved from local storage.\n    *\n    * @param {Array} options\n    */\n   async _sortByRecent(options) {\n      if (!options?.length) return options;\n\n      const recentSelected = await this.AB.Storage.get(this._recentStorageId);\n      if (!recentSelected?.length) return options;\n\n      if (!Array.isArray(options)) options = [options];\n\n      options.sort((a, b) => {\n         const aId = a.uuid ?? a.id ?? a;\n         const bId = b.uuid ?? b.id ?? b;\n\n         return recentSelected.indexOf(bId) - recentSelected.indexOf(aId);\n      });\n   }\n};\n","const ABFieldDateCore = require(\"../../core/dataFields/ABFieldDateCore\");\n\nmodule.exports = class ABFieldDate extends ABFieldDateCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldDate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // if (this.settings.includeTime)\n      // config.editor = \"datetime\";\n      // else\n      config.editor = this.AB.Account?.language() == \"th\" ? \"thaidate\" : \"date\";\n\n      // allows entering characters in datepicker input, false by default\n      config.editable = true;\n\n      // NOTE: it seems that the default value is a string in ISO format.\n\n      //// NOTE: webix seems unable to parse ISO string into => date here.\n      // config.map = '(date)#'+this.columnName+'#';   // so don't use this.\n\n      config.template = (row) => {\n         if (row.$group) return row[this.columnName];\n\n         return this.format(row);\n      };\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      config.editFormat = (d) => {\n         // this routine needs to return a Date() object for the editor to work with.\n\n         if (d == \"\" || d == null) {\n            return \"\";\n         }\n\n         // else retun the actual ISO string => Date() value\n         return this.AB.rules.toDate(d);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"datepicker\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"datepicker\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"mobile-date\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-date\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   dateToString(dateFormat, dateData) {\n      return webix.Date.dateToStr(dateFormat)(dateData);\n   }\n\n   // Overwrite core.format to use webix locales.\n   format(rowData) {\n      if (!window.webixLocale) return super.format(rowData);\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n      const dateObj = this.AB.rules.toDate(d);\n\n      const dateFormat = this.settings.dateFormat;\n      // @const {int} dateFormat AB Date Format\n      // 1 - ignore, 2 - dd/mm/yyyy, 3 - mm/dd/yyyy, 4 - M D, yyyy, 5 - D M, yyyy\n\n      // Return longdate if option 4 or 5\n      if (dateFormat >= 4) {\n         return webix.i18n.longDateFormatStr(dateObj);\n      } else {\n         return webix.i18n.dateFormatStr(dateObj);\n      }\n   }\n};\n","const ABFieldDateTimeCore = require(\"../../core/dataFields/ABFieldDateTimeCore\");\n\nmodule.exports = class ABFieldDateTime extends ABFieldDateTimeCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldDate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // Ignore date\n      if (this.settings.dateFormat == 1) {\n         config.editor = \"time\";\n      } else {\n         config.editor =\n            this.AB.Account?._config?.languageCode == \"th\"\n               ? \"thaidatetime\"\n               : \"datetime\";\n      }\n\n      // allows entering characters in datepicker input, false by default\n      config.editable = true;\n\n      // NOTE: it seems that the default value is a string in ISO format.\n\n      //// NOTE: webix seems unable to parse ISO string into => date here.\n      // config.map = '(date)#'+this.columnName+'#';   // so don't use this.\n\n      config.template = (row) => {\n         if (row.$group) return row[this.columnName];\n\n         return this.format(row);\n      };\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      config.editFormat = (d) => {\n         // this routine needs to return a Date() object for the editor to work with.\n\n         if (d == \"\" || d == null) {\n            return \"\";\n         }\n\n         // else retun the actual ISO string => Date() value\n         return this.AB.rules.toDate(d);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"datepicker\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"datepicker\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"mobile-datetime\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-datetime\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   // Overwrite core.format to use webix locales.\n   format(rowData) {\n      if (!window.webixLocale) return super.format(rowData);\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n      const dateObj = this.AB.rules.toDate(d);\n\n      const dateFormat = this.settings.dateFormat;\n      // @const {int} dateFormat AB Date Format\n      // 1 - ignore, 2 - dd/mm/yyyy, 3 - mm/dd/yyyy, 4 - M D, yyyy, 5 - D M, yyyy\n      const timeToStr = webix.Date.dateToStr(this.getTimeFormat());\n\n      if (dateFormat >= 4) {\n         return `${webix.i18n.longDateFormatStr(dateObj)} ${timeToStr(\n            dateObj\n         )}`;\n      } else {\n         return `${webix.i18n.dateFormatStr(dateObj)} ${timeToStr(dateObj)}`;\n      }\n   }\n};\n","const ABFieldEmailCore = require(\"../../core/dataFields/ABFieldEmailCore\");\n\nmodule.exports = class ABFieldEmail extends ABFieldEmailCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldBoolean\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\";\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-email\",\n            settings: {},\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldFileCore = require(\"../../core/dataFields/ABFieldFileCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldFile extends ABFieldFileCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   /**\n    * @function destroy\n    * On a destroy operation, ask if the user wants to keep the related file.\n    */\n   async destroy() {\n      return new Promise((resolve, reject) => {\n         // verify we have been .save()d before:\n         if (!this.id) {\n            resolve();\n            return;\n         }\n\n         // Ask the user what to do about the existing file:\n         webix.confirm({\n            title: L(\"Keep Files?\"),\n            message: L(\"Do you want to keep the files referenced by {0}?\", [\n               this.label,\n            ]),\n            callback: async (result) => {\n               // update this setting so the server can respond correctly in\n               // ABFieldFile.migrateDrop()\n               this.settings.removeExistingData = result ? 0 : 1;\n\n               try {\n                  await this.save();\n\n                  // TODO: a reminder that you still got alot on the server to do!\n                  webix.alert({\n                     title: \"!! TODO !!\",\n                     text: \"Tell a Developer to actually pay attention to this!\",\n                  });\n\n                  // now the default .destroy()\n                  await super.destroy();\n\n                  resolve();\n               } catch (err) {\n                  reject(err);\n               }\n            },\n         });\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldFile\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n\n      config.editor = false;\n\n      const editable = options.editable;\n\n      // populate our default template:\n      config.template = (obj) => {\n         if (obj.$group) return this.dataValue(obj);\n\n         const fileDiv = [\n            '<div class=\"ab-file-data-field\" style=\"float: left;\">',\n            '<div class=\"webix_view ab-file-holder\">',\n            '<div class=\"webix_template\">',\n            this.fileTemplate(obj, editable),\n            \"</div>\",\n            \"</div>\",\n            \"</div>\",\n         ].join(\"\");\n\n         return fileDiv;\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n      options = options || {};\n\n      let typesList = [];\n      let maximumSize = 0;\n\n      if (this.settings.limitFileType && this.settings.fileType) {\n         typesList = this.settings.fileType.split(\",\");\n      }\n\n      if (this.settings.limitFileSize && this.settings.fileSize) {\n         maximumSize = this.settings.fileSize;\n      }\n\n      // \t\t// safety check:\n      // \t\t// webix seems to crash if you specify a .container that doesn't exists:\n      // \t\t// Note: when the template is first created, we don't have App.unique()\n      const parentContainer = node.querySelector(\".ab-file-holder\");\n      if (parentContainer) {\n         parentContainer.innerHTML = \"\";\n         // parentContainer.id = idBase;\t// change it to the unique one.\n\n         // \t\t\t// use a webix component for displaying the content.\n         // \t\t\t// do this so I can use the progress spinner\n\n         const webixContainer = webix.ui({\n            view: \"template\",\n            container: parentContainer,\n\n            template: this.fileTemplate(row, options.editable),\n\n            borderless: true,\n            width: 160,\n            height: 60,\n         });\n         webix.extend(webixContainer, webix.ProgressBar);\n\n         // \t\t\t////\n         // \t\t\t//// Prepare the Uploader\n         // \t\t\t////\n\n         if (!options.editable) {\n            const domNode = parentContainer.querySelector(\".delete-image\");\n            if (domNode) domNode.style.display = \"none\";\n\n            return;\n         }\n\n         const url = this.urlUpload(true);\n\n         const uploader = webix.ui({\n            view: \"uploader\",\n            apiOnly: true,\n            upload: url,\n            inputName: \"file\",\n            multiple: false,\n            on: {\n               // when a file is added to the uploader\n               onBeforeFileAdd: function (item) {\n                  node.classList.remove(\"webix_invalid\");\n                  node.classList.remove(\"webix_invalid_cell\");\n\n                  // verify file type\n                  const acceptableTypes = typesList;\n                  if (acceptableTypes && acceptableTypes != \"\") {\n                     const type = item.type.toLowerCase();\n                     if (acceptableTypes.indexOf(type) == -1) {\n                        webix.message(\n                           L(\"Only [{0}] files are supported\", [\n                              acceptableTypes.join(\", \"),\n                           ])\n                        );\n                        return false;\n                     }\n                  }\n\n                  //verify file size\n                  //Convert to MegaBytes\n                  if (maximumSize > 0) {\n                     const acceptableSizes = maximumSize * 1000000;\n                     if (item.size > acceptableSizes) {\n                        webix.message(\n                           L(\"Maximum file size is {0}MB\", [maximumSize])\n                        );\n                        return false;\n                     }\n                  }\n\n                  // start progress indicator\n                  webixContainer.showProgress({\n                     type: \"icon\",\n                     delay: 2000,\n                  });\n               },\n\n               // when upload is complete:\n               onFileUpload: async (item, response) => {\n                  webixContainer.hideProgress();\n                  // this.showFile(idBase, response.data.uuid);\n\n                  const values = {};\n                  values[this.columnName] = {};\n                  values[this.columnName].uuid = response.data.uuid;\n                  values[this.columnName].filename = item.name;\n\n                  // update just this value on our current object.model\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if ($$(node) && $$(node).updateItem)\n                           $$(node).updateItem(row.id, values);\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABFieldFile.onFileUpload(): Error updating our entry.\",\n                           row: row,\n                           values: values,\n                        });\n                     }\n                  }\n\n                  // update value in the form component\n                  this.setValue($$(node), values);\n               },\n\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  this.AB.notify.developer(new Error(\"Error loading file\"), {\n                     message:\n                        \"ABFieldFile:onFileUploadError(): Error loading file\",\n                     response,\n                  });\n                  webixContainer.hideProgress();\n               },\n            },\n         });\n         uploader.addDropZone(webixContainer.$view);\n\n         // store upload id into html element (it will be used in .customEdit)\n         node.dataset[\"uploaderId\"] = uploader.config.id;\n\n         // open file upload dialog when's click\n         node.addEventListener(\"click\", (e) => {\n            if (e.target.className.indexOf(\"delete-image\") > -1) {\n               this.deleteFile = true;\n            }\n         });\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node) {\n      if (this.deleteFile == true) {\n         // remove the property because it is only needed to prevent the file dialog from showing\n         delete this.deleteFile;\n\n         // Ask the user if they really want to delete the photo\n         webix.confirm({\n            title: \"\",\n            text: L(\"Are you sure you want to remove this file?\"),\n            callback: async (result) => {\n               const confirmDelete = result ? 1 : 0;\n               if (confirmDelete) {\n                  // update just this value on our current object.model\n                  const values = {};\n\n                  values[this.columnName] = {};\n\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if ($$(node) && $$(node).updateItem)\n                           $$(node).updateItem(row.id, values);\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"ABFieldFile:customEdit(): Error updating our entry.\",\n                           row: row,\n                           values: values,\n                        });\n                     }\n                  }\n                  // update value in the form component\n                  else {\n                     this.setValue($$(node), values);\n                  }\n               }\n            },\n         });\n      } else {\n         const rowData = this.dataValue(row);\n         if (!rowData || !rowData.uuid) {\n            const uploaderId = node.dataset[\"uploaderId\"],\n               uploader = $$(uploaderId);\n\n            if (uploader && uploader.fileDialog)\n               uploader.fileDialog({ rowid: row.id });\n         }\n      }\n\n      return false;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldcustom\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-file\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailcustom\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   //File Template\n\n   fileTemplate(obj, editable) {\n      let iconDisplay = \"\";\n      let fileDisplay = \"display:none;\";\n      let fileURL = \"\";\n\n      let value = \"\";\n      let name = \"\";\n\n      const rowData = this.dataValue(obj);\n      if (rowData) {\n         value = rowData.uuid;\n         name = rowData.filename;\n      }\n\n      if (value && name) {\n         iconDisplay = \"display:none;\";\n         fileDisplay = \"\";\n         fileURL = \"/file/\" + value;\n      }\n\n      const html = [\n         `<div class=\"file-data-field-icon\" style=\"text-align: center; height: inherit; display: table-cell; vertical-align: middle; border: 2px dotted #CCC; background: #FFF; border-radius: 10px; font-size: 11px; line-height: 13px; padding: 0 10px; ${iconDisplay}\"><i class=\"fa fa-file fa-2x\" style=\"opacity: 0.6; font-size: 32px; margin-top: 3px; margin-bottom: 5px;\"></i>${\n            editable ? `<br/>${L(\"Drag and drop or click here\")}` : \"\"\n         }</div>`,\n         `<div class=\"file-data-field-name\" style=\" width:100%; height:100%; position:relative; \"><a target=\"_blank\" href=\"${fileURL}\">${\n            name || \"\"\n         }</a>${\n            editable\n               ? `<a style=\"${fileDisplay}\" class=\"ab-delete-photo\" href=\"javascript:void(0);\"><i class=\"fa fa-times delete-image\"></i></a>`\n               : \"\"\n         }</div>`,\n      ].join(\"\");\n\n      return html;\n   }\n\n   getValue(item, rowData) {\n      const file = item.$view.querySelector(\".file-data-field-name\");\n      const fileLink = file.querySelector(\"a\");\n\n      return {\n         uuid: file.getAttribute(\"file-uuid\"),\n         filename: fileLink.innerHTML,\n      };\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      const domNode = item.$view;\n      if (!domNode) return;\n\n      let val = null;\n      if (rowData) {\n         val = this.dataValue(rowData);\n\n         // if (val == null) {\n         // \t// assume they just sent us a single value\n         // \tval = rowData;\n         // }\n      }\n\n      const fileicon = domNode.querySelector(\".file-data-field-icon\");\n      if (fileicon) fileicon.style.display = val && val.uuid ? \"none\" : \"block\";\n\n      const file = domNode.querySelector(\".file-data-field-name\");\n      if (file) {\n         const fileDeleteIcon = file.querySelector(\".ab-delete-photo\");\n         if (fileDeleteIcon)\n            fileDeleteIcon.style.display = val && val.uuid ? \"block\" : \"none\";\n\n         file.style.display = val && val.uuid ? \"block\" : \"none\";\n         if (val && val.uuid) file.setAttribute(\"file-uuid\", val.uuid);\n         else file.removeAttribute(\"file-uuid\");\n\n         const fileLink = file.querySelector(\"a\");\n         const fileURL = \"/file/\" + (val ? val.uuid : \"\");\n         fileLink.href = fileURL;\n         fileLink.innerHTML = val ? val.filename : \"\";\n      }\n   }\n\n   /**\n    * @method urlUpload()\n    * return the url for uploading a file.\n    * When used in a webix widget, the response is different than our normal\n    * API, so we can pass in a param to indicate a response compatible with\n    * webix.\n    * @param {bool} isWebix\n    *        Is this url being used by a webix component?\n    * @return {string}\n    */\n   urlUpload(isWebix = true) {\n      return `/file/upload/${this.object.id}/${this.id}/${isWebix ? \"1\" : \"0\"}`;\n   }\n\n   /**\n    * @method urlFile\n    * return the url to use to reference the file by it's id.\n    * @param {string} id uuid reference of this file.\n    * @return {string}\n    */\n   urlFile(id) {\n      return `/file/${id}`;\n   }\n};\n","const ABFieldFormulaCore = require(\"../../core/dataFields/ABFieldFormulaCore\");\n\nmodule.exports = class ABFieldFormula extends ABFieldFormulaCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldFormula\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         if (rowData.$group) return rowData[this.columnName];\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // not support in the form widget\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldImageCore = require(\"../../core/dataFields/ABFieldImageCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldImage extends ABFieldImageCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @function destroy\n    * On a destroy operation, ask if the user wants to keep the related images.\n    */\n   async destroy() {\n      return new Promise((resolve, reject) => {\n         // verify we have been .save()d before:\n         if (this.id) {\n            // Ask the user what to do about the existing images:\n            webix.confirm({\n               title: L(\"Keep Images?\"),\n               message: L(\"Do you want to keep the images referenced by {0}?\", [\n                  this.label,\n               ]),\n               callback: async (result) => {\n                  // update this setting so the server can respond correctly in\n                  // ABFieldImage.migrateDrop()\n                  this.settings.removeExistingData = result ? 0 : 1;\n\n                  try {\n                     await this.save();\n\n                     // TODO: a reminder that you still got alot on the server to do!\n                     webix.alert({\n                        title: \"!! TODO !!\",\n                        text: \"ABFieldImage.destroy(): Tell a Developer to actually pay attention to this!\",\n                     });\n\n                     await super.destroy();\n\n                     resolve();\n                  } catch (err) {\n                     reject(err);\n                  }\n               },\n            });\n         } else {\n            resolve(); // nothing to do really\n         }\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   idCustomContainer(obj, formId) {\n      // if formId is passed the field is in a form view not a grid and\n      // we won't have the obj and each time this\n      // field is in a form it will conflict with the last one rendered\n      if (formId) {\n         return `${this.columnName.replace(/ /g, \"_\")}-${formId}-image`;\n      } else {\n         return `${this.columnName.replace(/ /g, \"_\")}-${obj.id}-image`;\n      }\n   }\n\n   // return the grid column header definition for this instance of ABFieldImage\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n\n      config.editor = false; // 'text';  // '[edit_type]'   for your unique situation\n      // config.sort   = 'string' // '[sort_type]'   for your unique situation\n\n      let containerHeight = \"100%\";\n      let imageHeight = \"100%\";\n      let width = \"100%\";\n      let imageSrcHeight = \"100%\";\n      if (field.settings.useWidth) {\n         config.width = field.settings.imageWidth || 100;\n         const heightVal =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight + 20\n               : 80;\n         containerHeight = `${heightVal}px`;\n         width = `${field.settings.imageWidth || 100}px`;\n         imageHeight =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight\n               : 80;\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight\n               : 60;\n         imageSrcHeight = `${imageSrcHeight}px`;\n      } else if (options.width) {\n         config.width = options.width || 100;\n         width = `${options.width || 100}px`;\n         imageHeight = options.width;\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight = options.width;\n         imageSrcHeight = `${imageSrcHeight}px`;\n      }\n      if (\n         field.settings.useHeight &&\n         field.settings.imageHeight &&\n         field.settings.imageHeight != \"NaN\"\n      ) {\n         config.height = field.settings.imageHeight || 0;\n         containerHeight = parseInt(config.height) + 20;\n         containerHeight = `${containerHeight}px`;\n         imageHeight = parseInt(config.height);\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight = parseInt(config.height);\n         imageSrcHeight = `${imageSrcHeight}px`;\n      }\n\n      const editable = options.editable;\n\n      // populate our default template:\n      // debugger;\n      config.template = (obj) => {\n         if (obj.$group) return obj[this.columnName];\n\n         const widthStyle = `width: ${width}; height: ${containerHeight}`;\n\n         const imageStyle = `width: ${width}; height: ${imageHeight}`;\n\n         const imgDiv = [\n            `<div class=\"ab-image-data-field\" style=\"float: left; ${widthStyle}\">`,\n            `<div class=\"webix_view ab-image-holder\" style=\"${imageStyle}\">`,\n            '<div class=\"webix_template\">',\n            this.imageTemplate(obj, {\n               editable: editable,\n               height: imageSrcHeight,\n               width: width,\n            }),\n            \"</div>\",\n            \"</div>\",\n            \"</div>\",\n         ].join(\"\");\n\n         return imgDiv;\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    * @param {object} options - {\n    * \t\teditable {Bool}   where or not this field is currently editable\n    * \t\tformId {string}   the id of the presenting form if any\n    * }\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      // safety check:\n      // webix seems to crash if you specify a .container that doesn't exists:\n      // Note: when the template is first created, we don't have App.unique()\n      const parentContainer = node.querySelector(\".ab-image-holder\");\n      if (parentContainer) {\n         parentContainer.innerHTML = \"\";\n         // parentContainer.id = idBase;\t// change it to the unique one.\n\n         let imgHeight = 0;\n         if (this.settings.useHeight) {\n            imgHeight = parseInt(this.settings.imageHeight) || imgHeight;\n         }\n\n         let imgWidth = 0;\n         if (this.settings.useWidth) {\n            imgWidth = parseInt(this.settings.imageWidth) || imgWidth;\n         }\n\n         if (options.height) imgHeight = options.height;\n\n         if (options.width) imgWidth = options.width;\n         //// TODO: actually pay attention to the height and width when\n         //// displaying the images.\n\n         // use a webix component for displaying the content.\n         // do this so I can use the progress spinner\n         const webixContainer = webix.ui({\n            view: \"template\",\n            css: \"ab-image-holder\",\n            // id: ids.container,\n            container: parentContainer,\n\n            template: this.imageTemplate(row, {\n               editable: options.editable,\n               height: imgHeight ? imgHeight + \"px\" : 0,\n               width: imgWidth ? imgWidth + \"px\" : 0,\n            }),\n\n            borderless: true,\n            height: imgHeight,\n            width: imgWidth,\n         });\n         webix.extend(webixContainer, webix.ProgressBar);\n\n         ////\n         //// Prepare the Uploader\n         ////\n\n         if (!options.editable) {\n            const domNode = parentContainer.querySelector(\".delete-image\");\n            if (domNode) domNode.style.display = \"none\";\n            return;\n         }\n\n         const url = this.urlUpload();\n\n         const uploader = webix.ui({\n            view: \"uploader\",\n            // id:ids.uploader,\n            apiOnly: true,\n            upload: url,\n            inputName: \"file\",\n            multiple: false,\n            status: (f) => {\n               if (f.percent) {\n                  webixContainer.hideProgress();\n                  webixContainer.showProgress({\n                     type: \"top\",\n                     position: f.percent / 100,\n                  });\n               }\n            },\n            // formData:{\n            // \tappKey:application.name,\n            // \tpermission:actionKey,\n            // \tisWebix:true,\n            // \timageParam:'upload'\n            // },\n            on: {\n               // when a file is added to the uploader\n               onBeforeFileAdd: (item) => {\n                  node.classList.remove(\"webix_invalid\");\n                  node.classList.remove(\"webix_invalid_cell\");\n\n                  // verify file type\n                  const acceptableTypes = [\n                     \"jpg\",\n                     \"jpeg\",\n                     \"bmp\",\n                     \"png\",\n                     \"gif\",\n                     \"webp\",\n                  ];\n                  const type = item.type.toLowerCase();\n                  if (acceptableTypes.indexOf(type) == -1) {\n                     webix.message(\n                        L(\"Only [{0}] images are supported\", [\n                           acceptableTypes.join(\", \"),\n                        ])\n                     );\n                     return false;\n                  }\n                  this.uploadInProgress = true;\n                  // Display the image from local file\n                  var reader = new FileReader();\n                  reader.onload = (e) => {\n                     this.showImage(null, node, e.target.result);\n                     webixContainer.showProgress({\n                        type: \"top\",\n                        delay: 2000,\n                     });\n                  };\n                  reader.readAsDataURL(item.file);\n               },\n\n               // when upload is complete:\n               onFileUpload: async (item, response) => {\n                  webixContainer.hideProgress();\n                  this.showImage(response.data.uuid, node);\n                  this.uploadInProgress = false;\n\n                  const values = {};\n                  values[this.columnName] = response.data.uuid;\n\n                  // update just this value on our current object.model\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if (\n                           $$(node) &&\n                           $$(node).getItem &&\n                           $$(node).getItem(row.id)\n                        ) {\n                           $$(node).updateItem(row.id, values);\n                        } else {\n                           // if you scroll the table the connection to the datatable is lost so we need to find it again\n                           const dataTable =\n                              document.querySelector(\".webix_dtable\");\n                           if ($$(dataTable) && $$(dataTable).getItem(row.id))\n                              $$(dataTable).updateItem(row.id, values);\n                        }\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABFieldImage.onFileUpload(): model.update(): error updating our entry\",\n                           field: this.toObj(),\n                           row,\n                           values,\n                        });\n                     }\n                  }\n\n                  // update value in the form component\n                  this.setValue($$(node), values);\n               },\n\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  this.AB.notify.developer(new Error(\"Error uploading image\"), {\n                     context: \"ABFieldImage. uploader. onFileUploadError():\",\n                     field: this.toObj(),\n                     response,\n                  });\n                  webixContainer.hideProgress();\n               },\n            },\n         });\n         uploader.addDropZone(webixContainer.$view);\n\n         // store upload id into html element (it will be used in .customEdit)\n         node.dataset[\"uploaderId\"] = uploader.config.id;\n\n         // if we are working in a datagrid we need to add a click event to\n         // check if the user is clicking on the delete button\n         if (node.className == \"webix_cell\") {\n            node.addEventListener(\"click\", (e) => {\n               if (e.target.className.indexOf(\"delete-image\") > -1) {\n                  this.deleteImage = true;\n               }\n            });\n         }\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node, id, evt) {\n      if (\n         (evt && evt.target.className.indexOf(\"delete-image\") > -1) ||\n         this.deleteImage\n      ) {\n         delete this.deleteImage;\n         if (!row.removeDefaultImage) {\n            row.removeDefaultImage = [];\n         }\n         row.removeDefaultImage[this.columnName] = true;\n\n         // Ask the user if they really want to delete the photo\n         webix.confirm({\n            title: L(\"Are you sure you want to remove this image?\"),\n            callback: async (result) => {\n               const confirmDelete = result ? 1 : 0;\n               if (confirmDelete) {\n                  // update just this value on our current object.model\n                  const values = {};\n                  values[this.columnName] = \"\"; // removing the reference to the image here\n\n                  try {\n                     await this.object.model().update(row.id, values);\n\n                     // update the client side data object as well so other data changes won't cause this save to be reverted\n                     if ($$(node) && $$(node).updateItem)\n                        $$(node).updateItem(row.id, values);\n\n                     // update value in the form component\n                     this.setValue($$(node), values);\n                  } catch (err) {\n                     node.classList.add(\"webix_invalid\");\n                     node.classList.add(\"webix_invalid_cell\");\n\n                     this.AB.notify.developer(err, {\n                        context:\n                           \"ABFieldImage: customEdit(): Error updating our entry\",\n                        field: this.toObj(),\n                        row: row,\n                        values: values,\n                     });\n                  }\n               }\n            },\n         });\n      } else {\n         const uploaderId = node.dataset[\"uploaderId\"],\n            uploader = $$(uploaderId);\n\n         if (uploader && uploader.fileDialog)\n            uploader.fileDialog({ rowid: row.id });\n      }\n\n      return false;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldcustom\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-image\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailimage\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   imageTemplate(obj, options) {\n      options = options || {};\n      options.height = options.height || \"100%\";\n      options.width = options.width || \"100%\";\n\n      // deault view is icon:\n      let iconDisplay = \"\";\n      let imageDisplay = \"display:none;\";\n      let imageURL = \"\";\n\n      let value = \"\";\n      let isRemoveDefaultImage = false;\n      if (obj[this.columnName]) {\n         value = obj[this.columnName];\n      }\n      if (obj.removeDefaultImage) {\n         if (obj.removeDefaultImage[this.columnName]) {\n            isRemoveDefaultImage = obj.removeDefaultImage[this.columnName];\n         }\n      }\n\n      if (value) {\n         iconDisplay = \"display:none;\";\n         imageDisplay = \"\";\n         imageURL = `background-image:url('${this.urlImage(value)}');`;\n      } else {\n         if (this.settings.useDefaultImage && !isRemoveDefaultImage) {\n            iconDisplay = \"display:none;\";\n            imageDisplay = \"\";\n            imageURL = `background-image:url('${this.urlImage(\n               this.settings.defaultImageUrl\n            )}');`;\n         }\n      }\n\n      let html = [\n         `<div class=\"image-data-field-icon\" style=\"${iconDisplay}\">#drag#</div>` +\n            `<div class=\"image-data-field-image\" style=\"${imageDisplay} height:${options.height}; ${imageURL}\">#remove#</div>`,\n      ].join(\"\");\n\n      html = html.replace(\n         \"#drag#\",\n         options.editable\n            ? `<div>${L(\"Drag and drop or click here\")}</div>`\n            : \"\"\n      );\n      html = html.replace(\n         \"#remove#\",\n         options.editable\n            ? `<a style=\"${imageDisplay}\" class=\"ab-delete-photo\" href=\"javascript:void(0);\"><i class=\"fa fa-times delete-image\"></i></a>`\n            : \"\"\n      );\n\n      return html;\n   }\n\n   showImage(uuid, node, url) {\n      const parentContainer = node.querySelector(\".ab-image-holder\");\n      if (parentContainer) {\n         parentContainer.querySelector(\".image-data-field-icon\").style.display =\n            \"none\";\n         const image = parentContainer.querySelector(\".image-data-field-image\");\n         image.style.display = \"\";\n         image.style.backgroundImage = `url('${url ?? this.urlImage(uuid)}')`;\n         image.setAttribute(\"image-uuid\", uuid);\n      }\n   }\n\n   getValue(item, rowData) {\n      const image = item.$view.querySelector(\".image-data-field-image\");\n      return image.getAttribute(\"image-uuid\");\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      const domNode = item.$view;\n      if (!domNode) return;\n\n      let val = null;\n      if (rowData) {\n         val = this.dataValue(rowData);\n\n         // if (val == null) {\n         // \t// assume they just sent us a single value\n         // \tval = rowData;\n         // }\n      }\n\n      const imageIcon = domNode.querySelector(\".image-data-field-icon\");\n      if (imageIcon) imageIcon.style.display = val ? \"none\" : \"\";\n\n      const image = domNode.querySelector(\".image-data-field-image\");\n      if (image) {\n         const imageDeleteIcon = image.querySelector(\".ab-delete-photo\");\n         if (imageDeleteIcon)\n            imageDeleteIcon.style.display = val ? \"block\" : \"none\";\n\n         image.style.display = val ? \"block\" : \"none\";\n\n         if (val) {\n            image.style.backgroundImage = `url('${this.urlImage(val)}')`;\n            image.setAttribute(\"image-uuid\", val);\n         } else {\n            image.removeAttribute(\"image-uuid\");\n         }\n      }\n   }\n\n   /**\n    * @method toBase64\n    *\n    * @param {Object} rowData\n    *\n    * @return {Promise} - {\n    * \t\tdata: string,\n    * \t\twidth: number,\n    * \t\theight: number\n    * }\n    */\n   toBase64(rowData) {\n      return new Promise((resolve, reject) => {\n         if (!rowData[this.columnName]) return resolve(null);\n\n         const img = new Image();\n         img.crossOrigin = \"Anonymous\";\n         img.onerror = function (err) {\n            reject(err);\n         };\n         img.onload = function () {\n            const canvas = document.createElement(\"canvas\");\n            canvas.width = img.width;\n            canvas.height = img.height;\n            const ctx = canvas.getContext(\"2d\");\n            ctx.drawImage(img, 0, 0);\n            const dataURL = canvas.toDataURL();\n            const imageData = {\n               data: dataURL,\n               width: img.width,\n               height: img.height,\n            };\n            resolve(imageData);\n         };\n\n         img.src = this.urlImage(rowData[this.columnName]);\n      });\n   }\n\n   /**\n    * @method urlImage()\n    * return the url to use to reference the image by it's id.\n    * @param {string} id\n    *        the file.uuid reference of this image.\n    * @return {string}\n    */\n   urlImage(id) {\n      return `/file/${id}`;\n   }\n\n   /**\n    * @method urlUpload()\n    * return the url for uploading a file.\n    * When used in a webix widget, the response is different than our normal\n    * API, so we can pass in a param to indicate a response compatible with\n    * webix.\n    * @param {bool} isWebix\n    *        Is this url being used by a webix component?\n    * @return {string}\n    */\n   urlUpload(isWebix = true) {\n      return `/file/upload/${this.object.id}/${this.id}/${isWebix ? \"1\" : \"0\"}`;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n      if (this.uploadInProgress)\n         validator.addError(this.columnName, L(\"Image still uploading\"));\n   }\n\n   rotateLeft(imgFile) {\n      return this.AB.Network.put({\n         url: `/image/rotate/${imgFile}?direction=left`,\n      });\n   }\n\n   rotateRight(imgFile) {\n      return this.AB.Network.put({\n         url: `/image/rotate/${imgFile}?direction=right`,\n      });\n   }\n};\n","const ABFieldJsonCore = require(\"../../core/dataFields/ABFieldJsonCore\");\n\nmodule.exports = class ABFieldJson extends ABFieldJsonCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldJson\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // config.editor = null; // read only for now\n      config.editor = \"text\";\n      config.css = \"textCell\";\n\n      // when called by ABViewFormCustom, will need a .template() fn.\n      // currently we don't need to return anything so ...\n      config.template = () => \"\";\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // read-only for now\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"json\",\n            settings: {\n               type: \"string\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n      if (item) {\n         item.config.value = rowData[this.columnName];\n      }\n   }\n\n   /**\n    * @method formCleanData()\n    * Review the data a form is about to submit and change/remove it as\n    * appropriate.\n    * @param {obj} rowData\n    *        The {data} a form has collected and is about to save.\n    * @return {undefined}\n    */\n   formCleanData(rowData) {\n      let val = rowData[this.columnName];\n      if (val === \"\") {\n         // \"\" isn't a valid json value, so just remove the data and\n         // let the DB handle the default value.\n         delete rowData[this.columnName];\n      }\n   }\n};\n","const ABFieldListCore = require(\"../../core/dataFields/ABFieldListCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldList extends ABFieldListCore {\n   constructor(values, object) {\n      super(values, object);\n\n      // this._Selectivity = new ABFieldSelectivity(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   save() {\n      return super.save().then(() => {\n         // Now we want to clear out any entries that had values == to item removed from our list:\n         if (this.pendingDeletions.length) {\n            const model = this.object.model();\n\n            if (this.settings.isMultiple == true) {\n               // find all the entries that have one of the deleted values:\n               // use Promise to prevent issues with data being loaded before it is deleted on client side\n               return new Promise((resolve, reject) => {\n                  let numDone = 0;\n                  let numToDo = 0;\n\n                  model\n                     .findAll({})\n                     .then((list) => {\n                        list = list.data || list;\n\n                        // for each list item\n                        list.forEach((item) => {\n                           if (Array.isArray(item[this.columnName])) {\n                              // get fields not in pendingDeletions\n                              let remainingFields = item[\n                                 this.columnName\n                              ].filter((i) => {\n                                 return (\n                                    this.pendingDeletions.indexOf(i.id) == -1\n                                 );\n                              });\n\n                              if (\n                                 remainingFields.length !=\n                                 item[this.columnName].length\n                              ) {\n                                 numToDo++;\n\n                                 // update value to new field list\n                                 if (remainingFields.length == 0) {\n                                    remainingFields = \"\";\n                                 }\n                                 const value = {};\n                                 value[this.columnName] = remainingFields;\n                                 model.update(item.id, value).then(() => {\n                                    // if ($$(node) && $$(node).updateItem)\n                                    //    $$(node).updateItem(value.id, value);\n                                    numDone++;\n                                    if (numDone >= numToDo) {\n                                       resolve();\n                                    }\n                                 });\n                              }\n                           }\n                        });\n                        if (numToDo == 0) {\n                           resolve();\n                        }\n                     })\n                     .catch(reject);\n               });\n            } else {\n               // find all the entries that have one of the deleted values:\n               const where = {};\n               where[this.columnName] = this.pendingDeletions;\n               return new Promise((resolve, reject) => {\n                  let numDone = 0;\n\n                  model\n                     .findAll(where)\n                     .then((list) => {\n                        // make sure we just work with the { data:[] } that was returned\n                        list = list.data || list;\n\n                        // for each one, set the value to ''\n                        // NOTE: jQuery ajax routines filter out null values, so we can't\n                        // set them to null. :(\n                        // const numDone = 0;\n                        const value = {};\n                        value[this.columnName] = \"\";\n\n                        list.forEach((item) => {\n                           model.update(item.id, value).then(() => {\n                              numDone++;\n                              if (numDone >= list.length) {\n                                 resolve();\n                              }\n                           });\n                        });\n                        if (list.length == 0) {\n                           resolve();\n                        }\n                     })\n                     .catch(reject);\n               });\n            }\n         }\n      });\n   }\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldList\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n      const App = field.AB._App;\n\n      var formClass = \"\";\n      var placeHolder = \"\";\n      if (options.editable) {\n         formClass = \" form-entry\";\n         placeHolder = `<span style='color: #CCC; padding: 0 5px;'>${L(\n            \"Select item\"\n         )}</span>`;\n      }\n      var isRemovable = options.editable && !this.settings.required;\n\n      config.editFormat = (value) => {\n         return this.editFormat(value);\n      };\n      config.editParse = (value) => {\n         return this.editParse(value);\n      };\n\n      config.template = (rowData) => {\n         let selectedData = rowData[this.columnName];\n         if (selectedData == null) return \"\";\n         if (this.settings.isMultiple) {\n            selectedData = _getSelectedOptions(this, rowData);\n         }\n         var values = [];\n         values.push('<div class=\"badgeContainer\">');\n         let hasCustomColor = \"\";\n         let optionHex = \"\";\n         if (\n            selectedData &&\n            Array.isArray(selectedData) &&\n            selectedData.length\n         ) {\n            selectedData.forEach((val) => {\n               if (this.settings.hasColors && val.hex) {\n                  hasCustomColor = \"hascustomcolor\";\n                  optionHex = `background: ${val.hex};`;\n               }\n               if (val.text) {\n                  values.push(\n                     `<div style=\"${optionHex}\" class='webix_multicombo_value ${hasCustomColor}'><span>${val.text}</span><!-- span data-uuid=\"${val.id}\" class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span --></div>`\n                  );\n               }\n            });\n            if (selectedData.length > 1) {\n               values.push(\n                  `<span class=\"webix_badge selectivityBadge\">${selectedData.length}</span>`\n               );\n            }\n         } else if (selectedData) {\n            let selectedObj = selectedData;\n            if (typeof selectedData == \"string\") {\n               selectedObj = this.getItemFromVal(selectedData);\n            }\n            if (!selectedObj) return \"\";\n            if (this.settings.hasColors && selectedObj.hex) {\n               hasCustomColor = \"hascustomcolor\";\n               optionHex = `background: ${selectedObj.hex};`;\n            }\n            if (selectedObj.text) {\n               let clear = \"\";\n               if (options.editable && !this.settings.required) {\n                  clear = `<span class=\"webix_multicombo_delete clear-combo-value\" role=\"button\" aria-label=\"Remove item\"></span>`;\n               }\n               values.push(\n                  `<div style=\"${optionHex}\" class='webix_multicombo_value ${hasCustomColor}'>${clear}<span class=\"ellip\">${selectedObj.text}</span></div>`\n               );\n            }\n         } else {\n            return \"\";\n         }\n         values.push(\"</div>\");\n         return values.join(\"\");\n      };\n      config.editor = this.settings.isMultiple ? \"multiselect\" : \"combo\";\n      config.suggest = {\n         button: true,\n         data: this.settings.options.map(function (opt) {\n            return {\n               id: opt.id,\n               value: opt.text,\n               hex: opt.hex,\n            };\n         }),\n      };\n      if (this.settings.isMultiple) {\n         config.suggest.view = \"checksuggest\";\n      }\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      if (!node.querySelector) return;\n\n      var clearButton = node.querySelector(\n         \".selectivity-single-selected-item-remove\"\n      );\n      if (clearButton) {\n         clearButton.addEventListener(\"click\", (e) => {\n            e.stopPropagation();\n            var values = {};\n            values[this.columnName] = \"\";\n            this.object\n               .model()\n               .update(row.id, values)\n               .then(() => {\n                  // update the client side data object as well so other data changes won't cause this save to be reverted\n                  $$(node)?.updateItem?.(row.id, values);\n               })\n               .catch((err) => {\n                  node.classList.add(\"webix_invalid\");\n                  node.classList.add(\"webix_invalid_cell\");\n\n                  this.AB.notify.developer(err, {\n                     message:\n                        \"ABFieldList:customDisplay(): Error updating our entry.\",\n                     row: row,\n                     values: \"\",\n                     field: this.toObj(),\n                  });\n               });\n         });\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   // customEdit(row, App, node) {\n   //    return super.customEdit(row, App, node);\n   // }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple ? \"selectmultiple\" : \"selectsingle\",\n            settings: {\n               options: this.settings.options.map(function (opt) {\n                  return {\n                     id: opt.id,\n                     value: opt.text,\n                     hex: opt.hex,\n                  };\n               }),\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple\n               ? \"mobile-selectmultiple\"\n               : \"mobile-selectsingle\",\n            settings: {\n               options: this.settings.options.map(function (opt) {\n                  return {\n                     id: opt.id,\n                     value: opt.text,\n                     hex: opt.hex,\n                  };\n               }),\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple ? \"detailtext\" : \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   editFormat(value) {\n      if (!value) return \"\";\n      let vals = [];\n      if (Array.isArray(value)) {\n         value.forEach((val) => {\n            if (typeof val == \"object\") {\n               vals.push(val.id);\n            } else {\n               let itemObj = this.getItemFromVal(val);\n               vals.push(itemObj.id);\n            }\n         });\n      } else {\n         if (typeof value == \"object\") {\n            vals.push(value.id);\n         } else {\n            let itemObj = this.getItemFromVal(value);\n            if (itemObj && itemObj.id) {\n               vals.push(itemObj.id);\n            }\n         }\n      }\n      return vals.join();\n   }\n\n   editParse(value) {\n      if (this.settings.isMultiple) {\n         let returnVals = [];\n         let vals = value.split(\",\");\n         vals.forEach((val) => {\n            returnVals.push(this.getItemFromVal(val));\n         });\n         return returnVals;\n      } else {\n         return value;\n      }\n   }\n\n   getItemFromVal(val) {\n      let item;\n      let options = this.options();\n      if (options.length > 1) {\n         options.forEach((option) => {\n            if (option.id == val) {\n               item = option;\n               return false;\n            }\n         });\n         return item;\n      } else {\n         return \"\";\n      }\n   }\n\n   getValue(item, rowData) {\n      return this.editParse(item.getValue());\n   }\n\n   getSelectedOptions(field, rowData = {}) {\n      let result = [];\n      if (rowData[this.columnName] != null) {\n         result = rowData[this.columnName];\n      } else if (rowData) {\n         if (Array.isArray(rowData)) {\n            result = rowData;\n         } else {\n            result.push(rowData);\n         }\n      }\n      if (result.length) {\n         if (typeof result == \"string\") result = JSON.parse(result);\n\n         // Pull text with current language\n         if (this.settings) {\n            result = (this.settings.options || []).filter((opt) => {\n               return (\n                  (result || []).filter((v) => (opt.id || opt) == (v.id || v))\n                     .length > 0\n               );\n            });\n         }\n      }\n\n      return result;\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      if (this.settings.isMultiple) {\n         // do we need anything here?\n      } else {\n         super.setValue(item, rowData);\n      }\n   }\n};\n\n// == Private methods ==\nfunction _getSelectedOptions(field, rowData = {}) {\n   let result = [];\n   if (rowData[field.columnName] != null) {\n      result = rowData[field.columnName];\n\n      if (typeof result == \"string\") result = JSON.parse(result);\n\n      // Pull text with current language\n      if (field.settings) {\n         result = (field.settings.options || []).filter((opt) => {\n            return (\n               (result || []).filter(\n                  (v) => opt && v && (opt.id || opt) == (v.id || v)\n               ).length > 0\n            );\n         });\n      }\n   }\n\n   return result;\n}\n","const ABFieldLongTextCore = require(\"../../core/dataFields/ABFieldLongTextCore\");\n\nmodule.exports = class ABFieldLongText extends ABFieldLongTextCore {\n   constructor(values, object) {\n      super(values, object);\n\n      /*\n\t\t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n\t\t}\n\t\t*/\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldLongText\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\"; // '[edit_type]'   for your unique situation\n      // config.sort = 'string' // '[sort_type]'   for your unique situation\n      config.template = (obj, common, value, col, ind) => {\n         return (value || \"\").toString().replace(/[<]/g, \"&lt;\");\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"multiple\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-textbox\",\n            settings: {\n               type: \"multiple\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n   }\n};\n","const ABFieldNumberCore = require(\"../../core/dataFields/ABFieldNumberCore\");\n\nlet INIT_EDITOR = false;\n// {bool} INIT_EDITOR\n// Transition code between previous Framework and current.\n// we now need to wait until webix is declared or accessible globally.\n\nmodule.exports = class ABFieldNumber extends ABFieldNumberCore {\n   constructor(values, object) {\n      if (!INIT_EDITOR) {\n         // NOTE: if you need a unique [edit_type] by your returned config.editor above:\n         webix.editors.number = webix.extend(\n            {\n               // TODO : Validate number only\n            },\n            webix.editors.text\n         );\n         INIT_EDITOR = true;\n      }\n      super(values, object);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   // return the grid column header definition for this instance of ABFieldNumber\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"number\"; // [edit_type] simple inline editing.\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"numberbox\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-numberbox\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","/*\n * ABFieldSelectivity\n *\n * An ABFieldSelectivity defines a single unique Field/Column in a ABObject.\n *\n */\n\nconst ABField = require(\"./ABField\");\n\nconst defaultSettings = {\n   allowClear: true,\n   removeOnly: false,\n   readOnly: false,\n   showDropdown: true,\n   placeholder: \"\",\n   multiple: false,\n};\n\nconst ABFieldSelectivityDefaults = {\n   key: \"selectivity\",\n};\n\nmodule.exports = class ABFieldSelectivity extends ABField {\n   constructor(values, object, fieldDefaults = ABFieldSelectivityDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return {\n         key: \"selectivity\",\n         icon: \"bars\",\n         menuName: \"\",\n         description: \"\",\n      };\n   }\n\n   selectivityRender(domNode, settings, App, row) {\n      if (domNode == null) return;\n\n      const cypress = settings.dataCy || \"\";\n      domNode.setAttribute(\"data-cy\", cypress);\n\n      // setting up our specific settings:\n      settings = settings || {};\n      for (const dv in defaultSettings) {\n         if (settings[dv] === null) {\n            settings[dv] = null;\n         } else {\n            settings[dv] = settings[dv] || defaultSettings[dv];\n         }\n      }\n\n      if (\n         settings.multiple &&\n         settings.items &&\n         settings.data &&\n         settings.data.length\n      ) {\n         settings.data.forEach(function (d) {\n            settings.items.map(function (i) {\n               if (i.id == d.id) d.hex = i.hex;\n            });\n         });\n         settings[\"data\"] = this.prepareData(\n            settings[\"data\"],\n            settings.multiple\n         );\n      } else if (settings[\"data\"] == null || settings[\"data\"] == \"\") {\n         settings[\"data\"] = this.prepareData([], settings.multiple);\n      } else {\n         settings[\"data\"] = this.prepareData(\n            settings[\"data\"],\n            settings.multiple\n         );\n      }\n\n      // store the field id so we can look it up on click events later\n      settings[\"field\"] = this.id;\n\n      // Prevent render selectivity duplicate\n      if (domNode.selectivity != null) {\n         // Refresh selectivity settings\n         domNode.selectivity.setOptions(settings);\n\n         return;\n      }\n\n      settings.element = domNode;\n\n      // Render selectivity\n      let selectivityInput;\n      if (settings.multiple) {\n         if (settings.isUsers) {\n            settings.templates = {\n               multipleSelectedItem: function (options) {\n                  return `<span class=\"selectivity-multiple-selected-item ${\n                     options.highlighted ? \" highlighted\" : \"\"\n                  }\"\n\t\t\t\t\t\t\t\tstyle=\"background-color: #eee !important; color: #666 !important; box-shadow: inset 0px 1px 1px #333;\"\n\t\t\t\t\t\t\t\tdata-item-id=\"${options.uuid}\" data-field-id=\"${settings.field}\">\n\t\t\t\t\t\t\t\t<i class=\"fa fa-user\" style=\"color: #666; opacity: 0.6;\"></i> \n                        ${\n                           settings.additionalText\n                              ? settings.additionalText(options)\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t\t${!settings.isLabelHidden ? options.text : \"\"}\n\t\t\t\t\t\t\t\t${\n                           options.removable\n                              ? ` <a class=\"selectivity-multiple-selected-item-remove\" style=\"color: #333;\"><i class=\"fa fa-remove\"></i></a>`\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t</span>`;\n               },\n            };\n         } else {\n            settings.templates = {\n               multipleSelectedItem: function (options) {\n                  return `<span class=\"selectivity-multiple-selected-item ${\n                     options.highlighted ? \" highlighted\" : \"\"\n                  }\"\n\t\t\t\t\t\t\t\tstyle=\"background-color: ${options.hex} !important;\"\n\t\t\t\t\t\t\t\tdata-item-id=\"${options.uuid}\" data-field-id=\"${settings.field}\">\n                        ${\n                           settings.editPage\n                              ? ` <a class=\"selectivity-multiple-selected-item-edit\"><i class=\"fa fa-edit\"></i></a>`\n                              : \"\"\n                        }\n                        ${\n                           settings.additionalText\n                              ? settings.additionalText(options)\n                              : \"\"\n                        }\n                        ${!settings.isLabelHidden ? options.text : \"\"}\n                        ${\n                           options.removable\n                              ? ` <a class=\"selectivity-multiple-selected-item-remove\"><i class=\"fa fa-remove\"></i></a>`\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t</span>`;\n               },\n            };\n         }\n         selectivityInput = new Selectivity.Inputs.Multiple(settings);\n\n         domNode.selectivity = selectivityInput;\n         this.selectivitySetBadge(domNode, App, row);\n      } else {\n         settings.templates = {\n            singleSelectedItem: function (options) {\n               return `<span class=\"selectivity-single-selected-item\" data-item-id=\"${\n                  options.uuid\n               }\" data-field-id=\"${settings.field}\">\n\t\t\t\t\t\t\t${\n                        settings.editPage\n                           ? '<a class=\"selectivity-single-selected-item-edit\"><i class=\"fa fa-edit\"></i></a>'\n                           : \"\"\n                     }\n                     ${\n                        settings.additionalText\n                           ? settings.additionalText(options)\n                           : \"\"\n                     }\n                     ${!settings.isLabelHidden ? options.text : \"\"}\n                     ${\n                        options.removable\n                           ? '<a class=\"selectivity-single-selected-item-remove\"><i class=\"fa fa-remove\"></i></a>'\n                           : \"\"\n                     }\n\t\t\t\t\t\t</span>`;\n            },\n         };\n\n         selectivityInput = new Selectivity.Inputs.Single(settings);\n         domNode.selectivity = selectivityInput;\n      }\n\n      if (settings.editPage) {\n         const trigerEditPageEvent = () => {\n            const instance = this;\n            const editMenus = document.querySelectorAll(\n               \".selectivity-single-selected-item-edit, .selectivity-multiple-selected-item-edit\"\n            );\n            for (let i = 0; i < editMenus.length; i++) {\n               const eMenu = editMenus[i];\n               if (eMenu && !eMenu.__hasClickEvent) {\n                  eMenu.addEventListener(\n                     \"click\",\n                     function (e) {\n                        e.stopPropagation();\n                        e.preventDefault();\n\n                        const parentElm = this.parentElement;\n                        if (!parentElm) return;\n\n                        const rowId = parentElm.getAttribute(\"data-item-id\");\n                        if (!rowId) return;\n\n                        const fieldId = parentElm.getAttribute(\"data-field-id\");\n                        if (!fieldId) return;\n\n                        const thisField = instance.object.fieldByID(fieldId);\n                        if (!thisField) return;\n\n                        thisField.emit(\"editPage\", rowId);\n                     },\n                     true\n                  );\n                  eMenu.__hasClickEvent = true;\n               }\n            }\n         };\n\n         setTimeout(() => {\n            trigerEditPageEvent();\n\n            domNode.addEventListener(\"change\", () => {\n               trigerEditPageEvent();\n            });\n         }, 500);\n      }\n\n      // WORKAROUND : remove caret icon of selectivity\n      if (settings.readOnly) {\n         const caretElems = domNode.getElementsByClassName(\"selectivity-caret\");\n         for (let i = 0; i < caretElems.length; i++) {\n            const caretElm = caretElems[i];\n            if (caretElm) {\n               caretElm.parentNode.removeChild(caretElm);\n            }\n         }\n      }\n\n      // remember our settings values\n      this.selectivitySettings = settings;\n   }\n\n   selectivityGet(domNode) {\n      if (domNode && domNode.selectivity) {\n         if (this.selectivitySettings && this.selectivitySettings.multiple) {\n            // on a multiple select, return an array of results, or empty array\n            return domNode.selectivity.getData() || [];\n         } else {\n            // if a single select, return the object or null\n            return domNode.selectivity.getData() || null;\n         }\n      } else {\n         if (this.selectivitySettings && this.selectivitySettings.multiple)\n            return [];\n         else return null;\n      }\n   }\n\n   selectivitySet(domNode, data) {\n      if (!domNode || !domNode.selectivity) return;\n\n      data = this.prepareData(data, domNode.selectivity.options.multiple);\n\n      if (\n         (Array.isArray(data) && data[0]) || // Check Array\n         (data && data.id)\n      )\n         // Check a object\n         domNode.selectivity.setData(data);\n      else domNode.selectivity.clear();\n   }\n\n   selectivityDestroy(domNode) {\n      if (domNode && domNode.selectivity) {\n         domNode.selectivity.destroy();\n\n         delete domNode.selectivity;\n      }\n   }\n\n   prepareData(data, multiple = true) {\n      if (!data && multiple) {\n         return [];\n      } else if (multiple && data && Array.isArray(data) && data.length == 0) {\n         return [];\n      } else if (!multiple && data && Array.isArray(data) && data.length == 0) {\n         return null;\n      } else if (!data && !multiple) {\n         return null;\n      }\n\n      if (typeof data == \"string\" && data.length > 0) {\n         try {\n            data = JSON.parse(data);\n         } catch (e) {\n            // not JSON parsable, so convert to\n            data = { id: data, text: data };\n         }\n      }\n\n      // if single select, then it should be object\n      if (!multiple && Array.isArray(data)) {\n         data = data[0];\n      } else if (multiple && !Array.isArray(data)) {\n         data = [data];\n      }\n\n      // check to see if id is present on each item\n      if (multiple) {\n         data.forEach((d) => {\n            if (!d.id && d.uuid) {\n               d.id = d.uuid;\n            }\n         });\n      } else {\n         if (!data.id && data.uuid) data.id = data.uuid;\n      }\n\n      if (data == null && multiple) {\n         data = [];\n      }\n\n      return data;\n   }\n\n   selectivitySetBadge(domNode) {\n      if (!domNode.clientHeight) return;\n      const innerHeight = domNode.clientHeight;\n      const outerHeight = domNode.parentElement.clientHeight;\n      if (innerHeight - outerHeight > 5) {\n         let count = 0;\n         let values = [];\n         if (domNode && domNode.selectivity)\n            values = domNode.selectivity.getValue() || [];\n\n         count = values.length;\n         if (count > 1) {\n            const badge = domNode.querySelector(\n               \".webix_badge.selectivityBadge\"\n            );\n            if (badge != null) {\n               badge.innerHTML = count;\n            } else {\n               const anchor = document.createElement(\"A\");\n               anchor.href = \"javascript:void(0);\";\n               // v2: this just updated the $height property for this row\n               // we don't do that anymore:\n               // anchor.addEventListener(\"click\", function () {\n               //    App.actions.onRowResizeAuto(row.id, innerHeight);\n               // });\n               const node = document.createElement(\"SPAN\");\n               const textnode = document.createTextNode(count);\n               node.classList.add(\"webix_badge\", \"selectivityBadge\");\n               node.appendChild(textnode);\n               anchor.appendChild(node);\n               domNode.appendChild(anchor);\n            }\n         }\n      }\n   }\n};\n","const ABFieldStringCore = require(\"../../core/dataFields/ABFieldStringCore\");\n\nmodule.exports = class ABFieldString extends ABFieldStringCore {\n   // constructor(values, object) {\n   //    super(values, object);\n\n   // {\n   //   settings: {\n   // \t  default: 'string',\n   // \t  supportMultilingual: 1/0\n   //   }\n   // }\n\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldString\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\";\n      config.css = \"textCell\";\n      // config.sort   = 'string'\n      config.template = (obj, common, value /* , col, ind */) => {\n         // if this isn't part of a group header display the default format\n         if (!obj.$group) {\n            return (value || \"\").toString().replace(/[<]/g, \"&lt;\");\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            if (this.settings.default.indexOf(\"{uuid}\") >= 0) {\n               values[this.columnName] = this.AB.uuid();\n            } else {\n               values[this.columnName] = this.settings.default;\n            }\n         }\n      }\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   // formComponentMobile() {\n   //    // NOTE: what is being returned here needs to mimic an ABView CLASS.\n   //    // primarily the .common() and .newInstance() methods.\n   //    const formComponentSetting = super.formComponent();\n\n   //    // .common() is used to create the display in the list\n   //    formComponentSetting.common = () => {\n   //       return {\n   //          key: \"mobile-textbox\",\n   //          settings: {\n   //             type: \"single\",\n   //          },\n   //       };\n   //    };\n\n   //    return formComponentSetting;\n   // }\n\n   /**\n    * @method formComponentMobile\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n   }\n};\n","const ABFieldTextFormulaCore = require(\"../../core/dataFields/ABFieldTextFormulaCore\");\n\nmodule.exports = class ABFieldTextFormula extends ABFieldTextFormulaCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldTextFormula\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(/* row, App, node, options */) {}\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // not support in the form widget\n      return null;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldTreeCore = require(\"../../core/dataFields/ABFieldTreeCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldTree extends ABFieldTreeCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   idCustomContainer(obj) {\n      return `${this.columnName.replace(/ /g, \"_\")}-${obj.id}-tree`;\n   }\n\n   // return the grid column header definition for this instance of ABFieldTree\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n\n      let formClass = \"\";\n      let placeHolder = \"\";\n      if (options.isForm) {\n         formClass = \" form-entry\";\n         placeHolder =\n            \"<span style='color: #CCC; padding: 0 5px;'>\" +\n            L(\"Select items\") +\n            \"</span>\";\n      }\n\n      const width = options.width;\n\n      config.template = (obj) => {\n         if (obj.$group) return obj[field.columnName];\n\n         const branches = [];\n         let selectOptions = this.AB.cloneDeep(field.settings.options);\n         selectOptions = new webix.TreeCollection({\n            data: selectOptions,\n         });\n\n         let values = obj;\n         if (obj[field.columnName] != null) {\n            values = obj[field.columnName];\n         }\n\n         selectOptions.data.each(function (obj) {\n            if (\n               typeof values.indexOf != \"undefined\" &&\n               values.indexOf(obj.id) != -1\n            ) {\n               let html = \"\";\n\n               let rootid = obj.id;\n               while (this.getParentId(rootid)) {\n                  selectOptions.data.each(function (par) {\n                     if (selectOptions.data.getParentId(rootid) == par.id) {\n                        html = par.text + \": \" + html;\n                     }\n                  });\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n         let nodeHTML = \"\";\n         nodeHTML += \"<div class='list-data-values'>\";\n         if (branches.length == 0) {\n            nodeHTML += placeHolder;\n         } else {\n            branches.forEach(function (item) {\n               nodeHTML +=\n                  '<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color:' +\n                  myHex +\n                  ' !important;\">' +\n                  item +\n                  \"</span>\";\n            });\n         }\n         nodeHTML += \"</div>\";\n\n         // field.setBadge(node, App, row);\n\n         if (width) {\n            return (\n               '<div style=\"margin-left: ' +\n               width +\n               'px;\" class=\"list-data-values' +\n               formClass +\n               '\">' +\n               nodeHTML +\n               \"</div>\"\n            );\n         } else {\n            return (\n               '<div class=\"list-data-values' +\n               formClass +\n               '\">' +\n               nodeHTML +\n               \"</div>\"\n            );\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      const field = this;\n\n      if (options.isForm) {\n         if (!row || row.length == 0) {\n            node.innerHTML =\n               \"<div class='list-data-values form-entry'><span style='color: #CCC; padding: 0 5px;'>\" +\n               L(\"Select items\") +\n               \"</span></div>\";\n            return;\n         }\n\n         const branches = [];\n         options = this.AB.cloneDeep(field.settings.options);\n         options = new webix.TreeCollection({\n            data: options,\n         });\n\n         let values = row;\n         if (row[field.columnName] != null) {\n            values = row[field.columnName];\n         }\n\n         options.data.each(function (obj) {\n            if (\n               typeof values.indexOf != \"undefined\" &&\n               values.indexOf(obj.id) != -1\n            ) {\n               let html = \"\";\n\n               let rootid = obj.id;\n               while (this.getParentId(rootid)) {\n                  options.data.each(function (par) {\n                     if (options.data.getParentId(rootid) == par.id) {\n                        html = par.text + \": \" + html;\n                     }\n                  });\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n         let nodeHTML = \"\";\n         nodeHTML += \"<div class='list-data-values form-entry'>\";\n         branches.forEach(function (item) {\n            nodeHTML +=\n               '<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color:' +\n               myHex +\n               ' !important;\">' +\n               item +\n               \"</span>\";\n         });\n         nodeHTML += \"</div>\";\n\n         node.innerHTML = nodeHTML;\n      }\n\n      field.setBadge(node, App, row);\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node, component) {\n      const idBase = App.unique(this.idCustomContainer(row));\n      const idPopup = `${idBase}-popup`;\n      const idTree = `${idBase}-tree`;\n      const view = $$(node);\n      const field = this;\n      const parentComponent = component;\n      let values = {};\n      let firstRender = true;\n\n      function getValues(field, row) {\n         let values = {};\n         if (\n            typeof field != \"undefined\" &&\n            typeof field.columnName != \"undefined\" &&\n            typeof row[field.columnName] != \"undefined\"\n         ) {\n            values = row[field.columnName];\n         }\n         return values;\n      }\n\n      function populateTree(field, vals) {\n         values = getValues(field, vals);\n\n         const $Tree = $$(idTree);\n         $Tree.blockEvent(); // prevents endless loop\n\n         const options = field.AB.cloneDeep(field.settings.options);\n         $Tree.clearAll();\n         $Tree.parse(options);\n         $Tree.refresh();\n         $Tree.uncheckAll();\n         $Tree.openAll();\n\n         if (values != null && values.length) {\n            values.forEach(function (id) {\n               if ($Tree.exists(id)) {\n                  $Tree.checkItem(id);\n                  const dom = $Tree.getItemNode(id);\n                  dom.classList.add(\"selected\");\n               }\n            });\n         }\n         $Tree.unblockEvent();\n      }\n\n      if ($$(idPopup)) {\n         $$(idPopup).show();\n         populateTree(this, row);\n      } else {\n         webix\n            .ui({\n               id: idPopup,\n               view: \"popup\",\n               width: 500,\n               height: 400,\n               on: {\n                  onShow: () => {\n                     if (firstRender == true) populateTree(this, row);\n\n                     firstRender = false;\n                  },\n               },\n               body: {\n                  id: idTree,\n                  view: \"tree\",\n                  css: \"ab-data-tree\",\n                  template: function (obj, common) {\n                     return (\n                        \"<label>\" +\n                        common.checkbox(obj, common) +\n                        \"&nbsp;\" +\n                        obj.text +\n                        \"</label>\"\n                     );\n                  },\n                  on: {\n                     onItemCheck: async function (id, value, event) {\n                        const dom = this.getItemNode(id);\n                        const tree = this;\n                        if (value == true) {\n                           dom.classList.add(\"selected\");\n                        } else {\n                           dom.classList.remove(\"selected\");\n                        }\n                        // works for the same-level children only\n                        // except root items\n                        if (this.getParentId(id)) {\n                           tree.blockEvent(); // prevents endless loop\n\n                           let rootid = id;\n                           while (this.getParentId(rootid)) {\n                              rootid = this.getParentId(rootid);\n                              if (rootid != id) tree.uncheckItem(rootid);\n                           }\n\n                           this.data.eachSubItem(rootid, function (item) {\n                              if (item.id != id) tree.uncheckItem(item.id);\n                           });\n\n                           tree.unblockEvent();\n                        } else {\n                           tree.blockEvent(); // prevents endless loop\n                           this.data.eachSubItem(id, function (obj) {\n                              if (obj.id != id) tree.uncheckItem(obj.id);\n                           });\n                           tree.unblockEvent();\n                        }\n                        const values = {};\n                        values[field.columnName] = $$(idTree).getChecked();\n\n                        if (row.id) {\n                           // pass null because it could not put empty array in REST api\n                           if (values[field.columnName].length == 0)\n                              values[field.columnName] = \"\";\n\n                           try {\n                              await field.object.model().update(row.id, values);\n\n                              // update the client side data object as well so other data changes won't cause this save to be reverted\n                              if (view && view.updateItem) {\n                                 view.updateItem(row.id, values);\n                              }\n                           } catch (err) {\n                              node.classList.add(\"webix_invalid\");\n                              node.classList.add(\"webix_invalid_cell\");\n\n                              this.AB.notify.developer(err, {\n                                 message:\n                                    \"ABFieldTree:onItemClick(): Error updating our entry.\",\n                                 row: row,\n                                 values: values,\n                              });\n                           }\n                        } else {\n                           const rowData = {};\n                           rowData[field.columnName] = $$(idTree).getChecked();\n\n                           field.setValue($$(parentComponent.ui.id), rowData);\n                        }\n                     },\n                  },\n               },\n            })\n            .show(node, {\n               x: -7,\n            });\n      }\n      return false;\n   }\n\n   setBadge(domNode, row) {\n      const field = this;\n      domNode = domNode.querySelector(\".list-data-values\");\n      const innerHeight = domNode.scrollHeight;\n      const outerHeight = domNode.parentElement.clientHeight;\n      if (innerHeight - outerHeight > 5) {\n         let count = 0;\n         if (row[field.columnName] && row[field.columnName].length)\n            count = row[field.columnName].length;\n         else count = 0;\n\n         if (count > 1) {\n            const badge = domNode.querySelector(\n               \".webix_badge.selectivityBadge\"\n            );\n            if (badge != null) {\n               badge.innerHTML = count;\n            } else {\n               const anchor = document.createElement(\"A\");\n               anchor.href = \"javascript:void(0);\";\n               anchor.addEventListener(\"click\", function (event) {\n                  // v2: this was just saving the new height to the\n                  // field properties. We don't do that anymore:\n                  // App.actions.onRowResizeAuto(row.id, innerHeight);\n                  event.stopPropagation();\n               });\n               const node = document.createElement(\"SPAN\");\n               const textnode = document.createTextNode(count);\n               node.classList.add(\"webix_badge\", \"selectivityBadge\");\n               node.appendChild(textnode);\n               anchor.appendChild(node);\n               domNode.appendChild(anchor);\n            }\n         }\n      }\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"formtree\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtree\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   getValue(item, rowData) {\n      let values = {};\n      values = item.getValues();\n      return values;\n   }\n\n   setValue(item, rowData) {\n      if (!item) return false;\n\n      const val = rowData[this.columnName] || [];\n\n      item.setValues(val);\n      // get dom\n      const dom = item.$view.querySelector(\".list-data-values\");\n\n      if (!dom) return false;\n\n      // set value to selectivity\n      this.customDisplay(val, this.App, dom, {\n         editable: true,\n         isForm: true,\n      });\n\n      setTimeout(function () {\n         let height = 33;\n         if (dom.scrollHeight > 33) {\n            height = dom.scrollHeight;\n         }\n         item.config.height = height + 5;\n         item.resize();\n      }, 200);\n   }\n};\n","const ABFieldConnectCore = require(\"../../core/dataFields/ABFieldConnectCore\");\nconst ABFieldUserCore = require(\"../../core/dataFields/ABFieldUserCore\");\n\nmodule.exports = class ABFieldUser extends ABFieldUserCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   async save() {\n      // Add new\n      if (this.id == null) {\n         const SiteUser = this.AB.objectUser();\n         const Defaults = ABFieldUserCore.defaults();\n\n         this.settings.linkObject = SiteUser.id;\n         this.settings.isCustomFK = 1;\n\n         if (this.settings.isMultiple) {\n            this.settings.indexField2 = Defaults.USERNAME_FIELD_ID;\n            this.settings.linkType = \"many\";\n            this.settings.linkViaType = \"many\";\n            this.settings.isSource = 1;\n         } else {\n            this.settings.indexField = Defaults.USERNAME_FIELD_ID;\n            this.settings.linkType = \"one\";\n            this.settings.linkViaType = \"many\";\n            this.settings.isSource = 1;\n         }\n\n         // TODO: .fieldCustomNew() for saving \"local\" changes.\n         // NOTE: The Object adding this Field sees it's data as a ABFieldUser\n         //       connection.\n         //       However, the SiteUser will see the data as a ABFieldConnect\n         //       connection\n         const linkCol = SiteUser.fieldNew({\n            key: ABFieldConnectCore.defaults().key,\n            columnName: `${this.object.name}_${this.label}`,\n            label: this.object.label,\n            settings: {\n               showIcon: this.settings.showIcon,\n               linkObject: this.object.id,\n               linkType: this.settings.linkViaType,\n               linkViaType: this.settings.linkType,\n               isCustomFK: this.settings.isCustomFK,\n               indexField: this.settings.indexField,\n               indexField2: this.settings.indexField2,\n               isSource: 0,\n            },\n         });\n\n         // // Create definitions of the connected fields\n         // // NOTE: skip directly to the ABMLClass.save() to avoid the\n         // // migrations caused during the ABField.save() operations.\n         // await ABFieldUserCore.prototype.save.call(this);\n\n         // linkCol.settings.linkColumn = this.id;\n         // await ABFieldUserCore.prototype.save.call(linkCol);\n\n         // // Update the id value of linked field to connect together\n         // this.settings.linkColumn = linkCol.id;\n         // await ABFieldUserCore.prototype.save.call(this);\n\n         let newDef = await this.toDefinition().save();\n         this.id = newDef.id;\n\n         linkCol.settings.linkColumn = this.id;\n         let newLinkDef = await linkCol.toDefinition().save();\n         linkCol.id = newLinkDef.id;\n\n         this.settings.linkColumn = linkCol.id;\n         await this.toDefinition().save();\n\n         // Add fields to Objects\n         await this.object.fieldAdd(this);\n\n         await SiteUser.fieldAdd(linkCol);\n\n         // Create column to DB\n         await this.migrateCreate();\n\n         await linkCol.migrateCreate();\n\n         return this;\n      } else {\n         return super.save();\n      }\n   }\n\n   // return the grid column header definition for this instance of ABFieldUser\n\n   columnHeader(options) {\n      // debugger;\n      options = this.setDisplayOptions(options);\n      return super.columnHeader(options);\n   }\n\n   /**\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   // customDisplay(row, App, node, options = {}) {\n   //    debugger;\n   //    options = this.setDisplayOptions(options);\n   //\n   //    return super.customDisplay(row, App, node, options);\n   // }\n\n   setDisplayOptions(options) {\n      options = options || {};\n      options.editable =\n         this.settings.editable != null ? this.settings.editable : true;\n\n      options.isLabelHidden =\n         this.settings.isShowUsername != null\n            ? !this.settings.isShowUsername\n            : false;\n\n      options.additionalText = (opt) => {\n         if (!this.settings.isShowProfileImage) return \"\";\n\n         if (opt.image_id)\n            return `<img src='/file/${opt.image_id}' style='border-radius:100%; object-fit: cover; margin: 0 5px 0 -10px;' width='28' height='28' />`;\n         else return '<i style=\"opacity: 0.6;\" class=\"fa fa-user\"></i> ';\n      };\n\n      return options;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (this.settings.isCurrentUser) {\n         if (this.settings.isMultiple) {\n            values[this.columnName] = [\n               {\n                  id: this.AB.Account.username(),\n                  text: this.AB.Account.username(),\n               },\n            ];\n         } else {\n            values[this.columnName] = this.AB.Account.username();\n         }\n      }\n   }\n\n   getValue(item) {\n      let val = super.getValue(item);\n\n      if (val) {\n         if (typeof val == \"string\")\n            val = val.replace(/ab-current-user/g, this.AB.Account.username());\n         else if (Array.isArray(val))\n            val = val.map((v) =>\n               (v?.username ?? v?.uuid ?? v?.id ?? v)?.replace(\n                  /ab-current-user/g,\n                  this.AB.Account.username()\n               )\n            );\n      }\n\n      return val;\n   }\n\n   setValue(item, rowData) {\n      let val = rowData[this.columnName];\n      if (val === \"\") {\n         // this means this value isn't set.\n         // can we remove this from the data?\n         delete rowData[this.columnName];\n         super.setValue(item, rowData);\n         return;\n      }\n\n      if (this.linkType() == \"many\") {\n         // val should be an array.\n         if (!Array.isArray(val)) {\n            val = [val];\n         }\n         // if any of those contain \"ab-current-user\" replace it:\n         val = val.map((v) =>\n            v == \"ab-current-user\" ? this.AB.Account.username() : v\n         );\n      } else {\n         // val is a single entry string\n         // Select \"[Current user]\" to update\n         if (val == \"ab-current-user\") val = this.AB.Account.username();\n      }\n\n      rowData[this.columnName] = val;\n\n      super.setValue(item, rowData);\n   }\n\n   getUsers() {\n      return this.AB.Account.userList().map((u) => {\n         const result = {\n            id: u.username,\n            image: u.image_id,\n         };\n\n         if (this.settings.isMultiple) {\n            result.text = u.username;\n         } else {\n            result.value = u.username;\n         }\n\n         return result;\n      });\n   }\n\n   getOptions(...params) {\n      return super.getOptions(...params).then((options) => {\n         // in a ABFieldUser, our options.id elements need to have\n         // the username, not the .uuid:\n         (options || []).forEach((o) => {\n            if (o.username) {\n               o.id = o.username;\n            }\n         });\n\n         return options;\n      });\n   }\n\n   pullRelationValues(row) {\n      let values = super.pullRelationValues(row);\n\n      // remember, our .id == .username\n      if (Array.isArray(values)) {\n         // prevent any null or undefined:\n         values = values.filter((v) => v);\n         values = values.map((v) => {\n            v.id = v.username || v.id;\n            return v;\n         });\n      } else {\n         if (values) {\n            values.id = values.username || values.id;\n         }\n      }\n\n      return values;\n   }\n\n   pullRecordRelationValues(record) {\n      let data = super.pullRecordRelationValues(record);\n      if (Array.isArray(data)) {\n         data = data.map((d) => {\n            d.id = d.username ?? d.id;\n            return d;\n         });\n      } else {\n         data.id = data.username || data.id;\n      }\n\n      return data;\n   }\n};\n","const ABMobilePageCore = require(\"../../core/mobile/ABMobilePageCore\");\n\nmodule.exports = class ABMobilePage extends ABMobilePageCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      // check to see if I've been updated, if so, alert my parent:\n      this.__Handler_ABDEF_UPDATED = (def) => {\n         if (def.id == this.id) {\n            this.emit(\"definition.updated\", this);\n            this.AB.off(\"ab.abdefinition.update\", this.__Handler_ABDEF_UPDATED);\n         }\n      };\n      this.AB.on(\"ab.abdefinition.update\", this.__Handler_ABDEF_UPDATED);\n\n      // check to see if any of my child pages have been updated and\n      // update my defintion of them:\n      this.__Handler_DEF_UPDATED = (page) => {\n         // create a new Field with the updated def\n         var def = this.AB.definitionByID(page.id);\n         if (!def) return;\n\n         var newPage = this.pageNew(def);\n\n         // we want to keep the same pageID order:\n         var newPages = [];\n         this.pages().forEach((pg) => {\n            if (pg.id === page.id) {\n               newPages.push(newPage);\n               return;\n            }\n            newPages.push(pg);\n         });\n\n         this._pages = newPages;\n\n         page.off(\"definition.updated\", this.__Handler_DEF_UPDATED);\n      };\n      this.pages().forEach((p) => {\n         p.on(\"definition.updated\", this.__Handler_DEF_UPDATED);\n      });\n   }\n\n   /**\n    * @method refreshInstance()\n    * This returns a NEW instance of a ABMobilePage based upon the latest\n    * version of it's Definition.  It also resolves any current listeners\n    * this copy currently has and prepare this to discard itself.\n    */\n   refreshInstance(parent) {\n      // create a new Field with the updated def\n      var def = this.AB.definitionByID(this.id);\n      if (!def) return;\n\n      var newPage = (parent ?? this.parent)?.pageNew(def);\n\n      try {\n         // detatch ourself from other emitters:\n         this.AB.off(\"ab.abdefinition.update\", this.__Handler_ABDEF_UPDATED);\n         this.pages().forEach((pg) => {\n            pg.removeAllListeners(\"definition.updated\");\n         });\n      } catch (e) {\n         // debugger;\n         console.error(e);\n      }\n\n      return newPage;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let allViews = this.views();\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no widgets\");\n      }\n      (this.pages() || []).forEach((p) => {\n         p.warningsEval();\n      });\n   }\n};\n","const ABMobileViewCore = require(\"../../core/mobile/ABMobileViewCore.js\");\n\nmodule.exports = class ABMobileView extends ABMobileViewCore {\n   // constructor(attributes, application, parent) {\n   //    super(attributes, application, parent);\n   // }\n\n   /**\n\n\n   /*\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      // views not allowed to drop onto this View:\n      var viewsToIgnore = [\n         \"mobile-view\",\n         \"mobile-page\",\n         // \"formpanel\",\n         // \"viewcontainer\",\n         // // not allowed Detail's widgets\n         // \"detailcheckbox\",\n         // \"detailcustom\",\n         // \"detailconnect\",\n         // \"detailimage\",\n         // \"detailselectivity\",\n         // \"detailtext\",\n         // \"detailtree\",\n         // // not allowed Form's widgets\n         // \"button\",\n         // \"checkbox\",\n         // \"connect\",\n         // \"datepicker\",\n         // \"fieldcustom\",\n         // \"textbox\",\n         // \"numberbox\",\n         // \"selectsingle\",\n         // \"selectmultiple\",\n         // \"formtree\",\n         // \"fieldreadonly\",\n         // // not allowed Chart's Widgets\n         // \"pie\",\n         // \"bar\",\n         // \"line\",\n         // \"area\",\n         // // not allowed Report page\n         // \"report\",\n         // \"reportPage\",\n         // \"reportPanel\",\n      ];\n\n      var allComponents = this.application.viewAll();\n      var allowedComponents = allComponents.filter((c) => {\n         return viewsToIgnore.indexOf(c.common().key) == -1;\n      });\n\n      return allowedComponents;\n   }\n\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our sub views\n      var allWarnings = super.warningsAll();\n      this.views().forEach((v) => {\n         allWarnings = allWarnings.concat(v.warningsAll());\n      });\n\n      (this.pages?.() || []).forEach((p) => {\n         allWarnings = allWarnings.concat(p.warningsAll());\n      });\n\n      return allWarnings.filter((w) => w);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      (this.__missingViews || []).forEach((id) => {\n         this.warningsMessage(`references unknown View[${id}]`);\n      });\n\n      allViews.forEach((v) => {\n         v.warningsEval();\n      });\n\n      // if a datacollection is specified, verify it can be accessed.\n      if (this.settings.dataviewID) {\n         let dc = this.datacollections || this.datacollection;\n         if (!dc) {\n            this.warningsMessage(\n               `references unknown dataviewID[${this.settings.dataviewID}]`\n            );\n         }\n      }\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `${this.key}[${this.name}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABMobileViewFormCore = require(\"../../core/mobile/ABMobileViewFormCore\");\n\nconst ABMobileViewFormButton = require(\"./ABMobileViewFormButton\");\n\nmodule.exports = class ABMobileViewForm extends ABMobileViewFormCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method refreshDefaultButton()\n    * On the ABDesigner once a Form Field is added/removed from a form, we want\n    * to make sure the default Form Button is pushed down to the bottom of the\n    * list of form Items.\n    * @param {obj} ids\n    *        The id hash of the webix widgets that show the fields.\n    * @return {ABMobileViewFormButton}\n    */\n   refreshDefaultButton(ids) {\n      // If default button is not exists, then skip this\n      let defaultButton = this.views(\n         (v) => v instanceof ABMobileViewFormButton && v.settings.isDefault\n      )[0];\n\n      // Add a default button\n      if (defaultButton == null) {\n         defaultButton = ABMobileViewFormButton.newInstance(\n            this.application,\n            this\n         );\n         defaultButton.settings.isDefault = true;\n      }\n      // Remove default button from array, then we will add it to be the last item later (.push)\n      else {\n         this._views = this.views((v) => v.id != defaultButton.id);\n      }\n\n      // Calculate position Y of the default button\n      let yList = this.views().map((v) => (v.position.y || 0) + 1);\n      yList.push(this._views.length || 0);\n      yList.push($$(ids.fields).length || 0);\n      let posY = Math.max(...yList);\n\n      // Update to be the last item\n      defaultButton.position.y = posY;\n\n      // Keep the default button is always the last item of array\n      this._views.push(defaultButton);\n\n      return defaultButton;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.settings.dataviewID) {\n         this.warningsMessage(`does not have a DataCollection assigned.`);\n      } else {\n         let DC = this.datacollection;\n         if (!DC) {\n            this.warningsMessage(\n               `references an unknown DataCollection [${this.settings.dataviewID}].`\n            );\n         }\n      }\n   }\n};\n","const ABMobileViewFormButtonCore = require(\"../../core/mobile/ABMobileViewFormButtonCore\");\n\nmodule.exports = class ABMobileViewFormButton extends (\n   ABMobileViewFormButtonCore\n) {};\n","const ABMobileViewFormCheckboxCore = require(\"../../core/mobile/ABMobileViewFormCheckboxCore\");\n\nmodule.exports = class ABMobileViewFormCheckbox extends (\n   ABMobileViewFormCheckboxCore\n) {};\n","const ABMobileViewFormConnectCore = require(\"../../core/mobile/ABMobileViewFormConnectCore\");\n\n// const ABViewPropertyAddPage =\n//    require(\"./viewProperties/ABViewPropertyAddPage\").default;\n// const ABViewPropertyEditPage =\n//    require(\"./viewProperties/ABViewPropertyEditPage\").default;\n\n// const ABViewFormConnectPropertyComponentDefaults =\n//    ABMobileViewFormConnectCore.defaultValues();\n\n// const ABPopupSort = require(\"../../../ABDesigner/ab_work_object_workspace_popupSortFields\");\n\n// let FilterComponent = null;\n// let SortComponent = null;\n\nmodule.exports = class ABMobileViewFormConnect extends (\n   ABMobileViewFormConnectCore\n) {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      // Set filter value\n      this.__filterComponent = this.AB.filterComplexNew(\n         `${this.id}__filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.__filterComponent.fieldsLoad(\n         this.datasource ? this.datasource.fields() : [],\n         this.datasource ? this.datasource : null\n      );\n\n      this.__filterComponent.setValue(\n         this.settings.filterConditions\n         /* ??\n            ABViewFormConnectPropertyComponentDefaults.filterConditions\n         */\n      );\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // Does this do anything here?\n      // this.addPageTool.fromSettings(this.settings);\n      // this.editPageTool.fromSettings(this.settings);\n   }\n\n   // static get addPageProperty() {\n   //    return ABViewPropertyAddPage.propertyComponent(this.App, this.idBase);\n   // }\n\n   // static get editPageProperty() {\n   //    return ABViewPropertyEditPage.propertyComponent(this.App, this.idBase);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   // component() {\n   //    return new ABViewFormConnectComponent(this);\n   // }\n\n   // get addPageTool() {\n   //    if (this.__addPageTool == null)\n   //       this.__addPageTool = new ABViewPropertyAddPage();\n\n   //    return this.__addPageTool;\n   // }\n\n   // get editPageTool() {\n   //    if (this.__editPageTool == null)\n   //       this.__editPageTool = new ABViewPropertyEditPage();\n\n   //    return this.__editPageTool;\n   // }\n};\n","const ABMobileViewFormCustomCore = require(\"../../core/mobile/ABMobileViewFormCustomCore\");\n\nmodule.exports = class ABMobileViewFormCustom extends (\n   ABMobileViewFormCustomCore\n) {};\n","const ABMobileViewFormDateCore = require(\"../../core/mobile/ABMobileViewFormDateCore\");\n\nmodule.exports = class ABMobileViewFormDate extends ABMobileViewFormDateCore {};\n","const ABMobileViewFormDatetimeCore = require(\"../../core/mobile/ABMobileViewFormDatetimeCore\");\n\nmodule.exports = class ABMobileViewFormDatetime extends (\n   ABMobileViewFormDatetimeCore\n) {};\n","const ABMobileViewFormEmailCore = require(\"../../core/mobile/ABMobileViewFormEmailCore\");\n\nmodule.exports = class ABMobileViewFormEmail extends (\n   ABMobileViewFormEmailCore\n) {};\n","const ABMobileViewFormFileCore = require(\"../../core/mobile/ABMobileViewFormFileCore\");\n\nmodule.exports = class ABMobileViewFormFile extends ABMobileViewFormFileCore {};\n","const ABMobileViewFormFormulaCore = require(\"../../core/mobile/ABMobileViewFormFormulaCore\");\n\nmodule.exports = class ABMobileViewFormFormula extends (\n   ABMobileViewFormFormulaCore\n) {};\n","const ABMobileViewFormImageCore = require(\"../../core/mobile/ABMobileViewFormImageCore\");\n\nmodule.exports = class ABMobileViewFormImage extends (\n   ABMobileViewFormImageCore\n) {};\n","const ABMobileViewFormItemCore = require(\"../../core/mobile/ABMobileViewFormItemCore\");\n\nmodule.exports = class ABMobileViewFormItem extends ABMobileViewFormItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n   // warningsEval() {\n   //    super.warningsEval();\n   //    this.warningsMessage(`FormItem Test Warning.`);\n   // }\n};\n","const ABMobileViewFormNumberCore = require(\"../../core/mobile/ABMobileViewFormNumberCore\");\n\nmodule.exports = class ABMobileViewFormNumber extends (\n   ABMobileViewFormNumberCore\n) {};\n","const ABMobileViewFormReadonlyCore = require(\"../../core/mobile/ABMobileViewFormReadonlyCore\");\n\nmodule.exports = class ABMobileViewFormReadonly extends (\n   ABMobileViewFormReadonlyCore\n) {};\n","const ABMobileViewFormSelectMultipleCore = require(\"../../core/mobile/ABMobileViewFormSelectMultipleCore\");\n\nmodule.exports = class ABMobileViewFormSelectMultiple extends (\n   ABMobileViewFormSelectMultipleCore\n) {};\n","const ABMobileViewFormSelectSingleCore = require(\"../../core/mobile/ABMobileViewFormSelectSingleCore\");\n\nmodule.exports = class ABMobileViewFormSelectSingle extends (\n   ABMobileViewFormSelectSingleCore\n) {};\n","const ABMobileViewFormTextboxCore = require(\"../../core/mobile/ABMobileViewFormTextboxCore\");\n\nmodule.exports = class ABMobileViewFormTextbox extends (\n   ABMobileViewFormTextboxCore\n) {\n   // warningsEval() {\n   //    super.warningsEval();\n   //    this.warningsMessage(`${k} references an unknown Page.`);\n   // }\n};\n","const ABMobileViewLabelCore = require(\"../../core/mobile/ABMobileViewLabelCore\");\n// const ABViewLabelComponent = require(\"./viewComponent/ABViewLabelComponent\");\n\nmodule.exports = class ABMobileViewLabel extends ABMobileViewLabelCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   // component() {\n\n   //    // return new ABViewLabelComponent(this);\n   // }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.text) {\n         this.warningsMessage(\"has no text value set.\");\n      }\n   }\n};\n","const ABMobileViewListCore = require(\"../../core/mobile/ABMobileViewListCore\");\n\nmodule.exports = class ABMobileViewList extends ABMobileViewListCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n   warningsEval() {\n      super.warningsEval();\n\n      [\"linkPageAdd\", \"linkPageDetail\"].forEach((k) => {\n         if (this.settings[k]) {\n            let page = this.application.pageByID(this.settings[k], true);\n            if (!page) {\n               this.warningsMessage(`${k} references an unknown Page.`);\n            }\n         }\n      });\n   }\n};\n","/**\n * ABProcessLane\n * manages a lane in a Process Diagram.\n *\n * Lanes manage users in the system, and provide a way to lookup a SiteUser.\n */\nvar ABProcessLaneCore = require(\"../../core/process/ABProcessLaneCore\");\n\nmodule.exports = class ABProcessLane extends ABProcessLaneCore {\n   // constructor(attributes, process, application) {\n   //    super(attributes, process, application);\n   // }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   transferParticipantWhereToMe(id) {\n      var myParticipant = this.process.elementForDiagramID(id);\n      if (myParticipant) {\n         // if I haven't already set my where clause, and my Participant\n         // has one, then take it:\n         if (!this.stashed && myParticipant.stashed) {\n            var copyParams = [\n               \"stashed\",\n               \"useRole\",\n               \"role\",\n               \"useAccount\",\n               \"account\",\n            ];\n            copyParams.forEach((p) => {\n               var swap = this[p];\n               this[p] = myParticipant[p];\n               myParticipant[p] = swap; // ?? do this ??\n            });\n         }\n      }\n   }\n\n   /**\n    * fromElement()\n    * initialize this Lane's values from the given BPMN:Lane\n    * @param {BPMNParticipant}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n\n      // on creation, if I have child objects, then move the .where definition\n      // from my parent Participant to ME\n      if (element.children && element.children.length > 0) {\n         if (element.parent && element.parent.type == \"bpmn:Participant\") {\n            this.transferParticipantWhereToMe(element.parent.id);\n         }\n      } else {\n         // this info might just reside in the .parent.children[]\n         if (\n            element.parent &&\n            element.parent.children &&\n            element.parent.children.length > 0\n         ) {\n            element.parent.children.forEach((child) => {\n               if (child.type != \"bpmn:Lane\") {\n                  // if child has lanes\n                  if (\n                     child.businessObject.lanes &&\n                     child.businessObject.lanes.length > 0\n                  ) {\n                     // if lane is me\n                     var myLane = child.businessObject.lanes.find((l) => {\n                        return l.id == this.diagramID;\n                     });\n                     if (myLane) {\n                        this.transferParticipantWhereToMe(element.parent.id);\n\n                        // tell child I'm it's lane:\n                        var objChild = this.process.elementForDiagramID(\n                           child.id\n                        );\n                        if (objChild) {\n                           objChild.setLane(this);\n                        }\n                     }\n                  }\n               }\n            });\n         }\n      }\n\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Lane with information that was relevant\n    * from the provided BPMN:Lane\n    * @param {BPMNParticipant}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Participant_185ljkg\",\n                \"width\": 958,\n                \"height\": 240,\n                \"type\": \"bpmn:Participant\",\n                \"x\": -810,\n                \"y\": -2010,\n                \"order\": {\n                    \"level\": -2\n                },\n               \"businessObject\": {\n                    \"$type\": \"bpmn:Participant\",\n                    \"id\": \"Participant_185ljkg\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": -810,\n                            \"y\": -2010,\n                            \"width\": 958,\n                            \"height\": 240\n                        },\n                        \"id\": \"Participant_185ljkg_di\",\n                        \"isHorizontal\": true\n                    },\n                    \"processRef\": {\n                        \"$type\": \"bpmn:Process\",\n                        \"id\": \"Process_0x3sul5\"\n                    }\n                }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      // if I picked up a new task, inform it I am it's lane:\n   }\n};\n","/**\n * ABProcessParticipant\n * manages the participant lanes in a Process Diagram.\n *\n * Participants manage users in the system (when there are no lanes defined)\n * and provide a way to lookup a SiteUser.\n */\nvar ABProcessParticipantCore = require(\"../../core/process/ABProcessParticipantCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessParticipant extends ABProcessParticipantCore {\n   // constructor(attributes, process, AB) {\n   //    super(attributes, process, AB);\n   // }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   /**\n    * fromElement()\n    * initialize this Participant's values from the given BPMN:Participant\n    * @param {BPMNParticipant}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Participant with information that was relevant\n    * from the provided BPMN:Participant\n    * @param {BPMNParticipant}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Participant_185ljkg\",\n                \"width\": 958,\n                \"height\": 240,\n                \"type\": \"bpmn:Participant\",\n                \"x\": -810,\n                \"y\": -2010,\n                \"order\": {\n                    \"level\": -2\n                },\n               \"businessObject\": {\n                    \"$type\": \"bpmn:Participant\",\n                    \"id\": \"Participant_185ljkg\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": -810,\n                            \"y\": -2010,\n                            \"width\": 958,\n                            \"height\": 240\n                        },\n                        \"id\": \"Participant_185ljkg_di\",\n                        \"isHorizontal\": true\n                    },\n                    \"processRef\": {\n                        \"$type\": \"bpmn:Process\",\n                        \"id\": \"Process_0x3sul5\"\n                    }\n                }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      if (defElement.children) {\n         var laneIDs = [];\n         defElement.children.forEach((c) => {\n            if (c.type == \"bpmn:Lane\") {\n               laneIDs.push(c.id);\n            }\n         });\n         this.laneIDs = laneIDs;\n      }\n   }\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this objec.\n    * @return {json}\n    */\n   diagramProperties() {\n      return [\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n         },\n      ];\n   }\n};\n","const ABProcessElementCore = require(\"../../../core/process/tasks/ABProcessElementCore.js\");\n\nmodule.exports = class ABProcessElement extends ABProcessElementCore {\n   // constructor(attributes, process, AB, defaultValues) {\n   //    super(attributes, process, AB, defaultValues);\n\n   //    // listen\n   // }\n\n   /**\n    * @method destroy()\n    * remove this task definition.\n    * @return {Promise}\n    */\n   destroy() {\n      ////\n      //// TODO: once our core conversion is complete, this .save() can be\n      //// moved to ABProcessTaskCore, and our ABDefinition.save() can take\n      //// care of the proper method to save depending on the current Platform.\n      ////\n      // return this.toDefinition()\n      //     .destroy()\n\n      return super.destroy().then(() => {\n         return this.process.elementRemove(this);\n      });\n   }\n\n   isValid() {\n      /*\n        var validator = OP.Validation.validator();\n\n        // label/name must be unique:\n        var isNameUnique =\n            this.AB.processes((o) => {\n                return o.name.toLowerCase() == this.name.toLowerCase();\n            }).length == 0;\n        if (!isNameUnique) {\n            validator.addError(\n                \"name\",\n                L(\n                    \"ab.validation.object.name.unique\",\n                    `Process name must be unique (\"${this.name}\"\" already used in this Application)`\n                )\n            );\n        }\n\n        return validator;\n        */\n\n      // var isValid =\n      //     this.AB.processes((o) => {\n      //         return o.name.toLowerCase() == this.name.toLowerCase();\n      //     }).length == 0;\n      // return isValid;\n\n      return true;\n   }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   findLane(curr, cb) {\n      if (!curr) {\n         cb(null, null);\n         return;\n      }\n\n      // if current object has a LANE definition, use that one:\n      if (curr.lanes && curr.lanes.length > 0) {\n         cb(null, curr.lanes[0]);\n      } else if (curr.$type == \"bpmn:Participant\") {\n         // if the current is a Participant, take that one\n         cb(null, curr);\n      } else {\n         // else move upwards and check again:\n         curr = curr.$parent;\n         this.findLane(curr, cb);\n      }\n   }\n\n   setLane(Lane) {\n      this.laneDiagramID = Lane.diagramID;\n   }\n\n   /**\n    * fromElement()\n    * initialize this Task's values from the given BPMN:Element\n    * @param {BPMNElement}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Task with information that was relevant\n    * from the provided BPMN:Element\n    * @param {BPMNElement}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Task_08j07ni\",\n                \"width\": 100,\n                \"height\": 80,\n                \"type\": \"bpmn:SendTask\",\n                \"x\": 20,\n                \"y\": -2130,\n                \"order\": {\n                    \"level\": 5\n                },\n                \"businessObject\": {\n                    \"$type\": \"bpmn:SendTask\",\n                    \"id\": \"Task_08j07ni\",\n                    \"name\": \"ffff\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": 20,\n                            \"y\": -2130,\n                            \"width\": 100,\n                            \"height\": 80\n                        },\n                        \"id\": \"SendTask_0iidv6o_di\"\n                    }\n\n                    // Some elements (like EndEvents) have:\n                    .eventDefinitions: [\n                        {\n                            $type: \"actual bpmn:ElementType\",\n                            ...\n                        }\n                    ]\n                },\n                \"incoming\":[],\n                \"outgoing\":[]\n            }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      // our lane may have changed:\n      var currObj = defElement.businessObject;\n      this.findLane(currObj, (err, obj) => {\n         if (obj) {\n            this.laneDiagramID = obj.id;\n         } else {\n            // if my parent shape is a Participant, then use that:\n            if (\n               defElement.parent &&\n               defElement.parent.type == \"bpmn:Participant\"\n            ) {\n               this.laneDiagramID = defElement.parent.id;\n            } else {\n               this.laneDiagramID = null;\n            }\n         }\n      });\n   }\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties() {\n      const warnings = this.warnings();\n      return [\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n            warn: warnings.length ? warnings : null,\n         },\n      ];\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ui = {\n         id: id,\n         view: \"label\",\n         label: \"this task has not implement properties yet...\",\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {}\n\n   /**\n    * property()\n    * return the specific property value if it exists.\n    * @return {mixed} | undefined\n    */\n   property(id) {\n      if ($$(id)) {\n         return $$(id).getValue();\n      }\n   }\n\n   /**\n    * switchTo()\n    * replace this object with an instance of one of our child classes:\n    * @param {ABProcessTask*} child\n    *        an instance of the new Process Task we are replaced with.\n    * @param {string} propertiesID\n    *        the webix ui.id container for the properties panel.\n    */\n   switchTo(child, propertiesID) {\n      // remove myself from our containing process's elements\n      this.process.elementRemove(this);\n\n      // add the new Process WITH the same id\n      this.process.elementAdd(child);\n\n      // show the child properties:\n      child.propertiesShow(propertiesID);\n\n      this.emit(\"switchTo\", child);\n   }\n\n   /**\n    * @method warningsEval()\n    * re-evaluate our warnings for this Process Task.\n    * Most of our ProcessTasks need to also verify data related to\n    * other available tasks, so we need to call the onProcessReady()\n    * so we can access those values.\n    */\n   warningsEval() {\n      super.warningsEval();\n      this.onProcessReady();\n\n      // if this isn't an end type of task, then there must be\n      // > 0 next tasks\n      if (!this.isEndTask()) {\n         const myOutgoingConnections = this.process.connectionsOutgoing(\n            this.diagramID\n         );\n         if (myOutgoingConnections.length < 1) {\n            this.warningMessage(\"should have another task after this one\");\n         }\n      }\n   }\n\n   /**\n    * @method warningMessage(message)\n    * Save a warning message in a common format for our ProcessTasks.\n    */\n   warningMessage(msg, data = {}) {\n      let message = `${this.defaults.key}[${\n         this.label ? this.label : this.name\n      }]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABProcessEndCore = require(\"../../../core/process/tasks/ABProcessEndCore.js\");\n\nmodule.exports = class ABProcessEnd extends ABProcessEndCore {\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // An End Event doesn't perform any other actions\n   //         // than to signal it has successfully completed.\n   //         // But it provides no Additional Tasks to work on.\n   //         // for testing:\n   //         this.stateCompleted(instance);\n   //         this.log(instance, \"End Event Reached\");\n   //         resolve(true);\n   //     });\n   // }\n};\n","const ABProcessGatewayExclusiveCore = require(\"../../../core/process/tasks/ABProcessGatewayExclusiveCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessGatewayExclusive extends (\n   ABProcessGatewayExclusiveCore\n) {\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties() {\n      // the first entry is for the gateway element itself\n      var properties = super.diagramProperties();\n      /*[\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n         },\n      ];\n      */\n\n      // now add any additional updates for each of our connections:\n      var myOutgoingConnections = this.process.connectionsOutgoing(\n         this.diagramID\n      );\n      myOutgoingConnections.forEach((conn) => {\n         properties.push({\n            id: conn.id,\n            def: {\n               name: this.conditions[conn.id]?.label ?? \"\",\n            },\n         });\n      });\n      return properties;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      // make sure we have > 1 connection.\n      const myOutgoingConnections = this.process.connectionsOutgoing(\n         this.diagramID\n      );\n      if (myOutgoingConnections.length < 2) {\n         this.warningMessage(\"should have multiple outgoing connections\");\n      }\n\n      // make sure there is no more then 1 connection that doesn't have\n      // a condition:\n      let numCondWithOne = 0;\n      myOutgoingConnections.forEach((c) => {\n         if ((this.conditions[c.id]?.filterValue.rules?.length ?? 0) == 0) {\n            numCondWithOne++;\n         }\n      });\n\n      if (numCondWithOne > 1) {\n         this.warningMessage(\n            \"should not have more than 1 unfiltered connection.\"\n         );\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskEmailCore = require(\"../../../core/process/tasks/ABProcessTaskEmailCore.js\");\n\nmodule.exports = class ABProcessTaskEmail extends ABProcessTaskEmailCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   warningsEval() {\n      super.warningsEval();\n\n      // check for warnings:\n\n      if (!this.subject) {\n         this.warningMessage(\"is missing a subject\");\n      }\n\n      if (!this.message) {\n         this.warningMessage(\"is missing a message\");\n      }\n\n      this.verifySetting(\"to\");\n      this.verifySetting(\"from\");\n      this.verifyNextLane(\"to\");\n      if (this.from == \"0\") {\n         let thisLane = this.myLane();\n         if (!thisLane) {\n            this.warningMessage(\n               \"can not resolve the lane participant for [.from] field.\"\n            );\n         }\n      }\n      this.verifyRoleAccount(\"to\", \"toUsers\");\n      this.verifyRoleAccount(\"from\", \"fromUsers\");\n   }\n\n   /**\n    * @method verifySetting()\n    * make sure the given field key has a value assigned.\n    * @param {string} key\n    *        the property of this object to check. (to, from)\n    */\n   verifySetting(key) {\n      if (this[key] == \"\") {\n         this.warningMessage(`does not have a [${key}] setting.`);\n      }\n   }\n\n   /**\n    * @method verifyNextLane()\n    * make sure we can access a Lane for the given property key.\n    * The \"to\" field can reference the \"Next Participant\". This checks to\n    * see if we can reference a lane for the next task.\n    * @param {string} key\n    *        the property that has the value for Next Participant. [to]\n    */\n   verifyNextLane(key) {\n      if (this[key] === \"0\") {\n         // Next Participant\n         // we need to resolve our next task and see if we can pull the participant info from it.\n\n         let nextTasks = this.process.connectionNextTask(this);\n         let nextLanesResolved = true;\n         nextTasks.forEach((t) => {\n            let lane = t.myLane();\n            if (!lane) {\n               nextLanesResolved = false;\n            }\n         });\n         if (!nextLanesResolved || nextTasks.length == 0) {\n            this.warningMessage(\n               `can not resolve next lane participant for [${key}] field.`\n            );\n         }\n      }\n   }\n\n   /**\n    * @method verifyRoleAccount()\n    * Check to see if the provided property is set to use a Role/Account for\n    * the email, and make sure there are values set for what is chosen.\n    * @param {string} key\n    *        the property we are currently validating.\n    * @param {string} valKey\n    *        the property that contains the specific value object.\n    */\n   verifyRoleAccount(key, valKey) {\n      if (this[key] == \"1\") {\n         if (this[valKey]) {\n            if (this[valKey].useRole) {\n               if (this[valKey].role.length == 0) {\n                  this.warningMessage(`can not resolve [${key}] Role setting.`);\n               }\n            }\n            if (this[valKey].useAccount) {\n               if (this[valKey].account.length == 0) {\n                  this.warningMessage(\n                     `can not resolve [${key}] Account setting.`\n                  );\n               }\n            }\n            // TODO:\n            // if (this[valKey].userFields.length > 0) {\n            //    // how to know if this is a problem?\n            // }\n         }\n      }\n   }\n};\n","const ABProcessTaskServiceCore = require(\"../../../core/process/tasks/ABProcessTaskServiceCore.js\");\n\nmodule.exports = class ABProcessTaskService extends ABProcessTaskServiceCore {};\n","const AccountingBatchProcessingCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingBatchProcessingCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingBatchProcessing extends (\n   AccountingBatchProcessingCore\n) {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processBatchValue: `${id}_processBatchValue`,\n         objectBatch: `${id}_objectBatch`,\n         fieldBatchEntries: `${id}_fieldBatchEntries`,\n         fieldBatchFinancialPeriod: `${id}_fieldBatchFinancialPeriod`,\n         objectJE: `${id}_objectJE`,\n         fieldJEAccount: `${id}_fieldJEAccount`,\n         fieldJERC: `${id}_fieldJERC`,\n         fieldJEStatus: `${id}_fieldJEStatus`,\n         fieldJEStatusComplete: `${id}_fieldJEStatusComplete`,\n         objectBR: `${id}_objectBR`,\n         fieldBRFinancialPeriod: `${id}_fieldBRFinancialPeriod`,\n         fieldBRAccount: `${id}_fieldBRAccount`,\n         fieldBRRC: `${id}_fieldBRRC`,\n         fieldBREntries: `${id}_fieldBREntries`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      //\n      // set up field settings:\n      //\n\n      var blankField = {\n         id: 0,\n         value: L(\"Select a Field\"),\n      };\n      // blankField : generic Select a field entry\n\n      function defaultFields(objID) {\n         // create a new options array of Field Choices for the given obj.id\n\n         var fields = [blankField];\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object.fields().forEach((f) => {\n                  fields.push({ id: f.id, value: f.label, field: f });\n               });\n            }\n         }\n         return fields;\n      }\n\n      function updateFields(fieldPickers, fieldValues, defaultValue) {\n         // update the list of field select choices with the new field choices\n\n         fieldPickers.forEach((fp) => {\n            var picker = $$(fp);\n            if (picker) {\n               picker.define(\"options\", fieldValues);\n               // if (defaultValue) {\n               //    picker.define(\"value\", defaultValue);\n               // } else {\n               //    picker.define(\"value\", fieldValues[0].value);\n               // }\n               picker.refresh();\n               picker.show();\n            }\n         });\n      }\n\n      var batchFields = defaultFields(this.objectBatch);\n      // batchFields : the default list of fields for the Batch Object\n\n      var fieldPickersBatch = [\n         ids.fieldBatchEntries,\n         ids.fieldBatchFinancialPeriod,\n      ];\n      // fieldPickersBatch : the list of field selects to update for the Batch\n      //      object.\n\n      var jeFields = defaultFields(this.objectJE);\n      // jeFields : the default list of fields for the Journal Entry Object\n\n      var fieldPickersJE = [\n         ids.fieldJEAccount,\n         ids.fieldJERC,\n         ids.fieldJEStatus,\n      ];\n      // fieldPickersJE : the list of field selects to update for the Journal Entry\n      //      object.\n\n      function compileStatusValues(statusField) {\n         var values = [{ id: 0, value: L(\"Select the Complete Value\") }];\n         if (statusField && statusField.options) {\n            statusField.options().forEach((o) => {\n               values.push({ id: o.id, value: o.text });\n            });\n         }\n         return values;\n      }\n\n      function updatePickerStatusComplete(values) {\n         var wbxComplete = $$(ids.fieldJEStatusComplete);\n         if (wbxComplete) {\n            // update fieldJEStatusComplete options\n            wbxComplete.define(\"options\", values);\n            wbxComplete.refresh();\n            // show fieldJEStatusComplete\n            wbxComplete.show();\n         }\n      }\n\n      function onStatusComplete(newVal) {\n         // pull the ABField object from newValue\n         var jeEntryID = $$(ids.objectJE).getValue();\n         var jeEntry = objectList.find((o) => o.id == jeEntryID);\n         if (jeEntry && jeEntry.object) {\n            var statusField = jeEntry.object.fieldByID(newVal);\n            if (statusField && statusField.options) {\n               // get the options as an []\n               jeFieldStatusValues = compileStatusValues(statusField);\n\n               updatePickerStatusComplete(jeFieldStatusValues);\n            }\n         }\n      }\n\n      var jeFieldStatusValues = compileStatusValues();\n      // jeFieldStatusValues : the list of status options from the fieldJEStatus\n      //      selected entry.\n\n      var brFields = defaultFields(this.objectBR);\n      // jeFields : the default list of fields for the Journal Entry Object\n\n      var fieldPickersBR = [\n         ids.fieldBRFinancialPeriod,\n         ids.fieldBRAccount,\n         ids.fieldBRRC,\n         ids.fieldBREntries,\n      ];\n      // fieldPickersBR : the list of field selects to update for the Balance Record\n      //      object.\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processBatchValue,\n               view: \"select\",\n               label: L(\"Process Batch Value\"),\n               value: this.processBatchValue,\n               name: \"processBatchValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectBatch,\n               view: \"select\",\n               label: L(\"Batch Object\"),\n               value: this.objectBatch,\n               name: \"objectBatch\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        batchFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersBatch, batchFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldBatchEntries,\n               view: \"select\",\n               label: L(\"Batch->JE[]\"),\n               value: this.fieldBatchEntries,\n               name: \"fieldBatchEntries\",\n               options: batchFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBatchFinancialPeriod,\n               view: \"select\",\n               label: L(\"Batch->FinancialPeriod\"),\n               value: this.fieldBatchFinancialPeriod,\n               name: \"fieldBatchFinancialPeriod\",\n               options: batchFields,\n               hidden: true,\n            },\n            {\n               id: ids.objectJE,\n               view: \"select\",\n               label: L(\"Journal Entry Object\"),\n               value: this.objectJE,\n               name: \"objectJE\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of jeFields\n                        jeFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersJE, jeFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldJEAccount,\n               view: \"select\",\n               label: L(\"JE->Account\"),\n               value: this.fieldJEAccount,\n               name: \"fieldJEAccount\",\n               options: jeFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldJERC,\n               view: \"select\",\n               label: L(\"JE->RC\"),\n               value: this.fieldJERC,\n               name: \"fieldJERC\",\n               options: jeFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldJEStatus,\n               view: \"select\",\n               label: L(\"JE->Status\"),\n               value: this.fieldJEStatus,\n               name: \"fieldJEStatus\",\n               options: jeFields,\n               hidden: true,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        onStatusComplete(newVal);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldJEStatusComplete,\n               view: \"select\",\n               label: L(\"JE->Status->Complete\"),\n               value: this.fieldJEStatusComplete,\n               name: \"fieldJEStatusComplete\",\n               options: jeFieldStatusValues,\n               hidden: true,\n            },\n            {\n               id: ids.objectBR,\n               view: \"select\",\n               label: L(\"Balance Record\"),\n               value: this.objectBR,\n               name: \"objectBR\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of jeFields\n                        brFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersBR, brFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldBRFinancialPeriod,\n               view: \"select\",\n               label: L(\"BR->FP\"),\n               value: this.fieldBRFinancialPeriod,\n               name: \"fieldBRFinancialPeriod\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBRAccount,\n               view: \"select\",\n               label: L(\"BR->Account\"),\n               value: this.fieldBRAccount,\n               name: \"fieldBRAccount\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBRRC,\n               view: \"select\",\n               label: L(\"BR->RC\"),\n               value: this.fieldBRRC,\n               name: \"fieldBRRC\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBREntries,\n               view: \"select\",\n               label: L(\"BR->Entries\"),\n               value: this.fieldBREntries,\n               name: \"fieldBREntries\",\n               options: brFields,\n               hidden: true,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      // if there are already default values for our Objects,\n      // unhide the field selectors:\n      if (this.objectBatch && this.objectBatch != 0) {\n         updateFields(fieldPickersBatch, batchFields);\n      }\n\n      if (this.objectJE && this.objectJE != 0) {\n         updateFields(fieldPickersJE, jeFields);\n      }\n\n      if (this.fieldJEStatus) {\n         onStatusComplete(this.fieldJEStatus);\n      }\n\n      if (this.objectBR && this.objectBR != 0) {\n         updateFields(fieldPickersBR, brFields);\n      }\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingFPCloseCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingFPCloseCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingFPClose extends AccountingFPCloseCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processFPValue: `${id}_processFPValue`,\n         objectFP: `${id}_objectFP`,\n         objectGL: `${id}_objectGL`,\n         objectAcc: `${id}_objectAcc`,\n         fieldFPStart: `${id}_fieldFPStart`,\n         fieldFPOpen: `${id}_fieldFPOpen`,\n         fieldFPStatus: `${id}_fieldFPStatus`,\n         fieldFPActive: `${id}_fieldFPActive`,\n         fieldGLStarting: `${id}_fieldGLStarting`,\n         fieldGLRunning: `${id}_fieldGLRunning`,\n         fieldGLAccount: `${id}_fieldGLAccount`,\n         fieldGLRc: `${id}_fieldGLRc`,\n         fieldGLDebit: `${id}fieldGLDebit`,\n         fieldGLCredit: `${id}_fieldGLCredit`,\n         fieldAccType: `${id}_fieldAccType`,\n         fieldAccAsset: `${id}_fieldAccAsset`,\n         fieldAccExpense: `${id}_fieldAccExpense`,\n         fieldAccLiabilities: `${id}_fieldAccLiabilities`,\n         fieldAccEquity: `${id}_fieldAccEquity`,\n         fieldAccIncome: `${id}_fieldAccIncome`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getFieldOptions = (objID) => {\n         let fields = [\n            {\n               id: 0,\n               value: L(\"Select a Field\"),\n            },\n         ];\n\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object.fields().forEach((f) => {\n                  fields.push({ id: f.id, value: f.label, field: f });\n               });\n            }\n         }\n         return fields;\n      };\n\n      let getStatusFieldOptions = (statusFieldId) => {\n         let result = [];\n         let fpObject = this.AB.objectByID(this.objectFP);\n         if (!fpObject) return result;\n\n         let fpStatusField = fpObject.fieldByID(statusFieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let updateFPFields = (fpFields) => {\n         [ids.fieldFPStart, ids.fieldFPOpen, ids.fieldFPStatus].forEach(\n            (fieldGLElem) => {\n               $$(fieldGLElem).define(\"options\", fpFields);\n               $$(fieldGLElem).refresh();\n            }\n         );\n      };\n\n      let updateFPStatusFields = (fpStatusOptions) => {\n         $$(ids.fieldFPActive).define(\"options\", fpStatusOptions);\n         $$(ids.fieldFPActive).refresh();\n      };\n\n      let updateGLFields = (glFields) => {\n         [\n            ids.fieldGLRunning,\n            ids.fieldGLAccount,\n            ids.fieldGLRc,\n            ids.fieldGLDebit,\n            ids.fieldGLCredit,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", glFields);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateAccFields = (accFields) => {\n         $$(ids.fieldAccType).define(\"options\", accFields);\n         $$(ids.fieldAccType).refresh();\n      };\n\n      let updateAccTypeOptions = (accTypeOptions) => {\n         [\n            ids.fieldAccAsset,\n            ids.fieldAccExpense,\n            ids.fieldAccLiabilities,\n            ids.fieldAccEquity,\n            ids.fieldAccIncome,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", accTypeOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let getListOptions = (objectId, fieldId) => {\n         let result = [];\n         let object = this.AB.objectByID(objectId);\n         if (!object) return result;\n\n         let fpStatusField = object.fieldByID(fieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let fpFields = getFieldOptions(this.objectFP);\n      let glFields = getFieldOptions(this.objectGL);\n      let accFields = getFieldOptions(this.objectAcc);\n      let fpStatusFields = getStatusFieldOptions(this.fieldFPStatus);\n      let accTypeOptions = getListOptions(this.objectAcc, this.fieldAccType);\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 200,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processFPValue,\n               view: \"select\",\n               label: L(\"Process Fiscal Period Value\"),\n               value: this.processFPValue,\n               name: \"processFPValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectFP,\n               view: \"select\",\n               label: L(\"FP Object\"),\n               value: this.objectFP,\n               name: \"objectFP\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        fpFields = getFieldOptions(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFPFields(fpFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectGL,\n               view: \"select\",\n               label: L(\"GL Object\"),\n               value: this.objectGL,\n               name: \"objectGL\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        glFields = getFieldOptions(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateGLFields(glFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectAcc,\n               view: \"select\",\n               label: L(\"Account Object\"),\n               value: this.objectAcc,\n               name: \"objectAcc\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        accFields = getFieldOptions(newVal);\n                        updateAccFields(accFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPStart,\n               view: \"select\",\n               label: L(\"FP -> Start\"),\n               value: this.fieldFPStart,\n               name: \"fieldFPStart\",\n               options: fpFields,\n            },\n            {\n               id: ids.fieldFPOpen,\n               view: \"select\",\n               label: L(\"FP -> Open\"),\n               value: this.fieldFPOpen,\n               name: \"fieldFPOpen\",\n               options: fpFields,\n            },\n            {\n               id: ids.fieldFPStatus,\n               view: \"select\",\n               label: L(\"FP -> Status\"),\n               value: this.fieldFPStatus,\n               name: \"fieldFPStatus\",\n               options: fpFields,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        fpStatusFields = getStatusFieldOptions(newVal);\n                        updateFPStatusFields(fpStatusFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPActive,\n               view: \"select\",\n               label: L(\"FP -> Active\"),\n               value: this.fieldFPActive,\n               name: \"fieldFPActive\",\n               options: fpStatusFields,\n            },\n            {\n               id: ids.fieldGLStarting,\n               view: \"select\",\n               label: L(\"GL -> Starting BL\"),\n               value: this.fieldGLStarting,\n               name: \"fieldGLStarting\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLRunning,\n               view: \"select\",\n               label: L(\"GL -> Running BL\"),\n               value: this.fieldGLRunning,\n               name: \"fieldGLRunning\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLAccount,\n               view: \"select\",\n               label: L(\"GL -> Account\"),\n               value: this.fieldGLAccount,\n               name: \"fieldGLAccount\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLRc,\n               view: \"select\",\n               label: L(\"GL -> RC\"),\n               value: this.fieldGLRc,\n               name: \"fieldGLRc\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLDebit,\n               view: \"select\",\n               label: L(\"GL -> Debit\"),\n               value: this.fieldGLDebit,\n               name: \"fieldGLDebit\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLCredit,\n               view: \"select\",\n               label: L(\"GL -> Credit\"),\n               value: this.fieldGLCredit,\n               name: \"fieldGLCredit\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldAccType,\n               view: \"select\",\n               label: L(\"Acc -> Type\"),\n               value: this.fieldAccType,\n               name: \"fieldAccType\",\n               options: accFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeOptions = getListOptions(\n                           this.objectAcc || $$(ids.objectAcc).getValue(),\n                           newVal\n                        );\n                        updateAccTypeOptions(accTypeOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldAccAsset,\n               view: \"select\",\n               label: L(\"Acc -> Asset\"),\n               value: this.fieldAccAsset,\n               name: \"fieldAccAsset\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccExpense,\n               view: \"select\",\n               label: L(\"Acc -> Expense\"),\n               value: this.fieldAccExpense,\n               name: \"fieldAccExpense\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccLiabilities,\n               view: \"select\",\n               label: L(\"Acc -> Liabilities\"),\n               value: this.fieldAccLiabilities,\n               name: \"fieldAccLiabilities\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccEquity,\n               view: \"select\",\n               label: L(\"Acc -> Equity\"),\n               value: this.fieldAccEquity,\n               name: \"fieldAccEquity\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccIncome,\n               view: \"select\",\n               label: L(\"Acc -> Income\"),\n               value: this.fieldAccIncome,\n               name: \"fieldAccIncome\",\n               options: accTypeOptions,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingFPYearCloseCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingFPYearCloseCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingFPYearClose extends AccountingFPYearCloseCore {\n   ////\n   //// Process Instance Methods\n   ////\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processFPYearValue: `${id}_processFPYearValue`,\n         objectFPYear: `${id}_objectFPYear`,\n         objectFPMonth: `${id}_objectFPMonth`,\n         objectGL: `${id}_objectGL`,\n         objectAccount: `${id}_objectAccount`,\n         valueFundBalances: `${id}_valueFundBalances`,\n         valueNetIncome: `${id}_valueNetIncome`,\n         fieldFPYearStart: `${id}_fieldFPYearStart`,\n         fieldFPYearEnd: `${id}_fieldFPYearEnd`,\n         fieldFPYearStatus: `${id}_fieldFPYearStatus`,\n         fieldFPYearActive: `${id}_fieldFPYearActive`,\n         fieldFPMonthStart: `${id}_fieldFPMonthStart`,\n         fieldFPMonthEnd: `${id}_fieldFPMonthEnd`,\n         fieldGLStartBalance: `${id}_fieldGLStartBalance`,\n         fieldGLRunningBalance: `${id}_fieldGLRunningBalance`,\n         fieldGLrc: `${id}_fieldGLrc`,\n         fieldAccNumber: `${id}_fieldAccNumber`,\n         fieldAccType: `${id}_fieldAccType`,\n         fieldAccTypeIncome: `${id}_fieldAccTypeIncome`,\n         fieldAccTypeExpense: `${id}_fieldAccTypeExpense`,\n         fieldAccTypeEquity: `${id}_fieldAccTypeEquity`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getFieldOptions = (objID, fieldKey) => {\n         let fields = [\n            {\n               id: 0,\n               value: L(\"Select a Field\"),\n            },\n         ];\n\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object\n                  .fields((f) => f.key == fieldKey)\n                  .forEach((f) => {\n                     fields.push({ id: f.id, value: f.label, field: f });\n                  });\n            }\n         }\n         return fields;\n      };\n\n      let getListOptions = (objectId, fieldId) => {\n         let result = [];\n         let object = this.AB.objectByID(objectId);\n         if (!object) return result;\n\n         let fpStatusField = object.fieldByID(fieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let updateAccNumberFields = (accNumberFields) => {\n         $$(ids.fieldAccNumber).define(\"options\", accNumberFields);\n         $$(ids.fieldAccNumber).refresh();\n      };\n\n      let updateAccFields = (accFields) => {\n         $$(ids.fieldAccType).define(\"options\", accFields);\n         $$(ids.fieldAccType).refresh();\n      };\n\n      let updateAccTypeOptions = (accTypeOptions) => {\n         [\n            ids.fieldAccTypeIncome,\n            ids.fieldAccTypeExpense,\n            ids.fieldAccTypeEquity,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", accTypeOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateFPYearDateOptions = (fpYearDateOptions) => {\n         [ids.fieldFPYearStart, ids.fieldFPYearEnd].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", fpYearDateOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateFPYearStatusOptions = (fpYearStatusFields) => {\n         $$(ids.fieldFPYearStatus).define(\"options\", fpYearStatusFields);\n         $$(ids.fieldFPYearStatus).refresh();\n      };\n\n      let updateFPYearActiveOptions = (fpYearStatusOptions) => {\n         $$(ids.fieldFPYearActive).define(\"options\", fpYearStatusOptions);\n         $$(ids.fieldFPYearActive).refresh();\n      };\n\n      let updateFPMonthDateFields = (fpMonthDateOpts) => {\n         [ids.fieldFPMonthStart, ids.fieldFPMonthEnd].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", fpMonthDateOpts);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateGlNumberFields = (glNumberOptions) => {\n         [ids.fieldGLStartBalance, ids.fieldGLRunningBalance].forEach(\n            (fieldGLElem) => {\n               $$(fieldGLElem).define(\"options\", glNumberOptions);\n               $$(fieldGLElem).refresh();\n            }\n         );\n      };\n\n      let updateGlConnectFields = (glRcOptions) => {\n         $$(ids.fieldGLrc).define(\"options\", glRcOptions);\n         $$(ids.fieldGLrc).refresh();\n      };\n\n      let fpYearDateFields = getFieldOptions(this.objectFPYear, \"date\");\n      let fpYearStatusFields = getFieldOptions(this.objectFPYear, \"list\");\n      let fpYearStatusOptions = getListOptions(\n         this.objectFPYear,\n         this.fieldFPYearStatus\n      );\n      let fpMonthDateFields = getFieldOptions(this.objectFPMonth, \"date\");\n      let glNumberFields = getFieldOptions(this.objectGL, \"number\");\n      let glRcFields = getFieldOptions(this.objectGL, \"connectObject\");\n      let accNumberFields = getFieldOptions(this.objectAccount, \"number\");\n      let accTypeFields = getFieldOptions(this.objectAccount, \"list\");\n      let accTypeOptions = getListOptions(\n         this.objectAccount,\n         this.fieldAccType\n      );\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 200,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processFPYearValue,\n               view: \"select\",\n               label: L(\"Process Fiscal Period Year Value\"),\n               value: this.processFPYearValue,\n               name: \"processFPYearValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectFPYear,\n               view: \"select\",\n               label: L(\"FP Year Object\"),\n               value: this.objectFPYear,\n               name: \"objectFPYear\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpYearDateFields = getFieldOptions(newVal, \"date\");\n                        updateFPYearDateOptions(fpYearDateFields);\n\n                        accTypeFields = getFieldOptions(newVal, \"list\");\n                        updateFPYearStatusOptions(accTypeFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectFPMonth,\n               view: \"select\",\n               label: L(\"FP Month Object\"),\n               value: this.objectFPMonth,\n               name: \"objectFPMonth\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpMonthDateFields = getFieldOptions(newVal, \"date\");\n                        updateFPMonthDateFields(fpMonthDateFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectGL,\n               view: \"select\",\n               label: L(\"Balance Object\"),\n               value: this.objectGL,\n               name: \"objectGL\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        glNumberFields = getFieldOptions(newVal, \"number\");\n                        updateGlNumberFields(glNumberFields);\n\n                        glRcFields = getFieldOptions(newVal, \"connectObject\");\n                        updateGlConnectFields(glRcFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectAccount,\n               view: \"select\",\n               label: L(\"Account Object\"),\n               value: this.objectAccount,\n               name: \"objectAccount\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeFields = getFieldOptions(newVal, \"list\");\n                        updateAccFields(accTypeFields);\n\n                        accNumberFields = getFieldOptions(newVal, \"number\");\n                        updateAccNumberFields(accNumberFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.valueFundBalances,\n               view: \"text\",\n               label: L(\"Fund Balances Code\"),\n               value: this.valueFundBalances,\n               name: \"valueFundBalances\",\n            },\n            {\n               id: ids.valueNetIncome,\n               view: \"text\",\n               label: L(\"Net Income Code\"),\n               value: this.valueNetIncome,\n               name: \"valueNetIncome\",\n            },\n            {\n               id: ids.fieldFPYearStart,\n               view: \"select\",\n               label: L(\"FP Year -> Start\"),\n               value: this.fieldFPYearStart,\n               name: \"fieldFPYearStart\",\n               options: fpYearDateFields,\n            },\n            {\n               id: ids.fieldFPYearEnd,\n               view: \"select\",\n               label: L(\"FP Year -> End\"),\n               value: this.fieldFPYearEnd,\n               name: \"fieldFPYearEnd\",\n               options: fpYearDateFields,\n            },\n            {\n               id: ids.fieldFPYearStatus,\n               view: \"select\",\n               label: L(\"FP Year -> Status\"),\n               value: this.fieldFPYearStatus,\n               name: \"fieldFPYearStatus\",\n               options: fpYearStatusFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpYearStatusOptions = getListOptions(\n                           this.objectFPYear || $$(ids.objectFPYear).getValue(),\n                           newVal\n                        );\n                        updateFPYearActiveOptions(fpYearStatusOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPYearActive,\n               view: \"select\",\n               label: L(\"FP Year -> Active\"),\n               value: this.fieldFPYearActive,\n               name: \"fieldFPYearActive\",\n               options: fpYearStatusOptions,\n            },\n            {\n               id: ids.fieldFPMonthStart,\n               view: \"select\",\n               label: L(\"FP Month -> Start\"),\n               value: this.fieldFPMonthStart,\n               name: \"fieldFPMonthStart\",\n               options: fpMonthDateFields,\n            },\n            {\n               id: ids.fieldFPMonthEnd,\n               view: \"select\",\n               label: L(\"FP Month -> End\"),\n               value: this.fieldFPMonthEnd,\n               name: \"fieldFPMonthEnd\",\n               options: fpMonthDateFields,\n            },\n            {\n               id: ids.fieldGLStartBalance,\n               view: \"select\",\n               label: L(\"GL -> Start Balance\"),\n               value: this.fieldGLStartBalance,\n               name: \"fieldGLStartBalance\",\n               options: glNumberFields,\n            },\n            {\n               id: ids.fieldGLRunningBalance,\n               view: \"select\",\n               label: L(\"GL -> Running Balance\"),\n               value: this.fieldGLRunningBalance,\n               name: \"fieldGLRunningBalance\",\n               options: glNumberFields,\n            },\n            {\n               id: ids.fieldGLrc,\n               view: \"select\",\n               label: L(\"GL -> RC\"),\n               value: this.fieldGLrc,\n               name: \"fieldGLrc\",\n               options: glRcFields,\n            },\n            {\n               id: ids.fieldAccNumber,\n               view: \"select\",\n               label: L(\"Acc -> Account Number\"),\n               value: this.fieldAccNumber,\n               name: \"fieldAccNumber\",\n               options: accNumberFields,\n            },\n            {\n               id: ids.fieldAccType,\n               view: \"select\",\n               label: L(\"Acc -> Type\"),\n               value: this.fieldAccType,\n               name: \"fieldAccType\",\n               options: accTypeFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeOptions = getListOptions(\n                           this.objectAccount ||\n                              $$(ids.objectAccount).getValue(),\n                           newVal\n                        );\n                        updateAccTypeOptions(accTypeOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldAccTypeIncome,\n               view: \"select\",\n               label: L(\"Acc -> Income\"),\n               value: this.fieldAccTypeIncome,\n               name: \"fieldAccTypeIncome\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccTypeExpense,\n               view: \"select\",\n               label: L(\"Acc -> Expense\"),\n               value: this.fieldAccTypeExpense,\n               name: \"fieldAccTypeExpense\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccTypeEquity,\n               view: \"select\",\n               label: L(\"Acc -> Equity\"),\n               value: this.fieldAccTypeEquity,\n               name: \"fieldAccTypeEquity\",\n               options: accTypeOptions,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingJEArchiveCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingJEArchiveCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingJEArchive extends AccountingJEArchiveCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processBatchValue: `${id}_processBatchValue`,\n         objectBatch: `${id}_objectBatch`,\n         objectBalance: `${id}_objectBalance`,\n         objectJE: `${id}_objectJE`,\n         objectJEArchive: `${id}_objectJEArchive`,\n\n         fieldBatchFiscalMonth: `${id}_fieldBatchFiscalMonth`,\n         fieldJeAccount: `${id}_fieldJeAccount`,\n         fieldJeRC: `${id}_fieldJeRC`,\n         fieldJeArchiveBalance: `${id}_fieldJeArchiveBalance`,\n         fieldBrFiscalMonth: `${id}_fieldBrFiscalMonth`,\n         fieldBrAccount: `${id}_fieldBrAccount`,\n         fieldBrRC: `${id}_fieldBrRC`,\n\n         fieldsMatch: `${id}_fieldsMatch`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      let ids = this.propertyIDs(id);\n\n      let processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      let processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      let objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getConnectFieldOptions = (objectId) => {\n         let object = this.AB.objectByID(objectId);\n         if (!object) return [];\n\n         let options = object\n            .fields((f) => f.isConnection)\n            .map((f) => {\n               return {\n                  id: f.id,\n                  value: f.label,\n               };\n            });\n\n         options.unshift({\n            id: 0,\n            value: L(\"Select a Field\"),\n         });\n\n         return options;\n      };\n\n      let updateFields = (fieldPickers, fieldValues) => {\n         fieldPickers.forEach((fp) => {\n            var picker = $$(fp);\n            if (picker) {\n               picker.define(\"options\", fieldValues);\n               picker.refresh();\n               picker.show();\n            }\n         });\n      };\n\n      let refreshBatchFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldBatchFiscalMonth], options);\n      };\n\n      let refreshBRFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields(\n            [ids.fieldBrAccount, ids.fieldBrFiscalMonth, ids.fieldBrRC],\n            options\n         );\n      };\n\n      let refreshJeFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldJeAccount, ids.fieldJeRC], options);\n      };\n\n      let refreshJeArchiveFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldJeArchiveBalance], options);\n      };\n\n      let refreshFieldsMatch = () => {\n         let $fieldsMatch = $$(ids.fieldsMatch);\n         if (!$fieldsMatch) return;\n\n         // clear form\n         webix.ui([], $fieldsMatch);\n\n         let JEObj = this.AB.objectByID(this.objectJE);\n         if (!JEObj) return;\n\n         let JEArchiveObj = this.AB.objectByID(this.objectJEArchive);\n         if (!JEArchiveObj) return;\n\n         // create JE acrhive field options to the form\n         JEArchiveObj.fields().forEach((f) => {\n            let jeFields = [];\n\n            if (f.isConnection) {\n               jeFields = JEObj.fields((fJe) => {\n                  return (\n                     fJe.isConnection &&\n                     fJe.settings &&\n                     f.settings &&\n                     fJe.settings.linkObject == f.settings.linkObject &&\n                     fJe.settings.linkType == f.settings.linkType &&\n                     fJe.settings.linkViaType == f.settings.linkViaType &&\n                     fJe.settings.isCustomFK == f.settings.isCustomFK\n                  );\n               });\n            } else {\n               jeFields = JEObj.fields((fJe) => fJe.key == f.key);\n            }\n\n            jeFields = jeFields.map((fJe) => {\n               return {\n                  id: fJe.id,\n                  value: fJe.label,\n               };\n            });\n\n            $fieldsMatch.addView({\n               view: \"select\",\n               name: f.id,\n               label: f.label,\n               options: jeFields,\n            });\n         });\n\n         $fieldsMatch.setValues(this.fieldsMatch || {});\n      };\n\n      let fieldBatchList = getConnectFieldOptions(this.objectBatch);\n      let fieldBalanceList = getConnectFieldOptions(this.objectBalance);\n      let fieldJeList = getConnectFieldOptions(this.objectJE);\n      let fieldJeArchiveList = getConnectFieldOptions(this.objectJEArchive);\n\n      let ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 180,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processBatchValue,\n               view: \"select\",\n               label: L(\"Process Batch Value\"),\n               value: this.processBatchValue,\n               name: \"processBatchValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectBatch,\n               view: \"select\",\n               label: L(\"Batch Object\"),\n               value: this.objectBatch,\n               name: \"objectBatch\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectBatch = newVal;\n                     refreshBatchFields(newVal);\n                  },\n               },\n            },\n            {\n               id: ids.fieldBatchFiscalMonth,\n               view: \"select\",\n               label: L(\"Batch -> Fiscal Month\"),\n               value: this.fieldBatchFiscalMonth,\n               name: \"fieldBatchFiscalMonth\",\n               options: fieldBatchList,\n            },\n            {\n               id: ids.objectBalance,\n               view: \"select\",\n               label: L(\"BR Object\"),\n               value: this.objectBalance,\n               name: \"objectBalance\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectBalance = newVal;\n                     refreshBRFields(newVal);\n                  },\n               },\n            },\n            {\n               id: ids.fieldBrFiscalMonth,\n               view: \"select\",\n               label: L(\"BR -> Fiscal Month\"),\n               value: this.fieldBrFiscalMonth,\n               name: \"fieldBrFiscalMonth\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.fieldBrAccount,\n               view: \"select\",\n               label: L(\"BR -> Account\"),\n               value: this.fieldBrAccount,\n               name: \"fieldBrAccount\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.fieldBrRC,\n               view: \"select\",\n               label: L(\"BR -> RC\"),\n               value: this.fieldBrRC,\n               name: \"fieldBrRC\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.objectJE,\n               view: \"select\",\n               label: L(\"JE Object\"),\n               value: this.objectJE,\n               name: \"objectJE\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectJE = newVal;\n                     refreshJeFields(newVal);\n                     refreshFieldsMatch();\n                  },\n               },\n            },\n            {\n               id: ids.fieldJeAccount,\n               view: \"select\",\n               label: L(\"JE -> Account\"),\n               value: this.fieldJeAccount,\n               name: \"fieldJeAccount\",\n               options: fieldJeList,\n            },\n            {\n               id: ids.fieldJeRC,\n               view: \"select\",\n               label: L(\"JE -> RC\"),\n               value: this.fieldJeRC,\n               name: \"fieldJeRC\",\n               options: fieldJeList,\n            },\n            {\n               id: ids.objectJEArchive,\n               view: \"select\",\n               label: L(\"JE Archive Object\"),\n               value: this.objectJEArchive,\n               name: \"objectJEArchive\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectJEArchive = newVal;\n                     refreshJeArchiveFields(newVal);\n                     refreshFieldsMatch();\n                  },\n               },\n            },\n            {\n               id: ids.fieldJeArchiveBalance,\n               view: \"select\",\n               label: L(\"JE Archive -> BR\"),\n               value: this.fieldJeArchiveBalance,\n               name: \"fieldJeArchiveBalance\",\n               options: fieldJeArchiveList,\n            },\n            {\n               view: \"fieldset\",\n               label: \"Fields Matching\",\n               body: {\n                  id: ids.fieldsMatch,\n                  view: \"form\",\n                  borderless: true,\n                  elements: [],\n               },\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n\n      refreshFieldsMatch();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      let ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         if (s === \"fieldsMatch\") {\n            this[s] = $$(ids.fieldsMatch).getValues();\n         } else {\n            this[s] = this.property(ids[s]);\n         }\n      });\n   }\n};\n","const CalculateTaskCore = require(\"../../../core/process/tasks/ABProcessTaskServiceCalculateCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class CalculateTask extends CalculateTaskCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.formulaText) {\n         this.warningMessage(\"is missing a formula.\");\n      }\n\n      if (this.formulaText) {\n         const hash = {};\n         (this.process.processDataFields(this) || []).forEach((item) => {\n            hash[`{${item.label}}`] = item;\n         });\n\n         let exp = new RegExp(`{[^}]*}`, \"g\");\n         let entries = this.formulaText.match(exp) || [];\n         entries.forEach((entry) => {\n            if (!hash[entry]) {\n               this.warningMessage(\n                  `could not resolve process value [${entry}]`\n               );\n            }\n         });\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskServiceGetResetPasswordUrlCore = require(\"../../../core/process/tasks/ABProcessTaskServiceGetResetPasswordUrlCore.js\");\n\nmodule.exports = class ABProcessTaskServiceGetResetPasswordUrl extends (\n   ABProcessTaskServiceGetResetPasswordUrlCore\n) {\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.email) {\n         this.warningMessage(\"is missing the email address.\");\n      }\n\n      const processData = (this.process.processDataFields(this) ?? [])\n         .filter((item) => item.field?.key == \"email\")\n         .map((item) => {\n            return {\n               id: item.key,\n               value: item.label,\n            };\n         });\n\n      if (processData.length == 0) {\n         this.warningMessage(\"has no previous tasks exporting email fields.\");\n      }\n   }\n};\n","const InsertRecordTaskCore = require(\"../../../core/process/tasks/ABProcessTaskServiceInsertRecordCore.js\");\n\nmodule.exports = class InsertRecordTask extends InsertRecordTaskCore {\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.objectID) {\n         this.warningMessage(\"has no Object set.\");\n      }\n\n      const fv = Object.keys(this.fieldValues || {}) || [];\n      if (fv.length == 0) {\n         this.warningMessage(\"has no fields set\");\n      } else {\n         let isSet = false;\n         fv.forEach((f) => {\n            if (\n               this.fieldValues[f]?.set != \"0\" &&\n               this.fieldValues[f]?.value != null\n            ) {\n               isSet = true;\n            }\n         });\n         if (!isSet) {\n            this.warningMessage(\"has no fields set\");\n         }\n      }\n   }\n};\n","const ABProcessTaskServiceQueryCore = require(\"../../../core/process/tasks/ABProcessTaskServiceQueryCore.js\");\n\nconst ABQLManager = require(\"../../ql/ABQLManager.js\");\n\nmodule.exports = class ABProcessTaskServiceQuery extends (\n   ABProcessTaskServiceQueryCore\n) {\n   constructor(attributes, process, AB) {\n      super(attributes, process, AB);\n\n      this.attributes = attributes;\n   }\n\n   ABQLManager() {\n      return ABQLManager;\n   }\n\n   warnings() {\n      // first get all our embedded QL Command warnings\n      let qlWarnings = [];\n      if (this.qlObj) {\n         qlWarnings = qlWarnings.concat(this.qlObj.warnings());\n      }\n      // run the QL Warnings through our .warningMessage() to get a message\n      // that includes this task's name:\n      qlWarnings.forEach((w) => {\n         if (w?.message) this.warningMessage(w.message);\n      });\n      let myWarnings = super.warnings();\n      return myWarnings.filter((w) => w); // filter out any undefined.\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (this.qlObj) {\n         this.qlObj.warningsEval();\n      } else {\n         this.warningMessage(`has no Query defined.`);\n      }\n\n      if (!this.name) {\n         this.warningMessage(\"does not have a name.\", {\n            attributes: this.attributes,\n         });\n      }\n\n      let hasSave = false;\n      let curr = this.qlObj;\n      while (curr) {\n         if (curr.key === \"row_save\" || curr.key === \"set_save\") {\n            hasSave = true;\n            curr = null; // just stop here.\n         } else {\n            curr = curr.next;\n         }\n      }\n\n      if (!hasSave) {\n         this.warningMessage(\"requires at least one Save operation.\");\n      }\n   }\n};\n","const SubProcessCore = require(\"../../../core/process/tasks/ABProcessTaskSubProcessCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class SubProcess extends SubProcessCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   /*\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         isEnable: `${id}_isEnable`,\n         parameterId: `${id}_parameterId`,\n      };\n   }\n\n   /**\n    * @method propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    * /\n   propertiesShow(id) {\n      let ids = this.propertyIDs(id);\n\n      // Pull query tasks option list\n      let parameterOptions = (this.process.processDataFields(this) || []).map(\n         (item) => {\n            return {\n               id: item.key,\n               value: item.label,\n            };\n         }\n      );\n\n      let ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 120,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.isEnable,\n               view: \"switch\",\n               label: L(\"Enable\"),\n               value: this.isEnable,\n            },\n            {\n               id: ids.parameterId,\n               view: \"richselect\",\n               label: L(\"Repeat for\"),\n               options: parameterOptions,\n               value: this.parameterId,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * @method propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    * /\n   propertiesStash(id) {\n      let ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n      this.isEnable = this.property(ids.isEnable);\n      this.parameterId = this.property(ids.parameterId);\n   }\n   */\n\n   /**\n    * @method diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties(bpmnModeler) {\n      let props = super.diagramProperties();\n      props = props || [{}];\n      props[0].def = props[0].def || {};\n\n      if (this.parameterId != null) {\n         props[0].def = props[0].def || {};\n         props[0].def.loopCharacteristics = bpmnModeler\n            .get(\"moddle\")\n            .create(\"bpmn:MultiInstanceLoopCharacteristics\");\n         props[0].def.loopCharacteristics.isSequential = true;\n      }\n\n      return props;\n   }\n\n   /**\n    * @method onChange()\n    * update the current Task with information that was relevant\n    * from the provided BPMN:Element\n    * @param {BPMNElement}\n    */\n   onChange(defElement) {\n      let loopCharacteristics =\n         defElement.loopCharacteristics ||\n         defElement.businessObject.loopCharacteristics ||\n         {};\n\n      switch (loopCharacteristics.$type) {\n         case \"bpmn:MultiInstanceLoopCharacteristics\":\n            this.loopType = loopCharacteristics.isSequential\n               ? \"sequential\"\n               : \"parallel\";\n            break;\n         case \"bpmn:StandardLoopCharacteristics\":\n            this.loopType = \"looping\";\n            break;\n      }\n   }\n\n   /**\n    * @method destroy()\n    * destroy this sub process and inside tasks\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // reuse .destroy function of ABProcess\n      // to clear tasks within this sub process\n      return this.process.destroy.call(this);\n   }\n\n   /**\n    * @method save()\n    * persist this sub process\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   save() {\n      // reuse .save function of ABProcess\n      // to update tasks within this sub process\n      return this.process.save.call(this);\n   }\n\n   /**\n    * @method elementNewForModelDefinition()\n    * create a new process element defined by the given BPMN:Element\n    *\n    * the BPMN:Element definition comes from the BPMN Modeler when a new\n    * diagram element is created.\n    *\n    * @param {BPMN:Element} element\n    *        the BPMN modeler diagram element definition\n    * @return {ABProcessParticipant|ABProcessLane|ABProcessElement}\n    *\n    */\n   elementNewForModelDefinition(element) {\n      let task = this.AB.processElementNewForModelDefinition(element, this);\n\n      // Add a new task to this sub process\n      if (task) {\n         this.elementAdd(task);\n      }\n      return task;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this._unknownElementIDs || []).forEach((eID) => {\n         this.warningMessage(\n            `is referencing an unknown process element id[${eID}]`,\n            { process: this.id, eID }\n         );\n      });\n   }\n};\n","const ABProcessTaskUserCore = require(\"../../../core/process/tasks/ABProcessTaskUserCore.js\");\n\nmodule.exports = class ABProcessTaskUser extends ABProcessTaskUserCore {};\n","const ABProcessTaskUserApprovalCore = require(\"../../../core/process/tasks/ABProcessTaskUserApprovalCore.js\");\n\nmodule.exports = class ABProcessTaskUserApproval extends (\n   ABProcessTaskUserApprovalCore\n) {};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskUserExternalCore = require(\"../../../core/process/tasks/ABProcessTaskUserExternalCore.js\");\n\nmodule.exports = class ABProcessTaskUserExternal extends (\n   ABProcessTaskUserExternalCore\n) {};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTriggerCore = require(\"../../../core/process/tasks/ABProcessTriggerCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessTrigger extends ABProcessTriggerCore {};\n","const ABProcessTriggerLifecycleCore = require(\"../../../core/process/tasks/ABProcessTriggerLifecycleCore.js\");\n\nmodule.exports = class ABProcessTriggerLifecycle extends (\n   ABProcessTriggerLifecycleCore\n) {};\n","const ABProcessTriggerTimerCore = require(\"../../../core/process/tasks/ABProcessTriggerTimerCore.js\");\n\nconst START_URL = \"/process/timer/#id#/start\";\nconst STOP_URL = \"/process/timer/#id#/stop\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessTriggerTimer extends ABProcessTriggerTimerCore {\n   /**\n    * @method save()\n    * persist this instance of ABObject with it's parent ABApplication\n    * @return {Promise}\n    */\n   save() {\n      return (\n         Promise.resolve()\n            .then(() => super.save())\n            // Restart the timer\n            .then((result) => {\n               return this.AB.Network.put({\n                  url: (this.isEnabled ? START_URL : STOP_URL).replace(\n                     \"#id#\",\n                     this.id\n                  ),\n               });\n            })\n      );\n   }\n};\n","/*\n * ABQL\n *\n * An ABQL defines the base class for our AB Query Language Objects.\n * These classes share a common way to\n *   - parse input strings for commands\n *\n *\n */\nconst ABQLCore = require(\"../../core/ql/ABQLCore.js\");\nconst RowUpdater = require(\"../RowUpdater.js\").default;\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nclass ABQL extends ABQLCore {\n   constructor(attributes, parameterDefinitions, prevOP, task, AB) {\n      super(attributes, parameterDefinitions, prevOP, task, AB);\n\n      this.on(\"warning\", (message, data) => {\n         this._warnings.push({ message, data });\n      });\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      // const allColumns = row.getChildViews();\n      // allColumns.shift(); // remove selector\n      this.parameterDefinitions.forEach((pDef) => {\n         // const col = allColumns.shift();\n         const myID = this.uiID(id);\n\n         this.ids = this.toIDs(myID);\n         this.params = this.params ?? {};\n\n         let $uiCondition = null;\n\n         switch (pDef.type) {\n            case \"objectFields\":\n               this.params[pDef.name] = $$(this.ids.objectfields).getValue();\n\n               break;\n\n            case \"objectName\":\n               this.params[pDef.name] = $$(this.ids.objectname).getValue();\n\n               break;\n\n            case \"objectConditions\":\n            case \"objectValues\":\n               $uiCondition = $$(this.ids.condition);\n\n               if ($uiCondition) {\n                  const condition = $uiCondition.getValue();\n\n                  if (condition && condition !== \"\") {\n                     this.params[pDef.name] = JSON.parse(condition);\n                  }\n               }\n\n               break;\n\n            case \"taskParam\":\n               this.params[pDef.name] = $$(this.ids.taskparam).getValue();\n\n               break;\n         }\n      });\n   }\n\n   /*\n    * @method toIDs()\n    * generate a set of unique webix ids to use for our UI.\n    * @param {string} myID\n    *        the unique id generated by .uiID()\n    */\n   toIDs(myID) {\n      return {\n         condition: `${myID}_condition`,\n         objectfields: `${myID}_objectfields`,\n         objectname: `${myID}_objname`,\n         popup: `${myID}_popup`,\n         select: `${myID}_select`,\n         shorthand: `${myID}_shorthand`,\n         taskparam: `${myID}_taskparam`,\n         spacer: `${myID}_spacer`,\n      };\n   }\n\n   /**\n    * @method uiAddParamForDef()\n    * Add an operation parameter for each parameterDefinition we have defined.\n    * @param {obj} pDef\n    *        the current parameterDefinition entry we are creating the UI\n    *        for.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddParamForDef(pDef, id, ui) {\n      // params are added to a .col[] definition.\n      // if our ui isn't down to the current .col element, then drill down\n      if (!ui.cols) {\n         if (ui.rows) {\n            for (let i = 0; i < ui.rows.length; i++)\n               if (ui.rows[i].cols) {\n                  this.uiAddParamForDef(pDef, id, ui.rows[i]);\n\n                  break;\n               }\n         } else throw new Error(\"provided ui is not able to add a parameter!\");\n\n         return;\n      }\n\n      const paramUI = this.uiParamUI(pDef, id);\n\n      if (paramUI) {\n         // if we only have 1 param\n         if (this.parameterDefinitions.length === 1) {\n            ui.cols.pop();\n            ui.cols.push(paramUI);\n         }\n         // if we haven't already added a parameter\n         else {\n            // create a row stack of parameters:\n            if (ui.cols.length < 3)\n               ui.cols.push({\n                  rows: [paramUI],\n               });\n            // add to the current stack of parameters\n            else ui.cols[2].rows.push(paramUI);\n         }\n      }\n   }\n\n   /**\n    * @method uiAddNext()\n    * Add the next row selector for this operation:\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddNext(id, ui) {\n      const uiRow = this.uiNextRow(id);\n\n      // if we have a next operation defined, then add on the ui definitions\n      // for that operation:\n      if (this.next) {\n         this.next.uiAddParams(id, uiRow);\n         ui.rows.push(uiRow);\n         this.next.uiAddNext(id, ui);\n      }\n      // otherwise we just leave the selector:\n      else ui.rows.push(uiRow);\n   }\n\n   /**\n    * @method uiAddParams()\n    * Add operation parameter(s) for each parameterDefinition we have defined.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddParams(id, ui) {\n      this.parameterDefinitions.forEach((pDef) => {\n         this.uiAddParamForDef(pDef, id, ui);\n      });\n   }\n\n   /*\n    * @method uiID()\n    * generate a unique webix id for this operation.\n    * @param {string} id\n    *        the webix id of the base property.query holder\n    */\n   uiID(id) {\n      if (this.prevOP) return `${this.prevOP.uiID(id)}_${this.constructor.key}`;\n\n      return `${id}_${this.constructor.key}`;\n   }\n\n   /*\n    * uiXXX Operations:\n    * are UI building operations that are performed BEFORE the webix UI\n    * is generated.  They work by filling out a {ui} object definition\n    * that webix will eventually create into the DOM.\n    *\n    * viewXXX Operations:\n    * are UI building operations that are performed AFTER the webix UI\n    * is generated. They work by adding in child views to an existing\n    * DOM.\n    */\n\n   /**\n    * @method uiNextRow()\n    * return the webix UI definition for the next of UI chaining.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @return {obj}\n    */\n   uiNextRow(id) {\n      const nextOptions = this.NextQLOps ?? this.constructor.NextQLOps;\n      const options = nextOptions.map((op) => {\n         return { id: op.key, value: op.label };\n      });\n\n      options.unshift({ id: 0, value: L(\"choose next operation\") });\n\n      const myID = this.uiID(id);\n      const ids = this.toIDs(myID);\n\n      const uiRow = {\n         cols: [\n            {\n               id: ids.select,\n               view: \"select\",\n               value: this.next ? this.next.constructor.key : 0,\n               options: options,\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     const resetValue = () => {\n                        const select = $$(ids.select);\n\n                        select.blockEvent();\n                        select.setValue(oldValue);\n                        select.unblockEvent();\n                     };\n\n                     if (newValue === oldValue) return;\n\n                     const newOP = nextOptions.find(\n                        (op) => op.key === newValue\n                     );\n\n                     if (!newOP) {\n                        resetValue();\n\n                        return;\n                     }\n\n                     const thisRow = $$(ids.select).getParentView();\n                     const thisQuery = thisRow.getParentView();\n                     const addOP = () => {\n                        if (newOP) {\n                           const nextOP = new newOP(\n                              {},\n                              this,\n                              this.task,\n                              this.AB\n                           );\n\n                           this.next = nextOP;\n\n                           nextOP.viewAddParams(id, thisRow);\n                           nextOP.viewAddNext(id, thisQuery);\n                        }\n                     };\n\n                     // if there are rows after this one, then warn\n                     // about changing\n                     const allRows = thisQuery.getChildViews();\n\n                     if (allRows.length - 1 > allRows.indexOf(thisRow))\n                        webix.confirm({\n                           title: L(\"continue?\"),\n                           text: L(\n                              \"changing this rule will reset any following rules.\"\n                           ),\n                           ok: L(\"Yes\"),\n                           cancel: L(\"No\"),\n                           callback: (result) => {\n                              if (result) {\n                                 // remove the current additional Rows:\n                                 let ir = allRows.length - 1;\n\n                                 while (\n                                    allRows[ir].config.id !== thisRow.config.id\n                                 ) {\n                                    thisQuery.removeView(allRows[ir]);\n                                    ir--;\n                                 }\n\n                                 // now remove the parameters\n                                 const allCols = thisRow.getChildViews();\n\n                                 let ic = allCols.length;\n\n                                 while (ic > 1) {\n                                    thisRow.removeView(allCols[ic - 1]);\n                                    ic--;\n                                 }\n\n                                 addOP();\n                              } else resetValue();\n                           },\n                        });\n                     else addOP();\n                  },\n               },\n            },\n            {\n               id: ids.spacer,\n            },\n         ],\n      };\n\n      return uiRow;\n   }\n\n   uiNextRowSelectorRefresh(id) {\n      const $select = $$(this.ids.select);\n\n      if (!$select) return;\n\n      const uiNextRow = this.uiNextRow(id);\n\n      const uiNextCol =\n         uiNextRow.cols.filter((c) => c.id == $select.config.id)[0] ??\n         uiNextRow.cols[1];\n\n      if (uiNextCol) AB.Webix.ui(uiNextCol, $select);\n   }\n\n   /**\n    * @method uiParamUI()\n    * return the webix UI definition for the parameter entry of this current\n    * operation.\n    * @param {obj} pDef\n    *        the current parameterDefinition entry we are creating the UI\n    *        for.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @return {obj}\n    */\n   uiParamUI(pDef, id) {\n      const uiConfig = AB.Config.uiSettings();\n\n      let myID = this.uiID(id);\n\n      this.ids = this.toIDs(myID);\n\n      let paramUI = null;\n      let options = null;\n      let Filter = null;\n      let hashFieldIDs = null;\n      let initialCond = null;\n      let displayLabel = null;\n      let initialValue = null;\n      let Updater = null;\n      let popUp = null;\n\n      // now add the parameter\n      switch (pDef.type) {\n         case \"objectFields\":\n            // an objectFields parameter returns a select list of fields\n            // available on an Object.\n            if (this.object)\n               options = this.object.fields().map((f) => {\n                  return { id: f.id, value: f.label, icon: `fa fa-${f.icon}` };\n               });\n\n            options.unshift({\n               id: \"_PK\",\n               value: \"[PK]\",\n            });\n\n            // if not set, default .fieldID to the 1st entry in options\n            // so we will have a default.  In use, if a user sees the\n            // 1st item and continues on, then we will have chosen it.\n            if (!this.fieldID && options.length > 0) {\n               // act like it was selected:\n               this.params[pDef.name] = options[0].id;\n               this.paramChanged(pDef, id);\n            }\n\n            paramUI = {\n               id: this.ids.objectfields,\n               view: \"richselect\",\n               label: L(\"Field\"),\n               labelWidth: 70,\n               value: this.fieldID,\n               options: options,\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     // this.params = this.params ?? {};\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef, id);\n                     }\n                  },\n               },\n            };\n\n            break;\n\n         case \"objectName\":\n            // an objectName parameter returns a select list of available\n            // objects in this ABFactory.\n            options = this.AB.objects().map((o) => {\n               return { id: o.id, value: o.label };\n            });\n\n            if (!this.objectID && options.length > 0) {\n               this.objectID = options[0].id;\n               this.params[pDef.name] = this.objectID;\n               this.paramChanged(pDef);\n            }\n\n            paramUI = {\n               id: this.ids.objectname,\n               view: \"select\",\n               label: L(\"Data Source\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               value: this.objectID,\n               options: options,\n               on: {\n                  onChange: (newValue /*, oldValue */) => {\n                     this.params = this.params ?? {};\n\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef);\n                     }\n                  },\n               },\n            };\n\n            break;\n\n         case \"objectConditions\":\n            // objectConditions: returns a filter text summary, that when\n            // clicked, pops up a Filter Entry Popup.\n            // the actual value is stored in a hidden field.\n\n            // we will create a new FilterComplex() object to use for our\n            // filtering.\n            // Our goal is to create a special filter entry for each avaiable\n            // process data value that is available.\n            // A filter entry needs to look like:\n            // {\n            //     id: `{string}`,      // A unique id selector for this filter\n            //     name: `{string}`,    // the operation name displayed\n            //     type, {obj}          // an object defining the editor to show\n            //     fn: ()=>{}           // a function used for filtering elements\n            // }\n            //\n            // In our filters, we are assigning filters to EACH field by the\n            // field.id.  So the type definition needs to look like:\n            // {\n            //     \"uniqueID of the field (field.id)\" : {webixUI definition}\n            // }\n\n            Filter = this.AB.filterComplexNew(id);\n            hashFieldIDs = this.availableProcessDataFieldsHash();\n\n            if (this.object) {\n               Filter.fieldsLoad(this.object.fields(), this.object);\n               // NOTE: this will create default filters based upon the\n               // object fields() and their types\n\n               // Now we need to add in the Process Data Fields:\n               // for each Process Data Field that matches our same object\n               const foundFields = Object.keys(hashFieldIDs).map(\n                  (f) => hashFieldIDs[f]\n               );\n\n               Filter.processFieldsLoad(foundFields);\n               /*\n               (foundFields ?? []).forEach((processField) => {\n                  const type = {};\n                  if (processField.field) {\n                     type[processField.field.id] = {\n                        view: \"select\",\n                        options: [\n                           {\n                              id: \"empty\",\n                              value: \"choose option\"\n                           },\n                           {\n                              id: processField.key,\n                              value: `context(${processField.label})`\n                           }\n                        ]\n                     };\n                  } else {\n                     // if there is no .field, it is probably an embedded special field\n                     // like: .uuid\n                     const key = processField.key.split(\".\").pop();\n                     type[key] = {\n                        view: \"select\",\n                        options: [\n                           {\n                              id: \"empty\",\n                              value: \"choose option\"\n                           },\n                           {\n                              id: processField.key,\n                              value: `context(${processField.label})`\n                           }\n                        ]\n                     };\n                  }\n\n                  // add an \"equals\" and \"not equals\" filter for each:\n                  Filter.filterAdd([\n                     {\n                        id: `context_equals`,\n                        name: `equals`,\n                        type,\n                        fn: (a, b) => {\n                           return a === b;\n                        }\n                     },\n                     {\n                        id: `context_not_equal`,\n                        name: `not equals`,\n                        type,\n                        fn: (a, b) => {\n                           return a !== b;\n                        }\n                     }\n                  ]);\n\n               }); */\n            }\n\n            // every time the Filter \"saves\" it's data, it emits this event:\n            // take the given condition and store it in our hidden element.\n            Filter.on(\"save\", (condition) => {\n               // @param {obj} condition an object describing the filter\n               // condition.\n\n               this.params = this.params ?? {};\n               this.params[pDef.name] = condition;\n\n               const shortHand = $$(this.ids.shorthand);\n\n               shortHand.define({\n                  label: Filter.toShortHand(),\n               });\n               shortHand.refresh();\n\n               // NOTE: the hidden element is a text field, so convert the\n               // {condition object} => a string\n               const elCondition = $$(this.ids.condition);\n\n               elCondition.define({\n                  value: JSON.stringify(this.params[pDef.name]),\n               });\n               elCondition.refresh();\n            });\n\n            // create the initial condition value from our inputs.\n            initialCond = \"\";\n\n            if (this.params && this.params[pDef.name]) {\n               Filter.setValue(this.params[pDef.name]);\n               initialCond = JSON.stringify(this.params[pDef.name]);\n            } else {\n               Filter.setValue(null);\n            }\n\n            // what we show on the panel, is a text representation\n            // of the current condition.\n            displayLabel = Filter.toShortHand();\n\n            paramUI = {\n               rows: [\n                  {\n                     id: this.ids.shorthand,\n                     view: \"button\",\n                     label: displayLabel,\n                     on: {\n                        onItemClick: function () {\n                           Filter.popUp(this.$view, null, {\n                              pos: \"center\",\n                           });\n                        },\n                     },\n                  },\n                  // have a hidden field to contain the condition\n                  // value we will parse out later\n                  {\n                     id: this.ids.condition,\n                     view: \"text\",\n                     value: initialCond,\n                     hidden: true,\n                  },\n               ],\n            };\n\n            break;\n\n         case \"objectValues\":\n            // objectValues : shows a condenced textual representation of the\n            // field => value changes.  Clicking on the text will show a popup\n            // that allows you to add/remove additional field updates for\n            // the current object.\n\n            initialValue = \"\";\n            Updater = new RowUpdater(myID, this.AB);\n\n            if (this.object) Updater.objectLoad(this.object);\n\n            // Set processed data key to value options\n            Updater.setExtendedOptions(\n               (this.task.process.processDataFields(this.task) ?? []).map(\n                  (item) => {\n                     return {\n                        id: item.key,\n                        value: item.label,\n                     };\n                  }\n               )\n            );\n\n            // NOTE: .setValue() must be called once the RowUpdater is already\n            // displayed.  See the end of popUp() below:\n            if (this.params && this.params[pDef.name]) {\n               Updater.setValue(this.params[pDef.name]);\n               initialValue = JSON.stringify(this.params[pDef.name]);\n            }\n\n            popUp = () => {\n               // show the RowUpdater in a popup:\n               const ui = {\n                  id: this.ids.popup,\n                  view: \"popup\",\n                  position: \"center\",\n                  minWidth: 700,\n                  modal: true,\n                  resize: true,\n                  body: {\n                     rows: [\n                        {\n                           height: 30,\n                           borderless: true,\n                           cols: [\n                              { fillspace: true },\n                              {\n                                 view: \"button\",\n                                 value: \"X\",\n                                 width: 30,\n                                 click: () => {\n                                    $$(this.ids.popup).hide();\n                                 },\n                              },\n                           ],\n                        },\n                        Updater.ui(),\n                        {\n                           view: \"button\",\n                           value: L(\"Save\"),\n                           css: \"webix_primary\",\n                           click: () => {\n                              this.params = this.params ?? {};\n                              this.params[pDef.name] = Updater.getValue();\n                              const sh = $$(this.ids.shorthand);\n\n                              sh.define({\n                                 badge: this.params[pDef.name].length,\n                              });\n                              sh.refresh();\n\n                              const cond = $$(this.ids.condition);\n\n                              cond.define({\n                                 value: JSON.stringify(this.params[pDef.name]),\n                              });\n                              cond.refresh();\n\n                              $$(this.ids.popup).hide();\n                           },\n                        },\n                     ],\n                  },\n               };\n\n               // create and show the popup\n               this._myPopup = webix.ui(ui);\n               this._myPopup.show();\n\n               // NOTE: on a RowUpdater, the values need to be set\n               // AFTER it is displayed:\n               if (this.params && this.params[pDef.name])\n                  Updater.setValue(this.params[pDef.name]);\n            };\n\n            paramUI = {\n               rows: [\n                  // the textual shorthand for these values\n                  {\n                     id: this.ids.shorthand,\n                     view: \"button\",\n                     label: L(\"Update Popout\"),\n                     badge: this.params[pDef.name]?.length,\n                     on: {\n                        onItemClick: () => {\n                           popUp();\n                        },\n                     },\n                  },\n                  // the hidden field that contains the results\n                  {\n                     id: this.ids.condition,\n                     view: \"text\",\n                     value: initialValue,\n                     hidden: true,\n                  },\n               ],\n            };\n\n            break;\n\n         case \"taskParam\":\n            paramUI = {\n               id: this.ids.taskparam,\n               view: \"text\",\n               label: L(\"Variable\"),\n               labelWidth: 70,\n               value: this.params[pDef.name],\n               placeholder: L(\"Enter parameter name\"),\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     // this.params = this.params ?? {};\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef, id);\n                     }\n                  },\n               },\n            };\n\n            break;\n      }\n\n      return paramUI;\n   }\n\n   /**\n    * @method viewAddNext()\n    * Add the next selector row After this Operation:\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {webixNode} topView\n    *        the current webix node that needs this view added to\n    *        NOTE: this should be the top container that is adding a new\n    *        row for each operation.\n    */\n   viewAddNext(id, topView) {\n      const uiRow = this.uiNextRow(id);\n\n      topView.addView(uiRow);\n   }\n\n   /**\n    * @method viewAddParams()\n    * Add operation parameter(s) for each parameterDefinition we have defined.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {webixNode} rowView\n    *        the current webix node that needs this view added to\n    *        NOTE: this should be the ROW that the parameters are added to\n    */\n   viewAddParams(id, rowView) {\n      const params = [];\n\n      this.parameterDefinitions.forEach((pDef) => {\n         // get the definition from .uiParamUI()\n         params.push(this.uiParamUI(pDef, id));\n      });\n\n      let toInsert = null;\n\n      // stack parameters in a row if there are more than 1\n      if (params.length > 1)\n         toInsert = {\n            rows: params,\n         };\n      else toInsert = params.pop();\n\n      if (toInsert) {\n         rowView.removeView(rowView.getChildViews()[1]);\n         rowView.addView(toInsert);\n      }\n   }\n\n   warnings() {\n      let myWarnings = this._warnings || [];\n      if (this.next)\n         myWarnings = myWarnings.concat(this.next.warnings()).filter((w) => w);\n      return this.AB.uniq(myWarnings);\n   }\n\n   warningsEval() {\n      this._warnings = [];\n      if (this.next) this.next.warningsEval();\n   }\n\n   // warningsAll() {\n   //    let myWarnings = this.warnings();\n   //    if (this.next) {\n   //       myWarnings = myWarnings.concat(this.next.warningsAll());\n   //    }\n   //    return myWarnings;\n   // }\n\n   /**\n    * @method warningMessage(message)\n    * Save a warning message in a common format for our ProcessTasks.\n    */\n   warningMessage(message) {\n      // this.emit(\"warning\", `${this.key}: ${message}`);\n      this._warnings = this._warnings || [];\n      this._warnings.push({ message: `${this.key}: ${message}` });\n   }\n\n   ////\n   //// QueryString Parser routines:\n   ////\n}\n\nmodule.exports = ABQL;\n","/*\n * ABQLFind\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\nconst ABQLFindCore = require(\"../../core/ql/ABQLFindCore.js\");\n\nclass ABQLFind extends ABQLFindCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, ParameterDefinitions, prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLFind;\n","/*\n * ABQLManager\n *\n * An interface for managing the different ABQL Operations available in our\n * AppBuilder.\n *\n */\n\nconst ABQLManagerCore = require(\"../../core/ql/ABQLManagerCore.js\");\nconst ABQLRootObject = require(\"./ABQLRootObject.js\");\n\nconst ABQLManager = {\n   /**\n    * @method fromAttributes()\n    * return an {ABQL} object that represents the given attributes that\n    * were saved from the previous .toObj()\n    * @param {object} attributes\n    *\t\t  the values returned from the previous .toObj() call\n    * @param {ABProcessTask***} task\n    *\t\t  the current ABProcessTaskServiceQuery that contains this QL\n    * @param {ABFactory} AB\n    *\t\t  the current {ABFactory} active for this interface.\n    * @return {ABQL} | null\n    */\n   fromAttributes: ABQLManagerCore.fromAttributes,\n\n   /**\n    * @method ids()\n    * return a set of unique webix ids for the ui portions of this object.\n    * @param {string} id\n    *\t\t  the webix base id of the parameters panel.\n    * @return {object}\n    */\n   ids: (id) => {\n      return {\n         root: `${id}_root`,\n         select: `${id}_root_select`,\n         options: `${id}_root_options`,\n      };\n   },\n\n   /**\n    * @method builder\n    * return a UI component like object that will display the QL builder.\n    * The component will support:\n    *\t\t.ui(id) : returns a webix ui definition for the current builder\n    *\t\t.init(id) : performs any special actions to prepare the webix ui\n    * @param {object} rootOP\n    *\t\t  the root ABQLxxxx operation\n    * @param {ABProcessTask***} task\n    *\t\t  the current Process Task that is requesting the data.\n    * @param {ABFactory} AB\n    *\t\t  the {ABFactory} active for this display.\n    * @return {object}\n    */\n   builder: (rootOP, task, AB) => {\n      // const rootOP = this.fromAttributes(attributes, task, AB);\n      // const L = (...params) => AB.Multilingual.label(...params);\n\n      return {\n         ui: (id) => {\n            rootOP = rootOP ?? new ABQLRootObject({}, task, AB);\n\n            const ids = ABQLManager.ids(id);\n            const ui = {\n               rows: [\n                  {\n                     id: ids.root,\n                     cols: [],\n                  },\n               ],\n            };\n\n            rootOP.uiAddParams(id, ui);\n            rootOP.uiAddNext(id, ui);\n\n            return ui;\n         },\n         init: (id) => {},\n      };\n   },\n\n   /**\n    * @method parse\n    * step through the current properties panel and decode the QL objects\n    * and their parameters.\n    * Return the .toOBJ() attributes definition as a result.\n    * @param {string} id\n    *\t\t  the webix base id of the parameters panel.\n    * @param {ABProcessTask***} task\n    *\t\t  the current Process Task that is requesting the data.\n    * @param {ABFactory} AB\n    *\t\t  the {ABFactory} object that is currently active.\n    * @return {object}\n    */\n   parse: (id, task, AB) => {\n      const ids = ABQLManager.ids(id);\n      const root = $$(ids.root);\n\n      if (!root) {\n         console.warn(\"ABQLManager.parse(): unable to find root element\");\n\n         return;\n      }\n\n      // get all the input rows\n      const rows = root.getParentView().getChildViews();\n\n      const parseCurrent = (rows, options, prevOP) => {\n         if (rows.length === 0) return null;\n\n         const row = rows.shift();\n\n         // get which operation was selected\n         // find the operation selector (skip any indents)\n         const views = row.getChildViews();\n\n         let selector = views.shift();\n\n         while (!selector?.getValue) selector = views.shift();\n\n         const value = selector.getValue();\n\n         // figure out the QLOP object\n         const OP = options.find((o) => {\n            return o.key === value || o.key === ABQLRootObject.key;\n         });\n\n         if (OP) {\n            let currOP = null;\n\n            if (prevOP) currOP = new OP({}, prevOP, task, AB);\n            else currOP = new OP({}, task, AB);\n\n            // now get currOP to initialize from it's parameters:\n            currOP.parseRow(row, id);\n\n            // carry forward any .object info if not already established\n            // by the .parseRow():\n            if (!currOP.object && prevOP) {\n               currOP.object = prevOP.object;\n               currOP.objectID = currOP.object?.id ?? null;\n            }\n\n            const nextRow = parseCurrent(\n               rows,\n               currOP.NextQLOps ?? currOP.constructor.NextQLOps,\n               currOP\n            );\n\n            currOP.next = nextRow;\n\n            return currOP;\n         }\n\n         return null;\n      };\n\n      const operation = parseCurrent(rows, ABQLManagerCore.QLOps, null);\n\n      return operation;\n   },\n};\n\nmodule.exports = ABQLManager;\n","/*\n * ABQLRootObject\n *\n * An ABQL defines a Query Language Operation. A QL Operation\n * is intended to be evaluated at run time and return a value that can be\n * assigned to form value or an object.\n *\n *\n */\n\nconst ABQLRootObjectCore = require(\"../../core/ql/ABQLRootObjectCore.js\");\n\nclass ABQLObject extends ABQLRootObjectCore {\n   // constructor(attributes, task, application) {\n   //     // NOTE: keep this so we can insert the prevOp === null\n   //     super(attributes, ParameterDefinitions, null, task, application);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"name\") {\n         this.objectID = this.params[pDef.name];\n         this.object = this.objectLookup(this.objectID);\n\n         // ?? is this correct?\n         // if we already have created a .next operation, and we have\n         // just changed our .object, pass that information forward.\n         if (this.next) this.next.object = this.object;\n      }\n   }\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      // for an Object operation, we need to set our .objectID after\n      // the values are parsed.\n\n      if (this.params.name) {\n         this.objectID = this.params.name;\n         this.object = this.objectLookup(this.params.name);\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (!this.object) {\n         this.warningMessage(\"has no object set.\", {\n            objectID: this.objectID,\n         });\n      }\n   }\n}\n\nmodule.exports = ABQLObject;\n","const ABQLRowPluckCore = require(\"../../core/ql/ABQLRowPluckCore.js\");\n\nclass ABQLRowPluck extends ABQLRowPluckCore {\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef, id) {\n      super.paramChanged(pDef);\n\n      // Re-generate next select options\n      if (pDef.name === \"fieldID\") this.uiNextRowSelectorRefresh(id);\n   }\n}\n\nmodule.exports = ABQLRowPluck;\n","/*\n * ABQLRowSave\n *\n * An ABQLRowSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLRowSaveCore = require(\"../../core/ql/ABQLRowSaveCore.js\");\n\nclass ABQLRowSave extends ABQLRowSaveCore {\n   paramChanged(pDef, id) {\n      super.paramChanged(pDef);\n   }\n}\n\nmodule.exports = ABQLRowSave;\n","/*\n * ABQLRowUpdate\n *\n * An ABQLRow Update allows you to update the values on the current\n * Row of data.\n *\n */\n\nconst ABQLRowUpdateCore = require(\"../../core/ql/ABQLRowUpdateCore.js\");\n\nclass ABQLRowUpdate extends ABQLRowUpdateCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, ParameterDefinitions, prevOP, task, application);\n   //     // #Hack! : when an Operation provides the same .NextQlOps that it\n   //     // was defined in, we can't require it again ==> circular dependency.\n   //     // so we manually set it here from the operation that created us:\n   //     this.constructor.NextQLOps = prevOP.constructor.NextQLOps;\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLRowUpdate;\n","/*\n * ABQLSetFirst\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQLSetFirstCore = require(\"../../core/ql/ABQLSetFirstCore.js\");\n\nclass ABQLSetFirst extends ABQLSetFirstCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLSetFirst;\n","/*\n * ABQLSetPluck\n *\n * An ABQLSetPluck can process a set (array) of data and pluck out a specified\n * field from each row to then make an array of values that only contain that \n * field.\n * \n * Example: \narray = [\n {\n\tname: \"Neo\",\n\temail: \"neo@thematrix.com\",\n\trelationships: [ { morpheous}, {trinity} ]\n },\n {\n\tname: \"trinity\",\n\temail: \"trinity@thematrix.com\",\n\trelationships: [ {neo}, {morpheous} ]\n },\n {\n\tname: \"morpheous\",\n\temail: \"morpheous@thematrix.com\",\n\trelationships: [ {neo}, {trinity}]\n }\n\n]\n\npluck(\"email\") :\n\t[\n\t\t\"neo@thematrix.com\",\n\t\t\"trinity@thematrix.com\",\n\t\t\"morpheous@thematrix.com\"\n\t]\n\npluck(\"relationships\"):\n\t[\n\t\t{neo},\n\t\t{trinity},\n\t\t{morpheous}\n\t]\n *\n */\n\nconst ABQLSetPluckCore = require(\"../../core/ql/ABQLSetPluckCore.js\");\n\nclass ABQLSetPluck extends ABQLSetPluckCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"fieldID\") {\n         // debugger;\n         this.fieldID = this.params[pDef.name];\n         // v2 method:\n         // this.field = this.object.fieldByID(this.fieldID);\n         this.field = this.object.fieldByID(this.fieldID);\n\n         // v2 method:\n         // if (this.field && this.field.isConnected) {\n         if (this.field && this.field.key === \"connectObject\") {\n            this.objectOut = this.field.datasourceLink;\n            this.objectOutID = this.objectOut.id;\n\n            // ?? is this correct?\n            // if we already have created a .next operation, and we have\n            // just changed our .object, pass that information forward.\n            if (this.next) this.next.object = this.objectOut;\n         }\n      }\n   }\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * NOTE: in this process our .object and .objectOut isn't as simple\n    * as the other QL node types.  We'll have to interpolate our values\n    * from the given fieldID in our property panel.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      this.fieldID = this.params.fieldID;\n\n      // we now have to build backwards from the current fieldID to set our\n      // relevant .object and .objectOut\n      this.AB.objects((o) => {\n         if (!this.field) {\n            // const field = o.fieldByID(this.fieldID);\n            const field = o.fieldByID(this.fieldID);\n\n            if (field) this.field = field;\n         }\n      });\n\n      if (this.field) {\n         this.object = this.field.object;\n\n         // v2 method:\n         // if (this.field.isConnected) {\n         if (this.field && this.field.key === \"connectObject\") {\n            this.objectOut = this.field.datasourceLink;\n            this.objectOutID = this.objectOut.id;\n         }\n      }\n   }\n}\n\nmodule.exports = ABQLSetPluck;\n","/*\n * ABQLSetSave\n *\n * An ABQLSetSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLSetSaveCore = require(\"../../core/ql/ABQLSetSaveCore.js\");\n\nclass ABQLSetSave extends ABQLSetSaveCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"task_param\") {\n         this.taskParam = this.params[pDef.name];\n      }\n   }\n\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      this.taskParam = this.params[\"task_param\"];\n\n      if (!this.registered) {\n         this.task.registerDatasource(this);\n         this.registered = true;\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (!this.taskParam || this.taskParam === \"\") {\n         this.warningMessage(\"requires a name to save our data as.\");\n      }\n   }\n}\n\nmodule.exports = ABQLSetSave;\n","const ABViewCore = require(\"../../core/views/ABViewCore.js\");\nconst ABViewComponent = require(\"./viewComponent/ABViewComponent\").default;\n\nmodule.exports = class ABView extends ABViewCore {\n   // constructor(attributes, application, parent) {\n   //    super(attributes, application, parent);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewComponent(this);\n   }\n\n   /*\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      // views not allowed to drop onto this View:\n      var viewsToIgnore = [\n         \"view\",\n         \"page\",\n         \"formpanel\",\n         \"viewcontainer\",\n         // not allowed Detail's widgets\n         \"detailcheckbox\",\n         \"detailcustom\",\n         \"detailconnect\",\n         \"detailimage\",\n         \"detailselectivity\",\n         \"detailtext\",\n         \"detailtree\",\n         // not allowed Form's widgets\n         \"button\",\n         \"checkbox\",\n         \"connect\",\n         \"datepicker\",\n         \"fieldcustom\",\n         \"textbox\",\n         \"numberbox\",\n         \"selectsingle\",\n         \"selectmultiple\",\n         \"formtree\",\n         \"fieldreadonly\",\n         // not allowed Chart's Widgets\n         \"pie\",\n         \"bar\",\n         \"line\",\n         \"area\",\n         // not allowed Report page\n         \"report\",\n         \"reportPage\",\n         \"reportPanel\",\n      ];\n\n      var allComponents = this.application.viewAll(); // ABViewManager.allViews();\n      var allowedComponents = allComponents.filter((c) => {\n         return viewsToIgnore.indexOf(c.common().key) == -1;\n      });\n\n      return allowedComponents;\n   }\n\n   changePage(pageId) {\n      this.emit(\"changePage\", pageId);\n   }\n\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = super.warningsAll();\n      this.views().forEach((v) => {\n         allWarnings = allWarnings.concat(v.warningsAll());\n      });\n\n      (this.pages?.() || []).forEach((p) => {\n         allWarnings = allWarnings.concat(p.warningsAll());\n      });\n\n      return allWarnings.filter((w) => w);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      (this.__missingViews || []).forEach((id) => {\n         this.warningsMessage(`references unknown View[${id}]`);\n      });\n\n      allViews.forEach((v) => {\n         v.warningsEval();\n      });\n\n      // if a datacollection is specified, verify it can be accessed.\n      if (this.settings.dataviewID) {\n         let dc = this.datacollections || this.datacollection;\n         if (!dc) {\n            this.warningsMessage(\n               `references unknown dataviewID[${this.settings.dataviewID}]`\n            );\n         }\n      }\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `${this.key}[${this.name}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABViewCSVExporterCore = require(\"../../core/views/ABViewCSVExporterCore\");\nconst ABViewCSVExporterComponent = require(\"./viewComponent/ABViewCSVExporterComponent\");\n\nmodule.exports = class ABViewCSVExporter extends ABViewCSVExporterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewCSVExporterComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewCSVImporterCore = require(\"../../core/views/ABViewCSVImporterCore\");\nconst ABViewCSVImporterComponent = require(\"./viewComponent/ABViewCSVImporterComponent\");\n\nmodule.exports = class ABViewCSVImporter extends ABViewCSVImporterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component(idBase) {\n      return new ABViewCSVImporterComponent(this, idBase);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (!this.settings.availableFieldIds?.length) {\n         this.warningsMessage(\"has no fields set for matching import data\");\n      }\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewCarouselComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewCarousel_${baseView.id}`,\n         Object.assign(\n            {\n               carousel: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_doOnShow = () => {\n         this.onShow();\n      };\n\n      this._handler_doReload = () => {\n         // this.datacollection?.reloadData();\n      };\n\n      this._handler_doFilter = (fnFilter, filterRules) => {\n         // NOTE: fnFilter is depreciated and will be removed.\n\n         // this.onShow(filterRules);\n         const dv = this.datacollection;\n\n         if (!dv) return;\n\n         dv.filterCondition(filterRules);\n         dv.reloadData();\n      };\n\n      this._handler_busy = () => {\n         this.busy();\n      };\n\n      this._handler_ready = () => {\n         this.ready();\n      };\n   }\n\n   ui() {\n      const ids = this.ids;\n\n      const baseView = this.view;\n\n      this.filterUI = baseView.filterHelper; // component(/* App, idBase */);\n      this.linkPage = baseView.linkPageHelper.component(/* App, idBase */);\n\n      const spacer = {};\n      const settings = this.settings;\n\n      if (settings.width === 0)\n         Object.assign(spacer, {\n            width: 1,\n         });\n\n      const _ui = super.ui([\n         {\n            borderless: true,\n            cols: [\n               spacer, // spacer\n               {\n                  borderless: true,\n                  rows: [\n                     this.filterUI.ui(), // filter UI\n                     {\n                        id: ids.carousel,\n                        view: \"carousel\",\n                        cols: [],\n                        width: settings.width,\n                        height: settings.height,\n                        navigation: {\n                           items: !settings.hideItem,\n                           buttons: !settings.hideButton,\n                           type: settings.navigationType,\n                        },\n                        on: {\n                           onShow: () => {\n                              const activeIndex = $$(\n                                 ids.carousel\n                              ).getActiveIndex();\n\n                              this.switchImage(activeIndex);\n                           },\n                        },\n                     },\n                  ],\n               },\n               spacer, // spacer\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // make sure each of our child views get .init() called\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) {\n         AB.notify.builder(`Datacollection is ${dv}`, {\n            message: \"This is an invalid datacollection\",\n         });\n\n         return;\n      }\n\n      const object = dv.datasource;\n\n      if (!object) {\n         AB.notify.developer(`Object is ${dv}`, {\n            message: \"This is an invalid object\",\n         });\n\n         return;\n      }\n\n      dv.removeListener(\"loadData\", this._handler_doOnShow);\n      dv.on(\"loadData\", this._handler_doOnShow);\n\n      dv.removeListener(\"update\", this._handler_doReload);\n      dv.on(\"update\", this._handler_doReload);\n\n      dv.removeListener(\"delete\", this._handler_doReload);\n      dv.on(\"delete\", this._handler_doReload);\n\n      dv.removeListener(\"create\", this._handler_doReload);\n      dv.on(\"create\", this._handler_doReload);\n\n      dv.removeListener(\"initializingData\", this._handler_busy);\n      dv.on(\"initializingData\", this._handler_busy);\n\n      dv.removeListener(\"initializedData\", this._handler_ready);\n      dv.on(\"initializedData\", this._handler_ready);\n\n      if (this.settings.filterByCursor) {\n         [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n            dv.removeListener(key, this._handler_doOnShow);\n            dv.on(key, this._handler_doOnShow);\n         });\n      }\n\n      const baseView = this.view;\n\n      // filter helper\n      baseView.filterHelper.objectLoad(object);\n      baseView.filterHelper.viewLoad(this);\n\n      this.filterUI.init(this.AB);\n      this.filterUI.removeListener(\"filter.data\", this._handler_doFilter);\n      this.filterUI.on(\"filter.data\", this._handler_doFilter);\n\n      // link page helper\n      this.linkPage.init({\n         view: baseView,\n         datacollection: dv,\n      });\n\n      // set data-cy\n      const $carouselView = $$(this.ids.carousel)?.$view;\n\n      if ($carouselView) {\n         $carouselView.setAttribute(\n            \"data-cy\",\n            `${baseView.key} ${baseView.id}`\n         );\n         $carouselView\n            .querySelector(\".webix_nav_button_prev\")\n            ?.firstElementChild?.setAttribute(\n               \"data-cy\",\n               `${baseView.key} button previous ${baseView.id}`\n            );\n         $carouselView\n            .querySelector(\".webix_nav_button_next\")\n            ?.firstElementChild?.setAttribute(\n               \"data-cy\",\n               `${baseView.key} button next ${baseView.id}`\n            );\n      }\n   }\n\n   /**\n    * @method detatch()\n    * Will make sure all our handlers are removed from any object\n    * we have attached them to.\n    *\n    * You'll want to call this in situations when we are dynamically\n    * creating and recreating instances of the same Widget (like in\n    * the ABDesigner).\n    */\n   detatch() {\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      dv.removeListener(\"loadData\", this._handler_doOnShow);\n\n      if (this._handler_doReload) {\n         dv.removeListener(\"update\", this._handler_doReload);\n         dv.removeListener(\"delete\", this._handler_doReload);\n         dv.removeListener(\"create\", this._handler_doReload);\n      }\n\n      dv.removeListener(\"initializingData\", this._handler_busy);\n\n      dv.removeListener(\"initializedData\", this._handler_ready);\n\n      if (this.settings.filterByCursor)\n         [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n            dv.removeListener(key, this._handler_doOnShow);\n         });\n\n      this.filterUI.removeListener(\"filter.data\", this._handler_doOnShow);\n   }\n\n   myTemplate(row) {\n      if (row?.src) {\n         const settings = this.settings;\n\n         return `<div class=\"ab-carousel-image-container\">\n            <link rel=\"preload\" href=\"${\n               row.src\n            }\" as=\"image\" fetchpriotity=\"low\"/>\n            <img id=\"${this.ids.component}-${row.id}\" src=\"${\n            row.src\n         }\" class=\"content\" ondragstart=\"return false\" loading=\"lazy\" />\n            ${\n               settings.showLabel\n                  ? `<div class=\"ab-carousel-image-title\">${\n                       row.label || \"\"\n                    }</div>`\n                  : \"\"\n            }\n            <div class=\"ab-carousel-image-icon\">\n            ${\n               settings.detailsPage || settings.detailsTab\n                  ? `<span ab-row-id=\"${row.id}\" class=\"ab-carousel-detail webix_icon fa fa-eye\"></span>`\n                  : \"\"\n            }\n            ${\n               settings.editPage || settings.editTab\n                  ? `<span ab-row-id=\"${row.id}\" class=\"ab-carousel-edit webix_icon fa fa-pencil\"></span>`\n                  : \"\"\n            }\n            <span class=\"webix_icon ab-carousel-zoom-in fa fa-search-plus\"></span>\n            <span class=\"webix_icon ab-carousel-zoom-out fa fa-search-minus\"></span>\n                  <span ab-row-id=\"${row.id}\" ab-img-file=\"${\n            row.imgFile\n         }\" class=\"webix_icon ab-carousel-rotate-left fa fa-rotate-left\"></span>\n               <span ab-row-id=\"${row.id}\" ab-img-file=\"${\n            row.imgFile\n         }\" class=\"webix_icon ab-carousel-rotate-right fa fa-rotate-right\"></span>\n               <span class=\"webix_icon ab-carousel-fullscreen fa fa-arrows-alt\"></span>\n               <span style=\"display: none;\" class=\"webix_icon ab-carousel-exit-fullscreen fa fa-times\"></span>\n            </div>\n         </div>`;\n      }\n      // empty image\n      else return \"\";\n   }\n\n   busy() {\n      const $carousel = $$(this.ids.carousel);\n\n      $carousel?.disable();\n      $carousel?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      const $carousel = $$(this.ids.carousel);\n\n      $carousel?.enable();\n      $carousel?.hideProgress?.();\n   }\n\n   async switchImage(currentPosition) {\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      // Check want to load more images\n      if (\n         currentPosition >= this._imageCount - 1 && // check last image\n         dv.totalCount > this._rowCount\n      ) {\n         // loading cursor\n         this.busy();\n\n         try {\n            await dv.loadData(this._rowCount || 0);\n         } catch (err) {\n            this.AB.notify.developer(err, {\n               message:\n                  \"ABViewCarousel:switchImage():Error when load data from a Data collection\",\n            });\n         }\n\n         this.ready();\n      }\n   }\n\n   onShow(fnFilter = this.filterUI.getFilter()) {\n      const ids = this.ids;\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const obj = dv.datasource;\n\n      if (!obj) return;\n\n      const field = this.view.imageField;\n\n      if (!field) return;\n\n      if (dv.dataStatus == dv.dataStatusFlag.notInitial) {\n         // load data when a widget is showing\n         dv.loadData();\n\n         // it will call .onShow again after dc loads completely\n         return;\n      }\n\n      const settings = this.settings;\n\n      let rows = dv.getData(fnFilter);\n\n      // Filter images by cursor\n      if (settings.filterByCursor) {\n         const cursor = dv.getCursor();\n\n         if (cursor)\n            rows = rows.filter(\n               (r) =>\n                  (r[obj.PK()] || r.id || r) ===\n                  (cursor[obj.PK()] || cursor.id || cursor)\n            );\n      }\n\n      const images = [];\n\n      rows.forEach((r) => {\n         const imgFile = r[field.columnName];\n\n         if (imgFile) {\n            const imgData = {\n               id: r.id,\n               src: `/file/${imgFile}`,\n               imgFile,\n            };\n\n            // label of row data\n            if (settings.showLabel) imgData.label = obj.displayData(r);\n\n            images.push({\n               css: \"image\",\n               borderless: true,\n               template: (...params) => {\n                  return this.myTemplate(...params);\n               },\n               data: imgData,\n            });\n         }\n      });\n\n      const ab = this.AB;\n\n      // insert the default image to first item\n      if (field.settings.defaultImageUrl)\n         images.unshift({\n            css: \"image\",\n            template: (...params) => this.myTemplate(...params),\n            data: {\n               id: ab.uuid(),\n               src: `/file/${field.settings.defaultImageUrl}`,\n               label: this.label(\"Default image\"),\n            },\n         });\n\n      // empty image\n      if (images.length < 1)\n         images.push({\n            rows: [\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  height: settings.height,\n                  label: \"<div style='display: block; font-size: 180px; background-color: #666; color: transparent; text-shadow: 0px 1px 1px rgba(255,255,255,0.5); -webkit-background-clip: text; -moz-background-clip: text; background-clip: text;' class='fa fa-picture-o'></div>\",\n               },\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  label: this.label(\"No image\"),\n               },\n            ],\n         });\n\n      // store total of rows\n      this._rowCount = rows.length;\n\n      // store total of images\n      this._imageCount = images.length;\n\n      const $carousel = $$(ids.carousel);\n      const abWebix = ab.Webix;\n\n      if ($carousel) {\n         // re-render\n         abWebix.ui(images, $carousel);\n\n         // add loading cursor\n         abWebix.extend($carousel, abWebix.ProgressBar);\n\n         // link pages events\n         const editPage = settings.editPage;\n         const detailsPage = settings.detailsPage;\n\n         // if (detailsPage || editPage) {\n         $carousel.$view.onclick = async (e) => {\n            if (e.target.className) {\n               if (e.target.className.indexOf(\"ab-carousel-edit\") > -1) {\n                  abWebix.html.removeCss($carousel.getNode(), \"fullscreen\");\n                  abWebix.fullscreen.exit();\n                  let rowId = e.target.getAttribute(\"ab-row-id\");\n                  this.linkPage.changePage(editPage, rowId);\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-detail\") > -1\n               ) {\n                  abWebix.html.removeCss($carousel.getNode(), \"fullscreen\");\n                  abWebix.fullscreen.exit();\n                  let rowId = e.target.getAttribute(\"ab-row-id\");\n                  this.linkPage.changePage(detailsPage, rowId);\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-fullscreen\") > -1\n               ) {\n                  $carousel.define(\"css\", \"fullscreen\");\n                  abWebix.fullscreen.set(ids.carousel, {\n                     head: {\n                        view: \"toolbar\",\n                        css: \"webix_dark\",\n                        elements: [\n                           {},\n                           {\n                              view: \"icon\",\n                              icon: \"fa fa-times\",\n                              click: function () {\n                                 abWebix.html.removeCss(\n                                    $carousel.getNode(),\n                                    \"fullscreen\"\n                                 );\n                                 abWebix.fullscreen.exit();\n                              },\n                           },\n                        ],\n                     },\n                  });\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-rotate-left\") > -1\n               ) {\n                  const rowId = e.target.getAttribute(\"ab-row-id\");\n                  const imgFile = e.target.getAttribute(\"ab-img-file\");\n                  this.rotateImage(rowId, imgFile, field, \"left\");\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-rotate-right\") > -1\n               ) {\n                  const rowId = e.target.getAttribute(\"ab-row-id\");\n                  const imgFile = e.target.getAttribute(\"ab-img-file\");\n                  this.rotateImage(rowId, imgFile, field, \"right\");\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-zoom-in\") > -1\n               ) {\n                  this.zoom(\"in\");\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-zoom-out\") > -1\n               ) {\n                  this.zoom(\"out\");\n               }\n            }\n         };\n      }\n   }\n\n   showFilterPopup($view) {\n      this.filterUI.showPopup($view);\n   }\n\n   async rotateImage(rowId, imgFile, field, direction = \"right\") {\n      this.busy();\n\n      // call api to rotate\n      if (direction == \"left\") await field.rotateLeft(imgFile);\n      else await field.rotateRight(imgFile);\n\n      // refresh image\n      const imgElm = document.getElementById(`${this.ids.component}-${rowId}`);\n      if (imgElm) {\n         await fetch(imgElm.src, { cache: \"reload\", mode: \"no-cors\" });\n         imgElm.src = `${imgElm.src}#${new Date().getTime()}`;\n      }\n\n      this.ready();\n   }\n\n   zoom(inOrOut = \"in\") {\n      const imgContainer = document.getElementsByClassName(\n         \"ab-carousel-image-container\"\n      )[0];\n      if (!imgContainer) return;\n\n      const imgElem = imgContainer.getElementsByTagName(\"img\")[0];\n      if (!imgElem) return;\n\n      const step = 15;\n      const height = parseInt(\n         (imgElem.style.height || 100).toString().replace(\"%\", \"\")\n      );\n      const newHeight = inOrOut == \"in\" ? height + step : height - step;\n      imgElem.style.height = `${newHeight}%`;\n\n      imgContainer.style.overflow = newHeight > 100 ? \"auto\" : \"\";\n   }\n}\n","const ABViewCarouselCore = require(\"../../core/views/ABViewCarouselCore\");\nimport ABViewCarouselComponent from \"./viewComponent/ABViewCarouselComponent\";\n\n// const ABViewPropertyFilterData = require(\"./viewProperties/ABViewPropertyFilterData\");\n// const ABViewPropertyLinkPage = require(\"./viewProperties/ABViewPropertyLinkPage\");\n\nimport ABViewPropertyFilterData from \"./viewProperties/ABViewPropertyFilterData\";\nimport ABViewPropertyLinkPage from \"./viewProperties/ABViewPropertyLinkPage\";\n\nlet PopupCarouselFilterMenu = null;\n\nexport default class ABViewCarousel extends ABViewCarouselCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // filter property\n      this.filterHelper.fromSettings(this.settings.filter);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      var dv = this.datacollection;\n      if (dv) {\n         this.filterHelper.objectLoad(dv.datasource);\n         this.filterHelper.fromSettings(this.settings.filter);\n      }\n\n      return new ABViewCarouselComponent(this);\n   }\n\n   get idBase() {\n      return `ABViewCarousel_${this.id}`;\n   }\n\n   get filterHelper() {\n      if (this.__filterHelper == null)\n         this.__filterHelper = new ABViewPropertyFilterData(\n            this.AB,\n            this.idBase\n         );\n\n      return this.__filterHelper;\n   }\n\n   get linkPageHelper() {\n      if (this.__linkPageHelper == null)\n         this.__linkPageHelper = new ABViewPropertyLinkPage();\n\n      return this.__linkPageHelper;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let field = this.imageField;\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve image field[${this.settings.field}]`\n         );\n      }\n   }\n}\n","const ABViewChartCore = require(\"../../core/views/ABViewChartCore\");\nconst ABViewChartComponent = require(\"./viewComponent/ABViewChartComponent\");\n\nmodule.exports = class ABViewChart extends ABViewChartCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartComponent(this);\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n      this.refreshData();\n   }\n\n   getDCChart() {\n      if (!this._dcChart) this._dcChart = new webix.DataCollection();\n\n      return this._dcChart;\n   }\n\n   refreshData() {\n      const dc = this.datacollection;\n      if (dc == null) return this.dcChart;\n\n      const labelCol = this.labelField();\n      const valueCol = this.valueField();\n      const valueCol2 = this.valueField2();\n\n      if (!labelCol || !valueCol) return this.dcChart;\n\n      // const labelColName = labelCol.columnName;\n      const numberColName = valueCol.columnName;\n\n      let numberColName2 = \"\";\n\n      if (this.settings.multipleSeries && valueCol2) {\n         numberColName2 = valueCol2.columnName;\n      }\n\n      const colorList = [\n         \"#ee4339\",\n         \"#ee9336\",\n         \"#eed236\",\n         \"#d3ee36\",\n         \"#a7ee70\",\n         \"#58dccd\",\n         \"#36abee\",\n         \"#476cee\",\n         \"#a244ea\",\n         \"#e33fc7\",\n      ];\n\n      const dInfo = dc.getData();\n\n      let results = [];\n      let sumData = {};\n      let sumNumber = 0;\n      let sumNumber2 = 0;\n      let countNumber = dInfo.length;\n\n      dInfo.forEach((item) => {\n         const labelKey = labelCol.format(item) || item.id;\n\n         let numberVal = parseFloat(item[numberColName] || 0);\n         let numberVal2 = null;\n\n         if (this.settings.multipleSeries)\n            numberVal2 = parseFloat(item[numberColName2]) || 0;\n\n         switch (valueCol.key) {\n            //Formula Datatype\n            case \"formula\":\n               numberVal = valueCol.format(item);\n\n               break;\n\n            //Calcualte Datatype\n            case \"calculate\":\n               numberVal = parseFloat(\n                  valueCol.constructor.convertToJs(\n                     valueCol.object,\n                     valueCol.settings.formula,\n                     item,\n                     valueCol.settings.decimalPlaces\n                  )\n               );\n\n               break;\n\n            default:\n               break;\n         }\n\n         if (sumData[labelKey] == null) {\n            let label = labelKey;\n\n            // Get label of the connect field\n            if (labelCol.isConnection) {\n               let relateValues = labelCol.pullRelationValues(item);\n               if (relateValues != null) {\n                  if (Array.isArray(relateValues))\n                     label = relateValues\n                        .map((val) => val.text || \"\")\n                        .join(\", \");\n                  else label = relateValues.text;\n               }\n            }\n\n            if (this.settings.multipleSeries) {\n               sumData[labelKey] = {\n                  label: label || item.id,\n                  value: 0,\n                  value2: 0,\n               };\n            } else {\n               sumData[labelKey] = {\n                  label: label || item.id,\n                  value: 0,\n               };\n            }\n         }\n\n         sumData[labelKey].value += numberVal;\n         sumNumber += numberVal;\n\n         if (this.settings.multipleSeries) {\n            sumData[labelKey].value2 += numberVal2;\n            sumNumber2 += numberVal2;\n         }\n      });\n\n      let index = 0;\n\n      for (const key in sumData) {\n         let val = sumData[key].value;\n\n         if (val <= 0) continue;\n\n         // Display to percent values\n         if (this.settings.isPercentage) {\n            val = (val / sumNumber) * 100;\n            val = Math.round(val * 100) / 100; // round decimal 2 digits\n            val = val + \" %\";\n         }\n\n         if (this.settings.multipleSeries) {\n            let val2 = sumData[key].value2;\n\n            if (val2 <= 0) continue;\n\n            // Display to percent values\n            if (this.settings.isPercentage) {\n               val2 = (val2 / sumNumber2) * 100;\n               val2 = Math.round(val2 * 100) / 100; // round decimal 2 digits\n               val2 = val2 + \" %\";\n            }\n\n            results.push({\n               label: sumData[key].label,\n               value: val,\n               value2: val2,\n               color: colorList[index % colorList.length],\n               count: countNumber,\n            });\n         } else {\n            results.push({\n               label: sumData[key].label,\n               value: val,\n               color: colorList[index % colorList.length],\n               count: countNumber,\n            });\n         }\n\n         index += 1;\n      }\n\n      const dcChart = this.getDCChart();\n\n      dcChart.clearAll();\n      dcChart.parse(results);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let labelField = this.labelField();\n      if (!labelField) {\n         this.warningsMessage(\n            `can't resolve label field[${this.settings.columnLabel}]`\n         );\n      }\n\n      let valueField = this.valueField();\n      if (!valueField) {\n         this.warningsMessage(\n            `can't resolve value field[${this.settings.columnValue}]`\n         );\n      }\n   }\n};\n","const ABViewChartAreaCore = require(\"../../core/views/ABViewChartAreaCore\");\nconst ABViewChartAreaComponent = require(\"./viewComponent/ABViewChartAreaComponent\");\n\nmodule.exports = class ABViewChartArea extends ABViewChartAreaCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartAreaComponent(this);\n   }\n};\n","const ABViewChartBarCore = require(\"../../core/views/ABViewChartBarCore\");\nconst ABViewChartBarComponent = require(\"./viewComponent/ABViewChartBarComponent\");\n\nmodule.exports = class ABViewChartBar extends ABViewChartBarCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartBarComponent(this);\n   }\n};\n","const ABViewWidget = require(\"./ABViewWidget\");\nconst ABViewChartContainerComponent = require(\"./viewComponent/ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartContainer extends ABViewWidget {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartContainerComponent(this);\n   }\n\n   get datacollection() {\n      return this.parent.datacollection;\n   }\n};\n","const ABViewChartLineCore = require(\"../../core/views/ABViewChartLineCore\");\nconst ABViewChartLineComponent = require(\"./viewComponent/ABViewChartLineComponent\");\n\nmodule.exports = class ABViewChartLine extends ABViewChartLineCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartLineComponent(this);\n   }\n};\n","const ABViewChartPieCore = require(\"../../core/views/ABViewChartPieCore\");\nconst ABViewChartPieComponent = require(\"./viewComponent/ABViewChartPieComponent\");\n\nmodule.exports = class ABViewChartPie extends ABViewChartPieCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartPieComponent(this);\n   }\n};\n","const ABViewCommentCore = require(\"../../core/views/ABViewCommentCore\");\nconst ABViewCommentComponent = require(\"./viewComponent/ABViewCommentComponent\");\n\nmodule.exports = class ABViewComment extends ABViewCommentCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewCommentComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let field = this.getUserField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve user field[${this.settings.columnUser}]`\n         );\n      }\n\n      field = this.getCommentField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve comment field[${this.settings.columnComment}]`\n         );\n      }\n\n      field = this.getDateField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve date field[${this.settings.columnDate}]`\n         );\n      }\n   }\n};\n","const ABViewConditionalContainerCore = require(\"../../core/views/ABViewConditionalContainerCore\");\nconst ABViewConditionalContainerComponent = require(\"./viewComponent/ABViewConditionalContainerComponent\");\n\nmodule.exports = class ABViewConditionalContainer extends (\n   ABViewConditionalContainerCore\n) {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewConditionalContainerComponent(this);\n   }\n\n   async save() {\n      const viewIf = this.views().find((v) => v.name === \"If\");\n      const viewElse = this.views().find((v) => v.name === \"Else\");\n      const pendingSave = [];\n\n      if (viewIf) pendingSave.push(viewIf.save());\n\n      if (viewElse) pendingSave.push(viewElse.save());\n\n      await Promise.all(pendingSave);\n\n      await super.save();\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (\n         !this.settings.filterConditions ||\n         this.settings.filterConditions?.rules?.length == 0\n      ) {\n         this.warningsMessage(\"has no filter conditions set\");\n      }\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewConnectDataFilterComponent extends ABViewComponent {\n   constructor(baseView, idbase, ids) {\n      super(\n         baseView,\n         idbase || `ABViewConnectDataFilter_${baseView.id}`,\n         Object.assign(\n            {\n               filter: \"\",\n               reset: \"\",\n            },\n            ids\n         )\n      );\n\n      this.field = null;\n   }\n\n   ui() {\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            type: \"space\",\n            borderless: true,\n            cols: [\n               {\n                  view: \"icon\",\n                  icon: \"fa fa-filter\",\n                  align: \"left\",\n                  disabled: true,\n               },\n               {\n                  view: \"combo\",\n                  id: ids.filter,\n                  labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n                  disabled: true,\n                  on: {\n                     onChange: (id) => this.applyConnectFilter(id),\n                  },\n               },\n               {\n                  view: \"icon\",\n                  id: ids.reset,\n                  icon: \"fa fa-times\",\n                  align: \"left\",\n                  disabled: true,\n                  tooltip: this.label(\"Renmove this filter\"),\n                  on: {\n                     onItemClick: () => this.resetConnectFilter(),\n                  },\n               },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const object = dv.datasource;\n\n      if (!object) return;\n\n      const [field] = object.fields(\n         (f) => f.columnName === this.settings.field\n      );\n\n      if (!field) {\n         this.AB.notify.developer(\n            `Cannot find field \"${this.settings.field}\" in ${object.name}`,\n            {\n               context: \"ABViewConnectDataFilterComponent.init()\",\n               data: { settings: this.settings },\n            }\n         );\n\n         return;\n      }\n\n      this.field = field;\n\n      const ids = this.ids;\n      const suggest = webix.ui({\n         view: \"suggest\",\n         filter: ({ value }, search) =>\n            value.toLowerCase().includes(search.toLowerCase()),\n         on: {\n            onShow: () => {\n               field.populateOptionsDataCy($$(ids.filter), field, {});\n            },\n         },\n      });\n      field.getAndPopulateOptions(suggest, null, field);\n\n      const $filter = $$(ids.filter);\n\n      $filter.define(\"suggest\", suggest);\n      $filter.define(\"label\", `${this.label(\"Filter by\")} ${field.label}`);\n      $filter.enable();\n      $filter.refresh();\n   }\n\n   resetConnectFilter() {\n      const ids = this.ids;\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: [] });\n      dc.reloadData();\n      // Block applyConnectFields() from triggering\n\n      const $filter = $$(ids.filter);\n\n      $filter.blockEvent();\n      $filter.setValue();\n      $filter.unblockEvent();\n      $$(ids.reset).disable();\n   }\n\n   applyConnectFilter(connectId) {\n      const filterRule = {\n         key: this.field.id,\n         rule: \"equals\",\n         value: connectId,\n      };\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: [filterRule] });\n      dc.reloadData();\n      $$(this.ids.reset).enable();\n   }\n}\n","import ABViewConnectDataFilterCore from \"../../core/views/ABViewConnectDataFilterCore\";\nimport ABViewConnectDataFilterComponent from \"./viewComponent/ABViewConnectDataFilterComponent\";\n\nexport default class ABViewConnectDataFilter extends ABViewConnectDataFilterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewConnectDataFilterComponent(this);\n   }\n}\n","const ABViewContainerCore = require(\"../../core/views/ABViewContainerCore\");\nconst ABViewContainerComponent = require(\"./viewComponent/ABViewContainerComponent\");\n\nmodule.exports = class ABViewContainer extends ABViewContainerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewContainerComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no content\");\n      }\n\n      // NOTE: this is done in ABView:\n      // (allViews || []).forEach((v) => {\n      //    v.warningsEval();\n      // });\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\nimport ABPopupSortField from \"../ABViewGridPopupSortFields\";\nimport ABViewCustomFilter from \"../viewProperties/ABViewPropertyFilterData\";\nimport _ from \"lodash\";\n\nexport default class ABViewDataFilterComponent extends ABViewComponent {\n   constructor(baseView, idbase, ids) {\n      super(\n         baseView,\n         idbase || `ABViewDataFilter_${baseView.id}`,\n         Object.assign(\n            {\n               filter: \"\",\n               reset: \"\",\n               sortButton: \"\",\n               filterButton: \"\",\n               globalSearchToolbar: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_filterData = (fnFilter, filterRules) => {\n         this.callbackFilterData(fnFilter, filterRules); // be notified when there is a change in the filter\n      };\n\n      this.field = null;\n      const ab = this.AB;\n\n      // {ABViewGridPopupSortFields}\n      // The popup for adding sort criteria to our grid.\n      this.PopupSortComponent = new ABPopupSortField(\n         `ABViewDataFilter_Sort_Popup_${this.settings.dataviewID}`\n      );\n      this.PopupSortComponent.init(ab);\n      this.PopupSortComponent.on(\"changed\", (sortOptions) => {\n         this.callbackSortData(sortOptions);\n      });\n\n      this.filterHelper = new ABViewCustomFilter(\n         this.AB,\n         `ABViewDataFilter_Filter_Popup_${this.settings.dataviewID}`\n      );\n      this.filterHelper.settings = {\n         filterOption: 1,\n         userFilterPosition: \"toolbar\",\n         isGlobalToolbar: 1,\n      };\n      this.filterHelper.init(ab);\n      this.detatch();\n      this.filterHelper.on(\"filter.data\", this._handler_filterData);\n   }\n\n   advancedUI() {\n      const compId = this.ids.component;\n      return [\n         {\n            css: \"bg_gray\",\n            maxHeight: 60,\n            rows: [\n               {},\n               {\n                  cols: [\n                     {\n                        width: 18,\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-filter\",\n                        width: 40,\n                        id: this.ids.filterButton,\n                        css: `webix_primary abFilterButton${this.settings.dataviewID}`,\n                        click: (id, event) => {\n                           this.toolbarFilter($$(this.ids.filterButton).$view);\n                        },\n                        on: {\n                           onAfterRender: function () {\n                              this.getInputNode().setAttribute(\n                                 \"data-cy\",\n                                 `${compId} filter button`\n                              );\n                           },\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-sort\",\n                        width: 40,\n                        id: this.ids.sortButton,\n                        css: `webix_primary abSortButton${this.settings.dataviewID}`,\n                        click: (id, event) => {\n                           this.openSort($$(this.ids.sortButton).$view);\n                        },\n                        on: {\n                           onAfterRender: function () {\n                              this.getInputNode().setAttribute(\n                                 \"data-cy\",\n                                 `${compId} sort button`\n                              );\n                           },\n                        },\n                     },\n                     {\n                        id: this.ids.globalSearchToolbar,\n                        view: \"search\",\n                        placeholder: this.label(\"Search..\"),\n                        css: `abGlobalSearchField${this.settings.dataviewID}`,\n                        width: 0,\n                        attributes: {\n                           \"data-cy\": `${this.ids.component} global search`,\n                           datacollection: this.settings.dataviewID,\n                        },\n                        on: {\n                           onTimedKeyPress: () => {\n                              const searchText = $$(\n                                 this.ids.globalSearchToolbar\n                              ).getValue();\n                              // store search text in datacollection because\n                              // it is shared amoung the similar filterHelpers\n                              const dc = this.datacollection;\n                              dc.settings.objectWorkspace.searchText =\n                                 searchText;\n\n                              this.filterHelper.externalSearchText(searchText);\n                           },\n                        },\n                     },\n                     {\n                        width: 18,\n                     },\n                  ],\n               },\n               {},\n            ],\n         },\n      ];\n   }\n\n   connectedFieldUI() {\n      return [\n         {\n            css: \"bg_gray\",\n            maxHeight: 60,\n            cols: [\n               {\n                  width: 18,\n               },\n               {\n                  rows: [\n                     {},\n                     {\n                        view: \"abslayout\",\n                        cells: [\n                           {\n                              css: \"bg_gray\",\n                              view: \"combo\",\n                              id: this.ids.filter,\n                              labelWidth: 0,\n                              relative: true,\n                              disabled: true,\n                              on: {\n                                 onChange: (id) => {\n                                    this.applyConnectFilter(\n                                       $$(this.ids.filter).getList().getItem(id)\n                                    );\n                                 },\n                              },\n                           },\n                           {\n                              view: \"icon\",\n                              id: this.ids.reset,\n                              icon: \"fa fa-times\",\n                              right: 24,\n                              top: 7,\n                              width: 24,\n                              height: 24,\n                              hidden: true,\n                              tooltip: this.label(\"Remove this filter\"),\n                              on: {\n                                 onItemClick: () =>\n                                    $$(this.ids.filter).setValue(),\n                              },\n                           },\n                        ],\n                     },\n                     {},\n                  ],\n               },\n               {\n                  width: 18,\n               },\n            ],\n         },\n      ];\n   }\n\n   ui() {\n      if (\n         !this.settings?.dataviewID ||\n         (this.settings?.viewType !== \"advanced\" && !this.settings?.field)\n      )\n         return { height: 1, id: this.ids.component };\n\n      const ui =\n         this.settings.viewType == \"advanced\"\n            ? this.advancedUI()\n            : this.connectedFieldUI();\n      const _ui = super.ui(ui);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const object = dv.datasource;\n\n      if (!object) return;\n\n      if (this.settings.viewType == \"advanced\") {\n         if (this.settings.showSort) {\n            this.PopupSortComponent.objectLoad(object);\n            // if there are some preset sorts show them to user\n            this.PopupSortComponent.setSettings(\n               dv?.settings?.objectWorkspace?.sortFields\n            );\n         } else {\n            $$(this.ids.sortButton).hide();\n         }\n         if (this.settings.showFilter) {\n            this.filterHelper.objectLoad(object);\n         } else {\n            $$(this.ids.filterButton).hide();\n         }\n      } else if (this.settings.viewType == \"connected\") {\n         const [field] = object.fields(\n            (f) => f.columnName === this.settings.field\n         );\n\n         if (!field) {\n            this.AB.notify.developer(\n               `Cannot find field \"${this.settings.field}\" in ${object.name}`,\n               {\n                  context: \"ABViewDataFilterComponent.init()\",\n                  data: { settings: this.settings },\n               }\n            );\n\n            return;\n         }\n\n         this.field = field;\n\n         const ids = this.ids;\n         const suggest = webix.ui({\n            view: \"suggest\",\n            filter: ({ value }, search) =>\n               value.toLowerCase().includes(search.toLowerCase()),\n            on: {\n               onShow: () => {\n                  field.populateOptionsDataCy($$(ids.filter), field, {});\n               },\n            },\n            showAllOptions: true,\n         });\n         field.getAndPopulateOptions(suggest, null, field);\n\n         const $filter = $$(ids.filter);\n\n         $filter.define(\"suggest\", suggest);\n         $filter.define(\n            \"placeholder\",\n            `${this.label(\"Filter by\")} ${field.label}`\n         );\n         $filter.enable();\n         $filter.refresh();\n      }\n   }\n\n   onShow() {\n      super.onShow();\n      this.updateUI();\n   }\n\n   applyConnectFilter(rowData) {\n      let connectedVal = rowData?.id ?? null;\n\n      if (\n         connectedVal &&\n         this.field.settings?.isCustomFK &&\n         this.field.settings?.isSource\n      ) {\n         connectedVal =\n            (this.field.indexField\n               ? rowData[this.field.indexField.columnName]\n               : null) ?? // custom index\n            (this.field.indexField2\n               ? rowData[this.field.indexField2.columnName]\n               : null) ?? // custom index 2\n            rowData.id ??\n            rowData;\n      }\n\n      let filterRule = [];\n      if (connectedVal) {\n         $$(this.ids.reset).show();\n         filterRule = [\n            {\n               key: this.field.id,\n               rule: \"equals\",\n               value: connectedVal,\n            },\n         ];\n      } else {\n         $$(this.ids.reset).hide();\n      }\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: filterRule });\n      dc.reloadData();\n   }\n\n   openSort($view) {\n      this.PopupSortComponent.show($view);\n   }\n\n   /**\n    * @method callbackSortData()\n    * Process the provided sort options from our sort ui.\n    * @param {array} sortRules\n    *        Any Sort Rules added by the user.\n    */\n   async callbackSortData(sortRules = []) {\n      const dc = this.datacollection;\n      if (!_.isEqual(dc?.settings?.objectWorkspace?.sortFields, sortRules)) {\n         dc.settings.objectWorkspace.sortFields = sortRules;\n         await this.datacollection.reloadData();\n      }\n      this.updateUI();\n   }\n\n   /**\n    * @method callbackFilterData()\n    * Process the provided filter options from our filterHelper.\n    * @param {fn} fnFilter\n    *        A function that returns true/false for each row of data\n    *        to determine if is should exist.\n    * @param {array} filterRules\n    *        Any Filter Rules added by the user.\n    */\n   callbackFilterData(fnFilter, filterRules = []) {\n      const dc = this.datacollection;\n      if (!_.isEqual(dc?.__filterCond, filterRules)) {\n         dc.filterCondition(filterRules);\n         dc.reloadData();\n         this.updateUI();\n      }\n   }\n\n   toolbarFilter($view) {\n      this.filterHelper.showPopup($view);\n   }\n\n   updateUI() {\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      var filterButtons = document.getElementsByClassName(\n         `abFilterButton${this.settings.dataviewID}`\n      );\n\n      const onlyFilterRules = this.filterHelper.filterRules();\n      let filterBadge =\n         onlyFilterRules?.rules?.length > 0\n            ? onlyFilterRules?.rules?.length\n            : null;\n      for (let b of filterButtons) {\n         $$(b).define(\"badge\", filterBadge);\n         $$(b).refresh();\n      }\n\n      var sortButtons = document.getElementsByClassName(\n         `abSortButton${this.settings.dataviewID}`\n      );\n\n      const onlySortRules = dc.settings.objectWorkspace.sortFields;\n      let sortBadge = onlySortRules?.length > 0 ? onlySortRules?.length : null;\n\n      for (let b of sortButtons) {\n         $$(b).define(\"badge\", sortBadge);\n         $$(b).refresh();\n      }\n\n      var searchFields = document.getElementsByClassName(\n         `abGlobalSearchField${this.settings.dataviewID}`\n      );\n\n      const searchText = dc.settings.objectWorkspace.searchText;\n      if (searchText != null) {\n         for (let s of searchFields) {\n            var activeElement = document.activeElement;\n            if (\n               activeElement?.attributes?.datacollection?.value ==\n                  this.settings.dataviewID &&\n               activeElement == s.getElementsByTagName(\"input\")[0]\n            ) {\n               // skip the already selected input\n            } else {\n               $$(s).setValue(searchText);\n            }\n         }\n      }\n   }\n\n   detatch() {\n      this.filterHelper.removeListener(\"filter.data\", this._handler_filterData);\n      // this.datacollection?.removeListener(\"changeCursor\", this.handler_select);\n   }\n}\n","import ABViewDataFilterCore from \"../../core/views/ABViewDataFilterCore\";\nimport ABViewDataFilterComponent from \"./viewComponent/ABViewDataFilterComponent\";\n\nexport default class ABViewDataFilter extends ABViewDataFilterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDataFilterComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      } else {\n         if (this.settings.viewType == \"connected\") {\n            const object = DC.datasource;\n            const [field] = object.fields(\n               (f) => f.columnName === this.settings.field\n            );\n            if (!field) {\n               this.warningsMessage(`can't resolve field reference`);\n            }\n         }\n      }\n   }\n}\n","import ABViewComponent from \"./ABViewComponent\";\nexport default class ABViewDataSelectComponent extends ABViewComponent {\n   constructor(baseView, idbase, ids) {\n      super(\n         baseView,\n         idbase || `ABViewDataSelect_${baseView.id}`,\n         Object.assign(\n            {\n               select: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const _ui = super.ui([\n         {\n            view: \"richselect\",\n            id: this.ids.select,\n            on: {\n               onChange: (n, o) => {\n                  if (n !== o) this.cursorChange(n);\n               },\n            },\n         },\n      ]);\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n      this.dc = AB.datacollectionByID(this.settings.dataviewID);\n   }\n\n   async onShow() {\n      if (!this.dc) return;\n      await this.dc.waitForDataCollectionToInitialize(this.dc);\n      const labelField = this.AB.definitionByID(\n         this.settings.labelField\n      )?.columnName;\n      const options = this.dc\n         .getData()\n         .map((o) => ({ id: o.id, value: o[labelField] }));\n      $$(this.ids.select).define(\"options\", options);\n      $$(this.ids.select).refresh();\n      $$(this.ids.select).setValue(this.dc.getCursor().id);\n   }\n\n   cursorChange(n) {\n      this.dc.setCursor(n);\n   }\n}\n","import ABViewDataSelectCore from \"../../core/views/ABViewDataSelectCore\";\nimport ABViewDataSelectComponent from \"./viewComponent/ABViewDataSelectComponent\";\n\nexport default class ABViewDataSelect extends ABViewDataSelectCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDataSelectComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      } else {\n         if (this.settings.viewType == \"connected\") {\n            const object = DC.datasource;\n            const [field] = object.fields(\n               (f) => f.columnName === this.settings.field\n            );\n            if (!field) {\n               this.warningsMessage(`can't resolve field reference`);\n            }\n         }\n      }\n   }\n}\n","const ABViewDataviewCore = require(\"../../core/views/ABViewDataviewCore\");\nconst ABViewDataviewComponent = require(\"./viewComponent/ABViewDataviewComponent\");\n\nconst ABViewDataviewDefaults = ABViewDataviewCore.defaultValues();\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewDataview extends ABViewDataviewCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.detailsPage =\n         this.settings.detailsPage ?? ABViewDataviewDefaults.detailsPage;\n      this.settings.editPage =\n         this.settings.editPage ?? ABViewDataviewDefaults.editPage;\n      this.settings.detailsTab =\n         this.settings.detailsTab ?? ABViewDataviewDefaults.detailsTab;\n      this.settings.editTab =\n         this.settings.editTab ?? ABViewDataviewDefaults.editTab;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj } v1App\n    * @param {string} idPrefix - define to support in 'Datacollection' widget\n    *\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewDataviewComponent(this);\n   }\n};\n","const ABViewDetailCore = require(\"../../core/views/ABViewDetailCore\");\nconst ABViewDetailComponent = require(\"./viewComponent/ABViewDetailComponent\");\n\nmodule.exports = class ABViewDetail extends ABViewDetailCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj } v1App\n    * @param {string} idPrefix - define to support in 'Datacollection' widget\n    *\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewDetailComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewDetailCheckboxCore = require(\"../../core/views/ABViewDetailCheckboxCore\");\nconst ABViewDetailCheckboxComponent = require(\"./viewComponent/ABViewDetailCheckboxComponent\");\n\nmodule.exports = class ABViewDetailCheckbox extends ABViewDetailCheckboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailCheckboxComponent(this);\n   }\n};\n","const ABViewDetailConnectCore = require(\"../../core/views/ABViewDetailConnectCore\");\nconst ABViewPropertyAddPage =\n   require(\"./viewProperties/ABViewPropertyAddPage\").default;\n\nconst ABViewDetailConnectComponent = require(\"./viewComponent/ABViewDetailConnectComponent\");\n\nmodule.exports = class ABViewDetailConnect extends ABViewDetailConnectCore {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n      this.addPageTool.fromSettings(this.settings);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailConnectComponent(this);\n   }\n\n   get addPageTool() {\n      if (this.__addPageTool == null)\n         this.__addPageTool = new ABViewPropertyAddPage();\n\n      return this.__addPageTool;\n   }\n};\n","const ABViewDetailCustomCore = require(\"../../core/views/ABViewDetailCustomCore\");\nconst ABViewDetailCustomComponent = require(\"./viewComponent/ABViewDetailCustomComponent\");\n\nmodule.exports = class ABViewDetailCustom extends ABViewDetailCustomCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailCustomComponent(this);\n   }\n};\n","const ABViewDetailImageCore = require(\"../../core/views/ABViewDetailImageCore\");\nconst ABViewDetailImageComponent = require(\"./viewComponent/ABViewDetailImageComponent\");\n\nmodule.exports = class ABViewDetailImage extends ABViewDetailImageCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailImageComponent(this);\n   }\n};\n","const ABViewDetailItemCore = require(\"../../core/views/ABViewDetailItemCore\");\nconst ABViewDetailItemComponent = require(\"./viewComponent/ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailItem extends ABViewDetailItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailItemComponent(this);\n   }\n};\n","const ABViewDetailTextCore = require(\"../../core/views/ABViewDetailTextCore\");\nconst ABViewDetailTextComponent = require(\"./viewComponent/ABViewDetailTextComponent\");\n\nmodule.exports = class ABViewDetailText extends ABViewDetailTextCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailTextComponent(this);\n   }\n};\n","const ABViewDetailTreeCore = require(\"../../core/views/ABViewDetailTreeCore\");\nconst ABViewDetailTreeComponent = require(\"./viewComponent/ABViewDetailTreeComponent\");\n\nmodule.exports = class ABViewDetailTree extends ABViewDetailTreeCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailTreeComponent(this);\n   }\n};\n","const ABViewDocxBuilderCore = require(\"../../core/views/ABViewDocxBuilderCore\");\nconst ABViewDocxBuilderComponent = require(\"./viewComponent/ABViewDocxBuilderComponent\");\n\nmodule.exports = class ABViewDocxBuilder extends ABViewDocxBuilderCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDocxBuilderComponent(this);\n   }\n\n   letUserDownload(blob, filename) {\n      const url = window.URL.createObjectURL(blob);\n\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a); // we need to append the element to the dom -> otherwise it will not work in firefox\n      a.click();\n      a.remove(); //afterwards we remove the element again\n\n      window.URL.revokeObjectURL(url);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollections || this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (!this.settings.filename) {\n         this.warningsMessage(\"is missing a DOCX template file\");\n      } else {\n         // TODO: should we check for the existance of the file?\n         // this isn't currently an async friendly fn, so how?\n         // let url = this.downloadUrl();\n      }\n   }\n};\n","const ABViewFormCore = require(\"../../core/views/ABViewFormCore\");\nconst ABViewFormComponent = require(\"./viewComponent/ABViewFormComponent\");\nconst ABViewFormButton = require(\"./ABViewFormButton\");\nconst ABViewFormCustom = require(\"./ABViewFormCustom\");\nconst ABViewFormConnect = require(\"./ABViewFormConnect\");\nconst ABViewFormDatepicker = require(\"./ABViewFormDatepicker\");\nconst ABViewFormSelectMultiple = require(\"./ABViewFormSelectMultiple\");\nconst ABViewFormTextbox = require(\"./ABViewFormTextbox\");\nconst ABViewFormJson = require(\"./ABViewFormJson\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\n// const ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\n// const ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\n// let PopupRecordRule = null;\n// let PopupSubmitRule = null;\n\nconst ABViewFormPropertyComponentDefaults = ABViewFormCore.defaultValues();\n\nmodule.exports = class ABViewForm extends ABViewFormCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      this._callbacks = {\n         onBeforeSaveData: () => true,\n      };\n   }\n\n   superComponent() {\n      if (this._superComponent == null)\n         this._superComponent = super.component();\n\n      return this._superComponent;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormComponent(this);\n   }\n\n   refreshDefaultButton(ids) {\n      // If default button is not exists, then skip this\n      let defaultButton = this.views(\n         (v) => v instanceof ABViewFormButton && v.settings.isDefault\n      )[0];\n\n      // Add a default button\n      if (defaultButton == null) {\n         defaultButton = ABViewFormButton.newInstance(this.application, this);\n         defaultButton.settings.isDefault = true;\n      }\n      // Remove default button from array, then we will add it to be the last item later (.push)\n      else {\n         this._views = this.views((v) => v.id != defaultButton.id);\n      }\n\n      // Calculate position Y of the default button\n      let yList = this.views().map((v) => (v.position.y || 0) + 1);\n      yList.push(this._views.length || 0);\n      yList.push($$(ids.fields).length || 0);\n      let posY = Math.max(...yList);\n\n      // Update to be the last item\n      defaultButton.position.y = posY;\n\n      // Keep the default button is always the last item of array\n      this._views.push(defaultButton);\n\n      return defaultButton;\n   }\n\n   /**\n    * @method getFormValues\n    *\n    * @param {webix form} formView\n    * @param {ABObject} obj\n    * @param {ABDatacollection} dc\n    * @param {ABDatacollection} dcLink [optional]\n    */\n   getFormValues(formView, obj, dc, dcLink) {\n      // get the fields that are on this form\n      const visibleFields = [\"id\"]; // we always want the id so we can udpate records\n      formView.getValues(function (obj) {\n         visibleFields.push(obj.config.name);\n      });\n\n      // only get data passed from form\n      const allVals = formView.getValues();\n      const formVals = {};\n      visibleFields.forEach((val) => {\n         formVals[val] = allVals[val];\n      });\n\n      // get custom values\n      this.fieldComponents(\n         (comp) =>\n            comp instanceof ABViewFormCustom ||\n            comp instanceof ABViewFormConnect ||\n            comp instanceof ABViewFormDatepicker ||\n            comp instanceof ABViewFormSelectMultiple ||\n            (comp instanceof ABViewFormJson && comp.settings.type == \"filter\")\n      ).forEach((f) => {\n         const vComponent = this.viewComponents[f.id];\n         if (vComponent == null) return;\n\n         const field = f.field();\n         if (field) {\n            const getValue = vComponent.getValue ?? vComponent.logic.getValue;\n            if (getValue)\n               formVals[field.columnName] = getValue.call(vComponent, formVals);\n         }\n      });\n\n      // remove connected fields if they were not on the form and they are present in the formVals because it is a datacollection\n      obj.connectFields().forEach((f) => {\n         if (\n            visibleFields.indexOf(f.columnName) == -1 &&\n            formVals[f.columnName]\n         ) {\n            delete formVals[f.columnName];\n            delete formVals[f.relationName()];\n         }\n      });\n\n      // clear undefined values or empty arrays\n      for (const prop in formVals) {\n         if (formVals[prop] == null || formVals[prop].length == 0)\n            formVals[prop] = \"\";\n      }\n\n      // Add parent's data collection cursor when a connect field does not show\n      let linkValues;\n\n      if (dcLink) {\n         linkValues = dcLink.getCursor();\n      }\n\n      if (linkValues) {\n         const objectLink = dcLink.datasource;\n\n         const connectFields = obj.connectFields();\n         connectFields.forEach((f) => {\n            const formFieldCom = this.fieldComponents(\n               (fComp) => fComp?.field?.()?.id === f?.id\n            );\n\n            if (\n               objectLink.id == f.settings.linkObject &&\n               formFieldCom.length < 1 && // check field does not show\n               formVals[f.columnName] === undefined\n            ) {\n               const linkColName = f.indexField\n                  ? f.indexField.columnName\n                  : objectLink.PK();\n\n               formVals[f.columnName] = {};\n               formVals[f.columnName][linkColName] =\n                  linkValues[linkColName] ?? linkValues.id;\n            }\n         });\n      }\n\n      // NOTE: need to pull data of current cursor to calculate Calculate & Formula fields\n      // .formVals variable does not include data that does not display in the Form widget\n      const cursorFormVals = Object.assign(dc.getCursor() ?? {}, formVals);\n\n      // Set value of calculate or formula fields to use in record rule\n      obj.fields((f) => f.key == \"calculate\" || f.key == \"formula\").forEach(\n         (f) => {\n            if (formVals[f.columnName] == null) {\n               let reCalculate = true;\n\n               // WORKAROUND: If \"Formula\" field will have Filter conditions,\n               // Then it is not able to re-calculate on client side\n               // because relational data is not full data so FilterComplex will not have data to check\n               if (f.key == \"formula\" && f.settings?.where?.rules?.length > 0) {\n                  reCalculate = false;\n               }\n\n               formVals[f.columnName] = f.format(cursorFormVals, reCalculate);\n            }\n         }\n      );\n\n      if (allVals.translations?.length > 0)\n         formVals.translations = allVals.translations;\n\n      // give the Object a final chance to review the data being handled.\n      obj.formCleanValues(formVals);\n\n      return formVals;\n   }\n\n   /**\n    * @method validateData\n    *\n    * @param {webix form} formView\n    * @param {ABObject} object\n    * @param {object} formVals\n    *\n    * @return {boolean} isValid\n    */\n   validateData($formView, object, formVals) {\n      let list = \"\";\n\n      // validate required fields\n      const requiredFields = this.fieldComponents(\n         (fComp) =>\n            fComp?.field?.().settings?.required == true ||\n            fComp?.settings?.required == true\n      ).map((fComp) => fComp.field());\n\n      // validate data\n      const validator = object.isValidData(formVals);\n      let isValid = validator.pass();\n\n      // $$($formView).validate();\n      $formView.validate();\n      /**\n       * helper function to fix the webix ui after adding an validation error\n       * message.\n       * @param {string} col - field.columnName\n       */\n      const fixInvalidMessageUI = (col) => {\n         const $forminput = $formView.elements[col];\n         if (!$forminput) return;\n         // Y position\n         const height = $forminput.$height;\n         if (height < 56) {\n            $forminput.define(\"height\", 60);\n            $forminput.resize();\n         }\n\n         // X position\n         const domInvalidMessage = $forminput.$view.getElementsByClassName(\n            \"webix_inp_bottom_label\"\n         )[0];\n         if (!domInvalidMessage?.style[\"margin-left\"]) {\n            domInvalidMessage.style.marginLeft = `${\n               this.settings.labelWidth ??\n               ABViewFormPropertyComponentDefaults.labelWidth\n            }px`;\n         }\n      };\n\n      // Display required messages\n      requiredFields.forEach((f) => {\n         if (!f) return;\n\n         const fieldVal = formVals[f.columnName];\n         if (fieldVal == \"\" || fieldVal == null || fieldVal.length < 1) {\n            $formView.markInvalid(f.columnName, L(\"This is a required field.\"));\n            list += `<li>${L(\"Missing Required Field\")} ${f.columnName}</li>`;\n            isValid = false;\n\n            // Fix position of invalid message\n            fixInvalidMessageUI(f.columnName);\n         }\n      });\n\n      // if data is invalid\n      if (!isValid) {\n         const saveButton = $formView.queryView({\n            view: \"button\",\n            type: \"form\",\n         });\n\n         // error message\n         if (validator?.errors?.length) {\n            validator.errors.forEach((err) => {\n               $formView.markInvalid(err.name, err.message);\n               list += `<li>${err.name}: ${err.message}</li>`;\n               fixInvalidMessageUI(err.name);\n            });\n\n            saveButton?.disable();\n         } else {\n            saveButton?.enable();\n         }\n      }\n      if (list) {\n         webix.alert({\n            type: \"alert-error\",\n            title: L(\"Problems Saving\"),\n            width: 400,\n            text: `<ul style='text-align:left'>${list}</ul>`,\n         });\n      }\n\n      return isValid;\n   }\n\n   /**\n    * @method recordRulesReady()\n    * This returns a Promise that gets resolved when all record rules report\n    * that they are ready.\n    * @return {Promise}\n    */\n   async recordRulesReady() {\n      return this.RecordRule.rulesReady();\n   }\n\n   /**\n    * @method saveData\n    * save data in to database\n    * @param $formView - webix's form element\n    *\n    * @return {Promise}\n    */\n   async saveData($formView) {\n      // call .onBeforeSaveData event\n      // if this function returns false, then it will not go on.\n      if (!this._callbacks?.onBeforeSaveData?.()) return;\n\n      $formView.clearValidation();\n\n      // get ABDatacollection\n      const dv = this.datacollection;\n      if (dv == null) return;\n\n      // get ABObject\n      const obj = dv.datasource;\n      if (obj == null) return;\n\n      // get ABModel\n      const model = dv.model;\n      if (model == null) return;\n\n      // show progress icon\n      $formView.showProgress?.({ type: \"icon\" });\n\n      // get update data\n      const formVals = this.getFormValues(\n         $formView,\n         obj,\n         dv,\n         dv.datacollectionLink\n      );\n\n      // form ready function\n      const formReady = (newFormVals) => {\n         // clear cursor after saving.\n         if (dv) {\n            if (this.settings.clearOnSave) {\n               dv.setCursor(null);\n               $formView.clear();\n            } else {\n               if (newFormVals && newFormVals.id) dv.setCursor(newFormVals.id);\n            }\n         }\n\n         $formView.hideProgress?.();\n\n         // if there was saved data pass it up to the onSaveData callback\n         // if (newFormVals) this._logic.callbacks.onSaveData(newFormVals);\n         if (newFormVals) this.emit(\"saved\", newFormVals); // Q? is this the right upgrade?\n      };\n\n      const formError = (err) => {\n         const $saveButton = $formView.queryView({\n            view: \"button\",\n            type: \"form\",\n         });\n\n         // mark error\n         if (err) {\n            if (err.invalidAttributes) {\n               for (const attr in err.invalidAttributes) {\n                  let invalidAttrs = err.invalidAttributes[attr];\n                  if (invalidAttrs && invalidAttrs[0])\n                     invalidAttrs = invalidAttrs[0];\n\n                  $formView.markInvalid(attr, invalidAttrs.message);\n               }\n            } else if (err.sqlMessage) {\n               webix.message({\n                  text: err.sqlMessage,\n                  type: \"error\",\n               });\n            } else {\n               webix.message({\n                  text: L(\"System could not save your data\"),\n                  type: \"error\",\n               });\n               this.AB.notify.developer(err, {\n                  message: \"Could not save your data\",\n                  view: this.toObj(),\n               });\n            }\n         }\n\n         $saveButton?.enable();\n\n         $formView?.hideProgress?.();\n      };\n\n      // Load data of DCs that use in record rules\n      await this.loadDcDataOfRecordRules();\n\n      // wait for our Record Rules to be ready before we continue.\n      await this.recordRulesReady();\n\n      // update value from the record rule (pre-update)\n      this.doRecordRulesPre(formVals);\n\n      // validate data\n      if (!this.validateData($formView, obj, formVals)) {\n         // console.warn(\"Data is invalid.\");\n         $formView.hideProgress?.();\n         return;\n      }\n\n      let newFormVals;\n      // {obj}\n      // The fully populated values returned back from service call\n      // We use this in our post processing Rules\n\n      try {\n         // is this an update or create?\n         if (formVals.id) {\n            newFormVals = await model.update(formVals.id, formVals);\n         } else {\n            newFormVals = await model.create(formVals);\n         }\n      } catch (err) {\n         formError(err.data);\n         throw err;\n      }\n\n      /*\n      // OLD CODE:\n      try {\n         await this.doRecordRules(newFormVals);\n         // make sure any updates from RecordRules get passed along here.\n         this.doSubmitRules(newFormVals);\n         formReady(newFormVals);\n         return newFormVals;\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: \"Error processing Record Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n         // Question:  how do we respond to an error?\n         // ?? just keep going ??\n         this.doSubmitRules(newFormVals);\n         formReady(newFormVals);\n         return;\n      }\n      */\n\n      try {\n         await this.doRecordRules(newFormVals);\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: \"Error processing Record Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n      }\n\n      // make sure any updates from RecordRules get passed along here.\n      try {\n         this.doSubmitRules(newFormVals);\n      } catch (errs) {\n         this.AB.notify.developer(errs, {\n            message: \"Error processing Submit Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n      }\n\n      formReady(newFormVals);\n      return newFormVals;\n   }\n\n   focusOnFirst() {\n      let topPosition = 0;\n      let topPositionId = \"\";\n      this.views().forEach((item) => {\n         if (item.key == \"textbox\" || item.key == \"numberbox\") {\n            if (item.position.y == topPosition) {\n               // topPosition = item.position.y;\n               topPositionId = item.id;\n            }\n         }\n      });\n      let childComponent = this.viewComponents[topPositionId];\n      if (childComponent && $$(childComponent.ui.id)) {\n         $$(childComponent.ui.id).focus();\n      }\n   }\n\n   async loadDcDataOfRecordRules() {\n      const tasks = [];\n\n      (this.settings?.recordRules ?? []).forEach((rule) => {\n         (rule?.actionSettings?.valueRules?.fieldOperations ?? []).forEach(\n            (op) => {\n               if (op.valueType !== \"exist\") return;\n\n               const pullDataDC = this.AB.datacollectionByID(op.value);\n\n               if (\n                  pullDataDC?.dataStatus ===\n                  pullDataDC.dataStatusFlag.notInitial\n               )\n                  tasks.push(pullDataDC.loadData());\n            }\n         );\n      });\n\n      await Promise.all(tasks);\n\n      return true;\n   }\n\n   get viewComponents() {\n      const superComponent = this.superComponent();\n      return superComponent.viewComponents;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (this.settings.recordRules) {\n         // TODO: scan recordRules for warnings\n      }\n\n      if (this.settings.submitRules) {\n         // TODO: scan submitRules for warnings.\n      }\n   }\n\n   /**\n    * @method deleteData\n    * delete data in to database\n    * @param $formView - webix's form element\n    *\n    * @return {Promise}\n    */\n   async deleteData($formView) {\n      // get ABDatacollection\n      const dc = this.datacollection;\n      if (dc == null) return;\n\n      // get ABObject\n      const obj = dc.datasource;\n      if (obj == null) return;\n\n      // get ABModel\n      const model = dc.model;\n      if (model == null) return;\n\n      // get update data\n      const formVals = $formView.getValues();\n\n      if (formVals?.id) {\n         const result = await model.delete(formVals.id);\n\n         // clear form\n         if (result) {\n            dc.setCursor(null);\n            $formView.clear();\n         }\n\n         return result;\n      }\n   }\n};\n","const ABViewFormButtonCore = require(\"../../core/views/ABViewFormButtonCore\");\nconst ABViewFormButtonComponent = require(\"./viewComponent/ABViewFormButtonComponent\");\n\nmodule.exports = class ABViewFormButton extends ABViewFormButtonCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormButtonComponent(this);\n   }\n};\n","const ABViewFormCheckboxCore = require(\"../../core/views/ABViewFormCheckboxCore\");\nconst ABViewFormCheckboxComponent = require(\"./viewComponent/ABViewFormCheckboxComponent\");\n\nmodule.exports = class ABViewFormCheckbox extends ABViewFormCheckboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormCheckboxComponent(this);\n   }\n};\n","const ABViewFormConnectCore = require(\"../../core/views/ABViewFormConnectCore\");\nconst ABViewFormConnectComponent = require(\"./viewComponent/ABViewFormConnectComponent\");\nconst ABViewPropertyAddPage =\n   require(\"./viewProperties/ABViewPropertyAddPage\").default;\nconst ABViewPropertyEditPage =\n   require(\"./viewProperties/ABViewPropertyEditPage\").default;\n\nconst ABViewFormConnectPropertyComponentDefaults =\n   ABViewFormConnectCore.defaultValues();\n\nmodule.exports = class ABViewFormConnect extends ABViewFormConnectCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      // Set filter value\n      this.__filterComponent = this.AB.filterComplexNew(\n         `${this.id}__filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.__filterComponent.fieldsLoad(\n         this.datasource ? this.datasource.fields() : [],\n         this.datasource ? this.datasource : null\n      );\n\n      // NOTE: .objectWorkspace is a v1 setting\n      // if (\n      //    !this.settings.objectWorkspace ||\n      //    !this.settings.objectWorkspace.filterConditions\n      // ) {\n      //    this.AB.error(\"Error: filter conditions do not exist\", {\n      //       error: \"filterConditions do not exist\",\n      //       viewLocation: {\n      //          application: this.application.name,\n      //          id: this.id,\n      //          name: this.label,\n      //       },\n      //       view: this,\n      //    });\n      //    // manually place an empty filter\n      //    this.settings[\"objectWorkspace\"] = {};\n      //    this.settings[\"objectWorkspace\"][\"filterConditions\"] = { glue: \"and\" };\n      // }\n\n      this.__filterComponent.setValue(\n         this.settings.filterConditions ??\n            ABViewFormConnectPropertyComponentDefaults.filterConditions\n      );\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.addPageTool.fromSettings(this.settings);\n      this.editPageTool.fromSettings(this.settings);\n   }\n\n   static get addPageProperty() {\n      return ABViewPropertyAddPage.propertyComponent(this.App, this.idBase);\n   }\n\n   static get editPageProperty() {\n      return ABViewPropertyEditPage.propertyComponent(this.App, this.idBase);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormConnectComponent(this);\n   }\n\n   get addPageTool() {\n      if (this.__addPageTool == null)\n         this.__addPageTool = new ABViewPropertyAddPage();\n\n      return this.__addPageTool;\n   }\n\n   get editPageTool() {\n      if (this.__editPageTool == null)\n         this.__editPageTool = new ABViewPropertyEditPage();\n\n      return this.__editPageTool;\n   }\n};\n","const ABViewFormCustomCore = require(\"../../core/views/ABViewFormCustomCore\");\nconst ABViewFormCustomComponent = require(\"./viewComponent/ABViewFormCustomComponent\");\n\nmodule.exports = class ABViewFormCustom extends ABViewFormCustomCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormCustomComponent(this);\n   }\n};\n","const ABViewFormDatepickerCore = require(\"../../core/views/ABViewFormDatepickerCore\");\nconst ABViewFormDatepickerComponent = require(\"./viewComponent/ABViewFormDatepickerComponent\");\n\nmodule.exports = class ABViewFormDatepicker extends ABViewFormDatepickerCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormDatepickerComponent(this);\n   }\n};\n","const ABViewFormItemCore = require(\"../../core/views/ABViewFormItemCore\");\nconst ABViewFormItemComponent = require(\"./viewComponent/ABViewFormItemComponent\");\n\nconst ABViewFormFieldPropertyComponentDefaults =\n   ABViewFormItemCore.defaultValues();\n\nmodule.exports = class ABViewFormItem extends ABViewFormItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static get componentUI() {\n      return ABViewFormItemComponent;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormItemComponent(this);\n   }\n\n   /**\n    * @method parentFormUniqueID\n    * return a unique ID based upon the closest form object this component is on.\n    * @param {string} key  The basic id string we will try to make unique\n    * @return {string}\n    */\n   parentFormUniqueID(key) {\n      var form = this.parentFormComponent();\n      var uniqueInstanceID;\n      if (form) {\n         uniqueInstanceID = form.uniqueInstanceID;\n      } else {\n         uniqueInstanceID = webix.uid();\n      }\n\n      return key + uniqueInstanceID;\n   }\n};\n","const ABViewFormJsonCore = require(\"../../core/views/ABViewFormJsonCore\");\nconst ABViewFormJsonComponent = require(\"./viewComponent/ABViewFormJsonComponent\");\n\nmodule.exports = class ABViewFormJson extends ABViewFormJsonCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormJsonComponent(this);\n   }\n};\n","const ABViewFormNumberCore = require(\"../../core/views/ABViewFormNumberCore\");\nconst ABViewFormNumberComponent = require(\"./viewComponent/ABViewFormNumberComponent\");\n\nmodule.exports = class ABViewFormNumber extends ABViewFormNumberCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormNumberComponent(this);\n   }\n};\n","const ABViewFormReadonlyCore = require(\"../../core/views/ABViewFormReadonlyCore\");\nconst ABViewFormReadonlyComponent = require(\"./viewComponent/ABViewFormReadonlyComponent\");\n\nmodule.exports = class ABViewFormReadonly extends ABViewFormReadonlyCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormReadonlyComponent(this);\n   }\n};\n","const ABViewFormSelectMultipleCore = require(\"../../core/views/ABViewFormSelectMultipleCore\");\nconst ABViewFormSelectMultipleComponent = require(\"./viewComponent/ABViewFormSelectMultipleComponent\");\n\nmodule.exports = class ABViewFormSelectMultiple extends (\n   ABViewFormSelectMultipleCore\n) {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormSelectMultipleComponent(this);\n   }\n};\n","const ABViewFormSelectSingleCore = require(\"../../core/views/ABViewFormSelectSingleCore\");\nconst ABViewFormSelectSingleComponent = require(\"./viewComponent/ABViewFormSelectSingleComponent\");\n\nmodule.exports = class ABViewFormSelectSingle extends (\n   ABViewFormSelectSingleCore\n) {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormSelectSingleComponent(this);\n   }\n};\n","const ABViewFormTextboxCore = require(\"../../core/views/ABViewFormTextboxCore\");\nconst ABViewFormTextboxComponent = require(\"./viewComponent/ABViewFormTextboxComponent\");\n\nmodule.exports = class ABViewFormTextbox extends ABViewFormTextboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormTextboxComponent(this);\n   }\n};\n","const ABViewFormTreeCore = require(\"../../core/views/ABViewFormTreeCore\");\nconst ABViewFormTreeComponent = require(\"./viewComponent/ABViewFormTreeComponent\");\n\nmodule.exports = class ABViewFormTree extends ABViewFormTreeCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormTreeComponent(this);\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewGanttComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewGantt_${baseView.id}`,\n         Object.assign(\n            {\n               menu: \"\",\n               gantt: \"\",\n            },\n            ids\n         )\n      );\n\n      this._tempDC = null;\n      // {ABDataCollection}\n      // A link to a DC that was passed in.  NOTE: this is only for\n      // the temp DCs created in the AppBuilder Designer and passed\n      // in.  Normal DCs are handled by the default CurrentDatacollection\n      // methods.\n\n      this.TitleField = null;\n      this.StartDateField = null;\n      this.EndDateField = null;\n      this.DurationField = null;\n      this.ProgressField = null;\n      this.NotesField = null;\n\n      this.originalStartDate = null;\n      this.originalEndDate = null;\n\n      this.pendingAdds = {};\n      // {Promise}  /* id : {Promise} */\n      // In order to prevent a race condition where multiple adds can be\n      // generated on the same item, we catch the repeats and just return\n      // the same data for each.\n\n      const idGantt = this.ids.gantt;\n\n      this.ganttElement = {\n         isExistsTask: (taskId) => {\n            const localService = $$(idGantt).getService(\"local\");\n            if (!localService) return false;\n\n            const tasksData = localService.tasks();\n            if (!tasksData || !tasksData.exists) return false;\n\n            return tasksData.exists(taskId);\n         },\n         removeTask: (taskId) => {\n            if (!this.ganttElement.isExistsTask(taskId)) return;\n\n            const opsService = $$(idGantt).getService(\"operations\");\n            if (!opsService) return;\n\n            return opsService.removeTask(taskId);\n         },\n      };\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      const { YEAR_SCALE, MONTH_SCALE, DAY_SCALE } = this.getConstantScales;\n      const _ui = super.ui([\n         {\n            cols: [\n               { fillspace: true },\n               {\n                  view: \"menu\",\n                  id: ids.menu,\n                  layout: \"x\",\n                  width: 300,\n                  data: [\n                     {\n                        id: \"day\",\n                        value: this.label(\"Day\"),\n                     },\n                     {\n                        id: \"week\",\n                        value: this.label(\"Week\"),\n                     },\n                     {\n                        id: \"month\",\n                        value: this.label(\"Month\"),\n                     },\n                     {\n                        id: \"year\",\n                        value: this.label(\"Year\"),\n                     },\n                  ],\n                  on: {\n                     onItemClick: (id /* , e, node */) => {\n                        this.setScale(id);\n                     },\n                  },\n               },\n            ],\n         },\n         {\n            id: ids.gantt,\n            view: \"gantt\",\n            scales: [YEAR_SCALE, MONTH_SCALE, DAY_SCALE],\n            override: new Map([\n               [\n                  gantt.services.Backend,\n                  // global webix gantt object\n                  class MyBackend extends gantt.services.Backend {\n                     async tasks() {\n                        const DC = self.CurrentDatacollection;\n                        if (!DC) return [];\n\n                        // if (DC.dataStatus != DC.dataStatusFlag.initialized) {\n                        //    await DC.loadData().catch((err) => {\n                        //       console.error(err);\n                        //    });\n                        // }\n                        return (DC.getData() || []).map((d, indx) =>\n                           self.convertFormat(d, indx)\n                        );\n                     }\n                     links() {\n                        return Promise.resolve([]);\n                     }\n                     async addTask(obj, index, parent) {\n                        if (!self.pendingAdds[obj.id]) {\n                           self.pendingAdds[obj.id] = self.taskAdd(obj);\n                        }\n                        const newTask = await self.pendingAdds[obj.id];\n                        delete self.pendingAdds[obj.id];\n                        return {\n                           id: (newTask || {}).id,\n                        };\n                     }\n                     async updateTask(id, obj) {\n                        return await self.taskUpdate(obj.id, obj);\n                     }\n                     async removeTask(id) {\n                        return await self.taskRemove(id);\n                     }\n                  },\n               ],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      // #HACK!: as of webix v.8.1.1 there is a visual glitch of the Gantt\n      // object if you replace a gantt widget with a new definition (like in\n      // the ABDesigner you can switch from Gantt1 to Gantt2 in the object\n      // workspace).  In that one case, the menu would disappear even though\n      // the data is present.  So this makes sure the menu is shown\n      const $menu = $$(this.ids.menu);\n\n      if ($menu) $menu.showItem(\"day\");\n   }\n\n   /**\n    * @method CurrentDatacollection()\n    * A helper to return the current ABDataCollection we are working with.\n    * @return {ABDataCollection}\n    */\n   get CurrentDatacollection() {\n      return super.CurrentDatacollection || this._tempDC;\n   }\n\n   /**\n    * @method convertFormat()\n    * Convert an ABObject's row value into a gantt task data format.\n    * @param {obj} row\n    *        The current row of data returned from an ABObject.\n    * @param {int} index\n    *        The order of this task.\n    * @return {obj}\n    *         A key=>value hash corresponding to the gantt task that\n    *         represents this row of data.\n    */\n   convertFormat(row = {}, index = null) {\n      const data = {};\n      const StartDateField = this.StartDateField;\n      const EndDateField = this.EndDateField;\n      const DurationField = this.DurationField;\n\n      if (!StartDateField || (!EndDateField && !DurationField)) return data;\n\n      const currDate = new Date();\n\n      data[\"id\"] = row.id || row.uuid;\n      data[\"type\"] = \"task\";\n      data[\"parent\"] = 0;\n      data[\"open\"] = true;\n\n      // define label\n      const TitleField = this.TitleField;\n      const ProgressField = this.ProgressField;\n      const NotesField = this.NotesField;\n\n      data[\"text\"] = TitleField\n         ? row[TitleField.columnName] || \"\"\n         : this.CurrentObject.displayData(row);\n      data[\"start_date\"] = row[StartDateField.columnName] || currDate;\n      data[\"progress\"] = ProgressField\n         ? parseFloat(row[ProgressField.columnName] || 0)\n         : 0;\n\n      if (NotesField) data[\"details\"] = row[NotesField.columnName] || \"\";\n\n      if (EndDateField)\n         data[\"end_date\"] = row[EndDateField.columnName] || currDate;\n\n      if (DurationField) data[\"duration\"] = row[DurationField.columnName] || 1;\n\n      // Default values\n      if (!data[\"end_date\"] && !data[\"duration\"]) {\n         data[\"end_date\"] = currDate;\n         data[\"duration\"] = 1;\n      }\n\n      if (index) data[\"order\"] = index;\n\n      return data;\n   }\n\n   /**\n    * @method convertValues()\n    * Convert a Gantt task into a set of values for our ABObject.\n    * @param {obj} task\n    *        The current gantt task data.\n    * @return {obj}\n    *         A key=>value hash corresponding to the ABObject that\n    *         is tied to this gantt.\n    */\n   convertValues(task) {\n      const patch = {};\n      const TitleField = this.TitleField;\n      const StartDateField = this.StartDateField;\n      const ProgressField = this.ProgressField;\n      const NotesField = this.NotesField;\n      const EndDateField = this.EndDateField;\n      const DurationField = this.DurationField;\n\n      if (TitleField) patch[TitleField.columnName] = task[\"text\"] || \"\";\n\n      if (StartDateField) patch[StartDateField.columnName] = task[\"start_date\"];\n\n      if (ProgressField)\n         patch[ProgressField.columnName] = parseFloat(task[\"progress\"] || 0);\n\n      if (NotesField) patch[NotesField.columnName] = task[\"details\"];\n\n      if (EndDateField) patch[EndDateField.columnName] = task[\"end_date\"];\n\n      if (DurationField) patch[DurationField.columnName] = task[\"duration\"];\n\n      return patch;\n   }\n\n   /**\n    * @method objectLoad\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      super.objectLoad(object);\n\n      // const baseView = this.view;\n      const settings = this.settings;\n\n      if (object) {\n         this.TitleField = object.fieldByID(settings.titleFieldID);\n         this.StartDateField = object.fieldByID(settings.startDateFieldID);\n         this.EndDateField = object.fieldByID(settings.endDateFieldID);\n         this.DurationField = object.fieldByID(settings.durationFieldID);\n         this.ProgressField = object.fieldByID(settings.progressFieldID);\n         this.NotesField = object.fieldByID(settings.notesFieldID);\n      }\n   }\n\n   /**\n    * @method datacollectionLoad\n    * @param {ABDatacollection} datacollection\n    */\n   datacollectionLoad(datacollection) {\n      super.datacollectionLoad(datacollection);\n\n      const dc = this.CurrentDatacollection || datacollection;\n      if (!dc) return;\n\n      // NOTE: this can happen in the ABDesigner object workspace.\n      // we send in a temp DC with no .id\n      this._tempDC = datacollection;\n\n      // NOTE: keep .objectLoad() before any .initData() is called.\n      this.objectLoad(dc.datasource);\n\n      const eventNames = [\"create\", \"update\", \"delete\", \"initializedData\"];\n\n      eventNames.forEach((e) => {\n         if (\n            e in dc._events &&\n            this.__events.findIndex((eo) => eo.eventName === e) !== -1\n         )\n            return;\n\n         switch (e) {\n            case \"delete\":\n               this.eventAdd({\n                  emitter: dc,\n                  eventName: \"delete\",\n                  listener: (taskId) => {\n                     // remove this task in gantt\n                     if (this.ganttElement.isExistsTask(taskId))\n                        this.ganttElement.removeTask(taskId);\n                  },\n               });\n\n               break;\n\n            default:\n               this.eventAdd({\n                  emitter: dc,\n                  eventName: e,\n                  listener: () => {\n                     this.initData();\n                  },\n               });\n\n               break;\n         }\n      });\n   }\n\n   /**\n    * @function hide()\n    * hide this component.\n    */\n   hide() {\n      $$(this.ids.component)?.hide();\n   }\n\n   initData() {\n      const ganttElem = $$(this.ids.gantt);\n      if (!ganttElem) return;\n\n      const dataService = ganttElem.getService(\"local\");\n      if (!dataService) return;\n\n      const dcTasks = dataService.tasks();\n      if (!dcTasks) return;\n\n      // gantt v 8.1.1\n      // Note: there is a race condition that can happen here.\n      // dataService.tasks() calls the MyBackend.tasks() above which\n      // returns a Promise.\n      // when you call dcTasks.clearAll() before the promise\n      // is resolved, the gantt internally throws an error.\n      //\n      // So give webix some time to internally complete it's process\n      // before we do .clearAll();\n      setTimeout(() => {\n         dcTasks.clearAll();\n\n         const DC = this.CurrentDatacollection;\n         const gantt_data = {\n            data: DC\n               ? (DC.getData() || []).map((d, index) =>\n                    this.convertFormat(d, index)\n                 )\n               : [],\n         };\n\n         // check required fields before parse\n         if (this.StartDateField && (this.EndDateField || this.DurationField)) {\n            dcTasks.parse(gantt_data);\n         }\n\n         // Keep original start and end dates for calculate scale to display\n         const currScale = dataService.getScales();\n\n         this.originalStartDate = currScale.start;\n         this.originalEndDate = currScale.end;\n\n         this.sort();\n      }, 10);\n   }\n\n   get getConstantScales() {\n      const DAY_SCALE = { unit: \"day\", format: \"%d\" },\n         WEEK_SCALE = {\n            unit: \"week\",\n            format: (start) => {\n               const parser = webix.Date.dateToStr(\"%d %M\");\n               const wstart = webix.Date.weekStart(start);\n               const wend = webix.Date.add(\n                  webix.Date.add(wstart, 1, \"week\", true),\n                  -1,\n                  \"day\",\n                  true\n               );\n\n               return parser(wstart) + \" - \" + parser(wend);\n            },\n         },\n         MONTH_SCALE = { unit: \"month\", format: \"%F\" },\n         YEAR_SCALE = { unit: \"year\", format: \"%Y\" };\n\n      return {\n         DAY_SCALE,\n         WEEK_SCALE,\n         MONTH_SCALE,\n         YEAR_SCALE,\n      };\n   }\n\n   setScale(scale) {\n      const ganttElem = $$(this.ids.gantt);\n      if (!ganttElem) return;\n\n      const ganttData = ganttElem.getService(\"local\");\n      if (!ganttData) return;\n\n      const newScales = [];\n      const { YEAR_SCALE, MONTH_SCALE, WEEK_SCALE, DAY_SCALE } =\n         this.getConstantScales;\n\n      switch (scale) {\n         case \"day\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE, DAY_SCALE);\n            break;\n\n         case \"week\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE, WEEK_SCALE);\n            break;\n\n         case \"month\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE);\n            break;\n\n         case \"year\":\n            newScales.push(YEAR_SCALE);\n            break;\n      }\n\n      const abWebix = this.AB.Webix;\n      const currScale = ganttElem.getService(\"local\").getScales(),\n         start = abWebix.Date.add(this.originalStartDate, -1, scale, true),\n         end = abWebix.Date.add(this.originalEndDate, 1, scale, true);\n\n      ganttData.setScales(\n         start,\n         end,\n         currScale.precise,\n         currScale.cellWidth,\n         currScale.cellHeight,\n         newScales\n      );\n      ganttElem.$app.refresh();\n      ganttElem.getState().$batch({ top: 0, left: 0 });\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    */\n   onShow() {\n      super.onShow();\n      this.datacollectionLoad(this.datacollection);\n\n      $$(this.ids.component)?.show();\n   }\n\n   sort() {\n      // TODO: sorting;\n      return;\n      // const gantt = $$(ids.gantt).getGantt();\n      // if (!gantt) return;\n\n      // // default sort\n      // const MAX_date = new Date(8640000000000000);\n      // gantt.sort(function(a, b) {\n      //    const aStartDate = a[\"start_date\"],\n      //       aEndDate = a[\"end_date\"],\n      //       aDuration = a[\"duration\"] || 1,\n      //       bStartDate = b[\"start_date\"],\n      //       bEndDate = b[\"end_date\"],\n      //       bDuration = b[\"duration\"] || 1;\n\n      //    // if no start date, then be a last item\n      //    if (\n      //       a[this.StartDateField.columnName] == null ||\n      //       b[this.StartDateField.columnName] == null\n      //    ) {\n      //       return (\n      //          (a[this.StartDateField.columnName] || MAX_date) -\n      //          (b[this.StartDateField.columnName] || MAX_date)\n      //       );\n      //    } else if (aStartDate != bStartDate) {\n      //       return aStartDate - bStartDate;\n      //    } else if (aEndDate != bEndDate) {\n      //       return aEndDate - bEndDate;\n      //    } else if (aDuration != bDuration) {\n      //       return bDuration - aDuration;\n      //    }\n      // }, false);\n   }\n\n   async taskAdd(taskData) {\n      const patch = this.convertValues(taskData);\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend addTask() method\n         // On Webix documents, the method addTask() have to return the added object so we have to pass the data we add through this method.\n         return await this.CurrentObject?.model().create(patch);\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Saving Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to save this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskAdd(): Error Saving Item\",\n            patch,\n         });\n\n         throw e;\n      }\n   }\n\n   async taskRemove(rowId) {\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend removeTask() method\n         // On Webix documents, the method removeTask() return {} (an empty object) so we return {} in removeTask() instead.\n         await this.CurrentObject.model().delete(rowId);\n\n         return {};\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Removing Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to remove this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskRemove(): Error Removing Item\",\n            rowId,\n         });\n\n         throw e;\n      }\n   }\n\n   async taskUpdate(rowId, updatedTask) {\n      const patch = this.convertValues(updatedTask);\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend updateTask() method\n         // On Webix documents, the method updateTask() return {} (an empty object) so we return {} in updateTask() instead.\n         await this.CurrentObject.model().update(rowId, patch);\n\n         return {};\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Updating Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to update this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskUpdate(): Error Updating Item\",\n            patch,\n         });\n\n         throw e;\n      }\n   }\n}\n","import ABViewGanttComponent from \"./viewComponent/ABViewGanttComponent\";\n\nconst ABViewGanttCore = require(\"../../core/views/ABViewGanttCore\");\n\nexport default class ABViewGantt extends ABViewGanttCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewGanttComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      } else {\n         if (!this.settings.startDateFieldID) {\n            this.warningsMessage(`doesn't have a start date field set.`);\n         } else {\n            let field = DC.datasource?.fieldByID(\n               this.settings.startDateFieldID\n            );\n            if (!field) {\n               this.warningsMessage(\n                  `can't lookup field: startDate[${this.settings.startDateFieldID}]`\n               );\n            }\n         }\n      }\n   }\n}\n","/*\n * ABViewGridPopupExport.js\n * Manage the Popup that allows you to export data into one of our supported\n * formats.\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\n\nexport default class ABWorkObjectPopupExport extends ClassUI {\n   constructor(idBase) {\n      idBase = idBase || \"abviewgridpopupExport\";\n\n      super({\n         popupExport: `${idBase}_popupExport`,\n         list: `${idBase}_popupExport_list`,\n      });\n\n      this._currentObject = null;\n      // {ABObject}\n      // The ABObject of the data we will export.  We can find out the fields\n      // from the object.\n\n      this._dataCollection = null;\n      // {ABDatacCollection}\n      // The ABDataCollection that contains the data we are going to export.\n\n      this._grid = null;\n      // {webix.grid}\n      // the current webix.grid that contains the data we are going to export.\n\n      this._filename = null;\n      // {string}\n      // the name of the desired output file.\n\n      this._hiddenFields = [];\n      // {array}\n      // An array of ABField.columnName(s) that we are not wanting to export\n   }\n\n   ui() {\n      var self = this;\n\n      // webix UI definition:\n      return {\n         view: \"popup\",\n         id: this.ids.popupExport,\n         width: 160,\n         height: 0, //150,\n         select: false,\n         hidden: true,\n         body: {\n            id: this.ids.list,\n            view: \"list\",\n            autoheight: true,\n            data: [\n               { name: \"CSV\", icon: \"file-excel-o\" },\n               { name: \"Excel\", icon: \"file-excel-o\" },\n               { name: \"PDF\", icon: \"file-pdf-o\" },\n               { name: \"PNG\", icon: \"file-image-o\" },\n            ],\n            template:\n               \"<div><i class='fa fa-#icon# webix_icon_btn' aria-hidden='true'></i> #name#</div>\",\n            on: {\n               onItemClick: function (id /*, e, node */) {\n                  var component = this.getItem(id);\n                  self.export(component.name);\n               },\n            },\n         },\n      };\n   }\n\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n      webix.ui(this.ui());\n      $$(this.ids.popupExport).resize();\n   }\n\n   // internal business logic\n\n   /**\n    * @method dataCollectionLoad()\n    * the current ABDataCollection we are working with.\n    * @param {ABDataCollection} dc\n    */\n   dataCollectionLoad(dc) {\n      this._dataCollection = dc;\n   }\n\n   /**\n    * @method objectLoad()\n    * The current ABObject we are working with.\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method setHiddenFields\n    * Register Fields we don't want exported in our data.\n    * @param {array} fields\n    *        An array of ABField.columnName(s) to exclude from our export.\n    */\n   setHiddenFields(fields = []) {\n      this._hiddenFields = fields ?? [];\n   }\n\n   /**\n    * @method setFilename()\n    * Register the name of the file we want our data to export as.\n    * @param {string} filename\n    */\n   setFilename(filename) {\n      this._filename = filename;\n   }\n\n   /**\n    * @method setGridComponent()\n    * Register the webix.grid that currently stores the data we are\n    * exporting.\n    * @param {webix.grid} $grid\n    */\n   setGridComponent($grid) {\n      this._grid = $grid;\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    */\n   show($view) {\n      $$(this.ids.popupExport).show($view);\n   }\n\n   async export(name) {\n      let fnExport;\n\n      let columns = {};\n\n      let dc = this._dataCollection;\n      let _currentObject = this._currentObject;\n      let _grid = this._grid;\n      let _filename = this._filename;\n\n      if (\n         dc &&\n         (!dc.settings.loadAll || dc.dataStatus == dc.dataStatusFlag.notInitial)\n      ) {\n         // Load all data\n         await dc.reloadData(0, null);\n         dc.settings.loadAll = true;\n      }\n\n      // client filter data\n      // template of report\n      if (_currentObject) {\n         _currentObject.fields().forEach((f) => {\n            // hidden fields\n            if (this._hiddenFields.indexOf(f.columnName) > -1) return;\n\n            columns[f.columnName] = {\n               template: (rowData) => {\n                  return f.format(rowData);\n               },\n            };\n         });\n      }\n\n      // If there are checked items, then export them only\n      // Otherwise export all items\n      const noCheckedRow =\n         _grid.data.find({ appbuilder_select_item: 1 }).length < 1;\n      const filterRow = (row) =>\n         noCheckedRow || row?.appbuilder_select_item == 1;\n\n      switch (name) {\n         case \"CSV\":\n            webix.csv.delimiter.cols = \",\";\n\n            fnExport = webix.toCSV(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               columns: columns,\n               filter: filterRow,\n            });\n            break;\n         case \"Excel\":\n            fnExport = webix.toExcel(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               name:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               columns: columns,\n               filterHTML: true,\n               filter: filterRow,\n            });\n            break;\n         case \"PDF\":\n            fnExport = webix.toPDF(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               filterHTML: true,\n               filter: filterRow,\n            });\n            break;\n         case \"PNG\":\n            fnExport = webix.toPNG(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               // filter: NOT SUPPORT\n            });\n            break;\n      }\n\n      try {\n         await fnExport;\n         $$(this.ids.popupExport).hide();\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: `ABViewGridPopupExport:export(): System could not export: ${name}`,\n            exportType: name,\n            columns,\n            fileName: _filename,\n         });\n      }\n   }\n\n   // this.dataCollectionLoad = _logic.dataCollectionLoad;\n   // this.objectLoad = _logic.objectLoad;\n   // this.setGridComponent = _logic.setGridComponent;\n   // this.setFilename = _logic.setFilename;\n   // this.setHiddenFields = _logic.setHiddenFields;\n   // this.show = _logic.show;\n}\n","/*\n * ABViewGridPopupMassUpdate\n *\n * An ABViewGrid can offer a mass update feature.  This is a ui component\n * to help with the processing of the update.\n *\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\nimport RowUpdater from \"../RowUpdater\";\n\nvar L = null;\n\nexport default class ABViewGridPopupMassUpdate extends ClassUI {\n   //.extend(idBase, function(App) {\n\n   constructor(ABViewGridComponent, idBase) {\n      idBase = idBase || \"abviewgridpopupMassUpdate\";\n\n      super({\n         component: `${idBase}_popupMassUpdate`,\n         submit: `${idBase}_submitMassUpdate`,\n      });\n\n      this.CurrentObject = null;\n      // {ABObject}\n      // Which ABObject are we currently working with.\n\n      this.GridComponent = ABViewGridComponent;\n      // {ABViewGridComponent}\n      // The current ABViewGridComponent we are working with.\n\n      this.AB = ABViewGridComponent.AB;\n      // {ABFactory}\n\n      this.rowUpdater = new RowUpdater(idBase, this.AB);\n      // {RowUpdater}\n      // An instance of our RowUpdater form builder.\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   ui() {\n      var ids = this.ids;\n\n      // Our webix UI definition:\n      return {\n         view: \"popup\",\n         id: ids.component,\n         // modal: true,\n         body: {\n            width: 500,\n            rows: [\n               // Update panel\n               this.rowUpdater.ui(),\n               { height: 15 },\n               {\n                  cols: [\n                     {},\n                     {\n                        view: \"button\",\n                        value: L(\"Cancel\"),\n                        width: 100,\n                        click: () => {\n                           this.hide();\n                        },\n                     },\n                     {\n                        id: ids.submit,\n                        css: \"webix_primary\",\n                        view: \"button\",\n                        label: L(\"Update\"),\n                        type: \"form\",\n                        width: 120,\n                        click: () => {\n                           this.submit();\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n         on: {\n            onShow: () => {\n               this.onShow();\n            },\n         },\n      };\n   }\n\n   async init(AB) {\n      webix.ui(this.ui());\n      this.rowUpdater.init(AB);\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method hide()\n    * Hide the popup.\n    */\n   hide() {\n      $$(this.ids.component).hide();\n   }\n\n   /**\n    * @function objectLoad\n    * Ready the Popup according to the current object & datatable\n    * @param {ABObject} object\n    *        the currently selected object.\n    * @param {webix.datatable} dataTable\n    *        the dataTable we need to run the mass update on...trust me this\n    *        will be good\n    */\n   objectLoad(object, dataTable) {\n      this.CurrentObject = object;\n      this.rowUpdater.objectLoad(object);\n      this.DataTable = dataTable;\n   }\n\n   onShow() {}\n\n   /**\n    * @method show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    * @param {json} options\n    *        Additional webix options related to the .show() method.\n    */\n   show($view, options = null) {\n      if (options != null) {\n         $$(this.ids.component).show($view, options);\n      } else {\n         $$(this.ids.component).show($view);\n      }\n   }\n\n   /**\n    * @method submit()\n    * Process the submit action by getting the values to change and then\n    * running a batchUpdate() on the items in our datatable that were selected.\n    */\n   submit() {\n      // Update values to records\n      let update_button = $$(this.ids.submit),\n         update_items = this.rowUpdater.getValue() || [];\n\n      update_button.disable();\n\n      if (!this.GridComponent) {\n         // TODO : Message\n         // console.log(\"no data collection to update\");\n         update_button.enable();\n         return;\n      } else if (update_items.length < 1) {\n         // TODO : Message\n         update_button.enable();\n         return;\n      }\n\n      let $datatable = this.GridComponent.getDataTable(); // $$(DataTable.ui.id);\n      let updatedRowIds = [];\n      $datatable.data.each(function (row) {\n         if (\n            row &&\n            Object.prototype.hasOwnProperty.call(\n               row,\n               \"appbuilder_select_item\"\n            ) &&\n            row.appbuilder_select_item == 1\n         ) {\n            updatedRowIds.push(row.id);\n         }\n      });\n\n      let vals = {};\n      update_items.forEach((item) => {\n         let fieldInfo = this.CurrentObject.fieldByID(item.fieldId);\n         if (!fieldInfo) return;\n\n         vals[fieldInfo.columnName] = item.value;\n      });\n\n      if (updatedRowIds.length > 0) {\n         webix.confirm({\n            title: L(\"Updating Multiple Records\"),\n            text: L(\"Are you sure you want to update the selected records?\"),\n            callback: (result) => {\n               if (result) {\n                  if ($datatable && $datatable.showProgress)\n                     $datatable.showProgress({ type: \"icon\" });\n\n                  let objModel = this.CurrentObject.model();\n                  objModel\n                     .batchUpdate({\n                        rowIds: updatedRowIds,\n                        values: vals,\n                     })\n                     .then(() => {\n                        // Update webix.datatable\n                        (updatedRowIds ?? []).forEach((rowId) => {\n                           $datatable.updateItem(rowId, vals);\n                        });\n\n                        // Anything we need to do after we are done.\n                        update_button.enable();\n                        this.hide();\n\n                        if ($datatable && $datatable.hideProgress)\n                           $datatable.hideProgress();\n                     })\n                     .catch((err) => {\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewGridPopupMassUpdate:submit(): Error during batchUpdate\",\n                           rowIds: updatedRowIds,\n                           values: vals,\n                        });\n                     });\n               } else {\n                  update_button.enable();\n               }\n            },\n         });\n      } else {\n         webix.alert({\n            title: L(\"No Records Selected\"),\n            text: L(\n               \"You need to select at least one record...did you drink your coffee today?\"\n            ),\n         });\n         update_button.enable();\n         this.hide();\n      }\n   }\n}\n","import ABViewComponent from \"./ABViewComponent\";\nimport ABPopupExport from \"../ABViewGridPopupExport\";\nimport ABPopupMassUpdateClass from \"../ABViewGridPopupMassUpdate\";\nimport ABPopupSortField from \"../ABViewGridPopupSortFields\";\n\nexport default class ABViewGridComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewGrid_${baseView.id}`,\n         Object.assign(\n            {\n               table: \"\",\n\n               // component: `${base}_component`,\n               toolbar: \"\",\n               buttonDeleteSelected: \"\",\n\n               buttonFilter: \"\",\n               buttonMassUpdate: \"\",\n               buttonSort: \"\",\n               buttonExport: \"\",\n\n               globalSearchToolbar: \"\",\n\n               datatable: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_filterData = (fnFilter, filterRules) => {\n         this.callbackFilterData(fnFilter, filterRules); // be notified when there is a change in the filter\n      };\n\n      this.handler_select = (...params) => {\n         this.selectRow(...params);\n      };\n      // {fn} .handler_select\n      // the callback fn for our selectRow()\n      // We want this called when the .datacollection we are linked to\n      // emits an \"onChange\" event.\n\n      this.detatch();\n      baseView.filterHelper.on(\"filter.data\", this._handler_filterData);\n\n      // derive these from viewGrid\n      this.id = baseView.id;\n\n      /////\n      ///// For TEsting:\n      /////\n      // this.settings.showToolbar = 1;\n      // this.settings.isEditable = 1;\n      // this.settings.isExportable = 1;\n      // this.settings.gridFilter = {\n      //    filterOption: 1,\n      //    userFilterPosition: \"form\",\n      //    isGlobalToolbar: 1,\n      // };\n\n      // this.settings.detailsPage = \"some-uuid\";\n      // this.settings.detailTab = \"some_uuid_2\";\n      // this.settings.trackView = 1;\n      /////\n      ///// end testing\n      /////\n\n      this.columnSplitLeft = 0;\n      // {integer}\n      // Which column to \"split\"/\"freeze\" from the left side of the grid.\n\n      this.columnSplitRight = 0;\n      // {integer}\n      // The # columns to the right to freeze.\n\n      // this.datacollection = null;\n      // // {ABDataCollection}\n      // // The Webix DataCollection that manages the data we are displaying.\n\n      this.validationError = false;\n      // {bool}\n      // Has a Validation Error occured?\n\n      this.linkPage = baseView.linkPageHelper.component();\n      // {ABViewPropertyLinkPage}\n      //\n\n      const idTable = this.ids.table;\n      const ab = this.AB;\n\n      this.PopupExport = new ABPopupExport(idTable);\n      this.PopupExport.init(ab);\n      // {ABViewGridPopupExport}\n      // Popup for managing how to export our data.\n\n      this.PopupMassUpdateComponent = new ABPopupMassUpdateClass(this, idTable);\n      this.PopupMassUpdateComponent.init(ab);\n      // this.PopupMassUpdateComponent.on(\"\")\n      // {}\n      // The popup for performing a Mass Edit operation.\n\n      this.PopupSortDataTableComponent = new ABPopupSortField(idTable);\n      this.PopupSortDataTableComponent.init(ab);\n      this.PopupSortDataTableComponent.on(\"changed\", (sortOptions) => {\n         this.callbackSortData(sortOptions);\n      });\n      // {ABViewGridPopupSortFields}\n      // The popup for adding sort criteria to our grid.\n\n      this.skippableColumns = [\n         \"appbuilder_select_item\",\n         \"appbuilder_view_detail\",\n         \"appbuilder_view_track\",\n         \"appbuilder_view_edit\",\n         \"appbuilder_trash\",\n      ];\n      // {array}\n      // An array of column names that should be skipped from some of our\n      // event handlers.\n\n      // this.EditField = null;\n      // // {ABFieldXXX}\n      // // Which ABField is the focus of our PopupHeader menu?\n\n      // this.EditNode = null;\n      // // {HTML DOM}\n      // // The webix.$node where the ABField Header is that our PopupHeader\n      // // should be displayed at.\n\n      this.ignoreLocalSettings = false;\n      // {bool}\n      // should we ignore our local settings in our current context?\n      // (used in ABDesigner when our settings will change as we need to\n      // use those instead of the saved settings.)\n\n      this._gridSettings = null;\n      // {hash} { grid.id : [ {columnHeader}, {columnHeader} ...]}\n      // Keep a global copy of our local Grid settings, so we can optimize the header\n      // sizes.\n\n      this._isDatacollectionLoaded = false;\n   }\n\n   // {string}\n   // the unique key for ABViewGrids to store/retrieve their local settings\n   get keyStorageSettings() {\n      return \"abviewgrid_settings\";\n   }\n\n   detatch() {\n      this.view.filterHelper.removeAllListeners(\"filter.data\");\n      [\"changeCursor\", \"cursorStale\", \"cursorSelect\"].forEach((key) => {\n         this.datacollection?.removeListener(key, this.handler_select);\n      });\n   }\n\n   /**\n    * @method getColumnIndex()\n    * return the Datatable.getColumnIndex() value\n    * @param {string} id\n    *        the uuid of the column we are referencing.\n    * @return {integer}\n    */\n   getColumnIndex(id) {\n      let indx = this.getDataTable().getColumnIndex(id);\n      if (!this.settings.massUpdate) {\n         // the index is 0 based. So if the massUpdate feature isn't\n         // enabled, we need to add 1 to the result so they look like\n         // a 1, 2, ...\n\n         indx++;\n      }\n      return indx;\n   }\n\n   uiDatatable() {\n      const ids = this.ids;\n      const settings = this.settings;\n      const self = this;\n\n      let view = \"datatable\";\n\n      if (settings.isTreeDatable || settings.groupBy)\n         // switch datatable to support tree\n         view = \"treetable\";\n\n      let selectType = \"cell\";\n\n      if (!settings.isEditable && (settings.detailsPage || settings.editPage))\n         selectType = \"row\";\n\n      return {\n         view,\n         id: ids.datatable,\n         resizeColumn: { size: 10 },\n         resizeRow: { size: 10 },\n         prerender: false,\n         editable: settings.isEditable,\n         fixedRowHeight: false,\n         height: settings.height || 0,\n         editaction: \"custom\",\n         select: selectType,\n         footer:\n            // show footer when there are summary columns\n            settings.summaryColumns.length > 0 ||\n            settings.countColumns.length > 0,\n         tooltip: true,\n         // tooltip: {\n         //    // id: ids.tooltip,\n         //    template: (obj, common) => {\n         //       return this.toolTip(obj, common);\n         //    },\n         //    on: {\n         //       // When showing a larger image preview the tooltip sometime displays part of the image off the screen...this attempts to fix that problem\n         //       onBeforeRender: function () {\n         //          self.toolTipOnBeforeRender(this.getNode());\n         //       },\n         //       onAfterRender: function (data) {\n         //          self.toolTipOnAfterRender(this.getNode());\n         //       },\n         //    },\n         // },\n         dragColumn: true,\n         on: {\n            onBeforeSelect: function (data, preserve) {\n               if (self.skippableColumns.indexOf(data.column) != -1) {\n                  return false;\n               } else if (settings.isEditable) {\n                  const currObject = self.datacollection.datasource;\n                  const selectField = currObject.fields(\n                     (f) => f.columnName === data.column\n                  )[0];\n\n                  if (selectField == null) return true;\n\n                  const cellNode = this.getItemNode({\n                        row: data.row,\n                        column: data.column,\n                     }),\n                     rowData = this.getItem(data.row);\n\n                  return selectField.customEdit(rowData, null, cellNode);\n               } else if (!settings.detailsPage && !settings.editPage)\n                  return false;\n            },\n            onAfterSelect: (data, preserve) => {\n               // {ABObject} data\n               //            the selected object\n               // {bool} prevent\n               //        indicates whether the previous selection state should\n               //        be saved. (is multiselect and they are holding SHIFT)\n               if (this.settings.isEditable) {\n                  this.onAfterSelect(data, preserve);\n               }\n            },\n            // onBeforeEditStart: function (/*id*/) {\n            //    // Not sure what this is suposed to check, but this condition\n            //    // will always be false.\n            //    if (!this.getItem(id) == \"appbuilder_select_item\") return false;\n            // },\n            onCheck: function (row, col, val) {\n               // Update checkbox data\n               if (col == \"appbuilder_select_item\") {\n                  // do nothing because we will parse the table once we decide\n                  // if we are deleting or updating rows\n                  self.toggleUpdateDelete();\n               } else {\n                  if (settings.isEditable) {\n                     // if the colum is not the select item column move on to\n                     // the next step to save\n                     const state = {\n                        value: val,\n                     };\n                     const editor = {\n                        row: row,\n                        column: col,\n                        config: null,\n                     };\n\n                     self.onAfterEditStop(state, editor);\n                  } else {\n                     const node = this.getItemNode({\n                        row: row,\n                        column: col,\n                     });\n                     const checkbox = node.querySelector(\n                        'input[type=\"checkbox\"]'\n                     );\n\n                     if (val == 1) {\n                        checkbox.checked = false;\n                     } else {\n                        checkbox.checked = true;\n                     }\n                  }\n               }\n            },\n            onBeforeEditStop: function (state, editor) {\n               // Check if data loading is complete\n               const oldValue = state.old;\n               let newValue = state.value;\n               if (!Array.isArray(newValue)) newValue = [newValue];\n               if (\n                  oldValue != null &&\n                  oldValue != \"\" &&\n                  // If options does not load completely, then Webix returns state.value as ['', '', '']\n                  newValue.filter((val) => val != null && val != \"\").length <\n                     1 &&\n                  // Check if no data load to the option\n                  editor.getPopup?.().getList?.().data?.find({}).length < 1\n               ) {\n                  return false;\n               }\n            },\n            onAfterEditStop: (state, editor, ignoreUpdate) => {\n               if (this.validationError == false)\n                  this.onAfterEditStop(state, editor, ignoreUpdate);\n            },\n            onValidationError: function () {\n               this.validationError = true;\n            },\n            onValidationSuccess: function () {\n               this.validationError = false;\n            },\n\n            // We are sorting with server side requests now so we can remove this\n            // onAfterLoad: function () {\n            //    _logic.onAfterLoad();\n            // },\n            onColumnResize: function (\n               columnName,\n               newWidth,\n               oldWidth,\n               user_action\n            ) {\n               // if we resize the delete column we want to resize the last\n               // column but Webix will not allow since the column is split\n               const rightSplitItems = [\n                  \"appbuilder_view_detail\",\n                  \"appbuilder_view_track\",\n                  \"appbuilder_view_edit\",\n                  \"appbuilder_trash\",\n               ];\n\n               if (rightSplitItems.indexOf(columnName) != -1) {\n                  // Block events so we can leave the delete column alone\n                  this.blockEvent();\n                  // keeps original width\n                  this.setColumnWidth(columnName, oldWidth);\n                  this.unblockEvent();\n                  // Listen to events again\n\n                  // find the last column's config\n                  const column = self.getLastColumn();\n\n                  columnName = column.id;\n\n                  // determine if we are making the column larger or smaller\n                  if (newWidth < oldWidth) {\n                     newWidth = column.width + 40;\n                     // add 40 because there is not any more space to drag so we\n                     // will allow 40px increments\n                  } else {\n                     newWidth = column.width - (newWidth - 40);\n                     // take the column's width and subtrack the difference of\n                     // the expanded delet column drag\n                  }\n                  // we don't want columns to be smaller than 50 ?? do we ??\n                  // I could be wrong maybe a checkbox could be smaller so this\n                  // could change\n                  if (newWidth < 50) {\n                     newWidth = 50;\n                  }\n                  // minWidth is important because we are using fillspace:true\n                  column.minWidth = newWidth;\n                  // Sets the UI\n                  this.setColumnWidth(columnName, newWidth);\n               }\n               // Saves the new width\n               if (user_action) {\n                  self.onColumnResize(\n                     columnName,\n                     newWidth,\n                     oldWidth,\n                     user_action\n                  );\n               }\n            },\n            onRowResize: (rowId) => {\n               // V2: we no longer do anything onRowResize()\n               // before we saved the row height in the record.\n               // this.onRowResize(rowId);\n            },\n            onBeforeColumnDrag: (sourceId, event) =>\n               !(this.skippableColumns.indexOf(sourceId) !== -1),\n            onBeforeColumnDrop: (sourceId, targetId, event) =>\n               // Make sure we are not trying to drop onto one of our special\n               // columns ...\n               !(this.skippableColumns.indexOf(targetId) !== -1),\n            onAfterColumnDrop: (sourceId, targetId, event) =>\n               this.onAfterColumnDrop(sourceId, targetId, event),\n            // onAfterColumnShow: function (id) {\n            //    // console.warn(\"!! ToDo: onAfterColumnShow()\");\n            //    // $$(self.webixUiId.visibleFieldsPopup).showField(id);\n            // },\n            // onAfterColumnHide: function (id) {\n            //    // console.warn(\"!! ToDo: onAfterColumnHide()\");\n            //    // $$(self.webixUiId.visibleFieldsPopup).hideField(id);\n            // },\n\n            onHeaderClick: (id, e, node) => {\n               /* if (settings.configureHeaders) */\n               this.onHeaderClick(id, e, node);\n            },\n         },\n      };\n   }\n\n   uiFilter() {\n      return this.view.filterHelper.ui();\n\n      // make sure onFilterData is now .emit()ed instead of passing in a callback.\n   }\n\n   /**\n    * @method uiToolbar()\n    * Return the webix definition for the toolbar row for our Grids.\n    * @return {json}\n    */\n   uiToolbar() {\n      const ids = this.ids;\n      const self = this;\n\n      return {\n         view: \"toolbar\",\n         id: ids.toolbar,\n         hidden: true,\n         css: \"ab-data-toolbar\",\n         cols: [\n            {\n               view: \"button\",\n               id: ids.buttonMassUpdate,\n               css: \"webix_transparent\",\n               label: this.label(\"Edit\"),\n               icon: \"fa fa-pencil-square-o\",\n               type: \"icon\",\n               disabled: true,\n               autowidth: true,\n               click: function () {\n                  self.toolbarMassUpdate(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonDeleteSelected,\n               css: \"webix_transparent\",\n               label: this.label(\"Delete\"),\n               icon: \"fa fa-trash\",\n               type: \"icon\",\n               disabled: true,\n               autowidth: true,\n               click: function () {\n                  self.toolbarDeleteSelected(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonFilter,\n               css: \"webix_transparent\",\n               label: this.label(\"Filters\"),\n               icon: \"fa fa-filter\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarFilter(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonSort,\n               css: \"webix_transparent\",\n               label: this.label(\"Sort\"),\n               icon: \"fa fa-sort\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarSort(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonExport,\n               css: \"webix_transparent\",\n               label: this.label(\"Export\"),\n               icon: \"fa fa-print\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarExport(this.$view);\n               },\n            },\n            {},\n            {\n               id: ids.globalSearchToolbar,\n               view: \"search\",\n               placeholder: this.label(\"Search...\"),\n               on: {\n                  onTimedKeyPress: () => {\n                     const searchText = $$(ids.globalSearchToolbar).getValue();\n\n                     this.view.filterHelper.externalSearchText(searchText);\n                  },\n               },\n            },\n         ],\n      };\n   }\n\n   ui() {\n      const _uiGrid = {\n         id: this.ids.table,\n         type: \"space\",\n         borderless: true,\n         rows: [\n            {},\n            {\n               view: \"label\",\n               label: this.label(\"Select an object to load.\"),\n               inputWidth: 200,\n               align: \"center\",\n            },\n            {},\n         ],\n      };\n\n      const settings = this.settings;\n\n      if (this.datacollection || settings.dataviewID !== \"\") {\n         _uiGrid.padding = settings.padding;\n         _uiGrid.rows = [];\n         if (settings.showToolbar) {\n            _uiGrid.rows.push(this.uiToolbar());\n         }\n         if (this.settings.gridFilter.filterOption) {\n            _uiGrid.rows.push(this.uiFilter());\n         }\n\n         _uiGrid.rows.push(this.uiDatatable());\n      }\n\n      const _ui = super.ui([_uiGrid]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel = 2) {\n      if (AB) await super.init(AB);\n\n      const self = this;\n      const ids = this.ids;\n\n      // WORKAROUND : Where should we define this ??\n      // For include PDF.js\n      const abWebix = AB.Webix;\n\n      abWebix.codebase = \"\";\n      abWebix.cdn = \"/js/webix\";\n\n      // this shows the options to Hide, Filter, sort , etc...\n      // only in Designer?\n      // PopupHeaderEditComponent.init({\n      //    onClick: _logic.callbackHeaderEdit, // be notified when there is a change in the hidden fields\n      // });\n\n      // NOTE: register the onAfterRender() here, so it only registers\n      // one.\n      const $DataTable = this.getDataTable();\n\n      let throttleCustomDisplay = null;\n      let scrollStarted = null;\n\n      if (!$DataTable) return;\n\n      abWebix.extend($DataTable, abWebix.ProgressBar);\n\n      $DataTable.config.accessLevel = accessLevel;\n\n      if (accessLevel < 2) $DataTable.define(\"editable\", false);\n\n      const settings = this.settings;\n\n      const customDisplays = (data) => {\n         const CurrentObject = this.datacollection?.datasource;\n\n         if (!CurrentObject || !$DataTable.data) return;\n\n         const displayRecords = [];\n\n         const verticalScrollState = $DataTable.getScrollState().y,\n            rowHeight = $DataTable.config.rowHeight,\n            height =\n               $DataTable.$view.querySelector(\".webix_ss_body\").clientHeight,\n            startRecIndex = Math.floor(verticalScrollState / rowHeight),\n            endRecIndex = startRecIndex + $DataTable.getVisibleCount();\n\n         let index = 0;\n\n         $DataTable.data.order.each((id) => {\n            if (id != null && startRecIndex <= index && index <= endRecIndex)\n               displayRecords.push(id);\n\n            index++;\n         });\n\n         let editable = settings.isEditable;\n\n         if ($DataTable.config.accessLevel < 2) editable = false;\n\n         CurrentObject.customDisplays(\n            data,\n            this.AB._App,\n            $DataTable,\n            displayRecords,\n            editable\n         );\n      };\n\n      $DataTable.attachEvent(\"onAfterRender\", function (data) {\n         $DataTable.resize();\n\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         throttleCustomDisplay = setTimeout(() => {\n            if (scrollStarted) clearTimeout(scrollStarted);\n            customDisplays(this.data);\n         }, 350);\n\n         AB.ClassUI.CYPRESS_REF($DataTable);\n         Object.keys(ids).forEach((key) => {\n            const $el = $$(ids[key]);\n            if ($el) {\n               AB.ClassUI.CYPRESS_REF($el);\n            }\n         });\n      });\n\n      // we have some data types that have custom displays that don't look\n      // right after scrolling large data sets we need to call customDisplays\n      // again\n      $DataTable.attachEvent(\"onScroll\", function () {\n         if (scrollStarted) clearTimeout(scrollStarted);\n\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         scrollStarted = setTimeout(() => {\n            customDisplays(this.data);\n         }, 1500);\n      });\n      $DataTable.attachEvent(\"onAfterScroll\", function () {\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         throttleCustomDisplay = setTimeout(() => {\n            if (scrollStarted) clearTimeout(scrollStarted);\n            customDisplays(this.data);\n         }, 350);\n      });\n\n      // Process our onItemClick events.\n      // this is a good place to check if our delete/trash icon was clicked.\n      $DataTable.attachEvent(\"onItemClick\", function (id, e, node) {\n         // make sure we have an object selected before processing this.\n         const dc = self.datacollection;\n         const CurrentObject = dc?.datasource;\n\n         if (!CurrentObject) return;\n\n         if (settings.isEditable === 0) {\n            const items = $DataTable.getItem(id);\n         }\n         // if this was our edit icon:\n         // console.log(e.target.className);\n         if (e === \"auto\" || e.target.className.indexOf(\"eye\") > -1) {\n            // View a Details Page:\n            self.changePage(dc, id, settings.detailsPage);\n            self.toggleTab(settings.detailsTab, this);\n         } else if (e.target.className.indexOf(\"pencil\") > -1) {\n            self.changePage(dc, id, settings.editPage);\n            self.toggleTab(settings.editTab, this);\n         } else if (e.target.className.indexOf(\"track\") > -1)\n            self.emit(\"object.track\", CurrentObject, id.row);\n         // App.actions.openObjectTrack(CurrentObject, id.row);\n         else if (e.target.className.indexOf(\"clear-combo-value\") > -1) {\n            const clearValue = {};\n\n            clearValue[id.column] = \"\";\n\n            const updateRow = async () => {\n               try {\n                  const response = await CurrentObject.model().update(\n                     id.row,\n                     clearValue\n                  );\n\n                  // console.log(response);\n               } catch (err) {\n                  self.AB.notify.developer(err, {\n                     context: \"ABViewGridComponent.onItemClick\",\n                     message: \"Error updating item\",\n                     obj: CurrentObject.toObj(),\n                     id: id.row,\n                  });\n               }\n            };\n\n            updateRow();\n         }\n         // if this was our trash icon:\n         else if (e.target.className.indexOf(\"trash\") > -1) {\n            // If the confirm popup is showing, then skip to show a new one\n            if (!this._deleteConfirmPopup) {\n               this._deleteConfirmPopup = abWebix.confirm({\n                  title: self.label(\"Delete data\"),\n                  text: self.label(\"Do you want to delete this row?\"),\n                  callback: (result) => {\n                     delete this._deleteConfirmPopup;\n                     if (result) {\n                        const deleteRow = async () => {\n                           try {\n                              const response =\n                                 await CurrentObject.model().delete(id.row);\n\n                              if (response.numRows > 0) {\n                                 $DataTable.remove(id);\n                                 $DataTable.clearSelection();\n                              } else\n                                 abWebix.alert({\n                                    text: self.label(\n                                       \"No rows were effected.  This does not seem right.\"\n                                    ),\n                                 });\n                           } catch (err) {\n                              self.AB.notify.developer(err, {\n                                 context: \"ABViewGridComponent.onItemClick\",\n                                 message: \"Error deleting item\",\n                                 obj: CurrentObject.toObj(),\n                                 id: id.row,\n                              });\n\n                              //// TODO: what do we do here?\n                           }\n                        };\n\n                        deleteRow();\n                     }\n\n                     $DataTable.clearSelection();\n\n                     return true;\n                  },\n               });\n            }\n         } else if (settings.detailsPage.length) {\n            // If an icon wasn't selected but a details page is set\n            // view the details page\n            self.changePage(dc, id, settings.detailsPage);\n            self.toggleTab(settings.detailsTab, this);\n         } else if (settings.editPage.length) {\n            // If an icon wasn't selected but an edit page is set\n            // view the edit page\n            self.changePage(dc, id, settings.editPage);\n            self.toggleTab(settings.editTab, this);\n         }\n      });\n\n      // ABViewGrid Original init();\n      if (settings.showToolbar) {\n         if (\n            settings.massUpdate ||\n            settings.isSortable ||\n            settings.isExportable ||\n            (settings.gridFilter &&\n               settings.gridFilter.filterOption &&\n               settings.gridFilter.userFilterPosition === \"toolbar\")\n         )\n            $$(ids.toolbar).show();\n\n         if (!settings.massUpdate) {\n            $$(ids.buttonMassUpdate).hide();\n            $$(ids.buttonDeleteSelected).hide();\n         }\n\n         if (!settings.allowDelete) $$(ids.buttonDeleteSelected).hide();\n\n         if (settings.gridFilter) {\n            if (\n               settings.gridFilter.filterOption !== 1 ||\n               settings.gridFilter.userFilterPosition !== \"toolbar\"\n            )\n               $$(ids.buttonFilter).hide();\n\n            if (\n               settings.gridFilter.filterOption === 3 &&\n               settings.gridFilter.globalFilterPosition === \"single\"\n            )\n               $DataTable.hide();\n\n            if (settings.gridFilter.isGlobalToolbar)\n               $$(ids.globalSearchToolbar).show();\n            else $$(ids.globalSearchToolbar).hide();\n\n            if (settings.gridFilter.filterOption)\n               this.view.filterHelper.init(this.AB);\n         }\n\n         if (!settings.isSortable) $$(ids.buttonSort).hide();\n\n         if (!settings.isExportable) $$(ids.buttonExport).hide();\n      }\n\n      if (settings.hideHeader) this.hideHeader();\n\n      const dc =\n         this.datacollection || this.AB.datacollectionByID(settings.dataviewID);\n\n      if (!this._isDatacollectionLoaded) this.datacollectionLoad(dc);\n\n      // Make sure\n      this._gridSettings =\n         this._gridSettings ||\n         (await this.AB.Storage.get(this.keyStorageSettings)) ||\n         {};\n\n      if (dc?.datasource) {\n         // TRANSITION: ABViewGrid_orig line 862 ...\n\n         this.linkPage.init({\n            view: this.view,\n            datacollection: dc,\n         });\n\n         this.refreshHeader();\n      }\n   }\n\n   /**\n    * @method busy()\n    * Indicate that our datatable is currently busy loading/processing\n    * data.\n    */\n   busy() {\n      this.getDataTable()?.showProgress?.({ type: \"icon\" });\n   }\n\n   /**\n    * @method callbackFilterData()\n    * Process the provided filter options from our filterHelper.\n    * @param {fn} fnFilter\n    *        A function that returns true/false for each row of data\n    *        to determine if is should exist.\n    * @param {array} filterRules\n    *        Any Filter Rules added by the user.\n    */\n   callbackFilterData(fnFilter, filterRules = []) {\n      const ids = this.ids;\n      const $ButtonFilter = $$(ids.buttonFilter);\n\n      if ($ButtonFilter) {\n         const onlyFilterRules = this.view.filterHelper.filterRules();\n\n         $ButtonFilter.define(\"badge\", onlyFilterRules?.rules?.length ?? 0);\n         $ButtonFilter.refresh();\n      }\n\n      const dc = this.datacollection;\n\n      dc.filterCondition(filterRules);\n      dc.reloadData();\n   }\n\n   async callbackSortData(sortRules = []) {\n      const $buttonSort = $$(this.ids.buttonSort);\n\n      $buttonSort.define(\"badge\", sortRules.length || null);\n      $buttonSort.refresh();\n\n      const gridElem = this.getDataTable();\n\n      if (gridElem.data.find({}).length < gridElem.data.count()) {\n         try {\n            // NOTE: Webix's client sorting does not support dynamic loading.\n            // If the data does not be loaded, then load all data.\n            await this.datacollection.reloadData(0, 0);\n         } catch (err) {\n            this.AB.notify.developer(err, {\n               context:\n                  \"ABViewGrid:callbackSortData(): Error perform datacollection.reloadData()\",\n            });\n         }\n      }\n\n      // wait until the grid component will done to repaint UI\n      setTimeout(() => {\n         gridElem.sort((a, b) => this.PopupSortDataTableComponent.sort(a, b));\n      }, 777);\n   }\n\n   /**\n    * @method changePage()\n    * Helper method to switch to another View.\n    * @param {ABDataCollection} dv\n    *        The DataCollection we are working with.\n    * @param {obj} rowItem\n    *        the { row:#, column:{string} } of the item that was clicked.\n    * @param {ABViewPage.uuid} page\n    *        The .uuid of the ABViewPage/ABViewTab we are to swtich to.\n    *\n    */\n   changePage(dv, rowItem, page) {\n      const rowId = rowItem?.row ?? null;\n\n      // Set cursor to data view\n      if (dv) dv.setCursor(rowId);\n\n      // Pass settings to link page module\n      if (this.linkPage) this.linkPage.changePage(page, rowId);\n      else super.changePage(page);\n   }\n\n   columnConfig(headers = []) {\n      this.settings.columnConfig = headers;\n   }\n   /**\n    * @method datacollectionLoad()\n    * Assign an ABDataCollection to this component to use instead of any\n    * provided .dataviewID in our settings.\n    * NOTE: this primarily happens in the ABDesigner's Object Workspace.\n    * @param {ABDataCollection} dc\n    */\n   datacollectionLoad(dc) {\n      const oldDC = this.datacollection;\n      this.datacollection = dc;\n\n      const CurrentObject = dc?.datasource;\n      const $DataTable = this.getDataTable();\n\n      if ($DataTable) {\n         // preventing too many handlers\n         if (!this.__handler_dc_busy) {\n            this.__handler_dc_busy = () => {\n               this.busy();\n            };\n\n            this.__handler_dc_ready = () => {\n               this.ready();\n               this.populateGroupData();\n            };\n\n            this.__handler_dc_loadData = () => {\n               this.populateGroupData();\n            };\n         }\n\n         if (oldDC) {\n            // remove our listeners from the previous DC\n            oldDC.removeListener(\"initializingData\", this.__handler_dc_busy);\n            oldDC.removeListener(\"initializedData\", this.__handler_dc_ready);\n            oldDC.removeListener(\"loadData\", this.__handler_dc_loadData);\n         }\n\n         if (dc) {\n            if (dc.datacollectionLink && dc.fieldLink)\n               dc.bind($DataTable, dc.datacollectionLink, dc.fieldLink);\n            else dc.bind($DataTable);\n\n            // making sure we only have 1 registered listener on this dc\n            dc.removeListener(\"initializingData\", this.__handler_dc_busy);\n            dc.on(\"initializingData\", this.__handler_dc_busy);\n            dc.removeListener(\"initializedData\", this.__handler_dc_ready);\n            dc.on(\"initializedData\", this.__handler_dc_ready);\n            dc.removeListener(\"loadData\", this.__handler_dc_loadData);\n            dc.on(\"loadData\", this.__handler_dc_loadData);\n            this.grouping();\n\n            this._isDatacollectionLoad = true;\n         } else $DataTable.unbind();\n\n         // Be sure to pass on our CurrentObject to our dependent components.\n         if (CurrentObject) {\n            this.view.filterHelper.objectLoad(CurrentObject);\n            this.PopupMassUpdateComponent.objectLoad(\n               CurrentObject,\n               this.getDataTable()\n            );\n            this.PopupSortDataTableComponent.objectLoad(CurrentObject);\n\n            this.PopupExport.objectLoad(CurrentObject);\n            this.PopupExport.dataCollectionLoad(dc);\n            this.PopupExport.setGridComponent(this.getDataTable());\n            this.PopupExport.setHiddenFields(this.settings.hiddenFields);\n            this.PopupExport.setFilename(this.view.label);\n         }\n      }\n   }\n\n   /**\n    * @function enableUpdateDelete\n    *\n    * disable the update or delete buttons in the toolbar if there no items selected\n    * we will make this externally accessible so we can call it from within the datatable component\n    */\n   disableUpdateDelete() {\n      $$(this.ids.buttonMassUpdate)?.disable();\n      $$(this.ids.buttonDeleteSelected)?.disable();\n      // externally indicate that no rows are selected\n      this.emit(\"selection.cleared\");\n   }\n\n   /**\n    * @function enableUpdateDelete\n    *\n    * enable the update or delete buttons in the toolbar if there are any items selected\n    * we will make this externally accessible so we can call it from within the datatable component\n    */\n   enableUpdateDelete() {\n      $$(this.ids.buttonMassUpdate)?.enable();\n      $$(this.ids.buttonDeleteSelected)?.enable();\n      // externally indicate that a row has been selected\n      this.emit(\"selection\");\n   }\n\n   freezeDeleteColumn() {\n      // we are going to always freeze the delete column if the datatable\n      // is wider than the container so it is easy to get to\n      return this.getDataTable().define(\"rightSplit\", this.columnSplitRight);\n   }\n\n   /**\n    * @method getDataTable()\n    * return the webix grid component.\n    * @return {webix.grid}\n    */\n   getDataTable() {\n      return $$(this.ids.datatable);\n   }\n\n   /**\n    * @method getLastColumn\n    * return the last column of a datagrid that is resizeable\n    */\n   getLastColumn() {\n      const $DataTable = this.getDataTable();\n\n      let lastColumn = {};\n\n      // Loop through each columns config to find out if it is in the split 1 region and set it as the last item...then it will be overwritten by next in line\n      $DataTable.eachColumn((columnId) => {\n         const columnConfig = $DataTable.getColumnConfig(columnId);\n\n         if (columnConfig.split === 1) lastColumn = columnConfig;\n      });\n\n      return lastColumn;\n   }\n\n   /**\n    * @method grouping()\n    * perform any grouping operations\n    */\n   grouping() {\n      if (!this.settings.groupBy) return;\n\n      const $treetable = this.getDataTable();\n\n      // map: {\n      //     votes:[\"votes\", \"sum\"],\n      //     title:[\"year\"]\n      // }\n      const baseGroupMap = {};\n      const CurrentObject = this.datacollection.datasource;\n\n      CurrentObject.fields().forEach((f) => {\n         switch (f.key) {\n            case \"number\":\n               baseGroupMap[f.columnName] = [f.columnName, \"sum\"];\n\n               break;\n\n            case \"calculate\":\n            case \"formula\":\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  (prop, listData) => {\n                     if (!listData) return 0;\n\n                     let sum = 0;\n\n                     listData.forEach((r) => {\n                        // we only want numbers returned so pass `true` as third param\n                        // to signify that this is part of a grouping row\n                        sum += f.format(r, false, true) * 1;\n                     });\n\n                     // simulate reformat from ABFieldFormulaCore\n                     if (!f.fieldLink || f.fieldLink.key === \"calculate\")\n                        return sum;\n                     else {\n                        const rowDataFormat = {};\n\n                        rowDataFormat[f.fieldLink.columnName] = sum;\n\n                        return f.fieldLink.format(rowDataFormat);\n                     }\n                  },\n               ];\n\n               break;\n\n            case \"connectObject\":\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  (prop, listData) => {\n                     if (!listData || !listData.length) return 0;\n\n                     let count = 0;\n\n                     listData.forEach((r) => {\n                        const valRelation = r[f.relationName()];\n\n                        // array\n                        if (valRelation?.length) count += valRelation.length;\n                        // object\n                        else if (valRelation) count += 1;\n                     });\n\n                     return count;\n                  },\n               ];\n\n               break;\n\n            default:\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  function (prop, listData) {\n                     if (!listData || !listData.length) return 0;\n\n                     let count = 0;\n\n                     listData.forEach((r) => {\n                        const val = prop(r);\n\n                        // count only exists data\n                        if (val) count += 1;\n                     });\n\n                     return count;\n                  },\n               ];\n\n               break;\n         }\n      });\n\n      // set group definition\n      // $DataTable.define(\"scheme\", {\n      //    $group: {\n      //       by: settings.groupBy,\n      //       map: groupMap\n      //    }\n      // });\n\n      // NOTE: https://snippet.webix.com/e3a2bf60\n      let groupBys = (this.settings.groupBy || \"\")\n         .split(\",\")\n         .map((g) => g.trim());\n      // Reverse the array NOTE: call .group from child to root\n      groupBys = groupBys.reverse();\n\n      groupBys.forEach((colName, gIndex) => {\n         const groupMap = this.AB.cloneDeep(baseGroupMap);\n\n         let by;\n\n         // Root\n         if (gIndex === groupBys.length - 1) by = colName;\n         // Sub groups\n         else {\n            by = (row) => {\n               let byValue = row[colName];\n\n               for (let i = gIndex + 1; i < groupBys.length; i++) {\n                  byValue = `${row[groupBys[i]]} - ${byValue}`;\n               }\n\n               return byValue;\n            };\n\n            // remove parent group data\n            groupBys.forEach((gColName) => {\n               if (gColName !== colName) groupMap[gColName] = [gColName];\n            });\n         }\n\n         $treetable.data.group({\n            by: by,\n            map: groupMap,\n         });\n      });\n   }\n\n   hideHeader() {\n      const $DataTable = this.getDataTable();\n\n      $DataTable.define(\"header\", false);\n      $DataTable.refresh();\n   }\n\n   /**\n    * @function onAfterColumnDrop\n    * When an editor drops a column to save a new column order\n    * @param {string} sourceId\n    *        the columnName of the item dragged\n    * @param {string} targetId\n    *        the columnName of the item dropped on\n    * @param {event} event\n    */\n   async onAfterColumnDrop(sourceId, targetId, event) {\n      const $DataTable = this.getDataTable();\n      const CurrentObject = this.datacollection.datasource;\n      const settings = this.settings;\n      const columnConfig = this.localSettings();\n\n      // Reorder our current columnConfig\n      // We know what was moved and what item it has replaced/pushed forward\n      // so first we want to splice the item moved out of the array of fields\n      // and store it so we can put it somewhere else\n      let itemMoved = null;\n      let oPos = 0; // original position\n\n      for (let i = 0; i < columnConfig.length; i++)\n         if (columnConfig[i].id == sourceId) {\n            itemMoved = columnConfig[i];\n            columnConfig.splice(i, 1);\n            oPos = i;\n\n            break;\n         }\n      // once we have removed/stored it we can find where its new position\n      // will be by looping back through the array and finding the item it\n      // is going to push forward\n      for (let j = 0; j < columnConfig.length; j++)\n         if (columnConfig[j].id == targetId) {\n            // if the original position was before the new position we will\n            // follow webix's logic that the drop should go after the item\n            // it was placed on\n            if (oPos <= j) j++;\n\n            columnConfig.splice(j, 0, itemMoved);\n\n            break;\n         }\n\n      // special case: dropped on end and need to update .fillspace\n      // if (j == columnConfig.length - 1) {\n      //    if (columnConfig[j - 1].fillspace) {\n      //       columnConfig[j - 1].fillspace = false;\n      //       columnConfig[j].fillspace = true;\n      //    }\n      // }\n\n      // if we allow local changes\n      this.localSettings(columnConfig);\n\n      if (settings.saveLocal) this.localSettingsSave();\n\n      // Now emit this event, in case an external object is wanting to\n      // respond to this: ABDesigner.objectBuilder, Interface  Designer,\n      // we send back an array[ ABField.id, ...] in the order we have\n      // them.\n      this.emit(\n         \"column.order\",\n         columnConfig.map((c) => c.fieldID)\n      );\n\n      this.refreshHeader();\n\n      // CurrentObject.fieldReorder(sourceId, targetId)\n      //    .then(() => {\n      //       // reset each column after a drop so we do not have multiple fillspace and minWidth settings\n      //       var editiable = settings.isEditable;\n      //       if ($DataTable.config.accessLevel < 2) {\n      //          editiable = false;\n      //       }\n      //       var columnHeaders = CurrentObject.columnHeaders(true, editiable);\n      //       columnHeaders.forEach(function (col) {\n      //          if (col.id == sourceId && col.fillspace == true) {\n      //             columnHeader.fillspace = false;\n      //             columnHeader.minWidth = columnHeader.width;\n      //          }\n      //       });\n\n      //       _logic.callbacks.onColumnOrderChange(CurrentObject);\n      //       // freeze columns:\n      //       let frozenColumnID =\n      //          settings.frozenColumnID != null\n      //             ? settings.frozenColumnID\n      //             : CurrentObject.workspaceFrozenColumnID;\n      //       if (frozenColumnID != \"\") {\n      //          $DataTable.define(\n      //             \"leftSplit\",\n      //             $DataTable.getColumnIndex(frozenColumnID) + columnSplitLeft\n      //          );\n      //       } else {\n      //          $DataTable.define(\"leftSplit\", columnSplitLeft);\n      //       }\n      //       _logic.freezeDeleteColumn();\n      //       $DataTable.refreshColumns();\n      //    })\n      //    .catch((err) => {\n      //       OP.Error.log(\"Error saving new column order:\", {\n      //          error: err,\n      //       });\n      //    });\n   }\n\n   /**\n    * @function onAfterEditStop\n    * When an editor is finished.\n    * @param {json} state\n    * @param {} editor\n    * @param {} ignoreUpdate\n    * @return\n    */\n   async onAfterEditStop(state, editor, ignoreUpdate) {\n      // state:   {value: \"new value\", old: \"old value\"}\n      // editor:  { column:\"columnName\", row:ID, value:'value', getInputNode:fn(), config:{}, focus: fn(), getValue: fn(), setValue: function, getInputNode: function, render: function…}\n\n      const $DataTable = this.getDataTable();\n\n      // if you don't edit an empty cell we just need to move on\n      if (\n         (!state.old && state.value === \"\") ||\n         (state.old === \"\" && state.value === \"\")\n      ) {\n         $DataTable?.clearSelection();\n\n         return false;\n      }\n\n      if (editor.config)\n         switch (editor.config.editor) {\n            case \"number\":\n               state.value = parseFloat(state.value);\n\n               break;\n\n            case \"datetime\":\n               state.value = state.value.getTime();\n\n               if (state && state.old && state.old.getTime)\n                  state.old = state.old.getTime();\n\n               break;\n\n            default:\n            // code block\n         }\n\n      if (state.value !== state.old) {\n         const item = $DataTable?.getItem(editor.row);\n         const CurrentObject = this.datacollection.datasource;\n\n         item[editor.column] = state.value;\n\n         $DataTable.removeCellCss(item.id, editor.column, \"webix_invalid\");\n         $DataTable.removeCellCss(item.id, editor.column, \"webix_invalid_cell\");\n\n         //maxlength field\n         const f = CurrentObject.fieldByID(editor.config.fieldID);\n         if (\n            f.settings.maxLength &&\n            state.value.length > f.settings.maxLength\n         ) {\n            this.AB.alert({\n               title: this.label(\"Limit max length\"),\n               text: this.label(\n                  \"You can enter a maximum of \" +\n                     f.settings.maxLength +\n                     \" characters\"\n               ),\n            });\n            $DataTable.addCellCss(item.id, editor.column, \"webix_invalid_cell\");\n            $DataTable.refresh(editor.row);\n            $DataTable.clearSelection();\n            return false;\n         }\n\n         const validator = CurrentObject.isValidData(item);\n\n         if (validator.pass()) {\n            //// Question: do we submit full item updates?  or just patches?\n            // IF Patch:\n            // var patch = {};\n            // patch.id = item.id;\n            // patch[editor.column] = item[editor.column];\n            // await CurrentObject.model().update(item.id, patch)\n\n            const ab = this.AB;\n\n            try {\n               await CurrentObject.model().update(item.id, item);\n\n               if ($DataTable.exists(editor.row)) {\n                  $DataTable.updateItem(editor.row, item);\n                  $DataTable.clearSelection();\n                  $DataTable.refresh(editor.row);\n               }\n            } catch (err) {\n               ab.notify.developer(err, {\n                  context: \"ABViewGrid:onAfterEditStop(): Error saving item\",\n                  item,\n                  editor,\n                  state,\n                  object: CurrentObject.toObj(),\n               });\n\n               $DataTable.clearSelection();\n\n               if (\n                  ab.Validation.isGridValidationError(\n                     err,\n                     editor.row,\n                     $DataTable\n                  )\n               ) {\n                  // Do we reset the value?\n                  // item[editor.column] = state.old;\n                  // $DataTable.updateItem(editor.row, item);\n               } else {\n                  // this was some other Error!\n               }\n            }\n            // CurrentObject.model()\n            //    .update(item.id, item)\n            //    .then(() => {\n            //       if ($DataTable.exists(editor.row)) {\n            //          $DataTable.updateItem(editor.row, item);\n            //          $DataTable.clearSelection();\n            //          $DataTable.refresh(editor.row);\n            //       }\n            //    })\n            //    .catch((err) => {\n            //       OP.Error.log(\"Error saving item:\", {\n            //          error: err\n            //       });\n\n            //       $DataTable.clearSelection();\n            //       if (\n            //          OP.Validation.isGridValidationError(\n            //             err,\n            //             editor.row,\n            //             $DataTable\n            //          )\n            //       ) {\n            //          // Do we reset the value?\n            //          // item[editor.column] = state.old;\n            //          // $DataTable.updateItem(editor.row, item);\n            //       } else {\n            //          // this was some other Error!\n            //       }\n            //    });\n         } else validator.updateGrid(editor.row, $DataTable);\n      } else $DataTable.clearSelection();\n\n      return false;\n\n      // var item = $$(self.webixUiId.objectDatatable).getItem(editor.row);\n\n      // self.updateRowData(state, editor, ignoreUpdate)\n      //    .fail(function (err) { // Cached\n      //       item[editor.column] = state.old;\n      //       $$(self.webixUiId.objectDatatable).updateItem(editor.row, item);\n      //       $$(self.webixUiId.objectDatatable).refresh(editor.row);\n\n      //       // TODO : Message\n\n      //       $$(self.webixUiId.objectDatatable).hideProgress();\n      //    })\n      //    .then(function (result) {\n      //       if (item) {\n      //          item[editor.column] = state.value;\n\n      //          if (result && result.constructor.name === 'Cached' && result.isUnsync())\n      //             item.isUnsync = true;\n\n      //          $$(self.webixUiId.objectDatatable).updateItem(editor.row, item);\n      //       }\n\n      //       // TODO : Message\n\n      //       $$(self.webixUiId.objectDatatable).hideProgress();\n      //    });\n   }\n\n   /**\n    * @function onAfterSelect\n    * This is when a user clicks on a cell.  We use the onAfterSelect to\n    * trigger a normal .editCell() if there isn't a custom editor for this field.\n    * @param {json} data webix cell data\n    * @return\n    */\n   onAfterSelect(data /*, preserve */) {\n      // data: {row: 1, column: \"name\", id: \"1_name\", toString: function}\n      // data.row: ABObject.id\n      // data.column => columnName of the field\n\n      // Normal update data\n      this.getDataTable()?.editCell(data.row, data.column);\n   }\n\n   /**\n    * @function onColumnResizeResize\n    * This is when a user adjusts the size of a column\n    * @param {} columnName\n    * @param {int} newWidth\n    * @param {int} oldWidth\n    * @param {} user_action\n    * @return\n    */\n   async onColumnResize(columnName, newWidth, oldWidth, user_action) {\n      // update the settings\n\n      let requireRefresh = false;\n\n      const ab = this.AB;\n\n      if (newWidth < 30) {\n         newWidth = 30;\n         requireRefresh = true;\n\n         ab.Webix.message({\n            type: \"info\",\n            text: this.label(\"minimum column width is {0}\", [30]),\n            expire: 1000,\n         });\n      }\n\n      const localSettings = this.localSettings();\n\n      if (localSettings) {\n         const header = localSettings.find((h) => h.id == columnName);\n\n         if (header) {\n            header.width = newWidth;\n\n            delete header.adjust;\n         }\n      }\n\n      this.localSettings(localSettings);\n\n      if (this.settings.saveLocal) {\n         await this.localSettingsSave();\n         // for (const item in GridSettings) {\n         //    GridSettings[item].forEach((item) => {\n         //       // we cannot include field info because of the cicular structure\n         //       if (item?.footer?.field) {\n         //          delete item.footer.field;\n         //       }\n         //    });\n         // }\n         // await this.AB.Storage.set(this.keyStorageSettings, GridSettings);\n      }\n\n      // refresh the display\n      if (requireRefresh) this.refreshHeader();\n\n      this.freezeDeleteColumn();\n\n      // this.getDataTable().refreshColumns();\n\n      // TODO: allow external app to respond in special cases:\n      // eg: ABDesigner object workspace, interface builder, etc...\n      this.emit(\"column.resize\", columnName, newWidth, oldWidth);\n   }\n\n   /**\n    * @method onHeaderClick\n    * process the user clicking on the header for one of our columns.\n    */\n   onHeaderClick(id, e, node) {\n      if (this.skippableColumns.indexOf(id.column) !== -1) return false;\n\n      // save our EditNode & EditField:\n      // this.EditNode = node;\n\n      const EditField = this.datacollection.datasource.fields(\n         (f) => f.columnName === id.column\n      )[0];\n      // if (this.EditField) {\n      //    // show the popup\n      //    PopupHeaderEditComponent.show(node, this.EditField);\n      // }\n\n      this.emit(\"column.header.clicked\", node, EditField);\n\n      return false;\n   }\n\n   /**\n    * @method onShow()\n    * perform any preparations necessary when showing this component.\n    */\n   onShow() {\n      super.onShow();\n\n      // make sure our grid is properly .adjust()ed to the screen.\n      this.getDataTable()?.adjust();\n\n      const dv = this.datacollection;\n\n      if (dv)\n         [\"changeCursor\", \"cursorStale\", \"cursorSelect\"].forEach((key) => {\n            this.eventAdd({\n               emitter: dv,\n               eventName: key,\n               listener: this.handler_select.bind(this),\n            });\n         });\n   }\n\n   /**\n    * @method ready()\n    * Indicate that our datatable is currently ready for operation.\n    */\n   ready() {\n      const dc = this.datacollection;\n      if (\n         this.isCustomGroup &&\n         dc?.dataStatus != dc?.dataStatusFlag.initialized\n      )\n         return;\n\n      this.getDataTable()?.hideProgress?.();\n   }\n\n   /**\n    * @function refreshHeader()\n    *\n    * refresh the header for the table apart from the refresh() command\n    * @param {bool} ignoreLocal\n    *        Should we ignore our local settings and build directly from\n    *        our config settings?\n    */\n   refreshHeader(ignoreLocal = this.ignoreLocal) {\n      // columnSplitRight = 0;\n      // wait until we have an Object defined:\n      const CurrentObject = this.datacollection.datasource;\n\n      if (!CurrentObject) return;\n\n      const ids = this.ids;\n      const $DataTable = $$(ids.datatable);\n\n      if (!$DataTable) return;\n\n      const accessLevel = $DataTable.config.accessLevel;\n\n      $DataTable.define(\"leftSplit\", 0);\n      $DataTable.define(\"rightSplit\", 0);\n\n      let rowHeight = 0;\n\n      CurrentObject.imageFields().forEach((image) => {\n         const settings = image.getSettings();\n\n         if (settings.useHeight && settings.imageHeight > rowHeight)\n            rowHeight = settings.imageHeight;\n      });\n\n      if (rowHeight) $DataTable.define(\"rowHeight\", rowHeight);\n\n      // $DataTable.clearAll();\n\n      const settings = this.settings;\n\n      let editable = settings.isEditable;\n\n      if ($DataTable.config.accessLevel < 2) editable = false;\n\n      //// update DataTable structure:\n      // get column list from our local settings\n      const objColumnHeaders = CurrentObject.columnHeaders(\n         true,\n         editable,\n         // TRANSITION: moving these from .columnHeaders() to here:\n         [], //settings.summaryColumns,\n         [], //settings.countColumns,\n         [] //settings.hiddenFields\n      );\n\n      let columnHeaders = this.localSettings();\n\n      const ab = this.AB;\n\n      // if that is empty, pull from our settings.columnConfig\n      if (!columnHeaders || ignoreLocal)\n         columnHeaders = ab.cloneDeep(this.settings.columnConfig);\n\n      // if that is empty for some reason, rebuild from our CurrentObject\n      if (columnHeaders.length === 0) columnHeaders = objColumnHeaders;\n\n      // sanity check:\n      // columnHeaders can't contain a column that doesn't exist in objColumHeaders:\n      // (eg: a field might have been removed but localStorage doesn't know that )\n      const objColumnHeaderIDs = objColumnHeaders.map((h) => h.fieldID);\n\n      columnHeaders = columnHeaders.filter(\n         (c) => objColumnHeaderIDs.indexOf(c.fieldID) > -1\n      );\n\n      // default our columnConfig values to our columnHeaders:\n      columnHeaders.forEach((c) => {\n         // we want to overwrite our default settings with anything stored\n         // in local storage\n         const origCol = objColumnHeaders.find((h) => h.fieldID === c.fieldID);\n\n         // none of our functions can be stored in localStorage, so scan\n         // the original column and attach any template functions to our\n         // stashed copy.\n         // also the suggest for selects and connected fields may contain a\n         // function so go ahead and copy the original suggest to the column\n         Object.keys(origCol).forEach((k) => {\n            if (typeof origCol[k] === \"function\" || k === \"suggest\") {\n               c[k] = origCol[k];\n            }\n         });\n\n         const f = CurrentObject.fieldByID(c.fieldID);\n\n         if (!f) return;\n\n         // if it's a hidden field:\n         if (settings.hiddenFields.indexOf(f.columnName) > -1) {\n            c.hidden = true;\n         }\n\n         // add summary footer:\n         if (settings.summaryColumns.indexOf(f.id) > -1) {\n            if (f.key == \"calculate\" || f.key == \"formula\")\n               c.footer = { content: \"totalColumn\", field: f };\n            else c.footer = { content: \"summColumn\" };\n         }\n         // or add the count footer\n         else if (settings.countColumns.indexOf(f.id) > -1)\n            c.footer = { content: \"countColumn\" };\n      });\n\n      let localSettings = this.localSettings();\n\n      if (!localSettings || ignoreLocal) {\n         this.localSettings(columnHeaders);\n\n         localSettings = columnHeaders;\n      }\n\n      columnHeaders = ab.cloneDeep(localSettings);\n\n      const fieldValidations = [];\n      const rulePops = [];\n\n      columnHeaders.forEach((col) => {\n         col.fillspace = false;\n\n         // parse the rules because they were stored as a string\n         // check if rules are still a string...if so lets parse them\n         if (col.validationRules) {\n            if (typeof col.validationRules === \"string\") {\n               col.validationRules = JSON.parse(col.validationRules);\n            }\n\n            if (col.validationRules.length) {\n               const validationUI = [];\n\n               // there could be more than one so lets loop through and build the UI\n               col.validationRules.forEach((rule) => {\n                  const Filter = ab.filterComplexNew(\n                     col.id /*+ \"_\" + webix.uid()*/\n                  );\n                  // add the new ui to an array so we can add them all at the same time\n                  validationUI.push(Filter.ui);\n                  // store the filter's info so we can assign values and settings after the ui is rendered\n                  fieldValidations.push({\n                     filter: Filter,\n                     view: Filter.ids.querybuilder,\n                     columnName: col.id,\n                     validationRules: rule.rules,\n                     invalidMessage: rule.invalidMessage,\n                  });\n               });\n\n               // create a unique view id for popup\n               const popUpId =\n                  ids.rules + \"_\" + col.id; /* + \"_\" + webix.uid() */\n\n               // store the popup ids so we can remove the later\n               rulePops.push(popUpId);\n               // add the popup to the UI but don't show it\n               ab.Webix.ui({\n                  view: \"popup\",\n                  css: \"ab-rules-popup\",\n                  id: popUpId,\n                  body: {\n                     rows: validationUI,\n                  },\n               });\n            }\n         }\n\n         // group header\n         if (\n            settings.groupBy &&\n            (settings.groupBy || \"\").indexOf(col.id) > -1\n         ) {\n            const groupField = CurrentObject.fieldByID(col.fieldID);\n\n            if (groupField)\n               col.template = (obj, common) => {\n                  // return common.treetable(obj, common) + obj.value;\n                  if (obj.$group) {\n                     const rowData = ab.cloneDeep(obj);\n\n                     rowData[groupField.columnName] = rowData.value;\n\n                     return (\n                        common.treetable(obj, common) +\n                        groupField.format(rowData)\n                     );\n                  } else return groupField.format(obj);\n               };\n         }\n      });\n\n      if (fieldValidations.length) {\n         // we need to store the rules for use later so lets build a container array\n         const complexValidations = [];\n\n         fieldValidations.forEach((f) => {\n            // init each ui to have the properties (app and fields) of the object we are editing\n            // f.filter.applicationLoad(CurrentObject.application);\n            f.filter.fieldsLoad(CurrentObject.fields());\n            // now we can set the value because the fields are properly initialized\n            f.filter.setValue(f.validationRules);\n            // if there are validation rules present we need to store them in a lookup hash\n            // so multiple rules can be stored on a single field\n            if (!Array.isArray(complexValidations[f.columnName]))\n               complexValidations[f.columnName] = [];\n\n            // now we can push the rules into the hash\n            complexValidations[f.columnName].push({\n               filters: f.filter.getValue(),\n               values: $DataTable.getSelectedItem[f.columnName],\n               invalidMessage: f.invalidMessage,\n            });\n         });\n\n         const rules = {};\n\n         // store the rules in a data param to be used later\n         $DataTable.$view.complexValidations = complexValidations;\n         // use the lookup to build the validation rules\n         Object.keys(complexValidations).forEach((key) => {\n            rules[key] = (value, data) => {\n               // default valid is true\n               let isValid = true;\n               let invalidMessage = \"\";\n\n               $DataTable.$view.complexValidations[key].forEach((filter) => {\n                  // convert rowData from { colName : data } to { id : data }\n                  const newData = {};\n\n                  (CurrentObject.fields() || []).forEach((field) => {\n                     newData[field.id] = data[field.columnName];\n                  });\n\n                  // for the case of \"this_object\" conditions:\n                  if (data.uuid) {\n                     newData[\"this_object\"] = data.uuid;\n                     data[\"this_object\"] = data.uuid;\n                  }\n\n                  // use helper funtion to check if valid\n                  // const ruleValid = filter.filters(newData);\n                  const filterComplex = ab.filterComplexNew(\n                     `rule-validate-${key}`\n                  );\n                  filterComplex.fieldsLoad(\n                     CurrentObject.fields(),\n                     CurrentObject\n                  );\n                  const ruleValid = filterComplex.isValid(data, filter.filters);\n\n                  // if invalid we need to tell the field\n                  if (!ruleValid) {\n                     isValid = false;\n                     invalidMessage = filter.invalidMessage;\n                  }\n               });\n\n               // we also need to define an error message\n               if (!isValid)\n                  ab.Webix.message({\n                     type: \"error\",\n                     text: invalidMessage,\n                  });\n\n               return isValid;\n            };\n         });\n         // define validation rules\n         $DataTable.define(\"rules\", rules);\n         // store the array of view ids on the webix object so we can get it later\n         $DataTable.config.rulePops = rulePops;\n         $DataTable.refresh();\n      } else {\n         // check if the previous datatable had rule popups and remove them\n         if ($DataTable.config.rulePops)\n            $DataTable.config.rulePops.forEach((popup) => {\n               if ($$(popup)) $$(popup).destructor();\n            });\n         // remove any validation rules from the previous table\n         $DataTable.define(\"rules\", {});\n         $DataTable.refresh();\n      }\n\n      const addedColumns = [];\n      // {array} the .id of the columnHeaders we add based upon our settings.\n      // this will help us pick the lastColumn that is part of the\n      // object.\n\n      if (settings.labelAsField) {\n         // console.log(CurrentObject);\n         columnHeaders.unshift({\n            id: \"appbuilder_label_field\",\n            header: \"Label\",\n            fillspace: true,\n            template: (obj) => CurrentObject.displayData(obj),\n            // css: { 'text-align': 'center' }\n         });\n         addedColumns.push(\"appbuilder_label_field\");\n      }\n\n      if (settings.massUpdate && accessLevel === 2) {\n         columnHeaders.unshift({\n            id: \"appbuilder_select_item\",\n            header: { content: \"masterCheckbox\", contentId: \"mch\" },\n            width: 40,\n            template: \"<div class='singleSelect'>{common.checkbox()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         this.columnSplitLeft = 1;\n         addedColumns.push(\"appbuilder_select_item\");\n      } else this.columnSplitLeft = 0;\n\n      if (settings.detailsPage !== \"\" && !settings.hideButtons) {\n         columnHeaders.push({\n            id: \"appbuilder_view_detail\",\n            header: \"\",\n            width: 40,\n            template: (obj, common) =>\n               \"<div class='detailsView'><span class='webix_icon fa fa-eye'></span></div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_detail\");\n      }\n\n      if (settings.trackView !== 0 && accessLevel === 2) {\n         columnHeaders.push({\n            id: \"appbuilder_view_track\",\n            header: \"\",\n            width: 40,\n            template:\n               \"<div class='track'><span class='track fa fa-history'></span></div>\",\n            css: { \"text-align\": \"center\", cursor: \"pointer\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_track\");\n      }\n\n      if (\n         settings.editPage !== \"\" &&\n         !settings.hideButtons &&\n         accessLevel === 2\n      ) {\n         columnHeaders.push({\n            id: \"appbuilder_view_edit\",\n            header: \"\",\n            width: 40,\n            template: \"<div class='edit'>{common.editIcon()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_edit\");\n      }\n\n      if (settings.allowDelete && accessLevel === 2) {\n         columnHeaders.push({\n            id: \"appbuilder_trash\",\n            header: \"\",\n            width: 40,\n            template: \"<div class='trash'>{common.trashIcon()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_trash\");\n      }\n\n      // find our last displayed column (that isn't one we added);\n      let lastCol = null;\n\n      for (let i = columnHeaders.length - 1; i >= 0; i--) {\n         const col = columnHeaders[i];\n         if (!col.hidden && addedColumns.indexOf(col.id) === -1) {\n            lastCol = col;\n            break;\n         }\n      }\n\n      if (lastCol) {\n         lastCol.fillspace = true;\n         lastCol.minWidth = lastCol.width;\n         lastCol.width = 150; // set a width for last column but by default it will fill the available space or use the minWidth to take up more\n      }\n\n      $DataTable.refreshColumns(columnHeaders);\n\n      // the addedColumns represent the additional icons that can be added.\n      this.columnSplitRight = addedColumns.length;\n\n      // the .massUpdate gets added to Left so don't include that in split right:\n      if (addedColumns.indexOf(\"appbuilder_select_item\") > -1)\n         this.columnSplitRight -= 1;\n      // .columnSplitRight can't be < 0\n      if (this.columnSplitRight < 0) this.columnSplitRight = 0;\n\n      // freeze columns:\n      const frozenColumnID = settings.frozenColumnID;\n\n      if (frozenColumnID != \"\")\n         $DataTable.define(\n            \"leftSplit\",\n            $DataTable.getColumnIndex(frozenColumnID) + 1\n         );\n      else $DataTable.define(\"leftSplit\", this.columnSplitLeft);\n\n      this.freezeDeleteColumn();\n      $DataTable.refreshColumns();\n      // }\n   }\n\n   /**\n    * localSettingsSave()\n    * Persist our current working copy of our GridSettings to localStorage.\n    * @return {Promise}\n    */\n   async localSettingsSave() {\n      const ab = this.AB;\n      const savedLocalSettings =\n         (await ab.Storage.get(this.keyStorageSettings)) || {};\n      const _gridSettings = this._gridSettings;\n\n      savedLocalSettings[this.settingsID()] = _gridSettings[this.settingsID()]\n         ? _gridSettings[this.settingsID()]\n         : [];\n\n      for (const item in savedLocalSettings) {\n         savedLocalSettings[item].forEach((item) => {\n            // we cannot include field info because of the cicular structure\n            if (item?.footer?.field) delete item.footer.field;\n         });\n      }\n\n      await ab.Storage.set(this.keyStorageSettings, savedLocalSettings);\n   }\n\n   /**\n    * @method localSettings()\n    * An interface method to handle get/set operations on our local GridSettings\n    * storage.\n    * .localStorage() : a getter to return the current value\n    * .localStorage(value) : a setter to save value as our current value.\n    * @param {various} value\n    *        the value to set to our settings.\n    * @return {various}\n    */\n   localSettings(value = null) {\n      const _gridSettings = this._gridSettings;\n\n      if (value) _gridSettings[this.settingsID()] = value;\n      else return _gridSettings[this.settingsID()];\n   }\n\n   /**\n    * @method selectRow()\n    * Select the grid row that correspondes to the provided rowData.\n    * @param {json} rowData\n    *        A key=>value hash of data that matches an entry in the grid.\n    *        rowData.id should match an existing entry.\n    */\n   selectRow(rowData) {\n      let id = rowData?.id ?? rowData;\n      if (this.__timeout_selectRow) {\n         console.log(\"Duplicate selectRow():\", id);\n         clearTimeout(this.__timeout_selectRow);\n      }\n      this.__timeout_selectRow = setTimeout(() => {\n         const $DataTable = this.getDataTable();\n         if (!$DataTable) return;\n\n         if (!id) $DataTable.unselect();\n         else if ($DataTable.exists(id)) {\n            $DataTable.select(id, false);\n            $DataTable.showItem(id);\n         } else $DataTable.select(null, false);\n\n         this.__timeout_selectRow = null;\n      }, 15);\n   }\n\n   /**\n    * @method settingsID()\n    * return the unique key for this Grid + object combo to store data\n    * in our localStorage.\n    * @return {string}\n    */\n   settingsID() {\n      const CurrentObject = this.datacollection.datasource;\n\n      return `${this.id}-${CurrentObject ? CurrentObject.id : \"0\"}`;\n   }\n\n   /**\n    * @method toggleTab()\n    * recursively toggle tabs into view once a user chooses a detail/edit view\n    * to display.\n    * @param {ABView.id} parentTab\n    * @param {webix.view} wb\n    */\n   toggleTab(parentTab, wb) {\n      // find the tab || if we didn't pass and id we may have passed a domNode\n      const tab =\n         wb.getTopParentView().queryView({ id: parentTab }) || $$(parentTab);\n\n      if (!tab) return;\n\n      // set the tabbar to to the tab\n      const tabbar = tab.getParentView().getParentView();\n\n      if (!tabbar) return;\n\n      // if we have reached the top we won't have a tab\n      if (tabbar.setValue) tabbar.setValue(parentTab);\n\n      // find if it is in a multiview of a tab\n      const nextTab = tabbar.queryView({ view: \"scrollview\" }, \"parent\");\n\n      // if so then do this again\n      if (nextTab) this.toggleTab(nextTab, wb);\n   }\n\n   toggleUpdateDelete() {\n      const $DataTable = this.getDataTable();\n\n      let checkedItems = 0;\n\n      $DataTable.data.each((obj) => {\n         if (\n            typeof obj !== \"undefined\" &&\n            Object.prototype.hasOwnProperty.call(\n               obj,\n               \"appbuilder_select_item\"\n            ) &&\n            obj.appbuilder_select_item === 1\n         )\n            checkedItems++;\n      });\n\n      if (checkedItems > 0) this.enableUpdateDelete();\n      else this.disableUpdateDelete();\n   }\n\n   toolbarDeleteSelected($view) {\n      const $DataTable = this.getDataTable();\n      const CurrentObject = this.datacollection.datasource;\n      const deleteTasks = [];\n\n      $DataTable.data.each((row) => {\n         if (\n            typeof row !== \"undefined\" &&\n            // row.hasOwnProperty(\"appbuilder_select_item\") &&\n            Object.prototype.hasOwnProperty.call(\n               row,\n               \"appbuilder_select_item\"\n            ) &&\n            row.appbuilder_select_item === 1\n         ) {\n            // NOTE: store a fn() to run later.\n            deleteTasks.push(() => CurrentObject.model().delete(row.id));\n         }\n      });\n\n      const abWebix = this.AB.Webix;\n\n      if (deleteTasks.length > 0)\n         abWebix.confirm({\n            title: this.label(\"Delete Multiple Records\"),\n            text: this.label(\n               \"Are you sure you want to delete the selected records?\"\n            ),\n            callback: async (result) => {\n               if (result) {\n                  // Now run those functions\n                  await Promise.all(deleteTasks.map((t) => t()));\n\n                  // Anything we need to do after we are done.\n                  this.disableUpdateDelete();\n               }\n            },\n         });\n      else\n         abWebix.alert({\n            title: this.label(\"No Records Selected\"),\n            text: this.label(\n               \"You need to select at least one record...did you drink your coffee today?\"\n            ),\n         });\n   }\n\n   toolbarFilter($view) {\n      this.view.filterHelper.showPopup($view);\n   }\n\n   toolbarSort($view) {\n      this.PopupSortDataTableComponent.show($view);\n   }\n\n   toolbarExport($view) {\n      this.PopupExport.show($view);\n   }\n\n   toolbarMassUpdate($view) {\n      this.PopupMassUpdateComponent.show($view);\n   }\n\n   /**\n    * @function toolTip()\n    *\n    * Retrieve the items toolTip\n    */\n   toolTip(obj, common) {\n      const CurrentObject = this.datacollection.datasource;\n      const imageFieldColNames = CurrentObject.imageFields().map(\n         (f) => f.columnName\n      );\n\n      let tip = \"\";\n\n      const columnName = common.column.id.replace(\" \", \"\");\n\n      if (Array.isArray(obj[columnName])) {\n         obj[columnName].forEach(function (o) {\n            if (o.text) tip += o.text + \"<br/>\";\n         });\n      } else if (\n         typeof obj[columnName + \"__relation\"] !== \"undefined\" &&\n         typeof obj[columnName] === \"number\"\n      )\n         tip = obj[columnName + \"__relation\"].text;\n      else if (typeof obj[columnName + \"__relation\"] !== \"undefined\") {\n         let relationData = obj[columnName + \"__relation\"];\n\n         if (!Array.isArray(relationData)) relationData = [relationData];\n\n         (relationData || []).forEach(function (o) {\n            if (o) tip += o.text + \"<br/>\";\n         });\n      } else if (imageFieldColNames.indexOf(columnName) !== -1) {\n         if (!obj[columnName]) {\n            return \"\";\n         } else {\n            // TODO: we need to get this URL from the ABFieldImage object!\n            tip = `<img style='max-width: 500px; max-height: 500px;' src='/file/${obj[columnName]}' />`;\n         }\n      } else if (common.column.editor === \"date\")\n         tip = common.column.format(obj[columnName]);\n      else if (common.column.editor === \"richselect\")\n         CurrentObject.fields().forEach((f) => {\n            if (f.columnName === columnName) {\n               if (f.settings.options) {\n                  f.settings.options.forEach((o) => {\n                     if (o.id === obj[columnName]) {\n                        tip = o.text;\n                     }\n                  });\n               }\n            }\n         });\n      else tip = obj[columnName];\n\n      if (!tip) return \"\";\n      else return tip;\n   }\n\n   /**\n    * @function toolTipOnBeforeRender()\n    *\n    * Add visibility \"hidden\" to all tooltips before render so we can move to a new location without the visual jump\n    */\n   toolTipOnBeforeRender(node) {\n      // var node = $$(ids.tooltip).getNode();\n      node.style.visibility = \"hidden\";\n   }\n\n   /**\n    * @function toolTipOnAfterRender()\n    *\n    * If the tooltip is displaying off the screen we want to try to reposition it for a better experience\n    */\n   toolTipOnAfterRender(node) {\n      // var node = $$(ids.tooltip).getNode();\n      if (node.firstChild?.nodeName === \"IMG\") {\n         setTimeout(() => {\n            const imgBottom = parseInt(node.style.top.replace(\"px\", \"\")) + 500;\n            const imgRight = parseInt(node.style.left.replace(\"px\", \"\")) + 500;\n\n            if (imgBottom > window.innerHeight) {\n               const imgOffsetY = imgBottom - window.innerHeight;\n               const newTop =\n                  parseInt(node.style.top.replace(\"px\", \"\")) - imgOffsetY;\n               node.style.top = newTop + \"px\";\n            }\n\n            if (imgRight > window.innerWidth) {\n               const imgOffsetX = imgRight - window.innerWidth;\n               const newLeft =\n                  parseInt(node.style.left.replace(\"px\", \"\")) - imgOffsetX;\n               node.style.left = newLeft + \"px\";\n            }\n\n            node.style.visibility = \"visible\";\n         }, 250);\n      } else node.style.visibility = \"visible\";\n   }\n\n   get isCustomGroup() {\n      const dc = this.datacollection;\n      const CurrentObject = dc?.datasource;\n      const $DataTable = this.getDataTable();\n\n      return (\n         $DataTable?.config?.view === \"treetable\" && !CurrentObject?.isGroup\n      );\n   }\n\n   populateGroupData() {\n      if (!this.isCustomGroup) return;\n\n      this.busy();\n\n      const dc = this.datacollection;\n      const $DataTable = this.getDataTable();\n\n      $DataTable.clearAll();\n      $DataTable.parse(dc.getData() || []);\n\n      this.grouping();\n      this.ready();\n   }\n}\n","const ABViewGridCore = require(\"../../core/views/ABViewGridCore\");\nimport ABViewGridComponent from \"./viewComponent/ABViewGridComponent\";\nimport ABViewGridFilter from \"./viewProperties/ABViewPropertyFilterData\";\nconst ABViewPropertyLinkPage =\n   require(\"./viewProperties/ABViewPropertyLinkPage\").default;\n\nexport default class ABViewGrid extends ABViewGridCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // filter property\n      this.filterHelper.fromSettings(this.settings.gridFilter);\n   }\n\n   propertyGroupByList(ids, groupBy) {\n      let colNames = groupBy || [];\n      if (typeof colNames == \"string\") {\n         colNames = colNames.split(\",\");\n      }\n\n      let options = $$(ids.groupBy).getList().data.find({});\n\n      $$(ids.groupByList).clearAll();\n      colNames.forEach((colName) => {\n         let opt = options.filter((o) => o.id == colName)[0];\n         if (opt) {\n            $$(ids.groupByList).add(opt);\n         }\n      });\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewGridComponent(this);\n   }\n\n   get filterHelper() {\n      if (this.__filterHelper == null) {\n         this.__filterHelper = new ABViewGridFilter(\n            this.AB,\n            `${this.id}_filterHelper`\n         );\n      }\n\n      return this.__filterHelper;\n   }\n\n   get linkPageHelper() {\n      if (this.__linkPageHelper == null)\n         this.__linkPageHelper = new ABViewPropertyLinkPage();\n\n      return this.__linkPageHelper;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let origWS = this.warningsSilent;\n      this.warningsSilent = true;\n      let DC = this.datacollection;\n      this.warningsSilent = origWS;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n}\n","/*\n * ABViewGridPopupSortFields\n *\n * Manage the Sort Fields popup.\n *\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\n\nvar L = null;\n\nexport default class AB_Work_Object_Workspace_PopupSortFields extends ClassUI {\n   constructor(idBase) {\n      idBase = idBase || \"abviewgridpopupSortFields\";\n\n      super({\n         component: `${idBase}_popupSort`,\n         list: `${idBase}_popupSort_list`,\n         form: `${idBase}_popupSort_form`,\n      });\n\n      this.CurrentObject = null;\n      // {ABObject}\n      // The current ABObject we are working with.\n\n      this._blockOnChange = false;\n      // {bool}\n      // Should we skip the onChange handler processing at this time?\n\n      this._settings = null;\n      // {json}\n      // default sort settings.\n\n      if (!L) {\n         L = (...params) => {\n            return (this.AB ?? AB).Multilingual.label(...params);\n         };\n      }\n   }\n\n   uiForm() {\n      const compId = this.ids.component;\n      return {\n         view: \"form\",\n         id: this.ids.form,\n         borderless: true,\n         elements: [\n            {\n               view: \"button\",\n               type: \"form\",\n               css: \"webix_primary\",\n               value: L(\"Add new sort\"),\n               on: {\n                  onItemClick: (/* id, e, node */) => {\n                     this.clickAddNewSort();\n                     this.triggerOnChange();\n                  },\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `${compId} add sort button`\n                     );\n                  },\n               },\n            },\n         ],\n      };\n   }\n\n   ui() {\n      return {\n         view: \"popup\",\n         id: this.ids.component,\n         // autoheight:true,\n         width: 600,\n         body: this.uiForm(),\n         on: {\n            onShow: () => {\n               this.onShow();\n            },\n         },\n      };\n   }\n\n   // Our init() function for setting up our UI\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n\n      (this.AB.Webix ?? webix).ui(this.ui());\n   }\n\n   /**\n    * @function clickAddNewSort\n    * When the user clicks the \"Add New Sort\" button, this routine will\n    * add another row to the sort form.\n    * @param {string} fieldId\n    *        The ABField.id of the field to auto select in this new row.\n    * @param {string} dir\n    *        The sort order to auto select in this new row.\n    */\n   // clickAddNewSort: function(by, dir, isMulti, id) {\n   clickAddNewSort(fieldId, dir) {\n      var self = this;\n      var sort_form = $$(this.ids.form);\n\n      var viewIndex = sort_form.getChildViews().length - 1;\n      var listFields = this.getFieldList(true);\n      sort_form.addView(\n         {\n            id: `sort_${viewIndex + 1}`,\n            cols: [\n               {\n                  view: \"combo\",\n                  width: 220,\n                  options: listFields,\n                  on: {\n                     onChange: function (columnId) {\n                        var el = this;\n                        self.onChangeCombo(columnId, el);\n                     },\n                  },\n               },\n               this._valueElement(),\n               {\n                  view: \"button\",\n                  css: \"webix_danger\",\n                  icon: \"fa fa-trash\",\n                  type: \"icon\",\n                  width: 30,\n                  on: {\n                     onItemClick: function () {\n                        sort_form.removeView(this.getParentView());\n                        self.refreshFieldList(true);\n                        self.triggerOnChange();\n                     },\n                  },\n               },\n            ],\n         },\n         viewIndex\n      );\n\n      // Select field\n      if (fieldId) {\n         var fieldsCombo = sort_form\n            .getChildViews()\n            [viewIndex].getChildViews()[0];\n         fieldsCombo.setValue(fieldId);\n      }\n      // select direction\n      if (dir) {\n         var dirElem = sort_form.getChildViews()[viewIndex].getChildViews()[1];\n         dirElem.setValue?.(dir);\n\n         // [ABFieldList] Sorting following order\n         dirElem.sort?.((a, b) => {\n            return (dir ?? \"\").indexOf(a.id ?? a) >\n               (dir ?? \"\").indexOf(b.id ?? b)\n               ? 1\n               : -1;\n         });\n      }\n   }\n\n   /**\n    * @function getFieldList\n    * return field list so we can present a custom UI for view\n    * @param {bool} excludeSelected\n    *        Should we ignore fields that already exist in the form?\n    * @return {array} [ { id, value } ]\n    *         an array that is compatible with the webix.list\n    *         widget.\n    */\n   getFieldList(excludeSelected) {\n      var sort_form = $$(this.ids.form),\n         listFields = [];\n\n      var allFields = this.CurrentObject.fields();\n      if (!allFields || !allFields.length) return listFields;\n\n      // Get all fields include hidden fields\n      allFields.forEach((f) => {\n         if (f.fieldIsSortable()) {\n            listFields.push({\n               id: f.id,\n               value: f.label,\n            });\n         }\n      });\n\n      // Remove selected field\n      if (excludeSelected) {\n         var childViews = sort_form.getChildViews();\n         if (childViews.length > 1) {\n            // Ignore 'Add new sort' button\n            childViews.forEach(function (cView, index) {\n               if (childViews.length - 1 <= index) return false;\n\n               var selectedValue = cView.getChildViews()[0].getValue();\n               if (selectedValue) {\n                  listFields = listFields.filter((f) => f.id != selectedValue);\n               }\n            });\n         }\n      }\n      return listFields;\n   }\n\n   /**\n    * @function objectLoad\n    * Ready the Popup according to the current object\n    * @param {ABObject} object  the currently selected object.\n    */\n   objectLoad(object) {\n      this.CurrentObject = object;\n   }\n\n   /**\n    * @method setSettings\n    * Initialize the form with a set of conditions.\n    * @param {Array} settings\n    *        The default settings for this form.\n    *        [\n    *           {\n    *              key: uuid,     // ABField.id\n    *              dir: string,   // 'asc' or 'desc'\n    *           }\n    *        ]\n    */\n   setSettings(settings) {\n      this._settings = this.AB.cloneDeep(settings);\n   }\n\n   /**\n    * @method getSettings\n    * return the current sort settings stored by this form.\n    * @return {Array} -\n    *         [\n    *            {\n    *               key: uuid,     // ABField.id\n    *               dir: string,   // 'asc' or 'desc'\n    *            }\n    *         ]\n    */\n   getSettings() {\n      var sort_form = $$(this.ids.form),\n         sortFields = [];\n\n      var childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            var fieldId = cView.getChildViews()[0].getValue();\n            const dirElem = cView.getChildViews()[1];\n            var dir =\n               dirElem?.getValue?.() ??\n               dirElem?.data?.getRange?.()?.map((opt) => opt.id) ?? // Select list field type\n               \"\";\n            sortFields.push({\n               key: fieldId,\n               dir: dir,\n            });\n         });\n      }\n      return sortFields;\n   }\n\n   /**\n    * @method onChangeCombo()\n    * Update the display once they have chosen a field to sort by.\n    * We now need to offer the appropriate sort direction chooser.\n    * @param {string} fieldID\n    *        The value of the combo box now.\n    * @param {webix.$view} el\n    *        The current Webix.$view that was the combo box that just\n    *        changed.\n    */\n   onChangeCombo(fieldID, el) {\n      var allFields = this.CurrentObject.fields();\n      var chosenField = null,\n         sortDir = el.getParentView().getChildViews()[1],\n         // isMultiLingual = el.getParentView().getChildViews()[2],\n         // isMulti = 0,\n         options = null;\n\n      chosenField = allFields.find((f) => f.id == fieldID);\n      if (!chosenField) return;\n\n      switch (chosenField.key) {\n         case \"date\":\n            options = [\n               { id: \"asc\", value: L(\"Before -> After\") },\n               { id: \"desc\", value: L(\"After -> Before\") },\n            ];\n            break;\n         case \"number\":\n            options = [\n               { id: \"asc\", value: L(\"1 -> 9\") },\n               { id: \"desc\", value: L(\"9 -> 1\") },\n            ];\n            break;\n         case \"string\":\n         default:\n            options = [\n               { id: \"asc\", value: L(\"A -> Z\") },\n               { id: \"desc\", value: L(\"Z -> A\") },\n            ];\n            break;\n      }\n\n      if (chosenField.key == \"list\") {\n         AB.Webix.ui(this._valueListElement(chosenField), sortDir);\n      } else {\n         const valElem = this._valueElement();\n         valElem.options = options;\n         AB.Webix.ui(valElem, sortDir);\n      }\n\n      // if (columnConfig.settings.supportMultilingual)\n      //    isMulti = columnConfig.settings.supportMultilingual;\n\n      // isMultiLingual.setValue(isMulti);\n\n      this.refreshFieldList();\n      this.triggerOnChange();\n   }\n\n   /**\n    * @function onShow\n    * Rebuild the form when an onShow() is called.\n    */\n   onShow(view, options) {\n      var sort_form = $$(this.ids.form);\n\n      // clear field options in the form\n      webix.ui(this.uiForm(), sort_form);\n\n      var sorts = this._settings;\n      if (sorts && sorts.forEach) {\n         sorts.forEach((s) => {\n            this.clickAddNewSort(s.key, s.dir);\n         });\n      }\n\n      if (sorts == null || sorts.length == 0) {\n         this.clickAddNewSort();\n      }\n\n      const $popup = $$(this.ids.component);\n      $popup?.blockEvent();\n      $popup?.show(view, options);\n      $popup?.unblockEvent();\n   }\n\n   /**\n    * @method refreshFieldList\n    * return an updated field list so you cannot duplicate a sort\n    * @param {bool} ignoreRemoveViews\n    *\n    */\n   refreshFieldList(ignoreRemoveViews) {\n      var sort_form = $$(this.ids.form),\n         listFields = this.getFieldList(false),\n         selectedFields = [],\n         removeChildViews = [];\n\n      var childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            let fieldId = cView.getChildViews()[0].getValue(),\n               // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId });\n               fieldObj = listFields.filter((f) => {\n                  return f.id == fieldId;\n               });\n\n            if (fieldObj.length > 0) {\n               // Add selected field to list\n               selectedFields.push(fieldObj[0]);\n            } else {\n               // Add condition to remove\n               removeChildViews.push(cView);\n            }\n         });\n      }\n\n      // Remove filter conditions when column is deleted\n      if (!ignoreRemoveViews) {\n         removeChildViews.forEach((cView /*, index */) => {\n            sort_form.removeView(cView);\n         });\n      }\n\n      // Field list should not duplicate field items\n      childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach((cView, index) => {\n            if (childViews.length - 1 <= index) return false;\n\n            let fieldId = cView.getChildViews()[0].getValue(),\n               // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId }),\n               fieldObj = listFields.filter((f) => {\n                  return f.id == fieldId;\n               });\n\n            // var selectedFieldsExcludeCurField = $(selectedFields).not(fieldObj);\n            var selectedFieldsExcludeCurField = selectedFields.filter((x) => {\n               if (Array.isArray(fieldObj) && fieldObj.indexOf(x) !== -1) {\n                  return false;\n               }\n               return true;\n            });\n\n            // var enableFields = $(listFields).not(selectedFieldsExcludeCurField).get();\n            var enableFields = listFields.filter((x) => {\n               if (\n                  Array.isArray(selectedFieldsExcludeCurField) &&\n                  selectedFieldsExcludeCurField.indexOf(x) !== -1\n               ) {\n                  return false;\n               }\n               return true;\n            });\n\n            // Update field list\n            cView.getChildViews()[0].define(\"options\", enableFields);\n            cView.getChildViews()[0].refresh();\n         });\n      }\n   }\n\n   /**\n    * @function triggerOnChange\n    * This parses the sort form to build in order the sorts then saves to the application object workspace\n    */\n   triggerOnChange() {\n      // block .onChange callback\n      if (this._blockOnChange) return;\n\n      this._settings = this.getSettings();\n\n      this.emit(\"changed\", this._settings);\n   }\n\n   blockOnChange() {\n      this._blockOnChange = true;\n   }\n\n   unblockOnChange() {\n      this._blockOnChange = false;\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    * @param {uuid} fieldId\n    *        the ABField.id we want to prefill the sort with\n    * @param {json} options\n    *        Additional webix.show() options parameters.\n    */\n   show($view, fieldId, options) {\n      this.blockOnChange();\n\n      this.onShow($view, options || null);\n\n      if (fieldId) {\n         this.clickAddNewSort(fieldId);\n      }\n\n      this.unblockOnChange();\n   }\n\n   /**\n    * @function sort()\n    * client sort data in list\n    *\n    * @param {Object} a\n    * @param {Object} b\n    */\n   sort(a, b) {\n      let result = 0;\n\n      const childViews = $$(this.ids.form).getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach((cView, index) => {\n            if (childViews.length - 1 <= index || result != 0) return;\n\n            const fieldId = cView.getChildViews()[0].getValue();\n            const dirElem = cView.getChildViews()[1];\n            const dir =\n               dirElem?.getValue?.() ??\n               dirElem?.data?.getRange?.()?.map((opt) => opt.id) ?? // Select list field type\n               \"\";\n\n            const field = this.CurrentObject.fieldByID(fieldId);\n            if (!field) return;\n\n            const by = field.columnName; // column name\n\n            let aValue = a[by],\n               bValue = b[by];\n\n            if (field.key == \"list\") {\n               aValue = dir.indexOf(aValue);\n               bValue = dir.indexOf(bValue);\n            }\n\n            if (Array.isArray(aValue)) {\n               aValue = (aValue || [])\n                  .map((item) => item.text || item)\n                  .join(\" \");\n            }\n\n            if (Array.isArray(bValue)) {\n               bValue = (bValue ?? [])\n                  .map((item) => item.text || item)\n                  .join(\" \");\n            }\n\n            if (aValue != bValue) {\n               if (dir == \"asc\" || field.key == \"list\") {\n                  result = aValue > bValue ? 1 : -1;\n               } else {\n                  result = aValue < bValue ? 1 : -1;\n               }\n            }\n         });\n      }\n\n      return result;\n   }\n\n   _valueElement() {\n      return {\n         view: \"segmented\",\n         width: 200,\n         options: [\n            {\n               id: \"\",\n               value: L(\"Please select field\"),\n            },\n         ],\n         on: {\n            onChange: (/* newv, oldv */) => {\n               // 'asc' or 'desc' values\n               this.triggerOnChange();\n            },\n         },\n      };\n   }\n\n   _valueListElement(field) {\n      return {\n         view: \"list\",\n         template: \"<div class='webix_drag_handle'></div> #text#\",\n         type: {\n            height: 35,\n         },\n         height: 150,\n         select: true,\n         drag: \"order\",\n         data: field.options(),\n         on: {\n            onChange: () => {\n               this.triggerOnChange();\n            },\n            onAfterDrop: () => {\n               this.triggerOnChange();\n            },\n         },\n      };\n   }\n}\n","const ABViewImageCore = require(\"../../core/views/ABViewImageCore\");\nconst ABViewImageComponent = require(\"./viewComponent/ABViewImageComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewImage extends ABViewImageCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewImageComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.settings.filename) {\n         this.warningsMessage(`has no image set`);\n      }\n   }\n};\n","const ABViewKanbanCore = require(\"../../core/views/ABViewKanbanCore\");\nconst ABViewKanbanComponent = require(\"./viewComponent/ABViewKanbanComponent\");\n\nconst ABViewPropertyLinkPage =\n   require(\"./viewProperties/ABViewPropertyLinkPage\").default;\n\nexport default class ABViewKanban extends ABViewKanbanCore {\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n\n   component() {\n      return new ABViewKanbanComponent(this);\n   }\n\n   get linkPageHelper() {\n      return (this.__linkPageHelper =\n         this.__linkPageHelper || new ABViewPropertyLinkPage());\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n}\n","/*\n * ABViewKanbanFormSidePanel\n *\n * Provide a form area for editing data in the Kan Ban view.\n *\n */\n\nconst ABViewComponent = require(\"./viewComponent/ABViewComponent\").default;\nconst ABViewForm = require(\"./ABViewForm\");\nconst ABViewFormButton = require(\"./ABViewFormButton\");\n\nvar L = null;\n// multilingual Label fn()\n\nmodule.exports = class ABWorkObjectKanBan extends ABViewComponent {\n   constructor(comKanBan, idBase, editFields) {\n      idBase = idBase || `${comKanBan.view?.id}_formSidePanel`;\n      super(idBase, {\n         form: \"\",\n      });\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n\n      this.AB = comKanBan.AB;\n\n      this.CurrentObjectID = null;\n      // {string}\n      // the ABObject.id of the object we are working with.\n\n      this.editFields = editFields;\n      // {array}\n      // An array of {ABField.id} that determines which fields should show up\n      // in the editor.\n\n      this._mockApp = this.AB.applicationNew({});\n      // {ABApplication}\n      // Any ABViews we create are expected to be in relation to\n      // an ABApplication, so we create a \"mock\" app for our\n      // workspace views to use to display.\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n\n   ui() {\n      var ids = this.ids;\n\n      // Our webix UI definition:\n      return {\n         id: ids.component,\n         width: 300,\n         hidden: true,\n         rows: [\n            {\n               view: \"toolbar\",\n               css: \"webix_dark\",\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Edit Record\"),\n                  },\n                  {\n                     view: \"icon\",\n                     icon: \"wxi-close\",\n                     align: \"right\",\n                     click: (/* id */) => {\n                        this.hide();\n                     },\n                  },\n               ],\n            },\n            {\n               view: \"scrollview\",\n               body: {\n                  rows: [\n                     {\n                        id: ids.form,\n                        view: \"form\",\n                        borderless: true,\n                        rows: [],\n                     },\n                  ],\n               },\n            },\n         ],\n      };\n   }\n\n   async init(AB) {\n      this.AB = AB;\n   }\n\n   objectLoad(object) {\n      this.CurrentObjectID = object.id;\n   }\n\n   hide() {\n      $$(this.ids.component)?.hide();\n\n      this.emit(\"close\");\n   }\n\n   show(data) {\n      $$(this.ids.component)?.show();\n\n      this.refreshForm(data);\n   }\n\n   isVisible() {\n      return $$(this.ids.component)?.isVisible() ?? false;\n   }\n\n   refreshForm(data) {\n      var ids = this.ids;\n      let $formView = $$(ids.form);\n      let CurrentObject = this.CurrentObject;\n\n      if (!CurrentObject || !$formView) return;\n\n      data = data || {};\n\n      let formAttrs = {\n         id: `${this.ids.component}_sideform`,\n         key: ABViewForm.common().key,\n         settings: {\n            columns: 1,\n            labelPosition: \"top\",\n            showLabel: 1,\n            clearOnLoad: 0,\n            clearOnSave: 0,\n            labelWidth: 120,\n            height: 0,\n         },\n      };\n\n      // let form = new ABViewForm(formAttrs, this._mockApp);\n      let form = this.AB.viewNewDetatched(formAttrs);\n\n      form.objectLoad(CurrentObject);\n\n      // Populate child elements\n      CurrentObject.fields().forEach((f, index) => {\n         // if this is one of our .editFields\n         if (!this.editFields || this.editFields.indexOf(f.id) > -1) {\n            form.addFieldToForm(f, index);\n         }\n      });\n\n      // add default button (Save button)\n      form._views.push(\n         new ABViewFormButton(\n            {\n               settings: {\n                  includeSave: true,\n                  includeCancel: false,\n                  includeReset: false,\n               },\n               position: {\n                  y: CurrentObject.fields().length, // yPosition\n               },\n            },\n            this._mockApp,\n            form\n         )\n      );\n\n      // add temp id to views\n      form._views.forEach(\n         (v, index) => (v.id = `${form.id}_${v.key}_${index}`)\n      );\n\n      let formCom = form.component(this.AB._App);\n\n      // Rebuild form\n      webix.ui(formCom.ui().rows.concat({}), $formView);\n      webix.extend($formView, webix.ProgressBar);\n\n      formCom.init(\n         this.AB,\n         2,\n         {\n            onBeforeSaveData: () => {\n               // get update data\n               var formVals = form.getFormValues($formView, CurrentObject);\n\n               // validate data\n               if (!form.validateData($formView, CurrentObject, formVals))\n                  return false;\n\n               // show progress icon\n               $formView?.showProgress({ type: \"icon\" });\n\n               if (formVals.id) {\n                  CurrentObject.model()\n                     .update(formVals.id, formVals)\n                     .then((updateVals) => {\n                        this.emit(\"update\", updateVals);\n                        // _logic.callbacks.onUpdateData(updateVals);\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     })\n                     .catch((err) => {\n                        // TODO : error message\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewKanbanFormSidePanel:onBeforeSaveData():update(): Error updating value\",\n                           formVals,\n                        });\n                        $formView?.hideProgress({ type: \"icon\" });\n                     });\n               }\n               // else add new row\n               else {\n                  CurrentObject.model()\n                     .create(formVals)\n                     .then((newVals) => {\n                        // _logic.callbacks.onAddData(newVals);\n                        this.emit(\"add\", newVals);\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     })\n                     .catch((err) => {\n                        // TODO : error message\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewKanbanFormSidePanel:onBeforeSaveData():.create(): Error creating value\",\n                           formVals,\n                        });\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     });\n               }\n\n               return false;\n            },\n         },\n         2 /* NOTE: if you can see this KanBan, you should be able to see the side form? */\n      );\n\n      // display data\n      $formView.clear();\n      $formView.parse(data);\n\n      formCom.onShow(data);\n   }\n};\n","const ABViewLabelCore = require(\"../../core/views/ABViewLabelCore\");\nconst ABViewLabelComponent = require(\"./viewComponent/ABViewLabelComponent\");\n\nmodule.exports = class ABViewLabel extends ABViewLabelCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewLabelComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.text) {\n         this.warningsMessage(\"has no text value set.\");\n      }\n   }\n};\n","const ABViewLayoutCore = require(\"../../core/views/ABViewLayoutCore\");\nconst ABViewLayoutComponent = require(\"./viewComponent/ABViewLayoutComponent\");\n\nmodule.exports = class ABViewLayout extends ABViewLayoutCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewLayoutComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (this._views.length == 0) {\n         this.warningsMessage(\"has no columns set.\");\n      }\n   }\n};\n","const ABViewListCore = require(\"../../core/views/ABViewListCore\");\nconst ABViewListComponent = require(\"./viewComponent/ABViewListComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewList extends ABViewListCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewListComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewMenuCore = require(\"../../core/views/ABViewMenuCore\");\nconst ABViewMenuComponent = require(\"./viewComponent/ABViewMenuComponent\");\n\nmodule.exports = class ABViewMenu extends ABViewMenuCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewMenuComponent(this);\n   }\n};\n","const ABViewOrgChartCore = require(\"../../core/views/ABViewOrgChartCore\");\nconst ABViewOrgChartComponent = require(\"./viewComponent/ABViewOrgChartComponent\");\n\nmodule.exports = class ABViewOrgChart extends ABViewOrgChartCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewOrgChartComponent(this);\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n      // this.refreshData();\n   }\n};\n","const ABViewPDFImporterCore = require(\"../../core/views/ABViewPDFImporterCore\");\nconst ABViewPDFImporterComponent = require(\"./viewComponent/ABViewPDFImporterComponent\");\n\nmodule.exports = class ABViewPDFImporter extends ABViewPDFImporterCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewPDFImporterComponent(this);\n   }\n};\n","const ABViewPageCore = require(\"../../core/views/ABViewPageCore\");\n\nconst ABPropertyComponentDefaults = ABViewPageCore.defaultValues();\n\nmodule.exports = class ABViewPage extends ABViewPageCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @param {obj} v1App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      var component = super.component();\n\n      component._ui = component.ui();\n\n      // wrap our ABViewContainer in our Page scrollview\n      component.ui = () => {\n         return {\n            view: \"scrollview\",\n            borderless: true,\n            css:\n               this.settings.pageBackground ||\n               ABPropertyComponentDefaults.pageBackground,\n            body: component._ui,\n         };\n      };\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               accessLevel = accessLevel ?? this.getUserAccess();\n               return newComponent.init(this.AB, accessLevel, options);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no sub views\");\n      }\n\n      (this.pages() || []).forEach((p) => {\n         p.warningsEval();\n      });\n   }\n};\n","const ABViewPivotCore = require(\"../../core/views/ABViewPivotCore\");\nconst ABViewPivotComponent = require(\"./viewComponent/ABViewPivotComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewPivot extends ABViewPivotCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewPivotComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewReportsManagerCore = require(\"../../core/views/ABViewReportsManagerCore\");\nconst ABViewReportsManagerComponent = require(\"./viewComponent/ABViewReportsManagerComponent\");\n\nmodule.exports = class ABViewReportsManager extends ABViewReportsManagerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewReportsManagerComponent(this);\n   }\n};\n","const ABViewSchedulerCore = require(\"../../core/views/ABViewSchedulerCore\");\nconst ABViewSchedulerComponent = require(\"./viewComponent/ABViewSchedulerComponent\");\n\nmodule.exports = class ABViewScheduler extends ABViewSchedulerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewSchedulerComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n   }\n};\n","const ABViewTabCore = require(\"../../core/views/ABViewTabCore\");\n\nconst ABViewTabComponent = require(\"./viewComponent/ABViewTabComponent\");\n\nmodule.exports = class ABViewTab extends ABViewTabCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewTabComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no tabs set\");\n      }\n\n      // NOTE: this is done in ABView:\n      // (this.views() || []).forEach((v) => {\n      //    v.warningsEval();\n      // });\n   }\n};\n","const ABViewTextCore = require(\"../../core/views/ABViewTextCore\");\n\nconst ABViewTextComponent = require(\"./viewComponent/ABViewTextComponent\");\n\nmodule.exports = class ABViewText extends ABViewTextCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component(parentId) {\n      return new ABViewTextComponent(this, parentId);\n   }\n};\n","const ABViewWidgetCore = require(\"../../core/views/ABViewWidgetCore\");\n\nconst ABPropertyComponentDefaults = ABViewWidgetCore.defaultValues();\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewWidget extends ABViewWidgetCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(App) {\n      let base = super.component(App);\n\n      base.onShow = (viewId) => {\n         let dv = this.datacollection; // get from a function or a (get) property\n         if (dv && dv.dataStatus == dv.dataStatusFlag.notInitial) {\n            // load data when a widget is showing\n            dv.loadData();\n         }\n      };\n\n      return base;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewCSVExporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABCSVExporter_${baseView.id}`,\n         Object.assign(\n            {\n               button: \"\",\n               buttonFilter: \"\",\n               filterComplex: \"\",\n            },\n            ids\n         )\n      );\n\n      this.clientFilter = null;\n   }\n\n   ui() {\n      const ids = this.ids;\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n      const _ui = super.ui([\n         {\n            view: \"layout\",\n            type: \"clean\",\n            borderless: true,\n            cols: [\n               {\n                  id: ids.buttonFilter,\n                  view: \"button\",\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"fa fa-filter\",\n                  borderless: true,\n                  width: 50,\n                  label: \"\",\n                  click: () => {\n                     this.showFilterPopup();\n                  },\n               },\n               {\n                  id: ids.button,\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-download\",\n                  borderless: true,\n                  width: settings.width || defaultSettings.width,\n                  label: settings.buttonLabel ?? defaultSettings.buttonLabel,\n                  click: () => {\n                     this.downloadCsvFile();\n                  },\n               },\n               { fillspace: true },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      if (!this.clientFilter) {\n         const clientFilter = AB.filterComplexNew(this.ids.filterComplex);\n\n         const dc = this.datacollection;\n\n         if (dc) {\n            const obj = dc.datasource;\n\n            clientFilter.fieldsLoad(obj?.fields?.() ?? []);\n         }\n\n         clientFilter.init();\n         clientFilter.on(\"change\", (val) => {\n            this.onFilterChange(val);\n         });\n\n         this.clientFilter = clientFilter;\n      }\n   }\n\n   downloadCsvFile() {\n      let url = `/appbuilder/csv-export/${this.view.id}`;\n\n      const where = {\n         glue: \"and\",\n         rules: [],\n      };\n\n      const whereWidget = this.view.settings?.where;\n      if ((whereWidget?.rules ?? []).length) {\n         where.rules.push(whereWidget);\n      }\n\n      const whereClient = this.clientFilter.getValue();\n      if ((whereClient?.rules ?? []).length) {\n         where.rules.push(whereClient);\n      }\n\n      if ((where?.rules || []).length) {\n         let qsWhere = JSON.stringify(where);\n\n         qsWhere = encodeURIComponent(qsWhere);\n         url = `${url}?where=${qsWhere}`;\n      }\n\n      window.open(url);\n   }\n\n   showFilterPopup() {\n      const $buttonFilter = $$(this.ids.buttonFilter);\n\n      this.clientFilter.popUp($buttonFilter ? $buttonFilter.$view : null);\n   }\n\n   onFilterChange() {\n      const $buttonFilter = $$(this.ids.buttonFilter);\n\n      if (!$buttonFilter) return;\n\n      const where = this.clientFilter.getValue();\n\n      $buttonFilter.define(\"badge\", (where.rules || []).length || null);\n      $buttonFilter.refresh();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst CSVImporter = require(\"../../CSVImporter\");\n\nmodule.exports = class ABViewCSVImporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABCSVImporter_${baseView.id}`,\n         Object.assign(\n            {\n               button: \"\",\n               popup: \"\",\n\n               form: \"\",\n               uploader: \"\",\n               uploadFileList: \"\",\n               separatedBy: \"\",\n               headerOnFirstLine: \"\",\n               columnList: \"\",\n\n               search: \"\",\n               datatable: \"\",\n\n               statusMessage: \"\",\n               progressBar: \"\",\n\n               linkedDataButton: \"\",\n               importButton: \"\",\n               rules: \"\",\n            },\n            ids\n         )\n      );\n\n      this.csvImporter = new CSVImporter((...args) => this.label(...args));\n      // {CSVImporter}\n      // An instance of the object that imports the CSV data.\n\n      this.validationError = false;\n\n      this._dataRows = null;\n      this._csvFileInfo = null;\n   }\n\n   ui() {\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n      const _ui = super.ui([\n         {\n            cols: [\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-upload\",\n                  label: this.label(\n                     settings.buttonLabel || defaultSettings.buttonLabel\n                  ),\n                  width: settings.width || defaultSettings.width,\n                  click: () => {\n                     this.showPopup();\n                  },\n               },\n               {\n                  fillspace: true,\n               },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiConfig() {\n      const ids = this.ids;\n\n      return {\n         id: ids.form,\n         view: \"form\",\n         type: \"clean\",\n         borderless: true,\n         minWidth: 400,\n         gravity: 1,\n         elements: [\n            {\n               rows: [\n                  {\n                     id: ids.uploader,\n                     view: \"uploader\",\n                     name: \"csvFile\",\n                     css: \"webix_primary\",\n                     value: this.label(\"Choose a CSV file\"),\n                     accept: \"text/csv\",\n                     multiple: false,\n                     autosend: false,\n                     link: ids.uploadFileList,\n                     on: {\n                        onBeforeFileAdd: (fileInfo) => {\n                           this._csvFileInfo = fileInfo;\n\n                           return this.loadCsvFile();\n                        },\n                     },\n                  },\n                  {\n                     id: ids.uploadFileList,\n                     name: \"uploadedFile\",\n                     view: \"list\",\n                     type: \"uploader\",\n                     autoheight: true,\n                     borderless: true,\n                     onClick: {\n                        webix_remove_upload: (e, id /*, trg */) => {\n                           this.removeCsvFile(id);\n                        },\n                     },\n                  },\n                  {\n                     padding: 10,\n                     rows: [\n                        {\n                           id: ids.separatedBy,\n                           view: \"richselect\",\n                           name: \"separatedBy\",\n                           label: this.label(\"Separated by\"),\n                           labelWidth: 140,\n                           options: this.csvImporter.getSeparateItems(),\n                           value: \",\",\n                           on: {\n                              onChange: () => {\n                                 this.loadCsvFile();\n                              },\n                           },\n                        },\n                        {\n                           id: ids.headerOnFirstLine,\n                           view: \"checkbox\",\n                           name: \"headerOnFirstLine\",\n                           label: this.label(\"Header on first line\"),\n                           labelWidth: 140,\n                           disabled: true,\n                           value: true,\n                           on: {\n                              onChange: (/*newVal, oldVal*/) => {\n                                 this.populateColumnList();\n                              },\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     type: \"space\",\n                     rows: [\n                        {\n                           view: \"scrollview\",\n                           minHeight: 300,\n                           body: {\n                              padding: 10,\n                              id: ids.columnList,\n                              rows: [],\n                           },\n                        },\n                     ],\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   uiRecordsView() {\n      const ids = this.ids;\n\n      return {\n         gravity: 2,\n         rows: [\n            {\n               view: \"toolbar\",\n               css: \"bg_gray\",\n               cols: [\n                  { width: 5 },\n                  {\n                     id: ids.search,\n                     view: \"search\",\n                     value: \"\",\n                     label: \"\",\n                     placeholder: this.label(\"Search records...\"),\n                     keyPressTimeout: 200,\n                     on: {\n                        onTimedKeyPress: () => {\n                           this.search($$(ids.search).getValue());\n                        },\n                     },\n                  },\n                  { width: 2 },\n               ],\n            },\n            {\n               id: ids.datatable,\n               view: \"datatable\",\n               resizeColumn: true,\n               editable: true,\n               editaction: \"dblclick\",\n               css: \"ab-csv-importer\",\n               borderless: false,\n               tooltip: (obj) => {\n                  const tooltip = obj._errorMsg\n                     ? obj._errorMsg\n                     : \"No validation errors\";\n                  return tooltip;\n               },\n               minWidth: 650,\n               columns: [],\n               on: {\n                  onValidationError: (id, obj, details) => {\n                     // console.log(`item ${id} invalid`);\n                     let errors = \"\";\n\n                     Object.keys(details).forEach((key) => {\n                        this.$view.complexValidations[key].forEach((err) => {\n                           errors += err.invalidMessage + \"</br>\";\n                        });\n                     });\n\n                     const $dt = $$(ids.datatable);\n\n                     $dt.blockEvent();\n                     $dt.updateItem(id, {\n                        _status: \"invalid\",\n                        _errorMsg: errors,\n                     });\n                     $dt.unblockEvent();\n\n                     this.validationError = true;\n                  },\n                  onValidationSuccess: (id, obj, details) => {\n                     // console.log(`item ${id} valid`);\n                     const $dt = $$(ids.datatable);\n\n                     $dt.blockEvent();\n                     $dt.updateItem(id, {\n                        _status: \"valid\",\n                        _errorMsg: \"\",\n                     });\n                     $dt.unblockEvent();\n                     this.validationError = false;\n                  },\n                  onCheck: () => {\n                     const selected = $$(ids.datatable).find({\n                        _included: true,\n                     });\n                     const $importButton = $$(ids.importButton);\n\n                     $importButton.setValue(this.labelImport(selected));\n\n                     if (this.overLimitAlert(selected)) $importButton.disable();\n                     else $importButton.enable();\n                  },\n               },\n            },\n            {\n               id: ids.progressBar,\n               height: 6,\n            },\n            {\n               cols: [\n                  {\n                     id: ids.linkedDataButton,\n                     view: \"button\",\n                     label: this.label(\"Linked Data\"),\n                     type: \"icon\",\n                     icon: \"fa fa-info\",\n                     maxWidth: 180,\n                     click: () => {\n                        this.showLinkedData();\n                     },\n                  },\n                  {\n                     view: \"button\",\n                     name: \"import\",\n                     id: ids.importButton,\n                     label: this.label(\"Import\"),\n                     css: \"webix_primary\",\n                     disabled: true,\n                     type: \"icon\",\n                     icon: \"fa fa-upload\",\n                     click: () => {\n                        this.import();\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   uiPopup() {\n      const ids = this.ids;\n\n      return {\n         id: ids.popup,\n         view: \"window\",\n         hidden: true,\n         position: \"center\",\n         modal: true,\n         resize: true,\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {},\n               {\n                  view: \"label\",\n                  label: this.label(\"CSV Importer\"),\n                  autowidth: true,\n               },\n               {},\n               {\n                  view: \"button\",\n                  width: 35,\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"nomargin fa fa-times\",\n                  click: () => {\n                     this.hide();\n                  },\n               },\n            ],\n         },\n         body: {\n            type: \"form\",\n            rows: [\n               {\n                  type: \"line\",\n                  cols: [\n                     this.uiConfig(),\n                     { width: 20 },\n                     this.uiRecordsView(),\n                     { width: 1 },\n                  ],\n               },\n               {\n                  id: ids.statusMessage,\n                  view: \"label\",\n                  align: \"right\",\n                  hidden: true,\n               },\n               {\n                  hidden: true,\n                  margin: 5,\n                  cols: [\n                     { fillspace: true },\n                     {\n                        view: \"button\",\n                        name: \"cancel\",\n                        value: this.label(\"Cancel\"),\n                        css: \"ab-cancel-button\",\n                        autowidth: true,\n                        click: () => {\n                           this.hide();\n                        },\n                     },\n                     /*,\n                        {\n                           view: \"button\",\n                           name: \"import\",\n                           id: ids.importButton,\n                           value: labels.component.import,\n                           css: \"webix_primary\",\n                           disabled: true,\n                           autowidth: true,\n                           type: \"form\",\n                           click: () => {\n                              _logic.import();\n                           }\n                        }*/\n                  ],\n               },\n            ],\n         },\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n\n      // Populate values to rules\n\n      const dc = this.datacollection;\n\n      if (dc) this.objectLoad(dc.datasource);\n\n      const abWebix = AB.Webix;\n\n      abWebix.ui(this.uiPopup());\n\n      const $form = $$(ids.form);\n\n      if ($form) abWebix.extend($form, abWebix.ProgressBar);\n\n      const $progressBar = $$(ids.progressBar);\n\n      if ($progressBar) abWebix.extend($progressBar, abWebix.ProgressBar);\n   }\n\n   showPopup() {\n      const ids = this.ids;\n\n      $$(ids.popup)?.show();\n\n      this.formClear();\n\n      // open file dialog to upload\n      $$(ids.uploader).fileDialog();\n   }\n\n   hide() {\n      $$(this.ids.popup)?.hide();\n   }\n\n   formClear() {\n      const ids = this.ids;\n\n      this._dataRows = null;\n      this._csvFileInfo = null;\n\n      const $form = $$(ids.form);\n\n      $form.clearValidation();\n      $form.clear();\n\n      $$(ids.separatedBy).setValue(\",\");\n\n      this.AB.Webix.ui([], $$(ids.columnList));\n\n      $$(ids.headerOnFirstLine).disable();\n      $$(ids.importButton).disable();\n\n      $$(ids.search).setValue(\"\");\n      $$(ids.uploadFileList).clearAll();\n      $$(ids.datatable).clearAll();\n\n      const $statusMessage = $$(ids.statusMessage);\n\n      $statusMessage.setValue(\"\");\n      $statusMessage.hide();\n   }\n\n   search(searchText) {\n      const $datatable = $$(this.ids.datatable);\n\n      if (!$datatable) return;\n\n      searchText = (searchText || \"\").toLowerCase();\n\n      const matchFields = this.getMatchFields();\n\n      $datatable.filter((row) => {\n         let exists = false;\n\n         (matchFields || []).forEach((f) => {\n            if (exists) return;\n\n            exists =\n               (row[`${f.columnIndex}`] || \"\")\n                  .toString()\n                  .toLowerCase()\n                  .indexOf(searchText) > -1;\n         });\n\n         return exists;\n      });\n   }\n\n   statusTemplate(item) {\n      let template = \"\";\n\n      if (!item) return template;\n\n      switch (item._status) {\n         case \"in-progress\":\n            template = \"<span class='fa fa-refresh'></span>\";\n            break;\n         case \"invalid\":\n            template = \"<span class='fa fa-exclamation-triangle'></span>\";\n            break;\n         case \"valid\":\n            template = \"<span class='fa fa-check'></span>\";\n            break;\n         case \"done\":\n            template = \"<span class='fa fa-check'></span>\";\n            break;\n         case \"fail\":\n            template = \"<span class='fa fa-remove'></span>\";\n            break;\n      }\n\n      return template;\n   }\n\n   async loadCsvFile() {\n      const _csvFileInfo = this._csvFileInfo;\n\n      if (!_csvFileInfo) return false;\n\n      const csvImporter = this.csvImporter;\n\n      if (!csvImporter.validateFile(_csvFileInfo)) {\n         this.AB.Webix.alert({\n            title: this.label(\"This file extension is not allowed\"),\n            text: this.label(\"Please only upload CSV files\"),\n            ok: this.label(\"Ok\"),\n         });\n\n         return false;\n      }\n\n      const ids = this.ids;\n\n      // show loading cursor\n      const $form = $$(ids.form);\n\n      $form?.showProgress?.({ type: \"icon\" });\n\n      // read CSV file\n      const $headerOnFirstLine = $$(ids.headerOnFirstLine);\n      const $importButton = $$(ids.importButton);\n\n      $headerOnFirstLine.enable();\n      $importButton.enable();\n\n      this._dataRows = await csvImporter.getDataRows(\n         _csvFileInfo,\n         $$(ids.separatedBy).getValue()\n      );\n\n      const _dataRows = this._dataRows;\n\n      let length = _dataRows.length;\n\n      if ($headerOnFirstLine.getValue()) length = _dataRows.length - 1;\n\n      $importButton.setValue(this.labelImport(length));\n      this.populateColumnList();\n      $form?.hideProgress?.();\n\n      return true;\n   }\n\n   removeCsvFile(fileId) {\n      $$(this.ids.uploadFileList).remove(fileId);\n      this.formClear();\n\n      return true;\n   }\n\n   populateColumnList() {\n      const self = this;\n      const ids = this.ids;\n      const abWebix = this.AB.Webix;\n\n      // clear list\n      const $columnList = $$(ids.columnList);\n\n      abWebix.ui([], $columnList);\n\n      const _dataRows = this._dataRows;\n\n      if (!_dataRows) return;\n\n      // check first line of CSV\n      const firstLine = _dataRows[0];\n\n      if (!firstLine) return;\n\n      const csvColumnList = [];\n      const fieldList = [];\n      const currentObject = this.CurrentObject;\n\n      if (currentObject)\n         fieldList.push(\n            ...currentObject.fields((f) => {\n               // available fields\n               if (\n                  this.settings.availableFieldIds?.length &&\n                  this.settings.availableFieldIds.indexOf(f.id) < 0\n               ) {\n                  return false;\n               }\n\n               // filter editable fields\n               const formComp = f.formComponent();\n\n               if (!formComp) return true;\n\n               const formConfig = formComp.common();\n\n               if (!formConfig) return true;\n\n               return formConfig.key != \"fieldreadonly\";\n            })\n         );\n\n      const csvImporter = this.csvImporter;\n\n      // check first line be header columns\n      if ($$(ids.headerOnFirstLine).getValue())\n         csvColumnList.push(\n            ...firstLine.map((colName, index) => {\n               return {\n                  id: index + 1, // webix .options list disallow value 0\n                  value: colName,\n                  key: csvImporter.getGuessDataType(_dataRows, index),\n               };\n            })\n         );\n      else\n         firstLine.forEach((e, i) => {\n            csvColumnList.push({\n               id: i + 1, // webix .options list disallow value 0\n               value: this.label(\"Column {0}\", [i + 1]),\n               key: csvImporter.getGuessDataType(_dataRows, i),\n            });\n         });\n\n      // Add unselect item\n      csvColumnList.unshift({\n         id: \"none\",\n         value: this.label(\"None\"),\n      });\n\n      // populate columns to UI\n      const uiColumns = [];\n      const selectedCsvCols = [];\n\n      fieldList.forEach((f) => {\n         // match up by data type\n         const matchCol = csvColumnList.filter(\n            (c) => c.key == f.key && selectedCsvCols.indexOf(c.id) < 0\n         )[0];\n\n         let selectVal = \"none\";\n\n         if (matchCol) {\n            selectVal = matchCol.id;\n\n            // cache\n            selectedCsvCols.push(selectVal);\n         }\n\n         let columnOptUI = {\n            view: \"richselect\",\n            gravity: 2,\n            options: csvColumnList,\n            fieldId: f.id,\n            abName: \"columnIndex\",\n            value: selectVal,\n            on: {\n               onChange: function () {\n                  self.toggleLinkFields(this);\n                  self.loadDataToGrid();\n               },\n            },\n         };\n\n         // Add date format options\n         if (f.key === \"date\") {\n            const dateSeparatorOptions = [\"/\", \"-\", \".\", \",\", \" \"];\n            const dayFormatOptions = [\n               { value: this.label(\"1 to 31\"), id: \"D\" },\n               { value: this.label(\"01 to 31\"), id: \"DD\" },\n            ];\n            const monthFormatOptions = [\n               { value: this.label(\"1 to 12\"), id: \"M\" },\n               { value: this.label(\"01 to 12\"), id: \"MM\" },\n            ];\n            const yearFormatOptions = [\n               { value: this.label(\"00 to 99\"), id: \"YY\" },\n               { value: this.label(\"2000 to 2099\"), id: \"YYYY\" },\n            ];\n            const dateOrderOptions = [\n               {\n                  value: this.label(\"D-M-Y\"),\n                  id: 1,\n               },\n               {\n                  value: this.label(\"M-D-Y\"),\n                  id: 2,\n               },\n               {\n                  value: this.label(\"Y-M-D\"),\n                  id: 3,\n               },\n               {\n                  value: this.label(\"Y-D-M\"),\n                  id: 4,\n               },\n            ];\n\n            columnOptUI = {\n               gravity: 2,\n               rows: [\n                  columnOptUI,\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Separator\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"separator\",\n                     abName: \"columnDateFormat\",\n                     options: dateSeparatorOptions,\n                     value: \"/\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Day\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"day\",\n                     abName: \"columnDateFormat\",\n                     options: dayFormatOptions,\n                     value: \"D\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Month\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"month\",\n                     abName: \"columnDateFormat\",\n                     options: monthFormatOptions,\n                     value: \"M\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Year\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"year\",\n                     abName: \"columnDateFormat\",\n                     options: yearFormatOptions,\n                     value: \"YY\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Order\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"order\",\n                     abName: \"columnDateFormat\",\n                     options: dateOrderOptions,\n                     value: 1,\n                  },\n               ],\n            };\n         }\n\n         // Add connected field options\n         if (f.isConnection) {\n            let linkFieldOptions = [];\n\n            if (f.datasourceLink) {\n               linkFieldOptions = f.datasourceLink\n                  .fields((fld) => !fld.isConnection)\n                  .map((fld) => {\n                     return {\n                        id: fld.id,\n                        value: fld.label,\n                     };\n                  });\n            }\n\n            columnOptUI = {\n               gravity: 2,\n               rows: [\n                  columnOptUI,\n                  {\n                     view: \"richselect\",\n                     label: \"=\",\n                     labelWidth: 20,\n                     abName: \"columnLinkData\",\n                     hidden: true,\n                     options: linkFieldOptions,\n                     value: linkFieldOptions[0] ? linkFieldOptions[0].id : null,\n                  },\n               ],\n            };\n         }\n\n         uiColumns.push({\n            view: \"layout\",\n            borderless: true,\n            cols: [\n               {\n                  view: \"template\",\n                  gravity: 1,\n                  borderless: true,\n                  css: { \"padding-top\": 10 },\n                  template: `<span class=\"fa fa-${f.icon}\"></span> ${f.label}`,\n               },\n               columnOptUI,\n            ],\n         });\n      });\n      abWebix.ui(uiColumns, $columnList);\n\n      this.loadDataToGrid();\n   }\n\n   toggleLinkFields($columnOption) {\n      if (!$columnOption) return;\n\n      const $optionPanel = $columnOption.getParentView();\n      const $linkFieldOption = $optionPanel.queryView(\n         { abName: \"columnLinkData\" },\n         \"all\"\n      )[0];\n\n      if (!$linkFieldOption) return;\n\n      if ($columnOption.getValue() === \"none\") $linkFieldOption.hide();\n      else $linkFieldOption.show();\n   }\n\n   overLimitAlert(data) {\n      const limit = 1000;\n\n      if (data.length > limit) {\n         // we only allow 1000 record imports\n         this.AB.Webix.alert({\n            title: this.label(\"Too many records\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\n               \"Due to browser limitations we only allow imports of {0} records. Please upload a new CSV or deselect records to import.\",\n               [limit]\n            ),\n         });\n\n         return true;\n      }\n\n      return false;\n   }\n\n   loadDataToGrid() {\n      const ids = this.ids;\n      const $datatable = $$(ids.datatable);\n      const ab = this.AB;\n\n      if (!$datatable) return;\n\n      $datatable.clearAll();\n\n      // show loading cursor\n      $datatable.showProgress?.({ type: \"icon\" });\n\n      /** Prepare Columns */\n      const matchFields = this.getMatchFields();\n      const columns = [];\n\n      // add \"status\" column\n      columns.push({\n         id: \"_status\",\n         header: \"\",\n         template: this.statusTemplate,\n         width: 30,\n      });\n\n      // add \"checkbox\" column\n      columns.push({\n         id: \"_included\",\n         header: { content: \"masterCheckbox\" },\n         template: \"{common.checkbox()}\",\n         width: 30,\n      });\n\n      const fieldValidations = [];\n      const rulePops = [];\n\n      // populate columns\n      (matchFields || []).forEach((f) => {\n         let validationRules = f.field.settings.validationRules;\n         // parse the rules because they were stored as a string\n         // check if rules are still a string...if so lets parse them\n         if (validationRules && typeof validationRules === \"string\")\n            validationRules = JSON.parse(validationRules);\n\n         if (validationRules?.length) {\n            const validationUI = [];\n\n            // there could be more than one so lets loop through and build the UI\n            validationRules.forEach((rule) => {\n               const Filter = ab.filterComplexNew(\n                  `${f.field.id}_${ab.Webix.uid()}`\n               );\n               // add the new ui to an array so we can add them all at the same time\n               validationUI.push(Filter.ui);\n               // store the filter's info so we can assign values and settings after the ui is rendered\n               fieldValidations.push({\n                  filter: Filter,\n                  view: Filter.ids.querybuilder,\n                  columnName: f.field.id,\n                  validationRules: rule.rules,\n                  invalidMessage: rule.invalidMessage,\n                  columnIndex: f.columnIndex,\n               });\n            });\n\n            // create a unique view id for popup\n            const popUpId = `${ids.rules}_${f.field.id}_${ab.Webix.uid()}`;\n\n            // store the popup ids so we can remove the later\n            rulePops.push(popUpId);\n            // add the popup to the UI but don't show it\n            ab.Webix.ui({\n               view: \"popup\",\n               css: \"ab-rules-popup\",\n               id: popUpId,\n               body: {\n                  rows: validationUI,\n               },\n            });\n         }\n\n         const editor = f.field?.key == \"number\" ? \"number\" : \"text\";\n\n         columns.push({\n            id: f.columnIndex,\n            header: f.field.label,\n            editor: editor,\n            template: (obj, common, value /*, col, ind */) =>\n               value.replace(/[<]/g, \"&lt;\"),\n            minWidth: 150,\n            fillspace: true,\n         });\n      });\n\n      if (fieldValidations.length) {\n         // we need to store the rules for use later so lets build a container array\n         const complexValidations = [];\n\n         fieldValidations.forEach((f) => {\n            // init each ui to have the properties (app and fields) of the object we are editing\n            // f.filter.applicationLoad(App);\n            f.filter.fieldsLoad(this.CurrentObject.fields());\n            // now we can set the value because the fields are properly initialized\n            f.filter.setValue(f.validationRules);\n            // if there are validation rules present we need to store them in a lookup hash\n            // so multiple rules can be stored on a single field\n            if (!Array.isArray(complexValidations[f.columnName]))\n               complexValidations[f.columnName] = [];\n\n            // now we can push the rules into the hash\n            complexValidations[f.columnName].push({\n               filters: $$(f.view).getFilterHelper(),\n               values: $datatable.getSelectedItem(),\n               invalidMessage: f.invalidMessage,\n               columnIndex: f.columnIndex,\n            });\n         });\n\n         const rules = {};\n\n         // store the rules in a data param to be used later\n         $datatable.$view.complexValidations = complexValidations;\n\n         // use the lookup to build the validation rules\n         Object.keys(complexValidations).forEach((key) => {\n            rules[key] = (value, data) => {\n               // default valid is true\n               let isValid = true;\n\n               $datatable.$view.complexValidations[key].forEach((filter) => {\n                  const rowValue = {};\n                  // use helper funtion to check if valid\n                  // map the column names to the index numbers of data\n                  // reformat data to display\n\n                  (matchFields || []).forEach((f) => {\n                     const record = data[f.columnIndex];\n\n                     if (\n                        f.field.key === \"date\" &&\n                        record.includes(\"Invalid date\")\n                     )\n                        isValid = false;\n\n                     rowValue[f.field.id] = record;\n                  });\n\n                  const ruleValid = filter.filters(rowValue);\n\n                  // if invalid we need to tell the field\n                  if (!ruleValid) {\n                     isValid = false;\n                     // this.AB.Webix.message({\n                     //    type: \"error\",\n                     //    text: invalidMessage\n                     // });\n                  }\n               });\n\n               return isValid;\n            };\n         });\n         // define validation rules\n         $datatable.define(\"rules\", rules);\n         // store the array of view ids on the webix object so we can get it later\n         $datatable.config.rulePops = rulePops;\n         $datatable.refresh();\n      } else {\n         // check if the previous datatable had rule popups and remove them\n         if ($datatable.config.rulePops) {\n            $datatable.config.rulePops.forEach((popup) => {\n               const $popup = $$(popup);\n\n               if (!$popup) return;\n\n               $popup.destructor();\n            });\n         }\n\n         // remove any validation rules from the previous table\n         $datatable.define(\"rules\", {});\n         $datatable.refresh();\n      }\n\n      /** Prepare Data */\n      const parsedData = [];\n\n      (this._dataRows || []).forEach((row, index) => {\n         const rowValue = {\n            id: index + 1,\n         };\n\n         // reformat data to display\n         (matchFields || []).forEach((f) => {\n            const data = row[f.columnIndex - 1];\n\n            if (f.field.key === \"date\") {\n               // let dateFormat = moment(data, f.format).format(\n               //    \"YYYY-MM-DD\"\n               // );\n               // debugger;\n               let dateFormat = ab.rules.toDate(data, {\n                  format: f.format,\n               });\n               dateFormat = ab.rules.toDateFormat(dateFormat, {\n                  format: \"YYYY-MM-DD\",\n               });\n\n               if (dateFormat === \"Invalid date\")\n                  dateFormat = dateFormat + \" - \" + data;\n\n               rowValue[f.columnIndex] = dateFormat;\n            } else rowValue[f.columnIndex] = data; // array to object\n         });\n\n         // insert \"true\" value of checkbox\n         rowValue[\"_included\"] = true;\n\n         parsedData.push(rowValue);\n      });\n\n      // skip the first line\n      const isSkipFirstLine = $$(ids.headerOnFirstLine).getValue();\n\n      if (isSkipFirstLine && parsedData.length > 1) parsedData.shift();\n\n      const $importButton = $$(ids.importButton);\n\n      $importButton.setValue(this.labelImport(parsedData));\n      $datatable.refreshColumns(columns);\n      $datatable.parse(parsedData);\n\n      if (this.overLimitAlert(parsedData)) $importButton.disable();\n      else $importButton.enable();\n\n      // hide loading cursor\n      $datatable.hideProgress?.();\n   }\n\n   refreshRemainingTimeText(startUpdateTime, total, index) {\n      const ids = this.ids;\n\n      // Calculate remaining time\n      const spentTime = new Date() - startUpdateTime; // milliseconds that has passed since last completed record since start\n\n      const averageRenderTime = spentTime / index; // average milliseconds per single render at this point\n\n      const remainTime = averageRenderTime * (total - index);\n\n      let result = \"\";\n\n      // Convert milliseconds to a readable string\n      const days = (remainTime / 86400000).toFixed(0);\n      const hours = (remainTime / 3600000).toFixed(0);\n      const minutes = (remainTime / 60000).toFixed(0);\n      const seconds = (remainTime / 1000).toFixed(0);\n\n      if (seconds < 1) result = \"\";\n      else if (seconds < 60)\n         result = this.label(\"Approximately {0} second(s) remaining\", [\n            seconds,\n         ]);\n      // result = `Approximately ${seconds} second${\n      //    seconds > 1 ? \"s\" : \"\"\n      // }`;\n      else if (minutes == 1)\n         result = this.label(\"Approximately 1 minute {0} seconds remaining\", [\n            seconds - 60,\n         ]);\n      // result = `Approximately 1 minute ${seconds - 60} seconds`;\n      else if (minutes < 60)\n         result = this.label(\"Approximately {0} minutes remaining\", [minutes]);\n      else if (hours < 24)\n         result = this.label(\"Approximately {0} hour(s) remaining\", [hours]);\n      else result = this.label(\"Approximately {0} day(s) remaining\", [days]);\n\n      if (result) {\n         $$(ids.importButton)?.setValue(result);\n      } else {\n         const selected = $$(ids.datatable)?.find({ _included: true });\n         $$(ids.importButton)?.setValue(this.labelImport(selected));\n      }\n   }\n\n   /**\n    * @method getMatchFields\n    *\n    * @return {Object} - [\n    *                      {\n    *                         columnIndex: {number},\n    *                         field: {ABField},\n    *                         searchField: {ABField} [optional]\n    *                      },\n    *                      ...\n    *                    ]\n    */\n   getMatchFields() {\n      const result = [];\n      const ids = this.ids;\n\n      // get richselect components\n      const $selectorViews = $$(ids.columnList)\n         .queryView({ abName: \"columnIndex\" }, \"all\")\n         .filter((selector) => selector.getValue() != \"none\");\n\n      ($selectorViews || []).forEach(($selector) => {\n         const currentObject = this.CurrentObject;\n\n         if (!currentObject) return;\n\n         // webix .options list disallow value 0\n         const field = currentObject.fieldByID($selector.config.fieldId);\n\n         if (!field) return;\n\n         const colIndex = $selector.getValue();\n         const fieldData = {\n            columnIndex: colIndex,\n            field: field,\n         };\n\n         if (field.key === \"date\") {\n            const $optionPanel = $selector.getParentView();\n            const $dateFormatSelectors = $optionPanel.queryView(\n               { abName: \"columnDateFormat\" },\n               \"all\"\n            );\n\n            // define the column to compare data to search .id\n            if ($dateFormatSelectors) {\n               $dateFormatSelectors.forEach((selector) => {\n                  fieldData[selector.config.name] = selector.getValue();\n               });\n\n               // convert all dates into mysql date format YYYY-DD-MM\n               let format;\n\n               switch (fieldData.order) {\n                  case \"1\":\n                     format =\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.year;\n                     break;\n                  case \"2\":\n                     format =\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.year;\n                     break;\n                  case \"3\":\n                     format =\n                        fieldData.year +\n                        fieldData.separator +\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.day;\n                     break;\n                  case \"4\":\n                     format =\n                        fieldData.year +\n                        fieldData.separator +\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.month;\n               }\n\n               fieldData.format = format;\n            }\n         }\n\n         if (field.isConnection) {\n            const $optionPanel = $selector.getParentView();\n            const $linkDataSelector = $optionPanel.queryView(\n               { abName: \"columnLinkData\" },\n               \"all\"\n            )[0];\n\n            // define the column to compare data to search .id\n            if ($linkDataSelector) {\n               const searchField = field.datasourceLink.fieldByID(\n                  $linkDataSelector.getValue()\n               );\n\n               fieldData.searchField = searchField;\n            }\n         }\n\n         result.push(fieldData);\n      });\n\n      return result;\n   }\n\n   labelImport(selected) {\n      let length = selected;\n\n      if (Array.isArray(selected)) length = selected.length;\n\n      return this.label(\"Import {0} Records\", [length]);\n   }\n\n   /**\n    * @method import\n    *\n    * @return {Promise}\n    */\n   async import() {\n      // if (dv == null) return Promise.resolve();\n\n      // // get ABObject\n      // let obj = dv.datasource;\n\n      // Make sure we are connected to an Object\n      const currentObject = this.CurrentObject;\n\n      if (!currentObject) return;\n\n      // get ABModel\n      // let model = dv.model;\n      // if (model == null) return Promise.resolve();\n\n      const ids = this.ids;\n      const $importButton = $$(ids.importButton);\n\n      $importButton.disable();\n\n      // Show loading cursor\n      const $form = $$(ids.form);\n      const $progressBar = $$(ids.progressBar);\n\n      $form.showProgress({ type: \"icon\" });\n      $progressBar.showProgress({\n         type: \"top\",\n         position: 0.0001,\n      });\n\n      // get richselect components\n      const matchFields = this.getMatchFields();\n\n      // Get object's model\n      const objModel = currentObject.model();\n      const $datatable = $$(ids.datatable);\n      const selectedRows = $datatable.find({ _included: true });\n\n      let _currProgress = 0;\n\n      const increaseProgressing = () => {\n         _currProgress += 1;\n         $progressBar.showProgress({\n            type: \"bottom\",\n            position: _currProgress / selectedRows.length,\n         });\n      };\n      const itemFailed = (itemId, errMessage) => {\n         if ($datatable) {\n            // set \"fail\" status\n            $datatable.addRowCss(itemId, \"row-fail\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"fail\",\n               _errorMsg: errMessage,\n            });\n            $datatable.unblockEvent();\n         }\n\n         increaseProgressing();\n\n         console.error(errMessage);\n      };\n      const abWebix = this.AB.Webix;\n      const itemInvalid = (itemId, errors = []) => {\n         if ($datatable) {\n            // combine all error messages to display in tooltip\n            const errorMsg = [];\n            // mark which column are invalid\n            errors.forEach((err) => {\n               if (!err?.name) return;\n\n               const fieldInfo = matchFields.filter(\n                  (f) => f.field && f.field.columnName == err.name\n               )[0];\n\n               errorMsg.push(err.name + \": \" + err.message);\n               // we also need to define an error message\n               // abWebix.message({\n               //    type: \"error\",\n               //    text: err.name + \": \" + err.message\n               // });\n            });\n\n            // set \"fail\" status\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"invalid\",\n               _errorMsg: errorMsg.join(\"</br>\"),\n            });\n            $datatable.unblockEvent();\n            $datatable.addRowCss(itemId, \"webix_invalid\");\n         }\n         // increaseProgressing();\n      };\n      const itemPass = (itemId) => {\n         if ($datatable) {\n            // set \"done\" status\n            $datatable.removeRowCss(itemId, \"row-fail\");\n            $datatable.addRowCss(itemId, \"row-pass\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"done\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n         }\n\n         increaseProgressing();\n      };\n      const itemValid = (itemId) => {\n         if ($datatable) {\n            // mark all columns valid (just in case they were invalid before)\n            // matchFields.forEach((f) => {\n            //    $datatable.removeCellCss(\n            //       itemId,\n            //       f.columnIndex,\n            //       \"webix_invalid_cell\"\n            //    );\n            // });\n            // highlight the row\n            $datatable.removeRowCss(itemId, \"webix_invalid\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n            // $datatable.addRowCss(itemId, \"row-pass\");\n         }\n      };\n      const $statusMessage = $$(ids.statusMessage);\n      const uiCleanUp = () => {\n         // To Do anyUI updates\n         // console.log(\"ui clean up now\");\n         $importButton.enable();\n\n         // Hide loading cursor\n         $form.hideProgress();\n         $progressBar.hideProgress();\n\n         $statusMessage.setValue(\"\");\n         $statusMessage.hide();\n\n         const selected = $datatable.find({ _included: true });\n\n         $importButton.setValue(this.labelImport(selected));\n         this.emit(\"done\");\n      };\n\n      const validRows = [];\n\n      let allValid = true;\n\n      // Pre Check Validations of whole CSV import\n      // update row to green if valid\n      // update row to red if !valid\n      (selectedRows || []).forEach((data, index) => {\n         const newRowData = this.getParentValues();\n\n         matchFields.forEach((f) => {\n            if (!f.field?.key) return;\n\n            switch (f.field.key) {\n               // case \"connectObject\":\n               //    // skip\n               //    break;\n               case \"number\":\n                  if (typeof data[f.columnIndex] !== \"number\") {\n                     newRowData[f.field.columnName] = (\n                        data[f.columnIndex] || \"\"\n                     ).replace(/[^-0-9.]/gi, \"\");\n\n                     break;\n                  }\n\n                  newRowData[f.field.columnName] = data[f.columnIndex];\n\n                  break;\n\n               default:\n                  newRowData[f.field.columnName] = data[f.columnIndex];\n\n                  break;\n            }\n         });\n\n         let isValid = false;\n         let errorMsg = \"\";\n\n         // first check legacy and server side validation\n         const validator = currentObject.isValidData(newRowData);\n\n         isValid = validator.pass();\n         errorMsg = validator.errors;\n\n         if (isValid)\n            // now check complex field validation rules\n            isValid = $datatable.validate(data.id);\n         else {\n            allValid = false;\n\n            itemInvalid(data.id, errorMsg);\n         }\n\n         if (isValid) {\n            itemValid(data.id);\n            validRows.push({ id: data.id, data: newRowData });\n         } else allValid = false;\n\n         // $datatable.unblockEvent();\n      });\n\n      if (!allValid) {\n         // To Do anyUI updates\n         // $importButton.enable();\n         //\n         // // Hide loading cursor\n         // $form.hideProgress();\n         // $progressBar.hideProgress();\n         // $statusMessage.setValue(\"\");\n         // $statusMessage.hide();\n         //\n         // // _logic.hide();\n         //\n         // if (_logic.callbacks && _logic.callbacks.onDone)\n         //    _logic.callbacks.onDone();\n         uiCleanUp();\n\n         abWebix.alert({\n            title: this.label(\"Invalid Data\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\n               \"The highlighted row has invalid data. Please edit in the window or update the CSV and try again.\"\n            ),\n         });\n\n         return;\n      }\n\n      // if pass, then continue to process each row\n      // ?? : can we process in Parallel?\n      // ?? : implement hash Lookups for connected Fields\n      const hashLookups = {};\n      // {obj}  /*  { connectField.id : { 'searchWord' : \"uuid\"}}\n      // use this hash to reduce the # of lookups needed to fill in our\n      // connected entries\n\n      const connectedFields = matchFields.filter(\n         (f) => f && f.field?.isConnection && f.searchField\n      );\n\n      const throttledSize = 10;\n      let startUpdateTime;\n      let numDone = 0;\n\n      try {\n         // forEach connectedFields in csv\n         const allLookups = [];\n\n         (connectedFields || []).forEach((f) => {\n            const connectField = f.field;\n            // const searchWord = newRowData[f.columnIndex];\n            const connectObject = connectField.datasourceLink;\n\n            if (!connectObject) return;\n\n            const connectModel = connectObject.model();\n\n            if (!connectModel) return;\n\n            const linkIdKey = connectField.indexField\n               ? connectField.indexField.columnName\n               : connectField.object.PK();\n\n            // prepare default hash entry:\n            hashLookups[connectField.id] = {};\n\n            // load all values of connectedField entries\n            const gethashLookup = async () => {\n               try {\n                  const list = await connectModel.findAll({\n                     where: {}, // !!!\n                     populate: false,\n                  });\n                  const data = list.data || list;\n\n                  (data || []).forEach((row) => {\n                     // store in hash[field.id] = { 'searchKey' : \"uuid\" }\n\n                     hashLookups[connectField.id][\n                        row[f.searchField.columnName]\n                     ] = row[linkIdKey];\n                  });\n               } catch (err) {\n                  console.error(err);\n               }\n            };\n\n            allLookups.push(gethashLookup());\n         });\n\n         await Promise.all(allLookups);\n\n         // forEach validRow\n         validRows.forEach((data) => {\n            const newRowData = data.data;\n\n            // update the datagrid row to in-progress\n            $datatable.blockEvent();\n            $datatable.updateItem(data.id, {\n               _status: \"in-progress\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n\n            // forEach ConnectedField\n            (connectedFields || []).forEach((f) => {\n               // find newRowData[field.columnName] = { field.PK : hash[field.id][searchWord] }\n               const connectField = f.field;\n               const linkIdKey = connectField.indexField\n                  ? connectField.indexField.columnName\n                  : connectField.object.PK();\n               const uuid =\n                  hashLookups[connectField.id][\n                     newRowData[connectField.columnName]\n                  ];\n\n               if (!uuid) {\n                  itemInvalid(data.id, [{ name: connectField.columnName }]);\n                  allValid = false;\n               }\n\n               newRowData[connectField.columnName] = {};\n               newRowData[connectField.columnName][linkIdKey] = uuid;\n            });\n         });\n\n         if (!allValid) {\n            abWebix.alert({\n               title: this.label(\"Invalid Data\"),\n               ok: this.label(\"Ok\"),\n               text: this.label(\n                  \"The highlighted row has invalid data. Please edit in the window or update the CSV and try again.\"\n               ),\n            });\n            uiCleanUp();\n\n            return;\n         }\n\n         // NOTE: Parallel exectuion of all these:\n         const allSaves = [];\n         const createRecord = (objModel, newRowsData, element, total) =>\n            new Promise((resolve, reject) => {\n               element.doRecordRulesPre(newRowsData);\n\n               const processResult = async () => {\n                  try {\n                     const result = await objModel.batchCreate({\n                        batch: newRowsData,\n                     });\n                     const resultErrors = result.errors;\n\n                     // Show errors of each row\n                     Object.keys(resultErrors).forEach((rowIndex) => {\n                        const error = resultErrors[rowIndex];\n\n                        if (error) {\n                           itemFailed(\n                              rowIndex,\n                              error.message || error.sqlMessage || error\n                           );\n                        }\n                     });\n\n                     const resultData = result.data;\n                     const penddingRecordRules = [];\n\n                     Object.keys(resultData).forEach((rowIndex) => {\n                        penddingRecordRules.push(\n                           new Promise((resolve, reject) => {\n                              // Process Record Rule\n                              const processRowData = async () => {\n                                 try {\n                                    await element.doRecordRules(\n                                       resultData[rowIndex]\n                                    );\n\n                                    itemPass(rowIndex);\n                                    resolve();\n                                 } catch (err) {\n                                    itemFailed(rowIndex, err);\n                                    reject(\"that didn't work\");\n                                 }\n                              };\n\n                              processRowData();\n                           })\n                        );\n                     });\n\n                     const waitPenddingRecordRules = async () => {\n                        try {\n                           await Promise.all(penddingRecordRules);\n\n                           newRowsData.forEach((row) => {\n                              // itemPass(row.id);\n                              numDone++;\n                              if (numDone % throttledSize == 0) {\n                                 this.refreshRemainingTimeText(\n                                    startUpdateTime,\n                                    validRows.length,\n                                    numDone\n                                 );\n                              }\n                           });\n\n                           if (numDone === total) {\n                              uiCleanUp();\n                              $importButton.disable();\n                           }\n\n                           resolve();\n                        } catch (err) {\n                           // newRowsData.forEach((row) => {\n                           //    itemFailed(row.id, err);\n                           // });\n                           // throw err;\n                           reject(err);\n                        }\n                     };\n\n                     await waitPenddingRecordRules();\n                  } catch (err) {\n                     console.error(err);\n                     reject(err);\n                  }\n               };\n\n               processResult();\n            });\n\n         validRows.forEach((data) => {\n            allSaves.push({ id: data.id, data: data.data });\n         });\n\n         // we are going to store these promises in an array of\n         // arrays with 50 in each sub array\n         const throttledSaves = [];\n         const total = allSaves.length;\n\n         let index = 0;\n\n         while (allSaves.length) {\n            throttledSaves[index] = allSaves.splice(0, throttledSize);\n\n            index++;\n         }\n\n         // execute the array of array of 100 promises one at at time\n         const performThrottledSaves = (\n            currentRecords,\n            remainingRecords,\n            importer,\n            total\n         ) =>\n            new Promise((resolve, reject) => {\n               // execute the next 100\n               // const requests = currentRecords.map((data) => {\n               //    return createRecord(\n               //       objModel,\n               //       data.record,\n               //       data.data,\n               //       importer\n               //    );\n               // });\n\n               const processRequest = async () => {\n                  try {\n                     await createRecord(\n                        objModel,\n                        currentRecords,\n                        importer,\n                        total\n                     );\n\n                     // when done get the next 10\n                     const nextRecords = remainingRecords.shift();\n\n                     // if there are any remaining in the group call performThrottledSaves\n                     if (nextRecords?.length) {\n                        await performThrottledSaves(\n                           nextRecords,\n                           remainingRecords,\n                           importer,\n                           total\n                        );\n                     } else {\n                        // uiCleanUp();\n                        resolve();\n                     }\n                  } catch (err) {\n                     // Handle errors here\n                     reject(err);\n                  }\n               };\n\n               processRequest();\n            });\n\n         // now we are going to processes these new containers one at a time\n         // $datatable.blockEvent();\n         // this is when the real work starts so lets begin our countdown timer now\n         startUpdateTime = new Date();\n         // get the first group of Promises out of the collection\n         const next = throttledSaves.shift();\n\n         // execute our Promise iterator\n         await performThrottledSaves(next, throttledSaves, this.view, total);\n      } catch (err) {\n         // resolve Error UI\n         abWebix.alert({\n            title: this.label(\"Error Creating Records\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\"One or more records failed upon creation.\"),\n         });\n         // $datatable.unblockEvent();\n         uiCleanUp();\n         console.error(err);\n      }\n   }\n\n   // Display linked data\n   uiLinkedData() {\n      const dcLink = this.datacollection?.datacollectionLink;\n      const linkedData = dcLink?.getCursor();\n      if (!linkedData) return;\n\n      return {\n         view: \"window\",\n         modal: true,\n         resize: false,\n         head: {\n            view: \"toolbar\",\n            cols: [\n               {},\n               {\n                  view: \"button\",\n                  width: 35,\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"nomargin fa fa-times\",\n                  click: () => {\n                     this.hideLinkedData();\n                  },\n               },\n            ],\n         },\n         body: {\n            view: \"property\",\n            id: \"sets\",\n            editable: false,\n            width: 400,\n            height: 200,\n            elements: [\n               { label: this.label(\"Linked Data\"), type: \"label\" },\n               {\n                  label: \"ID\",\n                  type: \"text\",\n                  value: linkedData.uuid ?? linkedData.id,\n               },\n               {\n                  label: \"Label\",\n                  type: \"text\",\n                  value: dcLink.datasource.displayData(linkedData),\n               },\n            ],\n         },\n      };\n   }\n\n   showLinkedData() {\n      const ui = this.uiLinkedData();\n      this._info_popup = this.AB.Webix.ui(ui);\n      this._info_popup.show($$(this.ids.linkedDataButton).$view, {\n         pos: \"top\",\n      });\n   }\n\n   hideLinkedData() {\n      this._info_popup?.hide();\n   }\n\n   getParentValues() {\n      const result = {};\n\n      // get ABDatacollection\n      const dc = this.datacollection;\n      const currentObject = this.CurrentObject;\n\n      // Set parent's data collection cursor\n      const dcLink = dc?.datacollectionLink;\n      const linkConnectFields = [];\n\n      let objectLink;\n      let linkValues;\n\n      if (dcLink?.getCursor()) {\n         objectLink = dcLink.datasource;\n\n         linkConnectFields.push(\n            ...currentObject.fields(\n               (f) => f.isConnection && f.settings.linkObject === objectLink.id\n            )\n         );\n\n         linkValues = dcLink.getCursor();\n      }\n\n      // Set parent's data collection cursor\n      if (objectLink && linkConnectFields.length && linkValues) {\n         linkConnectFields.forEach((f) => {\n            const linkColName = f.indexField\n               ? f.indexField.columnName\n               : objectLink.PK();\n\n            result[f.columnName] = result[f.columnName] ?? {};\n            result[f.columnName][linkColName] =\n               linkValues[linkColName] ?? linkValues.id;\n         });\n      }\n\n      return result;\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartAreaComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartArea_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.areaType,\n         yAxis: {\n            start: 0,\n            step: settings.stepValue, //\"#stepValue#\",\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend: settings.isLegend\n            ? {\n                 template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                 values: [], // TODO : bug in webix 5.1.7\n              }\n            : null,\n         series: [\n            {\n               alpha: 0.7,\n               value: \"#value#\",\n               color: \"#ee4339\",\n            },\n            {\n               alpha: 0.4,\n               value: \"#value2#\",\n               color: \"#a7ee70\",\n            },\n         ],\n         height: settings.chartHeight,\n         // width: settings.chartWidth,\n      });\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartBarComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartBar_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.barType,\n         preset: settings.barPreset,\n         value: \"#value#\",\n         color: \"#color#\",\n         yAxis: {\n            start: 0,\n            step: settings.stepValue, //\"#stepValue#\",\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend:\n            settings.barType === \"bar\" || !settings.barType\n               ? settings.isLegend\n                  ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n                  : \"\"\n               : settings.isLegend\n               ? {\n                    template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                    values: [], // TODO : bug in webix 5.1.7\n                 }\n               : null,\n         height: settings.height,\n         // width: settings.chartWidth,\n      });\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewChartComponent extends ABViewContainerComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChart_${baseView.id}`, ids);\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB, accessLevel);\n\n      const $component = $$(this.ids.component);\n      const abWebix = this.AB.Webix;\n\n      if ($component) abWebix.extend($component, abWebix.ProgressBar);\n\n      const baseView = this.view;\n      const dc = this.datacollection;\n\n      if (dc) {\n         const eventNames = [\n            \"changeCursor\",\n            \"cursorStale\",\n            \"create\",\n            \"update\",\n            \"delete\",\n            \"initializedData\",\n         ];\n\n         [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n            // QUESTION: is this a problem if the check !(key in (...)) finds\n            // an event that some OTHER widget has added and not this one?\n            if (\n               dc.datacollectionLink &&\n               !(key in (dc.datacollectionLink._events ?? []))\n            )\n               baseView.eventAdd({\n                  emitter: dc.datacollectionLink,\n                  eventName: key,\n                  listener: () => {\n                     baseView.refreshData();\n                  },\n               });\n         });\n\n         eventNames.forEach((evtName) => {\n            baseView.eventAdd({\n               emitter: dc,\n               eventName: evtName,\n               listener: () => {\n                  baseView.refreshData();\n               },\n            });\n         });\n      }\n\n      baseView.refreshData();\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewChartContainerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewChartContainer_${baseView.id}`,\n         Object.assign(\n            {\n               chartContainer: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui(uiChartComponent) {\n      const _ui = super.ui([\n         Object.assign({ id: this.ids.chartContainer }, uiChartComponent ?? {}),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n      // if (!this._isShow) {\n\n      // Mark this widget is showing\n      const baseView = this.view;\n\n      baseView._isShow = true;\n\n      this.refreshData(baseView.parent.getDCChart());\n      // }\n   }\n\n   refreshData(dcChart) {\n      const $chartContainer = $$(this.ids.chartContainer);\n      const $chartComponent = $$(this.ids.component);\n\n      if ($chartContainer?.data) $chartContainer.data.sync(dcChart);\n\n      setTimeout(() => {\n         $chartComponent?.adjust();\n         $chartContainer?.adjust();\n      }, 160);\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartLineComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartLine_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.lineType,\n         preset: settings.linePreset,\n         value: \"#value#\",\n         color: \"#color#\",\n         yAxis: {\n            start: 0,\n            step: settings.stepValue,\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend: settings.isLegend\n            ? {\n                 template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                 values: [], // TODO : bug in webix 5.1.7\n              }\n            : null,\n         height: settings.chartHeight,\n         // width: settings.chartWidth,\n      });\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartPieComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartPie_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.pieType,\n         value: \"#value#\",\n         color: \"#color#\",\n         legend: settings.isLegend\n            ? {\n                 width: this.view.parent.settings.labelWidth,\n                 template: `<div style='font-size: ${settings.labelFontSize}px;'>#label#</div>`,\n              }\n            : null,\n         pieInnerText: `<div style='font-size: ${settings.innerFontSize}px;'>#value#</div>`,\n         shadow: 1,\n         height: settings.height,\n         // width: settings.chartWidth,\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewCommentComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewComment_${baseView.id}`,\n         Object.assign(\n            {\n               comment: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const _ui = super.ui([\n         {\n            id: this.ids.comment,\n            view: \"comments\",\n            users: baseView.getUserData(),\n            currentUser: baseView.getCurrentUserId(),\n            height: this.settings.height,\n            data: this.getCommentData(),\n            on: {\n               onBeforeAdd: (id, obj, index) => {\n                  this.addComment(obj.text, new Date());\n               },\n               // NOTE: no update event of comment widget !!\n               // Updating event handles in .init function\n               // https://docs.webix.com/api__ui.comments_onbeforeeditstart_event.html#comment-4509366150\n\n               // onAfterEditStart: function (rowId) {\n               //    let item = this.getItem(rowId);\n\n               //    _logic.updateComment(rowId, item);\n               // },\n               onAfterDelete: (rowId) => {\n                  this.deleteComment(rowId);\n               },\n            },\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const baseView = this.view;\n\n      baseView.__dvEvents = baseView.__dvEvents || {};\n\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if ($comment) {\n         const $commentList = $comment.queryView({ view: \"list\" });\n\n         if ($commentList) {\n            // Updating comment event\n            if (!baseView.__dvEvents.onStoreUpdated)\n               baseView.__dvEvents.onStoreUpdated =\n                  $commentList.data.attachEvent(\n                     \"onStoreUpdated\",\n                     (rowId, data, operate) => {\n                        if (operate === \"update\") {\n                           this.updateComment(rowId, (data || {}).text);\n                        }\n                     }\n                  );\n\n            // Implement progress bar\n            webix.extend($commentList, webix.ProgressBar);\n         }\n      }\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      // bind dc to component\n      // dv.bind($$(ids.comment));\n\n      if (!baseView.__dvEvents.create)\n         baseView.__dvEvents.create = dv.on(\"create\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.update)\n         baseView.__dvEvents.update = dv.on(\"update\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.delete)\n         baseView.__dvEvents.delete = dv.on(\"delete\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.loadData)\n         baseView.__dvEvents.loadData = dv.on(\"loadData\", () =>\n            this.refreshComment()\n         );\n\n      $comment.refresh();\n   }\n\n   getCommentData() {\n      const baseView = this.view;\n      const dv = this.datacollection;\n\n      if (!dv) return null;\n\n      const userCol = baseView.getUserField();\n      const commentCol = baseView.getCommentField();\n      const dateCol = baseView.getDateField();\n\n      if (!userCol || !commentCol) return null;\n\n      const userColName = userCol.columnName;\n      const commentColName = commentCol.columnName;\n      const dateColName = dateCol ? dateCol.columnName : null;\n      const dataObject = dv.getData();\n      const dataList = [];\n\n      dataObject.forEach((item, index) => {\n         if (item[commentColName]) {\n            const user = baseView.getUserData().find((user) => {\n               return user.value === item[userColName];\n            });\n            const data = {\n               id: item.id,\n               user_id: user ? user.id : 0,\n               date: item[dateColName] ? new Date(item[dateColName]) : null,\n               default_date: new Date(item[\"created_at\"]),\n               text: item[commentColName],\n            };\n\n            dataList.push(data);\n         }\n      });\n\n      dataList.sort(function (a, b) {\n         if (dateColName)\n            return new Date(a.date).getTime() - new Date(b.date).getTime();\n         else\n            return (\n               new Date(a.default_date).getTime() -\n               new Date(b.default_date).getTime()\n            );\n      });\n\n      return dataList;\n   }\n\n   refreshComment() {\n      const baseView = this.view;\n\n      if (baseView.__refreshTimeout) clearTimeout(baseView.__refreshTimeout);\n\n      this.busy();\n\n      const ids = this.ids;\n\n      baseView.__refreshTimeout = setTimeout(() => {\n         const $comment = $$(ids.comment);\n\n         if (!$comment) return;\n\n         // clear comments\n         const $commentList = $comment.queryView({ view: \"list\" });\n\n         if ($commentList) $commentList.clearAll();\n\n         // populate comments\n         const commentData = this.getCommentData();\n\n         if (commentData) {\n            $comment.parse(commentData);\n         }\n\n         // scroll to the last item\n         if ($commentList) $commentList.scrollTo(0, Number.MAX_SAFE_INTEGER);\n\n         delete baseView.__refreshTimeout;\n\n         this.ready();\n      }, 90);\n   }\n\n   addComment(commentText, dateTime) {\n      this.saveData(commentText, dateTime);\n   }\n\n   async updateComment(rowId, commentText) {\n      const baseView = this.view;\n      const model = baseView.model();\n\n      if (!model) return; // already notified\n\n      const commentField = baseView.getCommentField();\n\n      if (!commentField) return; // already notified\n\n      const values = {};\n\n      values[commentField.columnName] = commentText ?? \"\";\n\n      return await model.update(rowId, values);\n   }\n\n   async deleteComment(rowId) {\n      const baseView = this.view;\n      const model = baseView.model();\n\n      if (!model) return;\n\n      return await model.delete(rowId);\n   }\n\n   busy() {\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if (!$comment) return;\n\n      const $commentList = $comment.queryView({ view: \"list\" });\n\n      if (!$commentList) return;\n\n      $commentList.disable();\n\n      if ($commentList.showProgress)\n         $commentList.showProgress({ type: \"icon\" });\n   }\n\n   ready() {\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if (!$comment) return;\n\n      const $commentList = $comment.queryView({ view: \"list\" });\n\n      if (!$commentList) return;\n\n      $commentList.enable();\n\n      if ($commentList.hideProgress) $commentList.hideProgress();\n   }\n\n   async saveData(commentText, dateTime) {\n      if (!commentText) return;\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const baseView = this.view;\n      const model = baseView.model();\n      const ab = this.AB;\n\n      if (!model) {\n         ab.notify.builder(\n            {},\n            {\n               message:\n                  \"ABViewComment.saveData(): could not pull a model to work with.\",\n               viewName: baseView.label,\n            }\n         );\n\n         return;\n      }\n\n      const comment = {};\n      const userField = baseView.getUserField();\n\n      if (userField) comment[userField.columnName] = ab.Account.username();\n\n      const commentField = baseView.getCommentField();\n\n      if (commentField) comment[commentField.columnName] = commentText;\n\n      const dateField = baseView.getDateField();\n\n      if (dateField) comment[dateField.columnName] = dateTime;\n\n      // add parent cursor to default\n      const dvLink = dv.datacollectionLink;\n\n      if (dvLink?.getCursor()) {\n         const objectLink = dvLink.datasource;\n         const fieldLink = dv.fieldLink;\n\n         if (objectLink && fieldLink) {\n            comment[fieldLink.columnName] = {};\n            comment[fieldLink.columnName][objectLink.PK()] =\n               dvLink.getCursor().id;\n         }\n      }\n\n      return await model.create(comment);\n   }\n};\n","/**\n * ABViewComponent\n * A common UI component class for our UI widgets.\n */\nimport ClassUI from \"../../../../ui/ClassUI\";\n\nexport default class ABViewComponent extends ClassUI {\n   constructor(baseView, idBase, ids) {\n      super(idBase || `ABView_${baseView.id}`, ids);\n\n      this.view = baseView;\n      this.settings = baseView.settings;\n      this.AB = baseView.AB;\n      this.datacollection = baseView.datacollections || baseView.datacollection;\n\n      this.__events = [];\n      // {array}\n      // A collection of any listeners we are managing.\n      // {\n      //   emitter:   {EventEmitter} the object we are listening on\n      //   eventName: {string} the event key we are listening for\n      //   listener:  {fn} the function to call on\n      // }\n\n      this.CurrentObjectID = null;\n      // {string}\n      // the ABObject.id of the object we are working with.\n\n      this.CurrentDatacollectionID = null;\n      // {string}\n      // the ABDataCollection.id of the DC we are working with\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n   /**\n    * @method CurrentDatacollection()\n    * A helper to return the current ABDataCollection we are working with.\n    * @return {ABDataCollection}\n    */\n   get CurrentDatacollection() {\n      return this.AB.datacollectionByID(this.CurrentDatacollectionID);\n   }\n\n   ui(uiComponents = []) {\n      // an ABView is a collection of rows:\n      const _ui = {\n         id: this.ids.component,\n         view: \"layout\",\n         type: \"space\",\n         rows: uiComponents,\n      };\n\n      // if this form is empty, then force a minimal row height\n      // so the component isn't completely hidden on the screen.\n      // (important in the editor so we don't loose the ability to edit the\n      // component)\n      if (!_ui.rows.length) _ui.height = 30;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      this.AB = AB;\n   }\n\n   /**\n    * @method datacollectionLoad\n    *\n    * @param datacollection {ABDatacollection}\n    */\n   datacollectionLoad(datacollection) {\n      this.CurrentDatacollectionID = datacollection?.id;\n   }\n\n   objectLoad(object) {\n      this.CurrentObjectID = object?.id;\n   }\n\n   /**\n    * @method eventAdd()\n    * Create a new listener on an object. Note, this will prevent multiple\n    * listeners being applied to the same Object.\n    * @param {object} evt\n    *        The definition of the event we are adding:\n    *        {\n    *           emitter:   {EventEmitter} the object we are listening on\n    *           eventName: {string} the event key we are listening for\n    *           listener:   {fn} the function to call on\n    *        }\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      // make sure we haven't done this before:\n      const __events = this.__events;\n      const exists = __events.filter(\n         (e) => e.emitter === evt.emitter && e.eventName === evt.eventName\n         // && e.listener === evt.listener\n      );\n\n      if (!exists.length) {\n         // add to array\n         __events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventsClear()\n    * Remove all the attached event listeners and reset our tracking.\n    */\n   eventsClear() {\n      this.__events.forEach((evt) => {\n         evt.emitter.removeListener(evt.eventName, evt.listener);\n      });\n\n      this.__events = [];\n   }\n\n   /**\n    * @method waitInitializingDCEvery()\n    * Wait until the DC is initialized, checking every millisecond as specified by the parameter\n    * @param {number} milliSeconds\n    * The amount of milliseconds to recheck DC status.\n    * @param {object} dc\n    * the AB DC instance.\n    */\n\n   async waitInitializingDCEvery(milliSeconds, dc) {\n      if (!this.__isShowing || dc == null) return;\n      // if we manage a datacollection, then make sure it has started\n      // loading it's data when we are showing our component.\n      // load data when a widget is showing\n      if (dc.dataStatus === dc.dataStatusFlag.notInitial) await dc.loadData();\n\n      return await new Promise((resolve) => {\n         if (dc.dataStatus === dc.dataStatusFlag.initialized) {\n            resolve();\n\n            return;\n         }\n\n         const interval = setInterval(() => {\n            if (dc.dataStatus === dc.dataStatusFlag.initialized) {\n               clearInterval(interval);\n\n               resolve();\n            }\n         }, milliSeconds);\n      });\n   }\n\n   /**\n    * @method onShow()\n    * perform any preparations necessary when showing this component.\n    */\n   onShow() {\n      // check if tab has a hint\n      if (this?.view?.settings?.hintID) {\n         // fetch the steps for the hint\n         let hint = this.AB.hintID(this.view.settings.hintID);\n         if (hint.settings.active) {\n            hint.createHintUI();\n         }\n      }\n      // if we manage a datacollection, then make sure it has started\n      // loading it's data when we are showing our component.\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      if (Array.isArray(dc)) {\n         dc.forEach((item) => {\n            if (item.dataStatus === item.dataStatusFlag.notInitial)\n               // load data when a widget is showing\n               item.loadData();\n         });\n      } else {\n         if (dc.dataStatus === dc.dataStatusFlag.notInitial)\n            // load data when a widget is showing\n            dc.loadData();\n      }\n   }\n}\n","const ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewConditionalContainerComponent extends (\n   ABViewContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewConditionalContainer_${baseView.id}`,\n         Object.assign(\n            {\n               batch: \"\",\n            },\n            ids\n         )\n      );\n\n      this._ifComponent = null;\n      this._elseComponent = null;\n\n      // Set filter value\n      this.__filterComponent = baseView.AB.filterComplexNew(\n         `${baseView.id}_filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.populateFilterComponent();\n   }\n\n   ui() {\n      const _uiConditionalContainer = {\n         id: this.ids.batch,\n         view: \"multiview\",\n         cells: [\n            {\n               batch: \"wait\",\n               view: \"layout\",\n               rows: [\n                  {\n                     view: \"label\",\n                     label: this.label(\"Please wait...\"),\n                  },\n               ],\n            },\n         ],\n      };\n      const _ui = super.ui([_uiConditionalContainer]);\n\n      _uiConditionalContainer.cells.push(\n         Object.assign({ batch: \"if\" }, this.ifComponent.ui()),\n         Object.assign({ batch: \"else\" }, this.elseComponent.ui())\n      );\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB, accessLevel);\n\n      await Promise.all([\n         this.ifComponent.init(AB, accessLevel),\n         this.elseComponent.init(AB, accessLevel),\n      ]);\n\n      this.populateFilterComponent();\n\n      const dc = this.datacollection;\n\n      if (dc) {\n         const baseView = this.view;\n\n         // listen DC events\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"loadData\",\n            listener: () => this.displayView(), // Q? does this need to remain empty param?\n         });\n\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"initializedData\",\n            listener: () => this.displayView(), // Q? does this need to remain empty param?\n         });\n\n         [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n            baseView.eventAdd({\n               emitter: dc,\n               eventName: key,\n               listener: (...p) => this.displayView(...p),\n            });\n         });\n      }\n\n      this.displayView();\n   }\n\n   onShow() {\n      super.onShow();\n\n      this.populateFilterComponent();\n      this.displayView();\n   }\n\n   get ifComponent() {\n      return (this._ifComponent =\n         this._ifComponent ||\n         this.view\n            .views()\n            .find((v) => v?.name === \"If\")\n            .component());\n   }\n\n   get elseComponent() {\n      return (this._elseComponent =\n         this._elseComponent ||\n         this.view\n            .views()\n            .find((v) => v?.name === \"Else\")\n            .component());\n   }\n\n   displayView(currData) {\n      const dc = this.datacollection;\n      const ids = this.ids;\n      const $batch = $$(ids.batch);\n\n      if (dc) {\n         if (!currData) currData = dc.getCursor();\n\n         // show 'waiting' panel\n         if (\n            !currData &&\n            (dc.dataStatus === dc.dataStatusFlag.notInitial ||\n               dc.dataStatus === dc.dataStatusFlag.initializing)\n         ) {\n            $batch?.showBatch(\"wait\");\n\n            return;\n         }\n      }\n\n      const isValid = this.__filterComponent.isValid(currData);\n\n      if (isValid) {\n         // if (isValid && currData) {\n         $batch?.showBatch(\"if\");\n         this.ifComponent?.onShow?.();\n      } else {\n         $batch?.showBatch(\"else\");\n         this.elseComponent?.onShow?.();\n      }\n   }\n\n   populateFilterComponent() {\n      const dc = this.datacollection;\n      const __filterComponent = this.__filterComponent;\n\n      if (dc?.datasource) __filterComponent.fieldsLoad(dc.datasource.fields());\n      else __filterComponent.fieldsLoad([]);\n\n      __filterComponent.setValue(\n         this.settings.filterConditions ??\n            this.view.constructor.defaultValues().filterConditions\n      );\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewContainerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewContainer_${baseView.id}`, ids);\n\n      this.idBase = idBase;\n      this.options = null;\n\n      this.viewComponents = {\n         /* view.id : {viewComponent} */\n      };\n      // {hash}\n      // a reference of all our child views that we manage\n\n      this.viewComponentIDs = {\n         /* view.id : {viewComponent} */\n      };\n      // {hash}\n      // a reference of all our child.ui().ids of the views we manage\n\n      this._handlerChangePage = (pageId) => {\n         baseView.changePage(pageId);\n      };\n   }\n\n   ui(uiComponents) {\n      // Generate rows & cols of views to .layout\n      const views = this.view.viewsSortByPosition();\n      const rowViews = this.getElements(views);\n      const _ui = super.ui(uiComponents || rowViews);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // make sure each of our child views get .init() called\n   async init(AB, accessLevel = 0, options = {}) {\n      await super.init(AB);\n\n      this.options = options;\n\n      const allInits = [];\n\n      // // register our callbacks:\n      // if (options) {\n      //    for (var c in _logic.callbacks) {\n      //       _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n      //    }\n      // }\n\n      // see access by CSS class\n      $$(this.ids.component)?.define(\"css\", `accessLevel-${accessLevel}`);\n\n      const viewComponents = this.viewComponents;\n\n      // attach all the .UI views:\n      for (const key in viewComponents) {\n         // skip when the view is removed.\n         if (\n            !viewComponents[key] ??\n            !this.view.views((v) => v.id === key).length\n         )\n            continue;\n\n         // Initial component along with options in case there are callbacks we need to listen for\n         if (accessLevel) {\n            allInits.push(viewComponents[key].init(AB, accessLevel, options));\n\n            continue;\n         }\n\n         $$(this.viewComponentIDs[key])?.hide();\n      }\n\n      await Promise.all(allInits);\n   }\n\n   getElements(views) {\n      const rows = [];\n      const componentMap = {};\n\n      let curRowIndex;\n      let curColIndex;\n\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n\n      views.forEach((v) => {\n         // let component = v.component(/* App, idPrefix */);\n         // NOTE: PONG - Just temporary to be compatible old & new versions\n         let component;\n\n         try {\n            component = v.component(this.idBase);\n            // make sure any existing handlers for changePage are removed.\n            v.removeAllListeners(\"changePage\");\n         } catch (err) {\n            component = v.component(this.idBase);\n\n            const ui = component.ui;\n\n            component.ui = (() => ui).bind(component);\n         }\n\n         this.viewComponents[v.id] = component;\n\n         ////\n         //// TODO: figure out the embedded Callbacks => emit()\n         ////\n         // if key == \"form\" or \"button\" register the callbacks to the parent\n         // NOTE this will only work on the last form of a page!\n         // if (v.key == \"form\" && v._logic.callbacks) {\n         //    _logic.callbacks = v._logic.callbacks;\n         // }\n\n         // Create a new row\n         if (v.position.y == null || v.position.y !== curRowIndex) {\n            curRowIndex = v.position.y || rows.length;\n            curColIndex = 0;\n\n            const rowNew = {\n               cols: [],\n            };\n\n            // Create columns following setting value\n            const colNumber = settings.columns || defaultSettings.columns;\n\n            for (let i = 0; i < colNumber; i++)\n               rowNew.cols.push({\n                  gravity: settings.gravity?.[i]\n                     ? parseInt(settings.gravity[i])\n                     : defaultSettings.gravity,\n               });\n\n            rows.push(rowNew);\n         }\n\n         // Get the last row\n         const rowIndx = rows.length - 1;\n         const curRow = rows[rowIndx];\n         const newPos = v.position.x ?? 0;\n         const mapKey = `${rowIndx}-${newPos}`;\n\n         let getGrav = 1;\n\n         if (componentMap[mapKey])\n            console.error(\n               `Component[${component?.ids?.component}] is overwriting component[${componentMap[mapKey].ids?.component}]. <-- Reorder them to fix.`\n            );\n\n         componentMap[mapKey] = component;\n\n         if (curRow.cols[newPos]?.gravity)\n            getGrav = curRow.cols[newPos].gravity;\n\n         const _ui = component.ui();\n\n         this.viewComponentIDs[v.id] = _ui.id;\n         _ui.gravity = getGrav;\n\n         // Add ui of sub-view to column\n         curRow.cols[newPos] = _ui;\n\n         // Trigger 'changePage' event to parent\n         this.eventAdd({\n            emitter: v,\n            eventName: \"changePage\",\n            listener: this._handlerChangePage,\n         });\n\n         curColIndex++;\n      });\n\n      return rows;\n   }\n\n   onShow() {\n      super.onShow();\n\n      // calll .onShow in child components\n      Object.values(this.viewComponents).forEach((val) => {\n         val.onShow?.();\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABViewDetailComponent = require(\"./ABViewDetailComponent\");\nconst ABViewPropertyLinkPage =\n   require(\"../viewProperties/ABViewPropertyLinkPage\").default;\n\nmodule.exports = class ABViewDataviewComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDataview_${baseView.id}`,\n         Object.assign(\n            {\n               dataview: \"\",\n               reload: \"\",\n            },\n            ids\n         )\n      );\n\n      this.linkPage = null;\n   }\n\n   ui() {\n      // NOTE: need to initial the detail component here\n      // because its dom width & height values are used .template function\n      this.initDetailComponent();\n\n      const ids = this.ids;\n      const L = (...params) => (this.AB ?? AB).Multilingual.label(...params);\n      const _ui = super.ui([\n         {\n            view: \"layout\",\n            rows: [\n               {\n                  id: ids.reload,\n                  view: \"button\",\n                  value: L(\"New data available. Click to reload.\"),\n                  css: \"webix_primary webix_warn\",\n                  hidden: true,\n                  click: (id, event) => {\n                     this.reloadData();\n                  },\n               },\n               {\n                  id: ids.dataview,\n                  view: \"dataview\",\n                  scroll: \"y\",\n                  sizeToContent: true,\n                  css: \"borderless transparent\",\n                  xCount: this.settings.xCount != 1 ? this.settings.xCount : 0,\n                  height: this.settings.height,\n                  template: (item) => this.itemTemplate(item),\n                  on: {\n                     onAfterRender: () => {\n                        this.applyClickEvent();\n                        this.addCyAttribute();\n                     },\n                  },\n               },\n            ],\n         },\n      ]);\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dc = this.datacollection;\n      if (!dc) return;\n\n      // Initial the link page helper\n      this.linkPage = this.linkPageHelper.component();\n      this.linkPage.init({\n         view: this.view,\n         datacollection: dc,\n      });\n\n      const ids = this.ids;\n      const $dataView = $$(ids.dataview);\n      AB.Webix.extend($dataView, AB.Webix.ProgressBar);\n      dc.bind($dataView);\n\n      this.initRefreshWarning();\n\n      window.addEventListener(\"resize\", () => {\n         clearTimeout(this._resizeEvent);\n         this._resizeEvent = setTimeout(() => {\n            this.resize($dataView.getParentView());\n            delete this._resizeEvent;\n         }, 20);\n      });\n   }\n\n   /**\n    * @method initRefreshWarning\n    *\n    */\n   initRefreshWarning() {\n      const dc = this.datacollection;\n      const includeInQuery =\n         (dc?.settings?.objectWorkspace?.filterConditions?.rules ?? []).filter(\n            (r) =>\n               [\n                  \"in_query\",\n                  \"not_in_query\",\n                  \"in_query_field\",\n                  \"not_in_query_field\",\n               ].includes(r.rule)\n         ).length > 0;\n\n      if (!includeInQuery) return;\n      [\n         \"ab.datacollection.create\",\n         \"ab.datacollection.update\",\n         \"ab.datacollection.delete\",\n      ].forEach((eventKey) => {\n         dc.on(eventKey, (data) => {\n            if (data.objectId == dc.datasource.id)\n               this.showRefreshWarning(data);\n         });\n      });\n   }\n\n   showRefreshWarning() {\n      if (this.__throttleRefreshWarning)\n         clearTimeout(this.__throttleRefreshWarning);\n\n      this.__throttleRefreshWarning = setTimeout(() => {\n         $$(this.ids.reload)?.show();\n      }, 200);\n   }\n\n   reloadData() {\n      const dc = this.datacollection;\n      dc?.reloadData();\n\n      $$(this.ids.reload)?.hide();\n   }\n\n   onShow() {\n      super.onShow();\n\n      this.resize();\n   }\n\n   resize(base_element) {\n      const $dataview = $$(this.ids.dataview);\n      if (!$dataview) {\n         // Not sure if its a problem so notify\n         this.AB.notify.developer(\n            new Error(\"Resize called on missing dataview component\"),\n            { context: \"ABViewDataviewComponent.resize()\", ids: this.ids }\n         );\n         return;\n      }\n      $dataview.resize();\n\n      const item_width = this.getItemWidth(base_element);\n      $dataview.customize({ width: item_width });\n      $dataview.getTopParentView?.().resize?.();\n   }\n\n   initDetailComponent() {\n      const detailUI = this.getDetailUI();\n      this._detail_ui = this.AB.Webix.ui(detailUI);\n\n      // 2 - Always allow access to components inside data view\n      this.detailComponent.init(null, 2);\n   }\n\n   getDetailUI() {\n      const detailCom = this.detailComponent;\n      const editPage = this.settings.editPage;\n      const detailsPage = this.settings.detailsPage;\n\n      const _ui = detailCom.ui();\n      // adjust the UI to make sure it will look like a \"card\"\n      _ui.type = \"clean\";\n      _ui.css = \"ab-detail-view\";\n\n      if (detailsPage || editPage) {\n         _ui.css += ` ab-detail-hover ab-record-#itemId#`;\n\n         if (detailsPage) _ui.css += \" ab-detail-page\";\n         if (editPage) _ui.css += \" ab-edit-page\";\n      }\n\n      return _ui;\n   }\n\n   itemTemplate(item) {\n      const detailCom = this.detailComponent;\n      const $dataview = $$(this.ids.dataview);\n      const $detail_item = this._detail_ui;\n\n      // Mock up data to initialize height of item\n      if (!item || !Object.keys(item).length) {\n         item = item ?? {};\n         this.datacollection?.datasource?.fields().forEach((f) => {\n            switch (f.key) {\n               case \"string\":\n               case \"LongText\":\n                  item[f.columnName] = \"Lorem Ipsum\";\n                  break;\n               case \"date\":\n               case \"datetime\":\n                  item[f.columnName] = new Date();\n                  break;\n               case \"number\":\n                  item[f.columnName] = 7;\n                  break;\n            }\n         });\n      }\n      detailCom.displayData(item);\n\n      const itemWidth =\n         $dataview.data.count() > 0\n            ? $dataview.type.width\n            : ($detail_item.$width - 20) / this.settings.xCount;\n\n      const itemHeight =\n         $dataview.data.count() > 0\n            ? $dataview.type.height\n            : $detail_item.getChildViews()?.[0]?.$height;\n\n      const tmp_dom = document.createElement(\"div\");\n      tmp_dom.appendChild($detail_item.$view);\n\n      $detail_item.define(\"width\", itemWidth - 24);\n      $detail_item.define(\"height\", itemHeight + 15);\n      $detail_item.adjust();\n\n      // Add cy attributes\n      this.addCyItemAttributes(tmp_dom, item);\n\n      return tmp_dom.innerHTML.replace(/#itemId#/g, item.id);\n   }\n\n   getItemWidth(base_element) {\n      const $dataview = $$(this.ids.dataview);\n\n      let currElem = base_element ?? $dataview;\n      let parentWidth = currElem?.$width;\n      while (currElem) {\n         if (\n            currElem.config.view == \"scrollview\" ||\n            currElem.config.view == \"layout\"\n         )\n            parentWidth =\n               currElem?.$width < parentWidth ? currElem?.$width : parentWidth;\n\n         currElem = currElem?.getParentView?.();\n      }\n\n      if (!parentWidth)\n         parentWidth = $dataview?.getParentView?.().$width || window.innerWidth;\n\n      if (parentWidth > window.innerWidth) parentWidth = window.innerWidth;\n\n      // check if the browser window minus webix default padding is the same as the parent window\n      // if so we need to check to see if there is a sidebar and reduce the usable space by the\n      // width of the sidebar\n      if (window.innerWidth - 19 <= parentWidth) {\n         const $sidebar = this.getTabSidebar();\n         if ($sidebar) {\n            parentWidth -= $sidebar.$width;\n         }\n      }\n\n      const recordWidth = Math.floor(parentWidth / this.settings.xCount);\n\n      return recordWidth;\n   }\n\n   getTabSidebar() {\n      const $dataview = $$(this.ids.dataview);\n      let $sidebar;\n      let currElem = $dataview;\n      while (currElem && !$sidebar) {\n         $sidebar = (currElem.getChildViews?.() ?? []).filter(\n            (item) => item?.config?.view == \"sidebar\"\n         )[0];\n\n         currElem = currElem?.getParentView?.();\n      }\n\n      return $sidebar;\n   }\n\n   applyClickEvent() {\n      const editPage = this.settings.editPage;\n      const detailsPage = this.settings.detailsPage;\n      if (!detailsPage && !editPage) return;\n\n      const $dataview = $$(this.ids.dataview);\n      if (!$dataview) return;\n\n      $dataview.$view.onclick = (e) => {\n         let clicked = false;\n         let divs = e.path ?? [];\n\n         // NOTE: Some web browser clients do not support .path\n         if (!divs.length) {\n            divs.push(e.target);\n            divs.push(e.target.parentNode);\n         }\n\n         if (editPage) {\n            for (let p of divs) {\n               if (\n                  p.className &&\n                  p.className.indexOf(\"webix_accordionitem_header\") > -1\n               ) {\n                  clicked = true;\n                  p.parentNode.parentNode.classList.forEach((c) => {\n                     if (c.indexOf(\"ab-record-\") > -1) {\n                        // var record = parseInt(c.replace(\"ab-record-\", \"\"));\n                        const record = c.replace(\"ab-record-\", \"\");\n                        this.linkPage.changePage(editPage, record);\n                        // com.logic.toggleTab(detailsTab, ids.component);\n                     }\n                  });\n                  break;\n               }\n            }\n         }\n\n         if (detailsPage && !clicked) {\n            for (let p of divs) {\n               if (\n                  p.className &&\n                  p.className.indexOf(\"webix_accordionitem\") > -1\n               ) {\n                  p.parentNode.parentNode.classList.forEach((c) => {\n                     if (c.indexOf(\"ab-record-\") > -1) {\n                        // var record = parseInt(c.replace(\"ab-record-\", \"\"));\n                        const record = c.replace(\"ab-record-\", \"\");\n                        this.linkPage.changePage(detailsPage, record);\n                        // com.logic.toggleTab(detailsTab, ids.component);\n                     }\n                  });\n\n                  break;\n               }\n            }\n         }\n      };\n   }\n\n   addCyAttribute() {\n      const baseView = this.view;\n      const $dataview = $$(this.ids.dataview);\n      const name = (baseView.name ?? \"\").replace(\".dataview\", \"\");\n\n      $dataview.$view.setAttribute(\n         \"data-cy\",\n         `dataview container ${name} ${baseView.id}`\n      );\n   }\n\n   addCyItemAttributes(dom, item) {\n      const baseView = this.view;\n      const uuid = item.uuid;\n      const name = (baseView.name ?? \"\").replace(\".dataview\", \"\");\n      dom.querySelector(\".webix_accordionitem_body\")?.setAttribute(\n         \"data-cy\",\n         `dataview item ${name} ${uuid} ${baseView.id}`\n      );\n      dom.querySelector(\".webix_accordionitem_button\")?.setAttribute(\n         \"data-cy\",\n         `dataview item button ${name} ${uuid} ${baseView.id}`\n      );\n   }\n\n   get detailComponent() {\n      return (this._detailComponent =\n         this._detailComponent ??\n         new ABViewDetailComponent(\n            this.view,\n            `${this.ids.component}_detail_view`\n         ));\n   }\n\n   get linkPageHelper() {\n      return (this.__linkPageHelper =\n         this.__linkPageHelper || new ABViewPropertyLinkPage());\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailCheckboxComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailCheckbox_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      return super.ui({\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail checkbox ${field?.columnName} ${\n                  field?.id\n               } ${baseView.parentDetailComponent()?.id ?? baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   setValue(val) {\n      let checkbox = \"\";\n\n      // Check\n      if (val && JSON.parse(val))\n         checkbox =\n            '<span class=\"check webix_icon fa fa-check-square-o\"></span>';\n      // Uncheck\n      else checkbox = '<span class=\"check webix_icon fa fa-square-o\"></span>';\n\n      super.setValue(checkbox);\n   }\n};\n","const ABObjectQuery = require(\"../../ABObjectQuery\");\nconst ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewDetailComponent extends ABViewContainerComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetail_${baseView.id}`, ids);\n      this.idBase = idBase;\n   }\n\n   ui() {\n      let _ui = super.ui();\n\n      // this wrapper allows the detail view to have a\n      // card appearance as well as enables the edit and\n      // details functions to work when clicked\n      return {\n         type: \"form\",\n         id: this.ids.component,\n         borderless: true,\n         rows: [\n            {\n               body: _ui,\n            },\n         ],\n      };\n   }\n\n   onShow() {\n      const baseView = this.view;\n\n      try {\n         const dataCy = `Detail ${baseView.name?.split(\".\")[0]} ${baseView.id}`;\n\n         $$(this.ids.component)?.$view.setAttribute(\"data-cy\", dataCy);\n      } catch (e) {\n         console.warn(\"Problem setting data-cy\", e);\n      }\n\n      // listen DC events\n      const dv = this.datacollection;\n\n      if (dv) {\n         const currData = dv.getCursor();\n\n         if (currData) this.displayData(currData);\n\n         [\"changeCursor\", \"cursorStale\", \"collectionEmpty\"].forEach((key) => {\n            this.eventAdd({\n               emitter: dv,\n               eventName: key,\n               listener: (...p) => this.displayData(...p),\n            });\n         });\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"create\",\n            listener: (createdRow) => {\n               const currCursor = dv.getCursor();\n\n               if (currCursor?.id === createdRow.id)\n                  this.displayData(createdRow);\n            },\n         });\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"update\",\n            listener: (updatedRow) => {\n               const currCursor = dv.getCursor();\n\n               if (currCursor?.id === updatedRow.id)\n                  this.displayData(updatedRow);\n            },\n         });\n      }\n\n      super.onShow();\n   }\n\n   displayData(rowData = {}) {\n      // make sure we have data to work with.  If null is passed in\n      // then pull current cursor.\n      if (rowData == null) {\n         rowData = this.datacollection.getCursor();\n      }\n\n      const views = (this.view.views() || []).sort((a, b) => {\n         if (!a?.field?.() || !b?.field?.()) return 0;\n\n         // NOTE: sort order of calculated fields.\n         // FORMULA field type should be calculated before CALCULATE field type\n         if (a.field().key === \"formula\" && b.field().key === \"calculate\")\n            return -1;\n         else if (a.field().key === \"calculate\" && b.field().key === \"formula\")\n            return 1;\n\n         return 0;\n      });\n\n      views.forEach((f) => {\n         let val;\n\n         if (f.field) {\n            const field = f.field();\n\n            if (!field) return;\n\n            // get value of relation when field is a connect field\n            switch (field.key) {\n               case \"connectObject\":\n                  val = field.pullRelationValues(rowData);\n\n                  break;\n\n               case \"list\":\n                  val = rowData?.[field.columnName];\n\n                  if (!val) {\n                     val = \"\";\n\n                     break;\n                  }\n\n                  if (field.settings.isMultiple === 0) {\n                     let myVal = \"\";\n\n                     field.settings.options.forEach((options) => {\n                        if (options.id === val) myVal = options.text;\n                     });\n\n                     if (field.settings.hasColors) {\n                        let myHex = \"#66666\";\n                        let hasCustomColor = \"\";\n\n                        field.settings.options.forEach((h) => {\n                           if (h.text === myVal) {\n                              myHex = h.hex;\n                              hasCustomColor = \"hascustomcolor\";\n                           }\n                        });\n\n                        myVal = `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"background-color: ${myHex} !important;\"><span>${myVal}</span></span>`;\n                     }\n\n                     val = myVal;\n                  } else {\n                     const items = [];\n\n                     let myVal = \"\";\n\n                     val.forEach((value) => {\n                        let hasCustomColor = \"\";\n                        let optionHex = \"\";\n\n                        if (field.settings.hasColors && value.hex) {\n                           hasCustomColor = \"hascustomcolor\";\n                           optionHex = `background: ${value.hex};`;\n                        }\n\n                        field.settings.options.forEach((options) => {\n                           if (options.id === value.id) myVal = options.text;\n                        });\n                        items.push(\n                           `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${value.id}\"><span>${myVal}</span></span>`\n                        );\n                     });\n\n                     val = items.join(\"\");\n                  }\n\n                  break;\n\n               case \"user\":\n                  val = field.pullRelationValues(rowData);\n\n                  break;\n\n               case \"file\":\n                  val = rowData?.[field.columnName];\n\n                  if (!val) {\n                     val = \"\";\n\n                     break;\n                  }\n\n                  break;\n\n               case \"formula\":\n                  if (rowData) {\n                     // const dv = this.datacollection;\n                     // const ds = dv ? dv.datasource : null;\n                     // const needRecalculate =\n                     //    !ds || ds instanceof ABObjectQuery ? false : true;\n\n                     // NOTE: Could not to re-calculate because `__relation` data is extracted from full data at the moment\n                     // rowData.__relation format\n                     // {\n                     //    id: \"string\"\n                     //    text: \"string\"\n                     //    translations: []\n                     //    uuid:  \"0cb52669-d626-4c9d-85ea-2d931751d0ce\"\n                     //    value: \"LABEL\"\n                     // }\n                     const needRecalculate = false;\n\n                     val = field.format(rowData, needRecalculate);\n                  }\n\n                  break;\n\n               default:\n                  val = field.format(rowData);\n               // break;\n            }\n         }\n\n         // set value to each components\n         const vComponent = f.component(this.idBase);\n\n         // vComponent?.onShow();\n\n         vComponent?.setValue?.(val);\n         vComponent?.displayText?.(rowData);\n      });\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailConnectComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailConnect_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const settings = this.settings;\n\n      return super.ui({\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const columnName =\n                  baseView.field((fld) => fld.id === settings.fieldId)\n                     ?.columnName ?? \"\";\n               const dataCy = `detail connected ${columnName} ${\n                  settings.fieldId\n               } ${baseView.parentDetailComponent()?.id || baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   setValue(val) {\n      const vals = [];\n\n      if (Array.isArray(val))\n         val.forEach((record) => {\n            vals.push(\n               `<span class=\"webix_multicombo_value\">${record.text}</span>`\n            );\n         });\n      else vals.push(`<span class=\"webix_multicombo_value\">${val.text}</span>`);\n\n      super.setValue(vals.join(\"\"));\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailCustomComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailCustom_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const detailView = baseView.detailComponent();\n\n      let template = field ? field.columnHeader().template({}) : \"\";\n\n      return super.ui({\n         minHeight: 45,\n         height: 60,\n         template,\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail custom ${field?.columnName} ${\n                  field?.id\n               } ${baseView.parentDetailComponent()?.id || baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   onShow() {\n      super.onShow();\n\n      const baseView = this.view;\n      const field = baseView.field();\n\n      if (!field) return;\n\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const detailCom = baseView.detailComponent(),\n         rowData = detailCom.datacollection.getCursor() || {},\n         node = $detailItem.$view;\n\n      field.customDisplay(rowData, null, node, {\n         editable: false,\n      });\n      // Hack: remove the extra webix_template class here, which adds padding so\n      // the item is not alligned with the others\n      node\n         .getElementsByClassName(\"webix_template\")[1]\n         ?.removeAttribute(\"class\");\n   }\n\n   setValue(val) {\n      const field = this.view.field();\n\n      if (!field) return;\n\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const rowData = {};\n\n      rowData[field.columnName] = val;\n\n      field.setValue($detailItem, rowData);\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailImageComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailImage_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const _ui = {\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail image ${field?.columnName} ${field?.id} ${\n                  baseView.parentDetailComponent()?.id || baseView.parent.id\n               }`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      };\n      const settings = this.settings;\n\n      if (settings.height) _ui.height = settings.height;\n\n      return super.ui(_ui);\n   }\n\n   setValue(val) {\n      const field = this.view.field();\n\n      if (!field) {\n         super.setValue(\"\");\n\n         return;\n      }\n\n      const parsedImageUrl = val || field.settings.defaultImageUrl;\n\n      if (!parsedImageUrl) {\n         super.setValue(\"\");\n\n         return;\n      }\n\n      const imageUrl = field.urlImage(parsedImageUrl);\n      const settings = this.settings;\n      const width = settings.width || field.settings.imageWidth || 200;\n      const height = settings.height\n         ? `${settings.height}px`\n         : field.settings.imageHeight\n         ? `${field.settings.imageHeight}px`\n         : \"100%\";\n      const imageTemplate = [\n         `<div class=\"ab-image-data-field\">`,\n         `<div style=\"float: left; background-size: cover; background-position: center center; background-image:url('${imageUrl}');  width: ${width}px; height: ${height}; position:relative;\">`,\n         `<a href=\"${imageUrl}\" target=\"_blank\" title=\"\" class=\"fa fa-download ab-image-data-field-download\"></a>`,\n         `</div></div>`,\n      ].join(\"\");\n\n      super.setValue(imageTemplate);\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nconst SAFE_HTML_TAGS = [\n   \"abbr\",\n   \"acronym\",\n   \"b\",\n   \"blockquote\",\n   \"br\",\n   \"code\",\n   \"div\",\n   \"em\",\n   \"i\",\n   \"li\",\n   \"ol\",\n   \"p\",\n   \"span\",\n   \"strong\",\n   \"table\",\n   \"td\",\n   \"tr\",\n   \"ul\",\n   \"h1\",\n   \"h2\",\n   \"h3\",\n   \"h4\",\n   \"h5\",\n];\n\nmodule.exports = class ABViewDetailItemComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDetailItem_${baseView.id}`,\n         Object.assign(\n            {\n               detailItem: \"\",\n               detailItemLabel: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui(uiDetailItemComponent = {}) {\n      const baseView = this.view;\n\n      // setup 'label' of the element\n      const settings = baseView.detailComponent()?.settings ?? {};\n      const field = baseView.field();\n\n      const isLabelTop = settings.labelPosition == \"top\";\n\n      const group = [];\n      /** @const group will be used later as rows or cols depending on label position */\n      if (settings.showLabel) {\n         const templateLabel = isLabelTop\n            ? \"<label style='display:block; text-align: left; line-height: 32px;' class='webix_inp_top_label'>#label#</label>\"\n            : \"<label style='display: inline-block; float: left; line-height: 32px; width:#width#px;'>#label#</label>\";\n\n         const labelUi = {\n            id: this.ids.detailItemLabel,\n            view: \"template\",\n            borderless: true,\n            height: 38,\n            template: templateLabel,\n            data: { label: field?.label ?? \"\" },\n         };\n         if (!isLabelTop) labelUi.width = settings.labelWidth + 24; // Add 24px to compensate for webix padding\n         group.push(labelUi);\n      }\n\n      let height;\n      if (field?.settings?.useHeight === 1)\n         height = parseInt(field.settings.imageHeight) || height;\n\n      const valueUi = Object.assign(\n         {\n            id: this.ids.detailItem,\n            view: \"template\",\n            borderless: true,\n            autowidth: true,\n            height,\n            isUsers: field?.key === \"user\",\n            template: isLabelTop\n               ? \"<div style='min-height: 38px'>#display#</div>\"\n               : \"<div class='ab-detail-component-holder'>#display#</div>\",\n            data: { display: \"\" }, // show empty data in template\n         },\n         uiDetailItemComponent\n      );\n      // height = 0 behaves a bit differently then autoheight here.\n      if (!valueUi.height || valueUi.height == 0) {\n         delete valueUi.height;\n         valueUi.autoheight = true;\n      }\n      group.push(valueUi);\n      const itemUi = {};\n      settings.labelPosition == \"top\"\n         ? (itemUi.rows = group)\n         : (itemUi.cols = group);\n      const _ui = super.ui([itemUi]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // async init(AB) {\n   //    await super.init(AB);\n   // }\n\n   setValue(val, detailId) {\n      const $detailItem = $$(detailId ?? this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const field = this.view.field();\n\n      switch (field?.key) {\n         case \"string\":\n         case \"LongText\": {\n            const strVal = val\n               // Sanitize all of HTML tags\n               .replace(/[<]/gm, \"&lt;\")\n               // Allow safe HTML tags\n               .replace(\n                  new RegExp(`(&lt;(/)?(${SAFE_HTML_TAGS.join(\"|\")}))`, \"gm\"),\n                  \"<$2$3\"\n               );\n\n            $detailItem.setValues({ display: strVal });\n            break;\n         }\n         default:\n            $detailItem.setValues({ display: val });\n            break;\n      }\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailTextComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailText_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const field = this.view.field();\n      const _ui = {\n         css: \"ab-text\",\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail text ${field?.columnName} ${field?.id} ${\n                  this.view.parentDetailComponent()?.id || this.view.parent.id\n               }`;\n\n               $$(this.ids.component)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      };\n      const settings = this.settings;\n\n      if (settings.height) _ui.height = settings.height;\n\n      return super.ui(_ui);\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailTreeComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailTree_${baseView.id}`, ids);\n   }\n\n   get className() {\n      return \"ab-detail-tree\";\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      // add div of tree to detail\n      this.setValue(`<div class=\"${this.className}\"></div>`);\n   }\n\n   getDomTree() {\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      return $detailItem.$view.getElementsByClassName(this.className)[0];\n   }\n\n   setValue(val) {\n      // convert value to array\n      const vals = [];\n\n      if (val && !Array.isArray(val)) vals.push(val);\n\n      setTimeout(() => {\n         // get tree dom\n         const domTree = this.getDomTree();\n\n         if (!domTree) return false;\n\n         const field = this.view.field();\n         const branches = [];\n\n         if (typeof field.settings.options.data === \"undefined\")\n            field.settings.options = new this.AB.Webix.TreeCollection({\n               data: field.settings.options,\n            });\n\n         field.settings.options.data.each(function (obj) {\n            if (vals.indexOf(obj.id) !== -1) {\n               let html = \"\";\n               let rootid = obj.id;\n\n               while (this.getParentId(rootid)) {\n                  field.settings.options.data.each(function (par) {\n                     if (\n                        field.settings.options.data.getParentId(rootid) ===\n                        par.id\n                     ) {\n                        html = `${par.text}: ${html}`;\n                     }\n                  });\n\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n\n         let nodeHTML = \"<div class='list-data-values'>\";\n\n         branches.forEach(function (item) {\n            nodeHTML += `<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color: ${myHex} !important;\">${item}</span>`;\n         });\n\n         nodeHTML += \"</div>\";\n         domTree.innerHTML = nodeHTML;\n\n         let height = 33;\n\n         if (domTree.scrollHeight > 33) height = domTree.scrollHeight;\n\n         const $detailItem = $$(this.ids.detailItem);\n\n         $detailItem.config.height = height;\n         $detailItem.resize();\n      }, 50);\n   }\n};\n","const Docxtemplater = require(\"../../../../js/docxtemplater.v3.0.12.min.js\");\nconst ImageModule = require(\"../../../../js/docxtemplater-image-module.v3.0.2.min.js\");\nconst JSZipUtils = require(\"jszip-utils/dist/jszip-utils.min.js\");\nconst JSZip = require(\"../../../../js/jszip.min.js\");\nconst sizeOf = require(\"image-size\");\n\nconst ABFieldConnect = require(\"../../dataFields/ABFieldConnect\");\nconst ABFieldImage = require(\"../../dataFields/ABFieldImage\");\nconst ABObjectQuery = require(\"../../ABObjectQuery\");\n\nconst ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewDocxBuilderComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDocxBuilder_${baseView.id}`,\n         Object.assign(\n            {\n               downloadButton: \"\",\n               noFileLabel: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const settings = this.settings;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const buttonWidth = settings.width ?? defaultSettings.width;\n\n      let autowidth = false;\n\n      if (buttonWidth === 0) autowidth = true;\n\n      let leftSpacer = {\n         type: \"spacer\",\n         width: 1,\n      };\n      let rightSpacer = {\n         type: \"spacer\",\n         width: 1,\n      };\n\n      switch (settings.buttonPosition ?? defaultSettings.buttonPosition) {\n         case \"left\":\n            break;\n         case \"center\":\n            leftSpacer = {\n               type: \"spacer\",\n            };\n            rightSpacer = {\n               type: \"spacer\",\n            };\n            break;\n         case \"right\":\n            leftSpacer = {\n               type: \"spacer\",\n            };\n            break;\n      }\n\n      const buttonLabelText =\n         baseView.buttonlabel ||\n         settings.buttonlabel ||\n         defaultSettings.buttonlabel; // Use || to check empty string \"\"\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            view: \"toolbar\",\n            css:\n               settings.toolbarBackground ?? defaultSettings.toolbarBackground,\n            cols: [\n               leftSpacer,\n               {\n                  id: ids.downloadButton,\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-file-word-o\",\n                  label: buttonLabelText,\n                  width: settings.width || defaultSettings.width,\n                  autowidth: autowidth,\n                  click: () => {\n                     this.renderFile();\n                  },\n                  on: {\n                     // Add data-cy attribute for cypress tests\n                     onAfterRender: () => {\n                        const name = baseView.name?.replace(\".docxBuilder\", \"\");\n                        const dataCy = `docx download ${name} ${baseView.id}`;\n                        $$(ids.downloadButton)\n                           ?.$view.querySelector(\"button\")\n                           .setAttribute(\"data-cy\", dataCy);\n                     },\n                  },\n               },\n               {\n                  id: ids.noFileLabel,\n                  view: \"label\",\n                  label: this.label(\"No template file\"),\n               },\n               {\n                  type: \"spacer\",\n               },\n               rightSpacer,\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n      const $downloadButton = $$(ids.downloadButton);\n      const $noFileLabel = $$(ids.noFileLabel);\n\n      if (this.view.settings.filename) {\n         $downloadButton.show();\n         $noFileLabel.hide();\n      } else {\n         $downloadButton.hide();\n         $noFileLabel.show();\n      }\n   }\n\n   async onShow() {\n      super.onShow();\n\n      const tasks = [];\n\n      this.view.datacollections.forEach((dc) => {\n         if (dc.dataStatus === dc.dataStatusFlag.notInitial)\n            // load data when a widget is showing\n            tasks.push(dc.loadData());\n      });\n\n      // Show loading cursor\n      if (tasks.length > 0) this.busy();\n\n      await Promise.all(tasks);\n\n      // Hide loading cursor\n      this.ready();\n   }\n\n   busy() {\n      const $downloadButton = $$(this.ids.downloadButton);\n\n      if (!$downloadButton) return;\n\n      $downloadButton.disable();\n      $downloadButton.define(\"icon\", \"fa fa-refresh fa-spin\");\n      $downloadButton.refresh();\n   }\n\n   ready() {\n      const $downloadButton = $$(this.ids.downloadButton);\n\n      if (!$downloadButton) return;\n\n      $downloadButton.enable();\n      $downloadButton.define(\"icon\", \"fa fa-file-word-o\");\n      $downloadButton.refresh();\n   }\n\n   async renderFile() {\n      this.busy();\n\n      const reportValues = await this.getReportData();\n\n      // console.log(\"DOCX data: \", reportValues);\n\n      // Download images\n      const images = await this.downloadImages(reportValues);\n\n      // Download the template file\n      const contentTemplateFile = await this.downloadTemplateFile();\n\n      // Generate Docx file\n      const blobFile = this.generateDocxFile(\n         contentTemplateFile,\n         reportValues,\n         images\n      );\n\n      const baseView = this.view;\n\n      // Let user download the output file\n      baseView.letUserDownload(blobFile, baseView.filelabel);\n\n      // Final step\n      this.ready();\n   }\n\n   async getReportData() {\n      const result = {};\n      const tasks = [];\n\n      // Get current cursor\n      const datacollections = this.view.datacollections;\n      const isDcLabelAdded = datacollections.length > 1;\n\n      datacollections\n         .filter((dc) => dc?.datasource)\n         .forEach(async (dc) => {\n            tasks.push(\n               new Promise((resolve, reject) => {\n                  const obj = dc.datasource;\n                  const objModel = obj.model();\n                  const dcCursor = dc.getCursor();\n                  const dcValues = [];\n\n                  // pull the defined sort values\n                  let sorts = dc.settings.objectWorkspace.sortFields || [];\n\n                  // pull filter conditions\n                  let wheres = this.AB.cloneDeep(\n                     dc.settings.objectWorkspace.filterConditions ?? {}\n                  );\n                  // if there is a selected cursor set the filter here\n                  if (dcCursor) {\n                     // if there is a selected cursor set the filter here\n                     wheres = {\n                        glue: \"and\",\n                        rules: [\n                           {\n                              key: obj.PK(),\n                              rule: \"equals\",\n                              value: dcCursor[obj.PK()],\n                           },\n                        ],\n                     };\n                  } else if (dc.__reloadWheres) {\n                     // if we pass new wheres with a reload use them instead\n                     wheres = dc.__reloadWheres;\n                  }\n                  wheres.glue = wheres.glue || \"and\";\n                  wheres.rules = wheres.rules || [];\n\n                  const __additionalWheres = {\n                     glue: \"and\",\n                     rules: [],\n                  };\n\n                  // add the filterCond from user filters if there are rules to add\n                  if (dc?.__filterCond?.rules?.length > 0) {\n                     __additionalWheres.rules.push(dc?.__filterCond);\n                  }\n\n                  // Filter by a selected cursor of a link DC\n                  let linkRule = dc.ruleLinkedData();\n                  if (!dc.settings.loadAll && linkRule) {\n                     __additionalWheres.rules.push(linkRule);\n                  }\n                  // pull data rows following the follow data collection\n                  else if (dc.datacollectionFollow) {\n                     const followCursor = dc.datacollectionFollow.getCursor();\n                     // store the PK as a variable\n                     let PK = dc.datasource.PK();\n                     // if the datacollection we are following is a query\n                     // add \"BASE_OBJECT.\" to the PK so we can select the\n                     // right value to report the cursor change to\n                     if (dc.datacollectionFollow.settings.isQuery) {\n                        PK = \"BASE_OBJECT.\" + PK;\n                     }\n                     if (followCursor) {\n                        wheres = {\n                           glue: \"and\",\n                           rules: [\n                              {\n                                 key: dc.datasource.PK(),\n                                 rule: \"equals\",\n                                 value: followCursor[PK],\n                              },\n                           ],\n                        };\n                     }\n                     // Set no return rows\n                     else {\n                        wheres = {\n                           glue: \"and\",\n                           rules: [\n                              {\n                                 key: this.datasource.PK(),\n                                 rule: \"equals\",\n                                 value: \"NO RESULT ROW\",\n                              },\n                           ],\n                        };\n                     }\n                  }\n\n                  // Combine setting & program filters\n                  if (__additionalWheres.rules.length) {\n                     if (wheres.rules.length) {\n                        __additionalWheres.rules.unshift(wheres);\n                     }\n                     wheres = __additionalWheres;\n                  }\n\n                  // remove any null in the .rules\n                  // if (wheres?.rules?.filter) wheres.rules = wheres.rules.filter((r) => r);\n                  wheres = obj.whereCleanUp(wheres);\n\n                  // Pull data that have full relation values.\n                  // NOTE: When get data from DataCollection, those data is pruned.\n                  objModel\n                     .findAll({\n                        where: wheres || {},\n                        skip: 0,\n                        sort: sorts,\n                        populate: true,\n                     })\n                     .then((dataList) => {\n                        // update property names to column labels to match format names in docx file\n                        const mlFields = obj.multilingualFields();\n\n                        dataList?.data.forEach((data) => {\n                           let resultData;\n\n                           // For support label of columns every languages\n                           obj.fields().forEach((f) => {\n                              const fieldLabels = [];\n\n                              // Query Objects\n                              if (obj instanceof ABObjectQuery) {\n                                 if (typeof f.object.translations === \"string\")\n                                    f.object.translations = JSON.parse(\n                                       f.object.translations\n                                    );\n\n                                 if (typeof f.translations === \"string\")\n                                    f.translations = JSON.parse(f.translations);\n\n                                 (f.object.translations || []).forEach(\n                                    (objTran) => {\n                                       const fieldTran = (\n                                          f.translations || []\n                                       ).filter(\n                                          (fieldTran) =>\n                                             fieldTran.language_code ===\n                                             objTran.language_code\n                                       )[0];\n\n                                       if (!fieldTran) return;\n\n                                       const objectLabel = objTran.label;\n                                       const fieldLabel = fieldTran.label;\n\n                                       // Replace alias with label of object\n                                       fieldLabels.push(\n                                          `${objectLabel}.${fieldLabel}`\n                                       );\n                                    }\n                                 );\n                              }\n                              // Normal Objects\n                              else if (typeof f.translations === \"string\")\n                                 f.translations = JSON.parse(f.translations);\n\n                              f.translations.forEach((tran) => {\n                                 fieldLabels.push(tran.label);\n                              });\n\n                              resultData = Object.assign(\n                                 resultData ?? {},\n                                 this.setReportValues(\n                                    data,\n                                    f,\n                                    fieldLabels,\n                                    mlFields\n                                 ) ?? {}\n                              );\n\n                              // Keep ABObject into .scope of DOCX templater\n                              resultData._object = obj;\n                           });\n\n                           dcValues.push(resultData);\n                        });\n\n                        // If data sources have more than 1 or the result data more than 1 items, then add label of data source\n                        const datacollectionData =\n                           dcValues.length > 1 ? dcValues : dcValues[0];\n\n                        if (\n                           isDcLabelAdded ||\n                           (Array.isArray(datacollectionData) &&\n                              datacollectionData.length > 1)\n                        )\n                           (dc.translations || []).forEach((tran) => {\n                              result[tran.label] = datacollectionData;\n                           });\n                        else Object.assign(result, datacollectionData);\n\n                        resolve();\n                     });\n               })\n            );\n         });\n\n      await Promise.all(tasks);\n\n      return result;\n   }\n\n   setReportValues(data, field, fieldLabels = [], multilinguageFields) {\n      const result = {};\n\n      let val = null;\n\n      result.id = data.id;\n      result[`${field.columnName}_ORIGIN`] = data[field.columnName]; // Keep origin value for compare value with custom index\n\n      const baseView = this.view;\n\n      // Translate multilinguage fields\n      if (multilinguageFields.length) {\n         const transFields = (multilinguageFields || []).filter(\n            (fieldName) => data[fieldName] != null\n         );\n\n         baseView.translate(data, data, transFields, baseView.languageCode);\n      }\n\n      // Pull value\n      if (field instanceof ABFieldConnect) {\n         // If field is connected field, then\n         // {\n         //    fieldName: {Object} or [Array]\n         // }\n         val = data[this.AB.rules.toFieldRelationFormat(field.columnName)];\n\n         if (val?.forEach)\n            val.forEach((v) => {\n               if (!v) return;\n\n               // Sentry Fix: sometimes v is just the uuid\n               // Q: what should we do in this case?\n               if (typeof v == \"string\") return;\n\n               // format relation data\n               if (field.datasourceLink) {\n                  field.datasourceLink\n                     .fields((f) => !f.isConnection)\n                     .forEach((f) => {\n                        v[`${f.columnName}_ORIGIN`] = v[f.columnName];\n\n                        v[f.columnName] = f.format(v, {\n                           languageCode: baseView.languageCode,\n                        });\n                     });\n               }\n\n               // Keep ABObject to relation data\n               if (v && typeof v === \"object\") v._object = field.datasourceLink;\n            });\n\n         // TODO\n         // data[label + '_label'] = field.format(baseData);\n      } else\n         val = field.format(data, {\n            languageCode: baseView.languageCode,\n         });\n\n      // Set value to report with every languages of label\n      fieldLabels.forEach((label) => {\n         if (val) result[label] = val;\n         else if (!result[label]) result[label] = \"\";\n      });\n\n      // normalize child items\n      if (data.data?.length) {\n         result.data = result.data || [];\n\n         (data.data || []).forEach((childItem, index) => {\n            // add new data item\n            result.data[index] = this.setReportValues(\n               childItem,\n               field,\n               fieldLabels,\n               multilinguageFields\n            );\n         });\n      }\n\n      return result;\n   }\n\n   async downloadImages(reportValues) {\n      const images = {};\n      const tasks = [];\n      const addDownloadTask = (fieldImage, data = []) => {\n         if (Array.isArray(data) == false) {\n            data = [data];\n         }\n         data.forEach((d) => {\n            const imageVal = fieldImage.format(d);\n\n            if (imageVal && !images[imageVal]) {\n               tasks.push(\n                  new Promise((resolve, reject) => {\n                     const imgUrl = fieldImage.urlImage(imageVal); // `/opsportal/image/${this.application.name}/${imageVal}`;\n\n                     JSZipUtils.getBinaryContent(imgUrl, (error, content) => {\n                        if (error) return reject(error);\n\n                        // store binary of image\n                        images[imageVal] = content;\n\n                        resolve();\n                     });\n                  })\n               );\n            }\n\n            // download images of child items\n            addDownloadTask(fieldImage, d.data || []);\n         });\n      };\n\n      this.view.datacollections\n         .filter((dc) => dc?.datasource)\n         .forEach((dc) => {\n            const obj = dc.datasource;\n\n            // let currCursor = dc.getCursor();\n\n            // if (currCursor) {\n            //    // Current cursor\n            //    const treeCursor = dc.getCursor(true);\n\n            //    currCursor = [this.AB.merge({}, currCursor, treeCursor)];\n            // } // List of data\n            // else currCursor = dc.getData();\n\n            obj.fields((f) => f instanceof ABFieldImage).forEach((f) => {\n               addDownloadTask(f, reportValues[dc.label] || [reportValues]);\n            });\n         });\n\n      await Promise.all(tasks);\n\n      return images;\n   }\n\n   downloadTemplateFile() {\n      const url = this.view.downloadUrl();\n\n      return new Promise((resolve, reject) => {\n         JSZipUtils.getBinaryContent(url, (error, content) => {\n            if (error) return reject(error);\n\n            resolve(content);\n         });\n      });\n   }\n\n   generateDocxFile(contentFile, data, images) {\n      const summaries = {}; // { varName: sum number, ..., varName2: number2 }\n      const zip = new JSZip(contentFile);\n      const doc = new Docxtemplater();\n      const imageModule = new ImageModule({\n         centered: false,\n         getImage: (tagValue, tagName) => {\n            // NOTE: .getImage of version 3.0.2 does not support async\n            //       we can buy newer version to support it\n            //       https://docxtemplater.com/modules/image/\n\n            return images[tagValue] || \"\";\n         },\n         getSize: (imgBuffer, tagValue, tagName) => {\n            const defaultVal = [300, 160];\n            const baseView = this.view;\n            const dc = baseView.datacollection;\n\n            if (!dc) {\n               const dcs = baseView.datacollections;\n\n               if (dcs) {\n                  dcs.forEach((dc) => {\n                     let obj = dc.datasource;\n\n                     if (!obj) return false;\n\n                     // This is a query object\n                     if (tagName.indexOf(\".\") > -1) {\n                        let tagNames = tagName.split(\".\");\n\n                        if (!obj.objects) return false; // not a query\n\n                        obj = obj.objects((o) => o.label === tagNames[0])[0]; // Label of object\n\n                        if (!obj) return false;\n\n                        tagName = tagNames[1]; // Field name\n                     }\n\n                     const imageField = obj.fields(\n                        (f) => f.columnName === tagName\n                     )[0];\n\n                     if (!imageField?.settings) return false;\n\n                     if (\n                        imageField.settings.useWidth &&\n                        imageField.settings.imageWidth\n                     )\n                        defaultVal[0] = imageField.settings.imageWidth;\n\n                     if (\n                        imageField.settings.useHeight &&\n                        imageField.settings.imageHeight\n                     )\n                        defaultVal[1] = imageField.settings.imageHeight;\n\n                     return false;\n                  });\n               }\n            } else {\n               let obj = dc.datasource;\n\n               if (!obj) return defaultVal;\n\n               // This is a query object\n               if (tagName.indexOf(\".\") > -1) {\n                  const tagNames = tagName.split(\".\");\n\n                  obj = obj.objects((o) => o.label === tagNames[0])[0]; // Label of object\n\n                  if (!obj) return defaultVal;\n\n                  tagName = tagNames[1]; // Field name\n               }\n\n               const imageField = obj.fields(\n                  (f) => f.columnName === tagName\n               )[0];\n\n               if (!imageField?.settings) return defaultVal;\n\n               if (\n                  imageField.settings.useWidth &&\n                  imageField.settings.imageWidth\n               )\n                  defaultVal[0] = imageField.settings.imageWidth;\n\n               if (\n                  imageField.settings.useHeight &&\n                  imageField.settings.imageHeight\n               )\n                  defaultVal[1] = imageField.settings.imageHeight;\n            }\n            // Find aspect ratio image dimensions\n            try {\n               var img = new Uint8Array(imgBuffer);\n               var image = sizeOf(img);\n               var ratio = Math.min(\n                  defaultVal[0] / image.width,\n                  defaultVal[1] / image.height\n               );\n\n               return [image.width * ratio, image.height * ratio];\n            } catch (err) {\n               // if invalid image, then should return 0, 0 sizes\n               return defaultVal;\n            }\n         },\n         // getSize: function (imgBuffer, tagValue, tagName) {\n         //    if (imgBuffer) {\n         //       var maxWidth = 300;\n         //       var maxHeight = 160;\n\n         //       // Find aspect ratio image dimensions\n         //       try {\n         //          var image = sizeOf(imgBuffer);\n         //          var ratio = Math.min(maxWidth / image.width, maxHeight / image.height);\n\n         //          return [image.width * ratio, image.height * ratio];\n         //       }\n         //       // if invalid image, then should return 0, 0 sizes\n         //       catch (err) {\n         //          return [0, 0];\n         //       }\n\n         //    }\n         //    else {\n         //       return [0, 0];\n         //    }\n         // }\n      });\n\n      try {\n         doc.attachModule(imageModule)\n            .loadZip(zip)\n            .setData(data)\n            .setOptions({\n               parser: function (tag) {\n                  return {\n                     get: function (scope, context) {\n                        // NOTE: AppBuilder custom filter : no return empty items\n                        if (tag.indexOf(\"data|\") === 0) {\n                           const prop = (tag.split(\"|\")[1] || \"\").trim();\n\n                           return (scope[\"data\"] || []).filter(function (item) {\n                              return item[prop] ? true : false;\n                           });\n                        }\n                        // Mark number to add to a variable\n                        else if (tag.indexOf(\"|$sum?\") > -1) {\n                           const prop = tag.split(\"|$sum?\")[0];\n                           const varName = tag.split(\"|$sum?\")[1];\n\n                           let number = scope[prop];\n\n                           if (typeof number === \"string\")\n                              number = number.replace(\n                                 /[^\\d.]/g, // return only number and dot\n                                 \"\"\n                              );\n\n                           if (!summaries[varName]) summaries[varName] = 0.0;\n\n                           summaries[varName] += parseFloat(number);\n\n                           return scope[prop];\n                        }\n                        // Show sum value ^\n                        else if (tag.indexOf(\"$sum?\") === 0) {\n                           const varName = tag.replace(\"$sum?\", \"\");\n\n                           return summaries[varName] || 0;\n                        }\n                        // // Sum number of .data (Grouped query)\n                        // else if (tag.indexOf(\"$sum|\") === 0) {\n                        //    const prop = (\n                        //       tag.split(\"|\")[1] || \"\"\n                        //    ).trim();\n\n                        //    let sum = 0;\n                        //    (scope[\"data\"] || []).forEach(\n                        //       (childItem) => {\n                        //          if (!childItem[prop]) return;\n\n                        //          let number = childItem[prop];\n                        //          if (typeof number === \"string\") {\n                        //             number = number.replace(\n                        //                /[^\\d.]/g, // return only number and dot\n                        //                \"\"\n                        //             );\n                        //          }\n\n                        //          try {\n                        //             sum += parseFloat(\n                        //                number || 0\n                        //             );\n                        //          } catch (e) {}\n                        //       }\n                        //    );\n\n                        //    // Print number with commas\n                        //    if (sum) {\n                        //       sum = sum\n                        //          .toString()\n                        //          .replace(\n                        //             /\\B(?=(\\d{3})+(?!\\d))/g,\n                        //             \",\"\n                        //          );\n                        //    }\n\n                        //    return sum;\n                        // }\n                        // NOTE: AppBuilder custom filter of another data source\n                        else if (tag.indexOf(\"$\") === 0) {\n                           const props = tag.replace(\"$\", \"\").split(\"|\");\n                           const propSource = props[0].trim();\n                           const propFilter = props[1].trim(); // column name of ABFieldConnect\n\n                           if (!propSource || !propFilter) return \"\";\n\n                           // Pull Index field of connect field\n                           let indexColName;\n\n                           const obj = scope._object;\n\n                           if (obj) {\n                              const connectedField = obj.fields(\n                                 (f) => f.columnName === propFilter\n                              )[0];\n\n                              if (connectedField) {\n                                 const indexField = connectedField.indexField;\n\n                                 indexColName = indexField\n                                    ? indexField.columnName\n                                    : null;\n                              }\n                           }\n\n                           let sourceVals = data[propSource];\n\n                           if (sourceVals && !Array.isArray(sourceVals))\n                              sourceVals = [sourceVals];\n\n                           const getVal = (data) =>\n                              data[`${indexColName}_ORIGIN`] || // Pull origin data to compare by custom index\n                              data[indexColName] ||\n                              data.id ||\n                              data;\n\n                           return (sourceVals || []).filter(function (item) {\n                              // Pull data of parent to compare\n                              let comparer = scope[propFilter];\n\n                              if (Array.isArray(comparer))\n                                 return (\n                                    comparer.filter(\n                                       (c) => getVal(c) === getVal(item)\n                                    ).length > 0\n                                 );\n                              else return getVal(item) === getVal(comparer);\n                           });\n                        }\n                        // ์NOTE : Custom filter\n                        else if (tag.indexOf(\"?\") > -1) {\n                           const result = scope;\n                           const prop = tag.split(\"?\")[0];\n                           const condition = tag.split(\"?\")[1];\n\n                           if (prop && condition) {\n                              let data = scope[prop];\n\n                              if (data) {\n                                 if (!Array.isArray(data)) data = [data];\n\n                                 return data.filter((d) =>\n                                    eval(condition.replace(/\\./g, \"d.\"))\n                                 );\n                              }\n                           }\n                           return result;\n                        } else if (tag === \".\") return scope;\n                        else return scope[tag];\n                     },\n                  };\n               },\n            })\n            .render(); // render the document\n      } catch (error) {\n         return error;\n      }\n\n      // Output the document using Data-URI\n      const docxFile = doc.getZip().generate({\n         type: \"blob\",\n         mimeType:\n            \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n      });\n\n      return docxFile;\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormButton extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormButton_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const self = this;\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const settings = baseView.settings ?? {};\n\n      const alignment =\n         settings.alignment || baseView.constructor.defaultValues().alignment;\n\n      const _ui = {\n         cols: [],\n      };\n\n      // spacer\n      if (alignment === \"center\" || alignment === \"right\") {\n         _ui.cols.push({});\n      }\n\n      // delete button\n      if (settings.includeDelete) {\n         _ui.cols.push(\n            {\n               view: \"button\",\n               autowidth: true,\n               value: settings.deleteLabel || this.label(\"Delete\"),\n               css: \"webix_danger\",\n               click: function () {\n                  self.onDelete(this);\n               },\n               on: {\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `button delete ${form.id}`\n                     );\n                  },\n               },\n            },\n            {\n               width: 10,\n            }\n         );\n      }\n\n      // cancel button\n      if (settings.includeCancel) {\n         _ui.cols.push(\n            {\n               view: \"button\",\n               autowidth: true,\n               value: settings.cancelLabel || this.label(\"Cancel\"),\n               click: function () {\n                  self.onCancel(this);\n               },\n               on: {\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `button cancel ${form.id}`\n                     );\n                  },\n               },\n            },\n            {\n               width: 10,\n            }\n         );\n      }\n\n      // reset button\n      if (settings.includeReset) {\n         _ui.cols.push(\n            {\n               view: \"button\",\n               autowidth: true,\n               value: settings.resetLabel || this.label(\"Reset\"),\n               click: function () {\n                  self.onClear(this);\n               },\n               on: {\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `button reset ${form.id}`\n                     );\n                  },\n               },\n            },\n            {\n               width: 10,\n            }\n         );\n      }\n\n      // save button\n      if (settings.includeSave) {\n         _ui.cols.push({\n            view: \"button\",\n            type: \"form\",\n            css: \"webix_primary\",\n            autowidth: true,\n            value: settings.saveLabel || this.label(\"Save\"),\n            click: function () {\n               self.onSave(this);\n            },\n            on: {\n               onAfterRender: function () {\n                  this.getInputNode().setAttribute(\n                     \"data-cy\",\n                     `button save ${form.id}`\n                  );\n               },\n            },\n         });\n      }\n\n      // spacer\n      if (alignment === \"center\" || alignment === \"left\") _ui.cols.push({});\n\n      return super.ui(_ui);\n   }\n\n   onCancel(cancelButton) {\n      const baseView = this.view;\n      const settings = baseView.settings ?? {};\n\n      // get form component\n      const form = baseView.parentFormComponent();\n\n      // get ABDatacollection\n      const dc = form.datacollection;\n\n      // clear cursor of DC if not set to follow another\n      if (!dc?.isCursorFollow) {\n         dc?.setCursor(null);\n      }\n      // dc?.setStaticCursor(); // unless it should be static\n\n      cancelButton?.getFormView?.().clear();\n\n      if (settings.afterCancel) form.changePage(settings.afterCancel);\n      // If the redirect page is not defined, then redirect to parent page\n      else {\n         const noPopupFilter = (p) => p.settings && p.settings.type != \"popup\";\n\n         const pageCurr = this.view.pageParent();\n         if (pageCurr) {\n            const pageParent = pageCurr.pageParent(noPopupFilter) ?? pageCurr;\n\n            if (pageParent) form.changePage(pageParent.id);\n         }\n      }\n   }\n\n   onClear(resetButton) {\n      // get form component\n      const form = this.view.parentFormComponent();\n\n      // get ABDatacollection\n      const dc = form.datacollection;\n\n      // clear cursor of DC\n      if (dc) {\n         dc.setCursor(null);\n      }\n\n      resetButton?.getFormView?.().clear();\n   }\n\n   onSave(saveButton) {\n      if (!saveButton) {\n         console.error(\"Require the button element\");\n         return;\n      }\n      // get form component\n      const form = this.view.parentFormComponent();\n      const formView = saveButton.getFormView();\n\n      // disable the save button\n      saveButton.disable?.();\n\n      // save data\n      form\n         .saveData(formView)\n         .then(() => {\n            saveButton.enable?.();\n\n            //Focus on first focusable component\n            form.focusOnFirst();\n         })\n         .catch((err) => {\n            console.error(err);\n            // Catch uncaught error reported in Sentry and add context\n            // APPBUILDER-WEB-1A3(https://appdev-designs.sentry.io/issues/4631880265/)\n            try {\n               saveButton.enable?.();\n            } catch (e) {\n               this.AB.notify.developer(e, {\n                  context:\n                     \"formButton.onSave > catch err > saveButton.enable()\",\n                  buttonID: this?.view?.id,\n                  formID: this?.view?.parent?.id,\n               });\n            }\n         });\n   }\n\n   onDelete(deleteButton) {\n      this.AB.Webix.confirm({\n         title: this.label(\"Delete data\"),\n         text: this.label(\"Do you want to delete this data?\"),\n         callback: async (confirm) => {\n            if (!confirm) return;\n\n            deleteButton.disable?.();\n\n            try {\n               // get form component\n               const form = this.view.parentFormComponent();\n               const $formView = deleteButton.getFormView();\n\n               // delete a record row\n               await form.deleteData($formView);\n            } catch (err) {\n               console.error(err);\n            } finally {\n               deleteButton.enable?.();\n            }\n         },\n      });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormCheckboxComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormCheckbox_${baseView.id}`, ids);\n   }\n\n   ui() {\n      return super.ui({\n         view: \"checkbox\",\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABViewFormItem = require(\"../ABViewFormItem\");\nconst ABViewFormConnect = require(\"../ABViewFormConnect\");\nconst ABViewFormCustom = require(\"../ABViewFormCustom\");\nconst ABViewFormTextbox = require(\"../ABViewFormTextbox\");\nconst ABViewFormJson = require(\"../ABViewFormJson\");\n\nasync function timeout(ms) {\n   return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nconst fieldValidations = [];\n\nmodule.exports = class ABViewFormComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewForm_${baseView.id}`,\n         Object.assign(\n            {\n               form: \"\",\n\n               layout: \"\",\n               filterComplex: \"\",\n            },\n            ids\n         )\n      );\n\n      this.timerId = null;\n      this._showed = false;\n   }\n\n   ui() {\n      const baseView = this.view;\n      const superComponent = baseView.superComponent();\n      const rows = superComponent.ui().rows ?? [];\n      const fieldValidationsHolder = this.uiValidationHolder();\n      const _ui = super.ui([\n         {\n            id: this.ids.form,\n            view: \"form\",\n            abid: baseView.id,\n            rows: rows.concat(fieldValidationsHolder),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiValidationHolder() {\n      const result = [\n         {\n            hidden: true,\n            rows: [],\n         },\n      ];\n\n      // NOTE: this._currentObject can be set in the KanBan Side Panel\n      const baseView = this.view;\n      const object = this.datacollection?.datasource ?? baseView._currentObject;\n\n      if (!object) return result;\n\n      const validationUI = [];\n      const existsFields = baseView.fieldComponents();\n\n      object\n         // Pull fields that have validation rules\n         .fields((f) => f?.settings?.validationRules)\n         .forEach((f) => {\n            const view = existsFields.find(\n               (com) => f.id === com.settings.fieldId\n            );\n            if (!view) return;\n\n            // parse the rules because they were stored as a string\n            // check if rules are still a string...if so lets parse them\n            if (typeof f.settings.validationRules === \"string\") {\n               f.settings.validationRules = JSON.parse(\n                  f.settings.validationRules\n               );\n            }\n\n            // there could be more than one so lets loop through and build the UI\n            f.settings.validationRules.forEach((rule, indx) => {\n               const Filter = this.AB.filterComplexNew(\n                  `${f.columnName}_${indx}`\n               );\n               // add the new ui to an array so we can add them all at the same time\n               if (typeof Filter.ui === \"function\") {\n                  validationUI.push(Filter.ui());\n               } else {\n                  // Legacy v1 method:\n                  validationUI.push(Filter.ui);\n               }\n\n               // store the filter's info so we can assign values and settings after the ui is rendered\n               fieldValidations.push({\n                  filter: Filter,\n                  view: Filter.ids.querybuilder,\n                  columnName: f.columnName,\n                  validationRules: rule.rules,\n                  invalidMessage: rule.invalidMessage,\n               });\n            });\n         });\n\n      result.rows = validationUI;\n\n      return result;\n   }\n\n   async init(AB, accessLevel, options = {}) {\n      await super.init(AB);\n\n      this.view.superComponent().init(AB, accessLevel, options);\n\n      this.initCallbacks(options);\n      this.initEvents();\n      this.initValidationRules();\n\n      const abWebix = this.AB.Webix;\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         abWebix.extend($form, abWebix.ProgressBar);\n      }\n\n      if (accessLevel < 2) $form.disable();\n   }\n\n   initCallbacks(options = {}) {\n      // ? We need to determine from these options whether to clear on load?\n      if (options?.clearOnLoad) {\n         // does this need to be a function?\n         this.view.settings.clearOnLoad = options.clearOnLoad();\n      }\n      // Q: Should we use emit the event instead ?\n      const baseView = this.view;\n\n      if (options.onBeforeSaveData)\n         baseView._callbacks.onBeforeSaveData = options.onBeforeSaveData;\n      else baseView._callbacks.onBeforeSaveData = () => true;\n   }\n\n   initEvents() {\n      // bind a data collection to form component\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      // listen DC events\n      [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n         this.eventAdd({\n            emitter: dc,\n            eventName: key,\n            listener: (rowData) => {\n               const baseView = this.view;\n               const linkViaOneConnection = baseView.fieldComponents(\n                  (comp) => comp instanceof ABViewFormConnect\n               );\n               // clear previous xxx->one selections and add new from\n               // cursor change\n               linkViaOneConnection.forEach((f) => {\n                  const field = f.field();\n                  if (\n                     field?.settings?.linkViaType == \"one\" &&\n                     field?.linkViaOneValues\n                  ) {\n                     delete field.linkViaOneValues;\n                     const relationVals =\n                        rowData?.[field.relationName()] ??\n                        rowData?.[field.columnName];\n                     if (relationVals) {\n                        if (Array.isArray(relationVals)) {\n                           const valArray = [];\n                           relationVals.forEach((v) => {\n                              valArray.push(\n                                 field.getRelationValue(v, { forUpdate: true })\n                              );\n                           });\n                           field.linkViaOneValues = valArray.join(\",\");\n                        } else {\n                           field.linkViaOneValues = field.getRelationValue(\n                              relationVals,\n                              { forUpdate: true }\n                           );\n                        }\n                     }\n                  }\n               });\n\n               this.displayData(rowData);\n            },\n         });\n      });\n\n      const ids = this.ids;\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"initializingData\",\n         listener: () => {\n            const $form = $$(ids.form);\n\n            if ($form) {\n               $form.disable();\n\n               $form.showProgress?.({ type: \"icon\" });\n            }\n         },\n      });\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"initializedData\",\n         listener: () => {\n            const $form = $$(ids.form);\n\n            if ($form) {\n               $form.enable();\n\n               $form.hideProgress?.();\n            }\n         },\n      });\n\n      // I think this case is currently handled by the DC.[changeCursor, cursorStale]\n      // events:\n      // this.eventAdd({\n      //    emitter: dc,\n      //    eventName: \"ab.datacollection.update\",\n      //    listener: (msg, data) => {\n      //       if (!data?.objectId) return;\n\n      //       const object = dc.datasource;\n\n      //       if (!object) return;\n\n      //       if (\n      //          object.id === data.objectId ||\n      //          object.fields((f) => f.settings.linkObject === data.objectId)\n      //             .length > 0\n      //       ) {\n      //          const currData = dc.getCursor();\n\n      //          if (currData) this.displayData(currData);\n      //       }\n      //    },\n      // });\n\n      // bind the cursor event of the parent DC\n      const linkDv = dc.datacollectionLink;\n\n      if (linkDv)\n         // update the value of link field when data of the parent dc is changed\n         [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n            this.eventAdd({\n               emitter: linkDv,\n               eventName: key,\n               listener: (rowData) => {\n                  this.displayParentData(rowData);\n               },\n            });\n         });\n   }\n\n   initValidationRules() {\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      if (!fieldValidations.length) return;\n\n      // we need to store the rules for use later so lets build a container array\n      const complexValidations = [];\n\n      fieldValidations.forEach((f) => {\n         // init each ui to have the properties (app and fields) of the object we are editing\n         f.filter.applicationLoad(dc.datasource.application);\n         f.filter.fieldsLoad(dc.datasource.fields());\n         // now we can set the value because the fields are properly initialized\n         f.filter.setValue(f.validationRules);\n\n         // if there are validation rules present we need to store them in a lookup hash\n         // so multiple rules can be stored on a single field\n         if (!Array.isArray(complexValidations[f.columnName]))\n            complexValidations[f.columnName] = [];\n\n         // now we can push the rules into the hash\n         complexValidations[f.columnName].push({\n            filters: $$(f.view).getFilterHelper(),\n            // values: $$(ids.form).getValues(),\n            invalidMessage: f.invalidMessage,\n         });\n      });\n\n      const ids = this.ids;\n\n      // use the lookup to build the validation rules\n      Object.keys(complexValidations).forEach((key) => {\n         // get our field that has validation rules\n         const formField = $$(ids.form).queryView({\n            name: key,\n         });\n\n         // store the rules in a data param to be used later\n         formField.$view.complexValidations = complexValidations[key];\n         // define validation rules\n         formField.define(\"validate\", function (nval, oval, field) {\n            // get field now that we are validating\n            const fieldValidating = $$(ids.form).queryView({\n               name: field,\n            });\n\n            // default valid is true\n            let isValid = true;\n\n            // check each rule that was stored previously on the element\n            fieldValidating.$view.complexValidations.forEach((filter) => {\n               const object = dc.datasource;\n               const data = this.getValues();\n\n               // convert rowData from { colName : data } to { id : data }\n               const newData = {};\n\n               (object.fields() || []).forEach((field) => {\n                  newData[field.id] = data[field.columnName];\n               });\n\n               // for the case of \"this_object\" conditions:\n               if (data.uuid) newData[\"this_object\"] = data.uuid;\n\n               // use helper funtion to check if valid\n               const ruleValid = filter.filters(newData);\n\n               // if invalid we need to tell the field\n               if (!ruleValid) {\n                  isValid = false;\n                  // we also need to define an error message\n                  fieldValidating.define(\n                     \"invalidMessage\",\n                     filter.invalidMessage\n                  );\n               }\n            });\n\n            return isValid;\n         });\n\n         formField.refresh();\n      });\n   }\n\n   async onShow(data) {\n      this.saveButton?.disable();\n\n      this._showed = true;\n\n      const baseView = this.view;\n\n      // call .onShow in the base component\n      const superComponent = baseView.superComponent();\n      await superComponent.onShow();\n\n      const $form = $$(this.ids.form);\n      const dc = this.datacollection;\n\n      if (dc) {\n         // clear current cursor on load\n         // if (this.settings.clearOnLoad || _logic.callbacks.clearOnLoad() ) {\n         const settings = this.settings;\n\n         if (settings.clearOnLoad) {\n            dc.setCursor(null);\n         }\n\n         // pull data of current cursor\n         // await dc.waitReady();\n         const rowData = dc.getCursor();\n\n         if ($form) dc.bind($form);\n\n         // do this for the initial form display so we can see defaults\n         await this.displayData(rowData);\n      }\n      // show blank data in the form\n      else await this.displayData(data ?? {});\n\n      //Focus on first focusable component\n      this.focusOnFirst();\n\n      if ($form) $form.adjust();\n\n      // Load data of DCs that are use in record rules here\n      // no need to wait until they are done. (Let the save button enable)\n      // It will be re-check again when saving.\n      baseView.loadDcDataOfRecordRules();\n\n      this.saveButton?.enable();\n   }\n\n   async displayData(rowData) {\n      // If setTimeout is already scheduled, no need to do anything\n      if (this.timerId) return;\n      else this.timerId = await timeout(80);\n\n      const baseView = this.view;\n      const customFields = baseView.fieldComponents(\n         (comp) =>\n            comp instanceof ABViewFormCustom ||\n            // rich text\n            (comp instanceof ABViewFormTextbox &&\n               comp.settings.type === \"rich\") ||\n            (comp instanceof ABViewFormJson && comp.settings.type === \"filter\")\n      );\n\n      const normalFields = baseView.fieldComponents(\n         (comp) =>\n            comp instanceof ABViewFormItem &&\n            !(comp instanceof ABViewFormCustom)\n      );\n\n      // Set default values\n      if (!rowData) {\n         customFields.forEach((f) => {\n            const field = f.field();\n            if (!field) return;\n\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            // var colName = field.columnName;\n            if (this._showed) comp?.onShow?.();\n\n            // set value to each components\n            const defaultRowData = {};\n\n            field.defaultValue(defaultRowData);\n            field.setValue($$(comp.ids.formItem), defaultRowData);\n\n            comp?.refresh?.(defaultRowData);\n         });\n\n         normalFields.forEach((f) => {\n            if (f.key === \"button\") return;\n\n            const field = f.field();\n            if (!field) return;\n\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            const colName = field.columnName;\n\n            // set value to each components\n            const values = {};\n\n            field.defaultValue(values);\n            $$(comp.ids.formItem)?.setValue(values[colName] ?? \"\");\n         });\n\n         // select parent data to default value\n         const dc = this.datacollection;\n         const linkDv = dc.datacollectionLink;\n\n         if (linkDv) {\n            const parentData = linkDv.getCursor();\n\n            this.displayParentData(parentData);\n         }\n      }\n\n      // Populate value to custom fields\n      else {\n         customFields.forEach((f) => {\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            if (this._showed) comp?.onShow?.();\n\n            // set value to each components\n            f?.field()?.setValue($$(comp.ids.formItem), rowData);\n\n            comp?.refresh?.(rowData);\n         });\n\n         normalFields.forEach((f) => {\n            if (f.key === \"button\") return;\n\n            const field = f.field();\n            if (!field) return;\n\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n            //\n            if (f.key === \"datepicker\") {\n               // Not sure why, but the local format isn't applied correctly\n               // without a timeout here\n               setTimeout(() => {\n                  field.setValue($$(comp.ids.formItem), rowData);\n               }, 200);\n               return;\n            }\n\n            field.setValue($$(comp.ids.formItem), rowData);\n         });\n      }\n\n      this.timerId = null;\n   }\n\n   displayParentData(rowData) {\n      const dc = this.datacollection;\n\n      // If the cursor is selected, then it will not update value of the parent field\n      const currCursor = dc.getCursor();\n      if (currCursor) return;\n\n      const relationField = dc.fieldLink;\n      if (!relationField) return;\n\n      const baseView = this.view;\n      // Pull a component of relation field\n      const relationFieldCom = baseView.fieldComponents((comp) => {\n         if (!(comp instanceof ABViewFormItem)) return false;\n\n         return comp.field()?.id === relationField.id;\n      })[0];\n      if (!relationFieldCom) return;\n\n      const relationFieldView = baseView.viewComponents[relationFieldCom.id];\n      if (!relationFieldView) return;\n\n      const $relationFieldView = $$(relationFieldView.ids.formItem),\n         relationName = relationField.relationName();\n\n      // pull data of parent's dc\n      const formData = {};\n\n      formData[relationName] = rowData;\n\n      // set data of parent to default value\n      relationField.setValue($relationFieldView, formData);\n   }\n\n   detatch() {\n      // TODO: remove any handlers we have attached.\n   }\n\n   focusOnFirst() {\n      const baseView = this.view;\n\n      let topPosition = 0;\n      let topPositionId = \"\";\n\n      baseView.views().forEach((item) => {\n         if (item.key === \"textbox\" || item.key === \"numberbox\")\n            if (item.position.y === topPosition) {\n               topPosition = item.position.y;\n               topPositionId = item.id;\n            }\n      });\n\n      const childComponent = baseView.viewComponents[topPositionId];\n\n      if (childComponent && $$(childComponent.ids.formItem))\n         $$(childComponent.ids.formItem).focus();\n   }\n\n   get saveButton() {\n      return $$(this.ids.form)?.queryView({\n         view: \"button\",\n         type: \"form\",\n      });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormConnectComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormConnect_${baseView.id}`,\n         Object.assign(\n            {\n               popup: \"\",\n               editpopup: \"\",\n            },\n            ids\n         )\n      );\n\n      this.addPageComponent = null;\n      this.editPageComponent = null;\n   }\n\n   get field() {\n      return this.view.field();\n   }\n\n   get multiselect() {\n      return this.field?.settings.linkType == \"many\";\n   }\n\n   ui() {\n      const field = this.field;\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const settings = this.settings;\n\n      if (!field) {\n         console.error(`This field could not found : ${settings.fieldId}`);\n\n         return super.ui({\n            view: \"label\",\n            label: \"\",\n         });\n      }\n\n      const multiselect = this.multiselect; // field.settings.linkType == \"many\";\n      const formSettings = form?.settings || {};\n      const ids = this.ids;\n\n      let _ui = {\n         id: ids.formItem,\n         view: multiselect ? \"multicombo\" : \"combo\",\n         name: field.columnName,\n         required:\n            field?.settings?.required || parseInt(settings?.required) || false,\n         // label: field.label,\n         // labelWidth: settings.labelWidth,\n         dataFieldId: field.id,\n         on: {\n            onItemClick: (id, e) => {\n               if (\n                  e.target.classList.contains(\"editConnectedPage\") &&\n                  e.target.dataset.itemId\n               ) {\n                  const rowId = e.target.dataset.itemId;\n                  if (!rowId) return;\n                  this.goToEditPage(rowId);\n               }\n            },\n            onChange: (data) => {\n               this._onChange(data);\n            },\n         },\n      };\n\n      if (formSettings.showLabel) {\n         _ui.label = field.label;\n         _ui.labelWidth = formSettings.labelWidth;\n         _ui.labelPosition = formSettings.labelPosition;\n      }\n\n      this.initAddEditTool();\n\n      _ui.suggest = {\n         button: true,\n         selectAll: multiselect ? true : false,\n         body: {\n            data: [],\n            template: `${\n               baseView?.settings?.editForm\n                  ? '<i data-item-id=\"#id#\" class=\"fa fa-cog editConnectedPage\"></i>'\n                  : \"\"\n            }#value#`,\n         },\n         on: {\n            onShow: () => {\n               field.populateOptionsDataCy($$(ids.formItem), field, form);\n            },\n         },\n         // Support partial matches\n         filter: ({ value }, search) =>\n            value.toLowerCase().includes(search.toLowerCase()),\n      };\n\n      _ui.onClick = {\n         customField: (id, e, trg) => {\n            if (settings.disable === 1) return;\n\n            const rowData = {};\n            const $formItem = $$(ids.formItem);\n\n            if ($formItem) {\n               const node = $formItem.$view;\n\n               field.customEdit(rowData, /* App,*/ node);\n            }\n         },\n      };\n\n      let apcUI = this.addPageComponent?.ui;\n      if (apcUI) {\n         // reset some component vals to make room for button\n         _ui.label = \"\";\n         _ui.labelWidth = 0;\n\n         // add click event to add new button\n         apcUI.on = {\n            onItemClick: (/*id, evt*/) => {\n               // let $form = $$(id).getFormView();\n               this.addPageComponent?.onClick(form.datacollection);\n\n               return false;\n            },\n         };\n\n         if (_ui.labelPosition == \"top\") {\n            _ui.labelPosition = \"left\";\n            _ui = {\n               inputId: ids.formItem,\n               rows: [\n                  {\n                     view: \"label\",\n                     label: field.label,\n                     // height: 22,\n                     align: \"left\",\n                  },\n                  {\n                     cols: [apcUI, _ui],\n                  },\n               ],\n            };\n         } else {\n            _ui = {\n               inputId: ids.formItem,\n               rows: [\n                  {\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: field.label,\n                           width: formSettings.labelWidth,\n                           align: \"left\",\n                        },\n                        apcUI,\n                        _ui,\n                     ],\n                  },\n               ],\n            };\n         }\n\n         _ui = super.ui(_ui);\n      } else {\n         _ui = {\n            inputId: ids.formItem,\n            rows: [_ui],\n         };\n\n         _ui = super.ui(_ui);\n\n         delete _ui.rows[0].id;\n      }\n\n      return _ui;\n   }\n\n   async _onChange(data) {\n      const ids = this.ids;\n      const field = this.field;\n      const baseView = this.view;\n\n      if (this.multiselect) {\n         if (typeof data == \"string\") {\n            data = data.split(\",\");\n         }\n      }\n\n      let selectedValues;\n      if (Array.isArray(data)) {\n         selectedValues = [];\n         data.forEach((record) => {\n            selectedValues.push(record.id || record);\n            // let recordObj = record;\n            // if (typeof record != \"object\") {\n            //    // we need to convert either index or uuid to full data object\n            //    recordObj = field.getItemFromVal(record);\n            // }\n            // if (recordObj?.id) selectedValues.push(recordObj.id);\n         });\n      } else {\n         selectedValues = data;\n         if (typeof data != \"object\") {\n            // we need to convert either index or uuid to full data object\n            selectedValues = field.getItemFromVal(data);\n         }\n         // selectedValues = field.pullRecordRelationValues(selectedValues);\n         if (selectedValues?.id) {\n            selectedValues = selectedValues.id;\n         } else {\n            selectedValues = data;\n         }\n      }\n\n      // We can now set the new value but we need to block event listening\n      // so it doesn't trigger onChange again\n      const $formItem = $$(ids.formItem);\n\n      // Q: if we don't have a $formItem, is any of the rest valid?\n      if ($formItem) {\n         // for xxx->one connections we need to populate again before setting\n         // values because we need to use the selected values to add options\n         // to the UI\n         if (this?.field?.settings?.linkViaType == \"one\") {\n            this.busy();\n            await field.getAndPopulateOptions(\n               $formItem,\n               baseView.options,\n               field,\n               baseView.parentFormComponent()\n            );\n            this.ready();\n         }\n\n         $formItem.blockEvent();\n\n         // store the user's selected option in local storage.\n         field.saveSelect(selectedValues);\n\n         const prepedVals = selectedValues.join\n            ? selectedValues.join()\n            : selectedValues;\n\n         $formItem.setValue(prepedVals);\n         $formItem.unblockEvent();\n      }\n   }\n\n   async init(AB, options) {\n      await super.init(AB);\n\n      const $formItem = $$(this.ids.formItem);\n      if ($formItem) webix.extend($formItem, webix.ProgressBar);\n\n      this.initAddEditTool();\n   }\n\n   initAddEditTool() {\n      const baseView = this.view;\n\n      // Initial add/edit page tools\n      const addFormID = baseView?.settings?.formView;\n      if (addFormID && baseView && !this.addPageComponent) {\n         this.addPageComponent = baseView.addPageTool.component(\n            this.AB,\n            `${baseView.id}_${addFormID}`\n         );\n         this.addPageComponent.applicationLoad(baseView.application);\n         this.addPageComponent.init({\n            onSaveData: this.callbackSaveData.bind(this),\n            onCancelClick: this.callbackCancel.bind(this),\n            clearOnLoad: this.callbackClearOnLoad.bind(this),\n         });\n      }\n\n      const editFormID = baseView?.settings?.editForm;\n      if (editFormID && baseView && !this.editPageComponent) {\n         this.editPageComponent = baseView.editPageTool.component(\n            this.AB,\n            `${baseView.id}_${editFormID}`\n         );\n         this.editPageComponent.applicationLoad(baseView.application);\n         this.editPageComponent.init({\n            onSaveData: this.callbackSaveData.bind(this),\n            onCancelClick: this.callbackCancel.bind(this),\n            clearOnLoad: this.callbackClearOnLoad.bind(this),\n         });\n      }\n   }\n\n   async callbackSaveData(saveData) {\n      if (saveData == null) return;\n      else if (!Array.isArray(saveData)) saveData = [saveData];\n\n      const ids = this.ids;\n      const field = this.field;\n\n      // find the select component\n      const $formItem = $$(ids.formItem);\n      if (!$formItem) return;\n\n      // Refresh option list\n      this.busy();\n      field.clearStorage(this.view.settings.filterConditions);\n      const data = await field.getAndPopulateOptions(\n         $formItem,\n         this.view.options,\n         field,\n         this.view.parentFormComponent()\n      );\n      this.ready();\n\n      // field.once(\"option.data\", (data) => {\n      data.forEach((item) => {\n         item.value = item.text;\n      });\n\n      $formItem.getList().clearAll();\n      $formItem.getList().define(\"data\", data);\n\n      if (field.settings.linkType === \"many\") {\n         let selectedItems = $formItem.getValue();\n         saveData.forEach((sData) => {\n            if (selectedItems.indexOf(sData.id) === -1)\n               selectedItems = selectedItems\n                  ? `${selectedItems},${sData.id}`\n                  : sData.id;\n         });\n\n         $formItem.setValue(selectedItems);\n      } else {\n         $formItem.setValue(saveData[0].id);\n      }\n      // close the popup when we are finished\n      // $$(ids.popup)?.close();\n      // $$(ids.editpopup)?.close();\n      // });\n\n      // field.getOptions(this.settings.filterConditions, \"\");\n      // .then(function (data) {\n      //    // we need new option that will be returned from server (above)\n      //    // so we will not set this and then just reset it.\n      // });\n   }\n\n   callbackCancel() {\n      $$(this.ids?.popup)?.close?.();\n\n      return false;\n   }\n\n   callbackClearOnLoad() {\n      return true;\n   }\n\n   getValue(rowData) {\n      return this.field.getValue($$(this.ids.formItem), rowData);\n   }\n\n   formBusy($form) {\n      if (!$form) return;\n\n      $form.disable?.();\n      $form.showProgress?.({ type: \"icon\" });\n   }\n\n   formReady($form) {\n      if (!$form) return;\n\n      $form.enable?.();\n      $form.hideProgress?.();\n   }\n\n   goToEditPage(rowId) {\n      const settings = this.settings;\n\n      if (!settings.editForm) return;\n\n      const editForm = this.view.application.urlResolve(settings.editForm);\n\n      if (!editForm) return;\n\n      const $form = $$(this.ids.formItem).getFormView() || null;\n\n      // Open the form popup\n      this.editPageComponent.onClick().then(() => {\n         const dc = editForm.datacollection;\n\n         if (dc) {\n            dc.setCursor(rowId);\n\n            this.__editFormDcEvent =\n               this.__editFormDcEvent ||\n               dc.on(\"initializedData\", () => {\n                  dc.setCursor(rowId);\n               });\n         }\n      });\n   }\n\n   async onShow() {\n      const ids = this.ids;\n      const $formItem = $$(ids.formItem);\n\n      if (!$formItem) return;\n\n      const field = this.field;\n\n      if (!field) return;\n\n      const node = $formItem.$view;\n\n      if (!node) return;\n\n      const $node = $$(node);\n\n      if (!$node) return;\n\n      const settings = this.settings;\n      let filterConditions = {\n         glue: \"and\",\n         rules: [],\n      };\n\n      if (settings?.filterConditions?.rules?.length) {\n         filterConditions = this.AB.cloneDeep(\n            this.view.settings.filterConditions\n         );\n      }\n\n      // NOTE: compatible with version 1. This code should not be here too long.\n      if (\n         !filterConditions?.rules?.length &&\n         settings?.objectWorkspace?.filterConditions?.rules?.length\n      ) {\n         filterConditions = this.AB.cloneDeep(\n            settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Add the filter connected value\n      if ((settings?.filterConnectedValue ?? \"\").indexOf(\":\") > -1) {\n         const values = settings.filterConnectedValue.split(\":\"),\n            uiConfigName = values[0],\n            connectFieldId = values[1];\n\n         filterConditions.rules.push({\n            key: connectFieldId,\n            rule: \"filterByConnectValue\",\n            value: uiConfigName,\n         });\n      }\n\n      const getFilterByConnectValues = (conditions, depth = 0) => {\n         return [\n            ...conditions.rules\n               .filter((e) => e.rule === \"filterByConnectValue\")\n               .map((e) => {\n                  const filterByConnectValue = Object.assign({}, e);\n\n                  filterByConnectValue.depth = depth;\n\n                  return filterByConnectValue;\n               }),\n         ].concat(\n            ...conditions.rules\n               .filter((e) => e.glue)\n               .map((e) => getFilterByConnectValues(e, depth + 1))\n         );\n      };\n\n      const baseView = this.view;\n      const filterByConnectValues = getFilterByConnectValues(\n         filterConditions\n      ).map((e) => {\n         for (const key in baseView.parent.viewComponents) {\n            if (\n               !(\n                  baseView.parent.viewComponents[key] instanceof\n                  this.constructor\n               )\n            )\n               continue;\n\n            const $ui = $$(\n               baseView.parent.viewComponents[key]\n                  .ui()\n                  .rows.find((vc) => vc.inputId)?.inputId\n            );\n\n            if ($ui?.config?.name === e.value) {\n               // we need to use the element id stored in the settings to find out what the\n               // ui component id is so later we can use it to look up its current value\n               e.filterValue = $ui;\n\n               break;\n            }\n         }\n\n         const ab = this.AB;\n         const field = ab\n            .objectByID(settings.objectId)\n            .fieldByID(settings.fieldId);\n         const linkedObject = ab.objectByID(field.settings.linkObject);\n         const linkedField = linkedObject.fieldByID(e.key);\n\n         if (linkedField?.settings?.isCustomFK) {\n            // finally if this is a custom foreign key we need the stored columnName by\n            // default uuid is passed for all non CFK\n            e.filterColumn = ab\n               .objectByID(linkedField.settings.linkObject)\n               .fields(\n                  (filter) =>\n                     filter.id === linkedField.settings.indexField ||\n                     linkedField.settings.indexField2\n               )[0].columnName;\n         } else e.filterColumn = null;\n\n         return e;\n      });\n\n      baseView.options = {\n         formView: settings.formView,\n         filters: filterConditions,\n         // NOTE: settings.objectWorkspace.xxx is a depreciated setting.\n         // We will be phasing this out.\n         sort: settings.sortFields ?? settings.objectWorkspace?.sortFields,\n         editable: settings.disable === 1 ? false : true,\n         editPage:\n            !settings.editForm || settings.editForm === \"none\" ? false : true,\n         filterByConnectValues,\n      };\n\n      // if this field's options are filtered off another field's value we need\n      // to make sure the UX helps the user know what to do.\n      // fetch the options and set placeholder text for this view\n      if (baseView.options.editable) {\n         const parentFields = [];\n\n         filterByConnectValues.forEach((fv) => {\n            if (fv.filterValue && fv.key) {\n               const $filterValueConfig = $$(fv.filterValue.config.id);\n\n               let parentField = null;\n\n               if (!$filterValueConfig) {\n                  // this happens in the Interface Builder when only the single form UI is displayed\n                  parentField = {\n                     id: \"perentElement\",\n                     label: this.label(\"PARENT ELEMENT\"),\n                  };\n               } else {\n                  const value = field.getValue($filterValueConfig);\n\n                  if (!value) {\n                     // if there isn't a value on the parent select element set this one to readonly and change placeholder text\n                     parentField = {\n                        id: fv.filterValue.config.id,\n                        label: $filterValueConfig.config.label,\n                     };\n                  }\n\n                  $filterValueConfig.attachEvent(\n                     \"onChange\",\n                     async (e) => {\n                        const parentVal = $filterValueConfig.getValue();\n\n                        if (parentVal) {\n                           $node.define(\"disabled\", false);\n                           $node.define(\n                              \"placeholder\",\n                              this.label(\"Select items\")\n                           );\n                           this.busy();\n                           await field.getAndPopulateOptions(\n                              $node,\n                              baseView.options,\n                              field,\n                              baseView.parentFormComponent()\n                           );\n                           this.ready();\n                        } else {\n                           $node.define(\"disabled\", true);\n                           $node.define(\n                              \"placeholder\",\n                              this.label(\"Must select item from '{0}' first.\", [\n                                 $filterValueConfig.config.label,\n                              ])\n                           );\n                        }\n\n                        // TODO: Do we need to clear selected value?\n                        // $node.setValue(\"\");\n                        $node.refresh();\n                     },\n                     false\n                  );\n               }\n\n               if (\n                  parentField &&\n                  parentFields.findIndex((e) => e.id === parentField.id) < 0\n               )\n                  parentFields.push(parentField);\n            }\n         });\n\n         if (parentFields.length && !$node.getValue()) {\n            $node.define(\"disabled\", true);\n            $node.define(\n               \"placeholder\",\n               this.label(`Must select item from '{0}' first.`, [\n                  parentFields.map((e) => e.label).join(\", \"),\n               ])\n            );\n         } else {\n            $node.define(\"disabled\", false);\n            $node.define(\"placeholder\", this.label(\"Select items\"));\n         }\n      } else {\n         $node.define(\"placeholder\", \"\");\n         $node.define(\"disabled\", true);\n      }\n\n      $node.refresh();\n\n      // Add data-cy attributes\n      const dataCy = `${field.key} ${field.columnName} ${field.id} ${baseView.parent.id}`;\n      node.setAttribute(\"data-cy\", dataCy);\n\n      this.busy();\n      try {\n         await field.getAndPopulateOptions(\n            // $node,\n            $formItem,\n            baseView.options,\n            field,\n            baseView.parentFormComponent()\n         );\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context:\n               \"ABViewFormConnectComponent > onShow() error calling field.getAndPopulateOptions\",\n         });\n      }\n      this.ready();\n\n      // Need to refresh selected values when they are custom index\n      this._onChange($formItem.getValue());\n   }\n\n   busy() {\n      const $formItem = $$(this.ids.formItem);\n\n      $formItem?.disable();\n      $formItem?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      const $formItem = $$(this.ids.formItem);\n\n      $formItem?.enable();\n      $formItem?.hideProgress?.();\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\nconst ABFieldImage = require(\"../../dataFields/ABFieldImage\");\nconst FocusableTemplate = require(\"../../../../webix_custom_components/focusableTemplate\");\n\nconst DEFAULT_HEIGHT = 80;\n\nmodule.exports = class ABViewFormCustomComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormCustom_${baseView.id}`, ids);\n   }\n\n   get new_width() {\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const formSettings = form?.settings ?? {};\n      const settings = baseView.settings ?? {};\n\n      let newWidth = formSettings.labelWidth;\n\n      if (settings.formView) newWidth += 40;\n      else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         newWidth = 0;\n\n      return newWidth;\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const form = baseView.parentFormComponent();\n      const formSettings = form?.settings ?? {};\n      const settings = field?.settings ?? baseView.settings ?? {};\n\n      const requiredClass =\n         field?.settings?.required || this.settings.required\n            ? \"webix_required\"\n            : \"\";\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"box-sizing: border-box; display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap; color: #313131;\" class=\"webix_inp_top_label ${requiredClass}\">#label#</label>`;\n         else\n            templateLabel = `<label style=\"box-sizing: border-box; width: #width#px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 8px 0 0; text-overflow:ellipsis; overflow:hidden; white-space:nowrap; color: #313131;\" class=\"${requiredClass}\">#label#</label>`;\n      }\n\n      let height = 38;\n      let width = this.new_width;\n\n      if (typeof field == \"undefined\") {\n         console.warn(\n            `BaseView[${baseView.id}] returned an undefined field()`,\n            baseView.toObj()\n         );\n      }\n\n      if (field instanceof ABFieldImage) {\n         if (settings.useHeight) {\n            if (formSettings.labelPosition === \"top\") {\n               height = parseInt(settings.imageHeight) || DEFAULT_HEIGHT;\n               height += 38;\n            } else {\n               height = parseInt(settings.imageHeight) || DEFAULT_HEIGHT;\n            }\n         } else if (formSettings.labelPosition === \"top\") {\n            height = DEFAULT_HEIGHT + 38;\n         } else {\n            if (DEFAULT_HEIGHT > 38) {\n               height = DEFAULT_HEIGHT;\n            }\n         }\n         width =\n            settings.useWidth && settings.imageWidth ? settings.imageWidth : 0;\n      } else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         height = DEFAULT_HEIGHT;\n\n      let template = `<div class=\"customField ${formSettings.labelPosition}\">${\n         formSettings.labelPosition == \"top\" ? \"\" : templateLabel\n      }#template#</div>`\n         .replace(/#width#/g, formSettings.labelWidth)\n         .replace(/#label#/g, field?.label ?? \"\")\n         .replace(\n            /#template#/g,\n            field\n               ?.columnHeader({\n                  width: width,\n                  height: height,\n                  editable: true,\n               })\n               .template({}) ?? \"\"\n         );\n\n      if (settings.useWidth == 0) {\n         template = template.replace(\n            /\"ab-image-data-field\" style=\"float: left; width: 100%/g,\n            '\"ab-image-data-field\" style=\"float: left; width: calc(100% - ' +\n               formSettings.labelWidth +\n               \"px)\"\n         );\n      }\n\n      return super.ui({\n         view: \"forminput\",\n         labelWidth: 0,\n         paddingY: 0,\n         paddingX: 0,\n         css: \"ab-custom-field\",\n         // label:  field.label,\n         // labelPosition: settings.labelPosition, // webix.forminput does not have .labelPosition T T\n         // labelWidth: settings.labelWidth,\n         body: {\n            view: new FocusableTemplate(this.AB._App).key,\n            css: \"customFieldCls\",\n            borderless: true,\n            template: template,\n            height: height,\n            onClick: {\n               customField: (evt, e, trg) => {\n                  if (settings.disable === 1) return;\n\n                  let rowData = {};\n\n                  const formView =\n                     this?.parentFormComponent?.() ||\n                     this.view?.parentFormComponent?.();\n\n                  if (formView) {\n                     const dv = formView.datacollection;\n                     if (dv) rowData = dv.getCursor() || {};\n                  }\n\n                  // var node = $$(ids.formItem).$view;\n                  let node = $$(trg).getParentView().$view;\n                  field?.customEdit(\n                     rowData,\n                     this.AB_App,\n                     node,\n                     this.ids.formItem,\n                     evt\n                  );\n               },\n            },\n         },\n      });\n   }\n\n   onShow() {\n      const ids = this.ids;\n      const $formItem = $$(ids.formItem);\n\n      if (!$formItem) return;\n\n      const baseView = this.view;\n      const field = baseView.field(),\n         rowData = {},\n         node = $formItem.$view;\n\n      // Add data-cy attributes\n      const dataCy = `${baseView.key} ${field.key} ${field.columnName} ${baseView.id} ${baseView.parent.id}`;\n      node.setAttribute(\"data-cy\", dataCy);\n\n      const options = {\n         formId: ids.formItem,\n         editable: baseView.settings.disable === 1 ? false : true,\n      };\n\n      if (field instanceof ABFieldImage) {\n         options.height = field.settings.useHeight\n            ? parseInt(field.settings.imageHeight) || DEFAULT_HEIGHT\n            : DEFAULT_HEIGHT;\n         options.width = field.settings.useWidth\n            ? parseInt(field.settings.imageWidth) || 0\n            : 0;\n      }\n\n      field.customDisplay(rowData, this.AB._App, node, options);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      const $formItem = $$(this.ids.formItem);\n\n      return field.getValue($formItem, rowData);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormDatepickerComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormDatepicker_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const self = this;\n      const field = this.view.field();\n\n      const _ui = {\n         view: \"datepicker\",\n         suggest: {\n            body: {\n               view:\n                  this.AB.Account?._config?.languageCode == \"th\"\n                     ? \"thaicalendar\"\n                     : \"calendar\",\n               type: field.settings?.dateFormat === 1 ? \"time\" : \"\",\n               timepicker:\n                  field.key === \"datetime\" && field.settings?.timeFormat !== 1\n                     ? true\n                     : false,\n               editable: true,\n               on: {\n                  onAfterDateSelect: function (date) {\n                     this.getParentView().setMasterValue({\n                        value: date,\n                     });\n                  },\n                  onTodaySet: function (date) {\n                     this.getParentView().setMasterValue({\n                        value: date,\n                     });\n                  },\n                  onDateClear: function (date) {\n                     this.getParentView().setMasterValue({\n                        value: date,\n                     });\n                  },\n               },\n            },\n            on: {\n               onShow: function () {\n                  const text = this.getMasterValue();\n                  const field = self.view.field();\n                  if (!text || !field) return true;\n\n                  const vals = {};\n                  vals[field.columnName] = text;\n                  const date = self.getValue(vals);\n\n                  const $calendar = this.getChildViews()[0];\n                  $calendar.setValue(date);\n               },\n            },\n         },\n      };\n\n      if (!field) return _ui;\n\n      // Ignore date - Only time picker\n      if (field.settings?.dateFormat === 1) _ui.type = \"time\";\n\n      // Date & Time picker\n      if (field.key === \"datetime\" && field.settings?.timeFormat !== 1)\n         _ui.timepicker = true;\n\n      // allows entering characters in datepicker input, false by default\n      _ui.editable = true;\n\n      // default value\n      if (_ui.value && !(_ui.value instanceof Date))\n         _ui.value = new Date(_ui.value);\n\n      // if we have webix locale set, will use the date format form there.\n      if (!window.webixLocale) _ui.format = field.getFormat();\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      const text = rowData[field.columnName];\n      if (!field || !text) return null;\n\n      // Sentry Fix: caught an error where this.AB was not set, but this.view was...\n      // attempt to catch this situation and post more data:\n      if (!this.AB) {\n         if (this.view.AB) {\n            this.AB = this.view.AB;\n         } else {\n            let errNoAB = new Error(\n               \"ABViewFormDatePicerComponent:getValue(): AB was not set.\"\n            );\n            // sentry logs the console before the error, so dump the offending view here:\n            console.log(\"view:\", JSON.stringify(this.view.toObj()));\n            throw errNoAB;\n         }\n      }\n      // NOTE: if we are using the Thai language we force the format to be \"%d/%m/%Y\" in th-TH.js:13\n      //       so we have to use that format here\n      let dateVal = this.AB.Webix.Date.strToDate(field.getFormat())(text);\n      if (this.AB.Account?._config?.languageCode == \"th\") {\n         dateVal = this.AB.Webix.Date.strToDate(\"%j/%m/%Y\")(text);\n      }\n      const date = dateVal;\n\n      if (\n         this.AB.Account?._config?.languageCode == \"th\" &&\n         field.settings?.dateFormat !== 1\n      )\n         date.setFullYear(date.getFullYear() - 543);\n\n      return date;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewFormItemComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormItem_${baseView.id}`,\n         Object.assign({ formItem: \"\" }, ids)\n      );\n   }\n\n   ui(uiFormItemComponent = {}) {\n      // setup 'label' of the element\n      const baseView = this.view;\n      const form = baseView.parentFormComponent(),\n         field = baseView.field?.() || null,\n         label = \"\";\n      const settings = form?.settings || {};\n      const _uiFormItem = {\n         id: this.ids.formItem,\n         labelPosition: settings.labelPosition,\n         labelWidth: settings.labelWidth,\n         label,\n      };\n\n      if (field) {\n         _uiFormItem.name = field.columnName;\n\n         // default value\n         const data = {};\n\n         field.defaultValue(data);\n\n         if (data[field.columnName]) _uiFormItem.value = data[field.columnName];\n\n         if (settings.showLabel) _uiFormItem.label = field.label;\n\n         if (field.settings.required || baseView.settings?.required)\n            _uiFormItem.required = 1;\n\n         if (baseView.settings?.disable === 1) _uiFormItem.disabled = true;\n\n         // add data-cy to form element for better testing code\n         _uiFormItem.on = {\n            onAfterRender() {\n               if (this.getList) {\n                  const popup = this.getPopup();\n\n                  if (!popup) return;\n\n                  this.getList().data.each((option) => {\n                     if (!option) return;\n\n                     // our option.ids are based on builder input and can include the ' character\n                     const node = popup.$view.querySelector(\n                        `[webix_l_id='${(option?.id ?? \"\")\n                           .toString()\n                           .replaceAll(\"'\", \"\\\\'\")}']`\n                     );\n\n                     if (!node) return;\n\n                     node.setAttribute(\n                        \"data-cy\",\n                        `${field.key} options ${option.id} ${field.id} ${\n                           form?.id || \"nf\"\n                        }`\n                     );\n                  });\n               }\n\n               this.getInputNode?.().setAttribute?.(\n                  \"data-cy\",\n                  `${field.key} ${field.columnName} ${field.id} ${\n                     form?.id || \"nf\"\n                  }`\n               );\n            },\n         };\n\n         // this may be needed if we want to format data at this point\n         // if (field.format) data = field.format(data);\n\n         _uiFormItem.validate = (val, data, colName) => {\n            const validator = this.AB.Validation.validator();\n\n            field.isValidData(data, validator);\n\n            return validator.pass();\n         };\n      }\n\n      const _ui = super.ui([\n         Object.assign({}, _uiFormItem, uiFormItemComponent),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormJsonComponent extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormJson_${baseView.id}`, ids);\n      if (this.settings.type == \"filter\") {\n         this.rowFilter = this.AB.filterComplexNew(\n            `${baseView.id}_filterComplex`,\n            {\n               isSaveHidden: true,\n               height: 300,\n               borderless: false,\n               showObjectName: true,\n            }\n         );\n      }\n   }\n\n   getFilterField(instance) {\n      if (\n         instance?.settings?.filterField &&\n         instance?.view?.parent?.viewComponents\n      ) {\n         let filterField = \"\";\n         for (const [key, value] of Object.entries(\n            instance.view.parent.viewComponents\n         )) {\n            if (value.settings.fieldId == instance.settings.filterField) {\n               filterField = value;\n            }\n         }\n\n         if (filterField?.ids?.formItem) {\n            return filterField.ids.formItem;\n         } else {\n            return \"\";\n         }\n      } else {\n         return \"\";\n      }\n   }\n\n   get getSystemObjects() {\n      // get list of all objects in the app\n      let objects = this.AB.objects();\n      // reformat objects into simple array for Webix multicombo\n      // if you do not the data causes a maximum stack error\n      let objectsArray = [];\n      objects.forEach((obj) => {\n         objectsArray.push({ id: obj.id, label: obj.label });\n      });\n      // return the simple array\n      return objectsArray;\n   }\n\n   refreshFilter(values) {\n      if (values) {\n         let fieldDefs = [];\n         values.forEach((obj) => {\n            let object = this.AB.objectByID(obj);\n            let fields = object.fields();\n            if (fields.length) {\n               fields.forEach((f) => {\n                  fieldDefs.push(f);\n               });\n            }\n         });\n         this.rowFilter.fieldsLoad(fieldDefs);\n         if ($$(this.ids.formItem).config.value)\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n      } else {\n         this.rowFilter.fieldsLoad([]);\n         if ($$(this.ids.formItem).config.value)\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n      }\n   }\n\n   getValue() {\n      return this.rowFilter.getValue();\n   }\n\n   setValue(formVals) {\n      $$(this.ids.formItem).config.value = formVals;\n   }\n\n   ui() {\n      const _ui = {};\n\n      switch (\n         this.settings.type ||\n         this.view.settings.type ||\n         this.view.constructor.defaultValues().type\n      ) {\n         case \"string\":\n            _ui.view = \"textarea\";\n            _ui.disabled = true;\n            _ui.height = 200;\n            _ui.format = {\n               parse: function (parsed) {\n                  try {\n                     parsed = JSON.parse(parsed);\n                  } catch (err) {\n                     // already parsed\n                  }\n                  return parsed;\n               },\n               edit: function (stringify) {\n                  try {\n                     stringify = JSON.stringify(stringify);\n                  } catch (err) {\n                     // already a string\n                  }\n                  return stringify;\n               },\n            };\n            break;\n         case \"systemObject\":\n            _ui.view = \"multicombo\";\n            _ui.placeholder = this.label(\"Select one or more system objects\");\n            _ui.button = false;\n            _ui.stringResult = false;\n            _ui.suggest = {\n               selectAll: true,\n               body: {\n                  data: this.getSystemObjects,\n                  template: webix.template(\"#label#\"),\n               },\n            };\n            break;\n         case \"filter\":\n            _ui.view = \"forminput\";\n            _ui.css = \"ab-custom-field\";\n            _ui.body = this.rowFilter.ui;\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   init() {\n      // if (this.settings.type == \"filter\") {\n      //    this.rowFilter.init({ showObjectName: true });\n      // }\n   }\n\n   onShow() {\n      const _ui = this.ui();\n      if (this?.settings?.type == \"filter\") {\n         let filterField = this.getFilterField(this);\n         if (!$$(filterField)) return;\n         $$(filterField).detachEvent(\"onChange\");\n         $$(filterField).attachEvent(\"onChange\", (values) => {\n            this.refreshFilter(values);\n         });\n         this.rowFilter.init({ showObjectName: true });\n         this.rowFilter.on(\"changed\", (val) => {\n            this.setValue(val);\n         });\n         if ($$(this.ids.formItem).config.value) {\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n         } else {\n            this.rowFilter.setValue(\"\");\n         }\n      }\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\nconst NumberTextInput = require(\"../../../../webix_custom_components/numbertext\");\n\nmodule.exports = class ABViewFormNumberComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormNumber_${baseView.id}`, ids);\n\n      this._numberTextInputKey = null;\n   }\n\n   get numberTextInputKey() {\n      return (this._numberTextInputKey =\n         this._numberTextInputKey || new NumberTextInput(this.AB._App).key);\n   }\n\n   ui() {\n      return super.ui({\n         view: this.settings.isStepper ? \"counter\" : this.numberTextInputKey,\n         type: \"number\",\n         validate: (val) => !isNaN(val * 1),\n      });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormReadonlyComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormReadonly_${baseView.id}`,\n         Object.assign(\n            {\n               template: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      const _ui = {\n         view: \"forminput\",\n         labelWidth: 0,\n         paddingY: 0,\n         paddingX: 0,\n         readonly: true,\n         css: \"ab-readonly-field\",\n         // name: component.ui.name,\n         // label:  field.label,\n         // labelPosition: settings.labelPosition, // webix.forminput does not have .labelPosition T T\n         // labelWidth: settings.labelWidth,\n         body: {\n            id: this.ids.template,\n            view: \"label\",\n            borderless: true,\n            css: { \"background-color\": \"#fff\" },\n            label: \"\",\n         },\n      };\n\n      const settings = baseView.parentFormComponent().settings || {};\n\n      if (settings.showLabel == true && settings.labelPosition == \"top\") {\n         _ui.body.height = 80;\n      } else if (field.settings.useHeight) {\n         _ui.body.height = parseInt(field.settings.imageHeight) || 38;\n      } else _ui.body.height = 38;\n\n      return super.ui(_ui);\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $formItem = $$(this.ids.formItem);\n      if (!$formItem) return;\n\n      const $form = $formItem.getFormView();\n      const rowData = $form?.getValues() ?? {};\n\n      this.refresh(rowData);\n      $form?.attachEvent(\"onChange\", (newv, oldv) => {\n         const rowData = $form?.getValues() ?? {};\n\n         this.refresh(rowData);\n      });\n   }\n\n   onShow() {\n      const $formItem = $$(this.ids.formItem);\n      if (!$formItem) return;\n\n      const $form = $formItem.getFormView();\n      const rowData = $form?.getValues() ?? {};\n\n      this.refresh(rowData);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      if (!field) return null;\n\n      return rowData[field.columnName];\n   }\n\n   refresh(rowData) {\n      const baseView = this.view;\n      const form = baseView.parentFormComponent(),\n         field = baseView.field();\n\n      const formSettings = form.settings || {};\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"webix_inp_top_label\">${field.label}</label>`;\n         else\n            templateLabel = `<label style=\"width: ${formSettings.labelWidth}px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\">${field.label}</label>`;\n      }\n\n      let newWidth = formSettings.labelWidth;\n\n      if (this.settings.formView) newWidth += 40;\n      else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         newWidth = 0;\n\n      const template =\n         `<div class=\"readonlyField\">${templateLabel}#template#</div>`.replace(\n            /#template#/g,\n            field\n               .columnHeader({\n                  width: newWidth,\n                  editable: true,\n               })\n               .template(rowData)\n         );\n\n      // Re-build template element\n      $$(this.ids.template)?.setHTML(template);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormSelectMultipleComponentComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormSelectMultiple_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field(),\n         settings = this.settings;\n      const options = [];\n\n      if (field?.key === \"user\") options.push(...field.getUsers());\n      else if (field)\n         options.push(...(field.settings.options ?? settings.options ?? []));\n\n      const ids = this.ids;\n      const _ui = {\n         id: ids.formItem,\n         view: settings.type || baseView.constructor.defaultValues().type,\n         options: options.map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n               hex: opt.hex,\n            };\n         }),\n      };\n\n      switch (_ui.view) {\n         case \"multicombo\":\n            _ui.tagMode = false;\n            _ui.css = \"hideWebixMulticomboTag\";\n            _ui.tagTemplate = (values) => {\n               const selectedOptions = [];\n               const $formItem = $$(ids.formItem) ?? $$(_ui.id);\n\n               values.forEach((val) => {\n                  selectedOptions.push($formItem.getList().getItem(val));\n               });\n\n               let vals = selectedOptions;\n\n               if (field.getSelectedOptions)\n                  vals = field.getSelectedOptions(field, selectedOptions);\n\n               const items = [];\n\n               vals.forEach((val) => {\n                  let hasCustomColor = \"\";\n                  let optionHex = \"\";\n\n                  if (field.settings.hasColors && val.hex) {\n                     hasCustomColor = \"hascustomcolor\";\n                     optionHex = `background: ${val.hex};`;\n                  }\n\n                  const text = val.text ? val.text : val.value;\n\n                  items.push(\n                     `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${val.id}\"><span>${text}</span><span class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span></span>`\n                  );\n               });\n\n               return items.join(\"\");\n            };\n\n            break;\n\n         case \"checkbox\":\n            // radio element could not be empty options\n            _ui.options.push({\n               id: \"temp\",\n               value: this.label(\"Option\"),\n            });\n\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field(),\n         $formItem = $$(this.ids.formItem);\n\n      return field.getValue($formItem, rowData);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormSelectSingleComponentComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormSelectSingle_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field(),\n         settings = baseView.settings;\n      const options = [];\n\n      if (field?.key === \"user\") options.push(...field.getUsers());\n      else if (field)\n         options.push(...(field.settings.options ?? settings.options ?? []));\n      else options.push(...(settings.options ?? []));\n\n      const _ui = {\n         view: settings.type || baseView.constructor.defaultValues().type,\n      };\n\n      if (field?.settings.hasColors) {\n         _ui.css = \"combowithcolors\";\n         _ui.options = {\n            view: \"suggest\",\n            body: {\n               view: \"list\",\n               data: options.map((opt) => {\n                  return {\n                     id: opt.id,\n                     value: opt.text || opt.value,\n                     hex: field.settings.hasColors ? opt.hex : \"\",\n                  };\n               }),\n               template: function (value) {\n                  const items = [];\n\n                  let hasCustomColor = \"\";\n                  let optionHex = \"\";\n\n                  if (value.hex) {\n                     hasCustomColor = \"hascustomcolor\";\n                     optionHex = `background: ${value.hex};`;\n                  }\n\n                  items.push(\n                     `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${value.id}\"><span>${value.value}</span></span>`\n                  );\n\n                  return items.join(\"\");\n               },\n            },\n         };\n      } else\n         _ui.options = options.map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text || opt.value,\n            };\n         });\n\n      // radio element could not be empty options\n      if (_ui.view === \"radio\" && _ui.options.length < 1)\n         _ui.options.push({\n            id: \"temp\",\n            value: this.label(\"Option\"),\n         });\n\n      return super.ui(_ui);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormTextboxComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormTextbox_${baseView.id}`, ids);\n      this.type =\n         this.settings.type ||\n         this.view.settings.type ||\n         this.view.constructor.defaultValues().type;\n   }\n\n   ui() {\n      const _ui = {};\n\n      switch (this.type) {\n         case \"single\":\n            _ui.view = \"text\";\n            break;\n         case \"multiple\":\n            _ui.view = \"textarea\";\n            _ui.height = 200;\n            break;\n         case \"rich\":\n            _ui.view = \"forminput\";\n            _ui.height = 200;\n            _ui.css = \"ab-rich-text\";\n            _ui.body = {\n               view: \"tinymce-editor\",\n               value: \"\",\n               cdn: \"/js/webix/extras/tinymce\",\n               config: {\n                  plugins: \"link\",\n                  menubar: \"format edit\",\n                  toolbar:\n                     \"undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | fontsizeselect | link\",\n               },\n            };\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   async onShow() {\n      if (this.type !== \"rich\") return;\n      await this.initTinyMCE();\n      const _ui = this.ui();\n      const _uiFormItem = _ui.rows[0];\n      let $formItem = $$(this.ids.formItem);\n\n      // WORKAROUND : to fix breaks TinyMCE when switch pages/tabs\n      // https://forum.webix.com/discussion/6772/switching-tabs-breaks-tinymce\n      if ($formItem) {\n         // recreate rich editor\n         $formItem = this.AB.Webix.ui(_uiFormItem, $formItem);\n\n         // Add dataCy to TinyMCE text editor\n         const baseView = this.view;\n\n         $formItem\n            .getChildViews()[0]\n            .getEditor(true)\n            .then((editor) => {\n               const dataCy = `${baseView.key} rich ${_uiFormItem.name} ${\n                  baseView.id ?? \"\"\n               } ${baseView.parent?.id ?? \"\"}`;\n\n               editor.contentAreaContainer.setAttribute(\"data-cy\", dataCy);\n            });\n      }\n   }\n\n   /**\n    * Ensure TinyMCE has been loaded and initialized.\n    */\n   async initTinyMCE() {\n      await this.AB.custom[\"tinymce-editor\"].init();\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormTreeComponent extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormTree_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      const _ui = {};\n\n      // this field may be deleted\n      if (!field) return super.ui(_ui);\n\n      const formSettings = baseView.parentFormComponent().settings || {};\n\n      const requiredClass =\n         field.settings.required === 1 ? \"webix_required\" : \"\";\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"webix_inp_top_label ${requiredClass}\">#label#</label>`;\n         else\n            templateLabel = `<label style=\"width: #width#px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"${requiredClass}\">#label#</label>`;\n      }\n\n      let newWidth = formSettings.labelWidth;\n\n      if (this.settings.formView) newWidth += 40;\n\n      const template = `${templateLabel}#template#`\n         .replace(/#width#/g, formSettings.labelWidth)\n         .replace(/#label#/g, field.label)\n         .replace(\n            /#template#/g,\n            field.columnHeader({\n               width: newWidth,\n            }).template\n         );\n\n      _ui.view = \"template\";\n      _ui.css = \"webix_el_box\";\n      _ui.height =\n         field.settings.useHeight === 1\n            ? parseInt(field.settings.imageHeight)\n            : 38;\n      _ui.borderless = true;\n\n      _ui.template = `<div class=\"customField\">${template}</div>`;\n\n      _ui.onClick = {\n         customField: (id, e, trg) => {\n            const rowData = {},\n               node = $$(this.ids.formItem).$view;\n\n            rowData[field.columnName] = this.getValue();\n            field.customEdit(rowData, this.AB._App, node, this);\n         },\n      };\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      let vals = $$(this.ids.formItem).getValues();\n\n      // Pass empty string if the returned values is empty array\n      if (Array.isArray(vals) && vals.length === 0) vals = \"\";\n\n      return vals;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewImageComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewImage_${baseView.id}`,\n         Object.assign({ image: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _ui = super.ui([\n         {\n            cols: [\n               {\n                  id: this.ids.image,\n                  view: \"template\",\n                  template: \"\",\n                  height: settings.height,\n                  width: settings.width,\n               },\n               {},\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $image = $$(this.ids.image);\n      if (!$image) return;\n\n      const settings = this.settings;\n\n      if (settings.filename)\n         $image.define(\n            \"template\",\n            `<img src=\"/file/${settings.filename}\" height=\"${settings.height}\" width=\"${settings.width}\">`\n         );\n      else $image.define(\"template\", \"\");\n\n      $image.refresh();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABFormSidePanel = require(\"../ABViewKanbanFormSidePanel\");\n\nmodule.exports = class ABViewKanbanComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewKanBan_${baseView.id}`,\n         Object.assign(\n            {\n               kanbanView: \"\",\n\n               kanban: \"\",\n               resizer: \"\",\n               formSidePanel: \"\",\n            },\n            ids\n         )\n      );\n\n      this.FormSide = new ABFormSidePanel(\n         this,\n         this.ids.formSidePanel,\n         this.settings.editFields\n      );\n\n      this.CurrentVerticalField = null;\n      this.CurrentHorizontalField = null;\n      this.CurrentOwnerField = null;\n\n      this.TextTemplate = baseView.TextTemplate;\n\n      this._updatingOwnerRowId = null;\n      this._ABFieldConnect = null;\n      this._ABFieldUser = null;\n      this._ABFieldList = null;\n   }\n\n   get ABFieldConnect() {\n      return (this._ABFieldConnect =\n         this._ABFieldConnect ||\n         this.AB.Class.ABFieldManager.fieldByKey(\"connectObject\"));\n   }\n\n   get ABFieldUser() {\n      return (this._ABFieldUser =\n         this._ABFieldUser || this.AB.Class.ABFieldManager.fieldByKey(\"user\"));\n   }\n\n   get ABFieldList() {\n      return (this._ABFieldList =\n         this._ABFieldList || this.AB.Class.ABFieldManager.fieldByKey(\"list\"));\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      this.linkPage = this.view.linkPageHelper.component();\n\n      const _ui = super.ui([\n         {\n            id: ids.kanbanView,\n            cols: [\n               {\n                  id: ids.kanban,\n                  view: \"kanban\",\n                  cols: [],\n                  userList: {\n                     view: \"menu\",\n                     // yCount: 8,\n                     // scroll: false,\n                     template: '<i class=\"fa fa-user\"></i> #value#',\n                     width: 150,\n                     on: {\n                        onSelectChange: function () {\n                           // get this row id from onAvatarClick event\n                           if (!self._updatingOwnerRowId) return;\n\n                           const userId = this.getSelectedId(false);\n                           if (!userId) return;\n\n                           self.updateOwner(self._updatingOwnerRowId, userId);\n                        },\n                     },\n                  },\n                  editor: false, // we use side bar\n                  users: [],\n                  tags: [],\n                  data: [],\n                  on: {\n                     onListAfterSelect: (itemId, list) => {\n                        this.CurrentDatacollection?.setCursor(itemId);\n                        this.emit(\"select\", itemId);\n\n                        // link pages events\n                        const editPage = this.settings.editPage;\n                        if (editPage)\n                           this.linkPage.changePage(editPage, itemId);\n\n                        const detailsPage = this.settings.detailsPage;\n                        if (detailsPage)\n                           this.linkPage.changePage(detailsPage, itemId);\n                     },\n                     onAfterStatusChange: (rowId, status /*, list */) => {\n                        this.updateStatus(rowId, status);\n                     },\n                     onAvatarClick: (rowId /*, ev, node, list */) => {\n                        // keep this row id for update owner data in .userList\n                        this._updatingOwnerRowId = rowId;\n                     },\n                  },\n               },\n               {\n                  id: ids.resizer,\n                  view: \"resizer\",\n                  css: \"bg_gray\",\n                  width: 11,\n                  hidden: true,\n               },\n               this.FormSide.ui(),\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const abWebix = this.AB.Webix;\n\n      if (this.$kb) abWebix.extend(this.$kb, abWebix.ProgressBar);\n\n      this.FormSide.init(AB);\n      this.FormSide.on(\"add\", (newVals) => {\n         this.saveData(newVals);\n      });\n      this.FormSide.on(\"update\", (updateVals) => {\n         this.saveData(updateVals);\n      });\n\n      let dc = this.view.datacollection;\n      if (dc) this.datacollectionLoad(dc);\n\n      this.linkPage.init({\n         view: this.view,\n         datacollection: dc,\n      });\n\n      this.show();\n   }\n\n   get $kb() {\n      return (this._kb = this._kb || $$(this.ids.kanban));\n   }\n\n   kanbanListTemplate() {\n      return {\n         icons: [\n            // { icon: \"mdi mdi-comment\", show: function (obj) { return !!obj.comments }, template: \"#comments.length#\" },\n            {\n               icon: \"fa fa-trash-o\",\n               click: (rowId /*, e */) => {\n                  this.removeCard(rowId);\n               },\n            },\n         ],\n         // avatar template\n         templateAvatar: (obj) => {\n            if (\n               this.CurrentOwnerField &&\n               obj[this.CurrentOwnerField.columnName]\n            )\n               return this.CurrentOwnerField.format(obj);\n            else return \"<span class='webix_icon fa fa-user'></span>\";\n         },\n         // template for item body\n         // show item image and text\n         templateBody: (data) => {\n            // if (!this.settings.template)\n            if (!this.TextTemplate.text)\n               return this.CurrentObject?.displayData(data);\n\n            // return our default text template\n            return this.TextTemplate.displayText(data);\n         },\n      };\n   }\n\n   /**\n    * @function hide()\n    *\n    * hide this component.\n    */\n   hide() {\n      $$(this.ids.kanbanView)?.hide();\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    */\n   async show() {\n      const ids = this.ids;\n\n      $$(ids.kanbanView)?.show();\n\n      this.FormSide.hide();\n\n      $$(ids.resizer)?.hide();\n\n      var CurrentObject = this.CurrentObject;\n      if (!CurrentObject) {\n         CurrentObject = this.datacollection?.datasource;\n      }\n      if (!CurrentObject) return;\n\n      // Get vertical grouping field and populate to kanban list\n      // NOTE: this field should be the select list type\n      const CurrentVerticalField = CurrentObject.fieldByID(\n         this.settings.verticalGroupingField\n      );\n      if (!CurrentVerticalField) return;\n\n      this.CurrentVerticalField = CurrentVerticalField;\n\n      let horizontalOptions = [];\n\n      const CurrentHorizontalField = CurrentObject.fieldByID(\n         this.settings.horizontalGroupingField\n      );\n\n      this.CurrentHorizontalField = CurrentHorizontalField;\n\n      if (\n         CurrentHorizontalField &&\n         CurrentHorizontalField instanceof this.ABFieldConnect\n      )\n         // Pull horizontal options\n         horizontalOptions = await CurrentHorizontalField.getOptions();\n\n      // Option format -  { id: \"1543563751920\", text: \"Normal\", hex: \"#4CAF50\" }\n      const verticalOptions = (CurrentVerticalField.settings.options || []).map(\n         (opt) => {\n            // Vertical & Horizontal fields\n            if (CurrentVerticalField && CurrentHorizontalField) {\n               let rows = [],\n                  // [{\n                  //    id: '',\n                  //    text: ''\n                  // }]\n                  horizontalVals = [];\n\n               // pull options of the Horizontal field\n               if (CurrentHorizontalField instanceof this.ABFieldList) {\n                  // make a copy of the settings.\n                  horizontalVals = (\n                     CurrentHorizontalField.settings.options || []\n                  ).map((o) => o);\n               } else if (CurrentHorizontalField instanceof this.ABFieldUser) {\n                  horizontalVals = CurrentHorizontalField.getUsers().map(\n                     (u) => {\n                        return {\n                           id: u.id,\n                           text: u.text || u.value,\n                        };\n                     }\n                  );\n               } else if (CurrentHorizontalField instanceof this.ABFieldConnect)\n                  horizontalVals = horizontalOptions.map(({ id, text }) => ({\n                     id,\n                     text,\n                  }));\n\n               horizontalVals.push({\n                  id: null,\n                  text: this.label(\"Other\"),\n               });\n\n               horizontalVals.forEach((val) => {\n                  const statusOps = {};\n\n                  statusOps[CurrentVerticalField.columnName] = opt.id;\n                  statusOps[CurrentHorizontalField.columnName] = val.id;\n\n                  // Header\n                  rows.push({\n                     template: val.text,\n                     height: 20,\n                     css: \"progress_header\",\n                  });\n\n                  // Kanban list\n                  rows.push({\n                     view: \"kanbanlist\",\n                     status: statusOps,\n                     type: this.kanbanListTemplate(),\n                  });\n               });\n\n               return {\n                  header: opt.text,\n                  body: {\n                     margin: 0,\n                     rows: rows,\n                  },\n               };\n            }\n            // Vertical field only\n            else if (CurrentVerticalField) {\n               const statusOps = {};\n\n               statusOps[CurrentVerticalField.columnName] = opt.id;\n\n               return {\n                  header: opt.text,\n                  body: {\n                     view: \"kanbanlist\",\n                     status: statusOps,\n                     type: this.kanbanListTemplate(),\n                  },\n               };\n            }\n         }\n      );\n\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      // Rebuild kanban that contains options\n      // NOTE: webix kanban does not support dynamic vertical list\n      abWebix.ui(verticalOptions, $$(ids.kanban));\n      $$(ids.kanban).reconstruct();\n\n      // Owner field\n      const CurrentOwnerField = CurrentObject.fieldByID(\n         this.settings.ownerField\n      );\n\n      this.CurrentOwnerField = CurrentOwnerField;\n\n      if (CurrentOwnerField) {\n         const $menuUser = $$(ids.kanban).getUserList();\n\n         $menuUser.clearAll();\n\n         if (CurrentOwnerField instanceof this.ABFieldUser) {\n            const users = ab.Account.userList().map((u) => {\n               return {\n                  id: u.username,\n                  value: u.username,\n               };\n            });\n\n            $menuUser.parse(users);\n         } else if (CurrentOwnerField instanceof this.ABFieldConnect) {\n            const options = await CurrentOwnerField.getOptions();\n\n            try {\n               $menuUser.parse(\n                  options.map((opt) => {\n                     return {\n                        id: opt.id,\n                        value: opt.text,\n                     };\n                  })\n               );\n            } catch (e) {\n               // TODO: remove this.  Trying to catch a random webix error:\n               // Cannot read properties of null (reading 'driver')\n               console.error(e);\n               console.warn(options);\n            }\n         }\n      }\n   }\n\n   busy() {\n      this.$kb?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      this.$kb?.hideProgress?.();\n   }\n\n   objectLoad(object) {\n      super.objectLoad(object);\n\n      this.TextTemplate.objectLoad(object);\n      this.FormSide.objectLoad(object);\n   }\n\n   /**\n    * @method datacollectionLoad\n    *\n    * @param datacollection {ABDatacollection}\n    */\n   datacollectionLoad(datacollection) {\n      super.datacollectionLoad(datacollection);\n\n      const DC = this.CurrentDatacollection || datacollection;\n\n      if (DC) {\n         DC.bind(this.$kb);\n\n         const obj = DC.datasource;\n\n         if (obj) this.objectLoad(obj);\n\n         return;\n      }\n\n      this.$kb.unbind();\n   }\n\n   async updateStatus(rowId, status) {\n      if (!this.CurrentVerticalField) return;\n\n      // Show loading cursor\n      this.busy();\n\n      let patch = {};\n\n      // update multi-values\n      if (status instanceof Object) patch = status;\n      // update single value\n      else patch[this.CurrentVerticalField.columnName] = status;\n\n      // update empty value\n      let needRefresh = false;\n\n      for (const key in patch)\n         if (!patch[key]) {\n            patch[key] = \"\";\n\n            // WORKAROUND: if update data is empty, then it will need to refresh\n            // the kanban after update\n            needRefresh = true;\n         }\n\n      try {\n         await this.CurrentObject?.model().update(rowId, patch);\n\n         this.ready();\n\n         if (needRefresh) this.show();\n\n         // update form data\n         if (this.FormSide.isVisible()) {\n            const data = $$(this.ids.kanban).getItem(rowId);\n\n            this.FormSide.refresh(data);\n         }\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABViewKanban:updateStatus(): Error saving item:\",\n            rowId,\n            patch,\n         });\n      }\n   }\n\n   async updateOwner(rowId, val) {\n      if (!this.CurrentOwnerField) return;\n\n      // Show loading cursor\n      this.busy();\n\n      const patch = {};\n\n      patch[this.CurrentOwnerField.columnName] = val;\n\n      try {\n         const updatedRow = await this.CurrentObject?.model().update(\n            rowId,\n            patch\n         );\n\n         // update card\n         this.$kb?.updateItem(rowId, updatedRow);\n\n         // update form data\n         if (this.FormSide.isVisible()) {\n            const data = this.$kb.getItem(rowId);\n\n            this.FormSide.refresh(data);\n         }\n\n         this.ready();\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABViewKanban:updateOwner(): Error saving item:\",\n            rowId,\n            val,\n         });\n\n         this.ready();\n      }\n   }\n\n   saveData(data) {\n      // update\n      if (data.id && this.$kb.exists(data.id))\n         this.$kb.updateItem(data.id, data);\n      // insert\n      else this.$kb.add(data);\n   }\n\n   unselect() {\n      if (this.$kb)\n         this.$kb.eachList((list /*, status*/) => {\n            list?.unselect?.();\n         });\n   }\n\n   addCard() {\n      this.unselect();\n\n      // show the side form\n      this.FormSide.show();\n      $$(this.ids.resizer).show();\n   }\n\n   async removeCard(rowId) {\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      abWebix.confirm({\n         title: this.label(\"Remove card\"),\n         text: this.label(\"Do you want to delete this card?\"),\n         callback: async (result) => {\n            if (!result) return;\n\n            this.busy();\n\n            try {\n               const response = await this.CurrentObject?.model().delete(rowId);\n\n               if (response.numRows > 0) {\n                  this.$kb.remove(rowId);\n               } else {\n                  abWebix.alert({\n                     text: this.label(\n                        \"No rows were effected. This does not seem right.\"\n                     ),\n                  });\n               }\n            } catch (err) {\n               ab.notify.developer(err, {\n                  message: \"ABViewKanban:removeCard(): Error deleting item:\",\n                  rowId,\n               });\n            }\n\n            this.ready();\n         },\n      });\n   }\n\n   /**\n    * @method setFields()\n    * Save the current view options.\n    * @param options - {\n    *       verticalGrouping:    {ABField} - required\n    *       horizontalGrouping:  {ABField} - optional\n    *       ownerField:          {ABField} - optional\n    * }\n    */\n   setFields(options) {\n      this.CurrentVerticalField = options.verticalGrouping;\n      this.CurrentHorizontalField = options.horizontalGrouping;\n      this.CurrentOwnerField = options.ownerField;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewLabelComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewLabel_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n\n      const _ui = super.ui([\n         this.uiFormatting({\n            view: \"label\",\n            // css: 'ab-component-header ab-ellipses-text',\n            label: baseView.text || \"*\",\n            align: this.settings.alignment,\n            type: {\n               height: \"auto\",\n            },\n         }),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   /**\n    * @method uiFormatting\n    * a common routine to properly update the displayed label\n    * UI with the css formatting for the given .settings\n    * @param {obj} _ui the current webix.ui definition\n    * @return {obj} a properly formatted webix.ui definition\n    */\n   uiFormatting(ui) {\n      // add different css settings based upon it's format\n      // type.\n      switch (parseInt(this.settings.format)) {\n         // normal\n         case 0:\n            ui.css = \"ab-component-label ab-ellipses-text\";\n            break;\n\n         // title\n         case 1:\n            ui.css = \"ab-component-header ab-ellipses-text\";\n            break;\n\n         // description\n         case 2:\n            ui.css = \"ab-component-description ab-ellipses-text\";\n            break;\n      }\n\n      return ui;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewLayoutComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewLayout_${baseView.id}`, ids);\n\n      const viewComponents = this.viewComponents ?? {}; // { viewId: viewComponent, ..., viewIdn: viewComponent }\n\n      baseView.views().forEach((v) => {\n         viewComponents[v.id] = v.component();\n      });\n\n      this.viewComponents = viewComponents;\n   }\n\n   ui() {\n      const viewComponents = this.viewComponents;\n      const uiComponents = Object.keys(viewComponents)\n         .map((vId) => viewComponents[vId].ui())\n         .filter((ui) => ui);\n\n      if (uiComponents.length == 0) {\n         uiComponents.push({});\n         uiComponents.push({\n            view: \"label\",\n            label: this.label(\"no content\"),\n         });\n         uiComponents.push({});\n      }\n\n      const _ui = super.ui([\n         {\n            view: \"layout\",\n            cols: uiComponents,\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB);\n\n      const baseView = this.view;\n\n      // make sure each of our child views get .init() called\n      baseView.views().forEach((v) => {\n         const component = this.viewComponents[v.id];\n\n         // initial sub-component\n         component?.init(AB, accessLevel);\n\n         // Trigger 'changePage' event to parent\n         baseView.eventAdd({\n            emitter: v,\n            eventName: \"changePage\",\n            listener: (pageId) => {\n               baseView.changePage(pageId);\n            },\n         });\n      });\n   }\n\n   onShow() {\n      // calll .onShow in child components\n      this.view.views().forEach((v) => {\n         const component = this.viewComponents[v.id];\n         component?.onShow();\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewListComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewList_${baseView.id}`,\n         Object.assign({ list: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _uiList = {\n         id: this.ids.list,\n         view: \"dataview\",\n         type: {\n            width: 1000,\n            height: 30,\n         },\n         template: (item) => {\n            const field = this.view.field();\n\n            if (!field) return \"\";\n\n            return field.format(item);\n         },\n      };\n\n      // set height or autoHeight\n      if (settings.height !== 0) _uiList.height = settings.height;\n      else _uiList.autoHeight = true;\n\n      const _ui = super.ui([_uiList]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      // bind dc to component\n      dc.bind($$(this.ids.list));\n      // $$(ids.list).sync(dv);\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewMenuComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewMenu_${baseView.id}`,\n         Object.assign(\n            {\n               menu: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _ui = super.ui([\n         parseInt(settings.menuInToolbar) ? this.uiToolbar() : this.uiMenu(),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiMenu() {\n      const baseView = this.view;\n      const settings = this.settings;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const css = `${settings.buttonStyle || defaultSettings.buttonStyle} ${\n         settings.menuAlignment || defaultSettings.menuAlignment\n      } `;\n\n      return {\n         id: this.ids.menu,\n         view: \"menu\",\n         autoheight: true,\n         autowidth: true,\n         datatype: \"json\",\n         css: css,\n         layout: settings.orientation || defaultSettings.orientation,\n         on: {\n            onMenuItemClick: (id /*, e, node */) => {\n               this.onClick(id);\n            },\n            onAfterRender: () => {\n               this.defineCypress();\n            },\n         },\n         type: {\n            subsign: true,\n         },\n      };\n   }\n\n   uiToolbar() {\n      const settings = this.settings;\n      const baseView = this.view;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const _uiMenu = this.uiMenu();\n\n      let elems = [];\n      let menuIncluded = false;\n\n      // Legacy support: use old settings values if translated values are not set\n      const menuTextLeft = baseView.menuTextLeft ?? settings.menuTextLeft;\n      const menuTextCenter = baseView.menuTextCenter ?? settings.menuTextCenter;\n      const menuTextRight = baseView.menuTextRight ?? settings.menuTextRight;\n\n      if (settings.menuPosition === \"left\") {\n         menuIncluded = true;\n         elems.push(_uiMenu);\n      } else if (menuTextLeft?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push({\n            view: \"label\",\n            label: menuTextLeft,\n            align: \"left\",\n            width: width,\n         });\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (settings?.menuPosition === \"center\") {\n         menuIncluded = true;\n\n         elems.push(_uiMenu);\n      } else if (menuTextCenter?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push(\n            {},\n            {\n               view: \"label\",\n               label: menuTextCenter,\n               align: \"center\",\n               width: width,\n            },\n            {}\n         );\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (settings?.menuPosition === \"right\") {\n         menuIncluded = true;\n\n         elems.push(_uiMenu);\n      } else if (menuTextRight?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push({\n            view: \"label\",\n            label: menuTextRight,\n            align: \"right\",\n            width: width,\n         });\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (menuIncluded === false) elems = [_uiMenu];\n\n      return {\n         view: \"toolbar\",\n         css: settings.menuTheme ?? defaultSettings.menuTheme,\n         padding: settings.menuPadding\n            ? parseInt(settings.menuPadding)\n            : defaultSettings.menuPadding,\n         elements: elems,\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $menu = $$(this.ids.menu);\n      const baseView = this.view;\n\n      if ($menu) {\n         const settings = this.settings;\n\n         baseView.ClearPagesInView($menu);\n\n         if (settings.order?.length) {\n            baseView.AddPagesToView($menu, settings.order);\n            // Force onAfterRender to fire\n            $menu.refresh();\n         }\n      }\n   }\n\n   onClick(itemId) {\n      const $menu = $$(this.ids.menu);\n      let $item;\n      try {\n         $item = $menu.getMenuItem(itemId);\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context:\n               \"ABViewMenuComponent > onClick error gettint menu / menu item\",\n            itemId,\n            menu: {\n               id: this.view.id,\n               settings: this.view.settings,\n            },\n         });\n         return;\n      }\n      const baseView = this.view;\n\n      // switch tab view\n      if ($item.type === \"tab\") {\n         baseView.changePage($item.pageId);\n\n         const redirectPage = baseView.application.pages(\n            (p) => p.id === $item.pageId,\n            true\n         )[0];\n\n         if (!redirectPage) return;\n\n         const tabView = redirectPage.views((v) => v.id === $item.id, true)[0];\n\n         if (!tabView) return;\n\n         const tab = tabView.parent;\n\n         if (!tab) return;\n\n         this.toggleParent(tab);\n\n         // if (!$$(tabView.id) || !$$(tabView.id).isVisible()) {\n         const showIt = setInterval(() => {\n            if ($$(tabView.id) && $$(tabView.id).isVisible()) {\n               clearInterval(showIt);\n\n               return;\n            }\n\n            tab.emit(\"changeTab\", tabView.id);\n         }, 100);\n         // }\n      }\n      // switch page\n      else baseView.changePage(itemId);\n   }\n\n   toggleParent(element) {\n      if (!element.parent) return false;\n\n      const parentElem = element.parent;\n\n      if (!parentElem?.parent) return false;\n\n      parentElem.parent.emit(\"changeTab\", parentElem.id);\n      this.toggleParent(parentElem.parent);\n   }\n\n   defineCypress() {\n      const $menu = $$(this.ids.menu);\n\n      if (!$menu) return;\n\n      $menu.data.each((item) => {\n         const node = $menu.getItemNode(item.id);\n\n         if (!node) return;\n\n         // get linked page/tab info so we can use its name in the data-cy\n         const viewInfo = this.AB.definitionByID(item.id);\n\n         node.setAttribute(\n            \"data-cy\",\n            `menu-item ${viewInfo?.name} ${item.id} ${this.view.id}`\n         );\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewOrgChartComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewOrgChart_${baseView.id}`,\n         Object.assign(\n            {\n               chartView: \"\",\n               chartDom: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            view: \"template\",\n            template: `<div id=\"${ids.chartDom}\"></div>`,\n            css: {\n               position: \"relative\",\n            },\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB, accessLevel);\n\n      const $chartView = $$(this.ids.chartView);\n      if ($chartView)\n         this.AB.Webix.extend($chartView, this.AB.Webix.ProgressBar);\n   }\n\n   async loadOrgChartJs() {\n      this.busy();\n\n      const [orgChartLoader] = await Promise.all([\n         import(\n            /* webpackPrefetch: true */\n            \"../../../../js/orgchart-webcomponents.js\"\n         ),\n         import(\n            /* webpackPrefetch: true */\n            \"../../../../styles/orgchart-webcomponents.css\"\n         ),\n      ]);\n\n      this.OrgChart = orgChartLoader.default;\n\n      this.ready();\n   }\n\n   async onShow() {\n      super.onShow();\n\n      this.busy();\n      await this.loadOrgChartJs();\n      await this.pullData();\n      this.displayOrgChart();\n      this.ready();\n   }\n\n   async displayOrgChart() {\n      const baseView = this.view;\n      const chartData = this.AB.cloneDeep(this.chartData);\n\n      const orgchart = new this.OrgChart({\n         data: chartData,\n         direction: baseView.settings.direction,\n         // depth: baseView.settings.depth,\n         pan: baseView.settings.pan,\n         zoom: baseView.settings.zoom,\n         // visibleLevel: baseView.settings.visibleLevel,\n\n         exportButton: baseView.settings.export,\n         exportFilename: baseView.settings.exportFilename,\n\n         // ajaxURLs: {\n         //    children: function (nodeData) {\n         //       console.info(\"nodeData: \", nodeData);\n         //       return null;\n         //    },\n         // },\n         nodeContent: \"description\",\n      });\n\n      const chartDom = document.querySelector(`#${this.ids.chartDom}`);\n      if (chartDom) {\n         chartDom.textContent = \"\";\n         chartDom.innerHTML = \"\";\n         chartDom.appendChild(orgchart);\n      }\n\n      setTimeout(() => {\n         this._setColor();\n      }, 1);\n   }\n\n   async pullData() {\n      const view = this.view;\n      const dc = view.datacollection;\n      const cursor = dc?.getCursor();\n      if (!cursor) return null;\n\n      const valueFields = view.valueFields();\n      // const descriptionField = view.descriptionField?.();\n\n      const chartData = this.chartData;\n      chartData.name = dc?.datasource?.displayData(cursor) ?? \"\";\n      chartData.description = \"\";\n      // description:\n      //    descriptionField?.format?.(f) ??\n      //    f[descriptionField?.columnName] ??\n      //    \"\",\n      chartData._rawData = cursor;\n\n      let parentChartData = [chartData];\n      let currChildren;\n\n      valueFields.forEach((field) => {\n         let _tempParentChartData = [];\n\n         parentChartData.forEach(async (chartItem) => {\n            if (!chartItem) return;\n\n            const rawData = chartItem?._rawData;\n            currChildren = rawData?.[field?.relationName()];\n\n            // Pull data from the server\n            if (!currChildren) {\n               const objLink = field.object;\n               const where = {\n                  glue: \"and\",\n                  rules: [],\n               };\n               where.rules.push({\n                  key: objLink.PK(),\n                  rule: \"equals\",\n                  value: rawData[objLink.PK()],\n               });\n               const returnData = await objLink\n                  .model()\n                  .findAll({ where, populate: true });\n               chartItem._rawData = returnData?.data[0];\n               currChildren = chartItem._rawData?.[field?.relationName()];\n\n               this.displayOrgChart();\n            }\n\n            chartItem.children = [];\n            if (currChildren?.length) {\n               currChildren.forEach((childData) => {\n                  chartItem.children.push({\n                     name: field.datasourceLink.displayData(childData),\n                     description: \"\",\n                     _rawData: childData,\n                  });\n               });\n            }\n\n            _tempParentChartData = _tempParentChartData.concat(\n               chartItem.children\n            );\n         });\n\n         parentChartData = _tempParentChartData;\n      });\n   }\n\n   get chartData() {\n      if (this._chartData == null) {\n         this._chartData = {};\n      }\n      return this._chartData;\n   }\n\n   _setColor() {\n      const view = this.view;\n      let doms = document.querySelectorAll(`org-chart`);\n      doms.forEach((dom) => {\n         dom.style.backgroundImage = \"none\";\n      });\n\n      doms = document.querySelectorAll(`\n         org-chart .verticalNodes>td::before,\n         org-chart .verticalNodes ul>li::before,\n         org-chart .verticalNodes ul>li::after,\n         org-chart .node .content,\n         org-chart tr.lines .topLine,\n         org-chart tr.lines .rightLine,\n         org-chart tr.lines .leftLine`);\n      doms.forEach((dom) => {\n         dom.style.borderColor = view.settings.color;\n      });\n\n      doms = document.querySelectorAll(`\n         org-chart tr.lines .downLine,\n         org-chart .node .title`);\n      doms.forEach((dom) => {\n         dom.style.backgroundColor = view.settings.color;\n      });\n   }\n\n   busy() {\n      const $chartView = $$(this.ids.chartView);\n      $chartView?.disable?.();\n      $chartView?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      const $chartView = $$(this.ids.chartView);\n      $chartView?.enable?.();\n      $chartView?.hideProgress?.();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nconst SMALL_PAGE_WIDTH = 150;\nconst BIG_PAGE_WIDTH = 250;\n\nmodule.exports = class ABViewPDFImporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewPDFImporter_${baseView.id}`,\n         Object.assign(\n            {\n               fileUploader: \"\",\n               uploadList: \"\",\n               dataview: \"\",\n               fullImagePopup: \"\",\n               fullImageCarousel: \"\",\n               fullImageSelectToggle: \"\",\n               fullImageLabel: \"\",\n               selectAll: \"\",\n               unselectAll: \"\",\n               submit: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      const _ui = super.ui([\n         {\n            rows: [\n               {\n                  cols: [\n                     {\n                        id: ids.fileUploader,\n                        view: \"uploader\",\n                        name: \"records\",\n                        link: ids.uploadList,\n                        label: this.label(\"Upload a PDF file\"),\n                        inputWidth: 200,\n                        width: 210,\n                        accept: \"application/pdf\",\n                        multiple: false,\n                        autosend: false,\n                        type: \"icon\",\n                        icon: \"fa fa-file-pdf-o\",\n                        on: {\n                           onBeforeFileAdd: (fileInfo) => {\n                              this._csvFileInfo = fileInfo;\n                              if (!this._csvFileInfo) return false;\n\n                              this.loadFile();\n\n                              return true;\n                           },\n                        },\n                     },\n                     {\n                        id: ids.uploadList,\n                        view: \"list\",\n                        type: \"uploader\",\n                        autoheight: true,\n                        borderless: true,\n                        onClick: {\n                           webix_remove_upload: (e, id) => {\n                              this.removeFile(id);\n                           },\n                        },\n                     },\n                     {\n                        width: 10,\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-th-large\",\n                        maxWidth: 30,\n                        click: () => {\n                           this.displayBig();\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-th\",\n                        maxWidth: 30,\n                        click: () => {\n                           this.displaySmall();\n                        },\n                     },\n                  ],\n               },\n               {\n                  height: 10,\n               },\n               {\n                  id: ids.dataview,\n                  view: \"dataview\",\n                  borderless: true,\n                  css: \"pdf-data-view\",\n                  multiselect: false,\n                  select: false,\n                  type: {\n                     template: (item) => {\n                        return this.pageTemplate(item);\n                     },\n                     width: \"auto\",\n                     height: \"auto\",\n                  },\n                  on: {\n                     onSelectChange: (pageIds) => {\n                        this.renderPageImages();\n                     },\n                     onItemClick: function (id, e, node) {\n                        // Unselect\n                        if (e?.target?.className?.includes?.(\"unselect-page\")) {\n                           self.unselect(id);\n                        }\n                        // Select\n                        else if (\n                           e?.target?.className?.includes?.(\"select-page\")\n                        ) {\n                           self.select(id);\n                        }\n                        // Zoom\n                        else if (e?.target?.className?.includes?.(\"pdf-zoom\")) {\n                           self._fullImagePopup.show();\n                           $$(self.ids.fullImageCarousel).setActiveIndex(\n                              parseInt(id ?? 0) - 1\n                           );\n                           self.refreshFullImage();\n                        }\n                     },\n                  },\n               },\n               {\n                  height: 10,\n               },\n               {\n                  cols: [\n                     {\n                        id: ids.selectAll,\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-check-square-o\",\n                        maxWidth: 160,\n                        label: this.label(\"Select All\"),\n                        click: () => {\n                           this.selectAll();\n                        },\n                     },\n                     {\n                        id: ids.unselectAll,\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-square-o\",\n                        maxWidth: 160,\n                        label: this.label(\"Unselect All\"),\n                        click: () => {\n                           this.unselectAll();\n                        },\n                     },\n                     {\n                        fillspace: true,\n                     },\n                     {\n                        id: ids.submit,\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        type: \"icon\",\n                        icon: \"fa fa-floppy-o\",\n                        disabled: true,\n                        maxWidth: 180,\n                        label: this.label(\"Submit\"),\n                        click: () => {\n                           this.submit();\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n      ]);\n\n      return _ui;\n   }\n\n   uiPopup() {\n      const ids = this.ids;\n      return {\n         id: ids.fullImagePopup,\n         view: \"window\",\n         modal: true,\n         position: \"center\",\n         headHeight: 25,\n         head: {\n            cols: [\n               { fillspace: true },\n               {\n                  view: \"button\",\n                  type: \"icon\",\n                  icon: \"fa fa-times\",\n                  maxWidth: 25,\n                  height: 25,\n                  click: () => {\n                     $$(ids.fullImagePopup)?.hide();\n                  },\n               },\n            ],\n         },\n         body: {\n            rows: [\n               {\n                  id: ids.fullImageCarousel,\n                  view: \"carousel\",\n                  width: 600,\n                  height: 500,\n                  navigation: {\n                     items: true,\n                     buttons: true,\n                     type: \"side\",\n                  },\n                  cols: [],\n                  on: {\n                     onShow: () => {\n                        this.refreshFullImage();\n                     },\n                  },\n               },\n               {\n                  view: \"layout\",\n                  cols: [\n                     {\n                        id: ids.fullImageSelectToggle,\n                        view: \"toggle\",\n                        type: \"icon\",\n                        offIcon: \"fa fa-square-o\",\n                        onIcon: \"fa fa-check-square-o\",\n                        offLabel: this.label(\"Unselected\"),\n                        onLabel: this.label(\"Selected\"),\n                        width: 130,\n                        on: {\n                           onChange: (isSelected) => {\n                              const activeIndex = $$(\n                                 this.ids.fullImageCarousel\n                              ).getActiveIndex();\n                              const pageNumber = activeIndex + 1;\n\n                              if (isSelected) this.select(pageNumber);\n                              else this.unselect(pageNumber);\n                           },\n                        },\n                     },\n                     {\n                        fillspace: true,\n                     },\n                     {\n                        id: ids.fullImageLabel,\n                        view: \"label\",\n                        width: 120,\n                        label: `${this.label(\"Page Number\")}: ${\"#\"}`,\n                     },\n                  ],\n               },\n            ],\n         },\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $dataview = $$(this.ids.dataview);\n      if ($dataview) this.AB.Webix.extend($dataview, webix.ProgressBar);\n\n      if (!this._fullImagePopup) {\n         const fullImagePopup = this.uiPopup();\n         this._fullImagePopup = this.AB.Webix.ui(fullImagePopup);\n      }\n   }\n\n   onShow() {\n      this.initPdfjs();\n      super.onShow();\n   }\n\n   /**\n    * Loads the pdfjs dependecies. We defer loading since it is a large library\n    * that is not needed in the initial page load.\n    */\n   async initPdfjs() {\n      if (this.pdfjs && window.pdfjsWorker) return;\n      this.busy();\n      this.pdfjs = (\n         await import(\n            /* webpackPrefetch: true */\n            \"../../../../init/pdfjs\"\n         )\n      ).default;\n      this.ready();\n   }\n\n   async _readFileBuffer() {\n      const _csvFileInfo = this._csvFileInfo;\n      if (!_csvFileInfo || !_csvFileInfo.file)\n         return Promise.resolve(new ArrayBuffer(0));\n\n      const fileReader = new FileReader();\n\n      return new Promise((resolve, reject) => {\n         fileReader.onload = (event) => {\n            const fileBuffer = event.target.result;\n            resolve(fileBuffer);\n         };\n         fileReader.onerror = (event) => {\n            reject(event);\n         };\n         fileReader.readAsArrayBuffer(_csvFileInfo.file);\n      });\n   }\n\n   async _toBlob(pageNumber, canvas) {\n      if (!canvas) return;\n\n      return new Promise((resolve, reject) => {\n         canvas.toBlob((blob) => {\n            const file = new File([blob], `${pageNumber}.png`, {\n               type: \"image/png\",\n            });\n\n            resolve(file);\n         }, \"image/png\");\n      });\n   }\n\n   async _uploadImage(pageNumber) {\n      // set quality of the saving image\n      const WIDTH_OF_SAVE_IMAGE = 1200;\n\n      // Create a temporary CANVAS dom to render page image with specify the height\n      const canvasId = `${this.view.id}_temp_canvas`;\n      const canvas =\n         document.getElementById(canvasId) ?? document.createElement(\"canvas\");\n      canvas.id = canvasId;\n      canvas.width = WIDTH_OF_SAVE_IMAGE;\n\n      await this.showPage(pageNumber, canvas);\n      const fileBlob = await this._toBlob(pageNumber, canvas);\n\n      return new Promise((resolve, reject) => {\n         // Create a uploader to upload images\n         const $uploader = this.AB.Webix.ui({\n            view: \"uploader\",\n            apiOnly: true,\n            upload: this.field.urlUpload(),\n            inputName: \"file\",\n            multiple: false,\n            on: {\n               // when upload is complete:\n               onFileUpload: (item, response) => {\n                  // RETURN HERE\n                  resolve(response?.data?.uuid);\n               },\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  reject(response);\n               },\n               onUploadComplete: () => $uploader.destructor(),\n            },\n         });\n\n         $uploader.addFile(fileBlob, fileBlob.size);\n      });\n   }\n\n   _increaseProgressValue() {\n      const $dataview = $$(this.ids.dataview);\n      const maxProgressStep = ($dataview.getSelectedId(true) ?? []).length * 2;\n\n      this._progressSteps = this._progressSteps ?? 0;\n      this._progressSteps++;\n\n      $dataview?.showProgress?.({\n         type: \"bottom\",\n         position: this._progressSteps / maxProgressStep,\n      });\n   }\n\n   async loadFile() {\n      this.clearDataview();\n\n      const _csvFileInfo = this._csvFileInfo;\n      if (!_csvFileInfo) return;\n\n      const fileBuffer = await this._readFileBuffer();\n      this._pdfDoc = await this.pdfjs.getDocument(fileBuffer).promise;\n\n      const total_page = this._pdfDoc.numPages;\n      const $dataview = $$(this.ids.dataview);\n      const $carousel = $$(this.ids.fullImageCarousel);\n      const carousel_list = [];\n      for (let pageNumber = 1; pageNumber <= total_page; pageNumber++) {\n         $dataview.add({\n            id: pageNumber,\n            pageNumber,\n         });\n\n         carousel_list.push({\n            template: (item) => {\n               return this.fullImageTemplate(item);\n            },\n            data: {\n               pageNumber,\n            },\n         });\n      }\n\n      this.renderPageImages();\n      if ($carousel) this.AB.Webix.ui(carousel_list, $carousel);\n\n      // Select all of images by default\n      this.selectAll();\n\n      $$(this.ids.submit)?.enable();\n   }\n\n   removeFile(id) {\n      $$(this.ids.uploadList)?.remove(id);\n\n      delete this._pdfDoc;\n      delete this._csvFileInfo;\n      this.clearDataview();\n\n      $$(this.ids.submit)?.disable();\n\n      return true;\n   }\n\n   pageTemplateId(pageNumber) {\n      return `pdf-importer-${this.view.id}-${pageNumber}`;\n   }\n\n   pageTemplate(item) {\n      const $dataview = $$(this.ids.dataview);\n      let selectedPageIds = $dataview.getSelectedId(true);\n\n      return `\n      <div>\n         <div class=\"pdf-data-view-item\">\n            <div>\n            ${\n               selectedPageIds.filter((pageId) => pageId == item.id).length\n                  ? '<i class=\"unselect-page fa fa-check-square-o\"></i>'\n                  : '<i class=\"select-page fa fa-square-o\"></i>'\n            }\n            </div>\n            <div style=\"width: 15px;\">\n               ${item.pageNumber}\n            </div>\n         </div>\n         <div class=\"pdf-zoom pdf-data-view-image\">\n            <canvas class=\"pdf-zoom\" width=\"${\n               this.pageItemWidth\n            }\" id=\"${this.pageTemplateId(item.pageNumber)}\"></canvas>\n            <div class=\"pdf-zoom pdf-data-view-image-icon\">\n               <i class=\"pdf-zoom fa fa-search-plus fa-4x\"></i>\n            </div>\n         </div>\n      </div>\n      `;\n   }\n\n   renderPageImages() {\n      const $dataview = $$(this.ids.dataview);\n      $dataview?.find({}).forEach((item) => {\n         const canvas_dom = document.querySelector(\n            `#${this.pageTemplateId(item.pageNumber)}`\n         );\n         this.showPage(item.pageNumber, canvas_dom);\n      });\n   }\n\n   async showPage(pageNumber, canvas_dom) {\n      if (!this._pdfDoc) return;\n\n      pageNumber = parseInt(pageNumber);\n      const page = await this._pdfDoc.getPage(pageNumber);\n      const pdf_original_width = page.getViewport({ scale: 1 }).width;\n      const scale_required = canvas_dom.width / pdf_original_width;\n\n      // get viewport to render the page at required scale\n      const viewport = page.getViewport({ scale: scale_required });\n      canvas_dom.height = viewport.height;\n\n      return page.render({\n         canvasContext: canvas_dom.getContext(\"2d\"),\n         viewport: viewport,\n      }).promise;\n   }\n\n   clearDataview() {\n      const $dataview = $$(this.ids.dataview);\n      const $carousel = $$(this.ids.fullImageCarousel);\n\n      $dataview?.clearAll();\n      if ($carousel)\n         this.AB.Webix.ui(\n            [\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  height: $carousel.height,\n                  label: this.label(\"No image\"),\n               },\n            ],\n            $carousel\n         );\n   }\n\n   displaySmall() {\n      this._isDisplayBig = false;\n      $$(this.ids.dataview)?.render();\n      this.renderPageImages();\n   }\n\n   displayBig() {\n      this._isDisplayBig = true;\n      $$(this.ids.dataview)?.render();\n      this.renderPageImages();\n   }\n\n   get pageItemWidth() {\n      return this._isDisplayBig ? BIG_PAGE_WIDTH : SMALL_PAGE_WIDTH;\n   }\n\n   select(pageNumber) {\n      const $dataview = $$(this.ids.dataview);\n\n      let selectedIds = $dataview.getSelectedId(true);\n\n      selectedIds.push(pageNumber);\n      selectedIds = selectedIds.filter((pageId) => pageId);\n\n      if (selectedIds.length) $dataview.select(selectedIds);\n      else $dataview.unselectAll();\n   }\n\n   unselect(pageNumber) {\n      const $dataview = $$(this.ids.dataview);\n\n      let selectedIds = $dataview.getSelectedId(true);\n\n      selectedIds = selectedIds.filter(\n         (pageId) => pageId && pageId != pageNumber\n      );\n\n      if (selectedIds.length) $dataview.select(selectedIds);\n      else $dataview.unselectAll();\n   }\n\n   selectAll() {\n      $$(this.ids.dataview)?.selectAll();\n   }\n\n   unselectAll() {\n      $$(this.ids.dataview)?.unselectAll();\n   }\n\n   fullImageTemplateId(pageNumber) {\n      return `${this.pageTemplateId(pageNumber)}_full_size`;\n   }\n\n   fullImageTemplate(item) {\n      const $carousel = $$(this.ids.fullImageCarousel);\n      return `<canvas width=\"${\n         $carousel.config.width - 20\n      }\" id=\"${this.fullImageTemplateId(item.pageNumber)}\"></canvas>`;\n   }\n\n   refreshFullImage() {\n      const ids = this.ids;\n      const activeIndex = $$(ids.fullImageCarousel).getActiveIndex();\n      const pageNumber = activeIndex + 1;\n      const canvas_dom = document.querySelector(\n         `#${this.fullImageTemplateId(pageNumber)}`\n      );\n      this.showPage(pageNumber, canvas_dom);\n\n      const selectedPageIds = $$(ids.dataview).getSelectedId(true);\n      const isSelected =\n         selectedPageIds.filter((pageId) => pageId == pageNumber).length > 0;\n      $$(ids.fullImageSelectToggle).setValue(isSelected);\n\n      $$(ids.fullImageLabel).setValue(\n         `${this.label(\"Page Number\")}: ${pageNumber}`\n      );\n   }\n\n   get object() {\n      return this.view.datacollection?.datasource;\n   }\n\n   get field() {\n      return this.object?.fields?.(\n         (f) => f.id == this.view.settings.fieldID\n      )[0];\n   }\n\n   busy() {\n      const ids = this.ids;\n\n      const $fileUploader = $$(ids.fileUploader);\n      const $uploadList = $$(ids.uploadList);\n      const $dataview = $$(ids.dataview);\n      const $submit = $$(ids.submit);\n      const $selectAll = $$(ids.selectAll);\n      const $unselectAll = $$(ids.unselectAll);\n      const $selectToggle = $$(ids.fullImageSelectToggle);\n\n      $fileUploader?.disable();\n      $uploadList?.disable();\n      $submit?.disable();\n      $selectAll?.disable();\n      $unselectAll?.disable();\n      $selectToggle?.disable();\n      $dataview?.showProgress?.({\n         type: \"bottom\",\n         position: 0.001,\n      });\n   }\n\n   ready() {\n      const ids = this.ids;\n\n      const $fileUploader = $$(ids.fileUploader);\n      const $uploadList = $$(ids.uploadList);\n      const $dataview = $$(ids.dataview);\n      const $submit = $$(ids.submit);\n      const $selectAll = $$(ids.selectAll);\n      const $unselectAll = $$(ids.unselectAll);\n      const $selectToggle = $$(ids.fullImageSelectToggle);\n\n      $fileUploader?.enable();\n      $uploadList?.enable();\n      $submit?.enable();\n      $selectAll?.enable();\n      $unselectAll?.enable();\n      $selectToggle?.enable();\n      $dataview?.hideProgress?.();\n\n      delete this._progressSteps;\n   }\n\n   async submit() {\n      const field = this.field;\n      if (!this._pdfDoc || !field) return;\n\n      this.busy();\n\n      const ids = this.ids;\n      const $dataview = $$(ids.dataview);\n      const selectedPageIds = $dataview.getSelectedId(true) ?? [];\n      const model = field.object.model();\n      const dcLink = this.datacollection.datacollectionLink;\n      const newValues = [];\n\n      for (let i = 0; i < selectedPageIds.length; i++) {\n         const pageNumber = selectedPageIds[i];\n         if (pageNumber == null || pageNumber == \"\") return;\n\n         const uploadId = await this._uploadImage(pageNumber);\n\n         this._increaseProgressValue();\n\n         // Insert Data\n         const values = field.object.defaultValues();\n         values[field.columnName] = uploadId;\n\n         // Set linked data from the parent DC\n         const linkValues = dcLink?.getCursor();\n         if (linkValues) {\n            const objectLink = dcLink?.datasource;\n\n            const connectFields = field.object.connectFields();\n            connectFields.forEach((f) => {\n               if (\n                  objectLink.id == f.settings.linkObject &&\n                  values[f.columnName] === undefined\n               ) {\n                  const linkColName = f.indexField\n                     ? f.indexField.columnName\n                     : objectLink.PK();\n\n                  values[f.columnName] = {};\n                  values[f.columnName][linkColName] =\n                     linkValues[linkColName] ?? linkValues.id;\n               }\n            });\n         }\n\n         newValues.push(await model.create(values));\n\n         this._increaseProgressValue();\n      }\n\n      this.view.doSubmitRules(newValues);\n\n      // NOTE: trigger this event to ABViewPropertyAddPage\n      if (newValues) this.view.emit(\"saved\", newValues);\n\n      this.ready();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABFieldCalculate = require(\"../../dataFields/ABFieldCalculate\");\nconst ABFieldFormula = require(\"../../dataFields/ABFieldFormula\");\nconst ABFieldNumber = require(\"../../dataFields/ABFieldNumber\");\n/* global pivot */\nmodule.exports = class ABViewPivotComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewPivot_${baseView.id}`,\n         Object.assign({ pivot: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const self = this;\n      const settings = this.settings;\n      const uiPivot = {\n         id: this.ids.pivot,\n         view: \"pivot\",\n         readonly: true,\n         removeMissed: settings.removeMissed,\n         totalColumn: settings.totalColumn,\n         separateLabel: settings.separateLabel,\n         min: settings.min,\n         max: settings.max,\n         height: settings.height,\n         fields: this._getFields(),\n         format: (value) => {\n            const decimalPlaces = settings.decimalPlaces ?? 2;\n\n            return value && value != \"0\"\n               ? parseFloat(value).toFixed(decimalPlaces || 0)\n               : value;\n         },\n         override: new Map([\n            [\n               pivot.services.Backend,\n               class MyBackend extends pivot.services.Backend {\n                  async data() {\n                     const dc = self.datacollection;\n                     if (!dc) return webix.promise.resolve([]);\n\n                     const object = dc.datasource;\n                     if (!object) return webix.promise.resolve([]);\n\n                     switch (dc.dataStatus) {\n                        case dc.dataStatusFlag.notInitial:\n                           await dc.loadData();\n                           break;\n                     }\n\n                     const data = dc.getData();\n                     const dataMapped = data.map((d) => {\n                        const result = {};\n\n                        object.fields().forEach((f) => {\n                           if (\n                              f instanceof ABFieldCalculate ||\n                              f instanceof ABFieldFormula ||\n                              f instanceof ABFieldNumber\n                           )\n                              result[f.columnName] = d[f.columnName];\n                           else result[f.columnName] = f.format(d);\n                        });\n\n                        return result;\n                     });\n\n                     return webix.promise.resolve(dataMapped);\n                  }\n               },\n            ],\n            [\n               pivot.views.table,\n               class CustomTable extends pivot.views.table {\n                  CellFormat(value) {\n                     const decimalPlaces = settings.decimalPlaces ?? 2;\n                     if (!value) value = value === 0 ? \"0\" : \"\";\n                     return value\n                        ? parseFloat(value).toFixed(decimalPlaces)\n                        : value;\n                  }\n               },\n            ],\n         ]),\n      };\n\n      if (settings.structure) uiPivot.structure = settings.structure;\n\n      const _ui = super.ui([uiPivot]);\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   _getFields() {\n      const dc = this.datacollection;\n      if (!dc) return [];\n\n      const object = dc.datasource;\n      if (!object) return [];\n\n      const fields = object.fields().map((f) => {\n         let fieldType = \"text\";\n\n         switch (f.key) {\n            case \"calculate\":\n            case \"formula\":\n            case \"number\":\n               fieldType = \"number\";\n               break;\n            case \"date\":\n            case \"datetime\":\n               fieldType = \"date\";\n               break;\n         }\n\n         return {\n            id: f.columnName,\n            value: f.label,\n            type: fieldType,\n         };\n      });\n\n      return fields;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewReportsManagerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewReportManager_${baseView.id}`,\n         Object.assign(\n            {\n               reportManager: \"\",\n            },\n            ids\n         )\n      );\n\n      this.readonly = false;\n   }\n\n   ui() {\n      const self = this;\n      const settings = this.settings;\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n      const dc = this.datacollection;\n      const fieldName = dc?.datasource.fieldByID(\n         settings.dataviewFields.name\n      )?.columnName;\n      const fieldText = dc?.datasource.fieldByID(\n         settings.dataviewFields.text\n      )?.columnName;\n      const fieldQueries = dc?.datasource.fieldByID(\n         settings.dataviewFields.queries\n      )?.columnName;\n      const ids = this.ids;\n      class MyBackend extends reports.services.Backend {\n         async getModules() {\n            if (dc == null) return [];\n\n            await self.waitInitializingDCEvery(1000, dc);\n\n            return dc.getData().map((e) => {\n               return {\n                  id: e.id,\n                  name: e[fieldName],\n                  text: JSON.stringify(e[fieldText]),\n                  updated: e[\"updated_at\"],\n               };\n            });\n         }\n\n         async addModule(data) {\n            const parsedData = {};\n\n            parsedData[fieldName] = data.name;\n            parsedData[fieldText] = data.text;\n\n            const response = await dc.model.create(parsedData);\n\n            return {\n               id: response.id,\n            };\n         }\n\n         async updateModule(id, data) {\n            const parsedData = {};\n\n            parsedData[fieldName] = data.name;\n            parsedData[fieldText] = data.text;\n\n            let response = {};\n\n            response = await dc.model.update(id, parsedData);\n\n            return { id: response.id };\n         }\n\n         async deleteModule(id) {\n            await dc.model.delete(id);\n\n            return { id: id };\n         }\n\n         async getModels() {\n            const reportModels = {};\n\n            // If no selected DC then get all DCs\n            (settings.datacollectionIDs.length > 0\n               ? settings.datacollectionIDs\n               : self.view.application.datacollectionIDs\n            ).forEach((dcID) => {\n               const dc = ab.datacollectionByID(dcID);\n\n               if (!dc) return;\n\n               const obj = dc.datasource;\n\n               if (!obj) return;\n\n               const reportFields = self.getReportFields(dc);\n\n               // get connected data collections\n               // let linkedFields = [];\n               // (obj.connectFields() || []).forEach((f, index) => {\n               //    let connectedDcs = ab.datacollections(\n               //       (dColl) =>\n               //          dColl &&\n               //          dColl.datasource &&\n               //          dColl.datasource.id === f.settings.linkObject\n               //    );\n               //    (connectedDcs || []).forEach((linkedDc) => {\n               //       linkedFields.push({\n               //          id: index + 1,\n               //          name: linkedDc.label,\n               //          source: dc.id,\n               //          target: linkedDc.id\n               //       });\n               //    });\n               // });\n\n               // // MOCK UP for testing\n               // let linkedFields = [\n               //    {\n               //       id: \"id\",\n               //       name: \"id\",\n               //       source: \"39378ee0-38f0-4b9d-a5aa-dddc61137fcd\", // Player\n               //       target: \"0de82362-4ab5-4f0f-8cfa-d1288d173cba\" // Team\n               //    }\n               // ];\n\n               reportModels[dc.id] = {\n                  id: dc.id,\n                  name: dc.label,\n                  data: reportFields,\n                  refs: [],\n               };\n            });\n\n            return reportModels;\n         }\n\n         async getQueries() {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return [];\n\n            return (\n               (\n                  await dc.model.findAll({\n                     where: {\n                        uuid: moduleID,\n                     },\n                  })\n               ).data[0][fieldQueries] || []\n            );\n         }\n\n         async addQuery(data) {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return {};\n\n            const moduleData = (\n               await dc.model.findAll({\n                  where: {\n                     uuid: moduleID,\n                  },\n               })\n            ).data[0];\n\n            if (moduleData == null) return {};\n\n            const queries = [...(moduleData[fieldQueries] || [])];\n            const queryID = abWebix.uid();\n\n            queries.push(Object.assign({ id: queryID }, data));\n\n            const parsedData = {};\n\n            parsedData[fieldQueries] = queries.sort((a, b) => {\n               if (a.name < b.name) return -1;\n\n               if (a.name > b.name) return 1;\n\n               return 0;\n            });\n\n            await dc.model.update(moduleID, parsedData);\n\n            return { id: queryID };\n         }\n\n         async updateQuery(id, data) {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return {};\n\n            const moduleData = (\n               await dc.model.findAll({\n                  where: {\n                     uuid: moduleID,\n                  },\n               })\n            ).data[0];\n\n            if (moduleData == null) return {};\n\n            const queries = [...(moduleData[fieldQueries] || [])];\n            const queryIndex = queries.findIndex((e) => e.id === id);\n\n            queries[queryIndex] = Object.assign({ id }, data);\n\n            const parsedData = {};\n\n            parsedData[fieldQueries] = queries.sort((a, b) => {\n               if (a.name < b.name) return -1;\n\n               if (a.name > b.name) return 1;\n\n               return 0;\n            });\n\n            await dc.model.update(moduleID, parsedData);\n\n            return { id };\n         }\n\n         async deleteQuery(id) {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return {};\n\n            const moduleData = (\n               await dc.model.findAll({\n                  where: {\n                     uuid: moduleID,\n                  },\n               })\n            ).data[0];\n\n            if (moduleData == null) return {};\n\n            const queries = moduleData[fieldQueries] || [];\n            const queryIndex = queries.findIndex((e) => e.id === id);\n\n            if (queryIndex >= 0) {\n               const parsedData = {};\n\n               parsedData[fieldQueries] = queries\n                  .filter((e, i) => i !== queryIndex)\n                  .sort((a, b) => {\n                     if (a.name < b.name) return -1;\n\n                     if (a.name > b.name) return 1;\n\n                     return 0;\n                  });\n\n               await dc.model.update(moduleID, parsedData);\n            }\n\n            return { id: id };\n         }\n\n         async getData(config) {\n            let result = [];\n            let pullDataTasks = [];\n            let dcIds = [];\n            let dcData = {};\n            let reportFields = [];\n\n            // pull data of the base and join DCs\n            dcIds.push(config.data);\n            (config.joins || []).forEach((j) => {\n               dcIds.push(j.sid);\n               dcIds.push(j.tid);\n            });\n            dcIds = ab.uniq(dcIds);\n            dcIds.forEach((dcId) => {\n               pullDataTasks.push(\n                  new Promise((resolve, reject) => {\n                     const getData = async () => {\n                        try {\n                           dcData[dcId] = (await self.getData(dcId)) || [];\n\n                           resolve();\n                        } catch (err) {\n                           reject(err);\n                        }\n                     };\n\n                     getData();\n                  })\n               );\n            });\n\n            dcIds.forEach((dcId) => {\n               const dataCol = ab.datacollectionByID(dcId);\n\n               if (!dataCol) return;\n\n               reportFields = reportFields.concat(\n                  self.getReportFields(dataCol).map((f) => {\n                     // change format of id to match the report widget\n                     f.id = `${dcId}.${f.id}`; // dc_id.field_id\n                     return f;\n                  })\n               );\n            });\n\n            await Promise.all(pullDataTasks);\n\n            // the data result equals data of the base DC\n            result = dcData[config.data] || [];\n\n            if (config.joins?.length)\n               (config.joins || []).forEach((j) => {\n                  const sourceDc = ab.datacollectionByID(j.sid);\n                  if (!sourceDc) return;\n\n                  const sourceObj = sourceDc.datasource;\n                  if (!sourceObj) return;\n\n                  const targetDc = ab.datacollectionByID(j.tid);\n                  if (!targetDc) return;\n\n                  const targetObj = targetDc.datasource;\n                  if (!targetObj) return;\n\n                  const sourceLinkField = sourceObj.fieldByID(j.sf);\n                  const targetLinkField = targetObj.fieldByID(j.tf);\n                  if (!sourceLinkField && !targetLinkField) return;\n\n                  const sourceData = dcData[j.sid] || [];\n                  const targetData = dcData[j.tid] || [];\n\n                  sourceData.forEach((sData) => {\n                     targetData.forEach((tData) => {\n                        let sVal =\n                           sData[\n                              sourceLinkField\n                                 ? `${j.sid}.${sourceLinkField.columnName}.id`\n                                 : `${j.sid}.id`\n                           ] || [];\n\n                        let tVal =\n                           tData[\n                              targetLinkField\n                                 ? `${j.tid}.${targetLinkField.columnName}.id`\n                                 : `${j.tid}.id`\n                           ] || [];\n\n                        if (!Array.isArray(sVal)) sVal = [sVal];\n\n                        if (!Array.isArray(tVal)) tVal = [tVal];\n\n                        // Add joined row to the result array\n                        const matchedVal = sVal.filter(\n                           (val) => tVal.indexOf(val) > -1\n                        );\n\n                        if (matchedVal?.length) {\n                           const updateRows =\n                              result.filter(\n                                 (r) =>\n                                    r[`${j.sid}.id`] === sData[`${j.sid}.id`] &&\n                                    !r[`${j.tid}.id`]\n                              ) || [];\n\n                           if (updateRows?.length)\n                              (updateRows || []).forEach((r) => {\n                                 for (const key in tData)\n                                    if (key !== \"id\") r[key] = tData[key];\n                              });\n                           else\n                              result.push(\n                                 Object.assign(\n                                    ab.cloneDeep(sData),\n                                    ab.cloneDeep(tData)\n                                 )\n                              );\n                        }\n                     });\n                  });\n               });\n\n            // filter & sort\n            const queryVal = JSON.parse(config.query || \"{}\");\n\n            if (queryVal?.rules?.length)\n               queryVal.rules.forEach((r) => {\n                  if (!r || !r.type || !r.condition) return;\n\n                  switch (r.type) {\n                     case \"date\":\n                        // Convert string to Date object\n                        if (r.condition.filter) {\n                           if (typeof r.condition.filter === \"string\")\n                              r.condition.filter = ab.rules.toDate(\n                                 r.condition.filter\n                              );\n\n                           if (\n                              r.condition.filter.start &&\n                              typeof r.condition.filter.start === \"string\"\n                           )\n                              r.condition.filter.start = ab.rules.toDate(\n                                 r.condition.filter.start\n                              );\n\n                           if (\n                              r.condition.filter.end &&\n                              typeof r.condition.filter.end === \"string\"\n                           )\n                              r.condition.filter.end = ab.rules.toDate(\n                                 r.condition.filter.end\n                              );\n                        }\n\n                        break;\n                  }\n               });\n\n            // create a new query widget to get the filter function\n            const filterElem = abWebix.ui({\n               view: \"query\",\n               fields: reportFields,\n               value: queryVal,\n            });\n\n            // create a new data collection and apply the query filter\n            const tempDc = new abWebix.DataCollection();\n\n            tempDc.parse(result);\n\n            // filter\n            let filterFn;\n\n            try {\n               filterFn = filterElem.getFilterFunction();\n            } catch (error) {\n               // continue regardless of error\n            }\n\n            if (filterFn) tempDc.filter(filterFn);\n\n            // sorting\n            (config.sort || []).forEach((sort) => {\n               if (sort.id)\n                  tempDc.sort({\n                     as: \"string\",\n                     dir: sort.mod || \"asc\",\n                     by: `#${sort.id}#`,\n                  });\n            });\n\n            result = tempDc.serialize();\n\n            // clear\n            filterElem.destructor();\n            tempDc.destructor();\n\n            // group by\n            if (config?.group?.length) {\n               result = _.groupBy(result, (e) => {\n                  return config.group\n                     .map((column) => {\n                        const parsedColumn = column.split(\".\");\n                        const originalColumn =\n                           parsedColumn.length > 2\n                              ? `${parsedColumn[1]}.${parsedColumn[2]}`\n                              : column;\n                        const reportField = reportFields.find(\n                           (reportField) => reportField.id === originalColumn\n                        );\n\n                        switch (reportField.type) {\n                           case \"date\": {\n                              const dateStringData = abWebix.i18n.dateFormatStr(\n                                 e[originalColumn]\n                              );\n                              const parsedDateStringData =\n                                 dateStringData.split(\"/\");\n\n                              switch (parsedColumn[0]) {\n                                 case \"day\":\n                                    e[column] = parsedDateStringData[1];\n\n                                    return parsedDateStringData[1];\n\n                                 case \"month\":\n                                    e[column] = parsedDateStringData[0];\n\n                                    return parsedDateStringData[0];\n\n                                 case \"year\":\n                                    e[column] = parsedDateStringData[2];\n\n                                    return parsedDateStringData[2];\n\n                                 case \"yearmonth\": {\n                                    e[\n                                       column\n                                    ] = `${parsedDateStringData[0]}/${parsedDateStringData[2]}`;\n\n                                    return e[column];\n                                 }\n\n                                 default:\n                                    e[column] = dateStringData;\n\n                                    return dateStringData;\n\n                                 // switch (reportField.abField.key) {\n                                 //    case \"datetime\":\n                                 //       return abWebix.i18n.fullDateFormatStr(\n                                 //          e[originalColumn]\n                                 //       );\n\n                                 //    default:\n                                 //       break;\n                                 // }\n                              }\n                           }\n\n                           default:\n                              return e[originalColumn]?.toString?.();\n                        }\n                     })\n                     .join(\"\");\n               });\n\n               result = Object.values(result).map((groupedData) => {\n                  const groupedResult = {};\n\n                  (config.columns || []).forEach((col) => {\n                     const agg = col.split(\".\")[0];\n                     const rawCol = col.replace(\n                        /sum.|avg.|count.|max.|min./g,\n                        \"\"\n                     );\n\n                     switch (agg) {\n                        case \"sum\":\n                           groupedResult[col] = ab.sumBy(groupedData, rawCol);\n                           break;\n                        case \"avg\":\n                           groupedResult[col] = ab.meanBy(groupedData, rawCol);\n                           break;\n                        case \"count\":\n                           groupedResult[col] = (groupedData || []).length;\n                           break;\n                        case \"max\":\n                           groupedResult[col] =\n                              (ab.maxBy(groupedData, rawCol) || {})[rawCol] ||\n                              \"\";\n                           break;\n                        case \"min\":\n                           groupedResult[col] =\n                              (ab.minBy(groupedData, rawCol) || {})[rawCol] ||\n                              \"\";\n                           break;\n                        default:\n                           groupedResult[col] = groupedData[0][col];\n                           break;\n                     }\n                  });\n\n                  return groupedResult;\n               });\n            }\n\n            return result;\n         }\n\n         async getOptions(fields) {\n            return [];\n         }\n         async getFieldData(fieldId) {\n            return [];\n         }\n      }\n      class MyLocal extends reports.services.Local {\n         constructor(app) {\n            super(app);\n\n            this._currentModuleID = \"\";\n         }\n\n         getQueries() {\n            const currentModuleID = $$(ids.reportManager).getState().moduleId;\n\n            if (this._currentModuleID !== currentModuleID) {\n               this._currentModuleID = currentModuleID;\n               this._queries = null;\n            }\n\n            return super.getQueries();\n         }\n      }\n      class MyEditor extends reports.views.editor {\n         init() {\n            super.init();\n\n            if (!self.readonly || settings.editMode === 1) return;\n\n            const $tabbar = this.$$(\"tabbar\");\n\n            if (settings.hideCommonTab === 1) {\n               const listener = () => {\n                  $tabbar.callEvent(\"onChange\", [\"data\"]);\n                  $tabbar.disableOption(\"common\");\n                  self.removeListener(\"editMode.tabbar.query\", listener);\n               };\n\n               self.on(\"editMode.tabbar.query\", listener);\n            }\n\n            if (settings.hideDataTab === 1) $tabbar.disableOption(\"other\");\n\n            if (settings.hideViewTab === 1) $tabbar.disableOption(\"structure\");\n\n            this.on(this.app, \"editMode.button.back\", () => {\n               this.Reset(true);\n            });\n         }\n\n         Reset(forceReset = false) {\n            const id = this.AppState.moduleId;\n            const condition = self.readonly && !(settings.editMode === 1);\n\n            if (!condition || id == null || forceReset) super.Reset();\n\n            this.Local.getModule(id);\n         }\n\n         TrackChanges() {\n            super.TrackChanges();\n\n            if (settings.hideCommonTab) self.emit(\"editMode.tabbar.query\");\n         }\n      }\n      class MyToolBar extends reports.views.toolbar {\n         config() {\n            const ui = super.config();\n\n            if (self.readonly && !(settings.editMode === 1)) {\n               ui.elements[5].cols = ui.elements[5].cols.map((e) =>\n                  Object.assign(e, {\n                     hidden: self.readonly && !(settings.editMode === 1),\n                  })\n               );\n\n               ui.elements[5].cols.push(\n                  {},\n                  {\n                     view: \"button\",\n                     type: \"icon\",\n                     icon: \"wxi-angle-double-left\",\n                     label: self.label(\"Back\"),\n                     localId: \"forceReset\",\n                     click: () => {\n                        return this.app.callEvent(\"editMode.button.back\", []);\n                     },\n                  }\n               );\n            }\n\n            return ui;\n         }\n      }\n      class MyEditorCommon extends reports.views[\"editor/common\"] {\n         config() {\n            const ui = super.config();\n\n            if (!self.readonly) return ui;\n\n            return Object.assign({}, ui, {\n               elements: ui.elements.map((e, i) =>\n                  Object.assign(\n                     {\n                        hidden: !(i >= 2 && i < 5),\n                     },\n                     e\n                  )\n               ),\n            });\n         }\n\n         ShowDeleteButton() {\n            super.ShowDeleteButton();\n\n            if (self.readonly) this.$$(\"delete\").hide();\n         }\n      }\n      class MyEditorData extends reports.views[\"editor/data\"] {\n         config() {\n            const ui = super.config();\n\n            if (self.readonly) {\n               ui.rows[0].rows[0].hidden = true;\n\n               ui.rows[0].rows.unshift({\n                  label: \"Filtering query\",\n                  view: \"label\",\n                  width: 120,\n               });\n            }\n\n            return ui;\n         }\n      }\n      class MyTable extends reports.views.table {\n         // NOTE: fix format of date column type\n         GetColumnConfig(a) {\n            let config = {\n               id: a.id,\n               header:\n                  !a.meta.header || a.meta.header === \"none\"\n                     ? a.meta.name || a.name\n                     : [\n                          a.meta.name || a.name,\n                          {\n                             content:\n                                a.header === \"text\"\n                                   ? \"textFilter\"\n                                   : \"richSelectFilter\",\n                          },\n                       ],\n               type: a.type,\n               sort: \"date\",\n               width: a.width || 200,\n            };\n\n            const abField = self.AB.datacollectionByID(\n               a.mid\n            )?.datasource.fields((field) => field.columnName === a.name)[0];\n\n            switch (a.type) {\n               case \"date\":\n                  config.format = (val) => {\n                     // check valid date\n                     if (val?.getTime && !isNaN(val.getTime()))\n                        return abField?.key === \"datetime\"\n                           ? abWebix.i18n.fullDateFormatStr(val)\n                           : abWebix.i18n.dateFormatStr(val);\n                     else return \"\";\n                  };\n\n                  break;\n\n               default:\n                  config = super.GetColumnConfig(a);\n\n                  break;\n            }\n\n            return config;\n         }\n\n         async GetTableData(mod) {\n            const data = await super.GetTableData(mod);\n            const buckets = mod.buckets;\n\n            if (!buckets) return data;\n\n            if (buckets.length === 0) return data;\n\n            const columnIDs = mod.columns.map((e) => e.id);\n            const parsedBuckets = mod.buckets.filter((bucket) =>\n               columnIDs.includes(bucket.column)\n            );\n\n            if (parsedBuckets.length === 0) return data;\n\n            const records = data[0].map((e) => {\n               const parseRecord = {};\n\n               parsedBuckets.forEach((bucket) => {\n                  const options = bucket.options;\n\n                  for (let i = 0; i < options.length; i++)\n                     if (\n                        options[i].values?.includes(e[bucket.column]) ||\n                        i === options.length - 1\n                     ) {\n                        parseRecord[bucket.column] = options[i].id;\n\n                        break;\n                     }\n               });\n\n               return Object.assign({}, e, parseRecord);\n            });\n\n            return [records, data[1]];\n         }\n      }\n\n      const _ui = super.ui([\n         {\n            id: ids.reportManager,\n            view: \"reports\",\n            toolbar: true,\n            override: new Map([\n               [reports.services.Backend, MyBackend],\n               [reports.services.Local, MyLocal],\n               [reports.views.editor, MyEditor],\n               [reports.views.toolbar, MyToolBar],\n               [reports.views[\"editor/common\"], MyEditorCommon],\n               [reports.views[\"editor/data\"], MyEditorData],\n               [reports.views.table, MyTable],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n      delete _ui.height;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      this.AB = AB;\n      this.readonly = accessLevel < 2;\n\n      const $reportManager = $$(this.ids.reportManager);\n      const state = $reportManager.getState();\n\n      state.readonly = this.readonly;\n      state.mode =\n         this.readonly && this.settings.editMode === 1 ? \"edit\" : \"list\";\n   }\n\n   getReportFields(dc) {\n      if (!dc) return [];\n\n      const object = dc.datasource;\n      if (!object) return [];\n\n      const fields = [];\n\n      object.fields().forEach((f) => {\n         const columnFormat = f.columnHeader();\n\n         if (!f.isConnection) {\n            let type = \"text\";\n\n            switch (f.key) {\n               case \"boolean\":\n               case \"number\":\n               case \"date\":\n                  type = f.key;\n\n                  break;\n\n               case \"datetime\":\n                  type = \"date\";\n\n                  break;\n\n               default:\n                  break;\n            }\n\n            fields.push({\n               id: f.columnName,\n               name: f.label,\n               filter: f.fieldIsFilterable(),\n               edit: false,\n               type: type,\n               format: columnFormat.format,\n               options: columnFormat.options,\n               ref: \"\",\n               key: false,\n               show: true,\n               abField: f,\n            });\n\n            return;\n         }\n\n         if (f.isSource()) {\n            const linkedDcs = this.view.application.datacollectionsIncluded(\n               (dc) =>\n                  this.settings.datacollectionIDs.includes(dc.id) &&\n                  dc.settings.datasourceID === f.settings.linkObject\n            );\n\n            (linkedDcs || []).forEach((linkDc) => {\n               fields.push({\n                  id: f.id,\n                  name: f.label,\n                  filter: false,\n                  edit: false,\n                  type: \"reference\",\n                  ref: linkDc.id,\n                  key: false,\n                  show: false,\n               });\n            });\n         }\n      });\n\n      return fields;\n   }\n\n   async getData(datacollectionId) {\n      const datacollection = this.AB.datacollectionByID(datacollectionId);\n      if (!datacollection) return [];\n\n      const object = datacollection.datasource;\n      if (!object) return [];\n\n      await this.waitInitializingDCEvery(1000, datacollection);\n\n      const reportFields = this.getReportFields(datacollection);\n      const reportData = [];\n      const rawData = datacollection.getData();\n\n      (rawData || []).forEach((row) => {\n         const reportRow = { id: row.id };\n\n         reportRow[`${datacollection.id}.id`] = row.id;\n\n         object.fields().forEach((field) => {\n            const columnName = field.columnName;\n            const col = `${datacollection.id}.${columnName}`;\n\n            if (field) {\n               // FK value of the connect field\n               if (field.isConnection) {\n                  let $pk = field.datasourceLink.PK();\n                  if (Array.isArray(row[columnName]))\n                     reportRow[`${col}.id`] = row[columnName].map(\n                        (link) => link[$pk] || link.id || link\n                     );\n                  else if (row[columnName])\n                     reportRow[`${col}.id`] =\n                        row[columnName][$pk] ||\n                        row[columnName].id ||\n                        row[columnName];\n               } else reportRow[col] = field.format(row);\n            } else reportRow[col] = row[columnName];\n\n            const rField = reportFields.find(\n               (f) => f.id === columnName || f.id === field.id\n            );\n\n            if (!rField) return;\n\n            switch (rField.type) {\n               case \"text\":\n               case \"reference\":\n                  reportRow[col] = (reportRow[col] || \"\").toString();\n                  break;\n\n               case \"number\":\n                  reportRow[col] = parseFloat(\n                     (reportRow[col] || 0).toString().replace(/[^\\d.-]/g, \"\")\n                  );\n                  break;\n\n               case \"date\":\n                  reportRow[col] = row[columnName];\n                  if (reportRow[col]) {\n                     if (!(reportRow[col] instanceof Date))\n                        reportRow[col] = this.AB.rules.toDate(row[columnName]);\n                  } else reportRow[col] = \"\";\n                  break;\n            }\n         });\n\n         reportData.push(reportRow);\n      });\n\n      return reportData;\n   }\n\n   async onShow() {\n      super.onShow();\n\n      const ids = this.ids;\n      const $component = $$(ids.component);\n\n      if ($component != null && !this.__isShowing) {\n         this.__isShowing = true;\n\n         $component.reconstruct();\n      }\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewSchedulerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewScheduler_${baseView.id}`,\n         Object.assign(\n            {\n               scheduler: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const ab = this.AB;\n      const self = this;\n      const abWebix = this.AB.Webix;\n      const settings = this.settings;\n      const dc = this.datacollection;\n      const fieldName = dc?.datasource.fieldByID(\n         settings.dataviewFields.name\n      )?.columnName;\n      const fieldStart = dc?.datasource.fieldByID(\n         settings.dataviewFields.start\n      )?.columnName;\n      const fieldEnd = dc?.datasource.fieldByID(\n         settings.dataviewFields.end\n      )?.columnName;\n      const fieldAllDay = dc?.datasource.fieldByID(\n         settings.dataviewFields.allDay\n      )?.columnName;\n      const fieldRepeat = dc?.datasource.fieldByID(\n         settings.dataviewFields.repeat\n      )?.columnName;\n      const fieldCalendar = dc?.datasource.fieldByID(\n         settings.dataviewFields.calendar\n      )?.columnName;\n      const fieldEventColor = dc?.datasource.fieldByID(\n         settings.dataviewFields.color\n      )?.columnName;\n      const fieldNotes = dc?.datasource.fieldByID(\n         settings.dataviewFields.notes\n      )?.columnName;\n      const fieldOriginID = dc?.datasource.fieldByID(\n         settings.dataviewFields.originID\n      )?.columnName;\n      const fieldSectionID = dc?.datasource.fieldByID(\n         settings.dataviewFields.sectionID\n      )?.columnName;\n      const fieldUnitID = dc?.datasource.fieldByID(\n         settings.dataviewFields.unitID\n      )?.columnName;\n      const dcCalendar = ab.datacollectionByID(\n         this.settings.calendarDataviewID\n      );\n      const fieldTitle = dcCalendar?.datasource.fieldByID(\n         settings.calendarDataviewFields.title\n      )?.columnName;\n      const fieldCalendarColor = dcCalendar?.datasource.fieldByID(\n         settings.calendarDataviewFields.color\n      )?.columnName;\n      const fieldActive = dcCalendar?.datasource.fieldByID(\n         settings.calendarDataviewFields.active\n      )?.columnName;\n      const timelineOptions = [];\n\n      Object.keys(settings.timeline).forEach((key) => {\n         if (settings.timeline[key] === 0) return;\n\n         timelineOptions.push({\n            id: `${key}`,\n            value: `${key.charAt(0).toUpperCase()}${key.slice(1)}`,\n         });\n      });\n\n      const _ui = super.ui([\n         {\n            padding: 6,\n            cols: [\n               { view: \"label\", width: 150, label: \"Export events data to: \" },\n               {\n                  view: \"button\",\n                  width: 100,\n                  value: this.label(\"Excel\"),\n                  hidden: settings.export.excel === 0,\n                  click: () => {\n                     abWebix.toExcel(ids.scheduler);\n                  },\n               },\n               {\n                  view: \"button\",\n                  width: 100,\n                  value: this.label(\"CSV\"),\n                  hidden: settings.export.csv === 0,\n                  click: () => {\n                     abWebix.toCSV(ids.scheduler);\n                  },\n               },\n               {\n                  view: \"button\",\n                  width: 100,\n                  value: this.label(\"PDF\"),\n                  hidden: settings.export.pdf === 0,\n                  click: () => {\n                     abWebix.toPDF(ids.scheduler, { autowidth: true });\n                  },\n               },\n               {},\n            ],\n         },\n         {\n            id: ids.scheduler,\n            view: \"scheduler\",\n            date: new Date(),\n            readonly: settings.readonly === 1,\n            timeline: settings.timeline.timeline === 1,\n            override: new Map([\n               [\n                  scheduler.services.Backend,\n                  class MyBackend extends reports.services.Backend {\n                     async addCalendar(obj) {\n                        if (dcCalendar == null) return {};\n\n                        const data = {};\n\n                        data[fieldTitle] = obj.text;\n                        data[fieldCalendarColor] = obj.color;\n                        data[fieldActive] = obj.active;\n\n                        const response = await dcCalendar.model.create(data);\n\n                        return { id: response.id };\n                     }\n                     async addEvent(obj) {\n                        if (dc == null) return {};\n\n                        const data = {};\n\n                        data[fieldName] = obj.text;\n                        data[fieldStart] = new Date(obj.start_date);\n                        data[fieldEnd] = new Date(obj.end_date);\n                        data[fieldAllDay] = obj.all_day;\n                        data[fieldRepeat] = obj.recurring;\n                        data[fieldCalendar] = obj.calendar;\n                        data[fieldEventColor] = obj.color;\n                        data[fieldSectionID] = obj.section || \"No Section\";\n                        data[fieldUnitID] = obj.units || \"No Unit\";\n                        data[fieldNotes] = obj.details;\n                        data[fieldOriginID] = obj.origin_id;\n\n                        const response = await dc.model.create(data);\n\n                        return { id: response.id };\n                     }\n                     async calendars() {\n                        // if we manage a datacollection, then make sure it has started\n                        // loading it's data when we are showing our component.\n                        if (dcCalendar == null) return [];\n\n                        await self.waitInitializingDCEvery(1000, dcCalendar);\n\n                        return dcCalendar.getData().map((e) => {\n                           return {\n                              id: e.id,\n                              text: e[fieldTitle],\n                              color: e[fieldCalendarColor],\n                              active: e[fieldActive],\n                           };\n                        });\n                     }\n                     async events(params) {\n                        // if we manage a datacollection, then make sure it has started\n                        // loading it's data when we are showing our component.\n                        if (dc == null) return [];\n\n                        await self.waitInitializingDCEvery(1000, dc);\n\n                        const units = await this.units();\n                        const sections = await this.sections();\n\n                        return dc.getData().map((e) => {\n                           let unitID = units.find(\n                              (u) => u.id === e[fieldUnitID]\n                           )?.id;\n                           let sectionID = sections.find(\n                              (s) => s.id === e[fieldSectionID]\n                           )?.id;\n\n                           if (sectionID == null || unitID == null) {\n                              sectionID = sectionID || \"No Section\";\n                              unitID = unitID || \"No Unit\";\n\n                              // const data = {};\n\n                              // data[fieldSectionID] = sectionID;\n                              // data[fieldUnitID] = unitID;\n\n                              // dc.model.update(e.id, data);\n                           }\n\n                           return {\n                              id: e.id,\n                              text: e[fieldName],\n                              start_date: abWebix.Date.dateToStr(\n                                 \"%Y-%m-%d %H:%i:%s\"\n                              )(e[fieldStart]),\n                              end_date: abWebix.Date.dateToStr(\n                                 \"%Y-%m-%d %H:%i:%s\"\n                              )(e[fieldEnd]),\n                              all_day: e[fieldAllDay],\n                              recurring: e[fieldRepeat],\n                              calendar: e[fieldCalendar],\n                              color: e[fieldEventColor],\n                              section: sectionID,\n                              units: unitID,\n                              details: e[fieldNotes],\n                              origin_id: e[fieldOriginID],\n                           };\n                        });\n                     }\n                     async removeCalendar(id) {\n                        await dcCalendar.model.delete(id);\n                     }\n                     async removeEvent(id) {\n                        await dc.model.delete(id);\n                     }\n                     async sections() {\n                        return [\n                           { text: \"No Section\", id: \"No Section\" },\n                        ].concat(\n                           settings.timelineSectionList.split(\", \").map((e) => {\n                              return {\n                                 id: e,\n                                 text: e,\n                              };\n                           })\n                        );\n                     }\n                     async units() {\n                        return [{ id: \"No Unit\", value: \"No Unit\" }].concat(\n                           settings.unitList.split(\", \").map((e) => {\n                              return {\n                                 id: e,\n                                 value: e,\n                              };\n                           })\n                        );\n                     }\n                     async updateCalendar(id, obj) {\n                        if (dcCalendar == null) return {};\n\n                        const data = {};\n\n                        data[fieldTitle] = obj.text;\n                        data[fieldCalendarColor] = obj.color;\n                        data[fieldActive] = obj.active;\n\n                        await dcCalendar.model.update(id, data);\n                     }\n                     async updateEvent(id, obj, mode, date) {\n                        if (dc == null) return {};\n\n                        const data = {};\n\n                        data[fieldName] = obj.text;\n                        data[fieldStart] = new Date(obj.start_date);\n                        data[fieldEnd] = new Date(obj.end_date);\n                        data[fieldAllDay] = obj.all_day;\n                        data[fieldRepeat] = obj.recurring;\n                        data[fieldCalendar] = obj.calendar;\n                        data[fieldEventColor] = obj.color;\n                        data[fieldSectionID] = obj.section || \"No Section\";\n                        data[fieldUnitID] = obj.units || \"No Unit\";\n                        data[fieldNotes] = obj.details;\n                        data[fieldOriginID] = obj.origin_id;\n\n                        await dc.model.update(id, data);\n                     }\n                  },\n               ],\n               [\n                  scheduler.views[\"bars/nav\"],\n                  class CustomBarsView extends scheduler.views[\"bars/nav\"] {\n                     config() {\n                        const uiNav = super.config();\n                        uiNav.width = 160;\n                        uiNav.options = timelineOptions;\n                        return uiNav;\n                     }\n                  },\n               ],\n               [\n                  scheduler.views[\"bars/navpopup\"],\n                  class CustomNavPopupView extends scheduler.views[\n                     \"bars/navpopup\"\n                  ] {\n                     config() {\n                        const uiNavPopup = super.config();\n\n                        const options = timelineOptions.map((e) =>\n                           Object.assign({ icon: `shi-${e.id}` }, e)\n                        );\n\n                        if (this.app.config.calendars)\n                           uiNavPopup.body.body.rows[0].data = options;\n                        else uiNavPopup.body.data = options;\n\n                        return uiNavPopup;\n                     }\n                  },\n               ],\n               [\n                  scheduler.views[\"modes/day/multiday\"],\n                  class CustomModesDayMultiday extends scheduler.views[\n                     \"modes/day/multiday\"\n                  ] {\n                     LimitData(data) {\n                        // Get an error the case when the data parameter is undefined.\n                        super.LimitData(data || []);\n                     }\n                  },\n               ],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async onShow() {\n      super.onShow();\n\n      const ids = this.ids;\n      const $component = $$(ids.component);\n\n      if ($component != null && !this.__isShowing) {\n         this.__isShowing = true;\n\n         $component.reconstruct();\n      }\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewTabComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewTab_${baseView.id}`,\n         Object.assign(\n            {\n               tab: \"\",\n\n               sidebar: \"\",\n               expandMenu: \"\",\n               collapseMenu: \"\",\n\n               popupTabManager: \"\",\n               popupTabManagerForm: \"\",\n               popupTabManagerSaveButton: \"\",\n            },\n            ids\n         )\n      );\n\n      this.viewComponents =\n         this.viewComponents ||\n         baseView\n            .views((v) => v.getUserAccess())\n            .map((v) => {\n               return {\n                  view: v,\n                  // component: v.component(App)\n               };\n            });\n   }\n\n   ui() {\n      const ids = this.ids;\n      const baseView = this.view;\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      let _ui = null;\n\n      // We are going to make a custom icon using the first letter of a menu item for menu items that don't have an icon\n      // to do this we need to modify the default template with the method webix recommended form this snippet https://snippet.webix.com/b566d9f8\n      abWebix.type(abWebix.ui.tree, {\n         baseType: \"sideBar\", // inherit everything else from sidebar type\n         name: \"customIcons\",\n         icon: (obj, common) => {\n            if (obj.icon.length)\n               return [\n                  \"<span class='webix_icon webix_sidebar_icon fa fa-fw fa-\",\n                  obj.icon,\n                  \"'></span>\",\n               ].join(\"\");\n\n            return [\n               \"<span class='webix_icon webix_sidebar_icon sidebarCustomIcon'>\",\n               obj.value.charAt(0).toUpperCase(),\n               \"</span>\",\n            ].join(\"\");\n         },\n      });\n\n      const viewComponents = this.viewComponents;\n      const settings = this.settings;\n\n      if (viewComponents.length > 0) {\n         if (settings.stackTabs) {\n            // define your menu items from the view components\n            const menuItems = viewComponents.map((vc) => {\n               const view = vc.view;\n\n               return {\n                  id: `${view.id}_menu`,\n                  value: view.label,\n                  icon: view.tabicon ? view.tabicon : \"\",\n               };\n            });\n\n            if (menuItems.length) {\n               // create a menu item for the collapse option to use later\n               const collapseMenu = {\n                  id: ids.collapseMenu,\n                  value: this.label(\"Collapse Menu\"),\n                  icon: \"chevron-circle-left\",\n               };\n\n               // create a menu item from the expand option to use later\n               const expandMenu = {\n                  id: ids.expandMenu,\n                  value: this.label(\"Expand Menu\"),\n                  icon: \"chevron-circle-right\",\n                  hidden: true,\n               };\n\n               // find out what the first option is so we can set it later\n               let selectedItem = `${viewComponents[0].view.id}_menu`;\n\n               const abStorage = ab.Storage;\n               const sidebar = {\n                  view: \"sidebar\",\n                  type: \"customIcons\", // define the sidebar type with the new template created above\n                  id: ids.sidebar,\n                  height: settings.height,\n                  width: settings.sidebarWidth ? settings.sidebarWidth : 0,\n                  scroll: true,\n                  position: settings.sidebarPos ? settings.sidebarPos : \"left\",\n                  css: settings.darkTheme ? \"webix_dark\" : \"\",\n                  data: menuItems.concat(collapseMenu), // add you menu items along with the collapse option to start\n                  on: {\n                     onItemClick: (id) => {\n                        // when a menu item is clicked\n                        if (id === ids.collapseMenu) {\n                           // if it was the collapse menu item\n                           setTimeout(() => {\n                              const $sidebar = $$(ids.sidebar);\n\n                              // remove the collapse option from the menu\n                              $sidebar.remove(ids.collapseMenu);\n                              // add the expand option to the menu\n                              $sidebar.add(expandMenu);\n                              // toggle the sidebar state\n                              $sidebar.toggle();\n                              // we just clicked the collapse...but we don't wanted highlighted\n                              // so highlight the previously selected menu item\n                              $sidebar.select(selectedItem);\n                              // store this state in local storage the user preference is\n                              // remembered next time they see this sidebar\n                              abStorage.set(\n                                 `${ids.tab}-state`,\n                                 $sidebar.getState()\n                              );\n                           }, 0);\n                        } else if (id === ids.expandMenu) {\n                           setTimeout(() => {\n                              const $sidebar = $$(ids.sidebar);\n\n                              // remove the expand option from the menu\n                              $sidebar.remove(ids.expandMenu);\n                              // add the collapse option to the menu\n                              $sidebar.add(collapseMenu);\n                              // toggle the sidebar state\n                              $sidebar.toggle();\n                              // we just clicked the collapse...but we don't wanted highlighted\n                              // so highlight the previously selected menu item\n                              $sidebar.select(selectedItem);\n                              // store this state in local storage the user preference is\n                              // remembered next time they see this sidebar\n                              abStorage.set(\n                                 `${ids.tab}-state`,\n                                 $sidebar.getState()\n                              );\n                           }, 0);\n                        } else {\n                           // store the selecte menu item just in case someone toggles the menu later\n                           selectedItem = id;\n                           // if the menu item is a regular menu item\n                           // call the onShow with the view id to load the view\n\n                           id = id.replace(\"_menu\", \"\");\n                           let node = $$(id);\n                           if (node) {\n                              node.show(false, false);\n                           } else {\n                              // How often does this occure?\n                              let msg = `ABViewTabComponent[${this.name}][${this.id}] could not resolve UI panel for provided menu [${selectedItem}].`;\n                              this.AB.notify(\"developer\", msg, {});\n                           }\n                           // $$(id).show(false, false);\n\n                           // onShow(id);\n                        }\n                     },\n                     onSelectChange: () => {\n                        addDataCy();\n                     },\n                     onAfterRender: () => {\n                        addDataCy();\n                     },\n                  },\n               };\n\n               const multiview = {\n                  view: \"multiview\",\n                  id: ids.tab,\n                  keepViews: true,\n                  minWidth: settings.minWidth,\n                  cells: viewComponents.map((view) => {\n                     const tabUi = {\n                        id: view.view.id,\n                        // ui will be loaded when its tab is opened\n                        view: \"layout\",\n                        rows: [],\n                     };\n\n                     return tabUi;\n                  }),\n                  on: {\n                     onViewChange: (prevId, nextId) => {\n                        this.onShow(nextId);\n                     },\n                  },\n               };\n\n               const addDataCy = function () {\n                  const $sidebar = $$(ids.sidebar);\n\n                  // set ids of controller buttons\n                  const collapseNode = $sidebar?.$view.querySelector(\n                     `[webix_tm_id=\"${ids.collapseMenu}\"]`\n                  );\n\n                  if (collapseNode)\n                     collapseNode.setAttribute(\n                        \"data-cy\",\n                        `tab-collapseMenu-${ids.collapseMenu}`\n                     );\n\n                  const expandNode = $sidebar?.$view.querySelector(\n                     `[webix_tm_id=\"${ids.expandMenu}\"]`\n                  );\n\n                  if (expandNode)\n                     expandNode.setAttribute(\n                        \"data-cy\",\n                        `tab-expandMenu-${ids.expandMenu}`\n                     );\n\n                  baseView.views((view) => {\n                     const node = $sidebar?.$view?.querySelector(\n                        `[webix_tm_id=\"${view.id}_menu\"]`\n                     );\n\n                     if (!node) {\n                        return;\n                     }\n\n                     node.setAttribute(\n                        \"data-cy\",\n                        `tab-${view.name.replace(\" \", \"\")}-${view.id}-${\n                           baseView.id\n                        }`\n                     );\n                  });\n               };\n\n               let columns = [sidebar, multiview];\n\n               if (settings.sidebarPos === \"right\") {\n                  columns = [multiview, sidebar];\n               }\n\n               _ui = {\n                  cols: columns,\n               };\n            } else\n               _ui = {\n                  view: \"spacer\",\n               };\n         } else {\n            const cells = baseView\n               .views((view) => {\n                  const accessLevel = view.getUserAccess();\n\n                  if (accessLevel > 0) {\n                     return view;\n                  }\n               })\n               .map((view) => {\n                  const tabUi = {\n                     id: view.id,\n                     // ui will be loaded when its tab is opened\n                     view: \"layout\",\n                     rows: [],\n                  };\n\n                  let tabTemplate = \"\";\n\n                  // tab icon\n                  if (view.tabicon) {\n                     if (settings.iconOnTop)\n                        tabTemplate = [\n                           \"<div class='ab-tabIconContainer'><span class='fa fa-lg fa-fw fa-\",\n                           view.tabicon,\n                           \"'></span><br/>\",\n                           view.label,\n                           \"</div>\",\n                        ].join(\"\");\n                     else\n                        tabTemplate = [\n                           \"<span class='fa fa-lg fa-fw fa-\",\n                           view.tabicon,\n                           \"'></span> \",\n                           view.label,\n                        ].join(\"\");\n                  }\n\n                  // no icon\n                  else tabTemplate = view.label;\n\n                  return {\n                     header: tabTemplate,\n                     body: tabUi,\n                  };\n               });\n\n            // if there are cells to display then return a tabview\n            if (cells.length) {\n               _ui = {\n                  rows: [\n                     {\n                        view: \"tabview\",\n                        id: ids.tab,\n                        minWidth: settings.minWidth,\n                        height: settings.height,\n                        tabbar: {\n                           height: 60,\n                           type: \"bottom\",\n                           css: settings.darkTheme ? \"webix_dark\" : \"\",\n                           on: {\n                              onAfterRender: () => {\n                                 baseView.views((view) => {\n                                    const node = $$(\n                                       ids.tab\n                                    )?.$view?.querySelector(\n                                       `[button_id=\"${view.id}\"]`\n                                    );\n\n                                    if (!node) return;\n\n                                    node.setAttribute(\n                                       \"data-cy\",\n                                       `tab ${view.name} ${view.id} ${baseView.id}`\n                                    );\n                                 });\n                              },\n                           },\n                        },\n                        multiview: {\n                           on: {\n                              onViewChange: (prevId, nextId) => {\n                                 this.onShow(nextId);\n                              },\n                           },\n                        },\n                        cells: cells,\n                     },\n                  ],\n               };\n            }\n            // else we return a spacer\n            else\n               _ui = {\n                  view: \"spacer\",\n               };\n         }\n      } else\n         _ui = {\n            view: \"spacer\",\n         };\n\n      _ui = super.ui([_ui]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n      const $tab = $$(ids.tab);\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      if ($tab) abWebix.extend($tab, abWebix.ProgressBar);\n\n      const baseView = this.view;\n      const viewComponents = this.viewComponents;\n\n      viewComponents.forEach((vc) => {\n         // vc.component.init(AB);\n\n         // Trigger 'changePage' event to parent\n         this.eventAdd({\n            emitter: vc.view,\n            eventName: \"changePage\",\n            listener: (...p) => this.changePage(...p),\n         });\n      });\n\n      // Trigger 'changeTab' event to parent\n      this.eventAdd({\n         emitter: baseView,\n         eventName: \"changeTab\",\n         listener: (...p) => this.changeTab(...p),\n      });\n\n      // initialize the sidebar and figure out if it should be collased or not\n      const $sidebar = $$(ids.sidebar);\n\n      if (!$sidebar) return;\n\n      const state = await ab.Storage.get(`${ids.tab}-state`);\n\n      if (!state) return;\n\n      // create a menu item for the collapse option to use later\n      const collapseMenu = {\n         id: ids.collapseMenu,\n         value: this.label(\"Collapse Menu\"),\n         icon: \"chevron-circle-left\",\n      };\n\n      // create a menu item from the expand option to use later\n      const expandMenu = {\n         id: ids.expandMenu,\n         value: this.label(\"Expand Menu\"),\n         icon: \"chevron-circle-right\",\n         hidden: true,\n      };\n\n      // this will collapse or expand the sidebar\n      $sidebar.setState(state);\n\n      const checkCollapseMenu = $sidebar.getItem(ids.collapseMenu) ?? null;\n      const checkExpandMenu = $sidebar.getItem(ids.expandMenu) ?? null;\n\n      // if the state is collapsed we need to make sure the expand option is available\n      if (state.collapsed) {\n         if (checkCollapseMenu && checkExpandMenu)\n            // $sidebar.remove(ids.collapseMenu);\n            $sidebar.add(expandMenu);\n      } else if (checkCollapseMenu && checkExpandMenu)\n         // $sidebar.remove(ids.collapseMenu);\n         $sidebar.add(collapseMenu);\n   }\n\n   changePage(pageId) {\n      const $tab = $$(this.ids.tab);\n\n      $tab?.blockEvent();\n      this.view.changePage(pageId);\n      $tab?.unblockEvent();\n   }\n\n   changeTab(tabViewId) {\n      const baseView = this.view;\n      const $tabViewId = $$(tabViewId);\n\n      // switch tab view\n      this.toggleParent(baseView.parent);\n\n      if (this.settings.stackTabs)\n         if (!$tabViewId.isVisible()) {\n            const showIt = setInterval(() => {\n               if ($tabViewId.isVisible()) clearInterval(showIt);\n\n               $tabViewId.show(false, false);\n            }, 200);\n         } else $$(this.ids.tab).setValue(tabViewId);\n   }\n\n   toggleParent(view) {\n      const $viewID = $$(view.id);\n\n      if (view.key === \"tab\" || view.key === \"viewcontainer\") {\n         $viewID?.show(false, false);\n      }\n      if (view.parent) {\n         this.toggleParent(view.parent);\n      }\n   }\n\n   onShow(viewId) {\n      const ids = this.ids;\n\n      let defaultViewIsSet = false;\n\n      const $sidebar = $$(ids.sidebar);\n\n      // if no viewId is given, then try to get the currently selected ID\n      if (!viewId && $sidebar)\n         viewId = $sidebar.getSelectedId().replace(\"_menu\", \"\");\n\n      const baseView = this.view;\n      const viewComponents = this.viewComponents;\n\n      viewComponents.forEach((vc) => {\n         // set default view id\n         const currView = baseView.views((view) => {\n            return view.id === vc.view.id;\n         });\n\n         let accessLevel = 0;\n\n         if (currView.length) accessLevel = currView[0].getUserAccess();\n\n         // choose the 1st View if we don't have one we are looking for.\n         if (!viewId && !defaultViewIsSet && accessLevel > 0) {\n            viewId = vc.view.id;\n\n            defaultViewIsSet = true;\n         }\n\n         // create view's component once\n         const $tab = $$(ids.tab);\n         const settings = this.settings;\n\n         if (!vc?.component && vc?.view?.id === viewId) {\n            // show loading cursor\n            if ($tab?.showProgress) $tab.showProgress({ type: \"icon\" });\n\n            vc.component = vc.view.component();\n\n            const $viewID = $$(vc.view.id);\n            const ab = this.AB;\n            const abWebix = ab.Webix;\n\n            if (settings.stackTabs) {\n               // update multiview UI\n               abWebix.ui(\n                  {\n                     // able to 'scroll' in tab view\n                     id: vc.view.id,\n                     view: \"scrollview\",\n                     css: \"ab-multiview-scrollview\",\n                     body: vc.component.ui(),\n                  },\n                  $viewID\n               );\n            } else {\n               // update tab UI\n               abWebix.ui(\n                  {\n                     // able to 'scroll' in tab view\n                     id: vc.view.id,\n                     view: \"scrollview\",\n                     css: \"ab-tabview-scrollview\",\n                     body: vc.component.ui(),\n                  },\n                  $viewID\n               );\n            }\n\n            // for tabs we need to look at the view's accessLevels\n            accessLevel = vc.view.getUserAccess();\n\n            vc.component.init(ab, accessLevel);\n\n            // done\n            setTimeout(() => {\n               // $$(v.view.id).adjust();\n\n               $tab?.hideProgress?.();\n               // check if tab has a hint\n               // if (vc?.view?.settings?.hintID) {\n               //    // fetch the steps for the hint\n               //    let hint = ab.hintID(vc.view.settings.hintID);\n               //    hint.createHintUI();\n               // }\n            }, 10);\n         }\n\n         // show UI\n         if (vc?.view?.id === viewId && vc?.component?.onShow)\n            vc.component.onShow();\n\n         if (settings.stackTabs && vc?.view?.id === viewId) {\n            $$(viewId)?.show(false, false);\n            $sidebar?.select(`${viewId}_menu`);\n         }\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewTextComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewText_${baseView.id}`,\n         Object.assign(\n            {\n               text: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const settings = this.settings;\n\n      const _uiText = {\n         id: ids.text,\n         view: \"template\",\n         minHeight: 10,\n         css: \"ab-custom-template\",\n         borderless: true,\n      };\n\n      if (settings.height) _uiText.height = settings.height;\n      else _uiText.autoheight = true;\n\n      const _ui = super.ui([_uiText]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   displayText(value) {\n      const ids = this.ids;\n      const result = this.view.displayText(value, ids.text);\n\n      const $text = $$(ids.text);\n\n      if (!$text) return;\n\n      $text.define(\"template\", result);\n      $text.refresh();\n   }\n\n   onShow() {\n      super.onShow();\n\n      // listen DC events\n      const dataview = this.datacollection;\n      const baseView = this.view;\n\n      if (dataview && baseView.parent.key !== \"dataview\") {\n         [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n            baseView.eventAdd({\n               emitter: dataview,\n               eventName: key,\n               listener: (...p) => this.displayText(...p),\n            });\n         });\n      }\n\n      this.displayText();\n   }\n};\n","import ClassUI from \"../../../../ui/ClassUI\";\n\nexport default class ABViewProperty extends ClassUI {\n   // constructor() {}\n\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {};\n   }\n\n   /** == Property == */\n   /**\n    * @function propertyComponent\n    * return the view and logic to display in property panel\n    *\n    * @return {Object} - {\n    * \t\t\t\t\t\tui: webix element,\n    * \t\t\t\t\t\tinit: function,\n    * \t\t\t\t\t\tlogic: object\n    * \t\t\t\t\t}\n    */\n   static propertyComponent() {\n      let ui = {\n         view: \"template\",\n         template: \"No UI\",\n      };\n\n      let init = (options) => {\n         // register callbacks:\n         for (var c in logic.callbacks) {\n            logic.callbacks[c] = options[c] || logic.callbacks[c];\n         }\n      };\n\n      let logic = {\n         callbacks: {},\n      };\n\n      return {\n         ui: ui,\n         init: init,\n         logic: logic,\n      };\n   }\n\n   fromSettings(settings) {\n      this.settings = settings;\n   }\n\n   toSettings() {\n      return this.settings || {};\n   }\n\n   /** == UI == */\n   /**\n    * @function component\n    * return the view and logic to display in display widget\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    *\n    * @return {Object} - {\n    * \t\t\t\t\t\tui: webix element,\n    * \t\t\t\t\t\tinit: function,\n    * \t\t\t\t\t\tlogic: object\n    * \t\t\t\t\t}\n    */\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      let ui = {\n         view: \"template\",\n         template: \"No UI\",\n      };\n\n      let init = (options) => {\n         // register callbacks:\n         for (var c in logic.callbacks) {\n            logic.callbacks[c] = options[c] || logic.callbacks[c];\n         }\n      };\n\n      let logic = {\n         callbacks: {},\n      };\n\n      return {\n         ui: ui,\n         init: init,\n         logic: logic,\n      };\n   }\n}\n","import ABViewProperty from \"./ABViewProperty\";\nimport ABViewFormButton from \"../ABViewFormButton\";\nimport ABViewPDFImporter from \"../ABViewPDFImporter\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nexport default class ABViewPropertyAddPage extends ABViewProperty {\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         formView: \"none\", // id of form to add new data\n      };\n   }\n\n   static propertyComponent(App, idBase) {\n      let ids = {\n         formView: `${idBase}_formView`,\n      };\n\n      let ui = {\n         id: ids.formView,\n         name: \"formView\",\n         view: \"richselect\",\n         label: L(\"Add New Form\"),\n         labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n         on: {\n            onChange: (newVal, oldVal) => {\n               if (newVal == L(\"No add new option\")) {\n                  $$(ids.formView).setValue(\"\");\n               }\n\n               _logic.callbacks.onSave();\n            },\n         },\n      };\n\n      let _init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      let _logic = {\n         callbacks: {\n            onSave: function () {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         setSettings: (view, settings = {}) => {\n            if (view == null) return;\n\n            // Set the options of the possible edit forms\n            let editForms = [\n               {\n                  id: \"none\",\n                  value: L(\"No add new option\"),\n               },\n            ];\n\n            let pagesHasForm = view\n               .pageRoot()\n               .pages((p) => {\n                  return p.views((v) => {\n                     return (\n                        v &&\n                        v.key == \"form\" &&\n                        v.datacollection &&\n                        v.datacollection.datasource &&\n                        v.datacollection.datasource.id ==\n                           view.field().settings.linkObject\n                     );\n                  }, true).length;\n               }, true)\n               .map((p) => {\n                  return {\n                     id: p.id,\n                     value: p.label,\n                  };\n               });\n\n            editForms = editForms.concat(pagesHasForm);\n\n            let $selector = $$(ids.formView);\n            if ($selector) {\n               $selector.define(\"options\", editForms);\n               $selector.define(\n                  \"value\",\n                  settings.formView || this.default.formView\n               );\n               $selector.refresh();\n            }\n         },\n\n         getSettings: (view) => {\n            let settings = view.settings || {};\n\n            settings.formView = $$(ids.formView).getValue();\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: ui,\n         init: _init,\n         setSettings: _logic.setSettings,\n         getSettings: _logic.getSettings,\n      };\n   }\n\n   fromSettings(settings = {}) {\n      this.settings = this.settings || {};\n      this.settings.formView =\n         settings.formView || this.constructor.default.formView;\n   }\n\n   getIds(idBase, App) {\n      return {\n         popup: App._App.unique(`${idBase}_popup_add_new`),\n         field: idBase.split(\"_\")[1],\n         button: App._App.unique(`${idBase}_popup_add_new_button`),\n      };\n   }\n\n   component(App, idBase) {\n      // This can be overwritten by creating a different getIds before calling .super\n      let ids = this.getIds(idBase, App);\n\n      let ui = \"\";\n\n      if (\n         this.settings.formView &&\n         this.settings.formView != this.constructor.default.formView\n      ) {\n         // let iDiv = document.createElement(\"div\");\n         // iDiv.className = \"ab-connect-add-new\";\n         const dataCy = `add new CR button ${this.settings.formView} ${ids.field}`;\n         // iDiv.innerHTML = `<a href=\"javascript:void(0);\" class=\"fa fa-plus ab-connect-add-new-link\" data-cy=\"${dataCy}\"></a>`;\n         // iDiv.appendChild(node);\n         // ui = iDiv.outerHTML;\n         ui = {\n            id: ids.button,\n            view: \"button\",\n            type: \"icon\",\n            icon: \"fa fa-plus\",\n            width: 32,\n            height: 32,\n            css: \"webix_primary ab-connect-add-new-link\",\n            on: {\n               onAfterRender: () => {\n                  $$(ids.button)\n                     ?.$view.querySelector(\"button\")\n                     .setAttribute(\"data-cy\", dataCy);\n               },\n            },\n         };\n      }\n\n      let _logic = {\n         callbacks: {\n            onSaveData: (saveData) => {\n               if ($$(ids.popup)) $$(ids.popup).close();\n            },\n            onCancel: () => {\n               if ($$(ids.popup)) $$(ids.popup).close();\n\n               return false;\n            },\n            onClearOnLoad: () => {\n               return true;\n            },\n            clearOnLoad: () => {\n               return true;\n            },\n         },\n\n         applicationLoad: (application) => {\n            this._application = application;\n         },\n\n         onClick: (dc) => {\n            let pageId = this.settings.formView;\n            let page = this._application.pages((p) => p.id == pageId, true)[0];\n\n            return _logic.openFormPopup(page, dc);\n         },\n\n         /**\n          * @method openFormPopup\n          *\n          * @param page {ABViewPage}\n          * @param dc {ABDataCollection}\n          */\n         openFormPopup: (page, dc) => {\n            return new Promise((resolve, reject) => {\n               if (this._application == null) return resolve();\n\n               if ($$(ids.popup)) {\n                  $$(ids.popup).show();\n                  return resolve();\n               }\n\n               // Clone page so we modify without causing problems\n               let pageClone = page.clone(null, null, { ignoreSubPages: true });\n               pageClone.id = this._application.AB.uuid(); // lets take the stored id can create a new dynamic one so our views don't duplicate\n               // pageClone.id = pageClone.id + \"-\" + webix.uid(); // lets take the stored id can create a new dynamic one so our views don't duplicate\n               let popUpComp = pageClone.component();\n               let ui = popUpComp.ui();\n\n               // Listen 'saved' event of the form widget\n               const saveViews =\n                  pageClone.views(\n                     (v) =>\n                        v instanceof ABViewFormButton ||\n                        v instanceof ABViewPDFImporter,\n                     true\n                  ) ?? [];\n\n               saveViews.forEach((view) => {\n                  const v =\n                     view instanceof ABViewFormButton ? view.parent : view;\n                  v.on(\"saved\", (savedData) => {\n                     _logic?.callbacks?.onSaveData(savedData);\n                     // ? is there ever a case where we want to keep an add popup open after saving?\n                     // ! setting this to always close\n\n                     if ($$(ids.popup)) {\n                        $$(ids.popup).close();\n                     } else {\n                        var popup = this.getTopParentView();\n                        popup.close();\n                     }\n                  });\n               });\n\n               let popupTemplate = {\n                  view: \"window\",\n                  id: ids.popup,\n                  modal: true,\n                  position: \"center\",\n                  // position:function(stthis.__addPageToolate){\n                  // \tstate.left = x + 20this.__addPageTool; // offset the popups\n                  // \tstate.top = y + 20;this.__addPageTool\n                  // },\n                  resize: true,\n                  width: parseInt(this.settings.popupWidth) || 700,\n                  height: parseInt(this.settings.popupHeight) + 44 || 450,\n                  css: \"ab-main-container\",\n                  head: {\n                     view: \"toolbar\",\n                     css: \"webix_dark\",\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: page.label,\n                           css: \"modal_title\",\n                           align: \"center\",\n                        },\n                        {\n                           view: \"button\",\n                           label: L(\"Close\"),\n                           autowidth: true,\n                           align: \"center\",\n                           click: function () {\n                              var popup = this.getTopParentView();\n                              popup.close();\n                           },\n                        },\n                     ],\n                  },\n                  body: {\n                     view: \"scrollview\",\n                     scroll: true,\n                     body: ui,\n                  },\n               };\n\n               // Create popup\n               webix.ui(popupTemplate).show();\n\n               // Initial UI components\n               const accessLevel = 3; // TODO: Is it correct\n               popUpComp.init(this._application.AB, accessLevel, {\n                  onSaveData: _logic.callbacks.onSaveData,\n                  onCancelClick: _logic.callbacks.onCancel,\n                  clearOnLoad: _logic.callbacks.clearOnLoad,\n                  onClearOnLoad: _logic.callbacks.onClearOnLoad,\n               });\n\n               popUpComp.onShow();\n\n               setTimeout(async () => {\n                  _logic.setDefaultValue(dc, pageClone);\n\n                  resolve();\n               }, 100);\n            });\n         },\n\n         setDefaultValue: (dc, page) => {\n            if (!dc) return;\n\n            let obj = dc.datasource;\n            if (!obj) return;\n\n            let linkedData = dc.getCursor();\n            if (!linkedData) return;\n\n            page.views().forEach((v) => {\n               if (!v || v.key != \"form\") return;\n\n               v.views().forEach((fView) => {\n                  if (fView.key != \"connect\" || fView.settings == null) return;\n\n                  let field = fView.field();\n                  if (field == null) return;\n\n                  let objLink = field.datasourceLink;\n                  if (objLink == null || objLink.id != obj.id) return;\n\n                  let data = {};\n                  let relationName = field.relationName();\n                  data[relationName] = {\n                     id: linkedData.id,\n                  };\n\n                  // Add custom index values\n                  let indexes = obj.indexes() || [];\n                  indexes.forEach((idx) => {\n                     (idx.fields || []).forEach((f) => {\n                        data[relationName][f.columnName] =\n                           linkedData[f.columnName];\n                     });\n                  });\n\n                  // Set label of selected item\n                  if (linkedData.text) {\n                     data[relationName].text = linkedData.text;\n                     data[relationName].value = data[relationName].text;\n                  } else {\n                     let rawData = {};\n                     rawData[relationName] = linkedData;\n                     data[relationName].text = field.format(rawData);\n                     data[relationName].value = data[relationName].text;\n                  }\n\n                  let comp = v.viewComponents[fView.id];\n                  if (!comp) return;\n\n                  const ui = typeof comp.ui == \"function\" ? comp.ui() : comp.ui;\n                  const inputId = ui?.inputId || ui?.rows?.[0]?.inputId;\n\n                  if (inputId) field.setValue($$(inputId), data);\n               });\n            });\n         },\n      };\n\n      let init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n         if (ui) {\n            for (let c in options) {\n               ui.on[c] = options[c];\n            }\n         }\n      };\n\n      return {\n         ui: ui,\n         init: init,\n\n         applicationLoad: _logic.applicationLoad,\n         onClick: _logic.onClick,\n         openFormPopup: _logic.openFormPopup,\n      };\n   }\n}\n","import ABViewPropertyAddPage from \"./ABViewPropertyAddPage\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nexport default class ABViewPropertyEditPage extends ABViewPropertyAddPage {\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         editForm: \"none\", // The url pointer of ABViewForm\n      };\n   }\n\n   static propertyComponent(App, idBase) {\n      let ids = {\n         formEdit: `${idBase}_editForm`,\n      };\n\n      let ui = {\n         id: ids.formEdit,\n         name: \"editForm\",\n         view: \"richselect\",\n         label: L(\"Edit Form\"),\n         labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n         on: {\n            onChange: (newVal, oldVal) => {\n               if (newVal == L(\"No add new option\")) {\n                  $$(ids.formEdit).setValue(\"\");\n               }\n\n               _logic.callbacks.onSave();\n            },\n         },\n      };\n\n      let _init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      let _logic = {\n         callbacks: {\n            onSave: function () {\n               console.warn(\"NO onSave()!\");\n            },\n            clearOnLoad: () => {\n               return false; // always false, we're trying to edit data\n            },\n         },\n\n         setSettings: (view, settings = {}) => {\n            if (view == null) return;\n            settings.clearOnLoad = false; // doesn't work\n\n            // Set the options of the possible edit forms\n            let editForms = [\n               {\n                  id: \"none\",\n\n                  value: L(\"No add new option\"),\n               },\n            ];\n\n            (view.pageRoot().pages(() => true, true) || []).forEach((p) => {\n               if (!p) return;\n\n               p.views(() => true, true).forEach((v) => {\n                  if (\n                     v &&\n                     v.key == \"form\" &&\n                     v.datacollection &&\n                     v.datacollection.datasource &&\n                     v.datacollection.datasource.id ==\n                        view.field().settings.linkObject\n                  ) {\n                     editForms.push({\n                        id: v.urlPointer(),\n                        value: `${p.label} - ${v.label}`,\n                     });\n                  }\n               });\n            });\n\n            let $selector = $$(ids.formEdit);\n            if ($selector) {\n               $selector.define(\"options\", editForms);\n               $selector.define(\n                  \"value\",\n                  settings.editForm || this.default.editForm\n               );\n               $selector.refresh();\n            }\n         },\n\n         getSettings: (view) => {\n            let settings = view.settings || {};\n\n            let $selector = $$(ids.formEdit);\n            let $selectPopup = $selector.getPopup();\n            let selectedItem = ($selectPopup.config.body.data || []).filter(\n               (opt) => opt.id == $selector.getValue()\n            )[0];\n            if (selectedItem) {\n               settings.editForm = selectedItem.id; // The url pointer of ABViewForm\n            }\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: ui,\n         init: _init,\n         setSettings: _logic.setSettings,\n         getSettings: _logic.getSettings,\n      };\n   }\n\n   fromSettings(settings = {}) {\n      this.settings = this.settings || {};\n      this.settings.editForm =\n         settings.editForm || this.constructor.default.editForm;\n   }\n\n   component(App, idBase) {\n      // Overwrite the popup-lookup function\n      function getIds(idBase, App) {\n         return {\n            popup: App._App.unique(`${idBase}_popup_edit_form`),\n            field: idBase.split(\"_\")[1],\n         };\n      }\n      this.getIds = getIds;\n\n      // call to addpage\n      let comp = super.component(App, idBase);\n\n      comp.onClick = () => {\n         if (\n            !this._application ||\n            !this.settings.editForm ||\n            this.settings.editForm == this.constructor.default.editForm\n         )\n            return Promise.resolve();\n\n         let form = this._application.urlResolve(this.settings.editForm);\n         if (!form) return Promise.resolve();\n\n         let page = form.pageParent();\n         if (!page) return Promise.resolve();\n\n         return comp.openFormPopup(page);\n      };\n\n      return comp;\n   }\n}\n","/*\n * ABViewPropertyFilterData\n * This is a displayable ui component that will manage displaying a\n * means of searching for the user.\n *\n * This component will emit: \"filter.data\" when one of the filter options\n * have been enabled.\n *    \"filter.data\" has 2 parameters: fnFilter, filterRules\n *       fnFilter {function} when passed a row of data from the grid,\n *                return true/false if it passes the filter.\n *       filterRules {array} of each of the filter rules that have been\n *                created. Note: the fnFilter still checks the validity\n *                of the row based on these rules.\n *                (this is used for the parent component to indicate how\n *                many rules are currently applied to the data being displayed)\n */\nconst ABMLClass = require(\"../../ABMLClass\");\nimport ABViewProperty from \"./ABViewProperty\";\nimport ABViewComponent from \"../viewComponent/ABViewComponent\";\n\n// const ABViewGridFilterRule = require(\"../../../rules/ABViewGridFilterRule\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nclass FilterRuleSettings extends ABMLClass {\n   constructor() {\n      super([\"label\"], AB);\n   }\n\n   fromSettings(settings) {\n      super.fromValues(settings);\n      this.filters = settings.filters;\n   }\n\n   toSettings() {\n      let obj = super.toObj();\n      obj.filters = this.filters;\n      return obj;\n   }\n}\n\nclass ABViewPropertyFilterDataComponent extends ABViewComponent {\n   constructor(viewPropertyFilterData, idBase) {\n      var base = idBase || viewPropertyFilterData.idBase;\n      super(base, {});\n   }\n}\n\nexport default class ABViewPropertyFilterData extends ABViewProperty {\n   constructor(AB, idBase) {\n      super(idBase, {\n         buttonAddfilter: \"\",\n         filterPanel: \"\",\n         globalFilterFormContainer: \"\",\n         globalFilterForm: \"\",\n         filterMenutoolbar: \"\",\n         resetFilterButton: \"\",\n      });\n\n      this.AB = AB;\n      this.idBase = idBase;\n      this.object = null;\n      // this.queryRules = [];\n\n      this.__externalSearchText = null;\n      // {string}\n      // External sources of text filters are stored here. This is most likely\n      // from the global search toolbar entry.\n      this.rowFilter = this.AB.filterComplexNew(`${this.ids.component}_filter`);\n      // {RowFilter}\n      // When .userFilterPosition == \"toolbar\" we use this RowFilter to\n      // display a form in a popup where the toolbar button is.\n\n      this.rowFilterForm = this.AB.filterComplexNew(\n         `${this.ids.component}_filter_form`\n      );\n      // {RowFilter}\n      // When .userFilterPosition == \"form\" we use this RowFilter to\n      // display a form under the toolbar.\n\n      this._handler_rowFilterChanged = (value) => {\n         let filterRules = value.rules || [];\n\n         // if ($$(ids.buttonFilter)) {\n         //    $$(ids.buttonFilter).define('badge', filterRules.length || null);\n         //    $$(ids.buttonFilter).refresh();\n         // }\n\n         // be notified when there is a change in the filter\n         this.triggerCallback((rowData) => {\n            return this.rowFilter.isValid(rowData);\n         }, filterRules);\n      };\n\n      this._handler_rowFilterFormChanged = () => {\n         this.triggerCallback();\n      };\n\n      this.initialized = false;\n      // {bool}\n      // make sure this is not .init() more than once\n   }\n\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         filterOption: 1,\n         // {integer}\n         // 0 - Not allow\n         // 1 - Enable user filter\n         // 2 - Predefined filter menu\n         // 3 - Global filter input\n\n         // filterOptions == 1 options\n         userFilterPosition: \"toolbar\",\n         // {string} the location of the filter:\n         //    \"toolbar\" : there will be an \"Add Filters\" button on\n         //                the toolbar that will trigger the form popup\n         //    \"form\"    : there will be a button under the toolbar that\n         //                will bring up the form popup.\n\n         isGlobalToolbar: 1,\n         // {boolean|truthy}\n         // when \"toolbar\" is chosen for userFilterPosition, this setting\n         // allows us to also include the search criteria specified in\n         // the search box on the toolbar.\n\n         // filterOptions == 2 options\n         // predefined filters created by the builders. There will be\n         // an area under the toolbar that displays buttons to choose\n         // between one of the predefined queryRules.\n         // queryRules: [], // An array of ABViewGridFilterRule object\n\n         // filterOptions == 3 options\n         // globalFilterPosition: \"default\",\n         // {string} [ \"default\", \"single\" ]\n         //    \"default\" : shows default grid with all potential matches\n         //    \"single\"  : grid only shows when it has a match.  only 1\n         //                match is shown. ( is this true?? )\n      };\n   }\n\n   /**\n    * @method fromSettings\n    * Create an initial set of default values based upon our settings object.\n    * @param {obj} settings  The settings object we created in .toSettings()\n    */\n   fromSettings(settings) {\n      settings = settings || {};\n\n      settings.filterOption =\n         typeof settings.filterOption != \"undefined\"\n            ? settings.filterOption\n            : ABViewPropertyFilterData.default.filterOption;\n\n      settings.isGlobalToolbar =\n         typeof settings.isGlobalToolbar != \"undefined\"\n            ? settings.isGlobalToolbar\n            : ABViewPropertyFilterData.default.isGlobalToolbar;\n\n      this.settings = settings;\n   }\n\n   /**\n    * @method objectLoad\n    * A rule is based upon a Form that was working with an Object.\n    * .objectLoad() is how we specify which object we are working with.\n    *\n    * @param {ABObject} The object that will be used to evaluate the Rules\n    */\n   objectLoad(object) {\n      this.object = object;\n\n      if (this.rowFilter) {\n         // this.rowFilter.applicationLoad(object.application);\n         this.rowFilter.fieldsLoad(object.fields());\n      }\n\n      if (this.rowFilterForm) {\n         // this.rowFilterForm.applicationLoad(object.application);\n         this.rowFilterForm.fieldsLoad(object.fields());\n      }\n   }\n\n   viewLoad(view) {\n      this.view = view;\n   }\n\n   /** == UI == */\n   ui() {\n      var self = this;\n      var ids = this.ids;\n\n      return {\n         id: ids.filterPanel,\n         type: \"space\",\n         borderless: true,\n         padding: 0,\n         hidden: true,\n         rows: [\n            {\n               id: ids.globalFilterFormContainer,\n               hidden: true,\n               cols: [\n                  {\n                     id: ids.globalFilterForm,\n                     view: \"text\",\n                     placeholder: L(\"Search or scan a barcode to see results\"),\n                     on: {\n                        onTimedKeyPress: () => {\n                           this.triggerCallback();\n                        },\n                     },\n                  },\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     width: 28,\n                     type: \"icon\",\n                     icon: \"fa fa-times\",\n                     click: function () {\n                        var $form = $$(ids.globalFilterForm);\n                        $form.setValue(\"\");\n                        $form.focus();\n                        $form.callEvent(\"onTimedKeyPress\");\n                     },\n                  },\n               ],\n            },\n            {\n               id: ids.buttonAddfilter,\n               view: \"button\",\n               css: \"webix_primary\",\n               value: L(\"Add Filter\"),\n               click: () => {\n                  this.rowFilterForm.popUp($$(ids.buttonAddfilter).getNode(), {\n                     pos: \"bottom\",\n                  });\n               },\n            },\n            {\n               view: \"toolbar\",\n               id: ids.filterMenutoolbar,\n               css: \"ab-data-toolbar\",\n               hidden: true,\n               cols: [\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     id: ids.resetFilterButton,\n                     label: L(\"Reset Filter\"),\n                     icon: \"fa fa-ban\",\n                     type: \"icon\",\n                     // badge: 0,\n                     autowidth: true,\n                     click: function () {\n                        self.resetFilter();\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n\n      var ids = this.ids;\n      // this.filter_popup = webix.ui({\n      //    view: \"popup\",\n      //    id: ids.component,\n      //    width: 600,\n      //    height: 400,\n      //    hidden: true,\n      //    body: this.rowFilter.ui,\n      // });\n\n      this.rowFilter.init();\n      this.rowFilter.removeListener(\"changed\", this._handler_rowFilterChanged);\n      this.rowFilter.on(\"changed\", this._handler_rowFilterChanged);\n\n      this.rowFilterForm.init();\n      this.rowFilterForm.removeListener(\n         \"changed\",\n         this._handler_rowFilterFormChanged\n      );\n      this.rowFilterForm.on(\"changed\", this._handler_rowFilterFormChanged);\n      this.rowFilterForm.removeListener(\n         \"save\",\n         this._handler_rowFilterFormChanged\n      );\n      this.rowFilterForm.on(\"save\", this._handler_rowFilterFormChanged);\n\n      $$(ids.filterPanel)?.hide();\n      $$(ids.buttonAddfilter)?.hide();\n      $$(ids.filterMenutoolbar)?.hide();\n      $$(ids.globalFilterFormContainer)?.hide();\n\n      switch (this.settings.filterOption) {\n         case 0:\n            break;\n         case 1:\n            switch (this.settings.userFilterPosition) {\n               case \"form\":\n                  $$(ids.buttonAddfilter)?.show();\n                  $$(ids.filterPanel)?.show();\n                  break;\n               case \"toolbar\":\n                  $$(ids.filterPanel)?.hide();\n                  break;\n            }\n            break;\n         case 2:\n            $$(ids.filterPanel)?.show();\n            var $filterMenutoolbar = $$(ids.filterMenutoolbar);\n            if ($filterMenutoolbar) {\n               $filterMenutoolbar.show();\n\n               // populate filter items\n               if (this.settings?.queryRules) {\n                  (this.settings.queryRules || []).forEach((qr) => {\n                     let Rule = new FilterRuleSettings();\n                     Rule.fromSettings(qr);\n                     var filterRuleButton = {\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        label: Rule.label,\n                        icon: \"fa fa-filter\",\n                        type: \"icon\",\n                        // badge: 0,\n                        autowidth: true,\n                        click: () => {\n                           this.emit(\"filter.data\", null, Rule.filters);\n                           // this.selectFilter(qr.filter);\n                        },\n                     };\n                     $filterMenutoolbar.addView(filterRuleButton);\n                  });\n               }\n            }\n            break;\n         case 3:\n            $$(ids.globalFilterFormContainer)?.show();\n            $$(ids.filterPanel)?.show();\n            break;\n      }\n   }\n\n   filterRules() {\n      let rowFilterRules = null;\n\n      switch (this.settings.userFilterPosition) {\n         case \"form\":\n            rowFilterRules = this.rowFilterForm.getValue();\n            break;\n         case \"toolbar\":\n            rowFilterRules = this.rowFilter.getValue();\n            break;\n      }\n\n      return rowFilterRules;\n   }\n\n   /**\n    * @method getFilter()\n    * Return a fn() that returns {truthy} with a given row of\n    * data.\n    */\n   getFilter() {\n      // default filter\n      if (this.__currentFilter == null) {\n         // if empty search text in global single mode, then no display rows\n         if (\n            this.settings.filterOption == 3 &&\n            this.settings.globalFilterPosition == \"single\"\n         )\n            this.__currentFilter = (/* row */) => {\n               return false;\n            };\n         // always true, show every rows\n         else\n            this.__currentFilter = (/* row */) => {\n               return true;\n            };\n      }\n\n      return this.__currentFilter;\n   }\n\n   /**\n    * @method triggerCallback()\n    * We compile our current search options and emit them back to our\n    * parent container.\n    */\n   triggerCallback(/*fnFilter, filterRules*/) {\n      let searchRules = this.searchText(this.__externalSearchText);\n      let rowFilterRules = this.filterRules();\n\n      let badgeCount = 0;\n      if (rowFilterRules?.rules?.length) {\n         badgeCount = rowFilterRules?.rules?.length;\n         if (searchRules) {\n            badgeCount++;\n            rowFilterRules = {\n               glue: \"and\",\n               rules: [rowFilterRules, searchRules],\n            };\n         }\n      } else {\n         rowFilterRules = searchRules;\n      }\n\n      this.emit(\"filter.data\", null, rowFilterRules);\n\n      if (badgeCount == 0) badgeCount = false;\n      const $button = $$(this.ids.buttonAddfilter);\n      if ($button) {\n         $button.config.badge = badgeCount;\n         $button.refresh();\n      }\n   }\n\n   resetFilter() {\n      this.triggerCallback(() => true, []);\n   }\n\n   /**\n    * @method externalSearchText()\n    * Save any search criteria established from outside this filterHelper.\n    * NOTE: The ABViewGrid has a toolbar search entry that will provide\n    * this value.\n    * @param {string} search\n    *        The typed in search criteria.\n    */\n   externalSearchText(search = null) {\n      this.__externalSearchText = search;\n      this.triggerCallback(); // update each time\n   }\n\n   /**\n    * @method searchText()\n    * Retrieve the typed in search terms from the user, and convert them\n    * into a set of Rules that will modify our results.\n    * If an external search param is provided, use that instead.\n    * @param {string} externalText\n    * @return {json} The QB Rule condition for the search criteria\n    */\n   searchText(externalText) {\n      var search;\n      if (externalText) {\n         search = externalText;\n      } else {\n         search = ($$(this.ids.globalFilterForm)?.getValue() ?? \"\").trim();\n      }\n      if (!search) return null; // <-- includes \"\"\n\n      // find the individual \"terms\" that we should search for\n      let terms = search.trim().toLowerCase().split(\" \");\n\n      // build a set of conditions for each term\n      var allTerms = [];\n\n      var allFields = this.object?.fields() || [];\n\n      terms.forEach((t) => {\n         var fieldTerms = [];\n\n         // for each field, add a match condition for that field\n         // (if the field applies)\n         allFields.forEach((f) => {\n            if (f.fieldIsFilterable()) {\n               switch (f.key) {\n                  case \"number\":\n                  case \"string\":\n                  case \"LongText\":\n                  case \"email\":\n                     fieldTerms.push({\n                        key: f.id,\n                        rule: \"contains\",\n                        value: t,\n                     });\n                     break;\n\n                  case \"list\":\n                     var options = f.options();\n                     options.forEach((o) => {\n                        if (o.text.indexOf(t) > -1) {\n                           fieldTerms.push({\n                              key: f.id,\n                              rule: \"equals\",\n                              value: o.id,\n                           });\n                        }\n                     });\n                     break;\n               }\n            }\n         });\n\n         if (fieldTerms.length > 0) {\n            allTerms.push({\n               glue: \"or\",\n               rules: fieldTerms,\n            });\n         }\n      });\n\n      if (allTerms.length > 0) {\n         var searchRules = {\n            glue: \"and\",\n            rules: allTerms,\n         };\n         return searchRules;\n      } else {\n         return null;\n      }\n   }\n\n   showPopup($view) {\n      // this.filter_popup.show($view, null, { pos: \"top\" });\n      this.rowFilter.popUp($view, null, { pos: \"center\" });\n   }\n}\n","import ABViewProperty from \"./ABViewProperty\";\nimport ABViewComponent from \"../viewComponent/ABViewComponent\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nclass ABViewPropertyLinkPageComponent extends ABViewComponent {\n   constructor(linkPageHelper, idBase) {\n      let base = idBase || `ABViewPropertyLinkPage_xxx`;\n      super(base, {});\n\n      this.linkPageHelper = linkPageHelper;\n      this.AB = linkPageHelper.AB;\n\n      this.view = null;\n      // {ABViewXXXX}\n      // the ABView object this link references.\n\n      this.datacollection = null;\n      // {ABDataCollection}\n      // The related Datacollection to this view that drives it's data.\n      // we usually have to set the cursor before the view displays the\n      // appropriate data.\n   }\n\n   ui() {\n      return {};\n   }\n\n   init(options) {\n      if (options.view) this.view = options.view;\n\n      if (options.datacollection) this.datacollection = options.datacollection;\n   }\n\n   changePage(pageId, rowId) {\n      if (this.datacollection) {\n         this.datacollection.once(\"changeCursor\", () => {\n            this.view?.changePage(pageId);\n         });\n         this.datacollection.setCursor(rowId);\n      } else {\n         this.view?.changePage(pageId);\n      }\n   }\n}\n\nexport default class ABViewPropertyLinkPage extends ABViewProperty {\n   // constructor() {\n   //    super();\n   // }\n\n   /** == UI == */\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   component(v1App = false) {\n      let component = new ABViewPropertyLinkPageComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (...params) => {\n               return newComponent.init(...params);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n            changePage: (...params) => {\n               return newComponent.changePage(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n}\n","//\n// ABViewQueryBuilderObjectFieldConditions\n//\n// A UI component that is responsible for displaying a QueryBuilder based upon\n// the fields of a given ABObject.\n//\n// This object is also responsible for saving it's state to a settings value,\n// and generating the settings value to be saved.\n\nmodule.exports = class ABViewQueryBuilderObjectFieldConditions {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(label) {\n      this.label = label;\n      this.ui = null;\n   }\n\n   /**\n    * cleanRules\n    * walk through all the QueryBuilder (QB) rules and make conversions\n    * of the data into their proper formats.\n    * @param {obj} rules  the {rules} obj that is returned from the QB object\n    * @param {array} fields  an array of field definitions from the QB object\n    * @param {bool} dateToString  convert Dates to String format?\n    */\n   cleanRules(rules, fields, dateToString) {\n      if (typeof dateToString == \"undefined\") dateToString = true;\n\n      // walk the given condition rules / values, walk them and make sure\n      // any given rules have properly formatted values.\n      function processCondition(rule) {\n         // make sure rule is provided\n         if (rule) {\n            if (rule.glue && rule.rules) {\n               rule.rules.forEach((r) => {\n                  processCondition(r);\n               });\n            } else {\n               // converting a single rule:\n\n               var field = fields.filter((f) => {\n                  return f.id == rule.key;\n               })[0];\n               if (field) {\n                  switch (field.type) {\n                     case \"number\":\n                     case \"formula\":\n                        // when getting data from the server, the numbers are\n                        // sent back as strings (\"100.25\").\n                        // make sure to convert strings to numbers:\n                        if (typeof rule.value == \"string\") {\n                           if (rule.value.indexOf(\".\") == -1) {\n                              rule.value = parseInt(rule.value);\n                           } else {\n                              rule.value = parseFloat(rule.value);\n                           }\n                        }\n                        break;\n                     case \"date\":\n                        // in some cases we want to convert the Date() object returned\n                        // by QueryBuilder into a string for saving on the Server.\n                        if (dateToString) {\n                           // if we have a Date() obj returned from QueryBuilder,\n                           // convert to a string format:\n                           if (rule.value instanceof Date) {\n                              rule.value = webix.i18n.dateFormatStr(rule.value);\n                           }\n                        } else {\n                           // in other cases we want to convert the string returned\n                           // by the server into a Date() for the QB\n                           if (typeof rule.value == \"string\") {\n                              rule.value = new Date(rule.value);\n                           }\n                        }\n\n                        break;\n                  }\n               }\n            }\n         }\n      }\n      processCondition(rules);\n   }\n\n   // component\n   // initialize the UI display for this popup editor.\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      var L = App.Label;\n\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return this.unique(idBase + key ) + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         component: myUnique(\"qbObjectFieldConditions\"),\n         queryBuilder: myUnique(\"qBuilder\"),\n         queryBuilderContainer: myUnique(\"qBuilderContainer\"),\n         queryBuilderLayout: myUnique(\"qBuilderLayout\"),\n         showQBButton: myUnique(\"showQBButton\"),\n      });\n\n      // webix UI definition:\n      this.ui = {\n         view: \"layout\",\n         id: ids.queryBuilderLayout,\n         hidden: true,\n         type: \"line\",\n         rows: [\n            {\n               id: ids.showQBButton,\n               cols: [\n                  { fillspace: true },\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     name: \"addqb\",\n                     value: L(\"Add Custom Conditions\"),\n                     autowidth: true,\n                     click: function () {\n                        $$(ids.queryBuilderContainer).show();\n                        $$(ids.showQBButton).hide();\n                        // _logic.buttonCancel();\n                     },\n                  },\n                  { fillspace: true },\n               ],\n            },\n            {\n               hidden: true,\n               id: ids.queryBuilderContainer,\n               cols: [\n                  {\n                     view: \"querybuilder\",\n                     id: ids.queryBuilder,\n                     fields: this.conditionFields(),\n                  },\n               ],\n            },\n         ],\n      };\n\n      // tack on a label if provided.\n      if (this.label) {\n         this.ui.rows[1].cols.unshift({\n            view: \"label\",\n            css: \"ab-text-bold\",\n            label: this.label,\n            width: this.AB.UISettings.config().labelWidthLarge,\n         });\n      }\n\n      // for setting up UI\n      this.init = (options) => {\n         options = options || {};\n\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         /**\n          * cleanRules\n          * walk through all the QueryBuilder (QB) rules and make conversions\n          * of the data into their proper formats.\n          * @param {obj} rules  the {rules} obj that is returned from the QB object\n          * @param {array} fields  an array of field definitions from the QB object\n          * @param {bool} dateToString  convert Dates to String format?\n          */\n         cleanRules: (rules, fields, dateToString) => {\n            this.cleanRules(rules, fields, dateToString);\n         },\n\n         getValue: () => {\n            var values = null;\n            var QB = $$(ids.queryBuilder);\n            if (QB) {\n               values = QB.getValue();\n            }\n\n            // convert dates to simpler format:\n            // by default we're getting long values: \"Mon Feb 2, 2018 GMT xxxxxxx\",\n            // and webix doesn't seem to understand them when we send them back.\n            // so save simple date values: \"mm/dd/yyyy\"\n            if (values) {\n               _logic.cleanRules(values[0], values[1], true);\n            }\n\n            return values;\n         },\n\n         setValue: (values) => {\n            values = values || [];\n            if (!Array.isArray(values)) values = [values];\n            if (values.length == 0) {\n               values.push({});\n            } // push default rules\n            if (values.length < 2) {\n               values.push(this.conditionFields());\n            }\n\n            // convert dates from our server side \"string\" format into\n            // Date() objects.\n            _logic.cleanRules(values[0], values[1], false);\n\n            var QB = $$(ids.queryBuilder);\n            if (QB) {\n               if (values[0] && values[0].rules && values[0].rules.length) {\n                  QB.setValue(values[0]);\n                  $$(ids.queryBuilderContainer).show();\n                  $$(ids.showQBButton).hide();\n               }\n            }\n         },\n      });\n\n      this.getValue = _logic.getValue;\n      this.show = _logic.show;\n      this.setValue = _logic.setValue;\n   }\n\n   objectLoad(object) {\n      this.currentObject = object;\n   }\n\n   // conditionFields()\n   // Return the list of fields we are able to update.\n   // @return {array} of querybuilder field definitions:\n   //\t\t\t\t\t[\n   // \t\t\t\t\t\t{ id:\"fname\",   value:\"First Name\", type:\"string\" },\n   //\t\t\t\t\t    { id:\"lname\",   value:\"Last Name\",  type:\"string\" },\n   //\t\t\t\t\t    { id:\"age\",     value:\"Age\",        type:\"number\" },\n   //\t\t\t\t\t    { id:\"bdate\",   value:\"Birth Date\", type:\"date\" }\n   //\t\t\t\t\t]\n   conditionFields() {\n      var fieldTypes = [\n         \"string\",\n         \"LongText\",\n         \"number\",\n         \"date\",\n         \"email\",\n         \"formula\",\n         \"calculate\",\n      ];\n\n      var currFields = [];\n\n      if (this.currentObject) {\n         this.currentObject.fields().forEach((f) => {\n            if (fieldTypes.indexOf(f.key) != -1) {\n               // NOTE: the .id value must match the obj[.id]  in the data set\n               // so if your object data looks like:\n               // \t{\n               //\t\tname_first:'Neo',\n               //\t\tname_last: 'The One'\n               //  },\n               // then the ids should be:\n               // { id:'name_first', value:'xxx', type:'string' }\n\n               let type = f.key;\n               if (f.key == \"formula\" || f.key == \"calculate\") type = \"number\";\n               else if (f.key == \"LongText\") type = \"string\";\n\n               currFields.push({\n                  id: f.columnName,\n                  value: f.label,\n                  type: type,\n               });\n            }\n         });\n      }\n\n      return currFields;\n   }\n\n   // process\n   // Take the provided data and process each of our rules.\n   // @param {obj} options\n   // @return {promise}\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var numDone = 0;\n         var onDone = () => {\n            numDone++;\n            if (numDone >= this.listRules.length) {\n               resolve();\n            }\n         };\n\n         this.listRules.forEach((rule) => {\n            rule\n               .process(options)\n               .then(function () {\n                  onDone();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n\n         if (this.listRules.length == 0) {\n            resolve();\n         }\n      });\n   }\n\n   showQueryBuilderContainer() {\n      $$(this.ids.queryBuilderLayout).show();\n      $$(this.ids.queryBuilderContainer).show();\n      $$(this.ids.showQBButton).hide();\n   }\n\n   // // fromSettings\n   // // Create an initial set of default values based upon our settings object.\n   // // @param {obj} settings  The settings object we created in .toSettings()\n   // fromSettings (settings) {\n   // \t// settings: [\n   // \t//  { rule.settings },\n   // \t//  { rule.settings }\n   // \t// ]\n\n   // \t// clear any existing Rules:\n   // \tthis.listRules.forEach((rule)=>{\n   // \t\t$$(this.ids.rules).removeView(rule.ids.component);\n   // \t})\n   // \tthis.listRules = [];\n\n   // \tif (settings) {\n   // \t\tsettings.forEach((ruleSettings)=>{\n   // \t\t\tthis.addRule(ruleSettings);\n   // \t\t})\n   // \t}\n   // }\n\n   // // toSettings\n   // // create a settings object to be persisted with the application.\n   // // @return {array} of rule settings.\n   // toSettings () {\n   // \tvar settings = [];\n   // \tthis.listRules.forEach((r)=>{\n   // \t\tsettings.push(r.toSettings());\n   // \t})\n   // \treturn settings;\n   // }\n};\n","//\n// ABViewRule\n//\n// A component that manages an individual Rule in a Rule list.\n//\n// Each rule can manage a set of given Actions.  For each Rule, one Action\n// can be chosen, A condition for when that action is executed, and then\n// inputs for any additional data required by that action.\n//\n// Rules are used in the Interface Builder to present the designer an interface\n// for defining the Action+Condition:\n//\n//\n//\n// In live apps, Rules are used when processing events and determining if an\n// action is to be performed:\n//\n//\n//\n// A Rule needs to save it's current state to an objects settings, and to\n// initialize itself from those settings.\n//\nconst ObjectQueryBuilder = require(\"./ABViewQueryBuilderObjectFieldConditions\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRule {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(listActions) {\n      this.listActions = listActions || []; // the list of Actions this Rule manages\n\n      this.actionDropList = []; // the Webix UI droplist\n      this.listActions.forEach((a) => {\n         this.actionDropList.push({ id: a.key, value: a.label });\n      });\n\n      this.selectedAction = null; // the currently selected Action.key\n      if (this.actionDropList.length > 0) {\n         this.selectedAction = this.actionDropList[0].id;\n      }\n\n      this.removable = true; // can I delete this rule?\n\n      this.currentObject = null; // What ABObject is this associated with\n      // NOTE: this is important for Actions.\n\n      this.objectQB = null; // The QueryBuilder (QB) object\n\n      this.currentForm = null;\n   }\n\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      // this is different because multiple instances of this View can be displayed\n      // at the same time.  So make each instance Unique:\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return this.unique(idBase + key ) + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         // each instance must be unique\n         component: myUnique(\"component\"),\n\n         selectAction: myUnique(\"chooseAction\"),\n\n         queryBuilder: myUnique(\"queryBuilder\"),\n\n         valueDisplay: myUnique(\"valueArea\"),\n      });\n\n      this.objectQB.label = L(\"When\");\n      this.objectQB.component(this.App, this.idBase);\n      this.ui = this._generateUI();\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         this.objectQB.init();\n\n         // make sure the current Action's value display is initialized:\n         var Action = this.currentAction();\n         if (Action) {\n            Action.component(this.App, this.idBase);\n            var comp = Action.valueDisplay(ids.valueDisplay);\n\n            _logic.replaceValueDisplay(comp);\n\n            // webix.ui(comp.ui, $$(this.ids.valueDisplay));\n            comp.init();\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onDelete: function () {\n               console.warn(\"NO onDelete()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         replaceValueDisplay: (component) => {\n            // remove current content area:\n            var $ValueDisplay = $$(this.ids.valueDisplay);\n            if (!$ValueDisplay) return;\n\n            var children = $ValueDisplay.getChildViews();\n            var cloneChildren = [];\n            children.forEach((c) => {\n               cloneChildren.push(c);\n            });\n            cloneChildren.forEach((c) => {\n               $ValueDisplay.removeView(c);\n            });\n\n            $ValueDisplay.addView(component.ui);\n         },\n\n         selectAction: (newValue, oldVal) => {\n            if (newValue) {\n               $$(this.ids.component)\n                  .getChildViews()\n                  .forEach((views) => {\n                     views.show();\n                  });\n            }\n            // bonus:  save current state of previous Action\n            var prevAction = this.getAction(oldVal);\n            if (prevAction) {\n               prevAction.stashCondition(this.objectQB.getValue());\n            }\n\n            // now switch to the new Action\n            this.selectedAction = newValue;\n            var currAction = this.currentAction();\n            if (currAction) {\n               // reset Condition filters.\n               this.objectQB.setValue(currAction.condition());\n\n               // have Action display it's values form\n               currAction.component(this.App, this.idBase);\n               var component = currAction.valueDisplay(ids.valueDisplay);\n               _logic.replaceValueDisplay(component);\n               component.init();\n               // currAction.valueDisplay(ids.valueDisplay);\n            }\n         },\n      });\n   }\n\n   // not intended to be called externally\n   _generateUI() {\n      return {\n         id: this.ids.component,\n         view: \"layout\",\n         css: \"ab-component-form-rules\",\n         padding: 20,\n         // margin: 10,\n\n         // this should be a CSS setting: this.AB.Config.xxxx\n         // width: 680,\n         type: \"line\",\n         rows: [\n            {\n               view: \"template\",\n               css: \"ab-component-form-rules-delete\",\n               template: '<i class=\"fa fa-trash ab-component-remove\"></i>',\n               height: 30,\n               borderless: true,\n               hidddatasourceen: this.removable == false,\n               onClick: {\n                  \"ab-component-remove\": (e, id, trg) => {\n                     this._logic.callbacks.onDelete(this);\n                  },\n               },\n            },\n            // Action\n            {\n               id: this.ids.selectAction,\n               view: \"richselect\",\n               label: L(\"Action\"),\n               placeholder: L(\"Choose an action\"),\n               labelWidth: this.AB.UISettings.config().labelWidthLarge,\n               options: this.actionDropList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     this._logic.selectAction(newVal, oldVal);\n                  },\n               },\n            },\n\n            // Values\n            {\n               for: \"values\",\n               hidden: true,\n               cells: [\n                  {\n                     view: \"layout\",\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: L(\"Values\"),\n                           css: \"ab-text-bold\",\n                           width: this.AB.UISettings.config().labelWidthLarge,\n                        },\n                        {\n                           id: this.ids.valueDisplay,\n                           view: \"layout\",\n                           rows: [\n                              {\n                                 label: L(\n                                    \" ABViewRule: This should be the Set Area\"\n                                 ),\n                                 css: \"ab-text-bold\",\n                                 height: 30,\n                              },\n                           ],\n                        },\n                     ],\n                  },\n               ],\n            },\n\n            // When\n            this.objectQB.ui,\n         ],\n      };\n   }\n\n   // return the QueryBuilder fields data for the currently selected Action.\n   conditionFields() {\n      var fields = [];\n\n      var selectedAction = this.currentAction();\n      if (selectedAction) {\n         fields = selectedAction.conditionFields();\n      }\n\n      return fields;\n   }\n\n   currentAction() {\n      return this.getAction(this.selectedAction);\n   }\n\n   getAction(key) {\n      return this.listActions.filter((a) => {\n         return a.key == key;\n      })[0];\n   }\n\n   objectLoad(object) {\n      this.currentObject = object;\n      this.listActions.forEach((a) => {\n         a.objectLoad(object);\n      });\n\n      var label = L(\"When\");\n\n      this.objectQB = new ObjectQueryBuilder(label);\n      this.objectQB.objectLoad(object);\n\n      // regenerate our UI when a new object is loaded.\n      if (this.ids) {\n         this.ui = this._generateUI();\n      }\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n      this.listActions.forEach((a) => {\n         a.formLoad(form);\n      });\n   }\n\n   processPre(options = {}) {\n      let isValid = this.isValid(options.data);\n      if (!isValid) return;\n\n      let currentAction = this.currentAction();\n      if (!currentAction) return;\n\n      currentAction.processUpdateObject({}, options.data);\n   }\n\n   // process\n   // Take the provided data and process this rule\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      var currentAction = this.currentAction();\n      if (!currentAction) return Promise.resolve();\n\n      let isValid = this.isValid(options.data);\n      if (isValid) {\n         return currentAction.process(options);\n      } else {\n         // else just resolve and continue on\n         return new Promise((resolve, reject) => {\n            resolve();\n         });\n      }\n   }\n\n   fromSettings(settings) {\n      settings = settings || {};\n\n      if (settings.selectedAction) {\n         // store our Query Rules\n         this.selectedAction = settings.selectedAction;\n         var selectedAction = this.currentAction();\n         if (!selectedAction) return;\n         selectedAction.stashCondition(settings.queryRules || {});\n\n         // if our UI components are present, populate them properly:\n         if (this.ids) {\n            // Trigger our UI to refresh with this selected Action:\n            // NOTE: this also populates the QueryBuilder\n            $$(this.ids.selectAction).setValue(this.selectedAction);\n            // this._logic.selectAction(this.selectedAction);\n         }\n\n         // now continue with setting up our settings:\n         selectedAction.fromSettings(settings.actionSettings);\n      }\n   }\n\n   toSettings() {\n      var settings = {};\n\n      if (this.selectedAction) {\n         settings.selectedAction = this.selectedAction;\n         settings.queryRules = this.objectQB.getValue();\n         let currentAction = this.currentAction();\n         if (currentAction) {\n            settings.actionSettings = currentAction.toSettings();\n         }\n      }\n\n      return settings;\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      var currAction = this.currentAction();\n      if (currAction && this.objectQB) {\n         this.objectQB.setValue(currAction.condition());\n         currAction.qbFixAfterShow();\n      }\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   async isReady() {\n      let currentAction = this.currentAction();\n      if (currentAction) {\n         return currentAction.isReady();\n      }\n      return Promise.resolve();\n   }\n\n   isValid(data = {}) {\n      const fields = this.currentObject.fields(),\n         currentAction = this.currentAction(),\n         QBCondition = currentAction.condition(),\n         query = QBCondition[0] ?? {};\n\n      const convertToNumber = (text = \"\") => {\n         // if we have multiple rules we need to check if value is already a number before converting.\n         if (typeof text == \"number\") return text;\n\n         return parseFloat(text.replace(/[^-0-9.]/g, \"\"));\n      };\n\n      // Fix string data in number type\n      // NOTE: \"1000\" > \"99\" = false    >_<!\n      fields\n         .filter(\n            (f) =>\n               f.key == \"number\" || f.key == \"calculate\" || f.key == \"formula\"\n         )\n         .forEach((f) => {\n            try {\n               // filter conditions\n               if (Array.isArray(query?.rules)) {\n                  query.rules.forEach((r) => {\n                     // NOTE: compatible with old settings\n                     if (r.key == f.id || r.key == f.columnName)\n                        r.value = convertToNumber(r.value);\n                  });\n               }\n\n               // row data\n               if (\n                  data[f.columnName] &&\n                  typeof data[f.columnName] === \"string\"\n               ) {\n                  data[f.columnName] = convertToNumber(data[f.columnName]);\n               }\n            } catch (e) {\n               // continue regardless of error\n            }\n         });\n\n      const hiddenFilter = (this.AB ?? AB).filterComplexNew(\n         `${this.idBase}_filter_complex`\n      );\n      hiddenFilter.fieldsLoad(fields, this.currentObject);\n      hiddenFilter.setValue(query);\n      hiddenFilter.init();\n\n      return hiddenFilter.isValid(data);\n\n      // var id = \"hiddenQB_\" + webix.uid();\n\n      // // if our data passes the QueryRules then tell Action to process\n      // var ui = {\n      //    id: id,\n      //    hidden: true,\n      //    view: \"querybuilder\",\n      // };\n      // var hiddenQB = webix.ui(ui);\n\n      // let currentAction = this.currentAction();\n      // var QBCondition = currentAction.condition();\n\n      // if (this.objectQB) {\n      //    this.objectQB.cleanRules(QBCondition[0], QBCondition[1], false);\n      // }\n\n      // let query = QBCondition[0] || {},\n      //    fields = QBCondition[1] || [];\n\n      // // hiddenQB.setValue(QBCondition);\n      // hiddenQB.setValue({\n      //    query: query,\n      //    fields: fields,\n      // });\n\n      // var QBHelper = hiddenQB.getFilterHelper();\n      // var isValid = QBHelper(data);\n\n      // hiddenQB.destructor(); // remove the QB\n\n      // return isValid;\n   }\n\n   get isPreProcess() {\n      let currentAction = this.currentAction();\n      return currentAction.isPreProcess || false;\n   }\n};\n","//\n// ABViewRuleAction\n//\n// A component that manages an individual Action in a Rule.\n//\n// Each Action is responsible for figuring out when it can run, and what to do.\n//\n// Actions are used in the Interface Builder to present the designer an interface\n// for defining the a Condition and a set of data necessary to complete the Action:\n//\n//\n//\n// In live apps, Actions are used when processing events and determining if an\n// if and what is to be performed:\n//\n//\n//\n// An Action needs to save it's current state to an objects settings, and to\n// initialize itself from those settings.\n//\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleAction {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    * @param {ABViewForm} currentForm\tthe current form this Action is associated with.\n    */\n   constructor(App, idBase, currentForm) {\n      this.key = \"ABViewRuleAction\";\n\n      this.queryObject = null; // the current ABObject we use to create QueryBuilder information.\n\n      this.currentForm = null;\n\n      this.queryRules = {}; // default set of rules for the Query Builder condition\n\n      this.valueRules = {}; // the initial Value Rules for this Action\n      // The Action Subclass defines what this {} is.\n\n      this.currentForm = currentForm; // the ABViewForm object that this rule Action is tied to.\n   }\n\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      this.label = L(\"generic abviewruleaction\");\n\n      function myUnique(key) {\n         return App.unique(`${idBase}_${key}`);\n      }\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         // each instance must be unique\n         component: `${myUnique(\"component\")}_${webix.uid()}`,\n      });\n\n      this._ui = null; // internally track our UI Component value Rules\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onDelete: function () {\n               console.warn(\"NO onDelete()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n      });\n   }\n\n   // condition\n   // Return the querybuilder setup structure for this Action.\n   // @return {array}  of querybuilder setup\n   //\t\t\t\t\t[\n   //\t\t\t\t\t\t{rules},\n   //\t\t\t\t\t\t[fields]\n   //\t\t\t\t\t]\n   condition() {\n      return [this.conditionRules(), this.conditionFields()];\n   }\n\n   // stashCondition\n   // capture the current set of rules provided by the QB object.\n   // This doesn't guarantee these will be saved to the App settings.\n   // Instead it is a temporary stash. Only the selected Action's\n   // values will be persisited to the App settings.\n   // @param {obj/Array} rules  The QueryBuilder rule value returned from\n   //\t\t\t\t\t\t\t .getValue()\n   //\t\t\t\t\t\t\t note: it is the first entry .getValue()[0]\n   //\n   stashCondition(rules) {\n      // check to see if they sent us the raw QueryBuilder values and only\n      // pull off the rules if they did\n      if (Array.isArray(rules)) {\n         rules = rules[0];\n      }\n\n      // sanity check on glue value: don't update if null or not given.\n      if (rules) {\n         // sometimes .glue is undefined  so default to 'and'\n         if (rules.glue != \"or\") rules.glue = \"and\";\n\n         this.queryRules = rules;\n      }\n   }\n\n   // conditionFields()\n   // Return the list of fields we are able to update.\n   // @return {array} of querybuilder field definitions:\n   //\t\t\t\t\t[\n   // \t\t\t\t\t\t{ id:\"fname\",   value:\"First Name\", type:\"string\" },\n   //\t\t\t\t\t    { id:\"lname\",   value:\"Last Name\",  type:\"string\" },\n   //\t\t\t\t\t    { id:\"age\",     value:\"Age\",        type:\"number\" },\n   //\t\t\t\t\t    { id:\"bdate\",   value:\"Birth Date\", type:\"date\" }\n   //\t\t\t\t\t]\n   conditionFields() {\n      var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n      var currFields = [];\n\n      if (this.queryObject) {\n         this.queryObject.fields().forEach((f) => {\n            if (fieldTypes.indexOf(f.key) != -1) {\n               // NOTE: the .id value must match the obj[.id]  in the data set\n               // so if your object data looks like:\n               // \t{\n               //\t\tname_first:'Neo',\n               //\t\tname_last: 'The One'\n               //  },\n               // then the ids should be:\n               // { id:'name_first', value:'xxx', type:'string' }\n               currFields.push({\n                  id: f.columnName,\n                  value: f.label,\n                  type: f.key,\n               });\n            }\n         });\n      }\n\n      return currFields;\n   }\n\n   // conditionRules()\n   // Return the current rule definition object for this Action.\n   // @return {obj}\n   conditionRules() {\n      return this.queryRules;\n   }\n\n   // objectLoad\n   // save the current object this Action is associated with.\n   objectLoad(object) {\n      // this.currentObject = object;\t\t\t\t// DO WE NEED THIS?\n      this.queryObjectLoad(object);\n   }\n\n   // queryObjectLoad\n   // save the current object this Action is using to build query rules.\n   queryObjectLoad(object) {\n      this.queryObject = object;\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      console.error(\n         \"!!! ABViewRuleAction.process() should be overridden by its child class.\"\n      );\n      return new Promise((resolve, reject) => {\n         reject(\n            new Error(\n               \"ABViewRuleAction.process() should be overridden by its child class.\"\n            )\n         );\n      });\n   }\n\n   // valueDisplay\n   // create the form to collect the specific data this Action needs to function.\n   // @param {string} webixID  the $$(webixID) of the area to insert our display.\n   valueDisplay(webixID) {\n      return this.valueDisplayComponent(webixID);\n   }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      return (this._ui = {\n         ui: {\n            template: \"ABViewRuleAction.valueDisplayComponent\",\n         },\n         init: (data) => {\n            console.error(\n               \"!!! ABViewRuleAction.valueDisplayComponent() should be overridden.\"\n            );\n            console.warn(\" --> passed in data:\", data);\n         },\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      // settings: {\n      //\tvalueRules:{}\n      // }\n      settings = settings ?? {};\n      this.valueRules = settings.valueRules ?? settings;\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      var settings = {};\n\n      // require the child to insert the valueRules\n      return settings;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   isReady() {\n      return Promise.resolve();\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      // our child classes can implement this if needed.\n      // \t- ABViewRuleActionFormRecordRuleUpdateConnected\n   }\n};\n","//\n// ABViewRuleList\n//\n// A UI component that is responsible for displaying a list of current \"Rules\"\n// for a given purpose.  Some examples are the\n//\t\tForm -> Submit Rules,\n//\t\tForm -> Display Rules\n// \t\tForm -> Record Rules.\n//\n\n// ABViewRuleList is the parent object that manages displaying the common popup,\n// list, adding a rule, removing rules, etc...\n//\n// It is intending to be subclassed by a Specific List object that will load\n// up a given set of Actions for their list.\n//\n// When using it in the AppBuilder Interface Builder, this object provides:\n// \tvar PopupRecordList = new ABViewRuleList(App, idBase);\n//  PopupRecordList.fromSettings(CurrentObjectDefinition.rules); // populates List with current settings defined in CurrentObjectDefinition\n//  PopupRecordList.init({ onSave:()=>{}})\t// displays the popup for IB\n//  CurrentObjectDefinition.rules = PopupRecordList.toSettings(); // save the settings to store in json config\n//\n// When using on a live running App:\n//  PopupRecordList = new ABViewRuleList(App, idBase);\n//  PopupRecordList.fromSettings();\n//\n//  onFormSubmit(data) {\n//\t\t// note: this automatically validates and runs each rule:\n//\t\tPopupRecordList.process({data:data, view:{ current ABViewForm object }})\n//\t\t.then()\n//\t\t.catch();\n//  }\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleList {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(childSettings) {\n      this.listRules = [];\n      this.currentObject = null;\n\n      // ensure required values:\n      childSettings = childSettings || {};\n      childSettings.labels = childSettings.labels || {};\n      childSettings.labels.header =\n         childSettings.labels.header || \"ab.components.form.ruleList\";\n      childSettings.labels.headerDefault =\n         childSettings.labels.headerDefault || \"*Rule List\";\n      this.childSettings = childSettings;\n   }\n\n   /**\n    * @method component\n    * initialize the UI display for this popup editor.\n    * @param {obj} App  The common UI App object shared among our UI components\n    * @param {string} idBase A unique Key used the the base of our unique ids\n    */\n   component(App, idBase) {\n      this.App = this.App || App;\n      this.idBase = idBase;\n\n      App = App || this.App;\n\n      this.currentForm = null;\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         component: `${idBase}_component`,\n         rules: `${idBase}_rules`,\n         rulesScrollview: `${idBase}_rulesScrollview`,\n\n         action: `${idBase}_action`,\n         when: `${idBase}_when`,\n\n         values: `${idBase}_values`,\n         set: `${idBase}_set`,\n      });\n\n      // webix UI definition:\n      this.ui = {\n         view: \"window\",\n         id: ids.component,\n         modal: true,\n         position: \"center\",\n         resize: true,\n         width: 700,\n         height: 450,\n         css: \"ab-main-container\",\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {\n                  view: \"label\",\n                  label: this.childSettings.labels.headerDefault,\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  icon: \"fa fa-plus\",\n                  type: \"iconButton\",\n                  label: L(\"Add new rule\"),\n                  width: 150,\n                  click: () => {\n                     this.addRule();\n                     console.log($$(ids.rules).$height);\n                     $$(ids.rulesScrollview).scrollTo(0, $$(ids.rules).$height);\n                  },\n               },\n            ],\n         },\n         body: {\n            type: \"form\",\n            rows: [\n               {\n                  view: \"scrollview\",\n                  id: ids.rulesScrollview,\n                  scroll: \"xy\",\n                  body: {\n                     view: \"layout\",\n                     id: ids.rules,\n                     margin: 20,\n                     padding: 10,\n                     rows: [],\n                  },\n               },\n               // {\n               // \tcss: { 'background-color': '#fff' },\n               // \tcols: [\n               // \t\t{\n               // \t\t\tview: \"button\",\n               // \t\t\ticon: \"plus\",\n               // \t\t\ttype: \"iconButton\",\n               // \t\t\tlabel: labels.component.addNewRule,\n               // \t\t\twidth: 150,\n               // \t\t\tclick: () => {\n               // \t\t\t\tthis.addRule();\n               // \t\t\t}\n               // \t\t},\n               // \t\t{ fillspace: true }\n               // \t]\n               // },\n               {\n                  css: { \"background-color\": \"#fff\" },\n                  cols: [\n                     { fillspace: true },\n                     {\n                        view: \"button\",\n                        name: \"cancel\",\n                        value: L(\"Cancel\"),\n                        css: \"ab-cancel-button\",\n                        autowidth: true,\n                        click: function () {\n                           _logic.buttonCancel();\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        name: \"save\",\n                        label: L(\"Save\"),\n                        type: \"form\",\n                        autowidth: true,\n                        click: function () {\n                           _logic.buttonSave();\n                        },\n                     },\n                     { fillspace: true },\n                  ],\n               },\n            ],\n         },\n      };\n\n      // var _currentObject = null;\n      var _rules = [];\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         webix.ui(this.ui);\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         buttonCancel: function () {\n            $$(ids.component).hide();\n         },\n\n         buttonSave: () => {\n            var results = this.toSettings();\n\n            _logic.callbacks.onSave(results);\n            _logic.hide();\n         },\n\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         hide: function () {\n            $$(ids.component).hide();\n         },\n\n         show: function () {\n            $$(ids.component).show();\n         },\n      });\n\n      this.show = _logic.show;\n      this.setValue = _logic.setValue;\n   }\n\n   /**\n    * @method addRule\n    * Instantiate a new Rule in our list.\n    * @param {obj} settings  The settings object from the Rule we created in .toSettings()\n    */\n   addRule(settings) {\n      var Rule = this.getRule();\n      if (!Rule) return;\n\n      this.listRules.push(Rule);\n\n      // if we have tried to create our component:\n      if (this.ids) {\n         // if our actually exists, then populate it:\n         var RulesUI = $$(this.ids.rules);\n         if (RulesUI) {\n            // make sure Rule.ui is created before calling .init()\n            Rule.component(this.App, this.idBase); // prepare the UI component\n            var viewId = RulesUI.addView(Rule.ui);\n\n            Rule.init({\n               onDelete: (deletedRule) => {\n                  $$(this.ids.rules).removeView(Rule.ids.component);\n\n                  var index = this.listRules.indexOf(deletedRule);\n                  if (index !== -1) {\n                     this.listRules.splice(index, 1);\n                  }\n               },\n            });\n         }\n      }\n\n      if (settings) {\n         Rule.fromSettings(settings);\n      }\n   }\n\n   /**\n    * @method fromSettings\n    * Create an initial set of default values based upon our settings object.\n    * @param {obj} settings  The settings object we created in .toSettings()\n    */\n   fromSettings(settings) {\n      // settings: [\n      //  { rule.settings },\n      //  { rule.settings }\n      // ]\n\n      // clear any existing Rules:\n      this.listRules.forEach((rule) => {\n         if (\n            this.ids &&\n            this.ids.rules &&\n            rule &&\n            rule.ids &&\n            rule.ids.component\n         ) {\n            $$(this.ids.rules).removeView(rule.ids.component);\n         }\n      });\n      this.listRules = [];\n\n      if (settings) {\n         settings.forEach((ruleSettings) => {\n            this.addRule(ruleSettings);\n         });\n      }\n   }\n\n   /**\n    * @method objectLoad\n    * A rule is based upon a Form that was working with an Object.\n    * .objectLoad() is how we specify which object we are working with.\n    *\n    * @param {ABObject} The object that will be used to evaluate the Rules\n    */\n   objectLoad(object) {\n      this.currentObject = object;\n\n      // tell each of our rules about our object\n      this.listRules.forEach((r) => {\n         r.objectLoad(object);\n      });\n   }\n\n   processPre(options) {\n      (this.listRules || [])\n         .filter((rule) => rule.isPreProcess == true)\n         .forEach((rule) => {\n            rule.processPre(options, options.data);\n         });\n   }\n\n   /**\n    * @method process\n    * Take the provided data and process each of our rules.\n    * @param {obj} options\n    * @return {promise}\n    */\n   process(options) {\n      return new Promise((resolve, reject) => {\n         let listRules = (this.listRules || []).filter(\n            (rule) => !rule.isPreProcess\n         );\n\n         var numDone = 0;\n         var onDone = () => {\n            numDone++;\n            if (numDone >= listRules.length) {\n               resolve();\n            }\n         };\n\n         listRules.forEach((rule) => {\n            rule\n               .process(options)\n               .then(function () {\n                  onDone();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n\n         if (listRules.length == 0) {\n            resolve();\n         }\n      });\n   }\n\n   /**\n    * @method toSettings\n    * create a settings object to be persisted with the application.\n    * @return {array} of rule settings.\n    */\n   toSettings() {\n      var settings = [];\n      this.listRules.forEach((r) => {\n         settings.push(r.toSettings());\n      });\n      return settings;\n   }\n\n   getRule() {\n      console.error(\n         \"!!! ABViewRuleList.getRule() should be overridded by a child object.\"\n      );\n      return null;\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n      this.App = this.App || form.App;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   rulesReady() {\n      // This base class should be overwritten by any subclass that needs\n      // to prepare:\n      return Promise.resolve();\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      this.listRules.forEach((r) => {\n         r.qbFixAfterShow();\n      });\n   }\n};\n","//\n// ABViewRuleListFormRecordRules\n//\n// A component that is responsible for displaying the specific list of Record\n// Rules for a form.\n//\nconst ABViewRuleList = require(\"./ABViewRuleList\");\nconst ABViewRule = require(\"./ABViewRule\");\n\nconst RoleUpdateExisting = require(\"./ruleActions/ABViewRuleActionFormRecordRuleUpdate\");\nconst RoleInsertConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleInsertConnected\");\nconst RoleUpdateConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleUpdateConnected\");\nconst RoleRemoveConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleRemoveConnected\");\n\nmodule.exports = class ABViewRuleListFormRecordRules extends ABViewRuleList {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor() {\n      var settings = {\n         labels: {\n            header: \"ab.components.form.recordRules\",\n            headerDefault: \"*Record Rules\",\n         },\n      };\n      super(settings);\n   }\n\n   // must return the actual Rule object.\n   getRule() {\n      var listActions = [\n         new RoleUpdateExisting(\n            this.App,\n            `${this.idBase}_ruleActionUpdate`,\n            this.currentForm\n         ),\n         new RoleInsertConnected(\n            this.App,\n            `${this.idBase}_ruleActionInsert`,\n            this.currentForm\n         ),\n         new RoleUpdateConnected(\n            this.App,\n            `${this.idBase}_ruleActionUpdateConnected`,\n            this.currentForm\n         ),\n         new RoleRemoveConnected(\n            this.App,\n            `${this.idBase}_ruleActionRemoveConnected`,\n            this.currentForm\n         ),\n      ];\n\n      var Rule = new ABViewRule(listActions);\n      if (this.currentObject) {\n         Rule.objectLoad(this.currentObject);\n      }\n      return Rule;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our list of Rules is\n    * ready to work.\n    * @return {Promise}\n    */\n   async rulesReady() {\n      var allReady = (this.listRules || []).map((r) => r.isReady());\n      await Promise.all(allReady);\n   }\n};\n","//\n// ABViewRuleListFormSubmitRules\n//\n// A component that is responsible for displaying the specific list of Submit\n// Rules for a form.\n//\nconst ABViewRuleList = require(\"./ABViewRuleList\");\nconst ABViewRule = require(\"./ABViewRule\");\n\nconst RoleConfirmMessage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleConfirmMessage\");\nconst RuleExistPage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleExistPage\");\nconst RuleParentPage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleParentPage\");\nconst RuleClosePopup = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleClosePopup\");\nconst RuleWebsite = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleWebsite\");\nconst RuleEmail = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleEmail\");\n\nmodule.exports = class ABViewRuleListFormSubmitRules extends ABViewRuleList {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor() {\n      var settings = {\n         labels: {\n            header: \"ab.component.form.submitRule\",\n            headerDefault: \"*Submit Rules\",\n         },\n      };\n      super(settings);\n   }\n\n   // must return the actual Rule object.\n   getRule() {\n      var listActions = [\n         new RoleConfirmMessage(\n            this.App,\n            `${this.idBase}_ruleActionConfirmMessage`\n         ),\n         new RuleExistPage(this.App, `${this.idBase}_ruleActionExistPage`),\n         new RuleParentPage(this.App, `${this.idBase}_ruleActionParentPage`),\n         new RuleClosePopup(this.App, `${this.idBase}_ruleActionClosePopup`),\n         new RuleWebsite(this.App, `${this.idBase}_ruleActionWebsite`),\n         new RuleEmail(this.App, `${this.idBase}_ruleActionEmail`),\n      ];\n\n      var Rule = new ABViewRule(listActions);\n      Rule.objectLoad(this.currentObject);\n      Rule.formLoad(this.currentForm);\n      return Rule;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleInsertConnected\n//\n// An action that allows you to insert a connected object.\n//\n// NOTE: this is very similar to the Update Connected Rule, so we subclass that one and\n// modify it to only Insert data.\n//\n//\nconst UpdateConnected = require(\"./ABViewRuleActionFormRecordRuleUpdateConnected\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleInsertConnected extends (\n   UpdateConnected\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleInsertConnected\";\n      this.label = L(\"Insert Connected Object\");\n   }\n\n   /**\n    * valueDisplayChooser\n    * Our Values Display is a Select Box with a choice of connected fields.\n    * Once a field is chosen, then we display the Updater form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayChooser(idBase) {\n      var Component = super.valueDisplayChooser(idBase);\n\n      // in our case, there are no additional QB conditions:\n      // so overwrite the .showQBIfNeeded() routine to not show anything:\n      Component._logic.showQBIfNeeded = function () {};\n\n      return Component;\n   }\n\n   /**\n    * queryBuilderDisplay\n    * override our parent .queryBuilderDisplay to not create a new .objectQB\n    * @return {null}\n    */\n   queryBuilderDisplay() {\n      return null;\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      // get connected object\n      var connObj = this.connectedObject();\n      var model = connObj.model();\n\n      var connectionField = this.selectedField();\n\n      // var condition = null; // our lookup condition\n\n      // we are going to create a new instance of the connected object\n      // and make sure our .id is in the connected object's connectionField\n      // the server side will take care of making the proper relationship.\n\n      // first, create a new set of values:\n      var newObjectValues = {};\n\n      // update them according to our rules\n      this.processUpdateObject({}, newObjectValues);\n\n      if (newObjectValues.newRecords) {\n         // now add our .id to the proper field in newObjectValues\n         let connectedObjectField = connObj.fieldByID(\n            connectionField.settings.linkColumn\n         );\n\n         if (!connectedObjectField)\n            return Promise.reject(\"No connected object field\");\n\n         newObjectValues.newRecords.forEach((r) => {\n            r[connectedObjectField.columnName] = options.data.id;\n            // perform the update/insert\n            return model.create(r);\n         });\n      } else {\n         // now add our .id to the proper field in newObjectValues\n         let connectedObjectField = connObj.fieldByID(\n            connectionField.settings.linkColumn\n         );\n\n         if (!connectedObjectField)\n            return Promise.reject(\"No connected object field\");\n\n         newObjectValues[connectedObjectField.columnName] = options.data.id;\n\n         // perform the update/insert\n         return model.create(newObjectValues);\n      }\n   }\n\n   /**\n    * toSettings\n    * return an object that represents the current state of this Action\n    * @return {obj}\n    */\n   toSettings() {\n      // settings: {\n      // \tselectedFieldID: 'guid',\n      //\tvalueRules:{}\t\t// from ABViewRuleActionObjectUpdater\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      // we don't use .qpCondition\n      delete settings.qbCondition;\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleRemoveConnected\n//\n// An action that allows you to update fields on an object that is connected to\n// the current object we just Added/Updated\n//\n//\nconst ABViewRuleActionFormRecordRuleUpdateConnected = require(\"./ABViewRuleActionFormRecordRuleUpdateConnected\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleRemoveConnected extends (\n   ABViewRuleActionFormRecordRuleUpdateConnected\n) {\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleRemoveConnected\";\n      this.label = L(\"Remove Connected Record\");\n\n      this.isUpdateValueDisabled = true; // disable update data of each fields\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      let selectedField = this.selectedField();\n      this._formData = options.data;\n\n      return new Promise((resolve, reject) => {\n         // get the model from the provided Form Obj:\n         let dc = options.form.datacollection;\n         if (!dc) return resolve();\n\n         let model = dc.model;\n         if (!model) return resolve();\n\n         let updatedVals = {};\n         updatedVals[selectedField.columnName] = \"\";\n\n         model\n            .update(options.data.id, updatedVals)\n            .then(resolve)\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message:\n                     \"!!! ABViewRuleActionFormRecordRuleUpdate.process(): update error:\",\n                  data: options.data,\n               });\n               reject(err);\n            });\n      });\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleUpdate\n//\n// An action that allows you to update fields on an object that was currently\n// Added/Updated.\n//\n//\nconst ABViewRuleActionObjectUpdater = require(\"./ABViewRuleActionObjectUpdater\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleUpdate extends (\n   ABViewRuleActionObjectUpdater\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdate\";\n      this.label = L(\"Update Record\");\n   }\n\n   get isPreProcess() {\n      return true;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleUpdateConnected\n//\n// An action that allows you to update fields on an object that is connected to\n// the current object we just Added/Updated\n//\n//\nconst ABViewRuleActionObjectUpdater = require(\"./ABViewRuleActionObjectUpdater\");\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\nconst ObjectQueryBuilder = require(\"../ABViewQueryBuilderObjectFieldConditions\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleUpdateConnected extends (\n   ABViewRuleActionObjectUpdater\n) {\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdateConnected\";\n      this.label = L(\"Update Connected Record\");\n\n      this.baseObject = null; // the object the current form is working with.\n      // Use this to find our connected fields.\n\n      this.selectedFieldID = null; // the selected field ID in the .baseObject that is\n      // used for updating.  This should be one of the connection Fields.\n\n      this.fieldDropList = []; // the list of fields to offer based upon the current .baseObject.\n\n      this.objectQB = null; // the QueryBuilder used for offering conditions based upon our connected Object.\n      this.qbCondition = null; // the QB condition entered for selecting which remote object.\n   }\n\n   // field\n\n   /**\n    * objectLoad\n    * save the current object this Action is associated with.\n    * in the case of the UpdateConnected Action, assigning us\n    * this object only impacts the queryObject.\n    *\n    * The Updater form will use another object we select in\n    * the form dropdown.\n    *\n    * @param {object} object\n    *\n    */\n   objectLoad(object) {\n      this.queryObjectLoad(object);\n      this.baseObject = object;\n\n      // now build our fieldDropList for the select\n      var connectionFields = this.connectedFieldList();\n      connectionFields.forEach((cf) => {\n         this.fieldDropList.push({\n            id: cf.id,\n            value: cf.label,\n         });\n      });\n   }\n\n   /**\n    * connectedFieldList\n    * return the fields in our .baseObject that are connections to other objects.\n    * @return {array} of {ABField}\n    */\n   connectedFieldList() {\n      var connectKey = ABFieldConnect.defaults().key;\n      if (this.baseObject && this.baseObject.fields) {\n         return this.baseObject.fields((f) => {\n            return f.key == connectKey;\n         });\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * connectedObject\n    * return the ABObject associated with the selected connection field.\n    * @return {ABObject}\n    */\n   connectedObject() {\n      if (this.selectedFieldID) {\n         var selectedField = this.selectedField();\n         if (selectedField) {\n            return selectedField.datasourceLink;\n         }\n      }\n\n      return null;\n   }\n\n   /**\n    * selectedField\n    * return the selected {ABField} object.\n    * @return {ABField}\n    */\n   selectedField() {\n      return this.connectedFieldList().filter((f) => {\n         return f.id == this.selectedFieldID;\n      })[0];\n   }\n\n   /**\n    * valueDisplayComponent\n    * Return an ABView to display our values form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayComponent(idBase) {\n      if (this._uiChooser == null) {\n         this._uiChooser = this.valueDisplayChooser(idBase);\n      }\n\n      return this._uiChooser;\n   }\n\n   /**\n    * valueDisplayChooser\n    * Our Values Display is a Select Box with a choice of connected fields.\n    * Once a field is chosen, then we display the Updater form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayChooser(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return key + \"_\" + uniqueInstanceID;\n      };\n\n      var ids = {\n         component: myUnique(\"updateConnectedValues\"),\n         updateForm: myUnique(\"updateChooser\"),\n         selectConnectedField: myUnique(\"updateSelect\"),\n         updateFieldsForm: myUnique(\"updateForm\"),\n      };\n\n      var _ui = {\n         id: ids.component,\n         view: \"layout\",\n         css: \"ab-component-form-rule\",\n         rows: [\n            {\n               id: ids.selectConnectedField,\n               view: \"richselect\",\n               label: L(\"Select which connected object to update.\"),\n               labelWidth: 300,\n               value: this.selectedField,\n               options: this.fieldDropList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     _logic.selectAction(newVal, oldVal);\n                  },\n               },\n            },\n         ],\n      };\n\n      var init = (valueRules) => {\n         valueRules = valueRules || this.valueRules;\n\n         // make sure our currently selected field is selected.\n         if (this.selectedFieldID) {\n            var select = $$(ids.selectConnectedField);\n            if (select) {\n               select.setValue(this.selectedFieldID);\n            }\n         }\n      };\n\n      var _logic = (this._logic = {\n         addDisplay: (view) => {\n            $$(ids.component).addView(view);\n         },\n\n         // removePreviousDisplays\n         // remove the previous components that reflected the conditions and\n         // update values of the previously selected field.\n         removePreviousDisplays: () => {\n            var allViews = $$(ids.component).getChildViews();\n            var cloneAllViews = [];\n            allViews.forEach((v) => {\n               cloneAllViews.push(v);\n            });\n            cloneAllViews.forEach((v) => {\n               // don't remove the field picker\n               if (v.config.id != ids.selectConnectedField) {\n                  $$(ids.component).removeView(v);\n               }\n            });\n         },\n\n         selectAction: (newVal, oldVal) => {\n            _logic.removePreviousDisplays(); // of the Query Builder and Update form for old selection:\n\n            this.selectedFieldID = newVal;\n            var connectedObject = this.connectedObject();\n\n            if (connectedObject) {\n               // it is the remote object that we are allowed to Update fields on.\n               this.updateObjectLoad(connectedObject);\n               ///// NOTE: important to call super.valueDisplayComponent()\n               this.updateComponent = super.valueDisplayComponent(\n                  ids.updateFieldsForm\n               ); // parent obj\n\n               _logic.showQBIfNeeded();\n\n               // create a new blank update form\n               _logic.addDisplay(this.updateComponent.ui);\n               this.updateComponent.init();\n\n               if (this.isUpdateValueDisabled) {\n                  let $updateForm = $$(this.updateComponent.ui.id);\n                  if ($updateForm) {\n                     $updateForm.disable();\n                     $updateForm.hide();\n                  }\n               }\n            } else {\n               this.AB.notify.builder(new Error(\"No connectedObject found.\"), {\n                  fieldID: this.selectedFieldID,\n               });\n            }\n         },\n\n         showQBIfNeeded: () => {\n            //// NOTE: we decided to go ahead and display the QB in ALL situations to give\n            //// the user the ability to set a condition on the update even if the field\n            //// is only a one to one.\n            //// If we want to remove the filter in case of a \"one\" linkType, then put\n            //// these conditions back in:\n\n            // var field = this.selectedField();\n\n            // // we don't need the QB if the destination object link type if 'one'.\n            // // there will only be one to get back, so no conditions needed.\n            // if (field.settings.linkType != 'one') {\n\n            var qbComponent = this.queryBuilderDisplay();\n\n            qbComponent.component(this.App, this.idBase);\n            _logic.addDisplay(qbComponent.ui);\n            qbComponent.init({});\n\n            // }\n         },\n\n         fromSettings: (settings) => {\n            // // first time through, be sure to set the connectedObject first\n            // this.selectedFieldID = settings.selectedFieldID;\n            // var connectedObject = this.connectedObject();\n\n            // this triggers the update of the display, creation of QB,\n            $$(ids.selectConnectedField).setValue(settings.selectedFieldID);\n\n            if (this.objectQB) {\n               this.objectQB.setValue(this.qbCondition);\n            }\n\n            if (this.updateComponent) {\n               this.updateComponent.fromSettings(settings);\n            }\n         },\n\n         toSettings: () => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n            var settings = { fieldOperations: [] };\n\n            // for each of our formRows, decode the propery {}\n            this.formRows.forEach((fr) => {\n               var rowSettings = fr.toSettings();\n               if (rowSettings) {\n                  settings.fieldOperations.push(rowSettings);\n               }\n            });\n\n            return settings;\n         },\n      });\n\n      return {\n         ui: _ui,\n         init: init,\n         fromSettings: (settings) => {\n            _logic.fromSettings(settings);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   /**\n    * queryBuilderDisplay\n    * returns our Query Builder object used in our display.\n    * It is called by the .showQBIfNeeded() method.\n    * @return {ABViewQueryBuilderObjectFieldConditions}\n    */\n   queryBuilderDisplay() {\n      if (!this.objectQB) {\n         this.objectQB = new ObjectQueryBuilder(\n            L(\"How to choose which object:\")\n         );\n\n         var connObj = this.connectedObject();\n         if (connObj) this.objectQB.objectLoad(connObj);\n      }\n      return this.objectQB;\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      this._formData = options.data;\n\n      // get connected object\n      var connObj = this.connectedObject();\n      var model = connObj.model();\n\n      var connectionField = this.selectedField();\n\n      var condition = null; // our lookup condition\n\n      // modifyCondition\n      // async fn() to fill out what the condition should be for limiting the remote\n      // objects to values in use by the current object.\n      // @param {fn} cb  the callback to use when we are finished:\n      //\t\t\t\t\tcb(err, )\n      var modifyCondition = (cb) => {\n         // So, let's get a copy of our current data, with all it's connected items\n         // attached.\n         var thisModel = this.baseObject.model();\n         thisModel\n            .findConnected(connectionField.columnName, options.data)\n            .then((items) => {\n               // if we didn't get any results, then simply return\n               // NOTE: this will leave condition == null and cancel this update.\n               if (!items || items.length == 0) {\n                  cb();\n                  return;\n               }\n\n               // then use these to limit the connected data of our Action:\n\n               // get all the ids\n               var ids = items.map((i) => {\n                  return i.id;\n               });\n\n               // resulting condition: { id in [listIDs]} AND { QB Condition }\n               condition = {\n                  glue: \"and\",\n                  rules: [\n                     {\n                        key: `${connObj.tableName}.${connObj.PK()}`,\n                        rule: \"in\",\n                        value: ids,\n                     },\n                  ],\n               };\n\n               // check to make sure qbCondition actually has a condition before adding it\n               // to our condition:\n               if (Object.keys(this.qbCondition).length > 0) {\n                  condition.rules.push(this.qbCondition);\n               }\n\n               cb();\n            })\n            .catch(cb);\n      };\n\n      // .process() returns a Promise\n      return new Promise((resolve, reject) => {\n         // upateIt()\n         // updates a given item with our changes.\n         // @param {obj} item  the item to update\n         // @param {fn}  cb    a callback function when update is complete.\n         var updateIt = (item, cb) => {\n            let isUpdated = this.processUpdateObject({}, item);\n            if (!isUpdated) {\n               cb();\n            } else {\n               model\n                  .update(item.id, item)\n                  .then(() => {\n                     cb();\n                  })\n                  .catch((err) => {\n                     this.AB.notify.developer(err, {\n                        message:\n                           \"!!! ABViewRuleActionFormRecordRuleUpdateConnected.process(): update error:\",\n                        data: options.data,\n                     });\n                     cb(err);\n                  });\n            }\n         };\n\n         // now figure out which elements belong to this object\n         // done in modifyCondition()\n         modifyCondition((err) => {\n            if (err) {\n               AB.notify.developer(err, {\n                  message:\n                     \"!!! ABViewRuleActionFormRecordRuleUpdateConnected.modifyCondition: error:\",\n                  data: options.data,\n               });\n               reject(err);\n               return;\n            }\n\n            if (condition === null) {\n               // this is the case where we didn't have the proper data to complete our\n               // update.  So let's just fail gracefully, and continue on.\n\n               // QUESTION: is this the right way to handle it?\n               resolve();\n            } else {\n               // get all the entries that match our condition:\n               model\n                  .findAll({ where: condition })\n                  .then((list) => {\n                     var done = 0;\n\n                     // list : {data: Array(4), total_count: 4, pos: null, offset: null, limit: null}\n                     if (list && list.data) {\n                        list = list.data;\n                     }\n\n                     // for each entry, update it with our values:\n                     list.forEach((item) => {\n                        updateIt(item, (err) => {\n                           if (err) {\n                              return reject(err);\n                           }\n                           done++;\n                           if (done >= list.length) {\n                              // now they are all updated, so continue.\n                              resolve();\n                           }\n                        });\n                     });\n\n                     // if there were no entries to update -> continue\n                     if (list.length == 0) {\n                        resolve();\n                     }\n                  })\n                  .catch(reject);\n            }\n         }); // end modifyCondition()\n      }); // end Promise()\n   }\n\n   /**\n    * fromSettings\n    * initialize this Action = require(a given set of setting values.\n    * @param {obj} settings  the settings {} returned = require(toSettings()\n    */\n   fromSettings(settings) {\n      settings = settings || {};\n\n      this.selectedFieldID = settings.selectedFieldID || null;\n      this.qbCondition = settings.qbCondition || {};\n\n      super.fromSettings(settings);\n\n      // if we have a display component, then populate it:\n      if (this._uiChooser) {\n         this._logic.fromSettings(settings);\n      }\n   }\n\n   /**\n    * toSettings\n    * return an object that represents the current state of this Action\n    * @return {obj}\n    */\n   toSettings() {\n      // settings: {\n      // \tselectedFieldID: 'guid',\n      //  qbCondition: [],\n      //\tvalueRules:{}\t\t// = require(ABViewRuleActionObjectUpdater\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.selectedFieldID = this.selectedFieldID;\n\n      var qbCond = null;\n      if (this.objectQB) {\n         qbCond = this.objectQB.getValue();\n         if (Array.isArray(qbCond)) {\n            qbCond = qbCond[0];\n         }\n\n         // FIX: make sure qbCond root element has a 'glue'\n         if (qbCond) {\n            qbCond.glue = qbCond?.glue || \"and\";\n         }\n      }\n      settings.qbCondition = qbCond;\n\n      // if we have a display component, then request our details = require(it:\n      if (this._uiChooser) {\n         settings.valueRules = this._logic.toSettings();\n      }\n\n      return settings;\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      if (this.objectQB) {\n         this.objectQB.setValue(this.qbCondition);\n      }\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleClosePopup\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleClosePopup extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleClosePopup\";\n      this.label = L(\"Close the current popup\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      this._ui = {\n         ui: {\n            view: \"layout\",\n            rows: [],\n         },\n\n         init: () => {},\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         let form = options.form;\n         if (!form) return;\n\n         let popup = form.pageParent((p) => p.settings.type == \"popup\");\n         if (!popup) return;\n\n         // get the dom id of page. it is dom id that is generated in ABLiveTool.js\n         // let pageDomId = [\"ab_live_page\", popup.application.id, popup.id].join(\n         //    \"_\"\n         // );\n\n         // close current popup\n         let $popup = $$(popup.id);\n         if ($popup) $popup.hide();\n\n         // this clears the UI's record of the current form.\n         options.form.changePage(null);\n\n         resolve();\n      });\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleConfirmMessage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleConfirmMessage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleConfirmMessage\";\n      this.label = L(\"Show a confirmation message\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         message: `${idBase}_message`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.message,\n            view: \"textarea\",\n            // label: this.labels.component.message,\n            // labelWidth: this.AB.UISettings.config().labelWidthLarge,\n            height: 130,\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.message).setValue(valueRules.message || \"\");\n         },\n\n         toSettings: () => {\n            // return the confirm message\n            return {\n               message: $$(ids.message).getValue() || \"\",\n            };\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var confirmMessage = this.valueRules.message || \"\";\n\n         webix.message({\n            text: confirmMessage,\n            type: \"info\",\n         });\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleWebsite\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\nconst ABFieldEmail = require(\"../../platform/dataFields/ABFieldEmail\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleEmail extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleEmail\";\n      this.label = L(\"Send a custom email\");\n\n      this.queryObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.queryObject) {\n   //       this.queryObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         form: `${idBase}_form`,\n         popup: `${idBase}_popup`,\n         list: `${idBase}_fieldList`,\n         toEmailsContainer: `${idBase}_toEmailsContainer`,\n         toEmails: `${idBase}_toEmails`,\n         message: `${idBase}_message`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.form,\n            view: \"form\",\n            width: 450,\n            elementsConfig: {\n               labelPosition: \"top\",\n               labelWidth: 100,\n            },\n            cols: [\n               // email form\n               {\n                  width: 330,\n                  rows: [\n                     {\n                        view: \"text\",\n                        name: \"fromName\",\n                        label: L(\"From Name\"),\n                     },\n                     {\n                        view: \"text\",\n                        name: \"fromEmail\",\n                        label: L(\"From Email\"),\n                        validate: webix.rules.isEmail,\n                        on: {\n                           onChange: function (newVal, oldVal) {\n                              if (this.getValue() && !this.validate()) {\n                                 $$(ids.form).markInvalid(\n                                    \"fromEmail\",\n                                    \"Email is invalid\"\n                                 );\n                              } else {\n                                 $$(ids.form).markInvalid(\"fromEmail\", false);\n                              }\n                           },\n                        },\n                     },\n                     {\n                        id: ids.toEmailsContainer,\n                        view: \"forminput\",\n                        name: \"toEmails\",\n                        label: L(\"Send\"),\n                        css: \"ab-rich-text\",\n                        width: 320,\n                        body: {\n                           width: 320,\n                           rows: [\n                              {\n                                 height: 25,\n                              },\n                              {\n                                 id: ids.toEmails,\n                                 width: 320,\n                                 view: \"layout\",\n                                 rows: [],\n                              },\n                              {\n                                 view: \"button\",\n                                 css: \"webix_primary\",\n                                 type: \"icon\",\n                                 icon: \"fa fa-plus\",\n                                 label: L(\"Add a recipient\"),\n                                 width: 150,\n                                 click: () => {\n                                    _logic.toEmailAdd();\n                                 },\n                              },\n                           ],\n                        },\n                     },\n                     {\n                        view: \"text\",\n                        name: \"subject\",\n                        label: L(\"Subject\"),\n                     },\n                     {\n                        view: \"textarea\",\n                        id: ids.message,\n                        name: \"message\",\n                        label: L(\"Message\"),\n                        width: 320,\n                        height: 400,\n                     },\n                     // {\n                     // \tview: 'label',\n                     // \tlabel: 'Message',\n                     // \tcss: { 'font-weight': 'bold' }\n                     // },\n                     // {\n                     // \tview: 'forminput',\n                     // \tid: ids.message,\n                     // \tname: 'message',\n                     // \tlabel: 'Message',\n                     // \tcss: \"ab-rich-text\",\n                     // \twidth: 320,\n                     // \theight: 400,\n                     // \tbody: {\n                     // \t\tview: 'tinymce-editor'\n                     // \t}\n                     // }\n                  ],\n               },\n               // field list\n               {\n                  rows: [\n                     {\n                        view: \"template\",\n                        type: \"header\",\n                        template: \"Fields\",\n                     },\n                     {\n                        id: ids.list,\n                        view: \"list\",\n                        width: 120,\n                        css: { \"background-color\": \"#fff !important;\" },\n                        template: function (obj, common) {\n                           return _logic.fieldTemplate(obj, common);\n                        },\n                        on: {\n                           onItemClick: function (id, e, node) {\n                              var component = this.getItem(id);\n\n                              _logic.enterField(component);\n                           },\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n\n         init: () => {\n            if (this.queryObject) {\n               $$(ids.list).parse(\n                  this.queryObject.fields((f) => f.fieldUseAsLabel())\n               );\n               $$(ids.list).refresh();\n            }\n\n            _logic.refreshUI();\n         },\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.form).setValues(valueRules);\n\n            // Populate recipients\n            var recipients = valueRules.toEmails || [];\n            recipients.forEach((r) => {\n               _logic.toEmailAdd({\n                  type: r.type, // 'to', 'cc' or 'bcc'\n                  emailType: r.emailType, // 'email' or 'field'\n                  value: r.value,\n               });\n            });\n\n            _logic.refreshUI();\n         },\n\n         toSettings: () => {\n            var formVals = $$(ids.form).getValues() || {};\n\n            // Get recipients\n            var recipients = [];\n            $$(ids.toEmails)\n               .getChildViews()\n               .forEach((e) => {\n                  // var type = e.queryView({ name: 'type' }).getValue();\n                  var type = \"to\"; // TODO\n                  var emailType = e.queryView({ name: \"emailType\" }).getValue();\n                  var value = e.queryView({ name: emailType }).getValue();\n\n                  recipients.push({\n                     type: type,\n                     emailType: emailType,\n                     value: value,\n                  });\n               });\n\n            // return the confirm message\n            return {\n               fromName: formVals[\"fromName\"],\n               fromEmail: formVals[\"fromEmail\"],\n               toEmails: recipients,\n               subject: formVals[\"subject\"],\n               message: formVals[\"message\"],\n            };\n         },\n\n         /**\n          * @method toEmailTemplate\n          *\n          * @param settings - {\n          * \t\t\ttype: string, // 'to', 'cc' or 'bcc'\n          * \t\t\temailType: string, // 'email' or 'field'\n          * \t\t\tvalue: string\n          * }\n          */\n         toEmailTemplate: (settings) => {\n            settings = settings || {};\n\n            return {\n               width: 320,\n               cols: [\n                  // {\n                  // \tview: 'richselect',\n                  // \tname: 'type',\n                  // \tvalue: settings.type || 'to',\n                  // \twidth: 80,\n                  // \toptions: [\n                  // \t\t{ id: 'to', value: \"To:\" },\n                  // \t\t// EmailNotification does not support cc, bcc and reply.\n                  // \t\t// { id: 'cc', value: \"Cc:\" },\n                  // \t\t// { id: 'bcc', value: \"Bcc:\" },\n                  // \t\t// { id: 'reply', value: \"Reply-To:\" }\n                  // \t]\n                  // },\n                  {\n                     view: \"richselect\",\n                     name: \"emailType\",\n                     value: settings.emailType || \"email\",\n                     width: 150,\n                     options: [\n                        {\n                           id: \"email\",\n                           value: L(\"A custom email address\"),\n                        },\n                        { id: \"field\", value: L(\"An email field\") },\n                        { id: \"query\", value: L(\"From query\") },\n                     ],\n                     on: {\n                        onChange: function (newVal, oldVal) {\n                           _logic.emailTypeChange(newVal, this);\n                        },\n                     },\n                  },\n                  {\n                     width: 150,\n                     name: \"emailValue\",\n                     visibleBatch: settings.emailType || \"email\",\n                     cols: [\n                        {\n                           view: \"text\",\n                           name: \"email\",\n                           batch: \"email\",\n                           value:\n                              settings.emailType == \"email\"\n                                 ? settings.value\n                                 : \"\",\n                           validate: webix.rules.isEmail,\n                           width: 150,\n                           on: {\n                              onChange: function (newVal, oldVal) {\n                                 _logic.toEmailValidate();\n                              },\n                           },\n                        },\n                        {\n                           view: \"richselect\",\n                           name: \"field\",\n                           batch: \"field\",\n                           value:\n                              settings.emailType == \"field\"\n                                 ? settings.value\n                                 : \"\",\n                           width: 150,\n                           suggest: {\n                              on: {\n                                 onBeforeShow: function () {\n                                    this.define(\"width\", 300);\n                                    this.resize();\n                                 },\n                              },\n                              data: _logic.emailFieldOptions(),\n                           },\n                        },\n                        {\n                           view: \"richselect\",\n                           name: \"query\",\n                           batch: \"query\",\n                           value:\n                              settings.emailType == \"query\"\n                                 ? settings.value\n                                 : \"\",\n                           width: 150,\n                           suggest: {\n                              on: {\n                                 onBeforeShow: function () {\n                                    this.define(\"width\", 300);\n                                    this.resize();\n                                 },\n                              },\n                              data: _logic.queryOptions(),\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     type: \"icon\",\n                     icon: \"fa fa-trash-o\",\n                     width: 32,\n                     click: function () {\n                        var $toView = this.getParentView();\n\n                        _logic.toEmailRemove($toView);\n                     },\n                  },\n               ],\n            };\n         },\n\n         toEmailAdd: (settings) => {\n            var count = $$(ids.toEmails).getChildViews().length;\n\n            $$(ids.toEmails).addView(_logic.toEmailTemplate(settings), count);\n\n            _logic.refreshUI();\n         },\n\n         emailTypeChange: (type, $select) => {\n            var $recipient = $select.getParentView();\n            var $emailValue = $recipient.queryView({ name: \"emailValue\" });\n\n            switch (type) {\n               case \"field\":\n                  $emailValue.showBatch(\"field\");\n                  break;\n               case \"query\":\n                  $emailValue.showBatch(\"query\");\n                  break;\n               default:\n                  $emailValue.showBatch(\"email\");\n                  break;\n            }\n\n            $$(ids.toEmailsContainer).adjust();\n         },\n\n         toEmailRemove: ($toView) => {\n            $$(ids.toEmails).removeView($toView);\n\n            _logic.refreshUI();\n         },\n\n         toEmailValidate: () => {\n            var isAllValid = true;\n\n            $$(ids.toEmails)\n               .getChildViews()\n               .forEach((v) => {\n                  let emailText = v.queryView({ name: \"email\" });\n                  if (emailText.getValue() && !emailText.validate()) {\n                     isAllValid = false;\n                  }\n               });\n\n            if (isAllValid) $$(ids.form).markInvalid(\"toEmails\", false);\n            else $$(ids.form).markInvalid(\"toEmails\", \"Email is invalid\");\n         },\n\n         fieldTemplate: (field, common) => {\n            return `<i class='fa fa-${field.icon} webix_icon_btn' aria-hidden='true'></i> ${field.label}`;\n         },\n\n         emailFieldOptions: () => {\n            var existsFieldIds = [];\n            var options = [];\n\n            var fnAddOptions = (currObj, fLink) => {\n               var emailFields = currObj\n                  .fields((f) => f instanceof ABFieldEmail)\n                  .map((f) => {\n                     var optId = \"\",\n                        optLabel = \"\";\n\n                     if (fLink) {\n                        optId = `${fLink.id}|${f.urlPointer()}`;\n                        optLabel = `${currObj.label}.${f.label} (${fLink.label})`;\n                     } else {\n                        optId = `|${f.urlPointer()}`;\n                        optLabel = `${currObj.label}.${f.label}`;\n                     }\n\n                     return {\n                        id: optId, // linkFieldId|fieldUrl\n                        value: optLabel,\n                     };\n                  });\n\n               // TODO: prevent duplicate\n\n               options = options.concat(emailFields);\n            };\n\n            fnAddOptions(this.queryObject);\n\n            this.queryObject.connectFields().forEach((f) => {\n               // prevent looping\n               if (\n                  // - prevent include connect objects of the base object\n                  // f.datasourceLink.id == this.queryObject.id ||\n                  // - check duplicate include objects\n                  existsFieldIds.indexOf(f.id) > -1\n               )\n                  return;\n\n               // store\n               existsFieldIds.push(f.id);\n\n               // add email fields of link object\n               fnAddOptions(f.datasourceLink, f);\n            });\n\n            return options;\n         },\n\n         queryOptions: () => {\n            var options = [];\n\n            // get data collections who is query and contains email field\n            let dcQueries = this.currentForm.AB.datacollections((dc) => {\n               let obj = dc.datasource;\n               return (\n                  dc.settings.isQuery &&\n                  obj &&\n                  obj.fields((f) => f.key == \"email\").length > 0\n               );\n            });\n\n            dcQueries.forEach((dv) => {\n               if (dv.datasource) {\n                  dv.datasource\n                     .fields((f) => f.key == \"email\")\n                     .forEach((f) => {\n                        options.push({\n                           id: `${dv.id}|${f.id}`, // ABDatacollectionID|fieldID\n                           value: `${dv.label}.${f.label}`,\n                        });\n                     });\n               }\n            });\n\n            return options;\n         },\n\n         enterField: (field) => {\n            var focusElem = webix.UIManager.getFocus();\n            var val = \"\";\n\n            if (\n               focusElem.config.view != \"text\" ||\n               focusElem.config.view != \"textarea\"\n            ) {\n               if (focusElem.getValue) val = focusElem.getValue();\n\n               if (focusElem.setValue)\n                  focusElem.setValue(`${val}${field.label}`);\n\n               webix.UIManager.setFocus(focusElem);\n            }\n         },\n\n         refreshUI: () => {\n            $$(ids.toEmailsContainer).adjust();\n            $$(ids.message).adjust();\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options - {\n   //\t\t\t\t\t\t\tdata: {obj} rowData,\n   //\t\t\t\t\t\t\tform: {ABViewForm}\n   //\t\t\t\t\t\t}\n   process(options) {\n      // validate sender's email is invalid\n      if (!webix.rules.isEmail(this.valueRules.fromEmail)) {\n         return Promise.resolve();\n      }\n\n      var recipients = [];\n\n      return Promise.resolve()\n         .then(() => {\n            // Pull recipients data\n            return new Promise((resolve, reject) => {\n               var tasks = [];\n\n               this.valueRules.toEmails.forEach((rec) => {\n                  tasks.push(\n                     new Promise((next, err) => {\n                        // TODO: Cc, Bcc\n\n                        // field\n                        if (rec.emailType == \"field\") {\n                           var emailFieldUrl = rec.value.split(\"|\")[1]; // linkFieldId|emailFieldUrl\n                           var emailField =\n                              this.queryObject.application.urlResolve(\n                                 emailFieldUrl\n                              );\n                           if (emailField) {\n                              // Pull email source object\n                              if (emailField.object.id == this.queryObject.id) {\n                                 var emailData =\n                                    options.data[emailField.columnName];\n                                 if (emailData)\n                                    recipients = recipients.concat(emailData);\n                              }\n                              // Pull emails from link object\n                              else {\n                                 let linkFieldId = rec.value.split(\"|\")[0];\n                                 let linkFields = this.queryObject.fields(\n                                    (f) =>\n                                       f instanceof ABFieldConnect &&\n                                       f.id == linkFieldId\n                                 );\n                                 linkFields.forEach((f) => {\n                                    var linkedData =\n                                       options.data[f.relationName()] || [];\n\n                                    // convert to an array\n                                    if (\n                                       linkedData &&\n                                       !Array.isArray(linkedData)\n                                    )\n                                       linkedData = [linkedData];\n\n                                    // pull email address\n                                    linkedData.forEach((d) => {\n                                       var email = d[emailField.columnName];\n                                       if (email)\n                                          recipients = recipients.concat(email);\n                                    });\n                                 });\n                              }\n\n                              next();\n                           } else {\n                              next();\n                           }\n                        }\n\n                        // query\n                        else if (rec.emailType == \"query\") {\n                           var dvIdAndFieldId = rec.value; // ABDatacollectionId|fieldId\n                           if (!dvIdAndFieldId) return next();\n\n                           var dcId = dvIdAndFieldId.split(\"|\")[0];\n                           var fieldId = dvIdAndFieldId.split(\"|\")[1];\n\n                           var dcQuery =\n                              this.currentForm.AB.datacollectionByID(dcId);\n                           if (!dcQuery) return next();\n\n                           var field = dcQuery.datasource.fieldByID(fieldId);\n                           if (!field) return next();\n\n                           // get data of data collection\n                           dcQuery.getData().forEach((data) => {\n                              var emailAddr = data[field.columnName];\n                              if (emailAddr) recipients.push(emailAddr);\n                           });\n\n                           next();\n                        }\n\n                        // email\n                        else {\n                           recipients.push(rec.value);\n                           next();\n                        }\n                     })\n                  );\n               });\n\n               Promise.all(tasks).catch(reject).then(resolve);\n            });\n         })\n         .then(() => {\n            // send out\n            return new Promise((resolve, reject) => {\n               recipients = this.AB.uniq(recipients).filter((r) => r);\n\n               if (!recipients || recipients.length < 1) return resolve();\n\n               // replace form value to template\n               var fromName = this.valueRules.fromName,\n                  subject = this.valueRules.subject,\n                  message = this.valueRules.message;\n\n               this.queryObject\n                  .fields((f) => f.fieldUseAsLabel())\n                  .forEach((f) => {\n                     var template = new RegExp(`{${f.label}}`, \"g\"),\n                        data = f.format(options.data);\n\n                     fromName = fromName.replace(template, data);\n                     subject = subject.replace(template, data);\n                     message = message.replace(template, data);\n                  });\n\n               // send a email\n               this.AB.Network.post({\n                  url: \"/app_builder/email\",\n                  params: {\n                     fromName: fromName,\n                     fromEmail: this.valueRules.fromEmail,\n                     subject: subject,\n                     message: message,\n                     recipients: this.AB.uniq(recipients),\n                  },\n               })\n                  .then(() => {\n                     resolve();\n                  })\n                  .catch(reject);\n            });\n         });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleExistPage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleExistPage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleExistPage\";\n      this.label = L(\"Redirect to an existing page\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         pagesAndTabs: `${idBase}_PagesAndTabs`,\n      };\n\n      this._ui = {\n         ui: { id: ids.pagesAndTabs, view: \"richselect\", options: [] },\n\n         init: () => {\n            _logic.populateOptions();\n         },\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         populateOptions: () => {\n            // Pull page list to \"Redirect to an existing page\"\n            var _pageOptions = [];\n\n            /**\n             * @param pageOrTab\t{Object}\t- ABViewPage or ABViewTab\n             * @param indent\t{integer}\n             * @param type\t\t{string}\t- 'page' or 'tab'\n             * @param pageId\t{uuid}\t\t- the id of page (only tab)\n             */\n            var addPage = (pageOrTab, indent, type, pageId) => {\n               indent = indent || \"\";\n\n               let icon = \"fa fa-file-o\";\n               if (type == \"tab\") icon = \"fa fa-window-maximize\";\n\n               let pageParent = pageOrTab.pageParent();\n\n               _pageOptions.push({\n                  id: pageOrTab.id,\n                  value: indent + pageOrTab.label,\n                  type: type,\n                  pageId: pageParent ? pageParent.id : null,\n\n                  icon: icon,\n               });\n\n               if (type == \"page\" || type == \"tab\") {\n                  if (pageOrTab.pages) {\n                     pageOrTab.pages().forEach(function (p) {\n                        addPage(p, indent + \"-\", \"page\");\n                     });\n                  }\n\n                  // add 'tab' options\n                  if (pageOrTab.views) {\n                     pageOrTab\n                        .views((v) => v.key == \"tab\")\n                        .forEach((tab) => {\n                           // add 'tab view' to options\n                           tab.views().forEach((tabView) => {\n                              addPage(\n                                 tabView,\n                                 indent + \"-\",\n                                 \"tab\",\n                                 pageOrTab.id\n                              );\n                           });\n                        });\n                  }\n               }\n            };\n\n            addPage(this.currentForm.pageRoot(), \"\", \"page\");\n\n            $$(ids.pagesAndTabs).define(\"options\", _pageOptions);\n            $$(ids.pagesAndTabs).refresh();\n         },\n\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.pagesAndTabs).setValue(\n               valueRules.tabId || valueRules.pageId || \"\"\n            );\n         },\n\n         toSettings: () => {\n            var result = {};\n\n            var selectedId = $$(ids.pagesAndTabs).getValue();\n            var selectedItem = $$(ids.pagesAndTabs)\n               .getPopup()\n               .getList()\n               .config.data.filter((opt) => opt.id == selectedId)[0];\n            if (selectedItem) {\n               if (selectedItem.type == \"tab\") {\n                  // store page id and tab id\n                  result = {\n                     pageId: selectedItem.pageId,\n                     tabId: selectedId,\n                  };\n               } else {\n                  // store only page id\n                  result = {\n                     pageId: selectedId,\n                  };\n               }\n            }\n\n            // return the confirm message\n            return result;\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         // redirect page\n         if (this.valueRules.pageId) {\n            options.form.changePage(this.valueRules.pageId);\n\n            if (this.valueRules.tabId) {\n               var curPage = options.form.application.pages(\n                  (p) => p.id == this.valueRules.pageId,\n                  true\n               )[0];\n               if (!curPage) return resolve();\n\n               // switch tab\n               var tabView = curPage.views(\n                  (v) => v.id == this.valueRules.tabId,\n                  true\n               )[0];\n               if (!tabView) return resolve();\n\n               var tab = tabView.parent;\n               if (!tab) return resolve();\n\n               var toggleParent = (element) => {\n                  if (!element.parent) return false;\n                  var parentElem = element.parent;\n                  if (!parentElem.parent) return false;\n                  parentElem.parent.emit(\"changeTab\", parentElem.id);\n                  toggleParent(parentElem.parent);\n               };\n\n               toggleParent(tab);\n               let showIt = setInterval(function () {\n                  if ($$(tabView.id) && $$(tabView.id).isVisible()) {\n                     clearInterval(showIt);\n                     return;\n                  }\n                  tab.emit(\"changeTab\", tabView.id);\n               }, 100);\n            }\n         }\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleParentPage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleParentPage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleParentPage\";\n      this.label = L(\"Redirect to the parent page\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      this._ui = {\n         ui: {\n            view: \"label\",\n            label: this.label,\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n      };\n\n      var _logic = {};\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var pageCurrent = options.form.pageParent();\n         var pageParent = pageCurrent.pageParent();\n\n         // redirect page\n         options.form.changePage(pageParent.id);\n\n         resolve();\n      });\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleWebsite\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleWebsite extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleWebsite\";\n      this.label = L(\"Redirect to another website URL\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         website: `${idBase}_website`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.website,\n            view: \"text\",\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.website).setValue(valueRules.website || \"\");\n         },\n\n         toSettings: () => {\n            // return the confirm message\n            return {\n               website: $$(ids.website).getValue() || \"\",\n            };\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         // redirect to website\n         if (this.valueRules.website)\n            window.open(\n               `http://${this.valueRules.website.replace(\"http://\", \"\")}`,\n               \"_blank\"\n            );\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","// ABViewRuleActionObjectUpdater\n//\n// An action that allows you to update fields on an object.\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nvar ABViewRuleActionObjectUpdaterDefaults = {\n   filterConditions: {\n      // array of filters to apply to the data table\n      glue: \"and\",\n      rules: [],\n   },\n};\n\nmodule.exports = class ABViewRuleActionObjectUpdater extends ABViewRuleAction {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdate\";\n      this.label = L(\"Update Record\");\n\n      this.updateObject = null; // the object this Action will Update.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n\n      this.stashRules = {}; // keep track of rule settings among our selected objects.\n   }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      if (this._uiUpdater == null) {\n         this._uiUpdater = this.valueDisplayList(idBase);\n      }\n\n      return this._uiUpdater;\n   }\n\n   // Our Values Display is a List of ValueRows\n   // Each ValueRow will display an additional set of [add] [delete] buttons.\n\n   valueDisplayList(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n      var ids = {\n         updateForm: myUnique(\"updateForm\"),\n      };\n\n      var _ui = {\n         view: \"form\",\n         id: ids.updateForm,\n         elements: [],\n      };\n\n      var init = (valueRules) => {\n         valueRules = valueRules || this.valueRules;\n         _logic.setValues(valueRules);\n      };\n\n      var _logic = {\n         removeAddRow: () => {\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // check row that's unselect a field\n            var rows = UpdateForm.getChildViews();\n\n            var addRow = rows.filter((r) => {\n               return r.queryView(function (view) {\n                  return view.config.name == \"field\" && !view.getValue();\n               });\n            })[0];\n            if (!addRow) return;\n\n            UpdateForm.removeView(addRow);\n         },\n\n         // addRow\n         // add a new data entry to this form.\n         // @param {obj} data  (optional) initial values for this row.\n         addRow: (data) => {\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // check row that's unselect a field\n            var rows = UpdateForm.getChildViews();\n            if (\n               data == null &&\n               rows.filter((r) => {\n                  return r.queryView(function (view) {\n                     return view.config.name == \"field\" && !view.getValue();\n                  });\n               }).length > 0\n            )\n               return;\n\n            // get a new Row Component\n            var row = this.valueDisplayRow(idBase);\n\n            // add row to Form\n            UpdateForm.addView(row.ui);\n\n            // initialize row with any provided data:\n            row.init({\n               onAdd: () => {\n                  // add a new Row\n                  _logic.addRow();\n               },\n               onDelete: (rowId) => {\n                  // remove a row\n                  _logic.delRow(rowId);\n               },\n               data: data,\n            });\n\n            // store this row\n            this.formRows.push(row);\n         },\n\n         delRow: (rowId) => {\n            // store this row\n            this.formRows.forEach((r, index) => {\n               if (r.ui.id == rowId) this.formRows.splice(index, 0);\n            });\n\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // remove UI\n            UpdateForm.removeView($$(rowId));\n         },\n\n         formClear: () => {\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            var children = UpdateForm.getChildViews();\n\n            // NOTE: need to clone this array, because it is connected with the UpdatForm's\n            // internal array of items.  Once we start .removeView() the element actually\n            // is removed from the internal array, which then upset's the .forEach() from\n            // properly iterating through the structure.  It results in missed items from\n            // being sent to the .forEach().\n            // So Clone it and use that for .forEach()\n            var cloneChildren = [];\n            children.forEach((c) => {\n               cloneChildren.push(c);\n            });\n            cloneChildren.forEach((c) => {\n               UpdateForm.removeView(c);\n            });\n\n            // clear our stored .formRows\n            this.formRows = [];\n         },\n\n         formGet: () => {\n            var UpdateForm = $$(ids.updateForm);\n            if (!UpdateForm) {\n               // this is a problem!\n               this.currentForm.AB.notify.developer(\n                  new Error(\"no webix form\"),\n                  {\n                     context:\n                        \"ABViewRuleActionObjectUpdater:formGet  could not find webix form\",\n                     id: ids.updateForm,\n                  }\n               );\n               return null;\n            }\n\n            return UpdateForm;\n         },\n\n         setValues: (valueRules) => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n\n            valueRules = valueRules || {};\n            valueRules.fieldOperations = valueRules.fieldOperations || [];\n\n            // find the form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // clear form:\n            _logic.formClear();\n\n            // if there are values to\n            if (valueRules.fieldOperations.length > 0) {\n               valueRules.fieldOperations.forEach((r) => {\n                  _logic.addRow(r);\n               });\n            }\n\n            // our default operation will cause an empty row to\n            // appear after our first value entry.\n            // let's remove that one, and then add a new one\n            // at the end:\n            _logic.removeAddRow();\n\n            // display an empty row\n            _logic.addRow();\n         },\n\n         fromSettings: (settings) => {\n            // Note: we just want the { valueRules:[] } here:\n            var mySettings = settings.valueRules || settings;\n\n            _logic.setValues(mySettings);\n         },\n\n         toSettings: () => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n            var settings = { fieldOperations: [] };\n\n            // for each of our formRows, decode the propery {}\n            this.formRows.forEach((fr) => {\n               var rowSettings = fr.toSettings();\n               if (rowSettings) {\n                  settings.fieldOperations.push(fr.toSettings());\n               }\n            });\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: _ui,\n         init: init,\n         fromSettings: (settings) => {\n            _logic.fromSettings(settings);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   valueDisplayRow(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return key + \"_\" + uniqueInstanceID;\n      };\n\n      var ids = {\n         row: myUnique(\"row\"),\n         updateForm: myUnique(\"updateFormRow\"),\n         field: myUnique(\"field\"),\n         value: myUnique(\"value\"),\n         selectDc: myUnique(\"selectDc\"),\n         selectBy: myUnique(\"selectBy\"),\n         queryField: myUnique(\"queryField\"),\n         multiview: myUnique(\"multiview\"),\n         buttonAdd: myUnique(\"add\"),\n         buttonDelete: myUnique(\"delete\"),\n      };\n\n      var FilterComponent;\n\n      var _logic = {\n         callbacks: {\n            onAdd: () => {},\n            onDelete: () => {},\n         },\n\n         buttonsToggle: () => {\n            $$(ids.row).getChildViews()[0].getChildViews()[4].hide();\n            $$(ids.row).getChildViews()[0].getChildViews()[5].show();\n         },\n\n         getFieldList: (shouldFilter) => {\n            var options = [];\n            if (this.updateObject) {\n               options = (this.updateObject.fields() || []).map((f) => {\n                  return {\n                     id: f.id,\n                     value: f.label,\n                  };\n               });\n\n               // options = (this.updateObject.fields() || [])\n               // .filter(f => {\n               //\n               // \tif (f.key != 'connectObject') {\n               // \t\treturn true;\n               // \t} else {\n               // \t\t// if this is a connection field, only return\n               // \t\t// fields that are 1:x  where this field is the\n               // \t\t// source:\n               // \t\t// return ((f.linkType() == 'one') && (f.isSource()))\n               //\n               // \t\t// 6-14-2018 Changing from only 1:x to support many\n               // \t\t// if this is a connected field, only return\n               // \t\t// fields that this is the source\n               // \t\treturn (f.isSource())\n               // \t}\n               // })\n               // .map(f => {\n               // \treturn {\n               // \t\tid: f.id,\n               // \t\tvalue: f.label\n               // \t};\n               // });\n\n               // Remove fields who are selected\n               if (shouldFilter) {\n                  // store this row\n                  var usedHash = {};\n                  this.formRows.forEach((row) => {\n                     var rowView = $$(row.ui.id);\n                     if (rowView) {\n                        var field = rowView\n                           .getChildViews()[0]\n                           .getChildViews()[1];\n                        usedHash[field.getValue()] = true;\n                     }\n                  });\n                  options = options.filter((o) => {\n                     return !usedHash[o.id];\n                  });\n               }\n            }\n            return options;\n         },\n\n         isValid: () => {\n            var validator = this.currentForm.AB.Validation.validator();\n            var valueField = $$(ids.row).getChildViews()[0].getChildViews()[3];\n            var FormView = valueField.getParentView().getParentView();\n\n            var field = this.getUpdateObjectField($$(ids.field).getValue());\n            if (field) {\n               var value = field.getValue(valueField, {});\n\n               // // if a standard component that supports .getValue()\n               // if (valueField.getValue) {\n               // \tvalue = valueField.getValue();\n               // } else {\n               // \t// else use for field.getValue();\n               // \tvalue = field.getValue(valueField, {});\n               // }\n\n               // our .isValidData() wants value in an object:\n               var obj = {};\n               obj[field.columnName] = value;\n\n               field.isValidData(obj, validator);\n\n               // if value is empty, this is also an error:\n               if (\n                  value == \"\" ||\n                  value == null ||\n                  (Array.isArray(value) && value.length == 0)\n               ) {\n                  validator.addError(\n                     field.columnName,\n                     L(\"A value is required\")\n                  );\n               }\n\n               // field.getParentView()  ->  row\n               // row.getParentView()  -> Form\n               FormView.clearValidation();\n               validator.updateForm(FormView);\n\n               return validator.pass();\n            } else {\n               // if we didn't find an associated field ... then this isn't good\n               // data.\n\n               //// TODO: display error for our field picker.  Note, it doesn't have a unique .name\n               // field.\n               var fieldField = $$(ids.row)\n                  .getChildViews()[0]\n                  .getChildViews()[1];\n               fieldField.define(\"invalidMessage\", L(\"A value is required\"));\n               fieldField.define(\"invalid\", true);\n               fieldField.refresh();\n               // fieldField.markInvalid(this.labels.component.errorRequired);\n               return false;\n            }\n         },\n\n         selectField: (columnID) => {\n            var field = this.getUpdateObjectField(columnID);\n            if (!field) return;\n\n            var fieldComponent = field.formComponent(),\n               abView = fieldComponent.newInstance(field.object.application),\n               formFieldComponent = abView.component(this.App),\n               $componentView = formFieldComponent.ui,\n               $inputView;\n\n            $componentView.id = ids.value; // set our expected id\n\n            // find all the DataSources\n            var datasources = this.currentForm.AB.datacollections(\n               (dc) => dc.datasource\n            );\n\n            // create a droplist with those dataSources\n            var optionsDataSources = [];\n            datasources.forEach((dc) => {\n               optionsDataSources.push({ id: dc.id, value: dc.label });\n            });\n\n            // create a droplist with select options\n            var optionsSelectBy = [\n               { id: \"select-one\", value: L(\"Current selection\") },\n               {\n                  id: \"filter-select-one\",\n                  value: L(\"Select first after filter by...\"),\n               },\n            ];\n\n            var $optionUpdateExsits = {\n               type: \"clean\",\n               rows: [\n                  {\n                     cols: [\n                        {\n                           id: ids.selectDc,\n                           view: \"combo\",\n                           options: optionsDataSources,\n                           placeholder: L(\"Choose a data source\"),\n                           on: {\n                              onChange: (newv, oldv) => {\n                                 var selectedDC =\n                                    this.currentForm.AB.datacollectionByID(\n                                       newv\n                                    );\n                                 if (\n                                    selectedDC &&\n                                    (selectedDC.sourceType == \"query\" ||\n                                       !field.isConnection)\n                                 ) {\n                                    var queryFieldOptions = [];\n                                    selectedDC.datasource\n                                       .fields()\n                                       .forEach((f) => {\n                                          queryFieldOptions.push({\n                                             id: f.id,\n                                             value: f.label,\n                                          });\n                                       });\n                                    $$(ids.queryField).define(\n                                       \"options\",\n                                       queryFieldOptions\n                                    );\n                                    $$(ids.queryField).refresh();\n                                    $$(ids.queryField).show();\n                                 } else {\n                                    $$(ids.queryField).hide();\n                                 }\n                              },\n                           },\n                        },\n                        // we will place a list of query fields if you choose a datasource that has a query source type\n                        {\n                           id: ids.queryField,\n                           view: \"combo\",\n                           hidden: true,\n                           placeholder: L(\"Choose value from...\"),\n                           options: [{ id: 1, value: \"figure this out\" }],\n                        },\n                     ],\n                  },\n                  {\n                     id: ids.selectBy,\n                     view: \"combo\",\n                     options: optionsSelectBy,\n                     placeholder: L(\"Choose select option\"),\n                     on: {\n                        onChange: (newv, oldv) => {\n                           var $row = $$(ids.row);\n                           $row.removeView($row.getChildViews()[1]);\n                           if (newv == \"select-one\") {\n                              $row.addView({}, 1);\n                           } else {\n                              var options =\n                                 this.currentForm.datacollection.datasource\n                                    .fields()\n                                    .map(function (f) {\n                                       return {\n                                          id: f.id,\n                                          value: f.label,\n                                       };\n                                    });\n\n                              FilterComponent = this.AB.filterComplexNew(\n                                 `${idBase}_filter`\n                              );\n                              // FilterComponent.applicationLoad(\n                              //    this.currentForm.application\n                              // );\n                              FilterComponent.init({\n                                 isRecordRule: true,\n                                 recordRuleFieldOptions: options,\n                              });\n                              FilterComponent.on(\"change\", (val) => {\n                                 _logic.onFilterChange(val);\n                              });\n\n                              $row.addView(FilterComponent.ui, 1);\n\n                              var dcId = $$(ids.selectDc).getValue();\n                              var dataCollection =\n                                 this.currentForm.AB.datacollectionByID(dcId);\n                              if (dataCollection) {\n                                 _logic.populateFilters(dataCollection);\n                              }\n                           }\n                        },\n                     },\n                  },\n               ],\n            };\n\n            // WORKAROUND: add '[Current User]' option to the user data field\n            if (field.key == \"user\") {\n               $componentView.options = $componentView.options || [];\n               $componentView.options.unshift({\n                  id: \"ab-current-user\",\n                  value: L(\"[Current User]\"),\n               });\n            }\n\n            // UPDATE: ok, in practice we have not had any use cases where\n            // we want individual values on connectedObject fields, but\n            // instead we want to insert the current selected element from\n            // a relevant data view.  So, replace the fieldComponet\n            // from a connectedObject field with a list of data views that\n            // are based upon the same object we are connected to:\n            if (field.isConnection) {\n               // find the ABObject this field connects to\n               var connectedObject = field.datasourceLink;\n\n               // find all the DataSources that are based upon this ABObject\n               // to do this, we find the root Page we are on, then ask that Page for datasources:\n               datasources = datasources.filter((dc) => {\n                  return dc.datasource.id == connectedObject.id;\n               });\n\n               var dcQueries = this.currentForm.AB.datacollections((dc) => {\n                  return (\n                     dc.sourceType == \"query\" &&\n                     dc.datasource &&\n                     dc.datasource.canFilterObject(connectedObject)\n                  );\n                  // return dc.datasource.id == connectedObject.id;\n               });\n\n               datasources = datasources.concat(dcQueries);\n\n               // refresh a droplist with those dataSources\n               optionsDataSources = [];\n               datasources.forEach((dc) => {\n                  optionsDataSources.push({ id: dc.id, value: dc.label });\n               });\n\n               // add select an array value option\n               optionsSelectBy.push({\n                  id: \"filter-select-all\",\n                  value: L(\"Select all after filter by...\"),\n               });\n\n               $inputView = $optionUpdateExsits;\n\n               // and the upcoming formFieldComponent.init()\n               // doesn't need to do anything:\n               formFieldComponent = {\n                  init: function () {},\n               };\n\n               // and we reset field so it's customDisplay isn't called:\n               // field = {};\n            } else {\n               $inputView = {\n                  id: ids.multiview,\n                  view: \"multiview\",\n                  cells: [\n                     {\n                        batch: \"custom\",\n                        rows: [\n                           $componentView,\n                           {\n                              view: \"label\",\n                              label: `<a>${L(\"Or exists value\")}</a>`,\n                              on: {\n                                 onItemClick: function () {\n                                    var $container = this.getParentView(),\n                                       $multiview = $container.getParentView();\n\n                                    $multiview.showBatch(\"exist\");\n                                 },\n                              },\n                           },\n                        ],\n                     },\n                     {\n                        // Update value from exists object\n                        batch: \"exist\",\n                        rows: [\n                           $optionUpdateExsits,\n                           {\n                              view: \"label\",\n                              label: `<a>${L(\"Or custom value\")}</a>`,\n                              on: {\n                                 onItemClick: function () {\n                                    var $container = this.getParentView(),\n                                       $multiview = $container.getParentView();\n\n                                    // clear filter view\n                                    $$(ids.selectBy).setValue(\"select-one\");\n\n                                    $multiview.showBatch(\"custom\");\n                                 },\n                              },\n                           },\n                        ],\n                     },\n                  ],\n               };\n            }\n\n            // Change component to display this field's form input\n            var $row = $$(ids.row).getChildViews()[0];\n            $row.removeView($row.getChildViews()[3]);\n            $row.addView($inputView, 3);\n\n            formFieldComponent.init();\n\n            // Show custom display of data field\n            if (!field.isConnection && field.customDisplay) {\n               // field.customDisplay(field, this.App, $row.getChildViews()[3].$view, {\n\n               var compNodeView = $$($componentView.id).$view;\n\n               // wait until render UI complete\n               setTimeout(() => {\n                  field.customDisplay(field, this.App, compNodeView, {\n                     editable: true,\n\n                     // tree\n                     isForm: true,\n                  });\n               }, 50);\n            }\n\n            // Show the remove button\n            var $buttonRemove = $row.getChildViews()[4];\n            $buttonRemove.show();\n\n            // Add a new row\n            if (columnID) _logic.callbacks.onAdd();\n         },\n\n         setValue: (data) => {\n            $$(ids.field).setValue(data.fieldID);\n            // note: this triggers our _logic.selectField() fn.\n            var field = this.getUpdateObjectField(data.fieldID);\n            if (field) {\n               var setValueFn = () => {\n                  $$(ids.selectDc).setValue(data.value);\n                  if (data.queryField) {\n                     $$(ids.queryField).setValue(data.queryField);\n                  }\n                  var selectBy = data.selectBy || \"select-one\";\n                  $$(ids.selectBy).setValue(selectBy);\n\n                  if (selectBy != \"select-one\") {\n                     var collectionId = data.value;\n                     var dataCollection =\n                        this.currentForm.AB.datacollectionByID(collectionId);\n                     if (dataCollection && data.filterConditions) {\n                        _logic.populateFilters(\n                           dataCollection,\n                           data.filterConditions\n                        );\n                     }\n                  }\n               };\n\n               // now handle our special connectedObject case:\n               if (field.isConnection) {\n                  setValueFn();\n               } else {\n                  if (data.valueType == \"exist\") {\n                     $$(ids.multiview).showBatch(\"exist\");\n\n                     setValueFn();\n                  } else {\n                     $$(ids.multiview).showBatch(\"custom\");\n\n                     // wait until render UI complete\n                     setTimeout(function () {\n                        // set value to custom field\n                        var rowData = {};\n                        rowData[field.columnName] = data.value;\n                        field.setValue($$(ids.value), rowData);\n                     }, 50);\n                  }\n               }\n            }\n         },\n\n         populateFilters: (dataView, filterConditions) => {\n            filterConditions =\n               filterConditions ||\n               ABViewRuleActionObjectUpdaterDefaults.filterConditions;\n\n            // Populate data to popups\n            // FilterComponent.objectLoad(objectCopy);\n            FilterComponent.fieldsLoad(\n               dataView.datasource ? dataView.datasource.fields() : []\n            );\n            FilterComponent.setValue(filterConditions);\n         },\n\n         toSettings: () => {\n            // if this isn't the last entry row\n            // * a row with valid data has the [delete] button showing.\n            var buttonDelete = $$(ids.buttonDelete);\n            if (buttonDelete && buttonDelete.isVisible()) {\n               var data = {};\n               data.fieldID = $$(ids.field).getValue();\n\n               var $valueField = $$(ids.value);\n               var field = this.getUpdateObjectField(data.fieldID);\n\n               var getValueFn = () => {\n                  data.value = $$(ids.selectDc).getValue();\n                  data.queryField = $$(ids.queryField).getValue();\n                  data.op = \"set\"; // possible to create other types of operations.\n                  data.type = field.key;\n                  data.selectBy = $$(ids.selectBy).getValue();\n                  data.valueType = \"exist\";\n                  if (FilterComponent) {\n                     data.filterConditions = FilterComponent.getValue();\n                  }\n               };\n\n               // now handle our special connectedObject case:\n               if (field.isConnection) {\n                  getValueFn();\n               } else {\n                  if ($$(ids.multiview).config.visibleBatch == \"exist\") {\n                     getValueFn();\n                  } else {\n                     data.value = field.getValue($valueField, {});\n                     data.op = \"set\"; // possible to create other types of operations.\n                     data.type = field.key;\n                     data.valueType = \"custom\";\n                  }\n               }\n\n               return data;\n            } else {\n               return null;\n            }\n         },\n      };\n\n      var _ui = {\n         id: ids.row,\n         view: \"layout\",\n         rows: [\n            {\n               cols: [\n                  {\n                     // Label\n                     view: \"label\",\n                     width: this.currentForm.AB.Config.labelWidthSmall,\n                     label: L(\"Set\"),\n                  },\n                  {\n                     // Field list\n                     view: \"combo\",\n                     name: \"field\",\n                     placeholder: L(\"Choose a field\"),\n                     id: ids.field,\n                     height: 32,\n                     options: _logic.getFieldList(true),\n                     on: {\n                        onChange: function (columnId) {\n                           _logic.selectField(columnId);\n                        },\n                     },\n                  },\n                  {\n                     // Label\n                     view: \"label\",\n                     width: this.currentForm.AB.Config.labelWidthSmall,\n                     label: L(\"To\"),\n                  },\n\n                  // Field value\n                  // NOTE: this view gets replaced each time a field is selected.\n                  // We replace it with a component associated with the Field\n                  {},\n\n                  {\n                     // \"Remove\" button\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     id: ids.buttonDelete,\n                     icon: \"fa fa-trash\",\n                     type: \"icon\",\n                     width: 30,\n                     hidden: true,\n                     click: function () {\n                        _logic.callbacks.onDelete(ids.row);\n                     },\n                  },\n               ],\n            },\n            {}, // we will add filters here if we need them\n         ],\n      };\n\n      var init = (options) => {\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         if (options.data) {\n            // options.data = { formID:xxx, value:yyy,  type:zzzz }\n            _logic.setValue(options.data);\n\n            // _logic.buttonsToggle();\n         }\n      };\n\n      return {\n         ui: _ui,\n         init: init,\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   getUpdateObjectField(fieldID) {\n      return (\n         this.queryObject?.fieldByID(fieldID) ??\n         this.updateObject?.fieldByID(fieldID) ??\n         this.currentForm.AB.fieldNew(\n            this.currentForm.AB.definitionByID(fieldID) ?? {},\n            this.currentForm.AB.objectNew({})\n         )\n      );\n   }\n\n   /**\n    * @method processUpdateObject\n    * Perform the specified update actions on the provided objectToUpdate\n    * @param {obj} options  Additional information required to make updates.\n    * @param {obj} objectToUpdate  The object to make the updates on.\n    * @return {boolean}   true if an update took place, false if no updates.\n    */\n   processUpdateObject(options, objectToUpdate) {\n      this._formData = objectToUpdate;\n      // return new Promise((resolve, reject) => {\n      var isUpdated = false;\n\n      this.valueRules = this.valueRules || {};\n      this.valueRules.fieldOperations = this.valueRules.fieldOperations || [];\n\n      // var allPromises = [];\n\n      // for each of our operations\n      this.valueRules.fieldOperations.forEach((op) => {\n         // op = {\n         // \tfieldID:'zzzzz',\n         //\tvalue: 'xxx',\n         //\top: 'set',\n         //  type:'',\n         //  queryField: '', // id of ABField\n         //  selectBy:'',   ['select-one', 'filter-select-one', 'filter-select-all']\n         //  valueType: \"\", ['custom', 'exist']\n         // \tfilterConditions: { // array of filters to apply to the data table\n         //\t\tglue: 'and',\n         // \t\trules: []\n         //  }\n         // }\n\n         var field = this.getUpdateObjectField(op.fieldID);\n         if (!field) return;\n\n         let value = op?.value?.id ?? op?.value;\n\n         switch (value) {\n            case \"ab-current-user\":\n               value = this.currentForm.AB.Account.username();\n               break;\n            case \"ab-current-date\":\n               value = new Date();\n               break;\n         }\n\n         // in the case of a connected Field, we use op.value to get the\n         // datacollection, and find it's currently selected value:\n         if ((field.isConnection && !field.isUser) || op.valueType == \"exist\") {\n            // NOTE: 30 May 2018 :current decision from Ric is to limit this\n            // to only handle 1:x connections where we update the current obj\n            // with the PK of the value from the DC.\n            //\n            // In the future, if we want to handle the other options,\n            // we need to modify this to handle the M:x connections where\n            // we insert our PK into the value from the DC.\n\n            // op.value is the ABDatacollection.id we need to find\n            const dataCollection = this.currentForm.AB.datacollectionByID(\n               op.value\n            );\n            if (!dataCollection) {\n               isUpdated = false;\n               return;\n            }\n\n            // we don't want to mess with the dataView directly since it might\n            // be used by other parts of the system and this refresh might reset\n            // it's cursor.\n            // var clonedDataCollection = dataView.filteredClone(op.filterConditions);\n\n            // loop through rules to find \"same-as-field\" or \"not-same-as-field\"\n            // adjust operator and switch key value to actual value when found\n            var filterConditions = this.currentForm.AB.cloneDeep(\n               op.filterConditions\n            );\n            if (filterConditions && filterConditions.rules) {\n               filterConditions.rules\n                  .filter((r) => {\n                     return (\n                        r.rule == \"same_as_field\" ||\n                        r.rule == \"not_same_as_field\"\n                     );\n                  })\n                  .forEach((item) => {\n                     var valueField =\n                        this.currentForm.datacollection.datasource.fieldByID(\n                           item.value\n                        );\n                     if (valueField.isConnection) {\n                        item.value = valueField.format(this._formData);\n                     } else {\n                        item.value = this._formData[valueField.columnName];\n                     }\n\n                     if (item.rule == \"not_same_as_field\") {\n                        item.rule = \"not equals\";\n                     } else {\n                        item.rule = \"equals\";\n                     }\n                  });\n            }\n\n            let clonedDataCollection =\n               dataCollection.filteredClone(filterConditions);\n\n            switch (op.selectBy) {\n               // the 'select-one' is getting the currently set cursor on this data collection\n               // and using that value.\n               // TODO: rename to 'select-cursor'\n               case \"select-one\":\n               default: // dataView.getItem(dataView.getCursor());\n                  value = clonedDataCollection.getCursor();\n\n                  if (value) {\n                     // NOTE: webix documentation issue: .getCursor() is supposed to return\n                     // the .id of the item.  However it seems to be returning the {obj}\n\n                     if (op.valueType == \"exist\") {\n                        let fieldWithValue =\n                           clonedDataCollection.datasource.fieldByID(\n                              op.queryField\n                           );\n\n                        if (fieldWithValue)\n                           value = value[fieldWithValue.columnName];\n                     } else if (value.id) {\n                        value = value.id;\n                     }\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        if (!value) break;\n\n                        if (field.isConnection) {\n                           // if we are setting a connection we do not want to pass the full object because\n                           // batch creates payload gets too large\n                           objectToUpdate[field.columnName] = {};\n                           objectToUpdate[field.columnName].id =\n                              value[field.datasourceLink.PK()];\n                           objectToUpdate[field.columnName][\n                              field.datasourceLink.PK()\n                           ] = value[field.datasourceLink.PK()];\n\n                           // If the connect field use the custom FK, then it requires to pass value of the custom FK.\n                           if (field.settings.isCustomFK) {\n                              if (field.indexField) {\n                                 objectToUpdate[field.columnName][\n                                    field.indexField.columnName\n                                 ] = value[field.indexField.columnName];\n                              }\n                              if (field.indexField2) {\n                                 objectToUpdate[field.columnName][\n                                    field.indexField2.columnName\n                                 ] = value[field.indexField2.columnName];\n                              }\n                           }\n\n                           field.datasourceLink\n                              .fields(\n                                 (f) =>\n                                    f.key == \"combined\" || f.key == \"AutoIndex\"\n                              )\n                              .forEach((f) => {\n                                 objectToUpdate[field.columnName][\n                                    f.columnName\n                                 ] = value[f.columnName];\n                              });\n                        } else {\n                           objectToUpdate[field.columnName] = value;\n                        }\n\n                        break;\n                  }\n                  break;\n\n               // attempt to filter this data collection by the given filterConditions\n               case \"filter-select-all\":\n                  var newValues = [];\n\n                  var currRow = clonedDataCollection.getFirstRecord();\n                  while (currRow) {\n                     // do something there\n\n                     switch (clonedDataCollection.sourceType) {\n                        // case: datacollection is an object\n                        // we want to set our field to this values\n                        case \"object\":\n                           newValues.push(currRow.id);\n                           break;\n\n                        // case: datacollection is a query\n                        // our field is a pointer to an object. we want to pull out that object\n                        // from the query data.\n                        case \"query\": {\n                           let fieldWithValue =\n                              clonedDataCollection.datasource.fieldByID(\n                                 op.queryField\n                              );\n\n                           var newValue = currRow[fieldWithValue.columnName];\n\n                           if (typeof newValue == \"undefined\") {\n                              newValue = currRow[fieldWithValue.relationName()];\n\n                              if (Array.isArray(newValue)) {\n                                 newValue = newValue.map((v) => {\n                                    return v.id ? v.id : v;\n                                 });\n                              } else if (newValue.id) {\n                                 newValue = newValue.id;\n                              }\n                           }\n\n                           newValues = this.currentForm.AB.uniq(\n                              newValues.concat(newValue)\n                           );\n\n                           break;\n                        }\n                     }\n\n                     currRow = clonedDataCollection.getNextRecord(currRow);\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        if (field.linkType() == \"one\") {\n                           var updates = [];\n                           newValues.forEach((v) => {\n                              var objectToUpdateClone =\n                                 this.currentForm.AB.cloneDeep(objectToUpdate);\n                              objectToUpdateClone[field.columnName] = v;\n                              updates.push(objectToUpdateClone);\n                           });\n                           objectToUpdate.newRecords = updates;\n                        } else {\n                           objectToUpdate[field.columnName] = newValues;\n                        }\n                        break;\n                  }\n                  break;\n\n               case \"filter-select-one\":\n                  newValues = [];\n\n                  value = clonedDataCollection.getFirstRecord();\n\n                  if (value) {\n                     // case: datacollection is a query\n                     // our field is a pointer to an object. we want to pull out that object\n                     // from the query data.\n                     if (\n                        clonedDataCollection.sourceType == \"query\" ||\n                        (op.valueType == \"exist\" && op.queryField)\n                     ) {\n                        let fieldWithValue =\n                           clonedDataCollection.datasource.fieldByID(\n                              op.queryField\n                           );\n\n                        newValue = value[fieldWithValue.columnName];\n\n                        if (typeof newValue == \"undefined\") {\n                           newValue = value[fieldWithValue.relationName()];\n                           if (Array.isArray(newValue)) {\n                              newValue = newValue[0];\n                           }\n                           if (newValue.id) newValue = newValue.id;\n                        }\n\n                        value = newValue;\n                     }\n                     // case: datacollection is an object\n                     // we want to set our field to this values\n                     else if (clonedDataCollection.sourceType == \"object\") {\n                        // NOTE: webix documentation issue: .getCursor() is supposed to return\n                        // the .id of the item.  However it seems to be returning the {obj}\n\n                        // we need to use the objects indexField(2) if there is one\n                        // otherwise default to the id\n                        var lookup;\n                        if (field.indexField) {\n                           lookup = field.indexField.columnName;\n                        } else if (field.indexField2) {\n                           lookup = field.indexField2.columnName;\n                        }\n                        if (lookup && value[lookup]) {\n                           value = value[lookup];\n                        } else if (value.id) {\n                           value = value.id;\n                        }\n                     }\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        objectToUpdate[field.columnName] = value;\n                        break;\n                  }\n                  break;\n            }\n\n            isUpdated = true;\n\n            // allPromises.push(connectedPromise);\n         } else {\n            // var setPromise = new Promise((resolve, reject) => {\n            switch (op.op) {\n               case \"set\":\n                  objectToUpdate[field.columnName] = value;\n                  break;\n            }\n\n            isUpdated = true;\n\n            //    resolve(isUpdated);\n            // });\n\n            // allPromises.push(setPromise);\n\n            // console.log(\"finished\");\n         }\n      });\n\n      return isUpdated;\n      // Promise.all(allPromises).then(() => {\n      //    resolve(isUpdated);\n      // });\n      // });\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      this._formData = options.data;\n\n      return new Promise((resolve, reject) => {\n         let isUpdated = this.processUpdateObject({}, options.data);\n         if (!isUpdated) {\n            resolve();\n         } else {\n            // get the model from the provided Form Obj:\n            var dv = options.form.datacollection;\n            if (!dv) return resolve();\n\n            var model = dv.model;\n            model\n               .update(options.data.id, options.data)\n               .then(resolve)\n               .catch((err) => {\n                  this.currentForm.AB.notify.developer(err, {\n                     context:\n                        \"ABViewRuleActionObjectUpdater:process  update error\",\n                     id: options.data.id,\n                     data: options.data,\n                  });\n                  reject(err);\n               });\n         }\n      });\n   }\n\n   // objectLoad\n   // save the current object this Action is associated with.\n   objectLoad(object) {\n      super.objectLoad(object);\n      this.updateObjectLoad(object);\n   }\n\n   // updateObjectLoad\n   // save the given object as the object we will update.\n   updateObjectLoad(object) {\n      // stash rules for old object\n      if (this.updateObject) {\n         this.stashRules[this.updateObject.id] = this.valueRules;\n      }\n\n      this.updateObject = object;\n\n      // with a new updateObject, then reset our UI\n      this._uiUpdater = null;\n\n      // reload any stashed rules, or set to {}\n      this.valueRules = this.stashRules[this.updateObject.id] || {};\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // make sure UI is updated:\n      // set our updateObject\n      if (settings.updateObjectID) {\n         this.updateObject = this.currentForm.AB.objectByID(\n            settings.updateObjectID\n         );\n      } else {\n         // DEPRECIATED method of resolving objects .urlResolve()\n         if (settings.updateObjectURL) {\n            var updateObject = this.currentForm.application.urlResolve(\n               settings.updateObjectURL\n            );\n            this.updateObject = updateObject;\n         }\n      }\n\n      // if we have a display component, then populate it:\n      if (this._uiUpdater) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._uiUpdater.fromSettings(settings);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tvalueRules:{}\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._uiUpdater.toSettings();\n      settings.updateObjectURL = this.updateObject.urlPointer();\n\n      return settings;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * Here we need to scan each of our field operations, and verify all\n    * related data collections are initialized before we can continue.\n    * @return {Promise}\n    */\n   isReady() {\n      var allReady = [];\n      let fieldOps = this.valueRules?.fieldOperations ?? [];\n      fieldOps.forEach((op) => {\n         let field = this.getUpdateObjectField(op.fieldID);\n         if (!field) return;\n         if (!field.isConnection && op.valueType !== \"exist\") return;\n\n         // this references a DC\n         let DC = this.currentForm.AB.datacollectionByID(op.value);\n         if (DC?.dataStatus === DC?.dataStatusFlag.initialized) return;\n\n         // not ready yet, so wait until the 'initializedData' event\n         allReady.push(\n            new Promise((resolve /*, reject */) => {\n               DC.on(\"initializedData\", () => {\n                  resolve();\n               });\n            })\n         );\n      });\n      return Promise.all(allReady);\n   }\n};\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.ImageModule=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){\"use strict\";var DocUtils=require(\"docxtemplater\").DocUtils;DocUtils.convertPixelsToEmus=function(pixel){return Math.round(pixel*9525)};module.exports=DocUtils},{docxtemplater:5}],2:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./docUtils\");var extensionRegex=/[^.]+\\.([^.]+)/;var rels={getPrefix:function getPrefix(fileType){return fileType===\"docx\"?\"word\":\"ppt\"},getFileTypeName:function getFileTypeName(fileType){return fileType===\"docx\"?\"document\":\"presentation\"},getRelsFileName:function getRelsFileName(fileName){return fileName.replace(/^.*?([a-zA-Z0-9]+)\\.xml$/,\"$1\")+\".xml.rels\"},getRelsFilePath:function getRelsFilePath(fileName,fileType){var relsFileName=rels.getRelsFileName(fileName);var prefix=fileType===\"pptx\"?\"ppt/slides\":\"word\";return prefix+\"/_rels/\"+relsFileName}};module.exports=function(){function ImgManager(zip,fileName,xmlDocuments,fileType){_classCallCheck(this,ImgManager);this.fileName=fileName;this.prefix=rels.getPrefix(fileType);this.zip=zip;this.xmlDocuments=xmlDocuments;this.fileTypeName=rels.getFileTypeName(fileType);this.mediaPrefix=fileType===\"pptx\"?\"../media\":\"media\";var relsFilePath=rels.getRelsFilePath(fileName,fileType);this.relsDoc=xmlDocuments[relsFilePath]||this.createEmptyRelsDoc(xmlDocuments,relsFilePath)}_createClass(ImgManager,[{key:\"createEmptyRelsDoc\",value:function createEmptyRelsDoc(xmlDocuments,relsFileName){var mainRels=this.prefix+\"/_rels/\"+this.fileTypeName+\".xml.rels\";var doc=xmlDocuments[mainRels];if(!doc){var err=new Error(\"Could not copy from empty relsdoc\");err.properties={mainRels:mainRels,relsFileName:relsFileName,files:Object.keys(this.zip.files)};throw err}var relsDoc=DocUtils.str2xml(DocUtils.xml2str(doc));var relationships=relsDoc.getElementsByTagName(\"Relationships\")[0];var relationshipChilds=relationships.getElementsByTagName(\"Relationship\");for(var i=0,l=relationshipChilds.length;i<l;i++){relationships.removeChild(relationshipChilds[i])}xmlDocuments[relsFileName]=relsDoc;return relsDoc}},{key:\"loadImageRels\",value:function loadImageRels(){var iterable=this.relsDoc.getElementsByTagName(\"Relationship\");return Array.prototype.reduce.call(iterable,function(max,relationship){var id=relationship.getAttribute(\"Id\");if(/^rId[0-9]+$/.test(id)){return Math.max(max,parseInt(id.substr(3),10))}return max},0)}},{key:\"addExtensionRels\",value:function addExtensionRels(contentType,extension){var contentTypeDoc=this.xmlDocuments[\"[Content_Types].xml\"];var defaultTags=contentTypeDoc.getElementsByTagName(\"Default\");var extensionRegistered=Array.prototype.some.call(defaultTags,function(tag){return tag.getAttribute(\"Extension\")===extension});if(extensionRegistered){return}var types=contentTypeDoc.getElementsByTagName(\"Types\")[0];var newTag=contentTypeDoc.createElement(\"Default\");newTag.namespaceURI=null;newTag.setAttribute(\"ContentType\",contentType);newTag.setAttribute(\"Extension\",extension);types.appendChild(newTag)}},{key:\"addImageRels\",value:function addImageRels(imageName,imageData,i){if(i==null){i=0}var realImageName=i===0?imageName:imageName+(\"(\"+i+\")\");var imagePath=this.prefix+\"/media/\"+realImageName;if(this.zip.files[imagePath]!=null){return this.addImageRels(imageName,imageData,i+1)}var image={name:imagePath,data:imageData,options:{binary:true}};this.zip.file(image.name,image.data,image.options);var extension=realImageName.replace(extensionRegex,\"$1\");this.addExtensionRels(\"image/\"+extension,extension);var relationships=this.relsDoc.getElementsByTagName(\"Relationships\")[0];var newTag=this.relsDoc.createElement(\"Relationship\");newTag.namespaceURI=null;var maxRid=this.loadImageRels()+1;newTag.setAttribute(\"Id\",\"rId\"+maxRid);newTag.setAttribute(\"Type\",\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\");newTag.setAttribute(\"Target\",this.mediaPrefix+\"/\"+realImageName);relationships.appendChild(newTag);return maxRid}}]);return ImgManager}()},{\"./docUtils\":1}],3:[function(require,module,exports){\"use strict\";module.exports={getImageXml:function getImageXml(rId,size){return('<w:drawing>\\n\\t\\t<wp:inline distT=\"0\" distB=\"0\" distL=\"0\" distR=\"0\">\\n\\t\\t\\t<wp:extent cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t<wp:effectExtent l=\"0\" t=\"0\" r=\"0\" b=\"0\"/>\\n\\t\\t\\t<wp:docPr id=\"2\" name=\"Image 2\" descr=\"image\"/>\\n\\t\\t\\t<wp:cNvGraphicFramePr>\\n\\t\\t\\t\\t<a:graphicFrameLocks xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\" noChangeAspect=\"1\"/>\\n\\t\\t\\t</wp:cNvGraphicFramePr>\\n\\t\\t\\t<a:graphic xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\">\\n\\t\\t\\t\\t<a:graphicData uri=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t<pic:pic xmlns:pic=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t<pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPr id=\"0\" name=\"Picture 1\" descr=\"image\"/>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t</pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t<pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a:ext uri=\"{28A0092B-C50C-407E-A947-70E740481C1C}\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a14:useLocalDpi xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" val=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t\\t\\t\\t\\t</a:blip>\\n\\t\\t\\t\\t\\t\\t\\t<a:srcRect/>\\n\\t\\t\\t\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t\\t\\t\\t</pic:blipFill>\\n\\t\\t\\t\\t\\t\\t<pic:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:off x=\"0\" y=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t<a:ln>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t\\t\\t</pic:spPr>\\n\\t\\t\\t\\t\\t</pic:pic>\\n\\t\\t\\t\\t</a:graphicData>\\n\\t\\t\\t</a:graphic>\\n\\t\\t</wp:inline>\\n\\t</w:drawing>\\n\\t\\t').replace(/\\t|\\n/g,\"\")},getImageXmlCentered:function getImageXmlCentered(rId,size){return('<w:p>\\n\\t\\t\\t<w:pPr>\\n\\t\\t\\t\\t<w:jc w:val=\"center\"/>\\n\\t\\t\\t</w:pPr>\\n\\t\\t\\t<w:r>\\n\\t\\t\\t\\t<w:rPr/>\\n\\t\\t\\t\\t<w:drawing>\\n\\t\\t\\t\\t\\t<wp:inline distT=\"0\" distB=\"0\" distL=\"0\" distR=\"0\">\\n\\t\\t\\t\\t\\t<wp:extent cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t<wp:docPr id=\"0\" name=\"Picture\" descr=\"\"/>\\n\\t\\t\\t\\t\\t<a:graphic xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\">\\n\\t\\t\\t\\t\\t\\t<a:graphicData uri=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t<pic:pic xmlns:pic=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t\\t<pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPr id=\"0\" name=\"Picture\" descr=\"\"/>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t</pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t</pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<pic:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:off x=\"0\" y=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t<a:ln w=\"9525\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:miter lim=\"800000\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:headEnd/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:tailEnd/>\\n\\t\\t\\t\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t\\t\\t\\t</pic:spPr>\\n\\t\\t\\t\\t\\t\\t</pic:pic>\\n\\t\\t\\t\\t\\t\\t</a:graphicData>\\n\\t\\t\\t\\t\\t</a:graphic>\\n\\t\\t\\t\\t\\t</wp:inline>\\n\\t\\t\\t\\t</w:drawing>\\n\\t\\t\\t</w:r>\\n\\t\\t</w:p>\\n\\t\\t').replace(/\\t|\\n/g,\"\")},getPptxImageXml:function getPptxImageXml(rId,size,offset){return('<p:pic>\\n\\t\\t\\t<p:nvPicPr>\\n\\t\\t\\t\\t<p:cNvPr id=\"6\" name=\"Picture 2\"/>\\n\\t\\t\\t\\t<p:cNvPicPr>\\n\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t</p:cNvPicPr>\\n\\t\\t\\t\\t<p:nvPr/>\\n\\t\\t\\t</p:nvPicPr>\\n\\t\\t\\t<p:blipFill>\\n\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\" cstate=\"print\">\\n\\t\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t\\t<a:ext uri=\"{28A0092B-C50C-407E-A947-70E740481C1C}\">\\n\\t\\t\\t\\t\\t\\t\\t<a14:useLocalDpi xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" val=\"0\"/>\\n\\t\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t\\t</a:blip>\\n\\t\\t\\t\\t<a:srcRect/>\\n\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t</p:blipFill>\\n\\t\\t\\t<p:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t<a:off x=\"'+offset.x+'\" y=\"'+offset.y+'\"/>\\n\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t<a:ln>\\n\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t<a:effectLst/>\\n\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{909E8E84-426E-40DD-AFC4-6F175D3DCCD1}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenFill xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\">\\n\\t\\t\\t\\t\\t\\t\\t<a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"accent1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:solidFill>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenFill>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{91240B29-F687-4F45-9708-019B960494DF}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenLine xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" w=\"9525\">\\n\\t\\t\\t\\t\\t\\t\\t<a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"tx1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:miter lim=\"800000\"/>\\n\\t\\t\\t\\t\\t\\t\\t<a:headEnd/>\\n\\t\\t\\t\\t\\t\\t\\t<a:tailEnd/>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenLine>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{AF507438-7753-43E0-B8FC-AC1667EBCBE1}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenEffects xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\">\\n\\t\\t\\t\\t\\t\\t\\t<a:effectLst>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:outerShdw dist=\"35921\" dir=\"2700000\" algn=\"ctr\" rotWithShape=\"0\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"bg2\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t</a:outerShdw>\\n\\t\\t\\t\\t\\t\\t\\t</a:effectLst>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenEffects>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t</p:spPr>\\n\\t\\t</p:pic>\\n\\t\\t').replace(/\\t|\\n/g,\"\")}}},{}],4:[function(require,module,exports){\"use strict\";function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}var memoize=require(\"./memoize\");var DOMParser=require(\"xmldom\").DOMParser;var XMLSerializer=require(\"xmldom\").XMLSerializer;var Errors=require(\"./errors\");var DocUtils={};function parser(tag){return _defineProperty({},\"get\",function get(scope){if(tag===\".\"){return scope}return scope[tag]})}DocUtils.defaults={nullGetter:function nullGetter(part){if(!part.module){return\"undefined\"}if(part.module===\"rawxml\"){return\"\"}return\"\"},parser:memoize(parser),fileType:\"docx\",delimiters:{start:\"{\",end:\"}\"}};DocUtils.mergeObjects=function(){var resObj={};var obj=void 0,keys=void 0;for(var i=0;i<arguments.length;i+=1){obj=arguments[i];keys=Object.keys(obj);for(var j=0;j<keys.length;j+=1){resObj[keys[j]]=obj[keys[j]]}}return resObj};DocUtils.xml2str=function(xmlNode){var a=new XMLSerializer;return a.serializeToString(xmlNode)};DocUtils.decodeUtf8=function(s){try{if(s===undefined){return undefined}return decodeURIComponent(escape(DocUtils.convertSpaces(s)))}catch(e){var err=new Error(\"End\");err.properties.data=s;err.properties.explanation=\"Could not decode string to UTF8\";throw err}};DocUtils.encodeUtf8=function(s){return unescape(encodeURIComponent(s))};DocUtils.str2xml=function(str,errorHandler){var parser=new DOMParser({errorHandler:errorHandler});return parser.parseFromString(str,\"text/xml\")};DocUtils.charMap={\"&\":\"&amp;\",\"'\":\"&apos;\",\"<\":\"&lt;\",\">\":\"&gt;\"};var regexStripRegexp=/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g;DocUtils.escapeRegExp=function(str){return str.replace(regexStripRegexp,\"\\\\$&\")};DocUtils.charMapRegexes=Object.keys(DocUtils.charMap).map(function(endChar){var startChar=DocUtils.charMap[endChar];return{rstart:new RegExp(DocUtils.escapeRegExp(startChar),\"g\"),rend:new RegExp(DocUtils.escapeRegExp(endChar),\"g\"),start:startChar,end:endChar}});DocUtils.wordToUtf8=function(string){var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rstart,r.end)}return string};DocUtils.utf8ToWord=function(string){if(typeof string!==\"string\"){string=string.toString()}var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rend,r.start)}return string};DocUtils.cloneDeep=function(obj){return JSON.parse(JSON.stringify(obj))};DocUtils.concatArrays=function(arrays){return arrays.reduce(function(result,array){Array.prototype.push.apply(result,array);return result},[])};var spaceRegexp=new RegExp(String.fromCharCode(160),\"g\");DocUtils.convertSpaces=function(s){return s.replace(spaceRegexp,\" \")};DocUtils.pregMatchAll=function(regex,content){var matchArray=[];var match=void 0;while((match=regex.exec(content))!=null){matchArray.push({array:match,offset:match.index})}return matchArray};DocUtils.sizeOfObject=function(obj){return Object.keys(obj).length};function throwXmlTagNotFound(options){var err=new Errors.XTTemplateError(\"No tag '\"+options.element+\"' was found at the \"+options.position);err.properties={id:\"no_xml_tag_found_at_\"+options.position,explanation:\"No tag '\"+options.element+\"' was found at the \"+options.position,parsed:options.parsed,index:options.index,element:options.element};throw err}DocUtils.getRight=function(parsed,element,index){for(var i=index,l=parsed.length;i<l;i++){var part=parsed[i];if(part.value===\"</\"+element+\">\"){return i}}throwXmlTagNotFound({position:\"right\",element:element,parsed:parsed,index:index})};DocUtils.getLeft=function(parsed,element,index){var parts=parsed.slice(0,index);for(var i=parts.length-1;i>=0;i--){var part=parts[i];if(part.value.indexOf(\"<\"+element)===0&&[\">\",\" \"].indexOf(part.value[element.length+1])!==-1){return i}}throwXmlTagNotFound({position:\"left\",element:element,parsed:parsed,index:index})};module.exports=DocUtils;DocUtils.traits=require(\"./traits\");DocUtils.moduleWrapper=require(\"./module-wrapper\")},{\"./errors\":6,\"./memoize\":9,\"./module-wrapper\":11,\"./traits\":20,xmldom:23}],5:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var wrapper=DocUtils.moduleWrapper;var Docxtemplater=function(){function Docxtemplater(){_classCallCheck(this,Docxtemplater);if(arguments.length>0){throw new Error(\"The constructor with parameters have been removed in docxtemplater 3.0, please check the upgrade guide.\")}this.compiled={};this.modules=[];this.setOptions({})}_createClass(Docxtemplater,[{key:\"attachModule\",value:function attachModule(module){this.modules.push(wrapper(module));return this}},{key:\"setOptions\",value:function setOptions(options){var _this=this;this.options=options;Object.keys(DocUtils.defaults).forEach(function(key){var defaultValue=DocUtils.defaults[key];_this[key]=_this.options[key]!=null?_this.options[key]:defaultValue});if(this.fileType===\"docx\"||this.fileType===\"pptx\"){this.fileTypeConfig=Docxtemplater.FileTypeConfig[this.fileType]}this.fileTypeConfig=this.options.fileTypeConfig||this.fileTypeConfig;this.options.xmlFileNames=[];return this}},{key:\"loadZip\",value:function loadZip(zip){if(zip.loadAsync){throw new Error(\"Docxtemplater doesn't handle JSZip version >=3, see changelog\")}this.zip=zip;return this}},{key:\"compileFile\",value:function compileFile(fileName){var currentFile=this.createTemplateClass(fileName);currentFile.parse();this.compiled[fileName]=currentFile}},{key:\"compile\",value:function compile(){this.templatedFiles=this.fileTypeConfig.getTemplatedFiles(this.zip)}},{key:\"render\",value:function render(){var _this2=this;this.modules=this.fileTypeConfig.baseModules.map(function(moduleFunction){return moduleFunction()}).concat(this.modules);this.options=this.modules.reduce(function(options,module){return module.optionsTransformer(options,_this2)},this.options);this.xmlDocuments=this.options.xmlFileNames.reduce(function(xmlDocuments,fileName){var content=_this2.zip.files[fileName].asText();xmlDocuments[fileName]=DocUtils.str2xml(content);return xmlDocuments},{});this.modules.forEach(function(module){module.set({zip:_this2.zip,xmlDocuments:_this2.xmlDocuments,data:_this2.data})});this.compile();this.modules.forEach(function(module){module.set({compiled:_this2.compiled})});this.templatedFiles.forEach(function(fileName){if(_this2.zip.files[fileName]!=null){_this2.compileFile(fileName)}});this.mapper=this.modules.reduce(function(value,module){return module.getRenderedMap(value)},{});Object.keys(this.mapper).forEach(function(to){var mapped=_this2.mapper[to];var from=mapped.from;var currentFile=_this2.compiled[from];currentFile.setTags(mapped.data);currentFile.render();_this2.zip.file(to,currentFile.content)});Object.keys(this.xmlDocuments).forEach(function(fileName){_this2.zip.remove(fileName);var content=DocUtils.encodeUtf8(DocUtils.xml2str(_this2.xmlDocuments[fileName]));return _this2.zip.file(fileName,content,{})});return this}},{key:\"setData\",value:function setData(data){this.data=data;return this}},{key:\"getZip\",value:function getZip(){return this.zip}},{key:\"createTemplateClass\",value:function createTemplateClass(path){var usedData=this.zip.files[path].asText();return this.createTemplateClassFromContent(usedData,path)}},{key:\"createTemplateClassFromContent\",value:function createTemplateClassFromContent(content,filePath){var _this3=this;var xmltOptions={filePath:filePath};Object.keys(DocUtils.defaults).forEach(function(key){xmltOptions[key]=_this3[key]});xmltOptions.fileTypeConfig=this.fileTypeConfig;xmltOptions.modules=this.modules;return new Docxtemplater.XmlTemplater(content,xmltOptions)}},{key:\"getFullText\",value:function getFullText(path){return this.createTemplateClass(path||this.fileTypeConfig.textPath).getFullText()}},{key:\"getTemplatedFiles\",value:function getTemplatedFiles(){this.compile();return this.templatedFiles}}]);return Docxtemplater}();Docxtemplater.DocUtils=require(\"./doc-utils\");Docxtemplater.Errors=require(\"./errors\");Docxtemplater.XmlTemplater=require(\"./xml-templater\");Docxtemplater.FileTypeConfig=require(\"./file-type-config\");Docxtemplater.XmlMatcher=require(\"./xml-matcher\");module.exports=Docxtemplater},{\"./doc-utils\":4,\"./errors\":6,\"./file-type-config\":7,\"./xml-matcher\":21,\"./xml-templater\":22}],6:[function(require,module,exports){\"use strict\";function XTError(message){this.name=\"GenericError\";this.message=message;this.stack=new Error(message).stack}XTError.prototype=Error.prototype;function XTTemplateError(message){this.name=\"TemplateError\";this.message=message;this.stack=new Error(message).stack}XTTemplateError.prototype=new XTError;function XTScopeParserError(message){this.name=\"ScopeParserError\";this.message=message;this.stack=new Error(message).stack}XTScopeParserError.prototype=new XTError;function XTInternalError(message){this.name=\"InternalError\";this.properties={explanation:\"InternalError\"};this.message=message;this.stack=new Error(message).stack}XTInternalError.prototype=new XTError;module.exports={XTError:XTError,XTTemplateError:XTTemplateError,XTInternalError:XTInternalError,XTScopeParserError:XTScopeParserError}},{}],7:[function(require,module,exports){\"use strict\";var loopModule=require(\"./modules/loop\");var spacePreserveModule=require(\"./modules/space-preserve\");var rawXmlModule=require(\"./modules/rawxml\");var expandPairTrait=require(\"./modules/expand-pair-trait\");var render=require(\"./modules/render\");var PptXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/ppt\\/(slides|slideMasters)\\/(slide|slideMaster)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"ppt/presentation.xml\"])},textPath:\"ppt/slides/slide1.xml\",tagsXmlTextArray:[\"a:t\",\"m:t\"],tagsXmlLexedArray:[\"p:sp\",\"a:tc\",\"a:tr\",\"a:table\",\"a:p\",\"a:r\"],tagRawXml:\"p:sp\",tagTextXml:\"a:t\",baseModules:[render,expandPairTrait,rawXmlModule,loopModule]};var DocXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/word\\/(header|footer)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"word/document.xml\"])},textPath:\"word/document.xml\",tagsXmlTextArray:[\"w:t\",\"m:t\"],tagsXmlLexedArray:[\"w:tc\",\"w:tr\",\"w:table\",\"w:p\",\"w:r\"],tagRawXml:\"w:p\",tagTextXml:\"w:t\",baseModules:[render,spacePreserveModule,expandPairTrait,rawXmlModule,loopModule]};module.exports={docx:DocXFileTypeConfig,pptx:PptXFileTypeConfig}},{\"./modules/expand-pair-trait\":12,\"./modules/loop\":13,\"./modules/rawxml\":14,\"./modules/render\":15,\"./modules/space-preserve\":16}],8:[function(require,module,exports){\"use strict\";var Errors=require(\"./errors\");var DocUtils=require(\"./doc-utils\");function inRange(range,match){return range[0]<=match.offset&&match.offset<range[1]}function updateInTextTag(part,inTextTag){if(part.type===\"tag\"&&part.position===\"start\"&&part.text){if(inTextTag){throw new Error(\"Malformed xml : Already in text tag\")}return true}if(part.type===\"tag\"&&part.position===\"end\"&&part.text){if(!inTextTag){throw new Error(\"Malformed xml : Already not in text tag\")}return false}return inTextTag}function offsetSort(a,b){return a.offset-b.offset}function getTag(tag){var start=1;if(tag[1]===\"/\"){start=2}var index=tag.indexOf(\" \");var end=index===-1?tag.length-1:index;return{tag:tag.slice(start,end),position:start===1?\"start\":\"end\"}}function tagMatcher(content,textMatchArray,othersMatchArray){var cursor=0;var contentLength=content.length;var allMatches=DocUtils.concatArrays([textMatchArray.map(function(tag){return{tag:tag,text:true}}),othersMatchArray.map(function(tag){return{tag:tag,text:false}})]).reduce(function(allMatches,t){allMatches[t.tag]=t.text;return allMatches},{});var totalMatches=[];while(cursor<contentLength){cursor=content.indexOf(\"<\",cursor);if(cursor===-1){break}var offset=cursor;cursor=content.indexOf(\">\",cursor);var tagText=content.slice(offset,cursor+1);var _getTag=getTag(tagText),tag=_getTag.tag,position=_getTag.position;var text=allMatches[tag];if(text==null){continue}totalMatches.push({type:\"tag\",position:position,text:text,offset:offset,value:tagText})}return totalMatches}function throwUnopenedTagException(options){var err=new Errors.XTTemplateError(\"Unopened tag\");err.properties={xtag:options.xtag.split(\" \")[0],id:\"unopened_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function throwUnclosedTagException(options){var err=new Errors.XTTemplateError(\"Unclosed tag\");err.properties={xtag:options.xtag.split(\" \")[0].substr(1),id:\"unclosed_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function assertDelimiterOrdered(delimiterMatches,fullText){var inDelimiter=false;var lastDelimiterMatch={offset:0};var xtag=void 0;delimiterMatches.forEach(function(delimiterMatch){xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(delimiterMatch.position===\"start\"&&inDelimiter||delimiterMatch.position===\"end\"&&!inDelimiter){if(delimiterMatch.position===\"start\"){throwUnclosedTagException({xtag:xtag})}else{throwUnopenedTagException({xtag:xtag})}}inDelimiter=!inDelimiter;lastDelimiterMatch=delimiterMatch});var delimiterMatch={offset:fullText.length};xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(inDelimiter){throwUnclosedTagException({xtag:xtag})}}function getAllIndexes(arr,val,position){var indexes=[];var offset=-1;do{offset=arr.indexOf(val,offset+1);if(offset!==-1){indexes.push({offset:offset,position:position})}}while(offset!==-1);return indexes}function Reader(innerContentParts){var _this=this;this.innerContentParts=innerContentParts;this.full=\"\";this.parseDelimiters=function(delimiters){_this.full=_this.innerContentParts.join(\"\");var offset=0;_this.ranges=_this.innerContentParts.map(function(part){offset+=part.length;return offset-part.length});var delimiterMatches=DocUtils.concatArrays([getAllIndexes(_this.full,delimiters.start,\"start\"),getAllIndexes(_this.full,delimiters.end,\"end\")]).sort(offsetSort);assertDelimiterOrdered(delimiterMatches,_this.full);var delimiterLength={start:delimiters.start.length,end:delimiters.end.length};var cutNext=0;var delimiterIndex=0;_this.parsed=_this.ranges.map(function(offset,i){var range=[offset,offset+this.innerContentParts[i].length];var partContent=this.innerContentParts[i];var delimitersInOffset=[];while(delimiterIndex<delimiterMatches.length&&inRange(range,delimiterMatches[delimiterIndex])){delimitersInOffset.push(delimiterMatches[delimiterIndex]);delimiterIndex++}var parts=[];var cursor=0;if(cutNext>0){cursor=cutNext;cutNext=0}delimitersInOffset.forEach(function(delimiterInOffset){var value=partContent.substr(cursor,delimiterInOffset.offset-offset-cursor);if(value.length>0){parts.push({type:\"content\",value:value})}parts.push({type:\"delimiter\",position:delimiterInOffset.position});cursor=delimiterInOffset.offset-offset+delimiterLength[delimiterInOffset.position]});cutNext=cursor-partContent.length;var value=partContent.substr(cursor);if(value.length>0){parts.push({type:\"content\",value:value})}return parts},_this)}}module.exports={parse:function parse(xmlparsed,delimiters){var inTextTag=false;var innerContentParts=[];xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(inTextTag&&part.type===\"content\"){innerContentParts.push(part.value)}});var reader=new Reader(innerContentParts);reader.parseDelimiters(delimiters);var newArray=[];var index=0;xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(part.type===\"content\"){part.position=inTextTag?\"insidetag\":\"outsidetag\"}if(inTextTag&&part.type===\"content\"){Array.prototype.push.apply(newArray,reader.parsed[index].map(function(p){if(p.type===\"content\"){p.position=\"insidetag\"}return p}));index++}else{newArray.push(part)}});return newArray},xmlparse:function xmlparse(content,xmltags){var matches=tagMatcher(content,xmltags.text,xmltags.other);var cursor=0;var parsed=matches.reduce(function(parsed,match){var value=content.substr(cursor,match.offset-cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}cursor=match.offset+match.value.length;delete match.offset;if(match.value.length>0){parsed.push(match)}return parsed},[]);var value=content.substr(cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}return parsed}}},{\"./doc-utils\":4,\"./errors\":6}],9:[function(require,module,exports){\"use strict\";function memoize(func){var stringifyJson=JSON.stringify,cache={};function cachedfun(){var hash=stringifyJson(arguments);return hash in cache?cache[hash]:cache[hash]=func.apply(this,arguments)}return cachedfun}module.exports=memoize},{}],10:[function(require,module,exports){\"use strict\";function getMinFromArrays(arrays,state){var minIndex=-1;for(var i=0,l=arrays.length;i<l;i++){if(state[i]>=arrays[i].length){continue}if(minIndex===-1||arrays[i][state[i]].offset<arrays[minIndex][state[minIndex]].offset){minIndex=i}}if(minIndex===-1){throw new Error(\"minIndex negative\")}return minIndex}module.exports=function(arrays){var totalLength=arrays.reduce(function(sum,array){return sum+array.length},0);arrays=arrays.filter(function(array){return array.length>0});var resultArray=new Array(totalLength);var state=arrays.map(function(){return 0});var i=0;while(i<=totalLength-1){var arrayIndex=getMinFromArrays(arrays,state);resultArray[i]=arrays[arrayIndex][state[arrayIndex]];state[arrayIndex]++;i++}return resultArray}},{}],11:[function(require,module,exports){\"use strict\";function emptyFun(){}function identity(i){return i}module.exports=function(module){var defaults={set:emptyFun,parse:emptyFun,render:emptyFun,getTraits:emptyFun,optionsTransformer:identity,getRenderedMap:identity,postparse:identity};if(Object.keys(defaults).every(function(key){return!module[key]})){throw new Error(\"This module cannot be wrapped, because it doesn't define any of the necessary functions\")}Object.keys(defaults).forEach(function(key){module[key]=module[key]||defaults[key]});return module}},{}],12:[function(require,module,exports){\"use strict\";var traitName=\"expandPair\";var mergeSort=require(\"../mergesort\");var DocUtils=require(\"../doc-utils\");var wrapper=require(\"../module-wrapper\");var _require=require(\"../traits\"),getExpandToDefault=_require.getExpandToDefault;var Errors=require(\"../errors\");function throwUnmatchedLoopException(options){var location=options.location;var t=location===\"start\"?\"unclosed\":\"unopened\";var T=location===\"start\"?\"Unclosed\":\"Unopened\";var err=new Errors.XTTemplateError(T+\" loop\");var tag=options.part.value;err.properties={id:t+\"_loop\",explanation:\"The loop with tag \"+tag+\" is \"+t,xtag:tag};throw err}function throwClosingTagNotMatchOpeningTag(options){var tags=options.tags;var err=new Errors.XTTemplateError(\"Closing tag does not match opening tag\");err.properties={id:\"closing_tag_does_not_match_opening_tag\",explanation:'The tag \"'+tags[0].value+'\" is closed by the tag \"'+tags[1].value+'\"',openingtag:tags[0].value,closingtag:tags[1].value};throw err}function getOpenCountChange(part){switch(part.location){case\"start\":return 1;case\"end\":return-1;default:throw new Error(\"Location should be one of 'start' or 'end' (given : \"+part.location+\")\")}}function getPairs(traits){if(traits.length===0){return[]}var countOpen=1;var firstTrait=traits[0];for(var i=1;i<traits.length;i++){var currentTrait=traits[i];countOpen+=getOpenCountChange(currentTrait.part);if(countOpen===0){if(currentTrait.part.value!==firstTrait.part.value&&currentTrait.part.value!==\"\"){throwClosingTagNotMatchOpeningTag({tags:[firstTrait.part,currentTrait.part]})}var outer=getPairs(traits.slice(i+1));\nreturn[[firstTrait,currentTrait]].concat(outer)}}var part=firstTrait.part;throwUnmatchedLoopException({part:part,location:part.location})}var expandPairTrait={name:\"ExpandPairTrait\",postparse:function postparse(parsed,_ref){var getTraits=_ref.getTraits,_postparse=_ref.postparse;var traits=getTraits(traitName,parsed);traits=traits.map(function(trait){return trait||[]});traits=mergeSort(traits);var pairs=getPairs(traits);var expandedPairs=pairs.map(function(pair){var expandTo=pair[0].part.expandTo;if(expandTo===\"auto\"){expandTo=getExpandToDefault(parsed.slice(pair[0].offset,pair[1].offset))}if(!expandTo){return[pair[0].offset,pair[1].offset]}var left=DocUtils.getLeft(parsed,expandTo,pair[0].offset);var right=DocUtils.getRight(parsed,expandTo,pair[1].offset);return[left,right]});var currentPairIndex=0;var innerParts=void 0;return parsed.reduce(function(newParsed,part,i){var inPair=currentPairIndex<pairs.length&&expandedPairs[currentPairIndex][0]<=i;var pair=pairs[currentPairIndex];var expandedPair=expandedPairs[currentPairIndex];if(!inPair){newParsed.push(part);return newParsed}if(expandedPair[0]===i){innerParts=[]}if(pair[0].offset!==i&&pair[1].offset!==i){innerParts.push(part)}if(expandedPair[1]===i){var basePart=parsed[pair[0].offset];delete basePart.location;delete basePart.expandTo;basePart.subparsed=_postparse(innerParts);newParsed.push(basePart);currentPairIndex++}return newParsed},[])}};module.exports=function(){return wrapper(expandPairTrait)}},{\"../doc-utils\":4,\"../errors\":6,\"../mergesort\":10,\"../module-wrapper\":11,\"../traits\":20}],13:[function(require,module,exports){\"use strict\";var DocUtils=require(\"../doc-utils\");var dashInnerRegex=/^-([^\\s]+)\\s(.+)$/;var wrapper=require(\"../module-wrapper\");var moduleName=\"loop\";var loopModule={name:\"LoopModule\",parse:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent[0]===\"#\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:false}}if(placeHolderContent[0]===\"^\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:true}}if(placeHolderContent[0]===\"/\"){return{type:type,value:placeHolderContent.substr(1),module:module,location:\"end\"}}if(placeHolderContent[0]===\"-\"){var value=placeHolderContent.replace(dashInnerRegex,\"$2\");var expandTo=placeHolderContent.replace(dashInnerRegex,\"$1\");return{type:type,value:value,expandTo:expandTo,module:module,location:\"start\",inverted:false}}return null},getTraits:function getTraits(traitName,parsed){if(traitName!==\"expandPair\"){return}return parsed.reduce(function(tags,part,offset){if(part.type===\"placeholder\"&&part.module===moduleName){tags.push({part:part,offset:offset})}return tags},[])},render:function render(part,options){if(!part.type===\"placeholder\"||part.module!==moduleName){return null}var totalValue=[];function loopOver(scope){var scopeManager=options.scopeManager.createSubScopeManager(scope,part.value);totalValue.push(options.render(DocUtils.mergeObjects({},options,{compiled:part.subparsed,tags:{},scopeManager:scopeManager})))}options.scopeManager.loopOver(part.value,loopOver,part.inverted);return{value:totalValue.join(\"\")}}};module.exports=function(){return wrapper(loopModule)}},{\"../doc-utils\":4,\"../module-wrapper\":11}],14:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"../doc-utils\");var Errors=require(\"../errors\");var moduleName=\"rawxml\";var wrapper=require(\"../module-wrapper\");function throwRawTagShouldBeOnlyTextInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag should be the only text in paragraph\");var tag=options.part.value;err.properties={id:\"raw_xml_tag_should_be_only_text_in_paragraph\",explanation:\"The tag \"+tag,xtag:options.part.value,paragraphParts:options.paragraphParts};throw err}function getInner(_ref){var part=_ref.part,left=_ref.left,right=_ref.right,postparsed=_ref.postparsed,index=_ref.index;var paragraphParts=postparsed.slice(left+1,right);paragraphParts.forEach(function(p,i){if(i===index-left-1){return}if(p.type===\"placeholder\"||p.type===\"content\"&&p.position===\"insidetag\"){throwRawTagShouldBeOnlyTextInParagraph({paragraphParts:paragraphParts,part:part})}});return part}var RawXmlModule=function(){function RawXmlModule(){_classCallCheck(this,RawXmlModule);this.name=\"RawXmlModule\"}_createClass(RawXmlModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){this.fileTypeConfig=docxtemplater.fileTypeConfig;return options}},{key:\"parse\",value:function parse(placeHolderContent){var type=\"placeholder\";if(placeHolderContent[0]!==\"@\"){return null}return{type:type,value:placeHolderContent.substr(1),module:moduleName}}},{key:\"postparse\",value:function postparse(parsed){return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:this.fileTypeConfig.tagRawXml})}},{key:\"render\",value:function render(part,options){if(part.module!==moduleName){return null}var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return{value:value}}}]);return RawXmlModule}();module.exports=function(){return wrapper(new RawXmlModule)}},{\"../doc-utils\":4,\"../errors\":6,\"../module-wrapper\":11}],15:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var wrapper=require(\"../module-wrapper\");var Render=function(){function Render(){_classCallCheck(this,Render);this.name=\"Render\"}_createClass(Render,[{key:\"set\",value:function set(obj){if(obj.compiled){this.compiled=obj.compiled}if(obj.data!=null){this.data=obj.data}}},{key:\"getRenderedMap\",value:function getRenderedMap(mapper){var _this=this;return Object.keys(this.compiled).reduce(function(mapper,from){mapper[from]={from:from,data:_this.data};return mapper},mapper)}}]);return Render}();module.exports=function(){return wrapper(new Render)}},{\"../module-wrapper\":11}],16:[function(require,module,exports){\"use strict\";var wrapper=require(\"../module-wrapper\");var spacePreserve={name:\"SpacePreserveModule\",postparse:function postparse(parsed){var chunk=[];var inChunk=false;var result=parsed.reduce(function(parsed,part){if(part.type===\"tag\"&&part.position===\"start\"&&part.text&&part.value===\"<w:t>\"){inChunk=true}if(inChunk){if(part.type===\"placeholder\"&&!part.module){chunk[0].value='<w:t xml:space=\"preserve\">'}chunk.push(part)}else{parsed.push(part)}if(part.type===\"tag\"&&part.position===\"end\"&&part.text&&part.value===\"</w:t>\"){Array.prototype.push.apply(parsed,chunk);inChunk=false;chunk=[]}return parsed},[]);Array.prototype.push.apply(result,chunk);return result}};module.exports=function(){return wrapper(spacePreserve)}},{\"../module-wrapper\":11}],17:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var parser={postparse:function postparse(parsed,modules){function getTraits(traitName,parsed){return modules.map(function(module){return module.getTraits(traitName,parsed)})}function postparse(parsed){return modules.reduce(function(parsed,module){return module.postparse(parsed,{postparse:postparse,getTraits:getTraits})},parsed)}return postparse(parsed)},parse:function parse(lexed,modules){function moduleParse(placeHolderContent,parsed){var moduleParsed=void 0;for(var i=0,l=modules.length;i<l;i++){var _module=modules[i];moduleParsed=_module.parse(placeHolderContent);if(moduleParsed){parsed.push(moduleParsed);return moduleParsed}}return null}var inPlaceHolder=false;var placeHolderContent=void 0;var tailParts=[];return lexed.reduce(function(parsed,token){if(token.type===\"delimiter\"){inPlaceHolder=token.position===\"start\";if(token.position===\"end\"){placeHolderContent=DocUtils.wordToUtf8(placeHolderContent);if(!moduleParse(placeHolderContent,parsed)){parsed.push({type:\"placeholder\",value:placeHolderContent})}Array.prototype.push.apply(parsed,tailParts);tailParts=[];return parsed}placeHolderContent=\"\";return parsed}if(inPlaceHolder){if(token.type===\"content\"&&token.position===\"insidetag\"){placeHolderContent+=token.value}else{tailParts.push(token)}return parsed}parsed.push(token);return parsed},[])}};module.exports=parser},{\"./doc-utils\":4}],18:[function(require,module,exports){\"use strict\";var ScopeManager=require(\"./scope-manager\");var DocUtils=require(\"./doc-utils\");function moduleRender(part,options){var moduleRendered=void 0;for(var i=0,l=options.modules.length;i<l;i++){var _module=options.modules[i];moduleRendered=_module.render(part,options);if(moduleRendered){return moduleRendered}}return false}function render(options){options.render=render;options.modules=options.modules;if(!options.scopeManager){options.scopeManager=ScopeManager.createBaseScopeManager(options)}return options.compiled.map(function(part){var moduleRendered=moduleRender(part,options);if(moduleRendered){return moduleRendered.value}if(part.type===\"placeholder\"){var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return DocUtils.utf8ToWord(value)}if(part.type===\"content\"||part.type===\"tag\"){return part.value}throw new Error('Unimplemented tag type \"'+part.type+'\"')}).join(\"\")}module.exports=render},{\"./doc-utils\":4,\"./scope-manager\":19}],19:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var Errors=require(\"./errors\");var ScopeManager=function(){function ScopeManager(options){_classCallCheck(this,ScopeManager);this.scopePath=options.scopePath;this.scopeList=options.scopeList;this.parser=options.parser}_createClass(ScopeManager,[{key:\"loopOver\",value:function loopOver(tag,callback,inverted){inverted=inverted||false;return this.loopOverValue(this.getValue(tag),callback,inverted)}},{key:\"functorIfInverted\",value:function functorIfInverted(inverted,functor,value){if(inverted){functor(value)}}},{key:\"isValueFalsy\",value:function isValueFalsy(value,type){return value==null||!value||type===\"[object Array]\"&&value.length===0}},{key:\"loopOverValue\",value:function loopOverValue(value,functor,inverted){var type=Object.prototype.toString.call(value);var currentValue=this.scopeList[this.num];if(this.isValueFalsy(value,type)){return this.functorIfInverted(inverted,functor,currentValue)}if(type===\"[object Array]\"){for(var i=0,scope;i<value.length;i++){scope=value[i];this.functorIfInverted(!inverted,functor,scope)}return}if(type===\"[object Object]\"){return this.functorIfInverted(!inverted,functor,value)}if(value===true){return this.functorIfInverted(!inverted,functor,currentValue)}}},{key:\"getValue\",value:function getValue(tag,num){this.num=num==null?this.scopeList.length-1:num;var err=void 0;var parser=void 0;var result=void 0;var scope=this.scopeList[this.num];try{parser=this.parser(tag)}catch(error){err=new Errors.XTScopeParserError(\"Scope parser compilation failed\");err.properties={id:\"scopeparser_compilation_failed\",tag:tag,explanation:\"The scope parser for the tag \"+tag+\" failed to compile\",rootError:error};throw err}try{result=parser.get(scope,{num:this.num,scopeList:this.scopeList})}catch(error){err=new Errors.XTScopeParserError(\"Scope parser execution failed\");err.properties={id:\"scopeparser_execution_failed\",explanation:\"The scope parser for the tag \"+tag+\" failed to execute\",scope:scope,tag:tag,rootError:error};throw err}if(result==null&&this.num>0){return this.getValue(tag,this.num-1)}return result}},{key:\"createSubScopeManager\",value:function createSubScopeManager(scope,tag){var options={scopePath:this.scopePath.slice(0),scopeList:this.scopeList.slice(0)};options.parser=this.parser;options.scopeList=this.scopeList.concat(scope);options.scopePath=this.scopePath.concat(tag);return new ScopeManager(options)}}]);return ScopeManager}();ScopeManager.createBaseScopeManager=function(_ref){var parser=_ref.parser,tags=_ref.tags;var options={parser:parser,tags:tags};options.scopePath=[];options.scopeList=[tags];return new ScopeManager(options)};module.exports=ScopeManager},{\"./errors\":6}],20:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var Errors=require(\"./errors\");function throwRawTagNotInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag not in paragraph\");var tag=options.part.value;err.properties={id:\"raw_tag_outerxml_invalid\",explanation:'The tag \"'+tag+'\"',rootError:options.rootError,xtag:tag};throw err}function lastTagIsOpenTag(array,tag){if(array.length===0){return false}var lastTag=array[array.length-1];var innerLastTag=lastTag.tag.substr(1);var innerCurrentTag=tag.substr(2,tag.length-3);return innerLastTag.indexOf(innerCurrentTag)===0}function addTag(array,tag){array.push({tag:tag});return array}function getListXmlElements(parts){var tags=parts.filter(function(part){return part.type===\"tag\"}).map(function(part){return part.value});var result=[];for(var i=0,tag;i<tags.length;i++){tag=tags[i];if(tag[1]===\"/\"){if(lastTagIsOpenTag(result,tag)){result.pop()}else{result=addTag(result,tag)}}else if(tag[tag.length-1]!==\"/\"){result=addTag(result,tag)}}return result}function getExpandToDefault(parts){var xmlElements=getListXmlElements(parts);for(var i=0;i<xmlElements.length;i++){var xmlElement=xmlElements[i];if(xmlElement.tag.indexOf(\"<w:tc\")===0){return\"w:tr\"}}return false}function expandOne(part,postparsed,options){var expandTo=part.expandTo||options.expandTo;var index=postparsed.indexOf(part);if(!expandTo){return postparsed}var right=void 0,left=void 0;try{right=DocUtils.getRight(postparsed,expandTo,index);left=DocUtils.getLeft(postparsed,expandTo,index)}catch(rootError){throwRawTagNotInParagraph({part:part,rootError:rootError})}var leftParts=postparsed.slice(left,index);var rightParts=postparsed.slice(index+1,right+1);var inner=options.getInner({index:index,part:part,leftParts:leftParts,rightParts:rightParts,left:left,right:right,postparsed:postparsed});var type=Object.prototype.toString.call(inner);if(type===\"[object Array]\"){inner=DocUtils.concatArrays(inner)}return DocUtils.concatArrays([postparsed.slice(0,left),[inner],postparsed.slice(right+1)])}function expandToOne(postparsed,options){var expandToElements=postparsed.reduce(function(elements,part){if(part.type===\"placeholder\"&&part.module===options.moduleName){elements.push(part)}return elements},[]);expandToElements.forEach(function(part){postparsed=expandOne(part,postparsed,options)});return postparsed}module.exports={expandToOne:expandToOne,getExpandToDefault:getExpandToDefault}},{\"./doc-utils\":4,\"./errors\":6}],21:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var memoize=require(\"./memoize\");function handleRecursiveCase(res){function replacerUnshift(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.shift();var match=pn.array[0]+pn.array[1];pn.array.unshift(match);pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.first=true;res.matches.unshift(pn);res.charactersAdded.unshift(0);return res.charactersAddedCumulative.unshift(0)}if(res.content.indexOf(\"<\")===-1&&res.content.indexOf(\">\")===-1){res.content.replace(/^()([^<>]*)$/,replacerUnshift)}var r=new RegExp(\"^()([^<]+)</(?:\"+res.tagsXmlArrayJoined+\")>\");res.content.replace(r,replacerUnshift);function replacerPush(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.last=true;res.matches.push(pn);res.charactersAdded.push(0);return res.charactersAddedCumulative.push(0)}r=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^>]+)$\");res.content.replace(r,replacerPush);return res}function xmlMatcher(content,tagsXmlArray){var res={};res.content=content;res.tagsXmlArray=tagsXmlArray;res.tagsXmlArrayJoined=res.tagsXmlArray.join(\"|\");var regexp=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^<>]*)</(?:\"+res.tagsXmlArrayJoined+\")>\",\"g\");res.matches=DocUtils.pregMatchAll(regexp,res.content);res.charactersAddedCumulative=res.matches.map(function(){return 0});res.charactersAdded=res.matches.map(function(){return 0});return handleRecursiveCase(res)}var memoized=memoize(xmlMatcher);module.exports=function(content,tagsXmlArray){return DocUtils.cloneDeep(memoized(content,tagsXmlArray))}},{\"./doc-utils\":4,\"./memoize\":9}],22:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var ScopeManager=require(\"./scope-manager\");var xmlMatcher=require(\"./xml-matcher\");var Errors=require(\"./errors\");var Lexer=require(\"./lexer\");var Parser=require(\"./parser.js\");var _render=require(\"./render.js\");function _getFullText(content,tagsXmlArray){var matcher=xmlMatcher(content,tagsXmlArray);var result=matcher.matches.map(function(match){return match.array[2]});return DocUtils.wordToUtf8(DocUtils.convertSpaces(result.join(\"\")))}module.exports=function(){function XmlTemplater(content,options){_classCallCheck(this,XmlTemplater);this.fromJson(options);this.setModules({inspect:{filePath:this.filePath}});this.load(content)}_createClass(XmlTemplater,[{key:\"load\",value:function load(content){if(typeof content!==\"string\"){var err=new Errors.XTInternalError(\"Content must be a string\");err.properties.id=\"xmltemplater_content_must_be_string\";throw err}this.content=content}},{key:\"setTags\",value:function setTags(tags){this.tags=tags!=null?tags:{};this.scopeManager=ScopeManager.createBaseScopeManager({tags:this.tags,parser:this.parser});return this}},{key:\"fromJson\",value:function fromJson(options){this.filePath=options.filePath;this.modules=options.modules;this.fileTypeConfig=options.fileTypeConfig;Object.keys(DocUtils.defaults).map(function(key){this[key]=options[key]!=null?options[key]:DocUtils.defaults[key]},this)}},{key:\"getFullText\",value:function getFullText(){return _getFullText(this.content,this.fileTypeConfig.tagsXmlTextArray)}},{key:\"setModules\",value:function setModules(obj){this.modules.forEach(function(module){module.set(obj)})}},{key:\"parse\",value:function parse(){this.xmllexed=Lexer.xmlparse(this.content,{text:this.fileTypeConfig.tagsXmlTextArray,other:this.fileTypeConfig.tagsXmlLexedArray});this.setModules({inspect:{xmllexed:this.xmllexed}});this.lexed=Lexer.parse(this.xmllexed,this.delimiters);this.setModules({inspect:{lexed:this.lexed}});this.parsed=Parser.parse(this.lexed,this.modules);this.setModules({inspect:{parsed:this.parsed}});this.postparsed=Parser.postparse(this.parsed,this.modules);return this}},{key:\"render\",value:function render(){this.setModules({inspect:{postparsed:this.postparsed}});this.content=_render({compiled:this.postparsed,tags:this.tags,modules:this.modules,parser:this.parser,nullGetter:this.nullGetter,filePath:this.filePath});this.setModules({inspect:{content:this.content}});return this}}]);return XmlTemplater}()},{\"./doc-utils\":4,\"./errors\":6,\"./lexer\":8,\"./parser.js\":17,\"./render.js\":18,\"./scope-manager\":19,\"./xml-matcher\":21}],23:[function(require,module,exports){function DOMParser(options){this.options=options||{locator:{}}}DOMParser.prototype.parseFromString=function(source,mimeType){var options=this.options;var sax=new XMLReader;var domBuilder=options.domBuilder||new DOMHandler;var errorHandler=options.errorHandler;var locator=options.locator;var defaultNSMap=options.xmlns||{};var entityMap={lt:\"<\",gt:\">\",amp:\"&\",quot:'\"',apos:\"'\"};if(locator){domBuilder.setDocumentLocator(locator)}sax.errorHandler=buildErrorHandler(errorHandler,domBuilder,locator);sax.domBuilder=options.domBuilder||domBuilder;if(/\\/x?html?$/.test(mimeType)){entityMap.nbsp=\" \";entityMap.copy=\"©\";defaultNSMap[\"\"]=\"http://www.w3.org/1999/xhtml\"}defaultNSMap.xml=defaultNSMap.xml||\"http://www.w3.org/XML/1998/namespace\";if(source){sax.parse(source,defaultNSMap,entityMap)}else{sax.errorHandler.error(\"invalid doc source\")}return domBuilder.doc};function buildErrorHandler(errorImpl,domBuilder,locator){if(!errorImpl){if(domBuilder instanceof DOMHandler){return domBuilder}errorImpl=domBuilder}var errorHandler={};var isCallback=errorImpl instanceof Function;locator=locator||{};function build(key){var fn=errorImpl[key];if(!fn&&isCallback){fn=errorImpl.length==2?function(msg){errorImpl(key,msg)}:errorImpl}errorHandler[key]=fn&&function(msg){fn(\"[xmldom \"+key+\"]\\t\"+msg+_locator(locator))}||function(){}}build(\"warning\");build(\"error\");build(\"fatalError\");return errorHandler}function DOMHandler(){this.cdata=false}function position(locator,node){node.lineNumber=locator.lineNumber;node.columnNumber=locator.columnNumber}DOMHandler.prototype={startDocument:function(){this.doc=(new DOMImplementation).createDocument(null,null,null);if(this.locator){this.doc.documentURI=this.locator.systemId}},startElement:function(namespaceURI,localName,qName,attrs){var doc=this.doc;var el=doc.createElementNS(namespaceURI,qName||localName);var len=attrs.length;appendElement(this,el);this.currentElement=el;this.locator&&position(this.locator,el);for(var i=0;i<len;i++){var namespaceURI=attrs.getURI(i);var value=attrs.getValue(i);var qName=attrs.getQName(i);var attr=doc.createAttributeNS(namespaceURI,qName);this.locator&&position(attrs.getLocator(i),attr);attr.value=attr.nodeValue=value;el.setAttributeNode(attr)}},endElement:function(namespaceURI,localName,qName){var current=this.currentElement;var tagName=current.tagName;this.currentElement=current.parentNode},startPrefixMapping:function(prefix,uri){},endPrefixMapping:function(prefix){},processingInstruction:function(target,data){var ins=this.doc.createProcessingInstruction(target,data);this.locator&&position(this.locator,ins);appendElement(this,ins)},ignorableWhitespace:function(ch,start,length){},characters:function(chars,start,length){chars=_toString.apply(this,arguments);if(chars){if(this.cdata){var charNode=this.doc.createCDATASection(chars)}else{var charNode=this.doc.createTextNode(chars)}if(this.currentElement){this.currentElement.appendChild(charNode)}else if(/^\\s*$/.test(chars)){this.doc.appendChild(charNode)}this.locator&&position(this.locator,charNode)}},skippedEntity:function(name){},endDocument:function(){this.doc.normalize()},setDocumentLocator:function(locator){if(this.locator=locator){locator.lineNumber=0}},comment:function(chars,start,length){chars=_toString.apply(this,arguments);var comm=this.doc.createComment(chars);this.locator&&position(this.locator,comm);appendElement(this,comm)},startCDATA:function(){this.cdata=true},endCDATA:function(){this.cdata=false},startDTD:function(name,publicId,systemId){var impl=this.doc.implementation;if(impl&&impl.createDocumentType){var dt=impl.createDocumentType(name,publicId,systemId);this.locator&&position(this.locator,dt);appendElement(this,dt)}},warning:function(error){console.warn(\"[xmldom warning]\\t\"+error,_locator(this.locator))},error:function(error){console.error(\"[xmldom error]\\t\"+error,_locator(this.locator))},fatalError:function(error){console.error(\"[xmldom fatalError]\\t\"+error,_locator(this.locator));throw error}};function _locator(l){if(l){return\"\\n@\"+(l.systemId||\"\")+\"#[line:\"+l.lineNumber+\",col:\"+l.columnNumber+\"]\"}}function _toString(chars,start,length){if(typeof chars==\"string\"){return chars.substr(start,length)}else{if(chars.length>=start+length||start){return new java.lang.String(chars,start,length)+\"\"}return chars}}\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){DOMHandler.prototype[key]=function(){return null}});function appendElement(hander,node){if(!hander.currentElement){hander.doc.appendChild(node)}else{hander.currentElement.appendChild(node)}}var XMLReader=require(\"./sax\").XMLReader;var DOMImplementation=exports.DOMImplementation=require(\"./dom\").DOMImplementation;exports.XMLSerializer=require(\"./dom\").XMLSerializer;exports.DOMParser=DOMParser},{\"./dom\":24,\"./sax\":25}],24:[function(require,module,exports){function copy(src,dest){for(var p in src){dest[p]=src[p]}}function _extends(Class,Super){var pt=Class.prototype;if(Object.create){var ppt=Object.create(Super.prototype);pt.__proto__=ppt}if(!(pt instanceof Super)){function t(){}t.prototype=Super.prototype;t=new t;copy(pt,t);Class.prototype=pt=t}if(pt.constructor!=Class){if(typeof Class!=\"function\"){console.error(\"unknow Class:\"+Class)}pt.constructor=Class}}var htmlns=\"http://www.w3.org/1999/xhtml\";var NodeType={};var ELEMENT_NODE=NodeType.ELEMENT_NODE=1;var ATTRIBUTE_NODE=NodeType.ATTRIBUTE_NODE=2;var TEXT_NODE=NodeType.TEXT_NODE=3;var CDATA_SECTION_NODE=NodeType.CDATA_SECTION_NODE=4;var ENTITY_REFERENCE_NODE=NodeType.ENTITY_REFERENCE_NODE=5;var ENTITY_NODE=NodeType.ENTITY_NODE=6;var PROCESSING_INSTRUCTION_NODE=NodeType.PROCESSING_INSTRUCTION_NODE=7;var COMMENT_NODE=NodeType.COMMENT_NODE=8;var DOCUMENT_NODE=NodeType.DOCUMENT_NODE=9;var DOCUMENT_TYPE_NODE=NodeType.DOCUMENT_TYPE_NODE=10;var DOCUMENT_FRAGMENT_NODE=NodeType.DOCUMENT_FRAGMENT_NODE=11;var NOTATION_NODE=NodeType.NOTATION_NODE=12;var ExceptionCode={};var ExceptionMessage={};var INDEX_SIZE_ERR=ExceptionCode.INDEX_SIZE_ERR=(ExceptionMessage[1]=\"Index size error\",1);var DOMSTRING_SIZE_ERR=ExceptionCode.DOMSTRING_SIZE_ERR=(ExceptionMessage[2]=\"DOMString size error\",2);var HIERARCHY_REQUEST_ERR=ExceptionCode.HIERARCHY_REQUEST_ERR=(ExceptionMessage[3]=\"Hierarchy request error\",3);var WRONG_DOCUMENT_ERR=ExceptionCode.WRONG_DOCUMENT_ERR=(ExceptionMessage[4]=\"Wrong document\",4);var INVALID_CHARACTER_ERR=ExceptionCode.INVALID_CHARACTER_ERR=(ExceptionMessage[5]=\"Invalid character\",5);var NO_DATA_ALLOWED_ERR=ExceptionCode.NO_DATA_ALLOWED_ERR=(ExceptionMessage[6]=\"No data allowed\",6);var NO_MODIFICATION_ALLOWED_ERR=ExceptionCode.NO_MODIFICATION_ALLOWED_ERR=(ExceptionMessage[7]=\"No modification allowed\",7);var NOT_FOUND_ERR=ExceptionCode.NOT_FOUND_ERR=(ExceptionMessage[8]=\"Not found\",8);var NOT_SUPPORTED_ERR=ExceptionCode.NOT_SUPPORTED_ERR=(ExceptionMessage[9]=\"Not supported\",9);var INUSE_ATTRIBUTE_ERR=ExceptionCode.INUSE_ATTRIBUTE_ERR=(ExceptionMessage[10]=\"Attribute in use\",10);var INVALID_STATE_ERR=ExceptionCode.INVALID_STATE_ERR=(ExceptionMessage[11]=\"Invalid state\",11);var SYNTAX_ERR=ExceptionCode.SYNTAX_ERR=(ExceptionMessage[12]=\"Syntax error\",12);var INVALID_MODIFICATION_ERR=ExceptionCode.INVALID_MODIFICATION_ERR=(ExceptionMessage[13]=\"Invalid modification\",13);var NAMESPACE_ERR=ExceptionCode.NAMESPACE_ERR=(ExceptionMessage[14]=\"Invalid namespace\",14);var INVALID_ACCESS_ERR=ExceptionCode.INVALID_ACCESS_ERR=(ExceptionMessage[15]=\"Invalid access\",15);function DOMException(code,message){if(message instanceof Error){var error=message}else{error=this;Error.call(this,ExceptionMessage[code]);this.message=ExceptionMessage[code];if(Error.captureStackTrace)Error.captureStackTrace(this,DOMException)}error.code=code;if(message)this.message=this.message+\": \"+message;return error}DOMException.prototype=Error.prototype;copy(ExceptionCode,DOMException);function NodeList(){}NodeList.prototype={length:0,item:function(index){return this[index]||null},toString:function(isHTML,nodeFilter){for(var buf=[],i=0;i<this.length;i++){serializeToString(this[i],buf,isHTML,nodeFilter)}return buf.join(\"\")}};function LiveNodeList(node,refresh){this._node=node;this._refresh=refresh;_updateLiveList(this)}function _updateLiveList(list){var inc=list._node._inc||list._node.ownerDocument._inc;if(list._inc!=inc){var ls=list._refresh(list._node);__set__(list,\"length\",ls.length);copy(ls,list);list._inc=inc}}LiveNodeList.prototype.item=function(i){_updateLiveList(this);return this[i]};_extends(LiveNodeList,NodeList);function NamedNodeMap(){}function _findNodeIndex(list,node){var i=list.length;while(i--){if(list[i]===node){return i}}}function _addNamedNode(el,list,newAttr,oldAttr){if(oldAttr){list[_findNodeIndex(list,oldAttr)]=newAttr}else{list[list.length++]=newAttr}if(el){newAttr.ownerElement=el;var doc=el.ownerDocument;if(doc){oldAttr&&_onRemoveAttribute(doc,el,oldAttr);_onAddAttribute(doc,el,newAttr)}}}function _removeNamedNode(el,list,attr){var i=_findNodeIndex(list,attr);if(i>=0){var lastIndex=list.length-1;while(i<lastIndex){list[i]=list[++i]}list.length=lastIndex;if(el){var doc=el.ownerDocument;if(doc){_onRemoveAttribute(doc,el,attr);attr.ownerElement=null}}}else{throw DOMException(NOT_FOUND_ERR,new Error(el.tagName+\"@\"+attr))}}NamedNodeMap.prototype={length:0,item:NodeList.prototype.item,getNamedItem:function(key){var i=this.length;while(i--){var attr=this[i];if(attr.nodeName==key){return attr}}},setNamedItem:function(attr){var el=attr.ownerElement;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}var oldAttr=this.getNamedItem(attr.nodeName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},setNamedItemNS:function(attr){var el=attr.ownerElement,oldAttr;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}oldAttr=this.getNamedItemNS(attr.namespaceURI,attr.localName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},removeNamedItem:function(key){var attr=this.getNamedItem(key);_removeNamedNode(this._ownerElement,this,attr);return attr},removeNamedItemNS:function(namespaceURI,localName){var attr=this.getNamedItemNS(namespaceURI,localName);_removeNamedNode(this._ownerElement,this,attr);return attr},getNamedItemNS:function(namespaceURI,localName){var i=this.length;while(i--){var node=this[i];if(node.localName==localName&&node.namespaceURI==namespaceURI){return node}}return null}};function DOMImplementation(features){this._features={};if(features){for(var feature in features){this._features=features[feature]}}}DOMImplementation.prototype={hasFeature:function(feature,version){var versions=this._features[feature.toLowerCase()];if(versions&&(!version||version in versions)){\nreturn true}else{return false}},createDocument:function(namespaceURI,qualifiedName,doctype){var doc=new Document;doc.implementation=this;doc.childNodes=new NodeList;doc.doctype=doctype;if(doctype){doc.appendChild(doctype)}if(qualifiedName){var root=doc.createElementNS(namespaceURI,qualifiedName);doc.appendChild(root)}return doc},createDocumentType:function(qualifiedName,publicId,systemId){var node=new DocumentType;node.name=qualifiedName;node.nodeName=qualifiedName;node.publicId=publicId;node.systemId=systemId;return node}};function Node(){}Node.prototype={firstChild:null,lastChild:null,previousSibling:null,nextSibling:null,attributes:null,parentNode:null,childNodes:null,ownerDocument:null,nodeValue:null,namespaceURI:null,prefix:null,localName:null,insertBefore:function(newChild,refChild){return _insertBefore(this,newChild,refChild)},replaceChild:function(newChild,oldChild){this.insertBefore(newChild,oldChild);if(oldChild){this.removeChild(oldChild)}},removeChild:function(oldChild){return _removeChild(this,oldChild)},appendChild:function(newChild){return this.insertBefore(newChild,null)},hasChildNodes:function(){return this.firstChild!=null},cloneNode:function(deep){return cloneNode(this.ownerDocument||this,this,deep)},normalize:function(){var child=this.firstChild;while(child){var next=child.nextSibling;if(next&&next.nodeType==TEXT_NODE&&child.nodeType==TEXT_NODE){this.removeChild(next);child.appendData(next.data)}else{child.normalize();child=next}}},isSupported:function(feature,version){return this.ownerDocument.implementation.hasFeature(feature,version)},hasAttributes:function(){return this.attributes.length>0},lookupPrefix:function(namespaceURI){var el=this;while(el){var map=el._nsMap;if(map){for(var n in map){if(map[n]==namespaceURI){return n}}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},lookupNamespaceURI:function(prefix){var el=this;while(el){var map=el._nsMap;if(map){if(prefix in map){return map[prefix]}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},isDefaultNamespace:function(namespaceURI){var prefix=this.lookupPrefix(namespaceURI);return prefix==null}};function _xmlEncoder(c){return c==\"<\"&&\"&lt;\"||c==\">\"&&\"&gt;\"||c==\"&\"&&\"&amp;\"||c=='\"'&&\"&quot;\"||\"&#\"+c.charCodeAt()+\";\"}copy(NodeType,Node);copy(NodeType,Node.prototype);function _visitNode(node,callback){if(callback(node)){return true}if(node=node.firstChild){do{if(_visitNode(node,callback)){return true}}while(node=node.nextSibling)}}function Document(){}function _onAddAttribute(doc,el,newAttr){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){el._nsMap[newAttr.prefix?newAttr.localName:\"\"]=newAttr.value}}function _onRemoveAttribute(doc,el,newAttr,remove){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){delete el._nsMap[newAttr.prefix?newAttr.localName:\"\"]}}function _onUpdateChild(doc,el,newChild){if(doc&&doc._inc){doc._inc++;var cs=el.childNodes;if(newChild){cs[cs.length++]=newChild}else{var child=el.firstChild;var i=0;while(child){cs[i++]=child;child=child.nextSibling}cs.length=i}}}function _removeChild(parentNode,child){var previous=child.previousSibling;var next=child.nextSibling;if(previous){previous.nextSibling=next}else{parentNode.firstChild=next}if(next){next.previousSibling=previous}else{parentNode.lastChild=previous}_onUpdateChild(parentNode.ownerDocument,parentNode);return child}function _insertBefore(parentNode,newChild,nextChild){var cp=newChild.parentNode;if(cp){cp.removeChild(newChild)}if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){var newFirst=newChild.firstChild;if(newFirst==null){return newChild}var newLast=newChild.lastChild}else{newFirst=newLast=newChild}var pre=nextChild?nextChild.previousSibling:parentNode.lastChild;newFirst.previousSibling=pre;newLast.nextSibling=nextChild;if(pre){pre.nextSibling=newFirst}else{parentNode.firstChild=newFirst}if(nextChild==null){parentNode.lastChild=newLast}else{nextChild.previousSibling=newLast}do{newFirst.parentNode=parentNode}while(newFirst!==newLast&&(newFirst=newFirst.nextSibling));_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){newChild.firstChild=newChild.lastChild=null}return newChild}function _appendSingleChild(parentNode,newChild){var cp=newChild.parentNode;if(cp){var pre=parentNode.lastChild;cp.removeChild(newChild);var pre=parentNode.lastChild}var pre=parentNode.lastChild;newChild.parentNode=parentNode;newChild.previousSibling=pre;newChild.nextSibling=null;if(pre){pre.nextSibling=newChild}else{parentNode.firstChild=newChild}parentNode.lastChild=newChild;_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);return newChild}Document.prototype={nodeName:\"#document\",nodeType:DOCUMENT_NODE,doctype:null,documentElement:null,_inc:1,insertBefore:function(newChild,refChild){if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){var child=newChild.firstChild;while(child){var next=child.nextSibling;this.insertBefore(child,refChild);child=next}return newChild}if(this.documentElement==null&&newChild.nodeType==ELEMENT_NODE){this.documentElement=newChild}return _insertBefore(this,newChild,refChild),newChild.ownerDocument=this,newChild},removeChild:function(oldChild){if(this.documentElement==oldChild){this.documentElement=null}return _removeChild(this,oldChild)},importNode:function(importedNode,deep){return importNode(this,importedNode,deep)},getElementById:function(id){var rtv=null;_visitNode(this.documentElement,function(node){if(node.nodeType==ELEMENT_NODE){if(node.getAttribute(\"id\")==id){rtv=node;return true}}});return rtv},createElement:function(tagName){var node=new Element;node.ownerDocument=this;node.nodeName=tagName;node.tagName=tagName;node.childNodes=new NodeList;var attrs=node.attributes=new NamedNodeMap;attrs._ownerElement=node;return node},createDocumentFragment:function(){var node=new DocumentFragment;node.ownerDocument=this;node.childNodes=new NodeList;return node},createTextNode:function(data){var node=new Text;node.ownerDocument=this;node.appendData(data);return node},createComment:function(data){var node=new Comment;node.ownerDocument=this;node.appendData(data);return node},createCDATASection:function(data){var node=new CDATASection;node.ownerDocument=this;node.appendData(data);return node},createProcessingInstruction:function(target,data){var node=new ProcessingInstruction;node.ownerDocument=this;node.tagName=node.target=target;node.nodeValue=node.data=data;return node},createAttribute:function(name){var node=new Attr;node.ownerDocument=this;node.name=name;node.nodeName=name;node.localName=name;node.specified=true;return node},createEntityReference:function(name){var node=new EntityReference;node.ownerDocument=this;node.nodeName=name;return node},createElementNS:function(namespaceURI,qualifiedName){var node=new Element;var pl=qualifiedName.split(\":\");var attrs=node.attributes=new NamedNodeMap;node.childNodes=new NodeList;node.ownerDocument=this;node.nodeName=qualifiedName;node.tagName=qualifiedName;node.namespaceURI=namespaceURI;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}attrs._ownerElement=node;return node},createAttributeNS:function(namespaceURI,qualifiedName){var node=new Attr;var pl=qualifiedName.split(\":\");node.ownerDocument=this;node.nodeName=qualifiedName;node.name=qualifiedName;node.namespaceURI=namespaceURI;node.specified=true;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}return node}};_extends(Document,Node);function Element(){this._nsMap={}}Element.prototype={nodeType:ELEMENT_NODE,hasAttribute:function(name){return this.getAttributeNode(name)!=null},getAttribute:function(name){var attr=this.getAttributeNode(name);return attr&&attr.value||\"\"},getAttributeNode:function(name){return this.attributes.getNamedItem(name)},setAttribute:function(name,value){var attr=this.ownerDocument.createAttribute(name);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},removeAttribute:function(name){var attr=this.getAttributeNode(name);attr&&this.removeAttributeNode(attr)},appendChild:function(newChild){if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){return this.insertBefore(newChild,null)}else{return _appendSingleChild(this,newChild)}},setAttributeNode:function(newAttr){return this.attributes.setNamedItem(newAttr)},setAttributeNodeNS:function(newAttr){return this.attributes.setNamedItemNS(newAttr)},removeAttributeNode:function(oldAttr){return this.attributes.removeNamedItem(oldAttr.nodeName)},removeAttributeNS:function(namespaceURI,localName){var old=this.getAttributeNodeNS(namespaceURI,localName);old&&this.removeAttributeNode(old)},hasAttributeNS:function(namespaceURI,localName){return this.getAttributeNodeNS(namespaceURI,localName)!=null},getAttributeNS:function(namespaceURI,localName){var attr=this.getAttributeNodeNS(namespaceURI,localName);return attr&&attr.value||\"\"},setAttributeNS:function(namespaceURI,qualifiedName,value){var attr=this.ownerDocument.createAttributeNS(namespaceURI,qualifiedName);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},getAttributeNodeNS:function(namespaceURI,localName){return this.attributes.getNamedItemNS(namespaceURI,localName)},getElementsByTagName:function(tagName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType==ELEMENT_NODE&&(tagName===\"*\"||node.tagName==tagName)){ls.push(node)}});return ls})},getElementsByTagNameNS:function(namespaceURI,localName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType===ELEMENT_NODE&&(namespaceURI===\"*\"||node.namespaceURI===namespaceURI)&&(localName===\"*\"||node.localName==localName)){ls.push(node)}});return ls})}};Document.prototype.getElementsByTagName=Element.prototype.getElementsByTagName;Document.prototype.getElementsByTagNameNS=Element.prototype.getElementsByTagNameNS;_extends(Element,Node);function Attr(){}Attr.prototype.nodeType=ATTRIBUTE_NODE;_extends(Attr,Node);function CharacterData(){}CharacterData.prototype={data:\"\",substringData:function(offset,count){return this.data.substring(offset,offset+count)},appendData:function(text){text=this.data+text;this.nodeValue=this.data=text;this.length=text.length},insertData:function(offset,text){this.replaceData(offset,0,text)},appendChild:function(newChild){throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])},deleteData:function(offset,count){this.replaceData(offset,count,\"\")},replaceData:function(offset,count,text){var start=this.data.substring(0,offset);var end=this.data.substring(offset+count);text=start+text+end;this.nodeValue=this.data=text;this.length=text.length}};_extends(CharacterData,Node);function Text(){}Text.prototype={nodeName:\"#text\",nodeType:TEXT_NODE,splitText:function(offset){var text=this.data;var newText=text.substring(offset);text=text.substring(0,offset);this.data=this.nodeValue=text;this.length=text.length;var newNode=this.ownerDocument.createTextNode(newText);if(this.parentNode){this.parentNode.insertBefore(newNode,this.nextSibling)}return newNode}};_extends(Text,CharacterData);function Comment(){}Comment.prototype={nodeName:\"#comment\",nodeType:COMMENT_NODE};_extends(Comment,CharacterData);function CDATASection(){}CDATASection.prototype={nodeName:\"#cdata-section\",nodeType:CDATA_SECTION_NODE};_extends(CDATASection,CharacterData);function DocumentType(){}DocumentType.prototype.nodeType=DOCUMENT_TYPE_NODE;_extends(DocumentType,Node);function Notation(){}Notation.prototype.nodeType=NOTATION_NODE;_extends(Notation,Node);function Entity(){}Entity.prototype.nodeType=ENTITY_NODE;_extends(Entity,Node);function EntityReference(){}EntityReference.prototype.nodeType=ENTITY_REFERENCE_NODE;_extends(EntityReference,Node);function DocumentFragment(){}DocumentFragment.prototype.nodeName=\"#document-fragment\";DocumentFragment.prototype.nodeType=DOCUMENT_FRAGMENT_NODE;_extends(DocumentFragment,Node);function ProcessingInstruction(){}ProcessingInstruction.prototype.nodeType=PROCESSING_INSTRUCTION_NODE;_extends(ProcessingInstruction,Node);function XMLSerializer(){}XMLSerializer.prototype.serializeToString=function(node,isHtml,nodeFilter){return nodeSerializeToString.call(node,isHtml,nodeFilter)};Node.prototype.toString=nodeSerializeToString;function nodeSerializeToString(isHtml,nodeFilter){var buf=[];var refNode=this.nodeType==9?this.documentElement:this;var prefix=refNode.prefix;var uri=refNode.namespaceURI;if(uri&&prefix==null){var prefix=refNode.lookupPrefix(uri);if(prefix==null){var visibleNamespaces=[{namespace:uri,prefix:null}]}}serializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);return buf.join(\"\")}function needNamespaceDefine(node,isHTML,visibleNamespaces){var prefix=node.prefix||\"\";var uri=node.namespaceURI;if(!prefix&&!uri){return false}if(prefix===\"xml\"&&uri===\"http://www.w3.org/XML/1998/namespace\"||uri==\"http://www.w3.org/2000/xmlns/\"){return false}var i=visibleNamespaces.length;while(i--){var ns=visibleNamespaces[i];if(ns.prefix==prefix){return ns.namespace!=uri}}return true}function serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){if(nodeFilter){node=nodeFilter(node);if(node){if(typeof node==\"string\"){buf.push(node);return}}else{return}}switch(node.nodeType){case ELEMENT_NODE:if(!visibleNamespaces)visibleNamespaces=[];var startVisibleNamespaces=visibleNamespaces.length;var attrs=node.attributes;var len=attrs.length;var child=node.firstChild;var nodeName=node.tagName;isHTML=htmlns===node.namespaceURI||isHTML;buf.push(\"<\",nodeName);for(var i=0;i<len;i++){var attr=attrs.item(i);if(attr.prefix==\"xmlns\"){visibleNamespaces.push({prefix:attr.localName,namespace:attr.value})}else if(attr.nodeName==\"xmlns\"){visibleNamespaces.push({prefix:\"\",namespace:attr.value})}}for(var i=0;i<len;i++){var attr=attrs.item(i);if(needNamespaceDefine(attr,isHTML,visibleNamespaces)){var prefix=attr.prefix||\"\";var uri=attr.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}serializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces)}if(needNamespaceDefine(node,isHTML,visibleNamespaces)){var prefix=node.prefix||\"\";var uri=node.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}if(child||isHTML&&!/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){buf.push(\">\");if(isHTML&&/^script$/i.test(nodeName)){while(child){if(child.data){buf.push(child.data)}else{serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces)}child=child.nextSibling}}else{while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}}buf.push(\"</\",nodeName,\">\")}else{buf.push(\"/>\")}return;case DOCUMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var child=node.firstChild;while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}return;case ATTRIBUTE_NODE:return buf.push(\" \",node.name,'=\"',node.value.replace(/[<&\"]/g,_xmlEncoder),'\"');case TEXT_NODE:return buf.push(node.data.replace(/[<&]/g,_xmlEncoder));case CDATA_SECTION_NODE:return buf.push(\"<![CDATA[\",node.data,\"]]>\");case COMMENT_NODE:return buf.push(\"<!--\",node.data,\"-->\");case DOCUMENT_TYPE_NODE:var pubid=node.publicId;var sysid=node.systemId;buf.push(\"<!DOCTYPE \",node.name);if(pubid){buf.push(' PUBLIC \"',pubid);if(sysid&&sysid!=\".\"){buf.push('\" \"',sysid)}buf.push('\">')}else if(sysid&&sysid!=\".\"){buf.push(' SYSTEM \"',sysid,'\">')}else{var sub=node.internalSubset;if(sub){buf.push(\" [\",sub,\"]\")}buf.push(\">\")}return;case PROCESSING_INSTRUCTION_NODE:return buf.push(\"<?\",node.target,\" \",node.data,\"?>\");case ENTITY_REFERENCE_NODE:return buf.push(\"&\",node.nodeName,\";\");default:buf.push(\"??\",node.nodeName)}}function importNode(doc,node,deep){var node2;switch(node.nodeType){case ELEMENT_NODE:node2=node.cloneNode(false);node2.ownerDocument=doc;case DOCUMENT_FRAGMENT_NODE:break;case ATTRIBUTE_NODE:deep=true;break}if(!node2){node2=node.cloneNode(false)}node2.ownerDocument=doc;node2.parentNode=null;if(deep){var child=node.firstChild;while(child){node2.appendChild(importNode(doc,child,deep));child=child.nextSibling}}return node2}function cloneNode(doc,node,deep){var node2=new node.constructor;for(var n in node){var v=node[n];if(typeof v!=\"object\"){if(v!=node2[n]){node2[n]=v}}}if(node.childNodes){node2.childNodes=new NodeList}node2.ownerDocument=doc;switch(node2.nodeType){case ELEMENT_NODE:var attrs=node.attributes;var attrs2=node2.attributes=new NamedNodeMap;var len=attrs.length;attrs2._ownerElement=node2;for(var i=0;i<len;i++){node2.setAttributeNode(cloneNode(doc,attrs.item(i),true))}break;case ATTRIBUTE_NODE:deep=true}if(deep){var child=node.firstChild;while(child){node2.appendChild(cloneNode(doc,child,deep));child=child.nextSibling}}return node2}function __set__(object,key,value){object[key]=value}try{if(Object.defineProperty){Object.defineProperty(LiveNodeList.prototype,\"length\",{get:function(){_updateLiveList(this);return this.$$length}});Object.defineProperty(Node.prototype,\"textContent\",{get:function(){return getTextContent(this)},set:function(data){switch(this.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:while(this.firstChild){this.removeChild(this.firstChild)}if(data||String(data)){this.appendChild(this.ownerDocument.createTextNode(data))}break;default:this.data=data;this.value=data;this.nodeValue=data}}});function getTextContent(node){switch(node.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var buf=[];node=node.firstChild;while(node){if(node.nodeType!==7&&node.nodeType!==8){buf.push(getTextContent(node))}node=node.nextSibling}return buf.join(\"\");default:return node.nodeValue}}__set__=function(object,key,value){object[\"$$\"+key]=value}}}catch(e){}exports.DOMImplementation=DOMImplementation;exports.XMLSerializer=XMLSerializer},{}],25:[function(require,module,exports){var nameStartChar=/[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;var nameChar=new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");var tagNamePattern=new RegExp(\"^\"+nameStartChar.source+nameChar.source+\"*(?::\"+nameStartChar.source+nameChar.source+\"*)?$\");var S_TAG=0;var S_ATTR=1;var S_ATTR_SPACE=2;var S_EQ=3;var S_ATTR_NOQUOT_VALUE=4;var S_ATTR_END=5;var S_TAG_SPACE=6;var S_TAG_CLOSE=7;function XMLReader(){}XMLReader.prototype={parse:function(source,defaultNSMap,entityMap){var domBuilder=this.domBuilder;domBuilder.startDocument();_copy(defaultNSMap,defaultNSMap={});parse(source,defaultNSMap,entityMap,domBuilder,this.errorHandler);domBuilder.endDocument()}};function parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){function fixedFromCharCode(code){if(code>65535){code-=65536;var surrogate1=55296+(code>>10),surrogate2=56320+(code&1023);return String.fromCharCode(surrogate1,surrogate2)}else{return String.fromCharCode(code)}}function entityReplacer(a){var k=a.slice(1,-1);if(k in entityMap){return entityMap[k]}else if(k.charAt(0)===\"#\"){return fixedFromCharCode(parseInt(k.substr(1).replace(\"x\",\"0x\")))}else{errorHandler.error(\"entity not found:\"+a);return a}}function appendText(end){if(end>start){var xt=source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);locator&&position(start);domBuilder.characters(xt,0,end-start);start=end}}function position(p,m){while(p>=lineEnd&&(m=linePattern.exec(source))){lineStart=m.index;lineEnd=lineStart+m[0].length;locator.lineNumber++}locator.columnNumber=p-lineStart+1}var lineStart=0;var lineEnd=0;var linePattern=/.*(?:\\r\\n?|\\n)|.*$/g;var locator=domBuilder.locator;var parseStack=[{currentNSMap:defaultNSMapCopy}];var closeMap={};var start=0;while(true){try{var tagStart=source.indexOf(\"<\",start);if(tagStart<0){if(!source.substr(start).match(/^\\s*$/)){var doc=domBuilder.doc;var text=doc.createTextNode(source.substr(start));doc.appendChild(text);domBuilder.currentElement=text}return}if(tagStart>start){appendText(tagStart)}switch(source.charAt(tagStart+1)){case\"/\":var end=source.indexOf(\">\",tagStart+3);var tagName=source.substring(tagStart+2,end);var config=parseStack.pop();if(end<0){tagName=source.substring(tagStart+2).replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" is not complete:\"+config.tagName);end=tagStart+1+tagName.length}else if(tagName.match(/\\s</)){tagName=tagName.replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" maybe not complete\");end=tagStart+1+tagName.length}var localNSMap=config.localNSMap;var endMatch=config.tagName==tagName;var endIgnoreCaseMach=endMatch||config.tagName&&config.tagName.toLowerCase()==tagName.toLowerCase();if(endIgnoreCaseMach){domBuilder.endElement(config.uri,config.localName,tagName);if(localNSMap){for(var prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}if(!endMatch){errorHandler.fatalError(\"end tag name: \"+tagName+\" is not match the current start tagName:\"+config.tagName)}}else{parseStack.push(config)}end++;break;case\"?\":locator&&position(tagStart);end=parseInstruction(source,tagStart,domBuilder);break;case\"!\":locator&&position(tagStart);end=parseDCC(source,tagStart,domBuilder,errorHandler);break;default:locator&&position(tagStart);var el=new ElementAttributes;var currentNSMap=parseStack[parseStack.length-1].currentNSMap;var end=parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);var len=el.length;if(!el.closed&&fixSelfClosed(source,end,el.tagName,closeMap)){el.closed=true;if(!entityMap.nbsp){errorHandler.warning(\"unclosed xml attribute\")}}if(locator&&len){var locator2=copyLocator(locator,{});for(var i=0;i<len;i++){var a=el[i];position(a.offset);a.locator=copyLocator(locator,{})}domBuilder.locator=locator2;if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}domBuilder.locator=locator}else{if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}}if(el.uri===\"http://www.w3.org/1999/xhtml\"&&!el.closed){end=parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)}else{end++}}}catch(e){errorHandler.error(\"element parse error: \"+e);end=-1}if(end>start){start=end}else{appendText(Math.max(tagStart,start)+1)}}}function copyLocator(f,t){t.lineNumber=f.lineNumber;t.columnNumber=f.columnNumber;return t}function parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){var attrName;var value;var p=++start;var s=S_TAG;while(true){var c=source.charAt(p);switch(c){case\"=\":if(s===S_ATTR){attrName=source.slice(start,p);s=S_EQ}else if(s===S_ATTR_SPACE){s=S_EQ}else{throw new Error(\"attribute equal must after attrName\")}break;case\"'\":case'\"':if(s===S_EQ||s===S_ATTR){if(s===S_ATTR){errorHandler.warning('attribute value must after \"=\"');attrName=source.slice(start,p)}start=p+1;p=source.indexOf(c,start);if(p>0){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start-1);s=S_ATTR_END}else{throw new Error(\"attribute value no end '\"+c+\"' match\")}}else if(s==S_ATTR_NOQUOT_VALUE){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start);errorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+\")!!\");start=p+1;s=S_ATTR_END}else{throw new Error('attribute value must after \"=\"')}break;case\"/\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:s=S_TAG_CLOSE;el.closed=true;case S_ATTR_NOQUOT_VALUE:case S_ATTR:case S_ATTR_SPACE:break;default:throw new Error(\"attribute invalid close char('/')\")}break;case\"\":errorHandler.error(\"unexpected end of input\");if(s==S_TAG){el.setTagName(source.slice(start,p))}return p;case\">\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:break;case S_ATTR_NOQUOT_VALUE:case S_ATTR:value=source.slice(start,p);if(value.slice(-1)===\"/\"){el.closed=true;value=value.slice(0,-1)}case S_ATTR_SPACE:if(s===S_ATTR_SPACE){value=attrName}if(s==S_ATTR_NOQUOT_VALUE){errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value.replace(/&#?\\w+;/g,entityReplacer),start)}else{if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!value.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')}el.add(value,value,start)}break;case S_EQ:throw new Error(\"attribute value missed!!\")}return p;case\"\":c=\" \";default:if(c<=\" \"){switch(s){case S_TAG:el.setTagName(source.slice(start,p));s=S_TAG_SPACE;break;case S_ATTR:attrName=source.slice(start,p);s=S_ATTR_SPACE;break;case S_ATTR_NOQUOT_VALUE:var value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value,start);case S_ATTR_END:s=S_TAG_SPACE;break}}else{switch(s){case S_ATTR_SPACE:var tagName=el.tagName;if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!attrName.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')}el.add(attrName,attrName,start);start=p;s=S_ATTR;break;case S_ATTR_END:errorHandler.warning('attribute space is required\"'+attrName+'\"!!');case S_TAG_SPACE:s=S_ATTR;start=p;break;case S_EQ:s=S_ATTR_NOQUOT_VALUE;start=p;break;case S_TAG_CLOSE:throw new Error(\"elements closed character '/' and '>' must be connected to\")}}}p++}}function appendElement(el,domBuilder,currentNSMap){var tagName=el.tagName;var localNSMap=null;var i=el.length;while(i--){var a=el[i];var qName=a.qName;var value=a.value;var nsp=qName.indexOf(\":\");if(nsp>0){var prefix=a.prefix=qName.slice(0,nsp);var localName=qName.slice(nsp+1);var nsPrefix=prefix===\"xmlns\"&&localName}else{localName=qName;prefix=null;nsPrefix=qName===\"xmlns\"&&\"\"}a.localName=localName;if(nsPrefix!==false){if(localNSMap==null){localNSMap={};_copy(currentNSMap,currentNSMap={})}currentNSMap[nsPrefix]=localNSMap[nsPrefix]=value;a.uri=\"http://www.w3.org/2000/xmlns/\";domBuilder.startPrefixMapping(nsPrefix,value)}}var i=el.length;while(i--){a=el[i];var prefix=a.prefix;if(prefix){if(prefix===\"xml\"){a.uri=\"http://www.w3.org/XML/1998/namespace\"}if(prefix!==\"xmlns\"){a.uri=currentNSMap[prefix||\"\"]}}}var nsp=tagName.indexOf(\":\");if(nsp>0){prefix=el.prefix=tagName.slice(0,nsp);localName=el.localName=tagName.slice(nsp+1)}else{prefix=null;localName=el.localName=tagName}var ns=el.uri=currentNSMap[prefix||\"\"];domBuilder.startElement(ns,localName,tagName,el);if(el.closed){domBuilder.endElement(ns,localName,tagName);if(localNSMap){for(prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}}else{el.currentNSMap=currentNSMap;el.localNSMap=localNSMap;return true}}function parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){if(/^(?:script|textarea)$/i.test(tagName)){var elEndStart=source.indexOf(\"</\"+tagName+\">\",elStartEnd);var text=source.substring(elStartEnd+1,elEndStart);if(/[&<]/.test(text)){if(/^script$/i.test(tagName)){domBuilder.characters(text,0,text.length);return elEndStart}text=text.replace(/&#?\\w+;/g,entityReplacer);domBuilder.characters(text,0,text.length);return elEndStart}}return elStartEnd+1}function fixSelfClosed(source,elStartEnd,tagName,closeMap){var pos=closeMap[tagName];if(pos==null){pos=source.lastIndexOf(\"</\"+tagName+\">\");if(pos<elStartEnd){pos=source.lastIndexOf(\"</\"+tagName)}closeMap[tagName]=pos}return pos<elStartEnd}function _copy(source,target){for(var n in source){target[n]=source[n]}}function parseDCC(source,start,domBuilder,errorHandler){var next=source.charAt(start+2);switch(next){case\"-\":if(source.charAt(start+3)===\"-\"){var end=source.indexOf(\"-->\",start+4);if(end>start){domBuilder.comment(source,start+4,end-start-4);return end+3}else{errorHandler.error(\"Unclosed comment\");return-1}}else{return-1}default:if(source.substr(start+3,6)==\"CDATA[\"){var end=source.indexOf(\"]]>\",start+9);domBuilder.startCDATA();domBuilder.characters(source,start+9,end-start-9);domBuilder.endCDATA();return end+3}var matchs=split(source,start);var len=matchs.length;if(len>1&&/!doctype/i.test(matchs[0][0])){var name=matchs[1][0];var pubid=len>3&&/^public$/i.test(matchs[2][0])&&matchs[3][0];var sysid=len>4&&matchs[4][0];var lastMatch=matchs[len-1];domBuilder.startDTD(name,pubid&&pubid.replace(/^(['\"])(.*?)\\1$/,\"$2\"),sysid&&sysid.replace(/^(['\"])(.*?)\\1$/,\"$2\"));domBuilder.endDTD();return lastMatch.index+lastMatch[0].length}}return-1}function parseInstruction(source,start,domBuilder){var end=source.indexOf(\"?>\",start);if(end){var match=source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);if(match){var len=match[0].length;domBuilder.processingInstruction(match[1],match[2]);return end+2}else{return-1}}return-1}function ElementAttributes(source){}ElementAttributes.prototype={setTagName:function(tagName){if(!tagNamePattern.test(tagName)){throw new Error(\"invalid tagName:\"+tagName)}this.tagName=tagName},add:function(qName,value,offset){if(!tagNamePattern.test(qName)){throw new Error(\"invalid attribute:\"+qName)}this[this.length++]={qName:qName,value:value,offset:offset}},length:0,getLocalName:function(i){return this[i].localName},getLocator:function(i){return this[i].locator},getQName:function(i){return this[i].qName},getURI:function(i){return this[i].uri},getValue:function(i){return this[i].value}};function _set_proto_(thiz,parent){thiz.__proto__=parent;return thiz}if(!(_set_proto_({},_set_proto_.prototype)instanceof _set_proto_)){_set_proto_=function(thiz,parent){function p(){}p.prototype=parent;p=new p;for(parent in thiz){p[parent]=thiz[parent]}return p}}function split(source,start){var match;var buf=[];var reg=/'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;reg.lastIndex=start;reg.exec(source);while(match=reg.exec(source)){buf.push(match);if(match[1])return buf}}exports.XMLReader=XMLReader},{}],\"/src/js/index.js\":[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var templates=require(\"./templates\");var DocUtils=require(\"docxtemplater\").DocUtils;var DOMParser=require(\"xmldom\").DOMParser;function isNaN(number){return!(number===number)}var ImgManager=require(\"./imgManager\");var moduleName=\"open-xml-templating/docxtemplater-image-module\";function getInnerDocx(_ref){var part=_ref.part;return part}function getInnerPptx(_ref2){var part=_ref2.part,left=_ref2.left,right=_ref2.right,postparsed=_ref2.postparsed;var xmlString=postparsed.slice(left+1,right).reduce(function(concat,item){return concat+item.value},\"\");var xmlDoc=(new DOMParser).parseFromString(\"<xml>\"+xmlString+\"</xml>\");var offset=xmlDoc.getElementsByTagName(\"a:off\");var ext=xmlDoc.getElementsByTagName(\"a:ext\");part.ext={cx:parseInt(ext[0].getAttribute(\"cx\"),10),cy:parseInt(ext[0].getAttribute(\"cy\"),10)};part.offset={x:parseInt(offset[0].getAttribute(\"x\"),10),y:parseInt(offset[0].getAttribute(\"y\"),10)};return part}var ImageModule=function(){function ImageModule(options){_classCallCheck(this,ImageModule);this.name=\"ImageModule\";this.options=options||{};this.imgManagers={};if(this.options.centered==null){this.options.centered=false}if(this.options.getImage==null){throw new Error(\"You should pass getImage\")}if(this.options.getSize==null){throw new Error(\"You should pass getSize\")}this.imageNumber=1}_createClass(ImageModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){\nvar relsFiles=docxtemplater.zip.file(/\\.xml\\.rels/).concat(docxtemplater.zip.file(/\\[Content_Types\\].xml/)).map(function(file){return file.name});this.fileTypeConfig=docxtemplater.fileTypeConfig;this.fileType=docxtemplater.fileType;this.zip=docxtemplater.zip;options.xmlFileNames=options.xmlFileNames.concat(relsFiles);return options}},{key:\"set\",value:function set(options){if(options.zip){this.zip=options.zip}if(options.xmlDocuments){this.xmlDocuments=options.xmlDocuments}}},{key:\"parse\",value:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent.substring(0,2)===\"%%\"){return{type:type,value:placeHolderContent.substr(2),module:module,centered:true}}if(placeHolderContent.substring(0,1)===\"%\"){return{type:type,value:placeHolderContent.substr(1),module:module,centered:false}}return null}},{key:\"postparse\",value:function postparse(parsed){var expandTo=void 0;var getInner=void 0;if(this.fileType===\"pptx\"){expandTo=\"p:sp\";getInner=getInnerPptx}else{expandTo=this.options.centered?\"w:p\":\"w:t\";getInner=getInnerDocx}return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:expandTo})}},{key:\"render\",value:function render(part,options){this.imgManagers[options.filePath]=this.imgManagers[options.filePath]||new ImgManager(this.zip,options.filePath,this.xmlDocuments,this.fileType);var imgManager=this.imgManagers[options.filePath];if(!part.type===\"placeholder\"||part.module!==moduleName){return null}try{var tagValue=options.scopeManager.getValue(part.value);if(!tagValue){throw new Error(\"tagValue is empty\")}var imgBuffer=this.options.getImage(tagValue,part.value);var rId=imgManager.addImageRels(this.getNextImageName(),imgBuffer);var sizePixel=this.options.getSize(imgBuffer,tagValue,part.value);return this.getRenderedPart(part,rId,sizePixel)}catch(e){return{value:this.fileTypeConfig.tagTextXml}}}},{key:\"getRenderedPart\",value:function getRenderedPart(part,rId,sizePixel){if(isNaN(rId)){throw new Error(\"rId is NaN, aborting\")}var size=[DocUtils.convertPixelsToEmus(sizePixel[0]),DocUtils.convertPixelsToEmus(sizePixel[1])];var centered=this.options.centered||part.centered;var newText=void 0;if(this.fileType===\"pptx\"){newText=this.getRenderedPartPptx(part,rId,size,centered)}else{newText=this.getRenderedPartDocx(rId,size,centered)}return{value:newText}}},{key:\"getRenderedPartPptx\",value:function getRenderedPartPptx(part,rId,size,centered){var offset={x:part.offset.x,y:part.offset.y};var cellCX=part.ext.cx;var cellCY=part.ext.cy;var imgW=size[0];var imgH=size[1];if(centered){offset.x+=cellCX/2-imgW/2;offset.y+=cellCY/2-imgH/2}return templates.getPptxImageXml(rId,[imgW,imgH],offset)}},{key:\"getRenderedPartDocx\",value:function getRenderedPartDocx(rId,size,centered){return centered?templates.getImageXmlCentered(rId,size):templates.getImageXml(rId,size)}},{key:\"getNextImageName\",value:function getNextImageName(){var name=\"image_generated_\"+this.imageNumber+\".png\";this.imageNumber++;return name}}]);return ImageModule}();module.exports=ImageModule},{\"./imgManager\":2,\"./templates\":3,docxtemplater:5,xmldom:23}]},{},[])(\"/src/js/index.js\")});","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Docxtemplater=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){\"use strict\";function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}var memoize=require(\"./memoize\");var DOMParser=require(\"xmldom\").DOMParser;var XMLSerializer=require(\"xmldom\").XMLSerializer;var Errors=require(\"./errors\");var DocUtils={};function parser(tag){return _defineProperty({},\"get\",function get(scope){if(tag===\".\"){return scope}return scope[tag]})}DocUtils.defaults={nullGetter:function nullGetter(part){if(!part.module){return\"undefined\"}if(part.module===\"rawxml\"){return\"\"}return\"\"},parser:memoize(parser),delimiters:{start:\"{\",end:\"}\"}};DocUtils.mergeObjects=function(){var resObj={};var obj=void 0,keys=void 0;for(var i=0;i<arguments.length;i+=1){obj=arguments[i];keys=Object.keys(obj);for(var j=0;j<keys.length;j+=1){resObj[keys[j]]=obj[keys[j]]}}return resObj};DocUtils.xml2str=function(xmlNode){var a=new XMLSerializer;return a.serializeToString(xmlNode)};DocUtils.decodeUtf8=function(s){try{if(s===undefined){return undefined}return decodeURIComponent(escape(DocUtils.convertSpaces(s)))}catch(e){var err=new Error(\"End\");err.properties.data=s;err.properties.explanation=\"Could not decode string to UTF8\";throw err}};DocUtils.encodeUtf8=function(s){return unescape(encodeURIComponent(s))};DocUtils.str2xml=function(str,errorHandler){var parser=new DOMParser({errorHandler:errorHandler});return parser.parseFromString(str,\"text/xml\")};DocUtils.charMap={\"&\":\"&amp;\",\"'\":\"&apos;\",\"<\":\"&lt;\",\">\":\"&gt;\"};var regexStripRegexp=/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g;DocUtils.escapeRegExp=function(str){return str.replace(regexStripRegexp,\"\\\\$&\")};DocUtils.charMapRegexes=Object.keys(DocUtils.charMap).map(function(endChar){var startChar=DocUtils.charMap[endChar];return{rstart:new RegExp(DocUtils.escapeRegExp(startChar),\"g\"),rend:new RegExp(DocUtils.escapeRegExp(endChar),\"g\"),start:startChar,end:endChar}});DocUtils.wordToUtf8=function(string){var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rstart,r.end)}return string};DocUtils.utf8ToWord=function(string){if(typeof string!==\"string\"){string=string.toString()}var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rend,r.start)}return string};DocUtils.cloneDeep=function(obj){return JSON.parse(JSON.stringify(obj))};DocUtils.concatArrays=function(arrays){return arrays.reduce(function(result,array){Array.prototype.push.apply(result,array);return result},[])};var spaceRegexp=new RegExp(String.fromCharCode(160),\"g\");DocUtils.convertSpaces=function(s){return s.replace(spaceRegexp,\" \")};DocUtils.pregMatchAll=function(regex,content){var matchArray=[];var match=void 0;while((match=regex.exec(content))!=null){matchArray.push({array:match,offset:match.index})}return matchArray};DocUtils.sizeOfObject=function(obj){return Object.keys(obj).length};function throwXmlTagNotFound(options){var err=new Errors.XTTemplateError(\"No tag '\"+options.element+\"' was found at the \"+options.position);err.properties={id:\"no_xml_tag_found_at_\"+options.position,explanation:\"No tag '\"+options.element+\"' was found at the \"+options.position,parsed:options.parsed,index:options.index,element:options.element};throw err}DocUtils.getRight=function(parsed,element,index){for(var i=index,l=parsed.length;i<l;i++){var part=parsed[i];if(part.value===\"</\"+element+\">\"){return i}}throwXmlTagNotFound({position:\"right\",element:element,parsed:parsed,index:index})};DocUtils.getLeft=function(parsed,element,index){for(var i=index;i>=0;i--){var part=parsed[i];if(part.value.indexOf(\"<\"+element)===0&&[\">\",\" \"].indexOf(part.value[element.length+1])!==-1){return i}}throwXmlTagNotFound({position:\"left\",element:element,parsed:parsed,index:index})};module.exports=DocUtils},{\"./errors\":2,\"./memoize\":5,xmldom:19}],2:[function(require,module,exports){\"use strict\";function XTError(message){this.name=\"GenericError\";this.message=message;this.stack=new Error(message).stack}XTError.prototype=Error.prototype;function XTTemplateError(message){this.name=\"TemplateError\";this.message=message;this.stack=new Error(message).stack}XTTemplateError.prototype=new XTError;function XTScopeParserError(message){this.name=\"ScopeParserError\";this.message=message;this.stack=new Error(message).stack}XTScopeParserError.prototype=new XTError;function XTInternalError(message){this.name=\"InternalError\";this.properties={explanation:\"InternalError\"};this.message=message;this.stack=new Error(message).stack}XTInternalError.prototype=new XTError;module.exports={XTError:XTError,XTTemplateError:XTTemplateError,XTInternalError:XTInternalError,XTScopeParserError:XTScopeParserError}},{}],3:[function(require,module,exports){\"use strict\";var loopModule=require(\"./modules/loop\");var spacePreserveModule=require(\"./modules/space-preserve\");var rawXmlModule=require(\"./modules/rawxml\");var expandPairTrait=require(\"./modules/expand-pair-trait\");var render=require(\"./modules/render\");var PptXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/ppt\\/(slides|slideMasters)\\/(slide|slideMaster)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"ppt/presentation.xml\"])},textPath:\"ppt/slides/slide1.xml\",tagsXmlTextArray:[\"a:t\",\"m:t\"],tagsXmlLexedArray:[\"p:sp\",\"a:tc\",\"a:tr\",\"a:table\",\"a:p\",\"a:r\"],tagRawXml:\"p:sp\",tagTextXml:\"a:t\",baseModules:[render,expandPairTrait,rawXmlModule,loopModule]};var DocXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/word\\/(header|footer)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"word/document.xml\"])},textPath:\"word/document.xml\",tagsXmlTextArray:[\"w:t\",\"m:t\"],tagsXmlLexedArray:[\"w:tc\",\"w:tr\",\"w:table\",\"w:p\",\"w:r\"],tagRawXml:\"w:p\",tagTextXml:\"w:t\",baseModules:[render,spacePreserveModule,expandPairTrait,rawXmlModule,loopModule]};module.exports={docx:DocXFileTypeConfig,pptx:PptXFileTypeConfig}},{\"./modules/expand-pair-trait\":8,\"./modules/loop\":9,\"./modules/rawxml\":10,\"./modules/render\":11,\"./modules/space-preserve\":12}],4:[function(require,module,exports){\"use strict\";var Errors=require(\"./errors\");var DocUtils=require(\"./doc-utils\");function inRange(range,match){return range[0]<=match.offset&&match.offset<range[1]}function updateInTextTag(part,inTextTag){if(part.type===\"tag\"&&part.position===\"start\"&&part.text){if(inTextTag){throw new Error(\"Malformed xml : Already in text tag\")}return true}if(part.type===\"tag\"&&part.position===\"end\"&&part.text){if(!inTextTag){throw new Error(\"Malformed xml : Already not in text tag\")}return false}return inTextTag}function offsetSort(a,b){return a.offset-b.offset}function getTag(tag){var start=1;if(tag[1]===\"/\"){start=2}var index=tag.indexOf(\" \");var end=index===-1?tag.length-1:index;return{tag:tag.slice(start,end),position:start===1?\"start\":\"end\"}}function tagMatcher(content,textMatchArray,othersMatchArray){var cursor=0;var contentLength=content.length;var allMatches=DocUtils.concatArrays([textMatchArray.map(function(tag){return{tag:tag,text:true}}),othersMatchArray.map(function(tag){return{tag:tag,text:false}})]).reduce(function(allMatches,t){allMatches[t.tag]=t.text;return allMatches},{});var totalMatches=[];while(cursor<contentLength){cursor=content.indexOf(\"<\",cursor);if(cursor===-1){break}var offset=cursor;cursor=content.indexOf(\">\",cursor);var tagText=content.slice(offset,cursor+1);var _getTag=getTag(tagText),tag=_getTag.tag,position=_getTag.position;var text=allMatches[tag];if(text==null){continue}totalMatches.push({type:\"tag\",position:position,text:text,offset:offset,value:tagText})}return totalMatches}function throwUnopenedTagException(options){var err=new Errors.XTTemplateError(\"Unopened tag\");err.properties={xtag:options.xtag.split(\" \")[0],id:\"unopened_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function throwUnclosedTagException(options){var err=new Errors.XTTemplateError(\"Unclosed tag\");err.properties={xtag:options.xtag.split(\" \")[0].substr(1),id:\"unclosed_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function assertDelimiterOrdered(delimiterMatches,fullText){var inDelimiter=false;var lastDelimiterMatch={offset:0};var xtag=void 0;delimiterMatches.forEach(function(delimiterMatch){xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(delimiterMatch.position===\"start\"&&inDelimiter||delimiterMatch.position===\"end\"&&!inDelimiter){if(delimiterMatch.position===\"start\"){throwUnclosedTagException({xtag:xtag})}else{throwUnopenedTagException({xtag:xtag})}}inDelimiter=!inDelimiter;lastDelimiterMatch=delimiterMatch});var delimiterMatch={offset:fullText.length};xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(inDelimiter){throwUnclosedTagException({xtag:xtag})}}function getAllIndexes(arr,val,position){var indexes=[];var offset=-1;do{offset=arr.indexOf(val,offset+1);if(offset!==-1){indexes.push({offset:offset,position:position})}}while(offset!==-1);return indexes}function Reader(innerContentParts){var _this=this;this.innerContentParts=innerContentParts;this.full=\"\";this.parseDelimiters=function(delimiters){_this.full=_this.innerContentParts.join(\"\");var offset=0;_this.ranges=_this.innerContentParts.map(function(part){offset+=part.length;return offset-part.length});var delimiterMatches=DocUtils.concatArrays([getAllIndexes(_this.full,delimiters.start,\"start\"),getAllIndexes(_this.full,delimiters.end,\"end\")]).sort(offsetSort);assertDelimiterOrdered(delimiterMatches,_this.full);var delimiterLength={start:delimiters.start.length,end:delimiters.end.length};var cutNext=0;var delimiterIndex=0;_this.parsed=_this.ranges.map(function(offset,i){var range=[offset,offset+this.innerContentParts[i].length];var partContent=this.innerContentParts[i];var delimitersInOffset=[];while(delimiterIndex<delimiterMatches.length&&inRange(range,delimiterMatches[delimiterIndex])){delimitersInOffset.push(delimiterMatches[delimiterIndex]);delimiterIndex++}var parts=[];var cursor=0;if(cutNext>0){cursor=cutNext;cutNext=0}delimitersInOffset.forEach(function(delimiterInOffset){var value=partContent.substr(cursor,delimiterInOffset.offset-offset-cursor);if(value.length>0){parts.push({type:\"content\",value:value})}parts.push({type:\"delimiter\",position:delimiterInOffset.position});cursor=delimiterInOffset.offset-offset+delimiterLength[delimiterInOffset.position]});cutNext=cursor-partContent.length;var value=partContent.substr(cursor);if(value.length>0){parts.push({type:\"content\",value:value})}return parts},_this)}}module.exports={parse:function parse(xmlparsed,delimiters){var inTextTag=false;var innerContentParts=[];xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(inTextTag&&part.type===\"content\"){innerContentParts.push(part.value)}});var reader=new Reader(innerContentParts);reader.parseDelimiters(delimiters);var newArray=[];var index=0;xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(part.type===\"content\"){part.position=inTextTag?\"insidetag\":\"outsidetag\"}if(inTextTag&&part.type===\"content\"){Array.prototype.push.apply(newArray,reader.parsed[index].map(function(p){if(p.type===\"content\"){p.position=\"insidetag\"}return p}));index++}else{newArray.push(part)}});return newArray},xmlparse:function xmlparse(content,xmltags){var matches=tagMatcher(content,xmltags.text,xmltags.other);var cursor=0;var parsed=matches.reduce(function(parsed,match){var value=content.substr(cursor,match.offset-cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}cursor=match.offset+match.value.length;delete match.offset;if(match.value.length>0){parsed.push(match)}return parsed},[]);var value=content.substr(cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}return parsed}}},{\"./doc-utils\":1,\"./errors\":2}],5:[function(require,module,exports){\"use strict\";function memoize(func){var stringifyJson=JSON.stringify,cache={};function cachedfun(){var hash=stringifyJson(arguments);return hash in cache?cache[hash]:cache[hash]=func.apply(this,arguments)}return cachedfun}module.exports=memoize},{}],6:[function(require,module,exports){\"use strict\";function getMinFromArrays(arrays,state){var minIndex=-1;for(var i=0,l=arrays.length;i<l;i++){if(state[i]>=arrays[i].length){continue}if(minIndex===-1||arrays[i][state[i]].offset<arrays[minIndex][state[minIndex]].offset){minIndex=i}}if(minIndex===-1){throw new Error(\"minIndex negative\")}return minIndex}module.exports=function(arrays){var totalLength=arrays.reduce(function(sum,array){return sum+array.length},0);arrays=arrays.filter(function(array){return array.length>0});var resultArray=new Array(totalLength);var state=arrays.map(function(){return 0});var i=0;while(i<=totalLength-1){var arrayIndex=getMinFromArrays(arrays,state);resultArray[i]=arrays[arrayIndex][state[arrayIndex]];state[arrayIndex]++;i++}return resultArray}},{}],7:[function(require,module,exports){\"use strict\";function emptyFun(){}function identity(i){return i}module.exports=function(module){var defaults={set:emptyFun,parse:emptyFun,render:emptyFun,getTraits:emptyFun,optionsTransformer:identity,getRenderedMap:identity,postparse:identity};if(Object.keys(defaults).every(function(key){return!module[key]})){throw new Error(\"This module cannot be wrapped, because it doesn't define any of the necessary functions\")}Object.keys(defaults).forEach(function(key){module[key]=module[key]||defaults[key]});return module}},{}],8:[function(require,module,exports){\"use strict\";var traitName=\"expandPair\";var mergeSort=require(\"../mergesort\");var DocUtils=require(\"../doc-utils\");var wrapper=require(\"../module-wrapper\");var _require=require(\"../traits\"),getExpandToDefault=_require.getExpandToDefault;var Errors=require(\"../errors\");function throwUnmatchedLoopException(options){var location=options.location;var t=location===\"start\"?\"unclosed\":\"unopened\";var T=location===\"start\"?\"Unclosed\":\"Unopened\";var err=new Errors.XTTemplateError(T+\" loop\");var tag=options.part.value;err.properties={id:t+\"_loop\",explanation:\"The loop with tag \"+tag+\" is \"+t,xtag:tag};throw err}function throwClosingTagNotMatchOpeningTag(options){var tags=options.tags;var err=new Errors.XTTemplateError(\"Closing tag does not match opening tag\");err.properties={id:\"closing_tag_does_not_match_opening_tag\",explanation:'The tag \"'+tags[0].value+'\" is closed by the tag \"'+tags[1].value+'\"',openingtag:tags[0].value,closingtag:tags[1].value};throw err}function getOpenCountChange(part){switch(part.location){case\"start\":return 1;case\"end\":return-1;default:throw new Error(\"Location should be one of 'start' or 'end' (given : \"+part.location+\")\")}}function getPairs(traits){if(traits.length===0){return[]}var countOpen=1;var firstTrait=traits[0];for(var i=1;i<traits.length;i++){var currentTrait=traits[i];countOpen+=getOpenCountChange(currentTrait.part);if(countOpen===0){if(currentTrait.part.value!==firstTrait.part.value&&currentTrait.part.value!==\"\"){throwClosingTagNotMatchOpeningTag({tags:[firstTrait.part,currentTrait.part]})}var outer=getPairs(traits.slice(i+1));return[[firstTrait,currentTrait]].concat(outer)}}var part=firstTrait.part;throwUnmatchedLoopException({part:part,location:part.location})}var expandPairTrait={name:\"ExpandPairTrait\",postparse:function postparse(parsed,_ref){var getTraits=_ref.getTraits,_postparse=_ref.postparse;var traits=getTraits(traitName,parsed);traits=traits.map(function(trait){return trait||[]});traits=mergeSort(traits);var pairs=getPairs(traits);var expandedPairs=pairs.map(function(pair){var expandTo=pair[0].part.expandTo;if(expandTo===\"auto\"){expandTo=getExpandToDefault(parsed.slice(pair[0].offset,pair[1].offset))}if(!expandTo){return[pair[0].offset,pair[1].offset]}var left=DocUtils.getLeft(parsed,expandTo,pair[0].offset);var right=DocUtils.getRight(parsed,expandTo,pair[1].offset);return[left,right]});var currentPairIndex=0;var innerParts=void 0;return parsed.reduce(function(newParsed,part,i){var inPair=currentPairIndex<pairs.length&&expandedPairs[currentPairIndex][0]<=i;var pair=pairs[currentPairIndex];var expandedPair=expandedPairs[currentPairIndex];if(!inPair){newParsed.push(part);return newParsed}if(expandedPair[0]===i){innerParts=[]}if(pair[0].offset!==i&&pair[1].offset!==i){innerParts.push(part)}if(expandedPair[1]===i){var basePart=parsed[pair[0].offset];delete basePart.location;delete basePart.expandTo;basePart.subparsed=_postparse(innerParts);newParsed.push(basePart);currentPairIndex++}return newParsed},[])}};module.exports=function(){return wrapper(expandPairTrait)}},{\"../doc-utils\":1,\"../errors\":2,\"../mergesort\":6,\"../module-wrapper\":7,\"../traits\":16}],9:[function(require,module,exports){\"use strict\";var DocUtils=require(\"../doc-utils\");var dashInnerRegex=/^-([^\\s]+)\\s(.+)$/;var wrapper=require(\"../module-wrapper\");var moduleName=\"loop\";var loopModule={name:\"LoopModule\",parse:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent[0]===\"#\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:false}}if(placeHolderContent[0]===\"^\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:true}}if(placeHolderContent[0]===\"/\"){return{type:type,value:placeHolderContent.substr(1),module:module,location:\"end\"}}if(placeHolderContent[0]===\"-\"){var value=placeHolderContent.replace(dashInnerRegex,\"$2\");var expandTo=placeHolderContent.replace(dashInnerRegex,\"$1\");return{type:type,value:value,expandTo:expandTo,module:module,location:\"start\",inverted:false}}return null},getTraits:function getTraits(traitName,parsed){if(traitName!==\"expandPair\"){return}return parsed.reduce(function(tags,part,offset){if(part.type===\"placeholder\"&&part.module===moduleName){tags.push({part:part,offset:offset})}return tags},[])},render:function render(part,options){if(!part.type===\"placeholder\"||part.module!==moduleName){return null}var totalValue=[];function loopOver(scope){var scopeManager=options.scopeManager.createSubScopeManager(scope,part.value);totalValue.push(options.render(DocUtils.mergeObjects({},options,{compiled:part.subparsed,tags:{},scopeManager:scopeManager})))}options.scopeManager.loopOver(part.value,loopOver,part.inverted);return{value:totalValue.join(\"\")}}};module.exports=function(){return wrapper(loopModule)}},{\"../doc-utils\":1,\"../module-wrapper\":7}],10:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"../doc-utils\");var Errors=require(\"../errors\");var moduleName=\"rawxml\";var wrapper=require(\"../module-wrapper\");function throwRawTagShouldBeOnlyTextInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag should be the only text in paragraph\");var tag=options.part.value;err.properties={id:\"raw_xml_tag_should_be_only_text_in_paragraph\",explanation:\"The tag \"+tag,xtag:options.part.value,paragraphParts:options.paragraphParts};throw err}function getInner(_ref){var part=_ref.part,left=_ref.left,right=_ref.right,postparsed=_ref.postparsed,index=_ref.index;var paragraphParts=postparsed.slice(left+1,right);paragraphParts.forEach(function(p,i){if(i===index-left-1){return}if(p.type===\"placeholder\"||p.type===\"content\"&&p.position===\"insidetag\"){throwRawTagShouldBeOnlyTextInParagraph({paragraphParts:paragraphParts,part:part})}});return part}var RawXmlModule=function(){function RawXmlModule(){_classCallCheck(this,RawXmlModule);this.name=\"RawXmlModule\"}_createClass(RawXmlModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){this.fileTypeConfig=docxtemplater.fileTypeConfig;return options}},{key:\"parse\",value:function parse(placeHolderContent){var type=\"placeholder\";if(placeHolderContent[0]!==\"@\"){return null}return{type:type,value:placeHolderContent.substr(1),module:moduleName}}},{key:\"postparse\",value:function postparse(parsed){return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:this.fileTypeConfig.tagRawXml})}},{key:\"render\",value:function render(part,options){if(part.module!==moduleName){return null}var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return{value:value}}}]);return RawXmlModule}();module.exports=function(){return wrapper(new RawXmlModule)}},{\"../doc-utils\":1,\"../errors\":2,\"../module-wrapper\":7}],11:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var wrapper=require(\"../module-wrapper\");var Render=function(){function Render(){_classCallCheck(this,Render);this.name=\"Render\"}_createClass(Render,[{key:\"set\",value:function set(obj){if(obj.compiled){this.compiled=obj.compiled}if(obj.data!=null){this.data=obj.data}}},{key:\"getRenderedMap\",value:function getRenderedMap(mapper){var _this=this;return Object.keys(this.compiled).reduce(function(mapper,from){mapper[from]={from:from,data:_this.data};return mapper},mapper)}}]);return Render}();module.exports=function(){return wrapper(new Render)}},{\"../module-wrapper\":7}],12:[function(require,module,exports){\"use strict\";var wrapper=require(\"../module-wrapper\");var spacePreserve={name:\"SpacePreserveModule\",postparse:function postparse(parsed){var chunk=[];var inChunk=false;var result=parsed.reduce(function(parsed,part){if(part.type===\"tag\"&&part.position===\"start\"&&part.text&&part.value===\"<w:t>\"){inChunk=true}if(inChunk){if(part.type===\"placeholder\"&&!part.module){chunk[0].value='<w:t xml:space=\"preserve\">'}chunk.push(part)}else{parsed.push(part)}if(part.type===\"tag\"&&part.position===\"end\"&&part.text&&part.value===\"</w:t>\"){Array.prototype.push.apply(parsed,chunk);inChunk=false;chunk=[]}return parsed},[]);Array.prototype.push.apply(result,chunk);return result}};module.exports=function(){return wrapper(spacePreserve)}},{\"../module-wrapper\":7}],13:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var parser={postparse:function postparse(parsed,modules){function getTraits(traitName,parsed){return modules.map(function(module){return module.getTraits(traitName,parsed)})}function postparse(parsed){return modules.reduce(function(parsed,module){return module.postparse(parsed,{postparse:postparse,getTraits:getTraits})},parsed)}return postparse(parsed)},parse:function parse(lexed,modules){function moduleParse(placeHolderContent,parsed){var moduleParsed=void 0;for(var i=0,l=modules.length;i<l;i++){var _module=modules[i];moduleParsed=_module.parse(placeHolderContent);if(moduleParsed){parsed.push(moduleParsed);return moduleParsed}}return null}var inPlaceHolder=false;var placeHolderContent=void 0;var tailParts=[];return lexed.reduce(function(parsed,token){if(token.type===\"delimiter\"){inPlaceHolder=token.position===\"start\";if(token.position===\"end\"){placeHolderContent=DocUtils.wordToUtf8(placeHolderContent);if(!moduleParse(placeHolderContent,parsed)){parsed.push({type:\"placeholder\",value:placeHolderContent})}Array.prototype.push.apply(parsed,tailParts);tailParts=[];return parsed}placeHolderContent=\"\";return parsed}if(inPlaceHolder){if(token.type===\"content\"&&token.position===\"insidetag\"){placeHolderContent+=token.value}else{tailParts.push(token)}return parsed}parsed.push(token);return parsed},[])}};module.exports=parser},{\"./doc-utils\":1}],14:[function(require,module,exports){\"use strict\";var ScopeManager=require(\"./scope-manager\");var DocUtils=require(\"./doc-utils\");function moduleRender(part,options){var moduleRendered=void 0;for(var i=0,l=options.modules.length;i<l;i++){var _module=options.modules[i];moduleRendered=_module.render(part,options);if(moduleRendered){return moduleRendered}}return false}function render(options){options.render=render;options.modules=options.modules;if(!options.scopeManager){options.scopeManager=ScopeManager.createBaseScopeManager(options)}return options.compiled.map(function(part){var moduleRendered=moduleRender(part,options);if(moduleRendered){return moduleRendered.value}if(part.type===\"placeholder\"){var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return DocUtils.utf8ToWord(value)}if(part.type===\"content\"||part.type===\"tag\"){return part.value}throw new Error('Unimplemented tag type \"'+part.type+'\"')}).join(\"\")}module.exports=render},{\"./doc-utils\":1,\"./scope-manager\":15}],15:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var Errors=require(\"./errors\");var ScopeManager=function(){function ScopeManager(options){_classCallCheck(this,ScopeManager);this.scopePath=options.scopePath;this.scopeList=options.scopeList;this.parser=options.parser}_createClass(ScopeManager,[{key:\"loopOver\",value:function loopOver(tag,callback,inverted){inverted=inverted||false;return this.loopOverValue(this.getValue(tag),callback,inverted)}},{key:\"functorIfInverted\",value:function functorIfInverted(inverted,functor,value){if(inverted){functor(value)}}},{key:\"isValueFalsy\",value:function isValueFalsy(value,type){return value==null||!value||type===\"[object Array]\"&&value.length===0}},{key:\"loopOverValue\",value:function loopOverValue(value,functor,inverted){var type=Object.prototype.toString.call(value);var currentValue=this.scopeList[this.num];if(this.isValueFalsy(value,type)){return this.functorIfInverted(inverted,functor,currentValue)}if(type===\"[object Array]\"){for(var i=0,scope;i<value.length;i++){scope=value[i];this.functorIfInverted(!inverted,functor,scope)}return}if(type===\"[object Object]\"){return this.functorIfInverted(!inverted,functor,value)}if(value===true){return this.functorIfInverted(!inverted,functor,currentValue)}}},{key:\"getValue\",value:function getValue(tag,num){this.num=num==null?this.scopeList.length-1:num;var err=void 0;var parser=void 0;var result=void 0;var scope=this.scopeList[this.num];try{parser=this.parser(tag)}catch(error){err=new Errors.XTScopeParserError(\"Scope parser compilation failed\");err.properties={id:\"scopeparser_compilation_failed\",tag:tag,explanation:\"The scope parser for the tag \"+tag+\" failed to compile\",rootError:error};throw err}try{result=parser.get(scope,{num:this.num,scopeList:this.scopeList})}catch(error){err=new Errors.XTScopeParserError(\"Scope parser execution failed\");err.properties={id:\"scopeparser_execution_failed\",explanation:\"The scope parser for the tag \"+tag+\" failed to execute\",scope:scope,tag:tag,rootError:error};throw err}if(result==null&&this.num>0){return this.getValue(tag,this.num-1)}return result}},{key:\"createSubScopeManager\",value:function createSubScopeManager(scope,tag){var options={scopePath:this.scopePath.slice(0),scopeList:this.scopeList.slice(0)};options.parser=this.parser;options.scopeList=this.scopeList.concat(scope);options.scopePath=this.scopePath.concat(tag);return new ScopeManager(options)}}]);return ScopeManager}();ScopeManager.createBaseScopeManager=function(_ref){var parser=_ref.parser,tags=_ref.tags;var options={parser:parser,tags:tags};options.scopePath=[];options.scopeList=[tags];return new ScopeManager(options)};module.exports=ScopeManager},{\"./errors\":2}],16:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var Errors=require(\"./errors\");function throwRawTagNotInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag not in paragraph\");var tag=options.part.value;err.properties={id:\"raw_tag_outerxml_invalid\",explanation:'The tag \"'+tag+'\"',rootError:options.rootError,xtag:tag,postparsed:options.postparsed,expandTo:options.expandTo,index:options.index};throw err}function lastTagIsOpenTag(array,tag){if(array.length===0){return false}var lastTag=array[array.length-1];var innerLastTag=lastTag.tag.substr(1);var innerCurrentTag=tag.substr(2,tag.length-3);return innerLastTag.indexOf(innerCurrentTag)===0}function addTag(array,tag){array.push({tag:tag});return array}function getListXmlElements(parts){var tags=parts.filter(function(part){return part.type===\"tag\"}).map(function(part){return part.value});var result=[];for(var i=0,tag;i<tags.length;i++){tag=tags[i];if(tag[1]===\"/\"){if(lastTagIsOpenTag(result,tag)){result.pop()}else{result=addTag(result,tag)}}else if(tag[tag.length-1]!==\"/\"){result=addTag(result,tag)}}return result}function getExpandToDefault(parts){var xmlElements=getListXmlElements(parts);for(var i=0;i<xmlElements.length;i++){var xmlElement=xmlElements[i];if(xmlElement.tag.indexOf(\"<w:tc\")===0){return\"w:tr\"}if(xmlElement.tag.indexOf(\"<a:tc\")===0){return\"a:tr\"}}return false}function expandOne(part,postparsed,options){var expandTo=part.expandTo||options.expandTo;var index=postparsed.indexOf(part);if(!expandTo){return postparsed}var right=void 0,left=void 0;try{right=DocUtils.getRight(postparsed,expandTo,index);left=DocUtils.getLeft(postparsed,expandTo,index)}catch(rootError){if(rootError instanceof Errors.XTTemplateError){throwRawTagNotInParagraph({part:part,rootError:rootError,postparsed:postparsed,expandTo:expandTo,index:index})}throw rootError}var leftParts=postparsed.slice(left,index);var rightParts=postparsed.slice(index+1,right+1);var inner=options.getInner({index:index,part:part,leftParts:leftParts,rightParts:rightParts,left:left,right:right,postparsed:postparsed});if(!inner.length){inner.expanded=[leftParts,rightParts];inner=[inner]}return DocUtils.concatArrays([postparsed.slice(0,left),inner,postparsed.slice(right+1)])}function expandToOne(postparsed,options){var expandToElements=postparsed.reduce(function(elements,part){if(part.type===\"placeholder\"&&part.module===options.moduleName){elements.push(part)}return elements},[]);expandToElements.forEach(function(part){postparsed=expandOne(part,postparsed,options)});return postparsed}module.exports={expandToOne:expandToOne,getExpandToDefault:getExpandToDefault}},{\"./doc-utils\":1,\"./errors\":2}],17:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var memoize=require(\"./memoize\");function handleRecursiveCase(res){function replacerUnshift(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.shift();var match=pn.array[0]+pn.array[1];pn.array.unshift(match);pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.first=true;res.matches.unshift(pn);res.charactersAdded.unshift(0);return res.charactersAddedCumulative.unshift(0)}if(res.content.indexOf(\"<\")===-1&&res.content.indexOf(\">\")===-1){res.content.replace(/^()([^<>]*)$/,replacerUnshift)}var r=new RegExp(\"^()([^<]+)</(?:\"+res.tagsXmlArrayJoined+\")>\");res.content.replace(r,replacerUnshift);function replacerPush(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.last=true;res.matches.push(pn);res.charactersAdded.push(0);return res.charactersAddedCumulative.push(0)}r=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^>]+)$\");res.content.replace(r,replacerPush);return res}function xmlMatcher(content,tagsXmlArray){var res={};res.content=content;res.tagsXmlArray=tagsXmlArray;res.tagsXmlArrayJoined=res.tagsXmlArray.join(\"|\");var regexp=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^<>]*)</(?:\"+res.tagsXmlArrayJoined+\")>\",\"g\");res.matches=DocUtils.pregMatchAll(regexp,res.content);res.charactersAddedCumulative=res.matches.map(function(){return 0});res.charactersAdded=res.matches.map(function(){return 0});return handleRecursiveCase(res)}var memoized=memoize(xmlMatcher);module.exports=function(content,tagsXmlArray){return DocUtils.cloneDeep(memoized(content,tagsXmlArray))}},{\"./doc-utils\":1,\"./memoize\":5}],18:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var ScopeManager=require(\"./scope-manager\");var xmlMatcher=require(\"./xml-matcher\");var Errors=require(\"./errors\");var Lexer=require(\"./lexer\");var Parser=require(\"./parser.js\");var _render=require(\"./render.js\");function _getFullText(content,tagsXmlArray){var matcher=xmlMatcher(content,tagsXmlArray);var result=matcher.matches.map(function(match){return match.array[2]});return DocUtils.wordToUtf8(DocUtils.convertSpaces(result.join(\"\")))}module.exports=function(){function XmlTemplater(content,options){_classCallCheck(this,XmlTemplater);this.fromJson(options);this.setModules({inspect:{filePath:this.filePath}});this.load(content)}_createClass(XmlTemplater,[{key:\"load\",value:function load(content){if(typeof content!==\"string\"){var err=new Errors.XTInternalError(\"Content must be a string\");err.properties.id=\"xmltemplater_content_must_be_string\";throw err}this.content=content}},{key:\"setTags\",value:function setTags(tags){this.tags=tags!=null?tags:{};this.scopeManager=ScopeManager.createBaseScopeManager({tags:this.tags,parser:this.parser});return this}},{key:\"fromJson\",value:function fromJson(options){this.filePath=options.filePath;this.modules=options.modules;this.fileTypeConfig=options.fileTypeConfig;Object.keys(DocUtils.defaults).map(function(key){this[key]=options[key]!=null?options[key]:DocUtils.defaults[key]},this)}},{key:\"getFullText\",value:function getFullText(){return _getFullText(this.content,this.fileTypeConfig.tagsXmlTextArray)}},{key:\"setModules\",value:function setModules(obj){this.modules.forEach(function(module){module.set(obj)})}},{key:\"parse\",value:function parse(){this.xmllexed=Lexer.xmlparse(this.content,{text:this.fileTypeConfig.tagsXmlTextArray,other:this.fileTypeConfig.tagsXmlLexedArray});this.setModules({inspect:{xmllexed:this.xmllexed}});this.lexed=Lexer.parse(this.xmllexed,this.delimiters);this.setModules({inspect:{lexed:this.lexed}});this.parsed=Parser.parse(this.lexed,this.modules);this.setModules({inspect:{parsed:this.parsed}});this.postparsed=Parser.postparse(this.parsed,this.modules);return this}},{key:\"render\",value:function render(to){this.filePath=to;this.setModules({inspect:{postparsed:this.postparsed}});this.content=_render({compiled:this.postparsed,tags:this.tags,modules:this.modules,parser:this.parser,nullGetter:this.nullGetter,filePath:this.filePath});this.setModules({inspect:{content:this.content}});return this}}]);return XmlTemplater}()},{\"./doc-utils\":1,\"./errors\":2,\"./lexer\":4,\"./parser.js\":13,\"./render.js\":14,\"./scope-manager\":15,\"./xml-matcher\":17}],19:[function(require,module,exports){function DOMParser(options){this.options=options||{locator:{}}}DOMParser.prototype.parseFromString=function(source,mimeType){var options=this.options;var sax=new XMLReader;var domBuilder=options.domBuilder||new DOMHandler;var errorHandler=options.errorHandler;var locator=options.locator;var defaultNSMap=options.xmlns||{};var entityMap={lt:\"<\",gt:\">\",amp:\"&\",quot:'\"',apos:\"'\"};if(locator){domBuilder.setDocumentLocator(locator)}sax.errorHandler=buildErrorHandler(errorHandler,domBuilder,locator);sax.domBuilder=options.domBuilder||domBuilder;if(/\\/x?html?$/.test(mimeType)){entityMap.nbsp=\" \";entityMap.copy=\"©\";defaultNSMap[\"\"]=\"http://www.w3.org/1999/xhtml\"}defaultNSMap.xml=defaultNSMap.xml||\"http://www.w3.org/XML/1998/namespace\";if(source){sax.parse(source,defaultNSMap,entityMap)}else{sax.errorHandler.error(\"invalid doc source\")}return domBuilder.doc};function buildErrorHandler(errorImpl,domBuilder,locator){if(!errorImpl){if(domBuilder instanceof DOMHandler){return domBuilder}errorImpl=domBuilder}var errorHandler={};var isCallback=errorImpl instanceof Function;locator=locator||{};function build(key){var fn=errorImpl[key];if(!fn&&isCallback){fn=errorImpl.length==2?function(msg){errorImpl(key,msg)}:errorImpl}errorHandler[key]=fn&&function(msg){fn(\"[xmldom \"+key+\"]\\t\"+msg+_locator(locator))}||function(){}}build(\"warning\");build(\"error\");build(\"fatalError\");return errorHandler}function DOMHandler(){this.cdata=false}function position(locator,node){node.lineNumber=locator.lineNumber;node.columnNumber=locator.columnNumber}DOMHandler.prototype={startDocument:function(){this.doc=(new DOMImplementation).createDocument(null,null,null);if(this.locator){this.doc.documentURI=this.locator.systemId}},startElement:function(namespaceURI,localName,qName,attrs){var doc=this.doc;var el=doc.createElementNS(namespaceURI,qName||localName);var len=attrs.length;appendElement(this,el);this.currentElement=el;this.locator&&position(this.locator,el);for(var i=0;i<len;i++){var namespaceURI=attrs.getURI(i);var value=attrs.getValue(i);var qName=attrs.getQName(i);var attr=doc.createAttributeNS(namespaceURI,qName);this.locator&&position(attrs.getLocator(i),attr);attr.value=attr.nodeValue=value;el.setAttributeNode(attr)}},endElement:function(namespaceURI,localName,qName){var current=this.currentElement;var tagName=current.tagName;this.currentElement=current.parentNode},startPrefixMapping:function(prefix,uri){},endPrefixMapping:function(prefix){},processingInstruction:function(target,data){var ins=this.doc.createProcessingInstruction(target,data);this.locator&&position(this.locator,ins);appendElement(this,ins)},ignorableWhitespace:function(ch,start,length){},characters:function(chars,start,length){chars=_toString.apply(this,arguments);if(chars){if(this.cdata){var charNode=this.doc.createCDATASection(chars)}else{var charNode=this.doc.createTextNode(chars)}if(this.currentElement){this.currentElement.appendChild(charNode)}else if(/^\\s*$/.test(chars)){this.doc.appendChild(charNode)}this.locator&&position(this.locator,charNode)}},skippedEntity:function(name){},endDocument:function(){this.doc.normalize()},setDocumentLocator:function(locator){if(this.locator=locator){locator.lineNumber=0}},comment:function(chars,start,length){chars=_toString.apply(this,arguments);var comm=this.doc.createComment(chars);this.locator&&position(this.locator,comm);appendElement(this,comm)},startCDATA:function(){this.cdata=true},endCDATA:function(){this.cdata=false},startDTD:function(name,publicId,systemId){var impl=this.doc.implementation;if(impl&&impl.createDocumentType){var dt=impl.createDocumentType(name,publicId,systemId);this.locator&&position(this.locator,dt);appendElement(this,dt)}},warning:function(error){console.warn(\"[xmldom warning]\\t\"+error,_locator(this.locator))},error:function(error){console.error(\"[xmldom error]\\t\"+error,_locator(this.locator))},fatalError:function(error){console.error(\"[xmldom fatalError]\\t\"+error,_locator(this.locator));throw error}};function _locator(l){if(l){return\"\\n@\"+(l.systemId||\"\")+\"#[line:\"+l.lineNumber+\",col:\"+l.columnNumber+\"]\"}}function _toString(chars,start,length){if(typeof chars==\"string\"){return chars.substr(start,length)}else{if(chars.length>=start+length||start){return new java.lang.String(chars,start,length)+\"\"}return chars}}\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){DOMHandler.prototype[key]=function(){return null}});function appendElement(hander,node){if(!hander.currentElement){hander.doc.appendChild(node)}else{hander.currentElement.appendChild(node)}}var XMLReader=require(\"./sax\").XMLReader;var DOMImplementation=exports.DOMImplementation=require(\"./dom\").DOMImplementation;exports.XMLSerializer=require(\"./dom\").XMLSerializer;exports.DOMParser=DOMParser},{\"./dom\":20,\"./sax\":21}],20:[function(require,module,exports){function copy(src,dest){for(var p in src){dest[p]=src[p]}}function _extends(Class,Super){var pt=Class.prototype;if(Object.create){var ppt=Object.create(Super.prototype);pt.__proto__=ppt}if(!(pt instanceof Super)){function t(){}t.prototype=Super.prototype;t=new t;copy(pt,t);Class.prototype=pt=t}if(pt.constructor!=Class){if(typeof Class!=\"function\"){console.error(\"unknow Class:\"+Class)}pt.constructor=Class}}var htmlns=\"http://www.w3.org/1999/xhtml\";var NodeType={};var ELEMENT_NODE=NodeType.ELEMENT_NODE=1;var ATTRIBUTE_NODE=NodeType.ATTRIBUTE_NODE=2;var TEXT_NODE=NodeType.TEXT_NODE=3;var CDATA_SECTION_NODE=NodeType.CDATA_SECTION_NODE=4;var ENTITY_REFERENCE_NODE=NodeType.ENTITY_REFERENCE_NODE=5;var ENTITY_NODE=NodeType.ENTITY_NODE=6;var PROCESSING_INSTRUCTION_NODE=NodeType.PROCESSING_INSTRUCTION_NODE=7;var COMMENT_NODE=NodeType.COMMENT_NODE=8;var DOCUMENT_NODE=NodeType.DOCUMENT_NODE=9;var DOCUMENT_TYPE_NODE=NodeType.DOCUMENT_TYPE_NODE=10;var DOCUMENT_FRAGMENT_NODE=NodeType.DOCUMENT_FRAGMENT_NODE=11;var NOTATION_NODE=NodeType.NOTATION_NODE=12;var ExceptionCode={};var ExceptionMessage={};var INDEX_SIZE_ERR=ExceptionCode.INDEX_SIZE_ERR=(ExceptionMessage[1]=\"Index size error\",1);var DOMSTRING_SIZE_ERR=ExceptionCode.DOMSTRING_SIZE_ERR=(ExceptionMessage[2]=\"DOMString size error\",2);var HIERARCHY_REQUEST_ERR=ExceptionCode.HIERARCHY_REQUEST_ERR=(ExceptionMessage[3]=\"Hierarchy request error\",3);var WRONG_DOCUMENT_ERR=ExceptionCode.WRONG_DOCUMENT_ERR=(ExceptionMessage[4]=\"Wrong document\",4);var INVALID_CHARACTER_ERR=ExceptionCode.INVALID_CHARACTER_ERR=(ExceptionMessage[5]=\"Invalid character\",5);var NO_DATA_ALLOWED_ERR=ExceptionCode.NO_DATA_ALLOWED_ERR=(ExceptionMessage[6]=\"No data allowed\",6);var NO_MODIFICATION_ALLOWED_ERR=ExceptionCode.NO_MODIFICATION_ALLOWED_ERR=(ExceptionMessage[7]=\"No modification allowed\",7);var NOT_FOUND_ERR=ExceptionCode.NOT_FOUND_ERR=(ExceptionMessage[8]=\"Not found\",8);var NOT_SUPPORTED_ERR=ExceptionCode.NOT_SUPPORTED_ERR=(ExceptionMessage[9]=\"Not supported\",9);var INUSE_ATTRIBUTE_ERR=ExceptionCode.INUSE_ATTRIBUTE_ERR=(ExceptionMessage[10]=\"Attribute in use\",10);var INVALID_STATE_ERR=ExceptionCode.INVALID_STATE_ERR=(ExceptionMessage[11]=\"Invalid state\",11);var SYNTAX_ERR=ExceptionCode.SYNTAX_ERR=(ExceptionMessage[12]=\"Syntax error\",12);var INVALID_MODIFICATION_ERR=ExceptionCode.INVALID_MODIFICATION_ERR=(ExceptionMessage[13]=\"Invalid modification\",13);var NAMESPACE_ERR=ExceptionCode.NAMESPACE_ERR=(ExceptionMessage[14]=\"Invalid namespace\",14);var INVALID_ACCESS_ERR=ExceptionCode.INVALID_ACCESS_ERR=(ExceptionMessage[15]=\"Invalid access\",15);function DOMException(code,message){if(message instanceof Error){var error=message}else{error=this;Error.call(this,ExceptionMessage[code]);this.message=ExceptionMessage[code];if(Error.captureStackTrace)Error.captureStackTrace(this,DOMException)}error.code=code;if(message)this.message=this.message+\": \"+message;return error}DOMException.prototype=Error.prototype;copy(ExceptionCode,DOMException);function NodeList(){}NodeList.prototype={length:0,item:function(index){return this[index]||null},toString:function(isHTML,nodeFilter){for(var buf=[],i=0;i<this.length;i++){serializeToString(this[i],buf,isHTML,nodeFilter)}return buf.join(\"\")}};function LiveNodeList(node,refresh){this._node=node;this._refresh=refresh;_updateLiveList(this)}function _updateLiveList(list){var inc=list._node._inc||list._node.ownerDocument._inc;if(list._inc!=inc){var ls=list._refresh(list._node);__set__(list,\"length\",ls.length);copy(ls,list);list._inc=inc}}LiveNodeList.prototype.item=function(i){_updateLiveList(this);return this[i]};_extends(LiveNodeList,NodeList);function NamedNodeMap(){}function _findNodeIndex(list,node){var i=list.length;while(i--){if(list[i]===node){return i}}}function _addNamedNode(el,list,newAttr,oldAttr){if(oldAttr){list[_findNodeIndex(list,oldAttr)]=newAttr}else{list[list.length++]=newAttr}if(el){newAttr.ownerElement=el;var doc=el.ownerDocument;if(doc){oldAttr&&_onRemoveAttribute(doc,el,oldAttr);_onAddAttribute(doc,el,newAttr)}}}function _removeNamedNode(el,list,attr){var i=_findNodeIndex(list,attr);if(i>=0){var lastIndex=list.length-1;while(i<lastIndex){list[i]=list[++i]}list.length=lastIndex;if(el){var doc=el.ownerDocument;if(doc){_onRemoveAttribute(doc,el,attr);attr.ownerElement=null}}}else{throw DOMException(NOT_FOUND_ERR,new Error(el.tagName+\"@\"+attr))}}NamedNodeMap.prototype={length:0,item:NodeList.prototype.item,getNamedItem:function(key){var i=this.length;while(i--){var attr=this[i];if(attr.nodeName==key){return attr}}},setNamedItem:function(attr){var el=attr.ownerElement;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}var oldAttr=this.getNamedItem(attr.nodeName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},setNamedItemNS:function(attr){var el=attr.ownerElement,oldAttr;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}oldAttr=this.getNamedItemNS(attr.namespaceURI,attr.localName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},removeNamedItem:function(key){var attr=this.getNamedItem(key);_removeNamedNode(this._ownerElement,this,attr);return attr},removeNamedItemNS:function(namespaceURI,localName){var attr=this.getNamedItemNS(namespaceURI,localName);_removeNamedNode(this._ownerElement,this,attr);return attr},getNamedItemNS:function(namespaceURI,localName){var i=this.length;while(i--){var node=this[i];if(node.localName==localName&&node.namespaceURI==namespaceURI){return node}}return null}};function DOMImplementation(features){this._features={};if(features){for(var feature in features){this._features=features[feature]}}}DOMImplementation.prototype={hasFeature:function(feature,version){var versions=this._features[feature.toLowerCase()];if(versions&&(!version||version in versions)){return true}else{return false}},createDocument:function(namespaceURI,qualifiedName,doctype){var doc=new Document;doc.implementation=this;doc.childNodes=new NodeList;doc.doctype=doctype;if(doctype){doc.appendChild(doctype)}if(qualifiedName){var root=doc.createElementNS(namespaceURI,qualifiedName);doc.appendChild(root)}return doc},createDocumentType:function(qualifiedName,publicId,systemId){var node=new DocumentType;node.name=qualifiedName;node.nodeName=qualifiedName;node.publicId=publicId;node.systemId=systemId;return node}};function Node(){}Node.prototype={firstChild:null,lastChild:null,previousSibling:null,nextSibling:null,attributes:null,parentNode:null,childNodes:null,ownerDocument:null,nodeValue:null,namespaceURI:null,prefix:null,localName:null,insertBefore:function(newChild,refChild){return _insertBefore(this,newChild,refChild)},replaceChild:function(newChild,oldChild){this.insertBefore(newChild,oldChild);if(oldChild){this.removeChild(oldChild)}},removeChild:function(oldChild){return _removeChild(this,oldChild)},appendChild:function(newChild){return this.insertBefore(newChild,null)},hasChildNodes:function(){return this.firstChild!=null},cloneNode:function(deep){return cloneNode(this.ownerDocument||this,this,deep)},normalize:function(){var child=this.firstChild;while(child){var next=child.nextSibling;if(next&&next.nodeType==TEXT_NODE&&child.nodeType==TEXT_NODE){this.removeChild(next);child.appendData(next.data)}else{child.normalize();child=next}}},isSupported:function(feature,version){return this.ownerDocument.implementation.hasFeature(feature,version)},hasAttributes:function(){return this.attributes.length>0},lookupPrefix:function(namespaceURI){var el=this;while(el){var map=el._nsMap;if(map){for(var n in map){if(map[n]==namespaceURI){return n}}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},lookupNamespaceURI:function(prefix){var el=this;while(el){var map=el._nsMap;if(map){if(prefix in map){return map[prefix]}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},isDefaultNamespace:function(namespaceURI){var prefix=this.lookupPrefix(namespaceURI);return prefix==null}};function _xmlEncoder(c){return c==\"<\"&&\"&lt;\"||c==\">\"&&\"&gt;\"||c==\"&\"&&\"&amp;\"||c=='\"'&&\"&quot;\"||\"&#\"+c.charCodeAt()+\";\"}copy(NodeType,Node);copy(NodeType,Node.prototype);function _visitNode(node,callback){if(callback(node)){return true}if(node=node.firstChild){do{if(_visitNode(node,callback)){return true}}while(node=node.nextSibling)}}function Document(){}function _onAddAttribute(doc,el,newAttr){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){el._nsMap[newAttr.prefix?newAttr.localName:\"\"]=newAttr.value}}function _onRemoveAttribute(doc,el,newAttr,remove){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){delete el._nsMap[newAttr.prefix?newAttr.localName:\"\"]}}function _onUpdateChild(doc,el,newChild){if(doc&&doc._inc){doc._inc++;var cs=el.childNodes;if(newChild){cs[cs.length++]=newChild}else{var child=el.firstChild;var i=0;while(child){cs[i++]=child;child=child.nextSibling}cs.length=i}}}function _removeChild(parentNode,child){var previous=child.previousSibling;var next=child.nextSibling;if(previous){previous.nextSibling=next}else{parentNode.firstChild=next}if(next){next.previousSibling=previous}else{parentNode.lastChild=previous}_onUpdateChild(parentNode.ownerDocument,parentNode);return child}function _insertBefore(parentNode,newChild,nextChild){var cp=newChild.parentNode;if(cp){cp.removeChild(newChild)}if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){var newFirst=newChild.firstChild;if(newFirst==null){return newChild}var newLast=newChild.lastChild}else{newFirst=newLast=newChild}var pre=nextChild?nextChild.previousSibling:parentNode.lastChild;newFirst.previousSibling=pre;newLast.nextSibling=nextChild;if(pre){pre.nextSibling=newFirst}else{parentNode.firstChild=newFirst}if(nextChild==null){parentNode.lastChild=newLast}else{nextChild.previousSibling=newLast}do{newFirst.parentNode=parentNode}while(newFirst!==newLast&&(newFirst=newFirst.nextSibling));_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){newChild.firstChild=newChild.lastChild=null}return newChild}function _appendSingleChild(parentNode,newChild){var cp=newChild.parentNode;if(cp){var pre=parentNode.lastChild;cp.removeChild(newChild);var pre=parentNode.lastChild}var pre=parentNode.lastChild;newChild.parentNode=parentNode;newChild.previousSibling=pre;newChild.nextSibling=null;if(pre){pre.nextSibling=newChild}else{parentNode.firstChild=newChild}parentNode.lastChild=newChild;_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);return newChild}Document.prototype={nodeName:\"#document\",nodeType:DOCUMENT_NODE,doctype:null,documentElement:null,_inc:1,insertBefore:function(newChild,refChild){if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){var child=newChild.firstChild;while(child){var next=child.nextSibling;this.insertBefore(child,refChild);child=next}return newChild}if(this.documentElement==null&&newChild.nodeType==ELEMENT_NODE){this.documentElement=newChild}return _insertBefore(this,newChild,refChild),newChild.ownerDocument=this,newChild},removeChild:function(oldChild){if(this.documentElement==oldChild){this.documentElement=null}return _removeChild(this,oldChild)},importNode:function(importedNode,deep){return importNode(this,importedNode,deep)},getElementById:function(id){var rtv=null;_visitNode(this.documentElement,function(node){if(node.nodeType==ELEMENT_NODE){if(node.getAttribute(\"id\")==id){rtv=node;return true}}});return rtv},createElement:function(tagName){var node=new Element;node.ownerDocument=this;node.nodeName=tagName;node.tagName=tagName;node.childNodes=new NodeList;var attrs=node.attributes=new NamedNodeMap;attrs._ownerElement=node;return node},createDocumentFragment:function(){var node=new DocumentFragment;node.ownerDocument=this;node.childNodes=new NodeList;return node},createTextNode:function(data){var node=new Text;node.ownerDocument=this;node.appendData(data);return node},createComment:function(data){var node=new Comment;node.ownerDocument=this;node.appendData(data);return node},createCDATASection:function(data){var node=new CDATASection;node.ownerDocument=this;node.appendData(data);return node},createProcessingInstruction:function(target,data){var node=new ProcessingInstruction;node.ownerDocument=this;node.tagName=node.target=target;node.nodeValue=node.data=data;return node},createAttribute:function(name){var node=new Attr;node.ownerDocument=this;node.name=name;node.nodeName=name;node.localName=name;node.specified=true;return node},createEntityReference:function(name){var node=new EntityReference;node.ownerDocument=this;node.nodeName=name;return node},createElementNS:function(namespaceURI,qualifiedName){var node=new Element;var pl=qualifiedName.split(\":\");var attrs=node.attributes=new NamedNodeMap;node.childNodes=new NodeList;node.ownerDocument=this;node.nodeName=qualifiedName;node.tagName=qualifiedName;node.namespaceURI=namespaceURI;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}attrs._ownerElement=node;return node},createAttributeNS:function(namespaceURI,qualifiedName){var node=new Attr;var pl=qualifiedName.split(\":\");node.ownerDocument=this;node.nodeName=qualifiedName;node.name=qualifiedName;node.namespaceURI=namespaceURI;node.specified=true;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}return node}};_extends(Document,Node);function Element(){this._nsMap={}}Element.prototype={nodeType:ELEMENT_NODE,hasAttribute:function(name){return this.getAttributeNode(name)!=null},getAttribute:function(name){var attr=this.getAttributeNode(name);return attr&&attr.value||\"\"},getAttributeNode:function(name){return this.attributes.getNamedItem(name)},setAttribute:function(name,value){var attr=this.ownerDocument.createAttribute(name);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},removeAttribute:function(name){var attr=this.getAttributeNode(name);attr&&this.removeAttributeNode(attr)},appendChild:function(newChild){if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){return this.insertBefore(newChild,null)}else{return _appendSingleChild(this,newChild)}},setAttributeNode:function(newAttr){return this.attributes.setNamedItem(newAttr)},setAttributeNodeNS:function(newAttr){return this.attributes.setNamedItemNS(newAttr)},removeAttributeNode:function(oldAttr){return this.attributes.removeNamedItem(oldAttr.nodeName)},removeAttributeNS:function(namespaceURI,localName){var old=this.getAttributeNodeNS(namespaceURI,localName);old&&this.removeAttributeNode(old)},hasAttributeNS:function(namespaceURI,localName){return this.getAttributeNodeNS(namespaceURI,localName)!=null},getAttributeNS:function(namespaceURI,localName){var attr=this.getAttributeNodeNS(namespaceURI,localName);return attr&&attr.value||\"\"},setAttributeNS:function(namespaceURI,qualifiedName,value){var attr=this.ownerDocument.createAttributeNS(namespaceURI,qualifiedName);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},getAttributeNodeNS:function(namespaceURI,localName){return this.attributes.getNamedItemNS(namespaceURI,localName)},getElementsByTagName:function(tagName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType==ELEMENT_NODE&&(tagName===\"*\"||node.tagName==tagName)){ls.push(node)}});return ls})},getElementsByTagNameNS:function(namespaceURI,localName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType===ELEMENT_NODE&&(namespaceURI===\"*\"||node.namespaceURI===namespaceURI)&&(localName===\"*\"||node.localName==localName)){ls.push(node)}});return ls})}};Document.prototype.getElementsByTagName=Element.prototype.getElementsByTagName;Document.prototype.getElementsByTagNameNS=Element.prototype.getElementsByTagNameNS;_extends(Element,Node);function Attr(){}Attr.prototype.nodeType=ATTRIBUTE_NODE;_extends(Attr,Node);function CharacterData(){}CharacterData.prototype={data:\"\",substringData:function(offset,count){return this.data.substring(offset,offset+count)},appendData:function(text){text=this.data+text;this.nodeValue=this.data=text;this.length=text.length},insertData:function(offset,text){this.replaceData(offset,0,text)},appendChild:function(newChild){throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])},deleteData:function(offset,count){this.replaceData(offset,count,\"\")},replaceData:function(offset,count,text){var start=this.data.substring(0,offset);var end=this.data.substring(offset+count);text=start+text+end;this.nodeValue=this.data=text;this.length=text.length}};_extends(CharacterData,Node);function Text(){}Text.prototype={nodeName:\"#text\",nodeType:TEXT_NODE,splitText:function(offset){var text=this.data;var newText=text.substring(offset);text=text.substring(0,offset);this.data=this.nodeValue=text;this.length=text.length;var newNode=this.ownerDocument.createTextNode(newText);if(this.parentNode){this.parentNode.insertBefore(newNode,this.nextSibling)}return newNode}};_extends(Text,CharacterData);function Comment(){}Comment.prototype={nodeName:\"#comment\",nodeType:COMMENT_NODE};_extends(Comment,CharacterData);function CDATASection(){}CDATASection.prototype={nodeName:\"#cdata-section\",nodeType:CDATA_SECTION_NODE};_extends(CDATASection,CharacterData);function DocumentType(){}DocumentType.prototype.nodeType=DOCUMENT_TYPE_NODE;_extends(DocumentType,Node);function Notation(){}Notation.prototype.nodeType=NOTATION_NODE;_extends(Notation,Node);function Entity(){}Entity.prototype.nodeType=ENTITY_NODE;_extends(Entity,Node);function EntityReference(){}EntityReference.prototype.nodeType=ENTITY_REFERENCE_NODE;_extends(EntityReference,Node);function DocumentFragment(){}DocumentFragment.prototype.nodeName=\"#document-fragment\";DocumentFragment.prototype.nodeType=DOCUMENT_FRAGMENT_NODE;_extends(DocumentFragment,Node);function ProcessingInstruction(){}ProcessingInstruction.prototype.nodeType=PROCESSING_INSTRUCTION_NODE;_extends(ProcessingInstruction,Node);function XMLSerializer(){}XMLSerializer.prototype.serializeToString=function(node,isHtml,nodeFilter){return nodeSerializeToString.call(node,isHtml,nodeFilter)};Node.prototype.toString=nodeSerializeToString;function nodeSerializeToString(isHtml,nodeFilter){var buf=[];var refNode=this.nodeType==9?this.documentElement:this;var prefix=refNode.prefix;var uri=refNode.namespaceURI;if(uri&&prefix==null){var prefix=refNode.lookupPrefix(uri);if(prefix==null){var visibleNamespaces=[{namespace:uri,prefix:null}]}}serializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);return buf.join(\"\")}function needNamespaceDefine(node,isHTML,visibleNamespaces){var prefix=node.prefix||\"\";var uri=node.namespaceURI;if(!prefix&&!uri){return false}if(prefix===\"xml\"&&uri===\"http://www.w3.org/XML/1998/namespace\"||uri==\"http://www.w3.org/2000/xmlns/\"){return false}var i=visibleNamespaces.length;while(i--){var ns=visibleNamespaces[i];if(ns.prefix==prefix){return ns.namespace!=uri}}return true}function serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){if(nodeFilter){node=nodeFilter(node);if(node){if(typeof node==\"string\"){buf.push(node);return}}else{return}}switch(node.nodeType){case ELEMENT_NODE:if(!visibleNamespaces)visibleNamespaces=[];var startVisibleNamespaces=visibleNamespaces.length;var attrs=node.attributes;var len=attrs.length;var child=node.firstChild;var nodeName=node.tagName;isHTML=htmlns===node.namespaceURI||isHTML;buf.push(\"<\",nodeName);for(var i=0;i<len;i++){var attr=attrs.item(i);if(attr.prefix==\"xmlns\"){visibleNamespaces.push({prefix:attr.localName,namespace:attr.value})}else if(attr.nodeName==\"xmlns\"){visibleNamespaces.push({prefix:\"\",namespace:attr.value})}}for(var i=0;i<len;i++){var attr=attrs.item(i);if(needNamespaceDefine(attr,isHTML,visibleNamespaces)){var prefix=attr.prefix||\"\";var uri=attr.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}serializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces)}if(needNamespaceDefine(node,isHTML,visibleNamespaces)){var prefix=node.prefix||\"\";var uri=node.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}if(child||isHTML&&!/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){buf.push(\">\");if(isHTML&&/^script$/i.test(nodeName)){while(child){if(child.data){buf.push(child.data)}else{serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces)}child=child.nextSibling}}else{while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}}buf.push(\"</\",nodeName,\">\")}else{buf.push(\"/>\")}return;case DOCUMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var child=node.firstChild;while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}return;case ATTRIBUTE_NODE:return buf.push(\" \",node.name,'=\"',node.value.replace(/[<&\"]/g,_xmlEncoder),'\"');case TEXT_NODE:return buf.push(node.data.replace(/[<&]/g,_xmlEncoder));case CDATA_SECTION_NODE:return buf.push(\"<![CDATA[\",node.data,\"]]>\");case COMMENT_NODE:return buf.push(\"\\x3c!--\",node.data,\"--\\x3e\");case DOCUMENT_TYPE_NODE:var pubid=node.publicId;var sysid=node.systemId;buf.push(\"<!DOCTYPE \",node.name);if(pubid){buf.push(' PUBLIC \"',pubid);if(sysid&&sysid!=\".\"){buf.push('\" \"',sysid)}buf.push('\">')}else if(sysid&&sysid!=\".\"){buf.push(' SYSTEM \"',sysid,'\">')}else{var sub=node.internalSubset;if(sub){buf.push(\" [\",sub,\"]\")}buf.push(\">\")}return;case PROCESSING_INSTRUCTION_NODE:return buf.push(\"<?\",node.target,\" \",node.data,\"?>\");case ENTITY_REFERENCE_NODE:return buf.push(\"&\",node.nodeName,\";\");default:buf.push(\"??\",node.nodeName)}}function importNode(doc,node,deep){var node2;switch(node.nodeType){case ELEMENT_NODE:node2=node.cloneNode(false);node2.ownerDocument=doc;case DOCUMENT_FRAGMENT_NODE:break;case ATTRIBUTE_NODE:deep=true;break}if(!node2){node2=node.cloneNode(false)}node2.ownerDocument=doc;node2.parentNode=null;if(deep){var child=node.firstChild;while(child){node2.appendChild(importNode(doc,child,deep));child=child.nextSibling}}return node2}function cloneNode(doc,node,deep){var node2=new node.constructor;for(var n in node){var v=node[n];if(typeof v!=\"object\"){if(v!=node2[n]){node2[n]=v}}}if(node.childNodes){node2.childNodes=new NodeList}node2.ownerDocument=doc;switch(node2.nodeType){case ELEMENT_NODE:var attrs=node.attributes;var attrs2=node2.attributes=new NamedNodeMap;var len=attrs.length;attrs2._ownerElement=node2;for(var i=0;i<len;i++){node2.setAttributeNode(cloneNode(doc,attrs.item(i),true))}break;case ATTRIBUTE_NODE:deep=true}if(deep){var child=node.firstChild;while(child){node2.appendChild(cloneNode(doc,child,deep));child=child.nextSibling}}return node2}function __set__(object,key,value){object[key]=value}try{if(Object.defineProperty){Object.defineProperty(LiveNodeList.prototype,\"length\",{get:function(){_updateLiveList(this);return this.$$length}});Object.defineProperty(Node.prototype,\"textContent\",{get:function(){return getTextContent(this)},set:function(data){switch(this.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:while(this.firstChild){this.removeChild(this.firstChild)}if(data||String(data)){this.appendChild(this.ownerDocument.createTextNode(data))}break;default:this.data=data;this.value=data;this.nodeValue=data}}});function getTextContent(node){switch(node.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var buf=[];node=node.firstChild;while(node){if(node.nodeType!==7&&node.nodeType!==8){buf.push(getTextContent(node))}node=node.nextSibling}return buf.join(\"\");default:return node.nodeValue}}__set__=function(object,key,value){object[\"$$\"+key]=value}}}catch(e){}exports.DOMImplementation=DOMImplementation;exports.XMLSerializer=XMLSerializer},{}],21:[function(require,module,exports){var nameStartChar=/[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;var nameChar=new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");var tagNamePattern=new RegExp(\"^\"+nameStartChar.source+nameChar.source+\"*(?::\"+nameStartChar.source+nameChar.source+\"*)?$\");var S_TAG=0;var S_ATTR=1;var S_ATTR_SPACE=2;var S_EQ=3;var S_ATTR_NOQUOT_VALUE=4;var S_ATTR_END=5;var S_TAG_SPACE=6;var S_TAG_CLOSE=7;function XMLReader(){}XMLReader.prototype={parse:function(source,defaultNSMap,entityMap){var domBuilder=this.domBuilder;domBuilder.startDocument();_copy(defaultNSMap,defaultNSMap={});parse(source,defaultNSMap,entityMap,domBuilder,this.errorHandler);domBuilder.endDocument()}};function parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){function fixedFromCharCode(code){if(code>65535){code-=65536;var surrogate1=55296+(code>>10),surrogate2=56320+(code&1023);return String.fromCharCode(surrogate1,surrogate2)}else{return String.fromCharCode(code)}}function entityReplacer(a){var k=a.slice(1,-1);if(k in entityMap){return entityMap[k]}else if(k.charAt(0)===\"#\"){return fixedFromCharCode(parseInt(k.substr(1).replace(\"x\",\"0x\")))}else{errorHandler.error(\"entity not found:\"+a);return a}}function appendText(end){if(end>start){var xt=source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);locator&&position(start);domBuilder.characters(xt,0,end-start);start=end}}function position(p,m){while(p>=lineEnd&&(m=linePattern.exec(source))){lineStart=m.index;lineEnd=lineStart+m[0].length;locator.lineNumber++}locator.columnNumber=p-lineStart+1}var lineStart=0;var lineEnd=0;var linePattern=/.*(?:\\r\\n?|\\n)|.*$/g;var locator=domBuilder.locator;var parseStack=[{currentNSMap:defaultNSMapCopy}];var closeMap={};var start=0;while(true){try{var tagStart=source.indexOf(\"<\",start);if(tagStart<0){if(!source.substr(start).match(/^\\s*$/)){var doc=domBuilder.doc;var text=doc.createTextNode(source.substr(start));doc.appendChild(text);domBuilder.currentElement=text}return}if(tagStart>start){appendText(tagStart)}switch(source.charAt(tagStart+1)){case\"/\":var end=source.indexOf(\">\",tagStart+3);var tagName=source.substring(tagStart+2,end);var config=parseStack.pop();if(end<0){tagName=source.substring(tagStart+2).replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" is not complete:\"+config.tagName);end=tagStart+1+tagName.length}else if(tagName.match(/\\s</)){tagName=tagName.replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" maybe not complete\");end=tagStart+1+tagName.length}var localNSMap=config.localNSMap;var endMatch=config.tagName==tagName;var endIgnoreCaseMach=endMatch||config.tagName&&config.tagName.toLowerCase()==tagName.toLowerCase();if(endIgnoreCaseMach){domBuilder.endElement(config.uri,config.localName,tagName);if(localNSMap){for(var prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}if(!endMatch){errorHandler.fatalError(\"end tag name: \"+tagName+\" is not match the current start tagName:\"+config.tagName)}}else{parseStack.push(config)}end++;break;case\"?\":locator&&position(tagStart);end=parseInstruction(source,tagStart,domBuilder);break;case\"!\":locator&&position(tagStart);end=parseDCC(source,tagStart,domBuilder,errorHandler);break;default:locator&&position(tagStart);var el=new ElementAttributes;var currentNSMap=parseStack[parseStack.length-1].currentNSMap;var end=parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);var len=el.length;if(!el.closed&&fixSelfClosed(source,end,el.tagName,closeMap)){el.closed=true;if(!entityMap.nbsp){errorHandler.warning(\"unclosed xml attribute\")}}if(locator&&len){var locator2=copyLocator(locator,{});for(var i=0;i<len;i++){var a=el[i];position(a.offset);a.locator=copyLocator(locator,{})}domBuilder.locator=locator2;if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}domBuilder.locator=locator}else{if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}}if(el.uri===\"http://www.w3.org/1999/xhtml\"&&!el.closed){end=parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)}else{end++}}}catch(e){errorHandler.error(\"element parse error: \"+e);end=-1}if(end>start){start=end}else{appendText(Math.max(tagStart,start)+1)}}}function copyLocator(f,t){t.lineNumber=f.lineNumber;t.columnNumber=f.columnNumber;return t}function parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){var attrName;var value;var p=++start;var s=S_TAG;while(true){var c=source.charAt(p);switch(c){case\"=\":if(s===S_ATTR){attrName=source.slice(start,p);s=S_EQ}else if(s===S_ATTR_SPACE){s=S_EQ}else{throw new Error(\"attribute equal must after attrName\")}break;case\"'\":case'\"':if(s===S_EQ||s===S_ATTR){if(s===S_ATTR){errorHandler.warning('attribute value must after \"=\"');attrName=source.slice(start,p)}start=p+1;p=source.indexOf(c,start);if(p>0){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start-1);s=S_ATTR_END}else{throw new Error(\"attribute value no end '\"+c+\"' match\")}}else if(s==S_ATTR_NOQUOT_VALUE){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start);errorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+\")!!\");start=p+1;s=S_ATTR_END}else{throw new Error('attribute value must after \"=\"')}break;case\"/\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:s=S_TAG_CLOSE;el.closed=true;case S_ATTR_NOQUOT_VALUE:case S_ATTR:case S_ATTR_SPACE:break;default:throw new Error(\"attribute invalid close char('/')\")}break;case\"\":errorHandler.error(\"unexpected end of input\");if(s==S_TAG){el.setTagName(source.slice(start,p))}return p;case\">\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:break;case S_ATTR_NOQUOT_VALUE:case S_ATTR:value=source.slice(start,p);if(value.slice(-1)===\"/\"){el.closed=true;value=value.slice(0,-1)}case S_ATTR_SPACE:if(s===S_ATTR_SPACE){value=attrName}if(s==S_ATTR_NOQUOT_VALUE){errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value.replace(/&#?\\w+;/g,entityReplacer),start)}else{if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!value.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')}el.add(value,value,start)}break;case S_EQ:throw new Error(\"attribute value missed!!\")}return p;case\"\":c=\" \";default:if(c<=\" \"){switch(s){case S_TAG:el.setTagName(source.slice(start,p));s=S_TAG_SPACE;break;case S_ATTR:attrName=source.slice(start,p);s=S_ATTR_SPACE;break;case S_ATTR_NOQUOT_VALUE:var value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value,start);case S_ATTR_END:s=S_TAG_SPACE;break}}else{switch(s){case S_ATTR_SPACE:var tagName=el.tagName;if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!attrName.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')}el.add(attrName,attrName,start);start=p;s=S_ATTR;break;case S_ATTR_END:errorHandler.warning('attribute space is required\"'+attrName+'\"!!');case S_TAG_SPACE:s=S_ATTR;start=p;break;case S_EQ:s=S_ATTR_NOQUOT_VALUE;start=p;break;case S_TAG_CLOSE:throw new Error(\"elements closed character '/' and '>' must be connected to\")}}}p++}}function appendElement(el,domBuilder,currentNSMap){var tagName=el.tagName;var localNSMap=null;var i=el.length;while(i--){var a=el[i];var qName=a.qName;var value=a.value;var nsp=qName.indexOf(\":\");if(nsp>0){var prefix=a.prefix=qName.slice(0,nsp);var localName=qName.slice(nsp+1);var nsPrefix=prefix===\"xmlns\"&&localName}else{localName=qName;prefix=null;nsPrefix=qName===\"xmlns\"&&\"\"}a.localName=localName;if(nsPrefix!==false){if(localNSMap==null){localNSMap={};_copy(currentNSMap,currentNSMap={})}currentNSMap[nsPrefix]=localNSMap[nsPrefix]=value;a.uri=\"http://www.w3.org/2000/xmlns/\";domBuilder.startPrefixMapping(nsPrefix,value)}}var i=el.length;while(i--){a=el[i];var prefix=a.prefix;if(prefix){if(prefix===\"xml\"){a.uri=\"http://www.w3.org/XML/1998/namespace\"}if(prefix!==\"xmlns\"){a.uri=currentNSMap[prefix||\"\"]}}}var nsp=tagName.indexOf(\":\");if(nsp>0){prefix=el.prefix=tagName.slice(0,nsp);localName=el.localName=tagName.slice(nsp+1)}else{prefix=null;localName=el.localName=tagName}var ns=el.uri=currentNSMap[prefix||\"\"];domBuilder.startElement(ns,localName,tagName,el);if(el.closed){domBuilder.endElement(ns,localName,tagName);if(localNSMap){for(prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}}else{el.currentNSMap=currentNSMap;el.localNSMap=localNSMap;return true}}function parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){if(/^(?:script|textarea)$/i.test(tagName)){var elEndStart=source.indexOf(\"</\"+tagName+\">\",elStartEnd);var text=source.substring(elStartEnd+1,elEndStart);if(/[&<]/.test(text)){if(/^script$/i.test(tagName)){domBuilder.characters(text,0,text.length);return elEndStart}text=text.replace(/&#?\\w+;/g,entityReplacer);domBuilder.characters(text,0,text.length);return elEndStart}}return elStartEnd+1}function fixSelfClosed(source,elStartEnd,tagName,closeMap){var pos=closeMap[tagName];if(pos==null){pos=source.lastIndexOf(\"</\"+tagName+\">\");if(pos<elStartEnd){pos=source.lastIndexOf(\"</\"+tagName)}closeMap[tagName]=pos}return pos<elStartEnd}function _copy(source,target){for(var n in source){target[n]=source[n]}}function parseDCC(source,start,domBuilder,errorHandler){var next=source.charAt(start+2);switch(next){case\"-\":if(source.charAt(start+3)===\"-\"){var end=source.indexOf(\"--\\x3e\",start+4);if(end>start){domBuilder.comment(source,start+4,end-start-4);return end+3}else{errorHandler.error(\"Unclosed comment\");return-1}}else{return-1}default:if(source.substr(start+3,6)==\"CDATA[\"){var end=source.indexOf(\"]]>\",start+9);domBuilder.startCDATA();domBuilder.characters(source,start+9,end-start-9);domBuilder.endCDATA();return end+3}var matchs=split(source,start);var len=matchs.length;if(len>1&&/!doctype/i.test(matchs[0][0])){var name=matchs[1][0];var pubid=len>3&&/^public$/i.test(matchs[2][0])&&matchs[3][0];var sysid=len>4&&matchs[4][0];var lastMatch=matchs[len-1];domBuilder.startDTD(name,pubid&&pubid.replace(/^(['\"])(.*?)\\1$/,\"$2\"),sysid&&sysid.replace(/^(['\"])(.*?)\\1$/,\"$2\"));domBuilder.endDTD();return lastMatch.index+lastMatch[0].length}}return-1}function parseInstruction(source,start,domBuilder){var end=source.indexOf(\"?>\",start);if(end){var match=source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);if(match){var len=match[0].length;domBuilder.processingInstruction(match[1],match[2]);return end+2}else{return-1}}return-1}function ElementAttributes(source){}ElementAttributes.prototype={setTagName:function(tagName){if(!tagNamePattern.test(tagName)){throw new Error(\"invalid tagName:\"+tagName)}this.tagName=tagName},add:function(qName,value,offset){if(!tagNamePattern.test(qName)){throw new Error(\"invalid attribute:\"+qName)}this[this.length++]={qName:qName,value:value,offset:offset}},length:0,getLocalName:function(i){return this[i].localName},getLocator:function(i){return this[i].locator},getQName:function(i){return this[i].qName},getURI:function(i){return this[i].uri},getValue:function(i){return this[i].value}};function _set_proto_(thiz,parent){thiz.__proto__=parent;return thiz}if(!(_set_proto_({},_set_proto_.prototype)instanceof _set_proto_)){_set_proto_=function(thiz,parent){function p(){}p.prototype=parent;p=new p;for(parent in thiz){p[parent]=thiz[parent]}return p}}function split(source,start){var match;var buf=[];var reg=/'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;reg.lastIndex=start;reg.exec(source);while(match=reg.exec(source)){buf.push(match);if(match[1])return buf}}exports.XMLReader=XMLReader},{}],\"/src/js/docxtemplater.js\":[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");DocUtils.traits=require(\"./traits\");DocUtils.moduleWrapper=require(\"./module-wrapper\");var wrapper=DocUtils.moduleWrapper;var Docxtemplater=function(){function Docxtemplater(){_classCallCheck(this,Docxtemplater);if(arguments.length>0){throw new Error(\"The constructor with parameters have been removed in docxtemplater 3.0, please check the upgrade guide.\")}this.compiled={};this.modules=[];this.setOptions({})}_createClass(Docxtemplater,[{key:\"attachModule\",value:function attachModule(module){this.modules.push(wrapper(module));return this}},{key:\"setOptions\",value:function setOptions(options){var _this=this;this.options=options;Object.keys(DocUtils.defaults).forEach(function(key){var defaultValue=DocUtils.defaults[key];_this[key]=_this.options[key]!=null?_this.options[key]:defaultValue});if(this.zip){this.updateFileTypeConfig()}return this}},{key:\"loadZip\",value:function loadZip(zip){if(zip.loadAsync){throw new Error(\"Docxtemplater doesn't handle JSZip version >=3, see changelog\")}this.zip=zip;this.updateFileTypeConfig();return this}},{key:\"compileFile\",value:function compileFile(fileName){var currentFile=this.createTemplateClass(fileName);currentFile.parse();this.compiled[fileName]=currentFile}},{key:\"compile\",value:function compile(){this.templatedFiles=this.fileTypeConfig.getTemplatedFiles(this.zip);return this}},{key:\"updateFileTypeConfig\",value:function updateFileTypeConfig(){this.fileType=this.zip.files[\"word/document.xml\"]?\"docx\":\"pptx\";this.fileTypeConfig=this.options.fileTypeConfig||Docxtemplater.FileTypeConfig[this.fileType];return this}},{key:\"render\",value:function render(){var _this2=this;this.options.xmlFileNames=[];this.modules=this.fileTypeConfig.baseModules.map(function(moduleFunction){return moduleFunction()}).concat(this.modules);this.options=this.modules.reduce(function(options,module){return module.optionsTransformer(options,_this2)},this.options);this.xmlDocuments=this.options.xmlFileNames.reduce(function(xmlDocuments,fileName){var content=_this2.zip.files[fileName].asText();xmlDocuments[fileName]=DocUtils.str2xml(content);return xmlDocuments},{});this.modules.forEach(function(module){module.set({zip:_this2.zip,xmlDocuments:_this2.xmlDocuments,data:_this2.data})});this.compile();this.modules.forEach(function(module){module.set({compiled:_this2.compiled})});this.templatedFiles.forEach(function(fileName){if(_this2.zip.files[fileName]!=null){_this2.compileFile(fileName)}});this.mapper=this.modules.reduce(function(value,module){return module.getRenderedMap(value)},{});Object.keys(this.mapper).forEach(function(to){var mapped=_this2.mapper[to];var from=mapped.from;var currentFile=_this2.compiled[from];currentFile.setTags(mapped.data);currentFile.render(to);_this2.zip.file(to,currentFile.content)});Object.keys(this.xmlDocuments).forEach(function(fileName){_this2.zip.remove(fileName);var content=DocUtils.xml2str(_this2.xmlDocuments[fileName]);return _this2.zip.file(fileName,content,{})});return this}},{key:\"setData\",value:function setData(data){this.data=data;return this}},{key:\"getZip\",value:function getZip(){return this.zip}},{key:\"createTemplateClass\",value:function createTemplateClass(path){var usedData=this.zip.files[path].asText();return this.createTemplateClassFromContent(usedData,path)}},{key:\"createTemplateClassFromContent\",value:function createTemplateClassFromContent(content,filePath){var _this3=this;var xmltOptions={filePath:filePath};Object.keys(DocUtils.defaults).forEach(function(key){xmltOptions[key]=_this3[key]});xmltOptions.fileTypeConfig=this.fileTypeConfig;xmltOptions.modules=this.modules;return new Docxtemplater.XmlTemplater(content,xmltOptions)}},{key:\"getFullText\",value:function getFullText(path){return this.createTemplateClass(path||this.fileTypeConfig.textPath).getFullText()}},{key:\"getTemplatedFiles\",value:function getTemplatedFiles(){this.compile();return this.templatedFiles}}]);return Docxtemplater}();Docxtemplater.DocUtils=require(\"./doc-utils\");Docxtemplater.Errors=require(\"./errors\");Docxtemplater.XmlTemplater=require(\"./xml-templater\");Docxtemplater.FileTypeConfig=require(\"./file-type-config\");Docxtemplater.XmlMatcher=require(\"./xml-matcher\");module.exports=Docxtemplater},{\"./doc-utils\":1,\"./errors\":2,\"./file-type-config\":3,\"./module-wrapper\":7,\"./traits\":16,\"./xml-matcher\":17,\"./xml-templater\":18}]},{},[])(\"/src/js/docxtemplater.js\")});","/*!\n\nJSZip - A Javascript class for generating and reading zip files\n<http://stuartk.com/jszip>\n\n(c) 2009-2014 Stuart Knightley <stuart [at] stuartk.com>\nDual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip/master/LICENSE.markdown.\n\nJSZip uses the library pako released under the MIT license :\nhttps://github.com/nodeca/pako/blob/master/LICENSE\n*/\n!function(a){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=a();else if(\"function\"==typeof define&&define.amd)define([],a);else{var b;b=\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:this,b.JSZip=a()}}(function(){return function a(b,c,d){function e(g,h){if(!c[g]){if(!b[g]){var i=\"function\"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);var j=new Error(\"Cannot find module '\"+g+\"'\");throw j.code=\"MODULE_NOT_FOUND\",j}var k=c[g]={exports:{}};b[g][0].call(k.exports,function(a){var c=b[g][1][a];return e(c?c:a)},k,k.exports,a,b,c,d)}return c[g].exports}for(var f=\"function\"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}({1:[function(a,b,c){\"use strict\";function d(a){if(a){this.data=a,this.length=this.data.length,this.index=0,this.zero=0;for(var b=0;b<this.data.length;b++)a[b]=255&a[b]}}var e=a(\"./dataReader\");d.prototype=new e,d.prototype.byteAt=function(a){return this.data[this.zero+a]},d.prototype.lastIndexOfSignature=function(a){for(var b=a.charCodeAt(0),c=a.charCodeAt(1),d=a.charCodeAt(2),e=a.charCodeAt(3),f=this.length-4;f>=0;--f)if(this.data[f]===b&&this.data[f+1]===c&&this.data[f+2]===d&&this.data[f+3]===e)return f-this.zero;return-1},d.prototype.readData=function(a){if(this.checkOffset(a),0===a)return[];var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./dataReader\":6}],2:[function(a,b,c){\"use strict\";var d=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";c.encode=function(a,b){for(var c,e,f,g,h,i,j,k=\"\",l=0;l<a.length;)c=a.charCodeAt(l++),e=a.charCodeAt(l++),f=a.charCodeAt(l++),g=c>>2,h=(3&c)<<4|e>>4,i=(15&e)<<2|f>>6,j=63&f,isNaN(e)?i=j=64:isNaN(f)&&(j=64),k=k+d.charAt(g)+d.charAt(h)+d.charAt(i)+d.charAt(j);return k},c.decode=function(a,b){var c,e,f,g,h,i,j,k=\"\",l=0;for(a=a.replace(/[^A-Za-z0-9\\+\\/\\=]/g,\"\");l<a.length;)g=d.indexOf(a.charAt(l++)),h=d.indexOf(a.charAt(l++)),i=d.indexOf(a.charAt(l++)),j=d.indexOf(a.charAt(l++)),c=g<<2|h>>4,e=(15&h)<<4|i>>2,f=(3&i)<<6|j,k+=String.fromCharCode(c),64!=i&&(k+=String.fromCharCode(e)),64!=j&&(k+=String.fromCharCode(f));return k}},{}],3:[function(a,b,c){\"use strict\";function d(){this.compressedSize=0,this.uncompressedSize=0,this.crc32=0,this.compressionMethod=null,this.compressedContent=null}d.prototype={getContent:function(){return null},getCompressedContent:function(){return null}},b.exports=d},{}],4:[function(a,b,c){\"use strict\";c.STORE={magic:\"\\0\\0\",compress:function(a,b){return a},uncompress:function(a){return a},compressInputType:null,uncompressInputType:null},c.DEFLATE=a(\"./flate\")},{\"./flate\":9}],5:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=[0,1996959894,3993919788,2567524794,124634137,1886057615,3915621685,2657392035,249268274,2044508324,3772115230,2547177864,162941995,2125561021,3887607047,2428444049,498536548,1789927666,4089016648,2227061214,450548861,1843258603,4107580753,2211677639,325883990,1684777152,4251122042,2321926636,335633487,1661365465,4195302755,2366115317,997073096,1281953886,3579855332,2724688242,1006888145,1258607687,3524101629,2768942443,901097722,1119000684,3686517206,2898065728,853044451,1172266101,3705015759,2882616665,651767980,1373503546,3369554304,3218104598,565507253,1454621731,3485111705,3099436303,671266974,1594198024,3322730930,2970347812,795835527,1483230225,3244367275,3060149565,1994146192,31158534,2563907772,4023717930,1907459465,112637215,2680153253,3904427059,2013776290,251722036,2517215374,3775830040,2137656763,141376813,2439277719,3865271297,1802195444,476864866,2238001368,4066508878,1812370925,453092731,2181625025,4111451223,1706088902,314042704,2344532202,4240017532,1658658271,366619977,2362670323,4224994405,1303535960,984961486,2747007092,3569037538,1256170817,1037604311,2765210733,3554079995,1131014506,879679996,2909243462,3663771856,1141124467,855842277,2852801631,3708648649,1342533948,654459306,3188396048,3373015174,1466479909,544179635,3110523913,3462522015,1591671054,702138776,2966460450,3352799412,1504918807,783551873,3082640443,3233442989,3988292384,2596254646,62317068,1957810842,3939845945,2647816111,81470997,1943803523,3814918930,2489596804,225274430,2053790376,3826175755,2466906013,167816743,2097651377,4027552580,2265490386,503444072,1762050814,4150417245,2154129355,426522225,1852507879,4275313526,2312317920,282753626,1742555852,4189708143,2394877945,397917763,1622183637,3604390888,2714866558,953729732,1340076626,3518719985,2797360999,1068828381,1219638859,3624741850,2936675148,906185462,1090812512,3747672003,2825379669,829329135,1181335161,3412177804,3160834842,628085408,1382605366,3423369109,3138078467,570562233,1426400815,3317316542,2998733608,733239954,1555261956,3268935591,3050360625,752459403,1541320221,2607071920,3965973030,1969922972,40735498,2617837225,3943577151,1913087877,83908371,2512341634,3803740692,2075208622,213261112,2463272603,3855990285,2094854071,198958881,2262029012,4057260610,1759359992,534414190,2176718541,4139329115,1873836001,414664567,2282248934,4279200368,1711684554,285281116,2405801727,4167216745,1634467795,376229701,2685067896,3608007406,1308918612,956543938,2808555105,3495958263,1231636301,1047427035,2932959818,3654703836,1088359270,936918e3,2847714899,3736837829,1202900863,817233897,3183342108,3401237130,1404277552,615818150,3134207493,3453421203,1423857449,601450431,3009837614,3294710456,1567103746,711928724,3020668471,3272380065,1510334235,755167117];b.exports=function(a,b){if(\"undefined\"==typeof a||!a.length)return 0;var c=\"string\"!==d.getTypeOf(a);\"undefined\"==typeof b&&(b=0);var f=0,g=0,h=0;b^=-1;for(var i=0,j=a.length;i<j;i++)h=c?a[i]:a.charCodeAt(i),g=255&(b^h),f=e[g],b=b>>>8^f;return b^-1}},{\"./utils\":22}],6:[function(a,b,c){\"use strict\";function d(a){this.data=null,this.length=0,this.index=0,this.zero=0}var e=a(\"./utils\");d.prototype={checkOffset:function(a){this.checkIndex(this.index+a)},checkIndex:function(a){if(this.length<this.zero+a||a<0)throw new Error(\"End of data reached (data length = \"+this.length+\", asked index = \"+a+\"). Corrupted zip ?\")},setIndex:function(a){this.checkIndex(a),this.index=a},skip:function(a){this.setIndex(this.index+a)},byteAt:function(a){},readInt:function(a){var b,c=0;for(this.checkOffset(a),b=this.index+a-1;b>=this.index;b--)c=(c<<8)+this.byteAt(b);return this.index+=a,c},readString:function(a){return e.transformTo(\"string\",this.readData(a))},readData:function(a){},lastIndexOfSignature:function(a){},readDate:function(){var a=this.readInt(4);return new Date((a>>25&127)+1980,(a>>21&15)-1,a>>16&31,a>>11&31,a>>5&63,(31&a)<<1)}},b.exports=d},{\"./utils\":22}],7:[function(a,b,c){\"use strict\";c.base64=!1,c.binary=!1,c.dir=!1,c.createFolders=!1,c.date=null,c.compression=null,c.compressionOptions=null,c.comment=null,c.unixPermissions=null,c.dosPermissions=null},{}],8:[function(a,b,c){\"use strict\";var d=a(\"./utils\");c.string2binary=function(a){return d.string2binary(a)},c.string2Uint8Array=function(a){return d.transformTo(\"uint8array\",a)},c.uint8Array2String=function(a){return d.transformTo(\"string\",a)},c.string2Blob=function(a){var b=d.transformTo(\"arraybuffer\",a);return d.arrayBuffer2Blob(b)},c.arrayBuffer2Blob=function(a){return d.arrayBuffer2Blob(a)},c.transformTo=function(a,b){return d.transformTo(a,b)},c.getTypeOf=function(a){return d.getTypeOf(a)},c.checkSupport=function(a){return d.checkSupport(a)},c.MAX_VALUE_16BITS=d.MAX_VALUE_16BITS,c.MAX_VALUE_32BITS=d.MAX_VALUE_32BITS,c.pretty=function(a){return d.pretty(a)},c.findCompression=function(a){return d.findCompression(a)},c.isRegExp=function(a){return d.isRegExp(a)}},{\"./utils\":22}],9:[function(a,b,c){\"use strict\";var d=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Uint32Array,e=a(\"pako\");c.uncompressInputType=d?\"uint8array\":\"array\",c.compressInputType=d?\"uint8array\":\"array\",c.magic=\"\\b\\0\",c.compress=function(a,b){return e.deflateRaw(a,{level:b.level||-1})},c.uncompress=function(a){return e.inflateRaw(a)}},{pako:25}],10:[function(a,b,c){\"use strict\";function d(a,b){return this instanceof d?(this.files={},this.comment=null,this.root=\"\",a&&this.load(a,b),void(this.clone=function(){var a=new d;for(var b in this)\"function\"!=typeof this[b]&&(a[b]=this[b]);return a})):new d(a,b)}var e=a(\"./base64\");d.prototype=a(\"./object\"),d.prototype.load=a(\"./load\"),d.support=a(\"./support\"),d.defaults=a(\"./defaults\"),d.utils=a(\"./deprecatedPublicUtils\"),d.base64={encode:function(a){return e.encode(a)},decode:function(a){return e.decode(a)}},d.compressions=a(\"./compressions\"),b.exports=d},{\"./base64\":2,\"./compressions\":4,\"./defaults\":7,\"./deprecatedPublicUtils\":8,\"./load\":11,\"./object\":14,\"./support\":18}],11:[function(a,b,c){\"use strict\";var d=a(\"./base64\"),e=a(\"./utf8\"),f=a(\"./utils\"),g=a(\"./zipEntries\");b.exports=function(a,b){var c,h,i,j;for(b=f.extend(b||{},{base64:!1,checkCRC32:!1,optimizedBinaryString:!1,createFolders:!1,decodeFileName:e.utf8decode}),b.base64&&(a=d.decode(a)),h=new g(a,b),c=h.files,i=0;i<c.length;i++)j=c[i],this.file(j.fileNameStr,j.decompressed,{binary:!0,optimizedBinaryString:!0,date:j.date,dir:j.dir,comment:j.fileCommentStr.length?j.fileCommentStr:null,unixPermissions:j.unixPermissions,dosPermissions:j.dosPermissions,createFolders:b.createFolders});return h.zipComment.length&&(this.comment=h.zipComment),this}},{\"./base64\":2,\"./utf8\":21,\"./utils\":22,\"./zipEntries\":23}],12:[function(a,b,c){(function(a){\"use strict\";b.exports=function(b,c){return new a(b,c)},b.exports.test=function(b){return a.isBuffer(b)}}).call(this,\"undefined\"!=typeof Buffer?Buffer:void 0)},{}],13:[function(a,b,c){\"use strict\";function d(a){this.data=a,this.length=this.data.length,this.index=0,this.zero=0}var e=a(\"./uint8ArrayReader\");d.prototype=new e,d.prototype.readData=function(a){this.checkOffset(a);var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./uint8ArrayReader\":19}],14:[function(a,b,c){\"use strict\";var d=a(\"./support\"),e=a(\"./utils\"),f=a(\"./crc32\"),g=a(\"./signature\"),h=a(\"./defaults\"),i=a(\"./base64\"),j=a(\"./compressions\"),k=a(\"./compressedObject\"),l=a(\"./nodeBuffer\"),m=a(\"./utf8\"),n=a(\"./stringWriter\"),o=a(\"./uint8ArrayWriter\"),p=function(a){if(a._data instanceof k&&(a._data=a._data.getContent(),a.options.binary=!0,a.options.base64=!1,\"uint8array\"===e.getTypeOf(a._data))){var b=a._data;a._data=new Uint8Array(b.length),0!==b.length&&a._data.set(b,0)}return a._data},q=function(a){var b=p(a),c=e.getTypeOf(b);return\"string\"===c?!a.options.binary&&d.nodebuffer?l(b,\"utf-8\"):a.asBinary():b},r=function(a){var b=p(this);return null===b||\"undefined\"==typeof b?\"\":(this.options.base64&&(b=i.decode(b)),b=a&&this.options.binary?D.utf8decode(b):e.transformTo(\"string\",b),a||this.options.binary||(b=e.transformTo(\"string\",D.utf8encode(b))),b)},s=function(a,b,c){this.name=a,this.dir=c.dir,this.date=c.date,this.comment=c.comment,this.unixPermissions=c.unixPermissions,this.dosPermissions=c.dosPermissions,this._data=b,this.options=c,this._initialMetadata={dir:c.dir,date:c.date}};s.prototype={asText:function(){return r.call(this,!0)},asBinary:function(){return r.call(this,!1)},asNodeBuffer:function(){var a=q(this);return e.transformTo(\"nodebuffer\",a)},asUint8Array:function(){var a=q(this);return e.transformTo(\"uint8array\",a)},asArrayBuffer:function(){return this.asUint8Array().buffer}};var t=function(a,b){var c,d=\"\";for(c=0;c<b;c++)d+=String.fromCharCode(255&a),a>>>=8;return d},u=function(a){return a=a||{},a.base64!==!0||null!==a.binary&&void 0!==a.binary||(a.binary=!0),a=e.extend(a,h),a.date=a.date||new Date,null!==a.compression&&(a.compression=a.compression.toUpperCase()),a},v=function(a,b,c){var d,f=e.getTypeOf(b);if(c=u(c),\"string\"==typeof c.unixPermissions&&(c.unixPermissions=parseInt(c.unixPermissions,8)),c.unixPermissions&&16384&c.unixPermissions&&(c.dir=!0),c.dosPermissions&&16&c.dosPermissions&&(c.dir=!0),c.dir&&(a=x(a)),c.createFolders&&(d=w(a))&&y.call(this,d,!0),c.dir||null===b||\"undefined\"==typeof b)c.base64=!1,c.binary=!1,b=null,f=null;else if(\"string\"===f)c.binary&&!c.base64&&c.optimizedBinaryString!==!0&&(b=e.string2binary(b));else{if(c.base64=!1,c.binary=!0,!(f||b instanceof k))throw new Error(\"The data of '\"+a+\"' is in an unsupported format !\");\"arraybuffer\"===f&&(b=e.transformTo(\"uint8array\",b))}var g=new s(a,b,c);return this.files[a]=g,g},w=function(a){\"/\"==a.slice(-1)&&(a=a.substring(0,a.length-1));var b=a.lastIndexOf(\"/\");return b>0?a.substring(0,b):\"\"},x=function(a){return\"/\"!=a.slice(-1)&&(a+=\"/\"),a},y=function(a,b){return b=\"undefined\"!=typeof b&&b,a=x(a),this.files[a]||v.call(this,a,null,{dir:!0,createFolders:b}),this.files[a]},z=function(a,b,c){var d,g=new k;return a._data instanceof k?(g.uncompressedSize=a._data.uncompressedSize,g.crc32=a._data.crc32,0===g.uncompressedSize||a.dir?(b=j.STORE,g.compressedContent=\"\",g.crc32=0):a._data.compressionMethod===b.magic?g.compressedContent=a._data.getCompressedContent():(d=a._data.getContent(),g.compressedContent=b.compress(e.transformTo(b.compressInputType,d),c))):(d=q(a),d&&0!==d.length&&!a.dir||(b=j.STORE,d=\"\"),g.uncompressedSize=d.length,g.crc32=f(d),g.compressedContent=b.compress(e.transformTo(b.compressInputType,d),c)),g.compressedSize=g.compressedContent.length,g.compressionMethod=b.magic,g},A=function(a,b){var c=a;return a||(c=b?16893:33204),(65535&c)<<16},B=function(a,b){return 63&(a||0)},C=function(a,b,c,d,h,i){var j,k,l,n,o=(c.compressedContent,i!==m.utf8encode),p=e.transformTo(\"string\",i(b.name)),q=e.transformTo(\"string\",m.utf8encode(b.name)),r=b.comment||\"\",s=e.transformTo(\"string\",i(r)),u=e.transformTo(\"string\",m.utf8encode(r)),v=q.length!==b.name.length,w=u.length!==r.length,x=b.options,y=\"\",z=\"\",C=\"\";l=b._initialMetadata.dir!==b.dir?b.dir:x.dir,n=b._initialMetadata.date!==b.date?b.date:x.date;var D=0,E=0;l&&(D|=16),\"UNIX\"===h?(E=798,D|=A(b.unixPermissions,l)):(E=20,D|=B(b.dosPermissions,l)),j=n.getHours(),j<<=6,j|=n.getMinutes(),j<<=5,j|=n.getSeconds()/2,k=n.getFullYear()-1980,k<<=4,k|=n.getMonth()+1,k<<=5,k|=n.getDate(),v&&(z=t(1,1)+t(f(p),4)+q,y+=\"up\"+t(z.length,2)+z),w&&(C=t(1,1)+t(this.crc32(s),4)+u,y+=\"uc\"+t(C.length,2)+C);var F=\"\";F+=\"\\n\\0\",F+=o||!v&&!w?\"\\0\\0\":\"\\0\\b\",F+=c.compressionMethod,F+=t(j,2),F+=t(k,2),F+=t(c.crc32,4),F+=t(c.compressedSize,4),F+=t(c.uncompressedSize,4),F+=t(p.length,2),F+=t(y.length,2);var G=g.LOCAL_FILE_HEADER+F+p+y,H=g.CENTRAL_FILE_HEADER+t(E,2)+F+t(s.length,2)+\"\\0\\0\\0\\0\"+t(D,4)+t(d,4)+p+y+s;return{fileRecord:G,dirRecord:H,compressedObject:c}},D={load:function(a,b){throw new Error(\"Load method is not defined. Is the file jszip-load.js included ?\")},filter:function(a){var b,c,d,f,g=[];for(b in this.files)this.files.hasOwnProperty(b)&&(d=this.files[b],f=new s(d.name,d._data,e.extend(d.options)),c=b.slice(this.root.length,b.length),b.slice(0,this.root.length)===this.root&&a(c,f)&&g.push(f));return g},file:function(a,b,c){if(1===arguments.length){if(e.isRegExp(a)){var d=a;return this.filter(function(a,b){return!b.dir&&d.test(a)})}return this.filter(function(b,c){return!c.dir&&b===a})[0]||null}return a=this.root+a,v.call(this,a,b,c),this},folder:function(a){if(!a)return this;if(e.isRegExp(a))return this.filter(function(b,c){return c.dir&&a.test(b)});var b=this.root+a,c=y.call(this,b),d=this.clone();return d.root=c.name,d},remove:function(a){a=this.root+a;var b=this.files[a];if(b||(\"/\"!=a.slice(-1)&&(a+=\"/\"),b=this.files[a]),b&&!b.dir)delete this.files[a];else for(var c=this.filter(function(b,c){return c.name.slice(0,a.length)===a}),d=0;d<c.length;d++)delete this.files[c[d].name];return this},generate:function(a){a=e.extend(a||{},{base64:!0,compression:\"STORE\",compressionOptions:null,type:\"base64\",platform:\"DOS\",comment:null,mimeType:\"application/zip\",encodeFileName:m.utf8encode}),e.checkSupport(a.type),\"darwin\"!==a.platform&&\"freebsd\"!==a.platform&&\"linux\"!==a.platform&&\"sunos\"!==a.platform||(a.platform=\"UNIX\"),\"win32\"===a.platform&&(a.platform=\"DOS\");var b,c,d=[],f=0,h=0,k=e.transformTo(\"string\",a.encodeFileName(a.comment||this.comment||\"\"));for(var l in this.files)if(this.files.hasOwnProperty(l)){var p=this.files[l],q=p.options.compression||a.compression.toUpperCase(),r=j[q];if(!r)throw new Error(q+\" is not a valid compression method !\");var s=p.options.compressionOptions||a.compressionOptions||{},u=z.call(this,p,r,s),v=C.call(this,l,p,u,f,a.platform,a.encodeFileName);f+=v.fileRecord.length+u.compressedSize,h+=v.dirRecord.length,d.push(v)}var w=\"\";w=g.CENTRAL_DIRECTORY_END+\"\\0\\0\\0\\0\"+t(d.length,2)+t(d.length,2)+t(h,4)+t(f,4)+t(k.length,2)+k;var x=a.type.toLowerCase();for(b=\"uint8array\"===x||\"arraybuffer\"===x||\"blob\"===x||\"nodebuffer\"===x?new o(f+h+w.length):new n(f+h+w.length),c=0;c<d.length;c++)b.append(d[c].fileRecord),b.append(d[c].compressedObject.compressedContent);for(c=0;c<d.length;c++)b.append(d[c].dirRecord);b.append(w);var y=b.finalize();switch(a.type.toLowerCase()){case\"uint8array\":case\"arraybuffer\":case\"nodebuffer\":return e.transformTo(a.type.toLowerCase(),y);case\"blob\":return e.arrayBuffer2Blob(e.transformTo(\"arraybuffer\",y),a.mimeType);case\"base64\":return a.base64?i.encode(y):y;default:return y}},crc32:function(a,b){return f(a,b)},utf8encode:function(a){return e.transformTo(\"string\",m.utf8encode(a))},utf8decode:function(a){return m.utf8decode(a)}};b.exports=D},{\"./base64\":2,\"./compressedObject\":3,\"./compressions\":4,\"./crc32\":5,\"./defaults\":7,\"./nodeBuffer\":12,\"./signature\":15,\"./stringWriter\":17,\"./support\":18,\"./uint8ArrayWriter\":20,\"./utf8\":21,\"./utils\":22}],15:[function(a,b,c){\"use strict\";c.LOCAL_FILE_HEADER=\"PK\u0003\u0004\",c.CENTRAL_FILE_HEADER=\"PK\u0001\u0002\",c.CENTRAL_DIRECTORY_END=\"PK\u0005\u0006\",c.ZIP64_CENTRAL_DIRECTORY_LOCATOR=\"PK\u0006\u0007\",c.ZIP64_CENTRAL_DIRECTORY_END=\"PK\u0006\u0006\",c.DATA_DESCRIPTOR=\"PK\u0007\\b\"},{}],16:[function(a,b,c){\"use strict\";function d(a,b){this.data=a,b||(this.data=f.string2binary(this.data)),this.length=this.data.length,this.index=0,this.zero=0}var e=a(\"./dataReader\"),f=a(\"./utils\");d.prototype=new e,d.prototype.byteAt=function(a){return this.data.charCodeAt(this.zero+a)},d.prototype.lastIndexOfSignature=function(a){return this.data.lastIndexOf(a)-this.zero},d.prototype.readData=function(a){this.checkOffset(a);var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./dataReader\":6,\"./utils\":22}],17:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=function(){this.data=[]};e.prototype={append:function(a){a=d.transformTo(\"string\",a),this.data.push(a)},finalize:function(){return this.data.join(\"\")}},b.exports=e},{\"./utils\":22}],18:[function(a,b,c){(function(a){\"use strict\";if(c.base64=!0,c.array=!0,c.string=!0,c.arraybuffer=\"undefined\"!=typeof ArrayBuffer&&\"undefined\"!=typeof Uint8Array,c.nodebuffer=\"undefined\"!=typeof a,c.uint8array=\"undefined\"!=typeof Uint8Array,\"undefined\"==typeof ArrayBuffer)c.blob=!1;else{var b=new ArrayBuffer(0);try{c.blob=0===new Blob([b],{type:\"application/zip\"}).size}catch(d){try{var e=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,f=new e;f.append(b),c.blob=0===f.getBlob(\"application/zip\").size}catch(d){c.blob=!1}}}}).call(this,\"undefined\"!=typeof Buffer?Buffer:void 0)},{}],19:[function(a,b,c){\"use strict\";function d(a){a&&(this.data=a,this.length=this.data.length,this.index=0,this.zero=0)}var e=a(\"./arrayReader\");d.prototype=new e,d.prototype.readData=function(a){if(this.checkOffset(a),0===a)return new Uint8Array(0);var b=this.data.subarray(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./arrayReader\":1}],20:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=function(a){this.data=new Uint8Array(a),this.index=0};e.prototype={append:function(a){0!==a.length&&(a=d.transformTo(\"uint8array\",a),this.data.set(a,this.index),this.index+=a.length)},finalize:function(){return this.data}},b.exports=e},{\"./utils\":22}],21:[function(a,b,c){\"use strict\";for(var d=a(\"./utils\"),e=a(\"./support\"),f=a(\"./nodeBuffer\"),g=new Array(256),h=0;h<256;h++)g[h]=h>=252?6:h>=248?5:h>=240?4:h>=224?3:h>=192?2:1;g[254]=g[254]=1;var i=function(a){var b,c,d,f,g,h=a.length,i=0;for(f=0;f<h;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),i+=c<128?1:c<2048?2:c<65536?3:4;for(b=e.uint8array?new Uint8Array(i):new Array(i),g=0,f=0;g<i;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),c<128?b[g++]=c:c<2048?(b[g++]=192|c>>>6,b[g++]=128|63&c):c<65536?(b[g++]=224|c>>>12,b[g++]=128|c>>>6&63,b[g++]=128|63&c):(b[g++]=240|c>>>18,b[g++]=128|c>>>12&63,b[g++]=128|c>>>6&63,b[g++]=128|63&c);return b},j=function(a,b){var c;for(b=b||a.length,b>a.length&&(b=a.length),c=b-1;c>=0&&128===(192&a[c]);)c--;return c<0?b:0===c?b:c+g[a[c]]>b?c:b},k=function(a){var b,c,e,f,h=a.length,i=new Array(2*h);for(c=0,b=0;b<h;)if(e=a[b++],e<128)i[c++]=e;else if(f=g[e],f>4)i[c++]=65533,b+=f-1;else{for(e&=2===f?31:3===f?15:7;f>1&&b<h;)e=e<<6|63&a[b++],f--;f>1?i[c++]=65533:e<65536?i[c++]=e:(e-=65536,i[c++]=55296|e>>10&1023,i[c++]=56320|1023&e)}return i.length!==c&&(i.subarray?i=i.subarray(0,c):i.length=c),d.applyFromCharCode(i)};c.utf8encode=function(a){return e.nodebuffer?f(a,\"utf-8\"):i(a)},c.utf8decode=function(a){if(e.nodebuffer)return d.transformTo(\"nodebuffer\",a).toString(\"utf-8\");a=d.transformTo(e.uint8array?\"uint8array\":\"array\",a);for(var b=[],c=0,f=a.length,g=65536;c<f;){var h=j(a,Math.min(c+g,f));e.uint8array?b.push(k(a.subarray(c,h))):b.push(k(a.slice(c,h))),c=h}return b.join(\"\")}},{\"./nodeBuffer\":12,\"./support\":18,\"./utils\":22}],22:[function(a,b,c){\"use strict\";function d(a){return a}function e(a,b){for(var c=0;c<a.length;++c)b[c]=255&a.charCodeAt(c);return b}function f(a){var b=65536,d=[],e=a.length,f=c.getTypeOf(a),g=0,h=!0;try{switch(f){case\"uint8array\":String.fromCharCode.apply(null,new Uint8Array(0));break;case\"nodebuffer\":String.fromCharCode.apply(null,j(0))}}catch(i){h=!1}if(!h){for(var k=\"\",l=0;l<a.length;l++)k+=String.fromCharCode(a[l]);return k}for(;g<e&&b>1;)try{\"array\"===f||\"nodebuffer\"===f?d.push(String.fromCharCode.apply(null,a.slice(g,Math.min(g+b,e)))):d.push(String.fromCharCode.apply(null,a.subarray(g,Math.min(g+b,e)))),g+=b}catch(i){b=Math.floor(b/2)}return d.join(\"\")}function g(a,b){for(var c=0;c<a.length;c++)b[c]=a[c];return b}var h=a(\"./support\"),i=a(\"./compressions\"),j=a(\"./nodeBuffer\");c.string2binary=function(a){for(var b=\"\",c=0;c<a.length;c++)b+=String.fromCharCode(255&a.charCodeAt(c));return b},c.arrayBuffer2Blob=function(a,b){c.checkSupport(\"blob\"),b=b||\"application/zip\";try{return new Blob([a],{type:b})}catch(d){try{var e=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,f=new e;return f.append(a),f.getBlob(b)}catch(d){throw new Error(\"Bug : can't construct the Blob.\")}}},c.applyFromCharCode=f;var k={};k.string={string:d,array:function(a){return e(a,new Array(a.length))},arraybuffer:function(a){return k.string.uint8array(a).buffer},uint8array:function(a){return e(a,new Uint8Array(a.length))},nodebuffer:function(a){return e(a,j(a.length))}},k.array={string:f,array:d,arraybuffer:function(a){return new Uint8Array(a).buffer},uint8array:function(a){return new Uint8Array(a)},nodebuffer:function(a){return j(a)}},k.arraybuffer={string:function(a){return f(new Uint8Array(a))},array:function(a){return g(new Uint8Array(a),new Array(a.byteLength))},arraybuffer:d,uint8array:function(a){return new Uint8Array(a)},nodebuffer:function(a){return j(new Uint8Array(a))}},k.uint8array={string:f,array:function(a){return g(a,new Array(a.length))},arraybuffer:function(a){return a.buffer},uint8array:d,nodebuffer:function(a){return j(a)}},k.nodebuffer={string:f,array:function(a){return g(a,new Array(a.length))},arraybuffer:function(a){return k.nodebuffer.uint8array(a).buffer},uint8array:function(a){return g(a,new Uint8Array(a.length))},nodebuffer:d},c.transformTo=function(a,b){if(b||(b=\"\"),!a)return b;c.checkSupport(a);var d=c.getTypeOf(b),e=k[d][a](b);return e},c.getTypeOf=function(a){return\"string\"==typeof a?\"string\":\"[object Array]\"===Object.prototype.toString.call(a)?\"array\":h.nodebuffer&&j.test(a)?\"nodebuffer\":h.uint8array&&a instanceof Uint8Array?\"uint8array\":h.arraybuffer&&a instanceof ArrayBuffer?\"arraybuffer\":void 0},c.checkSupport=function(a){var b=h[a.toLowerCase()];if(!b)throw new Error(a+\" is not supported by this browser\")},c.MAX_VALUE_16BITS=65535,c.MAX_VALUE_32BITS=-1,c.pretty=function(a){var b,c,d=\"\";for(c=0;c<(a||\"\").length;c++)b=a.charCodeAt(c),d+=\"\\\\x\"+(b<16?\"0\":\"\")+b.toString(16).toUpperCase();return d},c.findCompression=function(a){for(var b in i)if(i.hasOwnProperty(b)&&i[b].magic===a)return i[b];return null},c.isRegExp=function(a){return\"[object RegExp]\"===Object.prototype.toString.call(a)},c.extend=function(){var a,b,c={};for(a=0;a<arguments.length;a++)for(b in arguments[a])arguments[a].hasOwnProperty(b)&&\"undefined\"==typeof c[b]&&(c[b]=arguments[a][b]);return c}},{\"./compressions\":4,\"./nodeBuffer\":12,\"./support\":18}],23:[function(a,b,c){\"use strict\";function d(a,b){this.files=[],this.loadOptions=b,a&&this.load(a)}var e=a(\"./stringReader\"),f=a(\"./nodeBufferReader\"),g=a(\"./uint8ArrayReader\"),h=a(\"./arrayReader\"),i=a(\"./utils\"),j=a(\"./signature\"),k=a(\"./zipEntry\"),l=a(\"./support\");a(\"./object\");d.prototype={checkSignature:function(a){var b=this.reader.readString(4);if(b!==a)throw new Error(\"Corrupted zip or bug : unexpected signature (\"+i.pretty(b)+\", expected \"+i.pretty(a)+\")\")},isSignature:function(a,b){var c=this.reader.index;this.reader.setIndex(a);var d=this.reader.readString(4),e=d===b;return this.reader.setIndex(c),e},readBlockEndOfCentral:function(){this.diskNumber=this.reader.readInt(2),this.diskWithCentralDirStart=this.reader.readInt(2),this.centralDirRecordsOnThisDisk=this.reader.readInt(2),this.centralDirRecords=this.reader.readInt(2),this.centralDirSize=this.reader.readInt(4),this.centralDirOffset=this.reader.readInt(4),this.zipCommentLength=this.reader.readInt(2);var a=this.reader.readData(this.zipCommentLength),b=l.uint8array?\"uint8array\":\"array\",c=i.transformTo(b,a);this.zipComment=this.loadOptions.decodeFileName(c)},readBlockZip64EndOfCentral:function(){this.zip64EndOfCentralSize=this.reader.readInt(8),this.versionMadeBy=this.reader.readString(2),this.versionNeeded=this.reader.readInt(2),this.diskNumber=this.reader.readInt(4),this.diskWithCentralDirStart=this.reader.readInt(4),this.centralDirRecordsOnThisDisk=this.reader.readInt(8),this.centralDirRecords=this.reader.readInt(8),this.centralDirSize=this.reader.readInt(8),this.centralDirOffset=this.reader.readInt(8),this.zip64ExtensibleData={};for(var a,b,c,d=this.zip64EndOfCentralSize-44,e=0;e<d;)a=this.reader.readInt(2),b=this.reader.readInt(4),c=this.reader.readString(b),this.zip64ExtensibleData[a]={id:a,length:b,value:c}},readBlockZip64EndOfCentralLocator:function(){if(this.diskWithZip64CentralDirStart=this.reader.readInt(4),this.relativeOffsetEndOfZip64CentralDir=this.reader.readInt(8),this.disksCount=this.reader.readInt(4),this.disksCount>1)throw new Error(\"Multi-volumes zip are not supported\")},readLocalFiles:function(){var a,b;for(a=0;a<this.files.length;a++)b=this.files[a],this.reader.setIndex(b.localHeaderOffset),this.checkSignature(j.LOCAL_FILE_HEADER),b.readLocalPart(this.reader),b.handleUTF8(),b.processAttributes()},readCentralDir:function(){var a;for(this.reader.setIndex(this.centralDirOffset);this.reader.readString(4)===j.CENTRAL_FILE_HEADER;)a=new k({zip64:this.zip64},this.loadOptions),a.readCentralPart(this.reader),this.files.push(a);if(this.centralDirRecords!==this.files.length&&0!==this.centralDirRecords&&0===this.files.length)throw new Error(\"Corrupted zip or bug: expected \"+this.centralDirRecords+\" records in central dir, got \"+this.files.length)},readEndOfCentral:function(){var a=this.reader.lastIndexOfSignature(j.CENTRAL_DIRECTORY_END);if(a<0){var b=!this.isSignature(0,j.LOCAL_FILE_HEADER);throw b?new Error(\"Can't find end of central directory : is this a zip file ? If it is, see http://stuk.github.io/jszip/documentation/howto/read_zip.html\"):new Error(\"Corrupted zip : can't find end of central directory\")}this.reader.setIndex(a);var c=a;if(this.checkSignature(j.CENTRAL_DIRECTORY_END),this.readBlockEndOfCentral(),this.diskNumber===i.MAX_VALUE_16BITS||this.diskWithCentralDirStart===i.MAX_VALUE_16BITS||this.centralDirRecordsOnThisDisk===i.MAX_VALUE_16BITS||this.centralDirRecords===i.MAX_VALUE_16BITS||this.centralDirSize===i.MAX_VALUE_32BITS||this.centralDirOffset===i.MAX_VALUE_32BITS){if(this.zip64=!0,a=this.reader.lastIndexOfSignature(j.ZIP64_CENTRAL_DIRECTORY_LOCATOR),a<0)throw new Error(\"Corrupted zip : can't find the ZIP64 end of central directory locator\");if(this.reader.setIndex(a),this.checkSignature(j.ZIP64_CENTRAL_DIRECTORY_LOCATOR),this.readBlockZip64EndOfCentralLocator(),!this.isSignature(this.relativeOffsetEndOfZip64CentralDir,j.ZIP64_CENTRAL_DIRECTORY_END)&&(this.relativeOffsetEndOfZip64CentralDir=this.reader.lastIndexOfSignature(j.ZIP64_CENTRAL_DIRECTORY_END),this.relativeOffsetEndOfZip64CentralDir<0))throw new Error(\"Corrupted zip : can't find the ZIP64 end of central directory\");this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir),this.checkSignature(j.ZIP64_CENTRAL_DIRECTORY_END),this.readBlockZip64EndOfCentral()}var d=this.centralDirOffset+this.centralDirSize;this.zip64&&(d+=20,d+=12+this.zip64EndOfCentralSize);var e=c-d;if(e>0)this.isSignature(c,j.CENTRAL_FILE_HEADER)||(this.reader.zero=e);else if(e<0)throw new Error(\"Corrupted zip: missing \"+Math.abs(e)+\" bytes.\")},prepareReader:function(a){var b=i.getTypeOf(a);if(i.checkSupport(b),\"string\"!==b||l.uint8array)if(\"nodebuffer\"===b)this.reader=new f(a);else if(l.uint8array)this.reader=new g(i.transformTo(\"uint8array\",a));else{if(!l.array)throw new Error(\"Unexpected error: unsupported type '\"+b+\"'\");this.reader=new h(i.transformTo(\"array\",a))}else this.reader=new e(a,this.loadOptions.optimizedBinaryString)},load:function(a){this.prepareReader(a),this.readEndOfCentral(),this.readCentralDir(),this.readLocalFiles()}},b.exports=d},{\"./arrayReader\":1,\"./nodeBufferReader\":13,\"./object\":14,\"./signature\":15,\"./stringReader\":16,\"./support\":18,\"./uint8ArrayReader\":19,\"./utils\":22,\"./zipEntry\":24}],24:[function(a,b,c){\"use strict\";function d(a,b){this.options=a,this.loadOptions=b}var e=a(\"./stringReader\"),f=a(\"./utils\"),g=a(\"./compressedObject\"),h=a(\"./object\"),i=a(\"./support\"),j=0,k=3;d.prototype={isEncrypted:function(){return 1===(1&this.bitFlag)},useUTF8:function(){return 2048===(2048&this.bitFlag)},prepareCompressedContent:function(a,b,c){return function(){var d=a.index;a.setIndex(b);var e=a.readData(c);return a.setIndex(d),e}},prepareContent:function(a,b,c,d,e){return function(){var a=f.transformTo(d.uncompressInputType,this.getCompressedContent()),b=d.uncompress(a);if(b.length!==e)throw new Error(\"Bug : uncompressed data size mismatch\");return b}},readLocalPart:function(a){var b,c;if(a.skip(22),this.fileNameLength=a.readInt(2),c=a.readInt(2),this.fileName=a.readData(this.fileNameLength),a.skip(c),this.compressedSize==-1||this.uncompressedSize==-1)throw new Error(\"Bug or corrupted zip : didn't get enough informations from the central directory (compressedSize == -1 || uncompressedSize == -1)\");if(b=f.findCompression(this.compressionMethod),null===b)throw new Error(\"Corrupted zip : compression \"+f.pretty(this.compressionMethod)+\" unknown (inner file : \"+f.transformTo(\"string\",this.fileName)+\")\");if(this.decompressed=new g,this.decompressed.compressedSize=this.compressedSize,this.decompressed.uncompressedSize=this.uncompressedSize,this.decompressed.crc32=this.crc32,this.decompressed.compressionMethod=this.compressionMethod,this.decompressed.getCompressedContent=this.prepareCompressedContent(a,a.index,this.compressedSize,b),this.decompressed.getContent=this.prepareContent(a,a.index,this.compressedSize,b,this.uncompressedSize),this.loadOptions.checkCRC32&&(this.decompressed=f.transformTo(\"string\",this.decompressed.getContent()),h.crc32(this.decompressed)!==this.crc32))throw new Error(\"Corrupted zip : CRC32 mismatch\");\n},readCentralPart:function(a){if(this.versionMadeBy=a.readInt(2),this.versionNeeded=a.readInt(2),this.bitFlag=a.readInt(2),this.compressionMethod=a.readString(2),this.date=a.readDate(),this.crc32=a.readInt(4),this.compressedSize=a.readInt(4),this.uncompressedSize=a.readInt(4),this.fileNameLength=a.readInt(2),this.extraFieldsLength=a.readInt(2),this.fileCommentLength=a.readInt(2),this.diskNumberStart=a.readInt(2),this.internalFileAttributes=a.readInt(2),this.externalFileAttributes=a.readInt(4),this.localHeaderOffset=a.readInt(4),this.isEncrypted())throw new Error(\"Encrypted zip are not supported\");this.fileName=a.readData(this.fileNameLength),this.readExtraFields(a),this.parseZIP64ExtraField(a),this.fileComment=a.readData(this.fileCommentLength)},processAttributes:function(){this.unixPermissions=null,this.dosPermissions=null;var a=this.versionMadeBy>>8;this.dir=!!(16&this.externalFileAttributes),a===j&&(this.dosPermissions=63&this.externalFileAttributes),a===k&&(this.unixPermissions=this.externalFileAttributes>>16&65535),this.dir||\"/\"!==this.fileNameStr.slice(-1)||(this.dir=!0)},parseZIP64ExtraField:function(a){if(this.extraFields[1]){var b=new e(this.extraFields[1].value);this.uncompressedSize===f.MAX_VALUE_32BITS&&(this.uncompressedSize=b.readInt(8)),this.compressedSize===f.MAX_VALUE_32BITS&&(this.compressedSize=b.readInt(8)),this.localHeaderOffset===f.MAX_VALUE_32BITS&&(this.localHeaderOffset=b.readInt(8)),this.diskNumberStart===f.MAX_VALUE_32BITS&&(this.diskNumberStart=b.readInt(4))}},readExtraFields:function(a){var b,c,d,e=a.index;for(this.extraFields=this.extraFields||{};a.index<e+this.extraFieldsLength;)b=a.readInt(2),c=a.readInt(2),d=a.readString(c),this.extraFields[b]={id:b,length:c,value:d}},handleUTF8:function(){var a=i.uint8array?\"uint8array\":\"array\";if(this.useUTF8())this.fileNameStr=h.utf8decode(this.fileName),this.fileCommentStr=h.utf8decode(this.fileComment);else{var b=this.findExtraFieldUnicodePath();if(null!==b)this.fileNameStr=b;else{var c=f.transformTo(a,this.fileName);this.fileNameStr=this.loadOptions.decodeFileName(c)}var d=this.findExtraFieldUnicodeComment();if(null!==d)this.fileCommentStr=d;else{var e=f.transformTo(a,this.fileComment);this.fileCommentStr=this.loadOptions.decodeFileName(e)}}},findExtraFieldUnicodePath:function(){var a=this.extraFields[28789];if(a){var b=new e(a.value);return 1!==b.readInt(1)?null:h.crc32(this.fileName)!==b.readInt(4)?null:h.utf8decode(b.readString(a.length-5))}return null},findExtraFieldUnicodeComment:function(){var a=this.extraFields[25461];if(a){var b=new e(a.value);return 1!==b.readInt(1)?null:h.crc32(this.fileComment)!==b.readInt(4)?null:h.utf8decode(b.readString(a.length-5))}return null}},b.exports=d},{\"./compressedObject\":3,\"./object\":14,\"./stringReader\":16,\"./support\":18,\"./utils\":22}],25:[function(a,b,c){\"use strict\";var d=a(\"./lib/utils/common\").assign,e=a(\"./lib/deflate\"),f=a(\"./lib/inflate\"),g=a(\"./lib/zlib/constants\"),h={};d(h,e,f,g),b.exports=h},{\"./lib/deflate\":26,\"./lib/inflate\":27,\"./lib/utils/common\":28,\"./lib/zlib/constants\":31}],26:[function(a,b,c){\"use strict\";function d(a){if(!(this instanceof d))return new d(a);this.options=i.assign({level:s,method:u,chunkSize:16384,windowBits:15,memLevel:8,strategy:t,to:\"\"},a||{});var b=this.options;b.raw&&b.windowBits>0?b.windowBits=-b.windowBits:b.gzip&&b.windowBits>0&&b.windowBits<16&&(b.windowBits+=16),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new l,this.strm.avail_out=0;var c=h.deflateInit2(this.strm,b.level,b.method,b.windowBits,b.memLevel,b.strategy);if(c!==p)throw new Error(k[c]);if(b.header&&h.deflateSetHeader(this.strm,b.header),b.dictionary){var e;if(e=\"string\"==typeof b.dictionary?j.string2buf(b.dictionary):\"[object ArrayBuffer]\"===m.call(b.dictionary)?new Uint8Array(b.dictionary):b.dictionary,c=h.deflateSetDictionary(this.strm,e),c!==p)throw new Error(k[c]);this._dict_set=!0}}function e(a,b){var c=new d(b);if(c.push(a,!0),c.err)throw c.msg;return c.result}function f(a,b){return b=b||{},b.raw=!0,e(a,b)}function g(a,b){return b=b||{},b.gzip=!0,e(a,b)}var h=a(\"./zlib/deflate\"),i=a(\"./utils/common\"),j=a(\"./utils/strings\"),k=a(\"./zlib/messages\"),l=a(\"./zlib/zstream\"),m=Object.prototype.toString,n=0,o=4,p=0,q=1,r=2,s=-1,t=0,u=8;d.prototype.push=function(a,b){var c,d,e=this.strm,f=this.options.chunkSize;if(this.ended)return!1;d=b===~~b?b:b===!0?o:n,\"string\"==typeof a?e.input=j.string2buf(a):\"[object ArrayBuffer]\"===m.call(a)?e.input=new Uint8Array(a):e.input=a,e.next_in=0,e.avail_in=e.input.length;do{if(0===e.avail_out&&(e.output=new i.Buf8(f),e.next_out=0,e.avail_out=f),c=h.deflate(e,d),c!==q&&c!==p)return this.onEnd(c),this.ended=!0,!1;0!==e.avail_out&&(0!==e.avail_in||d!==o&&d!==r)||(\"string\"===this.options.to?this.onData(j.buf2binstring(i.shrinkBuf(e.output,e.next_out))):this.onData(i.shrinkBuf(e.output,e.next_out)))}while((e.avail_in>0||0===e.avail_out)&&c!==q);return d===o?(c=h.deflateEnd(this.strm),this.onEnd(c),this.ended=!0,c===p):d!==r||(this.onEnd(p),e.avail_out=0,!0)},d.prototype.onData=function(a){this.chunks.push(a)},d.prototype.onEnd=function(a){a===p&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=i.flattenChunks(this.chunks)),this.chunks=[],this.err=a,this.msg=this.strm.msg},c.Deflate=d,c.deflate=e,c.deflateRaw=f,c.gzip=g},{\"./utils/common\":28,\"./utils/strings\":29,\"./zlib/deflate\":33,\"./zlib/messages\":38,\"./zlib/zstream\":40}],27:[function(a,b,c){\"use strict\";function d(a){if(!(this instanceof d))return new d(a);this.options=h.assign({chunkSize:16384,windowBits:0,to:\"\"},a||{});var b=this.options;b.raw&&b.windowBits>=0&&b.windowBits<16&&(b.windowBits=-b.windowBits,0===b.windowBits&&(b.windowBits=-15)),!(b.windowBits>=0&&b.windowBits<16)||a&&a.windowBits||(b.windowBits+=32),b.windowBits>15&&b.windowBits<48&&0===(15&b.windowBits)&&(b.windowBits|=15),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new l,this.strm.avail_out=0;var c=g.inflateInit2(this.strm,b.windowBits);if(c!==j.Z_OK)throw new Error(k[c]);this.header=new m,g.inflateGetHeader(this.strm,this.header)}function e(a,b){var c=new d(b);if(c.push(a,!0),c.err)throw c.msg;return c.result}function f(a,b){return b=b||{},b.raw=!0,e(a,b)}var g=a(\"./zlib/inflate\"),h=a(\"./utils/common\"),i=a(\"./utils/strings\"),j=a(\"./zlib/constants\"),k=a(\"./zlib/messages\"),l=a(\"./zlib/zstream\"),m=a(\"./zlib/gzheader\"),n=Object.prototype.toString;d.prototype.push=function(a,b){var c,d,e,f,k,l,m=this.strm,o=this.options.chunkSize,p=this.options.dictionary,q=!1;if(this.ended)return!1;d=b===~~b?b:b===!0?j.Z_FINISH:j.Z_NO_FLUSH,\"string\"==typeof a?m.input=i.binstring2buf(a):\"[object ArrayBuffer]\"===n.call(a)?m.input=new Uint8Array(a):m.input=a,m.next_in=0,m.avail_in=m.input.length;do{if(0===m.avail_out&&(m.output=new h.Buf8(o),m.next_out=0,m.avail_out=o),c=g.inflate(m,j.Z_NO_FLUSH),c===j.Z_NEED_DICT&&p&&(l=\"string\"==typeof p?i.string2buf(p):\"[object ArrayBuffer]\"===n.call(p)?new Uint8Array(p):p,c=g.inflateSetDictionary(this.strm,l)),c===j.Z_BUF_ERROR&&q===!0&&(c=j.Z_OK,q=!1),c!==j.Z_STREAM_END&&c!==j.Z_OK)return this.onEnd(c),this.ended=!0,!1;m.next_out&&(0!==m.avail_out&&c!==j.Z_STREAM_END&&(0!==m.avail_in||d!==j.Z_FINISH&&d!==j.Z_SYNC_FLUSH)||(\"string\"===this.options.to?(e=i.utf8border(m.output,m.next_out),f=m.next_out-e,k=i.buf2string(m.output,e),m.next_out=f,m.avail_out=o-f,f&&h.arraySet(m.output,m.output,e,f,0),this.onData(k)):this.onData(h.shrinkBuf(m.output,m.next_out)))),0===m.avail_in&&0===m.avail_out&&(q=!0)}while((m.avail_in>0||0===m.avail_out)&&c!==j.Z_STREAM_END);return c===j.Z_STREAM_END&&(d=j.Z_FINISH),d===j.Z_FINISH?(c=g.inflateEnd(this.strm),this.onEnd(c),this.ended=!0,c===j.Z_OK):d!==j.Z_SYNC_FLUSH||(this.onEnd(j.Z_OK),m.avail_out=0,!0)},d.prototype.onData=function(a){this.chunks.push(a)},d.prototype.onEnd=function(a){a===j.Z_OK&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=h.flattenChunks(this.chunks)),this.chunks=[],this.err=a,this.msg=this.strm.msg},c.Inflate=d,c.inflate=e,c.inflateRaw=f,c.ungzip=e},{\"./utils/common\":28,\"./utils/strings\":29,\"./zlib/constants\":31,\"./zlib/gzheader\":34,\"./zlib/inflate\":36,\"./zlib/messages\":38,\"./zlib/zstream\":40}],28:[function(a,b,c){\"use strict\";var d=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Int32Array;c.assign=function(a){for(var b=Array.prototype.slice.call(arguments,1);b.length;){var c=b.shift();if(c){if(\"object\"!=typeof c)throw new TypeError(c+\"must be non-object\");for(var d in c)c.hasOwnProperty(d)&&(a[d]=c[d])}}return a},c.shrinkBuf=function(a,b){return a.length===b?a:a.subarray?a.subarray(0,b):(a.length=b,a)};var e={arraySet:function(a,b,c,d,e){if(b.subarray&&a.subarray)return void a.set(b.subarray(c,c+d),e);for(var f=0;f<d;f++)a[e+f]=b[c+f]},flattenChunks:function(a){var b,c,d,e,f,g;for(d=0,b=0,c=a.length;b<c;b++)d+=a[b].length;for(g=new Uint8Array(d),e=0,b=0,c=a.length;b<c;b++)f=a[b],g.set(f,e),e+=f.length;return g}},f={arraySet:function(a,b,c,d,e){for(var f=0;f<d;f++)a[e+f]=b[c+f]},flattenChunks:function(a){return[].concat.apply([],a)}};c.setTyped=function(a){a?(c.Buf8=Uint8Array,c.Buf16=Uint16Array,c.Buf32=Int32Array,c.assign(c,e)):(c.Buf8=Array,c.Buf16=Array,c.Buf32=Array,c.assign(c,f))},c.setTyped(d)},{}],29:[function(a,b,c){\"use strict\";function d(a,b){if(b<65537&&(a.subarray&&g||!a.subarray&&f))return String.fromCharCode.apply(null,e.shrinkBuf(a,b));for(var c=\"\",d=0;d<b;d++)c+=String.fromCharCode(a[d]);return c}var e=a(\"./common\"),f=!0,g=!0;try{String.fromCharCode.apply(null,[0])}catch(h){f=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(h){g=!1}for(var i=new e.Buf8(256),j=0;j<256;j++)i[j]=j>=252?6:j>=248?5:j>=240?4:j>=224?3:j>=192?2:1;i[254]=i[254]=1,c.string2buf=function(a){var b,c,d,f,g,h=a.length,i=0;for(f=0;f<h;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),i+=c<128?1:c<2048?2:c<65536?3:4;for(b=new e.Buf8(i),g=0,f=0;g<i;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),c<128?b[g++]=c:c<2048?(b[g++]=192|c>>>6,b[g++]=128|63&c):c<65536?(b[g++]=224|c>>>12,b[g++]=128|c>>>6&63,b[g++]=128|63&c):(b[g++]=240|c>>>18,b[g++]=128|c>>>12&63,b[g++]=128|c>>>6&63,b[g++]=128|63&c);return b},c.buf2binstring=function(a){return d(a,a.length)},c.binstring2buf=function(a){for(var b=new e.Buf8(a.length),c=0,d=b.length;c<d;c++)b[c]=a.charCodeAt(c);return b},c.buf2string=function(a,b){var c,e,f,g,h=b||a.length,j=new Array(2*h);for(e=0,c=0;c<h;)if(f=a[c++],f<128)j[e++]=f;else if(g=i[f],g>4)j[e++]=65533,c+=g-1;else{for(f&=2===g?31:3===g?15:7;g>1&&c<h;)f=f<<6|63&a[c++],g--;g>1?j[e++]=65533:f<65536?j[e++]=f:(f-=65536,j[e++]=55296|f>>10&1023,j[e++]=56320|1023&f)}return d(j,e)},c.utf8border=function(a,b){var c;for(b=b||a.length,b>a.length&&(b=a.length),c=b-1;c>=0&&128===(192&a[c]);)c--;return c<0?b:0===c?b:c+i[a[c]]>b?c:b}},{\"./common\":28}],30:[function(a,b,c){\"use strict\";function d(a,b,c,d){for(var e=65535&a|0,f=a>>>16&65535|0,g=0;0!==c;){g=c>2e3?2e3:c,c-=g;do e=e+b[d++]|0,f=f+e|0;while(--g);e%=65521,f%=65521}return e|f<<16|0}b.exports=d},{}],31:[function(a,b,c){\"use strict\";b.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},{}],32:[function(a,b,c){\"use strict\";function d(){for(var a,b=[],c=0;c<256;c++){a=c;for(var d=0;d<8;d++)a=1&a?3988292384^a>>>1:a>>>1;b[c]=a}return b}function e(a,b,c,d){var e=f,g=d+c;a^=-1;for(var h=d;h<g;h++)a=a>>>8^e[255&(a^b[h])];return a^-1}var f=d();b.exports=e},{}],33:[function(a,b,c){\"use strict\";function d(a,b){return a.msg=I[b],b}function e(a){return(a<<1)-(a>4?9:0)}function f(a){for(var b=a.length;--b>=0;)a[b]=0}function g(a){var b=a.state,c=b.pending;c>a.avail_out&&(c=a.avail_out),0!==c&&(E.arraySet(a.output,b.pending_buf,b.pending_out,c,a.next_out),a.next_out+=c,b.pending_out+=c,a.total_out+=c,a.avail_out-=c,b.pending-=c,0===b.pending&&(b.pending_out=0))}function h(a,b){F._tr_flush_block(a,a.block_start>=0?a.block_start:-1,a.strstart-a.block_start,b),a.block_start=a.strstart,g(a.strm)}function i(a,b){a.pending_buf[a.pending++]=b}function j(a,b){a.pending_buf[a.pending++]=b>>>8&255,a.pending_buf[a.pending++]=255&b}function k(a,b,c,d){var e=a.avail_in;return e>d&&(e=d),0===e?0:(a.avail_in-=e,E.arraySet(b,a.input,a.next_in,e,c),1===a.state.wrap?a.adler=G(a.adler,b,e,c):2===a.state.wrap&&(a.adler=H(a.adler,b,e,c)),a.next_in+=e,a.total_in+=e,e)}function l(a,b){var c,d,e=a.max_chain_length,f=a.strstart,g=a.prev_length,h=a.nice_match,i=a.strstart>a.w_size-la?a.strstart-(a.w_size-la):0,j=a.window,k=a.w_mask,l=a.prev,m=a.strstart+ka,n=j[f+g-1],o=j[f+g];a.prev_length>=a.good_match&&(e>>=2),h>a.lookahead&&(h=a.lookahead);do if(c=b,j[c+g]===o&&j[c+g-1]===n&&j[c]===j[f]&&j[++c]===j[f+1]){f+=2,c++;do;while(j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&f<m);if(d=ka-(m-f),f=m-ka,d>g){if(a.match_start=b,g=d,d>=h)break;n=j[f+g-1],o=j[f+g]}}while((b=l[b&k])>i&&0!==--e);return g<=a.lookahead?g:a.lookahead}function m(a){var b,c,d,e,f,g=a.w_size;do{if(e=a.window_size-a.lookahead-a.strstart,a.strstart>=g+(g-la)){E.arraySet(a.window,a.window,g,g,0),a.match_start-=g,a.strstart-=g,a.block_start-=g,c=a.hash_size,b=c;do d=a.head[--b],a.head[b]=d>=g?d-g:0;while(--c);c=g,b=c;do d=a.prev[--b],a.prev[b]=d>=g?d-g:0;while(--c);e+=g}if(0===a.strm.avail_in)break;if(c=k(a.strm,a.window,a.strstart+a.lookahead,e),a.lookahead+=c,a.lookahead+a.insert>=ja)for(f=a.strstart-a.insert,a.ins_h=a.window[f],a.ins_h=(a.ins_h<<a.hash_shift^a.window[f+1])&a.hash_mask;a.insert&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[f+ja-1])&a.hash_mask,a.prev[f&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=f,f++,a.insert--,!(a.lookahead+a.insert<ja)););}while(a.lookahead<la&&0!==a.strm.avail_in)}function n(a,b){var c=65535;for(c>a.pending_buf_size-5&&(c=a.pending_buf_size-5);;){if(a.lookahead<=1){if(m(a),0===a.lookahead&&b===J)return ua;if(0===a.lookahead)break}a.strstart+=a.lookahead,a.lookahead=0;var d=a.block_start+c;if((0===a.strstart||a.strstart>=d)&&(a.lookahead=a.strstart-d,a.strstart=d,h(a,!1),0===a.strm.avail_out))return ua;if(a.strstart-a.block_start>=a.w_size-la&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.strstart>a.block_start&&(h(a,!1),0===a.strm.avail_out)?ua:ua}function o(a,b){for(var c,d;;){if(a.lookahead<la){if(m(a),a.lookahead<la&&b===J)return ua;if(0===a.lookahead)break}if(c=0,a.lookahead>=ja&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart),0!==c&&a.strstart-c<=a.w_size-la&&(a.match_length=l(a,c)),a.match_length>=ja)if(d=F._tr_tally(a,a.strstart-a.match_start,a.match_length-ja),a.lookahead-=a.match_length,a.match_length<=a.max_lazy_match&&a.lookahead>=ja){a.match_length--;do a.strstart++,a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart;while(0!==--a.match_length);a.strstart++}else a.strstart+=a.match_length,a.match_length=0,a.ins_h=a.window[a.strstart],a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+1])&a.hash_mask;else d=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++;if(d&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=a.strstart<ja-1?a.strstart:ja-1,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function p(a,b){for(var c,d,e;;){if(a.lookahead<la){if(m(a),a.lookahead<la&&b===J)return ua;if(0===a.lookahead)break}if(c=0,a.lookahead>=ja&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart),a.prev_length=a.match_length,a.prev_match=a.match_start,a.match_length=ja-1,0!==c&&a.prev_length<a.max_lazy_match&&a.strstart-c<=a.w_size-la&&(a.match_length=l(a,c),a.match_length<=5&&(a.strategy===U||a.match_length===ja&&a.strstart-a.match_start>4096)&&(a.match_length=ja-1)),a.prev_length>=ja&&a.match_length<=a.prev_length){e=a.strstart+a.lookahead-ja,d=F._tr_tally(a,a.strstart-1-a.prev_match,a.prev_length-ja),a.lookahead-=a.prev_length-1,a.prev_length-=2;do++a.strstart<=e&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart);while(0!==--a.prev_length);if(a.match_available=0,a.match_length=ja-1,a.strstart++,d&&(h(a,!1),0===a.strm.avail_out))return ua}else if(a.match_available){if(d=F._tr_tally(a,0,a.window[a.strstart-1]),d&&h(a,!1),a.strstart++,a.lookahead--,0===a.strm.avail_out)return ua}else a.match_available=1,a.strstart++,a.lookahead--}return a.match_available&&(d=F._tr_tally(a,0,a.window[a.strstart-1]),a.match_available=0),a.insert=a.strstart<ja-1?a.strstart:ja-1,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function q(a,b){for(var c,d,e,f,g=a.window;;){if(a.lookahead<=ka){if(m(a),a.lookahead<=ka&&b===J)return ua;if(0===a.lookahead)break}if(a.match_length=0,a.lookahead>=ja&&a.strstart>0&&(e=a.strstart-1,d=g[e],d===g[++e]&&d===g[++e]&&d===g[++e])){f=a.strstart+ka;do;while(d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&e<f);a.match_length=ka-(f-e),a.match_length>a.lookahead&&(a.match_length=a.lookahead)}if(a.match_length>=ja?(c=F._tr_tally(a,1,a.match_length-ja),a.lookahead-=a.match_length,a.strstart+=a.match_length,a.match_length=0):(c=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++),c&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function r(a,b){for(var c;;){if(0===a.lookahead&&(m(a),0===a.lookahead)){if(b===J)return ua;break}if(a.match_length=0,c=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++,c&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function s(a,b,c,d,e){this.good_length=a,this.max_lazy=b,this.nice_length=c,this.max_chain=d,this.func=e}function t(a){a.window_size=2*a.w_size,f(a.head),a.max_lazy_match=D[a.level].max_lazy,a.good_match=D[a.level].good_length,a.nice_match=D[a.level].nice_length,a.max_chain_length=D[a.level].max_chain,a.strstart=0,a.block_start=0,a.lookahead=0,a.insert=0,a.match_length=a.prev_length=ja-1,a.match_available=0,a.ins_h=0}function u(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=$,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new E.Buf16(2*ha),this.dyn_dtree=new E.Buf16(2*(2*fa+1)),this.bl_tree=new E.Buf16(2*(2*ga+1)),f(this.dyn_ltree),f(this.dyn_dtree),f(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new E.Buf16(ia+1),this.heap=new E.Buf16(2*ea+1),f(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new E.Buf16(2*ea+1),f(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function v(a){var b;return a&&a.state?(a.total_in=a.total_out=0,a.data_type=Z,b=a.state,b.pending=0,b.pending_out=0,b.wrap<0&&(b.wrap=-b.wrap),b.status=b.wrap?na:sa,a.adler=2===b.wrap?0:1,b.last_flush=J,F._tr_init(b),O):d(a,Q)}function w(a){var b=v(a);return b===O&&t(a.state),b}function x(a,b){return a&&a.state?2!==a.state.wrap?Q:(a.state.gzhead=b,O):Q}function y(a,b,c,e,f,g){if(!a)return Q;var h=1;if(b===T&&(b=6),e<0?(h=0,e=-e):e>15&&(h=2,e-=16),f<1||f>_||c!==$||e<8||e>15||b<0||b>9||g<0||g>X)return d(a,Q);8===e&&(e=9);var i=new u;return a.state=i,i.strm=a,i.wrap=h,i.gzhead=null,i.w_bits=e,i.w_size=1<<i.w_bits,i.w_mask=i.w_size-1,i.hash_bits=f+7,i.hash_size=1<<i.hash_bits,i.hash_mask=i.hash_size-1,i.hash_shift=~~((i.hash_bits+ja-1)/ja),i.window=new E.Buf8(2*i.w_size),i.head=new E.Buf16(i.hash_size),i.prev=new E.Buf16(i.w_size),i.lit_bufsize=1<<f+6,i.pending_buf_size=4*i.lit_bufsize,i.pending_buf=new E.Buf8(i.pending_buf_size),i.d_buf=1*i.lit_bufsize,i.l_buf=3*i.lit_bufsize,i.level=b,i.strategy=g,i.method=c,w(a)}function z(a,b){return y(a,b,$,aa,ba,Y)}function A(a,b){var c,h,k,l;if(!a||!a.state||b>N||b<0)return a?d(a,Q):Q;if(h=a.state,!a.output||!a.input&&0!==a.avail_in||h.status===ta&&b!==M)return d(a,0===a.avail_out?S:Q);if(h.strm=a,c=h.last_flush,h.last_flush=b,h.status===na)if(2===h.wrap)a.adler=0,i(h,31),i(h,139),i(h,8),h.gzhead?(i(h,(h.gzhead.text?1:0)+(h.gzhead.hcrc?2:0)+(h.gzhead.extra?4:0)+(h.gzhead.name?8:0)+(h.gzhead.comment?16:0)),i(h,255&h.gzhead.time),i(h,h.gzhead.time>>8&255),i(h,h.gzhead.time>>16&255),i(h,h.gzhead.time>>24&255),i(h,9===h.level?2:h.strategy>=V||h.level<2?4:0),i(h,255&h.gzhead.os),h.gzhead.extra&&h.gzhead.extra.length&&(i(h,255&h.gzhead.extra.length),i(h,h.gzhead.extra.length>>8&255)),h.gzhead.hcrc&&(a.adler=H(a.adler,h.pending_buf,h.pending,0)),h.gzindex=0,h.status=oa):(i(h,0),i(h,0),i(h,0),i(h,0),i(h,0),i(h,9===h.level?2:h.strategy>=V||h.level<2?4:0),i(h,ya),h.status=sa);else{var m=$+(h.w_bits-8<<4)<<8,n=-1;n=h.strategy>=V||h.level<2?0:h.level<6?1:6===h.level?2:3,m|=n<<6,0!==h.strstart&&(m|=ma),m+=31-m%31,h.status=sa,j(h,m),0!==h.strstart&&(j(h,a.adler>>>16),j(h,65535&a.adler)),a.adler=1}if(h.status===oa)if(h.gzhead.extra){for(k=h.pending;h.gzindex<(65535&h.gzhead.extra.length)&&(h.pending!==h.pending_buf_size||(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending!==h.pending_buf_size));)i(h,255&h.gzhead.extra[h.gzindex]),h.gzindex++;h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),h.gzindex===h.gzhead.extra.length&&(h.gzindex=0,h.status=pa)}else h.status=pa;if(h.status===pa)if(h.gzhead.name){k=h.pending;do{if(h.pending===h.pending_buf_size&&(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending===h.pending_buf_size)){l=1;break}l=h.gzindex<h.gzhead.name.length?255&h.gzhead.name.charCodeAt(h.gzindex++):0,i(h,l)}while(0!==l);h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),0===l&&(h.gzindex=0,h.status=qa)}else h.status=qa;if(h.status===qa)if(h.gzhead.comment){k=h.pending;do{if(h.pending===h.pending_buf_size&&(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending===h.pending_buf_size)){l=1;break}l=h.gzindex<h.gzhead.comment.length?255&h.gzhead.comment.charCodeAt(h.gzindex++):0,i(h,l)}while(0!==l);h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),0===l&&(h.status=ra)}else h.status=ra;if(h.status===ra&&(h.gzhead.hcrc?(h.pending+2>h.pending_buf_size&&g(a),h.pending+2<=h.pending_buf_size&&(i(h,255&a.adler),i(h,a.adler>>8&255),a.adler=0,h.status=sa)):h.status=sa),0!==h.pending){if(g(a),0===a.avail_out)return h.last_flush=-1,O}else if(0===a.avail_in&&e(b)<=e(c)&&b!==M)return d(a,S);if(h.status===ta&&0!==a.avail_in)return d(a,S);if(0!==a.avail_in||0!==h.lookahead||b!==J&&h.status!==ta){var o=h.strategy===V?r(h,b):h.strategy===W?q(h,b):D[h.level].func(h,b);if(o!==wa&&o!==xa||(h.status=ta),o===ua||o===wa)return 0===a.avail_out&&(h.last_flush=-1),O;if(o===va&&(b===K?F._tr_align(h):b!==N&&(F._tr_stored_block(h,0,0,!1),b===L&&(f(h.head),0===h.lookahead&&(h.strstart=0,h.block_start=0,h.insert=0))),g(a),0===a.avail_out))return h.last_flush=-1,O}return b!==M?O:h.wrap<=0?P:(2===h.wrap?(i(h,255&a.adler),i(h,a.adler>>8&255),i(h,a.adler>>16&255),i(h,a.adler>>24&255),i(h,255&a.total_in),i(h,a.total_in>>8&255),i(h,a.total_in>>16&255),i(h,a.total_in>>24&255)):(j(h,a.adler>>>16),j(h,65535&a.adler)),g(a),h.wrap>0&&(h.wrap=-h.wrap),0!==h.pending?O:P)}function B(a){var b;return a&&a.state?(b=a.state.status,b!==na&&b!==oa&&b!==pa&&b!==qa&&b!==ra&&b!==sa&&b!==ta?d(a,Q):(a.state=null,b===sa?d(a,R):O)):Q}function C(a,b){var c,d,e,g,h,i,j,k,l=b.length;if(!a||!a.state)return Q;if(c=a.state,g=c.wrap,2===g||1===g&&c.status!==na||c.lookahead)return Q;for(1===g&&(a.adler=G(a.adler,b,l,0)),c.wrap=0,l>=c.w_size&&(0===g&&(f(c.head),c.strstart=0,c.block_start=0,c.insert=0),k=new E.Buf8(c.w_size),E.arraySet(k,b,l-c.w_size,c.w_size,0),b=k,l=c.w_size),h=a.avail_in,i=a.next_in,j=a.input,a.avail_in=l,a.next_in=0,a.input=b,m(c);c.lookahead>=ja;){d=c.strstart,e=c.lookahead-(ja-1);do c.ins_h=(c.ins_h<<c.hash_shift^c.window[d+ja-1])&c.hash_mask,c.prev[d&c.w_mask]=c.head[c.ins_h],c.head[c.ins_h]=d,d++;while(--e);c.strstart=d,c.lookahead=ja-1,m(c)}return c.strstart+=c.lookahead,c.block_start=c.strstart,c.insert=c.lookahead,c.lookahead=0,c.match_length=c.prev_length=ja-1,c.match_available=0,a.next_in=i,a.input=j,a.avail_in=h,c.wrap=g,O}var D,E=a(\"../utils/common\"),F=a(\"./trees\"),G=a(\"./adler32\"),H=a(\"./crc32\"),I=a(\"./messages\"),J=0,K=1,L=3,M=4,N=5,O=0,P=1,Q=-2,R=-3,S=-5,T=-1,U=1,V=2,W=3,X=4,Y=0,Z=2,$=8,_=9,aa=15,ba=8,ca=29,da=256,ea=da+1+ca,fa=30,ga=19,ha=2*ea+1,ia=15,ja=3,ka=258,la=ka+ja+1,ma=32,na=42,oa=69,pa=73,qa=91,ra=103,sa=113,ta=666,ua=1,va=2,wa=3,xa=4,ya=3;D=[new s(0,0,0,0,n),new s(4,4,8,4,o),new s(4,5,16,8,o),new s(4,6,32,32,o),new s(4,4,16,16,p),new s(8,16,32,32,p),new s(8,16,128,128,p),new s(8,32,128,256,p),new s(32,128,258,1024,p),new s(32,258,258,4096,p)],c.deflateInit=z,c.deflateInit2=y,c.deflateReset=w,c.deflateResetKeep=v,c.deflateSetHeader=x,c.deflate=A,c.deflateEnd=B,c.deflateSetDictionary=C,c.deflateInfo=\"pako deflate (from Nodeca project)\"},{\"../utils/common\":28,\"./adler32\":30,\"./crc32\":32,\"./messages\":38,\"./trees\":39}],34:[function(a,b,c){\"use strict\";function d(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name=\"\",this.comment=\"\",this.hcrc=0,this.done=!1}b.exports=d},{}],35:[function(a,b,c){\"use strict\";var d=30,e=12;b.exports=function(a,b){var c,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C;c=a.state,f=a.next_in,B=a.input,g=f+(a.avail_in-5),h=a.next_out,C=a.output,i=h-(b-a.avail_out),j=h+(a.avail_out-257),k=c.dmax,l=c.wsize,m=c.whave,n=c.wnext,o=c.window,p=c.hold,q=c.bits,r=c.lencode,s=c.distcode,t=(1<<c.lenbits)-1,u=(1<<c.distbits)-1;a:do{q<15&&(p+=B[f++]<<q,q+=8,p+=B[f++]<<q,q+=8),v=r[p&t];b:for(;;){if(w=v>>>24,p>>>=w,q-=w,w=v>>>16&255,0===w)C[h++]=65535&v;else{if(!(16&w)){if(0===(64&w)){v=r[(65535&v)+(p&(1<<w)-1)];continue b}if(32&w){c.mode=e;break a}a.msg=\"invalid literal/length code\",c.mode=d;break a}x=65535&v,w&=15,w&&(q<w&&(p+=B[f++]<<q,q+=8),x+=p&(1<<w)-1,p>>>=w,q-=w),q<15&&(p+=B[f++]<<q,q+=8,p+=B[f++]<<q,q+=8),v=s[p&u];c:for(;;){if(w=v>>>24,p>>>=w,q-=w,w=v>>>16&255,!(16&w)){if(0===(64&w)){v=s[(65535&v)+(p&(1<<w)-1)];continue c}a.msg=\"invalid distance code\",c.mode=d;break a}if(y=65535&v,w&=15,q<w&&(p+=B[f++]<<q,q+=8,q<w&&(p+=B[f++]<<q,q+=8)),y+=p&(1<<w)-1,y>k){a.msg=\"invalid distance too far back\",c.mode=d;break a}if(p>>>=w,q-=w,w=h-i,y>w){if(w=y-w,w>m&&c.sane){a.msg=\"invalid distance too far back\",c.mode=d;break a}if(z=0,A=o,0===n){if(z+=l-w,w<x){x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}}else if(n<w){if(z+=l+n-w,w-=n,w<x){x-=w;do C[h++]=o[z++];while(--w);if(z=0,n<x){w=n,x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}}}else if(z+=n-w,w<x){x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}for(;x>2;)C[h++]=A[z++],C[h++]=A[z++],C[h++]=A[z++],x-=3;x&&(C[h++]=A[z++],x>1&&(C[h++]=A[z++]))}else{z=h-y;do C[h++]=C[z++],C[h++]=C[z++],C[h++]=C[z++],x-=3;while(x>2);x&&(C[h++]=C[z++],x>1&&(C[h++]=C[z++]))}break}}break}}while(f<g&&h<j);x=q>>3,f-=x,q-=x<<3,p&=(1<<q)-1,a.next_in=f,a.next_out=h,a.avail_in=f<g?5+(g-f):5-(f-g),a.avail_out=h<j?257+(j-h):257-(h-j),c.hold=p,c.bits=q}},{}],36:[function(a,b,c){\"use strict\";function d(a){return(a>>>24&255)+(a>>>8&65280)+((65280&a)<<8)+((255&a)<<24)}function e(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new s.Buf16(320),this.work=new s.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function f(a){var b;return a&&a.state?(b=a.state,a.total_in=a.total_out=b.total=0,a.msg=\"\",b.wrap&&(a.adler=1&b.wrap),b.mode=L,b.last=0,b.havedict=0,b.dmax=32768,b.head=null,b.hold=0,b.bits=0,b.lencode=b.lendyn=new s.Buf32(pa),b.distcode=b.distdyn=new s.Buf32(qa),b.sane=1,b.back=-1,D):G}function g(a){var b;return a&&a.state?(b=a.state,b.wsize=0,b.whave=0,b.wnext=0,f(a)):G}function h(a,b){var c,d;return a&&a.state?(d=a.state,b<0?(c=0,b=-b):(c=(b>>4)+1,b<48&&(b&=15)),b&&(b<8||b>15)?G:(null!==d.window&&d.wbits!==b&&(d.window=null),d.wrap=c,d.wbits=b,g(a))):G}function i(a,b){var c,d;return a?(d=new e,a.state=d,d.window=null,c=h(a,b),c!==D&&(a.state=null),c):G}function j(a){return i(a,sa)}function k(a){if(ta){var b;for(q=new s.Buf32(512),r=new s.Buf32(32),b=0;b<144;)a.lens[b++]=8;for(;b<256;)a.lens[b++]=9;for(;b<280;)a.lens[b++]=7;for(;b<288;)a.lens[b++]=8;for(w(y,a.lens,0,288,q,0,a.work,{bits:9}),b=0;b<32;)a.lens[b++]=5;w(z,a.lens,0,32,r,0,a.work,{bits:5}),ta=!1}a.lencode=q,a.lenbits=9,a.distcode=r,a.distbits=5}function l(a,b,c,d){var e,f=a.state;return null===f.window&&(f.wsize=1<<f.wbits,f.wnext=0,f.whave=0,f.window=new s.Buf8(f.wsize)),d>=f.wsize?(s.arraySet(f.window,b,c-f.wsize,f.wsize,0),f.wnext=0,f.whave=f.wsize):(e=f.wsize-f.wnext,e>d&&(e=d),s.arraySet(f.window,b,c-d,e,f.wnext),d-=e,d?(s.arraySet(f.window,b,c-d,d,0),f.wnext=d,f.whave=f.wsize):(f.wnext+=e,f.wnext===f.wsize&&(f.wnext=0),f.whave<f.wsize&&(f.whave+=e))),0}function m(a,b){var c,e,f,g,h,i,j,m,n,o,p,q,r,pa,qa,ra,sa,ta,ua,va,wa,xa,ya,za,Aa=0,Ba=new s.Buf8(4),Ca=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!a||!a.state||!a.output||!a.input&&0!==a.avail_in)return G;c=a.state,c.mode===W&&(c.mode=X),h=a.next_out,f=a.output,j=a.avail_out,g=a.next_in,e=a.input,i=a.avail_in,m=c.hold,n=c.bits,o=i,p=j,xa=D;a:for(;;)switch(c.mode){case L:if(0===c.wrap){c.mode=X;break}for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(2&c.wrap&&35615===m){c.check=0,Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0),m=0,n=0,c.mode=M;break}if(c.flags=0,c.head&&(c.head.done=!1),!(1&c.wrap)||(((255&m)<<8)+(m>>8))%31){a.msg=\"incorrect header check\",c.mode=ma;break}if((15&m)!==K){a.msg=\"unknown compression method\",c.mode=ma;break}if(m>>>=4,n-=4,wa=(15&m)+8,0===c.wbits)c.wbits=wa;else if(wa>c.wbits){a.msg=\"invalid window size\",c.mode=ma;break}c.dmax=1<<wa,a.adler=c.check=1,c.mode=512&m?U:W,m=0,n=0;break;case M:for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(c.flags=m,(255&c.flags)!==K){a.msg=\"unknown compression method\",c.mode=ma;break}if(57344&c.flags){a.msg=\"unknown header flags set\",c.mode=ma;break}c.head&&(c.head.text=m>>8&1),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0,c.mode=N;case N:for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.head&&(c.head.time=m),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,Ba[2]=m>>>16&255,Ba[3]=m>>>24&255,c.check=u(c.check,Ba,4,0)),m=0,n=0,c.mode=O;case O:for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,\nn+=8}c.head&&(c.head.xflags=255&m,c.head.os=m>>8),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0,c.mode=P;case P:if(1024&c.flags){for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.length=m,c.head&&(c.head.extra_len=m),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0}else c.head&&(c.head.extra=null);c.mode=Q;case Q:if(1024&c.flags&&(q=c.length,q>i&&(q=i),q&&(c.head&&(wa=c.head.extra_len-c.length,c.head.extra||(c.head.extra=new Array(c.head.extra_len)),s.arraySet(c.head.extra,e,g,q,wa)),512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,c.length-=q),c.length))break a;c.length=0,c.mode=R;case R:if(2048&c.flags){if(0===i)break a;q=0;do wa=e[g+q++],c.head&&wa&&c.length<65536&&(c.head.name+=String.fromCharCode(wa));while(wa&&q<i);if(512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,wa)break a}else c.head&&(c.head.name=null);c.length=0,c.mode=S;case S:if(4096&c.flags){if(0===i)break a;q=0;do wa=e[g+q++],c.head&&wa&&c.length<65536&&(c.head.comment+=String.fromCharCode(wa));while(wa&&q<i);if(512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,wa)break a}else c.head&&(c.head.comment=null);c.mode=T;case T:if(512&c.flags){for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m!==(65535&c.check)){a.msg=\"header crc mismatch\",c.mode=ma;break}m=0,n=0}c.head&&(c.head.hcrc=c.flags>>9&1,c.head.done=!0),a.adler=c.check=0,c.mode=W;break;case U:for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}a.adler=c.check=d(m),m=0,n=0,c.mode=V;case V:if(0===c.havedict)return a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,F;a.adler=c.check=1,c.mode=W;case W:if(b===B||b===C)break a;case X:if(c.last){m>>>=7&n,n-=7&n,c.mode=ja;break}for(;n<3;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}switch(c.last=1&m,m>>>=1,n-=1,3&m){case 0:c.mode=Y;break;case 1:if(k(c),c.mode=ca,b===C){m>>>=2,n-=2;break a}break;case 2:c.mode=_;break;case 3:a.msg=\"invalid block type\",c.mode=ma}m>>>=2,n-=2;break;case Y:for(m>>>=7&n,n-=7&n;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if((65535&m)!==(m>>>16^65535)){a.msg=\"invalid stored block lengths\",c.mode=ma;break}if(c.length=65535&m,m=0,n=0,c.mode=Z,b===C)break a;case Z:c.mode=$;case $:if(q=c.length){if(q>i&&(q=i),q>j&&(q=j),0===q)break a;s.arraySet(f,e,g,q,h),i-=q,g+=q,j-=q,h+=q,c.length-=q;break}c.mode=W;break;case _:for(;n<14;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(c.nlen=(31&m)+257,m>>>=5,n-=5,c.ndist=(31&m)+1,m>>>=5,n-=5,c.ncode=(15&m)+4,m>>>=4,n-=4,c.nlen>286||c.ndist>30){a.msg=\"too many length or distance symbols\",c.mode=ma;break}c.have=0,c.mode=aa;case aa:for(;c.have<c.ncode;){for(;n<3;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.lens[Ca[c.have++]]=7&m,m>>>=3,n-=3}for(;c.have<19;)c.lens[Ca[c.have++]]=0;if(c.lencode=c.lendyn,c.lenbits=7,ya={bits:c.lenbits},xa=w(x,c.lens,0,19,c.lencode,0,c.work,ya),c.lenbits=ya.bits,xa){a.msg=\"invalid code lengths set\",c.mode=ma;break}c.have=0,c.mode=ba;case ba:for(;c.have<c.nlen+c.ndist;){for(;Aa=c.lencode[m&(1<<c.lenbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(sa<16)m>>>=qa,n-=qa,c.lens[c.have++]=sa;else{if(16===sa){for(za=qa+2;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m>>>=qa,n-=qa,0===c.have){a.msg=\"invalid bit length repeat\",c.mode=ma;break}wa=c.lens[c.have-1],q=3+(3&m),m>>>=2,n-=2}else if(17===sa){for(za=qa+3;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=qa,n-=qa,wa=0,q=3+(7&m),m>>>=3,n-=3}else{for(za=qa+7;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=qa,n-=qa,wa=0,q=11+(127&m),m>>>=7,n-=7}if(c.have+q>c.nlen+c.ndist){a.msg=\"invalid bit length repeat\",c.mode=ma;break}for(;q--;)c.lens[c.have++]=wa}}if(c.mode===ma)break;if(0===c.lens[256]){a.msg=\"invalid code -- missing end-of-block\",c.mode=ma;break}if(c.lenbits=9,ya={bits:c.lenbits},xa=w(y,c.lens,0,c.nlen,c.lencode,0,c.work,ya),c.lenbits=ya.bits,xa){a.msg=\"invalid literal/lengths set\",c.mode=ma;break}if(c.distbits=6,c.distcode=c.distdyn,ya={bits:c.distbits},xa=w(z,c.lens,c.nlen,c.ndist,c.distcode,0,c.work,ya),c.distbits=ya.bits,xa){a.msg=\"invalid distances set\",c.mode=ma;break}if(c.mode=ca,b===C)break a;case ca:c.mode=da;case da:if(i>=6&&j>=258){a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,v(a,p),h=a.next_out,f=a.output,j=a.avail_out,g=a.next_in,e=a.input,i=a.avail_in,m=c.hold,n=c.bits,c.mode===W&&(c.back=-1);break}for(c.back=0;Aa=c.lencode[m&(1<<c.lenbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(ra&&0===(240&ra)){for(ta=qa,ua=ra,va=sa;Aa=c.lencode[va+((m&(1<<ta+ua)-1)>>ta)],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(ta+qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=ta,n-=ta,c.back+=ta}if(m>>>=qa,n-=qa,c.back+=qa,c.length=sa,0===ra){c.mode=ia;break}if(32&ra){c.back=-1,c.mode=W;break}if(64&ra){a.msg=\"invalid literal/length code\",c.mode=ma;break}c.extra=15&ra,c.mode=ea;case ea:if(c.extra){for(za=c.extra;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.length+=m&(1<<c.extra)-1,m>>>=c.extra,n-=c.extra,c.back+=c.extra}c.was=c.length,c.mode=fa;case fa:for(;Aa=c.distcode[m&(1<<c.distbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(0===(240&ra)){for(ta=qa,ua=ra,va=sa;Aa=c.distcode[va+((m&(1<<ta+ua)-1)>>ta)],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(ta+qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=ta,n-=ta,c.back+=ta}if(m>>>=qa,n-=qa,c.back+=qa,64&ra){a.msg=\"invalid distance code\",c.mode=ma;break}c.offset=sa,c.extra=15&ra,c.mode=ga;case ga:if(c.extra){for(za=c.extra;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.offset+=m&(1<<c.extra)-1,m>>>=c.extra,n-=c.extra,c.back+=c.extra}if(c.offset>c.dmax){a.msg=\"invalid distance too far back\",c.mode=ma;break}c.mode=ha;case ha:if(0===j)break a;if(q=p-j,c.offset>q){if(q=c.offset-q,q>c.whave&&c.sane){a.msg=\"invalid distance too far back\",c.mode=ma;break}q>c.wnext?(q-=c.wnext,r=c.wsize-q):r=c.wnext-q,q>c.length&&(q=c.length),pa=c.window}else pa=f,r=h-c.offset,q=c.length;q>j&&(q=j),j-=q,c.length-=q;do f[h++]=pa[r++];while(--q);0===c.length&&(c.mode=da);break;case ia:if(0===j)break a;f[h++]=c.length,j--,c.mode=da;break;case ja:if(c.wrap){for(;n<32;){if(0===i)break a;i--,m|=e[g++]<<n,n+=8}if(p-=j,a.total_out+=p,c.total+=p,p&&(a.adler=c.check=c.flags?u(c.check,f,p,h-p):t(c.check,f,p,h-p)),p=j,(c.flags?m:d(m))!==c.check){a.msg=\"incorrect data check\",c.mode=ma;break}m=0,n=0}c.mode=ka;case ka:if(c.wrap&&c.flags){for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m!==(4294967295&c.total)){a.msg=\"incorrect length check\",c.mode=ma;break}m=0,n=0}c.mode=la;case la:xa=E;break a;case ma:xa=H;break a;case na:return I;case oa:default:return G}return a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,(c.wsize||p!==a.avail_out&&c.mode<ma&&(c.mode<ja||b!==A))&&l(a,a.output,a.next_out,p-a.avail_out)?(c.mode=na,I):(o-=a.avail_in,p-=a.avail_out,a.total_in+=o,a.total_out+=p,c.total+=p,c.wrap&&p&&(a.adler=c.check=c.flags?u(c.check,f,p,a.next_out-p):t(c.check,f,p,a.next_out-p)),a.data_type=c.bits+(c.last?64:0)+(c.mode===W?128:0)+(c.mode===ca||c.mode===Z?256:0),(0===o&&0===p||b===A)&&xa===D&&(xa=J),xa)}function n(a){if(!a||!a.state)return G;var b=a.state;return b.window&&(b.window=null),a.state=null,D}function o(a,b){var c;return a&&a.state?(c=a.state,0===(2&c.wrap)?G:(c.head=b,b.done=!1,D)):G}function p(a,b){var c,d,e,f=b.length;return a&&a.state?(c=a.state,0!==c.wrap&&c.mode!==V?G:c.mode===V&&(d=1,d=t(d,b,f,0),d!==c.check)?H:(e=l(a,b,f,f))?(c.mode=na,I):(c.havedict=1,D)):G}var q,r,s=a(\"../utils/common\"),t=a(\"./adler32\"),u=a(\"./crc32\"),v=a(\"./inffast\"),w=a(\"./inftrees\"),x=0,y=1,z=2,A=4,B=5,C=6,D=0,E=1,F=2,G=-2,H=-3,I=-4,J=-5,K=8,L=1,M=2,N=3,O=4,P=5,Q=6,R=7,S=8,T=9,U=10,V=11,W=12,X=13,Y=14,Z=15,$=16,_=17,aa=18,ba=19,ca=20,da=21,ea=22,fa=23,ga=24,ha=25,ia=26,ja=27,ka=28,la=29,ma=30,na=31,oa=32,pa=852,qa=592,ra=15,sa=ra,ta=!0;c.inflateReset=g,c.inflateReset2=h,c.inflateResetKeep=f,c.inflateInit=j,c.inflateInit2=i,c.inflate=m,c.inflateEnd=n,c.inflateGetHeader=o,c.inflateSetDictionary=p,c.inflateInfo=\"pako inflate (from Nodeca project)\"},{\"../utils/common\":28,\"./adler32\":30,\"./crc32\":32,\"./inffast\":35,\"./inftrees\":37}],37:[function(a,b,c){\"use strict\";var d=a(\"../utils/common\"),e=15,f=852,g=592,h=0,i=1,j=2,k=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],l=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],m=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],n=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];b.exports=function(a,b,c,o,p,q,r,s){var t,u,v,w,x,y,z,A,B,C=s.bits,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=null,O=0,P=new d.Buf16(e+1),Q=new d.Buf16(e+1),R=null,S=0;for(D=0;D<=e;D++)P[D]=0;for(E=0;E<o;E++)P[b[c+E]]++;for(H=C,G=e;G>=1&&0===P[G];G--);if(H>G&&(H=G),0===G)return p[q++]=20971520,p[q++]=20971520,s.bits=1,0;for(F=1;F<G&&0===P[F];F++);for(H<F&&(H=F),K=1,D=1;D<=e;D++)if(K<<=1,K-=P[D],K<0)return-1;if(K>0&&(a===h||1!==G))return-1;for(Q[1]=0,D=1;D<e;D++)Q[D+1]=Q[D]+P[D];for(E=0;E<o;E++)0!==b[c+E]&&(r[Q[b[c+E]]++]=E);if(a===h?(N=R=r,y=19):a===i?(N=k,O-=257,R=l,S-=257,y=256):(N=m,R=n,y=-1),M=0,E=0,D=F,x=q,I=H,J=0,v=-1,L=1<<H,w=L-1,a===i&&L>f||a===j&&L>g)return 1;for(var T=0;;){T++,z=D-J,r[E]<y?(A=0,B=r[E]):r[E]>y?(A=R[S+r[E]],B=N[O+r[E]]):(A=96,B=0),t=1<<D-J,u=1<<I,F=u;do u-=t,p[x+(M>>J)+u]=z<<24|A<<16|B|0;while(0!==u);for(t=1<<D-1;M&t;)t>>=1;if(0!==t?(M&=t-1,M+=t):M=0,E++,0===--P[D]){if(D===G)break;D=b[c+r[E]]}if(D>H&&(M&w)!==v){for(0===J&&(J=H),x+=F,I=D-J,K=1<<I;I+J<G&&(K-=P[I+J],!(K<=0));)I++,K<<=1;if(L+=1<<I,a===i&&L>f||a===j&&L>g)return 1;v=M&w,p[v]=H<<24|I<<16|x-q|0}}return 0!==M&&(p[x+M]=D-J<<24|64<<16|0),s.bits=H,0}},{\"../utils/common\":28}],38:[function(a,b,c){\"use strict\";b.exports={2:\"need dictionary\",1:\"stream end\",0:\"\",\"-1\":\"file error\",\"-2\":\"stream error\",\"-3\":\"data error\",\"-4\":\"insufficient memory\",\"-5\":\"buffer error\",\"-6\":\"incompatible version\"}},{}],39:[function(a,b,c){\"use strict\";function d(a){for(var b=a.length;--b>=0;)a[b]=0}function e(a,b,c,d,e){this.static_tree=a,this.extra_bits=b,this.extra_base=c,this.elems=d,this.max_length=e,this.has_stree=a&&a.length}function f(a,b){this.dyn_tree=a,this.max_code=0,this.stat_desc=b}function g(a){return a<256?ia[a]:ia[256+(a>>>7)]}function h(a,b){a.pending_buf[a.pending++]=255&b,a.pending_buf[a.pending++]=b>>>8&255}function i(a,b,c){a.bi_valid>X-c?(a.bi_buf|=b<<a.bi_valid&65535,h(a,a.bi_buf),a.bi_buf=b>>X-a.bi_valid,a.bi_valid+=c-X):(a.bi_buf|=b<<a.bi_valid&65535,a.bi_valid+=c)}function j(a,b,c){i(a,c[2*b],c[2*b+1])}function k(a,b){var c=0;do c|=1&a,a>>>=1,c<<=1;while(--b>0);return c>>>1}function l(a){16===a.bi_valid?(h(a,a.bi_buf),a.bi_buf=0,a.bi_valid=0):a.bi_valid>=8&&(a.pending_buf[a.pending++]=255&a.bi_buf,a.bi_buf>>=8,a.bi_valid-=8)}function m(a,b){var c,d,e,f,g,h,i=b.dyn_tree,j=b.max_code,k=b.stat_desc.static_tree,l=b.stat_desc.has_stree,m=b.stat_desc.extra_bits,n=b.stat_desc.extra_base,o=b.stat_desc.max_length,p=0;for(f=0;f<=W;f++)a.bl_count[f]=0;for(i[2*a.heap[a.heap_max]+1]=0,c=a.heap_max+1;c<V;c++)d=a.heap[c],f=i[2*i[2*d+1]+1]+1,f>o&&(f=o,p++),i[2*d+1]=f,d>j||(a.bl_count[f]++,g=0,d>=n&&(g=m[d-n]),h=i[2*d],a.opt_len+=h*(f+g),l&&(a.static_len+=h*(k[2*d+1]+g)));if(0!==p){do{for(f=o-1;0===a.bl_count[f];)f--;a.bl_count[f]--,a.bl_count[f+1]+=2,a.bl_count[o]--,p-=2}while(p>0);for(f=o;0!==f;f--)for(d=a.bl_count[f];0!==d;)e=a.heap[--c],e>j||(i[2*e+1]!==f&&(a.opt_len+=(f-i[2*e+1])*i[2*e],i[2*e+1]=f),d--)}}function n(a,b,c){var d,e,f=new Array(W+1),g=0;for(d=1;d<=W;d++)f[d]=g=g+c[d-1]<<1;for(e=0;e<=b;e++){var h=a[2*e+1];0!==h&&(a[2*e]=k(f[h]++,h))}}function o(){var a,b,c,d,f,g=new Array(W+1);for(c=0,d=0;d<Q-1;d++)for(ka[d]=c,a=0;a<1<<ba[d];a++)ja[c++]=d;for(ja[c-1]=d,f=0,d=0;d<16;d++)for(la[d]=f,a=0;a<1<<ca[d];a++)ia[f++]=d;for(f>>=7;d<T;d++)for(la[d]=f<<7,a=0;a<1<<ca[d]-7;a++)ia[256+f++]=d;for(b=0;b<=W;b++)g[b]=0;for(a=0;a<=143;)ga[2*a+1]=8,a++,g[8]++;for(;a<=255;)ga[2*a+1]=9,a++,g[9]++;for(;a<=279;)ga[2*a+1]=7,a++,g[7]++;for(;a<=287;)ga[2*a+1]=8,a++,g[8]++;for(n(ga,S+1,g),a=0;a<T;a++)ha[2*a+1]=5,ha[2*a]=k(a,5);ma=new e(ga,ba,R+1,S,W),na=new e(ha,ca,0,T,W),oa=new e(new Array(0),da,0,U,Y)}function p(a){var b;for(b=0;b<S;b++)a.dyn_ltree[2*b]=0;for(b=0;b<T;b++)a.dyn_dtree[2*b]=0;for(b=0;b<U;b++)a.bl_tree[2*b]=0;a.dyn_ltree[2*Z]=1,a.opt_len=a.static_len=0,a.last_lit=a.matches=0}function q(a){a.bi_valid>8?h(a,a.bi_buf):a.bi_valid>0&&(a.pending_buf[a.pending++]=a.bi_buf),a.bi_buf=0,a.bi_valid=0}function r(a,b,c,d){q(a),d&&(h(a,c),h(a,~c)),G.arraySet(a.pending_buf,a.window,b,c,a.pending),a.pending+=c}function s(a,b,c,d){var e=2*b,f=2*c;return a[e]<a[f]||a[e]===a[f]&&d[b]<=d[c]}function t(a,b,c){for(var d=a.heap[c],e=c<<1;e<=a.heap_len&&(e<a.heap_len&&s(b,a.heap[e+1],a.heap[e],a.depth)&&e++,!s(b,d,a.heap[e],a.depth));)a.heap[c]=a.heap[e],c=e,e<<=1;a.heap[c]=d}function u(a,b,c){var d,e,f,h,k=0;if(0!==a.last_lit)do d=a.pending_buf[a.d_buf+2*k]<<8|a.pending_buf[a.d_buf+2*k+1],e=a.pending_buf[a.l_buf+k],k++,0===d?j(a,e,b):(f=ja[e],j(a,f+R+1,b),h=ba[f],0!==h&&(e-=ka[f],i(a,e,h)),d--,f=g(d),j(a,f,c),h=ca[f],0!==h&&(d-=la[f],i(a,d,h)));while(k<a.last_lit);j(a,Z,b)}function v(a,b){var c,d,e,f=b.dyn_tree,g=b.stat_desc.static_tree,h=b.stat_desc.has_stree,i=b.stat_desc.elems,j=-1;for(a.heap_len=0,a.heap_max=V,c=0;c<i;c++)0!==f[2*c]?(a.heap[++a.heap_len]=j=c,a.depth[c]=0):f[2*c+1]=0;for(;a.heap_len<2;)e=a.heap[++a.heap_len]=j<2?++j:0,f[2*e]=1,a.depth[e]=0,a.opt_len--,h&&(a.static_len-=g[2*e+1]);for(b.max_code=j,c=a.heap_len>>1;c>=1;c--)t(a,f,c);e=i;do c=a.heap[1],a.heap[1]=a.heap[a.heap_len--],t(a,f,1),d=a.heap[1],a.heap[--a.heap_max]=c,a.heap[--a.heap_max]=d,f[2*e]=f[2*c]+f[2*d],a.depth[e]=(a.depth[c]>=a.depth[d]?a.depth[c]:a.depth[d])+1,f[2*c+1]=f[2*d+1]=e,a.heap[1]=e++,t(a,f,1);while(a.heap_len>=2);a.heap[--a.heap_max]=a.heap[1],m(a,b),n(f,j,a.bl_count)}function w(a,b,c){var d,e,f=-1,g=b[1],h=0,i=7,j=4;for(0===g&&(i=138,j=3),b[2*(c+1)+1]=65535,d=0;d<=c;d++)e=g,g=b[2*(d+1)+1],++h<i&&e===g||(h<j?a.bl_tree[2*e]+=h:0!==e?(e!==f&&a.bl_tree[2*e]++,a.bl_tree[2*$]++):h<=10?a.bl_tree[2*_]++:a.bl_tree[2*aa]++,h=0,f=e,0===g?(i=138,j=3):e===g?(i=6,j=3):(i=7,j=4))}function x(a,b,c){var d,e,f=-1,g=b[1],h=0,k=7,l=4;for(0===g&&(k=138,l=3),d=0;d<=c;d++)if(e=g,g=b[2*(d+1)+1],!(++h<k&&e===g)){if(h<l){do j(a,e,a.bl_tree);while(0!==--h)}else 0!==e?(e!==f&&(j(a,e,a.bl_tree),h--),j(a,$,a.bl_tree),i(a,h-3,2)):h<=10?(j(a,_,a.bl_tree),i(a,h-3,3)):(j(a,aa,a.bl_tree),i(a,h-11,7));h=0,f=e,0===g?(k=138,l=3):e===g?(k=6,l=3):(k=7,l=4)}}function y(a){var b;for(w(a,a.dyn_ltree,a.l_desc.max_code),w(a,a.dyn_dtree,a.d_desc.max_code),v(a,a.bl_desc),b=U-1;b>=3&&0===a.bl_tree[2*ea[b]+1];b--);return a.opt_len+=3*(b+1)+5+5+4,b}function z(a,b,c,d){var e;for(i(a,b-257,5),i(a,c-1,5),i(a,d-4,4),e=0;e<d;e++)i(a,a.bl_tree[2*ea[e]+1],3);x(a,a.dyn_ltree,b-1),x(a,a.dyn_dtree,c-1)}function A(a){var b,c=4093624447;for(b=0;b<=31;b++,c>>>=1)if(1&c&&0!==a.dyn_ltree[2*b])return I;if(0!==a.dyn_ltree[18]||0!==a.dyn_ltree[20]||0!==a.dyn_ltree[26])return J;for(b=32;b<R;b++)if(0!==a.dyn_ltree[2*b])return J;return I}function B(a){pa||(o(),pa=!0),a.l_desc=new f(a.dyn_ltree,ma),a.d_desc=new f(a.dyn_dtree,na),a.bl_desc=new f(a.bl_tree,oa),a.bi_buf=0,a.bi_valid=0,p(a)}function C(a,b,c,d){i(a,(L<<1)+(d?1:0),3),r(a,b,c,!0)}function D(a){i(a,M<<1,3),j(a,Z,ga),l(a)}function E(a,b,c,d){var e,f,g=0;a.level>0?(a.strm.data_type===K&&(a.strm.data_type=A(a)),v(a,a.l_desc),v(a,a.d_desc),g=y(a),e=a.opt_len+3+7>>>3,f=a.static_len+3+7>>>3,f<=e&&(e=f)):e=f=c+5,c+4<=e&&b!==-1?C(a,b,c,d):a.strategy===H||f===e?(i(a,(M<<1)+(d?1:0),3),u(a,ga,ha)):(i(a,(N<<1)+(d?1:0),3),z(a,a.l_desc.max_code+1,a.d_desc.max_code+1,g+1),u(a,a.dyn_ltree,a.dyn_dtree)),p(a),d&&q(a)}function F(a,b,c){return a.pending_buf[a.d_buf+2*a.last_lit]=b>>>8&255,a.pending_buf[a.d_buf+2*a.last_lit+1]=255&b,a.pending_buf[a.l_buf+a.last_lit]=255&c,a.last_lit++,0===b?a.dyn_ltree[2*c]++:(a.matches++,b--,a.dyn_ltree[2*(ja[c]+R+1)]++,a.dyn_dtree[2*g(b)]++),a.last_lit===a.lit_bufsize-1}var G=a(\"../utils/common\"),H=4,I=0,J=1,K=2,L=0,M=1,N=2,O=3,P=258,Q=29,R=256,S=R+1+Q,T=30,U=19,V=2*S+1,W=15,X=16,Y=7,Z=256,$=16,_=17,aa=18,ba=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],ca=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],da=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],ea=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],fa=512,ga=new Array(2*(S+2));d(ga);var ha=new Array(2*T);d(ha);var ia=new Array(fa);d(ia);var ja=new Array(P-O+1);d(ja);var ka=new Array(Q);d(ka);var la=new Array(T);d(la);var ma,na,oa,pa=!1;c._tr_init=B,c._tr_stored_block=C,c._tr_flush_block=E,c._tr_tally=F,c._tr_align=D},{\"../utils/common\":28}],40:[function(a,b,c){\"use strict\";function d(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg=\"\",this.state=null,this.data_type=2,this.adler=0}b.exports=d},{}]},{},[10])(10)});\n","/*\n * custom_activelist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomActiveList {\n   get key() {\n      return \"activelist\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.list, webix.ActiveContent);\n   }\n};\n","/*\n * countfooter\n *\n * Add the count footer to the webix's datatable.\n *\n */\n\nmodule.exports = class ABCountFooter {\n   get key() {\n      return \"countfooter\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {};\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {};\n\n      // Our webix UI definition:\n      var _ui = {};\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix :\n      webix.ui.datafilter.countColumn = webix.extend(\n         {\n            refresh: function (datatable, node, info) {\n               var result = 0;\n\n               var rowData = datatable.find({}) || [];\n               rowData.forEach((row) => {\n                  if (row == null) return;\n\n                  var data =\n                     row[info.columnId] || row[info.columnId + \"__relation\"];\n\n                  // array\n                  if (data && Array.isArray(data)) {\n                     result += data.length;\n                  } else if (\n                     data != null &&\n                     data != \"\" &&\n                     data != false &&\n                     data != \"false\" &&\n                     data != \"0\"\n                  ) {\n                     result += 1;\n                  }\n               });\n\n               node.innerHTML = result;\n            },\n         },\n         webix.ui.datafilter.summColumn\n      );\n   }\n};\n","/*\n * Custom Component Manager\n * Make sure our {ABComponent}s are initialized with our custom\n * Webix Components.\n */\n\n// Import our Custom Components here:\nvar componentList = [\n   require(\"./activelist\"),\n   require(\"./countfooter\"),\n   require(\"./datetimepicker\"),\n   require(\"./editlist\"),\n   require(\"./edittree\"),\n   require(\"./editunitlist\"),\n   require(\"./focusableTemplate\"),\n   require(\"./formioPreview\"),\n   require(\"./formioBuilder\").default,\n   require(\"./numbertext\"),\n   require(\"./thaicalendar\"),\n   require(\"./timepicker\"),\n   require(\"./tinyMce\").default,\n   require(\"./totalfooter\"),\n   require(\"./treesuggest\"),\n   // require('./savablelayout')\n];\n\nmodule.exports = class ABCustomComponentManager {\n   constructor() {}\n\n   initComponents(App) {\n      App.custom = App.custom || {};\n\n      componentList.forEach((Component) => {\n         var component = new Component(App);\n         App.custom[component.key] = component;\n      });\n\n      // Transition to v2:\n      App.AB.custom = App.custom;\n   }\n};\n","/*\n * custom_datetimepicker\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomDateTimePicker {\n   //.extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"datetimepicker\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: App.unique(\"custom_datetimepicker\"), // keep this unique for this App instance.\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.editors.$popup.datetime = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: \"calendar\",\n            icons: true,\n            borderless: true,\n            timepicker: true,\n         },\n      };\n\n      webix.editors.datetime = webix.extend(\n         {\n            popupType: \"datetime\",\n         },\n         webix.editors.date\n      );\n   }\n};\n","/*\n * custom_editlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"editlist\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.list);\n   }\n};\n","/*\n * custom_edittree\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditTree {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"edittree\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.tree);\n   }\n};\n","/*\n * custom_editunitlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditUnitList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"editunitlist\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n      /*\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n*/\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.unitlist);\n   }\n};\n","/*\n * custom_activelist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomFocusableTemplate {\n   get key() {\n      return \"focusabletemplate\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         focus: function () {\n            return false;\n         },\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.template, webix.UIManager);\n   }\n};\n","/*\n * formioBuilder\n *\n * Create a custom webix component.\n *\n * Note: Moved from ABDesigner to prevent loading formIO library globally or\n * duplicating it. Revisit when formIOv5 releases as it should then be possible\n * to package the form renderer without the builder.\n *\n * Note: This component is lazy loaded and requires calling .init() before using\n */\nimport ABLazyCustomComponent from \"./lazyComponent.js\";\nexport default class ABCustomFormBuilderBuilder extends ABLazyCustomComponent {\n   get key() {\n      return \"formiobuilder\";\n   }\n\n   constructor(App) {\n      super(App);\n      this.label = this.AB.Label();\n      this.view = this.key;\n   }\n\n   /**\n    * Load the FormIO dependency and add the component to webix\n    * @returns {Promise<null>}\n    */\n   async init() {\n      if (this.initialized) return;\n      const { FormBuilder } = await import(\n         /* webpackPrefetch: true */\n         /* webpackFetchPrioirtiy: \"low\" */\n         \"../init/formio.js\"\n      );\n      this.FormBuilder = FormBuilder;\n      // Tell Webix to create an INSTANCE of our custom component:\n      this.AB.Webix.protoUI(this.ui(), this.AB.Webix.ui.popup);\n      this.initialized = true;\n   }\n\n   /**\n    * Generate the custom webix ui\n    * @method ui\n    * @returns {Object} custom webix ui\n    */\n   ui() {\n      return {\n         name: this.key,\n         defaults: {\n            css: \"scrolly forceOpen\",\n            hidden: false,\n            autofit: true,\n         },\n         $init: async function (config) {\n            const comp = this.parseDataFields(config.dataFields);\n            const formComponents = config.formComponents\n               ? config.formComponents\n               : { components: [comp.approveButton.schema] };\n            try {\n               this.builder = new this.FormBuilder(this.$view, formComponents, {\n                  noDefaultSubmitButton: true,\n                  noNewEdit: true,\n                  builder: {\n                     basic: false,\n                     advanced: false,\n                     customBasic: false,\n                     premium: false,\n                     custom: {\n                        title: this.label(\"Fields\"),\n                        weight: 0,\n                        default: true,\n                        components: comp,\n                     },\n                     layout: {\n                        components: {\n                           table: true,\n                        },\n                     },\n                  },\n               });\n               await this.builder.ready;\n            } catch (err) {\n               this.notify(\"Error initializing formio builder\", err);\n            }\n         },\n         // set up a function that can be called to request the form schema\n         getFormData: function () {\n            return this.builder.schema;\n         },\n         // Pass functions into the Webix component to be use in $init\n         label: this.label,\n         parseDataFields: this.parseDataFields,\n         notify: this.AB.notify.developer,\n         FormBuilder: this.FormBuilder,\n      };\n   }\n\n   /**\n    * Generate the formio custom components based on the fields.\n    * Used internally in the webix component.\n    * @method parseDataFields\n    * @param {object[]} fields {field: ABField, key, label, object: ABObject}\n    * @returns {object} each key is a formio component\n    */\n   parseDataFields(fields) {\n      const components = {};\n      fields.forEach(({ field, key, label }) => {\n         if (!field) return;\n\n         const schema = {\n            abFieldID: field.id,\n            label: field.label,\n            disabled: true,\n            key,\n            _key: key,\n            type: \"textfield\",\n            input: true,\n         };\n\n         switch (field.key) {\n            case \"boolean\":\n               schema.type = \"checkbox\";\n               break;\n            case \"calculate\":\n               schema.inputType = \"text\";\n               schema.calculateValue = `value = ${field.settings.formula\n                  .replace(/{/g, \"data['\")\n                  .replace(/}/g, \"']\")}`;\n               break;\n            case \"connectObject\":\n               schema.inputType = \"text\";\n               schema.calculateValue = `value = data['${key}.format']`;\n               break;\n            case \"date\":\n               schema.type = \"datetime\";\n               schema.format = \"MMMM d, yyyy\";\n               break;\n            case \"datetime\":\n               schema.type = \"datetime\";\n               schema.format = \"MMMM d, yyyy h:mm a\";\n               break;\n            case \"email\":\n               schema.type = \"email\";\n               break;\n            case \"file\":\n               schema.type = \"htmlelement\";\n               schema.tag = \"a\";\n               schema.className = \"btn btn-primary btn-block\";\n               schema.content = `<i class='fa fa-paperclip'></i> {{data['${key}']?.filename ?? \"No File\"}}`;\n               schema.attrs = [\n                  {\n                     attr: \"href\",\n                     value: field.urlFile(`{{data['${key}'].uuid}}`),\n                  },\n                  {\n                     attr: \"target\",\n                     value: \"_blank\",\n                  },\n               ];\n               schema.refreshOnChange = true;\n               schema.input = false;\n               break;\n            case \"image\":\n               schema.type = \"htmlelement\";\n               schema.tag = \"img\";\n               schema.className = \"img-thumbnail max100\";\n               schema.content = \"\";\n               (schema.attrs = [\n                  {\n                     attr: \"src\",\n                     value: field.urlImage(`{{data['${key}']}}`),\n                  },\n               ]),\n                  (schema.refreshOnChange = true);\n               schema.input = false;\n               break;\n            case \"list\":\n               var values = [];\n               field.settings.options.forEach((opt) => {\n                  values.push({\n                     label: opt.text,\n                     value: opt.id,\n                  });\n               });\n               schema.type = \"select\";\n               schema.data = { values };\n               schema.multiple = field.settings.isMultiple;\n               break;\n            case \"LongText\":\n               schema.type = \"textarea\";\n               break;\n            case \"number\":\n               schema.type = \"number\";\n               break;\n            case \"TextFormula\":\n               schema.inputType = \"text\";\n               schema.calculateValue = `value = '${field.settings.textFormula}'`;\n               break;\n            default:\n               break;\n         }\n         components[key] = {\n            title: label,\n            key,\n            icon: field.icon,\n            schema,\n         };\n      });\n\n      components[\"approveButton\"] = {\n         title: this.label(\"Approve Button\"),\n         key: \"approve\",\n         icon: \"check-square\",\n         schema: {\n            label: this.label(\"Approve\"),\n            type: \"button\",\n            key: \"approve\",\n            event: \"approve\",\n            block: true,\n            size: \"lg\",\n            input: false,\n            leftIcon: \"fa fa-thumbs-up\",\n            action: \"event\",\n            theme: \"success\",\n         },\n      };\n      components[\"denyButton\"] = {\n         title: this.label(\"Deny Button\"),\n         key: \"deny\",\n         icon: \"ban\",\n         schema: {\n            label: this.label(\"Deny\"),\n            type: \"button\",\n            key: \"deny\",\n            event: \"deny\",\n            block: true,\n            size: \"lg\",\n            input: false,\n            leftIcon: \"fa fa-thumbs-down\",\n            action: \"event\",\n            theme: \"danger\",\n         },\n      };\n      components[\"customButton\"] = {\n         title: this.label(\"Custom Action Button\"),\n         key: \"custom\",\n         icon: \"cog\",\n         schema: {\n            label: this.label(\"Custom Name\"),\n            type: \"button\",\n            key: \"custom\",\n            event: \"yourEvent\",\n            block: true,\n            size: \"lg\",\n            input: false,\n            leftIcon: \"fa fa-cog\",\n            action: \"event\",\n            theme: \"primary\",\n         },\n      };\n      return components;\n   }\n}\n","/*\n * formioBuilder\n *\n * Create a custom webix component.\n *\n * Note: This component is lazy loaded and requires calling .init() before using\n *\n */\nconst ABLazyCustomComponent = require(\"./lazyComponent.js\");\nmodule.exports = class ABCustomFormIOPreview extends ABLazyCustomComponent {\n   get key() {\n      return \"formiopreview\";\n   }\n\n   async init() {\n      if (this.initialized) return;\n      const { Form } = await import(\n         /* webpackPrefetch: true */\n         /* webpackFetchPrioirtiy: \"low\" */\n         \"../init/formio.js\"\n      );\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         defaults: {\n            css: \"scrolly\",\n            borderless: true,\n         },\n         $init: async function (config) {\n            this.$ready.push(() => this.initForm(config));\n         },\n\n         initForm: async (config) => {\n            var formComponents = config.formComponents ?? {};\n            var formData = config.formData ?? {};\n            const component = $$(config.id);\n\n            // JOHNNY: we now have formio designs where we need to pull out\n            // more than just an .id from connected fields. Let's no longer\n            // do this:\n            // // we need to find out when we are passing an array of objects and reduce it down to an array of IDs\n            // for (var data in formData) {\n            //    if (\n            //       Array.isArray(formData[data]) &&\n            //       typeof formData[data][0] == \"object\"\n            //    ) {\n            //       formData[data] = formData[data].map((item) => item.id);\n            //    }\n            // }\n\n            const form = new Form(component.$view, formComponents);\n            // readOnly: true\n            // sanitizeConfig: {\n            //     addTags: [\"a\", \"label\", \"img\", \"i\"],\n            //     addAttr: [\"src\", \"href\", \"class\", \"target\"]\n            // }\n            // }).then(function (form) {\n            await form.build();\n            // now that it is set up we can push it into the global var\n            // formBuilder = builder;\n            // Provide a default submission.\n            form.instance.submission = {\n               data: formData,\n            };\n            (formComponents.components || []).forEach((comp) => {\n               if (\n                  comp.type == \"button\" &&\n                  comp.action == \"event\" &&\n                  comp.event\n               ) {\n                  form.instance.once(comp.event, function (/* click */) {\n                     config?.onButton(comp.event);\n                     // _this.emit(\"button\", comp.event);\n                  });\n               }\n            });\n            // });\n         },\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      this._logic = {};\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      this.AB.Webix.protoUI(_ui, this.AB.Webix.ui.view);\n      this.initialized = true;\n   }\n};\n","/**\n * Base class for any custom webix component that we want to initalize lazily,\n * usually to reduce the dependency size required on load.\n */\nvar ABEmitter = require(\"../AppBuilder/platform/ABEmitter.js\");\nmodule.exports = class ABLazyCustomComponent extends ABEmitter {\n   constructor({ AB }) {\n      super();\n      this.initialized = false;\n      this.AB = AB;\n      this.setDefaultUI();\n   }\n\n   /**\n    * Sets a default UI used before the actual webix component is ready. Meant as\n    * a helper to future developers.\n    */\n   setDefaultUI() {\n      this.AB.Webix.protoUI(\n         {\n            name: this.key,\n            defaults: {\n               template:\n                  \"This custom webix component has not been initialized. <br>Call AB.custom.#key#.init() before using this component.\",\n               data: { key: this.key },\n            },\n            $init: () =>\n               console.warn(\n                  `${this.key} custom webix component used before being initalized`\n               ),\n         },\n         this.AB.Webix.ui.template\n      );\n   }\n};\n","/*\n * numbertext\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomNumberText {\n   get key() {\n      return \"numbertext\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n\n         defaults: {\n            css: \"webix_el_text\",\n         },\n\n         // override this function to return number value type\n         $getValue: function () {\n            var val = this.getInputNode().value;\n            if (val) return JSON.parse(val);\n            // Convert to number\n            else return \"\";\n         },\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.text);\n   }\n};\n","/*\n * Thai Calendar\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomThaiCalendar {\n   get key() {\n      return \"thaicalendar\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      this.view = this.key;\n\n      const i18n = webix.i18n;\n\n      // Our webix UI definition:\n      const _ui = {\n         name: this.key,\n         defaults: {\n            calendarHeader: function (d) {\n               return `${i18n.calendar.monthFull[d.getMonth()]} ${\n                  d.getFullYear() + 543\n               }`;\n            },\n         },\n      };\n\n      if (webix.ui.calendar.$protoWait[0]._zoom_logic) {\n         _ui._zoom_logic = AB.cloneDeep(\n            webix.ui.calendar.$protoWait[0]._zoom_logic\n         );\n         _ui._zoom_logic[1] = Object.assign(_ui._zoom_logic[1], {\n            _getTitle: this._getYearTitle,\n         });\n         _ui._zoom_logic[2] = Object.assign(_ui._zoom_logic[2], {\n            _getTitle: this._getYearRangeTitle,\n            _getContent: this._getYearContent,\n            _setContent: this._setYear,\n         });\n      }\n\n      if (webix.ui.calendar.$protoWait[0].Qd) {\n         _ui.Qd = AB.cloneDeep(webix.ui.calendar.$protoWait[0].Qd);\n         _ui.Qd[1] = Object.assign(_ui.Qd[1], {\n            Jv: this._getYearTitle,\n         });\n         _ui.Qd[2] = Object.assign(_ui.Qd[2], {\n            Jv: this._getYearRangeTitle,\n            Zv: this._getYearContent,\n            Xv: this._setYear,\n         });\n      }\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.calendar);\n\n      webix.editors.$popup.thaidate = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: this.key,\n            icons: true,\n            borderless: true,\n            timepicker: false,\n         },\n      };\n\n      webix.editors.$popup.thaidatetime = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: this.key,\n            icons: true,\n            borderless: true,\n            timepicker: true,\n         },\n      };\n\n      webix.editors.thaidate = webix.extend(\n         {\n            popupType: \"thaidate\",\n         },\n         webix.editors.date\n      );\n\n      webix.editors.thaidatetime = webix.extend(\n         {\n            popupType: \"thaidatetime\",\n         },\n         webix.editors.date\n      );\n   }\n\n   _getYearTitle(date) {\n      return date.getFullYear() + 543;\n   }\n\n   _getYearRangeTitle(date, calendar) {\n      let start = date.getFullYear() + 543;\n      calendar._zoom_start_date = start = start - (start % 10) - 1;\n      return start + \" - \" + (start + 10 + 1);\n   }\n\n   _getYearContent(i, calendar) {\n      return calendar._zoom_start_date + i;\n   }\n\n   _setYear(next, i, calendar) {\n      next.setFullYear(calendar._zoom_start_date - 543 + i);\n   }\n};\n","/*\n * custom_timepicker\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomTimePicker {\n   //.extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"timepicker\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: App.unique(\"custom_timepicker\"), // keep this unique for this App instance.\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.editors.$popup.time = {\n         view: \"popup\",\n         body: {\n            view: \"calendar\",\n            width: 220,\n            height: 200,\n            type: \"time\",\n         },\n      };\n\n      webix.editors.time = webix.extend(\n         {\n            popupType: \"time\",\n         },\n         webix.editors.date\n      );\n   }\n};\n","/*\n * tinyMce\n *\n * Create a custom webix component.\n *\n * Note: This component is lazy loaded and requires calling .init() before using\n */\nimport ABLazyCustomComponent from \"./lazyComponent.js\";\nexport default class ABCustomTinyMCE extends ABLazyCustomComponent {\n   get key() {\n      return \"tinymce-editor\";\n   }\n\n   async init() {\n      if (this.initialized) return;\n\n      await import(\n         /* webpackPrefetch: true */\n         \"../js/webix/extras/tinymce.js\"\n      );\n      this.initialized = true;\n   }\n}\n","/*\n * totalfooter\n *\n * Add the contents of records to show in footer of the webix's datatable.\n *\n */\n\nmodule.exports = class ABTotalFooter {\n   get key() {\n      return \"totalfooter\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {};\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {};\n\n      // Our webix UI definition:\n      var _ui = {};\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix :\n      webix.ui.datafilter.totalColumn = webix.extend(\n         {\n            refresh: function (datatable, node, info) {\n               var result = 0;\n\n               datatable.eachRow(function (row) {\n                  var record = datatable.getItem(row);\n\n                  var data = info.field.format(record);\n\n                  // array\n                  if (data) {\n                     result += parseFloat(data); // we need to use parseFloat because numbers could be decimals\n                  }\n               });\n\n               node.innerHTML = result;\n            },\n         },\n         webix.ui.datafilter.summColumn\n      );\n   }\n};\n","/*\n * custom_editlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"treesuggest\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         defaults: {\n            type: \"tree\",\n            width: 0,\n            body: {\n               borderless: true,\n               select: true,\n               template: function (obj, common) {\n                  return (\n                     \"<span>\" +\n                     (obj.$count ? \"<b>\" + obj.value + \"</b>\" : obj.value) +\n                     \"</span>\"\n                  );\n               },\n               ready: function () {\n                  this.openAll();\n               },\n               on: {\n                  onAfterSelect: function (id, e) {\n                     if (this.getItem(id).$count) {\n                        this.getParentView().setMasterValue(\"\");\n                        this.show(\n                           $$(this.getParentView().config.master).getInputNode()\n                        );\n                     }\n                  },\n               },\n            },\n         },\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.suggest);\n   }\n};\n"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","EventEmitter","constructor","super","this","isAuthenticated","_config","_listRoles","_listScopes","_listUsers","init","AB","UserConfig","Config","userConfig","MetaConfig","metaConfig","roles","scopes","users","Network","on","context","err","data","console","error","emit","Promise","canSwitcheroo","r","uuid","length","isSwitcherood","userReal","isSystemDesigner","email","language","languageCode","logout","post","url","tenantUrl","Tenant","setting","key","fn","filter","rolesAll","username","userList","imageID","image_id","sendEmailNotifications","Alert","opts","webix","alert","title","Multilingual","label","text","message","ok","Confirm","labelYes","labelNo","cancel","confirm","callback","result","fnYes","fnNo","ConfirmDelete","Message","timeout","expire","MLClass","_missingLabelID","_missingLabels","_pluginLabelsMissing","isLabelUpdateEnabled","labels","labelConfig","_languages","languageConfig","pluginLabels","currentLanguage","Account","enableLabelUpdates","altText","values","postMissing","arguments","Array","isArray","replace","newKey","slice","postMissingLabel","forEach","v","i","sub","replaceAll","labelPlugin","plugin","languages","pluginLoadLabels","pluginLabelReport","warn","JSON","stringify","clearTimeout","sendBatch","batchLabels","missingLabels","k","l","shift","push","then","catch","toString","indexOf","setTimeout","destroy","save","toObj","toDefinition","Atomic","parent","wildcard","newListener","maxListeners","baseURL","numRetries","_network","isRealTime","options","siteConfig","appbuilder","urlCoreServer","networkNumRetries","get","params","jobResponse","type","useThese","search","val","encodeURIComponent","join","_request","put","isNetworkConnected","salSend","packet","_retry","notify","developer","publishResponse","reject","headers","authToken","Authorization","tenantID","method","statusText","Analytics","log","_err","status","responseText","parse","response","queue","resend","listSocketEvents","socketDataSave","HashSocketJobs","packets","keyBlacklist","ev","io","socket","__length","objectId","obj","objectByID","name","jobID","socketDataLog","blKey","parts","PK","blacklistKey","time","blacklist","model","performance","mark","op","normalizeData","measure","socketLog","socketLogClear","isConnected","route","query","match","http","undefined","toLowerCase","request","jwres","statusCode","errStr","body","Stringify","setMaxListeners","queueLock","_queueCount","cachJobResponse","Lock","networkType","queueFlush","idConnectionCheck","window","addEventListener","delete","_connectionCheck","isNetworkSlow","_networkSlow","registerNetworkTestWorker","worker","slow","_networkTestWorker","onmessage","setContext","category","level","networkStatus","navigator","connection","Connection","onLine","NONE","refQueue","queueCount","acquire","Storage","jID","set","release","logError","hasResponded","resCount","resNumber","processRequest","cb","entry","job","res","rej","done","reset","getTokens","tenantStorage","Webix","storage","prefix","local","value","clear","remove","clearAll","_storage","config","encrypted","textClickToEnter","tenantConfig","String","appListRowHeight","buttonWidthLarge","buttonWidthMedium","buttonWidthSmall","buttonWidthExtraSmall","tabWidthLarge","tabWidthMedium","tabWidthSmall","tabWidthExtraSmall","columnWidthXLarge","columnWidthLarge","columnWidthMedium","columnWidthSmall","columnWidthExtraSmall","xSmallSpacer","smallSpacer","mediumSpacer","largeSpacer","xLargeSpacer","xxLargeSpacer","xxxLargeSpacer","appListSpacerRowHeight","appListSpacerColMinWidth","appListSpacerColMaxWidth","objectWorkspaceColWidth","labelWidthSmall","labelWidthMedium","labelWidthLarge","labelWidthXLarge","labelWidthXXLarge","labelWidthXXXLarge","labelWidthCheckbox","hideMobile","innerWidth","icons","ABValidator","errors","addError","pass","fail","toValidationObject","invalidAttributes","attr","updateForm","form","vObj","Validation","isFormValidationError","updateGrid","rowID","grid","isGridValidationError","ABFactory","definitions","Dialog","ClassUI","Class","FilterComplex","ABViewManager","SortPopup","UISettings","validator","errorSailsCleanup","raw","hasFocused","attrs","wasForm","elements","msg","markInvalid","focus","row","Grid","wasGrid","addCellCss","refresh","clearSelection","Definitions","_plugins","_pendingNetworkRequests","fullDef","pending","pkt","newDef","definitionNew","serverDef","definitionCreate","_definitions","platformRules","toDate","dateText","ignoreTime","format","isValid","Date","toDateFormat","date","momentObj","localeCode","locale","subtractDate","number","unit","subtract","addDate","add","getUTCDayTimeRange","now","year","getFullYear","month","getMonth","getDate","startOfDay","endOfDay","startOfDayUTC","getTime","getTimezoneOffset","endOfDayUTC","formatDate","isoString","toISOString","concat","rules","allInits","all","_localSettings","json","definitionSync","def","definitionDestroy","definitionUpdate","domain","info","plugins","pluginLoad","p","cloneDeep","rest","emitData","Label","localSettings","isNil","isUUID","RegExp","test","merge","orderBy","uniq","kebabCase","sumBy","meanBy","maxBy","minBy","isString","ABMLClass","attributes","appType","versionData","versionNumber","changeLog","author","version","keepVersion","commitMessage","timestamp","icon","isSystemObject","roleAccess","isAccessManaged","accessManagers","isTranslationManaged","translationManagers","isTutorialManaged","tutorialManagers","hintIDs","objectIDs","queryIDs","datacollectionIDs","newPages","pageIDs","definitionByID","pageNew","appID","pageID","_pages","processIDs","pID","processByID","processID","objectListSettings","isOpen","searchText","sortDirection","isGroup","translations","fromValues","ViewManager","isAccessibleForRoles","foundRole","parseInt","useRole","role","pages","isWebApp","isMobile","datacollectionsExcluded","datacollections","datacollectionsIncluded","sort","sortFn","a","b","localeCompare","objectsExcluded","objects","objectsIncluded","hintsExcluded","hints","h","hintsIncluded","connectedObjects","connectedFields","connectFields","connectedObj","f","settings","linkObject","linkedObjects","currObjID","linkedObjectID","linkedFields","columnName","deep","_searchDeep","curr","items","resultsCurr","resultsP","processes","hasProcess","process","views","_views","subViews","lookDeep","view","pageViews","subPages","viewAll","allViews","queriesExcluded","queries","q","queriesIncluded","urlResolve","pointer","split","parseStep","steps","urlPointer","acrossApp","urlObject","urlPage","urlQuery","objectlistIsOpen","objectlistSearchText","objectlistSortDirection","objectlistIsGroup","newView","pageByID","viewNew","application","ABViewManagerMobile","ABApplication","pageDefault","DefaultValues","object","datasourceID","linkDatacollectionID","linkFieldID","followDatacollectionID","objectWorkspace","filterConditions","glue","sortFields","loadAll","populate","isQuery","fixSelect","syncType","__dataCollection","_dataCollectionNew","refreshFilterConditions","__bindComponentIds","__flexComponentIds","_dataStatus","dataStatusFlag","notInitial","__filterCond","__model","contextKey","preventPopulate","__datasource","queryByID","__treeCollection","_treeCollectionNew","__isGroup","removeFromApplications","next","apps","applications","allRemoves","app","datacollectionRemove","$dc","datasource","datacollection","sourceType","datacollectionLink","datacollectionByID","fieldLink","fieldByID","initializing","initialized","dataStatus","setCursor","itemId","setCursorTree","currTreeId","getCursor","currTreeItem","getItem","_itemId","dc","__previousCursorId","exists","tc","find","treeItem","$parent","treeCursor","currId","currItem","item","currItemAndChilds","serialize","refreshLinkCursor","getFirstRecord","getFirstId","getNextRecord","record","getNextId","force","linkCursor","dvLink","filterData","rowData","isParentFilterValid","setStaticCursor","currentUserUsername","userFields","fields","found","currRowId","rowId","count","isCursorFollow","dcFollow","datacollectionFollow","loadData","filterCondition","cond","___AD","onAfterCursorChange","attachEvent","currData","isRelated","relateData","needAdd","updatedVals","bad","ABObjectQuery","objList","where","newDataId","alias","objectAlias","rule","findAll","newQueryData","updatedV","skipDatasourceFilter","isValidData","__reloadWheres","bcids","$$","pos","getParentView","index","DC","addView","L","css","click","event","reloadData","removeView","parseTreeCollection","datasourceLink","d","updateItemData","updateRelateVal","relationName","rowRelateVal","valIsRelated","updateItem","updateRelationalDataFromLinkDC","incomingObj","iPK","newData","currCursor","needsRefresh","localField","colName","relName","linkType","rval","getRelationValue","newPacket","objectID","field","fieldID","needUpdate","isExists","updatedIds","updatedTreeIds","_queryUpdateData","updateCursor","ABObject","assign","dcItem","staleRefresh","deleteId","needDelete","deletedIds","deletedTreeIds","delId","updateRelateVals","relateVal","linkDC","eventAdd","emitter","eventName","listener","currentCursor","previousCursorId","isMyDataThere","shouldPopulate","valuesToAdd","valuesIn","valuesToRemove","followDC","followCursor","waitForDataCollectionToInitialize","eventRemove","start","limit","sorts","wheres","__additionalWheres","linkRule","ruleLinkedData","unshift","whereCleanUp","skip","parentDc","dcFilters","dv","_pendingLoadDataResolve","platformFind","processIncomingData","queuedParse","incomingData","total_count","nextData","remain","splice","parsedData","async","__totalCount","__throttleIncoming","load","reloadTimer","reloadPromise","reloadPromise__resolve","reloadPromise__reject","reloadWheres","getData","linkDv","linkObj","linkVal","totalCount","bind","unbind","removeComponent","comId","dataCollectionLink","linkCursorId","linkViaType","filterRule","__filterDatasource","filterComplexNew","fieldsLoad","setValue","__filterDatacollection","isAlreadyThere","allMatch","__filterScope","scopeList","userScopes","s","allowAll","objectIds","scopeRules","sRules","scopeWhere","syncTypeFlag","server","client","oItem","tran","updatedTran","tranKey","dcLink","cursorLink","linkedField","relatedData","newItem","clone","clonedDatacollection","parseMe","cursorID","filteredClone","filters","evt","__events","eventClear","removeListener","waitReady","builder","ABApplicationMobile","ABDefinition","ABComponent","ABFieldManager","ABIndex","ABObjectExternal","ABObjectImport","ABObjectApi","ABDataCollection","ABHint","ABProcess","ABProcessParticipant","ABProcessLane","ABProcessTaskManager","ABStep","ABViewDetailItem","ABViewFormItem","ABMobileViewFormItem","RowFilter","hash","_allApplications","_allObjects","_allHints","_allProcesses","_allQueries","_allSteps","_allDatacollections","nameFilter","toApplicationNameFormat","toFieldRelationFormat","toJunctionTableFK","objectName","fkName","substring","toJunctionTableNameFormat","appName","sourceTableName","targetTableName","toObjectNameFormat","definitionClean","allDefinitions","keyList","keyFn","objectKeysByDef","isRaw","definitionsParse","defs","applicationByID","ID","applicationNew","applicationMobileNew","datacollectionNew","fieldNew","newField","indexNew","objectNew","isExternal","isImported","isAPI","objectFile","objectLanguage","objectProcessDefinition","objectProcessForm","objectProcessInstance","objectRole","objectScope","objectToken","objectUser","objectKey","objectSecret","hintID","hintNew","stepID","stepNew","stepDef","hint","processNew","processElementNew","taskDef","defaults","newTask","processElementNewForModelDefinition","element","newElement","defaultDef","definitionForElement","fromElement","queryNew","rowfilterNew","App","idBase","_App","viewNewDetatched","_mockApp","_notifyInfo","moreInfo","fieldName","datacollectionID","datacollectionName","ds","datacollectionDSID","datacollectionDSName","processName","_tenantID","user","_user","taskID","taskName","applicationID","applicationName","viewID","viewName","viewKey","Fields","FIELD","allFields","fieldByKey","active","description","transition","showIntroStep","stepIDs","_steps","sID","ele","stepAdd","step","stepByID","stepRemove","stepIndex","unique","fieldIDs","_unknownFieldIDs","fId","attributeFieldIDs","indexName","dbTableName","uniqueName","ABEmitter","fieldList","mlFields","translate","defaultTranslations","language_code","languageDefault","unTranslate","currLanguage","first","t","foundOne","trans","_where","_sort","_skip","_limit","staleRefreshInProcess","staleRefreshMap","staleRefreshPending","staleRefreshTimerID","responseContext","contextValues","prepareMultilingualData","multilingualFields","shouldTranslate","urlParamsCreate","urlRest","urlParamsDelete","urlRestItem","urlParamsFind","urlParamsUpdate","urlRestCount","numberOfRows","currID","Err","staleRefreshProcess","currentEntries","responseHash","allKeys","findConnected","results","myObj","returnData","upsert","dateFields","calculatedFields","c","objectLink","olPK","relatedMlFields","subData","relationValue","calField","ABModelApi","readonly","apiType","isFetched","getPagingValues","pagingSettings","paging","dataFromKey","itemResult","dataKey","header","ABModel","ABObjectCore","connName","labelFormat","labelSettings","isNoLabelDisplay","tableName","primaryColumnName","transColumnName","urlPath","createdInAppID","frozenColumnID","hiddenFields","importedFieldIDs","_fields","importIndexes","indexIDs","_unknownIndex","indexes","_indexes","objectLinks","isConnection","fieldImport","fieldRemove","origLen","fid","fieldReorder","sourceId","targetId","itemMoved","oPos","j","fieldSave","fieldAdd","imageFields","isMultilingual","indexByID","indexRemove","idx","indexSave","urlRestBatch","urlRestLog","urlRestRefresh","workspaceSortFields","workspaceViews","currView","getCurrentView","workspaceFilterConditions","workspaceFrozenColumnID","workspaceHiddenFields","isReadOnly","defaultValues","defaultValue","urlField","remoteCreate","cloneOne","prop","minRelationData","colIds","colId","colIdNoBracket","defaultFld","fieldUseAsLabel","displayData","labelData","defaultField","trim","noLabelText","rawString","valField","newValue","cleanRule","ABModelQuery","__missingObject","__missingFields","__cantFilter","__duplicateFields","__linkProblems","alias2Obj","importJoins","joins","importFields","_objectWorkspaceViews","objectWorkspaceViews","grouping","hidePrefix","exportJoins","exportFields","fieldSettings","newFields","fieldInfo","objectByAlias","_objects","objID","canFilterField","isNew","clonedField","currFields","_joins","objectBase","links","_links","uniqueObjectIDs","newLinks","storeObject","storeLinks","link","processJoin","baseObject","linkField","rootObject","canFilterObject","linkedObject","isDisabled","disabled","_concat","ABProcessTaskSubProcess","onProcessReady","xmlDefinition","currElements","_elements","elementIDs","eID","_connections","connections","diagramID","modelDefinition","modelNew","modelUpdate","xml","allConnections","connectionForDiagramID","dID","connectionsIncoming","to","connectionsOutgoing","from","connectionRemove","connectionSimplyElement","bo","businessObject","sourceRef","targetRef","connectionUpsert","simpleConn","elementAdd","elementByID","elementForDiagramID","elementRemove","isTriggeredBy","taskForTriggerKey","connectionNextTask","currElement","connectionPreviousTask","processData","tasksToAsk","allPreviousTasks","queryPreviousTasks","processDataFields","parentFields","allPreviousConnectionsForConnection","conn","hashConn","allPreviousConnectionsForElement","prevConnections","task","prevTasks","processDataObjects","triggerKey","list","param","responses","processedIDs","apply","el","AllViews","Views","default","common","V","viewClass","getFieldVal","pureRelationName","isNaN","_settings","condition","_QueryFields","_Fields","_logic","callbacks","onChange","removeHtmlTags","div","document","createElement","innerHTML","textContent","innerText","condResult","ruleFieldType","connectedVal","extractVal","itemData","indexField","indexField2","fieldVal","getConnectFieldValue","textValid","dateValid","numberValid","listValid","booleanValid","userValid","connectFieldValid","thisObjectValid","compareValue","compareArray","queryFieldValid","setHours","Number","queryId","fieldId","qIdBase","inQueryFieldFilter","inQueryValid","inQueryFilter","dataCollectionValid","compareValueLowercase","listThisObjects","newRowData","_Object","processFieldsLoad","processFields","_ProcessFields","uiInit","fieldIsFilterable","thisObjOption","fieldsToQB","showObjectName","conditions","processFieldKeys","hasQueryField","isProcessParticipant","fieldsAddFiltersBoolean","fieldsAddFiltersConnectObject","isSource","fieldsAddFiltersString","opt","isCustomFK","fieldsAddFiltersQuery","fieldsAddFiltersDate","fieldsAddFiltersNumber","fieldsAddFiltersList","fieldsAddFiltersUser","fieldsAddFiltersThisObject","isRecordRule","fieldsAddFiltersRecordRule","processField","includes","processFieldId","pop","fieldsAddFiltersContext","fieldsAddFiltersCustom","dateConditions","less","component","beforeCondition","greater","afterCondition","less_or_equal","onOrBeforeCondition","greater_or_equal","onOrAfterCondition","is_current_date","isCurrentDateCondition","less_current","beforeCurrentCondition","greater_current","afterCurrentCondition","less_or_equal_current","onOrBeforeCurrentCondition","greater_or_equal_current","onOrAfterCurrentCondition","last_days","onLastDaysCondition","next_days","onNextDaysCondition","is_empty","isEmpty","is_not_empty","isNotEmpty","condKey","batch","handler","stringConditions","contains","containsCondition","not_contains","notContainsCondition","equals","isCondition","not_equal","isNotCondition","numberConditions","equalCondition","notEqualCondition","lessThanCondition","moreThanCondition","lessThanOrEqualCondition","moreThanOrEqualCondition","listConditions","equalListCondition","notEqualListCondition","booleanConditions","checked","checkedCondition","unchecked","notCheckedCondition","userConditions","is_current_user","isCurrentUserCondition","is_not_current_user","isNotCurrentUserCondition","contain_current_user","containsCurrentUserCondition","not_contain_current_user","notContainsCurrentUserCondition","connectConditions","same_as_user","sameAsUser","not_same_as_user","notSameAsUser","in_data_collection","inDataCollection","not_in_data_collection","notInDataCollection","queryConditions","in_query_field","inQueryField","not_in_query_field","notInQueryField","in_query","inQuery","not_in_query","notInQuery","thisObjectConditions","recordRuleConditions","same_as_field","sameAsField","not_same_as_field","notSameAsField","contextConditions","context_equals","equalsProcessValue","context_not_equal","notEqualsProcessValueCondition","context_in","inProcessValueCondition","context_not_in","notInProcessValueCondition","_customOptions","queriesLoad","_Queries","getValue","isComplete","noValueRules","isCompleteRules","returnSingular","columnId","config_settings","queryValid","ABField","ABFieldAutoIndexDefaults","isFilterable","isSortable","menuName","supportRequire","supportUnique","useAsLabel","compatibleOrmTypes","compatibleMysqlTypes","delimiter","displayLength","previewText","getDelimiterSign","delimiterItem","delimiterList","sign","setValueToIndex","displayNumber","ABFieldBooleanDefaults","AGE","dateString","dataDate","diffYears","Math","round","floor","YEAR","MONTH","DAY","DATE","HOUR","MINUTE","MINUTE_TO_HOUR","mins","hours","rhours","minutes","rminutes","parseFloat","ABFieldCalculateDefaults","formula","decimalSign","decimalPlaces","ABFieldCalculateCore","convertToJs","place","recalculate","numberVal","calVal","dateVal","booleanVal","eval","toFixed","ABFieldCombinedDefaults","combinedFields","getCombinedFields","fld","connectVal","connectLabel","ABFieldConnectDefaults","linkColumn","fieldDefaults","names","configError","pullRelationValues","selectedData","dataValue","propName","forUpdate","reservedNames","fieldKey","fieldOrmTypes","fieldMysqlTypes","fieldIcon","fieldMenuName","fieldDescription","fieldIsSortable","fieldSupportRequire","fieldSupportQuery","supportQuery","defaultCheck","defaultVal","returnVal","showIcon","required","width","myDef","ABFieldDateDefaults","dateFormat","defaultDate","defaultDateValue","validateCondition","validateRangeUnit","validateRangeBefore","validateRangeAfter","validateStartDate","validateEndDate","dateResult","currentDate","prototype","call","isFinite","startDate","endDate","startDateDisplay","getDateDisplay","endDateDisplay","minDate","maxDate","exportValue","dateObj","getFormat","dateFormatString","dateData","dateToString","RegEx","ABFieldDateCore","timeFormat","defaultTime","defaultTimeValue","baseDefault","currDate","getHours","setMinutes","getMinutes","setSeconds","getSeconds","setMilliseconds","getMilliseconds","getTimeFormat","datetimeFormat","dateToStr","ABFieldEmailDefaults","defaultCheckbox","Reg","ABFieldFileDefaults","removeExistingData","fileSize","fileType","limitFileSize","limitFileType","filename","requestParam","allParameters","myParameter","ABFieldFormulaDefaults","reCalculate","isGrouped","reformat","numData","rowDataFormat","fieldBase","filterHelper","numberList","decimalSize","getDecimalSize","multiplier","pow","sum","max","min","_rowFilter","ABFieldImageDefaults","useWidth","imageWidth","useHeight","imageHeight","useDefaultImage","defaultImageUrl","ABFieldJsonDefaults","ABFieldListDefaults","isMultiple","hasColors","multipleDefault","pendingDeletions","defaultVals","hex","optTran","ABFieldLongTextDefaults","MAX_CHAR_LENGTH","supportMultilingual","ABFieldNumberDefaults","typeFormat","typeDecimals","typeDecimalPlaces","typeRounding","typeThousands","validation","validateMinimum","validateMaximum","formatList","iL","position","places","n","errMessage","formatSign","thousandsSign","postfix","digit","formatNumber","groupDelimiter","groupSize","decimalDelimiter","negativeSign","dataStr","abs","integerStr","decimalStr","integerValue","substr","decimalVal","ABFieldStringDefaults","ABFieldTextFormulaDefaults","textFormula","setValueToFormula","formulaString","fieldRegExp","matches_field_array","autoIndexVal","setBuildinValueToFormula","matches_buildin_array","buildinList","getBuildInFunction","formula_array","isBracketInBracket","functionName","parameters_array","isMatch","resultParameters","parameter_size","getLeft","getRight","getMid","getTrim","getTrimLeft","getTrimRight","getLength","getRegExpReplace","trimLeft","getExtractRegex","getReplace","getLower","getUpper","getCapitalize","getRandom","getNumberToWords","getDateDayOfWeekName","getDateMonthOfYearName","getFormatDate","string","endPosition","endposition","reverseStr","reverseString","reverse","startPosition","trimRight","regexp","replaceString","extractResult","searchValue","replaceValue","toUpperCase","charAt","random","units","tens","scales","end","chunks","chunksLen","chunk","ints","word","words","resultFormula","ABFieldSelectivity","ABFieldTreeDefaults","ABFieldConnect","ABFieldUserDefaults","USERNAME_FIELD_ID","editable","isCurrentUser","isShowProfileImage","isShowUsername","isUser","ABMobileView","ABMobilePageDefaults","ABPropertyComponentDefaults","defaultPage","hideTitle","hideTabs","myAppID","menuType","DV","missingPageID","allPageDeletes","allPages","pageRemove","pageInsert","setPageDefault","refreshInstance","page","updateIcon","lookUpIds","mapNewIdFn","copy","ABMobileViewDefaults","labelKey","tabicon","ABViewPropertyComponentDefaults","warningsSilent","__missingViews","newInstance","viewIcon","tabIcon","viewIDs","isRoot","height","x","y","dx","dy","allParents","parents","curView","parentFormComponent","parentDetailComponent","detail","pageParent","filterFn","parentPage","pageRoot","rootPage","dataviewID","_currentObject","errNoDCID","errNoDC","viewByID","viewRemove","viewInsert","viewReorder","viewId","toPosition","findIndex","allViewDeletes","wantsAdd","copyUpdateProperyList","ignoreSubPages","copiedSubPage","ignoreSubViews","copiedView","newName","allSaves","p2","vi","ABViewFormButtonPropertyComponentDefaults","includeSave","saveLabel","includeCancel","cancelLabel","includeReset","resetLabel","afterCancel","alignment","isDefault","ABViewFormButtonDefaults","ABMobileViewFormCheckboxPropertyComponentDefaults","ABMobileViewFormCheckboxDefaults","ABMobileViewFormConnectPropertyComponentDefaults","formView","popupWidth","popupHeight","ABMobileViewFormConnectDefaults","ABRecordRule","ABSubmitRule","ABViewFormDefaults","ABViewFormPropertyComponentDefaults","showLabel","labelPosition","labelWidth","clearOnLoad","clearOnSave","displayRules","editForm","recordRules","submitRules","objectLoad","componentList","viewsToAllow","fieldComponents","flattenComponents","components","comp","addFieldToForm","yPosition","fieldComponent","formComponentMobile","RecordRule","_recordRule","formLoad","fromSettings","recordRulesReady","rulesReady","doRecordRulesPre","processPre","doRecordRules","doSubmitRules","SubmitRules","ABViewFormCustomPropertyComponentDefaults","ABViewFormCustomDefaults","ABMobileViewFormDatepickerPropertyComponentDefaults","timepicker","ABMobileViewFormDatepickerDefaults","ABMobileViewFormDatetimePropertyComponentDefaults","ABMobileViewFormDatetimeDefaults","ABMobileViewFormEmailPropertyComponentDefaults","ABMobileViewFormEmailDefaults","ABViewFormFilePropertyComponentDefaults","ABViewFormFileDefaults","ABViewFormFormulaPropertyComponentDefaults","ABViewFormFormulaDefaults","ABMobileViewFormFile","ABViewFormImagePropertyComponentDefaults","ABViewImageFileDefaults","ABViewFormFieldPropertyComponentDefaults","disable","ABMobileViewFormNumberPropertyComponentDefaults","isStepper","ABMobileViewFormNumberDefaults","ABMobileViewFormCustom","ABMobileViewFormReadonlyPropertyComponentDefaults","ABMobileViewFormReadonlyDefaults","ABMobileViewFormSelectSingle","ABMobileViewFormSelectMultiplePropertyComponentDefaults","ABMobileViewFormSelectMultipleDefaults","ABMobileViewFormSelectSinglePropertyComponentDefaults","ABMobileViewFormSelectSingleDefaults","ABViewFormTextboxPropertyComponentDefaults","placeholder","ABViewFormTextboxDefaults","ABViewLabelPropertyComponentDefaults","ABViewDefaults","formatNormal","formatTitle","formatDescription","ABViewListPropertyComponentDefaults","linkPageAdd","ABProcessLaneDefaults","ABProcessParticipantDefaults","validChecker","attribute","laneIDs","stashed","useAccount","account","useField","userField","Tasks","DEFINITIONTYPES","AllProcessElements","ELEMENT","DiagramReplace","target","eventDefinitionType","allTasks","tasks","DiagramReplaceDefinitionsForType","StartEvents","Gateways","EndEvents","eventDefinitions","$type","state","laneDiagramID","errorConfig","instance","initState","instanceValues","taskState","isEndTask","allArgs","myLane","myState","nextTasks","myDiagramObj","hashDiagramObjects","onError","exitFlows","tasksFromFlow","flow","flowObj","targetIDs","tid","targetTask","hashProcessDataValues","listDataFields","currentProcessValues","_prevState","stateCompleted","stateUpdate","wantToDoSomething","startElements","elem","previousElements","objectOfStartElement","startElem","objectOfPrevElement","prevElem","qlObj","ABProcessElement","ABProcessTaskEndDefaults","actionName","className","triggered","ABProcessGatewayExclusiveDefaults","ABProcessTaskEmailDefaults","myDefaults","subject","AccountingBatchProcessingDefaults","AccountingFPCloseDefaults","AccountingFPYearCloseDefaults","AccountingJEArchiveDefaults","CalculateDefaults","_fakeNum","_fakeObj","ABProcessTaskServiceDefaults","ABProcessTaskGetResetPasswordUrlDefaults","InsertRecordDefaults","isRepeat","startElement","currProcess","previousElement","fieldRepeat","repeatColumn","ABQLManager","ABProcessTaskServiceQueryDefaults","_datasources","fromAttributes","registerDatasource","processDataField","SubProcessDefaults","NOSPAM","isExpanded","isEnable","_unknownElementIDs","processTask","connectionAttrs","parameterId","dataFieldsAll","dataFieldOpt","dataFieldsAllInserted","previousFields","startsWith","stateData","returnField","ABFieldList","ABProcessTaskApprovalDefaults","fixBoolean","formBuilder","preProcessFormIOComponents","abFieldID","vals","path","pluck","action","myID","listField","ABProcessTaskUserDefaults","ui","ABProcessTaskUserExternalDefaults","who","toUsers","ABProcessTriggerDefaults","ABProcessTrigger","ABProcessTaskTriggerLifecycleDefaults","lifecycleKey","repeatEvery","repeatTime","repeatDaily","repeatWeekly","repeatMonthly","isEnabled","timeVals","setUTCHours","setUTCMinutes","getUTCHours","getCronExpression","day","dayWeek","minute","hour","parameterDefinitions","prevOP","objectOut","initObject","objectLookup","nextOP","NextQLOps","OP","qlOP","quotedLabel","availableProcessDataFieldsHash","availableProcessDataFields","hashFieldIDs","paramChanged","pDef","ABQL","ParameterDefinitions","ABQLFindCore","ABQLManagerCore","matchingOPs","QLOps","Op","ABQLObjectCore","objNameDef","warningMessage","QLUpdate","QLSave","QLPluck","ABQLSetPluck","ABQLRowUpdate","ABQLRowSave","ABQLRowPluckCore","nextQLOps","NextQLOp","ABQLSetSave","ABQLRowSaveCore","ABQLRowUpdateCore","ABQLRow","ABQLSetFirstCore","ABQLSetPluckCore","objectOutID","ABQLSetSaveCore","taskParam","registered","task_param","ABViewWidget","ABViewCSVExporterDefaults","ABViewCSVExporterPropertyComponentDefaults","buttonLabel","hasHeader","hiddenFieldIds","ABViewCSVImporterDefaults","ABViewCSVImporterPropertyComponentDefaults","availableFieldIds","rowDatas","ABViewCarouselPropertyComponentDefaults","hideItem","hideButton","navigationType","filterByCursor","detailsPage","detailsTab","editPage","editTab","parseIntOrDefault","_this","parseOrDefault","imageField","ABViewChartContainer","ABViewChartAreaPropertyComponentDefaults","areaType","isLegend","chartHeight","labelFontSize","stepValue","maxValue","ABViewChartBarPropertyComponentDefaults","barType","barPreset","ABViewContainer","ABViewChartPropertyComponentDefaults","columnValue","columnLabel","columnValue2","isPercentage","multipleSeries","ABViewChartDefaults","labelField","valueField","valueField2","ABViewChartLinePropertyComponentDefaults","lineType","linePreset","ABViewChartPiePropertyComponentDefaults","pieType","innerFontSize","ABViewCommentPropertyComponentDefaults","columnUser","columnComment","columnDate","getCurrentUserId","userObject","getUsers","currentUser","image","getUserField","getCommentField","getDateField","getUserData","UserImageField","imageURL","urlImage","ABViewPropertyDefaults","ifPanel","removable","elsePanel","ABViewConnectDataFilterPropertyComponentDefaults","ABView","columns","gravity","movable","viewsSortByPosition","accessLevels","accessibleRoles","getUserAccess","accessLevel","isAccessManager","currentRole","urlView","updateAccessLevels","roleId","viewDestroy","ABViewDataFilterPropertyComponentDefaults","viewType","showFilter","showSort","ABViewDataSelectPropertyComponentDefaults","ABViewDetail","ABViewDataviewPropertyComponentDefaults","xCount","ABViewDataviewDefaults","dataview","ABViewDetailCheckboxPropertyComponentDefaults","ABViewDetailCheckboxDefaults","ABViewDetailPropertyComponentDefaults","ABViewDetailDefaults","addFieldToDetail","detailComponent","ABViewDetailCustomPropertyComponentDefaults","ABViewDetailCustomDefaults","ABViewDetailImagePropertyComponentDefaults","ABViewDetailImageDefaults","detailView","getCurrentData","detailCom","ABViewDetailTextPropertyComponentDefaults","ABViewDetailTextDefaults","ABViewDetailTreeDefaults","ABViewDocxBuilderPropertyComponentDefaults","buttonlabel","filelabel","toolbarBackground","buttonPosition","uploadUrl","downloadUrl","dvList","includeDelete","deleteLabel","ABViewFormCheckboxPropertyComponentDefaults","ABViewFormCheckboxDefaults","ABViewFormConnectPropertyComponentDefaults","ABViewFormConnectDefaults","formComponent","ABViewFormDatepickerPropertyComponentDefaults","ABViewFormDatepickerDefaults","ABViewFormJsonPropertyComponentDefaults","ABViewFormJsonDefaults","ABViewFormNumberPropertyComponentDefaults","ABViewFormNumberDefaults","ABViewFormCustom","ABViewFormReadonlyPropertyComponentDefaults","ABViewFormReadonlyDefaults","ABViewFormSelectMultiplePropertyComponentDefaults","ABSelectMultipleDefaults","ABViewFormSelectSinglePropertyComponentDefaults","ABSelectSingleDefaults","ABViewFormTreePropertyComponentDefaults","ABTreeDefaults","ABViewGanttPropertyComponentDefaults","titleFieldID","startDateFieldID","endDateFieldID","durationFieldID","progressFieldID","notesFieldID","ABViewGridPropertyComponentDefaults","padding","showToolbar","isEditable","massUpdate","allowDelete","isExportable","trackView","summaryColumns","countColumns","gridFilter","filterOption","userFilterPosition","isGlobalToolbar","hideHeader","labelAsField","hideButtons","groupBy","columnConfig","saveLocal","settingsDefault","base","settingsDefaultJSON","owFields","removeField","shouldSave","ABViewImagePropertyComponentDefaults","ABViewKanbanPropertyComponentDefaults","editFields","verticalGroupingField","horizontalGroupingField","ownerField","template","textTemplate","TextTemplate","PropertyComponentDefaults","numColumns","addColumn","isEdited","ABViewMenuPropertyComponentDefaults","orientation","buttonStyle","menuAlignment","menuInToolbar","menuPadding","menuTheme","menuPosition","menuTextLeft","menuTextRight","menuTextCenter","order","ABMenuDefaults","isChecked","pageId","ClearPagesInView","AddPagesToView","displayPage","existsPage","tabId","existsTab","getAliasname","menuItem","getSubMenu","getMenuItem","submenu","pageInfo","lang","translation","aliasname","getParentPageId","tabView","currentView","ABViewOrgChartPropertyComponentDefaults","direction","depth","color","pan","zoom","export","exportFilename","ABViewOrgChartDefaults","getValueFields","valueFields","fieldValues","ABViewPDFImporterPropertyComponentDefaults","pageWidth","fixedPageWidth","pageBackground","getPageActionKey","ABViewPivotPropertyComponentDefaults","removeMissed","totalColumn","separateLabel","structure","ABViewReportManagerPropertyComponentDefaults","dataviewFields","editMode","hideCommonTab","hideDataTab","hideViewTab","parsedSettings","key1","key2","ABViewSchedulerPropertyComponentDefaults","allDay","repeat","calendar","sectionID","unitID","notes","originID","calendarDataviewID","calendarDataviewFields","timeline","week","agenda","timelineSectionList","unitList","excel","csv","pdf","_object","scheduler","ABViewTabPropertyComponentDefaults","minWidth","stackTabs","darkTheme","sidebarWidth","sidebarPos","iconOnTop","ABViewTabDefaults","addTab","tabName","ABViewTextPropertyComponentDefaults","displayText","componentID","clearTemplateValue","fData","columnSpan","rowSpan","ABApplicationCore","ABViewPage","_handler_page_updated","definition","pg","applicationForID","errDepreciated","definitionForID","areaKey","newObj","_listInsert","entity","_listRemove","begLen","datacollectionInsert","objectInsert","objectRemove","processInsert","processRemove","queryInsert","queryRemove","exportIDs","ids","parseView","pid","pdef","vid","vdef","warningsEval","checks","warningsMessage","allRoles","warningsAll","warnings","_warnings","ABApplicationMobileCore","ABViewPageMobile","newPage","oldPage","CustomComponentManager","uid","actions","custom","create","edit","formName","import","rename","yes","no","none","close","defaultPlaceholder","invalidMessage","createErrorMessage","createSuccessMessage","updateErrorMessage","updateSucessMessage","deleteErrorMessage","deleteSuccessMessage","renameErrorMessage","renameSuccessMessage","dataFieldHeaderLabel","dataFieldHeaderLabelPlaceholder","dataFieldLabel","dataFieldLabelPlaceholder","dataFieldColumnName","dataFieldColumnNamePlaceholder","dataFieldShowIcon","componentDropZone","initComponents","_actions","ABDataCollectionCore","datacollectionId","bindParentDc","define","cursorUpdated","__prevLinkDcCursor","hideProgressOfComponents","attachFlexlayout","showProgress","sync","onDataRequestEvent","loadNext","unsync","detachEvent","onDcLoadData","off","hideProgress","DataCollection","_extendCollection","treeStore","TreeCollection","dataStore","extend","SelectionModel","onAfterLoadEvent","addCss","removeCss","render","onAfterLoad","addRowToTree","parentAlias","dataId","parentItemIds","parentId","_alias","_dataId","treeNode","parentItemId","boundComp","datacollectionById","ABDefinitionCore","ABHintCore","allSteps","allDestroy","hintIndex","createHintUI","display","cookie","hide","dontShow","newStep","nextEl","hintId","eventEl","theNextEl","querySelector","checkVisibility","onNext","boxes","querySelectorAll","onPrevious","delay","ABIndexCore","migrateCreate","migrateDrop","ABMLClassCore","ABModelCore","errorPopup","no_socket_trigger","handler_create","handler_common","handler_delete","handler_findAll","handler_logs","handler_update","batchCreate","once","newVal","nestedRules","loadInto","DT","logs","update","batchUpdate","rowIds","_handler_object_migrate","fromObj","hasOwnProperty","disableRelatedQueries","fieldDrops","skipMigrate","isAdd","columnResize","newWidth","columnHeaders","isObjectWorkspace","hiddenFieldNames","columnHeader","validationRules","adjust","footer","content","customDisplays","DataTable","eachColumn","node","getItemNode","column","customDisplay","allWarnings","w","isUuid","getDbInfo","formCleanValues","formCleanData","atomicjs","ABObjectApiCore","fetchData","insertDataMax","verb","withCredentials","parsedResponse","pendingModelCreate","ABObjectQueryCore","conditionScan","fieldEntry","oldWidth","originTemplate","_conditionCheck","isConditionComplete","ABProcessCore","_unknownShapes","allElements","appsWithProcess","_new","_old","needSave","elementNewForModelDefinition","unknownShape","shape","unknownShapeRemove","_DOMParser","DOMParser","xmlStr","parseFromString","ActiveXObject","xmlDoc","loadXML","getElementsByTagName","ABStepCore","ABViewManagerCore","ABViewManagerMobileCore","getSeparateItems","validateFile","fileInfo","file","extensionType","getDataRows","separatedBy","reader","FileReader","onload","dataCols","dCol","readAsText","getGuessDataType","dataRows","colIndex","line","str","FilterComplexCore","_toInternal","_toExternal","_uiQueryOptionId","_uiFieldOptionId","_options","_initComplete","observing","and","or","thisObject","inQueryFieldQueryPlaceholder","inQueryFieldFieldPlaceholder","contextDefaultOption","popup","querybuilder","recordRuleFieldOptions","rows","borderless","hidden","isSaveHidden","myPopup","__blockOnChange","getState","$observe","_cond","helper","$query","getFilterFunction","qbSettings","il8n","dateFormatStr","toShortHand","uiQueryCustomValue","enable","$el","$filterView","$app","require","_fnBaseGetValue","GetValue","queryOptId","fieldOptId","selectedQueryId","selectedFieldId","CreateFilter","inputs","uiValue","localId","mode","parser","i18n","margin","getService","$queryOpt","$fieldOpt","fieldColumnName","uiQueryValue","uiDataCollectionValue","uiCustomValue","uiContextValue","uiNoneValue","uiUserValue","uiListValue","LinkType","uiTextValue","uiQueryFieldValue","uiRecordRuleValue","uiBooleanValue","onAfterRender","queryView","$view","style","zIndex","isQueryField","u","linkObjectId","qOpts","pullFieldOption","Query","fieldOptions","qVal","$fieldOption","getChildViews","refreshFieldOption","processFieldKey","pField","popUp","show","addCustomOption","RowFilterCore","filterForm","addNewFilter","inputValue","queryCombo","queryFieldCombo","queryFieldComboQuery","queryFieldComboField","fieldMatch","dataCollection","listOptions","datePicker","batchName","queryFieldOptions","recordRuleOptions","getFieldList","getFilterUI","isolate","cols","oldVal","selectCombineCondition","suggest","onBeforeShow","resize","$viewCond","selectField","cells","oldValue","onChangeRule","onChangeQueryFieldCombo","validate","isNumber","onTimedKeyPress","autowidth","indexView","getFormView","removeNewFilter","getAddButtonUI","$viewForm","toggleAddNewButton","ignoreNotify","showBatch","Queries","ruleViewId","getActiveId","$viewComparer","getList","defaultOpt","dcOptions","_Application","blockOnChange","unblockOnChange","$fieldElem","selectedOpt","getPopup","valueViewId","$viewConditionValue","dateField","logic","col","blockEvent","unblockEvent","_completeConditions","ABViewForm","RowUpdater","addNew","_mockFormWidget","uiItem","self","$viewItem","maxWidth","_extendedOptions","toggleCustomProcessOption","removeItem","addItem","$form","ProgressBar","toggleForm","excludeSelected","$viewContainer","$customValueElem","_pullInputElement","$processValueElem","isVisible","isProcessValue","formFieldComponent","childViews","inputView","busy","getOptions","labelRight","layout","ready","$field","setExtendedOptions","showProcessOption","$customOption","$processOption","$elem","childView","ABFieldCore","editorValues","addValidation","Filter","filterComplex","fnMigrate","migrateUpdate","customEdit","formKey","FC","getSettings","ABFieldAutoIndexCore","editor","$group","detailComponentSetting","ABFieldBooleanCore","checkbox","ABFieldCombineCore","ABFieldConnectCore","multiselect","editFormat","editParse","openOptions","button","$suggest","$list","getAndPopulateOptions","whereClause","term","theEditor","_getOptionsThrottle","_timeToPullData","_getOptionsResolve","haveResolved","respond","linkedObj","linkedCol","linkedModel","showAllOptions","getStorageID","storedOptions","selected","linkViaOneValues","whereRels","sortRels","clearStorage","storageID","itemObj","getItemFromVal","returnVals","combineFilters","filterByConnectValues","parseFilterByConnectValues","valuesByDepth","ef","$parentField","filterValue","parentValue","filterColumn","filterField","dataFieldId","valItem","formVals","handlerOptionData","$destructed","populateOptions","addCy","_sortByRecent","populateOptionsDataCy","currVal","selectedVals","cVal","some","selectedItem","each","option","setAttribute","pullRecordRelationValues","_recentStorageId","saveSelect","selectedItems","recentSelected","aId","bId","formComponentSetting","webixLocale","longDateFormatStr","ABFieldDateTimeCore","timeToStr","ABFieldEmailCore","ABFieldFileCore","fileTemplate","typesList","maximumSize","parentContainer","webixContainer","container","domNode","urlUpload","uploader","apiOnly","upload","inputName","multiple","onBeforeFileAdd","classList","acceptableTypes","acceptableSizes","size","onFileUpload","onFileUploadError","addDropZone","dataset","deleteFile","uploaderId","fileDialog","rowid","iconDisplay","fileDisplay","fileURL","fileLink","getAttribute","fileicon","fileDeleteIcon","removeAttribute","href","isWebix","urlFile","ABFieldFormulaCore","ABFieldImageCore","idCustomContainer","formId","containerHeight","imageSrcHeight","heightVal","imageTemplate","imgHeight","imgWidth","percent","uploadInProgress","showImage","readAsDataURL","dataTable","deleteImage","removeDefaultImage","imageDisplay","isRemoveDefaultImage","html","backgroundImage","imageIcon","imageDeleteIcon","toBase64","img","Image","crossOrigin","onerror","canvas","getContext","drawImage","imageData","toDataURL","src","rotateLeft","imgFile","rotateRight","ABFieldJsonCore","ABFieldListCore","numDone","numToDo","remainingFields","_getSelectedOptions","hasCustomColor","optionHex","selectedObj","clearButton","stopPropagation","getSelectedOptions","ABFieldLongTextCore","ind","ABFieldNumberCore","INIT_EDITOR","editors","defaultSettings","allowClear","removeOnly","readOnly","showDropdown","ABFieldSelectivityDefaults","selectivityRender","cypress","dataCy","prepareData","selectivity","setOptions","selectivityInput","isUsers","templates","multipleSelectedItem","highlighted","additionalText","isLabelHidden","Selectivity","Inputs","Multiple","selectivitySetBadge","singleSelectedItem","Single","trigerEditPageEvent","editMenus","eMenu","__hasClickEvent","preventDefault","parentElm","parentElement","thisField","caretElems","getElementsByClassName","caretElm","parentNode","removeChild","selectivitySettings","selectivityGet","selectivitySet","setData","selectivityDestroy","clientHeight","badge","anchor","textnode","createTextNode","appendChild","ABFieldStringCore","ABFieldTextFormulaCore","ABFieldTreeCore","formClass","placeHolder","isForm","branches","selectOptions","rootid","getParentId","par","nodeHTML","myHex","setBadge","idPopup","idTree","parentComponent","firstRender","populateTree","getValues","$Tree","uncheckAll","openAll","checkItem","onShow","onItemCheck","dom","tree","uncheckItem","eachSubItem","getChecked","scrollHeight","setValues","ABFieldUserCore","SiteUser","Defaults","linkCol","newLinkDef","setDisplayOptions","ABMobilePageCore","__Handler_ABDEF_UPDATED","__Handler_DEF_UPDATED","removeAllListeners","ABMobileViewCore","viewsToIgnore","ABMobileViewFormCore","ABMobileViewFormButton","refreshDefaultButton","defaultButton","yList","posY","ABMobileViewFormButtonCore","ABMobileViewFormCheckboxCore","ABMobileViewFormConnectCore","__filterComponent","ABMobileViewFormCustomCore","ABMobileViewFormDateCore","ABMobileViewFormDatetimeCore","ABMobileViewFormEmailCore","ABMobileViewFormFileCore","ABMobileViewFormFormulaCore","ABMobileViewFormImageCore","ABMobileViewFormItemCore","ABMobileViewFormNumberCore","ABMobileViewFormReadonlyCore","ABMobileViewFormSelectMultipleCore","ABMobileViewFormSelectSingleCore","ABMobileViewFormTextboxCore","ABMobileViewLabelCore","ABMobileViewListCore","ABProcessLaneCore","transferParticipantWhereToMe","myParticipant","swap","children","child","lanes","objChild","setLane","defElement","ABProcessParticipantCore","diagramProperties","ABProcessElementCore","findLane","Lane","currObj","propertiesShow","propertiesStash","property","switchTo","propertiesID","ABProcessEndCore","ABProcessGatewayExclusiveCore","properties","myOutgoingConnections","numCondWithOne","ABProcessTaskEmailCore","verifySetting","verifyNextLane","verifyRoleAccount","nextLanesResolved","valKey","ABProcessTaskServiceCore","AccountingBatchProcessingCore","propertyIDs","processBatchValue","objectBatch","fieldBatchEntries","fieldBatchFinancialPeriod","objectJE","fieldJEAccount","fieldJERC","fieldJEStatus","fieldJEStatusComplete","objectBR","fieldBRFinancialPeriod","fieldBRAccount","fieldBRRC","fieldBREntries","processValues","objectList","blankField","defaultFields","updateFields","fieldPickers","fp","picker","batchFields","fieldPickersBatch","jeFields","fieldPickersJE","compileStatusValues","statusField","onStatusComplete","wbxComplete","jeEntryID","jeEntry","jeFieldStatusValues","brFields","fieldPickersBR","AccountingFPCloseCore","processFPValue","objectFP","objectGL","objectAcc","fieldFPStart","fieldFPOpen","fieldFPStatus","fieldFPActive","fieldGLStarting","fieldGLRunning","fieldGLAccount","fieldGLRc","fieldGLDebit","fieldGLCredit","fieldAccType","fieldAccAsset","fieldAccExpense","fieldAccLiabilities","fieldAccEquity","fieldAccIncome","getFieldOptions","getStatusFieldOptions","statusFieldId","fpObject","fpStatusField","getListOptions","fpFields","glFields","accFields","fpStatusFields","accTypeOptions","elementsConfig","fieldGLElem","updateFPFields","updateGLFields","updateAccFields","fpStatusOptions","updateAccTypeOptions","AccountingFPYearCloseCore","processFPYearValue","objectFPYear","objectFPMonth","objectAccount","valueFundBalances","valueNetIncome","fieldFPYearStart","fieldFPYearEnd","fieldFPYearStatus","fieldFPYearActive","fieldFPMonthStart","fieldFPMonthEnd","fieldGLStartBalance","fieldGLRunningBalance","fieldGLrc","fieldAccNumber","fieldAccTypeIncome","fieldAccTypeExpense","fieldAccTypeEquity","fpYearDateFields","fpYearStatusFields","fpYearStatusOptions","fpMonthDateFields","glNumberFields","glRcFields","accNumberFields","accTypeFields","fpYearDateOptions","updateFPYearStatusOptions","fpMonthDateOpts","glRcOptions","glNumberOptions","updateAccNumberFields","updateFPYearActiveOptions","AccountingJEArchiveCore","objectBalance","objectJEArchive","fieldBatchFiscalMonth","fieldJeAccount","fieldJeRC","fieldJeArchiveBalance","fieldBrFiscalMonth","fieldBrAccount","fieldBrRC","fieldsMatch","getConnectFieldOptions","refreshFieldsMatch","$fieldsMatch","JEObj","JEArchiveObj","fJe","fieldBatchList","fieldBalanceList","fieldJeList","fieldJeArchiveList","refreshBatchFields","refreshBRFields","refreshJeFields","refreshJeArchiveFields","CalculateTaskCore","formulaText","exp","ABProcessTaskServiceGetResetPasswordUrlCore","InsertRecordTaskCore","fv","isSet","ABProcessTaskServiceQueryCore","qlWarnings","hasSave","SubProcessCore","bpmnModeler","props","loopCharacteristics","isSequential","loopType","ABProcessTaskUserCore","ABProcessTaskUserApprovalCore","ABProcessTaskUserExternalCore","ABProcessTriggerCore","ABProcessTriggerLifecycleCore","ABProcessTriggerTimerCore","ABQLCore","parseRow","uiID","toIDs","$uiCondition","objectfields","objectname","taskparam","select","shorthand","spacer","uiAddParamForDef","paramUI","uiParamUI","uiAddNext","uiRow","uiNextRow","uiAddParams","nextOptions","resetValue","newOP","thisRow","thisQuery","addOP","viewAddParams","viewAddNext","allRows","ir","allCols","ic","uiNextRowSelectorRefresh","$select","uiNextCol","uiConfig","uiSettings","initialCond","displayLabel","initialValue","Updater","foundFields","shortHand","elCondition","onItemClick","modal","fillspace","sh","_myPopup","topView","rowView","toInsert","myWarnings","ABQLRootObject","root","rootOP","parseCurrent","selector","currOP","nextRow","ABQLRootObjectCore","ABViewCore","ABViewComponent","changePage","ABViewCSVExporterCore","ABViewCSVExporterComponent","ABViewCSVImporterCore","ABViewCSVImporterComponent","ABViewCarouselComponent","A","baseView","carousel","_handler_doOnShow","_handler_doReload","_handler_doFilter","fnFilter","filterRules","_handler_busy","_handler_ready","filterUI","linkPage","linkPageHelper","_ui","navigation","buttons","activeIndex","getActiveIndex","switchImage","viewLoad","$carouselView","firstElementChild","detatch","myTemplate","$carousel","currentPosition","_imageCount","_rowCount","getFilter","cursor","images","imgData","ab","align","abWebix","onclick","getNode","fullscreen","exit","head","rotateImage","showFilterPopup","showPopup","imgElm","getElementById","fetch","cache","inOrOut","imgContainer","imgElem","newHeight","overflow","ABViewCarouselCore","ABViewCarousel","__filterHelper","ABViewPropertyFilterData","__linkPageHelper","ABViewPropertyLinkPage","ABViewChartCore","ABViewChartComponent","refreshData","getDCChart","_dcChart","dcChart","labelCol","valueCol","valueCol2","numberColName","numberColName2","colorList","dInfo","sumData","sumNumber","sumNumber2","countNumber","numberVal2","relateValues","value2","val2","ABViewChartAreaCore","ABViewChartAreaComponent","ABViewChartBarCore","ABViewChartBarComponent","ABViewChartContainerComponent","ABViewChartLineCore","ABViewChartLineComponent","ABViewChartPieCore","ABViewChartPieComponent","ABViewCommentCore","ABViewCommentComponent","ABViewConditionalContainerCore","ABViewConditionalContainerComponent","viewIf","viewElse","pendingSave","ABViewConnectDataFilterComponent","idbase","applyConnectFilter","tooltip","resetConnectFilter","$filter","connectId","ABViewConnectDataFilter","ABViewContainerCore","ABViewContainerComponent","ABViewDataFilterComponent","sortButton","filterButton","globalSearchToolbar","_handler_filterData","callbackFilterData","PopupSortComponent","sortOptions","callbackSortData","advancedUI","compId","maxHeight","toolbarFilter","getInputNode","openSort","externalSearchText","connectedFieldUI","relative","right","top","setSettings","updateUI","sortRules","filterButtons","onlyFilterRules","filterBadge","sortButtons","onlySortRules","sortBadge","searchFields","activeElement","ABViewDataFilter","ABViewDataSelectComponent","cursorChange","ABViewDataSelect","ABViewDataviewCore","ABViewDataviewComponent","ABViewDetailCore","ABViewDetailComponent","ABViewDetailCheckboxCore","ABViewDetailCheckboxComponent","ABViewDetailConnectCore","ABViewPropertyAddPage","ABViewDetailConnectComponent","addPageTool","__addPageTool","ABViewDetailCustomCore","ABViewDetailCustomComponent","ABViewDetailImageCore","ABViewDetailImageComponent","ABViewDetailItemCore","ABViewDetailItemComponent","ABViewDetailTextCore","ABViewDetailTextComponent","ABViewDetailTreeCore","ABViewDetailTreeComponent","ABViewDocxBuilderCore","ABViewDocxBuilderComponent","letUserDownload","blob","URL","createObjectURL","download","revokeObjectURL","ABViewFormCore","ABViewFormComponent","ABViewFormButton","ABViewFormConnect","ABViewFormDatepicker","ABViewFormSelectMultiple","ABViewFormJson","_callbacks","onBeforeSaveData","superComponent","_superComponent","getFormValues","visibleFields","allVals","vComponent","viewComponents","linkValues","formFieldCom","fComp","linkColName","cursorFormVals","validateData","$formView","requiredFields","fixInvalidMessageUI","$forminput","$height","domInvalidMessage","marginLeft","saveButton","saveData","clearValidation","formError","$saveButton","invalidAttrs","sqlMessage","loadDcDataOfRecordRules","newFormVals","errs","formReady","focusOnFirst","topPositionId","childComponent","actionSettings","valueRules","fieldOperations","valueType","pullDataDC","deleteData","ABViewFormButtonCore","ABViewFormButtonComponent","ABViewFormCheckboxCore","ABViewFormCheckboxComponent","ABViewFormConnectCore","ABViewFormConnectComponent","ABViewPropertyEditPage","editPageTool","addPageProperty","propertyComponent","editPageProperty","__editPageTool","ABViewFormCustomCore","ABViewFormCustomComponent","ABViewFormDatepickerCore","ABViewFormDatepickerComponent","ABViewFormItemCore","ABViewFormItemComponent","componentUI","parentFormUniqueID","uniqueInstanceID","ABViewFormJsonCore","ABViewFormJsonComponent","ABViewFormNumberCore","ABViewFormNumberComponent","ABViewFormReadonlyCore","ABViewFormReadonlyComponent","ABViewFormSelectMultipleCore","ABViewFormSelectMultipleComponent","ABViewFormSelectSingleCore","ABViewFormSelectSingleComponent","ABViewFormTextboxCore","ABViewFormTextboxComponent","ABViewFormTreeCore","ABViewFormTreeComponent","ABViewGanttComponent","menu","gantt","_tempDC","TitleField","StartDateField","EndDateField","DurationField","ProgressField","NotesField","originalStartDate","originalEndDate","pendingAdds","idGantt","ganttElement","isExistsTask","taskId","localService","tasksData","removeTask","opsService","YEAR_SCALE","MONTH_SCALE","DAY_SCALE","getConstantScales","setScale","override","Map","services","Backend","CurrentDatacollection","indx","convertFormat","addTask","taskAdd","updateTask","taskUpdate","taskRemove","$menu","showItem","CurrentObject","convertValues","patch","datacollectionLoad","_events","eo","initData","ganttElem","dataService","dcTasks","gantt_data","currScale","getScales","WEEK_SCALE","wstart","weekStart","wend","scale","ganttData","newScales","setScales","precise","cellWidth","cellHeight","$batch","left","taskData","updatedTask","ABViewGanttCore","ABViewGantt","ABWorkObjectPopupExport","popupExport","_dataCollection","_grid","_filename","_hiddenFields","autoheight","dataCollectionLoad","setHiddenFields","setFilename","setGridComponent","$grid","fnExport","noCheckedRow","appbuilder_select_item","filterRow","toCSV","toExcel","filterHTML","toPDF","toPNG","exportType","fileName","ABViewGridPopupMassUpdate","ABViewGridComponent","submit","GridComponent","rowUpdater","update_button","update_items","$datatable","getDataTable","updatedRowIds","table","toolbar","buttonDeleteSelected","buttonFilter","buttonMassUpdate","buttonSort","buttonExport","datatable","handler_select","selectRow","columnSplitLeft","columnSplitRight","validationError","idTable","PopupExport","PopupMassUpdateComponent","PopupSortDataTableComponent","skippableColumns","ignoreLocalSettings","_gridSettings","_isDatacollectionLoaded","keyStorageSettings","getColumnIndex","uiDatatable","isTreeDatable","selectType","resizeColumn","resizeRow","prerender","fixedRowHeight","editaction","dragColumn","onBeforeSelect","preserve","cellNode","onAfterSelect","onCheck","toggleUpdateDelete","onAfterEditStop","onBeforeEditStop","old","ignoreUpdate","onValidationError","onValidationSuccess","onColumnResize","user_action","setColumnWidth","getLastColumn","onRowResize","onBeforeColumnDrag","onBeforeColumnDrop","onAfterColumnDrop","onHeaderClick","uiFilter","uiToolbar","toolbarMassUpdate","toolbarDeleteSelected","toolbarSort","toolbarExport","_uiGrid","inputWidth","codebase","cdn","$DataTable","throttleCustomDisplay","scrollStarted","displayRecords","verticalScrollState","getScrollState","rowHeight","startRecIndex","endRecIndex","getVisibleCount","CYPRESS_REF","toggleTab","clearValue","updateRow","_deleteConfirmPopup","numRows","deleteRow","globalFilterPosition","refreshHeader","$ButtonFilter","$buttonSort","gridElem","rowItem","oldDC","__handler_dc_busy","__handler_dc_ready","populateGroupData","__handler_dc_loadData","_isDatacollectionLoad","disableUpdateDelete","enableUpdateDelete","freezeDeleteColumn","lastColumn","getColumnConfig","$treetable","baseGroupMap","listData","valRelation","groupBys","g","gIndex","groupMap","by","byValue","gColName","group","localSettingsSave","removeCellCss","maxLength","editCell","requireRefresh","EditField","isCustomGroup","ignoreLocal","objColumnHeaders","objColumnHeaderIDs","origCol","fieldValidations","rulePops","validationUI","popUpId","groupField","treetable","complexValidations","getSelectedItem","destructor","addedColumns","contentId","lastCol","refreshColumns","savedLocalSettings","settingsID","__timeout_selectRow","unselect","parentTab","wb","tab","getTopParentView","tabbar","nextTab","checkedItems","deleteTasks","toolTip","imageFieldColNames","tip","relationData","toolTipOnBeforeRender","visibility","toolTipOnAfterRender","firstChild","nodeName","imgBottom","imgRight","innerHeight","imgOffsetY","newTop","imgOffsetX","newLeft","ABViewGridCore","ABViewGrid","propertyGroupByList","colNames","groupByList","origWS","AB_Work_Object_Workspace_PopupSortFields","_blockOnChange","uiForm","clickAddNewSort","triggerOnChange","dir","sort_form","viewIndex","listFields","onChangeCombo","_valueElement","refreshFieldList","dirElem","cView","selectedValue","getRange","chosenField","sortDir","_valueListElement","valElem","$popup","ignoreRemoveViews","selectedFields","removeChildViews","fieldObj","selectedFieldsExcludeCurField","enableFields","aValue","bValue","drag","onAfterDrop","ABViewImageCore","ABViewImageComponent","ABViewKanbanCore","ABViewKanbanComponent","ABViewKanban","comKanBan","CurrentObjectID","refreshForm","formAttrs","formCom","updateVals","newVals","ABViewLabelCore","ABViewLabelComponent","ABViewLayoutCore","ABViewLayoutComponent","ABViewListCore","ABViewListComponent","ABViewMenuCore","ABViewMenuComponent","ABViewOrgChartCore","ABViewOrgChartComponent","ABViewPDFImporterCore","ABViewPDFImporterComponent","ABViewPageCore","v1App","newComponent","ABViewPivotCore","ABViewPivotComponent","ABViewReportsManagerCore","ABViewReportsManagerComponent","ABViewSchedulerCore","ABViewSchedulerComponent","ABViewTabCore","ABViewTabComponent","ABViewTextCore","ABViewTextComponent","ABViewWidgetCore","clientFilter","downloadCsvFile","onFilterChange","whereWidget","whereClient","qsWhere","open","$buttonFilter","CSVImporter","uploadFileList","headerOnFirstLine","columnList","statusMessage","progressBar","linkedDataButton","importButton","csvImporter","args","_dataRows","_csvFileInfo","accept","autosend","loadCsvFile","onClick","webix_remove_upload","removeCsvFile","populateColumnList","minHeight","uiRecordsView","keyPressTimeout","_errorMsg","details","$dt","_status","_included","$importButton","labelImport","overLimitAlert","showLinkedData","uiPopup","$progressBar","formClear","$statusMessage","matchFields","getMatchFields","columnIndex","statusTemplate","$headerOnFirstLine","fileId","$columnList","firstLine","csvColumnList","currentObject","formComp","formConfig","uiColumns","selectedCsvCols","matchCol","selectVal","columnOptUI","abName","toggleLinkFields","loadDataToGrid","dateSeparatorOptions","dayFormatOptions","monthFormatOptions","yearFormatOptions","dateOrderOptions","linkFieldOptions","$columnOption","$linkFieldOption","getFilterHelper","rowValue","refreshRemainingTimeText","startUpdateTime","total","remainTime","days","seconds","$selector","fieldData","$dateFormatSelectors","separator","$linkDataSelector","searchField","objModel","selectedRows","_currProgress","increaseProgressing","itemFailed","addRowCss","itemInvalid","errorMsg","uiCleanUp","validRows","allValid","getParentValues","removeRowCss","hashLookups","allLookups","connectField","connectObject","connectModel","linkIdKey","gethashLookup","createRecord","newRowsData","resultErrors","rowIndex","resultData","penddingRecordRules","processRowData","waitPenddingRecordRules","processResult","throttledSaves","performThrottledSaves","currentRecords","remainingRecords","importer","nextRecords","uiLinkedData","linkedData","hideLinkedData","_info_popup","linkConnectFields","yAxis","xAxis","legend","series","alpha","preset","$component","eventNames","evtName","chartContainer","uiChartComponent","_isShow","$chartContainer","$chartComponent","pieInnerText","shadow","comment","getCommentData","onBeforeAdd","addComment","onAfterDelete","deleteComment","__dvEvents","$comment","$commentList","onStoreUpdated","operate","updateComment","refreshComment","userCol","commentCol","dateCol","userColName","commentColName","dateColName","dataObject","dataList","user_id","default_date","__refreshTimeout","commentData","scrollTo","MAX_SAFE_INTEGER","commentText","dateTime","commentField","CurrentDatacollectionID","uiComponents","eventsClear","waitInitializingDCEvery","milliSeconds","__isShowing","interval","setInterval","clearInterval","_ifComponent","_elseComponent","populateFilterComponent","_uiConditionalContainer","ifComponent","elseComponent","displayView","viewComponentIDs","_handlerChangePage","rowViews","getElements","componentMap","curRowIndex","curColIndex","rowNew","colNumber","rowIndx","curRow","newPos","mapKey","getGrav","reload","initDetailComponent","scroll","sizeToContent","itemTemplate","applyClickEvent","addCyAttribute","$dataView","initRefreshWarning","_resizeEvent","eventKey","showRefreshWarning","__throttleRefreshWarning","base_element","$dataview","item_width","getItemWidth","customize","detailUI","getDetailUI","_detail_ui","$detail_item","itemWidth","$width","itemHeight","tmp_dom","addCyItemAttributes","currElem","parentWidth","$sidebar","getTabSidebar","clicked","divs","_detailComponent","detailItem","createdRow","updatedRow","myVal","needRecalculate","$detailItem","parsedImageUrl","imageUrl","SAFE_HTML_TAGS","detailItemLabel","uiDetailItemComponent","isLabelTop","templateLabel","labelUi","valueUi","itemUi","detailId","strVal","getDomTree","domTree","Docxtemplater","ImageModule","JSZipUtils","JSZip","sizeOf","ABFieldImage","downloadButton","noFileLabel","leftSpacer","rightSpacer","buttonLabelText","renderFile","$downloadButton","$noFileLabel","reportValues","getReportData","downloadImages","contentTemplateFile","downloadTemplateFile","blobFile","generateDocxFile","isDcLabelAdded","dcCursor","dcValues","fieldLabels","objTran","fieldTran","objectLabel","fieldLabel","setReportValues","datacollectionData","multilinguageFields","transFields","childItem","addDownloadTask","fieldImage","imageVal","imgUrl","getBinaryContent","contentFile","summaries","zip","doc","imageModule","centered","getImage","tagValue","tagName","getSize","imgBuffer","tagNames","dcs","Uint8Array","ratio","attachModule","loadZip","tag","scope","varName","propSource","propFilter","indexColName","connectedField","sourceVals","getVal","comparer","docxFile","getZip","generate","mimeType","onDelete","onCancel","onClear","onSave","cancelButton","noPopupFilter","pageCurr","resetButton","buttonID","formID","deleteButton","ABViewFormTextbox","timerId","_showed","fieldValidationsHolder","uiValidationHolder","abid","existsFields","com","initCallbacks","initEvents","initValidationRules","relationVals","valArray","displayParentData","applicationLoad","formField","nval","oval","fieldValidating","ms","customFields","normalFields","formItem","defaultRowData","parentData","relationField","relationFieldCom","relationFieldView","$relationFieldView","formData","topPosition","editpopup","addPageComponent","editPageComponent","formSettings","goToEditPage","_onChange","initAddEditTool","selectAll","customField","trg","$formItem","apcUI","inputId","selectedValues","prepedVals","addFormID","onSaveData","callbackSaveData","onCancelClick","callbackCancel","callbackClearOnLoad","editFormID","sData","formBusy","__editFormDcEvent","$node","filterConnectedValue","uiConfigName","connectFieldId","getFilterByConnectValues","filterByConnectValue","$ui","vc","$filterValueConfig","parentField","FocusableTemplate","new_width","requiredClass","DEFAULT_HEIGHT","paddingY","paddingX","AB_App","onAfterDateSelect","setMasterValue","onTodaySet","onDateClear","getMasterValue","errNoAB","strToDate","setFullYear","uiFormItemComponent","_uiFormItem","rowFilter","getFilterField","entries","getSystemObjects","objectsArray","refreshFilter","fieldDefs","parsed","stringResult","NumberTextInput","_numberTextInputKey","numberTextInputKey","newv","oldv","setHTML","tagMode","tagTemplate","selectedOptions","menubar","initTinyMCE","getEditor","contentAreaContainer","$image","ABFormSidePanel","kanbanView","kanban","resizer","formSidePanel","FormSide","CurrentVerticalField","CurrentHorizontalField","CurrentOwnerField","_updatingOwnerRowId","_ABFieldConnect","_ABFieldUser","_ABFieldList","ABFieldUser","onSelectChange","userId","getSelectedId","updateOwner","tags","onListAfterSelect","onAfterStatusChange","updateStatus","onAvatarClick","$kb","_kb","kanbanListTemplate","removeCard","templateAvatar","templateBody","horizontalOptions","verticalOptions","horizontalVals","statusOps","reconstruct","$menuUser","getUserList","needRefresh","eachList","addCard","setFields","verticalGrouping","horizontalGrouping","uiFormatting","vId","_uiList","autoHeight","uiMenu","datatype","onMenuItemClick","defineCypress","subsign","_uiMenu","elems","menuIncluded","$item","redirectPage","toggleParent","showIt","parentElem","viewInfo","chartView","chartDom","$chartView","loadOrgChartJs","orgChartLoader","OrgChart","pullData","displayOrgChart","chartData","orgchart","exportButton","nodeContent","_setColor","_rawData","currChildren","parentChartData","_tempParentChartData","chartItem","rawData","objLink","childData","_chartData","doms","borderColor","backgroundColor","fileUploader","uploadList","fullImagePopup","fullImageCarousel","fullImageSelectToggle","fullImageLabel","unselectAll","loadFile","removeFile","displayBig","displaySmall","pageTemplate","pageIds","renderPageImages","_fullImagePopup","setActiveIndex","refreshFullImage","headHeight","offIcon","onIcon","offLabel","onLabel","isSelected","pageNumber","initPdfjs","pdfjs","pdfjsWorker","_readFileBuffer","ArrayBuffer","fileReader","fileBuffer","readAsArrayBuffer","_toBlob","toBlob","File","_uploadImage","canvasId","showPage","fileBlob","$uploader","onUploadComplete","addFile","_increaseProgressValue","maxProgressStep","_progressSteps","clearDataview","_pdfDoc","getDocument","promise","total_page","numPages","carousel_list","fullImageTemplate","pageTemplateId","pageItemWidth","canvas_dom","getPage","pdf_original_width","getViewport","scale_required","viewport","canvasContext","_isDisplayBig","selectedIds","fullImageTemplateId","$fileUploader","$uploadList","$submit","$selectAll","$unselectAll","$selectToggle","selectedPageIds","newValues","uploadId","ABFieldCalculate","ABFieldFormula","ABFieldNumber","pivot","uiPivot","_getFields","dataMapped","CellFormat","fieldType","reportManager","fieldText","fieldQueries","MyBackend","reports","getModules","updated","addModule","updateModule","deleteModule","getModels","reportModels","dcID","reportFields","getReportFields","refs","getQueries","moduleID","moduleId","addQuery","moduleData","queryID","updateQuery","queryIndex","deleteQuery","pullDataTasks","dcIds","dcData","sid","dcId","dataCol","sourceDc","sourceObj","targetDc","targetObj","sourceLinkField","sf","targetLinkField","tf","sourceData","targetData","tData","sVal","tVal","matchedVal","updateRows","queryVal","filterElem","tempDc","as","mod","_","parsedColumn","originalColumn","reportField","dateStringData","parsedDateStringData","groupedData","groupedResult","agg","rawCol","getFieldData","MyLocal","Local","_currentModuleID","currentModuleID","_queries","MyEditor","$tabbar","callEvent","disableOption","Reset","forceReset","AppState","getModule","TrackChanges","MyToolBar","MyEditorCommon","ShowDeleteButton","MyEditorData","MyTable","GetColumnConfig","meta","abField","mid","fullDateFormatStr","GetTableData","buckets","columnIDs","parsedBuckets","bucket","parseRecord","columnFormat","linkedDcs","linkDc","ref","reportData","reportRow","$pk","rField","fieldStart","fieldEnd","fieldAllDay","fieldCalendar","fieldEventColor","fieldNotes","fieldOriginID","fieldSectionID","fieldUnitID","dcCalendar","fieldTitle","fieldCalendarColor","fieldActive","timelineOptions","addCalendar","addEvent","start_date","end_date","all_day","recurring","section","origin_id","calendars","events","sections","removeCalendar","removeEvent","updateCalendar","updateEvent","uiNav","uiNavPopup","LimitData","sidebar","expandMenu","collapseMenu","popupTabManager","popupTabManagerForm","popupTabManagerSaveButton","baseType","menuItems","abStorage","toggle","addDataCy","multiview","keepViews","onViewChange","prevId","nextId","collapseNode","expandNode","tabUi","tabTemplate","$tab","changeTab","setState","checkCollapseMenu","checkExpandMenu","collapsed","tabViewId","$tabViewId","$viewID","defaultViewIsSet","_uiText","$text","ABViewProperty","toSettings","editForms","pagesHasForm","getIds","onClearOnLoad","_application","openFormPopup","pageClone","popUpComp","savedData","popupTemplate","setDefaultValue","fView","formEdit","FilterRuleSettings","buttonAddfilter","filterPanel","globalFilterFormContainer","globalFilterForm","filterMenutoolbar","resetFilterButton","__externalSearchText","rowFilterForm","_handler_rowFilterChanged","triggerCallback","_handler_rowFilterFormChanged","resetFilter","$filterMenutoolbar","queryRules","qr","Rule","filterRuleButton","rowFilterRules","__currentFilter","searchRules","badgeCount","$button","externalText","terms","allTerms","fieldTerms","ABViewPropertyLinkPageComponent","cleanRules","processCondition","myUnique","queryBuilder","queryBuilderContainer","queryBuilderLayout","showQBButton","conditionFields","QB","fieldTypes","onDone","listRules","showQueryBuilderContainer","ObjectQueryBuilder","listActions","actionDropList","selectedAction","objectQB","currentForm","selectAction","valueDisplay","_generateUI","Action","currentAction","replaceValueDisplay","$ValueDisplay","cloneChildren","prevAction","getAction","stashCondition","currAction","hidddatasourceen","for","processUpdateObject","qbFixAfterShow","isReady","convertToNumber","hiddenFilter","isPreProcess","queryObject","conditionRules","queryObjectLoad","webixID","valueDisplayComponent","childSettings","headerDefault","rulesScrollview","when","addRule","buttonCancel","buttonSave","getRule","RulesUI","deletedRule","ruleSettings","ABViewRuleList","ABViewRule","RoleUpdateExisting","RoleInsertConnected","RoleUpdateConnected","RoleRemoveConnected","allReady","RoleConfirmMessage","RuleExistPage","RuleParentPage","RuleClosePopup","RuleWebsite","RuleEmail","UpdateConnected","valueDisplayChooser","Component","showQBIfNeeded","queryBuilderDisplay","connObj","connectedObject","connectionField","selectedField","newObjectValues","newRecords","connectedObjectField","qbCondition","ABViewRuleActionFormRecordRuleUpdateConnected","isUpdateValueDisabled","_formData","ABViewRuleActionObjectUpdater","selectedFieldID","fieldDropList","connectedFieldList","cf","connectKey","_uiChooser","selectConnectedField","updateFieldsForm","addDisplay","removePreviousDisplays","cloneAllViews","updateObjectLoad","updateComponent","$updateForm","qbComponent","formRows","fr","rowSettings","modifyCondition","updateIt","qbCond","ABViewRuleAction","confirmMessage","ABFieldEmail","toEmailsContainer","toEmails","isEmail","toEmailAdd","fieldTemplate","enterField","refreshUI","emailType","recipients","fromName","fromEmail","toEmailTemplate","emailTypeChange","visibleBatch","toEmailValidate","emailFieldOptions","queryOptions","$toView","toEmailRemove","$emailValue","isAllValid","emailText","existsFieldIds","fnAddOptions","fLink","emailFields","optId","optLabel","focusElem","UIManager","getFocus","setFocus","rec","emailFieldUrl","emailField","emailData","linkFieldId","dvIdAndFieldId","dcQuery","emailAddr","pagesAndTabs","_pageOptions","addPage","pageOrTab","indent","selectedId","curPage","website","ABViewRuleActionObjectUpdaterDefaults","updateObject","stashRules","_uiUpdater","valueDisplayList","removeAddRow","UpdateForm","formGet","addRow","valueDisplayRow","onAdd","delRow","mySettings","FilterComponent","selectDc","selectBy","queryField","buttonAdd","buttonDelete","buttonsToggle","shouldFilter","usedHash","FormView","getUpdateObjectField","fieldField","columnID","$inputView","$componentView","datasources","optionsDataSources","optionsSelectBy","$optionUpdateExsits","selectedDC","$row","populateFilters","dcQueries","$multiview","compNodeView","setValueFn","collectionId","dataView","$valueField","objectToUpdate","isUpdated","clonedDataCollection","fieldWithValue","currRow","updates","objectToUpdateClone","lookup","updateObjectID","updateObjectURL","DocUtils","convertPixelsToEmus","pixel","docxtemplater","_createClass","defineProperties","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","extensionRegex","rels","getPrefix","getFileTypeName","getRelsFileName","getRelsFilePath","ImgManager","xmlDocuments","TypeError","_classCallCheck","fileTypeName","mediaPrefix","relsFilePath","relsDoc","createEmptyRelsDoc","relsFileName","mainRels","files","str2xml","xml2str","relationships","relationshipChilds","iterable","reduce","relationship","contentType","extension","contentTypeDoc","defaultTags","types","newTag","namespaceURI","imageName","realImageName","imagePath","addImageRels","binary","addExtensionRels","maxRid","loadImageRels","getImageXml","rId","getImageXmlCentered","getPptxImageXml","offset","memoize","XMLSerializer","Errors","nullGetter","part","delimiters","mergeObjects","resObj","xmlNode","serializeToString","decodeUtf8","decodeURIComponent","escape","convertSpaces","explanation","encodeUtf8","unescape","errorHandler","charMap","regexStripRegexp","escapeRegExp","charMapRegexes","endChar","startChar","rstart","rend","wordToUtf8","utf8ToWord","concatArrays","arrays","array","spaceRegexp","fromCharCode","throwXmlTagNotFound","XTTemplateError","pregMatchAll","regex","matchArray","exec","sizeOfObject","traits","moduleWrapper","xmldom","wrapper","compiled","modules","fileTypeConfig","FileTypeConfig","xmlFileNames","loadAsync","currentFile","createTemplateClass","templatedFiles","getTemplatedFiles","_this2","baseModules","moduleFunction","optionsTransformer","asText","compile","compileFile","mapper","getRenderedMap","mapped","setTags","usedData","createTemplateClassFromContent","filePath","_this3","xmltOptions","XmlTemplater","textPath","getFullText","XmlMatcher","XTError","stack","XTScopeParserError","XTInternalError","loopModule","spacePreserveModule","rawXmlModule","expandPairTrait","PptXFileTypeConfig","tagsXmlTextArray","tagsXmlLexedArray","tagRawXml","tagTextXml","DocXFileTypeConfig","docx","pptx","inRange","range","updateInTextTag","inTextTag","offsetSort","getTag","throwUnclosedTagException","xtag","assertDelimiterOrdered","delimiterMatches","fullText","inDelimiter","lastDelimiterMatch","delimiterMatch","throwUnopenedTagException","getAllIndexes","arr","Reader","innerContentParts","full","parseDelimiters","ranges","delimiterLength","cutNext","delimiterIndex","partContent","delimitersInOffset","delimiterInOffset","xmlparsed","newArray","xmlparse","xmltags","matches","textMatchArray","othersMatchArray","contentLength","allMatches","totalMatches","tagText","_getTag","tagMatcher","other","func","stringifyJson","getMinFromArrays","minIndex","totalLength","resultArray","arrayIndex","emptyFun","identity","getTraits","postparse","every","mergeSort","getExpandToDefault","throwClosingTagNotMatchOpeningTag","openingtag","closingtag","getOpenCountChange","location","getPairs","countOpen","firstTrait","currentTrait","outer","T","throwUnmatchedLoopException","_ref","_postparse","trait","pairs","expandedPairs","pair","expandTo","currentPairIndex","innerParts","newParsed","inPair","expandedPair","basePart","subparsed","dashInnerRegex","moduleName","placeHolderContent","inverted","traitName","totalValue","scopeManager","loopOver","createSubScopeManager","getInner","postparsed","paragraphParts","throwRawTagShouldBeOnlyTextInParagraph","RawXmlModule","expandToOne","Render","spacePreserve","inChunk","lexed","inPlaceHolder","tailParts","token","moduleParsed","moduleParse","ScopeManager","createBaseScopeManager","moduleRendered","moduleRender","scopePath","loopOverValue","functor","currentValue","num","isValueFalsy","functorIfInverted","rootError","lastTagIsOpenTag","innerLastTag","innerCurrentTag","addTag","expandOne","throwRawTagNotInParagraph","leftParts","rightParts","inner","xmlElements","getListXmlElements","memoized","tagsXmlArray","tagsXmlArrayJoined","charactersAddedCumulative","charactersAdded","replacerUnshift","pn","last","handleRecursiveCase","xmlMatcher","Lexer","Parser","_render","fromJson","setModules","inspect","xmllexed","locator","DOMHandler","cdata","lineNumber","columnNumber","_locator","systemId","_toString","chars","java","appendElement","hander","currentElement","source","sax","XMLReader","domBuilder","defaultNSMap","xmlns","entityMap","lt","gt","amp","quot","apos","setDocumentLocator","errorImpl","isCallback","Function","build","buildErrorHandler","nbsp","startDocument","DOMImplementation","createDocument","documentURI","localName","qName","createElementNS","len","getURI","getQName","createAttributeNS","getLocator","nodeValue","setAttributeNode","endElement","current","startPrefixMapping","uri","endPrefixMapping","processingInstruction","ins","createProcessingInstruction","ignorableWhitespace","ch","characters","charNode","createCDATASection","skippedEntity","endDocument","normalize","comm","createComment","startCDATA","endCDATA","startDTD","publicId","impl","implementation","createDocumentType","dt","warning","fatalError","dest","_extends","Super","pt","ppt","__proto__","htmlns","NodeType","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","ExceptionCode","ExceptionMessage","HIERARCHY_REQUEST_ERR","INDEX_SIZE_ERR","DOMSTRING_SIZE_ERR","NOT_FOUND_ERR","WRONG_DOCUMENT_ERR","INVALID_CHARACTER_ERR","NO_DATA_ALLOWED_ERR","NO_MODIFICATION_ALLOWED_ERR","INUSE_ATTRIBUTE_ERR","NOT_SUPPORTED_ERR","DOMException","captureStackTrace","NodeList","LiveNodeList","_node","_refresh","_updateLiveList","inc","_inc","ownerDocument","ls","__set__","NamedNodeMap","_findNodeIndex","_addNamedNode","newAttr","oldAttr","ownerElement","_onRemoveAttribute","_nsMap","_onAddAttribute","_removeNamedNode","lastIndex","features","_features","feature","Node","_xmlEncoder","charCodeAt","_visitNode","nextSibling","Document","_onUpdateChild","newChild","cs","childNodes","_removeChild","previous","previousSibling","lastChild","_insertBefore","nextChild","cp","nodeType","newFirst","newLast","pre","Element","Attr","CharacterData","Text","Comment","CDATASection","DocumentType","Notation","Entity","EntityReference","DocumentFragment","ProcessingInstruction","nodeSerializeToString","isHtml","nodeFilter","buf","refNode","documentElement","lookupPrefix","visibleNamespaces","namespace","needNamespaceDefine","isHTML","ns","pubid","sysid","internalSubset","importNode","node2","cloneNode","attrs2","_ownerElement","INVALID_STATE_ERR","SYNTAX_ERR","INVALID_MODIFICATION_ERR","NAMESPACE_ERR","INVALID_ACCESS_ERR","getNamedItem","setNamedItem","setNamedItemNS","getNamedItemNS","removeNamedItem","removeNamedItemNS","hasFeature","versions","qualifiedName","doctype","insertBefore","refChild","replaceChild","oldChild","hasChildNodes","appendData","isSupported","hasAttributes","lookupNamespaceURI","isDefaultNamespace","importedNode","rtv","createDocumentFragment","createAttribute","specified","createEntityReference","pl","hasAttribute","getAttributeNode","removeAttributeNode","_appendSingleChild","setAttributeNodeNS","removeAttributeNS","getAttributeNodeNS","hasAttributeNS","getAttributeNS","setAttributeNS","getElementsByTagNameNS","substringData","insertData","replaceData","splitText","newText","newNode","getTextContent","$$length","nameStartChar","nameChar","tagNamePattern","S_TAG","S_ATTR","S_ATTR_SPACE","S_EQ","S_ATTR_NOQUOT_VALUE","S_ATTR_END","S_TAG_SPACE","S_TAG_CLOSE","defaultNSMapCopy","entityReplacer","surrogate1","surrogate2","fixedFromCharCode","appendText","xt","m","lineEnd","linePattern","lineStart","parseStack","currentNSMap","closeMap","tagStart","localNSMap","endMatch","parseInstruction","parseDCC","ElementAttributes","parseElementStartPart","closed","fixSelfClosed","locator2","copyLocator","parseHtmlSpecialContent","attrName","setTagName","nsp","nsPrefix","_copy","elStartEnd","elEndStart","lastIndexOf","matchs","reg","lastMatch","endDTD","_set_proto_","thiz","getLocalName","getInnerDocx","getInnerPptx","_ref2","xmlString","ext","cx","cy","imgManagers","imageNumber","relsFiles","imgManager","getNextImageName","sizePixel","getRenderedPart","getRenderedPartPptx","getRenderedPartDocx","cellCX","cellCY","imgW","imgH","expanded","xmlElement","updateFileTypeConfig","zero","byteAt","lastIndexOfSignature","readData","checkOffset","encode","decode","compressedSize","uncompressedSize","crc32","compressionMethod","compressedContent","getContent","getCompressedContent","STORE","magic","compress","uncompress","compressInputType","uncompressInputType","DEFLATE","getTypeOf","checkIndex","setIndex","readInt","readString","transformTo","readDate","base64","createFolders","compression","compressionOptions","unixPermissions","dosPermissions","string2binary","string2Uint8Array","uint8Array2String","string2Blob","arrayBuffer2Blob","checkSupport","MAX_VALUE_16BITS","MAX_VALUE_32BITS","pretty","findCompression","isRegExp","Uint16Array","Uint32Array","deflateRaw","inflateRaw","pako","support","utils","compressions","checkCRC32","optimizedBinaryString","decodeFileName","utf8decode","fileNameStr","decompressed","fileCommentStr","zipComment","isBuffer","Buffer","_data","nodebuffer","asBinary","D","utf8encode","_initialMetadata","asNodeBuffer","asUint8Array","asArrayBuffer","buffer","z","C","E","B","F","fileRecord","LOCAL_FILE_HEADER","dirRecord","CENTRAL_FILE_HEADER","compressedObject","folder","platform","encodeFileName","CENTRAL_DIRECTORY_END","append","finalize","ZIP64_CENTRAL_DIRECTORY_LOCATOR","ZIP64_CENTRAL_DIRECTORY_END","DATA_DESCRIPTOR","arraybuffer","uint8array","Blob","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","getBlob","subarray","applyFromCharCode","byteLength","loadOptions","checkSignature","isSignature","readBlockEndOfCentral","diskNumber","diskWithCentralDirStart","centralDirRecordsOnThisDisk","centralDirRecords","centralDirSize","centralDirOffset","zipCommentLength","readBlockZip64EndOfCentral","zip64EndOfCentralSize","versionMadeBy","versionNeeded","zip64ExtensibleData","readBlockZip64EndOfCentralLocator","diskWithZip64CentralDirStart","relativeOffsetEndOfZip64CentralDir","disksCount","readLocalFiles","localHeaderOffset","readLocalPart","handleUTF8","processAttributes","readCentralDir","zip64","readCentralPart","readEndOfCentral","prepareReader","isEncrypted","bitFlag","useUTF8","prepareCompressedContent","prepareContent","fileNameLength","extraFieldsLength","fileCommentLength","diskNumberStart","internalFileAttributes","externalFileAttributes","readExtraFields","parseZIP64ExtraField","fileComment","extraFields","findExtraFieldUnicodePath","findExtraFieldUnicodeComment","chunkSize","windowBits","memLevel","strategy","gzip","ended","strm","avail_out","deflateInit2","deflateSetHeader","dictionary","string2buf","deflateSetDictionary","_dict_set","input","next_in","avail_in","output","Buf8","next_out","deflate","onEnd","onData","buf2binstring","shrinkBuf","deflateEnd","flattenChunks","Deflate","inflateInit2","Z_OK","inflateGetHeader","Z_FINISH","Z_NO_FLUSH","binstring2buf","inflate","Z_NEED_DICT","inflateSetDictionary","Z_BUF_ERROR","Z_STREAM_END","Z_SYNC_FLUSH","utf8border","buf2string","arraySet","inflateEnd","Inflate","ungzip","Int32Array","setTyped","Buf16","Buf32","Z_PARTIAL_FLUSH","Z_FULL_FLUSH","Z_BLOCK","Z_TREES","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","Z_BINARY","Z_TEXT","Z_UNKNOWN","Z_DEFLATED","I","pending_buf","pending_out","total_out","_tr_flush_block","block_start","strstart","wrap","adler","G","H","total_in","max_chain_length","prev_length","nice_match","w_size","la","w_mask","prev","ka","good_match","lookahead","match_start","window_size","hash_size","insert","ja","ins_h","hash_shift","hash_mask","J","ua","match_length","_tr_tally","max_lazy_match","M","wa","xa","last_lit","va","prev_match","U","match_available","good_length","max_lazy","nice_length","max_chain","pending_buf_size","gzhead","gzindex","$","last_flush","w_bits","hash_bits","dyn_ltree","ha","dyn_dtree","fa","bl_tree","ga","l_desc","d_desc","bl_desc","bl_count","ia","heap","ea","heap_len","heap_max","l_buf","lit_bufsize","d_buf","opt_len","static_len","bi_buf","bi_valid","data_type","Z","na","sa","_tr_init","O","Q","X","K","N","P","R","S","W","Y","aa","ba","da","ma","oa","pa","qa","ra","ta","ya","deflateInit","deflateReset","deflateResetKeep","hcrc","extra","os","_tr_align","_tr_stored_block","deflateInfo","xflags","extra_len","dmax","wsize","whave","wnext","hold","bits","lencode","distcode","lenbits","distbits","sane","havedict","flags","check","wbits","ncode","nlen","ndist","have","lens","work","lendyn","distdyn","back","was","ca","inflateReset","inflateReset2","inflateResetKeep","inflateInit","za","Aa","Ba","Ca","inflateInfo","static_tree","extra_bits","extra_base","max_length","has_stree","dyn_tree","max_code","stat_desc","protoUI","ActiveContent","datafilter","countColumn","summColumn","datetime","popupType","EditAbility","unitlist","ABCustomFormBuilderBuilder","FormBuilder","autofit","$init","parseDataFields","dataFields","formComponents","approveButton","schema","noDefaultSubmitButton","noNewEdit","basic","advanced","customBasic","premium","weight","getFormData","_key","inputType","calculateValue","refreshOnChange","block","leftIcon","theme","ABLazyCustomComponent","Form","$ready","initForm","submission","onButton","setDefaultUI","$getValue","calendarHeader","monthFull","$protoWait","_zoom_logic","_getTitle","_getYearTitle","_getYearRangeTitle","_getContent","_getYearContent","_setContent","_setYear","Qd","Jv","Zv","Xv","thaidate","thaidatetime","_zoom_start_date","ABCustomTinyMCE","eachRow","$count","master"],"sourceRoot":""}