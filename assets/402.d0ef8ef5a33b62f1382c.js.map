{"version":3,"file":"402.d0ef8ef5a33b62f1382c.js","mappings":"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ACjBub,iBAAkB,IAClBC,kBAAmB,IACnBC,mBAAoB,IACpBC,mBAAoB,EAGpBC,YAAY,GC9Cf,GAEG/B,iBAAkB,GAGlBC,iBAAkB,IAClBC,kBAAmB,IACnBC,iBAAkB,IAClBC,sBAAuB,GAGvBC,cAAe,IACfC,eAAgB,IAChBC,cAAe,IACfC,mBAAoB,GAGpBE,iBAAkB,IAClBC,kBAAmB,IACnBC,iBAAkB,IAClBC,sBAAuB,IAGvBC,aAAc,EACdC,YAAa,EACbC,aAAc,GACdC,YAAa,GACbC,aAAc,GACdC,cAAe,IACfC,eAAgB,IAChBC,uBAAwB,GACxBC,yBAA0B,EAC1BC,yBAA0B,EAC1BC,wBAAyB,EAGzBC,gBAAiB,GACjBC,iBAAkB,GAClBtb,gBAAiB,IACjBub,iBAAkB,IAClBC,kBAAmB,IACnBE,mBAAoB,EAGpBC,YAAY,GCzCf,GACG5b,OAAQ,WAEL,OAAI0X,OAAOmE,WAAa,IACd,EAEH,CACV,EACAC,MCjBO,CACJ,QACA,eACA,iBACA,eACA,iBACA,SACA,MACA,eACA,gBACA,aACA,cACA,SACA,YACA,sCACA,SACA,UACA,YACA,oBACA,oBACA,qBACA,kBACA,aACA,aACA,cACA,WACA,QACA,UACA,aACA,oBACA,oBACA,sBACA,sBACA,uBACA,oBACA,qBACA,kBACA,aACA,aACA,cACA,WACA,SACA,aACA,WACA,WACA,mBACA,8BACA,WACA,KACA,oBACA,aACA,WACA,gBACA,MACA,WACA,OACA,YACA,cACA,UACA,OACA,OACA,UACA,UACA,YACA,YACA,YACA,YACA,YACA,gBACA,eACA,eACA,kBACA,yBACA,MACA,OACA,UACA,iBACA,OACA,SACA,aACA,eACA,UACA,aACA,gBACA,YACA,mBACA,UACA,YACA,QACA,YACA,cACA,OACA,OACA,OACA,OACA,WACA,aACA,UACA,YACA,MACA,MACA,WACA,aACA,WACA,WACA,MACA,aACA,MACA,aACA,WACA,mBACA,mBACA,aACA,kBACA,mBACA,SACA,eACA,MACA,aACA,aACA,cACA,sBACA,sBACA,uBACA,oBACA,WACA,kBACA,YACA,KACA,UACA,iBACA,cACA,SACA,gBACA,YACA,YACA,UACA,cACA,QACA,eACA,QACA,eACA,iBACA,eACA,iBACA,sBACA,sBACA,uBACA,oBACA,eACA,eACA,gBACA,aACA,QACA,SACA,SACA,WACA,iBACA,cACA,YACA,UACA,QACA,QACA,QACA,iBACA,eACA,MACA,OACA,YACA,UACA,WACA,SACA,MACA,OACA,UACA,UACA,YACA,aACA,eACA,WACA,aACA,UACA,WACA,iBACA,SACA,OACA,YACA,mBACA,cACA,kBACA,OACA,aACA,OACA,OACA,QACA,MACA,UACA,YACA,WACA,WACA,OACA,WACA,SACA,YACA,UACA,aACA,UACA,OACA,SACA,eACA,WACA,WACA,kBACA,oBACA,UACA,SACA,OACA,OACA,UACA,QACA,aACA,aACA,SACA,WACA,aACA,gBACA,kBACA,kBACA,SACA,SACA,OACA,MACA,OACA,WACA,cACA,qBACA,uBACA,SACA,eACA,gBACA,uBACA,MACA,YACA,aACA,KACA,WACA,aACA,oBACA,kBACA,gBACA,eACA,MACA,OACA,SACA,cACA,OACA,iBACA,eACA,cACA,eACA,eACA,eACA,SACA,aACA,eACA,iBACA,oBACA,eACA,YACA,cACA,eACA,cACA,aACA,UACA,OACA,SACA,OACA,oBACA,UACA,cACA,OACA,iBACA,SACA,QACA,QACA,SACA,WACA,SACA,WACA,cACA,gBACA,OACA,eACA,YACA,eACA,WACA,UACA,aACA,iBACA,UACA,WACA,UACA,QACA,MACA,KACA,OACA,QACA,aACA,aACA,KACA,YACA,OACA,MACA,aACA,SACA,aACA,gBACA,SACA,SACA,QACA,QACA,UACA,QACA,SACA,cACA,qBACA,uBACA,qBACA,gBACA,iBACA,WACA,OACA,QACA,WACA,cACA,cACA,gBACA,cACA,cACA,eACA,YACA,eACA,eACA,iBACA,cACA,kBACA,eACA,cACA,cACA,kBACA,UACA,QACA,SACA,aACA,QACA,UACA,YACA,UACA,OACA,aACA,QACA,YACA,cACA,cACA,cACA,gBACA,iBACA,cACA,kBACA,QACA,QACA,WACA,WACA,UACA,YACA,MACA,QACA,OACA,QACA,SACA,WACA,OACA,cACA,MACA,YACA,cACA,oBACA,WACA,UACA,SACA,SACA,MACA,WACA,MACA,aACA,MACA,WACA,SACA,SACA,gBACA,OACA,UACA,QACA,UACA,aACA,WACA,YACA,YACA,YACA,aACA,cACA,aACA,OACA,WACA,kBACA,SACA,QACA,OACA,WACA,UACA,UACA,iBACA,OACA,kBACA,kBACA,mBACA,gBACA,aACA,QACA,SACA,eACA,aACA,iBACA,OACA,MACA,aACA,QACA,UACA,YACA,OACA,cACA,cACA,gBACA,gBACA,SACA,WACA,SACA,SACA,SACA,QACA,UACA,YACA,aACA,mBACA,QACA,eACA,eACA,iBACA,WACA,SACA,eACA,OACA,QACA,SACA,eACA,aACA,gBACA,QACA,UACA,SACA,cACA,eACA,iBACA,gBACA,uBACA,WACA,SACA,QACA,gBACA,UACA,YACA,cACA,cACA,gBACA,YACA,YACA,QACA,QACA,eACA,iBACA,MACA,SACA,SACA,gBACA,kBACA,UACA,QACA,eACA,QACA,YACA,YACA,aACA,iBACA,gBACA,YACA,cACA,mBACA,QACA,OACA,cACA,gBACA,OACA,OACA,cACA,cACA,gBACA,UACA,YACA,QACA,eACA,eACA,KACA,SACA,WACA,kBACA,oBACA,QACA,aACA,cACA,KACA,SACA,UACA,QACA,UACA,SACA,eACA,gBACA,UACA,aACA,SACA,SACA,UACA,SACA,QACA,YACA,aACA,UACA,MACA,OACA,SACA,cACA,eACA,SACA,MACA,aACA,MACA,QACA,QACA,MACA,SACA,OACA,WACA,SACA,SACA,eACA,cACA,SACA,OACA,SACA,SACA,QACA,YACA,mBACA,eACA,iBACA,SACA,SACA,SACA,OACA,eACA,eACA,kBACA,gBACA,SACA,UACA,gBACA,WACA,SACA,UACA,cACA,UACA,WACA,QACA,QACA,UACA,aACA,UACA,WACA,iBACA,kBACA,cACA,gBACA,OACA,iBACA,kBACA,kBACA,mBACA,WACA,YACA,YACA,mBACA,oBACA,UACA,aACA,gBACA,UACA,QACA,UACA,SACA,WACA,iBACA,iBACA,OACA,YACA,kBACA,iBACA,cACA,SACA,QACA,eACA,gBACA,eACA,cACA,cACA,gBACA,OACA,cACA,gBACA,cACA,gBACA,cACA,qBACA,YACA,SACA,WACA,QACA,cACA,cACA,UACA,QACA,SACA,aACA,MACA,OACA,QACA,OACA,WACA,aACA,gBACA,WACA,cACA,aACA,KACA,WACA,UACA,YACA,cACA,gBACA,gBACA,gBACA,gBACA,gBACA,oBACA,mBACA,mBACA,sBACA,6BACA,aACA,cACA,gBACA,cACA,YACA,SACA,QACA,eACA,iBACA,kBACA,oBACA,OACA,cACA,cACA,aACA,YACA,eACA,YACA,YACA,QACA,cACA,kBACA,QACA,UACA,OACA,SACA,cACA,SACA,QACA,MACA,MACA,SACA,gBACA,eACA,KACA,SACA,UACA,iBACA,WACA,YACA,OACA,mBACA,aACA,SACA,SACA,aACA,WACA,SACA,MACA,MACA,OACA,cACA,gBACA,UACA,SACA,YACA,cACA,aACA,QACA,QACA,UACA,QACA,eACA,aACA,UACA,SACA,gBACA,eACA,QACA,eACA,OACA,KACA,uBACA,cACA,aACA,YACA,UACA,SACA,QACA,SACA,WACA,aACA,iBACA,OACA,cACA,eACA,iBACA,kBACA,kBACA,iBACA,UACA,MACA,YACA,aACA,aACA,UACA,SACA,OACA,cACA,eACA,sBACA,QACA,KACA,YACA,OACA,MACA,QACA,UACA,eACA,2CCruBN,MAAMC,EACHre,YAAYoC,GACT/B,KAAK+B,GAAKA,EACV/B,KAAKie,OAAS,EACjB,CAEAC,SAAS/W,EAAMmK,GACZtR,KAAKie,OAAO3Z,KAAK,CAAE6C,KAAMA,EAAMmK,QAASA,GAC3C,CAEA6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AE,CAAC,EAAE,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,SAAS,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,SAAS,WAAW,WAAW,WAAW,SAAS,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,SAAS,WAAW,WAAW,WAAW,SAAS,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,SAAS,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,WAAWwD,EAAEnO,QAAQ,SAASkO,EAAEC,GAAG,QAAG,IAAoBD,IAAIA,EAAEzH,OAAO,OAAO,EAAE,IAAI5C,EAAE,WAAWguB,EAAE26I,UAAUt+J,QAAG,IAAoBC,IAAIA,EAAE,GAAG,IAAY2Z,EAAE,EAAE3Z,IAAI,EAAE,IAAI,IAAI0F,EAAE,EAAE0xB,EAAEr3B,EAAEzH,OAAOoN,EAAE0xB,EAAE1xB,IAAIiU,EAAEjkB,EAAEqK,EAAE2F,GAAG3F,EAAEuyJ,WAAW5sJ,GAAsB1F,EAAEA,IAAI,EAAXxD,EAAZ,KAAKwD,EAAE2Z,IAAoB,OAAU,EAAH3Z,CAAI,CAAC,EAAE,CAAC,UAAU,KAAK,EAAE,CAAC,SAASD,EAAEC,EAAEtK,GAAG,aAAa,SAASguB,EAAE3jB,GAAG5N,KAAK6J,KAAK,KAAK7J,KAAKmG,OAAO,EAAEnG,KAAK+L,MAAM,EAAE/L,KAAK6qK,KAAK,CAAC,CAAC,IAAIxgK,EAAEuD,EAAE,WAAW2jB,EAAEysB,UAAU,CAACitH,YAAY,SAASr9J,GAAG5N,KAAKmsK,WAAWnsK,KAAK+L,MAAM6B,EAAE,EAAEu+J,WAAW,SAASv+J,GAAG,GAAG5N,KAAKmG,OAAOnG,KAAK6qK,KAAKj9J,GAAGA,EAAE,EAAE,MAAM,IAAItF,MAAM,sCAAsCtI,KAAKmG,OAAO,mBAAmByH,EAAE,qBAAqB,EAAEw+J,SAAS,SAASx+J,GAAG5N,KAAKmsK,WAAWv+J,GAAG5N,KAAK+L,MAAM6B,CAAC,EAAEqmB,KAAK,SAASrmB,GAAG5N,KAAKosK,SAASpsK,KAAK+L,MAAM6B,EAAE,EAAEk9J,OAAO,SAASl9J,GAAG,EAAEy+J,QAAQ,SAASz+J,GAAG,IAAIC,EAAEtK,EAAE,EAAE,IAAIvD,KAAKirK,YAAYr9J,GAAGC,EAAE7N,KAAK+L,MAAM6B,EAAE,EAAEC,GAAG7N,KAAK+L,MAAM8B,IAAItK,GAAGA,GAAG,GAAGvD,KAAK8qK,OAAOj9J,GAAG,OAAO7N,KAAK+L,OAAO6B,EAAErK,CAAC,EAAE+oK,WAAW,SAAS1+J,GAAG,OAAOvD,EAAEkiK,YAAY,SAASvsK,KAAKgrK,SAASp9J,GAAG,EAAEo9J,SAAS,SAASp9J,GAAG,EAAEm9J,qBAAqB,SAASn9J,GAAG,EAAE4+J,SAAS,WAAW,IAAI5+J,EAAE5N,KAAKqsK,QAAQ,GAAG,OAAO,IAAInrJ,KAAiB,MAAXtT,GAAG,GAAG,MAAWA,GAAG,GAAG,IAAI,EAAEA,GAAG,GAAG,GAAGA,GAAG,GAAG,GAAGA,GAAG,EAAE,IAAI,GAAGA,IAAI,EAAE,GAAGC,EAAEnO,QAAQ6xB,CAAC,EAAE,CAAC,UAAU,KAAK,EAAE,CAAC,SAAS3jB,EAAEC,EAAEtK,GAAG,aAAaA,EAAEkpK,QAAO,EAAGlpK,EAAEilJ,QAAO,EAAGjlJ,EAAEoH,KAAI,EAAGpH,EAAEmpK,eAAc,EAAGnpK,EAAE6d,KAAK,KAAK7d,EAAEopK,YAAY,KAAKppK,EAAEqpK,mBAAmB,KAAKrpK,EAAEsrH,QAAQ,KAAKtrH,EAAEspK,gBAAgB,KAAKtpK,EAAEupK,eAAe,IAAI,EAAE,CAAC,GAAG,EAAE,CAAC,SAASl/J,EAAEC,EAAEtK,GAAG,aAAa,IAAIguB,EAAE3jB,EAAE,WAAWrK,EAAEwpK,cAAc,SAASn/J,GAAG,OAAO2jB,EAAEw7I,cAAcn/J,EAAE,EAAErK,EAAEypK,kBAAkB,SAASp/J,GAAG,OAAO2jB,EAAEg7I,YAAY,aAAa3+J,EAAE,EAAErK,EAAE0pK,kBAAkB,SAASr/J,GAAG,OAAO2jB,EAAEg7I,YAAY,SAAS3+J,EAAE,EAAErK,EAAE2pK,YAAY,SAASt/J,GAAG,IAAIC,EAAE0jB,EAAEg7I,YAAY,cAAc3+J,GAAG,OAAO2jB,EAAE47I,iBAAiBt/J,EAAE,EAAEtK,EAAE4pK,iBAAiB,SAASv/J,GAAG,OAAO2jB,EAAE47I,iBAAiBv/J,EAAE,EAAErK,EAAEgpK,YAAY,SAAS3+J,EAAEC,GAAG,OAAO0jB,EAAEg7I,YAAY3+J,EAAEC,EAAE,EAAEtK,EAAE2oK,UAAU,SAASt+J,GAAG,OAAO2jB,EAAE26I,UAAUt+J,EAAE,EAAErK,EAAE6pK,aAAa,SAASx/J,GAAG,OAAO2jB,EAAE67I,aAAax/J,EAAE,EAAErK,EAAE8pK,iBAAiB97I,EAAE87I,iBAAiB9pK,EAAE+pK,iBAAiB/7I,EAAE+7I,iBAAiB/pK,EAAEgqK,OAAO,SAAS3/J,GAAG,OAAO2jB,EAAEg8I,OAAO3/J,EAAE,EAAErK,EAAEiqK,gBAAgB,SAAS5/J,GAAG,OAAO2jB,EAAEi8I,gBAAgB5/J,EAAE,EAAErK,EAAEkqK,SAAS,SAAS7/J,GAAG,OAAO2jB,EAAEk8I,SAAS7/J,EAAE,CAAC,EAAE,CAAC,UAAU,KAAK,EAAE,CAAC,SAASA,EAAEC,EAAEtK,GAAG,aAAa,IAAIguB,EAAE,oBAAoBm8I,YAAY,oBAAoBC,aAAa,oBAAoBC,YAAYvjK,EAAEuD,EAAE,QAAQrK,EAAEyoK,oBAAoBz6I,EAAE,aAAa,QAAQhuB,EAAEwoK,kBAAkBx6I,EAAE,aAAa,QAAQhuB,EAAEqoK,MAAM,OAAOroK,EAAEsoK,SAAS,SAASj+J,EAAEC,GAAG,OAAOxD,EAAEwjK,WAAWjgK,EAAE,CAACkgK,MAAMjgK,EAAEigK,QAAQ,GAAG,EAAEvqK,EAAEuoK,WAAW,SAASl+J,GAAG,OAAOvD,EAAE0jK,WAAWngK,EAAE,CAAC,EAAE,CAACogK,KAAK,KAAK,GAAG,CAAC,SAASpgK,EAAEC,EAAEtK,GAAG,aAAa,SAASguB,EAAE3jB,EAAEC,GAAG,OAAO7N,gBAAgBuxB,GAAGvxB,KAAKsnJ,MAAM,CAAC,EAAEtnJ,KAAK6uH,QAAQ,KAAK7uH,KAAKijG,KAAK,GAAGr1F,GAAG5N,KAAKg1B,KAAKpnB,EAAEC,QAAQ7N,KAAKi3B,MAAM,WAAW,IAAIrpB,EAAE,IAAI2jB,EAAE,IAAI,IAAI1jB,KAAK7N,KAAK,mBAAmBA,KAAK6N,KAAKD,EAAEC,GAAG7N,KAAK6N,IAAI,OAAOD,CAAC,IAAI,IAAI2jB,EAAE3jB,EAAEC,EAAE,CAAC,IAAIxD,EAAEuD,EAAE,YAAY2jB,EAAEysB,UAAUpwC,EAAE,YAAY2jB,EAAEysB,UAAUhpB,KAAKpnB,EAAE,UAAU2jB,EAAE08I,QAAQrgK,EAAE,aAAa2jB,EAAEntB,SAASwJ,EAAE,cAAc2jB,EAAE28I,MAAMtgK,EAAE,2BAA2B2jB,EAAEk7I,OAAO,CAACvB,OAAO,SAASt9J,GAAG,OAAOvD,EAAE6gK,OAAOt9J,EAAE,EAAEu9J,OAAO,SAASv9J,GAAG,OAAOvD,EAAE8gK,OAAOv9J,EAAE,GAAG2jB,EAAE48I,aAAavgK,EAAE,kBAAkBC,EAAEnO,QAAQ6xB,CAAC,EAAE,CAAC,WAAW,EAAE,iBAAiB,EAAE,aAAa,EAAE,0BAA0B,EAAE,SAAS,GAAG,WAAW,GAAG,YAAY,KAAK,GAAG,CAAC,SAAS3jB,EAAEC,EAAEtK,GAAG,aAAa,IAAIguB,EAAE3jB,EAAE,YAAYvD,EAAEuD,EAAE,UAAU5G,EAAE4G,EAAE,WAAW8xG,EAAE9xG,EAAE,gBAAgBC,EAAEnO,QAAQ,SAASkO,EAAEC,GAAG,IAAItK,EAAEikB,EAAEjU,EAAE0xB,EAAE,KAAIp3B,EAAE7G,EAAEtD,OAAOmK,GAAG,CAAC,EAAE,CAAC4+J,QAAO,EAAG2B,YAAW,EAAGC,uBAAsB,EAAG3B,eAAc,EAAG4B,eAAejkK,EAAEkkK,cAAe9B,SAAS7+J,EAAE2jB,EAAE45I,OAAOv9J,IAAiBrK,GAAbikB,EAAE,IAAIk4F,EAAE9xG,EAAEC,IAAOy5I,MAAM/zI,EAAE,EAAEA,EAAEhQ,EAAE4C,OAAOoN,IAAI0xB,EAAE1hC,EAAEgQ,GAAGvT,KAAK25E,KAAK10C,EAAEupI,YAAYvpI,EAAEwpI,aAAa,CAACjmB,QAAO,EAAG6lB,uBAAsB,EAAGjtJ,KAAK6jB,EAAE7jB,KAAKzW,IAAIs6B,EAAEt6B,IAAIkkH,QAAQ5pF,EAAEypI,eAAevoK,OAAO8+B,EAAEypI,eAAe,KAAK7B,gBAAgB5nI,EAAE4nI,gBAAgBC,eAAe7nI,EAAE6nI,eAAeJ,cAAc7+J,EAAE6+J,gBAAgB,OAAOllJ,EAAEmnJ,WAAWxoK,SAASnG,KAAK6uH,QAAQrnG,EAAEmnJ,YAAY3uK,IAAI,CAAC,EAAE,CAAC,WAAW,EAAE,SAAS,GAAG,UAAU,GAAG,eAAe,KAAK,GAAG,CAAC,SAAS4N,EAAEC,EAAEtK,IAAG,SAAUqK,GAAG,aAAaC,EAAEnO,QAAQ,SAASmO,EAAEtK,GAAG,OAAO,IAAIqK,EAAEC,EAAEtK,EAAE,EAAEsK,EAAEnO,QAAQyjB,KAAK,SAAStV,GAAG,OAAOD,EAAEghK,SAAS/gK,EAAE,CAAE,GAAEowC,KAAKj+C,KAAK,oBAAoB6uK,OAAOA,YAAO,EAAO,EAAE,CAAC,GAAG,GAAG,CAAC,SAASjhK,EAAEC,EAAEtK,GAAG,aAAa,SAASguB,EAAE3jB,GAAG5N,KAAK6J,KAAK+D,EAAE5N,KAAKmG,OAAOnG,KAAK6J,KAAK1D,OAAOnG,KAAK+L,MAAM,EAAE/L,KAAK6qK,KAAK,CAAC,CAAC,IAAIxgK,EAAEuD,EAAE,sBAAsB2jB,EAAEysB,UAAU,IAAI3zC,EAAEknB,EAAEysB,UAAUgtH,SAAS,SAASp9J,GAAG5N,KAAKirK,YAAYr9J,GAAG,IAAIC,EAAE7N,KAAK6J,KAAKuJ,MAAMpT,KAAK6qK,KAAK7qK,KAAK+L,MAAM/L,KAAK6qK,KAAK7qK,KAAK+L,MAAM6B,GAAG,OAAO5N,KAAK+L,OAAO6B,EAAEC,CAAC,EAAEA,EAAEnO,QAAQ6xB,CAAC,EAAE,CAAC,qBAAqB,KAAK,GAAG,CAAC,SAAS3jB,EAAEC,EAAEtK,GAAG,aAAa,IAAIguB,EAAE3jB,EAAE,aAAavD,EAAEuD,EAAE,WAAW5G,EAAE4G,EAAE,WAAW8xG,EAAE9xG,EAAE,eAAe4Z,EAAE5Z,EAAE,cAAc2F,EAAE3F,EAAE,YAAYq3B,EAAEr3B,EAAE,kBAAkB2G,EAAE3G,EAAE,sBAAsB4G,EAAE5G,EAAE,gBAAgBw5J,EAAEx5J,EAAE,UAAUk2C,EAAEl2C,EAAE,kBAAkBmZ,EAAEnZ,EAAE,sBAAsBiV,EAAE,SAASjV,GAAG,GAAGA,EAAEkhK,iBAAiBv6J,IAAI3G,EAAEkhK,MAAMlhK,EAAEkhK,MAAMrD,aAAa79J,EAAEzL,QAAQqmJ,QAAO,EAAG56I,EAAEzL,QAAQsqK,QAAO,EAAG,eAAepiK,EAAE6hK,UAAUt+J,EAAEkhK,QAAQ,CAAC,IAAIjhK,EAAED,EAAEkhK,MAAMlhK,EAAEkhK,MAAM,IAAIpB,WAAW7/J,EAAE1H,QAAQ,IAAI0H,EAAE1H,QAAQyH,EAAEkhK,MAAMt0J,IAAI3M,EAAE,EAAE,CAAC,OAAOD,EAAEkhK,KAAK,EAAE7lJ,EAAE,SAASrb,GAAG,IAAIC,EAAEgV,EAAEjV,GAAoB,MAAM,WAArBvD,EAAE6hK,UAAUr+J,IAAuBD,EAAEzL,QAAQqmJ,QAAQj3H,EAAEw9I,WAAWv6J,EAAE3G,EAAE,SAASD,EAAEohK,WAAWnhK,CAAC,EAAE+B,EAAE,SAAShC,GAAG,IAAIC,EAAEgV,EAAE7iB,MAAM,OAAO,MAAO6N,EAAyB,IAAI7N,KAAKmC,QAAQsqK,SAAS5+J,EAAE0F,EAAE43J,OAAOt9J,IAAIA,EAAED,GAAG5N,KAAKmC,QAAQqmJ,OAAOymB,EAAEV,WAAW1gK,GAAGxD,EAAEkiK,YAAY,SAAS1+J,GAAGD,GAAG5N,KAAKmC,QAAQqmJ,SAAS36I,EAAExD,EAAEkiK,YAAY,SAAS0C,EAAEC,WAAWrhK,KAAKA,EAAE,EAAEjB,EAAE,SAASgB,EAAEC,EAAEtK,GAAGvD,KAAKmH,KAAKyG,EAAE5N,KAAK2K,IAAIpH,EAAEoH,IAAI3K,KAAKohB,KAAK7d,EAAE6d,KAAKphB,KAAK6uH,QAAQtrH,EAAEsrH,QAAQ7uH,KAAK6sK,gBAAgBtpK,EAAEspK,gBAAgB7sK,KAAK8sK,eAAevpK,EAAEupK,eAAe9sK,KAAK8uK,MAAMjhK,EAAE7N,KAAKmC,QAAQoB,EAAEvD,KAAKmvK,iBAAiB,CAACxkK,IAAIpH,EAAEoH,IAAIyW,KAAK7d,EAAE6d,KAAK,EAAExU,EAAEoxC,UAAU,CAAC2uG,OAAO,WAAW,OAAO/8I,EAAEquC,KAAKj+C,MAAK,EAAG,EAAEgvK,SAAS,WAAW,OAAOp/J,EAAEquC,KAAKj+C,MAAK,EAAG,EAAEovK,aAAa,WAAW,IAAIxhK,EAAEqb,EAAEjpB,MAAM,OAAOqK,EAAEkiK,YAAY,aAAa3+J,EAAE,EAAEyhK,aAAa,WAAW,IAAIzhK,EAAEqb,EAAEjpB,MAAM,OAAOqK,EAAEkiK,YAAY,aAAa3+J,EAAE,EAAE0hK,cAAc,WAAW,OAAOtvK,KAAKqvK,eAAeE,MAAM,GAAG,IAAIjvI,EAAE,SAAS1yB,EAAEC,GAAG,IAAItK,EAAEguB,EAAE,GAAG,IAAIhuB,EAAE,EAAEA,EAAEsK,EAAEtK,IAAIguB,GAAG1V,OAAOovI,aAAa,IAAIr9I,GAAGA,KAAK,EAAE,OAAO2jB,CAAC,EAA6Mje,EAAE,SAAS1F,EAAEC,EAAEtK,GAAG,IAAIguB,EAAEvqB,EAAEqD,EAAE6hK,UAAUr+J,GAAG,GAAU,iBAAPtK,EAArP,SAASqK,GAAG,OAA0B,KAAnBA,EAAEA,GAAG,CAAC,GAAI6+J,QAAa,OAAO7+J,EAAE46I,aAAQ,IAAS56I,EAAE46I,SAAS56I,EAAE46I,QAAO,IAAI56I,EAAEvD,EAAE3G,OAAOkK,EAAE4Z,IAAKpG,KAAKxT,EAAEwT,MAAM,IAAIF,KAAK,OAAOtT,EAAE++J,cAAc/+J,EAAE++J,YAAY/+J,EAAE++J,YAAYxkH,eAAev6C,CAAC,CAAgD0wE,CAAE/6E,IAAsBspK,kBAAkBtpK,EAAEspK,gBAAgBtmJ,SAAShjB,EAAEspK,gBAAgB,IAAItpK,EAAEspK,iBAAiB,MAAMtpK,EAAEspK,kBAAkBtpK,EAAEoH,KAAI,GAAIpH,EAAEupK,gBAAgB,GAAGvpK,EAAEupK,iBAAiBvpK,EAAEoH,KAAI,GAAIpH,EAAEoH,MAAMiD,EAAEV,EAAEU,IAAIrK,EAAEmpK,gBAAgBn7I,EAAEmmD,EAAE9pE,KAAKytD,EAAEpd,KAAKj+C,KAAKuxB,GAAE,GAAIhuB,EAAEoH,KAAFpH,MAAcsK,EAAyBtK,EAAEkpK,QAAO,EAAGlpK,EAAEilJ,QAAO,EAAG36I,EAAE,KAAK7G,EAAE,UAAU,GAAG,WAAWA,EAAEzD,EAAEilJ,SAASjlJ,EAAEkpK,SAAkC,IAA1BlpK,EAAE8qK,wBAA6BxgK,EAAExD,EAAE0iK,cAAcl/J,QAAQ,CAAC,GAAGtK,EAAEkpK,QAAO,EAAGlpK,EAAEilJ,QAAO,IAAKxhJ,GAAG6G,aAAa0G,GAAG,MAAM,IAAIjM,MAAM,gBAAgBsF,EAAE,mCAAmC,gBAAgB5G,IAAI6G,EAAExD,EAAEkiK,YAAY,aAAa1+J,GAAG,CAAC,IAAI6xG,EAAE,IAAI9yG,EAAEgB,EAAEC,EAAEtK,GAAG,OAAOvD,KAAKsnJ,MAAM15I,GAAG8xG,EAAEA,CAAC,EAAEhoC,EAAE,SAAS9pE,GAAG,KAAKA,EAAEwF,OAAO,KAAKxF,EAAEA,EAAEgsB,UAAU,EAAEhsB,EAAEzH,OAAO,IAAI,IAAI0H,EAAED,EAAEk7J,YAAY,KAAK,OAAOj7J,EAAE,EAAED,EAAEgsB,UAAU,EAAE/rB,GAAG,EAAE,EAAEX,EAAE,SAASU,GAAG,MAAM,KAAKA,EAAEwF,OAAO,KAAKxF,GAAG,KAAKA,CAAC,EAAEytD,EAAE,SAASztD,EAAEC,GAAG,OAAOA,OAAE,IAAoBA,GAAGA,EAAED,EAAEV,EAAEU,GAAG5N,KAAKsnJ,MAAM15I,IAAI0F,EAAE2qC,KAAKj+C,KAAK4N,EAAE,KAAK,CAACjD,KAAI,EAAG+hK,cAAc7+J,IAAI7N,KAAKsnJ,MAAM15I,EAAE,EAAE4hK,EAAE,SAAS5hK,EAAEC,EAAEtK,GAAG,IAAIguB,EAAEmuF,EAAE,IAAInrG,EAAE,OAAO3G,EAAEkhK,iBAAiBv6J,GAAGmrG,EAAE2rD,iBAAiBz9J,EAAEkhK,MAAMzD,iBAAiB3rD,EAAE4rD,MAAM19J,EAAEkhK,MAAMxD,MAAM,IAAI5rD,EAAE2rD,kBAAkBz9J,EAAEjD,KAAKkD,EAAEo3B,EAAE0mI,MAAMjsD,EAAE8rD,kBAAkB,GAAG9rD,EAAE4rD,MAAM,GAAG19J,EAAEkhK,MAAMvD,oBAAoB19J,EAAE+9J,MAAMlsD,EAAE8rD,kBAAkB59J,EAAEkhK,MAAMpD,wBAAwBn6I,EAAE3jB,EAAEkhK,MAAMrD,aAAa/rD,EAAE8rD,kBAAkB39J,EAAEg+J,SAASxhK,EAAEkiK,YAAY1+J,EAAEk+J,kBAAkBx6I,GAAGhuB,OAAMguB,EAAEtI,EAAErb,KAAM,IAAI2jB,EAAEprB,SAASyH,EAAEjD,MAAMkD,EAAEo3B,EAAE0mI,MAAMp6I,EAAE,IAAImuF,EAAE2rD,iBAAiB95I,EAAEprB,OAAOu5G,EAAE4rD,MAAMtkK,EAAEuqB,GAAGmuF,EAAE8rD,kBAAkB39J,EAAEg+J,SAASxhK,EAAEkiK,YAAY1+J,EAAEk+J,kBAAkBx6I,GAAGhuB,IAAIm8G,EAAE0rD,eAAe1rD,EAAE8rD,kBAAkBrlK,OAAOu5G,EAAE6rD,kBAAkB19J,EAAE+9J,MAAMlsD,CAAC,EAAuG+vD,EAAE,SAAS7hK,EAAEC,EAAEtK,EAAEguB,EAAE/J,EAAEjU,GAAG,IAAI0xB,EAAE1wB,EAAEC,EAAEsvC,EAAE/8B,GAAGxjB,EAAEioK,kBAAkBj4J,IAAI6zJ,EAAE8H,YAAYrsJ,EAAExY,EAAEkiK,YAAY,SAASh5J,EAAE1F,EAAE1G,OAAO8hB,EAAE5e,EAAEkiK,YAAY,SAASnF,EAAE8H,WAAWrhK,EAAE1G,OAAOyI,EAAE/B,EAAEghH,SAAS,GAAGjiH,EAAEvC,EAAEkiK,YAAY,SAASh5J,EAAE3D,IAAI0uE,EAAEj0E,EAAEkiK,YAAY,SAASnF,EAAE8H,WAAWt/J,IAAI0D,EAAE2V,EAAE9iB,SAAS0H,EAAE1G,KAAKhB,OAAOuxE,EAAE4G,EAAEn4E,SAASyJ,EAAEzJ,OAAO+G,EAAEW,EAAE1L,QAAQk5D,EAAE,GAAGm0G,EAAE,GAAGC,EAAE,GAAGj7J,EAAE3G,EAAEshK,iBAAiBxkK,MAAMkD,EAAElD,IAAIkD,EAAElD,IAAIuC,EAAEvC,IAAIm5C,EAAEj2C,EAAEshK,iBAAiB/tJ,OAAOvT,EAAEuT,KAAKvT,EAAEuT,KAAKlU,EAAEkU,KAAK,IAAI6tJ,EAAE,EAAES,EAAE,EAAEl7J,IAAIy6J,GAAG,IAAI,SAASznJ,GAAGkoJ,EAAE,IAAIT,GAA/iB,SAASrhK,EAAEC,GAAG,IAAItK,EAAEqK,EAAE,OAAOA,IAAIrK,EAAEsK,EAAE,MAAM,QAAQ,MAAMtK,IAAI,EAAE,CAAmfosK,CAAE9hK,EAAEg/J,gBAAgBr4J,KAAKk7J,EAAE,GAAGT,GAA7gB,SAASrhK,EAAEC,GAAG,OAAO,IAAID,GAAG,EAAE,CAAkfgiK,CAAE/hK,EAAEi/J,iBAAmB7nI,EAAE6e,EAAEtE,WAAWva,IAAI,EAAEA,GAAG6e,EAAEpE,aAAaza,IAAI,EAAEA,GAAG6e,EAAElE,aAAa,EAAErrC,EAAEuvC,EAAE/J,cAAc,KAAKxlC,IAAI,EAAEA,GAAGuvC,EAAE7J,WAAW,EAAE1lC,IAAI,EAAEA,GAAGuvC,EAAE3J,UAAU7mC,IAAIk8J,EAAElvI,EAAE,EAAE,GAAGA,EAAEt5B,EAAE6b,GAAG,GAAGoG,EAAEoyC,GAAG,KAAK/6B,EAAEkvI,EAAErpK,OAAO,GAAGqpK,GAAG93F,IAAI+3F,EAAEnvI,EAAE,EAAE,GAAGA,EAAEtgC,KAAKsrK,MAAM1+J,GAAG,GAAG0xE,EAAEjjB,GAAG,KAAK/6B,EAAEmvI,EAAEtpK,OAAO,GAAGspK,GAAG,IAAIvrK,EAAE,GAAuS,OAApSA,GAAG,OAAOA,GAAG6iB,IAAIzT,IAAIokE,EAAE,OAAO,OAAOxzE,GAAGX,EAAEgoK,kBAAkBrnK,GAAGo8B,EAAE2E,EAAE,GAAG/gC,GAAGo8B,EAAE/rB,EAAE,GAAGrQ,GAAGo8B,EAAE/8B,EAAE+nK,MAAM,GAAGpnK,GAAGo8B,EAAE/8B,EAAE6nK,eAAe,GAAGlnK,GAAGo8B,EAAE/8B,EAAE8nK,iBAAiB,GAAGnnK,GAAGo8B,EAAEzd,EAAE1c,OAAO,GAAGjC,GAAGo8B,EAAE+6B,EAAEl1D,OAAO,GAAuH,CAAC0pK,WAA/GnwD,EAAEowD,kBAAkB5rK,EAAE2e,EAAEw4C,EAAoG00G,UAAhGrwD,EAAEswD,oBAAoB1vI,EAAEovI,EAAE,GAAGxrK,EAAEo8B,EAAE1zB,EAAEzG,OAAO,GAAG,WAAWm6B,EAAE2uI,EAAE,GAAG3uI,EAAE/O,EAAE,GAAG1O,EAAEw4C,EAAEzuD,EAAkCqjK,iBAAiB1sK,EAAE,EAAE0rK,EAAE,CAACj6I,KAAK,SAASpnB,EAAEC,GAAG,MAAM,IAAIvF,MAAM,mEAAmE,EAAEQ,OAAO,SAAS8E,GAAG,IAAIC,EAAEtK,EAAEguB,EAAEvqB,EAAE04G,EAAE,GAAG,IAAI7xG,KAAK7N,KAAKsnJ,MAAMtnJ,KAAKsnJ,MAAM9oH,eAAe3wB,KAAK0jB,EAAEvxB,KAAKsnJ,MAAMz5I,GAAG7G,EAAE,IAAI4F,EAAE2kB,EAAEpqB,KAAKoqB,EAAEu9I,MAAMzkK,EAAE3G,OAAO6tB,EAAEpvB,UAAUoB,EAAEsK,EAAEuF,MAAMpT,KAAKijG,KAAK98F,OAAO0H,EAAE1H,QAAQ0H,EAAEuF,MAAM,EAAEpT,KAAKijG,KAAK98F,UAAUnG,KAAKijG,MAAMr1F,EAAErK,EAAEyD,IAAI04G,EAAEp7G,KAAK0C,IAAI,OAAO04G,CAAC,EAAE/lC,KAAK,SAAS/rE,EAAEC,EAAEtK,GAAG,GAAG,IAAI0P,UAAU9M,OAAO,CAAC,GAAGkE,EAAEojK,SAAS7/J,GAAG,CAAC,IAAI2jB,EAAE3jB,EAAE,OAAO5N,KAAK8I,QAAO,SAAS8E,EAAEC,GAAG,OAAOA,EAAElD,KAAK4mB,EAAEpO,KAAKvV,EAAE,GAAE,CAAC,OAAO5N,KAAK8I,QAAO,SAAS+E,EAAEtK,GAAG,OAAOA,EAAEoH,KAAKkD,IAAID,CAAC,IAAG,IAAI,IAAI,CAAC,OAAOA,EAAE5N,KAAKijG,KAAKr1F,EAAE0F,EAAE2qC,KAAKj+C,KAAK4N,EAAEC,EAAEtK,GAAGvD,IAAI,EAAEkwK,OAAO,SAAStiK,GAAG,IAAIA,EAAE,OAAO5N,KAAK,GAAGqK,EAAEojK,SAAS7/J,GAAG,OAAO5N,KAAK8I,QAAO,SAAS+E,EAAEtK,GAAG,OAAOA,EAAEoH,KAAKiD,EAAEuV,KAAKtV,EAAE,IAAG,IAAIA,EAAE7N,KAAKijG,KAAKr1F,EAAErK,EAAE83D,EAAEpd,KAAKj+C,KAAK6N,GAAG0jB,EAAEvxB,KAAKi3B,QAAQ,OAAO1F,EAAE0xE,KAAK1/F,EAAE4D,KAAKoqB,CAAC,EAAE/V,OAAO,SAAS5N,GAAGA,EAAE5N,KAAKijG,KAAKr1F,EAAE,IAAIC,EAAE7N,KAAKsnJ,MAAM15I,GAAG,GAAGC,IAAI,KAAKD,EAAEwF,OAAO,KAAKxF,GAAG,KAAKC,EAAE7N,KAAKsnJ,MAAM15I,IAAIC,IAAIA,EAAElD,WAAW3K,KAAKsnJ,MAAM15I,QAAQ,IAAI,IAAIrK,EAAEvD,KAAK8I,QAAO,SAAS+E,EAAEtK,GAAG,OAAOA,EAAE4D,KAAKiM,MAAM,EAAExF,EAAEzH,UAAUyH,CAAC,IAAG2jB,EAAE,EAAEA,EAAEhuB,EAAE4C,OAAOorB,WAAWvxB,KAAKsnJ,MAAM/jJ,EAAEguB,GAAGpqB,MAAM,OAAOnH,IAAI,EAAEu5H,SAAS,SAAS3rH,GAAGA,EAAEvD,EAAE3G,OAAOkK,GAAG,CAAC,EAAE,CAAC6+J,QAAO,EAAGE,YAAY,QAAQC,mBAAmB,KAAKhrK,KAAK,SAASuuK,SAAS,MAAMthD,QAAQ,KAAK2K,SAAS,kBAAkB42C,eAAehJ,EAAE8H,aAAa7kK,EAAE+iK,aAAax/J,EAAEhM,MAAM,WAAWgM,EAAEuiK,UAAU,YAAYviK,EAAEuiK,UAAU,UAAUviK,EAAEuiK,UAAU,UAAUviK,EAAEuiK,WAAWviK,EAAEuiK,SAAS,QAAQ,UAAUviK,EAAEuiK,WAAWviK,EAAEuiK,SAAS,OAAO,IAAItiK,EAAEtK,EAAEguB,EAAE,GAAGvqB,EAAE,EAAEwgB,EAAE,EAAEjT,EAAElK,EAAEkiK,YAAY,SAAS3+J,EAAEwiK,eAAexiK,EAAEihH,SAAS7uH,KAAK6uH,SAAS,KAAK,IAAI,IAAIr6G,KAAKxU,KAAKsnJ,MAAM,GAAGtnJ,KAAKsnJ,MAAM9oH,eAAehqB,GAAG,CAAC,IAAIqO,EAAE7iB,KAAKsnJ,MAAM9yI,GAAGyU,EAAEpG,EAAE1gB,QAAQwqK,aAAa/+J,EAAE++J,YAAYxkH,cAAcv4C,EAAEq1B,EAAEhc,GAAG,IAAIrZ,EAAE,MAAM,IAAItH,MAAM2gB,EAAE,wCAAwC,IAAIrc,EAAEiW,EAAE1gB,QAAQyqK,oBAAoBh/J,EAAEg/J,oBAAoB,CAAC,EAAEtuF,EAAEkxF,EAAEvxH,KAAKj+C,KAAK6iB,EAAEjT,EAAEhD,GAAG0G,EAAEm8J,EAAExxH,KAAKj+C,KAAKwU,EAAEqO,EAAEy7D,EAAEt3E,EAAE4G,EAAEuiK,SAASviK,EAAEwiK,gBAAgBppK,GAAGsM,EAAEu8J,WAAW1pK,OAAOm4E,EAAE8sF,eAAe5jJ,GAAGlU,EAAEy8J,UAAU5pK,OAAOorB,EAAEjtB,KAAKgP,EAAE,CAAC,IAAIokE,EAAKA,EAAEgoC,EAAE2wD,sBAAsB,WAAW/vI,EAAE/O,EAAEprB,OAAO,GAAGm6B,EAAE/O,EAAEprB,OAAO,GAAGm6B,EAAE9Y,EAAE,GAAG8Y,EAAEt5B,EAAE,GAAGs5B,EAAE/rB,EAAEpO,OAAO,GAAGoO,EAAE,IAAIrH,EAAEU,EAAEhM,KAAKkX,cAAc,IAAIjL,EAAE,eAAeX,GAAG,gBAAgBA,GAAG,SAASA,GAAG,eAAeA,EAAE,IAAI6Z,EAAE/f,EAAEwgB,EAAEkwD,EAAEvxE,QAAQ,IAAI29C,EAAE98C,EAAEwgB,EAAEkwD,EAAEvxE,QAAQ5C,EAAE,EAAEA,EAAEguB,EAAEprB,OAAO5C,IAAIsK,EAAEyiK,OAAO/+I,EAAEhuB,GAAGssK,YAAYhiK,EAAEyiK,OAAO/+I,EAAEhuB,GAAG0sK,iBAAiBzE,mBAAmB,IAAIjoK,EAAE,EAAEA,EAAEguB,EAAEprB,OAAO5C,IAAIsK,EAAEyiK,OAAO/+I,EAAEhuB,GAAGwsK,WAAWliK,EAAEyiK,OAAO54F,GAAG,IAAIrc,EAAExtD,EAAE0iK,WAAW,OAAO3iK,EAAEhM,KAAKkX,eAAe,IAAI,aAAa,IAAI,cAAc,IAAI,aAAa,OAAOzO,EAAEkiK,YAAY3+J,EAAEhM,KAAKkX,cAAcuiD,GAAG,IAAI,OAAO,OAAOhxD,EAAE8iK,iBAAiB9iK,EAAEkiK,YAAY,cAAclxG,GAAGztD,EAAE4rH,UAAU,IAAI,SAAS,OAAO5rH,EAAE6+J,OAAOl5J,EAAE23J,OAAO7vG,GAAGA,EAAE,QAAQ,OAAOA,EAAE,EAAEiwG,MAAM,SAAS19J,EAAEC,GAAG,OAAO7G,EAAE4G,EAAEC,EAAE,EAAEqhK,WAAW,SAASthK,GAAG,OAAOvD,EAAEkiK,YAAY,SAASnF,EAAE8H,WAAWthK,GAAG,EAAE2gK,WAAW,SAAS3gK,GAAG,OAAOw5J,EAAEmH,WAAW3gK,EAAE,GAAGC,EAAEnO,QAAQuvK,CAAC,EAAE,CAAC,WAAW,EAAE,qBAAqB,EAAE,iBAAiB,EAAE,UAAU,EAAE,aAAa,EAAE,eAAe,GAAG,cAAc,GAAG,iBAAiB,GAAG,YAAY,GAAG,qBAAqB,GAAG,SAAS,GAAG,UAAU,KAAK,GAAG,CAAC,SAASrhK,EAAEC,EAAEtK,GAAG,aAAaA,EAAEusK,kBAAkB,OAAOvsK,EAAEysK,oBAAoB,OAAOzsK,EAAE8sK,sBAAsB,OAAO9sK,EAAEitK,gCAAgC,OAAOjtK,EAAEktK,4BAA4B,OAAOltK,EAAEmtK,gBAAgB,OAAO,EAAE,CAAC,GAAG,GAAG,CAAC,SAAS9iK,EAAEC,EAAEtK,GAAG,aAAa,SAASguB,EAAE3jB,EAAEC,GAAG7N,KAAK6J,KAAK+D,EAAEC,IAAI7N,KAAK6J,KAAK7C,EAAE+lK,cAAc/sK,KAAK6J,OAAO7J,KAAKmG,OAAOnG,KAAK6J,KAAK1D,OAAOnG,KAAK+L,MAAM,EAAE/L,KAAK6qK,KAAK,CAAC,CAAC,IAAIxgK,EAAEuD,EAAE,gBAAgB5G,EAAE4G,EAAE,WAAW2jB,EAAEysB,UAAU,IAAI3zC,EAAEknB,EAAEysB,UAAU8sH,OAAO,SAASl9J,GAAG,OAAO5N,KAAK6J,KAAKs2J,WAAWngK,KAAK6qK,KAAKj9J,EAAE,EAAE2jB,EAAEysB,UAAU+sH,qBAAqB,SAASn9J,GAAG,OAAO5N,KAAK6J,KAAKi/J,YAAYl7J,GAAG5N,KAAK6qK,IAAI,EAAEt5I,EAAEysB,UAAUgtH,SAAS,SAASp9J,GAAG5N,KAAKirK,YAAYr9J,GAAG,IAAIC,EAAE7N,KAAK6J,KAAKuJ,MAAMpT,KAAK6qK,KAAK7qK,KAAK+L,MAAM/L,KAAK6qK,KAAK7qK,KAAK+L,MAAM6B,GAAG,OAAO5N,KAAK+L,OAAO6B,EAAEC,CAAC,EAAEA,EAAEnO,QAAQ6xB,CAAC,EAAE,CAAC,eAAe,EAAE,UAAU,KAAK,GAAG,CAAC,SAAS3jB,EAAEC,EAAEtK,GAAG,aAAa,IAAIguB,EAAE3jB,EAAE,WAAWvD,EAAE,WAAWrK,KAAK6J,KAAK,EAAE,EAAEQ,EAAE2zC,UAAU,CAACsyH,OAAO,SAAS1iK,GAAGA,EAAE2jB,EAAEg7I,YAAY,SAAS3+J,GAAG5N,KAAK6J,KAAKvF,KAAKsJ,EAAE,EAAE2iK,SAAS,WAAW,OAAOvwK,KAAK6J,KAAKyE,KAAK,GAAG,GAAGT,EAAEnO,QAAQ2K,CAAC,EAAE,CAAC,UAAU,KAAK,GAAG,CAAC,SAASuD,EAAEC,EAAEtK,IAAG,SAAUqK,GAAG,aAAa,GAAGrK,EAAEkpK,QAAO,EAAGlpK,EAAEwnJ,OAAM,EAAGxnJ,EAAE+jD,QAAO,EAAG/jD,EAAEotK,YAAY,oBAAoBzqC,aAAa,oBAAoBwnC,WAAWnqK,EAAEwrK,gBAAW,IAAoBnhK,EAAErK,EAAEqtK,WAAW,oBAAoBlD,WAAW,oBAAoBxnC,YAAY3iI,EAAE+pG,MAAK,MAAO,CAAC,IAAIz/F,EAAE,IAAIq4H,YAAY,GAAG,IAAI3iI,EAAE+pG,KAAK,IAAI,IAAIujE,KAAK,CAAChjK,GAAG,CAACjM,KAAK,oBAAoBwoF,IAAsM,CAAjM,MAAM74D,GAAG,IAAI,IAAgGvqB,EAAE,IAA5F2S,OAAOm3J,aAAan3J,OAAOo3J,mBAAmBp3J,OAAOq3J,gBAAgBr3J,OAAOs3J,eAAsBjqK,EAAEspK,OAAOziK,GAAGtK,EAAE+pG,KAAK,IAAItmG,EAAEkqK,QAAQ,mBAAmB9mF,IAAuB,CAAlB,MAAM74D,GAAGhuB,EAAE+pG,MAAK,CAAE,CAAC,CAAC,CAAE,GAAErvD,KAAKj+C,KAAK,oBAAoB6uK,OAAOA,YAAO,EAAO,EAAE,CAAC,GAAG,GAAG,CAAC,SAASjhK,EAAEC,EAAEtK,GAAG,aAAa,SAASguB,EAAE3jB,GAAGA,IAAI5N,KAAK6J,KAAK+D,EAAE5N,KAAKmG,OAAOnG,KAAK6J,KAAK1D,OAAOnG,KAAK+L,MAAM,EAAE/L,KAAK6qK,KAAK,EAAE,CAAC,IAAIxgK,EAAEuD,EAAE,iBAAiB2jB,EAAEysB,UAAU,IAAI3zC,EAAEknB,EAAEysB,UAAUgtH,SAAS,SAASp9J,GAAG,GAAG5N,KAAKirK,YAAYr9J,GAAG,IAAIA,EAAE,OAAO,IAAI8/J,WAAW,GAAG,IAAI7/J,EAAE7N,KAAK6J,KAAKsnK,SAASnxK,KAAK6qK,KAAK7qK,KAAK+L,MAAM/L,KAAK6qK,KAAK7qK,KAAK+L,MAAM6B,GAAG,OAAO5N,KAAK+L,OAAO6B,EAAEC,CAAC,EAAEA,EAAEnO,QAAQ6xB,CAAC,EAAE,CAAC,gBAAgB,IAAI,GAAG,CAAC,SAAS3jB,EAAEC,EAAEtK,GAAG,aAAa,IAAIguB,EAAE3jB,EAAE,WAAWvD,EAAE,SAASuD,GAAG5N,KAAK6J,KAAK,IAAI6jK,WAAW9/J,GAAG5N,KAAK+L,MAAM,CAAC,EAAE1B,EAAE2zC,UAAU,CAACsyH,OAAO,SAAS1iK,GAAG,IAAIA,EAAEzH,SAASyH,EAAE2jB,EAAEg7I,YAAY,aAAa3+J,GAAG5N,KAAK6J,KAAK2Q,IAAI5M,EAAE5N,KAAK+L,OAAO/L,KAAK+L,OAAO6B,EAAEzH,OAAO,EAAEoqK,SAAS,WAAW,OAAOvwK,KAAK6J,IAAI,GAAGgE,EAAEnO,QAAQ2K,CAAC,EAAE,CAAC,UAAU,KAAK,GAAG,CAAC,SAASuD,EAAEC,EAAEtK,GAAG,aAAa,IAAI,IAAIguB,EAAE3jB,EAAE,WAAWvD,EAAEuD,EAAE,aAAa5G,EAAE4G,EAAE,gBAAgB8xG,EAAE,IAAIvyG,MAAM,KAAKqa,EAAE,EAAEA,EAAE,IAAIA,IAAIk4F,EAAEl4F,GAAGA,GAAG,IAAI,EAAEA,GAAG,IAAI,EAAEA,GAAG,IAAI,EAAEA,GAAG,IAAI,EAAEA,GAAG,IAAI,EAAE,EAAEk4F,EAAE,KAAKA,EAAE,KAAK,EAAE,IAAumBz6E,EAAE,SAASr3B,EAAEC,GAAG,IAAItK,EAAE,KAAIsK,EAAEA,GAAGD,EAAEzH,QAASyH,EAAEzH,SAAS0H,EAAED,EAAEzH,QAAQ5C,EAAEsK,EAAE,EAAEtK,GAAG,GAAG,MAAO,IAAIqK,EAAErK,KAAKA,IAAI,OAAOA,EAAE,GAAI,IAAIA,EAANsK,EAAUtK,EAAEm8G,EAAE9xG,EAAErK,IAAIsK,EAAEtK,EAAEsK,CAAC,EAAE0G,EAAE,SAAS3G,GAAG,IAAIC,EAAEtK,EAAE8G,EAAErD,EAAEwgB,EAAE5Z,EAAEzH,OAAOoN,EAAE,IAAIpG,MAAM,EAAEqa,GAAG,IAAIjkB,EAAE,EAAEsK,EAAE,EAAEA,EAAE2Z,GAAG,IAAGnd,EAAEuD,EAAEC,MAAO,IAAI0F,EAAEhQ,KAAK8G,OAAO,IAAGrD,EAAE04G,EAAEr1G,IAAK,EAAEkJ,EAAEhQ,KAAK,MAAMsK,GAAG7G,EAAE,MAAM,CAAC,IAAIqD,GAAG,IAAIrD,EAAE,GAAG,IAAIA,EAAE,GAAG,EAAEA,EAAE,GAAG6G,EAAE2Z,GAAGnd,EAAEA,GAAG,EAAE,GAAGuD,EAAEC,KAAK7G,IAAIA,EAAE,EAAEuM,EAAEhQ,KAAK,MAAM8G,EAAE,MAAMkJ,EAAEhQ,KAAK8G,GAAGA,GAAG,MAAMkJ,EAAEhQ,KAAK,MAAM8G,GAAG,GAAG,KAAKkJ,EAAEhQ,KAAK,MAAM,KAAK8G,EAAE,CAAC,OAAOkJ,EAAEpN,SAAS5C,IAAIgQ,EAAE49J,SAAS59J,EAAEA,EAAE49J,SAAS,EAAE5tK,GAAGgQ,EAAEpN,OAAO5C,GAAGguB,EAAE6/I,kBAAkB79J,EAAE,EAAEhQ,EAAE2rK,WAAW,SAASthK,GAAG,OAAOvD,EAAE0kK,WAAW/nK,EAAE4G,EAAE,SAAnpC,SAASA,GAAG,IAAIC,EAAEtK,EAAEguB,EAAEvqB,EAAE04G,EAAEl4F,EAAE5Z,EAAEzH,OAAOoN,EAAE,EAAE,IAAIvM,EAAE,EAAEA,EAAEwgB,EAAExgB,IAAsB,QAAS,OAA3BzD,EAAEqK,EAAEuyJ,WAAWn5J,MAAsBA,EAAE,EAAEwgB,GAAwB,QAAS,OAA7B+J,EAAE3jB,EAAEuyJ,WAAWn5J,EAAE,OAAuBzD,EAAE,OAAOA,EAAE,OAAO,KAAKguB,EAAE,OAAOvqB,KAAMuM,GAAGhQ,EAAE,IAAI,EAAEA,EAAE,KAAK,EAAEA,EAAE,MAAM,EAAE,EAAE,IAAIsK,EAAExD,EAAEumK,WAAW,IAAIlD,WAAWn6J,GAAG,IAAIpG,MAAMoG,GAAGmsG,EAAE,EAAE14G,EAAE,EAAE04G,EAAEnsG,EAAEvM,IAAsB,QAAS,OAA3BzD,EAAEqK,EAAEuyJ,WAAWn5J,MAAsBA,EAAE,EAAEwgB,GAAwB,QAAS,OAA7B+J,EAAE3jB,EAAEuyJ,WAAWn5J,EAAE,OAAuBzD,EAAE,OAAOA,EAAE,OAAO,KAAKguB,EAAE,OAAOvqB,KAAMzD,EAAE,IAAIsK,EAAE6xG,KAAKn8G,EAAEA,EAAE,MAAMsK,EAAE6xG,KAAK,IAAIn8G,IAAI,EAAEsK,EAAE6xG,KAAK,IAAI,GAAGn8G,GAAGA,EAAE,OAAOsK,EAAE6xG,KAAK,IAAIn8G,IAAI,GAAGsK,EAAE6xG,KAAK,IAAIn8G,IAAI,EAAE,GAAGsK,EAAE6xG,KAAK,IAAI,GAAGn8G,IAAIsK,EAAE6xG,KAAK,IAAIn8G,IAAI,GAAGsK,EAAE6xG,KAAK,IAAIn8G,IAAI,GAAG,GAAGsK,EAAE6xG,KAAK,IAAIn8G,IAAI,EAAE,GAAGsK,EAAE6xG,KAAK,IAAI,GAAGn8G,GAAG,OAAOsK,CAAC,CAA6jB0F,CAAE3F,EAAE,EAAErK,EAAEgrK,WAAW,SAAS3gK,GAAG,GAAGvD,EAAE0kK,WAAW,OAAOx9I,EAAEg7I,YAAY,aAAa3+J,GAAGgH,SAAS,SAA8D,IAAI,IAAI/G,EAAE,GAAGtK,EAAE,EAAEyD,GAAtE4G,EAAE2jB,EAAEg7I,YAAYliK,EAAEumK,WAAW,aAAa,QAAQhjK,IAAwBzH,OAAe5C,EAAEyD,GAAG,CAAC,IAAIwgB,EAAEyd,EAAEr3B,EAAErH,KAAKu7C,IAAIv+C,EAA/B,MAAmCyD,IAAIqD,EAAEumK,WAAW/iK,EAAEvJ,KAAKiQ,EAAE3G,EAAEujK,SAAS5tK,EAAEikB,KAAK3Z,EAAEvJ,KAAKiQ,EAAE3G,EAAEwF,MAAM7P,EAAEikB,KAAKjkB,EAAEikB,CAAC,CAAC,OAAO3Z,EAAES,KAAK,GAAG,CAAC,EAAE,CAAC,eAAe,GAAG,YAAY,GAAG,UAAU,KAAK,GAAG,CAAC,SAASV,EAAEC,EAAEtK,GAAG,aAAa,SAASguB,EAAE3jB,GAAG,OAAOA,CAAC,CAAC,SAASvD,EAAEuD,EAAEC,GAAG,IAAI,IAAItK,EAAE,EAAEA,EAAEqK,EAAEzH,SAAS5C,EAAEsK,EAAEtK,GAAG,IAAIqK,EAAEuyJ,WAAW58J,GAAG,OAAOsK,CAAC,CAAC,SAAS7G,EAAE4G,GAAG,IAAIC,EAAE,MAAM0jB,EAAE,GAAGlnB,EAAEuD,EAAEzH,OAAOa,EAAEzD,EAAE2oK,UAAUt+J,GAAG8xG,EAAE,EAAEl4F,GAAE,EAAG,IAAI,OAAOxgB,GAAG,IAAI,aAAa6U,OAAOovI,aAAaz9G,MAAM,KAAK,IAAIkgI,WAAW,IAAI,MAAM,IAAI,aAAa7xJ,OAAOovI,aAAaz9G,MAAM,KAAKvI,EAAE,IAAkB,CAAb,MAAM1xB,GAAGiU,GAAE,CAAE,CAAC,IAAIA,EAAE,CAAC,IAAI,IAAIjT,EAAE,GAAGC,EAAE,EAAEA,EAAE5G,EAAEzH,OAAOqO,IAAID,GAAGsH,OAAOovI,aAAar9I,EAAE4G,IAAI,OAAOD,CAAC,CAAC,KAAKmrG,EAAEr1G,GAAGwD,EAAE,GAAG,IAAI,UAAU7G,GAAG,eAAeA,EAAEuqB,EAAEjtB,KAAKuX,OAAOovI,aAAaz9G,MAAM,KAAK5/B,EAAEwF,MAAMssG,EAAEn5G,KAAKu7C,IAAI49D,EAAE7xG,EAAExD,MAAMknB,EAAEjtB,KAAKuX,OAAOovI,aAAaz9G,MAAM,KAAK5/B,EAAEujK,SAASzxD,EAAEn5G,KAAKu7C,IAAI49D,EAAE7xG,EAAExD,MAAMq1G,GAAG7xG,CAA4B,CAA1B,MAAM0F,GAAG1F,EAAEtH,KAAKC,MAAMqH,EAAE,EAAE,CAAC,OAAO0jB,EAAEjjB,KAAK,GAAG,CAAC,SAASoxG,EAAE9xG,EAAEC,GAAG,IAAI,IAAItK,EAAE,EAAEA,EAAEqK,EAAEzH,OAAO5C,IAAIsK,EAAEtK,GAAGqK,EAAErK,GAAG,OAAOsK,CAAC,CAAC,IAAI2Z,EAAE5Z,EAAE,aAAa2F,EAAE3F,EAAE,kBAAkBq3B,EAAEr3B,EAAE,gBAAgBrK,EAAEwpK,cAAc,SAASn/J,GAAG,IAAI,IAAIC,EAAE,GAAGtK,EAAE,EAAEA,EAAEqK,EAAEzH,OAAO5C,IAAIsK,GAAGgO,OAAOovI,aAAa,IAAIr9I,EAAEuyJ,WAAW58J,IAAI,OAAOsK,CAAC,EAAEtK,EAAE4pK,iBAAiB,SAASv/J,EAAEC,GAAGtK,EAAE6pK,aAAa,QAAQv/J,EAAEA,GAAG,kBAAkB,IAAI,OAAO,IAAIgjK,KAAK,CAACjjK,GAAG,CAAChM,KAAKiM,GAAqN,CAAjN,MAAM0jB,GAAG,IAAI,IAAgGvqB,EAAE,IAA5F2S,OAAOm3J,aAAan3J,OAAOo3J,mBAAmBp3J,OAAOq3J,gBAAgBr3J,OAAOs3J,eAAsB,OAAOjqK,EAAEspK,OAAO1iK,GAAG5G,EAAEkqK,QAAQrjK,EAA8D,CAA3D,MAAM0jB,GAAG,MAAM,IAAIjpB,MAAM,kCAAkC,CAAC,CAAC,EAAE/E,EAAE6tK,kBAAkBpqK,EAAE,IAAIuN,EAAE,CAAC,EAAEA,EAAE+yC,OAAO,CAACA,OAAO/1B,EAAEw5H,MAAM,SAASn9I,GAAG,OAAOvD,EAAEuD,EAAE,IAAIT,MAAMS,EAAEzH,QAAQ,EAAEwqK,YAAY,SAAS/iK,GAAG,OAAO2G,EAAE+yC,OAAOspH,WAAWhjK,GAAG2hK,MAAM,EAAEqB,WAAW,SAAShjK,GAAG,OAAOvD,EAAEuD,EAAE,IAAI8/J,WAAW9/J,EAAEzH,QAAQ,EAAE4oK,WAAW,SAASnhK,GAAG,OAAOvD,EAAEuD,EAAEq3B,EAAEr3B,EAAEzH,QAAQ,GAAGoO,EAAEw2I,MAAM,CAACzjG,OAAOtgD,EAAE+jJ,MAAMx5H,EAAEo/I,YAAY,SAAS/iK,GAAG,OAAO,IAAI8/J,WAAW9/J,GAAG2hK,MAAM,EAAEqB,WAAW,SAAShjK,GAAG,OAAO,IAAI8/J,WAAW9/J,EAAE,EAAEmhK,WAAW,SAASnhK,GAAG,OAAOq3B,EAAEr3B,EAAE,GAAG2G,EAAEo8J,YAAY,CAACrpH,OAAO,SAAS15C,GAAG,OAAO5G,EAAE,IAAI0mK,WAAW9/J,GAAG,EAAEm9I,MAAM,SAASn9I,GAAG,OAAO8xG,EAAE,IAAIguD,WAAW9/J,GAAG,IAAIT,MAAMS,EAAEyjK,YAAY,EAAEV,YAAYp/I,EAAEq/I,WAAW,SAAShjK,GAAG,OAAO,IAAI8/J,WAAW9/J,EAAE,EAAEmhK,WAAW,SAASnhK,GAAG,OAAOq3B,EAAE,IAAIyoI,WAAW9/J,GAAG,GAAG2G,EAAEq8J,WAAW,CAACtpH,OAAOtgD,EAAE+jJ,MAAM,SAASn9I,GAAG,OAAO8xG,EAAE9xG,EAAE,IAAIT,MAAMS,EAAEzH,QAAQ,EAAEwqK,YAAY,SAAS/iK,GAAG,OAAOA,EAAE2hK,MAAM,EAAEqB,WAAWr/I,EAAEw9I,WAAW,SAASnhK,GAAG,OAAOq3B,EAAEr3B,EAAE,GAAG2G,EAAEw6J,WAAW,CAACznH,OAAOtgD,EAAE+jJ,MAAM,SAASn9I,GAAG,OAAO8xG,EAAE9xG,EAAE,IAAIT,MAAMS,EAAEzH,QAAQ,EAAEwqK,YAAY,SAAS/iK,GAAG,OAAO2G,EAAEw6J,WAAW6B,WAAWhjK,GAAG2hK,MAAM,EAAEqB,WAAW,SAAShjK,GAAG,OAAO8xG,EAAE9xG,EAAE,IAAI8/J,WAAW9/J,EAAEzH,QAAQ,EAAE4oK,WAAWx9I,GAAGhuB,EAAEgpK,YAAY,SAAS3+J,EAAEC,GAAG,GAAGA,IAAIA,EAAE,KAAKD,EAAE,OAAOC,EAAEtK,EAAE6pK,aAAax/J,GAAG,IAAI2jB,EAAEhuB,EAAE2oK,UAAUr+J,GAAgB,OAAX0G,EAAEgd,GAAG3jB,GAAGC,EAAW,EAAEtK,EAAE2oK,UAAU,SAASt+J,GAAG,MAAM,iBAAiBA,EAAE,SAAS,mBAAmByG,OAAO2pC,UAAUppC,SAASqpC,KAAKrwC,GAAG,QAAQ4Z,EAAEunJ,YAAY9pI,EAAE9hB,KAAKvV,GAAG,aAAa4Z,EAAEopJ,YAAYhjK,aAAa8/J,WAAW,aAAalmJ,EAAEmpJ,aAAa/iK,aAAas4H,YAAY,mBAAc,CAAM,EAAE3iI,EAAE6pK,aAAa,SAASx/J,GAA4B,IAAnB4Z,EAAE5Z,EAAEkL,eAAqB,MAAM,IAAIxQ,MAAMsF,EAAE,oCAAoC,EAAErK,EAAE8pK,iBAAiB,MAAM9pK,EAAE+pK,kBAAkB,EAAE/pK,EAAEgqK,OAAO,SAAS3/J,GAAG,IAAIC,EAAEtK,EAAEguB,EAAE,GAAG,IAAIhuB,EAAE,EAAEA,GAAGqK,GAAG,IAAIzH,OAAO5C,IAAsBguB,GAAG,QAArB1jB,EAAED,EAAEuyJ,WAAW58J,IAAe,GAAG,IAAI,IAAIsK,EAAE+G,SAAS,IAAIuzC,cAAc,OAAO52B,CAAC,EAAEhuB,EAAEiqK,gBAAgB,SAAS5/J,GAAG,IAAI,IAAIC,KAAK0F,EAAE,GAAGA,EAAEirB,eAAe3wB,IAAI0F,EAAE1F,GAAG+9J,QAAQh+J,EAAE,OAAO2F,EAAE1F,GAAG,OAAO,IAAI,EAAEtK,EAAEkqK,SAAS,SAAS7/J,GAAG,MAAM,oBAAoByG,OAAO2pC,UAAUppC,SAASqpC,KAAKrwC,EAAE,EAAErK,EAAEG,OAAO,WAAW,IAAIkK,EAAEC,EAAEtK,EAAE,CAAC,EAAE,IAAIqK,EAAE,EAAEA,EAAEqF,UAAU9M,OAAOyH,IAAI,IAAIC,KAAKoF,UAAUrF,GAAGqF,UAAUrF,GAAG4wB,eAAe3wB,SAAI,IAAoBtK,EAAEsK,KAAKtK,EAAEsK,GAAGoF,UAAUrF,GAAGC,IAAI,OAAOtK,CAAC,CAAC,EAAE,CAAC,iBAAiB,EAAE,eAAe,GAAG,YAAY,KAAK,GAAG,CAAC,SAASqK,EAAEC,EAAEtK,GAAG,aAAa,SAASguB,EAAE3jB,EAAEC,GAAG7N,KAAKsnJ,MAAM,GAAGtnJ,KAAKsxK,YAAYzjK,EAAED,GAAG5N,KAAKg1B,KAAKpnB,EAAE,CAAC,IAAIvD,EAAEuD,EAAE,kBAAkB5G,EAAE4G,EAAE,sBAAsB8xG,EAAE9xG,EAAE,sBAAsB4Z,EAAE5Z,EAAE,iBAAiB2F,EAAE3F,EAAE,WAAWq3B,EAAEr3B,EAAE,eAAe2G,EAAE3G,EAAE,cAAc4G,EAAE5G,EAAE,aAAaA,EAAE,YAAY2jB,EAAEysB,UAAU,CAACuzH,eAAe,SAAS3jK,GAAG,IAAIC,EAAE7N,KAAK+5E,OAAOuyF,WAAW,GAAG,GAAGz+J,IAAID,EAAE,MAAM,IAAItF,MAAM,gDAAgDiL,EAAEg6J,OAAO1/J,GAAG,cAAc0F,EAAEg6J,OAAO3/J,GAAG,IAAI,EAAE4jK,YAAY,SAAS5jK,EAAEC,GAAG,IAAItK,EAAEvD,KAAK+5E,OAAOhuE,MAAM/L,KAAK+5E,OAAOqyF,SAASx+J,GAAG,IAAgCvD,EAA1BrK,KAAK+5E,OAAOuyF,WAAW,KAASz+J,EAAE,OAAO7N,KAAK+5E,OAAOqyF,SAAS7oK,GAAG8G,CAAC,EAAEonK,sBAAsB,WAAWzxK,KAAK0xK,WAAW1xK,KAAK+5E,OAAOsyF,QAAQ,GAAGrsK,KAAK2xK,wBAAwB3xK,KAAK+5E,OAAOsyF,QAAQ,GAAGrsK,KAAK4xK,4BAA4B5xK,KAAK+5E,OAAOsyF,QAAQ,GAAGrsK,KAAK6xK,kBAAkB7xK,KAAK+5E,OAAOsyF,QAAQ,GAAGrsK,KAAK8xK,eAAe9xK,KAAK+5E,OAAOsyF,QAAQ,GAAGrsK,KAAK+xK,iBAAiB/xK,KAAK+5E,OAAOsyF,QAAQ,GAAGrsK,KAAKgyK,iBAAiBhyK,KAAK+5E,OAAOsyF,QAAQ,GAAG,IAAIz+J,EAAE5N,KAAK+5E,OAAOixF,SAAShrK,KAAKgyK,kBAAkBnkK,EAAE2G,EAAEo8J,WAAW,aAAa,QAAQrtK,EAAEgQ,EAAEg5J,YAAY1+J,EAAED,GAAG5N,KAAK2uK,WAAW3uK,KAAKsxK,YAAYhD,eAAe/qK,EAAE,EAAE0uK,2BAA2B,WAAWjyK,KAAKkyK,sBAAsBlyK,KAAK+5E,OAAOsyF,QAAQ,GAAGrsK,KAAKmyK,cAAcnyK,KAAK+5E,OAAOuyF,WAAW,GAAGtsK,KAAKoyK,cAAcpyK,KAAK+5E,OAAOsyF,QAAQ,GAAGrsK,KAAK0xK,WAAW1xK,KAAK+5E,OAAOsyF,QAAQ,GAAGrsK,KAAK2xK,wBAAwB3xK,KAAK+5E,OAAOsyF,QAAQ,GAAGrsK,KAAK4xK,4BAA4B5xK,KAAK+5E,OAAOsyF,QAAQ,GAAGrsK,KAAK6xK,kBAAkB7xK,KAAK+5E,OAAOsyF,QAAQ,GAAGrsK,KAAK8xK,eAAe9xK,KAAK+5E,OAAOsyF,QAAQ,GAAGrsK,KAAK+xK,iBAAiB/xK,KAAK+5E,OAAOsyF,QAAQ,GAAGrsK,KAAKqyK,oBAAoB,CAAC,EAAE,IAAI,IAAIzkK,EAAEC,EAAEtK,EAAEguB,EAAEvxB,KAAKkyK,sBAAsB,GAAK,EAAI3gJ,GAAG3jB,EAAE5N,KAAK+5E,OAAOsyF,QAAQ,GAAGx+J,EAAE7N,KAAK+5E,OAAOsyF,QAAQ,GAAG9oK,EAAEvD,KAAK+5E,OAAOuyF,WAAWz+J,GAAG7N,KAAKqyK,oBAAoBzkK,GAAG,CAAChN,GAAGgN,EAAEzH,OAAO0H,EAAElL,MAAMY,EAAE,EAAE+uK,kCAAkC,WAAW,GAAGtyK,KAAKuyK,6BAA6BvyK,KAAK+5E,OAAOsyF,QAAQ,GAAGrsK,KAAKwyK,mCAAmCxyK,KAAK+5E,OAAOsyF,QAAQ,GAAGrsK,KAAKyyK,WAAWzyK,KAAK+5E,OAAOsyF,QAAQ,GAAGrsK,KAAKyyK,WAAW,EAAE,MAAM,IAAInqK,MAAM,sCAAsC,EAAEoqK,eAAe,WAAW,IAAI9kK,EAAEC,EAAE,IAAID,EAAE,EAAEA,EAAE5N,KAAKsnJ,MAAMnhJ,OAAOyH,IAAIC,EAAE7N,KAAKsnJ,MAAM15I,GAAG5N,KAAK+5E,OAAOqyF,SAASv+J,EAAE8kK,mBAAmB3yK,KAAKuxK,eAAetsI,EAAE6qI,mBAAmBjiK,EAAE+kK,cAAc5yK,KAAK+5E,QAAQlsE,EAAEglK,aAAahlK,EAAEilK,mBAAmB,EAAEC,eAAe,WAAW,IAAInlK,EAAE,IAAI5N,KAAK+5E,OAAOqyF,SAASpsK,KAAK+xK,kBAAkB/xK,KAAK+5E,OAAOuyF,WAAW,KAAKrnI,EAAE+qI,sBAAqBpiK,EAAE,IAAI2G,EAAE,CAACy+J,MAAMhzK,KAAKgzK,OAAOhzK,KAAKsxK,cAAe2B,gBAAgBjzK,KAAK+5E,QAAQ/5E,KAAKsnJ,MAAMhjJ,KAAKsJ,GAAG,GAAG5N,KAAK6xK,oBAAoB7xK,KAAKsnJ,MAAMnhJ,QAAQ,IAAInG,KAAK6xK,mBAAmB,IAAI7xK,KAAKsnJ,MAAMnhJ,OAAO,MAAM,IAAImC,MAAM,kCAAkCtI,KAAK6xK,kBAAkB,gCAAgC7xK,KAAKsnJ,MAAMnhJ,OAAO,EAAE+sK,iBAAiB,WAAW,IAAItlK,EAAE5N,KAAK+5E,OAAOgxF,qBAAqB9lI,EAAEorI,uBAAuB,GAAGziK,EAAE,EAAkD,MAAxC5N,KAAKwxK,YAAY,EAAEvsI,EAAE6qI,mBAA+K,IAAIxnK,MAAM,uDAA9J,IAAIA,MAAM,0IAA2MtI,KAAK+5E,OAAOqyF,SAASx+J,GAAG,IAAIrK,EAAEqK,EAAE,GAAG5N,KAAKuxK,eAAetsI,EAAEorI,uBAAuBrwK,KAAKyxK,wBAAwBzxK,KAAK0xK,aAAan+J,EAAE85J,kBAAkBrtK,KAAK2xK,0BAA0Bp+J,EAAE85J,kBAAkBrtK,KAAK4xK,8BAA8Br+J,EAAE85J,kBAAkBrtK,KAAK6xK,oBAAoBt+J,EAAE85J,kBAAkBrtK,KAAK8xK,iBAAiBv+J,EAAE+5J,kBAAkBttK,KAAK+xK,mBAAmBx+J,EAAE+5J,iBAAiB,CAAC,GAAGttK,KAAKgzK,OAAM,GAAGplK,EAAE5N,KAAK+5E,OAAOgxF,qBAAqB9lI,EAAEurI,kCAAmC,EAAE,MAAM,IAAIloK,MAAM,yEAAyE,GAAGtI,KAAK+5E,OAAOqyF,SAASx+J,GAAG5N,KAAKuxK,eAAetsI,EAAEurI,iCAAiCxwK,KAAKsyK,qCAAqCtyK,KAAKwxK,YAAYxxK,KAAKwyK,mCAAmCvtI,EAAEwrI,+BAA+BzwK,KAAKwyK,mCAAmCxyK,KAAK+5E,OAAOgxF,qBAAqB9lI,EAAEwrI,6BAA6BzwK,KAAKwyK,mCAAmC,GAAG,MAAM,IAAIlqK,MAAM,iEAAiEtI,KAAK+5E,OAAOqyF,SAASpsK,KAAKwyK,oCAAoCxyK,KAAKuxK,eAAetsI,EAAEwrI,6BAA6BzwK,KAAKiyK,4BAA4B,CAAC,IAAI1gJ,EAAEvxB,KAAK+xK,iBAAiB/xK,KAAK8xK,eAAe9xK,KAAKgzK,QAAQzhJ,GAAG,GAAGA,GAAG,GAAGvxB,KAAKkyK,uBAAuB,IAAI7nK,EAAE9G,EAAEguB,EAAE,GAAGlnB,EAAE,EAAErK,KAAKwxK,YAAYjuK,EAAE0hC,EAAE+qI,uBAAuBhwK,KAAK+5E,OAAO8wF,KAAKxgK,QAAQ,GAAGA,EAAE,EAAE,MAAM,IAAI/B,MAAM,0BAA0B/B,KAAKo+C,IAAIt6C,GAAG,UAAU,EAAE8oK,cAAc,SAASvlK,GAAG,IAAIC,EAAE0F,EAAE24J,UAAUt+J,GAAG,GAAG2F,EAAE65J,aAAav/J,GAAG,WAAWA,GAAG2G,EAAEo8J,WAAW,GAAG,eAAe/iK,EAAE7N,KAAK+5E,OAAO,IAAI/yE,EAAE4G,QAAQ,GAAG4G,EAAEo8J,WAAW5wK,KAAK+5E,OAAO,IAAI2lC,EAAEnsG,EAAEg5J,YAAY,aAAa3+J,QAAQ,CAAC,IAAI4G,EAAEu2I,MAAM,MAAM,IAAIziJ,MAAM,uCAAuCuF,EAAE,KAAK7N,KAAK+5E,OAAO,IAAIvyD,EAAEjU,EAAEg5J,YAAY,QAAQ3+J,GAAG,MAAM5N,KAAK+5E,OAAO,IAAI1vE,EAAEuD,EAAE5N,KAAKsxK,YAAYjD,sBAAsB,EAAEr5I,KAAK,SAASpnB,GAAG5N,KAAKmzK,cAAcvlK,GAAG5N,KAAKkzK,mBAAmBlzK,KAAK+yK,iBAAiB/yK,KAAK0yK,gBAAgB,GAAG7kK,EAAEnO,QAAQ6xB,CAAC,EAAE,CAAC,gBAAgB,EAAE,qBAAqB,GAAG,WAAW,GAAG,cAAc,GAAG,iBAAiB,GAAG,YAAY,GAAG,qBAAqB,GAAG,UAAU,GAAG,aAAa,KAAK,GAAG,CAAC,SAAS3jB,EAAEC,EAAEtK,GAAG,aAAa,SAASguB,EAAE3jB,EAAEC,GAAG7N,KAAKmC,QAAQyL,EAAE5N,KAAKsxK,YAAYzjK,CAAC,CAAC,IAAIxD,EAAEuD,EAAE,kBAAkB5G,EAAE4G,EAAE,WAAW8xG,EAAE9xG,EAAE,sBAAsB4Z,EAAE5Z,EAAE,YAAY2F,EAAE3F,EAAE,aAAqB2jB,EAAEysB,UAAU,CAACo1H,YAAY,WAAW,OAAO,IAAK,EAAEpzK,KAAKqzK,QAAQ,EAAEC,QAAQ,WAAW,OAAO,OAAQ,KAAKtzK,KAAKqzK,QAAQ,EAAEE,yBAAyB,SAAS3lK,EAAEC,EAAEtK,GAAG,OAAO,WAAW,IAAIguB,EAAE3jB,EAAE7B,MAAM6B,EAAEw+J,SAASv+J,GAAG,IAAIxD,EAAEuD,EAAEo9J,SAASznK,GAAG,OAAOqK,EAAEw+J,SAAS76I,GAAGlnB,CAAC,CAAC,EAAEmpK,eAAe,SAAS5lK,EAAEC,EAAEtK,EAAEguB,EAAElnB,GAAG,OAAO,WAAW,IAAIuD,EAAE5G,EAAEulK,YAAYh7I,EAAEy6I,oBAAoBhsK,KAAK0rK,wBAAwB79J,EAAE0jB,EAAEu6I,WAAWl+J,GAAG,GAAGC,EAAE1H,SAASkE,EAAE,MAAM,IAAI/B,MAAM,yCAAyC,OAAOuF,CAAC,CAAC,EAAE+kK,cAAc,SAAShlK,GAAG,IAAIC,EAAEtK,EAAE,GAAGqK,EAAEqmB,KAAK,IAAIj0B,KAAKyzK,eAAe7lK,EAAEy+J,QAAQ,GAAG9oK,EAAEqK,EAAEy+J,QAAQ,GAAGrsK,KAAKy4G,SAAS7qG,EAAEo9J,SAAShrK,KAAKyzK,gBAAgB7lK,EAAEqmB,KAAK1wB,IAAyB,GAAtBvD,KAAKorK,iBAA4C,GAAxBprK,KAAKqrK,iBAAqB,MAAM,IAAI/iK,MAAM,qIAAqI,GAA+C,QAA5CuF,EAAE7G,EAAEwmK,gBAAgBxtK,KAAKurK,oBAA4B,MAAM,IAAIjjK,MAAM,+BAA+BtB,EAAEumK,OAAOvtK,KAAKurK,mBAAmB,0BAA0BvkK,EAAEulK,YAAY,SAASvsK,KAAKy4G,UAAU,KAAK,GAAGz4G,KAAKyuK,aAAa,IAAI/uD,EAAE1/G,KAAKyuK,aAAarD,eAAeprK,KAAKorK,eAAeprK,KAAKyuK,aAAapD,iBAAiBrrK,KAAKqrK,iBAAiBrrK,KAAKyuK,aAAanD,MAAMtrK,KAAKsrK,MAAMtrK,KAAKyuK,aAAalD,kBAAkBvrK,KAAKurK,kBAAkBvrK,KAAKyuK,aAAa/C,qBAAqB1rK,KAAKuzK,yBAAyB3lK,EAAEA,EAAE7B,MAAM/L,KAAKorK,eAAev9J,GAAG7N,KAAKyuK,aAAahD,WAAWzrK,KAAKwzK,eAAe5lK,EAAEA,EAAE7B,MAAM/L,KAAKorK,eAAev9J,EAAE7N,KAAKqrK,kBAAkBrrK,KAAKsxK,YAAYlD,aAAapuK,KAAKyuK,aAAaznK,EAAEulK,YAAY,SAASvsK,KAAKyuK,aAAahD,cAAcjkJ,EAAE8jJ,MAAMtrK,KAAKyuK,gBAAgBzuK,KAAKsrK,OAAO,MAAM,IAAIhjK,MAAM,iCAC5x+B,EAAE2qK,gBAAgB,SAASrlK,GAAG,GAAG5N,KAAKmyK,cAAcvkK,EAAEy+J,QAAQ,GAAGrsK,KAAKoyK,cAAcxkK,EAAEy+J,QAAQ,GAAGrsK,KAAKqzK,QAAQzlK,EAAEy+J,QAAQ,GAAGrsK,KAAKurK,kBAAkB39J,EAAE0+J,WAAW,GAAGtsK,KAAKohB,KAAKxT,EAAE4+J,WAAWxsK,KAAKsrK,MAAM19J,EAAEy+J,QAAQ,GAAGrsK,KAAKorK,eAAex9J,EAAEy+J,QAAQ,GAAGrsK,KAAKqrK,iBAAiBz9J,EAAEy+J,QAAQ,GAAGrsK,KAAKyzK,eAAe7lK,EAAEy+J,QAAQ,GAAGrsK,KAAK0zK,kBAAkB9lK,EAAEy+J,QAAQ,GAAGrsK,KAAK2zK,kBAAkB/lK,EAAEy+J,QAAQ,GAAGrsK,KAAK4zK,gBAAgBhmK,EAAEy+J,QAAQ,GAAGrsK,KAAK6zK,uBAAuBjmK,EAAEy+J,QAAQ,GAAGrsK,KAAK8zK,uBAAuBlmK,EAAEy+J,QAAQ,GAAGrsK,KAAK2yK,kBAAkB/kK,EAAEy+J,QAAQ,GAAGrsK,KAAKozK,cAAc,MAAM,IAAI9qK,MAAM,mCAAmCtI,KAAKy4G,SAAS7qG,EAAEo9J,SAAShrK,KAAKyzK,gBAAgBzzK,KAAK+zK,gBAAgBnmK,GAAG5N,KAAKg0K,qBAAqBpmK,GAAG5N,KAAKi0K,YAAYrmK,EAAEo9J,SAAShrK,KAAK2zK,kBAAkB,EAAEb,kBAAkB,WAAW9yK,KAAK6sK,gBAAgB,KAAK7sK,KAAK8sK,eAAe,KAAK,IAAIl/J,EAAE5N,KAAKmyK,eAAe,EAAEnyK,KAAK2K,OAAO,GAAG3K,KAAK8zK,wBADm05B,IAC3y5BlmK,IAAQ5N,KAAK8sK,eAAe,GAAG9sK,KAAK8zK,wBAD2w5B,IACnv5BlmK,IAAQ5N,KAAK6sK,gBAAgB7sK,KAAK8zK,wBAAwB,GAAG,OAAO9zK,KAAK2K,KAAK,MAAM3K,KAAKwuK,YAAYp7J,OAAO,KAAKpT,KAAK2K,KAAI,EAAG,EAAEqpK,qBAAqB,SAASpmK,GAAG,GAAG5N,KAAKk0K,YAAY,GAAG,CAAC,IAAIrmK,EAAE,IAAIxD,EAAErK,KAAKk0K,YAAY,GAAGvxK,OAAO3C,KAAKqrK,mBAAmBrkK,EAAEsmK,mBAAmBttK,KAAKqrK,iBAAiBx9J,EAAEw+J,QAAQ,IAAIrsK,KAAKorK,iBAAiBpkK,EAAEsmK,mBAAmBttK,KAAKorK,eAAev9J,EAAEw+J,QAAQ,IAAIrsK,KAAK2yK,oBAAoB3rK,EAAEsmK,mBAAmBttK,KAAK2yK,kBAAkB9kK,EAAEw+J,QAAQ,IAAIrsK,KAAK4zK,kBAAkB5sK,EAAEsmK,mBAAmBttK,KAAK4zK,gBAAgB/lK,EAAEw+J,QAAQ,GAAG,CAAC,EAAE0H,gBAAgB,SAASnmK,GAAG,IAAIC,EAAEtK,EAAEguB,EAAElnB,EAAEuD,EAAE7B,MAAM,IAAI/L,KAAKk0K,YAAYl0K,KAAKk0K,aAAa,CAAC,EAAEtmK,EAAE7B,MAAM1B,EAAErK,KAAK0zK,mBAAmB7lK,EAAED,EAAEy+J,QAAQ,GAAG9oK,EAAEqK,EAAEy+J,QAAQ,GAAG96I,EAAE3jB,EAAE0+J,WAAW/oK,GAAGvD,KAAKk0K,YAAYrmK,GAAG,CAACjN,GAAGiN,EAAE1H,OAAO5C,EAAEZ,MAAM4uB,EAAE,EAAEshJ,WAAW,WAAW,IAAIjlK,EAAE2F,EAAEq9J,WAAW,aAAa,QAAQ,GAAG5wK,KAAKszK,UAAUtzK,KAAKwuK,YAAYhnJ,EAAE+mJ,WAAWvuK,KAAKy4G,UAAUz4G,KAAK0uK,eAAelnJ,EAAE+mJ,WAAWvuK,KAAKi0K,iBAAiB,CAAC,IAAIpmK,EAAE7N,KAAKm0K,4BAA4B,GAAG,OAAOtmK,EAAE7N,KAAKwuK,YAAY3gK,MAAM,CAAC,IAAItK,EAAEyD,EAAEulK,YAAY3+J,EAAE5N,KAAKy4G,UAAUz4G,KAAKwuK,YAAYxuK,KAAKsxK,YAAYhD,eAAe/qK,EAAE,CAAC,IAAIguB,EAAEvxB,KAAKo0K,+BAA+B,GAAG,OAAO7iJ,EAAEvxB,KAAK0uK,eAAen9I,MAAM,CAAC,IAAIlnB,EAAErD,EAAEulK,YAAY3+J,EAAE5N,KAAKi0K,aAAaj0K,KAAK0uK,eAAe1uK,KAAKsxK,YAAYhD,eAAejkK,EAAE,CAAC,CAAC,EAAE8pK,0BAA0B,WAAW,IAAIvmK,EAAE5N,KAAKk0K,YAAY,OAAO,GAAGtmK,EAAE,CAAC,IAAIC,EAAE,IAAIxD,EAAEuD,EAAEjL,OAAO,OAAO,IAAIkL,EAAEw+J,QAAQ,IAAQ7kJ,EAAE8jJ,MAAMtrK,KAAKy4G,YAAY5qG,EAAEw+J,QAAQ,GAAxC,KAAgD7kJ,EAAE+mJ,WAAW1gK,EAAEy+J,WAAW1+J,EAAEzH,OAAO,GAAG,CAAC,OAAO,IAAI,EAAEiuK,6BAA6B,WAAW,IAAIxmK,EAAE5N,KAAKk0K,YAAY,OAAO,GAAGtmK,EAAE,CAAC,IAAIC,EAAE,IAAIxD,EAAEuD,EAAEjL,OAAO,OAAO,IAAIkL,EAAEw+J,QAAQ,IAAQ7kJ,EAAE8jJ,MAAMtrK,KAAKi0K,eAAepmK,EAAEw+J,QAAQ,GAA3C,KAAmD7kJ,EAAE+mJ,WAAW1gK,EAAEy+J,WAAW1+J,EAAEzH,OAAO,GAAG,CAAC,OAAO,IAAI,GAAG0H,EAAEnO,QAAQ6xB,CAAC,EAAE,CAAC,qBAAqB,EAAE,WAAW,GAAG,iBAAiB,GAAG,YAAY,GAAG,UAAU,KAAK,GAAG,CAAC,SAAS3jB,EAAEC,EAAEtK,GAAG,aAAa,IAA2GikB,EAAE,CAAC,GAAE+J,EAA1G3jB,EAAE,sBAAsBykB,QAAoF7K,EAA3E5Z,EAAE,iBAAmBA,EAAE,iBAAmBA,EAAE,yBAAwCC,EAAEnO,QAAQ8nB,CAAC,EAAE,CAAC,gBAAgB,GAAG,gBAAgB,GAAG,qBAAqB,GAAG,uBAAuB,KAAK,GAAG,CAAC,SAAS5Z,EAAEC,EAAEtK,GAAG,aAAa,SAASguB,EAAE3jB,GAAG,KAAK5N,gBAAgBuxB,GAAG,OAAO,IAAIA,EAAE3jB,GAAG5N,KAAKmC,QAAQoR,EAAE8e,OAAO,CAACy7I,MAAMlhK,EAAEsK,OAAOonE,EAAE+1F,UAAU,MAAMC,WAAW,GAAGC,SAAS,EAAEC,SAASl0I,EAAE6K,GAAG,IAAIv9B,GAAG,CAAC,GAAG,IAAIC,EAAE7N,KAAKmC,QAAQ0L,EAAEyR,KAAKzR,EAAEymK,WAAW,EAAEzmK,EAAEymK,YAAYzmK,EAAEymK,WAAWzmK,EAAE4mK,MAAM5mK,EAAEymK,WAAW,GAAGzmK,EAAEymK,WAAW,KAAKzmK,EAAEymK,YAAY,IAAIt0K,KAAKmI,IAAI,EAAEnI,KAAK0f,IAAI,GAAG1f,KAAK00K,OAAM,EAAG10K,KAAKyoD,OAAO,GAAGzoD,KAAK20K,KAAK,IAAIngK,EAAExU,KAAK20K,KAAKC,UAAU,EAAE,IAAIrxK,EAAEikB,EAAEqtJ,aAAa70K,KAAK20K,KAAK9mK,EAAEigK,MAAMjgK,EAAEqJ,OAAOrJ,EAAEymK,WAAWzmK,EAAE0mK,SAAS1mK,EAAE2mK,UAAU,GAAGjxK,IAAIsf,EAAE,MAAM,IAAIva,MAAMiM,EAAEhR,IAAI,GAAGsK,EAAEgpE,QAAQrvD,EAAEstJ,iBAAiB90K,KAAK20K,KAAK9mK,EAAEgpE,QAAQhpE,EAAEknK,WAAW,CAAC,IAAI1qK,EAAE,GAAGA,EAAE,iBAAiBwD,EAAEknK,WAAW9vI,EAAE+vI,WAAWnnK,EAAEknK,YAAY,yBAAyB3N,EAAEnpH,KAAKpwC,EAAEknK,YAAY,IAAIrH,WAAW7/J,EAAEknK,YAAYlnK,EAAEknK,YAAWxxK,EAAEikB,EAAEytJ,qBAAqBj1K,KAAK20K,KAAKtqK,MAAOwY,EAAE,MAAM,IAAIva,MAAMiM,EAAEhR,IAAIvD,KAAKk1K,WAAU,CAAE,CAAC,CAAC,SAAS7qK,EAAEuD,EAAEC,GAAG,IAAItK,EAAE,IAAIguB,EAAE1jB,GAAG,GAAGtK,EAAEe,KAAKsJ,GAAE,GAAIrK,EAAE4E,IAAI,MAAM5E,EAAEmc,IAAI,OAAOnc,EAAEuK,MAAM,CAAgG,IAAI0Z,EAAE5Z,EAAE,kBAAkB2F,EAAE3F,EAAE,kBAAkBq3B,EAAEr3B,EAAE,mBAAmB2G,EAAE3G,EAAE,mBAAmB4G,EAAE5G,EAAE,kBAAkBw5J,EAAE/yJ,OAAO2pC,UAAUppC,SAAiBiO,EAAE,EAAUjW,GAAG,EAAE0zB,EAAE,EAAEg+C,EAAE,EAAE/sD,EAAEysB,UAAU15C,KAAK,SAASsJ,EAAEC,GAAG,IAAItK,EAAEguB,EAAElnB,EAAErK,KAAK20K,KAAK3tK,EAAEhH,KAAKmC,QAAQkyK,UAAU,GAAGr0K,KAAK00K,MAAM,OAAM,EAAGnjJ,EAAE1jB,MAAMA,EAAEA,GAAM,IAAJA,EAA1I,EAAJ,EAAyJ,iBAAiBD,EAAEvD,EAAE8qK,MAAMlwI,EAAE+vI,WAAWpnK,GAAG,yBAAyBw5J,EAAEnpH,KAAKrwC,GAAGvD,EAAE8qK,MAAM,IAAIzH,WAAW9/J,GAAGvD,EAAE8qK,MAAMvnK,EAAEvD,EAAE+qK,QAAQ,EAAE/qK,EAAEgrK,SAAShrK,EAAE8qK,MAAMhvK,OAAO,EAAE,CAAC,GAAG,IAAIkE,EAAEuqK,YAAYvqK,EAAEirK,OAAO,IAAI/hK,EAAEgiK,KAAKvuK,GAAGqD,EAAEmrK,SAAS,EAAEnrK,EAAEuqK,UAAU5tK,GAA7W,KAAgXzD,EAAEikB,EAAEiuJ,QAAQprK,EAAEknB,KAAUhuB,IAAIsf,EAAE,OAAO7iB,KAAK01K,MAAMnyK,GAAGvD,KAAK00K,OAAM,GAAG,EAAG,IAAIrqK,EAAEuqK,YAAY,IAAIvqK,EAAEgrK,UAApd,IAA8d9jJ,GAAld,IAAydA,KAAS,WAAWvxB,KAAKmC,QAAQgpC,GAAGnrC,KAAK21K,OAAO1wI,EAAE2wI,cAAcriK,EAAEsiK,UAAUxrK,EAAEirK,OAAOjrK,EAAEmrK,YAAYx1K,KAAK21K,OAAOpiK,EAAEsiK,UAAUxrK,EAAEirK,OAAOjrK,EAAEmrK,WAAW,QAAQnrK,EAAEgrK,SAAS,GAAG,IAAIhrK,EAAEuqK,YAA1oB,IAAspBrxK,GAAO,OAArqB,IAA4qBguB,GAAOhuB,EAAEikB,EAAEsuJ,WAAW91K,KAAK20K,MAAM30K,KAAK01K,MAAMnyK,GAAGvD,KAAK00K,OAAM,EAAGnxK,IAAIsf,GAAjuB,IAAouB0O,IAAQvxB,KAAK01K,MAAM7yJ,GAAGxY,EAAEuqK,UAAU,GAAE,EAAG,EAAErjJ,EAAEysB,UAAU23H,OAAO,SAAS/nK,GAAG5N,KAAKyoD,OAAOnkD,KAAKsJ,EAAE,EAAE2jB,EAAEysB,UAAU03H,MAAM,SAAS9nK,GAAGA,IAAIiV,IAAI,WAAW7iB,KAAKmC,QAAQgpC,GAAGnrC,KAAK8N,OAAO9N,KAAKyoD,OAAOn6C,KAAK,IAAItO,KAAK8N,OAAOyF,EAAEwiK,cAAc/1K,KAAKyoD,SAASzoD,KAAKyoD,OAAO,GAAGzoD,KAAKmI,IAAIyF,EAAE5N,KAAK0f,IAAI1f,KAAK20K,KAAKj1J,GAAG,EAAEnc,EAAEyyK,QAAQzkJ,EAAEhuB,EAAEkyK,QAAQprK,EAAE9G,EAAEsqK,WAA1xC,SAAWjgK,EAAEC,GAAG,OAAOA,EAAEA,GAAG,CAAC,GAAIyR,KAAI,EAAGjV,EAAEuD,EAAEC,EAAE,EAAyvCtK,EAAEkxK,KAA1vC,SAAW7mK,EAAEC,GAAG,OAAOA,EAAEA,GAAG,CAAC,GAAI4mK,MAAK,EAAGpqK,EAAEuD,EAAEC,EAAE,CAAitC,EAAE,CAAC,iBAAiB,GAAG,kBAAkB,GAAG,iBAAiB,GAAG,kBAAkB,GAAG,iBAAiB,KAAK,GAAG,CAAC,SAASD,EAAEC,EAAEtK,GAAG,aAAa,SAASguB,EAAE3jB,GAAG,KAAK5N,gBAAgBuxB,GAAG,OAAO,IAAIA,EAAE3jB,GAAG5N,KAAKmC,QAAQqlB,EAAE6K,OAAO,CAACgiJ,UAAU,MAAMC,WAAW,EAAEnpI,GAAG,IAAIv9B,GAAG,CAAC,GAAG,IAAIC,EAAE7N,KAAKmC,QAAQ0L,EAAEyR,KAAKzR,EAAEymK,YAAY,GAAGzmK,EAAEymK,WAAW,KAAKzmK,EAAEymK,YAAYzmK,EAAEymK,WAAW,IAAIzmK,EAAEymK,aAAazmK,EAAEymK,YAAY,OAAOzmK,EAAEymK,YAAY,GAAGzmK,EAAEymK,WAAW,KAAK1mK,GAAGA,EAAE0mK,aAAazmK,EAAEymK,YAAY,IAAIzmK,EAAEymK,WAAW,IAAIzmK,EAAEymK,WAAW,IAAI,IAAK,GAAGzmK,EAAEymK,cAAczmK,EAAEymK,YAAY,IAAIt0K,KAAKmI,IAAI,EAAEnI,KAAK0f,IAAI,GAAG1f,KAAK00K,OAAM,EAAG10K,KAAKyoD,OAAO,GAAGzoD,KAAK20K,KAAK,IAAIngK,EAAExU,KAAK20K,KAAKC,UAAU,EAAE,IAAIrxK,EAAEm8G,EAAEu2D,aAAaj2K,KAAK20K,KAAK9mK,EAAEymK,YAAY,GAAG/wK,IAAI0hC,EAAEixI,KAAK,MAAM,IAAI5tK,MAAMiM,EAAEhR,IAAIvD,KAAK62E,OAAO,IAAIuwF,EAAE1nD,EAAEy2D,iBAAiBn2K,KAAK20K,KAAK30K,KAAK62E,OAAO,CAAC,SAASxsE,EAAEuD,EAAEC,GAAG,IAAItK,EAAE,IAAIguB,EAAE1jB,GAAG,GAAGtK,EAAEe,KAAKsJ,GAAE,GAAIrK,EAAE4E,IAAI,MAAM5E,EAAEmc,IAAI,OAAOnc,EAAEuK,MAAM,CAAgD,IAAI4xG,EAAE9xG,EAAE,kBAAkB4Z,EAAE5Z,EAAE,kBAAkB2F,EAAE3F,EAAE,mBAAmBq3B,EAAEr3B,EAAE,oBAAoB2G,EAAE3G,EAAE,mBAAmB4G,EAAE5G,EAAE,kBAAkBw5J,EAAEx5J,EAAE,mBAAmBk2C,EAAEzvC,OAAO2pC,UAAUppC,SAAS2c,EAAEysB,UAAU15C,KAAK,SAASsJ,EAAEC,GAAG,IAAItK,EAAEguB,EAAElnB,EAAErD,EAAEuN,EAAEC,EAAE4yJ,EAAEpnK,KAAK20K,KAAK5tJ,EAAE/mB,KAAKmC,QAAQkyK,UAAUxxJ,EAAE7iB,KAAKmC,QAAQ4yK,WAAW9rJ,GAAE,EAAG,GAAGjpB,KAAK00K,MAAM,OAAM,EAAGnjJ,EAAE1jB,MAAMA,EAAEA,GAAM,IAAJA,EAAOo3B,EAAEmxI,SAASnxI,EAAEoxI,WAAW,iBAAiBzoK,EAAEw5J,EAAE+N,MAAM5hK,EAAE+iK,cAAc1oK,GAAG,yBAAyBk2C,EAAE7F,KAAKrwC,GAAGw5J,EAAE+N,MAAM,IAAIzH,WAAW9/J,GAAGw5J,EAAE+N,MAAMvnK,EAAEw5J,EAAEgO,QAAQ,EAAEhO,EAAEiO,SAASjO,EAAE+N,MAAMhvK,OAAO,EAAE,CAAC,GAAG,IAAIihK,EAAEwN,YAAYxN,EAAEkO,OAAO,IAAI9tJ,EAAE+tJ,KAAKxuJ,GAAGqgJ,EAAEoO,SAAS,EAAEpO,EAAEwN,UAAU7tJ,IAAGxjB,EAAEm8G,EAAE62D,QAAQnP,EAAEniI,EAAEoxI,eAAgBpxI,EAAEuxI,aAAa3zJ,IAAIrO,EAAE,iBAAiBqO,EAAEtP,EAAEyhK,WAAWnyJ,GAAG,yBAAyBihC,EAAE7F,KAAKp7B,GAAG,IAAI6qJ,WAAW7qJ,GAAGA,EAAEtf,EAAEm8G,EAAE+2D,qBAAqBz2K,KAAK20K,KAAKngK,IAAIjR,IAAI0hC,EAAEyxI,cAAiB,IAAJztJ,IAAS1lB,EAAE0hC,EAAEixI,KAAKjtJ,GAAE,GAAI1lB,IAAI0hC,EAAE0xI,cAAcpzK,IAAI0hC,EAAEixI,KAAK,OAAOl2K,KAAK01K,MAAMnyK,GAAGvD,KAAK00K,OAAM,GAAG,EAAGtN,EAAEoO,WAAW,IAAIpO,EAAEwN,WAAWrxK,IAAI0hC,EAAE0xI,eAAe,IAAIvP,EAAEiO,UAAU9jJ,IAAI0T,EAAEmxI,UAAU7kJ,IAAI0T,EAAE2xI,gBAAgB,WAAW52K,KAAKmC,QAAQgpC,IAAI9gC,EAAEkJ,EAAEsjK,WAAWzP,EAAEkO,OAAOlO,EAAEoO,UAAUxuK,EAAEogK,EAAEoO,SAASnrK,EAAEkK,EAAEhB,EAAEujK,WAAW1P,EAAEkO,OAAOjrK,GAAG+8J,EAAEoO,SAASxuK,EAAEogK,EAAEwN,UAAU7tJ,EAAE/f,EAAEA,GAAGwgB,EAAEuvJ,SAAS3P,EAAEkO,OAAOlO,EAAEkO,OAAOjrK,EAAErD,EAAE,GAAGhH,KAAK21K,OAAOphK,IAAIvU,KAAK21K,OAAOnuJ,EAAEquJ,UAAUzO,EAAEkO,OAAOlO,EAAEoO,aAAa,IAAIpO,EAAEiO,UAAU,IAAIjO,EAAEwN,YAAY3rJ,GAAE,EAAG,QAAQm+I,EAAEiO,SAAS,GAAG,IAAIjO,EAAEwN,YAAYrxK,IAAI0hC,EAAE0xI,cAAc,OAAOpzK,IAAI0hC,EAAE0xI,eAAeplJ,EAAE0T,EAAEmxI,UAAU7kJ,IAAI0T,EAAEmxI,UAAU7yK,EAAEm8G,EAAEs3D,WAAWh3K,KAAK20K,MAAM30K,KAAK01K,MAAMnyK,GAAGvD,KAAK00K,OAAM,EAAGnxK,IAAI0hC,EAAEixI,MAAM3kJ,IAAI0T,EAAE2xI,eAAe52K,KAAK01K,MAAMzwI,EAAEixI,MAAM9O,EAAEwN,UAAU,GAAE,EAAG,EAAErjJ,EAAEysB,UAAU23H,OAAO,SAAS/nK,GAAG5N,KAAKyoD,OAAOnkD,KAAKsJ,EAAE,EAAE2jB,EAAEysB,UAAU03H,MAAM,SAAS9nK,GAAGA,IAAIq3B,EAAEixI,OAAO,WAAWl2K,KAAKmC,QAAQgpC,GAAGnrC,KAAK8N,OAAO9N,KAAKyoD,OAAOn6C,KAAK,IAAItO,KAAK8N,OAAO0Z,EAAEuuJ,cAAc/1K,KAAKyoD,SAASzoD,KAAKyoD,OAAO,GAAGzoD,KAAKmI,IAAIyF,EAAE5N,KAAK0f,IAAI1f,KAAK20K,KAAKj1J,GAAG,EAAEnc,EAAE0zK,QAAQ1lJ,EAAEhuB,EAAEgzK,QAAQlsK,EAAE9G,EAAEwqK,WAAjzD,SAAWngK,EAAEC,GAAG,OAAOA,EAAEA,GAAG,CAAC,GAAIyR,KAAI,EAAGjV,EAAEuD,EAAEC,EAAE,EAAgxDtK,EAAE2zK,OAAO7sK,CAAC,EAAE,CAAC,iBAAiB,GAAG,kBAAkB,GAAG,mBAAmB,GAAG,kBAAkB,GAAG,iBAAiB,GAAG,kBAAkB,GAAG,iBAAiB,KAAK,GAAG,CAAC,SAASuD,EAAEC,EAAEtK,GAAG,aAAa,IAAIguB,EAAE,oBAAoBm8I,YAAY,oBAAoBC,aAAa,oBAAoBwJ,WAAW5zK,EAAE8uB,OAAO,SAASzkB,GAAG,IAAI,IAAIC,EAAEV,MAAM6wC,UAAU5qC,MAAM6qC,KAAKhrC,UAAU,GAAGpF,EAAE1H,QAAQ,CAAC,IAAI5C,EAAEsK,EAAE4G,QAAQ,GAAGlR,EAAE,CAAC,GAAG,iBAAiBA,EAAE,MAAM,IAAIsjJ,UAAUtjJ,EAAE,sBAAsB,IAAI,IAAIguB,KAAKhuB,EAAEA,EAAEi7B,eAAejN,KAAK3jB,EAAE2jB,GAAGhuB,EAAEguB,GAAG,CAAC,CAAC,OAAO3jB,CAAC,EAAErK,EAAEsyK,UAAU,SAASjoK,EAAEC,GAAG,OAAOD,EAAEzH,SAAS0H,EAAED,EAAEA,EAAEujK,SAASvjK,EAAEujK,SAAS,EAAEtjK,IAAID,EAAEzH,OAAO0H,EAAED,EAAE,EAAE,IAAIvD,EAAE,CAAC0sK,SAAS,SAASnpK,EAAEC,EAAEtK,EAAEguB,EAAElnB,GAAG,GAAGwD,EAAEsjK,UAAUvjK,EAAEujK,SAAqBvjK,EAAE4M,IAAI3M,EAAEsjK,SAAS5tK,EAAEA,EAAEguB,GAAGlnB,QAAG,IAAI,IAAIrD,EAAE,EAAEA,EAAEuqB,EAAEvqB,IAAI4G,EAAEvD,EAAErD,GAAG6G,EAAEtK,EAAEyD,EAAE,EAAE+uK,cAAc,SAASnoK,GAAG,IAAIC,EAAEtK,EAAEguB,EAAElnB,EAAErD,EAAE04G,EAAE,IAAInuF,EAAE,EAAE1jB,EAAE,EAAEtK,EAAEqK,EAAEzH,OAAO0H,EAAEtK,EAAEsK,IAAI0jB,GAAG3jB,EAAEC,GAAG1H,OAAO,IAAIu5G,EAAE,IAAIguD,WAAWn8I,GAAGlnB,EAAE,EAAEwD,EAAE,EAAEtK,EAAEqK,EAAEzH,OAAO0H,EAAEtK,EAAEsK,IAAI7G,EAAE4G,EAAEC,GAAG6xG,EAAEllG,IAAIxT,EAAEqD,GAAGA,GAAGrD,EAAEb,OAAO,OAAOu5G,CAAC,GAAG14G,EAAE,CAAC+vK,SAAS,SAASnpK,EAAEC,EAAEtK,EAAEguB,EAAElnB,GAAG,IAAI,IAAIrD,EAAE,EAAEA,EAAEuqB,EAAEvqB,IAAI4G,EAAEvD,EAAErD,GAAG6G,EAAEtK,EAAEyD,EAAE,EAAE+uK,cAAc,SAASnoK,GAAG,MAAM,GAAGgb,OAAO4kB,MAAM,GAAG5/B,EAAE,GAAGrK,EAAE6zK,SAAS,SAASxpK,GAAGA,GAAGrK,EAAEgyK,KAAK7H,WAAWnqK,EAAE8zK,MAAM1J,YAAYpqK,EAAE+zK,MAAMH,WAAW5zK,EAAE8uB,OAAO9uB,EAAE8G,KAAK9G,EAAEgyK,KAAKpoK,MAAM5J,EAAE8zK,MAAMlqK,MAAM5J,EAAE+zK,MAAMnqK,MAAM5J,EAAE8uB,OAAO9uB,EAAEyD,GAAG,EAAEzD,EAAE6zK,SAAS7lJ,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC,SAAS3jB,EAAEC,EAAEtK,GAAG,aAAa,SAASguB,EAAE3jB,EAAEC,GAAG,GAAGA,EAAE,QAAQD,EAAEujK,UAAUzxD,IAAI9xG,EAAEujK,UAAUnqK,GAAG,OAAO6U,OAAOovI,aAAaz9G,MAAM,KAAKnjC,EAAEwrK,UAAUjoK,EAAEC,IAAI,IAAI,IAAItK,EAAE,GAAGguB,EAAE,EAAEA,EAAE1jB,EAAE0jB,IAAIhuB,GAAGsY,OAAOovI,aAAar9I,EAAE2jB,IAAI,OAAOhuB,CAAC,CAAC,IAAI8G,EAAEuD,EAAE,YAAY5G,GAAE,EAAG04G,GAAE,EAAG,IAAI7jG,OAAOovI,aAAaz9G,MAAM,KAAK,CAAC,GAAiB,CAAb,MAAMhmB,GAAGxgB,GAAE,CAAE,CAAC,IAAI6U,OAAOovI,aAAaz9G,MAAM,KAAK,IAAIkgI,WAAW,GAAiB,CAAb,MAAMlmJ,GAAGk4F,GAAE,CAAE,CAAC,IAAI,IAAInsG,EAAE,IAAIlJ,EAAEkrK,KAAK,KAAKtwI,EAAE,EAAEA,EAAE,IAAIA,IAAI1xB,EAAE0xB,GAAGA,GAAG,IAAI,EAAEA,GAAG,IAAI,EAAEA,GAAG,IAAI,EAAEA,GAAG,IAAI,EAAEA,GAAG,IAAI,EAAE,EAAE1xB,EAAE,KAAKA,EAAE,KAAK,EAAEhQ,EAAEyxK,WAAW,SAASpnK,GAAG,IAAIC,EAAEtK,EAAEguB,EAAEvqB,EAAE04G,EAAEl4F,EAAE5Z,EAAEzH,OAAOoN,EAAE,EAAE,IAAIvM,EAAE,EAAEA,EAAEwgB,EAAExgB,IAAsB,QAAS,OAA3BzD,EAAEqK,EAAEuyJ,WAAWn5J,MAAsBA,EAAE,EAAEwgB,GAAwB,QAAS,OAA7B+J,EAAE3jB,EAAEuyJ,WAAWn5J,EAAE,OAAuBzD,EAAE,OAAOA,EAAE,OAAO,KAAKguB,EAAE,OAAOvqB,KAAMuM,GAAGhQ,EAAE,IAAI,EAAEA,EAAE,KAAK,EAAEA,EAAE,MAAM,EAAE,EAAE,IAAIsK,EAAE,IAAIxD,EAAEkrK,KAAKhiK,GAAGmsG,EAAE,EAAE14G,EAAE,EAAE04G,EAAEnsG,EAAEvM,IAAsB,QAAS,OAA3BzD,EAAEqK,EAAEuyJ,WAAWn5J,MAAsBA,EAAE,EAAEwgB,GAAwB,QAAS,OAA7B+J,EAAE3jB,EAAEuyJ,WAAWn5J,EAAE,OAAuBzD,EAAE,OAAOA,EAAE,OAAO,KAAKguB,EAAE,OAAOvqB,KAAMzD,EAAE,IAAIsK,EAAE6xG,KAAKn8G,EAAEA,EAAE,MAAMsK,EAAE6xG,KAAK,IAAIn8G,IAAI,EAAEsK,EAAE6xG,KAAK,IAAI,GAAGn8G,GAAGA,EAAE,OAAOsK,EAAE6xG,KAAK,IAAIn8G,IAAI,GAAGsK,EAAE6xG,KAAK,IAAIn8G,IAAI,EAAE,GAAGsK,EAAE6xG,KAAK,IAAI,GAAGn8G,IAAIsK,EAAE6xG,KAAK,IAAIn8G,IAAI,GAAGsK,EAAE6xG,KAAK,IAAIn8G,IAAI,GAAG,GAAGsK,EAAE6xG,KAAK,IAAIn8G,IAAI,EAAE,GAAGsK,EAAE6xG,KAAK,IAAI,GAAGn8G,GAAG,OAAOsK,CAAC,EAAEtK,EAAEqyK,cAAc,SAAShoK,GAAG,OAAO2jB,EAAE3jB,EAAEA,EAAEzH,OAAO,EAAE5C,EAAE+yK,cAAc,SAAS1oK,GAAG,IAAI,IAAIC,EAAE,IAAIxD,EAAEkrK,KAAK3nK,EAAEzH,QAAQ5C,EAAE,EAAEguB,EAAE1jB,EAAE1H,OAAO5C,EAAEguB,EAAEhuB,IAAIsK,EAAEtK,GAAGqK,EAAEuyJ,WAAW58J,GAAG,OAAOsK,CAAC,EAAEtK,EAAEuzK,WAAW,SAASlpK,EAAEC,GAAG,IAAItK,EAAE8G,EAAErD,EAAE04G,EAAEl4F,EAAE3Z,GAAGD,EAAEzH,OAAO8+B,EAAE,IAAI93B,MAAM,EAAEqa,GAAG,IAAInd,EAAE,EAAE9G,EAAE,EAAEA,EAAEikB,GAAG,IAAGxgB,EAAE4G,EAAErK,MAAO,IAAI0hC,EAAE56B,KAAKrD,OAAO,IAAG04G,EAAEnsG,EAAEvM,IAAK,EAAEi+B,EAAE56B,KAAK,MAAM9G,GAAGm8G,EAAE,MAAM,CAAC,IAAI14G,GAAG,IAAI04G,EAAE,GAAG,IAAIA,EAAE,GAAG,EAAEA,EAAE,GAAGn8G,EAAEikB,GAAGxgB,EAAEA,GAAG,EAAE,GAAG4G,EAAErK,KAAKm8G,IAAIA,EAAE,EAAEz6E,EAAE56B,KAAK,MAAMrD,EAAE,MAAMi+B,EAAE56B,KAAKrD,GAAGA,GAAG,MAAMi+B,EAAE56B,KAAK,MAAMrD,GAAG,GAAG,KAAKi+B,EAAE56B,KAAK,MAAM,KAAKrD,EAAE,CAAC,OAAOuqB,EAAE0T,EAAE56B,EAAE,EAAE9G,EAAEszK,WAAW,SAASjpK,EAAEC,GAAG,IAAItK,EAAE,KAAIsK,EAAEA,GAAGD,EAAEzH,QAASyH,EAAEzH,SAAS0H,EAAED,EAAEzH,QAAQ5C,EAAEsK,EAAE,EAAEtK,GAAG,GAAG,MAAO,IAAIqK,EAAErK,KAAKA,IAAI,OAAOA,EAAE,GAAI,IAAIA,EAANsK,EAAUtK,EAAEgQ,EAAE3F,EAAErK,IAAIsK,EAAEtK,EAAEsK,CAAC,CAAC,EAAE,CAAC,WAAW,KAAK,GAAG,CAAC,SAASD,EAAEC,EAAEtK,GAAG,aAA2KsK,EAAEnO,QAAhK,SAAWkO,EAAEC,EAAEtK,EAAEguB,GAAG,IAAI,IAAIlnB,EAAE,MAAMuD,EAAE,EAAE5G,EAAE4G,IAAI,GAAG,MAAM,EAAE8xG,EAAE,EAAE,IAAIn8G,GAAG,CAAeA,GAAdm8G,EAAEn8G,EAAE,IAAI,IAAIA,EAAO,GAAgByD,EAAEA,GAAfqD,EAAEA,EAAEwD,EAAE0jB,KAAK,GAAQ,UAAUmuF,GAAGr1G,GAAG,MAAMrD,GAAG,KAAK,CAAC,OAAOqD,EAAErD,GAAG,GAAG,CAAC,CAAY,EAAE,CAAC,GAAG,GAAG,CAAC,SAAS4G,EAAEC,EAAEtK,GAAG,aAAasK,EAAEnO,QAAQ,CAAC22K,WAAW,EAAEkB,gBAAgB,EAAEX,aAAa,EAAEY,aAAa,EAAEpB,SAAS,EAAEqB,QAAQ,EAAEC,QAAQ,EAAExB,KAAK,EAAES,aAAa,EAAEH,YAAY,EAAEmB,SAAS,EAAEC,gBAAgB,EAAEC,cAAc,EAAEnB,aAAa,EAAEoB,iBAAiB,EAAEC,aAAa,EAAEC,mBAAmB,EAAEC,uBAAuB,EAAEC,WAAW,EAAEC,eAAe,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,mBAAmB,EAAEC,SAAS,EAAEC,OAAO,EAAEC,UAAU,EAAEC,WAAW,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC,SAAS9qK,EAAEC,EAAEtK,GAAG,aAA6N,IAAIyD,EAApN,WAAa,IAAI,IAAI4G,EAAEC,EAAE,GAAGtK,EAAE,EAAEA,EAAE,IAAIA,IAAI,CAACqK,EAAErK,EAAE,IAAI,IAAIguB,EAAE,EAAEA,EAAE,EAAEA,IAAI3jB,EAAE,EAAEA,EAAE,WAAWA,IAAI,EAAEA,IAAI,EAAEC,EAAEtK,GAAGqK,CAAC,CAAC,OAAOC,CAAC,CAAuG0jB,GAAI1jB,EAAEnO,QAA5G,SAAWkO,EAAEC,EAAEtK,EAAEguB,GAAG,IAAIlnB,EAAErD,EAAE04G,EAAEnuF,EAAEhuB,EAAEqK,IAAI,EAAE,IAAI,IAAI4Z,EAAE+J,EAAE/J,EAAEk4F,EAAEl4F,IAAI5Z,EAAEA,IAAI,EAAEvD,EAAE,KAAKuD,EAAEC,EAAE2Z,KAAK,OAAU,EAAH5Z,CAAI,CAAsB,EAAE,CAAC,GAAG,GAAG,CAAC,SAASA,EAAEC,EAAEtK,GAAG,aAAa,SAASguB,EAAE3jB,EAAEC,GAAG,OAAOD,EAAE8R,IAAIi5J,EAAE9qK,GAAGA,CAAC,CAAC,SAASxD,EAAEuD,GAAG,OAAOA,GAAG,IAAIA,EAAE,EAAE,EAAE,EAAE,CAAC,SAAS5G,EAAE4G,GAAG,IAAI,IAAIC,EAAED,EAAEzH,SAAS0H,GAAG,GAAGD,EAAEC,GAAG,CAAC,CAAC,SAAS6xG,EAAE9xG,GAAG,IAAIC,EAAED,EAAEu9C,MAAM5nD,EAAEsK,EAAEyS,QAAQ/c,EAAEqK,EAAEgnK,YAAYrxK,EAAEqK,EAAEgnK,WAAW,IAAIrxK,IAAImsK,EAAEqH,SAASnpK,EAAE0nK,OAAOznK,EAAE+qK,YAAY/qK,EAAEgrK,YAAYt1K,EAAEqK,EAAE4nK,UAAU5nK,EAAE4nK,UAAUjyK,EAAEsK,EAAEgrK,aAAat1K,EAAEqK,EAAEkrK,WAAWv1K,EAAEqK,EAAEgnK,WAAWrxK,EAAEsK,EAAEyS,SAAS/c,EAAE,IAAIsK,EAAEyS,UAAUzS,EAAEgrK,YAAY,GAAG,CAAC,SAASrxJ,EAAE5Z,EAAEC,GAAG3J,EAAE60K,gBAAgBnrK,EAAEA,EAAEorK,aAAa,EAAEprK,EAAEorK,aAAa,EAAEprK,EAAEqrK,SAASrrK,EAAEorK,YAAYnrK,GAAGD,EAAEorK,YAAYprK,EAAEqrK,SAASv5D,EAAE9xG,EAAE+mK,KAAK,CAAC,SAASphK,EAAE3F,EAAEC,GAAGD,EAAEgrK,YAAYhrK,EAAE0S,WAAWzS,CAAC,CAAC,SAASo3B,EAAEr3B,EAAEC,GAAGD,EAAEgrK,YAAYhrK,EAAE0S,WAAWzS,IAAI,EAAE,IAAID,EAAEgrK,YAAYhrK,EAAE0S,WAAW,IAAIzS,CAAC,CAAC,SAAS0G,EAAE3G,EAAEC,EAAEtK,EAAEguB,GAAG,IAAIlnB,EAAEuD,EAAEynK,SAAS,OAAOhrK,EAAEknB,IAAIlnB,EAAEknB,GAAG,IAAIlnB,EAAE,GAAGuD,EAAEynK,UAAUhrK,EAAEqlK,EAAEqH,SAASlpK,EAAED,EAAEunK,MAAMvnK,EAAEwnK,QAAQ/qK,EAAE9G,GAAG,IAAIqK,EAAEu9C,MAAM+tH,KAAKtrK,EAAEurK,MAAMC,EAAExrK,EAAEurK,MAAMtrK,EAAExD,EAAE9G,GAAG,IAAIqK,EAAEu9C,MAAM+tH,OAAOtrK,EAAEurK,MAAME,EAAEzrK,EAAEurK,MAAMtrK,EAAExD,EAAE9G,IAAIqK,EAAEwnK,SAAS/qK,EAAEuD,EAAE0rK,UAAUjvK,EAAEA,EAAE,CAAC,SAASmK,EAAE5G,EAAEC,GAAG,IAAItK,EAAEguB,EAAElnB,EAAEuD,EAAE2rK,iBAAiBvyK,EAAE4G,EAAEqrK,SAASv5D,EAAE9xG,EAAE4rK,YAAYhyJ,EAAE5Z,EAAE6rK,WAAWlmK,EAAE3F,EAAEqrK,SAASrrK,EAAE8rK,OAAOC,GAAG/rK,EAAEqrK,UAAUrrK,EAAE8rK,OAAOC,IAAI,EAAE10I,EAAEr3B,EAAE+L,OAAOpF,EAAE3G,EAAEgsK,OAAOplK,EAAE5G,EAAEisK,KAAKzS,EAAEx5J,EAAEqrK,SAASa,GAAGh2H,EAAE7e,EAAEj+B,EAAE04G,EAAE,GAAG34F,EAAEke,EAAEj+B,EAAE04G,GAAG9xG,EAAE4rK,aAAa5rK,EAAEmsK,aAAa1vK,IAAI,GAAGmd,EAAE5Z,EAAEosK,YAAYxyJ,EAAE5Z,EAAEosK,WAAW,MAAU/0I,GAAJ1hC,EAAEsK,GAAM6xG,KAAK34F,GAAGke,EAAE1hC,EAAEm8G,EAAE,KAAK57D,GAAG7e,EAAE1hC,KAAK0hC,EAAEj+B,IAAIi+B,IAAI1hC,KAAK0hC,EAAEj+B,EAAE,GAAG,CAACA,GAAG,EAAEzD,IAAI,UAAS0hC,IAAIj+B,KAAKi+B,IAAI1hC,IAAI0hC,IAAIj+B,KAAKi+B,IAAI1hC,IAAI0hC,IAAIj+B,KAAKi+B,IAAI1hC,IAAI0hC,IAAIj+B,KAAKi+B,IAAI1hC,IAAI0hC,IAAIj+B,KAAKi+B,IAAI1hC,IAAI0hC,IAAIj+B,KAAKi+B,IAAI1hC,IAAI0hC,IAAIj+B,KAAKi+B,IAAI1hC,IAAI0hC,IAAIj+B,KAAKi+B,IAAI1hC,IAAIyD,EAAEogK,GAAG,GAAG71I,EAAEuoJ,IAAI1S,EAAEpgK,GAAGA,EAAEogK,EAAE0S,GAAGvoJ,EAAEmuF,EAAE,CAAC,GAAG9xG,EAAEqsK,YAAYpsK,EAAE6xG,EAAEnuF,EAAEA,GAAG/J,EAAE,MAAMs8B,EAAE7e,EAAEj+B,EAAE04G,EAAE,GAAG34F,EAAEke,EAAEj+B,EAAE04G,EAAE,CAAC,SAAQ7xG,EAAE2G,EAAE3G,EAAE0G,IAAIhB,GAAG,KAAMlJ,GAAG,OAAOq1G,GAAG9xG,EAAEosK,UAAUt6D,EAAE9xG,EAAEosK,SAAS,CAAC,SAAS5S,EAAEx5J,GAAG,IAAIC,EAAEtK,EAAEguB,EAAElnB,EAAErD,EAAE04G,EAAE9xG,EAAE8rK,OAAO,EAAE,CAAC,GAAGrvK,EAAEuD,EAAEssK,YAAYtsK,EAAEosK,UAAUpsK,EAAEqrK,SAASrrK,EAAEqrK,UAAUv5D,GAAGA,EAAEi6D,IAAI,CAACjK,EAAEqH,SAASnpK,EAAE+L,OAAO/L,EAAE+L,OAAO+lG,EAAEA,EAAE,GAAG9xG,EAAEqsK,aAAav6D,EAAE9xG,EAAEqrK,UAAUv5D,EAAE9xG,EAAEorK,aAAat5D,EAAgB7xG,EAAdtK,EAAEqK,EAAEusK,UAAc,GAAG5oJ,EAAE3jB,EAAE3M,OAAO4M,GAAGD,EAAE3M,KAAK4M,GAAG0jB,GAAGmuF,EAAEnuF,EAAEmuF,EAAE,UAAUn8G,GAAOsK,EAAJtK,EAAEm8G,EAAM,GAAGnuF,EAAE3jB,EAAEisK,OAAOhsK,GAAGD,EAAEisK,KAAKhsK,GAAG0jB,GAAGmuF,EAAEnuF,EAAEmuF,EAAE,UAAUn8G,GAAG8G,GAAGq1G,CAAC,CAAC,GAAG,IAAI9xG,EAAE+mK,KAAKU,SAAS,MAAM,GAAG9xK,EAAEgR,EAAE3G,EAAE+mK,KAAK/mK,EAAE+L,OAAO/L,EAAEqrK,SAASrrK,EAAEosK,UAAU3vK,GAAGuD,EAAEosK,WAAWz2K,EAAEqK,EAAEosK,UAAUpsK,EAAEwsK,QAAQC,GAAG,IAAIrzK,EAAE4G,EAAEqrK,SAASrrK,EAAEwsK,OAAOxsK,EAAE0sK,MAAM1sK,EAAE+L,OAAO3S,GAAG4G,EAAE0sK,OAAO1sK,EAAE0sK,OAAO1sK,EAAE2sK,WAAW3sK,EAAE+L,OAAO3S,EAAE,IAAI4G,EAAE4sK,UAAU5sK,EAAEwsK,SAASxsK,EAAE0sK,OAAO1sK,EAAE0sK,OAAO1sK,EAAE2sK,WAAW3sK,EAAE+L,OAAO3S,EAAEqzK,GAAG,IAAIzsK,EAAE4sK,UAAU5sK,EAAEisK,KAAK7yK,EAAE4G,EAAEgsK,QAAQhsK,EAAE3M,KAAK2M,EAAE0sK,OAAO1sK,EAAE3M,KAAK2M,EAAE0sK,OAAOtzK,EAAEA,IAAI4G,EAAEwsK,WAAWxsK,EAAEosK,UAAUpsK,EAAEwsK,OAAOC,OAAO,OAAOzsK,EAAEosK,UAAUL,IAAI,IAAI/rK,EAAE+mK,KAAKU,SAAS,CAAwiB,SAAStuJ,EAAEnZ,EAAEC,GAAG,IAAI,IAAItK,EAAEguB,IAAI,CAAC,GAAG3jB,EAAEosK,UAAUL,GAAG,CAAC,GAAGvS,EAAEx5J,GAAGA,EAAEosK,UAAUL,IAAI9rK,IAAI4sK,EAAE,OAAOC,GAAG,GAAG,IAAI9sK,EAAEosK,UAAU,KAAK,CAAC,GAAGz2K,EAAE,EAAEqK,EAAEosK,WAAWK,KAAKzsK,EAAE0sK,OAAO1sK,EAAE0sK,OAAO1sK,EAAE2sK,WAAW3sK,EAAE+L,OAAO/L,EAAEqrK,SAASoB,GAAG,IAAIzsK,EAAE4sK,UAAUj3K,EAAEqK,EAAEisK,KAAKjsK,EAAEqrK,SAASrrK,EAAEgsK,QAAQhsK,EAAE3M,KAAK2M,EAAE0sK,OAAO1sK,EAAE3M,KAAK2M,EAAE0sK,OAAO1sK,EAAEqrK,UAAU,IAAI11K,GAAGqK,EAAEqrK,SAAS11K,GAAGqK,EAAE8rK,OAAOC,KAAK/rK,EAAE+sK,aAAanmK,EAAE5G,EAAErK,IAAIqK,EAAE+sK,cAAcN,GAAG,GAAG9oJ,EAAErtB,EAAE02K,UAAUhtK,EAAEA,EAAEqrK,SAASrrK,EAAEqsK,YAAYrsK,EAAE+sK,aAAaN,IAAIzsK,EAAEosK,WAAWpsK,EAAE+sK,aAAa/sK,EAAE+sK,cAAc/sK,EAAEitK,gBAAgBjtK,EAAEosK,WAAWK,GAAG,CAACzsK,EAAE+sK,eAAe,GAAG/sK,EAAEqrK,WAAWrrK,EAAE0sK,OAAO1sK,EAAE0sK,OAAO1sK,EAAE2sK,WAAW3sK,EAAE+L,OAAO/L,EAAEqrK,SAASoB,GAAG,IAAIzsK,EAAE4sK,UAAUj3K,EAAEqK,EAAEisK,KAAKjsK,EAAEqrK,SAASrrK,EAAEgsK,QAAQhsK,EAAE3M,KAAK2M,EAAE0sK,OAAO1sK,EAAE3M,KAAK2M,EAAE0sK,OAAO1sK,EAAEqrK,eAAe,KAAMrrK,EAAE+sK,cAAc/sK,EAAEqrK,UAAU,MAAMrrK,EAAEqrK,UAAUrrK,EAAE+sK,aAAa/sK,EAAE+sK,aAAa,EAAE/sK,EAAE0sK,MAAM1sK,EAAE+L,OAAO/L,EAAEqrK,UAAUrrK,EAAE0sK,OAAO1sK,EAAE0sK,OAAO1sK,EAAE2sK,WAAW3sK,EAAE+L,OAAO/L,EAAEqrK,SAAS,IAAIrrK,EAAE4sK,eAAejpJ,EAAErtB,EAAE02K,UAAUhtK,EAAE,EAAEA,EAAE+L,OAAO/L,EAAEqrK,WAAWrrK,EAAEosK,YAAYpsK,EAAEqrK,WAAW,GAAG1nJ,IAAI/J,EAAE5Z,GAAE,GAAI,IAAIA,EAAE+mK,KAAKC,WAAW,OAAO8F,EAAE,CAAC,OAAO9sK,EAAEwsK,OAAOxsK,EAAEqrK,SAASoB,GAAG,EAAEzsK,EAAEqrK,SAASoB,GAAG,EAAExsK,IAAIitK,GAAGtzJ,EAAE5Z,GAAE,GAAI,IAAIA,EAAE+mK,KAAKC,UAAUmG,GAAGC,IAAIptK,EAAEqtK,WAAWzzJ,EAAE5Z,GAAE,GAAI,IAAIA,EAAE+mK,KAAKC,WAAW8F,GAAGQ,EAAE,CAAC,SAASr4J,EAAEjV,EAAEC,GAAG,IAAI,IAAItK,EAAEguB,EAAElnB,IAAI,CAAC,GAAGuD,EAAEosK,UAAUL,GAAG,CAAC,GAAGvS,EAAEx5J,GAAGA,EAAEosK,UAAUL,IAAI9rK,IAAI4sK,EAAE,OAAOC,GAAG,GAAG,IAAI9sK,EAAEosK,UAAU,KAAK,CAAC,GAAGz2K,EAAE,EAAEqK,EAAEosK,WAAWK,KAAKzsK,EAAE0sK,OAAO1sK,EAAE0sK,OAAO1sK,EAAE2sK,WAAW3sK,EAAE+L,OAAO/L,EAAEqrK,SAASoB,GAAG,IAAIzsK,EAAE4sK,UAAUj3K,EAAEqK,EAAEisK,KAAKjsK,EAAEqrK,SAASrrK,EAAEgsK,QAAQhsK,EAAE3M,KAAK2M,EAAE0sK,OAAO1sK,EAAE3M,KAAK2M,EAAE0sK,OAAO1sK,EAAEqrK,UAAUrrK,EAAE4rK,YAAY5rK,EAAE+sK,aAAa/sK,EAAEutK,WAAWvtK,EAAEqsK,YAAYrsK,EAAE+sK,aAAaN,GAAG,EAAE,IAAI92K,GAAGqK,EAAE4rK,YAAY5rK,EAAEitK,gBAAgBjtK,EAAEqrK,SAAS11K,GAAGqK,EAAE8rK,OAAOC,KAAK/rK,EAAE+sK,aAAanmK,EAAE5G,EAAErK,GAAGqK,EAAE+sK,cAAc,IAAI/sK,EAAE4mK,WAAW4G,GAAGxtK,EAAE+sK,eAAeN,IAAIzsK,EAAEqrK,SAASrrK,EAAEqsK,YAAY,QAAQrsK,EAAE+sK,aAAaN,GAAG,IAAIzsK,EAAE4rK,aAAaa,IAAIzsK,EAAE+sK,cAAc/sK,EAAE4rK,YAAY,CAACnvK,EAAEuD,EAAEqrK,SAASrrK,EAAEosK,UAAUK,GAAG9oJ,EAAErtB,EAAE02K,UAAUhtK,EAAEA,EAAEqrK,SAAS,EAAErrK,EAAEutK,WAAWvtK,EAAE4rK,YAAYa,IAAIzsK,EAAEosK,WAAWpsK,EAAE4rK,YAAY,EAAE5rK,EAAE4rK,aAAa,EAAE,KAAI5rK,EAAEqrK,UAAU5uK,IAAIuD,EAAE0sK,OAAO1sK,EAAE0sK,OAAO1sK,EAAE2sK,WAAW3sK,EAAE+L,OAAO/L,EAAEqrK,SAASoB,GAAG,IAAIzsK,EAAE4sK,UAAUj3K,EAAEqK,EAAEisK,KAAKjsK,EAAEqrK,SAASrrK,EAAEgsK,QAAQhsK,EAAE3M,KAAK2M,EAAE0sK,OAAO1sK,EAAE3M,KAAK2M,EAAE0sK,OAAO1sK,EAAEqrK,gBAAgB,KAAMrrK,EAAE4rK,aAAa,GAAG5rK,EAAEytK,gBAAgB,EAAEztK,EAAE+sK,aAAaN,GAAG,EAAEzsK,EAAEqrK,WAAW1nJ,IAAI/J,EAAE5Z,GAAE,GAAI,IAAIA,EAAE+mK,KAAKC,WAAW,OAAO8F,EAAE,MAAM,GAAG9sK,EAAEytK,iBAAiB,IAAG9pJ,EAAErtB,EAAE02K,UAAUhtK,EAAE,EAAEA,EAAE+L,OAAO/L,EAAEqrK,SAAS,MAAOzxJ,EAAE5Z,GAAE,GAAIA,EAAEqrK,WAAWrrK,EAAEosK,YAAY,IAAIpsK,EAAE+mK,KAAKC,UAAU,OAAO8F,QAAQ9sK,EAAEytK,gBAAgB,EAAEztK,EAAEqrK,WAAWrrK,EAAEosK,WAAW,CAAC,OAAOpsK,EAAEytK,kBAAkB9pJ,EAAErtB,EAAE02K,UAAUhtK,EAAE,EAAEA,EAAE+L,OAAO/L,EAAEqrK,SAAS,IAAIrrK,EAAEytK,gBAAgB,GAAGztK,EAAEwsK,OAAOxsK,EAAEqrK,SAASoB,GAAG,EAAEzsK,EAAEqrK,SAASoB,GAAG,EAAExsK,IAAIitK,GAAGtzJ,EAAE5Z,GAAE,GAAI,IAAIA,EAAE+mK,KAAKC,UAAUmG,GAAGC,IAAIptK,EAAEqtK,WAAWzzJ,EAAE5Z,GAAE,GAAI,IAAIA,EAAE+mK,KAAKC,WAAW8F,GAAGQ,EAAE,CAAC,SAASjyJ,EAAErb,EAAEC,GAAG,IAAI,IAAItK,EAAEguB,EAAElnB,EAAErD,EAAE04G,EAAE9xG,EAAE+L,SAAS,CAAC,GAAG/L,EAAEosK,WAAWF,GAAG,CAAC,GAAG1S,EAAEx5J,GAAGA,EAAEosK,WAAWF,IAAIjsK,IAAI4sK,EAAE,OAAOC,GAAG,GAAG,IAAI9sK,EAAEosK,UAAU,KAAK,CAAC,GAAGpsK,EAAE+sK,aAAa,EAAE/sK,EAAEosK,WAAWK,IAAIzsK,EAAEqrK,SAAS,IAAmB1nJ,EAAEmuF,EAAjBr1G,EAAEuD,EAAEqrK,SAAS,MAAav5D,IAAIr1G,IAAIknB,IAAImuF,IAAIr1G,IAAIknB,IAAImuF,IAAIr1G,GAAI,CAACrD,EAAE4G,EAAEqrK,SAASa,GAAG,UAASvoJ,IAAImuF,IAAIr1G,IAAIknB,IAAImuF,IAAIr1G,IAAIknB,IAAImuF,IAAIr1G,IAAIknB,IAAImuF,IAAIr1G,IAAIknB,IAAImuF,IAAIr1G,IAAIknB,IAAImuF,IAAIr1G,IAAIknB,IAAImuF,IAAIr1G,IAAIknB,IAAImuF,IAAIr1G,IAAIA,EAAErD,GAAG4G,EAAE+sK,aAAab,IAAI9yK,EAAEqD,GAAGuD,EAAE+sK,aAAa/sK,EAAEosK,YAAYpsK,EAAE+sK,aAAa/sK,EAAEosK,UAAU,CAAC,GAAGpsK,EAAE+sK,cAAcN,IAAI92K,EAAEW,EAAE02K,UAAUhtK,EAAE,EAAEA,EAAE+sK,aAAaN,IAAIzsK,EAAEosK,WAAWpsK,EAAE+sK,aAAa/sK,EAAEqrK,UAAUrrK,EAAE+sK,aAAa/sK,EAAE+sK,aAAa,IAAIp3K,EAAEW,EAAE02K,UAAUhtK,EAAE,EAAEA,EAAE+L,OAAO/L,EAAEqrK,WAAWrrK,EAAEosK,YAAYpsK,EAAEqrK,YAAY11K,IAAIikB,EAAE5Z,GAAE,GAAI,IAAIA,EAAE+mK,KAAKC,WAAW,OAAO8F,EAAE,CAAC,OAAO9sK,EAAEwsK,OAAO,EAAEvsK,IAAIitK,GAAGtzJ,EAAE5Z,GAAE,GAAI,IAAIA,EAAE+mK,KAAKC,UAAUmG,GAAGC,IAAIptK,EAAEqtK,WAAWzzJ,EAAE5Z,GAAE,GAAI,IAAIA,EAAE+mK,KAAKC,WAAW8F,GAAGQ,EAAE,CAAC,SAAStrK,EAAEhC,EAAEC,GAAG,IAAI,IAAItK,IAAI,CAAC,GAAG,IAAIqK,EAAEosK,YAAY5S,EAAEx5J,GAAG,IAAIA,EAAEosK,WAAW,CAAC,GAAGnsK,IAAI4sK,EAAE,OAAOC,GAAG,KAAK,CAAC,GAAG9sK,EAAE+sK,aAAa,EAAEp3K,EAAEW,EAAE02K,UAAUhtK,EAAE,EAAEA,EAAE+L,OAAO/L,EAAEqrK,WAAWrrK,EAAEosK,YAAYpsK,EAAEqrK,WAAW11K,IAAIikB,EAAE5Z,GAAE,GAAI,IAAIA,EAAE+mK,KAAKC,WAAW,OAAO8F,EAAE,CAAC,OAAO9sK,EAAEwsK,OAAO,EAAEvsK,IAAIitK,GAAGtzJ,EAAE5Z,GAAE,GAAI,IAAIA,EAAE+mK,KAAKC,UAAUmG,GAAGC,IAAIptK,EAAEqtK,WAAWzzJ,EAAE5Z,GAAE,GAAI,IAAIA,EAAE+mK,KAAKC,WAAW8F,GAAGQ,EAAE,CAAC,SAAStuK,EAAEgB,EAAEC,EAAEtK,EAAEguB,EAAElnB,GAAGrK,KAAKs7K,YAAY1tK,EAAE5N,KAAKu7K,SAAS1tK,EAAE7N,KAAKw7K,YAAYj4K,EAAEvD,KAAKy7K,UAAUlqJ,EAAEvxB,KAAKqxJ,KAAKhnJ,CAAC,CAA6T,SAASi0E,IAAIt+E,KAAK20K,KAAK,KAAK30K,KAAKuX,OAAO,EAAEvX,KAAK44K,YAAY,KAAK54K,KAAK07K,iBAAiB,EAAE17K,KAAK64K,YAAY,EAAE74K,KAAKsgB,QAAQ,EAAEtgB,KAAKk5K,KAAK,EAAEl5K,KAAK27K,OAAO,KAAK37K,KAAK47K,QAAQ,EAAE57K,KAAKkX,OAAO2kK,EAAE77K,KAAK87K,YAAY,EAAE97K,KAAK05K,OAAO,EAAE15K,KAAK+7K,OAAO,EAAE/7K,KAAK45K,OAAO,EAAE55K,KAAK2Z,OAAO,KAAK3Z,KAAKk6K,YAAY,EAAEl6K,KAAK65K,KAAK,KAAK75K,KAAKiB,KAAK,KAAKjB,KAAKs6K,MAAM,EAAEt6K,KAAKm6K,UAAU,EAAEn6K,KAAKg8K,UAAU,EAAEh8K,KAAKw6K,UAAU,EAAEx6K,KAAKu6K,WAAW,EAAEv6K,KAAKg5K,YAAY,EAAEh5K,KAAK26K,aAAa,EAAE36K,KAAKm7K,WAAW,EAAEn7K,KAAKq7K,gBAAgB,EAAEr7K,KAAKi5K,SAAS,EAAEj5K,KAAKi6K,YAAY,EAAEj6K,KAAKg6K,UAAU,EAAEh6K,KAAKw5K,YAAY,EAAEx5K,KAAKu5K,iBAAiB,EAAEv5K,KAAK66K,eAAe,EAAE76K,KAAK8tK,MAAM,EAAE9tK,KAAKw0K,SAAS,EAAEx0K,KAAK+5K,WAAW,EAAE/5K,KAAKy5K,WAAW,EAAEz5K,KAAKi8K,UAAU,IAAIvM,EAAE2H,MAAM,EAAE6E,GAAIl8K,KAAKm8K,UAAU,IAAIzM,EAAE2H,MAAM,GAAG,EAAE+E,EAAG,IAAIp8K,KAAKq8K,QAAQ,IAAI3M,EAAE2H,MAAM,GAAG,EAAEiF,EAAG,IAAIt1K,EAAEhH,KAAKi8K,WAAWj1K,EAAEhH,KAAKm8K,WAAWn1K,EAAEhH,KAAKq8K,SAASr8K,KAAKu8K,OAAO,KAAKv8K,KAAKw8K,OAAO,KAAKx8K,KAAKy8K,QAAQ,KAAKz8K,KAAK08K,SAAS,IAAIhN,EAAE2H,MAAMsF,EAAG,GAAG38K,KAAK48K,KAAK,IAAIlN,EAAE2H,MAAM,EAAEwF,EAAG,GAAG71K,EAAEhH,KAAK48K,MAAM58K,KAAK88K,SAAS,EAAE98K,KAAK+8K,SAAS,EAAE/8K,KAAKwnF,MAAM,IAAIkoF,EAAE2H,MAAM,EAAEwF,EAAG,GAAG71K,EAAEhH,KAAKwnF,OAAOxnF,KAAKg9K,MAAM,EAAEh9K,KAAKi9K,YAAY,EAAEj9K,KAAKi7K,SAAS,EAAEj7K,KAAKk9K,MAAM,EAAEl9K,KAAKm9K,QAAQ,EAAEn9K,KAAKo9K,WAAW,EAAEp9K,KAAK2wJ,QAAQ,EAAE3wJ,KAAKo6K,OAAO,EAAEp6K,KAAKq9K,OAAO,EAAEr9K,KAAKs9K,SAAS,CAAC,CAAC,SAAShqK,EAAE1F,GAAG,IAAIC,EAAE,OAAOD,GAAGA,EAAEu9C,OAAOv9C,EAAE0rK,SAAS1rK,EAAEkrK,UAAU,EAAElrK,EAAE2vK,UAAUC,GAAE3vK,EAAED,EAAEu9C,OAAQ7qC,QAAQ,EAAEzS,EAAEgrK,YAAY,EAAEhrK,EAAEqrK,KAAK,IAAIrrK,EAAEqrK,MAAMrrK,EAAEqrK,MAAMrrK,EAAE0J,OAAO1J,EAAEqrK,KAAKuE,GAAGC,GAAG9vK,EAAEurK,MAAM,IAAItrK,EAAEqrK,KAAK,EAAE,EAAErrK,EAAEiuK,WAAWrB,EAAEv2K,EAAEy5K,SAAS9vK,GAAG+vK,GAAGrsJ,EAAE3jB,EAAEiwK,EAAE,CAAC,SAASnmG,EAAE9pE,GAAG,IAAIC,EAAEyF,EAAE1F,GAAG,OAAOC,IAAI+vK,GAAptD,SAAWhwK,GAAGA,EAAEssK,YAAY,EAAEtsK,EAAE8rK,OAAO1yK,EAAE4G,EAAE3M,MAAM2M,EAAEitK,eAAe5L,EAAErhK,EAAEkgK,OAAOyN,SAAS3tK,EAAEmsK,WAAW9K,EAAErhK,EAAEkgK,OAAOwN,YAAY1tK,EAAE6rK,WAAWxK,EAAErhK,EAAEkgK,OAAO0N,YAAY5tK,EAAE2rK,iBAAiBtK,EAAErhK,EAAEkgK,OAAO2N,UAAU7tK,EAAEqrK,SAAS,EAAErrK,EAAEorK,YAAY,EAAEprK,EAAEosK,UAAU,EAAEpsK,EAAEwsK,OAAO,EAAExsK,EAAE+sK,aAAa/sK,EAAE4rK,YAAYa,GAAG,EAAEzsK,EAAEytK,gBAAgB,EAAEztK,EAAE0sK,MAAM,CAAC,CAA45Ch6I,CAAE1yB,EAAEu9C,OAAOt9C,CAAC,CAA6E,SAASwtD,EAAEztD,EAAEC,EAAEtK,EAAE8G,EAAErD,EAAE04G,GAAG,IAAI9xG,EAAE,OAAOiwK,EAAE,IAAIr2J,EAAE,EAAE,GAAG3Z,IAAIilJ,IAAIjlJ,EAAE,GAAGxD,EAAE,GAAGmd,EAAE,EAAEnd,GAAGA,GAAGA,EAAE,KAAKmd,EAAE,EAAEnd,GAAG,IAAIrD,EAAE,GAAGA,EAAEmlI,GAAG5oI,IAAIs4K,GAAGxxK,EAAE,GAAGA,EAAE,IAAIwD,EAAE,GAAGA,EAAE,GAAG6xG,EAAE,GAAGA,EAAEo+D,EAAE,OAAOvsJ,EAAE3jB,EAAEiwK,GAAG,IAAIxzK,IAAIA,EAAE,GAAG,IAAIkJ,EAAE,IAAI+qE,EAAE,OAAO1wE,EAAEu9C,MAAM53C,EAAEA,EAAEohK,KAAK/mK,EAAE2F,EAAE2lK,KAAK1xJ,EAAEjU,EAAEooK,OAAO,KAAKpoK,EAAEwoK,OAAO1xK,EAAEkJ,EAAEmmK,OAAO,GAAGnmK,EAAEwoK,OAAOxoK,EAAEqmK,OAAOrmK,EAAEmmK,OAAO,EAAEnmK,EAAEyoK,UAAUh1K,EAAE,EAAEuM,EAAE4mK,UAAU,GAAG5mK,EAAEyoK,UAAUzoK,EAAEinK,UAAUjnK,EAAE4mK,UAAU,EAAE5mK,EAAEgnK,eAAehnK,EAAEyoK,UAAU3B,GAAG,GAAGA,IAAI9mK,EAAEoG,OAAO,IAAI+1J,EAAE6F,KAAK,EAAEhiK,EAAEmmK,QAAQnmK,EAAEtS,KAAK,IAAIyuK,EAAE2H,MAAM9jK,EAAE4mK,WAAW5mK,EAAEsmK,KAAK,IAAInK,EAAE2H,MAAM9jK,EAAEmmK,QAAQnmK,EAAE0pK,YAAY,GAAGj2K,EAAE,EAAEuM,EAAEmoK,iBAAiB,EAAEnoK,EAAE0pK,YAAY1pK,EAAEqlK,YAAY,IAAIlJ,EAAE6F,KAAKhiK,EAAEmoK,kBAAkBnoK,EAAE2pK,MAAM,EAAE3pK,EAAE0pK,YAAY1pK,EAAEypK,MAAM,EAAEzpK,EAAE0pK,YAAY1pK,EAAEu6J,MAAMjgK,EAAE0F,EAAEihK,SAAS90D,EAAEnsG,EAAE2D,OAAO3T,EAAEm0E,EAAE9pE,EAAE,CAAy6I,IAAIqhK,EAAES,EAAE9hK,EAAE,mBAAmB1J,EAAE0J,EAAE,WAAWwrK,EAAExrK,EAAE,aAAayrK,EAAEzrK,EAAE,WAAW+qK,EAAE/qK,EAAE,cAAc6sK,EAAE,EAAEsD,EAAE,EAAEh+K,EAAE,EAAE+6K,EAAE,EAAEkD,EAAE,EAAEJ,EAAE,EAAEK,EAAE,EAAEJ,GAAG,EAAEK,GAAG,EAAEC,GAAG,EAAErrB,GAAG,EAAEsoB,EAAE,EAAEvtI,EAAE,EAAEuwI,EAAE,EAAEN,EAAE,EAAEO,EAAE,EAAEb,EAAE,EAAE3B,EAAE,EAAE1vC,EAAE,EAAEmyC,EAAG,GAAGC,EAAG,EAAe1B,EAAG2B,IAAQpC,EAAG,GAAGE,EAAG,GAAGJ,EAAG,EAAEW,EAAG,EAAEF,EAAG,GAAGtC,GAAG,EAAEP,GAAG,IAAIH,GAAGG,GAAGO,GAAG,EAAEoE,GAAG,GAAGhB,GAAG,GAAGiB,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,IAAInB,GAAG,IAAIoB,GAAG,IAAIpE,GAAG,EAAEQ,GAAG,EAAEH,GAAG,EAAEC,GAAG,EAAE+D,GAAG,EAAE9P,EAAE,CAAC,IAAIriK,EAAE,EAAE,EAAE,EAAE,GAAl/W,SAAWgB,EAAEC,GAAG,IAAItK,EAAE,MAAM,IAAIA,EAAEqK,EAAE8tK,iBAAiB,IAAIn4K,EAAEqK,EAAE8tK,iBAAiB,KAAK,CAAC,GAAG9tK,EAAEosK,WAAW,EAAE,CAAC,GAAG5S,EAAEx5J,GAAG,IAAIA,EAAEosK,WAAWnsK,IAAI4sK,EAAE,OAAOC,GAAG,GAAG,IAAI9sK,EAAEosK,UAAU,KAAK,CAACpsK,EAAEqrK,UAAUrrK,EAAEosK,UAAUpsK,EAAEosK,UAAU,EAAE,IAAIzoJ,EAAE3jB,EAAEorK,YAAYz1K,EAAE,IAAI,IAAIqK,EAAEqrK,UAAUrrK,EAAEqrK,UAAU1nJ,KAAK3jB,EAAEosK,UAAUpsK,EAAEqrK,SAAS1nJ,EAAE3jB,EAAEqrK,SAAS1nJ,EAAE/J,EAAE5Z,GAAE,GAAI,IAAIA,EAAE+mK,KAAKC,WAAW,OAAO8F,GAAG,GAAG9sK,EAAEqrK,SAASrrK,EAAEorK,aAAaprK,EAAE8rK,OAAOC,KAAKnyJ,EAAE5Z,GAAE,GAAI,IAAIA,EAAE+mK,KAAKC,WAAW,OAAO8F,EAAE,CAAC,OAAO9sK,EAAEwsK,OAAO,EAAEvsK,IAAIitK,GAAGtzJ,EAAE5Z,GAAE,GAAI,IAAIA,EAAE+mK,KAAKC,UAAUmG,GAAGC,KAAIptK,EAAEqrK,SAASrrK,EAAEorK,cAAcxxJ,EAAE5Z,GAAE,GAAQA,EAAE+mK,KAAKC,WAAW8F,GAAK,IAAi9V,IAAI9tK,EAAE,EAAE,EAAE,EAAE,EAAEma,GAAG,IAAIna,EAAE,EAAE,EAAE,GAAG,EAAEma,GAAG,IAAIna,EAAE,EAAE,EAAE,GAAG,GAAGma,GAAG,IAAIna,EAAE,EAAE,EAAE,GAAG,GAAGiW,GAAG,IAAIjW,EAAE,EAAE,GAAG,GAAG,GAAGiW,GAAG,IAAIjW,EAAE,EAAE,GAAG,IAAI,IAAIiW,GAAG,IAAIjW,EAAE,EAAE,GAAG,IAAI,IAAIiW,GAAG,IAAIjW,EAAE,GAAG,IAAI,IAAI,KAAKiW,GAAG,IAAIjW,EAAE,GAAG,IAAI,IAAI,KAAKiW,IAAItf,EAAEy7K,YAA18J,SAAWpxK,EAAEC,GAAG,OAAOwtD,EAAEztD,EAAEC,EAAEguK,EAAEyC,EAAGC,EAAGF,EAAE,EAAi7J96K,EAAEsxK,aAAax5G,EAAE93D,EAAE07K,aAAavnG,EAAEn0E,EAAE27K,iBAAiB5rK,EAAE/P,EAAEuxK,iBAA7vL,SAAWlnK,EAAEC,GAAG,OAAOD,GAAGA,EAAEu9C,MAAM,IAAIv9C,EAAEu9C,MAAM+tH,KAAK2E,GAAGjwK,EAAEu9C,MAAMwwH,OAAO9tK,EAAE+vK,GAAGC,CAAC,EAAqsLt6K,EAAEkyK,QAA9/J,SAAW7nK,EAAEC,GAAG,IAAItK,EAAEikB,EAAEjT,EAAEC,EAAE,IAAI5G,IAAIA,EAAEu9C,OAAOt9C,EAAEmwK,GAAGnwK,EAAE,EAAE,OAAOD,EAAE2jB,EAAE3jB,EAAEiwK,GAAGA,EAAE,GAAGr2J,EAAE5Z,EAAEu9C,OAAOv9C,EAAE0nK,SAAS1nK,EAAEunK,OAAO,IAAIvnK,EAAEynK,UAAU7tJ,EAAEjQ,SAASunK,IAAIjxK,IAAIitK,EAAE,OAAOvpJ,EAAE3jB,EAAE,IAAIA,EAAEgnK,UAAUuJ,EAAEN,GAAG,GAAGr2J,EAAEmtJ,KAAK/mK,EAAErK,EAAEikB,EAAEs0J,WAAWt0J,EAAEs0J,WAAWjuK,EAAE2Z,EAAEjQ,SAASkmK,GAAG,GAAG,IAAIj2J,EAAE0xJ,KAAKtrK,EAAEurK,MAAM,EAAE5lK,EAAEiU,EAAE,IAAIjU,EAAEiU,EAAE,KAAKjU,EAAEiU,EAAE,GAAGA,EAAEm0J,QAAQpoK,EAAEiU,GAAGA,EAAEm0J,OAAOttK,KAAK,EAAE,IAAImZ,EAAEm0J,OAAOwD,KAAK,EAAE,IAAI33J,EAAEm0J,OAAOyD,MAAM,EAAE,IAAI53J,EAAEm0J,OAAOx0K,KAAK,EAAE,IAAIqgB,EAAEm0J,OAAO9sD,QAAQ,GAAG,IAAIt7G,EAAEiU,EAAE,IAAIA,EAAEm0J,OAAO0D,MAAM9rK,EAAEiU,EAAEA,EAAEm0J,OAAO0D,MAAM,EAAE,KAAK9rK,EAAEiU,EAAEA,EAAEm0J,OAAO0D,MAAM,GAAG,KAAK9rK,EAAEiU,EAAEA,EAAEm0J,OAAO0D,MAAM,GAAG,KAAK9rK,EAAEiU,EAAE,IAAIA,EAAEsmJ,MAAM,EAAEtmJ,EAAEgtJ,UAAU3mI,GAAGrmB,EAAEsmJ,MAAM,EAAE,EAAE,GAAGv6J,EAAEiU,EAAE,IAAIA,EAAEm0J,OAAO2D,IAAI93J,EAAEm0J,OAAOyD,OAAO53J,EAAEm0J,OAAOyD,MAAMj5K,SAASoN,EAAEiU,EAAE,IAAIA,EAAEm0J,OAAOyD,MAAMj5K,QAAQoN,EAAEiU,EAAEA,EAAEm0J,OAAOyD,MAAMj5K,QAAQ,EAAE,MAAMqhB,EAAEm0J,OAAOwD,OAAOvxK,EAAEurK,MAAME,EAAEzrK,EAAEurK,MAAM3xJ,EAAEoxJ,YAAYpxJ,EAAElH,QAAQ,IAAIkH,EAAEo0J,QAAQ,EAAEp0J,EAAEjQ,OAAOmnK,KAAKnrK,EAAEiU,EAAE,GAAGjU,EAAEiU,EAAE,GAAGjU,EAAEiU,EAAE,GAAGjU,EAAEiU,EAAE,GAAGjU,EAAEiU,EAAE,GAAGjU,EAAEiU,EAAE,IAAIA,EAAEsmJ,MAAM,EAAEtmJ,EAAEgtJ,UAAU3mI,GAAGrmB,EAAEsmJ,MAAM,EAAE,EAAE,GAAGv6J,EAAEiU,EAAEu3J,IAAIv3J,EAAEjQ,OAAOmmK,QAAQ,CAAC,IAAItW,EAAEyU,GAAGr0J,EAAEu0J,OAAO,GAAG,IAAI,EAAgE3U,IAAvD5/I,EAAEgtJ,UAAU3mI,GAAGrmB,EAAEsmJ,MAAM,EAAE,EAAEtmJ,EAAEsmJ,MAAM,EAAE,EAAE,IAAItmJ,EAAEsmJ,MAAM,EAAE,IAAQ,EAAE,IAAItmJ,EAAEyxJ,WAAW7R,GAAGqX,IAAIrX,GAAG,GAAGA,EAAE,GAAG5/I,EAAEjQ,OAAOmmK,GAAGz4I,EAAEzd,EAAE4/I,GAAG,IAAI5/I,EAAEyxJ,WAAWh0I,EAAEzd,EAAE5Z,EAAEurK,QAAQ,IAAIl0I,EAAEzd,EAAE,MAAM5Z,EAAEurK,QAAQvrK,EAAEurK,MAAM,CAAC,CAAC,GAAG3xJ,EAAEjQ,SAASmnK,GAAG,GAAGl3J,EAAEm0J,OAAOyD,MAAM,CAAC,IAAI7qK,EAAEiT,EAAElH,QAAQkH,EAAEo0J,SAAS,MAAMp0J,EAAEm0J,OAAOyD,MAAMj5K,UAAUqhB,EAAElH,UAAUkH,EAAEk0J,mBAAmBl0J,EAAEm0J,OAAOwD,MAAM33J,EAAElH,QAAQ/L,IAAI3G,EAAEurK,MAAME,EAAEzrK,EAAEurK,MAAM3xJ,EAAEoxJ,YAAYpxJ,EAAElH,QAAQ/L,EAAEA,IAAImrG,EAAE9xG,GAAG2G,EAAEiT,EAAElH,QAAQkH,EAAElH,UAAUkH,EAAEk0J,oBAAoBnoK,EAAEiU,EAAE,IAAIA,EAAEm0J,OAAOyD,MAAM53J,EAAEo0J,UAAUp0J,EAAEo0J,UAAUp0J,EAAEm0J,OAAOwD,MAAM33J,EAAElH,QAAQ/L,IAAI3G,EAAEurK,MAAME,EAAEzrK,EAAEurK,MAAM3xJ,EAAEoxJ,YAAYpxJ,EAAElH,QAAQ/L,EAAEA,IAAIiT,EAAEo0J,UAAUp0J,EAAEm0J,OAAOyD,MAAMj5K,SAASqhB,EAAEo0J,QAAQ,EAAEp0J,EAAEjQ,OAAOonK,GAAG,MAAMn3J,EAAEjQ,OAAOonK,GAAG,GAAGn3J,EAAEjQ,SAASonK,GAAG,GAAGn3J,EAAEm0J,OAAOx0K,KAAK,CAACoN,EAAEiT,EAAElH,QAAQ,EAAE,CAAC,GAAGkH,EAAElH,UAAUkH,EAAEk0J,mBAAmBl0J,EAAEm0J,OAAOwD,MAAM33J,EAAElH,QAAQ/L,IAAI3G,EAAEurK,MAAME,EAAEzrK,EAAEurK,MAAM3xJ,EAAEoxJ,YAAYpxJ,EAAElH,QAAQ/L,EAAEA,IAAImrG,EAAE9xG,GAAG2G,EAAEiT,EAAElH,QAAQkH,EAAElH,UAAUkH,EAAEk0J,kBAAkB,CAAClnK,EAAE,EAAE,KAAK,CAACA,EAAEgT,EAAEo0J,QAAQp0J,EAAEm0J,OAAOx0K,KAAKhB,OAAO,IAAIqhB,EAAEm0J,OAAOx0K,KAAKg5J,WAAW34I,EAAEo0J,WAAW,EAAEroK,EAAEiU,EAAEhT,EAAE,OAAO,IAAIA,GAAGgT,EAAEm0J,OAAOwD,MAAM33J,EAAElH,QAAQ/L,IAAI3G,EAAEurK,MAAME,EAAEzrK,EAAEurK,MAAM3xJ,EAAEoxJ,YAAYpxJ,EAAElH,QAAQ/L,EAAEA,IAAI,IAAIC,IAAIgT,EAAEo0J,QAAQ,EAAEp0J,EAAEjQ,OAAOqnK,GAAG,MAAMp3J,EAAEjQ,OAAOqnK,GAAG,GAAGp3J,EAAEjQ,SAASqnK,GAAG,GAAGp3J,EAAEm0J,OAAO9sD,QAAQ,CAACt6G,EAAEiT,EAAElH,QAAQ,EAAE,CAAC,GAAGkH,EAAElH,UAAUkH,EAAEk0J,mBAAmBl0J,EAAEm0J,OAAOwD,MAAM33J,EAAElH,QAAQ/L,IAAI3G,EAAEurK,MAAME,EAAEzrK,EAAEurK,MAAM3xJ,EAAEoxJ,YAAYpxJ,EAAElH,QAAQ/L,EAAEA,IAAImrG,EAAE9xG,GAAG2G,EAAEiT,EAAElH,QAAQkH,EAAElH,UAAUkH,EAAEk0J,kBAAkB,CAAClnK,EAAE,EAAE,KAAK,CAACA,EAAEgT,EAAEo0J,QAAQp0J,EAAEm0J,OAAO9sD,QAAQ1oH,OAAO,IAAIqhB,EAAEm0J,OAAO9sD,QAAQsxC,WAAW34I,EAAEo0J,WAAW,EAAEroK,EAAEiU,EAAEhT,EAAE,OAAO,IAAIA,GAAGgT,EAAEm0J,OAAOwD,MAAM33J,EAAElH,QAAQ/L,IAAI3G,EAAEurK,MAAME,EAAEzrK,EAAEurK,MAAM3xJ,EAAEoxJ,YAAYpxJ,EAAElH,QAAQ/L,EAAEA,IAAI,IAAIC,IAAIgT,EAAEjQ,OAAOsnK,GAAG,MAAMr3J,EAAEjQ,OAAOsnK,GAAG,GAAGr3J,EAAEjQ,SAASsnK,KAAKr3J,EAAEm0J,OAAOwD,MAAM33J,EAAElH,QAAQ,EAAEkH,EAAEk0J,kBAAkBh8D,EAAE9xG,GAAG4Z,EAAElH,QAAQ,GAAGkH,EAAEk0J,mBAAmBnoK,EAAEiU,EAAE,IAAI5Z,EAAEurK,OAAO5lK,EAAEiU,EAAE5Z,EAAEurK,OAAO,EAAE,KAAKvrK,EAAEurK,MAAM,EAAE3xJ,EAAEjQ,OAAOmmK,KAAKl2J,EAAEjQ,OAAOmmK,IAAI,IAAIl2J,EAAElH,SAAS,GAAGo/F,EAAE9xG,GAAG,IAAIA,EAAEgnK,UAAU,OAAOptJ,EAAEs0J,YAAY,EAAE8B,OAAO,GAAG,IAAIhwK,EAAEynK,UAAUhrK,EAAEwD,IAAIxD,EAAE9G,IAAIsK,IAAIitK,EAAE,OAAOvpJ,EAAE3jB,EAAEuwK,GAAG,GAAG32J,EAAEjQ,SAASunK,IAAI,IAAIlxK,EAAEynK,SAAS,OAAO9jJ,EAAE3jB,EAAEuwK,GAAG,GAAG,IAAIvwK,EAAEynK,UAAU,IAAI7tJ,EAAEwyJ,WAAWnsK,IAAI4sK,GAAGjzJ,EAAEjQ,SAASunK,GAAG,CAAC,IAAI/3J,EAAES,EAAEgtJ,WAAW3mI,EAAEj+B,EAAE4X,EAAE3Z,GAAG2Z,EAAEgtJ,WAAW4J,EAAEn1J,EAAEzB,EAAE3Z,GAAGohK,EAAEznJ,EAAEsmJ,OAAOzc,KAAK7pI,EAAE3Z,GAAG,GAAGkZ,IAAIg0J,IAAIh0J,IAAIi0J,KAAKxzJ,EAAEjQ,OAAOunK,IAAI/3J,IAAI2zJ,IAAI3zJ,IAAIg0J,GAAG,OAAO,IAAIntK,EAAEgnK,YAAYptJ,EAAEs0J,YAAY,GAAG8B,EAAE,GAAG72J,IAAIm0J,KAAKrtK,IAAIkwK,EAAE75K,EAAEq7K,UAAU/3J,GAAG3Z,IAAImwK,IAAI95K,EAAEs7K,iBAAiBh4J,EAAE,EAAE,GAAE,GAAI3Z,IAAI9N,IAAIiH,EAAEwgB,EAAEvmB,MAAM,IAAIumB,EAAEwyJ,YAAYxyJ,EAAEyxJ,SAAS,EAAEzxJ,EAAEwxJ,YAAY,EAAExxJ,EAAE4yJ,OAAO,KAAK16D,EAAE9xG,GAAG,IAAIA,EAAEgnK,WAAW,OAAOptJ,EAAEs0J,YAAY,EAAE8B,CAAC,CAAC,OAAO/vK,IAAIitK,EAAE8C,EAAEp2J,EAAE0xJ,MAAM,EAAE+E,GAAG,IAAIz2J,EAAE0xJ,MAAM3lK,EAAEiU,EAAE,IAAI5Z,EAAEurK,OAAO5lK,EAAEiU,EAAE5Z,EAAEurK,OAAO,EAAE,KAAK5lK,EAAEiU,EAAE5Z,EAAEurK,OAAO,GAAG,KAAK5lK,EAAEiU,EAAE5Z,EAAEurK,OAAO,GAAG,KAAK5lK,EAAEiU,EAAE,IAAI5Z,EAAE0rK,UAAU/lK,EAAEiU,EAAE5Z,EAAE0rK,UAAU,EAAE,KAAK/lK,EAAEiU,EAAE5Z,EAAE0rK,UAAU,GAAG,KAAK/lK,EAAEiU,EAAE5Z,EAAE0rK,UAAU,GAAG,OAAOr0I,EAAEzd,EAAE5Z,EAAEurK,QAAQ,IAAIl0I,EAAEzd,EAAE,MAAM5Z,EAAEurK,QAAQz5D,EAAE9xG,GAAG4Z,EAAE0xJ,KAAK,IAAI1xJ,EAAE0xJ,MAAM1xJ,EAAE0xJ,MAAM,IAAI1xJ,EAAElH,QAAQs9J,EAAEK,EAAE,EAA2lD16K,EAAEuyK,WAA5lD,SAAWloK,GAAG,IAAIC,EAAE,OAAOD,GAAGA,EAAEu9C,OAAOt9C,EAAED,EAAEu9C,MAAM5zC,UAAWkmK,IAAI5vK,IAAI6wK,IAAI7wK,IAAI8wK,IAAI9wK,IAAI+wK,IAAI/wK,IAAIgxK,IAAIhxK,IAAI6vK,IAAI7vK,IAAIixK,GAAGvtJ,EAAE3jB,EAAEiwK,IAAIjwK,EAAEu9C,MAAM,KAAKt9C,IAAI6vK,GAAGnsJ,EAAE3jB,EAAEswK,GAAGN,GAAIC,CAAC,EAAk9Ct6K,EAAE0xK,qBAAn9C,SAAWrnK,EAAEC,GAAG,IAAItK,EAAEguB,EAAElnB,EAAEq1G,EAAEl4F,EAAEjU,EAAE0xB,EAAE1wB,EAAEC,EAAE3G,EAAE1H,OAAO,IAAIyH,IAAIA,EAAEu9C,MAAM,OAAO0yH,EAAE,GAAsB,KAATn+D,GAAVn8G,EAAEqK,EAAEu9C,OAAU+tH,OAAY,IAAIx5D,GAAGn8G,EAAEgU,SAASkmK,IAAIl6K,EAAEy2K,UAAU,OAAO6D,EAAE,IAAI,IAAIn+D,IAAI9xG,EAAEurK,MAAMC,EAAExrK,EAAEurK,MAAMtrK,EAAE2G,EAAE,IAAIjR,EAAE21K,KAAK,EAAE1kK,GAAGjR,EAAEm2K,SAAS,IAAIh6D,IAAI14G,EAAEzD,EAAEtC,MAAMsC,EAAE01K,SAAS,EAAE11K,EAAEy1K,YAAY,EAAEz1K,EAAE62K,OAAO,GAAG7lK,EAAE,IAAIm7J,EAAE6F,KAAKhyK,EAAEm2K,QAAQhK,EAAEqH,SAASxiK,EAAE1G,EAAE2G,EAAEjR,EAAEm2K,OAAOn2K,EAAEm2K,OAAO,GAAG7rK,EAAE0G,EAAEC,EAAEjR,EAAEm2K,QAAQlyJ,EAAE5Z,EAAEynK,SAAS9hK,EAAE3F,EAAEwnK,QAAQnwI,EAAEr3B,EAAEunK,MAAMvnK,EAAEynK,SAAS7gK,EAAE5G,EAAEwnK,QAAQ,EAAExnK,EAAEunK,MAAMtnK,EAAEu5J,EAAE7jK,GAAGA,EAAEy2K,WAAWK,IAAI,CAAC9oJ,EAAEhuB,EAAE01K,SAAS5uK,EAAE9G,EAAEy2K,WAAWK,GAAG,GAAG,GAAG92K,EAAE+2K,OAAO/2K,EAAE+2K,OAAO/2K,EAAEg3K,WAAWh3K,EAAEoW,OAAO4X,EAAE8oJ,GAAG,IAAI92K,EAAEi3K,UAAUj3K,EAAEs2K,KAAKtoJ,EAAEhuB,EAAEq2K,QAAQr2K,EAAEtC,KAAKsC,EAAE+2K,OAAO/2K,EAAEtC,KAAKsC,EAAE+2K,OAAO/oJ,EAAEA,YAAYlnB,GAAG9G,EAAE01K,SAAS1nJ,EAAEhuB,EAAEy2K,UAAUK,GAAG,EAAEjT,EAAE7jK,EAAE,CAAC,OAAOA,EAAE01K,UAAU11K,EAAEy2K,UAAUz2K,EAAEy1K,YAAYz1K,EAAE01K,SAAS11K,EAAE62K,OAAO72K,EAAEy2K,UAAUz2K,EAAEy2K,UAAU,EAAEz2K,EAAEo3K,aAAap3K,EAAEi2K,YAAYa,GAAG,EAAE92K,EAAE83K,gBAAgB,EAAEztK,EAAEwnK,QAAQ7hK,EAAE3F,EAAEunK,MAAMlwI,EAAEr3B,EAAEynK,SAAS7tJ,EAAEjkB,EAAE21K,KAAKx5D,EAAEk+D,CAAC,EAAirBr6K,EAAEk8K,YAAY,oCAAoC,EAAE,CAAC,kBAAkB,GAAG,YAAY,GAAG,UAAU,GAAG,aAAa,GAAG,UAAU,KAAK,GAAG,CAAC,SAAS7xK,EAAEC,EAAEtK,GAAG,aAAiKsK,EAAEnO,QAAtJ,WAAaM,KAAKqO,KAAK,EAAErO,KAAKq/K,KAAK,EAAEr/K,KAAK0/K,OAAO,EAAE1/K,KAAKs/K,GAAG,EAAEt/K,KAAKo/K,MAAM,KAAKp/K,KAAK2/K,UAAU,EAAE3/K,KAAKmH,KAAK,GAAGnH,KAAK6uH,QAAQ,GAAG7uH,KAAKm/K,KAAK,EAAEn/K,KAAK++I,MAAK,CAAE,CAAY,EAAE,CAAC,GAAG,GAAG,CAAC,SAASnxI,EAAEC,EAAEtK,GAAG,aAA2BsK,EAAEnO,QAAQ,SAASkO,EAAEC,GAAG,IAAItK,EAAEyD,EAAE04G,EAAEl4F,EAAEjU,EAAE0xB,EAAE1wB,EAAEC,EAAE4yJ,EAAEtjH,EAAE/8B,EAAElE,EAAEoG,EAAErZ,EAAEhD,EAAE0zB,EAAEg+C,EAAEhrE,EAAEokE,EAAExqE,EAAEmuD,EAAEm0G,EAAEG,EAAEC,EAAEH,EAAElsK,EAAEqK,EAAEu9C,MAAMnkD,EAAE4G,EAAEwnK,QAAQxF,EAAEhiK,EAAEunK,MAAMz1D,EAAE14G,GAAG4G,EAAEynK,SAAS,GAAG7tJ,EAAE5Z,EAAE4nK,SAAS/F,EAAE7hK,EAAE0nK,OAAO/hK,EAAEiU,GAAG3Z,EAAED,EAAEgnK,WAAW3vI,EAAEzd,GAAG5Z,EAAEgnK,UAAU,KAAKrgK,EAAEhR,EAAEq8K,KAAKprK,EAAEjR,EAAEs8K,MAAMzY,EAAE7jK,EAAEu8K,MAAMh8H,EAAEvgD,EAAEw8K,MAAMh5J,EAAExjB,EAAEoW,OAAOkJ,EAAEtf,EAAEy8K,KAAK/2J,EAAE1lB,EAAE08K,KAAKrwK,EAAErM,EAAE28K,QAAQtzK,EAAErJ,EAAE48K,SAAS7/I,GAAG,GAAG/8B,EAAE68K,SAAS,EAAE9hG,GAAG,GAAG/6E,EAAE88K,UAAU,EAAEzyK,EAAE,EAAE,CAACqb,EAAE,KAAKpG,GAAG+sJ,EAAE5oK,MAAMiiB,EAAEA,GAAG,EAAEpG,GAAG+sJ,EAAE5oK,MAAMiiB,EAAEA,GAAG,GAAG3V,EAAE1D,EAAEiT,EAAEyd,GAAGzyB,EAAE,OAAO,CAAC,GAAYgV,KAAT60D,EAAEpkE,IAAI,GAAU2V,GAAGyuD,EAAe,IAAbA,EAAEpkE,IAAI,GAAG,KAAUm8J,EAAEjoJ,KAAK,MAAMlU,MAAM,CAAC,KAAK,GAAGokE,GAAG,CAAC,GAAG,IAAK,GAAGA,GAAG,CAACpkE,EAAE1D,GAAG,MAAM0D,IAAIuP,GAAG,GAAG60D,GAAG,IAAI,SAAS7pE,CAAC,CAAC,GAAG,GAAG6pE,EAAE,CAACn0E,EAAEw5E,KAA1hB,GAAiiB,MAAMnvE,CAAC,CAACA,EAAE8R,IAAI,8BAA8Bnc,EAAEw5E,KAAplB,GAA2lB,MAAMnvE,CAAC,CAACV,EAAE,MAAMoG,GAAEokE,GAAG,MAAOzuD,EAAEyuD,IAAI70D,GAAG+sJ,EAAE5oK,MAAMiiB,EAAEA,GAAG,GAAG/b,GAAG2V,GAAG,GAAG60D,GAAG,EAAE70D,KAAK60D,EAAEzuD,GAAGyuD,GAAGzuD,EAAE,KAAKpG,GAAG+sJ,EAAE5oK,MAAMiiB,EAAEA,GAAG,EAAEpG,GAAG+sJ,EAAE5oK,MAAMiiB,EAAEA,GAAG,GAAG3V,EAAE1G,EAAEiW,EAAEy7D,GAAG/6E,EAAE,OAAO,CAAC,GAAYsf,KAAT60D,EAAEpkE,IAAI,GAAU2V,GAAGyuD,IAAiB,IAAfA,EAAEpkE,IAAI,GAAG,MAAY,CAAC,GAAG,IAAK,GAAGokE,GAAG,CAACpkE,EAAE1G,GAAG,MAAM0G,IAAIuP,GAAG,GAAG60D,GAAG,IAAI,SAASn0E,CAAC,CAACqK,EAAE8R,IAAI,wBAAwBnc,EAAEw5E,KAA92B,GAAq3B,MAAMnvE,CAAC,CAAC,GAAGytD,EAAE,MAAM/nD,EAAQ2V,GAANyuD,GAAG,MAAS70D,GAAG+sJ,EAAE5oK,MAAMiiB,GAAEA,GAAG,GAAIyuD,IAAI70D,GAAG+sJ,EAAE5oK,MAAMiiB,EAAEA,GAAG,KAAIoyC,GAAGx4C,GAAG,GAAG60D,GAAG,GAAInjE,EAAE,CAAC3G,EAAE8R,IAAI,gCAAgCnc,EAAEw5E,KAA7/B,GAAogC,MAAMnvE,CAAC,CAAC,GAAGiV,KAAK60D,EAAEzuD,GAAGyuD,EAAQrc,GAANqc,EAAElwD,EAAEjU,GAAM,CAAC,IAAGmkE,EAAErc,EAAEqc,GAAI0vF,GAAG7jK,EAAE+8K,KAAK,CAAC1yK,EAAE8R,IAAI,gCAAgCnc,EAAEw5E,KAApmC,GAA2mC,MAAMnvE,CAAC,CAAC,GAAG4hK,EAAE,EAAEG,EAAE5oJ,EAAE,IAAI+8B,GAAG,GAAG0rH,GAAGh7J,EAAEkjE,EAAEA,EAAExqE,EAAE,CAACA,GAAGwqE,EAAE,GAAG+3F,EAAEjoJ,KAAKT,EAAEyoJ,aAAa93F,GAAG83F,EAAEhoJ,EAAE6zC,EAAEs0G,EAAEF,CAAC,OAAO,GAAG3rH,EAAE4zB,GAAG,GAAG83F,GAAGh7J,EAAEsvC,EAAE4zB,GAAEA,GAAG5zB,GAAI52C,EAAE,CAACA,GAAGwqE,EAAE,GAAG+3F,EAAEjoJ,KAAKT,EAAEyoJ,aAAa93F,GAAG,GAAG83F,EAAE,EAAE1rH,EAAE52C,EAAE,CAAKA,GAAJwqE,EAAE5zB,EAAO,GAAG2rH,EAAEjoJ,KAAKT,EAAEyoJ,aAAa93F,GAAG83F,EAAEhoJ,EAAE6zC,EAAEs0G,EAAEF,CAAC,CAAC,OAAO,GAAGD,GAAG1rH,EAAE4zB,EAAEA,EAAExqE,EAAE,CAACA,GAAGwqE,EAAE,GAAG+3F,EAAEjoJ,KAAKT,EAAEyoJ,aAAa93F,GAAG83F,EAAEhoJ,EAAE6zC,EAAEs0G,EAAEF,CAAC,CAAC,KAAKviK,EAAE,GAAGuiK,EAAEjoJ,KAAKmoJ,EAAEH,KAAKC,EAAEjoJ,KAAKmoJ,EAAEH,KAAKC,EAAEjoJ,KAAKmoJ,EAAEH,KAAKtiK,GAAG,EAAEA,IAAIuiK,EAAEjoJ,KAAKmoJ,EAAEH,KAAKtiK,EAAE,IAAIuiK,EAAEjoJ,KAAKmoJ,EAAEH,MAAM,KAAK,CAACA,EAAEhoJ,EAAE6zC,EAAE,GAAGo0G,EAAEjoJ,KAAKioJ,EAAED,KAAKC,EAAEjoJ,KAAKioJ,EAAED,KAAKC,EAAEjoJ,KAAKioJ,EAAED,KAAKtiK,GAAG,QAAQA,EAAE,GAAGA,IAAIuiK,EAAEjoJ,KAAKioJ,EAAED,KAAKtiK,EAAE,IAAIuiK,EAAEjoJ,KAAKioJ,EAAED,MAAM,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,OAAOxoK,EAAE04G,GAAGl4F,EAAEyd,GAAUj+B,GAAPkG,EAAE+b,GAAG,EAAepG,IAAI,IAAZoG,GAAG/b,GAAG,IAAY,EAAEU,EAAEwnK,QAAQpuK,EAAE4G,EAAE4nK,SAAShuJ,EAAE5Z,EAAEynK,SAASruK,EAAE04G,EAAKA,EAAE14G,EAAL,EAAQ,GAAGA,EAAE04G,GAAG9xG,EAAEgnK,UAAUptJ,EAAEyd,EAAOA,EAAEzd,EAAP,IAAU,KAAKA,EAAEyd,GAAG1hC,EAAEy8K,KAAKn9J,EAAEtf,EAAE08K,KAAKh3J,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,SAASrb,EAAEC,EAAEtK,GAAG,aAAa,SAASguB,EAAE3jB,GAAG,OAAOA,IAAI,GAAG,MAAMA,IAAI,EAAE,SAAS,MAAMA,IAAI,KAAK,IAAIA,IAAI,GAAG,CAAC,SAASvD,IAAIrK,KAAK+8E,KAAK,EAAE/8E,KAAKo3J,MAAK,EAAGp3J,KAAKk5K,KAAK,EAAEl5K,KAAKugL,UAAS,EAAGvgL,KAAKwgL,MAAM,EAAExgL,KAAK4/K,KAAK,EAAE5/K,KAAKygL,MAAM,EAAEzgL,KAAK4qH,MAAM,EAAE5qH,KAAKiB,KAAK,KAAKjB,KAAK0gL,MAAM,EAAE1gL,KAAK6/K,MAAM,EAAE7/K,KAAK8/K,MAAM,EAAE9/K,KAAK+/K,MAAM,EAAE//K,KAAK2Z,OAAO,KAAK3Z,KAAKggL,KAAK,EAAEhgL,KAAKigL,KAAK,EAAEjgL,KAAKmG,OAAO,EAAEnG,KAAKgpJ,OAAO,EAAEhpJ,KAAKo/K,MAAM,EAAEp/K,KAAKkgL,QAAQ,KAAKlgL,KAAKmgL,SAAS,KAAKngL,KAAKogL,QAAQ,EAAEpgL,KAAKqgL,SAAS,EAAErgL,KAAK2gL,MAAM,EAAE3gL,KAAK4gL,KAAK,EAAE5gL,KAAK6gL,MAAM,EAAE7gL,KAAK8gL,KAAK,EAAE9gL,KAAKosB,KAAK,KAAKpsB,KAAK+gL,KAAK,IAAIn0K,EAAEyqK,MAAM,KAAKr3K,KAAKghL,KAAK,IAAIp0K,EAAEyqK,MAAM,KAAKr3K,KAAKihL,OAAO,KAAKjhL,KAAKkhL,QAAQ,KAAKlhL,KAAKsgL,KAAK,EAAEtgL,KAAKmhL,KAAK,EAAEnhL,KAAKohL,IAAI,CAAC,CAAC,SAASp6K,EAAE4G,GAAG,IAAIC,EAAE,OAAOD,GAAGA,EAAEu9C,OAAOt9C,EAAED,EAAEu9C,MAAMv9C,EAAE0rK,SAAS1rK,EAAEkrK,UAAUjrK,EAAE+8G,MAAM,EAAEh9G,EAAE8R,IAAI,GAAG7R,EAAEqrK,OAAOtrK,EAAEurK,MAAM,EAAEtrK,EAAEqrK,MAAMrrK,EAAEkvE,KAAKh9E,EAAE8N,EAAEupJ,KAAK,EAAEvpJ,EAAE0yK,SAAS,EAAE1yK,EAAE+xK,KAAK,MAAM/xK,EAAE5M,KAAK,KAAK4M,EAAEmyK,KAAK,EAAEnyK,EAAEoyK,KAAK,EAAEpyK,EAAEqyK,QAAQryK,EAAEozK,OAAO,IAAIr0K,EAAE0qK,MAAMqH,IAAI9wK,EAAEsyK,SAAStyK,EAAEqzK,QAAQ,IAAIt0K,EAAE0qK,MAAMsH,IAAI/wK,EAAEyyK,KAAK,EAAEzyK,EAAEszK,MAAM,EAAElS,GAAGmK,CAAC,CAAC,SAAS15D,EAAE9xG,GAAG,IAAIC,EAAE,OAAOD,GAAGA,EAAEu9C,QAAOt9C,EAAED,EAAEu9C,OAAQ00H,MAAM,EAAEhyK,EAAEiyK,MAAM,EAAEjyK,EAAEkyK,MAAM,EAAE/4K,EAAE4G,IAAIwrK,CAAC,CAAC,SAAS5xJ,EAAE5Z,EAAEC,GAAG,IAAItK,EAAEguB,EAAE,OAAO3jB,GAAGA,EAAEu9C,OAAO55B,EAAE3jB,EAAEu9C,MAAMt9C,EAAE,GAAGtK,EAAE,EAAEsK,GAAGA,IAAItK,EAAS,GAANsK,GAAG,GAAKA,EAAE,KAAKA,GAAG,KAAKA,IAAIA,EAAE,GAAGA,EAAE,IAAIurK,GAAG,OAAO7nJ,EAAE5X,QAAQ4X,EAAEmvJ,QAAQ7yK,IAAI0jB,EAAE5X,OAAO,MAAM4X,EAAE2nJ,KAAK31K,EAAEguB,EAAEmvJ,MAAM7yK,EAAE6xG,EAAE9xG,KAAKwrK,CAAC,CAAC,SAAS7lK,EAAE3F,EAAEC,GAAG,IAAItK,EAAEguB,EAAE,OAAO3jB,GAAG2jB,EAAE,IAAIlnB,EAAEuD,EAAEu9C,MAAM55B,EAAEA,EAAE5X,OAAO,MAAKpW,EAAEikB,EAAE5Z,EAAEC,MAAOohK,IAAIrhK,EAAEu9C,MAAM,MAAM5nD,GAAG61K,CAAC,CAA8B,SAAS7kK,EAAE3G,GAAG,GAAGkxK,GAAG,CAAC,IAAIjxK,EAAE,IAAIob,EAAE,IAAIrc,EAAE0qK,MAAM,KAAK1nK,EAAE,IAAIhD,EAAE0qK,MAAM,IAAIzpK,EAAE,EAAEA,EAAE,KAAKD,EAAEmzK,KAAKlzK,KAAK,EAAE,KAAKA,EAAE,KAAKD,EAAEmzK,KAAKlzK,KAAK,EAAE,KAAKA,EAAE,KAAKD,EAAEmzK,KAAKlzK,KAAK,EAAE,KAAKA,EAAE,KAAKD,EAAEmzK,KAAKlzK,KAAK,EAAE,IAAI6pE,EAAErc,EAAEztD,EAAEmzK,KAAK,EAAE,IAAI93J,EAAE,EAAErb,EAAEozK,KAAK,CAACf,KAAK,IAAIpyK,EAAE,EAAEA,EAAE,IAAID,EAAEmzK,KAAKlzK,KAAK,EAAE6pE,EAAE83F,EAAE5hK,EAAEmzK,KAAK,EAAE,GAAGnxK,EAAE,EAAEhC,EAAEozK,KAAK,CAACf,KAAK,IAAInB,IAAG,CAAE,CAAClxK,EAAEsyK,QAAQj3J,EAAErb,EAAEwyK,QAAQ,EAAExyK,EAAEuyK,SAASvwK,EAAEhC,EAAEyyK,SAAS,CAAC,CAAC,SAAS7rK,EAAE5G,EAAEC,EAAEtK,EAAEguB,GAAG,IAAIlnB,EAAErD,EAAE4G,EAAEu9C,MAAM,OAAO,OAAOnkD,EAAE2S,SAAS3S,EAAE64K,MAAM,GAAG74K,EAAE05K,MAAM15K,EAAE+4K,MAAM,EAAE/4K,EAAE84K,MAAM,EAAE94K,EAAE2S,OAAO,IAAI/M,EAAE2oK,KAAKvuK,EAAE64K,QAAQtuJ,GAAGvqB,EAAE64K,OAAOjzK,EAAEmqK,SAAS/vK,EAAE2S,OAAO9L,EAAEtK,EAAEyD,EAAE64K,MAAM74K,EAAE64K,MAAM,GAAG74K,EAAE+4K,MAAM,EAAE/4K,EAAE84K,MAAM94K,EAAE64K,SAAQx1K,EAAErD,EAAE64K,MAAM74K,EAAE+4K,OAAQxuJ,IAAIlnB,EAAEknB,GAAG3kB,EAAEmqK,SAAS/vK,EAAE2S,OAAO9L,EAAEtK,EAAEguB,EAAElnB,EAAErD,EAAE+4K,QAAOxuJ,GAAGlnB,IAAKuC,EAAEmqK,SAAS/vK,EAAE2S,OAAO9L,EAAEtK,EAAEguB,EAAEA,EAAE,GAAGvqB,EAAE+4K,MAAMxuJ,EAAEvqB,EAAE84K,MAAM94K,EAAE64K,QAAQ74K,EAAE+4K,OAAO11K,EAAErD,EAAE+4K,QAAQ/4K,EAAE64K,QAAQ74K,EAAE+4K,MAAM,GAAG/4K,EAAE84K,MAAM94K,EAAE64K,QAAQ74K,EAAE84K,OAAOz1K,KAAK,CAAC,CAC78sB,IAAI4e,EAAErZ,EAAEhD,EAAEgB,EAAE,mBAAmB0yB,EAAE1yB,EAAE,aAAa0wE,EAAE1wE,EAAE,WAAW0F,EAAE1F,EAAE,aAAa8pE,EAAE9pE,EAAE,cAAcV,EAAE,EAAEmuD,EAAE,EAAEm0G,EAAE,EAAEG,EAAE,EAAEC,EAAE,EAAEH,EAAE,EAAER,EAAE,EAAES,EAAE,EAAExrK,EAAE,EAAEk1K,GAAG,EAAEC,GAAG,EAAEV,GAAG,EAAE8B,GAAG,EAAEsD,EAAE,EAAEh+K,EAAE,EAAE+6K,EAAE,EAAEkD,EAAE,EAAEJ,EAAE,EAAEK,EAAE,EAAEJ,EAAE,EAAEK,EAAE,EAAEC,EAAE,EAAErrB,EAAE,EAAEsoB,EAAE,GAAGvtI,EAAE,GAAGuwI,EAAE,GAAGN,EAAE,GAAGO,EAAE,GAAGb,EAAE,GAAG3B,EAAE,GAAG1vC,EAAE,GAAGmyC,EAAG,GAAGC,EAAG,GAAG8C,EAAG,GAAG7C,EAAG,GAAG3B,EAAG,GAAGT,GAAG,GAAGE,GAAG,GAAGJ,GAAG,GAAGS,GAAG,GAAGtC,GAAG,GAAGP,GAAG,GAAGH,GAAG,GAAG8E,GAAG,GAAGhB,GAAG,GAASkB,GAAG,IAAIC,GAAG,IAAUlB,GAAH,GAASoB,IAAG,EAAGv7K,EAAE+9K,aAAa5hE,EAAEn8G,EAAEg+K,cAAc/5J,EAAEjkB,EAAEi+K,iBAAiBx6K,EAAEzD,EAAEk+K,YADmyqB,SAAW7zK,GAAG,OAAO2F,EAAE3F,EAAE8vK,GAAG,EACjzqBn6K,EAAE0yK,aAAa1iK,EAAEhQ,EAAEgzK,QAD+gsB,SAAW3oK,EAAEC,GAAG,IAAItK,EAAE8G,EAAErD,EAAE04G,EAAEl4F,EAAEjU,EAAE0xB,EAAEmiI,EAAEtjH,GAAE/8B,GAAElE,GAAEoG,GAAErZ,GAAE+uK,GAAGC,GAAGC,GAAGnB,GAAGoB,GAAGpE,GAAGQ,GAAGH,GAAGC,GAAG+D,GAAG2C,GAAGC,GAAG,EAAEC,GAAG,IAAIh1K,EAAE2oK,KAAK,GAAGsM,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,IAAIj0K,IAAIA,EAAEu9C,QAAQv9C,EAAE0nK,SAAS1nK,EAAEunK,OAAO,IAAIvnK,EAAEynK,SAAS,OAAO+D,GAAE71K,EAAEqK,EAAEu9C,OAAQ4xB,OAAOqhG,IAAI76K,EAAEw5E,KAAK+gG,GAAGt2J,EAAE5Z,EAAE4nK,SAASxuK,EAAE4G,EAAE0nK,OAAOrwI,EAAEr3B,EAAEgnK,UAAUl1D,EAAE9xG,EAAEwnK,QAAQ/qK,EAAEuD,EAAEunK,MAAM5hK,EAAE3F,EAAEynK,SAASjO,EAAE7jK,EAAEy8K,KAAKl8H,GAAEvgD,EAAE08K,KAAKl5J,GAAExT,EAAEsP,GAAEoiB,EAAE+1I,GAAG/L,EAAErhK,EAAE,OAAO,OAAOrK,EAAEw5E,MAAM,KAAKh9E,EAAE,GAAG,IAAIwD,EAAE21K,KAAK,CAAC31K,EAAEw5E,KAAK+gG,EAAE,KAAK,CAAC,KAAKh6H,GAAE,IAAI,CAAC,GAAG,IAAIvwC,EAAE,MAAM3F,EAAE2F,IAAI6zJ,GAAG/8J,EAAEq1G,MAAM57D,GAAEA,IAAG,CAAC,CAAC,GAAG,EAAEvgD,EAAE21K,MAAM,QAAQ9R,EAAE,CAAC7jK,EAAEk9K,MAAM,EAAEmB,GAAG,GAAG,IAAIxa,EAAEwa,GAAG,GAAGxa,IAAI,EAAE,IAAI7jK,EAAEk9K,MAAMniG,EAAE/6E,EAAEk9K,MAAMmB,GAAG,EAAE,GAAGxa,EAAE,EAAEtjH,GAAE,EAAEvgD,EAAEw5E,KAAK+9F,EAAE,KAAK,CAAC,GAAGv3K,EAAEi9K,MAAM,EAAEj9K,EAAEtC,OAAOsC,EAAEtC,KAAK89I,MAAK,KAAM,EAAEx7I,EAAE21K,UAAU,IAAI9R,IAAI,IAAIA,GAAG,IAAI,GAAG,CAACx5J,EAAE8R,IAAI,yBAAyBnc,EAAEw5E,KAAK0hG,GAAG,KAAK,CAAC,IAAI,GAAGrX,KAAK2W,EAAE,CAACnwK,EAAE8R,IAAI,6BAA6Bnc,EAAEw5E,KAAK0hG,GAAG,KAAK,CAAC,GAAU36H,IAAG,EAAEi3H,GAAU,GAAN,IAAhB3T,KAAK,IAAmB,IAAI7jK,EAAEm9K,MAAMn9K,EAAEm9K,MAAM3F,QAAQ,GAAGA,GAAGx3K,EAAEm9K,MAAM,CAAC9yK,EAAE8R,IAAI,sBAAsBnc,EAAEw5E,KAAK0hG,GAAG,KAAK,CAACl7K,EAAEq8K,KAAK,GAAG7E,GAAGntK,EAAEurK,MAAM51K,EAAEk9K,MAAM,EAAEl9K,EAAEw5E,KAAK,IAAIqqF,EAAEgU,EAAEgD,EAAEhX,EAAE,EAAEtjH,GAAE,EAAE,MAAM,KAAKg3H,EAAE,KAAKh3H,GAAE,IAAI,CAAC,GAAG,IAAIvwC,EAAE,MAAM3F,EAAE2F,IAAI6zJ,GAAG/8J,EAAEq1G,MAAM57D,GAAEA,IAAG,CAAC,CAAC,GAAGvgD,EAAEi9K,MAAMpZ,GAAG,IAAI7jK,EAAEi9K,SAASzC,EAAE,CAACnwK,EAAE8R,IAAI,6BAA6Bnc,EAAEw5E,KAAK0hG,GAAG,KAAK,CAAC,GAAG,MAAMl7K,EAAEi9K,MAAM,CAAC5yK,EAAE8R,IAAI,2BAA2Bnc,EAAEw5E,KAAK0hG,GAAG,KAAK,CAACl7K,EAAEtC,OAAOsC,EAAEtC,KAAKoN,KAAK+4J,GAAG,EAAE,GAAG,IAAI7jK,EAAEi9K,QAAQoB,GAAG,GAAG,IAAIxa,EAAEwa,GAAG,GAAGxa,IAAI,EAAE,IAAI7jK,EAAEk9K,MAAMniG,EAAE/6E,EAAEk9K,MAAMmB,GAAG,EAAE,IAAIxa,EAAE,EAAEtjH,GAAE,EAAEvgD,EAAEw5E,KAAKihG,EAAE,KAAKA,EAAE,KAAKl6H,GAAE,IAAI,CAAC,GAAG,IAAIvwC,EAAE,MAAM3F,EAAE2F,IAAI6zJ,GAAG/8J,EAAEq1G,MAAM57D,GAAEA,IAAG,CAAC,CAACvgD,EAAEtC,OAAOsC,EAAEtC,KAAKo+K,KAAKjY,GAAG,IAAI7jK,EAAEi9K,QAAQoB,GAAG,GAAG,IAAIxa,EAAEwa,GAAG,GAAGxa,IAAI,EAAE,IAAIwa,GAAG,GAAGxa,IAAI,GAAG,IAAIwa,GAAG,GAAGxa,IAAI,GAAG,IAAI7jK,EAAEk9K,MAAMniG,EAAE/6E,EAAEk9K,MAAMmB,GAAG,EAAE,IAAIxa,EAAE,EAAEtjH,GAAE,EAAEvgD,EAAEw5E,KAAK6gG,EAAE,KAAKA,EAAE,KAAK95H,GAAE,IAAI,CAAC,GAAG,IAAIvwC,EAAE,MAAM3F,EAAE2F,IAAI6zJ,GAAG/8J,EAAEq1G,MAAM57D,GACzw+BA,IAAG,CAAC,CAACvgD,EAAEtC,OAAOsC,EAAEtC,KAAKy+K,OAAO,IAAItY,EAAE7jK,EAAEtC,KAAKq+K,GAAGlY,GAAG,GAAG,IAAI7jK,EAAEi9K,QAAQoB,GAAG,GAAG,IAAIxa,EAAEwa,GAAG,GAAGxa,IAAI,EAAE,IAAI7jK,EAAEk9K,MAAMniG,EAAE/6E,EAAEk9K,MAAMmB,GAAG,EAAE,IAAIxa,EAAE,EAAEtjH,GAAE,EAAEvgD,EAAEw5E,KAAKkhG,EAAE,KAAKA,EAAE,GAAG,KAAK16K,EAAEi9K,MAAM,CAAC,KAAK18H,GAAE,IAAI,CAAC,GAAG,IAAIvwC,EAAE,MAAM3F,EAAE2F,IAAI6zJ,GAAG/8J,EAAEq1G,MAAM57D,GAAEA,IAAG,CAAC,CAACvgD,EAAE4C,OAAOihK,EAAE7jK,EAAEtC,OAAOsC,EAAEtC,KAAK0+K,UAAUvY,GAAG,IAAI7jK,EAAEi9K,QAAQoB,GAAG,GAAG,IAAIxa,EAAEwa,GAAG,GAAGxa,IAAI,EAAE,IAAI7jK,EAAEk9K,MAAMniG,EAAE/6E,EAAEk9K,MAAMmB,GAAG,EAAE,IAAIxa,EAAE,EAAEtjH,GAAE,CAAC,MAAMvgD,EAAEtC,OAAOsC,EAAEtC,KAAKm+K,MAAM,MAAM77K,EAAEw5E,KAAK8gG,EAAE,KAAKA,EAAE,GAAG,KAAKt6K,EAAEi9K,SAAQv3J,GAAE1lB,EAAE4C,QAASoN,IAAI0V,GAAE1V,GAAG0V,KAAI1lB,EAAEtC,OAAO85K,GAAGx3K,EAAEtC,KAAK0+K,UAAUp8K,EAAE4C,OAAO5C,EAAEtC,KAAKm+K,QAAQ77K,EAAEtC,KAAKm+K,MAAM,IAAIjyK,MAAM5J,EAAEtC,KAAK0+K,YAAY/yK,EAAEmqK,SAASxzK,EAAEtC,KAAKm+K,MAAM/0K,EAAEq1G,EAAEz2F,GAAE8xJ,KAAK,IAAIx3K,EAAEi9K,QAAQj9K,EAAEk9K,MAAMniG,EAAE/6E,EAAEk9K,MAAMp2K,EAAE4e,GAAEy2F,IAAInsG,GAAG0V,GAAEy2F,GAAGz2F,GAAE1lB,EAAE4C,QAAQ8iB,IAAG1lB,EAAE4C,QAAQ,MAAMyH,EAAErK,EAAE4C,OAAO,EAAE5C,EAAEw5E,KAAKmhG,EAAE,KAAKA,EAAE,GAAG,KAAK36K,EAAEi9K,MAAM,CAAC,GAAG,IAAIjtK,EAAE,MAAM3F,EAAEqb,GAAE,EAAE,GAAG8xJ,GAAG1wK,EAAEq1G,EAAEz2F,MAAK1lB,EAAEtC,MAAM85K,IAAIx3K,EAAE4C,OAAO,QAAQ5C,EAAEtC,KAAKkG,MAAM0U,OAAOovI,aAAa8vB,WAAWA,IAAI9xJ,GAAE1V,GAAG,GAAG,IAAIhQ,EAAEi9K,QAAQj9K,EAAEk9K,MAAMniG,EAAE/6E,EAAEk9K,MAAMp2K,EAAE4e,GAAEy2F,IAAInsG,GAAG0V,GAAEy2F,GAAGz2F,GAAE8xJ,GAAG,MAAMntK,CAAC,MAAMrK,EAAEtC,OAAOsC,EAAEtC,KAAKkG,KAAK,MAAM5D,EAAE4C,OAAO,EAAE5C,EAAEw5E,KAAKohG,EAAE,KAAKA,EAAE,GAAG,KAAK56K,EAAEi9K,MAAM,CAAC,GAAG,IAAIjtK,EAAE,MAAM3F,EAAEqb,GAAE,EAAE,GAAG8xJ,GAAG1wK,EAAEq1G,EAAEz2F,MAAK1lB,EAAEtC,MAAM85K,IAAIx3K,EAAE4C,OAAO,QAAQ5C,EAAEtC,KAAK4tH,SAAShzG,OAAOovI,aAAa8vB,WAAWA,IAAI9xJ,GAAE1V,GAAG,GAAG,IAAIhQ,EAAEi9K,QAAQj9K,EAAEk9K,MAAMniG,EAAE/6E,EAAEk9K,MAAMp2K,EAAE4e,GAAEy2F,IAAInsG,GAAG0V,GAAEy2F,GAAGz2F,GAAE8xJ,GAAG,MAAMntK,CAAC,MAAMrK,EAAEtC,OAAOsC,EAAEtC,KAAK4tH,QAAQ,MAAMtrH,EAAEw5E,KAAK+1E,EAAE,KAAKA,EAAE,GAAG,IAAIvvJ,EAAEi9K,MAAM,CAAC,KAAK18H,GAAE,IAAI,CAAC,GAAG,IAAIvwC,EAAE,MAAM3F,EAAE2F,IAAI6zJ,GAAG/8J,EAAEq1G,MAAM57D,GAAEA,IAAG,CAAC,CAAC,GAAGsjH,KAAK,MAAM7jK,EAAEk9K,OAAO,CAAC7yK,EAAE8R,IAAI,sBAAsBnc,EAAEw5E,KAAK0hG,GAAG,KAAK,CAACrX,EAAE,EAAEtjH,GAAE,CAAC,CAACvgD,EAAEtC,OAAOsC,EAAEtC,KAAKk+K,KAAK57K,EAAEi9K,OAAO,EAAE,EAAEj9K,EAAEtC,KAAK89I,MAAK,GAAInxI,EAAEurK,MAAM51K,EAAEk9K,MAAM,EAAEl9K,EAAEw5E,KAAKqhG,EAAE,MAAM,KAAKhD,EAAE,KAAKt3H,GAAE,IAAI,CAAC,GAAG,IAAIvwC,EAAE,MAAM3F,EAAE2F,IAAI6zJ,GAAG/8J,EAAEq1G,MAAM57D,GAAEA,IAAG,CAAC,CAACl2C,EAAEurK,MAAM51K,EAAEk9K,MAAMlvJ,EAAE61I,GAAGA,EAAE,EAAEtjH,GAAE,EAAEvgD,EAAEw5E,KAAKlvC,EAAE,KAAKA,EAAE,GAAG,IAAItqC,EAAEg9K,SAAS,OAAO3yK,EAAE4nK,SAAShuJ,EAAE5Z,EAAEgnK,UAAU3vI,EAAEr3B,EAAEwnK,QAAQ11D,EAAE9xG,EAAEynK,SAAS9hK,EAAEhQ,EAAEy8K,KAAK5Y,EAAE7jK,EAAE08K,KAAKn8H,GAAE5/C,EAAE0J,EAAEurK,MAAM51K,EAAEk9K,MAAM,EAAEl9K,EAAEw5E,KAAKqhG,EAAE,KAAKA,EAAE,GAAGvwK,IAAI+hK,GAAG/hK,IAAI4hK,EAAE,MAAM7hK,EAAE,KAAKkwK,EAAE,GAAGv6K,EAAE6zJ,KAAK,CAACgQ,KAAK,EAAEtjH,GAAEA,IAAG,EAAEA,GAAEvgD,EAAEw5E,KAAKs9F,GAAG,KAAK,CAAC,KAAKv2H,GAAE,GAAG,CAAC,GAAG,IAAIvwC,EAAE,MAAM3F,EAAE2F,IAAI6zJ,GAAG/8J,EAAEq1G,MAAM57D,GAAEA,IAAG,CAAC,CAAC,OAAOvgD,EAAE6zJ,KAAK,EAAEgQ,EAAStjH,IAAG,EAAE,GAAZsjH,KAAK,IAAY,KAAK,EAAE7jK,EAAEw5E,KAAKshG,EAAE,MAAM,KAAK,EAAE,GAAG9pK,EAAEhR,GAAGA,EAAEw5E,KAAKskG,EAAGxzK,IAAI4hK,EAAE,CAACrI,KAAK,EAAEtjH,IAAG,EAAE,MAAMl2C,CAAC,CAAC,MAAM,KAAK,EAAErK,EAAEw5E,KAAKovD,EAAE,MAAM,KAAK,EAAEv+H,EAAE8R,IAAI,qBAAqBnc,EAAEw5E,KAAK0hG,GAAGrX,KAAK,EAAEtjH,IAAG,EAAE,MAAM,KAAKu6H,EAAE,IAAIjX,KAAK,EAAEtjH,GAAEA,IAAG,EAAEA,GAAEA,GAAE,IAAI,CAAC,GAAG,IAAIvwC,EAAE,MAAM3F,EAAE2F,IAAI6zJ,GAAG/8J,EAAEq1G,MAAM57D,GAAEA,IAAG,CAAC,CAAC,IAAI,MAAMsjH,KAAMA,IAAI,GAAG,OAAO,CAACx5J,EAAE8R,IAAI,+BAA+Bnc,EAAEw5E,KAAK0hG,GAAG,KAAK,CAAC,GAAGl7K,EAAE4C,OAAO,MAAMihK,EAAEA,EAAE,EAAEtjH,GAAE,EAAEvgD,EAAEw5E,KAAKygG,EAAE3vK,IAAI4hK,EAAE,MAAM7hK,EAAE,KAAK4vK,EAAEj6K,EAAEw5E,KAAK8+F,EAAE,KAAKA,EAAE,GAAG5yJ,GAAE1lB,EAAE4C,OAAO,CAAC,GAAG8iB,GAAE1V,IAAI0V,GAAE1V,GAAG0V,GAAEgc,IAAIhc,GAAEgc,GAAG,IAAIhc,GAAE,MAAMrb,EAAEhB,EAAEmqK,SAAS/vK,EAAEqD,EAAEq1G,EAAEz2F,GAAEzB,GAAGjU,GAAG0V,GAAEy2F,GAAGz2F,GAAEgc,GAAGhc,GAAEzB,GAAGyB,GAAE1lB,EAAE4C,QAAQ8iB,GAAE,KAAK,CAAC1lB,EAAEw5E,KAAKqhG,EAAE,MAAM,KAAKjyC,EAAE,KAAKroF,GAAE,IAAI,CAAC,GAAG,IAAIvwC,EAAE,MAAM3F,EAAE2F,IAAI6zJ,GAAG/8J,EAAEq1G,MAAM57D,GAAEA,IAAG,CAAC,CAAC,GAAGvgD,EAAEq9K,KAAY,KAAN,GAAGxZ,GAAOA,KAAK,EAAEtjH,IAAG,EAAEvgD,EAAEs9K,MAAa,GAAN,GAAGzZ,GAAKA,KAAK,EAAEtjH,IAAG,EAAEvgD,EAAEo9K,MAAa,GAAN,GAAGvZ,GAAKA,KAAK,EAAEtjH,IAAG,EAAEvgD,EAAEq9K,KAAK,KAAKr9K,EAAEs9K,MAAM,GAAG,CAACjzK,EAAE8R,IAAI,sCAAsCnc,EAAEw5E,KAAK0hG,GAAG,KAAK,CAACl7K,EAAEu9K,KAAK,EAAEv9K,EAAEw5E,KAAKuhG,EAAG,KAAKA,EAAG,KAAK/6K,EAAEu9K,KAAKv9K,EAAEo9K,OAAO,CAAC,KAAK78H,GAAE,GAAG,CAAC,GAAG,IAAIvwC,EAAE,MAAM3F,EAAE2F,IAAI6zJ,GAAG/8J,EAAEq1G,MAAM57D,GAAEA,IAAG,CAAC,CAACvgD,EAAEw9K,KAAKc,GAAGt+K,EAAEu9K,SAAS,EAAE1Z,EAAEA,KAAK,EAAEtjH,IAAG,CAAC,CAAC,KAAKvgD,EAAEu9K,KAAK,IAAIv9K,EAAEw9K,KAAKc,GAAGt+K,EAAEu9K,SAAS,EAAE,GAAGv9K,EAAE28K,QAAQ38K,EAAE09K,OAAO19K,EAAE68K,QAAQ,EAAErB,GAAG,CAACkB,KAAK18K,EAAE68K,SAASpF,GAAGtjG,EAAExqE,EAAE3J,EAAEw9K,KAAK,EAAE,GAAGx9K,EAAE28K,QAAQ,EAAE38K,EAAEy9K,KAAKjC,IAAIx7K,EAAE68K,QAAQrB,GAAGkB,KAAKjF,GAAG,CAACptK,EAAE8R,IAAI,2BAA2Bnc,EAAEw5E,KAAK0hG,GAAG,KAAK,CAACl7K,EAAEu9K,KAAK,EAAEv9K,EAAEw5E,KAAKwhG,EAAG,KAAKA,EAAG,KAAKh7K,EAAEu9K,KAAKv9K,EAAEq9K,KAAKr9K,EAAEs9K,OAAO,CAAC,KAAiDhC,IAA5C8C,GAAGp+K,EAAE28K,QAAQ9Y,GAAG,GAAG7jK,EAAE68K,SAAS,MAAsB,GAAG,IAAI1C,GAAG,MAAMiE,MAAnC/C,GAAG+C,KAAK,KAAoC79H,KAAI,CAAC,GAAG,IAAIvwC,EAAE,MAAM3F,EAAE2F,IAAI6zJ,GAAG/8J,EAAEq1G,MAAM57D,GAAEA,IAAG,CAAC,CAAC,GAAG45H,GAAG,GAAGtW,KAAKwX,GAAG96H,IAAG86H,GAAGr7K,EAAEw9K,KAAKx9K,EAAEu9K,QAAQpD,OAAO,CAAC,GAAG,KAAKA,GAAG,CAAC,IAAIgE,GAAG9C,GAAG,EAAE96H,GAAE49H,IAAI,CAAC,GAAG,IAAInuK,EAAE,MAAM3F,EAAE2F,IAAI6zJ,GAAG/8J,EAAEq1G,MAAM57D,GAAEA,IAAG,CAAC,CAAC,GAAGsjH,KAAKwX,GAAG96H,IAAG86H,GAAG,IAAIr7K,EAAEu9K,KAAK,CAAClzK,EAAE8R,IAAI,4BAA4Bnc,EAAEw5E,KAAK0hG,GAAG,KAAK,CAAC1D,GAAGx3K,EAAEw9K,KAAKx9K,EAAEu9K,KAAK,GAAG73J,GAAE,GAAG,EAAEm+I,GAAGA,KAAK,EAAEtjH,IAAG,CAAC,MAAM,GAAG,KAAK45H,GAAG,CAAC,IAAIgE,GAAG9C,GAAG,EAAE96H,GAAE49H,IAAI,CAAC,GAAG,IAAInuK,EAAE,MAAM3F,EAAE2F,IAAI6zJ,GAAG/8J,EAAEq1G,MAAM57D,GAAEA,IAAG,CAAC,CAASA,IAAG86H,GAAG7D,GAAG,EAAE9xJ,GAAE,GAAG,GAAxBm+I,KAAKwX,KAAwBxX,KAAK,EAAEtjH,IAAG,CAAC,KAAK,CAAC,IAAI49H,GAAG9C,GAAG,EAAE96H,GAAE49H,IAAI,CAAC,GAAG,IAAInuK,EAAE,MAAM3F,EAAE2F,IAAI6zJ,GAAG/8J,EAAEq1G,MAAM57D,GAAEA,IAAG,CAAC,CAASA,IAAG86H,GAAG7D,GAAG,EAAE9xJ,GAAE,IAAI,KAAzBm+I,KAAKwX,KAA2BxX,KAAK,EAAEtjH,IAAG,CAAC,CAAC,GAAGvgD,EAAEu9K,KAAK73J,GAAE1lB,EAAEq9K,KAAKr9K,EAAEs9K,MAAM,CAACjzK,EAAE8R,IAAI,4BAA4Bnc,EAAEw5E,KAAK0hG,GAAG,KAAK,CAAC,KAAKx1J,MAAK1lB,EAAEw9K,KAAKx9K,EAAEu9K,QAAQ/F,EAAE,CAAC,CAAC,GAAGx3K,EAAEw5E,OAAO0hG,GAAG,MAAM,GAAG,IAAIl7K,EAAEw9K,KAAK,KAAK,CAACnzK,EAAE8R,IAAI,uCAAuCnc,EAAEw5E,KAAK0hG,GAAG,KAAK,CAAC,GAAGl7K,EAAE68K,QAAQ,EAAErB,GAAG,CAACkB,KAAK18K,EAAE68K,SAASpF,GAAGtjG,EAAErc,EAAE93D,EAAEw9K,KAAK,EAAEx9K,EAAEq9K,KAAKr9K,EAAE28K,QAAQ,EAAE38K,EAAEy9K,KAAKjC,IAAIx7K,EAAE68K,QAAQrB,GAAGkB,KAAKjF,GAAG,CAACptK,EAAE8R,IAAI,8BAA8Bnc,EAAEw5E,KAAK0hG,GAAG,KAAK,CAAC,GAAGl7K,EAAE88K,SAAS,EAAE98K,EAAE48K,SAAS58K,EAAE29K,QAAQnC,GAAG,CAACkB,KAAK18K,EAAE88K,UAAUrF,GAAGtjG,EAAE83F,EAAEjsK,EAAEw9K,KAAKx9K,EAAEq9K,KAAKr9K,EAAEs9K,MAAMt9K,EAAE48K,SAAS,EAAE58K,EAAEy9K,KAAKjC,IAAIx7K,EAAE88K,SAAStB,GAAGkB,KAAKjF,GAAG,CAACptK,EAAE8R,IAAI,wBAAwBnc,EAAEw5E,KAAK0hG,GAAG,KAAK,CAAC,GAAGl7K,EAAEw5E,KAAKskG,EAAGxzK,IAAI4hK,EAAE,MAAM7hK,EAAE,KAAKyzK,EAAG99K,EAAEw5E,KAAKyhG,EAAG,KAAKA,EAAG,GAAGjrK,GAAG,GAAG0xB,GAAG,IAAI,CAACr3B,EAAE4nK,SAAShuJ,EAAE5Z,EAAEgnK,UAAU3vI,EAAEr3B,EAAEwnK,QAAQ11D,EAAE9xG,EAAEynK,SAAS9hK,EAAEhQ,EAAEy8K,KAAK5Y,EAAE7jK,EAAE08K,KAAKn8H,GAAExwC,EAAE1F,EAAEiV,IAAG2E,EAAE5Z,EAAE4nK,SAASxuK,EAAE4G,EAAE0nK,OAAOrwI,EAAEr3B,EAAEgnK,UAAUl1D,EAAE9xG,EAAEwnK,QAAQ/qK,EAAEuD,EAAEunK,MAAM5hK,EAAE3F,EAAEynK,SAASjO,EAAE7jK,EAAEy8K,KAAKl8H,GAAEvgD,EAAE08K,KAAK18K,EAAEw5E,OAAOqhG,IAAI76K,EAAE49K,MAAM,GAAG,KAAK,CAAC,IAAI59K,EAAE49K,KAAK,EAA8CtC,IAA5C8C,GAAGp+K,EAAE28K,QAAQ9Y,GAAG,GAAG7jK,EAAE68K,SAAS,MAAsB,GAAG,IAAI1C,GAAG,MAAMiE,MAAnC/C,GAAG+C,KAAK,KAAoC79H,KAAI,CAAC,GAAG,IAAIvwC,EAAE,MAAM3F,EAAE2F,IAAI6zJ,GAAG/8J,EAAEq1G,MAAM57D,GAAEA,IAAG,CAAC,CAAC,GAAG+6H,IAAI,IAAK,IAAIA,IAAI,CAAC,IAAIC,GAAGF,GAAGlE,GAAGmE,GAAG3D,GAAGwC,GAAsDmB,IAAnD8C,GAAGp+K,EAAE28K,QAAQhF,KAAK9T,GAAG,GAAG0X,GAAGpE,IAAI,IAAIoE,QAAwB,GAAG,IAAIpB,GAAG,MAAMiE,KAAK7C,IAAxCF,GAAG+C,KAAK,KAAuC79H,KAAI,CAAC,GAAG,IAAIvwC,EAAE,MAAM3F,EAAE2F,IAAI6zJ,GAAG/8J,EAAEq1G,MAAM57D,GAAEA,IAAG,CAAC,CAACsjH,KAAK0X,GAAGh7H,IAAGg7H,GAAGv7K,EAAE49K,MAAMrC,EAAE,CAAC,GAAG1X,KAAKwX,GAAG96H,IAAG86H,GAAGr7K,EAAE49K,MAAMvC,GAAGr7K,EAAE4C,OAAOu3K,GAAG,IAAImB,GAAG,CAACt7K,EAAEw5E,KAAK4/F,GAAG,KAAK,CAAC,GAAG,GAAGkC,GAAG,CAACt7K,EAAE49K,MAAM,EAAE59K,EAAEw5E,KAAKqhG,EAAE,KAAK,CAAC,GAAG,GAAGS,GAAG,CAACjxK,EAAE8R,IAAI,8BAA8Bnc,EAAEw5E,KAAK0hG,GAAG,KAAK,CAACl7K,EAAE67K,MAAM,GAAGP,GAAGt7K,EAAEw5E,KAAK8/F,EAAG,KAAKA,EAAG,GAAGt5K,EAAE67K,MAAM,CAAC,IAAIsC,GAAGn+K,EAAE67K,MAAMt7H,GAAE49H,IAAI,CAAC,GAAG,IAAInuK,EAAE,MAAM3F,EAAE2F,IAAI6zJ,GAAG/8J,EAAEq1G,MAAM57D,GAAEA,IAAG,CAAC,CAACvgD,EAAE4C,QAAQihK,GAAG,GAAG7jK,EAAE67K,OAAO,EAAEhY,KAAK7jK,EAAE67K,MAAMt7H,IAAGvgD,EAAE67K,MAAM77K,EAAE49K,MAAM59K,EAAE67K,KAAK,CAAC77K,EAAE69K,IAAI79K,EAAE4C,OAAO5C,EAAEw5E,KAAKq/F,GAAG,KAAKA,GAAG,KAAmDyC,IAA9C8C,GAAGp+K,EAAE48K,SAAS/Y,GAAG,GAAG7jK,EAAE88K,UAAU,MAAsB,GAAG,IAAI3C,GAAG,MAAMiE,MAAnC/C,GAAG+C,KAAK,KAAoC79H,KAAI,CAAC,GAAG,IAAIvwC,EAAE,MAAM3F,EAAE2F,IAAI6zJ,GAAG/8J,EAAEq1G,MAAM57D,GAAEA,IAAG,CAAC,CAAC,GAAG,IAAK,IAAI+6H,IAAI,CAAC,IAAIC,GAAGF,GAAGlE,GAAGmE,GAAG3D,GAAGwC,GAAuDmB,IAApD8C,GAAGp+K,EAAE48K,SAASjF,KAAK9T,GAAG,GAAG0X,GAAGpE,IAAI,IAAIoE,QAAwB,GAAG,IAAIpB,GAAG,MAAMiE,KAAK7C,IAAxCF,GAAG+C,KAAK,KAAuC79H,KAAI,CAAC,GAAG,IAAIvwC,EAAE,MAAM3F,EAAE2F,IAAI6zJ,GAAG/8J,EAAEq1G,MAAM57D,GAAEA,IAAG,CAAC,CAACsjH,KAAK0X,GAAGh7H,IAAGg7H,GAAGv7K,EAAE49K,MAAMrC,EAAE,CAAC,GAAG1X,KAAKwX,GAAG96H,IAAG86H,GAAGr7K,EAAE49K,MAAMvC,GAAG,GAAGC,GAAG,CAACjxK,EAAE8R,IAAI,wBAAwBnc,EAAEw5E,KAAK0hG,GAAG,KAAK,CAACl7K,EAAEylJ,OAAO00B,GAAGn6K,EAAE67K,MAAM,GAAGP,GAAGt7K,EAAEw5E,KAAKu/F,GAAG,KAAKA,GAAG,GAAG/4K,EAAE67K,MAAM,CAAC,IAAIsC,GAAGn+K,EAAE67K,MAAMt7H,GAAE49H,IAAI,CAAC,GAAG,IAAInuK,EAAE,MAAM3F,EAAE2F,IAAI6zJ,GAAG/8J,EAAEq1G,MAAM57D,GAAEA,IAAG,CAAC,CAACvgD,EAAEylJ,QAAQoe,GAAG,GAAG7jK,EAAE67K,OAAO,EAAEhY,KAAK7jK,EAAE67K,MAAMt7H,IAAGvgD,EAAE67K,MAAM77K,EAAE49K,MAAM59K,EAAE67K,KAAK,CAAC,GAAG77K,EAAEylJ,OAAOzlJ,EAAEq8K,KAAK,CAAChyK,EAAE8R,IAAI,gCAAgCnc,EAAEw5E,KAAK0hG,GAAG,KAAK,CAACl7K,EAAEw5E,KAAKm/F,GAAG,KAAKA,GAAG,GAAG,IAAIj3I,EAAE,MAAMr3B,EAAE,GAAGqb,GAAEpG,GAAEoiB,EAAE1hC,EAAEylJ,OAAO//H,GAAE,CAAC,IAAGA,GAAE1lB,EAAEylJ,OAAO//H,IAAI1lB,EAAEu8K,OAAOv8K,EAAE+8K,KAAK,CAAC1yK,EAAE8R,IAAI,gCAAgCnc,EAAEw5E,KAAK0hG,GAAG,KAAK,CAACx1J,GAAE1lB,EAAEw8K,OAAO92J,IAAG1lB,EAAEw8K,MAAMnwK,GAAErM,EAAEs8K,MAAM52J,IAAGrZ,GAAErM,EAAEw8K,MAAM92J,GAAEA,GAAE1lB,EAAE4C,SAAS8iB,GAAE1lB,EAAE4C,QAAQw4K,GAAGp7K,EAAEoW,MAAM,MAAMglK,GAAG33K,EAAE4I,GAAE4X,EAAEjkB,EAAEylJ,OAAO//H,GAAE1lB,EAAE4C,OAAO8iB,GAAEgc,IAAIhc,GAAEgc,GAAGA,GAAGhc,GAAE1lB,EAAE4C,QAAQ8iB,GAAE,GAAGjiB,EAAEwgB,KAAKm3J,GAAG/uK,cAAaqZ,IAAG,IAAI1lB,EAAE4C,SAAS5C,EAAEw5E,KAAKyhG,GAAI,MAAM,KAAK7B,GAAG,GAAG,IAAI13I,EAAE,MAAMr3B,EAAE5G,EAAEwgB,KAAKjkB,EAAE4C,OAAO8+B,IAAI1hC,EAAEw5E,KAAKyhG,EAAG,MAAM,KAAKnE,GAAG,GAAG92K,EAAE21K,KAAK,CAAC,KAAKp1H,GAAE,IAAI,CAAC,GAAG,IAAIvwC,EAAE,MAAM3F,EAAE2F,IAAI6zJ,GAAG/8J,EAAEq1G,MAAM57D,GAAEA,IAAG,CAAC,CAAC,GAAGjhC,IAAGoiB,EAAEr3B,EAAEkrK,WAAWj2J,GAAEtf,EAAEqnH,OAAO/nG,GAAEA,KAAIjV,EAAEurK,MAAM51K,EAAEk9K,MAAMl9K,EAAEi9K,MAAMliG,EAAE/6E,EAAEk9K,MAAMz5K,EAAE6b,GAAE2E,EAAE3E,IAAGyd,EAAE/8B,EAAEk9K,MAAMz5K,EAAE6b,GAAE2E,EAAE3E,KAAIA,GAAEoiB,GAAG1hC,EAAEi9K,MAAMpZ,EAAE71I,EAAE61I,MAAM7jK,EAAEk9K,MAAM,CAAC7yK,EAAE8R,IAAI,uBAAuBnc,EAAEw5E,KAAK0hG,GAAG,KAAK,CAACrX,EAAE,EAAEtjH,GAAE,CAAC,CAACvgD,EAAEw5E,KAAK+8F,GAAG,KAAKA,GAAG,GAAGv2K,EAAE21K,MAAM31K,EAAEi9K,MAAM,CAAC,KAAK18H,GAAE,IAAI,CAAC,GAAG,IAAIvwC,EAAE,MAAM3F,EAAE2F,IAAI6zJ,GAAG/8J,EAAEq1G,MAAM57D,GAAEA,IAAG,CAAC,CAAC,GAAGsjH,KAAK,WAAW7jK,EAAEqnH,OAAO,CAACh9G,EAAE8R,IAAI,yBAAyBnc,EAAEw5E,KAAK0hG,GAAG,KAAK,CAACrX,EAAE,EAAEtjH,GAAE,CAAC,CAACvgD,EAAEw5E,KAAK48F,GAAG,KAAKA,GAAGqB,GAAGtL,EAAE,MAAM9hK,EAAE,KAAK6wK,GAAGzD,GAAG3B,EAAE,MAAMzrK,EAAE,KAAK6vK,GAAG,OAAO9E,EAAU,QAAQ,OAAOS,EAAE,OAAOxrK,EAAE4nK,SAAShuJ,EAAE5Z,EAAEgnK,UAAU3vI,EAAEr3B,EAAEwnK,QAAQ11D,EAAE9xG,EAAEynK,SAAS9hK,EAAEhQ,EAAEy8K,KAAK5Y,EAAE7jK,EAAE08K,KAAKn8H,IAAGvgD,EAAEs8K,OAAOh9J,KAAIjV,EAAEgnK,WAAWrxK,EAAEw5E,KAAK0hG,KAAKl7K,EAAEw5E,KAAKs9F,IAAIxsK,IAAI8hK,KAAKn7J,EAAE5G,EAAEA,EAAE0nK,OAAO1nK,EAAE4nK,SAAS3yJ,GAAEjV,EAAEgnK,YAAYrxK,EAAEw5E,KAAK0gG,GAAG9E,IAAI5xJ,IAAGnZ,EAAEynK,SAASxyJ,IAAGjV,EAAEgnK,UAAUhnK,EAAE0rK,UAAUvyJ,GAAEnZ,EAAEkrK,WAAWj2J,GAAEtf,EAAEqnH,OAAO/nG,GAAEtf,EAAE21K,MAAMr2J,KAAIjV,EAAEurK,MAAM51K,EAAEk9K,MAAMl9K,EAAEi9K,MAAMliG,EAAE/6E,EAAEk9K,MAAMz5K,EAAE6b,GAAEjV,EAAE4nK,SAAS3yJ,IAAGyd,EAAE/8B,EAAEk9K,MAAMz5K,EAAE6b,GAAEjV,EAAE4nK,SAAS3yJ,KAAIjV,EAAE2vK,UAAUh6K,EAAE08K,MAAM18K,EAAE6zJ,KAAK,GAAG,IAAI7zJ,EAAEw5E,OAAOqhG,EAAE,IAAI,IAAI76K,EAAEw5E,OAAOskG,GAAI99K,EAAEw5E,OAAOygG,EAAE,IAAI,IAAI,IAAIz2J,IAAG,IAAIlE,IAAGhV,IAAI8hK,IAAIqL,KAAK/L,IAAI+L,GAAGP,GAAGO,GAAG,EAAs0Bz3K,EAAEyzK,WAAv0B,SAAWppK,GAAG,IAAIA,IAAIA,EAAEu9C,MAAM,OAAOiuH,EAAE,IAAIvrK,EAAED,EAAEu9C,MAAM,OAAOt9C,EAAE8L,SAAS9L,EAAE8L,OAAO,MAAM/L,EAAEu9C,MAAM,KAAK8jH,CAAC,EAAgvB1rK,EAAE4yK,iBAAjvB,SAAWvoK,EAAEC,GAAG,IAAItK,EAAE,OAAOqK,GAAGA,EAAEu9C,MAAiB,IAAK,GAAf5nD,EAAEqK,EAAEu9C,OAAe+tH,MAAME,GAAG71K,EAAEtC,KAAK4M,EAAEA,EAAEkxI,MAAK,EAAGkwB,GAAImK,CAAC,EAAuqB71K,EAAEkzK,qBAAxqB,SAAW7oK,EAAEC,GAAG,IAAItK,EAAMyD,EAAE6G,EAAE1H,OAAO,OAAOyH,GAAGA,EAAEu9C,MAAiB,KAAV5nD,EAAEqK,EAAEu9C,OAAY+tH,MAAM31K,EAAEw5E,OAAOlvC,EAAEurI,EAAE71K,EAAEw5E,OAAOlvC,GAAUvN,EAAJ,EAAQzyB,EAAE7G,EAAE,KAAOzD,EAAEk9K,MAAOpH,EAAK7kK,EAAE5G,EAAEC,EAAE7G,EAAEA,IAAKzD,EAAEw5E,KAAK0gG,GAAG9E,IAAIp1K,EAAEg9K,SAAS,EAAEtR,GAAImK,CAAC,EAAugB71K,EAAEu+K,YAAY,oCAAoC,EAAE,CAAC,kBAAkB,GAAG,YAAY,GAAG,UAAU,GAAG,YAAY,GAAG,aAAa,KAAK,GAAG,CAAC,SAASl0K,EAAEC,EAAEtK,GAAG,aAAa,IAAIguB,EAAE3jB,EAAE,mBAAmBvD,EAAE,GAA2BkK,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE,GAAGC,EAAE,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI4yJ,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAM,MAAM,MAAM,EAAE,GAAGtjH,EAAE,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIj2C,EAAEnO,QAAQ,SAASkO,EAAEC,EAAEtK,EAAEwjB,EAAElE,EAAEoG,EAAErZ,EAAEhD,GAAG,IAAI0zB,EAAEg+C,EAAEhrE,EAAEokE,EAAExqE,EAAEmuD,EAAEm0G,EAAEG,EAAEC,EAAEH,EAAE7iK,EAAEqzK,KAAKhR,EAAE,EAAES,EAAE,EAAExrK,EAAE,EAAEk1K,EAAE,EAAEC,EAAE,EAAEV,EAAE,EAAE8B,EAAE,EAAEsD,EAAE,EAAEh+K,EAAE,EAAE+6K,EAAE,EAAEkD,EAAE,KAAKJ,EAAE,EAAEK,EAAE,IAAI1sJ,EAAE8lJ,MAAMhtK,IAAKwzK,EAAE,IAAItsJ,EAAE8lJ,MAAMhtK,IAAK6zK,EAAE,KAAKC,EAAE,EAAE,IAAIlP,EAAE,EAAEA,GAAG5kK,EAAE4kK,IAAIgP,EAAEhP,GAAG,EAAE,IAAIS,EAAE,EAAEA,EAAE3oJ,EAAE2oJ,IAAIuO,EAAEpwK,EAAEtK,EAAEmsK,MAAM,IAAI2J,EAAE5J,EAAE2J,EAAE/uK,EAAE+uK,GAAG,GAAG,IAAI6E,EAAE7E,GAAGA,KAAK,GAAGC,EAAED,IAAIC,EAAED,GAAG,IAAIA,EAAE,OAAOv2J,EAAEoG,KAAK,SAASpG,EAAEoG,KAAK,SAASrc,EAAEqzK,KAAK,EAAE,EAAE,IAAI/7K,EAAE,EAAEA,EAAEk1K,GAAG,IAAI6E,EAAE/5K,GAAGA,KAAK,IAAIm1K,EAAEn1K,IAAIm1K,EAAEn1K,GAAG65K,EAAE,EAAE9O,EAAE,EAAEA,GAAG5kK,EAAE4kK,IAAI,GAAG8O,IAAI,GAAEA,GAAGE,EAAEhP,IAAK,EAAE,OAAO,EAAE,GAAG8O,EAAE,IAAp0B,IAAw0BnwK,GAAO,IAAIwrK,GAAG,OAAO,EAAE,IAAIyE,EAAE,GAAG,EAAE5O,EAAE,EAAEA,EAAE5kK,EAAE4kK,IAAI4O,EAAE5O,EAAE,GAAG4O,EAAE5O,GAAGgP,EAAEhP,GAAG,IAAIS,EAAE,EAAEA,EAAE3oJ,EAAE2oJ,IAAI,IAAI7hK,EAAEtK,EAAEmsK,KAAK9/J,EAAEiuK,EAAEhwK,EAAEtK,EAAEmsK,OAAOA,GAAG,GAAt7B,IAAy7B9hK,GAAOowK,EAAEE,EAAEtuK,EAAEyrD,EAAE,IAAp8B,IAAw8BztD,GAAOowK,EAAEzpK,EAAEqpK,GAAG,IAAIM,EAAE1pK,EAAE2pK,GAAG,IAAI9iH,EAAE,MAAM2iH,EAAE5W,EAAE8W,EAAEp6H,EAAEuX,GAAG,GAAGy/G,EAAE,EAAEpL,EAAE,EAAET,EAAE/qK,EAAEgJ,EAAE+b,EAAE0vJ,EAAEU,EAAEoB,EAAE,EAAEnnK,GAAG,EAASokE,GAAP33E,EAAE,GAAGs5K,GAAM,EAAniC,IAAqiCzrK,GAAO7N,EAA5jC,KAAoB,IAA6iC6N,GAAO7N,EAAlkC,IAAskC,OAAO,EAAE,OAAc,CAAKyvK,EAAEP,EAAEwL,EAAE7qK,EAAE8/J,GAAGr0G,GAAGs0G,EAAE,EAAEC,EAAEhgK,EAAE8/J,IAAI9/J,EAAE8/J,GAAGr0G,GAAGs0G,EAAEuO,EAAEC,EAAEvuK,EAAE8/J,IAAIE,EAAEoO,EAAEJ,EAAEhuK,EAAE8/J,MAAMC,EAAE,GAAGC,EAAE,GAAGtvI,EAAE,GAAG2uI,EAAEwL,EAASv2K,EAAPo6E,EAAE,GAAGq6F,EAAM,GAAQ91J,EAAE3V,GAAG4tK,GAAGL,IAAbn8F,GAAGh+C,IAAgBkvI,GAAG,GAAGG,GAAG,GAAGC,EAAE,QAAQ,IAAItxF,GAAG,IAAIh+C,EAAE,GAAG2uI,EAAE,EAAE6L,EAAEx6I,GAAGA,IAAI,EAAE,GAAG,IAAIA,GAAGw6I,GAAGx6I,EAAE,EAAEw6I,GAAGx6I,GAAGw6I,EAAE,EAAEpL,IAAI,KAAMuO,EAAEhP,GAAG,CAAC,GAAGA,IAAImK,EAAE,MAAMnK,EAAEphK,EAAEtK,EAAEqM,EAAE8/J,GAAG,CAAC,GAAGT,EAAEoK,IAAIyB,EAAEpjG,KAAKpkE,EAAE,CAAC,IAAI,IAAImnK,IAAIA,EAAEpB,GAAGnsK,GAAGhJ,EAAQ65K,EAAE,IAARpF,EAAE1J,EAAEwL,GAAS9B,EAAE8B,EAAErB,MAAI2E,GAAGE,EAAEtF,EAAE8B,KAAQ,IAAK9B,IAAIoF,IAAI,EAAE,GAAGh+K,GAAG,GAAG44K,EAAx6C,IAA06C/qK,GAAO7N,EAAj8C,KAAoB,IAAk7C6N,GAAO7N,EAAv8C,IAA28C,OAAO,EAAQ8iB,EAANvP,EAAEwnK,EAAEpjG,GAAO2hG,GAAG,GAAGV,GAAG,GAAGzrK,EAAE+b,EAAE,CAAC,CAAC,CAAC,OAAO,IAAI6xJ,IAAIj4J,EAAE3V,EAAE4tK,GAAG7L,EAAEwL,GAAG,GAAG,IAAI,GAAG,GAAG7tK,EAAEqzK,KAAK5G,EAAE,CAAC,CAAC,EAAE,CAAC,kBAAkB,KAAK,GAAG,CAAC,SAASzrK,EAAEC,EAAEtK,GAAG,aAAasK,EAAEnO,QAAQ,CAAC,EAAE,kBAAkB,EAAE,aAAa,EAAE,GAAG,KAAK,aAAa,KAAK,eAAe,KAAK,aAAa,KAAK,sBAAsB,KAAK,eAAe,KAAK,uBAAuB,EAAE,CAAC,GAAG,GAAG,CAAC,SAASkO,EAAEC,EAAEtK,GAAG,aAAa,SAASguB,EAAE3jB,GAAG,IAAI,IAAIC,EAAED,EAAEzH,SAAS0H,GAAG,GAAGD,EAAEC,GAAG,CAAC,CAAC,SAASxD,EAAEuD,EAAEC,EAAEtK,EAAEguB,EAAElnB,GAAGrK,KAAK+hL,YAAYn0K,EAAE5N,KAAKgiL,WAAWn0K,EAAE7N,KAAKiiL,WAAW1+K,EAAEvD,KAAKikI,MAAM1yG,EAAEvxB,KAAK2xF,WAAWtnF,EAAErK,KAAKkiL,UAAUt0K,GAAGA,EAAEzH,MAAM,CAAC,SAASa,EAAE4G,EAAEC,GAAG7N,KAAKmiL,SAASv0K,EAAE5N,KAAKoiL,SAAS,EAAEpiL,KAAKqiL,UAAUx0K,CAAC,CAAC,SAAS6xG,EAAE9xG,GAAG,OAAOA,EAAE,IAAI+uK,EAAG/uK,GAAG+uK,EAAG,KAAK/uK,IAAI,GAAG,CAAC,SAAS4Z,EAAE5Z,EAAEC,GAAGD,EAAEgrK,YAAYhrK,EAAE0S,WAAW,IAAIzS,EAAED,EAAEgrK,YAAYhrK,EAAE0S,WAAWzS,IAAI,EAAE,GAAG,CAAC,SAAS0F,EAAE3F,EAAEC,EAAEtK,GAAGqK,EAAE0vK,SAASQ,EAAEv6K,GAAGqK,EAAEyvK,QAAQxvK,GAAGD,EAAE0vK,SAAS,MAAM91J,EAAE5Z,EAAEA,EAAEyvK,QAAQzvK,EAAEyvK,OAAOxvK,GAAGiwK,EAAElwK,EAAE0vK,SAAS1vK,EAAE0vK,UAAU/5K,EAAEu6K,IAAIlwK,EAAEyvK,QAAQxvK,GAAGD,EAAE0vK,SAAS,MAAM1vK,EAAE0vK,UAAU/5K,EAAE,CAAC,SAAS0hC,EAAEr3B,EAAEC,EAAEtK,GAAGgQ,EAAE3F,EAAErK,EAAE,EAAEsK,GAAGtK,EAAE,EAAEsK,EAAE,GAAG,CAAC,SAAS0G,EAAE3G,EAAEC,GAAG,IAAItK,EAAE,EAAE,GAAGA,GAAG,EAAEqK,EAAEA,KAAK,EAAErK,IAAI,UAAUsK,EAAE,GAAG,OAAOtK,IAAI,CAAC,CAAo0B,SAASugD,EAAEl2C,EAAEC,EAAEtK,GAAG,IAAIguB,EAAElnB,EAAErD,EAAE,IAAImG,MAAMixK,EAAE,GAAG1+D,EAAE,EAAE,IAAInuF,EAAE,EAAEA,GAAG6sJ,EAAE7sJ,IAAIvqB,EAAEuqB,GAAGmuF,EAAEA,EAAEn8G,EAAEguB,EAAE,IAAI,EAAE,IAAIlnB,EAAE,EAAEA,GAAGwD,EAAExD,IAAI,CAAC,IAAImd,EAAE5Z,EAAE,EAAEvD,EAAE,GAAG,IAAImd,IAAI5Z,EAAE,EAAEvD,GAAGkK,EAAEvN,EAAEwgB,KAAKA,GAAG,CAAC,CAAwiB,SAAS3E,EAAEjV,GAAG,IAAIC,EAAE,IAAIA,EAAE,EAAEA,EAAEswK,EAAEtwK,IAAID,EAAEquK,UAAU,EAAEpuK,GAAG,EAAE,IAAIA,EAAE,EAAEA,EAAEilJ,EAAEjlJ,IAAID,EAAEuuK,UAAU,EAAEtuK,GAAG,EAAE,IAAIA,EAAE,EAAEA,EAAEutK,EAAEvtK,IAAID,EAAEyuK,QAAQ,EAAExuK,GAAG,EAAED,EAAEquK,UAAU,EAAEuB,GAAG,EAAE5vK,EAAEuvK,QAAQvvK,EAAEwvK,WAAW,EAAExvK,EAAEqtK,SAASrtK,EAAE+iJ,QAAQ,CAAC,CAAC,SAAS1nI,EAAErb,GAAGA,EAAE0vK,SAAS,EAAE91J,EAAE5Z,EAAEA,EAAEyvK,QAAQzvK,EAAE0vK,SAAS,IAAI1vK,EAAEgrK,YAAYhrK,EAAE0S,WAAW1S,EAAEyvK,QAAQzvK,EAAEyvK,OAAO,EAAEzvK,EAAE0vK,SAAS,CAAC,CAA4G,SAAS1wK,EAAEgB,EAAEC,EAAEtK,EAAEguB,GAAG,IAAIlnB,EAAE,EAAEwD,EAAE7G,EAAE,EAAEzD,EAAE,OAAOqK,EAAEvD,GAAGuD,EAAE5G,IAAI4G,EAAEvD,KAAKuD,EAAE5G,IAAIuqB,EAAE1jB,IAAI0jB,EAAEhuB,EAAE,CAAC,SAAS+8B,EAAE1yB,EAAEC,EAAEtK,GAAG,IAAI,IAAIguB,EAAE3jB,EAAEgvK,KAAKr5K,GAAG8G,EAAE9G,GAAG,EAAE8G,GAAGuD,EAAEkvK,WAAWzyK,EAAEuD,EAAEkvK,UAAUlwK,EAAEiB,EAAED,EAAEgvK,KAAKvyK,EAAE,GAAGuD,EAAEgvK,KAAKvyK,GAAGuD,EAAE45E,QAAQn9E,KAAKuC,EAAEiB,EAAE0jB,EAAE3jB,EAAEgvK,KAAKvyK,GAAGuD,EAAE45E,SAAS55E,EAAEgvK,KAAKr5K,GAAGqK,EAAEgvK,KAAKvyK,GAAG9G,EAAE8G,EAAEA,IAAI,EAAEuD,EAAEgvK,KAAKr5K,GAAGguB,CAAC,CAAC,SAAS+sD,EAAE1wE,EAAEC,EAAEtK,GAAG,IAAIguB,EAAElnB,EAAErD,EAAEwgB,EAAEjT,EAAE,EAAE,GAAG,IAAI3G,EAAEqtK,SAAS,GAAG1pJ,EAAE3jB,EAAEgrK,YAAYhrK,EAAEsvK,MAAM,EAAE3oK,IAAI,EAAE3G,EAAEgrK,YAAYhrK,EAAEsvK,MAAM,EAAE3oK,EAAE,GAAGlK,EAAEuD,EAAEgrK,YAAYhrK,EAAEovK,MAAMzoK,GAAGA,IAAI,IAAIgd,EAAE0T,EAAEr3B,EAAEvD,EAAEwD,IAAYo3B,EAAEr3B,GAAV5G,EAAEqzK,EAAGhwK,IAAS6zK,EAAE,EAAErwK,GAAW,KAAR2Z,EAAE+2J,EAAGv3K,KAAoBuM,EAAE3F,EAAXvD,GAAGyvK,EAAG9yK,GAASwgB,GAAeyd,EAAEr3B,EAAT5G,EAAE04G,IAANnuF,GAAiBhuB,GAAW,KAARikB,EAAE65J,EAAGr6K,KAAoBuM,EAAE3F,EAAX2jB,GAAGooJ,EAAG3yK,GAASwgB,UAAWjT,EAAE3G,EAAEqtK,UAAUh2I,EAAEr3B,EAAE4vK,EAAE3vK,EAAE,CAAC,SAASyF,EAAE1F,EAAEC,GAAG,IAAItK,EAAEguB,EAAElnB,EAAErD,EAAE6G,EAAEs0K,SAASziE,EAAE7xG,EAAEw0K,UAAUN,YAAYv6J,EAAE3Z,EAAEw0K,UAAUH,UAAU3uK,EAAE1F,EAAEw0K,UAAUp+C,MAAMh/F,GAAG,EAAE,IAAIr3B,EAAEkvK,SAAS,EAAElvK,EAAEmvK,SAASlvI,EAAEtqC,EAAE,EAAEA,EAAEgQ,EAAEhQ,IAAI,IAAIyD,EAAE,EAAEzD,IAAIqK,EAAEgvK,OAAOhvK,EAAEkvK,UAAU73I,EAAE1hC,EAAEqK,EAAE45E,MAAMjkF,GAAG,GAAGyD,EAAE,EAAEzD,EAAE,GAAG,EAAE,KAAKqK,EAAEkvK,SAAS,GAAoC91K,EAAE,GAAnCqD,EAAEuD,EAAEgvK,OAAOhvK,EAAEkvK,UAAU73I,EAAE,IAAIA,EAAE,IAAS,EAAEr3B,EAAE45E,MAAMn9E,GAAG,EAAEuD,EAAEuvK,UAAU31J,IAAI5Z,EAAEwvK,YAAY19D,EAAE,EAAEr1G,EAAE,IAAI,IAAIwD,EAAEu0K,SAASn9I,EAAE1hC,EAAEqK,EAAEkvK,UAAU,EAAEv5K,GAAG,EAAEA,IAAI+8B,EAAE1yB,EAAE5G,EAAEzD,GAAG8G,EAAEkJ,EAAE,GAAGhQ,EAAEqK,EAAEgvK,KAAK,GAAGhvK,EAAEgvK,KAAK,GAAGhvK,EAAEgvK,KAAKhvK,EAAEkvK,YAAYx8I,EAAE1yB,EAAE5G,EAAE,GAAGuqB,EAAE3jB,EAAEgvK,KAAK,GAAGhvK,EAAEgvK,OAAOhvK,EAAEmvK,UAAUx5K,EAAEqK,EAAEgvK,OAAOhvK,EAAEmvK,UAAUxrJ,EAAEvqB,EAAE,EAAEqD,GAAGrD,EAAE,EAAEzD,GAAGyD,EAAE,EAAEuqB,GAAG3jB,EAAE45E,MAAMn9E,IAAIuD,EAAE45E,MAAMjkF,IAAIqK,EAAE45E,MAAMj2D,GAAG3jB,EAAE45E,MAAMjkF,GAAGqK,EAAE45E,MAAMj2D,IAAI,EAAEvqB,EAAE,EAAEzD,EAAE,GAAGyD,EAAE,EAAEuqB,EAAE,GAAGlnB,EAAEuD,EAAEgvK,KAAK,GAAGvyK,IAAIi2B,EAAE1yB,EAAE5G,EAAE,SAAS4G,EAAEkvK,UAAU,GAAGlvK,EAAEgvK,OAAOhvK,EAAEmvK,UAAUnvK,EAAEgvK,KAAK,GAAv9F,SAAWhvK,EAAEC,GAAG,IAAItK,EAAEguB,EAAElnB,EAAErD,EAAE04G,EAAEl4F,EAAEjU,EAAE1F,EAAEs0K,SAASl9I,EAAEp3B,EAAEu0K,SAAS7tK,EAAE1G,EAAEw0K,UAAUN,YAAYvtK,EAAE3G,EAAEw0K,UAAUH,UAAU9a,EAAEv5J,EAAEw0K,UAAUL,WAAWl+H,EAAEj2C,EAAEw0K,UAAUJ,WAAWl7J,EAAElZ,EAAEw0K,UAAU1wF,WAAW9uE,EAAE,EAAE,IAAI7b,EAAE,EAAEA,GAAGo3K,EAAEp3K,IAAI4G,EAAE8uK,SAAS11K,GAAG,EAAE,IAAIuM,EAAE,EAAE3F,EAAEgvK,KAAKhvK,EAAEmvK,UAAU,GAAG,EAAEx5K,EAAEqK,EAAEmvK,SAAS,EAAEx5K,EAAEsqC,EAAEtqC,KAAgByD,EAAEuM,EAAE,EAAEA,EAAE,GAApBge,EAAE3jB,EAAEgvK,KAAKr5K,IAAe,GAAG,GAAG,GAAIwjB,IAAI/f,EAAE+f,EAAElE,KAAKtP,EAAE,EAAEge,EAAE,GAAGvqB,EAAEuqB,EAAE0T,IAAIr3B,EAAE8uK,SAAS11K,KAAK04G,EAAE,EAAEnuF,GAAGuyB,IAAI47D,EAAE0nD,EAAE71I,EAAEuyB,IAAIt8B,EAAEjU,EAAE,EAAEge,GAAG3jB,EAAEuvK,SAAS31J,GAAGxgB,EAAE04G,GAAGlrG,IAAI5G,EAAEwvK,YAAY51J,GAAGjT,EAAE,EAAEgd,EAAE,GAAGmuF,KAAK,GAAG,IAAI78F,EAAE,CAAC,EAAE,CAAC,IAAI7b,EAAE+f,EAAE,EAAE,IAAInZ,EAAE8uK,SAAS11K,IAAIA,IAAI4G,EAAE8uK,SAAS11K,KAAK4G,EAAE8uK,SAAS11K,EAAE,IAAI,EAAE4G,EAAE8uK,SAAS31J,KAAKlE,GAAG,CAAC,OAAOA,EAAE,GAAG,IAAI7b,EAAE+f,EAAE,IAAI/f,EAAEA,IAAI,IAAIuqB,EAAE3jB,EAAE8uK,SAAS11K,GAAG,IAAIuqB,IAAGlnB,EAAEuD,EAAEgvK,OAAOr5K,IAAK0hC,IAAI1xB,EAAE,EAAElJ,EAAE,KAAKrD,IAAI4G,EAAEuvK,UAAUn2K,EAAEuM,EAAE,EAAElJ,EAAE,IAAIkJ,EAAE,EAAElJ,GAAGkJ,EAAE,EAAElJ,EAAE,GAAGrD,GAAGuqB,IAAI,CAAC,CAAkzE61I,CAAEx5J,EAAEC,GAAGi2C,EAAE98C,EAAEi+B,EAAEr3B,EAAE8uK,SAAS,CAAC,SAAShlG,EAAE9pE,EAAEC,EAAEtK,GAAG,IAAIguB,EAAElnB,EAAErD,GAAG,EAAE04G,EAAE7xG,EAAE,GAAG2Z,EAAE,EAAEjU,EAAE,EAAE0xB,EAAE,EAAE,IAAI,IAAIy6E,IAAInsG,EAAE,IAAI0xB,EAAE,GAAGp3B,EAAE,GAAGtK,EAAE,GAAG,GAAG,MAAMguB,EAAE,EAAEA,GAAGhuB,EAAEguB,IAAIlnB,EAAEq1G,EAAEA,EAAE7xG,EAAE,GAAG0jB,EAAE,GAAG,KAAK/J,EAAEjU,GAAGlJ,IAAIq1G,IAAIl4F,EAAEyd,EAAEr3B,EAAEyuK,QAAQ,EAAEhyK,IAAImd,EAAE,IAAInd,GAAGA,IAAIrD,GAAG4G,EAAEyuK,QAAQ,EAAEhyK,KAAKuD,EAAEyuK,QAAQ,EAAER,MAAMr0J,GAAG,GAAG5Z,EAAEyuK,QAAQ,EAAElwC,KAAKv+H,EAAEyuK,QAAQ,EAAEiC,KAAM92J,EAAE,EAAExgB,EAAEqD,EAAE,IAAIq1G,GAAGnsG,EAAE,IAAI0xB,EAAE,GAAG56B,IAAIq1G,GAAGnsG,EAAE,EAAE0xB,EAAE,IAAI1xB,EAAE,EAAE0xB,EAAE,GAAG,CAAC,SAAS/3B,EAAEU,EAAEC,EAAEtK,GAAG,IAAIguB,EAAElnB,EAAErD,GAAG,EAAE04G,EAAE7xG,EAAE,GAAG2Z,EAAE,EAAEjT,EAAE,EAAEC,EAAE,EAAE,IAAI,IAAIkrG,IAAInrG,EAAE,IAAIC,EAAE,GAAG+c,EAAE,EAAEA,GAAGhuB,EAAEguB,IAAI,GAAGlnB,EAAEq1G,EAAEA,EAAE7xG,EAAE,GAAG0jB,EAAE,GAAG,OAAO/J,EAAEjT,GAAGlK,IAAIq1G,GAAG,CAAC,GAAGl4F,EAAEhT,EAAG,GAAGywB,EAAEr3B,EAAEvD,EAAEuD,EAAEyuK,eAAe,KAAM70J,QAAQ,IAAInd,GAAGA,IAAIrD,IAAIi+B,EAAEr3B,EAAEvD,EAAEuD,EAAEyuK,SAAS70J,KAAKyd,EAAEr3B,EAAEiuK,EAAEjuK,EAAEyuK,SAAS9oK,EAAE3F,EAAE4Z,EAAE,EAAE,IAAIA,GAAG,IAAIyd,EAAEr3B,EAAEu+H,EAAEv+H,EAAEyuK,SAAS9oK,EAAE3F,EAAE4Z,EAAE,EAAE,KAAKyd,EAAEr3B,EAAE0wK,EAAG1wK,EAAEyuK,SAAS9oK,EAAE3F,EAAE4Z,EAAE,GAAG,IAAIA,EAAE,EAAExgB,EAAEqD,EAAE,IAAIq1G,GAAGnrG,EAAE,IAAIC,EAAE,GAAGnK,IAAIq1G,GAAGnrG,EAAE,EAAEC,EAAE,IAAID,EAAE,EAAEC,EAAE,EAAE,CAAC,CAAysB,SAASi7J,EAAE7hK,EAAEC,EAAEtK,EAAEguB,GAAGhe,EAAE3F,GAAG7N,GAAG,IAAIwxB,EAAE,EAAE,GAAG,GAAtuF,SAAW3jB,EAAEC,EAAEtK,EAAEguB,GAAGtI,EAAErb,GAAG2jB,IAAI/J,EAAE5Z,EAAErK,GAAGikB,EAAE5Z,GAAGrK,IAAI61K,EAAErC,SAASnpK,EAAEgrK,YAAYhrK,EAAE+L,OAAO9L,EAAEtK,EAAEqK,EAAE0S,SAAS1S,EAAE0S,SAAS/c,CAAC,CAA+nFqM,CAAEhC,EAAEC,EAAEtK,GAAE,EAAG,CAA+sB,IAAI61K,EAAExrK,EAAE,mBAAmByrK,EAAE,EAAEV,EAAE,EAAE8B,EAAE,EAAEsD,EAAE,EAAEh+K,EAAE,EAAE+6K,EAAE,EAAEkD,EAAE,EAAYH,EAAE,GAAGK,EAAE,IAAIC,EAAED,EAAE,EAAEL,EAAE/qB,EAAE,GAAGsoB,EAAE,GAAGvtI,EAAE,EAAEswI,EAAE,EAAEC,EAAE,GAAGN,EAAE,GAAGO,EAAE,EAAEb,EAAE,IAAI3B,EAAE,GAAG1vC,EAAE,GAAGmynvK,MAAM,GAAGgxK,EAAE,IAAI5sJ,EAAE+qJ,GAAI,IAAIJ,EAAG,IAAI/uK,MAAM,EAAE2lJ,GAAGvhI,EAAE2qJ,GAAI,IAAIS,EAAG,IAAIxvK,MAAvE,KAAiFokB,EAAEorJ,GAAI,IAAItC,EAAG,IAAIltK,MAAM8wK,KAAO1sJ,EAAE8oJ,GAAI,IAAIP,EAAG,IAAI3sK,MAAM0wK,GAAGtsJ,EAAEuoJ,GAAI,IAAIH,EAAG,IAAIxsK,MAAM2lJ,GAAGvhI,EAAEooJ,GAAI,IAAI8E,EAAGhB,EAAGiB,GAAGC,IAAG,EAAGp7K,EAAEo6K,SAA78C,SAAW/vK,GAAG+wK,KAAh5G,WAAa,IAAI/wK,EAAEC,EAAEtK,EAAEguB,EAAEvqB,EAAE04G,EAAE,IAAIvyG,MAAMixK,EAAE,GAAG,IAAI76K,EAAE,EAAEguB,EAAE,EAAEA,EAAEssJ,EAAE,EAAEtsJ,IAAI,IAAIuoJ,EAAGvoJ,GAAGhuB,EAAEqK,EAAE,EAAEA,EAAE,GAAG2wK,EAAGhtJ,GAAG3jB,IAAIysK,EAAG92K,KAAKguB,EAAE,IAAI8oJ,EAAG92K,EAAE,GAAGguB,EAAEvqB,EAAE,EAAEuqB,EAAE,EAAEA,EAAE,GAAGA,IAAI,IAAIooJ,EAAGpoJ,GAAGvqB,EAAE4G,EAAE,EAAEA,EAAE,GAAGyzK,EAAG9vJ,GAAG3jB,IAAI+uK,EAAG31K,KAAKuqB,EAAE,IAAIvqB,IAAI,EAAEuqB,EAAEuhI,EAAEvhI,IAAI,IAAIooJ,EAAGpoJ,GAAGvqB,GAAG,EAAE4G,EAAE,EAAEA,EAAE,GAAGyzK,EAAG9vJ,GAAG,EAAE3jB,IAAI+uK,EAAG,IAAI31K,KAAKuqB,EAAE,IAAI1jB,EAAE,EAAEA,GAAGuwK,EAAEvwK,IAAI6xG,EAAE7xG,GAAG,EAAE,IAAID,EAAE,EAAEA,GAAG,KAAK0uK,EAAG,EAAE1uK,EAAE,GAAG,EAAEA,IAAI8xG,EAAE,KAAK,KAAK9xG,GAAG,KAAK0uK,EAAG,EAAE1uK,EAAE,GAAG,EAAEA,IAAI8xG,EAAE,KAAK,KAAK9xG,GAAG,KAAK0uK,EAAG,EAAE1uK,EAAE,GAAG,EAAEA,IAAI8xG,EAAE,KAAK,KAAK9xG,GAAG,KAAK0uK,EAAG,EAAE1uK,EAAE,GAAG,EAAEA,IAAI8xG,EAAE,KAAK,IAAI57D,EAAEw4H,EAAG6B,EAAE,EAAEz+D,GAAG9xG,EAAE,EAAEA,EAAEklJ,EAAEllJ,IAAIsuK,EAAG,EAAEtuK,EAAE,GAAG,EAAEsuK,EAAG,EAAEtuK,GAAG2G,EAAE3G,EAAE,GAAG6wK,EAAG,IAAIp0K,EAAEiyK,EAAGiC,EAAGL,EAAE,EAAEC,EAAEC,GAAGX,EAAG,IAAIpzK,EAAE6xK,EAAGmF,EAAG,EAAEvuB,EAAEsrB,GAAGM,GAAG,IAAIr0K,EAAE,IAAI8C,MAAM,GAAGqxK,EAAG,EAAEpD,EAAEiD,EAAE,CAA+2Ft3J,GAAI43J,IAAG,GAAI/wK,EAAE2uK,OAAO,IAAIv1K,EAAE4G,EAAEquK,UAAUwC,GAAI7wK,EAAE4uK,OAAO,IAAIx1K,EAAE4G,EAAEuuK,UAAUsB,GAAI7vK,EAAE6uK,QAAQ,IAAIz1K,EAAE4G,EAAEyuK,QAAQqC,IAAI9wK,EAAEyvK,OAAO,EAAEzvK,EAAE0vK,SAAS,EAAEz6J,EAAEjV,EAAE,EAAk0CrK,EAAEi8K,iBAAiB/P,EAAElsK,EAAEw1K,gBAAzvC,SAAWnrK,EAAEC,EAAEtK,EAAEguB,GAAG,IAAIlnB,EAAErD,EAAE04G,EAAE,EAAE9xG,EAAEkgK,MAAM,GAAGlgK,EAAE+mK,KAAK4I,YAAYQ,IAAInwK,EAAE+mK,KAAK4I,UAApiB,SAAW3vK,GAAG,IAAIC,EAAEtK,EAAE,WAAW,IAAIsK,EAAE,EAAEA,GAAG,GAAGA,IAAItK,KAAK,EAAE,GAAG,EAAEA,GAAG,IAAIqK,EAAEquK,UAAU,EAAEpuK,GAAG,OAAO8qK,EAAE,GAAG,IAAI/qK,EAAEquK,UAAU,KAAK,IAAIruK,EAAEquK,UAAU,KAAK,IAAIruK,EAAEquK,UAAU,IAAI,OAAOxB,EAAE,IAAI5sK,EAAE,GAAGA,EAAEqwK,EAAErwK,IAAI,GAAG,IAAID,EAAEquK,UAAU,EAAEpuK,GAAG,OAAO4sK,EAAE,OAAO9B,CAAC,CAA0UhJ,CAAE/hK,IAAI0F,EAAE1F,EAAEA,EAAE2uK,QAAQjpK,EAAE1F,EAAEA,EAAE4uK,QAAQ98D,EAA55B,SAAW9xG,GAAG,IAAIC,EAAE,IAAI6pE,EAAE9pE,EAAEA,EAAEquK,UAAUruK,EAAE2uK,OAAO6F,UAAU1qG,EAAE9pE,EAAEA,EAAEuuK,UAAUvuK,EAAE4uK,OAAO4F,UAAU9uK,EAAE1F,EAAEA,EAAE6uK,SAAS5uK,EAAEutK,EAAE,EAAEvtK,GAAG,GAAG,IAAID,EAAEyuK,QAAQ,EAAEQ,EAAGhvK,GAAG,GAAGA,KAAK,OAAOD,EAAEuvK,SAAS,GAAGtvK,EAAE,GAAG,EAAE,EAAE,EAAEA,CAAC,CAAsuBwtD,CAAEztD,GAAGvD,EAAEuD,EAAEuvK,QAAQ,EAAE,IAAI,GAAEn2K,EAAE4G,EAAEwvK,WAAW,EAAE,IAAI,IAAK/yK,IAAIA,EAAErD,IAAIqD,EAAErD,EAAEzD,EAAE,EAAEA,EAAE,GAAG8G,IAAQ,IAALwD,EAAO4hK,EAAE7hK,EAAEC,EAAEtK,EAAEguB,GAAG3jB,EAAE4mK,WAAW6E,GAAGryK,IAAIqD,GAAGkJ,EAAE3F,GAAGktK,GAAG,IAAIvpJ,EAAE,EAAE,GAAG,GAAG+sD,EAAE1wE,EAAE0uK,EAAGJ,KAAM3oK,EAAE3F,GAAGowK,GAAG,IAAIzsJ,EAAE,EAAE,GAAG,GAAj5B,SAAW3jB,EAAEC,EAAEtK,EAAEguB,GAAG,IAAIlnB,EAAE,IAAIkJ,EAAE3F,EAAEC,EAAE,IAAI,GAAG0F,EAAE3F,EAAErK,EAAE,EAAE,GAAGgQ,EAAE3F,EAAE2jB,EAAE,EAAE,GAAGlnB,EAAE,EAAEA,EAAEknB,EAAElnB,IAAIkJ,EAAE3F,EAAEA,EAAEyuK,QAAQ,EAAEQ,EAAGxyK,GAAG,GAAG,GAAG6C,EAAEU,EAAEA,EAAEquK,UAAUpuK,EAAE,GAAGX,EAAEU,EAAEA,EAAEuuK,UAAU54K,EAAE,EAAE,CAAkwBisK,CAAE5hK,EAAEA,EAAE2uK,OAAO6F,SAAS,EAAEx0K,EAAE4uK,OAAO4F,SAAS,EAAE1iE,EAAE,GAAGphC,EAAE1wE,EAAEA,EAAEquK,UAAUruK,EAAEuuK,YAAYt5J,EAAEjV,GAAG2jB,GAAGtI,EAAErb,EAAE,EAA04BrK,EAAEq3K,UAA34B,SAAWhtK,EAAEC,EAAEtK,GAAG,OAAOqK,EAAEgrK,YAAYhrK,EAAEsvK,MAAM,EAAEtvK,EAAEqtK,UAAUptK,IAAI,EAAE,IAAID,EAAEgrK,YAAYhrK,EAAEsvK,MAAM,EAAEtvK,EAAEqtK,SAAS,GAAG,IAAIptK,EAAED,EAAEgrK,YAAYhrK,EAAEovK,MAAMpvK,EAAEqtK,UAAU,IAAI13K,EAAEqK,EAAEqtK,WAAW,IAAIptK,EAAED,EAAEquK,UAAU,EAAE14K,MAAMqK,EAAE+iJ,UAAU9iJ,IAAID,EAAEquK,UAAU,GAAG5B,EAAG92K,GAAG26K,EAAE,MAAMtwK,EAAEuuK,UAAU,EAAEz8D,EAAE7xG,OAAOD,EAAEqtK,WAAWrtK,EAAEqvK,YAAY,CAAC,EAAqnB15K,EAAEg8K,UAAp0C,SAAW3xK,GAAG2F,EAAE3F,EAAEktK,GAAG,EAAE,GAAG71I,EAAEr3B,EAAE4vK,EAAElB,GAAnkJ,SAAW1uK,GAAG,KAAKA,EAAE0vK,UAAU91J,EAAE5Z,EAAEA,EAAEyvK,QAAQzvK,EAAEyvK,OAAO,EAAEzvK,EAAE0vK,SAAS,GAAG1vK,EAAE0vK,UAAU,IAAI1vK,EAAEgrK,YAAYhrK,EAAE0S,WAAW,IAAI1S,EAAEyvK,OAAOzvK,EAAEyvK,SAAS,EAAEzvK,EAAE0vK,UAAU,EAAE,CAA86I9oK,CAAE5G,EAAE,CAAuyC,EAAE,CAAC,kBAAkB,KAAK,GAAG,CAAC,SAASA,EAAEC,EAAEtK,GAAG,aAAsNsK,EAAEnO,QAA3M,WAAaM,KAAKm1K,MAAM,KAAKn1K,KAAKo1K,QAAQ,EAAEp1K,KAAKq1K,SAAS,EAAEr1K,KAAKs5K,SAAS,EAAEt5K,KAAKs1K,OAAO,KAAKt1K,KAAKw1K,SAAS,EAAEx1K,KAAK40K,UAAU,EAAE50K,KAAK84K,UAAU,EAAE94K,KAAK0f,IAAI,GAAG1f,KAAKmrD,MAAM,KAAKnrD,KAAKu9K,UAAU,EAAEv9K,KAAKm5K,MAAM,CAAC,CAAY,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAF31gB,CAEg2gB,qBCbvohB,IAAIhrK,EAAM,CACT,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,MACX,aAAc,MACd,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,QAAS,MACT,WAAY,MACZ,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,gBAAiB,MACjB,aAAc,MACd,gBAAiB,MACjB,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,UAAW,MACX,aAAc,MACd,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,MACX,aAAc,MACd,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,WAAY,MACZ,cAAe,MACf,UAAW,MACX,aAAc,MACd,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,YAAa,MACb,eAAgB,MAChB,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,QAAS,MACT,WAAY,MACZ,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,UAAW,MACX,aAAc,MACd,QAAS,MACT,WAAY,MACZ,OAAQ,MACR,UAAW,MACX,QAAS,MACT,WAAY,MACZ,QAAS,MACT,aAAc,MACd,gBAAiB,MACjB,WAAY,MACZ,UAAW,KACX,aAAc,KACd,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,YAAa,MACb,eAAgB,MAChB,UAAW,KACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,gBAAiB,MACjB,OAAQ,MACR,UAAW,MACX,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,OAIf,SAASm0K,EAAe3kJ,GACvB,IAAI/8B,EAAK2hL,EAAsB5kJ,GAC/B,OAAO6kJ,EAAoB5hL,EAC5B,CACA,SAAS2hL,EAAsB5kJ,GAC9B,IAAI6kJ,EAAoBz7J,EAAE5Y,EAAKwvB,GAAM,CACpC,IAAItzB,EAAI,IAAI/B,MAAM,uBAAyBq1B,EAAM,KAEjD,MADAtzB,EAAEsM,KAAO,mBACHtM,CACP,CACA,OAAO8D,EAAIwvB,EACZ,CACA2kJ,EAAehuK,KAAO,WACrB,OAAOD,OAAOC,KAAKnG,EACpB,EACAm0K,EAAe5yK,QAAU6yK,EACzB9iL,EAAOC,QAAU4iL,EACjBA,EAAe1hL,GAAK,iBC5RpBnB,EAAOC,QAAU,MACV2E,UACD,MAAO,YACV,CAEA1E,YAAYC,EAAKyE,GAMNzE,EAAIK,MAGDL,EAAI4S,OAOD5S,EAAIQ,OAAOJ,KAAKqE,KAV9B,IAcIwgG,EAAM,CACP19F,KAAMnH,KAAKqE,KAEdrE,KAAKU,KAAOV,KAAKqE,IAIjBrE,KAAKwB,OADQ,CAAC,EAIdiC,MAAMg/K,QAAQ59E,EAAKphG,MAAMhD,GAAGwJ,KAAMxG,MAAMi/K,cAC3C,cCpCHjjL,EAAOC,QAAU,MACV2E,UACD,MAAO,aACV,CAEA1E,YAAYC,EAAKyE,GAMNzE,EAAIK,MASZD,KAAKU,KAAOV,KAAKqE,IAIjBrE,KAAKwB,OADQ,CAAC,EAIdiC,MAAMhD,GAAGkiL,WAAWC,YAAcn/K,MAAMC,OACrC,CACGgB,QAAS,SAAUi1G,EAAWp3G,EAAM+f,GACjC,IAAIxU,EAAS,GAEC6rG,EAAU5rF,KAAK,CAAC,IAAM,IAC5B9pB,SAAS4b,IACd,GAAW,MAAPA,EAAJ,CAEA,IAAIhW,EACDgW,EAAIyC,EAAKnX,WAAa0U,EAAIyC,EAAKnX,SAAW,cAGzCtB,GAAQsD,MAAMC,QAAQvD,GACvBiE,GAAUjE,EAAK1D,OAEP,MAAR0D,GACQ,IAARA,GACQ,GAARA,GACQ,SAARA,GACQ,KAARA,IAEAiE,GAAU,EAfU,CAgBvB,IAGHvL,EAAKgsC,UAAYzgC,CACpB,GAEHrK,MAAMhD,GAAGkiL,WAAWE,WAE1B,oBC1DH,IAAIprH,EAAgB,CACjB,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,QAIXh4D,EAAOC,QAAU,MACdC,cAAe,CAEfwxE,eAAevxE,GACZA,EAAI2vE,OAAS3vE,EAAI2vE,QAAU,CAAC,EAE5B9X,EAAcxzD,SAAS24I,IACpB,IAAIz8I,EAAY,IAAIy8I,EAAUh9I,GAC9BA,EAAI2vE,OAAOpvE,EAAUkE,KAAOlE,CAAS,IAIxCP,EAAImC,GAAGwtE,OAAS3vE,EAAI2vE,MACvB,cC9BH9vE,EAAOC,QAAU,MAGV2E,UACD,MAAO,gBACV,CAEA1E,YAAYC,GAMDA,EAAIK,MAGDL,EAAI4S,OAOD5S,EAAIQ,OAAOJ,KAAKqE,KAKrBzE,EAAIQ,OAAO,yBAEpBJ,KAAKU,KAAOV,KAAKqE,IAIjBrE,KAAKwB,OADQ,CAAC,EAIdiC,MAAM8qF,QAAQk8B,OAAOq4D,SAAW,CAC7BpiL,KAAM,QACNM,MAAO,IACPD,OAAQ,IACRyB,QAAS,EACTf,KAAM,CACHf,KAAM,WACNqd,OAAO,EACPpc,YAAY,EACZohE,YAAY,IAIlBt/D,MAAM8qF,QAAQu0F,SAAWr/K,MAAMC,OAC5B,CACGq/K,UAAW,YAEdt/K,MAAM8qF,QAAQntE,KAEpB,cCxDH3hB,EAAOC,QAAU,MAGV2E,UACD,MAAO,UACV,CAEA1E,YAAYC,GAMDA,EAAIK,MAGDL,EAAI4S,OAOD5S,EAAIQ,OAAOJ,KAAKqE,KAV9B,IAcIwgG,EAAM,CACP19F,KAAMnH,KAAKqE,KAEdrE,KAAKU,KAAOV,KAAKqE,IAIjBrE,KAAKwB,OADQ,CAAC,EAIdiC,MAAMg/K,QAAQ59E,EAAKphG,MAAMu/K,YAAav/K,MAAMhD,GAAGwJ,KAClD,cCtCHxK,EAAOC,QAAU,MAGV2E,UACD,MAAO,UACV,CAEA1E,YAAYC,GAMDA,EAAIK,MAGDL,EAAI4S,OAOD5S,EAAIQ,OAAOJ,KAAKqE,KAV9B,IAcIwgG,EAAM,CACP19F,KAAMnH,KAAKqE,KAEdrE,KAAKU,KAAOV,KAAKqE,IAIjBrE,KAAKwB,OADQ,CAAC,EAIdiC,MAAMg/K,QAAQ59E,EAAKphG,MAAMu/K,YAAav/K,MAAMhD,GAAG4yF,KAClD,cCtCH5zF,EAAOC,QAAU,MAGV2E,UACD,MAAO,cACV,CAEA1E,YAAYC,GAoBT,IAAIilG,EAAM,CACP19F,KAAMnH,KAAKqE,KAEdrE,KAAKU,KAAOV,KAAKqE,IAIjBrE,KAAKwB,OADQ,CAAC,EAIdiC,MAAMg/K,QAAQ59E,EAAKphG,MAAMu/K,YAAav/K,MAAMhD,GAAGwiL,SAClD,cCtCHxjL,EAAOC,QAAU,MACV2E,UACD,MAAO,mBACV,CAEA1E,YAAYC,GAMDA,EAAIK,MAGDL,EAAI4S,OAOD5S,EAAIQ,OAAOJ,KAAKqE,KAV9B,IAcIwgG,EAAM,CACP19F,KAAMnH,KAAKqE,IACXub,MAAO,WACJ,OAAO,CACV,GAEH5f,KAAKU,KAAOV,KAAKqE,IAIjBrE,KAAKwB,OADQ,CAAC,EAIdiC,MAAMg/K,QAAQ59E,EAAKphG,MAAMhD,GAAG8lE,SAAU9iE,MAAMw9I,UAC/C,oBCxCH,IAAIrhH,EAAY,EAAQ,OACxBngC,EAAOC,QAAU,cAAoCkgC,EAC9Cv7B,UACD,MAAO,eACV,CAEA1E,YAAYC,GACTE,QAQQF,EAAIK,MAGDL,EAAI4S,OAOD5S,EAAIQ,OAAOJ,KAAKqE,KAX9B,IAeIwgG,EAAM,CACP19F,KAAMnH,KAAKqE,IACXD,SAAU,CACPlD,IAAK,UACLS,YAAY,GAEfuhL,MAAO,SAAUjhL,GACd,IAAIkhL,EAAiBlhL,EAAOkhL,eACvBlhL,EAAOkhL,eACP,CAAC,EACFrnD,EAAW75H,EAAO65H,SAAW75H,EAAO65H,SAAW,CAAC,EAEpD,IAAK,IAAIjyH,KAAQiyH,EACd,GACG3uH,MAAMC,QAAQ0uH,EAASjyH,KACK,iBAArBiyH,EAASjyH,GAAM,GACvB,CACC,IAAIu5K,EAAO,GACXtnD,EAASjyH,GAAM5F,SAASmK,IACjBA,EAAKxN,IAAIwiL,EAAK9+K,KAAK8J,EAAKxN,GAAG,IAElCk7H,EAASjyH,GAAQu5K,CACpB,CAGHC,OAAOC,WAAWtjL,KAAK0N,MAAOy1K,EAAgB,CAM9C,GAAGzuK,MAAK,SAAUxK,GAIfA,EAAKq5K,WAAa,CACf15K,KAAMiyH,IAERqnD,EAAezyH,YAAc,IAAIzsD,SAAS6sD,IAExB,UAAbA,EAAKlvD,MACU,SAAfkvD,EAAKC,QACLD,EAAK1/B,OAELlnB,EAAKyrE,KAAK7kB,EAAK1/B,OAAO,SAAU7vB,GAC7BU,EAAOuhL,UAAWvhL,EAAOuhL,SAAS1yH,EAAK1/B,MAE1C,GACH,GAqBN,GACH,GAEHpxB,KAAKU,KAAOV,KAAKqE,IAIjBrE,KAAKwB,OADQ,CAAC,EAIdiC,MAAMg/K,QAAQ59E,EAAKphG,MAAMhD,GAAGC,KAC/B,cC5GHjB,EAAOC,QAAU,MACV2E,UACD,MAAO,YACV,CAEA1E,YAAYC,GAMDA,EAAIK,MAGDL,EAAI4S,OAOD5S,EAAIQ,OAAOJ,KAAKqE,KAV9B,IAcIwgG,EAAM,CACP19F,KAAMnH,KAAKqE,IAEXD,SAAU,CACPlD,IAAK,iBAIRuiL,UAAW,WACR,IAAIvtK,EAAMlW,KAAK4qG,eAAejoG,MAC9B,OAAIuT,EAAYnC,KAAK0D,MAAMvB,GAEf,EACf,GAEHlW,KAAKU,KAAOV,KAAKqE,IAIjBrE,KAAKwB,OADQ,CAAC,EAIdiC,MAAMg/K,QAAQ59E,EAAKphG,MAAMhD,GAAG4N,KAC/B,cChDH5O,EAAOC,QAAU,MACV2E,UACD,MAAO,cACV,CAEA1E,YAAYC,GAITI,KAAKU,KAAOV,KAAKqE,IAEjB,MAAM44E,EAAOx5E,MAAMw5E,KAGb4nB,EAAM,CACT19F,KAAMnH,KAAKqE,IACXD,SAAU,CACPs/K,eAAgB,SAAUnyJ,GACvB,MAAO,GAAG0rD,EAAKjS,SAAS24G,UAAUpyJ,EAAE0oB,eACjC1oB,EAAEwoB,cAAgB,KAExB,IAIFt2C,MAAMhD,GAAGuqE,SAAS44G,WAAW,GAAGC,cACjCh/E,EAAIg/E,YAAc9hL,GAAG2D,UAClBjC,MAAMhD,GAAGuqE,SAAS44G,WAAW,GAAGC,aAEnCh/E,EAAIg/E,YAAY,GAAKxvK,OAAOge,OAAOwyE,EAAIg/E,YAAY,GAAI,CACpDC,UAAW9jL,KAAK+jL,gBAEnBl/E,EAAIg/E,YAAY,GAAKxvK,OAAOge,OAAOwyE,EAAIg/E,YAAY,GAAI,CACpDC,UAAW9jL,KAAKgkL,mBAChBC,YAAajkL,KAAKkkL,gBAClBC,YAAankL,KAAKokL,YAIpB3gL,MAAMhD,GAAGuqE,SAAS44G,WAAW,GAAGS,KACjCx/E,EAAIw/E,GAAKtiL,GAAG2D,UAAUjC,MAAMhD,GAAGuqE,SAAS44G,WAAW,GAAGS,IACtDx/E,EAAIw/E,GAAG,GAAKhwK,OAAOge,OAAOwyE,EAAIw/E,GAAG,GAAI,CAClCC,GAAItkL,KAAK+jL,gBAEZl/E,EAAIw/E,GAAG,GAAKhwK,OAAOge,OAAOwyE,EAAIw/E,GAAG,GAAI,CAClCC,GAAItkL,KAAKgkL,mBACTO,GAAIvkL,KAAKkkL,gBACTM,GAAIxkL,KAAKokL,YAKf3gL,MAAMg/K,QAAQ59E,EAAKphG,MAAMhD,GAAGuqE,UAE5BvnE,MAAM8qF,QAAQk8B,OAAOg6D,SAAW,CAC7B/jL,KAAM,QACNM,MAAO,IACPD,OAAQ,IACRyB,QAAS,EACTf,KAAM,CACHf,KAAMV,KAAKqE,IACX0Z,OAAO,EACPpc,YAAY,EACZohE,YAAY,IAIlBt/D,MAAM8qF,QAAQk8B,OAAOi6D,aAAe,CACjChkL,KAAM,QACNM,MAAO,IACPD,OAAQ,IACRyB,QAAS,EACTf,KAAM,CACHf,KAAMV,KAAKqE,IACX0Z,OAAO,EACPpc,YAAY,EACZohE,YAAY,IAIlBt/D,MAAM8qF,QAAQk2F,SAAWhhL,MAAMC,OAC5B,CACGq/K,UAAW,YAEdt/K,MAAM8qF,QAAQntE,MAGjB3d,MAAM8qF,QAAQm2F,aAAejhL,MAAMC,OAChC,CACGq/K,UAAW,gBAEdt/K,MAAM8qF,QAAQntE,KAEpB,CAEA2iK,cAAc3iK,GACX,OAAOA,EAAK24B,cAAgB,GAC/B,CAEAiqI,mBAAmB5iK,EAAM4pD,GACtB,IAAIx3C,EAAQpS,EAAK24B,cAAgB,IAEjC,OADAixB,EAAS25G,iBAAmBnxJ,EAAQA,EAASA,EAAQ,GAAM,EACpDA,EAAQ,OAASA,EAAQ,GAAK,EACxC,CAEA0wJ,gBAAgB3wK,EAAGy3D,GAChB,OAAOA,EAAS25G,iBAAmBpxK,CACtC,CAEA6wK,SAASh4J,EAAM7Y,EAAGy3D,GACf5+C,EAAKgzG,YAAYp0D,EAAS25G,iBAAmB,IAAMpxK,EACtD,cC/GH9T,EAAOC,QAAU,MAGV2E,UACD,MAAO,YACV,CAEA1E,YAAYC,GAMDA,EAAIK,MAGDL,EAAI4S,OAOD5S,EAAIQ,OAAOJ,KAAKqE,KAKrBzE,EAAIQ,OAAO,qBAEpBJ,KAAKU,KAAOV,KAAKqE,IAIjBrE,KAAKwB,OADQ,CAAC,EAIdiC,MAAM8qF,QAAQk8B,OAAO40D,KAAO,CACzB3+K,KAAM,QACNe,KAAM,CACHf,KAAM,WACNM,MAAO,IACPD,OAAQ,IACRa,KAAM,SAIZ6B,MAAM8qF,QAAQ8wF,KAAO57K,MAAMC,OACxB,CACGq/K,UAAW,QAEdt/K,MAAM8qF,QAAQntE,KAEpB,cCrDH3hB,EAAOC,QAAU,MACV2E,UACD,MAAO,aACV,CAEA1E,YAAYC,EAAKyE,GAMNzE,EAAIK,MASZD,KAAKU,KAAOV,KAAKqE,IAIjBrE,KAAKwB,OADQ,CAAC,EAIdiC,MAAMhD,GAAGkiL,WAAW34G,YAAcvmE,MAAMC,OACrC,CACGgB,QAAS,SAAUi1G,EAAWp3G,EAAM+f,GACjC,IAAIxU,EAAS,EAEb6rG,EAAUirE,SAAQ,SAAU/kK,GACzB,IAAI8O,EAASgrF,EAAUjsF,QAAQ7N,GAE3BhW,EAAOyY,EAAK1c,MAAMqb,OAAO0N,GAGzB9kB,IACDiE,GAAUgtC,WAAWjxC,GAE3B,IAEAtH,EAAKgsC,UAAYzgC,CACpB,GAEHrK,MAAMhD,GAAGkiL,WAAWE,WAE1B,cChDHpjL,EAAOC,QAAU,MAGV2E,UACD,MAAO,aACV,CAEA1E,YAAYC,GAMDA,EAAIK,MAGDL,EAAI4S,OAOD5S,EAAIQ,OAAOJ,KAAKqE,KAV9B,IAcIwgG,EAAM,CACP19F,KAAMnH,KAAKqE,IACXD,SAAU,CACPxC,KAAM,OACNZ,MAAO,EACPS,KAAM,CACHE,YAAY,EACZ6+F,QAAQ,EACRj6B,SAAU,SAASvuD,EAAK41B,GACrB,MACG,UACC51B,EAAI6sK,OAAS,MAAQ7sK,EAAIrV,MAAQ,OAASqV,EAAIrV,OAC/C,SAEN,EACAuhF,MAAO,WACJlkF,KAAKizF,SACR,EACA7wF,GAAI,CACDo5G,cAAe,SAAS56G,EAAIyJ,GACrBrK,KAAK0tB,QAAQ9sB,GAAIikL,SAClB7kL,KAAKyL,gBAAgBszH,eAAe,IACpC/+H,KAAK4E,KACFjB,GAAG3D,KAAKyL,gBAAgBxJ,OAAO6iL,QAAQl6E,gBAGhD,MAKZ5qG,KAAKU,KAAOV,KAAKqE,IAIjBrE,KAAKwB,OADQ,CAAC,EAIdiC,MAAMg/K,QAAQ59E,EAAKphG,MAAMhD,GAAGw/E,QAC/B","sources":["webpack://ab_platform_web/./ABDesigner/ab_work_object_workspace_popupNewDataField.js","webpack://ab_platform_web/./ABDesigner/ab_work_object_workspace_popupSortFields.js","webpack://ab_platform_web/./resources/Account.js","webpack://ab_platform_web/./AppBuilder/_factory_utils/Dialog.js","webpack://ab_platform_web/./resources/Multilingual.js","webpack://ab_platform_web/./resources/NetworkRest.js","webpack://ab_platform_web/./resources/NetworkRestSocket.js","webpack://ab_platform_web/./resources/Network.js","webpack://ab_platform_web/./resources/StorageLocal.js","webpack://ab_platform_web/./resources/Storage.js","webpack://ab_platform_web/./resources/Tenant.js","webpack://ab_platform_web/./AppBuilder/uiSettings/configDesktop.js","webpack://ab_platform_web/./AppBuilder/uiSettings/configMobile.js","webpack://ab_platform_web/./AppBuilder/uiSettings/config.js","webpack://ab_platform_web/./AppBuilder/uiSettings/icons.js","webpack://ab_platform_web/./AppBuilder/ABFactory.js","webpack://ab_platform_web/./AppBuilder/core/ABApplicationCore.js","webpack://ab_platform_web/./AppBuilder/core/ABDataCollectionCore.js","webpack://ab_platform_web/./AppBuilder/core/ABDefinitionCore.js","webpack://ab_platform_web/./AppBuilder/core/ABFactoryCore.js","webpack://ab_platform_web/./AppBuilder/core/ABFieldManager.js","webpack://ab_platform_web/./AppBuilder/core/ABHintCore.js","webpack://ab_platform_web/./AppBuilder/core/ABIndexCore.js","webpack://ab_platform_web/./AppBuilder/core/ABMLClassCore.js","webpack://ab_platform_web/./AppBuilder/core/ABModelCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectQueryCore.js","webpack://ab_platform_web/./AppBuilder/core/ABProcessCore.js","webpack://ab_platform_web/./AppBuilder/core/ABStepCore.js","webpack://ab_platform_web/./AppBuilder/core/ABViewManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/FilterComplexCore.js","webpack://ab_platform_web/./AppBuilder/core/RowFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldAutoIndexCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldBooleanCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCalculateCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCombineCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldDateCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldDateTimeCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldFileCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldImageCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldJsonCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldListCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldLongTextCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldStringCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldTextFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldUserCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessLaneCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessParticipantCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessTaskManager.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessElementCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessEndCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessGatewayExclusiveCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingBatchProcessingCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingFPCloseCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingFPYearCloseCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingJEArchiveCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceCalculateCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceGetResetPasswordUrlCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceInsertRecordCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceQueryCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskSubProcessCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserApprovalCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserExternalCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerLifecycleCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerTimerCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLFindCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRootObjectCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRow.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowPluckCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowSaveCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowUpdateCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSet.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetFirstCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetPluckCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetSaveCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCSVExporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCSVImporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCarouselCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartAreaCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartBarCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartLineCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartPieCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCommentCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewConditionalContainerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewConnectDataFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewContainerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDataFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDataviewCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailImageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailItemCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailTextCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDocxBuilderCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormButtonCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormDatepickerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormItemCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormJsonCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormReadonlyCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormSelectMultipleCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormSelectSingleCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormTextboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewGanttCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewGridCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewImageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewKanbanCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewLabelCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewLayoutCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewListCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewMenuCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPDFImporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPivotCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewReportsManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewSchedulerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewTabCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewTextCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewWidgetCore.js","webpack://ab_platform_web/./AppBuilder/platform/ABApplication.js","webpack://ab_platform_web/./AppBuilder/platform/ABComponent.js","webpack://ab_platform_web/./AppBuilder/platform/ABDataCollection.js","webpack://ab_platform_web/./AppBuilder/platform/ABDefinition.js","webpack://ab_platform_web/./AppBuilder/platform/ABEmitter.js","webpack://ab_platform_web/./AppBuilder/platform/ABHint.js","webpack://ab_platform_web/./AppBuilder/platform/ABIndex.js","webpack://ab_platform_web/./AppBuilder/platform/ABMLClass.js","webpack://ab_platform_web/./AppBuilder/platform/ABModel.js","webpack://ab_platform_web/./AppBuilder/platform/ABModelQuery.js","webpack://ab_platform_web/./AppBuilder/platform/ABObject.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectExternal.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectImport.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectQuery.js","webpack://ab_platform_web/./AppBuilder/platform/ABProcess.js","webpack://ab_platform_web/./AppBuilder/platform/ABStep.js","webpack://ab_platform_web/./AppBuilder/platform/ABViewManager.js","webpack://ab_platform_web/./AppBuilder/platform/CSVImporter.js","webpack://ab_platform_web/./AppBuilder/platform/FilterComplex.js","webpack://ab_platform_web/./AppBuilder/platform/RowFilter.js","webpack://ab_platform_web/./AppBuilder/platform/RowUpdater.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABField.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldAutoIndex.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldBoolean.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldCalculate.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldCombine.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldConnect.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldDate.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldDateTime.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldEmail.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldFile.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldFormula.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldImage.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldJson.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldList.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldLongText.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldNumber.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldSelectivity.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldString.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldTextFormula.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldTree.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldUser.js","webpack://ab_platform_web/./AppBuilder/platform/process/ABProcessLane.js","webpack://ab_platform_web/./AppBuilder/platform/process/ABProcessParticipant.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessElement.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessEnd.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessGatewayExclusive.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskEmail.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskService.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingBatchProcessing.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingFPClose.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingFPYearClose.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingJEArchive.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceCalculate.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceGetResetPasswordUrl.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceInsertRecord.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceQuery.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskSubProcess.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUser.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUserApproval.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUserExternal.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTrigger.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTriggerLifecycle.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTriggerTimer.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQL.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLFind.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLManager.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRootObject.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowPluck.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowSave.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowUpdate.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetFirst.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetPluck.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetSave.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABView.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCSVExporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCSVImporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCarouselComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCarousel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChart.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartArea.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartBar.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartLine.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartPie.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewComment.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewConditionalContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewConnectDataFilterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewConnectDataFilter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDataFilterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDataFilter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDataview.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetail.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailConnect.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailCustom.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailImage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailItem.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailText.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailTree.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDocxBuilder.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewForm.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormButton.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormConnect.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormCustom.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormDatepicker.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormItem.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormJson.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormNumber.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormReadonly.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormSelectMultiple.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormSelectSingle.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormTextbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormTree.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewGanttComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGantt.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupExport.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupMassUpdate.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewGridComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGrid.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupSortFields.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewImage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewKanban.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewKanbanFormSidePanel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewLabel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewLayout.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewList.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewMenu.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPDFImporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPivot.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewReportsManager.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewScheduler.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewTab.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewText.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewWidget.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCSVExporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCSVImporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartAreaComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartBarComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartLineComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartPieComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCommentComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewConditionalContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDataviewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailCheckboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailConnectComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailCustomComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailImageComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailItemComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailTextComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailTreeComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDocxBuilderComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormButtonComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormCheckboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormConnectComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormCustomComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormDatepickerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormItemComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormJsonComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormNumberComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormReadonlyComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormSelectMultipleComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormSelectSingleComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormTextboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormTreeComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewImageComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewKanbanComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewLabelComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewLayoutComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewListComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewMenuComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewPDFImporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewPivotComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewReportsManagerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewSchedulerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewTabComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewTextComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewProperty.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyAddPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyEditPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyFilterData.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyLinkPage.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceView.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceViewCollection.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceViewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceViewGantt.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceViewGrid.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceViewKanban.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewQueryBuilderObjectFieldConditions.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRule.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleAction.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleList.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleListFormRecordRules.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleListFormSubmitRules.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleInsertConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleRemoveConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleUpdate.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleUpdateConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleClosePopup.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleConfirmMessage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleEmail.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleExistPage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleParentPage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleWebsite.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionObjectUpdater.js","webpack://ab_platform_web/./js/docxtemplater-image-module.v3.0.2.min.js","webpack://ab_platform_web/./js/docxtemplater.v3.0.12.min.js","webpack://ab_platform_web/./js/jszip.min.js","webpack://ab_platform_web/./node_modules/moment/locale/ sync ^\\.\\/.*$","webpack://ab_platform_web/./webix_custom_components/activelist.js","webpack://ab_platform_web/./webix_custom_components/countfooter.js","webpack://ab_platform_web/./webix_custom_components/customComponentManager.js","webpack://ab_platform_web/./webix_custom_components/datetimepicker.js","webpack://ab_platform_web/./webix_custom_components/editlist.js","webpack://ab_platform_web/./webix_custom_components/edittree.js","webpack://ab_platform_web/./webix_custom_components/editunitlist.js","webpack://ab_platform_web/./webix_custom_components/focusableTemplate.js","webpack://ab_platform_web/./webix_custom_components/formioPreview.js","webpack://ab_platform_web/./webix_custom_components/numbertext.js","webpack://ab_platform_web/./webix_custom_components/thaicalendar.js","webpack://ab_platform_web/./webix_custom_components/timepicker.js","webpack://ab_platform_web/./webix_custom_components/totalfooter.js","webpack://ab_platform_web/./webix_custom_components/treesuggest.js"],"sourcesContent":["/*\n * ab_work_object_workspace_popupNewDataField\n *\n * Manage the Add New Data Field popup.\n *\n */\n\nconst ABComponent = require(\"../AppBuilder/platform/ABComponent\");\nconst ABFieldManager = require(\"../AppBuilder/core/ABFieldManager\");\n\nmodule.exports = class AB_Work_Object_Workspace_PopupNewDataField extends (\n   ABComponent\n) {\n   //.extend(idBase, function(App) {\n\n   constructor(App, idBase) {\n      idBase = idBase || \"ab_work_object_workspace_popupNewDataField\";\n\n      super(App, idBase);\n      var L = this.Label();\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: this.unique(`${idBase}_popNewField`),\n         types: this.unique(`${idBase}_popNewField_types`),\n         editDefinitions: this.unique(`${idBase}_popNewField_editDefinitions`),\n\n         buttonSave: this.unique(`${idBase}_popNewField_buttonSave`),\n         buttonCancel: this.unique(`${idBase}_popNewField_buttonCancel`),\n      };\n\n      // Our webix UI definition:\n      this.ui = {\n         view: \"window\",\n         position: \"center\",\n         id: ids.component,\n         resize: true,\n         modal: true,\n         height: 500,\n         width: 700,\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {\n                  view: \"label\",\n                  label: L(\"Add new field\"),\n                  css: \"modal_title\",\n                  align: \"center\",\n               },\n               {\n                  view: \"button\",\n                  label: L(\"Close\"),\n                  autowidth: true,\n                  align: \"center\",\n                  click: function () {\n                     _logic.buttonCancel();\n                  },\n               },\n            ],\n         },\n         // ready: function () {\n         //  console.error('ready() called!!!')\n         //  _logic.resetState();\n         // },\n\n         body: {\n            view: \"scrollview\",\n            scroll: \"y\",\n            css: \"ab-add-fields-popup\",\n            borderless: true,\n            body: {\n               type: \"form\",\n               rows: [\n                  {\n                     view: \"richselect\",\n                     id: ids.types,\n                     label: L(\"Field type\"),\n                     labelWidth: this.AB.UISettings.config().labelWidthLarge,\n                     options: [\n                        //We will add these later\n                        { id: \"temporary\", view: \"temporary\" },\n                     ],\n                     on: {\n                        onChange: function (id, ev, node) {\n                           _logic.onChange(id);\n                        },\n                     },\n                  },\n                  {\n                     height: 10,\n                     type: \"line\",\n                  },\n                  {\n                     view: \"multiview\",\n                     id: ids.editDefinitions,\n                     padding: 0,\n                     // NOTE: can't leave this an empty []. We redefine this value later.\n                     cells: [\n                        {\n                           id: \"del_me\",\n                           view: \"label\",\n                           label: L(\"edit definition here\"),\n                        },\n                     ],\n                  },\n                  { height: 10 },\n                  {\n                     cols: [\n                        { fillspace: true },\n                        {\n                           view: \"button\",\n                           value: L(\"Cancel\"),\n                           css: \"ab-cancel-button\",\n                           autowidth: true,\n                           click: function () {\n                              _logic.buttonCancel();\n                           },\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           id: ids.buttonSave,\n                           label: L(\"Add Column\"),\n                           autowidth: true,\n                           type: \"form\",\n                           click: function () {\n                              _logic.buttonSave();\n                           },\n                        },\n                     ],\n                  },\n               ],\n            },\n         },\n         on: {\n            //onBeforeShow: function () {\n            //  _logic.resetState();\n            //},\n            onHide: function () {\n               _logic.resetState();\n            },\n         },\n      };\n\n      var _objectHash = {}; // 'name' => ABFieldXXX object\n      var _componentHash = {}; // 'name' => ABFieldXXX ui component\n      var _componentsByType = {}; // 'type' => ABFieldXXX ui component\n      var _currentEditor = null;\n      var _currentApplication = null;\n      var _currentObject = null;\n\n      var defaultEditorComponent = null; // the default editor.\n      var defaultEditorID = null; // the default editor id.\n      var submenus = []; // Create the submenus for our Data Fields:\n\n      var _editField = null; // field instance being edited\n\n      // Our init() function for setting up our UI\n      this.init = (options) => {\n         // register our callbacks:\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         // initialize our components\n         webix.ui(this.ui);\n         webix.extend($$(ids.component), webix.ProgressBar);\n\n         var Fields = ABFieldManager.allFields();\n\n         //// we need to load a submenu entry and an editor definition for each\n         //// of our Fields\n\n         var newEditorList = {\n            view: \"multiview\",\n            id: ids.editDefinitions,\n            animate: false,\n            rows: [],\n         };\n\n         Fields.forEach(function (F) {\n            var menuName = F.defaults().menuName;\n            var key = F.defaults().key;\n\n            // add a submenu for the fields multilingual key\n            submenus.push({ id: menuName, value: menuName });\n\n            // Add the Field's definition editor here:\n            var editorComponent = F.propertiesComponent(App, idBase);\n            if (!defaultEditorComponent) {\n               defaultEditorComponent = editorComponent;\n               defaultEditorID = menuName;\n            }\n            newEditorList.rows.push(editorComponent.ui);\n\n            _objectHash[menuName] = F;\n            _componentHash[menuName] = editorComponent;\n            _componentsByType[key] = editorComponent;\n         });\n\n         // the submenu button has a placeholder we need to remove and update\n         // with one that has all our submenus in it.\n         // var firstID = $$(ids.types).getFirstId();\n         // $$(ids.types).updateItem(firstID, {\n         //  value: labels.component.chooseType,\n         //  submenu: submenus\n         // })\n         $$(ids.types).define(\"options\", submenus);\n         $$(ids.types).refresh();\n\n         // now remove the 'del_me' definition editor placeholder.\n         webix.ui(newEditorList, $$(ids.editDefinitions));\n\n         // init & hide all the unused editors:\n         for (let c in _componentHash) {\n            _componentHash[c].init();\n\n            _componentHash[c].hide();\n         }\n\n         defaultEditorComponent.show(); // show the default editor\n         _currentEditor = defaultEditorComponent;\n\n         // set the richselect to the first option by default.\n         $$(ids.types).setValue(submenus[0].id);\n\n         // $$(ids.editDefinitions).show();\n\n         // $$(ids.editDefinitions).cells() // define the edit Definitions here.\n      };\n\n      // our internal business logic\n      var _logic = (this._logic = {\n         applicationLoad: (application) => {\n            _currentApplication = application;\n\n            // TODO : should load ABApplication to data field popup here ?\n            for (var menuName in _componentHash) {\n               if (\n                  _componentHash[menuName] &&\n                  _componentHash[menuName]._logic.applicationLoad\n               ) {\n                  _componentHash[menuName]._logic.applicationLoad(application);\n               }\n            }\n         },\n\n         objectLoad: (object) => {\n            _currentObject = object;\n\n            // TODO : should load current object to data field popup here ?\n            for (var menuName in _componentHash) {\n               if (\n                  _componentHash[menuName] &&\n                  _componentHash[menuName]._logic.objectLoad\n               ) {\n                  _componentHash[menuName]._logic.objectLoad(_currentObject);\n               }\n            }\n         },\n\n         buttonCancel: function () {\n            _logic.resetState();\n\n            // clear all editors:\n            for (var c in _componentHash) {\n               _componentHash[c].clear();\n            }\n\n            // hide this popup.\n            $$(ids.component).hide();\n         },\n\n         buttonSave: async function () {\n            $$(ids.buttonSave).disable();\n            // show progress\n            $$(ids.component).showProgress();\n\n            var editor = _currentEditor;\n            if (editor) {\n               // the editor can define some basic form validations.\n               if (editor.isValid()) {\n                  var vals = this.AB.cloneDeep(editor.values());\n\n                  var field = null;\n                  var oldData = null;\n\n                  var linkCol;\n\n                  // if this is an ADD operation, (_editField will be undefined)\n                  if (!_editField) {\n                     // get a new instance of a field:\n                     field = _currentObject.fieldNew(vals);\n\n                     // Provide a default width based on the column label\n                     var width = 20 + field.label.length * 10;\n                     if (field.settings.showIcon) {\n                        width = width + 20;\n                     }\n                     if (width < 100) {\n                        width = 100;\n                     }\n\n                     field.settings.width = width;\n\n                     // TODO workaround : where should I add a new link field to link object\n                     if (field.key == \"connectObject\") {\n                        let rand = Math.floor(Math.random() * 1000);\n                        field.settings.isSource = 1;\n\n                        var linkObject = field.datasourceLink;\n\n                        // 1:1, 1:M, M:1 should have same column name\n                        let linkColumnName = field.columnName;\n\n                        // check duplicate column\n                        if (\n                           linkObject.fields(\n                              (f) => f.columnName == linkColumnName\n                           ).length\n                        ) {\n                           linkColumnName = `${linkColumnName}${rand}`;\n                        }\n\n                        // M:N should have different column name into the join table\n                        if (\n                           field.settings.linkType == \"many\" &&\n                           field.settings.linkViaType == \"many\"\n                        ) {\n                           // NOTE : include random number to prevent duplicate column names\n                           linkColumnName = `${_currentObject.name}${rand}`;\n                        }\n\n                        linkCol = linkObject.fieldNew({\n                           // id: OP.Util.uuid(),\n\n                           key: field.key,\n\n                           columnName: linkColumnName,\n                           label: _currentObject.label,\n\n                           settings: {\n                              showIcon: field.settings.showIcon,\n\n                              linkObject: field.object.id,\n                              linkType: field.settings.linkViaType,\n                              linkViaType: field.settings.linkType,\n                              isCustomFK: field.settings.isCustomFK,\n                              indexField: field.settings.indexField,\n                              indexField2: field.settings.indexField2,\n                              isSource: 0,\n                              width: width,\n                           },\n                        });\n\n                        // Update link column id to source column\n                        // field.settings.linkColumn = linkCol.id;\n                     }\n                  } else {\n                     // NOTE: update label before .toObj for .unTranslate to .translations\n                     if (vals.label) _editField.label = vals.label;\n\n                     // use our _editField, backup our oldData\n                     oldData = _editField.toObj();\n\n                     // update changed values to old data\n                     var updateValues = this.AB.cloneDeep(oldData);\n                     for (let key in vals) {\n                        // update each values of .settings\n                        if (\n                           key == \"settings\" &&\n                           vals[\"settings\"] &&\n                           typeof vals[\"settings\"] == \"object\"\n                        ) {\n                           updateValues[\"settings\"] =\n                              updateValues[\"settings\"] || {};\n\n                           for (let keySetting in vals[\"settings\"]) {\n                              updateValues[\"settings\"][keySetting] =\n                                 vals[\"settings\"][keySetting];\n                           }\n                        } else {\n                           updateValues[key] = vals[key];\n                        }\n                     }\n\n                     _editField.fromValues(updateValues);\n\n                     field = _editField;\n                  }\n\n                  var validator = field.isValid();\n                  if (validator.fail()) {\n                     validator.updateForm($$(editor.ui.id));\n                     // OP.Form.isValidationError(errors, $$(editor.ui.id));\n\n                     // keep our old data\n                     if (oldData) {\n                        field.fromValues(oldData);\n                     }\n\n                     $$(ids.buttonSave).enable();\n                     $$(ids.component).hideProgress();\n                  } else {\n                     try {\n                        await field.save();\n\n                        let finishUpdateField = () => {\n                           $$(ids.buttonSave).enable();\n                           $$(ids.component).hideProgress();\n                           _currentEditor.clear();\n                           _logic.hide();\n                           _logic.callbacks.onSave(field);\n                        };\n\n                        let refreshModels = () => {\n                           // refresh linked object model\n                           linkCol.object.model().refresh();\n\n                           // refresh source object model\n                           // NOTE: M:1 relation has to refresh model after linked object's refreshed\n                           field.object.model().refresh();\n                        };\n\n                        // TODO workaround : update link column id\n                        if (linkCol != null) {\n                           linkCol.settings.linkColumn = field.id;\n                           await linkCol.save();\n\n                           // now linkCol has an .id, so update our field:\n                           field.settings.linkColumn = linkCol.id;\n                           await field.save();\n\n                           // when add new link fields, then run create migrate fields here\n                           if (!_editField) {\n                              await field.migrateCreate();\n                              await linkCol.migrateCreate();\n                           }\n\n                           refreshModels();\n                           finishUpdateField();\n                        } else {\n                           finishUpdateField();\n                        }\n                     } catch (err) {\n                        // if (\n                        //    OP.Validation.isFormValidationError(\n                        //       err,\n                        //       $$(editor.ui.id)\n                        //    )\n                        // ) {\n                        //    // for validation errors, keep things in place\n                        //    // and let the user fix the data:\n                        //    $$(ids.buttonSave).enable();\n                        //    $$(ids.component).hideProgress();\n                        // } else {\n                        //    var errMsg = err.toString();\n                        //    if (err.message) {\n                        //       errMsg = err.message;\n                        //    }\n                        //    webix.alert({\n                        //       title: \"Error saving fields.\",\n                        //       ok: \"tell appdev\",\n                        //       text: errMsg,\n                        //       type: \"alert-error\",\n                        //    });\n                        //    // Q: if not validation error, do we\n                        //    // then field.destroy() ? and let them try again?\n                        //    // $$(ids.buttonSave).enable();\n                        //    // $$(ids.component).hideProgress();\n                        // }\n                     }\n                  }\n               } else {\n                  $$(ids.buttonSave).enable();\n                  $$(ids.component).hideProgress();\n               }\n            } else {\n               this.AB.notify.developer(\n                  new Error(\"Could not find the current editor.\"),\n                  {}\n               );\n\n               $$(ids.buttonSave).enable();\n               $$(ids.component).hideProgress();\n            }\n\n            // if (!inputValidator.validateFormat(fieldInfo.name)) {\n            //  self.enable();\n            //  return;\n            // }\n\n            // // Validate duplicate field name\n            // var existsColumn = $.grep(dataTable.config.columns, function (c) { return c.id == fieldInfo.name.replace(/ /g, '_'); });\n            // if (existsColumn && existsColumn.length > 0 && !data.editFieldId) {\n            //  webix.alert({\n            //      title: labels.add_fields.duplicateFieldTitle,\n            //      text: labels.add_fields.duplicateFieldDescription,\n            //      ok: labels.common.ok\n            //  });\n            //  this.enable();\n            //  return;\n            // }\n\n            // if (fieldInfo.weight == null)\n            //  fieldInfo.weight = dataTable.config.columns.length;\n\n            // // Call callback function\n            // if (base.saveFieldCallback && base.fieldName) {\n            //  base.saveFieldCallback(base.fieldName, fieldInfo)\n            //      .then(function () {\n            //          self.enable();\n            //          base.resetState();\n            //          base.hide();\n            //      });\n            // }\n         },\n\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         hide: function () {\n            $$(ids.component).hide();\n         },\n\n         modeAdd: function (allowFieldKey) {\n            // show default editor:\n            defaultEditorComponent.show(false, false);\n            _currentEditor = defaultEditorComponent;\n\n            // allow add the connect field only to import object\n            if (_currentObject.isImported) allowFieldKey = \"connectObject\";\n\n            if (allowFieldKey) {\n               var connectField = ABFieldManager.allFields().filter(\n                  (f) => f.defaults().key == allowFieldKey\n               )[0];\n               if (!connectField) return;\n               var connectMenuName = connectField.defaults().menuName;\n               $$(ids.types).setValue(connectMenuName);\n               $$(ids.types).disable();\n            }\n            // show the ability to switch data types\n            else {\n               $$(ids.types).enable();\n            }\n\n            $$(ids.types).show();\n\n            // change button text to 'add'\n            $$(ids.buttonSave).define(\"label\", L(\"Add Column\"));\n            $$(ids.buttonSave).refresh();\n         },\n\n         modeEdit: function (field) {\n            if (_currentEditor) _currentEditor.hide();\n\n            // switch to this field's editor:\n            // hide the rest\n            for (var c in _componentsByType) {\n               if (c == field.key) {\n                  _componentsByType[c].show(false, false);\n                  _componentsByType[c].populate(field);\n                  _currentEditor = _componentsByType[c];\n               } else {\n                  _componentsByType[c].hide();\n               }\n            }\n\n            // disable elements that disallow to edit\n            if (\n               _currentEditor &&\n               _currentEditor.ui &&\n               _currentEditor.ui.elements\n            ) {\n               var disableElem = (elem) => {\n                  if (elem.disallowEdit && $$(elem.id) && $$(elem.id).disable) {\n                     $$(elem.id).disable();\n                  }\n               };\n\n               _currentEditor.ui.elements.forEach((elem) => {\n                  disableElem(elem);\n\n                  // disable elements are in rows/cols\n                  var childElems = elem.cols || elem.rows;\n                  if (childElems && childElems.forEach) {\n                     childElems.forEach((childElem) => {\n                        disableElem(childElem);\n                     });\n                  }\n               });\n            }\n\n            // hide the ability to switch data types\n            $$(ids.types).hide();\n\n            // change button text to 'save'\n            $$(ids.buttonSave).define(\"label\", L(\"Save\"));\n            $$(ids.buttonSave).refresh();\n         },\n\n         /**\n          * @function onChange\n          * swap the editor view to match the data field selected in the menu.\n          *\n          * @param {string} name  the menuName() of the submenu that was selected.\n          */\n         onChange: function (name) {\n            // note, the submenu returns the Field.menuName() values.\n            // we use that to lookup the Field here:\n            var editor = _componentHash[name];\n            if (editor) {\n               editor.show();\n               _currentEditor = editor;\n               $$(ids.types).blur();\n            } else {\n               // most likely they clicked on the menu button itself.\n               // do nothing.\n               // OP.Error.log(\"App Builder:Workspace:Object:NewDataField: could not find editor for submenu item:\"+name, { name:name });\n            }\n         },\n\n         resetState: function () {\n            // enable elements that disallow to edit\n            if (\n               _currentEditor &&\n               _currentEditor.ui &&\n               _currentEditor.ui.elements\n            ) {\n               var enableElem = (elem) => {\n                  if (elem.disallowEdit && $$(elem.id) && $$(elem.id).enable) {\n                     $$(elem.id).enable();\n                  }\n               };\n\n               _currentEditor.ui.elements.forEach((elem) => {\n                  enableElem(elem);\n\n                  // enable elements are in rows/cols\n                  var childElems = elem.cols || elem.rows;\n                  if (childElems && childElems.forEach) {\n                     childElems.forEach((childElem) => {\n                        enableElem(childElem);\n                     });\n                  }\n               });\n            }\n\n            defaultEditorComponent.show(); // show the default editor\n            _currentEditor = defaultEditorComponent;\n\n            // set the richselect to the first option by default.\n            $$(ids.types).setValue(submenus[0].id);\n         },\n\n         /**\n          * @function show()\n          *\n          * Show this component.\n          * @param {ABField} field    the ABField to edit.  If not provided, then\n          *                           this is an ADD operation.\n          * @param {string} fieldKey  allow only this field type\n          */\n         show: function (field, fieldKey) {\n            _editField = field;\n\n            if (_editField) {\n               _logic.modeEdit(field);\n            } else {\n               _logic.modeAdd(fieldKey);\n            }\n\n            $$(ids.component).show();\n         },\n\n         typeClick: function () {\n            // NOTE: for functional testing we need a way to display the submenu\n            // (functional tests don't do .hover very well)\n            // so this routine is to enable .click() to show the submenu.\n\n            var subMenuId = $$(ids.types).config.data[0].submenu;\n\n            // #HACK Sub-menu popup does not render on initial\n            // Force it to render popup by use .getSubMenu()\n            if (typeof subMenuId != \"string\") {\n               $$(ids.types).getSubMenu($$(ids.types).config.data[0].id);\n               subMenuId = $$(ids.types).config.data[0].submenu;\n            }\n\n            if ($$(subMenuId)) $$(subMenuId).show();\n         },\n      });\n\n      // Expose any globally accessible Actions:\n      this.actions({});\n\n      //\n      // Define our external interface methods:\n      //\n      this.applicationLoad = _logic.applicationLoad; // {fn}     fn(ABApplication)\n      this.objectLoad = _logic.objectLoad; // {fn}     fn(ABObject)\n      this.show = _logic.show; // {fn}     fn(node, ABField)\n   }\n};\n","/*\n * ab_work_object_workspace_popupSortFields\n *\n * Manage the Sort Fields popup.\n *\n */\n\nconst ABComponent = require(\"../AppBuilder/platform/ABComponent\");\n\nmodule.exports = class AB_Work_Object_Workspace_PopupSortFields extends ABComponent {\n   //.extend(idBase, function(App) {\n\n   constructor(App, idBase) {\n      idBase = idBase || \"ab_work_object_workspace_popupSortFields\";\n\n      super(App, idBase);\n      var L = this.Label();\n\n      // internal list of Webix IDs to reference our UI components\n      var ids = {\n         component: this.unique(`${idBase}_popupSort`),\n         list: this.unique(`${idBase}_popupSort_list`),\n         form: this.unique(`${idBase}_popupSort_form`),\n      };\n\n      // Our webix UI definition:\n      var formUI = {\n         view: \"form\",\n         id: ids.form,\n         // autoheight: true,\n         borderless: true,\n         elements: [\n            {\n               view: \"button\",\n               type: \"form\",\n               css: \"webix_primary\",\n               value: L(\"Add new sort\"),\n               on: {\n                  onItemClick: function (id, e, node) {\n                     _logic.clickAddNewSort();\n                     _logic.triggerOnChange();\n                  },\n               },\n            },\n         ],\n      };\n\n      this.ui = {\n         view: \"popup\",\n         id: ids.component,\n         // autoheight:true,\n         width: 600,\n         body: formUI,\n         on: {\n            onShow: function () {\n               _logic.onShow();\n            },\n         },\n      };\n\n      // Our init() function for setting up our UI\n      this.init = (options) => {\n         // register our callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         webix.ui(this.ui);\n      };\n\n      let CurrentObject = null;\n\n      // our internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            /**\n             * @function onChange\n             * called when we have made changes to the hidden field settings\n             * of our Current Object.\n             *\n             * this is meant to alert our parent component to respond to the\n             * change.\n             */\n            onChange: function () {},\n         },\n\n         /**\n          * @function clickAddNewSort\n          * the user clicked the add new sort buttton. I don't know what it does...will update later\n          */\n         // clickAddNewSort: function(by, dir, isMulti, id) {\n         clickAddNewSort: function (fieldId, dir) {\n            var sort_form = $$(ids.form);\n\n            var viewIndex = sort_form.getChildViews().length - 1;\n            var listFields = _logic.getFieldList(true);\n            sort_form.addView(\n               {\n                  id: \"sort\" + webix.uid(),\n                  cols: [\n                     {\n                        view: \"combo\",\n                        width: 220,\n                        options: listFields,\n                        on: {\n                           onChange: function (columnId) {\n                              var el = this;\n                              _logic.onChangeCombo(columnId, el);\n                           },\n                        },\n                     },\n                     {\n                        view: \"segmented\",\n                        width: 200,\n                        options: [\n                           {\n                              id: \"\",\n                              value: L(\"Please select field\"),\n                           },\n                        ],\n                        on: {\n                           onChange: function (newv, oldv) {\n                              // 'asc' or 'desc' values\n                              _logic.triggerOnChange();\n                           },\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        css: \"webix_danger\",\n                        icon: \"fa fa-trash\",\n                        type: \"icon\",\n                        width: 30,\n                        on: {\n                           onItemClick: function () {\n                              sort_form.removeView(this.getParentView());\n                              _logic.refreshFieldList(true);\n                              _logic.triggerOnChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               viewIndex\n            );\n\n            // Select field\n            if (fieldId) {\n               var fieldsCombo = sort_form\n                  .getChildViews()\n                  [viewIndex].getChildViews()[0];\n               fieldsCombo.setValue(fieldId);\n            }\n            if (dir) {\n               var segmentButton = sort_form\n                  .getChildViews()\n                  [viewIndex].getChildViews()[1];\n               segmentButton.setValue(dir);\n            }\n            // if (isMulti) {\n            // \tvar isMultilingualField = sort_form.getChildViews()[viewIndex].getChildViews()[2];\n            // \tisMultilingualField.setValue(isMulti);\n            // }\n         },\n\n         /**\n          * @function getFieldList\n          * return field list so we can present a custom UI for view\n          */\n         getFieldList: function (excludeSelected) {\n            var sort_popup = $$(ids.component),\n               sort_form = $$(ids.form),\n               listFields = [];\n\n            if (!CurrentObject.fields()) return listFields;\n\n            // Get all fields include hidden fields\n            var allFields = CurrentObject.fields();\n            allFields.forEach((f) => {\n               if (f.fieldIsSortable()) {\n                  listFields.push({\n                     id: f.id,\n                     value: f.label,\n                  });\n               }\n            });\n\n            // Remove selected field\n            if (excludeSelected) {\n               var childViews = sort_form.getChildViews();\n               if (childViews.length > 1) {\n                  // Ignore 'Add new sort' button\n                  childViews.forEach(function (cView, index) {\n                     if (childViews.length - 1 <= index) return false;\n\n                     var selectedValue = cView.getChildViews()[0].getValue();\n                     if (selectedValue) {\n                        var removeIndex = null;\n                        var removeItem = listFields.filter(function (f, index) {\n                           if (f.id == selectedValue) {\n                              removeIndex = index;\n                              return true;\n                           } else {\n                              return false;\n                           }\n                        });\n                        // var removeItem = $.grep(listFields, function (f, index) {\n                        // \tif (f.id == selectedValue) {\n                        // \t\tremoveIndex = index;\n                        // \t\treturn true;\n                        // \t}\n                        // \telse {\n                        // \t\treturn false;\n                        // \t}\n                        // });\n                        listFields.splice(removeIndex, 1);\n                     }\n                  });\n               }\n            }\n            return listFields;\n         },\n\n         /**\n          * @function objectLoad\n          * Ready the Popup according to the current object\n          * @param {ABObject} object  the currently selected object.\n          */\n         objectLoad: function (object) {\n            CurrentObject = object;\n         },\n\n         /**\n          * @method setSettings\n          *\n          * @param {Array} settings - [\n          * \t\t\t\t\t\t\t\t{\n          * \t\t\t\t\t\t\t\t\tkey: uuid,\t\t// id of ABField\n          *\t \t\t\t\t\t\t\t\tdir: string,\t// 'asc' or 'desc'\n          * \t\t\t\t\t\t\t\t}\n          * \t\t\t\t\t\t\t]\n          */\n         setSettings: (settings) => {\n            this._settings = this.AB.cloneDeep(settings);\n         },\n\n         /**\n          * @function getSettings\n          *\n          * @return {Array} - [\n          * \t\t\t\t\t\t{\n          * \t\t\t\t\t\t\tkey: uuid,\t\t// id of ABField\n          * \t\t\t\t\t\t\tdir: string,\t// 'asc' or 'desc'\n          * \t\t\t\t\t\t}\n          * \t\t\t\t\t]\n          */\n         getSettings: function () {\n            var sort_form = $$(ids.form),\n               sortFields = [];\n\n            var childViews = sort_form.getChildViews();\n            if (childViews.length > 1) {\n               // Ignore 'Add new sort' button\n               childViews.forEach(function (cView, index) {\n                  if (childViews.length - 1 <= index) return false;\n\n                  var fieldId = cView.getChildViews()[0].getValue();\n                  var dir = cView.getChildViews()[1].getValue();\n                  sortFields.push({\n                     // \"by\":by,\n                     key: fieldId,\n                     dir: dir,\n                     // \"isMulti\":isMultiLingual\n                  });\n               });\n            }\n\n            return sortFields;\n         },\n\n         onChangeCombo: function (columnId, el) {\n            var allFields = CurrentObject.fields();\n            var columnConfig = \"\",\n               sortDir = el.getParentView().getChildViews()[1],\n               // isMultiLingual = el.getParentView().getChildViews()[2],\n               // isMulti = 0,\n               options = null;\n\n            allFields.forEach((f) => {\n               if (f.id == columnId) {\n                  columnConfig = f;\n               }\n            });\n\n            if (!columnConfig) return;\n\n            switch (columnConfig.key) {\n               case \"string\":\n                  options = [\n                     { id: \"asc\", value: L(\"A -> Z\") },\n                     { id: \"desc\", value: L(\"Z -> A\") },\n                  ];\n                  break;\n               case \"date\":\n                  options = [\n                     { id: \"asc\", value: L(\"Before -> After\") },\n                     { id: \"desc\", value: L(\"After -> Before\") },\n                  ];\n                  break;\n               case \"number\":\n                  options = [\n                     { id: \"asc\", value: L(\"1 -> 9\") },\n                     { id: \"desc\", value: L(\"9 -> 1\") },\n                  ];\n                  break;\n               default:\n                  options = [\n                     { id: \"asc\", value: L(\"A -> Z\") },\n                     { id: \"desc\", value: L(\"Z -> A\") },\n                  ];\n                  break;\n            }\n\n            sortDir.define(\"options\", options);\n            sortDir.refresh();\n\n            // if (columnConfig.settings.supportMultilingual)\n            // \tisMulti = columnConfig.settings.supportMultilingual;\n\n            // isMultiLingual.setValue(isMulti);\n\n            _logic.refreshFieldList();\n\n            _logic.triggerOnChange();\n         },\n\n         /**\n          * @function objectLoad\n          * Ready the Popup according to the current object\n          * @param {ABObject} object  the currently selected object.\n          */\n         onShow: () => {\n            var sort_form = $$(ids.form);\n\n            // clear field options in the form\n            webix.ui(formUI, sort_form);\n            // var childViews = sort_form.getChildViews();\n            // childViews.forEach(function(i, idx, array){\n            // \tif (idx !== array.length - 1){\n            // \t\tsort_form.removeView(i);\n            // \t}\n            // });\n\n            var sorts = this._settings;\n            if (sorts && sorts.forEach) {\n               sorts.forEach((s) => {\n                  _logic.clickAddNewSort(s.key, s.dir);\n               });\n            }\n\n            if (sorts == null || sorts.length == 0) {\n               _logic.clickAddNewSort();\n            }\n         },\n\n         /**\n          * @function refreshFieldList\n          * return an updated field list so you cannot duplicate a sort\n          */\n         refreshFieldList: function (ignoreRemoveViews) {\n            var sort_form = $$(ids.form),\n               listFields = _logic.getFieldList(false),\n               selectedFields = [],\n               removeChildViews = [];\n\n            var childViews = sort_form.getChildViews();\n            if (childViews.length > 1) {\n               // Ignore 'Add new sort' button\n               childViews.forEach(function (cView, index) {\n                  if (childViews.length - 1 <= index) return false;\n\n                  var fieldId = cView.getChildViews()[0].getValue(),\n                     // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId });\n                     fieldObj = listFields.filter(function (f) {\n                        return f.id == fieldId;\n                     });\n\n                  if (fieldObj.length > 0) {\n                     // Add selected field to list\n                     selectedFields.push(fieldObj[0]);\n                  } else {\n                     // Add condition to remove\n                     removeChildViews.push(cView);\n                  }\n               });\n            }\n\n            // Remove filter conditions when column is deleted\n            if (!ignoreRemoveViews) {\n               removeChildViews.forEach(function (cView, index) {\n                  sort_form.removeView(cView);\n               });\n            }\n\n            // Field list should not duplicate field items\n            childViews = sort_form.getChildViews();\n            if (childViews.length > 1) {\n               // Ignore 'Add new sort' button\n               childViews.forEach(function (cView, index) {\n                  if (childViews.length - 1 <= index) return false;\n\n                  var fieldId = cView.getChildViews()[0].getValue(),\n                     // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId }),\n                     fieldObj = listFields.filter(function (f) {\n                        return f.id == fieldId;\n                     });\n\n                  // var selectedFieldsExcludeCurField = $(selectedFields).not(fieldObj);\n                  var selectedFieldsExcludeCurField = selectedFields.filter(\n                     function (x) {\n                        if (\n                           Array.isArray(fieldObj) &&\n                           fieldObj.indexOf(x) !== -1\n                        ) {\n                           return false;\n                        }\n                        return true;\n                     }\n                  );\n\n                  // var enableFields = $(listFields).not(selectedFieldsExcludeCurField).get();\n                  var enableFields = listFields.filter(function (x) {\n                     if (\n                        Array.isArray(selectedFieldsExcludeCurField) &&\n                        selectedFieldsExcludeCurField.indexOf(x) !== -1\n                     ) {\n                        return false;\n                     }\n                     return true;\n                  });\n\n                  // Update field list\n                  cView.getChildViews()[0].define(\"options\", enableFields);\n                  cView.getChildViews()[0].refresh();\n               });\n            }\n         },\n\n         /**\n          * @function triggerOnChange\n          * This parses the sort form to build in order the sorts then saves to the application object workspace\n          */\n         triggerOnChange: () => {\n            // block .onChange callback\n            if (this._blockOnChange) return;\n\n            this._settings = _logic.getSettings();\n\n            _logic.callbacks.onChange(this._settings);\n\n            // if (CurrentView != null) {\n            // \tCurrentView.settings = CurrentView.settings || {};\n            // \tCurrentView.settings.objectWorkspace = CurrentView.settings.objectWorkspace || {};\n            // \tCurrentView.settings.objectWorkspace.sortFields = sortFields;\n            // \t_logic.callbacks.onChange(CurrentView.settings.objectWorkspace);\n            // } else {\n            // \tCurrentObject.workspaceSortFields = sortFields;\n            // \tCurrentObject.save()\n            // \t.then(function(){\n            // \t\t_logic.callbacks.onChange();\n            // \t})\n            // \t.catch(function(err){\n            // \t\tOP.Error.log('Error trying to save workspaceSortFields', {error:err, fields:sortFields });\n            // \t});\n            // }\n         },\n\n         blockOnChange: () => {\n            this._blockOnChange = true;\n         },\n\n         unblockOnChange: () => {\n            this._blockOnChange = false;\n         },\n\n         /**\n          * @function show()\n          *\n          * Show this component.\n          * @param {obj} $view  the webix.$view to hover the popup around.\n          * @param {uuid} fieldId the fieldId we want to prefill the sort with\n          */\n         show: ($view, fieldId, options) => {\n            _logic.blockOnChange();\n\n            $$(ids.component).show($view, options || null);\n\n            if (fieldId) {\n               _logic.clickAddNewSort(fieldId);\n            }\n\n            _logic.unblockOnChange();\n         },\n\n         /**\n          * @function sort()\n          * client sort data in list\n          *\n          * @param {Object} a\n          * @param {Object} b\n          */\n         sort: function (a, b) {\n            var result = 0;\n\n            var childViews = $$(ids.form).getChildViews();\n            if (childViews.length > 1) {\n               // Ignore 'Add new sort' button\n               childViews.forEach(function (cView, index) {\n                  if (childViews.length - 1 <= index || result != 0) return;\n\n                  var fieldId = cView.getChildViews()[0].getValue();\n                  var dir = cView.getChildViews()[1].getValue();\n\n                  var field = CurrentObject.fieldByID(fieldId);\n                  if (!field) return;\n\n                  var by = field.columnName; // column name\n\n                  var aValue = a[by],\n                     bValue = b[by];\n\n                  if (Array.isArray(aValue)) {\n                     aValue = (aValue || [])\n                        .map(function (item) {\n                           return item.text || item;\n                        })\n                        .join(\" \");\n                  }\n\n                  if (Array.isArray(bValue)) {\n                     bValue = (bValue || [])\n                        .map(function (item) {\n                           return item.text || item;\n                        })\n                        .join(\" \");\n                  }\n\n                  if (aValue != bValue) {\n                     if (dir == \"asc\") {\n                        result = aValue > bValue ? 1 : -1;\n                     } else {\n                        result = aValue < bValue ? 1 : -1;\n                     }\n                  }\n               });\n            }\n\n            return result;\n         },\n      });\n\n      // Expose any globally accessible Actions:\n      this.actions({});\n\n      //\n      // Define our external interface methods:\n      //\n      this.objectLoad = _logic.objectLoad;\n      this.show = _logic.show;\n      this.sort = _logic.sort;\n\n      this.setValue = _logic.setSettings;\n      this.getValue = _logic.getSettings;\n   }\n};\n","var EventEmitter = require(\"events\").EventEmitter;\n\nclass Account extends EventEmitter {\n   constructor() {\n      super();\n\n      this.isAuthenticated = false;\n      this._config = null;\n\n      this._listRoles = null;\n      // {array}\n      // a list of all the Defined Roles in the Tenant's system.\n\n      this._listScopes = null;\n      // {array | null}\n      // a list of all the Defined Scopes in the Tenant's sytem.\n\n      this._listUsers = null;\n      // {array | null}\n      // a list of all the Defined Users in the Tenant's system.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var UserConfig = this.AB.Config.userConfig();\n      if (UserConfig) {\n         this.isAuthenticated = true;\n         this._config = UserConfig;\n      }\n\n      var MetaConfig = this.AB.Config.metaConfig();\n      if (MetaConfig) {\n         this._listRoles = MetaConfig.roles || [];\n         this._listScopes = MetaConfig.scopes || [];\n         this._listUsers = MetaConfig.users || [];\n      }\n\n      this.AB.Network.on(\"account.logout\", (context, err, data) => {\n         if (err) {\n            console.error(err);\n            return;\n         }\n         this.emit(\"logout\", data);\n      });\n\n      return Promise.resolve();\n   }\n\n   canSwitcheroo() {\n      return (\n         this.roles((r) => r.uuid === \"320ef94a-73b5-476e-9db4-c08130c64bb8\")\n            .length > 0\n      );\n   }\n\n   isSwitcherood() {\n      return this.AB.Config.userReal();\n   }\n\n   isSystemDesigner() {\n      return (\n         this.roles((r) => r.uuid === \"6cc04894-a61b-4fb5-b3e5-b8c3f78bd331\")\n            .length > 0\n      );\n   }\n\n   email() {\n      return this._config?.email ?? \"\";\n   }\n\n   language() {\n      return this._config?.languageCode ?? \"en\";\n   }\n\n   logout() {\n      return this.AB.Network.post(\n         {\n            url: \"/auth/logout\",\n            data: { tenantUrl: this.AB.Tenant.setting(\"url\") },\n         },\n         {\n            key: \"account.logout\",\n            context: {},\n         }\n      );\n   }\n\n   roles(fn = () => true) {\n      return (this._config?.roles || []).filter(fn);\n   }\n   rolesAll() {\n      return this._listRoles;\n   }\n\n   scopes() {\n      return this._listScopes;\n   }\n\n   username() {\n      return this._config?.username;\n   }\n\n   userList() {\n      return this._listUsers;\n   }\n\n   uuid() {\n      return this._config?.uuid;\n   }\n\n   imageID() {\n      return this._config?.image_id;\n   }\n\n   sendEmailNotifications() {\n      return this._config?.sendEmailNotifications;\n   }\n}\n\nexport default new Account();\n","//\n// Dialog\n// A common set of UI dialogs to show the User.\n//\n// NOTE: IN TRANSITION: this is our previous method of handling\n// dialogs.  In future, refactor to use webix directly in code.\n//\n\nexport default {\n   // Instance properties\n\n   // Alert\n   // A dialogue that popup with a message, and requires an [ok] button press\n   Alert: function (opts) {\n      webix.alert({\n         title:\n            opts.title ||\n            AB.Multilingual.label(\"opp.dialog.alert.title\", \"*Alert\"),\n         text:\n            opts.text ||\n            opts.message ||\n            AB.Multilingual.label(\n               \"opp.dialog.alert.text\",\n               \"*Something is wrong.\"\n            ),\n         ok: opts.ok || AB.Multilingual.label(\"opp.dialog.alert.ok\", \"*OK\"),\n      });\n   },\n\n   // Confirm\n   // A [Yes] [No] dialogue that pops up with a message\n   Confirm: function (opts) {\n      var title =\n         opts.title ||\n         AB.Multilingual.label(\"opp.dialog.confirm.confirmTitle\", \"* Confirm\");\n      var message =\n         opts.text ||\n         opts.message ||\n         AB.Multilingual.label(\n            \"opp.dialog.confirm.confirmMsg\",\n            \"* Are you sure you want to do this?\"\n         );\n\n      var labelYes =\n         opts.labelYes ||\n         opts.ok ||\n         AB.Multilingual.label(\"opp.common.yes\", \"* yes\");\n      var labelNo =\n         opts.labelNo ||\n         opts.cancel ||\n         AB.Multilingual.label(\"opp.common.no\", \"* no\");\n\n      // var fnYes = opts.fnYes || function () { };\n      // var fnNo = opts.fnNo || function () { };\n\n      webix.confirm({\n         title: title,\n         text: message,\n\n         ok: labelYes,\n         cancel: labelNo,\n\n         callback: function (result) {\n            if (result) {\n               if (opts.fnYes) opts.fnYes();\n            } else {\n               if (opts.fnNo) opts.fnNo();\n            }\n\n            if (opts.callback) opts.callback(result);\n         },\n      });\n\n      // bootbox.dialog({\n      //     title: title,\n      //     message: message,\n      //     buttons: {\n      //         yes: {\n      //             label: labelYes,\n      //             className: 'btn-primary',\n      //             callback: fnYes\n      //         },\n      //         no: {\n      //             label: labelNo,\n      //             className: 'btn-default',\n      //             callback: fnNo\n      //         }\n      //     }\n      // });\n   },\n\n   // ConfirmDelete\n   // A Confirm dialogue geared towards deleting items.\n   // [delete] [cancel]\n   ConfirmDelete: function (opts) {\n      this.Confirm({\n         title:\n            opts.title ||\n            AB.Multilingual.label(\n               \"opp.dialog.confirm.deleteTitle\",\n               \"* Confirm Delete\"\n            ),\n         ok: opts.ok || AB.Multilingual.label(\"opp.common.delete\", \"* Delete\"),\n         cancel:\n            opts.cancel ||\n            AB.Multilingual.label(\"opp.common.cancel\", \"* Cancel\"),\n         text:\n            opts.text ||\n            opts.message ||\n            AB.Multilingual.label(\n               \"opp.dialog.confirm.deleteMsg\",\n               \"* Are you sure you want to delete this?\",\n               [\"this\"]\n            ),\n         callback: function (result) {\n            if (result) {\n               if (opts.fnYes) opts.fnYes();\n            } else {\n               if (opts.fnNo) opts.fnNo();\n            }\n\n            if (opts.callback) opts.callback(result);\n         },\n      });\n   },\n\n   // Message\n   // A simple message displayed to the user.  Can time out\n   Message: function (opts) {\n      var message = opts.text || opts.message;\n      var timeout = opts.timeout || 2000;\n\n      webix.message({\n         text: message,\n         expire: timeout,\n      });\n   },\n};\n","/*\n * Multilingual\n * manage our multilingual Translations/Labels/etc.\n */\n\nvar MLClass = require(\"../AppBuilder/platform/ABMLClass\");\n\nclass Multilingual extends MLClass {\n   constructor() {\n      super([], {});\n      // super()\n      //    [] = no labels\n      //    {} = placeholder ABFactory entry until .init() is called.\n\n      this.isAuthenticated = false;\n      this._config = null;\n\n      this._missingLabelID = false;\n      this._missingLabels = {};\n      this._pluginLabelsMissing = {};\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n\n      this.labels = this.AB.Config.labelConfig();\n      this._languages = this.AB.Config.languageConfig();\n\n      this.pluginLabels = {};\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   currentLanguage() {\n      return this.AB.Account.language();\n   }\n\n   label(key, altText, values = [], postMissing = true) {\n      // part of our transition: L(\"single string\") should start to work:\n      if (typeof altText == \"undefined\" && key) {\n         altText = key;\n      }\n\n      // other case: L(\"single string {0}\", [])\n      if (arguments.length == 2 && Array.isArray(altText)) {\n         values = altText;\n         altText = key;\n      }\n\n      // We need to escape \" characters or else they will get added to the the lang.js\n      // then we get errors next time we try to parse it as JSON (see appbuilder.label-missing)\n      altText = altText.replace(/\"/g, '\\\\\"');\n      key = key.replace(/\"/g, '\\\\\"');\n\n      // NOTE: transition to new Labels\n      // currently our code still uses the L(key, altText, values) format, but\n      // the labels we get back are in L(altText, values) format.\n      //\n      // we are going to keep this like this until we have a well functioning\n      // UI display of our Apps, which should flesh out most of the missing\n      // labels to our files.\n      //\n      // After that, convert our L(k, t, v) to L(t, v)\n\n      var newKey = altText;\n      if (newKey[0] == \"*\") {\n         newKey = newKey.slice(1);\n      }\n      var label = this.labels[newKey];\n      if (!label) {\n         if (postMissing) {\n            this.postMissingLabel(key, altText);\n         }\n         label = altText;\n      }\n\n      values.forEach((v, i) => {\n         var sub = `{${i}}`;\n         label = label.replaceAll(sub, v);\n      });\n      label = label.replace(/\\\\\"/g, '\"'); // unescape \" in the label\n      return label;\n   }\n\n   labelPlugin(plugin, altText, values = []) {\n      // 1st check to see if it is a common label from platform:\n      var label = this.label(altText, altText, values, false);\n      if (!label) {\n         // ok, so check to see if it is a Plugin Label:\n         label = this.pluginLabels[plugin][altText];\n      }\n      if (!label) {\n         // !! record it missing.\n         this._pluginLabelsMissing[plugin] =\n            this._pluginLabelsMissing[plugin] || {};\n         this._pluginLabelsMissing[plugin][altText] = altText;\n         label = altText;\n      }\n      values.forEach((v, i) => {\n         var sub = `{${i}}`;\n         label = label.replaceAll(sub, v);\n      });\n      return label;\n   }\n\n   languages() {\n      return this._languages;\n\n      // console.error(\n      //    \"Multilingual:languages(): Implement Language Storage/Retrieval.\"\n      // );\n      // return [];\n   }\n\n   pluginLoadLabels(key, labels) {\n      this.pluginLabels[key] = labels;\n   }\n   pluginLabelReport(key) {\n      console.warn(\"missing labels for plugin: \", key);\n      console.warn(\"current language:\", this.currentLanguage());\n      var labels = JSON.stringify(this._pluginLabelsMissing[key], null, 3);\n      console.warn(labels);\n   }\n\n   postMissingLabel(key, altText) {\n      if (this._missingLabelID) {\n         clearTimeout(this._missingLabelID);\n      }\n      var batchLength = 50;\n      var sendBatch = () => {\n         var batchLabels = [];\n         let missingLabels = Object.keys(this._missingLabels).map(\n            (k) => this._missingLabels[k]\n         );\n         if (missingLabels.length <= batchLength) {\n            batchLabels = missingLabels;\n            this._missingLabels = {};\n         } else {\n            for (var i = 0; i <= batchLength; i++) {\n               var l = missingLabels.shift();\n               batchLabels.push(l);\n               delete this._missingLabels[l.key];\n            }\n         }\n         this.AB.Network.post({\n            url: \"/multilingual/label-missing\",\n            data: { labels: JSON.stringify(batchLabels) },\n         })\n            .then(() => {\n               if (Object.keys(this._missingLabels).length > 0) {\n                  sendBatch();\n               }\n            })\n            .catch((err) => {\n               const strErr = err.toString();\n               if (strErr.indexOf(\"unable to get\") > -1) {\n                  console.error(\n                     \"Missing language file for :\" + this.currentLanguage()\n                  );\n               }\n            });\n      };\n      this._missingLabelID = setTimeout(() => {\n         sendBatch();\n      }, 1000);\n\n      this._missingLabels[key] = { key, altText };\n   }\n   ///\n   /// Disable un-needed ABMLClass functionality\n   ///\n   /// NOTE: we are mainly Piggybacking on ABMLClass for it's\n   /// .translate() and .unTranslate() capabilities. So disable these\n   /// for good measure.\n   destroy() {\n      console.error(\"Multilingual:destroy(): Should not be called.\");\n      return Promise.resolve();\n   }\n   save() {\n      console.error(\"Multilingual:save(): Should not be called.\");\n      return Promise.resolve();\n   }\n   toObj() {\n      console.error(\"Multilingual:toObj(): Should not be called.\");\n      return {};\n   }\n   toDefinition() {\n      console.error(\"Multilingual:toDefinition(): Should not be called.\");\n      return {};\n   }\n}\n\nexport default new Multilingual();\n","/*\n * NetworkRest.js\n * The base Networking class.  This class is responsible for job submissions\n * and outlines the basic Network interface.\n */\n\n/* global navigator Connection */\n// import Account from \"./Account\";\n// import analytics from \"./Analytics\";\n// import EventEmitter from \"eventemitter2\";\nvar EventEmitter = require(\"events\").EventEmitter;\n// import Lock from \"./Lock\";\n\n// import { storage } from \"./Storage\";\n// import Tenant from \"./Tenant\";\n// import { v4 as uuidv4 } from \"uuid\";\n\n// Temp placeholders until Resources are implemented:\n\n// End Temp\n\nconst Atomic = require(\"atomicjs/dist/atomic.min.js\");\n// Atomic : a small $.ajax() replacement\n\nvar Config = null;\n// {} Config\n// the site specific configuration information\n\nclass NetworkRest extends EventEmitter {\n   constructor(parent) {\n      // {Network} parent\n\n      super({\n         wildcard: true,\n         newListener: false,\n         maxListeners: 0,\n      });\n\n      this.baseURL = null;\n      // {string} .baseURL\n      // the url of our site.\n\n      this.numRetries = 3;\n      // {int} .numRetries\n      // the number or times we should attempt to issue a network request.\n\n      this._network = parent;\n      // {Network} ._network\n      // the Parent Network Resource that the rest of the Platform actually\n      // works with.\n\n      this.isRealTime = false;\n      // {bool}\n      // does this Network type support RealTime updates. (socket = true);\n   }\n\n   /**\n    * @method init\n    * @param {ABFactory} AB\n    * @param {object} options\n    * @param {string} options.baseURL\n    * @return {Promise}\n    */\n   init(AB, options) {\n      this.AB = AB;\n\n      Config = this.AB.Config.siteConfig();\n      options = options || {};\n      if (options) {\n         this.baseURL = options.baseURL || Config.appbuilder.urlCoreServer;\n         this.numRetries =\n            options.networkNumRetries || Config.appbuilder.networkNumRetries;\n      }\n      return Promise.resolve();\n   }\n\n   //\n   // Interface API\n   //\n   /**\n    * Network.get(options, jobResponse)\n    * perform a GET request back to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   get(params, jobResponse) {\n      params.type = params.type || \"GET\";\n\n      // data sent to params on a \"GET\" request need to be converted to\n      // uri querystring values:\n      var data = params.data || params.params;\n      if (data) {\n         var useThese = [\"string\", \"number\", \"boolean\"];\n         var search = Object.keys(data)\n            .map(function (key) {\n               var val = data[key];\n               if (useThese.indexOf(typeof val) == -1) {\n                  val = JSON.stringify(val);\n               }\n               return key + \"=\" + encodeURIComponent(val);\n            })\n            .join(\"&\");\n\n         var join = \"?\";\n         if (params.url.indexOf(\"?\") > -1) {\n            join = \"&\";\n         }\n         params.url = [params.url, search].join(join);\n      }\n\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.post()\n    * perform an AJAX POST request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   post(params, jobResponse) {\n      params.type = params.type || \"POST\";\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.put()\n    * perform a PUT request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   put(params, jobResponse) {\n      params.type = params.type || \"PUT\";\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.delete()\n    * perform an AJAX DELETE request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   delete(params, jobResponse) {\n      params.type = params.type || \"DELETE\";\n      return this._request(params, jobResponse);\n   }\n\n   ////\n   //// Network Utilities\n   ////\n\n   isNetworkConnected() {\n      return this._network.isNetworkConnected();\n   }\n\n   salSend(params) {\n      return Atomic(params.url, params).then((packet) => {\n         // {json} packet\n         // the response from Atomic is in format:\n         // {data: {…}, xhr: XMLHttpRequest}\n         // we just want to send back our { status:\"\", data:xxx } packet.\n         return packet.data;\n      });\n   }\n\n   /**\n    * _request()\n    * perform the actual AJAX request for this operation.\n    * @param {obj} params  the jQuery.ajax() formatted params\n    * @param {obj} jobRequest  the information about the request's response.\n    * @return {Promise}\n    */\n   _request(params, jobResponse) {\n      // make sure we don't process too many retries:\n      params._retry = params._retry || 0;\n      if (params._retry >= this.numRetries) {\n         var err = new Error(\n            `Too many retries (${this.numRetries}) for ${params.url}`\n         );\n         err.code = \"E_TOMANYRETRIES\";\n         this.AB.notify.developer(err, {\n            context: \"NetworkRest:_request: Too Many Retries\",\n         });\n         // this.AB.Analytics.logError(err);\n         if (jobResponse) {\n            this._network.publishResponse(jobResponse, err);\n         }\n\n         return Promise.reject(err);\n      }\n\n      return new Promise((resolve, reject) => {\n         params.url = params.url || \"/\";\n         if (params.url[0] == \"/\") {\n            params.url = this.baseURL + params.url;\n         }\n\n         params.headers = params.headers || {};\n         if (this.AB.Account.authToken) {\n            params.headers.Authorization = this.AB.Account.authToken;\n         }\n         params.headers[\"Content-type\"] = \"application/json\";\n\n         var tenantID = this.AB.Tenant.id();\n         if (tenantID) {\n            params.headers[\"tenant-token\"] = tenantID;\n         }\n\n         // params.timeout = params.timeout || 6000;\n\n         if (this.isNetworkConnected()) {\n            params.method = params.method || params.type;\n            params.timeout = 6000; // ??\n            params.data = params.data || params.params;\n            delete params.params;\n\n            this.salSend(params)\n               .then((packet) => {\n                  // TODO: check if packet.status == \"error\"\n                  // and then .publishResponse() as an error\n\n                  //\n                  var data = packet;\n                  if (jobResponse) {\n                     this._network.publishResponse(jobResponse, null, data);\n                  }\n                  resolve(data);\n               })\n               .catch((err) => {\n                  // err.status\n                  // err.statusText\n                  // err.responseText\n                  // err.message  {socket}\n                  // err.stack    {socket}\n\n                  // if this is a network connection error, send the attempt again:\n                  if (\n                     err.statusText == \"Request timeout\" ||\n                     (err.message && err.message.indexOf(\"disconnected\") > -1)\n                  ) {\n                     //// Network Error: conneciton refused, access denied, etc...\n                     this.AB.Analytics.log(\n                        \"NetworkRest._request():network connection error detected. Trying again\"\n                     );\n\n                     params._retry++;\n\n                     // retry the attempt:\n                     this._request(params)\n                        .then((data) => {\n                           // console.log('--- timeout.then():',data);\n                           this.AB.warn(\n                              \"*** NetworkRest._request().then(): attempt resolved.\"\n                           );\n                           resolve(data);\n                        })\n                        .catch((_err) => {\n                           this.AB.notify.developer(_err, {\n                              message: \"*** NetworkRest._request().catch(): retry failed:\",\n                           });\n                           reject(_err);\n                        });\n\n                     return;\n                  } else {\n                     // Else attempt to emit() some common Error types for\n                     // additional Platform Handling.\n                     if (err.status == 403) {\n                        this.emit(\"error.badAuth\", err);\n                     } else if (err.status >= 400 && err.status < 500) {\n                        this.emit(\"error.badRequest\", err);\n                     } else if (err.status >= 500) {\n                        this.emit(\"error.badServer\", err);\n                     }\n                  }\n\n                  var packet = null;\n                  if (err.responseText) {\n                     try {\n                        packet = JSON.parse(err.responseText);\n                     } catch (e) {}\n                  }\n                  // if this is an req.ab.error() response:\n                  if (packet && packet.status == \"error\") {\n                     // check if REAUTH Error:\n                     if (packet.id == 5 || packet.code == \"E_REAUTH\") {\n                        this._network.emit(\"reauth\");\n                        return;\n                     }\n\n                     this.AB.notify.developer(packet, {\n                        context:\n                           \"NetworkRest:_request:Error returned from Server (req.ab.error())\",\n                        data: packet.data,\n                     });\n                     // this.AB.Analytics.logError(packet.data);\n                     // this.AB.error(packet.data);\n                     if (jobResponse) {\n                        this._network.publishResponse(\n                           jobResponse,\n                           packet,\n                           null\n                        );\n                     }\n                     return reject(packet.data);\n                  } else {\n                     // unknown/unexpected error:\n                     var error = new Error(\n                        `${err.status} ${err.statusText || err.message}: ${\n                           params.method\n                        } ${params.url}`\n                     );\n                     error.response = err.responseText;\n                     error.text = err.statusText;\n                     error.err = err;\n                     error.url = `${params.method} ${params.url}`;\n                     this.AB.notify.developer(error, {\n                        context:\n                           \"NetworkRest:_request:Unknown Error returned from server\",\n                     });\n                     // this.AB.Analytics.logError(error);\n                     // this.AB.error(error);\n                     if (jobResponse) {\n                        this._network.publishResponse(jobResponse, error);\n                     }\n                     return reject(error);\n                  }\n               });\n         } else {\n            // now Queue this request params.\n            this.AB.Analytics.log(\n               \"NetworkRest:_request(): Network is offline. Queuing request.\"\n            );\n            this._network\n               .queue(params, jobResponse)\n               .then(() => {\n                  resolve({ status: \"queued\" });\n               })\n               .catch(reject);\n         }\n      });\n   }\n\n   /**\n    * resend()\n    * processes messages that were queued due to network connectivity\n    * issues.\n    * @param {obj} params  the jQuery.ajax() formatted params\n    * @param {obj} jobRequest  the information about the request's response.\n    * @return {Promise}\n    */\n   resend(params, jobResponse) {\n      // var op = params.type.toLowerCase();\n      return this._request(params, jobResponse);\n   }\n}\n\nexport default NetworkRest;\n","/*\n * NetworkRest.js\n * The base Networking class.  This class is responsible for job submissions\n * and outlines the basic Network interface.\n */\n\nimport NetworkRest from \"./NetworkRest\";\nimport * as Sentry from \"@sentry/browser\";\n\nconst listSocketEvents = [\n   // NOTE: ABFactory.definitionXXX() will manage emitting these\n   // events internally:\n   // \"ab.abdefinition.create\",\n   // \"ab.abdefinition.update\",\n   // \"ab.abdefinition.delete\",\n   \"ab.datacollection.create\",\n   \"ab.datacollection.update\",\n   \"ab.datacollection.stale\",\n   \"ab.datacollection.delete\",\n   \"ab.inbox.create\",\n   \"ab.inbox.update\",\n   // \"ab.object.update\",\n];\n// {array}\n// The io.socket.* events we are listening for that relate to our datacollection\n// maintainence.\n\nclass NetworkRestSocket extends NetworkRest {\n   constructor(parent) {\n      // {Network} parent\n\n      super(parent);\n\n      this.isRealTime = true;\n      // {bool}\n      // does this Network type support RealTime updates. (socket = true);\n\n      // Pass the io.socket.on(*) events to our AB factory.\n      listSocketEvents.forEach((ev) => {\n         io.socket.on(ev, (data) => {\n            // check if the ev contains 'datacollection'\n            // and do a single normalizeData() on the incoming data here\n            // before sending it off to be processed.\n            if (ev.indexOf(\"ab.datacollection\") > -1) {\n               let values = data.data;\n               if (values) {\n                  let obj = this.AB.objectByID(data.objectId);\n                  if (obj) {\n                     let model = obj.model();\n                     if (ev != \"ab.datacollection.delete\") {\n                        let jobID = this.AB.jobID();\n                        console.log(`${jobID} : ${ev}:normalization begin`);\n                        let timeFrom = performance.now();\n                        model.normalizeData(data.data);\n                        let timeTo = performance.now();\n                        console.log(\n                           `${jobID} : ${ev}:normalization end:  ${\n                              timeTo - timeFrom\n                           }ms`\n                        );\n                     }\n                  }\n               }\n            }\n            this.AB.emit(ev, data);\n         });\n      });\n   }\n\n   //\n   // Interface API\n   //\n\n   ////\n   //// Network Utilities\n   ////\n\n   isNetworkConnected() {\n      return io.socket.isConnected();\n   }\n\n   // Wrap the call with senrty span for perfromance tracking\n   async salSend(params) {\n      const shortRoute =\n         params.url.match(/https?:\\/\\/[^/]+(\\/.+)/)?.[1] ?? params.url;\n      return Sentry.startSpan(\n         { name: shortRoute, op: \"websocket.client\" },\n         async () => await this._salSend(params)\n      );\n   }\n\n   _salSend(params) {\n      return new Promise((resolve, reject) => {\n         params.method = params.method.toLowerCase();\n\n         io.socket.request(params, (data, jwres) => {\n            // {json} data\n            // the data response from the request\n            // {json} jwres\n            // A JSON WebSocket Response object.\n            //    {json} jwres.headers :  header values\n            //    {int}  jwres.statusCode : http response code\n            //    {json} jwres.body === resData\n\n            // if this is an  error\n            if (jwres.statusCode >= 400) {\n               // Our NetworkRest.error( err ) should be in this format:\n               // err.status\n               // err.statusText\n               // err.responseText\n\n               var errStr = jwres.error ? jwres.error.toString() : jwres.body;\n\n               var err = new Error(`Socket Error: ${errStr}`);\n               err.status = jwres.statusCode;\n               err.statusText = errStr;\n               err.responseText = jwres.body;\n\n               // on RequestTimeout:\n               // err.statusText == \"Request timeout\"\n\n               reject(err);\n            } else {\n               // some errors like socket disconnected return an Error for data\n               if (data instanceof Error) {\n                  reject(data);\n                  return;\n               }\n\n               if (typeof data == \"string\") {\n                  data = JSON.parse(data);\n               }\n\n               // Got a JSON response but was the service response an error?\n               // this would be a strange case where the .statusCode < 400\n               if (data.status && data.status == \"error\") {\n                  // make sure to reject an err.responseText = data\n                  reject({\n                     status: jwres.statusCode,\n                     responseText: JSON.Stringify(data),\n                  });\n               }\n               // Success!\n               else {\n                  resolve(data);\n               }\n            }\n         });\n      });\n   }\n}\n\nexport default NetworkRestSocket;\n","/*\n * Network.js\n * A network manager for interfacing with our AppBuilder server.\n */\nvar EventEmitter = require(\"events\").EventEmitter;\nimport NetworkRest from \"./NetworkRest\";\nimport NetworkRestSocket from \"./NetworkRestSocket\";\n// import NetworkRelay from \"./NetworkRelay\";\n\nclass Network extends EventEmitter {\n   constructor() {\n      super();\n\n      this.setMaxListeners(0);\n      // we'll have > 10 for sure!\n\n      this.queueLock = null;\n      // {Lock} .queueLock\n      // our semaphore for coordinating our access to our local storage.\n\n      this._config = null;\n      this._network = null;\n      // {NetworkRelay | NetworkRest | NetworkSocket}\n      // the underlying Network connection object actually performing the\n      // communications with the Server.\n      // Which one is specified in the config.appbuilder.networkType setting\n\n      this._queueCount = 0;\n      // {int} _queueCount\n      // the # of network operations currently queued, pending Network\n      // reconnect.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n\n      this.queueLock = new this.AB.Lock();\n\n      this._config = this.AB.Config.siteConfig();\n      if (this._config) {\n         switch (this._config.appbuilder.networkType) {\n            case \"relay\":\n               // this._network = new NetworkRelay();\n               break;\n\n            case \"socket\":\n               this._network = new NetworkRestSocket(this);\n               break;\n\n            case \"rest\":\n            default:\n               this._network = new NetworkRest(this);\n               break;\n         }\n\n         return this._network.init(AB);\n      } else {\n         console.error(\"??? Why No site config ???\");\n      }\n\n      //\n      // Handle reconnections and flushing the Queue:\n      //\n      if (io && io.socket) {\n         // When our Socket reconnects, be sure to flush any pending transactions.\n         io.socket.on(\"connected\", () => {\n            this.queueFlush();\n            if (this.idConnectionCheck) {\n               clearTimeout(this.idConnectionCheck);\n               this.idConnectionCheck = null;\n            }\n         });\n      } else {\n         console.error(\"!!! Network.init() : Did not find io.socket\");\n         window.addEventListener(\"online\", () => this.queueFlush());\n      }\n\n      return Promise.resolve();\n   }\n\n   //\n   // Interface API\n   //\n   /**\n    * Network.isRealTime\n    * indicates wether or not the current network connection supports\n    * RealTime updates.\n    * @return {bool}\n    */\n   get isRealTime() {\n      return this._network.isRealTime;\n   }\n\n   /**\n    * Network.get(options, jobResponse)\n    * perform a GET request back to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   get(...params) {\n      return this._network.get(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.post()\n    * perform an AJAX POST request to the AppBuilder server.\n    * this is a CREATE operation.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   post(...params) {\n      return this._network.post(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.put()\n    * perform a PUT request to the AppBuilder server.\n    * This is for UPDATE/REPLACE operations to data on the server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   put(...params) {\n      return this._network.put(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.delete()\n    * perform an AJAX DELETE request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   delete(...params) {\n      return this._network.delete(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   ////\n   //// Network Utilities\n   ////\n\n   _connectionCheck() {\n      // if (!this.idConnectionCheck) {\n      if (this.isNetworkConnected()) {\n         this.queueFlush().catch(() => {\n            // on an error, we are still having connection issues\n            this.idConnectionCheck = setTimeout(() => {\n               this._connectionCheck();\n            }, 250);\n         });\n         this.idConnectionCheck = null;\n      } else {\n         this.idConnectionCheck = setTimeout(() => {\n            this._connectionCheck();\n         }, 250);\n      }\n      // }\n   }\n\n   /**\n    * @method networkStatus\n    * return the connection type currently registered with the network\n    * plugin.\n    * @return {string}\n    */\n   networkStatus() {\n      return navigator.connection.type;\n   }\n\n   /**\n    * @method isNetworkConnected\n    * return true/false if the device is currently connected to the\n    * internet.\n    * @return {bool}\n    */\n   isNetworkConnected() {\n      // if this is a Web Client and using sails.socket.io\n      if (io && io.socket && io.socket.isConnected) {\n         return io.socket.isConnected();\n      }\n\n      // if this isn't a Cordova Plugin, then return navigator data:\n      if (typeof Connection == \"undefined\") {\n         // NOTE: this technically only detects if we are connected to a\n         // network.  It doesn't guarantee we can communicate across the 'net\n         return navigator.onLine;\n      }\n\n      // Cordova Plugin:\n      return this.networkStatus() != Connection.NONE;\n   }\n\n   /**\n    * publishResponse()\n    * emit the requested response for this network operation.\n    * @param {obj} jobResponse\n    * @param {obj} error\n    * @param {obj} data\n    */\n   publishResponse(jobResponse, error, data) {\n      if (data) {\n         data = this.normalizeData(data);\n      }\n      this.emit(jobResponse.key, jobResponse.context, error, data);\n   }\n\n   normalizeData(data) {\n      // Data returning from our server is wrapped in an outer layer of\n      // information that is for our Networking API.\n      // the outer wrapper should be:\n      // on success :\n      // {\n      //   status: \"success\",\n      //   data:{Data For App}\n      // }\n      // on Error:\n      // {\n      //   status: \"error\",\n      //   id: {int} error code\n      //   ... other data here\n      // }\n\n      // we have physically received a data packet from the server,\n      // but we are informed that our transaction was problematic\n      // (400 level USER problem?)\n      if (data.status === \"error\") {\n         // TODO: review Error procedure here\n         return data;\n      }\n\n      // on success\n      // make sure we return the Application Level Data packet:\n      return data.data || data;\n   }\n\n   ////\n   //// Queued Requests\n   ////\n\n   /**\n    * refQueue()\n    * sub classes can override this for their own separate Queue Data\n    * @return {string}\n    */\n   refQueue() {\n      return \"networkQueue\";\n   }\n\n   /**\n    * queueCount()\n    * return the # of messages in the queue.\n    * @return {int}\n    */\n   queueCount() {\n      return this._queueCount;\n   }\n\n   /**\n    * Adds a request to the outgoing queue.\n    *\n    * @param {object} data\n    * @param {object} jobResponse\n    * @return {Promise}\n    */\n   queue(data, jobResponse) {\n      var refQueue = this.refQueue();\n\n      return new Promise((resolve, reject) => {\n         this.queueLock\n            .acquire()\n            .then(() => {\n               return this.AB.Storage.get(refQueue);\n            })\n            .then((queue) => {\n               queue = queue || [];\n               queue.push({ data, jobResponse });\n               this.AB.log(\n                  `:::: ${queue.length} request${\n                     queue.length > 1 ? \"s\" : \"\"\n                  } queued`\n               );\n               this._queueCount = queue.length;\n               return this.AB.Storage.set(refQueue, queue);\n            })\n            .then(() => {\n               this.emit(\"queued\");\n               // if we are not already polling the network, start\n               if (!this.idConnectionCheck) {\n                  this._connectionCheck();\n               }\n               this.queueLock.release();\n               resolve();\n            })\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message: \"Error while queueing data\",\n               });\n               this.AB.Analytics.logError(err);\n               reject(err);\n\n               this.queueLock.release();\n            });\n      });\n   }\n\n   /**\n    * queueFlush()\n    * Flush the queue and send the contents to the relay server.\n    */\n   queueFlush() {\n      var refQueue = this.refQueue();\n\n      // if we are not connected, then stop\n      if (!this.isNetworkConnected()) {\n         var error = new Error(\"Not connected to the internet.\");\n         error.code = \"E_NOTCONNECTED\";\n         return Promise.reject(error);\n      }\n\n      // otherwise, attempt to flush the queue:\n      return new Promise((resolve, reject) => {\n         this.queueLock\n            .acquire()\n\n            //\n            // Get queue contents\n            //\n            .then(() => {\n               return this.AB.Storage.get(refQueue);\n            })\n\n            //\n            // Send off each queued request\n            //\n            .then((queue) => {\n               // default to [] if not found\n               queue = queue || [];\n\n               // recursively process each pending queue request\n               var processRequest = (cb) => {\n                  if (queue.length == 0) {\n                     cb();\n                  } else {\n                     var entry = queue.shift();\n                     var params = entry.data;\n                     var job = entry.jobResponse;\n                     this._network\n                        .resend(params, job)\n                        .then(() => {\n                           processRequest(cb);\n                        })\n                        .catch((err) => {\n                           // if the err was due to a network connection error\n                           if (err && err.code == \"E_TOMANYRETRIES\") {\n                              cb(err);\n                              return;\n                           }\n                           // otherwise, try the next\n                           processRequest(cb);\n                        });\n                  }\n               };\n\n               return new Promise((res, rej) => {\n                  processRequest((err) => {\n                     if (err) {\n                        rej(err);\n                     } else {\n                        res();\n                     }\n                  });\n               });\n            })\n\n            //\n            // Clear queue contents\n            //\n            .then(() => {\n               this._queueCount = 0;\n               return this.AB.Storage.set(refQueue, []);\n            })\n\n            // release the Lock\n            .then(() => {\n               this.emit(\"queue.synced\");\n               return this.queueLock.release();\n            })\n\n            // all done.\n            .then(() => {\n               resolve();\n            })\n\n            // respond to errors:\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message: \"commAPI queueFlush error\",\n               });\n               this.AB.Analytics.logError(err);\n\n               this.queueLock.release().then(() => {\n                  reject(err);\n               });\n            });\n      });\n   }\n\n   /**\n    * Reset credentials to a blank state.\n    * @return {Promise}\n    */\n   reset() {\n      return Promise.resolve();\n   }\n\n   /**\n    * type()\n    * return the type of network connection we are using.\n    * [\"rest\", \"socket\", \"relay\"]\n    * @return {string}\n    */\n   type() {\n      return this._config.appbuilder.networkType;\n   }\n\n   // uuid() {\n   //    return this.AB.uuid();\n   // }\n\n   getTokens() {\n      // called in appPage.js : openRelayLoader()\n      return {};\n   }\n}\n\nexport default new Network();\n","/*\n * StorageLocal\n *\n * An interface for storing and retrieving Client Side data.  Data stored\n * in StorageLoacal is NOT encrypted.\n *\n * This implementation is based upon the webix.storage.local library.\n * See: https://docs.webix.com/api__refs__storage.local.html\n *\n */\n\nvar EventEmitter = require(\"events\").EventEmitter;\n\nclass StorageLocal extends EventEmitter {\n   constructor() {\n      super();\n\n      this.tenantStorage = null;\n      // {Webix.storage} object.\n      // We divide the storage data according to the tenant we are working\n      // with.  This way Users who can move between different Tenants can\n      // keep their local data separated.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var tenantID = this.AB.Tenant.id();\n      if (!tenantID) {\n         tenantID = \"noAuth\";\n         // \"noAuth\" is considered the tenant on our Login sequence\n         // which should have a minimum of data stored (language maybe?)\n      }\n\n      this.tenantStorage = this.AB.Webix.storage.prefix(\n         tenantID,\n         this.AB.Webix.storage.local\n      );\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   set(key, value /* , options = {} */) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.put(key, value);\n      });\n   }\n\n   get(key /*, options = {} */) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.get(key);\n      });\n   }\n\n   clear(key) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.remove(key);\n      });\n   }\n\n   clearAll() {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.clear();\n      });\n   }\n}\n\nexport default new StorageLocal();\n","var EventEmitter = require(\"events\").EventEmitter;\n\nimport StorageLocal from \"./StorageLocal.js\";\n\nclass Storage extends EventEmitter {\n   constructor() {\n      super();\n\n      this.tenantStorage = null;\n      this._config = null;\n      this._storage = null;\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var config = this.AB.Config.siteConfig();\n      if (config) {\n         if (config.storage && config.storage.encrypted) {\n            console.error(\"TODO: Implement Encrypted Storage\");\n            // this._storage = StorageEncrypted;\n            this._storage = StorageLocal;\n         } else {\n            this._storage = StorageLocal;\n         }\n\n         return this._storage.init(AB);\n      } else {\n         console.error(\"??? Why No site config ???\");\n      }\n\n      return Promise.resolve();\n   }\n\n   set(...params) {\n      return this._storage.set(...params);\n   }\n\n   get(...params) {\n      return this._storage.get(...params);\n   }\n\n   clear(...params) {\n      return this._storage.clear(...params);\n   }\n\n   clearAll(...params) {\n      return this._storage.clearAll(...params);\n   }\n}\n\nexport default new Storage();\n","var EventEmitter = require(\"events\").EventEmitter;\n\nimport Config from \"../config/Config.js\";\n\nclass Tenant extends EventEmitter {\n   constructor() {\n      super();\n\n      this.text = false;\n      this._config = null;\n      this.textClickToEnter = null;\n   }\n\n   init() {\n      var config = Config.tenantConfig();\n      if (config) {\n         // check if we have options that are stored as a string\n         if (\n            typeof config.options === \"string\" ||\n            config.options instanceof String\n         ) {\n            // if we do try to parse them into a JSON object\n            try {\n               config.options = JSON.parse(config.options);\n            } catch (error) {\n               console.error(error);\n            }\n         }\n         this._config = config;\n         this.textClickToEnter = config.options.textClickToEnter;\n      }\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   id() {\n      if (!this._config || this._config.id == \"??\") {\n         return null;\n      }\n      return this._config.id;\n   }\n\n   setting(key, value) {\n      if (this._config) {\n         if (value) {\n            this._config.options[key] = value;\n            return;\n         }\n         return this._config.options[key];\n      }\n   }\n}\n\nexport default new Tenant();\n","/**\n * @class configDesktop\n *\n * Manage our configuration settings for Desktop styles.\n\n */\n\nexport default {\n   // Application List\n   appListRowHeight: 67,\n\n   // button types\n   buttonWidthLarge: 200,\n   buttonWidthMedium: 150,\n   buttonWidthSmall: 100,\n   buttonWidthExtraSmall: 50,\n\n   // tab types\n   tabWidthLarge: 200,\n   tabWidthMedium: 120,\n   tabWidthSmall: 100,\n   tabWidthExtraSmall: 50,\n\n   // column types\n   columnWidthXLarge: 350,\n   columnWidthLarge: 250,\n   columnWidthMedium: 200,\n   columnWidthSmall: 150,\n   columnWidthExtraSmall: 100,\n\n   // spacers\n   xSmallSpacer: 5,\n   smallSpacer: 10,\n   mediumSpacer: 25,\n   largeSpacer: 50,\n   xLargeSpacer: 100,\n   xxLargeSpacer: 200,\n   xxxLargeSpacer: 400,\n   appListSpacerRowHeight: 100,\n   appListSpacerColMinWidth: 100,\n   appListSpacerColMaxWidth: 200,\n   objectWorkspaceColWidth: 20,\n\n   // labels\n   labelWidthSmall: 50,\n   labelWidthMedium: 80,\n   labelWidthLarge: 120,\n   labelWidthXLarge: 150,\n   labelWidthXXLarge: 200,\n   labelWidthXXXLarge: 280,\n   labelWidthCheckbox: 0,\n\n   // show elements on desktop\n   hideMobile: false,\n};\n","/**\n * @class configMobile\n *\n * Manage our configuration settings for mobile styles.\n\n */\n\nexport default {\n   // Application List\n   appListRowHeight: 67,\n\n   // button types\n   buttonWidthLarge: 200,\n   buttonWidthMedium: 150,\n   buttonWidthSmall: 100,\n   buttonWidthExtraSmall: 50,\n\n   // tab types\n   tabWidthLarge: 200,\n   tabWidthMedium: 120,\n   tabWidthSmall: 100,\n   tabWidthExtraSmall: 50,\n\n   // column types\n   columnWidthLarge: 250,\n   columnWidthMedium: 200,\n   columnWidthSmall: 150,\n   columnWidthExtraSmall: 100,\n\n   // spacers\n   xSmallSpacer: 1,\n   smallSpacer: 1,\n   mediumSpacer: 10,\n   largeSpacer: 20,\n   xLargeSpacer: 50,\n   xxLargeSpacer: 100,\n   xxxLargeSpacer: 120,\n   appListSpacerRowHeight: 10,\n   appListSpacerColMinWidth: 1,\n   appListSpacerColMaxWidth: 1,\n   objectWorkspaceColWidth: 1,\n\n   // labels\n   labelWidthSmall: 50,\n   labelWidthMedium: 80,\n   labelWidthLarge: 120,\n   labelWidthXLarge: 120,\n   labelWidthXXLarge: 120,\n   labelWidthCheckbox: 0,\n\n   // hide elements for mobile\n   hideMobile: true,\n};\n","/**\n * @class config\n *\n * Manage our configuration settings.\n */\n\nimport ConfigDesktop from \"./configDesktop\";\nimport ConfigMobile from \"./configMobile\";\nimport Icons from \"./icons\";\n\nexport default {\n   config: function () {\n      // TODO: decide which config file to return here:\n      if (window.innerWidth < 768) {\n         return ConfigMobile;\n      }\n      return ConfigDesktop;\n   },\n   icons: Icons.icons,\n};\n","export default {\n   icons: [\n      \"500px\",\n      \"address-book\",\n      \"address-book-o\",\n      \"address-card\",\n      \"address-card-o\",\n      \"adjust\",\n      \"adn\",\n      \"align-center\",\n      \"align-justify\",\n      \"align-left\",\n      \"align-right\",\n      \"amazon\",\n      \"ambulance\",\n      \"american-sign-language-interpreting\",\n      \"anchor\",\n      \"android\",\n      \"angellist\",\n      \"angle-double-down\",\n      \"angle-double-left\",\n      \"angle-double-right\",\n      \"angle-double-up\",\n      \"angle-down\",\n      \"angle-left\",\n      \"angle-right\",\n      \"angle-up\",\n      \"apple\",\n      \"archive\",\n      \"area-chart\",\n      \"arrow-circle-down\",\n      \"arrow-circle-left\",\n      \"arrow-circle-o-down\",\n      \"arrow-circle-o-left\",\n      \"arrow-circle-o-right\",\n      \"arrow-circle-o-up\",\n      \"arrow-circle-right\",\n      \"arrow-circle-up\",\n      \"arrow-down\",\n      \"arrow-left\",\n      \"arrow-right\",\n      \"arrow-up\",\n      \"arrows\",\n      \"arrows-alt\",\n      \"arrows-h\",\n      \"arrows-v\",\n      \"asl-interpreting\",\n      \"assistive-listening-systems\",\n      \"asterisk\",\n      \"at\",\n      \"audio-description\",\n      \"automobile\",\n      \"backward\",\n      \"balance-scale\",\n      \"ban\",\n      \"bandcamp\",\n      \"bank\",\n      \"bar-chart\",\n      \"bar-chart-o\",\n      \"barcode\",\n      \"bars\",\n      \"bath\",\n      \"bathtub\",\n      \"battery\",\n      \"battery-0\",\n      \"battery-1\",\n      \"battery-2\",\n      \"battery-3\",\n      \"battery-4\",\n      \"battery-empty\",\n      \"battery-full\",\n      \"battery-half\",\n      \"battery-quarter\",\n      \"battery-three-quarters\",\n      \"bed\",\n      \"beer\",\n      \"behance\",\n      \"behance-square\",\n      \"bell\",\n      \"bell-o\",\n      \"bell-slash\",\n      \"bell-slash-o\",\n      \"bicycle\",\n      \"binoculars\",\n      \"birthday-cake\",\n      \"bitbucket\",\n      \"bitbucket-square\",\n      \"bitcoin\",\n      \"black-tie\",\n      \"blind\",\n      \"bluetooth\",\n      \"bluetooth-b\",\n      \"bold\",\n      \"bolt\",\n      \"bomb\",\n      \"book\",\n      \"bookmark\",\n      \"bookmark-o\",\n      \"braille\",\n      \"briefcase\",\n      \"btc\",\n      \"bug\",\n      \"building\",\n      \"building-o\",\n      \"bullhorn\",\n      \"bullseye\",\n      \"bus\",\n      \"buysellads\",\n      \"cab\",\n      \"calculator\",\n      \"calendar\",\n      \"calendar-check-o\",\n      \"calendar-minus-o\",\n      \"calendar-o\",\n      \"calendar-plus-o\",\n      \"calendar-times-o\",\n      \"camera\",\n      \"camera-retro\",\n      \"car\",\n      \"caret-down\",\n      \"caret-left\",\n      \"caret-right\",\n      \"caret-square-o-down\",\n      \"caret-square-o-left\",\n      \"caret-square-o-right\",\n      \"caret-square-o-up\",\n      \"caret-up\",\n      \"cart-arrow-down\",\n      \"cart-plus\",\n      \"cc\",\n      \"cc-amex\",\n      \"cc-diners-club\",\n      \"cc-discover\",\n      \"cc-jcb\",\n      \"cc-mastercard\",\n      \"cc-paypal\",\n      \"cc-stripe\",\n      \"cc-visa\",\n      \"certificate\",\n      \"chain\",\n      \"chain-broken\",\n      \"check\",\n      \"check-circle\",\n      \"check-circle-o\",\n      \"check-square\",\n      \"check-square-o\",\n      \"chevron-circle-down\",\n      \"chevron-circle-left\",\n      \"chevron-circle-right\",\n      \"chevron-circle-up\",\n      \"chevron-down\",\n      \"chevron-left\",\n      \"chevron-right\",\n      \"chevron-up\",\n      \"child\",\n      \"chrome\",\n      \"circle\",\n      \"circle-o\",\n      \"circle-o-notch\",\n      \"circle-thin\",\n      \"clipboard\",\n      \"clock-o\",\n      \"clone\",\n      \"close\",\n      \"cloud\",\n      \"cloud-download\",\n      \"cloud-upload\",\n      \"cny\",\n      \"code\",\n      \"code-fork\",\n      \"codepen\",\n      \"codiepie\",\n      \"coffee\",\n      \"cog\",\n      \"cogs\",\n      \"columns\",\n      \"comment\",\n      \"comment-o\",\n      \"commenting\",\n      \"commenting-o\",\n      \"comments\",\n      \"comments-o\",\n      \"compass\",\n      \"compress\",\n      \"connectdevelop\",\n      \"contao\",\n      \"copy\",\n      \"copyright\",\n      \"creative-commons\",\n      \"credit-card\",\n      \"credit-card-alt\",\n      \"crop\",\n      \"crosshairs\",\n      \"css3\",\n      \"cube\",\n      \"cubes\",\n      \"cut\",\n      \"cutlery\",\n      \"dashboard\",\n      \"dashcube\",\n      \"database\",\n      \"deaf\",\n      \"deafness\",\n      \"dedent\",\n      \"delicious\",\n      \"desktop\",\n      \"deviantart\",\n      \"diamond\",\n      \"digg\",\n      \"dollar\",\n      \"dot-circle-o\",\n      \"download\",\n      \"dribbble\",\n      \"drivers-license\",\n      \"drivers-license-o\",\n      \"dropbox\",\n      \"drupal\",\n      \"edge\",\n      \"edit\",\n      \"eercast\",\n      \"eject\",\n      \"ellipsis-h\",\n      \"ellipsis-v\",\n      \"empire\",\n      \"envelope\",\n      \"envelope-o\",\n      \"envelope-open\",\n      \"envelope-open-o\",\n      \"envelope-square\",\n      \"envira\",\n      \"eraser\",\n      \"etsy\",\n      \"eur\",\n      \"euro\",\n      \"exchange\",\n      \"exclamation\",\n      \"exclamation-circle\",\n      \"exclamation-triangle\",\n      \"expand\",\n      \"expeditedssl\",\n      \"external-link\",\n      \"external-link-square\",\n      \"eye\",\n      \"eye-slash\",\n      \"eyedropper\",\n      \"fa\",\n      \"facebook\",\n      \"facebook-f\",\n      \"facebook-official\",\n      \"facebook-square\",\n      \"fast-backward\",\n      \"fast-forward\",\n      \"fax\",\n      \"feed\",\n      \"female\",\n      \"fighter-jet\",\n      \"file\",\n      \"file-archive-o\",\n      \"file-audio-o\",\n      \"file-code-o\",\n      \"file-excel-o\",\n      \"file-image-o\",\n      \"file-movie-o\",\n      \"file-o\",\n      \"file-pdf-o\",\n      \"file-photo-o\",\n      \"file-picture-o\",\n      \"file-powerpoint-o\",\n      \"file-sound-o\",\n      \"file-text\",\n      \"file-text-o\",\n      \"file-video-o\",\n      \"file-word-o\",\n      \"file-zip-o\",\n      \"files-o\",\n      \"film\",\n      \"filter\",\n      \"fire\",\n      \"fire-extinguisher\",\n      \"firefox\",\n      \"first-order\",\n      \"flag\",\n      \"flag-checkered\",\n      \"flag-o\",\n      \"flash\",\n      \"flask\",\n      \"flickr\",\n      \"floppy-o\",\n      \"folder\",\n      \"folder-o\",\n      \"folder-open\",\n      \"folder-open-o\",\n      \"font\",\n      \"font-awesome\",\n      \"fonticons\",\n      \"fort-awesome\",\n      \"forumbee\",\n      \"forward\",\n      \"foursquare\",\n      \"free-code-camp\",\n      \"frown-o\",\n      \"futbol-o\",\n      \"gamepad\",\n      \"gavel\",\n      \"gbp\",\n      \"ge\",\n      \"gear\",\n      \"gears\",\n      \"genderless\",\n      \"get-pocket\",\n      \"gg\",\n      \"gg-circle\",\n      \"gift\",\n      \"git\",\n      \"git-square\",\n      \"github\",\n      \"github-alt\",\n      \"github-square\",\n      \"gitlab\",\n      \"gittip\",\n      \"glass\",\n      \"glide\",\n      \"glide-g\",\n      \"globe\",\n      \"google\",\n      \"google-plus\",\n      \"google-plus-circle\",\n      \"google-plus-official\",\n      \"google-plus-square\",\n      \"google-wallet\",\n      \"graduation-cap\",\n      \"gratipay\",\n      \"grav\",\n      \"group\",\n      \"h-square\",\n      \"hacker-news\",\n      \"hand-grab-o\",\n      \"hand-lizard-o\",\n      \"hand-o-down\",\n      \"hand-o-left\",\n      \"hand-o-right\",\n      \"hand-o-up\",\n      \"hand-paper-o\",\n      \"hand-peace-o\",\n      \"hand-pointer-o\",\n      \"hand-rock-o\",\n      \"hand-scissors-o\",\n      \"hand-spock-o\",\n      \"hand-stop-o\",\n      \"handshake-o\",\n      \"hard-of-hearing\",\n      \"hashtag\",\n      \"hdd-o\",\n      \"header\",\n      \"headphones\",\n      \"heart\",\n      \"heart-o\",\n      \"heartbeat\",\n      \"history\",\n      \"home\",\n      \"hospital-o\",\n      \"hotel\",\n      \"hourglass\",\n      \"hourglass-1\",\n      \"hourglass-2\",\n      \"hourglass-3\",\n      \"hourglass-end\",\n      \"hourglass-half\",\n      \"hourglass-o\",\n      \"hourglass-start\",\n      \"houzz\",\n      \"html5\",\n      \"i-cursor\",\n      \"id-badge\",\n      \"id-card\",\n      \"id-card-o\",\n      \"ils\",\n      \"image\",\n      \"imdb\",\n      \"inbox\",\n      \"indent\",\n      \"industry\",\n      \"info\",\n      \"info-circle\",\n      \"inr\",\n      \"instagram\",\n      \"institution\",\n      \"internet-explorer\",\n      \"intersex\",\n      \"ioxhost\",\n      \"italic\",\n      \"joomla\",\n      \"jpy\",\n      \"jsfiddle\",\n      \"key\",\n      \"keyboard-o\",\n      \"krw\",\n      \"language\",\n      \"laptop\",\n      \"lastfm\",\n      \"lastfm-square\",\n      \"leaf\",\n      \"leanpub\",\n      \"legal\",\n      \"lemon-o\",\n      \"level-down\",\n      \"level-up\",\n      \"life-bouy\",\n      \"life-buoy\",\n      \"life-ring\",\n      \"life-saver\",\n      \"lightbulb-o\",\n      \"line-chart\",\n      \"link\",\n      \"linkedin\",\n      \"linkedin-square\",\n      \"linode\",\n      \"linux\",\n      \"list\",\n      \"list-alt\",\n      \"list-ol\",\n      \"list-ul\",\n      \"location-arrow\",\n      \"lock\",\n      \"long-arrow-down\",\n      \"long-arrow-left\",\n      \"long-arrow-right\",\n      \"long-arrow-up\",\n      \"low-vision\",\n      \"magic\",\n      \"magnet\",\n      \"mail-forward\",\n      \"mail-reply\",\n      \"mail-reply-all\",\n      \"male\",\n      \"map\",\n      \"map-marker\",\n      \"map-o\",\n      \"map-pin\",\n      \"map-signs\",\n      \"mars\",\n      \"mars-double\",\n      \"mars-stroke\",\n      \"mars-stroke-h\",\n      \"mars-stroke-v\",\n      \"maxcdn\",\n      \"meanpath\",\n      \"medium\",\n      \"medkit\",\n      \"meetup\",\n      \"meh-o\",\n      \"mercury\",\n      \"microchip\",\n      \"microphone\",\n      \"microphone-slash\",\n      \"minus\",\n      \"minus-circle\",\n      \"minus-square\",\n      \"minus-square-o\",\n      \"mixcloud\",\n      \"mobile\",\n      \"mobile-phone\",\n      \"modx\",\n      \"money\",\n      \"moon-o\",\n      \"mortar-board\",\n      \"motorcycle\",\n      \"mouse-pointer\",\n      \"music\",\n      \"navicon\",\n      \"neuter\",\n      \"newspaper-o\",\n      \"object-group\",\n      \"object-ungroup\",\n      \"odnoklassniki\",\n      \"odnoklassniki-square\",\n      \"opencart\",\n      \"openid\",\n      \"opera\",\n      \"optin-monster\",\n      \"outdent\",\n      \"pagelines\",\n      \"paint-brush\",\n      \"paper-plane\",\n      \"paper-plane-o\",\n      \"paperclip\",\n      \"paragraph\",\n      \"paste\",\n      \"pause\",\n      \"pause-circle\",\n      \"pause-circle-o\",\n      \"paw\",\n      \"paypal\",\n      \"pencil\",\n      \"pencil-square\",\n      \"pencil-square-o\",\n      \"percent\",\n      \"phone\",\n      \"phone-square\",\n      \"photo\",\n      \"picture-o\",\n      \"pie-chart\",\n      \"pied-piper\",\n      \"pied-piper-alt\",\n      \"pied-piper-pp\",\n      \"pinterest\",\n      \"pinterest-p\",\n      \"pinterest-square\",\n      \"plane\",\n      \"play\",\n      \"play-circle\",\n      \"play-circle-o\",\n      \"plug\",\n      \"plus\",\n      \"plus-circle\",\n      \"plus-square\",\n      \"plus-square-o\",\n      \"podcast\",\n      \"power-off\",\n      \"print\",\n      \"product-hunt\",\n      \"puzzle-piece\",\n      \"qq\",\n      \"qrcode\",\n      \"question\",\n      \"question-circle\",\n      \"question-circle-o\",\n      \"quora\",\n      \"quote-left\",\n      \"quote-right\",\n      \"ra\",\n      \"random\",\n      \"ravelry\",\n      \"rebel\",\n      \"recycle\",\n      \"reddit\",\n      \"reddit-alien\",\n      \"reddit-square\",\n      \"refresh\",\n      \"registered\",\n      \"remove\",\n      \"renren\",\n      \"reorder\",\n      \"repeat\",\n      \"reply\",\n      \"reply-all\",\n      \"resistance\",\n      \"retweet\",\n      \"rmb\",\n      \"road\",\n      \"rocket\",\n      \"rotate-left\",\n      \"rotate-right\",\n      \"rouble\",\n      \"rss\",\n      \"rss-square\",\n      \"rub\",\n      \"ruble\",\n      \"rupee\",\n      \"s15\",\n      \"safari\",\n      \"save\",\n      \"scissors\",\n      \"scribd\",\n      \"search\",\n      \"search-minus\",\n      \"search-plus\",\n      \"sellsy\",\n      \"send\",\n      \"send-o\",\n      \"server\",\n      \"share\",\n      \"share-alt\",\n      \"share-alt-square\",\n      \"share-square\",\n      \"share-square-o\",\n      \"shekel\",\n      \"sheqel\",\n      \"shield\",\n      \"ship\",\n      \"shirtsinbulk\",\n      \"shopping-bag\",\n      \"shopping-basket\",\n      \"shopping-cart\",\n      \"shower\",\n      \"sign-in\",\n      \"sign-language\",\n      \"sign-out\",\n      \"signal\",\n      \"signing\",\n      \"simplybuilt\",\n      \"sitemap\",\n      \"skyatlas\",\n      \"skype\",\n      \"slack\",\n      \"sliders\",\n      \"slideshare\",\n      \"smile-o\",\n      \"snapchat\",\n      \"snapchat-ghost\",\n      \"snapchat-square\",\n      \"snowflake-o\",\n      \"soccer-ball-o\",\n      \"sort\",\n      \"sort-alpha-asc\",\n      \"sort-alpha-desc\",\n      \"sort-amount-asc\",\n      \"sort-amount-desc\",\n      \"sort-asc\",\n      \"sort-desc\",\n      \"sort-down\",\n      \"sort-numeric-asc\",\n      \"sort-numeric-desc\",\n      \"sort-up\",\n      \"soundcloud\",\n      \"space-shuttle\",\n      \"spinner\",\n      \"spoon\",\n      \"spotify\",\n      \"square\",\n      \"square-o\",\n      \"stack-exchange\",\n      \"stack-overflow\",\n      \"star\",\n      \"star-half\",\n      \"star-half-empty\",\n      \"star-half-full\",\n      \"star-half-o\",\n      \"star-o\",\n      \"steam\",\n      \"steam-square\",\n      \"step-backward\",\n      \"step-forward\",\n      \"stethoscope\",\n      \"sticky-note\",\n      \"sticky-note-o\",\n      \"stop\",\n      \"stop-circle\",\n      \"stop-circle-o\",\n      \"street-view\",\n      \"strikethrough\",\n      \"stumbleupon\",\n      \"stumbleupon-circle\",\n      \"subscript\",\n      \"subway\",\n      \"suitcase\",\n      \"sun-o\",\n      \"superpowers\",\n      \"superscript\",\n      \"support\",\n      \"table\",\n      \"tablet\",\n      \"tachometer\",\n      \"tag\",\n      \"tags\",\n      \"tasks\",\n      \"taxi\",\n      \"telegram\",\n      \"television\",\n      \"tencent-weibo\",\n      \"terminal\",\n      \"text-height\",\n      \"text-width\",\n      \"th\",\n      \"th-large\",\n      \"th-list\",\n      \"themeisle\",\n      \"thermometer\",\n      \"thermometer-0\",\n      \"thermometer-1\",\n      \"thermometer-2\",\n      \"thermometer-3\",\n      \"thermometer-4\",\n      \"thermometer-empty\",\n      \"thermometer-full\",\n      \"thermometer-half\",\n      \"thermometer-quarter\",\n      \"thermometer-three-quarters\",\n      \"thumb-tack\",\n      \"thumbs-down\",\n      \"thumbs-o-down\",\n      \"thumbs-o-up\",\n      \"thumbs-up\",\n      \"ticket\",\n      \"times\",\n      \"times-circle\",\n      \"times-circle-o\",\n      \"times-rectangle\",\n      \"times-rectangle-o\",\n      \"tint\",\n      \"toggle-down\",\n      \"toggle-left\",\n      \"toggle-off\",\n      \"toggle-on\",\n      \"toggle-right\",\n      \"toggle-up\",\n      \"trademark\",\n      \"train\",\n      \"transgender\",\n      \"transgender-alt\",\n      \"trash\",\n      \"trash-o\",\n      \"tree\",\n      \"trello\",\n      \"tripadvisor\",\n      \"trophy\",\n      \"truck\",\n      \"try\",\n      \"tty\",\n      \"tumblr\",\n      \"tumblr-square\",\n      \"turkish-lira\",\n      \"tv\",\n      \"twitch\",\n      \"twitter\",\n      \"twitter-square\",\n      \"umbrella\",\n      \"underline\",\n      \"undo\",\n      \"universal-access\",\n      \"university\",\n      \"unlink\",\n      \"unlock\",\n      \"unlock-alt\",\n      \"unsorted\",\n      \"upload\",\n      \"usb\",\n      \"usd\",\n      \"user\",\n      \"user-circle\",\n      \"user-circle-o\",\n      \"user-md\",\n      \"user-o\",\n      \"user-plus\",\n      \"user-secret\",\n      \"user-times\",\n      \"users\",\n      \"vcard\",\n      \"vcard-o\",\n      \"venus\",\n      \"venus-double\",\n      \"venus-mars\",\n      \"viacoin\",\n      \"viadeo\",\n      \"viadeo-square\",\n      \"video-camera\",\n      \"vimeo\",\n      \"vimeo-square\",\n      \"vine\",\n      \"vk\",\n      \"volume-control-phone\",\n      \"volume-down\",\n      \"volume-off\",\n      \"volume-up\",\n      \"warning\",\n      \"wechat\",\n      \"weibo\",\n      \"weixin\",\n      \"whatsapp\",\n      \"wheelchair\",\n      \"wheelchair-alt\",\n      \"wifi\",\n      \"wikipedia-w\",\n      \"window-close\",\n      \"window-close-o\",\n      \"window-maximize\",\n      \"window-minimize\",\n      \"window-restore\",\n      \"windows\",\n      \"won\",\n      \"wordpress\",\n      \"wpbeginner\",\n      \"wpexplorer\",\n      \"wpforms\",\n      \"wrench\",\n      \"xing\",\n      \"xing-square\",\n      \"y-combinator\",\n      \"y-combinator-square\",\n      \"yahoo\",\n      \"yc\",\n      \"yc-square\",\n      \"yelp\",\n      \"yen\",\n      \"yoast\",\n      \"youtube\",\n      \"youtube-play\",\n      \"youtube-square\",\n   ],\n};\n","import ABFactoryCore from \"./core/ABFactoryCore\";\n\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport { nanoid } from \"nanoid\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport * as Sentry from \"@sentry/browser\";\n\nimport FilterComplex from \"./platform/FilterComplex\";\n\n//\n// Our Common Resources\n//\nimport Config from \"../config/Config.js\";\n// Config : responsible for all the configuration/settings of our instance.\n\nimport Account from \"../resources/Account.js\";\n// Account : manages the current Logged in User and Account information.\n\nimport ClassUI from \"../ui/ClassUI.js\";\n\nimport Dialog from \"./_factory_utils/Dialog.js\";\n// Dialog : common UI dialogs.\n\nimport Multilingual from \"../resources/Multilingual.js\";\n// Multilingual: our interface Labels and language options\n\nimport Network from \"../resources/Network.js\";\n// Network: our interface for communicating to our server\n\nimport Storage from \"../resources/Storage.js\";\n// Storage: manages our interface for local storage\n\nimport ABViewManager from \"./core/ABViewManagerCore\";\n\nimport Tenant from \"../resources/Tenant.js\";\n// Tenant: manages the Tenant information of the current instance\n\nimport UISettings from \"./uiSettings/config.js\";\n// UISettings: detailed settings for our common UI elements\n\nimport Webix from \"../js/webix/webix.min.js\";\n// NOTE: moved to require() because using import with webix.js\n// really messed things up!\n// var Webix = require(\"../js/webix/webix.js\");\n\nclass ABValidator {\n   constructor(AB) {\n      this.AB = AB;\n      this.errors = [];\n   }\n\n   addError(name, message) {\n      this.errors.push({ name: name, message: message });\n   }\n\n   pass() {\n      return this.errors.length == 0;\n   }\n\n   fail() {\n      return this.errors.length > 0;\n   }\n\n   toValidationObject() {\n      var obj = {\n         error: \"E_VALIDATION\",\n         invalidAttributes: {},\n      };\n\n      var attr = obj.invalidAttributes;\n\n      this.errors.forEach((e) => {\n         attr[e.name] = attr[e.name] || [];\n         attr[e.name].push(e);\n      });\n\n      return obj;\n   }\n\n   updateForm(form) {\n      var vObj = this.toValidationObject();\n      this.AB.Validation.isFormValidationError(vObj, form);\n   }\n\n   updateGrid(rowID, grid) {\n      var vObj = this.toValidationObject();\n      this.AB.Validation.isGridValidationError(vObj, rowID, grid);\n   }\n}\n\n//\n// AppBuilder Objects\n//\n\nclass ABFactory extends ABFactoryCore {\n   constructor(definitions) {\n      super(definitions);\n\n      // Common Reference to Configuration Values\n      this.Config = Config;\n\n      //\n      // Resources\n      //\n      this.Account = Account;\n      this.Dialog = Dialog;\n      this.Multilingual = Multilingual;\n      this.Network = Network;\n      this.Storage = Storage;\n      this.Tenant = Tenant;\n      this.Webix = Webix;\n\n      // Plugin Classes\n      this.ClassUI = ClassUI;\n\n      // additional Class definitions\n      this.Class.FilterComplex = FilterComplex;\n      this.Class.ABViewManager = ABViewManager;\n\n      // Temp placeholders until Resources are implemented:\n      this.Analytics = {\n         log: () => {},\n         logError: () => {},\n      };\n      this.Lock = class Lock {\n         constructor() {}\n\n         acquire() {\n            return Promise.resolve();\n         }\n         release() {\n            return Promise.resolve();\n         }\n      };\n\n      this.UISettings = UISettings;\n\n      this.Validation = {\n         validator: () => {\n            return new ABValidator(this);\n         },\n\n         errorSailsCleanup: function (error) {\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               // dig down to sails provided error object:\n               if (\n                  error.error &&\n                  error.error == \"E_UNKNOWN\" &&\n                  error.raw &&\n                  error.raw.length > 0\n               ) {\n                  error = error.raw[0];\n               }\n\n               // drill down to the embedded .err object if it exists\n               if (error.err) {\n                  error = error.err;\n               }\n\n               // if this is from our server response:\n               if (\n                  error.data &&\n                  error.data.error &&\n                  error.data.error == \"E_VALIDATION\"\n               ) {\n                  error = error.data;\n               }\n            }\n\n            return error;\n         },\n\n         /**\n          * @function AB.Validation.isFormValidationError\n          *\n          * scans the given error to see if it is a sails' response about an invalid\n          * value from one of the form elements.\n          *\n          * @codestart\n          * var form = $$('formID');\n          * var values = form.getValues();\n          * model.attr(values);\n          * model.save()\n          * .fail(function(err){\n          *     if (!OP.Form.isFormValidationError(err, form)) {\n          *         OP.error.log('Error saving current model ()', {error:err, values:values});\n          *     }\n          * })\n          * .then(function(newData){\n          *\n          * });\n          * @codeend\n          *\n          * @param {obj} error\n          *        the error response object\n          * @param {obj} form\n          *        the webix form instance (or reference)\n          * @return {bool}\n          *         true if error was about a form element.\n          *         false otherwise.\n          */\n         isFormValidationError: function (error, form) {\n            var hasFocused = false;\n            // {bool} have we set focus to form component?\n\n            // if we have an error object:\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               error = this.errorSailsCleanup(error);\n\n               //// Now process the error object\n               ////\n               if (\n                  (error.error && error.error == \"E_VALIDATION\") ||\n                  (error.code && error.code == \"E_VALIDATION\")\n               ) {\n                  var attrs = error.invalidAttributes;\n                  if (attrs) {\n                     var wasForm = false;\n                     for (var attr in attrs) {\n                        // if this is a field in the form:\n                        if (form.elements[attr]) {\n                           var errors = attrs[attr];\n                           var msg = [];\n                           errors.forEach(function (err) {\n                              msg.push(err.message);\n                           });\n\n                           // set the invalid error message\n                           form.markInvalid(attr, msg.join(\", \"));\n\n                           // set focus to the 1st form element we mark:\n                           if (!hasFocused) {\n                              form.elements[attr].focus();\n                              hasFocused = true;\n                           }\n\n                           wasForm = true;\n                        }\n                     }\n\n                     if (wasForm) {\n                        return true;\n                     }\n                  }\n               }\n            }\n\n            // if we missed updating our form with an error\n            // this was not a validation error so return false\n            return false;\n         },\n\n         /**\n          * @method AB.Validation.isGridValidationError\n          *\n          * scans the given error to see if it is a sails' response about an invalid\n          * value from one of our grid columns.\n          *\n          * @codestart\n          * var grid = $$('myGrid');\n          * model.attr(values);\n          * model.save()\n          * .fail(function(err){\n          *     if (!OP.Validation.isGridValidationError(err, editor, grid)) {\n          *         OP.error.log('Error saving current model ()', {error:err, values:values});\n          *     }\n          * })\n          * .then(function(newData){\n          *\n          * });\n          * @codeend\n          *\n          * @param {Error} error\n          *        the error response object\n          * @param {integer} row\n          *        the row id of the Grid to update.\n          * @param {webix.datatable} Grid\n          *        the webix grid instance (or reference)\n          * @return {bool}\n          *         true if error was about a grid column.\n          *         false otherwise.\n          */\n         isGridValidationError: function (error, row, Grid) {\n            // if we have an error object:\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               error = this.errorSailsCleanup(error);\n\n               //// Now process the error object\n               ////\n               if (\n                  (error.error && error.error == \"E_VALIDATION\") ||\n                  (error.code && error.code == \"E_VALIDATION\")\n               ) {\n                  var attrs = error.invalidAttributes;\n                  if (attrs) {\n                     var wasGrid = false;\n                     for (var attr in attrs) {\n                        Grid.addCellCss(row, attr, \"webix_invalid\");\n                        Grid.addCellCss(row, attr, \"webix_invalid_cell\");\n\n                        var msg = [];\n                        attrs[attr].forEach((e) => {\n                           msg.push(e.message);\n                        });\n\n                        webix.alert({\n                           text: attr + \": \" + msg.join(\", \"),\n                        });\n\n                        wasGrid = true;\n                     }\n\n                     Grid.refresh(row);\n                     Grid.clearSelection();\n\n                     if (wasGrid) {\n                        return true;\n                     }\n                  }\n               }\n            }\n\n            // if we missed updating our Grid with an error\n            // this was not a validation error so return false\n            return false;\n         },\n      };\n\n      // TODO: make sure \"error\" s are handled and sent to logs\n      // this.on(\"error\", ()=>{ Analytics.error })\n\n      this.Definitions = {};\n      // {obj} the provided interface for working with the ABDefinition table.\n      // NOTE: on the web client, we simply perform web API calls to perform\n      // the actions.  These are defined below.\n\n      this.on(\"error\", (err) => {\n         // this simply prevents thrown errors if there are no listeners.\n         console.error(err);\n      });\n\n      this._plugins = [];\n      // {array} of loaded Plugin.applications.\n\n      this._pendingNetworkRequests = {};\n      // {hash}   uuid : {Promise}\n      // convert our definitionsXXXX() operations to be Relay/offline compatible.\n      // if a queued operation is sent after a web browser refresh, then\n      // we will NOT have a pending promise to .resolve()/.reject()\n\n      this.Network.on(\"definition.create\", (context, err, fullDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: fullDef.id,\n            data: fullDef,\n         };\n         this.emit(\"ab.abdefinition.create\", pkt);\n\n         let newDef = this.definitionNew(fullDef);\n         pending?.resolve(newDef);\n      });\n\n      this.Network.on(\"definition.update\", (context, err, serverDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            if (err.toString().indexOf(\"Not Found\") > -1) {\n               return this.definitionCreate(context.values)\n                  .then(pending?.resolve)\n                  .catch(pending?.reject);\n            }\n            // log the error\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         this._definitions[context.id] = serverDef;\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: serverDef.id,\n            data: serverDef,\n         };\n         this.emit(\"ab.abdefinition.update\", pkt);\n\n         pending?.resolve(serverDef);\n      });\n\n      this.Network.on(\"definition.delete\", (context, err, serverDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            // log the error\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         delete this._definitions[context.id];\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: context.id,\n            data: serverDef,\n         };\n         this.emit(\"ab.abdefinition.delete\", pkt);\n\n         pending?.resolve();\n      });\n\n      //\n      // Rules\n      //\n      const platformRules = {\n         /**\n          * @method toDate\n          *\n          * @param {string} dateText\n          * @param {Object} options - {\n          *                               format: \"string\",\n          *                               ignoreTime: boolean\n          *                            }\n          * @return {Date}\n          */\n         toDate: (dateText = \"\", options = {}) => {\n            if (!dateText) return;\n\n            if (options.ignoreTime) dateText = dateText.replace(/T.*/, \"\");\n\n            let result = options.format\n               ? moment(dateText, options.format)\n               : moment(dateText);\n\n            let supportFormats = [\n               \"YYYY-MM-DD\",\n               \"YYYY/MM/DD\",\n               \"DD/MM/YYYY\",\n               \"MM/DD/YYYY\",\n               \"DD-MM-YYYY\",\n               \"MM-DD-YYYY\",\n            ];\n\n            supportFormats.forEach((format) => {\n               if (!result || !result.isValid())\n                  result = moment(dateText, format);\n            });\n\n            return new Date(result);\n         },\n\n         /**\n          * @method toDateFormat\n          *\n          * @param {Date} date\n          * @param {Object} options - {\n          *           format: \"string\",\n          *           localeCode: \"string\"\n          *         }\n          *\n          * @return {string}\n          */\n         toDateFormat: (date, options) => {\n            if (!date) return \"\";\n\n            let momentObj = moment(date);\n\n            if (options.localeCode) momentObj.locale(options.localeCode);\n\n            return momentObj.format(options.format);\n         },\n\n         /**\n          * @method subtractDate\n          *\n          * @param {Date} date\n          * @param {number} number\n          * @param {string} unit\n          *\n          * @return {Date}\n          */\n         subtractDate: (date, number, unit) => {\n            return moment(date).subtract(number, unit).toDate();\n         },\n\n         /**\n          * @method addDate\n          *\n          * @param {Date} date\n          * @param {number} number\n          * @param {string} unit\n          *\n          * @return {Date}\n          */\n         addDate: (date, number, unit) => {\n            return moment(date).add(number, unit).toDate();\n         },\n      };\n      (Object.keys(platformRules) || []).forEach((k) => {\n         this.rules[k] = platformRules[k];\n      });\n   }\n\n   /**\n    * init()\n    * prepare the ABFactory for operation. This includes parsing the\n    * definitions into useable objects, preparing the System Resources, etc.\n    * @return {Promise}\n    */\n   async init() {\n      //\n      // Prepare our Resources First\n      //\n      var allInits = [];\n\n      allInits.push(this.Account.init(this));\n      allInits.push(this.Multilingual.init(this));\n      allInits.push(this.Network.init(this));\n      allInits.push(this.Tenant.init(this));\n\n      await Promise.all(allInits);\n      await this.Storage.init(this);\n      var data = await this.Storage.get(\"local_settings\");\n      this._localSettings = data || {};\n\n      //\n      // Real Time Update Handlers\n      //\n\n      // new ABDefinition created:\n      this.on(\"ab.abdefinition.create\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         this._definitions[pkt.id] = pkt.data;\n         this.definitionSync(\"created\", pkt.id, pkt.data);\n      });\n\n      // ABDefinition updated:\n      this.on(\"ab.abdefinition.update\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         this._definitions[pkt.id] = pkt.data;\n         this.definitionSync(\"updated\", pkt.id, pkt.data);\n      });\n\n      // ABDefinition delete:\n      this.on(\"ab.abdefinition.delete\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         delete this._definitions[pkt.id];\n         this.definitionSync(\"destroyed\", pkt.id, pkt.data);\n      });\n\n      return super.init();\n\n      // return Promise.all(allInits)\n      //    .then(() => {\n      //       // some Resources depend on the above to be .init() before they can\n      //       // .init() themselves.\n      //       return this.Storage.init(this).then(() => {\n      //          return this.Storage.get(\"local_settings\").then((data) => {\n      //             this._localSettings = data || {};\n      //          });\n      //       });\n      //    })\n      //    .then(() => {\n      //       //\n      //       // RealTime Updates of our ABDefinitions\n      //       //\n\n      //       // new ABDefinition created:\n      //       this.on(\"ab.abdefinition.create\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          this._definitions[pkt.id] = pkt.data;\n      //          this.definitionSync(\"created\", pkt.id, pkt.data);\n      //       });\n\n      //       // ABDefinition updated:\n      //       this.on(\"ab.abdefinition.update\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          this._definitions[pkt.id] = pkt.data;\n      //          this.definitionSync(\"updated\", pkt.id, pkt.data);\n      //       });\n\n      //       // ABDefinition delete:\n      //       this.on(\"ab.abdefinition.delete\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          delete this._definitions[pkt.id];\n      //          this.definitionSync(\"destroyed\", pkt.id, pkt.data);\n      //       });\n\n      //       return super.init();\n      //    });\n   }\n\n   /**\n    * definiitonCreate(def)\n    * create a new ABDefinition\n    * @param {obj} def\n    *        the value hash of the new definition entry\n    * @return {Promise}\n    *        resolved with a new {ABDefinition} for the entry.\n    */\n   async definitionCreate(def) {\n      // we will set our uuid\n      if (typeof def.id == \"undefined\") {\n         def.id = this.uuid();\n         def.json.id = def.id;\n      }\n\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.create\",\n            context: {\n               uuid,\n            },\n         };\n         this.Network.post(\n            {\n               url: `/definition/create`,\n               data: def,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to CREATE definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to CREATE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionCreate()\",\n               message,\n               def,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionDestroy(id)\n    * delete an ABDefinition\n    * @param {string} id\n    *        the uuid of the ABDefinition to delete\n    * @return {Promise}\n    */\n   async definitionDestroy(id) {\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.delete\",\n            context: {\n               id,\n               uuid,\n            },\n         };\n         this.Network.delete(\n            {\n               url: `/definition/${id}`,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to DESTROY definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to DELETE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionDestroy()\",\n               message,\n               id,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionUpdate(id, def)\n    * update an existing ABDefinition\n    * @param {string} id\n    *        the uuid of the ABDefinition to update.\n    * @param {obj} values\n    *        the value hash of the new definition values\n    * @return {Promise}\n    *        resolved with a new {ABDefinition} for the entry.\n    */\n   async definitionUpdate(id, values) {\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.update\",\n            context: {\n               id,\n               uuid,\n               values,\n            },\n         };\n         this.Network.put(\n            {\n               url: `/definition/${id}`,\n               data: values,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to UPDATE definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to UPDATE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionUpdate()\",\n               message,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionsParse()\n    * include the incoming definitions into our ABFactory. These new\n    * definitions will replace any existing ones with the same .id.\n    * @param {array[ABDefinitioin]} defs\n    *     the incoming array of ABDefinitions to parse.\n    * @return {Promise}\n    */\n   // definitionsParse(defs = []) {\n   //    if (!Array.isArray(defs)) {\n   //       defs = [defs];\n   //    }\n\n   //    // store/replace the incoming definitions\n   //    // 1st: insert ALL our definitions internally\n   //    defs.forEach((d) => {\n   //       this._definitions[d.id] = d;\n   //    });\n   //    // 2nd: Now we can then go through and signal the \"updates\"\n   //    // and the related objects can find their dependent definitions.\n   //    defs.forEach((d) => {\n   //       this.definitionSync(\"updated\", d.id, d);\n   //    });\n\n   //    return Promise.resolve();\n   // }\n\n   /**\n    * notify()\n    * will send alerts to a group of people. These alerts are usually about\n    * configuration errors, or software problems.\n    * @param {string} domain\n    *     which group of people we are sending a notification to.\n    * @param {Error} error\n    *     An error object generated at the point of issue.\n    * @param {json} info\n    *     Additional related information concerning the issue.\n    */\n   notify(domain, error, info) {\n      const scope = new Sentry.Scope();\n      // Mark builder alerts as lower level in sentry\n      if (domain == \"builder\") scope.setLevel(\"warning\");\n      scope.setTag(\"domain\", domain);\n      scope.setContext(\"info\", info);\n      Sentry.captureException(error, scope);\n      console.error(error);\n      console.error(info);\n   }\n\n   plugins() {\n      return this._plugins;\n   }\n   pluginLoad(p) {\n      this._plugins.push(p);\n   }\n\n   //\n   // Utilities\n   //\n   alert(options) {\n      Webix.alert(options);\n   }\n\n   cloneDeep(value) {\n      return _.cloneDeep(value);\n   }\n\n   error(message, ...rest) {\n      var emitData = {\n         message: `ABFactory[${this.Tenant.id()}]:${message.toString()}`,\n      };\n\n      console.error(emitData.message);\n      if (message instanceof Error) {\n         emitData.error = message;\n         // this dumps the error.stack\n         console.error(message);\n      }\n\n      if (rest && rest.length > 0) {\n         rest.forEach((r) => {\n            if (r instanceof Error) {\n               emitData.error = r;\n               // this dumps the error.stack\n               console.error(r);\n            }\n\n            if (typeof r == \"object\") {\n               for (var k in r) {\n                  emitData[k] = r[k];\n                  console.error(k, r[k]);\n               }\n            }\n         });\n      }\n      this.emit(\"error\", emitData);\n   }\n\n   jobID() {\n      return nanoid();\n   }\n\n   Label() {\n      return (...params) => {\n         return this.Multilingual.label(...params);\n      };\n   }\n\n   localSettings(key, value) {\n      if (typeof value == \"undefined\") {\n         // this is a getter:\n         return this._localSettings[key];\n      } else {\n         // setting a value:\n         this._localSettings[key] = value;\n         return this.Storage.set(`local_settings`, this._localSettings);\n      }\n   }\n\n   log(message, ...rest) {\n      console.log(message);\n      rest.forEach((r) => {\n         console.log(r);\n      });\n   }\n\n   /**\n    * @method rules.isUUID\n    * evaluate a given value to see if it matches the format of a uuid\n    * @param {string} key\n    * @return {boolean}\n    */\n   isUUID(key) {\n      var checker = RegExp(\n         \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\",\n         \"i\"\n      );\n      return checker.test(key);\n   }\n\n   merge(...params) {\n      return _.merge(...params);\n   }\n\n   orderBy(...params) {\n      return _.orderBy(...params);\n   }\n\n   uniq(...params) {\n      return _.uniq(...params);\n   }\n\n   kebabCase(...params) {\n      return _.kebabCase(...params);\n   }\n\n   sumBy(...params) {\n      return _.sumBy(...params);\n   }\n\n   meanBy(...params) {\n      return _.meanBy(...params);\n   }\n\n   maxBy(...params) {\n      return _.maxBy(...params);\n   }\n\n   minBy(...params) {\n      return _.minBy(...params);\n   }\n\n   uuid() {\n      return uuidv4();\n   }\n\n   warn(message, ...rest) {\n      console.warn(message);\n      rest.forEach((r) => {\n         console.warn(r);\n      });\n   }\n\n   isString(...params) {\n      return _.isString(params);\n   }\n}\n\nexport default ABFactory;\n","/**\n * ABApplicationCore\n *\n * This is the core ABApplication class that manages the common operations\n * of an ABApplication across platforms.\n *\n * It's primary responsibility is to decode a given set of attributes into\n * a working instance of an ABApplication that can return instances of\n * it's defined sub objects.\n *\n * Platform Specific versions of those objects should be defined in a peer\n * directory named platform. These versions of the objects should override\n * these Core objects with platform specific methods of operation (like\n * .save()).\n *\n * Initially your target application should load your platform/ABApplication.js\n * file, which will include this file and sub class it.\n *\n * However, this file will include the remaining files from your platform/*\n * versions.\n */\n\n// webpack can handle 'require()' statements, but node can't handle import\n// so let's use require():\nconst ABViewManager = require(\"../platform/ABViewManager\");\nvar ABMLClass = require(\"../platform/ABMLClass\");\n\nfunction toBool(val) {\n   if (typeof val == \"undefined\") {\n      return false;\n   }\n\n   if (val === \"\" || val === \"false\" || val === \"0\") {\n      return false;\n   }\n\n   if (val === \"true\" || val === \"1\") {\n      return true;\n   }\n\n   return val;\n}\n\nmodule.exports = class ABApplicationCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\", \"description\"], AB);\n\n      // attributes should be in format:\n      // {\n      //    id:##,\n      //    json:{},\n      //    name:\"XYZ\"\n      // }\n      attributes.json = attributes.json || {};\n\n      // ABApplication Attributes\n      this.id = attributes.id;\n      // {string} uuid\n\n      this.type = attributes.type || \"application\";\n      // {string} .type\n      // the ABDefinition.type of this object.\n\n      this.json = attributes.json;\n      if (typeof this.json == \"string\") this.json = JSON.parse(this.json);\n      // {obj} .json\n      // the full settings of this ABApplication\n\n      this.json[\"versionData\"] = attributes.json?.versionData || {\n         versionNumber: \"1.0.0\",\n         changeLog: {\n            \"1.0.0\": {\n               author: \"N/A\",\n               version: \"1.0.0\",\n               keepVersion: 0,\n               commitMessage: \"Initial Version\",\n               timestamp: new Date().toISOString(),\n            },\n         },\n      };\n\n      if (typeof this.json.versionData == \"string\")\n         this.json.versionData = JSON.parse(this.json.versionData);\n      // {obj} .json\n      // the full version log data of this ABApplication\n\n      this.name = attributes.name || this.json.name || \"\";\n      // {string} .name\n      // the hard coded name of this ABDefinition Object, not to be confused\n      // with the .label.  The .name is created at design time and is a text\n      // reference for this object.\n\n      this.icon = attributes.icon || \"fa-rocket\";\n      // {string} .icon\n      // this is a reference to a font awesome icon including the `fa-`\n      // example `fa-child` should be stored for the `child` icon to be used\n      // if user wants to get creative they can add more to this field following\n      // these examples https://fontawesome.com/v4/examples/\n\n      this.isSystemObject = toBool(attributes.isSystemObject);\n      // {bool} .isSystemObject\n      // is this one of the integrated System Objects used by our framework?\n      // Some ABApplications and ABObjects are central to the running of the\n      // AppBuilder site.  They are marked with .isSystemObject = true;  It\n      // requires the role \"System Designer\" in order to edit/modify them.\n\n      this.roleAccess = attributes.roleAccess || [];\n      if (!Array.isArray(this.roleAccess)) {\n         this.roleAccess = [this.roleAccess];\n      }\n      this.roleAccess = this.roleAccess.filter((r) => r);\n      // {array}\n      // the {ABSiteRole.id}s of the roles allowed to work with this\n      // ABApplication. (see .isAccessManaged for more info)\n\n      this.isAccessManaged = JSON.parse(attributes.isAccessManaged || false);\n      // {bool} .isAccessManaged\n      // does this Application imploy the more sophisticated  Access\n      // permissions, or the simpler Role access permissions.\n      // {true} : allows an administrator to set which role can View|Edit|Delete\n      //          elements of an application.\n      // {false}: indicates users having one of the .roleAccess values can have\n      //          full access to this application\n\n      this.accessManagers = attributes.accessManagers;\n      if (typeof this.accessManagers == \"string\")\n         this.accessManagers = JSON.parse(this.accessManagers);\n      // {??} .accessManagers\n      // if .isAccessManaged == true, then .accessManagers contain the definitions\n      // of the detailed access permissions.\n\n      this.isTranslationManaged = JSON.parse(\n         attributes.isTranslationManaged || false\n      );\n      this.translationManagers = attributes.translationManagers;\n      if (typeof this.translationManagers == \"string\")\n         this.translationManagers = JSON.parse(this.translationManagers);\n\n      this.isTutorialManaged = JSON.parse(\n         attributes.isTutorialManaged || false\n      );\n      this.tutorialManagers = attributes.tutorialManagers;\n      if (typeof this.tutorialManagers == \"string\")\n         this.tutorialManagers = JSON.parse(this.tutorialManagers);\n\n      this.hintIDs = attributes.json.hintIDs || [];\n      // {array} .hintIDs\n      // All the {ABHint.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABHint}s are included or excluded from\n      // this app.\n\n      this.objectIDs = attributes.json.objectIDs || [];\n      // {array} .objectIDs\n      // All the {ABObject.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABObject}s are included or excluded from this app.\n\n      this.queryIDs = attributes.json.queryIDs || [];\n      // {array} .queryIDs\n      // All the {ABObjectQuery.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABObjectQueries}s are included or excluded from\n      // this app.\n\n      this.datacollectionIDs = attributes.json.datacollectionIDs || [];\n      // {array} .datacollectionIDs\n      // All the {ABDataCollection.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABDataCollection}s are included or excluded from\n      // this app.\n\n      // import all our {ABViewPage}s\n      let newPages = [];\n      (attributes.json.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            newPages.push(this.pageNew(def));\n         } else {\n            this.emit(\n               \"warning\",\n               `App[${this.id}] is referenceing an unknown Page[${id}]`,\n               {\n                  appID: this.id,\n                  pageID: id,\n               }\n            );\n            // console.error(\n            //    `App[${this.id}] is referenceing an unknown Page[${id}]`\n            // );\n         }\n      });\n      this._pages = newPages;\n      // {array} ._pages\n      // an array of all the {ABViewPages} this ABApplication offers as\n      // interfaces for working with our Data.\n      // ABViewPages operate within the confines of an ABApplication so\n      // they are created/stored/accessed from within an ABApplication\n\n      (attributes.json.processIDs || []).forEach((pID) => {\n         var p = this.AB.processByID(pID);\n         if (!p) {\n            this.emit(\n               \"warning\",\n               `Application is referencing an unknown process.`,\n               { appID: this.id, processID: pID }\n            );\n         }\n      });\n\n      this.processIDs = attributes.json.processIDs || [];\n      // {array} .processIDs\n      // an array of all the {ABProcess.id}s referenced by this Application.\n\n      // Object List Settings\n      attributes.json.objectListSettings =\n         attributes.json.objectListSettings || {};\n      this.objectListSettings = this.objectListSettings || {};\n      this.objectListSettings.isOpen = JSON.parse(\n         attributes.json.objectListSettings.isOpen || false\n      );\n      this.objectListSettings.searchText =\n         attributes.json.objectListSettings.searchText || \"\";\n      this.objectListSettings.sortDirection =\n         attributes.json.objectListSettings.sortDirection || \"asc\";\n      this.objectListSettings.isGroup = JSON.parse(\n         attributes.json.objectListSettings.isGroup || false\n      );\n\n      // let the MLClass now process the translations:\n      // transition issues:\n      attributes.translations =\n         attributes.translations || attributes.json.translations;\n\n      super.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABApplication is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   isAccessibleForRoles(roles) {\n      var foundRole = false;\n\n      // if we are on the basic Role assignments:\n      if (!this.isAccessManaged) {\n         (roles || []).forEach((r) => {\n            if (this.roleAccess.indexOf(r.uuid || r) > -1) {\n               foundRole = true;\n            }\n         });\n         return foundRole;\n      }\n\n      // isAccessManaged has been set, so 2 kinds of ppl can\n      // see this App\n      // 1) an AccessManager\n      if (parseInt(this.accessManagers.useRole)) {\n         (roles || []).forEach((r) => {\n            if (this.accessManagers.role.indexOf(r.uuid || r) > -1) {\n               foundRole = true;\n            }\n         });\n      }\n\n      // stop here if found.\n      if (foundRole) return foundRole;\n\n      // 2) someone who has a role that can see one of it's pages.\n      // scan each Page of this Application\n      (this.pages() || []).forEach((p) => {\n         // check to see if that page.isAccessibleForRoles()\n         if (p.isAccessibleForRoles(roles)) {\n            foundRole = true;\n         }\n      });\n      return foundRole;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      let versionData = this.json.versionData;\n\n      this.json = super.toObj();\n\n      this.json.name = this.name;\n\n      this.json.versionData = versionData;\n\n      this.json.objectIDs = this.objectIDs;\n\n      this.json.objectListSettings = this.objectListSettings;\n\n      this.json.hintIDs = this.hintIDs;\n\n      this.json.queryIDs = this.queryIDs;\n\n      this.json.datacollectionIDs = this.datacollectionIDs;\n\n      this.json.pageIDs = (this._pages || []).map((p) => p.id);\n\n      this.json.processIDs = this.processIDs || [];\n\n      // // for each MobileApp: compile to json\n      // var currApps = [];\n      // this._mobileApps.forEach((app) => {\n      //    currApps.push(app.toObj())\n      // })\n      // this.json.mobileApps = currApps;\n\n      return {\n         id: this.id,\n         type: this.type || \"application\",\n         name: this.name,\n         icon: this.icon,\n         isSystemObject: this.isSystemObject,\n         json: this.json,\n         roleAccess: this.roleAccess,\n         translations: this.json.translations,\n         isAccessManaged: this.isAccessManaged,\n         isTranslationManaged: this.isTranslationManaged,\n         isTutorialManaged: this.isTutorialManaged,\n         accessManagers: this.accessManagers,\n         translationManagers: this.translationManagers,\n         tutorialManagers: this.tutorialManagers,\n      };\n   }\n\n   ///\n   /// Mobile Apps\n   ///\n\n   /**\n    * @method mobileApps()\n    *\n    * return an array of all the ABObjectQueries for this ABApplication.\n    *\n    * @param {fn} filter   a filter fn to return a set of ABObjectQueries that\n    *                this fn returns true for.\n    * @return {array}   array of ABObjectQueries\n    */\n   mobileApps(filter = () => true) {\n      return (this._mobileApps || []).filter(filter);\n   }\n\n   ///\n   /// Datacollections\n   ///\n\n   ///\n   /// Data collections\n   ///\n\n   // datacollectionNew(values) {\n   //    return new ABDataCollectionCore(values, this);\n   // }\n\n   datacollectionsExcluded(filter = () => true) {\n      return this.AB.datacollections((o) => {\n         return this.datacollectionIDs.indexOf(o.id) == -1;\n      }).filter(filter);\n   }\n\n   datacollectionsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.datacollections((o) => {\n         return this.datacollectionIDs.indexOf(o.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Objects\n   ///\n\n   objectsExcluded(filter = () => true) {\n      return this.AB.objects((o) => {\n         return this.objectIDs.indexOf(o.id) == -1;\n      }).filter(filter);\n   }\n\n   objectsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.objects((o) => {\n         return this.objectIDs.indexOf(o.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Hints\n   ///\n\n   hintsExcluded(filter = () => true) {\n      return this.AB.hints((h) => {\n         return this.hintIDs.indexOf(h.id) == -1;\n      }).filter(filter);\n   }\n\n   hintsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.hints((h) => {\n         return this.hintIDs.indexOf(h.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   /**\n    * @method connectedObjects()\n    *\n    * return an array of all the connected ABObjects for a given ABObject.\n    *\n    * @param {string} id\n    *        an ID of an ABObject\n    * @return {array}   array of options for webix select\n    *         [ {id, value}, ... ]\n    */\n   connectedObjects(id) {\n      console.error(\n         \"ABApplicationCore.connectedObjects(): who is calling this?\"\n      );\n\n      if (id == \"\") return [];\n\n      // Determine the object from the ID\n      var myObj = this.AB.objectByID(id);\n\n      // Get all the connected Fields for that object\n      var connectedFields = myObj.connectFields();\n      // Store the related fields associatively inside their related Objects ID\n      var connectedObj = {};\n      connectedFields.forEach((f) => {\n         connectedObj[f.settings.linkObject] = this.AB.objectByID(\n            f.settings.linkObject\n         );\n      });\n      // Look up the objects by their ID and push them in an options array\n      var linkedObjects = [];\n      Object.keys(connectedObj).forEach(function (key /*, index */) {\n         linkedObjects.push({\n            id: this[key].id,\n            value: this[key].label,\n         });\n      }, connectedObj /* = this. inside fn */);\n\n      return linkedObjects;\n   }\n\n   /**\n    * @method connectedFields()\n    * return an array of all the connected ABFields for a given ABObject\n    * @param {string} currObjID\n    *        an ID of the current ABObject\n    * @param {string} linkedObjectID\n    *        an ID of the linked ABObject\n    * @return {array}\n    *        array of options for webix select\n    */\n   connectedFields(currObjID, linkedObjectID) {\n      console.error(\"!!! Who is calling this?\");\n\n      // Determine the object from the currObjID\n      var myObj = this.AB.objectByID(currObjID);\n\n      // Get all the connected Fields for our object that match the linkedObjectID\n      var connectedFields = myObj.connectFields(\n         (f) => f.settings.linkObject == linkedObjectID\n      );\n      // Build an arry of options for the webix select\n      var linkedFields = [];\n      connectedFields.forEach((f) => {\n         linkedFields.push({ id: f.columnName, value: f.label });\n      });\n\n      return linkedFields;\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    * return an array of all the ABViewPages for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABViewPages that this fn\n    *        returns true for.\n    * @param {boolean} deep\n    *        flag to search in sub pages\n    * @return {array}\n    *        array of ABViewPages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._pages || this._pages.length < 1) return result;\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         result = this._pages.filter(filter);\n\n         if (result.length < 1) {\n            this._pages.forEach((p) => {\n               var subPages = p.pages(filter, deep);\n               if (subPages && subPages.length > 0) {\n                  result = subPages;\n               }\n            });\n         }\n      }\n      // find root pages\n      else {\n         result = (this._pages || []).filter(filter);\n      }\n\n      return result;\n   }\n\n   ///\n   /// Processes\n   ///\n\n   /**\n    * @method processes()\n    * return an array of all the ABProcesses for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABProcesses that\n    *        this fn returns true for.\n    * @return {array}\n    *        array of ABProcesses\n    */\n   processes(filter = () => true) {\n      return this.AB.processes((p) => {\n         return this.processIDs.indexOf(p.id) > -1;\n      }).filter(filter);\n   }\n\n   hasProcess(process) {\n      if (process && process.id) {\n         return this.processIDs.indexOf(process.id) > -1;\n      } else {\n         return false;\n      }\n   }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    * return an array of all the Views for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of Views that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of Views\n    */\n   views(filter) {\n      var result = [];\n      var views = [];\n      var pages = [];\n\n      if (\n         (!this._pages || this._pages.length < 1) &&\n         (!this._views || this._views.length < 1)\n      )\n         return result;\n\n      function lookDeep(view) {\n         if (view._pages && view._pages.length) {\n            view._pages.forEach((p) => {\n               // check the page views recusively\n               var pageViews = p.views(filter, true);\n               // if there was a match store it\n               if (pageViews && pageViews.length > 0) {\n                  result = pageViews;\n               }\n               // if no match move on to the subpages\n               if (result.length < 1) {\n                  // loop through each subpage recursively\n                  var subPages = p.pages(filter, true);\n                  // if there was a match store it\n                  if (subPages && subPages.length > 0) {\n                     result = subPages;\n                  }\n                  if (result.length < 1) {\n                     lookDeep(p);\n                  }\n               }\n            });\n         }\n      }\n\n      // look at views recursively\n      if (filter) {\n         // look at views recursively (views can have subviews and so on)\n         if (this._views) {\n            views = this._views.filter(filter);\n\n            if (views.length < 1) {\n               this._views.forEach((v) => {\n                  var subViews = v.views(filter, true);\n                  if (subViews && subViews.length > 0) {\n                     views = subViews;\n                  }\n               });\n            }\n         }\n\n         // if no views of the root page match now look at the sub pages and their views\n         if (views.length) {\n            result = views;\n         } else {\n            // check the first level subpages\n            result = this._pages.filter(filter);\n\n            // if no match check each pages views and subpages\n            if (result.length < 1) {\n               // looping through pages\n               lookDeep(this);\n            }\n         }\n      }\n      // find all views\n      else {\n         // recusively gather all views on this view\n         if (this._views) {\n            views = this._views;\n            if (views.length) {\n               views.forEach((v) => {\n                  var subViews = v.views(() => true, true);\n                  if (subViews && subViews.length) {\n                     views = views.concat(subViews);\n                  }\n               });\n            }\n         }\n\n         // recursively gather all pages and their views\n         if (this._pages) {\n            pages = this._pages;\n            if (pages.length) {\n               pages.forEach((p) => {\n                  // grab all views on this page\n                  var pageViews = p.views(() => true, true);\n                  if (pageViews && pageViews.length) {\n                     views = views.concat(pageViews);\n                  }\n                  // grab all subpages on this page\n                  var subPages = p.pages(() => true, true);\n                  if (subPages && subPages.length) {\n                     pages = pages.concat(subPages);\n                     subPages.forEach((sub) => {\n                        var subViews = sub.views(() => true, true);\n                        if (subViews && subViews.length) {\n                           views = views.concat(subViews);\n                        }\n                     });\n                  }\n               });\n            }\n         }\n\n         result = result.concat(pages, views);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewAll()\n    * return a list of all the {ABViewxxx} classes available.\n    * @return {array} of ABView objects\n    */\n   viewAll(fn = () => true) {\n      return ABViewManager.allViews(fn);\n   }\n\n   ///\n   /// Queries\n   ///\n\n   /**\n    * queriesExcluded()\n    * return a list of ABObjectQuery(s) that are not included in this\n    * ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which queries to return.\n    * @return {array}\n    */\n   queriesExcluded(filter = () => true) {\n      return this.AB.queries((q) => {\n         return this.queryIDs.indexOf(q.id) == -1;\n      }).filter(filter);\n   }\n\n   /**\n    * queriesIncluded()\n    * return a list of ABObjectQuery(s) that are included in this\n    * ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which queries to return.\n    * @param {fn} [sort] function to sort by, default is .label\n    * @return {array}\n    */\n   queriesIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.queries((q) => {\n         return this.queryIDs.indexOf(q.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Roles\n   ///\n\n   /**\n    * @method roles()\n    * return an array of all the ABRole for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which roles to return.\n    * @return {array}   array of ABRole\n    */\n   // roles(filter = () => true) {\n   //    return (this.role || []).filter(filter);\n   // }\n\n   /**\n    * @method urlResolve()\n    * given an object pointer, return the specific object referenced.\n    * pointer must start with a '#', use '/' as delimiters, and either\n    * reference an object's .id, or an object's .property.\n    * for example:\n    * #/_objects   : resolves to the array of ._objects pointed to by this\n    *               application.\n    * #/_objects/[object.id] : reolved to a specific object\n    * #/_objects/[object.id]/_fields/[field.id] : resolves to a specific data field\n    *               refereced by object.id.\n    *\n    * @param {string} pointer : the string url referencing the object you want\n    *                       to retrieve.\n    * @return {obj}\n    */\n   urlResolve(pointer) {\n      var parts = pointer.split(\"/\");\n\n      var parseStep = (obj, steps) => {\n         // we're done.  obj is what we are looking for:\n         if (steps.length == 0) {\n            return obj;\n         }\n\n         // pull the next step key:\n         var key = steps.shift();\n\n         // special case, \"#\" makes sure we are talking about the\n         // Application object\n         if (key == \"#\") {\n            return parseStep(this, steps);\n         }\n\n         // if obj is an [], then key should be an .id reference to\n         // lookup:\n         if (Array.isArray(obj)) {\n            obj = obj.filter(function (o) {\n               return o.id == key;\n            })[0];\n            return parseStep(obj, steps);\n         }\n\n         // otherwise obj should be an {} and key a property:\n         if (obj && obj[key]) {\n            return parseStep(obj[key], steps);\n         }\n\n         if (key == \"_objects\") {\n            console.error(new Error(\"REFACTOR: old objectBy url reference:\"));\n\n            // This can be gotten from our AB\n            var id = steps.shift();\n            return parseStep(this.AB.objectByID(id), steps);\n         }\n\n         // if we got here, there is an error!\n         // console.error('!!! failed to lookup url:'+pointer);\n         console.error(\"!!! failed to lookup url:\" + pointer);\n         return null;\n      };\n\n      return parseStep(this, parts);\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer for this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      // NOTE: if we need to expand this to search across\n      // applications, then add in this application.id here:\n      if (acrossApp) return \"#/\" + this.id + \"/\";\n      else return \"#/\";\n   }\n\n   /**\n    * @method urlObject()\n    * return the url pointer for objects in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlObject(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_objects/\";\n   }\n\n   /**\n    * @method urlView()\n    * return the url pointer for pages in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPage(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_pages/\";\n   }\n\n   /**\n    * @method urlQuery()\n    * return the url pointer for queries in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlQuery(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_queries/\";\n   }\n\n   ///\n   ///   Object List Settings\n   ///\n   get objectlistIsOpen() {\n      return this.objectListSettings.isOpen;\n   }\n\n   set objectlistIsOpen(isOpen) {\n      this.objectListSettings.isOpen = isOpen;\n   }\n\n   get objectlistSearchText() {\n      return this.objectListSettings.searchText;\n   }\n\n   set objectlistSearchText(searchText) {\n      this.objectListSettings.searchText = searchText;\n   }\n\n   get objectlistSortDirection() {\n      return this.objectListSettings.sortDirection;\n   }\n\n   set objectlistSortDirection(sortDirection) {\n      this.objectListSettings.sortDirection = sortDirection;\n   }\n\n   get objectlistIsGroup() {\n      return this.objectListSettings.isGroup;\n   }\n\n   set objectlistIsGroup(isGroup) {\n      this.objectListSettings.isGroup = isGroup;\n   }\n\n   ///\n   /// Instance generators\n   ///\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABViewPage that is tied to this\n    * ABApplication.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      // make sure this is an ABViewPage description\n      // values.key = ABViewPageCore.common().key;\n      values.key = \"page\";\n\n      return ABViewManager.newView(values, this, null);\n   }\n\n   /**\n    * @method pageByID()\n    * return pages from the given {id}\n    * @param {string} id\n    *        the uuid of the page to return.\n    * @return {ABViewPage}\n    */\n   pageByID(id) {\n      return this.pages((f) => f.id == id)[0];\n   }\n\n   /**\n    * @method viewNew()\n    *\n    * return an instance of a new (unsaved) ABView.\n    *\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return ABViewManager.newView(values, application, parent);\n   }\n\n   ///\n   /// Utilities\n   ///\n\n   cloneDeep(/* object */) {\n      var errorDepreciated = new Error(\n         \"ABApplicationCore.cloneDeep(): Depreciated!  Use AB.cloneDeep() instead.\"\n      );\n      throw errorDepreciated;\n\n      // return JSON.parse(JSON.stringify(object));\n   }\n};\n","/*\n * ABDataCollection\n * Defines a set of data that other parts of the Application can work with.\n * it can point to either an ABObject, or ABObjectQuery, and can have an\n * filter, and sorts defined.\n *\n *\n *\n */\n// const ABEmitter = require(\"../platform/ABEmitter\");\nconst ABMLClass = require(\"../platform/ABMLClass\");\n\n// const ABObject = require(\"../platform/ABObject\");\n// const ABObjectQuery = require(\"../platform/ABObjectQuery\");\n// const RowFilter = require(\"../platform/RowFilter\");\n\nvar DefaultValues = {\n   id: \"uuid\",\n   label: \"\", // label\n   object: {}, // json of ABObject\n   query: {}, // json of ABObjectQuery\n   settings: {\n      datasourceID: \"\", // id of ABObject or ABObjectQuery\n      linkDatacollectionID: \"\", // id of ABDatacollection\n      linkFieldID: \"\", // id of ABField\n      followDatacollectionID: \"\", // id of ABDatacollection\n      objectWorkspace: {\n         filterConditions: {\n            // array of filters to apply to the data table\n            glue: \"and\",\n            rules: [],\n         },\n         sortFields: [], // array of columns with their sort configurations\n      },\n      loadAll: false,\n      // preventPopulate: false, depreciating in favour of populate\n      populate: true, // true/false or array of columns to populate.\n      isQuery: false, // if true it is a query, otherwise it is a object.\n\n      fixSelect: \"\", // _CurrentUser, _FirstRecord, _FirstRecordDefault or row id\n\n      syncType: 1, // 1 (Server), 2 (Client)\n   },\n};\n\nconst QueuedOperations = [];\n// {array} of operations that we want to perform but allow some space\n// between operations.\nvar _queueTimer = null;\n\nfunction runQueue() {\n   // if (!_queueTimer) {\n   //    _queueTimer = setInterval(() => {\n   //       runQueue();\n   //    }, 20);\n   // }\n   if (QueuedOperations.length == 0) {\n      // stop\n      // clearInterval(_queueTimer);\n      _queueTimer = null;\n      return;\n   }\n   var op = QueuedOperations.shift();\n   op.fn();\n   _queueTimer = setTimeout(runQueue, op.timeout);\n}\nfunction queueOperation(fn, timeout = 20) {\n   QueuedOperations.push({ fn, timeout });\n   if (!_queueTimer) {\n      runQueue();\n   }\n}\n\nmodule.exports = class ABDataCollectionCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      attributes = attributes || {};\n\n      // this.application = application;\n\n      this.fromValues(attributes);\n\n      this.__dataCollection = this._dataCollectionNew([]);\n      // {DataCollection}\n      // This is a working instance of a DataCollection, not an {ABDatacCollection}\n      // On web/mobile this is a webix component.  So keep the creation as part of\n      // the platform/ABDataCollection implementation.\n\n      // Set filter value\n      this.refreshFilterConditions();\n\n      this.__bindComponentIds = [];\n      this.__flexComponentIds = [];\n\n      // refresh a data collection\n      // this.init();\n\n      // mark data status does not be initialized\n      this._dataStatus = this.dataStatusFlag.notInitial;\n\n      this.__filterCond = null;\n      // {QueryCondition}\n      // A passed in Query Condition for filtering our DataCollection.\n      // This value is ANDed with our normal filter conditions.\n   }\n\n   /**\n    * contextKey()\n    *\n    * return a unique key that represents data from/for this type of object.\n    *\n    * used when creating Network jobs and needing to be notified when a job\n    * is complete.  We send a contextKey() to the Network job and then listen\n    * for it to know when it is complete.\n    * @return {string}\n    */\n   static contextKey() {\n      return \"datacollection\";\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id;\n      // {string} .id\n      // the uuid of this ABDataCollection Definition.\n\n      this.name = values.name || null;\n      // {string} .name\n      // the unchanging name of this ABDataCollection\n\n      this.type = values.type || \"datacollection\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      values.settings = values.settings || {};\n      this.settings = this.settings || {};\n      // {obj} .settings\n      // the specific operation values for this ABDataCollection\n\n      this.settings.linkDatacollectionID =\n         values.settings.linkDatacollectionID ||\n         DefaultValues.settings.linkDatacollectionID;\n      // {string} .settings.linkDaacollectionID\n      // the uuid of another ABDataCollection that provides the link/trigger\n      // for filtering the values of this ABDataCollection.\n\n      this.settings.linkFieldID =\n         values.settings.linkFieldID || DefaultValues.settings.linkFieldID;\n      // {string} .settings.linkFieldID\n      // the uuid of the ABDataField of the .linkDatacollection ABObject\n      // whose value is the trigger value for this ABDataCollection\n\n      this.settings.followDatacollectionID =\n         values.settings.followDatacollectionID ||\n         DefaultValues.settings.followDatacollectionID;\n      // {string} .settings.followDatacollectionID\n      // the uuid of another ABDataCollection that provides the follow cursor data collection\n\n      this.settings.objectWorkspace = values.settings.objectWorkspace || {\n         filterConditions:\n            DefaultValues.settings.objectWorkspace.filterConditions,\n         sortFields: DefaultValues.settings.objectWorkspace.sortFields,\n      };\n      // {obj} .settings.objectWorkspace\n      // the default settings for what is shown in the AppBuilder's\n      // DataCollection workspace\n\n      this.settings.fixSelect = values.settings.fixSelect;\n\n      // Convert to boolean\n      this.settings.loadAll = JSON.parse(\n         values.settings.loadAll || DefaultValues.settings.loadAll\n      );\n      // {bool} .settings.loadAll\n      // do we load all the data at one time? false == load by pages.\n\n      this.settings.isQuery = JSON.parse(\n         values.settings.isQuery || DefaultValues.settings.isQuery\n      );\n      // {bool} .settings.isQuery\n      // is the data source for this ABDataCollection based upon an\n      // ABObjectQuery?\n\n      this.settings.populate = (() => {\n         // First check .populate\n         if (values.settings.populate != undefined) {\n            return values.settings.populate;\n            // Then check legacy .preventPopulate\n         } else if (\n            values.settings.preventPopulate == true ||\n            values.settings.preventPopulate == \"1\"\n         ) {\n            return false;\n         } else return DefaultValues.settings.populate;\n      })();\n      // {bool | array} populate\n      // Control whcih related connections to populate. Default, true, populates\n      // all connections. False loads no connnections. Also accepts an array of\n      // column names to load specefic connections.\n\n      // Convert to number\n      this.settings.syncType = parseInt(\n         values.settings.syncType || DefaultValues.settings.syncType\n      );\n      // {int} .settings.syncType\n      // how is the data between this ABDataCollection and it's\n      // .datasource synced?\n\n      this.__datasource = null;\n      // {obj} .__datasource\n      // the reference to the ABObject/ABObjectQuery that this ABDataCollection\n      // is based off of.\n\n      this.settings.datasourceID =\n         values.settings.datasourceID || DefaultValues.settings.datasourceID;\n      // {string} .settings.datasourceID\n      // the uuid of the .__datasource object to use\n\n      // now lookup and reference the proper datasource\n      if (this.settings.datasourceID) {\n         // check for an ABObject\n         var obj = this.AB.objectByID(this.settings.datasourceID);\n         if (!obj) {\n            // this must be an ABObjectQuery then ...\n            obj = this.AB.queryByID(this.settings.datasourceID);\n         }\n\n         if (obj) {\n            this.__datasource = obj;\n            this.settings.isQuery = obj.type === \"query\";\n            if (this.settings.isQuery) {\n               if (this.__datasource.isGroup) {\n                  if (!this.__treeCollection)\n                     this.__treeCollection = this._treeCollectionNew();\n                  // {TreeCollection}\n                  // This is a webix TreeCollection (or similar)\n                  // keep it's implementation as part of the platform\n\n                  this.__isGroup = true;\n               }\n            }\n         } else {\n            console.error(\n               `ABDataCollection[${this.name}][${this.id}] unable to find datasource [${this.settings.datasourceID}]`\n            );\n         }\n      }\n\n      // // Populate data source: ABObject or ABObjectQuery\n      // if (values.query && values.query[0]) {\n      //    this.__datasource = new ABObjectQuery(\n      //       values.query[0],\n      //       this.application\n      //    );\n      //    this.settings.isQuery = true;\n\n      //    if (this.__datasource.isGroup) {\n      //       if (!this.__treeCollection)\n      //          this.__treeCollection = this._treeCollectionNew();\n\n      //       this.__isGroup = true;\n      //    }\n      // } else if (values.object && values.object[0]) {\n      //    this.__datasource = new ABObject(values.object[0], this.application);\n      //    this.settings.isQuery = false;\n      // }\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj(); // untranslate the object\n\n      return {\n         id: this.id,\n         name: this.name || this.label,\n         type: this.type || \"datacollection\",\n         settings: this.AB.cloneDeep(this.settings || {}),\n         translations: obj.translations,\n      };\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABDatacollection with it's parent\n    *\n    *\n    * @return {Promise}\n    *      .resolve( {this} )\n    */\n   async save() {\n      if (!this.id) {\n         this.label = this.label || this.name;\n      }\n      await super.save();\n      return this;\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABDatacollection\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      var removeFromApplications = () => {\n         return new Promise((next, err) => {\n            // this.AB.applications().then((apps) => {\n\n            const apps = this.AB.applications();\n            // NOTE: apps is a webix datacollection\n\n            var allRemoves = [];\n\n            var appsWithObject = apps.filter((a) => {\n               return a.datacollectionsIncluded((o) => o.id == this.id);\n            });\n            appsWithObject.forEach((app) => {\n               allRemoves.push(app.datacollectionRemove(this));\n            });\n\n            return Promise.all(allRemoves).then(next).catch(err);\n            // });\n         });\n      };\n\n      return Promise.resolve()\n         .then(() => {\n            return removeFromApplications();\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @property $dc\n    * return the underlying webix datacollection\n    * @return {webix.datacollection}\n    */\n   get $dc() {\n      return this.__dataCollection;\n   }\n\n   /**\n    * @property datasource\n    * return a object of this component.\n    *\n    * @return {ABObject|ABObjectQuery}\n    */\n   get datasource() {\n      if (!this.__datasource) {\n         if (this.id && this.name) {\n            // occassionally we have blank DCs (without .id or .name)\n            // and I don't want to see errors for those\n            var err = new Error(\n               `DataCollection[${this.name}][${this.id}] missing reference datasource`\n            );\n            this.AB.notify(\"builder\", err, { datacollection: this.toObj() });\n         }\n         return null;\n      }\n      var obj = this.AB.objectByID(this.__datasource.id);\n      if (!obj) {\n         obj = this.AB.queryByID(this.__datasource.id);\n      }\n      return obj;\n   }\n\n   /**\n    * @property datasource\n    * set a object to data collection\n    *\n    * @param {ABObject|ABObjectQuery} object\n    */\n   set datasource(object) {\n      this.__datasource = object;\n\n      this.refreshFilterConditions();\n   }\n\n   /**\n    * @property sourceType\n    * return type of source.\n    *\n    * @return {string} - 'object' or 'query'\n    */\n   get sourceType() {\n      return this.settings.isQuery ? \"query\" : \"object\";\n   }\n\n   /**\n    * @method datacollectionLink\n    * return a ABDatacollection that link of this.\n    *\n    * @return {ABDatacollection}\n    */\n   get datacollectionLink() {\n      if (!this.AB) return null;\n\n      return this.AB.datacollectionByID(this.settings.linkDatacollectionID);\n   }\n\n   /**\n    * @property fieldLink\n    * return a ABFieldConnect field that link of this.\n    *\n    * @return {ABFieldConnect}\n    */\n   get fieldLink() {\n      let object = this.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.linkFieldID);\n   }\n\n   /**\n    * @property model\n    * return a source model\n    *\n    * @return ABModel\n    */\n   get model() {\n      let object = this.datasource; // already notified\n\n      return object ? object.model() : null;\n   }\n\n   get dataStatusFlag() {\n      return {\n         notInitial: 0,\n         initializing: 1,\n         initialized: 2,\n      };\n   }\n\n   get dataStatus() {\n      return this._dataStatus;\n   }\n\n   ///\n   /// Cursor\n   ///\n\n   setCursor(itemId) {\n      // If the static cursor is set, then this DC could not set cursor to other rows\n      if (\n         this.settings.fixSelect &&\n         (this.settings.fixSelect != \"_FirstRecordDefault\" ||\n            this.settings.fixSelect == itemId)\n      )\n         return;\n\n      if (this.__treeCollection) {\n         // set cursor of tree collection\n         this.setCursorTree(itemId);\n\n         // pull current row id\n         let currTreeId = this.__treeCollection.getCursor();\n         if (currTreeId) {\n            let currTreeItem = this.__treeCollection.getItem(currTreeId);\n            if (currTreeItem) itemId = currTreeItem._itemId;\n         }\n      }\n\n      let dc = this.__dataCollection;\n      if (dc) {\n         // clear cursor\n         if (itemId == null) {\n            dc.setCursor(null);\n         }\n         // If set rowId equal current cursor, it will not trigger .onAfterCursorChange event\n         else if (dc.getCursor() == itemId) {\n            this.emit(\"changeCursor\", this.getCursor());\n         }\n         // set new cursor\n         else if (dc.exists(itemId)) {\n            dc.setCursor(itemId);\n         }\n      }\n   }\n\n   /**\n    *\n    * @param {string|number} itemId - Id of item or Id of row data\n    */\n   setCursorTree(itemId) {\n      let tc = this.__treeCollection;\n      if (tc && tc.getCursor() != itemId) {\n         // If it is id of tree collection, then find row id of data\n         let treeCursor = tc.find({ id: itemId }, true);\n         if (treeCursor) {\n            tc.setCursor(itemId);\n         }\n         // If it is not id of tree collection, then find/set root of data\n         else {\n            let treeItem = tc.find({ _itemId: itemId, $parent: 0 }, true);\n            if (treeItem) tc.setCursor(treeItem.id);\n            else tc.setCursor(null);\n         }\n      }\n   }\n\n   getCursor(treeCursor = false) {\n      // Cursor of tree collection\n      if (treeCursor && this.__treeCollection) {\n         let currId = this.__treeCollection.getCursor();\n         if (currId) {\n            let currItem = this.__treeCollection.getItem(currId);\n\n            // filter current id for serialize\n            this.__treeCollection.filter(\n               (item) => item._itemId == currItem._itemId\n            );\n\n            // pull item with child items\n            let currItemAndChilds =\n               this.__treeCollection.serialize()[0] || null;\n\n            // refresh filter\n            this.refreshLinkCursor();\n\n            return currItemAndChilds;\n         }\n      }\n\n      let dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      let currId = dc.getCursor();\n      let currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   getFirstRecord() {\n      var dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      var currId = dc.getFirstId();\n      var currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   getNextRecord(record) {\n      var dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      var currId = dc.getNextId(record.id);\n      var currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   /**\n    * @method refreshLinkCursor\n    *    If the data collection is bound to another and it is the child connection\n    *    it finds it's parents current set cursor and then filters its data\n    *    based off of the cursor.\n    */\n   refreshLinkCursor() {\n      // do not set the filter unless this dc is initialized \"dataStatusFlag==2\"\n      // if (this.dataStatus != this.dataStatusFlag.initialized) return;\n\n      // filter the data in the data collection\n      // using its parents current cursor because all the data in this child\n      // data collection has been loaded and the frontend can decide what is\n      // seen or not seen\n      let linkCursor;\n      let dvLink = this.datacollectionLink;\n      if (dvLink) {\n         linkCursor = dvLink.getCursor();\n      }\n\n      let filterData = (rowData) => {\n         // if link dc cursor is null, then show all data\n         if (linkCursor == null) return true;\n         else return this.isParentFilterValid(rowData);\n      };\n\n      if (this.__dataCollection) this.__dataCollection.filter(filterData);\n      if (this.__treeCollection) this.__treeCollection.filter(filterData);\n   }\n\n   setStaticCursor() {\n      if (this.settings.fixSelect) {\n         // set cursor to the current user\n         if (this.settings.fixSelect == \"_CurrentUser\") {\n            var username = this.currentUserUsername();\n            var userFields = this.datasource.fields((f) => f.key == \"user\");\n\n            // find a row that contains the current user\n            var row = this.__dataCollection.find((r) => {\n               var found = false;\n\n               userFields.forEach((f) => {\n                  if (found || r[f.columnName] == null) return;\n\n                  if (r[f.columnName].filter) {\n                     // Array - isMultiple\n                     found =\n                        r[f.columnName].filter((data) => data.id == username)\n                           .length > 0;\n                  } else if (r[f.columnName] == username) {\n                     found = true;\n                  }\n               });\n\n               return found;\n            }, true);\n\n            // set a first row of current user to cursor\n            if (row) {\n               this.__dataCollection.setCursor(row.id);\n\n               this.setCursorTree(row.id);\n            }\n         } else if (\n            this.settings.fixSelect == \"_FirstRecord\" ||\n            this.settings.fixSelect == \"_FirstRecordDefault\"\n         ) {\n            // // find a row that contains the current user\n            // var row = this.__dataCollection.find((r) => {\n\n            //  var found = false;\n            //  if (!found) {\n            //    found = true;\n            //    return true; // just give us the first record\n            //  }\n\n            // }, true);\n\n            // // set a first row of current user to cursor\n            // if (row)\n            //  this.__dataCollection.setCursor(row.id);\n\n            let currRowId = this.__dataCollection.getCursor();\n            if (\n               !currRowId ||\n               (currRowId && !this.__dataCollection.exists(currRowId))\n            ) {\n               // If current cursor is filtered by parent DC, then select new cursor\n\n               // set a first row to cursor\n               let rowId = this.__dataCollection.getFirstId();\n               // if (rowId) {\n               this.__dataCollection.setCursor(rowId || null);\n\n               this.setCursorTree(rowId);\n               // }\n            }\n         } else {\n            this.__dataCollection.setCursor(this.settings.fixSelect);\n\n            this.setCursorTree(this.settings.fixSelect);\n         }\n      }\n\n      // Set the cursor to the first row\n      if (this.isCursorFollow) {\n         const rowId = this.__dataCollection.getFirstId();\n         this.setCursor(rowId || null);\n         this.setCursorTree(rowId || null);\n      }\n   }\n\n   ///\n   /// Data\n   ///\n\n   /**\n    * @method filterCondition()\n    * Provide a temporary filter condition to modify the data we are returning.\n    * Used by User search criterias.\n    * @param {json} cond\n    *        A valid QueryCondition to filter the response.\n    */\n   filterCondition(cond = null) {\n      this.__filterCond = cond;\n   }\n\n   init() {\n      // prevent initialize many times\n      if (this.initialized) return;\n      this.initialized = true;\n\n      if (!this.__dataCollection.___AD.onAfterCursorChange) {\n         this.__dataCollection.___AD.onAfterCursorChange =\n            this.__dataCollection.attachEvent(\"onAfterCursorChange\", () => {\n               // debugger;\n               var currData = this.getCursor();\n\n               this.emit(\"changeCursor\", currData);\n            });\n      }\n\n      // relate data functions\n      let isRelated = (relateData, rowId, PK = \"id\") => {\n         if (Array.isArray(relateData)) {\n            return relateData.filter((v) => (v[PK] || v) == rowId).length > 0;\n         } else {\n            return relateData && (relateData[PK] || relateData) == rowId;\n         }\n      };\n\n      // events\n      this.on(\"ab.datacollection.create\", (data) => {\n         // If this DC is following cursor for other DC, then it should not add the new item to their list.\n         if (this.isCursorFollow) return;\n\n         let obj = this.datasource;\n         if (!obj) return;\n\n         if (!data || !data.data) return;\n\n         let needAdd = false;\n         let updatedVals = [];\n\n         Promise.resolve()\n            .then(() => {\n               return new Promise((next, bad) => {\n                  // Query\n                  if (obj instanceof this.AB.Class.ABObjectQuery) {\n                     let objList =\n                        obj.objects((o) => o.id == data.objectId) || [];\n\n                     needAdd = objList.length > 0;\n\n                     if (!needAdd) return next();\n\n                     let where = {\n                        glue: \"or\",\n                        rules: [],\n                     };\n\n                     objList.forEach((o) => {\n                        let newDataId = data.data[`${o.PK()}`];\n                        if (!newDataId) return;\n\n                        where.rules.push({\n                           key: `${o.alias || obj.objectAlias(o.id)}.${o.PK()}`,\n                           rule: \"equals\",\n                           value: newDataId,\n                        });\n                     });\n\n                     obj.model()\n                        .findAll({\n                           where: where,\n                        })\n                        .then((newQueryData) => {\n                           updatedVals = newQueryData.data || [];\n                           updatedVals.forEach((v) => {\n                              delete v.id;\n                           });\n\n                           next();\n                        })\n                        .catch(bad);\n                  }\n                  // Object\n                  else {\n                     needAdd = obj.id == data.objectId;\n                     updatedVals = [data.data];\n                     next();\n                  }\n               });\n            })\n            .then(() => {\n               if (needAdd) {\n                  // normalize data before add to data collection\n                  var model = obj.model();\n\n                  // UPDATE: this should already have happened in NetworkRestSocket\n                  // when the initial data is received.\n                  //model.normalizeData(updatedVals);\n\n                  (updatedVals || []).forEach((updatedV) => {\n                     // filter condition before add\n                     if (!this.isValidData(updatedV)) return;\n\n                     // check to see if item already exisits in data collection\n                     // and check to see that we are not loading the data serverside from cursor\n                     if (\n                        !this.__dataCollection.exists(\n                           updatedV[`${obj.PK()}`]\n                        ) &&\n                        !this.__reloadWheres\n                     ) {\n                        this.__dataCollection.add(updatedV, 0);\n                        this.emit(\"create\", updatedV);\n                        // this.__dataCollection.setCursor(rowData.id);\n                     } else if (\n                        !this.__dataCollection.exists(\n                           updatedV[`${obj.PK()}`]\n                        ) &&\n                        this.__reloadWheres\n                     ) {\n                        // debugger;\n                        if (this.isParentFilterValid(updatedV)) {\n                           // we track bound components and flexlayout components\n                           var attachedComponents =\n                              this.__bindComponentIds.concat(\n                                 this.__flexComponentIds\n                              );\n                           attachedComponents.forEach((bcids) => {\n                              // if the reload button already exisits move on\n                              if ($$(bcids + \"_reloadView\")) {\n                                 return false;\n                              }\n\n                              // find the position of the data view\n                              var pos = 0;\n                              var parent = $$(bcids).getParentView();\n                              if ($$(bcids).getParentView().index) {\n                                 pos = $$(bcids)\n                                    .getParentView()\n                                    .index($$(bcids));\n                              } else if (\n                                 $$(bcids).getParentView().getParentView().index\n                              ) {\n                                 // this is a data view and it is inside a\n                                 // scroll view that is inside an accodion\n                                 // so we need to go deeper to add the button\n                                 parent = $$(bcids)\n                                    .getParentView()\n                                    .getParentView();\n                                 pos = $$(bcids)\n                                    .getParentView()\n                                    .getParentView()\n                                    .index($$(bcids).getParentView());\n                              }\n\n                              // store the datacollection so we can pass it to the button later\n                              var DC = this;\n                              // add a button that reloads the view when clicked\n                              if (parent.addView) {\n                                 var L = this.AB.Label();\n                                 parent.addView(\n                                    {\n                                       id: bcids + \"_reloadView\",\n                                       view: \"button\",\n                                       value: L(\n                                          \"New data available. Click to reload.\"\n                                       ),\n                                       css: \"webix_primary webix_warn\",\n                                       click: function (id, event) {\n                                          DC.reloadData();\n                                          $$(id).getParentView().removeView(id);\n                                       },\n                                    },\n                                    pos\n                                 );\n                              }\n                           });\n                           // this.emit(\"create\", updatedV);\n                        }\n                     }\n                  });\n\n                  if (\n                     this.__treeCollection // && this.__treeCollection.exists(updatedVals.id)\n                  ) {\n                     this.parseTreeCollection({\n                        data: updatedVals,\n                     });\n                  }\n               }\n\n               // ABObject only\n               if (!(obj instanceof this.AB.Class.ABObjectQuery)) {\n                  // if it is a linked object\n                  let connectedFields = this.datasource.connectFields(\n                     (f) =>\n                        f.datasourceLink && f.datasourceLink.id == data.objectId\n                  );\n\n                  // It should always be only one item for ABObject\n                  updatedVals = updatedVals[0];\n\n                  // update relation data\n                  if (\n                     updatedVals &&\n                     connectedFields &&\n                     connectedFields.length > 0\n                  ) {\n                     // various PK name\n                     let PK = connectedFields[0].object.PK();\n                     if (!updatedVals.id && PK != \"id\")\n                        updatedVals.id = updatedVals[PK];\n\n                     this.__dataCollection.find({}).forEach((d) => {\n                        let updateItemData = {};\n\n                        connectedFields.forEach((f) => {\n                           var updateRelateVal = {};\n                           if (f && f.fieldLink) {\n                              updateRelateVal =\n                                 updatedVals[f.fieldLink.relationName()] || {};\n                           }\n\n                           let rowRelateVal = d[f.relationName()] || {};\n\n                           let valIsRelated = isRelated(\n                              updateRelateVal,\n                              d.id,\n                              PK\n                           );\n\n                           // Relate data\n                           if (\n                              Array.isArray(rowRelateVal) &&\n                              rowRelateVal.filter(\n                                 (v) =>\n                                    v == updatedVals.id ||\n                                    v.id == updatedVals.id ||\n                                    v[PK] == updatedVals.id\n                              ).length < 1 &&\n                              valIsRelated\n                           ) {\n                              rowRelateVal.push(updatedVals);\n\n                              updateItemData[f.relationName()] = rowRelateVal;\n                              updateItemData[f.columnName] = updateItemData[\n                                 f.relationName()\n                              ].map((v) => v.id || v[PK] || v);\n                           } else if (\n                              !Array.isArray(rowRelateVal) &&\n                              (rowRelateVal != updatedVals.id ||\n                                 rowRelateVal.id != updatedVals.id ||\n                                 rowRelateVal[PK] != updatedVals.id) &&\n                              valIsRelated\n                           ) {\n                              updateItemData[f.relationName()] = updatedVals;\n                              updateItemData[f.columnName] =\n                                 updatedVals.id || updatedVals;\n                           }\n                        });\n\n                        // If this item needs to update\n                        if (Object.keys(updateItemData).length > 0) {\n                           // normalize data before add to data collection\n                           var model = obj.model();\n\n                           // UPDATE: this should already have happened in NetworkRestSocket\n                           // when the initial data is received.\n                           // model.normalizeData(updateItemData);\n\n                           this.__dataCollection.updateItem(\n                              d.id,\n                              updateItemData\n                           );\n\n                           if (this.__treeCollection)\n                              this.__treeCollection.updateItem(\n                                 d.id,\n                                 updateItemData\n                              );\n\n                           this.emit(\n                              \"update\",\n                              this.__dataCollection.getItem(d.id)\n                           );\n                        }\n                     });\n                  }\n               }\n\n               // filter link data collection's cursor\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            });\n      });\n\n      this.on(\"ab.datacollection.update\", (data) => {\n         // {json} data\n         // incoming socket payload:\n         // data.objectId {string} uuid of the ABObject's row that was updated\n         // data.data {json} the new updated value of that row entry.\n\n         // debugger;\n         let obj = this.datasource;\n         if (!obj) return;\n\n         // updated values\n         let values = data.data;\n         if (!values) return;\n\n         // DC who is following cursor should update only current cursor.\n         if (\n            this.isCursorFollow &&\n            this.getCursor()?.id != (values[obj.PK()] ?? values.id)\n         ) {\n            return;\n         }\n\n         let needUpdate = false;\n         let isExists = false;\n         let updatedIds = [];\n         // {array}\n         // an array of the row indexs in our DataCollection that have values\n         // that need to be updated.\n\n         let updatedTreeIds = [];\n         let updatedVals = {};\n\n         // Query\n         if (obj instanceof this.AB.Class.ABObjectQuery) {\n            let objList = obj.objects((o) => o.id == data.objectId) || [];\n            needUpdate = objList.length > 0;\n            if (needUpdate) {\n               (objList || []).forEach((o) => {\n                  updatedIds = updatedIds.concat(\n                     this.__dataCollection\n                        .find((item) => {\n                           return (\n                              item[\n                                 `${this.datasource.objectAlias(\n                                    o.id\n                                 )}.${o.PK()}`\n                              ] == (values[o.PK()] || values.id)\n                           );\n                        })\n                        .map((o) => o.id) || []\n                  );\n\n                  // grouped queries\n                  if (this.__treeCollection) {\n                     updatedTreeIds = updatedTreeIds.concat(\n                        this.__treeCollection\n                           .find((item) => {\n                              return (\n                                 item[\n                                    `${this.datasource.objectAlias(\n                                       o.id\n                                    )}.${o.PK()}`\n                                 ] == (values[o.PK()] || values.id)\n                              );\n                           })\n                           .map((o) => o.id) || []\n                     );\n                  }\n               });\n\n               isExists = updatedIds.length > 0;\n\n               updatedVals = this._queryUpdateData(objList, values);\n            }\n         }\n         // Object\n         else {\n            needUpdate = obj.id == data.objectId;\n            if (needUpdate) {\n               // various PK name\n               if (!values.id && obj.PK() != \"id\") values.id = values[obj.PK()];\n\n               updatedIds.push(values.id);\n\n               isExists = this.__dataCollection.exists(values.id);\n               updatedVals = values;\n            }\n         }\n\n         // if it is the source object\n         if (needUpdate) {\n            if (isExists) {\n               if (this.isValidData(updatedVals)) {\n                  // NOTE: this is now done in NetworkRestSocket before\n                  // we start the update events.\n                  // normalize data before update data collection\n                  // var model = obj.model();\n                  // model.normalizeData(updatedVals);\n\n                  if (this.__dataCollection) {\n                     updatedIds = this.AB.uniq(updatedIds);\n                     updatedIds.forEach((itemId) => {\n                        this.__dataCollection.updateItem(itemId, updatedVals);\n                     });\n                  }\n\n                  if (this.__treeCollection) {\n                     // update data in tree\n                     updatedTreeIds = this.AB.uniq(updatedTreeIds);\n                     updatedTreeIds.forEach((itemId) => {\n                        this.__treeCollection.updateItem(itemId, updatedVals);\n                     });\n                  }\n\n                  this.emit(\"update\", updatedVals);\n\n                  // If the update item is current cursor, then should tell components to update.\n                  let currData = this.getCursor();\n                  if (currData && currData.id == updatedVals.id) {\n                     this.emit(\"changeCursor\", currData);\n                  }\n               } else {\n                  // Johnny: Here we are simply removing the DataCollection Entries that are\n                  // no longer valid.\n                  // Just cycle through the collected updatedIds and remove them.\n                  updatedIds.forEach((id) => {\n                     // If the item is current cursor, then the current cursor should be cleared.\n                     let currData = this.getCursor();\n                     if (currData && currData.id == id)\n                        this.emit(\"changeCursor\", null);\n\n                     this.__dataCollection.remove(id);\n\n                     // TODO: update tree list\n                     // if (this.__treeCollection) {\n                     //  this.__treeCollection.remove(id);\n                     // }\n\n                     this.emit(\"delete\", id);\n                  });\n               }\n            }\n            // filter before add new record\n            else if (this.isValidData(updatedVals)) {\n               // this means the updated record was not loaded yet so we are adding it to the top of the grid\n               // the placement will probably change on the next load of the data\n               this.__dataCollection.add(updatedVals, 0);\n\n               if (this.__treeCollection)\n                  this.parseTreeCollection({\n                     data: [updatedVals],\n                  });\n\n               this.emit(\"create\", updatedVals);\n            }\n         }\n\n         // if it is a linked object\n         let connectedFields = obj.connectFields(\n            (f) => f.datasourceLink && f.datasourceLink.id == data.objectId\n         );\n\n         // update relation data\n         if (\n            obj instanceof this.AB.Class.ABObject &&\n            connectedFields &&\n            connectedFields.length > 0\n         ) {\n            // various PK name\n            let PK = connectedFields[0].object.PK();\n            if (!values.id && PK != \"id\") values.id = values[PK];\n\n            if (this.__dataCollection.count() > 0) {\n               this.__dataCollection.find({}).forEach((d) => {\n                  let updateItemData = {\n                     id: d.id,\n                  };\n\n                  connectedFields.forEach((f) => {\n                     if (!f) return;\n\n                     let updateRelateVal = {};\n                     let rowRelateVal = d[f.relationName()] || {};\n\n                     if (f.fieldLink)\n                        updateRelateVal =\n                           values[f.fieldLink.relationName()] || {};\n\n                     let valIsRelated = isRelated(updateRelateVal, d.id, PK);\n\n                     // Unrelate data\n                     if (\n                        Array.isArray(rowRelateVal) &&\n                        rowRelateVal.filter(\n                           (v) =>\n                              v == values.id ||\n                              v.id == values.id ||\n                              v[PK] == values.id\n                        ).length > 0 &&\n                        !valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = rowRelateVal.filter(\n                           (v) => (v.id || v[PK] || v) != values.id\n                        );\n                        updateItemData[f.columnName] = updateItemData[\n                           f.relationName()\n                        ].map((v) => v.id || v[PK] || v);\n                     } else if (\n                        !Array.isArray(rowRelateVal) &&\n                        (rowRelateVal == values.id ||\n                           rowRelateVal.id == values.id ||\n                           rowRelateVal[PK] == values.id) &&\n                        !valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = null;\n                        updateItemData[f.columnName] = null;\n                     }\n\n                     // Relate data or Update\n                     if (Array.isArray(rowRelateVal) && valIsRelated) {\n                        // update relate data\n                        if (\n                           rowRelateVal.filter(\n                              (v) =>\n                                 v == values.id ||\n                                 v.id == values.id ||\n                                 v[PK] == values.id\n                           ).length > 0\n                        ) {\n                           rowRelateVal.forEach((v, index) => {\n                              if (\n                                 v == values.id ||\n                                 v.id == values.id ||\n                                 v[PK] == values.id\n                              )\n                                 rowRelateVal[index] = values;\n                           });\n                        }\n                        // add new relate\n                        else {\n                           rowRelateVal.push(values);\n                        }\n\n                        updateItemData[f.relationName()] = rowRelateVal;\n                        updateItemData[f.columnName] = updateItemData[\n                           f.relationName()\n                        ].map((v) => v.id || v[PK] || v);\n                     } else if (\n                        !Array.isArray(rowRelateVal) &&\n                        (rowRelateVal != values.id ||\n                           rowRelateVal.id != values.id ||\n                           rowRelateVal[PK] != values.id) &&\n                        valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = values;\n                        updateItemData[f.columnName] = values.id || values;\n                     }\n                  });\n\n                  // If this item needs to update\n                  if (Object.keys(updateItemData).length > 0) {\n                     // normalize data before add to data collection\n                     // UPDATE: this should already have happened in NetworkRestSocket\n                     // when the initial data is received.\n\n                     // NOTE: We could not normalize relational data because they are not full data\n                     // Merge update data to exists data instead\n\n                     if (this.__treeCollection?.exists(d.id)) {\n                        const treeItem = Object.assign(\n                           this.__treeCollection.getItem(d.id),\n                           updateItemData\n                        );\n                        this.__treeCollection.updateItem(d.id, treeItem);\n                     }\n\n                     if (this.__dataCollection?.exists(d.id)) {\n                        const dcItem = Object.assign(\n                           this.__dataCollection.getItem(d.id),\n                           updateItemData\n                        );\n                        this.__dataCollection.updateItem(d.id, dcItem);\n                        this.emit(\n                           \"update\",\n                           this.__dataCollection.getItem(d.id)\n                        );\n                     }\n                  }\n               });\n            }\n         }\n\n         this.refreshLinkCursor();\n         this.setStaticCursor();\n      });\n\n      // We are subscribing to notifications from the server that an item may be stale and needs updating\n      // We will improve this later and verify that it needs updating before attempting the update on the client side\n      this.on(\"ab.datacollection.stale\", (data) => {\n         // debugger;\n         // if we don't have a datasource or model, there is nothing we can do here:\n         // Verify the datasource has the object we are listening for if not just stop here\n         if (\n            !this.datasource ||\n            !this.model ||\n            this.datasource.id != data.objectId\n         ) {\n            return;\n         }\n\n         // updated values\n         var values = data.data;\n\n         if (!values) return;\n\n         // use the Object's defined Primary Key:\n         var PK = this.model.object.PK();\n         if (!values[PK]) {\n            PK = \"id\";\n         }\n\n         // DC who is following cursor should update only current cursor.\n         if (\n            this.isCursorFollow &&\n            this.getCursor()?.[PK] != (values[PK] ?? values.id)\n         ) {\n            return;\n         }\n\n         if (values) {\n            if (this.__dataCollection.exists(values[PK])) {\n               var cond = { where: {} };\n               cond.where[PK] = values[PK];\n               // this data collection has the record so we need to query the server to find out what it's latest data is so we can update all instances\n               this.model.staleRefresh(cond).then((res) => {\n                  // check to make sure there is data to work with\n                  if (Array.isArray(res.data) && res.data.length) {\n                     // debugger;\n                     let obj = this.datasource;\n                     if (!obj) return;\n                     // normalize data before add to data collection\n\n                     // UPDATE: this should already have happened in NetworkRestSocket\n                     // when the initial data is received.\n                     //var model = obj.model();\n                     // model.normalizeData(res.data[0]);\n\n                     // tell the webix data collection to update using their API with the row id (values.id) and content (res.data[0])\n                     if (this.__dataCollection.exists(values[PK])) {\n                        this.__dataCollection.updateItem(\n                           values[PK],\n                           res.data[0]\n                        );\n                     }\n\n                     // If the update item is current cursor, then should tell components to update.\n                     var currData = this.getCursor();\n                     if (currData && currData[PK] == values[PK]) {\n                        this.emit(\"changeCursor\", currData);\n                     }\n                  } else {\n                     // If there is no data in the object then it was deleted...lets clean things up\n                     // If the deleted item is current cursor, then the current cursor should be cleared.\n                     var currId = this.getCursor();\n                     if (currId == values[PK]) this.emit(\"changeCursor\", null);\n\n                     this.__dataCollection.remove(values[PK]);\n                     this.emit(\"delete\", values[PK]);\n                  }\n               });\n            }\n         }\n\n         // filter link data collection's cursor\n         this.refreshLinkCursor();\n         this.setStaticCursor();\n      });\n\n      this.on(\"ab.datacollection.delete\", (data) => {\n         // debugger;\n         let obj = this.datasource;\n         if (!obj) return;\n\n         let deleteId = data.data;\n         let needDelete = false;\n         let deletedIds = [];\n         let deletedTreeIds = [];\n\n         if (this.isCursorFollow && this.getCursor()?.id != deleteId) {\n            return;\n         }\n\n         // Query\n         if (obj instanceof this.AB.Class.ABObjectQuery) {\n            let objList = obj.objects((o) => o.id == data.objectId) || [];\n            needDelete = objList.length > 0;\n            if (needDelete) {\n               (objList || []).forEach((o) => {\n                  deletedIds =\n                     this.__dataCollection\n                        .find((item) => {\n                           return item[`${o.alias}.${o.PK()}`] == deleteId;\n                        })\n                        .map((o) => o.id) || [];\n\n                  // grouped queries\n                  if (this.__treeCollection) {\n                     deletedTreeIds =\n                        this.__treeCollection\n                           .find((item) => {\n                              return item[`${o.alias}.${o.PK()}`] == deleteId;\n                           })\n                           .map((o) => o.id) || [];\n                  }\n               });\n            }\n         }\n         // Object\n         else {\n            needDelete = obj.id == data.objectId;\n            if (needDelete) {\n               deletedIds.push(deleteId);\n            }\n         }\n\n         // if it is the source object\n         if (needDelete) {\n            // If the deleted item is current cursor, then the current cursor should be cleared.\n            var currData = this.getCursor();\n\n            deletedIds.forEach((delId) => {\n               if (currData && currData[obj.PK()] == delId)\n                  this.emit(\"changeCursor\", null);\n\n               if (this.__dataCollection.exists(delId))\n                  this.__dataCollection.remove(delId);\n            });\n\n            if (this.__treeCollection) {\n               deletedTreeIds.forEach((delId) => {\n                  if (this.__treeCollection.exists(delId))\n                     this.__treeCollection.remove(delId);\n               });\n            }\n\n            if (deletedIds[0]) this.emit(\"delete\", deletedIds[0]);\n         }\n\n         // if it is a linked object\n         let connectedFields = obj.connectFields(\n            (f) => f.datasourceLink && f.datasourceLink.id == data.objectId\n         );\n\n         // update relation data\n         if (\n            obj instanceof this.AB.Class.ABObject &&\n            connectedFields &&\n            connectedFields.length > 0\n         ) {\n            // various PK name\n            let PK = connectedFields[0].object.PK();\n\n            this.__dataCollection.find({}).forEach((d) => {\n               let updateRelateVals = {};\n\n               connectedFields.forEach((f) => {\n                  let relateVal = d[f.relationName()];\n                  if (relateVal == null) return;\n\n                  if (\n                     Array.isArray(relateVal)\n                     // JOHNNY: for speed improvements, don't make this check:\n                     // just do it and that will reduce 1x through the array.\n                     // &&\n                     // relateVal.filter(\n                     //    (v) =>\n                     //       v == deleteId ||\n                     //       v.id == deleteId ||\n                     //       v[PK] == deleteId\n                     // ).length > 0\n                  ) {\n                     updateRelateVals[f.relationName()] = relateVal.filter(\n                        (v) => (v.id || v[PK] || v) != deleteId\n                     );\n                     updateRelateVals[f.columnName] = updateRelateVals[\n                        f.relationName()\n                     ].map((v) => v.id || v[PK] || v);\n                  } else if (\n                     relateVal == deleteId ||\n                     relateVal.id == deleteId ||\n                     relateVal[PK] == deleteId\n                  ) {\n                     updateRelateVals[f.relationName()] = null;\n                     updateRelateVals[f.columnName] = null;\n                  }\n               });\n\n               // If this item needs to update\n               if (Object.keys(updateRelateVals).length > 0) {\n                  // normalize data before add to data collection\n\n                  // var model = obj.model();\n                  // model.normalizeData(updateRelateVals);\n\n                  this.__dataCollection.updateItem(d.id, updateRelateVals);\n\n                  if (this.__treeCollection)\n                     this.__treeCollection.updateItem(d.id, updateRelateVals);\n\n                  this.emit(\"update\", this.__dataCollection.getItem(d.id));\n               }\n            });\n         }\n      });\n\n      // add listeners when cursor of link data collection is changed\n      let linkDv = this.datacollectionLink;\n      if (linkDv && this.settings.loadAll) {\n         this.eventAdd({\n            emitter: linkDv,\n            eventName: \"changeCursor\",\n            listener: () => {\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            },\n         });\n      }\n\n      // add listeners when cursor of the followed data collection is changed\n      const followDC = this.datacollectionFollow;\n      if (followDC) {\n         this.eventAdd({\n            emitter: followDC,\n            eventName: \"changeCursor\",\n            listener: () => {\n               this.clearAll();\n               this.loadData();\n            },\n         });\n      }\n   }\n\n   /*\n    * waitForDataCollectionToInitialize()\n    * there are certain situations where this datacollection shouldn't\n    * load until another one has loaded.  In those cases, the fn()\n    * will wait for the required datacollection to emit \"initializedData\"\n    * before continuing on.\n    * @param {ABViewDataCollection} DC\n    *      the DC this datacollection depends on.\n    * @returns {Promise}\n    */\n   waitForDataCollectionToInitialize(DC, msg) {\n      return new Promise((resolve, reject) => {\n         switch (DC.dataStatus) {\n            // if that DC hasn't started initializing yet, start it!\n            case DC.dataStatusFlag.notInitial:\n               DC.loadData().catch(reject);\n            // no break;\n\n            // once in the process of initializing\n            /* eslint-disable no-fallthrough*/\n            case DC.dataStatusFlag.initializing:\n               /* eslint-enable no-fallthrough*/\n               // listen for \"initializedData\" event from the DC\n               // then we can continue.\n               this.eventAdd({\n                  emitter: DC,\n                  eventName: \"initializedData\",\n                  listener: () => {\n                     // go next\n                     resolve();\n                  },\n               });\n               break;\n\n            // if it is already initialized, we can continue:\n            case DC.dataStatusFlag.initialized:\n               resolve();\n               break;\n\n            // just in case, if the status is not known, just continue\n            default:\n               resolve();\n               break;\n         }\n      });\n   }\n\n   loadData(start, limit) {\n      // mark data status is initializing\n      if (this._dataStatus == this.dataStatusFlag.notInitial) {\n         this._dataStatus = this.dataStatusFlag.initializing;\n         this.emit(\"initializingData\", {});\n      }\n\n      var obj = this.datasource;\n      if (obj == null) {\n         this._dataStatus = this.dataStatusFlag.initialized;\n         return Promise.resolve([]);\n      }\n\n      var model = obj.model();\n      if (model == null) {\n         this._dataStatus = this.dataStatusFlag.initialized;\n         return Promise.resolve([]);\n      }\n\n      // pull the defined sort values\n      var sorts = this.settings.objectWorkspace.sortFields || [];\n\n      // pull filter conditions\n      let wheres = this.AB.cloneDeep(\n         this.settings.objectWorkspace.filterConditions ?? null\n      );\n      // if we pass new wheres with a reload use them instead\n      if (this.__reloadWheres) {\n         wheres = this.__reloadWheres;\n      }\n\n      const __additionalWheres = {\n         glue: \"and\",\n         rules: [],\n      };\n\n      if (this.__filterCond) {\n         __additionalWheres.rules.push(this.__filterCond);\n      }\n\n      // Filter by a selected cursor of a link DC\n      const dataCollectionLink = this.datacollectionLink;\n      const fieldLink = this.fieldLink;\n      if (!this.settings.loadAll && dataCollectionLink && fieldLink) {\n         const linkCursorId = dataCollectionLink?.getCursor()?.id;\n         if (linkCursorId) {\n            __additionalWheres.rules.push({\n               alias: fieldLink.alias, // ABObjectQuery\n               key: fieldLink.id,\n               rule: fieldLink.alias ? \"contains\" : \"equals\", // NOTE: If object is query, then use \"contains\" because ABOBjectQuery return JSON\n               value: fieldLink.getRelationValue(\n                  dataCollectionLink.__dataCollection.getItem(linkCursorId)\n               ),\n            });\n         }\n      }\n      // pull data rows following the follow data collection\n      else if (this.datacollectionFollow) {\n         const followCursor = this.datacollectionFollow.getCursor();\n         // store the PK as a variable\n         let PK = this.datasource.PK();\n         // if the datacollection we are following is a query\n         // add \"BASE_OBJECT.\" to the PK so we can select the\n         // right value to report the cursor change to\n         if (this.datacollectionFollow.settings.isQuery) {\n            PK = \"BASE_OBJECT.\" + PK;\n         }\n         if (followCursor) {\n            start = 0;\n            limit = null;\n            wheres = {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.datasource.PK(),\n                     rule: \"equals\",\n                     value: followCursor[PK],\n                  },\n               ],\n            };\n         }\n         // Set no return rows\n         else {\n            wheres = {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.datasource.PK(),\n                     rule: \"equals\",\n                     value: \"NO RESULT ROW\",\n                  },\n               ],\n            };\n         }\n      }\n\n      // Combine setting & program filters\n      if (__additionalWheres.rules.length) {\n         __additionalWheres.rules.unshift(wheres);\n         wheres = __additionalWheres;\n      }\n\n      // remove any null in the .rules\n      if (wheres?.rules?.filter) wheres.rules = wheres.rules.filter((r) => r);\n\n      // set query condition\n      var cond = {\n         where: wheres || {},\n         // limit: limit || 20,\n         skip: start || 0,\n         sort: sorts,\n         populate:\n            this.settings.populate ??\n            (this.settings.preventPopulate ? false : true),\n      };\n\n      //// NOTE: we no longer set a default limit on loadData() but\n      //// require the platform.loadData() to pass in a default limit.\n      if (limit != null) {\n         cond.limit = limit;\n      }\n\n      // if settings specify loadAll, then remove the limit\n      if (this.settings.loadAll && !this.isCursorFollow) {\n         delete cond.limit;\n      }\n\n      return (\n         Promise.resolve()\n            //\n            // Step 1: make sure any DataCollections we are linked to are\n            // initialized first.  Then proceed with our initialization.\n            //\n            .then(() => {\n               // If we are linked to another datacollection then wait for it\n               let linkDc = this.datacollectionLink;\n               if (!linkDc) return Promise.resolve(); // TODO: refactor in v2\n\n               return this.waitForDataCollectionToInitialize(linkDc);\n            })\n            //\n            // Step 2: if we have any filter rules that depend on other DataCollections,\n            // then wait for them to be initialized first.\n            // eg: \"(not_)in_data_collection\" rule filters\n            .then(() => {\n               return new Promise((resolve, reject) => {\n                  if (\n                     wheres == null ||\n                     wheres.rules == null ||\n                     !wheres.rules.length\n                  )\n                     return resolve();\n\n                  var dcFilters = [];\n\n                  wheres.rules.forEach((rule) => {\n                     // if this collection is filtered by data collections we need to load them in case we need to validate from them later\n                     if (\n                        rule.rule == \"in_data_collection\" ||\n                        rule.rule == \"not_in_data_collection\"\n                     ) {\n                        var dv = this.AB.datacollectionByID(rule.value);\n                        if (dv) {\n                           dcFilters.push(\n                              this.waitForDataCollectionToInitialize(dv)\n                           );\n                        }\n                     }\n                  });\n\n                  Promise.all(dcFilters)\n                     .then(() => {\n                        resolve();\n                     })\n                     .catch(reject);\n               });\n            })\n\n            // pull data to data collection\n            .then(() => {\n               return new Promise((resolve, reject) => {\n                  // we will keep track of the resolve, reject for this\n                  // operation.\n                  // the actual resolve() should happen in the\n                  // .processIncomingData() after the  data is processed.\n                  this._pendingLoadDataResolve = {\n                     resolve: resolve,\n                     reject: reject,\n                  };\n\n                  this.platformFind(model, cond).catch((err) => {\n                     reject(err);\n                  });\n               });\n            })\n      );\n   }\n\n   platformFind(model, cond) {\n      //// Core Migration Note:\n      //// the ABViewDataCollectionCore now manages data in a different way:\n      //// local data  vs  Remote Data\n      //// this will need to be updated to reflect that management:\n      //// (and also explains why we refactored things into .processIncomingData())\n      return model.findAll(cond).then((data) => {\n         return this.processIncomingData(data);\n      });\n   }\n\n   /**\n    * @method queuedParse()\n    * This is an attempt at loading very large datasets into a Webix DC without locking up\n    * the display.\n    * @param {array} data\n    *        The data to load into the __dataCollection\n    * @param {callback} cb\n    *        A callback to call when the data has been fully loaded.\n    */\n   async queuedParse(incomingData, cb) {\n      const data = incomingData?.data || incomingData;\n      if (!data?.length) {\n         cb?.();\n         return Promise.resolve();\n      }\n\n      const total_count = incomingData.total_count;\n\n      let nextData;\n      if (data.length > 250) {\n         let pos = this.__dataCollection.count();\n         let remain = data.splice(250);\n         nextData = {\n            data: remain,\n            pos: pos + data.length,\n            total_count,\n         };\n      }\n\n      const parsedData = {\n         data,\n         pos: incomingData.pos,\n         total_count,\n      };\n      this.__dataCollection.parse(parsedData);\n\n      return new Promise((resolve) => {\n         setTimeout(async () => {\n            await this.queuedParse(nextData);\n            cb?.();\n            resolve();\n         }, 15);\n      });\n   }\n\n   /**\n    * processIncomingData()\n    * is called from loadData() once the data is returned.  This method\n    * allows the platform to make adjustments to the data based upon any\n    * platform defined criteria.\n    * @param {obj} data  the data as it was returned from the Server\n    *        which should be in following format:\n    *        {\n    *          status: \"success\", // or \"error\"\n    *          data:[ {ABObjectData}, {ABObjectData}, ...]\n    *        }\n    */\n   processIncomingData(data) {\n      return Promise.resolve().then(() => {\n         // store total count\n         this.__totalCount = data.total_count;\n\n         // Need to .parse at the first time\n         if (!this.__dataCollection.find({}).length) {\n            this.__dataCollection.clearAll();\n            // this.__dataCollection.parse(data);\n         }\n\n         if (this.__throttleIncoming) clearTimeout(this.__throttleIncoming);\n         this.__throttleIncoming = setTimeout(async () => {\n            // using queuedParse() to responsively handle large datasets.\n            await this.queuedParse(data);\n\n            // In order to get the total_count updated I had to use .load()\n            this.__dataCollection.load(async () => {\n               if (this.settings.loadAll) {\n                  setTimeout(() => {\n                     this.refreshLinkCursor();\n                  }, 250);\n               }\n\n               return {\n                  // NOTE: return a empty array to prevent render items in DataTable twice. (Items are rendered in .queuedParse function)\n                  data: [],\n                  pos: data.pos,\n                  total_count: data.total_count,\n               };\n            });\n\n            // this does nothing???\n            this.parseTreeCollection(data);\n\n            // if we are linked, then refresh our cursor\n            var linkDv = this.datacollectionLink;\n            if (linkDv) {\n               // filter data by match link data collection\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            } else {\n               // set static cursor\n               this.setStaticCursor();\n            }\n\n            // now we close out our .loadData() promise.resolve() :\n            if (this._pendingLoadDataResolve) {\n               this._pendingLoadDataResolve.resolve();\n\n               // after we call .resolve() stop tracking this:\n               this._pendingLoadDataResolve = null;\n            }\n\n            // If dc set load all, then it will not trigger .loadData in dc at\n            // .onAfterLoad event\n            if (this.settings.loadAll) {\n               this.emit(\"loadData\", {});\n            }\n\n            // mark initialized data\n            if (this._dataStatus != this.dataStatusFlag.initialized) {\n               this._dataStatus = this.dataStatusFlag.initialized;\n               this.emit(\"initializedData\", {});\n            }\n         }, 100);\n      });\n   }\n\n   /**\n    * @method reloadData()\n    * Trigger the DataCollection to reload its data from the server.\n    * @param {int} start\n    *        Start position of where we want the data to load.\n    * @param {int} limit\n    *        How many entries to load at a time.\n    * @return {Promise}\n    */\n   reloadData(start, limit) {\n      // var waitForDataCollectionToInitialize = (DC) => {\n      //    return new Promise((resolve, reject) => {\n      //       switch (DC.dataStatus) {\n      //          // if that DC hasn't started initializing yet, start it!\n      //          case DC.dataStatusFlag.notInitial:\n      //             DC.loadData().catch(reject);\n      //          // no break;\n\n      //          // once in the process of initializing\n      //          /* eslint-disable no-fallthrough*/\n      //          case DC.dataStatusFlag.initializing:\n      //             /* eslint-enable no-fallthrough*/\n      //             // listen for \"initializedData\" event from the DC\n      //             // then we can continue.\n      //             this.eventAdd({\n      //                emitter: DC,\n      //                eventName: \"initializedData\",\n      //                listener: () => {\n      //                   // go next\n      //                   resolve();\n      //                },\n      //             });\n      //             break;\n\n      //          // if it is already initialized, we can continue:\n      //          case DC.dataStatusFlag.initialized:\n      //             resolve();\n      //             break;\n\n      //          // just in case, if the status is not known, just continue\n      //          default:\n      //             resolve();\n      //             break;\n      //       }\n      //    });\n      // };\n\n      return Promise.resolve().then(() => {\n         // check if we are currently waiting for more data requests on this datacollection before continuing\n         if (this.reloadTimer) {\n            // if we are already waiting delete the current timer\n            clearTimeout(this.reloadTimer);\n            delete this.reloadTimer;\n         }\n\n         // return a promise\n         if (!this.reloadPromise) {\n            this.reloadPromise = new Promise((resolve, reject) => {\n               this.reloadPromise__resolve = resolve;\n               this.reloadPromise__reject = reject;\n            });\n         }\n\n         // then create a new timeout to delete current timeout, clear data\n         // and load new\n         this.reloadTimer = setTimeout(() => {\n            // clear the data from the dataCollection,\n            this.clearAll();\n            // then loads new data from the server\n            return this.loadData(start, limit)\n               .then(() => {\n                  if (this.reloadPromise) {\n                     this.reloadPromise__resolve();\n                     delete this.reloadPromise;\n                     delete this.reloadPromise__resolve;\n                     delete this.reloadPromise__reject;\n                  }\n\n                  // delete the current setTimeout\n                  clearTimeout(this.reloadTimer);\n                  delete this.reloadTimer;\n               })\n               .catch((err) => {\n                  if (this.reloadPromise) {\n                     this.reloadPromise__reject(err);\n                     delete this.reloadPromise;\n                     delete this.reloadPromise__resolve;\n                     delete this.reloadPromise__reject;\n                  }\n                  // delete the current setTimeout\n                  clearTimeout(this.reloadTimer);\n                  delete this.reloadTimer;\n               });\n         }, 50);\n         // setting to 50ms because right now we do not see many\n         // concurrent calls,  we need to increase this if we begin to\n\n         return this.reloadPromise;\n      });\n   }\n\n   /**\n    * reloadWheres()\n    * stores the child data collections filters for subsequent loads.\n    * It is called from bindParentDc() when child data collections that are not\n    * marked to load all data are initializing. To do this we use webix\n    * server side binding by setting the param of \"dataFeed\".\n    * @param {obj} wheres  the new filters for the data collection\n    *        This is a combination of any exisiting filters the data collection\n    *        alreay had as well as the filter for the current cursor set by the\n    *        master data collection. We store this in __reloadWheres for when\n    *        the data needs to be updated.\n    *        The format of the wheres is our Query Builder Format\n    *        ex: {\n    *              \"glue\": \"and\",\n    *              \"rules\": [{\n    *                \"key\": \"33ba8957-6b9c-4ddb-9533-c46b13878ae1\",\n    *                \"rule\": \"contains\",\n    *                \"value\": \"1594176994894\"\n    *              }]\n    *            }\n    */\n   reloadWheres(wheres) {\n      this.__reloadWheres = wheres;\n   }\n\n   getData(filter) {\n      var dc = this.__dataCollection;\n      if (dc) {\n         return dc.find((row) => {\n            let isValid = true;\n\n            // data collection filter\n            // isValid = this.isValidData(row);\n\n            // NOTE: data are filtered from the server side (webix.dataFeed)\n            // parent dc filter\n            let linkDv = this.datacollectionLink;\n            if (linkDv && this.settings.loadAll && isValid) {\n               isValid = this.isParentFilterValid(row);\n            }\n\n            // addition filter\n            if (isValid && filter) {\n               isValid = filter(row);\n            }\n\n            return isValid;\n         });\n      } else {\n         return [];\n      }\n   }\n\n   isParentFilterValid(rowData) {\n      // data is empty\n      if (rowData == null) return false;\n\n      var linkDv = this.datacollectionLink;\n      if (linkDv == null) return true;\n\n      const linkObj = linkDv.datasource;\n      if (linkObj == null) return true;\n\n      var fieldLink = this.fieldLink;\n      if (fieldLink == null) return true;\n\n      // if the parent's cursor is not set we have not filted this collection\n      // yet so the data that comes back should be valid\n      var linkCursor = linkDv.getCursor();\n      if (linkCursor == null) {\n         return true;\n      }\n\n      var linkVal = rowData[fieldLink.relationName()];\n      if (linkVal == null) {\n         // try to get relation value(id) again\n         if (rowData[fieldLink.columnName]) {\n            linkVal = rowData[fieldLink.columnName];\n         } else {\n            return false;\n         }\n      }\n\n      let PK = fieldLink.object.PK();\n\n      // array - 1:M , M:N\n      if (linkVal.filter) {\n         return (\n            linkVal.filter(\n               (val) =>\n                  (val[PK] || val.id || val) ==\n                  (linkCursor[linkObj.PK()] || linkCursor.id || linkCursor)\n            ).length > 0\n         );\n      } else {\n         return (\n            (linkVal[PK] || linkVal.id || linkVal) ==\n            (linkCursor[linkObj.PK()] || linkCursor.id || linkCursor)\n         );\n      }\n   }\n\n   clearAll() {\n      if (this.__dataCollection) this.__dataCollection.clearAll();\n\n      if (this.__treeCollection) this.__treeCollection.clearAll();\n\n      this._dataStatus = this.dataStatusFlag.notInitial;\n   }\n\n   get totalCount() {\n      return this.__totalCount || 0;\n   }\n\n   ///\n   /// Components\n   ///\n\n   /**\n    * @method bind\n    * @param {Object} component - a webix element instance\n    */\n   bind(/* component */) {\n      console.error(\"Platform.ABDataCollection.bind() Not implemented\");\n   }\n\n   unbind(/* component */) {\n      console.error(\"Platform.ABDataCollection.unbind() Not implemented\");\n   }\n\n   removeComponent(comId) {\n      // get index\n      let index = this.__bindComponentIds.indexOf(comId);\n\n      // delete\n      this.__bindComponentIds.splice(index, 1);\n   }\n\n   /**\n    * @method refreshFilterConditions()\n    * This is called in two primary cases:\n    *    - on initialization of a DC to setup our filters.\n    *    - in the operation of the ABDesigner when using a DC to display data\n    *      in the Work_object_grid and the datacollection_work(?)\n    * In the case of the ABDesigner, new temporary where conditions are provided\n    * from the possible filters we can set, and those need to effect the data\n    * we display.\n    * @param {ABRowFilter.where} wheres\n    *        The filter condition from the ABRowFilter values we are storing.\n    */\n   refreshFilterConditions(wheres = null) {\n      // There are 3 Filters that help us know if our data is Valid:\n      // 1) A filter for any ABObjectQuery we are managing.\n      // 2) A filter for our own filter condition\n      // 3) A filter that represents what our scopes allows\n\n      // Set filter of ABObject\n      if (this.__filterDatasource == null)\n         this.__filterDatasource = this.AB.filterComplexNew(\n            `${this.id}_filterDatasource`\n         );\n\n      if (this.datasource) {\n         // this.__filterDatasource.applicationLoad(this.datasource.application);\n         this.__filterDatasource.fieldsLoad(this.datasource.fields());\n\n         let filterConditions;\n\n         // Query\n         if (this.datasource instanceof this.AB.Class.ABObjectQuery) {\n            filterConditions = this.datasource.where;\n         }\n         // Apr 29, 2021 Removed this because we do not want Object filters to\n         // effect validation of DataCollections\n         // Object\n\n         // else if (this.datasource instanceof ABObject) {\n         //    let currentView = this.datasource.currentView();\n         //    if (currentView && currentView.filterConditions)\n         //       filterConditions = currentView.filterConditions;\n         // }\n\n         if (filterConditions)\n            this.__filterDatasource.setValue(filterConditions);\n         else this.__filterDatasource.setValue({});\n      } else {\n         this.__filterDatasource.fieldsLoad([]);\n         this.__filterDatasource.setValue(\n            DefaultValues.settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Set filter of data view\n      // Apr 29, 2021 Added this code back to validate with DataCollection Filters\n      if (this.__filterDatacollection == null)\n         this.__filterDatacollection = this.AB.filterComplexNew(\n            `${this.id}_filterDatacollection`\n         );\n\n      // this.__filterDatacollection.applicationLoad(\n      //    this.datasource ? this.datasource.application : null\n      // );\n      this.__filterDatacollection.fieldsLoad(\n         this.datasource ? this.datasource.fields() : []\n      );\n\n      if (wheres) this.settings.objectWorkspace.filterConditions = wheres;\n\n      if (\n         this.settings &&\n         this.settings.objectWorkspace &&\n         this.settings.objectWorkspace.filterConditions\n      ) {\n         this.__filterDatacollection.setValue(\n            this.settings.objectWorkspace.filterConditions\n         );\n      } else {\n         this.__filterDatacollection.setValue(\n            DefaultValues.settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Set filter of user's scope\n      if (this.__filterScope == null)\n         this.__filterScope = this.AB.filterComplexNew(\n            `${this.id}_filterScope`\n         );\n\n      if (this.datasource) {\n         let scopeList = (this.userScopes || []).filter(\n            (s) =>\n               !s.allowAll &&\n               (s.objectIds || []).indexOf(this.datasource.id) > -1\n         );\n         if (scopeList && scopeList.length > 0) {\n            // this.__filterScope.applicationLoad(this.datasource.application);\n            this.__filterScope.fieldsLoad(this.datasource.fields() || []);\n\n            // concat all rules of scopes\n            let scopeRules = [];\n            scopeList\n               .filter(\n                  (s) => s.filter && s.filter.rules && s.filter.rules.length\n               )\n               .forEach((s) => {\n                  let sRules = (s.filter.rules || []).filter(\n                     (r) =>\n                        this.datasource.fields((f) => f.id == r.key).length > 0\n                  );\n\n                  scopeRules = scopeRules.concat(sRules);\n               });\n\n            let scopeWhere = {\n               glue: \"or\",\n               rules: scopeRules,\n            };\n            this.__filterScope.setValue(scopeWhere);\n         }\n      }\n   }\n\n   get isGroup() {\n      return this.__isGroup || false;\n   }\n\n   ///\n   /// Sync type\n   ///\n\n   get syncTypeFlag() {\n      return {\n         server: 1,\n         client: 2,\n      };\n   }\n\n   get syncType() {\n      return this.settings.syncType || DefaultValues.syncType;\n   }\n\n   /** Private methods */\n\n   /**\n    * @method _dataCollectionNew\n    * Get webix.DataCollection\n    *\n    * @return {webix.DataCollection}\n    *\n    * @param {Array} data - initial data\n    */\n   _dataCollectionNew(/*data*/) {\n      var error = new Error(\n         \"the platform.ABDataCollection._dataCollectionNew() is expected to return a proper DataCollection!\"\n      );\n      console.error(error);\n      return null;\n   }\n\n   /**\n    * @method _treeCollectionNew\n    * Get webix.TreeCollection\n    *\n    * @return {webix.TreeCollection}\n    *\n    */\n   _treeCollectionNew() {\n      console.error(\n         \"the platform.ABDataCollection._treeCollectionNew() is expected to return a proper TreeCollection!\"\n      );\n      return null;\n   }\n\n   parseTreeCollection(data = {}) {\n      // TODO all this does is log \"is missing?\"\n      if (data === {}) {\n         console.log(\n            \"Platform.ABDataCollection.parseTreeCollection() missing!\"\n         );\n      }\n   }\n   // parseTreeCollection(data = {}) {\n\n   //  if (!(this.__datasource instanceof ABObjectQuery) ||\n   //    !this.__datasource.isGroup ||\n   //    !this.__treeCollection)\n   //    return;\n\n   //  let addRowToTree = (join = {}, parentAlias = null) => {\n\n   //    let alias = join.alias;\n\n   //    (data.data || []).forEach(row => {\n\n   //      let dataId = row[`${alias}.uuid`] || row[`${alias}.id`];\n   //      if (!dataId) return;\n\n   //      // find parent nodes\n   //      let parentItemIds = [];\n   //      let parentId = row[`${parentAlias}.uuid`] || row[`${parentAlias}.id`];\n   //      if (parentId) {\n   //        parentItemIds = this.__treeCollection\n   //          .find(item => item._alias == parentAlias && item._dataId == parentId)\n   //          .map(item => item.id);\n   //      }\n\n   //      // check exists\n   //      let exists = this.__treeCollection.find(item => {\n   //        return item._alias == alias &&\n   //          item._dataId == dataId &&\n   //          (parentItemIds.length == 0 || parentItemIds.indexOf(item.$parent) > -1);\n   //      }, true);\n   //      if (exists) return;\n\n   //      let treeNode = {};\n   //      treeNode._alias = alias;\n   //      treeNode._dataId = dataId;\n   //      treeNode._itemId = row.id; // Keep row id for set cursor to data collection\n\n   //      Object.keys(row).forEach(propName => {\n\n   //        // Pull value from alias\n   //        if (propName.indexOf(`${alias}.`) == 0) {\n   //          treeNode[propName] = row[propName];\n   //        }\n\n   //      });\n\n   //      if (row.translations)\n   //        treeNode.translations = row.translations;\n\n   //      // child nodes\n   //      if (parentItemIds.length > 0)\n   //        parentItemIds.forEach(parentItemId => {\n   //          this.__treeCollection.add(treeNode, null, parentItemId);\n   //        });\n   //      // root node\n   //      else\n   //        this.__treeCollection.add(treeNode, null);\n\n   //    });\n\n   //    // Sub-joins\n   //    (join.links || []).forEach(link => {\n   //      addRowToTree(link, alias);\n   //    });\n\n   //  };\n\n   //  // Show loading cursor\n   //  (this.__bindComponentIds || []).forEach(comId => {\n\n   //    let boundComp = $$(comId);\n   //    if (boundComp &&\n   //      boundComp.showProgress)\n   //      boundComp.showProgress({ type: \"icon\" });\n\n   //  });\n\n   //  addRowToTree(this.__datasource.joins());\n\n   //  // Hide loading cursor\n   //  (this.__bindComponentIds || []).forEach(comId => {\n\n   //    let boundComp = $$(comId);\n   //    if (boundComp &&\n   //      boundComp.hideProgress)\n   //      boundComp.hideProgress();\n\n   //  })\n   // }\n\n   /**\n    * @method _queryUpdateData\n    *\n    * @param {Array} objList - List of ABObject\n    * @param {Object} values\n    */\n   _queryUpdateData(objList, values) {\n      let updatedVals = {};\n\n      // Add alias to properties of update data\n      Object.keys(values).forEach((key) => {\n         objList.forEach((oItem) => {\n            let alias = this.datasource.objectAlias(oItem.id);\n\n            updatedVals[`${alias}.${key}`] = values[key];\n\n            // Add alias to properties of .translations\n            if (\n               key == \"translations\" &&\n               values[\"translations\"] &&\n               values[\"translations\"].length\n            ) {\n               updatedVals.translations = [];\n\n               values[\"translations\"].forEach((tran) => {\n                  let updatedTran = {};\n\n                  Object.keys(tran).forEach((tranKey) => {\n                     if (tranKey == \"language_code\")\n                        updatedTran[\"language_code\"] = tran[\"language_code\"];\n                     else updatedTran[`${alias}.${tranKey}`] = tran[tranKey];\n                  });\n\n                  updatedVals.translations.push(updatedTran);\n               });\n            }\n         });\n      });\n\n      return updatedVals;\n   }\n\n   isValidData(rowData) {\n      let result = true;\n\n      // NOTE: should we use filter of the current view of object to filter\n      //        if yes, update .wheres condition in .loadData too\n      if (this.__filterDatasource)\n         result = result && this.__filterDatasource.isValid(rowData);\n\n      if (this.__filterDatacollection)\n         result = result && this.__filterDatacollection.isValid(rowData);\n\n      if (result && this.__filterScope)\n         result = result && this.__filterScope.isValid(rowData);\n\n      return result;\n   }\n\n   // Clone\n\n   clone(settings) {\n      settings = settings || this.toObj();\n      var clonedDatacollection = new this.constructor(settings, this.AB);\n      clonedDatacollection.__datasource = this.__datasource;\n      clonedDatacollection._dataStatus = this._dataStatus;\n\n      // clonedDatacollection.__dataCollection = this.__dataCollection.copy();\n      clonedDatacollection.__filterDatacollection.setValue(\n         settings.settings.objectWorkspace.filterConditions\n      );\n\n      var parseMe = () => {\n         if (clonedDatacollection.__dataCollection) {\n            clonedDatacollection.__dataCollection.parse(\n               this.__dataCollection\n                  .find({})\n                  .filter((row) =>\n                     clonedDatacollection.__filterDatacollection.isValid(row)\n                  )\n            );\n         }\n         if (clonedDatacollection.__treeCollection) {\n            clonedDatacollection.__treeCollection.parse(\n               this.__treeCollection\n                  .find({})\n                  .filter((row) =>\n                     clonedDatacollection.__filterDatacollection.isValid(row)\n                  )\n            );\n         }\n      };\n\n      parseMe();\n\n      // return new Promise((resolve, reject) => {\n      //    // load the data\n      //    clonedDatacollection\n      //       .loadData()\n      //       .then(() => {\n\n      // set the cursor\n      clonedDatacollection.setStaticCursor();\n\n      var cursorID = this.getCursor();\n      if (cursorID) {\n         // NOTE: webix documentation issue: .getCursor() is supposed to return\n         // the .id of the item.  However it seems to be returning the {obj}\n         if (cursorID.id) cursorID = cursorID.id;\n\n         clonedDatacollection.setCursor(cursorID);\n      }\n\n      return clonedDatacollection;\n\n      // resolve(clonedDatacollection);\n      //       })\n      //       .catch(reject);\n      // });\n   }\n\n   filteredClone(filters) {\n      var obj = this.toObj();\n\n      // check to see that filters are set (this is sometimes helpful to select the first record without doing so at the data collection level)\n      if (filters?.rules?.length) {\n         if (obj.settings.objectWorkspace.filterConditions?.rules?.length) {\n            obj.settings.objectWorkspace.filterConditions.rules =\n               obj.settings.objectWorkspace.filterConditions.rules.concat(\n                  filters.rules\n               );\n         } else {\n            obj.settings.objectWorkspace.filterConditions = filters;\n         }\n      }\n      let clonedDC = this.clone(obj);\n      return clonedDC; // new ABViewDataCollection(settings, this.application, this.parent);\n   }\n\n   //\n   // Event handles\n   //\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    *              emitter: object,\n    *              eventName: string,\n    *              listener: function\n    *            }\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      this.__events = this.__events || [];\n\n      let exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    */\n   eventClear() {\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   get userScopes() {\n      return [];\n   }\n\n   get isCursorFollow() {\n      return (\n         this.settings.followDatacollectionID &&\n         (!this.settings.linkDatacollectionID || !this.settings.linkFieldID)\n      );\n   }\n\n   get datacollectionFollow() {\n      if (!this.isCursorFollow) return null;\n\n      return (this.AB ?? AB).datacollectionByID(\n         this.settings.followDatacollectionID\n      );\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nmodule.exports = class ABDefinitionCore {\n   constructor(attributes, AB) {\n      this.AB = AB;\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n\t\t{\n\t\t\tid: uuid(),\n\t\t\tname: 'name',\n\t\t\ttype: 'xxxxx',\n\t\t\tjson: \"{json}\"\n\t\t}\n\t\t*/\n      if (attributes.id) {\n         this.id = attributes.id;\n      }\n      this.name =\n         attributes?.name ||\n         attributes?.json?.name ||\n         attributes?.json?.label ||\n         attributes?.json?.translations?.[0]?.label ||\n         \"\";\n      if (!this.name) {\n         this.AB.notify.builder(\n            new Error(\"Attributes for definition had no 'name'\"),\n            {\n               context: \"ABDefinitionCore.fromValues()\",\n               attributes,\n            }\n         );\n      }\n      this.type = attributes.type || attributes?.json?.type || \"\";\n      this.json = attributes.json || null;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      return {\n         id: this.id,\n         name: this.name,\n         type: this.type,\n         json: this.json,\n      };\n   }\n\n   /**\n    * @method destroy()\n    * destroy the current instance of ABDefinition\n    * Also remove it from our parent application\n    * @return {Promise}\n    */\n   destroy() {\n      return this.AB.definitionDestroy(this.id);\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABObject with it's parent ABApplication\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   async save() {\n      if (this.id) {\n         return this.AB.definitionUpdate(this.id, this.toObj());\n      } else {\n         return this.AB.definitionCreate(this.toObj());\n      }\n   }\n};\n","/*\n * ABFactoryCore\n * an object that contains the definitions and references for a single tenant.\n * It is expected that an instance of this should be returned from an\n * ABBootstrap.init(req).then((AB)=>{}) call.\n */\n\n// const _ = require(\"lodash\");\n// const uuidv4 = require(\"uuid\");\n\nconst ABApplication = require(\"../platform/ABApplication\");\nconst ABDefinition = require(\"../platform/ABDefinition\");\n\nconst ABComponent = require(\"../platform/ABComponent\");\n\nconst ABFieldManager = require(\"./ABFieldManager\");\n\nconst ABIndex = require(\"../platform/ABIndex\");\nconst ABObject = require(\"../platform/ABObject\");\nconst ABObjectExternal = require(\"../platform/ABObjectExternal\");\nconst ABObjectImport = require(\"../platform/ABObjectImport\");\nconst ABDataCollection = require(\"../platform/ABDataCollection\");\nconst ABObjectQuery = require(\"../platform/ABObjectQuery\");\n\nconst ABHint = require(\"../platform/ABHint\");\nconst ABProcess = require(\"../platform/ABProcess\");\n\nconst ABProcessParticipant = require(\"../platform/process/ABProcessParticipant\");\nconst ABProcessLane = require(\"../platform/process/ABProcessLane\");\nconst ABProcessTaskManager = require(\"./process/ABProcessTaskManager\");\n\nconst ABStep = require(\"../platform/ABStep\");\n\nconst ABViewDetailItem = require(\"../platform/views/ABViewDetailItem\");\nconst ABViewFormItem = require(\"../platform/views/ABViewFormItem\");\n\n// const ABObjectWorkspaceViewGrid = require(\"../platform/workspaceViews/ABObjectWorkspaceViewGrid\");\n// const ABObjectWorkspaceViewKanban = require(\"../platform/workspaceViews/ABObjectWorkspaceViewKanban\");\n// const ABObjectWorkspaceViewGantt = require(\"../platform/workspaceViews/ABObjectWorkspaceViewGantt\");\n\nconst RowFilter = require(\"../platform/RowFilter\");\nconst FilterComplex = require(\"../platform/FilterComplex\");\n\nconst ABMLClass = require(\"../platform/ABMLClass\");\n\nconst EventEmitter = require(\"../platform/ABEmitter\");\n\nclass ABFactory extends EventEmitter {\n   constructor(definitions) {\n      /**\n       * @param {hash} definitions\n       *        { ABDefinition.id : {ABDefinition} }\n       *        of all the definitions defined for the current Tenant\n       */\n\n      super();\n      this.setMaxListeners(0);\n\n      this._definitions = definitions || {};\n      // {hash}  { ABDefinition.id : {ABDefinition} }\n      // ensure ._definitions is a HASH{ ID : {ABDefinition}}\n      if (Array.isArray(definitions)) {\n         var hash = {};\n         definitions.forEach((d) => {\n            hash[d.id] = d;\n         });\n         this._definitions = hash;\n      }\n\n      //\n      //\n      // Manage our working objects\n      //\n\n      this._allApplications = [];\n      // {array} of all the ABApplication(s) in our site.\n\n      this._allObjects = [];\n      // {array} of all the ABObject(s) in our site.\n\n      this._allHints = [];\n      // {array} of all the ABHint(s) in our site.\n\n      this._allProcesses = [];\n      // {array} of all the ABProcess(s) in our site.\n\n      this._allQueries = [];\n      // {array} of all the ABObjectQuery(s) in our site.\n\n      this._allSteps = [];\n      // {array} of all the ABStep(s) in our site.\n\n      this._allDatacollections = [];\n      // {array} of all the ABDataCollection(s) in our site.\n\n      //\n      // Class References\n      //\n      this.Class = {\n         ABApplication,\n         ABComponent,\n         ABDefinition,\n         ABFieldManager,\n         ABIndex,\n         ABMLClass,\n         ABObject,\n         ABObjectExternal,\n         ABObjectImport,\n         ABObjectQuery,\n         ABProcessParticipant,\n         // ABRole      // Do we need this anymore?\n\n         // ABObjectWorkspaceViewGrid,\n         // ABObjectWorkspaceViewKanban,\n         // ABObjectWorkspaceViewGantt,\n\n         ABProcessTaskManager,\n\n         ABViewDetailItem,\n         ABViewFormItem,\n      };\n\n      //\n      // Rules\n      // These are a common set of \"rules\" for all platforms.\n      //\n      this.rules = {\n         /**\n          * @method AB.rules.isUUID\n          * evaluate a given value to see if it matches the format of a uuid\n          * @param {string} key\n          * @return {boolean}\n          */\n         isUUID: function (key) {\n            var checker = RegExp(\n               \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\",\n               \"i\"\n            );\n            return checker.test(key);\n         },\n\n         /**\n          * @method AB.rules.nameFilter()\n          * return a properly formatted name for an AppBuilder object.\n          * @param {string} name\n          *        The name of the object we are conditioning.\n          * @return {string}\n          */\n         nameFilter: function (name) {\n            return String(name).replace(/[^a-z0-9_.]/gi, \"\");\n         },\n\n         /**\n          * @method AB.rules.toApplicationNameFormat()\n          * return a properly formatted Application Name\n          * @param {string} name\n          *        The name of the Application we are conditioning.\n          * @return {string}\n          */\n         toApplicationNameFormat: function (name) {\n            return \"AB_\" + this.nameFilter(name);\n         },\n\n         /**\n          * @method AB.rules.toFieldRelationFormat()\n          * This function uses for define relation name of Knex Objection\n          * return a relation name of column\n          * @param {string} colName\n          *        The name of the Column\n          * @return {string}\n          */\n         toFieldRelationFormat: function (colName) {\n            return this.nameFilter(colName) + \"__relation\";\n         },\n\n         /**\n          * @method AB.rules.toJunctionTableFK()\n          * return foriegnkey (FK) column name for a junction table name\n          * @param {string} objectName\n          *        The name of the Object with a connection\n          * @param {string} columnName\n          *        The name of the connection columnName.\n          * @return {string}\n          */\n         toJunctionTableFK: function (objectName, columnName) {\n            var fkName = objectName + \"_\" + columnName;\n\n            if (fkName.length > 64) fkName = fkName.substring(0, 64);\n\n            return fkName;\n         },\n\n         /**\n          * @method AB.rules.toJunctionTableNameFormat()\n          * return many-to-many junction table name\n          * @param {string} appName\n          *        The name of the Application for this object\n          * @param {string} sourceTableName\n          *        The name of the source object we are conditioning.\n          * @param {string} targetTableName\n          *        The name of the target object we are conditioning.\n          * @param {string} colName\n          * @return {string}\n          */\n         toJunctionTableNameFormat: function (\n            appName,\n            sourceTableName,\n            targetTableName,\n            colName\n         ) {\n            // The maximum length of a table name in MySql is 64 characters\n            appName = this.toApplicationNameFormat(appName);\n            if (appName.length > 17) appName = appName.substring(0, 17);\n\n            if (sourceTableName.length > 15)\n               sourceTableName = sourceTableName.substring(0, 15);\n\n            if (targetTableName.length > 15)\n               targetTableName = targetTableName.substring(0, 15);\n\n            colName = this.nameFilter(colName);\n            if (colName.length > 14) colName = colName.substring(0, 14);\n\n            return \"{appName}_{sourceName}_{targetName}_{colName}\"\n               .replace(\"{appName}\", appName)\n               .replace(\"{sourceName}\", sourceTableName)\n               .replace(\"{targetName}\", targetTableName)\n               .replace(\"{colName}\", colName);\n         },\n\n         /**\n          * @method AB.rules.toObjectNameFormat\n          * return a properly formatted Object/Table Name\n          * @param {string} objectName\n          *        The {ABObject}.name of the Object we are conditioning.\n          * @return {string}\n          */\n         toObjectNameFormat: function (objectName) {\n            return `AB_${this.nameFilter(objectName)}`;\n         },\n      };\n\n      // Notify Helpers\n      this.notify.builder = (...params) => {\n         this.notify(\"builder\", ...params);\n      };\n\n      this.notify.developer = (...params) => {\n         this.notify(\"developer\", ...params);\n      };\n   }\n\n   /**\n    * @method definitionClean()\n    * make sure the provided ABDefinition values are properly formatted\n    * @param {ABDefinition} d\n    *        The json settings of an ABDefinition object.\n    */\n   definitionClean(d) {\n      if (typeof d.json == \"string\") {\n         try {\n            d.json = JSON.parse(d.json);\n         } catch (e) {\n            console.log(e);\n            console.error(` Error on definition id[${d.id}]`);\n         }\n      }\n   }\n\n   init() {\n      let allDefinitions = Object.keys(this._definitions).map(\n         (k) => this._definitions[k]\n      );\n      // {array} all our definitions in an Array format.\n\n      // make sure our definitions.json field is an {} and not string\n      allDefinitions.forEach((d) => {\n         this.definitionClean(d);\n      });\n\n      // perform these in order:\n      [\n         \"object\",\n         \"query\",\n         \"datacollection\",\n         \"process\",\n         \"hint\",\n         \"step\",\n         \"application\",\n      ].forEach((type) => {\n         var objTypes = allDefinitions.filter((d) => d.type == type);\n         objTypes.forEach((def) => {\n            let { keyList, keyFn } = this.objectKeysByDef(def);\n            if (keyList) {\n               this[keyList].push(this[keyFn](def.json));\n            }\n         });\n      });\n\n      this.emit(\"init.objects_ready\");\n      return Promise.resolve();\n   }\n\n   /**\n    * @method objectKeysByDef()\n    * Analyze the provided ABDefinition json and return which set of list and\n    * functions are used to create a new instance of this definition.\n    * @param {json} def\n    *        the ABDefinition json of the definition we are evaluating\n    * @return { keyList, keyFn }\n    *        keyList: {string}  which of our internal lists to store this new\n    *                 object.\n    *        keyFn: {string} which of our methods to call with the def.json\n    *               as the param that will create the new object.\n    *\n    *        ex:  this[keyList].push( this[keyFn](def.json));\n    *\n    *        if this def is not one of the types we track,\n    *        keyList = keyFn = null;\n    */\n   objectKeysByDef(def) {\n      switch (def.type) {\n         case \"application\":\n            return { keyList: \"_allApplications\", keyFn: \"applicationNew\" };\n\n         case \"datacollection\":\n            return {\n               keyList: \"_allDatacollections\",\n               keyFn: \"datacollectionNew\",\n            };\n\n         case \"hint\":\n            return { keyList: \"_allHints\", keyFn: \"hintNew\" };\n\n         case \"steps\":\n            return { keyList: \"_allSteps\", keyFn: \"stepNew\" };\n\n         case \"object\":\n            return { keyList: \"_allObjects\", keyFn: \"objectNew\" };\n\n         case \"process\":\n            return { keyList: \"_allProcesses\", keyFn: \"processNew\" };\n\n         case \"query\":\n            return { keyList: \"_allQueries\", keyFn: \"queryNew\" };\n\n         default:\n            // we don't manage any other\n            return { keyList: null, keyFn: null };\n      }\n   }\n\n   //\n   // Definitions\n   //\n\n   /**\n    * definitionByID(id)\n    * return an ABDefinition.json value ready for our objects to use.\n    * @param {string} id\n    *        the uuid of the ABDefinition to delete\n    * @param {bool} isRaw\n    *        indicates if we want the full ABDefinition, or the .json param\n    *        true : returns full ABDefinition value.\n    *        false: returns the .json parameter used by most ABObjects.\n    * @return {Promise}\n    */\n   definitionByID(id, isRaw = false) {\n      if (this._definitions[id]) {\n         if (isRaw) {\n            return this._definitions[id];\n         } else {\n            return this._definitions[id].json;\n         }\n      }\n      return null;\n   }\n\n   /**\n    * definitionNew(values)\n    * return an ABDefinition object tied to this Tenant.\n    * @param {obj} values\n    *        The value hash of the ABDefinition object to create.\n    * @return {ABDefinition}\n    */\n   definitionNew(values) {\n      return new ABDefinition(values, this);\n   }\n\n   /**\n    * definitionsParse()\n    * include the incoming definitions into our ABFactory. These new\n    * definitions will replace any existing ones with the same .id.\n    * @param {array[ABDefinitioin]} defs\n    *     the incoming array of ABDefinitions to parse.\n    * @return {Promise}\n    */\n   definitionsParse(defs = []) {\n      if (!Array.isArray(defs)) {\n         defs = [defs];\n      }\n\n      // store/replace the incoming definitions\n      // 1st: insert ALL our definitions internally\n      defs.forEach((d) => {\n         this.definitionClean(d);\n         this._definitions[d.id] = d;\n      });\n      // 2nd: Now we can then go through and signal the \"updates\"\n      // and the related objects can find their dependent definitions.\n      defs.forEach((d) => {\n         this.definitionSync(\"updated\", d.id, d);\n      });\n\n      return Promise.resolve();\n   }\n\n   /**\n    * definitionSync()\n    * Synchronize an individual definition into our repository of definitions.\n    * @param {string} op\n    *        the type of synchronization this is\n    *        [ \"created\", \"updated\", \"destroyed\"]\n    * @param {uuid} id\n    *        the definition.id of the definition we are synchronizing\n    * @param {json} def\n    *        the ABDefinition attributes we are storing.\n    */\n   definitionSync(op, id, def) {\n      var { keyList, keyFn } = this.objectKeysByDef(def);\n      if (keyList) {\n         var curr;\n         switch (op) {\n            case \"created\":\n               this[keyList].push(this[keyFn](def.json));\n               this.emit(\"definition.created\", def.json);\n               break;\n\n            case \"updated\":\n               // get the current object\n               curr = this[keyList].find((d) => d.id == id);\n\n               // remove from list\n               this[keyList] = this[keyList].filter((d) => d.id != id);\n               // add new one:\n               this[keyList].push(this[keyFn](def.json));\n\n               // signal this object needs to be updated:\n               // NOTE: if this is one of the objects we are tracking,\n               // we don't need to this.emit() the message.\n               if (curr) {\n                  curr.emit(\"definition.updated\", def.json);\n               } else {\n                  this.emit(\"definition.updated\", def.json);\n               }\n               break;\n\n            case \"destroyed\":\n               // get the current object\n               curr = this[keyList].find((d) => d.id == id);\n               if (curr) {\n                  // remove from list\n                  this[keyList] = this[keyList].filter((d) => d.id != id);\n\n                  // signal this object needs to be updated:\n                  curr.emit(\"definition.deleted\", def.json);\n\n                  this.emit(\"definition.deleted\", def.json);\n               }\n               break;\n         }\n      }\n   }\n\n   //\n   // ABObjects\n   //\n   /**\n    * @method applications()\n    * return all the ABApplications that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABApplications.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   applications(fn = () => true) {\n      return (this._allApplications || []).filter(fn);\n   }\n\n   /**\n    * @method applicationByID()\n    * returns a single ABApplication that matches the given ID.\n    * @param {string} ID\n    *        the .id/.name/.label of the ABApplication we are searching\n    *        for.\n    * @return {ABApplication}\n    *        the matching ABApplication object if found\n    *        {null} if not found.\n    */\n   applicationByID(ID) {\n      return this.applications((a) => a.id == ID)[0];\n   }\n\n   /**\n    * @method applicationNew()\n    * Return a new instance of an ABApplication object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABApplication object we are\n    *        creating.\n    * @return {ABApplication}\n    */\n   applicationNew(values) {\n      return new ABApplication(values, this);\n   }\n\n   /**\n    * @method datacollections()\n    * return an array of all the ABDataCollection for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABDataCollection that\n    *        this fn returns true for.\n    * @return {array}\n    *        array of ABDataCollection\n    */\n   datacollections(filter = () => true) {\n      return (this._allDatacollections || []).filter(filter);\n   }\n\n   /**\n    * @method datacollectionByID()\n    * returns a single ABDatacollection that matches the given ID.\n    * @param {string} ID\n    *        the .id/.name/.label of the ABDatacollection we are searching\n    *        for.\n    * @return {ABDatacollection}\n    *        the matching ABDatacollection object if found\n    *        {null} if not found.\n    */\n   datacollectionByID(ID) {\n      // an undefined or null ID should not match any DC.\n      if (!ID) return null;\n\n      return this.datacollections((dc) => {\n         return dc.id == ID || dc.name == ID || dc.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method datacollectionNew()\n    * create a new instance of ABDataCollection\n    * @param {obj} values\n    *        the initial values for the DC\n    * @return {ABDatacollection}\n    */\n   datacollectionNew(values) {\n      var dc = new ABDataCollection(values, this);\n      dc.on(\"destroyed\", () => {\n         // make sure it is no longer in our internal list\n         this._allDatacollections = this._allDatacollections.filter(\n            (d) => d.id != dc.id\n         );\n      });\n      return dc;\n   }\n\n   /**\n    * @method fieldNew()\n    * return an instance of a new (unsaved) ABField that is tied to a given\n    * ABObject.\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    * @param {obj} values  the initial values for this field.\n    *                - { key:'{string}'} is required\n    * @param {ABObject} object  the parent object this field belongs to.\n    * @return {ABField}\n    */\n   fieldNew(values, object) {\n      // NOTE: ABFieldManager returns the proper ABFieldXXXX instance.\n      return ABFieldManager.newField(values, object);\n   }\n\n   /**\n    * @method indexNew()\n    * return an instance of a new (unsaved) ABIndex.\n    * @return {ABIndex}\n    */\n   indexNew(values, object) {\n      return new ABIndex(values, object);\n   }\n\n   /**\n    * @method Label()\n    * a simple label factory.\n    * It is expected to be called like this:\n    * @codestart\n    *    var L = AB.Label();\n    *    var outputText = L(\"Hello World\");\n    *    var o2 = L(\"I'm {0} years old\", [5]);\n    * @codeend\n    * @return {fn}\n    */\n   Label() {\n      return (key, altText, values = []) => {\n         var label = key;\n         if (altText) {\n            if (Array.isArray(altText)) {\n               values = altText;\n            } else {\n               label = altText;\n            }\n         }\n\n         values.forEach((v, i) => {\n            var sub = `{${i}}`;\n            label = label.replaceAll(sub, v);\n         });\n\n         return label;\n      };\n   }\n\n   /**\n    * @method objects()\n    * return an array of all the ABObjects for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABObjects that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of ABObject\n    */\n   objects(filter = () => true) {\n      return (this._allObjects || []).filter(filter);\n   }\n\n   /**\n    * @method objectByID()\n    * return the specific object requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   objectByID(ID) {\n      return this.objects((o) => {\n         return o.id == ID || o.name == ID || o.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method objectNew()\n    * return an instance of a new (unsaved) ABObject that is tied to this\n    * ABApplication.\n    * NOTE: this new object is not included in our this.objects until a .save()\n    * is performed on the object.\n    * @return {ABObject}\n    */\n   objectNew(values) {\n      var newObj = null;\n\n      if (values.isExternal == true)\n         newObj = new ABObjectExternal(values, this);\n      else if (values.isImported == true)\n         newObj = new ABObjectImport(values, this);\n      else newObj = new ABObject(values, this);\n\n      /*\n      // IS THIS CORRECT?\n      newObj.on(\"destroyed\", () => {\n         // make sure it is no longer in our internal list\n         this._allObjects = this._allObjects.filter((o) => o.id != newObj.id);\n      });\n      */\n\n      return newObj;\n   }\n\n   objectFile() {\n      return this.objectByID(\"4a9d89c9-f4eb-41af-91e4-909eff389f3e\");\n   }\n\n   objectLanguage() {\n      return this.objectByID(\"d84cd351-d96c-490f-9afb-2a0b880ca0ec\");\n   }\n\n   objectProcessForm() {\n      return this.objectByID(\"d36ae4c8-edef-48d8-bd9c-79a0edcaa067\");\n   }\n\n   objectProcessInstance() {\n      return this.objectByID(\"2ba85be0-78db-4eda-ba43-c2c4e3831849\");\n   }\n\n   objectRole() {\n      return this.objectByID(\"c33692f3-26b7-4af3-a02e-139fb519296d\");\n   }\n\n   objectScope() {\n      return this.objectByID(\"af10e37c-9b3a-4dc6-a52a-85d52320b659\");\n   }\n\n   objectToken() {\n      return this.objectByID(\"08826ac7-4b33-4745-a3d7-f7831ca4ff59\");\n   }\n\n   objectUser() {\n      return this.objectByID(\"228e3d91-5e42-49ec-b37c-59323ae433a1\");\n   }\n\n   //\n   // Hints\n   //\n   /**\n    * @method hints()\n    * return all the ABHints that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABHints.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   hints(filter = () => true) {\n      return (this._allHints || []).filter(filter);\n   }\n\n   /**\n    * @method hintByID()\n    * return the specific hint requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   hintID(ID) {\n      return this.hints((h) => {\n         return h.id == ID || h.name == ID || h.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method hintNew()\n    * return an instance of a new (unsaved) ABHint that is tied to this\n    * ABApplication.\n    * NOTE: this new hint is not included in our this.hints until a .save()\n    * is performed on the object.\n    * @return {ABHint}\n    */\n   hintNew(values) {\n      var newHint = new ABHint(values, this);\n\n      return newHint;\n   }\n\n   //\n   // Steps\n   //\n   /**\n    * @method steps()\n    * return all the ABSteps that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABSteps.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   steps(filter = () => true) {\n      return (this._allSteps || []).filter(filter);\n   }\n\n   /**\n    * @method stepByID()\n    * return the specific step requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   stepID(ID) {\n      return this.steps((s) => {\n         return s.id == ID || s.name == ID || s.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method stepNew()\n    * return an instance of a new (unsaved) ABStep that is tied to this\n    * ABApplication.\n    * NOTE: this new step is not included in our this.steps until a .save()\n    * is performed on the object.\n    * @return {ABHint}\n    */\n   stepNew(id, hintID) {\n      var stepDef = this.definitionByID(id);\n      if (stepDef) {\n         var getStep = new ABStep(stepDef, this);\n         return getStep;\n      } else {\n         var params = {\n            settings: {\n               hint: hintID,\n            },\n         };\n         var newStep = new ABStep(params, this);\n         return newStep;\n      }\n      return null;\n   }\n\n   //\n   // Processes\n   //\n   /**\n    * @method processes()\n    * return all the ABProcess that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABProcess.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   processes(filter = () => true) {\n      return (this._allProcesses || []).filter(filter);\n   }\n\n   /**\n    * @method processByID()\n    * return the specific process requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   processByID(ID) {\n      return this.processes((p) => {\n         return p.id == ID || p.name == ID || p.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method processNew()\n    * Return a new instance of an ABProcess object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABProcess object we are\n    *        creating.\n    * @return {ABProcess}\n    */\n   processNew(values) {\n      return new ABProcess(values, this);\n   }\n\n   /**\n    * @method processElementNew(id)\n    * return an instance of a new ABProcessOBJ that is tied to a given\n    * ABProcess.\n    * @param {string} id\n    *        the ABDefinition.id of the element we are creating\n    * @param {ABProcess} process\n    *        the process this task is a part of.\n    * @return {ABProcessTask}\n    */\n   processElementNew(id, process) {\n      var taskDef = this.definitionByID(id);\n      if (taskDef) {\n         switch (taskDef.type) {\n            case ABProcessParticipant.defaults().type:\n               return new ABProcessParticipant(taskDef, process, this);\n            // break;\n\n            case ABProcessLane.defaults().type:\n               return new ABProcessLane(taskDef, process, this);\n            // break;\n\n            default:\n               // default to a Task\n               return ABProcessTaskManager.newTask(taskDef, process, this);\n            // break;\n         }\n      }\n      return null;\n   }\n\n   /**\n    * @method processElementNewForModelDefinition(def)\n    *\n    * return an instance of a new ABProcess[OBJ] that is tied to the given\n    * BPMI:Element definition.\n    *\n    * @param {BPMI:Element} element the element definition from our BPMI\n    *              modler.\n    * @return {ABProcess[OBJ]}\n    */\n   processElementNewForModelDefinition(element, process) {\n      var newElement = null;\n\n      switch (element.type) {\n         case \"bpmn:Participant\":\n            newElement = new ABProcessParticipant({}, process, this);\n            break;\n\n         case \"bpmn:Lane\":\n            newElement = new ABProcessLane({}, process, this);\n            break;\n\n         default:\n            var defaultDef = ABProcessTaskManager.definitionForElement(element);\n            if (defaultDef) {\n               newElement = ABProcessTaskManager.newTask(\n                  defaultDef,\n                  process,\n                  this\n               );\n            }\n            break;\n      }\n\n      // now make sure this new Obj pulls any relevant info from the\n      // diagram element\n      if (newElement) {\n         newElement.fromElement(element);\n      }\n      return newElement;\n   }\n\n   /**\n    * @method queries()\n    * return an array of all the ABObjectQuery(s).\n    * @param {fn} filter\n    *        a filter fn to return a set of ABObjectQuery(s) that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of ABObjectQuery\n    */\n   queries(filter = () => true) {\n      return (this._allQueries || []).filter(filter);\n   }\n   // queriesAll() {\n   //    console.error(\n   //       \"ABFactory.queriesAll() Depreciated! Use .queries() instead. \"\n   //    );\n   //    return this.queries();\n   // }\n\n   /**\n    * @method queryByID()\n    * return the specific query requested by the provided id.\n    * NOTE: this method has been extended to allow .name and .label\n    * as possible lookup values.\n    * @param {string} ID\n    * @return {ABObjectQuery}\n    */\n   queryByID(ID) {\n      return this.queries((q) => {\n         return q.id == ID || q.name == ID || q.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method queryNew()\n    * return an instance of a new (unsaved) ABObjectQuery that is tied to this\n    * ABFactory.\n    * @return {ABObjectQuery}\n    */\n   queryNew(values) {\n      return new ABObjectQuery(values, this);\n   }\n\n   /**\n    * @method rowfilterNew()\n    * return an instance of a new RowFilter that is tied to this\n    * ABFactory.\n    * @return {RowFilter}\n    */\n   rowfilterNew(App, idBase) {\n      if (App) {\n         console.error(\"!! Who is calling this with an App?\");\n      }\n      return new RowFilter(App || this._App, idBase, this);\n   }\n\n   /**\n    * @method filterComplexNew()\n    * return an instance of a new FilterComplex that is tied to this\n    * ABFactory.\n    * @return {FilterComplex}\n    */\n   filterComplexNew(idBase, options = {}) {\n      return new FilterComplex(idBase, this, options);\n   }\n\n   /**\n    * @method viewNewDetatched()\n    * Return an instance of a View that is NOT attached to an ABApplication.\n    * @return {ABViewXXX}\n    */\n   viewNewDetatched(values) {\n      if (!this._mockApp) {\n         this._mockApp = this.applicationNew({});\n      }\n      return this._mockApp.viewNew(values, this._mockApp);\n   }\n\n   //\n   // Utilities\n   //\n\n   /**\n    * notify()\n    * will send alerts to a group of people. These alerts are usually about\n    * configuration errors, or software problems.\n    * @param {string} domain\n    *     which group of people we are sending a notification to.\n    * @param {Error} error\n    *     An error object generated at the point of issue.\n    * @param {json} info\n    *     Additional related information concerning the issue.\n    */\n   notify(/* ...params */) {\n      console.error(\n         \"ABFactory.notify() is expected to be overwritten by the platform!\"\n      );\n   }\n\n   /**\n    * notifyInfo()\n    * a common routine to parse the info parameter provided to .notify() into\n    * a more detailed set of data.\n    * @param {json} info\n    * @return {json}\n    */\n   _notifyInfo(info) {\n      var moreInfo = {};\n\n      if (info) {\n         Object.keys(info).forEach((k) => {\n            switch (k) {\n               case \"field\":\n                  moreInfo.objectID = info[k].object?.id;\n                  moreInfo.objectName = info[k].object?.name;\n                  moreInfo.fieldID = info[k].id;\n                  moreInfo.fieldName = info[k].label || info[k].name;\n                  break;\n\n               case \"object\":\n                  moreInfo.objectID = info[k].id;\n                  moreInfo.objectName = info[k].name;\n                  break;\n\n               case \"datacollection\":\n                  moreInfo.datacollectionID = info[k].id;\n                  moreInfo.datacollectionName = info[k].label || info[k].name;\n                  var ds = info[k].datasource;\n                  if (ds) {\n                     moreInfo.datacollectionDSID = ds.id;\n                     moreInfo.datacollectionDSName = ds.name;\n                  }\n                  break;\n\n               case \"process\":\n                  moreInfo.processID = info[k].id;\n                  moreInfo.processName = info[k].label || info[k].name;\n                  break;\n\n               case \"req\":\n                  moreInfo.req = {\n                     jobID: info[k].jobID,\n                     tenantID: info[k]._tenantID,\n                     user: info[k]._user,\n                  };\n                  break;\n\n               case \"task\":\n                  if (info[k].process) {\n                     moreInfo.processID = info[k].process.id;\n                     moreInfo.processName =\n                        info[k].process.label || info[k].process.name;\n                  }\n                  moreInfo.taskID = info[k].id;\n                  moreInfo.taskName = info[k].label || info[k].name;\n                  break;\n\n               case \"view\":\n                  if (info[k].application) {\n                     moreInfo.applicationID = info[k].application.id;\n                     moreInfo.applicationName =\n                        info[k].application.label || info[k].application.name;\n                  }\n                  moreInfo.viewID = info[k].id;\n                  moreInfo.viewName = info[k].label || info[k].name;\n                  moreInfo.viewKey = info[k].key;\n                  break;\n               default:\n                  moreInfo[k] = info[k];\n                  break;\n            }\n         });\n      }\n\n      return moreInfo;\n   }\n}\n\nmodule.exports = ABFactory;\n","/*\n * ABFieldManager\n *\n * An interface for managing the different ABFields available in our AppBuilder.\n *\n */\n\n/*\n * Fields\n * A name => ABField  hash of the different ABFields available.\n */\nvar Fields = {};\n\nvar AllFieldClasses = [\n   require(\"../platform/dataFields/ABFieldString\"),\n   require(\"../platform/dataFields/ABFieldLongText\"),\n   require(\"../platform/dataFields/ABFieldNumber\"),\n   require(\"../platform/dataFields/ABFieldDate\"),\n   require(\"../platform/dataFields/ABFieldDateTime\"),\n   require(\"../platform/dataFields/ABFieldBoolean\"),\n   require(\"../platform/dataFields/ABFieldList\"),\n   require(\"../platform/dataFields/ABFieldTree\"),\n   require(\"../platform/dataFields/ABFieldEmail\"),\n   require(\"../platform/dataFields/ABFieldFile\"),\n   require(\"../platform/dataFields/ABFieldImage\"),\n   require(\"../platform/dataFields/ABFieldUser\"),\n   require(\"../platform/dataFields/ABFieldConnect\"),\n   require(\"../platform/dataFields/ABFieldCalculate\"),\n   require(\"../platform/dataFields/ABFieldTextFormula\"),\n   require(\"../platform/dataFields/ABFieldFormula\"),\n   require(\"../platform/dataFields/ABFieldAutoIndex\"),\n   require(\"../platform/dataFields/ABFieldJson\"),\n   require(\"../platform/dataFields/ABFieldCombine\"),\n   require(\"../platform/dataFields/ABFieldSelectivity\"),\n];\n\nAllFieldClasses.forEach((FIELD) => {\n   Fields[FIELD.defaults().key] = FIELD;\n});\n\nmodule.exports = class ABFieldManager {\n   /*\n    * @function allFields\n    * return all the currently defined ABFields in an array.\n    * @return [{ABField},...]\n    */\n   static allFields() {\n      var fields = [];\n      for (var f in Fields) {\n         fields.push(Fields[f]);\n      }\n      return fields;\n   }\n\n   /**\n    * @function fieldByKey()\n    * Return a specific ABField that matches the given key\n    * @param {string} key\n    *        The ABField.key value we are looking for.\n    * @return {ABFieldXXX || undefined}\n    */\n   static fieldByKey(key) {\n      return Fields[key];\n   }\n\n   /*\n    * @function newField\n    * return an instance of an ABField based upon the values.key value.\n    * @return {ABField}\n    */\n   static newField(values, object) {\n      if (values.key) {\n         try {\n            return new Fields[values.key](values, object);\n         } catch (err) {\n            console.log(\"Error\", err);\n            console.log(\"Available fields\", Fields);\n            console.log(\"Requested field\", values.key);\n         }\n      } else {\n         console.log(\"-------\");\n         console.log(\"values:\");\n         console.error(values);\n         console.log();\n         console.error(\"object:\");\n         console.error(object);\n         console.log(\"-------\");\n         throw new Error(\n            `ABFieldManager.newField(): Unknown Field Key [${values.name}][${values.key}] for object[${object.name}]`\n         );\n         //// TODO: what to do here?\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nmodule.exports = class ABHintCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"name\", \"description\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      // this.elements().forEach((e) => {\n      //    e.onProcessReady();\n      // });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      description: 'description',\n      type: 'hint',\n      settings: {\n         active: {boolean},\n         view: uuid\n      }\n    }\n    */\n      let active = attributes?.settings.hasOwnProperty(\"active\")\n         ? attributes?.settings?.active\n         : \"1\";\n\n      this.id = attributes?.id || \"\";\n      this.name = attributes?.name || \"New Tutorial\";\n      this.description = attributes?.description || \"\";\n      this.type = attributes?.type || \"hint\";\n      this.settings = {};\n      this.settings.active = active;\n      this.settings.transition = attributes?.settings?.transition;\n      this.settings.showIntroStep = attributes?.settings?.showIntroStep;\n      this.settings.view = attributes?.settings?.view || \"\";\n      this.stepIDs = attributes?.stepIDs || [];\n\n      let currSteps = this?._steps || {};\n      this._steps = {};\n      (attributes?.stepIDs || []).forEach((sID) => {\n         if (!sID) return;\n         var ele = this.AB.stepNew(sID, this.id);\n         if (ele) {\n            this._steps[sID] = ele;\n         }\n      });\n      if (attributes) super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"type\", \"settings\", \"stepIDs\", \"id\", \"name\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   /**\n    * steps()\n    * return an array of steps that match the given filter (or all steps\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABStep]}\n    */\n   steps(fn = () => true) {\n      var allSteps = Object.keys(this._steps).map((e) => {\n         return this._steps[e];\n      });\n      return allSteps.filter(fn);\n   }\n\n   /**\n    * stepAdd()\n    * insert a step to be added to this hint.\n    * @param {ABStep} element\n    *        the full instance of an ABStep to track.\n    */\n   stepAdd(step) {\n      this._steps[step.id] = step;\n   }\n\n   /**\n    * stepByID()\n    * return the {ABStep} that has the given .id\n    * @param {string} id\n    * @return {ABStep[OBJ]}\n    */\n   stepByID(id) {\n      return this._steps[id] ?? null;\n   }\n\n   /**\n    * stepRemove()\n    * remove a step from being displayed by this hint.\n    * @param {id} ABStep ID\n    *        an ID of a step\n    *        to remove.\n    */\n   stepRemove(id) {\n      // remove from stepIDs array\n      let stepIndex = this.stepIDs.indexOf(id);\n      if (stepIndex > -1) {\n         this.stepIDs.splice(stepIndex, 1);\n      }\n      // remove from _steps definitions\n      delete this._steps[id];\n   }\n};\n","const ABMLClass = require(\"../platform/ABMLClass\");\n\nmodule.exports = class ABIndexCore extends ABMLClass {\n   constructor(attributes, object) {\n      super([\"label\"], object.AB);\n      this.object = object;\n\n      this.fromValues(attributes);\n   }\n\n   fromValues(attributes) {\n      /*\n      {\n        id: uuid(),\n        name: 'name',\n        fields:[\n            {ABDataField.id}\n        ],\n        unique: {boolean}\n      }\n      */\n      this.id = attributes.id;\n      this.type = \"index\";\n      this.name = attributes.name;\n      this.unique = JSON.parse(attributes.unique || false);\n\n      // Convert to an array\n      if (attributes.fieldIDs && !Array.isArray(attributes.fieldIDs)) {\n         attributes.fieldIDs = [attributes.fieldIDs];\n      }\n\n      this._unknownFieldIDs = [];\n      this.fields = (attributes.fieldIDs || [])\n         .map((f) => {\n            let field = this.object.fieldByID(f);\n            if (!field) {\n               this._unknownFieldIDs.push(f);\n               let err = new Error(\n                  `Index[${this.name}][${this.id}] is referencing an unknown field[${f}]`\n               );\n               this.AB.notify.developer(err, {\n                  index: this.id,\n                  field: f,\n               });\n            }\n            return field;\n         })\n         .filter((fId) => fId);\n\n      if (this.fields.length == 0) {\n         let err = new Error(\n            `Index[${this.name}][${this.id}] is not referencing any fields`\n         );\n         this.AB.notify.developer(err, {\n            index: this.id,\n            attributeFieldIDs: attributes.fieldIDs || [],\n         });\n      }\n\n      // let the MLClass process the Translations\n      super.fromValues(attributes);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      let result = super.toObj();\n\n      result.id = this.id;\n      result.type = \"index\";\n      result.name = this.name;\n      result.unique = this.unique;\n\n      // Convert to an array\n      if (this.fields && !Array.isArray(this.fields)) {\n         this.fields = [this.fields];\n      }\n\n      result.fieldIDs = (this.fields || [])\n         .map((f) => {\n            // Convert to the id of field\n            return f.id || f;\n         })\n         .filter((fId) => fId);\n\n      // carry along the unknown Field IDs so a\n      // developer/builder can come along and trace\n      // what happened.\n      this._unknownFieldIDs.forEach((f) => {\n         result.fieldIDs.push(f);\n      });\n\n      return result;\n   }\n\n   get indexName() {\n      let tableName = this.object.dbTableName();\n\n      // Maximum 64 characters long\n      return `${tableName}_${this.name}`.replace(/ /g, \"\").substring(0, 64);\n   }\n\n   get uniqueName() {\n      let indexName = this.indexName.substring(0, 57);\n\n      return `${indexName}_unique`;\n   }\n};\n","/**\n * ABMLClassCore\n * manage the multilingual information of an instance of a AB Defined Class.\n *\n * these classes have certain fields (\"label\", \"description\"), that can be\n * represented in different language options as defined by our platform.\n *\n * This core ABMLClass will internally track the multilingual fields\n * (this.mlFields) and auto\n */\nvar ABEmitter = require(\"../platform/ABEmitter\");\nmodule.exports = class ABMLClassCore extends ABEmitter {\n   constructor(fieldList, AB) {\n      super();\n      this.mlFields = fieldList || [\"label\"];\n      // {array}\n      // field names of values that are multilingual\n\n      this.AB = AB;\n      // {ABFactory}\n      // our common source of references for other AB objects\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   /**\n    * @method fromValues\n    * called during the .fromValues() work chain.  Should be called\n    * AFTER all the current data is already populated.\n    */\n   fromValues(attributes) {\n      this.translations = attributes.translations;\n\n      // if translations were provided\n      if (this.translations) {\n         // multilingual fields: label, description\n         this.translate();\n      } else {\n         // maybe this came from a form that has ML values in the attributes, but\n         // no .translations[] yet:\n         // check for mlFields in attributes and record them here:\n         (this.mlFields || []).forEach((field) => {\n            if (attributes[field]) {\n               this[field] = attributes[field];\n            }\n         });\n      }\n   }\n\n   /**\n    * @function defaultTranslations()\n    * return an initial .translations entry to initialize the\n    * translations values of a given translateable object.\n    * @param {array} fields  the multilingual fields this obj manages.\n    * @param {json}  values  a default set of values for this object.\n    * @return {array}  of translation entries.\n    */\n   defaultTranslations(fields, values) {\n      values = values || {};\n\n      var entry = {\n         // Question: should this be this.AB.Multilingual.currentLanguage() || \"en\"\n         // currently since the defaults are sent in programattically, we are\n         // expecting the labels to be in \"en\"\n         language_code: \"en\",\n      };\n\n      fields.forEach((f) => {\n         entry[f] = values[f] || f;\n      });\n\n      return [entry];\n   }\n\n   /**\n    * @method languageDefault\n    * return a default language code.\n    * @return {string}\n    */\n   languageDefault() {\n      return \"en\";\n   }\n\n   /**\n    * @method toObj()\n    * called during the .toObj() work chain.  Should be called\n    * BEFORE the current data is populated.\n    */\n   toObj() {\n      this.unTranslate();\n\n      return {\n         translations: this.translations,\n      };\n   }\n\n   /**\n    * @method toDefinition()\n    * convert this instance into an ABDefinition object.\n    * @return {ABDefinition}\n    */\n   toDefinition() {\n      return this.AB.definitionNew({\n         id: this.id,\n         name: this.name,\n         type: this.type,\n         json: this.toObj(),\n      });\n   }\n\n   /**\n    * @method translate\n    * Given a set of json data, pull out any multilingual translations\n    * and flatten those values to the base object.\n    * @param {obj} obj  The instance of the object being translated\n    * @param {json} json The json data being used for translation.\n    *                      There should be json.translations = [ {transEntry}, ...]\n    *                      where transEntry = {\n    *                          language_code:'en',\n    *                          field1:'value',\n    *                          ...\n    *                      }\n    * @param {array} fields an Array of multilingual fields to pull to\n    *                       the obj[field] value.\n    */\n   translate(obj, json, fields, languageCode = null) {\n      if (!obj) obj = this;\n      if (!json) json = this;\n      if (!fields) fields = this.mlFields || [];\n\n      if (!json.translations) {\n         json.translations = [];\n      }\n\n      if (typeof json.translations == \"string\") {\n         json.translations = JSON.parse(json.translations);\n      }\n\n      var currLanguage = languageCode || this.languageDefault();\n\n      if (fields && fields.length > 0) {\n         // [fix] if no matching translation is in our json.translations\n         //       object, then just use the 1st one.\n         var first = null; // the first translation entry encountered\n         var found = false; // did we find a matching translation?\n\n         json.translations.forEach(function (t) {\n            if (!first) first = t;\n\n            // find the translation for the current language code\n            if (t.language_code == currLanguage) {\n               found = true;\n\n               // copy each field to the root object\n               fields.forEach(function (f) {\n                  if (t[f] != null) obj[f] = t[f];\n\n                  obj[f] = t[f] || \"\"; // default to '' if not found.\n               });\n            }\n         });\n\n         // if !found, then use the 1st entry we did find.  prepend desired\n         // [language_code] to each of the fields.\n         if (!found && first) {\n            // copy each field to the root object\n            fields.forEach(function (f) {\n               if (first[f] != null && first[f] != \"\")\n                  obj[f] = `[${currLanguage}]${first[f]}`;\n               else obj[f] = \"\"; // default to '' if not found.\n            });\n         }\n      }\n   }\n\n   /**\n    * @method unTranslate\n    * Take the multilingual information in the base obj, and push that\n    * down into the json.translations data.\n    * @param {obj} obj  The instance of the object with the translation\n    * @param {json} json The json data being used for translation.\n    *                      There should be json.translations = [ {transEntry}, ...]\n    *                      where transEntry = {\n    *                          language_code:'en',\n    *                          field1:'value',\n    *                          ...\n    *                      }\n    * @param {array} fields an Array of multilingual fields to pull from\n    *                       the obj[field] value.\n    */\n   unTranslate(obj, json, fields) {\n      if (!obj) obj = this;\n      if (!json) json = this;\n      if (!fields) fields = this.mlFields || [];\n\n      if (!json.translations) {\n         json.translations = [];\n      }\n\n      var currLanguage = this.languageDefault();\n\n      if (fields && fields.length > 0) {\n         var foundOne = false;\n\n         json.translations.forEach(function (t) {\n            // find the translation for the current language code\n            if (t.language_code == currLanguage) {\n               // copy each field to the root object\n               fields.forEach(function (f) {\n                  // verify obj[f] is defined\n                  // --> DONT erase the existing translation\n                  if (obj[f] != null) {\n                     t[f] = obj[f];\n                  }\n               });\n\n               foundOne = true;\n            }\n         });\n\n         // if we didn't update an existing translation\n         if (!foundOne) {\n            // create a translation entry:\n            var trans = {};\n\n            // assume current languageCode:\n            trans.language_code = currLanguage;\n\n            fields.forEach(function (field) {\n               if (obj[field] != null) {\n                  trans[field] = obj[field];\n               }\n            });\n\n            json.translations.push(trans);\n         }\n      }\n   }\n};\n","//\n// ABModelCore\n//\n// Represents the Data interface for an ABObject data.\n//\n// to use an ABModel to load a DataTable:\n// Method 1:\n//  gather all the data externally and send to the DataTable\n//    Model.findAll()\n//    .then((data)=>{\n//      DataTable.parse(data);\n//    })\n//\n\nmodule.exports = class ABModelCore {\n   constructor(object) {\n      // link me to my ABObject\n      this.object = object;\n      this.AB = object.AB;\n\n      this._where = null;\n      this._sort = null;\n      this._skip = null;\n      this._limit = null;\n\n      this.staleRefreshInProcess = false;\n      this.staleRefreshMap = {\n         /* id : Promise */\n      };\n      this.staleRefreshPending = [];\n      this.staleRefreshTimerID = null;\n\n      // include this\n      this.responseContext = { key: \"--\", context: {} };\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   contextKey(key) {\n      this.responseContext.key = key || \"--\";\n   }\n\n   contextValues(values) {\n      this.responseContext.context = values || {};\n   }\n\n   // Prepare multilingual fields to be untranslated\n   // Before untranslating we need to ensure that values.translations is set.\n   prepareMultilingualData(values) {\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n      // if mlFields are inside of the values saved we want to translate otherwise do not because it will reset the translation field and you may loose unchanged translations\n      var shouldTranslate = false;\n      if (mlFields.length) {\n         mlFields.forEach(function (field) {\n            if (values[field] != null) {\n               shouldTranslate = true;\n            }\n         });\n      }\n      if (shouldTranslate) {\n         if (\n            values.translations == null ||\n            typeof values.translations == \"undefined\" ||\n            values.translations == \"\"\n         ) {\n            values.translations = [];\n         }\n         this.object.unTranslate(values, values, mlFields);\n      }\n   }\n\n   request(method, params) {\n      console.error(\n         \"!!! ABModelCore.request() should be overridden by platform.\"\n      );\n      return Promise.resolve();\n   }\n\n   // /**\n   //  * @method create\n   //  * update model values on the server.\n   //  */\n   // create(values) {\n\n   //   this.prepareMultilingualData(values);\n\n   //   var params = {\n   //     url: this.object.urlRest(),\n   //     params: values\n   //   }\n   //   return this.request('post', params)\n   //     .then((data) => {\n\n   //       this.normalizeData(data);\n\n   //       return data;\n\n   //       // FIX: now with sockets, the triggers are fired from socket updates.\n   //       // trigger a create event\n   //       // triggerEvent('create', this.object, data);\n\n   //     })\n   //     .catch(reject);\n\n   // }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   // delete(id) {\n\n   //   var params = {\n   //     url: this.object.urlRestItem(id)\n   //   }\n   //   return this.request('delete', params)\n   //     .then((data) => {\n\n   //       return data;\n\n   //       // FIX: now with sockets, the triggers are fired from socket updates.\n   //       // trigger a delete event\n   //       // triggerEvent('delete', this.object, id);\n\n   //     })\n   // }\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   //   findAll(cond) {\n\n   //     cond = cond || {};\n\n   //     var params = {\n   //       url: this.object.urlRest(),\n   //       params: cond\n   //     }\n   //     return this.request('get', params)\n   //       .then((data) => {\n\n   //         this.normalizeData(data.data);\n\n   //         resolve(data);\n   //       })\n   //       .catch((err) => {\n   // /// TODO: this should be done in platform/ABModel:\n   //         // if (err && err.code) {\n   //         //  switch(err.code) {\n   //         //    case \"ER_PARSE_ERROR\":\n   //         //      OP.Error.log('AppBuilder:ABModel:findAll(): Parse Error with provided condition', { error: err, condition:cond })\n   //         //      break;\n\n   //         //    default:\n   //         //      OP.Error.log('AppBuilder:ABModel:findAll(): Unknown Error with provided condition', { error: err, condition:cond })\n   //         //      break;\n   //         //  }\n\n   //         // }\n   // console.error(err);\n   //       })\n\n   //   }\n\n   urlParamsCreate(values) {\n      return {\n         url: this.object.urlRest(),\n         params: values,\n      };\n   }\n\n   urlParamsDelete(id) {\n      return {\n         url: this.object.urlRestItem(id),\n      };\n   }\n\n   urlParamsFind(cond) {\n      return {\n         url: this.object.urlRest(),\n         params: cond || {},\n      };\n   }\n\n   urlParamsUpdate(id, values) {\n      return {\n         url: this.object.urlRestItem(id),\n         params: values,\n      };\n   }\n\n   /**\n    * @method count\n    * count a data find with the provided condition.\n    */\n   count(cond) {\n      cond = cond || {};\n\n      var params = {\n         url: this.object.urlRestCount(),\n         params: cond,\n      };\n      return this.request(\"get\", params)\n         .then((numberOfRows) => {\n            resolve(numberOfRows);\n         })\n         .catch((err) => {\n            // TODO: this should be done in platform/ABModel\n\n            // OP.Error.log('AppBuilder:ABModel:count(): Parse Error with provided condition', { error: err, condition:cond })\n\n            // reject(err);\n            console.error(err);\n         });\n   }\n\n   /**\n    * @method staleRefresh\n    * Process a request to refresh the data for a given entry.\n    * This method is called from a ABDataview when it receives\n    * a 'ab.datacollection.stale' message.\n    * This method will try to queue similar reqeusts and then issue 1 large\n    * request, rather than numerous individual ones.\n    * @param {obj} cond  the condition of the entry we are requesting.\n    * @return {Promise}\n    */\n   staleRefresh(cond) {\n      // cond should be { where:{ id: X } } format.\n      var PK = this.object.PK();\n\n      var currID = cond[PK]; // just in case we get a { id: X }\n      if (cond.where) {\n         currID = cond.where[PK];\n      }\n\n      return new Promise((resolve, reject) => {\n         if (!currID) {\n            var Err = new Error(\n               \"Model.staleRefresh(): could not resolve .\" + PK\n            );\n            Err.cond = cond;\n            reject(Err);\n            return;\n         }\n\n         // convert to PK : Promise object:\n         var entry = {\n            resolve: resolve,\n            reject: reject,\n         };\n         entry[PK] = currID;\n\n         // queue up refresh condition\n         this.staleRefreshPending.push(entry);\n\n         // if ! staleRefreshInProcess\n         if (!this.staleRefreshInProcess) {\n            // set timeout to another 200ms wait after LAST staleRefresh()\n            if (this.staleRefreshTimerID) {\n               clearTimeout(this.staleRefreshTimerID);\n            }\n            this.staleRefreshTimerID = setTimeout(() => {\n               this.staleRefreshProcess();\n            }, 200);\n         }\n      });\n   }\n\n   /**\n    * @method staleRefreshProcess\n    * Actually process the current pending requests.\n    */\n   staleRefreshProcess() {\n      this.staleRefreshInProcess = true;\n      var currentEntries = this.staleRefreshPending;\n      this.staleRefreshPending = [];\n      var PK = this.object.PK();\n\n      var responseHash = {\n         /* id : [{entry}] */\n      };\n      var cond = { where: {} };\n      cond.where[PK] = [];\n\n      console.log(\n         \"Model.staleRefreshProcess(): buffered \" +\n            currentEntries.length +\n            \" requests\"\n      );\n      currentEntries.forEach((e) => {\n         responseHash[e[PK]] = responseHash[e[PK]] || [];\n         responseHash[e[PK]].push(e);\n      });\n\n      cond.where[PK] = Object.keys(responseHash);\n\n      this.findAll(cond).then((res) => {\n         // for each entry we got back\n         if (Array.isArray(res.data) && res.data.length) {\n            res.data.forEach((data) => {\n               // find it's matching request:\n               if (responseHash[data[PK]]) {\n                  // respond to the pending promise\n                  // and remove these entries from responseHash\n                  var entries = responseHash[data[PK]];\n                  entries.forEach((entry) => {\n                     var resolve = entry.resolve;\n                     resolve({ data: [data] });\n                  });\n\n                  delete responseHash[data[PK]];\n               } else {\n                  console.error(\n                     \"Model.staleRefreshProcess(): returned entry was not in our responseHash:\",\n                     data,\n                     responseHash\n                  );\n               }\n            });\n         }\n\n         // now if there are any entries left in responseHash,\n         // respond with an empty entry:\n         var allKeys = Object.keys(responseHash);\n         if (allKeys.length > 0) {\n            console.warn(\n               \"Model.staleRefreshProcess(): \" +\n                  allKeys.length +\n                  \" entries with no responses. \"\n            );\n         }\n         allKeys.forEach((key) => {\n            var resolve = responseHash[key].resolve;\n            resolve({ data: [] });\n            delete responseHash[key];\n         });\n\n         // now check to see if there are any more pending requests:\n         if (this.staleRefreshPending.length > 0) {\n            // process them:\n            this.staleRefreshProcess();\n         } else {\n            // mark we are no longer processing stale requests.\n            this.staleRefreshInProcess = false;\n         }\n      });\n   }\n\n   /**\n     * @method findConnected\n     * return the connected data associated with an instance of this model.\n     *\n     * to limit the result to only a single connected column:\n     *    model.findConnected( 'col1', {data})\n     *    then ((data) => {\n     *      // data = [{obj1}, {obj2}, ... {objN}]\n     *    })\n     *\n     * To find >1 connected field data:\n     *    model.findConnected( ['col1', 'col2'], {data} )\n     *    .then((data) =>{\n     *    \n     *      // data = {\n     *      //     col1 : [{obj1}, {obj2}, ... {objN}],\n     *      //     col2 : [{obj1}, {obj2}, ... {objN}]\n     *      // }\n     *    })\n     *\n     * To find all connected field data:\n     *    model.findConnected( {data} )\n     *    .then((data) =>{\n     *    \n     *      // data = {\n     *      //     connectedColName1 : [{obj1}, {obj2}, ... {objN}],\n     *      //     connectedColName2 : [{obj1}, {obj2}, ... {objN}],\n     *      //    ...\n     *      //     connectedColNameN : [{obj1}, {obj2}, ... {objN}]\n     *      // }\n     *    })\n\n     * @param {string/array} fields  [optional] an array of connected fields you want to return.\n     * @param {obj} data  the current object instance (data) to lookup\n     * @return {Promise}\n     */\n   findConnected(fields, data) {\n      if (typeof data == \"undefined\") {\n         if (!Array.isArray(fields) && typeof fields == \"object\") {\n            data = fields;\n            fields = []; // return all fields\n         }\n      }\n\n      if (typeof fields == \"string\") {\n         fields = [fields]; // convert to an array of values\n      }\n\n      return new Promise((resolve, reject) => {\n         // sanity checking:\n         if (!data.id) {\n            // I can't find any connected items, if I can't find this one:\n            resolve(null);\n            return;\n         }\n\n         let cond = {};\n         cond[this.object.PK()] = data.id;\n         this.findAll({ where: cond, populate: true })\n            .then((results) => {\n               if (\n                  !results.data ||\n                  !Array.isArray(results.data) ||\n                  results.data.length == 0\n               ) {\n                  resolve([]); // no data to return.\n                  return;\n               }\n\n               // work with the first object.\n               var myObj = results.data[0];\n\n               // if only 1 field requested, then return that\n               if (fields.length == 1) {\n                  let data =\n                     myObj[\n                        fields[0].replace(/[^a-z0-9\\.]/gi, \"\") + \"__relation\"\n                     ];\n                  if (!data) return resolve([]);\n\n                  if (!Array.isArray(data)) data = [data];\n\n                  resolve(data);\n                  return;\n               }\n\n               // if no fields requested, return them all:\n               if (fields.length == 0) {\n                  var allFields = this.object.fields((f) => {\n                     return f.settings.linkType;\n                  });\n                  allFields.forEach((f) => {\n                     fields.push(f.columnName);\n                  });\n               }\n\n               var returnData = {};\n               fields.forEach((colName) => {\n                  returnData[colName] =\n                     myObj[colName.replace(/[^a-z0-9\\.]/gi, \"\") + \"__relation\"];\n               });\n\n               resolve(returnData);\n            })\n            .catch((err) => {\n               console.error(\"!!! error with findConnected() attempt:\", err);\n               reject(err);\n            });\n      });\n   }\n\n   // /**\n   //  * @method loadInto\n   //  * loads the current values into the provided Webix DataTable\n   //  * @param {DataTable} DT  A Webix component that can dynamically load data.\n   //  */\n   // loadInto(DT) {\n\n   //   // if a limit was applied, then this component should be loading dynamically\n   //   if (this._limit) {\n\n   //     DT.define('datafetch', this._limit);\n   //     DT.define('datathrottle', 250);  // 250ms???\n\n   //     // catch the event where data is requested:\n   //     // here we will do our own findAll() so we can persist\n   //     // the provided .where condition.\n\n   //     // oh yeah, and make sure to remove any existing event handler when we\n   //     // perform a new .loadInto()\n   //     DT.___AD = DT.___AD || {};\n   //     if (DT.___AD.onDataRequestEvent) {\n   //       DT.detachEvent(DT.___AD.onDataRequestEvent);\n   //     }\n   //     DT.___AD.onDataRequestEvent = DT.attachEvent(\"onDataRequest\", (start, count) => {\n\n   //       var cond = {\n   //         where: this._where,\n   //         sort: this._sort,\n   //         limit: count,\n   //         skip: start\n   //       }\n\n   //       if (DT.showProgress)\n   //         DT.showProgress({ type: \"icon\" });\n\n   //       this.findAll(cond)\n   //         .then((data) => {\n   //           data.data.forEach((item) => {\n   //             if (item.properties != null && item.properties.height != \"undefined\" && parseInt(item.properties.height) > 0) {\n   //               item.$height = parseInt(item.properties.height);\n   //             } else if (parseInt(this._where.height) > 0) {\n   //               item.$height = parseInt(this._where.height)\n   //             }\n   //           });\n   //           DT.parse(data);\n\n   //           if (DT.hideProgress)\n   //             DT.hideProgress();\n\n   //         })\n\n   //       return false; // <-- prevent the default \"onDataRequest\"\n   //     });\n\n   //     DT.refresh();\n   //   }\n\n   //   // else just load it all at once:\n   //   var cond = {};\n   //   if (this._where) cond.where = this._where;\n   //   if (this._sort) cond.sort = this._sort;\n   //   if (this._limit != null) cond.limit = this._limit;\n   //   if (this._skip != null) cond.skip = this._skip;\n\n   //   if (DT.showProgress)\n   //     DT.showProgress({ type: \"icon\" });\n\n   //   this.findAll(cond)\n   //     .then((data) => {\n   //       data.data.forEach((item) => {\n   //         if (item.properties != null && item.properties.height != \"undefined\" && parseInt(item.properties.height) > 0) {\n   //           item.$height = parseInt(item.properties.height);\n   //         } else if (parseInt(this._where.height) > 0) {\n   //           item.$height = parseInt(this._where.height)\n   //         }\n   //       });\n   //       DT.parse(data);\n\n   //       if (DT.hideProgress)\n   //         DT.hideProgress();\n\n   //     })\n   //     .catch((err) => {\n   //       console.error('!!!!!', err);\n   //     })\n\n   // }\n\n   // /**\n   //  * @method limit\n   //  * set the limit value for this set of data\n   //  * @param {integer} limit  the number or elements to return in this call\n   //  * @return {ABModel} this object that is chainable.\n   //  */\n   // limit(limit) {\n   //   this._limit = limit;\n   //   return this;\n   // }\n\n   // /**\n   //  * @method skip\n   //  * set the skip value for this set of data\n   //  * @param {integer} skip  the number or elements to skip\n   //  * @return {ABModel} this object that is chainable.\n   //  */\n   // skip(skip) {\n   //   this._skip = skip;\n   //   return this;\n   // }\n\n   //   /**\n   //    * @method update\n   //    * update model values on the server.\n   //    */\n   //   update(id, values) {\n\n   //     this.prepareMultilingualData(values);\n\n   //     // remove empty properties\n   //     for (var key in values) {\n   //       if (values[key] == null)\n   //         delete values[key];\n   //     }\n\n   //     var params = {\n   //       url: this.object.urlRestItem(id),\n   //       params: values\n   //     }\n   //     return this.request('put', params)\n   //       .then((data) => {\n\n   //         // .data is an empty object ??\n\n   //         this.normalizeData(data);\n\n   //         return data;\n\n   //         // FIX: now with sockets, the triggers are fired from socket updates.\n   //         // trigger a update event\n   //         // triggerEvent('update', this.object, data);\n\n   //       })\n   //       .catch((err)=>{\n   // console.error(err);\n   //       });\n\n   //   }\n\n   /**\n    * @method upsert\n    * upsert model values on the server.\n    */\n   upsert(values) {\n      this.prepareMultilingualData(values);\n\n      // remove empty properties\n      for (var key in values) {\n         if (values[key] == null) delete values[key];\n      }\n\n      var params = {\n         url: this.object.urlRest(),\n         params: values,\n      };\n      return this.request(\"put\", params)\n         .then((data) => {\n            // .data is an empty object ??\n\n            this.normalizeData(data);\n\n            return data;\n\n            // FIX: now with sockets, the triggers are fired from socket updates.\n            // trigger a update event\n            // triggerEvent('update', this.object, data);\n         })\n         .catch((err) => {\n            console.error(err);\n         });\n   }\n\n   /**\n    * @method where\n    * set the where condition for the data being loaded.\n    * @param {json} cond  the json condition statement.\n    * @return {ABModel} this object that is chainable.\n    */\n   where(cond) {\n      this._where = cond;\n      return this;\n   }\n\n   /**\n    * @method where\n    * set the sort condition for the data being loaded.\n    * @param {json} cond  the json condition statement.\n    * @return {ABModel} this object that is chainable.\n    */\n   sort(cond) {\n      this._sort = cond;\n      return this;\n   }\n\n   /**\n    * @method refresh\n    * refresh model definition on the server.\n    */\n   refresh() {\n      console.error(\"!!! Depreciated: where is this being called from?\");\n      return Promise.resolve();\n\n      // var params = {\n      //    url: this.object.urlRestRefresh(),\n      // };\n      // return this.request(\"put\", params);\n   }\n\n   normalizeData(data) {\n      // convert to array\n      if (!(data instanceof Array)) data = [data];\n\n      // find all connected fields\n      var connectedFields = this.object.connectFields();\n\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n\n      // if this object has some date fields, convert the data to date object:\n      var dateFields =\n         this.object.fields(function (f) {\n            return f.key == \"date\" || f.key == \"datetime\";\n         }) || [];\n\n      // calculate fields\n      var calculatedFields = this.object.fields((f) => f.key == \"calculate\");\n\n      data.forEach((d) => {\n         if (d == null) return;\n\n         // various PK name\n         if (!d.id && this.object.PK() != \"id\") d.id = d[this.object.PK()];\n\n         // loop through data's connected fields\n         connectedFields.forEach((c) => {\n            // get the relation name so we can change the original object\n            var relationName = c.relationName();\n\n            // if (d[c.columnName] == null)\n            //  d[c.columnName] = '';\n\n            // if there is no data we can exit now\n            if (d[relationName] == null) return;\n\n            // if relation data is still a string and isn't empty\n            if (\n               typeof d[relationName] == \"string\" &&\n               d[relationName].length > 0\n            ) {\n               // parse the string into an object\n               d[relationName] = JSON.parse(d[relationName]);\n            }\n\n            // if the data is an array we need to loop through it\n            if (Array.isArray(d[relationName])) {\n               d[relationName].forEach((r) => {\n                  // if translations are present and they are still a string\n                  if (r.translations && typeof r.translations == \"string\") {\n                     // parse the string into an object\n                     r.translations = JSON.parse(r.translations);\n                  }\n               });\n               // if the data is not an array it is a single item...check that has translations and it is a string\n            } else if (\n               d[relationName].translations &&\n               typeof d[relationName].translations == \"string\"\n            ) {\n               // if so parse the string into an object\n               d[relationName].translations = JSON.parse(\n                  d[relationName].translations\n               );\n            }\n\n            // set .id to relation columns\n            let objectLink = c.datasourceLink;\n            let olPK = objectLink.PK();\n            var relatedMlFields = objectLink.multilingualFields();\n\n            if (Array.isArray(d[relationName])) {\n               d[relationName].forEach((subData) => {\n                  // update .id values\n                  // if (olPK != \"id\" && subData[olPK]) subData.id = subData[olPK];\n                  const relationValue = c.getRelationValue(subData);\n                  if (olPK != \"id\") subData.id = relationValue;\n\n                  // perform Translation\n                  if (relatedMlFields.length) {\n                     objectLink.translate(subData, subData, relatedMlFields);\n                  }\n               });\n            } else {\n               // update .id value\n               // if (d[relationName][olPK]) {\n               //    d[relationName].id = d[relationName][olPK];\n               // }\n               const relationValue = c.getRelationValue(d[relationName]);\n               if (relationValue) {\n                  d[relationName].id = relationValue;\n               }\n\n               // perform Translation\n               if (relatedMlFields.length) {\n                  objectLink.translate(\n                     d[relationName],\n                     d[relationName],\n                     relatedMlFields\n                  );\n               }\n            }\n\n            // if (\n            //    objectLink &&\n            //    olPK != \"id\" &&\n            //    d[relationName] &&\n            //    !d[relationName].id\n            // ) {\n            //    // is array\n            //    if (d[relationName].forEach) {\n            //       d[relationName].forEach((subData) => {\n            //          if (subData[olPK]) subData.id = subData[olPK];\n            //       });\n            //    } else if (d[relationName][olPK]) {\n            //       d[relationName].id = d[relationName][olPK];\n            //    }\n            // }\n\n            // if (relatedMlFields.length) {\n            //    d[relationName];\n            //    objectLink.translate(\n            //       d[relationName],\n            //       d[relationName],\n            //       relatedMlFields\n            //    );\n            // }\n\n            // Change property name of connected field\n            if (!d[c.columnName]) {\n               if (c.linkType() == \"one\") {\n                  if (d[relationName]) {\n                     // d[c.columnName] = d[relationName][olPK];\n                     d[c.columnName] = c.getRelationValue(d[relationName]);\n                  } else {\n                     d[c.columnName] = null;\n                  }\n               } else {\n                  if (d[relationName]) {\n                     if (Array.isArray(d[relationName])) {\n                        try {\n                           d[c.columnName] = (d[relationName] || []).map(\n                              // (i) => i[olPK]\n                              (i) => c.getRelationValue(i)\n                           );\n                        } catch (e) {\n                           console.log(\"+++++++++++++++\");\n                           console.log(`ID:[${c.id}]`);\n                           console.log(`ColumnName:[${c.label}]`);\n                           console.log(`relationName:[${relationName}]`);\n                           console.log(`linkType:[${c.linkType()}]`);\n                           console.log(\"data:\");\n                           console.log(JSON.stringify(d[relationName]));\n                           console.log(\"+++++++++++++++\");\n                        }\n                     } else {\n                        // this is strange: supposed to be \"many\" but coming in\n                        // as \"one\"\n                        console.log(\"+++++++++++++++\");\n                        console.log(`ID:[${c.id}]`);\n                        console.log(`ColumnName:[${c.label}]`);\n                        console.log(`relationName:[${relationName}]`);\n                        console.log(`linkType:[${c.linkType()}]`);\n                        console.log(\"data:\");\n                        console.log(JSON.stringify(d[relationName]));\n                        console.log(\"+++++++++++++++\");\n                        // d[c.columnName] = [d[relationName][olPK]];\n                        d[c.columnName] = [c.getRelationValue(d[relationName])];\n                     }\n                  } else {\n                     d[c.columnName] = [];\n                  }\n               }\n            }\n         });\n\n         if (mlFields.length) {\n            this.object.translate(d, d, mlFields);\n         }\n\n         // convert the data to date object\n         dateFields.forEach((date) => {\n            if (d && d[date.columnName] != null) {\n               // check to see if data has already been converted to a date object\n               if (typeof d[date.columnName] == \"string\") {\n                  if (date.key == \"date\") {\n                     // if we are ignoring the time it means we ignore timezone as well\n                     // so lets trim that off when creating the date so it can be a simple date\n                     d[date.columnName] = this.AB.rules.toDate(\n                        d[date.columnName],\n                        {\n                           format: \"MM/DD/YYYY\",\n                           ignoreTime: true,\n                        }\n                     );\n                  } else {\n                     // Convert UTC to Date\n                     d[date.columnName] = this.AB.rules.toDate(\n                        d[date.columnName]\n                     );\n                     // d[date.columnName] = new Date(moment(d[date.columnName]));\n                  }\n               }\n            }\n         });\n\n         calculatedFields.forEach((calField) => {\n            d[calField.columnName] = calField.format(d);\n         });\n      });\n   }\n};\n","/**\n * ABObjectCore\n *\n * Manage the loading of specific ABObject data into useable objects\n * that can instantiate themselves and provide field and model resources.\n */\n\nvar ABModel = require(\"../platform/ABModel\");\nvar ABMLClass = require(\"../platform/ABMLClass\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABObjectCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      /*\n{\n\tid: uuid(),\n\tconnName: 'string', // Sails DB connection name: 'appdev_default', 'legacy_hris', etc. Default is 'appBuilder'.\n\tname: 'name',\n\tlabelFormat: 'xxxxx',\n\tlabelSettings: Object,\n\tisImported: 1/0,\n\tisExternal: 1/0,\n\ttableName:'string',  // NOTE: store table name of import object to ignore async\n\tprimaryColumnName: 'string', // NOTE: store column name of PK\n\ttransColumnName: 'string', // NOTE: store column name of translations table\n\turlPath:'string',\n\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t// to get other object:\t ABApplication.objectFromRef(obj.importFromObject);\n\ttranslations:[\n\t\t{}\n\t],\n\tfields:[\n\t\t{ABDataField}\n   ],\n   indexes: [\n      {ABIndex}\n   ]\n}\n*/\n\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object. These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   static contextKey() {\n      return \"object\";\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            connName: 'string', // Sails DB connection name: 'appdev_default', 'legacy_hris', etc. Default is 'appBuilder'.\n            name: 'name',\n            labelFormat: 'xxxxx',\n            labelSettings: Object,\n            isImported: 1/0,\n            isExternal: 1/0,\n            tableName:'string',  // NOTE: store table name of import object to ignore async\n            primaryColumnName: 'string', // NOTE: store column name of PK\n            transColumnName: 'string', // NOTE: store column name of translations table\n            urlPath:'string',\n            importFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n                                        // to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n            translations:[\n                {}\n            ],\n            fields:[\n                {ABDataField}\n            ],\n            indexes: [\n               {ABIndex}\n            ]\n        }\n        */\n\n      this.id = attributes.id;\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = attributes.type || \"object\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.connName = attributes.connName || undefined; // undefined == 'appBuilder'\n      // {string} .connName\n      // the sails.config.connections[connName] configuration reference.\n      // if not set ({undefined}), then our default \"appBuilder\" config is used\n\n      this.name = attributes.name || \"\";\n      // {string} .name\n      // A name reference for this ABObject. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      this.labelFormat = attributes.labelFormat || \"\";\n      // {string} .labelFormat\n      // A string template for how to display an entry for this ABObject in\n      // common UI elements like grids, lists, etc...\n\n      this.labelSettings = attributes.labelSettings || {};\n      // {Object} .labelSettings\n\n      this.labelSettings.isNoLabelDisplay = parseInt(\n         this.labelSettings.isNoLabelDisplay || 0\n      );\n      // {bool} .isNoLabelDisplay\n\n      this.isImported = parseInt(attributes.isImported || 0);\n      // {depreciated}\n      // {bool} .isImported\n      // previously used to mark ABObjects that were created in other\n      // ABApplicaitons.  No longer relevant with Global ABObjects\n\n      this.isExternal = parseInt(attributes.isExternal || 0);\n      // {bool} .isExternal\n      // Marks this ABObject as referencing a pre-existing table in the DB that\n      // we are treating as an ABObject.\n      // These objects are not allowed to create/update/destroy the db table\n      // nor can we add/remove fields.\n      // However we are able to customize the Field definitions to change the\n      // column names, hidden attributes, Object label, etc...\n      // We can update our Defintion attributes, but not any actual DB changes.\n\n      this.tableName = attributes.tableName || \"\"; // NOTE: store table name of import object to ignore async\n      // {string} .tableName\n      // the `{database}.{tableName}` of the db table that this ABObject's data\n      // is stored in.\n      // knex does not like .(dot) in table and column names\n      // https://github.com/knex/knex/issues/2762\n      this.tableName = this.tableName.replace(/[^a-zA-Z0-9_ ]/gi, \"\");\n\n      this.primaryColumnName = attributes.primaryColumnName || \"\"; // NOTE: store column name of PK\n      // {string} .primaryColumnName\n      // is the col_name of which key is the primary key.  By default it is\n      // \"uuid\", but in some external objects this might be something else\n      // (\"id\", \"ren_id\", etc...).\n\n      this.transColumnName = attributes.transColumnName || \"\"; // NOTE: store column name of translations table\n      // {string} .transColumnName\n      // this is a workaround to include hris_ren_data and hris_ren_trans data\n\n      this.urlPath = attributes.urlPath || \"\";\n\n      // this.importFromObject = attributes.importFromObject || \"\";\n\n      this.isSystemObject = attributes.isSystemObject;\n      // {bool} .isSystemObject\n      // We are now storing some of our System Required Data as ABObjects as well.\n      // These Objects should not be allowed to be modified by typical AppBuilder\n      // designer.  However we can enable a mode for AB Designer to then expand these\n      // ABObjects, and eventually we can use the AppBuilder to Create the AppBuilder.\n      if (\n         typeof this.isSystemObject == \"undefined\" ||\n         this.isSystemObject == \"false\"\n      ) {\n         this.isSystemObject = false;\n      }\n\n      this.createdInAppID = attributes.createdInAppID;\n      // {string} .createdInAppID\n      // the .id of the ABApplication that originally created this ABObject.\n\n      // if attributes.objectWorkspace DOES exist, make sure it is fully\n      // populated.\n      if (typeof attributes.objectWorkspace != \"undefined\") {\n         if (typeof attributes.objectWorkspace.sortFields == \"undefined\")\n            attributes.objectWorkspace.sortFields = [];\n         if (typeof attributes.objectWorkspace.filterConditions == \"undefined\")\n            attributes.objectWorkspace.filterConditions = [];\n         if (typeof attributes.objectWorkspace.frozenColumnID == \"undefined\")\n            attributes.objectWorkspace.frozenColumnID = \"\";\n         if (typeof attributes.objectWorkspace.hiddenFields == \"undefined\")\n            attributes.objectWorkspace.hiddenFields = [];\n      }\n      this.objectWorkspace = attributes.objectWorkspace || {\n         sortFields: [], // array of columns with their sort configurations\n         filterConditions: [], // array of filters to apply to the data table\n         frozenColumnID: \"\", // id of column you want to stop freezing\n         hiddenFields: [], // array of [ids] to add hidden:true to\n      };\n      // {obj} .objectWorkspace\n      // When in the ABObject editor in the AppBuilder Designer, different\n      // views of the information can be created.  These views are stored here\n      // and are avaiable to other users in the Designer.\n\n      // pull in field definitions:\n      var fields = [];\n      this.fieldIDs = attributes.fieldIDs || [];\n      // {array}  [ ABField.id, ... ]\n      // this is a collection of ALL the ABFields this object references.\n      // This will include ABFields that were directly created for this object\n      // and will include ABFields that were imported.\n\n      this.importedFieldIDs = attributes.importedFieldIDs || [];\n      // {array} [ ABField.id, ... ]\n      // this is a collection of the ABFields in our .fieldIDs that were\n      // IMPORTED.\n\n      this._unknownFieldIDs = [];\n      this.fieldIDs.forEach((id) => {\n         if (!id) return;\n\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            fields.push(this.AB.fieldNew(def, this));\n         } else {\n            this._unknownFieldIDs.push(id);\n            let err = new Error(\n               `O[${this.name}] is referenceing an unknown field id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      });\n      this._fields = fields;\n\n      // pull in index definitions:\n      this.importIndexes(attributes.indexIDs);\n\n      // let the MLClass now process the translations:\n      super.fromValues(attributes);\n   }\n\n   /**\n    * @method importIndexes\n    * instantiate a set of indexes from the given ids.\n    * @param {array} indexIDs The different ABDefinition IDs for each index\n    *        [ \"uuid11\", \"uuid2\", ... \"uuidN\" ]\n    */\n   importIndexes(indexIDs) {\n      this._unknownIndex = [];\n      var indexes = [];\n      (indexIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            indexes.push(this.AB.indexNew(def, this));\n         } else {\n            this._unknownIndex.push(id);\n            let err = new Error(\n               `O[${this.name}] is referenceing an unknown index id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      });\n      this._indexes = indexes;\n   }\n\n   /**\n    * @method exportFields\n    * convert our array of fields into a settings object for saving to disk.\n    * @return {array}\n    */\n   // exportFields() {\n   //     var currFields = [];\n   //     this._fields.forEach((obj) => {\n   //         currFields.push(obj.toObj());\n   //     });\n   //     return currFields;\n   // }\n\n   // /**\n   //  * @method exportFields\n   //  * convert our array of fields into a settings object for saving to disk.\n   //  * @return {array}\n   //  */\n   // exportIndexes() {\n   //    var currIndexes = [];\n   //    this._indexes.forEach((idx) => {\n   //       currIndexes.push(idx.toObj());\n   //    });\n   //    return currIndexes;\n   // }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      var obj = super.toObj();\n\n      // track the field .ids of our fields\n      var fieldIDs = this.fields().map((f) => f.id);\n      (this._unknownFieldIDs || []).forEach((id) => {\n         fieldIDs.push(id);\n      });\n      // NOTE: we keep the ._unknownFieldIDs so a developer/builder\n      // can come back and track down what happened to the missing\n      // ids.\n\n      // track the index .ids of our indexes\n      var indexIDs = this.indexes().map((f) => f.id);\n      (this._unknownIndex || []).forEach((id) => {\n         indexIDs.push(id);\n      });\n\n      return {\n         id: this.id,\n         type: this.type || \"object\",\n         connName: this.connName,\n         name: this.name,\n         labelFormat: this.labelFormat,\n         labelSettings: this.labelSettings || {},\n         isImported: this.isImported,\n         isExternal: this.isExternal,\n         tableName: this.tableName,\n         // NOTE: store table name of import object to ignore async\n         primaryColumnName: this.primaryColumnName,\n         // NOTE: store column name of PK\n         transColumnName: this.transColumnName,\n         // NOTE: store column name of translations table\n         urlPath: this.urlPath,\n         // importFromObject: this.importFromObject,\n         objectWorkspace: this.objectWorkspace,\n         isSystemObject: this.isSystemObject,\n\n         translations: obj.translations,\n         fieldIDs: fieldIDs,\n         importedFieldIDs: this.importedFieldIDs,\n         indexIDs: indexIDs,\n         createdInAppID: this.createdInAppID,\n      };\n   }\n\n   ///\n   /// Objects\n   ///\n\n   /**\n    * @method objectLinks()\n    *\n    *  return an array of ABObject that's connected.\n    *\n    * @param {object} filter\n    * @return {array} - An array of ABObject\n    */\n   objectLinks(/* filter */) {\n      var connectFields = this.connectFields();\n\n      return connectFields.map((f) => f.datasourceLink);\n   }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method fields()\n    * return an array of all the ABFields for this ABObject.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array[ABFieldxxx]}\n    */\n   fields(fn = () => true) {\n      return this._fields.filter(fn);\n   }\n\n   /**\n    * @method fieldByID()\n    * return the object's field from the given {ABField.id}\n    * @param {string} id\n    *        the uuid of the field to return.\n    * @return {ABFieldxxx}\n    */\n   fieldByID(id) {\n      return this.fields((f) => f?.id == id)[0];\n   }\n\n   /**\n    * @method connectFields()\n    *\n    * return an array of the ABFieldConnect that is connect object fields.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array}\n    */\n   connectFields(fn = () => true) {\n      return this.fields((f) => f && f.isConnection).filter(fn);\n   }\n\n   /**\n    * @method fieldImport\n    * register the given ABField.id as an imported field for this ABObject.\n    * The ABField definition should be available before making this call.\n    * After this call, the ABField is included in the ABObject, but the ABObject\n    * has NOT been saved.\n    * @param {ABField} fieldID The ABDefinition.id for a field that is imported\n    *        into this object.\n    */\n   fieldImport(id) {\n      if (!id) return;\n\n      if (this.importedFieldIDs.indexOf(id) == -1) {\n         this.importedFieldIDs.push(id);\n      }\n\n      // just to be safe:\n      var isThere = this._fields.find((f) => f.id == id);\n      if (!isThere) {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            this._fields.push(this.AB.fieldNew(def, this));\n         } else {\n            this._unknownFieldIDs = this._unknownFieldIDs || [];\n            this._unknownFieldIDs.push(id);\n            let err = new Error(\n               `O[${this.name}] is importing an unknown field id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      }\n   }\n\n   /**\n    * @method fieldNew()\n    *\n    * return an instance of a new (unsaved) ABField that is tied to this\n    * ABObject.\n    *\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    *\n    * @return {ABField}\n    */\n   fieldNew(values) {\n      return this.AB.fieldNew(values, this);\n   }\n\n   /**\n    * @method fieldRemove()\n    *\n    * remove the given ABField from our ._fields array and persist the current\n    * values.\n    *\n    * @param {ABField} field The instance of the field to remove.\n    * @return {Promise}\n    */\n   fieldRemove(field) {\n      var origLen = this._fields.length;\n      this._fields = this.fields(function (o) {\n         return o.id != field.id;\n      });\n\n      // be sure to remove this from our imported ids if it was\n      // listed there.\n      this.importedFieldIDs = this.importedFieldIDs.filter(\n         (fid) => fid != field.id\n      );\n\n      if (this._fields.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method fieldReorder()\n    *\n    * reorder the fields in our object\n    *\n    * @param {ABField} field The instance of the field to remove.\n    * @return {Promise}\n    */\n   fieldReorder(sourceId, targetId) {\n      // We know what was moved and what item it has replaced/pushed forward\n      // so first we want to splice the item moved out of the array of fields\n      // and store it so we can put it somewhere else\n      let itemMoved = null;\n      let oPos = 0; // original position\n      for (var i = 0; i < this._fields.length; i++) {\n         if (this._fields[i].columnName == sourceId) {\n            itemMoved = this._fields[i];\n            this._fields.splice(i, 1);\n            oPos = i;\n            break;\n         }\n      }\n      // once we have removed/stored it we can find where its new position\n      // will be by looping back through the array and finding the item it\n      // is going to push forward\n      for (var j = 0; j < this._fields.length; j++) {\n         if (this._fields[j].columnName == targetId) {\n            // if the original position was before the new position we will\n            // follow webix's logic that the drop should go after the item\n            // it was placed on\n            if (oPos <= j) {\n               j++;\n            }\n            this._fields.splice(j, 0, itemMoved);\n            break;\n         }\n      }\n\n      return this.save();\n   }\n\n   /**\n    * @method fieldSave()\n    *\n    * save the given ABField in our ._fields array and persist the current\n    * values.\n    *\n    * @param {ABField} field The instance of the field to save.\n    * @return {Promise}\n    */\n   fieldSave(field) {\n      var isIncluded = this.fieldByID(field.id);\n      if (!isIncluded) {\n         this._fields.push(field);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method fieldAdd()\n    *\n    * save the given ABField in our ._fields array and persist the current\n    * values if they changed.\n    *\n    * @param {ABField} field The instance of the field to save.\n    * @return {Promise}\n    */\n   fieldAdd(field) {\n      var isIncluded = this.fieldByID(field.id);\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._fields.push(field);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method imageFields()\n    *\n    * return an array of the ABFieldImage fields this object has.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array}\n    */\n   imageFields(fn = () => true) {\n      return this.fields((f) => f && f.key == \"image\").filter(fn);\n   }\n\n   /**\n    * @method multilingualFields()\n    *\n    * return an array of columnnames that are multilingual.\n    *\n    * @return {array}\n    */\n   multilingualFields() {\n      return this.fields((f) => f && f.isMultilingual).map((f) => f.columnName);\n   }\n\n   /**\n    * @method indexes()\n    *\n    * return an array of all the ABIndex for this ABObject.\n    *\n    * @param filter {Object}\n    *\n    * @return {array}\n    */\n   indexes(filter = () => true) {\n      return this._indexes.filter(filter);\n   }\n\n   /**\n    * @method indexByID()\n    * return the object's index from the given {ABIndex.id}\n    * @param {string} id\n    *        the id of the ABIndex to return.\n    * @return {ABIndex}\n    */\n   indexByID(id) {\n      return this.indexes((f) => f.id == id)[0];\n   }\n\n   /**\n    * @method indexRemove()\n    * remove the given ABIndex from our ._indexes array and persist the current\n    * values.\n    * @param {ABIndex} index\n    * @return {Promise}\n    */\n   indexRemove(index) {\n      var origLen = this._indexes.length;\n      this._indexes = this.indexes(function (idx) {\n         return idx.id != index.id;\n      });\n\n      // persist our changes if something changed.\n      if (origLen != this._indexes.length) {\n         return this.save();\n      }\n\n      // nothing was removed, so continue on.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method indexSave()\n    * save the given ABIndex in our ._indexes array and persist the current\n    * values.\n    * @param {ABIndex} index\n    * @return {Promise}\n    */\n   indexSave(index) {\n      var isIncluded = this.indexByID(index.id);\n      if (!isIncluded) {\n         this._indexes.push(index);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   ///\n   /// Working with data from server\n   ///\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObject.\n    */\n   model() {\n      var model = new ABModel(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(ABObjectCore.contextKey());\n      model.contextValues({ id: this.id });\n\n      return model;\n   }\n\n   ///\n   /// URL\n   ///\n\n   /**\n    * @method urlRest\n    * return the url to access the data for this object.\n    * @return {string}\n    */\n   urlRest() {\n      return `/app_builder/model/${this.id}`;\n   }\n\n   /**\n    * @method urlRestBatch\n    * return the url to use for batch creates for this object\n    * @return {string}\n    */\n   urlRestBatch() {\n      return `/app_builder/batch/model/${this.id}`;\n   }\n\n   /**\n    * @method urlRestItem\n    * return the url to access the data for an instance of this object.\n    * @return {string}\n    */\n   urlRestItem(id) {\n      return `/app_builder/model/${this.id}/${id}`;\n   }\n\n   /**\n    * @method urlRestLog\n    * return the url to access the logs for this ABObject.\n    * @return {string}\n    */\n   urlRestLog() {\n      return `/app_builder/object/${this.id}/track`;\n   }\n\n   /**\n    * @method urlRestRefresh\n    * return the url to signal a refresh for this object.\n    * @return {string}\n    */\n   urlRestRefresh() {\n      return `/app_builder/model/refreshobject/${this.id}`;\n   }\n\n   /**\n    * @method urlCount\n    * return the url to count of data for this object.\n    * @return {string}\n    */\n   urlRestCount() {\n      return `/app_builder/model/count/${this.id}`;\n   }\n\n   ///\n   ///\tObject Workspace Settings\n   ///\n   get workspaceSortFields() {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) return currView.sortFields;\n         else return null;\n      }\n      // old version\n      else {\n         return this.objectWorkspace.sortFields;\n      }\n   }\n\n   set workspaceSortFields(fields) {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) currView.sortFields = fields;\n      }\n      // old version\n      else {\n         this.objectWorkspace.sortFields = fields;\n      }\n   }\n\n   get workspaceFilterConditions() {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) return currView.filterConditions;\n         else return null;\n      }\n      // old version\n      else {\n         return this.objectWorkspace.filterConditions;\n      }\n   }\n\n   set workspaceFilterConditions(filterConditions) {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) currView.filterConditions = filterConditions;\n      }\n      // old version\n      else {\n         this.objectWorkspace.filterConditions = filterConditions;\n      }\n   }\n\n   get workspaceFrozenColumnID() {\n      return this.objectWorkspace.frozenColumnID;\n   }\n\n   set workspaceFrozenColumnID(id) {\n      this.objectWorkspace.frozenColumnID = id;\n   }\n\n   get workspaceHiddenFields() {\n      return this.objectWorkspace.hiddenFields || [];\n   }\n\n   set workspaceHiddenFields(fields) {\n      this.objectWorkspace.hiddenFields = fields;\n   }\n\n   /**\n    * @method isReadOnly\n    *\n    * @return {boolean}\n    */\n   get isReadOnly() {\n      return this.isImported || this.isExternal;\n   }\n\n   /**\n    * @method defaultValues\n    * Collect a hash of key=>value pairs that represent the default values\n    * from each of our fields.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   defaultValues() {\n      var values = {};\n      this.fields().forEach((f) => {\n         f.defaultValue(values);\n      });\n\n      return values;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an array of any invalid\n    * value errors.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   isValidData(/* data */) {\n      // NOTE: the platform needs to define a way to verify the data\n      console.warn(\"Platform.ABObject.isValidData() missing\");\n      return true;\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this object. This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this object.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      console.error(\"Who is calling this?\");\n\n      if (this.application == null) return null;\n\n      return this.application.urlObject(acrossApp) + this.id;\n   }\n\n   /**\n    * @method urlField\n    * return a string pointer to this object's fields\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlField(acrossApp) {\n      console.error(\"Who is calling this?\");\n\n      return this.urlPointer(acrossApp) + \"/_fields/\";\n   }\n\n   /**\n    * @method PK\n    * return a string of the primary column name\n    *\n    * @return {string}\n    */\n   PK() {\n      return this.primaryColumnName || \"uuid\";\n   }\n\n   remoteCreate(data) {\n      console.log(\n         \"object[\" + this.name + \"] received a remoteCreate() with data:\",\n         data\n      );\n   }\n\n   /**\n    * @method clone\n    * return a clone of ABObject\n    *\n    * @return {ABObjectBase}\n    */\n   clone() {\n      // ignore properties who're spend much performance\n      // NOTE: do not clone them. Just copy reference\n      let ignoreProps = [\"application\", \"_fields\"];\n\n      let cloneOne = JSON.parse(JSON.stringify(this));\n\n      ignoreProps.forEach((prop) => {\n         cloneOne[prop] = this[prop];\n      });\n\n      return cloneOne;\n   }\n\n   /**\n    * @method minRelationData()\n    * return an array of ABField.columnNames that make up\n    * the minimum fields required to display this objects __RELATION\n    * data in our UI widgets.\n    */\n   minRelationData() {\n      var fields = [this.PK()];\n\n      if (this.multilingualFields().length > 0) {\n         fields.push(\"translations\");\n      }\n\n      var labelData = this.labelFormat || \"\";\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            fields.push(field.columnName);\n         });\n      }\n\n      // System requires to include number field values\n      // because they are used on Formula/Calculate fields on client side\n      fields = fields.concat(\n         this.fields((f) => f.key == \"number\").map((f) => f.columnName)\n      );\n\n      return fields;\n   }\n\n   // Display data with label format of object\n   displayData(rowData) {\n      if (rowData == null) return \"\";\n\n      // translate multilingual\n      //// TODO: isn't this a MLObject??  use this.translate()\n      var mlFields = this.multilingualFields();\n      this.translate(rowData, rowData, mlFields);\n\n      var labelData = this.labelFormat || \"\";\n\n      // default label\n      if (!labelData && this.fields().length > 0) {\n         var defaultField = this.fields((f) => f.fieldUseAsLabel())[0];\n         if (defaultField) labelData = \"{\" + defaultField.id + \"}\";\n         else {\n            // if label is empty, then show .id\n            if (!labelData.trim()) {\n               let labelSettings = this.labelSettings || {};\n               if (labelSettings && labelSettings.isNoLabelDisplay) {\n                  labelData = L(labelSettings.noLabelText || \"[No Label]\");\n               } else {\n                  // show id of row\n                  labelData = `${\n                     this.AB.rules.isUUID(rowData.id) ? \"ID: \" : \"\"\n                  }${rowData.id}`;\n               }\n            }\n         }\n      }\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            labelData = labelData.replace(colId, field.format(rowData) || \"\");\n         });\n      }\n\n      // if label is empty, then show .id\n      if (!labelData.trim()) {\n         let labelSettings = this.labelSettings || {};\n         if (labelSettings && labelSettings.isNoLabelDisplay) {\n            labelData = L(labelSettings.noLabelText || \"[No Label]\");\n         } else {\n            // show id of row\n            labelData = `${this.AB.rules.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`;\n         }\n      }\n\n      return labelData;\n   }\n};\n","//\n// ABObjectQuery\n//\n// A type of Object in our system that is based upon a complex relationship of multiple\n// existing Objects.\n//\n// In the QueryBuilder section of App Builder, a new Query Object can be created.\n// An initial Object can be chosen from our current list of Objects. After that, additional Objects\n// and a specified join type can be specified.\n//\n// A list of fields from each specified Object can also be included as the data to be returned.\n//\n// A where statement is also part of the definition.\n//\n\nvar ABObject = require(\"../platform/ABObject\");\nvar ABModelQuery = require(\"../platform/ABModelQuery\");\n\nmodule.exports = class ABObjectQueryCore extends ABObject {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      /*\n{\n\tid: uuid(),\n\tname: 'name',\n\tlabelFormat: 'xxxxx',\n\tisImported: 1/0,\n\turlPath:'string',\n\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t// to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n\ttranslations:[\n\t\t{}\n\t],\n\n\n\n\t// ABOBjectQuery Specific Changes\n\t// we store a list of fields by their urls:\n\tfields:[\n\t\t{\n\t\t\talias: \"\",\n\t\t\tfieldURL:'#/url/to/field',\n\t\t}\n\t],\n\n\n\t// we store a list of joins:\n\tjoins:{\n\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n\t\tobjectURL:\"#/...\",\t\t\t\t\t// the base object of the join\n\t\tlinks: [\n\t\t\t{\n\t\t\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n\t\t\t\tfieldID: \"uuid\",\t\t\t\t\t// the connection field of the object we are joining with.\n\t\t\t\ttype:[left, right, inner, outer]\t// join type: these should match the names of the knex methods\n\t\t\t\t\t\t=> innerJoin, leftJoin, leftOuterJoin, rightJoin, rightOuterJoin, fullOuterJoin\n\t\t\t\tlinks: [\n\t\t\t\t\t...\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\n\t},\n\n\n\twhere: { QBWhere }\n}\n*/\n      this.isQuery = true;\n      // {bool}\n      // a property to mark the difference between an ABObject and ABObjectQuery.\n\n      this.__missingObject = this.__missingObject ?? [];\n      // {array} fieldInfo\n      // the field info that defined an object we can't find.\n\n      this.__missingFields = this.__missingFields ?? [];\n      // {array} [ { objID, fieldID }, ... ]\n      // a list of field definitions that we are unable to resolve.\n\n      this.__cantFilter = [];\n      // {array} [ {field, fieldInfo}, ... ]\n      // a list of field that were assigned but can't be used for filtering.\n\n      this.__duplicateFields = [];\n      // {array} [ {fieldInfo}, ... ]\n      // a list of duplicate field definitions.\n\n      this.__linkProblems = [];\n      // {array} [ { message, data }, ...]\n      // a list of warning messages related to link objects\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   /**\n    * contextKey()\n    * returns a unique key that represents a query in\n    * our networking job resolutions.\n    * @return {string}\n    */\n   static contextKey() {\n      return \"query\";\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.type = \"query\";\n\n      // populate connection objects\n      // this._objects = {};\n      // this.obj2Alias = attributes.obj2Alias || {};\n\n      this.alias2Obj = {}; // this gets built in the .importJoins()\n      // { \"alias\" : object.id }\n      // this is a lookup hash of a referenced alias to the Object it\n      // references.\n\n      this.objectIDs = [];\n      // {array}  of ABObject.id s that are referenced by this query.\n      // this is how we limit our searches on objects.\n      // this gets built in the .importJoins();\n\n      this.viewName = attributes.viewName || \"\";\n      // {string}\n      // this is the SQL tablename of where our Query will store it's\n      // view data.\n\n      // import all our ABObjects\n      this.importJoins(attributes.joins || {});\n\n      // import fields after joins are imported\n      this._fields = null;\n      this.importFields(attributes.fields || []);\n      // {array} [ { alias, field}, {},... ]\n      // an array of field definition structures that mark what fields this\n      // query is interested in pulling data from.\n      //    .alias : {string} matches the alias of the ABObject that the field\n      //             is from\n      //    .field : {ABFieldXXX} the link to the actual ABField instance\n\n      // Import our Where condition\n      this.where = attributes.where || {}; // .workspaceFilterConditions\n      // Fix default where.glue value\n      if (\n         this.where &&\n         !this.where.glue &&\n         this.where.rules &&\n         this.where.rules.length > 0\n      )\n         this.where.glue = \"and\";\n\n      this._objectWorkspaceViews = attributes.objectWorkspaceViews || {};\n\n      this.settings = this.settings || {};\n\n      if (attributes && attributes.settings) {\n         // convert from \"0\" => true/false\n         this.settings.grouping = JSON.parse(\n            attributes.settings.grouping || false\n         );\n         this.settings.hidePrefix = JSON.parse(\n            attributes.settings.hidePrefix || false\n         );\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABObjectQuery instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var result = super.toObj();\n\n      result.viewName = this.viewName;\n\n      result.joins = this.exportJoins();\n      result.fields = this.exportFields();\n      result.where = this.where; // .workspaceFilterConditions\n\n      result.settings = this.settings;\n\n      return result;\n   }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method importFields\n    * instantiate a set of fields from the given attributes.\n    * Our attributes are a set of field URLs That should already be created in their respective\n    * ABObjects.\n    * @param {array} fieldSettings The different field urls for each field\n    */\n   importFields(fieldSettings) {\n      var newFields = [];\n      (fieldSettings || []).forEach((fieldInfo) => {\n         if (fieldInfo == null) return;\n\n         // pull object by alias name\n         let object = this.objectByAlias(fieldInfo.alias);\n\n         // Pull object from .AB\n         if (!object && this.AB) {\n            object = this.AB.objectByID(fieldInfo.objectID);\n\n            // keep\n            if (object) {\n               this._objects = this._objects || {};\n               this._objects[fieldInfo.alias] = object;\n            }\n         }\n\n         if (!object) {\n            this.__missingObject = this.__missingObject ?? [];\n            this.__missingObject.push(fieldInfo);\n            return;\n         }\n\n         let field = object.fieldByID(fieldInfo.fieldID);\n         if (!field) {\n            this.__missingFields = this.__missingFields ?? [];\n            this.__missingFields.push({\n               objID: object.id,\n               fieldID: fieldInfo.fieldID,\n               fieldInfo,\n            });\n            return;\n         }\n\n         if (!this.canFilterField(field)) {\n            this.__cantFilter = this.__cantFilter ?? [];\n            this.__cantFilter.push({ field, fieldInfo });\n         }\n\n         // check duplicate\n         let isNew =\n            newFields.filter(\n               (f) =>\n                  f.alias == fieldInfo.alias && f.field.id == fieldInfo.fieldID\n            ).length < 1;\n\n         if (!isNew) {\n            this.__duplicateFields = this.__duplicateFields ?? [];\n            this.__duplicateFields.push({ fieldInfo });\n         }\n\n         // should be a field of base/join objects\n         if (field && this.canFilterField(field) && isNew) {\n            // add alias to field\n            // create new instance of this field:\n            var def = field.toObj();\n            let clonedField = new field.constructor(def, field.object);\n\n            clonedField.alias = fieldInfo.alias;\n\n            let alias = fieldInfo.alias;\n            if (Array.isArray(this.joins())) {\n               // NOTE: query v1\n               alias = field.object.name;\n            }\n\n            newFields.push({\n               alias: alias,\n               field: clonedField,\n            });\n         }\n      });\n      this._fields = newFields;\n   }\n\n   /**\n    * @method exportFields\n    * convert our array of fields into a settings object for saving to disk.\n    * @return {array}\n    */\n   exportFields() {\n      var currFields = [];\n      this._fields.forEach((fieldInfo) => {\n         currFields.push({\n            alias: fieldInfo.alias,\n            objectID: fieldInfo.field.object.id,\n            fieldID: fieldInfo.field.id,\n         });\n      });\n\n      // let's persist the faulty settings so a developer or builder can\n      // review and fix it by hand.\n      (this.__missingObject || []).forEach((f) => {\n         currFields.push(f);\n      });\n\n      (this.__cantFilter || []).forEach((f) => {\n         currFields.push(f.fieldInfo);\n      });\n\n      return currFields;\n   }\n\n   /**\n    * @method fields()\n    *\n    * Support the ABObject api by returning a list of fields relevant\n    * to this ABObjectQuery.\n    *\n    * @return {array}\n    */\n   fields(fn = () => true) {\n      if (!fn) fn = () => true;\n      return this._fields.map((f) => f.field).filter(fn);\n   }\n\n   ///\n   /// Joins & Objects\n   ///\n\n   /**\n    * @method joins()\n    *\n    * return an object of joins for this Query.\n    *\n    * @return {Object}\n    */\n   joins() {\n      return this._joins || {};\n   }\n\n   /**\n    * @method objects()\n    *\n    * return an array of all the relevant ABObjects for this Query.\n    *\n    * @return {array}\n    */\n   objects(fn = () => true) {\n      // FOR proper expected operation, this fn must only return object\n      // matches for which this ABQuery is managing objects:\n\n      return this.AB.objects((o) => this.objectIDs.indexOf(o.id) > -1).filter(\n         fn\n      );\n   }\n\n   /**\n    * @method objectAlias()\n    *\n    * return alias of of ABObjects.\n    *\n    * @return {string}\n    */\n   objectAlias(objectId) {\n      let result = null;\n\n      Object.keys(this.alias2Obj || {}).forEach((alias) => {\n         if (!result && this.alias2Obj[alias] == objectId) {\n            result = alias;\n         }\n      });\n\n      return result;\n   }\n\n   /**\n    * @method objectBase\n    * return the origin object\n    *\n    * @return {ABObject}\n    */\n   objectBase() {\n      if (!this._joins.objectID) return null;\n\n      return this.AB.objectByID(this._joins.objectID) || null;\n   }\n\n   /**\n    * @method objectByAlias()\n    * return ABObject search by alias name\n    *\n    * @param {string} - alias name\n    * @return {ABClassObject}\n    */\n   objectByAlias(alias) {\n      var objID = this.alias2Obj[alias];\n      if (objID) {\n         return this.objects((o) => o.id == objID)[0];\n      }\n      return null;\n   }\n\n   /**\n    * @method objectByID()\n    * return ABObject search by ID\n    * @param {string} objID\n    *        The requested {ABObject}.id of the object to return.\n    * @return {ABObject} | null\n    */\n   objectByID(objID) {\n      if (objID) {\n         return this.objects((o) => o.id == objID)[0];\n      }\n      return null;\n   }\n\n   /**\n    * @method links()\n    *\n    * return an array of links for this Query.\n    *\n    * @return {array}\n    */\n   links(filter = () => true) {\n      return (this._links || []).filter(filter);\n   }\n\n   /**\n    * @method importJoins\n    * instantiate a set of joins from the given attributes.\n    * Our joins contain a set of ABObject URLs that should already be created in our Application.\n    * @param {Object} settings The different field urls for each field\n    *\t\t\t\t\t{ }\n    */\n   importJoins(settings) {\n      // copy join settings\n      this._joins = this.AB.cloneDeep(settings);\n\n      var uniqueObjectIDs = {};\n      // { obj.id : obj.id }\n      // a hash of object.ids for all the relevant ABObjects necessary for this\n      // ABObjectQuery\n\n      var newLinks = [];\n      // {array} of link definitions\n      // build the operating values for this._links\n\n      let storeObject = (object, alias) => {\n         if (!object) return;\n\n         // var inThere = newObjects.filter(obj => obj.id == object.id && obj.alias == alias ).length > 0;\n         // if (!inThere) {\n         // newObjects[alias] = object;\n         // this.obj2Alias[object.id] = alias;\n         this.alias2Obj[alias] = object.id;\n         uniqueObjectIDs[object.id] = object.id;\n         // newObjects.push({\n         // \talias: alias,\n         // \tobject: object\n         // });\n         // }\n      };\n\n      let storeLinks = (links) => {\n         (links || []).forEach((link) => {\n            // var inThere = newLinks.filter(l => l.fieldID == link.fieldID).length > 0;\n            // if (!inThere) {\n            newLinks.push(link);\n            // }\n         });\n      };\n\n      let processJoin = (baseObject, joins) => {\n         if (!baseObject) return;\n\n         this.__linkProblems = this.__linkProblems ?? [];\n\n         (joins || []).forEach((link) => {\n            // Convert our saved settings:\n            //\t{\n            //\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n            //\t\tobjectID: \"uuid\",\t\t\t\t\t// id of the connection object\n            //\t\tlinks: [\n            //\t\t\t{\n            //\t\t\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n            //\t\t\t\tfieldID: \"uuid\",\t\t\t\t\t// uhe connection field of the object we are joining with.\n            //\t\t\t\ttype:[left, right, inner, outer]\t// join type: these should match the names of the knex methods\n            //\t\t\t\t\t\t=> innerJoin, leftJoin, leftOuterJoin, rightJoin, rightOuterJoin, fullOuterJoin\n            //\t\t\t\tlinks: [\n            //\t\t\t\t\t...\n            //\t\t\t\t]\n            //\t\t\t}\n            //\t\t]\n            //\t},\n\n            var linkField = baseObject.fieldByID(link.fieldID);\n            if (!linkField) {\n               this.__linkProblems.push({\n                  message: `could not resolve our linkField[${link.fieldID}]`,\n                  data: {\n                     link,\n                  },\n               });\n               return;\n            }\n\n            // track our linked object\n            var linkObject = this.AB.objectByID(linkField.settings.linkObject);\n            if (!linkObject) {\n               this.__linkProblems.push({\n                  message: `could not resolve our linked field -> linkObject[${linkField.settings.linkObject}]`,\n                  data: {\n                     link,\n                  },\n               });\n               return;\n            }\n\n            storeObject(linkObject, link.alias);\n\n            storeLinks(link.links);\n\n            processJoin(linkObject, link.links);\n         });\n      };\n\n      // if (!this._joins.objectURL)\n      // \t// TODO: this is old query version\n      // \treturn;\n\n      // store the root object\n      var rootObject = this.objectBase();\n      if (!rootObject) {\n         // this._objects = newObjects;\n         this.__linkProblems.push({\n            message: \"could not resolve our base object\",\n            data: {\n               objectID: this._joins?.objectID,\n            },\n         });\n         return;\n      }\n\n      storeObject(rootObject, \"BASE_OBJECT\");\n\n      storeLinks(settings.links);\n\n      processJoin(rootObject, settings.links);\n\n      // this._objects = newObjects;\n      this._links = newLinks;\n      this.objectIDs = Object.keys(uniqueObjectIDs);\n   }\n\n   /**\n    * @method exportJoins\n    * save our list of objects into our format for persisting on the server\n    * @param {array} settings\n    */\n   exportJoins() {\n      return this.AB.cloneDeep(this._joins || {});\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObjectQuery.\n    */\n   model() {\n      var model = new ABModelQuery(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(this.constructor.contextKey());\n      model.contextValues({ id: this.id }); // the datacollection.id\n\n      return model;\n   }\n\n   /**\n    * @method canFilterObject\n    * evaluate the provided object to see if it can directly be filtered by this\n    * query.\n    * @param {ABObject} object\n    * @return {bool}\n    */\n   canFilterObject(object) {\n      if (!object) return false;\n\n      // I can filter this object if it is one of the objects in my joins\n      return (\n         this.objects((obj) => {\n            return obj.id == object.id;\n         }).length > 0\n      );\n   }\n\n   /**\n    * @method canFilterField\n    * evaluate the provided field to see if it can be filtered by this\n    * query.\n    * @param {ABObject} object\n    * @return {bool}\n    */\n   canFilterField(field) {\n      if (!field) return false;\n\n      // I can filter a field if it's object OR the object it links to can be filtered:\n      let object = field.object;\n      // Transition:\n      // let linkedObject = this.objects(\n      //    (obj) => obj.id == field.settings.linkObject\n      // )[0];\n      var linkedObject = field.datasourceLink;\n\n      return this.canFilterObject(object) || this.canFilterObject(linkedObject);\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this object. This url pointer\n    * should be able to be used by this.AB.urlResolve() to return\n    * this object.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      console.error(\n         \"ABQueryCore.urlPointer(): Depreciated: Where is this being called?\"\n      );\n      return this.application.urlQuery(acrossApp) + this.id;\n   }\n\n   /**\n    * @method isGroup\n    *\n    * @return {boolean}\n    */\n   get isGroup() {\n      return this.settings.grouping || false;\n   }\n\n   /**\n    * @method isReadOnly\n    *\n    * @return {boolean}\n    */\n   get isReadOnly() {\n      return true;\n   }\n\n   /**\n    * @method isDisabled()\n    * check this contains removed objects or fields\n    *\n    * @return {boolean}\n    */\n   isDisabled() {\n      return this.disabled || false;\n   }\n\n   get workspaceFilterConditions() {\n      let filterConditions = super.workspaceFilterConditions;\n      if (\n         filterConditions == null ||\n         filterConditions.rules == null ||\n         !filterConditions.rules.length\n      ) {\n         filterConditions = this.where;\n      }\n\n      return filterConditions;\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nconst ABProcessTaskSubProcess = require(\"../platform/process/tasks/ABProcessTaskSubProcess\");\n\nmodule.exports = class ABProcessCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      this.elements().forEach((e) => {\n         e.onProcessReady();\n      });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      type: 'xxxxx',\n      json: \"{json}\"\n    }\n    */\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || \"process\";\n      this.xmlDefinition = attributes.xmlDefinition || null;\n\n      // this.json = attributes.json || null;\n      let currElements = this._elements || {};\n      this._elements = {};\n      (attributes.elementIDs || []).forEach((eID) => {\n         var ele = this.AB.processElementNew(eID, this);\n         if (ele) {\n            this._elements[eID] = ele;\n         } else {\n            // current eID isn't one of our definitions yet, so might be\n            // a temporary .diagramID from an unsaved task:\n            if (currElements[eID]) {\n               this._elements[eID] = currElements[eID];\n            } else {\n               this.emit(\n                  \"warning\",\n                  `P[${this.name}] is referencing an unknown process element id[${eID}]`,\n                  { process: this.id, eID }\n               );\n            }\n         }\n      });\n\n      this._connections = attributes.connections || {};\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"id\", \"name\", \"xmlDefinition\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      data.elementIDs = [];\n      for (var e in this._elements) {\n         // NOTE: when a task is initially created, it doesn't have an .id\n         // so we need to reference it by it's .diagramID\n         data.elementIDs.push(\n            this._elements[e].id ?? this._elements[e].diagramID\n         );\n      }\n\n      data.connections = this._connections;\n\n      // data.participantIDs = [];\n      // for (var p in this._participants) {\n      //     data.participantIDs.push(this._participants[p].id);\n      // }\n\n      return data;\n   }\n\n   //\n   // XML Model\n   //\n\n   /**\n    * modelDefinition()\n    * return the current xml definition for this process\n    * @return {string}\n    */\n   modelDefinition() {\n      return this.xmlDefinition;\n   }\n\n   /**\n    * modelNew()\n    * initialze our xml definition to a new state.\n    * @return {string}\n    */\n   modelNew() {\n      this.xmlDefinition = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<bpmn2:definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:bpmn2=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:di=\"http://www.omg.org/spec/DD/20100524/DI\" xsi:schemaLocation=\"http://www.omg.org/spec/BPMN/20100524/MODEL BPMN20.xsd\" id=\"process-def-${this.id}\" targetNamespace=\"http://bpmn.io/schema/bpmn\">\n  <bpmn2:process id=\"Process_1\" isExecutable=\"true\">\n    <bpmn2:startEvent id=\"StartEvent_1\"/>\n  </bpmn2:process>\n  <bpmndi:BPMNDiagram id=\"BPMNDiagram_1\">\n    <bpmndi:BPMNPlane id=\"BPMNPlane_1\" bpmnElement=\"Process_1\">\n      <bpmndi:BPMNShape id=\"_BPMNShape_StartEvent_2\" bpmnElement=\"StartEvent_1\">\n        <dc:Bounds height=\"36.0\" width=\"36.0\" x=\"412.0\" y=\"240.0\"/>\n      </bpmndi:BPMNShape>\n    </bpmndi:BPMNPlane>\n  </bpmndi:BPMNDiagram>\n</bpmn2:definitions>`;\n\n      //// TODO: create a default Start Task here??\n   }\n\n   /**\n    * modelUpdate()\n    * update our xml definition from the provided description.\n    * @param {string} xml  bpmn2 xml definition from our modeler.\n    * @return {string}\n    */\n   modelUpdate(xml) {\n      this.xmlDefinition = xml;\n   }\n\n   //\n   // Diagram Elements\n   //\n\n   /**\n    * connections()\n    * return an array of connections that describe the relationships between\n    * our process elements.\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return [{SimpleConnectionObj}]\n    */\n   connections(fn = () => true) {\n      var allConnections = Object.keys(this._connections).map((e) => {\n         return this._connections[e];\n      });\n\n      // If parent, merge connections\n      if (this.process && this.key === \"SubProcess\") {\n         allConnections = allConnections.concat(this.process.connections());\n      }\n\n      return allConnections.filter(fn);\n   }\n\n   /**\n    * connectionForDiagramID()\n    * return the connection for the given diagram id\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionForDiagramID(dID) {\n      return this.connections((t) => {\n         return t.id == dID;\n      })[0];\n   }\n\n   /**\n    * connectionsIncoming()\n    * return the connections that are entering this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsIncoming(dID) {\n      return this.connections((c) => {\n         return c.to == dID;\n      });\n   }\n\n   /**\n    * connectionsOutgoing()\n    * return the connections that are leaving this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsOutgoing(dID) {\n      return this.connections((c) => {\n         return c.from == dID;\n      });\n   }\n\n   /**\n    * connectionRemove()\n    * remove the connection info for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionRemove(element) {\n      delete this._connections[element.id];\n   }\n\n   /**\n    * connectionSimplyElement()\n    * given a BPMN diagram element, return a simplified object that describes\n    * the connection between two elements.\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    * @return {SimpleConnectionObj}\n    *        .id : {string} diagram id of the connection element\n    *        .type : {string} the type of connection\n    *        .from : {string} the diagram id of the source element\n    *        .to : {string} the diagram id of the dest element\n    */\n   connectionSimplyElement(element) {\n      var bo = element.businessObject;\n      var from = null;\n      if (bo.sourceRef) {\n         from = bo.sourceRef.id;\n      }\n\n      var to = null;\n      if (bo.targetRef) {\n         to = bo.targetRef.id;\n      }\n\n      var connection = {\n         id: element.id,\n         type: element.type,\n         from: from,\n         to: to,\n      };\n      return connection;\n   }\n\n   /**\n    * connectionUpsert()\n    * add or update the connection information for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionUpsert(element) {\n      var simpleConn = this.connectionSimplyElement(element);\n      if (simpleConn.from && simpleConn.to && element.parent) {\n         this._connections[simpleConn.id] = simpleConn;\n      } else {\n         // this connection is no longer connecting anything thing.\n         // it is being removed.\n         this.connectionRemove(element);\n      }\n   }\n\n   /**\n    * elements()\n    * return an array of elements that match the given filter (or all elements\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABProcessTask, ABProcessParticipant, etc...]}\n    */\n   elements(fn = () => true) {\n      var allElements = Object.keys(this._elements).map((e) => {\n         return this._elements[e];\n      });\n      return allElements.filter(fn);\n   }\n\n   /**\n    * elementAdd()\n    * insert an element to be tracked by this process.\n    * @param {ABProcessElement} element\n    *        the full instance of an ABProcessElement to track.\n    */\n   elementAdd(element) {\n      this._elements[element.id || element.diagramID] = element;\n   }\n\n   /**\n    * elementByID()\n    * return the {ABProcessElement} that has the given .id\n    * @param {string} id\n    * @return {ABProcess[OBJ]}\n    */\n   elementByID(id) {\n      return this._elements[id] ?? null;\n   }\n\n   /**\n    * elementForDiagramID()\n    * return the object that is tied to the given xml diagram ID.\n    * @param {string} dID the diagram ID\n    * @return {ABProcess[OBJ]}\n    */\n   elementForDiagramID(dID) {\n      return this.elements((t) => {\n         return t.diagramID == dID;\n      })[0];\n   }\n\n   /**\n    * elementRemove()\n    * remove an element from being tracked by this process.\n    * @param {obj|ABProcessElement} def\n    *        a definition of, or full Object instance of the ABProcessElement\n    *        to remove.\n    */\n   elementRemove(def) {\n      delete this._elements[def.id || def.diagramID];\n   }\n\n   /**\n    * isTriggeredBy()\n    * scan our tasks and see if we have a \"trigger\" task that responds to\n    * the provided key.\n    * @param {string} key the trigger key\n    * @return {bool}\n    */\n   isTriggeredBy(key) {\n      return this.taskForTriggerKey(key) != null;\n   }\n\n   /**\n    * connectionNextTask()\n    * return the ABProcessElement(s) that are after the given Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionNextTask(currElement) {\n      var elements = [];\n      var nextConnections = this.connections((c) => {\n         return c.from == currElement.diagramID;\n      });\n      nextConnections.forEach((c) => {\n         var element = this.elements((e) => {\n            return e.diagramID == c.to;\n         })[0];\n         if (element) {\n            elements.push(element);\n         }\n      });\n      return elements;\n   }\n\n   /**\n    * connectionPreviousTask()\n    * return the ABProcessElement(s) that was a previous Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionPreviousTask(currElement) {\n      var elements = [];\n      var prevConnections = this.connections((c) => {\n         return c.to == currElement.diagramID;\n      });\n      prevConnections.forEach((c) => {\n         var element = this.elements((e) => {\n            return e.diagramID == c.from;\n         })[0];\n         if (element) {\n            elements.push(element);\n         }\n      });\n      return elements;\n   }\n\n   /**\n    * processData()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processData(currElement, params) {\n      // var tasksToAsk = this.connectionPreviousTask(currElement);\n      // var values = queryPreviousTasks(tasksToAsk, \"processData\", params, this);\n      // return values.length > 0\n      //    ? values.length > 1\n      //       ? values\n      //       : values[0]\n      //    : null;\n\n      var tasksToAsk = this.allPreviousTasks(currElement)\n      var values = queryPreviousTasks(tasksToAsk, \"processData\", params, this);\n      return values.length > 0\n         ? values.length > 1\n            ? values\n            : values[0]\n         : null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can request from other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataFields(currElement) {\n      var tasksToAsk = this.allPreviousTasks(currElement);\n      // var tasksToAsk = this.connectionPreviousTask(currElement);\n      var fields = queryPreviousTasks(\n         tasksToAsk,\n         \"processDataFields\",\n         null,\n         this\n      );\n      return fields.length > 0 ? fields : null;\n   }\n\n   /**\n    * allPreviousConnections()\n    * walk through the current graph and return all the previous connections\n    * leading up to the given {ProcessElement}\n    * @param {Connection} conn\n    * @param {hash} hashConn\n    *        { connection.id : connection }\n    * @return {array}\n    */\n   allPreviousConnectionsForConnection(conn, hashConn) {\n      var prevConnections = this.connections((c) => {\n         return c.to == conn.from;\n      });\n\n      prevConnections.forEach((c) => {\n         if (!hashConn[c.id]) {\n            hashConn[c.id] = c;\n            this.allPreviousConnectionsForConnection(c, hashConn);\n         }\n      });\n   }\n   allPreviousConnectionsForElement(currElement) {\n      var prevConnections = this.connections((c) => {\n         return c.to == currElement.diagramID;\n      });\n      var hashConn = {\n         /* connection.id : connection */\n      };\n      // hashConn will contains the final collection of connections.\n\n      prevConnections.forEach((c) => {\n         hashConn[c.id] = c;\n         this.allPreviousConnectionsForConnection(c, hashConn);\n      });\n\n      // TODO: detect circle backs and remove connections that\n      // resolve back to currElement\n\n      // convert our hash into an array\n      return Object.keys(hashConn).map((k) => hashConn[k]);\n   }\n\n   allPreviousTasks(currElement) {\n      var prevTasks = {}; /* task.id : task */\n      var allPreviousConnections =\n         this.allPreviousConnectionsForElement(currElement);\n      var task;\n      allPreviousConnections.forEach((conn) => {\n         // each conn has a .to and a .from => grab both tasks\n         task = this.elementForDiagramID(conn.to);\n         if (task) prevTasks[task.id] = task;\n\n         task = this.elementForDiagramID(conn.from);\n         if (task) prevTasks[task.id] = task;\n      });\n\n      var tasksToAsk = Object.keys(prevTasks)\n         .map((k) => prevTasks[k])\n         .filter((t) => t.id != currElement.id);\n\n      return tasksToAsk;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataObjects(currElement) {\n      var tasksToAsk = this.connectionPreviousTask(currElement);\n      var fields = queryPreviousTasks(\n         tasksToAsk,\n         \"processDataObjects\",\n         null,\n         this\n      );\n      return fields.length > 0 ? fields : null;\n   }\n\n   /**\n    * taskForTriggerKey()\n    * return one or more tasks that respond to the given trigger key\n    * @param {string} key a trigger key\n    * @return {[ABProcessTask,...]}\n    */\n   taskForTriggerKey(key) {\n      var trigger = this.elements((t) => {\n         return t.triggerKey == key;\n      })[0];\n      if (trigger) {\n         return trigger;\n      } else {\n         return null;\n      }\n   }\n\n   //\n   // Participants\n   //\n\n   // /**\n   //  * participants()\n   //  * return an array of participants that match the given filter (or all tasks\n   //  * if no filter is provided).\n   //  * @param {fn} fn an iterator that returns true if the provided participants\n   //  *                should be returned.\n   //  * @return {[ABProcessParticipant,...]}\n   //  */\n   // participants(fn) {\n   //     if (!fn)\n   //         fn = () => {\n   //             return true;\n   //         };\n   //     var all = Object.keys(this._participants).map((p) => {\n   //         return this._participants[p];\n   //     });\n   //     return all.filter(fn);\n   // }\n\n   // /**\n   //  * participantsForDiagramID()\n   //  * return the participant(s) that are tied to the given xml diagram ID.\n   //  * @param {string} dID the diagram ID\n   //  * @return {[ABProcessParticipant,...]}\n   //  */\n   // participantsForDiagramID(dID) {\n   //     return this.participants((p) => {\n   //         return p.diagramID == dID;\n   //     });\n   // }\n};\n\nvar queryPreviousTasks = (\n   list,\n   method,\n   param,\n   process,\n   responses,\n   processedIDs\n) => {\n   // recursive fn() to step through our graph and compile\n   // results.\n   if (typeof responses == \"undefined\") {\n      responses = [];\n   }\n   if (typeof processedIDs == \"undefined\") {\n      processedIDs = [];\n   }\n   if (list.length == 0) {\n      return responses;\n   } else {\n      // get next task\n      const task = list.shift();\n\n      // if we haven't already done task:\n      if (processedIDs.indexOf(task.diagramID) == -1) {\n         // mark this task as having been processed\n         processedIDs.push(task.diagramID);\n\n         let value = null;\n\n         // get any field's it provides\n         if (!(task instanceof ABProcessTaskSubProcess))\n            value = task[method].apply(task, param);\n\n         // value = task[method].apply(task, param);\n\n         if (value === null) value = [];\n         responses = _concat(responses, value);\n\n         // add any previous tasks to our list\n         list = _concat(list, process.connectionPreviousTask(task));\n      }\n\n      // process next Task\n      return queryPreviousTasks(\n         list,\n         method,\n         param,\n         process,\n         responses,\n         processedIDs\n      );\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nmodule.exports = class ABStepCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"name\", \"text\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      // this.elements().forEach((e) => {\n      //    e.onProcessReady();\n      // });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      type: 'xxxxx',\n      json: \"{json}\"\n    }\n    */\n      this.id = attributes.id;\n      this.name = attributes.name || \"New Step\";\n      this.type = attributes.type || \"step\";\n      this.text = attributes.text || \"\";\n      this.settings = attributes.settings || {};\n      this.settings.event = attributes?.settings?.event || \"click\";\n      this.settings.el = attributes?.settings?.el || \"\";\n      // this.xmlDefinition = attributes.xmlDefinition || null;\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // debugger;\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"id\", \"name\", \"settings\", \"type\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   // /**\n   //  * steps()\n   //  * return an array of steps that match the given filter (or all steps\n   //  * if no filter is provided).\n   //  * @param {fn} fn an iterator that returns true if the provided element\n   //  *                should be returned.\n   //  * @return {[ABStep]}\n   //  */\n   // steps(fn = () => true) {\n   //    var allSteps = Object.keys(this._steps).map((e) => {\n   //       return this._steps[e];\n   //    });\n   //    return allSteps.filter(fn);\n   // }\n\n   // /**\n   //  * stepAdd()\n   //  * insert a step to be added to this hint.\n   //  * @param {ABStep} element\n   //  *        the full instance of an ABStep to track.\n   //  */\n   // stepAdd(step) {\n   //    this._steps[step.id] = step;\n   // }\n\n   // /**\n   //  * stepByID()\n   //  * return the {ABStep} that has the given .id\n   //  * @param {string} id\n   //  * @return {ABStep[OBJ]}\n   //  */\n   // stepByID(id) {\n   //    return this._step[id] ?? null;\n   // }\n\n   // /**\n   //  * stepRemove()\n   //  * remove a step from being displayed by this hint.\n   //  * @param {obj|ABStep} def\n   //  *        a definition of, or full Object instance of the ABStep\n   //  *        to remove.\n   //  */\n   // stepRemove(def) {\n   //    delete this._steps[def.id];\n   // }\n};\n","/*\n * ABViewManager\n *\n * An interface for managing the different ABViews available in our AppBuilder.\n *\n */\n\nvar AllViews = [\n   require(\"../platform/views/ABView\"),\n   require(\"../platform/views/ABViewCarousel\"),\n   require(\"../platform/views/ABViewChart\"),\n   require(\"../platform/views/ABViewChartArea\"),\n   require(\"../platform/views/ABViewChartBar\"),\n   require(\"../platform/views/ABViewChartLine\"),\n   require(\"../platform/views/ABViewChartPie\"),\n   require(\"../platform/views/ABViewComment\"),\n   require(\"../platform/views/ABViewConditionalContainer\"),\n   require(\"../platform/views/ABViewConnectDataFilter\"),\n   require(\"../platform/views/ABViewContainer\"),\n   require(\"../platform/views/ABViewCSVExporter\"),\n   require(\"../platform/views/ABViewCSVImporter\"),\n   require(\"../platform/views/ABViewDataFilter\"),\n   require(\"../platform/views/ABViewDataview\"),\n   require(\"../platform/views/ABViewDocxBuilder\"),\n   require(\"../platform/views/ABViewGrid\"),\n   require(\"../platform/views/ABViewImage\"),\n   require(\"../platform/views/ABViewLabel\"),\n   require(\"../platform/views/ABViewLayout\"),\n   require(\"../platform/views/ABViewList\"),\n   require(\"../platform/views/ABViewMenu\"),\n   require(\"../platform/views/ABViewPage\"),\n   require(\"../platform/views/ABViewPDFImporter\"),\n   require(\"../platform/views/ABViewPivot\"),\n   require(\"../platform/views/ABViewTab\"),\n   require(\"../platform/views/ABViewText\"),\n\n   //\n   // Special Editors\n   //\n   require(\"../platform/views/ABViewGantt\"),\n   require(\"../platform/views/ABViewKanban\"),\n   require(\"../platform/views/ABViewReportsManager\"),\n   require(\"../platform/views/ABViewScheduler\"),\n\n   //\n   // Detail Components\n   //\n   require(\"../platform/views/ABViewDetail\"),\n   require(\"../platform/views/ABViewDetailCheckbox\"),\n   require(\"../platform/views/ABViewDetailConnect\"),\n   require(\"../platform/views/ABViewDetailCustom\"),\n   require(\"../platform/views/ABViewDetailImage\"),\n   // require(\"../platform/views/ABViewDetailSelectivity\"),\n   require(\"../platform/views/ABViewDetailText\"),\n   require(\"../platform/views/ABViewDetailTree\"),\n\n   //\n   // Form Components\n   //\n   require(\"../platform/views/ABViewForm\"),\n   require(\"../platform/views/ABViewFormButton\"),\n   require(\"../platform/views/ABViewFormCheckbox\"),\n   require(\"../platform/views/ABViewFormConnect\"),\n   require(\"../platform/views/ABViewFormCustom\"),\n   require(\"../platform/views/ABViewFormDatepicker\"),\n   require(\"../platform/views/ABViewFormJson\"),\n   require(\"../platform/views/ABViewFormNumber\"),\n   require(\"../platform/views/ABViewFormReadonly\"),\n   require(\"../platform/views/ABViewFormSelectMultiple\"),\n   require(\"../platform/views/ABViewFormSelectSingle\"),\n   require(\"../platform/views/ABViewFormTextbox\"),\n   require(\"../platform/views/ABViewFormTree\"),\n];\n\n/*\n * Views\n * A name => ABView  hash of the different ABViews available.\n */\nvar Views = {};\nAllViews.forEach((v) => {\n   if (v.default?.common) {\n      v = v.default;\n   }\n   Views[v.common().key] = v;\n});\n\nmodule.exports = class ABViewManagerCore {\n   /**\n    * @function allViews\n    * return all the currently defined ABViews in an array.\n    * @return [{ABView},...]\n    */\n   static allViews(fn = () => true) {\n      var views = [];\n      for (var v in Views) {\n         var V = Views[v];\n         if (fn(V)) {\n            views.push(V);\n         }\n      }\n      return views;\n   }\n\n   /**\n    * @function newView\n    * return an instance of an ABView based upon the values.key value.\n    * @return {ABView}\n    */\n   static newView(values, application, parent) {\n      parent = parent || null;\n\n      if (values.key == \"detailselectivity\") {\n         values.key = \"detailconnect\";\n      }\n\n      //\t\tif ((values.key) && (Views[values.key])) {\n      if (values.key) {\n         if (!Views[values.key]) {\n            console.error(\n               \"!! View[\" +\n                  values.key +\n                  \"] not yet defined.  Have an ABView instead:\"\n            );\n            return new Views[\"view\"](values, application, parent);\n         }\n\n         return new Views[values.key](values, application, parent);\n      } else {\n         var err = new Error(`Unknown view key [${values.key}]`);\n         console.error(err); // show the stack.\n         console.error({\n            error: err,\n            values: values,\n            application: application,\n         });\n         return null;\n      }\n   }\n\n   static viewClass(key) {\n      if (Views[key]) {\n         return Views[key];\n      }\n      console.error(`Unknown View Key[${key}]`);\n      return;\n   }\n};\n","const ABComponent = require(\"../platform/ABComponent\");\n// const ABObjectQuery = require(\"../platform/ABObjectQuery\");\n\n/**\n *  support get data from objects and queries\n */\nfunction getFieldVal(rowData, field) {\n   if (!field) return null;\n   if (!field.columnName) return null;\n   const columnName = field.columnName;\n\n   let value = null;\n\n   if (columnName.indexOf(\".\") > -1) {\n      let colName = columnName.split(\".\")[1];\n      value = rowData[columnName] || rowData[colName];\n   } else {\n      value = rowData[columnName];\n   }\n\n   if (value != null && !isNaN(value)) {\n      return value;\n   }\n\n   // otherwise, this might be a process check where the rowData keys have\n   // '[diagramID].[field.id]'\n   for (const k in rowData) {\n      const key = k.split(\".\")[1];\n      if (key && key == field.id) {\n         value = rowData[k];\n      }\n   }\n\n   if (\n      (value == null || (typeof value == \"number\" && isNaN(value))) &&\n      field.format\n   )\n      value = field.format(rowData);\n\n   return value;\n}\n\nfunction getConnectFieldValue(rowData, field) {\n   let connectedVal = \"\";\n\n   if (rowData) {\n      let relationName = field.relationName();\n      if (rowData[relationName]) {\n         connectedVal =\n            (field.indexField\n               ? rowData[relationName][field.indexField.columnName]\n               : null) ?? // custom index\n            (field.indexField2\n               ? rowData[relationName][field.indexField2.columnName]\n               : null) ?? // custom index 2\n            rowData[relationName].id ??\n            rowData[relationName];\n      } else {\n         let fieldVal = getFieldVal(rowData, field);\n         if (fieldVal != null) {\n            connectedVal = fieldVal;\n         }\n      }\n   }\n   return connectedVal;\n}\n\nmodule.exports = class FilterComplexCore extends ABComponent {\n   constructor(idBase, AB) {\n      idBase = idBase || \"ab_filter_complex\";\n\n      if (typeof AB === \"undefined\") {\n         console.error(\"FilterComplexCore(): being called without an AB!\");\n      }\n\n      super(null, idBase, AB);\n\n      this.Account = { username: \"??\" };\n      this._settings = {};\n      this.condition = {};\n      // const batchName; // we need to revert to this default when switching away from a in/by query field\n\n      this._QueryFields = [];\n      this._Fields;\n\n      // internal business logic\n      const _logic = (this._logic = {\n         callbacks: {\n            onChange: () => {},\n         },\n\n         removeHtmlTags: function (text) {\n            let result = \"\";\n            try {\n               let div = document.createElement(\"div\");\n               div.innerHTML = text;\n\n               result = div.textContent || div.innerText || \"\";\n            } catch (err) {\n               result = (text || \"\").replace(/(<([^>]+)>)/gi, \"\");\n            }\n\n            return result;\n         },\n      });\n\n      // Interface methods for parent component:\n      // this.objectLoad = _logic.objectLoad;\n      // this.viewLoad = _logic.viewLoad;\n      // this.setValue = _logic.setValue;\n      // this.isValid = _logic.isValid;\n   }\n\n   init(options = {}) {\n      this._settings = options;\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    * @param condition {Object} - [Optional] {\n    *                                           glue: \"and\" | \"or\",\n    *                                           rules: []\n    *                                        }\n    */\n   isValid(rowData, condition = this.condition) {\n      // If conditions but no data return false\n      if (condition?.rules?.length && rowData == null) return false;\n\n      // If no conditions, then return true\n      if (!condition?.rules?.length || rowData == null) return true;\n\n      let result = condition.glue === \"and\" ? true : false;\n\n      condition.rules.forEach((filter) => {\n         // Nested filters\n         if (filter?.rules?.length) {\n            if (condition.glue === \"or\")\n               result = result || this.isValid(rowData, filter);\n            else result = result && this.isValid(rowData, filter);\n            return;\n         }\n         // Skip incomplete filter condition\n         else if (!filter.key || !filter.rule) return;\n\n         const fieldInfo = (this._Fields || []).filter(\n            (f) => f.id == filter.key || f.columnName == filter.key\n         )[0];\n\n         if (!fieldInfo) return;\n\n         let condResult = null;\n\n         // Filters that have \"this_object\" don't have a fieldInfo.key, so in that case,\n         // define a special .key == \"this_object\"\n         let ruleFieldType = fieldInfo.key;\n\n         if (typeof fieldInfo.key == \"undefined\") {\n            if (fieldInfo.id != \"this_object\") {\n               fieldInfo.key = \"connectField\"; // if you are looking at the parent object it won't have a key to analyze\n               ruleFieldType = fieldInfo.key;\n            } else ruleFieldType = \"this_object\";\n         }\n\n         let value = null;\n\n         if (fieldInfo.relationName) {\n            value = getConnectFieldValue(rowData, fieldInfo);\n         } else {\n            value = getFieldVal(rowData, fieldInfo);\n         }\n\n         switch (ruleFieldType) {\n            case \"string\":\n            case \"LongText\":\n            case \"email\":\n               if (value == null) value = \"\";\n\n               condResult = this.textValid(value, filter.rule, filter.value);\n               break;\n            case \"date\":\n            case \"datetime\":\n               condResult = this.dateValid(value, filter.rule, filter.value);\n               break;\n            case \"number\":\n            case \"calculate\":\n            case \"formula\":\n               condResult = this.numberValid(value, filter.rule, filter.value);\n               break;\n            case \"list\":\n               condResult = this.listValid(value, filter.rule, filter.value);\n               break;\n            case \"boolean\":\n               condResult = this.booleanValid(value, filter.rule, filter.value);\n               break;\n            case \"user\":\n               condResult = this.userValid(value, filter.rule, filter.value);\n               break;\n            case \"connectField\":\n            case \"connectObject\":\n               condResult = this.connectFieldValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"this_object\":\n               condResult = this.thisObjectValid(\n                  rowData,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n         }\n\n         if (condition.glue === \"and\") {\n            result = result && condResult;\n         } else {\n            result = result || condResult;\n         }\n      });\n\n      return result;\n   }\n\n   textValid(value, rule, compareValue) {\n      let result = false;\n\n      value = value.trim().toLowerCase();\n      value = this._logic.removeHtmlTags(value); // remove html tags - rich text editor\n\n      compareValue = compareValue.trim().toLowerCase().replace(/  +/g, \" \");\n\n      // support \"john smith\" => \"john\" OR/AND \"smith\"\n      const compareArray = compareValue.split(\" \");\n\n      switch (rule) {\n         case \"contains\":\n            compareArray.forEach((val) => {\n               if (result == false)\n                  // OR\n                  result = value.indexOf(val) > -1;\n            });\n            break;\n         case \"not_contains\":\n            result = true;\n            compareArray.forEach((val) => {\n               if (result == true)\n                  // AND\n                  result = value.indexOf(val) < 0;\n            });\n            break;\n         case \"equals\":\n            compareArray.forEach((val) => {\n               if (result == false)\n                  // OR\n                  result = value == val;\n            });\n            break;\n         case \"not_equal\":\n            result = true;\n            compareArray.forEach((val) => {\n               if (result == true)\n                  // AND\n                  result = value != val;\n            });\n            break;\n         case \"is_empty\":\n            result = value == \"\" || value == null;\n            break;\n         case \"is_not_empty\":\n            result = value != \"\" && value != null;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   dateValid(value, rule, compareValue) {\n      let result = false;\n\n      if (!(value instanceof Date)) value = new Date(value);\n\n      if (!(compareValue instanceof Date))\n         compareValue = new Date(compareValue);\n\n      switch (rule) {\n         case \"less\":\n            result = value < compareValue;\n            break;\n         case \"greater\":\n            result = value > compareValue;\n            break;\n         case \"less_or_equal\":\n            result = value <= compareValue;\n            break;\n         case \"greater_or_equal\":\n            result = value >= compareValue;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   numberValid(value, rule, compareValue) {\n      let result = false;\n\n      value = Number(value);\n      compareValue = Number(compareValue);\n\n      switch (rule) {\n         case \"equal\":\n         case \"equals\":\n            result = value == compareValue;\n            break;\n         case \"not_equal\":\n            result = value != compareValue;\n            break;\n         case \"less\":\n            result = value < compareValue;\n            break;\n         case \"greater\":\n            result = value > compareValue;\n            break;\n         case \"less_or_equal\":\n            result = value <= compareValue;\n            break;\n         case \"greater_or_equal\":\n            result = value >= compareValue;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   listValid(value, rule, compareValue) {\n      let result = false;\n\n      // compareValue = compareValue.toLowerCase();\n\n      if (!Array.isArray(compareValue)) compareValue = [compareValue];\n\n      switch (rule) {\n         case \"equals\":\n            if (value) result = compareValue.indexOf(value) > -1;\n            break;\n         case \"not_equal\":\n            if (value) result = compareValue.indexOf(value) < 0;\n            else result = true;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   booleanValid(value, rule, compareValue) {\n      let result = false;\n\n      switch (rule) {\n         case \"equals\":\n            result = value == compareValue;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   userValid(value, rule, compareValue) {\n      if (!value) return false;\n      let result = false;\n\n      // if (Array.isArray(value)) value = [value];\n\n      switch (rule) {\n         case \"is_current_user\":\n            result = value == this.Account.username;\n            break;\n         case \"is_not_current_user\":\n            result = value != this.Account.username;\n            break;\n         case \"contain_current_user\":\n            if (!Array.isArray(value)) value = [value];\n\n            result =\n               value.filter((v) => (v.username || v) == this.Account.username)\n                  .length > 0;\n            break;\n         case \"not_contain_current_user\":\n            if (!Array.isArray(value)) value = [value];\n\n            result =\n               value.filter((v) => (v.username || v) == this.Account.username)\n                  .length < 1;\n            break;\n         case \"equals\":\n            result = (value ?? []).indexOf(compareValue) > -1;\n            break;\n         case \"not_equal\":\n            result = (value ?? []).indexOf(compareValue) < 0;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   queryFieldValid(rowData, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue) return result;\n\n      // queryId:fieldId\n      const queryId = compareValue.split(\":\")[0],\n         fieldId = compareValue.split(\":\")[1];\n\n      // if no query\n      const query = this.AB.queries((q) => q.id == queryId)[0];\n      if (!query) return result;\n\n      // if no field\n      const field = query.fields((f) => f.id == fieldId)[0];\n      if (!field) return result;\n\n      let qIdBase = \"{idBase}-query-field-{id}\"\n            .replace(\"{idBase}\", this.idBase)\n            .replace(\"{id}\", query.id),\n         inQueryFieldFilter = new this.constructor(qIdBase, this.AB);\n      inQueryFieldFilter.Account = this.Account;\n      inQueryFieldFilter.fieldsLoad(query.fields());\n      inQueryFieldFilter.setValue(query.workspaceFilterConditions);\n\n      switch (rule) {\n         case \"in_query_field\":\n            result = inQueryFieldFilter.isValid(rowData);\n            break;\n         case \"not_in_query_field\":\n            result = !inQueryFieldFilter.isValid(rowData);\n            break;\n      }\n\n      return result;\n   }\n\n   inQueryValid(rowData, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue || !this.AB) return result;\n\n      // if no query\n      let query = this.AB.queries((q) => q.id == compareValue)[0];\n      if (!query) return result;\n\n      let qIdBase = \"{idBase}-query-{id}\"\n            .replace(\"{idBase}\", this.idBase)\n            .replace(\"{id}\", query.id),\n         inQueryFilter = new this.constructor(qIdBase, this.AB);\n      inQueryFilter.Account = this.Account;\n      inQueryFilter.fieldsLoad(query.fields());\n      inQueryFilter.setValue(query.workspaceFilterConditions);\n\n      switch (rule) {\n         case \"in_query\":\n            result = inQueryFilter.isValid(rowData);\n            break;\n         case \"not_in_query\":\n            result = !inQueryFilter.isValid(rowData);\n            break;\n      }\n\n      return result;\n   }\n\n   dataCollectionValid(value, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue) return result;\n\n      let dc = this.AB.datacollections((d) => d.id == compareValue)[0];\n\n      switch (rule) {\n         case \"in_data_collection\":\n            if (!dc) return false;\n\n            result = dc.getData((d) => d.id == value.id).length > 0;\n            break;\n         case \"not_in_data_collection\":\n            if (!dc) return true;\n\n            result = dc.getData((d) => d.id == value.id).length < 1;\n            break;\n      }\n\n      return result;\n   }\n\n   connectFieldValid(rowData, field, rule, compareValue) {\n      let relationName = field.relationName();\n\n      let connectedVal = \"\";\n\n      if (rowData) {\n         if (rowData[relationName]) {\n            connectedVal = (\n               (field.indexField\n                  ? rowData[relationName][field.indexField.columnName]\n                  : null) ?? // custom index\n               (field.indexField2\n                  ? rowData[relationName][field.indexField2.columnName]\n                  : null) ?? // custom index 2\n               rowData[relationName].id ??\n               rowData[relationName]\n            )\n               .toString()\n               .toLowerCase();\n         } else {\n            let fieldVal = getFieldVal(rowData, field);\n            if (fieldVal != null) {\n               connectedVal = fieldVal;\n            }\n         }\n      }\n\n      // If value will be the connected object, then pull value (string)\n      if (typeof connectedVal == \"object\") {\n         connectedVal =\n            connectedVal[field.indexField.columnName] ??\n            connectedVal[field.indexField2.columnName] ??\n            connectedVal[field.columnName] ??\n            connectedVal;\n      }\n\n      let compareValueLowercase = (compareValue || \"\").toLowerCase();\n\n      switch (rule) {\n         case \"contains\":\n            return connectedVal.toString().indexOf(compareValueLowercase) > -1;\n         case \"not_contains\":\n            return connectedVal.toString().indexOf(compareValueLowercase) == -1;\n         case \"equals\":\n            return connectedVal == compareValueLowercase;\n         case \"not_equal\":\n            return connectedVal != compareValueLowercase;\n         case \"in_query\":\n         case \"not_in_query\":\n            return this.inQueryValid(rowData[relationName], rule, compareValue);\n         case \"is_current_user\":\n         case \"is_not_current_user\":\n         case \"contain_current_user\":\n         case \"not_contain_current_user\":\n            return this.userValid(connectedVal, rule, compareValue);\n         case \"is_empty\":\n            return (\n               rowData[relationName] == null ||\n               rowData[relationName].length < 1 ||\n               rowData[relationName] == \"\"\n            );\n         case \"is_not_empty\":\n            return (\n               rowData[relationName] != null &&\n               ((Array.isArray(rowData[relationName]) &&\n                  rowData[relationName].length > 0) ||\n                  rowData[relationName] != \"\")\n            );\n         case \"in_data_collection\":\n         case \"not_in_data_collection\":\n            return this.dataCollectionValid(connectedVal, rule, compareValue);\n      }\n   }\n\n   thisObjectValid(rowData, rule, compareValue) {\n      let result = false;\n      let query = null;\n      let listThisObjects = null;\n      let alias = null;\n      let newRowData = null;\n\n      switch (rule) {\n         // if in_query condition\n         case \"in_query\":\n         case \"not_in_query\":\n            if (!this._Object) return result;\n\n            // if > 1 copy of this object in query ==> Error!\n            query = this.AB.queries((q) => q.id == compareValue)[0];\n\n            if (!query) return result;\n\n            listThisObjects = query.objects((o) => {\n               return o.id == this._Object.id;\n            });\n\n            if (listThisObjects.length > 1) {\n               // Alternative: choose the 1st instance of this object in the query, and make the compare on that.\n               // Be sure to warn the developer of the limitiations of an \"this_object\" \"in_query\"  when query has > 1 copy of\n               // this object as part of the query.\n\n               console.error(\n                  \"HEY!  Can't compare this_object to a query that has > 1 copy of that object!\"\n               );\n\n               return true;\n            }\n\n            // get this object's alias from the query\n            alias = query.objectAlias(this._Object.id);\n\n            // make sure all my columns in rowData are prefixed by \"alias\".columnName\n            newRowData = {};\n\n            Object.keys(rowData).forEach((key) => {\n               newRowData[`${alias}.${key}`] = rowData[key];\n            });\n\n            // then pass this on to the _logic.queryValid();\n            return this.inQueryValid(newRowData, rule, compareValue);\n\n         // if in_datacollection condition\n         case \"in_data_collection\":\n         case \"not_in_data_collection\":\n            // send rowData, null to datacollectionValid()\n            return this.dataCollectionValid(rowData, rule, compareValue);\n      }\n   }\n\n   processFieldsLoad(processFields = []) {\n      if (processFields && !Array.isArray(processFields)) {\n         processFields = [processFields];\n      }\n      this._ProcessFields = processFields;\n\n      this.uiInit();\n   }\n\n   /**\n    * @method fieldsLoad\n    * set fields\n    *\n    * @param array {ABField}\n    * @param object {ABObject} [optional]\n    */\n   fieldsLoad(fields = [], object = null) {\n      this._Fields = fields.filter(\n         (f) => f && f.fieldIsFilterable && f.fieldIsFilterable()\n      );\n      this._QueryFields = this._Fields\n         ? this._Fields.filter((f) => f && f.isConnection && f.key != \"user\")\n         : [];\n\n      // insert our 'this object' entry if an Object was given.\n      if (object) {\n         this._Object = object;\n\n         // insert our uuid in addition to the rest of our fields\n         let thisObjOption = {\n            id: \"this_object\",\n            label: object.label,\n            key: \"uuid\",\n         };\n\n         // If object is query ,then should define default alias: \"BASE_OBJECT\"\n         // NOTE: Could not reference ABObjectQuery because recursive looping reference\n         // if (object instanceof ABObjectQuery) {\n         if (object.viewName) {\n            thisObjOption.alias = \"BASE_OBJECT\";\n         }\n\n         this._Fields.unshift(thisObjOption);\n      } else {\n         delete this._Object;\n      }\n   }\n\n   fieldsToQB() {\n      /*\n      let mapTypes = {\n         LongText: \"string\",\n         email: \"string\",\n         datetime: \"date\",\n         connectField: \"connectObject\"\n      };\n\n      const fields = this._Fields.map((f) => {\n         // Label\n         let label = f.label;\n         if (this._settings.showObjectName && f.object && f.object.label)\n            label = `${f.object.label}.${f.label}`;\n\n         // Type\n         let type = f.key || f.type;\n         if (mapTypes[type]) type = mapTypes[type];\n\n         // the format for webix querybuilder:\n         // { id  value:\"label\" type }\n         //      type: {string} the type of value it is.\n         //            since we want to tailor value selectors per field,\n         //            we will make a unique type for each field. and then\n         //            add value selectors for that specific .type\n         return { id: f.columnName, value: label, type: type };\n      });\n      return fields;\n      */\n\n      let fields = (this._Fields || []).map((f) => {\n         let label = f.label;\n         if (this._settings.showObjectName && f.object && f.object.label)\n            label = `${f.object.label}.${f.label}`;\n\n         let type = \"text\"; // \"text\", \"number\", \"date\"\n         let conditions = [];\n         let processFieldKeys = [];\n         let hasQueryField = true;\n\n         if (!this._settings.isProcessParticipant)\n            switch (f.key) {\n               case \"boolean\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersBoolean(f)\n                  );\n                  processFieldKeys = [\"boolean\"];\n\n                  break;\n\n               case \"connectObject\":\n                  conditions = this.fieldsAddFiltersConnectObject(f);\n\n                  // Add filter options to Custom index\n                  if (\n                     // 1:M\n                     (f.settings.linkType == \"one\" &&\n                        f.settings.linkViaType == \"many\") ||\n                     // 1:1 isSource = true\n                     (f.settings.linkType == \"one\" &&\n                        f.settings.linkViaType == \"one\" &&\n                        f.settings.isSource)\n                  ) {\n                     const stringResults = this.fieldsAddFiltersString(\n                        f\n                     ).filter(\n                        (opt) =>\n                           f.settings.isCustomFK ||\n                           // If this connect field does not use custom FK, then allow just `is empty` and `is not empty` filter options\n                           opt.id == \"is_empty\" ||\n                           opt.id == \"is_not_empty\"\n                     );\n                     conditions = stringResults.concat(conditions);\n                  }\n\n                  hasQueryField = false;\n                  processFieldKeys = [\"connectObject\"];\n\n                  break;\n\n               case \"date\":\n               case \"datetime\":\n                  type = \"date\";\n                  conditions = conditions.concat(this.fieldsAddFiltersDate(f));\n                  processFieldKeys = [\"date\", \"datetime\"];\n\n                  break;\n\n               case \"calculate\":\n               case \"formula\":\n               case \"number\":\n                  type = \"number\";\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersNumber(f)\n                  );\n                  processFieldKeys = [\"calculate\", \"formula\", \"number\"];\n\n                  break;\n\n               case \"string\":\n               case \"LongText\":\n               case \"email\":\n               case \"AutoIndex\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersString(f)\n                  );\n                  processFieldKeys = [\n                     \"string\",\n                     \"LongText\",\n                     \"email\",\n                     \"AutoIndex\",\n                  ];\n\n                  break;\n\n               case \"list\":\n                  conditions = conditions.concat(this.fieldsAddFiltersList(f));\n\n                  break;\n\n               case \"user\":\n                  conditions = conditions.concat(this.fieldsAddFiltersUser(f));\n                  processFieldKeys = [\"user\"];\n\n                  break;\n\n               case \"uuid\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersThisObject(f)\n                  );\n                  hasQueryField = false;\n\n                  break;\n               default:\n                  break;\n            }\n         else\n            switch (f.key) {\n               case \"connectObject\":\n               case \"uuid\":\n                  hasQueryField = false;\n\n                  break;\n            }\n\n         conditions = conditions.concat(\n            this.fieldsAddFiltersQuery(f, hasQueryField)\n         );\n\n         if (this._settings.isRecordRule) {\n            conditions = conditions.concat(this.fieldsAddFiltersRecordRule(f));\n         }\n\n         let isProcessField =\n            (this._ProcessFields || []).filter((processField) => {\n               if (!processField) return false;\n\n               if (processField.field) {\n                  return processFieldKeys.includes(processField.field.key);\n               } else if (processField.key) {\n                  // uuid\n                  let processFieldId = processField.key.split(\".\").pop();\n                  return processFieldId == f.id || processFieldId == f.key;\n               }\n            }).length > 0;\n\n         if (isProcessField) {\n            conditions = conditions.concat(this.fieldsAddFiltersContext(f));\n         }\n\n         conditions = conditions.concat(this.fieldsAddFiltersCustom(f));\n\n         // let type = f.id; // the default unique identifier for our filter types\n         // if (f.id == \"this_object\") {\n         //    // if this happens to be our special \"this_object\" field, then our\n         //    // type needs to be the \"uuid\" type in the definition:\n         //    type = f.type;\n         // }\n\n         // the format for webix querybuilder:\n         // { id  value:\"label\" type }\n         //      type: {string} the type of value it is.\n         //            since we want to tailor value selectors per field,\n         //            we will make a unique type for each field. and then\n         //            add value selectors for that specific .type\n         return {\n            id: f.id,\n            value: label,\n            type: type,\n            conditions: conditions,\n            // format: () => {},\n         };\n      });\n\n      // !!! Process Fields of ABProcess\n      // https://github.com/digi-serve/appbuilder_class_core/blob/master/FilterComplexCore.js#L636\n      // https://github.com/digi-serve/appbuilder_class_core/blob/master/FilterComplexCore.js#L564\n      // (this._ProcessFields || [])\n      //    // if there is no .field, it is probably an embedded special field\n      //    .filter((pField) => pField.field == null)\n      //    .forEach((pField) => {\n      //       // like: .uuid\n      //       let key = pField.key.split(\".\").pop();\n      //       if (key == \"uuid\" && this._Object) {\n      //          fields.unshift({\n      //             id: pField.key,\n      //             value: this._Object.label,\n      //             type: \"text\",\n      //             conditions: this.fieldsAddFiltersContext(),\n      //          });\n      //       }\n      //    });\n\n      return fields;\n   }\n\n   fieldsAddFiltersDate(field) {\n      let dateConditions = {\n         less: this.labels.component.beforeCondition,\n         greater: this.labels.component.afterCondition,\n         less_or_equal: this.labels.component.onOrBeforeCondition,\n         greater_or_equal: this.labels.component.onOrAfterCondition,\n         less_current: this.labels.component.beforeCurrentCondition,\n         greater_current: this.labels.component.afterCurrentCondition,\n         less_or_equal_current:\n            this.labels.component.onOrBeforeCurrentCondition,\n         greater_or_equal_current:\n            this.labels.component.onOrAfterCurrentCondition,\n         last_days: this.labels.component.onLastDaysCondition,\n         next_days: this.labels.component.onNextDaysCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in dateConditions) {\n         result.push({\n            id: condKey,\n            value: dateConditions[condKey],\n            batch: \"datepicker\",\n            handler: (a, b) => this.dateValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersString(field) {\n      let stringConditions = {\n         contains: {\n            batch: \"text\",\n            label: this.labels.component.containsCondition,\n         },\n         not_contains: {\n            batch: \"text\",\n            label: this.labels.component.notContainsCondition,\n         },\n         equals: {\n            batch: \"text\",\n            label: this.labels.component.isCondition,\n         },\n         not_equal: {\n            batch: \"text\",\n            label: this.labels.component.isNotCondition,\n         },\n         is_empty: {\n            batch: \"none\",\n            label: this.labels.component.isEmpty,\n         },\n         is_not_empty: {\n            batch: \"none\",\n            label: this.labels.component.isNotEmpty,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in stringConditions) {\n         result.push({\n            id: condKey,\n            value: stringConditions[condKey].label,\n            batch: stringConditions[condKey].batch,\n            handler: (a, b) => this.textValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersNumber(field) {\n      let numberConditions = {\n         equals: this.labels.component.equalCondition,\n         not_equal: this.labels.component.notEqualCondition,\n         less: this.labels.component.lessThanCondition,\n         greater: this.labels.component.moreThanCondition,\n         less_or_equal: this.labels.component.lessThanOrEqualCondition,\n         greater_or_equal: this.labels.component.moreThanOrEqualCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in numberConditions) {\n         result.push({\n            id: condKey,\n            value: numberConditions[condKey],\n            batch: \"text\",\n            handler: (a, b) => this.numberValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersList(field) {\n      let listConditions = {\n         equals: this.labels.component.equalListCondition,\n         not_equal: this.labels.component.notEqualListCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in listConditions) {\n         result.push({\n            id: condKey,\n            value: listConditions[condKey],\n            batch: \"list\",\n            handler: (a, b) => this.listValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersBoolean(field) {\n      let booleanConditions = {\n         equals: this.labels.component.equalListCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in booleanConditions) {\n         result.push({\n            id: condKey,\n            value: booleanConditions[condKey],\n            batch: \"boolean\",\n            handler: (a, b) => this.booleanValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersUser(field) {\n      let userConditions = {\n         is_current_user: {\n            batch: \"none\",\n            label: this.labels.component.isCurrentUserCondition,\n         },\n         is_not_current_user: {\n            batch: \"none\",\n            label: this.labels.component.isNotCurrentUserCondition,\n         },\n         contain_current_user: {\n            batch: \"none\",\n            label: this.labels.component.containsCurrentUserCondition,\n         },\n         not_contain_current_user: {\n            batch: \"none\",\n            label: this.labels.component.notContainsCurrentUserCondition,\n         },\n         equals: {\n            batch: \"user\",\n            label: this.labels.component.equalListCondition,\n         },\n         not_equal: {\n            batch: \"user\",\n            label: this.labels.component.notEqualListCondition,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in userConditions) {\n         result.push({\n            id: condKey,\n            value: userConditions[condKey].label,\n            batch: userConditions[condKey].batch,\n            handler: (a, b) => this.userValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersConnectObject(field) {\n      const connectConditions = {\n         same_as_user: {\n            batch: \"user\",\n            label: this.labels.component.sameAsUser,\n            handler: (a, b) => this.userValid(a, \"same_as_user\", b),\n         },\n         not_same_as_user: {\n            batch: \"user\",\n            label: this.labels.component.notSameAsUser,\n            handler: (a, b) => this.userValid(a, \"not_same_as_user\", b),\n         },\n         in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.inDataCollection,\n            handler: (a, b) =>\n               this.dataCollectionValid(a, \"in_data_collection\", b),\n         },\n         not_in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.notInDataCollection,\n            handler: (a, b) =>\n               this.dataCollectionValid(a, \"not_in_data_collection\", b),\n         },\n         // TODO\n         // contains: this.labels.component.containsCondition,\n         // not_contains: this.labels.component.notContainCondition,\n         // equals: this.labels.component.isCondition,\n         // not_equal: this.labels.component.isNotCondition\n      };\n\n      const result = [];\n\n      for (let condKey in connectConditions) {\n         result.push({\n            id: condKey,\n            value: connectConditions[condKey].label,\n            batch: connectConditions[condKey].batch,\n            handler: connectConditions[condKey].handler,\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersQuery(field, hasQueryField = false) {\n      const queryConditions = hasQueryField\n         ? {\n              in_query_field: {\n                 label: this.labels.component.inQueryField,\n                 batch: \"queryField\",\n              },\n              not_in_query_field: {\n                 label: this.labels.component.notInQueryField,\n                 batch: \"queryField\",\n              },\n           }\n         : {\n              in_query: {\n                 label: this.labels.component.inQuery,\n                 batch: \"query\",\n              },\n              not_in_query: {\n                 label: this.labels.component.notInQuery,\n                 batch: \"query\",\n              },\n           };\n\n      const result = [];\n\n      for (const condKey in queryConditions) {\n         result.push({\n            id: condKey,\n            value: queryConditions[condKey].label,\n            batch: queryConditions[condKey].batch,\n            handler: (a, b) => this.queryFieldValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersThisObject(field) {\n      let thisObjectConditions = {\n         in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.inDataCollection,\n         },\n         not_in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.notInDataCollection,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in thisObjectConditions) {\n         result.push({\n            id: condKey,\n            value: thisObjectConditions[condKey].label,\n            batch: thisObjectConditions[condKey].batch,\n            handler: (a, b) => this.thisObjectValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersRecordRule(field) {\n      let recordRuleConditions = {\n         same_as_field: this.labels.component.sameAsField,\n         not_same_as_field: this.labels.component.notSameAsField,\n      };\n\n      let result = [];\n\n      for (let condKey in recordRuleConditions) {\n         result.push({\n            id: condKey,\n            value: recordRuleConditions[condKey],\n            batch: \"recordRule\",\n            handler: (a, b) => true, // TODO: record rule validation\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersContext(field) {\n      let contextConditions = {\n         context_equals: {\n            batch: \"context\",\n            label: this.labels.component.equalsProcessValue,\n            handler: (a, b) => a == b,\n         },\n         context_not_equal: {\n            batch: \"context\",\n            label: this.labels.component.notEqualsProcessValueCondition,\n            handler: (a, b) => a != b,\n         },\n         context_in: {\n            batch: \"context\",\n            label: this.labels.component.inProcessValueCondition,\n            handler: (a, b) => a.indexOf(b) > -1,\n         },\n         context_not_in: {\n            batch: \"context\",\n            label: this.labels.component.notInProcessValueCondition,\n            handler: (a, b) => a.indexOf(b) == -1,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in contextConditions) {\n         result.push({\n            id: condKey,\n            value: contextConditions[condKey].label,\n            batch: contextConditions[condKey].batch,\n            handler: contextConditions[condKey].handler,\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersCustom(field) {\n      const customOptions = this._customOptions ?? {};\n      const options = customOptions[field.id || field] ?? {};\n      return options.conditions ?? [];\n   }\n\n   queriesLoad(queries = []) {\n      this._Queries = queries;\n   }\n\n   /**\n    * @method queries()\n    *\n    * return an array of all the ABObjectQuery.\n    *\n    * @param filter {Object}\n    *\n    * @return {array}\n    */\n   queries(filter = () => true) {\n      const queryList = this._Queries ?? this.AB?.queries?.() ?? [];\n\n      return queryList.filter((q) => filter(q));\n   }\n\n   setValue(settings) {\n      this.condition = settings || {};\n\n      this.condition.rules = this.condition.rules || [];\n   }\n\n   /**\n    * @method getValue\n    * return the current condition of the filter.\n    * @return {JSON} -\n    * {\n    * \tglue: '', // 'and', 'or'\n    *\t\trules: [\n    *\t\t\t{\n    *\t\t\t\tkey:\t'uuid',\n    *\t\t\t\trule:\t'rule',\n    *\t\t\t\tvalue:\t'value'\n    *\t\t\t}\n    *\t\t]\n    * }\n    */\n   getValue() {\n      // When asked for a value before a condition is set, default the\n      // unset glue to \"and\";\n      if (typeof this.condition.glue == \"undefined\") {\n         this.condition.glue = \"and\";\n      }\n      return this.condition;\n   }\n\n   isComplete() {\n      let result = true;\n\n      const noValueRules = [\n         \"is_current_user\",\n         \"is_not_current_user\",\n         \"contain_current_user\",\n         \"not_contain_current_user\",\n         \"same_as_user\",\n         \"not_same_as_user\",\n      ];\n\n      const isCompleteRules = (rules = []) => {\n         if (result == false) return;\n\n         rules.forEach((r) => {\n            if (r?.rules && Array.isArray(r?.rules)) {\n               isCompleteRules(r?.rules);\n            } else {\n               result =\n                  result &&\n                  r?.key != null &&\n                  r?.key != \"\" &&\n                  r?.rule != null &&\n                  r?.rule != \"\" &&\n                  ((r?.value != null && r?.value != \"\") ||\n                     noValueRules.indexOf(r?.rule) > -1);\n            }\n         });\n      };\n\n      isCompleteRules(this.condition?.rules);\n\n      return result;\n   }\n};\n\n","const ABComponent = require(\"../platform/ABComponent\");\n\n/**\n *  support get data from objects and queries\n */\nfunction getFieldVal(rowData, field, returnSingular = true) {\n   if (!field) return null;\n   if (!field.columnName) return null;\n   // if rowData is an array, then pull the first element to get value\n   if (rowData && rowData[0]) rowData = rowData[0];\n\n   let columnId = field.id;\n   let columnName = field.columnName;\n\n   let value = null;\n   if (columnName.indexOf(\".\") > -1) {\n      let colName = columnName.split(\".\")[1];\n      value = rowData[columnName] || rowData[colName] || rowData[columnId];\n   } else {\n      value = rowData[columnName] || rowData[columnId];\n   }\n\n   if (value) {\n      return value;\n   }\n\n   // otherwise, this might be a process check where the rowData keys have\n   // '[diagramID].[field.id]'\n   for (var k in rowData) {\n      var key = k.split(\".\")[1];\n      if (key && (key == columnId || key == columnName)) {\n         value = rowData[k];\n      }\n   }\n\n   // if value is an array, filter empty item\n   if (value && Array.isArray(value)) {\n      value = value.filter((v) => v != null);\n      if (returnSingular) value = value[0];\n   }\n\n   return value;\n}\n\nmodule.exports = class RowFilterCore extends ABComponent {\n   constructor(App, idBase, AB) {\n      idBase = idBase || \"ab_row_filter\";\n\n      super(App, idBase, AB);\n\n      this.Account = { username: \"??\" };\n      this._settings = {};\n      this.config_settings = {};\n      // var batchName; // we need to revert to this default when switching away from a in/by query field\n\n      this._QueryFields = [];\n      this._Fields;\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onChange: () => {},\n         },\n\n         /**\n          * @method getValue\n          *\n          * @return {JSON} -\n          * {\n          * \t\tglue: '', // 'and', 'or'\n          *\t\trules: [\n          *\t\t\t{\n          *\t\t\t\tkey:\t'column name',\n          *\t\t\t\trule:\t'rule',\n          *\t\t\t\tvalue:\t'value'\n          *\t\t\t}\n          *\t\t]\n          * }\n          */\n         getValue: () => {\n            return this.config_settings;\n         },\n\n         removeHtmlTags: function (text) {\n            let result = \"\";\n            try {\n               let div = document.createElement(\"div\");\n               div.innerHTML = text;\n\n               result = div.textContent || div.innerText || \"\";\n            } catch (err) {\n               result = (text || \"\").replace(/(<([^>]+)>)/gi, \"\");\n            }\n\n            return result;\n         },\n\n         textValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (value == null) value = \"\";\n\n            value = value.toString().trim().toLowerCase();\n            value = _logic.removeHtmlTags(value); // remove html tags - rich text editor\n\n            compareValue = compareValue\n               .toString()\n               .trim()\n               .toLowerCase()\n               .replace(/  +/g, \" \");\n\n            // support \"john smith\" => \"john\" OR/AND \"smith\"\n            var compareArray = compareValue.split(\" \");\n\n            switch (rule) {\n               case \"contains\":\n                  compareArray.forEach((val) => {\n                     if (result == false)\n                        // OR\n                        result = value.indexOf(val) > -1;\n                  });\n                  break;\n               case \"not_contains\":\n                  result = true;\n                  compareArray.forEach((val) => {\n                     if (result == true)\n                        // AND\n                        result = value.indexOf(val) < 0;\n                  });\n                  break;\n               case \"equals\":\n                  compareArray.forEach((val) => {\n                     if (result == false)\n                        // OR\n                        result = value == val;\n                  });\n                  break;\n               case \"not_equal\":\n                  result = true;\n                  compareArray.forEach((val) => {\n                     if (result == true)\n                        // AND\n                        result = value != val;\n                  });\n                  break;\n               case \"is_empty\":\n                  result = value == null || value == \"\";\n                  break;\n               case \"is_not_empty\":\n                  result = value != null && value != \"\";\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         dateValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (!(value instanceof Date)) value = new Date(value);\n\n            if (!(compareValue instanceof Date))\n               compareValue = new Date(compareValue);\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               case \"less\":\n                  result = value < compareValue;\n                  break;\n               case \"greater\":\n                  result = value > compareValue;\n                  break;\n               case \"less_or_equal\":\n                  result = value <= compareValue;\n                  break;\n               case \"greater_or_equal\":\n                  result = value >= compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         numberValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            value = Number(value);\n            compareValue = Number(compareValue);\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               case \"less\":\n                  result = value < compareValue;\n                  break;\n               case \"greater\":\n                  result = value > compareValue;\n                  break;\n               case \"less_or_equal\":\n                  result = value <= compareValue;\n                  break;\n               case \"greater_or_equal\":\n                  result = value >= compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         listValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (value && value.toLowerCase) value = value.toLowerCase();\n\n            compareValue = compareValue.toLowerCase();\n\n            if (!Array.isArray(compareValue)) compareValue = [compareValue];\n\n            switch (rule) {\n               case \"equals\":\n                  if (value) result = compareValue.indexOf(value) > -1;\n                  break;\n               case \"not_equal\":\n                  if (value) result = compareValue.indexOf(value) < 0;\n                  else result = true;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         booleanValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n\n            // default value should be false\n            if (value == null) value = false;\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         userValid: (rowData, field, rule, compareValue) => {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n\n            // if (Array.isArray(value)) value = [value];\n\n            switch (rule) {\n               case \"is_current_user\":\n                  result = value == this.Account.username;\n                  break;\n               case \"is_not_current_user\":\n                  result = value != this.Account.username;\n                  break;\n               case \"contain_current_user\":\n                  if (!value) {\n                     result = false;\n                     break;\n                  }\n                  if (!Array.isArray(value)) value = [value];\n\n                  result =\n                     (value || []).filter((v) => {\n                        if (v) {\n                           return (\n                              (v.username || v.id || v.text || v) ==\n                              this.Account.username\n                           );\n                        } else {\n                           return false;\n                        }\n                     }).length > 0;\n                  break;\n               case \"not_contain_current_user\":\n                  if (!value) {\n                     result = false;\n                     break;\n                  }\n                  if (!Array.isArray(value)) value = [value];\n\n                  result =\n                     (value || []).filter((v) => {\n                        if (v) {\n                           return (\n                              (v.username || v.id || v.text || v) ==\n                              this.Account.username\n                           );\n                        } else {\n                           return false;\n                        }\n                     }).length == 0;\n                  break;\n               case \"equals\":\n                  result = value.indexOf(compareValue) > -1;\n                  break;\n               case \"not_equal\":\n                  result = value.indexOf(compareValue) < 0;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         queryValid: (rowData, rule, compareValue) => {\n            var result = false;\n\n            if (!this.AB || !compareValue) return result;\n\n            // queryId:fieldId\n            var queryId = compareValue.split(\":\")[0],\n               fieldId = compareValue.split(\":\")[1];\n\n            // if no query\n            var query = this.queries((q) => q.id == queryId)[0];\n            if (!query) return result;\n\n            // if no field\n            var field = query.fields((f) => f.id == fieldId)[0];\n            if (!field) return result;\n\n            let qIdBase = \"{idBase}-query-field-{id}\"\n                  .replace(\"{idBase}\", idBase)\n                  .replace(\"{id}\", query.id),\n               inQueryFieldFilter = new this.constructor(this.App, qIdBase);\n            inQueryFieldFilter.Account = this.Account;\n            // inQueryFieldFilter.applicationLoad(this._Application);\n            inQueryFieldFilter.fieldsLoad(query.fields());\n            inQueryFieldFilter.setValue(query.workspaceFilterConditions);\n\n            switch (rule) {\n               case \"in_query_field\":\n                  result = inQueryFieldFilter.isValid(rowData);\n                  break;\n               case \"not_in_query_field\":\n                  result = !inQueryFieldFilter.isValid(rowData);\n                  break;\n            }\n\n            return result;\n         },\n\n         inQueryValid: (rowData, columnName, rule, compareValue) => {\n            let result = false;\n\n            if (columnName) {\n               rowData = rowData[columnName] || {};\n            }\n\n            if (!compareValue || !this.AB) return result;\n\n            // if no query\n            let query = this.queries((q) => q.id == compareValue)[0];\n            if (!query) return result;\n\n            let qIdBase = \"{idBase}-query-{id}\"\n                  .replace(\"{idBase}\", idBase)\n                  .replace(\"{id}\", query.id),\n               inQueryFilter = new this.constructor(this.App, qIdBase);\n            inQueryFilter.Account = this.Account;\n            // inQueryFilter.applicationLoad(this._Application);\n            inQueryFilter.fieldsLoad(query.fields());\n            inQueryFilter.setValue(query.workspaceFilterConditions);\n\n            switch (rule) {\n               case \"in_query\":\n                  result = inQueryFilter.isValid(rowData);\n                  break;\n               case \"not_in_query\":\n                  result = !inQueryFilter.isValid(rowData);\n                  break;\n            }\n\n            return result;\n         },\n\n         dataCollectionValid: (rowData, columnName, rule, compareValue) => {\n            var result = false;\n\n            if (!compareValue || !this.AB) return result;\n\n            if (columnName) {\n               rowData = rowData[columnName] || {};\n            }\n\n            let dc = this.AB.datacollectionByID(compareValue);\n\n            switch (rule) {\n               case \"in_data_collection\":\n                  if (!dc) return false;\n\n                  result =\n                     dc.getData(\n                        (d) => (d.id || d.uuid) == (rowData.id || rowData.uuid)\n                     ).length > 0;\n                  break;\n               case \"not_in_data_collection\":\n                  if (!dc) return true;\n\n                  result =\n                     dc.getData(\n                        (d) => (d.id || d.uuid) == (rowData.id || rowData.uuid)\n                     ).length < 1;\n                  break;\n            }\n\n            return result;\n         },\n\n         connectFieldValid: function (rowData, field, rule, compareValue) {\n            let relationName = field.relationName();\n\n            let connectedVal = \"\";\n\n            if (rowData) {\n               if (rowData[relationName]) {\n                  connectedVal = (\n                     (field.indexField\n                        ? rowData[relationName][field.indexField.columnName]\n                        : false) || // custom index\n                     (field.indexField2\n                        ? rowData[relationName][field.indexField2.columnName]\n                        : false) || // custom index 2\n                     rowData[relationName].id ||\n                     rowData[relationName]\n                  )\n                     .toString()\n                     .toLowerCase();\n               } else {\n                  let fieldVal = getFieldVal(rowData, field);\n                  if (fieldVal != null) {\n                     connectedVal = fieldVal;\n\n                     // an Object to a String\n                     if (typeof connectedVal == \"object\") {\n                        connectedVal =\n                           field.datasourceLink.displayData(connectedVal);\n                     }\n                  }\n               }\n            }\n\n            let compareValueLowercase = (compareValue || \"\").toLowerCase();\n\n            switch (rule) {\n               case \"contains\":\n                  return (\n                     connectedVal.toString().indexOf(compareValueLowercase) > -1\n                  );\n               case \"not_contains\":\n                  return (\n                     connectedVal.toString().indexOf(compareValueLowercase) ==\n                     -1\n                  );\n               case \"equals\":\n                  return connectedVal == compareValueLowercase;\n               case \"not_equal\":\n                  return connectedVal != compareValueLowercase;\n               case \"in_query\":\n               case \"not_in_query\":\n                  return _logic.inQueryValid(\n                     rowData,\n                     relationName,\n                     rule,\n                     compareValue\n                  );\n               case \"is_current_user\":\n               case \"is_not_current_user\":\n               case \"contain_current_user\":\n               case \"not_contain_current_user\":\n                  return _logic.userValid(rowData, field, rule, compareValue);\n               case \"is_empty\":\n                  return (\n                     rowData[relationName] == null ||\n                     rowData[relationName].length < 1 ||\n                     rowData[relationName] == \"\"\n                  );\n               case \"is_not_empty\":\n                  return (\n                     rowData[relationName] != null &&\n                     ((Array.isArray(rowData[relationName]) &&\n                        rowData[relationName].length > 0) ||\n                        rowData[relationName] != \"\")\n                  );\n               case \"in_data_collection\":\n               case \"not_in_data_collection\":\n                  return _logic.dataCollectionValid(\n                     rowData,\n                     relationName,\n                     rule,\n                     compareValue\n                  );\n            }\n         },\n\n         thisObjectValid: (rowData, rule, compareValue) => {\n            let result = false;\n\n            switch (rule) {\n               // if in_query condition\n               case \"in_query\":\n               case \"not_in_query\":\n                  if (!this.AB || !this._Object) return result;\n\n                  // if > 1 copy of this object in query ==> Error!\n                  var query = this.queries((q) => q.id == compareValue)[0];\n                  if (!query) return result;\n\n                  var listThisObjects = query.objects((o) => {\n                     return o.id == this._Object.id;\n                  });\n                  if (listThisObjects.length > 1) {\n                     // Alternative: choose the 1st instance of this object in the query, and make the compare on that.\n                     // Be sure to warn the developer of the limitiations of an \"this_object\" \"in_query\"  when query has > 1 copy of\n                     // this object as part of the query.\n\n                     console.error(\n                        \"HEY!  Can't compare this_object to a query that has > 1 copy of that object!\"\n                     );\n                     return true;\n                  }\n\n                  // get this object's alias from the query\n                  var alias = query.objectAlias(this._Object.id);\n\n                  // make sure all my columns in rowData are prefixed by \"alias\".columnName\n                  var newRowData = {};\n                  Object.keys(rowData).forEach((key) => {\n                     newRowData[`${alias}.${key}`] = rowData[key];\n                  });\n\n                  // then pass this on to the _logic.queryValid();\n                  return _logic.inQueryValid(\n                     newRowData,\n                     null,\n                     rule,\n                     compareValue\n                  );\n               // break; /* eslint no-unreachable */\n\n               // if in_datacollection condition\n               case \"in_data_collection\":\n               case \"not_in_data_collection\":\n                  // send rowData, null to datacollectionValid()\n                  return _logic.dataCollectionValid(\n                     rowData,\n                     null,\n                     rule,\n                     compareValue\n                  );\n               // break; /* eslint no-unreachable */\n            }\n         },\n      });\n\n      // Interface methods for parent component:\n      // this.objectLoad = _logic.objectLoad;\n      // this.viewLoad = _logic.viewLoad;\n      this.getValue = _logic.getValue;\n      // this.setValue = _logic.setValue;\n      // this.isValid = _logic.isValid;\n   }\n\n   init(options) {\n      if (options.showObjectName) {\n         this._settings.showObjectName = options.showObjectName;\n      }\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    */\n   isValid(rowData) {\n      var config_settings = this.config_settings;\n      var _logic = this._logic;\n\n      // If no conditions, then return true\n      if (\n         config_settings == null ||\n         config_settings.rules == null ||\n         config_settings.rules.length == 0\n      )\n         return true;\n\n      if (rowData == null) return false;\n\n      var result = config_settings.glue === \"and\" ? true : false;\n\n      config_settings.rules.forEach((filter) => {\n         if (!filter?.key || !filter?.rule) return;\n\n         var fieldInfo = this._Fields.filter((f) => f.id == filter.key)[0];\n         if (!fieldInfo) return;\n\n         var condResult;\n\n         // Filters that have \"this_object\" don't have a fieldInfo.key, so in that case,\n         // define a special .key == \"this_object\"\n         var ruleFieldType = fieldInfo.key;\n         if (typeof fieldInfo.key == \"undefined\") {\n            if (fieldInfo.id != \"this_object\") {\n               fieldInfo.key = \"connectField\"; // if you are looking at the parent object it won't have a key to analyze\n               ruleFieldType = fieldInfo.key;\n            } else ruleFieldType = \"this_object\";\n         }\n\n         switch (ruleFieldType) {\n            case \"string\":\n            case \"LongText\":\n            case \"email\":\n               condResult = _logic.textValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"date\":\n            case \"datetime\":\n               condResult = _logic.dateValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"number\":\n            case \"formula\":\n               condResult = _logic.numberValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"list\":\n               condResult = _logic.listValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"boolean\":\n               condResult = _logic.booleanValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"user\":\n               condResult = _logic.userValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"connectField\":\n            case \"connectObject\":\n               condResult = _logic.connectFieldValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"this_object\":\n               condResult = _logic.thisObjectValid(\n                  rowData,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n         }\n\n         if (config_settings.glue === \"and\") {\n            result = result && condResult;\n         } else {\n            result = result || condResult;\n         }\n      });\n\n      return result;\n   }\n\n   /**\n    * @method applicationLoad\n    * set application\n    *\n    * @param application {ABApplication}\n    */\n   // applicationLoad(application) {\n   //    this._Application = application;\n   // }\n\n   /**\n    * @method fieldsLoad\n    * set fields\n    *\n    * @param {array} fields\n    *        an array of fields used in this Query\n    * @param {ABObject} object [optional]\n    *        (optional) ABObject reference if this Filter should support\n    *        the \"this object\" conditions.\n    */\n   fieldsLoad(fields = [], object = null) {\n      this._Fields = fields.filter((f) => f?.fieldIsFilterable?.());\n      // NOTE: User fields are now Connections, but we want to treat them\n      // differently.\n      this._QueryFields = this._Fields\n         ? this._Fields.filter((f) => f && f.isConnection && f.key != \"user\")\n         : [];\n\n      // insert our 'this object' entry if an Object was given.\n      if (object) {\n         this._Object = object;\n\n         let thisObjOption = {\n            id: \"this_object\",\n            label: object.label,\n         };\n\n         // If object is query ,then should define default alias: \"BASE_OBJECT\"\n         if (object.viewName) {\n            thisObjOption.alias = \"BASE_OBJECT\";\n         }\n\n         this._Fields.unshift(thisObjOption);\n      } else {\n         delete this._Object;\n      }\n   }\n\n   queriesLoad(queries = []) {\n      this._Queries = queries;\n   }\n\n   /**\n    * @method queries()\n    * return an array of all the ABObjectQuery.\n    * @param {fn} filter\n    * @return {array}\n    */\n   queries(filter = () => true) {\n      let result = [];\n\n      if (this.AB) {\n         result = result.concat(this.AB.queries(filter));\n      }\n\n      if (this._Queries) {\n         result = result.concat(\n            (this._Queries || []).filter(\n               (q) => filter(q) && result.filter((r) => r.id == q.id).length < 1\n            )\n         );\n      }\n\n      return result;\n   }\n\n   setValue(settings) {\n      this.config_settings = settings || {};\n      this.config_settings.rules = this.config_settings.rules || [];\n   }\n};\n","/*\n * ABFieldAutoIndex\n *\n * An ABFieldAutoIndex defines a AutoIndex field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldAutoIndexDefaults = {\n   key: \"AutoIndex\",\n   // unique key to reference this specific DataField\n\n   description: \"Auto Increment Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"key\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'key'  to\n   // reference 'fa-key'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Auto Index\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"tinyint\", \"smallint\", \"mediumint\", \"int\", \"integer\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   prefix: \"\",\n   delimiter: \"none\",\n   displayLength: 4,\n   previewText: \"0000\",\n};\n\nmodule.exports = class ABFieldAutoIndexCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldAutoIndexDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldAutoIndexDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static getDelimiterSign(text) {\n      const delimiterItem = this.delimiterList().filter((item) => {\n         return item.id == text;\n      })[0];\n\n      return delimiterItem ? delimiterItem.sign : \"\";\n   }\n\n   static delimiterList() {\n      return [\n         { id: \"none\", value: L(\"None\"), sign: \"\" },\n         { id: \"comma\", value: L(\"Comma\"), sign: \", \" },\n         { id: \"slash\", value: L(\"Slash\"), sign: \"/\" },\n         { id: \"space\", value: L(\"Space\"), sign: \" \" },\n         { id: \"dash\", value: L(\"Dash\"), sign: \"-\" },\n         { id: \"colon\", value: L(\"Colon\"), sign: \":\" },\n      ];\n   }\n\n   static setValueToIndex(prefix, delimiter, displayLength, displayNumber) {\n      const resultIndex =\n         prefix +\n         this.getDelimiterSign(delimiter) +\n         (\"0000000000\" + displayNumber).slice(-parseInt(displayLength));\n\n      return resultIndex;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.displayLength = parseInt(this.settings.displayLength);\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Remove every values, then we will use AUTO_INCREMENT of MySQL\n      delete values[this.columnName];\n   }\n\n   format(rowData) {\n      if (!rowData?.[this.columnName]) return \"\";\n\n      try {\n         const resultAutoIndex = this.constructor.setValueToIndex(\n            this.settings.prefix,\n            this.settings.delimiter,\n            this.settings.displayLength,\n            rowData[this.columnName]\n         );\n\n         return resultAutoIndex;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n\n","/*\n * ABFieldBoolean\n *\n * An ABFieldBoolean defines a boolean field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldBooleanDefaults = {\n   key: \"boolean\",\n   // unique key to reference this specific DataField\n\n   description: \"A single checkbox that can be checked or unchecked.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"check-square-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'check-square-o'  to\n   // reference 'fa-check-square-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Checkbox\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"boolean\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"bool\", \"boolean\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   default: 0,\n};\n\nmodule.exports = class ABFieldBooleanCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldBooleanDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldBooleanDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      if (this.settings.default != null)\n         this.settings.default = parseInt(this.settings.default);\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] == null && this.settings.default != null) {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n};\n","/*\n * ABFieldCalculate\n *\n * An ABFieldCalculate defines a calculate field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\n/** Private methods */\nfunction AGE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   const today = new Date();\n   const oneYear = 31536000000; // (24 * 60 * 60 * 1000) * 365;\n   const diffYears = (today - dataDate) / oneYear;\n\n   if (diffYears < 1) return Math.round(diffYears * 10) / 10;\n   // float 2 digits\n   else return Math.floor(diffYears); // no float digit\n\n   // const today = new Date();\n   // const age = today.getFullYear() - dataDate.getFullYear();\n   // if (age < 1) {\n   // \tconst m = today.getMonth() - dataDate.getMonth();\n\n   // \tage = parseFloat(\"0.\" + m);\n\n   // \t// if (m < 0 || (m === 0 && today.getDate() < dataDate.getDate())) {\n   // \t// \tage--;\n   // \t// }\n   // }\n   // return age;\n}\n\nfunction YEAR(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   return dataDate.getFullYear();\n}\n\nfunction MONTH(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // Start at 0\n   return dataDate.getMonth();\n}\n\nfunction DAY(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   return dataDate.getDate();\n}\n\nfunction DATE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one day\n   const oneDay = 86400000; // 1000 * 60 * 60 * 24\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneDay);\n}\n\nfunction HOUR(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one hour\n   const oneHour = 3600000; // 1000 * 60 * 60\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneHour);\n}\n\nfunction MINUTE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one hour\n   const oneMinute = 60000; // 1000 * 60\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneMinute);\n}\n\nfunction MINUTE_TO_HOUR(mins) {\n   const hours = mins / 60;\n   const rhours = Math.floor(hours);\n   const minutes = (hours - rhours) * 60;\n   const rminutes = Math.round(minutes);\n\n   return parseFloat(`${rhours}.${rminutes}`);\n}\n\nconst ABFieldCalculateDefaults = {\n   key: \"calculate\",\n   // unique key to reference this specific DataField\n\n   description: \"Perform a calculation based upon existing values\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"calculator\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'calculator'  to\n   // reference 'fa-calculator'\n\n   isFilterable: (field) => {\n      const unsupportedInFilter = [\"MINUTE_TO_HOUR\", \"DATE\", \"HOUR\", \"MINUTE\"];\n      const unsupported = unsupportedInFilter.filter((item) =>\n         field.settings.formula.includes(item)\n      );\n      return unsupported.length == 0;\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Calculate\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   formula: \"\",\n   decimalSign: \"none\", // \"none\", \"comma\", \"period\", \"space\"\n   decimalPlaces: 0, // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\n};\n\nmodule.exports = class ABFieldCalculateCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldCalculateDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldCalculateDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   /**\n    * @method convertToJs\n    *\n    * @param {ABOBject} object\n    * @param {string} formula\n    * @param {object} rowData\n    * @param {integer} place\n    * @param {string} alias [Optional]\n    */\n   static convertToJs(object, formula, rowData, place, alias = null) {\n      if (!formula) return \"\";\n\n      // replace with current date\n      formula = formula.replace(/\\(CURRENT\\)/g, \"(new Date())\");\n\n      object.fields().forEach((f) => {\n         let colName = f.columnName;\n         if (colName.indexOf(\".\") > -1)\n            // QUERY: get only column name\n            colName = colName.split(\".\")[1];\n\n         // if template does not contain, then should skip\n         if (formula.indexOf(\"{\" + colName + \"}\") < 0) return;\n\n         const data =\n            rowData[`${object.alias ?? alias}.${f.columnName}`] ??\n            rowData[f.columnName];\n\n         // number fields\n         if (f.key == \"number\") {\n            const numberVal = `(${data || 0})`; // (number) - NOTE : (-5) to support negative number\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               numberVal\n            );\n         }\n         // calculate and formula fields\n         else if (f.key == \"calculate\" || f.key == \"formula\") {\n            let calVal = f.format(rowData) || 0;\n\n            // pull number only\n            if (typeof calVal == \"string\")\n               calVal = calVal.replace(/[^-0-9.]/g, \"\");\n\n            calVal = `(${calVal})`;\n\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               calVal\n            );\n         }\n         // date fields\n         else if (f.key == \"date\") {\n            const dateVal = `\"${data || \"\"}\"`; // \"date\"\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               dateVal\n            );\n         }\n         // boolean fields\n         else if (f.key == \"boolean\") {\n            const booleanVal = `(${data || 0})`; // show 1 or 0 for boolean\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               booleanVal\n            );\n         }\n      });\n\n      // decimal places - toFixed()\n      // FIX: floating number calculation\n      // https://randomascii.wordpress.com/2012/02/25/comparing-floating-point-numbers-2012-edition/\n      return eval(formula).toFixed(place || 0);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // this field is read only\n      delete values[this.columnName];\n   }\n\n   format(rowData) {\n      let place = 0;\n      if (this.settings.decimalSign != \"none\") {\n         place = this.settings.decimalPlaces;\n      }\n\n      try {\n         let result = this.constructor.convertToJs(\n            this.object,\n            this.settings.formula,\n            rowData,\n            place,\n            this.alias\n         );\n\n         if (typeof result == \"string\")\n            result = result.replace(/[^-0-9.]/g, \"\");\n\n         switch (this.settings.decimalSign) {\n            case \"comma\":\n               result = result.replace(\".\", \",\");\n               break;\n            case \"space\":\n               result = result.replace(\".\", \" \");\n               break;\n         }\n\n         return result;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n","/*\n * ABFieldCombine\n *\n * An ABFieldCombine defines a combined field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\n// function L(key, altText) {\n//    // TODO:\n//    return altText; // AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABFieldCombinedDefaults = {\n   key: \"combined\",\n   // unique key to reference this specific DataField\n\n   description: \"Combined Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"key\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'key'  to\n   // reference 'fa-key'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Combined Field\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   combinedFields: \"\",\n   // {string} \"field's uuid1, field's uuid2, field's uuid3, ...\"\n   // This tells us what fields will be combined.\n   // if we don't have this, the old value which we filled out won't be cleared when we do \"Add field\" this type again.\n\n   delimiter: \"plus\", // plus, space, dash, period\n};\n\nmodule.exports = class ABFieldCombineCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldCombinedDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldCombinedDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.delimiter =\n         values.settings.delimiter || defaultValues.delimiter;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Remove every values, then we will use AUTO_INCREMENT of MySQL\n      delete values[this.columnName];\n   }\n};\n","/*\n * ABFieldConnect\n *\n * An ABFieldConnect defines a connect to other object field type.\n *\n */\n\nvar ABField = require(\"../../platform/dataFields/ABField\");\n\n// function L(key, altText) {\n//    // TODO:\n//    return altText; // AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABFieldConnectDefaults = {\n   key: \"connectObject\",\n   // unique key to reference this specific DataField\n\n   description: \"Connect two data objects together\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"external-link\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'external-link'  to\n   // reference 'fa-external-link'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      const linkType = `${field?.settings?.linkType}:${field?.settings?.linkViaType}`;\n      return [\"one:many\", \"one:one\"].indexOf(linkType) > -1;\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Connect to another record\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   linkObject: \"\", // ABObject.id\n   // the .id of the ABObject we are connected to\n\n   linkType: \"one\", // [one, many]\n   // 'one' : this object can have only 1 of our linkObject\n   // 'many': this object can have MANY of our linkObject\n\n   linkViaType: \"many\", // [one, many]\n   // 'one' : the linkedObject can only have 1 of me\n   // 'many' : the linkedObject can have many of me\n\n   linkColumn: \"\", // ABField.id\n   // the .id of the field in the linkedObject that is our\n   // connected field.\n\n   isSource: null, // bit : 1,0\n   // isSource indicates that this object is the source of the connection:\n   // if linkType==one, and isSource=1, then the value in this object's field\n   // \t\tis the connected object's id\n   // if linkType == one, and isSource = 0, then the linkObject has this obj.id\n   //  \tin it's connected field (linkColumn)\n\n   // the next 3 Fields are concerning how we connect to other ABObjects when\n   // we are NOT using the .uuid as the connecting Value. Instead, there is an\n   // ABIndex setting we are connecting with.\n   isCustomFK: 0,\n   // {bool} truthy [0,1, etc...]\n   // indicates that this connection is using 1 or more custom foreign keys\n   // for the data it is storing in it's relationship.\n\n   indexField: \"\", // ABField.id\n   // {string} {ABField.id}\n   // In a Connection defined between A --> B, this field represents the ABField\n   // that is used for the data being stored.\n   // In 1:1,  1:M  or M:1  relationships, .indexField always refers to the\n   //       field we are pulling the Data FROM.\n   // In M:N relationships:  this will refer to the A.Field.id that is a custom\n   //       key (if any).\n\n   indexField2: \"\", // ABField.id\n   // {string}  {ABField.id}\n   // In the M:N relationship: this field refers to the B.Field.id that is a\n   //       custom Key for the data we are storing.\n};\n\nmodule.exports = class ABFieldConnectCore extends ABField {\n   constructor(values, object, fieldDefaults = ABFieldConnectDefaults) {\n      super(values, object, fieldDefaults);\n\n      this.isConnection = true;\n      // {bool}\n      // is this an ABFieldConnect type of field.\n      // this is a simplified helper to identify if an ABField is a type\n      // of connect field.  Since this is the only place it is defined,\n      // all other field types will be falsy\n\n      // // text to Int:\n      // this.settings.isSource = parseInt(this.settings.isSource || 0);\n      // this.settings.isCustomFK = parseInt(this.settings.isCustomFK || 0);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldConnectDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.isSource = parseInt(this.settings.isSource || 0);\n      this.settings.isCustomFK = parseInt(this.settings.isCustomFK || 0);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(/* values */) {}\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n\n   relationName() {\n      // there is object name - {objectName}.{columnName}\n      if (this.columnName.indexOf(\".\") > -1) {\n         const names = this.columnName.split(\".\");\n         return `${names[0]}.${this.AB.rules.toFieldRelationFormat(names[1])}`;\n      } else {\n         return this.AB.rules.toFieldRelationFormat(this.columnName);\n      }\n   }\n\n   /**\n    * @method datasourceLink\n    * return the ABObject that this field connection links to\n    * @return {ABObject}\n    */\n   get datasourceLink() {\n      const linkObj = this.AB.objectByID(this.settings.linkObject);\n      if (!linkObj) {\n         const configError = new Error(\n            `ConnectField[${this.label}][${this.id}] unable to find linkObject[${this.settings.linkObject}]`\n         );\n         this.AB.notify.builder(configError, {\n            field: this,\n            linkObject: this.settings.linkObject,\n         });\n      }\n      return linkObj;\n   }\n\n   /**\n    * @method fieldLink\n    * return the ABField that we are linked to.\n    * @return {ABDataField}  or undefined if not found.\n    */\n   get fieldLink() {\n      const objectLink = this.datasourceLink;\n      if (!objectLink) return null; // note: already Notified\n\n      const linkColumn = objectLink.fieldByID(this.settings.linkColumn);\n      if (!linkColumn) {\n         const configError = new Error(\n            `ConnectField[${this.label}][${this.id}] unable to find linkColumn[${this.settings.linkColumn}]`\n         );\n         this.AB.notify.builder(configError, {\n            field: this,\n            linkColumn: this.settings.linkColumn,\n         });\n      }\n      return linkColumn;\n   }\n\n   /**\n    * @method pullRelationValues\n    * Return the data values for this field entry in the provided data row.\n    * @param {*} row\n    * @return {array}\n    */\n   pullRelationValues(row) {\n      let selectedData;\n\n      // Get linked object\n      const linkedObject = this.datasourceLink;\n\n      let data = this.dataValue(row);\n      if (data && linkedObject) {\n         // convert to JSON\n         if (typeof data == \"string\") {\n            try {\n               data = JSON.parse(data);\n            } catch (e) {\n               // must be a UUID\n               // so just set that to selectedData:\n               selectedData = data;\n            }\n         }\n\n         selectedData = data;\n      }\n\n      return selectedData;\n   }\n\n   dataValue(rowData) {\n      if (rowData == null) return \"\";\n\n      const propName = `${this.object.name}.${this.relationName()}`;\n\n      return (\n         rowData[this.relationName()] ||\n         rowData[propName] ||\n         rowData[this.columnName] ||\n         \"\"\n      );\n   }\n\n   format(rowData) {\n      const val = this.pullRelationValues(rowData);\n      const linkedObject = this.datasourceLink;\n\n      // array\n      if (Array.isArray(val))\n         return val\n            .map((v) => {\n               if (v.text == null) return linkedObject.displayData(v) || \"\";\n               else return v.text || \"\";\n            })\n            .join(\", \");\n      // string\n      else if (val) {\n         if (val.text == null) return linkedObject.displayData(rowData) || \"\";\n         else if (val.text) return val.text || \"\";\n      }\n      // empty string\n      else return \"\";\n   }\n\n   /**\n    * @method linkType\n    * return the type of connection we have to our connected object\n    * @return {string}\n    */\n   linkType() {\n      return this.settings.linkType;\n   }\n\n   /**\n    * @method linkType\n    * return the type of connection we have to our connected object\n    * @return {string}\n    */\n   linkViaType() {\n      return this.settings.linkViaType;\n   }\n\n   /**\n    * @method isSource\n    * does this object contain the .id of the remote object (in case of linkType : one )\n    * @return {bool}\n    */\n   isSource() {\n      return this.settings.isSource;\n   }\n\n   /**\n    * @property indexField\n    * @return {ABField}\n    */\n   get indexField() {\n      if (!this.settings.isCustomFK || !this.settings.indexField) {\n         return null;\n      }\n      const linkType = `${this.settings.linkType}:${this.settings.linkViaType}`;\n      // 1:M\n      if (linkType === \"one:many\") {\n         return this.datasourceLink.fieldByID(this.settings.indexField);\n      }\n      // 1:1\n      else if (linkType === \"one:one\") {\n         if (this.settings.isSource) {\n            return this.datasourceLink.fieldByID(this.settings.indexField);\n         } else {\n            return this.object.fieldByID(this.settings.indexField);\n         }\n      }\n      // M:1\n      else if (linkType === \"many:one\") {\n         return this.object.fieldByID(this.settings.indexField);\n      }\n      // M:N\n      else if (linkType === \"many:many\") {\n         let indexField = this.object.fieldByID(this.settings.indexField);\n\n         if (indexField == null)\n            indexField = this.datasourceLink.fieldByID(\n               this.settings.indexField\n            );\n\n         return indexField;\n      }\n\n      return null;\n   }\n\n   /**\n    * @property indexField2\n    * @return {ABField}\n    */\n   get indexField2() {\n      if (!this.settings.isCustomFK || !this.settings.indexField2) {\n         return null;\n      }\n\n      let indexField;\n\n      // M:N only\n      if (\n         this.settings.linkType == \"many\" &&\n         this.settings.linkViaType == \"many\"\n      ) {\n         indexField = this.object.fieldByID(this.settings.indexField2);\n\n         if (indexField == null)\n            indexField = this.datasourceLink.fieldByID(\n               this.settings.indexField2\n            );\n      }\n\n      return indexField;\n   }\n\n   /**\n    * @method getRelationValue\n    * pull values for update connect data\n    * @param {Object} rowData\n    * @param {Object} options - {\n    *                               forUpdate: boolean\n    *                           }\n    * @return {Object}\n    */\n   getRelationValue(rowData, options = {}) {\n      if (rowData == null) return;\n      let colName;\n      const indexField = this.indexField;\n      const datasourceLink = this.datasourceLink;\n\n      const linkType = `${this.settings.linkType}:${this.settings.linkViaType}`;\n\n      // custom index\n      // M:N\n      if (linkType === \"many:many\") {\n         const indexField2 = this.indexField2;\n\n         if (indexField && indexField.object.id == datasourceLink.id) {\n            colName = indexField.columnName;\n         } else if (indexField2 && indexField2.object.id == datasourceLink.id) {\n            colName = indexField2.columnName;\n         }\n      }\n      // 1:M, 1:1 isSource = true\n      else if (\n         indexField &&\n         (linkType === \"one:many\" ||\n            (linkType === \"one:one\" && this.settings.isSource))\n      ) {\n         colName = indexField.columnName;\n      }\n      // M:1\n      else if (linkType === \"many:one\") {\n         // NOTE: M:1 has special case\n         // it uses different value for search and update.\n         // UPDATE uses row id\n         // SEARCH uses custom index value\n         if (options.forUpdate) {\n            colName = datasourceLink.PK();\n         } else {\n            colName = indexField\n               ? indexField.columnName\n               : this.fieldLink.columnName;\n         }\n      }\n      // NO CUSTOM INDEX\n      else if (datasourceLink) {\n         colName = datasourceLink.PK();\n      }\n\n      let result =\n         rowData[colName] ||\n         rowData[this.object?.PK()] ||\n         rowData.id ||\n         rowData;\n\n      if (colName == \"id\") {\n         result = parseInt(result);\n      }\n\n      return result;\n   }\n};\n","/*\n * ABFieldCore\n *\n * ABFieldBase defines the common ABField structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABObject classes.\n *\n */\n// const ABEmitter = require(\"../../platform/ABEmitter\");\nconst ABMLClass = require(\"../../platform/ABMLClass\");\n\nmodule.exports = class ABFieldCore extends ABMLClass {\n   constructor(values, object, fieldDefaults) {\n      super([\"label\"], object.AB);\n\n      // NOTE: setup this first so later we can use .fieldType(), .fieldIcon()\n      this.defaults = fieldDefaults || {};\n\n      /*\n  \t\t{\n  \t\t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n  \t\t\tkey:'fieldKey',\t\t\t\t// unique key for this Field\n  \t\t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this Field Type\n  \t\t\tlabel:'',\t\t\t\t\t// pulled from translation\n\t\t\tcolumnName:'column_name',\t// a valid mysql table.column name\n\t\t\tisImported: 1/0,\t\t\t// flag to mark is import from other object\n\t\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n\t\t\t\tshowIcon:true/false,\t// only useful in Object Workspace DataTable\n\t\t\t\tisImported: 1/0,\t\t// flag to mark is import from other object\n\t\t\t\trequired: 1/0,\t\t\t// field allows does not allow NULL or it does allow NULL\n\t\t\t\twidth: {int}\t\t\t// width of display column\n\n\t\t\t\t// specific for dataField\n\t\t\t},\n\t\t\ttranslations:[]\n  \t\t}\n  \t\t*/\n\n      this.object = object;\n\n      this.fromValues(values);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n   static get reservedNames() {\n      return [\n         \"id\",\n         \"created_at\",\n         \"updated_at\",\n         \"properties\",\n         \"createdAt\",\n         \"updatedAt\",\n      ];\n   }\n\n   static defaultValues() {\n      return {};\n   }\n\n   // unique key to reference this specific DataField\n   fieldKey() {\n      return this.defaults.key;\n   }\n\n   /**\n    * Sails ORM data types that can be imported to this DataField\n    * @return {Array}\n    */\n   fieldOrmTypes() {\n      if (this.defaults.compatibleOrmTypes) {\n         if (Array.isArray(this.defaults.compatibleOrmTypes)) {\n            return this.defaults.compatibleOrmTypes;\n         } else {\n            return [this.defaults.compatibleOrmTypes];\n         }\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * Mysql data types that can be imported to this DataField\n    * @return {Array}\n    */\n   fieldMysqlTypes() {\n      if (this.defaults.compatibleMysqlTypes) {\n         if (Array.isArray(this.defaults.compatibleMysqlTypes)) {\n            return this.defaults.compatibleMysqlTypes;\n         } else {\n            return [this.defaults.compatibleMysqlTypes];\n         }\n      } else {\n         return [];\n      }\n   }\n\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   fieldIcon() {\n      return this.defaults.icon;\n   }\n\n   // the multilingual text for the name of this data field.\n   fieldMenuName() {\n      return this.defaults.menuName;\n   }\n\n   // the multilingual text for the name of this data field.\n   fieldDescription() {\n      return this.defaults.description;\n   }\n\n   // the flag to set when checking if field should be filterable\n   fieldIsFilterable() {\n      if (this.defaults.isFilterable != null) {\n         if (typeof this.defaults.isFilterable === \"function\") {\n            return this.defaults.isFilterable(this);\n         } else {\n            return this.defaults.isFilterable;\n         }\n      }\n\n      return 1;\n   }\n\n   // the flag to set when checking if field should be sortable\n   fieldIsSortable() {\n      if (this.defaults.isSortable != null) {\n         if (typeof this.defaults.isSortable === \"function\") {\n            return this.defaults.isSortable(this);\n         } else {\n            return this.defaults.isSortable;\n         }\n      }\n\n      return 1;\n   }\n\n   // the flag to set when checking if the field should be used as a label\n   fieldUseAsLabel() {\n      if (this.defaults.useAsLabel != null) {\n         if (typeof this.defaults.useAsLabel === \"function\") {\n            return this.defaults.useAsLabel(this);\n         } else {\n            return this.defaults.useAsLabel;\n         }\n      }\n\n      return 1;\n   }\n\n   fieldSupportRequire() {\n      if (this.defaults.supportRequire) return this.defaults.supportRequire;\n      // default\n      else return true;\n   }\n\n   fieldSupportQuery() {\n      if (this.defaults.supportQuery != null) {\n         if (typeof this.defaults.supportQuery === \"function\") {\n            return this.defaults.supportQuery(this);\n         } else {\n            return this.defaults.supportQuery;\n         }\n      }\n\n      return true;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABField instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      return {\n         id: this.id,\n         type: this.type || \"field\",\n         key: this.key,\n         icon: this.icon,\n         isImported: this.isImported,\n         columnName: this.columnName,\n         settings: this.settings,\n         translations: obj.translations,\n      };\n   }\n\n   defaultCheck(val, defaultVal) {\n      let returnVal = defaultVal;\n      if (typeof val != \"undefined\") {\n         returnVal = val;\n      }\n      return returnVal;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      if (!this.id) this.id = values.id; // NOTE: only exists after .save()\n      this.type == values.type || \"field\";\n      this.key = values.key || this.fieldKey();\n      this.icon = values.icon || this.fieldIcon();\n\n      values.settings = values.settings || {};\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.columnName = values.columnName || \"\";\n\n      this.isImported = values.isImported || 0;\n\n      this.settings = values.settings;\n      this.settings.showIcon = this.defaultCheck(values.settings.showIcon, \"1\");\n      this.settings.required = this.defaultCheck(values.settings.required, \"0\");\n      this.settings.width = this.defaultCheck(values.settings.width, \"0\");\n\n      // convert from \"0\" => 0\n      this.isImported = parseInt(this.isImported);\n      this.settings.showIcon = parseInt(this.settings.showIcon);\n      this.settings.required = parseInt(this.settings.required);\n      this.settings.unique = parseInt(this.settings.unique || 0);\n      this.settings.width = parseInt(this.settings.width);\n\n      // we're responsible for setting up our specific settings:\n      const defaultValues = this.constructor.defaultValues() || {};\n      for (const dv in defaultValues) {\n         this.settings[dv] = this.defaultCheck(\n            values.settings[dv],\n            defaultValues[dv]\n         );\n      }\n\n      // const the MLClass now process the Translations\n      super.fromValues(values);\n\n      // final validity check: columnName really should have a value:\n      this.columnName = this.columnName || this.label;\n\n      // knex does not like .(dot) in table and column names\n      // https://github.com/knex/knex/issues/2762\n      this.columnName = this.columnName.replace(/[^a-zA-Z0-9_ ]/gi, \"\");\n   }\n\n   /**\n    * @method urlPointer()\n    * return a string pointer to decode this object from the root application\n    * object.\n    * @return {string} pointer reference\n    */\n   urlPointer() {\n      return this.object.urlField() + this.id;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      values[this.columnName] = \"\";\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    */\n   isValidData(data, validator) {\n      // console.error('!!! Field ['+this.fieldKey()+'] has not implemented .isValidData()!!!');\n      if (\n         this.settings.required &&\n         (data[this.columnName] == null || data[this.columnName] == \"\") &&\n         data[this.columnName] != 0\n      ) {\n         validator.addError(this.columnName, \"This is a required field.\");\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return false;\n   }\n\n   dataValue(rowData) {\n      const propName = `${this.alias || this.object.name}.${this.columnName}`;\n\n      let result = \"\";\n      if (rowData?.[this.columnName] != null) {\n         result = rowData[this.columnName];\n      } else if (rowData?.[propName] != null) {\n         result = rowData[propName];\n      }\n\n      return result;\n   }\n\n   /**\n    * @method format\n    * return display text to detail comonent and define label of object\n    *\n    * @param {Object} rowData - data\n    */\n   format(rowData) {\n      if (rowData) {\n         return this.dataValue(rowData);\n      } else return \"\";\n   }\n\n   /**\n    * @method toDefinition()\n    *\n    * convert this instance into an ABDefinition object.\n    *\n    * @return {ABDefinition}\n    */\n   toDefinition() {\n      const myDef = super.toDefinition();\n\n      // attempt to provide a more descriptive name:\n      // [obj]->[fieldName]\n      if (myDef.name == \"\") {\n         myDef.name =\n            myDef.json.name || myDef.json.label || myDef.json.columnName;\n      }\n      if (this.object && this.object.name) {\n         myDef.name = `${this.object.name}->${myDef.name}`;\n      }\n      return myDef;\n   }\n};\n","/*\n * ABFieldDate\n *\n * An ABFieldDate defines a date field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldDateDefaults = {\n   key: \"date\",\n   // unique key to reference this specific DataField\n\n   description: \"Pick one from a calendar.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"calendar\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'calendar'  to\n   // reference 'fa-calendar'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Date\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"date\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"date\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   dateFormat: 2, // 1 (Ignore date), 2, 3, 4, 5\n   defaultDate: 1, // 1 (None), 2 (Current Date), 3 (Specific Date)\n   defaultDateValue: null, // {Date}\n   validateCondition: \"none\",\n   validateRangeUnit: \"days\",\n   validateRangeBefore: 0,\n   validateRangeAfter: 0,\n   validateStartDate: null,\n   validateEndDate: null,\n};\n\nmodule.exports = class ABFieldDateCore extends ABField {\n   constructor(values, object, defaultValues = ABFieldDateDefaults) {\n      super(values, object, defaultValues);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldDateDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   // TODO: current webpack install fails here without babel-loader,\n   // so swtich this to old JS method of Static Values (see bottom)\n   // static RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2}$\";\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.dateFormat = parseInt(this.settings.dateFormat);\n      this.settings.defaultDate = parseInt(this.settings.defaultDate);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] != null) return;\n\n      let dateResult;\n\n      // Set current date as default\n      if (this.settings.defaultDate == 2) {\n         dateResult = new Date();\n      }\n      // Set specific date as default\n      else if (\n         this.settings.defaultDate == 3 &&\n         this.settings.defaultDateValue\n      ) {\n         dateResult = new Date(this.settings.defaultDateValue);\n      }\n\n      // if no default value is set, then don't insert a value.\n      if (dateResult != null) {\n         values[this.columnName] = this.AB.rules.toDateFormat(dateResult, {\n            format: \"YYYY-MM-DD\",\n         });\n         // values[this.columnName] = moment(dateResult).format(\"YYYY-MM-DD\");\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (data[this.columnName]) {\n         let value = data[this.columnName];\n\n         if (!(value instanceof Date)) {\n            value = this.AB.rules.toDate(value);\n            // value = new Date(this.convertToMoment(value));\n         }\n\n         // verify we didn't end up with an InValid Date result.\n         if (\n            Object.prototype.toString.call(value) === \"[object Date]\" &&\n            isFinite(value)\n         ) {\n            let isValid = true;\n\n            // Custom vaildate is here\n            if (this.settings && this.settings.validateCondition) {\n               const startDate = this.settings.validateStartDate\n                     ? new Date(this.settings.validateStartDate)\n                     : null,\n                  endDate = this.settings.validateEndDate\n                     ? new Date(this.settings.validateEndDate)\n                     : null,\n                  startDateDisplay = this.getDateDisplay(startDate),\n                  endDateDisplay = this.getDateDisplay(endDate);\n               const minDate = this.AB.rules.subtractDate(\n                  new Date(),\n                  this.settings.validateRangeBefore,\n                  this.settings.validateRangeUnit\n               );\n               const maxDate = this.AB.rules.addDate(\n                  new Date(),\n                  this.settings.validateRangeAfter,\n                  this.settings.validateRangeUnit\n               );\n               switch (this.settings.validateCondition) {\n                  case \"dateRange\":\n                     if (minDate < value && value < maxDate) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should be in between {0} and {1}\", [\n                              this.getDateDisplay(minDate),\n                              this.getDateDisplay(maxDate),\n                           ])\n                        );\n                     }\n\n                     break;\n                  case \"between\":\n                     if (startDate < value && value < endDate) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should be in between {0} and {1}\", [\n                              startDateDisplay,\n                              endDateDisplay,\n                           ])\n                        );\n                     }\n                     break;\n                  case \"notBetween\":\n                     if (value < startDate && endDate < value) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should not be in between {0} and {1}\", [\n                              startDateDisplay,\n                              endDateDisplay,\n                           ])\n                        );\n                     }\n                     break;\n                  case \"=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() == startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<>\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() != startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should not equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \">\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() > startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should after {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() < startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should before {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \">=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() >= startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should after or equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() <= startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should before or equal {0}\", [startDateDisplay])\n                        );\n                     break;\n               }\n            }\n\n            if (isValid) {\n               // Reformat value to DB\n               // NOTE: should we update here?\n               data[this.columnName] = this.exportValue(value);\n            }\n         } else {\n            // return a validation error\n            validator.addError(this.columnName, \"Should be a Date!\");\n         }\n      }\n   }\n\n   format(rowData) {\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n\n      // pull format from settings.\n      const dateObj = this.AB.rules.toDate(d);\n      return this.getDateDisplay(dateObj);\n\n      // const momentObj = this.convertToMoment(d);\n      // return this.getDateDisplay(new Date(momentObj));\n   }\n\n   getFormat() {\n      let dateFormatString = \"\";\n\n      const dateFormat =\n         this.settings && this.settings.dateFormat\n            ? this.settings.dateFormat\n            : \"\";\n\n      switch (dateFormat) {\n         //Ignore Date\n         case (1, 2):\n            {\n               dateFormatString = \"%d/%m/%Y\";\n            }\n            break;\n         //mm/dd/yyyy\n         case 3:\n            {\n               dateFormatString = \"%m/%d/%Y\";\n            }\n            break;\n         //M D, yyyy\n         case 4:\n            {\n               dateFormatString = \"%M %d, %Y\";\n            }\n            break;\n         //D M, yyyy\n         case 5:\n            {\n               dateFormatString = \"%d %M, %Y\";\n            }\n            break;\n         default:\n            {\n               dateFormatString = \"%d/%m/%Y\";\n            }\n            break;\n      }\n\n      return dateFormatString;\n   }\n\n   getDateDisplay(dateData) {\n      const dateFormat = this.getFormat();\n\n      return this.dateToString(dateFormat, dateData);\n   }\n\n   // convertToMoment(string) {\n   //    const result = moment(string);\n\n   //    const supportFormats = [\n   //       \"DD/MM/YYYY\",\n   //       \"MM/DD/YYYY\",\n   //       \"DD-MM-YYYY\",\n   //       \"MM-DD-YYYY\"\n   //    ];\n\n   //    supportFormats.forEach((format) => {\n   //       if (!result || !result.isValid()) result = moment(string, format);\n   //    });\n\n   //    return result;\n   // }\n\n   exportValue(value) {\n      return value ? this.AB.rules.toDateFormat(value, {\n         format: \"YYYY-MM-DD\",\n      }) : \"\";\n      // return this.convertToMoment(value).format(\"YYYY-MM-DD\");\n   }\n\n   dateToString(dateFormat, dateData) {\n      if (dateData && dateData.toString) return dateData.toString();\n      else return \"\";\n   }\n};\n\n// Transition Code:\n// revert to static RegEx once babel-loader is working locally.\nmodule.exports.RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2}$\";\n","/*\n * ABFieldDateTime\n *\n * An ABFieldDateTime defines a datetime field type.\n *\n */\n\nconst ABFieldDateCore = require(\"./ABFieldDateCore\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldDateDefaults = {\n   key: \"datetime\",\n   // unique key to reference this specific DataField\n\n   description: \"Pick one from date & time.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"clock-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'clock-o'  to\n   // reference 'clock-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Date & Time\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"datetime\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"datetime\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   timeFormat: 2, // 1 (Ignore time), 2, 3\n   defaultTime: 1, // 1 (None), 2 (Current Time), 3 (Specific Time)\n   defaultTimeValue: null, // {Date}\n};\n\nmodule.exports = class ABFieldDateTimeCore extends ABFieldDateCore {\n   constructor(values, object) {\n      super(values, object, ABFieldDateDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldDateDefaults;\n   }\n\n   static defaultValues() {\n      const baseDefault = super.defaultValues();\n      return Object.assign(baseDefault, defaultValues);\n   }\n\n   // TODO: current webpack install fails here without babel-loader,\n   // so swtich this to old JS method of Static Values (see bottom)\n   // static RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$\";\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.timeFormat = parseInt(this.settings.timeFormat);\n      this.settings.defaultTime = parseInt(this.settings.defaultTime);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] != null) return;\n\n      super.defaultValue(values);\n\n      let dateResult;\n\n      // From default value of ABFieldDateCore\n      if (values[this.columnName]) {\n         dateResult = this.AB.rules.toDate(values[this.columnName]);\n         // const momentVal = this.convertToMoment(values[this.columnName]);\n         // if (momentVal.isValid()) {\n         //    dateResult = new Date(momentVal);\n         // }\n      }\n\n      // Set current time as default\n      if (this.settings.defaultTime == 2) {\n         const currDate = new Date();\n\n         if (dateResult == null) dateResult = new Date();\n\n         dateResult.setHours(currDate.getHours());\n         dateResult.setMinutes(currDate.getMinutes());\n         dateResult.setSeconds(currDate.getSeconds());\n         dateResult.setMilliseconds(currDate.getMilliseconds());\n      }\n      // Set specific time as default\n      else if (\n         this.settings.defaultTime == 3 &&\n         this.settings.defaultTimeValue\n      ) {\n         const defaultTime = new Date(this.settings.defaultTimeValue);\n\n         if (dateResult == null) dateResult = new Date();\n\n         dateResult.setHours(defaultTime.getHours());\n         dateResult.setMinutes(defaultTime.getMinutes());\n         dateResult.setSeconds(defaultTime.getSeconds());\n         dateResult.setMilliseconds(defaultTime.getMilliseconds());\n      }\n\n      // if no default value is set, then don't insert a value.\n      if (dateResult != null)\n         values[this.columnName] = dateResult.toISOString();\n   }\n\n   getFormat() {\n      const timeFormat = this.getTimeFormat();\n\n      this.settings = this.settings || {};\n\n      if (this.settings.dateFormat == 1) {\n         return timeFormat;\n      }\n\n      const dateFormat = super.getFormat();\n\n      return `${dateFormat} ${timeFormat}`;\n   }\n\n   format(rowData) {\n      const datetimeFormat = this.getFormat();\n      const d = this.dataValue(rowData);\n      const dateObj = this.AB.rules.toDate(d);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n\n      return webix.Date.dateToStr(datetimeFormat)(dateObj);\n   }\n\n   getTimeFormat() {\n      this.settings = this.settings || {};\n      switch (this.settings.timeFormat) {\n         case 2:\n            return \" %h:%i %A\";\n         case 3:\n            return \" %H:%i\";\n         default:\n            return \"\";\n      }\n   }\n\n   /**\n    * @method exportValue\n    * @param {Date} date\n    * @return {string}\n    */\n   exportValue(date) {\n      return date?.toISOString?.() ?? \"\";\n   }\n};\n\n// Transition Code:\n// revert to static RegEx once babel-loader is working locally.\nmodule.exports.RegEx =\n   \"^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$\";\n","/*\n * ABFieldEmail\n *\n * An ABFieldEmail defines a boolean field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldEmailDefaults = {\n   key: \"email\",\n   // unique key to reference this specific DataField\n\n   description: \"Email fields are used to store email addresses.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"envelope\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'envelope'  to\n   // reference 'fa-envelope'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Email\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: true,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   default: \"\",\n   defaultCheckbox: 0,\n};\n\nmodule.exports = class ABFieldEmailCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldEmailDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldEmailDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.default = values.settings.default || \"\";\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            values[this.columnName] = this.settings.default;\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      if (data[this.columnName]) {\n         const Reg = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n         let value = data[this.columnName];\n         value = String(value).toLowerCase();\n         if (!Reg.test(value)) {\n            validator.addError(this.columnName, \"Invalid email\");\n         }\n      }\n   }\n};\n","/*\n * ABFieldFile\n *\n * An ABFieldFile defines a File field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldFileDefaults = {\n   key: \"file\",\n   // unique key to reference this specific DataField\n\n   description: \"Attach a File to this object.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"file\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'file'  to\n   // reference 'fa-file'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"File Attachment\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   removeExistingData: 0,\n   fileSize: 0,\n   fileType: \"\",\n};\n\nmodule.exports = class ABFieldFileCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldFileDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldFileDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.fileSize = parseInt(this.settings.fileSize);\n      this.settings.limitFileSize = parseInt(this.settings.limitFileSize);\n      this.settings.limitFileType = parseInt(this.settings.limitFileType);\n      this.settings.removeExistingData = parseInt(\n         this.settings.removeExistingData\n      );\n   }\n\n   /**\n    * @method dataValue\n    * return the file data stored as part of this field.\n    *\n    * An ABFieldFile column contains a json structure that contains\n    *  .uuid : {string} a file uuid reference\n    *  .filename : {string} the name of the file that was uploaded.\n    *\n    * This will return the json object.\n    * @param {obj} values a key=>value hash of the current values.\n    * @return {obj} { uuid, filename }, or {} if empty.\n    */\n   dataValue(rowData) {\n      const propName = `${this.alias || this.object.name}.${this.columnName}`;\n\n      let result = rowData[this.columnName] || rowData[propName] || {};\n      if (typeof result == \"string\") {\n         try {\n            result = JSON.parse(result);\n         } catch (err) {\n            // ignore error\n         }\n      }\n\n      return result;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    *\n    * An ABFieldFile expects a json structure that contains\n    *  .uuid : {string} a file uuid reference\n    *  .filename : {string} the name of the file that was uploaded.\n    *\n    * For a default value, we return an empty json object: \"{}\"\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      values[this.columnName] = \"{}\";\n   }\n\n   format(rowData) {\n      let result = this.dataValue(rowData);\n      if (result) {\n         if (typeof result == \"string\") {\n            try {\n               result = JSON.parse(result);\n            } catch (err) {\n               // ignore error.\n            }\n         }\n\n         // return file name\n         return result ? result.filename || \"\" : \"\";\n      } else {\n         return \"\";\n      }\n   }\n\n   /**\n    * @method requestParam\n    * return the entry in the given input that relates to this field.\n    * @param {obj} allParameters  a key=>value hash of the inputs to parse.\n    * @return {obj} or undefined\n    */\n   requestParam(allParameters) {\n      const myParameter = super.requestParam(allParameters);\n\n      // if we have our default empty object, then remove the entry\n      // and let the DB insert a null value.\n      if (myParameter?.[this.columnName] == \"{}\") {\n         delete myParameter[this.columnName];\n      }\n\n      return myParameter;\n   }\n};\n","/*\n * ABFieldFormula\n *\n * An ABFieldFormula are used to run calculations on connected (child) records\n * and store the total of that calculation in the parent.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldFormulaDefaults = {\n   key: \"formula\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Perform a calculation by a formula type based upon existing values\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"circle-o-notch\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'circle-o-notch'  to\n   // reference 'fa-circle-o-notch'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Formula\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportQuery: (field) => {\n      const fieldLink = field.fieldLink;\n      if (fieldLink == null) return false;\n\n      // Not support calculate field in query\n      return fieldLink.key !== \"calculate\";\n   },\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   field: \"\", // id of ABField : NOTE - store our connect field to support when there are multi - linked columns\n   objectLink: \"\", // id of ABObject\n   fieldLink: \"\", // id of ABField\n   type: \"sum\", // \"sum\", \"average\", \"max\", \"min\", \"count\"\n   where: \"\",\n};\n\nmodule.exports = class ABFieldFormulaCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldFormulaDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // this field is read only\n      delete values[this.columnName];\n   }\n\n   /**\n    * @method format\n    * both calculate and format the data input based of user settings\n    * for this field.\n    * @param {obj} rowData\n    *        a key=>value hash of the current values.\n    * @param {boolean} reCalculate\n    *        a boolean that signals if we should force recalculation of values\n    */\n   format(rowData, reCalculate = false, isGrouped = false) {\n      const fieldLink = this.fieldLink;\n\n      const reformat = (numData) => {\n         // ABFieldCalculate does not need to .format again\n         if (!fieldLink || fieldLink.key == \"calculate\") {\n            return numData;\n         } else {\n            const rowDataFormat = {};\n            rowDataFormat[fieldLink.columnName] = numData;\n            return fieldLink.format(rowDataFormat);\n         }\n      };\n\n      // if data exists, then will not calculate on client side\n      // unless we pass reCalculate=true to force the recalculation\n      if (rowData[this.columnName] != null && !reCalculate && !isGrouped) {\n         // reformat data\n         return reformat(rowData[this.columnName]);\n      } else if (\n         rowData[this.columnName] != null &&\n         !reCalculate &&\n         isGrouped\n      ) {\n         return rowData[this.columnName];\n      }\n\n      if (!fieldLink) return 0;\n\n      const fieldBase = this.fieldBase();\n      if (!fieldBase) return 0;\n\n      let data =\n         rowData[fieldBase.relationName()] ||\n         rowData[fieldBase.columnName] ||\n         [];\n      if (!Array.isArray(data)) data = [data];\n\n      // Filter\n      if (\n         data &&\n         data.length &&\n         this.settings &&\n         this.settings.where &&\n         this.settings.where.rules &&\n         this.settings.where.rules.length\n      ) {\n         this.filterHelper.setValue(this.settings.where);\n         data = data.filter((item) => this.filterHelper.isValid(item));\n      }\n\n      let numberList = [];\n\n      // pull number from data\n      switch (fieldLink.key) {\n         case \"calculate\":\n            data.forEach((d) => {\n               numberList.push(parseFloat(fieldLink.format(d) || 0));\n            });\n            break;\n         case \"number\":\n            numberList = data.map((d) => d[fieldLink.columnName] || 0);\n            break;\n      }\n\n      let result = 0;\n\n      // get the decimal size of the numbers being calculated\n      const decimalSize = fieldLink.getDecimalSize();\n\n      // calculate\n      switch (this.settings.type) {\n         case \"sum\":\n            if (numberList.length > 0) {\n               // get power of 10 to the number of decimal places this number\n               // is formated to require\n               const multiplier = Math.pow(10, decimalSize);\n               // multiply values by muliplyier and add them to pervious value\n               // because in javascript adding number with decimals can cause issues\n               // ex: 9.11 + 222.11 = 231.22000000000003\n               let sum = 0;\n               numberList.forEach((val) => {\n                  sum += val * multiplier || 0;\n               });\n               // divide result by multiplier to get actual value\n               result = sum / multiplier;\n            }\n            break;\n\n         case \"average\":\n            if (numberList.length > 0) {\n               // get power of 10 to the number of decimal places this number\n               // is formated to require\n               const multiplier = Math.pow(10, decimalSize);\n               // multiply values by muliplyier and add them to pervious value\n               // because in javascript adding number with decimals can cause issues\n               // ex: 9.11 + 222.11 = 231.22000000000003\n               let sum = 0;\n               numberList.forEach((val) => {\n                  sum += val * multiplier || 0;\n               });\n               // divide result by multiplier to get actual value\n               // and divide by length to get the average\n               result = sum / multiplier / numberList.length;\n            }\n            break;\n\n         case \"max\":\n            result = Math.max(...numberList) || 0;\n            break;\n         case \"min\":\n            result = Math.min(...numberList) || 0;\n            break;\n         case \"count\":\n            result = numberList.length;\n            break;\n      }\n\n      rowData[this.columnName] = result;\n\n      // ABFieldCalculate does not need to .format again\n      if (fieldLink.key == \"calculate\") {\n         return result;\n      } else {\n         return reformat(result);\n      }\n   }\n\n   fieldBase() {\n      return this.object.fieldByID(this.settings.field);\n   }\n\n   get fieldLink() {\n      const obj = this.AB.objectByID(this.settings.object);\n      if (!obj) return null;\n\n      const field = obj.fieldByID(this.settings.fieldLink);\n      if (!field) return null;\n\n      return field;\n   }\n\n   get filterHelper() {\n      if (this._rowFilter == null) {\n         this._rowFilter = this.AB.filterComplexNew(`${this.id}_filterComplex`);\n\n         if (this.fieldLink && this.fieldLink.object) {\n            this._rowFilter.fieldsLoad(this.fieldLink.object.fields());\n            this._rowFilter.setValue(this.settings.where);\n         }\n      }\n\n      return this._rowFilter;\n   }\n};\n","/*\n * ABFieldImageCore\n *\n * An ABFieldImage defines a Image field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldImageDefaults = {\n   key: \"image\",\n   // unique key to reference this specific DataField\n\n   description: \"Attach an image to this object.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"file-image-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'file-image-o'  to\n   // reference 'fa-file-image-o'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Image Attachment\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   useWidth: 0,\n   imageWidth: \"\",\n   useHeight: 0,\n   imageHeight: \"\",\n   removeExistingData: 0,\n   useDefaultImage: false,\n   defaultImageUrl: \"\",\n};\n\nmodule.exports = class ABFieldImageCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldImageDefaults);\n\n      // NOTE: our Labels are ready here:\n      // if (\n      //    ABFieldImageDefaults.menuName == \"*Image Attachment\" &&\n      //    this.AB.Label\n      // ) {\n      //    const L = this.AB.Label();\n      //    ABFieldImageDefaults.menuName = L(\"Image Attachment\");\n      //    ABFieldImageDefaults.description = L(\"Attach an image to this object.\");\n      // }\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\t'useWidth':0,\n\t\t\t\t'imageWidth':'',\n\t\t\t\t'useHeight': 0,\n\t\t\t\t'imageHeight': '',\n\t\t\t\t'removeExistingData': 0\n\t\t\t}\n    \t}\n    \t*/\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldImageDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.useWidth = parseInt(this.settings.useWidth);\n      this.settings.useHeight = parseInt(this.settings.useHeight);\n      this.settings.imageWidth = parseInt(this.settings.imageWidth);\n      this.settings.imageHeight = parseInt(this.settings.imageHeight);\n      this.settings.useDefaultImage = parseInt(this.settings.useDefaultImage);\n      this.settings.removeExistingData = parseInt(\n         this.settings.removeExistingData\n      );\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n};\n","/*\n * ABFieldJson\n *\n * An ABFieldJson defines a JSON field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldJsonDefaults = {\n   key: \"json\",\n   // unique key to reference this specific DataField\n\n   description: \"JSON value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"font\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'font'  to\n   // reference 'fa-font'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"JSON\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"json\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"json\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {};\n\nmodule.exports = class ABFieldJsonCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldJsonDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldJsonDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // in the case of a JSON data type, we should NOT insert a \"\"\n      //\n      // values[this.columnName] = \"\";\n   }\n};\n","/*\n * ABFieldListCore\n *\n * An ABFieldList defines a select list field type.\n *\n */\n\n// const ABFieldSelectivity = require(\"../../platform/dataFields/ABFieldSelectivity\");\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldListDefaults = {\n   key: \"list\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Select list allows you to select predefined options below from a dropdown.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"th-list\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'th-list'  to\n   // reference 'fa-th-list'\n\n   isFilterable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Select list\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"char\",\n      \"varchar\",\n      \"tinytext\" /* \"text\", \"mediumtext\" */,\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   hasColors: (field) => {\n      if (field.settings.hasColors) {\n         return true;\n      } else {\n         return false;\n      }\n   },\n};\n\nconst defaultValues = {\n   isMultiple: 0,\n   // {bool}\n   // can multiple values be selected?\n\n   hasColors: 0,\n   // {bool}\n   // are we to display our values in colors?\n\n   options: [],\n   // {array}\n   // The options defined for this list:\n   // [ { id, text, hex, translations },...]\n   //    .id {string} a unique id for this value\n   //    .text {string} the displayed text of this value\n   //    .hex {string} a color hex definition for this value\n   //    .translations {obj} the multilingual definitions for this value.\n\n   default: \"none\",\n   multipleDefault: [],\n};\n\nmodule.exports = class ABFieldListCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldListDefaults);\n\n      this.pendingDeletions = [];\n      // {array}\n      // a list of pending option deletions that need to be processed\n      // when this is saved.\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldListDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // translate options list\n      if (this.settings.options && this.settings.options.length > 0) {\n         this.settings.options.forEach((opt) => {\n            this.translate(opt, opt, [\"text\"]);\n         });\n      }\n\n      this.settings.isMultiple = parseInt(this.settings.isMultiple);\n      this.settings.hasColors = parseInt(this.settings.hasColors);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      // Un-translate options list\n      obj.settings.options.forEach((opt) => {\n         this.unTranslate(opt, opt, [\"text\"]);\n      });\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Multiple select list\n      if (this.settings.isMultiple == true) {\n         let defaultVals = [];\n         this.settings.multipleDefault.forEach((def) => {\n            this.settings.options.forEach((opt) => {\n               if (opt.id == def.text) {\n                  defaultVals.push(opt);\n               }\n            });\n         });\n         values[this.columnName] = defaultVals || [];\n      }\n      // Single select list\n      else if (this.settings.default && this.settings.default != \"\") {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n\n   /**\n    * @method options\n    * Return an array of [{ id, text }] options defined by this field.\n    * @return {array}\n    */\n   options() {\n      return this.settings.options.map((opt) => {\n         return {\n            id: opt.id,\n            text: opt.text,\n            hex: opt.hex ? opt.hex : \"\",\n            translations: opt.translations ? opt.translations : \"\",\n         };\n      });\n   }\n\n   format(rowData, options = {}) {\n      let val = this.dataValue(rowData) || [];\n\n      if (typeof val == \"string\") {\n         try {\n            val = JSON.parse(val);\n         } catch (e) {\n            // continue regardless of error\n         }\n      }\n\n      // Convert to array\n      if (!Array.isArray(val)) val = [val];\n\n      const displayOpts = this.settings.options\n         .filter((opt) => val.filter((v) => (v.id || v) == opt.id).length > 0)\n         .map((opt) => {\n            let text = opt.text;\n            const languageCode = options.languageCode || \"en\";\n\n            // Pull text of option with specify language code\n            const optTran = (opt.translations || []).filter(\n               (o) => o.language_code == languageCode\n            )[0];\n            if (optTran) text = optTran.text;\n\n            return text;\n         });\n\n      return displayOpts.join(\", \");\n   }\n};\n","/*\n * ABFieldLongText\n *\n * An ABFieldLongText defines a LongText field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst MAX_CHAR_LENGTH = 5000;\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldLongTextDefaults = {\n   key: \"LongText\", // unique key to reference this specific DataField\n\n   description: \"Multiple lines of text\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"align-right\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'align-right'  to\n   // reference 'fa-align-right'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Long text\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"longtext\", \"mediumtext\", \"text\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   MAX_CHAR_LENGTH,\n   // {integer}\n   // The maximum length our ABFieldLongText can be.\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   default: \"\",\n   supportMultilingual: 0,\n};\n\nmodule.exports = class ABFieldLongText extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldLongTextDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n    \t}\n    \t*/\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldLongTextDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.default = values.settings.default || \"\";\n\n      // we're responsible for setting up our specific settings:\n      this.settings.supportMultilingual =\n         values.settings.supportMultilingual + \"\" ||\n         defaultValues.supportMultilingual;\n\n      // text to Int:\n      this.settings.supportMultilingual = parseInt(\n         this.settings.supportMultilingual\n      );\n\n      if (this.settings.supportMultilingual) {\n         if (this.object)\n            this.object.translate(this.settings, this.settings, [\"default\"]);\n      } else this.settings.default = values.settings.default || \"\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.settings.supportMultilingual)\n         if (this.object)\n            this.object.unTranslate(obj.settings, obj.settings, [\"default\"]);\n         else obj.settings.default = this.settings.default;\n\n      return obj;\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] == null) {\n         if (typeof this.settings.default == \"string\") {\n            values[this.columnName] = this.settings.default;\n         } else {\n            values[this.columnName] = \"\";\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (\n         data &&\n         data[this.columnName] &&\n         data[this.columnName].length > MAX_CHAR_LENGTH\n      ) {\n         validator.addError(\n            this.columnName,\n            `should NOT be longer than ${MAX_CHAR_LENGTH} characters`\n         );\n      }\n   }\n};\n","/*\n * ABFieldNumber\n *\n * An ABFieldNumber defines a Number field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldNumberDefaults = {\n   key: \"number\",\n   // unique key to reference this specific DataField\n\n   description: \"A Float or Integer Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"hashtag\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'hashtag'  to\n   // reference 'fa-hashtag'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Number\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: true,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   // 'allowRequired': 0,\n   default: \"\",\n   typeFormat: \"none\",\n   typeDecimals: \"none\",\n   typeDecimalPlaces: 0,\n   typeRounding: \"none\",\n   typeThousands: \"none\",\n   validation: 0,\n   validateMinimum: \"\",\n   validateMaximum: \"\",\n};\n\nlet L = null; //AB.Label();\n\nmodule.exports = class ABFieldNumberCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldNumberDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\t'allowRequired':0,\n\t\t\t\t'default':null,\n\t\t\t\t'typeFormat': 'none',\n\t\t\t\t'typeDecimals': 'none',\n\t\t\t\t'typeDecimalPlaces': 'none',\n\t\t\t\t'typeRounding' : 'none',\n\t\t\t\t'typeThousands': 'none',\n\t\t\t\t'validation':0,\n\t\t\t\t'validateMinimum':null,\n\t\t\t\t'validateMaximum':null\n\t\t\t}\n    \t}\n    \t*/\n      if (!L) {\n         L = this.AB.Label();\n      }\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldNumberDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static formatList(iL) {\n      if (iL && !L) L = iL;\n      return [\n         { id: \"none\", value: L(\"None\") },\n         {\n            id: \"dollar\",\n            value: L(\"$\"),\n            sign: \"$\",\n            position: \"prefix\",\n         },\n         {\n            id: \"yen\",\n            value: L(\"¥\"),\n            sign: \"¥\",\n            position: \"prefix\",\n         },\n         {\n            id: \"pound\",\n            value: L(\"£\"),\n            sign: \"£\",\n            position: \"prefix\",\n         },\n         {\n            id: \"euroBefore\",\n            value: L(\"€ (before)\"),\n            sign: \"€\",\n            position: \"prefix\",\n         },\n         {\n            id: \"euroAfter\",\n            value: L(\"€ (after)\"),\n            sign: \"€\",\n            position: \"postfix\",\n         },\n         {\n            id: \"percent\",\n            value: L(\"%\"),\n            sign: \"%\",\n            position: \"postfix\",\n         },\n      ];\n   }\n\n   static delimiterList() {\n      return [\n         { id: \"none\", value: L(\"None\") },\n         {\n            id: \"comma\",\n            value: L(\"Comma\"),\n            sign: \",\",\n         },\n         {\n            id: \"period\",\n            value: L(\"Period\"),\n            sign: \".\",\n         },\n         {\n            id: \"space\",\n            value: L(\"Space\"),\n            sign: \" \",\n         },\n      ];\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      // this.settings.allowRequired = parseInt(this.settings.allowRequired);\n      this.settings.validation = parseInt(this.settings.validation);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (this.settings.default != \"\") {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      // const L = this.AB.Label();\n\n      if (data[this.columnName] != null && data[this.columnName] != \"\") {\n         let value = data[this.columnName];\n\n         // if this is an integer:\n         if (this.settings.typeDecimals == \"none\") {\n            value = parseInt(value);\n         } else {\n            const places = parseInt(this.settings.typeDecimalPlaces) || 2;\n            value = parseFloat(parseFloat(value).toFixed(places));\n         }\n\n         const isNumeric = (n) => {\n            return !Number.isNaN(parseFloat(n)) && Number.isFinite(n);\n         };\n         if (!isNumeric(value)) {\n            validator.addError(this.columnName, L(\"invalid number\"));\n         }\n\n         // validate Minimum\n         if (\n            this.settings.validation == true &&\n            this.settings.validateMinimum != null &&\n            this.settings.validateMinimum > value\n         ) {\n            const errMessage = L(\"should be greater than {0}\", [\n               this.settings.validateMinimum,\n            ]);\n\n            validator.addError(this.columnName, errMessage);\n         }\n\n         // validate Maximum\n         if (\n            this.settings.validation == true &&\n            this.settings.validateMaximum != null &&\n            this.settings.validateMaximum < value\n         ) {\n            const errMessage = L(\"should be less than {0}\", [\n               this.settings.validateMaximum,\n            ]);\n\n            validator.addError(this.columnName, errMessage);\n         }\n      }\n   }\n\n   format(rowData) {\n      if (\n\t rowData?.[this.columnName] == null ||\n         (rowData[this.columnName] != 0 && rowData[this.columnName] == \"\")\n      )\n         return \"\";\n\n      let data = rowData[this.columnName] || 0;\n\n      if (typeof data == \"string\") {\n         data = data.replace(/,/g, \"\");\n      }\n\n      // Validate number\n      if (isNaN(parseFloat(data))) data = 0;\n\n      const formatSign = this.constructor\n         .formatList()\n         .filter((item) => item.id == this.settings.typeFormat)[0];\n      const decimalPlaces =\n         this.settings.typeDecimalPlaces != \"none\"\n            ? parseInt(this.settings.typeDecimalPlaces)\n            : 0;\n\n      let thousandsSign = this.constructor\n         .delimiterList()\n         .filter((item) => item.id == this.settings.typeThousands)[0];\n      let decimalSign = this.constructor\n         .delimiterList()\n         .filter((item) => item.id == this.settings.typeDecimals)[0];\n      let prefix = \"\";\n      let postfix = \"\";\n\n      if (formatSign && formatSign.sign) {\n         switch (formatSign.position) {\n            case \"prefix\":\n               prefix = formatSign.sign;\n               break;\n            case \"postfix\":\n               postfix = formatSign.sign;\n               break;\n         }\n      }\n\n      decimalSign = decimalSign.sign || \"\";\n      thousandsSign = thousandsSign.sign || \"\";\n\n      // round number\n      if (this.settings.typeRounding == \"roundDown\") {\n         const digit = Math.pow(10, decimalPlaces);\n         data = Math.floor(data * digit) / digit;\n      }\n\n      const number = this.formatNumber(data, {\n         groupDelimiter: thousandsSign,\n         groupSize: 3,\n         decimalDelimiter: decimalSign,\n         decimalSize: decimalPlaces,\n      });\n\n      return `${prefix} ${number} ${postfix}`;\n   }\n\n   formatNumber(data, options = {}) {\n      if (data === \"\" || data == null) return data;\n\n      data = parseFloat(data);\n      const negativeSign = data < 0 ? \"-\" : \"\";\n      data = Math.abs(data);\n\n      const dataStr = data.toString();\n      const integerStr = dataStr.split(\".\")[0];\n      const decimalStr = dataStr.split(\".\")[1];\n\n      let integerValue = \"\";\n\n      // Thousands digit sign\n      if (options.groupDelimiter) {\n         const step = 3;\n         let i = integerStr.length;\n\n         do {\n            i -= step;\n            const chunk =\n               i > 0\n                  ? integerStr.substr(i, step)\n                  : integerStr.substr(0, step + i);\n            integerValue = `${chunk}${\n               integerValue ? options.groupDelimiter + integerValue : \"\"\n            }`;\n         } while (i > 0);\n      } else {\n         integerValue = integerStr;\n      }\n\n      let result = \"\";\n\n      // Decimal\n      if (options.decimalDelimiter && options.decimalSize) {\n         result = `${negativeSign}${integerValue}${\n            decimalStr\n               ? options.decimalDelimiter +\n                 decimalStr.toString().substr(0, options.decimalSize)\n               : \"\"\n         }`;\n      }\n      // Integer\n      else {\n         result = `${negativeSign}${integerValue}`;\n      }\n\n      return result;\n   }\n\n   getDecimalSize() {\n      if (this.settings.typeDecimalPlaces != \"none\") {\n         return parseInt(this.settings.typeDecimalPlaces);\n      } else {\n         return 0;\n      }\n   }\n};\n","/*\n * ABFieldString\n *\n * An ABFieldString defines a string field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst MAX_CHAR_LENGTH = 255;\n\nconst ABFieldStringDefaults = {\n   key: \"string\",\n   // unique key to reference this specific DataField\n\n   description: \"short string value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"font\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'font'  to\n   // reference 'fa-font'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Single line text\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   MAX_CHAR_LENGTH,\n   // {integer}\n   // The maximum length our ABFieldString can be.\n};\n\nconst defaultValues = {\n   default: \"\",\n   supportMultilingual: 0,\n};\n\nmodule.exports = class ABFieldStringCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldStringDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n    \t}\n        */\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldStringDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // we're responsible for setting up our specific settings:\n      this.settings.default = values.settings.default || defaultValues.default;\n      this.settings.supportMultilingual =\n         values.settings.supportMultilingual + \"\" ||\n         defaultValues.supportMultilingual;\n\n      // text to Int:\n      this.settings.supportMultilingual = parseInt(\n         this.settings.supportMultilingual\n      );\n\n      if (this.settings.supportMultilingual) {\n         this.translate(this.settings, this.settings, [\"default\"]);\n      } else this.settings.default = values.settings.default || \"\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.settings.supportMultilingual) {\n         this.unTranslate(obj.settings, obj.settings, [\"default\"]);\n      } else obj.settings.default = this.settings.default;\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            if (this.settings.default.indexOf(\"{uuid}\") >= 0) {\n               values[this.columnName] = this.AB.uuid();\n            } else {\n               values[this.columnName] = this.settings.default;\n            }\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      const L = this.AB.Label();\n\n      if (\n         data &&\n         data[this.columnName] &&\n         data[this.columnName].length > MAX_CHAR_LENGTH\n      ) {\n         validator.addError(\n            this.columnName,\n            L(\"should NOT be longer than {0} characters\", [MAX_CHAR_LENGTH])\n         );\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n};\n","/*\n * ABFieldTextFormula\n *\n * An ABFieldTextFormula defines a TextFormula field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldTextFormulaDefaults = {\n   key: \"TextFormula\",\n   // unique key to reference this specific DataField\n\n   description: \"Text Formula\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"question\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'question'  to\n   // reference 'fa-question'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Text Formula\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   textFormula: \"\",\n   // {string} \"some text or text with formula ...\"\n   // This tells us what the formula we need to do with text included text string.\n   // if we don't have this, the old value which we filled out won't be cleared when we do \"Add field\" this type again.\n\n   // 'imageWidth':'',\n   // 'useHeight': 0,\n   // 'imageHeight': ''\n};\n\n/** Private methods */\n\n/**\n * @method setValueToFormula\n *\n * @param {ABOBject} object\n * @param {string} formulaString\n * @param {object} rowData\n */\n\nfunction setValueToFormula(object, formulaString, rowData) {\n   if (!formulaString) return;\n\n   const fieldRegExp = /{[^{}]+}/gm;\n   const matches_field_array = formulaString.match(fieldRegExp);\n   matches_field_array.forEach((element) => {\n      const columnName = element.replace(/{|}|\"/g, \"\");\n      object.fields().forEach((field) => {\n         if (field.columnName == columnName) {\n            if (field.key == \"AutoIndex\") {\n               //Check AutoIndex Field\n               const autoIndexVal = field.format(rowData) || 0;\n               formulaString = formulaString.replace(element, autoIndexVal);\n            } else if (field.key == \"calculate\") {\n               //Calculate Field\n               const calVal = `(${field.format(rowData) || 0})`;\n               formulaString = formulaString.replace(element, eval(calVal));\n            } else if (field.key == \"date\") {\n               formulaString = formulaString.replace(\n                  element,\n                  rowData[columnName]\n                     ? field.exportValue(rowData[columnName])\n                     : \"\"\n               );\n            } else {\n               formulaString = formulaString.replace(\n                  element,\n                  rowData[columnName] ? field.format(rowData) : \"\"\n               );\n            }\n         }\n      });\n   });\n\n   return formulaString;\n}\n\n/**\n * @method setBuildinValueToFormula\n *\n * @param {ABFactory} AB\n * @param {string} formulaString\n */\n\nfunction setBuildinValueToFormula(AB, formulaString) {\n   const buildInRegExp = /\\w+\\(.*?\\)/gm;\n   const matches_buildin_array = formulaString.match(buildInRegExp);\n   if (matches_buildin_array) {\n      const buildinList = getBuildInFunction();\n      matches_buildin_array.forEach((element) => {\n         const formula_array = element.split(/\\(|\\)/);\n         const isBracketInBracket =\n            formula_array.length > 2 && formula_array[2] != \"\";\n         const functionName = formula_array[0];\n         const parameters_array = formula_array[1].split(\",\");\n         let isMatch = false;\n         for (let i = 0; i < buildinList.length; i++) {\n            let resultParameters = element;\n            if (functionName == buildinList[i].id) {\n               if (parameters_array.length == buildinList[i].parameter_size) {\n                  switch (functionName) {\n                     case \"left\":\n                        resultParameters = getLeft(\n                           parameters_array[0],\n                           parameters_array[1]\n                        );\n                        break;\n                     case \"right\":\n                        resultParameters = getRight(\n                           parameters_array[0],\n                           parameters_array[1]\n                        );\n                        break;\n                     case \"mid\":\n                        resultParameters = getMid(\n                           parameters_array[0],\n                           parameters_array[1],\n                           parameters_array[2]\n                        );\n                        break;\n                     case \"trim\":\n                        resultParameters = getTrim(parameters_array[0]);\n                        break;\n                     case \"trimLeft\":\n                        resultParameters = getTrimLeft(parameters_array[0]);\n                        break;\n                     case \"trimRight\":\n                        resultParameters = getTrimRight(parameters_array[0]);\n                        break;\n                     case \"length\":\n                        resultParameters = getLength(parameters_array[0]);\n                        break;\n                     case \"regexReplace\":\n                        resultParameters = getRegExpReplace(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft(),\n                           parameters_array[2].trimLeft()\n                        );\n                        break;\n                     case \"extractRegex\":\n                        resultParameters = getExtractRegex(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft()\n                        );\n                        break;\n                     case \"replace\":\n                        resultParameters = getReplace(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft(),\n                           parameters_array[2].trimLeft()\n                        );\n                        break;\n                     case \"lower\":\n                        resultParameters = getLower(parameters_array[0]);\n                        break;\n                     case \"upper\":\n                        resultParameters = getUpper(parameters_array[0]);\n                        break;\n                     case \"capitalize\":\n                        resultParameters = getCapitalize(parameters_array[0]);\n                        break;\n                     case \"random\":\n                        resultParameters = getRandom(parameters_array[0]);\n                        break;\n                     case \"numberToWords\":\n                        resultParameters = getNumberToWords(\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"getDateDayOfWeekName\":\n                        if (isBracketInBracket) {\n                           element = element + \")\";\n                        }\n                        resultParameters = getDateDayOfWeekName(\n                           AB,\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"getDateMonthOfYearName\":\n                        if (isBracketInBracket) {\n                           element = element + \")\";\n                        }\n                        resultParameters = getDateMonthOfYearName(\n                           AB,\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"formatDate\":\n                        resultParameters = getFormatDate(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft()\n                        );\n                        break;\n                     default:\n                        break;\n                  }\n                  isMatch = true;\n                  formulaString = formulaString.replace(\n                     element,\n                     resultParameters\n                  );\n                  return;\n               } else {\n                  resultParameters = functionName + \"(Bad Parameter)\";\n                  formulaString = formulaString.replace(\n                     element,\n                     resultParameters\n                  );\n               }\n            }\n         }\n      });\n   }\n   return formulaString;\n}\n\nfunction getBuildInFunction() {\n   const functionList = [\n      {\n         id: \"left\",\n         value: \"left({COLUMN_NAME}, 1)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"right\",\n         value: \"right({COLUMN_NAME}, 1)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"mid\",\n         value: \"mid({COLUMN_NAME}, 1, 1)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"trim\",\n         value: \"trim({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"trimLeft\",\n         value: \"trimLeft({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"trimRight\",\n         value: \"trimRight({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"length\",\n         value: \"length({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"regexReplace\",\n         value: \"regexReplace({COLUMN_NAME}, [*], REPLACE_VALUE)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"extractRegex\",\n         value: \"extractRegex({COLUMN_NAME}, [*])\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"replace\",\n         value: \"replace({COLUMN_NAME}, SEARCH_VALUE, REPLACE_VALUE)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"lower\",\n         value: \"lower({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"upper\",\n         value: \"upper({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"capitalize\",\n         value: \"capitalize({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      { id: \"random\", value: \"random(1)\", type: \"build-in\", parameter_size: 1 },\n      {\n         id: \"numberToWords\",\n         value: \"numberToWords({NUMBER_COLUMN} or 012...)\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"getDateDayOfWeekName\",\n         value: \"getDateDayOfWeekName({DATE_COLUMN})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"getDateMonthOfYearName\",\n         value: \"getDateMonthOfYearName({DATE_COLUMN})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"formatDate\",\n         value: \"formatDate({DATE_COLUMN}, OUTPUT_FORMAT)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n   ];\n   return functionList;\n}\n\nfunction getLeft(string, endPosition) {\n   return string.substring(0, parseInt(endPosition));\n}\n\nfunction getRight(string, endposition) {\n   const reverseStr = reverseString(string).substring(0, parseInt(endposition));\n   return reverseString(reverseStr);\n}\n\nfunction reverseString(string) {\n   return string.split(\" \").reverse().join(\" \");\n}\n\nfunction getMid(string, startPosition, length) {\n   if (string.length < startPosition) return \"mid(Bad Parameter)\";\n   return string.substring(\n      parseInt(startPosition),\n      parseInt(startPosition) + parseInt(length)\n   );\n}\n\nfunction getTrim(string) {\n   return string.trim();\n}\n\nfunction getTrimLeft(string) {\n   return string.trimLeft();\n}\n\nfunction getTrimRight(string) {\n   return string.trimRight();\n}\n\nfunction getLength(string) {\n   return string.length;\n}\n\nfunction getRegExpReplace(string, regexp, replaceString) {\n   return string.replace(regexp, replaceString);\n}\n\nfunction getExtractRegex(string, regexp) {\n   const extractResult = string.match(regexp);\n   if (Array.isArray(extractResult)) {\n      return extractResult[0];\n   }\n   return extractResult;\n}\n\nfunction getReplace(string, searchValue, replaceValue) {\n   return string.replace(searchValue, replaceValue);\n}\n\nfunction getLower(string) {\n   return string.toLowerCase();\n}\n\nfunction getUpper(string) {\n   return string.toUpperCase();\n}\n\nfunction getCapitalize(string) {\n   return string\n      .toLowerCase()\n      .split(\" \")\n      .map((s) => s.charAt(0).toUpperCase() + s.substring(1))\n      .join(\" \");\n}\n\nfunction getRandom(max) {\n   return Math.floor(Math.random() * (max + 1));\n}\n\nfunction getNumberToWords(number) {\n   const string = number.trim(\",\").toString();\n\n   let units,\n      tens,\n      scales,\n      start,\n      end,\n      chunks,\n      chunksLen,\n      chunk,\n      ints,\n      i,\n      word,\n      words;\n\n   const and = \"\";\n\n   /* Is number zero? */\n   if (parseInt(string) === 0) {\n      return \"zero\";\n   }\n\n   /* Array of units as words */\n   units = [\n      \"\",\n      \"one\",\n      \"two\",\n      \"three\",\n      \"four\",\n      \"five\",\n      \"six\",\n      \"seven\",\n      \"eight\",\n      \"nine\",\n      \"ten\",\n      \"eleven\",\n      \"twelve\",\n      \"thirteen\",\n      \"fourteen\",\n      \"fifteen\",\n      \"sixteen\",\n      \"seventeen\",\n      \"eighteen\",\n      \"nineteen\",\n   ];\n\n   /* Array of tens as words */\n   tens = [\n      \"\",\n      \"\",\n      \"twenty\",\n      \"thirty\",\n      \"forty\",\n      \"fifty\",\n      \"sixty\",\n      \"seventy\",\n      \"eighty\",\n      \"ninety\",\n   ];\n\n   /* Array of scales as words */\n   scales = [\n      \"\",\n      \"thousand\",\n      \"million\",\n      \"billion\",\n      \"trillion\",\n      \"quadrillion\",\n      \"quintillion\",\n      \"sextillion\",\n      \"septillion\",\n      \"octillion\",\n      \"nonillion\",\n      \"decillion\",\n      \"undecillion\",\n      \"duodecillion\",\n      \"tredecillion\",\n      \"quatttuor-decillion\",\n      \"quindecillion\",\n      \"sexdecillion\",\n      \"septen-decillion\",\n      \"octodecillion\",\n      \"novemdecillion\",\n      \"vigintillion\",\n      \"centillion\",\n   ];\n\n   /* Split user arguemnt into 3 digit chunks from right to left */\n   start = string.length;\n   chunks = [];\n   while (start > 0) {\n      end = start;\n      chunks.push(string.slice((start = Math.max(0, start - 3)), end));\n   }\n\n   /* Check if function has enough scale words to be able to stringify the user argument */\n   chunksLen = chunks.length;\n   if (chunksLen > scales.length) {\n      return \"\";\n   }\n\n   /* Stringify each integer in each chunk */\n   words = [];\n   for (i = 0; i < chunksLen; i++) {\n      chunk = parseInt(chunks[i]);\n\n      if (chunk) {\n         /* Split chunk into array of individual integers */\n         ints = chunks[i].split(\"\").reverse().map(parseFloat);\n\n         /* If tens integer is 1, i.e. 10, then add 10 to units integer */\n         if (ints[1] === 1) {\n            ints[0] += 10;\n         }\n\n         /* Add scale word if chunk is not zero and array item exists */\n         if ((word = scales[i])) {\n            words.push(word);\n         }\n\n         /* Add unit word if array item exists */\n         if ((word = units[ints[0]])) {\n            words.push(word);\n         }\n\n         /* Add tens word if array item exists */\n         if ((word = tens[ints[1]])) {\n            words.push(word);\n         }\n\n         /* Add 'and' string after units or tens integer if: */\n         if (ints[0] || ints[1]) {\n            /* Chunk has a hundreds integer or chunk is the first of multiple chunks */\n            if (ints[2] || (!i && chunksLen)) {\n               words.push(and);\n            }\n         }\n\n         /* Add hundreds word if array item exists */\n         if ((word = units[ints[2]])) {\n            words.push(word + \" hundred\");\n         }\n      }\n   }\n\n   return words.reverse().join(\" \");\n}\n\nfunction getDateDayOfWeekName(AB, date) {\n   // const localizeDT = moment(date);\n   // localizeDT.locale(AD.lang.currentLanguage);\n   // return localizeDT.format(\"dddd\");\n\n   return AB.rules.toDateFormat(date, {\n      format: \"dddd\",\n      localeCode: AB.Account.language(),\n   });\n}\n\nfunction getDateMonthOfYearName(AB, date) {\n   // const localizeDT = moment(date);\n   // localizeDT.locale(AD.lang.currentLanguage);\n   // return localizeDT.format(\"MMMM\");\n\n   return AB.rules.toDateFormat(date, {\n      format: \"MMMM\",\n      localeCode: AB.Account.language(),\n   });\n}\n\nfunction getFormatDate(date, format) {\n   const dt = new Date(date);\n   return dt.toString(format);\n}\n\nmodule.exports = class ABFieldTextFormulaCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldTextFormulaDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\ttextDefault: 'string',\n\t\t\t\tsupportMultilingual: true/false\n\t\t\t}\n    \t}\n    \t*/\n\n      // // text to Int:\n      // this.settings.supportMultilingual = parseInt(this.settings.supportMultilingual);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldTextFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static getBuildInFunction() {\n      return getBuildInFunction();\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default value\n         // values[this.columnName] = this.settings.DEFAULT_VALUE;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      validator = super.isValid();\n\n      // validator.addError(this.columnName, L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      // return this.settings.supportMultilingual == 1;\n      return false;\n   }\n\n   format(rowData) {\n      try {\n         if (!this.settings.textFormula) return \"\";\n\n         let resultFormula = this.settings.textFormula;\n\n         //Set Field value first\n         resultFormula = setValueToFormula(this.object, resultFormula, rowData);\n\n         //then Check Build-in Function\n         resultFormula = setBuildinValueToFormula(this.AB, resultFormula);\n\n         return resultFormula;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n\n//// NOTE: if you need a unique [edit_type] by your returned config.editor above:\n// webix.editors = {\n//   \"[edit_type]\": {\n//     focus: function () {...}\n//     getValue: function () {...},\n//     setValue: function (value) {...},\n//     render: function () {...}\n//   }\n// };\n\n//// NOTE: if you need a unique [sort_type] by your returned config.sort above:\n// webix.DataStore.prototype.sorting.as.[sort_type] = function(a,b){\n//     return a > b ? 1 : -1;\n// }\n","/*\n * ABFieldTreeCore\n *\n * An ABFieldTree defines a select list field type.\n *\n */\n\nconst ABFieldSelectivity = require(\"../../platform/dataFields/ABFieldSelectivity\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldTreeDefaults = {\n   key: \"tree\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Data tree allows you to build a hierarchical set of selectable data. (ex: Categories and sub-categories)\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"sitemap\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'sitemap'  to\n   // reference 'fa-sitemap'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Data Tree\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   options: [],\n};\n\nmodule.exports = class ABFieldTreeCore extends ABFieldSelectivity {\n   constructor(values, object) {\n      super(values, object, ABFieldTreeDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldTreeDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // translate options list\n      if (this.settings.options && this.settings.options.length > 0) {\n         this.settings.options.forEach((opt) => {\n            this.translate(opt, opt, [\"text\"]);\n         });\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      // Un-translate options list\n      if (obj.settings.options && obj.settings.options.length > 0) {\n         obj.settings.options.forEach((opt) => {\n            this.unTranslate(opt, opt, [\"text\"]);\n         });\n      }\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {}\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n};\n","/*\n * ABFieldUser\n *\n * An ABFieldUser defines a user field type.\n *\n */\n\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldUserDefaults = {\n   key: \"user\",\n   // unique key to reference this specific DataField\n\n   description: \"Add users to a record.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"user-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'user-o'  to\n   // reference 'fa-user-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"User\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   USERNAME_FIELD_ID: \"5760560b-c078-47ca-98bf-e18ac492a561\",\n   // {string} .uuid\n   // the ABField.id of the SiteUser.username field.  This is what other\n   // objects will link to in their ABFieldUser connections.\n};\n\nconst defaultValues = {\n   editable: 1,\n   isMultiple: 0,\n   isCurrentUser: 0,\n   isShowProfileImage: 0,\n   isShowUsername: 1,\n};\n\nmodule.exports = class ABFieldUserCore extends ABFieldConnect {\n   constructor(values, object) {\n      super(values, object, ABFieldUserDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldUserDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.editable = parseInt(this.settings.editable);\n      this.settings.isMultiple = parseInt(this.settings.isMultiple);\n      this.settings.isCurrentUser = parseInt(this.settings.isCurrentUser);\n      this.settings.isShowProfileImage = parseInt(\n         this.settings.isShowProfileImage\n      );\n      this.settings.isShowUsername = parseInt(this.settings.isShowUsername);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   format(rowData) {\n      let val = this.dataValue(rowData) || [];\n\n      if (val && !Array.isArray(val)) val = [val];\n      if (!val) val = [];\n\n      return val.map((v) => v.username || v).join(\", \");\n   }\n};\n","/**\n * ABProcessLane\n * manages the lanes in a Process Diagram.\n *\n * Lanes manage users in the system, and provide a way to lookup a SiteUser.\n */\nconst ABProcessParticipant = require(\"../../platform/process/ABProcessParticipant\");\n\nconst ABProcessLaneDefaults = {\n   type: \"process.lane\",\n   // {string} .type\n   // unique key to reference this specific object\n\n   // icon: \"key\"\n   // {string} .icon\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n};\n\nmodule.exports = class ABProcessLaneCore extends ABProcessParticipant {\n   constructor(attributes, process, AB) {\n      super(attributes, process, AB);\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n   }\n\n   static defaults() {\n      return ABProcessLaneDefaults;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      this.type = attributes.type || ABProcessLaneDefaults.type;\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   // toObj() {\n   //     // default label value\n   //     if (!this.label && this.name && this.name != \"\") {\n   //         this.label = this.name;\n   //     }\n\n   //     // untranslate this object:\n   //     var data = super.toObj();\n\n   //     var fieldsToSave = [\n   //         \"id\",\n   //         \"name\",\n   //         \"type\",\n   //         \"processID\",\n   //         \"diagramID\",\n   //         \"where\"\n   //     ];\n   //     fieldsToSave.forEach((f) => {\n   //         data[f] = this[f];\n   //     });\n\n   //     return data;\n   // }\n};\n","/**\n * ABProcessParticipant\n * manages the participant lanes in a Process Diagram.\n *\n * Participants manage users in the system, and provide a way to lookup a SiteUser.\n */\nconst ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABProcessParticipantDefaults = {\n   type: \"process.participant\",\n   // {string} .type\n   // unique key to reference this specific object\n\n   // icon: \"key\" // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n};\n\nmodule.exports = class ABProcessParticipantCore extends ABMLClass {\n   constructor(attributes, process, AB) {\n      super([\"label\"], AB);\n\n      this.process = process;\n      if (!this.processID) {\n         this.processID = process.id;\n      }\n\n      this.fromValues(attributes);\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n   }\n\n   static defaults() {\n      return ABProcessParticipantDefaults;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      // These Values are needed By ABDefinition:\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || ABProcessParticipantDefaults.type;\n      this.key = attributes.key || ABProcessParticipantDefaults.type;\n\n      // Process Values:\n      this.processID = attributes.processID || null;\n      this.diagramID = attributes.diagramID || \"?diagramID?\";\n      this.laneIDs = attributes.laneIDs || [];\n      this.stashed = false;\n      if (attributes.stashed && attributes.stashed != \"\") {\n         this.stashed = attributes.stashed;\n      }\n\n      function validChecker(attribute) {\n         return typeof attribute != \"undefined\" && attribute != null;\n      }\n\n      this.useRole = 0;\n      if (validChecker(attributes.useRole)) {\n         this.useRole = parseInt(attributes.useRole);\n      }\n\n      this.role = 0;\n      if (validChecker(attributes.role)) {\n         this.role = attributes.role;\n      }\n\n      this.useAccount = 0;\n      if (validChecker(attributes.useAccount)) {\n         this.useAccount = parseInt(attributes.useAccount);\n      }\n\n      this.account = 0;\n      if (validChecker(attributes.account)) {\n         this.account = attributes.account;\n      }\n\n      this.useField = 0;\n      if (validChecker(attributes.useField)) {\n         this.useField = parseInt(attributes.useField);\n      }\n\n      this.userField = [];\n      if (validChecker(attributes.userField)) {\n         this.userField = attributes.userField;\n      }\n\n      // depreciated\n      this.fields = [];\n      if (validChecker(attributes.fields)) {\n         this.fields = attributes.fields;\n      }\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label && this.name && this.name != \"\") {\n         this.label = this.name;\n      }\n\n      // untranslate this object:\n      var data = super.toObj();\n\n      var fieldsToSave = [\n         \"id\",\n         \"name\",\n         \"type\",\n         \"processID\",\n         \"diagramID\",\n         \"laneIDs\",\n         \"where\",\n         \"useRole\",\n         \"role\",\n         \"useAccount\",\n         \"account\",\n         \"useField\",\n         \"userField\",\n         \"fields\",\n         \"stashed\",\n      ];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   /**\n    * @method onProcessReady()\n    * perform any tasks/checks necessary after the parent Process is\n    * setup and ready.\n    */\n   onProcessReady() {}\n};\n","/*\n * ABProcessTaskManager\n *\n * An interface for managing the different ABProcessTasks in AppBuilder.\n *\n */\n\n/*\n * Tasks\n * A name => ABProcessElement hash of the different ABProcessElements available.\n */\nvar Tasks = {};\n\n/*\n * DEFINITIONTYPES\n * a hash of BPMN:Element.type to Default values\n * for each of our Process Objects.\n *\n * NOTE: For Tasks, the key should be target.type,\n * for Triggers or End elements, the key should be\n * the target.eventDefinitionType\n */\nvar DEFINITIONTYPES = {};\n\nvar AllProcessElements = [\n   require(\"../../platform/process/tasks/ABProcessEnd\"),\n   require(\"../../platform/process/tasks/ABProcessGatewayExclusive\"),\n   require(\"../../platform/process/tasks/ABProcessTaskEmail\"),\n   require(\"../../platform/process/tasks/ABProcessTaskService\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingBatchProcessing\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingFPClose\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingFPYearClose\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingJEArchive\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceCalculate\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceInsertRecord\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceQuery\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceGetResetPasswordUrl\"),\n   require(\"../../platform/process/tasks/ABProcessTaskSubProcess\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUser\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUserApproval\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUserExternal\"),\n   require(\"../../platform/process/tasks/ABProcessTrigger\"),\n   require(\"../../platform/process/tasks/ABProcessTriggerLifecycle\"),\n   require(\"../../platform/process/tasks/ABProcessTriggerTimer\"),\n];\n\nAllProcessElements.forEach((ELEMENT) => {\n   Tasks[ELEMENT.defaults().key] = ELEMENT;\n\n   switch (ELEMENT.defaults().category) {\n      case \"start\":\n      case \"end\":\n         DEFINITIONTYPES[\n            ELEMENT.DiagramReplace().target.eventDefinitionType\n         ] = ELEMENT.defaults();\n         break;\n\n      case \"gateway\":\n      case \"task\":\n         DEFINITIONTYPES[\n            ELEMENT.DiagramReplace().target.type\n         ] = ELEMENT.defaults();\n         break;\n   }\n});\n\nmodule.exports = {\n   /*\n    * @function allTasks\n    * return all the currently defined ABProcessTasks in an array.\n    * @return [{ABProcessTask},...]\n    */\n   allTasks: function () {\n      var tasks = [];\n      for (var t in Tasks) {\n         tasks.push(Tasks[t]);\n      }\n      return tasks;\n   },\n\n   /*\n    * @function newTask\n    * return an instance of an ABProcessTask based upon the values.type value.\n    * @return {ABProcessTask}\n    */\n   newTask: function (values, process, AB) {\n      if (values.key) {\n         return new Tasks[values.key](values, process, AB);\n      } else {\n         //// TODO: what to do here?\n      }\n   },\n\n   DiagramReplaceDefinitionsForType: function (type) {\n      var definitions = AllProcessElements.filter((e) => {\n         return e.defaults().category == type;\n      }).map((e) => {\n         return e.DiagramReplace();\n      });\n      return definitions;\n   },\n\n   StartEvents: function () {\n      return this.DiagramReplaceDefinitionsForType(\"start\");\n   },\n\n   Gateways: function () {\n      return this.DiagramReplaceDefinitionsForType(\"gateway\");\n   },\n\n   Tasks: function () {\n      return this.DiagramReplaceDefinitionsForType(\"task\");\n   },\n\n   EndEvents: function () {\n      return this.DiagramReplaceDefinitionsForType(\"end\");\n   },\n\n   definitionForElement: function (element) {\n      // pull the key from the embedded .eventDefinition\n      // if there is one\n      var key = null;\n      if (element.businessObject.eventDefinitions) {\n         var def = element.businessObject.eventDefinitions[0];\n         if (def) {\n            key = def.$type;\n         }\n      }\n\n      // if not, then just use the base .type\n      if (!key) {\n         key = element.type;\n      }\n\n      return DEFINITIONTYPES[key];\n   },\n};\n\n","var ABMLClass = require(\"../../../platform/ABMLClass\");\n\nmodule.exports = class ABProcessTaskCore extends ABMLClass {\n   constructor(attributes, process, AB, defaultValues) {\n      super([\"label\"], AB);\n\n      this.defaults = defaultValues || { key: \"core\", icon: \"core\" };\n      // {obj} .defaults\n      // a value hash of default values for an ABProcessTask\n      // NOTE: needs to be set before .fromValues()\n\n      this.fromValues(attributes);\n\n      this.process = process;\n      if (!this.processID) {\n         this.processID = process.id;\n      }\n      // {ABProcess} .process\n      // The parent ABProcess this process element is a part of.\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n      this.state = null;\n   }\n\n   ///\n   /// Static Methods\n   ///\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      // ABDefinition Related fields:\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || \"process.task.unknown\";\n\n      // ABProcess related fields:\n      this.key = attributes.key || this.defaults.key || \"?key?\";\n      this.processID = attributes.processID || null;\n      this.diagramID = attributes.diagramID || \"?diagramID?\";\n      this.laneDiagramID = attributes.laneDiagramID || \"?laneID?\";\n      // laneDiagramID : connects to the parent object that defines any\n      //      default User information for the Task.  In our case, it\n      //      might be a {ABProcessParticipant} object, or a {ABProcessLane}\n      //      object.  by default, a diagram's Participant obj doesn't define\n      //      any lanes, and therefore can provide that info.  Once a lane\n      //      is added, however, an object is assigned to it, and the\n      //      Lane will provide that info.\n\n      // initialize any defined settings\n      if (this.defaults && this.defaults.settings) {\n         this.defaults.settings.forEach((s) => {\n            if (typeof attributes[s] == \"undefined\") this[s] = null;\n            else this[s] = attributes[s];\n         });\n      }\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label && this.name && this.name != \"\") {\n         this.label = this.name;\n      }\n\n      // untranslate this object:\n      var data = super.toObj();\n\n      var fieldsToSave = [\n         \"id\",\n         \"name\",\n         \"type\",\n         \"processID\",\n         \"diagramID\",\n         \"laneDiagramID\",\n         \"key\",\n      ];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      // save any defined settings\n      if (this.defaults && this.defaults.settings) {\n         this.defaults.settings.forEach((s) => {\n            data[s] = this[s];\n         });\n      }\n\n      return data;\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * errorConfig()\n    * Respond with an error when expected configuration parameters do not\n    * pull data.\n    * @param {obj} instance\n    *        the instance data of this task\n    * @param {string} msg\n    *        the display message for this error.\n    * @param {array[string]} fields\n    *        an array of parameter keys that should be included in the error\n    *        for additional information.\n    * @return {Promise.reject(error)}\n    */\n   errorConfig(instance, msg, fields = []) {\n      this.log(instance, msg);\n      var error = new Error(`${this.type}: ${msg}`);\n      var info = { task: this };\n      if (!Array.isArray(fields)) fields = [fields];\n      fields.forEach((field) => {\n         info[field] = this[field];\n      });\n      this.AB.notify.builder(error, info);\n      return Promise.reject(error);\n   }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context\n    *        the context data of the process instance\n    * @param {obj} defaults\n    *        any values to include from our child classes\n    * @param {obj} val\n    *        any values to override the default state\n    */\n   initState(context, defaults, val) {\n      defaults = defaults || {};\n      if (!val) {\n         val = defaults;\n         defaults = {};\n\n         // in this case, then auto initi blank instanceValues:\n         if (this.defaults && this.defaults.instanceValues) {\n            this.defaults.instanceValues.forEach((v) => {\n               defaults[v] = null;\n            });\n         }\n      }\n\n      context.taskState = context.taskState || {};\n\n      // don't overwrite your settings if they already exist:\n      if (!context.taskState[this.diagramID]) {\n         context.taskState[this.diagramID] = {\n            initialized: true,\n            status: \"initialized\",\n         };\n         for (var d in defaults) {\n            context.taskState[this.diagramID][d] = defaults[d];\n         }\n         for (var v in val) {\n            context.taskState[this.diagramID][v] = val[v];\n         }\n      }\n   }\n\n   /*\n    * @function isEndTask\n    * return true if the current type of task is an End task. False otherwise.\n    * @return {bool}\n    */\n   isEndTask() {\n      return false;\n   }\n\n   /**\n    * log()\n    * enter a log in the current process instance\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {...} ...allArgs the remaining parameters sent to the log\n    */\n   log(instance, ...allArgs) {\n      var text = `${this.diagramID} : ${\n         this.name ? this.name : this.key\n      } : ${allArgs.join(\" \")}`;\n      instance.log.push(text);\n   }\n\n   /**\n    * myLane()\n    * return the ABProcessParticipant | ABProcessLane element we are\n    * in.\n    * @return {ABProcessParticipant|ABProcessLane}\n    */\n   myLane() {\n      return this.process.elementForDiagramID(this.laneDiagramID);\n   }\n\n   /**\n    * myState()\n    * return the current state values for this ABProcessTask\n    * @param {obj} instance  the current ABProcessInstance\n    * @return {obj}\n    */\n   myState(instance) {\n      return instance.context.taskState[this.diagramID];\n   }\n\n   /**\n    * nextTasks()\n    * follow the current instance diagram and return the next task(s)\n    * after this task.\n    * @param {obj} instance  the current ABProcessInstance\n    * @return {array}  [ABProcessTask, ...] or {null} if an error\n    */\n   nextTasks(instance) {\n      var nextTasks = [];\n\n      var myDiagramObj = instance.hashDiagramObjects[this.diagramID];\n      if (!myDiagramObj) {\n         var error = new Error(\n            `Configuration Error: Did not find my definition for dID[${this.diagramID}]`\n         );\n         this.onError(instance, error);\n         return null;\n      }\n\n      // myDiagramObj :\n      // {\n      //     \"bpmn2:outgoing\": [{\"_text\": \"SequenceFlow_00fbxm3\"} ...],\n      //     \"_attributes\": {id: \"StartEvent_1\"},\n      //     \"_type\": \"start\"\n      // }\n\n      // find my possible exits:\n      var exitFlows = myDiagramObj[\"bpmn2:outgoing\"];\n      if (!exitFlows) {\n         var error = new Error(\n            `Configuration Error: Did not find any outgoing flows for dID[${this.diagramID}]`\n         );\n         this.AB.notify.builder(error, { task: this });\n         this.onError(instance, error);\n         return null;\n      }\n\n      if (!Array.isArray(exitFlows)) {\n         exitFlows = [exitFlows];\n      }\n\n      var tasksFromFlow = (flow) => {\n         // follow a flow and grab each of it's exit tasks\n         // place them into nextTasks[];\n\n         var flowObj = instance.hashDiagramObjects[flow[\"_text\"]];\n         if (!flowObj) return;\n\n         var targetIDs = flowObj[\"_attributes\"][\"targetRef\"];\n         if (!targetIDs) return;\n\n         if (!Array.isArray(targetIDs)) {\n            targetIDs = [targetIDs];\n         }\n\n         targetIDs.forEach((tid) => {\n            var targetTask = this.process.elementForDiagramID(tid);\n            if (targetTask) {\n               if (nextTasks) {\n                  nextTasks.push(targetTask);\n               }\n            } else {\n               var error = new Error(\n                  `Configuration Error: No ProcessTask instance for diagramID[${tid}]`\n               );\n               this.AB.notify.builder(error, { task: this });\n               this.onError(instance, error);\n               nextTasks = null;\n            }\n         });\n      };\n\n      exitFlows.forEach((f) => {\n         tasksFromFlow(f);\n      });\n\n      return nextTasks;\n   }\n\n   /**\n    * onError()\n    * perform the following actions (log it) on an error.\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {Error} error\n    */\n   onError(instance, error) {\n      if (error) {\n         var text = `${error.toString()}`;\n         this.log(instance, text);\n      }\n      var myState = this.myState(instance);\n      myState.status = \"error\";\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can request from other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return null;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      return null;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that this element\n    * can provide to other ProcessElements.\n    * @return {array} | null\n    */\n   processDataObjects() {\n      return null;\n   }\n\n   /**\n    * hashProcessDataValues()\n    * return a hash of live Process Data Values\n    * @param {obj} instance\n    * @return {array} | null\n    */\n   hashProcessDataValues(instance) {\n      var listDataFields = this.process.processDataFields(this);\n      var currentProcessValues = {};\n      listDataFields.forEach((f) => {\n         currentProcessValues[f.key] = this.process.processData(this, [\n            instance,\n            f.key,\n         ]);\n      });\n      return currentProcessValues;\n   }\n\n   /**\n    * reset()\n    * prepare this task to run again if it was already completed.\n    *\n    * This might happen in a process where a loop is formed and tasks\n    * are repeated until a certain outcome.\n    *\n    * @param {obj} instance  the current ABProcessInstance\n    */\n   reset(instance) {\n      // a task wants to run me.  Possibly again.\n      var myState = this.myState(instance);\n\n      // if I haven't setup my state (why?) then just\n      // do that again:\n      if (!myState) {\n         this.initState(instance.context);\n      } else {\n         // if I have already \"completed\" and we are being\n         // asked to run again (it's possible)\n         if (myState.status == \"completed\" || myState.status == \"error\") {\n            // remove my current state\n            delete instance.context.taskState[this.diagramID];\n\n            // store a new state in the context\n            this.initState(instance.context);\n\n            // remember our previous state\n            var newState = this.myState(instance);\n            newState._prevState = myState;\n            this.log(instance, \" Reset() called. Running again. \");\n         }\n      }\n   }\n\n   /**\n    * stateCompleted()\n    * mark this task has having completed.\n    * @param {obj} instance  the current ABProcessInstance\n    */\n   stateCompleted(instance) {\n      var myState = this.myState(instance);\n      myState.status = \"completed\";\n   }\n\n   /**\n    * stateUpdate()\n    * update my state values with the given values data\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {obj} values    the new state values\n    */\n   stateUpdate(instance, values) {\n      values = values || {};\n      var myState = this.myState(instance);\n      for (var v in values) {\n         myState[v] = values[v];\n      }\n   }\n\n   /**\n    * wantToDoSomething()\n    * determine if this task still has something to do.\n    * @param {obj} instance  the instance data of the process we are working on\n    * @return {bool} true if there is still pending actions\n    */\n   wantToDoSomething(instance) {\n      var state = this.myState(instance);\n      if (state) {\n         return state.status != \"completed\" && state.status != \"error\";\n      } else {\n         // my state wasn't defined?\n         console.warn(\n            \"ABProcessTaskCore:wantToDoSomething(): called without having initialized our state first.\",\n            instance\n         );\n         // initialize our state and try again\n         this.initState(instance.context);\n         return this.wantToDoSomething(instance);\n      }\n   }\n\n   /**\n    * @method onProcessReady()\n    * Perform any setup actions after the parent process has indicated it is \"ready\"\n    */\n   onProcessReady() {}\n\n   get startElements() {\n      let startElems =\n         this.process.elements(\n            (elem) =>\n               elem && elem.defaults && elem.defaults.category === \"start\"\n         ) || [];\n      return startElems;\n   }\n\n   get previousElements() {\n      return this.process.connectionPreviousTask(this);\n   }\n\n   get objectOfStartElement() {\n      const startElem = this.startElements[0];\n      if (!startElem) return null;\n\n      return this.AB.objectByID(startElem.objectID);\n   }\n\n   get objectOfPrevElement() {\n      let prevElem = this.previousElements[0];\n      if (!prevElem) return null;\n\n      let objectID;\n      switch (prevElem.type) {\n         case \"process.task.service.query\":\n            objectID = prevElem.qlObj ? prevElem.qlObj.objectID : null;\n            break;\n         case \"process.task.service.insertRecord\":\n         default:\n            objectID = prevElem.objectID;\n            break;\n      }\n\n      return this.AB.objectByID(objectID);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskEndDefaults = {\n   category: \"end\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"stop\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to\n   // reference 'fa-user'\n\n   key: \"End\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTaskEndCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.end\";\n      super(attributes, process, AB, ABProcessTaskEndDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskEndDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Terminate End Event\",\n         actionName: \"replace-with-terminate-end\",\n         className: \"bpmn-icon-end-event-terminate\",\n         target: {\n            type: \"bpmn:EndEvent\",\n            eventDefinitionType: \"bpmn:TerminateEventDefinition\",\n         },\n      };\n   }\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // An End Event doesn't perform any other actions\n   //         // than to signal it has successfully completed.\n   //         // But it provides no Additional Tasks to work on.\n   //         // for testing:\n   //         this.stateCompleted(instance);\n   //         this.log(instance, \"End Event Reached\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         triggered: false,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n\n   /*\n    * @function isEndTask\n    * return true if the current type of task is an End task. False otherwise.\n    * @return {bool}\n    */\n   isEndTask() {\n      return true;\n   }\n\n   /**\n    * nextTasks()\n    * return the next tasks to be run after this task is complete.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve([])\n    */\n   nextTasks(instance) {\n      // I'm an End Event.  There are no nextTasks()\n      return [];\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessGatewayExclusiveDefaults = {\n   category: \"gateway\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to\n   // reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"GatewayExclusive\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"conditions\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessGatewayExclusiveCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.gateway.exclusive\";\n      super(attributes, process, AB, ABProcessGatewayExclusiveDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessGatewayExclusiveDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Exclusive Gateway\",\n         actionName: \"replace-with-exclusive-gateway\",\n         className: \"bpmn-icon-gateway-xor\",\n         target: {\n            type: \"bpmn:ExclusiveGateway\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      this.conditions = this.conditions || {};\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        ABProcessGatewayExclusiveDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            userFormID: null,\n            userFormResponse: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.userFormResponse`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskEmailDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"to\",\n      \"from\",\n      \"subject\",\n      \"message\",\n      \"toCustom\",\n      \"fromCustom\",\n      \"toUsers\",\n      \"fromUsers\",\n      \"toCustomFields\",\n      \"fromCustomFields\",\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"email\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"Email\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTaskEmailCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.email\";\n      super(attributes, process, AB, ABProcessTaskEmailDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskEmailDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Send Task\",\n         actionName: \"replace-with-send-task\",\n         className: \"bpmn-icon-send\",\n         target: {\n            type: \"bpmn:SendTask\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      ABProcessTaskEmailDefaults.fields.forEach((f) => {\n         this[f] = attributes[f];\n      });\n   }\n\n   /**\n    * onProcessReady()\n    * Perform our warnings checks once the parent Process is ready\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      ABProcessTaskEmailDefaults.fields.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // for testing:\n   //         var myState = this.myState(instance);\n   //         myState.status = \"completed\";\n   //         this.log(instance, \"Email Sent successfully\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         to: [],\n         from: [],\n         subject: this.subject,\n         message: this.message,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingBatchProcessingDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingBatchProcessing\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"objectBatch\",\n      \"processBatchValue\",\n      \"fieldBatchEntries\",\n      \"fieldBatchFinancialPeriod\",\n      \"objectJE\",\n      \"fieldJEAccount\",\n      \"fieldJERC\",\n      \"fieldJEStatus\",\n      \"fieldJEStatusComplete\",\n      \"objectBR\",\n      \"fieldBRFinancialPeriod\",\n      \"fieldBRAccount\",\n      \"fieldBRRC\",\n      \"fieldBREntries\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingBatchProcessingCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.batchProcessing\";\n      super(attributes, process, AB, AccountingBatchProcessingDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingBatchProcessingDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingFPCloseDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingFPClose\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processFPValue\",\n      \"objectFP\",\n      \"objectGL\",\n      \"objectAcc\",\n      \"fieldFPStart\",\n      \"fieldFPOpen\",\n      \"fieldFPStatus\",\n      \"fieldFPActive\",\n      \"fieldGLStarting\",\n      \"fieldGLRunning\",\n      \"fieldGLAccount\",\n      \"fieldGLRc\",\n      \"fieldGLDebit\",\n      \"fieldGLCredit\",\n      \"fieldAccType\",\n      \"fieldAccAsset\",\n      \"fieldAccExpense\",\n      \"fieldAccLiabilities\",\n      \"fieldAccEquity\",\n      \"fieldAccIncome\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingFPCloseCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.fpClose\";\n      super(attributes, process, AB, AccountingFPCloseDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingFPCloseDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingFPYearCloseDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingFPYearClose\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processFPYearValue\",\n      \"objectFPYear\",\n      \"objectFPMonth\",\n      \"objectGL\",\n      \"objectAccount\",\n      \"valueFundBalances\",\n      \"valueNetIncome\",\n      \"fieldFPYearStart\",\n      \"fieldFPYearEnd\",\n      \"fieldFPYearStatus\",\n      \"fieldFPYearActive\",\n      \"fieldFPMonthStart\",\n      \"fieldFPMonthEnd\",\n      \"fieldGLStartBalance\",\n      \"fieldGLRunningBalance\",\n      \"fieldGLrc\",\n      \"fieldAccNumber\",\n      \"fieldAccType\",\n      \"fieldAccTypeIncome\",\n      \"fieldAccTypeExpense\",\n      \"fieldAccTypeEquity\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingFPYearCloseCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.fpYearClose\";\n      super(attributes, process, AB, AccountingFPYearCloseDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingFPYearCloseDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet AccountingJEArchiveDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"archive\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingJEArchive\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processBatchValue\",\n      \"objectBatch\",\n      \"objectBalance\",\n      \"objectJE\",\n      \"objectJEArchive\",\n\n      \"fieldBatchFiscalMonth\",\n      \"fieldJeAccount\",\n      \"fieldJeRC\",\n      \"fieldJeArchiveBalance\",\n      \"fieldBrFiscalMonth\",\n      \"fieldBrAccount\",\n      \"fieldBrRC\",\n      \"fieldsMatch\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingJEArchiveCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.jeArchive\";\n      super(attributes, process, AB, AccountingJEArchiveDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingJEArchiveDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet CalculateDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"calculator\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"Calculate\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"formulaText\"],\n};\n\nmodule.exports = class CalculateTaskCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.calculate\";\n      super(attributes, process, AB, CalculateDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return CalculateDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      const label = `${this.label}->Value`;\n      // this is a calculate task, so let's include a fake ABFieldNumber\n      // for the .field value, so other tasks that limit their operations\n      // to fields can use this as a number\n      if (!this._fakeNum) {\n         this._fakeObj = this.AB.objectNew({});\n         this._fakeNum = this.AB.fieldNew(\n            { key: \"number\", name: label, label },\n            this._fakeObj\n         );\n      }\n      return {\n         key: `${this.id}.value`,\n         label,\n         field: this._fakeNum,\n      };\n   }\n};\n","/**\n * ABProcessTaskServiceCore\n *\n * This defines the base Service Task element that can be placed on a BPMN\n * diagram.  In our system, we will let the designer choose a sub class\n * to make active for this element.\n *\n * Currently a ServiceTask performs a dedicated operation on the server.\n *  - performing a query, looking up data, etc...\n *\n */\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskServiceDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskService\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskServiceCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service\";\n      super(attributes, process, AB, ABProcessTaskServiceDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskServiceDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Service Task\",\n         actionName: \"replace-with-service-task\",\n         className: \"bpmn-icon-service\",\n         target: {\n            type: \"bpmn:ServiceTask\",\n         },\n      };\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        ABProcessTaskServiceDefaults.fields.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        ABProcessTaskServiceDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            userFormID: null,\n            userFormResponse: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.userFormResponse`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABProcessTaskGetResetPasswordUrlDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"GetResetPasswordUrl\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"email\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskGetResetPasswordUrlCore extends (\n   ABProcessElement\n) {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.getResetPasswordUrl\";\n      super(attributes, process, AB, ABProcessTaskGetResetPasswordUrlDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskGetResetPasswordUrlDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return {\n         key: `${this.id}.url`,\n         label: `${this.label}->URL`,\n      };\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet InsertRecordDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"InsertRecord\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"objectID\",\n      \"fieldValues\",\n      \"isRepeat\",\n      \"repeatMode\",\n      \"repeatColumn\",\n   ],\n};\n\nmodule.exports = class InsertRecordCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.insertRecord\";\n      super(attributes, process, AB, InsertRecordDefaults);\n\n      this.results = [];\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return InsertRecordDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.isRepeat = JSON.parse(attributes.isRepeat || false);\n   }\n\n   get startElement() {\n      let startElem = null;\n      let currProcess = this.process;\n\n      // Find the start (trigger) task\n      while (!startElem && currProcess) {\n         startElem = currProcess.elements(\n            (elem) => elem?.defaults?.category == \"start\"\n         )[0];\n\n         // If .currProcess is a sub task, then go to the parent process for get the start task\n         currProcess = currProcess.process;\n      }\n\n      return startElem;\n   }\n\n   get previousElement() {\n      return this.process.connectionPreviousTask(this)[0];\n   }\n\n   get objectOfStartElement() {\n      let startElem = this.startElement;\n      if (!startElem) return null;\n\n      let startElemObj = this.AB.objectByID(startElem.objectID);\n      return startElemObj;\n   }\n\n   get objectOfPrevElement() {\n      let prevElem = this.previousElement;\n      if (!prevElem) return null;\n\n      let objectID;\n      switch (prevElem.type) {\n         case \"process.task.service.query\":\n            objectID = prevElem.qlObj ? prevElem.qlObj.objectID : null;\n            break;\n         case \"process.task.service.insertRecord\":\n         default:\n            objectID = prevElem.objectID;\n            break;\n      }\n\n      return this.AB.objectByID(objectID);\n   }\n\n   get fieldRepeat() {\n      let obj = this.objectOfStartElement;\n      if (!obj) return null;\n\n      return obj.fields((f) => f.id == this.repeatColumn)[0];\n   }\n\n   /**\n    * processDataFields()\n    * return a single available data field from this element\n    * this will be the record inserted by this task\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return [\n         {\n            key: `${this.id}.[PK]`,\n            label: `${this.label}-> Inserted record [PK]`,\n            field: {\n               id: this.id,\n               object: { id: this.objectID },\n               key: \"InsertedRecord\",\n               columnName: \"uuid\",\n            },\n            object: this.objectID,\n            set: true,\n         },\n      ];\n   }\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n     toObj() {\n         var data = super.toObj();\n \n         AccountingBatchProcessingDefaults.settings.forEach((f) => {\n             data[f] = this[f];\n         });\n \n         return data;\n     }\n     */\n\n   ////\n   //// Process Instance Methods\n   ////\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABQLManager = require(\"../../../platform/ql/ABQLManager.js\");\n\nconst ABProcessTaskServiceQueryDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskServiceQuery\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"qlObj\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskServiceQueryCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.query\";\n      super(attributes, process, AB, ABProcessTaskServiceQueryDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskServiceQueryDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      // Before we make instances of qlObj:\n      this._datasources = [];\n\n      // comvert our qlObj into an ABQLxxx instance.\n      if (this.qlObj) {\n         this.qlObj = ABQLManager.fromAttributes(this.qlObj, this, this.AB);\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      const data = super.toObj();\n\n      // convert qlObj into obj format:\n      if (this.qlObj) data.qlObj = this.qlObj.toObj();\n\n      return data;\n   }\n\n   registerDatasource(obj) {\n      this._datasources.push(obj);\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        const myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      // in this Task, we can return the Response to the UserForm\n      let fields = null;\n\n      if (this._datasources.length > 0) {\n         fields = [];\n\n         this._datasources.forEach((s) => {\n            const param = s.processDataField(this.id, this.label);\n\n            if (param) {\n               fields.push(param);\n            }\n         });\n      }\n\n      return fields;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      const parts = key.split(\".\");\n\n      if (parts[0] === this.id) {\n         const myState = this.myState(instance);\n\n         return myState[parts[1]];\n      }\n\n      return null;\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet SubProcessDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"object-group\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"SubProcess\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"isEnable\",\n      \"parameterId\",\n      \"connectionAttrs\",\n      \"elementIDs\",\n      \"loopType\",\n   ],\n};\n\nconst NOSPAM = {\n   /*message : bool */\n};\n// prevent sending the same message over and over.\n\nmodule.exports = class SubProcessCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.subProcess\";\n      super(attributes, process, AB, SubProcessDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return SubProcessDefaults;\n   }\n\n   static DiagramReplace() {\n      // taken from \"bpmn-js/lib/features/replace/ReplaceOptions\"\n      return {\n         label: \"Sub Process\",\n         actionName: \"replace-with-subprocess\",\n         className: \"bpmn-icon-subprocess-expanded\",\n         target: {\n            type: \"bpmn:SubProcess\",\n            isExpanded: true,\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      // Convert string to boolean\n      this.isEnable = this.isEnable == null ? true : JSON.parse(this.isEnable);\n\n      let currElements = this._elements || {};\n      this._unknownElementIDs = [];\n      this._elements = {};\n      (attributes.elementIDs || []).forEach((eID) => {\n         let ele = this.AB.processElementNew(eID, this);\n         if (ele) {\n            this._elements[eID] = ele;\n         } else {\n            // current eID isn't one of our definitions yet, so might be\n            // a temporary .diagramID from an unsaved task:\n            if (currElements[eID]) {\n               this._elements[eID] = currElements[eID];\n            } else {\n               this._unknownElementIDs.push(eID);\n            }\n         }\n      });\n\n      this._unknownElementIDs.forEach((eID) => {\n         let key = `Process[${this.processID}] Task[${this.label}] is referencing an unknown element id:[${eID}]`;\n         if (!NOSPAM[key]) {\n            let err = new Error(key);\n            this.AB.notify.builder(err, { processTask: this.id, eID });\n            NOSPAM[key] = true;\n         }\n      });\n\n      this._connections = attributes.connectionAttrs || {};\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      let data = super.toObj();\n\n      data.elementIDs = [];\n      for (let e in this._elements) {\n         data.elementIDs.push(this._elements[e].id);\n      }\n\n      data.connectionAttrs = this._connections;\n\n      return data;\n   }\n\n   /**\n    * @method processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataFields(currElement) {\n      if (this.parameterId == null) return [];\n\n      // only call processDataFields once, filter it to get the different queries\n      let dataFieldsAll = this.process.processDataFields(this) || [];\n\n      // get the subtask data\n      let dataFieldOpt = dataFieldsAll.filter(\n         (opt) => opt.key === this.parameterId\n      )[0];\n\n      // get data from insert tasks\n      let dataFieldsAllInserted = dataFieldsAll.filter(\n         (opt) => (opt?.field?.key ?? opt?.field) === \"InsertedRecord\"\n      );\n\n      if (dataFieldOpt == null) return [];\n\n      let result = [];\n\n      // Connect field type\n      if (\n         dataFieldOpt.field &&\n         dataFieldOpt.field.key == \"connectObject\" &&\n         dataFieldOpt.field.datasourceLink &&\n         dataFieldOpt.field.datasourceLink.fields\n      ) {\n         result.push({\n            key: `${this.id}.uuid`,\n            label: `${this.label}->Repeat Data.ID`,\n            object: dataFieldOpt.field.datasourceLink,\n         });\n\n         dataFieldOpt.field.datasourceLink.fields().forEach((f) => {\n            result.push({\n               key: `${this.id}.${f.id}`,\n               label: `${this.label}->Repeat Data.${f.label}`,\n               field: f,\n               object: f.object,\n            });\n         });\n      }\n      // Other field types\n      else {\n         result.push({\n            key: dataFieldOpt.field\n               ? `${this.id}.${dataFieldOpt.field.id}`\n               : `${this.id}.subProcess`,\n            label: `${this.label}->Repeat Data`,\n            field: dataFieldOpt.field,\n            object: dataFieldOpt.object,\n         });\n      }\n\n      dataFieldsAllInserted.forEach((opt) => {\n         result.push({\n            key: `${opt.key || opt.id}`,\n            label: `Parent Process Data->${opt.label}`,\n            field: opt.field,\n            object: opt.object,\n         });\n      });\n\n      // Get any tasks that exist inside the subprocess\n      let previousFields = this.process.processDataFields.call(\n         this,\n         currElement\n      );\n      if (previousFields && previousFields.length > 0) {\n         result = result.concat(previousFields);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method processData()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processData(currElement, params) {\n      let instance = params[0];\n      let key = params[1];\n      let data;\n\n      if (instance && key?.startsWith?.(this.id)) {\n         let fieldId = key.split(\".\")[1];\n         let myState = this.myState(instance);\n         let stateData = myState ? myState.data : null;\n         data = stateData;\n\n         if (stateData && fieldId) {\n            let dataFieldOpt = (\n               this.process.processDataFields(this) || []\n            ).filter((opt) => opt.key == this.parameterId)[0];\n\n            if (dataFieldOpt?.field?.key == \"connectObject\") {\n               if (!Array.isArray(stateData)) stateData = [stateData];\n\n               // Extract data\n               data = stateData.map((item) => {\n                  if (fieldId == \"uuid\" || fieldId == \"id\") {\n                     return item.uuid || item.id || item;\n                  } else if (dataFieldOpt.field.datasourceLink) {\n                     let returnField = dataFieldOpt.field.datasourceLink.fields(\n                        (f) => f.id == fieldId\n                     )[0];\n                     if (returnField) return item[returnField.columnName];\n                     else return item;\n                  }\n               });\n            }\n         }\n      }\n\n      // Filter none data items\n      if (Array.isArray(data)) data = data.filter((d) => d != null);\n\n      if (data == null || !data.length)\n         data = this.process.processData.call(this, currElement, params);\n\n      if (data == null || !data.length)\n         data = this.process.processData(this, params);\n\n      return data;\n   }\n\n   allPreviousTasks(...params) {\n      return this.process.allPreviousTasks.call(this, ...params);\n   }\n\n   allPreviousConnectionsForElement(...params) {\n      return this.process.allPreviousConnectionsForElement.call(\n         this,\n         ...params\n      );\n   }\n\n   allPreviousConnectionsForConnection(...params) {\n      return this.process.allPreviousConnectionsForConnection.call(\n         this,\n         ...params\n      );\n   }\n\n   //\n   // Diagram Elements\n   //\n\n   /**\n    * @method connections()\n    * return an array of connections that describe the relationships between\n    * our process elements.\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return [{SimpleConnectionObj}]\n    */\n   connections(fn) {\n      return this.process.connections.call(this, fn);\n   }\n\n   /**\n    * @method connectionForDiagramID()\n    * return the connection for the given diagram id\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionForDiagramID(dID) {\n      if (!dID) return;\n\n      return this.process.connectionForDiagramID.call(this, dID);\n   }\n\n   /**\n    * @method connectionsIncoming()\n    * return the connections that are entering this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsIncoming(dID) {\n      if (!dID) return;\n\n      return this.process.connectionsIncoming.call(this, dID);\n   }\n\n   /**\n    * @method connectionsOutgoing()\n    * return the connections that are leaving this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsOutgoing(dID) {\n      if (!dID) return;\n\n      return this.process.connectionsOutgoing.call(this, dID);\n   }\n\n   /**\n    * @method connectionRemove()\n    * remove the connection info for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionRemove(element) {\n      if (!element) return;\n\n      this.process.connectionRemove.call(this, element);\n   }\n\n   /**\n    * @method connectionSimplyElement()\n    * given a BPMN diagram element, return a simplified object that describes\n    * the connection between two elements.\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    * @return {SimpleConnectionObj}\n    *        .id : {string} diagram id of the connection element\n    *        .type : {string} the type of connection\n    *        .from : {string} the diagram id of the source element\n    *        .to : {string} the diagram id of the dest element\n    */\n   connectionSimplyElement(element) {\n      if (!element) return;\n\n      return this.process.connectionSimplyElement.call(this, element);\n   }\n\n   /**\n    * @method connectionUpsert()\n    * add or update the connection information for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionUpsert(element) {\n      if (!element) return;\n\n      this.process.connectionUpsert.call(this, element);\n   }\n\n   /**\n    * @method connectionPreviousTask()\n    * return the ABProcessElement(s) that was a previous Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionPreviousTask(currElement) {\n      if (!currElement) return;\n\n      return this.process.connectionPreviousTask.call(this, currElement);\n   }\n\n   /**\n    * @method elements()\n    * return an array of elements that match the given filter (or all elements\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABProcessTask, ABProcessParticipant, etc...]}\n    */\n   elements(fn = () => true) {\n      return this.process.elements.call(this, fn);\n   }\n\n   /**\n    * @method elementAdd()\n    * insert an element to be tracked by this process.\n    * @param {ABProcessElement} element\n    *        the full instance of an ABProcessElement to track.\n    */\n   elementAdd(element) {\n      if (!element) return;\n\n      this.process.elementAdd.call(this, element);\n   }\n\n   /**\n    * @method elementForDiagramID()\n    * return the object that is tied to the given xml diagram ID.\n    * @param {string} dID the diagram ID\n    * @return {ABProcess[OBJ]}\n    */\n   elementForDiagramID(dID) {\n      if (!dID) return null;\n\n      return this.process.elementForDiagramID.call(this, dID);\n   }\n\n   /**\n    * @method elementRemove()\n    * remove an element from being tracked by this process.\n    * @param {obj|ABProcessElement} def\n    *        a definition of, or full Object instance of the ABProcessElement\n    *        to remove.\n    */\n   elementRemove(def) {\n      if (!def) return;\n\n      this.process.elementRemove.call(this, def);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABFieldList = require(\"../../../platform/dataFields/ABFieldList.js\");\n\nvar ABProcessTaskApprovalDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [\"userFormID\", \"userFormResponse\"],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"Approval\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"who\", \"toUsers\", \"formBuilder\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskUserApprovalCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.user.approval\";\n      super(attributes, process, AB, ABProcessTaskApprovalDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskApprovalDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      function fixBoolean(obj) {\n         if (obj) {\n            Object.keys(obj).forEach((k) => {\n               if (obj[k] == \"false\") {\n                  obj[k] = false;\n               } else if (obj[k] == \"true\") {\n                  obj[k] = true;\n               } else if (typeof obj[k] == \"object\") {\n                  fixBoolean(obj[k]);\n               }\n            });\n         }\n      }\n      fixBoolean(this.formBuilder);\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   /*     \n    toObj() {\n        var data = super.toObj();\n\n        ABProcessTaskApprovalDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n*/\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {};\n        ABProcessTaskApprovalDefaults.instanceValues.forEach((v) => {\n            myDefaults[v] = null;\n        });\n\n        super.initState(context, myDefaults, val);\n    }\n*/\n\n   /*\n    * preProcessFormIOComponents()\n    * we need to parse the form.io components to ensure the proper columnName\n    * and labels are being used. We also will translate the columnNames at this\n    * point in the code\n    */\n   preProcessFormIOComponents() {\n      var fields = this.process.processDataFields(this);\n      if (fields && this.formBuilder && this.formBuilder.components) {\n         this.formBuilder.components.forEach((c) => {\n            if (c.abFieldID) {\n               fields.filter((entry) => {\n                  if (entry.field?.id == c.abFieldID) {\n                     c.label = entry.field.label;\n                     c.key = entry.key;\n                     if (c.data?.values && entry.field.settings.options) {\n                        var vals = [];\n                        entry.field.settings.options.forEach((opt) => {\n                           vals.push({\n                              label: opt.text,\n                              value: opt.id,\n                           });\n                        });\n                        c.data.values = vals;\n                     }\n                  }\n               });\n            } else if (c.components && c.components.length) {\n               c.key = c.path;\n               c.components.forEach((o) => {\n                  if (o.abFieldID) {\n                     // these are plucked conneted values\n                     // gather up all their fields to be used\n                     var pluck = fields.filter((f) => {\n                        return f.key == c.path;\n                     })[0];\n                     if (!pluck) return;\n                     pluck.object.fields().filter((entry) => {\n                        if (entry?.id == o.abFieldID) {\n                           o.label = entry.label;\n                           o.key = entry.columnName;\n                           if (o.data?.values && entry.settings.options) {\n                              var vals = [];\n                              entry.settings.options.forEach((opt) => {\n                                 vals.push({\n                                    label: opt.text,\n                                    value: opt.id,\n                                 });\n                              });\n                              o.data.values = vals;\n                           }\n                        }\n                     });\n                  }\n               });\n            }\n         });\n      }\n      return this.formBuilder;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      // we need to get the button events defined by the form.io formBuilder\n      var options = [];\n      this.formBuilder.components.forEach((comp) => {\n         if (comp.type == \"button\" && comp.action == \"event\" && comp.event) {\n            options.push({\n               id: comp.event,\n               text: comp.label,\n            });\n         }\n      });\n      // in this Task, we can return the Response to the UserForm\n      // The Response can be in the form of a List Field, with one or more\n      // return options.\n\n      var myID = this.diagramID;\n\n      // create an ABFieldList object:\n      // make sure the options follow what is currently defined for our\n      // responses:\n      var myObj = this.AB.objectNew({});\n      var listField = new ABFieldList(\n         {\n            id: `${myID}.userFormResponse`,\n            label: `${this.label}->Response`,\n            columnName: `${myID}.userFormResponse`,\n            settings: {\n               options: options,\n            },\n         },\n         myObj\n      );\n\n      return [\n         {\n            key: `${myID}.userFormResponse`,\n            label: `${this.label}->Response`,\n            field: listField,\n            object: null,\n         },\n      ];\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      if (key) {\n         var parts = key.split(\".\");\n         if (parts[0] == this.diagramID) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n         }\n      }\n      return null;\n   }\n};\n","/**\n * ABProcessTaskUserCore\n *\n * This defines the base User Task element that can be placed on a BPMN\n * diagram.  In our system, we will let the designer choose a sub class\n * to make active for this element.\n *\n * Currently a UserTask expects a human user to perform an action.  These\n * actions are in the possible forms:\n *  - confirm offline action\n *  - approve data\n *  - fill out a form\n *\n */\n\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskUserDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"user\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskUser\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskUserCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.user\";\n      super(attributes, process, AB, ABProcessTaskUserDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskUserDefaults;\n   }\n\n   static DiagramReplace() {\n      // taken from \"bpmn-js/lib/features/replace/ReplaceOptions\"\n      return {\n         label: \"User Task\",\n         actionName: \"replace-with-user-task\",\n         className: \"bpmn-icon-user\",\n         target: {\n            type: \"bpmn:UserTask\",\n         },\n      };\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // for testing:\n   //         var myState = this.myState(instance);\n   //         myState.status = \"completed\";\n   //         this.log(instance, \"Email Sent successfully\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         roles: [],\n         ui: null,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABProcessTaskUserExternalDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [\"userFormID\", \"userFormResponse\"],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"External\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"who\", \"toUsers\", \"url\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nconst settings = {\n   who: 0,\n   toUsers: null,\n   url: \"\",\n};\n\nmodule.exports = class ABProcessTaskUserExternalCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      for (const key in settings)\n         attributes[key] = attributes[key] ?? settings[key];\n      super(\n         Object.assign(\n            {\n               type: \"process.task.service.external\",\n            },\n            attributes\n         ),\n         process,\n         AB,\n         ABProcessTaskUserExternalDefaults\n      );\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskUserExternalDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return [\n         {\n            key: `${this.id}.userFormResponse`,\n            label: `${this.label}->Response`,\n         },\n      ];\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTriggerDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"key\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"Trigger\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTriggerCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"trigger\";\n      super(attributes, process, AB, ABProcessTriggerDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTriggerDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Signal Start Event\",\n         actionName: \"replace-with-signal-start\",\n         className: \"bpmn-icon-start-event-signal\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"bpmn:SignalEventDefinition\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.triggerKey = attributes.triggerKey || \"triggerKey.??\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.triggerKey = this.triggerKey;\n\n      return data;\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTrigger = require(\"../../../platform/process/tasks/ABProcessTrigger.js\");\n\nvar ABProcessTaskTriggerLifecycleDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"objectID\",\n      \"lifecycleKey\" /* , \"triggerKey\" is tracked in ABProcessTrigger */,\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"key\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"TriggerLifecycle\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTriggerLifecycle extends ABProcessTrigger {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"trigger\";\n      super(attributes, process, AB, ABProcessTaskTriggerLifecycleDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskTriggerLifecycleDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Object Lifecycle Trigger\",\n         actionName: \"replace-with-signal-lifecycle-start\",\n         // type: {string} a unique key to reference this element\n         className: \"bpmn-icon-start-event-signal\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"ab:SignalLifecycle\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.objectID = attributes.objectID || \"objID.??\";\n      this.lifecycleKey = attributes.lifecycleKey || \"lifecycle.key??\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.objectID = this.objectID;\n      data.lifecycleKey = this.lifecycleKey;\n      return data;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      var fields = null;\n      if (this.objectID) {\n         fields = [];\n         var object = this.AB.objectByID(this.objectID);\n         if (object) {\n            var myID = this.diagramID;\n            object.fields().forEach((field) => {\n               fields.push({\n                  key: `${myID}.${field.id}`,\n                  label: `${this.label}->${object.label}->${field.label}`,\n                  field,\n                  object,\n               });\n            });\n            fields.push({\n               key: `${myID}.uuid`,\n               label: `${this.label}->${object.label}`,\n               field: null,\n               object,\n            });\n         } else {\n            // OK, so we have an this.objectID defined, but we can't find it.\n            // that's something we need to alert:\n            var error = new Error(\n               `ABProcessTriggerLifecycleCore.processDataFields():TaskID[${this.id}]: could not find referenced object by ID [${this.objectID}]`\n            );\n            this.AB.notify.builder(error, {\n               task: this.id,\n               objID: this.objectID,\n            });\n         }\n      }\n      return fields;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      var parts = key.split(\".\");\n      if (parts[0] == this.diagramID) {\n         var myState = this.myState(instance);\n         if (myState[\"data\"]) {\n            var object = this.AB.objectByID(this.objectID);\n            var field = object.fields((f) => {\n               return f.id == parts[1];\n            })[0];\n            if (field) {\n               if (parts[2]) {\n                  return field[parts[2]].call(field, myState[\"data\"]);\n               } else {\n                  // instance.context.data[field.column_name];\n                  // if field is \"calculate\" or \"TextFormula\" data is not stored\n                  // in data base and we need to run format method\n                  if ([\"calculate\", \"TextFormula\"].indexOf(field.key) != -1) {\n                     return field.format(myState[\"data\"]);\n                  } else if (\n                     field.key == \"connectObject\" ||\n                     field.key == \"user\"\n                  ) {\n                     return (\n                        myState[\"data\"][field.relationName()] ||\n                        myState[\"data\"][field.columnName]\n                     );\n                  } else {\n                     return myState[\"data\"][field.columnName];\n                  }\n               }\n            } else if (parts[1] == \"uuid\") {\n               return myState[\"data\"][\"uuid\"];\n            } else {\n               // parts[1] should be a field.id\n               var object = this.AB.objectByID(this.objectID);\n               var field = object.fields((f) => {\n                  return f.id == parts[1];\n               })[0];\n               if (field) {\n                  if (parts[2]) {\n                     return field[parts[2]].call(field, myState[\"data\"]);\n                  } else {\n                     // instance.context.data[field.column_name];\n                     return myState[\"data\"][field.columnName];\n                  }\n               }\n            }\n         }\n      }\n      return null;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that this element\n    * can provide to other ProcessElements.\n    * @return {array} | null\n    */\n   processDataObjects() {\n      var objects = null;\n      if (this.objectID) {\n         objects = [this.AB.objectByID(this.objectID)];\n      }\n      return objects;\n   }\n};\n","const ABProcessTrigger = require(\"../../../platform/process/tasks/ABProcessTrigger.js\");\n\nvar ABProcessTaskTriggerLifecycleDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"repeatEvery\",\n      \"repeatTime\",\n      \"repeatDaily\",\n      \"repeatWeekly\",\n      \"repeatMonthly\",\n      \"isEnabled\",\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"clock-o\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"TimerStartEvent\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   repeatEvery: \"daily\",\n   repeatTime: \"01:00\",\n   repeatDaily: \"day\",\n   repeatWeekly: \"FRI\",\n   repeatMonthly: \"last\",\n   isEnabled: true,\n};\n\nmodule.exports = class ABProcessTriggerTimer extends ABProcessTrigger {\n   constructor(attributes, process, application) {\n      attributes.type = attributes.type || \"trigger\";\n      super(\n         attributes,\n         process,\n         application,\n         ABProcessTaskTriggerLifecycleDefaults\n      );\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskTriggerLifecycleDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Timer Start Event\",\n         actionName: \"replace-with-signal-timer-start\",\n         // type: {string} a unique key to reference this element\n         className: \"bpmn-icon-start-event-timer\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"ab:SignalTriggerTimer\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.repeatEvery =\n         attributes.repeatEvery ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatEvery;\n\n      this.repeatDaily =\n         attributes.repeatDaily ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatDaily;\n\n      this.repeatWeekly =\n         attributes.repeatWeekly ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatWeekly;\n\n      this.repeatMonthly =\n         attributes.repeatMonthly ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatMonthly;\n\n      // Convert UTC to local time\n      if (attributes.repeatTime) {\n         let timeVals = attributes.repeatTime.split(\":\");\n         let currDate = new Date();\n         currDate.setUTCHours(timeVals[0]);\n         currDate.setUTCMinutes(timeVals[1]);\n         this.repeatTime = `${currDate.getHours()}:${currDate.getMinutes()}`;\n      } else {\n         this.repeatTime = ABProcessTaskTriggerLifecycleDefaults.repeatTime;\n      }\n\n      if (typeof attributes.isEnabled != \"undefined\") {\n         this.isEnabled = JSON.parse(attributes.isEnabled);\n      } else {\n         this.isEnabled = ABProcessTaskTriggerLifecycleDefaults.isEnabled;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.repeatEvery = this.repeatEvery;\n      data.repeatDaily = this.repeatDaily;\n      data.repeatWeekly = this.repeatWeekly;\n      data.repeatMonthly = this.repeatMonthly;\n\n      // Convert local time to UTC\n      data.repeatTime = this.repeatTime;\n      if (data.repeatTime && data.repeatTime instanceof Date) {\n         data.repeatTime = `${data.repeatTime.getUTCHours()}:${data.repeatTime.getMinutes()}`;\n      }\n\n      data.isEnabled = this.isEnabled;\n\n      return data;\n   }\n\n   getCronExpression() {\n      let timeVals = this.repeatTime.split(\":\");\n      let second = \"*\";\n      let minute = timeVals[1];\n      let hour = timeVals[0];\n      let day;\n      let month;\n      let dayWeek;\n      let year = \"*\";\n\n      switch (this.repeatEvery) {\n         case \"daily\":\n            day = \"*\";\n            month = \"*\";\n            dayWeek = this.repeatDaily == \"weekday\" ? \"1-5\" : \"*\";\n            break;\n         case \"weekly\":\n            day = \"*\";\n            month = \"*\";\n            dayWeek = this.repeatWeekly;\n            break;\n         case \"monthly\":\n            day = this.repeatMonthly;\n            month = \"*\";\n            dayWeek = \"*\";\n            break;\n      }\n\n      return `${second} ${minute} ${hour} ${day} ${month} ${dayWeek} ${year}`;\n   }\n};\n","/*\n * ABQL\n *\n * An ABQL defines the base class for our AB Query Language Objects.\n * These classes share a common way to\n *   - parse input strings for commands\n *\n *\n */\nvar ABEmitter = require(\"../../platform/ABEmitter\");\nclass ABQLCore extends ABEmitter {\n   constructor(attributes, parameterDefinitions, prevOP, task, AB) {\n      super();\n\n      // manage the incoming Parameter Definitions\n      if (!Array.isArray(parameterDefinitions)) {\n         parameterDefinitions = [parameterDefinitions];\n      }\n\n      this.parameterDefinitions = parameterDefinitions;\n\n      this.object = prevOP ? prevOP.object : null;\n      // {ABObject}\n      // The current {ABObject} the current Query Language Operation is associated\n      // with.\n\n      // if the previous Operation defined an .objectOut then our .object is THAT\n      // one.\n      if (prevOP && prevOP.objectOut) this.object = prevOP.objectOut;\n\n      this.prevOP = prevOP;\n      this.task = task;\n      // {ABProcessTaskxxx}\n      // This is running under a specific ABProcessTaskServiceQuery.  When\n      // searching for data from the Process, we must go through this.task\n      // to do so.\n\n      this.AB = AB;\n      this.next = null;\n\n      this.fromAttributes(attributes);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n   initObject(attributes) {}\n\n   fromAttributes(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n\n      // super.fromValues(attributes);\n      this.key = this.constructor.key ?? null;\n\n      // this.entryComplete = attributes.entryComplete || false;\n      this.params = attributes.params ?? {};\n      // {hash}\n      // The configuration values entered by the AppBuilder UI for this\n      // operation.\n\n      this.objectID = attributes.objectID || null;\n\n      // be sure to do a hard lookup if an objectID was saved:\n      if (this.objectID) this.object = this.objectLookup(this.objectID);\n\n      this.initObject(attributes);\n\n      // at least dump a warning here:\n      if (this.objectID && !this.object)\n         this.AB.notify.developer(\n            new Error(\n               `ABQLCore.fromAttributes(): unable to initialize ABObject [${this.objectID}]`\n            ),\n            {\n               attributes,\n               objectID: this.objectID,\n            }\n         );\n\n      if (attributes.next) {\n         let nextOP = null;\n\n         (this.NextQLOps ?? this.constructor.NextQLOps).forEach((OP) => {\n            if (OP.key === attributes.next.key) nextOP = OP;\n         });\n\n         if (nextOP) {\n            // exact match, so add next:\n            const qlOP = new nextOP(attributes.next, this, this.task, this.AB);\n\n            this.next = qlOP;\n         }\n      }\n   }\n\n   /**\n    * @method objectLookup()\n    * return a matching {ABObject} that is represented by the given id.\n    * NOTE: we will try to match on: our initial .objectID first, then\n    * the given objID.\n    * NOTE: this will match an object.id as well as object.label\n    * @param {string} objID\n    */\n   objectLookup(objID) {\n      return this.AB.objects((o) => {\n         const quotedLabel = `\"${o.label}\"`;\n\n         return (\n            // o.id === this.objectID ||\n            o.id === objID || quotedLabel.indexOf(objID) === 0\n         );\n      })[0];\n   }\n\n   /**\n    * @method availableProcessDataFieldsHash()\n    * return a { \"field.key\" => {processFieldDef} } hash of the currently\n    * available fields in the process.\n    * @return {obj}\n    */\n   availableProcessDataFieldsHash() {\n      const availableProcessDataFields =\n         this.task.process.processDataFields(this.task) ?? [];\n      const hashFieldIDs = {};\n\n      availableProcessDataFields.forEach((f) => {\n         if (f.field) {\n            hashFieldIDs[f.field.id] = f;\n         } else {\n            hashFieldIDs[f.key] = f;\n         }\n      });\n\n      return hashFieldIDs;\n   }\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {}\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABQL instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      const obj = {\n         key: this.constructor.key,\n         // entryComplete: this.entryComplete,\n         params: this.params,\n         // currQuery: this.currQuery,\n         // queryValid: this.queryValid,\n         objectID: this.object?.id ?? null,\n      };\n\n      if (this.next) {\n         obj.next = this.next.toObj();\n      }\n\n      return obj;\n   }\n}\n\nmodule.exports = ABQLCore;\n","/*\n * ABQLFindCore\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\nconst NextQLOps = require(\"./ABQLSet.js\");\n// {array} of {ABQLxxx} options\n// this is an array of what possible next Operations can come after an\n// ABQLFind task is complete.  In this case the {ABQLSet} operations come\n// next.  {ABQLSet} operations work on a Set|{Array} or data results.\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectConditions\",\n      name: \"cond\",\n   },\n];\n\nclass ABQLFindCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLFindCore.key = \"find\";\nABQLFindCore.label = \"find\";\nABQLFindCore.NextQLOps = NextQLOps;\n\nmodule.exports = ABQLFindCore;\n","/*\n * ABQLManagerCore\n *\n * An interface for managing the different ABQL Operations available in our\n * AppBuilder.\n *\n */\n\nconst QLObject = require(\"../../platform/ql/ABQLRootObject.js\");\nconst QLOps = [QLObject];\n\nconst ABQLManagerCore = {\n   /**\n    * @method fromAttributes()\n    * return an {ABQL} object that represents the given attributes that\n    * were saved from the previous .toObj()\n    * @param {object} attributes\n    *\t\t  the values returned from the previous .toObj() call\n    * @param {ABProcessTask***} task\n    *\t\t  the current ABProcessTaskServiceQuery that contains this QL\n    * @param {ABFactory} AB\n    *\t\t  the current ABFactory we are operating under.\n    * @return {ABQL} | null\n    */\n   fromAttributes: function (attributes, task, AB) {\n      if (!attributes) return null;\n\n      const matchingOPs = [];\n\n      ABQLManagerCore.QLOps.forEach((Op) => {\n         if (Op.key === attributes.key) matchingOPs.push(Op);\n      });\n\n      if (matchingOPs.length === 1) {\n         // let this Operation initialize and return the last OP\n         // in the chain\n         const qlOP = new matchingOPs[0](attributes, task, AB);\n\n         return qlOP;\n      } else return null;\n   },\n\n   /**\n    * @array QLOps\n    * An array of the root QL Operations.\n    */\n   QLOps: QLOps,\n};\nmodule.exports = ABQLManagerCore;\n","/*\n * ABQLRootObjectCore\n *\n * An ABQL defines a Query Language Operation. A QL Operation\n * is intended to be evaluated at run time and return a value that can be\n * assigned to form value or an object.\n *\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n\n// Define the Operations that can be performed off of a RootObject.\n// Each Root Object might have a different set of Operations, so we\n// define them here.\nconst QLFind = require(\"../../platform/ql/ABQLFind.js\");\nconst NextQLOps = [QLFind];\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectName\",\n      name: \"name\",\n   },\n];\n\nclass ABQLObjectCore extends ABQL {\n   constructor(attributes, task, AB) {\n      // NOTE: keep this so we can insert the prevOp == null\n      super(attributes, ParameterDefinitions, null, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n   initObject(attributes) {\n      if (!this.object && this.params) {\n         const objNameDef = this.parameterDefinitions.find((pDef) => {\n            return pDef.type === \"objectName\";\n         });\n\n         if (objNameDef) {\n            this.objectID = this.params[objNameDef.name];\n            this.object = this.objectLookup(this.objectID);\n         }\n\n         if (!this.object) {\n            this.warningMessage(\"has no object set.\", {\n               objectID: this.objectID,\n            });\n         }\n      }\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      // if we don't have an objectID, but we have an objectName parameter\n      // definition then save that as our objectID\n      if (!obj.objectID && this.params) {\n         const objNameDef = this.parameterDefinitions.find((pDef) => {\n            return pDef.type === \"objectName\";\n         });\n\n         if (objNameDef) obj.objectID = this.params[objNameDef.name];\n      }\n\n      return obj;\n   }\n}\n\nABQLObjectCore.key = \"object\";\nABQLObjectCore.label = \"object\";\nABQLObjectCore.NextQLOps = NextQLOps;\n\nmodule.exports = ABQLObjectCore;\n","/*\n * ABQLRow\n *\n * Defines all the QL operations that can be performed on a Row of data. This is a\n * Single row/instance of an object.\n *\n */\n\nconst QLUpdate = require(\"../../platform/ql/ABQLRowUpdate.js\");\nconst QLSave = require(\"../../platform/ql/ABQLRowSave\");\nconst QLPluck = require(\"../../platform/ql/ABQLRowPluck\");\n\nmodule.exports = [QLUpdate, QLSave, QLPluck];\n","/*\n/*\n * ABQLRowPluckCore\n *\n * An ABQLRowPluckCore can process a value of data and puck out a specified\n * field to then make an object of values that only contain that field.\n *\n */\n\n// const ABQLValue = require(\"./ABQLValue.js\");\n// const ABQLSet = require(\"./ABQLSet.js\");\nconst ABQLSetPluck = require(\"../../platform/ql/ABQLSetPluck.js\");\nconst ABQLRowUpdate = require(\"../../platform/ql/ABQLRowUpdate.js\");\nconst ABQLRowSave = require(\"../../platform/ql/ABQLRowSave.js\");\n\nclass ABQLRowPluckCore extends ABQLSetPluck {\n   // Dynamic NextQLOps\n   get NextQLOps() {\n      let nextQLOps = [];\n\n      const field = this.field ?? this.object.fieldByID(this.fieldID) ?? null;\n\n      // Update .NextQLOps WARN: update to static it affects to every ABQLRowPluck instances.\n      switch (field?.key) {\n         // M:1 M:N connect field, then set ABQLSet to next steps\n         case \"connectObject\":\n            if (field.settings.linkType === \"many\") {\n               // NOTE: Could not require(\"./ABQLSet.js\") on the top. It returns an empty object. Why ><\n               const ABQLSet = require(\"./ABQLSet.js\");\n\n               nextQLOps = ABQLSet;\n\n               break;\n            }\n\n            // return ABQLRow.js\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) =>\n                  NextQLOp.key === this.constructor.key ||\n                  NextQLOp.key === ABQLRowUpdate.key\n            );\n\n            break;\n\n         case \"user\":\n            // TODO set this up corectlys\n            if (\n               field.settings.linkType === \"many\" ||\n               field.settings.isMultiple // may be unnessicary\n            ) {\n               // NOTE: Could not require(\"./ABQLSet.js\") on the top. It returns an empty object. Why ><\n               const ABQLSet = require(\"./ABQLSet.js\");\n\n               nextQLOps = ABQLSet;\n\n               break;\n            }\n\n            // default\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) =>\n                  NextQLOp.key === this.constructor.key ||\n                  NextQLOp.key === ABQLRowUpdate.key ||\n                  NextQLOp.key === ABQLRowSave.key\n            );\n\n            break;\n\n         default:\n            // Normal field and _PK\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) => NextQLOp.key === ABQLRowSave.key\n            );\n\n            break;\n      }\n\n      return nextQLOps;\n   }\n}\n\nABQLRowPluckCore.key = \"row_pluck\";\nABQLRowPluckCore.label = \"Read the value from the field\";\nABQLRowPluckCore.NextQLOps = []; // Static NextQLOps\n\nmodule.exports = ABQLRowPluckCore;\n","/*\n/*\n * ABQLRowSaveCore\n *\n * An ABQLRowSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLSetSave = require(\"../../platform/ql/ABQLSetSave.js\");\n\nclass ABQLRowSaveCore extends ABQLSetSave {}\n\nABQLRowSaveCore.key = \"row_save\";\nABQLRowSaveCore.label = \"Save the value as\";\nABQLRowSaveCore.NextQLOps = [];\n// NOTE: currently, this is an ending step. but it doesn't have to be...\n\nmodule.exports = ABQLRowSaveCore;\n","/*\n * ABQLRowUpdateCore\n *\n * An ABQLRow Update allows you to update the values on the current\n * Row of data.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n// const ABQLRow = require(\"./ABQLRow.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectValues\",\n      name: \"values\",\n   },\n];\n\nclass ABQLRowUpdateCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = prevOP.constructor.NextQLOps;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLRowUpdateCore.key = \"update\";\nABQLRowUpdateCore.label = \"Update this record\";\nABQLRowUpdateCore.NextQLOps = [];\n// NOTE: .NextQLOps => see the #Hack in the constructor\n\nmodule.exports = ABQLRowUpdateCore;\n","/*\n * ABQLSet\n *\n * Here we define the group of operations that can be performed on a SET of data.\n * A SET is an array of objects/row data.\n *\n */\n\nmodule.exports = [\n   require(\"../../platform/ql/ABQLSetFirst.js\"),\n   require(\"../../platform/ql/ABQLSetPluck.js\"),\n   require(\"../../platform/ql/ABQLSetSave.js\"),\n];\n","/*\n/*\n * ABQLSetFirstCore\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\nconst ABQLRow = require(\"./ABQLRow.js\");\n// {array} of {ABQLxxx} options\n// this is an array of what possible next Operations can come after an\n// ABQLSetFirst task is complete.  In this case the {ABQLRow} operations come\n// next.  {ABQLRow} operations work on a single row of data.\n\nclass ABQLSetFirstCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, [], prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLSetFirstCore.key = \"first\";\nABQLSetFirstCore.label = \"Select the first record\";\nABQLSetFirstCore.NextQLOps = ABQLRow;\n\nmodule.exports = ABQLSetFirstCore;\n","/*\n/*\n * ABQLSetPluckCore\n *\n * An ABQLSetPluck can process a set (array) of data and puck out a specified\n * field to then make an array of values that only contain that field.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n// const ABQLSet = require(\"./ABQLSet.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectFields\",\n      name: \"fieldID\",\n   },\n];\n\nclass ABQLSetPluckCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromAttributes(attributes) {\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = this.prevOP.constructor.NextQLOps;\n\n      // we need to gather our .field and .objectOut before we\n      // allow our base class to continue forward:\n\n      this.fieldID = attributes.fieldID;\n      this.field = this.object?.fieldByID(this.fieldID);\n\n      //// TODO: figure out how to dynamically update the next row of options\n      //// based upon the current choice of field.\n      // // based upon the type of field, we now configure what next steps\n      // // are available.\n      // if (this.field) {\n      //    // if connected, then we can stay with same .NextQLOps\n      //    // so we can just leave what we did above.\n\n      //    // if a discreet value, then we need to remove SetPluck\n      //    if (!this.field.isConnection) {\n      //       this.constructor.NextQLOps = [\n      //          ...this.prevOP.constructor.NextQLOps,\n      //       ].filter((o) => o.key != this.constructor.key);\n      //    }\n      // }\n\n      if (attributes.objectOutID)\n         this.objectOut = this.objectLookup(attributes.objectOutID);\n\n      super.fromAttributes(attributes);\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.fieldID) {\n         obj.fieldID = this.fieldID;\n\n         if (this.objectOut) obj.objectOutID = this.objectOut.id;\n      } else {\n         obj.fieldID = this.params.field || null;\n\n         const field = this.object.fieldByID(obj.fieldID);\n\n         if (field?.isConnection) obj.objectOutID = field.datasourceLink.id;\n      }\n\n      return obj;\n   }\n}\n\nABQLSetPluckCore.key = \"set_pluck\";\nABQLSetPluckCore.label = \"Read the value from the field\";\nABQLSetPluckCore.NextQLOps = [];\n\nmodule.exports = ABQLSetPluckCore;\n","/*\n/*\n * ABQLSetSaveCore\n *\n * An ABQLSetSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"taskParam\",\n      name: \"task_param\",\n   },\n];\n\nclass ABQLSetSaveCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n\n      // TODO: register with the task that we can provide data.\n      if (this.taskParam) {\n         task.registerDatasource(this);\n         this.registered = true;\n      }\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromAttributes(attributes) {\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = this.prevOP.constructor.NextQLOps;\n\n      super.fromAttributes(attributes);\n\n      this.taskParam = attributes.taskParam || this.params.task_param;\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      obj.taskParam = this.taskParam || this.params.task_param;\n\n      return obj;\n   }\n\n   processDataField(id, label) {\n      // we have to report back on:\n      // key:  id.taskParam\n      // label: label->taskParam\n      // object: ABObject\n      // field: ABField\n      // set : {bool}\n\n      let field = null;\n      // {ABField}\n      // if the value being stored is NOT a connectObject, then it is\n      // a particular field in the previous object.\n\n      // if we are saving a specific field of an Object, pass that\n      // ABField along:\n      if (this.prevOP?.field?.key !== \"connectObject\")\n         field = this?.prevOP?.field;\n\n      return {\n         key: `${id}.${this.taskParam || this.params.task_param}`,\n         label: `${label}->${this.taskParam || this.params.task_param}`,\n         field: field,\n         object: this.object,\n         set: true,\n      };\n   }\n}\n\nABQLSetSaveCore.key = \"set_save\";\nABQLSetSaveCore.label = \"Save the value as\";\nABQLSetSaveCore.NextQLOps = [];\n// NOTE: currently, this is an ending step. but it doesn't have to be...\n\nmodule.exports = ABQLSetSaveCore;\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCSVExporterDefaults = {\n   key: \"csvExporter\", // unique key identifier for this ABViewForm\n   icon: \"download\", // icon reference: (without 'fa-' )\n   labelKey: \"CSV Exporter\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewCSVExporterPropertyComponentDefaults = {\n   dataviewID: null,\n   where: null,\n   buttonLabel: \"Export CSV\",\n   filename: \"exportCSV\",\n   hasHeader: true,\n   width: 150,\n};\n\nmodule.exports = class ABViewCSVExporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewCSVExporterDefaults\n      );\n   }\n\n   static common() {\n      return ABViewCSVExporterDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCSVExporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert to boolean\n      if (typeof values.settings.hasHeader == \"string\")\n         this.settings.hasHeader = JSON.parse(values.settings.hasHeader);\n\n      if (this.settings.hasHeader == null)\n         this.settings.hasHeader =\n            ABViewCSVExporterPropertyComponentDefaults.hasHeader;\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         values.settings.width ||\n            ABViewCSVExporterPropertyComponentDefaults.width\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\n\nconst ABViewCSVImporterDefaults = {\n   key: \"csvImporter\",\n   // {string}\n   // unique key identifier for this ABViewForm\n\n   icon: \"upload\",\n   // {string}\n   // font-awesome icon reference: (without 'fa-' )\n\n   labelKey: \"CSV Importer\",\n   // {string}\n   // the multilingual label key for the class label\n   // NOTE: will be used as L(labelKey)\n};\n\nconst ABViewCSVImporterPropertyComponentDefaults = {\n   dataviewID: null,\n   // {uuid}\n   // The ABDataCollection.uuid that we are using to store the data.\n   // NOTE: we actually use the DC to get the ABObject it is connected to.\n\n   availableFieldIds: [],\n   //{array}\n   // A list of ABField.ids that are allowed to be imported using this widget.\n\n   buttonLabel: \"Upload CSV\",\n   // {string}\n   // The Label(key) to display on the initial button\n\n   width: 0,\n   // {integer}\n   // Width of the Popup.\n\n   recordRules: [],\n   // {array}  [ {RecordRule}, ... ]\n   // A list of ABViewRuleListFormRecordRules that should be performed upon\n   // each row of data imported.\n   // The Array should look like:\n   // [{\n   //    action: {string},\n   //    when: [\n   //       {\n   //          fieldId: {UUID},\n   //          comparer: {string},\n   //          value: {string}\n   //       }\n   //    ],\n   //    values: [\n   //       {\n   //          fieldId: {UUID},\n   //          value: {object}\n   //       }\n   //    ]\n   // }]\n};\n\nmodule.exports = class ABViewCSVImporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewCSVImporterDefaults\n      );\n   }\n\n   /**\n    * @method common()\n    * Provides the default settings for an instance of an ABViewCSVImporter\n    * @return {json}\n    */\n   static common() {\n      return ABViewCSVImporterDefaults;\n   }\n\n   /**\n    * @method defaultValues()\n    * Provides the default settings for an instance of an ABViewCSVImporter\n    * Component that is displayed on the UI.\n    * @return {json}\n    */\n   static defaultValues() {\n      return ABViewCSVImporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewCSVImporterPropertyComponentDefaults.width\n      );\n   }\n\n   get RecordRule() {\n      let object = this.datacollection?.datasource;\n      if (!object) return;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   doRecordRulesPre(rowDatas) {\n      if (rowDatas && !Array.isArray(rowDatas)) {\n         rowDatas = [rowDatas];\n      }\n\n      rowDatas.forEach((row) => {\n         this.RecordRule?.processPre({ data: row.data || row, form: this });\n      });\n   }\n\n   doRecordRules(rowDatas) {\n      if (rowDatas && !Array.isArray(rowDatas)) {\n         rowDatas = [rowDatas];\n      }\n\n      if (!this.RecordRule) return Promise.resolve();\n\n      let tasks = [];\n\n      rowDatas.forEach((row) => {\n         tasks.push(\n            this.RecordRule.process({ data: row.data || row, form: this })\n         );\n      });\n\n      return Promise.all(tasks);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCarouselPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid\n\n   width: 460,\n   height: 275,\n   showLabel: true,\n   hideItem: false,\n   hideButton: false,\n   navigationType: \"corner\", // \"corner\" || \"side\"\n   filterByCursor: false,\n\n   detailsPage: null, // uuid\n   detailsTab: null, // uuid\n   editPage: null, // uuid\n   editTab: null, // uuid\n};\n\nconst ABViewDefaults = {\n   key: \"carousel\", // {string} unique key for this view\n   icon: \"clone\", // {string} fa-[icon] reference for this view\n   labelKey: \"Carousel\", // {string} the multilingual label key for the class label\n};\n\nfunction parseIntOrDefault(_this, key) {\n   if (typeof _this.settings[key] != \"undefined\") {\n      _this.settings[key] = parseInt(_this.settings[key]);\n   } else {\n      _this.settings[key] = ABViewCarouselPropertyComponentDefaults[key];\n   }\n}\n\nfunction parseOrDefault(_this, key) {\n   try {\n      _this.settings[key] = JSON.parse(_this.settings[key]);\n   } catch (e) {\n      _this.settings[key] = ABViewCarouselPropertyComponentDefaults[key];\n   }\n}\n\nmodule.exports = class ABViewCarouselCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCarouselPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      parseIntOrDefault(this, \"width\");\n      parseIntOrDefault(this, \"height\");\n\n      // json\n      parseOrDefault(this, \"showLabel\");\n      parseOrDefault(this, \"hideItem\");\n      parseOrDefault(this, \"hideButton\");\n\n      this.settings.navigationType =\n         this.settings.navigationType ||\n         ABViewCarouselPropertyComponentDefaults.navigationType;\n\n      parseOrDefault(this, \"filterByCursor\");\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   get imageField() {\n      let dc = this.datacollection;\n      if (!dc) return null;\n\n      let obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.field);\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartAreaPropertyComponentDefaults = {\n   areaType: \"area\",\n   isLegend: 1,\n   // chartWidth: 600,\n   chartHeight: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"area\", // {string} unique key for this view\n   icon: \"area-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Area\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartAreaCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartAreaPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.areaType =\n         this.settings.areaType ||\n         ABViewChartAreaPropertyComponentDefaults.areaType;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartAreaPropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartAreaPropertyComponentDefaults.chartWidth);\n      this.settings.chartHeight = parseInt(\n         this.settings.chartHeight ??\n            ABViewChartAreaPropertyComponentDefaults.chartHeight\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartAreaPropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartAreaPropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartAreaPropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"areaLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartBarPropertyComponentDefaults = {\n   barType: \"bar\",\n   barPreset: \"column\",\n   isLegend: 1,\n   // chartWidth: 600,\n   height: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"bar\", // {string} unique key for this view\n   icon: \"bar-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Bar\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartBarCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartBarPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.barType =\n         this.settings.barType ||\n         ABViewChartBarPropertyComponentDefaults.barType;\n\n      this.settings.barPreset =\n         this.settings.barPreset ||\n         ABViewChartBarPropertyComponentDefaults.barPreset;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartBarPropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartBarPropertyComponentDefaults.chartWidth);\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartBarPropertyComponentDefaults.height\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartBarPropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartBarPropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartBarPropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"barLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewChartPropertyComponentDefaults = {\n   dataviewID: \"\",\n   columnValue: \"\",\n   columnLabel: \"\",\n   columnValue2: \"\",\n   isPercentage: 1,\n   showLabel: 1,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   multipleSeries: 0,\n};\n\nconst ABViewChartDefaults = {\n   key: \"chart\", // {string} unique key for this view\n   icon: \"bar-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Chart\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewChartDefaults);\n   }\n\n   static common() {\n      return ABViewChartDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.dataviewID =\n         this.settings.dataviewID ??\n         ABViewChartPropertyComponentDefaults.dataviewID;\n\n      this.settings.columnValue =\n         this.settings.columnValue ??\n         ABViewChartPropertyComponentDefaults.columnValue;\n\n      this.settings.columnLabel =\n         this.settings.columnLabel ??\n         ABViewChartPropertyComponentDefaults.columnLabel;\n\n      this.settings.columnValue2 =\n         this.settings.columnValue2 ??\n         ABViewChartPropertyComponentDefaults.columnValue2;\n\n      this.settings.isPercentage = parseInt(\n         this.settings.isPercentage ??\n            ABViewChartPropertyComponentDefaults.isPercentage\n      );\n\n      this.settings.showLabel = parseInt(\n         this.settings.showLabel ??\n            ABViewChartPropertyComponentDefaults.showLabel\n      );\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewChartPropertyComponentDefaults.labelPosition;\n\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth ??\n            ABViewChartPropertyComponentDefaults.labelWidth\n      );\n\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartPropertyComponentDefaults.height\n      );\n\n      this.settings.multipleSeries = parseInt(\n         this.settings.multipleSeries ??\n            ABViewChartPropertyComponentDefaults.multipleSeries\n      );\n\n      this.translate(this, this, [\"chartLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      const viewsToAllow = [\"label\", \"pie\", \"bar\", \"line\", \"area\"];\n      return this.application.viewAll((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   labelField() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnLabel);\n   }\n\n   valueField() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnValue);\n   }\n\n   valueField2() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnValue2);\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartLinePropertyComponentDefaults = {\n   lineType: \"line\",\n   linePreset: \"plot\",\n   isLegend: 1,\n   // chartWidth: 600,\n   chartHeight: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"line\", // {string} unique key for this view\n   icon: \"line-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Line\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartLineCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartLinePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.lineType =\n         this.settings.lineType ||\n         ABViewChartLinePropertyComponentDefaults.lineType;\n\n      this.settings.linePreset =\n         this.settings.linePreset ||\n         ABViewChartLinePropertyComponentDefaults.linePreset;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartLinePropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartLinePropertyComponentDefaults.chartWidth);\n      this.settings.chartHeight = parseInt(\n         this.settings.chartHeight ??\n            ABViewChartLinePropertyComponentDefaults.chartHeight\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartLinePropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartLinePropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartLinePropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"lineLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartPiePropertyComponentDefaults = {\n   pieType: \"pie\",\n   isLegend: 1,\n   // chartWidth: 600,\n   height: 200,\n   innerFontSize: 12,\n   labelFontSize: 12,\n};\n\nconst ABViewDefaults = {\n   key: \"pie\", // {string} unique key for this view\n   icon: \"pie-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Pie\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartPieCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartPiePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.pieType =\n         this.settings.pieType ||\n         ABViewChartPiePropertyComponentDefaults.pieType;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartPiePropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartPiePropertyComponentDefaults.chartWidth);\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartPiePropertyComponentDefaults.height\n      );\n\n      this.settings.innerFontSize = parseInt(\n         this.settings.innerFontSize ??\n            ABViewChartPiePropertyComponentDefaults.innerFontSize\n      );\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartPiePropertyComponentDefaults.labelFontSize\n      );\n\n      this.translate(this, this, [\"pieLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCommentPropertyComponentDefaults = {\n   dataviewID: null,\n   columnUser: null,\n   columnComment: null,\n   columnDate: null,\n   height: 300,\n   label: \"\", // label is required and you can add more if the component needs them\n   // format:0  \t// 0 - normal, 1 - title, 2 - description\n};\n\nconst ABViewDefaults = {\n   key: \"comment\", // {string} unique key for this view\n   icon: \"comments\", // {string} fa-[icon] reference for this view\n   labelKey: \"Comment\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewCommentCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCommentPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      // this.settings.format = parseInt(this.settings.format);\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.height = parseInt(this.settings.height || 0);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   getCurrentUserId() {\n      const userObject = this.getUsers();\n      const currentUser = this.AB.Account.username();\n      //Anonymous User = 0\n\n      if (!userObject) return;\n\n      return userObject.findIndex((e) => e.value === currentUser) + 1;\n   }\n\n   getUsers() {\n      return this.AB.Account.userList().map((e) => {\n         return {\n            id: e.username,\n            value: e.username,\n            image: e.image_id,\n         };\n      });\n   }\n\n   getUserField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnUser);\n   }\n\n   getCommentField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnComment);\n   }\n\n   getDateField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnDate);\n   }\n\n   getUserData() {\n      let UserImageField = this.AB.objectUser().fieldByID(\n         \"6383ce19-b344-44ee-87e6-decced7361f8\"\n      );\n\n      var userObject = this.getUsers();\n      var userList = [];\n\n      if (!userObject) return;\n\n      userObject.forEach((item, index) => {\n         var imageURL = \"\";\n         if (item.image) {\n            imageURL = UserImageField.urlImage(item.image);\n         }\n         var user = { id: index + 1, value: item.value, image: imageURL };\n         userList.push(user);\n      });\n      return userList;\n   }\n\n   model() {\n      let dv = this.datacollection;\n      if (!dv) return null; // TODO: refactor in v2\n\n      // get ABModel\n      let model = dv.model; // already notified\n      if (!model) return null;\n\n      return model;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewPropertyDefaults = {\n   dataviewID: null,\n   filterConditions: {},\n};\n\nconst ABViewDefaults = {\n   key: \"conditionalcontainer\", // unique key identifier for this ABView\n   icon: \"shield\", // icon reference: (without 'fa-' )\n   labelKey: \"Conditional Container\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewConditionalContainerCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      const L = (...params) => this.AB.Multilingual.label(...params);\n\n      // the conditional container always has 'If' and 'Else' panels\n      if (this.views((v) => v instanceof ABViewContainer).length < 2) {\n         this._views = [];\n\n         // 'If' panel\n         const ifPanel = application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: L(\"If\"),\n               name: \"If\",\n               settings: {\n                  removable: false,\n               },\n            },\n            application,\n            this\n         );\n\n         this._views.push(ifPanel);\n\n         // 'Else' panel\n         const elsePanel = application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: L(\"Else\"),\n               name: \"Else\",\n               settings: {\n                  removable: false,\n               },\n            },\n            application,\n            this\n         );\n\n         this._views.push(elsePanel);\n      }\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * For a Conditional Container, we don't allow any other items to be placed on it.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewConnectDataFilterPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid\n};\n\nconst ABViewDefaults = {\n   key: \"connect-data-filter\", // {string} unique key for this view\n   icon: \"filter\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connected Data Filter\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewConnectDataFilterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewConnectDataFilterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","/*\n * ABViewContainerCore\n *\n * An ABViewContainerCore defines a UI display component.\n *\n * A container might have multiple columns of display info.\n *\n */\n\nconst ABView = require(\"../../platform/views/ABView\");\n\n// function L(key, altText) {\n// \treturn AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABViewDefaults = {\n   key: \"viewcontainer\", // {string} unique key for this view\n   icon: \"braille\", // {string} fa-[icon] reference for this view\n   labelKey: \"Container\", // {string} the multilingual label key for the class label\n};\n\nconst ABPropertyComponentDefaults = {\n   columns: 1,\n   gravity: 1,\n   movable: true,\n   removable: true,\n};\n\nmodule.exports = class ABViewContainerCore extends ABView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    * @param {obj} defaultValues special sub class defined default values.\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.columns = parseInt(\n         this.settings.columns || ABPropertyComponentDefaults.columns\n      );\n\n      if (typeof this.settings.gravity != \"undefined\") {\n         this.settings.gravity.map(function (gravity) {\n            return parseInt(gravity);\n         });\n      }\n\n      if (this.settings.removable != null) {\n         this.settings.removable = JSON.parse(this.settings.removable); // convert to boolean\n      } else {\n         this.settings.removable = ABPropertyComponentDefaults.removable;\n      }\n\n      if (this.settings.movable != null) {\n         this.settings.movable = JSON.parse(this.settings.movable); // convert to boolean\n      } else {\n         this.settings.movable = ABPropertyComponentDefaults.movable;\n      }\n   }\n\n   viewsSortByPosition() {\n      // Sort views from y, x positions\n      return this.views().sort((a, b) => {\n         if (a.position.y == b.position.y) return a.position.x - b.position.x;\n         else return a.position.y - b.position.y;\n      });\n   }\n\n   // saveReorder() {\n   //    return this.application.viewReorder(this);\n   // }\n};\n","/*\n * ABViewCore\n *\n * ABViewCore defines the common ABView structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABView classes.\n *\n */\n\nvar ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABViewDefaults = {\n   key: \"view\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.view\", // {string} the multilingual label key for the class label\n   tabicon: \"\", // no default tab icons\n};\n\nconst ABViewPropertyComponentDefaults = {\n   label: \"\",\n};\n\nmodule.exports = class ABViewCore extends ABMLClass {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super([\"label\"], application.AB);\n\n      this.__events = [];\n      // keep track of any event listeners attached to this ABView object\n\n      this.defaults = defaultValues || ABViewDefaults;\n\n      this.application = application;\n\n      this.parent = parent || null;\n\n      this.warningsSilent = false;\n      // {bool}\n      // Should we suppress our configuration warnings?\n\n      this.__missingViews = [];\n      // {array}\n      // Any ABView.id we have stored that we can't find.\n\n      this.fromValues(values);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyComponentDefaults;\n   }\n\n   /**\n    * @method newInstance()\n    * return a new instance of this ABView.  Most likely called from interfaces\n    * that create new UI elements like the ABDesigner.\n    * @param {ABApplication} application  \t: the root ABApplication this view is under\n    * @param {ABView/ABApplication} parent\t: the parent object of this ABView.\n    * @return {ABView}\n    */\n   static newInstance(application, parent) {\n      // return a new instance from ABViewManager:\n      return application.viewNew(\n         { key: this.common().key },\n         application,\n         parent\n      );\n   }\n\n   viewKey() {\n      return this.defaults.key;\n   }\n\n   viewIcon() {\n      return this.defaults.icon;\n   }\n\n   tabIcon() {\n      return this.defaults.tabicon;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABView instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // // NOTE: ensure we have a uuid() set:\n      // if (!this.id) {\n      //    this.id = this.application.uuid();\n      // }\n\n      // this.application.unTranslate(this, this, [\"label\"]);\n\n      // MLClass translation\n      var obj = super.toObj();\n\n      var result = {\n         id: this.id,\n         type: this.type || \"view\",\n         key: this.key,\n         icon: this.icon,\n         tabicon: this.tabicon,\n         name: this.name,\n         settings: this.AB.cloneDeep(this.settings || {}),\n         accessLevels: this.accessLevels,\n         translations: obj.translations,\n      };\n\n      // encode our child view references\n      result.viewIDs = (this._views || []).map((v) => v.id).filter((id) => id);\n      result.viewIDs = result.viewIDs.concat(this.__missingViews);\n\n      if (this.position) result.position = this.position;\n\n      // encode our .isRoot() reference.\n      // (NOTE: this is set so our server side code can distinguish) between a .view\n      // and a root page:\n      // NOTE: we intentionally do NOT pull this out in .fromValues()\n      result.isRoot = this.isRoot();\n\n      return result;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id; // NOTE: only exists after .save()\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = values.type || \"view\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.key = values.key || this.viewKey();\n      // {string} .key\n      // the unique lookup key for our ABViewManager to create new\n      // instances of this object.\n\n      this.icon = values.icon || this.viewIcon();\n      // {string} .icon\n      // the font awesome icon reference for showing an icon for this\n      // view in the AppBuilder interface builder.\n\n      this.tabicon = values.tabicon || this.tabIcon();\n\n      this.name = values.name;\n      // {string} .name\n      // A name reference for this ABView. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      values.settings = values.settings || {};\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.settings = values.settings || {};\n      // {obj} .settings\n      // the property settings for this ABView\n\n      // make sure .settings.height is an int and not a string\n      this.settings.height = parseInt(this.settings.height || 0);\n\n      this.accessLevels = values.accessLevels || {};\n      // {obj} .accessLevels\n      // Hash: { ABRole.id : accessLevel }\n      // tracks the Role -> AccessLevel settings of this particular\n      // view.\n      // accessLevel: 0 : no access, 1 : view only, 2: full access\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n\n      // If the View / DataCollection does not have a .name already,\n      // use the English label translation as the .name instead.\n      if (!this.name && Array.isArray(this.translations)) {\n         for (var i = 0; i < this.translations.length; i++) {\n            if (i == 0) {\n               // Use the first label found, in case there is no 'en'\n               this.name = this.translations[i].label;\n            }\n            if (this.translations[i].language_code == \"en\") {\n               // But the 'en' label will have final priority\n               this.name = this.translations[i].label;\n               break;\n            }\n         }\n      }\n\n      // default value for our label\n      if (this.label == \"?label?\") {\n         if (this.parent) {\n            this.label = this.parent.label + \".\" + this.defaults.key;\n         }\n      }\n\n      var views = [];\n      this.__missingViews = this.__missingViews || [];\n      (values.viewIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            views.push(this.application.viewNew(def, this.application, this));\n         } else {\n            this.__missingViews.push(id);\n         }\n      });\n      this._views = views;\n\n      // convert from \"0\" => 0\n      this.position = values.position || {};\n\n      if (this.position.x != null) this.position.x = parseInt(this.position.x);\n      if (this.position.y != null) this.position.y = parseInt(this.position.y);\n\n      this.position.dx = parseInt(this.position.dx || 1);\n      this.position.dy = parseInt(this.position.dy || 1);\n   }\n\n   isRoot() {\n      return this.parent == null || this.parent == this.application;\n   }\n\n   /**\n    * @method allParents()\n    * return a flattened array of all the ABViews parents\n    * @return {array}      array of ABViews\n    */\n   allParents() {\n      var parents = [];\n      var curView = this;\n\n      // add current view to array\n      parents.unshift(curView);\n\n      while (!curView.isRoot() && curView.parent) {\n         parents.unshift(curView.parent);\n\n         curView = curView.parent;\n      }\n\n      return parents;\n   }\n\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABViewPage is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   isAccessibleForRoles(roles) {\n      var foundRole = false;\n\n      var accessibleRoles = Object.keys(this.accessLevels) || [];\n      (roles || []).forEach((r) => {\n         if (accessibleRoles.indexOf(r.uuid || r) > -1) {\n            foundRole = true;\n         }\n      });\n\n      return foundRole;\n   }\n\n   /**\n    * @method getUserAccess()\n    *\n    * return the access level of the current user on the current view\n    *\n    * @return {integer}  // 0 = No Access // 1 = Read Only // 2 = Full Access\n    */\n   getUserAccess() {\n      // by default everyone has no access\n      var accessLevel = 0;\n\n      if (this.application.isAccessManaged) {\n         // check to see if the current users is the access manager\n         var isAccessManager = false;\n         // first check if manager is defined by their role\n         if (parseInt(this.application.accessManagers.useRole) == 1) {\n            // if so check if any of the user's role match the managers\n            this.AB.Account.roles().forEach((role) => {\n               if (\n                  this.application.accessManagers.role.indexOf(\n                     role.id || role.uuid\n                  ) > -1\n               ) {\n                  // if so set the access level to full access\n                  isAccessManager = true;\n                  accessLevel = 2;\n               }\n            });\n         }\n         // if the user isn't already set as the manager and the manager is defined by their account\n         if (\n            !isAccessManager &&\n            parseInt(this.application.accessManagers.useAccount) == 1\n         ) {\n            // check if the user's account matches the managers\n            if (\n               this.application.accessManagers.account.indexOf(\n                  this.AB.Account.uuid() + \"\"\n               ) > -1\n            ) {\n               // if so set the access level to full access\n               isAccessManager = true;\n               accessLevel = 2;\n            }\n         }\n\n         // if the user is not the manager check if the page has access levels defined for roles\n         if (\n            this.accessLevels &&\n            Object.keys(this.accessLevels).length > 0 &&\n            !isAccessManager\n         ) {\n            // check to see if the user's roles matches one of the roles defined\n            this.AB.Account.roles().forEach((role) => {\n               var currentRole = this.accessLevels[role.id || role.uuid];\n               if (currentRole && parseInt(currentRole) > accessLevel)\n                  // if the access level is higher than a previous role set to the new level\n                  accessLevel = parseInt(currentRole);\n            });\n         }\n      } else {\n         accessLevel = 2;\n      }\n\n      return accessLevel;\n   }\n\n   /**\n    * @method parentFormComponent\n    * return the closest form object this component is on.\n    */\n   parentFormComponent() {\n      var form = null;\n\n      var curr = this;\n      while (curr.key != \"form\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"form\") {\n         form = curr;\n      }\n\n      return form;\n   }\n\n   /**\n    * @method parentDetailComponent\n    * return the closest detail object that this component is on.\n    * @returns {ABViewDetail} detail component\n    */\n   parentDetailComponent() {\n      var detail = null;\n\n      var curr = this;\n      while (curr.key != \"detail\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"detail\") {\n         detail = curr;\n      }\n\n      return detail;\n   }\n\n   pageParent(filterFn) {\n      if (filterFn == null) filterFn = () => true;\n\n      // if current page is the root page, then return itself.\n      if (this.isRoot()) {\n         return this;\n      }\n\n      var parentPage = this.parent;\n      while (\n         parentPage &&\n         (parentPage.key != \"page\" || !filterFn(parentPage))\n      ) {\n         parentPage = parentPage.parent;\n      }\n\n      return parentPage;\n   }\n\n   pageRoot() {\n      var rootPage = this.pageParent();\n\n      while (!rootPage.isRoot()) {\n         rootPage = rootPage.pageParent();\n      }\n\n      return rootPage;\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this view.  This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this view object.\n    * @return {string}\n    */\n   urlPointer() {\n      if (this.parent) {\n         return this.parent.urlView() + this.id;\n      } else {\n         return this.application.urlPage() + this.id;\n      }\n   }\n\n   /**\n    * @method urlView\n    * return a string pointer to this object's views.\n    * @return {string}\n    */\n   urlView() {\n      return this.urlPointer() + \"/_views/\";\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    *\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) {\n         if (\n            [\"form\", \"grid\", \"line\", \"area\", \"bar\", \"gantt\", \"kanban\"].indexOf(\n               this.key\n            ) > -1\n         ) {\n            // NOTE: ignore kanban side forms where this is the case:\n            if (this.key == \"form\" && this._currentObject) return null;\n\n            if (this.warningsSilent) return null;\n\n            var errNoDCID = new Error(\n               `ABViewCore:get datacollection(): View[${this.key}] didn't define a dataviewID.`\n            );\n            this.AB.notify.builder(errNoDCID, {\n               view: this,\n               settings: this.settings,\n            });\n         } else {\n            // These views shouldn't matter if they don't have a datacollection.\n            if (\n               [\"button\", \"label\", \"page\", \"tab\", \"viewcontainer\"].indexOf(\n                  this.key\n               ) == -1\n            ) {\n               console.warn(\n                  `TODO: figure out which ABView* require a .dataviewID: ${this.key}?`\n               );\n            }\n         }\n         return null;\n      }\n\n      var dc = this.AB.datacollectionByID(dataviewID);\n      if (!dc) {\n         var errNoDC = new Error(\n            `View[${this.label}][${this.id}] is unable to find associated DataCollection`\n         );\n         this.AB.notify.builder(errNoDC, {\n            view: this,\n            dataviewID,\n         });\n      }\n      return dc;\n   }\n\n   ///\n   /// Update Access accessLevels\n   ///\n\n   /**\n    * @method updateAccessLevels()\n    *\n    *\n    * @param {string} roleId\n    *\n    * @param {string} accessLevel\n    *\n    * @return {Promise}\n    *\n    */\n   updateAccessLevels(roleId, accessLevel) {\n      if (parseInt(accessLevel) == 0) {\n         if (this.accessLevels[roleId]) delete this.accessLevels[roleId];\n      } else {\n         this.accessLevels[roleId] = accessLevel;\n      }\n\n      return this.save(false, false);\n   }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    *\n    * return an array of all the ABViews children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViews that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\n    *\n    * @return {array} \tarray of ABViews\n    */\n   views(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._views || this._views.length < 1) return result;\n\n      // find into recursively\n      if (filter && deep) {\n         result = result.concat(this._views.filter(filter));\n\n         this._views.forEach((v) => {\n            var subViews = v.views(filter, deep);\n            if (subViews && subViews.length > 0) {\n               result = result.concat(subViews);\n            }\n         });\n      } else {\n         result = this._views.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewNew()\n    *\n    *\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return this.application.viewNew(\n         values,\n         application || this.application,\n         parent || this\n      );\n   }\n\n   /**\n    * @method viewDestroy()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewDestroy(view) {\n      console.error(\"DEPRECIATED: where is this called?\");\n      return this.viewRemove(view);\n   }\n\n   /**\n    * @method viewRemove()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewRemove(view) {\n      var origLen = this._views.length;\n      this._views = this.views(function (v) {\n         return v.id != view.id;\n      });\n\n      if (this._views.length < origLen) {\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewInsert()\n    *\n    * persist the current ABView in our list of ._views.\n    *\n    * @param {ABView} object\n    * @return {Promise}\n    */\n   viewInsert(view) {\n      var isIncluded =\n         this.views(function (v) {\n            return v.id == view.id;\n         }).length > 0;\n      if (!isIncluded) {\n         this._views.push(view);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewReorder()\n    *\n    * reorder the current ABView in our list of ._views.\n    *\n    * @param {string} viewId - id of the active view\n    * @param {string} toPosition - 'to' postion\n    * @return {Promise}\n    */\n   viewReorder(viewId, toPosition) {\n      var from = this._views.findIndex((v) => v.id == viewId);\n      if (from < 0) return;\n\n      // move drag item to 'to' position\n      this._views.splice(toPosition, 0, this._views.splice(from, 1)[0]);\n\n      // save to database\n      return this.save(true);\n   }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // unsubscribe events\n      this.eventClear(true);\n\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABView\n            // be sure to remove any of it's ABViews as well\n            // This cleans out any dangling ABDefinitions\n\n            var allViewDeletes = [];\n            var allViews = this.views();\n            this._views = [];\n            // doing ._views = [] prevents any of my updates when\n            // a sub-view is .destroy()ed\n\n            allViews.forEach((v) => {\n               allViewDeletes.push(v.destroy());\n            });\n            return Promise.all(allViewDeletes);\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects\n            if (this.parent && !this.pages) {\n               return this.parent.viewRemove(this);\n            }\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABView\n    * @return {Promise}\n    *\t\t.resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects:\n            if (this.parent && !this.pages) {\n               // if we have a .parent, make sure we are included in our .parent's\n               // viewIDs\n               return this.parent.viewInsert(this);\n            }\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   ///\n   /// Events\n   ///\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    * \t\t\t\t\t\t\temitter: object,\n    * \t\t\t\t\t\t\teventName: string,\n    * \t\t\t\t\t\t\tlistener: function\n    * \t\t\t\t\t\t}\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      var exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    * @param {bool} deep - clear events of child views\n    */\n   eventClear(deep) {\n      if (deep) {\n         this.views().forEach((v) => {\n            v.eventClear(deep);\n         });\n      }\n\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   /**\n    * @method clone()\n    * clone the definitions of this ABView object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    * @return {obj}\n    *        obj defs of this ABView\n    */\n   clone(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pages\", \"views\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.viewNew(config, this.application, parent);\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // copy sub pages\n      if (this.pages && !options.ignoreSubPages) {\n         result._pages = [];\n         this.pages().forEach((p) => {\n            let copiedSubPage = p.clone(lookUpIds, result, options);\n            copiedSubPage.parent = result;\n\n            result._pages.push(copiedSubPage);\n         });\n      }\n\n      // copy sub views\n      if (this.views && !options.ignoreSubViews) {\n         result._views = [];\n         this.views().forEach((v) => {\n            let copiedView = v.clone(lookUpIds, result, options);\n\n            result._views.push(copiedView);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABView object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    *        options.newName {string}\n    *             new user determined name for page\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pageIDs\", \"viewIDs\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.application.viewNew(config, this.application, parent);\n\n      // keep the parent\n      result.parent = parent || this.parent;\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application.\n         // pages with null parent ids default to getting put on root\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // page's name should not be duplicate\n      if (this.key == \"page\") {\n         result.name =\n            options?.newName ||\n            `${result.name}_copied_${this.AB.uuid().slice(0, 3)}`;\n\n         result.label = options?.newName || `${result.label} (copied)`;\n      }\n\n      return Promise.resolve()\n         .then(() => {\n            // copy sub pages\n            var allSaves = [];\n\n            if (this._pages && !options.ignoreSubPages) {\n               result._pages = [];\n               this.pages().forEach((p) => {\n                  // this prevents result.save() from happening on each of these\n                  // p.copy():\n                  if (p.isRoot())\n                     this.application._pages.push({ id: lookUpIds[p.id] });\n\n                  allSaves.push(\n                     p\n                        .copy(lookUpIds, result, options)\n                        .then((copiedSubPage) => {\n                           copiedSubPage.parent = result;\n                           // remove the temp {id:} entry above:\n                           this.application._pages =\n                              this.application._pages.filter(\n                                 (p2) => p2.id != lookUpIds[p.id]\n                              );\n\n                           // now add the full copiedSubPage:\n                           result._pages.push(copiedSubPage);\n                        })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // copy sub views\n            var allSaves = [];\n\n            if (this._views && !options.ignoreSubViews) {\n               result._views = [];\n               this.views().forEach((v) => {\n                  allSaves.push(\n                     // send a null for parent, so that the .save() wont trigger\n                     // a save of the parent.\n                     v.copy(lookUpIds, result, options).then((copiedView) => {\n                        // now patch up the parent connection:\n                        // copiedView.parent = result;\n                        if (\n                           result._views.filter((vi) => vi.id == copiedView.id)\n                              .length < 1\n                        ) {\n                           result._views.push(copiedView);\n                        }\n                     })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // now we do 1 save for all the views\n            return result.save();\n         })\n         .then(() => {\n            return result;\n         });\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewDataFilterPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid,\n   viewType: \"advanced\",\n   showFilter: 1,\n   showSort: 1,\n};\n\nconst ABViewDefaults = {\n   key: \"data-filter\", // {string} unique key for this view\n   icon: \"filter\", // {string} fa-[icon] reference for this view\n   labelKey: \"Data Filter\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDataFilterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDataFilterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewDetail = require(\"../../platform/views/ABViewDetail\");\n\nconst ABViewDataviewPropertyComponentDefaults = {\n   xCount: 1, // {int} the number of columns per row (need at least one)\n   detailsPage: \"\",\n   detailsTab: \"\",\n   editPage: \"\",\n   editTab: \"\",\n};\n\nconst ABViewDataviewDefaults = {\n   key: \"dataview\", // {string} unique key for this view\n   icon: \"th\", // {string} fa-[icon] reference for this view\n   labelKey: \"Data view\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDataviewCore extends ABViewDetail {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewDataviewDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDataviewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDataviewPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.xCount = parseInt(\n         this.settings.xCount || ABViewDataviewPropertyComponentDefaults.xCount\n      );\n      this.settings.detailsPage =\n         this.settings.detailsPage ||\n         ABViewDataviewPropertyComponentDefaults.detailsPage;\n      this.settings.editPage =\n         this.settings.editPage ||\n         ABViewDataviewPropertyComponentDefaults.editPage;\n      this.settings.detailsTab =\n         this.settings.detailsTab ||\n         ABViewDataviewPropertyComponentDefaults.detailsTab;\n      this.settings.editTab =\n         this.settings.editTab ||\n         ABViewDataviewPropertyComponentDefaults.editTab;\n   }\n\n   parentDetailComponent() {\n      let dataview = null;\n\n      let curr = this;\n      while (curr.key != \"dataview\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"dataview\") {\n         dataview = curr;\n      }\n\n      return dataview;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailCheckboxPropertyComponentDefaults = {};\n\nconst ABViewDetailCheckboxDefaults = {\n   key: \"detailcheckbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailCheckboxCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailCheckboxPropertyComponentDefaults;\n   }\n};\n","// const ABViewDetailSelectivity = require(\"../../platform/views/ABViewDetailSelectivity\");\nconst ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n};\n\nconst ABViewDefaults = {\n   key: \"detailconnect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailConnectCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewDetailDefaults = {\n   key: \"detail\", // {string} unique key for this view\n   icon: \"file-text-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"Detail\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewDetailPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 0,\n};\n\nmodule.exports = class ABViewDetailCore extends ABViewContainer {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDetailDefaults);\n   }\n\n   static common() {\n      return ABViewDetailDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewDetailPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewDetailPropertyComponentDefaults.showLabel\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth ||\n            ABViewDetailPropertyComponentDefaults.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewDetailPropertyComponentDefaults.height\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      let viewsToAllow = [\"label\", \"text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   addFieldToDetail(field, yPosition) {\n      if (field == null) return;\n\n      let newView = field.detailComponent().newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings ?? {};\n      newView.settings.fieldId = field.id;\n      newView.settings.labelWidth =\n         this.settings.labelWidth ||\n         ABViewDetailPropertyComponentDefaults.labelWidth;\n\n      // keep alias to support Query that contains alias name\n      // [alias].[columnName]\n      newView.settings.alias = field.alias;\n\n      // TODO : Default settings\n\n      newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailCustomPropertyComponentDefaults = {};\n\nconst ABViewDetailCustomDefaults = {\n   key: \"detailcustom\", // {string} unique key for this view\n   icon: \"dot-circle-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.custom\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailCustomCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailCustomPropertyComponentDefaults;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailImagePropertyComponentDefaults = {\n   height: 80,\n   width: 120,\n};\n\nconst ABViewDetailImageDefaults = {\n   key: \"detailimage\", // {string} unique key for this view\n   icon: \"image\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.image\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailImageCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailImageDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailImageDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailImagePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height ||\n            ABViewDetailImagePropertyComponentDefaults.height\n      );\n      this.settings.width = parseInt(\n         this.settings.width ?? ABViewDetailImagePropertyComponentDefaults.width\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nmodule.exports = class ABViewDetailItemCore extends ABViewWidget {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   detailComponent() {\n      let detailView = null;\n\n      let curr = this;\n      while (\n         !curr.isRoot() &&\n         curr.parent &&\n         curr.key != \"detail\" &&\n         curr.key != \"dataview\"\n      ) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"detail\" || curr.key == \"dataview\") {\n         detailView = curr;\n      }\n\n      return detailView;\n   }\n\n   field() {\n      let detailComponent = this.detailComponent();\n      if (detailComponent == null) return null;\n\n      let datacollection = detailComponent.datacollection;\n      if (datacollection == null) return null;\n\n      let object = datacollection.datasource;\n      if (object == null) return null;\n\n      let field = object.fields((v) => v.id == this.settings.fieldId)[0];\n\n      // set .alias to support queries that contains alias name\n      // [aliasName].[columnName]\n      if (field && this.settings.alias) {\n         field.alias = this.settings.alias;\n      }\n\n      return field;\n   }\n\n   getCurrentData() {\n      let detailCom = this.detailComponent();\n      if (!detailCom) return null;\n\n      let dv = detailCom.datacollection;\n      if (!dv) return null;\n\n      let field = this.field();\n      if (!field) return null;\n\n      let currData = dv.getCursor();\n      if (currData) return currData[field.columnName];\n      else return null;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailTextPropertyComponentDefaults = {\n   height: 0,\n};\n\nconst ABViewDetailTextDefaults = {\n   key: \"detailtext\", // {string} unique key for this view\n   icon: \"etsy\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.text\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailTextCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailTextDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailTextDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailTextPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height ||\n            ABViewDetailTextPropertyComponentDefaults.height\n      );\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailPropertyComponentDefaults = {};\n\nconst ABViewDetailTreeDefaults = {\n   key: \"detailtree\", // {string} unique key for this view\n   icon: \"sitemap\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.tree\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailTextCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailTreeDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailTreeDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewDocxBuilderPropertyComponentDefaults = {\n   buttonlabel: \"Download DOCX\",\n   dataviewID: null,\n   width: 0,\n   filename: \"\", // uuid\n   filelabel: \"output.docx\",\n   language: \"en\", // en\n   toolbarBackground: \"ab-background-default\",\n   buttonPosition: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"docxBuilder\", // {string} unique key for this view\n   icon: \"file-word-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"DOCX Builder\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDocxBuilderCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDocxBuilderPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"filelabel\", \"buttonlabel\"]);\n\n      let obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewDocxBuilderPropertyComponentDefaults.width\n      );\n\n      this.translate(this, this, [\"filelabel\", \"buttonlabel\"]);\n   }\n\n   uploadUrl() {\n      // TODO: Convert this to use ABFactory.urlFileUpload() or a ABFieldFile\n      // to get the URL:\n\n      const object = this.datacollection.datasource;\n\n      // NOTE: file-upload API needs to have the id of ANY field.\n      const field = object ? object.fields()[0] : null;\n\n      return `/file/upload/${object?.id}/${field?.id}/1`;\n   }\n\n   downloadUrl() {\n      return `/file/${this.settings.filename}`;\n   }\n\n   get languageCode() {\n      return (\n         this.settings.language ||\n         ABViewDocxBuilderPropertyComponentDefaults.language\n      );\n   }\n\n   get datacollections() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) return [];\n\n      let dvList = dataviewID.split(\",\") || [];\n\n      return this.AB.datacollections((dv) => dvList.indexOf(dv.id) > -1) || [];\n   }\n};\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewFormButtonPropertyComponentDefaults = {\n   includeSave: true,\n   saveLabel: \"\",\n   includeCancel: false,\n   cancelLabel: \"\",\n   includeReset: false,\n   resetLabel: \"\",\n   afterCancel: null,\n   alignment: \"right\",\n   isDefault: false, // mark default button of form widget\n};\n\nconst ABViewFormButtonDefaults = {\n   key: \"button\",\n   // {string} unique key for this view\n\n   icon: \"square\",\n   // {string} fa-[icon] reference for this view\n\n   labelKey: \"ab.components.button\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormButtonCore extends ABView {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormButtonDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormButtonDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormButtonPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   toObj() {\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      let result = super.toObj();\n\n      return result;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      this.settings.includeSave = JSON.parse(\n         this.settings.includeSave ||\n            ABViewFormButtonPropertyComponentDefaults.includeSave\n      );\n      this.settings.includeCancel = JSON.parse(\n         this.settings.includeCancel ||\n            ABViewFormButtonPropertyComponentDefaults.includeCancel\n      );\n      this.settings.includeReset = JSON.parse(\n         this.settings.includeReset ||\n            ABViewFormButtonPropertyComponentDefaults.includeReset\n      );\n\n      this.settings.isDefault = JSON.parse(\n         this.settings.isDefault ||\n            ABViewFormButtonPropertyComponentDefaults.isDefault\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormCheckboxPropertyComponentDefaults = {};\n\nconst ABViewFormCheckboxDefaults = {\n   key: \"checkbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormCheckboxCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCheckboxPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormConnectPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n   filterConditions: {\n      // array of filters to apply to the data table\n      glue: \"and\",\n      rules: [],\n   },\n   sortFields: [],\n   // objectWorkspace: {\n   //    filterConditions: {\n   //       // array of filters to apply to the data table\n   //       glue: \"and\",\n   //       rules: [],\n   //    },\n   // },\n   popupWidth: 700,\n   popupHeight: 450,\n};\n\nconst ABViewFormConnectDefaults = {\n   key: \"connect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormConnectCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormConnectDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormConnectDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormConnectPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.filterConditions =\n         this.settings.filterConditions ||\n         ABViewFormConnectPropertyComponentDefaults.filterConditions;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\nconst ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\nconst ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\nconst ABViewFormDefaults = {\n   key: \"form\", // unique key identifier for this ABViewForm\n   icon: \"list-alt\", // icon reference: (without 'fa-' )\n   labelKey: \"Form\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewFormPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   clearOnLoad: false,\n   clearOnSave: false,\n   displayRules: [],\n   editForm: \"none\", // The url pointer of ABViewForm\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalues: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tvalue: {object}\n   //\t\t\t}\n   //\t\t]\n   //\t}]\n   recordRules: [],\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalue: {string}\n   //\t}]\n   submitRules: [],\n};\n\nmodule.exports = class ABViewFormCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewFormDefaults);\n   }\n\n   static common() {\n      return ABViewFormDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewFormPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewFormPropertyComponentDefaults.showLabel\n      );\n      this.settings.clearOnLoad = JSON.parse(\n         this.settings.clearOnLoad != null\n            ? this.settings.clearOnLoad\n            : ABViewFormPropertyComponentDefaults.clearOnLoad\n      );\n      this.settings.clearOnSave = JSON.parse(\n         this.settings.clearOnSave != null\n            ? this.settings.clearOnSave\n            : ABViewFormPropertyComponentDefaults.clearOnSave\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth == null\n            ? ABViewFormPropertyComponentDefaults.labelWidth\n            : this.settings.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height == null\n            ? ABViewFormPropertyComponentDefaults.height\n            : this.settings.height\n      );\n   }\n\n   // Use this function in kanban\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      var viewsToAllow = [\"label\", \"layout\", \"button\", \"text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   /**\n    * @method fieldComponents()\n    *\n    * return an array of all the ABViewFormField children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViewFormField that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @return {array} \tarray of ABViewFormField\n    */\n   fieldComponents(filter) {\n      const flattenComponents = (views) => {\n         let components = [];\n\n         views.forEach((v) => {\n            if (v == null) return;\n\n            components.push(v);\n\n            if (v._views?.length) {\n               components = components.concat(flattenComponents(v._views));\n            }\n         });\n\n         return components;\n      };\n\n      if (this._views?.length) {\n         const allComponents = flattenComponents(this._views);\n\n         if (filter == null) {\n            filter = (comp) => comp instanceof ABViewFormItem;\n         }\n\n         return allComponents.filter(filter);\n      } else {\n         return [];\n      }\n   }\n\n   addFieldToForm(field, yPosition) {\n      if (field == null) return;\n\n      var fieldComponent = field.formComponent();\n      if (fieldComponent == null) return;\n\n      var newView = fieldComponent.newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings || {};\n      newView.settings.fieldId = field.id;\n      // TODO : Default settings\n\n      if (yPosition != null) newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n\n   get RecordRule() {\n      let object = this.datacollection.datasource;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   doRecordRulesPre(rowData) {\n      return this.RecordRule.processPre({ data: rowData, form: this });\n   }\n\n   doRecordRules(rowData) {\n      // validate for record rules\n      if (rowData) {\n         let object = this.datacollection.datasource;\n         let ruleValidator = object.isValidData(rowData);\n         let isUpdatedDataValid = ruleValidator.pass();\n         if (!isUpdatedDataValid) {\n            console.error(\"Updated data is invalid.\", { rowData: rowData });\n            return Promise.reject(new Error(\"Updated data is invalid.\"));\n         }\n      }\n\n      return this.RecordRule.process({ data: rowData, form: this });\n   }\n\n   doSubmitRules(rowData) {\n      var object = this.datacollection.datasource;\n\n      var SubmitRules = new ABSubmitRule();\n      SubmitRules.formLoad(this);\n      SubmitRules.fromSettings(this.settings.submitRules);\n      SubmitRules.objectLoad(object);\n\n      return SubmitRules.process({ data: rowData, form: this });\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormCustomPropertyComponentDefaults = {};\n\nconst ABViewFormCustomDefaults = {\n   key: \"fieldcustom\",\n   // {string} unique key for this view\n   icon: \"object-group\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.custom\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormCustom extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCustomPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormDatepickerPropertyComponentDefaults = {\n   timepicker: false,\n};\n\nconst ABViewFormDatepickerDefaults = {\n   key: \"datepicker\", // {string} unique key for this view\n   icon: \"calendar\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.datepicker\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormDatepickerCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormDatepickerDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormDatepickerDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormDatepickerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewFormFieldPropertyComponentDefaults = {\n   required: 0,\n   disable: 0,\n};\n\nmodule.exports = class ABViewFormComponentCore extends ABView {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static defaultValues() {\n      return ABViewFormFieldPropertyComponentDefaults;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let form = this.parentFormComponent();\n      if (form == null) return null;\n\n      let datacollection = form.datacollection;\n      if (datacollection == null) return null;\n\n      return datacollection;\n   }\n\n   field() {\n      if (this.settings.objectId) {\n         let object = this.AB.objectByID(this.settings.objectId);\n         if (!object) return null;\n\n         return object.fieldByID(this.settings.fieldId);\n      } else {\n         let form = this.parentFormComponent();\n         if (form == null) return null;\n\n         let object;\n         if (form._currentObject) {\n            object = form._currentObject;\n         } else {\n            let datacollection = form.datacollection;\n            if (datacollection == null) return null;\n\n            object = datacollection.datasource;\n         }\n\n         if (object == null) return null;\n\n         let field = object.fieldByID(this.settings.fieldId);\n         return field;\n      }\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormJsonPropertyComponentDefaults = {\n   type: \"string\", // 'string', 'systemObject' or 'filter'\n};\n\nconst ABViewFormJsonDefaults = {\n   key: \"json\", // {string} unique key for this view\n   icon: \"brackets-curly\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.json\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormJsonCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormJsonDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormJsonDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormJsonPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormNumberPropertyComponentDefaults = {\n   isStepper: 0,\n};\n\nconst ABViewFormNumberDefaults = {\n   key: \"numberbox\", // {string} unique key for this view\n   icon: \"hashtag\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.number\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormNumberCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormNumberDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormNumberDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormNumberPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewFormText instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"formLabel\"]);\n\n      var obj = super.toObj();\n      obj.views = []; // no subviews\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.isStepper =\n         this.settings.isStepper ||\n         ABViewFormNumberPropertyComponentDefaults.isStepper;\n\n      // convert from \"0\" => 0\n      this.settings.isStepper = parseInt(this.settings.isStepper);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormCustom = require(\"../../platform/views/ABViewFormCustom\");\n\nconst ABViewFormReadonlyPropertyComponentDefaults = {};\n\nconst ABViewFormReadonlyDefaults = {\n   key: \"fieldreadonly\", // {string} unique key for this view\n   icon: \"calculator\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.readonly\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormReadonly extends ABViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormReadonlyDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormReadonlyDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormReadonlyPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormSelectMultiplePropertyComponentDefaults = {\n   type: \"multicombo\", // 'richselect' or 'radio'\n};\n\nconst ABSelectMultipleDefaults = {\n   key: \"selectmultiple\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.selectmultiple\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormSelectMultipleCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABSelectMultipleDefaults\n      );\n   }\n\n   static common() {\n      return ABSelectMultipleDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormSelectMultiplePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormSelectSinglePropertyComponentDefaults = {\n   type: \"richselect\", // 'richselect' or 'radio'\n};\n\nconst ABSelectSingleDefaults = {\n   key: \"selectsingle\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.selectsingle\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormSelectSingleCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABSelectSingleDefaults\n      );\n   }\n\n   static common() {\n      return ABSelectSingleDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormSelectSinglePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormTextboxPropertyComponentDefaults = {\n   type: \"single\", // 'single', 'multiple' or 'rich'\n};\n\nconst ABViewFormTextboxDefaults = {\n   key: \"textbox\", // {string} unique key for this view\n   icon: \"i-cursor\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.textbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormTextboxCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormTextboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormTextboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTextboxPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormCustom = require(\"../../platform/views/ABViewFormCustom\");\n\nconst ABViewFormTreePropertyComponentDefaults = {};\n\nconst ABTreeDefaults = {\n   key: \"formtree\", // {string} unique key for this view\n   icon: \"sitemap\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.tree\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormTreeCore extends ABViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABTreeDefaults);\n   }\n\n   static common() {\n      return ABTreeDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTreePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewGanttPropertyComponentDefaults = {\n   dataviewID: \"\",\n   // {string}\n   // {ABDatacollection.id} of the datacollection that contains the data for\n   // the Gantt chart.\n\n   titleFieldID: \"\",\n   // {string}\n   // {ABFieldXXX.id} of the field that contains the value of the title\n   // ABFieldString, ABFieldLongText\n\n   startDateFieldID: \"\",\n   // {string}\n   // {ABFieldDate.id} of the field that contains the start date\n\n   endDateFieldID: \"\",\n   // {string}\n   // {ABFieldDate.id} of the field that contains the end date\n\n   durationFieldID: \"\",\n   // {string}\n   // {ABFieldNumber.id} of the field that contains the duration\n\n   progressFieldID: \"\",\n   // {string}\n   // {ABFieldNumber.id} of the field that marks the progress\n\n   notesFieldID: \"\",\n   // {string}\n   // {ABFieldXXX.id} of the field that contains the value of the title\n   // ABFieldString, ABFieldLongText\n};\n\nconst ABViewDefaults = {\n   key: \"gantt\", // {string} unique key for this view\n   icon: \"tasks\", // {string} fa-[icon] reference for this view\n   labelKey: \"Gantt\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewGanttCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewGanttPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      Object.keys(ABViewGanttPropertyComponentDefaults).forEach((k) => {\n         this.settings[k] =\n            this.settings[k] || ABViewGanttPropertyComponentDefaults[k];\n      });\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewGridPropertyComponentDefaults = {\n   label: \"\",\n   // {string}\n   // label is required and you can add more if the component needs them\n\n   // format:0  \t// 0 - normal, 1 - title, 2 - description\n   dataviewID: \"\",\n   // {uuid}\n   // uuid of ABDataCollection that drives the data for our Grid\n\n   padding: 17,\n   // {int}\n   // the default padding surrounding the component\n\n   showToolbar: 1,\n   // {bool}\n   // do we show our toolbar?\n\n   isEditable: 0,\n   // {bool}\n   // do we allow editing in the grid?\n\n   massUpdate: 0,\n   // {bool}\n   // do we allow the Mass Update capability? (row checkboxes and the\n   // MassUpdate popup)\n\n   allowDelete: 0,\n   // {bool}\n   // do we allow deleting multiple rows at a time? Mass Delete.\n\n   // isFilterable:0,\n\n   isSortable: 1,\n   // {bool}\n   // do we allow the sort options.\n\n   isExportable: 0,\n   // {bool}\n   // do we enable the webix export from grid capabilities?\n\n   // linkedObject:'',\n   // linkedField:'',\n   // linkedPage:'',\n   // linkedPageView:'',\n   // linkedEditPage:'',\n   // linkedEditPageForm:'',\n\n   detailsPage: \"\",\n   // {ABViewPage.id}\n   // the ABViewPage that has the details component.\n\n   detailsTab: \"\",\n   // {ABViewTab.id}\n   // the ABViewTab component, that has the details component.\n   // NOTE: if your details is embedded on a TAB, we need both the\n   // .detailsPage & .detailsTab to successfully show the item.\n\n   editPage: \"\",\n   // {ABViewPage.id}\n   // the ABViewPage that has the edit component.\n\n   editTab: \"\",\n   // {ABViewTab.id}\n   // the ABViewTab component, that has the edit component.\n   // NOTE: if your editor is embedded on a TAB, we need both the\n   // .editPage & .editTab to successfully show the form.\n\n   trackView: 0,\n   // {bool}\n   // Do we offer the ability to track changes to this object/row?\n\n   frozenColumnID: \"\",\n   // {ABField.id}\n   // id of column you want to stop freezing the left hand side at.\n\n   hiddenFields: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add hidden:true to\n\n   summaryColumns: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add the SUM footer to\n\n   countColumns: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add the Count footer to\n\n   // TODO: get rid of objectWorkspace!\n   objectWorkspace: {\n      // sortFields:[], // array of columns with their sort configurations\n      // filterConditions:[], // array of filters to apply to the data table\n      frozenColumnID: \"\", // id of column you want to stop freezing\n      hiddenFields: [], // array of [ids] to add hidden:true to\n      summaryColumns: [],\n      countColumns: [],\n   },\n   gridFilter: {\n      filterOption: 1,\n      userFilterPosition: \"toolbar\",\n      isGlobalToolbar: 1,\n   },\n   // summaryFields: [], // array of [field ids] to add the summary column in footer\n   // countFields: [], // array of [field ids] to add the summary column in footer\n\n   height: 0,\n   // {int}\n   // The Height of our Grid.\n   // See ../views/ABViewDataview.js\n\n   hideHeader: 0,\n   labelAsField: 0,\n   hideButtons: 0,\n   groupBy: \"\", // id of field\n\n   // TODO: add to ABDesigner.interface design:\n   columnConfig: [],\n   // {array} [ {columnHeader}, {columnHeader} ... ]\n   // An array of column headers for the grid to display. These should\n   // be generated at Design time, and can allow the designer to ORDER the\n   // columns, assign column widths, fillspace, etc...\n   //    {columnHeader}\n   //    The minimum amount of information a Grid needs for it's customization\n   //    .id {string} ABField.columnName\n   //    .fieldId {string} ABField.id\n   //    .width {int}\n   //    .fillspace {bool}\n   //    .minwidth\n   //\n   //    When displaying column headers, we will ask the\n   //    CurrentObject.columnHeaders(), and then modify them with our settings\n   //    here.\n\n   saveLocal: 1,\n   // {bool}\n   // Allow saving of local changes to our grid display. This will enable\n   // a user to modify the Grid display locally.\n};\n\nconst ABViewDefaults = {\n   key: \"grid\", // {string} unique key for this view\n   icon: \"table\", // {string} fa-[icon] reference for this view\n   labelKey: \"Grid\", // {string} the multilingual label key for the class label\n};\n\n/**\n * @function settingsDefault()\n * Verifies a given field is set and if not, defaults to what we havein our\n * ABViewGridPropertyComponentDefaults.\n * NOTE: use this fn() for values that are NOT TRUTHY ... so not for numeric\n * 1 or 0.\n * @param {hash} base\n *        The current settings value hash.\n * @param {string} field\n *        The parameter we are checking.\n */\nfunction settingsDefault(base, field) {\n   if (typeof base[field] == \"undefined\") {\n      base[field] = ABViewGridPropertyComponentDefaults[field];\n      return;\n   }\n   base[field] = base[field] || ABViewGridPropertyComponentDefaults[field];\n}\n\n/**\n * @function settingsDefaultJSON()\n * Verifies a given field is set and if not, defaults to what we havein our\n * ABViewGridPropertyComponentDefaults.\n * NOTE: use this fn() for values that ARE TRUTHY ... so for numeric 1 or 0\n * @param {hash} base\n *        The current settings value hash.\n * @param {string} field\n *        The parameter we are checking.\n */\nfunction settingsDefaultJSON(base, field) {\n   try {\n      base[field] = JSON.parse(base[field]);\n   } catch (e) {\n      base[field] = ABViewGridPropertyComponentDefaults[field];\n   }\n}\n\nmodule.exports = class ABViewGridCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewGridPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      settingsDefault(this.settings, \"dataviewID\");\n\n      // Convert to boolean\n      // these values are sometimes 0 (number) at this point so the JSON.parse\n      // with the || (or) statement was always falling to the default so I am\n      // trying to parse the value...if it fails we use the default value\n      settingsDefaultJSON(this.settings, \"padding\");\n      settingsDefaultJSON(this.settings, \"showToolbar\");\n      settingsDefaultJSON(this.settings, \"isEditable\");\n      settingsDefaultJSON(this.settings, \"massUpdate\");\n      settingsDefaultJSON(this.settings, \"allowDelete\");\n      // this.settings.isFilterable = JSON.parse(this.settings.isFilterable || ABViewGridPropertyComponentDefaults.isFilterable);\n      settingsDefaultJSON(this.settings, \"isSortable\");\n      settingsDefaultJSON(this.settings, \"isExportable\");\n      settingsDefaultJSON(this.settings, \"hideHeader\");\n      settingsDefaultJSON(this.settings, \"labelAsField\");\n      settingsDefaultJSON(this.settings, \"hideButtons\");\n      settingsDefaultJSON(this.settings, \"columnConfig\");\n      settingsDefaultJSON(this.settings, \"saveLocal\");\n\n      this.settings.gridFilter =\n         this.settings.gridFilter ||\n         ABViewGridPropertyComponentDefaults.gridFilter;\n\n      try {\n         this.settings.gridFilter.filterOption = JSON.parse(\n            this.settings.gridFilter.filterOption\n         );\n      } catch (e) {\n         this.settings.gridFilter.filterOption =\n            ABViewGridPropertyComponentDefaults.gridFilter.filterOption;\n      }\n\n      try {\n         this.settings.gridFilter.isGlobalToolbar = JSON.parse(\n            this.settings.gridFilter.isGlobalToolbar\n         );\n      } catch (e) {\n         this.settings.gridFilter.isGlobalToolbar =\n            ABViewGridPropertyComponentDefaults.gridFilter.isGlobalToolbar;\n      }\n\n      // this.settings.linkedObject = this.settings.linkedObject || ABViewGridPropertyComponentDefaults.linkedObject;\n      // this.settings.linkedField = this.settings.linkedField || ABViewGridPropertyComponentDefaults.linkedField;\n      // this.settings.linkedPage = this.settings.linkedPage || ABViewGridPropertyComponentDefaults.linkedPage;\n      // this.settings.linkedPageView = this.settings.linkedPageView || ABViewGridPropertyComponentDefaults.linkedPageView;\n      // this.settings.linkedEditPage = this.settings.linkedEditPage || ABViewGridPropertyComponentDefaults.linkedEditPage;\n      // this.settings.linkedEditPageForm = this.settings.linkedEditPageForm || ABViewGridPropertyComponentDefaults.linkedEditPageForm;\n\n      settingsDefault(this.settings, \"detailsPage\");\n      settingsDefault(this.settings, \"editPage\");\n      settingsDefault(this.settings, \"detailsTab\");\n      settingsDefault(this.settings, \"editTab\");\n      settingsDefaultJSON(this.settings, \"trackView\");\n\n      // TODO: remove objectworkspace!\n      // this.settings.objectWorkspace =\n      //    this.settings.objectWorkspace ||\n      //    ABViewGridPropertyComponentDefaults.objectWorkspace;\n\n      // if (typeof this.settings.objectWorkspace != \"undefined\") {\n      //    if (typeof this.settings.objectWorkspace.sortFields == \"undefined\")\n      //       this.settings.objectWorkspace.sortFields = [];\n      //    if (\n      //       typeof this.settings.objectWorkspace.filterConditions == \"undefined\"\n      //    )\n      //       this.settings.objectWorkspace.filterConditions = [];\n      //    if (typeof this.settings.objectWorkspace.frozenColumnID == \"undefined\")\n      //       this.settings.objectWorkspace.frozenColumnID = \"\";\n      //    if (typeof this.settings.objectWorkspace.hiddenFields == \"undefined\")\n      //       this.settings.objectWorkspace.hiddenFields = [];\n      //    if (typeof this.settings.objectWorkspace.summaryColumns == \"undefined\")\n      //       this.settings.objectWorkspace.summaryColumns = [];\n      //    if (typeof this.settings.objectWorkspace.countColumns == \"undefined\")\n      //       this.settings.objectWorkspace.countColumns = [];\n      // }\n\n      var owFields = [\n         \"sortFields\",\n         \"filterConditions\",\n         \"frozenColumnID\",\n         \"hiddenFields\",\n         \"summaryColumns\",\n         \"countColumns\",\n      ];\n      // Transition: if we have an .objectWorkspace, copy those values in here:\n      if (this.settings.objectWorkspace) {\n         owFields.forEach((f) => {\n            if (!this.settings[f])\n               this.settings[f] = this.settings.objectWorkspace[f];\n         });\n      }\n\n      // make sure they have actual default values now.\n      owFields.forEach((f) => {\n         settingsDefault(this.settings, f);\n      });\n\n      // we are not allowed to have sub views:\n      this._views = [];\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   removeField(field, cb) {\n      let shouldSave = false;\n\n      // check to see if there is a frozenColumnID and if it matches the\n      // deleted field\n      if (this.settings?.frozenColumnID == field.columnName) {\n         // remove the column name from the frozen column id\n         this.settings.frozenColumnID = \"\";\n         // flag the object to be saved later\n         shouldSave = true;\n      }\n\n      // check to see if there are hidden fields\n      if (this.settings.hiddenFields?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.hiddenFields.indexOf(field.columnName);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.hiddenFields.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n\n      // check to see if there are Summary fields\n      if (this.settings.summaryColumns?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.summaryColumns.indexOf(field.id);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.summaryColumns.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n\n      // check to see if there are hidden fields\n      if (this.settings.countColumns?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.countColumns.indexOf(field.id);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.countColumns.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n      // if settings were changed call the callback\n\n      cb(null, shouldSave);\n   }\n\n   copyUpdateProperyList() {\n      return [\"detailsPage\", \"detailsTab\", \"editPage\", \"editTab\"];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewImagePropertyComponentDefaults = {\n   filename: \"\",\n   width: 200,\n   height: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"image\", // {string} unique key for this view\n   icon: \"picture-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"Image\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewImageCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewImagePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewImagePropertyComponentDefaults.width\n      );\n      this.settings.height = parseInt(\n         this.settings.height || ABViewImagePropertyComponentDefaults.height\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewKanbanPropertyComponentDefaults = {\n   dataviewID: null,\n   // {uuid}\n   // The ABDataCollection.uuid that we are using to store the data.\n   // NOTE: we actually use the DC to get the ABObject it is connected to.\n\n   editFields: [],\n   // {array}\n   // An array of {ABField.id} that determines which fields should show up\n   // in the editor.\n\n   verticalGroupingField: \"\",\n   // {ABField.id}\n   // the .id of the ABField instance that determines the Vertical Grouping\n   // of the Kanban.\n\n   horizontalGroupingField: \"\",\n   // {ABField.id}\n   // the .id of the ABField instance that determines the horizontal Grouping\n   // of the Kanban.\n\n   ownerField: \"\",\n   // {ABFieldUser.id}\n   // the .id of the ABFieldUser instance that determines the owner of the\n   // entries.\n\n   template: \"\",\n   // {json}\n   // The {ABViewText} definition used to display the template for this KanBan.\n   //\n   // A display template used for displaying the information in each Card. The\n   // template is a basic string with special placeholders:  {field.id}\n   // Given a row of data, the current object will scan the template for any\n   // placeholders matching one of it's fields, and then update it with the\n   // current value.\n};\n\nconst ABViewDefaults = {\n   key: \"kanban\",\n   // {string}\n   // unique key identifier for this ABView object\n\n   icon: \"columns\",\n   // {string}\n   // font-awesome icon reference: (without 'fa-' )\n\n   labelKey: \"Kanban\",\n   // {string}\n   // the multilingual label key\n   // NOTE: will be used as L(labelKey)\n};\n\nmodule.exports = class ABViewKanbanCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // set a default .template value\n      if (!this.settings.template) {\n         this.settings.template = { id: `${this.id}_template`, key: \"text\" };\n         this.settings.template.text = this.settings.textTemplate;\n      }\n\n      this.TextTemplate = this.AB.viewNewDetatched(this.settings.template);\n   }\n\n   toObj() {\n      var obj = super.toObj();\n      obj.settings.template = this.TextTemplate.toObj();\n      // NOTE: this corrects the initial save where this.id == undefined\n      // all the rest will set the .id correctly.\n      obj.settings.template.id = `${this.id}_template`;\n      return obj;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewKanbanPropertyComponentDefaults;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewLabelPropertyComponentDefaults = {\n   text: \"\",\n   format: 0, // 0 - normal, 1 - title, 2 - description\n   alignment: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"label\", // {string} unique key for this view\n   icon: \"font\", // {string} fa-[icon] reference for this view\n   labelKey: \"Label\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewLabelPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"text\"]);\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values); // <-- this performs the translations\n\n      // if this is being instantiated on a read from the Property UI,\n      // .text is coming in under .settings.label\n      this.text = values.text || values.settings.text || \"*text\";\n\n      this.settings.format =\n         this.settings.format || ABViewLabelPropertyComponentDefaults.format;\n      this.settings.alignment =\n         this.settings.alignment ||\n         ABViewLabelPropertyComponentDefaults.alignment;\n\n      // we are not allowed to have sub views:\n      this._views = [];\n\n      // convert from \"0\" => 0\n      this.settings.format = parseInt(this.settings.format);\n\n      this.translate(this, this, [\"label\", \"text\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   //// Allow external interface to manipulate our settings:\n\n   /**\n    * @method formatNormal\n    * display text in the normal format.\n    */\n   formatNormal() {\n      this.settings.format = 0;\n   }\n\n   /**\n    * @method formatTitle\n    * display text as a Title.\n    */\n   formatTitle() {\n      this.settings.format = 1;\n   }\n\n   /**\n    * @method formatDescription\n    * display text as a description.\n    */\n   formatDescription() {\n      this.settings.format = 2;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\nconst ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst PropertyComponentDefaults = {\n   label: \"\",\n   numColumns: 1, // The number of columns for this layout\n};\n\nconst ABViewDefaults = {\n   key: \"layout\", // {string} unique key for this view\n   icon: \"columns\", // {string} fa-[icon] reference for this view\n   labelKey: \"Layout\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLayoutCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return PropertyComponentDefaults;\n   }\n\n   /**\n    * @method addColumn\n    * method to actually add a new ABView as one of our columns.\n    * This is called by the static .addView() method.\n    */\n   addColumn() {\n      this._views.push(\n         this.application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n            },\n            this.application,\n            this\n         )\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      if (isEdited) {\n         // if the layout component is being edited in the editor (isEdited == true)\n         // then we return [];\n         return [];\n      } else {\n         // the layout view doesn't care what components are offered, it get's\n         // the list from it's parent view.\n         // ## NOTE: layout views should not be root views.\n         if (this.parent) {\n            return this.parent.componentList(false);\n         } else {\n            return [];\n         }\n      }\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewListPropertyComponentDefaults = {\n   dataviewID: null,\n   field: null,\n   height: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"list\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"List\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewListPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   field() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var object = dv.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.field);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewMenuPropertyComponentDefaults = {\n   orientation: \"x\",\n   buttonStyle: \"ab-menu-default\",\n   menuAlignment: \"ab-menu-left\",\n   menuInToolbar: 1,\n   menuPadding: 10,\n   menuTheme: \"bg_gray\",\n   menuPosition: \"left\",\n   menuTextLeft: \"\",\n   menuTextRight: \"\",\n   menuTextCenter: \"\",\n   // [\n   // \t\t{\n   //\t\t\tpageId: uuid,\n   //\t\t\ttabId: uuid,\n   //\t\t\ttype: string, // \"page\", \"tab\"\n   //\t\t\tisChecked: bool,\n   //\t\t\taliasname: string,\n   //\t\t\ttranslations: []\n   //\t\t}\n   // ]\n   pages: [],\n   order: [],\n};\n\nconst ABMenuDefaults = {\n   key: \"menu\", // {string} unique key for this view\n   icon: \"th-large\", // {string} fa-[icon] reference for this view\n   labelKey: \"Menu\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewMenuCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABMenuDefaults);\n   }\n\n   static common() {\n      return ABMenuDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewMenuPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewMenu instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\n         \"menuTextLeft\",\n         \"menuTextCenter\",\n         \"menuTextRight\",\n      ]);\n      if (this.settings.pages) {\n         this.settings.pages.forEach((page) => {\n            this.unTranslate(page, page, [\"aliasname\"]);\n         });\n      }\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.translate(this, this, [\n         \"menuTextLeft\",\n         \"menuTextCenter\",\n         \"menuTextRight\",\n      ]);\n\n      this.settings.pages =\n         this.settings.pages || ABViewMenuPropertyComponentDefaults.pages;\n\n      for (var i = 0; i < this.settings.pages.length; i++) {\n         var page = this.settings.pages[i];\n         if (page instanceof Object) {\n            page.isChecked = JSON.parse(page.isChecked || false);\n\n            this.translate(page, page, [\"aliasname\"]);\n         }\n         // Compatible with old data\n         else if (typeof page == \"string\") {\n            this.settings.pages[i] = {\n               pageId: page,\n               isChecked: true,\n            };\n         }\n      }\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   ClearPagesInView(view) {\n      // clear menu items\n      if (view && view.count() > 1) {\n         view.find({}).forEach((item) => {\n            view.remove(item.id);\n         });\n      }\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   AddPagesToView(view, pages) {\n      if (!view || !pages) return;\n\n      (pages || []).forEach((displayPage) => {\n         if (displayPage.isChecked) {\n            let existsPage = this.application.pages(\n               (p) => p.id == displayPage.pageId,\n               true\n            )[0];\n            if (!existsPage) return;\n\n            var pageAccessLevel = existsPage.getUserAccess();\n            if (pageAccessLevel == 0) return;\n\n            if (displayPage.tabId) {\n               let existsTab = this.application.views(\n                  (v) => v.id == displayPage.tabId,\n                  true\n               )[0];\n               if (!existsTab) return;\n\n               var tabAccessLevel = existsTab.getUserAccess();\n               if (tabAccessLevel == 0) return;\n            }\n\n            let label = this.getAliasname(displayPage);\n            // create a temporaty store for the menu item\n            var menuItem;\n            // check if page has a parent or not\n            if (displayPage.parent && displayPage.parent != \"0\") {\n               // if page has a parent attempt to grab its submenu\n               menuItem = view.getSubMenu(displayPage.parent);\n            } else {\n               // if the page doesn't have parent use the current menu\n               menuItem = view;\n            }\n            // if the menu item doesn't have a menu selected find it\n            if (menuItem == null) {\n               // get the menu item\n               var curMenu = view.getMenuItem(displayPage.parent);\n               // create a submenu placeholder\n               curMenu.submenu = [];\n               // update the menu with the new submenu included\n               view.refresh(displayPage.parent);\n               // get the submenu we just created\n               menuItem = view.getSubMenu(displayPage.parent);\n            }\n            if (menuItem.exists(displayPage.tabId || displayPage.pageId))\n               return;\n            // add a new item to the menu/submenu\n            menuItem.add(\n               {\n                  id: displayPage.tabId || displayPage.pageId,\n                  value: label,\n                  type: displayPage.type,\n                  pageId: displayPage.pageId,\n                  icon: displayPage.icon\n                     ? \"fa fa-fw fa-\" + displayPage.icon\n                     : \"\",\n               },\n               displayPage.position ? parseInt(displayPage.position) : 0\n            );\n         }\n      });\n   }\n\n   /**\n    * @method getAliasname\n    * @param pageInfo - an object in settings\n    * {\n    * \tpageId: uuid,\n    * \ttabId: uuid,\n    * \ttype: string, - \"page\" or \"tab\"\n    * \tisChecked: bool,\n    * \taliasname: string,\n    *\ttranslations: []\n    *}\n    *\n    * @return {string}\n    */\n   getAliasname(pageInfo) {\n      var lang = this.AB.Multilingual.currentLanguage();\n      var translation = pageInfo.translations.filter((t) => {\n         return t.language_code == lang;\n      });\n\n      var label = \"\";\n\n      if (translation.length) {\n         if (translation[0].aliasname) {\n            label = translation[0].aliasname;\n         } else if (translation[0].label) {\n            label = translation[0].label;\n         }\n      }\n\n      // Just in case there isn't one stored in the translations yet\n      if (!label && pageInfo.aliasname) {\n         label = pageInfo.aliasname;\n      }\n\n      // if alias is empty, then find label of page or tab\n      if (\n         !label ||\n         // remove [en] or [th] etc.\n         !label.replace(/\\[.{2,}\\]/g, \"\")\n      ) {\n         // first check to see if we are actually on a page\n         // if not recursivly look up for the nearest parent page\n         var pageId;\n         if (pageInfo.pageId) {\n            pageId = pageInfo.pageId;\n         } else {\n            pageId = this.getParentPageId(pageInfo);\n         }\n         // find label of the actual page\n         var page = this.application.pages((p) => p.id == pageId, true)[0];\n         if (page) {\n            // find label of the tab view\n            if (pageInfo.type == \"tab\" || pageInfo.key == \"viewcontainer\") {\n               var tabView = page.views(\n                  (v) => v.id == pageInfo.tabId || v.id == pageInfo.id,\n                  true\n               )[0];\n               if (tabView) {\n                  label = tabView.label;\n               }\n            } else {\n               label = page.label;\n            }\n         }\n      }\n\n      return label;\n   }\n\n   getParentPageId(currentView) {\n      if (currentView.key != \"page\") {\n         return this.getParentPageId(currentView.parent);\n      } else {\n         return currentView.id;\n      }\n   }\n\n   copy(lookUpIds, parent) {\n      return super.copy(lookUpIds, parent).then((result) => {\n         // update ids of page's settings\n         (result.settings.pages || []).forEach((p, i) => {\n            let page = result.settings.pages[i];\n\n            // Compatible with old data\n            if (typeof page == \"string\") {\n               result.settings.pages[i] = lookUpIds[page];\n            } else {\n               page.pageId = lookUpIds[page.pageId];\n               page.tabId = lookUpIds[page.tabId];\n            }\n         });\n\n         return result.save().then(() => {\n            return result;\n         });\n      });\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\nconst ABViewPDFImporterPropertyComponentDefaults = {\n   dataviewID: null,\n   fieldID: null,\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalue: {string}\n   //\t}]\n   submitRules: [],\n};\n\nconst ABViewDefaults = {\n   key: \"pdfImporter\", // {string} unique key for this view\n   icon: \"file-pdf-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"PDF Importer\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewPDFImporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPDFImporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.dataviewID =\n         this.settings.dataviewID ??\n         ABViewPDFImporterPropertyComponentDefaults.dataviewID;\n\n      this.settings.fieldID =\n         this.settings.fieldID ??\n         ABViewPDFImporterPropertyComponentDefaults.fieldID;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.settings = obj.settings ?? {};\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   doSubmitRules(rowDatas) {\n      const object = this.datacollection.datasource;\n\n      const SubmitRules = new ABSubmitRule();\n      SubmitRules.formLoad(this);\n      SubmitRules.fromSettings(this.settings.submitRules);\n      SubmitRules.objectLoad(object);\n\n      if (rowDatas && !Array.isArray(rowDatas)) rowDatas = [rowDatas];\n\n      rowDatas?.forEach((rowData) => {\n         SubmitRules.process({ data: rowData, form: this });\n      });\n   }\n};\n","/*\n * ABViewPage\n *\n * An ABView that represents a \"Page\" in the system.\n *\n * Pages are\n *\t- allowed to be displayed in the interface list\n *\t- return a full list of components that can be added to the view editor\n *\n *\n */\n\nconst ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n// var ABViewManager = require(\"../ABViewManager\");\n\n// function L(key, altText) {\n//     return AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABViewDefaults = {\n   key: \"page\", // unique key identifier for this ABView\n   icon: \"file\", // icon reference: (without 'fa-' )\n};\n\nconst ABPropertyComponentDefaults = {\n   type: \"page\", // 'page', 'popup' or 'reportPage'\n   popupWidth: 700,\n   popupHeight: 450,\n   pageWidth: null,\n   fixedPageWidth: 0,\n   pageBackground: \"ab-background-default\",\n};\n\nmodule.exports = class ABViewPageCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'viewKey',\t\t\t\t// unique key for this View Type\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this View Type\n\n      //\t\tname: '',\t\t\t\t\t// unique page name\n\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      //\t\t},\n\n      //\t\ttranslations:[]\n      // \t}\n\n      this.parent = null; // will be set by the pageNew() that creates this obj.\n      // {obj} .parent\n      // this points to the ABView object that manages this object as a child.\n      // this param is shared across ABViews as well as ABViewPage, but has\n      // different implications ... so we default an ABViewPage.parent = null\n      // and the place that Creates the Page must assign the .parent externally.\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   static getPageActionKey(view) {\n      return [\n         \"opstools\",\n         \"AB_\" + String(view.application.name).replace(/[^a-z0-9]/gi, \"\"),\n         String(view.name)\n            .replace(/[^a-z0-9]/gi, \"\")\n            .toLowerCase(),\n         \"view\",\n      ].join(\".\");\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewPage instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.name = this.name;\n\n      obj.myAppID = this.myAppID;\n\n      // icon of popup page\n      if (this.settings.type == \"popup\") obj.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") obj.label = obj.name;\n\n      // compile our pages\n      obj.pageIDs = (this._pages || []).map((p) => p.id);\n\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // icon of popup page\n      if (values.settings.type == \"popup\") this.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") this.label = this.name;\n\n      // track which application this Page belongs to:\n      this.myAppID = values.myAppID;\n      if (!this.myAppID && this.application) {\n         this.myAppID = this.application.id;\n      }\n\n      // now properly handle our sub pages.\n      var pages = [];\n      (values.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            pages.push(this.pageNew(def));\n         } else {\n            this.AB.error(\n               `App[${this.application.name}][${this.application.id}]->Page[${this.name}][${this.id}] referenced an unknown Page[${id}]`\n            );\n         }\n      });\n      this._pages = pages;\n\n      // the default columns of ABView is 1\n      this.settings.columns = this.settings.columns || 1;\n      this.settings.gravity = this.settings.gravity || [1];\n\n      // convert from \"0\" => 0\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABViewPage\n            // be sure to remove any of it's ABViewPages as well\n            // This cleans out any dangling ABDefinitions and cleans up the\n            // OpsPortal Permissions:\n\n            var allPageDeletes = [];\n            var allPages = this.pages();\n            this._pages = [];\n            // doing ._pages = [] prevents any of my updates when\n            // a sub-page is .destroy()ed\n\n            allPages.forEach((p) => {\n               allPageDeletes.push(p.destroy());\n            });\n            return Promise.all(allPageDeletes);\n         })\n         .then(() => {\n            var parent = this.parent || this.application;\n\n            return parent.pageRemove(this);\n         })\n         .then(() => {\n            return super.destroy();\n         });\n\n      // return new Promise((resolve, reject) => {\n      //    // verify we have been .save() before:\n      //    if (this.id) {\n      //       this.application\n      //          .viewDestroy(this)\n      //          .then(() => {\n      //             // remove the page in list\n      //             var parent = this.parent || this.application;\n      //             var remainingPages = parent.pages((p) => {\n      //                return p.id != this.id;\n      //             });\n      //             parent._pages = remainingPages;\n\n      //             resolve();\n      //          })\n      //          .catch(reject);\n      //    } else {\n      //       resolve(); // nothing to do really\n      //    }\n      // });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABViewPage\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // now we can persist ourself in our parent\n            var parent = this.parent || this.application;\n\n            return parent.pageInsert(this);\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    *\n    * return an array of all the ABViewPages for this ABViewPage.\n    *\n    * @param {fn} filter\t\ta filter fn to return a set of ABViewPages that this fn\n    *\t\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\tflag to find in sub pages\n    *\n    * @return {array}\t\t\tarray of ABViewPages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         if (this._pages && this._pages.length > 0) {\n            result = this._pages.filter(filter);\n\n            if (result.length < 1) {\n               this._pages.forEach((p) => {\n                  var subPages = p.pages(filter, deep);\n                  if (subPages && subPages.length > 0) {\n                     result = subPages;\n                  }\n               });\n            }\n         }\n      }\n      // find root pages\n      else {\n         result = this._pages.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method pageInsert()\n    *\n    * save the given ABViewPage in our ._pages array and persist the current\n    * values if they changed.\n    *\n    * @param {ABViewPage} page The instance of the page to save.\n    * @return {Promise}\n    */\n   pageInsert(page) {\n      var isIncluded = this.pages((o) => o.id === page.id).length > 0;\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._pages.push(page);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABViewPage that is tied to this\n    * ABViewPage.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      // make sure this is an ABViewPage description\n      values.key = ABViewDefaults.key;\n\n      // NOTE: this returns a new ABView component.\n      // when creating a new page, the 3rd param should be null, to signify\n      // the top level component.\n      var page = this.application.viewNew(values, this.application, null);\n      page.parent = this;\n      return page;\n   }\n\n   /**\n    * @method pageRemove()\n    *\n    * remove the given ABViewPage from our ._pages array and persist the current\n    * values.\n    *\n    * @param {ABViewPage} page The instance of the page to remove.\n    * @return {Promise}\n    */\n   pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages(function (p) {\n         return p.id != page.id;\n      });\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method urlView()\n    * return the url pointer for views in this application.\n    * @return {string}\n    */\n   urlPage() {\n      return this.urlPointer() + \"/_pages/\";\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this view.  This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this view object.\n    * @return {string}\n    */\n   urlPointer() {\n      if (this.parent) {\n         return this.parent.urlPage() + this.id;\n      } else {\n         return this.application.urlPage() + this.id;\n      }\n   }\n\n   updateIcon(obj) {\n      // icon of page\n      if (obj.settings.type == \"popup\") {\n         obj.icon = \"clone\";\n      } else {\n         obj.icon = ABViewDefaults.icon;\n      }\n      return obj;\n   }\n\n   /**\n    * @method clone()\n    * clone the defintions of this ABViewPage object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {obj}\n    *        defs of the copied ABView\n    */\n   clone(lookUpIds, parent) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // copy\n      let result = super.clone(lookUpIds, parent);\n\n      // page's name should not be duplicate\n      result.name = null;\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABViewPage object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // now continue with the default .copy()\n      return super.copy(lookUpIds, parent, options);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewPivotPropertyComponentDefaults = {\n   dataviewID: null,\n   removeMissed: 0,\n   totalColumn: 0,\n   separateLabel: 0,\n   min: 0,\n   max: 0,\n   height: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"pivot\", // {string} unique key for this view\n   icon: \"cube\", // {string} fa-[icon] reference for this view\n   labelKey: \"Pivot\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewPivotCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPivotPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // Convert to boolean\n      this.settings.removeMissed = JSON.parse(\n         this.settings.removeMissed ||\n            ABViewPivotPropertyComponentDefaults.removeMissed\n      );\n      this.settings.totalColumn = JSON.parse(\n         this.settings.totalColumn ||\n            ABViewPivotPropertyComponentDefaults.totalColumn\n      );\n      this.settings.separateLabel = JSON.parse(\n         this.settings.separateLabel ||\n            ABViewPivotPropertyComponentDefaults.separateLabel\n      );\n      this.settings.min = JSON.parse(\n         this.settings.min || ABViewPivotPropertyComponentDefaults.min\n      );\n      this.settings.max = JSON.parse(\n         this.settings.max || ABViewPivotPropertyComponentDefaults.max\n      );\n\n      if (this.settings.structure && typeof this.settings.structure == \"string\")\n         this.settings.structure = JSON.parse(this.settings.structure);\n\n      // \"0\" -> 0\n      this.settings.height = parseInt(\n         this.settings.height || ABViewPivotPropertyComponentDefaults.height\n      );\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.views = [];\n      obj.settings = obj.settings || {};\n\n      if (this.settings.structure)\n         obj.settings.structure = JSON.stringify(this.settings.structure);\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewReportManagerPropertyComponentDefaults = {\n   dataviewID: \"\",\n   dataviewFields: {\n      name: \"\", // id of a String field\n      text: \"\", // id of a LongText field\n      queries: \"\", // id of a json field\n   },\n   datacollectionIDs: [],\n   editMode: 0,\n   hideCommonTab: 0,\n   hideDataTab: 0,\n   hideViewTab: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"reportsManager\", // {string} unique key for this view\n   icon: \"wpforms\", // {string} fa-[icon] reference for this view\n   labelKey: \"Reports Manager\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewReportsManagerCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewReportManagerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      const parsedSettings = {};\n\n      Object.keys(ABViewReportManagerPropertyComponentDefaults).forEach(\n         (key1) => {\n            if (\n               typeof ABViewReportManagerPropertyComponentDefaults[key1] ===\n                  \"object\" &&\n               !Array.isArray(\n                  ABViewReportManagerPropertyComponentDefaults[key1]\n               )\n            ) {\n               parsedSettings[key1] = {};\n\n               Object.keys(\n                  ABViewReportManagerPropertyComponentDefaults[key1]\n               ).forEach((key2) => {\n                  parsedSettings[key1][key2] =\n                     this.settings[key1]?.[key2] ??\n                     ABViewReportManagerPropertyComponentDefaults[key1][key2];\n               });\n\n               return;\n            }\n\n            parsedSettings[key1] =\n               this.settings[key1] ??\n               ABViewReportManagerPropertyComponentDefaults[key1];\n         }\n      );\n\n      this.settings = parsedSettings;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.settings = obj.settings || {};\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewSchedulerPropertyComponentDefaults = {\n   readonly: 0,\n   dataviewID: \"\",\n   dataviewFields: {\n      name: \"\", // id of a String field\n      start: \"\", // id of a DateTime field\n      end: \"\", // id of a DateTime field\n      allDay: \"\", // id of a Checkbox field\n      repeat: \"\", // id of a String field\n      calendar: \"\", // id of a String field\n      color: \"\", // id of a String field\n      sectionID: \"\", // id of a String field\n      unitID: \"\", // id of a String field\n      notes: \"\", // id of a LongText field\n      originID: \"\", // id of a LongText field\n   },\n   calendarDataviewID: \"\",\n   calendarDataviewFields: {\n      title: \"\", // id of a String field\n      color: \"\", // id of a String field\n      active: \"\", // id of a Checkbox field\n   },\n   timeline: {\n      day: 1,\n      week: 1,\n      month: 1,\n      year: 1,\n      agenda: 1,\n      timeline: 1,\n      units: 1,\n   },\n   timelineSectionList: \"\",\n   unitList: \"\",\n   export: {\n      excel: 0,\n      csv: 0,\n      pdf: 0,\n   },\n};\n\nconst ABViewDefaults = {\n   key: \"scheduler\",\n   // {string}\n   // unique key for this view\n\n   icon: \"calendar\",\n   // {string}\n   // fa-[icon] reference for this view\n\n   labelKey: \"Scheduler\",\n   // {string}\n   // the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewSchedulerCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      this._object = null;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewSchedulerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.unTranslate(this, this, [\"scheduler\"]);\n\n      const obj = super.toObj();\n\n      obj.views = [];\n\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings = this.settings || {};\n      this.settings.dataviewFields = this.settings.dataviewFields || {};\n      this.settings.calendarDataviewFields =\n         this.settings.calendarDataviewFields || {};\n      this.settings.timeline = this.settings.timeline || {};\n      this.settings.export = this.settings.export || {};\n\n      const parsedSettings = {};\n\n      Object.keys(ABViewSchedulerPropertyComponentDefaults).forEach((key1) => {\n         if (\n            typeof ABViewSchedulerPropertyComponentDefaults[key1] === \"object\"\n         ) {\n            parsedSettings[key1] = {};\n\n            Object.keys(ABViewSchedulerPropertyComponentDefaults[key1]).forEach(\n               (key2) => {\n                  parsedSettings[key1][key2] =\n                     this.settings[key1][key2] ??\n                     ABViewSchedulerPropertyComponentDefaults[key1][key2];\n               }\n            );\n\n            return;\n         }\n\n         parsedSettings[key1] =\n            this.settings[key1] ??\n            ABViewSchedulerPropertyComponentDefaults[key1];\n      });\n\n      this.settings = parsedSettings;\n\n      // if this is being instantiated on a read from the Property UI,\n      this.scheduler =\n         values.scheduler || ABViewSchedulerPropertyComponentDefaults.scheduler;\n\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.translate(this, this, [\"scheduler\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\nconst ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewTabPropertyComponentDefaults = {\n   height: 0,\n   minWidth: 0,\n   stackTabs: 0, // use sidebar view instead of tabview\n   darkTheme: 0, // set dark theme css or not\n   sidebarWidth: 200, // width of sidebar menu when stacking tabs\n   sidebarPos: \"left\", // the default position of sidebar\n   iconOnTop: 0, // do you want to put the icon above the text label?\n   hintID: null, // store the ID of a webix hint tutorial for this view\n};\n\nconst ABViewTabDefaults = {\n   key: \"tab\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"Tab\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewTabCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewTabDefaults);\n   }\n\n   static common() {\n      return ABViewTabDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewTabPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(this.settings.height);\n      this.settings.minWidth = parseInt(this.settings.minWidth || 0);\n      this.settings.stackTabs = parseInt(this.settings.stackTabs);\n      this.settings.darkTheme = parseInt(this.settings.darkTheme);\n      this.settings.sidebarWidth = parseInt(this.settings.sidebarWidth);\n      this.settings.sidebarPos = this.settings.sidebarPos;\n      this.settings.iconOnTop = parseInt(this.settings.iconOnTop);\n   }\n\n   addTab(tabName, tabIcon) {\n      return this.application\n         .viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: tabName,\n               tabicon: tabIcon,\n            },\n            this.application,\n            this\n         )\n         .save();\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewTextPropertyComponentDefaults = {\n   text: \"\",\n   // {string}\n   // A multilingual text template that is used to display a given set of\n   // values.\n\n   height: 0,\n   // {integer}\n   // The default height of this widget.\n\n   dataviewID: null,\n   // {uuid}\n   // The {ABDataCollection.id} of the datacollection this ABViewText is\n   // pulling data from.\n   // In most usage situations this ABView is tied to the data in an\n   // ABDataCollection.  However, it is possible for an ABObject to be\n   // directly assigned to the ABView, and that will be used instead.\n};\n\nconst ABViewDefaults = {\n   key: \"text\",\n   // {string}\n   // unique key for this view\n\n   icon: \"font\",\n   // {string}\n   // fa-[icon] reference for this view\n\n   labelKey: \"Text\",\n   // {string}\n   // the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewTextCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      this._object = null;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewTextPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.unTranslate(this, this, [\"text\"]);\n\n      var obj = super.toObj();\n      obj.views = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings = this.settings || {};\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height || ABViewTextPropertyComponentDefaults.height\n      );\n\n      // if this is being instantiated on a read from the Property UI,\n      this.text = values.text || ABViewTextPropertyComponentDefaults.text;\n\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.translate(this, this, [\"text\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return ABDatacollection of this form\n    *\n    * @return {ABDatacollection}\n    */\n   get datacollection() {\n      if (this.parent?.key == \"dataview\") {\n         return this.AB.datacollectionByID(this.parent.settings.dataviewID);\n      } else {\n         return this.AB.datacollectionByID(this.settings.dataviewID);\n      }\n   }\n\n   fieldKey(field) {\n      let label = field.label || \"\";\n      label = label.replace(/\\(/g, \"\\\\(\");\n      label = label.replace(/\\)/g, \"\\\\)\");\n      return label;\n   }\n\n   displayText(val, componentID) {\n      var result = this.text;\n\n      let clearTemplateValue = (result) => {\n         return result.replace(/{(.*?)}/g, \"\");\n      };\n\n      var dv = this.datacollection;\n      // if (!dv) return clearTemplateValue(result);\n\n      var object = dv?.datasource ?? this._object;\n      if (!object) return clearTemplateValue(result);\n\n      const rowData = val || dv.getCursor() || {};\n\n      object.fields().forEach((f) => {\n         // add \\\\ in front of the regular expression special charactors\n         // let label = f.label || \"\";\n         // label = label.replace(/\\(/g, \"\\\\(\");\n         // label = label.replace(/\\)/g, \"\\\\)\");\n         let label = this.fieldKey(f);\n\n         var template = new RegExp(\"{\" + label + \"}\", \"g\");\n\n         // IDEA: I'd like to keep all the image url logic INSIDE the ABFieldImage\n         // object.  Is there some way we can simply call: f.imageTemplate(rowData)\n         // and parse the results for the url to display here?\n\n         var data = f.format(rowData);\n         if (f.key == \"image\") {\n            var fData = data;\n            data = f.urlImage(fData);\n\n            // Question: should we change f.urlImage() to return the defaultImageUrl\n            // if fData is \"\" and .useDefaultImage = true?\n\n            if (\n               !fData &&\n               f.settings.defaultImageUrl &&\n               f.settings.useDefaultImage\n            ) {\n               data = f.urlImage(f.settings.defaultImageUrl);\n\n               ////\n               //// James:  Revisit this and make sure we are handling things ok now.\n               // result = result.replace(\n               //    \"img\",\n               //    'img onload=\\'AD.comm.hub.publish(\"component.adjust\", {\"containerID\": \"' +\n               //       componentID +\n               //       \"\\\"});' \"\n               // );\n               // } else if (\n               //    fData != \"\" &&\n               //    result.indexOf(\"onload\") == -1 &&\n               //    componentID\n               // ) {\n               // result = result.replace(\n               //    \"img\",\n               //    'img onload=\\'AD.comm.hub.publish(\"component.adjust\", {\"containerID\": \"' +\n               //       componentID +\n               //       \"\\\"});' \"\n               // );\n            } else {\n               ////\n               //// James: It looks like this routine assumes the this.text template will\n               //// only have 1 <img> tag in it.  Is that necessarilly true?\n               ////\n               //// If NOT, then we need to rethink this next line:\n\n               result = result.replace(\n                  \"img\",\n                  \"img onerror='this.parentNode.removeChild(this);' \"\n               );\n            }\n         }\n\n         result = result.replace(template, data);\n      });\n\n      // Support {uuid} tag in tempalte\n      result = result.replace(/{PK}/g, rowData[object.PK()]);\n\n      return result;\n   }\n\n   objectLoad(object) {\n      this._object = object;\n   }\n};\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewDefaults = {\n   key: \"viewwidget\", // {string} unique key for this view\n   icon: \"circle-o-notch \", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.widget\", // {string} the multilingual label key for the class label\n};\n\nconst ABPropertyComponentDefaults = {\n   columnSpan: 1,\n   rowSpan: 1,\n};\n\nmodule.exports = class ABViewWidgetCore extends ABView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    * @param {obj} defaultValues special sub class defined default values.\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.columnSpan = parseInt(\n         this.settings.columnSpan || ABPropertyComponentDefaults.columnSpan\n      );\n      this.settings.rowSpan = parseInt(\n         this.settings.rowSpan || ABPropertyComponentDefaults.rowSpan\n      );\n   }\n};\n","const _ = require(\"lodash\");\n\n// prettier-ignore\nconst ABApplicationCore = require(\"../core/ABApplicationCore.js\");\n\nconst ABViewPage = require(\"./views/ABViewPage\");\nconst ABViewManager = require(\"./ABViewManager\");\n\nmodule.exports = class ABClassApplication extends ABApplicationCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // now listen for any updates to our managed objects\n      this._handler_page_updated = (definition) => {\n         var currPage = this._pages.find((p) => p.id === definition.id);\n         if (currPage) {\n            this._pages = this._pages.filter((p) => p.id != currPage.id);\n            this._pages.push(currPage.refreshInstance());\n         }\n      };\n      this._pages.forEach((p) => {\n         p.on(\"definition.updated\", this._handler_page_updated);\n      });\n   }\n\n   static applications(/*fn = () => true*/) {\n      console.error(\n         \"ABApplication.applicationForID(): Depreciated. Who is doing this?\"\n      );\n      return null;\n   }\n   static applicationForID(/*id*/) {\n      var errDepreciated = new Error(\n         \"ABApplication.applicationForID(): Depreciated. Who is doing this?\"\n      );\n      console.error(errDepreciated);\n      return null;\n   }\n\n   static definitionForID(/*id*/) {\n      var errDepreciated = new Error(\n         \"ABApplication.definitionForID(): Depreciated. Who is doing this?\"\n      );\n      console.error(errDepreciated);\n      return null;\n   }\n\n   areaKey() {\n      return this.AB.kebabCase(`ab-${this.name}`);\n   }\n\n   /**\n    * @method refreshInstance()\n    * Used when a definition.updated message is detected on this ABApplication.\n    * This method will return a new instance based upon the current definition\n    * and properly resolve any handlers and pending network Requests.\n    * @return {ABObject}\n    */\n   refreshInstance() {\n      var newObj = this.AB.applicationByID(this.id);\n\n      // remove my listeners\n      this._pages.forEach((p) => {\n         p.removeListener(\"definition.updated\", this._handler_page_updated);\n      });\n\n      return newObj;\n   }\n\n   ///\n   /// Definition\n   ///\n\n   /**\n    * @method _listInsert()\n    * save the given entity into our desired list:\n    * @param {varid} entity\n    * @param {string} key\n    *        the key of the list we are managing\n    * @return {Promise}\n    */\n   async _listInsert(entity, key) {\n      var isIncluded = this[key].indexOf(entity.id) != -1;\n      if (!isIncluded) {\n         this[key].push(entity.id);\n         await this.save();\n      }\n   }\n\n   async _listRemove(entity, key) {\n      var begLen = this[key].length;\n      this[key] = this[key].filter((id) => {\n         return id != entity.id;\n      });\n      // if there was a change then save this.\n      if (begLen != this[key].length) {\n         await this.save();\n      }\n   }\n\n   /**\n    * @method datacollectionInsert()\n    * persist the current ABDataCollection in our list of .datacollectionIDs.\n    * @param {ABDataCollection} dc\n    * @return {Promise}\n    */\n   datacollectionInsert(dc) {\n      return this._listInsert(dc, \"datacollectionIDs\");\n   }\n\n   /**\n    * @method datacollectionRemove()\n    * remove the given ABDataCollection from our list of .datacollectionIDs.\n    * @param {ABDataCollection} dc\n    * @return {Promise}\n    */\n   datacollectionRemove(dc) {\n      return this._listRemove(dc, \"datacollectionIDs\");\n   }\n\n   /**\n    * @method objectInsert()\n    * persist the current ABObject in our list of .objectIDs.\n    * @param {ABObject} object\n    * @return {Promise}\n    */\n   objectInsert(object) {\n      return this._listInsert(object, \"objectIDs\");\n   }\n\n   /**\n    * @method objectRemove()\n    * remove the current ABObject from our list of .objectIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABObject} object\n    * @return {Promise}\n    */\n   objectRemove(object) {\n      return this._listRemove(object, \"objectIDs\");\n   }\n\n   /**\n    * @method processInsert()\n    * persist the current ABProcess in our list of .processIDs.\n    * @param {ABProcess} process\n    * @return {Promise}\n    */\n   processInsert(process) {\n      return this._listInsert(process, \"processIDs\");\n   }\n\n   /**\n    * @method processRemove()\n    * remove the current ABProcess from our list of .processIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABProcess} process\n    * @return {Promise}\n    */\n   processRemove(process) {\n      return this._listRemove(process, \"processIDs\");\n   }\n\n   /**\n    * @method queryInsert()\n    * persist the current ABObjectQuery in our list of .queryIDs.\n    * @param {ABObjectQuery} query\n    * @return {Promise}\n    */\n   queryInsert(query) {\n      return this._listInsert(query, \"queryIDs\");\n   }\n\n   /**\n    * @method queryRemove()\n    * remove the current ABObjectQuery from our list of .queryIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABObjectQuery} query\n    * @return {Promise}\n    */\n   queryRemove(query) {\n      return this._listRemove(query, \"queryIDs\");\n   }\n\n   /**\n    * @method exportIDs()\n    * export any relevant .ids for the necessary operation of this application.\n    * @param {array} ids\n    *         the array of ids to insert any relevant .ids into\n    */\n   exportIDs(ids) {\n      // make sure we don't get into an infinite loop:\n      if (ids.indexOf(this.id) > -1) return;\n\n      ids.push(this.id);\n\n      // start with Objects:\n      this.objectsIncluded().forEach((o) => {\n         o.exportIDs(ids);\n      });\n\n      // get all Hints\n      this.hintsIncluded().forEach((h) => {\n         h.exportIDs(ids);\n      });\n\n      // Queries\n      this.queriesIncluded().forEach((q) => {\n         q.exportIDs(ids);\n      });\n\n      // Datacollections\n      // NOTE: currently the server doesn't make instances of DataCollections\n      // so we manually parse the related info here:\n      this.datacollectionIDs.forEach((dID) => {\n         if (ids.indexOf(dID) > -1) return;\n\n         var def = this.AB.definitionByID(dID);\n         if (def) {\n            ids.push(dID);\n            if (def.settings.datasourceID) {\n               var object = this.AB.objectByID(def.settings.datasourceID);\n               if (object) {\n                  object.exportIDs(ids);\n               }\n            }\n         }\n      });\n\n      // Processes\n      this.processes().forEach((p) => {\n         p.exportIDs(ids);\n      });\n\n      // Pages\n      // NOTE: currently the server doesn't make instances of ABViews\n      // so we manually parse the object data here:\n      var parseView = (view) => {\n         if (ids.indexOf(view.id) > -1) return;\n         ids.push(view.id);\n         (view.pageIDs || []).forEach((pid) => {\n            var pdef = this.AB.definitionByID(pid);\n            if (pdef) {\n               parseView(pdef);\n            }\n         });\n\n         (view.viewIDs || []).forEach((vid) => {\n            var vdef = this.AB.definitionByID(vid);\n            if (vdef) {\n               parseView(vdef);\n            }\n         });\n      };\n\n      var pageIDs = this._pages.map((p) => p.id);\n      (pageIDs || []).forEach((pid) => {\n         var pdef = this.AB.definitionByID(pid);\n         if (pdef) {\n            parseView(pdef);\n         }\n      });\n\n      // return only unique entries:\n      ids = this.AB.uniq(ids);\n   }\n\n   /**\n    * @method pageNew()\n    * return a new instance of an ABViewPage\n    * @param values\n    *        The initial settings for the page.\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      return new ABViewPage(values, this);\n   }\n\n   /**\n    * @method pageInsert()\n    * Insert a new ABViewPage into this Application.\n    * @param {ABViewPage} page\n    *        The instance of the page to save.\n    * @return {Promise}\n    */\n   async pageInsert(page) {\n      // var isIncluded = this.pageByID(page.id);\n      var isIncluded = this._pages.filter((p) => p.id == page.id)[0];\n      if (!isIncluded) {\n         this._pages.push(page);\n         // Save our own Info:\n         return this.save();\n      }\n   }\n\n   /**\n    * @method pageRemove()\n    * remove the current ABViewPage from our list of pages.\n    * @param {ABViewPage} page\n    * @return {Promise}\n    */\n   async pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages(function (p) {\n         return p.id != page.id;\n      });\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n   }\n\n   save() {\n      // if someone just changed the name of our ABApplication, reflect that\n      // in our Def.Name\n      if (this.name != this.label) {\n         this.name = this.label;\n      }\n      return super.save();\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      //\n      // check for valid object references:\n      //\n      var checks = {\n         objectIDs: \"object\",\n         queryIDs: \"query\",\n         datacollectionIDs: \"datacollection\",\n      };\n\n      Object.keys(checks).forEach((k) => {\n         this[k].forEach((id) => {\n            var def = this.AB.definitionByID(id);\n            if (!def) {\n               this.warningsMessage(` is referencing a missing ${checks[k]}`, {\n                  appID: this.id,\n                  id,\n               });\n            }\n         });\n      });\n\n      //\n      // Make sure there is some way to access this Application:\n      //\n      if (this.roleAccess.length == 0 && !this.isAccessManaged) {\n         this.warningsMessage(\" has no Role assigned, and is unaccessible.\");\n      }\n\n      // do our Role references exist?\n      var allRoles = this.AB.Account.rolesAll().map((r) => r.id);\n      this.roleAccess.forEach((r) => {\n         if (allRoles.indexOf(r) == -1) {\n            this.warningsMessage(\n               `Specified Role Access [${r}] does not exist in this system`,\n               { role: r }\n            );\n         }\n      });\n\n      // Make sure all our Pages perform a new warningsEval();\n      this.pages().forEach((p) => {\n         p.warningsEval();\n      });\n   }\n\n   warningsAll() {\n      var warnings = [].concat(this._warnings);\n      [\n         \"objectsIncluded\",\n         \"queriesIncluded\",\n         \"datacollectionsIncluded\",\n         \"processes\",\n         \"pages\",\n         \"views\",\n      ].forEach((k) => {\n         this[k]().forEach((o) => {\n            warnings = warnings.concat(o.warningsAll());\n         });\n      });\n\n      return warnings;\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Application[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   /**\n    * @method mobileAppNew()\n    *\n    * return an instance of a new (unsaved) ABMobileApp that is tied to this\n    * ABApplication.\n    *\n    * @return {ABMobileApp}\n    */\n   // mobileAppNew(values) {\n   //    return new ABMobileApp(values, this);\n   // }\n};\n","const ABEmitter = require(\"./ABEmitter\");\n\nconst CustomComponentManager = require(\"../../webix_custom_components/customComponentManager\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABComponent extends ABEmitter {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, AB) {\n      super();\n\n      // Transition Code:\n      // make sure we have an this.AB\n      if (App && App.AB) {\n         this.AB = App.AB;\n      }\n\n      // passed in AB will override\n      if (AB) {\n         this.AB = AB;\n         // {ABFactory} AB\n      }\n\n      if (!App) {\n         if (AB._App) {\n            App = AB._App;\n         } else {\n            App = {\n               uuid: AB.Webix.uid(),\n\n               /*\n                * AB\n                * the {ABFactory} for our interface.\n                */\n               AB: AB,\n\n               /*\n                * actions:\n                * a hash of exposed application methods that are shared among our\n                * components, so one component can invoke an action that updates\n                * another component.\n                */\n               actions: {},\n\n               /*\n                * config\n                * webix configuration settings for our current browser\n                */\n               config: AB.UISettings.config(),\n\n               /*\n                * custom\n                * a collection of custom components for this App Instance.\n                */\n               custom: null,\n\n               /*\n                * Icons\n                * this will provide you with the list of avaialbe font awesome 4.7.0 icons to use in interface building\n                */\n               icons: AB.UISettings.icons,\n\n               Label: L,\n\n               /*\n                * labels\n                * a collection of labels that are common for the Application.\n                */\n               labels: {\n                  add: L(\"Add\"),\n                  create: L(\"Create\"),\n                  delete: L(\"Delete\"),\n                  edit: L(\"Edit\"),\n                  export: L(\"Export\"),\n                  formName: L(\"Name\"),\n                  import: L(\"Import\"),\n                  rename: L(\"Rename\"),\n                  ok: L(\"Ok\"),\n\n                  cancel: L(\"Cancel\"),\n                  save: L(\"Save\"),\n\n                  yes: L(\"Yes\"),\n                  no: L(\"No\"),\n\n                  none: L(\"None\"),\n                  close: L(\"Close\"),\n\n                  default: L(\"Default\"),\n                  defaultPlaceholder: L(\"Enter default value\"),\n\n                  disable: L(\"Disable\"),\n\n                  required: L(\"Required\"),\n                  unique: L(\"Unique\"),\n\n                  invalidMessage: {\n                     required: L(\"This field is required\"),\n                  },\n\n                  createErrorMessage: L(\"System could not create <b>{0}</b>.\"),\n                  createSuccessMessage: L(\"<b>{0}</b> is created.\"),\n\n                  updateErrorMessage: L(\"System could not update <b>{0}</b>.\"),\n                  updateSucessMessage: L(\"<b>{0}</b> is updated.\"),\n\n                  deleteErrorMessage: L(\"System could not delete <b>{0}</b>.\"),\n                  deleteSuccessMessage: L(\"<b>{0}</b> is deleted.\"),\n\n                  renameErrorMessage: L(\"System could not rename <b>{0}</b>.\"),\n                  renameSuccessMessage: L(\"<b>{0}</b> is renamed.\"),\n\n                  // Data Field  common Property labels:\n                  dataFieldHeaderLabel: L(\"Section Title\"),\n                  dataFieldHeaderLabelPlaceholder: L(\"Section Name\"),\n\n                  dataFieldLabel: L(\"Label\"),\n                  dataFieldLabelPlaceholder: L(\"Label\"),\n\n                  dataFieldColumnName: L(\"Field Name\"),\n                  dataFieldColumnNamePlaceholder: L(\"Database field name\"),\n\n                  dataFieldShowIcon: L(\"show icon?\"),\n\n                  componentDropZone: L(\"add widgets here\"),\n               },\n\n               /*\n                * unique()\n                * A function that returns a globally unique Key.\n                * @param {string} key   The key to modify and return.\n                * @return {string}\n                */\n               unique: function (key) {\n                  return `${key}${this.uuid}`;\n               },\n            };\n            AB._App = App;\n         }\n      }\n\n      if (!App.custom) {\n         if (!AB.custom) {\n            var componentManager = new CustomComponentManager();\n            componentManager.initComponents(App);\n         } else {\n            App.custom = AB.custom;\n         }\n      }\n\n      this.App = App;\n\n      this.idBase = idBase || \"?idbase?\";\n   }\n\n   actions(_actions) {\n      console.error(\"!!! REFACTOR out .actions()\");\n      if (_actions) {\n         for (var a in _actions) {\n            this.App.actions[a] = _actions[a];\n         }\n      }\n   }\n\n   Label() {\n      return (...params) => {\n         // console.error(\"!! App.label() depreciated.\");\n         return this.AB.Multilingual.label(...params);\n      };\n   }\n\n   unique(key) {\n      return this.App.unique(`${this.idBase}_${key}`);\n   }\n};\n","const ABObjectQuery = require(\"./ABObjectQuery\");\nconst ABDataCollectionCore = require(\"../core/ABDataCollectionCore\");\n\nmodule.exports = class ABDataCollection extends ABDataCollectionCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      this.setMaxListeners(0);\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABDataCollection with it's parent\n    *\n    *\n    * @return {Promise}\n    *       .resolve( {this} )\n    */\n   async save() {\n      if (!this.id) {\n         this.label = this.label || this.name;\n      }\n      await super.save();\n      this.AB.emit(\"ab.datacollection.update\", {\n         datacollectionId: this.id,\n      });\n      return this;\n   }\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n      var L = this.AB.Label();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.datacollections((o) => {\n            return (\n               o.id != this.id &&\n               o.name.toLowerCase() == this.name.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L('Name must be unique (\"{0}\" already in use)', [this.name])\n         );\n      }\n\n      return validator;\n   }\n\n   ///\n   /// Cursor\n   ///\n\n   /**\n    * currentUserUsername\n    * must return the proper value for the current user that would match a \"user\" field\n    * in an object.\n    * This is platform dependent, so must be implemented by a child object.\n    * @return {string}\n    */\n   currentUserUsername() {\n      return this.AB.Account.username();\n   }\n\n   ///\n   /// Data\n   ///\n\n   init() {\n      // prevent initialize many times\n      if (this.initialized) return;\n      // this.initialized = true;  // <<---- DO NOT SET THIS HERE\n\n      super.init();\n\n      //// Now connect our platform hub to our Object Triggers:\n\n      // events\n      this.AB.on(\"ab.datacollection.create\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.create\", data);\n      });\n\n      this.AB.on(\"ab.datacollection.update\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.update\", data);\n      });\n\n      // We are subscribing to notifications from the server that an item may\n      // be stale and needs updating\n      // We will improve this later and verify that it needs updating before\n      // attempting the update on the client side\n      this.AB.on(\"ab.datacollection.stale\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.stale\", data);\n      });\n\n      this.AB.on(\"ab.datacollection.delete\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.delete\", data);\n      });\n\n      this.bindParentDc();\n   }\n\n   bindParentDc() {\n      // if we pass the master datacollection and the field it is linked to\n      // we want to bind it with that field as second param so dataFeed is\n      // used on the slave datacollection\n      let dataCollectionLink = this.datacollectionLink;\n      let fieldLink = this.fieldLink;\n      if (!this.settings.loadAll && dataCollectionLink && fieldLink) {\n         let dc = this.__dataCollection;\n         // the second param is the field id we bind the data to the master with\n         dc.bind(dataCollectionLink.__dataCollection, fieldLink.id);\n         // defining dataFeed allows us to query the database when the table is scrolled\n         dc.define(\"dataFeed\", (value, params) => {\n            let cursorUpdated = false;\n            // check if the current cursor was updated\n            if (this?.datacollectionLink?.getCursor()?.id == value) {\n               cursorUpdated = true;\n            }\n\n            // this is the same item that was already bound...don't reload data\n            if (cursorUpdated) {\n               // now that we have the modified wheres the dataCollections wheres\n               // need to be modified for subsequent loads on scroll so lets set them\n               // this.reloadWheres(wheres);\n\n               // reload data\n               this.reloadData(0, 20);\n            }\n         });\n      }\n   }\n\n   loadData(start, limit = 20) {\n      return super.loadData(start, limit).catch((err) => {\n         // hideProgressOfComponents() is a platform specific action.\n         this.hideProgressOfComponents();\n         this.emit(\"loadData\", {});\n\n         // propagate the error here:\n         if (err) {\n            throw err;\n         }\n      });\n   }\n\n   /**\n    * processIncomingData()\n    * is called from loadData() once the data is returned.  This method\n    * allows the platform to make adjustments to the data based upon any\n    * platform defined criteria.\n    * @param {obj} data  the data as it was returned from the Server\n    *        which should be in following format:\n    *        {\n    *          status: \"success\", // or \"error\"\n    *          data:[ {ABObjectData}, {ABObjectData}, ...]\n    *        }\n    */\n   processIncomingData(data) {\n      // Web Platform:\n\n      // data check:\n      if (data.data && !Array.isArray(data.data)) {\n         data.data = [data.data];\n      }\n\n      // standardize the heights\n\n      /*\n       // In v2: we move the row height calculation into the Interface designer.\n       //\n\n      // calculate default value of $height of rows\n      let obj = this.datasource;\n      let defaultHeight = 0;\n      let minHeight = 0;\n      let imageFields = obj.fields((f) => f.key == \"image\");\n      let hiddenFields = obj.objectWorkspace.hiddenFields;\n      imageFields.forEach(function (f) {\n         if (hiddenFields.indexOf(f.columnName) == -1) {\n            if (\n               parseInt(f.settings.useHeight) == 1 &&\n               parseInt(f.settings.imageHeight) > minHeight\n            ) {\n               minHeight = parseInt(f.settings.imageHeight) + 20;\n            } else {\n               minHeight = 100;\n            }\n         }\n      });\n      if (minHeight > 0) {\n         defaultHeight = minHeight;\n      }\n\n      (data.data || []).forEach((d) => {\n         // define $height of rows to render in webix elements\n         if (\n            d.properties != null &&\n            d.properties.height != \"undefined\" &&\n            parseInt(d.properties.height) > 0\n         ) {\n            d.$height = parseInt(d.properties.height);\n         } else if (defaultHeight > 0) {\n            d.$height = defaultHeight;\n         }\n      });\n      */\n\n      return super.processIncomingData(data).then(() => {\n         // Web Platform:\n         // when that is done:\n         this.hideProgressOfComponents();\n      });\n   }\n\n   ///\n   /// Components\n   ///\n\n   /**\n    * @method attachFlexlayout\n    *\n    *\n    * @param {Object} component - a webix flexlayout element instance\n    */\n   attachFlexlayout(component) {\n      var dc = this.__dataCollection;\n\n      // prevent attach many times\n      if (this.__flexComponentIds.indexOf(component.config.id) > -1) {\n         return;\n      } else {\n         // keep component id to an array\n         this.__flexComponentIds.push(component.config.id);\n      }\n   }\n\n   /**\n    * @method bind\n    *\n    *\n    * @param {Object} component - a webix element instance\n    */\n   bind(component) {\n      var dc = this.__dataCollection;\n\n      // prevent bind many times\n      // keep component id to an array\n      if (this.__bindComponentIds.indexOf(component.config.id) === -1)\n         this.__bindComponentIds.push(component.config.id);\n\n      if ($$(component.config.id).data?.find?.({}).length > 0) return;\n\n      if (\n         component.config.view == \"datatable\" ||\n         component.config.view == \"dataview\" ||\n         component.config.view == \"treetable\" ||\n         component.config.view == \"kanban\"\n      ) {\n         if (dc) {\n            var items = dc.count();\n            if (\n               items == 0 &&\n               (this._dataStatus == this.dataStatusFlag.notInitial ||\n                  this._dataStatus == this.dataStatusFlag.initializing) &&\n               component.showProgress\n            ) {\n               component.showProgress({ type: \"icon\" });\n            }\n\n            component.define(\"datafetch\", 20);\n            component.define(\"datathrottle\", 500);\n\n            // initial data of treetable\n            if (component.config.view == \"treetable\") {\n               if (\n                  this.datasource &&\n                  this.datasource.isGroup &&\n                  this.__treeCollection\n               ) {\n                  component.define(\"data\", this.__treeCollection);\n                  component.refresh();\n               } else {\n                  // NOTE: tree data does not support dynamic loading when scrolling\n                  // https://forum.webix.com/discussion/3078/dynamic-loading-in-treetable\n                  component.define(\"data\", []);\n                  component.parse(dc.find({}));\n               }\n            } else {\n               component.data.sync(dc);\n            }\n\n            // Implement .onDataRequest for paging loading\n            if (!this.settings.loadAll) {\n               component.___AD = component.___AD || {};\n               // if (component.___AD.onDataRequestEvent) component.detachEvent(component.___AD.onDataRequestEvent);\n               if (!component.___AD.onDataRequestEvent) {\n                  component.___AD.onDataRequestEvent = component.attachEvent(\n                     \"onDataRequest\",\n                     (start, count) => {\n                        if (component.showProgress)\n                           component.showProgress({ type: \"icon\" });\n\n                        // load more data to the data collection\n                        dc.loadNext(count, start);\n\n                        return false; // <-- prevent the default \"onDataRequest\"\n                     }\n                  );\n               }\n\n               // // NOTE : treetable should use .parse or TreeCollection\n               // // https://forum.webix.com/discussion/1694/tree-and-treetable-using-data-from-datacollection\n               // if (\n               //    component.config.view == \"treetable\" &&\n               //    !this.datasource.isGroup\n               // ) {\n               //    component.___AD = component.___AD || {};\n               //    if (!component.___AD.onDcLoadData) {\n               //       component.___AD.onDcLoadData = () => {\n               //          component.parse(dc.find({}));\n               //       };\n\n               //       this.on(\"loadData\", component.___AD.onDcLoadData);\n               //    }\n               // }\n            }\n         } else {\n            component.data.unsync();\n         }\n      } else if (component.bind) {\n         if (dc) {\n            // Do I need to check if there is any data in the collection before binding?\n            component.bind(dc);\n         } else {\n            component.unbind();\n         }\n\n         if (component.refresh) component.refresh();\n      }\n   }\n\n   unbind(component) {\n      if (!component) return;\n\n      component.detachEvent(\"onDataRequest\");\n      if (component.___AD) {\n         if (component.___AD.onDataRequestEvent)\n            delete component.___AD.onDataRequestEvent;\n\n         if (component.___AD.onDcLoadData) {\n            if (this.off) this.off(\"loadData\", component.___AD.onDcLoadData);\n            delete component.___AD.onDcLoadData;\n         }\n      }\n\n      if (component.data && component.data.unsync) {\n         component.data.unsync();\n         component.define(\"data\", []);\n      }\n\n      if (component.unbind) component.unbind();\n\n      if (component.refresh) component.refresh();\n\n      // remove from array\n      this.__bindComponentIds = (this.__bindComponentIds || []).filter(\n         (id) => id != component.config.id\n      );\n   }\n\n   hideProgressOfComponents() {\n      this.__bindComponentIds.forEach((comId) => {\n         if ($$(comId) && $$(comId).hideProgress) $$(comId).hideProgress();\n      });\n   }\n\n   /** Private methods */\n\n   /**\n    * @method _dataCollectionNew\n    * Get webix.DataCollection\n    *\n    * @return {webix.DataCollection}\n    *\n    * @param {Array} data - initial data\n    */\n   _dataCollectionNew(data) {\n      // get a webix data collection\n      let dc = new webix.DataCollection({\n         data: data || [],\n      });\n\n      this._extendCollection(dc);\n\n      return dc;\n   }\n\n   /**\n    * @method _treeCollectionNew\n    * Get webix.TreeCollection\n    *\n    * @return {webix.TreeCollection}\n    *\n    */\n   _treeCollectionNew() {\n      // get a webix data collection\n      let treeStore = new webix.TreeCollection();\n\n      this._extendCollection(treeStore);\n\n      return treeStore;\n   }\n\n   _extendCollection(dataStore) {\n      // Apply this data collection to support multi-selection\n      // https://docs.webix.com/api__refs__selectionmodel.html\n      webix.extend(dataStore, webix.SelectionModel);\n\n      dataStore.___AD = dataStore.___AD || {};\n\n      // Implement .onDataRequest for paging loading\n      if (!this.settings.loadAll) {\n         if (!dataStore.___AD.onDataRequestEvent) {\n            dataStore.___AD.onDataRequestEvent = dataStore.attachEvent(\n               \"onDataRequest\",\n               (start, count) => {\n                  if (start < 0) start = 0;\n\n                  // load more data to the data collection\n                  this.loadData(start, count);\n\n                  return false; // <-- prevent the default \"onDataRequest\"\n               }\n            );\n         }\n\n         if (!dataStore.___AD.onAfterLoadEvent) {\n            dataStore.___AD.onAfterLoadEvent = dataStore.attachEvent(\n               \"onAfterLoad\",\n               () => {\n                  this.emit(\"loadData\", {});\n               }\n            );\n         }\n      }\n\n      // override unused functions of selection model\n      dataStore.addCss = function () {};\n      dataStore.removeCss = function () {};\n      dataStore.render = function () {};\n\n      if (!dataStore.___AD.onAfterLoad) {\n         dataStore.___AD.onAfterLoad = dataStore.attachEvent(\n            \"onAfterLoad\",\n            () => {\n               this.hideProgressOfComponents();\n            }\n         );\n      }\n   }\n\n   parseTreeCollection(data = {}) {\n      if (\n         !(this.__datasource instanceof ABObjectQuery) ||\n         !this.__datasource.isGroup ||\n         !this.__treeCollection\n      )\n         return;\n\n      let addRowToTree = (join = {}, parentAlias = null) => {\n         let alias = join.alias;\n\n         (data.data || []).forEach((row) => {\n            let dataId = row[`${alias}.uuid`] || row[`${alias}.id`];\n            if (!dataId) return;\n\n            // find parent nodes\n            let parentItemIds = [];\n            let parentId =\n               row[`${parentAlias}.uuid`] || row[`${parentAlias}.id`];\n            if (parentId) {\n               parentItemIds = this.__treeCollection\n                  .find(\n                     (item) =>\n                        item._alias == parentAlias && item._dataId == parentId\n                  )\n                  .map((item) => item.id);\n            }\n\n            // check exists\n            let exists = this.__treeCollection.find((item) => {\n               return (\n                  item._alias == alias &&\n                  item._dataId == dataId &&\n                  (parentItemIds.length == 0 ||\n                     parentItemIds.indexOf(item.$parent) > -1)\n               );\n            }, true);\n            if (exists) return;\n\n            let treeNode = {};\n            treeNode._alias = alias;\n            treeNode._dataId = dataId;\n            treeNode._itemId = row.id; // Keep row id for set cursor to data collection\n\n            Object.keys(row).forEach((propName) => {\n               // Pull value from alias\n               if (propName.indexOf(`${alias}.`) == 0) {\n                  treeNode[propName] = row[propName];\n               }\n            });\n\n            if (row.translations) treeNode.translations = row.translations;\n\n            // child nodes\n            if (parentItemIds.length > 0)\n               parentItemIds.forEach((parentItemId) => {\n                  this.__treeCollection.add(treeNode, null, parentItemId);\n               });\n            // root node\n            else this.__treeCollection.add(treeNode, null);\n         });\n\n         // Sub-joins\n         (join.links || []).forEach((link) => {\n            addRowToTree(link, alias);\n         });\n      };\n\n      // Show loading cursor\n      (this.__bindComponentIds || []).forEach((comId) => {\n         //// Webix Command here:\n         let boundComp = $$(comId);\n         if (boundComp && boundComp.showProgress)\n            boundComp.showProgress({ type: \"icon\" });\n\n         if (boundComp.data && boundComp.data.unsync) boundComp.data.unsync();\n      });\n\n      addRowToTree(this.__datasource.joins());\n\n      // Hide loading cursor\n      (this.__bindComponentIds || []).forEach((comId) => {\n         let boundComp = $$(comId);\n         if (boundComp && boundComp.hideProgress) boundComp.hideProgress();\n         boundComp.define(\"data\", this.__treeCollection);\n      });\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.datasource) {\n         this.warningsMessage(`doesn't have a datasource.`);\n      } else if (this.linkDatacollectionID) {\n         const linkDC = this.AB.datacollectionById(this.linkDatacollectionID);\n\n         if (!linkDC)\n            this.warningsMessage(\n               `can't resolve linkDatacollectionID[${this.linkDatacollectionID}]`\n            );\n      }\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Datacollection[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   get userScopes() {\n      return this.AB.Account.scopes();\n   }\n};\n","var ABDefinitionCore = require(\"../core/ABDefinitionCore\");\n\nmodule.exports = class ABDefinition extends ABDefinitionCore {\n   // constructor(attributes, AB) {\n   //    super(attributes, AB);\n   // }\n};\n","/**\n * ABEmitter\n *\n * This is the platform dependent implementation of an Emitter object.\n *\n */\n\nvar EventEmitter = require(\"events\").EventEmitter;\n\nmodule.exports = class ABEmitter extends EventEmitter {\n   constructor() {\n      super(/*{ maxListeners: 0 }*/);\n   }\n};\n","const ABHintCore = require(\"../core/ABHintCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABHint extends ABHintCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // listen\n      // this.AB.on(\"ab.abprocess.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy(App) {\n      // debugger;\n      // remove all my Elements\n      var allSteps = this.steps();\n      var allDestroy = [];\n      allSteps.forEach((e) => {\n         allDestroy.push(e.destroy());\n      });\n      // remove reference on App and View\n      let hintIndex = App.hintIDs.indexOf(this.id);\n      if (hintIndex > -1) {\n         App.hintIDs.splice(hintIndex, 1);\n         App.save();\n      }\n\n      let view = App.views((v) => {\n         return v.id == this.settings.view;\n      })[0];\n\n      if (view) {\n         delete view.settings.hintID;\n         view.save();\n      }\n\n      return Promise.all(allDestroy).then(() => {\n         // now remove myself\n         return new Promise((resolve, reject) => {\n            this.toDefinition()\n               .destroy()\n               .then(() => {\n                  webix.message({\n                     text: L(\"Tutorial Deleted\"),\n                     type: \"success\",\n                     expire: 3000,\n                  });\n                  resolve();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n      });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *                .resolve( {this} )\n    */\n   save() {\n      return this.toDefinition()\n         .save()\n         .then((data) => {\n            // if I didn't have an .id then this was a create()\n            // and I need to update my data with the generated .id\n\n            if (!this.id) {\n               this.id = data.id;\n            }\n            return this;\n         });\n   }\n\n   isValid() {\n      // debugger;\n      return true;\n      // var validator = this.AB.Validation.validator();\n\n      // // label/name must be unique:\n      // var isNameUnique =\n      //    this.AB.processes((o) => {\n      //       return o.name.toLowerCase() == this.name.toLowerCase();\n      //    }).length == 0;\n      // if (!isNameUnique) {\n      //    validator.addError(\n      //       \"name\",\n      //       L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n      //    );\n      // }\n\n      // return validator;\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // debugger;\n      // report both OUR warnings, and any warnings from any of our fields\n      // var allWarnings = [].concat(this._warnings);\n      // this.elements().forEach((e) => {\n      //    e.warningsEval();\n      //    allWarnings = allWarnings.concat(e.warnings());\n      // });\n      // if (this.elements().length == 0) {\n      //    allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      // }\n      // // perform a check of our xml document to see if we have any unknown\n      // // shapes\n      // if (!this._DOMParser) {\n      //    if (window.DOMParser) {\n      //       // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n      //       this._DOMParser = function (xmlStr) {\n      //          return new window.DOMParser().parseFromString(\n      //             xmlStr,\n      //             \"text/xml\"\n      //          );\n      //       };\n      //    } else if (\n      //       typeof window.ActiveXObject != \"undefined\" &&\n      //       new window.ActiveXObject(\"Microsoft.XMLDOM\")\n      //    ) {\n      //       this._DOMParser = function (xmlStr) {\n      //          var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n      //          xmlDoc.async = \"false\";\n      //          xmlDoc.loadXML(xmlStr);\n      //          return xmlDoc;\n      //       };\n      //    } else {\n      //       throw new Error(\"No XML parser found\");\n      //    }\n      // }\n      // // find any references to our generic shapes\n      // let xml = this._DOMParser(this.xmlDefinition);\n      // const genericShapes = [\n      //    \"bpmn2:startEvent\",\n      //    \"bpmn2:task\",\n      //    \"bpmn2:endEvent\",\n      // ];\n      // genericShapes.forEach((s) => {\n      //    let allElements = xml.getElementsByTagName(s);\n      //    for (let x = 0; x < allElements.length; x++) {\n      //       // if we don't know about this shape\n      //       let ele = allElements[x];\n      //       let myEle = this.elementForDiagramID(allElements[x].id);\n      //       if (!myEle) {\n      //          this.unknownShape(allElements[x]);\n      //       }\n      //    }\n      // });\n      // // if any unknown shapes have been reported:\n      // if (this._unknownShapes.length) {\n      //    allWarnings.push({\n      //       message: \"Generic Tasks still undefined.\",\n      //       data: {},\n      //    });\n      // }\n      //\n      // return allWarnings;\n   }\n\n   createHintUI() {\n      // if already loaded skip\n      if ($$(this.id)) return;\n\n      let steps = [];\n      let next = 0;\n      let display = webix.storage.cookie.get(this.id);\n      if (display?.hide) return;\n      let dontShow = `<label class=\"dontShow\">\n                        <input onclick=\"webix.storage.cookie.put(this.dataset.hintId, {'hide': this.checked});\" data-hint-id=\"${\n                           this.id\n                        }\" type=\"checkbox\"> \n                        ${L(\"Don't show this again.\")}\n                     </label>`;\n      this.stepIDs.forEach((step) => {\n         next++;\n         let newStep = {};\n         newStep.id = this._steps[step].id;\n         newStep.el = this._steps[step].settings.el;\n         newStep.event = this._steps[step].settings.event;\n         newStep.title = this._steps[step].name;\n         newStep.text = this._steps[step].text + dontShow;\n         if (this.stepIDs[next]) {\n            newStep.nextEl = this._steps[this.stepIDs[next]].settings.el;\n            if (newStep.nextEl) {\n               newStep.hintId = this.id;\n               newStep.eventEl = \"button\"; // added this so we do not trigger a second advance on the hint when triggering the click below\n               newStep.next = function (event) {\n                  let nextEl = this.nextEl;\n                  let theNextEl = document.querySelector(nextEl);\n                  if (theNextEl && theNextEl.checkVisibility()) {\n                     return false;\n                  } else {\n                     document.querySelector(this.el).click();\n                     return false;\n                  }\n               };\n            }\n         }\n         if (newStep.el) steps.push(newStep);\n      });\n\n      let ui = {\n         view: \"hint\",\n         id: this.id,\n         steps: steps,\n         on: {\n            onNext: (step) => {\n               setTimeout(() => {\n                  const boxes = document.querySelectorAll(\n                     \"input[data-hint-id='\" + this.id + \"']\"\n                  );\n                  let display = webix.storage.cookie.get(this.id);\n                  boxes.forEach((b) => {\n                     b.checked = display?.hide || false;\n                  });\n               }, 100);\n            },\n            onPrevious: (step) => {\n               setTimeout(() => {\n                  const boxes = document.querySelectorAll(\n                     \"input[data-hint-id='\" + this.id + \"']\"\n                  );\n                  let display = webix.storage.cookie.get(this.id);\n                  boxes.forEach((b) => {\n                     b.checked = display?.hide || false;\n                  });\n               }, 100);\n            },\n         },\n      };\n\n      webix.delay(\n         () => {\n            webix.ui(ui).start();\n         },\n         null,\n         null,\n         2000\n      );\n\n      // $$(this.id);\n   }\n};\n","const ABIndexCore = require(\"../core/ABIndexCore\");\n\nmodule.exports = class ABIndex extends ABIndexCore {\n   // constructor(attributes, object) {\n   //    super(attributes, object);\n   // }\n\n   /**\n    * @method save()\n    * persist this instance of ABIndex with it's parent ABObject\n    * @return {Promise}\n    */\n   save() {\n      return super\n         .save()\n         .then(() => this.object.indexSave(this))\n         .then(() => this.migrateCreate());\n   }\n\n   /**\n    * @method destroy()\n    * destroy the current instance of ABIndex\n    * also remove it from our parent ABObject\n    * @return {Promise}\n    */\n   destroy() {\n      return new Promise((resolve, reject) => {\n         if (this.id) {\n            this.migrateDrop()\n               .then(() => {\n                  return super.destroy();\n               })\n               .then(() => this.object.indexRemove(this))\n               .then(resolve)\n               .catch(reject);\n         } else {\n            resolve();\n         }\n      });\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this._unknownFieldIDs || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown field id[${id}]`);\n      });\n\n      if (this.fields.length == 0) {\n         this.warningsMessage(`is not referencing any fields`);\n      }\n   }\n\n   /**\n    * @method warningsMessage()\n    * generate a commonly formatted warning message for this ABField.\n    * This is expected to be called from within a .warningsEval()\n    * method when generating warnings.\n    * @param {string} msg\n    *        the warning string to display\n    * @param {json} data\n    *        any relevant additional information for a developer to refer to.\n    */\n   warningsMessage(msg, data = {}) {\n      let message = `Index[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return this.AB.Network.post({\n         url: `/definition/migrate/object/${this.object.id}/index/${this.id}`,\n         // data: this.toObj(),\n      });\n   }\n\n   migrateDrop() {\n      return this.AB.Network[\"delete\"]({\n         url: `/definition/migrate/object/${this.object.id}/index/${this.id}`,\n      });\n   }\n};\n","/**\n * ABMLClass\n * manage the multilingual information of an instance of a AB Defined Class.\n *\n * these classes have certain fields (\"label\", \"description\"), that can be\n * represented in different language options as defined by our platform.\n *\n * This platform ABMLClass will define 2 methods that allow for the translation\n * untranslation of this data.\n */\nvar ABMLClassCore = require(\"../core/ABMLClassCore\");\n\nmodule.exports = class ABMLClass extends ABMLClassCore {\n   constructor(fieldList, AB) {\n      super(fieldList, AB);\n\n      this._warnings = [];\n      // {array}\n      // an array of warning messages for this object.\n      // each warning entry should be in the format:\n      // WarningMessage: {\n      //    message: {string} \"message to display\"\n      //    data: {json} additional debugging information\n      // }\n   }\n\n   // fromValues(attributes) {\n   //    super.fromValues(attributes);\n   // }\n\n   /**\n    * @method warnings()\n    * returns the stored warnings for this ONE object.\n    * @return {array} WarningMessage\n    */\n   warnings() {\n      return this._warnings;\n   }\n\n   /**\n    * @method warningsEval()\n    * This method causes an object to re-evaluate it's settings to see if there\n    * are any potential errors.\n    */\n   warningsEval() {\n      this._warnings = [];\n   }\n\n   /**\n    * @method warningsAll()\n    * returns all relevant warnings for the current Object. This includes any\n    * sub fields, links, views, etc...\n    * @return {array} warning structures\n    *          [ {WarningMessage}, ... ]\n    */\n   warningsAll() {\n      return this.warnings();\n   }\n\n   /**\n    * @method languageDefault\n    * return a default language code.\n    * @return {string}\n    */\n   languageDefault() {\n      return this.AB.Account.language() || \"en\";\n   }\n\n   /**\n    * @method destroy()\n    * remove this definition.\n    * @return {Promise}\n    */\n   async destroy() {\n      var def = this.toDefinition();\n      if (def.id) {\n         return def.destroy().catch((err) => {\n            if (err.toString().indexOf(\"No record found\") > -1) {\n               // this is weird, but not breaking:\n               console.log(\n                  `ABMLClass.destroy(): could not find record for id[${def.id}]`\n               );\n               console.log(def);\n               return;\n            }\n            throw err;\n         });\n      }\n      return Promise.resolve();\n   }\n\n   /**\n    * @method save()\n    * persist this definition of our {ABxxx} Object\n    * @return {Promise}\n    */\n   async save() {\n      var def = this.toDefinition();\n      // if not name, try to use our label as the name\n      def.name = def.name || this.name || this.label || \"name\";\n      var data = await def.save();\n      if (!this.id) {\n         this.id = data.id;\n      }\n   }\n};\n","const ABModelCore = require(\"../core/ABModelCore\");\n\n//\n// ABModel\n//\n// Represents the Data interface for an ABObject data.\n//\n// 2 ways to use an ABModel to load a DataTable:\n// \tMethod 1:\n// \tgather all the data externally and send to the DataTable\n//\t\tModel.findAll()\n//\t\t.then((data)=>{\n//\t\t\tDataTable.parse(data);\n//\t\t})\n//\n// \tMethod 2:\n// \tSet the Model object with a condition / skip / limit, then\n// \tuse it to load the DataTable:\n//\t\tModel.where({})\n//\t\t.skip(XX)\n//\t\t.limit(XX)\n//\t\t.loadInto(DataTable);\n\nfunction errorPopup(error) {\n   // Show the pop up\n   if (error && error.data && error.data.error == \"READONLY\") {\n      webix.alert({\n         title: \"Your action is blocked\",\n         ok: \"Ok\",\n         text: error.data.message || \"\",\n         type: \"alert-warning\",\n      });\n   }\n}\n\n/*\n * @function no_socket_trigger()\n * a common routine to trigger an update.\n * In the case where our AB.Network.type() isn't a socket implementation\n * we need to manually trigger the expected socket events ourselves.\n * This fn() attempts to simulate the socket responses in such a case.\n * @param {ABModel} model\n *        The ABModel currently processing the network transaction.\n * @param {string} key\n *        The socket update trigger we are simulating.\n * @param {json} data\n *        The relevant response from our network transaction.\n */\nfunction no_socket_trigger(model, key, data) {\n   // If we do not have socket updates available, then trigger an\n   // update event with this data.\n   if (model.AB.Network.type() != \"socket\") {\n      model.AB.emit(key, {\n         objectId: model.object.id,\n         data,\n      });\n   }\n}\n\nmodule.exports = class ABModel extends ABModelCore {\n   constructor(object) {\n      super(object);\n\n      this.handler_create = (...params) => {\n         this.handler_common(\"ab.datacollection.create\", ...params);\n      };\n\n      this.handler_delete = (...params) => {\n         this.handler_common(\"ab.datacollection.update\", ...params);\n      };\n\n      this.handler_findAll = (...params) => {\n         this.handler_common(null, ...params);\n      };\n\n      this.handler_logs = (context, err, data) => {\n         if (err) {\n            context.reject?.(err);\n            return;\n         }\n         context.resolve?.(data);\n      };\n\n      this.handler_update = (...params) => {\n         this.handler_common(\"ab.datacollection.update\", ...params);\n      };\n\n      this.handler_common = (key, context, err, data) => {\n         // key: {string} the relevant socket event key\n         //      can be null if not relevant.\n         // context : {obj} any provided context data provided on the\n         //           this.AB.Network.get() call.\n         // err: {Error} any returned error message from api\n         // data: {obj} returned data from the model-get api in format:\n         //       {data: [], total_count: 1, pos: 0, offset: 0, limit: 0}\n         if (err) {\n            context.reject?.(err);\n            return;\n         }\n\n         let jobID = this.AB.jobID();\n         // console.log(`${jobID} : normalization begin`);\n         // let timeFrom = performance.now();\n         if (key) {\n            // on \"update\" & \"create\" we want to normalizeData()\n            if (key.indexOf(\"delete\") == -1) {\n               this.normalizeData(data);\n            }\n         } else {\n            // on a findAll we normalize data.data\n            this.normalizeData(data.data);\n         }\n         // let timeTo = performance.now();\n         // console.log(`${jobID} : normalization end:  ${timeTo - timeFrom}ms`);\n\n         context.resolve?.(data);\n\n         if (key) {\n            no_socket_trigger(this, key, data);\n         }\n      };\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   // Prepare multilingual fields to be untranslated\n   // Before untranslating we need to ensure that values.translations is set.\n   prepareMultilingualData(values) {\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n      // if mlFields are inside of the values saved we want to translate otherwise do not because it will reset the translation field and you may loose unchanged translations\n      var shouldTranslate = false;\n      if (mlFields.length) {\n         mlFields.forEach(function (field) {\n            if (values[field] != null) {\n               shouldTranslate = true;\n            }\n         });\n      }\n      if (shouldTranslate) {\n         if (\n            values.translations == null ||\n            typeof values.translations == \"undefined\" ||\n            values.translations == \"\"\n         ) {\n            values.translations = [];\n         }\n         this.object.unTranslate(values, values, mlFields);\n      }\n   }\n\n   request(method, params) {\n      return this.AB.Network[method](params);\n   }\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      values.batch.map((vals) => {\n         return this.prepareMultilingualData(vals.data);\n      });\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, (context, err, data) => {\n            if (err) {\n               reject(err);\n               return;\n            }\n            this.normalizeData(data);\n            resolve(data);\n            // FIX: now with sockets, the triggers are fired from socket updates.\n            // trigger a create event\n            // triggerEvent('create', this.object, data);\n         });\n\n         this.AB.Network.post(\n            {\n               url: this.object.urlRestBatch(),\n               params: values,\n            },\n            {\n               key: jobID,\n               context: {},\n            }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data);\n\n            //    resolve(data);\n\n            //    // FIX: now with sockets, the triggers are fired from socket updates.\n            //    // trigger a create event\n            //    // triggerEvent('create', this.object, data);\n            // })\n            .catch(reject);\n      });\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   create(values) {\n      this.prepareMultilingualData(values);\n\n      // add default values record if no value is passed for column\n      this.object.fields().forEach((f) => {\n         if (values[f.columnName] === undefined) {\n            f.defaultValue(values);\n         }\n      });\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_create);\n         this.AB.Network.post(\n            {\n               url: this.object.urlRest(),\n               params: values,\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            errorPopup(err);\n            reject(err);\n         });\n      });\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_delete);\n         this.AB.Network[\"delete\"](\n            {\n               url: this.object.urlRestItem(id),\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            errorPopup(err);\n            reject(err);\n         });\n      });\n   }\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   async findAll(cond) {\n      cond = cond || {};\n\n      // \t\t// prepare our condition:\n      // \t\tvar newCond = {};\n\n      // \t\t// if the provided cond looks like our { where:{}, skip:xx, limit:xx } format,\n      // \t\t// just use this one.\n      // \t\tif (cond.where) {\n      // \t\t\tnewCond = cond;\n      // \t\t} else {\n\n      // \t\t\t// else, assume the provided condition is the .where clause.\n      // \t\t\tnewCond.where = cond;\n      // \t\t}\n\n      // /// if this is our depreciated format:\n      // if (newCond.where.where) {\n      // \tOP.Error.log('Depreciated Embedded .where condition.');\n      // }\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_findAll);\n         this.AB.Network.get(\n            {\n               url: this.object.urlRest(),\n               params: cond,\n               // params: newCond\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data.data);\n\n            //    resolve(data);\n            // })\n            .catch((err) => {\n               if (err && err.code) {\n                  switch (err.code) {\n                     case \"ER_PARSE_ERROR\":\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"AppBuilder:ABModel:findAll(): Parse Error with provided condition\",\n                           condition: cond,\n                        });\n                        break;\n\n                     default:\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"AppBuilder:ABModel:findAll(): Unknown Error with provided condition\",\n                           condition: cond,\n                        });\n                        break;\n                  }\n               }\n               reject(err);\n            });\n      });\n   }\n\n   /**\n    * @method loadInto\n    * loads the current values into the provided Webix DataTable\n    * @param {DataTable} DT  A Webix component that can dynamically load data.\n    */\n   loadInto(DT) {\n      // if a limit was applied, then this component should be loading dynamically\n      if (this._limit) {\n         DT.define(\"datafetch\", this._limit);\n         DT.define(\"datathrottle\", 250); // 250ms???\n\n         // catch the event where data is requested:\n         // here we will do our own findAll() so we can persist\n         // the provided .where condition.\n\n         // oh yeah, and make sure to remove any existing event handler when we\n         // perform a new .loadInto()\n         DT.___AD = DT.___AD || {};\n         if (DT.___AD.onDataRequestEvent) {\n            DT.detachEvent(DT.___AD.onDataRequestEvent);\n         }\n         DT.___AD.onDataRequestEvent = DT.attachEvent(\n            \"onDataRequest\",\n            (start, count) => {\n               var cond = {\n                  where: this._where,\n                  sort: this._sort,\n                  limit: count,\n                  skip: start,\n               };\n\n               if (DT.showProgress) DT.showProgress({ type: \"icon\" });\n\n               this.findAll(cond).then((data) => {\n                  /*\n                   // In V2: we move the row height processing into \n                   // the interface designer \n\n                  data.data.forEach((item) => {\n                     if (\n                        item.properties != null &&\n                        item.properties.height != \"undefined\" &&\n                        parseInt(item.properties.height) > 0\n                     ) {\n                        item.$height = parseInt(item.properties.height);\n                     } else if (parseInt(this._where.height) > 0) {\n                        item.$height = parseInt(this._where.height);\n                     }\n                  });\n                  */\n                  DT.parse(data);\n\n                  if (DT.hideProgress) DT.hideProgress();\n               });\n\n               return false; // <-- prevent the default \"onDataRequest\"\n            }\n         );\n\n         DT.refresh();\n      }\n\n      // else just load it all at once:\n      var cond = {};\n      if (this._where) cond.where = this._where;\n      if (this._sort) cond.sort = this._sort;\n      if (this._limit != null) cond.limit = this._limit;\n      if (this._skip != null) cond.skip = this._skip;\n\n      if (DT.showProgress) DT.showProgress({ type: \"icon\" });\n\n      this.findAll(cond)\n         .then((data) => {\n            // v2: we no longer process item $height\n            /*\n            data.data.forEach((item) => {\n               if (\n                  item.properties != null &&\n                  item.properties.height != \"undefined\" &&\n                  parseInt(item.properties.height) > 0\n               ) {\n                  item.$height = parseInt(item.properties.height);\n               } else if (parseInt(this._where.height) > 0) {\n                  item.$height = parseInt(this._where.height);\n               }\n            });\n            */\n\n            DT.parse(data);\n\n            if (DT.hideProgress) DT.hideProgress();\n         })\n         .catch((err) => {\n            console.error(\"!!!!!\", err);\n         });\n   }\n\n   /**\n    * @method logs()\n    * return the log history related to this model's ABObject.\n    * @param {hash} options\n    *        a key=>value hash of optional search criteria\n    *        .rowId {string} the uuid of the individual entry we are querying\n    *        .levelName {string} the type of entry [\"insert\", \"update\", \"delete\"]\n    *        .username {string} the entries associated with the given user\n    *        .startDate {date} entries that happened ON or AFTER this date\n    *        .endDate {date} entries that happened ON or BEFORE this date\n    *        .start {integer} paging control: how many entries to skip\n    *        .limit {integer} paging control: only return this # entries\n    * @return {Promise}\n    */\n   logs(options) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_logs);\n         this.AB.Network.get(\n            {\n               url: this.object.urlRestLog(),\n               params: options,\n               // params: newCond\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            if (err && err.code) {\n               this.AB.notify.developer(err, {\n                  context: \"AppBuilder:ABModel:logs(): Error\",\n                  options,\n               });\n            }\n            reject(err);\n         });\n      });\n   }\n\n   /**\n    * @method limit\n    * set the limit value for this set of data\n    * @param {integer} limit  the number or elements to return in this call\n    * @return {ABModel} this object that is chainable.\n    */\n   limit(limit) {\n      this._limit = limit;\n      return this;\n   }\n\n   /**\n    * @method skip\n    * set the skip value for this set of data\n    * @param {integer} skip  the number or elements to skip\n    * @return {ABModel} this object that is chainable.\n    */\n   skip(skip) {\n      this._skip = skip;\n      return this;\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      this.prepareMultilingualData(values);\n\n      // remove empty properties\n      for (var key in values) {\n         if (values[key] == null) delete values[key];\n      }\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_update);\n         this.AB.Network.put(\n            {\n               url: this.object.urlRestItem(id),\n               params: values,\n            },\n            { key: jobID, context: { resolve, reject } }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data);\n\n            //    resolve(data);\n\n            //    // If we do not have socket updates available, then trigger an\n            //    // update event with this data.\n            //    if (this.AB.Network.type() != \"socket\") {\n            //       this.AB.emit(\"ab.datacollection.update\", {\n            //          objectId: this.object.id,\n            //          data,\n            //       });\n            //    }\n            // })\n            .catch((err) => {\n               errorPopup(err);\n               reject(err);\n            });\n      });\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, (context, err /*, data */) => {\n            if (err) {\n               reject(err);\n               return;\n            }\n            // this.normalizeData(data);\n            resolve(true);\n            // what about checking for socket updates?\n         });\n         this.AB.Network.put(\n            {\n               url: this.object.urlRestBatch(),\n               params: {\n                  rowIds,\n                  values,\n               },\n            },\n            { key: jobID, context: {} }\n         )\n            // .then(() => {\n            //    resolve(true);\n            // })\n            .catch(reject);\n      });\n   }\n};\n","//\n// ABModelQuery\n//\n// Represents the Data interface for an ABObjectQuery data.\n\nconst ABModel = require(\"./ABModel\");\n\nmodule.exports = class ABModelQuery extends ABModel {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.batchCreate() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   create(values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.create() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.delete() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.update() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.batchUpdate() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n};\n","const ABObjectCore = require(\"../core/ABObjectCore\");\nconst ABObjectWorkspaceViewCollection = require(\"./workspaceViews/ABObjectWorkspaceViewCollection\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\n// NOTE: this has been moved to NetworkRestSocket:\n//\n// // Start listening for server events for object updates and call triggerEvent as the callback\n// if (typeof io != \"undefined\") {\n//    io.socket.on(\"ab.object.update\", function (msg) {\n//       AB.emit(\"ab.object.update\", {\n//          objectId: msg.objectId,\n//          data: msg.data,\n//       });\n//    });\n// } else {\n//    console.error(\"TODO: ABObject: configure Socket.io\");\n// }\n\n// io.socket.on(\"ab.object.delete\", function (msg) {\n// });\n\nmodule.exports = class ABObject extends ABObjectCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      this.workspaceViews = new ABObjectWorkspaceViewCollection(\n         attributes,\n         this,\n         AB\n      );\n\n      // listen for our ABFields.\"definition.updated\"\n      this.fields().forEach((f) => {\n         f.on(\"definition.updated\", (field) => {\n            // create a new Field with the updated def\n            var def = this.AB.definitionByID(field.id);\n            if (!def) return;\n\n            var newField = this.AB.fieldNew(def, this);\n\n            // we want to keep the same fieldID order:\n            var newFields = [];\n            this.fields().forEach((f) => {\n               if (f.id === field.id) {\n                  newFields.push(newField);\n                  return;\n               }\n               newFields.push(f);\n            });\n\n            this._fields = newFields;\n         });\n      });\n\n      // listen\n      // this.AB.on(\"ab.object.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n\n      this._pendingNetworkRequests = {};\n      // {hash}   uuid : {Promise}\n      // convert our migrateXXXX() operations to be Relay/offline compatible.\n      // if a queued operation is sent after a web browser refresh, then\n      // we will NOT have a pending promise to .resolve()/.reject()\n\n      this._handler_object_migrate = (context, err, response) => {\n         // NOTE:\n         var pending = this._pendingNetworkRequests?.[context.uuid];\n         if (err) {\n            pending?.reject(err);\n            return;\n         }\n         pending?.resolve(response);\n      };\n      this.AB.Network.on(\"object.migrate\", this._handler_object_migrate);\n   }\n\n   /**\n    * @method refreshInstance()\n    * Used when a definition.updated message is detected on this ABObject.\n    * This method will return a new instance based upon the current definition\n    * and properly resolve any handlers and pending network Requests.\n    * @return {ABObject}\n    */\n   refreshInstance() {\n      var newObj = this.AB.objectByID(this.id);\n\n      // prevent doing this multiple times:\n      if (this._pendingNetworkRequests) {\n         // remove object.migrate listener\n         this.AB.Network.removeListener(\n            \"object.migrate\",\n            this._handler_object_migrate\n         );\n\n         // transfer the pending network requests\n         newObj._pendingNetworkRequests = this._pendingNetworkRequests;\n         this._pendingNetworkRequests = null;\n      }\n\n      return newObj;\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n\t\t{\n\t\t\tid: uuid(),\n\t\t\tname: 'name',\n\t\t\tlabelFormat: 'xxxxx',\n\t\t\tisImported: 1/0,\n\t\t\tisExternal: 1/0,\n\t\t\turlPath:'string',\n\t\t\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t\t\t// to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n\t\t\ttranslations:[\n\t\t\t\t{}\n\t\t\t],\n\t\t\tfields:[\n\t\t\t\t{ABDataField}\n\t\t\t]\n\t\t}\n\t\t*/\n\n      super.fromValues(attributes);\n\n      if (this.workspaceViews) this.workspaceViews.fromObj(attributes);\n   }\n\n   //// TODO: Refactor isValid() to ignore op and not error if duplicateName is own .id\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.objects((o) => {\n            return (\n               o.id != this.id &&\n               o.name.toLowerCase() == this.name.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L('Object name must be unique (\"{0}\" already in use)', [this.name])\n         );\n      }\n\n      // Check the common validations:\n      // TODO:\n      // if (!inputValidator.validate(values.label)) {\n      // \t_logic.buttonSaveEnable();\n      // \treturn false;\n      // }\n\n      return validator;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an array of any invalid\n    * value errors.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   isValidData(data) {\n      var validator = this.AB.Validation.validator();\n      this.fields().forEach((f) => {\n         // check if value was passed, if so validate it\n         if (data.hasOwnProperty(f.columnName)) f.isValidData(data, validator);\n      });\n\n      return validator;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fieldNew()\n    *\n    * return an instance of a new (unsaved) ABField that is tied to this\n    * ABObject.\n    *\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    *\n    * @param {obj} values  the initial values for this field.\n    *\t\t\t\t\t\t{ key:'{string}'} is required\n    * @return {ABField}\n    */\n   // fieldNew ( values ) {\n   // \t// NOTE: ABFieldManager returns the proper ABFieldXXXX instance.\n   // \treturn ABFieldManager.newField( values, this );\n   // }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      /*\n        return new Promise((resolve, reject) => {\n            // Remove the import object, then its model will not be destroyed\n            if (this.isImported) {\n                this.application\n                    .objectDestroy(this)\n                    .catch(reject)\n                    .then(() => {\n                        resolve();\n                    });\n\n                return;\n            }\n\n            // OK, some of our Fields have special follow up actions that need to be\n            // considered when they no longer exist, so before we simply drop this\n            // object/table, drop each of our fields and give them a chance to clean up\n            // what needs cleaning up.\n\n            // ==> More work, but safer.\n            var fieldDrops = [];\n            this.fields().forEach((f) => {\n                fieldDrops.push(f.destroy());\n            });\n\n            Promise.all(fieldDrops)\n                .then(() => {\n                    return new Promise((next, err) => {\n                        // now drop our table\n                        // NOTE: our .migrateXXX() routines expect the object to currently exist\n                        // in the DB before we perform the DB operations.  So we need to\n                        // .migrateDrop()  before we actually .objectDestroy() this.\n                        this.migrateDrop()\n                            .then(() => {\n                                // finally remove us from the application storage\n                                return this.application.objectDestroy(this);\n                            })\n                            .then(next)\n                            .catch(err);\n                    });\n                })\n\n                // flag .disable to queries who contains this removed object\n                .then(() => {\n                    return new Promise((next, err) => {\n                        this.application\n                            .queries(\n                                (q) =>\n                                    q.objects((o) => o.id == this.id).length > 0\n                            )\n                            .forEach((q) => {\n                                q._objects = q.objects((o) => o.id != this.id);\n\n                                q.disabled = true;\n                            });\n\n                        next();\n                    });\n                })\n                .then(resolve)\n                .catch(reject);\n        });\n */\n\n      var removeFromApplications = () => {\n         var allRemoves = [];\n         this.AB.applications().forEach((app) => {\n            allRemoves.push(app.objectRemove(this));\n         });\n         return Promise.all(allRemoves);\n      };\n\n      var disableRelatedQueries = () => {\n         return new Promise((next /*, err */) => {\n            this.AB.queries(\n               (q) => q.objects((o) => o.id == this.id).length > 0\n            ).forEach((q) => {\n               // q._objects = q.objects((o) => o.id != this.id);\n\n               q.disabled = true;\n            });\n\n            next();\n         });\n      };\n\n      try {\n         // 1) remove us from all Application:\n         await removeFromApplications();\n\n         // 2) disable any connected Queries\n         await disableRelatedQueries();\n\n         // if an imported Object (FederatedTable, Existing Table, etc...)\n         // then skip this step\n         if (this.isImported) {\n            return Promise.resolve();\n         }\n\n         // time to remove my table:\n         // NOTE: our .migrateXXX() routines expect the object to currently exist\n         // in the DB before we perform the DB operations.  So we need to\n         // .migrateDrop()  before we actually .destroy() this.\n         await this.migrateDrop();\n\n         // now remove my definition\n\n         // start with my fields:\n         var fieldDrops = [];\n\n         // Only ABObjects should attempt any fieldDrops.\n         // ABObjectQueries can safely skip this step:\n         if (this.type == \"object\") {\n            var allFields = this.fields();\n            this._fields = []; // clear our field counter so we don't retrigger\n            // this.save() on each field.destroy();\n\n            allFields.forEach((f) => {\n               fieldDrops.push(f.destroy());\n            });\n         }\n         await Promise.all(fieldDrops);\n\n         await super.destroy();\n         this.emit(\"destroyed\");\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABObject.destroy(): error destroying object.\",\n         });\n      }\n\n      // return Promise.resolve()\n      //    .then(() => {\n      //       // 1) remove us from all Application:\n      //       return removeFromApplications();\n      //    })\n      //    .then(() => {\n      //       // 2) disable any connected Queries\n      //       return disableRelatedQueries();\n      //    })\n      //    .then(() => {\n      //       // if an imported Object (FederatedTable, Existing Table, etc...)\n      //       // then skip this step\n      //       if (this.isImported) {\n      //          return Promise.resolve();\n      //       }\n\n      //       // time to remove my table:\n      //       // NOTE: our .migrateXXX() routines expect the object to currently exist\n      //       // in the DB before we perform the DB operations.  So we need to\n      //       // .migrateDrop()  before we actually .destroy() this.\n      //       return this.migrateDrop();\n      //    })\n      //    .then(() => {\n      //       // now remove my definition\n\n      //       // start with my fields:\n      //       var fieldDrops = [];\n\n      //       // Only ABObjects should attempt any fieldDrops.\n      //       // ABObjectQueries can safely skip this step:\n      //       if (this.type == \"object\") {\n      //          var allFields = this.fields();\n      //          this._fields = []; // clear our field counter so we don't retrigger\n      //          // this.save() on each field.destroy();\n\n      //          allFields.forEach((f) => {\n      //             fieldDrops.push(f.destroy());\n      //          });\n      //       }\n\n      //       return Promise.all(fieldDrops)\n      //          .then(() => {\n      //             // now me.\n      //             return super.destroy();\n      //          })\n      //          .then(() => {\n      //             this.emit(\"destroyed\");\n      //          });\n      //    });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save() {\n      var isAdd = false;\n\n      // if this is our initial save()\n      if (!this.id) {\n         this.label = this.label || this.name;\n         isAdd = true;\n      }\n\n      try {\n         await super.save();\n         if (isAdd) {\n            await this.migrateCreate();\n         }\n         return this;\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABObject.save()\",\n            obj: this.toObj(),\n         });\n         throw err;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var result = super.toObj();\n\n      result.objectWorkspaceViews = this.workspaceViews.toObj();\n\n      return result;\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return new Promise((resolve, reject) => {\n         var uuid = this.AB.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"object.migrate\",\n            context: { uuid, id: this.id },\n         };\n         this.AB.Network.post(\n            {\n               url: `/definition/migrate/object/${this.id}`,\n            },\n            jobResponse\n         );\n      });\n   }\n\n   migrateDrop() {\n      return new Promise((resolve, reject) => {\n         var uuid = this.AB.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"object.migrate\",\n            context: { uuid, id: this.id },\n         };\n         this.AB.Network[\"delete\"](\n            {\n               url: `/definition/migrate/object/${this.id}`,\n            },\n            jobResponse\n         );\n      });\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   /**\n    * @method columnResize()\n    *\n    * save the new width of a column\n    *\n    * @param {} id The instance of the field to save.\n    * @param {int} newWidth the new width of the field\n    * @param {int} oldWidth the old width of the field\n    * @return {Promise}\n    */\n   columnResize(columnName, newWidth /*, oldWidth */) {\n      var fieldID = null;\n      for (var i = 0; i < this._fields.length; i++) {\n         if (this._fields[i].columnName == columnName) {\n            fieldID = this._fields[i].id;\n            break;\n            // this._fields[i].settings.width = newWidth;\n         }\n      }\n\n      // Johnny: This is better but still not right.  the ABObject should not be\n      // storing sizes for field widths.  That is a function of the UI and which\n      // Grid is being displayed.  THAT GRID should be storing a column width\n      // locally.\n      // TODO: once we have v2 in place.\n\n      var fieldSettings = this.AB.localSettings(fieldID);\n      fieldSettings = fieldSettings || {};\n      fieldSettings.width = newWidth;\n\n      return this.AB.localSettings(fieldID, fieldSettings);\n      // return this.save();\n   }\n\n   // return the column headers for this object\n   // @param {bool} isObjectWorkspace  return the settings saved for the object workspace\n   columnHeaders(\n      isObjectWorkspace,\n      isEditable,\n      summaryColumns,\n      countColumns,\n      hiddenFieldNames\n   ) {\n      summaryColumns = summaryColumns || [];\n      countColumns = countColumns || [];\n\n      var headers = [];\n      // var columnNameLookup = {};\n\n      // get the header for each of our fields:\n      this.fields().forEach((f) => {\n         var header = f.columnHeader({\n            isObjectWorkspace: isObjectWorkspace,\n            editable: isEditable,\n         });\n\n         if (isEditable) {\n            header.validationRules = f.settings.validationRules;\n         }\n\n         header.alias = f.alias || undefined; // query type\n         header.fieldID = f.id;\n         // header.fieldURL = f.urlPointer();\n\n         // if the field specifies a width\n         if (f.settings.width != 0) {\n            header.width = f.settings.width;\n         }\n\n         // if the User has already updated a local width for this\n         var fieldSettings = this.AB.localSettings(f.id);\n         if (fieldSettings && fieldSettings.width) {\n            if (!header.width || fieldSettings.width > header.width) {\n               // set column width to the customized width\n               header.width = fieldSettings.width;\n            }\n         }\n\n         if (!header.width) {\n            // set column width to adjust:true by default;\n            header.adjust = true;\n         }\n\n         // add the summary footer\n         if (summaryColumns.indexOf(f.id) > -1) {\n            if (f.key == \"calculate\" || f.key == \"formula\") {\n               header.footer = { content: \"totalColumn\", field: f };\n            } else {\n               header.footer = { content: \"summColumn\" };\n            }\n         }\n         // add the count footer\n         else if (countColumns.indexOf(f.id) > -1)\n            header.footer = { content: \"countColumn\" };\n\n         headers.push(header);\n         // columnNameLookup[header.id] = f.columnName; // name => id\n      });\n\n      // update our headers with any settings applied in the Object Workspace\n      /*\n      // In v2: this is handled by the ABDesigner\n      //\n      if (isObjectWorkspace) {\n         let hiddenFieldList = [];\n\n         if (hiddenFieldNames && hiddenFieldNames.length > 0)\n            hiddenFieldList = hiddenFieldNames;\n         // else if (this.workspaceHiddenFields)\n         //    hiddenFieldList = this.workspaceHiddenFields;\n\n         if (hiddenFieldList.length > 0) {\n            hiddenFieldList.forEach((hfID) => {\n               headers.forEach((h) => {\n                  if (columnNameLookup[h.id] == hfID) {\n                     h.hidden = true;\n                  }\n               });\n            });\n         }\n      }\n      */\n\n      return headers;\n   }\n\n   // after a component has rendered, tell each of our fields to perform\n   // any custom display operations\n   // @param {Webix.DataStore} data a webix datastore of all the rows effected\n   //        by the render.\n   customDisplays(data, App, DataTable, rowIds, isEditable) {\n      if (!data || !data.getFirstId) return;\n\n      // var fields = this.fields(f => this.workspaceHiddenFields.indexOf(f.columnName) < 0);\n      let fields = [];\n      DataTable.eachColumn((columnName) => {\n         let field = this.fields((f) => f.columnName == columnName)[0];\n         if (field) fields.push(field);\n      });\n\n      if (rowIds != null) {\n         rowIds.forEach((id) => {\n            let row = data.getItem(id);\n            if (row) {\n               fields.forEach((f) => {\n                  let node = DataTable.getItemNode({\n                     row: row.id,\n                     column: f.columnName,\n                  });\n                  f.customDisplay(row, App, node, {\n                     editable: isEditable,\n                  });\n               });\n            }\n         });\n      } else {\n         let id = data.getFirstId();\n         while (id) {\n            var row = data.getItem(id);\n            if (row) {\n               fields.forEach((f) => {\n                  var node = DataTable.getItemNode({\n                     row: row.id,\n                     column: f.columnName,\n                  });\n                  f.customDisplay(row, App, node, {\n                     editable: isEditable,\n                  });\n               });\n            }\n            id = data.getNextId(id);\n         }\n      }\n   }\n\n   // Display data with label format of object\n   displayData(rowData) {\n      if (rowData == null) return \"\";\n\n      // translate multilingual\n      //// TODO: isn't this a MLObject??  use this.translate()\n      var mlFields = this.multilingualFields();\n      this.translate(rowData, rowData, mlFields);\n\n      var labelData = this.labelFormat || \"\";\n\n      // default label\n      if (!labelData && this.fields().length > 0) {\n         var defaultField = this.fields((f) => f.fieldUseAsLabel())[0];\n         if (defaultField) labelData = `{${defaultField.id}}`;\n         else\n            labelData = `${this.AB.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`; // show id of row\n      }\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            labelData = labelData.replace(colId, field.format(rowData) || \"\");\n         });\n      }\n\n      // if label is empty, then show .id\n      if (!labelData.trim()) {\n         let labelSettings = this.labelSettings || {};\n         if (labelSettings && labelSettings.isNoLabelDisplay) {\n            labelData = L(labelSettings.noLabelText || \"[No Label]\");\n         } else {\n            // show id of row\n            labelData = `${this.AB.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`;\n         }\n      }\n\n      return labelData;\n   }\n\n   currentView() {\n      return this.workspaceViews.getCurrentView();\n   }\n\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = super.warningsAll();\n      this.fields().forEach((f) => {\n         allWarnings = allWarnings.concat(f.warnings());\n      });\n\n      this.indexes().forEach((i) => {\n         allWarnings = allWarnings.concat(i.warnings());\n      });\n\n      return allWarnings.filter((w) => w);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allFields = this.fields();\n\n      if (allFields.length == 0) {\n         this.warningsMessage(\"has no fields\");\n      }\n\n      (this._unknownFieldIDs || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown field id[${id}]`);\n      });\n\n      (this._unknownIndex || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown index id[${id}]`);\n      });\n\n      allFields.forEach((f) => {\n         f.warningsEval();\n      });\n\n      this.indexes().forEach((i) => {\n         i.warningsEval();\n      });\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Object[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n      // this.emit(\"warning\", warnMsg, data);\n   }\n\n   isUuid(text) {\n      console.error(\n         \"ABObject.isUuid(): is depreciated.  directly reference AB.Rules.isUUID() instead.\"\n      );\n      return this.AB.isUUID(text);\n   }\n};\n","const ABObject = require(\"./ABObject\");\n\n/**\n * ABObjectExternal\n * These are ABObjects that ... (might need to be refactored out?)\n * NOTE: on the web client, these should function just like ABObjects\n */\nmodule.exports = class ABObjectExternal extends ABObject {};\n","const ABObject = require(\"./ABObject\");\n\n/**\n * ABObjectImport\n * These are ABObjects that were Imported from existing Tables in the\n * system.\n *\n * NOTE: on the web client, these should function just like ABObjects\n */\nmodule.exports = class ABObjectImport extends ABObject {};\n","//\n// ABObjectQuery\n//\n// A type of Object in our system that is based upon a complex relationship of multiple\n// existing Objects.\n//\n// In the QueryBuilder section of App Builder, a new Query Object can be created.\n// An initial Object can be chosen from our current list of Objects. After that, additional Objects\n// and a specified join type can be specified.\n//\n// A list of fields from each specified Object can also be included as the data to be returned.\n//\n// A where statement is also part of the definition.\n//\n\nconst ABObjectQueryCore = require(\"../core/ABObjectQueryCore\");\n\nvar ABFactory = null;\nif (typeof io != \"undefined\") {\n   io.socket.on(\"ab.query.update\", function (msg) {\n      if (ABFactory) {\n         ABFactory.emit(\"ab.query.update\", {\n            queryId: msg.queryId,\n            data: msg.data,\n         });\n      } else {\n         console.error(\n            \"ABObjectQuery:: received io.socket msg before ABFactory is defined\"\n         );\n         console.error(\"TODO: move this to ABFactory!\");\n      }\n   });\n} else {\n   console.error(\"TODO: install socket.io client for sails updates.\");\n}\n\n// io.socket.on(\"ab.query.delete\", function (msg) {\n// });\n\nmodule.exports = class ABObjectQuery extends ABObjectQueryCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      if (!ABFactory) {\n         ABFactory = AB;\n      }\n      // listen\n      this.AB.on(\"ab.query.update\", (data) => {\n         if (this.id == data.queryId) this.fromValues(data.data);\n      });\n\n      // .fromValues() should already have been called in super()\n      // so now add in our conditionScan()\n      // NOTE: this can be folded into the Core once filterComplex\n      // is fully implemented and not on Platform only.\n\n      // now scan our conditions to make sure they are\n      // 1) reference fields that exist in our Query\n      // 2) completely filled out conditions.\n      this.conditionScan(this.where);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObjectQuery\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   // destroy() {\n   //    return super.destroy().then(() => {\n   //       console.error(\"Move .queryRemove() to Appbuilder Designer.\");\n   //       // return this.AB.queryRemove(this);\n   //    });\n   // }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObjectQuery with it's parent ABApplication\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   // async save() {\n   //    try {\n   //       await super.save();\n   //       return this;\n   //    } catch (err) {\n   //       this.AB.notify.developer(err, {\n   //          context: \"ABObjectQuery.save()\",\n   //          query: this.toObj(),\n   //       });\n   //       throw err;\n   //    }\n   // }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method importFields\n    * instantiate a set of fields from the given attributes.\n    * Our attributes are a set of field URLs That should already be created in their respective\n    * ABObjects.\n    * @param {array} fieldSettings The different field urls for each field\n    *             { }\n    * @param {bool} shouldAliasColumn\n    *        should we add the object alias to the columnNames?\n    *        this is primarily used on the web client\n    */\n   importFields(fieldSettings) {\n      super.importFields(fieldSettings);\n\n      this._fields.forEach((fieldEntry) => {\n         // include object name {aliasName}.{columnName}\n         // to use it in grid headers & hidden fields\n         fieldEntry.field.columnName = `${fieldEntry.alias}.${fieldEntry.field.columnName}`;\n      });\n   }\n\n   /**\n    * @method columnResize()\n    *\n    * save the new width of a column\n    *\n    * @param {} id The instance of the field to save.\n    * @param {int} newWidth the new width of the field\n    * @param {int} oldWidth the old width of the field\n    * @return {Promise}\n    */\n   columnResize(columnName, newWidth, oldWidth) {\n      let field = this.fields((f) => f.columnName == columnName)[0];\n      if (field) {\n         field.settings.width = newWidth;\n\n         return this.save();\n      } else {\n         return Promise.resolve();\n      }\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   // return the column headers for this object\n   // @param {bool} isObjectWorkspace  return the settings saved for the object workspace\n   columnHeaders(\n      isObjectWorkspace,\n      isEditable,\n      summaryColumns,\n      countColumns,\n      hiddenFieldNames\n   ) {\n      var headers = super.columnHeaders(\n         isObjectWorkspace,\n         isEditable,\n         summaryColumns,\n         countColumns,\n         hiddenFieldNames\n      );\n\n      headers.forEach((h) => {\n         // pull object by alias\n         let object = this.objectByAlias(h.alias);\n         if (!object) return;\n\n         let field = object.fieldByID(h.fieldID);\n         if (!field) return;\n\n         // NOTE: query v1\n         let alias = \"\";\n         if (Array.isArray(this.joins())) {\n            alias = field.object.name;\n         } else {\n            alias = h.alias;\n         }\n\n         // include object name {aliasName}.{columnName}\n         // to use it in grid headers & hidden fields\n         h.id = `${alias}.${field.columnName}`;\n\n         // label\n         if (this.settings && this.settings.hidePrefix) {\n            h.header = `${field.label || \"\"}`;\n         } else {\n            h.header = `${field.object.label || \"\"}.${field.label || \"\"}`;\n         }\n\n         // icon\n         if (field.settings && field.settings.showIcon) {\n            h.header = `<span class=\"webix_icon fa fa-${field.fieldIcon()}\"></span>${\n               h.header\n            }`;\n         }\n\n         // If this query supports grouping, then add folder icon to display in grid\n         if (this.isGroup) {\n            let originTemplate = h.template;\n\n            h.template = (item, common) => {\n               if (item[h.id])\n                  return (\n                     common.icon(item, common) +\n                     (originTemplate\n                        ? originTemplate(item, common, item[h.id])\n                        : item[h.id])\n                  );\n               else return \"\";\n            };\n         }\n\n         h.adjust = true;\n         h.minWidth = 220;\n      });\n\n      return headers;\n   }\n\n   /**\n    * @method conditionScan()\n    * Scan the provided condition object and determine if there are any\n    * configuration issues.\n    * @param {obj} rule\n    *        the QueryBuilder rule that we are scanning.\n    * @param {array} listWarnings\n    *        An array of warnings that we should add our notices to.\n    */\n   conditionScan(rule) {\n      if (!rule) {\n         return;\n      }\n\n      if (rule.glue) {\n         (rule.rules || []).forEach((r) => {\n            this.conditionScan(r);\n         });\n         return;\n      }\n\n      // 1) we need to have any key as one of our fields.\n      let field = this.fieldByID(rule.key);\n      if (!field && rule.key != \"this_object\") {\n         this.warningsMessage(\n            \"condition does not reference one of our fields\",\n            {\n               rule,\n            }\n         );\n      }\n\n      // 2) completely filled out conditions.\n      if (!this._conditionCheck) {\n         this._conditionCheck = this.AB.filterComplexNew(\n            `${this.id}_conditionCheck`\n         );\n         // {FilterComplex} ._conditionCheck\n         // has our .isConditionComplete() method.\n      }\n      if (!this._conditionCheck.isConditionComplete(rule)) {\n         this.warningsMessage(\"incomplete condition definition\", {\n            rule,\n         });\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      this.conditionScan(this.where);\n\n      /// include importFields() warnings:\n      this.__missingObject.forEach((f) => {\n         this.warningsMessage(\n            `IMPORT FIELDS: could not resolve object[${\n               f.objectID\n            }] for fieldSetting ${JSON.stringify(f)}`,\n            {\n               fieldInfo: f,\n            }\n         );\n      });\n\n      this.__missingFields.forEach((f) => {\n         this.warningsMessage(\n            `IMPORT FIELDS: Object[${f.objID}] could not find field[${\n               f.fieldID\n            }] for fieldSetting ${JSON.stringify(f.fieldInfo)}`,\n            {\n               object: f.objID,\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__cantFilter.forEach((f) => {\n         this.warningsMessage(\n            `Field[${f.field.id}] referenced in fieldSetting[${JSON.stringify(\n               f.fieldInfo\n            )}] did not pass .canFilterField`,\n            {\n               field: f.field.toObj(),\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__duplicateFields.forEach((f) => {\n         this.warningsMessage(\n            `Field[${\n               f.fieldInfo.fieldID\n            }] referenced in fieldSetting[${JSON.stringify(\n               f.fieldInfo\n            )}] is a duplicate`,\n            {\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__linkProblems.forEach((f) => {\n         this.warningsMessage(f.message, f.data);\n      });\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Query[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   isUuid(text) {\n      console.error(\n         \"ABObject.isUuid(): is depreciated.  directly reference AB.Rules.isUUID() instead.\"\n      );\n      return this.AB.isUUID(text);\n   }\n};\n","const ABProcessCore = require(\"../core/ABProcessCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcess extends ABProcessCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      this._unknownShapes = [];\n      // {array} [ BPMN:Shape, ... ]\n      // Generic Shapes that are added to the Process are registered here.\n      // We will list these as warnings to the ABDesigner.\n\n      // listen\n      this.AB.on(\"ab.abprocess.update\", (data) => {\n         if (this.id == data.objectId) this.fromValues(data.data);\n      });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // remove all my Elements\n      var allElements = this.elements();\n      var allDestroy = [];\n      allElements.forEach((e) => {\n         allDestroy.push(e.destroy());\n      });\n\n      return Promise.all(allDestroy).then(() => {\n         // now remove myself\n         return new Promise((resolve, reject) => {\n            this.toDefinition()\n               .destroy()\n               .then(() => {\n                  // allow normal processing to contine now:\n                  resolve();\n               })\n               .then(() => {\n                  // in the background\n                  // remove this reference from ALL Applications that link\n                  // to me:\n                  console.error(\n                     \"TODO: ABProcess.destroy(): refactor to .emit('destroyed') and let containing Apps self remove.\"\n                  );\n                  var appsWithProcess = this.AB.applications().find((a) => {\n                     return a.hasProcess(this);\n                  });\n                  if (appsWithProcess.length > 0) {\n                     appsWithProcess.forEach((a) => {\n                        a.processRemove(this);\n                     });\n                  }\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n      });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   save() {\n      // if this is an update:\n      // if (this.id) {\n      // \treturn ABDefinition.update(this.id, this.toDefinition());\n      // } else {\n\n      // \treturn ABDefinition.create(this.toDefinition());\n      // }\n\n      // make sure all our tasks have save()ed.\n      var allSaves = [];\n      var allTasks = this.elements();\n      allTasks.forEach((t) => {\n         allSaves.push(t.save());\n      });\n      return Promise.all(allSaves).then(() => {\n         // now we can save our Process definition\n         return this.toDefinition()\n            .save()\n            .then((data) => {\n               // if I didn't have an .id then this was a create()\n               // and I need to update my data with the generated .id\n\n               if (!this.id) {\n                  this.id = data.id;\n               }\n\n               // Also, our embedded elements now all have .ids\n               // where they might not have before.  So now\n               // rebuild our this._elements hash with all id\n               var _new = {};\n               let _old = this._elements;\n               Object.keys(this._elements).forEach((k) => {\n                  _new[this._elements[k].id] = this._elements[k];\n               });\n               this._elements = _new;\n\n               // check to see if an update happened and then make\n               // sure we have that saved.\n               let needSave = false;\n               Object.keys(_new).forEach((k) => {\n                  if (!_old[k]) {\n                     needSave = true;\n                  }\n               });\n\n               if (needSave) {\n                  return this.save();\n               }\n            });\n      });\n   }\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.processes((o) => {\n            return o.name.toLowerCase() == this.name.toLowerCase();\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n         );\n      }\n\n      return validator;\n   }\n\n   /**\n    * @method elementNewForModelDefinition()\n    * create a new process element defined by the given BPMN:Element\n    *\n    * the BPMN:Element definition comes from the BPMN Modeler when a new\n    * diagram element is created.\n    *\n    * @param {BPMN:Element} element\n    *        the BPMN modeler diagram element definition\n    * @return {ABProcess[OBJ]}\n    */\n   elementNewForModelDefinition(element) {\n      var task = this.AB.processElementNewForModelDefinition(element, this);\n      if (task) {\n         this.elementAdd(task);\n      }\n      return task;\n   }\n\n   /**\n    * @method unknownShape()\n    * store a reference to a BPMN Shape that is in our XML diagram,\n    * but we don't have an element for.\n    * @param {BPMN:Shape} shape\n    */\n   unknownShape(shape) {\n      this.unknownShapeRemove(shape);\n      this._unknownShapes.push(shape);\n   }\n\n   /**\n    * @method unknownShapeRemove()\n    * make sure we no longer track the provided BPMN Shape as an unknown shape.\n    * @param {BPMN:Shape} shape\n    */\n   unknownShapeRemove(shape) {\n      this._unknownShapes = this._unknownShapes.filter((s) => s.id != shape.id);\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = [].concat(this._warnings);\n      this.elements().forEach((e) => {\n         e.warningsEval();\n         allWarnings = allWarnings.concat(e.warnings());\n      });\n\n      if (this.elements().length == 0) {\n         allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      }\n\n      // perform a check of our xml document to see if we have any unknown\n      // shapes\n      if (!this._DOMParser) {\n         if (window.DOMParser) {\n            // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n            this._DOMParser = function (xmlStr) {\n               return new window.DOMParser().parseFromString(\n                  xmlStr,\n                  \"text/xml\"\n               );\n            };\n         } else if (\n            typeof window.ActiveXObject != \"undefined\" &&\n            new window.ActiveXObject(\"Microsoft.XMLDOM\")\n         ) {\n            this._DOMParser = function (xmlStr) {\n               var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n               xmlDoc.async = \"false\";\n               xmlDoc.loadXML(xmlStr);\n               return xmlDoc;\n            };\n         } else {\n            throw new Error(\"No XML parser found\");\n         }\n      }\n\n      // find any references to our generic shapes\n      let xml = this._DOMParser(this.xmlDefinition);\n      const genericShapes = [\n         \"bpmn2:startEvent\",\n         \"bpmn2:task\",\n         \"bpmn2:endEvent\",\n      ];\n      genericShapes.forEach((s) => {\n         let allElements = xml.getElementsByTagName(s);\n         for (let x = 0; x < allElements.length; x++) {\n            // if we don't know about this shape\n            let ele = allElements[x];\n            let myEle = this.elementForDiagramID(allElements[x].id);\n            if (!myEle) {\n               this.unknownShape(allElements[x]);\n            }\n         }\n      });\n\n      // if any unknown shapes have been reported:\n      if (this._unknownShapes.length) {\n         allWarnings.push({\n            message: \"Generic Tasks still undefined.\",\n            data: {},\n         });\n      }\n\n      return allWarnings;\n   }\n};\n","const ABStepCore = require(\"../core/ABStepCore\");\n\n// let L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABStep extends ABStepCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // listen\n      // this.AB.on(\"ab.abprocess.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // debugger;\n\n      return new Promise((resolve, reject) => {\n         this.toDefinition()\n            .destroy()\n            .then(() => {\n               resolve();\n            })\n            .catch((err) => {\n               reject(err);\n            });\n      });\n\n      // remove all my Elements\n      // var allElements = this.elements();\n      // var allDestroy = [];\n      // allElements.forEach((e) => {\n      //    allDestroy.push(e.destroy());\n      // });\n\n      // return Promise.all(allDestroy).then(() => {\n      //    // now remove myself\n      //    return new Promise((resolve, reject) => {\n      //       this.toDefinition()\n      //          .destroy()\n      //          .then(() => {\n      //             // allow normal processing to contine now:\n      //             resolve();\n      //          })\n      //          .then(() => {\n      //             // in the background\n      //             // remove this reference from ALL Applications that link\n      //             // to me:\n      //             console.error(\n      //                \"TODO: ABProcess.destroy(): refactor to .emit('destroyed') and let containing Apps self remove.\"\n      //             );\n      //             var appsWithProcess = this.AB.applications().find((a) => {\n      //                return a.hasProcess(this);\n      //             });\n      //             if (appsWithProcess.length > 0) {\n      //                appsWithProcess.forEach((a) => {\n      //                   a.processRemove(this);\n      //                });\n      //             }\n      //          })\n      //          .catch((err) => {\n      //             reject(err);\n      //          });\n      //    });\n      // });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *                .resolve( {this} )\n    */\n   save() {\n      // debugger;\n      return this.toDefinition()\n         .save()\n         .then((data) => {\n            // if I didn't have an .id then this was a create()\n            // and I need to update my data with the generated .id\n\n            if (!this.id) {\n               this.id = data.id;\n            }\n            return this;\n         });\n   }\n\n   isValid() {\n      // debugger;\n      return true;\n      // var validator = this.AB.Validation.validator();\n\n      // // label/name must be unique:\n      // var isNameUnique =\n      //    this.AB.processes((o) => {\n      //       return o.name.toLowerCase() == this.name.toLowerCase();\n      //    }).length == 0;\n      // if (!isNameUnique) {\n      //    validator.addError(\n      //       \"name\",\n      //       L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n      //    );\n      // }\n\n      // return validator;\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // debugger;\n      // report both OUR warnings, and any warnings from any of our fields\n      // var allWarnings = [].concat(this._warnings);\n      // this.elements().forEach((e) => {\n      //    e.warningsEval();\n      //    allWarnings = allWarnings.concat(e.warnings());\n      // });\n      // if (this.elements().length == 0) {\n      //    allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      // }\n      // // perform a check of our xml document to see if we have any unknown\n      // // shapes\n      // if (!this._DOMParser) {\n      //    if (window.DOMParser) {\n      //       // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n      //       this._DOMParser = function (xmlStr) {\n      //          return new window.DOMParser().parseFromString(\n      //             xmlStr,\n      //             \"text/xml\"\n      //          );\n      //       };\n      //    } else if (\n      //       typeof window.ActiveXObject != \"undefined\" &&\n      //       new window.ActiveXObject(\"Microsoft.XMLDOM\")\n      //    ) {\n      //       this._DOMParser = function (xmlStr) {\n      //          var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n      //          xmlDoc.async = \"false\";\n      //          xmlDoc.loadXML(xmlStr);\n      //          return xmlDoc;\n      //       };\n      //    } else {\n      //       throw new Error(\"No XML parser found\");\n      //    }\n      // }\n      // // find any references to our generic shapes\n      // let xml = this._DOMParser(this.xmlDefinition);\n      // const genericShapes = [\n      //    \"bpmn2:startEvent\",\n      //    \"bpmn2:task\",\n      //    \"bpmn2:endEvent\",\n      // ];\n      // genericShapes.forEach((s) => {\n      //    let allElements = xml.getElementsByTagName(s);\n      //    for (let x = 0; x < allElements.length; x++) {\n      //       // if we don't know about this shape\n      //       let ele = allElements[x];\n      //       let myEle = this.elementForDiagramID(allElements[x].id);\n      //       if (!myEle) {\n      //          this.unknownShape(allElements[x]);\n      //       }\n      //    }\n      // });\n      // // if any unknown shapes have been reported:\n      // if (this._unknownShapes.length) {\n      //    allWarnings.push({\n      //       message: \"Generic Tasks still undefined.\",\n      //       data: {},\n      //    });\n      // }\n      //\n      // return allWarnings;\n   }\n};\n","const ABViewManagerCore = require(\"../core/ABViewManagerCore\");\n\nmodule.exports = class ABViewManager extends ABViewManagerCore {};\n","var L = null;\n// multilingual Label fn()\n\nmodule.exports = class CSVImporter {\n   constructor(Label) {\n      // {ABMultilingual.label()} function.\n      //\n      if (!L) {\n         L = Label;\n\n         // if this was a v1: App param:\n         if (Label.Label) {\n            L = Label.Label;\n         }\n      }\n   }\n\n   /**\n    * @method getSeparateItems()\n    * Return the options of how the CSV values are separated.\n    * @return {array}  [ {id, value} ... ]\n    */\n   getSeparateItems() {\n      return [\n         { id: \",\", value: L(\"Comma (,)\") },\n         { id: \"\\t\", value: L(\"Tab (&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)\") },\n         { id: \";\", value: L(\"Semicolon (;)\") },\n         { id: \"s\", value: L(\"Space ( )\") },\n      ];\n   }\n\n   /**\n    * @method validateFile\n    * Validate file extension\n    * @param {*} fileInfo\n    *        https://docs.webix.com/api__ui.uploader_onbeforefileadd_event.html\n    * @return {boolean}\n    */\n   validateFile(fileInfo) {\n      if (!fileInfo || !fileInfo.file || !fileInfo.file.type) return false;\n\n      // validate file type\n      let extensionType = fileInfo.file.type.toLowerCase();\n      if (\n         extensionType == \"text/csv\" ||\n         extensionType == \"application/vnd.ms-excel\"\n      ) {\n         return true;\n      } else {\n         return false;\n      }\n   }\n\n   /**\n    * @method getDataRows\n    * Pull data rows from the CSV file\n    *\n    * @param {Object} fileInfo - https://docs.webix.com/api__ui.uploader_onbeforefileadd_event.html\n    * @param {string} separatedBy\n    *\n    * @return {Promise} -[\n    * \t\t\t\t\t\t[\"Value 1.1\", \"Value 1.2\", \"Value 1.3\"],\n    * \t\t\t\t\t\t[\"Value 2.1\", \"Value 2.2\", \"Value 2.3\"],\n    * \t\t\t\t\t]\n    */\n   getDataRows(fileInfo, separatedBy) {\n      if (!this.validateFile(fileInfo)) return Promise.reject();\n\n      return new Promise((resolve, reject) => {\n         // read CSV file\n         let reader = new window.FileReader();\n         reader.onload = (e) => {\n            let result = [];\n\n            // split lines\n            let dataRows = reader.result\n               .split(/\\r\\n|\\n|\\r/) // CRLF = \\r\\n; LF = \\n; CR = \\r;\n               .filter((row) => row && row.length > 0);\n\n            // split columns\n            (dataRows || []).forEach((row) => {\n               let dataCols = [];\n               if (separatedBy == \",\") {\n                  // NOTE: if the file contains ,, .match() can not reconize this empty string\n                  row = row.replace(/,,/g, \", ,\");\n\n                  // https://stackoverflow.com/questions/11456850/split-a-string-by-commas-but-ignore-commas-within-double-quotes-using-javascript#answer-11457952\n                  dataCols = row.match(/(\".*?\"|[^\",]+)(?=\\s*,|\\s*$)/g);\n               } else {\n                  dataCols = row.split(separatedBy);\n               }\n\n               result.push(dataCols.map((dCol) => this.reformat(dCol)));\n            });\n\n            resolve(result);\n         };\n         reader.readAsText(fileInfo.file);\n      });\n   }\n\n   /**\n    * @method getGuessDataType\n    * return our best guess of what type of data for the requested column.\n    * @param {array} dataRows\n    *        The data we are evaluating:\n    *        [\n    *           [\"Value 1.1\", \"Value 1.2\", \"Value 1.3\"],\n    *           [\"Value 2.1\", \"Value 2.2\", \"Value 2.3\"],\n    * \t\t ]\n    * @param colIndex {Number}\n    * @return {string}\n    */\n   getGuessDataType(dataRows, colIndex) {\n      var data,\n         // {various} the data pulled from the requested row/column\n         repeatNum = 10;\n      // {integer} how many rows do we want to scan trying to find a value\n\n      // Loop to find a value\n      for (var i = 1; i <= repeatNum; i++) {\n         var line = dataRows[i];\n         if (!line) break;\n\n         data = line[colIndex];\n\n         if (data != null && data.length > 0) break;\n      }\n\n      if (data == null || data == \"\") {\n         return \"string\";\n      } else if (\n         data == 0 ||\n         data == 1 ||\n         data == true ||\n         data == false ||\n         data == \"checked\" ||\n         data == \"unchecked\"\n      ) {\n         return \"boolean\";\n      } else if (!isNaN(data)) {\n         return \"number\";\n      } else if (Date.parse(data)) {\n         return \"date\";\n      } else {\n         // determine which type of string this might be:\n         if (data.length > 100) return \"LongText\";\n         else return \"string\";\n      }\n   }\n\n   /**\n    * @method reformat\n    * @param {string} str\n    */\n   reformat(str) {\n      if (!str) return \"\";\n\n      return str.trim().replace(/\"/g, \"\").replace(/'/g, \"\");\n   }\n};\n","const FilterComplexCore = require(\"../core/FilterComplexCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\n/**\n * @function _toInternal()\n * translate our external QB conditions into our internal format that\n * makes the cond.rule unique by adding the field.id to the rule.\n * @param {obj} cond - {\n *                         rules: [\n *                            {\n *                               alias: string || undefined,\n *                               key: uuid,\n *                               rule: string,\n *                               value: object,\n *                            }\n *                         ]\n *                      }\n *        the QB condition format we use exernally in our AB system.\n */\nfunction _toInternal(cond, fields = []) {\n   if (!cond) return;\n   if (cond.key) {\n      // Convert to format\n      // {\n      //    glue: \"and\",\n      //    rules: [\n      //       {\n      //          field: \"test_col\",\n      //          condition: { type: \"greater\", filter: 100 },\n      //       },\n      //    ],\n      // }\n      const field = fields.filter((f) => f.id == cond.key)[0];\n      cond.field = field?.id;\n\n      cond.condition = {\n         type: cond.rule,\n         filter: cond.value,\n      };\n\n      if (Array.isArray(cond.value)) cond.includes = cond.value;\n      else cond.includes = (cond.value ?? \"\").split(\",\");\n\n      if (field?.key == \"date\" || field?.key == \"datetime\") {\n         cond.condition.filter = cond.condition.filter\n            ? AB.rules.toDate(cond.condition.filter)\n            : null;\n\n         cond.includes = cond.includes.map((v) => AB.rules.toDate(v));\n      }\n\n      delete cond.key;\n      delete cond.rule;\n      delete cond.value;\n   }\n\n   if (cond.rules && cond.rules.length) {\n      (cond.rules ?? []).forEach((r) => {\n         _toInternal(r, fields);\n      });\n   }\n}\n\n/**\n * @function _toExternal()\n * translate our internal QB conditions into our external format that\n * where the cond.rule no longer has the field.id.\n * @param {obj} cond - {\n *                         glue: \"and\",\n *                         rules: [\n *                            {\n *                               field: \"test_col\",\n *                               condition: { type: \"greater\", filter: 100 },\n *                            },\n *                         ],\n *                      }\n *        the QB condition format we use internally\n */\nfunction _toExternal(cond, fields = []) {\n   if (!cond) return;\n   if (cond.field) {\n      let field = fields.filter((f) => f.id == cond.field)[0];\n      // cond.alias = alias || undefined;\n      cond.key = field?.id ?? cond.field;\n      cond.condition = cond.condition ?? {};\n      cond.rule = cond.condition.type;\n\n      let values =\n         cond.includes.map((v) => (v instanceof Date ? v.toISOString() : v)) ??\n         [];\n\n      // Convert multi-values to a string\n      if (cond.condition.filter) {\n         if (cond.condition.filter instanceof Date) {\n            if (values.indexOf(cond.condition.filter.toISOString()) < 0) {\n               values.push(cond.condition.filter);\n            }\n         } else if (values.indexOf(cond.condition.filter) < 0)\n            values.push(cond.condition.filter);\n      }\n\n      cond.value = values\n         .map((v) => {\n            // Convert date format\n            if (field && (field.key == \"date\" || field.key == \"datetime\"))\n               return field.exportValue(new Date(v));\n\n            return v;\n         })\n         .join(\",\");\n\n      delete cond.field;\n      delete cond.type;\n      delete cond.includes;\n      delete cond.condition;\n   }\n\n   if (cond.rules && cond.rules.length) {\n      (cond.rules ?? []).forEach((r) => {\n         _toExternal(r, fields);\n      });\n   }\n}\n\nmodule.exports = class FilterComplex extends FilterComplexCore {\n   constructor(idBase, AB, options = {}) {\n      idBase = idBase ?? \"ab_filterComplex\";\n\n      super(idBase, AB);\n\n      this._options = options ?? {};\n\n      this._initComplete = false;\n      // {bool}\n      // trying to prevent multiple .init() from being called due to\n      // various ways of initializing the component.\n\n      this.observing = false;\n      // {bool}\n      // try to prevent multiple observers generating >1 \"changed\"\n      // event.\n\n      let labels = (this.labels = {\n         common: (AB._App ?? {}).labels,\n         component: {\n            and: L(\"And\"),\n            or: L(\"Or\"),\n\n            thisObject: L(\"This Object\"),\n            inQuery: L(\"In Query\"),\n            notInQuery: L(\"Not In Query\"),\n            inQueryField: L(\"By Query Field\"),\n            notInQueryField: L(\"Not By Query Field\"),\n\n            inQueryFieldQueryPlaceholder: L(\"Choose a Query\"),\n            inQueryFieldFieldPlaceholder: L(\"Choose a Field\"),\n\n            sameAsUser: L(\"Same As User\"),\n            notSameAsUser: L(\"Not Same As User\"),\n\n            sameAsField: L(\"Same As Field\"),\n            notSameAsField: L(\"Not Field\"),\n\n            inDataCollection: L(\"In Data Collection\"),\n            notInDataCollection: L(\"Not In Data Collection\"),\n\n            containsCondition: L(\"contains\"),\n            notContainsCondition: L(\"doesn't contain\"),\n            isCondition: L(\"is\"),\n            isNotCondition: L(\"is not\"),\n            isEmpty: L(\"is empty\"),\n            isNotEmpty: L(\"is not empty\"),\n\n            beforeCondition: L(\"is before\"),\n            afterCondition: L(\"is after\"),\n            onOrBeforeCondition: L(\"is on or before\"),\n            onOrAfterCondition: L(\"is on or after\"),\n            beforeCurrentCondition: L(\"is before current date\"),\n            afterCurrentCondition: L(\"is after current date\"),\n            onOrBeforeCurrentCondition: L(\"is on or before current date\"),\n            onOrAfterCurrentCondition: L(\"is on or after current date\"),\n            onLastDaysCondition: L(\"last ... days\"),\n            onNextDaysCondition: L(\"next ... days\"),\n\n            equalCondition: L(\":\"),\n            notEqualCondition: L(\"≠\"),\n            lessThanCondition: L(\"<\"),\n            moreThanCondition: L(\">\"),\n            lessThanOrEqualCondition: L(\"≤\"),\n            moreThanOrEqualCondition: L(\"≥\"),\n\n            equalListCondition: L(\"equals\"),\n            notEqualListCondition: L(\"does not equal\"),\n\n            checkedCondition: L(\"is checked\"),\n            notCheckedCondition: L(\"is not checked\"),\n\n            isCurrentUserCondition: L(\"is current user\"),\n            isNotCurrentUserCondition: L(\"is not current user\"),\n            containsCurrentUserCondition: L(\"contains current user\"),\n            notContainsCurrentUserCondition: L(\"does not contain current user\"),\n\n            contextDefaultOption: L(\"choose option\"),\n            equalsProcessValue: L(\"equals process value\"),\n            notEqualsProcessValueCondition: L(\"not equals process value\"),\n            inProcessValueCondition: L(\"in process value\"),\n            notInProcessValueCondition: L(\"not in process value\"),\n         },\n      });\n\n      // internal list of Webix IDs to reference our UI components.\n      let ids = (this.ids = {\n         popup: this.unique(`${idBase}_popup`),\n         querybuilder: this.unique(`${idBase}_querybuilder`),\n         save: this.unique(`${idBase}_save`),\n      });\n\n      // Set current username\n      this.Account.username = this.AB.Account.username();\n\n      this._settings.recordRuleFieldOptions = [];\n\n      // webix UI definition:\n      this.ui = {\n         rows: [\n            {\n               view: \"layout\",\n               type: \"clean\",\n               borderless: this._options.borderless ?? true,\n               rows: [\n                  {\n                     id: ids.querybuilder,\n                     view: \"query\",\n                     data: () => [],\n                     // data: async (field) => await this.pullOptions(field),\n                     fields: [],\n                     disabled: true,\n                     height: this._options.height,\n                  },\n               ],\n            },\n            {\n               id: ids.save,\n               view: \"button\",\n               css: \"webix_primary\",\n               value: L(\"Save\"),\n               hidden: this._options.isSaveHidden ?? false,\n               click: () => {\n                  if (this.myPopup) this.myPopup.hide();\n                  this.emit(\"save\", this.getValue());\n               },\n            },\n         ],\n      };\n   }\n\n   // setting up UI\n   init(options) {\n      if (this._initComplete) return;\n\n      super.init(options);\n\n      const el = $$(this.ids.querybuilder);\n\n      if (el) {\n         if (!this.observing) {\n            this.__blockOnChange = true;\n            el.getState().$observe(\"value\", (v) => {\n               if (this.__blockOnChange) return false;\n\n               this.emit(\"changed\", this.getValue());\n            });\n            this.__blockOnChange = false;\n\n            // HACK!! The process of setting the $observe() is actually\n            // calling the cb() when set.  This is clearing our .condition\n            // if we call init() after we have setValues(). which can happen\n            // when using the popUp() method.\n            let _cond = this.condition;\n            this.condition = _cond;\n            this.observing = true;\n         }\n         this._initComplete = true;\n      }\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    * @param condition {Object} - [Optional] {\n    *                                           glue: \"and\" | \"or\",\n    *                                           rules: []\n    *                                        }\n    */\n   isValid(rowData, condition = this.condition) {\n      let helper = () => true;\n\n      let $query = $$(this.ids.querybuilder);\n      if ($query) {\n         helper = $query.getFilterFunction();\n         return helper(rowData);\n      } else {\n         return super.isValid(rowData, condition);\n      }\n   }\n\n   /**\n    * @method isConditionComplete()\n    * Check a given condition entry and indicate if it is fully\n    * filled out.\n    * @param {obj} cond\n    *        The Condition object we are checking.  If a Macro\n    *        condition if provided: { glue:\"and\", rules:[] } then\n    *        this method will return True/False if All rules are\n    *        complete.\n    *        If an individual rule is provided, then it evaluates\n    *        the completness of that rule. { key, rule, value }\n    * @return {bool}\n    */\n   isConditionComplete(cond) {\n      if (!cond) return false;\n\n      let isComplete = true;\n      // start optimistically.\n\n      if (cond.glue) {\n         (cond.rules ?? []).forEach((r) => {\n            isComplete = isComplete && this.isConditionComplete(r);\n         });\n      } else {\n         // every condition needs a .key & .rule\n         if (!cond.key || cond.key == \"\") {\n            isComplete = false;\n         }\n\n         if (!cond.rule || cond.rule == \"\") {\n            isComplete = false;\n         }\n\n         if (isComplete) {\n            switch (cond.rule) {\n               case \"is_current_user\":\n               case \"is_not_current_user\":\n               case \"contain_current_user\":\n               case \"not_contain_current_user\":\n               case \"same_as_user\":\n               case \"not_same_as_user\":\n               case \"less_current\":\n               case \"greater_current\":\n               case \"less_or_equal_current\":\n               case \"greater_or_equal_current\":\n               case \"is_empty\":\n               case \"is_not_empty\":\n                  // There are only a few rules that don't need a\n                  // value\n                  break;\n\n               default:\n                  // The rest do need a .value\n                  if (!cond.value || cond.value == \"\") {\n                     isComplete = false;\n                  }\n                  break;\n            }\n         }\n      }\n\n      return isComplete;\n   }\n\n   setValue(settings) {\n      super.setValue(settings);\n      this.condition = settings;\n\n      const el = $$(this.ids.querybuilder);\n      if (el) {\n         if (!settings) {\n            // Clear settings value of webix.query\n            el.define(\"value\", {\n               glue: \"and\",\n               rules: [],\n            });\n            return;\n         }\n\n         let qbSettings = this.AB.cloneDeep(settings);\n\n         // Settings should match a condition built upon our QB format:\n         // {\n         //    glue:\"and\",\n         //    rules:[\n         //       {\n         //          key:\"uuid\",\n         //          rule:\"\",\n         //          value:\"\"\n         //       }\n         //    ]\n         // }\n         // externally our key should be the field.id and the rules should be\n         // the \"contains\", \"not_contains\", \"equal\" ... keywords.\n         // However, internally, we convert these rules into .ids that are\n         // unique for each field (see uiInit()).  So when we bring in settings\n         // we need to translate them into our internal format:\n\n         _toInternal(qbSettings, this._Fields);\n\n         this.__blockOnChange = true;\n         el.define(\"value\", qbSettings);\n         this.__blockOnChange = false;\n      }\n   }\n\n   getValue() {\n      if ($$(this.ids.querybuilder)) {\n         let settings = this.AB.cloneDeep(\n            $$(this.ids.querybuilder).getState().value ?? {}\n         );\n\n         // what we pull out of the QB will have .rules in our internal format:\n         // {field.id}_{rule}  (see uiInit() )\n         // But we need to store them in our generic QB format for use outside\n         // our FilterComplex widget.\n         _toExternal(settings, this._Fields);\n         this.condition = settings;\n      }\n\n      return super.getValue();\n   }\n\n   fieldsLoad(fields = [], object = null) {\n      super.fieldsLoad(fields, object);\n      this.uiInit();\n   }\n\n   toShortHand() {\n      return \"Add Filters\";\n   }\n\n   uiInit() {\n      this.uiQueryCustomValue();\n\n      let el = $$(this.ids.querybuilder);\n      if (el) {\n         // Clear fields\n         while (el.config.fields.length > 0) {\n            el.config.fields.pop();\n         }\n         // Set fields\n         (this.fieldsToQB() ?? []).forEach((f) => {\n            el.config.fields.push(f);\n         });\n         if (el.config.fields.length) {\n            el.enable();\n         } else {\n            this.setValue(\"\");\n            el.disable();\n         }\n      }\n   }\n\n   // HACK: have to overwrite Webix Query's function to support our custom input requirement.\n   // HooWoo\n   uiQueryCustomValue() {\n      const $el = $$(this.ids.querybuilder);\n      if (!$el) return;\n\n      // window.query.views.filter.prototype.CreateFilter = (\n      $el.$app.require(\"jet-views\", \"filter\").prototype.CreateFilter = (\n         field,\n         type,\n         format,\n         conditions,\n         place\n      ) => {\n         let inputs = this.uiValue(field);\n\n         let ui = {\n            id: place.config.id,\n            view: \"filter\",\n            localId: \"filter\",\n            conditions: conditions,\n            field: field,\n            mode: type,\n            template: function (o) {\n               let str = o[field];\n               let parser =\n                  format ?? (type == \"date\" ? webix.i18n.dateFormatStr : null);\n               if (parser) str = parser(str);\n               return str;\n            },\n            inputs: inputs,\n            margin: 6,\n         };\n\n         let filter = webix.ui(ui, place);\n\n         // let data = [];\n         // const $query = $$(this.ids.querybuilder);\n         // if ($query) {\n         //    data = $query.app.getService(\"backend\").data(field);\n         // }\n         // filter.parse(data);\n\n         return filter;\n      };\n   }\n\n   uiValue(fieldColumnName) {\n      let result;\n\n      // Special case: this_object\n      if (fieldColumnName == \"this_object\") {\n         return []\n            .concat(this.uiQueryValue(\"this_object\"))\n            .concat(this.uiDataCollectionValue(\"this_object\"))\n            .concat(this.uiCustomValue(\"this_object\"))\n            .concat(this.uiContextValue(\"this_object\", \"uuid\"));\n      }\n\n      let field = (this._Fields ?? []).filter(\n         (f) => f.id == fieldColumnName\n      )[0];\n\n      switch (field?.key) {\n         case \"boolean\":\n            result = this.uiBooleanValue(field);\n            break;\n         case \"connectObject\":\n            result = []\n               .concat(this.uiQueryValue(field))\n               .concat(this.uiUserValue(field))\n               .concat(this.uiDataCollectionValue(field))\n               .concat(this.uiContextValue(field))\n               .concat(this.uiNoneValue());\n            break;\n         case \"date\":\n         case \"datetime\":\n            result = [\"datepicker\", \"daterangepicker\"];\n            break;\n         case \"list\":\n            result = this.uiListValue(field);\n            break;\n         case \"user\":\n            result = []\n               .concat(this.uiNoneValue())\n               .concat(this.uiUserValue(field));\n            break;\n         // case \"number\":\n         //    result = [\"text\"];\n         //    break;\n         case \"string\":\n         case \"LongText\":\n         case \"email\":\n            result = this.uiNoneValue();\n            break;\n      }\n\n      // Add filter options to Custom index\n      const LinkType = `${field?.settings?.linkType}:${field?.settings?.linkViaType}`;\n      if (\n         field?.settings?.isCustomFK &&\n         // 1:M\n         (LinkType == \"one:many\" ||\n            // 1:1 isSource = true\n            (LinkType == \"one:one\" && field?.settings?.isSource))\n      ) {\n         result = (result ?? []).concat(this.uiTextValue(field));\n      } else if (field?.key != \"connectObject\") {\n         result = (result ?? [])\n            .concat(this.uiTextValue(field))\n            .concat(this.uiQueryFieldValue(field))\n            .concat(this.uiContextValue(field));\n      }\n      // Special case: from Process builder\n      // .processFieldsLoad()\n      else if (fieldColumnName.indexOf(\"uuid\") > -1) {\n         result = this.uiContextValue(null, fieldColumnName);\n      }\n\n      if (this._settings.isRecordRule) {\n         result = (result ?? []).concat(this.uiRecordRuleValue(field));\n      }\n\n      result = (result ?? []).concat(this.uiCustomValue(field));\n\n      return result;\n   }\n\n   uiNoneValue() {\n      return [\n         {\n            batch: \"none\",\n            borderless: true,\n            view: \"template\",\n            template: \"\",\n         },\n      ];\n   }\n\n   uiBooleanValue(field) {\n      return [\n         {\n            batch: \"boolean\",\n            view: \"checkbox\",\n         },\n      ];\n   }\n\n   uiTextValue(field) {\n      return [\n         {\n            batch: \"text\",\n            view: \"text\",\n            on: {\n               onAfterRender: function () {\n                  // HACK: focus on webix.text and webix.textarea\n                  // Why!! If the parent layout has zIndex lower than 101,\n                  // then is not able to focus to webix.text and webix.textarea\n                  let $layout =\n                     this.queryView(function (a) {\n                        return !a.getParentView();\n                     }, \"parent\") ?? this;\n                  $layout.$view.style.zIndex = 202;\n               },\n            },\n         },\n      ];\n   }\n\n   uiQueryValue(field) {\n      let options = [];\n\n      let isQueryField =\n         this._QueryFields?.filter((f) => f.id == field.id).length > 0;\n\n      // populate the list of Queries for this_object:\n      if (field == \"this_object\" && this._Object) {\n         options = this.queries((q) => q.canFilterObject(this._Object));\n      }\n      // populate the list of Queries for a query field\n      else if (isQueryField) {\n         options = this.queries(\n            (q) =>\n               (this._Object ? this._Object.id : \"\") != q.id && // Prevent filter looping\n               q.canFilterObject(field.datasourceLink)\n         );\n      }\n\n      options?.forEach((q) => {\n         options.push({\n            id: q.id,\n            value: q.label,\n         });\n      });\n\n      return [\n         {\n            batch: \"query\",\n            view: \"combo\",\n            options: options ?? [],\n         },\n      ];\n   }\n\n   uiListValue(field) {\n      return [\n         {\n            batch: \"list\",\n            view: \"combo\",\n            options: field?.settings?.options?.map(function (x) {\n               return {\n                  id: x.id,\n                  value: x.text,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiUserValue(field) {\n      return [\n         {\n            batch: \"user\",\n            view: \"combo\",\n            options: this.AB.Account.userList().map((u) => {\n               return {\n                  id: u.username,\n                  value: u.username,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiDataCollectionValue(field) {\n      let linkObjectId;\n      if (field == \"this_object\" && this._Object) {\n         linkObjectId = this._Object.id;\n      } else {\n         linkObjectId = field?.settings?.linkObject;\n      }\n\n      return [\n         {\n            batch: \"datacollection\",\n            view: \"combo\",\n            options: linkObjectId\n               ? this.AB.datacollections(\n                    (dc) => dc?.datasource?.id == linkObjectId\n                 ).map((dc) => {\n                    return {\n                       id: dc.id,\n                       value: dc.label,\n                    };\n                 })\n               : [],\n         },\n      ];\n   }\n\n   uiQueryFieldValue(field) {\n      return [\n         {\n            batch: \"queryField\",\n            view: \"combo\",\n            placeholder: this.labels.component.inQueryFieldQueryPlaceholder,\n            options: this.queries(\n               (q) => this._Object == null || q.id != this._Object.id\n            ).map((q) => {\n               return {\n                  id: q.id,\n                  value: q.label,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiRecordRuleValue(field) {\n      return [\n         {\n            batch: \"recordRule\",\n            view: \"select\",\n            options: this._settings.recordRuleFieldOptions ?? [],\n         },\n      ];\n   }\n\n   uiContextValue(field, processFieldKey = null) {\n      const processFields = (this._ProcessFields ?? [])\n         .filter((pField) => {\n            if (!pField) return false;\n\n            let result = false;\n            switch (field) {\n               case \"this_object\":\n                  result =\n                     this._Object.id === pField.object?.id && !pField.field;\n\n                  break;\n\n               default:\n                  switch (field.key) {\n                     case \"boolean\":\n                        result = [\"boolean\"].includes(pField.field?.key);\n\n                        break;\n\n                     case \"connectObject\":\n                        result =\n                           field.settings.linkObject ===\n                           (pField.field?.object.id ?? pField.object.id);\n\n                        if (!field.settings.isCustomFK) {\n                           result = result && !pField.field;\n\n                           break;\n                        }\n\n                        result =\n                           result &&\n                           (field.settings.indexField ||\n                              field.settings.indexField2) === pField.field?.id;\n\n                        break;\n\n                     case \"date\":\n                     case \"datetime\":\n                        result = [\"date\", \"datetime\"].includes(\n                           pField.field?.key\n                        );\n\n                        break;\n\n                     case \"calculate\":\n                     case \"formula\":\n                     case \"number\":\n                        result = [\"calculate\", \"formula\", \"number\"].includes(\n                           pField.field?.key\n                        );\n\n                        break;\n\n                     case \"string\":\n                     case \"LongText\":\n                     case \"email\":\n                     case \"AutoIndex\":\n                     case \"list\":\n                        result = [\n                           \"string\",\n                           \"LongText\",\n                           \"email\",\n                           \"AutoIndex\",\n                           \"list\",\n                        ].includes(pField.field?.key);\n\n                        break;\n\n                     case \"user\":\n                        result = [\"user\"].includes(pField.field?.key);\n\n                        break;\n\n                     default:\n                        if (pField.key) {\n                           // uuid\n                           const processFieldId = pField.key.split(\".\").pop();\n\n                           result =\n                              processFieldId === field.id ||\n                              processFieldId === field.key ||\n                              processFieldId === processFieldKey ||\n                              pField.key === processFieldKey;\n                        }\n\n                        break;\n                  }\n\n                  break;\n            }\n\n            return result;\n         })\n         .map((e) => {\n            return {\n               id: e.key,\n               value: L(\"context({0})\", [e.label]),\n            };\n         });\n\n      if (!processFields) return [];\n\n      return [\n         {\n            batch: \"context\",\n            view: \"select\",\n            options: [\n               {\n                  id: \"empty\",\n                  value: this.labels.component.contextDefaultOption,\n               },\n               ...processFields,\n            ],\n         },\n      ];\n   }\n\n   uiCustomValue(field) {\n      if (!field) return [];\n\n      const customOptions = this._customOptions ?? {};\n      const options = customOptions[field.id ?? field] ?? {};\n      return options.values ?? [];\n   }\n\n   popUp(...options) {\n      const condition = Object.assign({}, this.condition);\n\n      if (!this.myPopup) {\n         let ui = {\n            id: this.ids.popup,\n            view: \"popup\",\n            height: 400,\n            width: 800,\n            body: this.ui,\n         };\n\n         if (!$$(this.ids.popup)) {\n            this.myPopup = webix.ui(ui);\n            this.init(this._settings);\n            if (this._Fields) {\n               this.fieldsLoad(this._Fields, this._Object);\n            }\n\n            // NOTE: do this, before the .setValue() operation, as we need to have\n            // our fields and filters defined BEFORE a setValue() is performed.\n            // this.uiInit();\n\n            if (condition) {\n               this.setValue(condition);\n            }\n\n            this.myPopup.show(...options);\n         } else {\n            $$(this.ids.popup).show(...options);\n         }\n      } else {\n         this.myPopup.show(...options);\n      }\n   }\n\n   /**\n    * @method addCustomOption\n    *\n    * @param {string|uuid} fieldId\n    * @param {Object} options - {\n    *                               conditions: [],\n    *                               values: []\n    *                           }\n    */\n   addCustomOption(fieldId, options = {}) {\n      this._customOptions = this._customOptions ?? {};\n      this._customOptions[fieldId] = options;\n   }\n};\n","const RowFilterCore = require(\"../core/RowFilterCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class RowFilter extends RowFilterCore {\n   constructor(App, idBase, AB) {\n      super(App, idBase, AB);\n\n      console.error(\"TODO: Switch RowFilter => FilterComplex\");\n\n      // internal list of Webix IDs to reference our UI components.\n      let ids = (this.ids = {\n         component: this.unique(`${idBase}_rowFilter`),\n         filterForm: this.unique(`${idBase}_rowFilter_form`),\n         addNewFilter: this.unique(`${idBase}_rowFilter_addNewFilter`),\n\n         glue: this.unique(`${idBase}_rowFilter_glue`),\n         field: this.unique(`${idBase}_rowFilter_field`),\n         rule: this.unique(`${idBase}_rowFilter_rule`),\n         inputValue: this.unique(`${idBase}_rowFilter_inputValue`),\n\n         queryCombo: this.unique(`${idBase}_rowFilter_queryCombo`),\n         queryFieldCombo: this.unique(`${idBase}_rowFilter_queryFieldCombo`),\n         queryFieldComboQuery: this.unique(\n            `${idBase}_rowFilter_queryFieldComboQuery`\n         ),\n         queryFieldComboField: this.unique(\n            `${idBase}_rowFilter_queryFieldComboField`\n         ),\n         fieldMatch: this.unique(`${idBase}_rowFilter_fieldMatchCombo`),\n\n         dataCollection: this.unique(`${idBase}_rowFilter_dataCollection`),\n\n         listOptions: this.unique(`${idBase}_rowFilter_listOptions`),\n\n         datePicker: this.unique(`${idBase}_rowFilter_datePicker`),\n      });\n\n      // Set current username\n      // this.Account.username = this.AB.Account.username();\n\n      var batchName; // we need to revert to this default when switching away from a in/by query field\n\n      // Default options list to push to all fields\n      this.queryFieldOptions = [\n         {\n            value: L(\"By Query Field\"),\n            id: \"in_query_field\",\n         },\n         {\n            value: L(\"Not In Query\"),\n            id: \"not_in_query_field\",\n         },\n      ];\n\n      this.recordRuleOptions = [];\n      this.recordRuleFieldOptions = [];\n\n      let _logic = this._logic || {};\n\n      /**\n       * @method getFieldList\n       * return field list to render options\n       */\n      _logic.getFieldList = () => {\n         return (this._Fields || []).map((f) => {\n            let label = f.label;\n\n            // include object's name to options\n            if (this._settings.showObjectName && f.object) {\n               label = f.object.label + \".\" + f.label;\n            }\n\n            return {\n               id: f.id,\n               value: label,\n               alias: f.alias || undefined, // ABObjectQuery\n            };\n         });\n      };\n\n      _logic.getFilterUI = () => {\n         let instance = this;\n         let config_settings = this.config_settings || {};\n\n         return {\n            id: \"f\" + webix.uid(),\n            isolate: true,\n            cols: [\n               {\n                  // Add / Or\n                  view: \"combo\",\n                  id: ids.glue,\n                  width: 80,\n                  value: config_settings.glue || \"and\",\n                  options: [\n                     {\n                        value: L(\"And\"),\n                        id: \"and\",\n                     },\n                     {\n                        value: L(\"Or\"),\n                        id: \"or\",\n                     },\n                  ],\n                  on: {\n                     onChange: function (newVal, oldVal) {\n                        _logic.selectCombineCondition(newVal);\n                     },\n                  },\n               },\n               {\n                  // Field list\n                  view: \"combo\",\n                  id: ids.field,\n                  suggest: {\n                     on: {\n                        onBeforeShow: function () {\n                           this.define(\"width\", 400);\n                           this.resize();\n                        },\n                     },\n                     data: _logic.getFieldList(),\n                  },\n                  on: {\n                     onChange: function (columnId) {\n                        var $viewCond = this.getParentView();\n                        _logic.selectField(columnId, $viewCond);\n                     },\n                  },\n               },\n               // Comparer\n               {\n                  id: ids.rule,\n                  width: 220,\n                  cells: [\n                     {},\n                     // Query\n                     {\n                        batch: \"query\",\n                        view: \"combo\",\n                        value: \"in_query\",\n                        options: [\n                           {\n                              value: L(\"In Query\"),\n                              id: \"in_query\",\n                           },\n                           {\n                              value: L(\"Not In Query\"),\n                              id: \"not_in_query\",\n                           },\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"is empty\"),\n                              id: \"is_empty\",\n                           },\n                           {\n                              value: L(\"is not empty\"),\n                              id: \"is_not_empty\",\n                           },\n                           {\n                              value: L(\"Same As User\"),\n                              id: \"same_as_user\",\n                           },\n                           {\n                              value: L(\"Not Same As User\"),\n                              id: \"not_same_as_user\",\n                           },\n                           {\n                              value: L(\"In Data Collection\"),\n                              id: \"in_data_collection\",\n                           },\n                           {\n                              value: L(\"Not In Data Collection\"),\n                              id: \"not_in_data_collection\",\n                           },\n                        ].concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition, oldValue) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n\n                     // Date\n                     {\n                        batch: \"date\",\n                        view: \"combo\",\n                        value: \"less\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"is before\"),\n                              id: \"less\",\n                           },\n                           {\n                              value: L(\"is after\"),\n                              id: \"greater\",\n                           },\n                           {\n                              value: L(\"is on or before\"),\n                              id: \"less_or_equal\",\n                           },\n                           {\n                              value: L(\"is on or after\"),\n                              id: \"greater_or_equal\",\n                           },\n                           {\n                              value: L(\"is before current date\"),\n                              id: \"less_current\",\n                           },\n                           {\n                              value: L(\"is after current date\"),\n                              id: \"greater_current\",\n                           },\n                           {\n                              value: L(\"is on or before current date\"),\n                              id: \"less_or_equal_current\",\n                           },\n                           {\n                              value: L(\"is on or after current date\"),\n                              id: \"greater_or_equal_current\",\n                           },\n                           {\n                              value: L(\"last ... days\"),\n                              id: \"last_days\",\n                           },\n                           {\n                              value: L(\"next ... days\"),\n                              id: \"next_days\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Number\n                     {\n                        batch: \"number\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\":\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"≠\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"<\"),\n                              id: \"less\",\n                           },\n                           {\n                              value: L(\">\"),\n                              id: \"greater\",\n                           },\n                           {\n                              value: L(\"≤\"),\n                              id: \"less_or_equal\",\n                           },\n                           {\n                              value: L(\"≥\"),\n                              id: \"greater_or_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // List\n                     {\n                        batch: \"list\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"Same As User\"),\n                              id: \"same_as_user\",\n                           },\n                           {\n                              value: L(\"Not Same As User\"),\n                              id: \"not_same_as_user\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition, oldValue) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Boolean\n                     {\n                        batch: \"boolean\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // User\n                     {\n                        batch: \"user\",\n                        view: \"combo\",\n                        value: \"is_current_user\",\n                        options: [\n                           {\n                              value: L(\"is current user\"),\n                              id: \"is_current_user\",\n                           },\n                           {\n                              value: L(\"is not current user\"),\n                              id: \"is_not_current_user\",\n                           },\n                           {\n                              value: L(\"contains current user\"),\n                              id: \"contain_current_user\",\n                           },\n                           {\n                              value: L(\"does not contain current user\"),\n                              id: \"not_contain_current_user\",\n                           },\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // String\n                     {\n                        batch: \"string\",\n                        view: \"combo\",\n                        value: \"contains\",\n                        options: [\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Email\n                     {\n                        batch: \"email\",\n                        view: \"combo\",\n                        value: \"contains\",\n                        options: [\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               // Value\n               {\n                  id: ids.inputValue,\n                  isolate: true,\n                  cells: [\n                     {\n                        batch: \"empty\",\n                     },\n\n                     // Query\n                     {\n                        id: ids.queryCombo,\n\n                        batch: \"query\",\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Query Field\n                     {\n                        id: ids.queryFieldCombo,\n                        batch: \"queryField\",\n                        rows: [\n                           {\n                              id: ids.queryFieldComboQuery,\n                              view: \"combo\",\n                              options: [],\n                              placeholder: L(\"Choose a Query\"),\n                              on: {\n                                 onChange: function (value) {\n                                    var $viewComparer = this.getParentView();\n                                    var $viewCond = $viewComparer\n                                       .getParentView()\n                                       .getParentView();\n                                    _logic.onChangeQueryFieldCombo(\n                                       value,\n                                       $viewCond\n                                    );\n\n                                    _logic.onChange();\n                                 },\n                              },\n                           },\n                           {\n                              id: ids.queryFieldComboField,\n                              view: \"combo\",\n                              options: [],\n                              placeholder: L(\"Choose a Field\"),\n                              on: {\n                                 onChange: _logic.onChange,\n                              },\n                           },\n                        ],\n                     },\n\n                     // Field match\n                     {\n                        id: ids.fieldMatch,\n                        batch: \"fieldMatch\",\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Data collection\n                     {\n                        id: ids.dataCollection,\n                        batch: \"dataCollection\",\n                        view: \"richselect\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Date\n                     {\n                        // inputView.format = field.getDateFormat();\n                        batch: \"date\",\n                        id: ids.datePicker,\n                        view: \"datepicker\",\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Number\n                     {\n                        batch: \"number\",\n                        view: \"text\",\n                        validate: webix.rules.isNumber,\n                        on: {\n                           onTimedKeyPress: function () {\n                              if (this.validate()) _logic.onChange();\n                           },\n                        },\n                     },\n                     // List\n                     {\n                        batch: \"list\",\n                        id: ids.listOptions,\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Boolean\n                     {\n                        batch: \"boolean\",\n                        view: \"checkbox\",\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // User\n                     {\n                        batch: \"user\",\n                        view: \"combo\",\n                        options: this.AB.Account.userList().map((u) => {\n                           return {\n                              id: u.username,\n                              value: u.username,\n                           };\n                        }),\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // String\n                     {\n                        batch: \"string\",\n                        view: \"text\",\n                        on: {\n                           onTimedKeyPress: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Email\n                     {\n                        batch: \"email\",\n                        view: \"text\",\n                        on: {\n                           onTimedKeyPress: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  icon: \"fa fa-plus\",\n                  type: \"icon\",\n                  autowidth: true,\n                  click: function () {\n                     var $viewForm = this.getFormView();\n\n                     var indexView = $viewForm.index(this.getParentView());\n\n                     _logic.addNewFilter(indexView + 1);\n                  },\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_danger\",\n                  icon: \"fa fa-trash\",\n                  type: \"icon\",\n                  autowidth: true,\n                  click: function () {\n                     var $viewCond = this.getParentView();\n\n                     _logic.removeNewFilter($viewCond);\n                  },\n               },\n            ],\n         };\n      };\n\n      _logic.getAddButtonUI = () => {\n         return {\n            view: \"button\",\n            id: ids.addNewFilter,\n            css: \"webix_primary\",\n            type: \"form\",\n            label: L(\"Add a filter\"),\n            click: () => {\n               _logic.addNewFilter();\n            },\n         };\n      };\n\n      _logic.addNewFilter = (index, fieldId) => {\n         var viewId;\n         var ui = _logic.getFilterUI();\n\n         var $viewForm = $$(ids.filterForm);\n         if ($viewForm) {\n            viewId = $viewForm.addView(ui, index);\n\n            _logic.toggleAddNewButton();\n\n            // select a option of field\n            if (fieldId) _logic.selectField(fieldId, $$(viewId), true);\n         }\n\n         return viewId;\n      };\n\n      _logic.removeNewFilter = function ($viewCond) {\n         var $viewForm = $$(ids.filterForm);\n\n         $viewForm.removeView($viewCond);\n\n         _logic.toggleAddNewButton();\n\n         _logic.onChange();\n      };\n\n      _logic.toggleAddNewButton = function () {\n         if (!$$(ids.filterForm)) return;\n\n         // Show \"Add new filter\" button\n         if ($$(ids.filterForm).getChildViews().length < 1) {\n            $$(ids.filterForm).hide();\n            $$(ids.addNewFilter).show();\n         }\n         // Hide \"Add new filter\" button\n         else {\n            $$(ids.filterForm).show();\n            $$(ids.addNewFilter).hide();\n         }\n      };\n\n      _logic.selectCombineCondition = (val, ignoreNotify) => {\n         // define combine value to configuration\n         this.config_settings.glue = val;\n\n         // update value of every combine conditions\n         var $viewConds = $$(ids.filterForm).getChildViews();\n         $viewConds.forEach((v) => {\n            if (v.$$ && v.$$(ids.glue)) v.$$(ids.glue).setValue(val);\n         });\n\n         if (!ignoreNotify) _logic.onChange();\n      };\n\n      _logic.selectField = (columnId, $viewCond, ignoreNotify) => {\n         if (!this._Fields) return;\n\n         var field = this._Fields.filter((f) => f.id == columnId)[0];\n         if (!field) return;\n\n         // switch view\n         batchName = field.key;\n         if (field.id == \"this_object\") batchName = \"query\";\n         // Special this object query\n         else if (batchName == \"LongText\" || batchName == \"combined\")\n            batchName = \"string\";\n         else if (field.key == \"formula\") batchName = \"number\";\n         var isQueryField =\n            this._QueryFields.filter((f) => {\n               return f.id == field.id;\n            }).length > 0;\n         if (isQueryField) {\n            // we chose a connectField which is now a Query type\n            batchName = \"query\";\n         }\n         $viewCond.$$(ids.rule).showBatch(batchName);\n         $viewCond.$$(ids.inputValue).showBatch(batchName);\n\n         let options = [];\n         let Queries = [];\n\n         // populate the list of Queries for this_object:\n         if (field.id == \"this_object\" && this._Object) {\n            Queries = this.queries((q) => q.canFilterObject(this._Object));\n         }\n         // populate the list of Queries for a query field\n         else if (isQueryField) {\n            Queries = this.queries((q) => {\n               return (\n                  (this._Object ? this._Object.id : \"\") != q.id && // Prevent filter looping\n                  q.canFilterObject(field.datasourceLink)\n               );\n            });\n         }\n\n         Queries.forEach((q) => {\n            options.push({\n               id: q.id,\n               value: q.label,\n            });\n         });\n         $viewCond\n            .$$(ids.inputValue)\n            .$$(ids.queryCombo)\n            .define(\"options\", options);\n         $viewCond.$$(ids.inputValue).$$(ids.queryCombo).refresh();\n\n         // populate options of list\n         if (field.key == \"list\") {\n            let listOptions = field.settings.options.map(function (x) {\n               return {\n                  id: x.id,\n                  value: x.text,\n               };\n            });\n\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.listOptions)\n               .define(\"options\", listOptions);\n            $viewCond.$$(ids.inputValue).$$(ids.listOptions).refresh();\n         }\n         // set format of datepicker\n         else if (field.key == \"date\") {\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.datePicker)\n               .define(\"format\", field.getFormat());\n            $viewCond.$$(ids.inputValue).$$(ids.datePicker).refresh();\n         }\n\n         var rule = null,\n            ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n            $viewComparer = $viewCond\n               .$$(ids.rule)\n               .queryView({ id: ruleViewId });\n         if ($viewComparer && $viewComparer.getList) {\n            let defaultOpt = ($viewComparer.getList().config.data || [])[0];\n            if (defaultOpt) {\n               $viewComparer.setValue(defaultOpt.id);\n            }\n\n            // rule = $viewComparer.getValue();\n            // if (rule == \"in_query_field\" || rule == \"not_in_query_field\") {\n            // \t// Show the new value inputs\n            // \t$viewCond.$$(ids.inputValue).showBatch(\"queryField\");\n            // } else if (rule == \"same_as_field\" || rule == \"not_same_as_field\") {\n            // \t// Show the new value inputs\n            // \t$viewCond.$$(ids.inputValue).showBatch(\"fieldMatch\");\n            // }\n         }\n\n         if (!ignoreNotify) _logic.onChange();\n      };\n\n      _logic.onChangeRule = (rule, $viewCond, notify = false) => {\n         switch (rule) {\n            case \"contains\":\n            case \"not_contains\":\n            case \"equals\":\n            case \"not_equal\":\n               // For \"connect_fields\" search by CUSTOM index value\n               if (batchName == \"query\") {\n                  $viewCond.$$(ids.inputValue).showBatch(\"string\");\n               }\n               // If want to call notify or call .onChange(), then pass notify is true.\n               // _logic.onChange();\n               break;\n\n            case \"is_current_user\":\n            case \"is_not_current_user\":\n            case \"contain_current_user\":\n            case \"not_contain_current_user\":\n            case \"same_as_user\":\n            case \"not_same_as_user\":\n            case \"less_current\":\n            case \"greater_current\":\n            case \"less_or_equal_current\":\n            case \"greater_or_equal_current\":\n            case \"is_empty\":\n            case \"is_not_empty\":\n               // clear and disable the value field\n               $viewCond.$$(ids.inputValue).showBatch(\"empty\");\n               _logic.onChange();\n               break;\n\n            case \"last_days\":\n            case \"next_days\":\n               // Show the number input\n               $viewCond.$$(ids.inputValue).showBatch(\"number\");\n               break;\n\n            case \"in_query_field\":\n            case \"not_in_query_field\":\n               // populate the list of Queries for this_object:\n               var options = [];\n\n               // Get all application's queries\n               this.queries(\n                  (q) => this._Object == null || q.id != this._Object.id\n               ).forEach((q) => {\n                  options.push({\n                     id: q.id,\n                     value: q.label,\n                  });\n               });\n\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.queryFieldComboQuery)\n                  .define(\"options\", options);\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.queryFieldComboQuery)\n                  .refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"queryField\");\n               break;\n\n            case \"same_as_field\":\n            case \"not_same_as_field\":\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.fieldMatch)\n                  .define(\"options\", this.recordRuleFieldOptions);\n               $viewCond.$$(ids.inputValue).$$(ids.fieldMatch).refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"fieldMatch\");\n               break;\n\n            case \"in_data_collection\":\n            case \"not_in_data_collection\": {\n               let dcOptions = [];\n\n               // pull data collection list\n\n               // get id of the link object\n               let linkObjectId,\n                  columnId = $viewCond.$$(ids.field).getValue();\n               if (columnId == \"this_object\" && this._Object) {\n                  linkObjectId = this._Object.id;\n               } else {\n                  let field = this._Fields.filter((f) => f.id == columnId)[0];\n                  if (field) linkObjectId = field.settings.linkObject;\n               }\n\n               if (this._Application && linkObjectId) {\n                  this._Application\n                     .datacollections(\n                        (dc) =>\n                           dc.datasource && dc.datasource.id == linkObjectId\n                     )\n                     .forEach((dc) => {\n                        dcOptions.push({\n                           id: dc.id,\n                           value: dc.label,\n                        });\n                     });\n               }\n\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.dataCollection)\n                  .define(\"options\", dcOptions);\n               $viewCond.$$(ids.inputValue).$$(ids.dataCollection).refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"dataCollection\");\n               break;\n            }\n\n            default:\n               // Show the default value inputs\n               $viewCond.$$(ids.inputValue).showBatch(batchName);\n\n               if (notify) _logic.onChange();\n\n               break;\n         }\n      };\n\n      _logic.onChangeQueryFieldCombo = (value, $viewCond) => {\n         // populate the list of Queries for this_object:\n         let options = [];\n         // Get all queries fields\n         let Query = this.queries((q) => {\n            return q.id == value;\n         })[0];\n         if (Query) {\n            Query.fields((f) => {\n               return !f.isConnection;\n            }).forEach((q) => {\n               options.push({\n                  id: q.id,\n                  value: q.object.label + \".\" + q.label,\n               });\n            });\n\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.queryFieldComboField)\n               .define(\"options\", options);\n            $viewCond.$$(ids.inputValue).$$(ids.queryFieldComboField).refresh();\n         }\n\n         // _logic.onChange();\n      };\n\n      _logic.onChange = () => {\n         if (!this.__blockOnChange) {\n            // refresh config settings before notify\n            _logic.getValue();\n\n            console.warn(\"convert RowFilter.callback.onChange() to .emit()\");\n            _logic.callbacks.onChange();\n            this.emit(\"change\");\n         }\n\n         return false;\n      };\n\n      _logic.blockOnChange = () => {\n         this.__blockOnChange = true;\n      };\n\n      _logic.unblockOnChange = () => {\n         this.__blockOnChange = false;\n      };\n\n      /**\n       * @method getValue\n       *\n       * @return {JSON} -\n       * {\n       * \t\tglue: '', // 'and', 'or'\n       *\t\trules: [\n       *\t\t\t{\n       *\t\t\t\tkey:\t'column name',\n       *\t\t\t\trule:\t'rule',\n       *\t\t\t\tvalue:\t'value'\n       *\t\t\t}\n       *\t\t]\n       * }\n       */\n      _logic.getValue = () => {\n         let config_settings = {\n            glue: \"and\",\n            rules: [],\n         };\n\n         var $viewForm = $$(ids.filterForm);\n         if ($viewForm) {\n            $viewForm.getChildViews().forEach(($viewCond, index) => {\n               if (index == 0) {\n                  config_settings.glue = $viewCond.$$(ids.glue).getValue();\n               }\n\n               var $fieldElem = $viewCond.$$(ids.field);\n               if (!$fieldElem) return;\n\n               /* field id */\n               var fieldId = $fieldElem.getValue();\n               if (!fieldId) return;\n\n               /* alias */\n               var alias;\n               var selectedOpt = $viewCond\n                  .$$(ids.field)\n                  .getPopup()\n                  .config.body.data.filter((opt) => opt.id == fieldId)[0];\n               if (selectedOpt) alias = selectedOpt.alias || undefined;\n\n               /* rule */\n               var rule = null,\n                  ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n                  $viewComparer = $viewCond\n                     .$$(ids.rule)\n                     .queryView({ id: ruleViewId });\n               if ($viewComparer && $viewComparer.getValue)\n                  rule = $viewComparer.getValue();\n\n               /* value */\n               var value = null,\n                  valueViewId = $viewCond.$$(ids.inputValue).getActiveId(),\n                  $viewConditionValue = $viewCond\n                     .$$(ids.inputValue)\n                     .queryView({ id: valueViewId });\n               if ($viewConditionValue && $viewConditionValue.getValue) {\n                  value = $viewConditionValue.getValue();\n               } else if (\n                  $viewConditionValue &&\n                  $viewConditionValue.getChildViews()\n               ) {\n                  var vals = [];\n                  $viewConditionValue.getChildViews().forEach((element) => {\n                     vals.push($$(element).getValue());\n                  });\n                  value = vals.join(\":\");\n               }\n\n               // Convert date format\n               if (value instanceof Date) {\n                  let dateField = this._Fields.filter(\n                     (f) => f.id == fieldId\n                  )[0];\n                  if (dateField) {\n                     value = dateField.exportValue(value);\n                  } else {\n                     value = value.toISOString();\n                  }\n               }\n\n               config_settings.rules.push({\n                  alias: alias || undefined,\n                  key: fieldId,\n                  rule: rule,\n                  value: value,\n               });\n            });\n         }\n\n         this.config_settings = config_settings;\n\n         return this.config_settings;\n      };\n\n      // webix UI definition:\n      this.ui = {\n         id: ids.component,\n         rows: [\n            {\n               view: \"form\",\n               id: ids.filterForm,\n               hidden: true,\n               elements: [],\n            },\n            _logic.getAddButtonUI(),\n         ],\n      };\n   }\n\n   // setting up UI\n   init(options = {}) {\n      super.init(options);\n\n      // register our callbacks:\n      for (var c in this._logic.callbacks) {\n         this._logic.callbacks[c] = options[c] || this._logic.callbacks[c];\n      }\n\n      if (options.showObjectName)\n         this._settings.showObjectName = options.showObjectName;\n\n      if (options.isRecordRule) {\n         this.recordRuleOptions = [\n            {\n               value: L(\"Same As Field\"),\n               id: \"same_as_field\",\n            },\n            {\n               value: L(\"Not Field\"),\n               id: \"not_same_as_field\",\n            },\n         ];\n         this.recordRuleFieldOptions = options.fieldOptions;\n      }\n   }\n\n   setValue(settings) {\n      settings = settings || {};\n\n      super.setValue(settings);\n\n      let ids = this.ids;\n      let logic = this._logic;\n\n      // block .onChange event\n      logic.blockOnChange();\n\n      let config_settings = this.AB.cloneDeep(settings);\n      config_settings.rules = config_settings.rules || [];\n\n      // Redraw form with no elements\n      var $viewForm = $$(ids.filterForm);\n      if ($viewForm) webix.ui([], $viewForm);\n\n      // Add \"new filter\" button\n      if (config_settings.rules.length == 0) {\n         logic.toggleAddNewButton();\n      }\n\n      config_settings.rules.forEach((f) => {\n         var viewId = logic.addNewFilter(),\n            $viewCond = $$(viewId);\n\n         if ($viewCond == null) return;\n\n         var field = this._Fields.filter((col) => col.id == f.key)[0];\n\n         // \"and\" \"or\"\n         $viewCond.$$(ids.glue).define(\"value\", config_settings.glue);\n         $viewCond.$$(ids.glue).refresh();\n\n         // Select Field\n         $viewCond.$$(ids.field).define(\"value\", f.key);\n         $viewCond.$$(ids.field).refresh();\n         logic.selectField(f.key, $viewCond, true);\n\n         // Comparer\n         var ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n            $viewComparer = $viewCond\n               .$$(ids.rule)\n               .queryView({ id: ruleViewId });\n         if ($viewComparer && $viewComparer.setValue) {\n            $viewComparer.define(\"value\", f.rule);\n            $viewComparer.refresh();\n         }\n\n         // if (f.rule == \"in_query_field\" || f.rule == \"not_in_query_field\" || f.rule == \"same_as_field\" || f.rule == \"not_same_as_field\") {\n         $viewCond.blockEvent();\n         logic.onChangeRule(f.rule, $viewCond);\n         $viewCond.unblockEvent();\n         // }\n\n         // Input\n         var valueViewId = $viewCond.$$(ids.inputValue).getActiveId(),\n            $viewConditionValue = $viewCond\n               .$$(ids.inputValue)\n               .queryView({ id: valueViewId });\n         if ($viewConditionValue && $viewConditionValue.setValue) {\n            // convert to Date object\n            if (\n               field &&\n               field.key == \"date\" &&\n               f.value &&\n               (f.rule == \"less\" ||\n                  f.rule == \"greater\" ||\n                  f.rule == \"less_or_equal\" ||\n                  f.rule == \"greater_or_equal\")\n            ) {\n               $viewConditionValue.define(\"value\", new Date(f.value));\n            } else {\n               $viewConditionValue.define(\"value\", f.value);\n            }\n\n            $viewConditionValue.refresh();\n         } else if (\n            $viewConditionValue &&\n            $viewConditionValue.getChildViews()\n         ) {\n            let vals = (f.value || \"\").split(\":\");\n            let index = 0;\n            $viewConditionValue.getChildViews().forEach((element) => {\n               $$(element).blockEvent();\n               $$(element).setValue(vals[index]);\n               if (index == 0) {\n                  logic.onChangeQueryFieldCombo(vals[index], $viewCond);\n               }\n               $$(element).unblockEvent();\n               // $$(element).refresh();\n               index++;\n            });\n         }\n\n         if (field && field.key == \"user\") {\n            $viewCond.blockEvent();\n            logic.onChangeRule(f.rule, $viewCond);\n            $viewCond.blockEvent();\n         }\n      });\n\n      // unblock .onChange event\n      logic.unblockOnChange();\n   }\n\n   /**\n    * @method isComplete()\n    * returns a truthy value representing whether or not our current condition\n    * expression is fully completed.  Then externally checks can be made to\n    * verify if the data is complete.\n    * @return {bool}\n    */\n   isComplete() {\n      if (!this._completeConditions) {\n         this._completeConditions = this.AB.filterComplexNew(\n            `${this.ids.component}_iscomplete`\n         );\n      }\n\n      return this._completeConditions.isConditionComplete(this.getValue());\n   }\n};\n","// const ABComponent = require(\"./ABComponent\");\nimport ClassUI from \"../../ui/ClassUI\";\nconst ABViewForm = require(\"../platform/views/ABViewForm\");\n\nlet L = null;\n\nclass RowUpdater extends ClassUI {\n   constructor(idBase, AB) {\n      super(idBase, {\n         form: `${idBase}_rowUpdaterForm`,\n         addNew: `${idBase}_rowUpdaterAddNew`,\n         field: `${idBase}_rowUpdaterField`,\n      });\n\n      this.idBase = idBase;\n\n      this._Object = null;\n      // {ABObject}\n      // The ABObject we are building a form for.\n\n      this._mockFormWidget = null;\n      // {ABViewForm}\n      // When building our form components to display, they need a\n      // ABViewForm to be associated with.\n\n      this.AB = AB;\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   /**\n    * @method uiItem()\n    * Return the webix description of a new field/value row.\n    * @return {json}\n    */\n   uiItem() {\n      const self = this;\n\n      return {\n         rows: [\n            {\n               view: \"layout\",\n               isolate: true,\n               cols: [\n                  {\n                     // Label\n                     view: \"label\",\n                     width: 40,\n                     label: L(\"Set\"),\n                  },\n                  {\n                     // Field list\n                     view: \"combo\",\n                     id: this.ids.field,\n                     options: this.getFieldList(true),\n                     on: {\n                        onChange: async function (columnId) {\n                           const $viewItem = this.getParentView();\n\n                           await self.selectField(columnId, $viewItem);\n                        },\n                     },\n                  },\n                  {\n                     // Label\n                     view: \"label\",\n                     width: 40,\n                     label: L(\"To\"),\n                  },\n                  {\n                     view: \"segmented\",\n                     value: \"custom\",\n                     height: 40,\n                     maxWidth: 160,\n                     options: [\n                        { id: \"custom\", value: L(\"Custom\") },\n                        { id: \"process\", value: L(\"Process\") },\n                     ],\n                     hidden:\n                        this._extendedOptions == null ||\n                        !this._extendedOptions.length,\n                     on: {\n                        onChange: function (val) {\n                           const $viewItem = this.getParentView();\n\n                           self.toggleCustomProcessOption(\n                              $viewItem,\n                              val == \"process\"\n                           );\n                        },\n                     },\n                  },\n                  // Field value\n                  {},\n                  // Extended value\n                  {\n                     hidden: true,\n                  },\n                  {\n                     // \"Remove\" button\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     icon: \"fa fa-trash\",\n                     type: \"icon\",\n                     autowidth: true,\n\n                     click: function () {\n                        const $viewCond = this.getParentView().getParentView();\n\n                        self.removeItem($viewCond);\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   /**\n    * @method ui()\n    * return the webix description of our Entry form.\n    * @return {json}\n    */\n   ui() {\n      // webix UI definition:\n      return {\n         rows: [\n            {\n               view: \"form\",\n               id: this.ids.form,\n               hidden: true,\n               borderless: true,\n               elements: [],\n            },\n            {\n               view: \"button\",\n               id: this.ids.addNew,\n               icon: \"fa fa-plus\",\n               type: \"iconButton\",\n               label: L(\"Add field to edit\"),\n               click: () => {\n                  this.addItem();\n               },\n            },\n         ],\n      };\n   }\n\n   init(AB) {\n      const $form = $$(this.ids.form);\n      if ($form) AB.Webix.extend($form, AB.Webix.ProgressBar);\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method addItem()\n    * Add another field/value entry item to our form.\n    * @param {integer} index\n    *        which position in the list of form elements do we want to\n    *        insert the new row.\n    * @return {string} the webix .id of the new row we just added.\n    */\n   addItem(index) {\n      const $form = $$(this.ids.form);\n      const remainFields = this.getFieldList(true);\n\n      if (remainFields.length < 1) return;\n\n      const ui = this.uiItem();\n      const viewId = $form.addView(ui, index);\n\n      this.toggleForm();\n\n      return viewId;\n   }\n\n   /**\n    * @method getFieldList()\n    * Return an array of options in a webix.list format that represents the\n    * possible fields that can be selected on the current ABObject.\n    * @param {bool} excludeSelected\n    *        should we exclude from the list the fields that are ALREADY\n    *        displayed on the form?\n    * @return {array} [ { id, value }, ... ]\n    *         id: ABField.id\n    *         value: ABField.label\n    */\n   getFieldList(excludeSelected) {\n      let options = (this._Object.fields() || []).map((f) => {\n         return {\n            id: f.id,\n            value: f.label,\n         };\n      });\n\n      if (excludeSelected) {\n         const $form = $$(this.ids.form);\n\n         $form.getChildViews().forEach(($viewCond) => {\n            // Ignore \"Add new\" button\n            if (!$viewCond || !$viewCond.$$) return;\n\n            const $fieldElem = $viewCond.$$(this.ids.field);\n\n            if (!$fieldElem) return;\n\n            const fieldId = $fieldElem.getValue();\n\n            if (!fieldId) return;\n\n            options = options.filter((opt) => opt.id != fieldId);\n         });\n      }\n      return options;\n   }\n\n   /**\n    * @method getValue\n    * Return an array of field:value results that have been entered on this\n    * form.\n    * @return {Array}\n    *         [\n    *            {\n    *               fieldId: {UUID}\n    *               isProcessValue: {Boolean} - If it is true, then value is from Process parameter\n    *               value: {Object}\n    *            },\n    *            ...\n    *         ]\n    */\n   getValue() {\n      const result = [];\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         $form.getChildViews().forEach(($viewContainer) => {\n            const $viewItem = $viewContainer.getChildViews()[0];\n\n            // Ignore \"Add new\" button\n            if (!$viewItem || !$viewItem.$$) return;\n\n            const $fieldElem = $viewItem.$$(this.ids.field);\n\n            if (!$fieldElem) return;\n\n            const fieldId = $fieldElem.getValue();\n\n            if (!fieldId) return;\n\n            let $customValueElem = $viewItem.getChildViews()[4];\n            $customValueElem = this._pullInputElement($customValueElem);\n\n            const $processValueElem = $viewItem.getChildViews()[5];\n\n            if (!$customValueElem && !$processValueElem) return;\n\n            const fieldInfo = this._Object.fieldByID(fieldId);\n            const val = {\n               fieldId: fieldId,\n            };\n\n            // Custom value\n            if ($customValueElem && $customValueElem.isVisible()) {\n               if (\n                  fieldInfo.key === \"connectObject\" ||\n                  fieldInfo.key === \"user\"\n               )\n                  val.value = fieldInfo.getValue($customValueElem);\n               else if (\n                  fieldInfo.key === \"date\" ||\n                  fieldInfo.key === \"datetime\"\n               ) {\n                  const currDateCheckbox =\n                     $customValueElem.getChildViews()[0] ?? $customValueElem;\n\n                  if (currDateCheckbox.getValue() == true)\n                     val.value = \"ab-current-date\";\n                  else {\n                     const datePicker =\n                        $customValueElem.getChildViews()[1] ?? $customValueElem;\n\n                     val.value = fieldInfo.getValue(datePicker);\n                  }\n               }\n               // Get value from data field manager\n               else val.value = fieldInfo.getValue($customValueElem);\n            }\n            // Process value\n            else if ($processValueElem && $processValueElem.isVisible()) {\n               val.isProcessValue = true;\n               val.value = $processValueElem.getValue();\n            }\n\n            // Add to output\n            result.push(val);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method objectLoad\n    * Load the Object we are currently working with.\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      this._Object = object;\n\n      this._mockApp = this.AB.applicationNew({});\n      this._mockFormWidget = new ABViewForm(\n         {\n            settings: {\n               showLabel: false,\n               labelWidth: 0,\n            },\n         },\n         this._mockApp // just need any ABApplication here\n      );\n      this._mockFormWidget.objectLoad(object);\n\n      this.setValue(null); // clear\n   }\n\n   /**\n    * @method removeItem\n    * Remove the current form row.\n    * @param {webix.view} $viewCond\n    *        This is the webix.view that contains the whole value row\n    *        we are removing.\n    */\n   removeItem($viewCond) {\n      const $form = $$(this.ids.form);\n\n      $form.removeView($viewCond);\n      this.toggleForm();\n   }\n\n   /**\n    * @method selectField\n    * Update the value display when a field is selected. Changing to a\n    * different field will change the types of values that can be entered.\n    * @param {string} columnId\n    *        The field.uuid of the object that was selected.\n    * @param {webix.view} $viewItem\n    *        The webix.view that contains the value expression of the field\n    *        that was selected.\n    */\n   async selectField(columnId, $viewItem) {\n      const field = this._Object.fieldByID(columnId);\n\n      if (!field) {\n         this.AB.notify.builder(\n            new Error(`could not find field for id[${columnId}]`),\n            {\n               context: \"RowUpdater.selectField() could not find a field\",\n               fieldID: columnId,\n            }\n         );\n\n         return;\n      }\n\n      const fieldComponent = field.formComponent(),\n         formFieldWidget = fieldComponent.newInstance(\n            this._mockApp,\n            this._mockFormWidget\n         ),\n         formFieldComponent = formFieldWidget.component(\n            this.AB._App,\n            this.idBase\n         );\n      const childViews = $viewItem.getChildViews();\n\n      let inputView =\n         typeof formFieldComponent.ui == \"function\"\n            ? formFieldComponent.ui()\n            : formFieldComponent.ui;\n\n      // Add extended value options\n      $viewItem.removeView(childViews[5]);\n\n      if (this._extendedOptions?.length)\n         $viewItem.addView(\n            {\n               view: \"richselect\",\n               options: this._extendedOptions,\n               hidden: true,\n            },\n            5\n         );\n      else\n         $viewItem.addView(\n            {\n               hidden: true,\n            },\n            5\n         );\n\n      await this.busy();\n\n      // WORKAROUND: add '[Current User]' option to the user data field\n      switch (field.key) {\n         case \"connectObject\":\n         case \"user\":\n            inputView = inputView.rows[0].rows[0];\n            inputView.suggest.body.data =\n               (await field.getOptions()).map((e) => {\n                  return {\n                     id: field.getRelationValue(e),\n                     value: e.text,\n                  };\n               }) ?? [];\n\n            if (field.key === \"user\")\n               inputView.suggest.body.data.unshift({\n                  id: \"ab-current-user\",\n                  value: \"ab-current-user\",\n                  // This one is saved with the \"value\" not \"id\".\n                  // value: L(\"Current User\"),\n               });\n\n            break;\n\n         case \"date\":\n         case \"datetime\":\n            inputView = {\n               view: \"layout\",\n               rows: [\n                  {\n                     view: \"checkbox\",\n                     labelWidth: 0,\n                     labelRight: L(\"Current Date/Time\"),\n                     on: {\n                        onChange: function (newVal) {\n                           const layout = this.getParentView();\n\n                           if (!layout) return;\n\n                           const datePicker = layout.getChildViews()[1];\n\n                           if (!datePicker) return;\n\n                           newVal ? datePicker.hide() : datePicker.show();\n                        },\n                     },\n                  },\n                  inputView,\n               ],\n            };\n\n            break;\n      }\n\n      // Change component to display value\n      $viewItem.removeView(childViews[4]);\n      $viewItem.addView(inputView, 4);\n\n      formFieldComponent.init();\n\n      // Show custom display of data field\n      if (field.customDisplay)\n         field.customDisplay({}, this.AB._App, childViews[4].$view);\n\n      this.toggleCustomProcessOption(\n         $viewItem,\n         childViews[3].getValue() === \"process\"\n      );\n      $$($viewItem).adjust();\n      $viewItem.getFormView().adjust();\n\n      this.ready();\n   }\n\n   /**\n    * @method setValue\n    * Given the previous settings, redraw the form with the field/value\n    * entries.\n    * @param {array} settings\n    *        [\n    *           {\n    *              fieldId: {UUID}\n    *              value: {Object|String}\n    *           }, ...\n    *        ]\n    */\n   setValue(settings) {\n      const $form = $$(this.ids.form);\n\n      if (!$form) return;\n\n      // Redraw form with no elements\n      webix.ui([], $form);\n\n      settings = settings || [];\n      if (settings.length < 1) return;\n\n      settings.forEach(async (item) => {\n         const $viewContainer = $$(this.addItem());\n         const $viewItem = $viewContainer.getChildViews()[0];\n         const $valueTypeButton = $viewItem.queryView(\n            { view: \"segmented\" },\n            \"self\"\n         );\n\n         $valueTypeButton.setValue(item.isProcessValue ? \"process\" : \"custom\");\n\n         const $field = $viewItem.$$(this.ids.field);\n\n         $field.define(\"value\", item.fieldId);\n         $field.refresh();\n\n         await this.selectField(item.fieldId, $viewItem);\n\n         const fieldInfo = this._Object.fieldByID(item.fieldId);\n\n         if (!fieldInfo) return;\n\n         // Set process value\n         if (item.isProcessValue) {\n            const $processValueElem = $viewItem.getChildViews()[5];\n\n            $processValueElem.setValue?.(item.value);\n\n            return;\n         }\n\n         // Set custom value\n         let $customValueElem = $viewItem.getChildViews()[4];\n         $customValueElem = this._pullInputElement($customValueElem);\n         const rowData = {};\n\n         rowData[fieldInfo.columnName] = item.value?.value ?? item.value;\n         fieldInfo.setValue($customValueElem, rowData);\n\n         // Set \"Current Date/Time\" check box\n         if (\n            (fieldInfo.key == \"date\" || fieldInfo.key == \"datetime\") &&\n            rowData[fieldInfo.columnName] == \"ab-current-date\" &&\n            $customValueElem.config.view == \"checkbox\"\n         ) {\n            $customValueElem.setValue(true);\n         }\n      });\n\n      this.toggleForm();\n   }\n\n   /**\n    * @method toggleForm\n    * decide if the form with the field/value elements should be displayed.\n    */\n   toggleForm() {\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         const childViews = $form.getChildViews();\n\n         if (childViews && childViews.length) $form.show();\n         else $form.hide();\n         $form.adjust();\n      }\n   }\n\n   setExtendedOptions(options) {\n      this._extendedOptions = options;\n   }\n\n   toggleCustomProcessOption($viewItem, showProcessOption) {\n      const $customOption = $viewItem.getChildViews()[4];\n      const $processOption = $viewItem.getChildViews()[5];\n\n      if (showProcessOption) {\n         $customOption.hide();\n         $processOption.show();\n      } else {\n         $customOption.show();\n         $processOption.hide();\n      }\n   }\n\n   async busy() {\n      $$(this.ids.addNew).disable();\n\n      const $form = $$(this.ids.form);\n\n      if (!$form) return;\n\n      if (!$form.showProgress) await this.init(this.AB);\n\n      $form.showProgress({ type: \"icon\" });\n   }\n\n   ready() {\n      $$(this.ids.addNew).enable();\n      $$(this.ids.form).hideProgress();\n   }\n\n   _pullInputElement($elem) {\n      if (!$elem?.getValue && $elem?.getChildViews) {\n         return (\n            $elem\n               .getChildViews()\n               .filter((childView) => childView.getValue)[0] ?? $elem\n         );\n      } else {\n         return $elem;\n      }\n   }\n}\n\nexport default RowUpdater;\n","/*\n * ABField\n *\n * An ABField defines a single unique Field/Column in a ABObject.\n *\n */\n\nconst ABFieldCore = require(\"../../core/dataFields/ABFieldCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABField extends ABFieldCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n\n      this.AB.on(\"ab.abdefinition.update\", (def) => {\n         if (def.id == this.id) {\n            this.emit(\"definition.updated\", this);\n         }\n      });\n\n      //  \t// NOTE: setup this first so later we can use .fieldType(), .fieldIcon()\n      //  \tthis.defaults = fieldDefaults;\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'fieldKey',\t\t\t\t// unique key for this Field\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this Field Type\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n      // \t\tcolumnName:'column_name',\t// a valid mysql table.column name\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      // \t\t\tshowIcon:true/false,\t// only useful in Object Workspace DataTable\n      // \t\t\tisImported: 1/0,\t\t// flag to mark is import from other object\n      // \t\t\trequired: 1/0,\t\t\t// field allows does not allow NULL or it does allow NULL\n      // \t\t\twidth: {int}\t\t\t// width of display column\n\n      // \t\t// specific for dataField\n      // \t\t},\n      // \t\ttranslations:[]\n      // \t}\n\n      // \tthis.fromValues(values);\n\n      // this.object = object;\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   static editorValues(settings) {\n      const obj = {\n         label: settings.label,\n         columnName: settings.columnName,\n         settings: settings,\n      };\n\n      delete settings.label;\n      delete settings.columnName;\n\n      return obj;\n   }\n\n   addValidation(ids, settings) {\n      const App = this.object.application.App;\n      const Filter = this.AB.filterComplexNew(\n         `${this.id}_field_validation_rules`\n      );\n      $$(ids.filterComplex).addView({\n         view: \"form\",\n         css: \"abValidationForm\",\n         cols: [\n            {\n               rows: [\n                  {\n                     view: \"text\",\n                     name: \"invalidMessage\",\n                     labelWidth: this.AB.UISettings.config().labelWidthLarge,\n                     value:\n                        settings && settings.invalidMessage\n                           ? settings.invalidMessage\n                           : \"\",\n                     label: L(\"Invalid Message\"),\n                  },\n                  Filter.ui,\n               ],\n            },\n            {\n               view: \"button\",\n               css: \"webix_danger\",\n               icon: \"fa fa-trash\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  const $viewCond = this.getParentView();\n                  $$(ids.filterComplex).removeView($viewCond);\n               },\n            },\n         ],\n      });\n      $$(Filter.ids.save).hide();\n      // Filter.applicationLoad(this.object.application);\n      Filter.fieldsLoad(this.object.fields());\n      if (settings && settings.rules) Filter.setValue(settings.rules);\n   }\n\n   /*\n    * @method isValid\n    * check the current values to make sure they are valid.\n    * Here we check the default values provided by ABField.\n    *\n    * @return null or [{OP.Validation.validator()}] objects.\n    */\n   isValid() {\n      const validator = this.AB.Validation.validator();\n\n      // .columnName must be unique among fileds on the same object\n      const isNameUnique =\n         this.object.fields((f) => {\n            return (\n               f.id != this.id &&\n               f.columnName.toLowerCase() == this.columnName.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"columnName\",\n            L(\n               \"Field columnName must be unique ({0} already used in this Object)\",\n               [this.columnName]\n            )\n         );\n      }\n\n      return validator;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      // verify we have been .save() before:\n      if (!this.id) return;\n\n      // NOTE: our .migrateXXX() routines expect the object to currently exist\n      // in the DB before we perform the DB operations.  So we need to\n      // .migrateDrop()  before we actually .objectDestroy() this.\n      await this.migrateDrop();\n\n      // the server still references an ABField in relationship to it's\n      // ABObject, so we need to destroy the Field 1st, then remove it\n      // from it's object.\n      await super.destroy();\n\n      await this.object.fieldRemove(this);\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABField with it's parent ABObject\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save() {\n      let isAdd = false;\n      // if this is our initial save()\n      if (!this.id) {\n         isAdd = true;\n      }\n\n      // Whenever we update our settings, make sure any\n      // existing rows that have NULL values for this field\n      // are updated to have our current .default value.\n      if (!isAdd && this.settings.required && this.settings.default) {\n         const model = this.object.model();\n\n         // pull rows that has null value\n         const result = await model.findAll({\n            where: {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.id,\n                     rule: \"is_null\",\n                  },\n               ],\n            },\n         });\n\n         const tasks = [];\n\n         // updating ...\n         result.data.forEach((d) => {\n            if (!d[this.columnName]) d[this.columnName] = this.settings.default;\n\n            tasks.push(model.update(d.id, d));\n         });\n\n         await Promise.all(tasks);\n      }\n\n      // New ABDefinition method of saving:\n      // when this is done, we now have an .id\n      await super.save();\n\n      // incase this was an ADD operation, make sure the\n      // parent Obj now includes this object:\n      // NOTE: must be done after the .save() so we have an .id\n      await this.object.fieldAdd(this);\n\n      // perform any server side migrations for this Field:\n\n      // but not connectObject fields:\n      // ABFieldConnect.migrateXXX() gets called from the UI popupNewDataField\n      // in order to handle the timings of the 2 fields that need to be created\n      if (!this.isConnection) {\n         const fnMigrate = isAdd ? this.migrateCreate() : this.migrateUpdate();\n         await fnMigrate;\n      }\n\n      return this;\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return this.AB.Network.post({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   migrateUpdate() {\n      return this.AB.Network.put({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   migrateDrop() {\n      return this.AB.Network[\"delete\"]({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @function columnHeader\n    * Return the column header for a webix grid component for this specific\n    * data field.\n    * @param {Object} options\n    * {\n    *    isObjectWorkspace: {bool},  is this being used in the Object workspace.\n    *    width: {int},\n    *    height: {int},\n    *    editable: {bool}\n    * }\n    * @return {obj}  configuration obj\n    */\n   columnHeader(options) {\n      options = options || {};\n\n      const config = {\n         id: this.columnName, // this.id,\n         header: this.label,\n      };\n\n      if (options.isObjectWorkspace && this.settings.showIcon) {\n         config.header = `<span class=\"webix_icon fa fa-${this.fieldIcon()}\"></span>${\n            config.header\n         }`;\n      }\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.  If this isn't\n    * a standard value display (think image, Map, graph, etc...) then use this\n    * method to create the display in the table/grid cell.\n    * @param {object} row\n    *        is the {name=>value} hash of the current row of data.\n    * @param {App} App\n    *        the shared ui App object useful more making globally\n    *\t\t\t unique id references.\n    * @param {HtmlDOM} node\n    *        the HTML Dom object for this field's display.\n    * @param {object} options\n    *        option of additional settings\n    */\n   customDisplay(row, App, node, options) {}\n\n   /*\n    * @function customEdit\n    *\n    *\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node) {\n      return true;\n   }\n\n   /**\n    * @method getValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   getValue(item, rowData) {\n      return item.getValue();\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    */\n   setValue(item, rowData, defaultValue) {\n      if (!item) return;\n\n      let val;\n\n      if (\n         (rowData == null || rowData[this.columnName] == null) &&\n         defaultValue != null\n      ) {\n         val = defaultValue;\n      } else if (rowData && rowData[this.columnName] != null) {\n         val = rowData[this.columnName];\n      } else {\n         val = rowData;\n      }\n\n      item.setValue(val);\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent(formKey) {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n\n      return {\n         // .common() is used to create the display in the list\n         common: () => {\n            return {\n               key: formKey,\n\n               // // but since this is a common place holder: use the\n               // // multilingual label here:\n               // labelKey: 'ab.abfield.labelPlaceholder',\n               // icon:  'square'\n            };\n         },\n\n         // .newInstance() is used to create the view instance when the component\n         // \t\tis dropped onto the ABView list.\n         newInstance: (application, parent) => {\n            application = application ?? this.AB._mockApp;\n\n            // NOTE: in case you were wondering, the base ABField\n            // \t\t will just return a label with 'ABFieldPlaceholder'\n            // \t\t as the text.  Any sub class of ABField should overwrite\n            // \t\t this and return an actual Form Component.\n\n            // store object id and field id to field component\n            const values = this.formComponent().common();\n            values.settings = values.settings || {};\n            values.settings.objectId = this.object.id;\n            values.settings.fieldId = this.id;\n\n            const ABFieldPlaceholder = application.viewNew(\n               values,\n               application,\n               parent\n            ); // ABViewManager.newView(values, application, parent);\n            // ABFieldPlaceholder.formatTitle();\n            // ABFieldPlaceholder.text = \"ABFieldPlaceholder\";\n\n            return ABFieldPlaceholder;\n         },\n      };\n   }\n\n   /**\n    * @method detailComponent\n    */\n   detailComponent() {\n      return {\n         common: () => {\n            return {\n               icon: \"square\",\n            };\n         },\n\n         // .newInstance() is used to create the view instance when the component\n         // \t\tis dropped onto the ABView list.\n         newInstance: (application, parent) => {\n            application = application ?? this.AB._mockApp;\n\n            // store object id and field id to field component\n            const values = this.detailComponent().common();\n            values.settings = values.settings || {};\n            values.settings.objectId = this.object.id;\n            values.settings.fieldId = this.id;\n\n            const ABFieldPlaceholder = application.viewNew(\n               values,\n               application,\n               parent\n            ); // ABViewManager.newView(values, application, parent);\n\n            return ABFieldPlaceholder;\n         },\n      };\n   }\n\n   /**\n    * @method getSettings()\n    * return a copy of this.settings.\n    * @return {object}\n    */\n   getSettings() {\n      return Object.assign({}, this.settings);\n   }\n\n   /**\n    * @method warningsMessage()\n    * generate a commonly formatted warning message for this ABField.\n    * This is expected to be called from within a .warningsEval()\n    * method when generating warnings.\n    * @param {string} msg\n    *        the warning string to display\n    * @param {json} data\n    *        any relevant additional information for a developer to refer to.\n    */\n   warningsMessage(msg, data = {}) {\n      let message = `${this.fieldKey()}[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABFieldAutoIndexCore = require(\"../../core/dataFields/ABFieldAutoIndexCore\");\n\nmodule.exports = class ABFieldAutoIndex extends ABFieldAutoIndexCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldAutoIndex\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldBooleanCore = require(\"../../core/dataFields/ABFieldBooleanCore\");\n\nmodule.exports = class ABFieldBoolean extends ABFieldBooleanCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldBoolean\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n\n      config.editor = \"template\";\n      config.css = \"center\";\n      config.template = (row, common, value, config) => {\n         // Group header\n         if (row.$group) return row[this.columnName];\n\n         // editable\n         if (options.editable) {\n            return (\n               '<div class=\"ab-boolean-display\">' +\n               common.checkbox(row, common, value, config) +\n               \"</div>\"\n            );\n         }\n\n         // readonly\n         else {\n            if (value)\n               return \"<div class='webix_icon fa fa-check-square-o'></div>\";\n            else return \"<div class='webix_icon fa fa-square-o'></div>\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"checkbox\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailcheckbox\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldCalculateCore = require(\"../../core/dataFields/ABFieldCalculateCore\");\n\nmodule.exports = class ABFieldCalculate extends ABFieldCalculateCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldCalculate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         if (rowData.$group) return rowData[this.columnName];\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldCombineCore = require(\"../../core/dataFields/ABFieldCombineCore\");\n\nmodule.exports = class ABFieldCombine extends ABFieldCombineCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldCombine\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this.settings.combinedFields.split(\",\") || []).forEach((id) => {\n         var field = this.object.fieldByID(id);\n         if (!field) {\n            this.warningsMessage(`dependent field[${id}] not found.`, {\n               fieldID: id,\n               combinedFields: this.settings.combinedFields,\n            });\n         }\n      });\n   }\n};\n","const ABFieldConnectCore = require(\"../../core/dataFields/ABFieldConnectCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldConnect extends ABFieldConnectCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      // verify we have been .save()d before:\n      if (!this.id) return Promise.resolve();\n\n      // NOTE: our .migrateXXX() routines expect the object to currently exist\n      // in the DB before we perform the DB operations.  So we need to\n      // .migrateDrop()  before we actually .objectDestroy() this.\n      // this.migrateDrop()\n      //    // .then(() => {\n      //    //    // NOTE : prevent recursive remove connected fields\n      //    //    // - remove this field from JSON\n      //    //    this.object._fields = this.object.fields((f) => {\n      //    //       return f.id != this.id;\n      //    //    });\n      //    // })\n      //    .then(() => {\n      //       // Save JSON of the object\n      //       return this.object.fieldRemove(this);\n      //    })\n      await super.destroy();\n\n      // Now we need to remove our linked Object->field\n\n      const linkObject = this.datasourceLink;\n      if (!linkObject) return Promise.resolve(); // already notified\n\n      const linkField = this.fieldLink;\n      if (!linkField) return Promise.resolve(); // already notified\n\n      // destroy linked field\n      return linkField.destroy();\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method pullRelationValues\n    *\n    * On the Web client, we want our returned relation values to be\n    * ready for Webix objects that require a .text and .value field.\n    *\n    * @param {*} row\n    * @return {array}\n    */\n   pullRelationValues(row) {\n      let selectedData = [];\n\n      const data = super.pullRelationValues(row);\n      const linkedObject = this.datasourceLink;\n\n      if (data && linkedObject) {\n         // if this select value is array\n         if (Array.isArray(data)) {\n            selectedData = data.map(function (d) {\n               // display label in format\n               if (d) {\n                  d.text = d.text || linkedObject.displayData(d);\n                  d.value = d.text;\n               }\n\n               return d;\n            });\n         } else if (data.id || data.uuid) {\n            selectedData = data;\n            selectedData.text =\n               selectedData.text || linkedObject.displayData(selectedData);\n            selectedData.value = selectedData.text;\n         } else if (typeof data == \"string\") {\n            selectedData = { text: data };\n         }\n      }\n\n      return selectedData;\n   }\n\n   columnHeader(options) {\n      options = options || {};\n      const config = super.columnHeader(options);\n      const field = this;\n      const App = field.AB._App;\n\n      if (options.filters == null) {\n         options.filters = {};\n      }\n\n      var multiselect = this.settings.linkType == \"many\";\n\n      config.editor = multiselect ? \"multiselect\" : \"combo\";\n      config.editFormat = (value) => {\n         return this.editFormat(value);\n      };\n      config.editParse = (value) => {\n         return this.editParse(value);\n      };\n      config.template = (row) => {\n         var selectedData = field.pullRelationValues(row);\n         var values = [];\n         values.push('<div class=\"badgeContainer\">');\n         if (\n            selectedData &&\n            Array.isArray(selectedData) &&\n            selectedData.length\n         ) {\n            selectedData.forEach((val) => {\n               values.push(\n                  `<div class='webix_multicombo_value'><span>${val.value}</span><!-- span data-uuid=\"${val.id}\" class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span --></div>`\n               );\n            });\n            if (selectedData.length > 1) {\n               values.push(\n                  `<span class=\"webix_badge selectivityBadge\">${selectedData.length}</span>`\n               );\n            }\n         } else if (selectedData.value) {\n            let clear = \"\";\n            if (options.editable) {\n               clear = `<span class=\"webix_multicombo_delete clear-combo-value\" role=\"button\" aria-label=\"Remove item\"></span>`;\n            }\n            values.push(\n               `<div class='webix_multicombo_value'>${clear}<span class=\"ellip\">${selectedData.value}</span></div>`\n            );\n         } else {\n            return \"\";\n         }\n         values.push(\"</div>\");\n         return values.join(\"\");\n      };\n\n      config.suggest = {\n         on: {\n            onBeforeShow: function () {\n               field.openOptions(this);\n            },\n         },\n\n         // Support partial matches\n         filter: ({ value }, search) =>\n            (value ?? \"\").toLowerCase().includes((search ?? \"\").toLowerCase()),\n      };\n\n      if (multiselect) {\n         config.suggest.view = \"checksuggest\";\n         config.suggest.button = true;\n      }\n\n      return config;\n   }\n\n   openOptions($suggest) {\n      // PREVENT repeatedly pull data:\n      // If not a x->1 relation and the options list was populated, then skip\n      const $list = $suggest.getList();\n      if (this.settings.linkViaType != \"one\") {\n         if (($list?.find({}) ?? []).length) return;\n      }\n\n      // Listen create/update events of the linked object, then clear data list to re-populate\n      [\"create\", \"update\"].forEach((key) => {\n         if (this[`_dc_${key}_event`]) return;\n\n         this[`_dc_${key}_event`] = this.AB.on(\n            `ab.datacollection.${key}`,\n            (res) => {\n               if (this.datasourceLink.id == res.objectId) $list.clearAll();\n            }\n         );\n      });\n\n      this.getAndPopulateOptions($suggest, null, this);\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n\n   //// NOTE: why do we pass in row, App, and node?  is this something we do in our external components?\n   ////       are these values present when this Object is instanciated? Can't we just pass these into the\n   ////       object constructor and have it internally track these things?\n   customEdit(row, /*App,*/ node) {\n      // var selectedData = this.pullRelationValues(row);\n      // this._selectedData = selectedData;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"connect\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailconnect\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method getOptions\n    * show options list in selectivity\n    *\n    * @return {Promise}\n    */\n   async getOptions(whereClause, term, sort, editor) {\n      const theEditor = editor;\n\n      // PREVENT: repeatly refresh data too often\n      if (this._getOptionsToggle) clearTimeout(this._getOptionsToggle);\n      await new Promise((resolve) => {\n         this._getOptionsToggle = setTimeout(resolve, 100);\n      });\n\n      return new Promise((resolve, reject) => {\n         let haveResolved = false;\n         // {bool}\n         // have we already passed back a result?\n\n         const respond = (options) => {\n            // filter the raw lookup with the provided search term\n            options = options.filter((item) => {\n               if (item.text.toLowerCase().includes(term.toLowerCase())) {\n                  return true;\n               }\n            });\n\n            if (!haveResolved) {\n               haveResolved = true;\n               resolve(options);\n            } else {\n               // if we have already resolved() then .emit() that we have\n               // updated \"option.data\".\n               this.emit(\"option.data\", options);\n            }\n         };\n\n         // Prepare Where clause\n\n         const where = this.AB.cloneDeep(whereClause || {});\n         sort = sort || [];\n\n         if (!where.glue) where.glue = \"and\";\n\n         if (!where.rules) where.rules = [];\n\n         term = term || \"\";\n\n         // check if linked object value is not define, should return a empty array\n         if (!this.settings.linkObject) return [];\n\n         // if options was cached\n         // if (this._options != null) return resolve(this._options);\n\n         const linkedObj = this.datasourceLink;\n\n         // System could not found the linked object - It may be deleted ?\n         if (linkedObj == null) throw new Error(\"No linked object\");\n\n         const linkedCol = this.fieldLink;\n\n         // System could not found the linked field - It may be deleted ?\n         if (linkedCol == null) throw new Error(\"No linked column\");\n\n         // Get linked object model\n         const linkedModel = linkedObj.model();\n\n         // M:1 - get data that's only empty relation value\n         if (\n            this.settings.linkType == \"many\" &&\n            this.settings.linkViaType == \"one\" &&\n            editor?.config?.showAllOptions != true\n         ) {\n            where.rules.push({\n               key: linkedCol.id,\n               rule: \"is_null\",\n            });\n            // where[linkedCol.columnName] = null;\n         }\n         // 1:1\n         else if (\n            this.settings.linkType == \"one\" &&\n            this.settings.linkViaType == \"one\" &&\n            editor?.config?.showAllOptions != true\n         ) {\n            // 1:1 - get data is not match link id that we have\n            if (this.settings.isSource == true) {\n               // NOTE: make sure \"haveNoRelation\" shows up as an operator\n               // the value \":0\" doesn't matter, we just need 'haveNoRelation' as an operator.\n               // newRule[linkedCol.id] = { 'haveNoRelation': 0 };\n               where.rules.push({\n                  key: linkedCol.id,\n                  rule: \"have_no_relation\",\n               });\n            }\n            // 1:1 - get data that's only empty relation value by query null value from link table\n            else {\n               where.rules.push({\n                  key: linkedCol.id,\n                  rule: \"is_null\",\n               });\n               // newRule[linkedCol.id] = 'null';\n               // where[linkedCol.id] = null;\n            }\n         }\n\n         const storageID = this.getStorageID(where);\n\n         Promise.resolve()\n            .then(async () => {\n               // Mar 23, 2023 disabling local storage of options because users\n               // were reporting not seeing the correct options list with either\n               // new, updated or deleted records that should or should not appear\n               return false;\n               // Get Local Storage unless xxx->one connected field\n               if (this?.settings?.linkViaType != \"one\") {\n                  // We store the .findAll() results locally and return that for a\n                  // quick response:\n                  return await this.AB.Storage.get(storageID);\n               }\n            })\n            .then(async (storedOptions) => {\n               if (storedOptions) {\n                  // immediately respond with our stored options.\n                  this._options = storedOptions;\n                  return respond(this._options);\n               }\n               // Pull linked object data\n               let options = function () {\n                  return linkedModel.findAll({\n                     where: where,\n                     sort: sort,\n                     populate: false,\n                  });\n               };\n\n               // placeholder for selected options\n               let selected = function () {\n                  return new Promise((resolve, reject) => {\n                     // empty data array to pass to all()\n                     resolve({ data: [] });\n                  });\n               };\n\n               // we also need to get selected values of xxx->one connections\n               // if we are looking at a field in a form we look at linkViaOneValues\n               // if we are looking at a grid we are editing we look at theEditor?.config?.value\n               if (\n                  this?.settings?.linkViaType == \"one\" &&\n                  (this?.linkViaOneValues || theEditor?.config?.value)\n               ) {\n                  let values = \"\";\n                  // determine if we are looking in a grid or at a form field\n                  if (\n                     (theEditor?.config?.view == \"multicombo\" ||\n                        theEditor?.config?.view == \"combo\") &&\n                     this?.linkViaOneValues\n                  ) {\n                     values = this?.linkViaOneValues;\n                  } else if (theEditor?.config?.value) {\n                     if (Array.isArray(theEditor.config.value)) {\n                        values = theEditor?.config?.value.join();\n                     } else {\n                        values = theEditor?.config?.value;\n                     }\n                  }\n                  let whereRels = {};\n                  let sortRels = [];\n\n                  whereRels.glue = \"or\";\n                  whereRels.rules = [];\n\n                  values.split(\",\").forEach((v) => {\n                     whereRels.rules.push({\n                        key: \"uuid\",\n                        rule: \"equals\",\n                        value: v,\n                     });\n                  });\n                  selected = function () {\n                     return linkedModel.findAll({\n                        where: whereRels,\n                        sort: sortRels,\n                        populate: false,\n                     });\n                  };\n               }\n               try {\n                  const results = await Promise.all([options(), selected()]);\n\n                  // combine options and selected items and\n                  // put the selected options at the top of the list\n                  const result = results[1].data.concat(results[0].data);\n\n                  // store results in _options\n                  this._options = result.data || result || [];\n\n                  // populate display text\n                  (this._options || []).forEach((opt) => {\n                     opt.text = linkedObj.displayData(opt);\n                     opt.value = opt.text;\n                  });\n\n                  // 8/10/2023 - We are not actually using this (see line 338) - If we need to store\n                  // user data in local storage we should encrypt it.\n                  // cache options if not a xxx->one connection\n                  // if (this?.settings?.linkViaType != \"one\") {\n                  //    this.AB.Storage.set(storageID, this._options);\n                  // }\n                  return respond(this._options);\n               } catch (err) {\n                  this.AB.notify.developer(err, {\n                     context:\n                        \"ABFieldConnect:getOptions(): unable to retrieve options from server\",\n                     field: this.toObj(),\n                     where,\n                  });\n\n                  haveResolved = true;\n                  throw err;\n               }\n            });\n      });\n   }\n\n   getStorageID(where) {\n      return `${this.id}-${JSON.stringify(where)}`;\n   }\n\n   async clearStorage(where) {\n      const storageID = this.getStorageID(where);\n      await this.AB.Storage.set(storageID, null);\n   }\n\n   editFormat(value) {\n      if (!value) return \"\";\n      let vals = [];\n      if (Array.isArray(value)) {\n         value.forEach((val) => {\n            if (typeof val == \"object\") {\n               vals.push(val.id);\n            } else {\n               let itemObj = this.getItemFromVal(val);\n               if (itemObj && itemObj.id) {\n                  vals.push(itemObj.id);\n               } else {\n                  vals.push(val);\n               }\n            }\n         });\n      } else {\n         if (typeof value == \"object\") {\n            vals.push(value.id);\n         } else {\n            let itemObj = this.getItemFromVal(value);\n            if (itemObj && itemObj.id) {\n               vals.push(itemObj.id);\n            } else {\n               vals.push(value);\n            }\n         }\n      }\n      return vals.join();\n   }\n\n   editParse(value) {\n      var multiselect = this.settings.linkType == \"many\";\n      if (multiselect) {\n         if (!value) {\n            return [];\n         } else {\n            let returnVals = [];\n            let vals = value.split(\",\");\n            vals.forEach((val) => {\n               returnVals.push(this.getItemFromVal(val));\n            });\n            return returnVals;\n         }\n      } else {\n         let item = this.getItemFromVal(value);\n         return item;\n      }\n   }\n\n   getAndPopulateOptions(editor, options, field, form) {\n      const theEditor = editor;\n      // if editor has options and is xxx->one store the options on the field\n      if (\n         this?.settings?.linkViaType == \"one\" &&\n         theEditor.getValue() &&\n         !field.linkViaOneValues\n      ) {\n         field.linkViaOneValues = theEditor.getValue();\n      }\n\n      // if we are filtering based off another selectivity's value we\n      // need to do it on fetch each time because the value can change\n      // copy the filters so we don't add to them every time there is a change\n      const combineFilters = options?.filters\n         ? Object.assign({}, options.filters)\n         : { glue: \"and\", rules: [] };\n\n      if (options?.filterByConnectValues) {\n         const parseFilterByConnectValues = (conditions, values, depth = 0) => {\n            const valuesByDepth = values.filter((e) => e?.depth === depth);\n\n            return [\n               ...conditions.rules.map((e) => {\n                  if (e.glue)\n                     return {\n                        glue: e.glue,\n                        rules: parseFilterByConnectValues(e, values, depth + 1),\n                     };\n\n                  const value = valuesByDepth.filter(\n                     (ef) => ef.key === e.key && ef.value === e.value\n                  )[0];\n\n                  if (!value) return e;\n\n                  const $parentField = value?.filterValue?.config.id\n                     ? $$(value.filterValue.config.id)\n                     : null;\n\n                  if (!$parentField)\n                     throw Error(\n                        \"Some parent field's view components don't exist\"\n                     );\n\n                  const parentValue = value?.filterValue\n                     ? $parentField.getValue() ?? \"\"\n                     : \"\";\n\n                  let newVal = \"\";\n\n                  if (parentValue) {\n                     if (value.filterColumn) {\n                        if (\n                           field.object\n                              .fieldByID(value.filterValue.config.dataFieldId)\n                              .getItemFromVal(parentValue)\n                        ) {\n                           newVal = field.object\n                              .fieldByID(value.filterValue.config.dataFieldId)\n                              .getItemFromVal(parentValue)[value.filterColumn];\n                        } else {\n                           newVal = parentValue;\n                        }\n                     } else {\n                        newVal = parentValue;\n                     }\n                  }\n\n                  return {\n                     key: e.key,\n                     rule: \"equals\",\n                     value: newVal,\n                  };\n               }),\n            ];\n         };\n\n         combineFilters.rules = parseFilterByConnectValues(\n            combineFilters,\n            options.filterByConnectValues\n         );\n      }\n\n      const handlerOptionData = (data) => {\n         if (theEditor.$destructed) {\n            this.removeListener(\"option.data\", handlerOptionData);\n            return;\n         }\n         this.populateOptions(theEditor, data, field, form, true);\n      };\n\n      // try to make sure we don't continually add up listeners.\n      this.removeListener(\"option.data\", handlerOptionData).once(\n         \"option.data\",\n         handlerOptionData\n      );\n\n      return new Promise((resolve, reject) => {\n         this.getOptions(\n            combineFilters,\n            \"\",\n            options?.sort ?? \"\",\n            theEditor\n         ).then((data) => {\n            this.populateOptions(theEditor, data, field, form, true);\n            resolve(data);\n         });\n      });\n   }\n\n   populateOptions(theEditor, data, field, form, addCy) {\n      if (theEditor == null || theEditor.$destructed) return;\n\n      theEditor.blockEvent();\n      theEditor.getList().clearAll();\n      theEditor.getList().define(\"data\", data);\n      if (addCy) {\n         this.populateOptionsDataCy(theEditor, field, form);\n      }\n      if (theEditor.getValue?.() && data?.length) {\n         let selectedVal = theEditor.getValue();\n\n         // Check exists item\n         const isExists = data.some((d) => d.id == selectedVal);\n\n         // Select option item from custom index value\n         if (\n            !isExists &&\n            field.isConnection &&\n            (field.indexField || field.indexField2)\n         ) {\n            const selectedItem = data.filter(\n               (d) =>\n                  d[field.indexField?.columnName ?? \"\"] == selectedVal ||\n                  d[field.indexField2?.columnName ?? \"\"] == selectedVal\n            )[0];\n\n            if (selectedItem) selectedVal = selectedItem.id;\n         }\n\n         theEditor.setValue(selectedVal);\n      }\n      theEditor.unblockEvent();\n   }\n\n   populateOptionsDataCy(theEditor, field, form) {\n      if (theEditor?.$destructed) return;\n\n      // Add data-cy attributes\n      if (theEditor?.getList) {\n         if (!theEditor.getPopup) return;\n         var popup = theEditor.getPopup();\n         if (!popup) return;\n         theEditor.getList().data.each((option) => {\n            if (!option) return;\n            var node = popup.$view.querySelector(\n               \"[webix_l_id='\" + option.id + \"']\"\n            );\n            if (!node) return;\n            node.setAttribute(\n               \"data-cy\",\n               `${field.key} options ${option.id} ${field.id} ${form?.id}`\n            );\n         });\n      }\n   }\n\n   getItemFromVal(val) {\n      let item;\n      let options = this._options || [];\n      if (options.length > 0) {\n         for (let i = 0; i < options.length; i++) {\n            if (\n               this.indexField &&\n               options[i][this.indexField.object.PK()] == val\n            ) {\n               item = options[i];\n               break;\n            } else if (\n               this.indexField2 &&\n               options[i][this.indexField2.object.PK()] == val\n            ) {\n               item = options[i];\n               break;\n            } else {\n               if (\n                  options[i].id == val ||\n                  options[i].value == val ||\n                  options[i][this.indexField?.columnName ?? \"\"] == val ||\n                  options[i][this.indexField2?.columnName ?? \"\"] == val\n               ) {\n                  item = options[i];\n                  break;\n               }\n            }\n         }\n         return item;\n      } else {\n         return \"\";\n      }\n   }\n\n   getValue(item) {\n      var multiselect = this.settings.linkType == \"many\";\n      if (multiselect) {\n         let vals = [];\n         if (item.getValue()) {\n            let val = item.getValue().split(\",\");\n            val.forEach((record) => {\n               vals.push(item.getList().getItem(record));\n            });\n         }\n         return vals;\n      } else {\n         if (item.getValue()) {\n            return item.getList().getItem(item.getValue());\n         } else {\n            return \"\";\n         }\n      }\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n      // if (AB.isEmpty(rowData)) return; removed because sometimes we will\n      // want to set this to empty\n      let val = this.pullRelationValues(rowData);\n      // put in current values as options so we can display them before\n      // the rest of the options are fetched when field is clicked\n      if (item.getList && item.getList().count() == 0) {\n         if (this.settings.linkType !== \"one\" && !Array.isArray(val)) {\n            val = [val];\n         }\n\n         const $list = item.getList();\n\n         $list.define(\"data\", val);\n         $list.refresh();\n      }\n\n      item.setValue(\n         Array.isArray(val)\n            ? val.map((e) => e.id ?? e.uuid ?? e).join(\",\")\n            : val.id ?? val.uuid ?? val\n      );\n   }\n\n   /**\n    * @method pullRecordRelationValues\n    *\n    * On the Web client, we want our returned relation values to be\n    * ready for Webix objects that require a .text and .value field.\n    *\n    * @param {*} row\n    * @return {array}\n    */\n   pullRecordRelationValues(record) {\n      var selectedData = [];\n\n      var data = record;\n      var linkedObject = this.datasourceLink;\n\n      if (data && linkedObject) {\n         // if this select value is array\n         if (Array.isArray(data)) {\n            selectedData = data.map(function (d) {\n               // display label in format\n               if (d) {\n                  d.text = d.text || linkedObject.displayData(d);\n                  d.value = d.text;\n               }\n\n               return d;\n            });\n         } else if (data.id || data.uuid) {\n            selectedData = data;\n            selectedData.text =\n               selectedData.text || linkedObject.displayData(selectedData);\n            selectedData.value = selectedData.text;\n         }\n      }\n\n      return selectedData;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      var linkField = this.fieldLink;\n      if (!linkField) {\n         this.warningsMessage(\n            `is unable to find linked field[${this.settings.linkColumn}]`,\n            {\n               linkColumn: this.settings.linkColumn,\n            }\n         );\n      }\n\n      let linkObj = this.datasourceLink;\n      if (!linkObj) {\n         this.warningsMessage(\n            `is unable to find linked object[${this.settings.linkObject}]`,\n            {\n               linkObject: this.settings.linkObject,\n            }\n         );\n      }\n   }\n};\n","const ABFieldDateCore = require(\"../../core/dataFields/ABFieldDateCore\");\n\nmodule.exports = class ABFieldDate extends ABFieldDateCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldDate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // if (this.settings.includeTime)\n      // config.editor = \"datetime\";\n      // else\n      config.editor =\n         this.AB.Account?._config?.languageCode == \"th\" ? \"thaidate\" : \"date\";\n\n      // allows entering characters in datepicker input, false by default\n      config.editable = true;\n\n      // NOTE: it seems that the default value is a string in ISO format.\n\n      //// NOTE: webix seems unable to parse ISO string into => date here.\n      // config.map = '(date)#'+this.columnName+'#';   // so don't use this.\n\n      config.template = (row) => {\n         if (row.$group) return row[this.columnName];\n\n         return this.format(row);\n      };\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      config.editFormat = (d) => {\n         // this routine needs to return a Date() object for the editor to work with.\n\n         if (d == \"\" || d == null) {\n            return \"\";\n         }\n\n         // else retun the actual ISO string => Date() value\n         return this.AB.rules.toDate(d);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"datepicker\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"datepicker\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   dateToString(dateFormat, dateData) {\n      return webix.Date.dateToStr(dateFormat)(dateData);\n   }\n\n   // Overwrite core.format to use webix locales.\n   format(rowData) {\n      if (!window.webixLocale) return super.format(rowData);\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n      const dateObj = this.AB.rules.toDate(d);\n\n      const dateFormat = this.settings.dateFormat;\n      // @const {int} dateFormat AB Date Format\n      // 1 - ignore, 2 - dd/mm/yyyy, 3 - mm/dd/yyyy, 4 - M D, yyyy, 5 - D M, yyyy\n\n      // Return longdate if option 4 or 5\n      if (dateFormat >= 4) {\n         return webix.i18n.longDateFormatStr(dateObj);\n      } else {\n         return webix.i18n.dateFormatStr(dateObj);\n      }\n   }\n};\n","const ABFieldDateTimeCore = require(\"../../core/dataFields/ABFieldDateTimeCore\");\n\nmodule.exports = class ABFieldDateTime extends ABFieldDateTimeCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldDate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // Ignore date\n      if (this.settings.dateFormat == 1) {\n         config.editor = \"time\";\n      } else {\n         config.editor =\n            this.AB.Account?._config?.languageCode == \"th\"\n               ? \"thaidatetime\"\n               : \"datetime\";\n      }\n\n      // allows entering characters in datepicker input, false by default\n      config.editable = true;\n\n      // NOTE: it seems that the default value is a string in ISO format.\n\n      //// NOTE: webix seems unable to parse ISO string into => date here.\n      // config.map = '(date)#'+this.columnName+'#';   // so don't use this.\n\n      config.template = (row) => {\n         if (row.$group) return row[this.columnName];\n\n         return this.format(row);\n      };\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      config.editFormat = (d) => {\n         // this routine needs to return a Date() object for the editor to work with.\n\n         if (d == \"\" || d == null) {\n            return \"\";\n         }\n\n         // else retun the actual ISO string => Date() value\n         return this.AB.rules.toDate(d);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"datepicker\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"datepicker\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   // Overwrite core.format to use webix locales.\n   format(rowData) {\n      if (!window.webixLocale) return super.format(rowData);\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n      const dateObj = this.AB.rules.toDate(d);\n\n      const dateFormat = this.settings.dateFormat;\n      // @const {int} dateFormat AB Date Format\n      // 1 - ignore, 2 - dd/mm/yyyy, 3 - mm/dd/yyyy, 4 - M D, yyyy, 5 - D M, yyyy\n      const timeToStr = webix.Date.dateToStr(this.getTimeFormat());\n\n      if (dateFormat >= 4) {\n         return `${webix.i18n.longDateFormatStr(dateObj)} ${timeToStr(\n            dateObj\n         )}`;\n      } else {\n         return `${webix.i18n.dateFormatStr(dateObj)} ${timeToStr(dateObj)}`;\n      }\n   }\n};\n","const ABFieldEmailCore = require(\"../../core/dataFields/ABFieldEmailCore\");\n\nmodule.exports = class ABFieldEmail extends ABFieldEmailCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldBoolean\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\";\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldFileCore = require(\"../../core/dataFields/ABFieldFileCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldFile extends ABFieldFileCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   /**\n    * @function destroy\n    * On a destroy operation, ask if the user wants to keep the related file.\n    */\n   async destroy() {\n      return new Promise((resolve, reject) => {\n         // verify we have been .save()d before:\n         if (!this.id) {\n            resolve();\n            return;\n         }\n\n         // Ask the user what to do about the existing file:\n         webix.confirm({\n            title: L(\"Keep Files?\"),\n            message: L(\"Do you want to keep the files referenced by {0}?\", [\n               this.label,\n            ]),\n            callback: async (result) => {\n               // update this setting so the server can respond correctly in\n               // ABFieldFile.migrateDrop()\n               this.settings.removeExistingData = result ? 0 : 1;\n\n               try {\n                  await this.save();\n\n                  // TODO: a reminder that you still got alot on the server to do!\n                  webix.alert({\n                     title: \"!! TODO !!\",\n                     text: \"Tell a Developer to actually pay attention to this!\",\n                  });\n\n                  // now the default .destroy()\n                  await super.destroy();\n\n                  resolve();\n               } catch (err) {\n                  reject(err);\n               }\n            },\n         });\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldFile\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n\n      config.editor = false;\n\n      const editable = options.editable;\n\n      // populate our default template:\n      config.template = (obj) => {\n         if (obj.$group) return this.dataValue(obj);\n\n         const fileDiv = [\n            '<div class=\"ab-file-data-field\" style=\"float: left;\">',\n            '<div class=\"webix_view ab-file-holder\">',\n            '<div class=\"webix_template\">',\n            this.fileTemplate(obj, editable),\n            \"</div>\",\n            \"</div>\",\n            \"</div>\",\n         ].join(\"\");\n\n         return fileDiv;\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n      options = options || {};\n\n      let typesList = [];\n      let maximumSize = 0;\n\n      if (this.settings.limitFileType && this.settings.fileType) {\n         typesList = this.settings.fileType.split(\",\");\n      }\n\n      if (this.settings.limitFileSize && this.settings.fileSize) {\n         maximumSize = this.settings.fileSize;\n      }\n\n      // \t\t// safety check:\n      // \t\t// webix seems to crash if you specify a .container that doesn't exists:\n      // \t\t// Note: when the template is first created, we don't have App.unique()\n      const parentContainer = node.querySelector(\".ab-file-holder\");\n      if (parentContainer) {\n         parentContainer.innerHTML = \"\";\n         // parentContainer.id = idBase;\t// change it to the unique one.\n\n         // \t\t\t// use a webix component for displaying the content.\n         // \t\t\t// do this so I can use the progress spinner\n\n         const webixContainer = webix.ui({\n            view: \"template\",\n            container: parentContainer,\n\n            template: this.fileTemplate(row, options.editable),\n\n            borderless: true,\n            width: 160,\n            height: 60,\n         });\n         webix.extend(webixContainer, webix.ProgressBar);\n\n         // \t\t\t////\n         // \t\t\t//// Prepare the Uploader\n         // \t\t\t////\n\n         if (!options.editable) {\n            const domNode = parentContainer.querySelector(\".delete-image\");\n            if (domNode) domNode.style.display = \"none\";\n\n            return;\n         }\n\n         const url = this.urlUpload(true);\n\n         const uploader = webix.ui({\n            view: \"uploader\",\n            apiOnly: true,\n            upload: url,\n            inputName: \"file\",\n            multiple: false,\n            on: {\n               // when a file is added to the uploader\n               onBeforeFileAdd: function (item) {\n                  node.classList.remove(\"webix_invalid\");\n                  node.classList.remove(\"webix_invalid_cell\");\n\n                  // verify file type\n                  const acceptableTypes = typesList;\n                  if (acceptableTypes && acceptableTypes != \"\") {\n                     const type = item.type.toLowerCase();\n                     if (acceptableTypes.indexOf(type) == -1) {\n                        webix.message(\n                           L(\"Only [{0}] files are supported\", [\n                              acceptableTypes.join(\", \"),\n                           ])\n                        );\n                        return false;\n                     }\n                  }\n\n                  //verify file size\n                  //Convert to MegaBytes\n                  if (maximumSize > 0) {\n                     const acceptableSizes = maximumSize * 1000000;\n                     if (item.size > acceptableSizes) {\n                        webix.message(\n                           L(\"Maximum file size is {0}MB\", [maximumSize])\n                        );\n                        return false;\n                     }\n                  }\n\n                  // start progress indicator\n                  webixContainer.showProgress({\n                     type: \"icon\",\n                     delay: 2000,\n                  });\n               },\n\n               // when upload is complete:\n               onFileUpload: async (item, response) => {\n                  webixContainer.hideProgress();\n                  // this.showFile(idBase, response.data.uuid);\n\n                  const values = {};\n                  values[this.columnName] = {};\n                  values[this.columnName].uuid = response.data.uuid;\n                  values[this.columnName].filename = item.name;\n\n                  // update just this value on our current object.model\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if ($$(node) && $$(node).updateItem)\n                           $$(node).updateItem(row.id, values);\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABFieldFile.onFileUpload(): Error updating our entry.\",\n                           row: row,\n                           values: values,\n                        });\n                     }\n                  }\n\n                  // update value in the form component\n                  this.setValue($$(node), values);\n               },\n\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  this.AB.notify.developer(new Error(\"Error loading file\"), {\n                     message: \"Error loading file\",\n                     response,\n                  });\n                  webixContainer.hideProgress();\n               },\n            },\n         });\n         uploader.addDropZone(webixContainer.$view);\n\n         // store upload id into html element (it will be used in .customEdit)\n         node.dataset[\"uploaderId\"] = uploader.config.id;\n\n         // open file upload dialog when's click\n         node.addEventListener(\"click\", (e) => {\n            if (e.target.className.indexOf(\"delete-image\") > -1) {\n               this.deleteFile = true;\n            }\n         });\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node) {\n      if (this.deleteFile == true) {\n         // remove the property because it is only needed to prevent the file dialog from showing\n         delete this.deleteFile;\n\n         // Ask the user if they really want to delete the photo\n         webix.confirm({\n            title: \"\",\n            text: L(\"Are you sure you want to remove this file?\"),\n            callback: async (result) => {\n               const confirmDelete = result ? 1 : 0;\n               if (confirmDelete) {\n                  // update just this value on our current object.model\n                  const values = {};\n\n                  values[this.columnName] = {};\n\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if ($$(node) && $$(node).updateItem)\n                           $$(node).updateItem(row.id, values);\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           message: \"Error updating our entry.\",\n                           row: row,\n                           values: values,\n                        });\n                     }\n                  }\n                  // update value in the form component\n                  else {\n                     this.setValue($$(node), values);\n                  }\n               }\n            },\n         });\n      } else {\n         const rowData = this.dataValue(row);\n         if (!rowData || !rowData.uuid) {\n            const uploaderId = node.dataset[\"uploaderId\"],\n               uploader = $$(uploaderId);\n\n            if (uploader && uploader.fileDialog)\n               uploader.fileDialog({ rowid: row.id });\n         }\n      }\n\n      return false;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldcustom\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailcustom\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   //File Template\n\n   fileTemplate(obj, editable) {\n      let iconDisplay = \"\";\n      let fileDisplay = \"display:none;\";\n      let fileURL = \"\";\n\n      let value = \"\";\n      let name = \"\";\n\n      const rowData = this.dataValue(obj);\n      if (rowData) {\n         value = rowData.uuid;\n         name = rowData.filename;\n      }\n\n      if (value && name) {\n         iconDisplay = \"display:none;\";\n         fileDisplay = \"\";\n         fileURL = \"/file/\" + value;\n      }\n\n      const html = [\n         `<div class=\"file-data-field-icon\" style=\"text-align: center; height: inherit; display: table-cell; vertical-align: middle; border: 2px dotted #CCC; background: #FFF; border-radius: 10px; font-size: 11px; line-height: 13px; padding: 0 10px; ${iconDisplay}\"><i class=\"fa fa-file fa-2x\" style=\"opacity: 0.6; font-size: 32px; margin-top: 3px; margin-bottom: 5px;\"></i>${\n            editable ? `<br/>${L(\"Drag and drop or click here\")}` : \"\"\n         }</div>`,\n         `<div class=\"file-data-field-name\" style=\" width:100%; height:100%; position:relative; \"><a target=\"_blank\" href=\"${fileURL}\">${\n            name || \"\"\n         }</a>${\n            editable\n               ? `<a style=\"${fileDisplay}\" class=\"ab-delete-photo\" href=\"javascript:void(0);\"><i class=\"fa fa-times delete-image\"></i></a>`\n               : \"\"\n         }</div>`,\n      ].join(\"\");\n\n      return html;\n   }\n\n   getValue(item, rowData) {\n      const file = item.$view.querySelector(\".file-data-field-name\");\n      const fileLink = file.querySelector(\"a\");\n\n      return {\n         uuid: file.getAttribute(\"file-uuid\"),\n         filename: fileLink.innerHTML,\n      };\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      const domNode = item.$view;\n      if (!domNode) return;\n\n      let val = null;\n      if (rowData) {\n         val = this.dataValue(rowData);\n\n         // if (val == null) {\n         // \t// assume they just sent us a single value\n         // \tval = rowData;\n         // }\n      }\n\n      const fileicon = domNode.querySelector(\".file-data-field-icon\");\n      if (fileicon) fileicon.style.display = val && val.uuid ? \"none\" : \"block\";\n\n      const file = domNode.querySelector(\".file-data-field-name\");\n      if (file) {\n         const fileDeleteIcon = file.querySelector(\".ab-delete-photo\");\n         if (fileDeleteIcon)\n            fileDeleteIcon.style.display = val && val.uuid ? \"block\" : \"none\";\n\n         file.style.display = val && val.uuid ? \"block\" : \"none\";\n         if (val && val.uuid) file.setAttribute(\"file-uuid\", val.uuid);\n         else file.removeAttribute(\"file-uuid\");\n\n         const fileLink = file.querySelector(\"a\");\n         const fileURL = \"/file/\" + (val ? val.uuid : \"\");\n         fileLink.href = fileURL;\n         fileLink.innerHTML = val ? val.filename : \"\";\n      }\n   }\n\n   /**\n    * @method urlUpload()\n    * return the url for uploading a file.\n    * When used in a webix widget, the response is different than our normal\n    * API, so we can pass in a param to indicate a response compatible with\n    * webix.\n    * @param {bool} isWebix\n    *        Is this url being used by a webix component?\n    * @return {string}\n    */\n   urlUpload(isWebix = true) {\n      return `/file/upload/${this.object.id}/${this.id}/${isWebix ? \"1\" : \"0\"}`;\n   }\n\n   /**\n    * @method urlFile\n    * return the url to use to reference the file by it's id.\n    * @param {string} id uuid reference of this file.\n    * @return {string}\n    */\n   urlFile(id) {\n      return `/file/${id}`;\n   }\n};\n","const ABFieldFormulaCore = require(\"../../core/dataFields/ABFieldFormulaCore\");\n\nmodule.exports = class ABFieldFormula extends ABFieldFormulaCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldFormula\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         if (rowData.$group) return rowData[this.columnName];\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // not support in the form widget\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldImageCore = require(\"../../core/dataFields/ABFieldImageCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldImage extends ABFieldImageCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @function destroy\n    * On a destroy operation, ask if the user wants to keep the related images.\n    */\n   async destroy() {\n      return new Promise((resolve, reject) => {\n         // verify we have been .save()d before:\n         if (this.id) {\n            // Ask the user what to do about the existing images:\n            webix.confirm({\n               title: L(\"Keep Images?\"),\n               message: L(\"Do you want to keep the images referenced by {0}?\", [\n                  this.label,\n               ]),\n               callback: async (result) => {\n                  // update this setting so the server can respond correctly in\n                  // ABFieldImage.migrateDrop()\n                  this.settings.removeExistingData = result ? 0 : 1;\n\n                  try {\n                     await this.save();\n\n                     // TODO: a reminder that you still got alot on the server to do!\n                     webix.alert({\n                        title: \"!! TODO !!\",\n                        text: \"ABFieldImage.destroy(): Tell a Developer to actually pay attention to this!\",\n                     });\n\n                     await super.destroy();\n\n                     resolve();\n                  } catch (err) {\n                     reject(err);\n                  }\n               },\n            });\n         } else {\n            resolve(); // nothing to do really\n         }\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   idCustomContainer(obj, formId) {\n      // if formId is passed the field is in a form view not a grid and\n      // we won't have the obj and each time this\n      // field is in a form it will conflict with the last one rendered\n      if (formId) {\n         return `${this.columnName.replace(/ /g, \"_\")}-${formId}-image`;\n      } else {\n         return `${this.columnName.replace(/ /g, \"_\")}-${obj.id}-image`;\n      }\n   }\n\n   // return the grid column header definition for this instance of ABFieldImage\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n\n      config.editor = false; // 'text';  // '[edit_type]'   for your unique situation\n      // config.sort   = 'string' // '[sort_type]'   for your unique situation\n\n      let containerHeight = \"100%\";\n      let imageHeight = \"100%\";\n      let width = \"100%\";\n      let imageSrcHeight = \"100%\";\n      if (field.settings.useWidth) {\n         config.width = field.settings.imageWidth || 100;\n         const heightVal =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight + 20\n               : 80;\n         containerHeight = `${heightVal}px`;\n         width = `${field.settings.imageWidth || 100}px`;\n         imageHeight =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight\n               : 80;\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight\n               : 60;\n         imageSrcHeight = `${imageSrcHeight}px`;\n      } else if (options.width) {\n         config.width = options.width || 100;\n         width = `${options.width || 100}px`;\n         imageHeight = options.width;\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight = options.width;\n         imageSrcHeight = `${imageSrcHeight}px`;\n      }\n      if (\n         field.settings.useHeight &&\n         field.settings.imageHeight &&\n         field.settings.imageHeight != \"NaN\"\n      ) {\n         config.height = field.settings.imageHeight || 0;\n         containerHeight = parseInt(config.height) + 20;\n         containerHeight = `${containerHeight}px`;\n         imageHeight = parseInt(config.height);\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight = parseInt(config.height);\n         imageSrcHeight = `${imageSrcHeight}px`;\n      }\n\n      const editable = options.editable;\n\n      // populate our default template:\n      // debugger;\n      config.template = (obj) => {\n         if (obj.$group) return obj[this.columnName];\n\n         const widthStyle = `width: ${width}; height: ${containerHeight}`;\n\n         const imageStyle = `width: ${width}; height: ${imageHeight}`;\n\n         const imgDiv = [\n            `<div class=\"ab-image-data-field\" style=\"float: left; ${widthStyle}\">`,\n            `<div class=\"webix_view ab-image-holder\" style=\"${imageStyle}\">`,\n            '<div class=\"webix_template\">',\n            this.imageTemplate(obj, {\n               editable: editable,\n               height: imageSrcHeight,\n               width: width,\n            }),\n            \"</div>\",\n            \"</div>\",\n            \"</div>\",\n         ].join(\"\");\n\n         return imgDiv;\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    * @param {object} options - {\n    * \t\teditable {Bool}   where or not this field is currently editable\n    * \t\tformId {string}   the id of the presenting form if any\n    * }\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      // safety check:\n      // webix seems to crash if you specify a .container that doesn't exists:\n      // Note: when the template is first created, we don't have App.unique()\n      const parentContainer = node.querySelector(\".ab-image-holder\");\n      if (parentContainer) {\n         parentContainer.innerHTML = \"\";\n         // parentContainer.id = idBase;\t// change it to the unique one.\n\n         let imgHeight = 0;\n         if (this.settings.useHeight) {\n            imgHeight = parseInt(this.settings.imageHeight) || imgHeight;\n         }\n\n         let imgWidth = 0;\n         if (this.settings.useWidth) {\n            imgWidth = parseInt(this.settings.imageWidth) || imgWidth;\n         }\n\n         if (options.height) imgHeight = options.height;\n\n         if (options.width) imgWidth = options.width;\n         //// TODO: actually pay attention to the height and width when\n         //// displaying the images.\n\n         // use a webix component for displaying the content.\n         // do this so I can use the progress spinner\n         const webixContainer = webix.ui({\n            view: \"template\",\n            css: \"ab-image-holder\",\n            // id: ids.container,\n            container: parentContainer,\n\n            template: this.imageTemplate(row, {\n               editable: options.editable,\n               height: imgHeight ? imgHeight + \"px\" : 0,\n               width: imgWidth ? imgWidth + \"px\" : 0,\n            }),\n\n            borderless: true,\n            height: imgHeight,\n            width: imgWidth,\n         });\n         webix.extend(webixContainer, webix.ProgressBar);\n\n         ////\n         //// Prepare the Uploader\n         ////\n\n         if (!options.editable) {\n            const domNode = parentContainer.querySelector(\".delete-image\");\n            if (domNode) domNode.style.display = \"none\";\n            return;\n         }\n\n         const url = this.urlUpload();\n\n         const uploader = webix.ui({\n            view: \"uploader\",\n            // id:ids.uploader,\n            apiOnly: true,\n            upload: url,\n            inputName: \"file\",\n            multiple: false,\n            // formData:{\n            // \tappKey:application.name,\n            // \tpermission:actionKey,\n            // \tisWebix:true,\n            // \timageParam:'upload'\n            // },\n            on: {\n               // when a file is added to the uploader\n               onBeforeFileAdd: function (item) {\n                  node.classList.remove(\"webix_invalid\");\n                  node.classList.remove(\"webix_invalid_cell\");\n\n                  // verify file type\n                  const acceptableTypes = [\n                     \"jpg\",\n                     \"jpeg\",\n                     \"bmp\",\n                     \"png\",\n                     \"gif\",\n                     \"webp\",\n                  ];\n                  const type = item.type.toLowerCase();\n                  if (acceptableTypes.indexOf(type) == -1) {\n                     webix.message(\n                        L(\"Only [{0}] images are supported\", [\n                           acceptableTypes.join(\", \"),\n                        ])\n                     );\n                     return false;\n                  }\n\n                  // start progress indicator\n                  webixContainer.showProgress({\n                     type: \"icon\",\n                     delay: 2000,\n                  });\n               },\n\n               // when upload is complete:\n               onFileUpload: async (item, response) => {\n                  webixContainer.hideProgress();\n                  this.showImage(response.data.uuid, node);\n\n                  // TODO: delete previous image from our OPsPortal service?\n\n                  const values = {};\n                  values[this.columnName] = response.data.uuid;\n\n                  // update just this value on our current object.model\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if (\n                           $$(node) &&\n                           $$(node).getItem &&\n                           $$(node).getItem(row.id)\n                        ) {\n                           $$(node).updateItem(row.id, values);\n                        } else {\n                           // if you scroll the table the connection to the datatable is lost so we need to find it again\n                           const dataTable =\n                              document.querySelector(\".webix_dtable\");\n                           if ($$(dataTable) && $$(dataTable).getItem(row.id))\n                              $$(dataTable).updateItem(row.id, values);\n                        }\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABFieldImage.onFileUpload(): model.update(): error updating our entry\",\n                           field: this,\n                           row,\n                           values,\n                        });\n                     }\n                  }\n\n                  // update value in the form component\n                  this.setValue($$(node), values);\n               },\n\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  this.AB.notify.developer(new Error(\"Error uploading image\"), {\n                     context: \"ABFieldImage. uploader. onFileUploadError():\",\n                     field: this,\n                     response,\n                  });\n                  webixContainer.hideProgress();\n               },\n            },\n         });\n         uploader.addDropZone(webixContainer.$view);\n\n         // store upload id into html element (it will be used in .customEdit)\n         node.dataset[\"uploaderId\"] = uploader.config.id;\n\n         // if we are working in a datagrid we need to add a click event to\n         // check if the user is clicking on the delete button\n         if (node.className == \"webix_cell\") {\n            node.addEventListener(\"click\", (e) => {\n               if (e.target.className.indexOf(\"delete-image\") > -1) {\n                  this.deleteImage = true;\n               }\n            });\n         }\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node, id, evt) {\n      if (\n         (evt && evt.target.className.indexOf(\"delete-image\") > -1) ||\n         this.deleteImage\n      ) {\n         delete this.deleteImage;\n         if (!row.removeDefaultImage) {\n            row.removeDefaultImage = [];\n         }\n         row.removeDefaultImage[this.columnName] = true;\n\n         // Ask the user if they really want to delete the photo\n         webix.confirm({\n            title: L(\"Are you sure you want to remove this image?\"),\n            callback: async (result) => {\n               const confirmDelete = result ? 1 : 0;\n               if (confirmDelete) {\n                  // update just this value on our current object.model\n                  const values = {};\n                  values[this.columnName] = \"\"; // removing the reference to the image here\n\n                  try {\n                     await this.object.model().update(row.id, values);\n\n                     // update the client side data object as well so other data changes won't cause this save to be reverted\n                     if ($$(node) && $$(node).updateItem)\n                        $$(node).updateItem(row.id, values);\n\n                     // update value in the form component\n                     this.setValue($$(node), values);\n                  } catch (err) {\n                     node.classList.add(\"webix_invalid\");\n                     node.classList.add(\"webix_invalid_cell\");\n\n                     this.AB.notify.developer(err, {\n                        context:\n                           \"ABFieldImage: customEdit(): Error updating our entry\",\n                        field: this,\n                        row: row,\n                        values: values,\n                     });\n                  }\n               }\n            },\n         });\n      } else {\n         const uploaderId = node.dataset[\"uploaderId\"],\n            uploader = $$(uploaderId);\n\n         if (uploader && uploader.fileDialog)\n            uploader.fileDialog({ rowid: row.id });\n      }\n\n      return false;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldcustom\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailimage\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   imageTemplate(obj, options) {\n      options = options || {};\n      options.height = options.height || \"100%\";\n      options.width = options.width || \"100%\";\n\n      // deault view is icon:\n      let iconDisplay = \"\";\n      let imageDisplay = \"display:none;\";\n      let imageURL = \"\";\n\n      let value = \"\";\n      let isRemoveDefaultImage = false;\n      if (obj[this.columnName]) {\n         value = obj[this.columnName];\n      }\n      if (obj.removeDefaultImage) {\n         if (obj.removeDefaultImage[this.columnName]) {\n            isRemoveDefaultImage = obj.removeDefaultImage[this.columnName];\n         }\n      }\n\n      if (value) {\n         iconDisplay = \"display:none;\";\n         imageDisplay = \"\";\n         imageURL = `background-image:url('${this.urlImage(value)}');`;\n      } else {\n         if (this.settings.useDefaultImage && !isRemoveDefaultImage) {\n            iconDisplay = \"display:none;\";\n            imageDisplay = \"\";\n            imageURL = `background-image:url('${this.urlImage(\n               this.settings.defaultImageUrl\n            )}');`;\n         }\n      }\n\n      let html = [\n         `<div class=\"image-data-field-icon\" style=\"${iconDisplay}\">#drag#</div>` +\n            `<div class=\"image-data-field-image\" style=\"${imageDisplay} height:${options.height}; ${imageURL}\">#remove#</div>`,\n      ].join(\"\");\n\n      html = html.replace(\n         \"#drag#\",\n         options.editable\n            ? `<div>${L(\"Drag and drop or click here\")}</div>`\n            : \"\"\n      );\n      html = html.replace(\n         \"#remove#\",\n         options.editable\n            ? `<a style=\"${imageDisplay}\" class=\"ab-delete-photo\" href=\"javascript:void(0);\"><i class=\"fa fa-times delete-image\"></i></a>`\n            : \"\"\n      );\n\n      return html;\n   }\n\n   showImage(uuid, node) {\n      const parentContainer = node.querySelector(\".ab-image-holder\");\n      if (parentContainer) {\n         parentContainer.querySelector(\".image-data-field-icon\").style.display =\n            \"none\";\n         const image = parentContainer.querySelector(\".image-data-field-image\");\n         image.style.display = \"\";\n         image.style.backgroundImage = `url('${this.urlImage(uuid)}')`;\n         image.setAttribute(\"image-uuid\", uuid);\n      }\n   }\n\n   getValue(item, rowData) {\n      const image = item.$view.querySelector(\".image-data-field-image\");\n      return image.getAttribute(\"image-uuid\");\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      const domNode = item.$view;\n      if (!domNode) return;\n\n      let val = null;\n      if (rowData) {\n         val = this.dataValue(rowData);\n\n         // if (val == null) {\n         // \t// assume they just sent us a single value\n         // \tval = rowData;\n         // }\n      }\n\n      const imageIcon = domNode.querySelector(\".image-data-field-icon\");\n      if (imageIcon) imageIcon.style.display = val ? \"none\" : \"\";\n\n      const image = domNode.querySelector(\".image-data-field-image\");\n      if (image) {\n         const imageDeleteIcon = image.querySelector(\".ab-delete-photo\");\n         if (imageDeleteIcon)\n            imageDeleteIcon.style.display = val ? \"block\" : \"none\";\n\n         image.style.display = val ? \"block\" : \"none\";\n\n         if (val) {\n            image.style.backgroundImage = `url('${this.urlImage(val)}')`;\n            image.setAttribute(\"image-uuid\", val);\n         } else {\n            image.removeAttribute(\"image-uuid\");\n         }\n      }\n   }\n\n   /**\n    * @method toBase64\n    *\n    * @param {Object} rowData\n    *\n    * @return {Promise} - {\n    * \t\tdata: string,\n    * \t\twidth: number,\n    * \t\theight: number\n    * }\n    */\n   toBase64(rowData) {\n      return new Promise((resolve, reject) => {\n         if (!rowData[this.columnName]) return resolve(null);\n\n         const img = new Image();\n         img.crossOrigin = \"Anonymous\";\n         img.onerror = function (err) {\n            reject(err);\n         };\n         img.onload = function () {\n            const canvas = document.createElement(\"canvas\");\n            canvas.width = img.width;\n            canvas.height = img.height;\n            const ctx = canvas.getContext(\"2d\");\n            ctx.drawImage(img, 0, 0);\n            const dataURL = canvas.toDataURL();\n            const imageData = {\n               data: dataURL,\n               width: img.width,\n               height: img.height,\n            };\n            resolve(imageData);\n         };\n\n         img.src = this.urlImage(rowData[this.columnName]);\n      });\n   }\n\n   /**\n    * @method urlImage()\n    * return the url to use to reference the image by it's id.\n    * @param {string} id\n    *        the file.uuid reference of this image.\n    * @return {string}\n    */\n   urlImage(id) {\n      return `/file/${id}`;\n   }\n\n   /**\n    * @method urlUpload()\n    * return the url for uploading a file.\n    * When used in a webix widget, the response is different than our normal\n    * API, so we can pass in a param to indicate a response compatible with\n    * webix.\n    * @param {bool} isWebix\n    *        Is this url being used by a webix component?\n    * @return {string}\n    */\n   urlUpload(isWebix = true) {\n      return `/file/upload/${this.object.id}/${this.id}/${isWebix ? \"1\" : \"0\"}`;\n   }\n};\n","const ABFieldJsonCore = require(\"../../core/dataFields/ABFieldJsonCore\");\n\nmodule.exports = class ABFieldJson extends ABFieldJsonCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldJson\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // config.editor = null; // read only for now\n      config.editor = \"text\";\n      config.css = \"textCell\";\n\n      // when called by ABViewFormCustom, will need a .template() fn.\n      // currently we don't need to return anything so ...\n      config.template = () => \"\";\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // read-only for now\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"json\",\n            settings: {\n               type: \"string\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n      item.config.value = rowData[this.columnName];\n   }\n};\n","const ABFieldListCore = require(\"../../core/dataFields/ABFieldListCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldList extends ABFieldListCore {\n   constructor(values, object) {\n      super(values, object);\n\n      // this._Selectivity = new ABFieldSelectivity(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   save() {\n      return super.save().then(() => {\n         // Now we want to clear out any entries that had values == to item removed from our list:\n         if (this.pendingDeletions.length) {\n            const model = this.object.model();\n\n            if (this.settings.isMultiple == true) {\n               // find all the entries that have one of the deleted values:\n               // use Promise to prevent issues with data being loaded before it is deleted on client side\n               return new Promise((resolve, reject) => {\n                  let numDone = 0;\n                  let numToDo = 0;\n\n                  model\n                     .findAll({})\n                     .then((list) => {\n                        list = list.data || list;\n\n                        // for each list item\n                        list.forEach((item) => {\n                           if (Array.isArray(item[this.columnName])) {\n                              // get fields not in pendingDeletions\n                              let remainingFields = item[\n                                 this.columnName\n                              ].filter((i) => {\n                                 return (\n                                    this.pendingDeletions.indexOf(i.id) == -1\n                                 );\n                              });\n\n                              if (\n                                 remainingFields.length !=\n                                 item[this.columnName].length\n                              ) {\n                                 numToDo++;\n\n                                 // update value to new field list\n                                 if (remainingFields.length == 0) {\n                                    remainingFields = \"\";\n                                 }\n                                 const value = {};\n                                 value[this.columnName] = remainingFields;\n                                 model.update(item.id, value).then(() => {\n                                    // if ($$(node) && $$(node).updateItem)\n                                    //    $$(node).updateItem(value.id, value);\n                                    numDone++;\n                                    if (numDone >= numToDo) {\n                                       resolve();\n                                    }\n                                 });\n                              }\n                           }\n                        });\n                        if (numToDo == 0) {\n                           resolve();\n                        }\n                     })\n                     .catch(reject);\n               });\n            } else {\n               // find all the entries that have one of the deleted values:\n               const where = {};\n               where[this.columnName] = this.pendingDeletions;\n               return new Promise((resolve, reject) => {\n                  let numDone = 0;\n\n                  model\n                     .findAll(where)\n                     .then((list) => {\n                        // make sure we just work with the { data:[] } that was returned\n                        list = list.data || list;\n\n                        // for each one, set the value to ''\n                        // NOTE: jQuery ajax routines filter out null values, so we can't\n                        // set them to null. :(\n                        // const numDone = 0;\n                        const value = {};\n                        value[this.columnName] = \"\";\n\n                        list.forEach((item) => {\n                           model.update(item.id, value).then(() => {\n                              numDone++;\n                              if (numDone >= list.length) {\n                                 resolve();\n                              }\n                           });\n                        });\n                        if (list.length == 0) {\n                           resolve();\n                        }\n                     })\n                     .catch(reject);\n               });\n            }\n         }\n      });\n   }\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldList\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n      const App = field.AB._App;\n\n      var formClass = \"\";\n      var placeHolder = \"\";\n      if (options.editable) {\n         formClass = \" form-entry\";\n         placeHolder = `<span style='color: #CCC; padding: 0 5px;'>${L(\n            \"Select item\"\n         )}</span>`;\n      }\n      var isRemovable = options.editable && !this.settings.required;\n\n      config.editFormat = (value) => {\n         return this.editFormat(value);\n      };\n      config.editParse = (value) => {\n         return this.editParse(value);\n      };\n\n      config.template = (rowData) => {\n         let selectedData = rowData[this.columnName];\n         if (selectedData == null) return \"\";\n         if (this.settings.isMultiple) {\n            selectedData = _getSelectedOptions(this, rowData);\n         }\n         var values = [];\n         values.push('<div class=\"badgeContainer\">');\n         let hasCustomColor = \"\";\n         let optionHex = \"\";\n         if (\n            selectedData &&\n            Array.isArray(selectedData) &&\n            selectedData.length\n         ) {\n            selectedData.forEach((val) => {\n               if (this.settings.hasColors && val.hex) {\n                  hasCustomColor = \"hascustomcolor\";\n                  optionHex = `background: ${val.hex};`;\n               }\n               if (val.text) {\n                  values.push(\n                     `<div style=\"${optionHex}\" class='webix_multicombo_value ${hasCustomColor}'><span>${val.text}</span><!-- span data-uuid=\"${val.id}\" class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span --></div>`\n                  );\n               }\n            });\n            if (selectedData.length > 1) {\n               values.push(\n                  `<span class=\"webix_badge selectivityBadge\">${selectedData.length}</span>`\n               );\n            }\n         } else if (selectedData) {\n            let selectedObj = selectedData;\n            if (typeof selectedData == \"string\") {\n               selectedObj = this.getItemFromVal(selectedData);\n            }\n            if (!selectedObj) return \"\";\n            if (this.settings.hasColors && selectedObj.hex) {\n               hasCustomColor = \"hascustomcolor\";\n               optionHex = `background: ${selectedObj.hex};`;\n            }\n            if (selectedObj.text) {\n               let clear = \"\";\n               if (options.editable && !this.settings.required) {\n                  clear = `<span class=\"webix_multicombo_delete clear-combo-value\" role=\"button\" aria-label=\"Remove item\"></span>`;\n               }\n               values.push(\n                  `<div style=\"${optionHex}\" class='webix_multicombo_value ${hasCustomColor}'>${clear}<span class=\"ellip\">${selectedObj.text}</span></div>`\n               );\n            }\n         } else {\n            return \"\";\n         }\n         values.push(\"</div>\");\n         return values.join(\"\");\n      };\n      config.editor = this.settings.isMultiple ? \"multiselect\" : \"combo\";\n      config.suggest = {\n         button: true,\n         data: this.settings.options.map(function (opt) {\n            return {\n               id: opt.id,\n               value: opt.text,\n               hex: opt.hex,\n            };\n         }),\n      };\n      if (this.settings.isMultiple) {\n         config.suggest.view = \"checksuggest\";\n      }\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      if (!node.querySelector) return;\n\n      var clearButton = node.querySelector(\n         \".selectivity-single-selected-item-remove\"\n      );\n      if (clearButton) {\n         clearButton.addEventListener(\"click\", (e) => {\n            e.stopPropagation();\n            var values = {};\n            values[this.columnName] = \"\";\n            this.object\n               .model()\n               .update(row.id, values)\n               .then(() => {\n                  // update the client side data object as well so other data changes won't cause this save to be reverted\n                  $$(node)?.updateItem?.(row.id, values);\n               })\n               .catch((err) => {\n                  node.classList.add(\"webix_invalid\");\n                  node.classList.add(\"webix_invalid_cell\");\n\n                  this.AB.notify.developer(err, {\n                     message: \"Error updating our entry.\",\n                     row: row,\n                     values: \"\",\n                     field: this.toObj(),\n                  });\n               });\n         });\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   // customEdit(row, App, node) {\n   //    return super.customEdit(row, App, node);\n   // }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple ? \"selectmultiple\" : \"selectsingle\",\n            settings: {\n               options: this.settings.options.map(function (opt) {\n                  return {\n                     id: opt.id,\n                     value: opt.text,\n                     hex: opt.hex,\n                  };\n               }),\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple ? \"detailtext\" : \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   editFormat(value) {\n      if (!value) return \"\";\n      let vals = [];\n      if (Array.isArray(value)) {\n         value.forEach((val) => {\n            if (typeof val == \"object\") {\n               vals.push(val.id);\n            } else {\n               let itemObj = this.getItemFromVal(val);\n               vals.push(itemObj.id);\n            }\n         });\n      } else {\n         if (typeof value == \"object\") {\n            vals.push(value.id);\n         } else {\n            let itemObj = this.getItemFromVal(value);\n            if (itemObj && itemObj.id) {\n               vals.push(itemObj.id);\n            }\n         }\n      }\n      return vals.join();\n   }\n\n   editParse(value) {\n      if (this.settings.isMultiple) {\n         let returnVals = [];\n         let vals = value.split(\",\");\n         vals.forEach((val) => {\n            returnVals.push(this.getItemFromVal(val));\n         });\n         return returnVals;\n      } else {\n         return value;\n      }\n   }\n\n   getItemFromVal(val) {\n      let item;\n      let options = this.options();\n      if (options.length > 1) {\n         options.forEach((option) => {\n            if (option.id == val) {\n               item = option;\n               return false;\n            }\n         });\n         return item;\n      } else {\n         return \"\";\n      }\n   }\n\n   getValue(item, rowData) {\n      return this.editParse(item.getValue());\n   }\n\n   getSelectedOptions(field, rowData = {}) {\n      let result = [];\n      if (rowData[this.columnName] != null) {\n         result = rowData[this.columnName];\n      } else if (rowData) {\n         if (Array.isArray(rowData)) {\n            result = rowData;\n         } else {\n            result.push(rowData);\n         }\n      }\n      if (result.length) {\n         if (typeof result == \"string\") result = JSON.parse(result);\n\n         // Pull text with current language\n         if (this.settings) {\n            result = (this.settings.options || []).filter((opt) => {\n               return (\n                  (result || []).filter((v) => (opt.id || opt) == (v.id || v))\n                     .length > 0\n               );\n            });\n         }\n      }\n\n      return result;\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      if (this.settings.isMultiple) {\n         // do we need anything here?\n      } else {\n         super.setValue(item, rowData);\n      }\n   }\n};\n\n// == Private methods ==\nfunction _getSelectedOptions(field, rowData = {}) {\n   let result = [];\n   if (rowData[field.columnName] != null) {\n      result = rowData[field.columnName];\n\n      if (typeof result == \"string\") result = JSON.parse(result);\n\n      // Pull text with current language\n      if (field.settings) {\n         result = (field.settings.options || []).filter((opt) => {\n            return (\n               (result || []).filter((v) => (opt.id || opt) == (v.id || v))\n                  .length > 0\n            );\n         });\n      }\n   }\n\n   return result;\n}\n","const ABFieldLongTextCore = require(\"../../core/dataFields/ABFieldLongTextCore\");\n\nmodule.exports = class ABFieldLongText extends ABFieldLongTextCore {\n   constructor(values, object) {\n      super(values, object);\n\n      /*\n\t\t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n\t\t}\n\t\t*/\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldLongText\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\"; // '[edit_type]'   for your unique situation\n      // config.sort = 'string' // '[sort_type]'   for your unique situation\n      config.template = (obj, common, value, col, ind) => {\n         return (value || \"\").toString().replace(/[<]/g, \"&lt;\");\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"multiple\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n   }\n};\n","const ABFieldNumberCore = require(\"../../core/dataFields/ABFieldNumberCore\");\n\nlet INIT_EDITOR = false;\n// {bool} INIT_EDITOR\n// Transition code between previous Framework and current.\n// we now need to wait until webix is declared or accessible globally.\n\nmodule.exports = class ABFieldNumber extends ABFieldNumberCore {\n   constructor(values, object) {\n      if (!INIT_EDITOR) {\n         // NOTE: if you need a unique [edit_type] by your returned config.editor above:\n         webix.editors.number = webix.extend(\n            {\n               // TODO : Validate number only\n            },\n            webix.editors.text\n         );\n         INIT_EDITOR = true;\n      }\n      super(values, object);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   // return the grid column header definition for this instance of ABFieldNumber\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"number\"; // [edit_type] simple inline editing.\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"numberbox\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","/*\n * ABFieldSelectivity\n *\n * An ABFieldSelectivity defines a single unique Field/Column in a ABObject.\n *\n */\n\nconst ABField = require(\"./ABField\");\n\nconst defaultSettings = {\n   allowClear: true,\n   removeOnly: false,\n   readOnly: false,\n   showDropdown: true,\n   placeholder: \"\",\n   multiple: false,\n};\n\nconst ABFieldSelectivityDefaults = {\n   key: \"selectivity\",\n};\n\nmodule.exports = class ABFieldSelectivity extends ABField {\n   constructor(values, object, fieldDefaults = ABFieldSelectivityDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return {\n         key: \"selectivity\",\n         icon: \"bars\",\n         menuName: \"\",\n         description: \"\",\n      };\n   }\n\n   selectivityRender(domNode, settings, App, row) {\n      if (domNode == null) return;\n\n      const cypress = settings.dataCy || \"\";\n      domNode.setAttribute(\"data-cy\", cypress);\n\n      // setting up our specific settings:\n      settings = settings || {};\n      for (const dv in defaultSettings) {\n         if (settings[dv] === null) {\n            settings[dv] = null;\n         } else {\n            settings[dv] = settings[dv] || defaultSettings[dv];\n         }\n      }\n\n      if (\n         settings.multiple &&\n         settings.items &&\n         settings.data &&\n         settings.data.length\n      ) {\n         settings.data.forEach(function (d) {\n            settings.items.map(function (i) {\n               if (i.id == d.id) d.hex = i.hex;\n            });\n         });\n         settings[\"data\"] = this.prepareData(\n            settings[\"data\"],\n            settings.multiple\n         );\n      } else if (settings[\"data\"] == null || settings[\"data\"] == \"\") {\n         settings[\"data\"] = this.prepareData([], settings.multiple);\n      } else {\n         settings[\"data\"] = this.prepareData(\n            settings[\"data\"],\n            settings.multiple\n         );\n      }\n\n      // store the field id so we can look it up on click events later\n      settings[\"field\"] = this.id;\n\n      // Prevent render selectivity duplicate\n      if (domNode.selectivity != null) {\n         // Refresh selectivity settings\n         domNode.selectivity.setOptions(settings);\n\n         return;\n      }\n\n      settings.element = domNode;\n\n      // Render selectivity\n      let selectivityInput;\n      if (settings.multiple) {\n         if (settings.isUsers) {\n            settings.templates = {\n               multipleSelectedItem: function (options) {\n                  return `<span class=\"selectivity-multiple-selected-item ${\n                     options.highlighted ? \" highlighted\" : \"\"\n                  }\"\n\t\t\t\t\t\t\t\tstyle=\"background-color: #eee !important; color: #666 !important; box-shadow: inset 0px 1px 1px #333;\"\n\t\t\t\t\t\t\t\tdata-item-id=\"${options.uuid}\" data-field-id=\"${settings.field}\">\n\t\t\t\t\t\t\t\t<i class=\"fa fa-user\" style=\"color: #666; opacity: 0.6;\"></i> \n                        ${\n                           settings.additionalText\n                              ? settings.additionalText(options)\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t\t${!settings.isLabelHidden ? options.text : \"\"}\n\t\t\t\t\t\t\t\t${\n                           options.removable\n                              ? ` <a class=\"selectivity-multiple-selected-item-remove\" style=\"color: #333;\"><i class=\"fa fa-remove\"></i></a>`\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t</span>`;\n               },\n            };\n         } else {\n            settings.templates = {\n               multipleSelectedItem: function (options) {\n                  return `<span class=\"selectivity-multiple-selected-item ${\n                     options.highlighted ? \" highlighted\" : \"\"\n                  }\"\n\t\t\t\t\t\t\t\tstyle=\"background-color: ${options.hex} !important;\"\n\t\t\t\t\t\t\t\tdata-item-id=\"${options.uuid}\" data-field-id=\"${settings.field}\">\n                        ${\n                           settings.editPage\n                              ? ` <a class=\"selectivity-multiple-selected-item-edit\"><i class=\"fa fa-edit\"></i></a>`\n                              : \"\"\n                        }\n                        ${\n                           settings.additionalText\n                              ? settings.additionalText(options)\n                              : \"\"\n                        }\n                        ${!settings.isLabelHidden ? options.text : \"\"}\n                        ${\n                           options.removable\n                              ? ` <a class=\"selectivity-multiple-selected-item-remove\"><i class=\"fa fa-remove\"></i></a>`\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t</span>`;\n               },\n            };\n         }\n         selectivityInput = new Selectivity.Inputs.Multiple(settings);\n\n         domNode.selectivity = selectivityInput;\n         this.selectivitySetBadge(domNode, App, row);\n      } else {\n         settings.templates = {\n            singleSelectedItem: function (options) {\n               return `<span class=\"selectivity-single-selected-item\" data-item-id=\"${\n                  options.uuid\n               }\" data-field-id=\"${settings.field}\">\n\t\t\t\t\t\t\t${\n                        settings.editPage\n                           ? '<a class=\"selectivity-single-selected-item-edit\"><i class=\"fa fa-edit\"></i></a>'\n                           : \"\"\n                     }\n                     ${\n                        settings.additionalText\n                           ? settings.additionalText(options)\n                           : \"\"\n                     }\n                     ${!settings.isLabelHidden ? options.text : \"\"}\n                     ${\n                        options.removable\n                           ? '<a class=\"selectivity-single-selected-item-remove\"><i class=\"fa fa-remove\"></i></a>'\n                           : \"\"\n                     }\n\t\t\t\t\t\t</span>`;\n            },\n         };\n\n         selectivityInput = new Selectivity.Inputs.Single(settings);\n         domNode.selectivity = selectivityInput;\n      }\n\n      if (settings.editPage) {\n         const trigerEditPageEvent = () => {\n            const instance = this;\n            const editMenus = document.querySelectorAll(\n               \".selectivity-single-selected-item-edit, .selectivity-multiple-selected-item-edit\"\n            );\n            for (let i = 0; i < editMenus.length; i++) {\n               const eMenu = editMenus[i];\n               if (eMenu && !eMenu.__hasClickEvent) {\n                  eMenu.addEventListener(\n                     \"click\",\n                     function (e) {\n                        e.stopPropagation();\n                        e.preventDefault();\n\n                        const parentElm = this.parentElement;\n                        if (!parentElm) return;\n\n                        const rowId = parentElm.getAttribute(\"data-item-id\");\n                        if (!rowId) return;\n\n                        const fieldId = parentElm.getAttribute(\"data-field-id\");\n                        if (!fieldId) return;\n\n                        const thisField = instance.object.fieldByID(fieldId);\n                        if (!thisField) return;\n\n                        thisField.emit(\"editPage\", rowId);\n                     },\n                     true\n                  );\n                  eMenu.__hasClickEvent = true;\n               }\n            }\n         };\n\n         setTimeout(() => {\n            trigerEditPageEvent();\n\n            domNode.addEventListener(\"change\", () => {\n               trigerEditPageEvent();\n            });\n         }, 500);\n      }\n\n      // WORKAROUND : remove caret icon of selectivity\n      if (settings.readOnly) {\n         const caretElems = domNode.getElementsByClassName(\"selectivity-caret\");\n         for (let i = 0; i < caretElems.length; i++) {\n            const caretElm = caretElems[i];\n            if (caretElm) {\n               caretElm.parentNode.removeChild(caretElm);\n            }\n         }\n      }\n\n      // remember our settings values\n      this.selectivitySettings = settings;\n   }\n\n   selectivityGet(domNode) {\n      if (domNode && domNode.selectivity) {\n         if (this.selectivitySettings && this.selectivitySettings.multiple) {\n            // on a multiple select, return an array of results, or empty array\n            return domNode.selectivity.getData() || [];\n         } else {\n            // if a single select, return the object or null\n            return domNode.selectivity.getData() || null;\n         }\n      } else {\n         if (this.selectivitySettings && this.selectivitySettings.multiple)\n            return [];\n         else return null;\n      }\n   }\n\n   selectivitySet(domNode, data) {\n      if (!domNode || !domNode.selectivity) return;\n\n      data = this.prepareData(data, domNode.selectivity.options.multiple);\n\n      if (\n         (Array.isArray(data) && data[0]) || // Check Array\n         (data && data.id)\n      )\n         // Check a object\n         domNode.selectivity.setData(data);\n      else domNode.selectivity.clear();\n   }\n\n   selectivityDestroy(domNode) {\n      if (domNode && domNode.selectivity) {\n         domNode.selectivity.destroy();\n\n         delete domNode.selectivity;\n      }\n   }\n\n   prepareData(data, multiple = true) {\n      if (!data && multiple) {\n         return [];\n      } else if (multiple && data && Array.isArray(data) && data.length == 0) {\n         return [];\n      } else if (!multiple && data && Array.isArray(data) && data.length == 0) {\n         return null;\n      } else if (!data && !multiple) {\n         return null;\n      }\n\n      if (typeof data == \"string\" && data.length > 0) {\n         try {\n            data = JSON.parse(data);\n         } catch (e) {\n            // not JSON parsable, so convert to\n            data = { id: data, text: data };\n         }\n      }\n\n      // if single select, then it should be object\n      if (!multiple && Array.isArray(data)) {\n         data = data[0];\n      } else if (multiple && !Array.isArray(data)) {\n         data = [data];\n      }\n\n      // check to see if id is present on each item\n      if (multiple) {\n         data.forEach((d) => {\n            if (!d.id && d.uuid) {\n               d.id = d.uuid;\n            }\n         });\n      } else {\n         if (!data.id && data.uuid) data.id = data.uuid;\n      }\n\n      if (data == null && multiple) {\n         data = [];\n      }\n\n      return data;\n   }\n\n   selectivitySetBadge(domNode) {\n      if (!domNode.clientHeight) return;\n      const innerHeight = domNode.clientHeight;\n      const outerHeight = domNode.parentElement.clientHeight;\n      if (innerHeight - outerHeight > 5) {\n         let count = 0;\n         let values = [];\n         if (domNode && domNode.selectivity)\n            values = domNode.selectivity.getValue() || [];\n\n         count = values.length;\n         if (count > 1) {\n            const badge = domNode.querySelector(\n               \".webix_badge.selectivityBadge\"\n            );\n            if (badge != null) {\n               badge.innerHTML = count;\n            } else {\n               const anchor = document.createElement(\"A\");\n               anchor.href = \"javascript:void(0);\";\n               // v2: this just updated the $height property for this row\n               // we don't do that anymore:\n               // anchor.addEventListener(\"click\", function () {\n               //    App.actions.onRowResizeAuto(row.id, innerHeight);\n               // });\n               const node = document.createElement(\"SPAN\");\n               const textnode = document.createTextNode(count);\n               node.classList.add(\"webix_badge\", \"selectivityBadge\");\n               node.appendChild(textnode);\n               anchor.appendChild(node);\n               domNode.appendChild(anchor);\n            }\n         }\n      }\n   }\n};\n","const ABFieldStringCore = require(\"../../core/dataFields/ABFieldStringCore\");\n\nmodule.exports = class ABFieldString extends ABFieldStringCore {\n   // constructor(values, object) {\n   //    super(values, object);\n\n   // {\n   //   settings: {\n   // \t  default: 'string',\n   // \t  supportMultilingual: 1/0\n   //   }\n   // }\n\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldString\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\";\n      config.css = \"textCell\";\n      // config.sort   = 'string'\n      config.template = (obj, common, value /* , col, ind */) => {\n         // if this isn't part of a group header display the default format\n         if (!obj.$group) {\n            return (value || \"\").toString().replace(/[<]/g, \"&lt;\");\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            if (this.settings.default.indexOf(\"{uuid}\") >= 0) {\n               values[this.columnName] = this.AB.uuid();\n            } else {\n               values[this.columnName] = this.settings.default;\n            }\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (data && data[this.columnName]) {\n         const max_length = this.constructor.defaults().MAX_CHAR_LENGTH;\n\n         if (data[this.columnName].length > max_length) {\n            const L = this.AB.Label();\n            validator.addError(\n               this.columnName,\n               L(\"should NOT be longer than {0} characters\", [max_length])\n            );\n         }\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n   }\n};\n","const ABFieldTextFormulaCore = require(\"../../core/dataFields/ABFieldTextFormulaCore\");\n\nmodule.exports = class ABFieldTextFormula extends ABFieldTextFormulaCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldTextFormula\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(/* row, App, node, options */) {}\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // not support in the form widget\n      return null;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldTreeCore = require(\"../../core/dataFields/ABFieldTreeCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldTree extends ABFieldTreeCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   idCustomContainer(obj) {\n      return `${this.columnName.replace(/ /g, \"_\")}-${obj.id}-tree`;\n   }\n\n   // return the grid column header definition for this instance of ABFieldTree\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n\n      let formClass = \"\";\n      let placeHolder = \"\";\n      if (options.isForm) {\n         formClass = \" form-entry\";\n         placeHolder =\n            \"<span style='color: #CCC; padding: 0 5px;'>\" +\n            L(\"Select items\") +\n            \"</span>\";\n      }\n\n      const width = options.width;\n\n      config.template = (obj) => {\n         if (obj.$group) return obj[field.columnName];\n\n         const branches = [];\n         let selectOptions = this.AB.cloneDeep(field.settings.options);\n         selectOptions = new webix.TreeCollection({\n            data: selectOptions,\n         });\n\n         let values = obj;\n         if (obj[field.columnName] != null) {\n            values = obj[field.columnName];\n         }\n\n         selectOptions.data.each(function (obj) {\n            if (\n               typeof values.indexOf != \"undefined\" &&\n               values.indexOf(obj.id) != -1\n            ) {\n               let html = \"\";\n\n               let rootid = obj.id;\n               while (this.getParentId(rootid)) {\n                  selectOptions.data.each(function (par) {\n                     if (selectOptions.data.getParentId(rootid) == par.id) {\n                        html = par.text + \": \" + html;\n                     }\n                  });\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n         let nodeHTML = \"\";\n         nodeHTML += \"<div class='list-data-values'>\";\n         if (branches.length == 0) {\n            nodeHTML += placeHolder;\n         } else {\n            branches.forEach(function (item) {\n               nodeHTML +=\n                  '<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color:' +\n                  myHex +\n                  ' !important;\">' +\n                  item +\n                  \"</span>\";\n            });\n         }\n         nodeHTML += \"</div>\";\n\n         // field.setBadge(node, App, row);\n\n         if (width) {\n            return (\n               '<div style=\"margin-left: ' +\n               width +\n               'px;\" class=\"list-data-values' +\n               formClass +\n               '\">' +\n               nodeHTML +\n               \"</div>\"\n            );\n         } else {\n            return (\n               '<div class=\"list-data-values' +\n               formClass +\n               '\">' +\n               nodeHTML +\n               \"</div>\"\n            );\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      const field = this;\n\n      if (options.isForm) {\n         if (!row || row.length == 0) {\n            node.innerHTML =\n               \"<div class='list-data-values form-entry'><span style='color: #CCC; padding: 0 5px;'>\" +\n               L(\"Select items\") +\n               \"</span></div>\";\n            return;\n         }\n\n         const branches = [];\n         options = this.AB.cloneDeep(field.settings.options);\n         options = new webix.TreeCollection({\n            data: options,\n         });\n\n         let values = row;\n         if (row[field.columnName] != null) {\n            values = row[field.columnName];\n         }\n\n         options.data.each(function (obj) {\n            if (\n               typeof values.indexOf != \"undefined\" &&\n               values.indexOf(obj.id) != -1\n            ) {\n               let html = \"\";\n\n               let rootid = obj.id;\n               while (this.getParentId(rootid)) {\n                  options.data.each(function (par) {\n                     if (options.data.getParentId(rootid) == par.id) {\n                        html = par.text + \": \" + html;\n                     }\n                  });\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n         let nodeHTML = \"\";\n         nodeHTML += \"<div class='list-data-values form-entry'>\";\n         branches.forEach(function (item) {\n            nodeHTML +=\n               '<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color:' +\n               myHex +\n               ' !important;\">' +\n               item +\n               \"</span>\";\n         });\n         nodeHTML += \"</div>\";\n\n         node.innerHTML = nodeHTML;\n      }\n\n      field.setBadge(node, App, row);\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node, component) {\n      const idBase = App.unique(this.idCustomContainer(row));\n      const idPopup = `${idBase}-popup`;\n      const idTree = `${idBase}-tree`;\n      const view = $$(node);\n      const field = this;\n      const parentComponent = component;\n      let values = {};\n      let firstRender = true;\n\n      function getValues(field, row) {\n         let values = {};\n         if (\n            typeof field != \"undefined\" &&\n            typeof field.columnName != \"undefined\" &&\n            typeof row[field.columnName] != \"undefined\"\n         ) {\n            values = row[field.columnName];\n         }\n         return values;\n      }\n\n      function populateTree(field, vals) {\n         values = getValues(field, vals);\n\n         const $Tree = $$(idTree);\n         $Tree.blockEvent(); // prevents endless loop\n\n         const options = field.AB.cloneDeep(field.settings.options);\n         $Tree.clearAll();\n         $Tree.parse(options);\n         $Tree.refresh();\n         $Tree.uncheckAll();\n         $Tree.openAll();\n\n         if (values != null && values.length) {\n            values.forEach(function (id) {\n               if ($Tree.exists(id)) {\n                  $Tree.checkItem(id);\n                  const dom = $Tree.getItemNode(id);\n                  dom.classList.add(\"selected\");\n               }\n            });\n         }\n         $Tree.unblockEvent();\n      }\n\n      if ($$(idPopup)) {\n         $$(idPopup).show();\n         populateTree(this, row);\n      } else {\n         webix\n            .ui({\n               id: idPopup,\n               view: \"popup\",\n               width: 500,\n               height: 400,\n               on: {\n                  onShow: () => {\n                     if (firstRender == true) populateTree(this, row);\n\n                     firstRender = false;\n                  },\n               },\n               body: {\n                  id: idTree,\n                  view: \"tree\",\n                  css: \"ab-data-tree\",\n                  template: function (obj, common) {\n                     return (\n                        \"<label>\" +\n                        common.checkbox(obj, common) +\n                        \"&nbsp;\" +\n                        obj.text +\n                        \"</label>\"\n                     );\n                  },\n                  on: {\n                     onItemCheck: async function (id, value, event) {\n                        const dom = this.getItemNode(id);\n                        const tree = this;\n                        if (value == true) {\n                           dom.classList.add(\"selected\");\n                        } else {\n                           dom.classList.remove(\"selected\");\n                        }\n                        // works for the same-level children only\n                        // except root items\n                        if (this.getParentId(id)) {\n                           tree.blockEvent(); // prevents endless loop\n\n                           let rootid = id;\n                           while (this.getParentId(rootid)) {\n                              rootid = this.getParentId(rootid);\n                              if (rootid != id) tree.uncheckItem(rootid);\n                           }\n\n                           this.data.eachSubItem(rootid, function (item) {\n                              if (item.id != id) tree.uncheckItem(item.id);\n                           });\n\n                           tree.unblockEvent();\n                        } else {\n                           tree.blockEvent(); // prevents endless loop\n                           this.data.eachSubItem(id, function (obj) {\n                              if (obj.id != id) tree.uncheckItem(obj.id);\n                           });\n                           tree.unblockEvent();\n                        }\n                        const values = {};\n                        values[field.columnName] = $$(idTree).getChecked();\n\n                        if (row.id) {\n                           // pass null because it could not put empty array in REST api\n                           if (values[field.columnName].length == 0)\n                              values[field.columnName] = \"\";\n\n                           try {\n                              await field.object.model().update(row.id, values);\n\n                              // update the client side data object as well so other data changes won't cause this save to be reverted\n                              if (view && view.updateItem) {\n                                 view.updateItem(row.id, values);\n                              }\n                           } catch (err) {\n                              node.classList.add(\"webix_invalid\");\n                              node.classList.add(\"webix_invalid_cell\");\n\n                              this.AB.notify.developer(err, {\n                                 message: \"Error updating our entry.\",\n                                 row: row,\n                                 values: values,\n                              });\n                           }\n                        } else {\n                           const rowData = {};\n                           rowData[field.columnName] = $$(idTree).getChecked();\n\n                           field.setValue($$(parentComponent.ui.id), rowData);\n                        }\n                     },\n                  },\n               },\n            })\n            .show(node, {\n               x: -7,\n            });\n      }\n      return false;\n   }\n\n   setBadge(domNode, row) {\n      const field = this;\n      domNode = domNode.querySelector(\".list-data-values\");\n      const innerHeight = domNode.scrollHeight;\n      const outerHeight = domNode.parentElement.clientHeight;\n      if (innerHeight - outerHeight > 5) {\n         let count = 0;\n         if (row[field.columnName] && row[field.columnName].length)\n            count = row[field.columnName].length;\n         else count = 0;\n\n         if (count > 1) {\n            const badge = domNode.querySelector(\n               \".webix_badge.selectivityBadge\"\n            );\n            if (badge != null) {\n               badge.innerHTML = count;\n            } else {\n               const anchor = document.createElement(\"A\");\n               anchor.href = \"javascript:void(0);\";\n               anchor.addEventListener(\"click\", function (event) {\n                  // v2: this was just saving the new height to the\n                  // field properties. We don't do that anymore:\n                  // App.actions.onRowResizeAuto(row.id, innerHeight);\n                  event.stopPropagation();\n               });\n               const node = document.createElement(\"SPAN\");\n               const textnode = document.createTextNode(count);\n               node.classList.add(\"webix_badge\", \"selectivityBadge\");\n               node.appendChild(textnode);\n               anchor.appendChild(node);\n               domNode.appendChild(anchor);\n            }\n         }\n      }\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"formtree\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtree\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   getValue(item, rowData) {\n      let values = {};\n      values = item.getValues();\n      return values;\n   }\n\n   setValue(item, rowData) {\n      if (!item) return false;\n\n      const val = rowData[this.columnName] || [];\n\n      item.setValues(val);\n      // get dom\n      const dom = item.$view.querySelector(\".list-data-values\");\n\n      if (!dom) return false;\n\n      // set value to selectivity\n      this.customDisplay(val, this.App, dom, {\n         editable: true,\n         isForm: true,\n      });\n\n      setTimeout(function () {\n         let height = 33;\n         if (dom.scrollHeight > 33) {\n            height = dom.scrollHeight;\n         }\n         item.config.height = height + 5;\n         item.resize();\n      }, 200);\n   }\n};\n","const ABFieldConnectCore = require(\"../../core/dataFields/ABFieldConnectCore\");\nconst ABFieldUserCore = require(\"../../core/dataFields/ABFieldUserCore\");\n\nmodule.exports = class ABFieldUser extends ABFieldUserCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   async save() {\n      // Add new\n      if (this.id == null) {\n         const SiteUser = this.AB.objectUser();\n         const Defaults = ABFieldUserCore.defaults();\n\n         this.settings.linkObject = SiteUser.id;\n         this.settings.isCustomFK = 1;\n\n         if (this.settings.isMultiple) {\n            this.settings.indexField2 = Defaults.USERNAME_FIELD_ID;\n            this.settings.linkType = \"many\";\n            this.settings.linkViaType = \"many\";\n            this.settings.isSource = 1;\n         } else {\n            this.settings.indexField = Defaults.USERNAME_FIELD_ID;\n            this.settings.linkType = \"one\";\n            this.settings.linkViaType = \"many\";\n            this.settings.isSource = 1;\n         }\n\n         // TODO: .fieldCustomNew() for saving \"local\" changes.\n         // NOTE: The Object adding this Field sees it's data as a ABFieldUser\n         //       connection.\n         //       However, the SiteUser will see the data as a ABFieldConnect\n         //       connection\n         const linkCol = SiteUser.fieldNew({\n            key: ABFieldConnectCore.defaults().key,\n            columnName: `${this.object.name}_${this.label}`,\n            label: this.object.label,\n            settings: {\n               showIcon: this.settings.showIcon,\n               linkObject: this.object.id,\n               linkType: this.settings.linkViaType,\n               linkViaType: this.settings.linkType,\n               isCustomFK: this.settings.isCustomFK,\n               indexField: this.settings.indexField,\n               indexField2: this.settings.indexField2,\n               isSource: 0,\n            },\n         });\n\n         // // Create definitions of the connected fields\n         // // NOTE: skip directly to the ABMLClass.save() to avoid the\n         // // migrations caused during the ABField.save() operations.\n         // await ABFieldUserCore.prototype.save.call(this);\n\n         // linkCol.settings.linkColumn = this.id;\n         // await ABFieldUserCore.prototype.save.call(linkCol);\n\n         // // Update the id value of linked field to connect together\n         // this.settings.linkColumn = linkCol.id;\n         // await ABFieldUserCore.prototype.save.call(this);\n\n         let newDef = await this.toDefinition().save();\n         this.id = newDef.id;\n\n         linkCol.settings.linkColumn = this.id;\n         let newLinkDef = await linkCol.toDefinition().save();\n         linkCol.id = newLinkDef.id;\n\n         this.settings.linkColumn = linkCol.id;\n         await this.toDefinition().save();\n\n         // Add fields to Objects\n         await this.object.fieldAdd(this);\n\n         await SiteUser.fieldAdd(linkCol);\n\n         // Create column to DB\n         await this.migrateCreate();\n\n         await linkCol.migrateCreate();\n\n         return this;\n      } else {\n         return super.save();\n      }\n   }\n\n   // return the grid column header definition for this instance of ABFieldUser\n\n   columnHeader(options) {\n      // debugger;\n      options = this.setDisplayOptions(options);\n      return super.columnHeader(options);\n   }\n\n   /**\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   // customDisplay(row, App, node, options = {}) {\n   //    debugger;\n   //    options = this.setDisplayOptions(options);\n   //\n   //    return super.customDisplay(row, App, node, options);\n   // }\n\n   setDisplayOptions(options) {\n      options = options || {};\n      options.editable =\n         this.settings.editable != null ? this.settings.editable : true;\n\n      options.isLabelHidden =\n         this.settings.isShowUsername != null\n            ? !this.settings.isShowUsername\n            : false;\n\n      options.additionalText = (opt) => {\n         if (!this.settings.isShowProfileImage) return \"\";\n\n         if (opt.image_id)\n            return `<img src='/file/${opt.image_id}' style='border-radius:100%; object-fit: cover; margin: 0 5px 0 -10px;' width='28' height='28' />`;\n         else return '<i style=\"opacity: 0.6;\" class=\"fa fa-user\"></i> ';\n      };\n\n      return options;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (this.settings.isCurrentUser) {\n         if (this.settings.isMultiple) {\n            values[this.columnName] = [\n               {\n                  id: this.AB.Account.username(),\n                  text: this.AB.Account.username(),\n               },\n            ];\n         } else {\n            values[this.columnName] = this.AB.Account.username();\n         }\n      }\n   }\n\n   getValue(item) {\n      let val = super.getValue(item);\n\n      if (val) {\n         if (typeof val == \"string\")\n            val = val.replace(/ab-current-user/g, this.AB.Account.username());\n         else if (Array.isArray(val))\n            val = val.map((v) =>\n               (v.username ?? v.uuid ?? v.id ?? v)?.replace(\n                  /ab-current-user/g,\n                  this.AB.Account.username()\n               )\n            );\n      }\n\n      return val;\n   }\n\n   setValue(item, rowData) {\n      let val = rowData[this.columnName];\n      // Select \"[Current user]\" to update\n      if (val == \"ab-current-user\") val = this.AB.Account.username();\n\n      rowData[this.columnName] = val;\n\n      super.setValue(item, rowData);\n   }\n\n   getUsers() {\n      return this.AB.Account.userList().map((u) => {\n         const result = {\n            id: u.username,\n            image: u.image_id,\n         };\n\n         if (this.settings.isMultiple) {\n            result.text = u.username;\n         } else {\n            result.value = u.username;\n         }\n\n         return result;\n      });\n   }\n};\n","/**\n * ABProcessLane\n * manages a lane in a Process Diagram.\n *\n * Lanes manage users in the system, and provide a way to lookup a SiteUser.\n */\nvar ABProcessLaneCore = require(\"../../core/process/ABProcessLaneCore\");\n\nmodule.exports = class ABProcessLane extends ABProcessLaneCore {\n   // constructor(attributes, process, application) {\n   //    super(attributes, process, application);\n   // }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   transferParticipantWhereToMe(id) {\n      var myParticipant = this.process.elementForDiagramID(id);\n      if (myParticipant) {\n         // if I haven't already set my where clause, and my Participant\n         // has one, then take it:\n         if (!this.stashed && myParticipant.stashed) {\n            var copyParams = [\n               \"stashed\",\n               \"useRole\",\n               \"role\",\n               \"useAccount\",\n               \"account\",\n            ];\n            copyParams.forEach((p) => {\n               var swap = this[p];\n               this[p] = myParticipant[p];\n               myParticipant[p] = swap; // ?? do this ??\n            });\n         }\n      }\n   }\n\n   /**\n    * fromElement()\n    * initialize this Lane's values from the given BPMN:Lane\n    * @param {BPMNParticipant}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n\n      // on creation, if I have child objects, then move the .where definition\n      // from my parent Participant to ME\n      if (element.children && element.children.length > 0) {\n         if (element.parent && element.parent.type == \"bpmn:Participant\") {\n            this.transferParticipantWhereToMe(element.parent.id);\n         }\n      } else {\n         // this info might just reside in the .parent.children[]\n         if (\n            element.parent &&\n            element.parent.children &&\n            element.parent.children.length > 0\n         ) {\n            element.parent.children.forEach((child) => {\n               if (child.type != \"bpmn:Lane\") {\n                  // if child has lanes\n                  if (\n                     child.businessObject.lanes &&\n                     child.businessObject.lanes.length > 0\n                  ) {\n                     // if lane is me\n                     var myLane = child.businessObject.lanes.find((l) => {\n                        return l.id == this.diagramID;\n                     });\n                     if (myLane) {\n                        this.transferParticipantWhereToMe(element.parent.id);\n\n                        // tell child I'm it's lane:\n                        var objChild = this.process.elementForDiagramID(\n                           child.id\n                        );\n                        if (objChild) {\n                           objChild.setLane(this);\n                        }\n                     }\n                  }\n               }\n            });\n         }\n      }\n\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Lane with information that was relevant\n    * from the provided BPMN:Lane\n    * @param {BPMNParticipant}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Participant_185ljkg\",\n                \"width\": 958,\n                \"height\": 240,\n                \"type\": \"bpmn:Participant\",\n                \"x\": -810,\n                \"y\": -2010,\n                \"order\": {\n                    \"level\": -2\n                },\n               \"businessObject\": {\n                    \"$type\": \"bpmn:Participant\",\n                    \"id\": \"Participant_185ljkg\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": -810,\n                            \"y\": -2010,\n                            \"width\": 958,\n                            \"height\": 240\n                        },\n                        \"id\": \"Participant_185ljkg_di\",\n                        \"isHorizontal\": true\n                    },\n                    \"processRef\": {\n                        \"$type\": \"bpmn:Process\",\n                        \"id\": \"Process_0x3sul5\"\n                    }\n                }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      // if I picked up a new task, inform it I am it's lane:\n   }\n};\n","/**\n * ABProcessParticipant\n * manages the participant lanes in a Process Diagram.\n *\n * Participants manage users in the system (when there are no lanes defined)\n * and provide a way to lookup a SiteUser.\n */\nvar ABProcessParticipantCore = require(\"../../core/process/ABProcessParticipantCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessParticipant extends ABProcessParticipantCore {\n   // constructor(attributes, process, AB) {\n   //    super(attributes, process, AB);\n   // }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   /**\n    * fromElement()\n    * initialize this Participant's values from the given BPMN:Participant\n    * @param {BPMNParticipant}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Participant with information that was relevant\n    * from the provided BPMN:Participant\n    * @param {BPMNParticipant}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Participant_185ljkg\",\n                \"width\": 958,\n                \"height\": 240,\n                \"type\": \"bpmn:Participant\",\n                \"x\": -810,\n                \"y\": -2010,\n                \"order\": {\n                    \"level\": -2\n                },\n               \"businessObject\": {\n                    \"$type\": \"bpmn:Participant\",\n                    \"id\": \"Participant_185ljkg\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": -810,\n                            \"y\": -2010,\n                            \"width\": 958,\n                            \"height\": 240\n                        },\n                        \"id\": \"Participant_185ljkg_di\",\n                        \"isHorizontal\": true\n                    },\n                    \"processRef\": {\n                        \"$type\": \"bpmn:Process\",\n                        \"id\": \"Process_0x3sul5\"\n                    }\n                }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      if (defElement.children) {\n         var laneIDs = [];\n         defElement.children.forEach((c) => {\n            if (c.type == \"bpmn:Lane\") {\n               laneIDs.push(c.id);\n            }\n         });\n         this.laneIDs = laneIDs;\n      }\n   }\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this objec.\n    * @return {json}\n    */\n   diagramProperties() {\n      return [\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n         },\n      ];\n   }\n};\n","const ABProcessElementCore = require(\"../../../core/process/tasks/ABProcessElementCore.js\");\n\nmodule.exports = class ABProcessElement extends ABProcessElementCore {\n   // constructor(attributes, process, AB, defaultValues) {\n   //    super(attributes, process, AB, defaultValues);\n\n   //    // listen\n   // }\n\n   /**\n    * @method destroy()\n    * remove this task definition.\n    * @return {Promise}\n    */\n   destroy() {\n      ////\n      //// TODO: once our core conversion is complete, this .save() can be\n      //// moved to ABProcessTaskCore, and our ABDefinition.save() can take\n      //// care of the proper method to save depending on the current Platform.\n      ////\n      // return this.toDefinition()\n      //     .destroy()\n\n      return super.destroy().then(() => {\n         return this.process.elementRemove(this);\n      });\n   }\n\n   isValid() {\n      /*\n        var validator = OP.Validation.validator();\n\n        // label/name must be unique:\n        var isNameUnique =\n            this.AB.processes((o) => {\n                return o.name.toLowerCase() == this.name.toLowerCase();\n            }).length == 0;\n        if (!isNameUnique) {\n            validator.addError(\n                \"name\",\n                L(\n                    \"ab.validation.object.name.unique\",\n                    `Process name must be unique (\"${this.name}\"\" already used in this Application)`\n                )\n            );\n        }\n\n        return validator;\n        */\n\n      // var isValid =\n      //     this.AB.processes((o) => {\n      //         return o.name.toLowerCase() == this.name.toLowerCase();\n      //     }).length == 0;\n      // return isValid;\n\n      return true;\n   }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   findLane(curr, cb) {\n      if (!curr) {\n         cb(null, null);\n         return;\n      }\n\n      // if current object has a LANE definition, use that one:\n      if (curr.lanes && curr.lanes.length > 0) {\n         cb(null, curr.lanes[0]);\n      } else if (curr.$type == \"bpmn:Participant\") {\n         // if the current is a Participant, take that one\n         cb(null, curr);\n      } else {\n         // else move upwards and check again:\n         curr = curr.$parent;\n         this.findLane(curr, cb);\n      }\n   }\n\n   setLane(Lane) {\n      this.laneDiagramID = Lane.diagramID;\n   }\n\n   /**\n    * fromElement()\n    * initialize this Task's values from the given BPMN:Element\n    * @param {BPMNElement}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Task with information that was relevant\n    * from the provided BPMN:Element\n    * @param {BPMNElement}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Task_08j07ni\",\n                \"width\": 100,\n                \"height\": 80,\n                \"type\": \"bpmn:SendTask\",\n                \"x\": 20,\n                \"y\": -2130,\n                \"order\": {\n                    \"level\": 5\n                },\n                \"businessObject\": {\n                    \"$type\": \"bpmn:SendTask\",\n                    \"id\": \"Task_08j07ni\",\n                    \"name\": \"ffff\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": 20,\n                            \"y\": -2130,\n                            \"width\": 100,\n                            \"height\": 80\n                        },\n                        \"id\": \"SendTask_0iidv6o_di\"\n                    }\n\n                    // Some elements (like EndEvents) have:\n                    .eventDefinitions: [\n                        {\n                            $type: \"actual bpmn:ElementType\",\n                            ...\n                        }\n                    ]\n                },\n                \"incoming\":[],\n                \"outgoing\":[]\n            }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      // our lane may have changed:\n      var currObj = defElement.businessObject;\n      this.findLane(currObj, (err, obj) => {\n         if (obj) {\n            this.laneDiagramID = obj.id;\n         } else {\n            // if my parent shape is a Participant, then use that:\n            if (\n               defElement.parent &&\n               defElement.parent.type == \"bpmn:Participant\"\n            ) {\n               this.laneDiagramID = defElement.parent.id;\n            } else {\n               this.laneDiagramID = null;\n            }\n         }\n      });\n   }\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties() {\n      const warnings = this.warnings();\n      return [\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n            warn: warnings.length ? warnings : null,\n         },\n      ];\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ui = {\n         id: id,\n         view: \"label\",\n         label: \"this task has not implement properties yet...\",\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {}\n\n   /**\n    * property()\n    * return the specific property value if it exists.\n    * @return {mixed} | undefined\n    */\n   property(id) {\n      if ($$(id)) {\n         return $$(id).getValue();\n      }\n   }\n\n   /**\n    * switchTo()\n    * replace this object with an instance of one of our child classes:\n    * @param {ABProcessTask*} child\n    *        an instance of the new Process Task we are replaced with.\n    * @param {string} propertiesID\n    *        the webix ui.id container for the properties panel.\n    */\n   switchTo(child, propertiesID) {\n      // remove myself from our containing process's elements\n      this.process.elementRemove(this);\n\n      // add the new Process WITH the same id\n      this.process.elementAdd(child);\n\n      // show the child properties:\n      child.propertiesShow(propertiesID);\n\n      this.emit(\"switchTo\", child);\n   }\n\n   /**\n    * @method warningsEval()\n    * re-evaluate our warnings for this Process Task.\n    * Most of our ProcessTasks need to also verify data related to\n    * other available tasks, so we need to call the onProcessReady()\n    * so we can access those values.\n    */\n   warningsEval() {\n      super.warningsEval();\n      this.onProcessReady();\n\n      // if this isn't an end type of task, then there must be\n      // > 0 next tasks\n      if (!this.isEndTask()) {\n         const myOutgoingConnections = this.process.connectionsOutgoing(\n            this.diagramID\n         );\n         if (myOutgoingConnections.length < 1) {\n            this.warningMessage(\"should have another task after this one\");\n         }\n      }\n   }\n\n   /**\n    * @method warningMessage(message)\n    * Save a warning message in a common format for our ProcessTasks.\n    */\n   warningMessage(msg, data = {}) {\n      let message = `${this.defaults.key}[${\n         this.label ? this.label : this.name\n      }]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABProcessEndCore = require(\"../../../core/process/tasks/ABProcessEndCore.js\");\n\nmodule.exports = class ABProcessEnd extends ABProcessEndCore {\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // An End Event doesn't perform any other actions\n   //         // than to signal it has successfully completed.\n   //         // But it provides no Additional Tasks to work on.\n   //         // for testing:\n   //         this.stateCompleted(instance);\n   //         this.log(instance, \"End Event Reached\");\n   //         resolve(true);\n   //     });\n   // }\n};\n","const ABProcessGatewayExclusiveCore = require(\"../../../core/process/tasks/ABProcessGatewayExclusiveCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessGatewayExclusive extends (\n   ABProcessGatewayExclusiveCore\n) {\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties() {\n      // the first entry is for the gateway element itself\n      var properties = super.diagramProperties();\n      /*[\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n         },\n      ];\n      */\n\n      // now add any additional updates for each of our connections:\n      var myOutgoingConnections = this.process.connectionsOutgoing(\n         this.diagramID\n      );\n      myOutgoingConnections.forEach((conn) => {\n         properties.push({\n            id: conn.id,\n            def: {\n               name: this.conditions[conn.id]?.label ?? \"\",\n            },\n         });\n      });\n      return properties;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      // make sure we have > 1 connection.\n      const myOutgoingConnections = this.process.connectionsOutgoing(\n         this.diagramID\n      );\n      if (myOutgoingConnections.length < 2) {\n         this.warningMessage(\"should have multiple outgoing connections\");\n      }\n\n      // make sure there is no more then 1 connection that doesn't have\n      // a condition:\n      let numCondWithOne = 0;\n      myOutgoingConnections.forEach((c) => {\n         if ((this.conditions[c.id]?.filterValue.rules?.length ?? 0) == 0) {\n            numCondWithOne++;\n         }\n      });\n\n      if (numCondWithOne > 1) {\n         this.warningMessage(\n            \"should not have more than 1 unfiltered connection.\"\n         );\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskEmailCore = require(\"../../../core/process/tasks/ABProcessTaskEmailCore.js\");\n\nmodule.exports = class ABProcessTaskEmail extends ABProcessTaskEmailCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   warningsEval() {\n      super.warningsEval();\n\n      // check for warnings:\n\n      if (!this.subject) {\n         this.warningMessage(\"is missing a subject\");\n      }\n\n      if (!this.message) {\n         this.warningMessage(\"is missing a message\");\n      }\n\n      this.verifySetting(\"to\");\n      this.verifySetting(\"from\");\n      this.verifyNextLane(\"to\");\n      if (this.from == \"0\") {\n         let thisLane = this.myLane();\n         if (!thisLane) {\n            this.warningMessage(\n               \"can not resolve the lane participant for [.from] field.\"\n            );\n         }\n      }\n      this.verifyRoleAccount(\"to\", \"toUsers\");\n      this.verifyRoleAccount(\"from\", \"fromUsers\");\n   }\n\n   /**\n    * @method verifySetting()\n    * make sure the given field key has a value assigned.\n    * @param {string} key\n    *        the property of this object to check. (to, from)\n    */\n   verifySetting(key) {\n      if (this[key] == \"\") {\n         this.warningMessage(`does not have a [${key}] setting.`);\n      }\n   }\n\n   /**\n    * @method verifyNextLane()\n    * make sure we can access a Lane for the given property key.\n    * The \"to\" field can reference the \"Next Participant\". This checks to\n    * see if we can reference a lane for the next task.\n    * @param {string} key\n    *        the property that has the value for Next Participant. [to]\n    */\n   verifyNextLane(key) {\n      if (this[key] === \"0\") {\n         // Next Participant\n         // we need to resolve our next task and see if we can pull the participant info from it.\n\n         let nextTasks = this.process.connectionNextTask(this);\n         let nextLanesResolved = true;\n         nextTasks.forEach((t) => {\n            let lane = t.myLane();\n            if (!lane) {\n               nextLanesResolved = false;\n            }\n         });\n         if (!nextLanesResolved || nextTasks.length == 0) {\n            this.warningMessage(\n               `can not resolve next lane participant for [${key}] field.`\n            );\n         }\n      }\n   }\n\n   /**\n    * @method verifyRoleAccount()\n    * Check to see if the provided property is set to use a Role/Account for\n    * the email, and make sure there are values set for what is chosen.\n    * @param {string} key\n    *        the property we are currently validating.\n    * @param {string} valKey\n    *        the property that contains the specific value object.\n    */\n   verifyRoleAccount(key, valKey) {\n      if (this[key] == \"1\") {\n         if (this[valKey]) {\n            if (this[valKey].useRole) {\n               if (this[valKey].role.length == 0) {\n                  this.warningMessage(`can not resolve [${key}] Role setting.`);\n               }\n            }\n            if (this[valKey].useAccount) {\n               if (this[valKey].account.length == 0) {\n                  this.warningMessage(\n                     `can not resolve [${key}] Account setting.`\n                  );\n               }\n            }\n            // TODO:\n            // if (this[valKey].userFields.length > 0) {\n            //    // how to know if this is a problem?\n            // }\n         }\n      }\n   }\n};\n","const ABProcessTaskServiceCore = require(\"../../../core/process/tasks/ABProcessTaskServiceCore.js\");\n\nmodule.exports = class ABProcessTaskService extends ABProcessTaskServiceCore {};\n","const AccountingBatchProcessingCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingBatchProcessingCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingBatchProcessing extends (\n   AccountingBatchProcessingCore\n) {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processBatchValue: `${id}_processBatchValue`,\n         objectBatch: `${id}_objectBatch`,\n         fieldBatchEntries: `${id}_fieldBatchEntries`,\n         fieldBatchFinancialPeriod: `${id}_fieldBatchFinancialPeriod`,\n         objectJE: `${id}_objectJE`,\n         fieldJEAccount: `${id}_fieldJEAccount`,\n         fieldJERC: `${id}_fieldJERC`,\n         fieldJEStatus: `${id}_fieldJEStatus`,\n         fieldJEStatusComplete: `${id}_fieldJEStatusComplete`,\n         objectBR: `${id}_objectBR`,\n         fieldBRFinancialPeriod: `${id}_fieldBRFinancialPeriod`,\n         fieldBRAccount: `${id}_fieldBRAccount`,\n         fieldBRRC: `${id}_fieldBRRC`,\n         fieldBREntries: `${id}_fieldBREntries`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      //\n      // set up field settings:\n      //\n\n      var blankField = {\n         id: 0,\n         value: L(\"Select a Field\"),\n      };\n      // blankField : generic Select a field entry\n\n      function defaultFields(objID) {\n         // create a new options array of Field Choices for the given obj.id\n\n         var fields = [blankField];\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object.fields().forEach((f) => {\n                  fields.push({ id: f.id, value: f.label, field: f });\n               });\n            }\n         }\n         return fields;\n      }\n\n      function updateFields(fieldPickers, fieldValues, defaultValue) {\n         // update the list of field select choices with the new field choices\n\n         fieldPickers.forEach((fp) => {\n            var picker = $$(fp);\n            if (picker) {\n               picker.define(\"options\", fieldValues);\n               // if (defaultValue) {\n               //    picker.define(\"value\", defaultValue);\n               // } else {\n               //    picker.define(\"value\", fieldValues[0].value);\n               // }\n               picker.refresh();\n               picker.show();\n            }\n         });\n      }\n\n      var batchFields = defaultFields(this.objectBatch);\n      // batchFields : the default list of fields for the Batch Object\n\n      var fieldPickersBatch = [\n         ids.fieldBatchEntries,\n         ids.fieldBatchFinancialPeriod,\n      ];\n      // fieldPickersBatch : the list of field selects to update for the Batch\n      //      object.\n\n      var jeFields = defaultFields(this.objectJE);\n      // jeFields : the default list of fields for the Journal Entry Object\n\n      var fieldPickersJE = [\n         ids.fieldJEAccount,\n         ids.fieldJERC,\n         ids.fieldJEStatus,\n      ];\n      // fieldPickersJE : the list of field selects to update for the Journal Entry\n      //      object.\n\n      function compileStatusValues(statusField) {\n         var values = [{ id: 0, value: L(\"Select the Complete Value\") }];\n         if (statusField && statusField.options) {\n            statusField.options().forEach((o) => {\n               values.push({ id: o.id, value: o.text });\n            });\n         }\n         return values;\n      }\n\n      function updatePickerStatusComplete(values) {\n         var wbxComplete = $$(ids.fieldJEStatusComplete);\n         if (wbxComplete) {\n            // update fieldJEStatusComplete options\n            wbxComplete.define(\"options\", values);\n            wbxComplete.refresh();\n            // show fieldJEStatusComplete\n            wbxComplete.show();\n         }\n      }\n\n      function onStatusComplete(newVal) {\n         // pull the ABField object from newValue\n         var jeEntryID = $$(ids.objectJE).getValue();\n         var jeEntry = objectList.find((o) => o.id == jeEntryID);\n         if (jeEntry && jeEntry.object) {\n            var statusField = jeEntry.object.fieldByID(newVal);\n            if (statusField && statusField.options) {\n               // get the options as an []\n               jeFieldStatusValues = compileStatusValues(statusField);\n\n               updatePickerStatusComplete(jeFieldStatusValues);\n            }\n         }\n      }\n\n      var jeFieldStatusValues = compileStatusValues();\n      // jeFieldStatusValues : the list of status options from the fieldJEStatus\n      //      selected entry.\n\n      var brFields = defaultFields(this.objectBR);\n      // jeFields : the default list of fields for the Journal Entry Object\n\n      var fieldPickersBR = [\n         ids.fieldBRFinancialPeriod,\n         ids.fieldBRAccount,\n         ids.fieldBRRC,\n         ids.fieldBREntries,\n      ];\n      // fieldPickersBR : the list of field selects to update for the Balance Record\n      //      object.\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processBatchValue,\n               view: \"select\",\n               label: L(\"Process Batch Value\"),\n               value: this.processBatchValue,\n               name: \"processBatchValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectBatch,\n               view: \"select\",\n               label: L(\"Batch Object\"),\n               value: this.objectBatch,\n               name: \"objectBatch\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        batchFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersBatch, batchFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldBatchEntries,\n               view: \"select\",\n               label: L(\"Batch->JE[]\"),\n               value: this.fieldBatchEntries,\n               name: \"fieldBatchEntries\",\n               options: batchFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBatchFinancialPeriod,\n               view: \"select\",\n               label: L(\"Batch->FinancialPeriod\"),\n               value: this.fieldBatchFinancialPeriod,\n               name: \"fieldBatchFinancialPeriod\",\n               options: batchFields,\n               hidden: true,\n            },\n            {\n               id: ids.objectJE,\n               view: \"select\",\n               label: L(\"Journal Entry Object\"),\n               value: this.objectJE,\n               name: \"objectJE\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of jeFields\n                        jeFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersJE, jeFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldJEAccount,\n               view: \"select\",\n               label: L(\"JE->Account\"),\n               value: this.fieldJEAccount,\n               name: \"fieldJEAccount\",\n               options: jeFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldJERC,\n               view: \"select\",\n               label: L(\"JE->RC\"),\n               value: this.fieldJERC,\n               name: \"fieldJERC\",\n               options: jeFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldJEStatus,\n               view: \"select\",\n               label: L(\"JE->Status\"),\n               value: this.fieldJEStatus,\n               name: \"fieldJEStatus\",\n               options: jeFields,\n               hidden: true,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        onStatusComplete(newVal);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldJEStatusComplete,\n               view: \"select\",\n               label: L(\"JE->Status->Complete\"),\n               value: this.fieldJEStatusComplete,\n               name: \"fieldJEStatusComplete\",\n               options: jeFieldStatusValues,\n               hidden: true,\n            },\n            {\n               id: ids.objectBR,\n               view: \"select\",\n               label: L(\"Balance Record\"),\n               value: this.objectBR,\n               name: \"objectBR\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of jeFields\n                        brFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersBR, brFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldBRFinancialPeriod,\n               view: \"select\",\n               label: L(\"BR->FP\"),\n               value: this.fieldBRFinancialPeriod,\n               name: \"fieldBRFinancialPeriod\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBRAccount,\n               view: \"select\",\n               label: L(\"BR->Account\"),\n               value: this.fieldBRAccount,\n               name: \"fieldBRAccount\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBRRC,\n               view: \"select\",\n               label: L(\"BR->RC\"),\n               value: this.fieldBRRC,\n               name: \"fieldBRRC\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBREntries,\n               view: \"select\",\n               label: L(\"BR->Entries\"),\n               value: this.fieldBREntries,\n               name: \"fieldBREntries\",\n               options: brFields,\n               hidden: true,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      // if there are already default values for our Objects,\n      // unhide the field selectors:\n      if (this.objectBatch && this.objectBatch != 0) {\n         updateFields(fieldPickersBatch, batchFields);\n      }\n\n      if (this.objectJE && this.objectJE != 0) {\n         updateFields(fieldPickersJE, jeFields);\n      }\n\n      if (this.fieldJEStatus) {\n         onStatusComplete(this.fieldJEStatus);\n      }\n\n      if (this.objectBR && this.objectBR != 0) {\n         updateFields(fieldPickersBR, brFields);\n      }\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingFPCloseCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingFPCloseCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingFPClose extends AccountingFPCloseCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processFPValue: `${id}_processFPValue`,\n         objectFP: `${id}_objectFP`,\n         objectGL: `${id}_objectGL`,\n         objectAcc: `${id}_objectAcc`,\n         fieldFPStart: `${id}_fieldFPStart`,\n         fieldFPOpen: `${id}_fieldFPOpen`,\n         fieldFPStatus: `${id}_fieldFPStatus`,\n         fieldFPActive: `${id}_fieldFPActive`,\n         fieldGLStarting: `${id}_fieldGLStarting`,\n         fieldGLRunning: `${id}_fieldGLRunning`,\n         fieldGLAccount: `${id}_fieldGLAccount`,\n         fieldGLRc: `${id}_fieldGLRc`,\n         fieldGLDebit: `${id}fieldGLDebit`,\n         fieldGLCredit: `${id}_fieldGLCredit`,\n         fieldAccType: `${id}_fieldAccType`,\n         fieldAccAsset: `${id}_fieldAccAsset`,\n         fieldAccExpense: `${id}_fieldAccExpense`,\n         fieldAccLiabilities: `${id}_fieldAccLiabilities`,\n         fieldAccEquity: `${id}_fieldAccEquity`,\n         fieldAccIncome: `${id}_fieldAccIncome`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getFieldOptions = (objID) => {\n         let fields = [\n            {\n               id: 0,\n               value: L(\"Select a Field\"),\n            },\n         ];\n\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object.fields().forEach((f) => {\n                  fields.push({ id: f.id, value: f.label, field: f });\n               });\n            }\n         }\n         return fields;\n      };\n\n      let getStatusFieldOptions = (statusFieldId) => {\n         let result = [];\n         let fpObject = this.AB.objectByID(this.objectFP);\n         if (!fpObject) return result;\n\n         let fpStatusField = fpObject.fieldByID(statusFieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let updateFPFields = (fpFields) => {\n         [ids.fieldFPStart, ids.fieldFPOpen, ids.fieldFPStatus].forEach(\n            (fieldGLElem) => {\n               $$(fieldGLElem).define(\"options\", fpFields);\n               $$(fieldGLElem).refresh();\n            }\n         );\n      };\n\n      let updateFPStatusFields = (fpStatusOptions) => {\n         $$(ids.fieldFPActive).define(\"options\", fpStatusOptions);\n         $$(ids.fieldFPActive).refresh();\n      };\n\n      let updateGLFields = (glFields) => {\n         [\n            ids.fieldGLRunning,\n            ids.fieldGLAccount,\n            ids.fieldGLRc,\n            ids.fieldGLDebit,\n            ids.fieldGLCredit,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", glFields);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateAccFields = (accFields) => {\n         $$(ids.fieldAccType).define(\"options\", accFields);\n         $$(ids.fieldAccType).refresh();\n      };\n\n      let updateAccTypeOptions = (accTypeOptions) => {\n         [\n            ids.fieldAccAsset,\n            ids.fieldAccExpense,\n            ids.fieldAccLiabilities,\n            ids.fieldAccEquity,\n            ids.fieldAccIncome,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", accTypeOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let getListOptions = (objectId, fieldId) => {\n         let result = [];\n         let object = this.AB.objectByID(objectId);\n         if (!object) return result;\n\n         let fpStatusField = object.fieldByID(fieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let fpFields = getFieldOptions(this.objectFP);\n      let glFields = getFieldOptions(this.objectGL);\n      let accFields = getFieldOptions(this.objectAcc);\n      let fpStatusFields = getStatusFieldOptions(this.fieldFPStatus);\n      let accTypeOptions = getListOptions(this.objectAcc, this.fieldAccType);\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 200,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processFPValue,\n               view: \"select\",\n               label: L(\"Process Fiscal Period Value\"),\n               value: this.processFPValue,\n               name: \"processFPValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectFP,\n               view: \"select\",\n               label: L(\"FP Object\"),\n               value: this.objectFP,\n               name: \"objectFP\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        fpFields = getFieldOptions(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFPFields(fpFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectGL,\n               view: \"select\",\n               label: L(\"GL Object\"),\n               value: this.objectGL,\n               name: \"objectGL\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        glFields = getFieldOptions(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateGLFields(glFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectAcc,\n               view: \"select\",\n               label: L(\"Account Object\"),\n               value: this.objectAcc,\n               name: \"objectAcc\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        accFields = getFieldOptions(newVal);\n                        updateAccFields(accFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPStart,\n               view: \"select\",\n               label: L(\"FP -> Start\"),\n               value: this.fieldFPStart,\n               name: \"fieldFPStart\",\n               options: fpFields,\n            },\n            {\n               id: ids.fieldFPOpen,\n               view: \"select\",\n               label: L(\"FP -> Open\"),\n               value: this.fieldFPOpen,\n               name: \"fieldFPOpen\",\n               options: fpFields,\n            },\n            {\n               id: ids.fieldFPStatus,\n               view: \"select\",\n               label: L(\"FP -> Status\"),\n               value: this.fieldFPStatus,\n               name: \"fieldFPStatus\",\n               options: fpFields,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        fpStatusFields = getStatusFieldOptions(newVal);\n                        updateFPStatusFields(fpStatusFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPActive,\n               view: \"select\",\n               label: L(\"FP -> Active\"),\n               value: this.fieldFPActive,\n               name: \"fieldFPActive\",\n               options: fpStatusFields,\n            },\n            {\n               id: ids.fieldGLStarting,\n               view: \"select\",\n               label: L(\"GL -> Starting BL\"),\n               value: this.fieldGLStarting,\n               name: \"fieldGLStarting\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLRunning,\n               view: \"select\",\n               label: L(\"GL -> Running BL\"),\n               value: this.fieldGLRunning,\n               name: \"fieldGLRunning\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLAccount,\n               view: \"select\",\n               label: L(\"GL -> Account\"),\n               value: this.fieldGLAccount,\n               name: \"fieldGLAccount\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLRc,\n               view: \"select\",\n               label: L(\"GL -> RC\"),\n               value: this.fieldGLRc,\n               name: \"fieldGLRc\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLDebit,\n               view: \"select\",\n               label: L(\"GL -> Debit\"),\n               value: this.fieldGLDebit,\n               name: \"fieldGLDebit\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLCredit,\n               view: \"select\",\n               label: L(\"GL -> Credit\"),\n               value: this.fieldGLCredit,\n               name: \"fieldGLCredit\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldAccType,\n               view: \"select\",\n               label: L(\"Acc -> Type\"),\n               value: this.fieldAccType,\n               name: \"fieldAccType\",\n               options: accFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeOptions = getListOptions(\n                           this.objectAcc || $$(ids.objectAcc).getValue(),\n                           newVal\n                        );\n                        updateAccTypeOptions(accTypeOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldAccAsset,\n               view: \"select\",\n               label: L(\"Acc -> Asset\"),\n               value: this.fieldAccAsset,\n               name: \"fieldAccAsset\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccExpense,\n               view: \"select\",\n               label: L(\"Acc -> Expense\"),\n               value: this.fieldAccExpense,\n               name: \"fieldAccExpense\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccLiabilities,\n               view: \"select\",\n               label: L(\"Acc -> Liabilities\"),\n               value: this.fieldAccLiabilities,\n               name: \"fieldAccLiabilities\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccEquity,\n               view: \"select\",\n               label: L(\"Acc -> Equity\"),\n               value: this.fieldAccEquity,\n               name: \"fieldAccEquity\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccIncome,\n               view: \"select\",\n               label: L(\"Acc -> Income\"),\n               value: this.fieldAccIncome,\n               name: \"fieldAccIncome\",\n               options: accTypeOptions,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingFPYearCloseCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingFPYearCloseCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingFPYearClose extends AccountingFPYearCloseCore {\n   ////\n   //// Process Instance Methods\n   ////\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processFPYearValue: `${id}_processFPYearValue`,\n         objectFPYear: `${id}_objectFPYear`,\n         objectFPMonth: `${id}_objectFPMonth`,\n         objectGL: `${id}_objectGL`,\n         objectAccount: `${id}_objectAccount`,\n         valueFundBalances: `${id}_valueFundBalances`,\n         valueNetIncome: `${id}_valueNetIncome`,\n         fieldFPYearStart: `${id}_fieldFPYearStart`,\n         fieldFPYearEnd: `${id}_fieldFPYearEnd`,\n         fieldFPYearStatus: `${id}_fieldFPYearStatus`,\n         fieldFPYearActive: `${id}_fieldFPYearActive`,\n         fieldFPMonthStart: `${id}_fieldFPMonthStart`,\n         fieldFPMonthEnd: `${id}_fieldFPMonthEnd`,\n         fieldGLStartBalance: `${id}_fieldGLStartBalance`,\n         fieldGLRunningBalance: `${id}_fieldGLRunningBalance`,\n         fieldGLrc: `${id}_fieldGLrc`,\n         fieldAccNumber: `${id}_fieldAccNumber`,\n         fieldAccType: `${id}_fieldAccType`,\n         fieldAccTypeIncome: `${id}_fieldAccTypeIncome`,\n         fieldAccTypeExpense: `${id}_fieldAccTypeExpense`,\n         fieldAccTypeEquity: `${id}_fieldAccTypeEquity`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getFieldOptions = (objID, fieldKey) => {\n         let fields = [\n            {\n               id: 0,\n               value: L(\"Select a Field\"),\n            },\n         ];\n\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object\n                  .fields((f) => f.key == fieldKey)\n                  .forEach((f) => {\n                     fields.push({ id: f.id, value: f.label, field: f });\n                  });\n            }\n         }\n         return fields;\n      };\n\n      let getListOptions = (objectId, fieldId) => {\n         let result = [];\n         let object = this.AB.objectByID(objectId);\n         if (!object) return result;\n\n         let fpStatusField = object.fieldByID(fieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let updateAccNumberFields = (accNumberFields) => {\n         $$(ids.fieldAccNumber).define(\"options\", accNumberFields);\n         $$(ids.fieldAccNumber).refresh();\n      };\n\n      let updateAccFields = (accFields) => {\n         $$(ids.fieldAccType).define(\"options\", accFields);\n         $$(ids.fieldAccType).refresh();\n      };\n\n      let updateAccTypeOptions = (accTypeOptions) => {\n         [\n            ids.fieldAccTypeIncome,\n            ids.fieldAccTypeExpense,\n            ids.fieldAccTypeEquity,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", accTypeOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateFPYearDateOptions = (fpYearDateOptions) => {\n         [ids.fieldFPYearStart, ids.fieldFPYearEnd].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", fpYearDateOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateFPYearStatusOptions = (fpYearStatusFields) => {\n         $$(ids.fieldFPYearStatus).define(\"options\", fpYearStatusFields);\n         $$(ids.fieldFPYearStatus).refresh();\n      };\n\n      let updateFPYearActiveOptions = (fpYearStatusOptions) => {\n         $$(ids.fieldFPYearActive).define(\"options\", fpYearStatusOptions);\n         $$(ids.fieldFPYearActive).refresh();\n      };\n\n      let updateFPMonthDateFields = (fpMonthDateOpts) => {\n         [ids.fieldFPMonthStart, ids.fieldFPMonthEnd].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", fpMonthDateOpts);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateGlNumberFields = (glNumberOptions) => {\n         [ids.fieldGLStartBalance, ids.fieldGLRunningBalance].forEach(\n            (fieldGLElem) => {\n               $$(fieldGLElem).define(\"options\", glNumberOptions);\n               $$(fieldGLElem).refresh();\n            }\n         );\n      };\n\n      let updateGlConnectFields = (glRcOptions) => {\n         $$(ids.fieldGLrc).define(\"options\", glRcOptions);\n         $$(ids.fieldGLrc).refresh();\n      };\n\n      let fpYearDateFields = getFieldOptions(this.objectFPYear, \"date\");\n      let fpYearStatusFields = getFieldOptions(this.objectFPYear, \"list\");\n      let fpYearStatusOptions = getListOptions(\n         this.objectFPYear,\n         this.fieldFPYearStatus\n      );\n      let fpMonthDateFields = getFieldOptions(this.objectFPMonth, \"date\");\n      let glNumberFields = getFieldOptions(this.objectGL, \"number\");\n      let glRcFields = getFieldOptions(this.objectGL, \"connectObject\");\n      let accNumberFields = getFieldOptions(this.objectAccount, \"number\");\n      let accTypeFields = getFieldOptions(this.objectAccount, \"list\");\n      let accTypeOptions = getListOptions(\n         this.objectAccount,\n         this.fieldAccType\n      );\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 200,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processFPYearValue,\n               view: \"select\",\n               label: L(\"Process Fiscal Period Year Value\"),\n               value: this.processFPYearValue,\n               name: \"processFPYearValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectFPYear,\n               view: \"select\",\n               label: L(\"FP Year Object\"),\n               value: this.objectFPYear,\n               name: \"objectFPYear\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpYearDateFields = getFieldOptions(newVal, \"date\");\n                        updateFPYearDateOptions(fpYearDateFields);\n\n                        accTypeFields = getFieldOptions(newVal, \"list\");\n                        updateFPYearStatusOptions(accTypeFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectFPMonth,\n               view: \"select\",\n               label: L(\"FP Month Object\"),\n               value: this.objectFPMonth,\n               name: \"objectFPMonth\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpMonthDateFields = getFieldOptions(newVal, \"date\");\n                        updateFPMonthDateFields(fpMonthDateFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectGL,\n               view: \"select\",\n               label: L(\"Balance Object\"),\n               value: this.objectGL,\n               name: \"objectGL\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        glNumberFields = getFieldOptions(newVal, \"number\");\n                        updateGlNumberFields(glNumberFields);\n\n                        glRcFields = getFieldOptions(newVal, \"connectObject\");\n                        updateGlConnectFields(glRcFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectAccount,\n               view: \"select\",\n               label: L(\"Account Object\"),\n               value: this.objectAccount,\n               name: \"objectAccount\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeFields = getFieldOptions(newVal, \"list\");\n                        updateAccFields(accTypeFields);\n\n                        accNumberFields = getFieldOptions(newVal, \"number\");\n                        updateAccNumberFields(accNumberFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.valueFundBalances,\n               view: \"text\",\n               label: L(\"Fund Balances Code\"),\n               value: this.valueFundBalances,\n               name: \"valueFundBalances\",\n            },\n            {\n               id: ids.valueNetIncome,\n               view: \"text\",\n               label: L(\"Net Income Code\"),\n               value: this.valueNetIncome,\n               name: \"valueNetIncome\",\n            },\n            {\n               id: ids.fieldFPYearStart,\n               view: \"select\",\n               label: L(\"FP Year -> Start\"),\n               value: this.fieldFPYearStart,\n               name: \"fieldFPYearStart\",\n               options: fpYearDateFields,\n            },\n            {\n               id: ids.fieldFPYearEnd,\n               view: \"select\",\n               label: L(\"FP Year -> End\"),\n               value: this.fieldFPYearEnd,\n               name: \"fieldFPYearEnd\",\n               options: fpYearDateFields,\n            },\n            {\n               id: ids.fieldFPYearStatus,\n               view: \"select\",\n               label: L(\"FP Year -> Status\"),\n               value: this.fieldFPYearStatus,\n               name: \"fieldFPYearStatus\",\n               options: fpYearStatusFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpYearStatusOptions = getListOptions(\n                           this.objectFPYear || $$(ids.objectFPYear).getValue(),\n                           newVal\n                        );\n                        updateFPYearActiveOptions(fpYearStatusOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPYearActive,\n               view: \"select\",\n               label: L(\"FP Year -> Active\"),\n               value: this.fieldFPYearActive,\n               name: \"fieldFPYearActive\",\n               options: fpYearStatusOptions,\n            },\n            {\n               id: ids.fieldFPMonthStart,\n               view: \"select\",\n               label: L(\"FP Month -> Start\"),\n               value: this.fieldFPMonthStart,\n               name: \"fieldFPMonthStart\",\n               options: fpMonthDateFields,\n            },\n            {\n               id: ids.fieldFPMonthEnd,\n               view: \"select\",\n               label: L(\"FP Month -> End\"),\n               value: this.fieldFPMonthEnd,\n               name: \"fieldFPMonthEnd\",\n               options: fpMonthDateFields,\n            },\n            {\n               id: ids.fieldGLStartBalance,\n               view: \"select\",\n               label: L(\"GL -> Start Balance\"),\n               value: this.fieldGLStartBalance,\n               name: \"fieldGLStartBalance\",\n               options: glNumberFields,\n            },\n            {\n               id: ids.fieldGLRunningBalance,\n               view: \"select\",\n               label: L(\"GL -> Running Balance\"),\n               value: this.fieldGLRunningBalance,\n               name: \"fieldGLRunningBalance\",\n               options: glNumberFields,\n            },\n            {\n               id: ids.fieldGLrc,\n               view: \"select\",\n               label: L(\"GL -> RC\"),\n               value: this.fieldGLrc,\n               name: \"fieldGLrc\",\n               options: glRcFields,\n            },\n            {\n               id: ids.fieldAccNumber,\n               view: \"select\",\n               label: L(\"Acc -> Account Number\"),\n               value: this.fieldAccNumber,\n               name: \"fieldAccNumber\",\n               options: accNumberFields,\n            },\n            {\n               id: ids.fieldAccType,\n               view: \"select\",\n               label: L(\"Acc -> Type\"),\n               value: this.fieldAccType,\n               name: \"fieldAccType\",\n               options: accTypeFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeOptions = getListOptions(\n                           this.objectAccount ||\n                              $$(ids.objectAccount).getValue(),\n                           newVal\n                        );\n                        updateAccTypeOptions(accTypeOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldAccTypeIncome,\n               view: \"select\",\n               label: L(\"Acc -> Income\"),\n               value: this.fieldAccTypeIncome,\n               name: \"fieldAccTypeIncome\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccTypeExpense,\n               view: \"select\",\n               label: L(\"Acc -> Expense\"),\n               value: this.fieldAccTypeExpense,\n               name: \"fieldAccTypeExpense\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccTypeEquity,\n               view: \"select\",\n               label: L(\"Acc -> Equity\"),\n               value: this.fieldAccTypeEquity,\n               name: \"fieldAccTypeEquity\",\n               options: accTypeOptions,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingJEArchiveCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingJEArchiveCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingJEArchive extends AccountingJEArchiveCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processBatchValue: `${id}_processBatchValue`,\n         objectBatch: `${id}_objectBatch`,\n         objectBalance: `${id}_objectBalance`,\n         objectJE: `${id}_objectJE`,\n         objectJEArchive: `${id}_objectJEArchive`,\n\n         fieldBatchFiscalMonth: `${id}_fieldBatchFiscalMonth`,\n         fieldJeAccount: `${id}_fieldJeAccount`,\n         fieldJeRC: `${id}_fieldJeRC`,\n         fieldJeArchiveBalance: `${id}_fieldJeArchiveBalance`,\n         fieldBrFiscalMonth: `${id}_fieldBrFiscalMonth`,\n         fieldBrAccount: `${id}_fieldBrAccount`,\n         fieldBrRC: `${id}_fieldBrRC`,\n\n         fieldsMatch: `${id}_fieldsMatch`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      let ids = this.propertyIDs(id);\n\n      let processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      let processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      let objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getConnectFieldOptions = (objectId) => {\n         let object = this.AB.objectByID(objectId);\n         if (!object) return [];\n\n         let options = object\n            .fields((f) => f.isConnection)\n            .map((f) => {\n               return {\n                  id: f.id,\n                  value: f.label,\n               };\n            });\n\n         options.unshift({\n            id: 0,\n            value: L(\"Select a Field\"),\n         });\n\n         return options;\n      };\n\n      let updateFields = (fieldPickers, fieldValues) => {\n         fieldPickers.forEach((fp) => {\n            var picker = $$(fp);\n            if (picker) {\n               picker.define(\"options\", fieldValues);\n               picker.refresh();\n               picker.show();\n            }\n         });\n      };\n\n      let refreshBatchFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldBatchFiscalMonth], options);\n      };\n\n      let refreshBRFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields(\n            [ids.fieldBrAccount, ids.fieldBrFiscalMonth, ids.fieldBrRC],\n            options\n         );\n      };\n\n      let refreshJeFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldJeAccount, ids.fieldJeRC], options);\n      };\n\n      let refreshJeArchiveFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldJeArchiveBalance], options);\n      };\n\n      let refreshFieldsMatch = () => {\n         let $fieldsMatch = $$(ids.fieldsMatch);\n         if (!$fieldsMatch) return;\n\n         // clear form\n         webix.ui([], $fieldsMatch);\n\n         let JEObj = this.AB.objectByID(this.objectJE);\n         if (!JEObj) return;\n\n         let JEArchiveObj = this.AB.objectByID(this.objectJEArchive);\n         if (!JEArchiveObj) return;\n\n         // create JE acrhive field options to the form\n         JEArchiveObj.fields().forEach((f) => {\n            let jeFields = [];\n\n            if (f.isConnection) {\n               jeFields = JEObj.fields((fJe) => {\n                  return (\n                     fJe.isConnection &&\n                     fJe.settings &&\n                     f.settings &&\n                     fJe.settings.linkObject == f.settings.linkObject &&\n                     fJe.settings.linkType == f.settings.linkType &&\n                     fJe.settings.linkViaType == f.settings.linkViaType &&\n                     fJe.settings.isCustomFK == f.settings.isCustomFK\n                  );\n               });\n            } else {\n               jeFields = JEObj.fields((fJe) => fJe.key == f.key);\n            }\n\n            jeFields = jeFields.map((fJe) => {\n               return {\n                  id: fJe.id,\n                  value: fJe.label,\n               };\n            });\n\n            $fieldsMatch.addView({\n               view: \"select\",\n               name: f.id,\n               label: f.label,\n               options: jeFields,\n            });\n         });\n\n         $fieldsMatch.setValues(this.fieldsMatch || {});\n      };\n\n      let fieldBatchList = getConnectFieldOptions(this.objectBatch);\n      let fieldBalanceList = getConnectFieldOptions(this.objectBalance);\n      let fieldJeList = getConnectFieldOptions(this.objectJE);\n      let fieldJeArchiveList = getConnectFieldOptions(this.objectJEArchive);\n\n      let ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 180,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processBatchValue,\n               view: \"select\",\n               label: L(\"Process Batch Value\"),\n               value: this.processBatchValue,\n               name: \"processBatchValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectBatch,\n               view: \"select\",\n               label: L(\"Batch Object\"),\n               value: this.objectBatch,\n               name: \"objectBatch\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectBatch = newVal;\n                     refreshBatchFields(newVal);\n                  },\n               },\n            },\n            {\n               id: ids.fieldBatchFiscalMonth,\n               view: \"select\",\n               label: L(\"Batch -> Fiscal Month\"),\n               value: this.fieldBatchFiscalMonth,\n               name: \"fieldBatchFiscalMonth\",\n               options: fieldBatchList,\n            },\n            {\n               id: ids.objectBalance,\n               view: \"select\",\n               label: L(\"BR Object\"),\n               value: this.objectBalance,\n               name: \"objectBalance\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectBalance = newVal;\n                     refreshBRFields(newVal);\n                  },\n               },\n            },\n            {\n               id: ids.fieldBrFiscalMonth,\n               view: \"select\",\n               label: L(\"BR -> Fiscal Month\"),\n               value: this.fieldBrFiscalMonth,\n               name: \"fieldBrFiscalMonth\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.fieldBrAccount,\n               view: \"select\",\n               label: L(\"BR -> Account\"),\n               value: this.fieldBrAccount,\n               name: \"fieldBrAccount\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.fieldBrRC,\n               view: \"select\",\n               label: L(\"BR -> RC\"),\n               value: this.fieldBrRC,\n               name: \"fieldBrRC\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.objectJE,\n               view: \"select\",\n               label: L(\"JE Object\"),\n               value: this.objectJE,\n               name: \"objectJE\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectJE = newVal;\n                     refreshJeFields(newVal);\n                     refreshFieldsMatch();\n                  },\n               },\n            },\n            {\n               id: ids.fieldJeAccount,\n               view: \"select\",\n               label: L(\"JE -> Account\"),\n               value: this.fieldJeAccount,\n               name: \"fieldJeAccount\",\n               options: fieldJeList,\n            },\n            {\n               id: ids.fieldJeRC,\n               view: \"select\",\n               label: L(\"JE -> RC\"),\n               value: this.fieldJeRC,\n               name: \"fieldJeRC\",\n               options: fieldJeList,\n            },\n            {\n               id: ids.objectJEArchive,\n               view: \"select\",\n               label: L(\"JE Archive Object\"),\n               value: this.objectJEArchive,\n               name: \"objectJEArchive\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectJEArchive = newVal;\n                     refreshJeArchiveFields(newVal);\n                     refreshFieldsMatch();\n                  },\n               },\n            },\n            {\n               id: ids.fieldJeArchiveBalance,\n               view: \"select\",\n               label: L(\"JE Archive -> BR\"),\n               value: this.fieldJeArchiveBalance,\n               name: \"fieldJeArchiveBalance\",\n               options: fieldJeArchiveList,\n            },\n            {\n               view: \"fieldset\",\n               label: \"Fields Matching\",\n               body: {\n                  id: ids.fieldsMatch,\n                  view: \"form\",\n                  borderless: true,\n                  elements: [],\n               },\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n\n      refreshFieldsMatch();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      let ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         if (s === \"fieldsMatch\") {\n            this[s] = $$(ids.fieldsMatch).getValues();\n         } else {\n            this[s] = this.property(ids[s]);\n         }\n      });\n   }\n};\n","const CalculateTaskCore = require(\"../../../core/process/tasks/ABProcessTaskServiceCalculateCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class CalculateTask extends CalculateTaskCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.formulaText) {\n         this.warningMessage(\"is missing a formula.\");\n      }\n\n      if (this.formulaText) {\n         const hash = {};\n         (this.process.processDataFields(this) || []).forEach((item) => {\n            hash[`{${item.label}}`] = item;\n         });\n\n         let exp = new RegExp(`{[^}]*}`, \"g\");\n         let entries = this.formulaText.match(exp) || [];\n         entries.forEach((entry) => {\n            if (!hash[entry]) {\n               this.warningMessage(\n                  `could not resolve process value [${entry}]`\n               );\n            }\n         });\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskServiceGetResetPasswordUrlCore = require(\"../../../core/process/tasks/ABProcessTaskServiceGetResetPasswordUrlCore.js\");\n\nmodule.exports = class ABProcessTaskServiceGetResetPasswordUrl extends (\n   ABProcessTaskServiceGetResetPasswordUrlCore\n) {\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.email) {\n         this.warningMessage(\"is missing the email address.\");\n      }\n\n      const processData = (this.process.processDataFields(this) ?? [])\n         .filter((item) => item.field?.key == \"email\")\n         .map((item) => {\n            return {\n               id: item.key,\n               value: item.label,\n            };\n         });\n\n      if (processData.length == 0) {\n         this.warningMessage(\"has no previous tasks exporting email fields.\");\n      }\n   }\n};\n","const InsertRecordTaskCore = require(\"../../../core/process/tasks/ABProcessTaskServiceInsertRecordCore.js\");\n\nmodule.exports = class InsertRecordTask extends InsertRecordTaskCore {\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.objectID) {\n         this.warningMessage(\"has no Object set.\");\n      }\n\n      const fv = Object.keys(this.fieldValues || {}) || [];\n      if (fv.length == 0) {\n         this.warningMessage(\"has no fields set\");\n      } else {\n         let isSet = false;\n         fv.forEach((f) => {\n            if (\n               this.fieldValues[f]?.set != \"0\" &&\n               this.fieldValues[f]?.value != null\n            ) {\n               isSet = true;\n            }\n         });\n         if (!isSet) {\n            this.warningMessage(\"has no fields set\");\n         }\n      }\n   }\n};\n","const ABProcessTaskServiceQueryCore = require(\"../../../core/process/tasks/ABProcessTaskServiceQueryCore.js\");\n\nconst ABQLManager = require(\"../../ql/ABQLManager.js\");\n\nmodule.exports = class ABProcessTaskServiceQuery extends (\n   ABProcessTaskServiceQueryCore\n) {\n   constructor(attributes, process, AB) {\n      super(attributes, process, AB);\n\n      this.attributes = attributes;\n   }\n\n   ABQLManager() {\n      return ABQLManager;\n   }\n\n   warnings() {\n      // first get all our embedded QL Command warnings\n      let qlWarnings = [];\n      if (this.qlObj) {\n         qlWarnings = qlWarnings.concat(this.qlObj.warnings());\n      }\n      // run the QL Warnings through our .warningMessage() to get a message\n      // that includes this task's name:\n      qlWarnings.forEach((w) => {\n         if (w?.message) this.warningMessage(w.message);\n      });\n      let myWarnings = super.warnings();\n      return myWarnings.filter((w) => w); // filter out any undefined.\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (this.qlObj) {\n         this.qlObj.warningsEval();\n      } else {\n         this.warningMessage(`has no Query defined.`);\n      }\n\n      if (!this.name) {\n         this.warningMessage(\"does not have a name.\", {\n            attributes: this.attributes,\n         });\n      }\n\n      let hasSave = false;\n      let curr = this.qlObj;\n      while (curr) {\n         if (curr.key === \"row_save\" || curr.key === \"set_save\") {\n            hasSave = true;\n            curr = null; // just stop here.\n         } else {\n            curr = curr.next;\n         }\n      }\n\n      if (!hasSave) {\n         this.warningMessage(\"requires at least one Save operation.\");\n      }\n   }\n};\n","const SubProcessCore = require(\"../../../core/process/tasks/ABProcessTaskSubProcessCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class SubProcess extends SubProcessCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   /*\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         isEnable: `${id}_isEnable`,\n         parameterId: `${id}_parameterId`,\n      };\n   }\n\n   /**\n    * @method propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    * /\n   propertiesShow(id) {\n      let ids = this.propertyIDs(id);\n\n      // Pull query tasks option list\n      let parameterOptions = (this.process.processDataFields(this) || []).map(\n         (item) => {\n            return {\n               id: item.key,\n               value: item.label,\n            };\n         }\n      );\n\n      let ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 120,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.isEnable,\n               view: \"switch\",\n               label: L(\"Enable\"),\n               value: this.isEnable,\n            },\n            {\n               id: ids.parameterId,\n               view: \"richselect\",\n               label: L(\"Repeat for\"),\n               options: parameterOptions,\n               value: this.parameterId,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * @method propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    * /\n   propertiesStash(id) {\n      let ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n      this.isEnable = this.property(ids.isEnable);\n      this.parameterId = this.property(ids.parameterId);\n   }\n   */\n\n   /**\n    * @method diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties(bpmnModeler) {\n      let props = super.diagramProperties();\n      props = props || [{}];\n      props[0].def = props[0].def || {};\n\n      if (this.parameterId != null) {\n         props[0].def = props[0].def || {};\n         props[0].def.loopCharacteristics = bpmnModeler\n            .get(\"moddle\")\n            .create(\"bpmn:MultiInstanceLoopCharacteristics\");\n         props[0].def.loopCharacteristics.isSequential = true;\n      }\n\n      return props;\n   }\n\n   /**\n    * @method onChange()\n    * update the current Task with information that was relevant\n    * from the provided BPMN:Element\n    * @param {BPMNElement}\n    */\n   onChange(defElement) {\n      let loopCharacteristics =\n         defElement.loopCharacteristics ||\n         defElement.businessObject.loopCharacteristics ||\n         {};\n\n      switch (loopCharacteristics.$type) {\n         case \"bpmn:MultiInstanceLoopCharacteristics\":\n            this.loopType = loopCharacteristics.isSequential\n               ? \"sequential\"\n               : \"parallel\";\n            break;\n         case \"bpmn:StandardLoopCharacteristics\":\n            this.loopType = \"looping\";\n            break;\n      }\n   }\n\n   /**\n    * @method destroy()\n    * destroy this sub process and inside tasks\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // reuse .destroy function of ABProcess\n      // to clear tasks within this sub process\n      return this.process.destroy.call(this);\n   }\n\n   /**\n    * @method save()\n    * persist this sub process\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   save() {\n      // reuse .save function of ABProcess\n      // to update tasks within this sub process\n      return this.process.save.call(this);\n   }\n\n   /**\n    * @method elementNewForModelDefinition()\n    * create a new process element defined by the given BPMN:Element\n    *\n    * the BPMN:Element definition comes from the BPMN Modeler when a new\n    * diagram element is created.\n    *\n    * @param {BPMN:Element} element\n    *        the BPMN modeler diagram element definition\n    * @return {ABProcessParticipant|ABProcessLane|ABProcessElement}\n    *\n    */\n   elementNewForModelDefinition(element) {\n      let task = this.AB.processElementNewForModelDefinition(element, this);\n\n      // Add a new task to this sub process\n      if (task) {\n         this.elementAdd(task);\n      }\n      return task;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this._unknownElementIDs || []).forEach((eID) => {\n         this.warningMessage(\n            `is referencing an unknown process element id[${eID}]`,\n            { process: this.id, eID }\n         );\n      });\n   }\n};\n","const ABProcessTaskUserCore = require(\"../../../core/process/tasks/ABProcessTaskUserCore.js\");\n\nmodule.exports = class ABProcessTaskUser extends ABProcessTaskUserCore {};\n","const ABProcessTaskUserApprovalCore = require(\"../../../core/process/tasks/ABProcessTaskUserApprovalCore.js\");\n\nmodule.exports = class ABProcessTaskUserApproval extends (\n   ABProcessTaskUserApprovalCore\n) {};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskUserExternalCore = require(\"../../../core/process/tasks/ABProcessTaskUserExternalCore.js\");\n\nmodule.exports = class ABProcessTaskUserExternal extends (\n   ABProcessTaskUserExternalCore\n) {};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTriggerCore = require(\"../../../core/process/tasks/ABProcessTriggerCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessTrigger extends ABProcessTriggerCore {};\n","const ABProcessTriggerLifecycleCore = require(\"../../../core/process/tasks/ABProcessTriggerLifecycleCore.js\");\n\nmodule.exports = class ABProcessTriggerLifecycle extends (\n   ABProcessTriggerLifecycleCore\n) {};\n","const ABProcessTriggerTimerCore = require(\"../../../core/process/tasks/ABProcessTriggerTimerCore.js\");\n\nconst START_URL = \"/process/timer/#id#/start\";\nconst STOP_URL = \"/process/timer/#id#/stop\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessTriggerTimer extends ABProcessTriggerTimerCore {\n   /**\n    * @method save()\n    * persist this instance of ABObject with it's parent ABApplication\n    * @return {Promise}\n    */\n   save() {\n      return (\n         Promise.resolve()\n            .then(() => super.save())\n            // Restart the timer\n            .then((result) => {\n               return this.AB.Network.put({\n                  url: (this.isEnabled ? START_URL : STOP_URL).replace(\n                     \"#id#\",\n                     this.id\n                  ),\n               });\n            })\n      );\n   }\n};\n","/*\n * ABQL\n *\n * An ABQL defines the base class for our AB Query Language Objects.\n * These classes share a common way to\n *   - parse input strings for commands\n *\n *\n */\nconst ABQLCore = require(\"../../core/ql/ABQLCore.js\");\nconst RowUpdater = require(\"../RowUpdater.js\").default;\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nclass ABQL extends ABQLCore {\n   constructor(attributes, parameterDefinitions, prevOP, task, AB) {\n      super(attributes, parameterDefinitions, prevOP, task, AB);\n\n      this.on(\"warning\", (message, data) => {\n         this._warnings.push({ message, data });\n      });\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      // const allColumns = row.getChildViews();\n      // allColumns.shift(); // remove selector\n      this.parameterDefinitions.forEach((pDef) => {\n         // const col = allColumns.shift();\n         const myID = this.uiID(id);\n\n         this.ids = this.toIDs(myID);\n         this.params = this.params ?? {};\n\n         let $uiCondition = null;\n\n         switch (pDef.type) {\n            case \"objectFields\":\n               this.params[pDef.name] = $$(this.ids.objectfields).getValue();\n\n               break;\n\n            case \"objectName\":\n               this.params[pDef.name] = $$(this.ids.objectname).getValue();\n\n               break;\n\n            case \"objectConditions\":\n            case \"objectValues\":\n               $uiCondition = $$(this.ids.condition);\n\n               if ($uiCondition) {\n                  const condition = $uiCondition.getValue();\n\n                  if (condition && condition !== \"\") {\n                     this.params[pDef.name] = JSON.parse(condition);\n                  }\n               }\n\n               break;\n\n            case \"taskParam\":\n               this.params[pDef.name] = $$(this.ids.taskparam).getValue();\n\n               break;\n         }\n      });\n   }\n\n   /*\n    * @method toIDs()\n    * generate a set of unique webix ids to use for our UI.\n    * @param {string} myID\n    *        the unique id generated by .uiID()\n    */\n   toIDs(myID) {\n      return {\n         condition: `${myID}_condition`,\n         objectfields: `${myID}_objectfields`,\n         objectname: `${myID}_objname`,\n         popup: `${myID}_popup`,\n         select: `${myID}_select`,\n         shorthand: `${myID}_shorthand`,\n         taskparam: `${myID}_taskparam`,\n         spacer: `${myID}_spacer`,\n      };\n   }\n\n   /**\n    * @method uiAddParamForDef()\n    * Add an operation parameter for each parameterDefinition we have defined.\n    * @param {obj} pDef\n    *        the current parameterDefinition entry we are creating the UI\n    *        for.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddParamForDef(pDef, id, ui) {\n      // params are added to a .col[] definition.\n      // if our ui isn't down to the current .col element, then drill down\n      if (!ui.cols) {\n         if (ui.rows) {\n            for (let i = 0; i < ui.rows.length; i++)\n               if (ui.rows[i].cols) {\n                  this.uiAddParamForDef(pDef, id, ui.rows[i]);\n\n                  break;\n               }\n         } else throw new Error(\"provided ui is not able to add a parameter!\");\n\n         return;\n      }\n\n      const paramUI = this.uiParamUI(pDef, id);\n\n      if (paramUI) {\n         // if we only have 1 param\n         if (this.parameterDefinitions.length === 1) {\n            ui.cols.pop();\n            ui.cols.push(paramUI);\n         }\n         // if we haven't already added a parameter\n         else {\n            // create a row stack of parameters:\n            if (ui.cols.length < 3)\n               ui.cols.push({\n                  rows: [paramUI],\n               });\n            // add to the current stack of parameters\n            else ui.cols[2].rows.push(paramUI);\n         }\n      }\n   }\n\n   /**\n    * @method uiAddNext()\n    * Add the next row selector for this operation:\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddNext(id, ui) {\n      const uiRow = this.uiNextRow(id);\n\n      // if we have a next operation defined, then add on the ui definitions\n      // for that operation:\n      if (this.next) {\n         this.next.uiAddParams(id, uiRow);\n         ui.rows.push(uiRow);\n         this.next.uiAddNext(id, ui);\n      }\n      // otherwise we just leave the selector:\n      else ui.rows.push(uiRow);\n   }\n\n   /**\n    * @method uiAddParams()\n    * Add operation parameter(s) for each parameterDefinition we have defined.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddParams(id, ui) {\n      this.parameterDefinitions.forEach((pDef) => {\n         this.uiAddParamForDef(pDef, id, ui);\n      });\n   }\n\n   /*\n    * @method uiID()\n    * generate a unique webix id for this operation.\n    * @param {string} id\n    *        the webix id of the base property.query holder\n    */\n   uiID(id) {\n      if (this.prevOP) return `${this.prevOP.uiID(id)}_${this.constructor.key}`;\n\n      return `${id}_${this.constructor.key}`;\n   }\n\n   /*\n    * uiXXX Operations:\n    * are UI building operations that are performed BEFORE the webix UI\n    * is generated.  They work by filling out a {ui} object definition\n    * that webix will eventually create into the DOM.\n    *\n    * viewXXX Operations:\n    * are UI building operations that are performed AFTER the webix UI\n    * is generated. They work by adding in child views to an existing\n    * DOM.\n    */\n\n   /**\n    * @method uiNextRow()\n    * return the webix UI definition for the next of UI chaining.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @return {obj}\n    */\n   uiNextRow(id) {\n      const options = this.constructor.NextQLOps.map((op) => {\n         return { id: op.key, value: op.label };\n      });\n\n      options.unshift({ id: 0, value: L(\"choose next operation\") });\n\n      const myID = this.uiID(id);\n      const ids = this.toIDs(myID);\n\n      const uiRow = {\n         cols: [\n            {\n               id: ids.select,\n               view: \"select\",\n               value: this.next ? this.next.constructor.key : 0,\n               options: options,\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     const resetValue = () => {\n                        const select = $$(ids.select);\n\n                        select.blockEvent();\n                        select.setValue(oldValue);\n                        select.unblockEvent();\n                     };\n\n                     if (newValue === oldValue) return;\n\n                     const newOP = this.constructor.NextQLOps.find(\n                        (op) => op.key === newValue\n                     );\n\n                     if (!newOP) {\n                        resetValue();\n\n                        return;\n                     }\n\n                     const thisRow = $$(ids.select).getParentView();\n                     const thisQuery = thisRow.getParentView();\n                     const addOP = () => {\n                        if (newOP) {\n                           const nextOP = new newOP(\n                              {},\n                              this,\n                              this.task,\n                              this.AB\n                           );\n\n                           this.next = nextOP;\n\n                           nextOP.viewAddParams(id, thisRow);\n                           nextOP.viewAddNext(id, thisQuery);\n                        }\n                     };\n\n                     // if there are rows after this one, then warn\n                     // about changing\n                     const allRows = thisQuery.getChildViews();\n\n                     if (allRows.length - 1 > allRows.indexOf(thisRow))\n                        webix.confirm({\n                           title: L(\"continue?\"),\n                           text: L(\n                              \"changing this rule will reset any following rules.\"\n                           ),\n                           ok: L(\"Yes\"),\n                           cancel: L(\"No\"),\n                           callback: (result) => {\n                              if (result) {\n                                 // remove the current additional Rows:\n                                 let ir = allRows.length - 1;\n\n                                 while (\n                                    allRows[ir].config.id !== thisRow.config.id\n                                 ) {\n                                    thisQuery.removeView(allRows[ir]);\n                                    ir--;\n                                 }\n\n                                 // now remove the parameters\n                                 const allCols = thisRow.getChildViews();\n\n                                 let ic = allCols.length;\n\n                                 while (ic > 1) {\n                                    thisRow.removeView(allCols[ic - 1]);\n                                    ic--;\n                                 }\n\n                                 addOP();\n                              } else resetValue();\n                           },\n                        });\n                     else addOP();\n                  },\n               },\n            },\n            {\n               id: ids.spacer,\n            },\n         ],\n      };\n\n      return uiRow;\n   }\n\n   uiNextRowSelectorRefresh(id) {\n      const $select = $$(this.ids.select);\n\n      if (!$select) return;\n\n      const uiNextRow = this.uiNextRow(id);\n\n      const uiNextCol =\n         uiNextRow.cols.filter((c) => c.id == $select.config.id)[0] ??\n         uiNextRow.cols[1];\n\n      if (uiNextCol) AB.Webix.ui(uiNextCol, $select);\n   }\n\n   /**\n    * @method uiParamUI()\n    * return the webix UI definition for the parameter entry of this current\n    * operation.\n    * @param {obj} pDef\n    *        the current parameterDefinition entry we are creating the UI\n    *        for.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @return {obj}\n    */\n   uiParamUI(pDef, id) {\n      const uiConfig = AB.Config.uiSettings();\n\n      let myID = this.uiID(id);\n\n      this.ids = this.toIDs(myID);\n\n      let paramUI = null;\n      let options = null;\n      let Filter = null;\n      let hashFieldIDs = null;\n      let initialCond = null;\n      let displayLabel = null;\n      let initialValue = null;\n      let Updater = null;\n      let popUp = null;\n\n      // now add the parameter\n      switch (pDef.type) {\n         case \"objectFields\":\n            // an objectFields parameter returns a select list of fields\n            // available on an Object.\n            if (this.object)\n               options = this.object.fields().map((f) => {\n                  return { id: f.id, value: f.label, icon: `fa fa-${f.icon}` };\n               });\n\n            options.unshift({\n               id: \"_PK\",\n               value: \"[PK]\",\n            });\n\n            // if not set, default .fieldID to the 1st entry in options\n            // so we will have a default.  In use, if a user sees the\n            // 1st item and continues on, then we will have chosen it.\n            if (!this.fieldID && options.length > 0) {\n               // act like it was selected:\n               this.params[pDef.name] = options[0].id;\n               this.paramChanged(pDef, id);\n            }\n\n            paramUI = {\n               id: this.ids.objectfields,\n               view: \"richselect\",\n               label: L(\"Field\"),\n               labelWidth: 70,\n               value: this.fieldID,\n               options: options,\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     // this.params = this.params ?? {};\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef, id);\n                     }\n                  },\n               },\n            };\n\n            break;\n\n         case \"objectName\":\n            // an objectName parameter returns a select list of available\n            // objects in this ABFactory.\n            options = this.AB.objects().map((o) => {\n               return { id: o.id, value: o.label };\n            });\n\n            if (!this.objectID && options.length > 0) {\n               this.objectID = options[0].id;\n               this.params[pDef.name] = this.objectID;\n               this.paramChanged(pDef);\n            }\n\n            paramUI = {\n               id: this.ids.objectname,\n               view: \"select\",\n               label: L(\"Data Source\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               value: this.objectID,\n               options: options,\n               on: {\n                  onChange: (newValue /*, oldValue */) => {\n                     this.params = this.params ?? {};\n\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef);\n                     }\n                  },\n               },\n            };\n\n            break;\n\n         case \"objectConditions\":\n            // objectConditions: returns a filter text summary, that when\n            // clicked, pops up a Filter Entry Popup.\n            // the actual value is stored in a hidden field.\n\n            // we will create a new FilterComplex() object to use for our\n            // filtering.\n            // Our goal is to create a special filter entry for each avaiable\n            // process data value that is available.\n            // A filter entry needs to look like:\n            // {\n            //     id: `{string}`,      // A unique id selector for this filter\n            //     name: `{string}`,    // the operation name displayed\n            //     type, {obj}          // an object defining the editor to show\n            //     fn: ()=>{}           // a function used for filtering elements\n            // }\n            //\n            // In our filters, we are assigning filters to EACH field by the\n            // field.id.  So the type definition needs to look like:\n            // {\n            //     \"uniqueID of the field (field.id)\" : {webixUI definition}\n            // }\n\n            Filter = this.AB.filterComplexNew(id);\n            hashFieldIDs = this.availableProcessDataFieldsHash();\n\n            if (this.object) {\n               Filter.fieldsLoad(this.object.fields(), this.object);\n               // NOTE: this will create default filters based upon the\n               // object fields() and their types\n\n               // Now we need to add in the Process Data Fields:\n               // for each Process Data Field that matches our same object\n               const foundFields = Object.keys(hashFieldIDs).map(\n                  (f) => hashFieldIDs[f]\n               );\n\n               Filter.processFieldsLoad(foundFields);\n               /*\n               (foundFields ?? []).forEach((processField) => {\n                  const type = {};\n                  if (processField.field) {\n                     type[processField.field.id] = {\n                        view: \"select\",\n                        options: [\n                           {\n                              id: \"empty\",\n                              value: \"choose option\"\n                           },\n                           {\n                              id: processField.key,\n                              value: `context(${processField.label})`\n                           }\n                        ]\n                     };\n                  } else {\n                     // if there is no .field, it is probably an embedded special field\n                     // like: .uuid\n                     const key = processField.key.split(\".\").pop();\n                     type[key] = {\n                        view: \"select\",\n                        options: [\n                           {\n                              id: \"empty\",\n                              value: \"choose option\"\n                           },\n                           {\n                              id: processField.key,\n                              value: `context(${processField.label})`\n                           }\n                        ]\n                     };\n                  }\n\n                  // add an \"equals\" and \"not equals\" filter for each:\n                  Filter.filterAdd([\n                     {\n                        id: `context_equals`,\n                        name: `equals`,\n                        type,\n                        fn: (a, b) => {\n                           return a === b;\n                        }\n                     },\n                     {\n                        id: `context_not_equal`,\n                        name: `not equals`,\n                        type,\n                        fn: (a, b) => {\n                           return a !== b;\n                        }\n                     }\n                  ]);\n                  \n               }); */\n            }\n\n            // every time the Filter \"saves\" it's data, it emits this event:\n            // take the given condition and store it in our hidden element.\n            Filter.on(\"save\", (condition) => {\n               // @param {obj} condition an object describing the filter\n               // condition.\n\n               this.params = this.params ?? {};\n               this.params[pDef.name] = condition;\n\n               const shortHand = $$(this.ids.shorthand);\n\n               shortHand.define({\n                  label: Filter.toShortHand(),\n               });\n               shortHand.refresh();\n\n               // NOTE: the hidden element is a text field, so convert the\n               // {condition object} => a string\n               const elCondition = $$(this.ids.condition);\n\n               elCondition.define({\n                  value: JSON.stringify(this.params[pDef.name]),\n               });\n               elCondition.refresh();\n            });\n\n            // create the initial condition value from our inputs.\n            initialCond = \"\";\n\n            if (this.params && this.params[pDef.name]) {\n               Filter.setValue(this.params[pDef.name]);\n               initialCond = JSON.stringify(this.params[pDef.name]);\n            }\n\n            // what we show on the panel, is a text representation\n            // of the current condition.\n            displayLabel = Filter.toShortHand();\n\n            paramUI = {\n               rows: [\n                  {\n                     id: this.ids.shorthand,\n                     view: \"button\",\n                     label: displayLabel,\n                     on: {\n                        onItemClick: () => {\n                           Filter.popUp($$(this.ids.shorthand), null, {\n                              pos: \"center\",\n                           });\n                        },\n                     },\n                  },\n                  // have a hidden field to contain the condition\n                  // value we will parse out later\n                  {\n                     id: this.ids.condition,\n                     view: \"text\",\n                     value: initialCond,\n                     hidden: true,\n                  },\n               ],\n            };\n\n            break;\n\n         case \"objectValues\":\n            // objectValues : shows a condenced textual representation of the\n            // field => value changes.  Clicking on the text will show a popup\n            // that allows you to add/remove additional field updates for\n            // the current object.\n\n            initialValue = \"\";\n            Updater = new RowUpdater(myID, this.AB);\n\n            if (this.object) Updater.objectLoad(this.object);\n\n            // Set processed data key to value options\n            Updater.setExtendedOptions(\n               (this.task.process.processDataFields(this.task) ?? []).map(\n                  (item) => {\n                     return {\n                        id: item.key,\n                        value: item.label,\n                     };\n                  }\n               )\n            );\n\n            // NOTE: .setValue() must be called once the RowUpdater is already\n            // displayed.  See the end of popUp() below:\n            if (this.params && this.params[pDef.name]) {\n               Updater.setValue(this.params[pDef.name]);\n               initialValue = JSON.stringify(this.params[pDef.name]);\n            }\n\n            popUp = () => {\n               // show the RowUpdater in a popup:\n               const ui = {\n                  id: this.ids.popup,\n                  view: \"popup\",\n                  position: \"center\",\n                  minWidth: 700,\n                  modal: true,\n                  resize: true,\n                  body: {\n                     rows: [\n                        {\n                           height: 30,\n                           borderless: true,\n                           cols: [\n                              { fillspace: true },\n                              {\n                                 view: \"button\",\n                                 value: \"X\",\n                                 width: 30,\n                                 click: () => {\n                                    $$(this.ids.popup).hide();\n                                 },\n                              },\n                           ],\n                        },\n                        Updater.ui(),\n                        {\n                           view: \"button\",\n                           value: L(\"Save\"),\n                           css: \"webix_primary\",\n                           click: () => {\n                              this.params = this.params ?? {};\n                              this.params[pDef.name] = Updater.getValue();\n                              const sh = $$(this.ids.shorthand);\n\n                              sh.define({\n                                 badge: this.params[pDef.name].length,\n                              });\n                              sh.refresh();\n\n                              const cond = $$(this.ids.condition);\n\n                              cond.define({\n                                 value: JSON.stringify(this.params[pDef.name]),\n                              });\n                              cond.refresh();\n\n                              $$(this.ids.popup).hide();\n                           },\n                        },\n                     ],\n                  },\n               };\n\n               // create and show the popup\n               this._myPopup = webix.ui(ui);\n               this._myPopup.show();\n\n               // NOTE: on a RowUpdater, the values need to be set\n               // AFTER it is displayed:\n               if (this.params && this.params[pDef.name])\n                  Updater.setValue(this.params[pDef.name]);\n            };\n\n            paramUI = {\n               rows: [\n                  // the textual shorthand for these values\n                  {\n                     id: this.ids.shorthand,\n                     view: \"button\",\n                     label: L(\"Update Popout\"),\n                     badge: this.params[pDef.name]?.length,\n                     on: {\n                        onItemClick: () => {\n                           popUp();\n                        },\n                     },\n                  },\n                  // the hidden field that contains the results\n                  {\n                     id: this.ids.condition,\n                     view: \"text\",\n                     value: initialValue,\n                     hidden: true,\n                  },\n               ],\n            };\n\n            break;\n\n         case \"taskParam\":\n            paramUI = {\n               id: this.ids.taskparam,\n               view: \"text\",\n               label: L(\"Variable\"),\n               labelWidth: 70,\n               value: this.params[pDef.name],\n               placeholder: L(\"Enter parameter name\"),\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     // this.params = this.params ?? {};\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef, id);\n                     }\n                  },\n               },\n            };\n\n            break;\n      }\n\n      return paramUI;\n   }\n\n   /**\n    * @method viewAddNext()\n    * Add the next selector row After this Operation:\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {webixNode} topView\n    *        the current webix node that needs this view added to\n    *        NOTE: this should be the top container that is adding a new\n    *        row for each operation.\n    */\n   viewAddNext(id, topView) {\n      const uiRow = this.uiNextRow(id);\n\n      topView.addView(uiRow);\n   }\n\n   /**\n    * @method viewAddParams()\n    * Add operation parameter(s) for each parameterDefinition we have defined.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {webixNode} rowView\n    *        the current webix node that needs this view added to\n    *        NOTE: this should be the ROW that the parameters are added to\n    */\n   viewAddParams(id, rowView) {\n      const params = [];\n\n      this.parameterDefinitions.forEach((pDef) => {\n         // get the definition from .uiParamUI()\n         params.push(this.uiParamUI(pDef, id));\n      });\n\n      let toInsert = null;\n\n      // stack parameters in a row if there are more than 1\n      if (params.length > 1)\n         toInsert = {\n            rows: params,\n         };\n      else toInsert = params.pop();\n\n      if (toInsert) {\n         rowView.removeView(rowView.getChildViews()[1]);\n         rowView.addView(toInsert);\n      }\n   }\n\n   warnings() {\n      let myWarnings = this._warnings || [];\n      if (this.next)\n         myWarnings = myWarnings.concat(this.next.warnings()).filter((w) => w);\n      return this.AB.uniq(myWarnings);\n   }\n\n   warningsEval() {\n      this._warnings = [];\n      if (this.next) this.next.warningsEval();\n   }\n\n   // warningsAll() {\n   //    let myWarnings = this.warnings();\n   //    if (this.next) {\n   //       myWarnings = myWarnings.concat(this.next.warningsAll());\n   //    }\n   //    return myWarnings;\n   // }\n\n   /**\n    * @method warningMessage(message)\n    * Save a warning message in a common format for our ProcessTasks.\n    */\n   warningMessage(message) {\n      // this.emit(\"warning\", `${this.key}: ${message}`);\n      this._warnings = this._warnings || [];\n      this._warnings.push({ message: `${this.key}: ${message}` });\n   }\n\n   ////\n   //// QueryString Parser routines:\n   ////\n}\n\nmodule.exports = ABQL;\n","/*\n * ABQLFind\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\nconst ABQLFindCore = require(\"../../core/ql/ABQLFindCore.js\");\n\nclass ABQLFind extends ABQLFindCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, ParameterDefinitions, prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLFind;\n","/*\n * ABQLManager\n *\n * An interface for managing the different ABQL Operations available in our\n * AppBuilder.\n *\n */\n\nconst ABQLManagerCore = require(\"../../core/ql/ABQLManagerCore.js\");\nconst ABQLRootObject = require(\"./ABQLRootObject.js\");\n\nconst ABQLManager = {\n   /**\n    * @method fromAttributes()\n    * return an {ABQL} object that represents the given attributes that\n    * were saved from the previous .toObj()\n    * @param {object} attributes\n    *\t\t  the values returned from the previous .toObj() call\n    * @param {ABProcessTask***} task\n    *\t\t  the current ABProcessTaskServiceQuery that contains this QL\n    * @param {ABFactory} AB\n    *\t\t  the current {ABFactory} active for this interface.\n    * @return {ABQL} | null\n    */\n   fromAttributes: ABQLManagerCore.fromAttributes,\n\n   /**\n    * @method ids()\n    * return a set of unique webix ids for the ui portions of this object.\n    * @param {string} id\n    *\t\t  the webix base id of the parameters panel.\n    * @return {object}\n    */\n   ids: (id) => {\n      return {\n         root: `${id}_root`,\n         select: `${id}_root_select`,\n         options: `${id}_root_options`,\n      };\n   },\n\n   /**\n    * @method builder\n    * return a UI component like object that will display the QL builder.\n    * The component will support:\n    *\t\t.ui(id) : returns a webix ui definition for the current builder\n    *\t\t.init(id) : performs any special actions to prepare the webix ui\n    * @param {object} rootOP\n    *\t\t  the root ABQLxxxx operation\n    * @param {ABProcessTask***} task\n    *\t\t  the current Process Task that is requesting the data.\n    * @param {ABFactory} AB\n    *\t\t  the {ABFactory} active for this display.\n    * @return {object}\n    */\n   builder: (rootOP, task, AB) => {\n      // const rootOP = this.fromAttributes(attributes, task, AB);\n      // const L = (...params) => AB.Multilingual.label(...params);\n\n      return {\n         ui: (id) => {\n            rootOP = rootOP ?? new ABQLRootObject({}, task, AB);\n\n            const ids = ABQLManager.ids(id);\n            const ui = {\n               rows: [\n                  {\n                     id: ids.root,\n                     cols: [],\n                  },\n               ],\n            };\n\n            rootOP.uiAddParams(id, ui);\n            rootOP.uiAddNext(id, ui);\n\n            return ui;\n         },\n         init: (id) => {},\n      };\n   },\n\n   /**\n    * @method parse\n    * step through the current properties panel and decode the QL objects\n    * and their parameters.\n    * Return the .toOBJ() attributes definition as a result.\n    * @param {string} id\n    *\t\t  the webix base id of the parameters panel.\n    * @param {ABProcessTask***} task\n    *\t\t  the current Process Task that is requesting the data.\n    * @param {ABFactory} AB\n    *\t\t  the {ABFactory} object that is currently active.\n    * @return {object}\n    */\n   parse: (id, task, AB) => {\n      const ids = ABQLManager.ids(id);\n      const root = $$(ids.root);\n\n      if (!root) {\n         console.warn(\"ABQLManager.parse(): unable to find root element\");\n\n         return;\n      }\n\n      // get all the input rows\n      const rows = root.getParentView().getChildViews();\n\n      const parseCurrent = (rows, options, prevOP) => {\n         if (rows.length === 0) return null;\n\n         const row = rows.shift();\n\n         // get which operation was selected\n         // find the operation selector (skip any indents)\n         const views = row.getChildViews();\n\n         let selector = views.shift();\n\n         while (!selector?.getValue) selector = views.shift();\n\n         const value = selector.getValue();\n\n         // figure out the QLOP object\n         const OP = options.find((o) => {\n            return o.key === value || o.key === ABQLRootObject.key;\n         });\n\n         if (OP) {\n            let currOP = null;\n\n            if (prevOP) currOP = new OP({}, prevOP, task, AB);\n            else currOP = new OP({}, task, AB);\n\n            // now get currOP to initialize from it's parameters:\n            currOP.parseRow(row, id);\n\n            // carry forward any .object info if not already established\n            // by the .parseRow():\n            if (!currOP.object && prevOP) {\n               currOP.object = prevOP.object;\n               currOP.objectID = currOP.object?.id ?? null;\n            }\n\n            const nextRow = parseCurrent(\n               rows,\n               currOP.constructor.NextQLOps,\n               currOP\n            );\n\n            currOP.next = nextRow;\n\n            return currOP;\n         }\n\n         return null;\n      };\n\n      const operation = parseCurrent(rows, ABQLManagerCore.QLOps, null);\n\n      return operation;\n   },\n};\n\nmodule.exports = ABQLManager;\n","/*\n * ABQLRootObject\n *\n * An ABQL defines a Query Language Operation. A QL Operation\n * is intended to be evaluated at run time and return a value that can be\n * assigned to form value or an object.\n *\n *\n */\n\nconst ABQLRootObjectCore = require(\"../../core/ql/ABQLRootObjectCore.js\");\n\nclass ABQLObject extends ABQLRootObjectCore {\n   // constructor(attributes, task, application) {\n   //     // NOTE: keep this so we can insert the prevOp === null\n   //     super(attributes, ParameterDefinitions, null, task, application);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"name\") {\n         this.objectID = this.params[pDef.name];\n         this.object = this.objectLookup(this.objectID);\n\n         // ?? is this correct?\n         // if we already have created a .next operation, and we have\n         // just changed our .object, pass that information forward.\n         if (this.next) this.next.object = this.object;\n      }\n   }\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      // for an Object operation, we need to set our .objectID after\n      // the values are parsed.\n\n      if (this.params.name) {\n         this.objectID = this.params.name;\n         this.object = this.objectLookup(this.params.name);\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (!this.object) {\n         this.warningMessage(\"has no object set.\", {\n            objectID: this.objectID,\n         });\n      }\n   }\n}\n\nmodule.exports = ABQLObject;\n","const ABQLRowPluckCore = require(\"../../core/ql/ABQLRowPluckCore.js\");\n\nclass ABQLRowPluck extends ABQLRowPluckCore {\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef, id) {\n      super.paramChanged(pDef);\n\n      // Re-generate next select options\n      if (pDef.name === \"fieldID\") this.uiNextRowSelectorRefresh(id);\n   }\n}\n\nmodule.exports = ABQLRowPluck;\n","/*\n * ABQLRowSave\n *\n * An ABQLRowSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLRowSaveCore = require(\"../../core/ql/ABQLRowSaveCore.js\");\n\nclass ABQLRowSave extends ABQLRowSaveCore {\n   paramChanged(pDef, id) {\n      super.paramChanged(pDef);\n   }\n}\n\nmodule.exports = ABQLRowSave;\n","/*\n * ABQLRowUpdate\n *\n * An ABQLRow Update allows you to update the values on the current\n * Row of data.\n *\n */\n\nconst ABQLRowUpdateCore = require(\"../../core/ql/ABQLRowUpdateCore.js\");\n\nclass ABQLRowUpdate extends ABQLRowUpdateCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, ParameterDefinitions, prevOP, task, application);\n   //     // #Hack! : when an Operation provides the same .NextQlOps that it\n   //     // was defined in, we can't require it again ==> circular dependency.\n   //     // so we manually set it here from the operation that created us:\n   //     this.constructor.NextQLOps = prevOP.constructor.NextQLOps;\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLRowUpdate;\n","/*\n * ABQLSetFirst\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQLSetFirstCore = require(\"../../core/ql/ABQLSetFirstCore.js\");\n\nclass ABQLSetFirst extends ABQLSetFirstCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLSetFirst;\n","/*\n * ABQLSetPluck\n *\n * An ABQLSetPluck can process a set (array) of data and pluck out a specified\n * field from each row to then make an array of values that only contain that \n * field.\n * \n * Example: \narray = [\n {\n\tname: \"Neo\",\n\temail: \"neo@thematrix.com\",\n\trelationships: [ { morpheous}, {trinity} ]\n },\n {\n\tname: \"trinity\",\n\temail: \"trinity@thematrix.com\",\n\trelationships: [ {neo}, {morpheous} ]\n },\n {\n\tname: \"morpheous\",\n\temail: \"morpheous@thematrix.com\",\n\trelationships: [ {neo}, {trinity}]\n }\n\n]\n\npluck(\"email\") :\n\t[\n\t\t\"neo@thematrix.com\",\n\t\t\"trinity@thematrix.com\",\n\t\t\"morpheous@thematrix.com\"\n\t]\n\npluck(\"relationships\"):\n\t[\n\t\t{neo},\n\t\t{trinity},\n\t\t{morpheous}\n\t]\n *\n */\n\nconst ABQLSetPluckCore = require(\"../../core/ql/ABQLSetPluckCore.js\");\n\nclass ABQLSetPluck extends ABQLSetPluckCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"fieldID\") {\n         // debugger;\n         this.fieldID = this.params[pDef.name];\n         // v2 method:\n         // this.field = this.object.fieldByID(this.fieldID);\n         this.field = this.object.fieldByID(this.fieldID);\n\n         // v2 method:\n         // if (this.field && this.field.isConnected) {\n         if (this.field && this.field.key === \"connectObject\") {\n            this.objectOut = this.field.datasourceLink;\n            this.objectOutID = this.objectOut.id;\n\n            // ?? is this correct?\n            // if we already have created a .next operation, and we have\n            // just changed our .object, pass that information forward.\n            if (this.next) this.next.object = this.objectOut;\n         }\n      }\n   }\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * NOTE: in this process our .object and .objectOut isn't as simple\n    * as the other QL node types.  We'll have to interpolate our values\n    * from the given fieldID in our property panel.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      this.fieldID = this.params.fieldID;\n\n      // we now have to build backwards from the current fieldID to set our\n      // relevant .object and .objectOut\n      this.AB.objects((o) => {\n         if (!this.field) {\n            // const field = o.fieldByID(this.fieldID);\n            const field = o.fieldByID(this.fieldID);\n\n            if (field) this.field = field;\n         }\n      });\n\n      if (this.field) {\n         this.object = this.field.object;\n\n         // v2 method:\n         // if (this.field.isConnected) {\n         if (this.field && this.field.key === \"connectObject\") {\n            this.objectOut = this.field.datasourceLink;\n            this.objectOutID = this.objectOut.id;\n         }\n      }\n   }\n}\n\nmodule.exports = ABQLSetPluck;\n","/*\n * ABQLSetSave\n *\n * An ABQLSetSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLSetSaveCore = require(\"../../core/ql/ABQLSetSaveCore.js\");\n\nclass ABQLSetSave extends ABQLSetSaveCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"task_param\") {\n         this.taskParam = this.params[pDef.name];\n      }\n   }\n\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      this.taskParam = this.params[\"task_param\"];\n\n      if (!this.registered) {\n         this.task.registerDatasource(this);\n         this.registered = true;\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (!this.taskParam || this.taskParam === \"\") {\n         this.warningMessage(\"requires a name to save our data as.\");\n      }\n   }\n}\n\nmodule.exports = ABQLSetSave;\n","const ABViewCore = require(\"../../core/views/ABViewCore.js\");\nconst ABViewComponent = require(\"./viewComponent/ABViewComponent\").default;\n\nmodule.exports = class ABView extends ABViewCore {\n   // constructor(attributes, application, parent) {\n   //    super(attributes, application, parent);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewComponent(this);\n   }\n\n   /*\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      // views not allowed to drop onto this View:\n      var viewsToIgnore = [\n         \"view\",\n         \"page\",\n         \"formpanel\",\n         \"viewcontainer\",\n         // not allowed Detail's widgets\n         \"detailcheckbox\",\n         \"detailcustom\",\n         \"detailconnect\",\n         \"detailimage\",\n         \"detailselectivity\",\n         \"detailtext\",\n         \"detailtree\",\n         // not allowed Form's widgets\n         \"button\",\n         \"checkbox\",\n         \"connect\",\n         \"datepicker\",\n         \"fieldcustom\",\n         \"textbox\",\n         \"numberbox\",\n         \"selectsingle\",\n         \"selectmultiple\",\n         \"formtree\",\n         \"fieldreadonly\",\n         // not allowed Chart's Widgets\n         \"pie\",\n         \"bar\",\n         \"line\",\n         \"area\",\n         // not allowed Report page\n         \"report\",\n         \"reportPage\",\n         \"reportPanel\",\n      ];\n\n      var allComponents = this.application.viewAll(); // ABViewManager.allViews();\n      var allowedComponents = allComponents.filter((c) => {\n         return viewsToIgnore.indexOf(c.common().key) == -1;\n      });\n\n      return allowedComponents;\n   }\n\n   changePage(pageId) {\n      this.emit(\"changePage\", pageId);\n   }\n\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = super.warningsAll();\n      this.views().forEach((v) => {\n         allWarnings = allWarnings.concat(v.warningsAll());\n      });\n\n      (this.pages?.() || []).forEach((p) => {\n         allWarnings = allWarnings.concat(p.warningsAll());\n      });\n\n      return allWarnings.filter((w) => w);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      (this.__missingViews || []).forEach((id) => {\n         this.warningsMessage(`references unknown View[${id}]`);\n      });\n\n      allViews.forEach((v) => {\n         v.warningsEval();\n      });\n\n      // if a datacollection is specified, verify it can be accessed.\n      if (this.settings.dataviewID) {\n         let dc = this.datacollections || this.datacollection;\n         if (!dc) {\n            this.warningsMessage(\n               `references unknown dataviewID[${this.settings.dataviewID}]`\n            );\n         }\n      }\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `${this.key}[${this.name}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABViewCSVExporterCore = require(\"../../core/views/ABViewCSVExporterCore\");\nconst ABViewCSVExporterComponent = require(\"./viewComponent/ABViewCSVExporterComponent\");\n\nmodule.exports = class ABViewCSVExporter extends ABViewCSVExporterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewCSVExporterComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewCSVImporterCore = require(\"../../core/views/ABViewCSVImporterCore\");\nconst ABViewCSVImporterComponent = require(\"./viewComponent/ABViewCSVImporterComponent\");\n\nmodule.exports = class ABViewCSVImporter extends ABViewCSVImporterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component(idBase) {\n      return new ABViewCSVImporterComponent(this, idBase);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (!this.settings.availableFieldIds?.length) {\n         this.warningsMessage(\"has no fields set for matching import data\");\n      }\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewCarouselComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewCarousel_${baseView.id}`,\n         Object.assign(\n            {\n               carousel: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_doOnShow = () => {\n         this.onShow();\n      };\n\n      this._handler_doReload = () => {\n         // this.datacollection?.reloadData();\n      };\n\n      this._handler_doFilter = (fnFilter, filterRules) => {\n         // NOTE: fnFilter is depreciated and will be removed.\n\n         // this.onShow(filterRules);\n         const dv = this.datacollection;\n\n         if (!dv) return;\n\n         dv.filterCondition(filterRules);\n         dv.reloadData();\n      };\n\n      this._handler_busy = () => {\n         this.busy();\n      };\n\n      this._handler_ready = () => {\n         this.ready();\n      };\n   }\n\n   ui() {\n      const ids = this.ids;\n\n      const baseView = this.view;\n\n      this.filterUI = baseView.filterHelper; // component(/* App, idBase */);\n      this.linkPage = baseView.linkPageHelper.component(/* App, idBase */);\n\n      const spacer = {};\n      const settings = this.settings;\n\n      if (settings.width === 0)\n         Object.assign(spacer, {\n            width: 1,\n         });\n\n      const _ui = super.ui([\n         {\n            borderless: true,\n            cols: [\n               spacer, // spacer\n               {\n                  borderless: true,\n                  rows: [\n                     this.filterUI.ui(), // filter UI\n                     {\n                        id: ids.carousel,\n                        view: \"carousel\",\n                        cols: [],\n                        width: settings.width,\n                        height: settings.height,\n                        navigation: {\n                           items: !settings.hideItem,\n                           buttons: !settings.hideButton,\n                           type: settings.navigationType,\n                        },\n                        on: {\n                           onShow: () => {\n                              const activeIndex = $$(\n                                 ids.carousel\n                              ).getActiveIndex();\n\n                              this.switchImage(activeIndex);\n                           },\n                        },\n                     },\n                  ],\n               },\n               spacer, // spacer\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // make sure each of our child views get .init() called\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) {\n         AB.notify.builder(`Datacollection is ${dv}`, {\n            message: \"This is an invalid datacollection\",\n         });\n\n         return;\n      }\n\n      const object = dv.datasource;\n\n      if (!object) {\n         AB.notify.developer(`Object is ${dv}`, {\n            message: \"This is an invalid object\",\n         });\n\n         return;\n      }\n\n      dv.removeListener(\"loadData\", this._handler_doOnShow);\n      dv.on(\"loadData\", this._handler_doOnShow);\n\n      dv.removeListener(\"update\", this._handler_doReload);\n      dv.on(\"update\", this._handler_doReload);\n\n      dv.removeListener(\"delete\", this._handler_doReload);\n      dv.on(\"delete\", this._handler_doReload);\n\n      dv.removeListener(\"create\", this._handler_doReload);\n      dv.on(\"create\", this._handler_doReload);\n\n      dv.removeListener(\"initializingData\", this._handler_busy);\n      dv.on(\"initializingData\", this._handler_busy);\n\n      dv.removeListener(\"initializedData\", this._handler_ready);\n      dv.on(\"initializedData\", this._handler_ready);\n\n      if (this.settings.filterByCursor) {\n         dv.removeListener(\"changeCursor\", this._handler_doOnShow);\n         dv.on(\"changeCursor\", this._handler_doOnShow);\n      }\n\n      const baseView = this.view;\n\n      // filter helper\n      baseView.filterHelper.objectLoad(object);\n      baseView.filterHelper.viewLoad(this);\n\n      this.filterUI.init(this.AB);\n      this.filterUI.removeListener(\"filter.data\", this._handler_doFilter);\n      this.filterUI.on(\"filter.data\", this._handler_doFilter);\n\n      // link page helper\n      this.linkPage.init({\n         view: baseView,\n         datacollection: dv,\n      });\n\n      // set data-cy\n      const $carouselView = $$(this.ids.carousel)?.$view;\n\n      if ($carouselView) {\n         $carouselView.setAttribute(\n            \"data-cy\",\n            `${baseView.key} ${baseView.id}`\n         );\n         $carouselView\n            .querySelector(\".webix_nav_button_prev\")\n            ?.firstElementChild?.setAttribute(\n               \"data-cy\",\n               `${baseView.key} button previous ${baseView.id}`\n            );\n         $carouselView\n            .querySelector(\".webix_nav_button_next\")\n            ?.firstElementChild?.setAttribute(\n               \"data-cy\",\n               `${baseView.key} button next ${baseView.id}`\n            );\n      }\n   }\n\n   /**\n    * @method detatch()\n    * Will make sure all our handlers are removed from any object\n    * we have attached them to.\n    *\n    * You'll want to call this in situations when we are dynamically\n    * creating and recreating instances of the same Widget (like in\n    * the ABDesigner).\n    */\n   detatch() {\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      dv.removeListener(\"loadData\", this._handler_doOnShow);\n\n      if (this._handler_doReload) {\n         dv.removeListener(\"update\", this._handler_doReload);\n         dv.removeListener(\"delete\", this._handler_doReload);\n         dv.removeListener(\"create\", this._handler_doReload);\n      }\n\n      dv.removeListener(\"initializingData\", this._handler_busy);\n\n      dv.removeListener(\"initializedData\", this._handler_ready);\n\n      if (this.settings.filterByCursor)\n         dv.removeListener(\"changeCursor\", this._handler_doOnShow);\n\n      this.filterUI.removeListener(\"filter.data\", this._handler_doOnShow);\n   }\n\n   myTemplate(row) {\n      if (row?.src) {\n         const settings = this.settings;\n\n         return [\n            `<div class=\"ab-carousel-image-container\">`,\n            `<img src=\"${row.src}\" class=\"content\" ondragstart=\"return false\" />`,\n            settings.showLabel\n               ? `<div class=\"ab-carousel-image-title\">${row.label || \"\"}</div>`\n               : \"\",\n            `<div class=\"ab-carousel-image-icon\">`,\n            settings.detailsPage || settings.detailsTab\n               ? `<span ab-row-id=\"${row.id}\" class=\"ab-carousel-detail webix_icon fa fa-eye\"></span>`\n               : \"\",\n            settings.editPage || settings.editTab\n               ? `<span ab-row-id=\"${row.id}\" class=\"ab-carousel-edit webix_icon fa fa-pencil\"></span>`\n               : \"\",\n            `<span class=\"webix_icon ab-carousel-fullscreen fa fa-arrows-alt\"></span>`,\n            `<span style=\"display: none;\" class=\"webix_icon ab-carousel-exit-fullscreen fa fa-times\"></span>`,\n            `</div>`,\n            `</div>`,\n         ].join(\"\");\n      }\n      // empty image\n      else return \"\";\n   }\n\n   busy() {\n      const $carousel = $$(this.ids.carousel);\n\n      $carousel?.disable();\n      $carousel?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      const $carousel = $$(this.ids.carousel);\n\n      $carousel?.enable();\n      $carousel?.hideProgress?.();\n   }\n\n   async switchImage(currentPosition) {\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      // Check want to load more images\n      if (\n         currentPosition >= this._imageCount - 1 && // check last image\n         dv.totalCount > this._rowCount\n      ) {\n         // loading cursor\n         this.busy();\n\n         try {\n            await dv.loadData(this._rowCount || 0);\n         } catch (err) {\n            this.AB.notify.developer(err, {\n               message:\n                  \"ABViewCarousel:switchImage():Error when load data from a Data collection\",\n            });\n         }\n\n         this.ready();\n      }\n   }\n\n   onShow(fnFilter = this.filterUI.getFilter()) {\n      const ids = this.ids;\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const obj = dv.datasource;\n\n      if (!obj) return;\n\n      const field = this.view.imageField;\n\n      if (!field) return;\n\n      if (dv.dataStatus == dv.dataStatusFlag.notInitial) {\n         // load data when a widget is showing\n         dv.loadData();\n\n         // it will call .onShow again after dc loads completely\n         return;\n      }\n\n      const settings = this.settings;\n\n      let rows = dv.getData(fnFilter);\n\n      // Filter images by cursor\n      if (settings.filterByCursor) {\n         const cursor = dv.getCursor();\n\n         if (cursor)\n            rows = rows.filter(\n               (r) =>\n                  (r[obj.PK()] || r.id || r) ===\n                  (cursor[obj.PK()] || cursor.id || cursor)\n            );\n      }\n\n      const images = [];\n\n      rows.forEach((r) => {\n         const imgFile = r[field.columnName];\n\n         if (imgFile) {\n            const imgData = {\n               id: r.id,\n               src: `/file/${imgFile}`,\n            };\n\n            // label of row data\n            if (settings.showLabel) imgData.label = obj.displayData(r);\n\n            images.push({\n               css: \"image\",\n               borderless: true,\n               template: (...params) => {\n                  return this.myTemplate(...params);\n               },\n               data: imgData,\n            });\n         }\n      });\n\n      const ab = this.AB;\n\n      // insert the default image to first item\n      if (field.settings.defaultImageUrl)\n         images.unshift({\n            css: \"image\",\n            template: (...params) => this.myTemplate(...params),\n            data: {\n               id: ab.uuid(),\n               src: `/file/${field.settings.defaultImageUrl}`,\n               label: this.label(\"Default image\"),\n            },\n         });\n\n      // empty image\n      if (images.length < 1)\n         images.push({\n            rows: [\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  height: settings.height,\n                  label: \"<div style='display: block; font-size: 180px; background-color: #666; color: transparent; text-shadow: 0px 1px 1px rgba(255,255,255,0.5); -webkit-background-clip: text; -moz-background-clip: text; background-clip: text;' class='fa fa-picture-o'></div>\",\n               },\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  label: this.label(\"No image\"),\n               },\n            ],\n         });\n\n      // store total of rows\n      this._rowCount = rows.length;\n\n      // store total of images\n      this._imageCount = images.length;\n\n      const $carousel = $$(ids.carousel);\n      const abWebix = ab.Webix;\n\n      if ($carousel) {\n         // re-render\n         abWebix.ui(images, $carousel);\n\n         // add loading cursor\n         abWebix.extend($carousel, abWebix.ProgressBar);\n\n         // link pages events\n         const editPage = settings.editPage;\n         const detailsPage = settings.detailsPage;\n\n         // if (detailsPage || editPage) {\n         $carousel.$view.onclick = (e) => {\n            if (e.target.className) {\n               if (e.target.className.indexOf(\"ab-carousel-edit\") > -1) {\n                  abWebix.html.removeCss($carousel.getNode(), \"fullscreen\");\n                  abWebix.fullscreen.exit();\n                  let rowId = e.target.getAttribute(\"ab-row-id\");\n                  this.linkPage.changePage(editPage, rowId);\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-detail\") > -1\n               ) {\n                  abWebix.html.removeCss($carousel.getNode(), \"fullscreen\");\n                  abWebix.fullscreen.exit();\n                  let rowId = e.target.getAttribute(\"ab-row-id\");\n                  this.linkPage.changePage(detailsPage, rowId);\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-fullscreen\") > -1\n               ) {\n                  $carousel.define(\"css\", \"fullscreen\");\n                  abWebix.fullscreen.set(ids.carousel, {\n                     head: {\n                        view: \"toolbar\",\n                        css: \"webix_dark\",\n                        elements: [\n                           {},\n                           {\n                              view: \"icon\",\n                              icon: \"fa fa-times\",\n                              click: function () {\n                                 abWebix.html.removeCss(\n                                    $carousel.getNode(),\n                                    \"fullscreen\"\n                                 );\n                                 abWebix.fullscreen.exit();\n                              },\n                           },\n                        ],\n                     },\n                  });\n               }\n            }\n         };\n      }\n   }\n\n   showFilterPopup($view) {\n      this.filterUI.showPopup($view);\n   }\n}\n","const ABViewCarouselCore = require(\"../../core/views/ABViewCarouselCore\");\nimport ABViewCarouselComponent from \"./viewComponent/ABViewCarouselComponent\";\n\n// const ABViewPropertyFilterData = require(\"./viewProperties/ABViewPropertyFilterData\");\n// const ABViewPropertyLinkPage = require(\"./viewProperties/ABViewPropertyLinkPage\");\n\nimport ABViewPropertyFilterData from \"./viewProperties/ABViewPropertyFilterData\";\nimport ABViewPropertyLinkPage from \"./viewProperties/ABViewPropertyLinkPage\";\n\nlet PopupCarouselFilterMenu = null;\n\nexport default class ABViewCarousel extends ABViewCarouselCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // filter property\n      this.filterHelper.fromSettings(this.settings.filter);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      var dv = this.datacollection;\n      if (dv) {\n         this.filterHelper.objectLoad(dv.datasource);\n         this.filterHelper.fromSettings(this.settings.filter);\n      }\n\n      return new ABViewCarouselComponent(this);\n   }\n\n   get idBase() {\n      return `ABViewCarousel_${this.id}`;\n   }\n\n   get filterHelper() {\n      if (this.__filterHelper == null)\n         this.__filterHelper = new ABViewPropertyFilterData(\n            this.AB,\n            this.idBase\n         );\n\n      return this.__filterHelper;\n   }\n\n   get linkPageHelper() {\n      if (this.__linkPageHelper == null)\n         this.__linkPageHelper = new ABViewPropertyLinkPage();\n\n      return this.__linkPageHelper;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let field = this.imageField;\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve image field[${this.settings.field}]`\n         );\n      }\n   }\n}\n","const ABViewChartCore = require(\"../../core/views/ABViewChartCore\");\nconst ABViewChartComponent = require(\"./viewComponent/ABViewChartComponent\");\n\nmodule.exports = class ABViewChart extends ABViewChartCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartComponent(this);\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n      this.refreshData();\n   }\n\n   getDCChart() {\n      if (!this._dcChart) this._dcChart = new webix.DataCollection();\n\n      return this._dcChart;\n   }\n\n   refreshData() {\n      const dc = this.datacollection;\n      if (dc == null) return this.dcChart;\n\n      const labelCol = this.labelField();\n      const valueCol = this.valueField();\n      const valueCol2 = this.valueField2();\n\n      if (!labelCol || !valueCol) return this.dcChart;\n\n      // const labelColName = labelCol.columnName;\n      const numberColName = valueCol.columnName;\n\n      let numberColName2 = \"\";\n\n      if (this.settings.multipleSeries && valueCol2) {\n         numberColName2 = valueCol2.columnName;\n      }\n\n      const colorList = [\n         \"#ee4339\",\n         \"#ee9336\",\n         \"#eed236\",\n         \"#d3ee36\",\n         \"#a7ee70\",\n         \"#58dccd\",\n         \"#36abee\",\n         \"#476cee\",\n         \"#a244ea\",\n         \"#e33fc7\",\n      ];\n\n      const dInfo = dc.getData();\n\n      let results = [];\n      let sumData = {};\n      let sumNumber = 0;\n      let sumNumber2 = 0;\n      let countNumber = dInfo.length;\n\n      dInfo.forEach((item) => {\n         const labelKey = labelCol.format(item) || item.id;\n\n         let numberVal = parseFloat(item[numberColName] || 0);\n         let numberVal2 = null;\n\n         if (this.settings.multipleSeries)\n            numberVal2 = parseFloat(item[numberColName2]) || 0;\n\n         switch (valueCol.key) {\n            //Formula Datatype\n            case \"formula\":\n               numberVal = valueCol.format(item);\n\n               break;\n\n            //Calcualte Datatype\n            case \"calculate\":\n               numberVal = parseFloat(\n                  valueCol.constructor.convertToJs(\n                     valueCol.object,\n                     valueCol.settings.formula,\n                     item,\n                     valueCol.settings.decimalPlaces\n                  )\n               );\n\n               break;\n\n            default:\n               break;\n         }\n\n         if (sumData[labelKey] == null) {\n            let label = labelKey;\n\n            // Get label of the connect field\n            if (labelCol.isConnection) {\n               let relateValues = labelCol.pullRelationValues(item);\n               if (relateValues != null) {\n                  if (Array.isArray(relateValues))\n                     label = relateValues\n                        .map((val) => val.text || \"\")\n                        .join(\", \");\n                  else label = relateValues.text;\n               }\n            }\n\n            if (this.settings.multipleSeries) {\n               sumData[labelKey] = {\n                  label: label || item.id,\n                  value: 0,\n                  value2: 0,\n               };\n            } else {\n               sumData[labelKey] = {\n                  label: label || item.id,\n                  value: 0,\n               };\n            }\n         }\n\n         sumData[labelKey].value += numberVal;\n         sumNumber += numberVal;\n\n         if (this.settings.multipleSeries) {\n            sumData[labelKey].value2 += numberVal2;\n            sumNumber2 += numberVal2;\n         }\n      });\n\n      let index = 0;\n\n      for (const key in sumData) {\n         let val = sumData[key].value;\n\n         if (val <= 0) continue;\n\n         // Display to percent values\n         if (this.settings.isPercentage) {\n            val = (val / sumNumber) * 100;\n            val = Math.round(val * 100) / 100; // round decimal 2 digits\n            val = val + \" %\";\n         }\n\n         if (this.settings.multipleSeries) {\n            let val2 = sumData[key].value2;\n\n            if (val2 <= 0) continue;\n\n            // Display to percent values\n            if (this.settings.isPercentage) {\n               val2 = (val2 / sumNumber2) * 100;\n               val2 = Math.round(val2 * 100) / 100; // round decimal 2 digits\n               val2 = val2 + \" %\";\n            }\n\n            results.push({\n               label: sumData[key].label,\n               value: val,\n               value2: val2,\n               color: colorList[index % colorList.length],\n               count: countNumber,\n            });\n         } else {\n            results.push({\n               label: sumData[key].label,\n               value: val,\n               color: colorList[index % colorList.length],\n               count: countNumber,\n            });\n         }\n\n         index += 1;\n      }\n\n      const dcChart = this.getDCChart();\n\n      dcChart.clearAll();\n      dcChart.parse(results);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let labelField = this.labelField();\n      if (!labelField) {\n         this.warningsMessage(\n            `can't resolve label field[${this.settings.columnLabel}]`\n         );\n      }\n\n      let valueField = this.valueField();\n      if (!valueField) {\n         this.warningsMessage(\n            `can't resolve value field[${this.settings.columnValue}]`\n         );\n      }\n\n   }\n};\n","const ABViewChartAreaCore = require(\"../../core/views/ABViewChartAreaCore\");\nconst ABViewChartAreaComponent = require(\"./viewComponent/ABViewChartAreaComponent\");\n\nmodule.exports = class ABViewChartArea extends ABViewChartAreaCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartAreaComponent(this);\n   }\n};\n","const ABViewChartBarCore = require(\"../../core/views/ABViewChartBarCore\");\nconst ABViewChartBarComponent = require(\"./viewComponent/ABViewChartBarComponent\");\n\nmodule.exports = class ABViewChartBar extends ABViewChartBarCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartBarComponent(this);\n   }\n};\n","const ABViewWidget = require(\"./ABViewWidget\");\nconst ABViewChartContainerComponent = require(\"./viewComponent/ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartContainer extends ABViewWidget {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartContainerComponent(this);\n   }\n\n   get datacollection() {\n      return this.parent.datacollection;\n   }\n};\n","const ABViewChartLineCore = require(\"../../core/views/ABViewChartLineCore\");\nconst ABViewChartLineComponent = require(\"./viewComponent/ABViewChartLineComponent\");\n\nmodule.exports = class ABViewChartLine extends ABViewChartLineCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartLineComponent(this);\n   }\n};\n","const ABViewChartPieCore = require(\"../../core/views/ABViewChartPieCore\");\nconst ABViewChartPieComponent = require(\"./viewComponent/ABViewChartPieComponent\");\n\nmodule.exports = class ABViewChartPie extends ABViewChartPieCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartPieComponent(this);\n   }\n};\n","const ABViewCommentCore = require(\"../../core/views/ABViewCommentCore\");\nconst ABViewCommentComponent = require(\"./viewComponent/ABViewCommentComponent\");\n\nmodule.exports = class ABViewComment extends ABViewCommentCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewCommentComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let field = this.getUserField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve user field[${this.settings.columnUser}]`\n         );\n      }\n\n      field = this.getCommentField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve comment field[${this.settings.columnComment}]`\n         );\n      }\n\n      field = this.getDateField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve date field[${this.settings.columnDate}]`\n         );\n      }\n   }\n};\n","const ABViewConditionalContainerCore = require(\"../../core/views/ABViewConditionalContainerCore\");\nconst ABViewConditionalContainerComponent = require(\"./viewComponent/ABViewConditionalContainerComponent\");\n\nmodule.exports = class ABViewConditionalContainer extends (\n   ABViewConditionalContainerCore\n) {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewConditionalContainerComponent(this);\n   }\n\n   async save() {\n      const viewIf = this.views().find((v) => v.name === \"If\");\n      const viewElse = this.views().find((v) => v.name === \"Else\");\n      const pendingSave = [];\n\n      if (viewIf) pendingSave.push(viewIf.save());\n\n      if (viewElse) pendingSave.push(viewElse.save());\n\n      await Promise.all(pendingSave);\n\n      await super.save();\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (\n         !this.settings.filterConditions ||\n         this.settings.filterConditions?.rules?.length == 0\n      ) {\n         this.warningsMessage(\"has no filter conditions set\");\n      }\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewConnectDataFilterComponent extends ABViewComponent {\n   constructor(baseView, idbase, ids) {\n      super(\n         baseView,\n         idbase || `ABViewConnectDataFilter_${baseView.id}`,\n         Object.assign(\n            {\n               filter: \"\",\n               reset: \"\",\n            },\n            ids\n         )\n      );\n\n      this.field = null;\n   }\n\n   ui() {\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            type: \"space\",\n            borderless: true,\n            cols: [\n               {\n                  view: \"icon\",\n                  icon: \"fa fa-filter\",\n                  align: \"left\",\n                  disabled: true,\n               },\n               {\n                  view: \"combo\",\n                  id: ids.filter,\n                  labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n                  disabled: true,\n                  on: {\n                     onChange: (id) => this.applyConnectFilter(id),\n                  },\n               },\n               {\n                  view: \"icon\",\n                  id: ids.reset,\n                  icon: \"fa fa-times\",\n                  align: \"left\",\n                  disabled: true,\n                  tooltip: this.label(\"Renmove this filter\"),\n                  on: {\n                     onItemClick: () => this.resetConnectFilter(),\n                  },\n               },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const object = dv.datasource;\n\n      if (!object) return;\n\n      const [field] = object.fields(\n         (f) => f.columnName === this.settings.field\n      );\n\n      if (!field) {\n         this.AB.notify.developer(\n            `Cannot find field \"${this.settings.field}\" in ${object.name}`,\n            {\n               context: \"ABViewConnectDataFilterComponent.init()\",\n               data: { settings: this.settings },\n            }\n         );\n\n         return;\n      }\n\n      this.field = field;\n\n      const ids = this.ids;\n      const suggest = webix.ui({\n         view: \"suggest\",\n         filter: ({ value }, search) =>\n            value.toLowerCase().includes(search.toLowerCase()),\n         on: {\n            onShow: () => {\n               field.populateOptionsDataCy($$(ids.filter), field, {});\n            },\n         },\n      });\n      field.getAndPopulateOptions(suggest, null, field);\n\n      const $filter = $$(ids.filter);\n\n      $filter.define(\"suggest\", suggest);\n      $filter.define(\"label\", `${this.label(\"Filter by\")} ${field.label}`);\n      $filter.enable();\n      $filter.refresh();\n   }\n\n   resetConnectFilter() {\n      const ids = this.ids;\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: [] });\n      dc.reloadData();\n      // Block applyConnectFields() from triggering\n\n      const $filter = $$(ids.filter);\n\n      $filter.blockEvent();\n      $filter.setValue();\n      $filter.unblockEvent();\n      $$(ids.reset).disable();\n   }\n\n   applyConnectFilter(connectId) {\n      const filterRule = {\n         key: this.field.id,\n         rule: \"equals\",\n         value: connectId,\n      };\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: [filterRule] });\n      dc.reloadData();\n      $$(this.ids.reset).enable();\n   }\n}\n","import ABViewConnectDataFilterCore from \"../../core/views/ABViewConnectDataFilterCore\";\nimport ABViewConnectDataFilterComponent from \"./viewComponent/ABViewConnectDataFilterComponent\";\n\nexport default class ABViewConnectDataFilter extends ABViewConnectDataFilterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewConnectDataFilterComponent(this);\n   }\n}\n","const ABViewContainerCore = require(\"../../core/views/ABViewContainerCore\");\nconst ABViewContainerComponent = require(\"./viewComponent/ABViewContainerComponent\");\n\nmodule.exports = class ABViewContainer extends ABViewContainerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewContainerComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no content\");\n      }\n\n      // NOTE: this is done in ABView:\n      // (allViews || []).forEach((v) => {\n      //    v.warningsEval();\n      // });\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\nimport ABPopupSortField from \"../ABViewGridPopupSortFields\";\nimport ABViewCustomFilter from \"../viewProperties/ABViewPropertyFilterData\";\nimport _ from \"lodash\";\n\nexport default class ABViewDataFilterComponent extends ABViewComponent {\n   constructor(baseView, idbase, ids) {\n      super(\n         baseView,\n         idbase || `ABViewDataFilter_${baseView.id}`,\n         Object.assign(\n            {\n               filter: \"\",\n               reset: \"\",\n               sortButton: \"\",\n               filterButton: \"\",\n               globalSearchToolbar: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_filterData = (fnFilter, filterRules) => {\n         this.callbackFilterData(fnFilter, filterRules); // be notified when there is a change in the filter\n      };\n\n      this.field = null;\n      const ab = this.AB;\n\n      // {ABViewGridPopupSortFields}\n      // The popup for adding sort criteria to our grid.\n      this.PopupSortComponent = new ABPopupSortField(\n         `ABViewDataFilter_Sort_Popup_${this.settings.dataviewID}`\n      );\n      this.PopupSortComponent.init(ab);\n      this.PopupSortComponent.on(\"changed\", (sortOptions) => {\n         this.callbackSortData(sortOptions);\n      });\n\n      this.filterHelper = new ABViewCustomFilter(\n         this.AB,\n         `ABViewDataFilter_Filter_Popup_${this.settings.dataviewID}`\n      );\n      this.filterHelper.settings = {\n         filterOption: 1,\n         userFilterPosition: \"toolbar\",\n         isGlobalToolbar: 1,\n      };\n      this.filterHelper.init(ab);\n      this.detatch();\n      this.filterHelper.on(\"filter.data\", this._handler_filterData);\n   }\n\n   advancedUI() {\n      const compId = this.ids.component;\n      return [\n         {\n            css: \"bg_gray\",\n            maxHeight: 60,\n            rows: [\n               {},\n               {\n                  cols: [\n                     {\n                        width: 18,\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-filter\",\n                        width: 40,\n                        id: this.ids.filterButton,\n                        css: `webix_primary abFilterButton${this.settings.dataviewID}`,\n                        click: (id, event) => {\n                           this.toolbarFilter($$(this.ids.filterButton).$view);\n                        },\n                        on: {\n                           onAfterRender: function () {\n                              this.getInputNode().setAttribute(\n                                 \"data-cy\",\n                                 `${compId} filter button`\n                              );\n                           },\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-sort\",\n                        width: 40,\n                        id: this.ids.sortButton,\n                        css: `webix_primary abSortButton${this.settings.dataviewID}`,\n                        click: (id, event) => {\n                           this.openSort($$(this.ids.sortButton).$view);\n                        },\n                        on: {\n                           onAfterRender: function () {\n                              this.getInputNode().setAttribute(\n                                 \"data-cy\",\n                                 `${compId} sort button`\n                              );\n                           },\n                        },\n                     },\n                     {\n                        id: this.ids.globalSearchToolbar,\n                        view: \"search\",\n                        placeholder: this.label(\"Search..\"),\n                        css: `abGlobalSearchField${this.settings.dataviewID}`,\n                        width: 0,\n                        attributes: {\n                           \"data-cy\": `${this.ids.component} global search`,\n                           datacollection: this.settings.dataviewID,\n                        },\n                        on: {\n                           onTimedKeyPress: () => {\n                              const searchText = $$(\n                                 this.ids.globalSearchToolbar\n                              ).getValue();\n                              // store search text in datacollection because\n                              // it is shared amoung the similar filterHelpers\n                              const dc = this.datacollection;\n                              dc.settings.objectWorkspace.searchText =\n                                 searchText;\n\n                              this.filterHelper.externalSearchText(searchText);\n                           },\n                        },\n                     },\n                     {\n                        width: 18,\n                     },\n                  ],\n               },\n               {},\n            ],\n         },\n      ];\n   }\n\n   connectedFieldUI() {\n      return [\n         {\n            css: \"bg_gray\",\n            maxHeight: 60,\n            cols: [\n               {\n                  width: 18,\n               },\n               {\n                  rows: [\n                     {},\n                     {\n                        view: \"abslayout\",\n                        cells: [\n                           {\n                              css: \"bg_gray\",\n                              view: \"combo\",\n                              id: this.ids.filter,\n                              labelWidth: 0,\n                              relative: true,\n                              disabled: true,\n                              on: {\n                                 onChange: (id) => this.applyConnectFilter(id),\n                              },\n                           },\n                           {\n                              view: \"icon\",\n                              id: this.ids.reset,\n                              icon: \"fa fa-times\",\n                              right: 24,\n                              top: 7,\n                              width: 24,\n                              height: 24,\n                              hidden: true,\n                              tooltip: this.label(\"Remove this filter\"),\n                              on: {\n                                 onItemClick: () =>\n                                    $$(this.ids.filter).setValue(),\n                              },\n                           },\n                        ],\n                     },\n                     {},\n                  ],\n               },\n               {\n                  width: 18,\n               },\n            ],\n         },\n      ];\n   }\n\n   ui() {\n      if (this.settings.viewType == \"advanced\") {\n         if (!this?.settings?.dataviewID) return { height: 1 };\n      } else {\n         if (!this?.settings?.dataviewID || !this?.settings?.field)\n            return { height: 1 };\n      }\n\n      const ui =\n         this.settings.viewType == \"advanced\"\n            ? this.advancedUI()\n            : this.connectedFieldUI();\n      const _ui = super.ui(ui);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const object = dv.datasource;\n\n      if (!object) return;\n\n      if (this.settings.viewType == \"advanced\") {\n         if (this.settings.showSort) {\n            this.PopupSortComponent.objectLoad(object);\n            // if there are some preset sorts show them to user\n            this.PopupSortComponent.setSettings(\n               dv?.settings?.objectWorkspace?.sortFields\n            );\n         } else {\n            $$(this.ids.sortButton).hide();\n         }\n         if (this.settings.showFilter) {\n            this.filterHelper.objectLoad(object);\n         } else {\n            $$(this.ids.filterButton).hide();\n         }\n      } else if (this.settings.viewType == \"connected\") {\n         const [field] = object.fields(\n            (f) => f.columnName === this.settings.field\n         );\n\n         if (!field) {\n            this.AB.notify.developer(\n               `Cannot find field \"${this.settings.field}\" in ${object.name}`,\n               {\n                  context: \"ABViewDataFilterComponent.init()\",\n                  data: { settings: this.settings },\n               }\n            );\n\n            return;\n         }\n\n         this.field = field;\n\n         const ids = this.ids;\n         const suggest = webix.ui({\n            view: \"suggest\",\n            filter: ({ value }, search) =>\n               value.toLowerCase().includes(search.toLowerCase()),\n            on: {\n               onShow: () => {\n                  field.populateOptionsDataCy($$(ids.filter), field, {});\n               },\n            },\n            showAllOptions: true,\n         });\n         field.getAndPopulateOptions(suggest, null, field);\n\n         const $filter = $$(ids.filter);\n\n         $filter.define(\"suggest\", suggest);\n         $filter.define(\n            \"placeholder\",\n            `${this.label(\"Filter by\")} ${field.label}`\n         );\n         $filter.enable();\n         $filter.refresh();\n      }\n   }\n\n   onShow() {\n      super.onShow();\n      this.updateUI();\n   }\n\n   applyConnectFilter(connectId) {\n      let filterRule = [];\n      if (connectId) {\n         $$(this.ids.reset).show();\n         filterRule = [\n            {\n               key: this.field.id,\n               rule: \"equals\",\n               value: connectId,\n            },\n         ];\n      } else {\n         $$(this.ids.reset).hide();\n      }\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: filterRule });\n      dc.reloadData();\n   }\n\n   openSort($view) {\n      this.PopupSortComponent.show($view);\n   }\n\n   /**\n    * @method callbackSortData()\n    * Process the provided sort options from our sort ui.\n    * @param {array} sortRules\n    *        Any Sort Rules added by the user.\n    */\n   async callbackSortData(sortRules = []) {\n      const dc = this.datacollection;\n      if (!_.isEqual(dc?.settings?.objectWorkspace?.sortFields, sortRules)) {\n         dc.settings.objectWorkspace.sortFields = sortRules;\n         await this.datacollection.reloadData();\n      }\n      this.updateUI();\n   }\n\n   /**\n    * @method callbackFilterData()\n    * Process the provided filter options from our filterHelper.\n    * @param {fn} fnFilter\n    *        A function that returns true/false for each row of data\n    *        to determine if is should exist.\n    * @param {array} filterRules\n    *        Any Filter Rules added by the user.\n    */\n   callbackFilterData(fnFilter, filterRules = []) {\n      const dc = this.datacollection;\n      if (!_.isEqual(dc?.__filterCond, filterRules)) {\n         dc.filterCondition(filterRules);\n         dc.reloadData();\n         this.updateUI();\n      }\n   }\n\n   toolbarFilter($view) {\n      this.filterHelper.showPopup($view);\n   }\n\n   updateUI() {\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      var filterButtons = document.getElementsByClassName(\n         `abFilterButton${this.settings.dataviewID}`\n      );\n\n      const onlyFilterRules = this.filterHelper.filterRules();\n      let filterBadge =\n         onlyFilterRules?.rules?.length > 0\n            ? onlyFilterRules?.rules?.length\n            : null;\n      for (let b of filterButtons) {\n         $$(b).define(\"badge\", filterBadge);\n         $$(b).refresh();\n      }\n\n      var sortButtons = document.getElementsByClassName(\n         `abSortButton${this.settings.dataviewID}`\n      );\n\n      const onlySortRules = dc.settings.objectWorkspace.sortFields;\n      let sortBadge = onlySortRules?.length > 0 ? onlySortRules?.length : null;\n\n      for (let b of sortButtons) {\n         $$(b).define(\"badge\", sortBadge);\n         $$(b).refresh();\n      }\n\n      var searchFields = document.getElementsByClassName(\n         `abGlobalSearchField${this.settings.dataviewID}`\n      );\n\n      const searchText = dc.settings.objectWorkspace.searchText;\n      if (searchText != null) {\n         for (let s of searchFields) {\n            var activeElement = document.activeElement;\n            if (\n               activeElement?.attributes?.datacollection?.value ==\n                  this.settings.dataviewID &&\n               activeElement == s.getElementsByTagName(\"input\")[0]\n            ) {\n               // skip the already selected input\n            } else {\n               $$(s).setValue(searchText);\n            }\n         }\n      }\n   }\n\n   detatch() {\n      this.filterHelper.removeListener(\"filter.data\", this._handler_filterData);\n      // this.datacollection?.removeListener(\"changeCursor\", this.handler_select);\n   }\n}\n","import ABViewDataFilterCore from \"../../core/views/ABViewDataFilterCore\";\nimport ABViewDataFilterComponent from \"./viewComponent/ABViewDataFilterComponent\";\n\nexport default class ABViewDataFilter extends ABViewDataFilterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDataFilterComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      } else {\n         if (this.settings.viewType == \"connected\") {\n            const object = DC.datasource;\n            const [field] = object.fields(\n               (f) => f.columnName === this.settings.field\n            );\n            if (!field) {\n               this.warningsMessage(`can't resolve field reference`);\n            }\n         }\n      }\n   }\n}\n","const ABViewDataviewCore = require(\"../../core/views/ABViewDataviewCore\");\nconst ABViewDataviewComponent = require(\"./viewComponent/ABViewDataviewComponent\");\n\nconst ABViewDataviewDefaults = ABViewDataviewCore.defaultValues();\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewDataview extends ABViewDataviewCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.detailsPage =\n         this.settings.detailsPage ?? ABViewDataviewDefaults.detailsPage;\n      this.settings.editPage =\n         this.settings.editPage ?? ABViewDataviewDefaults.editPage;\n      this.settings.detailsTab =\n         this.settings.detailsTab ?? ABViewDataviewDefaults.detailsTab;\n      this.settings.editTab =\n         this.settings.editTab ?? ABViewDataviewDefaults.editTab;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj } v1App\n    * @param {string} idPrefix - define to support in 'Datacollection' widget\n    *\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewDataviewComponent(this);\n   }\n};\n","const ABViewDetailCore = require(\"../../core/views/ABViewDetailCore\");\nconst ABViewDetailComponent = require(\"./viewComponent/ABViewDetailComponent\");\n\nmodule.exports = class ABViewDetail extends ABViewDetailCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj } v1App\n    * @param {string} idPrefix - define to support in 'Datacollection' widget\n    *\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewDetailComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewDetailCheckboxCore = require(\"../../core/views/ABViewDetailCheckboxCore\");\nconst ABViewDetailCheckboxComponent = require(\"./viewComponent/ABViewDetailCheckboxComponent\");\n\nmodule.exports = class ABViewDetailCheckbox extends ABViewDetailCheckboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailCheckboxComponent(this);\n   }\n};\n","const ABViewDetailConnectCore = require(\"../../core/views/ABViewDetailConnectCore\");\nconst ABViewPropertyAddPage =\n   require(\"./viewProperties/ABViewPropertyAddPage\").default;\n\nconst ABViewDetailConnectComponent = require(\"./viewComponent/ABViewDetailConnectComponent\");\n\nmodule.exports = class ABViewDetailConnect extends ABViewDetailConnectCore {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n      this.addPageTool.fromSettings(this.settings);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailConnectComponent(this);\n   }\n\n   get addPageTool() {\n      if (this.__addPageTool == null)\n         this.__addPageTool = new ABViewPropertyAddPage();\n\n      return this.__addPageTool;\n   }\n};\n","const ABViewDetailCustomCore = require(\"../../core/views/ABViewDetailCustomCore\");\nconst ABViewDetailCustomComponent = require(\"./viewComponent/ABViewDetailCustomComponent\");\n\nmodule.exports = class ABViewDetailCustom extends ABViewDetailCustomCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailCustomComponent(this);\n   }\n};\n","const ABViewDetailImageCore = require(\"../../core/views/ABViewDetailImageCore\");\nconst ABViewDetailImageComponent = require(\"./viewComponent/ABViewDetailImageComponent\");\n\nmodule.exports = class ABViewDetailImage extends ABViewDetailImageCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailImageComponent(this);\n   }\n};\n","const ABViewDetailItemCore = require(\"../../core/views/ABViewDetailItemCore\");\nconst ABViewDetailItemComponent = require(\"./viewComponent/ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailItem extends ABViewDetailItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailItemComponent(this);\n   }\n};\n","const ABViewDetailTextCore = require(\"../../core/views/ABViewDetailTextCore\");\nconst ABViewDetailTextComponent = require(\"./viewComponent/ABViewDetailTextComponent\");\n\nmodule.exports = class ABViewDetailText extends ABViewDetailTextCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailTextComponent(this);\n   }\n};\n","const ABViewDetailTreeCore = require(\"../../core/views/ABViewDetailTreeCore\");\nconst ABViewDetailTreeComponent = require(\"./viewComponent/ABViewDetailTreeComponent\");\n\nmodule.exports = class ABViewDetailTree extends ABViewDetailTreeCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailTreeComponent(this);\n   }\n};\n","const ABViewDocxBuilderCore = require(\"../../core/views/ABViewDocxBuilderCore\");\nconst ABViewDocxBuilderComponent = require(\"./viewComponent/ABViewDocxBuilderComponent\");\n\nmodule.exports = class ABViewDocxBuilder extends ABViewDocxBuilderCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDocxBuilderComponent(this);\n   }\n\n   letUserDownload(blob, filename) {\n      const url = window.URL.createObjectURL(blob);\n\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a); // we need to append the element to the dom -> otherwise it will not work in firefox\n      a.click();\n      a.remove(); //afterwards we remove the element again\n\n      window.URL.revokeObjectURL(url);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollections || this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (!this.settings.filename) {\n         this.warningsMessage(\"is missing a DOCX template file\");\n      } else {\n         // TODO: should we check for the existance of the file?\n         // this isn't currently an async friendly fn, so how?\n         // let url = this.downloadUrl();\n      }\n   }\n};\n","const ABViewFormCore = require(\"../../core/views/ABViewFormCore\");\nconst ABViewFormComponent = require(\"./viewComponent/ABViewFormComponent\");\nconst ABViewFormButton = require(\"./ABViewFormButton\");\nconst ABViewFormCustom = require(\"./ABViewFormCustom\");\nconst ABViewFormConnect = require(\"./ABViewFormConnect\");\nconst ABViewFormDatepicker = require(\"./ABViewFormDatepicker\");\nconst ABViewFormSelectMultiple = require(\"./ABViewFormSelectMultiple\");\nconst ABViewFormTextbox = require(\"./ABViewFormTextbox\");\nconst ABViewFormJson = require(\"./ABViewFormJson\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\n// const ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\n// const ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\n// let PopupRecordRule = null;\n// let PopupSubmitRule = null;\n\n////\n//// LEFT OFF HERE: Review and Refactor\n////\nconst ABViewFormPropertyComponentDefaults = ABViewFormCore.defaultValues();\n\nmodule.exports = class ABViewForm extends ABViewFormCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      this._callbacks = {\n         onBeforeSaveData: () => true,\n      };\n   }\n\n   superComponent() {\n      if (this._superComponent == null)\n         this._superComponent = super.component();\n\n      return this._superComponent;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormComponent(this);\n   }\n\n   refreshDefaultButton(ids) {\n      // If default button is not exists, then skip this\n      let defaultButton = this.views(\n         (v) => v instanceof ABViewFormButton && v.settings.isDefault\n      )[0];\n\n      // Add a default button\n      if (defaultButton == null) {\n         defaultButton = ABViewFormButton.newInstance(this.application, this);\n         defaultButton.settings.isDefault = true;\n      }\n      // Remove default button from array, then we will add it to be the last item later (.push)\n      else {\n         this._views = this.views(\n            (v) => !(v instanceof ABViewFormButton) && !v.settings.isDefault\n         );\n      }\n\n      // Calculate position Y of the default button\n      let yList = this.views().map((v) => (v.position.y || 0) + 1);\n      yList.push(this._views.length || 0);\n      yList.push($$(ids.fields).length || 0);\n      let posY = Math.max(...yList);\n\n      // Update to be the last item\n      defaultButton.position.y = posY;\n\n      // Keep the default button is always the last item of array\n      this._views.push(defaultButton);\n\n      return defaultButton;\n   }\n\n   /**\n    * @method getFormValues\n    *\n    * @param {webix form} formView\n    * @param {ABObject} obj\n    * @param {ABDatacollection} dc\n    * @param {ABDatacollection} dcLink [optional]\n    */\n   getFormValues(formView, obj, dc, dcLink) {\n      // get the fields that are on this form\n      const visibleFields = [\"id\"]; // we always want the id so we can udpate records\n      formView.getValues(function (obj) {\n         visibleFields.push(obj.config.name);\n      });\n\n      // only get data passed from form\n      const allVals = formView.getValues();\n      const formVals = {};\n      visibleFields.forEach((val) => {\n         formVals[val] = allVals[val];\n      });\n\n      // get custom values\n      this.fieldComponents(\n         (comp) =>\n            comp instanceof ABViewFormCustom ||\n            comp instanceof ABViewFormConnect ||\n            comp instanceof ABViewFormDatepicker ||\n            comp instanceof ABViewFormSelectMultiple ||\n            (comp instanceof ABViewFormJson && comp.settings.type == \"filter\")\n      ).forEach((f) => {\n         const vComponent = this.viewComponents[f.id];\n         if (vComponent == null) return;\n\n         const field = f.field();\n         if (field) {\n            const getValue = vComponent.getValue ?? vComponent.logic.getValue;\n            if (getValue)\n               formVals[field.columnName] = getValue.call(vComponent, formVals);\n         }\n      });\n\n      // remove connected fields if they were not on the form and they are present in the formVals because it is a datacollection\n      obj.connectFields().forEach((f) => {\n         if (\n            visibleFields.indexOf(f.columnName) == -1 &&\n            formVals[f.columnName]\n         ) {\n            delete formVals[f.columnName];\n            delete formVals[f.relationName()];\n         }\n      });\n\n      // clear undefined values or empty arrays\n      for (const prop in formVals) {\n         if (formVals[prop] == null || formVals[prop].length == 0)\n            formVals[prop] = \"\";\n      }\n\n      // Add parent's data collection cursor when a connect field does not show\n      let linkValues;\n\n      if (dcLink) {\n         linkValues = dcLink.getCursor();\n      }\n\n      if (linkValues) {\n         const objectLink = dcLink.datasource;\n\n         const connectFields = obj.connectFields();\n         connectFields.forEach((f) => {\n            const formFieldCom = this.fieldComponents(\n               (fComp) => fComp?.field?.()?.id === f?.id\n            );\n\n            if (\n               objectLink.id == f.settings.linkObject &&\n               formFieldCom.length < 1 && // check field does not show\n               formVals[f.columnName] === undefined\n            ) {\n               const linkColName = f.indexField\n                  ? f.indexField.columnName\n                  : objectLink.PK();\n\n               formVals[f.columnName] = {};\n               formVals[f.columnName][linkColName] =\n                  linkValues[linkColName] ?? linkValues.id;\n            }\n         });\n      }\n\n      // NOTE: need to pull data of current cursor to calculate Calculate & Formula fields\n      // .formVals variable does not include data that does not display in the Form widget\n      const cursorFormVals = Object.assign(dc.getCursor() ?? {}, formVals);\n\n      // Set value of calculate or formula fields to use in record rule\n      obj.fields((f) => f.key == \"calculate\" || f.key == \"formula\").forEach(\n         (f) => {\n            if (formVals[f.columnName] == null) {\n               let reCalculate = true;\n\n               // WORKAROUND: If \"Formula\" field will have Filter conditions,\n               // Then it is not able to re-calculate on client side\n               // because relational data is not full data so FilterComplex will not have data to check\n               if (f.key == \"formula\" && f.settings?.where?.rules?.length > 0) {\n                  reCalculate = false;\n               }\n\n               formVals[f.columnName] = f.format(cursorFormVals, reCalculate);\n            }\n         }\n      );\n\n      if (allVals.translations?.length > 0)\n         formVals.translations = allVals.translations;\n\n      return formVals;\n   }\n\n   /**\n    * @method validateData\n    *\n    * @param {webix form} formView\n    * @param {ABObject} object\n    * @param {object} formVals\n    *\n    * @return {boolean} isValid\n    */\n   validateData($formView, object, formVals) {\n      let isValid = true;\n      let list = \"\";\n\n      // validate required fields\n      const requiredFields = this.fieldComponents(\n         (fComp) =>\n            fComp?.field?.().settings?.required == true ||\n            fComp?.settings?.required == true\n      ).map((fComp) => fComp.field());\n\n      // validate data\n      let validator;\n      if (isValid) {\n         validator = object.isValidData(formVals);\n         isValid = validator.pass();\n      }\n\n      // $$($formView).validate();\n      $formView.validate();\n\n      // Display required messages\n      requiredFields.forEach((f) => {\n         if (!f) return;\n\n         const fieldVal = formVals[f.columnName];\n         if (fieldVal == \"\" || fieldVal == null || fieldVal.length < 1) {\n            $formView.markInvalid(f.columnName, L(\"This is a required field.\"));\n            list += `<li>${L(\"Missing Required Field\")} ${f.columnName}</li>`;\n            isValid = false;\n\n            // Fix position of invalid message\n            const $forminput = $formView.elements[f.columnName];\n            if ($forminput) {\n               // Y position\n               const height = $forminput.$height;\n               if (height < 56) {\n                  $forminput.define(\"height\", 60);\n                  $forminput.resize();\n               }\n\n               // X position\n               const domInvalidMessage =\n                  $forminput.$view.getElementsByClassName(\n                     \"webix_inp_bottom_label\"\n                  )[0];\n               if (!domInvalidMessage?.style[\"margin-left\"]) {\n                  domInvalidMessage.style.marginLeft = `${\n                     this.settings.labelWidth ??\n                     ABViewFormPropertyComponentDefaults.labelWidth\n                  }px`;\n               }\n            }\n         }\n      });\n\n      // if data is invalid\n      if (!isValid) {\n         const saveButton = $formView.queryView({\n            view: \"button\",\n            type: \"form\",\n         });\n\n         // error message\n         if (validator?.errors?.length) {\n            validator.errors.forEach((err) => {\n               $formView.markInvalid(err.name, err.message);\n               list += `<li>${err.name}: ${err.message}</li>`;\n            });\n\n            saveButton?.disable();\n         } else {\n            saveButton?.enable();\n         }\n      }\n      if (list) {\n         webix.alert({\n            type: \"alert-error\",\n            title: L(\"Problems Saving\"),\n            width: 400,\n            text: `<ul style='text-align:left'>${list}</ul>`,\n         });\n      }\n\n      return isValid;\n   }\n\n   /**\n    * @method recordRulesReady()\n    * This returns a Promise that gets resolved when all record rules report\n    * that they are ready.\n    * @return {Promise}\n    */\n   async recordRulesReady() {\n      return this.RecordRule.rulesReady();\n   }\n\n   /**\n    * @method saveData\n    * save data in to database\n    * @param $formView - webix's form element\n    *\n    * @return {Promise}\n    */\n   async saveData($formView) {\n      // call .onBeforeSaveData event\n      // if this function returns false, then it will not go on.\n      if (!this._callbacks?.onBeforeSaveData?.()) return;\n\n      // form validate\n      if (!$formView || !$formView.validate()) {\n         // TODO : error message\n         return;\n      }\n\n      $formView.clearValidation();\n\n      // get ABDatacollection\n      const dv = this.datacollection;\n      if (dv == null) return;\n\n      // get ABObject\n      const obj = dv.datasource;\n      if (obj == null) return;\n\n      // get ABModel\n      const model = dv.model;\n      if (model == null) return;\n\n      // get update data\n      const formVals = this.getFormValues(\n         $formView,\n         obj,\n         dv,\n         dv.datacollectionLink\n      );\n\n      // form ready function\n      const formReady = (newFormVals) => {\n         // clear cursor after saving.\n         if (dv) {\n            if (this.settings.clearOnSave) {\n               dv.setCursor(null);\n               $formView.clear();\n            } else {\n               if (newFormVals && newFormVals.id) dv.setCursor(newFormVals.id);\n            }\n         }\n\n         $formView.hideProgress?.();\n\n         // if there was saved data pass it up to the onSaveData callback\n         // if (newFormVals) this._logic.callbacks.onSaveData(newFormVals);\n         if (newFormVals) this.emit(\"saved\", newFormVals); // Q? is this the right upgrade?\n      };\n\n      const formError = (err) => {\n         const $saveButton = $formView.queryView({\n            view: \"button\",\n            type: \"form\",\n         });\n\n         // mark error\n         if (err) {\n            if (err.invalidAttributes) {\n               for (const attr in err.invalidAttributes) {\n                  let invalidAttrs = err.invalidAttributes[attr];\n                  if (invalidAttrs && invalidAttrs[0])\n                     invalidAttrs = invalidAttrs[0];\n\n                  $formView.markInvalid(attr, invalidAttrs.message);\n               }\n            } else if (err.sqlMessage) {\n               webix.message({\n                  text: err.sqlMessage,\n                  type: \"error\",\n               });\n            } else {\n               webix.message({\n                  text: L(\"System could not save your data\"),\n                  type: \"error\",\n               });\n               this.AB.notify.developer(err, {\n                  message: \"Could not save your data\",\n                  view: this.toObj(),\n               });\n            }\n         }\n\n         $saveButton?.enable();\n\n         $formView?.hideProgress?.();\n      };\n\n      // wait for our Record Rules to be ready before we continue.\n      await this.recordRulesReady();\n\n      // update value from the record rule (pre-update)\n      this.doRecordRulesPre(formVals);\n\n      // validate data\n      if (!this.validateData($formView, obj, formVals)) {\n         // console.warn(\"Data is invalid.\");\n         return;\n      }\n\n      // show progress icon\n      $formView.showProgress?.({ type: \"icon\" });\n\n      let newFormVals;\n      // {obj}\n      // The fully populated values returned back from service call\n      // We use this in our post processing Rules\n\n      try {\n         // is this an update or create?\n         if (formVals.id) {\n            newFormVals = await model.update(formVals.id, formVals);\n         } else {\n            newFormVals = await model.create(formVals);\n         }\n      } catch (err) {\n         formError(err.data);\n         throw err;\n      }\n\n      /*\n      // OLD CODE:\n      try {\n         await this.doRecordRules(newFormVals);\n         // make sure any updates from RecordRules get passed along here.\n         this.doSubmitRules(newFormVals);\n         formReady(newFormVals);\n         return newFormVals;\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: \"Error processing Record Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n         // Question:  how do we respond to an error?\n         // ?? just keep going ??\n         this.doSubmitRules(newFormVals);\n         formReady(newFormVals);\n         return;\n      }\n      */\n\n      try {\n         await this.doRecordRules(newFormVals);\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: \"Error processing Record Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n      }\n\n      // make sure any updates from RecordRules get passed along here.\n      try {\n         this.doSubmitRules(newFormVals);\n      } catch (errs) {\n         this.AB.notify.developer(err, {\n            message: \"Error processing Submit Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n      }\n\n      formReady(newFormVals);\n      return newFormVals;\n   }\n\n   focusOnFirst() {\n      let topPosition = 0;\n      let topPositionId = \"\";\n      this.views().forEach((item) => {\n         if (item.key == \"textbox\" || item.key == \"numberbox\") {\n            if (item.position.y == topPosition) {\n               // topPosition = item.position.y;\n               topPositionId = item.id;\n            }\n         }\n      });\n      let childComponent = this.viewComponents[topPositionId];\n      if (childComponent && $$(childComponent.ui.id)) {\n         $$(childComponent.ui.id).focus();\n      }\n   }\n\n   get viewComponents() {\n      const superComponent = this.superComponent();\n      return superComponent.viewComponents;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (this.settings.recordRules) {\n         // TODO: scan recordRules for warnings\n      }\n\n      if (this.settings.submitRules) {\n         // TODO: scan submitRules for warnings.\n      }\n   }\n};\n","const ABViewFormButtonCore = require(\"../../core/views/ABViewFormButtonCore\");\nconst ABViewFormButtonComponent = require(\"./viewComponent/ABViewFormButtonComponent\");\n\nmodule.exports = class ABViewFormButton extends ABViewFormButtonCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormButtonComponent(this);\n   }\n};\n","const ABViewFormCheckboxCore = require(\"../../core/views/ABViewFormCheckboxCore\");\nconst ABViewFormCheckboxComponent = require(\"./viewComponent/ABViewFormCheckboxComponent\");\n\nmodule.exports = class ABViewFormCheckbox extends ABViewFormCheckboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormCheckboxComponent(this);\n   }\n};\n","const ABViewFormConnectCore = require(\"../../core/views/ABViewFormConnectCore\");\nconst ABViewFormConnectComponent = require(\"./viewComponent/ABViewFormConnectComponent\");\nconst ABViewPropertyAddPage =\n   require(\"./viewProperties/ABViewPropertyAddPage\").default;\nconst ABViewPropertyEditPage =\n   require(\"./viewProperties/ABViewPropertyEditPage\").default;\n\nconst ABViewFormConnectPropertyComponentDefaults =\n   ABViewFormConnectCore.defaultValues();\n\nconst ABPopupSort = require(\"../../../ABDesigner/ab_work_object_workspace_popupSortFields\");\n\nlet FilterComponent = null;\nlet SortComponent = null;\n\nmodule.exports = class ABViewFormConnect extends ABViewFormConnectCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      // Set filter value\n      this.__filterComponent = this.AB.filterComplexNew(\n         `${this.id}__filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.__filterComponent.fieldsLoad(\n         this.datasource ? this.datasource.fields() : [],\n         this.datasource ? this.datasource : null\n      );\n\n      // NOTE: .objectWorkspace is a v1 setting\n      // if (\n      //    !this.settings.objectWorkspace ||\n      //    !this.settings.objectWorkspace.filterConditions\n      // ) {\n      //    this.AB.error(\"Error: filter conditions do not exist\", {\n      //       error: \"filterConditions do not exist\",\n      //       viewLocation: {\n      //          application: this.application.name,\n      //          id: this.id,\n      //          name: this.label,\n      //       },\n      //       view: this,\n      //    });\n      //    // manually place an empty filter\n      //    this.settings[\"objectWorkspace\"] = {};\n      //    this.settings[\"objectWorkspace\"][\"filterConditions\"] = { glue: \"and\" };\n      // }\n\n      this.__filterComponent.setValue(\n         this.settings.filterConditions ??\n            ABViewFormConnectPropertyComponentDefaults.filterConditions\n      );\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.addPageTool.fromSettings(this.settings);\n      this.editPageTool.fromSettings(this.settings);\n   }\n\n   static get addPageProperty() {\n      return ABViewPropertyAddPage.propertyComponent(this.App, this.idBase);\n   }\n\n   static get editPageProperty() {\n      return ABViewPropertyEditPage.propertyComponent(this.App, this.idBase);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormConnectComponent(this);\n   }\n\n   get addPageTool() {\n      if (this.__addPageTool == null)\n         this.__addPageTool = new ABViewPropertyAddPage();\n\n      return this.__addPageTool;\n   }\n\n   get editPageTool() {\n      if (this.__editPageTool == null)\n         this.__editPageTool = new ABViewPropertyEditPage();\n\n      return this.__editPageTool;\n   }\n};\n","const ABViewFormCustomCore = require(\"../../core/views/ABViewFormCustomCore\");\nconst ABViewFormCustomComponent = require(\"./viewComponent/ABViewFormCustomComponent\");\n\nmodule.exports = class ABViewFormCustom extends ABViewFormCustomCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormCustomComponent(this);\n   }\n};\n","const ABViewFormDatepickerCore = require(\"../../core/views/ABViewFormDatepickerCore\");\nconst ABViewFormDatepickerComponent = require(\"./viewComponent/ABViewFormDatepickerComponent\");\n\nmodule.exports = class ABViewFormDatepicker extends ABViewFormDatepickerCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormDatepickerComponent(this);\n   }\n};\n","const ABViewFormItemCore = require(\"../../core/views/ABViewFormItemCore\");\nconst ABViewFormItemComponent = require(\"./viewComponent/ABViewFormItemComponent\");\n\nconst ABViewFormFieldPropertyComponentDefaults =\n   ABViewFormItemCore.defaultValues();\n\nmodule.exports = class ABViewFormItem extends ABViewFormItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static get componentUI() {\n      return ABViewFormItemComponent;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormItemComponent(this);\n   }\n\n   /**\n    * @method parentFormUniqueID\n    * return a unique ID based upon the closest form object this component is on.\n    * @param {string} key  The basic id string we will try to make unique\n    * @return {string}\n    */\n   parentFormUniqueID(key) {\n      var form = this.parentFormComponent();\n      var uniqueInstanceID;\n      if (form) {\n         uniqueInstanceID = form.uniqueInstanceID;\n      } else {\n         uniqueInstanceID = webix.uid();\n      }\n\n      return key + uniqueInstanceID;\n   }\n};\n","const ABViewFormJsonCore = require(\"../../core/views/ABViewFormJsonCore\");\nconst ABViewFormJsonComponent = require(\"./viewComponent/ABViewFormJsonComponent\");\n\nmodule.exports = class ABViewFormJson extends ABViewFormJsonCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormJsonComponent(this);\n   }\n};\n","const ABViewFormNumberCore = require(\"../../core/views/ABViewFormNumberCore\");\nconst ABViewFormNumberComponent = require(\"./viewComponent/ABViewFormNumberComponent\");\n\nmodule.exports = class ABViewFormNumber extends ABViewFormNumberCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormNumberComponent(this);\n   }\n};\n","const ABViewFormReadonlyCore = require(\"../../core/views/ABViewFormReadonlyCore\");\nconst ABViewFormReadonlyComponent = require(\"./viewComponent/ABViewFormReadonlyComponent\");\n\nmodule.exports = class ABViewFormReadonly extends ABViewFormReadonlyCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormReadonlyComponent(this);\n   }\n};\n","const ABViewFormSelectMultipleCore = require(\"../../core/views/ABViewFormSelectMultipleCore\");\nconst ABViewFormSelectMultipleComponent = require(\"./viewComponent/ABViewFormSelectMultipleComponent\");\n\nmodule.exports = class ABViewFormSelectMultiple extends (\n   ABViewFormSelectMultipleCore\n) {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormSelectMultipleComponent(this);\n   }\n};\n","const ABViewFormSelectSingleCore = require(\"../../core/views/ABViewFormSelectSingleCore\");\nconst ABViewFormSelectSingleComponent = require(\"./viewComponent/ABViewFormSelectSingleComponent\");\n\nmodule.exports = class ABViewFormSelectSingle extends (\n   ABViewFormSelectSingleCore\n) {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormSelectSingleComponent(this);\n   }\n};\n","const ABViewFormTextboxCore = require(\"../../core/views/ABViewFormTextboxCore\");\nconst ABViewFormTextboxComponent = require(\"./viewComponent/ABViewFormTextboxComponent\");\n\nmodule.exports = class ABViewFormTextbox extends ABViewFormTextboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormTextboxComponent(this);\n   }\n};\n","const ABViewFormTreeCore = require(\"../../core/views/ABViewFormTreeCore\");\nconst ABViewFormTreeComponent = require(\"./viewComponent/ABViewFormTreeComponent\");\n\nmodule.exports = class ABViewFormTree extends ABViewFormTreeCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormTreeComponent(this);\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewGanttComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewGantt_${baseView.id}`,\n         Object.assign(\n            {\n               menu: \"\",\n               gantt: \"\",\n            },\n            ids\n         )\n      );\n\n      this._tempDC = null;\n      // {ABDataCollection}\n      // A link to a DC that was passed in.  NOTE: this is only for\n      // the temp DCs created in the AppBuilder Designer and passed\n      // in.  Normal DCs are handled by the default CurrentDatacollection\n      // methods.\n\n      this.TitleField = null;\n      this.StartDateField = null;\n      this.EndDateField = null;\n      this.DurationField = null;\n      this.ProgressField = null;\n      this.NotesField = null;\n\n      this.originalStartDate = null;\n      this.originalEndDate = null;\n\n      this.pendingAdds = {};\n      // {Promise}  /* id : {Promise} */\n      // In order to prevent a race condition where multiple adds can be\n      // generated on the same item, we catch the repeats and just return\n      // the same data for each.\n\n      const idGantt = this.ids.gantt;\n\n      this.ganttElement = {\n         isExistsTask: (taskId) => {\n            const localService = $$(idGantt).getService(\"local\");\n            if (!localService) return false;\n\n            const tasksData = localService.tasks();\n            if (!tasksData || !tasksData.exists) return false;\n\n            return tasksData.exists(taskId);\n         },\n         removeTask: (taskId) => {\n            if (!this.ganttElement.isExistsTask(taskId)) return;\n\n            const opsService = $$(idGantt).getService(\"operations\");\n            if (!opsService) return;\n\n            return opsService.removeTask(taskId);\n         },\n      };\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      const { YEAR_SCALE, MONTH_SCALE, DAY_SCALE } = this.getConstantScales;\n      const _ui = super.ui([\n         {\n            cols: [\n               { fillspace: true },\n               {\n                  view: \"menu\",\n                  id: ids.menu,\n                  layout: \"x\",\n                  width: 300,\n                  data: [\n                     {\n                        id: \"day\",\n                        value: this.label(\"Day\"),\n                     },\n                     {\n                        id: \"week\",\n                        value: this.label(\"Week\"),\n                     },\n                     {\n                        id: \"month\",\n                        value: this.label(\"Month\"),\n                     },\n                     {\n                        id: \"year\",\n                        value: this.label(\"Year\"),\n                     },\n                  ],\n                  on: {\n                     onItemClick: (id /* , e, node */) => {\n                        this.setScale(id);\n                     },\n                  },\n               },\n            ],\n         },\n         {\n            id: ids.gantt,\n            view: \"gantt\",\n            scales: [YEAR_SCALE, MONTH_SCALE, DAY_SCALE],\n            override: new Map([\n               [\n                  gantt.services.Backend,\n                  // global webix gantt object\n                  class MyBackend extends gantt.services.Backend {\n                     async tasks() {\n                        const DC = self.CurrentDatacollection;\n                        if (!DC) return [];\n\n                        // if (DC.dataStatus != DC.dataStatusFlag.initialized) {\n                        //    await DC.loadData().catch((err) => {\n                        //       console.error(err);\n                        //    });\n                        // }\n                        return (DC.getData() || []).map((d, indx) =>\n                           self.convertFormat(d, indx)\n                        );\n                     }\n                     links() {\n                        return Promise.resolve([]);\n                     }\n                     async addTask(obj, index, parent) {\n                        if (!self.pendingAdds[obj.id]) {\n                           self.pendingAdds[obj.id] = self.taskAdd(obj);\n                        }\n                        const newTask = await self.pendingAdds[obj.id];\n                        delete self.pendingAdds[obj.id];\n                        return {\n                           id: (newTask || {}).id,\n                        };\n                     }\n                     async updateTask(id, obj) {\n                        return await self.taskUpdate(obj.id, obj);\n                     }\n                     async removeTask(id) {\n                        return await self.taskRemove(id);\n                     }\n                  },\n               ],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      // #HACK!: as of webix v.8.1.1 there is a visual glitch of the Gantt\n      // object if you replace a gantt widget with a new definition (like in\n      // the ABDesigner you can switch from Gantt1 to Gantt2 in the object\n      // workspace).  In that one case, the menu would disappear even though\n      // the data is present.  So this makes sure the menu is shown\n      const $menu = $$(this.ids.menu);\n\n      if ($menu) $menu.showItem(\"day\");\n   }\n\n   /**\n    * @method CurrentDatacollection()\n    * A helper to return the current ABDataCollection we are working with.\n    * @return {ABDataCollection}\n    */\n   get CurrentDatacollection() {\n      return super.CurrentDatacollection || this._tempDC;\n   }\n\n   /**\n    * @method convertFormat()\n    * Convert an ABObject's row value into a gantt task data format.\n    * @param {obj} row\n    *        The current row of data returned from an ABObject.\n    * @param {int} index\n    *        The order of this task.\n    * @return {obj}\n    *         A key=>value hash corresponding to the gantt task that\n    *         represents this row of data.\n    */\n   convertFormat(row = {}, index = null) {\n      const data = {};\n      const StartDateField = this.StartDateField;\n      const EndDateField = this.EndDateField;\n      const DurationField = this.DurationField;\n\n      if (!StartDateField || (!EndDateField && !DurationField)) return data;\n\n      const currDate = new Date();\n\n      data[\"id\"] = row.id || row.uuid;\n      data[\"type\"] = \"task\";\n      data[\"parent\"] = 0;\n      data[\"open\"] = true;\n\n      // define label\n      const TitleField = this.TitleField;\n      const ProgressField = this.ProgressField;\n      const NotesField = this.NotesField;\n\n      data[\"text\"] = TitleField\n         ? row[TitleField.columnName] || \"\"\n         : this.CurrentObject.displayData(row);\n      data[\"start_date\"] = row[StartDateField.columnName] || currDate;\n      data[\"progress\"] = ProgressField\n         ? parseFloat(row[ProgressField.columnName] || 0)\n         : 0;\n\n      if (NotesField) data[\"details\"] = row[NotesField.columnName] || \"\";\n\n      if (EndDateField)\n         data[\"end_date\"] = row[EndDateField.columnName] || currDate;\n\n      if (DurationField) data[\"duration\"] = row[DurationField.columnName] || 1;\n\n      // Default values\n      if (!data[\"end_date\"] && !data[\"duration\"]) {\n         data[\"end_date\"] = currDate;\n         data[\"duration\"] = 1;\n      }\n\n      if (index) data[\"order\"] = index;\n\n      return data;\n   }\n\n   /**\n    * @method convertValues()\n    * Convert a Gantt task into a set of values for our ABObject.\n    * @param {obj} task\n    *        The current gantt task data.\n    * @return {obj}\n    *         A key=>value hash corresponding to the ABObject that\n    *         is tied to this gantt.\n    */\n   convertValues(task) {\n      const patch = {};\n      const TitleField = this.TitleField;\n      const StartDateField = this.StartDateField;\n      const ProgressField = this.ProgressField;\n      const NotesField = this.NotesField;\n      const EndDateField = this.EndDateField;\n      const DurationField = this.DurationField;\n\n      if (TitleField) patch[TitleField.columnName] = task[\"text\"] || \"\";\n\n      if (StartDateField) patch[StartDateField.columnName] = task[\"start_date\"];\n\n      if (ProgressField)\n         patch[ProgressField.columnName] = parseFloat(task[\"progress\"] || 0);\n\n      if (NotesField) patch[NotesField.columnName] = task[\"details\"];\n\n      if (EndDateField) patch[EndDateField.columnName] = task[\"end_date\"];\n\n      if (DurationField) patch[DurationField.columnName] = task[\"duration\"];\n\n      return patch;\n   }\n\n   /**\n    * @method objectLoad\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      super.objectLoad(object);\n\n      // const baseView = this.view;\n      const settings = this.settings;\n\n      if (object) {\n         this.TitleField = object.fieldByID(settings.titleFieldID);\n         this.StartDateField = object.fieldByID(settings.startDateFieldID);\n         this.EndDateField = object.fieldByID(settings.endDateFieldID);\n         this.DurationField = object.fieldByID(settings.durationFieldID);\n         this.ProgressField = object.fieldByID(settings.progressFieldID);\n         this.NotesField = object.fieldByID(settings.notesFieldID);\n      }\n   }\n\n   /**\n    * @method datacollectionLoad\n    * @param {ABDatacollection} datacollection\n    */\n   datacollectionLoad(datacollection) {\n      super.datacollectionLoad(datacollection);\n\n      const dc = this.CurrentDatacollection || datacollection;\n      if (!dc) return;\n\n      // NOTE: this can happen in the ABDesigner object workspace.\n      // we send in a temp DC with no .id\n      this._tempDC = datacollection;\n\n      // NOTE: keep .objectLoad() before any .initData() is called.\n      this.objectLoad(dc.datasource);\n\n      const eventNames = [\"create\", \"update\", \"delete\", \"initializedData\"];\n\n      eventNames.forEach((e) => {\n         if (\n            e in dc._events &&\n            this.__events.findIndex((eo) => eo.eventName === e) !== -1\n         )\n            return;\n\n         switch (e) {\n            case \"delete\":\n               this.eventAdd({\n                  emitter: dc,\n                  eventName: \"delete\",\n                  listener: (taskId) => {\n                     // remove this task in gantt\n                     if (this.ganttElement.isExistsTask(taskId))\n                        this.ganttElement.removeTask(taskId);\n                  },\n               });\n\n               break;\n\n            default:\n               this.eventAdd({\n                  emitter: dc,\n                  eventName: e,\n                  listener: () => {\n                     this.initData();\n                  },\n               });\n\n               break;\n         }\n      });\n   }\n\n   /**\n    * @function hide()\n    * hide this component.\n    */\n   hide() {\n      $$(this.ids.component)?.hide();\n   }\n\n   initData() {\n      const ganttElem = $$(this.ids.gantt);\n      if (!ganttElem) return;\n\n      const dataService = ganttElem.getService(\"local\");\n      if (!dataService) return;\n\n      const dcTasks = dataService.tasks();\n      if (!dcTasks) return;\n\n      // gantt v 8.1.1\n      // Note: there is a race condition that can happen here.\n      // dataService.tasks() calls the MyBackend.tasks() above which\n      // returns a Promise.\n      // when you call dcTasks.clearAll() before the promise\n      // is resolved, the gantt internally throws an error.\n      //\n      // So give webix some time to internally complete it's process\n      // before we do .clearAll();\n      setTimeout(() => {\n         dcTasks.clearAll();\n\n         const DC = this.CurrentDatacollection;\n         const gantt_data = {\n            data: DC\n               ? (DC.getData() || []).map((d, index) =>\n                    this.convertFormat(d, index)\n                 )\n               : [],\n         };\n\n         // check required fields before parse\n         if (this.StartDateField && (this.EndDateField || this.DurationField)) {\n            dcTasks.parse(gantt_data);\n         }\n\n         // Keep original start and end dates for calculate scale to display\n         const currScale = dataService.getScales();\n\n         this.originalStartDate = currScale.start;\n         this.originalEndDate = currScale.end;\n\n         this.sort();\n      }, 10);\n   }\n\n   get getConstantScales() {\n      const DAY_SCALE = { unit: \"day\", format: \"%d\" },\n         WEEK_SCALE = {\n            unit: \"week\",\n            format: (start) => {\n               const parser = webix.Date.dateToStr(\"%d %M\");\n               const wstart = webix.Date.weekStart(start);\n               const wend = webix.Date.add(\n                  webix.Date.add(wstart, 1, \"week\", true),\n                  -1,\n                  \"day\",\n                  true\n               );\n\n               return parser(wstart) + \" - \" + parser(wend);\n            },\n         },\n         MONTH_SCALE = { unit: \"month\", format: \"%F\" },\n         YEAR_SCALE = { unit: \"year\", format: \"%Y\" };\n\n      return {\n         DAY_SCALE,\n         WEEK_SCALE,\n         MONTH_SCALE,\n         YEAR_SCALE,\n      };\n   }\n\n   setScale(scale) {\n      const ganttElem = $$(this.ids.gantt);\n      if (!ganttElem) return;\n\n      const ganttData = ganttElem.getService(\"local\");\n      if (!ganttData) return;\n\n      const newScales = [];\n      const { YEAR_SCALE, MONTH_SCALE, WEEK_SCALE, DAY_SCALE } =\n         this.getConstantScales;\n\n      switch (scale) {\n         case \"day\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE, DAY_SCALE);\n            break;\n\n         case \"week\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE, WEEK_SCALE);\n            break;\n\n         case \"month\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE);\n            break;\n\n         case \"year\":\n            newScales.push(YEAR_SCALE);\n            break;\n      }\n\n      const abWebix = this.AB.Webix;\n      const currScale = ganttElem.getService(\"local\").getScales(),\n         start = abWebix.Date.add(this.originalStartDate, -1, scale, true),\n         end = abWebix.Date.add(this.originalEndDate, 1, scale, true);\n\n      ganttData.setScales(\n         start,\n         end,\n         currScale.precise,\n         currScale.cellWidth,\n         currScale.cellHeight,\n         newScales\n      );\n      ganttElem.$app.refresh();\n      ganttElem.getState().$batch({ top: 0, left: 0 });\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    */\n   onShow() {\n      super.onShow();\n      this.datacollectionLoad(this.datacollection);\n\n      $$(this.ids.component)?.show();\n   }\n\n   sort() {\n      // TODO: sorting;\n      return;\n      // const gantt = $$(ids.gantt).getGantt();\n      // if (!gantt) return;\n\n      // // default sort\n      // const MAX_date = new Date(8640000000000000);\n      // gantt.sort(function(a, b) {\n      //    const aStartDate = a[\"start_date\"],\n      //       aEndDate = a[\"end_date\"],\n      //       aDuration = a[\"duration\"] || 1,\n      //       bStartDate = b[\"start_date\"],\n      //       bEndDate = b[\"end_date\"],\n      //       bDuration = b[\"duration\"] || 1;\n\n      //    // if no start date, then be a last item\n      //    if (\n      //       a[this.StartDateField.columnName] == null ||\n      //       b[this.StartDateField.columnName] == null\n      //    ) {\n      //       return (\n      //          (a[this.StartDateField.columnName] || MAX_date) -\n      //          (b[this.StartDateField.columnName] || MAX_date)\n      //       );\n      //    } else if (aStartDate != bStartDate) {\n      //       return aStartDate - bStartDate;\n      //    } else if (aEndDate != bEndDate) {\n      //       return aEndDate - bEndDate;\n      //    } else if (aDuration != bDuration) {\n      //       return bDuration - aDuration;\n      //    }\n      // }, false);\n   }\n\n   async taskAdd(taskData) {\n      const patch = this.convertValues(taskData);\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend addTask() method\n         // On Webix documents, the method addTask() have to return the added object so we have to pass the data we add through this method.\n         return await this.CurrentObject?.model().create(patch);\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Saving Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to save this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskAdd(): Error Saving Item\",\n            patch,\n         });\n\n         throw e;\n      }\n   }\n\n   async taskRemove(rowId) {\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend removeTask() method\n         // On Webix documents, the method removeTask() return {} (an empty object) so we return {} in removeTask() instead.\n         await this.CurrentObject.model().delete(rowId);\n\n         return {};\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Removing Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to remove this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskRemove(): Error Removing Item\",\n            rowId,\n         });\n\n         throw e;\n      }\n   }\n\n   async taskUpdate(rowId, updatedTask) {\n      const patch = this.convertValues(updatedTask);\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend updateTask() method\n         // On Webix documents, the method updateTask() return {} (an empty object) so we return {} in updateTask() instead.\n         await this.CurrentObject.model().update(rowId, patch);\n\n         return {};\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Updating Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to update this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskUpdate(): Error Updating Item\",\n            patch,\n         });\n\n         throw e;\n      }\n   }\n}\n","import ABViewGanttComponent from \"./viewComponent/ABViewGanttComponent\";\n\nconst ABViewGanttCore = require(\"../../core/views/ABViewGanttCore\");\n\nexport default class ABViewGantt extends ABViewGanttCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewGanttComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      } else {\n         if (!this.settings.startDateFieldID) {\n            this.warningsMessage(`doesn't have a start date field set.`);\n         } else {\n            let field = DC.datasource?.fieldByID(\n               this.settings.startDateFieldID\n            );\n            if (!field) {\n               this.warningsMessage(\n                  `can't lookup field: startDate[${this.settings.startDateFieldID}]`\n               );\n            }\n         }\n      }\n   }\n}\n","/*\n * ABViewGridPopupExport.js\n * Manage the Popup that allows you to export data into one of our supported\n * formats.\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\n\nexport default class ABWorkObjectPopupExport extends ClassUI {\n   constructor(idBase) {\n      idBase = idBase || \"abviewgridpopupExport\";\n\n      super({\n         popupExport: `${idBase}_popupExport`,\n         list: `${idBase}_popupExport_list`,\n      });\n\n      this._currentObject = null;\n      // {ABObject}\n      // The ABObject of the data we will export.  We can find out the fields\n      // from the object.\n\n      this._dataCollection = null;\n      // {ABDatacCollection}\n      // The ABDataCollection that contains the data we are going to export.\n\n      this._grid = null;\n      // {webix.grid}\n      // the current webix.grid that contains the data we are going to export.\n\n      this._filename = null;\n      // {string}\n      // the name of the desired output file.\n\n      this._hiddenFields = [];\n      // {array}\n      // An array of ABField.columnName(s) that we are not wanting to export\n   }\n\n   ui() {\n      var self = this;\n\n      // webix UI definition:\n      return {\n         view: \"popup\",\n         id: this.ids.popupExport,\n         width: 160,\n         height: 0, //150,\n         select: false,\n         hidden: true,\n         body: {\n            id: this.ids.list,\n            view: \"list\",\n            autoheight: true,\n            data: [\n               { name: \"CSV\", icon: \"file-excel-o\" },\n               { name: \"Excel\", icon: \"file-excel-o\" },\n               { name: \"PDF\", icon: \"file-pdf-o\" },\n               { name: \"PNG\", icon: \"file-image-o\" },\n            ],\n            template:\n               \"<div><i class='fa fa-#icon# webix_icon_btn' aria-hidden='true'></i> #name#</div>\",\n            on: {\n               onItemClick: function (id /*, e, node */) {\n                  var component = this.getItem(id);\n                  self.export(component.name);\n               },\n            },\n         },\n      };\n   }\n\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n      webix.ui(this.ui());\n      $$(this.ids.popupExport).resize();\n   }\n\n   // internal business logic\n\n   /**\n    * @method dataCollectionLoad()\n    * the current ABDataCollection we are working with.\n    * @param {ABDataCollection} dc\n    */\n   dataCollectionLoad(dc) {\n      this._dataCollection = dc;\n   }\n\n   /**\n    * @method objectLoad()\n    * The current ABObject we are working with.\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method setHiddenFields\n    * Register Fields we don't want exported in our data.\n    * @param {array} fields\n    *        An array of ABField.columnName(s) to exclude from our export.\n    */\n   setHiddenFields(fields = []) {\n      this._hiddenFields = fields ?? [];\n   }\n\n   /**\n    * @method setFilename()\n    * Register the name of the file we want our data to export as.\n    * @param {string} filename\n    */\n   setFilename(filename) {\n      this._filename = filename;\n   }\n\n   /**\n    * @method setGridComponent()\n    * Register the webix.grid that currently stores the data we are\n    * exporting.\n    * @param {webix.grid} $grid\n    */\n   setGridComponent($grid) {\n      this._grid = $grid;\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    */\n   show($view) {\n      $$(this.ids.popupExport).show($view);\n   }\n\n   async export(name) {\n      let fnExport;\n\n      let columns = {};\n\n      let dc = this._dataCollection;\n      let _currentObject = this._currentObject;\n      let _grid = this._grid;\n      let _filename = this._filename;\n\n      if (\n         dc &&\n         (!dc.settings.loadAll || dc.dataStatus == dc.dataStatusFlag.notInitial)\n      ) {\n         // Load all data\n         await dc.reloadData(0, null);\n         dc.settings.loadAll = true;\n      }\n\n      // client filter data\n      // template of report\n      if (_currentObject) {\n         _currentObject.fields().forEach((f) => {\n            // hidden fields\n            if (this._hiddenFields.indexOf(f.columnName) > -1) return;\n\n            columns[f.columnName] = {\n               template: (rowData) => {\n                  return f.format(rowData);\n               },\n            };\n         });\n      }\n\n      // If there are checked items, then export them only\n      // Otherwise export all items\n      const noCheckedRow = _grid.data.find({appbuilder_select_item: 1}).length < 1;\n      const filterRow = (row) => noCheckedRow || row?.appbuilder_select_item == 1;\n\n      switch (name) {\n         case \"CSV\":\n            webix.csv.delimiter.cols = \",\";\n\n            fnExport = webix.toCSV(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               columns: columns,\n               filter: filterRow\n            });\n            break;\n         case \"Excel\":\n            fnExport = webix.toExcel(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               name:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               columns: columns,\n               filterHTML: true,\n               filter: filterRow\n            });\n            break;\n         case \"PDF\":\n            fnExport = webix.toPDF(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               filterHTML: true,\n               filter: filterRow\n            });\n            break;\n         case \"PNG\":\n            fnExport = webix.toPNG(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               // filter: NOT SUPPORT\n            });\n            break;\n      }\n\n      try {\n         await fnExport;\n         $$(this.ids.popupExport).hide();\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: `ABViewGridPopupExport:export(): System could not export: ${name}`,\n            exportType: name,\n            columns,\n            fileName: _filename,\n         });\n      }\n   }\n\n   // this.dataCollectionLoad = _logic.dataCollectionLoad;\n   // this.objectLoad = _logic.objectLoad;\n   // this.setGridComponent = _logic.setGridComponent;\n   // this.setFilename = _logic.setFilename;\n   // this.setHiddenFields = _logic.setHiddenFields;\n   // this.show = _logic.show;\n}\n","/*\n * ABViewGridPopupMassUpdate\n *\n * An ABViewGrid can offer a mass update feature.  This is a ui component\n * to help with the processing of the update.\n *\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\nimport RowUpdater from \"../RowUpdater\";\n\nvar L = null;\n\nexport default class ABViewGridPopupMassUpdate extends ClassUI {\n   //.extend(idBase, function(App) {\n\n   constructor(ABViewGridComponent, idBase) {\n      idBase = idBase || \"abviewgridpopupMassUpdate\";\n\n      super({\n         component: `${idBase}_popupMassUpdate`,\n         submit: `${idBase}_submitMassUpdate`,\n      });\n\n      this.CurrentObject = null;\n      // {ABObject}\n      // Which ABObject are we currently working with.\n\n      this.GridComponent = ABViewGridComponent;\n      // {ABViewGridComponent}\n      // The current ABViewGridComponent we are working with.\n\n      this.AB = ABViewGridComponent.AB;\n      // {ABFactory}\n\n      this.rowUpdater = new RowUpdater(idBase, this.AB);\n      // {RowUpdater}\n      // An instance of our RowUpdater form builder.\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   ui() {\n      var ids = this.ids;\n\n      // Our webix UI definition:\n      return {\n         view: \"popup\",\n         id: ids.component,\n         // modal: true,\n         body: {\n            width: 500,\n            rows: [\n               // Update panel\n               this.rowUpdater.ui(),\n               { height: 15 },\n               {\n                  cols: [\n                     {},\n                     {\n                        view: \"button\",\n                        value: L(\"Cancel\"),\n                        width: 100,\n                        click: () => {\n                           this.hide();\n                        },\n                     },\n                     {\n                        id: ids.submit,\n                        css: \"webix_primary\",\n                        view: \"button\",\n                        label: L(\"Update\"),\n                        type: \"form\",\n                        width: 120,\n                        click: () => {\n                           this.submit();\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n         on: {\n            onShow: () => {\n               this.onShow();\n            },\n         },\n      };\n   }\n\n   async init(AB) {\n      webix.ui(this.ui());\n      this.rowUpdater.init(AB);\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method hide()\n    * Hide the popup.\n    */\n   hide() {\n      $$(this.ids.component).hide();\n   }\n\n   /**\n    * @function objectLoad\n    * Ready the Popup according to the current object & datatable\n    * @param {ABObject} object\n    *        the currently selected object.\n    * @param {webix.datatable} dataTable\n    *        the dataTable we need to run the mass update on...trust me this\n    *        will be good\n    */\n   objectLoad(object, dataTable) {\n      this.CurrentObject = object;\n      this.rowUpdater.objectLoad(object);\n      this.DataTable = dataTable;\n   }\n\n   onShow() {}\n\n   /**\n    * @method show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    * @param {json} options\n    *        Additional webix options related to the .show() method.\n    */\n   show($view, options = null) {\n      if (options != null) {\n         $$(this.ids.component).show($view, options);\n      } else {\n         $$(this.ids.component).show($view);\n      }\n   }\n\n   /**\n    * @method submit()\n    * Process the submit action by getting the values to change and then\n    * running a batchUpdate() on the items in our datatable that were selected.\n    */\n   submit() {\n      // Update values to records\n      let update_button = $$(this.ids.submit),\n         update_items = this.rowUpdater.getValue() || [];\n\n      update_button.disable();\n\n      if (!this.GridComponent) {\n         // TODO : Message\n         // console.log(\"no data collection to update\");\n         update_button.enable();\n         return;\n      } else if (update_items.length < 1) {\n         // TODO : Message\n         update_button.enable();\n         return;\n      }\n\n      let $datatable = this.GridComponent.getDataTable(); // $$(DataTable.ui.id);\n      let updatedRowIds = [];\n      $datatable.data.each(function (row) {\n         if (\n            row &&\n            row.hasOwnProperty(\"appbuilder_select_item\") &&\n            row.appbuilder_select_item == 1\n         ) {\n            updatedRowIds.push(row.id);\n         }\n      });\n\n      let vals = {};\n      update_items.forEach((item) => {\n         let fieldInfo = this.CurrentObject.fieldByID(item.fieldId);\n         if (!fieldInfo) return;\n\n         vals[fieldInfo.columnName] = item.value;\n      });\n\n      if (updatedRowIds.length > 0) {\n         webix.confirm({\n            title: L(\"Updating Multiple Records\"),\n            text: L(\"Are you sure you want to update the selected records?\"),\n            callback: (result) => {\n               if (result) {\n                  if ($datatable && $datatable.showProgress)\n                     $datatable.showProgress({ type: \"icon\" });\n\n                  let objModel = this.CurrentObject.model();\n                  objModel\n                     .batchUpdate({\n                        rowIds: updatedRowIds,\n                        values: vals,\n                     })\n                     .then(() => {\n                        // Anything we need to do after we are done.\n                        update_button.enable();\n                        this.hide();\n\n                        if ($datatable && $datatable.hideProgress)\n                           $datatable.hideProgress();\n                     })\n                     .catch((err) => {\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewGridPopupMassUpdate:submit(): Error during batchUpdate\",\n                           rowIds: updatedRowIds,\n                           values: vals,\n                        });\n                     });\n               } else {\n                  update_button.enable();\n               }\n            },\n         });\n      } else {\n         webix.alert({\n            title: L(\"No Records Selected\"),\n            text: L(\n               \"You need to select at least one record...did you drink your coffee today?\"\n            ),\n         });\n         update_button.enable();\n         this.hide();\n      }\n   }\n}\n","import ABViewComponent from \"./ABViewComponent\";\nimport ABPopupExport from \"../ABViewGridPopupExport\";\nimport ABPopupMassUpdateClass from \"../ABViewGridPopupMassUpdate\";\nimport ABPopupSortField from \"../ABViewGridPopupSortFields\";\n\nexport default class ABViewGridComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewGrid_${baseView.id}`,\n         Object.assign(\n            {\n               table: \"\",\n\n               // component: `${base}_component`,\n               toolbar: \"\",\n               buttonDeleteSelected: \"\",\n\n               buttonFilter: \"\",\n               buttonMassUpdate: \"\",\n               buttonSort: \"\",\n               buttonExport: \"\",\n\n               globalSearchToolbar: \"\",\n\n               datatable: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_filterData = (fnFilter, filterRules) => {\n         this.callbackFilterData(fnFilter, filterRules); // be notified when there is a change in the filter\n      };\n\n      this.handler_select = (...params) => {\n         this.selectRow(...params);\n      };\n      // {fn} .handler_select\n      // the callback fn for our selectRow()\n      // We want this called when the .datacollection we are linked to\n      // emits an \"onChange\" event.\n\n      this.detatch();\n      baseView.filterHelper.on(\"filter.data\", this._handler_filterData);\n\n      // derive these from viewGrid\n      this.id = baseView.id;\n\n      /////\n      ///// For TEsting:\n      /////\n      // this.settings.showToolbar = 1;\n      // this.settings.isEditable = 1;\n      // this.settings.isExportable = 1;\n      // this.settings.gridFilter = {\n      //    filterOption: 1,\n      //    userFilterPosition: \"form\",\n      //    isGlobalToolbar: 1,\n      // };\n\n      // this.settings.detailsPage = \"some-uuid\";\n      // this.settings.detailTab = \"some_uuid_2\";\n      // this.settings.trackView = 1;\n      /////\n      ///// end testing\n      /////\n\n      this.columnSplitLeft = 0;\n      // {integer}\n      // Which column to \"split\"/\"freeze\" from the left side of the grid.\n\n      this.columnSplitRight = 0;\n      // {integer}\n      // The # columns to the right to freeze.\n\n      // this.datacollection = null;\n      // // {ABDataCollection}\n      // // The Webix DataCollection that manages the data we are displaying.\n\n      this.validationError = false;\n      // {bool}\n      // Has a Validation Error occured?\n\n      this.linkPage = baseView.linkPageHelper.component();\n      // {ABViewPropertyLinkPage}\n      //\n\n      const idTable = this.ids.table;\n      const ab = this.AB;\n\n      this.PopupExport = new ABPopupExport(idTable);\n      this.PopupExport.init(ab);\n      // {ABViewGridPopupExport}\n      // Popup for managing how to export our data.\n\n      this.PopupMassUpdateComponent = new ABPopupMassUpdateClass(this, idTable);\n      this.PopupMassUpdateComponent.init(ab);\n      // this.PopupMassUpdateComponent.on(\"\")\n      // {}\n      // The popup for performing a Mass Edit operation.\n\n      this.PopupSortDataTableComponent = new ABPopupSortField(idTable);\n      this.PopupSortDataTableComponent.init(ab);\n      this.PopupSortDataTableComponent.on(\"changed\", (sortOptions) => {\n         this.callbackSortData(sortOptions);\n      });\n      // {ABViewGridPopupSortFields}\n      // The popup for adding sort criteria to our grid.\n\n      this.skippableColumns = [\n         \"appbuilder_select_item\",\n         \"appbuilder_view_detail\",\n         \"appbuilder_view_track\",\n         \"appbuilder_view_edit\",\n         \"appbuilder_trash\",\n      ];\n      // {array}\n      // An array of column names that should be skipped from some of our\n      // event handlers.\n\n      // this.EditField = null;\n      // // {ABFieldXXX}\n      // // Which ABField is the focus of our PopupHeader menu?\n\n      // this.EditNode = null;\n      // // {HTML DOM}\n      // // The webix.$node where the ABField Header is that our PopupHeader\n      // // should be displayed at.\n\n      this.ignoreLocalSettings = false;\n      // {bool}\n      // should we ignore our local settings in our current context?\n      // (used in ABDesigner when our settings will change as we need to\n      // use those instead of the saved settings.)\n\n      this._gridSettings = null;\n      // {hash} { grid.id : [ {columnHeader}, {columnHeader} ...]}\n      // Keep a global copy of our local Grid settings, so we can optimize the header\n      // sizes.\n\n      this._isDatacollectionLoaded = false;\n   }\n\n   // {string}\n   // the unique key for ABViewGrids to store/retrieve their local settings\n   get keyStorageSettings() {\n      return \"abviewgrid_settings\";\n   }\n\n   detatch() {\n      this.view.filterHelper.removeAllListeners(\"filter.data\");\n      this.datacollection?.removeListener(\"changeCursor\", this.handler_select);\n   }\n\n   /**\n    * @method getColumnIndex()\n    * return the Datatable.getColumnIndex() value\n    * @param {string} id\n    *        the uuid of the column we are referencing.\n    * @return {integer}\n    */\n   getColumnIndex(id) {\n      let indx = this.getDataTable().getColumnIndex(id);\n      if (!this.settings.massUpdate) {\n         // the index is 0 based. So if the massUpdate feature isn't\n         // enabled, we need to add 1 to the result so they look like\n         // a 1, 2, ...\n\n         indx++;\n      }\n      return indx;\n   }\n\n   uiDatatable() {\n      const ids = this.ids;\n      const settings = this.settings;\n      const self = this;\n\n      let view = \"datatable\";\n\n      if (settings.isTreeDatable || settings.groupBy)\n         // switch datatable to support tree\n         view = \"treetable\";\n\n      let selectType = \"cell\";\n\n      if (!settings.isEditable && (settings.detailsPage || settings.editPage))\n         selectType = \"row\";\n\n      return {\n         view,\n         id: ids.datatable,\n         resizeColumn: { size: 10 },\n         resizeRow: { size: 10 },\n         prerender: false,\n         editable: settings.isEditable,\n         fixedRowHeight: false,\n         height: settings.height || 0,\n         editaction: \"custom\",\n         select: selectType,\n         footer:\n            // show footer when there are summary columns\n            settings.summaryColumns.length > 0 ||\n            settings.countColumns.length > 0,\n         tooltip: true,\n         // tooltip: {\n         //    // id: ids.tooltip,\n         //    template: (obj, common) => {\n         //       return this.toolTip(obj, common);\n         //    },\n         //    on: {\n         //       // When showing a larger image preview the tooltip sometime displays part of the image off the screen...this attempts to fix that problem\n         //       onBeforeRender: function () {\n         //          self.toolTipOnBeforeRender(this.getNode());\n         //       },\n         //       onAfterRender: function (data) {\n         //          self.toolTipOnAfterRender(this.getNode());\n         //       },\n         //    },\n         // },\n         dragColumn: true,\n         on: {\n            onBeforeSelect: function (data, preserve) {\n               if (self.skippableColumns.indexOf(data.column) != -1) {\n                  return false;\n               } else if (settings.isEditable) {\n                  const currObject = self.datacollection.datasource;\n                  const selectField = currObject.fields(\n                     (f) => f.columnName === data.column\n                  )[0];\n\n                  if (selectField == null) return true;\n\n                  const cellNode = this.getItemNode({\n                        row: data.row,\n                        column: data.column,\n                     }),\n                     rowData = this.getItem(data.row);\n\n                  return selectField.customEdit(rowData, null, cellNode);\n               } else if (!settings.detailsPage && !settings.editPage)\n                  return false;\n            },\n            onAfterSelect: (data, preserve) => {\n               // {ABObject} data\n               //            the selected object\n               // {bool} prevent\n               //        indicates whether the previous selection state should\n               //        be saved. (is multiselect and they are holding SHIFT)\n               if (this.settings.isEditable) {\n                  this.onAfterSelect(data, preserve);\n               }\n            },\n            onBeforeEditStart: function (id) {\n               if (!this.getItem(id) == \"appbuilder_select_item\") return false;\n            },\n            onCheck: function (row, col, val) {\n               // Update checkbox data\n               if (col == \"appbuilder_select_item\") {\n                  // do nothing because we will parse the table once we decide\n                  // if we are deleting or updating rows\n                  self.toggleUpdateDelete();\n               } else {\n                  if (settings.isEditable) {\n                     // if the colum is not the select item column move on to\n                     // the next step to save\n                     const state = {\n                        value: val,\n                     };\n                     const editor = {\n                        row: row,\n                        column: col,\n                        config: null,\n                     };\n\n                     self.onAfterEditStop(state, editor);\n                  } else {\n                     const node = this.getItemNode({\n                        row: row,\n                        column: col,\n                     });\n                     const checkbox = node.querySelector(\n                        'input[type=\"checkbox\"]'\n                     );\n\n                     if (val == 1) {\n                        checkbox.checked = false;\n                     } else {\n                        checkbox.checked = true;\n                     }\n                  }\n               }\n            },\n            onBeforeEditStop: function (state, editor) {\n               // console.warn(\"!! ToDo: onBeforeEditStop()\");\n            },\n            onAfterEditStop: (state, editor, ignoreUpdate) => {\n               if (this.validationError == false)\n                  this.onAfterEditStop(state, editor, ignoreUpdate);\n            },\n            onValidationError: function () {\n               this.validationError = true;\n            },\n            onValidationSuccess: function () {\n               this.validationError = false;\n            },\n\n            // We are sorting with server side requests now so we can remove this\n            // onAfterLoad: function () {\n            //    _logic.onAfterLoad();\n            // },\n            onColumnResize: function (\n               columnName,\n               newWidth,\n               oldWidth,\n               user_action\n            ) {\n               // if we resize the delete column we want to resize the last\n               // column but Webix will not allow since the column is split\n               const rightSplitItems = [\n                  \"appbuilder_view_detail\",\n                  \"appbuilder_view_track\",\n                  \"appbuilder_view_edit\",\n                  \"appbuilder_trash\",\n               ];\n\n               if (rightSplitItems.indexOf(columnName) != -1) {\n                  // Block events so we can leave the delete column alone\n                  this.blockEvent();\n                  // keeps original width\n                  this.setColumnWidth(columnName, oldWidth);\n                  this.unblockEvent();\n                  // Listen to events again\n\n                  // find the last column's config\n                  const column = self.getLastColumn();\n\n                  columnName = column.id;\n\n                  // determine if we are making the column larger or smaller\n                  if (newWidth < oldWidth) {\n                     newWidth = column.width + 40;\n                     // add 40 because there is not any more space to drag so we\n                     // will allow 40px increments\n                  } else {\n                     newWidth = column.width - (newWidth - 40);\n                     // take the column's width and subtrack the difference of\n                     // the expanded delet column drag\n                  }\n                  // we don't want columns to be smaller than 50 ?? do we ??\n                  // I could be wrong maybe a checkbox could be smaller so this\n                  // could change\n                  if (newWidth < 50) {\n                     newWidth = 50;\n                  }\n                  // minWidth is important because we are using fillspace:true\n                  column.minWidth = newWidth;\n                  // Sets the UI\n                  this.setColumnWidth(columnName, newWidth);\n               }\n               // Saves the new width\n               if (user_action) {\n                  self.onColumnResize(\n                     columnName,\n                     newWidth,\n                     oldWidth,\n                     user_action\n                  );\n               }\n            },\n            onRowResize: (rowId) => {\n               // V2: we no longer do anything onRowResize()\n               // before we saved the row height in the record.\n               // this.onRowResize(rowId);\n            },\n            onBeforeColumnDrag: (sourceId, event) =>\n               !(this.skippableColumns.indexOf(sourceId) !== -1),\n            onBeforeColumnDrop: (sourceId, targetId, event) =>\n               // Make sure we are not trying to drop onto one of our special\n               // columns ...\n               !(this.skippableColumns.indexOf(targetId) !== -1),\n            onAfterColumnDrop: (sourceId, targetId, event) =>\n               this.onAfterColumnDrop(sourceId, targetId, event),\n            // onAfterColumnShow: function (id) {\n            //    // console.warn(\"!! ToDo: onAfterColumnShow()\");\n            //    // $$(self.webixUiId.visibleFieldsPopup).showField(id);\n            // },\n            // onAfterColumnHide: function (id) {\n            //    // console.warn(\"!! ToDo: onAfterColumnHide()\");\n            //    // $$(self.webixUiId.visibleFieldsPopup).hideField(id);\n            // },\n\n            onHeaderClick: (id, e, node) => {\n               /* if (settings.configureHeaders) */\n               this.onHeaderClick(id, e, node);\n            },\n         },\n      };\n   }\n\n   uiFilter() {\n      return this.view.filterHelper.ui();\n\n      // make sure onFilterData is now .emit()ed instead of passing in a callback.\n   }\n\n   /**\n    * @method uiToolbar()\n    * Return the webix definition for the toolbar row for our Grids.\n    * @return {json}\n    */\n   uiToolbar() {\n      const ids = this.ids;\n      const self = this;\n\n      return {\n         view: \"toolbar\",\n         id: ids.toolbar,\n         hidden: true,\n         css: \"ab-data-toolbar\",\n         cols: [\n            {\n               view: \"button\",\n               id: ids.buttonMassUpdate,\n               css: \"webix_transparent\",\n               label: this.label(\"Edit\"),\n               icon: \"fa fa-pencil-square-o\",\n               type: \"icon\",\n               disabled: true,\n               autowidth: true,\n               click: function () {\n                  self.toolbarMassUpdate(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonDeleteSelected,\n               css: \"webix_transparent\",\n               label: this.label(\"Delete\"),\n               icon: \"fa fa-trash\",\n               type: \"icon\",\n               disabled: true,\n               autowidth: true,\n               click: function () {\n                  self.toolbarDeleteSelected(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonFilter,\n               css: \"webix_transparent\",\n               label: this.label(\"Filters\"),\n               icon: \"fa fa-filter\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarFilter(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonSort,\n               css: \"webix_transparent\",\n               label: this.label(\"Sort\"),\n               icon: \"fa fa-sort\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarSort(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonExport,\n               css: \"webix_transparent\",\n               label: this.label(\"Export\"),\n               icon: \"fa fa-print\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarExport(this.$view);\n               },\n            },\n            {},\n            {\n               id: ids.globalSearchToolbar,\n               view: \"search\",\n               placeholder: this.label(\"Search...\"),\n               on: {\n                  onTimedKeyPress: () => {\n                     const searchText = $$(ids.globalSearchToolbar).getValue();\n\n                     this.view.filterHelper.externalSearchText(searchText);\n                  },\n               },\n            },\n         ],\n      };\n   }\n\n   ui() {\n      const _uiGrid = {\n         id: this.ids.table,\n         type: \"space\",\n         borderless: true,\n         rows: [\n            {},\n            {\n               view: \"label\",\n               label: this.label(\"Select an object to load.\"),\n               inputWidth: 200,\n               align: \"center\",\n            },\n            {},\n         ],\n      };\n\n      const settings = this.settings;\n\n      if (this.datacollection || settings.dataviewID !== \"\") {\n         _uiGrid.padding = settings.padding;\n         _uiGrid.rows = [];\n         if (settings.showToolbar) {\n            _uiGrid.rows.push(this.uiToolbar());\n         }\n         if (this.settings.gridFilter.filterOption) {\n            _uiGrid.rows.push(this.uiFilter());\n         }\n\n         _uiGrid.rows.push(this.uiDatatable());\n      }\n\n      const _ui = super.ui([_uiGrid]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel = 2) {\n      if (AB) await super.init(AB);\n\n      const self = this;\n      const ids = this.ids;\n\n      // WORKAROUND : Where should we define this ??\n      // For include PDF.js\n      const abWebix = AB.Webix;\n\n      abWebix.codebase = \"\";\n      abWebix.cdn = \"/js/webix\";\n\n      // this shows the options to Hide, Filter, sort , etc...\n      // only in Designer?\n      // PopupHeaderEditComponent.init({\n      //    onClick: _logic.callbackHeaderEdit, // be notified when there is a change in the hidden fields\n      // });\n\n      // NOTE: register the onAfterRender() here, so it only registers\n      // one.\n      const $DataTable = this.getDataTable();\n\n      let throttleCustomDisplay = null;\n      let scrollStarted = null;\n\n      if (!$DataTable) return;\n\n      abWebix.extend($DataTable, abWebix.ProgressBar);\n\n      $DataTable.config.accessLevel = accessLevel;\n\n      if (accessLevel < 2) $DataTable.define(\"editable\", false);\n\n      const settings = this.settings;\n\n      const customDisplays = (data) => {\n         const CurrentObject = this.datacollection?.datasource;\n\n         if (!CurrentObject || !$DataTable.data) return;\n\n         const displayRecords = [];\n\n         const verticalScrollState = $DataTable.getScrollState().y,\n            rowHeight = $DataTable.config.rowHeight,\n            height =\n               $DataTable.$view.querySelector(\".webix_ss_body\").clientHeight,\n            startRecIndex = Math.floor(verticalScrollState / rowHeight),\n            endRecIndex = startRecIndex + $DataTable.getVisibleCount();\n\n         let index = 0;\n\n         $DataTable.data.order.each((id) => {\n            if (id != null && startRecIndex <= index && index <= endRecIndex)\n               displayRecords.push(id);\n\n            index++;\n         });\n\n         let editable = settings.isEditable;\n\n         if ($DataTable.config.accessLevel < 2) editable = false;\n\n         CurrentObject.customDisplays(\n            data,\n            this.AB._App,\n            $DataTable,\n            displayRecords,\n            editable\n         );\n      };\n\n      $DataTable.attachEvent(\"onAfterRender\", function (data) {\n         $DataTable.resize();\n\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         throttleCustomDisplay = setTimeout(() => {\n            if (scrollStarted) clearTimeout(scrollStarted);\n            customDisplays(this.data);\n         }, 350);\n\n         AB.ClassUI.CYPRESS_REF($DataTable);\n         Object.keys(ids).forEach((key) => {\n            const $el = $$(ids[key]);\n            if ($el) {\n               AB.ClassUI.CYPRESS_REF($el);\n            }\n         });\n      });\n\n      // we have some data types that have custom displays that don't look\n      // right after scrolling large data sets we need to call customDisplays\n      // again\n      $DataTable.attachEvent(\"onScroll\", function () {\n         if (scrollStarted) clearTimeout(scrollStarted);\n\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         scrollStarted = setTimeout(() => {\n            customDisplays(this.data);\n         }, 1500);\n      });\n      $DataTable.attachEvent(\"onAfterScroll\", function () {\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         throttleCustomDisplay = setTimeout(() => {\n            if (scrollStarted) clearTimeout(scrollStarted);\n            customDisplays(this.data);\n         }, 350);\n      });\n\n      // Process our onItemClick events.\n      // this is a good place to check if our delete/trash icon was clicked.\n      $DataTable.attachEvent(\"onItemClick\", function (id, e, node) {\n         // make sure we have an object selected before processing this.\n         const dc = self.datacollection;\n         const CurrentObject = dc?.datasource;\n\n         if (!CurrentObject) return;\n\n         if (settings.isEditable === 0) {\n            const items = $DataTable.getItem(id);\n         }\n         // if this was our edit icon:\n         // console.log(e.target.className);\n         if (e === \"auto\" || e.target.className.indexOf(\"eye\") > -1) {\n            // View a Details Page:\n            self.changePage(dc, id, settings.detailsPage);\n            self.toggleTab(settings.detailsTab, this);\n         } else if (e.target.className.indexOf(\"pencil\") > -1) {\n            self.changePage(dc, id, settings.editPage);\n            self.toggleTab(settings.editTab, this);\n         } else if (e.target.className.indexOf(\"track\") > -1)\n            self.emit(\"object.track\", CurrentObject, id.row);\n         // App.actions.openObjectTrack(CurrentObject, id.row);\n         else if (e.target.className.indexOf(\"clear-combo-value\") > -1) {\n            const clearValue = {};\n\n            clearValue[id.column] = \"\";\n\n            const updateRow = async () => {\n               try {\n                  const response = await CurrentObject.model().update(\n                     id.row,\n                     clearValue\n                  );\n\n                  // console.log(response);\n               } catch (err) {\n                  self.AB.notify.developer(err, {\n                     context: \"ABViewGridComponent.onItemClick\",\n                     message: \"Error updating item\",\n                     obj: CurrentObject.toObj(),\n                     id: id.row,\n                  });\n               }\n            };\n\n            updateRow();\n         }\n         // if this was our trash icon:\n         else if (e.target.className.indexOf(\"trash\") > -1)\n            abWebix.confirm({\n               title: self.label(\"Delete data\"),\n               text: self.label(\"Do you want to delete this row?\"),\n               callback: function (result) {\n                  if (result) {\n                     const deleteRow = async () => {\n                        try {\n                           const response = await CurrentObject.model().delete(\n                              id.row\n                           );\n\n                           if (response.numRows > 0) {\n                              $DataTable.remove(id);\n                              $DataTable.clearSelection();\n                           } else\n                              abWebix.alert({\n                                 text: self.label(\n                                    \"No rows were effected.  This does not seem right.\"\n                                 ),\n                              });\n                        } catch (err) {\n                           self.AB.notify.developer(err, {\n                              context: \"ABViewGridComponent.onItemClick\",\n                              message: \"Error deleting item\",\n                              obj: CurrentObject.toObj(),\n                              id: id.row,\n                           });\n\n                           //// TODO: what do we do here?\n                        }\n                     };\n\n                     deleteRow();\n                  }\n\n                  $DataTable.clearSelection();\n\n                  return true;\n               },\n            });\n         else if (settings.detailsPage.length) {\n            // If an icon wasn't selected but a details page is set\n            // view the details page\n            self.changePage(dc, id, settings.detailsPage);\n            self.toggleTab(settings.detailsTab, this);\n         } else if (settings.editPage.length) {\n            // If an icon wasn't selected but an edit page is set\n            // view the edit page\n            self.changePage(dc, id, settings.editPage);\n            self.toggleTab(settings.editTab, this);\n         }\n      });\n\n      // ABViewGrid Original init();\n      if (settings.showToolbar) {\n         if (\n            settings.massUpdate ||\n            settings.isSortable ||\n            settings.isExportable ||\n            (settings.gridFilter &&\n               settings.gridFilter.filterOption &&\n               settings.gridFilter.userFilterPosition === \"toolbar\")\n         )\n            $$(ids.toolbar).show();\n\n         if (!settings.massUpdate) {\n            $$(ids.buttonMassUpdate).hide();\n            $$(ids.buttonDeleteSelected).hide();\n         }\n\n         if (!settings.allowDelete) $$(ids.buttonDeleteSelected).hide();\n\n         if (settings.gridFilter) {\n            if (\n               settings.gridFilter.filterOption !== 1 ||\n               settings.gridFilter.userFilterPosition !== \"toolbar\"\n            )\n               $$(ids.buttonFilter).hide();\n\n            if (\n               settings.gridFilter.filterOption === 3 &&\n               settings.gridFilter.globalFilterPosition === \"single\"\n            )\n               $DataTable.hide();\n\n            if (settings.gridFilter.isGlobalToolbar)\n               $$(ids.globalSearchToolbar).show();\n            else $$(ids.globalSearchToolbar).hide();\n\n            if (settings.gridFilter.filterOption)\n               this.view.filterHelper.init(this.AB);\n         }\n\n         if (!settings.isSortable) $$(ids.buttonSort).hide();\n\n         if (!settings.isExportable) $$(ids.buttonExport).hide();\n      }\n\n      if (settings.hideHeader) this.hideHeader();\n\n      const dc =\n         this.datacollection || this.AB.datacollectionByID(settings.dataviewID);\n\n      if (!this._isDatacollectionLoaded) this.datacollectionLoad(dc);\n\n      // Make sure\n      this._gridSettings =\n         this._gridSettings ||\n         (await this.AB.Storage.get(this.keyStorageSettings)) ||\n         {};\n\n      if (dc?.datasource) {\n         // TRANSITION: ABViewGrid_orig line 862 ...\n\n         this.linkPage.init({\n            view: this.view,\n            datacollection: dc,\n         });\n\n         this.refreshHeader();\n      }\n   }\n\n   /**\n    * @method busy()\n    * Indicate that our datatable is currently busy loading/processing\n    * data.\n    */\n   busy() {\n      this.getDataTable()?.showProgress?.({ type: \"icon\" });\n   }\n\n   /**\n    * @method callbackFilterData()\n    * Process the provided filter options from our filterHelper.\n    * @param {fn} fnFilter\n    *        A function that returns true/false for each row of data\n    *        to determine if is should exist.\n    * @param {array} filterRules\n    *        Any Filter Rules added by the user.\n    */\n   callbackFilterData(fnFilter, filterRules = []) {\n      const ids = this.ids;\n      const $ButtonFilter = $$(ids.buttonFilter);\n\n      if ($ButtonFilter) {\n         const onlyFilterRules = this.view.filterHelper.filterRules();\n\n         $ButtonFilter.define(\"badge\", onlyFilterRules?.rules?.length ?? 0);\n         $ButtonFilter.refresh();\n      }\n\n      const dc = this.datacollection;\n\n      dc.filterCondition(filterRules);\n      dc.reloadData();\n   }\n\n   async callbackSortData(sortRules = []) {\n      const $buttonSort = $$(this.ids.buttonSort);\n\n      $buttonSort.define(\"badge\", sortRules.length || null);\n      $buttonSort.refresh();\n\n      const gridElem = this.getDataTable();\n\n      if (gridElem.data.find({}).length < gridElem.data.count()) {\n         try {\n            // NOTE: Webix's client sorting does not support dynamic loading.\n            // If the data does not be loaded, then load all data.\n            await this.datacollection.reloadData(0, 0);\n         } catch (err) {\n            this.AB.notify.developer(err, {\n               context:\n                  \"ABViewGrid:callbackSortData(): Error perform datacollection.reloadData()\",\n            });\n         }\n      }\n\n      // wait until the grid component will done to repaint UI\n      setTimeout(() => {\n         gridElem.sort((a, b) => this.PopupSortDataTableComponent.sort(a, b));\n      }, 777);\n   }\n\n   /**\n    * @method changePage()\n    * Helper method to switch to another View.\n    * @param {ABDataCollection} dv\n    *        The DataCollection we are working with.\n    * @param {obj} rowItem\n    *        the { row:#, column:{string} } of the item that was clicked.\n    * @param {ABViewPage.uuid} page\n    *        The .uuid of the ABViewPage/ABViewTab we are to swtich to.\n    *\n    */\n   changePage(dv, rowItem, page) {\n      const rowId = rowItem?.row ?? null;\n\n      // Set cursor to data view\n      if (dv) dv.setCursor(rowId);\n\n      // Pass settings to link page module\n      if (this.linkPage) this.linkPage.changePage(page, rowId);\n\n      super.changePage(page);\n   }\n\n   columnConfig(headers = []) {\n      this.settings.columnConfig = headers;\n   }\n   /**\n    * @method datacollectionLoad()\n    * Assign an ABDataCollection to this component to use instead of any\n    * provided .dataviewID in our settings.\n    * NOTE: this primarily happens in the ABDesigner's Object Workspace.\n    * @param {ABDataCollection} dc\n    */\n   datacollectionLoad(dc) {\n      const oldDC = this.datacollection;\n      this.datacollection = dc;\n\n      const CurrentObject = dc?.datasource;\n      const $DataTable = this.getDataTable();\n\n      if ($DataTable) {\n         // preventing too many handlers\n         if (!this.__handler_dc_busy) {\n            this.__handler_dc_busy = () => {\n               this.busy();\n            };\n\n            this.__handler_dc_ready = () => {\n               this.ready();\n               this.populateGroupData();\n            };\n\n            this.__handler_dc_loadData = () => {\n               this.populateGroupData();\n            };\n         }\n\n         if (oldDC) {\n            // remove our listeners from the previous DC\n            oldDC.removeListener(\"initializingData\", this.__handler_dc_busy);\n            oldDC.removeListener(\"initializedData\", this.__handler_dc_ready);\n            oldDC.removeListener(\"loadData\", this.__handler_dc_loadData);\n         }\n\n         if (dc) {\n            if (dc.datacollectionLink && dc.fieldLink)\n               dc.bind($DataTable, dc.datacollectionLink, dc.fieldLink);\n            else dc.bind($DataTable);\n\n            // making sure we only have 1 registered listener on this dc\n            dc.removeListener(\"initializingData\", this.__handler_dc_busy);\n            dc.on(\"initializingData\", this.__handler_dc_busy);\n            dc.removeListener(\"initializedData\", this.__handler_dc_ready);\n            dc.on(\"initializedData\", this.__handler_dc_ready);\n            dc.removeListener(\"loadData\", this.__handler_dc_loadData);\n            dc.on(\"loadData\", this.__handler_dc_loadData);\n            this.grouping();\n\n            this._isDatacollectionLoad = true;\n         } else $DataTable.unbind();\n\n         // Be sure to pass on our CurrentObject to our dependent components.\n         if (CurrentObject) {\n            this.view.filterHelper.objectLoad(CurrentObject);\n            this.PopupMassUpdateComponent.objectLoad(\n               CurrentObject,\n               this.getDataTable()\n            );\n            this.PopupSortDataTableComponent.objectLoad(CurrentObject);\n\n            this.PopupExport.objectLoad(CurrentObject);\n            this.PopupExport.dataCollectionLoad(dc);\n            this.PopupExport.setGridComponent(this.getDataTable());\n            this.PopupExport.setHiddenFields(this.settings.hiddenFields);\n            this.PopupExport.setFilename(this.view.label);\n         }\n      }\n   }\n\n   /**\n    * @function enableUpdateDelete\n    *\n    * disable the update or delete buttons in the toolbar if there no items selected\n    * we will make this externally accessible so we can call it from within the datatable component\n    */\n   disableUpdateDelete() {\n      $$(this.ids.buttonMassUpdate)?.disable();\n      $$(this.ids.buttonDeleteSelected)?.disable();\n      // externally indicate that no rows are selected\n      this.emit(\"selection.cleared\");\n   }\n\n   /**\n    * @function enableUpdateDelete\n    *\n    * enable the update or delete buttons in the toolbar if there are any items selected\n    * we will make this externally accessible so we can call it from within the datatable component\n    */\n   enableUpdateDelete() {\n      $$(this.ids.buttonMassUpdate)?.enable();\n      $$(this.ids.buttonDeleteSelected)?.enable();\n      // externally indicate that a row has been selected\n      this.emit(\"selection\");\n   }\n\n   freezeDeleteColumn() {\n      // we are going to always freeze the delete column if the datatable\n      // is wider than the container so it is easy to get to\n      return this.getDataTable().define(\"rightSplit\", this.columnSplitRight);\n   }\n\n   /**\n    * @method getDataTable()\n    * return the webix grid component.\n    * @return {webix.grid}\n    */\n   getDataTable() {\n      return $$(this.ids.datatable);\n   }\n\n   /**\n    * @method getLastColumn\n    * return the last column of a datagrid that is resizeable\n    */\n   getLastColumn() {\n      const $DataTable = this.getDataTable();\n\n      let lastColumn = {};\n\n      // Loop through each columns config to find out if it is in the split 1 region and set it as the last item...then it will be overwritten by next in line\n      $DataTable.eachColumn((columnId) => {\n         const columnConfig = $DataTable.getColumnConfig(columnId);\n\n         if (columnConfig.split === 1) lastColumn = columnConfig;\n      });\n\n      return lastColumn;\n   }\n\n   /**\n    * @method grouping()\n    * perform any grouping operations\n    */\n   grouping() {\n      if (!this.settings.groupBy) return;\n\n      const $treetable = this.getDataTable();\n\n      // map: {\n      //     votes:[\"votes\", \"sum\"],\n      //     title:[\"year\"]\n      // }\n      const baseGroupMap = {};\n      const CurrentObject = this.datacollection.datasource;\n\n      CurrentObject.fields().forEach((f) => {\n         switch (f.key) {\n            case \"number\":\n               baseGroupMap[f.columnName] = [f.columnName, \"sum\"];\n\n               break;\n\n            case \"calculate\":\n            case \"formula\":\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  (prop, listData) => {\n                     if (!listData) return 0;\n\n                     let sum = 0;\n\n                     listData.forEach((r) => {\n                        // we only want numbers returned so pass `true` as third param\n                        // to signify that this is part of a grouping row\n                        sum += f.format(r, false, true) * 1;\n                     });\n\n                     // simulate reformat from ABFieldFormulaCore\n                     if (!f.fieldLink || f.fieldLink.key === \"calculate\")\n                        return sum;\n                     else {\n                        const rowDataFormat = {};\n\n                        rowDataFormat[f.fieldLink.columnName] = sum;\n\n                        return f.fieldLink.format(rowDataFormat);\n                     }\n                  },\n               ];\n\n               break;\n\n            case \"connectObject\":\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  (prop, listData) => {\n                     if (!listData || !listData.length) return 0;\n\n                     let count = 0;\n\n                     listData.forEach((r) => {\n                        const valRelation = r[f.relationName()];\n\n                        // array\n                        if (valRelation?.length) count += valRelation.length;\n                        // object\n                        else if (valRelation) count += 1;\n                     });\n\n                     return count;\n                  },\n               ];\n\n               break;\n\n            default:\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  function (prop, listData) {\n                     if (!listData || !listData.length) return 0;\n\n                     let count = 0;\n\n                     listData.forEach((r) => {\n                        const val = prop(r);\n\n                        // count only exists data\n                        if (val) count += 1;\n                     });\n\n                     return count;\n                  },\n               ];\n\n               break;\n         }\n      });\n\n      // set group definition\n      // $DataTable.define(\"scheme\", {\n      //    $group: {\n      //       by: settings.groupBy,\n      //       map: groupMap\n      //    }\n      // });\n\n      // NOTE: https://snippet.webix.com/e3a2bf60\n      let groupBys = (this.settings.groupBy || \"\")\n         .split(\",\")\n         .map((g) => g.trim());\n      // Reverse the array NOTE: call .group from child to root\n      groupBys = groupBys.reverse();\n\n      groupBys.forEach((colName, gIndex) => {\n         const groupMap = this.AB.cloneDeep(baseGroupMap);\n\n         let by;\n\n         // Root\n         if (gIndex === groupBys.length - 1) by = colName;\n         // Sub groups\n         else {\n            by = (row) => {\n               let byValue = row[colName];\n\n               for (let i = gIndex + 1; i < groupBys.length; i++) {\n                  byValue = `${row[groupBys[i]]} - ${byValue}`;\n               }\n\n               return byValue;\n            };\n\n            // remove parent group data\n            groupBys.forEach((gColName) => {\n               if (gColName !== colName) groupMap[gColName] = [gColName];\n            });\n         }\n\n         $treetable.data.group({\n            by: by,\n            map: groupMap,\n         });\n      });\n   }\n\n   hideHeader() {\n      const $DataTable = this.getDataTable();\n\n      $DataTable.define(\"header\", false);\n      $DataTable.refresh();\n   }\n\n   /**\n    * @function onAfterColumnDrop\n    * When an editor drops a column to save a new column order\n    * @param {string} sourceId\n    *        the columnName of the item dragged\n    * @param {string} targetId\n    *        the columnName of the item dropped on\n    * @param {event} event\n    */\n   async onAfterColumnDrop(sourceId, targetId, event) {\n      const $DataTable = this.getDataTable();\n      const CurrentObject = this.datacollection.datasource;\n      const settings = this.settings;\n      const columnConfig = this.localSettings();\n\n      // Reorder our current columnConfig\n      // We know what was moved and what item it has replaced/pushed forward\n      // so first we want to splice the item moved out of the array of fields\n      // and store it so we can put it somewhere else\n      let itemMoved = null;\n      let oPos = 0; // original position\n\n      for (let i = 0; i < columnConfig.length; i++)\n         if (columnConfig[i].id == sourceId) {\n            itemMoved = columnConfig[i];\n            columnConfig.splice(i, 1);\n            oPos = i;\n\n            break;\n         }\n      // once we have removed/stored it we can find where its new position\n      // will be by looping back through the array and finding the item it\n      // is going to push forward\n      for (let j = 0; j < columnConfig.length; j++)\n         if (columnConfig[j].id == targetId) {\n            // if the original position was before the new position we will\n            // follow webix's logic that the drop should go after the item\n            // it was placed on\n            if (oPos <= j) j++;\n\n            columnConfig.splice(j, 0, itemMoved);\n\n            break;\n         }\n\n      // special case: dropped on end and need to update .fillspace\n      // if (j == columnConfig.length - 1) {\n      //    if (columnConfig[j - 1].fillspace) {\n      //       columnConfig[j - 1].fillspace = false;\n      //       columnConfig[j].fillspace = true;\n      //    }\n      // }\n\n      // if we allow local changes\n      this.localSettings(columnConfig);\n\n      if (settings.saveLocal) this.localSettingsSave();\n\n      // Now emit this event, in case an external object is wanting to\n      // respond to this: ABDesigner.objectBuilder, Interface  Designer,\n      // we send back an array[ ABField.id, ...] in the order we have\n      // them.\n      this.emit(\n         \"column.order\",\n         columnConfig.map((c) => c.fieldID)\n      );\n\n      this.refreshHeader();\n\n      // CurrentObject.fieldReorder(sourceId, targetId)\n      //    .then(() => {\n      //       // reset each column after a drop so we do not have multiple fillspace and minWidth settings\n      //       var editiable = settings.isEditable;\n      //       if ($DataTable.config.accessLevel < 2) {\n      //          editiable = false;\n      //       }\n      //       var columnHeaders = CurrentObject.columnHeaders(true, editiable);\n      //       columnHeaders.forEach(function (col) {\n      //          if (col.id == sourceId && col.fillspace == true) {\n      //             columnHeader.fillspace = false;\n      //             columnHeader.minWidth = columnHeader.width;\n      //          }\n      //       });\n\n      //       _logic.callbacks.onColumnOrderChange(CurrentObject);\n      //       // freeze columns:\n      //       let frozenColumnID =\n      //          settings.frozenColumnID != null\n      //             ? settings.frozenColumnID\n      //             : CurrentObject.workspaceFrozenColumnID;\n      //       if (frozenColumnID != \"\") {\n      //          $DataTable.define(\n      //             \"leftSplit\",\n      //             $DataTable.getColumnIndex(frozenColumnID) + columnSplitLeft\n      //          );\n      //       } else {\n      //          $DataTable.define(\"leftSplit\", columnSplitLeft);\n      //       }\n      //       _logic.freezeDeleteColumn();\n      //       $DataTable.refreshColumns();\n      //    })\n      //    .catch((err) => {\n      //       OP.Error.log(\"Error saving new column order:\", {\n      //          error: err,\n      //       });\n      //    });\n   }\n\n   /**\n    * @function onAfterEditStop\n    * When an editor is finished.\n    * @param {json} state\n    * @param {} editor\n    * @param {} ignoreUpdate\n    * @return\n    */\n   async onAfterEditStop(state, editor, ignoreUpdate) {\n      // state:   {value: \"new value\", old: \"old value\"}\n      // editor:  { column:\"columnName\", row:ID, value:'value', getInputNode:fn(), config:{}, focus: fn(), getValue: fn(), setValue: function, getInputNode: function, render: function…}\n\n      const $DataTable = this.getDataTable();\n\n      // if you don't edit an empty cell we just need to move on\n      if (\n         (!state.old && state.value === \"\") ||\n         (state.old === \"\" && state.value === \"\")\n      ) {\n         $DataTable.clearSelection();\n\n         return false;\n      }\n\n      if (editor.config)\n         switch (editor.config.editor) {\n            case \"number\":\n               state.value = parseFloat(state.value);\n\n               break;\n\n            case \"datetime\":\n               state.value = state.value.getTime();\n\n               if (state && state.old && state.old.getTime)\n                  state.old = state.old.getTime();\n\n               break;\n\n            default:\n            // code block\n         }\n\n      if (state.value !== state.old) {\n         const item = $DataTable.getItem(editor.row);\n\n         item[editor.column] = state.value;\n\n         $DataTable.removeCellCss(item.id, editor.column, \"webix_invalid\");\n         $DataTable.removeCellCss(item.id, editor.column, \"webix_invalid_cell\");\n\n         const CurrentObject = this.datacollection.datasource;\n         const validator = CurrentObject.isValidData(item);\n\n         if (validator.pass()) {\n            //// Question: do we submit full item updates?  or just patches?\n            // IF Patch:\n            // var patch = {};\n            // patch.id = item.id;\n            // patch[editor.column] = item[editor.column];\n            // await CurrentObject.model().update(item.id, patch)\n\n            const ab = this.AB;\n\n            try {\n               await CurrentObject.model().update(item.id, item);\n\n               if ($DataTable.exists(editor.row)) {\n                  $DataTable.updateItem(editor.row, item);\n                  $DataTable.clearSelection();\n                  $DataTable.refresh(editor.row);\n               }\n            } catch (err) {\n               ab.notify.developer(err, {\n                  context: \"ABViewGrid:onAfterEditStop(): Error saving item\",\n                  item,\n                  editor,\n                  state,\n                  object: CurrentObject.toObj(),\n               });\n\n               $DataTable.clearSelection();\n\n               if (\n                  ab.Validation.isGridValidationError(\n                     err,\n                     editor.row,\n                     $DataTable\n                  )\n               ) {\n                  // Do we reset the value?\n                  // item[editor.column] = state.old;\n                  // $DataTable.updateItem(editor.row, item);\n               } else {\n                  // this was some other Error!\n               }\n            }\n            // CurrentObject.model()\n            //    .update(item.id, item)\n            //    .then(() => {\n            //       if ($DataTable.exists(editor.row)) {\n            //          $DataTable.updateItem(editor.row, item);\n            //          $DataTable.clearSelection();\n            //          $DataTable.refresh(editor.row);\n            //       }\n            //    })\n            //    .catch((err) => {\n            //       OP.Error.log(\"Error saving item:\", {\n            //          error: err\n            //       });\n\n            //       $DataTable.clearSelection();\n            //       if (\n            //          OP.Validation.isGridValidationError(\n            //             err,\n            //             editor.row,\n            //             $DataTable\n            //          )\n            //       ) {\n            //          // Do we reset the value?\n            //          // item[editor.column] = state.old;\n            //          // $DataTable.updateItem(editor.row, item);\n            //       } else {\n            //          // this was some other Error!\n            //       }\n            //    });\n         } else validator.updateGrid(editor.row, $DataTable);\n      } else $DataTable.clearSelection();\n\n      return false;\n\n      // var item = $$(self.webixUiId.objectDatatable).getItem(editor.row);\n\n      // self.updateRowData(state, editor, ignoreUpdate)\n      //    .fail(function (err) { // Cached\n      //       item[editor.column] = state.old;\n      //       $$(self.webixUiId.objectDatatable).updateItem(editor.row, item);\n      //       $$(self.webixUiId.objectDatatable).refresh(editor.row);\n\n      //       // TODO : Message\n\n      //       $$(self.webixUiId.objectDatatable).hideProgress();\n      //    })\n      //    .then(function (result) {\n      //       if (item) {\n      //          item[editor.column] = state.value;\n\n      //          if (result && result.constructor.name === 'Cached' && result.isUnsync())\n      //             item.isUnsync = true;\n\n      //          $$(self.webixUiId.objectDatatable).updateItem(editor.row, item);\n      //       }\n\n      //       // TODO : Message\n\n      //       $$(self.webixUiId.objectDatatable).hideProgress();\n      //    });\n   }\n\n   /**\n    * @function onAfterSelect\n    * This is when a user clicks on a cell.  We use the onAfterSelect to\n    * trigger a normal .editCell() if there isn't a custom editor for this field.\n    * @param {json} data webix cell data\n    * @return\n    */\n   onAfterSelect(data /*, preserve */) {\n      // data: {row: 1, column: \"name\", id: \"1_name\", toString: function}\n      // data.row: ABObject.id\n      // data.column => columnName of the field\n\n      // Normal update data\n      this.getDataTable()?.editCell(data.row, data.column);\n   }\n\n   /**\n    * @function onColumnResizeResize\n    * This is when a user adjusts the size of a column\n    * @param {} columnName\n    * @param {int} newWidth\n    * @param {int} oldWidth\n    * @param {} user_action\n    * @return\n    */\n   async onColumnResize(columnName, newWidth, oldWidth, user_action) {\n      // update the settings\n\n      let requireRefresh = false;\n\n      const ab = this.AB;\n\n      if (newWidth < 30) {\n         newWidth = 30;\n         requireRefresh = true;\n\n         ab.Webix.message({\n            type: \"info\",\n            text: this.label(\"minimum column width is {0}\", [30]),\n            expire: 1000,\n         });\n      }\n\n      const localSettings = this.localSettings();\n\n      if (localSettings) {\n         const header = localSettings.find((h) => h.id == columnName);\n\n         if (header) {\n            header.width = newWidth;\n\n            delete header.adjust;\n         }\n      }\n\n      this.localSettings(localSettings);\n\n      if (this.settings.saveLocal) {\n         await this.localSettingsSave();\n         // for (const item in GridSettings) {\n         //    GridSettings[item].forEach((item) => {\n         //       // we cannot include field info because of the cicular structure\n         //       if (item?.footer?.field) {\n         //          delete item.footer.field;\n         //       }\n         //    });\n         // }\n         // await this.AB.Storage.set(this.keyStorageSettings, GridSettings);\n      }\n\n      // refresh the display\n      if (requireRefresh) this.refreshHeader();\n\n      this.freezeDeleteColumn();\n\n      // this.getDataTable().refreshColumns();\n\n      // TODO: allow external app to respond in special cases:\n      // eg: ABDesigner object workspace, interface builder, etc...\n      this.emit(\"column.resize\", columnName, newWidth, oldWidth);\n   }\n\n   /**\n    * @method onHeaderClick\n    * process the user clicking on the header for one of our columns.\n    */\n   onHeaderClick(id, e, node) {\n      if (this.skippableColumns.indexOf(id.column) !== -1) return false;\n\n      // save our EditNode & EditField:\n      // this.EditNode = node;\n\n      const EditField = this.datacollection.datasource.fields(\n         (f) => f.columnName === id.column\n      )[0];\n      // if (this.EditField) {\n      //    // show the popup\n      //    PopupHeaderEditComponent.show(node, this.EditField);\n      // }\n\n      this.emit(\"column.header.clicked\", node, EditField);\n\n      return false;\n   }\n\n   /**\n    * @method onShow()\n    * perform any preparations necessary when showing this component.\n    */\n   onShow() {\n      super.onShow();\n\n      // make sure our grid is properly .adjust()ed to the screen.\n      this.getDataTable()?.adjust();\n\n      const dv = this.datacollection;\n\n      if (dv)\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"changeCursor\",\n            listener: this.handler_select.bind(this),\n         });\n   }\n\n   /**\n    * @method ready()\n    * Indicate that our datatable is currently ready for operation.\n    */\n   ready() {\n      const dc = this.datacollection;\n      if (\n         this.isCustomGroup &&\n         dc?.dataStatus != dc?.dataStatusFlag.initialized\n      )\n         return;\n\n      this.getDataTable()?.hideProgress?.();\n   }\n\n   /**\n    * @function refreshHeader()\n    *\n    * refresh the header for the table apart from the refresh() command\n    * @param {bool} ignoreLocal\n    *        Should we ignore our local settings and build directly from\n    *        our config settings?\n    */\n   refreshHeader(ignoreLocal = this.ignoreLocal) {\n      // columnSplitRight = 0;\n      // wait until we have an Object defined:\n      const CurrentObject = this.datacollection.datasource;\n\n      if (!CurrentObject) return;\n\n      const ids = this.ids;\n      const $DataTable = $$(ids.datatable);\n\n      if (!$DataTable) return;\n\n      const accessLevel = $DataTable.config.accessLevel;\n\n      $DataTable.define(\"leftSplit\", 0);\n      $DataTable.define(\"rightSplit\", 0);\n\n      let rowHeight = 0;\n\n      CurrentObject.imageFields().forEach((image) => {\n         const settings = image.getSettings();\n\n         if (settings.useHeight && settings.imageHeight > rowHeight)\n            rowHeight = settings.imageHeight;\n      });\n\n      if (rowHeight) $DataTable.define(\"rowHeight\", rowHeight);\n\n      // $DataTable.clearAll();\n\n      const settings = this.settings;\n\n      let editable = settings.isEditable;\n\n      if ($DataTable.config.accessLevel < 2) editable = false;\n\n      //// update DataTable structure:\n      // get column list from our local settings\n      const objColumnHeaders = CurrentObject.columnHeaders(\n         true,\n         editable,\n         // TRANSITION: moving these from .columnHeaders() to here:\n         [], //settings.summaryColumns,\n         [], //settings.countColumns,\n         [] //settings.hiddenFields\n      );\n\n      let columnHeaders = this.localSettings();\n\n      const ab = this.AB;\n\n      // if that is empty, pull from our settings.columnConfig\n      if (!columnHeaders || ignoreLocal)\n         columnHeaders = ab.cloneDeep(this.settings.columnConfig);\n\n      // if that is empty for some reason, rebuild from our CurrentObject\n      if (columnHeaders.length === 0) columnHeaders = objColumnHeaders;\n\n      // sanity check:\n      // columnHeaders can't contain a column that doesn't exist in objColumHeaders:\n      // (eg: a field might have been removed but localStorage doesn't know that )\n      const objColumnHeaderIDs = objColumnHeaders.map((h) => h.fieldID);\n\n      columnHeaders = columnHeaders.filter(\n         (c) => objColumnHeaderIDs.indexOf(c.fieldID) > -1\n      );\n\n      // default our columnConfig values to our columnHeaders:\n      columnHeaders.forEach((c) => {\n         // we want to overwrite our default settings with anything stored\n         // in local storage\n         const origCol = objColumnHeaders.find((h) => h.fieldID === c.fieldID);\n\n         // none of our functions can be stored in localStorage, so scan\n         // the original column and attach any template functions to our\n         // stashed copy.\n         // also the suggest for selects and connected fields may contain a\n         // function so go ahead and copy the original suggest to the column\n         Object.keys(origCol).forEach((k) => {\n            if (typeof origCol[k] === \"function\" || k === \"suggest\") {\n               c[k] = origCol[k];\n            }\n         });\n\n         const f = CurrentObject.fieldByID(c.fieldID);\n\n         if (!f) return;\n\n         // if it's a hidden field:\n         if (settings.hiddenFields.indexOf(f.columnName) > -1) {\n            c.hidden = true;\n         }\n\n         // add summary footer:\n         if (settings.summaryColumns.indexOf(f.id) > -1) {\n            if (f.key == \"calculate\" || f.key == \"formula\")\n               c.footer = { content: \"totalColumn\", field: f };\n            else c.footer = { content: \"summColumn\" };\n         }\n         // or add the count footer\n         else if (settings.countColumns.indexOf(f.id) > -1)\n            c.footer = { content: \"countColumn\" };\n      });\n\n      let localSettings = this.localSettings();\n\n      if (!localSettings || ignoreLocal) {\n         this.localSettings(columnHeaders);\n\n         localSettings = columnHeaders;\n      }\n\n      columnHeaders = ab.cloneDeep(localSettings);\n\n      const fieldValidations = [];\n      const rulePops = [];\n\n      columnHeaders.forEach((col) => {\n         col.fillspace = false;\n\n         // parse the rules because they were stored as a string\n         // check if rules are still a string...if so lets parse them\n         if (col.validationRules) {\n            if (typeof col.validationRules === \"string\") {\n               col.validationRules = JSON.parse(col.validationRules);\n            }\n\n            if (col.validationRules.length) {\n               const validationUI = [];\n\n               // there could be more than one so lets loop through and build the UI\n               col.validationRules.forEach((rule) => {\n                  const Filter = ab.filterComplexNew(\n                     col.id /*+ \"_\" + webix.uid()*/\n                  );\n                  // add the new ui to an array so we can add them all at the same time\n                  validationUI.push(Filter.ui);\n                  // store the filter's info so we can assign values and settings after the ui is rendered\n                  fieldValidations.push({\n                     filter: Filter,\n                     view: Filter.ids.querybuilder,\n                     columnName: col.id,\n                     validationRules: rule.rules,\n                     invalidMessage: rule.invalidMessage,\n                  });\n               });\n\n               // create a unique view id for popup\n               const popUpId =\n                  ids.rules + \"_\" + col.id; /* + \"_\" + webix.uid() */\n\n               // store the popup ids so we can remove the later\n               rulePops.push(popUpId);\n               // add the popup to the UI but don't show it\n               ab.Webix.ui({\n                  view: \"popup\",\n                  css: \"ab-rules-popup\",\n                  id: popUpId,\n                  body: {\n                     rows: validationUI,\n                  },\n               });\n            }\n         }\n\n         // group header\n         if (\n            settings.groupBy &&\n            (settings.groupBy || \"\").indexOf(col.id) > -1\n         ) {\n            const groupField = CurrentObject.fieldByID(col.fieldID);\n\n            if (groupField)\n               col.template = (obj, common) => {\n                  // return common.treetable(obj, common) + obj.value;\n                  if (obj.$group) {\n                     const rowData = ab.cloneDeep(obj);\n\n                     rowData[groupField.columnName] = rowData.value;\n\n                     return (\n                        common.treetable(obj, common) +\n                        groupField.format(rowData)\n                     );\n                  } else return groupField.format(obj);\n               };\n         }\n      });\n\n      if (fieldValidations.length) {\n         // we need to store the rules for use later so lets build a container array\n         const complexValidations = [];\n\n         fieldValidations.forEach((f) => {\n            // init each ui to have the properties (app and fields) of the object we are editing\n            // f.filter.applicationLoad(CurrentObject.application);\n            f.filter.fieldsLoad(CurrentObject.fields());\n            // now we can set the value because the fields are properly initialized\n            f.filter.setValue(f.validationRules);\n            // if there are validation rules present we need to store them in a lookup hash\n            // so multiple rules can be stored on a single field\n            if (!Array.isArray(complexValidations[f.columnName]))\n               complexValidations[f.columnName] = [];\n\n            // now we can push the rules into the hash\n            complexValidations[f.columnName].push({\n               filters: $$(f.view).getFilterHelper(),\n               values: $DataTable.getSelectedItem(),\n               invalidMessage: f.invalidMessage,\n            });\n         });\n\n         const rules = {};\n\n         // store the rules in a data param to be used later\n         $DataTable.$view.complexValidations = complexValidations;\n         // use the lookup to build the validation rules\n         Object.keys(complexValidations).forEach((key) => {\n            rules[key] = (value, data) => {\n               // default valid is true\n               let isValid = true;\n               let invalidMessage = \"\";\n\n               $DataTable.$view.complexValidations[key].forEach((filter) => {\n                  // convert rowData from { colName : data } to { id : data }\n                  const newData = {};\n\n                  (CurrentObject.fields() || []).forEach((field) => {\n                     newData[field.id] = data[field.columnName];\n                  });\n\n                  // for the case of \"this_object\" conditions:\n                  if (data.uuid) newData[\"this_object\"] = data.uuid;\n\n                  // use helper funtion to check if valid\n                  const ruleValid = filter.filters(newData);\n\n                  // if invalid we need to tell the field\n                  if (!ruleValid) {\n                     isValid = false;\n                     invalidMessage = filter.invalidMessage;\n                  }\n               });\n\n               // we also need to define an error message\n               if (!isValid)\n                  ab.Webix.message({\n                     type: \"error\",\n                     text: invalidMessage,\n                  });\n\n               return isValid;\n            };\n         });\n         // define validation rules\n         $DataTable.define(\"rules\", rules);\n         // store the array of view ids on the webix object so we can get it later\n         $DataTable.config.rulePops = rulePops;\n         $DataTable.refresh();\n      } else {\n         // check if the previous datatable had rule popups and remove them\n         if ($DataTable.config.rulePops)\n            $DataTable.config.rulePops.forEach((popup) => {\n               if ($$(popup)) $$(popup).destructor();\n            });\n         // remove any validation rules from the previous table\n         $DataTable.define(\"rules\", {});\n         $DataTable.refresh();\n      }\n\n      const addedColumns = [];\n      // {array} the .id of the columnHeaders we add based upon our settings.\n      // this will help us pick the lastColumn that is part of the\n      // object.\n\n      if (settings.labelAsField) {\n         // console.log(CurrentObject);\n         columnHeaders.unshift({\n            id: \"appbuilder_label_field\",\n            header: \"Label\",\n            fillspace: true,\n            template: (obj) => CurrentObject.displayData(obj),\n            // css: { 'text-align': 'center' }\n         });\n         addedColumns.push(\"appbuilder_label_field\");\n      }\n\n      if (settings.massUpdate && accessLevel === 2) {\n         columnHeaders.unshift({\n            id: \"appbuilder_select_item\",\n            header: { content: \"masterCheckbox\", contentId: \"mch\" },\n            width: 40,\n            template: \"<div class='singleSelect'>{common.checkbox()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         this.columnSplitLeft = 1;\n         addedColumns.push(\"appbuilder_select_item\");\n      } else this.columnSplitLeft = 0;\n\n      if (settings.detailsPage !== \"\" && !settings.hideButtons) {\n         columnHeaders.push({\n            id: \"appbuilder_view_detail\",\n            header: \"\",\n            width: 40,\n            template: (obj, common) =>\n               \"<div class='detailsView'><span class='webix_icon fa fa-eye'></span></div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_detail\");\n      }\n\n      if (settings.trackView !== 0 && accessLevel === 2) {\n         columnHeaders.push({\n            id: \"appbuilder_view_track\",\n            header: \"\",\n            width: 40,\n            template:\n               \"<div class='track'><span class='track fa fa-history'></span></div>\",\n            css: { \"text-align\": \"center\", cursor: \"pointer\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_track\");\n      }\n\n      if (\n         settings.editPage !== \"\" &&\n         !settings.hideButtons &&\n         accessLevel === 2\n      ) {\n         columnHeaders.push({\n            id: \"appbuilder_view_edit\",\n            header: \"\",\n            width: 40,\n            template: \"<div class='edit'>{common.editIcon()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_edit\");\n      }\n\n      if (settings.allowDelete && accessLevel === 2) {\n         columnHeaders.push({\n            id: \"appbuilder_trash\",\n            header: \"\",\n            width: 40,\n            template: \"<div class='trash'>{common.trashIcon()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_trash\");\n      }\n\n      // find our last displayed column (that isn't one we added);\n      let lastCol = null;\n\n      for (let i = columnHeaders.length - 1; i >= 0; i--)\n         if (!lastCol) {\n            const col = columnHeaders[i];\n\n            if (!col.hidden && addedColumns.indexOf(col.id) === -1) {\n               lastCol = col;\n\n               break;\n            }\n         }\n\n      if (lastCol) {\n         lastCol.fillspace = true;\n         lastCol.minWidth = lastCol.width;\n         lastCol.width = 150; // set a width for last column but by default it will fill the available space or use the minWidth to take up more\n      }\n\n      $DataTable.refreshColumns(columnHeaders);\n\n      // the addedColumns represent the additional icons that can be added.\n      this.columnSplitRight = addedColumns.length;\n\n      // the .massUpdate gets added to Left so don't include that in split right:\n      if (addedColumns.indexOf(\"appbuilder_select_item\") > -1)\n         this.columnSplitRight -= 1;\n      // .columnSplitRight can't be < 0\n      if (this.columnSplitRight < 0) this.columnSplitRight = 0;\n\n      // freeze columns:\n      const frozenColumnID = settings.frozenColumnID;\n\n      if (frozenColumnID != \"\")\n         $DataTable.define(\n            \"leftSplit\",\n            $DataTable.getColumnIndex(frozenColumnID) + 1\n         );\n      else $DataTable.define(\"leftSplit\", this.columnSplitLeft);\n\n      this.freezeDeleteColumn();\n      $DataTable.refreshColumns();\n      // }\n   }\n\n   /**\n    * localSettingsSave()\n    * Persist our current working copy of our GridSettings to localStorage.\n    * @return {Promise}\n    */\n   async localSettingsSave() {\n      const ab = this.AB;\n      const savedLocalSettings =\n         (await ab.Storage.get(this.keyStorageSettings)) || {};\n      const _gridSettings = this._gridSettings;\n\n      savedLocalSettings[this.settingsID()] = _gridSettings[this.settingsID()]\n         ? _gridSettings[this.settingsID()]\n         : [];\n\n      for (const item in savedLocalSettings) {\n         savedLocalSettings[item].forEach((item) => {\n            // we cannot include field info because of the cicular structure\n            if (item?.footer?.field) delete item.footer.field;\n         });\n      }\n\n      await ab.Storage.set(this.keyStorageSettings, savedLocalSettings);\n   }\n\n   /**\n    * @method localSettings()\n    * An interface method to handle get/set operations on our local GridSettings\n    * storage.\n    * .localStorage() : a getter to return the current value\n    * .localStorage(value) : a setter to save value as our current value.\n    * @param {various} value\n    *        the value to set to our settings.\n    * @return {various}\n    */\n   localSettings(value = null) {\n      const _gridSettings = this._gridSettings;\n\n      if (value) _gridSettings[this.settingsID()] = value;\n      else return _gridSettings[this.settingsID()];\n   }\n\n   /**\n    * @method selectRow()\n    * Select the grid row that correspondes to the provided rowData.\n    * @param {json} rowData\n    *        A key=>value hash of data that matches an entry in the grid.\n    *        rowData.id should match an existing entry.\n    */\n   selectRow(rowData) {\n      const $DataTable = this.getDataTable();\n\n      if (!$DataTable) return;\n\n      if (!rowData) $DataTable.unselect();\n      else if (rowData?.id && $DataTable.exists(rowData.id))\n         $DataTable.select(rowData.id, false);\n      else $DataTable.select(null, false);\n   }\n\n   /**\n    * @method settingsID()\n    * return the unique key for this Grid + object combo to store data\n    * in our localStorage.\n    * @return {string}\n    */\n   settingsID() {\n      const CurrentObject = this.datacollection.datasource;\n\n      return `${this.id}-${CurrentObject ? CurrentObject.id : \"0\"}`;\n   }\n\n   /**\n    * @method toggleTab()\n    * recursively toggle tabs into view once a user chooses a detail/edit view\n    * to display.\n    * @param {ABView.id} parentTab\n    * @param {webix.view} wb\n    */\n   toggleTab(parentTab, wb) {\n      // find the tab || if we didn't pass and id we may have passed a domNode\n      const tab =\n         wb.getTopParentView().queryView({ id: parentTab }) || $$(parentTab);\n\n      if (!tab) return;\n\n      // set the tabbar to to the tab\n      const tabbar = tab.getParentView().getParentView();\n\n      if (!tabbar) return;\n\n      // if we have reached the top we won't have a tab\n      if (tabbar.setValue) tabbar.setValue(parentTab);\n\n      // find if it is in a multiview of a tab\n      const nextTab = tabbar.queryView({ view: \"scrollview\" }, \"parent\");\n\n      // if so then do this again\n      if (nextTab) this.toggleTab(nextTab, wb);\n   }\n\n   toggleUpdateDelete() {\n      const $DataTable = this.getDataTable();\n\n      let checkedItems = 0;\n\n      $DataTable.data.each((obj) => {\n         if (\n            typeof obj !== \"undefined\" &&\n            Object.prototype.hasOwnProperty.call(\n               obj,\n               \"appbuilder_select_item\"\n            ) &&\n            obj.appbuilder_select_item === 1\n         )\n            checkedItems++;\n      });\n\n      if (checkedItems > 0) this.enableUpdateDelete();\n      else this.disableUpdateDelete();\n   }\n\n   toolbarDeleteSelected($view) {\n      const $DataTable = this.getDataTable();\n      const CurrentObject = this.datacollection.datasource;\n      const deleteTasks = [];\n\n      $DataTable.data.each((row) => {\n         if (\n            typeof row !== \"undefined\" &&\n            // row.hasOwnProperty(\"appbuilder_select_item\") &&\n            Object.prototype.hasOwnProperty.call(\n               row,\n               \"appbuilder_select_item\"\n            ) &&\n            row.appbuilder_select_item === 1\n         ) {\n            // NOTE: store a fn() to run later.\n            deleteTasks.push(() => CurrentObject.model().delete(row.id));\n         }\n      });\n\n      const abWebix = this.AB.Webix;\n\n      if (deleteTasks.length > 0)\n         abWebix.confirm({\n            title: this.label(\"Delete Multiple Records\"),\n            text: this.label(\n               \"Are you sure you want to delete the selected records?\"\n            ),\n            callback: async (result) => {\n               if (result) {\n                  // Now run those functions\n                  await Promise.all(deleteTasks.map((t) => t()));\n\n                  // Anything we need to do after we are done.\n                  this.disableUpdateDelete();\n               }\n            },\n         });\n      else\n         abWebix.alert({\n            title: this.label(\"No Records Selected\"),\n            text: this.label(\n               \"You need to select at least one record...did you drink your coffee today?\"\n            ),\n         });\n   }\n\n   toolbarFilter($view) {\n      this.view.filterHelper.showPopup($view);\n   }\n\n   toolbarSort($view) {\n      this.PopupSortDataTableComponent.show($view);\n   }\n\n   toolbarExport($view) {\n      this.PopupExport.show($view);\n   }\n\n   toolbarMassUpdate($view) {\n      this.PopupMassUpdateComponent.show($view);\n   }\n\n   /**\n    * @function toolTip()\n    *\n    * Retrieve the items toolTip\n    */\n   toolTip(obj, common) {\n      const CurrentObject = this.datacollection.datasource;\n      const imageFieldColNames = CurrentObject.imageFields().map(\n         (f) => f.columnName\n      );\n\n      let tip = \"\";\n\n      const columnName = common.column.id.replace(\" \", \"\");\n\n      if (Array.isArray(obj[columnName])) {\n         obj[columnName].forEach(function (o) {\n            if (o.text) tip += o.text + \"<br/>\";\n         });\n      } else if (\n         typeof obj[columnName + \"__relation\"] !== \"undefined\" &&\n         typeof obj[columnName] === \"number\"\n      )\n         tip = obj[columnName + \"__relation\"].text;\n      else if (typeof obj[columnName + \"__relation\"] !== \"undefined\") {\n         let relationData = obj[columnName + \"__relation\"];\n\n         if (!Array.isArray(relationData)) relationData = [relationData];\n\n         (relationData || []).forEach(function (o) {\n            if (o) tip += o.text + \"<br/>\";\n         });\n      } else if (imageFieldColNames.indexOf(columnName) !== -1) {\n         if (!obj[columnName]) {\n            return \"\";\n         } else {\n            // TODO: we need to get this URL from the ABFieldImage object!\n            tip = `<img style='max-width: 500px; max-height: 500px;' src='/file/${obj[columnName]}' />`;\n         }\n      } else if (common.column.editor === \"date\")\n         tip = common.column.format(obj[columnName]);\n      else if (common.column.editor === \"richselect\")\n         CurrentObject.fields().forEach((f) => {\n            if (f.columnName === columnName) {\n               if (f.settings.options) {\n                  f.settings.options.forEach((o) => {\n                     if (o.id === obj[columnName]) {\n                        tip = o.text;\n                     }\n                  });\n               }\n            }\n         });\n      else tip = obj[columnName];\n\n      if (!tip) return \"\";\n      else return tip;\n   }\n\n   /**\n    * @function toolTipOnBeforeRender()\n    *\n    * Add visibility \"hidden\" to all tooltips before render so we can move to a new location without the visual jump\n    */\n   toolTipOnBeforeRender(node) {\n      // var node = $$(ids.tooltip).getNode();\n      node.style.visibility = \"hidden\";\n   }\n\n   /**\n    * @function toolTipOnAfterRender()\n    *\n    * If the tooltip is displaying off the screen we want to try to reposition it for a better experience\n    */\n   toolTipOnAfterRender(node) {\n      // var node = $$(ids.tooltip).getNode();\n      if (node.firstChild?.nodeName === \"IMG\") {\n         setTimeout(() => {\n            const imgBottom = parseInt(node.style.top.replace(\"px\", \"\")) + 500;\n            const imgRight = parseInt(node.style.left.replace(\"px\", \"\")) + 500;\n\n            if (imgBottom > window.innerHeight) {\n               const imgOffsetY = imgBottom - window.innerHeight;\n               const newTop =\n                  parseInt(node.style.top.replace(\"px\", \"\")) - imgOffsetY;\n               node.style.top = newTop + \"px\";\n            }\n\n            if (imgRight > window.innerWidth) {\n               const imgOffsetX = imgRight - window.innerWidth;\n               const newLeft =\n                  parseInt(node.style.left.replace(\"px\", \"\")) - imgOffsetX;\n               node.style.left = newLeft + \"px\";\n            }\n\n            node.style.visibility = \"visible\";\n         }, 250);\n      } else node.style.visibility = \"visible\";\n   }\n\n   get isCustomGroup() {\n      const dc = this.datacollection;\n      const CurrentObject = dc?.datasource;\n      const $DataTable = this.getDataTable();\n\n      return (\n         $DataTable?.config?.view === \"treetable\" && !CurrentObject?.isGroup\n      );\n   }\n\n   populateGroupData() {\n      if (!this.isCustomGroup) return;\n\n      this.busy();\n\n      const dc = this.datacollection;\n      const $DataTable = this.getDataTable();\n\n      $DataTable.clearAll();\n      $DataTable.parse(dc.getData() || []);\n\n      this.grouping();\n      this.ready();\n   }\n}\n","const ABViewGridCore = require(\"../../core/views/ABViewGridCore\");\nimport ABViewGridComponent from \"./viewComponent/ABViewGridComponent\";\nimport ABViewGridFilter from \"./viewProperties/ABViewPropertyFilterData\";\nconst ABViewPropertyLinkPage =\n   require(\"./viewProperties/ABViewPropertyLinkPage\").default;\n\nexport default class ABViewGrid extends ABViewGridCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // filter property\n      this.filterHelper.fromSettings(this.settings.gridFilter);\n   }\n\n   propertyGroupByList(ids, groupBy) {\n      let colNames = groupBy || [];\n      if (typeof colNames == \"string\") {\n         colNames = colNames.split(\",\");\n      }\n\n      let options = $$(ids.groupBy).getList().data.find({});\n\n      $$(ids.groupByList).clearAll();\n      colNames.forEach((colName) => {\n         let opt = options.filter((o) => o.id == colName)[0];\n         if (opt) {\n            $$(ids.groupByList).add(opt);\n         }\n      });\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewGridComponent(this);\n   }\n\n   get filterHelper() {\n      if (this.__filterHelper == null) {\n         this.__filterHelper = new ABViewGridFilter(\n            this.AB,\n            `${this.id}_filterHelper`\n         );\n      }\n\n      return this.__filterHelper;\n   }\n\n   get linkPageHelper() {\n      if (this.__linkPageHelper == null)\n         this.__linkPageHelper = new ABViewPropertyLinkPage();\n\n      return this.__linkPageHelper;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let origWS = this.warningsSilent;\n      this.warningsSilent = true;\n      let DC = this.datacollection;\n      this.warningsSilent = origWS;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n}\n","/*\n * ABViewGridPopupSortFields\n *\n * Manage the Sort Fields popup.\n *\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\n\nvar L = null;\n\nexport default class AB_Work_Object_Workspace_PopupSortFields extends ClassUI {\n   constructor(idBase) {\n      idBase = idBase || \"abviewgridpopupSortFields\";\n\n      super({\n         component: `${idBase}_popupSort`,\n         list: `${idBase}_popupSort_list`,\n         form: `${idBase}_popupSort_form`,\n      });\n\n      this.CurrentObject = null;\n      // {ABObject}\n      // The current ABObject we are working with.\n\n      this._blockOnChange = false;\n      // {bool}\n      // Should we skip the onChange handler processing at this time?\n\n      this._settings = null;\n      // {json}\n      // default sort settings.\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   uiForm() {\n      const compId = this.ids.component;\n      return {\n         view: \"form\",\n         id: this.ids.form,\n         // autoheight: true,\n         borderless: true,\n         elements: [\n            {\n               view: \"button\",\n               type: \"form\",\n               css: \"webix_primary\",\n               value: L(\"Add new sort\"),\n               on: {\n                  onItemClick: (/* id, e, node */) => {\n                     this.clickAddNewSort();\n                     this.triggerOnChange();\n                  },\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `${compId} add sort button`\n                     );\n                  },\n               },\n            },\n         ],\n      };\n   }\n\n   ui() {\n      return {\n         view: \"popup\",\n         id: this.ids.component,\n         // autoheight:true,\n         width: 600,\n         body: this.uiForm(),\n      };\n   }\n\n   // Our init() function for setting up our UI\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n\n      // if popup does not already exist add it\n      if (!$$(this.ids.component)) webix.ui(this.ui());\n   }\n\n   /**\n    * @function clickAddNewSort\n    * When the user clicks the \"Add New Sort\" button, this routine will\n    * add another row to the sort form.\n    * @param {string} fieldId\n    *        The ABField.id of the field to auto select in this new row.\n    * @param {string} dir\n    *        The sort order to auto select in this new row.\n    */\n   // clickAddNewSort: function(by, dir, isMulti, id) {\n   clickAddNewSort(fieldId, dir) {\n      var self = this;\n      var sort_form = $$(this.ids.form);\n\n      var viewIndex = sort_form.getChildViews().length - 1;\n      var listFields = this.getFieldList(true);\n      sort_form.addView(\n         {\n            id: \"sort\" + webix.uid(),\n            cols: [\n               {\n                  view: \"combo\",\n                  width: 220,\n                  options: listFields,\n                  on: {\n                     onChange: function (columnId) {\n                        var el = this;\n                        self.onChangeCombo(columnId, el);\n                     },\n                  },\n               },\n               {\n                  view: \"segmented\",\n                  width: 200,\n                  options: [\n                     {\n                        id: \"\",\n                        value: L(\"Please select field\"),\n                     },\n                  ],\n                  on: {\n                     onChange: (/* newv, oldv */) => {\n                        // 'asc' or 'desc' values\n                        this.triggerOnChange();\n                     },\n                  },\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_danger\",\n                  icon: \"fa fa-trash\",\n                  type: \"icon\",\n                  width: 30,\n                  on: {\n                     onItemClick: function () {\n                        sort_form.removeView(this.getParentView());\n                        self.refreshFieldList(true);\n                        self.triggerOnChange();\n                     },\n                  },\n               },\n            ],\n         },\n         viewIndex\n      );\n\n      // Select field\n      if (fieldId) {\n         var fieldsCombo = sort_form\n            .getChildViews()\n            [viewIndex].getChildViews()[0];\n         fieldsCombo.setValue(fieldId);\n      }\n      // select direction\n      if (dir) {\n         var segmentButton = sort_form\n            .getChildViews()\n            [viewIndex].getChildViews()[1];\n         segmentButton.setValue(dir);\n      }\n   }\n\n   /**\n    * @function getFieldList\n    * return field list so we can present a custom UI for view\n    * @param {bool} excludeSelected\n    *        Should we ignore fields that already exist in the form?\n    * @return {array} [ { id, value } ]\n    *         an array that is compatible with the webix.list\n    *         widget.\n    */\n   getFieldList(excludeSelected) {\n      var sort_form = $$(this.ids.form),\n         listFields = [];\n\n      var allFields = this.CurrentObject.fields();\n      if (allFields.length == 0) return listFields;\n\n      // Get all fields include hidden fields\n      allFields.forEach((f) => {\n         if (f.fieldIsSortable()) {\n            listFields.push({\n               id: f.id,\n               value: f.label,\n            });\n         }\n      });\n\n      // Remove selected field\n      if (excludeSelected) {\n         var childViews = sort_form.getChildViews();\n         if (childViews.length > 1) {\n            // Ignore 'Add new sort' button\n            childViews.forEach(function (cView, index) {\n               if (childViews.length - 1 <= index) return false;\n\n               var selectedValue = cView.getChildViews()[0].getValue();\n               if (selectedValue) {\n                  listFields = listFields.filter((f) => f.id != selectedValue);\n               }\n            });\n         }\n      }\n      return listFields;\n   }\n\n   /**\n    * @function objectLoad\n    * Ready the Popup according to the current object\n    * @param {ABObject} object  the currently selected object.\n    */\n   objectLoad(object) {\n      this.CurrentObject = object;\n   }\n\n   /**\n    * @method setSettings\n    * Initialize the form with a set of conditions.\n    * @param {Array} settings\n    *        The default settings for this form.\n    *        [\n    *           {\n    *              key: uuid,     // ABField.id\n    *              dir: string,   // 'asc' or 'desc'\n    *           }\n    *        ]\n    */\n   setSettings(settings) {\n      this._settings = this.AB.cloneDeep(settings);\n   }\n\n   /**\n    * @method getSettings\n    * return the current sort settings stored by this form.\n    * @return {Array} -\n    *         [\n    *            {\n    *               key: uuid,     // ABField.id\n    *               dir: string,   // 'asc' or 'desc'\n    *            }\n    *         ]\n    */\n   getSettings() {\n      var sort_form = $$(this.ids.form),\n         sortFields = [];\n\n      var childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            var fieldId = cView.getChildViews()[0].getValue();\n            var dir = cView.getChildViews()[1].getValue();\n            sortFields.push({\n               key: fieldId,\n               dir: dir,\n            });\n         });\n      }\n      return sortFields;\n   }\n\n   /**\n    * @method onChangeCombo()\n    * Update the display once they have chosen a field to sort by.\n    * We now need to offer the appropriate sort direction chooser.\n    * @param {string} fieldID\n    *        The value of the combo box now.\n    * @param {webix.$view} el\n    *        The current Webix.$view that was the combo box that just\n    *        changed.\n    */\n   onChangeCombo(fieldID, el) {\n      var allFields = this.CurrentObject.fields();\n      var chosenField = null,\n         sortDir = el.getParentView().getChildViews()[1],\n         // isMultiLingual = el.getParentView().getChildViews()[2],\n         // isMulti = 0,\n         options = null;\n\n      chosenField = allFields.find((f) => f.id == fieldID);\n      if (!chosenField) return;\n\n      switch (chosenField.key) {\n         case \"date\":\n            options = [\n               { id: \"asc\", value: L(\"Before -> After\") },\n               { id: \"desc\", value: L(\"After -> Before\") },\n            ];\n            break;\n         case \"number\":\n            options = [\n               { id: \"asc\", value: L(\"1 -> 9\") },\n               { id: \"desc\", value: L(\"9 -> 1\") },\n            ];\n            break;\n         case \"string\":\n         default:\n            options = [\n               { id: \"asc\", value: L(\"A -> Z\") },\n               { id: \"desc\", value: L(\"Z -> A\") },\n            ];\n            break;\n      }\n\n      sortDir.define(\"options\", options);\n      sortDir.refresh();\n\n      // if (columnConfig.settings.supportMultilingual)\n      //    isMulti = columnConfig.settings.supportMultilingual;\n\n      // isMultiLingual.setValue(isMulti);\n\n      this.refreshFieldList();\n      this.triggerOnChange();\n   }\n\n   /**\n    * @function onShow\n    * Rebuild the form when an onShow() is called.\n    */\n   onShow(view, options) {\n      var sort_form = $$(this.ids.form);\n\n      // clear field options in the form\n      webix.ui(this.uiForm(), sort_form);\n\n      var sorts = this._settings;\n      if (sorts && sorts.forEach) {\n         sorts.forEach((s) => {\n            this.clickAddNewSort(s.key, s.dir);\n         });\n      }\n\n      if (sorts == null || sorts.length == 0) {\n         this.clickAddNewSort();\n      }\n      $$(this.ids.component).show(view, options);\n   }\n\n   /**\n    * @method refreshFieldList\n    * return an updated field list so you cannot duplicate a sort\n    * @param {bool} ignoreRemoveViews\n    *\n    */\n   refreshFieldList(ignoreRemoveViews) {\n      var sort_form = $$(this.ids.form),\n         listFields = this.getFieldList(false),\n         selectedFields = [],\n         removeChildViews = [];\n\n      var childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            var fieldId = cView.getChildViews()[0].getValue(),\n               // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId });\n               fieldObj = listFields.find((f) => f.id == fieldId);\n\n            if (fieldObj) {\n               // Add selected field to list\n               selectedFields.push(fieldObj);\n            } else {\n               // Add condition to remove\n               removeChildViews.push(cView);\n            }\n         });\n      }\n\n      // Remove filter conditions when column is deleted\n      if (!ignoreRemoveViews) {\n         removeChildViews.forEach(function (cView) {\n            sort_form.removeView(cView);\n         });\n      }\n\n      // Field list should not duplicate field items\n      childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            var fieldId = cView.getChildViews()[0].getValue(),\n               // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId }),\n               fieldObj = listFields.filter(function (f) {\n                  return f.id == fieldId;\n               });\n\n            // var selectedFieldsExcludeCurField = $(selectedFields).not(fieldObj);\n            var selectedFieldsExcludeCurField = selectedFields.filter(function (\n               x\n            ) {\n               if (Array.isArray(fieldObj) && fieldObj.indexOf(x) !== -1) {\n                  return false;\n               }\n               return true;\n            });\n\n            // var enableFields = $(listFields).not(selectedFieldsExcludeCurField).get();\n            var enableFields = listFields.filter(function (x) {\n               if (\n                  Array.isArray(selectedFieldsExcludeCurField) &&\n                  selectedFieldsExcludeCurField.indexOf(x) !== -1\n               ) {\n                  return false;\n               }\n               return true;\n            });\n\n            // Update field list\n            cView.getChildViews()[0].define(\"options\", enableFields);\n            cView.getChildViews()[0].refresh();\n         });\n      }\n   }\n\n   /**\n    * @function triggerOnChange\n    * This parses the sort form to build in order the sorts then saves to the application object workspace\n    */\n   triggerOnChange() {\n      // block .onChange callback\n      if (this._blockOnChange) return;\n\n      this._settings = this.getSettings();\n\n      this.emit(\"changed\", this._settings);\n   }\n\n   blockOnChange() {\n      this._blockOnChange = true;\n   }\n\n   unblockOnChange() {\n      this._blockOnChange = false;\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    * @param {uuid} fieldId\n    *        the ABField.id we want to prefill the sort with\n    * @param {json} options\n    *        Additional webix.show() options parameters.\n    */\n   show($view, fieldId, options) {\n      this.blockOnChange();\n\n      this.onShow($view, options || null);\n\n      if (fieldId) {\n         this.clickAddNewSort(fieldId);\n      }\n\n      this.unblockOnChange();\n   }\n\n   /**\n    * @function sort()\n    * client sort data in list\n    *\n    * @param {Object} a\n    * @param {Object} b\n    */\n   sort(a, b) {\n      let result = 0;\n\n      const childViews = $$(this.ids.form).getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach((cView, index) => {\n            if (childViews.length - 1 <= index || result != 0) return;\n\n            const fieldId = cView.getChildViews()[0].getValue();\n            const dir = cView.getChildViews()[1].getValue();\n\n            const field = this.CurrentObject.fieldByID(fieldId);\n            if (!field) return;\n\n            const by = field.columnName; // column name\n\n            let aValue = a[by],\n               bValue = b[by];\n\n            if (Array.isArray(aValue)) {\n               aValue = (aValue || [])\n                  .map(function (item) {\n                     return item.text || item;\n                  })\n                  .join(\" \");\n            }\n\n            if (Array.isArray(bValue)) {\n               bValue = (bValue ?? [])\n                  .map((item) => item.text || item)\n                  .join(\" \");\n            }\n\n            if (aValue != bValue) {\n               if (dir == \"asc\") {\n                  result = aValue > bValue ? 1 : -1;\n               } else {\n                  result = aValue < bValue ? 1 : -1;\n               }\n            }\n         });\n      }\n\n      return result;\n   }\n}\n","const ABViewImageCore = require(\"../../core/views/ABViewImageCore\");\nconst ABViewImageComponent = require(\"./viewComponent/ABViewImageComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewImage extends ABViewImageCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewImageComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.settings.filename) {\n         this.warningsMessage(`has no image set`);\n      }\n   }\n};\n","const ABViewKanbanCore = require(\"../../core/views/ABViewKanbanCore\");\nconst ABViewKanbanComponent = require(\"./viewComponent/ABViewKanbanComponent\");\n\nconst ABViewPropertyLinkPage =\n   require(\"./viewProperties/ABViewPropertyLinkPage\").default;\n\nexport default class ABViewKanban extends ABViewKanbanCore {\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n\n   component() {\n      return new ABViewKanbanComponent(this);\n   }\n\n   get linkPageHelper() {\n      return (this.__linkPageHelper =\n         this.__linkPageHelper || new ABViewPropertyLinkPage());\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n}\n","/*\n * ABViewKanbanFormSidePanel\n *\n * Provide a form area for editing data in the Kan Ban view.\n *\n */\n\nconst ABViewComponent = require(\"./viewComponent/ABViewComponent\").default;\nconst ABViewForm = require(\"./ABViewForm\");\nconst ABViewFormButton = require(\"./ABViewFormButton\");\n\nvar L = null;\n// multilingual Label fn()\n\nmodule.exports = class ABWorkObjectKanBan extends ABViewComponent {\n   constructor(comKanBan, idBase, editFields) {\n      idBase = idBase || `${comKanBan.view?.id}_formSidePanel`;\n      super(idBase, {\n         form: \"\",\n      });\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n\n      this.AB = comKanBan.AB;\n\n      this.CurrentObjectID = null;\n      // {string}\n      // the ABObject.id of the object we are working with.\n\n      this.editFields = editFields;\n      // {array}\n      // An array of {ABField.id} that determines which fields should show up\n      // in the editor.\n\n      this._mockApp = this.AB.applicationNew({});\n      // {ABApplication}\n      // Any ABViews we create are expected to be in relation to\n      // an ABApplication, so we create a \"mock\" app for our\n      // workspace views to use to display.\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n\n   ui() {\n      var ids = this.ids;\n\n      // Our webix UI definition:\n      return {\n         id: ids.component,\n         width: 300,\n         hidden: true,\n         rows: [\n            {\n               view: \"toolbar\",\n               css: \"webix_dark\",\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Edit Record\"),\n                  },\n                  {\n                     view: \"icon\",\n                     icon: \"wxi-close\",\n                     align: \"right\",\n                     click: (/* id */) => {\n                        this.hide();\n                     },\n                  },\n               ],\n            },\n            {\n               view: \"scrollview\",\n               body: {\n                  rows: [\n                     {\n                        id: ids.form,\n                        view: \"form\",\n                        borderless: true,\n                        rows: [],\n                     },\n                  ],\n               },\n            },\n         ],\n      };\n   }\n\n   async init(AB) {\n      this.AB = AB;\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n\n   objectLoad(object) {\n      this.CurrentObjectID = object.id;\n   }\n\n   hide() {\n      $$(this.ids.component)?.hide();\n\n      this.emit(\"close\");\n   }\n\n   show(data) {\n      $$(this.ids.component)?.show();\n\n      this.refreshForm(data);\n   }\n\n   isVisible() {\n      return $$(this.ids.component)?.isVisible() ?? false;\n   }\n\n   refreshForm(data) {\n      var ids = this.ids;\n      let $formView = $$(ids.form);\n      let CurrentObject = this.CurrentObject;\n\n      if (!CurrentObject || !$formView) return;\n\n      data = data || {};\n\n      let formAttrs = {\n         id: `${this.ids.component}_sideform`,\n         key: ABViewForm.common().key,\n         settings: {\n            columns: 1,\n            labelPosition: \"top\",\n            showLabel: 1,\n            clearOnLoad: 0,\n            clearOnSave: 0,\n            labelWidth: 120,\n            height: 0,\n         },\n      };\n\n      // let form = new ABViewForm(formAttrs, this._mockApp);\n      let form = this.AB.viewNewDetatched(formAttrs);\n\n      form.objectLoad(CurrentObject);\n\n      // Populate child elements\n      CurrentObject.fields().forEach((f, index) => {\n         // if this is one of our .editFields\n         if (!this.editFields || this.editFields.indexOf(f.id) > -1) {\n            form.addFieldToForm(f, index);\n         }\n      });\n\n      // add default button (Save button)\n      form._views.push(\n         new ABViewFormButton(\n            {\n               settings: {\n                  includeSave: true,\n                  includeCancel: false,\n                  includeReset: false,\n               },\n               position: {\n                  y: CurrentObject.fields().length, // yPosition\n               },\n            },\n            this._mockApp,\n            form\n         )\n      );\n\n      // add temp id to views\n      form._views.forEach(\n         (v, index) => (v.id = `${form.id}_${v.key}_${index}`)\n      );\n\n      let formCom = form.component(this.AB._App);\n\n      // Rebuild form\n      webix.ui(formCom.ui().rows.concat({}), $formView);\n      webix.extend($formView, webix.ProgressBar);\n\n      formCom.init(\n         this.AB,\n         2,\n         {\n            onBeforeSaveData: () => {\n               // get update data\n               var formVals = form.getFormValues($formView, CurrentObject);\n\n               // validate data\n               if (!form.validateData($formView, CurrentObject, formVals))\n                  return false;\n\n               // show progress icon\n               $formView?.showProgress({ type: \"icon\" });\n\n               if (formVals.id) {\n                  CurrentObject.model()\n                     .update(formVals.id, formVals)\n                     .then((updateVals) => {\n                        this.emit(\"update\", updateVals);\n                        // _logic.callbacks.onUpdateData(updateVals);\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     })\n                     .catch((err) => {\n                        // TODO : error message\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewKanbanFormSidePanel:onBeforeSaveData():update(): Error updating value\",\n                           formVals,\n                        });\n                        $formView?.hideProgress({ type: \"icon\" });\n                     });\n               }\n               // else add new row\n               else {\n                  CurrentObject.model()\n                     .create(formVals)\n                     .then((newVals) => {\n                        // _logic.callbacks.onAddData(newVals);\n                        this.emit(\"add\", newVals);\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     })\n                     .catch((err) => {\n                        // TODO : error message\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewKanbanFormSidePanel:onBeforeSaveData():.create(): Error creating value\",\n                           formVals,\n                        });\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     });\n               }\n\n               return false;\n            },\n         },\n         2 /* NOTE: if you can see this KanBan, you should be able to see the side form? */\n      );\n\n      // display data\n      $formView.clear();\n      $formView.parse(data);\n\n      formCom.onShow(data);\n   }\n};\n","const ABViewLabelCore = require(\"../../core/views/ABViewLabelCore\");\nconst ABViewLabelComponent = require(\"./viewComponent/ABViewLabelComponent\");\n\nmodule.exports = class ABViewLabel extends ABViewLabelCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewLabelComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.text) {\n         this.warningsMessage(\"has no text value set.\");\n      }\n   }\n};\n","const ABViewLayoutCore = require(\"../../core/views/ABViewLayoutCore\");\nconst ABViewLayoutComponent = require(\"./viewComponent/ABViewLayoutComponent\");\n\nmodule.exports = class ABViewLayout extends ABViewLayoutCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewLayoutComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (this._views.length == 0) {\n         this.warningsMessage(\"has no columns set.\");\n      }\n   }\n};\n","const ABViewListCore = require(\"../../core/views/ABViewListCore\");\nconst ABViewListComponent = require(\"./viewComponent/ABViewListComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewList extends ABViewListCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewListComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewMenuCore = require(\"../../core/views/ABViewMenuCore\");\nconst ABViewMenuComponent = require(\"./viewComponent/ABViewMenuComponent\");\n\nmodule.exports = class ABViewMenu extends ABViewMenuCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewMenuComponent(this);\n   }\n};\n","const ABViewPDFImporterCore = require(\"../../core/views/ABViewPDFImporterCore\");\nconst ABViewPDFImporterComponent = require(\"./viewComponent/ABViewPDFImporterComponent\");\n\nmodule.exports = class ABViewPDFImporter extends ABViewPDFImporterCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewPDFImporterComponent(this);\n   }\n};\n","const ABViewPageCore = require(\"../../core/views/ABViewPageCore\");\n\nconst ABPropertyComponentDefaults = ABViewPageCore.defaultValues();\n\nmodule.exports = class ABViewPage extends ABViewPageCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @param {obj} v1App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      var component = super.component();\n\n      component._ui = component.ui();\n\n      // wrap our ABViewContainer in our Page scrollview\n      component.ui = () => {\n         return {\n            view: \"scrollview\",\n            borderless: true,\n            css:\n               this.settings.pageBackground ||\n               ABPropertyComponentDefaults.pageBackground,\n            body: component._ui,\n         };\n      };\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               accessLevel = accessLevel ?? this.getUserAccess();\n               return newComponent.init(this.AB, accessLevel, options);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no sub views\");\n      }\n\n      (this.pages() || []).forEach((p) => {\n         p.warningsEval();\n      });\n   }\n};\n","const ABViewPivotCore = require(\"../../core/views/ABViewPivotCore\");\nconst ABViewPivotComponent = require(\"./viewComponent/ABViewPivotComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewPivot extends ABViewPivotCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewPivotComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewReportsManagerCore = require(\"../../core/views/ABViewReportsManagerCore\");\nconst ABViewReportsManagerComponent = require(\"./viewComponent/ABViewReportsManagerComponent\");\n\nmodule.exports = class ABViewReportsManager extends ABViewReportsManagerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewReportsManagerComponent(this);\n   }\n};\n","const ABViewSchedulerCore = require(\"../../core/views/ABViewSchedulerCore\");\nconst ABViewSchedulerComponent = require(\"./viewComponent/ABViewSchedulerComponent\");\n\nmodule.exports = class ABViewScheduler extends ABViewSchedulerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewSchedulerComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n   }\n};\n","const ABViewTabCore = require(\"../../core/views/ABViewTabCore\");\n\nconst ABViewTabComponent = require(\"./viewComponent/ABViewTabComponent\");\n\nmodule.exports = class ABViewTab extends ABViewTabCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewTabComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no tabs set\");\n      }\n\n      // NOTE: this is done in ABView:\n      // (this.views() || []).forEach((v) => {\n      //    v.warningsEval();\n      // });\n   }\n};\n","const ABViewTextCore = require(\"../../core/views/ABViewTextCore\");\n\nconst ABViewTextComponent = require(\"./viewComponent/ABViewTextComponent\");\n\nmodule.exports = class ABViewText extends ABViewTextCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component(parentId) {\n      return new ABViewTextComponent(this, parentId);\n   }\n};\n","const ABViewWidgetCore = require(\"../../core/views/ABViewWidgetCore\");\n\nconst ABPropertyComponentDefaults = ABViewWidgetCore.defaultValues();\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewWidget extends ABViewWidgetCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(App) {\n      let base = super.component(App);\n\n      base.onShow = (viewId) => {\n         let dv = this.datacollection; // get from a function or a (get) property\n         if (dv && dv.dataStatus == dv.dataStatusFlag.notInitial) {\n            // load data when a widget is showing\n            dv.loadData();\n         }\n      };\n\n      return base;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewCSVExporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABCSVExporter_${baseView.id}`,\n         Object.assign(\n            {\n               button: \"\",\n               buttonFilter: \"\",\n               filterComplex: \"\",\n            },\n            ids\n         )\n      );\n\n      this.clientFilter = null;\n   }\n\n   ui() {\n      const ids = this.ids;\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n      const _ui = super.ui([\n         {\n            view: \"layout\",\n            type: \"clean\",\n            borderless: true,\n            cols: [\n               {\n                  id: ids.buttonFilter,\n                  view: \"button\",\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"fa fa-filter\",\n                  borderless: true,\n                  width: 50,\n                  label: \"\",\n                  click: () => {\n                     this.showFilterPopup();\n                  },\n               },\n               {\n                  id: ids.button,\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-download\",\n                  borderless: true,\n                  width: settings.width || defaultSettings.width,\n                  label: settings.buttonLabel ?? defaultSettings.buttonLabel,\n                  click: () => {\n                     this.downloadCsvFile();\n                  },\n               },\n               { fillspace: true },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      if (!this.clientFilter) {\n         const clientFilter = AB.filterComplexNew(this.ids.filterComplex);\n\n         const dc = this.datacollection;\n\n         if (dc) {\n            const obj = dc.datasource;\n\n            clientFilter.fieldsLoad(obj?.fields?.() ?? []);\n         }\n\n         clientFilter.init();\n         clientFilter.on(\"change\", (val) => {\n            this.onFilterChange(val);\n         });\n\n         this.clientFilter = clientFilter;\n      }\n   }\n\n   downloadCsvFile() {\n      let url = `/appbuilder/csv-export/${this.view.id}`;\n\n      const where = this.clientFilter.getValue();\n\n      if ((where?.rules || []).length) {\n         let qsWhere = JSON.stringify(where);\n\n         qsWhere = encodeURIComponent(qsWhere);\n         url = `${url}?where=${qsWhere}`;\n      }\n\n      window.open(url);\n   }\n\n   showFilterPopup() {\n      const $buttonFilter = $$(this.ids.buttonFilter);\n\n      this.clientFilter.popUp($buttonFilter ? $buttonFilter.$view : null);\n   }\n\n   onFilterChange() {\n      const $buttonFilter = $$(this.ids.buttonFilter);\n\n      if (!$buttonFilter) return;\n\n      const where = this.clientFilter.getValue();\n\n      $buttonFilter.define(\"badge\", (where.rules || []).length || null);\n      $buttonFilter.refresh();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst CSVImporter = require(\"../../CSVImporter\");\n\nmodule.exports = class ABViewCSVImporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABCSVImporter_${baseView.id}`,\n         Object.assign(\n            {\n               button: \"\",\n               popup: \"\",\n\n               form: \"\",\n               uploader: \"\",\n               uploadFileList: \"\",\n               separatedBy: \"\",\n               headerOnFirstLine: \"\",\n               columnList: \"\",\n\n               search: \"\",\n               datatable: \"\",\n\n               statusMessage: \"\",\n               progressBar: \"\",\n\n               linkedDataButton: \"\",\n               importButton: \"\",\n               rules: \"\",\n            },\n            ids\n         )\n      );\n\n      this.csvImporter = new CSVImporter((...args) => this.label(...args));\n      // {CSVImporter}\n      // An instance of the object that imports the CSV data.\n\n      this.validationError = false;\n\n      this._dataRows = null;\n      this._csvFileInfo = null;\n   }\n\n   ui() {\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n      const _ui = super.ui([\n         {\n            cols: [\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-upload\",\n                  label: this.label(\n                     settings.buttonLabel || defaultSettings.buttonLabel\n                  ),\n                  width: settings.width || defaultSettings.width,\n                  click: () => {\n                     this.showPopup();\n                  },\n               },\n               {\n                  fillspace: true,\n               },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiConfig() {\n      const ids = this.ids;\n\n      return {\n         id: ids.form,\n         view: \"form\",\n         type: \"clean\",\n         borderless: true,\n         minWidth: 400,\n         gravity: 1,\n         elements: [\n            {\n               rows: [\n                  {\n                     id: ids.uploader,\n                     view: \"uploader\",\n                     name: \"csvFile\",\n                     css: \"webix_primary\",\n                     value: this.label(\"Choose a CSV file\"),\n                     accept: \"text/csv\",\n                     multiple: false,\n                     autosend: false,\n                     link: ids.uploadFileList,\n                     on: {\n                        onBeforeFileAdd: (fileInfo) => {\n                           this._csvFileInfo = fileInfo;\n\n                           return this.loadCsvFile();\n                        },\n                     },\n                  },\n                  {\n                     id: ids.uploadFileList,\n                     name: \"uploadedFile\",\n                     view: \"list\",\n                     type: \"uploader\",\n                     autoheight: true,\n                     borderless: true,\n                     onClick: {\n                        webix_remove_upload: (e, id /*, trg */) => {\n                           this.removeCsvFile(id);\n                        },\n                     },\n                  },\n                  {\n                     padding: 10,\n                     rows: [\n                        {\n                           id: ids.separatedBy,\n                           view: \"richselect\",\n                           name: \"separatedBy\",\n                           label: this.label(\"Separated by\"),\n                           labelWidth: 140,\n                           options: this.csvImporter.getSeparateItems(),\n                           value: \",\",\n                           on: {\n                              onChange: () => {\n                                 this.loadCsvFile();\n                              },\n                           },\n                        },\n                        {\n                           id: ids.headerOnFirstLine,\n                           view: \"checkbox\",\n                           name: \"headerOnFirstLine\",\n                           label: this.label(\"Header on first line\"),\n                           labelWidth: 140,\n                           disabled: true,\n                           value: true,\n                           on: {\n                              onChange: (/*newVal, oldVal*/) => {\n                                 this.populateColumnList();\n                              },\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     type: \"space\",\n                     rows: [\n                        {\n                           view: \"scrollview\",\n                           minHeight: 300,\n                           body: {\n                              padding: 10,\n                              id: ids.columnList,\n                              rows: [],\n                           },\n                        },\n                     ],\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   uiRecordsView() {\n      const ids = this.ids;\n\n      return {\n         gravity: 2,\n         rows: [\n            {\n               view: \"toolbar\",\n               css: \"bg_gray\",\n               cols: [\n                  { width: 5 },\n                  {\n                     id: ids.search,\n                     view: \"search\",\n                     value: \"\",\n                     label: \"\",\n                     placeholder: this.label(\"Search records...\"),\n                     keyPressTimeout: 200,\n                     on: {\n                        onTimedKeyPress: () => {\n                           this.search($$(ids.search).getValue());\n                        },\n                     },\n                  },\n                  { width: 2 },\n               ],\n            },\n            {\n               id: ids.datatable,\n               view: \"datatable\",\n               resizeColumn: true,\n               editable: true,\n               editaction: \"dblclick\",\n               css: \"ab-csv-importer\",\n               borderless: false,\n               tooltip: (obj) => {\n                  const tooltip = obj._errorMsg\n                     ? obj._errorMsg\n                     : \"No validation errors\";\n                  return tooltip;\n               },\n               minWidth: 650,\n               columns: [],\n               on: {\n                  onValidationError: (id, obj, details) => {\n                     // console.log(`item ${id} invalid`);\n                     let errors = \"\";\n\n                     Object.keys(details).forEach((key) => {\n                        this.$view.complexValidations[key].forEach((err) => {\n                           errors += err.invalidMessage + \"</br>\";\n                        });\n                     });\n\n                     const $dt = $$(ids.datatable);\n\n                     $dt.blockEvent();\n                     $dt.updateItem(id, {\n                        _status: \"invalid\",\n                        _errorMsg: errors,\n                     });\n                     $dt.unblockEvent();\n\n                     this.validationError = true;\n                  },\n                  onValidationSuccess: (id, obj, details) => {\n                     // console.log(`item ${id} valid`);\n                     const $dt = $$(ids.datatable);\n\n                     $dt.blockEvent();\n                     $dt.updateItem(id, {\n                        _status: \"valid\",\n                        _errorMsg: \"\",\n                     });\n                     $dt.unblockEvent();\n                     this.validationError = false;\n                  },\n                  onCheck: () => {\n                     const selected = $$(ids.datatable).find({\n                        _included: true,\n                     });\n                     const $importButton = $$(ids.importButton);\n\n                     $importButton.setValue(this.labelImport(selected));\n\n                     if (this.overLimitAlert(selected)) $importButton.disable();\n                     else $importButton.enable();\n                  },\n               },\n            },\n            {\n               id: ids.progressBar,\n               height: 6,\n            },\n            {\n               cols: [\n                  {\n                     id: ids.linkedDataButton,\n                     view: \"button\",\n                     label: this.label(\"Linked Data\"),\n                     type: \"icon\",\n                     icon: \"fa fa-info\",\n                     maxWidth: 180,\n                     click: () => {\n                        this.showLinkedData();\n                     },\n                  },\n                  {\n                     view: \"button\",\n                     name: \"import\",\n                     id: ids.importButton,\n                     label: this.label(\"Import\"),\n                     css: \"webix_primary\",\n                     disabled: true,\n                     type: \"icon\",\n                     icon: \"fa fa-upload\",\n                     click: () => {\n                        this.import();\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   uiPopup() {\n      const ids = this.ids;\n\n      return {\n         id: ids.popup,\n         view: \"window\",\n         hidden: true,\n         position: \"center\",\n         modal: true,\n         resize: true,\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {},\n               {\n                  view: \"label\",\n                  label: this.label(\"CSV Importer\"),\n                  autowidth: true,\n               },\n               {},\n               {\n                  view: \"button\",\n                  width: 35,\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"nomargin fa fa-times\",\n                  click: () => {\n                     this.hide();\n                  },\n               },\n            ],\n         },\n         body: {\n            type: \"form\",\n            rows: [\n               {\n                  type: \"line\",\n                  cols: [\n                     this.uiConfig(),\n                     { width: 20 },\n                     this.uiRecordsView(),\n                     { width: 1 },\n                  ],\n               },\n               {\n                  id: ids.statusMessage,\n                  view: \"label\",\n                  align: \"right\",\n                  hidden: true,\n               },\n               {\n                  hidden: true,\n                  margin: 5,\n                  cols: [\n                     { fillspace: true },\n                     {\n                        view: \"button\",\n                        name: \"cancel\",\n                        value: this.label(\"Cancel\"),\n                        css: \"ab-cancel-button\",\n                        autowidth: true,\n                        click: () => {\n                           this.hide();\n                        },\n                     },\n                     /*,\n                        {\n                           view: \"button\",\n                           name: \"import\",\n                           id: ids.importButton,\n                           value: labels.component.import,\n                           css: \"webix_primary\",\n                           disabled: true,\n                           autowidth: true,\n                           type: \"form\",\n                           click: () => {\n                              _logic.import();\n                           }\n                        }*/\n                  ],\n               },\n            ],\n         },\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n\n      // Populate values to rules\n\n      const dc = this.datacollection;\n\n      if (dc) this.objectLoad(dc.datasource);\n\n      const abWebix = AB.Webix;\n\n      abWebix.ui(this.uiPopup());\n\n      const $form = $$(ids.form);\n\n      if ($form) abWebix.extend($form, abWebix.ProgressBar);\n\n      const $progressBar = $$(ids.progressBar);\n\n      if ($progressBar) abWebix.extend($progressBar, abWebix.ProgressBar);\n   }\n\n   showPopup() {\n      const ids = this.ids;\n\n      $$(ids.popup)?.show();\n\n      this.formClear();\n\n      // open file dialog to upload\n      $$(ids.uploader).fileDialog();\n   }\n\n   hide() {\n      $$(this.ids.popup)?.hide();\n   }\n\n   formClear() {\n      const ids = this.ids;\n\n      this._dataRows = null;\n      this._csvFileInfo = null;\n\n      const $form = $$(ids.form);\n\n      $form.clearValidation();\n      $form.clear();\n\n      $$(ids.separatedBy).setValue(\",\");\n\n      this.AB.Webix.ui([], $$(ids.columnList));\n\n      $$(ids.headerOnFirstLine).disable();\n      $$(ids.importButton).disable();\n\n      $$(ids.search).setValue(\"\");\n      $$(ids.uploadFileList).clearAll();\n      $$(ids.datatable).clearAll();\n\n      const $statusMessage = $$(ids.statusMessage);\n\n      $statusMessage.setValue(\"\");\n      $statusMessage.hide();\n   }\n\n   search(searchText) {\n      const $datatable = $$(this.ids.datatable);\n\n      if (!$datatable) return;\n\n      searchText = (searchText || \"\").toLowerCase();\n\n      const matchFields = this.getMatchFields();\n\n      $datatable.filter((row) => {\n         let exists = false;\n\n         (matchFields || []).forEach((f) => {\n            if (exists) return;\n\n            exists =\n               (row[`${f.columnIndex}`] || \"\")\n                  .toString()\n                  .toLowerCase()\n                  .indexOf(searchText) > -1;\n         });\n\n         return exists;\n      });\n   }\n\n   statusTemplate(item) {\n      let template = \"\";\n\n      if (!item) return template;\n\n      switch (item._status) {\n         case \"in-progress\":\n            template = \"<span class='fa fa-refresh'></span>\";\n            break;\n         case \"invalid\":\n            template = \"<span class='fa fa-exclamation-triangle'></span>\";\n            break;\n         case \"valid\":\n            template = \"<span class='fa fa-check'></span>\";\n            break;\n         case \"done\":\n            template = \"<span class='fa fa-check'></span>\";\n            break;\n         case \"fail\":\n            template = \"<span class='fa fa-remove'></span>\";\n            break;\n      }\n\n      return template;\n   }\n\n   async loadCsvFile() {\n      const _csvFileInfo = this._csvFileInfo;\n\n      if (!_csvFileInfo) return false;\n\n      const csvImporter = this.csvImporter;\n\n      if (!csvImporter.validateFile(_csvFileInfo)) {\n         this.AB.Webix.alert({\n            title: this.label(\"This file extension is not allowed\"),\n            text: this.label(\"Please only upload CSV files\"),\n            ok: this.label(\"Ok\"),\n         });\n\n         return false;\n      }\n\n      const ids = this.ids;\n\n      // show loading cursor\n      const $form = $$(ids.form);\n\n      $form?.showProgress?.({ type: \"icon\" });\n\n      // read CSV file\n      const $headerOnFirstLine = $$(ids.headerOnFirstLine);\n      const $importButton = $$(ids.importButton);\n\n      $headerOnFirstLine.enable();\n      $importButton.enable();\n\n      this._dataRows = await csvImporter.getDataRows(\n         _csvFileInfo,\n         $$(ids.separatedBy).getValue()\n      );\n\n      const _dataRows = this._dataRows;\n\n      let length = _dataRows.length;\n\n      if ($headerOnFirstLine.getValue()) length = _dataRows.length - 1;\n\n      $importButton.setValue(this.labelImport(length));\n      this.populateColumnList();\n      $form?.hideProgress?.();\n\n      return true;\n   }\n\n   removeCsvFile(fileId) {\n      $$(this.ids.uploadFileList).remove(fileId);\n      this.formClear();\n\n      return true;\n   }\n\n   populateColumnList() {\n      const self = this;\n      const ids = this.ids;\n      const abWebix = this.AB.Webix;\n\n      // clear list\n      const $columnList = $$(ids.columnList);\n\n      abWebix.ui([], $columnList);\n\n      const _dataRows = this._dataRows;\n\n      if (!_dataRows) return;\n\n      // check first line of CSV\n      const firstLine = _dataRows[0];\n\n      if (!firstLine) return;\n\n      const csvColumnList = [];\n      const fieldList = [];\n      const currentObject = this.CurrentObject;\n\n      if (currentObject)\n         fieldList.push(\n            ...currentObject.fields((f) => {\n               // available fields\n               if (\n                  this.settings.availableFieldIds?.length &&\n                  this.settings.availableFieldIds.indexOf(f.id) < 0\n               ) {\n                  return false;\n               }\n\n               // filter editable fields\n               const formComp = f.formComponent();\n\n               if (!formComp) return true;\n\n               const formConfig = formComp.common();\n\n               if (!formConfig) return true;\n\n               return formConfig.key != \"fieldreadonly\";\n            })\n         );\n\n      const csvImporter = this.csvImporter;\n\n      // check first line be header columns\n      if ($$(ids.headerOnFirstLine).getValue())\n         csvColumnList.push(\n            ...firstLine.map((colName, index) => {\n               return {\n                  id: index + 1, // webix .options list disallow value 0\n                  value: colName,\n                  key: csvImporter.getGuessDataType(_dataRows, index),\n               };\n            })\n         );\n      else\n         firstLine.forEach((e, i) => {\n            csvColumnList.push({\n               id: i + 1, // webix .options list disallow value 0\n               value: this.label(\"Column {0}\", [i + 1]),\n               key: csvImporter.getGuessDataType(_dataRows, i),\n            });\n         });\n\n      // Add unselect item\n      csvColumnList.unshift({\n         id: \"none\",\n         value: this.label(\"None\"),\n      });\n\n      // populate columns to UI\n      const uiColumns = [];\n      const selectedCsvCols = [];\n\n      fieldList.forEach((f) => {\n         // match up by data type\n         const matchCol = csvColumnList.filter(\n            (c) => c.key == f.key && selectedCsvCols.indexOf(c.id) < 0\n         )[0];\n\n         let selectVal = \"none\";\n\n         if (matchCol) {\n            selectVal = matchCol.id;\n\n            // cache\n            selectedCsvCols.push(selectVal);\n         }\n\n         let columnOptUI = {\n            view: \"richselect\",\n            gravity: 2,\n            options: csvColumnList,\n            fieldId: f.id,\n            abName: \"columnIndex\",\n            value: selectVal,\n            on: {\n               onChange: function () {\n                  self.toggleLinkFields(this);\n                  self.loadDataToGrid();\n               },\n            },\n         };\n\n         // Add date format options\n         if (f.key === \"date\") {\n            const dateSeparatorOptions = [\"/\", \"-\", \".\", \",\", \" \"];\n            const dayFormatOptions = [\n               { value: this.label(\"1 to 31\"), id: \"D\" },\n               { value: this.label(\"01 to 31\"), id: \"DD\" },\n            ];\n            const monthFormatOptions = [\n               { value: this.label(\"1 to 12\"), id: \"M\" },\n               { value: this.label(\"01 to 12\"), id: \"MM\" },\n            ];\n            const yearFormatOptions = [\n               { value: this.label(\"00 to 99\"), id: \"YY\" },\n               { value: this.label(\"2000 to 2099\"), id: \"YYYY\" },\n            ];\n            const dateOrderOptions = [\n               {\n                  value: this.label(\"D-M-Y\"),\n                  id: 1,\n               },\n               {\n                  value: this.label(\"M-D-Y\"),\n                  id: 2,\n               },\n               {\n                  value: this.label(\"Y-M-D\"),\n                  id: 3,\n               },\n               {\n                  value: this.label(\"Y-D-M\"),\n                  id: 4,\n               },\n            ];\n\n            columnOptUI = {\n               gravity: 2,\n               rows: [\n                  columnOptUI,\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Separator\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"separator\",\n                     abName: \"columnDateFormat\",\n                     options: dateSeparatorOptions,\n                     value: \"/\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Day\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"day\",\n                     abName: \"columnDateFormat\",\n                     options: dayFormatOptions,\n                     value: \"D\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Month\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"month\",\n                     abName: \"columnDateFormat\",\n                     options: monthFormatOptions,\n                     value: \"M\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Year\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"year\",\n                     abName: \"columnDateFormat\",\n                     options: yearFormatOptions,\n                     value: \"YY\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Order\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"order\",\n                     abName: \"columnDateFormat\",\n                     options: dateOrderOptions,\n                     value: 1,\n                  },\n               ],\n            };\n         }\n\n         // Add connected field options\n         if (f.isConnection) {\n            let linkFieldOptions = [];\n\n            if (f.datasourceLink) {\n               linkFieldOptions = f.datasourceLink\n                  .fields((fld) => !fld.isConnection)\n                  .map((fld) => {\n                     return {\n                        id: fld.id,\n                        value: fld.label,\n                     };\n                  });\n            }\n\n            columnOptUI = {\n               gravity: 2,\n               rows: [\n                  columnOptUI,\n                  {\n                     view: \"richselect\",\n                     label: \"=\",\n                     labelWidth: 20,\n                     abName: \"columnLinkData\",\n                     hidden: true,\n                     options: linkFieldOptions,\n                     value: linkFieldOptions[0] ? linkFieldOptions[0].id : null,\n                  },\n               ],\n            };\n         }\n\n         uiColumns.push({\n            view: \"layout\",\n            borderless: true,\n            cols: [\n               {\n                  view: \"template\",\n                  gravity: 1,\n                  borderless: true,\n                  css: { \"padding-top\": 10 },\n                  template: `<span class=\"fa fa-${f.icon}\"></span> ${f.label}`,\n               },\n               columnOptUI,\n            ],\n         });\n      });\n      abWebix.ui(uiColumns, $columnList);\n\n      this.loadDataToGrid();\n   }\n\n   toggleLinkFields($columnOption) {\n      if (!$columnOption) return;\n\n      const $optionPanel = $columnOption.getParentView();\n      const $linkFieldOption = $optionPanel.queryView(\n         { abName: \"columnLinkData\" },\n         \"all\"\n      )[0];\n\n      if (!$linkFieldOption) return;\n\n      if ($columnOption.getValue() === \"none\") $linkFieldOption.hide();\n      else $linkFieldOption.show();\n   }\n\n   overLimitAlert(data) {\n      const limit = 1000;\n\n      if (data.length > limit) {\n         // we only allow 1000 record imports\n         this.AB.Webix.alert({\n            title: this.label(\"Too many records\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\n               \"Due to browser limitations we only allow imports of {0} records. Please upload a new CSV or deselect records to import.\",\n               [limit]\n            ),\n         });\n\n         return true;\n      }\n\n      return false;\n   }\n\n   loadDataToGrid() {\n      const ids = this.ids;\n      const $datatable = $$(ids.datatable);\n      const ab = this.AB;\n\n      if (!$datatable) return;\n\n      $datatable.clearAll();\n\n      // show loading cursor\n      $datatable.showProgress?.({ type: \"icon\" });\n\n      /** Prepare Columns */\n      const matchFields = this.getMatchFields();\n      const columns = [];\n\n      // add \"status\" column\n      columns.push({\n         id: \"_status\",\n         header: \"\",\n         template: this.statusTemplate,\n         width: 30,\n      });\n\n      // add \"checkbox\" column\n      columns.push({\n         id: \"_included\",\n         header: { content: \"masterCheckbox\" },\n         template: \"{common.checkbox()}\",\n         width: 30,\n      });\n\n      const fieldValidations = [];\n      const rulePops = [];\n\n      // populate columns\n      (matchFields || []).forEach((f) => {\n         let validationRules = f.field.settings.validationRules;\n         // parse the rules because they were stored as a string\n         // check if rules are still a string...if so lets parse them\n         if (validationRules && typeof validationRules === \"string\")\n            validationRules = JSON.parse(validationRules);\n\n         if (validationRules?.length) {\n            const validationUI = [];\n\n            // there could be more than one so lets loop through and build the UI\n            validationRules.forEach((rule) => {\n               const Filter = ab.filterComplexNew(\n                  `${f.field.id}_${ab.Webix.uid()}`\n               );\n               // add the new ui to an array so we can add them all at the same time\n               validationUI.push(Filter.ui);\n               // store the filter's info so we can assign values and settings after the ui is rendered\n               fieldValidations.push({\n                  filter: Filter,\n                  view: Filter.ids.querybuilder,\n                  columnName: f.field.id,\n                  validationRules: rule.rules,\n                  invalidMessage: rule.invalidMessage,\n                  columnIndex: f.columnIndex,\n               });\n            });\n\n            // create a unique view id for popup\n            const popUpId = `${ids.rules}_${f.field.id}_${ab.Webix.uid()}`;\n\n            // store the popup ids so we can remove the later\n            rulePops.push(popUpId);\n            // add the popup to the UI but don't show it\n            ab.Webix.ui({\n               view: \"popup\",\n               css: \"ab-rules-popup\",\n               id: popUpId,\n               body: {\n                  rows: validationUI,\n               },\n            });\n         }\n\n         const editor = f.field?.key == \"number\" ? \"number\" : \"text\";\n\n         columns.push({\n            id: f.columnIndex,\n            header: f.field.label,\n            editor: editor,\n            template: (obj, common, value /*, col, ind */) =>\n               value.replace(/[<]/g, \"&lt;\"),\n            minWidth: 150,\n            fillspace: true,\n         });\n      });\n\n      if (fieldValidations.length) {\n         // we need to store the rules for use later so lets build a container array\n         const complexValidations = [];\n\n         fieldValidations.forEach((f) => {\n            // init each ui to have the properties (app and fields) of the object we are editing\n            // f.filter.applicationLoad(App);\n            f.filter.fieldsLoad(this.CurrentObject.fields());\n            // now we can set the value because the fields are properly initialized\n            f.filter.setValue(f.validationRules);\n            // if there are validation rules present we need to store them in a lookup hash\n            // so multiple rules can be stored on a single field\n            if (!Array.isArray(complexValidations[f.columnName]))\n               complexValidations[f.columnName] = [];\n\n            // now we can push the rules into the hash\n            complexValidations[f.columnName].push({\n               filters: $$(f.view).getFilterHelper(),\n               values: $datatable.getSelectedItem(),\n               invalidMessage: f.invalidMessage,\n               columnIndex: f.columnIndex,\n            });\n         });\n\n         const rules = {};\n\n         // store the rules in a data param to be used later\n         $datatable.$view.complexValidations = complexValidations;\n\n         // use the lookup to build the validation rules\n         Object.keys(complexValidations).forEach((key) => {\n            rules[key] = (value, data) => {\n               // default valid is true\n               let isValid = true;\n\n               $datatable.$view.complexValidations[key].forEach((filter) => {\n                  const rowValue = {};\n                  // use helper funtion to check if valid\n                  // map the column names to the index numbers of data\n                  // reformat data to display\n\n                  (matchFields || []).forEach((f) => {\n                     const record = data[f.columnIndex];\n\n                     if (\n                        f.field.key === \"date\" &&\n                        record.includes(\"Invalid date\")\n                     )\n                        isValid = false;\n\n                     rowValue[f.field.id] = record;\n                  });\n\n                  const ruleValid = filter.filters(rowValue);\n\n                  // if invalid we need to tell the field\n                  if (!ruleValid) {\n                     isValid = false;\n                     // this.AB.Webix.message({\n                     //    type: \"error\",\n                     //    text: invalidMessage\n                     // });\n                  }\n               });\n\n               return isValid;\n            };\n         });\n         // define validation rules\n         $datatable.define(\"rules\", rules);\n         // store the array of view ids on the webix object so we can get it later\n         $datatable.config.rulePops = rulePops;\n         $datatable.refresh();\n      } else {\n         // check if the previous datatable had rule popups and remove them\n         if ($datatable.config.rulePops) {\n            $datatable.config.rulePops.forEach((popup) => {\n               const $popup = $$(popup);\n\n               if (!$popup) return;\n\n               $popup.destructor();\n            });\n         }\n\n         // remove any validation rules from the previous table\n         $datatable.define(\"rules\", {});\n         $datatable.refresh();\n      }\n\n      /** Prepare Data */\n      const parsedData = [];\n\n      (this._dataRows || []).forEach((row, index) => {\n         const rowValue = {\n            id: index + 1,\n         };\n\n         // reformat data to display\n         (matchFields || []).forEach((f) => {\n            const data = row[f.columnIndex - 1];\n\n            if (f.field.key === \"date\") {\n               // let dateFormat = moment(data, f.format).format(\n               //    \"YYYY-MM-DD\"\n               // );\n               // debugger;\n               let dateFormat = ab.rules.toDate(data, {\n                  format: f.format,\n               });\n               dateFormat = ab.rules.toDateFormat(dateFormat, {\n                  format: \"YYYY-MM-DD\",\n               });\n\n               if (dateFormat === \"Invalid date\")\n                  dateFormat = dateFormat + \" - \" + data;\n\n               rowValue[f.columnIndex] = dateFormat;\n            } else rowValue[f.columnIndex] = data; // array to object\n         });\n\n         // insert \"true\" value of checkbox\n         rowValue[\"_included\"] = true;\n\n         parsedData.push(rowValue);\n      });\n\n      // skip the first line\n      const isSkipFirstLine = $$(ids.headerOnFirstLine).getValue();\n\n      if (isSkipFirstLine && parsedData.length > 1) parsedData.shift();\n\n      const $importButton = $$(ids.importButton);\n\n      $importButton.setValue(this.labelImport(parsedData));\n      $datatable.refreshColumns(columns);\n      $datatable.parse(parsedData);\n\n      if (this.overLimitAlert(parsedData)) $importButton.disable();\n      else $importButton.enable();\n\n      // hide loading cursor\n      $datatable.hideProgress?.();\n   }\n\n   refreshRemainingTimeText(startUpdateTime, total, index) {\n      const ids = this.ids;\n\n      // Calculate remaining time\n      const spentTime = new Date() - startUpdateTime; // milliseconds that has passed since last completed record since start\n\n      const averageRenderTime = spentTime / index; // average milliseconds per single render at this point\n\n      const remainTime = averageRenderTime * (total - index);\n\n      let result = \"\";\n\n      // Convert milliseconds to a readable string\n      const days = (remainTime / 86400000).toFixed(0);\n      const hours = (remainTime / 3600000).toFixed(0);\n      const minutes = (remainTime / 60000).toFixed(0);\n      const seconds = (remainTime / 1000).toFixed(0);\n\n      if (seconds < 1) result = \"\";\n      else if (seconds < 60)\n         result = this.label(\"Approximately {0} second(s) remaining\", [\n            seconds,\n         ]);\n      // result = `Approximately ${seconds} second${\n      //    seconds > 1 ? \"s\" : \"\"\n      // }`;\n      else if (minutes == 1)\n         result = this.label(\"Approximately 1 minute {0} seconds remaining\", [\n            seconds - 60,\n         ]);\n      // result = `Approximately 1 minute ${seconds - 60} seconds`;\n      else if (minutes < 60)\n         result = this.label(\"Approximately {0} minutes remaining\", [minutes]);\n      else if (hours < 24)\n         result = this.label(\"Approximately {0} hour(s) remaining\", [hours]);\n      else result = this.label(\"Approximately {0} day(s) remaining\", [days]);\n\n      if (result) {\n         $$(ids.importButton)?.setValue(result);\n      } else {\n         const selected = $$(ids.datatable)?.find({ _included: true });\n         $$(ids.importButton)?.setValue(this.labelImport(selected));\n      }\n   }\n\n   /**\n    * @method getMatchFields\n    *\n    * @return {Object} - [\n    *                      {\n    *                         columnIndex: {number},\n    *                         field: {ABField},\n    *                         searchField: {ABField} [optional]\n    *                      },\n    *                      ...\n    *                    ]\n    */\n   getMatchFields() {\n      const result = [];\n      const ids = this.ids;\n\n      // get richselect components\n      const $selectorViews = $$(ids.columnList)\n         .queryView({ abName: \"columnIndex\" }, \"all\")\n         .filter((selector) => selector.getValue() != \"none\");\n\n      ($selectorViews || []).forEach(($selector) => {\n         const currentObject = this.CurrentObject;\n\n         if (!currentObject) return;\n\n         // webix .options list disallow value 0\n         const field = currentObject.fieldByID($selector.config.fieldId);\n\n         if (!field) return;\n\n         const colIndex = $selector.getValue();\n         const fieldData = {\n            columnIndex: colIndex,\n            field: field,\n         };\n\n         if (field.key === \"date\") {\n            const $optionPanel = $selector.getParentView();\n            const $dateFormatSelectors = $optionPanel.queryView(\n               { abName: \"columnDateFormat\" },\n               \"all\"\n            );\n\n            // define the column to compare data to search .id\n            if ($dateFormatSelectors) {\n               $dateFormatSelectors.forEach((selector) => {\n                  fieldData[selector.config.name] = selector.getValue();\n               });\n\n               // convert all dates into mysql date format YYYY-DD-MM\n               let format;\n\n               switch (fieldData.order) {\n                  case \"1\":\n                     format =\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.year;\n                     break;\n                  case \"2\":\n                     format =\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.year;\n                     break;\n                  case \"3\":\n                     format =\n                        fieldData.year +\n                        fieldData.separator +\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.day;\n                     break;\n                  case \"4\":\n                     format =\n                        fieldData.year +\n                        fieldData.separator +\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.month;\n               }\n\n               fieldData.format = format;\n            }\n         }\n\n         if (field.isConnection) {\n            const $optionPanel = $selector.getParentView();\n            const $linkDataSelector = $optionPanel.queryView(\n               { abName: \"columnLinkData\" },\n               \"all\"\n            )[0];\n\n            // define the column to compare data to search .id\n            if ($linkDataSelector) {\n               const searchField = field.datasourceLink.fieldByID(\n                  $linkDataSelector.getValue()\n               );\n\n               fieldData.searchField = searchField;\n            }\n         }\n\n         result.push(fieldData);\n      });\n\n      return result;\n   }\n\n   labelImport(selected) {\n      let length = selected;\n\n      if (Array.isArray(selected)) length = selected.length;\n\n      return this.label(\"Import {0} Records\", [length]);\n   }\n\n   /**\n    * @method import\n    *\n    * @return {Promise}\n    */\n   async import() {\n      // if (dv == null) return Promise.resolve();\n\n      // // get ABObject\n      // let obj = dv.datasource;\n\n      // Make sure we are connected to an Object\n      const currentObject = this.CurrentObject;\n\n      if (!currentObject) return;\n\n      // get ABModel\n      // let model = dv.model;\n      // if (model == null) return Promise.resolve();\n\n      const ids = this.ids;\n      const $importButton = $$(ids.importButton);\n\n      $importButton.disable();\n\n      // Show loading cursor\n      const $form = $$(ids.form);\n      const $progressBar = $$(ids.progressBar);\n\n      $form.showProgress({ type: \"icon\" });\n      $progressBar.showProgress({\n         type: \"top\",\n         position: 0.0001,\n      });\n\n      // get richselect components\n      const matchFields = this.getMatchFields();\n\n      // Get object's model\n      const objModel = currentObject.model();\n      const $datatable = $$(ids.datatable);\n      const selectedRows = $datatable.find({ _included: true });\n\n      let _currProgress = 0;\n\n      const increaseProgressing = () => {\n         _currProgress += 1;\n         $progressBar.showProgress({\n            type: \"bottom\",\n            position: _currProgress / selectedRows.length,\n         });\n      };\n      const itemFailed = (itemId, errMessage) => {\n         if ($datatable) {\n            // set \"fail\" status\n            $datatable.addRowCss(itemId, \"row-fail\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"fail\",\n               _errorMsg: errMessage,\n            });\n            $datatable.unblockEvent();\n         }\n\n         increaseProgressing();\n\n         console.error(errMessage);\n      };\n      const abWebix = this.AB.Webix;\n      const itemInvalid = (itemId, errors = []) => {\n         if ($datatable) {\n            // combine all error messages to display in tooltip\n            const errorMsg = [];\n            // mark which column are invalid\n            errors.forEach((err) => {\n               if (!err?.name) return;\n\n               const fieldInfo = matchFields.filter(\n                  (f) => f.field && f.field.columnName == err.name\n               )[0];\n\n               errorMsg.push(err.name + \": \" + err.message);\n               // we also need to define an error message\n               // abWebix.message({\n               //    type: \"error\",\n               //    text: err.name + \": \" + err.message\n               // });\n            });\n\n            // set \"fail\" status\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"invalid\",\n               _errorMsg: errorMsg.join(\"</br>\"),\n            });\n            $datatable.unblockEvent();\n            $datatable.addRowCss(itemId, \"webix_invalid\");\n         }\n         // increaseProgressing();\n      };\n      const itemPass = (itemId) => {\n         if ($datatable) {\n            // set \"done\" status\n            $datatable.removeRowCss(itemId, \"row-fail\");\n            $datatable.addRowCss(itemId, \"row-pass\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"done\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n         }\n\n         increaseProgressing();\n      };\n      const itemValid = (itemId) => {\n         if ($datatable) {\n            // mark all columns valid (just in case they were invalid before)\n            // matchFields.forEach((f) => {\n            //    $datatable.removeCellCss(\n            //       itemId,\n            //       f.columnIndex,\n            //       \"webix_invalid_cell\"\n            //    );\n            // });\n            // highlight the row\n            $datatable.removeRowCss(itemId, \"webix_invalid\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n            // $datatable.addRowCss(itemId, \"row-pass\");\n         }\n      };\n      const $statusMessage = $$(ids.statusMessage);\n      const uiCleanUp = () => {\n         // To Do anyUI updates\n         // console.log(\"ui clean up now\");\n         $importButton.enable();\n\n         // Hide loading cursor\n         $form.hideProgress();\n         $progressBar.hideProgress();\n\n         $statusMessage.setValue(\"\");\n         $statusMessage.hide();\n\n         const selected = $datatable.find({ _included: true });\n\n         $importButton.setValue(this.labelImport(selected));\n         this.emit(\"done\");\n      };\n\n      const validRows = [];\n\n      let allValid = true;\n\n      // Pre Check Validations of whole CSV import\n      // update row to green if valid\n      // update row to red if !valid\n      (selectedRows || []).forEach((data, index) => {\n         const newRowData = this.getParentValues();\n\n         matchFields.forEach((f) => {\n            if (!f.field?.key) return;\n\n            switch (f.field.key) {\n               // case \"connectObject\":\n               //    // skip\n               //    break;\n               case \"number\":\n                  if (typeof data[f.columnIndex] !== \"number\") {\n                     newRowData[f.field.columnName] = (\n                        data[f.columnIndex] || \"\"\n                     ).replace(/[^-0-9.]/gi, \"\");\n\n                     break;\n                  }\n\n                  newRowData[f.field.columnName] = data[f.columnIndex];\n\n                  break;\n\n               default:\n                  newRowData[f.field.columnName] = data[f.columnIndex];\n\n                  break;\n            }\n         });\n\n         let isValid = false;\n         let errorMsg = \"\";\n\n         // first check legacy and server side validation\n         const validator = currentObject.isValidData(newRowData);\n\n         isValid = validator.pass();\n         errorMsg = validator.errors;\n\n         if (isValid)\n            // now check complex field validation rules\n            isValid = $datatable.validate(data.id);\n         else {\n            allValid = false;\n\n            itemInvalid(data.id, errorMsg);\n         }\n\n         if (isValid) {\n            itemValid(data.id);\n            validRows.push({ id: data.id, data: newRowData });\n         } else allValid = false;\n\n         // $datatable.unblockEvent();\n      });\n\n      if (!allValid) {\n         // To Do anyUI updates\n         // $importButton.enable();\n         //\n         // // Hide loading cursor\n         // $form.hideProgress();\n         // $progressBar.hideProgress();\n         // $statusMessage.setValue(\"\");\n         // $statusMessage.hide();\n         //\n         // // _logic.hide();\n         //\n         // if (_logic.callbacks && _logic.callbacks.onDone)\n         //    _logic.callbacks.onDone();\n         uiCleanUp();\n\n         abWebix.alert({\n            title: this.label(\"Invalid Data\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\n               \"The highlighted row has invalid data. Please edit in the window or update the CSV and try again.\"\n            ),\n         });\n\n         return;\n      }\n\n      // if pass, then continue to process each row\n      // ?? : can we process in Parallel?\n      // ?? : implement hash Lookups for connected Fields\n      const hashLookups = {};\n      // {obj}  /*  { connectField.id : { 'searchWord' : \"uuid\"}}\n      // use this hash to reduce the # of lookups needed to fill in our\n      // connected entries\n\n      const connectedFields = matchFields.filter(\n         (f) => f && f.field?.isConnection && f.searchField\n      );\n\n      const throttledSize = 10;\n      let startUpdateTime;\n      let numDone = 0;\n\n      try {\n         // forEach connectedFields in csv\n         const allLookups = [];\n\n         (connectedFields || []).forEach((f) => {\n            const connectField = f.field;\n            // const searchWord = newRowData[f.columnIndex];\n            const connectObject = connectField.datasourceLink;\n\n            if (!connectObject) return;\n\n            const connectModel = connectObject.model();\n\n            if (!connectModel) return;\n\n            const linkIdKey = connectField.indexField\n               ? connectField.indexField.columnName\n               : connectField.object.PK();\n\n            // prepare default hash entry:\n            hashLookups[connectField.id] = {};\n\n            // load all values of connectedField entries\n            const gethashLookup = async () => {\n               try {\n                  const list = await connectModel.findAll({\n                     where: {}, // !!!\n                     populate: false,\n                  });\n                  const data = list.data || list;\n\n                  (data || []).forEach((row) => {\n                     // store in hash[field.id] = { 'searchKey' : \"uuid\" }\n\n                     hashLookups[connectField.id][\n                        row[f.searchField.columnName]\n                     ] = row[linkIdKey];\n                  });\n               } catch (err) {\n                  console.error(err);\n               }\n            };\n\n            allLookups.push(gethashLookup());\n         });\n\n         await Promise.all(allLookups);\n\n         // forEach validRow\n         validRows.forEach((data) => {\n            const newRowData = data.data;\n\n            // update the datagrid row to in-progress\n            $datatable.blockEvent();\n            $datatable.updateItem(data.id, {\n               _status: \"in-progress\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n\n            // forEach ConnectedField\n            (connectedFields || []).forEach((f) => {\n               // find newRowData[field.columnName] = { field.PK : hash[field.id][searchWord] }\n               const connectField = f.field;\n               const linkIdKey = connectField.indexField\n                  ? connectField.indexField.columnName\n                  : connectField.object.PK();\n               const uuid =\n                  hashLookups[connectField.id][\n                  newRowData[connectField.columnName]\n                  ];\n\n               if (!uuid) {\n                  itemInvalid(data.id, [{ name: connectField.columnName }]);\n                  allValid = false;\n               }\n\n               newRowData[connectField.columnName] = {};\n               newRowData[connectField.columnName][linkIdKey] = uuid;\n            });\n         });\n\n         if (!allValid) {\n            abWebix.alert({\n               title: this.label(\"Invalid Data\"),\n               ok: this.label(\"Ok\"),\n               text: this.label(\n                  \"The highlighted row has invalid data. Please edit in the window or update the CSV and try again.\"\n               ),\n            });\n            uiCleanUp();\n\n            return;\n         }\n\n         // NOTE: Parallel exectuion of all these:\n         const allSaves = [];\n         const createRecord = (objModel, newRowsData, element, total) =>\n            new Promise((resolve, reject) => {\n               element.doRecordRulesPre(newRowsData);\n\n               const processResult = async () => {\n                  try {\n                     const result = await objModel.batchCreate({\n                        batch: newRowsData,\n                     });\n                     const resultErrors = result.errors;\n\n                     // Show errors of each row\n                     Object.keys(resultErrors).forEach((rowIndex) => {\n                        const error = resultErrors[rowIndex];\n\n                        if (error) {\n                           itemFailed(\n                              rowIndex,\n                              error.message || error.sqlMessage || error\n                           );\n                        }\n                     });\n\n                     const resultData = result.data;\n                     const penddingRecordRules = [];\n\n                     Object.keys(resultData).forEach((rowIndex) => {\n                        penddingRecordRules.push(\n                           new Promise((resolve, reject) => {\n                              // Process Record Rule\n                              const processRowData = async () => {\n                                 try {\n                                    await element.doRecordRules(\n                                       resultData[rowIndex]\n                                    );\n\n                                    itemPass(rowIndex);\n                                    resolve();\n                                 } catch (err) {\n                                    itemFailed(rowIndex, err);\n                                    reject(\"that didn't work\");\n                                 }\n                              };\n\n                              processRowData();\n                           })\n                        );\n                     });\n\n                     const waitPenddingRecordRules = async () => {\n                        try {\n                           await Promise.all(penddingRecordRules);\n\n                           newRowsData.forEach((row) => {\n                              // itemPass(row.id);\n                              numDone++;\n                              if (numDone % throttledSize == 0) {\n                                 this.refreshRemainingTimeText(\n                                    startUpdateTime,\n                                    validRows.length,\n                                    numDone\n                                 );\n                              }\n                           });\n\n                           if (numDone === total) {\n                              uiCleanUp();\n                              $importButton.disable();\n                           }\n\n                           resolve();\n                        } catch (err) {\n                           // newRowsData.forEach((row) => {\n                           //    itemFailed(row.id, err);\n                           // });\n                           // throw err;\n                           reject(err);\n                        }\n                     };\n\n                     await waitPenddingRecordRules();\n                  } catch (err) {\n                     console.error(err);\n                     reject(err);\n                  }\n               };\n\n               processResult();\n            });\n\n         validRows.forEach((data) => {\n            allSaves.push({ id: data.id, data: data.data });\n         });\n\n         // we are going to store these promises in an array of\n         // arrays with 50 in each sub array\n         const throttledSaves = [];\n         const total = allSaves.length;\n\n         let index = 0;\n\n         while (allSaves.length) {\n            throttledSaves[index] = allSaves.splice(0, throttledSize);\n\n            index++;\n         }\n\n         // execute the array of array of 100 promises one at at time\n         const performThrottledSaves = (\n            currentRecords,\n            remainingRecords,\n            importer,\n            total\n         ) =>\n            new Promise((resolve, reject) => {\n               // execute the next 100\n               // const requests = currentRecords.map((data) => {\n               //    return createRecord(\n               //       objModel,\n               //       data.record,\n               //       data.data,\n               //       importer\n               //    );\n               // });\n\n               const processRequest = async () => {\n                  try {\n                     await createRecord(\n                        objModel,\n                        currentRecords,\n                        importer,\n                        total\n                     );\n\n                     // when done get the next 10\n                     const nextRecords = remainingRecords.shift();\n\n                     // if there are any remaining in the group call performThrottledSaves\n                     if (nextRecords?.length) {\n                        await performThrottledSaves(\n                           nextRecords,\n                           remainingRecords,\n                           importer,\n                           total\n                        );\n                     } else {\n                        // uiCleanUp();\n                        resolve();\n                     }\n                  } catch (err) {\n                     // Handle errors here\n                     reject(err);\n                  }\n               };\n\n               processRequest();\n            });\n\n         // now we are going to processes these new containers one at a time\n         // $datatable.blockEvent();\n         // this is when the real work starts so lets begin our countdown timer now\n         startUpdateTime = new Date();\n         // get the first group of Promises out of the collection\n         const next = throttledSaves.shift();\n\n         // execute our Promise iterator\n         await performThrottledSaves(next, throttledSaves, this.view, total);\n      } catch (err) {\n         // resolve Error UI\n         abWebix.alert({\n            title: this.label(\"Error Creating Records\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\"One or more records failed upon creation.\"),\n         });\n         // $datatable.unblockEvent();\n         uiCleanUp();\n         console.error(err);\n      }\n   }\n\n   // Display linked data\n   uiLinkedData() {\n      const dcLink = this.datacollection?.datacollectionLink;\n      const linkedData = dcLink?.getCursor();\n      if (!linkedData) return;\n\n      return {\n         view: \"window\",\n         modal: true,\n         resize: false,\n         head: {\n            view: \"toolbar\",\n            cols: [\n               {},\n               {\n                  view: \"button\",\n                  width: 35,\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"nomargin fa fa-times\",\n                  click: () => {\n                     this.hideLinkedData();\n                  },\n               },\n            ],\n         },\n         body: {\n            view: \"property\",\n            id: \"sets\",\n            editable: false,\n            width: 400,\n            height: 200,\n            elements: [\n               { label: this.label(\"Linked Data\"), type: \"label\" },\n               {\n                  label: \"ID\",\n                  type: \"text\",\n                  value: linkedData.uuid ?? linkedData.id,\n               },\n               {\n                  label: \"Label\",\n                  type: \"text\",\n                  value: dcLink.datasource.displayData(linkedData),\n               },\n            ],\n         },\n      };\n   }\n\n   showLinkedData() {\n      const ui = this.uiLinkedData();\n      this._info_popup = this.AB.Webix.ui(ui);\n      this._info_popup.show($$(this.ids.linkedDataButton).$view, {\n         pos: \"top\",\n      });\n   }\n\n   hideLinkedData() {\n      this._info_popup?.hide();\n   }\n\n   getParentValues() {\n      const result = {};\n\n      // get ABDatacollection\n      const dc = this.datacollection;\n      const currentObject = this.CurrentObject;\n\n      // Set parent's data collection cursor\n      const dcLink = dc?.datacollectionLink;\n      const linkConnectFields = [];\n\n      let objectLink;\n      let linkValues;\n\n      if (dcLink?.getCursor()) {\n         objectLink = dcLink.datasource;\n\n         linkConnectFields.push(\n            ...currentObject.fields(\n               (f) => f.isConnection && f.settings.linkObject === objectLink.id\n            )\n         );\n\n         linkValues = dcLink.getCursor();\n      }\n\n      // Set parent's data collection cursor\n      if (objectLink && linkConnectFields.length && linkValues) {\n         linkConnectFields.forEach((f) => {\n            const linkColName = f.indexField\n               ? f.indexField.columnName\n               : objectLink.PK();\n\n            result[f.columnName] = result[f.columnName] ?? {};\n            result[f.columnName][linkColName] =\n               linkValues[linkColName] ?? linkValues.id;\n         });\n      }\n\n      return result;\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartAreaComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartArea_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.areaType,\n         yAxis: {\n            start: 0,\n            step: settings.stepValue, //\"#stepValue#\",\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend: settings.isLegend\n            ? {\n                 template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                 values: [], // TODO : bug in webix 5.1.7\n              }\n            : null,\n         series: [\n            {\n               alpha: 0.7,\n               value: \"#value#\",\n               color: \"#ee4339\",\n            },\n            {\n               alpha: 0.4,\n               value: \"#value2#\",\n               color: \"#a7ee70\",\n            },\n         ],\n         height: settings.chartHeight,\n         // width: settings.chartWidth,\n      });\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartBarComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartBar_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.barType,\n         preset: settings.barPreset,\n         value: \"#value#\",\n         color: \"#color#\",\n         yAxis: {\n            start: 0,\n            step: settings.stepValue, //\"#stepValue#\",\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend:\n            settings.barType === \"bar\" || !settings.barType\n               ? settings.isLegend\n                  ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n                  : \"\"\n               : settings.isLegend\n               ? {\n                    template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                    values: [], // TODO : bug in webix 5.1.7\n                 }\n               : null,\n         height: settings.height,\n         // width: settings.chartWidth,\n      });\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewChartComponent extends ABViewContainerComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChart_${baseView.id}`, ids);\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB, accessLevel);\n\n      const $component = $$(this.ids.component);\n      const abWebix = this.AB.Webix;\n\n      if ($component) abWebix.extend($component, abWebix.ProgressBar);\n\n      const baseView = this.view;\n      const dc = this.datacollection;\n\n      if (dc) {\n         const eventNames = [\n            \"changeCursor\",\n            \"create\",\n            \"update\",\n            \"delete\",\n            \"initializedData\",\n         ];\n\n         if (\n            dc.datacollectionLink &&\n            !(\"changeCursor\" in (dc.datacollectionLink._events ?? []))\n         )\n            baseView.eventAdd({\n               emitter: dc.datacollectionLink,\n               eventName: \"changeCursor\",\n               listener: () => {\n                  baseView.refreshData();\n               },\n            });\n\n         eventNames.forEach((evtName) => {\n            baseView.eventAdd({\n               emitter: dc,\n               eventName: evtName,\n               listener: () => {\n                  baseView.refreshData();\n               },\n            });\n         });\n      }\n\n      baseView.refreshData();\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewChartContainerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewChartContainer_${baseView.id}`,\n         Object.assign(\n            {\n               chartContainer: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui(uiChartComponent) {\n      const _ui = super.ui([\n         Object.assign({ id: this.ids.chartContainer }, uiChartComponent ?? {}),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n      // if (!this._isShow) {\n\n      // Mark this widget is showing\n      const baseView = this.view;\n\n      baseView._isShow = true;\n\n      this.refreshData(baseView.parent.getDCChart());\n      // }\n   }\n\n   refreshData(dcChart) {\n      const $chartContainer = $$(this.ids.chartContainer);\n      const $chartComponent = $$(this.ids.component);\n\n      if ($chartContainer?.data) $chartContainer.data.sync(dcChart);\n\n      setTimeout(() => {\n         $chartComponent?.adjust();\n         $chartContainer?.adjust();\n      }, 160);\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartLineComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartLine_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.lineType,\n         preset: settings.linePreset,\n         value: \"#value#\",\n         color: \"#color#\",\n         yAxis: {\n            start: 0,\n            step: settings.stepValue,\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend: settings.isLegend\n            ? {\n                 template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                 values: [], // TODO : bug in webix 5.1.7\n              }\n            : null,\n         height: settings.chartHeight,\n         // width: settings.chartWidth,\n      });\n   }\n\n\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartPieComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartPie_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.pieType,\n         value: \"#value#\",\n         color: \"#color#\",\n         legend: settings.isLegend\n            ? {\n                 width: this.view.parent.settings.labelWidth,\n                 template: `<div style='font-size: ${settings.labelFontSize}px;'>#label#</div>`,\n              }\n            : null,\n         pieInnerText: `<div style='font-size: ${settings.innerFontSize}px;'>#value#</div>`,\n         shadow: 1,\n         height: settings.height,\n         // width: settings.chartWidth,\n      });\n   }\n\n\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewCommentComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewComment_${baseView.id}`,\n         Object.assign(\n            {\n               comment: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const _ui = super.ui([\n         {\n            id: this.ids.comment,\n            view: \"comments\",\n            users: baseView.getUserData(),\n            currentUser: baseView.getCurrentUserId(),\n            height: this.settings.height,\n            data: this.getCommentData(),\n            on: {\n               onBeforeAdd: (id, obj, index) => {\n                  this.addComment(obj.text, new Date());\n               },\n               // NOTE: no update event of comment widget !!\n               // Updating event handles in .init function\n               // https://docs.webix.com/api__ui.comments_onbeforeeditstart_event.html#comment-4509366150\n\n               // onAfterEditStart: function (rowId) {\n               //    let item = this.getItem(rowId);\n\n               //    _logic.updateComment(rowId, item);\n               // },\n               onAfterDelete: (rowId) => {\n                  this.deleteComment(rowId);\n               },\n            },\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const baseView = this.view;\n\n      baseView.__dvEvents = baseView.__dvEvents || {};\n\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if ($comment) {\n         const $commentList = $comment.queryView({ view: \"list\" });\n\n         if ($commentList) {\n            // Updating comment event\n            if (!baseView.__dvEvents.onStoreUpdated)\n               baseView.__dvEvents.onStoreUpdated =\n                  $commentList.data.attachEvent(\n                     \"onStoreUpdated\",\n                     (rowId, data, operate) => {\n                        if (operate === \"update\") {\n                           this.updateComment(rowId, (data || {}).text);\n                        }\n                     }\n                  );\n\n            // Implement progress bar\n            webix.extend($commentList, webix.ProgressBar);\n         }\n      }\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      // bind dc to component\n      // dv.bind($$(ids.comment));\n\n      if (!baseView.__dvEvents.create)\n         baseView.__dvEvents.create = dv.on(\"create\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.update)\n         baseView.__dvEvents.update = dv.on(\"update\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.delete)\n         baseView.__dvEvents.delete = dv.on(\"delete\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.loadData)\n         baseView.__dvEvents.loadData = dv.on(\"loadData\", () =>\n            this.refreshComment()\n         );\n\n      $comment.refresh();\n   }\n\n   getCommentData() {\n      const baseView = this.view;\n      const dv = this.datacollection;\n\n      if (!dv) return null;\n\n      const userCol = baseView.getUserField();\n      const commentCol = baseView.getCommentField();\n      const dateCol = baseView.getDateField();\n\n      if (!userCol || !commentCol) return null;\n\n      const userColName = userCol.columnName;\n      const commentColName = commentCol.columnName;\n      const dateColName = dateCol ? dateCol.columnName : null;\n      const dataObject = dv.getData();\n      const dataList = [];\n\n      dataObject.forEach((item, index) => {\n         if (item[commentColName]) {\n            const user = baseView.getUserData().find((user) => {\n               return user.value === item[userColName];\n            });\n            const data = {\n               id: item.id,\n               user_id: user ? user.id : 0,\n               date: item[dateColName] ? new Date(item[dateColName]) : null,\n               default_date: new Date(item[\"created_at\"]),\n               text: item[commentColName],\n            };\n\n            dataList.push(data);\n         }\n      });\n\n      dataList.sort(function (a, b) {\n         if (dateColName)\n            return new Date(a.date).getTime() - new Date(b.date).getTime();\n         else\n            return (\n               new Date(a.default_date).getTime() -\n               new Date(b.default_date).getTime()\n            );\n      });\n\n      return dataList;\n   }\n\n   refreshComment() {\n      const baseView = this.view;\n\n      if (baseView.__refreshTimeout) clearTimeout(baseView.__refreshTimeout);\n\n      this.busy();\n\n      const ids = this.ids;\n\n      baseView.__refreshTimeout = setTimeout(() => {\n         const $comment = $$(ids.comment);\n\n         if (!$comment) return;\n\n         // clear comments\n         const $commentList = $comment.queryView({ view: \"list\" });\n\n         if ($commentList) $commentList.clearAll();\n\n         // populate comments\n         const commentData = this.getCommentData();\n\n         if (commentData) {\n            $comment.parse(commentData);\n         }\n\n         // scroll to the last item\n         if ($commentList) $commentList.scrollTo(0, Number.MAX_SAFE_INTEGER);\n\n         delete baseView.__refreshTimeout;\n\n         this.ready();\n      }, 90);\n   }\n\n   addComment(commentText, dateTime) {\n      this.saveData(commentText, dateTime);\n   }\n\n   async updateComment(rowId, commentText) {\n      const baseView = this.view;\n      const model = baseView.model();\n\n      if (!model) return; // already notified\n\n      const commentField = baseView.getCommentField();\n\n      if (!commentField) return; // already notified\n\n      const values = {};\n\n      values[commentField.columnName] = commentText ?? \"\";\n\n      return await model.update(rowId, values);\n   }\n\n   async deleteComment(rowId) {\n      const baseView = this.view;\n      const model = baseView.model();\n\n      if (!model) return;\n\n      return await model.delete(rowId);\n   }\n\n   busy() {\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if (!$comment) return;\n\n      const $commentList = $comment.queryView({ view: \"list\" });\n\n      if (!$commentList) return;\n\n      $commentList.disable();\n\n      if ($commentList.showProgress)\n         $commentList.showProgress({ type: \"icon\" });\n   }\n\n   ready() {\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if (!$comment) return;\n\n      const $commentList = $comment.queryView({ view: \"list\" });\n\n      if (!$commentList) return;\n\n      $commentList.enable();\n\n      if ($commentList.hideProgress) $commentList.hideProgress();\n   }\n\n   async saveData(commentText, dateTime) {\n      if (!commentText) return;\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const baseView = this.view;\n      const model = baseView.model();\n      const ab = this.AB;\n\n      if (!model) {\n         ab.notify.builder(\n            {},\n            {\n               message:\n                  \"ABViewComment.saveData(): could not pull a model to work with.\",\n               viewName: baseView.label,\n            }\n         );\n\n         return;\n      }\n\n      const comment = {};\n      const userField = baseView.getUserField();\n\n      if (userField) comment[userField.columnName] = ab.Account.username();\n\n      const commentField = baseView.getCommentField();\n\n      if (commentField) comment[commentField.columnName] = commentText;\n\n      const dateField = baseView.getDateField();\n\n      if (dateField) comment[dateField.columnName] = dateTime;\n\n      // add parent cursor to default\n      const dvLink = dv.datacollectionLink;\n\n      if (dvLink?.getCursor()) {\n         const objectLink = dvLink.datasource;\n         const fieldLink = dv.fieldLink;\n\n         if (objectLink && fieldLink) {\n            comment[fieldLink.columnName] = {};\n            comment[fieldLink.columnName][objectLink.PK()] =\n               dvLink.getCursor().id;\n         }\n      }\n\n      return await model.create(comment);\n   }\n};\n","/**\n * ABViewComponent\n * A common UI component class for our UI widgets.\n */\nimport ClassUI from \"../../../../ui/ClassUI\";\n\nexport default class ABViewComponent extends ClassUI {\n   constructor(baseView, idBase, ids) {\n      super(idBase || `ABView_${baseView.id}`, ids);\n\n      this.view = baseView;\n      this.settings = baseView.settings;\n      this.AB = baseView.AB;\n      this.datacollection = baseView.datacollections || baseView.datacollection;\n\n      this.__events = [];\n      // {array}\n      // A collection of any listeners we are managing.\n      // {\n      //   emitter:   {EventEmitter} the object we are listening on\n      //   eventName: {string} the event key we are listening for\n      //   listener:  {fn} the function to call on\n      // }\n\n      this.CurrentObjectID = null;\n      // {string}\n      // the ABObject.id of the object we are working with.\n\n      this.CurrentDatacollectionID = null;\n      // {string}\n      // the ABDataCollection.id of the DC we are working with\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n   /**\n    * @method CurrentDatacollection()\n    * A helper to return the current ABDataCollection we are working with.\n    * @return {ABDataCollection}\n    */\n   get CurrentDatacollection() {\n      return this.AB.datacollectionByID(this.CurrentDatacollectionID);\n   }\n\n   ui(uiComponents = []) {\n      // an ABView is a collection of rows:\n      const _ui = {\n         id: this.ids.component,\n         view: \"layout\",\n         type: \"space\",\n         rows: uiComponents,\n      };\n\n      // if this form is empty, then force a minimal row height\n      // so the component isn't completely hidden on the screen.\n      // (important in the editor so we don't loose the ability to edit the\n      // component)\n      if (!_ui.rows.length) _ui.height = 30;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      this.AB = AB;\n   }\n\n   /**\n    * @method datacollectionLoad\n    *\n    * @param datacollection {ABDatacollection}\n    */\n   datacollectionLoad(datacollection) {\n      this.CurrentDatacollectionID = datacollection?.id;\n   }\n\n   objectLoad(object) {\n      this.CurrentObjectID = object?.id;\n   }\n\n   /**\n    * @method eventAdd()\n    * Create a new listener on an object. Note, this will prevent multiple\n    * listeners being applied to the same Object.\n    * @param {object} evt\n    *        The definition of the event we are adding:\n    *        {\n    *           emitter:   {EventEmitter} the object we are listening on\n    *           eventName: {string} the event key we are listening for\n    *           listener:   {fn} the function to call on\n    *        }\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      // make sure we haven't done this before:\n      const __events = this.__events;\n      const exists = __events.filter(\n         (e) => e.emitter === evt.emitter && e.eventName === evt.eventName\n         // && e.listener === evt.listener\n      );\n\n      if (!exists.length) {\n         // add to array\n         __events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventsClear()\n    * Remove all the attached event listeners and reset our tracking.\n    */\n   eventsClear() {\n      this.__events.forEach((evt) => {\n         evt.emitter.removeListener(evt.eventName, evt.listener);\n      });\n\n      this.__events = [];\n   }\n\n   /**\n    * @method waitInitializingDCEvery()\n    * Wait until the DC is initialized, checking every millisecond as specified by the parameter\n    * @param {number} milliSeconds\n    * The amount of milliseconds to recheck DC status.\n    * @param {object} dc\n    * the AB DC instance.\n    */\n\n   async waitInitializingDCEvery(milliSeconds, dc) {\n      if (!this.__isShowing || dc == null) return;\n      // if we manage a datacollection, then make sure it has started\n      // loading it's data when we are showing our component.\n      // load data when a widget is showing\n      if (dc.dataStatus === dc.dataStatusFlag.notInitial) await dc.loadData();\n\n      return await new Promise((resolve) => {\n         if (dc.dataStatus === dc.dataStatusFlag.initialized) {\n            resolve();\n\n            return;\n         }\n\n         const interval = setInterval(() => {\n            if (dc.dataStatus === dc.dataStatusFlag.initialized) {\n               clearInterval(interval);\n\n               resolve();\n            }\n         }, milliSeconds);\n      });\n   }\n\n   /**\n    * @method onShow()\n    * perform any preparations necessary when showing this component.\n    */\n   onShow() {\n      // check if tab has a hint\n      if (this?.view?.settings?.hintID) {\n         // fetch the steps for the hint\n         let hint = this.AB.hintID(this.view.settings.hintID);\n         if (hint.settings.active) {\n            hint.createHintUI();\n         }\n      }\n      // if we manage a datacollection, then make sure it has started\n      // loading it's data when we are showing our component.\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      if (dc.dataStatus === dc.dataStatusFlag.notInitial)\n         // load data when a widget is showing\n         dc.loadData();\n   }\n}\n","const ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewConditionalContainerComponent extends (\n   ABViewContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewConditionalContainer_${baseView.id}`,\n         Object.assign(\n            {\n               batch: \"\",\n            },\n            ids\n         )\n      );\n\n      this._ifComponent = null;\n      this._elseComponent = null;\n\n      // Set filter value\n      this.__filterComponent = baseView.AB.filterComplexNew(\n         `${baseView.id}_filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.populateFilterComponent();\n   }\n\n   ui() {\n      const _uiConditionalContainer = {\n         id: this.ids.batch,\n         view: \"multiview\",\n         cells: [\n            {\n               batch: \"wait\",\n               view: \"layout\",\n               rows: [\n                  {\n                     view: \"label\",\n                     label: this.label(\"Please wait...\"),\n                  },\n               ],\n            },\n         ],\n      };\n      const _ui = super.ui([_uiConditionalContainer]);\n\n      _uiConditionalContainer.cells.push(\n         Object.assign({ batch: \"if\" }, this.ifComponent.ui()),\n         Object.assign({ batch: \"else\" }, this.elseComponent.ui())\n      );\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB, accessLevel);\n\n      await Promise.all([\n         this.ifComponent.init(AB, accessLevel),\n         this.elseComponent.init(AB, accessLevel),\n      ]);\n\n      this.populateFilterComponent();\n\n      const dc = this.datacollection;\n\n      if (dc) {\n         const baseView = this.view;\n\n         // listen DC events\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"loadData\",\n            listener: () => this.displayView(), // Q? does this need to remain empty param?\n         });\n\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"initializedData\",\n            listener: () => this.displayView(), // Q? does this need to remain empty param?\n         });\n\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"changeCursor\",\n            listener: (...p) => this.displayView(...p),\n         });\n      }\n\n      this.displayView();\n   }\n\n   onShow() {\n      super.onShow();\n\n      this.populateFilterComponent();\n      this.displayView();\n   }\n\n   get ifComponent() {\n      return (this._ifComponent =\n         this._ifComponent ||\n         this.view\n            .views()\n            .find((v) => v?.name === \"If\")\n            .component());\n   }\n\n   get elseComponent() {\n      return (this._elseComponent =\n         this._elseComponent ||\n         this.view\n            .views()\n            .find((v) => v?.name === \"Else\")\n            .component());\n   }\n\n   displayView(currData) {\n      const dc = this.datacollection;\n      const ids = this.ids;\n      const $batch = $$(ids.batch);\n\n      if (dc) {\n         if (!currData) currData = dc.getCursor();\n\n         // show 'waiting' panel\n         if (\n            !currData &&\n            (dc.dataStatus === dc.dataStatusFlag.notInitial ||\n               dc.dataStatus === dc.dataStatusFlag.initializing)\n         ) {\n            $batch?.showBatch(\"wait\");\n\n            return;\n         }\n      }\n\n      const isValid = this.__filterComponent.isValid(currData);\n\n      if (isValid) {\n         // if (isValid && currData) {\n         $batch?.showBatch(\"if\");\n         this.ifComponent?.onShow?.();\n      } else {\n         $batch?.showBatch(\"else\");\n         this.elseComponent?.onShow?.();\n      }\n   }\n\n   populateFilterComponent() {\n      const dc = this.datacollection;\n      const __filterComponent = this.__filterComponent;\n\n      if (dc?.datasource) __filterComponent.fieldsLoad(dc.datasource.fields());\n      else __filterComponent.fieldsLoad([]);\n\n      __filterComponent.setValue(\n         this.settings.filterConditions ??\n            this.view.constructor.defaultValues().filterConditions\n      );\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewContainerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewContainer_${baseView.id}`, ids);\n\n      this.idBase = idBase;\n      this.options = null;\n\n      this.viewComponents = {\n         /* view.id : {viewComponent} */\n      };\n      // {hash}\n      // a reference of all our child views that we manage\n\n      this.viewComponentIDs = {\n         /* view.id : {viewComponent} */\n      };\n      // {hash}\n      // a reference of all our child.ui().ids of the views we manage\n\n      this._handlerChangePage = (pageId) => {\n         baseView.changePage(pageId);\n      };\n   }\n\n   ui(uiComponents) {\n      // Generate rows & cols of views to .layout\n      const views = this.view.viewsSortByPosition();\n      const rowViews = this.getElements(views);\n      const _ui = super.ui(uiComponents || rowViews);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // make sure each of our child views get .init() called\n   async init(AB, accessLevel = 0, options = {}) {\n      await super.init(AB);\n\n      this.options = options;\n\n      const allInits = [];\n\n      // // register our callbacks:\n      // if (options) {\n      //    for (var c in _logic.callbacks) {\n      //       _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n      //    }\n      // }\n\n      // see access by CSS class\n      $$(this.ids.component)?.define(\"css\", `accessLevel-${accessLevel}`);\n\n      const viewComponents = this.viewComponents;\n\n      // attach all the .UI views:\n      for (const key in viewComponents) {\n         // skip when the view is removed.\n         if (\n            !viewComponents[key] ??\n            !this.view.views((v) => v.id === key).length\n         )\n            continue;\n\n         // Initial component along with options in case there are callbacks we need to listen for\n         if (accessLevel) {\n            allInits.push(viewComponents[key].init(AB, accessLevel, options));\n\n            continue;\n         }\n\n         $$(this.viewComponentIDs[key])?.hide();\n      }\n\n      await Promise.all(allInits);\n   }\n\n   getElements(views) {\n      const rows = [];\n      const componentMap = {};\n\n      let curRowIndex;\n      let curColIndex;\n\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n\n      views.forEach((v) => {\n         // let component = v.component(/* App, idPrefix */);\n         // NOTE: PONG - Just temporary to be compatible old & new versions\n         let component;\n\n         try {\n            component = v.component(this.idBase);\n            // make sure any existing handlers for changePage are removed.\n            v.removeAllListeners(\"changePage\");\n         } catch (err) {\n            component = v.component(this.idBase);\n\n            const ui = component.ui;\n\n            component.ui = (() => ui).bind(component);\n         }\n\n         this.viewComponents[v.id] = component;\n\n         ////\n         //// TODO: figure out the embedded Callbacks => emit()\n         ////\n         // if key == \"form\" or \"button\" register the callbacks to the parent\n         // NOTE this will only work on the last form of a page!\n         // if (v.key == \"form\" && v._logic.callbacks) {\n         //    _logic.callbacks = v._logic.callbacks;\n         // }\n\n         // Create a new row\n         if (v.position.y == null || v.position.y !== curRowIndex) {\n            curRowIndex = v.position.y || rows.length;\n            curColIndex = 0;\n\n            const rowNew = {\n               cols: [],\n            };\n\n            // Create columns following setting value\n            const colNumber = settings.columns || defaultSettings.columns;\n\n            for (let i = 0; i < colNumber; i++)\n               rowNew.cols.push({\n                  gravity: settings.gravity?.[i]\n                     ? parseInt(settings.gravity[i])\n                     : defaultSettings.gravity,\n               });\n\n            rows.push(rowNew);\n         }\n\n         // Get the last row\n         const rowIndx = rows.length - 1;\n         const curRow = rows[rowIndx];\n         const newPos = v.position.x ?? 0;\n         const mapKey = `${rowIndx}-${newPos}`;\n\n         let getGrav = 1;\n\n         if (componentMap[mapKey])\n            console.error(\n               `Component[${component?.ids?.component}] is overwriting component[${componentMap[mapKey].ids?.component}]. <-- Reorder them to fix.`\n            );\n\n         componentMap[mapKey] = component;\n\n         if (curRow.cols[newPos]?.gravity)\n            getGrav = curRow.cols[newPos].gravity;\n\n         const _ui = component.ui();\n\n         this.viewComponentIDs[v.id] = _ui.id;\n         _ui.gravity = getGrav;\n\n         // Add ui of sub-view to column\n         curRow.cols[newPos] = _ui;\n\n         // Trigger 'changePage' event to parent\n         this.eventAdd({\n            emitter: v,\n            eventName: \"changePage\",\n            listener: this._handlerChangePage,\n         });\n\n         curColIndex++;\n      });\n\n      return rows;\n   }\n\n   onShow() {\n      super.onShow();\n\n      // calll .onShow in child components\n      Object.values(this.viewComponents).forEach((val) => {\n         val.onShow?.();\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABViewDetailComponent = require(\"./ABViewDetailComponent\");\nconst ABViewPropertyLinkPage =\n   require(\"../viewProperties/ABViewPropertyLinkPage\").default;\n\nmodule.exports = class ABViewDataviewComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDataview_${baseView.id}`,\n         Object.assign(\n            {\n               dataview: \"\",\n            },\n            ids\n         )\n      );\n\n      this.linkPage = null;\n   }\n\n   ui() {\n      // NOTE: need to initial the detail component here\n      // because its dom width & height values are used .template function\n      this.initDetailComponent();\n\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            id: ids.dataview,\n            view: \"dataview\",\n            scroll: \"y\",\n            sizeToContent: true,\n            css: \"borderless transparent\",\n            xCount: this.settings.xCount,\n            template: (item) => this.itemTemplate(item),\n            on: {\n               onAfterRender: () => {\n                  this.applyClickEvent();\n                  this.addCyAttribute();\n               },\n            },\n         },\n      ]);\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dc = this.datacollection;\n      if (!dc) return;\n\n      // Initial the link page helper\n      this.linkPage = this.linkPageHelper.component();\n      this.linkPage.init({\n         view: this.view,\n         datacollection: dc,\n      });\n\n      const ids = this.ids;\n      const $dataView = $$(ids.dataview);\n      AB.Webix.extend($dataView, AB.Webix.ProgressBar);\n      dc.bind($dataView);\n   }\n\n   onShow() {\n      super.onShow();\n\n      const $dataview = $$(this.ids.dataview);\n      $dataview.resize();\n\n      const item_width = this.getItemWidth();\n      $dataview.customize({ width: item_width });\n      $dataview.getTopParentView?.().resize?.();\n   }\n\n   initDetailComponent() {\n      const detailUI = this.getDetailUI();\n      this._detail_ui = this.AB.Webix.ui(detailUI);\n\n      // 2 - Always allow access to components inside data view\n      this.detailComponent.init(null, 2);\n   }\n\n   getDetailUI() {\n      const detailCom = this.detailComponent;\n      const editPage = this.settings.editPage;\n      const detailsPage = this.settings.detailsPage;\n\n      const _ui = detailCom.ui();\n      // adjust the UI to make sure it will look like a \"card\"\n      _ui.type = \"clean\";\n      _ui.css = \"ab-detail-view\";\n\n      if (detailsPage || editPage) {\n         _ui.css += ` ab-detail-hover ab-record-#itemId#`;\n\n         if (detailsPage) _ui.css += \" ab-detail-page\";\n         if (editPage) _ui.css += \" ab-edit-page\";\n      }\n\n      return _ui;\n   }\n\n   itemTemplate(item) {\n      const detailCom = this.detailComponent;\n      const $dataview = $$(this.ids.dataview);\n      const $detail_item = this._detail_ui;\n\n      // Mock up data to initialize height of item\n      if (!item || !Object.keys(item).length) {\n         item = item ?? {};\n         this.datacollection?.datasource?.fields().forEach((f) => {\n            switch (f.key) {\n               case \"string\":\n               case \"LongText\":\n                  item[f.columnName] = \"Lorem Ipsum\";\n                  break;\n               case \"date\":\n               case \"datetime\":\n                  item[f.columnName] = new Date();\n                  break;\n               case \"number\":\n                  item[f.columnName] = 7;\n                  break;\n            }\n         });\n      }\n      detailCom.displayData(item);\n\n      const itemWidth =\n         $dataview.data.count() > 0\n            ? $dataview.type.width\n            : ($detail_item.$width - 20) / this.settings.xCount;\n\n      const itemHeight =\n         $dataview.data.count() > 0\n            ? $dataview.type.height\n            : $detail_item.getChildViews()?.[0]?.$height;\n\n      const tmp_dom = document.createElement(\"div\");\n      tmp_dom.appendChild($detail_item.$view);\n\n      $detail_item.define(\"width\", itemWidth - 24);\n      $detail_item.define(\"height\", itemHeight + 15);\n      $detail_item.adjust();\n\n      // Add cy attributes\n      this.addCyItemAttributes(tmp_dom, item);\n\n      return tmp_dom.innerHTML.replace(/#itemId#/g, item.id);\n   }\n\n   getItemWidth() {\n      const $dataview = $$(this.ids.dataview);\n\n      let currElem = $dataview;\n      let parentWidth = currElem?.$width;\n      while (currElem) {\n         if (\n            currElem.config.view == \"scrollview\" ||\n            currElem.config.view == \"layout\"\n         )\n            parentWidth =\n               currElem?.$width < parentWidth ? currElem?.$width : parentWidth;\n\n         currElem = currElem?.getParentView?.();\n      }\n\n      if (!parentWidth)\n         parentWidth = $dataview?.getParentView?.().$width || window.innerWidth;\n\n      // check if the browser window minus webix default padding is the same as the parent window\n      // if so we need to check to see if there is a sidebar and reduce the usable space by the\n      // width of the sidebar\n      if (window.innerWidth - 18 <= parentWidth) {\n         const $sidebar = this.getTabSidebar();\n         if ($sidebar) {\n            parentWidth -= $sidebar.$width;\n         }\n      }\n\n      const recordWidth = Math.floor(parentWidth / this.settings.xCount);\n\n      return recordWidth;\n   }\n\n   getTabSidebar() {\n      const $dataview = $$(this.ids.dataview);\n      let $sidebar;\n      let currElem = $dataview;\n      while (currElem && !$sidebar) {\n         $sidebar = (currElem.getChildViews?.() ?? []).filter(\n            (item) => item?.config?.view == \"sidebar\"\n         )[0];\n\n         currElem = currElem?.getParentView?.();\n      }\n\n      return $sidebar;\n   }\n\n   applyClickEvent() {\n      const editPage = this.settings.editPage;\n      const detailsPage = this.settings.detailsPage;\n      if (!detailsPage && !editPage) return;\n\n      const $dataview = $$(this.ids.dataview);\n      if (!$dataview) return;\n\n      $dataview.$view.onclick = (e) => {\n         let clicked = false;\n         let divs = e.path ?? [];\n\n         // NOTE: Some web browser clients do not support .path\n         if (!divs.length) {\n            divs.push(e.target);\n            divs.push(e.target.parentNode);\n         }\n\n         if (editPage) {\n            for (let p of divs) {\n               if (\n                  p.className &&\n                  p.className.indexOf(\"webix_accordionitem_header\") > -1\n               ) {\n                  clicked = true;\n                  p.parentNode.parentNode.classList.forEach((c) => {\n                     if (c.indexOf(\"ab-record-\") > -1) {\n                        // var record = parseInt(c.replace(\"ab-record-\", \"\"));\n                        const record = c.replace(\"ab-record-\", \"\");\n                        this.linkPage.changePage(editPage, record);\n                        // com.logic.toggleTab(detailsTab, ids.component);\n                     }\n                  });\n                  break;\n               }\n            }\n         }\n\n         if (detailsPage && !clicked) {\n            for (let p of divs) {\n               if (\n                  p.className &&\n                  p.className.indexOf(\"webix_accordionitem\") > -1\n               ) {\n                  p.parentNode.parentNode.classList.forEach((c) => {\n                     if (c.indexOf(\"ab-record-\") > -1) {\n                        // var record = parseInt(c.replace(\"ab-record-\", \"\"));\n                        const record = c.replace(\"ab-record-\", \"\");\n                        this.linkPage.changePage(detailsPage, record);\n                        // com.logic.toggleTab(detailsTab, ids.component);\n                     }\n                  });\n\n                  break;\n               }\n            }\n         }\n      };\n   }\n\n   addCyAttribute() {\n      const baseView = this.view;\n      const $dataview = $$(this.ids.dataview);\n      const name = (baseView.name ?? \"\").replace(\".dataview\", \"\");\n\n      $dataview.$view.setAttribute(\n         \"data-cy\",\n         `dataview container ${name} ${baseView.id}`\n      );\n   }\n\n   addCyItemAttributes(dom, item) {\n      const baseView = this.view;\n      const uuid = item.uuid;\n      const name = (baseView.name ?? \"\").replace(\".dataview\", \"\");\n      dom.querySelector(\".webix_accordionitem_body\")?.setAttribute(\n         \"data-cy\",\n         `dataview item ${name} ${uuid} ${baseView.id}`\n      );\n      dom.querySelector(\".webix_accordionitem_button\")?.setAttribute(\n         \"data-cy\",\n         `dataview item button ${name} ${uuid} ${baseView.id}`\n      );\n   }\n\n   get detailComponent() {\n      return (this._detailComponent =\n         this._detailComponent ??\n         new ABViewDetailComponent(\n            this.view,\n            `${this.ids.component}_detail_view`\n         ));\n   }\n\n   get linkPageHelper() {\n      return (this.__linkPageHelper =\n         this.__linkPageHelper || new ABViewPropertyLinkPage());\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailCheckboxComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailCheckbox_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      return super.ui({\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail checkbox ${field?.columnName} ${\n                  field?.id\n               } ${baseView.parentDetailComponent()?.id ?? baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   setValue(val) {\n      let checkbox = \"\";\n\n      // Check\n      if (val && JSON.parse(val))\n         checkbox =\n            '<span class=\"check webix_icon fa fa-check-square-o\"></span>';\n      // Uncheck\n      else checkbox = '<span class=\"check webix_icon fa fa-square-o\"></span>';\n\n      super.setValue(checkbox);\n   }\n};\n","const ABObjectQuery = require(\"../../ABObjectQuery\");\nconst ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewDetailComponent extends ABViewContainerComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetail_${baseView.id}`, ids);\n      this.idBase = idBase;\n   }\n\n   ui() {\n      let _ui = super.ui();\n\n      // this wrapper allows the detail view to have a\n      // card appearance as well as enables the edit and\n      // details functions to work when clicked\n      return {\n         type: \"form\",\n         borderless: true,\n         rows: [\n            {\n               body: _ui,\n            },\n         ],\n      };\n   }\n\n   onShow() {\n      const baseView = this.view;\n\n      try {\n         const dataCy = `Detail ${baseView.name?.split(\".\")[0]} ${baseView.id}`;\n\n         $$(this.ids.component).$view.setAttribute(\"data-cy\", dataCy);\n      } catch (e) {\n         console.warn(\"Problem setting data-cy\", e);\n      }\n\n      // listen DC events\n      const dv = this.datacollection;\n\n      if (dv) {\n         const currData = dv.getCursor();\n\n         if (currData) this.displayData(currData);\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"changeCursor\",\n            listener: (...p) => this.displayData(...p),\n         });\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"create\",\n            listener: (createdRow) => {\n               const currCursor = dv.getCursor();\n\n               if (currCursor?.id === createdRow.id)\n                  this.displayData(createdRow);\n            },\n         });\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"update\",\n            listener: (updatedRow) => {\n               const currCursor = dv.getCursor();\n\n               if (currCursor?.id === updatedRow.id)\n                  this.displayData(updatedRow);\n            },\n         });\n      }\n\n      super.onShow();\n   }\n\n   displayData(rowData = {}) {\n      const views = (this.view.views() || []).sort((a, b) => {\n         if (!a?.field?.() || !b?.field?.()) return 0;\n\n         // NOTE: sort order of calculated fields.\n         // FORMULA field type should be calculated before CALCULATE field type\n         if (a.field().key === \"formula\" && b.field().key === \"calculate\")\n            return -1;\n         else if (a.field().key === \"calculate\" && b.field().key === \"formula\")\n            return 1;\n\n         return 0;\n      });\n\n      views.forEach((f) => {\n         let val;\n\n         if (f.field) {\n            const field = f.field();\n\n            if (!field) return;\n\n            // get value of relation when field is a connect field\n            switch (field.key) {\n               case \"connectObject\":\n                  val = field.pullRelationValues(rowData);\n\n                  break;\n\n               case \"list\":\n                  val = rowData?.[field.columnName];\n\n                  if (!val) {\n                     val = \"\";\n\n                     break;\n                  }\n\n                  if (field.settings.isMultiple === 0) {\n                     let myVal = \"\";\n\n                     field.settings.options.forEach((options) => {\n                        if (options.id === val) myVal = options.text;\n                     });\n\n                     if (field.settings.hasColors) {\n                        let myHex = \"#66666\";\n                        let hasCustomColor = \"\";\n\n                        field.settings.options.forEach((h) => {\n                           if (h.text === myVal) {\n                              myHex = h.hex;\n                              hasCustomColor = \"hascustomcolor\";\n                           }\n                        });\n\n                        myVal = `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"background-color: ${myHex} !important;\"><span>${myVal}</span></span>`;\n                     }\n\n                     val = myVal;\n                  } else {\n                     const items = [];\n\n                     let myVal = \"\";\n\n                     val.forEach((value) => {\n                        let hasCustomColor = \"\";\n                        let optionHex = \"\";\n\n                        if (field.settings.hasColors && value.hex) {\n                           hasCustomColor = \"hascustomcolor\";\n                           optionHex = `background: ${value.hex};`;\n                        }\n\n                        field.settings.options.forEach((options) => {\n                           if (options.id === value.id) myVal = options.text;\n                        });\n                        items.push(\n                           `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${value.id}\"><span>${myVal}</span></span>`\n                        );\n                     });\n\n                     val = items.join(\"\");\n                  }\n\n                  break;\n\n               case \"user\":\n                  val = field.pullRelationValues(rowData);\n\n                  break;\n\n               case \"file\":\n                  val = rowData?.[field.columnName];\n\n                  if (!val) {\n                     val = \"\";\n\n                     break;\n                  }\n\n                  break;\n\n               case \"formula\":\n                  if (rowData) {\n                     // const dv = this.datacollection;\n                     // const ds = dv ? dv.datasource : null;\n                     // const needRecalculate =\n                     //    !ds || ds instanceof ABObjectQuery ? false : true;\n\n                     // NOTE: Could not to re-calculate because `__relation` data is extracted from full data at the moment\n                     // rowData.__relation format\n                     // {\n                     //    id: \"string\"\n                     //    text: \"string\"\n                     //    translations: []\n                     //    uuid:  \"0cb52669-d626-4c9d-85ea-2d931751d0ce\"\n                     //    value: \"LABEL\"\n                     // }\n                     const needRecalculate = false;\n\n                     val = field.format(rowData, needRecalculate);\n                  }\n\n                  break;\n\n               default:\n                  val = field.format(rowData);\n               // break;\n            }\n         }\n\n         // set value to each components\n         const vComponent = f.component(this.idBase);\n\n         // vComponent?.onShow();\n\n         vComponent?.setValue?.(val);\n         vComponent?.displayText?.(rowData);\n      });\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailConnectComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailConnect_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const settings = this.settings;\n\n      return super.ui({\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const columnName =\n                  baseView.field((fld) => fld.id === settings.fieldId)\n                     ?.columnName ?? \"\";\n               const dataCy = `detail connected ${columnName} ${\n                  settings.fieldId\n               } ${baseView.parentDetailComponent()?.id || baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   setValue(val) {\n      const vals = [];\n\n      if (Array.isArray(val))\n         val.forEach((record) => {\n            vals.push(\n               `<span class=\"webix_multicombo_value\">${record.text}</span>`\n            );\n         });\n      else vals.push(`<span class=\"webix_multicombo_value\">${val.text}</span>`);\n\n      super.setValue(vals.join(\"\"));\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailCustomComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailCustom_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const detailView = baseView.detailComponent();\n\n      let template = field ? field.columnHeader().template({}) : \"\";\n\n      return super.ui({\n         minHeight: 45,\n         height: 60,\n         template,\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail custom ${field?.columnName} ${\n                  field?.id\n               } ${baseView.parentDetailComponent()?.id || baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   onShow() {\n      super.onShow;\n\n      const baseView = this.view;\n      const field = baseView.field();\n\n      if (!field) return;\n\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const detailCom = baseView.detailComponent(),\n         rowData = detailCom.datacollection.getCursor() || {},\n         node = $detailItem.$view;\n\n      field.customDisplay(rowData, null, node, {\n         editable: false,\n      });\n      // Hack: remove the extra webix_template class here, which adds padding so\n      // the item is not alligned with the others\n      node.getElementsByClassName(\"webix_template\")[1].removeAttribute(\"class\");\n   }\n\n   setValue(val) {\n      const field = this.view.field();\n\n      if (!field) return;\n\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const rowData = {};\n\n      rowData[field.columnName] = val;\n\n      field.setValue($detailItem, rowData);\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailImageComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailImage_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const _ui = {\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail image ${field?.columnName} ${field?.id} ${\n                  baseView.parentDetailComponent()?.id || baseView.parent.id\n               }`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      };\n      const settings = this.settings;\n\n      if (settings.height) _ui.height = settings.height;\n\n      return super.ui(_ui);\n   }\n\n   setValue(val) {\n      const field = this.view.field();\n\n      if (!field) {\n         super.setValue(\"\");\n\n         return;\n      }\n\n      const parsedImageUrl = val || field.settings.defaultImageUrl;\n\n      if (!parsedImageUrl) {\n         super.setValue(\"\");\n\n         return;\n      }\n\n      const imageUrl = field.urlImage(parsedImageUrl);\n      const settings = this.settings;\n      const width = settings.width || field.settings.imageWidth || 200;\n      const height = settings.height\n         ? `${settings.height}px`\n         : field.settings.imageHeight\n         ? `${field.settings.imageHeight}px`\n         : \"100%\";\n      const imageTemplate = [\n         `<div class=\"ab-image-data-field\">`,\n         `<div style=\"float: left; background-size: cover; background-position: center center; background-image:url('${imageUrl}');  width: ${width}px; height: ${height}; position:relative;\">`,\n         `<a href=\"${imageUrl}\" target=\"_blank\" title=\"\" class=\"fa fa-download ab-image-data-field-download\"></a>`,\n         `</div></div>`,\n      ].join(\"\");\n\n      super.setValue(imageTemplate);\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewDetailItemComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDetailItem_${baseView.id}`,\n         Object.assign(\n            {\n               detailItem: \"\",\n               detailItemLabel: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui(uiDetailItemComponent = {}) {\n      const baseView = this.view;\n\n      // setup 'label' of the element\n      const settings = baseView.detailComponent()?.settings ?? {};\n      const field = baseView.field();\n\n      const isLabelTop = settings.labelPosition == \"top\";\n\n      const group = [];\n      /** @const group will be used later as rows or cols depending on label position */\n      if (settings.showLabel) {\n         const templateLabel = isLabelTop\n            ? \"<label style='display:block; text-align: left; line-height: 32px;' class='webix_inp_top_label'>#label#</label>\"\n            : \"<label style='display: inline-block; float: left; line-height: 32px; width:#width#px;'>#label#</label>\";\n\n         const labelUi = {\n            id: this.ids.detailItemLabel,\n            view: \"template\",\n            borderless: true,\n            height: 38,\n            template: templateLabel,\n            data: { label: field?.label ?? \"\" },\n         };\n         if (!isLabelTop) labelUi.width = settings.labelWidth + 24; // Add 24px to compensate for webix padding\n         group.push(labelUi);\n      }\n\n      let height;\n      if (field?.settings?.useHeight === 1)\n         height = parseInt(field.settings.imageHeight) || height;\n\n      const valueUi = Object.assign(\n         {\n            id: this.ids.detailItem,\n            view: \"template\",\n            borderless: true,\n            autowidth: true,\n            height,\n            isUsers: field?.key === \"user\",\n            template: isLabelTop\n               ? \"<div style='min-height: 38px'>#display#</div>\"\n               : \"<div class='ab-detail-component-holder'>#display#</div>\",\n            data: { display: \"\" }, // show empty data in template\n         },\n         uiDetailItemComponent\n      );\n      // height = 0 behaves a bit differently then autoheight here.\n      if (!valueUi.height || valueUi.height == 0) {\n         delete valueUi.height;\n         valueUi.autoheight = true;\n      }\n      group.push(valueUi);\n      const itemUi = {};\n      settings.labelPosition == \"top\"\n         ? (itemUi.rows = group)\n         : (itemUi.cols = group);\n      const _ui = super.ui([itemUi]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // async init(AB) {\n   //    await super.init(AB);\n   // }\n\n   setValue(val, detailId) {\n      const $detailItem = $$(detailId ?? this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const field = this.view.field();\n\n      if (field?.key === \"string\" || field?.key === \"LongText\") {\n         $detailItem.setValues({ display: val.replace(/[<]/g, \"&lt;\") });\n\n         return;\n      }\n\n      $detailItem.setValues({ display: val });\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailTextComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailText_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const field = this.view.field();\n      const _ui = {\n         css: \"ab-text\",\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail text ${field?.columnName} ${field?.id} ${\n                  this.view.parentDetailComponent()?.id || this.view.parent.id\n               }`;\n\n               $$(this.ids.component)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      };\n      const settings = this.settings;\n\n      if (settings.height) _ui.height = settings.height;\n\n      return super.ui(_ui);\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailTreeComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailTree_${baseView.id}`, ids);\n   }\n\n   get className() {\n      return \"ab-detail-tree\";\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      // add div of tree to detail\n      this.setValue(`<div class=\"${this.className}\"></div>`);\n   }\n\n   getDomTree() {\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      return $detailItem.$view.getElementsByClassName(this.className)[0];\n   }\n\n   setValue(val) {\n      // convert value to array\n      const vals = [];\n\n      if (val && !Array.isArray(val)) vals.push(val);\n\n      setTimeout(() => {\n         // get tree dom\n         const domTree = this.getDomTree();\n\n         if (!domTree) return false;\n\n         const field = this.view.field();\n         const branches = [];\n\n         if (typeof field.settings.options.data === \"undefined\")\n            field.settings.options = new this.AB.Webix.TreeCollection({\n               data: field.settings.options,\n            });\n\n         field.settings.options.data.each(function (obj) {\n            if (vals.indexOf(obj.id) !== -1) {\n               let html = \"\";\n               let rootid = obj.id;\n\n               while (this.getParentId(rootid)) {\n                  field.settings.options.data.each(function (par) {\n                     if (\n                        field.settings.options.data.getParentId(rootid) ===\n                        par.id\n                     ) {\n                        html = `${par.text}: ${html}`;\n                     }\n                  });\n\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n\n         let nodeHTML = \"<div class='list-data-values'>\";\n\n         branches.forEach(function (item) {\n            nodeHTML += `<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color: ${myHex} !important;\">${item}</span>`;\n         });\n\n         nodeHTML += \"</div>\";\n         domTree.innerHTML = nodeHTML;\n\n         let height = 33;\n\n         if (domTree.scrollHeight > 33) height = domTree.scrollHeight;\n\n         const $detailItem = $$(this.ids.detailItem);\n\n         $detailItem.config.height = height;\n         $detailItem.resize();\n      }, 50);\n   }\n};\n","const Docxtemplater = require(\"../../../../js/docxtemplater.v3.0.12.min.js\");\nconst ImageModule = require(\"../../../../js/docxtemplater-image-module.v3.0.2.min.js\");\nconst JSZipUtils = require(\"jszip-utils/dist/jszip-utils.min.js\");\nconst JSZip = require(\"../../../../js/jszip.min.js\");\n\nconst ABFieldConnect = require(\"../../dataFields/ABFieldConnect\");\nconst ABFieldImage = require(\"../../dataFields/ABFieldImage\");\nconst ABObjectQuery = require(\"../../ABObjectQuery\");\n\nconst ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewDocxBuilderComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDocxBuilder_${baseView.id}`,\n         Object.assign(\n            {\n               downloadButton: \"\",\n               noFileLabel: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const settings = this.settings;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const buttonWidth = settings.width ?? defaultSettings.width;\n\n      let autowidth = false;\n\n      if (buttonWidth === 0) autowidth = true;\n\n      let leftSpacer = {\n         type: \"spacer\",\n         width: 1,\n      };\n      let rightSpacer = {\n         type: \"spacer\",\n         width: 1,\n      };\n\n      switch (settings.buttonPosition ?? defaultSettings.buttonPosition) {\n         case \"left\":\n            break;\n         case \"center\":\n            leftSpacer = {\n               type: \"spacer\",\n            };\n            rightSpacer = {\n               type: \"spacer\",\n            };\n            break;\n         case \"right\":\n            leftSpacer = {\n               type: \"spacer\",\n            };\n            break;\n      }\n\n      const buttonLabelText =\n         baseView.buttonlabel ||\n         settings.buttonlabel ||\n         defaultSettings.buttonlabel; // Use || to check empty string \"\"\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            view: \"toolbar\",\n            css:\n               settings.toolbarBackground ?? defaultSettings.toolbarBackground,\n            cols: [\n               leftSpacer,\n               {\n                  id: ids.downloadButton,\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-file-word-o\",\n                  label: buttonLabelText,\n                  width: settings.width || defaultSettings.width,\n                  autowidth: autowidth,\n                  click: () => {\n                     this.renderFile();\n                  },\n                  on: {\n                     // Add data-cy attribute for cypress tests\n                     onAfterRender: () => {\n                        const name = baseView.name?.replace(\".docxBuilder\", \"\");\n                        const dataCy = `docx download ${name} ${baseView.id}`;\n                        $$(ids.downloadButton)\n                           ?.$view.querySelector(\"button\")\n                           .setAttribute(\"data-cy\", dataCy);\n                     },\n                  },\n               },\n               {\n                  id: ids.noFileLabel,\n                  view: \"label\",\n                  label: this.label(\"No template file\"),\n               },\n               {\n                  type: \"spacer\",\n               },\n               rightSpacer,\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n      const $downloadButton = $$(ids.downloadButton);\n      const $noFileLabel = $$(ids.noFileLabel);\n\n      if (this.view.settings.filename) {\n         $downloadButton.show();\n         $noFileLabel.hide();\n      } else {\n         $downloadButton.hide();\n         $noFileLabel.show();\n      }\n   }\n\n   async onShow() {\n      super.onShow;\n\n      const tasks = [];\n\n      this.view.datacollections.forEach((dc) => {\n         if (dc.dataStatus === dc.dataStatusFlag.notInitial)\n            // load data when a widget is showing\n            tasks.push(dc.loadData());\n      });\n\n      // Show loading cursor\n      if (tasks.length > 0) this.busy();\n\n      await Promise.all(tasks);\n\n      // Hide loading cursor\n      this.ready();\n   }\n\n   busy() {\n      const $downloadButton = $$(this.ids.downloadButton);\n\n      if (!$downloadButton) return;\n\n      $downloadButton.disable();\n      $downloadButton.define(\"icon\", \"fa fa-refresh fa-spin\");\n      $downloadButton.refresh();\n   }\n\n   ready() {\n      const $downloadButton = $$(this.ids.downloadButton);\n\n      if (!$downloadButton) return;\n\n      $downloadButton.enable();\n      $downloadButton.define(\"icon\", \"fa fa-file-word-o\");\n      $downloadButton.refresh();\n   }\n\n   async renderFile() {\n      this.busy();\n\n      const reportValues = this.getReportData();\n\n      // console.log(\"DOCX data: \", reportValues);\n\n      // Download images\n      const images = await this.downloadImages();\n\n      // Download the template file\n      const contentTemplateFile = await this.downloadTemplateFile();\n\n      // Generate Docx file\n      const blobFile = this.generateDocxFile(\n         contentTemplateFile,\n         reportValues,\n         images\n      );\n\n      const baseView = this.view;\n\n      // Let user download the output file\n      baseView.letUserDownload(blobFile, baseView.filelabel);\n\n      // Final step\n      this.ready();\n   }\n\n   getReportData() {\n      const result = {};\n\n      // Get current cursor\n      const datacollections = this.view.datacollections;\n      const isDcLabelAdded = datacollections.length > 1;\n\n      datacollections\n         .filter((dc) => dc?.datasource)\n         .forEach(async (dc) => {\n            const obj = dc.datasource;\n            const objModel = obj.model();\n            const dcCursor = dc.getCursor();\n            const dcValues = [];\n            // const dataList = [];\n\n            // merge cursor to support dc and tree cursor in the report\n            // if (dcCursor) {\n            //    const treeCursor = dc.getCursor(true);\n\n            //    dataList.push(this.AB.merge({}, dcCursor, treeCursor));\n            // } else {\n            //    dataList.push(...this.AB.cloneDeep(dc.getData()));\n            // }\n\n            let where = {};\n            if (dcCursor) {\n               where = {\n                  glue: \"and\",\n                  rules: [\n                     {\n                        key: obj.PK(),\n                        rule: \"equals\",\n                        value: dcCursor[obj.PK()],\n                     },\n                  ],\n               };\n            } else {\n               where = this.AB.merge(\n                  where,\n                  dc.settings?.objectWorkspace?.filterConditions ?? {}\n               );\n            }\n\n            // Pull data that have full relation values.\n            // NOTE: When get data from DataCollection, those data is pruned.\n            const dataList = (\n               await objModel.findAll({\n                  disableMinifyRelation: true,\n                  populate: true,\n                  skip: 0,\n                  where,\n               })\n            ).data;\n\n            // update property names to column labels to match format names in docx file\n            const mlFields = obj.multilingualFields();\n\n            dataList.forEach((data) => {\n               let resultData;\n\n               // For support label of columns every languages\n               obj.fields().forEach((f) => {\n                  const fieldLabels = [];\n\n                  // Query Objects\n                  if (obj instanceof ABObjectQuery) {\n                     if (typeof f.object.translations === \"string\")\n                        f.object.translations = JSON.parse(\n                           f.object.translations\n                        );\n\n                     if (typeof f.translations === \"string\")\n                        f.translations = JSON.parse(f.translations);\n\n                     (f.object.translations || []).forEach((objTran) => {\n                        const fieldTran = (f.translations || []).filter(\n                           (fieldTran) =>\n                              fieldTran.language_code === objTran.language_code\n                        )[0];\n\n                        if (!fieldTran) return;\n\n                        const objectLabel = objTran.label;\n                        const fieldLabel = fieldTran.label;\n\n                        // Replace alias with label of object\n                        fieldLabels.push(`${objectLabel}.${fieldLabel}`);\n                     });\n                  }\n                  // Normal Objects\n                  else if (typeof f.translations === \"string\")\n                     f.translations = JSON.parse(f.translations);\n\n                  f.translations.forEach((tran) => {\n                     fieldLabels.push(tran.label);\n                  });\n\n                  resultData = Object.assign(\n                     resultData ?? {},\n                     this.setReportValues(data, f, fieldLabels, mlFields) ?? {}\n                  );\n\n                  // Keep ABObject into .scope of DOCX templater\n                  resultData._object = obj;\n               });\n\n               dcValues.push(resultData);\n            });\n\n            // If data sources have more than 1 or the result data more than 1 items, then add label of data source\n            const datacollectionData =\n               dcValues.length > 1 ? dcValues : dcValues[0];\n\n            if (\n               isDcLabelAdded ||\n               (Array.isArray(datacollectionData) &&\n                  datacollectionData.length > 1)\n            )\n               (dc.translations || []).forEach((tran) => {\n                  result[tran.label] = datacollectionData;\n               });\n            else Object.assign(result, datacollectionData);\n         });\n\n      return result;\n   }\n\n   setReportValues(data, field, fieldLabels = [], multilinguageFields) {\n      const result = {};\n\n      let val = null;\n\n      result.id = data.id;\n      result[`${field.columnName}_ORIGIN`] = data[field.columnName]; // Keep origin value for compare value with custom index\n\n      const baseView = this.view;\n\n      // Translate multilinguage fields\n      if (multilinguageFields.length) {\n         const transFields = (multilinguageFields || []).filter(\n            (fieldName) => data[fieldName] != null\n         );\n\n         baseView.translate(data, data, transFields, baseView.languageCode);\n      }\n\n      // Pull value\n      if (field instanceof ABFieldConnect) {\n         // If field is connected field, then\n         // {\n         //    fieldName: {Object} or [Array]\n         // }\n         val = data[field.columnName];\n\n         if (val?.forEach)\n            val.forEach((v) => {\n               if (!v) return;\n\n               // format relation data\n               if (field.datasourceLink) {\n                  field.datasourceLink\n                     .fields((f) => !f.isConnection)\n                     .forEach((f) => {\n                        v[`${f.columnName}_ORIGIN`] = v[f.columnName];\n\n                        v[f.columnName] = f.format(v, {\n                           languageCode: baseView.languageCode,\n                        });\n                     });\n               }\n\n               // Keep ABObject to relation data\n               if (v && typeof v === \"object\") v._object = field.datasourceLink;\n            });\n\n         // TODO\n         // data[label + '_label'] = field.format(baseData);\n      } else\n         val = field.format(data, {\n            languageCode: baseView.languageCode,\n         });\n\n      // Set value to report with every languages of label\n      fieldLabels.forEach((label) => {\n         if (val) result[label] = val;\n         else if (!result[label]) result[label] = \"\";\n      });\n\n      // normalize child items\n      if (data.data?.length) {\n         result.data = result.data || [];\n\n         (data.data || []).forEach((childItem, index) => {\n            // add new data item\n            result.data[index] = this.setReportValues(\n               childItem,\n               field,\n               fieldLabels,\n               multilinguageFields\n            );\n         });\n      }\n\n      return result;\n   }\n\n   async downloadImages() {\n      const images = {};\n      const tasks = [];\n      const addDownloadTask = (fieldImage, data = []) => {\n         data.forEach((d) => {\n            const imageVal = fieldImage.format(d);\n\n            if (imageVal && !images[imageVal]) {\n               tasks.push(\n                  new Promise((resolve, reject) => {\n                     const imgUrl = fieldImage.urlImage(imageVal); // `/opsportal/image/${this.application.name}/${imageVal}`;\n\n                     JSZipUtils.getBinaryContent(imgUrl, (error, content) => {\n                        if (error) return reject(error);\n\n                        // store binary of image\n                        images[imageVal] = content;\n\n                        resolve();\n                     });\n                  })\n               );\n            }\n\n            // download images of child items\n            addDownloadTask(fieldImage, d.data || []);\n         });\n      };\n\n      this.view.datacollections\n         .filter((dc) => dc?.datasource)\n         .forEach((dc) => {\n            const obj = dc.datasource;\n\n            let currCursor = dc.getCursor();\n\n            if (currCursor) {\n               // Current cursor\n               const treeCursor = dc.getCursor(true);\n\n               currCursor = [this.AB.merge({}, currCursor, treeCursor)];\n            } // List of data\n            else currCursor = dc.getData();\n\n            obj.fields((f) => f instanceof ABFieldImage).forEach((f) => {\n               addDownloadTask(f, currCursor);\n            });\n         });\n\n      await Promise.all(tasks);\n\n      return images;\n   }\n\n   downloadTemplateFile() {\n      const url = this.view.downloadUrl();\n\n      return new Promise((resolve, reject) => {\n         JSZipUtils.getBinaryContent(url, (error, content) => {\n            if (error) return reject(error);\n\n            resolve(content);\n         });\n      });\n   }\n\n   generateDocxFile(contentFile, data, images) {\n      const summaries = {}; // { varName: sum number, ..., varName2: number2 }\n      const zip = new JSZip(contentFile);\n      const doc = new Docxtemplater();\n      const imageModule = new ImageModule({\n         centered: false,\n         getImage: (tagValue, tagName) => {\n            // NOTE: .getImage of version 3.0.2 does not support async\n            //       we can buy newer version to support it\n            //       https://docxtemplater.com/modules/image/\n\n            return images[tagValue] || \"\";\n         },\n         getSize: (imgBuffer, tagValue, tagName) => {\n            const defaultVal = [300, 160];\n            const baseView = this.view;\n            const dc = baseView.datacollection;\n\n            if (!dc) {\n               const dcs = baseView.datacollections;\n\n               if (dcs) {\n                  dcs.forEach((dc) => {\n                     let obj = dc.datasource;\n\n                     if (!obj) return false;\n\n                     // This is a query object\n                     if (tagName.indexOf(\".\") > -1) {\n                        let tagNames = tagName.split(\".\");\n\n                        if (!obj.objects) return false; // not a query\n\n                        obj = obj.objects((o) => o.label === tagNames[0])[0]; // Label of object\n\n                        if (!obj) return false;\n\n                        tagName = tagNames[1]; // Field name\n                     }\n\n                     const imageField = obj.fields(\n                        (f) => f.columnName === tagName\n                     )[0];\n\n                     if (!imageField?.settings) return false;\n\n                     if (\n                        imageField.settings.useWidth &&\n                        imageField.settings.imageWidth\n                     )\n                        defaultVal[0] = imageField.settings.imageWidth;\n\n                     if (\n                        imageField.settings.useHeight &&\n                        imageField.settings.imageHeight\n                     )\n                        defaultVal[1] = imageField.settings.imageHeight;\n\n                     return false;\n                  });\n\n                  return defaultVal;\n               } else return defaultVal;\n            } else {\n               let obj = dc.datasource;\n\n               if (!obj) return defaultVal;\n\n               // This is a query object\n               if (tagName.indexOf(\".\") > -1) {\n                  const tagNames = tagName.split(\".\");\n\n                  obj = obj.objects((o) => o.label === tagNames[0])[0]; // Label of object\n\n                  if (!obj) return defaultVal;\n\n                  tagName = tagNames[1]; // Field name\n               }\n\n               const imageField = obj.fields(\n                  (f) => f.columnName === tagName\n               )[0];\n\n               if (!imageField?.settings) return defaultVal;\n\n               if (\n                  imageField.settings.useWidth &&\n                  imageField.settings.imageWidth\n               )\n                  defaultVal[0] = imageField.settings.imageWidth;\n\n               if (\n                  imageField.settings.useHeight &&\n                  imageField.settings.imageHeight\n               )\n                  defaultVal[1] = imageField.settings.imageHeight;\n\n               return defaultVal;\n            }\n         },\n         // getSize: function (imgBuffer, tagValue, tagName) {\n         //    if (imgBuffer) {\n         //       var maxWidth = 300;\n         //       var maxHeight = 160;\n\n         //       // Find aspect ratio image dimensions\n         //       try {\n         //          var image = sizeOf(imgBuffer);\n         //          var ratio = Math.min(maxWidth / image.width, maxHeight / image.height);\n\n         //          return [image.width * ratio, image.height * ratio];\n         //       }\n         //       // if invalid image, then should return 0, 0 sizes\n         //       catch (err) {\n         //          return [0, 0];\n         //       }\n\n         //    }\n         //    else {\n         //       return [0, 0];\n         //    }\n         // }\n      });\n\n      try {\n         doc.attachModule(imageModule)\n            .loadZip(zip)\n            .setData(data)\n            .setOptions({\n               parser: function (tag) {\n                  return {\n                     get: function (scope, context) {\n                        // NOTE: AppBuilder custom filter : no return empty items\n                        if (tag.indexOf(\"data|\") === 0) {\n                           const prop = (tag.split(\"|\")[1] || \"\").trim();\n\n                           return (scope[\"data\"] || []).filter(function (item) {\n                              return item[prop] ? true : false;\n                           });\n                        }\n                        // Mark number to add to a variable\n                        else if (tag.indexOf(\"|$sum?\") > -1) {\n                           const prop = tag.split(\"|$sum?\")[0];\n                           const varName = tag.split(\"|$sum?\")[1];\n\n                           let number = scope[prop];\n\n                           if (typeof number === \"string\")\n                              number = number.replace(\n                                 /[^\\d.]/g, // return only number and dot\n                                 \"\"\n                              );\n\n                           if (!summaries[varName]) summaries[varName] = 0.0;\n\n                           summaries[varName] += parseFloat(number);\n\n                           return scope[prop];\n                        }\n                        // Show sum value ^\n                        else if (tag.indexOf(\"$sum?\") === 0) {\n                           const varName = tag.replace(\"$sum?\", \"\");\n\n                           return summaries[varName] || 0;\n                        }\n                        // // Sum number of .data (Grouped query)\n                        // else if (tag.indexOf(\"$sum|\") === 0) {\n                        //    const prop = (\n                        //       tag.split(\"|\")[1] || \"\"\n                        //    ).trim();\n\n                        //    let sum = 0;\n                        //    (scope[\"data\"] || []).forEach(\n                        //       (childItem) => {\n                        //          if (!childItem[prop]) return;\n\n                        //          let number = childItem[prop];\n                        //          if (typeof number === \"string\") {\n                        //             number = number.replace(\n                        //                /[^\\d.]/g, // return only number and dot\n                        //                \"\"\n                        //             );\n                        //          }\n\n                        //          try {\n                        //             sum += parseFloat(\n                        //                number || 0\n                        //             );\n                        //          } catch (e) {}\n                        //       }\n                        //    );\n\n                        //    // Print number with commas\n                        //    if (sum) {\n                        //       sum = sum\n                        //          .toString()\n                        //          .replace(\n                        //             /\\B(?=(\\d{3})+(?!\\d))/g,\n                        //             \",\"\n                        //          );\n                        //    }\n\n                        //    return sum;\n                        // }\n                        // NOTE: AppBuilder custom filter of another data source\n                        else if (tag.indexOf(\"$\") === 0) {\n                           const props = tag.replace(\"$\", \"\").split(\"|\");\n                           const propSource = props[0].trim();\n                           const propFilter = props[1].trim(); // column name of ABFieldConnect\n\n                           if (!propSource || !propFilter) return \"\";\n\n                           // Pull Index field of connect field\n                           let indexColName;\n\n                           const obj = scope._object;\n\n                           if (obj) {\n                              const connectedField = obj.fields(\n                                 (f) => f.columnName === propFilter\n                              )[0];\n\n                              if (connectedField) {\n                                 const indexField = connectedField.indexField;\n\n                                 indexColName = indexField\n                                    ? indexField.columnName\n                                    : null;\n                              }\n                           }\n\n                           let sourceVals = data[propSource];\n\n                           if (sourceVals && !Array.isArray(sourceVals))\n                              sourceVals = [sourceVals];\n\n                           const getVal = (data) =>\n                              data[`${indexColName}_ORIGIN`] || // Pull origin data to compare by custom index\n                              data[indexColName] ||\n                              data.id ||\n                              data;\n\n                           return (sourceVals || []).filter(function (item) {\n                              // Pull data of parent to compare\n                              let comparer = scope[propFilter];\n\n                              if (Array.isArray(comparer))\n                                 return (\n                                    comparer.filter(\n                                       (c) => getVal(c) === getVal(item)\n                                    ).length > 0\n                                 );\n                              else return getVal(item) === getVal(comparer);\n                           });\n                        }\n                        // ์NOTE : Custom filter\n                        else if (tag.indexOf(\"?\") > -1) {\n                           const result = scope;\n                           const prop = tag.split(\"?\")[0];\n                           const condition = tag.split(\"?\")[1];\n\n                           if (prop && condition) {\n                              let data = scope[prop];\n\n                              if (data) {\n                                 if (!Array.isArray(data)) data = [data];\n\n                                 return data.filter((d) =>\n                                    eval(condition.replace(/\\./g, \"d.\"))\n                                 );\n                              }\n                           }\n                           return result;\n                        } else if (tag === \".\") return scope;\n                        else return scope[tag];\n                     },\n                  };\n               },\n            })\n            .render(); // render the document\n      } catch (error) {\n         return error;\n      }\n\n      // Output the document using Data-URI\n      const docxFile = doc.getZip().generate({\n         type: \"blob\",\n         mimeType:\n            \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n      });\n\n      return docxFile;\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormButton extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormButton_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const self = this;\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const settings = baseView.settings ?? {};\n\n      const alignment =\n         settings.alignment || baseView.constructor.defaultValues().alignment;\n\n      const _ui = {\n         cols: [],\n      };\n\n      // spacer\n      if (alignment === \"center\" || alignment === \"right\") {\n         _ui.cols.push({});\n      }\n\n      // cancel button\n      if (settings.includeCancel) {\n         _ui.cols.push(\n            {\n               view: \"button\",\n               autowidth: true,\n               value: settings.cancelLabel || this.label(\"Cancel\"),\n               click: function () {\n                  self.onCancel(this);\n               },\n               on: {\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `button cancel ${form.id}`\n                     );\n                  },\n               },\n            },\n            {\n               width: 10,\n            }\n         );\n      }\n\n      // reset button\n      if (settings.includeReset) {\n         _ui.cols.push(\n            {\n               view: \"button\",\n               autowidth: true,\n               value: settings.resetLabel || this.label(\"Reset\"),\n               click: function () {\n                  self.onClear(this);\n               },\n               on: {\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `button reset ${form.id}`\n                     );\n                  },\n               },\n            },\n            {\n               width: 10,\n            }\n         );\n      }\n\n      // save button\n      if (settings.includeSave) {\n         _ui.cols.push({\n            view: \"button\",\n            type: \"form\",\n            css: \"webix_primary\",\n            autowidth: true,\n            value: settings.saveLabel || this.label(\"Save\"),\n            click: function () {\n               self.onSave(this);\n            },\n            on: {\n               onAfterRender: function () {\n                  this.getInputNode().setAttribute(\n                     \"data-cy\",\n                     `button save ${form.id}`\n                  );\n               },\n            },\n         });\n      }\n\n      // spacer\n      if (alignment === \"center\" || alignment === \"left\") _ui.cols.push({});\n\n      return super.ui(_ui);\n   }\n\n   onCancel(cancelButton) {\n      const baseView = this.view;\n      const settings = baseView.settings ?? {};\n\n      // get form component\n      const form = baseView.parentFormComponent();\n\n      // get ABDatacollection\n      const dc = form.datacollection;\n\n      // clear cursor of DC\n      dc?.setCursor(null);\n\n      cancelButton?.getFormView?.().clear();\n\n      if (settings.afterCancel) form.changePage(settings.afterCancel);\n      // If the redirect page is not defined, then redirect to parent page\n      else {\n         const noPopupFilter = (p) => p.settings && p.settings.type != \"popup\";\n\n         const pageCurr = this.pageParent();\n         if (pageCurr) {\n            const pageParent = pageCurr.pageParent(noPopupFilter) ?? pageCurr;\n\n            if (pageParent) form.changePage(pageParent.id);\n         }\n      }\n   }\n\n   onClear(resetButton) {\n      // get form component\n      const form = this.view.parentFormComponent();\n\n      // get ABDatacollection\n      const dc = form.datacollection;\n\n      // clear cursor of DC\n      if (dc) {\n         dc.setCursor(null);\n      }\n\n      resetButton?.getFormView?.().clear();\n   }\n\n   onSave(saveButton) {\n      if (!saveButton) {\n         console.error(\"Require the button element\");\n         return;\n      }\n      // get form component\n      const form = this.view.parentFormComponent();\n      const formView = saveButton.getFormView();\n\n      // disable the save button\n      saveButton.disable?.();\n\n      // save data\n      form\n         .saveData(formView)\n         .then(() => {\n            saveButton.enable?.();\n\n            //Focus on first focusable component\n            form.focusOnFirst();\n         })\n         .catch((err) => {\n            console.error(err);\n            saveButton.enable?.();\n         });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormCheckboxComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormCheckbox_${baseView.id}`, ids);\n   }\n\n   ui() {\n      return super.ui({\n         view: \"checkbox\",\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABViewFormItem = require(\"../ABViewFormItem\");\nconst ABViewFormConnect = require(\"../ABViewFormConnect\");\nconst ABViewFormCustom = require(\"../ABViewFormCustom\");\nconst ABViewFormTextbox = require(\"../ABViewFormTextbox\");\nconst ABViewFormJson = require(\"../ABViewFormJson\");\n\nasync function timeout(ms) {\n   return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nconst fieldValidations = [];\n\nmodule.exports = class ABViewFormComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewForm_${baseView.id}`,\n         Object.assign(\n            {\n               form: \"\",\n\n               layout: \"\",\n               filterComplex: \"\",\n            },\n            ids\n         )\n      );\n\n      this.timerId = null;\n      this._showed = false;\n   }\n\n   ui() {\n      const baseView = this.view;\n      const superComponent = baseView.superComponent();\n      const rows = superComponent.ui().rows ?? [];\n      const fieldValidationsHolder = this.uiValidationHolder();\n      const _ui = super.ui([\n         {\n            id: this.ids.form,\n            view: \"form\",\n            abid: baseView.id,\n            rows: rows.concat(fieldValidationsHolder),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiValidationHolder() {\n      const result = [\n         {\n            hidden: true,\n            rows: [],\n         },\n      ];\n\n      // NOTE: this._currentObject can be set in the KanBan Side Panel\n      const baseView = this.view;\n      const object = this.datacollection?.datasource ?? baseView._currentObject;\n\n      if (!object) return result;\n\n      const validationUI = [];\n      const existsFields = baseView.fieldComponents();\n\n      object\n         // Pull fields that have validation rules\n         .fields((f) => f?.settings?.validationRules)\n         .forEach((f) => {\n            const view = existsFields.find(\n               (com) => f.id === com.settings.fieldId\n            );\n            if (!view) return;\n\n            // parse the rules because they were stored as a string\n            // check if rules are still a string...if so lets parse them\n            if (typeof f.settings.validationRules === \"string\") {\n               f.settings.validationRules = JSON.parse(\n                  f.settings.validationRules\n               );\n            }\n\n            // there could be more than one so lets loop through and build the UI\n            f.settings.validationRules.forEach((rule, indx) => {\n               const Filter = this.AB.filterComplexNew(\n                  `${f.columnName}_${indx}`\n               );\n               // add the new ui to an array so we can add them all at the same time\n               if (typeof Filter.ui === \"function\") {\n                  validationUI.push(Filter.ui());\n               } else {\n                  // Legacy v1 method:\n                  validationUI.push(Filter.ui);\n               }\n\n               // store the filter's info so we can assign values and settings after the ui is rendered\n               fieldValidations.push({\n                  filter: Filter,\n                  view: Filter.ids.querybuilder,\n                  columnName: f.columnName,\n                  validationRules: rule.rules,\n                  invalidMessage: rule.invalidMessage,\n               });\n            });\n         });\n\n      result.rows = validationUI;\n\n      return result;\n   }\n\n   async init(AB, accessLevel, options = {}) {\n      await super.init(AB);\n\n      this.view.superComponent().init(AB, accessLevel, options);\n\n      this.initCallbacks(options);\n      this.initEvents();\n      this.initValidationRules();\n\n      const abWebix = this.AB.Webix;\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         abWebix.extend($form, abWebix.ProgressBar);\n      }\n\n      if (accessLevel < 2) $form.disable();\n   }\n\n   initCallbacks(options = {}) {\n      // ? We need to determine from these options whether to clear on load?\n      if (options?.clearOnLoad) {\n         // does this need to be a function?\n         this.view.settings.clearOnLoad = options.clearOnLoad();\n      }\n      // Q: Should we use emit the event instead ?\n      const baseView = this.view;\n\n      if (options.onBeforeSaveData)\n         baseView._callbacks.onBeforeSaveData = options.onBeforeSaveData;\n      else baseView._callbacks.onBeforeSaveData = () => true;\n   }\n\n   initEvents() {\n      // bind a data collection to form component\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      // listen DC events\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"changeCursor\",\n         listener: (rowData) => {\n            const baseView = this.view;\n            const linkViaOneConnection = baseView.fieldComponents(\n               (comp) => comp instanceof ABViewFormConnect\n            );\n            // clear previous xxx->one selections and add new from\n            // cursor change\n            linkViaOneConnection.forEach((f) => {\n               const field = f.field();\n               if (\n                  field?.settings?.linkViaType == \"one\" &&\n                  field?.linkViaOneValues\n               ) {\n                  delete field.linkViaOneValues;\n                  if (rowData[field.columnName]) {\n                     if (Array.isArray(rowData[field.columnName])) {\n                        let valArray = [];\n                        rowData[field.columnName].forEach((v) => {\n                           valArray.push(v[field.object.PK()]);\n                        });\n                        field.linkViaOneValues = valArray.join();\n                     } else {\n                        field.linkViaOneValues = rowData[field.columnName];\n                     }\n                  }\n               }\n            });\n\n            this.displayData(rowData);\n         },\n      });\n\n      const ids = this.ids;\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"initializingData\",\n         listener: () => {\n            const $form = $$(ids.form);\n\n            if ($form) {\n               $form.disable();\n\n               $form.showProgress?.({ type: \"icon\" });\n            }\n         },\n      });\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"initializedData\",\n         listener: () => {\n            const $form = $$(ids.form);\n\n            if ($form) {\n               $form.enable();\n\n               $form.hideProgress?.();\n            }\n         },\n      });\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"ab.datacollection.update\",\n         listener: (msg, data) => {\n            if (!data?.objectId) return;\n\n            const object = dc.datasource;\n\n            if (!object) return;\n\n            if (\n               object.id === data.objectId ||\n               object.fields((f) => f.settings.linkObject === data.objectId)\n                  .length > 0\n            ) {\n               const currData = dc.getCursor();\n\n               if (currData) this.displayData(currData);\n            }\n         },\n      });\n\n      // bind the cursor event of the parent DC\n      const linkDv = dc.datacollectionLink;\n\n      if (linkDv)\n         // update the value of link field when data of the parent dc is changed\n         this.eventAdd({\n            emitter: linkDv,\n            eventName: \"changeCursor\",\n            listener: (rowData) => {\n               this.displayParentData(rowData);\n            },\n         });\n   }\n\n   initValidationRules() {\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      if (!fieldValidations.length) return;\n\n      // we need to store the rules for use later so lets build a container array\n      const complexValidations = [];\n\n      fieldValidations.forEach((f) => {\n         // init each ui to have the properties (app and fields) of the object we are editing\n         f.filter.applicationLoad(dc.datasource.application);\n         f.filter.fieldsLoad(dc.datasource.fields());\n         // now we can set the value because the fields are properly initialized\n         f.filter.setValue(f.validationRules);\n\n         // if there are validation rules present we need to store them in a lookup hash\n         // so multiple rules can be stored on a single field\n         if (!Array.isArray(complexValidations[f.columnName]))\n            complexValidations[f.columnName] = [];\n\n         // now we can push the rules into the hash\n         complexValidations[f.columnName].push({\n            filters: $$(f.view).getFilterHelper(),\n            // values: $$(ids.form).getValues(),\n            invalidMessage: f.invalidMessage,\n         });\n      });\n\n      const ids = this.ids;\n\n      // use the lookup to build the validation rules\n      Object.keys(complexValidations).forEach((key) => {\n         // get our field that has validation rules\n         const formField = $$(ids.form).queryView({\n            name: key,\n         });\n\n         // store the rules in a data param to be used later\n         formField.$view.complexValidations = complexValidations[key];\n         // define validation rules\n         formField.define(\"validate\", function (nval, oval, field) {\n            // get field now that we are validating\n            const fieldValidating = $$(ids.form).queryView({\n               name: field,\n            });\n\n            // default valid is true\n            let isValid = true;\n\n            // check each rule that was stored previously on the element\n            fieldValidating.$view.complexValidations.forEach((filter) => {\n               const object = dc.datasource;\n               const data = this.getValues();\n\n               // convert rowData from { colName : data } to { id : data }\n               const newData = {};\n\n               (object.fields() || []).forEach((field) => {\n                  newData[field.id] = data[field.columnName];\n               });\n\n               // for the case of \"this_object\" conditions:\n               if (data.uuid) newData[\"this_object\"] = data.uuid;\n\n               // use helper funtion to check if valid\n               const ruleValid = filter.filters(newData);\n\n               // if invalid we need to tell the field\n               if (!ruleValid) {\n                  isValid = false;\n                  // we also need to define an error message\n                  fieldValidating.define(\n                     \"invalidMessage\",\n                     filter.invalidMessage\n                  );\n               }\n            });\n\n            return isValid;\n         });\n\n         formField.refresh();\n      });\n   }\n\n   async loadDcDataOfRecordRules() {\n      const tasks = [];\n\n      (this.settings?.recordRules ?? []).forEach((rule) => {\n         (rule?.actionSettings?.valueRules?.fieldOperations ?? []).forEach(\n            (op) => {\n               if (op.valueType !== \"exist\") return;\n\n               const pullDataDC = this.AB.datacollectionByID(op.value);\n\n               if (\n                  pullDataDC?.dataStatus ===\n                  pullDataDC.dataStatusFlag.notInitial\n               )\n                  tasks.push(pullDataDC.loadData());\n            }\n         );\n      });\n\n      return await Promise.all(tasks);\n   }\n\n   async onShow(data) {\n      this.saveButton?.disable();\n\n      this._showed = true;\n\n      const baseView = this.view;\n\n      // call .onShow in the base component\n      const superComponent = baseView.superComponent();\n      await superComponent.onShow();\n\n      const $form = $$(this.ids.form);\n      const dc = this.datacollection;\n\n      if (dc) {\n         // clear current cursor on load\n         // if (this.settings.clearOnLoad || _logic.callbacks.clearOnLoad() ) {\n         const settings = this.settings;\n\n         if (settings.clearOnLoad) {\n            dc.setCursor(null);\n         }\n\n         // pull data of current cursor\n         const rowData = dc.getCursor();\n\n         if ($form) dc.bind($form);\n\n         // do this for the initial form display so we can see defaults\n         await this.displayData(rowData);\n      }\n      // show blank data in the form\n      else await this.displayData(data ?? {});\n\n      //Focus on first focusable component\n      this.focusOnFirst();\n\n      if ($form) $form.adjust();\n\n      await this.loadDcDataOfRecordRules();\n\n      this.saveButton?.enable();\n   }\n\n   async displayData(rowData) {\n      // If setTimeout is already scheduled, no need to do anything\n      if (this.timerId) return;\n      else this.timerId = await timeout(80);\n\n      const baseView = this.view;\n      const customFields = baseView.fieldComponents(\n         (comp) =>\n            comp instanceof ABViewFormCustom ||\n            // rich text\n            (comp instanceof ABViewFormTextbox &&\n               comp.settings.type === \"rich\") ||\n            (comp instanceof ABViewFormJson && comp.settings.type === \"filter\")\n      );\n\n      // Set default values\n      if (!rowData) {\n         customFields.forEach((f) => {\n            const field = f.field();\n            if (!field) return;\n\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            // var colName = field.columnName;\n            if (this._showed) comp?.onShow?.();\n\n            // set value to each components\n            const defaultRowData = {};\n\n            field.defaultValue(defaultRowData);\n            field.setValue($$(comp.ids.formItem), defaultRowData);\n\n            comp?.refresh?.(defaultRowData);\n         });\n\n         const normalFields = baseView.fieldComponents(\n            (comp) =>\n               comp instanceof ABViewFormItem &&\n               !(comp instanceof ABViewFormCustom)\n         );\n\n         normalFields.forEach((f) => {\n            const field = f.field();\n            if (!field) return;\n\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            if (f.key === \"button\") return;\n\n            const colName = field.columnName;\n\n            // set value to each components\n            const values = {};\n\n            field.defaultValue(values);\n            $$(comp.ids.formItem)?.setValue(values[colName] ?? \"\");\n         });\n\n         // select parent data to default value\n         const dc = this.datacollection;\n         const linkDv = dc.datacollectionLink;\n\n         if (linkDv) {\n            const parentData = linkDv.getCursor();\n\n            this.displayParentData(parentData);\n         }\n      }\n\n      // Populate value to custom fields\n      else\n         customFields.forEach((f) => {\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            if (this._showed) comp?.onShow?.();\n\n            // set value to each components\n            f?.field()?.setValue($$(comp.ids.formItem), rowData);\n\n            comp?.refresh?.(rowData);\n         });\n\n      this.timerId = null;\n   }\n\n   displayParentData(rowData) {\n      const dc = this.datacollection;\n\n      // If the cursor is selected, then it will not update value of the parent field\n      const currCursor = dc.getCursor();\n      if (currCursor) return;\n\n      const relationField = dc.fieldLink;\n      if (!relationField) return;\n\n      const baseView = this.view;\n      // Pull a component of relation field\n      const relationFieldCom = baseView.fieldComponents((comp) => {\n         if (!(comp instanceof ABViewFormItem)) return false;\n\n         return comp.field()?.id === relationField.id;\n      })[0];\n      if (!relationFieldCom) return;\n\n      const relationFieldView = baseView.viewComponents[relationFieldCom.id];\n      if (!relationFieldView) return;\n\n      const $relationFieldView = $$(relationFieldView.ids.formItem),\n         relationName = relationField.relationName();\n\n      // pull data of parent's dc\n      const formData = {};\n\n      formData[relationName] = rowData;\n\n      // set data of parent to default value\n      relationField.setValue($relationFieldView, formData);\n   }\n\n   detatch() {\n      // TODO: remove any handlers we have attached.\n   }\n\n   focusOnFirst() {\n      const baseView = this.view;\n\n      let topPosition = 0;\n      let topPositionId = \"\";\n\n      baseView.views().forEach((item) => {\n         if (item.key === \"textbox\" || item.key === \"numberbox\")\n            if (item.position.y === topPosition) {\n               topPosition = item.position.y;\n               topPositionId = item.id;\n            }\n      });\n\n      const childComponent = baseView.viewComponents[topPositionId];\n\n      if (childComponent && $$(childComponent.ids.formItem))\n         $$(childComponent.ids.formItem).focus();\n   }\n\n   get saveButton() {\n      return $$(this.ids.form)?.queryView({\n         view: \"button\",\n         type: \"form\",\n      });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormConnectComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormConnect_${baseView.id}`,\n         Object.assign(\n            {\n               popup: \"\",\n               editpopup: \"\",\n            },\n            ids\n         )\n      );\n\n      this.addPageComponent = null;\n      this.editPageComponent = null;\n   }\n\n   get field() {\n      return this.view.field();\n   }\n\n   ui() {\n      const field = this.field;\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const settings = this.settings;\n\n      if (!field) {\n         console.error(`This field could not found : ${settings.fieldId}`);\n\n         return super.ui({\n            view: \"label\",\n            label: \"\",\n         });\n      }\n\n      const multiselect = field.settings.linkType == \"many\";\n      const formSettings = form?.settings || {};\n      const ids = this.ids;\n\n      let _ui = {\n         id: ids.formItem,\n         view: multiselect ? \"multicombo\" : \"combo\",\n         name: field.columnName,\n         required:\n            field?.settings?.required || parseInt(settings?.required) || false,\n         // label: field.label,\n         // labelWidth: settings.labelWidth,\n         dataFieldId: field.id,\n         on: {\n            onItemClick: (id, e) => {\n               if (\n                  e.target.classList.contains(\"editConnectedPage\") &&\n                  e.target.dataset.itemId\n               ) {\n                  const rowId = e.target.dataset.itemId;\n                  if (!rowId) return;\n                  this.goToEditPage(rowId);\n               }\n            },\n            onChange: (data) => {\n               this._onChange(data);\n            },\n         },\n      };\n\n      if (formSettings.showLabel) {\n         _ui.label = field.label;\n         _ui.labelWidth = formSettings.labelWidth;\n         _ui.labelPosition = formSettings.labelPosition;\n      }\n\n      this.initAddEditTool();\n\n      _ui.suggest = {\n         button: true,\n         selectAll: multiselect ? true : false,\n         body: {\n            data: [],\n            template: `${\n               baseView?.settings?.editForm\n                  ? '<i data-item-id=\"#id#\" class=\"fa fa-cog editConnectedPage\"></i>'\n                  : \"\"\n            }#value#`,\n         },\n         on: {\n            onShow: () => {\n               field.populateOptionsDataCy($$(ids.formItem), field, form);\n            },\n         },\n         // Support partial matches\n         filter: ({ value }, search) =>\n            value.toLowerCase().includes(search.toLowerCase()),\n      };\n\n      _ui.onClick = {\n         customField: (id, e, trg) => {\n            if (settings.disable === 1) return;\n\n            const rowData = {};\n            const $formItem = $$(ids.formItem);\n\n            if ($formItem) {\n               const node = $formItem.$view;\n\n               field.customEdit(rowData, /* App,*/ node);\n            }\n         },\n      };\n\n      let apcUI = this.addPageComponent?.ui;\n      if (apcUI) {\n         // reset some component vals to make room for button\n         _ui.label = \"\";\n         _ui.labelWidth = 0;\n\n         // add click event to add new button\n         apcUI.on = {\n            onItemClick: (/*id, evt*/) => {\n               // let $form = $$(id).getFormView();\n               this.addPageComponent?.onClick(form.datacollection);\n\n               return false;\n            },\n         };\n\n         _ui = {\n            inputId: ids.formItem,\n            rows: [\n               {\n                  cols: [\n                     {\n                        view: \"label\",\n                        label: field.label,\n                        width: formSettings.labelWidth,\n                        align: \"left\",\n                     },\n                     apcUI,\n                     _ui,\n                  ],\n               },\n            ],\n         };\n\n         _ui = super.ui(_ui);\n      } else {\n         _ui = {\n            inputId: ids.formItem,\n            rows: [_ui],\n         };\n\n         _ui = super.ui(_ui);\n\n         delete _ui.rows[0].id;\n      }\n\n      return _ui;\n   }\n\n   async _onChange(data) {\n      const ids = this.ids;\n      const field = this.field;\n      const baseView = this.view;\n\n      let selectedValues;\n      if (Array.isArray(data)) {\n         selectedValues = [];\n         data.forEach((record) => {\n            selectedValues.push(record.id || record);\n            // let recordObj = record;\n            // if (typeof record != \"object\") {\n            //    // we need to convert either index or uuid to full data object\n            //    recordObj = field.getItemFromVal(record);\n            // }\n            // if (recordObj?.id) selectedValues.push(recordObj.id);\n         });\n      } else {\n         selectedValues = data;\n         if (typeof data != \"object\") {\n            // we need to convert either index or uuid to full data object\n            selectedValues = field.getItemFromVal(data);\n         }\n         // selectedValues = field.pullRecordRelationValues(selectedValues);\n         if (selectedValues?.id) {\n            selectedValues = selectedValues.id;\n         } else {\n            selectedValues = data;\n         }\n      }\n\n      // We can now set the new value but we need to block event listening\n      // so it doesn't trigger onChange again\n      const $formItem = $$(ids.formItem);\n\n      // for xxx->one connections we need to populate again before setting\n      // values because we need to use the selected values to add options\n      // to the UI\n      if (this?.field?.settings?.linkViaType == \"one\") {\n         this.busy();\n         await field.getAndPopulateOptions(\n            $formItem,\n            baseView.options,\n            field,\n            baseView.parentFormComponent()\n         );\n         this.ready();\n      }\n\n      if ($formItem) {\n         $formItem.blockEvent();\n\n         const prepedVals = selectedValues.join\n            ? selectedValues.join()\n            : selectedValues;\n\n         $formItem.setValue(prepedVals);\n         $formItem.unblockEvent();\n      }\n   }\n\n   async init(AB, options) {\n      await super.init(AB);\n\n      const $formItem = $$(this.ids.formItem);\n      if ($formItem) webix.extend($formItem, webix.ProgressBar);\n\n      this.initAddEditTool();\n   }\n\n   initAddEditTool() {\n      const baseView = this.view;\n\n      // Initial add/edit page tools\n      const addFormID = baseView?.settings?.formView;\n      if (addFormID && baseView && !this.addPageComponent) {\n         this.addPageComponent = baseView.addPageTool.component(\n            this.AB,\n            `${baseView.id}_${addFormID}`\n         );\n         this.addPageComponent.applicationLoad(baseView.application);\n         this.addPageComponent.init({\n            onSaveData: this.callbackSaveData.bind(this),\n            onCancelClick: this.callbackCancel.bind(this),\n            clearOnLoad: this.callbackClearOnLoad.bind(this),\n         });\n      }\n\n      const editFormID = baseView?.settings?.editForm;\n      if (editFormID && baseView && !this.editPageComponent) {\n         this.editPageComponent = baseView.editPageTool.component(\n            this.AB,\n            `${baseView.id}_${editFormID}`\n         );\n         this.editPageComponent.applicationLoad(baseView.application);\n         this.editPageComponent.init({\n            onSaveData: this.callbackSaveData.bind(this),\n            onCancelClick: this.callbackCancel.bind(this),\n            clearOnLoad: this.callbackClearOnLoad.bind(this),\n         });\n      }\n   }\n\n   async callbackSaveData(saveData) {\n      if (saveData == null) return;\n      else if (!Array.isArray(saveData)) saveData = [saveData];\n\n      const ids = this.ids;\n      const field = this.field;\n\n      // find the select component\n      const $formItem = $$(ids.formItem);\n      if (!$formItem) return;\n\n      // Refresh option list\n      this.busy();\n      field.clearStorage(this.view.settings.filterConditions);\n      const data = await field.getAndPopulateOptions(\n         $formItem,\n         this.view.options,\n         field,\n         this.view.parentFormComponent()\n      );\n      this.ready();\n\n      // field.once(\"option.data\", (data) => {\n      data.forEach((item) => {\n         item.value = item.text;\n      });\n\n      $formItem.getList().clearAll();\n      $formItem.getList().define(\"data\", data);\n\n      if (field.settings.linkType === \"many\") {\n         let selectedItems = $formItem.getValue();\n         saveData.forEach((sData) => {\n            if (selectedItems.indexOf(sData.id) === -1)\n               selectedItems = selectedItems\n                  ? `${selectedItems},${sData.id}`\n                  : sData.id;\n         });\n\n         $formItem.setValue(selectedItems);\n      } else {\n         $formItem.setValue(saveData[0].id);\n      }\n      // close the popup when we are finished\n      // $$(ids.popup)?.close();\n      // $$(ids.editpopup)?.close();\n      // });\n\n      // field.getOptions(this.settings.filterConditions, \"\");\n      // .then(function (data) {\n      //    // we need new option that will be returned from server (above)\n      //    // so we will not set this and then just reset it.\n      // });\n   }\n\n   callbackCancel() {\n      $$(this.ids?.popup)?.close?.();\n\n      return false;\n   }\n\n   callbackClearOnLoad() {\n      return true;\n   }\n\n   getValue(rowData) {\n      return this.field.getValue($$(this.ids.formItem), rowData);\n   }\n\n   formBusy($form) {\n      if (!$form) return;\n\n      $form.disable?.();\n      $form.showProgress?.({ type: \"icon\" });\n   }\n\n   formReady($form) {\n      if (!$form) return;\n\n      $form.enable?.();\n      $form.hideProgress?.();\n   }\n\n   goToEditPage(rowId) {\n      const settings = this.settings;\n\n      if (!settings.editForm) return;\n\n      const editForm = this.view.application.urlResolve(settings.editForm);\n\n      if (!editForm) return;\n\n      const $form = $$(this.ids.formItem).getFormView() || null;\n\n      // Open the form popup\n      this.editPageComponent.onClick().then(() => {\n         const dc = editForm.datacollection;\n\n         if (dc) {\n            dc.setCursor(rowId);\n\n            this.__editFormDcEvent =\n               this.__editFormDcEvent ||\n               dc.on(\"initializedData\", () => {\n                  dc.setCursor(rowId);\n               });\n         }\n      });\n   }\n\n   async onShow() {\n      const ids = this.ids;\n      const $formItem = $$(ids.formItem);\n\n      if (!$formItem) return;\n\n      const field = this.field;\n\n      if (!field) return;\n\n      const node = $formItem.$view;\n\n      if (!node) return;\n\n      const $node = $$(node);\n\n      if (!$node) return;\n\n      const settings = this.settings;\n      let filterConditions = {\n         glue: \"and\",\n         rules: [],\n      };\n\n      if (settings?.filterConditions?.rules?.length) {\n         filterConditions = this.AB.cloneDeep(\n            this.view.settings.filterConditions\n         );\n      }\n\n      // NOTE: compatible with version 1. This code should not be here too long.\n      if (\n         !filterConditions?.rules?.length &&\n         settings?.objectWorkspace?.filterConditions?.rules?.length\n      ) {\n         filterConditions = this.AB.cloneDeep(\n            settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Add the filter connected value\n      if ((settings?.filterConnectedValue ?? \"\").indexOf(\":\") > -1) {\n         const values = settings.filterConnectedValue.split(\":\"),\n            uiConfigName = values[0],\n            connectFieldId = values[1];\n\n         filterConditions.rules.push({\n            key: connectFieldId,\n            rule: \"filterByConnectValue\",\n            value: uiConfigName,\n         });\n      }\n\n      const getFilterByConnectValues = (conditions, depth = 0) => {\n         return [\n            ...conditions.rules\n               .filter((e) => e.rule === \"filterByConnectValue\")\n               .map((e) => {\n                  const filterByConnectValue = Object.assign({}, e);\n\n                  filterByConnectValue.depth = depth;\n\n                  return filterByConnectValue;\n               }),\n         ].concat(\n            ...conditions.rules\n               .filter((e) => e.glue)\n               .map((e) => getFilterByConnectValues(e, depth + 1))\n         );\n      };\n\n      const baseView = this.view;\n      const filterByConnectValues = getFilterByConnectValues(\n         filterConditions\n      ).map((e) => {\n         for (const key in baseView.parent.viewComponents) {\n            if (\n               !(\n                  baseView.parent.viewComponents[key] instanceof\n                  this.constructor\n               )\n            )\n               continue;\n\n            const $ui = $$(\n               baseView.parent.viewComponents[key]\n                  .ui()\n                  .rows.find((vc) => vc.inputId)?.inputId\n            );\n\n            if ($ui?.config?.name === e.value) {\n               // we need to use the element id stored in the settings to find out what the\n               // ui component id is so later we can use it to look up its current value\n               e.filterValue = $ui;\n\n               break;\n            }\n         }\n\n         const ab = this.AB;\n         const field = ab\n            .objectByID(settings.objectId)\n            .fieldByID(settings.fieldId);\n         const linkedObject = ab.objectByID(field.settings.linkObject);\n         const linkedField = linkedObject.fieldByID(e.key);\n\n         if (linkedField?.settings?.isCustomFK) {\n            // finally if this is a custom foreign key we need the stored columnName by\n            // default uuid is passed for all non CFK\n            e.filterColumn = ab\n               .objectByID(linkedField.settings.linkObject)\n               .fields(\n                  (filter) =>\n                     filter.id === linkedField.settings.indexField ||\n                     linkedField.settings.indexField2\n               )[0].columnName;\n         } else e.filterColumn = null;\n\n         return e;\n      });\n\n      baseView.options = {\n         formView: settings.formView,\n         filters: filterConditions,\n         // NOTE: settings.objectWorkspace.xxx is a depreciated setting.\n         // We will be phasing this out.\n         sort: settings.sortFields ?? settings.objectWorkspace?.sortFields,\n         editable: settings.disable === 1 ? false : true,\n         editPage:\n            !settings.editForm || settings.editForm === \"none\" ? false : true,\n         filterByConnectValues,\n      };\n\n      // if this field's options are filtered off another field's value we need\n      // to make sure the UX helps the user know what to do.\n      // fetch the options and set placeholder text for this view\n      if (baseView.options.editable) {\n         const parentFields = [];\n\n         filterByConnectValues.forEach((fv) => {\n            if (fv.filterValue && fv.key) {\n               const $filterValueConfig = $$(fv.filterValue.config.id);\n\n               let parentField = null;\n\n               if (!$filterValueConfig) {\n                  // this happens in the Interface Builder when only the single form UI is displayed\n                  parentField = {\n                     id: \"perentElement\",\n                     label: this.label(\"PARENT ELEMENT\"),\n                  };\n               } else {\n                  const value = field.getValue($filterValueConfig);\n\n                  if (!value) {\n                     // if there isn't a value on the parent select element set this one to readonly and change placeholder text\n                     parentField = {\n                        id: fv.filterValue.config.id,\n                        label: $filterValueConfig.config.label,\n                     };\n                  }\n\n                  $filterValueConfig.attachEvent(\n                     \"onChange\",\n                     async (e) => {\n                        const parentVal = $filterValueConfig.getValue();\n\n                        if (parentVal) {\n                           $node.define(\"disabled\", false);\n                           $node.define(\n                              \"placeholder\",\n                              this.label(\"Select items\")\n                           );\n                           this.busy();\n                           await field.getAndPopulateOptions(\n                              $node,\n                              baseView.options,\n                              field,\n                              baseView.parentFormComponent()\n                           );\n                           this.ready();\n                        } else {\n                           $node.define(\"disabled\", true);\n                           $node.define(\n                              \"placeholder\",\n                              this.label(\"Must select item from '{0}' first.\", [\n                                 $filterValueConfig.config.label,\n                              ])\n                           );\n                        }\n\n                        // TODO: Do we need to clear selected value?\n                        // $node.setValue(\"\");\n                        $node.refresh();\n                     },\n                     false\n                  );\n               }\n\n               if (\n                  parentField &&\n                  parentFields.findIndex((e) => e.id === parentField.id) < 0\n               )\n                  parentFields.push(parentField);\n            }\n         });\n\n         if (parentFields.length && !$node.getValue()) {\n            $node.define(\"disabled\", true);\n            $node.define(\n               \"placeholder\",\n               this.label(`Must select item from '{0}' first.`, [\n                  parentFields.map((e) => e.label).join(\", \"),\n               ])\n            );\n         } else {\n            $node.define(\"disabled\", false);\n            $node.define(\"placeholder\", this.label(\"Select items\"));\n         }\n      } else {\n         $node.define(\"placeholder\", \"\");\n         $node.define(\"disabled\", true);\n      }\n\n      $node.refresh();\n\n      this.busy();\n      await field.getAndPopulateOptions(\n         // $node,\n         $formItem,\n         baseView.options,\n         field,\n         baseView.parentFormComponent()\n      );\n      this.ready();\n\n      // Add data-cy attributes\n      const dataCy = `${field.key} ${field.columnName} ${field.id} ${baseView.parent.id}`;\n      node.setAttribute(\"data-cy\", dataCy);\n\n      // Need to refresh selected values when they are custom index\n      this._onChange($formItem.getValue());\n   }\n\n   busy() {\n      const $formItem = $$(this.ids.formItem);\n\n      $formItem?.disable();\n      $formItem?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      const $formItem = $$(this.ids.formItem);\n\n      $formItem?.enable();\n      $formItem?.hideProgress?.();\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\nconst ABFieldImage = require(\"../../dataFields/ABFieldImage\");\nconst FocusableTemplate = require(\"../../../../webix_custom_components/focusableTemplate\");\n\nconst DEFAULT_HEIGHT = 80;\n\nmodule.exports = class ABViewFormCustomComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormCustom_${baseView.id}`, ids);\n   }\n\n   get new_width() {\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const formSettings = form?.settings ?? {};\n      const settings = baseView.settings ?? {};\n\n      let newWidth = formSettings.labelWidth;\n\n      if (settings.formView) newWidth += 40;\n      else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         newWidth = 0;\n\n      return newWidth;\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const form = baseView.parentFormComponent();\n      const formSettings = form?.settings ?? {};\n      const settings = field?.settings ?? baseView.settings ?? {};\n\n      const requiredClass =\n         field?.settings?.required || this.settings.required\n            ? \"webix_required\"\n            : \"\";\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"box-sizing: border-box; display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap; color: #313131;\" class=\"webix_inp_top_label ${requiredClass}\">#label#</label>`;\n         else\n            templateLabel = `<label style=\"box-sizing: border-box; width: #width#px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 8px 0 0; text-overflow:ellipsis; overflow:hidden; white-space:nowrap; color: #313131;\" class=\"${requiredClass}\">#label#</label>`;\n      }\n\n      let height = 38;\n      let width = this.new_width;\n\n      if (field instanceof ABFieldImage) {\n         if (settings.useHeight) {\n            if (formSettings.labelPosition === \"top\") {\n               height = parseInt(settings.imageHeight) || DEFAULT_HEIGHT;\n               height += 38;\n            } else {\n               height = parseInt(settings.imageHeight) || DEFAULT_HEIGHT;\n            }\n         } else if (formSettings.labelPosition === \"top\") {\n            height = DEFAULT_HEIGHT + 38;\n         } else {\n            if (DEFAULT_HEIGHT > 38) {\n               height = DEFAULT_HEIGHT;\n            }\n         }\n         width =\n            settings.useWidth && settings.imageWidth ? settings.imageWidth : 0;\n      } else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         height = DEFAULT_HEIGHT;\n\n      let template = `<div class=\"customField ${formSettings.labelPosition}\">${\n         formSettings.labelPosition == \"top\" ? \"\" : templateLabel\n      }#template#</div>`\n         .replace(/#width#/g, formSettings.labelWidth)\n         .replace(/#label#/g, field.label)\n         .replace(\n            /#template#/g,\n            field\n               ?.columnHeader({\n                  width: width,\n                  height: height,\n                  editable: true,\n               })\n               .template({}) ?? \"\"\n         );\n\n      if (settings.useWidth == 0) {\n         template = template.replace(\n            /\"ab-image-data-field\" style=\"float: left; width: 100%/g,\n            '\"ab-image-data-field\" style=\"float: left; width: calc(100% - ' +\n               formSettings.labelWidth +\n               \"px)\"\n         );\n      }\n\n      return super.ui({\n         view: \"forminput\",\n         labelWidth: 0,\n         paddingY: 0,\n         paddingX: 0,\n         css: \"ab-custom-field\",\n         // label:  field.label,\n         // labelPosition: settings.labelPosition, // webix.forminput does not have .labelPosition T T\n         // labelWidth: settings.labelWidth,\n         body: {\n            view: new FocusableTemplate(this.AB._App).key,\n            css: \"customFieldCls\",\n            borderless: true,\n            template: template,\n            height: height,\n            onClick: {\n               customField: (evt, e, trg) => {\n                  if (settings.disable === 1) return;\n\n                  let rowData = {};\n\n                  const formView =\n                     this?.parentFormComponent?.() ||\n                     this.view?.parentFormComponent?.();\n\n                  if (formView) {\n                     const dv = formView.datacollection;\n                     if (dv) rowData = dv.getCursor() || {};\n                  }\n\n                  // var node = $$(ids.formItem).$view;\n                  let node = $$(trg).getParentView().$view;\n                  field?.customEdit(\n                     rowData,\n                     this.AB_App,\n                     node,\n                     this.ids.formItem,\n                     evt\n                  );\n               },\n            },\n         },\n      });\n   }\n\n   onShow() {\n      const ids = this.ids;\n      const $formItem = $$(ids.formItem);\n\n      if (!$formItem) return;\n\n      const baseView = this.view;\n      const field = baseView.field(),\n         rowData = {},\n         node = $formItem.$view;\n\n      // Add data-cy attributes\n      const dataCy = `${baseView.key} ${field.key} ${field.columnName} ${baseView.id} ${baseView.parent.id}`;\n      node.setAttribute(\"data-cy\", dataCy);\n\n      const options = {\n         formId: ids.formItem,\n         editable: baseView.settings.disable === 1 ? false : true,\n      };\n\n      if (field instanceof ABFieldImage) {\n         options.height = field.settings.useHeight\n            ? parseInt(field.settings.imageHeight) || DEFAULT_HEIGHT\n            : DEFAULT_HEIGHT;\n         options.width = field.settings.useWidth\n            ? parseInt(field.settings.imageWidth) || 0\n            : 0;\n      }\n\n      field.customDisplay(rowData, this.AB._App, node, options);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      const $formItem = $$(this.ids.formItem);\n\n      return field.getValue($formItem, rowData);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormDatepickerComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormDatepicker_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const self = this;\n      const field = this.view.field();\n\n      const _ui = {\n         view: \"datepicker\",\n         suggest: {\n            body: {\n               view:\n                  this.AB.Account?._config?.languageCode == \"th\"\n                     ? \"thaicalendar\"\n                     : \"calendar\",\n               on: {\n                  onAfterDateSelect: function (date) {\n                     this.getParentView().setMasterValue({\n                        value: date,\n                     });\n                  },\n                  onTodaySet: function (date) {\n                     this.getParentView().setMasterValue({\n                        value: date,\n                     });\n                  },\n                  onDateClear: function (date) {\n                     this.getParentView().setMasterValue({\n                        value: date,\n                     });\n                  },\n               },\n            },\n            on: {\n               onShow: function () {\n                  const text = this.getMasterValue();\n                  const field = self.view.field();\n                  if (!text || !field) return true;\n\n                  const vals = {};\n                  vals[field.columnName] = text;\n                  const date = self.getValue(vals);\n\n                  const $calendar = this.getChildViews()[0];\n                  $calendar.setValue(date);\n               },\n            },\n         },\n      };\n\n      if (!field) return _ui;\n\n      // Ignore date - Only time picker\n      if (field.settings?.dateFormat === 1) _ui.type = \"time\";\n\n      // Date & Time picker\n      if (field.key === \"datetime\" && field.settings?.timeFormat !== 1)\n         _ui.timepicker = true;\n\n      // allows entering characters in datepicker input, false by default\n      _ui.editable = true;\n\n      // default value\n      if (_ui.value && !(_ui.value instanceof Date))\n         _ui.value = new Date(_ui.value);\n\n      // if we have webix locale set, will use the date format form there.\n      if (field !== null && !window.webixLocale) _ui.format = field.getFormat();\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      const text = rowData[field.columnName];\n      if (!field || !text) return null;\n\n      const date = this.AB.Webix.Date.strToDate(field.getFormat())(text);\n\n      if (this.AB.Account?._config?.languageCode == \"th\")\n         date.setFullYear(date.getFullYear() - 543);\n\n      return date;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewFormItemComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormItem_${baseView.id}`,\n         Object.assign({ formItem: \"\" }, ids)\n      );\n   }\n\n   ui(uiFormItemComponent = {}) {\n      // setup 'label' of the element\n      const baseView = this.view;\n      const form = baseView.parentFormComponent(),\n         field = baseView.field?.() || null,\n         label = \"\";\n      const settings = form?.settings || {};\n      const _uiFormItem = {\n         id: this.ids.formItem,\n         labelPosition: settings.labelPosition,\n         labelWidth: settings.labelWidth,\n         label,\n      };\n\n      if (field) {\n         _uiFormItem.name = field.columnName;\n\n         // default value\n         const data = {};\n\n         field.defaultValue(data);\n\n         if (data[field.columnName]) _uiFormItem.value = data[field.columnName];\n\n         if (settings.showLabel) _uiFormItem.label = field.label;\n\n         if (field.settings.required || baseView.settings?.required)\n            _uiFormItem.required = 1;\n\n         if (baseView.settings?.disable === 1) _uiFormItem.disabled = true;\n\n         // add data-cy to form element for better testing code\n         _uiFormItem.on = {\n            onAfterRender() {\n               if (this.getList) {\n                  const popup = this.getPopup();\n\n                  if (!popup) return;\n\n                  this.getList().data.each((option) => {\n                     if (!option) return;\n\n                     // our option.ids are based on builder input and can include the ' character\n                     const node = popup.$view.querySelector(\n                        `[webix_l_id='${(option?.id ?? \"\")\n                           .toString()\n                           .replaceAll(\"'\", \"\\\\'\")}']`\n                     );\n\n                     if (!node) return;\n\n                     node.setAttribute(\n                        \"data-cy\",\n                        `${field.key} options ${option.id} ${field.id} ${\n                           form?.id || \"nf\"\n                        }`\n                     );\n                  });\n               }\n\n               this.getInputNode?.().setAttribute?.(\n                  \"data-cy\",\n                  `${field.key} ${field.columnName} ${field.id} ${\n                     form?.id || \"nf\"\n                  }`\n               );\n            },\n         };\n\n         // this may be needed if we want to format data at this point\n         // if (field.format) data = field.format(data);\n\n         _uiFormItem.validate = (val, data, colName) => {\n            const validator = this.AB.Validation.validator();\n\n            field.isValidData(data, validator);\n\n            return validator.pass();\n         };\n      }\n\n      const _ui = super.ui([\n         Object.assign({}, _uiFormItem, uiFormItemComponent),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormJsonComponent extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormJson_${baseView.id}`, ids);\n      if (this.settings.type == \"filter\") {\n         this.rowFilter = this.AB.filterComplexNew(\n            `${baseView.id}_filterComplex`,\n            {\n               isSaveHidden: true,\n               height: 300,\n               borderless: false,\n               showObjectName: true,\n            }\n         );\n      }\n   }\n\n   getFilterField(instance) {\n      if (\n         instance?.settings?.filterField &&\n         instance?.view?.parent?.viewComponents\n      ) {\n         let filterField = \"\";\n         for (const [key, value] of Object.entries(\n            instance.view.parent.viewComponents\n         )) {\n            if (value.settings.fieldId == instance.settings.filterField) {\n               filterField = value;\n            }\n         }\n\n         if (filterField?.ids?.formItem) {\n            return filterField.ids.formItem;\n         } else {\n            return \"\";\n         }\n      } else {\n         return \"\";\n      }\n   }\n\n   get getSystemObjects() {\n      // get list of all objects in the app\n      let objects = this.AB.objects();\n      // reformat objects into simple array for Webix multicombo\n      // if you do not the data causes a maximum stack error\n      let objectsArray = [];\n      objects.forEach((obj) => {\n         objectsArray.push({ id: obj.id, label: obj.label });\n      });\n      // return the simple array\n      return objectsArray;\n   }\n\n   refreshFilter(values) {\n      if (values) {\n         let fieldDefs = [];\n         values.forEach((obj) => {\n            let object = this.AB.objectByID(obj);\n            let fields = object.fields();\n            if (fields.length) {\n               fields.forEach((f) => {\n                  fieldDefs.push(f);\n               });\n            }\n         });\n         this.rowFilter.fieldsLoad(fieldDefs);\n         if ($$(this.ids.formItem).config.value)\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n      } else {\n         this.rowFilter.fieldsLoad([]);\n         if ($$(this.ids.formItem).config.value)\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n      }\n   }\n\n   getValue() {\n      return this.rowFilter.getValue();\n   }\n\n   setValue(formVals) {\n      $$(this.ids.formItem).config.value = formVals;\n   }\n\n   ui() {\n      const _ui = {};\n\n      switch (\n         this.settings.type ||\n         this.view.settings.type ||\n         this.view.constructor.defaultValues().type\n      ) {\n         case \"string\":\n            _ui.view = \"textarea\";\n            _ui.disabled = true;\n            _ui.height = 200;\n            _ui.format = {\n               parse: function (parsed) {\n                  try {\n                     parsed = JSON.parse(parsed);\n                  } catch (err) {\n                     // already parsed\n                  }\n                  return parsed;\n               },\n               edit: function (stringify) {\n                  try {\n                     stringify = JSON.stringify(stringify);\n                  } catch (err) {\n                     // already a string\n                  }\n                  return stringify;\n               },\n            };\n            break;\n         case \"systemObject\":\n            _ui.view = \"multicombo\";\n            _ui.placeholder = this.label(\"Select one or more system objects\");\n            _ui.button = false;\n            _ui.stringResult = false;\n            _ui.suggest = {\n               selectAll: true,\n               body: {\n                  data: this.getSystemObjects,\n                  template: webix.template(\"#label#\"),\n               },\n            };\n            break;\n         case \"filter\":\n            _ui.view = \"forminput\";\n            _ui.css = \"ab-custom-field\";\n            _ui.body = this.rowFilter.ui;\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   init() {\n      // if (this.settings.type == \"filter\") {\n      //    this.rowFilter.init({ showObjectName: true });\n      // }\n   }\n\n   onShow() {\n      const _ui = this.ui();\n      if (this?.settings?.type == \"filter\") {\n         let filterField = this.getFilterField(this);\n         if (!$$(filterField)) return;\n         $$(filterField).detachEvent(\"onChange\");\n         $$(filterField).attachEvent(\"onChange\", (values) => {\n            this.refreshFilter(values);\n         });\n         this.rowFilter.init({ showObjectName: true });\n         this.rowFilter.on(\"changed\", (val) => {\n            this.setValue(val);\n         });\n         if ($$(this.ids.formItem).config.value) {\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n         } else {\n            this.rowFilter.setValue(\"\");\n         }\n      }\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\nconst NumberTextInput = require(\"../../../../webix_custom_components/numbertext\");\n\nmodule.exports = class ABViewFormNumberComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormNumber_${baseView.id}`, ids);\n\n      this._numberTextInputKey = null;\n   }\n\n   get numberTextInputKey() {\n      return (this._numberTextInputKey =\n         this._numberTextInputKey || new NumberTextInput(this.AB._App).key);\n   }\n\n   ui() {\n      return super.ui({\n         view: this.settings.isStepper ? \"counter\" : this.numberTextInputKey,\n         type: \"number\",\n         validate: (val) => !isNaN(val * 1),\n      });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormReadonlyComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormReadonly_${baseView.id}`,\n         Object.assign(\n            {\n               template: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      const _ui = {\n         view: \"forminput\",\n         labelWidth: 0,\n         paddingY: 0,\n         paddingX: 0,\n         readonly: true,\n         css: \"ab-readonly-field\",\n         // name: component.ui.name,\n         // label:  field.label,\n         // labelPosition: settings.labelPosition, // webix.forminput does not have .labelPosition T T\n         // labelWidth: settings.labelWidth,\n         body: {\n            id: this.ids.template,\n            view: \"label\",\n            borderless: true,\n            css: { \"background-color\": \"#fff\" },\n            label: \"\",\n         },\n      };\n\n      const settings = baseView.parentFormComponent().settings || {};\n\n      if (settings.showLabel == true && settings.labelPosition == \"top\") {\n         _ui.body.height = 80;\n      } else if (field.settings.useHeight) {\n         _ui.body.height = parseInt(field.settings.imageHeight) || 38;\n      } else _ui.body.height = 38;\n\n      return super.ui(_ui);\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $formItem = $$(this.ids.formItem);\n      if (!$formItem) return;\n\n      const $form = $formItem.getFormView();\n      const rowData = $form?.getValues() ?? {};\n\n      this.refresh(rowData);\n      $form?.attachEvent(\"onChange\", (newv, oldv) => {\n         const rowData = $form?.getValues() ?? {};\n\n         this.refresh(rowData);\n      });\n   }\n\n   onShow() {\n      const $formItem = $$(this.ids.formItem);\n      if (!$formItem) return;\n\n      const $form = $formItem.getFormView();\n      const rowData = $form?.getValues() ?? {};\n\n      this.refresh(rowData);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      if (!field) return null;\n\n      return rowData[field.columnName];\n   }\n\n   refresh(rowData) {\n      const baseView = this.view;\n      const form = baseView.parentFormComponent(),\n         field = baseView.field();\n\n      const formSettings = form.settings || {};\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"webix_inp_top_label\">${field.label}</label>`;\n         else\n            templateLabel = `<label style=\"width: ${formSettings.labelWidth}px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\">${field.label}</label>`;\n      }\n\n      let newWidth = formSettings.labelWidth;\n\n      if (this.settings.formView) newWidth += 40;\n      else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         newWidth = 0;\n\n      const template =\n         `<div class=\"readonlyField\">${templateLabel}#template#</div>`.replace(\n            /#template#/g,\n            field\n               .columnHeader({\n                  width: newWidth,\n                  editable: true,\n               })\n               .template(rowData)\n         );\n\n      // Re-build template element\n      $$(this.ids.template)?.setHTML(template);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormSelectMultipleComponentComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormSelectMultiple_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field(),\n         settings = this.settings;\n      const options = [];\n\n      if (field?.key === \"user\") options.push(...field.getUsers());\n      else if (field)\n         options.push(...(field.settings.options ?? settings.options ?? []));\n\n      const ids = this.ids;\n      const _ui = {\n         id: ids.formItem,\n         view: settings.type || baseView.constructor.defaultValues().type,\n         options: options.map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n               hex: opt.hex,\n            };\n         }),\n      };\n\n      switch (_ui.view) {\n         case \"multicombo\":\n            _ui.tagMode = false;\n            _ui.css = \"hideWebixMulticomboTag\";\n            _ui.tagTemplate = (values) => {\n               const selectedOptions = [];\n               const $formItem = $$(ids.formItem) ?? $$(_ui.id);\n\n               values.forEach((val) => {\n                  selectedOptions.push($formItem.getList().getItem(val));\n               });\n\n               let vals = selectedOptions;\n\n               if (field.getSelectedOptions)\n                  vals = field.getSelectedOptions(field, selectedOptions);\n\n               const items = [];\n\n               vals.forEach((val) => {\n                  let hasCustomColor = \"\";\n                  let optionHex = \"\";\n\n                  if (field.settings.hasColors && val.hex) {\n                     hasCustomColor = \"hascustomcolor\";\n                     optionHex = `background: ${val.hex};`;\n                  }\n\n                  const text = val.text ? val.text : val.value;\n\n                  items.push(\n                     `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${val.id}\"><span>${text}</span><span class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span></span>`\n                  );\n               });\n\n               return items.join(\"\");\n            };\n\n            break;\n\n         case \"checkbox\":\n            // radio element could not be empty options\n            _ui.options.push({\n               id: \"temp\",\n               value: this.label(\"Option\"),\n            });\n\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field(),\n         $formItem = $$(this.ids.formItem);\n\n      return field.getValue($formItem, rowData);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormSelectSingleComponentComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormSelectSingle_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field(),\n         settings = baseView.settings;\n      const options = [];\n\n      if (field?.key === \"user\") options.push(...field.getUsers());\n      else if (field)\n         options.push(...(field.settings.options ?? settings.options ?? []));\n      else options.push(...(settings.options ?? []));\n\n      const _ui = {\n         view: settings.type || baseView.constructor.defaultValues().type,\n      };\n\n      if (field?.settings.hasColors) {\n         _ui.css = \"combowithcolors\";\n         _ui.options = {\n            view: \"suggest\",\n            body: {\n               view: \"list\",\n               data: options.map((opt) => {\n                  return {\n                     id: opt.id,\n                     value: opt.text || opt.value,\n                     hex: field.settings.hasColors ? opt.hex : \"\",\n                  };\n               }),\n               template: function (value) {\n                  const items = [];\n\n                  let hasCustomColor = \"\";\n                  let optionHex = \"\";\n\n                  if (value.hex) {\n                     hasCustomColor = \"hascustomcolor\";\n                     optionHex = `background: ${value.hex};`;\n                  }\n\n                  items.push(\n                     `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${value.id}\"><span>${value.value}</span></span>`\n                  );\n\n                  return items.join(\"\");\n               },\n            },\n         };\n      } else\n         _ui.options = options.map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text || opt.value,\n            };\n         });\n\n      // radio element could not be empty options\n      if (_ui.view === \"radio\" && _ui.options.length < 1)\n         _ui.options.push({\n            id: \"temp\",\n            value: this.label(\"Option\"),\n         });\n\n      return super.ui(_ui);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormTextboxComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormTextbox_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const _ui = {};\n\n      switch (\n         this.settings.type ||\n         this.view.settings.type ||\n         this.view.constructor.defaultValues().type\n      ) {\n         case \"single\":\n            _ui.view = \"text\";\n            break;\n         case \"multiple\":\n            _ui.view = \"textarea\";\n            _ui.height = 200;\n            break;\n         case \"rich\":\n            _ui.view = \"forminput\";\n            _ui.height = 200;\n            _ui.css = \"ab-rich-text\";\n            _ui.body = {\n               view: \"tinymce-editor\",\n               value: \"\",\n               cdn: \"/js/webix/extras/tinymce\",\n               config: {\n                  plugins: \"link\",\n                  menubar: \"format edit\",\n                  toolbar:\n                     \"undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | fontsizeselect | link\",\n               },\n            };\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   onShow() {\n      const settings = this.view.settings ?? {};\n      const _ui = this.ui();\n      const _uiFormItem = _ui.rows[0];\n      let $formItem = $$(_uiFormItem.id);\n\n      // WORKAROUND : to fix breaks TinyMCE when switch pages/tabs\n      // https://forum.webix.com/discussion/6772/switching-tabs-breaks-tinymce\n      if (settings.type === \"rich\" && $formItem) {\n         // recreate rich editor\n         $formItem = this.AB.Webix.ui(_uiFormItem, $formItem);\n\n         // Add dataCy to TinyMCE text editor\n         const baseView = this.view;\n\n         $formItem\n            .getChildViews()[0]\n            .getEditor(true)\n            .then((editor) => {\n               const dataCy = `${baseView.key} rich ${_uiFormItem.name} ${\n                  baseView.id ?? \"\"\n               } ${baseView.parent?.id ?? \"\"}`;\n\n               editor.contentAreaContainer.setAttribute(\"data-cy\", dataCy);\n            });\n      }\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormTreeComponent extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormTree_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      const _ui = {};\n\n      // this field may be deleted\n      if (!field) return super.ui(_ui);\n\n      const formSettings = baseView.parentFormComponent().settings || {};\n\n      const requiredClass =\n         field.settings.required === 1 ? \"webix_required\" : \"\";\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"webix_inp_top_label ${requiredClass}\">#label#</label>`;\n         else\n            templateLabel = `<label style=\"width: #width#px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"${requiredClass}\">#label#</label>`;\n      }\n\n      let newWidth = formSettings.labelWidth;\n\n      if (this.settings.formView) newWidth += 40;\n\n      const template = `${templateLabel}#template#`\n         .replace(/#width#/g, formSettings.labelWidth)\n         .replace(/#label#/g, field.label)\n         .replace(\n            /#template#/g,\n            field.columnHeader({\n               width: newWidth,\n            }).template\n         );\n\n      _ui.view = \"template\";\n      _ui.css = \"webix_el_box\";\n      _ui.height =\n         field.settings.useHeight === 1\n            ? parseInt(field.settings.imageHeight)\n            : 38;\n      _ui.borderless = true;\n\n      _ui.template = `<div class=\"customField\">${template}</div>`;\n\n      _ui.onClick = {\n         customField: (id, e, trg) => {\n            const rowData = {},\n               node = $$(this.ids.formItem).$view;\n\n            rowData[field.columnName] = this.getValue();\n            field.customEdit(rowData, this.AB._App, node, this);\n         },\n      };\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      let vals = $$(this.ids.formItem).getValues();\n\n      // Pass empty string if the returned values is empty array\n      if (Array.isArray(vals) && vals.length === 0) vals = \"\";\n\n      return vals;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewImageComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewImage_${baseView.id}`,\n         Object.assign({ image: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _ui = super.ui([\n         {\n            cols: [\n               {\n                  id: this.ids.image,\n                  view: \"template\",\n                  template: \"\",\n                  height: settings.height,\n                  width: settings.width,\n               },\n               {},\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $image = $$(this.ids.image);\n      if (!$image) return;\n\n      const settings = this.settings;\n\n      if (settings.filename)\n         $image.define(\n            \"template\",\n            `<img src=\"/file/${settings.filename}\" height=\"${settings.height}\" width=\"${settings.width}\">`\n         );\n      else $image.define(\"template\", \"\");\n\n      $image.refresh();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABFormSidePanel = require(\"../ABViewKanbanFormSidePanel\");\n\nmodule.exports = class ABViewKanbanComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewKanBan_${baseView.id}`,\n         Object.assign(\n            {\n               kanbanView: \"\",\n\n               kanban: \"\",\n               resizer: \"\",\n               formSidePanel: \"\",\n            },\n            ids\n         )\n      );\n\n      this.FormSide = new ABFormSidePanel(\n         this,\n         this.ids.formSidePanel,\n         this.settings.editFields\n      );\n\n      this.CurrentVerticalField = null;\n      this.CurrentHorizontalField = null;\n      this.CurrentOwnerField = null;\n\n      this.TextTemplate = baseView.TextTemplate;\n\n      this._updatingOwnerRowId = null;\n      this._ABFieldConnect = null;\n      this._ABFieldUser = null;\n      this._ABFieldList = null;\n   }\n\n   get ABFieldConnect() {\n      return (this._ABFieldConnect =\n         this._ABFieldConnect ||\n         this.AB.Class.ABFieldManager.fieldByKey(\"connectObject\"));\n   }\n\n   get ABFieldUser() {\n      return (this._ABFieldUser =\n         this._ABFieldUser || this.AB.Class.ABFieldManager.fieldByKey(\"user\"));\n   }\n\n   get ABFieldList() {\n      return (this._ABFieldList =\n         this._ABFieldList || this.AB.Class.ABFieldManager.fieldByKey(\"list\"));\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      this.linkPage = this.view.linkPageHelper.component();\n\n      const _ui = super.ui([\n         {\n            id: ids.kanbanView,\n            cols: [\n               {\n                  id: ids.kanban,\n                  view: \"kanban\",\n                  cols: [],\n                  userList: {\n                     view: \"menu\",\n                     // yCount: 8,\n                     // scroll: false,\n                     template: '<i class=\"fa fa-user\"></i> #value#',\n                     width: 150,\n                     on: {\n                        onSelectChange: function () {\n                           // get this row id from onAvatarClick event\n                           if (!self._updatingOwnerRowId) return;\n\n                           const userId = this.getSelectedId(false);\n                           if (!userId) return;\n\n                           self.updateOwner(self._updatingOwnerRowId, userId);\n                        },\n                     },\n                  },\n                  editor: false, // we use side bar\n                  users: [],\n                  tags: [],\n                  data: [],\n                  on: {\n                     onListAfterSelect: (itemId, list) => {\n                        this.CurrentDatacollection?.setCursor(itemId);\n                        this.emit(\"select\", itemId);\n\n                        // link pages events\n                        const editPage = this.settings.editPage;\n                        if (editPage)\n                           this.linkPage.changePage(editPage, itemId);\n\n                        const detailsPage = this.settings.detailsPage;\n                        if (detailsPage)\n                           this.linkPage.changePage(detailsPage, itemId);\n                     },\n                     onAfterStatusChange: (rowId, status /*, list */) => {\n                        this.updateStatus(rowId, status);\n                     },\n                     onAvatarClick: (rowId /*, ev, node, list */) => {\n                        // keep this row id for update owner data in .userList\n                        this._updatingOwnerRowId = rowId;\n                     },\n                  },\n               },\n               {\n                  id: ids.resizer,\n                  view: \"resizer\",\n                  css: \"bg_gray\",\n                  width: 11,\n                  hidden: true,\n               },\n               this.FormSide.ui(),\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const abWebix = this.AB.Webix;\n\n      if (this.$kb) abWebix.extend(this.$kb, abWebix.ProgressBar);\n\n      this.FormSide.init(AB);\n      this.FormSide.on(\"add\", (newVals) => {\n         this.saveData(newVals);\n      });\n      this.FormSide.on(\"update\", (updateVals) => {\n         this.saveData(updateVals);\n      });\n\n      let dc = this.view.datacollection;\n      if (dc) this.datacollectionLoad(dc);\n\n      this.linkPage.init({\n         view: this.view,\n         datacollection: dc,\n      });\n\n      this.show();\n   }\n\n   get $kb() {\n      return (this._kb = this._kb || $$(this.ids.kanban));\n   }\n\n   kanbanListTemplate() {\n      return {\n         icons: [\n            // { icon: \"mdi mdi-comment\", show: function (obj) { return !!obj.comments }, template: \"#comments.length#\" },\n            {\n               icon: \"fa fa-trash-o\",\n               click: (rowId /*, e */) => {\n                  this.removeCard(rowId);\n               },\n            },\n         ],\n         // avatar template\n         templateAvatar: (obj) => {\n            if (\n               this.CurrentOwnerField &&\n               obj[this.CurrentOwnerField.columnName]\n            )\n               return this.CurrentOwnerField.format(obj);\n            else return \"<span class='webix_icon fa fa-user'></span>\";\n         },\n         // template for item body\n         // show item image and text\n         templateBody: (data) => {\n            // if (!this.settings.template)\n            if (!this.TextTemplate.text)\n               return this.CurrentObject?.displayData(data);\n\n            // return our default text template\n            return this.TextTemplate.displayText(data);\n         },\n      };\n   }\n\n   /**\n    * @function hide()\n    *\n    * hide this component.\n    */\n   hide() {\n      $$(this.ids.kanbanView)?.hide();\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    */\n   async show() {\n      const ids = this.ids;\n\n      $$(ids.kanbanView)?.show();\n\n      this.FormSide.hide();\n\n      $$(ids.resizer)?.hide();\n\n      var CurrentObject = this.CurrentObject;\n      if (!CurrentObject) {\n         CurrentObject = this.datacollection?.datasource;\n      }\n      if (!CurrentObject) return;\n\n      // Get vertical grouping field and populate to kanban list\n      // NOTE: this field should be the select list type\n      const CurrentVerticalField = CurrentObject.fieldByID(\n         this.settings.verticalGroupingField\n      );\n      if (!CurrentVerticalField) return;\n\n      this.CurrentVerticalField = CurrentVerticalField;\n\n      let horizontalOptions = [];\n\n      const CurrentHorizontalField = CurrentObject.fieldByID(\n         this.settings.horizontalGroupingField\n      );\n\n      this.CurrentHorizontalField = CurrentHorizontalField;\n\n      if (\n         CurrentHorizontalField &&\n         CurrentHorizontalField instanceof this.ABFieldConnect\n      )\n         // Pull horizontal options\n         horizontalOptions = await CurrentHorizontalField.getOptions();\n\n      // Option format -  { id: \"1543563751920\", text: \"Normal\", hex: \"#4CAF50\" }\n      const verticalOptions = (CurrentVerticalField.settings.options || []).map(\n         (opt) => {\n            // Vertical & Horizontal fields\n            if (CurrentVerticalField && CurrentHorizontalField) {\n               let rows = [],\n                  // [{\n                  //    id: '',\n                  //    text: ''\n                  // }]\n                  horizontalVals = [];\n\n               // pull options of the Horizontal field\n               if (CurrentHorizontalField instanceof this.ABFieldList) {\n                  // make a copy of the settings.\n                  horizontalVals = (\n                     CurrentHorizontalField.settings.options || []\n                  ).map((o) => o);\n               } else if (CurrentHorizontalField instanceof this.ABFieldUser) {\n                  horizontalVals = CurrentHorizontalField.getUsers().map(\n                     (u) => {\n                        return {\n                           id: u.id,\n                           text: u.text || u.value,\n                        };\n                     }\n                  );\n               } else if (CurrentHorizontalField instanceof this.ABFieldConnect)\n                  horizontalVals = horizontalOptions.map(({ id, text }) => ({\n                     id,\n                     text,\n                  }));\n\n               horizontalVals.push({\n                  id: null,\n                  text: this.label(\"Other\"),\n               });\n\n               horizontalVals.forEach((val) => {\n                  const statusOps = {};\n\n                  statusOps[CurrentVerticalField.columnName] = opt.id;\n                  statusOps[CurrentHorizontalField.columnName] = val.id;\n\n                  // Header\n                  rows.push({\n                     template: val.text,\n                     height: 20,\n                     css: \"progress_header\",\n                  });\n\n                  // Kanban list\n                  rows.push({\n                     view: \"kanbanlist\",\n                     status: statusOps,\n                     type: this.kanbanListTemplate(),\n                  });\n               });\n\n               return {\n                  header: opt.text,\n                  body: {\n                     margin: 0,\n                     rows: rows,\n                  },\n               };\n            }\n            // Vertical field only\n            else if (CurrentVerticalField) {\n               const statusOps = {};\n\n               statusOps[CurrentVerticalField.columnName] = opt.id;\n\n               return {\n                  header: opt.text,\n                  body: {\n                     view: \"kanbanlist\",\n                     status: statusOps,\n                     type: this.kanbanListTemplate(),\n                  },\n               };\n            }\n         }\n      );\n\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      // Rebuild kanban that contains options\n      // NOTE: webix kanban does not support dynamic vertical list\n      abWebix.ui(verticalOptions, $$(ids.kanban));\n      $$(ids.kanban).reconstruct();\n\n      // Owner field\n      const CurrentOwnerField = CurrentObject.fieldByID(\n         this.settings.ownerField\n      );\n\n      this.CurrentOwnerField = CurrentOwnerField;\n\n      if (CurrentOwnerField) {\n         const $menuUser = $$(ids.kanban).getUserList();\n\n         $menuUser.clearAll();\n\n         if (CurrentOwnerField instanceof this.ABFieldUser) {\n            const users = ab.Account.userList().map((u) => {\n               return {\n                  id: u.username,\n                  value: u.username,\n               };\n            });\n\n            $menuUser.parse(users);\n         } else if (CurrentOwnerField instanceof this.ABFieldConnect) {\n            const options = await CurrentOwnerField.getOptions();\n\n            try {\n               $menuUser.parse(\n                  options.map((opt) => {\n                     return {\n                        id: opt.id,\n                        value: opt.text,\n                     };\n                  })\n               );\n            } catch (e) {\n               // TODO: remove this.  Trying to catch a random webix error:\n               // Cannot read properties of null (reading 'driver')\n               console.error(e);\n               console.warn(options);\n            }\n         }\n      }\n   }\n\n   busy() {\n      this.$kb?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      this.$kb?.hideProgress?.();\n   }\n\n   objectLoad(object) {\n      super.objectLoad(object);\n\n      this.TextTemplate.objectLoad(object);\n      this.FormSide.objectLoad(object);\n   }\n\n   /**\n    * @method datacollectionLoad\n    *\n    * @param datacollection {ABDatacollection}\n    */\n   datacollectionLoad(datacollection) {\n      super.datacollectionLoad(datacollection);\n\n      const DC = this.CurrentDatacollection || datacollection;\n\n      if (DC) {\n         DC.bind(this.$kb);\n\n         const obj = DC.datasource;\n\n         if (obj) this.objectLoad(obj);\n\n         return;\n      }\n\n      this.$kb.unbind();\n   }\n\n   async updateStatus(rowId, status) {\n      if (!this.CurrentVerticalField) return;\n\n      // Show loading cursor\n      this.busy();\n\n      let patch = {};\n\n      // update multi-values\n      if (status instanceof Object) patch = status;\n      // update single value\n      else patch[this.CurrentVerticalField.columnName] = status;\n\n      // update empty value\n      let needRefresh = false;\n\n      for (const key in patch)\n         if (!patch[key]) {\n            patch[key] = \"\";\n\n            // WORKAROUND: if update data is empty, then it will need to refresh\n            // the kanban after update\n            needRefresh = true;\n         }\n\n      try {\n         await this.CurrentObject?.model().update(rowId, patch);\n\n         this.ready();\n\n         if (needRefresh) this.show();\n\n         // update form data\n         if (this.FormSide.isVisible()) {\n            const data = $$(this.ids.kanban).getItem(rowId);\n\n            this.FormSide.refresh(data);\n         }\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABViewKanban:updateStatus(): Error saving item:\",\n            rowId,\n            patch,\n         });\n      }\n   }\n\n   async updateOwner(rowId, val) {\n      if (!this.CurrentOwnerField) return;\n\n      // Show loading cursor\n      this.busy();\n\n      const patch = {};\n\n      patch[this.CurrentOwnerField.columnName] = val;\n\n      try {\n         const updatedRow = await this.CurrentObject?.model().update(\n            rowId,\n            patch\n         );\n\n         // update card\n         this.$kb?.updateItem(rowId, updatedRow);\n\n         // update form data\n         if (this.FormSide.isVisible()) {\n            const data = this.$kb.getItem(rowId);\n\n            this.FormSide.refresh(data);\n         }\n\n         this.ready();\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABViewKanban:updateOwner(): Error saving item:\",\n            rowId,\n            val,\n         });\n\n         this.ready();\n      }\n   }\n\n   saveData(data) {\n      // update\n      if (data.id && this.$kb.exists(data.id))\n         this.$kb.updateItem(data.id, data);\n      // insert\n      else this.$kb.add(data);\n   }\n\n   unselect() {\n      if (this.$kb)\n         this.$kb.eachList((list /*, status*/) => {\n            list?.unselect?.();\n         });\n   }\n\n   addCard() {\n      this.unselect();\n\n      // show the side form\n      this.FormSide.show();\n      $$(this.ids.resizer).show();\n   }\n\n   async removeCard(rowId) {\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      abWebix.confirm({\n         title: this.label(\"Remove card\"),\n         text: this.label(\"Do you want to delete this card?\"),\n         callback: async (result) => {\n            if (!result) return;\n\n            this.busy();\n\n            try {\n               const response = await this.CurrentObject?.model().delete(rowId);\n\n               if (response.numRows > 0) {\n                  this.$kb.remove(rowId);\n               } else {\n                  abWebix.alert({\n                     text: this.label(\n                        \"No rows were effected. This does not seem right.\"\n                     ),\n                  });\n               }\n            } catch (err) {\n               ab.notify.developer(err, {\n                  message: \"ABViewKanban:removeCard(): Error deleting item:\",\n                  rowId,\n               });\n            }\n\n            this.ready();\n         },\n      });\n   }\n\n   /**\n    * @method setFields()\n    * Save the current view options.\n    * @param options - {\n    *       verticalGrouping:    {ABField} - required\n    *       horizontalGrouping:  {ABField} - optional\n    *       ownerField:          {ABField} - optional\n    * }\n    */\n   setFields(options) {\n      this.CurrentVerticalField = options.verticalGrouping;\n      this.CurrentHorizontalField = options.horizontalGrouping;\n      this.CurrentOwnerField = options.ownerField;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewLabelComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewLabel_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n\n      const _ui = super.ui([\n         this.uiFormatting({\n            view: \"label\",\n            // css: 'ab-component-header ab-ellipses-text',\n            label: baseView.text || \"*\",\n            align: this.settings.alignment,\n            type: {\n               height: \"auto\",\n            },\n         }),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   /**\n    * @method uiFormatting\n    * a common routine to properly update the displayed label\n    * UI with the css formatting for the given .settings\n    * @param {obj} _ui the current webix.ui definition\n    * @return {obj} a properly formatted webix.ui definition\n    */\n   uiFormatting(ui) {\n      // add different css settings based upon it's format\n      // type.\n      switch (parseInt(this.settings.format)) {\n         // normal\n         case 0:\n            ui.css = \"ab-component-label ab-ellipses-text\";\n            break;\n\n         // title\n         case 1:\n            ui.css = \"ab-component-header ab-ellipses-text\";\n            break;\n\n         // description\n         case 2:\n            ui.css = \"ab-component-description ab-ellipses-text\";\n            break;\n      }\n\n      return ui;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewLayoutComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewLayout_${baseView.id}`, ids);\n\n      const viewComponents = this.viewComponents ?? {}; // { viewId: viewComponent, ..., viewIdn: viewComponent }\n\n      baseView.views().forEach((v) => {\n         viewComponents[v.id] = v.component();\n      });\n\n      this.viewComponents = viewComponents;\n   }\n\n   ui() {\n      const viewComponents = this.viewComponents;\n      const uiComponents = Object.keys(viewComponents)\n         .map((vId) => viewComponents[vId].ui())\n         .filter((ui) => ui);\n\n      if (uiComponents.length == 0) {\n         uiComponents.push({});\n         uiComponents.push({\n            view: \"label\",\n            label: this.label(\"no content\"),\n         });\n         uiComponents.push({});\n      }\n\n      const _ui = super.ui([\n         {\n            view: \"layout\",\n            cols: uiComponents,\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB);\n\n      const baseView = this.view;\n\n      // make sure each of our child views get .init() called\n      baseView.views().forEach((v) => {\n         const component = this.viewComponents[v.id];\n\n         // initial sub-component\n         component?.init(AB, accessLevel);\n\n         // Trigger 'changePage' event to parent\n         baseView.eventAdd({\n            emitter: v,\n            eventName: \"changePage\",\n            listener: (pageId) => {\n               baseView.changePage(pageId);\n            },\n         });\n      });\n   }\n\n   onShow() {\n      // calll .onShow in child components\n      this.view.views().forEach((v) => {\n         const component = this.viewComponents[v.id];\n         component?.onShow();\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewListComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewList_${baseView.id}`,\n         Object.assign({ list: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _uiList = {\n         id: this.ids.list,\n         view: \"dataview\",\n         type: {\n            width: 1000,\n            height: 30,\n         },\n         template: (item) => {\n            const field = this.view.field();\n\n            if (!field) return \"\";\n\n            return field.format(item);\n         },\n      };\n\n      // set height or autoHeight\n      if (settings.height !== 0) _uiList.height = settings.height;\n      else _uiList.autoHeight = true;\n\n      const _ui = super.ui([_uiList]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      // bind dc to component\n      dc.bind($$(this.ids.list));\n      // $$(ids.list).sync(dv);\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewMenuComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewMenu_${baseView.id}`,\n         Object.assign(\n            {\n               menu: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _ui = super.ui([\n         parseInt(settings.menuInToolbar) ? this.uiToolbar() : this.uiMenu(),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiMenu() {\n      const baseView = this.view;\n      const settings = this.settings;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const css = `${settings.buttonStyle || defaultSettings.buttonStyle} ${\n         settings.menuAlignment || defaultSettings.menuAlignment\n      } `;\n\n      return {\n         id: this.ids.menu,\n         view: \"menu\",\n         autoheight: true,\n         autowidth: true,\n         datatype: \"json\",\n         css: css,\n         layout: settings.orientation || defaultSettings.orientation,\n         on: {\n            onMenuItemClick: (id /*, e, node */) => {\n               this.onClick(id);\n            },\n            onAfterRender: () => {\n               this.defineCypress();\n            },\n         },\n         type: {\n            subsign: true,\n         },\n      };\n   }\n\n   uiToolbar() {\n      const settings = this.settings;\n      const baseView = this.view;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const _uiMenu = this.uiMenu();\n\n      let elems = [];\n      let menuIncluded = false;\n\n      // Legacy support: use old settings values if translated values are not set\n      const menuTextLeft = baseView.menuTextLeft ?? settings.menuTextLeft;\n      const menuTextCenter = baseView.menuTextCenter ?? settings.menuTextCenter;\n      const menuTextRight = baseView.menuTextRight ?? settings.menuTextRight;\n\n      if (settings.menuPosition === \"left\") {\n         menuIncluded = true;\n         elems.push(_uiMenu);\n      } else if (menuTextLeft?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push({\n            view: \"label\",\n            label: menuTextLeft,\n            align: \"left\",\n            width: width,\n         });\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (settings?.menuPosition === \"center\") {\n         menuIncluded = true;\n\n         elems.push(_uiMenu);\n      } else if (menuTextCenter?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push(\n            {},\n            {\n               view: \"label\",\n               label: menuTextCenter,\n               align: \"center\",\n               width: width,\n            },\n            {}\n         );\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (settings?.menuPosition === \"right\") {\n         menuIncluded = true;\n\n         elems.push(_uiMenu);\n      } else if (menuTextRight?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push({\n            view: \"label\",\n            label: menuTextRight,\n            align: \"right\",\n            width: width,\n         });\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (menuIncluded === false) elems = [_uiMenu];\n\n      return {\n         view: \"toolbar\",\n         css: settings.menuTheme ?? defaultSettings.menuTheme,\n         padding: settings.menuPadding\n            ? parseInt(settings.menuPadding)\n            : defaultSettings.menuPadding,\n         elements: elems,\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $menu = $$(this.ids.menu);\n      const baseView = this.view;\n\n      if ($menu) {\n         const settings = this.settings;\n\n         baseView.ClearPagesInView($menu);\n\n         if (settings.order?.length) {\n            baseView.AddPagesToView($menu, settings.order);\n            // Force onAfterRender to fire\n            $menu.refresh();\n         }\n      }\n   }\n\n   onClick(itemId) {\n      const $menu = $$(this.ids.menu);\n      const $item = $menu.getMenuItem(itemId);\n      const baseView = this.view;\n\n      // switch tab view\n      if ($item.type === \"tab\") {\n         baseView.changePage($item.pageId);\n\n         const redirectPage = baseView.application.pages(\n            (p) => p.id === $item.pageId,\n            true\n         )[0];\n\n         if (!redirectPage) return;\n\n         const tabView = redirectPage.views((v) => v.id === $item.id, true)[0];\n\n         if (!tabView) return;\n\n         const tab = tabView.parent;\n\n         if (!tab) return;\n\n         this.toggleParent(tab);\n\n         // if (!$$(tabView.id) || !$$(tabView.id).isVisible()) {\n         const showIt = setInterval(() => {\n            if ($$(tabView.id) && $$(tabView.id).isVisible()) {\n               clearInterval(showIt);\n\n               return;\n            }\n\n            tab.emit(\"changeTab\", tabView.id);\n         }, 100);\n         // }\n      }\n      // switch page\n      else baseView.changePage(itemId);\n   }\n\n   toggleParent(element) {\n      if (!element.parent) return false;\n\n      const parentElem = element.parent;\n\n      if (!parentElem?.parent) return false;\n\n      parentElem.parent.emit(\"changeTab\", parentElem.id);\n      this.toggleParent(parentElem.parent);\n   }\n\n   defineCypress() {\n      const $menu = $$(this.ids.menu);\n\n      if (!$menu) return;\n\n      $menu.data.each((item) => {\n         const node = $menu.getItemNode(item.id);\n\n         if (!node) return;\n\n         // get linked page/tab info so we can use its name in the data-cy\n         const viewInfo = this.AB.definitionByID(item.id);\n\n         node.setAttribute(\n            \"data-cy\",\n            `menu-item ${viewInfo?.name} ${item.id} ${this.view.id}`\n         );\n      });\n   }\n};\n","const PDFJS = require(\"pdfjs-dist\");\nconst ABViewComponent = require(\"./ABViewComponent\").default;\n\nconst SMALL_PAGE_WIDTH = 150;\nconst BIG_PAGE_WIDTH = 250;\n\nmodule.exports = class ABViewPDFImporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewPDFImporter_${baseView.id}`,\n         Object.assign(\n            {\n               fileUploader: \"\",\n               uploadList: \"\",\n               dataview: \"\",\n               fullImagePopup: \"\",\n               fullImageCarousel: \"\",\n               fullImageSelectToggle: \"\",\n               fullImageLabel: \"\",\n               selectAll: \"\",\n               unselectAll: \"\",\n               submit: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      const _ui = super.ui([\n         {\n            rows: [\n               {\n                  cols: [\n                     {\n                        id: ids.fileUploader,\n                        view: \"uploader\",\n                        name: \"records\",\n                        link: ids.uploadList,\n                        label: this.label(\"Upload a PDF file\"),\n                        inputWidth: 200,\n                        width: 210,\n                        accept: \"application/pdf\",\n                        multiple: false,\n                        autosend: false,\n                        type: \"icon\",\n                        icon: \"fa fa-file-pdf-o\",\n                        on: {\n                           onBeforeFileAdd: (fileInfo) => {\n                              this._csvFileInfo = fileInfo;\n                              if (!this._csvFileInfo) return false;\n\n                              this.loadFile();\n\n                              return true;\n                           },\n                        },\n                     },\n                     {\n                        id: ids.uploadList,\n                        view: \"list\",\n                        type: \"uploader\",\n                        autoheight: true,\n                        borderless: true,\n                        onClick: {\n                           webix_remove_upload: (e, id) => {\n                              this.removeFile(id);\n                           },\n                        },\n                     },\n                     {\n                        width: 10,\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-th-large\",\n                        maxWidth: 30,\n                        click: () => {\n                           this.displayBig();\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-th\",\n                        maxWidth: 30,\n                        click: () => {\n                           this.displaySmall();\n                        },\n                     },\n                  ],\n               },\n               {\n                  height: 10,\n               },\n               {\n                  id: ids.dataview,\n                  view: \"dataview\",\n                  borderless: true,\n                  css: \"pdf-data-view\",\n                  multiselect: false,\n                  select: false,\n                  type: {\n                     template: (item) => {\n                        return this.pageTemplate(item);\n                     },\n                     width: \"auto\",\n                     height: \"auto\",\n                  },\n                  on: {\n                     onSelectChange: (pageIds) => {\n                        this.renderPageImages();\n                     },\n                     onItemClick: function (id, e, node) {\n                        // Unselect\n                        if (e?.target?.className?.includes?.(\"unselect-page\")) {\n                           self.unselect(id);\n                        }\n                        // Select\n                        else if (\n                           e?.target?.className?.includes?.(\"select-page\")\n                        ) {\n                           self.select(id);\n                        }\n                        // Zoom\n                        else if (e?.target?.className?.includes?.(\"pdf-zoom\")) {\n                           self._fullImagePopup.show();\n                           $$(self.ids.fullImageCarousel).setActiveIndex(\n                              parseInt(id ?? 0) - 1\n                           );\n                           self.refreshFullImage();\n                        }\n                     },\n                  },\n               },\n               {\n                  height: 10,\n               },\n               {\n                  cols: [\n                     {\n                        id: ids.selectAll,\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-check-square-o\",\n                        maxWidth: 160,\n                        label: this.label(\"Select All\"),\n                        click: () => {\n                           this.selectAll();\n                        },\n                     },\n                     {\n                        id: ids.unselectAll,\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-square-o\",\n                        maxWidth: 160,\n                        label: this.label(\"Unselect All\"),\n                        click: () => {\n                           this.unselectAll();\n                        },\n                     },\n                     {\n                        fillspace: true,\n                     },\n                     {\n                        id: ids.submit,\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        type: \"icon\",\n                        icon: \"fa fa-floppy-o\",\n                        disabled: true,\n                        maxWidth: 180,\n                        label: this.label(\"Submit\"),\n                        click: () => {\n                           this.submit();\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n      ]);\n\n      return _ui;\n   }\n\n   uiPopup() {\n      const ids = this.ids;\n      return {\n         id: ids.fullImagePopup,\n         view: \"window\",\n         modal: true,\n         position: \"center\",\n         headHeight: 25,\n         head: {\n            cols: [\n               { fillspace: true },\n               {\n                  view: \"button\",\n                  type: \"icon\",\n                  icon: \"fa fa-times\",\n                  maxWidth: 25,\n                  height: 25,\n                  click: () => {\n                     $$(ids.fullImagePopup)?.hide();\n                  },\n               },\n            ],\n         },\n         body: {\n            rows: [\n               {\n                  id: ids.fullImageCarousel,\n                  view: \"carousel\",\n                  width: 600,\n                  height: 500,\n                  navigation: {\n                     items: true,\n                     buttons: true,\n                     type: \"side\",\n                  },\n                  cols: [],\n                  on: {\n                     onShow: () => {\n                        this.refreshFullImage();\n                     },\n                  },\n               },\n               {\n                  view: \"layout\",\n                  cols: [\n                     {\n                        id: ids.fullImageSelectToggle,\n                        view: \"toggle\",\n                        type: \"icon\",\n                        offIcon: \"fa fa-square-o\",\n                        onIcon: \"fa fa-check-square-o\",\n                        offLabel: this.label(\"Unselected\"),\n                        onLabel: this.label(\"Selected\"),\n                        width: 130,\n                        on: {\n                           onChange: (isSelected) => {\n                              const activeIndex = $$(\n                                 this.ids.fullImageCarousel\n                              ).getActiveIndex();\n                              const pageNumber = activeIndex + 1;\n\n                              if (isSelected) this.select(pageNumber);\n                              else this.unselect(pageNumber);\n                           },\n                        },\n                     },\n                     {\n                        fillspace: true,\n                     },\n                     {\n                        id: ids.fullImageLabel,\n                        view: \"label\",\n                        width: 120,\n                        label: `${this.label(\"Page Number\")}: ${\"#\"}`,\n                     },\n                  ],\n               },\n            ],\n         },\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $dataview = $$(this.ids.dataview);\n      if ($dataview) this.AB.Webix.extend($dataview, webix.ProgressBar);\n\n      if (!this._fullImagePopup) {\n         const fullImagePopup = this.uiPopup();\n         this._fullImagePopup = this.AB.Webix.ui(fullImagePopup);\n      }\n   }\n\n   async _readFileBuffer() {\n      const _csvFileInfo = this._csvFileInfo;\n      if (!_csvFileInfo || !_csvFileInfo.file)\n         return Promise.resolve(new ArrayBuffer(0));\n\n      const fileReader = new FileReader();\n\n      return new Promise((resolve, reject) => {\n         fileReader.onload = (event) => {\n            const fileBuffer = event.target.result;\n            resolve(fileBuffer);\n         };\n         fileReader.onerror = (event) => {\n            reject(event);\n         };\n         fileReader.readAsArrayBuffer(_csvFileInfo.file);\n      });\n   }\n\n   async _toBlob(pageNumber, canvas) {\n      if (!canvas) return;\n\n      return new Promise((resolve, reject) => {\n         canvas.toBlob((blob) => {\n            const file = new File([blob], `${pageNumber}.png`, {\n               type: \"image/png\",\n            });\n\n            resolve(file);\n         }, \"image/png\");\n      });\n   }\n\n   async _uploadImage(pageNumber) {\n      // Create a temporary CANVAS dom to render page image with specify the height\n      const $carousel = $$(this.ids.fullImageCarousel);\n      const canvasId = `${this.view.id}_temp_canvas`;\n      const canvas =\n         document.getElementById(canvasId) ?? document.createElement(\"canvas\");\n      canvas.id = canvasId;\n      canvas.width = $carousel.config.width - 20;\n\n      await this.showPage(pageNumber, canvas);\n      const fileBlob = await this._toBlob(pageNumber, canvas);\n\n      return new Promise((resolve, reject) => {\n         // Create a uploader to upload images\n         const $uploader = this.AB.Webix.ui({\n            view: \"uploader\",\n            apiOnly: true,\n            upload: this.field.urlUpload(),\n            inputName: \"file\",\n            multiple: false,\n            on: {\n               // when upload is complete:\n               onFileUpload: (item, response) => {\n                  // RETURN HERE\n                  resolve(response?.data?.uuid);\n                  $uploader.destructor();\n               },\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  reject(response);\n               },\n            },\n         });\n\n         $uploader.addFile(fileBlob, fileBlob.size);\n      });\n   }\n\n   _increaseProgressValue() {\n      const $dataview = $$(this.ids.dataview);\n      const maxProgressStep = ($dataview.getSelectedId(true) ?? []).length * 2;\n\n      this._progressSteps = this._progressSteps ?? 0;\n      this._progressSteps++;\n\n      $dataview?.showProgress?.({\n         type: \"bottom\",\n         position: this._progressSteps / maxProgressStep,\n      });\n   }\n\n   async loadFile() {\n      this.clearDataview();\n\n      const _csvFileInfo = this._csvFileInfo;\n      if (!_csvFileInfo) return;\n\n      const fileBuffer = await this._readFileBuffer();\n      this._pdfDoc = await PDFJS.getDocument(fileBuffer).promise;\n\n      const total_page = this._pdfDoc.numPages;\n      const $dataview = $$(this.ids.dataview);\n      const $carousel = $$(this.ids.fullImageCarousel);\n      const carousel_list = [];\n      for (let pageNumber = 1; pageNumber <= total_page; pageNumber++) {\n         $dataview.add({\n            id: pageNumber,\n            pageNumber,\n         });\n\n         carousel_list.push({\n            template: (item) => {\n               return this.fullImageTemplate(item);\n            },\n            data: {\n               pageNumber,\n            },\n         });\n      }\n\n      this.renderPageImages();\n      if ($carousel) this.AB.Webix.ui(carousel_list, $carousel);\n\n      $$(this.ids.submit)?.enable();\n   }\n\n   removeFile(id) {\n      $$(this.ids.uploadList)?.remove(id);\n\n      delete this._pdfDoc;\n      delete this._csvFileInfo;\n      this.clearDataview();\n\n      $$(this.ids.submit)?.disable();\n\n      return true;\n   }\n\n   pageTemplateId(pageNumber) {\n      return `pdf-importer-${this.view.id}-${pageNumber}`;\n   }\n\n   pageTemplate(item) {\n      const $dataview = $$(this.ids.dataview);\n      let selectedPageIds = $dataview.getSelectedId(true);\n\n      return `\n      <div>\n         <div class=\"pdf-data-view-item\">\n            <div>\n            ${\n               selectedPageIds.filter((pageId) => pageId == item.id).length\n                  ? '<i class=\"unselect-page fa fa-check-square-o\"></i>'\n                  : '<i class=\"select-page fa fa-square-o\"></i>'\n            }\n            </div>\n            <div style=\"width: 15px;\">\n               ${item.pageNumber}\n            </div>\n         </div>\n         <div class=\"pdf-zoom pdf-data-view-image\">\n            <canvas class=\"pdf-zoom\" width=\"${\n               this.pageItemWidth\n            }\" id=\"${this.pageTemplateId(item.pageNumber)}\"></canvas>\n            <div class=\"pdf-zoom pdf-data-view-image-icon\">\n               <i class=\"pdf-zoom fa fa-search-plus fa-4x\"></i>\n            </div>\n         </div>\n      </div>\n      `;\n   }\n\n   renderPageImages() {\n      const $dataview = $$(this.ids.dataview);\n      $dataview?.find({}).forEach((item) => {\n         const canvas_dom = document.querySelector(\n            `#${this.pageTemplateId(item.pageNumber)}`\n         );\n         this.showPage(item.pageNumber, canvas_dom);\n      });\n   }\n\n   async showPage(pageNumber, canvas_dom) {\n      if (!this._pdfDoc) return;\n\n      pageNumber = parseInt(pageNumber);\n      const page = await this._pdfDoc.getPage(pageNumber);\n      const pdf_original_width = page.getViewport({ scale: 1 }).width;\n      const scale_required = canvas_dom.width / pdf_original_width;\n\n      // get viewport to render the page at required scale\n      const viewport = page.getViewport({ scale: scale_required });\n      canvas_dom.height = viewport.height;\n\n      return page.render({\n         canvasContext: canvas_dom.getContext(\"2d\"),\n         viewport: viewport,\n      }).promise;\n   }\n\n   clearDataview() {\n      const $dataview = $$(this.ids.dataview);\n      const $carousel = $$(this.ids.fullImageCarousel);\n\n      $dataview?.clearAll();\n      if ($carousel)\n         this.AB.Webix.ui(\n            [\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  height: $carousel.height,\n                  label: this.label(\"No image\"),\n               },\n            ],\n            $carousel\n         );\n   }\n\n   displaySmall() {\n      this._isDisplayBig = false;\n      $$(this.ids.dataview)?.render();\n      this.renderPageImages();\n   }\n\n   displayBig() {\n      this._isDisplayBig = true;\n      $$(this.ids.dataview)?.render();\n      this.renderPageImages();\n   }\n\n   get pageItemWidth() {\n      return this._isDisplayBig ? BIG_PAGE_WIDTH : SMALL_PAGE_WIDTH;\n   }\n\n   select(pageNumber) {\n      const $dataview = $$(this.ids.dataview);\n\n      let selectedIds = $dataview.getSelectedId(true);\n\n      selectedIds.push(pageNumber);\n      selectedIds = selectedIds.filter((pageId) => pageId);\n\n      if (selectedIds.length) $dataview.select(selectedIds);\n      else $dataview.unselectAll();\n   }\n\n   unselect(pageNumber) {\n      const $dataview = $$(this.ids.dataview);\n\n      let selectedIds = $dataview.getSelectedId(true);\n\n      selectedIds = selectedIds.filter(\n         (pageId) => pageId && pageId != pageNumber\n      );\n\n      if (selectedIds.length) $dataview.select(selectedIds);\n      else $dataview.unselectAll();\n   }\n\n   selectAll() {\n      $$(this.ids.dataview)?.selectAll();\n   }\n\n   unselectAll() {\n      $$(this.ids.dataview)?.unselectAll();\n   }\n\n   fullImageTemplateId(pageNumber) {\n      return `${this.pageTemplateId(pageNumber)}_full_size`;\n   }\n\n   fullImageTemplate(item) {\n      const $carousel = $$(this.ids.fullImageCarousel);\n      return `<canvas width=\"${\n         $carousel.config.width - 20\n      }\" id=\"${this.fullImageTemplateId(item.pageNumber)}\"></canvas>`;\n   }\n\n   refreshFullImage() {\n      const ids = this.ids;\n      const activeIndex = $$(ids.fullImageCarousel).getActiveIndex();\n      const pageNumber = activeIndex + 1;\n      const canvas_dom = document.querySelector(\n         `#${this.fullImageTemplateId(pageNumber)}`\n      );\n      this.showPage(pageNumber, canvas_dom);\n\n      const selectedPageIds = $$(ids.dataview).getSelectedId(true);\n      const isSelected =\n         selectedPageIds.filter((pageId) => pageId == pageNumber).length > 0;\n      $$(ids.fullImageSelectToggle).setValue(isSelected);\n\n      $$(ids.fullImageLabel).setValue(\n         `${this.label(\"Page Number\")}: ${pageNumber}`\n      );\n   }\n\n   get object() {\n      return this.view.datacollection?.datasource;\n   }\n\n   get field() {\n      return this.object?.fields?.(\n         (f) => f.id == this.view.settings.fieldID\n      )[0];\n   }\n\n   busy() {\n      const ids = this.ids;\n\n      const $fileUploader = $$(ids.fileUploader);\n      const $uploadList = $$(ids.uploadList);\n      const $dataview = $$(ids.dataview);\n      const $submit = $$(ids.submit);\n      const $selectAll = $$(ids.selectAll);\n      const $unselectAll = $$(ids.unselectAll);\n      const $selectToggle = $$(ids.fullImageSelectToggle);\n\n      $fileUploader?.disable();\n      $uploadList?.disable();\n      $submit?.disable();\n      $selectAll?.disable();\n      $unselectAll?.disable();\n      $selectToggle?.disable();\n      $dataview?.showProgress?.({\n         type: \"bottom\",\n         position: 0.001,\n      });\n   }\n\n   ready() {\n      const ids = this.ids;\n\n      const $fileUploader = $$(ids.fileUploader);\n      const $uploadList = $$(ids.uploadList);\n      const $dataview = $$(ids.dataview);\n      const $submit = $$(ids.submit);\n      const $selectAll = $$(ids.selectAll);\n      const $unselectAll = $$(ids.unselectAll);\n      const $selectToggle = $$(ids.fullImageSelectToggle);\n\n      $fileUploader?.enable();\n      $uploadList?.enable();\n      $submit?.enable();\n      $selectAll?.enable();\n      $unselectAll?.enable();\n      $selectToggle?.enable();\n      $dataview?.hideProgress?.();\n\n      delete this._progressSteps;\n   }\n\n   async submit() {\n      const field = this.field;\n      if (!this._pdfDoc || !field) return;\n\n      this.busy();\n\n      const ids = this.ids;\n      const $dataview = $$(ids.dataview);\n      const selectedPageIds = $dataview.getSelectedId(true) ?? [];\n      const model = field.object.model();\n      const dcLink = this.datacollection.datacollectionLink;\n      const newValues = [];\n\n      for (let i = 0; i < selectedPageIds.length; i++) {\n         const pageNumber = selectedPageIds[i];\n         if (pageNumber == null || pageNumber == \"\") return;\n\n         const uploadId = await this._uploadImage(pageNumber);\n\n         this._increaseProgressValue();\n\n         // Insert Data\n         const values = field.object.defaultValues();\n         values[field.columnName] = uploadId;\n\n         // Set linked data from the parent DC\n         const linkValues = dcLink?.getCursor();\n         if (linkValues) {\n            const objectLink = dcLink?.datasource;\n\n            const connectFields = field.object.connectFields();\n            connectFields.forEach((f) => {\n               if (\n                  objectLink.id == f.settings.linkObject &&\n                  values[f.columnName] === undefined\n               ) {\n                  const linkColName = f.indexField\n                     ? f.indexField.columnName\n                     : objectLink.PK();\n\n                  values[f.columnName] = {};\n                  values[f.columnName][linkColName] =\n                     linkValues[linkColName] ?? linkValues.id;\n               }\n            });\n         }\n\n         newValues.push(await model.create(values));\n\n         this._increaseProgressValue();\n      }\n\n      this.view.doSubmitRules(newValues);\n\n      // NOTE: trigger this event to ABViewPropertyAddPage\n      if (newValues) this.view.emit(\"saved\", newValues);\n\n      this.ready();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABFieldCalculate = require(\"../../dataFields/ABFieldCalculate\");\nconst ABFieldFormula = require(\"../../dataFields/ABFieldFormula\");\nconst ABFieldNumber = require(\"../../dataFields/ABFieldNumber\");\n\nmodule.exports = class ABViewPivotComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewPivot_${baseView.id}`,\n         Object.assign({ pivot: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const self = this;\n      const settings = this.settings;\n      const uiPivot = {\n         id: this.ids.pivot,\n         view: \"pivot\",\n         readonly: true,\n         removeMissed: settings.removeMissed,\n         totalColumn: settings.totalColumn,\n         separateLabel: settings.separateLabel,\n         min: settings.min,\n         max: settings.max,\n         height: settings.height,\n         fields: this._getFields(),\n         format: (value) => {\n            const decimalPlaces = settings.decimalPlaces ?? 2;\n\n            return value && value != \"0\"\n               ? parseFloat(value).toFixed(decimalPlaces || 0)\n               : value;\n         },\n         override: new Map([\n            [\n               pivot.services.Backend,\n               class MyBackend extends pivot.services.Backend {\n                  async data() {\n                     const dc = self.datacollection;\n                     if (!dc) return webix.promise.resolve([]);\n\n                     const object = dc.datasource;\n                     if (!object) return webix.promise.resolve([]);\n\n                     switch (dc.dataStatus) {\n                        case dc.dataStatusFlag.notInitial:\n                           await dc.loadData();\n                           break;\n                     }\n\n                     const data = dc.getData();\n                     const dataMapped = data.map((d) => {\n                        const result = {};\n\n                        object.fields().forEach((f) => {\n                           if (\n                              f instanceof ABFieldCalculate ||\n                              f instanceof ABFieldFormula ||\n                              f instanceof ABFieldNumber\n                           )\n                              result[f.columnName] = d[f.columnName];\n                           else result[f.columnName] = f.format(d);\n                        });\n\n                        return result;\n                     });\n\n                     return webix.promise.resolve(dataMapped);\n                  }\n               },\n            ],\n         ]),\n      };\n\n      if (settings.structure) uiPivot.structure = settings.structure;\n\n      const _ui = super.ui([uiPivot]);\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   _getFields() {\n      const dc = this.datacollection;\n      if (!dc) return [];\n\n      const object = dc.datasource;\n      if (!object) return [];\n\n      const fields = object.fields().map((f) => {\n         let fieldType = \"text\";\n\n         switch (f.key) {\n            case \"calculate\":\n            case \"formula\":\n            case \"number\":\n               fieldType = \"number\";\n               break;\n            case \"date\":\n            case \"datetime\":\n               fieldType = \"date\";\n               break;\n         }\n\n         return {\n            id: f.columnName,\n            value: f.label,\n            type: fieldType,\n         };\n      });\n\n      return fields;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewReportsManagerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewReportManager_${baseView.id}`,\n         Object.assign(\n            {\n               reportManager: \"\",\n            },\n            ids\n         )\n      );\n\n      this.readonly = false;\n   }\n\n   ui() {\n      const self = this;\n      const settings = this.settings;\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n      const dc = this.datacollection;\n      const fieldName = dc?.datasource.fieldByID(\n         settings.dataviewFields.name\n      )?.columnName;\n      const fieldText = dc?.datasource.fieldByID(\n         settings.dataviewFields.text\n      )?.columnName;\n      const fieldQueries = dc?.datasource.fieldByID(\n         settings.dataviewFields.queries\n      )?.columnName;\n      const ids = this.ids;\n      class MyBackend extends reports.services.Backend {\n         async getModules() {\n            if (dc == null) return [];\n\n            await self.waitInitializingDCEvery(1000, dc);\n\n            return dc.getData().map((e) => {\n               return {\n                  id: e.id,\n                  name: e[fieldName],\n                  text: JSON.stringify(e[fieldText]),\n                  updated: e[\"updated_at\"],\n               };\n            });\n         }\n\n         async addModule(data) {\n            const parsedData = {};\n\n            parsedData[fieldName] = data.name;\n            parsedData[fieldText] = data.text;\n\n            const response = await dc.model.create(parsedData);\n\n            return {\n               id: response.id,\n            };\n         }\n\n         async updateModule(id, data) {\n            const parsedData = {};\n\n            parsedData[fieldName] = data.name;\n            parsedData[fieldText] = data.text;\n\n            let response = {};\n\n            response = await dc.model.update(id, parsedData);\n\n            return { id: response.id };\n         }\n\n         async deleteModule(id) {\n            await dc.model.delete(id);\n\n            return { id: id };\n         }\n\n         async getModels() {\n            const reportModels = {};\n\n            // If no selected DC then get all DCs\n            (settings.datacollectionIDs.length > 0\n               ? settings.datacollectionIDs\n               : self.view.application.datacollectionIDs\n            ).forEach((dcID) => {\n               const dc = ab.datacollectionByID(dcID);\n\n               if (!dc) return;\n\n               const obj = dc.datasource;\n\n               if (!obj) return;\n\n               const reportFields = self.getReportFields(dc);\n\n               // get connected data collections\n               // let linkedFields = [];\n               // (obj.connectFields() || []).forEach((f, index) => {\n               //    let connectedDcs = ab.datacollections(\n               //       (dColl) =>\n               //          dColl &&\n               //          dColl.datasource &&\n               //          dColl.datasource.id === f.settings.linkObject\n               //    );\n               //    (connectedDcs || []).forEach((linkedDc) => {\n               //       linkedFields.push({\n               //          id: index + 1,\n               //          name: linkedDc.label,\n               //          source: dc.id,\n               //          target: linkedDc.id\n               //       });\n               //    });\n               // });\n\n               // // MOCK UP for testing\n               // let linkedFields = [\n               //    {\n               //       id: \"id\",\n               //       name: \"id\",\n               //       source: \"39378ee0-38f0-4b9d-a5aa-dddc61137fcd\", // Player\n               //       target: \"0de82362-4ab5-4f0f-8cfa-d1288d173cba\" // Team\n               //    }\n               // ];\n\n               reportModels[dc.id] = {\n                  id: dc.id,\n                  name: dc.label,\n                  data: reportFields,\n                  refs: [],\n               };\n            });\n\n            return reportModels;\n         }\n\n         async getQueries() {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return [];\n\n            return (\n               (\n                  await dc.model.findAll({\n                     where: {\n                        uuid: moduleID,\n                     },\n                  })\n               ).data[0][fieldQueries] || []\n            );\n         }\n\n         async addQuery(data) {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return {};\n\n            const moduleData = (\n               await dc.model.findAll({\n                  where: {\n                     uuid: moduleID,\n                  },\n               })\n            ).data[0];\n\n            if (moduleData == null) return {};\n\n            const queries = [...(moduleData[fieldQueries] || [])];\n            const queryID = abWebix.uid();\n\n            queries.push(Object.assign({ id: queryID }, data));\n\n            const parsedData = {};\n\n            parsedData[fieldQueries] = queries.sort((a, b) => {\n               if (a.name < b.name) return -1;\n\n               if (a.name > b.name) return 1;\n\n               return 0;\n            });\n\n            await dc.model.update(moduleID, parsedData);\n\n            return { id: queryID };\n         }\n\n         async updateQuery(id, data) {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return {};\n\n            const moduleData = (\n               await dc.model.findAll({\n                  where: {\n                     uuid: moduleID,\n                  },\n               })\n            ).data[0];\n\n            if (moduleData == null) return {};\n\n            const queries = [...(moduleData[fieldQueries] || [])];\n            const queryIndex = queries.findIndex((e) => e.id === id);\n\n            queries[queryIndex] = Object.assign({ id }, data);\n\n            const parsedData = {};\n\n            parsedData[fieldQueries] = queries.sort((a, b) => {\n               if (a.name < b.name) return -1;\n\n               if (a.name > b.name) return 1;\n\n               return 0;\n            });\n\n            await dc.model.update(moduleID, parsedData);\n\n            return { id };\n         }\n\n         async deleteQuery(id) {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return {};\n\n            const moduleData = (\n               await dc.model.findAll({\n                  where: {\n                     uuid: moduleID,\n                  },\n               })\n            ).data[0];\n\n            if (moduleData == null) return {};\n\n            const queries = moduleData[fieldQueries] || [];\n            const queryIndex = queries.findIndex((e) => e.id === id);\n\n            if (queryIndex >= 0) {\n               const parsedData = {};\n\n               parsedData[fieldQueries] = queries\n                  .filter((e, i) => i !== queryIndex)\n                  .sort((a, b) => {\n                     if (a.name < b.name) return -1;\n\n                     if (a.name > b.name) return 1;\n\n                     return 0;\n                  });\n\n               await dc.model.update(moduleID, parsedData);\n            }\n\n            return { id: id };\n         }\n\n         async getData(config) {\n            let result = [];\n            let pullDataTasks = [];\n            let dcIds = [];\n            let dcData = {};\n            let reportFields = [];\n\n            // pull data of the base and join DCs\n            dcIds.push(config.data);\n            (config.joins || []).forEach((j) => {\n               dcIds.push(j.sid);\n               dcIds.push(j.tid);\n            });\n            dcIds = ab.uniq(dcIds);\n            dcIds.forEach((dcId) => {\n               pullDataTasks.push(\n                  new Promise((resolve, reject) => {\n                     const getData = async () => {\n                        try {\n                           dcData[dcId] = (await self.getData(dcId)) || [];\n\n                           resolve();\n                        } catch (err) {\n                           reject(err);\n                        }\n                     };\n\n                     getData();\n                  })\n               );\n            });\n\n            dcIds.forEach((dcId) => {\n               const dataCol = ab.datacollectionByID(dcId);\n\n               if (!dataCol) return;\n\n               reportFields = reportFields.concat(\n                  self.getReportFields(dataCol).map((f) => {\n                     // change format of id to match the report widget\n                     f.id = `${dcId}.${f.id}`; // dc_id.field_id\n                     return f;\n                  })\n               );\n            });\n\n            await Promise.all(pullDataTasks);\n\n            // the data result equals data of the base DC\n            result = dcData[config.data] || [];\n\n            if (config.joins?.length)\n               (config.joins || []).forEach((j) => {\n                  const sourceDc = ab.datacollectionByID(j.sid);\n                  if (!sourceDc) return;\n\n                  const sourceObj = sourceDc.datasource;\n                  if (!sourceObj) return;\n\n                  const targetDc = ab.datacollectionByID(j.tid);\n                  if (!targetDc) return;\n\n                  const targetObj = targetDc.datasource;\n                  if (!targetObj) return;\n\n                  const sourceLinkField = sourceObj.fieldByID(j.sf);\n                  const targetLinkField = targetObj.fieldByID(j.tf);\n                  if (!sourceLinkField && !targetLinkField) return;\n\n                  const sourceData = dcData[j.sid] || [];\n                  const targetData = dcData[j.tid] || [];\n\n                  sourceData.forEach((sData) => {\n                     targetData.forEach((tData) => {\n                        let sVal =\n                           sData[\n                              sourceLinkField\n                                 ? `${j.sid}.${sourceLinkField.columnName}.id`\n                                 : `${j.sid}.id`\n                           ] || [];\n\n                        let tVal =\n                           tData[\n                              targetLinkField\n                                 ? `${j.tid}.${targetLinkField.columnName}.id`\n                                 : `${j.tid}.id`\n                           ] || [];\n\n                        if (!Array.isArray(sVal)) sVal = [sVal];\n\n                        if (!Array.isArray(tVal)) tVal = [tVal];\n\n                        // Add joined row to the result array\n                        const matchedVal = sVal.filter(\n                           (val) => tVal.indexOf(val) > -1\n                        );\n\n                        if (matchedVal?.length) {\n                           const updateRows =\n                              result.filter(\n                                 (r) =>\n                                    r[`${j.sid}.id`] === sData[`${j.sid}.id`] &&\n                                    !r[`${j.tid}.id`]\n                              ) || [];\n\n                           if (updateRows?.length)\n                              (updateRows || []).forEach((r) => {\n                                 for (const key in tData)\n                                    if (key !== \"id\") r[key] = tData[key];\n                              });\n                           else\n                              result.push(\n                                 Object.assign(\n                                    ab.cloneDeep(sData),\n                                    ab.cloneDeep(tData)\n                                 )\n                              );\n                        }\n                     });\n                  });\n               });\n\n            // filter & sort\n            const queryVal = JSON.parse(config.query || \"{}\");\n\n            if (queryVal?.rules?.length)\n               queryVal.rules.forEach((r) => {\n                  if (!r || !r.type || !r.condition) return;\n\n                  switch (r.type) {\n                     case \"date\":\n                        // Convert string to Date object\n                        if (r.condition.filter) {\n                           if (typeof r.condition.filter === \"string\")\n                              r.condition.filter = ab.rules.toDate(\n                                 r.condition.filter\n                              );\n\n                           if (\n                              r.condition.filter.start &&\n                              typeof r.condition.filter.start === \"string\"\n                           )\n                              r.condition.filter.start = ab.rules.toDate(\n                                 r.condition.filter.start\n                              );\n\n                           if (\n                              r.condition.filter.end &&\n                              typeof r.condition.filter.end === \"string\"\n                           )\n                              r.condition.filter.end = ab.rules.toDate(\n                                 r.condition.filter.end\n                              );\n                        }\n\n                        break;\n                  }\n               });\n\n            // create a new query widget to get the filter function\n            const filterElem = abWebix.ui({\n               view: \"query\",\n               fields: reportFields,\n               value: queryVal,\n            });\n\n            // create a new data collection and apply the query filter\n            const tempDc = new abWebix.DataCollection();\n\n            tempDc.parse(result);\n\n            // filter\n            let filterFn;\n\n            try {\n               filterFn = filterElem.getFilterFunction();\n            } catch (error) {\n               // continue regardless of error\n            }\n\n            if (filterFn) tempDc.filter(filterFn);\n\n            // sorting\n            (config.sort || []).forEach((sort) => {\n               if (sort.id)\n                  tempDc.sort({\n                     as: \"string\",\n                     dir: sort.mod || \"asc\",\n                     by: `#${sort.id}#`,\n                  });\n            });\n\n            result = tempDc.serialize();\n\n            // clear\n            filterElem.destructor();\n            tempDc.destructor();\n\n            // group by\n            if (config?.group?.length) {\n               result = _.groupBy(result, (e) => {\n                  return config.group\n                     .map((column) => {\n                        const parsedColumn = column.split(\".\");\n                        const originalColumn =\n                           parsedColumn.length > 2\n                              ? `${parsedColumn[1]}.${parsedColumn[2]}`\n                              : column;\n                        const reportField = reportFields.find(\n                           (reportField) => reportField.id === originalColumn\n                        );\n\n                        switch (reportField.type) {\n                           case \"date\": {\n                              const dateStringData = abWebix.i18n.dateFormatStr(\n                                 e[originalColumn]\n                              );\n                              const parsedDateStringData =\n                                 dateStringData.split(\"/\");\n\n                              switch (parsedColumn[0]) {\n                                 case \"day\":\n                                    e[column] = parsedDateStringData[1];\n\n                                    return parsedDateStringData[1];\n\n                                 case \"month\":\n                                    e[column] = parsedDateStringData[0];\n\n                                    return parsedDateStringData[0];\n\n                                 case \"year\":\n                                    e[column] = parsedDateStringData[2];\n\n                                    return parsedDateStringData[2];\n\n                                 case \"yearmonth\": {\n                                    e[\n                                       column\n                                    ] = `${parsedDateStringData[0]}/${parsedDateStringData[2]}`;\n\n                                    return e[column];\n                                 }\n\n                                 default:\n                                    e[column] = dateStringData;\n\n                                    return dateStringData;\n\n                                 // switch (reportField.abField.key) {\n                                 //    case \"datetime\":\n                                 //       return abWebix.i18n.fullDateFormatStr(\n                                 //          e[originalColumn]\n                                 //       );\n\n                                 //    default:\n                                 //       break;\n                                 // }\n                              }\n                           }\n\n                           default:\n                              return e[originalColumn]?.toString?.();\n                        }\n                     })\n                     .join(\"\");\n               });\n\n               result = Object.values(result).map((groupedData) => {\n                  const groupedResult = {};\n\n                  (config.columns || []).forEach((col) => {\n                     const agg = col.split(\".\")[0];\n                     const rawCol = col.replace(\n                        /sum.|avg.|count.|max.|min./g,\n                        \"\"\n                     );\n\n                     switch (agg) {\n                        case \"sum\":\n                           groupedResult[col] = ab.sumBy(groupedData, rawCol);\n                           break;\n                        case \"avg\":\n                           groupedResult[col] = ab.meanBy(groupedData, rawCol);\n                           break;\n                        case \"count\":\n                           groupedResult[col] = (groupedData || []).length;\n                           break;\n                        case \"max\":\n                           groupedResult[col] =\n                              (ab.maxBy(groupedData, rawCol) || {})[rawCol] ||\n                              \"\";\n                           break;\n                        case \"min\":\n                           groupedResult[col] =\n                              (ab.minBy(groupedData, rawCol) || {})[rawCol] ||\n                              \"\";\n                           break;\n                        default:\n                           groupedResult[col] = groupedData[0][col];\n                           break;\n                     }\n                  });\n\n                  return groupedResult;\n               });\n            }\n\n            return result;\n         }\n\n         async getOptions(fields) {\n            return [];\n         }\n         async getFieldData(fieldId) {\n            return [];\n         }\n      }\n      class MyLocal extends reports.services.Local {\n         constructor(app) {\n            super(app);\n\n            this._currentModuleID = \"\";\n         }\n\n         getQueries() {\n            const currentModuleID = $$(ids.reportManager).getState().moduleId;\n\n            if (this._currentModuleID !== currentModuleID) {\n               this._currentModuleID = currentModuleID;\n               this._queries = null;\n            }\n\n            return super.getQueries();\n         }\n      }\n      class MyEditor extends reports.views.editor {\n         init() {\n            super.init();\n\n            if (!self.readonly || settings.editMode === 1) return;\n\n            const $tabbar = this.$$(\"tabbar\");\n\n            if (settings.hideCommonTab === 1) {\n               const listener = () => {\n                  $tabbar.callEvent(\"onChange\", [\"data\"]);\n                  $tabbar.disableOption(\"common\");\n                  self.removeListener(\"editMode.tabbar.query\", listener);\n               };\n\n               self.on(\"editMode.tabbar.query\", listener);\n            }\n\n            if (settings.hideDataTab === 1) $tabbar.disableOption(\"other\");\n\n            if (settings.hideViewTab === 1) $tabbar.disableOption(\"structure\");\n\n            this.on(this.app, \"editMode.button.back\", () => {\n               this.Reset(true);\n            });\n         }\n\n         Reset(forceReset = false) {\n            const id = this.AppState.moduleId;\n            const condition = self.readonly && !(settings.editMode === 1);\n\n            if (!condition || id == null || forceReset) super.Reset();\n\n            this.Local.getModule(id);\n         }\n\n         TrackChanges() {\n            super.TrackChanges();\n\n            if (settings.hideCommonTab) self.emit(\"editMode.tabbar.query\");\n         }\n      }\n      class MyToolBar extends reports.views.toolbar {\n         config() {\n            const ui = super.config();\n\n            if (self.readonly && !(settings.editMode === 1)) {\n               ui.elements[5].cols = ui.elements[5].cols.map((e) =>\n                  Object.assign(e, {\n                     hidden: self.readonly && !(settings.editMode === 1),\n                  })\n               );\n\n               ui.elements[5].cols.push(\n                  {},\n                  {\n                     view: \"button\",\n                     type: \"icon\",\n                     icon: \"wxi-angle-double-left\",\n                     label: self.label(\"Back\"),\n                     localId: \"forceReset\",\n                     click: () => {\n                        return this.app.callEvent(\"editMode.button.back\", []);\n                     },\n                  }\n               );\n            }\n\n            return ui;\n         }\n      }\n      class MyEditorCommon extends reports.views[\"editor/common\"] {\n         config() {\n            const ui = super.config();\n\n            if (!self.readonly) return ui;\n\n            return Object.assign({}, ui, {\n               elements: ui.elements.map((e, i) =>\n                  Object.assign(\n                     {\n                        hidden: !(i >= 2 && i < 5),\n                     },\n                     e\n                  )\n               ),\n            });\n         }\n\n         ShowDeleteButton() {\n            super.ShowDeleteButton();\n\n            if (self.readonly) this.$$(\"delete\").hide();\n         }\n      }\n      class MyEditorData extends reports.views[\"editor/data\"] {\n         config() {\n            const ui = super.config();\n\n            if (self.readonly) {\n               ui.rows[0].rows[0].hidden = true;\n\n               ui.rows[0].rows.unshift({\n                  label: \"Filtering query\",\n                  view: \"label\",\n                  width: 120,\n               });\n            }\n\n            return ui;\n         }\n      }\n      class MyTable extends reports.views.table {\n         // NOTE: fix format of date column type\n         GetColumnConfig(a) {\n            let config = {\n               id: a.id,\n               header:\n                  !a.meta.header || a.meta.header === \"none\"\n                     ? a.meta.name || a.name\n                     : [\n                          a.meta.name || a.name,\n                          {\n                             content:\n                                a.header === \"text\"\n                                   ? \"textFilter\"\n                                   : \"richSelectFilter\",\n                          },\n                       ],\n               type: a.type,\n               sort: \"date\",\n               width: a.width || 200,\n            };\n\n            const abField = self.AB.datacollectionByID(\n               a.mid\n            )?.datasource.fields((field) => field.columnName === a.name)[0];\n\n            switch (a.type) {\n               case \"date\":\n                  config.format = (val) => {\n                     // check valid date\n                     if (val?.getTime && !isNaN(val.getTime()))\n                        return abField?.key === \"datetime\"\n                           ? abWebix.i18n.fullDateFormatStr(val)\n                           : abWebix.i18n.dateFormatStr(val);\n                     else return \"\";\n                  };\n\n                  break;\n\n               default:\n                  config = super.GetColumnConfig(a);\n\n                  break;\n            }\n\n            return config;\n         }\n\n         async GetTableData(mod) {\n            const data = await super.GetTableData(mod);\n            const buckets = mod.buckets;\n\n            if (!buckets) return data;\n\n            if (buckets.length === 0) return data;\n\n            const columnIDs = mod.columns.map((e) => e.id);\n            const parsedBuckets = mod.buckets.filter((bucket) =>\n               columnIDs.includes(bucket.column)\n            );\n\n            if (parsedBuckets.length === 0) return data;\n\n            const records = data[0].map((e) => {\n               const parseRecord = {};\n\n               parsedBuckets.forEach((bucket) => {\n                  const options = bucket.options;\n\n                  for (let i = 0; i < options.length; i++)\n                     if (\n                        options[i].values?.includes(e[bucket.column]) ||\n                        i === options.length - 1\n                     ) {\n                        parseRecord[bucket.column] = options[i].id;\n\n                        break;\n                     }\n               });\n\n               return Object.assign({}, e, parseRecord);\n            });\n\n            return [records, data[1]];\n         }\n      }\n\n      const _ui = super.ui([\n         {\n            id: ids.reportManager,\n            view: \"reports\",\n            toolbar: true,\n            override: new Map([\n               [reports.services.Backend, MyBackend],\n               [reports.services.Local, MyLocal],\n               [reports.views.editor, MyEditor],\n               [reports.views.toolbar, MyToolBar],\n               [reports.views[\"editor/common\"], MyEditorCommon],\n               [reports.views[\"editor/data\"], MyEditorData],\n               [reports.views.table, MyTable],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n      delete _ui.height;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      this.AB = AB;\n      this.readonly = accessLevel < 2;\n\n      const $reportManager = $$(this.ids.reportManager);\n      const state = $reportManager.getState();\n\n      state.readonly = this.readonly;\n      state.mode =\n         this.readonly && this.settings.editMode === 1 ? \"edit\" : \"list\";\n   }\n\n   getReportFields(dc) {\n      if (!dc) return [];\n\n      const object = dc.datasource;\n      if (!object) return [];\n\n      const fields = [];\n\n      object.fields().forEach((f) => {\n         const columnFormat = f.columnHeader();\n\n         if (!f.isConnection) {\n            let type = \"text\";\n\n            switch (f.key) {\n               case \"boolean\":\n               case \"number\":\n               case \"date\":\n                  type = f.key;\n\n                  break;\n\n               case \"datetime\":\n                  type = \"date\";\n\n                  break;\n\n               default:\n                  break;\n            }\n\n            fields.push({\n               id: f.columnName,\n               name: f.label,\n               filter: f.fieldIsFilterable(),\n               edit: false,\n               type: type,\n               format: columnFormat.format,\n               options: columnFormat.options,\n               ref: \"\",\n               key: false,\n               show: true,\n               abField: f,\n            });\n\n            return;\n         }\n\n         if (f.isSource()) {\n            const linkedDcs = this.view.application.datacollectionsIncluded(\n               (dc) =>\n                  this.settings.datacollectionIDs.includes(dc.id) &&\n                  dc.settings.datasourceID === f.settings.linkObject\n            );\n\n            (linkedDcs || []).forEach((linkDc) => {\n               fields.push({\n                  id: f.id,\n                  name: f.label,\n                  filter: false,\n                  edit: false,\n                  type: \"reference\",\n                  ref: linkDc.id,\n                  key: false,\n                  show: false,\n               });\n            });\n         }\n      });\n\n      return fields;\n   }\n\n   async getData(datacollectionId) {\n      const datacollection = this.AB.datacollectionByID(datacollectionId);\n      if (!datacollection) return [];\n\n      const object = datacollection.datasource;\n      if (!object) return [];\n\n      await this.waitInitializingDCEvery(1000, datacollection);\n\n      const reportFields = this.getReportFields(datacollection);\n      const reportData = [];\n      const rawData = datacollection.getData();\n\n      (rawData || []).forEach((row) => {\n         const reportRow = { id: row.id };\n\n         reportRow[`${datacollection.id}.id`] = row.id;\n\n         object.fields().forEach((field) => {\n            const columnName = field.columnName;\n            const col = `${datacollection.id}.${columnName}`;\n\n            if (field) {\n               // FK value of the connect field\n               if (field.isConnection) {\n                  let $pk = field.datasourceLink.PK();\n                  if (Array.isArray(row[columnName]))\n                     reportRow[`${col}.id`] = row[columnName].map(\n                        (link) => link[$pk] || link.id || link\n                     );\n                  else if (row[columnName])\n                     reportRow[`${col}.id`] =\n                        row[columnName][$pk] ||\n                        row[columnName].id ||\n                        row[columnName];\n               } else reportRow[col] = field.format(row);\n            } else reportRow[col] = row[columnName];\n\n            const rField = reportFields.find(\n               (f) => f.id === columnName || f.id === field.id\n            );\n\n            if (!rField) return;\n\n            switch (rField.type) {\n               case \"text\":\n               case \"reference\":\n                  reportRow[col] = (reportRow[col] || \"\").toString();\n                  break;\n\n               case \"number\":\n                  reportRow[col] = parseFloat(\n                     (reportRow[col] || 0).toString().replace(/[^\\d.-]/g, \"\")\n                  );\n                  break;\n\n               case \"date\":\n                  reportRow[col] = row[columnName];\n                  if (reportRow[col]) {\n                     if (!(reportRow[col] instanceof Date))\n                        reportRow[col] = this.AB.rules.toDate(row[columnName]);\n                  } else reportRow[col] = \"\";\n                  break;\n            }\n         });\n\n         reportData.push(reportRow);\n      });\n\n      return reportData;\n   }\n\n   async onShow() {\n      super.onShow();\n\n      const ids = this.ids;\n      const $component = $$(ids.component);\n\n      if ($component != null && !this.__isShowing) {\n         this.__isShowing = true;\n\n         $component.reconstruct();\n      }\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewSchedulerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewScheduler_${baseView.id}`,\n         Object.assign(\n            {\n               scheduler: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const ab = this.AB;\n      const self = this;\n      const abWebix = this.AB.Webix;\n      const settings = this.settings;\n      const dc = this.datacollection;\n      const fieldName = dc?.datasource.fieldByID(\n         settings.dataviewFields.name\n      )?.columnName;\n      const fieldStart = dc?.datasource.fieldByID(\n         settings.dataviewFields.start\n      )?.columnName;\n      const fieldEnd = dc?.datasource.fieldByID(\n         settings.dataviewFields.end\n      )?.columnName;\n      const fieldAllDay = dc?.datasource.fieldByID(\n         settings.dataviewFields.allDay\n      )?.columnName;\n      const fieldRepeat = dc?.datasource.fieldByID(\n         settings.dataviewFields.repeat\n      )?.columnName;\n      const fieldCalendar = dc?.datasource.fieldByID(\n         settings.dataviewFields.calendar\n      )?.columnName;\n      const fieldEventColor = dc?.datasource.fieldByID(\n         settings.dataviewFields.color\n      )?.columnName;\n      const fieldNotes = dc?.datasource.fieldByID(\n         settings.dataviewFields.notes\n      )?.columnName;\n      const fieldOriginID = dc?.datasource.fieldByID(\n         settings.dataviewFields.originID\n      )?.columnName;\n      const fieldSectionID = dc?.datasource.fieldByID(\n         settings.dataviewFields.sectionID\n      )?.columnName;\n      const fieldUnitID = dc?.datasource.fieldByID(\n         settings.dataviewFields.unitID\n      )?.columnName;\n      const dcCalendar = ab.datacollectionByID(\n         this.settings.calendarDataviewID\n      );\n      const fieldTitle = dcCalendar?.datasource.fieldByID(\n         settings.calendarDataviewFields.title\n      )?.columnName;\n      const fieldCalendarColor = dcCalendar?.datasource.fieldByID(\n         settings.calendarDataviewFields.color\n      )?.columnName;\n      const fieldActive = dcCalendar?.datasource.fieldByID(\n         settings.calendarDataviewFields.active\n      )?.columnName;\n      const timelineOptions = [];\n\n      Object.keys(settings.timeline).forEach((key) => {\n         if (settings.timeline[key] === 0) return;\n\n         timelineOptions.push({\n            id: `${key}`,\n            value: `${key.charAt(0).toUpperCase()}${key.slice(1)}`,\n         });\n      });\n\n      const _ui = super.ui([\n         {\n            padding: 6,\n            cols: [\n               { view: \"label\", width: 150, label: \"Export events data to: \" },\n               {\n                  view: \"button\",\n                  width: 100,\n                  value: this.label(\"Excel\"),\n                  hidden: settings.export.excel === 0,\n                  click: () => {\n                     abWebix.toExcel(ids.scheduler);\n                  },\n               },\n               {\n                  view: \"button\",\n                  width: 100,\n                  value: this.label(\"CSV\"),\n                  hidden: settings.export.csv === 0,\n                  click: () => {\n                     abWebix.toCSV(ids.scheduler);\n                  },\n               },\n               {\n                  view: \"button\",\n                  width: 100,\n                  value: this.label(\"PDF\"),\n                  hidden: settings.export.pdf === 0,\n                  click: () => {\n                     abWebix.toPDF(ids.scheduler, { autowidth: true });\n                  },\n               },\n               {},\n            ],\n         },\n         {\n            id: ids.scheduler,\n            view: \"scheduler\",\n            date: new Date(),\n            readonly: settings.readonly === 1,\n            timeline: settings.timeline.timeline === 1,\n            override: new Map([\n               [\n                  scheduler.services.Backend,\n                  class MyBackend extends reports.services.Backend {\n                     async addCalendar(obj) {\n                        if (dcCalendar == null) return {};\n\n                        const data = {};\n\n                        data[fieldTitle] = obj.text;\n                        data[fieldCalendarColor] = obj.color;\n                        data[fieldActive] = obj.active;\n\n                        const response = await dcCalendar.model.create(data);\n\n                        return { id: response.id };\n                     }\n                     async addEvent(obj) {\n                        if (dc == null) return {};\n\n                        const data = {};\n\n                        data[fieldName] = obj.text;\n                        data[fieldStart] = new Date(obj.start_date);\n                        data[fieldEnd] = new Date(obj.end_date);\n                        data[fieldAllDay] = obj.all_day;\n                        data[fieldRepeat] = obj.recurring;\n                        data[fieldCalendar] = obj.calendar;\n                        data[fieldEventColor] = obj.color;\n                        data[fieldSectionID] = obj.section || \"No Section\";\n                        data[fieldUnitID] = obj.units || \"No Unit\";\n                        data[fieldNotes] = obj.details;\n                        data[fieldOriginID] = obj.origin_id;\n\n                        const response = await dc.model.create(data);\n\n                        return { id: response.id };\n                     }\n                     async calendars() {\n                        // if we manage a datacollection, then make sure it has started\n                        // loading it's data when we are showing our component.\n                        if (dcCalendar == null) return [];\n\n                        await self.waitInitializingDCEvery(1000, dcCalendar);\n\n                        return dcCalendar.getData().map((e) => {\n                           return {\n                              id: e.id,\n                              text: e[fieldTitle],\n                              color: e[fieldCalendarColor],\n                              active: e[fieldActive],\n                           };\n                        });\n                     }\n                     async events(params) {\n                        // if we manage a datacollection, then make sure it has started\n                        // loading it's data when we are showing our component.\n                        if (dc == null) return [];\n\n                        await self.waitInitializingDCEvery(1000, dc);\n\n                        const units = await this.units();\n                        const sections = await this.sections();\n\n                        return dc.getData().map((e) => {\n                           let unitID = units.find(\n                              (u) => u.id === e[fieldUnitID]\n                           )?.id;\n                           let sectionID = sections.find(\n                              (s) => s.id === e[fieldSectionID]\n                           )?.id;\n\n                           if (sectionID == null || unitID == null) {\n                              sectionID = sectionID || \"No Section\";\n                              unitID = unitID || \"No Unit\";\n\n                              // const data = {};\n\n                              // data[fieldSectionID] = sectionID;\n                              // data[fieldUnitID] = unitID;\n\n                              // dc.model.update(e.id, data);\n                           }\n\n                           return {\n                              id: e.id,\n                              text: e[fieldName],\n                              start_date: abWebix.Date.dateToStr(\n                                 \"%Y-%m-%d %H:%i:%s\"\n                              )(e[fieldStart]),\n                              end_date: abWebix.Date.dateToStr(\n                                 \"%Y-%m-%d %H:%i:%s\"\n                              )(e[fieldEnd]),\n                              all_day: e[fieldAllDay],\n                              recurring: e[fieldRepeat],\n                              calendar: e[fieldCalendar],\n                              color: e[fieldEventColor],\n                              section: sectionID,\n                              units: unitID,\n                              details: e[fieldNotes],\n                              origin_id: e[fieldOriginID],\n                           };\n                        });\n                     }\n                     async removeCalendar(id) {\n                        await dcCalendar.model.delete(id);\n                     }\n                     async removeEvent(id) {\n                        await dc.model.delete(id);\n                     }\n                     async sections() {\n                        return [\n                           { text: \"No Section\", id: \"No Section\" },\n                        ].concat(\n                           settings.timelineSectionList.split(\", \").map((e) => {\n                              return {\n                                 id: e,\n                                 text: e,\n                              };\n                           })\n                        );\n                     }\n                     async units() {\n                        return [{ id: \"No Unit\", value: \"No Unit\" }].concat(\n                           settings.unitList.split(\", \").map((e) => {\n                              return {\n                                 id: e,\n                                 value: e,\n                              };\n                           })\n                        );\n                     }\n                     async updateCalendar(id, obj) {\n                        if (dcCalendar == null) return {};\n\n                        const data = {};\n\n                        data[fieldTitle] = obj.text;\n                        data[fieldCalendarColor] = obj.color;\n                        data[fieldActive] = obj.active;\n\n                        await dcCalendar.model.update(id, data);\n                     }\n                     async updateEvent(id, obj, mode, date) {\n                        if (dc == null) return {};\n\n                        const data = {};\n\n                        data[fieldName] = obj.text;\n                        data[fieldStart] = new Date(obj.start_date);\n                        data[fieldEnd] = new Date(obj.end_date);\n                        data[fieldAllDay] = obj.all_day;\n                        data[fieldRepeat] = obj.recurring;\n                        data[fieldCalendar] = obj.calendar;\n                        data[fieldEventColor] = obj.color;\n                        data[fieldSectionID] = obj.section || \"No Section\";\n                        data[fieldUnitID] = obj.units || \"No Unit\";\n                        data[fieldNotes] = obj.details;\n                        data[fieldOriginID] = obj.origin_id;\n\n                        await dc.model.update(id, data);\n                     }\n                  },\n               ],\n               [\n                  scheduler.views[\"bars/nav\"],\n                  class CustomBarsView extends scheduler.views[\"bars/nav\"] {\n                     config() {\n                        const uiNav = super.config();\n                        uiNav.width = 160;\n                        uiNav.options = timelineOptions;\n                        return uiNav;\n                     }\n                  },\n               ],\n               [\n                  scheduler.views[\"bars/navpopup\"],\n                  class CustomNavPopupView extends scheduler.views[\n                     \"bars/navpopup\"\n                  ] {\n                     config() {\n                        const uiNavPopup = super.config();\n\n                        const options = timelineOptions.map((e) =>\n                           Object.assign({ icon: `shi-${e.id}` }, e)\n                        );\n\n                        if (this.app.config.calendars)\n                           uiNavPopup.body.body.rows[0].data = options;\n                        else uiNavPopup.body.data = options;\n\n                        return uiNavPopup;\n                     }\n                  },\n               ],\n               [\n                  scheduler.views[\"modes/day/multiday\"],\n                  class CustomModesDayMultiday extends scheduler.views[\n                     \"modes/day/multiday\"\n                  ] {\n                     LimitData(data) {\n                        // Get an error the case when the data parameter is undefined.\n                        super.LimitData(data || []);\n                     }\n                  },\n               ],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async onShow() {\n      super.onShow();\n\n      const ids = this.ids;\n      const $component = $$(ids.component);\n\n      if ($component != null && !this.__isShowing) {\n         this.__isShowing = true;\n\n         $component.reconstruct();\n      }\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewTabComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewTab_${baseView.id}`,\n         Object.assign(\n            {\n               tab: \"\",\n\n               sidebar: \"\",\n               expandMenu: \"\",\n               collapseMenu: \"\",\n\n               popupTabManager: \"\",\n               popupTabManagerForm: \"\",\n               popupTabManagerSaveButton: \"\",\n            },\n            ids\n         )\n      );\n\n      this.viewComponents =\n         this.viewComponents ||\n         baseView\n            .views((v) => v.getUserAccess())\n            .map((v) => {\n               return {\n                  view: v,\n                  // component: v.component(App)\n               };\n            });\n   }\n\n   ui() {\n      const ids = this.ids;\n      const baseView = this.view;\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      let _ui = null;\n\n      // We are going to make a custom icon using the first letter of a menu item for menu items that don't have an icon\n      // to do this we need to modify the default template with the method webix recommended form this snippet https://snippet.webix.com/b566d9f8\n      abWebix.type(abWebix.ui.tree, {\n         baseType: \"sideBar\", // inherit everything else from sidebar type\n         name: \"customIcons\",\n         icon: (obj, common) => {\n            if (obj.icon.length)\n               return [\n                  \"<span class='webix_icon webix_sidebar_icon fa fa-fw fa-\",\n                  obj.icon,\n                  \"'></span>\",\n               ].join(\"\");\n\n            return [\n               \"<span class='webix_icon webix_sidebar_icon sidebarCustomIcon'>\",\n               obj.value.charAt(0).toUpperCase(),\n               \"</span>\",\n            ].join(\"\");\n         },\n      });\n\n      const viewComponents = this.viewComponents;\n      const settings = this.settings;\n\n      if (viewComponents.length > 0) {\n         if (settings.stackTabs) {\n            // define your menu items from the view components\n            const menuItems = viewComponents.map((vc) => {\n               const view = vc.view;\n\n               return {\n                  id: `${view.id}_menu`,\n                  value: view.label,\n                  icon: view.tabicon ? view.tabicon : \"\",\n               };\n            });\n\n            if (menuItems.length) {\n               // create a menu item for the collapse option to use later\n               const collapseMenu = {\n                  id: ids.collapseMenu,\n                  value: this.label(\"Collapse Menu\"),\n                  icon: \"chevron-circle-left\",\n               };\n\n               // create a menu item from the expand option to use later\n               const expandMenu = {\n                  id: ids.expandMenu,\n                  value: this.label(\"Expand Menu\"),\n                  icon: \"chevron-circle-right\",\n                  hidden: true,\n               };\n\n               // find out what the first option is so we can set it later\n               let selectedItem = `${viewComponents[0].view.id}_menu`;\n\n               const abStorage = ab.Storage;\n               const sidebar = {\n                  view: \"sidebar\",\n                  type: \"customIcons\", // define the sidebar type with the new template created above\n                  id: ids.sidebar,\n                  height: settings.height,\n                  width: settings.sidebarWidth ? settings.sidebarWidth : 0,\n                  scroll: true,\n                  position: settings.sidebarPos ? settings.sidebarPos : \"left\",\n                  css: settings.darkTheme ? \"webix_dark\" : \"\",\n                  data: menuItems.concat(collapseMenu), // add you menu items along with the collapse option to start\n                  on: {\n                     onItemClick: (id) => {\n                        // when a menu item is clicked\n                        if (id === ids.collapseMenu) {\n                           // if it was the collapse menu item\n                           setTimeout(() => {\n                              const $sidebar = $$(ids.sidebar);\n\n                              // remove the collapse option from the menu\n                              $sidebar.remove(ids.collapseMenu);\n                              // add the expand option to the menu\n                              $sidebar.add(expandMenu);\n                              // toggle the sidebar state\n                              $sidebar.toggle();\n                              // we just clicked the collapse...but we don't wanted highlighted\n                              // so highlight the previously selected menu item\n                              $sidebar.select(selectedItem);\n                              // store this state in local storage the user preference is\n                              // remembered next time they see this sidebar\n                              abStorage.set(\n                                 `${ids.tab}-state`,\n                                 $sidebar.getState()\n                              );\n                           }, 0);\n                        } else if (id === ids.expandMenu) {\n                           setTimeout(() => {\n                              const $sidebar = $$(ids.sidebar);\n\n                              // remove the expand option from the menu\n                              $sidebar.remove(ids.expandMenu);\n                              // add the collapse option to the menu\n                              $sidebar.add(collapseMenu);\n                              // toggle the sidebar state\n                              $sidebar.toggle();\n                              // we just clicked the collapse...but we don't wanted highlighted\n                              // so highlight the previously selected menu item\n                              $sidebar.select(selectedItem);\n                              // store this state in local storage the user preference is\n                              // remembered next time they see this sidebar\n                              abStorage.set(\n                                 `${ids.tab}-state`,\n                                 $sidebar.getState()\n                              );\n                           }, 0);\n                        } else {\n                           // store the selecte menu item just in case someone toggles the menu later\n                           selectedItem = id;\n                           // if the menu item is a regular menu item\n                           // call the onShow with the view id to load the view\n\n                           id = id.replace(\"_menu\", \"\");\n                           let node = $$(id);\n                           if (node) {\n                              node.show(false, false);\n                           } else {\n                              // How often does this occure?\n                              let msg = `ABViewTabComponent[${this.name}][${this.id}] could not resolve UI panel for provided menu [${selectedItem}].`;\n                              this.AB.notify(\"developer\", msg, {});\n                           }\n                           // $$(id).show(false, false);\n\n                           // onShow(id);\n                        }\n                     },\n                     onSelectChange: () => {\n                        addDataCy();\n                     },\n                     onAfterRender: () => {\n                        addDataCy();\n                     },\n                  },\n               };\n\n               const multiview = {\n                  view: \"multiview\",\n                  id: ids.tab,\n                  keepViews: true,\n                  minWidth: settings.minWidth,\n                  cells: viewComponents.map((view) => {\n                     const tabUi = {\n                        id: view.view.id,\n                        // ui will be loaded when its tab is opened\n                        view: \"layout\",\n                        rows: [],\n                     };\n\n                     return tabUi;\n                  }),\n                  on: {\n                     onViewChange: (prevId, nextId) => {\n                        this.onShow(nextId);\n                     },\n                  },\n               };\n\n               const addDataCy = function () {\n                  const $sidebar = $$(ids.sidebar);\n\n                  // set ids of controller buttons\n                  const collapseNode = $sidebar?.$view.querySelector(\n                     `[webix_tm_id=\"${ids.collapseMenu}\"]`\n                  );\n\n                  if (collapseNode)\n                     collapseNode.setAttribute(\n                        \"data-cy\",\n                        `tab-collapseMenu-${ids.collapseMenu}`\n                     );\n\n                  const expandNode = $sidebar?.$view.querySelector(\n                     `[webix_tm_id=\"${ids.expandMenu}\"]`\n                  );\n\n                  if (expandNode)\n                     expandNode.setAttribute(\n                        \"data-cy\",\n                        `tab-expandMenu-${ids.expandMenu}`\n                     );\n\n                  baseView.views((view) => {\n                     const node = $sidebar.$view.querySelector(\n                        `[webix_tm_id=\"${view.id}_menu\"]`\n                     );\n\n                     if (!node) {\n                        return;\n                     }\n\n                     node.setAttribute(\n                        \"data-cy\",\n                        `tab-${view.name.replace(\" \", \"\")}-${view.id}-${\n                           baseView.id\n                        }`\n                     );\n                  });\n               };\n\n               let columns = [sidebar, multiview];\n\n               if (settings.sidebarPos === \"right\") {\n                  columns = [multiview, sidebar];\n               }\n\n               _ui = {\n                  cols: columns,\n               };\n            } else\n               _ui = {\n                  view: \"spacer\",\n               };\n         } else {\n            const cells = baseView\n               .views((view) => {\n                  const accessLevel = view.getUserAccess();\n\n                  if (accessLevel > 0) {\n                     return view;\n                  }\n               })\n               .map((view) => {\n                  const tabUi = {\n                     id: view.id,\n                     // ui will be loaded when its tab is opened\n                     view: \"layout\",\n                     rows: [],\n                  };\n\n                  let tabTemplate = \"\";\n\n                  // tab icon\n                  if (view.tabicon) {\n                     if (settings.iconOnTop)\n                        tabTemplate = [\n                           \"<div class='ab-tabIconContainer'><span class='fa fa-lg fa-fw fa-\",\n                           view.tabicon,\n                           \"'></span><br/>\",\n                           view.label,\n                           \"</div>\",\n                        ].join(\"\");\n                     else\n                        tabTemplate = [\n                           \"<span class='fa fa-lg fa-fw fa-\",\n                           view.tabicon,\n                           \"'></span> \",\n                           view.label,\n                        ].join(\"\");\n                  }\n\n                  // no icon\n                  else tabTemplate = view.label;\n\n                  return {\n                     header: tabTemplate,\n                     body: tabUi,\n                  };\n               });\n\n            // if there are cells to display then return a tabview\n            if (cells.length) {\n               _ui = {\n                  rows: [\n                     {\n                        view: \"tabview\",\n                        id: ids.tab,\n                        minWidth: settings.minWidth,\n                        height: settings.height,\n                        tabbar: {\n                           height: 60,\n                           type: \"bottom\",\n                           css: settings.darkTheme ? \"webix_dark\" : \"\",\n                           on: {\n                              onAfterRender: () => {\n                                 baseView.views((view) => {\n                                    const node = $$(\n                                       ids.tab\n                                    ).$view.querySelector(\n                                       `[button_id=\"${view.id}\"]`\n                                    );\n\n                                    if (!node) return;\n\n                                    node.setAttribute(\n                                       \"data-cy\",\n                                       `tab ${view.name} ${view.id} ${baseView.id}`\n                                    );\n                                 });\n                              },\n                           },\n                        },\n                        multiview: {\n                           on: {\n                              onViewChange: (prevId, nextId) => {\n                                 this.onShow(nextId);\n                              },\n                           },\n                        },\n                        cells: cells,\n                     },\n                  ],\n               };\n            }\n            // else we return a spacer\n            else\n               _ui = {\n                  view: \"spacer\",\n               };\n         }\n      } else\n         _ui = {\n            view: \"spacer\",\n         };\n\n      _ui = super.ui([_ui]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n      const $tab = $$(ids.tab);\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      if ($tab) abWebix.extend($tab, abWebix.ProgressBar);\n\n      const baseView = this.view;\n      const viewComponents = this.viewComponents;\n\n      viewComponents.forEach((vc) => {\n         // vc.component.init(AB);\n\n         // Trigger 'changePage' event to parent\n         this.eventAdd({\n            emitter: vc.view,\n            eventName: \"changePage\",\n            listener: (...p) => this.changePage(...p),\n         });\n      });\n\n      // Trigger 'changeTab' event to parent\n      this.eventAdd({\n         emitter: baseView,\n         eventName: \"changeTab\",\n         listener: (...p) => this.changeTab(...p),\n      });\n\n      // initialize the sidebar and figure out if it should be collased or not\n      const $sidebar = $$(ids.sidebar);\n\n      if (!$sidebar) return;\n\n      const state = await ab.Storage.get(`${ids.tab}-state`);\n\n      if (!state) return;\n\n      // create a menu item for the collapse option to use later\n      const collapseMenu = {\n         id: ids.collapseMenu,\n         value: this.label(\"Collapse Menu\"),\n         icon: \"chevron-circle-left\",\n      };\n\n      // create a menu item from the expand option to use later\n      const expandMenu = {\n         id: ids.expandMenu,\n         value: this.label(\"Expand Menu\"),\n         icon: \"chevron-circle-right\",\n         hidden: true,\n      };\n\n      // this will collapse or expand the sidebar\n      $sidebar.setState(state);\n\n      const checkCollapseMenu = $sidebar.getItem(ids.collapseMenu) ?? null;\n      const checkExpandMenu = $sidebar.getItem(ids.expandMenu) ?? null;\n\n      // if the state is collapsed we need to make sure the expand option is available\n      if (state.collapsed) {\n         if (checkCollapseMenu && checkExpandMenu)\n            // $sidebar.remove(ids.collapseMenu);\n            $sidebar.add(expandMenu);\n      } else if (checkCollapseMenu && checkExpandMenu)\n         // $sidebar.remove(ids.collapseMenu);\n         $sidebar.add(collapseMenu);\n   }\n\n   changePage(pageId) {\n      const $tab = $$(this.ids.tab);\n\n      $tab?.blockEvent();\n      this.view.changePage(pageId);\n      $tab?.unblockEvent();\n   }\n\n   changeTab(tabViewId) {\n      const baseView = this.view;\n      const $tabViewId = $$(tabViewId);\n\n      // switch tab view\n      this.toggleParent(baseView.parent);\n\n      if (this.settings.stackTabs)\n         if (!$tabViewId.isVisible()) {\n            const showIt = setInterval(() => {\n               if ($tabViewId.isVisible()) clearInterval(showIt);\n\n               $tabViewId.show(false, false);\n            }, 200);\n         } else $$(this.ids.tab).setValue(tabViewId);\n   }\n\n   toggleParent(view) {\n      const $viewID = $$(view.id);\n\n      if (view.key === \"tab\" || view.key === \"viewcontainer\") {\n         $viewID?.show(false, false);\n      }\n      if (view.parent) {\n         this.toggleParent(view.parent);\n      }\n   }\n\n   onShow(viewId) {\n      const ids = this.ids;\n\n      let defaultViewIsSet = false;\n\n      const $sidebar = $$(ids.sidebar);\n\n      // if no viewId is given, then try to get the currently selected ID\n      if (!viewId && $sidebar)\n         viewId = $sidebar.getSelectedId().replace(\"_menu\", \"\");\n\n      const baseView = this.view;\n      const viewComponents = this.viewComponents;\n\n      viewComponents.forEach((vc) => {\n         // set default view id\n         const currView = baseView.views((view) => {\n            return view.id === vc.view.id;\n         });\n\n         let accessLevel = 0;\n\n         if (currView.length) accessLevel = currView[0].getUserAccess();\n\n         // choose the 1st View if we don't have one we are looking for.\n         if (!viewId && !defaultViewIsSet && accessLevel > 0) {\n            viewId = vc.view.id;\n\n            defaultViewIsSet = true;\n         }\n\n         // create view's component once\n         const $tab = $$(ids.tab);\n         const settings = this.settings;\n\n         if (!vc?.component && vc?.view?.id === viewId) {\n            // show loading cursor\n            if ($tab?.showProgress) $tab.showProgress({ type: \"icon\" });\n\n            vc.component = vc.view.component();\n\n            const $viewID = $$(vc.view.id);\n            const ab = this.AB;\n            const abWebix = ab.Webix;\n\n            if (settings.stackTabs) {\n               // update multiview UI\n               abWebix.ui(\n                  {\n                     // able to 'scroll' in tab view\n                     id: vc.view.id,\n                     view: \"scrollview\",\n                     css: \"ab-multiview-scrollview\",\n                     body: vc.component.ui(),\n                  },\n                  $viewID\n               );\n            } else {\n               // update tab UI\n               abWebix.ui(\n                  {\n                     // able to 'scroll' in tab view\n                     id: vc.view.id,\n                     view: \"scrollview\",\n                     css: \"ab-tabview-scrollview\",\n                     body: vc.component.ui(),\n                  },\n                  $viewID\n               );\n            }\n\n            // for tabs we need to look at the view's accessLevels\n            accessLevel = vc.view.getUserAccess();\n\n            vc.component.init(ab, accessLevel);\n\n            // done\n            setTimeout(() => {\n               // $$(v.view.id).adjust();\n\n               $tab?.hideProgress?.();\n               // check if tab has a hint\n               // if (vc?.view?.settings?.hintID) {\n               //    // fetch the steps for the hint\n               //    let hint = ab.hintID(vc.view.settings.hintID);\n               //    hint.createHintUI();\n               // }\n            }, 10);\n         }\n\n         // show UI\n         if (vc?.view?.id === viewId && vc?.component?.onShow)\n            vc.component.onShow();\n\n         if (settings.stackTabs && vc?.view?.id === viewId) {\n            $$(viewId).show(false, false);\n            $sidebar.select(`${viewId}_menu`);\n         }\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewTextComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewText_${baseView.id}`,\n         Object.assign(\n            {\n               text: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const settings = this.settings;\n\n      const _uiText = {\n         id: ids.text,\n         view: \"template\",\n         minHeight: 10,\n         css: \"ab-custom-template\",\n         borderless: true,\n      };\n\n      if (settings.height) _uiText.height = settings.height;\n      else _uiText.autoheight = true;\n\n      const _ui = super.ui([_uiText]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   displayText(value) {\n      const ids = this.ids;\n      const result = this.view.displayText(value, ids.text);\n\n      const $text = $$(ids.text);\n\n      if (!$text) return;\n\n      $text.define(\"template\", result);\n      $text.refresh();\n   }\n\n   onShow() {\n      super.onShow();\n\n      // listen DC events\n      const dataview = this.datacollection;\n      const baseView = this.view;\n\n      if (dataview && baseView.parent.key !== \"dataview\")\n         baseView.eventAdd({\n            emitter: dataview,\n            eventName: \"changeCursor\",\n            listener: (...p) => this.displayText(...p),\n         });\n\n      this.displayText();\n   }\n};\n","import ClassUI from \"../../../../ui/ClassUI\";\n\nexport default class ABViewProperty extends ClassUI {\n   // constructor() {}\n\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {};\n   }\n\n   /** == Property == */\n   /**\n    * @function propertyComponent\n    * return the view and logic to display in property panel\n    *\n    * @return {Object} - {\n    * \t\t\t\t\t\tui: webix element,\n    * \t\t\t\t\t\tinit: function,\n    * \t\t\t\t\t\tlogic: object\n    * \t\t\t\t\t}\n    */\n   static propertyComponent() {\n      let ui = {\n         view: \"template\",\n         template: \"No UI\",\n      };\n\n      let init = (options) => {\n         // register callbacks:\n         for (var c in logic.callbacks) {\n            logic.callbacks[c] = options[c] || logic.callbacks[c];\n         }\n      };\n\n      let logic = {\n         callbacks: {},\n      };\n\n      return {\n         ui: ui,\n         init: init,\n         logic: logic,\n      };\n   }\n\n   fromSettings(settings) {\n      this.settings = settings;\n   }\n\n   toSettings() {\n      return this.settings || {};\n   }\n\n   /** == UI == */\n   /**\n    * @function component\n    * return the view and logic to display in display widget\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    *\n    * @return {Object} - {\n    * \t\t\t\t\t\tui: webix element,\n    * \t\t\t\t\t\tinit: function,\n    * \t\t\t\t\t\tlogic: object\n    * \t\t\t\t\t}\n    */\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      let ui = {\n         view: \"template\",\n         template: \"No UI\",\n      };\n\n      let init = (options) => {\n         // register callbacks:\n         for (var c in logic.callbacks) {\n            logic.callbacks[c] = options[c] || logic.callbacks[c];\n         }\n      };\n\n      let logic = {\n         callbacks: {},\n      };\n\n      return {\n         ui: ui,\n         init: init,\n         logic: logic,\n      };\n   }\n}\n","import ABViewProperty from \"./ABViewProperty\";\nimport ABViewFormButton from \"../ABViewFormButton\";\nimport ABViewPDFImporter from \"../ABViewPDFImporter\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nexport default class ABViewPropertyAddPage extends ABViewProperty {\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         formView: \"none\", // id of form to add new data\n      };\n   }\n\n   static propertyComponent(App, idBase) {\n      let ids = {\n         formView: `${idBase}_formView`,\n      };\n\n      let ui = {\n         id: ids.formView,\n         name: \"formView\",\n         view: \"richselect\",\n         label: L(\"Add New Form\"),\n         labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n         on: {\n            onChange: (newVal, oldVal) => {\n               if (newVal == L(\"No add new option\")) {\n                  $$(ids.formView).setValue(\"\");\n               }\n\n               _logic.callbacks.onSave();\n            },\n         },\n      };\n\n      let _init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      let _logic = {\n         callbacks: {\n            onSave: function () {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         setSettings: (view, settings = {}) => {\n            if (view == null) return;\n\n            // Set the options of the possible edit forms\n            let editForms = [\n               {\n                  id: \"none\",\n                  value: L(\"No add new option\"),\n               },\n            ];\n\n            let pagesHasForm = view\n               .pageRoot()\n               .pages((p) => {\n                  return p.views((v) => {\n                     return (\n                        v &&\n                        v.key == \"form\" &&\n                        v.datacollection &&\n                        v.datacollection.datasource &&\n                        v.datacollection.datasource.id ==\n                           view.field().settings.linkObject\n                     );\n                  }, true).length;\n               }, true)\n               .map((p) => {\n                  return {\n                     id: p.id,\n                     value: p.label,\n                  };\n               });\n\n            editForms = editForms.concat(pagesHasForm);\n\n            let $selector = $$(ids.formView);\n            if ($selector) {\n               $selector.define(\"options\", editForms);\n               $selector.define(\n                  \"value\",\n                  settings.formView || this.default.formView\n               );\n               $selector.refresh();\n            }\n         },\n\n         getSettings: (view) => {\n            let settings = view.settings || {};\n\n            settings.formView = $$(ids.formView).getValue();\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: ui,\n         init: _init,\n         setSettings: _logic.setSettings,\n         getSettings: _logic.getSettings,\n      };\n   }\n\n   fromSettings(settings = {}) {\n      this.settings = this.settings || {};\n      this.settings.formView =\n         settings.formView || this.constructor.default.formView;\n   }\n\n   getIds(idBase, App) {\n      return {\n         popup: App._App.unique(`${idBase}_popup_add_new`),\n         field: idBase.split(\"_\")[1],\n         button: App._App.unique(`${idBase}_popup_add_new_button`),\n      };\n   }\n\n   component(App, idBase) {\n      // This can be overwritten by creating a different getIds before calling .super\n      let ids = this.getIds(idBase, App);\n\n      let ui = \"\";\n\n      if (\n         this.settings.formView &&\n         this.settings.formView != this.constructor.default.formView\n      ) {\n         // let iDiv = document.createElement(\"div\");\n         // iDiv.className = \"ab-connect-add-new\";\n         const dataCy = `add new CR button ${this.settings.formView} ${ids.field}`;\n         // iDiv.innerHTML = `<a href=\"javascript:void(0);\" class=\"fa fa-plus ab-connect-add-new-link\" data-cy=\"${dataCy}\"></a>`;\n         // iDiv.appendChild(node);\n         // ui = iDiv.outerHTML;\n         ui = {\n            id: ids.button,\n            view: \"button\",\n            type: \"icon\",\n            icon: \"fa fa-plus\",\n            width: 32,\n            height: 32,\n            css: \"webix_primary ab-connect-add-new-link\",\n            on: {\n               onAfterRender: () => {\n                  $$(ids.button)\n                     ?.$view.querySelector(\"button\")\n                     .setAttribute(\"data-cy\", dataCy);\n               },\n            },\n         };\n      }\n\n      let _logic = {\n         callbacks: {\n            onSaveData: (saveData) => {\n               if ($$(ids.popup)) $$(ids.popup).close();\n            },\n            onCancel: () => {\n               if ($$(ids.popup)) $$(ids.popup).close();\n\n               return false;\n            },\n            onClearOnLoad: () => {\n               return true;\n            },\n            clearOnLoad: () => {\n               return true;\n            },\n         },\n\n         applicationLoad: (application) => {\n            this._application = application;\n         },\n\n         onClick: (dc) => {\n            let pageId = this.settings.formView;\n            let page = this._application.pages((p) => p.id == pageId, true)[0];\n\n            return _logic.openFormPopup(page, dc);\n         },\n\n         /**\n          * @method openFormPopup\n          *\n          * @param page {ABViewPage}\n          * @param dc {ABDataCollection}\n          */\n         openFormPopup: (page, dc) => {\n            return new Promise((resolve, reject) => {\n               if (this._application == null) return resolve();\n\n               if ($$(ids.popup)) {\n                  $$(ids.popup).show();\n                  return resolve();\n               }\n\n               // Clone page so we modify without causing problems\n               let pageClone = page.clone(null, null, { ignoreSubPages: true });\n               pageClone.id = this._application.AB.uuid(); // lets take the stored id can create a new dynamic one so our views don't duplicate\n               // pageClone.id = pageClone.id + \"-\" + webix.uid(); // lets take the stored id can create a new dynamic one so our views don't duplicate\n               let popUpComp = pageClone.component();\n               let ui = popUpComp.ui();\n\n               // Listen 'saved' event of the form widget\n               const saveViews =\n                  pageClone.views(\n                     (v) =>\n                        v instanceof ABViewFormButton ||\n                        v instanceof ABViewPDFImporter,\n                     true\n                  ) ?? [];\n\n               saveViews.forEach((view) => {\n                  const v =\n                     view instanceof ABViewFormButton ? view.parent : view;\n                  v.on(\"saved\", (savedData) => {\n                     _logic?.callbacks?.onSaveData(savedData);\n                     // ? is there ever a case where we want to keep an add popup open after saving?\n                     // ! setting this to always close\n\n                     if ($$(ids.popup)) {\n                        $$(ids.popup).close();\n                     } else {\n                        var popup = this.getTopParentView();\n                        popup.close();\n                     }\n                  });\n               });\n\n               let popupTemplate = {\n                  view: \"window\",\n                  id: ids.popup,\n                  modal: true,\n                  position: \"center\",\n                  // position:function(stthis.__addPageToolate){\n                  // \tstate.left = x + 20this.__addPageTool; // offset the popups\n                  // \tstate.top = y + 20;this.__addPageTool\n                  // },\n                  resize: true,\n                  width: parseInt(this.settings.popupWidth) || 700,\n                  height: parseInt(this.settings.popupHeight) + 44 || 450,\n                  css: \"ab-main-container\",\n                  head: {\n                     view: \"toolbar\",\n                     css: \"webix_dark\",\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: page.label,\n                           css: \"modal_title\",\n                           align: \"center\",\n                        },\n                        {\n                           view: \"button\",\n                           label: L(\"Close\"),\n                           autowidth: true,\n                           align: \"center\",\n                           click: function () {\n                              var popup = this.getTopParentView();\n                              popup.close();\n                           },\n                        },\n                     ],\n                  },\n                  body: {\n                     view: \"scrollview\",\n                     scroll: true,\n                     body: ui,\n                  },\n               };\n\n               // Create popup\n               webix.ui(popupTemplate).show();\n\n               // Initial UI components\n               const accessLevel = 3; // TODO: Is it correct\n               popUpComp.init(this._application.AB, accessLevel, {\n                  onSaveData: _logic.callbacks.onSaveData,\n                  onCancelClick: _logic.callbacks.onCancel,\n                  clearOnLoad: _logic.callbacks.clearOnLoad,\n                  onClearOnLoad: _logic.callbacks.onClearOnLoad,\n               });\n\n               popUpComp.onShow();\n\n               setTimeout(async () => {\n                  _logic.setDefaultValue(dc, pageClone);\n\n                  resolve();\n               }, 100);\n            });\n         },\n\n         setDefaultValue: (dc, page) => {\n            if (!dc) return;\n\n            let obj = dc.datasource;\n            if (!obj) return;\n\n            let linkedData = dc.getCursor();\n            if (!linkedData) return;\n\n            page.views().forEach((v) => {\n               if (!v || v.key != \"form\") return;\n\n               v.views().forEach((fView) => {\n                  if (fView.key != \"connect\" || fView.settings == null) return;\n\n                  let field = fView.field();\n                  if (field == null) return;\n\n                  let objLink = field.datasourceLink;\n                  if (objLink == null || objLink.id != obj.id) return;\n\n                  let data = {};\n                  let relationName = field.relationName();\n                  data[relationName] = {\n                     id: linkedData.id,\n                  };\n\n                  // Add custom index values\n                  let indexes = obj.indexes() || [];\n                  indexes.forEach((idx) => {\n                     (idx.fields || []).forEach((f) => {\n                        data[relationName][f.columnName] =\n                           linkedData[f.columnName];\n                     });\n                  });\n\n                  // Set label of selected item\n                  if (linkedData.text) {\n                     data[relationName].text = linkedData.text;\n                     data[relationName].value = data[relationName].text;\n                  } else {\n                     let rawData = {};\n                     rawData[relationName] = linkedData;\n                     data[relationName].text = field.format(rawData);\n                     data[relationName].value = data[relationName].text;\n                  }\n\n                  let comp = v.viewComponents[fView.id];\n                  if (!comp) return;\n\n                  const ui = typeof comp.ui == \"function\" ? comp.ui() : comp.ui;\n                  const inputId = ui?.inputId || ui?.rows?.[0]?.inputId;\n\n                  if (inputId) field.setValue($$(inputId), data);\n               });\n            });\n         },\n      };\n\n      let init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n         if (ui) {\n            for (let c in options) {\n               ui.on[c] = options[c];\n            }\n         }\n      };\n\n      return {\n         ui: ui,\n         init: init,\n\n         applicationLoad: _logic.applicationLoad,\n         onClick: _logic.onClick,\n         openFormPopup: _logic.openFormPopup,\n      };\n   }\n}\n","import ABViewPropertyAddPage from \"./ABViewPropertyAddPage\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nexport default class ABViewPropertyEditPage extends ABViewPropertyAddPage {\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         editForm: \"none\", // The url pointer of ABViewForm\n      };\n   }\n\n   static propertyComponent(App, idBase) {\n      let ids = {\n         formEdit: `${idBase}_editForm`,\n      };\n\n      let ui = {\n         id: ids.formEdit,\n         name: \"editForm\",\n         view: \"richselect\",\n         label: L(\"Edit Form\"),\n         labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n         on: {\n            onChange: (newVal, oldVal) => {\n               if (newVal == L(\"No add new option\")) {\n                  $$(ids.formEdit).setValue(\"\");\n               }\n\n               _logic.callbacks.onSave();\n            },\n         },\n      };\n\n      let _init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      let _logic = {\n         callbacks: {\n            onSave: function () {\n               console.warn(\"NO onSave()!\");\n            },\n            clearOnLoad: () => {\n               return false; // always false, we're trying to edit data\n            },\n         },\n\n         setSettings: (view, settings = {}) => {\n            if (view == null) return;\n            settings.clearOnLoad = false; // doesn't work\n\n            // Set the options of the possible edit forms\n            let editForms = [\n               {\n                  id: \"none\",\n\n                  value: L(\"No add new option\"),\n               },\n            ];\n\n            (view.pageRoot().pages(() => true, true) || []).forEach((p) => {\n               if (!p) return;\n\n               p.views(() => true, true).forEach((v) => {\n                  if (\n                     v &&\n                     v.key == \"form\" &&\n                     v.datacollection &&\n                     v.datacollection.datasource &&\n                     v.datacollection.datasource.id ==\n                        view.field().settings.linkObject\n                  ) {\n                     editForms.push({\n                        id: v.urlPointer(),\n                        value: `${p.label} - ${v.label}`,\n                     });\n                  }\n               });\n            });\n\n            let $selector = $$(ids.formEdit);\n            if ($selector) {\n               $selector.define(\"options\", editForms);\n               $selector.define(\n                  \"value\",\n                  settings.editForm || this.default.editForm\n               );\n               $selector.refresh();\n            }\n         },\n\n         getSettings: (view) => {\n            let settings = view.settings || {};\n\n            let $selector = $$(ids.formEdit);\n            let $selectPopup = $selector.getPopup();\n            let selectedItem = ($selectPopup.config.body.data || []).filter(\n               (opt) => opt.id == $selector.getValue()\n            )[0];\n            if (selectedItem) {\n               settings.editForm = selectedItem.id; // The url pointer of ABViewForm\n            }\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: ui,\n         init: _init,\n         setSettings: _logic.setSettings,\n         getSettings: _logic.getSettings,\n      };\n   }\n\n   fromSettings(settings = {}) {\n      this.settings = this.settings || {};\n      this.settings.editForm =\n         settings.editForm || this.constructor.default.editForm;\n   }\n\n   component(App, idBase) {\n      // Overwrite the popup-lookup function\n      function getIds(idBase, App) {\n         return {\n            popup: App._App.unique(`${idBase}_popup_edit_form`),\n            field: idBase.split(\"_\")[1],\n         };\n      }\n      this.getIds = getIds;\n\n      // call to addpage\n      let comp = super.component(App, idBase);\n\n      comp.onClick = () => {\n         if (\n            !this._application ||\n            !this.settings.editForm ||\n            this.settings.editForm == this.constructor.default.editForm\n         )\n            return Promise.resolve();\n\n         let form = this._application.urlResolve(this.settings.editForm);\n         if (!form) return Promise.resolve();\n\n         let page = form.pageParent();\n         if (!page) return Promise.resolve();\n\n         return comp.openFormPopup(page);\n      };\n\n      return comp;\n   }\n}\n","/*\n * ABViewPropertyFilterData\n * This is a displayable ui component that will manage displaying a\n * means of searching for the user.\n *\n * This component will emit: \"filter.data\" when one of the filter options\n * have been enabled.\n *    \"filter.data\" has 2 parameters: fnFilter, filterRules\n *       fnFilter {function} when passed a row of data from the grid,\n *                return true/false if it passes the filter.\n *       filterRules {array} of each of the filter rules that have been\n *                created. Note: the fnFilter still checks the validity\n *                of the row based on these rules.\n *                (this is used for the parent component to indicate how\n *                many rules are currently applied to the data being displayed)\n */\nconst ABMLClass = require(\"../../ABMLClass\");\nimport ABViewProperty from \"./ABViewProperty\";\nimport ABViewComponent from \"../viewComponent/ABViewComponent\";\n\n// const ABViewGridFilterRule = require(\"../../../rules/ABViewGridFilterRule\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nclass FilterRuleSettings extends ABMLClass {\n   constructor() {\n      super([\"label\"], AB);\n   }\n\n   fromSettings(settings) {\n      super.fromValues(settings);\n      this.filters = settings.filters;\n   }\n\n   toSettings() {\n      let obj = super.toObj();\n      obj.filters = this.filters;\n      return obj;\n   }\n}\n\nclass ABViewPropertyFilterDataComponent extends ABViewComponent {\n   constructor(viewPropertyFilterData, idBase) {\n      var base = idBase || viewPropertyFilterData.idBase;\n      super(base, {});\n   }\n}\n\nexport default class ABViewPropertyFilterData extends ABViewProperty {\n   constructor(AB, idBase) {\n      super(idBase, {\n         buttonAddfilter: \"\",\n         filterPanel: \"\",\n         globalFilterFormContainer: \"\",\n         globalFilterForm: \"\",\n         filterMenutoolbar: \"\",\n         resetFilterButton: \"\",\n      });\n\n      this.AB = AB;\n      this.idBase = idBase;\n      this.object = null;\n      // this.queryRules = [];\n\n      this.__externalSearchText = null;\n      // {string}\n      // External sources of text filters are stored here. This is most likely\n      // from the global search toolbar entry.\n      this.rowFilter = this.AB.filterComplexNew(`${this.ids.component}_filter`);\n      // {RowFilter}\n      // When .userFilterPosition == \"toolbar\" we use this RowFilter to\n      // display a form in a popup where the toolbar button is.\n\n      this.rowFilterForm = this.AB.filterComplexNew(\n         `${this.ids.component}_filter_form`\n      );\n      // {RowFilter}\n      // When .userFilterPosition == \"form\" we use this RowFilter to\n      // display a form under the toolbar.\n\n      this._handler_rowFilterChanged = (value) => {\n         let filterRules = value.rules || [];\n\n         // if ($$(ids.buttonFilter)) {\n         //    $$(ids.buttonFilter).define('badge', filterRules.length || null);\n         //    $$(ids.buttonFilter).refresh();\n         // }\n\n         // be notified when there is a change in the filter\n         this.triggerCallback((rowData) => {\n            return this.rowFilter.isValid(rowData);\n         }, filterRules);\n      };\n\n      this._handler_rowFilterFormChanged = () => {\n         this.triggerCallback();\n      };\n\n      this.initialized = false;\n      // {bool}\n      // make sure this is not .init() more than once\n   }\n\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         filterOption: 1,\n         // {integer}\n         // 0 - Not allow\n         // 1 - Enable user filter\n         // 2 - Predefined filter menu\n         // 3 - Global filter input\n\n         // filterOptions == 1 options\n         userFilterPosition: \"toolbar\",\n         // {string} the location of the filter:\n         //    \"toolbar\" : there will be an \"Add Filters\" button on\n         //                the toolbar that will trigger the form popup\n         //    \"form\"    : there will be a button under the toolbar that\n         //                will bring up the form popup.\n\n         isGlobalToolbar: 1,\n         // {boolean|truthy}\n         // when \"toolbar\" is chosen for userFilterPosition, this setting\n         // allows us to also include the search criteria specified in\n         // the search box on the toolbar.\n\n         // filterOptions == 2 options\n         // predefined filters created by the builders. There will be\n         // an area under the toolbar that displays buttons to choose\n         // between one of the predefined queryRules.\n         // queryRules: [], // An array of ABViewGridFilterRule object\n\n         // filterOptions == 3 options\n         // globalFilterPosition: \"default\",\n         // {string} [ \"default\", \"single\" ]\n         //    \"default\" : shows default grid with all potential matches\n         //    \"single\"  : grid only shows when it has a match.  only 1\n         //                match is shown. ( is this true?? )\n      };\n   }\n\n   /**\n    * @method fromSettings\n    * Create an initial set of default values based upon our settings object.\n    * @param {obj} settings  The settings object we created in .toSettings()\n    */\n   fromSettings(settings) {\n      settings = settings || {};\n\n      settings.filterOption =\n         typeof settings.filterOption != \"undefined\"\n            ? settings.filterOption\n            : ABViewPropertyFilterData.default.filterOption;\n\n      settings.isGlobalToolbar =\n         typeof settings.isGlobalToolbar != \"undefined\"\n            ? settings.isGlobalToolbar\n            : ABViewPropertyFilterData.default.isGlobalToolbar;\n\n      this.settings = settings;\n   }\n\n   /**\n    * @method objectLoad\n    * A rule is based upon a Form that was working with an Object.\n    * .objectLoad() is how we specify which object we are working with.\n    *\n    * @param {ABObject} The object that will be used to evaluate the Rules\n    */\n   objectLoad(object) {\n      this.object = object;\n\n      if (this.rowFilter) {\n         // this.rowFilter.applicationLoad(object.application);\n         this.rowFilter.fieldsLoad(object.fields());\n      }\n\n      if (this.rowFilterForm) {\n         // this.rowFilterForm.applicationLoad(object.application);\n         this.rowFilterForm.fieldsLoad(object.fields());\n      }\n   }\n\n   viewLoad(view) {\n      this.view = view;\n   }\n\n   /** == UI == */\n   ui() {\n      var self = this;\n      var ids = this.ids;\n\n      return {\n         id: ids.filterPanel,\n         type: \"space\",\n         borderless: true,\n         padding: 0,\n         hidden: true,\n         rows: [\n            {\n               id: ids.globalFilterFormContainer,\n               hidden: true,\n               cols: [\n                  {\n                     id: ids.globalFilterForm,\n                     view: \"text\",\n                     placeholder: L(\"Search or scan a barcode to see results\"),\n                     on: {\n                        onTimedKeyPress: () => {\n                           this.triggerCallback();\n                        },\n                     },\n                  },\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     width: 28,\n                     type: \"icon\",\n                     icon: \"fa fa-times\",\n                     click: function () {\n                        var $form = $$(ids.globalFilterForm);\n                        $form.setValue(\"\");\n                        $form.focus();\n                        $form.callEvent(\"onTimedKeyPress\");\n                     },\n                  },\n               ],\n            },\n            {\n               id: ids.buttonAddfilter,\n               view: \"button\",\n               css: \"webix_primary\",\n               value: L(\"Add Filter\"),\n               click: () => {\n                  this.rowFilterForm.popUp($$(ids.buttonAddfilter).getNode(), {\n                     pos: \"bottom\",\n                  });\n               },\n            },\n            {\n               view: \"toolbar\",\n               id: ids.filterMenutoolbar,\n               css: \"ab-data-toolbar\",\n               hidden: true,\n               cols: [\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     id: ids.resetFilterButton,\n                     label: L(\"Reset Filter\"),\n                     icon: \"fa fa-ban\",\n                     type: \"icon\",\n                     // badge: 0,\n                     autowidth: true,\n                     click: function () {\n                        self.resetFilter();\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n\n      var ids = this.ids;\n      // this.filter_popup = webix.ui({\n      //    view: \"popup\",\n      //    id: ids.component,\n      //    width: 600,\n      //    height: 400,\n      //    hidden: true,\n      //    body: this.rowFilter.ui,\n      // });\n\n      this.rowFilter.init();\n      this.rowFilter.removeListener(\"changed\", this._handler_rowFilterChanged);\n      this.rowFilter.on(\"changed\", this._handler_rowFilterChanged);\n\n      this.rowFilterForm.init();\n      this.rowFilterForm.removeListener(\n         \"changed\",\n         this._handler_rowFilterFormChanged\n      );\n      this.rowFilterForm.on(\"changed\", this._handler_rowFilterFormChanged);\n      this.rowFilterForm.removeListener(\n         \"save\",\n         this._handler_rowFilterFormChanged\n      );\n      this.rowFilterForm.on(\"save\", this._handler_rowFilterFormChanged);\n\n      $$(ids.filterPanel)?.hide();\n      $$(ids.buttonAddfilter)?.hide();\n      $$(ids.filterMenutoolbar)?.hide();\n      $$(ids.globalFilterFormContainer)?.hide();\n\n      switch (this.settings.filterOption) {\n         case 0:\n            break;\n         case 1:\n            switch (this.settings.userFilterPosition) {\n               case \"form\":\n                  $$(ids.buttonAddfilter)?.show();\n                  $$(ids.filterPanel)?.show();\n                  break;\n               case \"toolbar\":\n                  $$(ids.filterPanel)?.hide();\n                  break;\n            }\n            break;\n         case 2:\n            $$(ids.filterPanel)?.show();\n            var $filterMenutoolbar = $$(ids.filterMenutoolbar);\n            if ($filterMenutoolbar) {\n               $filterMenutoolbar.show();\n\n               // populate filter items\n               if (this.settings?.queryRules) {\n                  (this.settings.queryRules || []).forEach((qr) => {\n                     let Rule = new FilterRuleSettings();\n                     Rule.fromSettings(qr);\n                     var filterRuleButton = {\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        label: Rule.label,\n                        icon: \"fa fa-filter\",\n                        type: \"icon\",\n                        // badge: 0,\n                        autowidth: true,\n                        click: () => {\n                           this.emit(\"filter.data\", null, Rule.filters);\n                           // this.selectFilter(qr.filter);\n                        },\n                     };\n                     $filterMenutoolbar.addView(filterRuleButton);\n                  });\n               }\n            }\n            break;\n         case 3:\n            $$(ids.globalFilterFormContainer)?.show();\n            $$(ids.filterPanel)?.show();\n            break;\n      }\n   }\n\n   filterRules() {\n      let rowFilterRules = null;\n\n      switch (this.settings.userFilterPosition) {\n         case \"form\":\n            rowFilterRules = this.rowFilterForm.getValue();\n            break;\n         case \"toolbar\":\n            rowFilterRules = this.rowFilter.getValue();\n            break;\n      }\n\n      return rowFilterRules;\n   }\n\n   /**\n    * @method getFilter()\n    * Return a fn() that returns {truthy} with a given row of\n    * data.\n    */\n   getFilter() {\n      // default filter\n      if (this.__currentFilter == null) {\n         // if empty search text in global single mode, then no display rows\n         if (\n            this.settings.filterOption == 3 &&\n            this.settings.globalFilterPosition == \"single\"\n         )\n            this.__currentFilter = (/* row */) => {\n               return false;\n            };\n         // always true, show every rows\n         else\n            this.__currentFilter = (/* row */) => {\n               return true;\n            };\n      }\n\n      return this.__currentFilter;\n   }\n\n   /**\n    * @method triggerCallback()\n    * We compile our current search options and emit them back to our\n    * parent container.\n    */\n   triggerCallback(/*fnFilter, filterRules*/) {\n      let searchRules = this.searchText(this.__externalSearchText);\n      let rowFilterRules = this.filterRules();\n\n      let badgeCount = 0;\n      if (rowFilterRules?.rules?.length) {\n         badgeCount = rowFilterRules?.rules?.length;\n         if (searchRules) {\n            badgeCount++;\n            rowFilterRules = {\n               glue: \"and\",\n               rules: [rowFilterRules, searchRules],\n            };\n         }\n      } else {\n         rowFilterRules = searchRules;\n      }\n\n      this.emit(\"filter.data\", null, rowFilterRules);\n\n      if (badgeCount == 0) badgeCount = false;\n      const $button = $$(this.ids.buttonAddfilter);\n      if ($button) {\n         $button.config.badge = badgeCount;\n         $button.refresh();\n      }\n   }\n\n   resetFilter() {\n      this.triggerCallback(() => true, []);\n   }\n\n   /**\n    * @method externalSearchText()\n    * Save any search criteria established from outside this filterHelper.\n    * NOTE: The ABViewGrid has a toolbar search entry that will provide\n    * this value.\n    * @param {string} search\n    *        The typed in search criteria.\n    */\n   externalSearchText(search = null) {\n      this.__externalSearchText = search;\n      this.triggerCallback(); // update each time\n   }\n\n   /**\n    * @method searchText()\n    * Retrieve the typed in search terms from the user, and convert them\n    * into a set of Rules that will modify our results.\n    * If an external search param is provided, use that instead.\n    * @param {string} externalText\n    * @return {json} The QB Rule condition for the search criteria\n    */\n   searchText(externalText) {\n      var search;\n      if (externalText) {\n         search = externalText;\n      } else {\n         search = ($$(this.ids.globalFilterForm)?.getValue() ?? \"\").trim();\n      }\n      if (!search) return null; // <-- includes \"\"\n\n      // find the individual \"terms\" that we should search for\n      let terms = search.trim().toLowerCase().split(\" \");\n\n      // build a set of conditions for each term\n      var allTerms = [];\n\n      var allFields = this.object?.fields() || [];\n\n      terms.forEach((t) => {\n         var fieldTerms = [];\n\n         // for each field, add a match condition for that field\n         // (if the field applies)\n         allFields.forEach((f) => {\n            if (f.fieldIsFilterable()) {\n               switch (f.key) {\n                  case \"number\":\n                  case \"string\":\n                  case \"LongText\":\n                  case \"email\":\n                     fieldTerms.push({\n                        key: f.id,\n                        rule: \"contains\",\n                        value: t,\n                     });\n                     break;\n\n                  case \"list\":\n                     var options = f.options();\n                     options.forEach((o) => {\n                        if (o.text.indexOf(t) > -1) {\n                           fieldTerms.push({\n                              key: f.id,\n                              rule: \"equals\",\n                              value: o.id,\n                           });\n                        }\n                     });\n                     break;\n               }\n            }\n         });\n\n         if (fieldTerms.length > 0) {\n            allTerms.push({\n               glue: \"or\",\n               rules: fieldTerms,\n            });\n         }\n      });\n\n      if (allTerms.length > 0) {\n         var searchRules = {\n            glue: \"and\",\n            rules: allTerms,\n         };\n         return searchRules;\n      } else {\n         return null;\n      }\n   }\n\n   showPopup($view) {\n      // this.filter_popup.show($view, null, { pos: \"top\" });\n      this.rowFilter.popUp($view, null, { pos: \"center\" });\n   }\n}\n","import ABViewProperty from \"./ABViewProperty\";\nimport ABViewComponent from \"../viewComponent/ABViewComponent\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nclass ABViewPropertyLinkPageComponent extends ABViewComponent {\n   constructor(linkPageHelper, idBase) {\n      let base = idBase || `ABViewPropertyLinkPage_xxx`;\n      super(base, {});\n\n      this.linkPageHelper = linkPageHelper;\n      this.AB = linkPageHelper.AB;\n\n      this.view = null;\n      // {ABViewXXXX}\n      // the ABView object this link references.\n\n      this.datacollection = null;\n      // {ABDataCollection}\n      // The related Datacollection to this view that drives it's data.\n      // we usually have to set the cursor before the view displays the\n      // appropriate data.\n   }\n\n   ui() {\n      return {};\n   }\n\n   init(options) {\n      if (options.view) this.view = options.view;\n\n      if (options.datacollection) this.datacollection = options.datacollection;\n   }\n\n   changePage(pageId, rowId) {\n      if (this.datacollection) this.datacollection.setCursor(rowId);\n\n      if (this.view) this.view.changePage(pageId);\n   }\n}\n\nexport default class ABViewPropertyLinkPage extends ABViewProperty {\n   // constructor() {\n   //    super();\n   // }\n\n   /** == UI == */\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   component(v1App = false) {\n      let component = new ABViewPropertyLinkPageComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (...params) => {\n               return newComponent.init(...params);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n            changePage: (...params) => {\n               return newComponent.changePage(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n}\n","// ABObjectWorkspaceView.js\n//\n// Manages the settings for a view in the AppBuilder Object Workspace\n\nmodule.exports = class ABObjectWorkspaceView {\n   constructor(attributes, object, defaultLabel) {\n      this.defaultLabel = defaultLabel || \"default view\";\n      /*\n\t{\n\t\tid:uuid(),\n\n\t}\n\n*/\n      // Note: keep this before .fromObj()\n      this.object = object;\n\n      this.fromObj(attributes || {});\n\n      // multilingual fields: label\n      this.object.translate(this, this, [\"label\"]);\n\n      // user ids.  if has user id, then only those users can see this.\n      // this.users = [];\n   }\n\n   /**\n    * unique key describing this View.\n    * @return {string}\n    */\n   static type() {\n      return \"view\";\n   }\n\n   /**\n    * @method fromObj\n    * take our persisted data, and properly load it\n    * into this object instance.\n    * @param {json} data  the persisted data\n    */\n   fromObj(data) {\n      this.id = data.id || this.object.AB.uuid();\n      this.isDefaultView = JSON.parse(data.isDefaultView || false);\n      this.translations =\n         data.translations ||\n         this.object.defaultTranslations([\"label\"], {\n            label: this.defaultLabel,\n         });\n   }\n\n   /**\n    * @method toObj()\n    * compile our current state into a {json} object\n    * that can be persisted.\n    */\n   toObj() {\n      this.object.unTranslate(this, this, [\"label\"]);\n      return {\n         id: this.id,\n         translations: this.translations,\n         isDefaultView: this.isDefaultView,\n      };\n   }\n\n   update(view) {\n      for (var key in view) {\n         this[key] = view[key];\n      }\n   }\n};\n","// ABObjectWorkspaceViewCollection.js\n//\n// Manages the settings for a collection of views in the AppBuilder Object Workspace\n\nconst ABObjectWorkspaceViewGrid = require(\"./ABObjectWorkspaceViewGrid\");\nconst ABObjectWorkspaceViewKanban = require(\"./ABObjectWorkspaceViewKanban\");\nconst ABObjectWorkspaceViewGantt = require(\"./ABObjectWorkspaceViewGantt\");\n\nvar hashViews = {};\nhashViews[ABObjectWorkspaceViewGrid.type()] = ABObjectWorkspaceViewGrid;\nhashViews[ABObjectWorkspaceViewKanban.type()] = ABObjectWorkspaceViewKanban;\nhashViews[ABObjectWorkspaceViewGantt.type()] = ABObjectWorkspaceViewGantt;\n\nconst defaultAttributes = {\n   currentViewID: undefined,\n   list: [],\n};\n\nmodule.exports = class ABObjectWorkspaceViewCollection {\n   constructor(attributes, object, AB) {\n      // link me to my parent ABObject\n      this.object = object;\n      this.AB = AB;\n\n      this.fromObj(attributes);\n   }\n\n   /**\n    * @method fromObj\n    * take our persisted data, and properly load it\n    * into this object instance.\n    * @param {json} data  the persisted data\n    */\n   fromObj(data) {\n      // import our Workspace View Objects\n      data.objectWorkspaceViews =\n         data.objectWorkspaceViews && data.objectWorkspaceViews.list\n            ? data.objectWorkspaceViews\n            : defaultAttributes;\n\n      // Temp\n      // data.objectWorkspaceViews = defaultAttributes;\n\n      if (\n         data.objectWorkspaceViews.list.filter((v) => v.isDefaultView)\n            .length === 0\n      ) {\n         // We should always have at least one default grid view. So if this list\n         // is empty we can assume we're 'upgrading' from the old single-view workspace...\n\n         /// So we import the 'old' format workspace settings\n         if (typeof data.objectWorkspace != \"undefined\") {\n            if (typeof data.objectWorkspace.sortFields == \"undefined\")\n               data.objectWorkspace.sortFields = [];\n            if (typeof data.objectWorkspace.filterConditions == \"undefined\")\n               data.objectWorkspace.filterConditions = [];\n            if (typeof data.objectWorkspace.frozenColumnID == \"undefined\")\n               data.objectWorkspace.frozenColumnID = \"\";\n            if (typeof data.objectWorkspace.hiddenFields == \"undefined\")\n               data.objectWorkspace.hiddenFields = [];\n         }\n\n         // ...and initialize our grid view attributes\n         var gridAttributes = data.objectWorkspace || {\n            sortFields: [], // array of columns with their sort configurations\n            filterConditions: [], // array of filters to apply to the data table\n            frozenColumnID: \"\", // id of column you want to stop freezing\n            hiddenFields: [], // array of [ids] to add hidden:true to\n         };\n         gridAttributes.isDefaultView = true;\n\n         var defaultGrid = new ABObjectWorkspaceViewGrid(\n            gridAttributes,\n            this.object\n         );\n         data.objectWorkspaceViews.list.unshift(defaultGrid);\n      }\n\n      this.importViews(data.objectWorkspaceViews);\n\n      this.currentViewID = data.objectWorkspaceViews.currentViewID;\n      if (!this.currentViewID) {\n         this.currentViewID = this.list()[0].id;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      return {\n         currentViewID: this.currentViewID,\n         list: this.exportViews(),\n      };\n   }\n\n   list(fn = () => true) {\n      return this._views.filter(fn);\n   }\n\n   importViews(viewSettings) {\n      this._views = [];\n      viewSettings.list.forEach((view) => {\n         this.addView(view, false);\n      });\n   }\n\n   exportViews() {\n      var views = [];\n      this._views.forEach((view) => {\n         views.push(view.toObj());\n      });\n\n      return views;\n   }\n\n   setCurrentView(viewID) {\n      this.currentViewID = viewID;\n   }\n\n   getCurrentView() {\n      return this.list((v) => {\n         return v.id == this.currentViewID;\n      })[0];\n   }\n\n   addView(view, save = true) {\n      var newView = new hashViews[view.type](view, this.object);\n      this._views.push(newView);\n      if (save) {\n         this.object.save();\n      }\n      return newView;\n   }\n\n   removeView(view) {\n      var indexToRemove = this._views.indexOf(view);\n      this._views.splice(indexToRemove, 1);\n      if (view.id === this.currentViewID) {\n         this.currentViewID = this._views[0].id;\n      }\n      this.object.save();\n   }\n\n   updateView(viewToUpdate, view) {\n      var newView;\n      if (view.type === viewToUpdate.type) {\n         viewToUpdate.update(view);\n         newView = viewToUpdate;\n      } else {\n         newView = new hashViews[view.type](view, this.object);\n         var indexToRemove = this._views.indexOf(viewToUpdate);\n         this._views.splice(indexToRemove, 1, newView);\n         if (this.currentViewID === viewToUpdate.id) {\n            this.currentViewID = newView.id;\n         }\n      }\n      this.object.save();\n      return newView;\n   }\n};\n","// ABObjectWorkspaceViewComponent.js\n//\n\nmodule.exports = class ABObjectWorkspaceViewComponent {\n   constructor(options) {\n      this.elements =\n         options.elements ||\n         function () {\n            return [];\n         };\n      this.init = options.init || function () {};\n      this.validate =\n         options.validate ||\n         function () {\n            return true;\n         };\n      this.values =\n         options.values ||\n         function () {\n            return {};\n         };\n      this.logic = options.logic || {};\n   }\n};\n","// ABObjectWorkspaceViewGantt.js\n//\n// Manages the settings for a Gantt Chart View in the AppBuilder Object Workspace\n\nconst ABObjectWorkspaceView = require(\"./ABObjectWorkspaceView\");\nconst ABObjectWorkspaceViewComponent = require(\"./ABObjectWorkspaceViewComponent\");\n\nconst ABPopupNewDataField = require(\"../../../ABDesigner/ab_work_object_workspace_popupNewDataField\");\n\nconst ABFieldDate = require(\"../dataFields/ABFieldDate\");\nconst ABFieldNumber = require(\"../dataFields/ABFieldNumber\");\nconst ABFieldString = require(\"../dataFields/ABFieldString\");\nconst ABFieldLongText = require(\"../dataFields/ABFieldLongText\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nvar defaultValues = {\n   name: \"Default Gantt\",\n   filterConditions: [], // array of filters to apply to the data table\n   sortFields: [],\n   title: \"none\", // id of a ABFieldString, ABFieldLongText\n   startDate: null, // id of a ABFieldDate\n   endDate: \"none\", // id of a ABFieldDate\n   duration: \"none\", // id of a ABFieldNumber\n   progress: \"none\", // id of a ABFieldNumber\n   notes: \"none\", // id of a ABFieldString, ABFieldLongText\n};\n\nmodule.exports = class ABObjectWorkspaceViewGantt extends (\n   ABObjectWorkspaceView\n) {\n   constructor(attributes, object) {\n      super(attributes, object, \"gantt\");\n\n      /*\n         {\n            id:uuid(),\n            type:'gantt',  \n            filterConditions:[],\n         }\n      \n      */\n   }\n\n   /**\n    * unique key describing this View.\n    * @return {string}\n    */\n   static type() {\n      return \"gantt\";\n   }\n\n   /**\n    * @return {string}\n    */\n   static icon() {\n      return \"fa fa-tasks\";\n   }\n\n   static component(App, idBase) {\n      let ids = {\n         title: App.unique(`${idBase}_popupGanttTitle`),\n         startDate: App.unique(`${idBase}_popupGanttStartDate`),\n         endDate: App.unique(`${idBase}_popupGanttEndDate`),\n         duration: App.unique(`${idBase}_popupGanttDuration`),\n         progress: App.unique(`${idBase}_popupGanttProgress`),\n         notes: App.unique(`${idBase}_popupGanttNotes`),\n      };\n\n      let refreshOptions = (object, view) => {\n         let dateFields = object\n            .fields((f) => f instanceof ABFieldDate)\n            .map(({ id, label }) => ({ id, value: label }));\n\n         // Start date\n         $$(ids.startDate).define(\"options\", dateFields);\n\n         // Add default option\n         dateFields.unshift({\n            id: \"none\",\n            value: L(\"Select a date field\"),\n         });\n\n         // End date\n         $$(ids.endDate).define(\"options\", dateFields);\n\n         // Duration\n         let numberFields = object\n            .fields((f) => f instanceof ABFieldNumber)\n            .map(({ id, label }) => ({ id, value: label }));\n\n         // Add default option\n         numberFields.unshift({\n            id: \"none\",\n            value: L(\"Select a number field\"),\n         });\n         $$(ids.duration).define(\"options\", numberFields);\n\n         // Progress\n         let decimalFields = object\n            .fields((f) => f instanceof ABFieldNumber)\n            .map(({ id, label }) => ({ id, value: label }));\n\n         // Add default option\n         decimalFields.unshift({\n            id: \"none\",\n            value: L(\"Select a number field\"),\n         });\n         $$(ids.progress).define(\"options\", decimalFields);\n\n         // Title & Notes\n         let stringFields = object\n            .fields(\n               (f) => f instanceof ABFieldString || f instanceof ABFieldLongText\n            )\n            .map(({ id, label }) => ({ id, value: label }));\n\n         // Add default option\n         stringFields.unshift({\n            id: \"none\",\n            value: L(\"Select a string field\"),\n         });\n         $$(ids.title).define(\"options\", stringFields);\n         $$(ids.notes).define(\"options\", stringFields);\n\n         // Select view's values\n         if (view && view.title) {\n            $$(ids.title).define(\"value\", view.title);\n            $$(ids.title).refresh();\n         }\n\n         if (view && view.startDate) {\n            $$(ids.startDate).define(\"value\", view.startDate);\n            $$(ids.startDate).refresh();\n         }\n\n         if (view && view.endDate) {\n            $$(ids.endDate).define(\n               \"value\",\n               view.endDate || defaultValues.endDate\n            );\n            $$(ids.endDate).refresh();\n         }\n\n         if (view && view.duration) {\n            $$(ids.duration).define(\n               \"value\",\n               view.duration || defaultValues.duration\n            );\n            $$(ids.duration).refresh();\n         }\n\n         if (view && view.progress) {\n            $$(ids.progress).define(\"value\", view.progress);\n            $$(ids.progress).refresh();\n         }\n\n         if (view && view.notes) {\n            $$(ids.notes).define(\"value\", view.notes);\n            $$(ids.notes).refresh();\n         }\n      };\n\n      var PopupNewDataFieldComponent = new ABPopupNewDataField(\n         App,\n         `${idBase}_gantt`\n      );\n\n      let ViewComponent = new ABObjectWorkspaceViewComponent({\n         elements: () => {\n            return {\n               batch: \"gantt\",\n               rows: [\n                  {\n                     cols: [\n                        {\n                           id: ids.title,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-calendar'></span> ${L(\n                              \"Title\"\n                           )}`,\n                           placeholder: L(\"Select a string field\"),\n                           labelWidth: 130,\n                           name: \"title\",\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldString.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.startDate,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-calendar'></span> ${L(\n                              \"Start Date\"\n                           )}`,\n                           placeholder: L(\"Select a date field\"),\n                           labelWidth: 130,\n                           name: \"startDate\",\n                           required: true,\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldDate.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.endDate,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-calendar'></span> ${L(\n                              \"End Date\"\n                           )}`,\n                           placeholder: L(\"Select a date field\"),\n                           labelWidth: 130,\n                           name: \"endDate\",\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldDate.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.duration,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-hashtag'></span> ${L(\n                              \"Duration\"\n                           )}`,\n                           placeholder: L(\"Select a number field\"),\n                           labelWidth: 130,\n                           name: \"duration\",\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldNumber.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.progress,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-hashtag'></span> ${L(\n                              \"Progress\"\n                           )}`,\n                           placeholder: L(\"Select a number field\"),\n                           labelWidth: 130,\n                           name: \"progress\",\n                           required: false,\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldNumber.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.notes,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-align-right'></span> ${L(\n                              \"Notes\"\n                           )}`,\n                           placeholder: L(\"Select a string field\"),\n                           labelWidth: 130,\n                           name: \"notes\",\n                           required: false,\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldLongText.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n               ],\n            };\n         },\n\n         init: (object, view) => {\n            if (!object) return;\n\n            refreshOptions(object, view);\n\n            PopupNewDataFieldComponent.applicationLoad(object.application);\n            PopupNewDataFieldComponent.objectLoad(object);\n            PopupNewDataFieldComponent.init({\n               onSave: () => {\n                  // be notified when a new Field is created & saved\n\n                  refreshOptions(object, view);\n               },\n            });\n         },\n\n         validate: function ($form) {\n            let endDate = $$(ids.endDate).getValue() || defaultValues.endDate,\n               duration = $$(ids.duration).getValue() || defaultValues.duration;\n\n            if (\n               endDate == defaultValues.endDate &&\n               duration == defaultValues.duration\n            ) {\n               $form.markInvalid(\"endDate\", \"Required\");\n               $form.markInvalid(\"duration\", \"Required\");\n\n               return false;\n            } else {\n               return true;\n            }\n         },\n\n         values: function () {\n            let result = {};\n\n            result.title = $$(ids.title).getValue() || defaultValues.title;\n            result.startDate =\n               $$(ids.startDate).getValue() || defaultValues.startDate;\n            result.endDate =\n               $$(ids.endDate).getValue() || defaultValues.endDate;\n            result.duration =\n               $$(ids.duration).getValue() || defaultValues.duration;\n            result.progress =\n               $$(ids.progress).getValue() || defaultValues.progress;\n            result.notes = $$(ids.notes).getValue() || defaultValues.notes;\n\n            return result;\n         },\n\n         logic: {},\n      });\n\n      return ViewComponent;\n   }\n\n   /**\n    * @method fromObj\n    * take our persisted data, and properly load it\n    * into this object instance.\n    * @param {json} data  the persisted data\n    */\n   fromObj(data) {\n      super.fromObj(data);\n\n      for (var v in defaultValues) {\n         this[v] = data[v] || defaultValues[v];\n      }\n\n      this.type = ABObjectWorkspaceViewGantt.type();\n   }\n\n   /**\n    * @method toObj()\n    * compile our current state into a {json} object\n    * that can be persisted.\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      for (var v in defaultValues) {\n         obj[v] = this[v];\n      }\n\n      obj.type = ABObjectWorkspaceViewGantt.type();\n      return obj;\n   }\n\n   get titleField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.title);\n   }\n\n   get startDateField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.startDate);\n   }\n\n   get endDateField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.endDate);\n   }\n\n   get durationField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.duration);\n   }\n\n   get progressField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.progress);\n   }\n\n   get notesField() {\n      let viewCollection = this.object,\n         object = viewCollection.object;\n\n      return object.fieldByID(this.notes);\n   }\n};\n","// ABObjectWorkspaceViewGrid.js\n//\n// Manages the settings for a Data Grid View in the AppBuilder Object Workspace\n\nconst ABObjectWorkspaceView = require(\"./ABObjectWorkspaceView\");\n\nvar defaultValues = {\n   name: \"Default Grid\",\n   sortFields: [], // array of columns with their sort configurations\n   filterConditions: [], // array of filters to apply to the data table\n   frozenColumnID: \"\", // id of column you want to stop freezing\n   hiddenFields: [], // array of [ids] to add hidden:true to\n};\n\nmodule.exports = class ABObjectWorkspaceViewGrid extends ABObjectWorkspaceView {\n   constructor(attributes, object) {\n      super(attributes, object, \"grid\");\n\n      /*\n\t{\n\t\tid:uuid(),\n\t\ttype:'grid',  \n\t\tsortFields:[],\n\t\tfilterConditions:[],\n\t\tfrozenColumnID:\"\",\n\t\thiddenFields:[],\n\t}\n\n*/\n   }\n\n   /**\n    * unique key describing this View.\n    * @return {string}\n    */\n   static type() {\n      return \"grid\";\n   }\n\n   /**\n    * @return {string}\n    */\n   static icon() {\n      return \"fa fa-table\";\n   }\n\n   /**\n    * @method fromObj\n    * take our persisted data, and properly load it\n    * into this object instance.\n    * @param {json} data  the persisted data\n    */\n   fromObj(data) {\n      super.fromObj(data);\n\n      for (var v in defaultValues) {\n         this[v] = data[v] || defaultValues[v];\n      }\n\n      this.type = ABObjectWorkspaceViewGrid.type();\n   }\n\n   /**\n    * @method toObj()\n    * compile our current state into a {json} object\n    * that can be persisted.\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      for (var v in defaultValues) {\n         obj[v] = this[v];\n      }\n\n      obj.type = \"grid\";\n      return obj;\n   }\n};\n","// ABObjectWorkspaceViewKanban.js\n//\n// Manages the settings for a Data Grid View in the AppBuilder Object Workspace\n\nconst ABObjectWorkspaceView = require(\"./ABObjectWorkspaceView\");\nconst ABObjectWorkspaceViewComponent = require(\"./ABObjectWorkspaceViewComponent\");\n\nconst ABPopupNewDataField = require(\"../../../ABDesigner/ab_work_object_workspace_popupNewDataField\");\n\nconst ABFieldConnect = require(\"../dataFields/ABFieldConnect\");\nconst ABFieldList = require(\"../dataFields/ABFieldList\");\nconst ABFieldUser = require(\"../dataFields/ABFieldUser\");\n\nvar defaultValues = {\n   name: \"Default Kanban\",\n   filterConditions: [], // array of filters to apply to the data table\n   sortFields: [],\n   verticalGroupingField: null,\n   horizontalGroupingField: null,\n   ownerField: null,\n};\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABObjectWorkspaceViewKanban extends (\n   ABObjectWorkspaceView\n) {\n   constructor(attributes, object) {\n      super(attributes, object, \"kanban\");\n\n      /*\n\t\t\t{\n\t\t\t\tid:uuid(),\n\t\t\t\ttype:'kanban',  \n\t\t\t\tfilterConditions:[],\n\t\t\t}\n\t\t\n\t\t*/\n   }\n\n   /**\n    * unique key describing this View.\n    * @return {string}\n    */\n   static type() {\n      return \"kanban\";\n   }\n\n   /**\n    * @return {string}\n    */\n   static icon() {\n      return \"fa fa-columns\";\n   }\n\n   static component(AB, idBase) {\n      let ids = {\n         vGroupInput: `${idBase}_popupAddViewVGroup`,\n         hGroupInput: `${idBase}_popupAddViewHGroup`,\n         ownerInput: `${idBase}_popupAddViewOwner`,\n      };\n\n      // let labels = {\n      //    common: App.labels,\n      //    component: {\n      //       vGroup: L(\"ab.add_view.kanban.vGroup\", \"*Vertical Grouping\"),\n      //       hGroup: L(\"ab.add_view.kanban.hGroup\", \"*Horizontal Grouping\"),\n      //       owner: L(\"ab.add_view.kanban.owner\", \"*Card Owner\"),\n      //       groupingPlaceholder: L(\n      //          \"ab.add_view.kanban.grouping_placeholder\",\n      //          \"*Select a field\"\n      //       ),\n      //       ownerPlaceholder: L(\n      //          \"ab.add_view.kanban.owner_placeholder\",\n      //          \"*Select a user field\"\n      //       ),\n      //       noneOption: L(\"ab.add_view.kanban.none_option\", \"*None\"),\n      //    },\n      // };\n\n      let refreshOptions = (object, view, options = {}) => {\n         // Utility function to initialize the options for a field select input\n         const initSelect = (\n            $option,\n            attribute,\n            filter = (f) => f.key === ABFieldList.defaults().key,\n            isRequired\n         ) => {\n            if ($option == null || object == null) return;\n\n            // populate options\n            var options = object\n               .fields()\n               .filter(filter)\n               .map(({ id, label }) => ({ id, value: label }));\n            if (!isRequired && options.length) {\n               options.unshift({\n                  id: 0,\n                  value: L(\"None\"),\n               });\n            }\n            $option.define(\"options\", options);\n\n            // select a value\n            if (view) {\n               if (view[attribute]) {\n                  $option.define(\"value\", view[attribute]);\n               } else if (!isRequired && options[0]) {\n                  $option.define(\"value\", options[0].id);\n               }\n            } else if (options.filter((o) => o.id).length === 1) {\n               // If there's just one (real) option, default to the first one\n               $option.define(\"value\", options[0].id);\n            }\n\n            $option.refresh();\n         };\n\n         const verticalGroupingFieldFilter = (field) =>\n            [ABFieldList.defaults().key, ABFieldUser.defaults().key].includes(\n               field.key\n            );\n\n         const horizontalGroupingFieldFilter = (field) =>\n            [\n               ABFieldConnect.defaults().key,\n               ABFieldList.defaults().key,\n               ABFieldUser.defaults().key,\n            ].includes(field.key);\n\n         initSelect(\n            options.vGroupInput || $$(ids.vGroupInput),\n            \"verticalGroupingField\",\n            verticalGroupingFieldFilter,\n            true\n         );\n         initSelect(\n            options.hGroupInput || $$(ids.hGroupInput),\n            \"horizontalGroupingField\",\n            horizontalGroupingFieldFilter,\n            false\n         );\n         initSelect(\n            options.ownerInput || $$(ids.ownerInput),\n            \"ownerField\",\n            (f) => {\n               // User field\n               return (\n                  f.key === ABFieldUser.defaults().key ||\n                  // Connected field : type 1:M\n                  (f.key === ABFieldConnect.defaults().key &&\n                     f.settings.linkType == \"one\" &&\n                     f.settings.linkViaType == \"many\")\n               );\n            },\n            false\n         );\n      };\n\n      var PopupNewDataFieldComponent = new ABPopupNewDataField(\n         AB,\n         `${idBase}_kanban`\n      );\n\n      return new ABObjectWorkspaceViewComponent({\n         elements: () => {\n            return {\n               batch: \"kanban\",\n               rows: [\n                  {\n                     cols: [\n                        {\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-columns'></span> ${L(\n                              \"Vertical Grouping\"\n                           )}`,\n                           id: ids.vGroupInput,\n                           placeholder: L(\"Select a field\"),\n                           labelWidth: 180,\n                           name: \"vGroup\",\n                           required: true,\n                           options: [],\n                           on: {\n                              onChange: function (id) {\n                                 $$(ids.vGroupInput).validate();\n                                 $$(ids.hGroupInput).validate();\n                              },\n                           },\n                           invalidMessage: L(\"Required\"),\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldList.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-list'></span> ${L(\n                              \"Horizontal Grouping\"\n                           )}`,\n                           id: ids.hGroupInput,\n                           placeholder: L(\"Select a field\"),\n                           labelWidth: 180,\n                           name: \"hGroup\",\n                           required: false,\n                           options: [],\n                           invalidMessage: L(\n                              \"Cannot be the same as vertical grouping field\"\n                           ),\n                           validate: (value) => {\n                              var vGroupValue = $$(ids.vGroupInput).getValue();\n                              return (\n                                 !vGroupValue || !value || vGroupValue !== value\n                              );\n                           },\n                           on: {\n                              onChange: function (id) {\n                                 $$(ids.hGroupInput).validate();\n                              },\n                           },\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldList.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-user-circle'></span> ${L(\n                              \"Card Owner\"\n                           )}`,\n                           placeholder: L(\"Select a user field\"),\n                           id: ids.ownerInput,\n                           labelWidth: 180,\n                           name: \"owner\",\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldConnect.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n               ],\n            };\n         },\n\n         init: (object, view) => {\n            refreshOptions(object, view);\n\n            PopupNewDataFieldComponent.applicationLoad(object.application);\n            PopupNewDataFieldComponent.objectLoad(object);\n            PopupNewDataFieldComponent.init({\n               onSave: () => {\n                  // be notified when a new Field is created & saved\n\n                  refreshOptions(object, view);\n               },\n            });\n         },\n\n         values: function () {\n            let result = {};\n\n            result.verticalGroupingField =\n               $$(ids.vGroupInput).getValue() || null;\n            result.horizontalGroupingField =\n               $$(ids.hGroupInput).getValue() || null;\n            result.ownerField = $$(ids.ownerInput).getValue() || null;\n\n            return result;\n         },\n\n         logic: {\n            refreshOptions: refreshOptions,\n         },\n      });\n   }\n\n   /**\n    * @method fromObj\n    * take our persisted data, and properly load it\n    * into this object instance.\n    * @param {json} data  the persisted data\n    */\n   fromObj(data) {\n      super.fromObj(data);\n\n      for (var v in defaultValues) {\n         this[v] = data[v] || defaultValues[v];\n      }\n\n      this.type = ABObjectWorkspaceViewKanban.type();\n   }\n\n   /**\n    * @method toObj()\n    * compile our current state into a {json} object\n    * that can be persisted.\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      for (var v in defaultValues) {\n         obj[v] = this[v];\n      }\n\n      obj.type = ABObjectWorkspaceViewKanban.type();\n      return obj;\n   }\n\n   getHorizontalGroupingField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.horizontalGroupingField);\n   }\n\n   getVerticalGroupingField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.verticalGroupingField);\n   }\n\n   getOwnerField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.ownerField);\n   }\n};\n","//\n// ABViewQueryBuilderObjectFieldConditions\n//\n// A UI component that is responsible for displaying a QueryBuilder based upon\n// the fields of a given ABObject.\n//\n// This object is also responsible for saving it's state to a settings value,\n// and generating the settings value to be saved.\n\nmodule.exports = class ABViewQueryBuilderObjectFieldConditions {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(label) {\n      this.label = label;\n      this.ui = null;\n   }\n\n   /**\n    * cleanRules\n    * walk through all the QueryBuilder (QB) rules and make conversions\n    * of the data into their proper formats.\n    * @param {obj} rules  the {rules} obj that is returned from the QB object\n    * @param {array} fields  an array of field definitions from the QB object\n    * @param {bool} dateToString  convert Dates to String format?\n    */\n   cleanRules(rules, fields, dateToString) {\n      if (typeof dateToString == \"undefined\") dateToString = true;\n\n      // walk the given condition rules / values, walk them and make sure\n      // any given rules have properly formatted values.\n      function processCondition(rule) {\n         // make sure rule is provided\n         if (rule) {\n            if (rule.glue && rule.rules) {\n               rule.rules.forEach((r) => {\n                  processCondition(r);\n               });\n            } else {\n               // converting a single rule:\n\n               var field = fields.filter((f) => {\n                  return f.id == rule.key;\n               })[0];\n               if (field) {\n                  switch (field.type) {\n                     case \"number\":\n                     case \"formula\":\n                        // when getting data from the server, the numbers are\n                        // sent back as strings (\"100.25\").\n                        // make sure to convert strings to numbers:\n                        if (typeof rule.value == \"string\") {\n                           if (rule.value.indexOf(\".\") == -1) {\n                              rule.value = parseInt(rule.value);\n                           } else {\n                              rule.value = parseFloat(rule.value);\n                           }\n                        }\n                        break;\n                     case \"date\":\n                        // in some cases we want to convert the Date() object returned\n                        // by QueryBuilder into a string for saving on the Server.\n                        if (dateToString) {\n                           // if we have a Date() obj returned from QueryBuilder,\n                           // convert to a string format:\n                           if (rule.value instanceof Date) {\n                              rule.value = webix.i18n.dateFormatStr(rule.value);\n                           }\n                        } else {\n                           // in other cases we want to convert the string returned\n                           // by the server into a Date() for the QB\n                           if (typeof rule.value == \"string\") {\n                              rule.value = new Date(rule.value);\n                           }\n                        }\n\n                        break;\n                  }\n               }\n            }\n         }\n      }\n      processCondition(rules);\n   }\n\n   // component\n   // initialize the UI display for this popup editor.\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      var L = App.Label;\n\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return this.unique(idBase + key ) + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         component: myUnique(\"qbObjectFieldConditions\"),\n         queryBuilder: myUnique(\"qBuilder\"),\n         queryBuilderContainer: myUnique(\"qBuilderContainer\"),\n         queryBuilderLayout: myUnique(\"qBuilderLayout\"),\n         showQBButton: myUnique(\"showQBButton\"),\n      });\n\n      // webix UI definition:\n      this.ui = {\n         view: \"layout\",\n         id: ids.queryBuilderLayout,\n         hidden: true,\n         type: \"line\",\n         rows: [\n            {\n               id: ids.showQBButton,\n               cols: [\n                  { fillspace: true },\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     name: \"addqb\",\n                     value: L(\"Add Custom Conditions\"),\n                     autowidth: true,\n                     click: function () {\n                        $$(ids.queryBuilderContainer).show();\n                        $$(ids.showQBButton).hide();\n                        // _logic.buttonCancel();\n                     },\n                  },\n                  { fillspace: true },\n               ],\n            },\n            {\n               hidden: true,\n               id: ids.queryBuilderContainer,\n               cols: [\n                  {\n                     view: \"querybuilder\",\n                     id: ids.queryBuilder,\n                     fields: this.conditionFields(),\n                  },\n               ],\n            },\n         ],\n      };\n\n      // tack on a label if provided.\n      if (this.label) {\n         this.ui.rows[1].cols.unshift({\n            view: \"label\",\n            css: \"ab-text-bold\",\n            label: this.label,\n            width: this.AB.UISettings.config().labelWidthLarge,\n         });\n      }\n\n      // for setting up UI\n      this.init = (options) => {\n         options = options || {};\n\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         /**\n          * cleanRules\n          * walk through all the QueryBuilder (QB) rules and make conversions\n          * of the data into their proper formats.\n          * @param {obj} rules  the {rules} obj that is returned from the QB object\n          * @param {array} fields  an array of field definitions from the QB object\n          * @param {bool} dateToString  convert Dates to String format?\n          */\n         cleanRules: (rules, fields, dateToString) => {\n            this.cleanRules(rules, fields, dateToString);\n         },\n\n         getValue: () => {\n            var values = null;\n            var QB = $$(ids.queryBuilder);\n            if (QB) {\n               values = QB.getValue();\n            }\n\n            // convert dates to simpler format:\n            // by default we're getting long values: \"Mon Feb 2, 2018 GMT xxxxxxx\",\n            // and webix doesn't seem to understand them when we send them back.\n            // so save simple date values: \"mm/dd/yyyy\"\n            if (values) {\n               _logic.cleanRules(values[0], values[1], true);\n            }\n\n            return values;\n         },\n\n         setValue: (values) => {\n            values = values || [];\n            if (!Array.isArray(values)) values = [values];\n            if (values.length == 0) {\n               values.push({});\n            } // push default rules\n            if (values.length < 2) {\n               values.push(this.conditionFields());\n            }\n\n            // convert dates from our server side \"string\" format into\n            // Date() objects.\n            _logic.cleanRules(values[0], values[1], false);\n\n            var QB = $$(ids.queryBuilder);\n            if (QB) {\n               if (values[0] && values[0].rules && values[0].rules.length) {\n                  QB.setValue(values[0]);\n                  $$(ids.queryBuilderContainer).show();\n                  $$(ids.showQBButton).hide();\n               }\n            }\n         },\n      });\n\n      this.getValue = _logic.getValue;\n      this.show = _logic.show;\n      this.setValue = _logic.setValue;\n   }\n\n   objectLoad(object) {\n      this.currentObject = object;\n   }\n\n   // conditionFields()\n   // Return the list of fields we are able to update.\n   // @return {array} of querybuilder field definitions:\n   //\t\t\t\t\t[\n   // \t\t\t\t\t\t{ id:\"fname\",   value:\"First Name\", type:\"string\" },\n   //\t\t\t\t\t    { id:\"lname\",   value:\"Last Name\",  type:\"string\" },\n   //\t\t\t\t\t    { id:\"age\",     value:\"Age\",        type:\"number\" },\n   //\t\t\t\t\t    { id:\"bdate\",   value:\"Birth Date\", type:\"date\" }\n   //\t\t\t\t\t]\n   conditionFields() {\n      var fieldTypes = [\n         \"string\",\n         \"LongText\",\n         \"number\",\n         \"date\",\n         \"email\",\n         \"formula\",\n         \"calculate\",\n      ];\n\n      var currFields = [];\n\n      if (this.currentObject) {\n         this.currentObject.fields().forEach((f) => {\n            if (fieldTypes.indexOf(f.key) != -1) {\n               // NOTE: the .id value must match the obj[.id]  in the data set\n               // so if your object data looks like:\n               // \t{\n               //\t\tname_first:'Neo',\n               //\t\tname_last: 'The One'\n               //  },\n               // then the ids should be:\n               // { id:'name_first', value:'xxx', type:'string' }\n\n               let type = f.key;\n               if (f.key == \"formula\" || f.key == \"calculate\") type = \"number\";\n               else if (f.key == \"LongText\") type = \"string\";\n\n               currFields.push({\n                  id: f.columnName,\n                  value: f.label,\n                  type: type,\n               });\n            }\n         });\n      }\n\n      return currFields;\n   }\n\n   // process\n   // Take the provided data and process each of our rules.\n   // @param {obj} options\n   // @return {promise}\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var numDone = 0;\n         var onDone = () => {\n            numDone++;\n            if (numDone >= this.listRules.length) {\n               resolve();\n            }\n         };\n\n         this.listRules.forEach((rule) => {\n            rule\n               .process(options)\n               .then(function () {\n                  onDone();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n\n         if (this.listRules.length == 0) {\n            resolve();\n         }\n      });\n   }\n\n   showQueryBuilderContainer() {\n      $$(this.ids.queryBuilderLayout).show();\n      $$(this.ids.queryBuilderContainer).show();\n      $$(this.ids.showQBButton).hide();\n   }\n\n   // // fromSettings\n   // // Create an initial set of default values based upon our settings object.\n   // // @param {obj} settings  The settings object we created in .toSettings()\n   // fromSettings (settings) {\n   // \t// settings: [\n   // \t//  { rule.settings },\n   // \t//  { rule.settings }\n   // \t// ]\n\n   // \t// clear any existing Rules:\n   // \tthis.listRules.forEach((rule)=>{\n   // \t\t$$(this.ids.rules).removeView(rule.ids.component);\n   // \t})\n   // \tthis.listRules = [];\n\n   // \tif (settings) {\n   // \t\tsettings.forEach((ruleSettings)=>{\n   // \t\t\tthis.addRule(ruleSettings);\n   // \t\t})\n   // \t}\n   // }\n\n   // // toSettings\n   // // create a settings object to be persisted with the application.\n   // // @return {array} of rule settings.\n   // toSettings () {\n   // \tvar settings = [];\n   // \tthis.listRules.forEach((r)=>{\n   // \t\tsettings.push(r.toSettings());\n   // \t})\n   // \treturn settings;\n   // }\n};\n","//\n// ABViewRule\n//\n// A component that manages an individual Rule in a Rule list.\n//\n// Each rule can manage a set of given Actions.  For each Rule, one Action\n// can be chosen, A condition for when that action is executed, and then\n// inputs for any additional data required by that action.\n//\n// Rules are used in the Interface Builder to present the designer an interface\n// for defining the Action+Condition:\n//\n//\n//\n// In live apps, Rules are used when processing events and determining if an\n// action is to be performed:\n//\n//\n//\n// A Rule needs to save it's current state to an objects settings, and to\n// initialize itself from those settings.\n//\nconst ObjectQueryBuilder = require(\"./ABViewQueryBuilderObjectFieldConditions\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRule {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(listActions) {\n      this.listActions = listActions || []; // the list of Actions this Rule manages\n\n      this.actionDropList = []; // the Webix UI droplist\n      this.listActions.forEach((a) => {\n         this.actionDropList.push({ id: a.key, value: a.label });\n      });\n\n      this.selectedAction = null; // the currently selected Action.key\n      if (this.actionDropList.length > 0) {\n         this.selectedAction = this.actionDropList[0].id;\n      }\n\n      this.removable = true; // can I delete this rule?\n\n      this.currentObject = null; // What ABObject is this associated with\n      // NOTE: this is important for Actions.\n\n      this.objectQB = null; // The QueryBuilder (QB) object\n\n      this.currentForm = null;\n   }\n\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      // this is different because multiple instances of this View can be displayed\n      // at the same time.  So make each instance Unique:\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return this.unique(idBase + key ) + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         // each instance must be unique\n         component: myUnique(\"component\"),\n\n         selectAction: myUnique(\"chooseAction\"),\n\n         queryBuilder: myUnique(\"queryBuilder\"),\n\n         valueDisplay: myUnique(\"valueArea\"),\n      });\n\n      this.objectQB.label = L(\"When\");\n      this.objectQB.component(this.App, this.idBase);\n      this.ui = this._generateUI();\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         this.objectQB.init();\n\n         // make sure the current Action's value display is initialized:\n         var Action = this.currentAction();\n         if (Action) {\n            Action.component(this.App, this.idBase);\n            var comp = Action.valueDisplay(ids.valueDisplay);\n\n            _logic.replaceValueDisplay(comp);\n\n            // webix.ui(comp.ui, $$(this.ids.valueDisplay));\n            comp.init();\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onDelete: function () {\n               console.warn(\"NO onDelete()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         replaceValueDisplay: (component) => {\n            // remove current content area:\n            var $ValueDisplay = $$(this.ids.valueDisplay);\n            if (!$ValueDisplay) return;\n\n            var children = $ValueDisplay.getChildViews();\n            var cloneChildren = [];\n            children.forEach((c) => {\n               cloneChildren.push(c);\n            });\n            cloneChildren.forEach((c) => {\n               $ValueDisplay.removeView(c);\n            });\n\n            $ValueDisplay.addView(component.ui);\n         },\n\n         selectAction: (newValue, oldVal) => {\n            if (newValue) {\n               $$(this.ids.component)\n                  .getChildViews()\n                  .forEach((views) => {\n                     views.show();\n                  });\n            }\n            // bonus:  save current state of previous Action\n            var prevAction = this.getAction(oldVal);\n            if (prevAction) {\n               prevAction.stashCondition(this.objectQB.getValue());\n            }\n\n            // now switch to the new Action\n            this.selectedAction = newValue;\n            var currAction = this.currentAction();\n            if (currAction) {\n               // reset Condition filters.\n               this.objectQB.setValue(currAction.condition());\n\n               // have Action display it's values form\n               currAction.component(this.App, this.idBase);\n               var component = currAction.valueDisplay(ids.valueDisplay);\n               _logic.replaceValueDisplay(component);\n               component.init();\n               // currAction.valueDisplay(ids.valueDisplay);\n            }\n         },\n      });\n   }\n\n   // not intended to be called externally\n   _generateUI() {\n      return {\n         id: this.ids.component,\n         view: \"layout\",\n         css: \"ab-component-form-rules\",\n         padding: 20,\n         // margin: 10,\n\n         // this should be a CSS setting: this.AB.Config.xxxx\n         // width: 680,\n         type: \"line\",\n         rows: [\n            {\n               view: \"template\",\n               css: \"ab-component-form-rules-delete\",\n               template: '<i class=\"fa fa-trash ab-component-remove\"></i>',\n               height: 30,\n               borderless: true,\n               hidddatasourceen: this.removable == false,\n               onClick: {\n                  \"ab-component-remove\": (e, id, trg) => {\n                     this._logic.callbacks.onDelete(this);\n                  },\n               },\n            },\n            // Action\n            {\n               id: this.ids.selectAction,\n               view: \"richselect\",\n               label: L(\"Action\"),\n               placeholder: L(\"Choose an action\"),\n               labelWidth: this.AB.UISettings.config().labelWidthLarge,\n               options: this.actionDropList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     this._logic.selectAction(newVal, oldVal);\n                  },\n               },\n            },\n\n            // Values\n            {\n               for: \"values\",\n               hidden: true,\n               cells: [\n                  {\n                     view: \"layout\",\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: L(\"Values\"),\n                           css: \"ab-text-bold\",\n                           width: this.AB.UISettings.config().labelWidthLarge,\n                        },\n                        {\n                           id: this.ids.valueDisplay,\n                           view: \"layout\",\n                           rows: [\n                              {\n                                 label: L(\n                                    \" ABViewRule: This should be the Set Area\"\n                                 ),\n                                 css: \"ab-text-bold\",\n                                 height: 30,\n                              },\n                           ],\n                        },\n                     ],\n                  },\n               ],\n            },\n\n            // When\n            this.objectQB.ui,\n         ],\n      };\n   }\n\n   // return the QueryBuilder fields data for the currently selected Action.\n   conditionFields() {\n      var fields = [];\n\n      var selectedAction = this.currentAction();\n      if (selectedAction) {\n         fields = selectedAction.conditionFields();\n      }\n\n      return fields;\n   }\n\n   currentAction() {\n      return this.getAction(this.selectedAction);\n   }\n\n   getAction(key) {\n      return this.listActions.filter((a) => {\n         return a.key == key;\n      })[0];\n   }\n\n   objectLoad(object) {\n      this.currentObject = object;\n      this.listActions.forEach((a) => {\n         a.objectLoad(object);\n      });\n\n      var label = L(\"When\");\n\n      this.objectQB = new ObjectQueryBuilder(label);\n      this.objectQB.objectLoad(object);\n\n      // regenerate our UI when a new object is loaded.\n      if (this.ids) {\n         this.ui = this._generateUI();\n      }\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n      this.listActions.forEach((a) => {\n         a.formLoad(form);\n      });\n   }\n\n   processPre(options = {}) {\n      let isValid = this.isValid(options.data);\n      if (!isValid) return;\n\n      let currentAction = this.currentAction();\n      if (!currentAction) return;\n\n      currentAction.processUpdateObject({}, options.data);\n   }\n\n   // process\n   // Take the provided data and process this rule\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      var currentAction = this.currentAction();\n      if (!currentAction) return Promise.resolve();\n\n      let isValid = this.isValid(options.data);\n      if (isValid) {\n         return currentAction.process(options);\n      } else {\n         // else just resolve and continue on\n         return new Promise((resolve, reject) => {\n            resolve();\n         });\n      }\n   }\n\n   fromSettings(settings) {\n      settings = settings || {};\n\n      if (settings.selectedAction) {\n         // store our Query Rules\n         this.selectedAction = settings.selectedAction;\n         var selectedAction = this.currentAction();\n         if (!selectedAction) return;\n         selectedAction.stashCondition(settings.queryRules || {});\n\n         // if our UI components are present, populate them properly:\n         if (this.ids) {\n            // Trigger our UI to refresh with this selected Action:\n            // NOTE: this also populates the QueryBuilder\n            $$(this.ids.selectAction).setValue(this.selectedAction);\n            // this._logic.selectAction(this.selectedAction);\n         }\n\n         // now continue with setting up our settings:\n         selectedAction.fromSettings(settings.actionSettings);\n      }\n   }\n\n   toSettings() {\n      var settings = {};\n\n      if (this.selectedAction) {\n         settings.selectedAction = this.selectedAction;\n         settings.queryRules = this.objectQB.getValue();\n         let currentAction = this.currentAction();\n         if (currentAction) {\n            settings.actionSettings = currentAction.toSettings();\n         }\n      }\n\n      return settings;\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      var currAction = this.currentAction();\n      if (currAction && this.objectQB) {\n         this.objectQB.setValue(currAction.condition());\n         currAction.qbFixAfterShow();\n      }\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   async isReady() {\n      let currentAction = this.currentAction();\n      if (currentAction) {\n         return currentAction.isReady();\n      }\n      return Promise.resolve();\n   }\n\n   isValid(data = {}) {\n      const fields = this.currentObject.fields(),\n         currentAction = this.currentAction(),\n         QBCondition = currentAction.condition(),\n         query = QBCondition[0] ?? {};\n\n      const convertToNumber = (text = \"\") => {\n         // if we have multiple rules we need to check if value is already a number before converting.\n         if (typeof text == \"number\") return text;\n\n         return parseFloat(text.replace(/[^-0-9.]/g, \"\"));\n      };\n\n      // Fix string data in number type\n      // NOTE: \"1000\" > \"99\" = false    >_<!\n      fields\n         .filter(\n            (f) =>\n               f.key == \"number\" || f.key == \"calculate\" || f.key == \"formula\"\n         )\n         .forEach((f) => {\n            try {\n               // filter conditions\n               if (Array.isArray(query?.rules)) {\n                  query.rules.forEach((r) => {\n                     // NOTE: compatible with old settings\n                     if (r.key == f.id || r.key == f.columnName)\n                        r.value = convertToNumber(r.value);\n                  });\n               }\n\n               // row data\n               if (\n                  data[f.columnName] &&\n                  typeof data[f.columnName] === \"string\"\n               ) {\n                  data[f.columnName] = convertToNumber(data[f.columnName]);\n               }\n            } catch (e) {\n               // continue regardless of error\n            }\n         });\n\n      const hiddenFilter = (this.AB ?? AB).filterComplexNew(\n         `${this.idBase}_filter_complex`\n      );\n      hiddenFilter.fieldsLoad(fields, this.currentObject);\n      hiddenFilter.setValue(query);\n      hiddenFilter.init();\n\n      return hiddenFilter.isValid(data);\n\n      // var id = \"hiddenQB_\" + webix.uid();\n\n      // // if our data passes the QueryRules then tell Action to process\n      // var ui = {\n      //    id: id,\n      //    hidden: true,\n      //    view: \"querybuilder\",\n      // };\n      // var hiddenQB = webix.ui(ui);\n\n      // let currentAction = this.currentAction();\n      // var QBCondition = currentAction.condition();\n\n      // if (this.objectQB) {\n      //    this.objectQB.cleanRules(QBCondition[0], QBCondition[1], false);\n      // }\n\n      // let query = QBCondition[0] || {},\n      //    fields = QBCondition[1] || [];\n\n      // // hiddenQB.setValue(QBCondition);\n      // hiddenQB.setValue({\n      //    query: query,\n      //    fields: fields,\n      // });\n\n      // var QBHelper = hiddenQB.getFilterHelper();\n      // var isValid = QBHelper(data);\n\n      // hiddenQB.destructor(); // remove the QB\n\n      // return isValid;\n   }\n\n   get isPreProcess() {\n      let currentAction = this.currentAction();\n      return currentAction.isPreProcess || false;\n   }\n};\n","//\n// ABViewRuleAction\n//\n// A component that manages an individual Action in a Rule.\n//\n// Each Action is responsible for figuring out when it can run, and what to do.\n//\n// Actions are used in the Interface Builder to present the designer an interface\n// for defining the a Condition and a set of data necessary to complete the Action:\n//\n//\n//\n// In live apps, Actions are used when processing events and determining if an\n// if and what is to be performed:\n//\n//\n//\n// An Action needs to save it's current state to an objects settings, and to\n// initialize itself from those settings.\n//\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleAction {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    * @param {ABViewForm} currentForm\tthe current form this Action is associated with.\n    */\n   constructor(App, idBase, currentForm) {\n      this.key = \"ABViewRuleAction\";\n\n      this.queryObject = null; // the current ABObject we use to create QueryBuilder information.\n\n      this.currentForm = null;\n\n      this.queryRules = {}; // default set of rules for the Query Builder condition\n\n      this.valueRules = {}; // the initial Value Rules for this Action\n      // The Action Subclass defines what this {} is.\n\n      this.currentForm = currentForm; // the ABViewForm object that this rule Action is tied to.\n   }\n\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      this.label = L(\"generic abviewruleaction\");\n\n      function myUnique(key) {\n         return App.unique(`${idBase}_${key}`);\n      }\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         // each instance must be unique\n         component: `${myUnique(\"component\")}_${webix.uid()}`,\n      });\n\n      this._ui = null; // internally track our UI Component value Rules\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onDelete: function () {\n               console.warn(\"NO onDelete()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n      });\n   }\n\n   // condition\n   // Return the querybuilder setup structure for this Action.\n   // @return {array}  of querybuilder setup\n   //\t\t\t\t\t[\n   //\t\t\t\t\t\t{rules},\n   //\t\t\t\t\t\t[fields]\n   //\t\t\t\t\t]\n   condition() {\n      return [this.conditionRules(), this.conditionFields()];\n   }\n\n   // stashCondition\n   // capture the current set of rules provided by the QB object.\n   // This doesn't guarantee these will be saved to the App settings.\n   // Instead it is a temporary stash. Only the selected Action's\n   // values will be persisited to the App settings.\n   // @param {obj/Array} rules  The QueryBuilder rule value returned from\n   //\t\t\t\t\t\t\t .getValue()\n   //\t\t\t\t\t\t\t note: it is the first entry .getValue()[0]\n   //\n   stashCondition(rules) {\n      // check to see if they sent us the raw QueryBuilder values and only\n      // pull off the rules if they did\n      if (Array.isArray(rules)) {\n         rules = rules[0];\n      }\n\n      // sanity check on glue value: don't update if null or not given.\n      if (rules) {\n         // sometimes .glue is undefined  so default to 'and'\n         if (rules.glue != \"or\") rules.glue = \"and\";\n\n         this.queryRules = rules;\n      }\n   }\n\n   // conditionFields()\n   // Return the list of fields we are able to update.\n   // @return {array} of querybuilder field definitions:\n   //\t\t\t\t\t[\n   // \t\t\t\t\t\t{ id:\"fname\",   value:\"First Name\", type:\"string\" },\n   //\t\t\t\t\t    { id:\"lname\",   value:\"Last Name\",  type:\"string\" },\n   //\t\t\t\t\t    { id:\"age\",     value:\"Age\",        type:\"number\" },\n   //\t\t\t\t\t    { id:\"bdate\",   value:\"Birth Date\", type:\"date\" }\n   //\t\t\t\t\t]\n   conditionFields() {\n      var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n      var currFields = [];\n\n      if (this.queryObject) {\n         this.queryObject.fields().forEach((f) => {\n            if (fieldTypes.indexOf(f.key) != -1) {\n               // NOTE: the .id value must match the obj[.id]  in the data set\n               // so if your object data looks like:\n               // \t{\n               //\t\tname_first:'Neo',\n               //\t\tname_last: 'The One'\n               //  },\n               // then the ids should be:\n               // { id:'name_first', value:'xxx', type:'string' }\n               currFields.push({\n                  id: f.columnName,\n                  value: f.label,\n                  type: f.key,\n               });\n            }\n         });\n      }\n\n      return currFields;\n   }\n\n   // conditionRules()\n   // Return the current rule definition object for this Action.\n   // @return {obj}\n   conditionRules() {\n      return this.queryRules;\n   }\n\n   // objectLoad\n   // save the current object this Action is associated with.\n   objectLoad(object) {\n      // this.currentObject = object;\t\t\t\t// DO WE NEED THIS?\n      this.queryObjectLoad(object);\n   }\n\n   // queryObjectLoad\n   // save the current object this Action is using to build query rules.\n   queryObjectLoad(object) {\n      this.queryObject = object;\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      console.error(\n         \"!!! ABViewRuleAction.process() should be overridden by its child class.\"\n      );\n      return new Promise((resolve, reject) => {\n         reject(\n            new Error(\n               \"ABViewRuleAction.process() should be overridden by its child class.\"\n            )\n         );\n      });\n   }\n\n   // valueDisplay\n   // create the form to collect the specific data this Action needs to function.\n   // @param {string} webixID  the $$(webixID) of the area to insert our display.\n   valueDisplay(webixID) {\n      return this.valueDisplayComponent(webixID);\n   }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      return (this._ui = {\n         ui: {\n            template: \"ABViewRuleAction.valueDisplayComponent\",\n         },\n         init: (data) => {\n            console.error(\n               \"!!! ABViewRuleAction.valueDisplayComponent() should be overridden.\"\n            );\n            console.warn(\" --> passed in data:\", data);\n         },\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      // settings: {\n      //\tvalueRules:{}\n      // }\n      settings = settings ?? {};\n      this.valueRules = settings.valueRules ?? settings;\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      var settings = {};\n\n      // require the child to insert the valueRules\n      return settings;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   isReady() {\n      return Promise.resolve();\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      // our child classes can implement this if needed.\n      // \t- ABViewRuleActionFormRecordRuleUpdateConnected\n   }\n};\n","//\n// ABViewRuleList\n//\n// A UI component that is responsible for displaying a list of current \"Rules\"\n// for a given purpose.  Some examples are the\n//\t\tForm -> Submit Rules,\n//\t\tForm -> Display Rules\n// \t\tForm -> Record Rules.\n//\n\n// ABViewRuleList is the parent object that manages displaying the common popup,\n// list, adding a rule, removing rules, etc...\n//\n// It is intending to be subclassed by a Specific List object that will load\n// up a given set of Actions for their list.\n//\n// When using it in the AppBuilder Interface Builder, this object provides:\n// \tvar PopupRecordList = new ABViewRuleList(App, idBase);\n//  PopupRecordList.fromSettings(CurrentObjectDefinition.rules); // populates List with current settings defined in CurrentObjectDefinition\n//  PopupRecordList.init({ onSave:()=>{}})\t// displays the popup for IB\n//  CurrentObjectDefinition.rules = PopupRecordList.toSettings(); // save the settings to store in json config\n//\n// When using on a live running App:\n//  PopupRecordList = new ABViewRuleList(App, idBase);\n//  PopupRecordList.fromSettings();\n//\n//  onFormSubmit(data) {\n//\t\t// note: this automatically validates and runs each rule:\n//\t\tPopupRecordList.process({data:data, view:{ current ABViewForm object }})\n//\t\t.then()\n//\t\t.catch();\n//  }\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleList {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(childSettings) {\n      this.listRules = [];\n      this.currentObject = null;\n\n      // ensure required values:\n      childSettings = childSettings || {};\n      childSettings.labels = childSettings.labels || {};\n      childSettings.labels.header =\n         childSettings.labels.header || \"ab.components.form.ruleList\";\n      childSettings.labels.headerDefault =\n         childSettings.labels.headerDefault || \"*Rule List\";\n      this.childSettings = childSettings;\n   }\n\n   /**\n    * @method component\n    * initialize the UI display for this popup editor.\n    * @param {obj} App  The common UI App object shared among our UI components\n    * @param {string} idBase A unique Key used the the base of our unique ids\n    */\n   component(App, idBase) {\n      this.App = this.App || App;\n      this.idBase = idBase;\n\n      App = App || this.App;\n\n      this.currentForm = null;\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         component: `${idBase}_component`,\n         rules: `${idBase}_rules`,\n         rulesScrollview: `${idBase}_rulesScrollview`,\n\n         action: `${idBase}_action`,\n         when: `${idBase}_when`,\n\n         values: `${idBase}_values`,\n         set: `${idBase}_set`,\n      });\n\n      // webix UI definition:\n      this.ui = {\n         view: \"window\",\n         id: ids.component,\n         modal: true,\n         position: \"center\",\n         resize: true,\n         width: 700,\n         height: 450,\n         css: \"ab-main-container\",\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {\n                  view: \"label\",\n                  label: this.childSettings.labels.headerDefault,\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  icon: \"fa fa-plus\",\n                  type: \"iconButton\",\n                  label: L(\"Add new rule\"),\n                  width: 150,\n                  click: () => {\n                     this.addRule();\n                     console.log($$(ids.rules).$height);\n                     $$(ids.rulesScrollview).scrollTo(0, $$(ids.rules).$height);\n                  },\n               },\n            ],\n         },\n         body: {\n            type: \"form\",\n            rows: [\n               {\n                  view: \"scrollview\",\n                  id: ids.rulesScrollview,\n                  scroll: \"xy\",\n                  body: {\n                     view: \"layout\",\n                     id: ids.rules,\n                     margin: 20,\n                     padding: 10,\n                     rows: [],\n                  },\n               },\n               // {\n               // \tcss: { 'background-color': '#fff' },\n               // \tcols: [\n               // \t\t{\n               // \t\t\tview: \"button\",\n               // \t\t\ticon: \"plus\",\n               // \t\t\ttype: \"iconButton\",\n               // \t\t\tlabel: labels.component.addNewRule,\n               // \t\t\twidth: 150,\n               // \t\t\tclick: () => {\n               // \t\t\t\tthis.addRule();\n               // \t\t\t}\n               // \t\t},\n               // \t\t{ fillspace: true }\n               // \t]\n               // },\n               {\n                  css: { \"background-color\": \"#fff\" },\n                  cols: [\n                     { fillspace: true },\n                     {\n                        view: \"button\",\n                        name: \"cancel\",\n                        value: L(\"Cancel\"),\n                        css: \"ab-cancel-button\",\n                        autowidth: true,\n                        click: function () {\n                           _logic.buttonCancel();\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        name: \"save\",\n                        label: L(\"Save\"),\n                        type: \"form\",\n                        autowidth: true,\n                        click: function () {\n                           _logic.buttonSave();\n                        },\n                     },\n                     { fillspace: true },\n                  ],\n               },\n            ],\n         },\n      };\n\n      // var _currentObject = null;\n      var _rules = [];\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         webix.ui(this.ui);\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         buttonCancel: function () {\n            $$(ids.component).hide();\n         },\n\n         buttonSave: () => {\n            var results = this.toSettings();\n\n            _logic.callbacks.onSave(results);\n            _logic.hide();\n         },\n\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         hide: function () {\n            $$(ids.component).hide();\n         },\n\n         show: function () {\n            $$(ids.component).show();\n         },\n      });\n\n      this.show = _logic.show;\n      this.setValue = _logic.setValue;\n   }\n\n   /**\n    * @method addRule\n    * Instantiate a new Rule in our list.\n    * @param {obj} settings  The settings object from the Rule we created in .toSettings()\n    */\n   addRule(settings) {\n      var Rule = this.getRule();\n      if (!Rule) return;\n\n      this.listRules.push(Rule);\n\n      // if we have tried to create our component:\n      if (this.ids) {\n         // if our actually exists, then populate it:\n         var RulesUI = $$(this.ids.rules);\n         if (RulesUI) {\n            // make sure Rule.ui is created before calling .init()\n            Rule.component(this.App, this.idBase); // prepare the UI component\n            var viewId = RulesUI.addView(Rule.ui);\n\n            Rule.init({\n               onDelete: (deletedRule) => {\n                  $$(this.ids.rules).removeView(Rule.ids.component);\n\n                  var index = this.listRules.indexOf(deletedRule);\n                  if (index !== -1) {\n                     this.listRules.splice(index, 1);\n                  }\n               },\n            });\n         }\n      }\n\n      if (settings) {\n         Rule.fromSettings(settings);\n      }\n   }\n\n   /**\n    * @method fromSettings\n    * Create an initial set of default values based upon our settings object.\n    * @param {obj} settings  The settings object we created in .toSettings()\n    */\n   fromSettings(settings) {\n      // settings: [\n      //  { rule.settings },\n      //  { rule.settings }\n      // ]\n\n      // clear any existing Rules:\n      this.listRules.forEach((rule) => {\n         if (\n            this.ids &&\n            this.ids.rules &&\n            rule &&\n            rule.ids &&\n            rule.ids.component\n         ) {\n            $$(this.ids.rules).removeView(rule.ids.component);\n         }\n      });\n      this.listRules = [];\n\n      if (settings) {\n         settings.forEach((ruleSettings) => {\n            this.addRule(ruleSettings);\n         });\n      }\n   }\n\n   /**\n    * @method objectLoad\n    * A rule is based upon a Form that was working with an Object.\n    * .objectLoad() is how we specify which object we are working with.\n    *\n    * @param {ABObject} The object that will be used to evaluate the Rules\n    */\n   objectLoad(object) {\n      this.currentObject = object;\n\n      // tell each of our rules about our object\n      this.listRules.forEach((r) => {\n         r.objectLoad(object);\n      });\n   }\n\n   processPre(options) {\n      (this.listRules || [])\n         .filter((rule) => rule.isPreProcess == true)\n         .forEach((rule) => {\n            rule.processPre(options, options.data);\n         });\n   }\n\n   /**\n    * @method process\n    * Take the provided data and process each of our rules.\n    * @param {obj} options\n    * @return {promise}\n    */\n   process(options) {\n      return new Promise((resolve, reject) => {\n         let listRules = (this.listRules || []).filter(\n            (rule) => !rule.isPreProcess\n         );\n\n         var numDone = 0;\n         var onDone = () => {\n            numDone++;\n            if (numDone >= listRules.length) {\n               resolve();\n            }\n         };\n\n         listRules.forEach((rule) => {\n            rule\n               .process(options)\n               .then(function () {\n                  onDone();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n\n         if (listRules.length == 0) {\n            resolve();\n         }\n      });\n   }\n\n   /**\n    * @method toSettings\n    * create a settings object to be persisted with the application.\n    * @return {array} of rule settings.\n    */\n   toSettings() {\n      var settings = [];\n      this.listRules.forEach((r) => {\n         settings.push(r.toSettings());\n      });\n      return settings;\n   }\n\n   getRule() {\n      console.error(\n         \"!!! ABViewRuleList.getRule() should be overridded by a child object.\"\n      );\n      return null;\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n      this.App = this.App || form.App;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   rulesReady() {\n      // This base class should be overwritten by any subclass that needs\n      // to prepare:\n      return Promise.resolve();\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      this.listRules.forEach((r) => {\n         r.qbFixAfterShow();\n      });\n   }\n};\n","//\n// ABViewRuleListFormRecordRules\n//\n// A component that is responsible for displaying the specific list of Record\n// Rules for a form.\n//\nconst ABViewRuleList = require(\"./ABViewRuleList\");\nconst ABViewRule = require(\"./ABViewRule\");\n\nconst RoleUpdateExisting = require(\"./ruleActions/ABViewRuleActionFormRecordRuleUpdate\");\nconst RoleInsertConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleInsertConnected\");\nconst RoleUpdateConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleUpdateConnected\");\nconst RoleRemoveConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleRemoveConnected\");\n\nmodule.exports = class ABViewRuleListFormRecordRules extends ABViewRuleList {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor() {\n      var settings = {\n         labels: {\n            header: \"ab.components.form.recordRules\",\n            headerDefault: \"*Record Rules\",\n         },\n      };\n      super(settings);\n   }\n\n   // must return the actual Rule object.\n   getRule() {\n      var listActions = [\n         new RoleUpdateExisting(\n            this.App,\n            `${this.idBase}_ruleActionUpdate`,\n            this.currentForm\n         ),\n         new RoleInsertConnected(\n            this.App,\n            `${this.idBase}_ruleActionInsert`,\n            this.currentForm\n         ),\n         new RoleUpdateConnected(\n            this.App,\n            `${this.idBase}_ruleActionUpdateConnected`,\n            this.currentForm\n         ),\n         new RoleRemoveConnected(\n            this.App,\n            `${this.idBase}_ruleActionRemoveConnected`,\n            this.currentForm\n         ),\n      ];\n\n      var Rule = new ABViewRule(listActions);\n      if (this.currentObject) {\n         Rule.objectLoad(this.currentObject);\n      }\n      return Rule;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our list of Rules is\n    * ready to work.\n    * @return {Promise}\n    */\n   async rulesReady() {\n      var allReady = (this.listRules || []).map((r) => r.isReady());\n      await Promise.all(allReady);\n   }\n};\n","//\n// ABViewRuleListFormSubmitRules\n//\n// A component that is responsible for displaying the specific list of Submit\n// Rules for a form.\n//\nconst ABViewRuleList = require(\"./ABViewRuleList\");\nconst ABViewRule = require(\"./ABViewRule\");\n\nconst RoleConfirmMessage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleConfirmMessage\");\nconst RuleExistPage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleExistPage\");\nconst RuleParentPage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleParentPage\");\nconst RuleClosePopup = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleClosePopup\");\nconst RuleWebsite = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleWebsite\");\nconst RuleEmail = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleEmail\");\n\nmodule.exports = class ABViewRuleListFormSubmitRules extends ABViewRuleList {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor() {\n      var settings = {\n         labels: {\n            header: \"ab.component.form.submitRule\",\n            headerDefault: \"*Submit Rules\",\n         },\n      };\n      super(settings);\n   }\n\n   // must return the actual Rule object.\n   getRule() {\n      var listActions = [\n         new RoleConfirmMessage(\n            this.App,\n            `${this.idBase}_ruleActionConfirmMessage`\n         ),\n         new RuleExistPage(this.App, `${this.idBase}_ruleActionExistPage`),\n         new RuleParentPage(this.App, `${this.idBase}_ruleActionParentPage`),\n         new RuleClosePopup(this.App, `${this.idBase}_ruleActionClosePopup`),\n         new RuleWebsite(this.App, `${this.idBase}_ruleActionWebsite`),\n         new RuleEmail(this.App, `${this.idBase}_ruleActionEmail`),\n      ];\n\n      var Rule = new ABViewRule(listActions);\n      Rule.objectLoad(this.currentObject);\n      Rule.formLoad(this.currentForm);\n      return Rule;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleInsertConnected\n//\n// An action that allows you to insert a connected object.\n//\n// NOTE: this is very similar to the Update Connected Rule, so we subclass that one and\n// modify it to only Insert data.\n//\n//\nconst UpdateConnected = require(\"./ABViewRuleActionFormRecordRuleUpdateConnected\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleInsertConnected extends (\n   UpdateConnected\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleInsertConnected\";\n      this.label = L(\"Insert Connected Object\");\n   }\n\n   /**\n    * valueDisplayChooser\n    * Our Values Display is a Select Box with a choice of connected fields.\n    * Once a field is chosen, then we display the Updater form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayChooser(idBase) {\n      var Component = super.valueDisplayChooser(idBase);\n\n      // in our case, there are no additional QB conditions:\n      // so overwrite the .showQBIfNeeded() routine to not show anything:\n      Component._logic.showQBIfNeeded = function () {};\n\n      return Component;\n   }\n\n   /**\n    * queryBuilderDisplay\n    * override our parent .queryBuilderDisplay to not create a new .objectQB\n    * @return {null}\n    */\n   queryBuilderDisplay() {\n      return null;\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      // get connected object\n      var connObj = this.connectedObject();\n      var model = connObj.model();\n\n      var connectionField = this.selectedField();\n\n      // var condition = null; // our lookup condition\n\n      // we are going to create a new instance of the connected object\n      // and make sure our .id is in the connected object's connectionField\n      // the server side will take care of making the proper relationship.\n\n      // first, create a new set of values:\n      var newObjectValues = {};\n\n      // update them according to our rules\n      this.processUpdateObject({}, newObjectValues);\n\n      if (newObjectValues.newRecords) {\n         // now add our .id to the proper field in newObjectValues\n         let connectedObjectField = connObj.fieldByID(\n            connectionField.settings.linkColumn\n         );\n\n         if (!connectedObjectField)\n            return Promise.reject(\"No connected object field\");\n\n         newObjectValues.newRecords.forEach((r) => {\n            r[connectedObjectField.columnName] = options.data.id;\n            // perform the update/insert\n            return model.create(r);\n         });\n      } else {\n         // now add our .id to the proper field in newObjectValues\n         let connectedObjectField = connObj.fieldByID(\n            connectionField.settings.linkColumn\n         );\n\n         if (!connectedObjectField)\n            return Promise.reject(\"No connected object field\");\n\n         newObjectValues[connectedObjectField.columnName] = options.data.id;\n\n         // perform the update/insert\n         return model.create(newObjectValues);\n      }\n   }\n\n   /**\n    * toSettings\n    * return an object that represents the current state of this Action\n    * @return {obj}\n    */\n   toSettings() {\n      // settings: {\n      // \tselectedFieldID: 'guid',\n      //\tvalueRules:{}\t\t// from ABViewRuleActionObjectUpdater\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      // we don't use .qpCondition\n      delete settings.qbCondition;\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleRemoveConnected\n//\n// An action that allows you to update fields on an object that is connected to\n// the current object we just Added/Updated\n//\n//\nconst ABViewRuleActionFormRecordRuleUpdateConnected = require(\"./ABViewRuleActionFormRecordRuleUpdateConnected\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleRemoveConnected extends (\n   ABViewRuleActionFormRecordRuleUpdateConnected\n) {\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleRemoveConnected\";\n      this.label = L(\"Remove Connected Record\");\n\n      this.isUpdateValueDisabled = true; // disable update data of each fields\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      let selectedField = this.selectedField();\n      this._formData = options.data;\n\n      return new Promise((resolve, reject) => {\n         // get the model from the provided Form Obj:\n         let dc = options.form.datacollection;\n         if (!dc) return resolve();\n\n         let model = dc.model;\n         if (!model) return resolve();\n\n         let updatedVals = {};\n         updatedVals[selectedField.columnName] = \"\";\n\n         model\n            .update(options.data.id, updatedVals)\n            .then(resolve)\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message:\n                     \"!!! ABViewRuleActionFormRecordRuleUpdate.process(): update error:\",\n                  data: options.data,\n               });\n               reject(err);\n            });\n      });\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleUpdate\n//\n// An action that allows you to update fields on an object that was currently\n// Added/Updated.\n//\n//\nconst ABViewRuleActionObjectUpdater = require(\"./ABViewRuleActionObjectUpdater\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleUpdate extends (\n   ABViewRuleActionObjectUpdater\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdate\";\n      this.label = L(\"Update Record\");\n   }\n\n   get isPreProcess() {\n      return true;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleUpdateConnected\n//\n// An action that allows you to update fields on an object that is connected to\n// the current object we just Added/Updated\n//\n//\nconst ABViewRuleActionObjectUpdater = require(\"./ABViewRuleActionObjectUpdater\");\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\nconst ObjectQueryBuilder = require(\"../ABViewQueryBuilderObjectFieldConditions\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleUpdateConnected extends (\n   ABViewRuleActionObjectUpdater\n) {\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdateConnected\";\n      this.label = L(\"Update Connected Record\");\n\n      this.baseObject = null; // the object the current form is working with.\n      // Use this to find our connected fields.\n\n      this.selectedFieldID = null; // the selected field ID in the .baseObject that is\n      // used for updating.  This should be one of the connection Fields.\n\n      this.fieldDropList = []; // the list of fields to offer based upon the current .baseObject.\n\n      this.objectQB = null; // the QueryBuilder used for offering conditions based upon our connected Object.\n      this.qbCondition = null; // the QB condition entered for selecting which remote object.\n   }\n\n   // field\n\n   /**\n    * objectLoad\n    * save the current object this Action is associated with.\n    * in the case of the UpdateConnected Action, assigning us\n    * this object only impacts the queryObject.\n    *\n    * The Updater form will use another object we select in\n    * the form dropdown.\n    *\n    * @param {object} object\n    *\n    */\n   objectLoad(object) {\n      this.queryObjectLoad(object);\n      this.baseObject = object;\n\n      // now build our fieldDropList for the select\n      var connectionFields = this.connectedFieldList();\n      connectionFields.forEach((cf) => {\n         this.fieldDropList.push({\n            id: cf.id,\n            value: cf.label,\n         });\n      });\n   }\n\n   /**\n    * connectedFieldList\n    * return the fields in our .baseObject that are connections to other objects.\n    * @return {array} of {ABField}\n    */\n   connectedFieldList() {\n      var connectKey = ABFieldConnect.defaults().key;\n      if (this.baseObject && this.baseObject.fields) {\n         return this.baseObject.fields((f) => {\n            return f.key == connectKey;\n         });\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * connectedObject\n    * return the ABObject associated with the selected connection field.\n    * @return {ABObject}\n    */\n   connectedObject() {\n      if (this.selectedFieldID) {\n         var selectedField = this.selectedField();\n         if (selectedField) {\n            return selectedField.datasourceLink;\n         }\n      }\n\n      return null;\n   }\n\n   /**\n    * selectedField\n    * return the selected {ABField} object.\n    * @return {ABField}\n    */\n   selectedField() {\n      return this.connectedFieldList().filter((f) => {\n         return f.id == this.selectedFieldID;\n      })[0];\n   }\n\n   /**\n    * valueDisplayComponent\n    * Return an ABView to display our values form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayComponent(idBase) {\n      if (this._uiChooser == null) {\n         this._uiChooser = this.valueDisplayChooser(idBase);\n      }\n\n      return this._uiChooser;\n   }\n\n   /**\n    * valueDisplayChooser\n    * Our Values Display is a Select Box with a choice of connected fields.\n    * Once a field is chosen, then we display the Updater form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayChooser(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return key + \"_\" + uniqueInstanceID;\n      };\n\n      var ids = {\n         component: myUnique(\"updateConnectedValues\"),\n         updateForm: myUnique(\"updateChooser\"),\n         selectConnectedField: myUnique(\"updateSelect\"),\n         updateFieldsForm: myUnique(\"updateForm\"),\n      };\n\n      var _ui = {\n         id: ids.component,\n         view: \"layout\",\n         css: \"ab-component-form-rule\",\n         rows: [\n            {\n               id: ids.selectConnectedField,\n               view: \"richselect\",\n               label: L(\"Select which connected object to update.\"),\n               labelWidth: 300,\n               value: this.selectedField,\n               options: this.fieldDropList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     _logic.selectAction(newVal, oldVal);\n                  },\n               },\n            },\n         ],\n      };\n\n      var init = (valueRules) => {\n         valueRules = valueRules || this.valueRules;\n\n         // make sure our currently selected field is selected.\n         if (this.selectedFieldID) {\n            var select = $$(ids.selectConnectedField);\n            if (select) {\n               select.setValue(this.selectedFieldID);\n            }\n         }\n      };\n\n      var _logic = (this._logic = {\n         addDisplay: (view) => {\n            $$(ids.component).addView(view);\n         },\n\n         // removePreviousDisplays\n         // remove the previous components that reflected the conditions and\n         // update values of the previously selected field.\n         removePreviousDisplays: () => {\n            var allViews = $$(ids.component).getChildViews();\n            var cloneAllViews = [];\n            allViews.forEach((v) => {\n               cloneAllViews.push(v);\n            });\n            cloneAllViews.forEach((v) => {\n               // don't remove the field picker\n               if (v.config.id != ids.selectConnectedField) {\n                  $$(ids.component).removeView(v);\n               }\n            });\n         },\n\n         selectAction: (newVal, oldVal) => {\n            _logic.removePreviousDisplays(); // of the Query Builder and Update form for old selection:\n\n            this.selectedFieldID = newVal;\n            var connectedObject = this.connectedObject();\n\n            if (connectedObject) {\n               // it is the remote object that we are allowed to Update fields on.\n               this.updateObjectLoad(connectedObject);\n               ///// NOTE: important to call super.valueDisplayComponent()\n               this.updateComponent = super.valueDisplayComponent(\n                  ids.updateFieldsForm\n               ); // parent obj\n\n               _logic.showQBIfNeeded();\n\n               // create a new blank update form\n               _logic.addDisplay(this.updateComponent.ui);\n               this.updateComponent.init();\n\n               if (this.isUpdateValueDisabled) {\n                  let $updateForm = $$(this.updateComponent.ui.id);\n                  if ($updateForm) {\n                     $updateForm.disable();\n                     $updateForm.hide();\n                  }\n               }\n            } else {\n               this.AB.notify.builder(new Error(\"No connectedObject found.\"), {\n                  fieldID: this.selectedFieldID,\n               });\n            }\n         },\n\n         showQBIfNeeded: () => {\n            //// NOTE: we decided to go ahead and display the QB in ALL situations to give\n            //// the user the ability to set a condition on the update even if the field\n            //// is only a one to one.\n            //// If we want to remove the filter in case of a \"one\" linkType, then put\n            //// these conditions back in:\n\n            // var field = this.selectedField();\n\n            // // we don't need the QB if the destination object link type if 'one'.\n            // // there will only be one to get back, so no conditions needed.\n            // if (field.settings.linkType != 'one') {\n\n            var qbComponent = this.queryBuilderDisplay();\n\n            qbComponent.component(this.App, this.idBase);\n            _logic.addDisplay(qbComponent.ui);\n            qbComponent.init({});\n\n            // }\n         },\n\n         fromSettings: (settings) => {\n            // // first time through, be sure to set the connectedObject first\n            // this.selectedFieldID = settings.selectedFieldID;\n            // var connectedObject = this.connectedObject();\n\n            // this triggers the update of the display, creation of QB,\n            $$(ids.selectConnectedField).setValue(settings.selectedFieldID);\n\n            if (this.objectQB) {\n               this.objectQB.setValue(this.qbCondition);\n            }\n\n            if (this.updateComponent) {\n               this.updateComponent.fromSettings(settings);\n            }\n         },\n\n         toSettings: () => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n            var settings = { fieldOperations: [] };\n\n            // for each of our formRows, decode the propery {}\n            this.formRows.forEach((fr) => {\n               var rowSettings = fr.toSettings();\n               if (rowSettings) {\n                  settings.fieldOperations.push(rowSettings);\n               }\n            });\n\n            return settings;\n         },\n      });\n\n      return {\n         ui: _ui,\n         init: init,\n         fromSettings: (settings) => {\n            _logic.fromSettings(settings);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   /**\n    * queryBuilderDisplay\n    * returns our Query Builder object used in our display.\n    * It is called by the .showQBIfNeeded() method.\n    * @return {ABViewQueryBuilderObjectFieldConditions}\n    */\n   queryBuilderDisplay() {\n      if (!this.objectQB) {\n         this.objectQB = new ObjectQueryBuilder(\n            L(\"How to choose which object:\")\n         );\n\n         var connObj = this.connectedObject();\n         if (connObj) this.objectQB.objectLoad(connObj);\n      }\n      return this.objectQB;\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      this._formData = options.data;\n\n      // get connected object\n      var connObj = this.connectedObject();\n      var model = connObj.model();\n\n      var connectionField = this.selectedField();\n\n      var condition = null; // our lookup condition\n\n      // modifyCondition\n      // async fn() to fill out what the condition should be for limiting the remote\n      // objects to values in use by the current object.\n      // @param {fn} cb  the callback to use when we are finished:\n      //\t\t\t\t\tcb(err, )\n      var modifyCondition = (cb) => {\n         // So, let's get a copy of our current data, with all it's connected items\n         // attached.\n         var thisModel = this.baseObject.model();\n         thisModel\n            .findConnected(connectionField.columnName, options.data)\n            .then((items) => {\n               // if we didn't get any results, then simply return\n               // NOTE: this will leave condition == null and cancel this update.\n               if (!items || items.length == 0) {\n                  cb();\n                  return;\n               }\n\n               // then use these to limit the connected data of our Action:\n\n               // get all the ids\n               var ids = items.map((i) => {\n                  return i.id;\n               });\n\n               // resulting condition: { id in [listIDs]} AND { QB Condition }\n               condition = {\n                  glue: \"and\",\n                  rules: [\n                     {\n                        key: `${connObj.dbTableName()}.${connObj.PK()}`,\n                        rule: \"in\",\n                        value: ids,\n                     },\n                  ],\n               };\n\n               // check to make sure qbCondition actually has a condition before adding it\n               // to our condition:\n               if (Object.keys(this.qbCondition).length > 0) {\n                  condition.rules.push(this.qbCondition);\n               }\n\n               cb();\n            })\n            .catch(cb);\n      };\n\n      // .process() returns a Promise\n      return new Promise((resolve, reject) => {\n         // upateIt()\n         // updates a given item with our changes.\n         // @param {obj} item  the item to update\n         // @param {fn}  cb    a callback function when update is complete.\n         var updateIt = (item, cb) => {\n            let isUpdated = this.processUpdateObject({}, item);\n            if (!isUpdated) {\n               cb();\n            } else {\n               model\n                  .update(item.id, item)\n                  .then(() => {\n                     cb();\n                  })\n                  .catch((err) => {\n                     this.AB.notify.developer(err, {\n                        message:\n                           \"!!! ABViewRuleActionFormRecordRuleUpdateConnected.process(): update error:\",\n                        data: options.data,\n                     });\n                     cb(err);\n                  });\n            }\n         };\n\n         // now figure out which elements belong to this object\n         // done in modifyCondition()\n         modifyCondition((err) => {\n            if (err) {\n               reject(err);\n               return;\n            }\n\n            if (condition === null) {\n               // this is the case where we didn't have the proper data to complete our\n               // update.  So let's just fail gracefully, and continue on.\n\n               // QUESTION: is this the right way to handle it?\n               resolve();\n            } else {\n               // get all the entries that match our condition:\n               model\n                  .findAll({ where: condition })\n                  .then((list) => {\n                     var done = 0;\n\n                     // list : {data: Array(4), total_count: 4, pos: null, offset: null, limit: null}\n                     if (list && list.data) {\n                        list = list.data;\n                     }\n\n                     // for each entry, update it with our values:\n                     list.forEach((item) => {\n                        updateIt(item, (err) => {\n                           if (err) {\n                              return reject(err);\n                           }\n                           done++;\n                           if (done >= list.length) {\n                              // now they are all updated, so continue.\n                              resolve();\n                           }\n                        });\n                     });\n\n                     // if there were no entries to update -> continue\n                     if (list.length == 0) {\n                        resolve();\n                     }\n                  })\n                  .catch(reject);\n            }\n         }); // end modifyCondition()\n      }); // end Promise()\n   }\n\n   /**\n    * fromSettings\n    * initialize this Action = require(a given set of setting values.\n    * @param {obj} settings  the settings {} returned = require(toSettings()\n    */\n   fromSettings(settings) {\n      settings = settings || {};\n\n      this.selectedFieldID = settings.selectedFieldID || null;\n      this.qbCondition = settings.qbCondition || {};\n\n      super.fromSettings(settings);\n\n      // if we have a display component, then populate it:\n      if (this._uiChooser) {\n         this._logic.fromSettings(settings);\n      }\n   }\n\n   /**\n    * toSettings\n    * return an object that represents the current state of this Action\n    * @return {obj}\n    */\n   toSettings() {\n      // settings: {\n      // \tselectedFieldID: 'guid',\n      //  qbCondition: [],\n      //\tvalueRules:{}\t\t// = require(ABViewRuleActionObjectUpdater\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.selectedFieldID = this.selectedFieldID;\n\n      var qbCond = null;\n      if (this.objectQB) {\n         qbCond = this.objectQB.getValue();\n         if (Array.isArray(qbCond)) {\n            qbCond = qbCond[0];\n         }\n\n         // FIX: make sure qbCond root element has a 'glue'\n         if (qbCond) {\n            qbCond.glue = qbCond.glue || \"and\";\n         }\n      }\n      settings.qbCondition = qbCond;\n\n      // if we have a display component, then request our details = require(it:\n      if (this._uiChooser) {\n         settings.valueRules = this._logic.toSettings();\n      }\n\n      return settings;\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      if (this.objectQB) {\n         this.objectQB.setValue(this.qbCondition);\n      }\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleClosePopup\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleClosePopup extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleClosePopup\";\n      this.label = L(\"Close the current popup\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      this._ui = {\n         ui: {\n            view: \"layout\",\n            rows: [],\n         },\n\n         init: () => {},\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         let form = options.form;\n         if (!form) return;\n\n         let popup = form.pageParent((p) => p.settings.type == \"popup\");\n         if (!popup) return;\n\n         // get the dom id of page. it is dom id that is generated in ABLiveTool.js\n         // let pageDomId = [\"ab_live_page\", popup.application.id, popup.id].join(\n         //    \"_\"\n         // );\n\n         // close current popup\n         let $popup = $$(popup.id);\n         if ($popup) $popup.hide();\n\n         // this clears the UI's record of the current form.\n         options.form.changePage(null);\n\n         resolve();\n      });\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleConfirmMessage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleConfirmMessage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleConfirmMessage\";\n      this.label = L(\"Show a confirmation message\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         message: `${idBase}_message`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.message,\n            view: \"textarea\",\n            // label: this.labels.component.message,\n            // labelWidth: this.AB.UISettings.config().labelWidthLarge,\n            height: 130,\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.message).setValue(valueRules.message || \"\");\n         },\n\n         toSettings: () => {\n            // return the confirm message\n            return {\n               message: $$(ids.message).getValue() || \"\",\n            };\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var confirmMessage = this.valueRules.message || \"\";\n\n         webix.message({\n            text: confirmMessage,\n            type: \"info\",\n         });\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleWebsite\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\nconst ABFieldEmail = require(\"../../platform/dataFields/ABFieldEmail\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleEmail extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleEmail\";\n      this.label = L(\"Send a custom email\");\n\n      this.queryObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.queryObject) {\n   //       this.queryObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         form: `${idBase}_form`,\n         popup: `${idBase}_popup`,\n         list: `${idBase}_fieldList`,\n         toEmailsContainer: `${idBase}_toEmailsContainer`,\n         toEmails: `${idBase}_toEmails`,\n         message: `${idBase}_message`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.form,\n            view: \"form\",\n            width: 450,\n            elementsConfig: {\n               labelPosition: \"top\",\n               labelWidth: 100,\n            },\n            cols: [\n               // email form\n               {\n                  width: 330,\n                  rows: [\n                     {\n                        view: \"text\",\n                        name: \"fromName\",\n                        label: L(\"From Name\"),\n                     },\n                     {\n                        view: \"text\",\n                        name: \"fromEmail\",\n                        label: L(\"From Email\"),\n                        validate: webix.rules.isEmail,\n                        on: {\n                           onChange: function (newVal, oldVal) {\n                              if (this.getValue() && !this.validate()) {\n                                 $$(ids.form).markInvalid(\n                                    \"fromEmail\",\n                                    \"Email is invalid\"\n                                 );\n                              } else {\n                                 $$(ids.form).markInvalid(\"fromEmail\", false);\n                              }\n                           },\n                        },\n                     },\n                     {\n                        id: ids.toEmailsContainer,\n                        view: \"forminput\",\n                        name: \"toEmails\",\n                        label: L(\"Send\"),\n                        css: \"ab-rich-text\",\n                        width: 320,\n                        body: {\n                           width: 320,\n                           rows: [\n                              {\n                                 height: 25,\n                              },\n                              {\n                                 id: ids.toEmails,\n                                 width: 320,\n                                 view: \"layout\",\n                                 rows: [],\n                              },\n                              {\n                                 view: \"button\",\n                                 css: \"webix_primary\",\n                                 type: \"icon\",\n                                 icon: \"fa fa-plus\",\n                                 label: L(\"Add a recipient\"),\n                                 width: 150,\n                                 click: () => {\n                                    _logic.toEmailAdd();\n                                 },\n                              },\n                           ],\n                        },\n                     },\n                     {\n                        view: \"text\",\n                        name: \"subject\",\n                        label: L(\"Subject\"),\n                     },\n                     {\n                        view: \"textarea\",\n                        id: ids.message,\n                        name: \"message\",\n                        label: L(\"Message\"),\n                        width: 320,\n                        height: 400,\n                     },\n                     // {\n                     // \tview: 'label',\n                     // \tlabel: 'Message',\n                     // \tcss: { 'font-weight': 'bold' }\n                     // },\n                     // {\n                     // \tview: 'forminput',\n                     // \tid: ids.message,\n                     // \tname: 'message',\n                     // \tlabel: 'Message',\n                     // \tcss: \"ab-rich-text\",\n                     // \twidth: 320,\n                     // \theight: 400,\n                     // \tbody: {\n                     // \t\tview: 'tinymce-editor'\n                     // \t}\n                     // }\n                  ],\n               },\n               // field list\n               {\n                  rows: [\n                     {\n                        view: \"template\",\n                        type: \"header\",\n                        template: \"Fields\",\n                     },\n                     {\n                        id: ids.list,\n                        view: \"list\",\n                        width: 120,\n                        css: { \"background-color\": \"#fff !important;\" },\n                        template: function (obj, common) {\n                           return _logic.fieldTemplate(obj, common);\n                        },\n                        on: {\n                           onItemClick: function (id, e, node) {\n                              var component = this.getItem(id);\n\n                              _logic.enterField(component);\n                           },\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n\n         init: () => {\n            if (this.queryObject) {\n               $$(ids.list).parse(\n                  this.queryObject.fields((f) => f.fieldUseAsLabel())\n               );\n               $$(ids.list).refresh();\n            }\n\n            _logic.refreshUI();\n         },\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.form).setValues(valueRules);\n\n            // Populate recipients\n            var recipients = valueRules.toEmails || [];\n            recipients.forEach((r) => {\n               _logic.toEmailAdd({\n                  type: r.type, // 'to', 'cc' or 'bcc'\n                  emailType: r.emailType, // 'email' or 'field'\n                  value: r.value,\n               });\n            });\n\n            _logic.refreshUI();\n         },\n\n         toSettings: () => {\n            var formVals = $$(ids.form).getValues() || {};\n\n            // Get recipients\n            var recipients = [];\n            $$(ids.toEmails)\n               .getChildViews()\n               .forEach((e) => {\n                  // var type = e.queryView({ name: 'type' }).getValue();\n                  var type = \"to\"; // TODO\n                  var emailType = e.queryView({ name: \"emailType\" }).getValue();\n                  var value = e.queryView({ name: emailType }).getValue();\n\n                  recipients.push({\n                     type: type,\n                     emailType: emailType,\n                     value: value,\n                  });\n               });\n\n            // return the confirm message\n            return {\n               fromName: formVals[\"fromName\"],\n               fromEmail: formVals[\"fromEmail\"],\n               toEmails: recipients,\n               subject: formVals[\"subject\"],\n               message: formVals[\"message\"],\n            };\n         },\n\n         /**\n          * @method toEmailTemplate\n          *\n          * @param settings - {\n          * \t\t\ttype: string, // 'to', 'cc' or 'bcc'\n          * \t\t\temailType: string, // 'email' or 'field'\n          * \t\t\tvalue: string\n          * }\n          */\n         toEmailTemplate: (settings) => {\n            settings = settings || {};\n\n            return {\n               width: 320,\n               cols: [\n                  // {\n                  // \tview: 'richselect',\n                  // \tname: 'type',\n                  // \tvalue: settings.type || 'to',\n                  // \twidth: 80,\n                  // \toptions: [\n                  // \t\t{ id: 'to', value: \"To:\" },\n                  // \t\t// EmailNotification does not support cc, bcc and reply.\n                  // \t\t// { id: 'cc', value: \"Cc:\" },\n                  // \t\t// { id: 'bcc', value: \"Bcc:\" },\n                  // \t\t// { id: 'reply', value: \"Reply-To:\" }\n                  // \t]\n                  // },\n                  {\n                     view: \"richselect\",\n                     name: \"emailType\",\n                     value: settings.emailType || \"email\",\n                     width: 150,\n                     options: [\n                        {\n                           id: \"email\",\n                           value: L(\"A custom email address\"),\n                        },\n                        { id: \"field\", value: L(\"An email field\") },\n                        { id: \"query\", value: L(\"From query\") },\n                     ],\n                     on: {\n                        onChange: function (newVal, oldVal) {\n                           _logic.emailTypeChange(newVal, this);\n                        },\n                     },\n                  },\n                  {\n                     width: 150,\n                     name: \"emailValue\",\n                     visibleBatch: settings.emailType || \"email\",\n                     cols: [\n                        {\n                           view: \"text\",\n                           name: \"email\",\n                           batch: \"email\",\n                           value:\n                              settings.emailType == \"email\"\n                                 ? settings.value\n                                 : \"\",\n                           validate: webix.rules.isEmail,\n                           width: 150,\n                           on: {\n                              onChange: function (newVal, oldVal) {\n                                 _logic.toEmailValidate();\n                              },\n                           },\n                        },\n                        {\n                           view: \"richselect\",\n                           name: \"field\",\n                           batch: \"field\",\n                           value:\n                              settings.emailType == \"field\"\n                                 ? settings.value\n                                 : \"\",\n                           width: 150,\n                           suggest: {\n                              on: {\n                                 onBeforeShow: function () {\n                                    this.define(\"width\", 300);\n                                    this.resize();\n                                 },\n                              },\n                              data: _logic.emailFieldOptions(),\n                           },\n                        },\n                        {\n                           view: \"richselect\",\n                           name: \"query\",\n                           batch: \"query\",\n                           value:\n                              settings.emailType == \"query\"\n                                 ? settings.value\n                                 : \"\",\n                           width: 150,\n                           suggest: {\n                              on: {\n                                 onBeforeShow: function () {\n                                    this.define(\"width\", 300);\n                                    this.resize();\n                                 },\n                              },\n                              data: _logic.queryOptions(),\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     type: \"icon\",\n                     icon: \"fa fa-trash-o\",\n                     width: 32,\n                     click: function () {\n                        var $toView = this.getParentView();\n\n                        _logic.toEmailRemove($toView);\n                     },\n                  },\n               ],\n            };\n         },\n\n         toEmailAdd: (settings) => {\n            var count = $$(ids.toEmails).getChildViews().length;\n\n            $$(ids.toEmails).addView(_logic.toEmailTemplate(settings), count);\n\n            _logic.refreshUI();\n         },\n\n         emailTypeChange: (type, $select) => {\n            var $recipient = $select.getParentView();\n            var $emailValue = $recipient.queryView({ name: \"emailValue\" });\n\n            switch (type) {\n               case \"field\":\n                  $emailValue.showBatch(\"field\");\n                  break;\n               case \"query\":\n                  $emailValue.showBatch(\"query\");\n                  break;\n               default:\n                  $emailValue.showBatch(\"email\");\n                  break;\n            }\n\n            $$(ids.toEmailsContainer).adjust();\n         },\n\n         toEmailRemove: ($toView) => {\n            $$(ids.toEmails).removeView($toView);\n\n            _logic.refreshUI();\n         },\n\n         toEmailValidate: () => {\n            var isAllValid = true;\n\n            $$(ids.toEmails)\n               .getChildViews()\n               .forEach((v) => {\n                  let emailText = v.queryView({ name: \"email\" });\n                  if (emailText.getValue() && !emailText.validate()) {\n                     isAllValid = false;\n                  }\n               });\n\n            if (isAllValid) $$(ids.form).markInvalid(\"toEmails\", false);\n            else $$(ids.form).markInvalid(\"toEmails\", \"Email is invalid\");\n         },\n\n         fieldTemplate: (field, common) => {\n            return `<i class='fa fa-${field.icon} webix_icon_btn' aria-hidden='true'></i> ${field.label}`;\n         },\n\n         emailFieldOptions: () => {\n            var existsFieldIds = [];\n            var options = [];\n\n            var fnAddOptions = (currObj, fLink) => {\n               var emailFields = currObj\n                  .fields((f) => f instanceof ABFieldEmail)\n                  .map((f) => {\n                     var optId = \"\",\n                        optLabel = \"\";\n\n                     if (fLink) {\n                        optId = `${fLink.id}|${f.urlPointer()}`;\n                        optLabel = `${currObj.label}.${f.label} (${fLink.label})`;\n                     } else {\n                        optId = `|${f.urlPointer()}`;\n                        optLabel = `${currObj.label}.${f.label}`;\n                     }\n\n                     return {\n                        id: optId, // linkFieldId|fieldUrl\n                        value: optLabel,\n                     };\n                  });\n\n               // TODO: prevent duplicate\n\n               options = options.concat(emailFields);\n            };\n\n            fnAddOptions(this.queryObject);\n\n            this.queryObject.connectFields().forEach((f) => {\n               // prevent looping\n               if (\n                  // - prevent include connect objects of the base object\n                  // f.datasourceLink.id == this.queryObject.id ||\n                  // - check duplicate include objects\n                  existsFieldIds.indexOf(f.id) > -1\n               )\n                  return;\n\n               // store\n               existsFieldIds.push(f.id);\n\n               // add email fields of link object\n               fnAddOptions(f.datasourceLink, f);\n            });\n\n            return options;\n         },\n\n         queryOptions: () => {\n            var options = [];\n\n            // get data collections who is query and contains email field\n            let dcQueries = this.currentForm.AB.datacollections((dc) => {\n               let obj = dc.datasource;\n               return (\n                  dc.settings.isQuery &&\n                  obj &&\n                  obj.fields((f) => f.key == \"email\").length > 0\n               );\n            });\n\n            dcQueries.forEach((dv) => {\n               if (dv.datasource) {\n                  dv.datasource\n                     .fields((f) => f.key == \"email\")\n                     .forEach((f) => {\n                        options.push({\n                           id: `${dv.id}|${f.id}`, // ABDatacollectionID|fieldID\n                           value: `${dv.label}.${f.label}`,\n                        });\n                     });\n               }\n            });\n\n            return options;\n         },\n\n         enterField: (field) => {\n            var focusElem = webix.UIManager.getFocus();\n            var val = \"\";\n\n            if (\n               focusElem.config.view != \"text\" ||\n               focusElem.config.view != \"textarea\"\n            ) {\n               if (focusElem.getValue) val = focusElem.getValue();\n\n               if (focusElem.setValue)\n                  focusElem.setValue(`${val}${field.label}`);\n\n               webix.UIManager.setFocus(focusElem);\n            }\n         },\n\n         refreshUI: () => {\n            $$(ids.toEmailsContainer).adjust();\n            $$(ids.message).adjust();\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options - {\n   //\t\t\t\t\t\t\tdata: {obj} rowData,\n   //\t\t\t\t\t\t\tform: {ABViewForm}\n   //\t\t\t\t\t\t}\n   process(options) {\n      // validate sender's email is invalid\n      if (!webix.rules.isEmail(this.valueRules.fromEmail)) {\n         return Promise.resolve();\n      }\n\n      var recipients = [];\n\n      return Promise.resolve()\n         .then(() => {\n            // Pull recipients data\n            return new Promise((resolve, reject) => {\n               var tasks = [];\n\n               this.valueRules.toEmails.forEach((rec) => {\n                  tasks.push(\n                     new Promise((next, err) => {\n                        // TODO: Cc, Bcc\n\n                        // field\n                        if (rec.emailType == \"field\") {\n                           var emailFieldUrl = rec.value.split(\"|\")[1]; // linkFieldId|emailFieldUrl\n                           var emailField = this.queryObject.application.urlResolve(\n                              emailFieldUrl\n                           );\n                           if (emailField) {\n                              // Pull email source object\n                              if (emailField.object.id == this.queryObject.id) {\n                                 var emailData =\n                                    options.data[emailField.columnName];\n                                 if (emailData)\n                                    recipients = recipients.concat(emailData);\n                              }\n                              // Pull emails from link object\n                              else {\n                                 let linkFieldId = rec.value.split(\"|\")[0];\n                                 let linkFields = this.queryObject.fields(\n                                    (f) =>\n                                       f instanceof ABFieldConnect &&\n                                       f.id == linkFieldId\n                                 );\n                                 linkFields.forEach((f) => {\n                                    var linkedData =\n                                       options.data[f.relationName()] || [];\n\n                                    // convert to an array\n                                    if (\n                                       linkedData &&\n                                       !Array.isArray(linkedData)\n                                    )\n                                       linkedData = [linkedData];\n\n                                    // pull email address\n                                    linkedData.forEach((d) => {\n                                       var email = d[emailField.columnName];\n                                       if (email)\n                                          recipients = recipients.concat(email);\n                                    });\n                                 });\n                              }\n\n                              next();\n                           } else {\n                              next();\n                           }\n                        }\n\n                        // query\n                        else if (rec.emailType == \"query\") {\n                           var dvIdAndFieldId = rec.value; // ABDatacollectionId|fieldId\n                           if (!dvIdAndFieldId) return next();\n\n                           var dcId = dvIdAndFieldId.split(\"|\")[0];\n                           var fieldId = dvIdAndFieldId.split(\"|\")[1];\n\n                           var dcQuery = this.currentForm.AB.datacollectionByID(\n                              dcId\n                           );\n                           if (!dcQuery) return next();\n\n                           var field = dcQuery.datasource.fieldByID(fieldId);\n                           if (!field) return next();\n\n                           // get data of data collection\n                           dcQuery.getData().forEach((data) => {\n                              var emailAddr = data[field.columnName];\n                              if (emailAddr) recipients.push(emailAddr);\n                           });\n\n                           next();\n                        }\n\n                        // email\n                        else {\n                           recipients.push(rec.value);\n                           next();\n                        }\n                     })\n                  );\n               });\n\n               Promise.all(tasks).catch(reject).then(resolve);\n            });\n         })\n         .then(() => {\n            // send out\n            return new Promise((resolve, reject) => {\n               recipients = this.AB.uniq(recipients).filter((r) => r);\n\n               if (!recipients || recipients.length < 1) return resolve();\n\n               // replace form value to template\n               var fromName = this.valueRules.fromName,\n                  subject = this.valueRules.subject,\n                  message = this.valueRules.message;\n\n               this.queryObject\n                  .fields((f) => f.fieldUseAsLabel())\n                  .forEach((f) => {\n                     var template = new RegExp(`{${f.label}}`, \"g\"),\n                        data = f.format(options.data);\n\n                     fromName = fromName.replace(template, data);\n                     subject = subject.replace(template, data);\n                     message = message.replace(template, data);\n                  });\n\n               // send a email\n               this.AB.Network.post({\n                  url: \"/app_builder/email\",\n                  params: {\n                     fromName: fromName,\n                     fromEmail: this.valueRules.fromEmail,\n                     subject: subject,\n                     message: message,\n                     recipients: this.AB.uniq(recipients),\n                  },\n               })\n                  .then(() => {\n                     resolve();\n                  })\n                  .catch(reject);\n            });\n         });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleExistPage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleExistPage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleExistPage\";\n      this.label = L(\"Redirect to an existing page\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         pagesAndTabs: `${idBase}_PagesAndTabs`,\n      };\n\n      this._ui = {\n         ui: { id: ids.pagesAndTabs, view: \"richselect\", options: [] },\n\n         init: () => {\n            _logic.populateOptions();\n         },\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         populateOptions: () => {\n            // Pull page list to \"Redirect to an existing page\"\n            var _pageOptions = [];\n\n            /**\n             * @param pageOrTab\t{Object}\t- ABViewPage or ABViewTab\n             * @param indent\t{integer}\n             * @param type\t\t{string}\t- 'page' or 'tab'\n             * @param pageId\t{uuid}\t\t- the id of page (only tab)\n             */\n            var addPage = (pageOrTab, indent, type, pageId) => {\n               indent = indent || \"\";\n\n               let icon = \"fa fa-file-o\";\n               if (type == \"tab\") icon = \"fa fa-window-maximize\";\n\n               let pageParent = pageOrTab.pageParent();\n\n               _pageOptions.push({\n                  id: pageOrTab.id,\n                  value: indent + pageOrTab.label,\n                  type: type,\n                  pageId: pageParent ? pageParent.id : null,\n\n                  icon: icon,\n               });\n\n               if (type == \"page\" || type == \"tab\") {\n                  if (pageOrTab.pages) {\n                     pageOrTab.pages().forEach(function (p) {\n                        addPage(p, indent + \"-\", \"page\");\n                     });\n                  }\n\n                  // add 'tab' options\n                  if (pageOrTab.views) {\n                     pageOrTab\n                        .views((v) => v.key == \"tab\")\n                        .forEach((tab) => {\n                           // add 'tab view' to options\n                           tab.views().forEach((tabView) => {\n                              addPage(\n                                 tabView,\n                                 indent + \"-\",\n                                 \"tab\",\n                                 pageOrTab.id\n                              );\n                           });\n                        });\n                  }\n               }\n            };\n\n            addPage(this.currentForm.pageRoot(), \"\", \"page\");\n\n            $$(ids.pagesAndTabs).define(\"options\", _pageOptions);\n            $$(ids.pagesAndTabs).refresh();\n         },\n\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.pagesAndTabs).setValue(\n               valueRules.tabId || valueRules.pageId || \"\"\n            );\n         },\n\n         toSettings: () => {\n            var result = {};\n\n            var selectedId = $$(ids.pagesAndTabs).getValue();\n            var selectedItem = $$(ids.pagesAndTabs)\n               .getPopup()\n               .getList()\n               .config.data.filter((opt) => opt.id == selectedId)[0];\n            if (selectedItem) {\n               if (selectedItem.type == \"tab\") {\n                  // store page id and tab id\n                  result = {\n                     pageId: selectedItem.pageId,\n                     tabId: selectedId,\n                  };\n               } else {\n                  // store only page id\n                  result = {\n                     pageId: selectedId,\n                  };\n               }\n            }\n\n            // return the confirm message\n            return result;\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         // redirect page\n         if (this.valueRules.pageId) {\n            options.form.changePage(this.valueRules.pageId);\n\n            if (this.valueRules.tabId) {\n               var curPage = options.form.application.pages(\n                  (p) => p.id == this.valueRules.pageId,\n                  true\n               )[0];\n               if (!curPage) return resolve();\n\n               // switch tab\n               var tabView = curPage.views(\n                  (v) => v.id == this.valueRules.tabId,\n                  true\n               )[0];\n               if (!tabView) return resolve();\n\n               var tab = tabView.parent;\n               if (!tab) return resolve();\n\n               var toggleParent = (element) => {\n                  if (!element.parent) return false;\n                  var parentElem = element.parent;\n                  if (!parentElem.parent) return false;\n                  parentElem.parent.emit(\"changeTab\", parentElem.id);\n                  toggleParent(parentElem.parent);\n               };\n\n               toggleParent(tab);\n               let showIt = setInterval(function () {\n                  if ($$(tabView.id) && $$(tabView.id).isVisible()) {\n                     clearInterval(showIt);\n                     return;\n                  }\n                  tab.emit(\"changeTab\", tabView.id);\n               }, 100);\n            }\n         }\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleParentPage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleParentPage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleParentPage\";\n      this.label = L(\"Redirect to the parent page\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      this._ui = {\n         ui: {\n            view: \"label\",\n            label: this.label,\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n      };\n\n      var _logic = {};\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var pageCurrent = options.form.pageParent();\n         var pageParent = pageCurrent.pageParent();\n\n         // redirect page\n         options.form.changePage(pageParent.id);\n\n         resolve();\n      });\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleWebsite\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleWebsite extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleWebsite\";\n      this.label = L(\"Redirect to another website URL\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         website: `${idBase}_website`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.website,\n            view: \"text\",\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.website).setValue(valueRules.website || \"\");\n         },\n\n         toSettings: () => {\n            // return the confirm message\n            return {\n               website: $$(ids.website).getValue() || \"\",\n            };\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         // redirect to website\n         if (this.valueRules.website)\n            window.open(\n               `http://${this.valueRules.website.replace(\"http://\", \"\")}`,\n               \"_blank\"\n            );\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","// ABViewRuleActionObjectUpdater\n//\n// An action that allows you to update fields on an object.\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nvar ABViewRuleActionObjectUpdaterDefaults = {\n   filterConditions: {\n      // array of filters to apply to the data table\n      glue: \"and\",\n      rules: [],\n   },\n};\n\nmodule.exports = class ABViewRuleActionObjectUpdater extends ABViewRuleAction {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdate\";\n      this.label = L(\"Update Record\");\n\n      this.updateObject = null; // the object this Action will Update.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n\n      this.stashRules = {}; // keep track of rule settings among our selected objects.\n   }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      if (this._uiUpdater == null) {\n         this._uiUpdater = this.valueDisplayList(idBase);\n      }\n\n      return this._uiUpdater;\n   }\n\n   // Our Values Display is a List of ValueRows\n   // Each ValueRow will display an additional set of [add] [delete] buttons.\n\n   valueDisplayList(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n      var ids = {\n         updateForm: myUnique(\"updateForm\"),\n      };\n\n      var _ui = {\n         view: \"form\",\n         id: ids.updateForm,\n         elements: [],\n      };\n\n      var init = (valueRules) => {\n         valueRules = valueRules || this.valueRules;\n         _logic.setValues(valueRules);\n      };\n\n      var _logic = {\n         removeAddRow: () => {\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // check row that's unselect a field\n            var rows = UpdateForm.getChildViews();\n\n            var addRow = rows.filter((r) => {\n               return r.queryView(function (view) {\n                  return view.config.name == \"field\" && !view.getValue();\n               });\n            })[0];\n            if (!addRow) return;\n\n            UpdateForm.removeView(addRow);\n         },\n\n         // addRow\n         // add a new data entry to this form.\n         // @param {obj} data  (optional) initial values for this row.\n         addRow: (data) => {\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // check row that's unselect a field\n            var rows = UpdateForm.getChildViews();\n            if (\n               data == null &&\n               rows.filter((r) => {\n                  return r.queryView(function (view) {\n                     return view.config.name == \"field\" && !view.getValue();\n                  });\n               }).length > 0\n            )\n               return;\n\n            // get a new Row Component\n            var row = this.valueDisplayRow(idBase);\n\n            // add row to Form\n            UpdateForm.addView(row.ui);\n\n            // initialize row with any provided data:\n            row.init({\n               onAdd: () => {\n                  // add a new Row\n                  _logic.addRow();\n               },\n               onDelete: (rowId) => {\n                  // remove a row\n                  _logic.delRow(rowId);\n               },\n               data: data,\n            });\n\n            // store this row\n            this.formRows.push(row);\n         },\n\n         delRow: (rowId) => {\n            // store this row\n            this.formRows.forEach((r, index) => {\n               if (r.ui.id == rowId) this.formRows.splice(index, 0);\n            });\n\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // remove UI\n            UpdateForm.removeView($$(rowId));\n         },\n\n         formClear: () => {\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            var children = UpdateForm.getChildViews();\n\n            // NOTE: need to clone this array, because it is connected with the UpdatForm's\n            // internal array of items.  Once we start .removeView() the element actually\n            // is removed from the internal array, which then upset's the .forEach() from\n            // properly iterating through the structure.  It results in missed items from\n            // being sent to the .forEach().\n            // So Clone it and use that for .forEach()\n            var cloneChildren = [];\n            children.forEach((c) => {\n               cloneChildren.push(c);\n            });\n            cloneChildren.forEach((c) => {\n               UpdateForm.removeView(c);\n            });\n\n            // clear our stored .formRows\n            this.formRows = [];\n         },\n\n         formGet: () => {\n            var UpdateForm = $$(ids.updateForm);\n            if (!UpdateForm) {\n               // this is a problem!\n               this.currentForm.AB.notify.developer(\n                  new Error(\"no webix form\"),\n                  {\n                     context:\n                        \"ABViewRuleActionObjectUpdater:formGet  could not find webix form\",\n                     id: ids.updateForm,\n                  }\n               );\n               return null;\n            }\n\n            return UpdateForm;\n         },\n\n         setValues: (valueRules) => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n\n            valueRules = valueRules || {};\n            valueRules.fieldOperations = valueRules.fieldOperations || [];\n\n            // find the form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // clear form:\n            _logic.formClear();\n\n            // if there are values to\n            if (valueRules.fieldOperations.length > 0) {\n               valueRules.fieldOperations.forEach((r) => {\n                  _logic.addRow(r);\n               });\n            }\n\n            // our default operation will cause an empty row to\n            // appear after our first value entry.\n            // let's remove that one, and then add a new one\n            // at the end:\n            _logic.removeAddRow();\n\n            // display an empty row\n            _logic.addRow();\n         },\n\n         fromSettings: (settings) => {\n            // Note: we just want the { valueRules:[] } here:\n            var mySettings = settings.valueRules || settings;\n\n            _logic.setValues(mySettings);\n         },\n\n         toSettings: () => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n            var settings = { fieldOperations: [] };\n\n            // for each of our formRows, decode the propery {}\n            this.formRows.forEach((fr) => {\n               var rowSettings = fr.toSettings();\n               if (rowSettings) {\n                  settings.fieldOperations.push(fr.toSettings());\n               }\n            });\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: _ui,\n         init: init,\n         fromSettings: (settings) => {\n            _logic.fromSettings(settings);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   valueDisplayRow(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return key + \"_\" + uniqueInstanceID;\n      };\n\n      var ids = {\n         row: myUnique(\"row\"),\n         updateForm: myUnique(\"updateFormRow\"),\n         field: myUnique(\"field\"),\n         value: myUnique(\"value\"),\n         selectDc: myUnique(\"selectDc\"),\n         selectBy: myUnique(\"selectBy\"),\n         queryField: myUnique(\"queryField\"),\n         multiview: myUnique(\"multiview\"),\n         buttonAdd: myUnique(\"add\"),\n         buttonDelete: myUnique(\"delete\"),\n      };\n\n      var FilterComponent;\n\n      var _logic = {\n         callbacks: {\n            onAdd: () => {},\n            onDelete: () => {},\n         },\n\n         buttonsToggle: () => {\n            $$(ids.row).getChildViews()[0].getChildViews()[4].hide();\n            $$(ids.row).getChildViews()[0].getChildViews()[5].show();\n         },\n\n         getFieldList: (shouldFilter) => {\n            var options = [];\n            if (this.updateObject) {\n               options = (this.updateObject.fields() || []).map((f) => {\n                  return {\n                     id: f.id,\n                     value: f.label,\n                  };\n               });\n\n               // options = (this.updateObject.fields() || [])\n               // .filter(f => {\n               //\n               // \tif (f.key != 'connectObject') {\n               // \t\treturn true;\n               // \t} else {\n               // \t\t// if this is a connection field, only return\n               // \t\t// fields that are 1:x  where this field is the\n               // \t\t// source:\n               // \t\t// return ((f.linkType() == 'one') && (f.isSource()))\n               //\n               // \t\t// 6-14-2018 Changing from only 1:x to support many\n               // \t\t// if this is a connected field, only return\n               // \t\t// fields that this is the source\n               // \t\treturn (f.isSource())\n               // \t}\n               // })\n               // .map(f => {\n               // \treturn {\n               // \t\tid: f.id,\n               // \t\tvalue: f.label\n               // \t};\n               // });\n\n               // Remove fields who are selected\n               if (shouldFilter) {\n                  // store this row\n                  var usedHash = {};\n                  this.formRows.forEach((row) => {\n                     var rowView = $$(row.ui.id);\n                     if (rowView) {\n                        var field = rowView\n                           .getChildViews()[0]\n                           .getChildViews()[1];\n                        usedHash[field.getValue()] = true;\n                     }\n                  });\n                  options = options.filter((o) => {\n                     return !usedHash[o.id];\n                  });\n               }\n            }\n            return options;\n         },\n\n         isValid: () => {\n            var validator = this.currentForm.AB.Validation.validator();\n            var valueField = $$(ids.row).getChildViews()[0].getChildViews()[3];\n            var FormView = valueField.getParentView().getParentView();\n\n            var field = this.getUpdateObjectField($$(ids.field).getValue());\n            if (field) {\n               var value = field.getValue(valueField, {});\n\n               // // if a standard component that supports .getValue()\n               // if (valueField.getValue) {\n               // \tvalue = valueField.getValue();\n               // } else {\n               // \t// else use for field.getValue();\n               // \tvalue = field.getValue(valueField, {});\n               // }\n\n               // our .isValidData() wants value in an object:\n               var obj = {};\n               obj[field.columnName] = value;\n\n               field.isValidData(obj, validator);\n\n               // if value is empty, this is also an error:\n               if (\n                  value == \"\" ||\n                  value == null ||\n                  (Array.isArray(value) && value.length == 0)\n               ) {\n                  validator.addError(\n                     field.columnName,\n                     L(\"A value is required\")\n                  );\n               }\n\n               // field.getParentView()  ->  row\n               // row.getParentView()  -> Form\n               FormView.clearValidation();\n               validator.updateForm(FormView);\n\n               return validator.pass();\n            } else {\n               // if we didn't find an associated field ... then this isn't good\n               // data.\n\n               //// TODO: display error for our field picker.  Note, it doesn't have a unique .name\n               // field.\n               var fieldField = $$(ids.row)\n                  .getChildViews()[0]\n                  .getChildViews()[1];\n               fieldField.define(\"invalidMessage\", L(\"A value is required\"));\n               fieldField.define(\"invalid\", true);\n               fieldField.refresh();\n               // fieldField.markInvalid(this.labels.component.errorRequired);\n               return false;\n            }\n         },\n\n         selectField: (columnID) => {\n            var field = this.getUpdateObjectField(columnID);\n            if (!field) return;\n\n            var fieldComponent = field.formComponent(),\n               abView = fieldComponent.newInstance(field.object.application),\n               formFieldComponent = abView.component(this.App),\n               $componentView = formFieldComponent.ui,\n               $inputView;\n\n            $componentView.id = ids.value; // set our expected id\n\n            // find all the DataSources\n            var datasources = this.currentForm.AB.datacollections(\n               (dc) => dc.datasource\n            );\n\n            // create a droplist with those dataSources\n            var optionsDataSources = [];\n            datasources.forEach((dc) => {\n               optionsDataSources.push({ id: dc.id, value: dc.label });\n            });\n\n            // create a droplist with select options\n            var optionsSelectBy = [\n               { id: \"select-one\", value: L(\"Current selection\") },\n               {\n                  id: \"filter-select-one\",\n                  value: L(\"Select first after filter by...\"),\n               },\n            ];\n\n            var $optionUpdateExsits = {\n               type: \"clean\",\n               rows: [\n                  {\n                     cols: [\n                        {\n                           id: ids.selectDc,\n                           view: \"combo\",\n                           options: optionsDataSources,\n                           placeholder: L(\"Choose a data source\"),\n                           on: {\n                              onChange: (newv, oldv) => {\n                                 var selectedDC =\n                                    this.currentForm.AB.datacollectionByID(\n                                       newv\n                                    );\n                                 if (\n                                    selectedDC &&\n                                    (selectedDC.sourceType == \"query\" ||\n                                       !field.isConnection)\n                                 ) {\n                                    var queryFieldOptions = [];\n                                    selectedDC.datasource\n                                       .fields()\n                                       .forEach((f) => {\n                                          queryFieldOptions.push({\n                                             id: f.id,\n                                             value: f.label,\n                                          });\n                                       });\n                                    $$(ids.queryField).define(\n                                       \"options\",\n                                       queryFieldOptions\n                                    );\n                                    $$(ids.queryField).refresh();\n                                    $$(ids.queryField).show();\n                                 } else {\n                                    $$(ids.queryField).hide();\n                                 }\n                              },\n                           },\n                        },\n                        // we will place a list of query fields if you choose a datasource that has a query source type\n                        {\n                           id: ids.queryField,\n                           view: \"combo\",\n                           hidden: true,\n                           placeholder: L(\"Choose value from...\"),\n                           options: [{ id: 1, value: \"figure this out\" }],\n                        },\n                     ],\n                  },\n                  {\n                     id: ids.selectBy,\n                     view: \"combo\",\n                     options: optionsSelectBy,\n                     placeholder: L(\"Choose select option\"),\n                     on: {\n                        onChange: (newv, oldv) => {\n                           var $row = $$(ids.row);\n                           $row.removeView($row.getChildViews()[1]);\n                           if (newv == \"select-one\") {\n                              $row.addView({}, 1);\n                           } else {\n                              var options =\n                                 this.currentForm.datacollection.datasource\n                                    .fields()\n                                    .map(function (f) {\n                                       return {\n                                          id: f.id,\n                                          value: f.label,\n                                       };\n                                    });\n\n                              FilterComponent = this.AB.filterComplexNew(\n                                 `${idBase}_filter`\n                              );\n                              // FilterComponent.applicationLoad(\n                              //    this.currentForm.application\n                              // );\n                              FilterComponent.init({\n                                 isRecordRule: true,\n                                 recordRuleFieldOptions: options,\n                              });\n                              FilterComponent.on(\"change\", (val) => {\n                                 _logic.onFilterChange(val);\n                              });\n\n                              $row.addView(FilterComponent.ui, 1);\n\n                              var dcId = $$(ids.selectDc).getValue();\n                              var dataCollection =\n                                 this.currentForm.AB.datacollectionByID(dcId);\n                              if (dataCollection) {\n                                 _logic.populateFilters(dataCollection);\n                              }\n                           }\n                        },\n                     },\n                  },\n               ],\n            };\n\n            // WORKAROUND: add '[Current User]' option to the user data field\n            if (field.key == \"user\") {\n               $componentView.options = $componentView.options || [];\n               $componentView.options.unshift({\n                  id: \"ab-current-user\",\n                  value: L(\"[Current User]\"),\n               });\n            }\n\n            // UPDATE: ok, in practice we have not had any use cases where\n            // we want individual values on connectedObject fields, but\n            // instead we want to insert the current selected element from\n            // a relevant data view.  So, replace the fieldComponet\n            // from a connectedObject field with a list of data views that\n            // are based upon the same object we are connected to:\n            if (field.isConnection) {\n               // find the ABObject this field connects to\n               var connectedObject = field.datasourceLink;\n\n               // find all the DataSources that are based upon this ABObject\n               // to do this, we find the root Page we are on, then ask that Page for datasources:\n               datasources = datasources.filter((dc) => {\n                  return dc.datasource.id == connectedObject.id;\n               });\n\n               var dcQueries = this.currentForm.AB.datacollections((dc) => {\n                  return (\n                     dc.sourceType == \"query\" &&\n                     dc.datasource &&\n                     dc.datasource.canFilterObject(connectedObject)\n                  );\n                  // return dc.datasource.id == connectedObject.id;\n               });\n\n               datasources = datasources.concat(dcQueries);\n\n               // refresh a droplist with those dataSources\n               optionsDataSources = [];\n               datasources.forEach((dc) => {\n                  optionsDataSources.push({ id: dc.id, value: dc.label });\n               });\n\n               // add select an array value option\n               optionsSelectBy.push({\n                  id: \"filter-select-all\",\n                  value: L(\"Select all after filter by...\"),\n               });\n\n               $inputView = $optionUpdateExsits;\n\n               // and the upcoming formFieldComponent.init()\n               // doesn't need to do anything:\n               formFieldComponent = {\n                  init: function () {},\n               };\n\n               // and we reset field so it's customDisplay isn't called:\n               // field = {};\n            } else {\n               $inputView = {\n                  id: ids.multiview,\n                  view: \"multiview\",\n                  cells: [\n                     {\n                        batch: \"custom\",\n                        rows: [\n                           $componentView,\n                           {\n                              view: \"label\",\n                              label: `<a>${L(\"Or exists value\")}</a>`,\n                              on: {\n                                 onItemClick: function () {\n                                    var $container = this.getParentView(),\n                                       $multiview = $container.getParentView();\n\n                                    $multiview.showBatch(\"exist\");\n                                 },\n                              },\n                           },\n                        ],\n                     },\n                     {\n                        // Update value from exists object\n                        batch: \"exist\",\n                        rows: [\n                           $optionUpdateExsits,\n                           {\n                              view: \"label\",\n                              label: `<a>${L(\"Or custom value\")}</a>`,\n                              on: {\n                                 onItemClick: function () {\n                                    var $container = this.getParentView(),\n                                       $multiview = $container.getParentView();\n\n                                    // clear filter view\n                                    $$(ids.selectBy).setValue(\"select-one\");\n\n                                    $multiview.showBatch(\"custom\");\n                                 },\n                              },\n                           },\n                        ],\n                     },\n                  ],\n               };\n            }\n\n            // Change component to display this field's form input\n            var $row = $$(ids.row).getChildViews()[0];\n            $row.removeView($row.getChildViews()[3]);\n            $row.addView($inputView, 3);\n\n            formFieldComponent.init();\n\n            // Show custom display of data field\n            if (!field.isConnection && field.customDisplay) {\n               // field.customDisplay(field, this.App, $row.getChildViews()[3].$view, {\n\n               var compNodeView = $$($componentView.id).$view;\n\n               // wait until render UI complete\n               setTimeout(() => {\n                  field.customDisplay(field, this.App, compNodeView, {\n                     editable: true,\n\n                     // tree\n                     isForm: true,\n                  });\n               }, 50);\n            }\n\n            // Show the remove button\n            var $buttonRemove = $row.getChildViews()[4];\n            $buttonRemove.show();\n\n            // Add a new row\n            if (columnID) _logic.callbacks.onAdd();\n         },\n\n         setValue: (data) => {\n            $$(ids.field).setValue(data.fieldID);\n            // note: this triggers our _logic.selectField() fn.\n            var field = this.getUpdateObjectField(data.fieldID);\n            if (field) {\n               var setValueFn = () => {\n                  $$(ids.selectDc).setValue(data.value);\n                  if (data.queryField) {\n                     $$(ids.queryField).setValue(data.queryField);\n                  }\n                  var selectBy = data.selectBy || \"select-one\";\n                  $$(ids.selectBy).setValue(selectBy);\n\n                  if (selectBy != \"select-one\") {\n                     var collectionId = data.value;\n                     var dataCollection =\n                        this.currentForm.AB.datacollectionByID(collectionId);\n                     if (dataCollection && data.filterConditions) {\n                        _logic.populateFilters(\n                           dataCollection,\n                           data.filterConditions\n                        );\n                     }\n                  }\n               };\n\n               // now handle our special connectedObject case:\n               if (field.isConnection) {\n                  setValueFn();\n               } else {\n                  if (data.valueType == \"exist\") {\n                     $$(ids.multiview).showBatch(\"exist\");\n\n                     setValueFn();\n                  } else {\n                     $$(ids.multiview).showBatch(\"custom\");\n\n                     // wait until render UI complete\n                     setTimeout(function () {\n                        // set value to custom field\n                        var rowData = {};\n                        rowData[field.columnName] = data.value;\n                        field.setValue($$(ids.value), rowData);\n                     }, 50);\n                  }\n               }\n            }\n         },\n\n         populateFilters: (dataView, filterConditions) => {\n            filterConditions =\n               filterConditions ||\n               ABViewRuleActionObjectUpdaterDefaults.filterConditions;\n\n            // Populate data to popups\n            // FilterComponent.objectLoad(objectCopy);\n            FilterComponent.fieldsLoad(\n               dataView.datasource ? dataView.datasource.fields() : []\n            );\n            FilterComponent.setValue(filterConditions);\n         },\n\n         toSettings: () => {\n            // if this isn't the last entry row\n            // * a row with valid data has the [delete] button showing.\n            var buttonDelete = $$(ids.buttonDelete);\n            if (buttonDelete && buttonDelete.isVisible()) {\n               var data = {};\n               data.fieldID = $$(ids.field).getValue();\n\n               var $valueField = $$(ids.value);\n               var field = this.getUpdateObjectField(data.fieldID);\n\n               var getValueFn = () => {\n                  data.value = $$(ids.selectDc).getValue();\n                  data.queryField = $$(ids.queryField).getValue();\n                  data.op = \"set\"; // possible to create other types of operations.\n                  data.type = field.key;\n                  data.selectBy = $$(ids.selectBy).getValue();\n                  data.valueType = \"exist\";\n                  if (FilterComponent) {\n                     data.filterConditions = FilterComponent.getValue();\n                  }\n               };\n\n               // now handle our special connectedObject case:\n               if (field.isConnection) {\n                  getValueFn();\n               } else {\n                  if ($$(ids.multiview).config.visibleBatch == \"exist\") {\n                     getValueFn();\n                  } else {\n                     data.value = field.getValue($valueField, {});\n                     data.op = \"set\"; // possible to create other types of operations.\n                     data.type = field.key;\n                     data.valueType = \"custom\";\n                  }\n               }\n\n               return data;\n            } else {\n               return null;\n            }\n         },\n      };\n\n      var _ui = {\n         id: ids.row,\n         view: \"layout\",\n         rows: [\n            {\n               cols: [\n                  {\n                     // Label\n                     view: \"label\",\n                     width: this.currentForm.AB.Config.labelWidthSmall,\n                     label: L(\"Set\"),\n                  },\n                  {\n                     // Field list\n                     view: \"combo\",\n                     name: \"field\",\n                     placeholder: L(\"Choose a field\"),\n                     id: ids.field,\n                     height: 32,\n                     options: _logic.getFieldList(true),\n                     on: {\n                        onChange: function (columnId) {\n                           _logic.selectField(columnId);\n                        },\n                     },\n                  },\n                  {\n                     // Label\n                     view: \"label\",\n                     width: this.currentForm.AB.Config.labelWidthSmall,\n                     label: L(\"To\"),\n                  },\n\n                  // Field value\n                  // NOTE: this view gets replaced each time a field is selected.\n                  // We replace it with a component associated with the Field\n                  {},\n\n                  {\n                     // \"Remove\" button\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     id: ids.buttonDelete,\n                     icon: \"fa fa-trash\",\n                     type: \"icon\",\n                     width: 30,\n                     hidden: true,\n                     click: function () {\n                        _logic.callbacks.onDelete(ids.row);\n                     },\n                  },\n               ],\n            },\n            {}, // we will add filters here if we need them\n         ],\n      };\n\n      var init = (options) => {\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         if (options.data) {\n            // options.data = { formID:xxx, value:yyy,  type:zzzz }\n            _logic.setValue(options.data);\n\n            // _logic.buttonsToggle();\n         }\n      };\n\n      return {\n         ui: _ui,\n         init: init,\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   getUpdateObjectField(fieldID) {\n      return (\n         this.queryObject?.fieldByID(fieldID) ??\n         this.updateObject?.fieldByID(fieldID) ??\n         this.currentForm.AB.fieldNew(\n            this.currentForm.AB.definitionByID(fieldID) ?? {},\n            this.currentForm.AB.objectNew({})\n         )\n      );\n   }\n\n   /**\n    * @method processUpdateObject\n    * Perform the specified update actions on the provided objectToUpdate\n    * @param {obj} options  Additional information required to make updates.\n    * @param {obj} objectToUpdate  The object to make the updates on.\n    * @return {boolean}   true if an update took place, false if no updates.\n    */\n   processUpdateObject(options, objectToUpdate) {\n      this._formData = objectToUpdate;\n      // return new Promise((resolve, reject) => {\n      var isUpdated = false;\n\n      this.valueRules = this.valueRules || {};\n      this.valueRules.fieldOperations = this.valueRules.fieldOperations || [];\n\n      // var allPromises = [];\n\n      // for each of our operations\n      this.valueRules.fieldOperations.forEach((op) => {\n         // op = {\n         // \tfieldID:'zzzzz',\n         //\tvalue: 'xxx',\n         //\top: 'set',\n         //  type:'',\n         //  queryField: '', // id of ABField\n         //  selectBy:'',   ['select-one', 'filter-select-one', 'filter-select-all']\n         //  valueType: \"\", ['custom', 'exist']\n         // \tfilterConditions: { // array of filters to apply to the data table\n         //\t\tglue: 'and',\n         // \t\trules: []\n         //  }\n         // }\n\n         var field = this.getUpdateObjectField(op.fieldID);\n         if (!field) return;\n\n         var value = op.value;\n\n         if (value == \"ab-current-user\") {\n            value = this.currentForm.AB.Account.username();\n\n            // in the case of a connected Field, we use op.value to get the\n            // datacollection, and find it's currently selected value:\n         } else if (field.isConnection || op.valueType == \"exist\") {\n            // NOTE: 30 May 2018 :current decision from Ric is to limit this\n            // to only handle 1:x connections where we update the current obj\n            // with the PK of the value from the DC.\n            //\n            // In the future, if we want to handle the other options,\n            // we need to modify this to handle the M:x connections where\n            // we insert our PK into the value from the DC.\n\n            // op.value is the ABDatacollection.id we need to find\n            const dataCollection = this.currentForm.AB.datacollectionByID(\n               op.value\n            );\n            if (!dataCollection) return;\n\n            // we don't want to mess with the dataView directly since it might\n            // be used by other parts of the system and this refresh might reset\n            // it's cursor.\n            // var clonedDataCollection = dataView.filteredClone(op.filterConditions);\n\n            // loop through rules to find \"same-as-field\" or \"not-same-as-field\"\n            // adjust operator and switch key value to actual value when found\n            var filterConditions = this.currentForm.AB.cloneDeep(\n               op.filterConditions\n            );\n            if (filterConditions && filterConditions.rules) {\n               filterConditions.rules\n                  .filter((r) => {\n                     return (\n                        r.rule == \"same_as_field\" ||\n                        r.rule == \"not_same_as_field\"\n                     );\n                  })\n                  .forEach((item) => {\n                     var valueField =\n                        this.currentForm.datacollection.datasource.fieldByID(\n                           item.value\n                        );\n                     if (valueField.isConnection) {\n                        item.value = valueField.format(this._formData);\n                     } else {\n                        item.value = this._formData[valueField.columnName];\n                     }\n\n                     if (item.rule == \"not_same_as_field\") {\n                        item.rule = \"not equals\";\n                     } else {\n                        item.rule = \"equals\";\n                     }\n                  });\n            }\n\n            let clonedDataCollection =\n               dataCollection.filteredClone(filterConditions);\n\n            switch (op.selectBy) {\n               // the 'select-one' is getting the currently set cursor on this data collection\n               // and using that value.\n               // TODO: rename to 'select-cursor'\n               case \"select-one\":\n               default:\n                  value = clonedDataCollection.getCursor(); // dataView.getItem(dataView.getCursor());\n\n                  if (value) {\n                     // NOTE: webix documentation issue: .getCursor() is supposed to return\n                     // the .id of the item.  However it seems to be returning the {obj}\n\n                     if (op.valueType == \"exist\") {\n                        var fieldWithValue =\n                           clonedDataCollection.datasource.fieldByID(\n                              op.queryField\n                           );\n\n                        if (fieldWithValue)\n                           value = value[fieldWithValue.columnName];\n                     } else if (value.id) {\n                        value = value.id;\n                     }\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        if (!value) break;\n\n                        if (field.isConnection) {\n                           // if we are setting a connection we do not want to pass the full object because\n                           // batch creates payload gets too large\n                           objectToUpdate[field.columnName] = {};\n                           objectToUpdate[field.columnName].id =\n                              value[field.datasourceLink.PK()];\n                           objectToUpdate[field.columnName][\n                              field.datasourceLink.PK()\n                           ] = value[field.datasourceLink.PK()];\n\n                           // If the connect field use the custom FK, then it requires to pass value of the custom FK.\n                           if (field.settings.isCustomFK) {\n                              if (field.indexField) {\n                                 objectToUpdate[field.columnName][\n                                    field.indexField.columnName\n                                 ] = value[field.indexField.columnName];\n                              }\n                              if (field.indexField2) {\n                                 objectToUpdate[field.columnName][\n                                    field.indexField2.columnName\n                                 ] = value[field.indexField2.columnName];\n                              }\n                           }\n\n                           field.datasourceLink\n                              .fields(\n                                 (f) =>\n                                    f.key == \"combined\" || f.key == \"AutoIndex\"\n                              )\n                              .forEach((f) => {\n                                 objectToUpdate[field.columnName][\n                                    f.columnName\n                                 ] = value[f.columnName];\n                              });\n                        } else {\n                           objectToUpdate[field.columnName] = value;\n                        }\n\n                        break;\n                  }\n                  break;\n\n               // attempt to filter this data collection by the given filterConditions\n               case \"filter-select-all\":\n                  var newValues = [];\n\n                  var currRow = clonedDataCollection.getFirstRecord();\n                  while (currRow) {\n                     // do something there\n\n                     switch (clonedDataCollection.sourceType) {\n                        // case: datacollection is an object\n                        // we want to set our field to this values\n                        case \"object\":\n                           newValues.push(currRow.id);\n                           break;\n\n                        // case: datacollection is a query\n                        // our field is a pointer to an object. we want to pull out that object\n                        // from the query data.\n                        case \"query\":\n                           var fieldWithValue =\n                              clonedDataCollection.datasource.fieldByID(\n                                 op.queryField\n                              );\n\n                           var newValue = currRow[fieldWithValue.columnName];\n\n                           if (typeof newValue == \"undefined\") {\n                              newValue = currRow[fieldWithValue.relationName()];\n\n                              if (Array.isArray(newValue)) {\n                                 newValue = newValue.map((v) => {\n                                    return v.id ? v.id : v;\n                                 });\n                              } else if (newValue.id) {\n                                 newValue = newValue.id;\n                              }\n                           }\n\n                           newValues = this.currentForm.AB.uniq(\n                              newValues.concat(newValue)\n                           );\n\n                           break;\n                     }\n\n                     currRow = clonedDataCollection.getNextRecord(currRow);\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        if (field.linkType() == \"one\") {\n                           var updates = [];\n                           newValues.forEach((v) => {\n                              var objectToUpdateClone =\n                                 this.currentForm.AB.cloneDeep(objectToUpdate);\n                              objectToUpdateClone[field.columnName] = v;\n                              updates.push(objectToUpdateClone);\n                           });\n                           objectToUpdate.newRecords = updates;\n                        } else {\n                           objectToUpdate[field.columnName] = newValues;\n                        }\n                        break;\n                  }\n                  break;\n\n               case \"filter-select-one\":\n                  newValues = [];\n\n                  value = clonedDataCollection.getFirstRecord();\n\n                  if (value) {\n                     // case: datacollection is a query\n                     // our field is a pointer to an object. we want to pull out that object\n                     // from the query data.\n                     if (\n                        clonedDataCollection.sourceType == \"query\" ||\n                        (op.valueType == \"exist\" && op.queryField)\n                     ) {\n                        fieldWithValue =\n                           clonedDataCollection.datasource.fieldByID(\n                              op.queryField\n                           );\n\n                        newValue = value[fieldWithValue.columnName];\n\n                        if (typeof newValue == \"undefined\") {\n                           newValue = value[fieldWithValue.relationName()];\n                           if (Array.isArray(newValue)) {\n                              newValue = newValue[0];\n                           }\n                           if (newValue.id) newValue = newValue.id;\n                        }\n\n                        value = newValue;\n                     }\n                     // case: datacollection is an object\n                     // we want to set our field to this values\n                     else if (clonedDataCollection.sourceType == \"object\") {\n                        // NOTE: webix documentation issue: .getCursor() is supposed to return\n                        // the .id of the item.  However it seems to be returning the {obj}\n\n                        // we need to use the objects indexField(2) if there is one\n                        // otherwise default to the id\n                        var lookup;\n                        if (field.indexField) {\n                           lookup = field.indexField.columnName;\n                        } else if (field.indexField2) {\n                           lookup = field.indexField2.columnName;\n                        }\n                        if (lookup && value[lookup]) {\n                           value = value[lookup];\n                        } else if (value.id) {\n                           value = value.id;\n                        }\n                     }\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        objectToUpdate[field.columnName] = value;\n                        break;\n                  }\n                  break;\n            }\n\n            isUpdated = true;\n\n            // allPromises.push(connectedPromise);\n         } else {\n            // var setPromise = new Promise((resolve, reject) => {\n            switch (op.op) {\n               case \"set\":\n                  objectToUpdate[field.columnName] = value;\n                  break;\n            }\n\n            isUpdated = true;\n\n            //    resolve(isUpdated);\n            // });\n\n            // allPromises.push(setPromise);\n\n            // console.log(\"finished\");\n         }\n      });\n\n      return isUpdated;\n      // Promise.all(allPromises).then(() => {\n      //    resolve(isUpdated);\n      // });\n      // });\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      this._formData = options.data;\n\n      return new Promise((resolve, reject) => {\n         let isUpdated = this.processUpdateObject({}, options.data);\n         if (!isUpdated) {\n            resolve();\n         } else {\n            // get the model from the provided Form Obj:\n            var dv = options.form.datacollection;\n            if (!dv) return resolve();\n\n            var model = dv.model;\n            model\n               .update(options.data.id, options.data)\n               .then(resolve)\n               .catch((err) => {\n                  this.currentForm.AB.notify.developer(err, {\n                     context:\n                        \"ABViewRuleActionObjectUpdater:process  update error\",\n                     id: options.data.id,\n                     data: options.data,\n                  });\n                  reject(err);\n               });\n         }\n      });\n   }\n\n   // objectLoad\n   // save the current object this Action is associated with.\n   objectLoad(object) {\n      super.objectLoad(object);\n      this.updateObjectLoad(object);\n   }\n\n   // updateObjectLoad\n   // save the given object as the object we will update.\n   updateObjectLoad(object) {\n      // stash rules for old object\n      if (this.updateObject) {\n         this.stashRules[this.updateObject.id] = this.valueRules;\n      }\n\n      this.updateObject = object;\n\n      // with a new updateObject, then reset our UI\n      this._uiUpdater = null;\n\n      // reload any stashed rules, or set to {}\n      this.valueRules = this.stashRules[this.updateObject.id] || {};\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // make sure UI is updated:\n      // set our updateObject\n      if (settings.updateObjectURL) {\n         var updateObject = this.currentForm.application.urlResolve(\n            settings.updateObjectURL\n         );\n         this.updateObject = updateObject;\n      }\n\n      // if we have a display component, then populate it:\n      if (this._uiUpdater) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._uiUpdater.fromSettings(settings);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tvalueRules:{}\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._uiUpdater.toSettings();\n      settings.updateObjectURL = this.updateObject.urlPointer();\n\n      return settings;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * Here we need to scan each of our field operations, and verify all\n    * related data collections are initialized before we can continue.\n    * @return {Promise}\n    */\n   isReady() {\n      var allReady = [];\n      let fieldOps = this.valueRules?.fieldOperations ?? [];\n      fieldOps.forEach((op) => {\n         let field = this.getUpdateObjectField(op.fieldID);\n         if (!field) return;\n         if (!field.isConnection && op.valueType !== \"exist\") return;\n\n         // this references a DC\n         let DC = this.currentForm.AB.datacollectionByID(op.value);\n         if (DC?.dataStatus === DC?.dataStatusFlag.initialized) return;\n\n         // not ready yet, so wait until the 'initializedData' event\n         allReady.push(\n            new Promise((resolve /*, reject */) => {\n               DC.on(\"initializedData\", () => {\n                  resolve();\n               });\n            })\n         );\n      });\n      return Promise.all(allReady);\n   }\n};\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.ImageModule=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){\"use strict\";var DocUtils=require(\"docxtemplater\").DocUtils;DocUtils.convertPixelsToEmus=function(pixel){return Math.round(pixel*9525)};module.exports=DocUtils},{docxtemplater:5}],2:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./docUtils\");var extensionRegex=/[^.]+\\.([^.]+)/;var rels={getPrefix:function getPrefix(fileType){return fileType===\"docx\"?\"word\":\"ppt\"},getFileTypeName:function getFileTypeName(fileType){return fileType===\"docx\"?\"document\":\"presentation\"},getRelsFileName:function getRelsFileName(fileName){return fileName.replace(/^.*?([a-zA-Z0-9]+)\\.xml$/,\"$1\")+\".xml.rels\"},getRelsFilePath:function getRelsFilePath(fileName,fileType){var relsFileName=rels.getRelsFileName(fileName);var prefix=fileType===\"pptx\"?\"ppt/slides\":\"word\";return prefix+\"/_rels/\"+relsFileName}};module.exports=function(){function ImgManager(zip,fileName,xmlDocuments,fileType){_classCallCheck(this,ImgManager);this.fileName=fileName;this.prefix=rels.getPrefix(fileType);this.zip=zip;this.xmlDocuments=xmlDocuments;this.fileTypeName=rels.getFileTypeName(fileType);this.mediaPrefix=fileType===\"pptx\"?\"../media\":\"media\";var relsFilePath=rels.getRelsFilePath(fileName,fileType);this.relsDoc=xmlDocuments[relsFilePath]||this.createEmptyRelsDoc(xmlDocuments,relsFilePath)}_createClass(ImgManager,[{key:\"createEmptyRelsDoc\",value:function createEmptyRelsDoc(xmlDocuments,relsFileName){var mainRels=this.prefix+\"/_rels/\"+this.fileTypeName+\".xml.rels\";var doc=xmlDocuments[mainRels];if(!doc){var err=new Error(\"Could not copy from empty relsdoc\");err.properties={mainRels:mainRels,relsFileName:relsFileName,files:Object.keys(this.zip.files)};throw err}var relsDoc=DocUtils.str2xml(DocUtils.xml2str(doc));var relationships=relsDoc.getElementsByTagName(\"Relationships\")[0];var relationshipChilds=relationships.getElementsByTagName(\"Relationship\");for(var i=0,l=relationshipChilds.length;i<l;i++){relationships.removeChild(relationshipChilds[i])}xmlDocuments[relsFileName]=relsDoc;return relsDoc}},{key:\"loadImageRels\",value:function loadImageRels(){var iterable=this.relsDoc.getElementsByTagName(\"Relationship\");return Array.prototype.reduce.call(iterable,function(max,relationship){var id=relationship.getAttribute(\"Id\");if(/^rId[0-9]+$/.test(id)){return Math.max(max,parseInt(id.substr(3),10))}return max},0)}},{key:\"addExtensionRels\",value:function addExtensionRels(contentType,extension){var contentTypeDoc=this.xmlDocuments[\"[Content_Types].xml\"];var defaultTags=contentTypeDoc.getElementsByTagName(\"Default\");var extensionRegistered=Array.prototype.some.call(defaultTags,function(tag){return tag.getAttribute(\"Extension\")===extension});if(extensionRegistered){return}var types=contentTypeDoc.getElementsByTagName(\"Types\")[0];var newTag=contentTypeDoc.createElement(\"Default\");newTag.namespaceURI=null;newTag.setAttribute(\"ContentType\",contentType);newTag.setAttribute(\"Extension\",extension);types.appendChild(newTag)}},{key:\"addImageRels\",value:function addImageRels(imageName,imageData,i){if(i==null){i=0}var realImageName=i===0?imageName:imageName+(\"(\"+i+\")\");var imagePath=this.prefix+\"/media/\"+realImageName;if(this.zip.files[imagePath]!=null){return this.addImageRels(imageName,imageData,i+1)}var image={name:imagePath,data:imageData,options:{binary:true}};this.zip.file(image.name,image.data,image.options);var extension=realImageName.replace(extensionRegex,\"$1\");this.addExtensionRels(\"image/\"+extension,extension);var relationships=this.relsDoc.getElementsByTagName(\"Relationships\")[0];var newTag=this.relsDoc.createElement(\"Relationship\");newTag.namespaceURI=null;var maxRid=this.loadImageRels()+1;newTag.setAttribute(\"Id\",\"rId\"+maxRid);newTag.setAttribute(\"Type\",\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\");newTag.setAttribute(\"Target\",this.mediaPrefix+\"/\"+realImageName);relationships.appendChild(newTag);return maxRid}}]);return ImgManager}()},{\"./docUtils\":1}],3:[function(require,module,exports){\"use strict\";module.exports={getImageXml:function getImageXml(rId,size){return('<w:drawing>\\n\\t\\t<wp:inline distT=\"0\" distB=\"0\" distL=\"0\" distR=\"0\">\\n\\t\\t\\t<wp:extent cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t<wp:effectExtent l=\"0\" t=\"0\" r=\"0\" b=\"0\"/>\\n\\t\\t\\t<wp:docPr id=\"2\" name=\"Image 2\" descr=\"image\"/>\\n\\t\\t\\t<wp:cNvGraphicFramePr>\\n\\t\\t\\t\\t<a:graphicFrameLocks xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\" noChangeAspect=\"1\"/>\\n\\t\\t\\t</wp:cNvGraphicFramePr>\\n\\t\\t\\t<a:graphic xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\">\\n\\t\\t\\t\\t<a:graphicData uri=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t<pic:pic xmlns:pic=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t<pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPr id=\"0\" name=\"Picture 1\" descr=\"image\"/>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t</pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t<pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a:ext uri=\"{28A0092B-C50C-407E-A947-70E740481C1C}\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a14:useLocalDpi xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" val=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t\\t\\t\\t\\t</a:blip>\\n\\t\\t\\t\\t\\t\\t\\t<a:srcRect/>\\n\\t\\t\\t\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t\\t\\t\\t</pic:blipFill>\\n\\t\\t\\t\\t\\t\\t<pic:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:off x=\"0\" y=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t<a:ln>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t\\t\\t</pic:spPr>\\n\\t\\t\\t\\t\\t</pic:pic>\\n\\t\\t\\t\\t</a:graphicData>\\n\\t\\t\\t</a:graphic>\\n\\t\\t</wp:inline>\\n\\t</w:drawing>\\n\\t\\t').replace(/\\t|\\n/g,\"\")},getImageXmlCentered:function getImageXmlCentered(rId,size){return('<w:p>\\n\\t\\t\\t<w:pPr>\\n\\t\\t\\t\\t<w:jc w:val=\"center\"/>\\n\\t\\t\\t</w:pPr>\\n\\t\\t\\t<w:r>\\n\\t\\t\\t\\t<w:rPr/>\\n\\t\\t\\t\\t<w:drawing>\\n\\t\\t\\t\\t\\t<wp:inline distT=\"0\" distB=\"0\" distL=\"0\" distR=\"0\">\\n\\t\\t\\t\\t\\t<wp:extent cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t<wp:docPr id=\"0\" name=\"Picture\" descr=\"\"/>\\n\\t\\t\\t\\t\\t<a:graphic xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\">\\n\\t\\t\\t\\t\\t\\t<a:graphicData uri=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t<pic:pic xmlns:pic=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t\\t<pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPr id=\"0\" name=\"Picture\" descr=\"\"/>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t</pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t</pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<pic:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:off x=\"0\" y=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t<a:ln w=\"9525\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:miter lim=\"800000\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:headEnd/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:tailEnd/>\\n\\t\\t\\t\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t\\t\\t\\t</pic:spPr>\\n\\t\\t\\t\\t\\t\\t</pic:pic>\\n\\t\\t\\t\\t\\t\\t</a:graphicData>\\n\\t\\t\\t\\t\\t</a:graphic>\\n\\t\\t\\t\\t\\t</wp:inline>\\n\\t\\t\\t\\t</w:drawing>\\n\\t\\t\\t</w:r>\\n\\t\\t</w:p>\\n\\t\\t').replace(/\\t|\\n/g,\"\")},getPptxImageXml:function getPptxImageXml(rId,size,offset){return('<p:pic>\\n\\t\\t\\t<p:nvPicPr>\\n\\t\\t\\t\\t<p:cNvPr id=\"6\" name=\"Picture 2\"/>\\n\\t\\t\\t\\t<p:cNvPicPr>\\n\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t</p:cNvPicPr>\\n\\t\\t\\t\\t<p:nvPr/>\\n\\t\\t\\t</p:nvPicPr>\\n\\t\\t\\t<p:blipFill>\\n\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\" cstate=\"print\">\\n\\t\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t\\t<a:ext uri=\"{28A0092B-C50C-407E-A947-70E740481C1C}\">\\n\\t\\t\\t\\t\\t\\t\\t<a14:useLocalDpi xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" val=\"0\"/>\\n\\t\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t\\t</a:blip>\\n\\t\\t\\t\\t<a:srcRect/>\\n\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t</p:blipFill>\\n\\t\\t\\t<p:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t<a:off x=\"'+offset.x+'\" y=\"'+offset.y+'\"/>\\n\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t<a:ln>\\n\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t<a:effectLst/>\\n\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{909E8E84-426E-40DD-AFC4-6F175D3DCCD1}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenFill xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\">\\n\\t\\t\\t\\t\\t\\t\\t<a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"accent1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:solidFill>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenFill>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{91240B29-F687-4F45-9708-019B960494DF}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenLine xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" w=\"9525\">\\n\\t\\t\\t\\t\\t\\t\\t<a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"tx1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:miter lim=\"800000\"/>\\n\\t\\t\\t\\t\\t\\t\\t<a:headEnd/>\\n\\t\\t\\t\\t\\t\\t\\t<a:tailEnd/>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenLine>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{AF507438-7753-43E0-B8FC-AC1667EBCBE1}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenEffects xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\">\\n\\t\\t\\t\\t\\t\\t\\t<a:effectLst>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:outerShdw dist=\"35921\" dir=\"2700000\" algn=\"ctr\" rotWithShape=\"0\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"bg2\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t</a:outerShdw>\\n\\t\\t\\t\\t\\t\\t\\t</a:effectLst>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenEffects>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t</p:spPr>\\n\\t\\t</p:pic>\\n\\t\\t').replace(/\\t|\\n/g,\"\")}}},{}],4:[function(require,module,exports){\"use strict\";function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}var memoize=require(\"./memoize\");var DOMParser=require(\"xmldom\").DOMParser;var XMLSerializer=require(\"xmldom\").XMLSerializer;var Errors=require(\"./errors\");var DocUtils={};function parser(tag){return _defineProperty({},\"get\",function get(scope){if(tag===\".\"){return scope}return scope[tag]})}DocUtils.defaults={nullGetter:function nullGetter(part){if(!part.module){return\"undefined\"}if(part.module===\"rawxml\"){return\"\"}return\"\"},parser:memoize(parser),fileType:\"docx\",delimiters:{start:\"{\",end:\"}\"}};DocUtils.mergeObjects=function(){var resObj={};var obj=void 0,keys=void 0;for(var i=0;i<arguments.length;i+=1){obj=arguments[i];keys=Object.keys(obj);for(var j=0;j<keys.length;j+=1){resObj[keys[j]]=obj[keys[j]]}}return resObj};DocUtils.xml2str=function(xmlNode){var a=new XMLSerializer;return a.serializeToString(xmlNode)};DocUtils.decodeUtf8=function(s){try{if(s===undefined){return undefined}return decodeURIComponent(escape(DocUtils.convertSpaces(s)))}catch(e){var err=new Error(\"End\");err.properties.data=s;err.properties.explanation=\"Could not decode string to UTF8\";throw err}};DocUtils.encodeUtf8=function(s){return unescape(encodeURIComponent(s))};DocUtils.str2xml=function(str,errorHandler){var parser=new DOMParser({errorHandler:errorHandler});return parser.parseFromString(str,\"text/xml\")};DocUtils.charMap={\"&\":\"&amp;\",\"'\":\"&apos;\",\"<\":\"&lt;\",\">\":\"&gt;\"};var regexStripRegexp=/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g;DocUtils.escapeRegExp=function(str){return str.replace(regexStripRegexp,\"\\\\$&\")};DocUtils.charMapRegexes=Object.keys(DocUtils.charMap).map(function(endChar){var startChar=DocUtils.charMap[endChar];return{rstart:new RegExp(DocUtils.escapeRegExp(startChar),\"g\"),rend:new RegExp(DocUtils.escapeRegExp(endChar),\"g\"),start:startChar,end:endChar}});DocUtils.wordToUtf8=function(string){var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rstart,r.end)}return string};DocUtils.utf8ToWord=function(string){if(typeof string!==\"string\"){string=string.toString()}var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rend,r.start)}return string};DocUtils.cloneDeep=function(obj){return JSON.parse(JSON.stringify(obj))};DocUtils.concatArrays=function(arrays){return arrays.reduce(function(result,array){Array.prototype.push.apply(result,array);return result},[])};var spaceRegexp=new RegExp(String.fromCharCode(160),\"g\");DocUtils.convertSpaces=function(s){return s.replace(spaceRegexp,\" \")};DocUtils.pregMatchAll=function(regex,content){var matchArray=[];var match=void 0;while((match=regex.exec(content))!=null){matchArray.push({array:match,offset:match.index})}return matchArray};DocUtils.sizeOfObject=function(obj){return Object.keys(obj).length};function throwXmlTagNotFound(options){var err=new Errors.XTTemplateError(\"No tag '\"+options.element+\"' was found at the \"+options.position);err.properties={id:\"no_xml_tag_found_at_\"+options.position,explanation:\"No tag '\"+options.element+\"' was found at the \"+options.position,parsed:options.parsed,index:options.index,element:options.element};throw err}DocUtils.getRight=function(parsed,element,index){for(var i=index,l=parsed.length;i<l;i++){var part=parsed[i];if(part.value===\"</\"+element+\">\"){return i}}throwXmlTagNotFound({position:\"right\",element:element,parsed:parsed,index:index})};DocUtils.getLeft=function(parsed,element,index){var parts=parsed.slice(0,index);for(var i=parts.length-1;i>=0;i--){var part=parts[i];if(part.value.indexOf(\"<\"+element)===0&&[\">\",\" \"].indexOf(part.value[element.length+1])!==-1){return i}}throwXmlTagNotFound({position:\"left\",element:element,parsed:parsed,index:index})};module.exports=DocUtils;DocUtils.traits=require(\"./traits\");DocUtils.moduleWrapper=require(\"./module-wrapper\")},{\"./errors\":6,\"./memoize\":9,\"./module-wrapper\":11,\"./traits\":20,xmldom:23}],5:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var wrapper=DocUtils.moduleWrapper;var Docxtemplater=function(){function Docxtemplater(){_classCallCheck(this,Docxtemplater);if(arguments.length>0){throw new Error(\"The constructor with parameters have been removed in docxtemplater 3.0, please check the upgrade guide.\")}this.compiled={};this.modules=[];this.setOptions({})}_createClass(Docxtemplater,[{key:\"attachModule\",value:function attachModule(module){this.modules.push(wrapper(module));return this}},{key:\"setOptions\",value:function setOptions(options){var _this=this;this.options=options;Object.keys(DocUtils.defaults).forEach(function(key){var defaultValue=DocUtils.defaults[key];_this[key]=_this.options[key]!=null?_this.options[key]:defaultValue});if(this.fileType===\"docx\"||this.fileType===\"pptx\"){this.fileTypeConfig=Docxtemplater.FileTypeConfig[this.fileType]}this.fileTypeConfig=this.options.fileTypeConfig||this.fileTypeConfig;this.options.xmlFileNames=[];return this}},{key:\"loadZip\",value:function loadZip(zip){if(zip.loadAsync){throw new Error(\"Docxtemplater doesn't handle JSZip version >=3, see changelog\")}this.zip=zip;return this}},{key:\"compileFile\",value:function compileFile(fileName){var currentFile=this.createTemplateClass(fileName);currentFile.parse();this.compiled[fileName]=currentFile}},{key:\"compile\",value:function compile(){this.templatedFiles=this.fileTypeConfig.getTemplatedFiles(this.zip)}},{key:\"render\",value:function render(){var _this2=this;this.modules=this.fileTypeConfig.baseModules.map(function(moduleFunction){return moduleFunction()}).concat(this.modules);this.options=this.modules.reduce(function(options,module){return module.optionsTransformer(options,_this2)},this.options);this.xmlDocuments=this.options.xmlFileNames.reduce(function(xmlDocuments,fileName){var content=_this2.zip.files[fileName].asText();xmlDocuments[fileName]=DocUtils.str2xml(content);return xmlDocuments},{});this.modules.forEach(function(module){module.set({zip:_this2.zip,xmlDocuments:_this2.xmlDocuments,data:_this2.data})});this.compile();this.modules.forEach(function(module){module.set({compiled:_this2.compiled})});this.templatedFiles.forEach(function(fileName){if(_this2.zip.files[fileName]!=null){_this2.compileFile(fileName)}});this.mapper=this.modules.reduce(function(value,module){return module.getRenderedMap(value)},{});Object.keys(this.mapper).forEach(function(to){var mapped=_this2.mapper[to];var from=mapped.from;var currentFile=_this2.compiled[from];currentFile.setTags(mapped.data);currentFile.render();_this2.zip.file(to,currentFile.content)});Object.keys(this.xmlDocuments).forEach(function(fileName){_this2.zip.remove(fileName);var content=DocUtils.encodeUtf8(DocUtils.xml2str(_this2.xmlDocuments[fileName]));return _this2.zip.file(fileName,content,{})});return this}},{key:\"setData\",value:function setData(data){this.data=data;return this}},{key:\"getZip\",value:function getZip(){return this.zip}},{key:\"createTemplateClass\",value:function createTemplateClass(path){var usedData=this.zip.files[path].asText();return this.createTemplateClassFromContent(usedData,path)}},{key:\"createTemplateClassFromContent\",value:function createTemplateClassFromContent(content,filePath){var _this3=this;var xmltOptions={filePath:filePath};Object.keys(DocUtils.defaults).forEach(function(key){xmltOptions[key]=_this3[key]});xmltOptions.fileTypeConfig=this.fileTypeConfig;xmltOptions.modules=this.modules;return new Docxtemplater.XmlTemplater(content,xmltOptions)}},{key:\"getFullText\",value:function getFullText(path){return this.createTemplateClass(path||this.fileTypeConfig.textPath).getFullText()}},{key:\"getTemplatedFiles\",value:function getTemplatedFiles(){this.compile();return this.templatedFiles}}]);return Docxtemplater}();Docxtemplater.DocUtils=require(\"./doc-utils\");Docxtemplater.Errors=require(\"./errors\");Docxtemplater.XmlTemplater=require(\"./xml-templater\");Docxtemplater.FileTypeConfig=require(\"./file-type-config\");Docxtemplater.XmlMatcher=require(\"./xml-matcher\");module.exports=Docxtemplater},{\"./doc-utils\":4,\"./errors\":6,\"./file-type-config\":7,\"./xml-matcher\":21,\"./xml-templater\":22}],6:[function(require,module,exports){\"use strict\";function XTError(message){this.name=\"GenericError\";this.message=message;this.stack=new Error(message).stack}XTError.prototype=Error.prototype;function XTTemplateError(message){this.name=\"TemplateError\";this.message=message;this.stack=new Error(message).stack}XTTemplateError.prototype=new XTError;function XTScopeParserError(message){this.name=\"ScopeParserError\";this.message=message;this.stack=new Error(message).stack}XTScopeParserError.prototype=new XTError;function XTInternalError(message){this.name=\"InternalError\";this.properties={explanation:\"InternalError\"};this.message=message;this.stack=new Error(message).stack}XTInternalError.prototype=new XTError;module.exports={XTError:XTError,XTTemplateError:XTTemplateError,XTInternalError:XTInternalError,XTScopeParserError:XTScopeParserError}},{}],7:[function(require,module,exports){\"use strict\";var loopModule=require(\"./modules/loop\");var spacePreserveModule=require(\"./modules/space-preserve\");var rawXmlModule=require(\"./modules/rawxml\");var expandPairTrait=require(\"./modules/expand-pair-trait\");var render=require(\"./modules/render\");var PptXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/ppt\\/(slides|slideMasters)\\/(slide|slideMaster)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"ppt/presentation.xml\"])},textPath:\"ppt/slides/slide1.xml\",tagsXmlTextArray:[\"a:t\",\"m:t\"],tagsXmlLexedArray:[\"p:sp\",\"a:tc\",\"a:tr\",\"a:table\",\"a:p\",\"a:r\"],tagRawXml:\"p:sp\",tagTextXml:\"a:t\",baseModules:[render,expandPairTrait,rawXmlModule,loopModule]};var DocXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/word\\/(header|footer)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"word/document.xml\"])},textPath:\"word/document.xml\",tagsXmlTextArray:[\"w:t\",\"m:t\"],tagsXmlLexedArray:[\"w:tc\",\"w:tr\",\"w:table\",\"w:p\",\"w:r\"],tagRawXml:\"w:p\",tagTextXml:\"w:t\",baseModules:[render,spacePreserveModule,expandPairTrait,rawXmlModule,loopModule]};module.exports={docx:DocXFileTypeConfig,pptx:PptXFileTypeConfig}},{\"./modules/expand-pair-trait\":12,\"./modules/loop\":13,\"./modules/rawxml\":14,\"./modules/render\":15,\"./modules/space-preserve\":16}],8:[function(require,module,exports){\"use strict\";var Errors=require(\"./errors\");var DocUtils=require(\"./doc-utils\");function inRange(range,match){return range[0]<=match.offset&&match.offset<range[1]}function updateInTextTag(part,inTextTag){if(part.type===\"tag\"&&part.position===\"start\"&&part.text){if(inTextTag){throw new Error(\"Malformed xml : Already in text tag\")}return true}if(part.type===\"tag\"&&part.position===\"end\"&&part.text){if(!inTextTag){throw new Error(\"Malformed xml : Already not in text tag\")}return false}return inTextTag}function offsetSort(a,b){return a.offset-b.offset}function getTag(tag){var start=1;if(tag[1]===\"/\"){start=2}var index=tag.indexOf(\" \");var end=index===-1?tag.length-1:index;return{tag:tag.slice(start,end),position:start===1?\"start\":\"end\"}}function tagMatcher(content,textMatchArray,othersMatchArray){var cursor=0;var contentLength=content.length;var allMatches=DocUtils.concatArrays([textMatchArray.map(function(tag){return{tag:tag,text:true}}),othersMatchArray.map(function(tag){return{tag:tag,text:false}})]).reduce(function(allMatches,t){allMatches[t.tag]=t.text;return allMatches},{});var totalMatches=[];while(cursor<contentLength){cursor=content.indexOf(\"<\",cursor);if(cursor===-1){break}var offset=cursor;cursor=content.indexOf(\">\",cursor);var tagText=content.slice(offset,cursor+1);var _getTag=getTag(tagText),tag=_getTag.tag,position=_getTag.position;var text=allMatches[tag];if(text==null){continue}totalMatches.push({type:\"tag\",position:position,text:text,offset:offset,value:tagText})}return totalMatches}function throwUnopenedTagException(options){var err=new Errors.XTTemplateError(\"Unopened tag\");err.properties={xtag:options.xtag.split(\" \")[0],id:\"unopened_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function throwUnclosedTagException(options){var err=new Errors.XTTemplateError(\"Unclosed tag\");err.properties={xtag:options.xtag.split(\" \")[0].substr(1),id:\"unclosed_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function assertDelimiterOrdered(delimiterMatches,fullText){var inDelimiter=false;var lastDelimiterMatch={offset:0};var xtag=void 0;delimiterMatches.forEach(function(delimiterMatch){xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(delimiterMatch.position===\"start\"&&inDelimiter||delimiterMatch.position===\"end\"&&!inDelimiter){if(delimiterMatch.position===\"start\"){throwUnclosedTagException({xtag:xtag})}else{throwUnopenedTagException({xtag:xtag})}}inDelimiter=!inDelimiter;lastDelimiterMatch=delimiterMatch});var delimiterMatch={offset:fullText.length};xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(inDelimiter){throwUnclosedTagException({xtag:xtag})}}function getAllIndexes(arr,val,position){var indexes=[];var offset=-1;do{offset=arr.indexOf(val,offset+1);if(offset!==-1){indexes.push({offset:offset,position:position})}}while(offset!==-1);return indexes}function Reader(innerContentParts){var _this=this;this.innerContentParts=innerContentParts;this.full=\"\";this.parseDelimiters=function(delimiters){_this.full=_this.innerContentParts.join(\"\");var offset=0;_this.ranges=_this.innerContentParts.map(function(part){offset+=part.length;return offset-part.length});var delimiterMatches=DocUtils.concatArrays([getAllIndexes(_this.full,delimiters.start,\"start\"),getAllIndexes(_this.full,delimiters.end,\"end\")]).sort(offsetSort);assertDelimiterOrdered(delimiterMatches,_this.full);var delimiterLength={start:delimiters.start.length,end:delimiters.end.length};var cutNext=0;var delimiterIndex=0;_this.parsed=_this.ranges.map(function(offset,i){var range=[offset,offset+this.innerContentParts[i].length];var partContent=this.innerContentParts[i];var delimitersInOffset=[];while(delimiterIndex<delimiterMatches.length&&inRange(range,delimiterMatches[delimiterIndex])){delimitersInOffset.push(delimiterMatches[delimiterIndex]);delimiterIndex++}var parts=[];var cursor=0;if(cutNext>0){cursor=cutNext;cutNext=0}delimitersInOffset.forEach(function(delimiterInOffset){var value=partContent.substr(cursor,delimiterInOffset.offset-offset-cursor);if(value.length>0){parts.push({type:\"content\",value:value})}parts.push({type:\"delimiter\",position:delimiterInOffset.position});cursor=delimiterInOffset.offset-offset+delimiterLength[delimiterInOffset.position]});cutNext=cursor-partContent.length;var value=partContent.substr(cursor);if(value.length>0){parts.push({type:\"content\",value:value})}return parts},_this)}}module.exports={parse:function parse(xmlparsed,delimiters){var inTextTag=false;var innerContentParts=[];xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(inTextTag&&part.type===\"content\"){innerContentParts.push(part.value)}});var reader=new Reader(innerContentParts);reader.parseDelimiters(delimiters);var newArray=[];var index=0;xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(part.type===\"content\"){part.position=inTextTag?\"insidetag\":\"outsidetag\"}if(inTextTag&&part.type===\"content\"){Array.prototype.push.apply(newArray,reader.parsed[index].map(function(p){if(p.type===\"content\"){p.position=\"insidetag\"}return p}));index++}else{newArray.push(part)}});return newArray},xmlparse:function xmlparse(content,xmltags){var matches=tagMatcher(content,xmltags.text,xmltags.other);var cursor=0;var parsed=matches.reduce(function(parsed,match){var value=content.substr(cursor,match.offset-cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}cursor=match.offset+match.value.length;delete match.offset;if(match.value.length>0){parsed.push(match)}return parsed},[]);var value=content.substr(cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}return parsed}}},{\"./doc-utils\":4,\"./errors\":6}],9:[function(require,module,exports){\"use strict\";function memoize(func){var stringifyJson=JSON.stringify,cache={};function cachedfun(){var hash=stringifyJson(arguments);return hash in cache?cache[hash]:cache[hash]=func.apply(this,arguments)}return cachedfun}module.exports=memoize},{}],10:[function(require,module,exports){\"use strict\";function getMinFromArrays(arrays,state){var minIndex=-1;for(var i=0,l=arrays.length;i<l;i++){if(state[i]>=arrays[i].length){continue}if(minIndex===-1||arrays[i][state[i]].offset<arrays[minIndex][state[minIndex]].offset){minIndex=i}}if(minIndex===-1){throw new Error(\"minIndex negative\")}return minIndex}module.exports=function(arrays){var totalLength=arrays.reduce(function(sum,array){return sum+array.length},0);arrays=arrays.filter(function(array){return array.length>0});var resultArray=new Array(totalLength);var state=arrays.map(function(){return 0});var i=0;while(i<=totalLength-1){var arrayIndex=getMinFromArrays(arrays,state);resultArray[i]=arrays[arrayIndex][state[arrayIndex]];state[arrayIndex]++;i++}return resultArray}},{}],11:[function(require,module,exports){\"use strict\";function emptyFun(){}function identity(i){return i}module.exports=function(module){var defaults={set:emptyFun,parse:emptyFun,render:emptyFun,getTraits:emptyFun,optionsTransformer:identity,getRenderedMap:identity,postparse:identity};if(Object.keys(defaults).every(function(key){return!module[key]})){throw new Error(\"This module cannot be wrapped, because it doesn't define any of the necessary functions\")}Object.keys(defaults).forEach(function(key){module[key]=module[key]||defaults[key]});return module}},{}],12:[function(require,module,exports){\"use strict\";var traitName=\"expandPair\";var mergeSort=require(\"../mergesort\");var DocUtils=require(\"../doc-utils\");var wrapper=require(\"../module-wrapper\");var _require=require(\"../traits\"),getExpandToDefault=_require.getExpandToDefault;var Errors=require(\"../errors\");function throwUnmatchedLoopException(options){var location=options.location;var t=location===\"start\"?\"unclosed\":\"unopened\";var T=location===\"start\"?\"Unclosed\":\"Unopened\";var err=new Errors.XTTemplateError(T+\" loop\");var tag=options.part.value;err.properties={id:t+\"_loop\",explanation:\"The loop with tag \"+tag+\" is \"+t,xtag:tag};throw err}function throwClosingTagNotMatchOpeningTag(options){var tags=options.tags;var err=new Errors.XTTemplateError(\"Closing tag does not match opening tag\");err.properties={id:\"closing_tag_does_not_match_opening_tag\",explanation:'The tag \"'+tags[0].value+'\" is closed by the tag \"'+tags[1].value+'\"',openingtag:tags[0].value,closingtag:tags[1].value};throw err}function getOpenCountChange(part){switch(part.location){case\"start\":return 1;case\"end\":return-1;default:throw new Error(\"Location should be one of 'start' or 'end' (given : \"+part.location+\")\")}}function getPairs(traits){if(traits.length===0){return[]}var countOpen=1;var firstTrait=traits[0];for(var i=1;i<traits.length;i++){var currentTrait=traits[i];countOpen+=getOpenCountChange(currentTrait.part);if(countOpen===0){if(currentTrait.part.value!==firstTrait.part.value&&currentTrait.part.value!==\"\"){throwClosingTagNotMatchOpeningTag({tags:[firstTrait.part,currentTrait.part]})}var outer=getPairs(traits.slice(i+1));\nreturn[[firstTrait,currentTrait]].concat(outer)}}var part=firstTrait.part;throwUnmatchedLoopException({part:part,location:part.location})}var expandPairTrait={name:\"ExpandPairTrait\",postparse:function postparse(parsed,_ref){var getTraits=_ref.getTraits,_postparse=_ref.postparse;var traits=getTraits(traitName,parsed);traits=traits.map(function(trait){return trait||[]});traits=mergeSort(traits);var pairs=getPairs(traits);var expandedPairs=pairs.map(function(pair){var expandTo=pair[0].part.expandTo;if(expandTo===\"auto\"){expandTo=getExpandToDefault(parsed.slice(pair[0].offset,pair[1].offset))}if(!expandTo){return[pair[0].offset,pair[1].offset]}var left=DocUtils.getLeft(parsed,expandTo,pair[0].offset);var right=DocUtils.getRight(parsed,expandTo,pair[1].offset);return[left,right]});var currentPairIndex=0;var innerParts=void 0;return parsed.reduce(function(newParsed,part,i){var inPair=currentPairIndex<pairs.length&&expandedPairs[currentPairIndex][0]<=i;var pair=pairs[currentPairIndex];var expandedPair=expandedPairs[currentPairIndex];if(!inPair){newParsed.push(part);return newParsed}if(expandedPair[0]===i){innerParts=[]}if(pair[0].offset!==i&&pair[1].offset!==i){innerParts.push(part)}if(expandedPair[1]===i){var basePart=parsed[pair[0].offset];delete basePart.location;delete basePart.expandTo;basePart.subparsed=_postparse(innerParts);newParsed.push(basePart);currentPairIndex++}return newParsed},[])}};module.exports=function(){return wrapper(expandPairTrait)}},{\"../doc-utils\":4,\"../errors\":6,\"../mergesort\":10,\"../module-wrapper\":11,\"../traits\":20}],13:[function(require,module,exports){\"use strict\";var DocUtils=require(\"../doc-utils\");var dashInnerRegex=/^-([^\\s]+)\\s(.+)$/;var wrapper=require(\"../module-wrapper\");var moduleName=\"loop\";var loopModule={name:\"LoopModule\",parse:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent[0]===\"#\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:false}}if(placeHolderContent[0]===\"^\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:true}}if(placeHolderContent[0]===\"/\"){return{type:type,value:placeHolderContent.substr(1),module:module,location:\"end\"}}if(placeHolderContent[0]===\"-\"){var value=placeHolderContent.replace(dashInnerRegex,\"$2\");var expandTo=placeHolderContent.replace(dashInnerRegex,\"$1\");return{type:type,value:value,expandTo:expandTo,module:module,location:\"start\",inverted:false}}return null},getTraits:function getTraits(traitName,parsed){if(traitName!==\"expandPair\"){return}return parsed.reduce(function(tags,part,offset){if(part.type===\"placeholder\"&&part.module===moduleName){tags.push({part:part,offset:offset})}return tags},[])},render:function render(part,options){if(!part.type===\"placeholder\"||part.module!==moduleName){return null}var totalValue=[];function loopOver(scope){var scopeManager=options.scopeManager.createSubScopeManager(scope,part.value);totalValue.push(options.render(DocUtils.mergeObjects({},options,{compiled:part.subparsed,tags:{},scopeManager:scopeManager})))}options.scopeManager.loopOver(part.value,loopOver,part.inverted);return{value:totalValue.join(\"\")}}};module.exports=function(){return wrapper(loopModule)}},{\"../doc-utils\":4,\"../module-wrapper\":11}],14:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"../doc-utils\");var Errors=require(\"../errors\");var moduleName=\"rawxml\";var wrapper=require(\"../module-wrapper\");function throwRawTagShouldBeOnlyTextInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag should be the only text in paragraph\");var tag=options.part.value;err.properties={id:\"raw_xml_tag_should_be_only_text_in_paragraph\",explanation:\"The tag \"+tag,xtag:options.part.value,paragraphParts:options.paragraphParts};throw err}function getInner(_ref){var part=_ref.part,left=_ref.left,right=_ref.right,postparsed=_ref.postparsed,index=_ref.index;var paragraphParts=postparsed.slice(left+1,right);paragraphParts.forEach(function(p,i){if(i===index-left-1){return}if(p.type===\"placeholder\"||p.type===\"content\"&&p.position===\"insidetag\"){throwRawTagShouldBeOnlyTextInParagraph({paragraphParts:paragraphParts,part:part})}});return part}var RawXmlModule=function(){function RawXmlModule(){_classCallCheck(this,RawXmlModule);this.name=\"RawXmlModule\"}_createClass(RawXmlModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){this.fileTypeConfig=docxtemplater.fileTypeConfig;return options}},{key:\"parse\",value:function parse(placeHolderContent){var type=\"placeholder\";if(placeHolderContent[0]!==\"@\"){return null}return{type:type,value:placeHolderContent.substr(1),module:moduleName}}},{key:\"postparse\",value:function postparse(parsed){return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:this.fileTypeConfig.tagRawXml})}},{key:\"render\",value:function render(part,options){if(part.module!==moduleName){return null}var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return{value:value}}}]);return RawXmlModule}();module.exports=function(){return wrapper(new RawXmlModule)}},{\"../doc-utils\":4,\"../errors\":6,\"../module-wrapper\":11}],15:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var wrapper=require(\"../module-wrapper\");var Render=function(){function Render(){_classCallCheck(this,Render);this.name=\"Render\"}_createClass(Render,[{key:\"set\",value:function set(obj){if(obj.compiled){this.compiled=obj.compiled}if(obj.data!=null){this.data=obj.data}}},{key:\"getRenderedMap\",value:function getRenderedMap(mapper){var _this=this;return Object.keys(this.compiled).reduce(function(mapper,from){mapper[from]={from:from,data:_this.data};return mapper},mapper)}}]);return Render}();module.exports=function(){return wrapper(new Render)}},{\"../module-wrapper\":11}],16:[function(require,module,exports){\"use strict\";var wrapper=require(\"../module-wrapper\");var spacePreserve={name:\"SpacePreserveModule\",postparse:function postparse(parsed){var chunk=[];var inChunk=false;var result=parsed.reduce(function(parsed,part){if(part.type===\"tag\"&&part.position===\"start\"&&part.text&&part.value===\"<w:t>\"){inChunk=true}if(inChunk){if(part.type===\"placeholder\"&&!part.module){chunk[0].value='<w:t xml:space=\"preserve\">'}chunk.push(part)}else{parsed.push(part)}if(part.type===\"tag\"&&part.position===\"end\"&&part.text&&part.value===\"</w:t>\"){Array.prototype.push.apply(parsed,chunk);inChunk=false;chunk=[]}return parsed},[]);Array.prototype.push.apply(result,chunk);return result}};module.exports=function(){return wrapper(spacePreserve)}},{\"../module-wrapper\":11}],17:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var parser={postparse:function postparse(parsed,modules){function getTraits(traitName,parsed){return modules.map(function(module){return module.getTraits(traitName,parsed)})}function postparse(parsed){return modules.reduce(function(parsed,module){return module.postparse(parsed,{postparse:postparse,getTraits:getTraits})},parsed)}return postparse(parsed)},parse:function parse(lexed,modules){function moduleParse(placeHolderContent,parsed){var moduleParsed=void 0;for(var i=0,l=modules.length;i<l;i++){var _module=modules[i];moduleParsed=_module.parse(placeHolderContent);if(moduleParsed){parsed.push(moduleParsed);return moduleParsed}}return null}var inPlaceHolder=false;var placeHolderContent=void 0;var tailParts=[];return lexed.reduce(function(parsed,token){if(token.type===\"delimiter\"){inPlaceHolder=token.position===\"start\";if(token.position===\"end\"){placeHolderContent=DocUtils.wordToUtf8(placeHolderContent);if(!moduleParse(placeHolderContent,parsed)){parsed.push({type:\"placeholder\",value:placeHolderContent})}Array.prototype.push.apply(parsed,tailParts);tailParts=[];return parsed}placeHolderContent=\"\";return parsed}if(inPlaceHolder){if(token.type===\"content\"&&token.position===\"insidetag\"){placeHolderContent+=token.value}else{tailParts.push(token)}return parsed}parsed.push(token);return parsed},[])}};module.exports=parser},{\"./doc-utils\":4}],18:[function(require,module,exports){\"use strict\";var ScopeManager=require(\"./scope-manager\");var DocUtils=require(\"./doc-utils\");function moduleRender(part,options){var moduleRendered=void 0;for(var i=0,l=options.modules.length;i<l;i++){var _module=options.modules[i];moduleRendered=_module.render(part,options);if(moduleRendered){return moduleRendered}}return false}function render(options){options.render=render;options.modules=options.modules;if(!options.scopeManager){options.scopeManager=ScopeManager.createBaseScopeManager(options)}return options.compiled.map(function(part){var moduleRendered=moduleRender(part,options);if(moduleRendered){return moduleRendered.value}if(part.type===\"placeholder\"){var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return DocUtils.utf8ToWord(value)}if(part.type===\"content\"||part.type===\"tag\"){return part.value}throw new Error('Unimplemented tag type \"'+part.type+'\"')}).join(\"\")}module.exports=render},{\"./doc-utils\":4,\"./scope-manager\":19}],19:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var Errors=require(\"./errors\");var ScopeManager=function(){function ScopeManager(options){_classCallCheck(this,ScopeManager);this.scopePath=options.scopePath;this.scopeList=options.scopeList;this.parser=options.parser}_createClass(ScopeManager,[{key:\"loopOver\",value:function loopOver(tag,callback,inverted){inverted=inverted||false;return this.loopOverValue(this.getValue(tag),callback,inverted)}},{key:\"functorIfInverted\",value:function functorIfInverted(inverted,functor,value){if(inverted){functor(value)}}},{key:\"isValueFalsy\",value:function isValueFalsy(value,type){return value==null||!value||type===\"[object Array]\"&&value.length===0}},{key:\"loopOverValue\",value:function loopOverValue(value,functor,inverted){var type=Object.prototype.toString.call(value);var currentValue=this.scopeList[this.num];if(this.isValueFalsy(value,type)){return this.functorIfInverted(inverted,functor,currentValue)}if(type===\"[object Array]\"){for(var i=0,scope;i<value.length;i++){scope=value[i];this.functorIfInverted(!inverted,functor,scope)}return}if(type===\"[object Object]\"){return this.functorIfInverted(!inverted,functor,value)}if(value===true){return this.functorIfInverted(!inverted,functor,currentValue)}}},{key:\"getValue\",value:function getValue(tag,num){this.num=num==null?this.scopeList.length-1:num;var err=void 0;var parser=void 0;var result=void 0;var scope=this.scopeList[this.num];try{parser=this.parser(tag)}catch(error){err=new Errors.XTScopeParserError(\"Scope parser compilation failed\");err.properties={id:\"scopeparser_compilation_failed\",tag:tag,explanation:\"The scope parser for the tag \"+tag+\" failed to compile\",rootError:error};throw err}try{result=parser.get(scope,{num:this.num,scopeList:this.scopeList})}catch(error){err=new Errors.XTScopeParserError(\"Scope parser execution failed\");err.properties={id:\"scopeparser_execution_failed\",explanation:\"The scope parser for the tag \"+tag+\" failed to execute\",scope:scope,tag:tag,rootError:error};throw err}if(result==null&&this.num>0){return this.getValue(tag,this.num-1)}return result}},{key:\"createSubScopeManager\",value:function createSubScopeManager(scope,tag){var options={scopePath:this.scopePath.slice(0),scopeList:this.scopeList.slice(0)};options.parser=this.parser;options.scopeList=this.scopeList.concat(scope);options.scopePath=this.scopePath.concat(tag);return new ScopeManager(options)}}]);return ScopeManager}();ScopeManager.createBaseScopeManager=function(_ref){var parser=_ref.parser,tags=_ref.tags;var options={parser:parser,tags:tags};options.scopePath=[];options.scopeList=[tags];return new ScopeManager(options)};module.exports=ScopeManager},{\"./errors\":6}],20:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var Errors=require(\"./errors\");function throwRawTagNotInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag not in paragraph\");var tag=options.part.value;err.properties={id:\"raw_tag_outerxml_invalid\",explanation:'The tag \"'+tag+'\"',rootError:options.rootError,xtag:tag};throw err}function lastTagIsOpenTag(array,tag){if(array.length===0){return false}var lastTag=array[array.length-1];var innerLastTag=lastTag.tag.substr(1);var innerCurrentTag=tag.substr(2,tag.length-3);return innerLastTag.indexOf(innerCurrentTag)===0}function addTag(array,tag){array.push({tag:tag});return array}function getListXmlElements(parts){var tags=parts.filter(function(part){return part.type===\"tag\"}).map(function(part){return part.value});var result=[];for(var i=0,tag;i<tags.length;i++){tag=tags[i];if(tag[1]===\"/\"){if(lastTagIsOpenTag(result,tag)){result.pop()}else{result=addTag(result,tag)}}else if(tag[tag.length-1]!==\"/\"){result=addTag(result,tag)}}return result}function getExpandToDefault(parts){var xmlElements=getListXmlElements(parts);for(var i=0;i<xmlElements.length;i++){var xmlElement=xmlElements[i];if(xmlElement.tag.indexOf(\"<w:tc\")===0){return\"w:tr\"}}return false}function expandOne(part,postparsed,options){var expandTo=part.expandTo||options.expandTo;var index=postparsed.indexOf(part);if(!expandTo){return postparsed}var right=void 0,left=void 0;try{right=DocUtils.getRight(postparsed,expandTo,index);left=DocUtils.getLeft(postparsed,expandTo,index)}catch(rootError){throwRawTagNotInParagraph({part:part,rootError:rootError})}var leftParts=postparsed.slice(left,index);var rightParts=postparsed.slice(index+1,right+1);var inner=options.getInner({index:index,part:part,leftParts:leftParts,rightParts:rightParts,left:left,right:right,postparsed:postparsed});var type=Object.prototype.toString.call(inner);if(type===\"[object Array]\"){inner=DocUtils.concatArrays(inner)}return DocUtils.concatArrays([postparsed.slice(0,left),[inner],postparsed.slice(right+1)])}function expandToOne(postparsed,options){var expandToElements=postparsed.reduce(function(elements,part){if(part.type===\"placeholder\"&&part.module===options.moduleName){elements.push(part)}return elements},[]);expandToElements.forEach(function(part){postparsed=expandOne(part,postparsed,options)});return postparsed}module.exports={expandToOne:expandToOne,getExpandToDefault:getExpandToDefault}},{\"./doc-utils\":4,\"./errors\":6}],21:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var memoize=require(\"./memoize\");function handleRecursiveCase(res){function replacerUnshift(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.shift();var match=pn.array[0]+pn.array[1];pn.array.unshift(match);pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.first=true;res.matches.unshift(pn);res.charactersAdded.unshift(0);return res.charactersAddedCumulative.unshift(0)}if(res.content.indexOf(\"<\")===-1&&res.content.indexOf(\">\")===-1){res.content.replace(/^()([^<>]*)$/,replacerUnshift)}var r=new RegExp(\"^()([^<]+)</(?:\"+res.tagsXmlArrayJoined+\")>\");res.content.replace(r,replacerUnshift);function replacerPush(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.last=true;res.matches.push(pn);res.charactersAdded.push(0);return res.charactersAddedCumulative.push(0)}r=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^>]+)$\");res.content.replace(r,replacerPush);return res}function xmlMatcher(content,tagsXmlArray){var res={};res.content=content;res.tagsXmlArray=tagsXmlArray;res.tagsXmlArrayJoined=res.tagsXmlArray.join(\"|\");var regexp=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^<>]*)</(?:\"+res.tagsXmlArrayJoined+\")>\",\"g\");res.matches=DocUtils.pregMatchAll(regexp,res.content);res.charactersAddedCumulative=res.matches.map(function(){return 0});res.charactersAdded=res.matches.map(function(){return 0});return handleRecursiveCase(res)}var memoized=memoize(xmlMatcher);module.exports=function(content,tagsXmlArray){return DocUtils.cloneDeep(memoized(content,tagsXmlArray))}},{\"./doc-utils\":4,\"./memoize\":9}],22:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var ScopeManager=require(\"./scope-manager\");var xmlMatcher=require(\"./xml-matcher\");var Errors=require(\"./errors\");var Lexer=require(\"./lexer\");var Parser=require(\"./parser.js\");var _render=require(\"./render.js\");function _getFullText(content,tagsXmlArray){var matcher=xmlMatcher(content,tagsXmlArray);var result=matcher.matches.map(function(match){return match.array[2]});return DocUtils.wordToUtf8(DocUtils.convertSpaces(result.join(\"\")))}module.exports=function(){function XmlTemplater(content,options){_classCallCheck(this,XmlTemplater);this.fromJson(options);this.setModules({inspect:{filePath:this.filePath}});this.load(content)}_createClass(XmlTemplater,[{key:\"load\",value:function load(content){if(typeof content!==\"string\"){var err=new Errors.XTInternalError(\"Content must be a string\");err.properties.id=\"xmltemplater_content_must_be_string\";throw err}this.content=content}},{key:\"setTags\",value:function setTags(tags){this.tags=tags!=null?tags:{};this.scopeManager=ScopeManager.createBaseScopeManager({tags:this.tags,parser:this.parser});return this}},{key:\"fromJson\",value:function fromJson(options){this.filePath=options.filePath;this.modules=options.modules;this.fileTypeConfig=options.fileTypeConfig;Object.keys(DocUtils.defaults).map(function(key){this[key]=options[key]!=null?options[key]:DocUtils.defaults[key]},this)}},{key:\"getFullText\",value:function getFullText(){return _getFullText(this.content,this.fileTypeConfig.tagsXmlTextArray)}},{key:\"setModules\",value:function setModules(obj){this.modules.forEach(function(module){module.set(obj)})}},{key:\"parse\",value:function parse(){this.xmllexed=Lexer.xmlparse(this.content,{text:this.fileTypeConfig.tagsXmlTextArray,other:this.fileTypeConfig.tagsXmlLexedArray});this.setModules({inspect:{xmllexed:this.xmllexed}});this.lexed=Lexer.parse(this.xmllexed,this.delimiters);this.setModules({inspect:{lexed:this.lexed}});this.parsed=Parser.parse(this.lexed,this.modules);this.setModules({inspect:{parsed:this.parsed}});this.postparsed=Parser.postparse(this.parsed,this.modules);return this}},{key:\"render\",value:function render(){this.setModules({inspect:{postparsed:this.postparsed}});this.content=_render({compiled:this.postparsed,tags:this.tags,modules:this.modules,parser:this.parser,nullGetter:this.nullGetter,filePath:this.filePath});this.setModules({inspect:{content:this.content}});return this}}]);return XmlTemplater}()},{\"./doc-utils\":4,\"./errors\":6,\"./lexer\":8,\"./parser.js\":17,\"./render.js\":18,\"./scope-manager\":19,\"./xml-matcher\":21}],23:[function(require,module,exports){function DOMParser(options){this.options=options||{locator:{}}}DOMParser.prototype.parseFromString=function(source,mimeType){var options=this.options;var sax=new XMLReader;var domBuilder=options.domBuilder||new DOMHandler;var errorHandler=options.errorHandler;var locator=options.locator;var defaultNSMap=options.xmlns||{};var entityMap={lt:\"<\",gt:\">\",amp:\"&\",quot:'\"',apos:\"'\"};if(locator){domBuilder.setDocumentLocator(locator)}sax.errorHandler=buildErrorHandler(errorHandler,domBuilder,locator);sax.domBuilder=options.domBuilder||domBuilder;if(/\\/x?html?$/.test(mimeType)){entityMap.nbsp=\" \";entityMap.copy=\"©\";defaultNSMap[\"\"]=\"http://www.w3.org/1999/xhtml\"}defaultNSMap.xml=defaultNSMap.xml||\"http://www.w3.org/XML/1998/namespace\";if(source){sax.parse(source,defaultNSMap,entityMap)}else{sax.errorHandler.error(\"invalid doc source\")}return domBuilder.doc};function buildErrorHandler(errorImpl,domBuilder,locator){if(!errorImpl){if(domBuilder instanceof DOMHandler){return domBuilder}errorImpl=domBuilder}var errorHandler={};var isCallback=errorImpl instanceof Function;locator=locator||{};function build(key){var fn=errorImpl[key];if(!fn&&isCallback){fn=errorImpl.length==2?function(msg){errorImpl(key,msg)}:errorImpl}errorHandler[key]=fn&&function(msg){fn(\"[xmldom \"+key+\"]\\t\"+msg+_locator(locator))}||function(){}}build(\"warning\");build(\"error\");build(\"fatalError\");return errorHandler}function DOMHandler(){this.cdata=false}function position(locator,node){node.lineNumber=locator.lineNumber;node.columnNumber=locator.columnNumber}DOMHandler.prototype={startDocument:function(){this.doc=(new DOMImplementation).createDocument(null,null,null);if(this.locator){this.doc.documentURI=this.locator.systemId}},startElement:function(namespaceURI,localName,qName,attrs){var doc=this.doc;var el=doc.createElementNS(namespaceURI,qName||localName);var len=attrs.length;appendElement(this,el);this.currentElement=el;this.locator&&position(this.locator,el);for(var i=0;i<len;i++){var namespaceURI=attrs.getURI(i);var value=attrs.getValue(i);var qName=attrs.getQName(i);var attr=doc.createAttributeNS(namespaceURI,qName);this.locator&&position(attrs.getLocator(i),attr);attr.value=attr.nodeValue=value;el.setAttributeNode(attr)}},endElement:function(namespaceURI,localName,qName){var current=this.currentElement;var tagName=current.tagName;this.currentElement=current.parentNode},startPrefixMapping:function(prefix,uri){},endPrefixMapping:function(prefix){},processingInstruction:function(target,data){var ins=this.doc.createProcessingInstruction(target,data);this.locator&&position(this.locator,ins);appendElement(this,ins)},ignorableWhitespace:function(ch,start,length){},characters:function(chars,start,length){chars=_toString.apply(this,arguments);if(chars){if(this.cdata){var charNode=this.doc.createCDATASection(chars)}else{var charNode=this.doc.createTextNode(chars)}if(this.currentElement){this.currentElement.appendChild(charNode)}else if(/^\\s*$/.test(chars)){this.doc.appendChild(charNode)}this.locator&&position(this.locator,charNode)}},skippedEntity:function(name){},endDocument:function(){this.doc.normalize()},setDocumentLocator:function(locator){if(this.locator=locator){locator.lineNumber=0}},comment:function(chars,start,length){chars=_toString.apply(this,arguments);var comm=this.doc.createComment(chars);this.locator&&position(this.locator,comm);appendElement(this,comm)},startCDATA:function(){this.cdata=true},endCDATA:function(){this.cdata=false},startDTD:function(name,publicId,systemId){var impl=this.doc.implementation;if(impl&&impl.createDocumentType){var dt=impl.createDocumentType(name,publicId,systemId);this.locator&&position(this.locator,dt);appendElement(this,dt)}},warning:function(error){console.warn(\"[xmldom warning]\\t\"+error,_locator(this.locator))},error:function(error){console.error(\"[xmldom error]\\t\"+error,_locator(this.locator))},fatalError:function(error){console.error(\"[xmldom fatalError]\\t\"+error,_locator(this.locator));throw error}};function _locator(l){if(l){return\"\\n@\"+(l.systemId||\"\")+\"#[line:\"+l.lineNumber+\",col:\"+l.columnNumber+\"]\"}}function _toString(chars,start,length){if(typeof chars==\"string\"){return chars.substr(start,length)}else{if(chars.length>=start+length||start){return new java.lang.String(chars,start,length)+\"\"}return chars}}\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){DOMHandler.prototype[key]=function(){return null}});function appendElement(hander,node){if(!hander.currentElement){hander.doc.appendChild(node)}else{hander.currentElement.appendChild(node)}}var XMLReader=require(\"./sax\").XMLReader;var DOMImplementation=exports.DOMImplementation=require(\"./dom\").DOMImplementation;exports.XMLSerializer=require(\"./dom\").XMLSerializer;exports.DOMParser=DOMParser},{\"./dom\":24,\"./sax\":25}],24:[function(require,module,exports){function copy(src,dest){for(var p in src){dest[p]=src[p]}}function _extends(Class,Super){var pt=Class.prototype;if(Object.create){var ppt=Object.create(Super.prototype);pt.__proto__=ppt}if(!(pt instanceof Super)){function t(){}t.prototype=Super.prototype;t=new t;copy(pt,t);Class.prototype=pt=t}if(pt.constructor!=Class){if(typeof Class!=\"function\"){console.error(\"unknow Class:\"+Class)}pt.constructor=Class}}var htmlns=\"http://www.w3.org/1999/xhtml\";var NodeType={};var ELEMENT_NODE=NodeType.ELEMENT_NODE=1;var ATTRIBUTE_NODE=NodeType.ATTRIBUTE_NODE=2;var TEXT_NODE=NodeType.TEXT_NODE=3;var CDATA_SECTION_NODE=NodeType.CDATA_SECTION_NODE=4;var ENTITY_REFERENCE_NODE=NodeType.ENTITY_REFERENCE_NODE=5;var ENTITY_NODE=NodeType.ENTITY_NODE=6;var PROCESSING_INSTRUCTION_NODE=NodeType.PROCESSING_INSTRUCTION_NODE=7;var COMMENT_NODE=NodeType.COMMENT_NODE=8;var DOCUMENT_NODE=NodeType.DOCUMENT_NODE=9;var DOCUMENT_TYPE_NODE=NodeType.DOCUMENT_TYPE_NODE=10;var DOCUMENT_FRAGMENT_NODE=NodeType.DOCUMENT_FRAGMENT_NODE=11;var NOTATION_NODE=NodeType.NOTATION_NODE=12;var ExceptionCode={};var ExceptionMessage={};var INDEX_SIZE_ERR=ExceptionCode.INDEX_SIZE_ERR=(ExceptionMessage[1]=\"Index size error\",1);var DOMSTRING_SIZE_ERR=ExceptionCode.DOMSTRING_SIZE_ERR=(ExceptionMessage[2]=\"DOMString size error\",2);var HIERARCHY_REQUEST_ERR=ExceptionCode.HIERARCHY_REQUEST_ERR=(ExceptionMessage[3]=\"Hierarchy request error\",3);var WRONG_DOCUMENT_ERR=ExceptionCode.WRONG_DOCUMENT_ERR=(ExceptionMessage[4]=\"Wrong document\",4);var INVALID_CHARACTER_ERR=ExceptionCode.INVALID_CHARACTER_ERR=(ExceptionMessage[5]=\"Invalid character\",5);var NO_DATA_ALLOWED_ERR=ExceptionCode.NO_DATA_ALLOWED_ERR=(ExceptionMessage[6]=\"No data allowed\",6);var NO_MODIFICATION_ALLOWED_ERR=ExceptionCode.NO_MODIFICATION_ALLOWED_ERR=(ExceptionMessage[7]=\"No modification allowed\",7);var NOT_FOUND_ERR=ExceptionCode.NOT_FOUND_ERR=(ExceptionMessage[8]=\"Not found\",8);var NOT_SUPPORTED_ERR=ExceptionCode.NOT_SUPPORTED_ERR=(ExceptionMessage[9]=\"Not supported\",9);var INUSE_ATTRIBUTE_ERR=ExceptionCode.INUSE_ATTRIBUTE_ERR=(ExceptionMessage[10]=\"Attribute in use\",10);var INVALID_STATE_ERR=ExceptionCode.INVALID_STATE_ERR=(ExceptionMessage[11]=\"Invalid state\",11);var SYNTAX_ERR=ExceptionCode.SYNTAX_ERR=(ExceptionMessage[12]=\"Syntax error\",12);var INVALID_MODIFICATION_ERR=ExceptionCode.INVALID_MODIFICATION_ERR=(ExceptionMessage[13]=\"Invalid modification\",13);var NAMESPACE_ERR=ExceptionCode.NAMESPACE_ERR=(ExceptionMessage[14]=\"Invalid namespace\",14);var INVALID_ACCESS_ERR=ExceptionCode.INVALID_ACCESS_ERR=(ExceptionMessage[15]=\"Invalid access\",15);function DOMException(code,message){if(message instanceof Error){var error=message}else{error=this;Error.call(this,ExceptionMessage[code]);this.message=ExceptionMessage[code];if(Error.captureStackTrace)Error.captureStackTrace(this,DOMException)}error.code=code;if(message)this.message=this.message+\": \"+message;return error}DOMException.prototype=Error.prototype;copy(ExceptionCode,DOMException);function NodeList(){}NodeList.prototype={length:0,item:function(index){return this[index]||null},toString:function(isHTML,nodeFilter){for(var buf=[],i=0;i<this.length;i++){serializeToString(this[i],buf,isHTML,nodeFilter)}return buf.join(\"\")}};function LiveNodeList(node,refresh){this._node=node;this._refresh=refresh;_updateLiveList(this)}function _updateLiveList(list){var inc=list._node._inc||list._node.ownerDocument._inc;if(list._inc!=inc){var ls=list._refresh(list._node);__set__(list,\"length\",ls.length);copy(ls,list);list._inc=inc}}LiveNodeList.prototype.item=function(i){_updateLiveList(this);return this[i]};_extends(LiveNodeList,NodeList);function NamedNodeMap(){}function _findNodeIndex(list,node){var i=list.length;while(i--){if(list[i]===node){return i}}}function _addNamedNode(el,list,newAttr,oldAttr){if(oldAttr){list[_findNodeIndex(list,oldAttr)]=newAttr}else{list[list.length++]=newAttr}if(el){newAttr.ownerElement=el;var doc=el.ownerDocument;if(doc){oldAttr&&_onRemoveAttribute(doc,el,oldAttr);_onAddAttribute(doc,el,newAttr)}}}function _removeNamedNode(el,list,attr){var i=_findNodeIndex(list,attr);if(i>=0){var lastIndex=list.length-1;while(i<lastIndex){list[i]=list[++i]}list.length=lastIndex;if(el){var doc=el.ownerDocument;if(doc){_onRemoveAttribute(doc,el,attr);attr.ownerElement=null}}}else{throw DOMException(NOT_FOUND_ERR,new Error(el.tagName+\"@\"+attr))}}NamedNodeMap.prototype={length:0,item:NodeList.prototype.item,getNamedItem:function(key){var i=this.length;while(i--){var attr=this[i];if(attr.nodeName==key){return attr}}},setNamedItem:function(attr){var el=attr.ownerElement;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}var oldAttr=this.getNamedItem(attr.nodeName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},setNamedItemNS:function(attr){var el=attr.ownerElement,oldAttr;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}oldAttr=this.getNamedItemNS(attr.namespaceURI,attr.localName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},removeNamedItem:function(key){var attr=this.getNamedItem(key);_removeNamedNode(this._ownerElement,this,attr);return attr},removeNamedItemNS:function(namespaceURI,localName){var attr=this.getNamedItemNS(namespaceURI,localName);_removeNamedNode(this._ownerElement,this,attr);return attr},getNamedItemNS:function(namespaceURI,localName){var i=this.length;while(i--){var node=this[i];if(node.localName==localName&&node.namespaceURI==namespaceURI){return node}}return null}};function DOMImplementation(features){this._features={};if(features){for(var feature in features){this._features=features[feature]}}}DOMImplementation.prototype={hasFeature:function(feature,version){var versions=this._features[feature.toLowerCase()];if(versions&&(!version||version in versions)){\nreturn true}else{return false}},createDocument:function(namespaceURI,qualifiedName,doctype){var doc=new Document;doc.implementation=this;doc.childNodes=new NodeList;doc.doctype=doctype;if(doctype){doc.appendChild(doctype)}if(qualifiedName){var root=doc.createElementNS(namespaceURI,qualifiedName);doc.appendChild(root)}return doc},createDocumentType:function(qualifiedName,publicId,systemId){var node=new DocumentType;node.name=qualifiedName;node.nodeName=qualifiedName;node.publicId=publicId;node.systemId=systemId;return node}};function Node(){}Node.prototype={firstChild:null,lastChild:null,previousSibling:null,nextSibling:null,attributes:null,parentNode:null,childNodes:null,ownerDocument:null,nodeValue:null,namespaceURI:null,prefix:null,localName:null,insertBefore:function(newChild,refChild){return _insertBefore(this,newChild,refChild)},replaceChild:function(newChild,oldChild){this.insertBefore(newChild,oldChild);if(oldChild){this.removeChild(oldChild)}},removeChild:function(oldChild){return _removeChild(this,oldChild)},appendChild:function(newChild){return this.insertBefore(newChild,null)},hasChildNodes:function(){return this.firstChild!=null},cloneNode:function(deep){return cloneNode(this.ownerDocument||this,this,deep)},normalize:function(){var child=this.firstChild;while(child){var next=child.nextSibling;if(next&&next.nodeType==TEXT_NODE&&child.nodeType==TEXT_NODE){this.removeChild(next);child.appendData(next.data)}else{child.normalize();child=next}}},isSupported:function(feature,version){return this.ownerDocument.implementation.hasFeature(feature,version)},hasAttributes:function(){return this.attributes.length>0},lookupPrefix:function(namespaceURI){var el=this;while(el){var map=el._nsMap;if(map){for(var n in map){if(map[n]==namespaceURI){return n}}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},lookupNamespaceURI:function(prefix){var el=this;while(el){var map=el._nsMap;if(map){if(prefix in map){return map[prefix]}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},isDefaultNamespace:function(namespaceURI){var prefix=this.lookupPrefix(namespaceURI);return prefix==null}};function _xmlEncoder(c){return c==\"<\"&&\"&lt;\"||c==\">\"&&\"&gt;\"||c==\"&\"&&\"&amp;\"||c=='\"'&&\"&quot;\"||\"&#\"+c.charCodeAt()+\";\"}copy(NodeType,Node);copy(NodeType,Node.prototype);function _visitNode(node,callback){if(callback(node)){return true}if(node=node.firstChild){do{if(_visitNode(node,callback)){return true}}while(node=node.nextSibling)}}function Document(){}function _onAddAttribute(doc,el,newAttr){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){el._nsMap[newAttr.prefix?newAttr.localName:\"\"]=newAttr.value}}function _onRemoveAttribute(doc,el,newAttr,remove){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){delete el._nsMap[newAttr.prefix?newAttr.localName:\"\"]}}function _onUpdateChild(doc,el,newChild){if(doc&&doc._inc){doc._inc++;var cs=el.childNodes;if(newChild){cs[cs.length++]=newChild}else{var child=el.firstChild;var i=0;while(child){cs[i++]=child;child=child.nextSibling}cs.length=i}}}function _removeChild(parentNode,child){var previous=child.previousSibling;var next=child.nextSibling;if(previous){previous.nextSibling=next}else{parentNode.firstChild=next}if(next){next.previousSibling=previous}else{parentNode.lastChild=previous}_onUpdateChild(parentNode.ownerDocument,parentNode);return child}function _insertBefore(parentNode,newChild,nextChild){var cp=newChild.parentNode;if(cp){cp.removeChild(newChild)}if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){var newFirst=newChild.firstChild;if(newFirst==null){return newChild}var newLast=newChild.lastChild}else{newFirst=newLast=newChild}var pre=nextChild?nextChild.previousSibling:parentNode.lastChild;newFirst.previousSibling=pre;newLast.nextSibling=nextChild;if(pre){pre.nextSibling=newFirst}else{parentNode.firstChild=newFirst}if(nextChild==null){parentNode.lastChild=newLast}else{nextChild.previousSibling=newLast}do{newFirst.parentNode=parentNode}while(newFirst!==newLast&&(newFirst=newFirst.nextSibling));_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){newChild.firstChild=newChild.lastChild=null}return newChild}function _appendSingleChild(parentNode,newChild){var cp=newChild.parentNode;if(cp){var pre=parentNode.lastChild;cp.removeChild(newChild);var pre=parentNode.lastChild}var pre=parentNode.lastChild;newChild.parentNode=parentNode;newChild.previousSibling=pre;newChild.nextSibling=null;if(pre){pre.nextSibling=newChild}else{parentNode.firstChild=newChild}parentNode.lastChild=newChild;_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);return newChild}Document.prototype={nodeName:\"#document\",nodeType:DOCUMENT_NODE,doctype:null,documentElement:null,_inc:1,insertBefore:function(newChild,refChild){if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){var child=newChild.firstChild;while(child){var next=child.nextSibling;this.insertBefore(child,refChild);child=next}return newChild}if(this.documentElement==null&&newChild.nodeType==ELEMENT_NODE){this.documentElement=newChild}return _insertBefore(this,newChild,refChild),newChild.ownerDocument=this,newChild},removeChild:function(oldChild){if(this.documentElement==oldChild){this.documentElement=null}return _removeChild(this,oldChild)},importNode:function(importedNode,deep){return importNode(this,importedNode,deep)},getElementById:function(id){var rtv=null;_visitNode(this.documentElement,function(node){if(node.nodeType==ELEMENT_NODE){if(node.getAttribute(\"id\")==id){rtv=node;return true}}});return rtv},createElement:function(tagName){var node=new Element;node.ownerDocument=this;node.nodeName=tagName;node.tagName=tagName;node.childNodes=new NodeList;var attrs=node.attributes=new NamedNodeMap;attrs._ownerElement=node;return node},createDocumentFragment:function(){var node=new DocumentFragment;node.ownerDocument=this;node.childNodes=new NodeList;return node},createTextNode:function(data){var node=new Text;node.ownerDocument=this;node.appendData(data);return node},createComment:function(data){var node=new Comment;node.ownerDocument=this;node.appendData(data);return node},createCDATASection:function(data){var node=new CDATASection;node.ownerDocument=this;node.appendData(data);return node},createProcessingInstruction:function(target,data){var node=new ProcessingInstruction;node.ownerDocument=this;node.tagName=node.target=target;node.nodeValue=node.data=data;return node},createAttribute:function(name){var node=new Attr;node.ownerDocument=this;node.name=name;node.nodeName=name;node.localName=name;node.specified=true;return node},createEntityReference:function(name){var node=new EntityReference;node.ownerDocument=this;node.nodeName=name;return node},createElementNS:function(namespaceURI,qualifiedName){var node=new Element;var pl=qualifiedName.split(\":\");var attrs=node.attributes=new NamedNodeMap;node.childNodes=new NodeList;node.ownerDocument=this;node.nodeName=qualifiedName;node.tagName=qualifiedName;node.namespaceURI=namespaceURI;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}attrs._ownerElement=node;return node},createAttributeNS:function(namespaceURI,qualifiedName){var node=new Attr;var pl=qualifiedName.split(\":\");node.ownerDocument=this;node.nodeName=qualifiedName;node.name=qualifiedName;node.namespaceURI=namespaceURI;node.specified=true;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}return node}};_extends(Document,Node);function Element(){this._nsMap={}}Element.prototype={nodeType:ELEMENT_NODE,hasAttribute:function(name){return this.getAttributeNode(name)!=null},getAttribute:function(name){var attr=this.getAttributeNode(name);return attr&&attr.value||\"\"},getAttributeNode:function(name){return this.attributes.getNamedItem(name)},setAttribute:function(name,value){var attr=this.ownerDocument.createAttribute(name);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},removeAttribute:function(name){var attr=this.getAttributeNode(name);attr&&this.removeAttributeNode(attr)},appendChild:function(newChild){if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){return this.insertBefore(newChild,null)}else{return _appendSingleChild(this,newChild)}},setAttributeNode:function(newAttr){return this.attributes.setNamedItem(newAttr)},setAttributeNodeNS:function(newAttr){return this.attributes.setNamedItemNS(newAttr)},removeAttributeNode:function(oldAttr){return this.attributes.removeNamedItem(oldAttr.nodeName)},removeAttributeNS:function(namespaceURI,localName){var old=this.getAttributeNodeNS(namespaceURI,localName);old&&this.removeAttributeNode(old)},hasAttributeNS:function(namespaceURI,localName){return this.getAttributeNodeNS(namespaceURI,localName)!=null},getAttributeNS:function(namespaceURI,localName){var attr=this.getAttributeNodeNS(namespaceURI,localName);return attr&&attr.value||\"\"},setAttributeNS:function(namespaceURI,qualifiedName,value){var attr=this.ownerDocument.createAttributeNS(namespaceURI,qualifiedName);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},getAttributeNodeNS:function(namespaceURI,localName){return this.attributes.getNamedItemNS(namespaceURI,localName)},getElementsByTagName:function(tagName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType==ELEMENT_NODE&&(tagName===\"*\"||node.tagName==tagName)){ls.push(node)}});return ls})},getElementsByTagNameNS:function(namespaceURI,localName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType===ELEMENT_NODE&&(namespaceURI===\"*\"||node.namespaceURI===namespaceURI)&&(localName===\"*\"||node.localName==localName)){ls.push(node)}});return ls})}};Document.prototype.getElementsByTagName=Element.prototype.getElementsByTagName;Document.prototype.getElementsByTagNameNS=Element.prototype.getElementsByTagNameNS;_extends(Element,Node);function Attr(){}Attr.prototype.nodeType=ATTRIBUTE_NODE;_extends(Attr,Node);function CharacterData(){}CharacterData.prototype={data:\"\",substringData:function(offset,count){return this.data.substring(offset,offset+count)},appendData:function(text){text=this.data+text;this.nodeValue=this.data=text;this.length=text.length},insertData:function(offset,text){this.replaceData(offset,0,text)},appendChild:function(newChild){throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])},deleteData:function(offset,count){this.replaceData(offset,count,\"\")},replaceData:function(offset,count,text){var start=this.data.substring(0,offset);var end=this.data.substring(offset+count);text=start+text+end;this.nodeValue=this.data=text;this.length=text.length}};_extends(CharacterData,Node);function Text(){}Text.prototype={nodeName:\"#text\",nodeType:TEXT_NODE,splitText:function(offset){var text=this.data;var newText=text.substring(offset);text=text.substring(0,offset);this.data=this.nodeValue=text;this.length=text.length;var newNode=this.ownerDocument.createTextNode(newText);if(this.parentNode){this.parentNode.insertBefore(newNode,this.nextSibling)}return newNode}};_extends(Text,CharacterData);function Comment(){}Comment.prototype={nodeName:\"#comment\",nodeType:COMMENT_NODE};_extends(Comment,CharacterData);function CDATASection(){}CDATASection.prototype={nodeName:\"#cdata-section\",nodeType:CDATA_SECTION_NODE};_extends(CDATASection,CharacterData);function DocumentType(){}DocumentType.prototype.nodeType=DOCUMENT_TYPE_NODE;_extends(DocumentType,Node);function Notation(){}Notation.prototype.nodeType=NOTATION_NODE;_extends(Notation,Node);function Entity(){}Entity.prototype.nodeType=ENTITY_NODE;_extends(Entity,Node);function EntityReference(){}EntityReference.prototype.nodeType=ENTITY_REFERENCE_NODE;_extends(EntityReference,Node);function DocumentFragment(){}DocumentFragment.prototype.nodeName=\"#document-fragment\";DocumentFragment.prototype.nodeType=DOCUMENT_FRAGMENT_NODE;_extends(DocumentFragment,Node);function ProcessingInstruction(){}ProcessingInstruction.prototype.nodeType=PROCESSING_INSTRUCTION_NODE;_extends(ProcessingInstruction,Node);function XMLSerializer(){}XMLSerializer.prototype.serializeToString=function(node,isHtml,nodeFilter){return nodeSerializeToString.call(node,isHtml,nodeFilter)};Node.prototype.toString=nodeSerializeToString;function nodeSerializeToString(isHtml,nodeFilter){var buf=[];var refNode=this.nodeType==9?this.documentElement:this;var prefix=refNode.prefix;var uri=refNode.namespaceURI;if(uri&&prefix==null){var prefix=refNode.lookupPrefix(uri);if(prefix==null){var visibleNamespaces=[{namespace:uri,prefix:null}]}}serializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);return buf.join(\"\")}function needNamespaceDefine(node,isHTML,visibleNamespaces){var prefix=node.prefix||\"\";var uri=node.namespaceURI;if(!prefix&&!uri){return false}if(prefix===\"xml\"&&uri===\"http://www.w3.org/XML/1998/namespace\"||uri==\"http://www.w3.org/2000/xmlns/\"){return false}var i=visibleNamespaces.length;while(i--){var ns=visibleNamespaces[i];if(ns.prefix==prefix){return ns.namespace!=uri}}return true}function serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){if(nodeFilter){node=nodeFilter(node);if(node){if(typeof node==\"string\"){buf.push(node);return}}else{return}}switch(node.nodeType){case ELEMENT_NODE:if(!visibleNamespaces)visibleNamespaces=[];var startVisibleNamespaces=visibleNamespaces.length;var attrs=node.attributes;var len=attrs.length;var child=node.firstChild;var nodeName=node.tagName;isHTML=htmlns===node.namespaceURI||isHTML;buf.push(\"<\",nodeName);for(var i=0;i<len;i++){var attr=attrs.item(i);if(attr.prefix==\"xmlns\"){visibleNamespaces.push({prefix:attr.localName,namespace:attr.value})}else if(attr.nodeName==\"xmlns\"){visibleNamespaces.push({prefix:\"\",namespace:attr.value})}}for(var i=0;i<len;i++){var attr=attrs.item(i);if(needNamespaceDefine(attr,isHTML,visibleNamespaces)){var prefix=attr.prefix||\"\";var uri=attr.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}serializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces)}if(needNamespaceDefine(node,isHTML,visibleNamespaces)){var prefix=node.prefix||\"\";var uri=node.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}if(child||isHTML&&!/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){buf.push(\">\");if(isHTML&&/^script$/i.test(nodeName)){while(child){if(child.data){buf.push(child.data)}else{serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces)}child=child.nextSibling}}else{while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}}buf.push(\"</\",nodeName,\">\")}else{buf.push(\"/>\")}return;case DOCUMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var child=node.firstChild;while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}return;case ATTRIBUTE_NODE:return buf.push(\" \",node.name,'=\"',node.value.replace(/[<&\"]/g,_xmlEncoder),'\"');case TEXT_NODE:return buf.push(node.data.replace(/[<&]/g,_xmlEncoder));case CDATA_SECTION_NODE:return buf.push(\"<![CDATA[\",node.data,\"]]>\");case COMMENT_NODE:return buf.push(\"<!--\",node.data,\"-->\");case DOCUMENT_TYPE_NODE:var pubid=node.publicId;var sysid=node.systemId;buf.push(\"<!DOCTYPE \",node.name);if(pubid){buf.push(' PUBLIC \"',pubid);if(sysid&&sysid!=\".\"){buf.push('\" \"',sysid)}buf.push('\">')}else if(sysid&&sysid!=\".\"){buf.push(' SYSTEM \"',sysid,'\">')}else{var sub=node.internalSubset;if(sub){buf.push(\" [\",sub,\"]\")}buf.push(\">\")}return;case PROCESSING_INSTRUCTION_NODE:return buf.push(\"<?\",node.target,\" \",node.data,\"?>\");case ENTITY_REFERENCE_NODE:return buf.push(\"&\",node.nodeName,\";\");default:buf.push(\"??\",node.nodeName)}}function importNode(doc,node,deep){var node2;switch(node.nodeType){case ELEMENT_NODE:node2=node.cloneNode(false);node2.ownerDocument=doc;case DOCUMENT_FRAGMENT_NODE:break;case ATTRIBUTE_NODE:deep=true;break}if(!node2){node2=node.cloneNode(false)}node2.ownerDocument=doc;node2.parentNode=null;if(deep){var child=node.firstChild;while(child){node2.appendChild(importNode(doc,child,deep));child=child.nextSibling}}return node2}function cloneNode(doc,node,deep){var node2=new node.constructor;for(var n in node){var v=node[n];if(typeof v!=\"object\"){if(v!=node2[n]){node2[n]=v}}}if(node.childNodes){node2.childNodes=new NodeList}node2.ownerDocument=doc;switch(node2.nodeType){case ELEMENT_NODE:var attrs=node.attributes;var attrs2=node2.attributes=new NamedNodeMap;var len=attrs.length;attrs2._ownerElement=node2;for(var i=0;i<len;i++){node2.setAttributeNode(cloneNode(doc,attrs.item(i),true))}break;case ATTRIBUTE_NODE:deep=true}if(deep){var child=node.firstChild;while(child){node2.appendChild(cloneNode(doc,child,deep));child=child.nextSibling}}return node2}function __set__(object,key,value){object[key]=value}try{if(Object.defineProperty){Object.defineProperty(LiveNodeList.prototype,\"length\",{get:function(){_updateLiveList(this);return this.$$length}});Object.defineProperty(Node.prototype,\"textContent\",{get:function(){return getTextContent(this)},set:function(data){switch(this.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:while(this.firstChild){this.removeChild(this.firstChild)}if(data||String(data)){this.appendChild(this.ownerDocument.createTextNode(data))}break;default:this.data=data;this.value=data;this.nodeValue=data}}});function getTextContent(node){switch(node.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var buf=[];node=node.firstChild;while(node){if(node.nodeType!==7&&node.nodeType!==8){buf.push(getTextContent(node))}node=node.nextSibling}return buf.join(\"\");default:return node.nodeValue}}__set__=function(object,key,value){object[\"$$\"+key]=value}}}catch(e){}exports.DOMImplementation=DOMImplementation;exports.XMLSerializer=XMLSerializer},{}],25:[function(require,module,exports){var nameStartChar=/[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;var nameChar=new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");var tagNamePattern=new RegExp(\"^\"+nameStartChar.source+nameChar.source+\"*(?::\"+nameStartChar.source+nameChar.source+\"*)?$\");var S_TAG=0;var S_ATTR=1;var S_ATTR_SPACE=2;var S_EQ=3;var S_ATTR_NOQUOT_VALUE=4;var S_ATTR_END=5;var S_TAG_SPACE=6;var S_TAG_CLOSE=7;function XMLReader(){}XMLReader.prototype={parse:function(source,defaultNSMap,entityMap){var domBuilder=this.domBuilder;domBuilder.startDocument();_copy(defaultNSMap,defaultNSMap={});parse(source,defaultNSMap,entityMap,domBuilder,this.errorHandler);domBuilder.endDocument()}};function parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){function fixedFromCharCode(code){if(code>65535){code-=65536;var surrogate1=55296+(code>>10),surrogate2=56320+(code&1023);return String.fromCharCode(surrogate1,surrogate2)}else{return String.fromCharCode(code)}}function entityReplacer(a){var k=a.slice(1,-1);if(k in entityMap){return entityMap[k]}else if(k.charAt(0)===\"#\"){return fixedFromCharCode(parseInt(k.substr(1).replace(\"x\",\"0x\")))}else{errorHandler.error(\"entity not found:\"+a);return a}}function appendText(end){if(end>start){var xt=source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);locator&&position(start);domBuilder.characters(xt,0,end-start);start=end}}function position(p,m){while(p>=lineEnd&&(m=linePattern.exec(source))){lineStart=m.index;lineEnd=lineStart+m[0].length;locator.lineNumber++}locator.columnNumber=p-lineStart+1}var lineStart=0;var lineEnd=0;var linePattern=/.*(?:\\r\\n?|\\n)|.*$/g;var locator=domBuilder.locator;var parseStack=[{currentNSMap:defaultNSMapCopy}];var closeMap={};var start=0;while(true){try{var tagStart=source.indexOf(\"<\",start);if(tagStart<0){if(!source.substr(start).match(/^\\s*$/)){var doc=domBuilder.doc;var text=doc.createTextNode(source.substr(start));doc.appendChild(text);domBuilder.currentElement=text}return}if(tagStart>start){appendText(tagStart)}switch(source.charAt(tagStart+1)){case\"/\":var end=source.indexOf(\">\",tagStart+3);var tagName=source.substring(tagStart+2,end);var config=parseStack.pop();if(end<0){tagName=source.substring(tagStart+2).replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" is not complete:\"+config.tagName);end=tagStart+1+tagName.length}else if(tagName.match(/\\s</)){tagName=tagName.replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" maybe not complete\");end=tagStart+1+tagName.length}var localNSMap=config.localNSMap;var endMatch=config.tagName==tagName;var endIgnoreCaseMach=endMatch||config.tagName&&config.tagName.toLowerCase()==tagName.toLowerCase();if(endIgnoreCaseMach){domBuilder.endElement(config.uri,config.localName,tagName);if(localNSMap){for(var prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}if(!endMatch){errorHandler.fatalError(\"end tag name: \"+tagName+\" is not match the current start tagName:\"+config.tagName)}}else{parseStack.push(config)}end++;break;case\"?\":locator&&position(tagStart);end=parseInstruction(source,tagStart,domBuilder);break;case\"!\":locator&&position(tagStart);end=parseDCC(source,tagStart,domBuilder,errorHandler);break;default:locator&&position(tagStart);var el=new ElementAttributes;var currentNSMap=parseStack[parseStack.length-1].currentNSMap;var end=parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);var len=el.length;if(!el.closed&&fixSelfClosed(source,end,el.tagName,closeMap)){el.closed=true;if(!entityMap.nbsp){errorHandler.warning(\"unclosed xml attribute\")}}if(locator&&len){var locator2=copyLocator(locator,{});for(var i=0;i<len;i++){var a=el[i];position(a.offset);a.locator=copyLocator(locator,{})}domBuilder.locator=locator2;if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}domBuilder.locator=locator}else{if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}}if(el.uri===\"http://www.w3.org/1999/xhtml\"&&!el.closed){end=parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)}else{end++}}}catch(e){errorHandler.error(\"element parse error: \"+e);end=-1}if(end>start){start=end}else{appendText(Math.max(tagStart,start)+1)}}}function copyLocator(f,t){t.lineNumber=f.lineNumber;t.columnNumber=f.columnNumber;return t}function parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){var attrName;var value;var p=++start;var s=S_TAG;while(true){var c=source.charAt(p);switch(c){case\"=\":if(s===S_ATTR){attrName=source.slice(start,p);s=S_EQ}else if(s===S_ATTR_SPACE){s=S_EQ}else{throw new Error(\"attribute equal must after attrName\")}break;case\"'\":case'\"':if(s===S_EQ||s===S_ATTR){if(s===S_ATTR){errorHandler.warning('attribute value must after \"=\"');attrName=source.slice(start,p)}start=p+1;p=source.indexOf(c,start);if(p>0){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start-1);s=S_ATTR_END}else{throw new Error(\"attribute value no end '\"+c+\"' match\")}}else if(s==S_ATTR_NOQUOT_VALUE){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start);errorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+\")!!\");start=p+1;s=S_ATTR_END}else{throw new Error('attribute value must after \"=\"')}break;case\"/\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:s=S_TAG_CLOSE;el.closed=true;case S_ATTR_NOQUOT_VALUE:case S_ATTR:case S_ATTR_SPACE:break;default:throw new Error(\"attribute invalid close char('/')\")}break;case\"\":errorHandler.error(\"unexpected end of input\");if(s==S_TAG){el.setTagName(source.slice(start,p))}return p;case\">\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:break;case S_ATTR_NOQUOT_VALUE:case S_ATTR:value=source.slice(start,p);if(value.slice(-1)===\"/\"){el.closed=true;value=value.slice(0,-1)}case S_ATTR_SPACE:if(s===S_ATTR_SPACE){value=attrName}if(s==S_ATTR_NOQUOT_VALUE){errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value.replace(/&#?\\w+;/g,entityReplacer),start)}else{if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!value.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')}el.add(value,value,start)}break;case S_EQ:throw new Error(\"attribute value missed!!\")}return p;case\"\":c=\" \";default:if(c<=\" \"){switch(s){case S_TAG:el.setTagName(source.slice(start,p));s=S_TAG_SPACE;break;case S_ATTR:attrName=source.slice(start,p);s=S_ATTR_SPACE;break;case S_ATTR_NOQUOT_VALUE:var value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value,start);case S_ATTR_END:s=S_TAG_SPACE;break}}else{switch(s){case S_ATTR_SPACE:var tagName=el.tagName;if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!attrName.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')}el.add(attrName,attrName,start);start=p;s=S_ATTR;break;case S_ATTR_END:errorHandler.warning('attribute space is required\"'+attrName+'\"!!');case S_TAG_SPACE:s=S_ATTR;start=p;break;case S_EQ:s=S_ATTR_NOQUOT_VALUE;start=p;break;case S_TAG_CLOSE:throw new Error(\"elements closed character '/' and '>' must be connected to\")}}}p++}}function appendElement(el,domBuilder,currentNSMap){var tagName=el.tagName;var localNSMap=null;var i=el.length;while(i--){var a=el[i];var qName=a.qName;var value=a.value;var nsp=qName.indexOf(\":\");if(nsp>0){var prefix=a.prefix=qName.slice(0,nsp);var localName=qName.slice(nsp+1);var nsPrefix=prefix===\"xmlns\"&&localName}else{localName=qName;prefix=null;nsPrefix=qName===\"xmlns\"&&\"\"}a.localName=localName;if(nsPrefix!==false){if(localNSMap==null){localNSMap={};_copy(currentNSMap,currentNSMap={})}currentNSMap[nsPrefix]=localNSMap[nsPrefix]=value;a.uri=\"http://www.w3.org/2000/xmlns/\";domBuilder.startPrefixMapping(nsPrefix,value)}}var i=el.length;while(i--){a=el[i];var prefix=a.prefix;if(prefix){if(prefix===\"xml\"){a.uri=\"http://www.w3.org/XML/1998/namespace\"}if(prefix!==\"xmlns\"){a.uri=currentNSMap[prefix||\"\"]}}}var nsp=tagName.indexOf(\":\");if(nsp>0){prefix=el.prefix=tagName.slice(0,nsp);localName=el.localName=tagName.slice(nsp+1)}else{prefix=null;localName=el.localName=tagName}var ns=el.uri=currentNSMap[prefix||\"\"];domBuilder.startElement(ns,localName,tagName,el);if(el.closed){domBuilder.endElement(ns,localName,tagName);if(localNSMap){for(prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}}else{el.currentNSMap=currentNSMap;el.localNSMap=localNSMap;return true}}function parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){if(/^(?:script|textarea)$/i.test(tagName)){var elEndStart=source.indexOf(\"</\"+tagName+\">\",elStartEnd);var text=source.substring(elStartEnd+1,elEndStart);if(/[&<]/.test(text)){if(/^script$/i.test(tagName)){domBuilder.characters(text,0,text.length);return elEndStart}text=text.replace(/&#?\\w+;/g,entityReplacer);domBuilder.characters(text,0,text.length);return elEndStart}}return elStartEnd+1}function fixSelfClosed(source,elStartEnd,tagName,closeMap){var pos=closeMap[tagName];if(pos==null){pos=source.lastIndexOf(\"</\"+tagName+\">\");if(pos<elStartEnd){pos=source.lastIndexOf(\"</\"+tagName)}closeMap[tagName]=pos}return pos<elStartEnd}function _copy(source,target){for(var n in source){target[n]=source[n]}}function parseDCC(source,start,domBuilder,errorHandler){var next=source.charAt(start+2);switch(next){case\"-\":if(source.charAt(start+3)===\"-\"){var end=source.indexOf(\"-->\",start+4);if(end>start){domBuilder.comment(source,start+4,end-start-4);return end+3}else{errorHandler.error(\"Unclosed comment\");return-1}}else{return-1}default:if(source.substr(start+3,6)==\"CDATA[\"){var end=source.indexOf(\"]]>\",start+9);domBuilder.startCDATA();domBuilder.characters(source,start+9,end-start-9);domBuilder.endCDATA();return end+3}var matchs=split(source,start);var len=matchs.length;if(len>1&&/!doctype/i.test(matchs[0][0])){var name=matchs[1][0];var pubid=len>3&&/^public$/i.test(matchs[2][0])&&matchs[3][0];var sysid=len>4&&matchs[4][0];var lastMatch=matchs[len-1];domBuilder.startDTD(name,pubid&&pubid.replace(/^(['\"])(.*?)\\1$/,\"$2\"),sysid&&sysid.replace(/^(['\"])(.*?)\\1$/,\"$2\"));domBuilder.endDTD();return lastMatch.index+lastMatch[0].length}}return-1}function parseInstruction(source,start,domBuilder){var end=source.indexOf(\"?>\",start);if(end){var match=source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);if(match){var len=match[0].length;domBuilder.processingInstruction(match[1],match[2]);return end+2}else{return-1}}return-1}function ElementAttributes(source){}ElementAttributes.prototype={setTagName:function(tagName){if(!tagNamePattern.test(tagName)){throw new Error(\"invalid tagName:\"+tagName)}this.tagName=tagName},add:function(qName,value,offset){if(!tagNamePattern.test(qName)){throw new Error(\"invalid attribute:\"+qName)}this[this.length++]={qName:qName,value:value,offset:offset}},length:0,getLocalName:function(i){return this[i].localName},getLocator:function(i){return this[i].locator},getQName:function(i){return this[i].qName},getURI:function(i){return this[i].uri},getValue:function(i){return this[i].value}};function _set_proto_(thiz,parent){thiz.__proto__=parent;return thiz}if(!(_set_proto_({},_set_proto_.prototype)instanceof _set_proto_)){_set_proto_=function(thiz,parent){function p(){}p.prototype=parent;p=new p;for(parent in thiz){p[parent]=thiz[parent]}return p}}function split(source,start){var match;var buf=[];var reg=/'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;reg.lastIndex=start;reg.exec(source);while(match=reg.exec(source)){buf.push(match);if(match[1])return buf}}exports.XMLReader=XMLReader},{}],\"/src/js/index.js\":[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var templates=require(\"./templates\");var DocUtils=require(\"docxtemplater\").DocUtils;var DOMParser=require(\"xmldom\").DOMParser;function isNaN(number){return!(number===number)}var ImgManager=require(\"./imgManager\");var moduleName=\"open-xml-templating/docxtemplater-image-module\";function getInnerDocx(_ref){var part=_ref.part;return part}function getInnerPptx(_ref2){var part=_ref2.part,left=_ref2.left,right=_ref2.right,postparsed=_ref2.postparsed;var xmlString=postparsed.slice(left+1,right).reduce(function(concat,item){return concat+item.value},\"\");var xmlDoc=(new DOMParser).parseFromString(\"<xml>\"+xmlString+\"</xml>\");var offset=xmlDoc.getElementsByTagName(\"a:off\");var ext=xmlDoc.getElementsByTagName(\"a:ext\");part.ext={cx:parseInt(ext[0].getAttribute(\"cx\"),10),cy:parseInt(ext[0].getAttribute(\"cy\"),10)};part.offset={x:parseInt(offset[0].getAttribute(\"x\"),10),y:parseInt(offset[0].getAttribute(\"y\"),10)};return part}var ImageModule=function(){function ImageModule(options){_classCallCheck(this,ImageModule);this.name=\"ImageModule\";this.options=options||{};this.imgManagers={};if(this.options.centered==null){this.options.centered=false}if(this.options.getImage==null){throw new Error(\"You should pass getImage\")}if(this.options.getSize==null){throw new Error(\"You should pass getSize\")}this.imageNumber=1}_createClass(ImageModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){\nvar relsFiles=docxtemplater.zip.file(/\\.xml\\.rels/).concat(docxtemplater.zip.file(/\\[Content_Types\\].xml/)).map(function(file){return file.name});this.fileTypeConfig=docxtemplater.fileTypeConfig;this.fileType=docxtemplater.fileType;this.zip=docxtemplater.zip;options.xmlFileNames=options.xmlFileNames.concat(relsFiles);return options}},{key:\"set\",value:function set(options){if(options.zip){this.zip=options.zip}if(options.xmlDocuments){this.xmlDocuments=options.xmlDocuments}}},{key:\"parse\",value:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent.substring(0,2)===\"%%\"){return{type:type,value:placeHolderContent.substr(2),module:module,centered:true}}if(placeHolderContent.substring(0,1)===\"%\"){return{type:type,value:placeHolderContent.substr(1),module:module,centered:false}}return null}},{key:\"postparse\",value:function postparse(parsed){var expandTo=void 0;var getInner=void 0;if(this.fileType===\"pptx\"){expandTo=\"p:sp\";getInner=getInnerPptx}else{expandTo=this.options.centered?\"w:p\":\"w:t\";getInner=getInnerDocx}return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:expandTo})}},{key:\"render\",value:function render(part,options){this.imgManagers[options.filePath]=this.imgManagers[options.filePath]||new ImgManager(this.zip,options.filePath,this.xmlDocuments,this.fileType);var imgManager=this.imgManagers[options.filePath];if(!part.type===\"placeholder\"||part.module!==moduleName){return null}try{var tagValue=options.scopeManager.getValue(part.value);if(!tagValue){throw new Error(\"tagValue is empty\")}var imgBuffer=this.options.getImage(tagValue,part.value);var rId=imgManager.addImageRels(this.getNextImageName(),imgBuffer);var sizePixel=this.options.getSize(imgBuffer,tagValue,part.value);return this.getRenderedPart(part,rId,sizePixel)}catch(e){return{value:this.fileTypeConfig.tagTextXml}}}},{key:\"getRenderedPart\",value:function getRenderedPart(part,rId,sizePixel){if(isNaN(rId)){throw new Error(\"rId is NaN, aborting\")}var size=[DocUtils.convertPixelsToEmus(sizePixel[0]),DocUtils.convertPixelsToEmus(sizePixel[1])];var centered=this.options.centered||part.centered;var newText=void 0;if(this.fileType===\"pptx\"){newText=this.getRenderedPartPptx(part,rId,size,centered)}else{newText=this.getRenderedPartDocx(rId,size,centered)}return{value:newText}}},{key:\"getRenderedPartPptx\",value:function getRenderedPartPptx(part,rId,size,centered){var offset={x:part.offset.x,y:part.offset.y};var cellCX=part.ext.cx;var cellCY=part.ext.cy;var imgW=size[0];var imgH=size[1];if(centered){offset.x+=cellCX/2-imgW/2;offset.y+=cellCY/2-imgH/2}return templates.getPptxImageXml(rId,[imgW,imgH],offset)}},{key:\"getRenderedPartDocx\",value:function getRenderedPartDocx(rId,size,centered){return centered?templates.getImageXmlCentered(rId,size):templates.getImageXml(rId,size)}},{key:\"getNextImageName\",value:function getNextImageName(){var name=\"image_generated_\"+this.imageNumber+\".png\";this.imageNumber++;return name}}]);return ImageModule}();module.exports=ImageModule},{\"./imgManager\":2,\"./templates\":3,docxtemplater:5,xmldom:23}]},{},[])(\"/src/js/index.js\")});","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Docxtemplater=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){\"use strict\";function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}var memoize=require(\"./memoize\");var DOMParser=require(\"xmldom\").DOMParser;var XMLSerializer=require(\"xmldom\").XMLSerializer;var Errors=require(\"./errors\");var DocUtils={};function parser(tag){return _defineProperty({},\"get\",function get(scope){if(tag===\".\"){return scope}return scope[tag]})}DocUtils.defaults={nullGetter:function nullGetter(part){if(!part.module){return\"undefined\"}if(part.module===\"rawxml\"){return\"\"}return\"\"},parser:memoize(parser),delimiters:{start:\"{\",end:\"}\"}};DocUtils.mergeObjects=function(){var resObj={};var obj=void 0,keys=void 0;for(var i=0;i<arguments.length;i+=1){obj=arguments[i];keys=Object.keys(obj);for(var j=0;j<keys.length;j+=1){resObj[keys[j]]=obj[keys[j]]}}return resObj};DocUtils.xml2str=function(xmlNode){var a=new XMLSerializer;return a.serializeToString(xmlNode)};DocUtils.decodeUtf8=function(s){try{if(s===undefined){return undefined}return decodeURIComponent(escape(DocUtils.convertSpaces(s)))}catch(e){var err=new Error(\"End\");err.properties.data=s;err.properties.explanation=\"Could not decode string to UTF8\";throw err}};DocUtils.encodeUtf8=function(s){return unescape(encodeURIComponent(s))};DocUtils.str2xml=function(str,errorHandler){var parser=new DOMParser({errorHandler:errorHandler});return parser.parseFromString(str,\"text/xml\")};DocUtils.charMap={\"&\":\"&amp;\",\"'\":\"&apos;\",\"<\":\"&lt;\",\">\":\"&gt;\"};var regexStripRegexp=/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g;DocUtils.escapeRegExp=function(str){return str.replace(regexStripRegexp,\"\\\\$&\")};DocUtils.charMapRegexes=Object.keys(DocUtils.charMap).map(function(endChar){var startChar=DocUtils.charMap[endChar];return{rstart:new RegExp(DocUtils.escapeRegExp(startChar),\"g\"),rend:new RegExp(DocUtils.escapeRegExp(endChar),\"g\"),start:startChar,end:endChar}});DocUtils.wordToUtf8=function(string){var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rstart,r.end)}return string};DocUtils.utf8ToWord=function(string){if(typeof string!==\"string\"){string=string.toString()}var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rend,r.start)}return string};DocUtils.cloneDeep=function(obj){return JSON.parse(JSON.stringify(obj))};DocUtils.concatArrays=function(arrays){return arrays.reduce(function(result,array){Array.prototype.push.apply(result,array);return result},[])};var spaceRegexp=new RegExp(String.fromCharCode(160),\"g\");DocUtils.convertSpaces=function(s){return s.replace(spaceRegexp,\" \")};DocUtils.pregMatchAll=function(regex,content){var matchArray=[];var match=void 0;while((match=regex.exec(content))!=null){matchArray.push({array:match,offset:match.index})}return matchArray};DocUtils.sizeOfObject=function(obj){return Object.keys(obj).length};function throwXmlTagNotFound(options){var err=new Errors.XTTemplateError(\"No tag '\"+options.element+\"' was found at the \"+options.position);err.properties={id:\"no_xml_tag_found_at_\"+options.position,explanation:\"No tag '\"+options.element+\"' was found at the \"+options.position,parsed:options.parsed,index:options.index,element:options.element};throw err}DocUtils.getRight=function(parsed,element,index){for(var i=index,l=parsed.length;i<l;i++){var part=parsed[i];if(part.value===\"</\"+element+\">\"){return i}}throwXmlTagNotFound({position:\"right\",element:element,parsed:parsed,index:index})};DocUtils.getLeft=function(parsed,element,index){for(var i=index;i>=0;i--){var part=parsed[i];if(part.value.indexOf(\"<\"+element)===0&&[\">\",\" \"].indexOf(part.value[element.length+1])!==-1){return i}}throwXmlTagNotFound({position:\"left\",element:element,parsed:parsed,index:index})};module.exports=DocUtils},{\"./errors\":2,\"./memoize\":5,xmldom:19}],2:[function(require,module,exports){\"use strict\";function XTError(message){this.name=\"GenericError\";this.message=message;this.stack=new Error(message).stack}XTError.prototype=Error.prototype;function XTTemplateError(message){this.name=\"TemplateError\";this.message=message;this.stack=new Error(message).stack}XTTemplateError.prototype=new XTError;function XTScopeParserError(message){this.name=\"ScopeParserError\";this.message=message;this.stack=new Error(message).stack}XTScopeParserError.prototype=new XTError;function XTInternalError(message){this.name=\"InternalError\";this.properties={explanation:\"InternalError\"};this.message=message;this.stack=new Error(message).stack}XTInternalError.prototype=new XTError;module.exports={XTError:XTError,XTTemplateError:XTTemplateError,XTInternalError:XTInternalError,XTScopeParserError:XTScopeParserError}},{}],3:[function(require,module,exports){\"use strict\";var loopModule=require(\"./modules/loop\");var spacePreserveModule=require(\"./modules/space-preserve\");var rawXmlModule=require(\"./modules/rawxml\");var expandPairTrait=require(\"./modules/expand-pair-trait\");var render=require(\"./modules/render\");var PptXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/ppt\\/(slides|slideMasters)\\/(slide|slideMaster)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"ppt/presentation.xml\"])},textPath:\"ppt/slides/slide1.xml\",tagsXmlTextArray:[\"a:t\",\"m:t\"],tagsXmlLexedArray:[\"p:sp\",\"a:tc\",\"a:tr\",\"a:table\",\"a:p\",\"a:r\"],tagRawXml:\"p:sp\",tagTextXml:\"a:t\",baseModules:[render,expandPairTrait,rawXmlModule,loopModule]};var DocXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/word\\/(header|footer)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"word/document.xml\"])},textPath:\"word/document.xml\",tagsXmlTextArray:[\"w:t\",\"m:t\"],tagsXmlLexedArray:[\"w:tc\",\"w:tr\",\"w:table\",\"w:p\",\"w:r\"],tagRawXml:\"w:p\",tagTextXml:\"w:t\",baseModules:[render,spacePreserveModule,expandPairTrait,rawXmlModule,loopModule]};module.exports={docx:DocXFileTypeConfig,pptx:PptXFileTypeConfig}},{\"./modules/expand-pair-trait\":8,\"./modules/loop\":9,\"./modules/rawxml\":10,\"./modules/render\":11,\"./modules/space-preserve\":12}],4:[function(require,module,exports){\"use strict\";var Errors=require(\"./errors\");var DocUtils=require(\"./doc-utils\");function inRange(range,match){return range[0]<=match.offset&&match.offset<range[1]}function updateInTextTag(part,inTextTag){if(part.type===\"tag\"&&part.position===\"start\"&&part.text){if(inTextTag){throw new Error(\"Malformed xml : Already in text tag\")}return true}if(part.type===\"tag\"&&part.position===\"end\"&&part.text){if(!inTextTag){throw new Error(\"Malformed xml : Already not in text tag\")}return false}return inTextTag}function offsetSort(a,b){return a.offset-b.offset}function getTag(tag){var start=1;if(tag[1]===\"/\"){start=2}var index=tag.indexOf(\" \");var end=index===-1?tag.length-1:index;return{tag:tag.slice(start,end),position:start===1?\"start\":\"end\"}}function tagMatcher(content,textMatchArray,othersMatchArray){var cursor=0;var contentLength=content.length;var allMatches=DocUtils.concatArrays([textMatchArray.map(function(tag){return{tag:tag,text:true}}),othersMatchArray.map(function(tag){return{tag:tag,text:false}})]).reduce(function(allMatches,t){allMatches[t.tag]=t.text;return allMatches},{});var totalMatches=[];while(cursor<contentLength){cursor=content.indexOf(\"<\",cursor);if(cursor===-1){break}var offset=cursor;cursor=content.indexOf(\">\",cursor);var tagText=content.slice(offset,cursor+1);var _getTag=getTag(tagText),tag=_getTag.tag,position=_getTag.position;var text=allMatches[tag];if(text==null){continue}totalMatches.push({type:\"tag\",position:position,text:text,offset:offset,value:tagText})}return totalMatches}function throwUnopenedTagException(options){var err=new Errors.XTTemplateError(\"Unopened tag\");err.properties={xtag:options.xtag.split(\" \")[0],id:\"unopened_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function throwUnclosedTagException(options){var err=new Errors.XTTemplateError(\"Unclosed tag\");err.properties={xtag:options.xtag.split(\" \")[0].substr(1),id:\"unclosed_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function assertDelimiterOrdered(delimiterMatches,fullText){var inDelimiter=false;var lastDelimiterMatch={offset:0};var xtag=void 0;delimiterMatches.forEach(function(delimiterMatch){xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(delimiterMatch.position===\"start\"&&inDelimiter||delimiterMatch.position===\"end\"&&!inDelimiter){if(delimiterMatch.position===\"start\"){throwUnclosedTagException({xtag:xtag})}else{throwUnopenedTagException({xtag:xtag})}}inDelimiter=!inDelimiter;lastDelimiterMatch=delimiterMatch});var delimiterMatch={offset:fullText.length};xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(inDelimiter){throwUnclosedTagException({xtag:xtag})}}function getAllIndexes(arr,val,position){var indexes=[];var offset=-1;do{offset=arr.indexOf(val,offset+1);if(offset!==-1){indexes.push({offset:offset,position:position})}}while(offset!==-1);return indexes}function Reader(innerContentParts){var _this=this;this.innerContentParts=innerContentParts;this.full=\"\";this.parseDelimiters=function(delimiters){_this.full=_this.innerContentParts.join(\"\");var offset=0;_this.ranges=_this.innerContentParts.map(function(part){offset+=part.length;return offset-part.length});var delimiterMatches=DocUtils.concatArrays([getAllIndexes(_this.full,delimiters.start,\"start\"),getAllIndexes(_this.full,delimiters.end,\"end\")]).sort(offsetSort);assertDelimiterOrdered(delimiterMatches,_this.full);var delimiterLength={start:delimiters.start.length,end:delimiters.end.length};var cutNext=0;var delimiterIndex=0;_this.parsed=_this.ranges.map(function(offset,i){var range=[offset,offset+this.innerContentParts[i].length];var partContent=this.innerContentParts[i];var delimitersInOffset=[];while(delimiterIndex<delimiterMatches.length&&inRange(range,delimiterMatches[delimiterIndex])){delimitersInOffset.push(delimiterMatches[delimiterIndex]);delimiterIndex++}var parts=[];var cursor=0;if(cutNext>0){cursor=cutNext;cutNext=0}delimitersInOffset.forEach(function(delimiterInOffset){var value=partContent.substr(cursor,delimiterInOffset.offset-offset-cursor);if(value.length>0){parts.push({type:\"content\",value:value})}parts.push({type:\"delimiter\",position:delimiterInOffset.position});cursor=delimiterInOffset.offset-offset+delimiterLength[delimiterInOffset.position]});cutNext=cursor-partContent.length;var value=partContent.substr(cursor);if(value.length>0){parts.push({type:\"content\",value:value})}return parts},_this)}}module.exports={parse:function parse(xmlparsed,delimiters){var inTextTag=false;var innerContentParts=[];xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(inTextTag&&part.type===\"content\"){innerContentParts.push(part.value)}});var reader=new Reader(innerContentParts);reader.parseDelimiters(delimiters);var newArray=[];var index=0;xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(part.type===\"content\"){part.position=inTextTag?\"insidetag\":\"outsidetag\"}if(inTextTag&&part.type===\"content\"){Array.prototype.push.apply(newArray,reader.parsed[index].map(function(p){if(p.type===\"content\"){p.position=\"insidetag\"}return p}));index++}else{newArray.push(part)}});return newArray},xmlparse:function xmlparse(content,xmltags){var matches=tagMatcher(content,xmltags.text,xmltags.other);var cursor=0;var parsed=matches.reduce(function(parsed,match){var value=content.substr(cursor,match.offset-cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}cursor=match.offset+match.value.length;delete match.offset;if(match.value.length>0){parsed.push(match)}return parsed},[]);var value=content.substr(cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}return parsed}}},{\"./doc-utils\":1,\"./errors\":2}],5:[function(require,module,exports){\"use strict\";function memoize(func){var stringifyJson=JSON.stringify,cache={};function cachedfun(){var hash=stringifyJson(arguments);return hash in cache?cache[hash]:cache[hash]=func.apply(this,arguments)}return cachedfun}module.exports=memoize},{}],6:[function(require,module,exports){\"use strict\";function getMinFromArrays(arrays,state){var minIndex=-1;for(var i=0,l=arrays.length;i<l;i++){if(state[i]>=arrays[i].length){continue}if(minIndex===-1||arrays[i][state[i]].offset<arrays[minIndex][state[minIndex]].offset){minIndex=i}}if(minIndex===-1){throw new Error(\"minIndex negative\")}return minIndex}module.exports=function(arrays){var totalLength=arrays.reduce(function(sum,array){return sum+array.length},0);arrays=arrays.filter(function(array){return array.length>0});var resultArray=new Array(totalLength);var state=arrays.map(function(){return 0});var i=0;while(i<=totalLength-1){var arrayIndex=getMinFromArrays(arrays,state);resultArray[i]=arrays[arrayIndex][state[arrayIndex]];state[arrayIndex]++;i++}return resultArray}},{}],7:[function(require,module,exports){\"use strict\";function emptyFun(){}function identity(i){return i}module.exports=function(module){var defaults={set:emptyFun,parse:emptyFun,render:emptyFun,getTraits:emptyFun,optionsTransformer:identity,getRenderedMap:identity,postparse:identity};if(Object.keys(defaults).every(function(key){return!module[key]})){throw new Error(\"This module cannot be wrapped, because it doesn't define any of the necessary functions\")}Object.keys(defaults).forEach(function(key){module[key]=module[key]||defaults[key]});return module}},{}],8:[function(require,module,exports){\"use strict\";var traitName=\"expandPair\";var mergeSort=require(\"../mergesort\");var DocUtils=require(\"../doc-utils\");var wrapper=require(\"../module-wrapper\");var _require=require(\"../traits\"),getExpandToDefault=_require.getExpandToDefault;var Errors=require(\"../errors\");function throwUnmatchedLoopException(options){var location=options.location;var t=location===\"start\"?\"unclosed\":\"unopened\";var T=location===\"start\"?\"Unclosed\":\"Unopened\";var err=new Errors.XTTemplateError(T+\" loop\");var tag=options.part.value;err.properties={id:t+\"_loop\",explanation:\"The loop with tag \"+tag+\" is \"+t,xtag:tag};throw err}function throwClosingTagNotMatchOpeningTag(options){var tags=options.tags;var err=new Errors.XTTemplateError(\"Closing tag does not match opening tag\");err.properties={id:\"closing_tag_does_not_match_opening_tag\",explanation:'The tag \"'+tags[0].value+'\" is closed by the tag \"'+tags[1].value+'\"',openingtag:tags[0].value,closingtag:tags[1].value};throw err}function getOpenCountChange(part){switch(part.location){case\"start\":return 1;case\"end\":return-1;default:throw new Error(\"Location should be one of 'start' or 'end' (given : \"+part.location+\")\")}}function getPairs(traits){if(traits.length===0){return[]}var countOpen=1;var firstTrait=traits[0];for(var i=1;i<traits.length;i++){var currentTrait=traits[i];countOpen+=getOpenCountChange(currentTrait.part);if(countOpen===0){if(currentTrait.part.value!==firstTrait.part.value&&currentTrait.part.value!==\"\"){throwClosingTagNotMatchOpeningTag({tags:[firstTrait.part,currentTrait.part]})}var outer=getPairs(traits.slice(i+1));return[[firstTrait,currentTrait]].concat(outer)}}var part=firstTrait.part;throwUnmatchedLoopException({part:part,location:part.location})}var expandPairTrait={name:\"ExpandPairTrait\",postparse:function postparse(parsed,_ref){var getTraits=_ref.getTraits,_postparse=_ref.postparse;var traits=getTraits(traitName,parsed);traits=traits.map(function(trait){return trait||[]});traits=mergeSort(traits);var pairs=getPairs(traits);var expandedPairs=pairs.map(function(pair){var expandTo=pair[0].part.expandTo;if(expandTo===\"auto\"){expandTo=getExpandToDefault(parsed.slice(pair[0].offset,pair[1].offset))}if(!expandTo){return[pair[0].offset,pair[1].offset]}var left=DocUtils.getLeft(parsed,expandTo,pair[0].offset);var right=DocUtils.getRight(parsed,expandTo,pair[1].offset);return[left,right]});var currentPairIndex=0;var innerParts=void 0;return parsed.reduce(function(newParsed,part,i){var inPair=currentPairIndex<pairs.length&&expandedPairs[currentPairIndex][0]<=i;var pair=pairs[currentPairIndex];var expandedPair=expandedPairs[currentPairIndex];if(!inPair){newParsed.push(part);return newParsed}if(expandedPair[0]===i){innerParts=[]}if(pair[0].offset!==i&&pair[1].offset!==i){innerParts.push(part)}if(expandedPair[1]===i){var basePart=parsed[pair[0].offset];delete basePart.location;delete basePart.expandTo;basePart.subparsed=_postparse(innerParts);newParsed.push(basePart);currentPairIndex++}return newParsed},[])}};module.exports=function(){return wrapper(expandPairTrait)}},{\"../doc-utils\":1,\"../errors\":2,\"../mergesort\":6,\"../module-wrapper\":7,\"../traits\":16}],9:[function(require,module,exports){\"use strict\";var DocUtils=require(\"../doc-utils\");var dashInnerRegex=/^-([^\\s]+)\\s(.+)$/;var wrapper=require(\"../module-wrapper\");var moduleName=\"loop\";var loopModule={name:\"LoopModule\",parse:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent[0]===\"#\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:false}}if(placeHolderContent[0]===\"^\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:true}}if(placeHolderContent[0]===\"/\"){return{type:type,value:placeHolderContent.substr(1),module:module,location:\"end\"}}if(placeHolderContent[0]===\"-\"){var value=placeHolderContent.replace(dashInnerRegex,\"$2\");var expandTo=placeHolderContent.replace(dashInnerRegex,\"$1\");return{type:type,value:value,expandTo:expandTo,module:module,location:\"start\",inverted:false}}return null},getTraits:function getTraits(traitName,parsed){if(traitName!==\"expandPair\"){return}return parsed.reduce(function(tags,part,offset){if(part.type===\"placeholder\"&&part.module===moduleName){tags.push({part:part,offset:offset})}return tags},[])},render:function render(part,options){if(!part.type===\"placeholder\"||part.module!==moduleName){return null}var totalValue=[];function loopOver(scope){var scopeManager=options.scopeManager.createSubScopeManager(scope,part.value);totalValue.push(options.render(DocUtils.mergeObjects({},options,{compiled:part.subparsed,tags:{},scopeManager:scopeManager})))}options.scopeManager.loopOver(part.value,loopOver,part.inverted);return{value:totalValue.join(\"\")}}};module.exports=function(){return wrapper(loopModule)}},{\"../doc-utils\":1,\"../module-wrapper\":7}],10:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"../doc-utils\");var Errors=require(\"../errors\");var moduleName=\"rawxml\";var wrapper=require(\"../module-wrapper\");function throwRawTagShouldBeOnlyTextInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag should be the only text in paragraph\");var tag=options.part.value;err.properties={id:\"raw_xml_tag_should_be_only_text_in_paragraph\",explanation:\"The tag \"+tag,xtag:options.part.value,paragraphParts:options.paragraphParts};throw err}function getInner(_ref){var part=_ref.part,left=_ref.left,right=_ref.right,postparsed=_ref.postparsed,index=_ref.index;var paragraphParts=postparsed.slice(left+1,right);paragraphParts.forEach(function(p,i){if(i===index-left-1){return}if(p.type===\"placeholder\"||p.type===\"content\"&&p.position===\"insidetag\"){throwRawTagShouldBeOnlyTextInParagraph({paragraphParts:paragraphParts,part:part})}});return part}var RawXmlModule=function(){function RawXmlModule(){_classCallCheck(this,RawXmlModule);this.name=\"RawXmlModule\"}_createClass(RawXmlModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){this.fileTypeConfig=docxtemplater.fileTypeConfig;return options}},{key:\"parse\",value:function parse(placeHolderContent){var type=\"placeholder\";if(placeHolderContent[0]!==\"@\"){return null}return{type:type,value:placeHolderContent.substr(1),module:moduleName}}},{key:\"postparse\",value:function postparse(parsed){return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:this.fileTypeConfig.tagRawXml})}},{key:\"render\",value:function render(part,options){if(part.module!==moduleName){return null}var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return{value:value}}}]);return RawXmlModule}();module.exports=function(){return wrapper(new RawXmlModule)}},{\"../doc-utils\":1,\"../errors\":2,\"../module-wrapper\":7}],11:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var wrapper=require(\"../module-wrapper\");var Render=function(){function Render(){_classCallCheck(this,Render);this.name=\"Render\"}_createClass(Render,[{key:\"set\",value:function set(obj){if(obj.compiled){this.compiled=obj.compiled}if(obj.data!=null){this.data=obj.data}}},{key:\"getRenderedMap\",value:function getRenderedMap(mapper){var _this=this;return Object.keys(this.compiled).reduce(function(mapper,from){mapper[from]={from:from,data:_this.data};return mapper},mapper)}}]);return Render}();module.exports=function(){return wrapper(new Render)}},{\"../module-wrapper\":7}],12:[function(require,module,exports){\"use strict\";var wrapper=require(\"../module-wrapper\");var spacePreserve={name:\"SpacePreserveModule\",postparse:function postparse(parsed){var chunk=[];var inChunk=false;var result=parsed.reduce(function(parsed,part){if(part.type===\"tag\"&&part.position===\"start\"&&part.text&&part.value===\"<w:t>\"){inChunk=true}if(inChunk){if(part.type===\"placeholder\"&&!part.module){chunk[0].value='<w:t xml:space=\"preserve\">'}chunk.push(part)}else{parsed.push(part)}if(part.type===\"tag\"&&part.position===\"end\"&&part.text&&part.value===\"</w:t>\"){Array.prototype.push.apply(parsed,chunk);inChunk=false;chunk=[]}return parsed},[]);Array.prototype.push.apply(result,chunk);return result}};module.exports=function(){return wrapper(spacePreserve)}},{\"../module-wrapper\":7}],13:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var parser={postparse:function postparse(parsed,modules){function getTraits(traitName,parsed){return modules.map(function(module){return module.getTraits(traitName,parsed)})}function postparse(parsed){return modules.reduce(function(parsed,module){return module.postparse(parsed,{postparse:postparse,getTraits:getTraits})},parsed)}return postparse(parsed)},parse:function parse(lexed,modules){function moduleParse(placeHolderContent,parsed){var moduleParsed=void 0;for(var i=0,l=modules.length;i<l;i++){var _module=modules[i];moduleParsed=_module.parse(placeHolderContent);if(moduleParsed){parsed.push(moduleParsed);return moduleParsed}}return null}var inPlaceHolder=false;var placeHolderContent=void 0;var tailParts=[];return lexed.reduce(function(parsed,token){if(token.type===\"delimiter\"){inPlaceHolder=token.position===\"start\";if(token.position===\"end\"){placeHolderContent=DocUtils.wordToUtf8(placeHolderContent);if(!moduleParse(placeHolderContent,parsed)){parsed.push({type:\"placeholder\",value:placeHolderContent})}Array.prototype.push.apply(parsed,tailParts);tailParts=[];return parsed}placeHolderContent=\"\";return parsed}if(inPlaceHolder){if(token.type===\"content\"&&token.position===\"insidetag\"){placeHolderContent+=token.value}else{tailParts.push(token)}return parsed}parsed.push(token);return parsed},[])}};module.exports=parser},{\"./doc-utils\":1}],14:[function(require,module,exports){\"use strict\";var ScopeManager=require(\"./scope-manager\");var DocUtils=require(\"./doc-utils\");function moduleRender(part,options){var moduleRendered=void 0;for(var i=0,l=options.modules.length;i<l;i++){var _module=options.modules[i];moduleRendered=_module.render(part,options);if(moduleRendered){return moduleRendered}}return false}function render(options){options.render=render;options.modules=options.modules;if(!options.scopeManager){options.scopeManager=ScopeManager.createBaseScopeManager(options)}return options.compiled.map(function(part){var moduleRendered=moduleRender(part,options);if(moduleRendered){return moduleRendered.value}if(part.type===\"placeholder\"){var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return DocUtils.utf8ToWord(value)}if(part.type===\"content\"||part.type===\"tag\"){return part.value}throw new Error('Unimplemented tag type \"'+part.type+'\"')}).join(\"\")}module.exports=render},{\"./doc-utils\":1,\"./scope-manager\":15}],15:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var Errors=require(\"./errors\");var ScopeManager=function(){function ScopeManager(options){_classCallCheck(this,ScopeManager);this.scopePath=options.scopePath;this.scopeList=options.scopeList;this.parser=options.parser}_createClass(ScopeManager,[{key:\"loopOver\",value:function loopOver(tag,callback,inverted){inverted=inverted||false;return this.loopOverValue(this.getValue(tag),callback,inverted)}},{key:\"functorIfInverted\",value:function functorIfInverted(inverted,functor,value){if(inverted){functor(value)}}},{key:\"isValueFalsy\",value:function isValueFalsy(value,type){return value==null||!value||type===\"[object Array]\"&&value.length===0}},{key:\"loopOverValue\",value:function loopOverValue(value,functor,inverted){var type=Object.prototype.toString.call(value);var currentValue=this.scopeList[this.num];if(this.isValueFalsy(value,type)){return this.functorIfInverted(inverted,functor,currentValue)}if(type===\"[object Array]\"){for(var i=0,scope;i<value.length;i++){scope=value[i];this.functorIfInverted(!inverted,functor,scope)}return}if(type===\"[object Object]\"){return this.functorIfInverted(!inverted,functor,value)}if(value===true){return this.functorIfInverted(!inverted,functor,currentValue)}}},{key:\"getValue\",value:function getValue(tag,num){this.num=num==null?this.scopeList.length-1:num;var err=void 0;var parser=void 0;var result=void 0;var scope=this.scopeList[this.num];try{parser=this.parser(tag)}catch(error){err=new Errors.XTScopeParserError(\"Scope parser compilation failed\");err.properties={id:\"scopeparser_compilation_failed\",tag:tag,explanation:\"The scope parser for the tag \"+tag+\" failed to compile\",rootError:error};throw err}try{result=parser.get(scope,{num:this.num,scopeList:this.scopeList})}catch(error){err=new Errors.XTScopeParserError(\"Scope parser execution failed\");err.properties={id:\"scopeparser_execution_failed\",explanation:\"The scope parser for the tag \"+tag+\" failed to execute\",scope:scope,tag:tag,rootError:error};throw err}if(result==null&&this.num>0){return this.getValue(tag,this.num-1)}return result}},{key:\"createSubScopeManager\",value:function createSubScopeManager(scope,tag){var options={scopePath:this.scopePath.slice(0),scopeList:this.scopeList.slice(0)};options.parser=this.parser;options.scopeList=this.scopeList.concat(scope);options.scopePath=this.scopePath.concat(tag);return new ScopeManager(options)}}]);return ScopeManager}();ScopeManager.createBaseScopeManager=function(_ref){var parser=_ref.parser,tags=_ref.tags;var options={parser:parser,tags:tags};options.scopePath=[];options.scopeList=[tags];return new ScopeManager(options)};module.exports=ScopeManager},{\"./errors\":2}],16:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var Errors=require(\"./errors\");function throwRawTagNotInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag not in paragraph\");var tag=options.part.value;err.properties={id:\"raw_tag_outerxml_invalid\",explanation:'The tag \"'+tag+'\"',rootError:options.rootError,xtag:tag,postparsed:options.postparsed,expandTo:options.expandTo,index:options.index};throw err}function lastTagIsOpenTag(array,tag){if(array.length===0){return false}var lastTag=array[array.length-1];var innerLastTag=lastTag.tag.substr(1);var innerCurrentTag=tag.substr(2,tag.length-3);return innerLastTag.indexOf(innerCurrentTag)===0}function addTag(array,tag){array.push({tag:tag});return array}function getListXmlElements(parts){var tags=parts.filter(function(part){return part.type===\"tag\"}).map(function(part){return part.value});var result=[];for(var i=0,tag;i<tags.length;i++){tag=tags[i];if(tag[1]===\"/\"){if(lastTagIsOpenTag(result,tag)){result.pop()}else{result=addTag(result,tag)}}else if(tag[tag.length-1]!==\"/\"){result=addTag(result,tag)}}return result}function getExpandToDefault(parts){var xmlElements=getListXmlElements(parts);for(var i=0;i<xmlElements.length;i++){var xmlElement=xmlElements[i];if(xmlElement.tag.indexOf(\"<w:tc\")===0){return\"w:tr\"}if(xmlElement.tag.indexOf(\"<a:tc\")===0){return\"a:tr\"}}return false}function expandOne(part,postparsed,options){var expandTo=part.expandTo||options.expandTo;var index=postparsed.indexOf(part);if(!expandTo){return postparsed}var right=void 0,left=void 0;try{right=DocUtils.getRight(postparsed,expandTo,index);left=DocUtils.getLeft(postparsed,expandTo,index)}catch(rootError){if(rootError instanceof Errors.XTTemplateError){throwRawTagNotInParagraph({part:part,rootError:rootError,postparsed:postparsed,expandTo:expandTo,index:index})}throw rootError}var leftParts=postparsed.slice(left,index);var rightParts=postparsed.slice(index+1,right+1);var inner=options.getInner({index:index,part:part,leftParts:leftParts,rightParts:rightParts,left:left,right:right,postparsed:postparsed});if(!inner.length){inner.expanded=[leftParts,rightParts];inner=[inner]}return DocUtils.concatArrays([postparsed.slice(0,left),inner,postparsed.slice(right+1)])}function expandToOne(postparsed,options){var expandToElements=postparsed.reduce(function(elements,part){if(part.type===\"placeholder\"&&part.module===options.moduleName){elements.push(part)}return elements},[]);expandToElements.forEach(function(part){postparsed=expandOne(part,postparsed,options)});return postparsed}module.exports={expandToOne:expandToOne,getExpandToDefault:getExpandToDefault}},{\"./doc-utils\":1,\"./errors\":2}],17:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var memoize=require(\"./memoize\");function handleRecursiveCase(res){function replacerUnshift(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.shift();var match=pn.array[0]+pn.array[1];pn.array.unshift(match);pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.first=true;res.matches.unshift(pn);res.charactersAdded.unshift(0);return res.charactersAddedCumulative.unshift(0)}if(res.content.indexOf(\"<\")===-1&&res.content.indexOf(\">\")===-1){res.content.replace(/^()([^<>]*)$/,replacerUnshift)}var r=new RegExp(\"^()([^<]+)</(?:\"+res.tagsXmlArrayJoined+\")>\");res.content.replace(r,replacerUnshift);function replacerPush(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.last=true;res.matches.push(pn);res.charactersAdded.push(0);return res.charactersAddedCumulative.push(0)}r=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^>]+)$\");res.content.replace(r,replacerPush);return res}function xmlMatcher(content,tagsXmlArray){var res={};res.content=content;res.tagsXmlArray=tagsXmlArray;res.tagsXmlArrayJoined=res.tagsXmlArray.join(\"|\");var regexp=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^<>]*)</(?:\"+res.tagsXmlArrayJoined+\")>\",\"g\");res.matches=DocUtils.pregMatchAll(regexp,res.content);res.charactersAddedCumulative=res.matches.map(function(){return 0});res.charactersAdded=res.matches.map(function(){return 0});return handleRecursiveCase(res)}var memoized=memoize(xmlMatcher);module.exports=function(content,tagsXmlArray){return DocUtils.cloneDeep(memoized(content,tagsXmlArray))}},{\"./doc-utils\":1,\"./memoize\":5}],18:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var ScopeManager=require(\"./scope-manager\");var xmlMatcher=require(\"./xml-matcher\");var Errors=require(\"./errors\");var Lexer=require(\"./lexer\");var Parser=require(\"./parser.js\");var _render=require(\"./render.js\");function _getFullText(content,tagsXmlArray){var matcher=xmlMatcher(content,tagsXmlArray);var result=matcher.matches.map(function(match){return match.array[2]});return DocUtils.wordToUtf8(DocUtils.convertSpaces(result.join(\"\")))}module.exports=function(){function XmlTemplater(content,options){_classCallCheck(this,XmlTemplater);this.fromJson(options);this.setModules({inspect:{filePath:this.filePath}});this.load(content)}_createClass(XmlTemplater,[{key:\"load\",value:function load(content){if(typeof content!==\"string\"){var err=new Errors.XTInternalError(\"Content must be a string\");err.properties.id=\"xmltemplater_content_must_be_string\";throw err}this.content=content}},{key:\"setTags\",value:function setTags(tags){this.tags=tags!=null?tags:{};this.scopeManager=ScopeManager.createBaseScopeManager({tags:this.tags,parser:this.parser});return this}},{key:\"fromJson\",value:function fromJson(options){this.filePath=options.filePath;this.modules=options.modules;this.fileTypeConfig=options.fileTypeConfig;Object.keys(DocUtils.defaults).map(function(key){this[key]=options[key]!=null?options[key]:DocUtils.defaults[key]},this)}},{key:\"getFullText\",value:function getFullText(){return _getFullText(this.content,this.fileTypeConfig.tagsXmlTextArray)}},{key:\"setModules\",value:function setModules(obj){this.modules.forEach(function(module){module.set(obj)})}},{key:\"parse\",value:function parse(){this.xmllexed=Lexer.xmlparse(this.content,{text:this.fileTypeConfig.tagsXmlTextArray,other:this.fileTypeConfig.tagsXmlLexedArray});this.setModules({inspect:{xmllexed:this.xmllexed}});this.lexed=Lexer.parse(this.xmllexed,this.delimiters);this.setModules({inspect:{lexed:this.lexed}});this.parsed=Parser.parse(this.lexed,this.modules);this.setModules({inspect:{parsed:this.parsed}});this.postparsed=Parser.postparse(this.parsed,this.modules);return this}},{key:\"render\",value:function render(to){this.filePath=to;this.setModules({inspect:{postparsed:this.postparsed}});this.content=_render({compiled:this.postparsed,tags:this.tags,modules:this.modules,parser:this.parser,nullGetter:this.nullGetter,filePath:this.filePath});this.setModules({inspect:{content:this.content}});return this}}]);return XmlTemplater}()},{\"./doc-utils\":1,\"./errors\":2,\"./lexer\":4,\"./parser.js\":13,\"./render.js\":14,\"./scope-manager\":15,\"./xml-matcher\":17}],19:[function(require,module,exports){function DOMParser(options){this.options=options||{locator:{}}}DOMParser.prototype.parseFromString=function(source,mimeType){var options=this.options;var sax=new XMLReader;var domBuilder=options.domBuilder||new DOMHandler;var errorHandler=options.errorHandler;var locator=options.locator;var defaultNSMap=options.xmlns||{};var entityMap={lt:\"<\",gt:\">\",amp:\"&\",quot:'\"',apos:\"'\"};if(locator){domBuilder.setDocumentLocator(locator)}sax.errorHandler=buildErrorHandler(errorHandler,domBuilder,locator);sax.domBuilder=options.domBuilder||domBuilder;if(/\\/x?html?$/.test(mimeType)){entityMap.nbsp=\" \";entityMap.copy=\"©\";defaultNSMap[\"\"]=\"http://www.w3.org/1999/xhtml\"}defaultNSMap.xml=defaultNSMap.xml||\"http://www.w3.org/XML/1998/namespace\";if(source){sax.parse(source,defaultNSMap,entityMap)}else{sax.errorHandler.error(\"invalid doc source\")}return domBuilder.doc};function buildErrorHandler(errorImpl,domBuilder,locator){if(!errorImpl){if(domBuilder instanceof DOMHandler){return domBuilder}errorImpl=domBuilder}var errorHandler={};var isCallback=errorImpl instanceof Function;locator=locator||{};function build(key){var fn=errorImpl[key];if(!fn&&isCallback){fn=errorImpl.length==2?function(msg){errorImpl(key,msg)}:errorImpl}errorHandler[key]=fn&&function(msg){fn(\"[xmldom \"+key+\"]\\t\"+msg+_locator(locator))}||function(){}}build(\"warning\");build(\"error\");build(\"fatalError\");return errorHandler}function DOMHandler(){this.cdata=false}function position(locator,node){node.lineNumber=locator.lineNumber;node.columnNumber=locator.columnNumber}DOMHandler.prototype={startDocument:function(){this.doc=(new DOMImplementation).createDocument(null,null,null);if(this.locator){this.doc.documentURI=this.locator.systemId}},startElement:function(namespaceURI,localName,qName,attrs){var doc=this.doc;var el=doc.createElementNS(namespaceURI,qName||localName);var len=attrs.length;appendElement(this,el);this.currentElement=el;this.locator&&position(this.locator,el);for(var i=0;i<len;i++){var namespaceURI=attrs.getURI(i);var value=attrs.getValue(i);var qName=attrs.getQName(i);var attr=doc.createAttributeNS(namespaceURI,qName);this.locator&&position(attrs.getLocator(i),attr);attr.value=attr.nodeValue=value;el.setAttributeNode(attr)}},endElement:function(namespaceURI,localName,qName){var current=this.currentElement;var tagName=current.tagName;this.currentElement=current.parentNode},startPrefixMapping:function(prefix,uri){},endPrefixMapping:function(prefix){},processingInstruction:function(target,data){var ins=this.doc.createProcessingInstruction(target,data);this.locator&&position(this.locator,ins);appendElement(this,ins)},ignorableWhitespace:function(ch,start,length){},characters:function(chars,start,length){chars=_toString.apply(this,arguments);if(chars){if(this.cdata){var charNode=this.doc.createCDATASection(chars)}else{var charNode=this.doc.createTextNode(chars)}if(this.currentElement){this.currentElement.appendChild(charNode)}else if(/^\\s*$/.test(chars)){this.doc.appendChild(charNode)}this.locator&&position(this.locator,charNode)}},skippedEntity:function(name){},endDocument:function(){this.doc.normalize()},setDocumentLocator:function(locator){if(this.locator=locator){locator.lineNumber=0}},comment:function(chars,start,length){chars=_toString.apply(this,arguments);var comm=this.doc.createComment(chars);this.locator&&position(this.locator,comm);appendElement(this,comm)},startCDATA:function(){this.cdata=true},endCDATA:function(){this.cdata=false},startDTD:function(name,publicId,systemId){var impl=this.doc.implementation;if(impl&&impl.createDocumentType){var dt=impl.createDocumentType(name,publicId,systemId);this.locator&&position(this.locator,dt);appendElement(this,dt)}},warning:function(error){console.warn(\"[xmldom warning]\\t\"+error,_locator(this.locator))},error:function(error){console.error(\"[xmldom error]\\t\"+error,_locator(this.locator))},fatalError:function(error){console.error(\"[xmldom fatalError]\\t\"+error,_locator(this.locator));throw error}};function _locator(l){if(l){return\"\\n@\"+(l.systemId||\"\")+\"#[line:\"+l.lineNumber+\",col:\"+l.columnNumber+\"]\"}}function _toString(chars,start,length){if(typeof chars==\"string\"){return chars.substr(start,length)}else{if(chars.length>=start+length||start){return new java.lang.String(chars,start,length)+\"\"}return chars}}\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){DOMHandler.prototype[key]=function(){return null}});function appendElement(hander,node){if(!hander.currentElement){hander.doc.appendChild(node)}else{hander.currentElement.appendChild(node)}}var XMLReader=require(\"./sax\").XMLReader;var DOMImplementation=exports.DOMImplementation=require(\"./dom\").DOMImplementation;exports.XMLSerializer=require(\"./dom\").XMLSerializer;exports.DOMParser=DOMParser},{\"./dom\":20,\"./sax\":21}],20:[function(require,module,exports){function copy(src,dest){for(var p in src){dest[p]=src[p]}}function _extends(Class,Super){var pt=Class.prototype;if(Object.create){var ppt=Object.create(Super.prototype);pt.__proto__=ppt}if(!(pt instanceof Super)){function t(){}t.prototype=Super.prototype;t=new t;copy(pt,t);Class.prototype=pt=t}if(pt.constructor!=Class){if(typeof Class!=\"function\"){console.error(\"unknow Class:\"+Class)}pt.constructor=Class}}var htmlns=\"http://www.w3.org/1999/xhtml\";var NodeType={};var ELEMENT_NODE=NodeType.ELEMENT_NODE=1;var ATTRIBUTE_NODE=NodeType.ATTRIBUTE_NODE=2;var TEXT_NODE=NodeType.TEXT_NODE=3;var CDATA_SECTION_NODE=NodeType.CDATA_SECTION_NODE=4;var ENTITY_REFERENCE_NODE=NodeType.ENTITY_REFERENCE_NODE=5;var ENTITY_NODE=NodeType.ENTITY_NODE=6;var PROCESSING_INSTRUCTION_NODE=NodeType.PROCESSING_INSTRUCTION_NODE=7;var COMMENT_NODE=NodeType.COMMENT_NODE=8;var DOCUMENT_NODE=NodeType.DOCUMENT_NODE=9;var DOCUMENT_TYPE_NODE=NodeType.DOCUMENT_TYPE_NODE=10;var DOCUMENT_FRAGMENT_NODE=NodeType.DOCUMENT_FRAGMENT_NODE=11;var NOTATION_NODE=NodeType.NOTATION_NODE=12;var ExceptionCode={};var ExceptionMessage={};var INDEX_SIZE_ERR=ExceptionCode.INDEX_SIZE_ERR=(ExceptionMessage[1]=\"Index size error\",1);var DOMSTRING_SIZE_ERR=ExceptionCode.DOMSTRING_SIZE_ERR=(ExceptionMessage[2]=\"DOMString size error\",2);var HIERARCHY_REQUEST_ERR=ExceptionCode.HIERARCHY_REQUEST_ERR=(ExceptionMessage[3]=\"Hierarchy request error\",3);var WRONG_DOCUMENT_ERR=ExceptionCode.WRONG_DOCUMENT_ERR=(ExceptionMessage[4]=\"Wrong document\",4);var INVALID_CHARACTER_ERR=ExceptionCode.INVALID_CHARACTER_ERR=(ExceptionMessage[5]=\"Invalid character\",5);var NO_DATA_ALLOWED_ERR=ExceptionCode.NO_DATA_ALLOWED_ERR=(ExceptionMessage[6]=\"No data allowed\",6);var NO_MODIFICATION_ALLOWED_ERR=ExceptionCode.NO_MODIFICATION_ALLOWED_ERR=(ExceptionMessage[7]=\"No modification allowed\",7);var NOT_FOUND_ERR=ExceptionCode.NOT_FOUND_ERR=(ExceptionMessage[8]=\"Not found\",8);var NOT_SUPPORTED_ERR=ExceptionCode.NOT_SUPPORTED_ERR=(ExceptionMessage[9]=\"Not supported\",9);var INUSE_ATTRIBUTE_ERR=ExceptionCode.INUSE_ATTRIBUTE_ERR=(ExceptionMessage[10]=\"Attribute in use\",10);var INVALID_STATE_ERR=ExceptionCode.INVALID_STATE_ERR=(ExceptionMessage[11]=\"Invalid state\",11);var SYNTAX_ERR=ExceptionCode.SYNTAX_ERR=(ExceptionMessage[12]=\"Syntax error\",12);var INVALID_MODIFICATION_ERR=ExceptionCode.INVALID_MODIFICATION_ERR=(ExceptionMessage[13]=\"Invalid modification\",13);var NAMESPACE_ERR=ExceptionCode.NAMESPACE_ERR=(ExceptionMessage[14]=\"Invalid namespace\",14);var INVALID_ACCESS_ERR=ExceptionCode.INVALID_ACCESS_ERR=(ExceptionMessage[15]=\"Invalid access\",15);function DOMException(code,message){if(message instanceof Error){var error=message}else{error=this;Error.call(this,ExceptionMessage[code]);this.message=ExceptionMessage[code];if(Error.captureStackTrace)Error.captureStackTrace(this,DOMException)}error.code=code;if(message)this.message=this.message+\": \"+message;return error}DOMException.prototype=Error.prototype;copy(ExceptionCode,DOMException);function NodeList(){}NodeList.prototype={length:0,item:function(index){return this[index]||null},toString:function(isHTML,nodeFilter){for(var buf=[],i=0;i<this.length;i++){serializeToString(this[i],buf,isHTML,nodeFilter)}return buf.join(\"\")}};function LiveNodeList(node,refresh){this._node=node;this._refresh=refresh;_updateLiveList(this)}function _updateLiveList(list){var inc=list._node._inc||list._node.ownerDocument._inc;if(list._inc!=inc){var ls=list._refresh(list._node);__set__(list,\"length\",ls.length);copy(ls,list);list._inc=inc}}LiveNodeList.prototype.item=function(i){_updateLiveList(this);return this[i]};_extends(LiveNodeList,NodeList);function NamedNodeMap(){}function _findNodeIndex(list,node){var i=list.length;while(i--){if(list[i]===node){return i}}}function _addNamedNode(el,list,newAttr,oldAttr){if(oldAttr){list[_findNodeIndex(list,oldAttr)]=newAttr}else{list[list.length++]=newAttr}if(el){newAttr.ownerElement=el;var doc=el.ownerDocument;if(doc){oldAttr&&_onRemoveAttribute(doc,el,oldAttr);_onAddAttribute(doc,el,newAttr)}}}function _removeNamedNode(el,list,attr){var i=_findNodeIndex(list,attr);if(i>=0){var lastIndex=list.length-1;while(i<lastIndex){list[i]=list[++i]}list.length=lastIndex;if(el){var doc=el.ownerDocument;if(doc){_onRemoveAttribute(doc,el,attr);attr.ownerElement=null}}}else{throw DOMException(NOT_FOUND_ERR,new Error(el.tagName+\"@\"+attr))}}NamedNodeMap.prototype={length:0,item:NodeList.prototype.item,getNamedItem:function(key){var i=this.length;while(i--){var attr=this[i];if(attr.nodeName==key){return attr}}},setNamedItem:function(attr){var el=attr.ownerElement;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}var oldAttr=this.getNamedItem(attr.nodeName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},setNamedItemNS:function(attr){var el=attr.ownerElement,oldAttr;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}oldAttr=this.getNamedItemNS(attr.namespaceURI,attr.localName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},removeNamedItem:function(key){var attr=this.getNamedItem(key);_removeNamedNode(this._ownerElement,this,attr);return attr},removeNamedItemNS:function(namespaceURI,localName){var attr=this.getNamedItemNS(namespaceURI,localName);_removeNamedNode(this._ownerElement,this,attr);return attr},getNamedItemNS:function(namespaceURI,localName){var i=this.length;while(i--){var node=this[i];if(node.localName==localName&&node.namespaceURI==namespaceURI){return node}}return null}};function DOMImplementation(features){this._features={};if(features){for(var feature in features){this._features=features[feature]}}}DOMImplementation.prototype={hasFeature:function(feature,version){var versions=this._features[feature.toLowerCase()];if(versions&&(!version||version in versions)){return true}else{return false}},createDocument:function(namespaceURI,qualifiedName,doctype){var doc=new Document;doc.implementation=this;doc.childNodes=new NodeList;doc.doctype=doctype;if(doctype){doc.appendChild(doctype)}if(qualifiedName){var root=doc.createElementNS(namespaceURI,qualifiedName);doc.appendChild(root)}return doc},createDocumentType:function(qualifiedName,publicId,systemId){var node=new DocumentType;node.name=qualifiedName;node.nodeName=qualifiedName;node.publicId=publicId;node.systemId=systemId;return node}};function Node(){}Node.prototype={firstChild:null,lastChild:null,previousSibling:null,nextSibling:null,attributes:null,parentNode:null,childNodes:null,ownerDocument:null,nodeValue:null,namespaceURI:null,prefix:null,localName:null,insertBefore:function(newChild,refChild){return _insertBefore(this,newChild,refChild)},replaceChild:function(newChild,oldChild){this.insertBefore(newChild,oldChild);if(oldChild){this.removeChild(oldChild)}},removeChild:function(oldChild){return _removeChild(this,oldChild)},appendChild:function(newChild){return this.insertBefore(newChild,null)},hasChildNodes:function(){return this.firstChild!=null},cloneNode:function(deep){return cloneNode(this.ownerDocument||this,this,deep)},normalize:function(){var child=this.firstChild;while(child){var next=child.nextSibling;if(next&&next.nodeType==TEXT_NODE&&child.nodeType==TEXT_NODE){this.removeChild(next);child.appendData(next.data)}else{child.normalize();child=next}}},isSupported:function(feature,version){return this.ownerDocument.implementation.hasFeature(feature,version)},hasAttributes:function(){return this.attributes.length>0},lookupPrefix:function(namespaceURI){var el=this;while(el){var map=el._nsMap;if(map){for(var n in map){if(map[n]==namespaceURI){return n}}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},lookupNamespaceURI:function(prefix){var el=this;while(el){var map=el._nsMap;if(map){if(prefix in map){return map[prefix]}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},isDefaultNamespace:function(namespaceURI){var prefix=this.lookupPrefix(namespaceURI);return prefix==null}};function _xmlEncoder(c){return c==\"<\"&&\"&lt;\"||c==\">\"&&\"&gt;\"||c==\"&\"&&\"&amp;\"||c=='\"'&&\"&quot;\"||\"&#\"+c.charCodeAt()+\";\"}copy(NodeType,Node);copy(NodeType,Node.prototype);function _visitNode(node,callback){if(callback(node)){return true}if(node=node.firstChild){do{if(_visitNode(node,callback)){return true}}while(node=node.nextSibling)}}function Document(){}function _onAddAttribute(doc,el,newAttr){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){el._nsMap[newAttr.prefix?newAttr.localName:\"\"]=newAttr.value}}function _onRemoveAttribute(doc,el,newAttr,remove){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){delete el._nsMap[newAttr.prefix?newAttr.localName:\"\"]}}function _onUpdateChild(doc,el,newChild){if(doc&&doc._inc){doc._inc++;var cs=el.childNodes;if(newChild){cs[cs.length++]=newChild}else{var child=el.firstChild;var i=0;while(child){cs[i++]=child;child=child.nextSibling}cs.length=i}}}function _removeChild(parentNode,child){var previous=child.previousSibling;var next=child.nextSibling;if(previous){previous.nextSibling=next}else{parentNode.firstChild=next}if(next){next.previousSibling=previous}else{parentNode.lastChild=previous}_onUpdateChild(parentNode.ownerDocument,parentNode);return child}function _insertBefore(parentNode,newChild,nextChild){var cp=newChild.parentNode;if(cp){cp.removeChild(newChild)}if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){var newFirst=newChild.firstChild;if(newFirst==null){return newChild}var newLast=newChild.lastChild}else{newFirst=newLast=newChild}var pre=nextChild?nextChild.previousSibling:parentNode.lastChild;newFirst.previousSibling=pre;newLast.nextSibling=nextChild;if(pre){pre.nextSibling=newFirst}else{parentNode.firstChild=newFirst}if(nextChild==null){parentNode.lastChild=newLast}else{nextChild.previousSibling=newLast}do{newFirst.parentNode=parentNode}while(newFirst!==newLast&&(newFirst=newFirst.nextSibling));_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){newChild.firstChild=newChild.lastChild=null}return newChild}function _appendSingleChild(parentNode,newChild){var cp=newChild.parentNode;if(cp){var pre=parentNode.lastChild;cp.removeChild(newChild);var pre=parentNode.lastChild}var pre=parentNode.lastChild;newChild.parentNode=parentNode;newChild.previousSibling=pre;newChild.nextSibling=null;if(pre){pre.nextSibling=newChild}else{parentNode.firstChild=newChild}parentNode.lastChild=newChild;_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);return newChild}Document.prototype={nodeName:\"#document\",nodeType:DOCUMENT_NODE,doctype:null,documentElement:null,_inc:1,insertBefore:function(newChild,refChild){if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){var child=newChild.firstChild;while(child){var next=child.nextSibling;this.insertBefore(child,refChild);child=next}return newChild}if(this.documentElement==null&&newChild.nodeType==ELEMENT_NODE){this.documentElement=newChild}return _insertBefore(this,newChild,refChild),newChild.ownerDocument=this,newChild},removeChild:function(oldChild){if(this.documentElement==oldChild){this.documentElement=null}return _removeChild(this,oldChild)},importNode:function(importedNode,deep){return importNode(this,importedNode,deep)},getElementById:function(id){var rtv=null;_visitNode(this.documentElement,function(node){if(node.nodeType==ELEMENT_NODE){if(node.getAttribute(\"id\")==id){rtv=node;return true}}});return rtv},createElement:function(tagName){var node=new Element;node.ownerDocument=this;node.nodeName=tagName;node.tagName=tagName;node.childNodes=new NodeList;var attrs=node.attributes=new NamedNodeMap;attrs._ownerElement=node;return node},createDocumentFragment:function(){var node=new DocumentFragment;node.ownerDocument=this;node.childNodes=new NodeList;return node},createTextNode:function(data){var node=new Text;node.ownerDocument=this;node.appendData(data);return node},createComment:function(data){var node=new Comment;node.ownerDocument=this;node.appendData(data);return node},createCDATASection:function(data){var node=new CDATASection;node.ownerDocument=this;node.appendData(data);return node},createProcessingInstruction:function(target,data){var node=new ProcessingInstruction;node.ownerDocument=this;node.tagName=node.target=target;node.nodeValue=node.data=data;return node},createAttribute:function(name){var node=new Attr;node.ownerDocument=this;node.name=name;node.nodeName=name;node.localName=name;node.specified=true;return node},createEntityReference:function(name){var node=new EntityReference;node.ownerDocument=this;node.nodeName=name;return node},createElementNS:function(namespaceURI,qualifiedName){var node=new Element;var pl=qualifiedName.split(\":\");var attrs=node.attributes=new NamedNodeMap;node.childNodes=new NodeList;node.ownerDocument=this;node.nodeName=qualifiedName;node.tagName=qualifiedName;node.namespaceURI=namespaceURI;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}attrs._ownerElement=node;return node},createAttributeNS:function(namespaceURI,qualifiedName){var node=new Attr;var pl=qualifiedName.split(\":\");node.ownerDocument=this;node.nodeName=qualifiedName;node.name=qualifiedName;node.namespaceURI=namespaceURI;node.specified=true;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}return node}};_extends(Document,Node);function Element(){this._nsMap={}}Element.prototype={nodeType:ELEMENT_NODE,hasAttribute:function(name){return this.getAttributeNode(name)!=null},getAttribute:function(name){var attr=this.getAttributeNode(name);return attr&&attr.value||\"\"},getAttributeNode:function(name){return this.attributes.getNamedItem(name)},setAttribute:function(name,value){var attr=this.ownerDocument.createAttribute(name);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},removeAttribute:function(name){var attr=this.getAttributeNode(name);attr&&this.removeAttributeNode(attr)},appendChild:function(newChild){if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){return this.insertBefore(newChild,null)}else{return _appendSingleChild(this,newChild)}},setAttributeNode:function(newAttr){return this.attributes.setNamedItem(newAttr)},setAttributeNodeNS:function(newAttr){return this.attributes.setNamedItemNS(newAttr)},removeAttributeNode:function(oldAttr){return this.attributes.removeNamedItem(oldAttr.nodeName)},removeAttributeNS:function(namespaceURI,localName){var old=this.getAttributeNodeNS(namespaceURI,localName);old&&this.removeAttributeNode(old)},hasAttributeNS:function(namespaceURI,localName){return this.getAttributeNodeNS(namespaceURI,localName)!=null},getAttributeNS:function(namespaceURI,localName){var attr=this.getAttributeNodeNS(namespaceURI,localName);return attr&&attr.value||\"\"},setAttributeNS:function(namespaceURI,qualifiedName,value){var attr=this.ownerDocument.createAttributeNS(namespaceURI,qualifiedName);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},getAttributeNodeNS:function(namespaceURI,localName){return this.attributes.getNamedItemNS(namespaceURI,localName)},getElementsByTagName:function(tagName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType==ELEMENT_NODE&&(tagName===\"*\"||node.tagName==tagName)){ls.push(node)}});return ls})},getElementsByTagNameNS:function(namespaceURI,localName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType===ELEMENT_NODE&&(namespaceURI===\"*\"||node.namespaceURI===namespaceURI)&&(localName===\"*\"||node.localName==localName)){ls.push(node)}});return ls})}};Document.prototype.getElementsByTagName=Element.prototype.getElementsByTagName;Document.prototype.getElementsByTagNameNS=Element.prototype.getElementsByTagNameNS;_extends(Element,Node);function Attr(){}Attr.prototype.nodeType=ATTRIBUTE_NODE;_extends(Attr,Node);function CharacterData(){}CharacterData.prototype={data:\"\",substringData:function(offset,count){return this.data.substring(offset,offset+count)},appendData:function(text){text=this.data+text;this.nodeValue=this.data=text;this.length=text.length},insertData:function(offset,text){this.replaceData(offset,0,text)},appendChild:function(newChild){throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])},deleteData:function(offset,count){this.replaceData(offset,count,\"\")},replaceData:function(offset,count,text){var start=this.data.substring(0,offset);var end=this.data.substring(offset+count);text=start+text+end;this.nodeValue=this.data=text;this.length=text.length}};_extends(CharacterData,Node);function Text(){}Text.prototype={nodeName:\"#text\",nodeType:TEXT_NODE,splitText:function(offset){var text=this.data;var newText=text.substring(offset);text=text.substring(0,offset);this.data=this.nodeValue=text;this.length=text.length;var newNode=this.ownerDocument.createTextNode(newText);if(this.parentNode){this.parentNode.insertBefore(newNode,this.nextSibling)}return newNode}};_extends(Text,CharacterData);function Comment(){}Comment.prototype={nodeName:\"#comment\",nodeType:COMMENT_NODE};_extends(Comment,CharacterData);function CDATASection(){}CDATASection.prototype={nodeName:\"#cdata-section\",nodeType:CDATA_SECTION_NODE};_extends(CDATASection,CharacterData);function DocumentType(){}DocumentType.prototype.nodeType=DOCUMENT_TYPE_NODE;_extends(DocumentType,Node);function Notation(){}Notation.prototype.nodeType=NOTATION_NODE;_extends(Notation,Node);function Entity(){}Entity.prototype.nodeType=ENTITY_NODE;_extends(Entity,Node);function EntityReference(){}EntityReference.prototype.nodeType=ENTITY_REFERENCE_NODE;_extends(EntityReference,Node);function DocumentFragment(){}DocumentFragment.prototype.nodeName=\"#document-fragment\";DocumentFragment.prototype.nodeType=DOCUMENT_FRAGMENT_NODE;_extends(DocumentFragment,Node);function ProcessingInstruction(){}ProcessingInstruction.prototype.nodeType=PROCESSING_INSTRUCTION_NODE;_extends(ProcessingInstruction,Node);function XMLSerializer(){}XMLSerializer.prototype.serializeToString=function(node,isHtml,nodeFilter){return nodeSerializeToString.call(node,isHtml,nodeFilter)};Node.prototype.toString=nodeSerializeToString;function nodeSerializeToString(isHtml,nodeFilter){var buf=[];var refNode=this.nodeType==9?this.documentElement:this;var prefix=refNode.prefix;var uri=refNode.namespaceURI;if(uri&&prefix==null){var prefix=refNode.lookupPrefix(uri);if(prefix==null){var visibleNamespaces=[{namespace:uri,prefix:null}]}}serializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);return buf.join(\"\")}function needNamespaceDefine(node,isHTML,visibleNamespaces){var prefix=node.prefix||\"\";var uri=node.namespaceURI;if(!prefix&&!uri){return false}if(prefix===\"xml\"&&uri===\"http://www.w3.org/XML/1998/namespace\"||uri==\"http://www.w3.org/2000/xmlns/\"){return false}var i=visibleNamespaces.length;while(i--){var ns=visibleNamespaces[i];if(ns.prefix==prefix){return ns.namespace!=uri}}return true}function serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){if(nodeFilter){node=nodeFilter(node);if(node){if(typeof node==\"string\"){buf.push(node);return}}else{return}}switch(node.nodeType){case ELEMENT_NODE:if(!visibleNamespaces)visibleNamespaces=[];var startVisibleNamespaces=visibleNamespaces.length;var attrs=node.attributes;var len=attrs.length;var child=node.firstChild;var nodeName=node.tagName;isHTML=htmlns===node.namespaceURI||isHTML;buf.push(\"<\",nodeName);for(var i=0;i<len;i++){var attr=attrs.item(i);if(attr.prefix==\"xmlns\"){visibleNamespaces.push({prefix:attr.localName,namespace:attr.value})}else if(attr.nodeName==\"xmlns\"){visibleNamespaces.push({prefix:\"\",namespace:attr.value})}}for(var i=0;i<len;i++){var attr=attrs.item(i);if(needNamespaceDefine(attr,isHTML,visibleNamespaces)){var prefix=attr.prefix||\"\";var uri=attr.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}serializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces)}if(needNamespaceDefine(node,isHTML,visibleNamespaces)){var prefix=node.prefix||\"\";var uri=node.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}if(child||isHTML&&!/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){buf.push(\">\");if(isHTML&&/^script$/i.test(nodeName)){while(child){if(child.data){buf.push(child.data)}else{serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces)}child=child.nextSibling}}else{while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}}buf.push(\"</\",nodeName,\">\")}else{buf.push(\"/>\")}return;case DOCUMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var child=node.firstChild;while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}return;case ATTRIBUTE_NODE:return buf.push(\" \",node.name,'=\"',node.value.replace(/[<&\"]/g,_xmlEncoder),'\"');case TEXT_NODE:return buf.push(node.data.replace(/[<&]/g,_xmlEncoder));case CDATA_SECTION_NODE:return buf.push(\"<![CDATA[\",node.data,\"]]>\");case COMMENT_NODE:return buf.push(\"\\x3c!--\",node.data,\"--\\x3e\");case DOCUMENT_TYPE_NODE:var pubid=node.publicId;var sysid=node.systemId;buf.push(\"<!DOCTYPE \",node.name);if(pubid){buf.push(' PUBLIC \"',pubid);if(sysid&&sysid!=\".\"){buf.push('\" \"',sysid)}buf.push('\">')}else if(sysid&&sysid!=\".\"){buf.push(' SYSTEM \"',sysid,'\">')}else{var sub=node.internalSubset;if(sub){buf.push(\" [\",sub,\"]\")}buf.push(\">\")}return;case PROCESSING_INSTRUCTION_NODE:return buf.push(\"<?\",node.target,\" \",node.data,\"?>\");case ENTITY_REFERENCE_NODE:return buf.push(\"&\",node.nodeName,\";\");default:buf.push(\"??\",node.nodeName)}}function importNode(doc,node,deep){var node2;switch(node.nodeType){case ELEMENT_NODE:node2=node.cloneNode(false);node2.ownerDocument=doc;case DOCUMENT_FRAGMENT_NODE:break;case ATTRIBUTE_NODE:deep=true;break}if(!node2){node2=node.cloneNode(false)}node2.ownerDocument=doc;node2.parentNode=null;if(deep){var child=node.firstChild;while(child){node2.appendChild(importNode(doc,child,deep));child=child.nextSibling}}return node2}function cloneNode(doc,node,deep){var node2=new node.constructor;for(var n in node){var v=node[n];if(typeof v!=\"object\"){if(v!=node2[n]){node2[n]=v}}}if(node.childNodes){node2.childNodes=new NodeList}node2.ownerDocument=doc;switch(node2.nodeType){case ELEMENT_NODE:var attrs=node.attributes;var attrs2=node2.attributes=new NamedNodeMap;var len=attrs.length;attrs2._ownerElement=node2;for(var i=0;i<len;i++){node2.setAttributeNode(cloneNode(doc,attrs.item(i),true))}break;case ATTRIBUTE_NODE:deep=true}if(deep){var child=node.firstChild;while(child){node2.appendChild(cloneNode(doc,child,deep));child=child.nextSibling}}return node2}function __set__(object,key,value){object[key]=value}try{if(Object.defineProperty){Object.defineProperty(LiveNodeList.prototype,\"length\",{get:function(){_updateLiveList(this);return this.$$length}});Object.defineProperty(Node.prototype,\"textContent\",{get:function(){return getTextContent(this)},set:function(data){switch(this.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:while(this.firstChild){this.removeChild(this.firstChild)}if(data||String(data)){this.appendChild(this.ownerDocument.createTextNode(data))}break;default:this.data=data;this.value=data;this.nodeValue=data}}});function getTextContent(node){switch(node.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var buf=[];node=node.firstChild;while(node){if(node.nodeType!==7&&node.nodeType!==8){buf.push(getTextContent(node))}node=node.nextSibling}return buf.join(\"\");default:return node.nodeValue}}__set__=function(object,key,value){object[\"$$\"+key]=value}}}catch(e){}exports.DOMImplementation=DOMImplementation;exports.XMLSerializer=XMLSerializer},{}],21:[function(require,module,exports){var nameStartChar=/[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;var nameChar=new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");var tagNamePattern=new RegExp(\"^\"+nameStartChar.source+nameChar.source+\"*(?::\"+nameStartChar.source+nameChar.source+\"*)?$\");var S_TAG=0;var S_ATTR=1;var S_ATTR_SPACE=2;var S_EQ=3;var S_ATTR_NOQUOT_VALUE=4;var S_ATTR_END=5;var S_TAG_SPACE=6;var S_TAG_CLOSE=7;function XMLReader(){}XMLReader.prototype={parse:function(source,defaultNSMap,entityMap){var domBuilder=this.domBuilder;domBuilder.startDocument();_copy(defaultNSMap,defaultNSMap={});parse(source,defaultNSMap,entityMap,domBuilder,this.errorHandler);domBuilder.endDocument()}};function parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){function fixedFromCharCode(code){if(code>65535){code-=65536;var surrogate1=55296+(code>>10),surrogate2=56320+(code&1023);return String.fromCharCode(surrogate1,surrogate2)}else{return String.fromCharCode(code)}}function entityReplacer(a){var k=a.slice(1,-1);if(k in entityMap){return entityMap[k]}else if(k.charAt(0)===\"#\"){return fixedFromCharCode(parseInt(k.substr(1).replace(\"x\",\"0x\")))}else{errorHandler.error(\"entity not found:\"+a);return a}}function appendText(end){if(end>start){var xt=source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);locator&&position(start);domBuilder.characters(xt,0,end-start);start=end}}function position(p,m){while(p>=lineEnd&&(m=linePattern.exec(source))){lineStart=m.index;lineEnd=lineStart+m[0].length;locator.lineNumber++}locator.columnNumber=p-lineStart+1}var lineStart=0;var lineEnd=0;var linePattern=/.*(?:\\r\\n?|\\n)|.*$/g;var locator=domBuilder.locator;var parseStack=[{currentNSMap:defaultNSMapCopy}];var closeMap={};var start=0;while(true){try{var tagStart=source.indexOf(\"<\",start);if(tagStart<0){if(!source.substr(start).match(/^\\s*$/)){var doc=domBuilder.doc;var text=doc.createTextNode(source.substr(start));doc.appendChild(text);domBuilder.currentElement=text}return}if(tagStart>start){appendText(tagStart)}switch(source.charAt(tagStart+1)){case\"/\":var end=source.indexOf(\">\",tagStart+3);var tagName=source.substring(tagStart+2,end);var config=parseStack.pop();if(end<0){tagName=source.substring(tagStart+2).replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" is not complete:\"+config.tagName);end=tagStart+1+tagName.length}else if(tagName.match(/\\s</)){tagName=tagName.replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" maybe not complete\");end=tagStart+1+tagName.length}var localNSMap=config.localNSMap;var endMatch=config.tagName==tagName;var endIgnoreCaseMach=endMatch||config.tagName&&config.tagName.toLowerCase()==tagName.toLowerCase();if(endIgnoreCaseMach){domBuilder.endElement(config.uri,config.localName,tagName);if(localNSMap){for(var prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}if(!endMatch){errorHandler.fatalError(\"end tag name: \"+tagName+\" is not match the current start tagName:\"+config.tagName)}}else{parseStack.push(config)}end++;break;case\"?\":locator&&position(tagStart);end=parseInstruction(source,tagStart,domBuilder);break;case\"!\":locator&&position(tagStart);end=parseDCC(source,tagStart,domBuilder,errorHandler);break;default:locator&&position(tagStart);var el=new ElementAttributes;var currentNSMap=parseStack[parseStack.length-1].currentNSMap;var end=parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);var len=el.length;if(!el.closed&&fixSelfClosed(source,end,el.tagName,closeMap)){el.closed=true;if(!entityMap.nbsp){errorHandler.warning(\"unclosed xml attribute\")}}if(locator&&len){var locator2=copyLocator(locator,{});for(var i=0;i<len;i++){var a=el[i];position(a.offset);a.locator=copyLocator(locator,{})}domBuilder.locator=locator2;if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}domBuilder.locator=locator}else{if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}}if(el.uri===\"http://www.w3.org/1999/xhtml\"&&!el.closed){end=parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)}else{end++}}}catch(e){errorHandler.error(\"element parse error: \"+e);end=-1}if(end>start){start=end}else{appendText(Math.max(tagStart,start)+1)}}}function copyLocator(f,t){t.lineNumber=f.lineNumber;t.columnNumber=f.columnNumber;return t}function parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){var attrName;var value;var p=++start;var s=S_TAG;while(true){var c=source.charAt(p);switch(c){case\"=\":if(s===S_ATTR){attrName=source.slice(start,p);s=S_EQ}else if(s===S_ATTR_SPACE){s=S_EQ}else{throw new Error(\"attribute equal must after attrName\")}break;case\"'\":case'\"':if(s===S_EQ||s===S_ATTR){if(s===S_ATTR){errorHandler.warning('attribute value must after \"=\"');attrName=source.slice(start,p)}start=p+1;p=source.indexOf(c,start);if(p>0){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start-1);s=S_ATTR_END}else{throw new Error(\"attribute value no end '\"+c+\"' match\")}}else if(s==S_ATTR_NOQUOT_VALUE){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start);errorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+\")!!\");start=p+1;s=S_ATTR_END}else{throw new Error('attribute value must after \"=\"')}break;case\"/\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:s=S_TAG_CLOSE;el.closed=true;case S_ATTR_NOQUOT_VALUE:case S_ATTR:case S_ATTR_SPACE:break;default:throw new Error(\"attribute invalid close char('/')\")}break;case\"\":errorHandler.error(\"unexpected end of input\");if(s==S_TAG){el.setTagName(source.slice(start,p))}return p;case\">\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:break;case S_ATTR_NOQUOT_VALUE:case S_ATTR:value=source.slice(start,p);if(value.slice(-1)===\"/\"){el.closed=true;value=value.slice(0,-1)}case S_ATTR_SPACE:if(s===S_ATTR_SPACE){value=attrName}if(s==S_ATTR_NOQUOT_VALUE){errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value.replace(/&#?\\w+;/g,entityReplacer),start)}else{if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!value.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')}el.add(value,value,start)}break;case S_EQ:throw new Error(\"attribute value missed!!\")}return p;case\"\":c=\" \";default:if(c<=\" \"){switch(s){case S_TAG:el.setTagName(source.slice(start,p));s=S_TAG_SPACE;break;case S_ATTR:attrName=source.slice(start,p);s=S_ATTR_SPACE;break;case S_ATTR_NOQUOT_VALUE:var value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value,start);case S_ATTR_END:s=S_TAG_SPACE;break}}else{switch(s){case S_ATTR_SPACE:var tagName=el.tagName;if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!attrName.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')}el.add(attrName,attrName,start);start=p;s=S_ATTR;break;case S_ATTR_END:errorHandler.warning('attribute space is required\"'+attrName+'\"!!');case S_TAG_SPACE:s=S_ATTR;start=p;break;case S_EQ:s=S_ATTR_NOQUOT_VALUE;start=p;break;case S_TAG_CLOSE:throw new Error(\"elements closed character '/' and '>' must be connected to\")}}}p++}}function appendElement(el,domBuilder,currentNSMap){var tagName=el.tagName;var localNSMap=null;var i=el.length;while(i--){var a=el[i];var qName=a.qName;var value=a.value;var nsp=qName.indexOf(\":\");if(nsp>0){var prefix=a.prefix=qName.slice(0,nsp);var localName=qName.slice(nsp+1);var nsPrefix=prefix===\"xmlns\"&&localName}else{localName=qName;prefix=null;nsPrefix=qName===\"xmlns\"&&\"\"}a.localName=localName;if(nsPrefix!==false){if(localNSMap==null){localNSMap={};_copy(currentNSMap,currentNSMap={})}currentNSMap[nsPrefix]=localNSMap[nsPrefix]=value;a.uri=\"http://www.w3.org/2000/xmlns/\";domBuilder.startPrefixMapping(nsPrefix,value)}}var i=el.length;while(i--){a=el[i];var prefix=a.prefix;if(prefix){if(prefix===\"xml\"){a.uri=\"http://www.w3.org/XML/1998/namespace\"}if(prefix!==\"xmlns\"){a.uri=currentNSMap[prefix||\"\"]}}}var nsp=tagName.indexOf(\":\");if(nsp>0){prefix=el.prefix=tagName.slice(0,nsp);localName=el.localName=tagName.slice(nsp+1)}else{prefix=null;localName=el.localName=tagName}var ns=el.uri=currentNSMap[prefix||\"\"];domBuilder.startElement(ns,localName,tagName,el);if(el.closed){domBuilder.endElement(ns,localName,tagName);if(localNSMap){for(prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}}else{el.currentNSMap=currentNSMap;el.localNSMap=localNSMap;return true}}function parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){if(/^(?:script|textarea)$/i.test(tagName)){var elEndStart=source.indexOf(\"</\"+tagName+\">\",elStartEnd);var text=source.substring(elStartEnd+1,elEndStart);if(/[&<]/.test(text)){if(/^script$/i.test(tagName)){domBuilder.characters(text,0,text.length);return elEndStart}text=text.replace(/&#?\\w+;/g,entityReplacer);domBuilder.characters(text,0,text.length);return elEndStart}}return elStartEnd+1}function fixSelfClosed(source,elStartEnd,tagName,closeMap){var pos=closeMap[tagName];if(pos==null){pos=source.lastIndexOf(\"</\"+tagName+\">\");if(pos<elStartEnd){pos=source.lastIndexOf(\"</\"+tagName)}closeMap[tagName]=pos}return pos<elStartEnd}function _copy(source,target){for(var n in source){target[n]=source[n]}}function parseDCC(source,start,domBuilder,errorHandler){var next=source.charAt(start+2);switch(next){case\"-\":if(source.charAt(start+3)===\"-\"){var end=source.indexOf(\"--\\x3e\",start+4);if(end>start){domBuilder.comment(source,start+4,end-start-4);return end+3}else{errorHandler.error(\"Unclosed comment\");return-1}}else{return-1}default:if(source.substr(start+3,6)==\"CDATA[\"){var end=source.indexOf(\"]]>\",start+9);domBuilder.startCDATA();domBuilder.characters(source,start+9,end-start-9);domBuilder.endCDATA();return end+3}var matchs=split(source,start);var len=matchs.length;if(len>1&&/!doctype/i.test(matchs[0][0])){var name=matchs[1][0];var pubid=len>3&&/^public$/i.test(matchs[2][0])&&matchs[3][0];var sysid=len>4&&matchs[4][0];var lastMatch=matchs[len-1];domBuilder.startDTD(name,pubid&&pubid.replace(/^(['\"])(.*?)\\1$/,\"$2\"),sysid&&sysid.replace(/^(['\"])(.*?)\\1$/,\"$2\"));domBuilder.endDTD();return lastMatch.index+lastMatch[0].length}}return-1}function parseInstruction(source,start,domBuilder){var end=source.indexOf(\"?>\",start);if(end){var match=source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);if(match){var len=match[0].length;domBuilder.processingInstruction(match[1],match[2]);return end+2}else{return-1}}return-1}function ElementAttributes(source){}ElementAttributes.prototype={setTagName:function(tagName){if(!tagNamePattern.test(tagName)){throw new Error(\"invalid tagName:\"+tagName)}this.tagName=tagName},add:function(qName,value,offset){if(!tagNamePattern.test(qName)){throw new Error(\"invalid attribute:\"+qName)}this[this.length++]={qName:qName,value:value,offset:offset}},length:0,getLocalName:function(i){return this[i].localName},getLocator:function(i){return this[i].locator},getQName:function(i){return this[i].qName},getURI:function(i){return this[i].uri},getValue:function(i){return this[i].value}};function _set_proto_(thiz,parent){thiz.__proto__=parent;return thiz}if(!(_set_proto_({},_set_proto_.prototype)instanceof _set_proto_)){_set_proto_=function(thiz,parent){function p(){}p.prototype=parent;p=new p;for(parent in thiz){p[parent]=thiz[parent]}return p}}function split(source,start){var match;var buf=[];var reg=/'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;reg.lastIndex=start;reg.exec(source);while(match=reg.exec(source)){buf.push(match);if(match[1])return buf}}exports.XMLReader=XMLReader},{}],\"/src/js/docxtemplater.js\":[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");DocUtils.traits=require(\"./traits\");DocUtils.moduleWrapper=require(\"./module-wrapper\");var wrapper=DocUtils.moduleWrapper;var Docxtemplater=function(){function Docxtemplater(){_classCallCheck(this,Docxtemplater);if(arguments.length>0){throw new Error(\"The constructor with parameters have been removed in docxtemplater 3.0, please check the upgrade guide.\")}this.compiled={};this.modules=[];this.setOptions({})}_createClass(Docxtemplater,[{key:\"attachModule\",value:function attachModule(module){this.modules.push(wrapper(module));return this}},{key:\"setOptions\",value:function setOptions(options){var _this=this;this.options=options;Object.keys(DocUtils.defaults).forEach(function(key){var defaultValue=DocUtils.defaults[key];_this[key]=_this.options[key]!=null?_this.options[key]:defaultValue});if(this.zip){this.updateFileTypeConfig()}return this}},{key:\"loadZip\",value:function loadZip(zip){if(zip.loadAsync){throw new Error(\"Docxtemplater doesn't handle JSZip version >=3, see changelog\")}this.zip=zip;this.updateFileTypeConfig();return this}},{key:\"compileFile\",value:function compileFile(fileName){var currentFile=this.createTemplateClass(fileName);currentFile.parse();this.compiled[fileName]=currentFile}},{key:\"compile\",value:function compile(){this.templatedFiles=this.fileTypeConfig.getTemplatedFiles(this.zip);return this}},{key:\"updateFileTypeConfig\",value:function updateFileTypeConfig(){this.fileType=this.zip.files[\"word/document.xml\"]?\"docx\":\"pptx\";this.fileTypeConfig=this.options.fileTypeConfig||Docxtemplater.FileTypeConfig[this.fileType];return this}},{key:\"render\",value:function render(){var _this2=this;this.options.xmlFileNames=[];this.modules=this.fileTypeConfig.baseModules.map(function(moduleFunction){return moduleFunction()}).concat(this.modules);this.options=this.modules.reduce(function(options,module){return module.optionsTransformer(options,_this2)},this.options);this.xmlDocuments=this.options.xmlFileNames.reduce(function(xmlDocuments,fileName){var content=_this2.zip.files[fileName].asText();xmlDocuments[fileName]=DocUtils.str2xml(content);return xmlDocuments},{});this.modules.forEach(function(module){module.set({zip:_this2.zip,xmlDocuments:_this2.xmlDocuments,data:_this2.data})});this.compile();this.modules.forEach(function(module){module.set({compiled:_this2.compiled})});this.templatedFiles.forEach(function(fileName){if(_this2.zip.files[fileName]!=null){_this2.compileFile(fileName)}});this.mapper=this.modules.reduce(function(value,module){return module.getRenderedMap(value)},{});Object.keys(this.mapper).forEach(function(to){var mapped=_this2.mapper[to];var from=mapped.from;var currentFile=_this2.compiled[from];currentFile.setTags(mapped.data);currentFile.render(to);_this2.zip.file(to,currentFile.content)});Object.keys(this.xmlDocuments).forEach(function(fileName){_this2.zip.remove(fileName);var content=DocUtils.xml2str(_this2.xmlDocuments[fileName]);return _this2.zip.file(fileName,content,{})});return this}},{key:\"setData\",value:function setData(data){this.data=data;return this}},{key:\"getZip\",value:function getZip(){return this.zip}},{key:\"createTemplateClass\",value:function createTemplateClass(path){var usedData=this.zip.files[path].asText();return this.createTemplateClassFromContent(usedData,path)}},{key:\"createTemplateClassFromContent\",value:function createTemplateClassFromContent(content,filePath){var _this3=this;var xmltOptions={filePath:filePath};Object.keys(DocUtils.defaults).forEach(function(key){xmltOptions[key]=_this3[key]});xmltOptions.fileTypeConfig=this.fileTypeConfig;xmltOptions.modules=this.modules;return new Docxtemplater.XmlTemplater(content,xmltOptions)}},{key:\"getFullText\",value:function getFullText(path){return this.createTemplateClass(path||this.fileTypeConfig.textPath).getFullText()}},{key:\"getTemplatedFiles\",value:function getTemplatedFiles(){this.compile();return this.templatedFiles}}]);return Docxtemplater}();Docxtemplater.DocUtils=require(\"./doc-utils\");Docxtemplater.Errors=require(\"./errors\");Docxtemplater.XmlTemplater=require(\"./xml-templater\");Docxtemplater.FileTypeConfig=require(\"./file-type-config\");Docxtemplater.XmlMatcher=require(\"./xml-matcher\");module.exports=Docxtemplater},{\"./doc-utils\":1,\"./errors\":2,\"./file-type-config\":3,\"./module-wrapper\":7,\"./traits\":16,\"./xml-matcher\":17,\"./xml-templater\":18}]},{},[])(\"/src/js/docxtemplater.js\")});","/*!\n\nJSZip - A Javascript class for generating and reading zip files\n<http://stuartk.com/jszip>\n\n(c) 2009-2014 Stuart Knightley <stuart [at] stuartk.com>\nDual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip/master/LICENSE.markdown.\n\nJSZip uses the library pako released under the MIT license :\nhttps://github.com/nodeca/pako/blob/master/LICENSE\n*/\n!function(a){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=a();else if(\"function\"==typeof define&&define.amd)define([],a);else{var b;b=\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:this,b.JSZip=a()}}(function(){return function a(b,c,d){function e(g,h){if(!c[g]){if(!b[g]){var i=\"function\"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);var j=new Error(\"Cannot find module '\"+g+\"'\");throw j.code=\"MODULE_NOT_FOUND\",j}var k=c[g]={exports:{}};b[g][0].call(k.exports,function(a){var c=b[g][1][a];return e(c?c:a)},k,k.exports,a,b,c,d)}return c[g].exports}for(var f=\"function\"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}({1:[function(a,b,c){\"use strict\";function d(a){if(a){this.data=a,this.length=this.data.length,this.index=0,this.zero=0;for(var b=0;b<this.data.length;b++)a[b]=255&a[b]}}var e=a(\"./dataReader\");d.prototype=new e,d.prototype.byteAt=function(a){return this.data[this.zero+a]},d.prototype.lastIndexOfSignature=function(a){for(var b=a.charCodeAt(0),c=a.charCodeAt(1),d=a.charCodeAt(2),e=a.charCodeAt(3),f=this.length-4;f>=0;--f)if(this.data[f]===b&&this.data[f+1]===c&&this.data[f+2]===d&&this.data[f+3]===e)return f-this.zero;return-1},d.prototype.readData=function(a){if(this.checkOffset(a),0===a)return[];var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./dataReader\":6}],2:[function(a,b,c){\"use strict\";var d=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";c.encode=function(a,b){for(var c,e,f,g,h,i,j,k=\"\",l=0;l<a.length;)c=a.charCodeAt(l++),e=a.charCodeAt(l++),f=a.charCodeAt(l++),g=c>>2,h=(3&c)<<4|e>>4,i=(15&e)<<2|f>>6,j=63&f,isNaN(e)?i=j=64:isNaN(f)&&(j=64),k=k+d.charAt(g)+d.charAt(h)+d.charAt(i)+d.charAt(j);return k},c.decode=function(a,b){var c,e,f,g,h,i,j,k=\"\",l=0;for(a=a.replace(/[^A-Za-z0-9\\+\\/\\=]/g,\"\");l<a.length;)g=d.indexOf(a.charAt(l++)),h=d.indexOf(a.charAt(l++)),i=d.indexOf(a.charAt(l++)),j=d.indexOf(a.charAt(l++)),c=g<<2|h>>4,e=(15&h)<<4|i>>2,f=(3&i)<<6|j,k+=String.fromCharCode(c),64!=i&&(k+=String.fromCharCode(e)),64!=j&&(k+=String.fromCharCode(f));return k}},{}],3:[function(a,b,c){\"use strict\";function d(){this.compressedSize=0,this.uncompressedSize=0,this.crc32=0,this.compressionMethod=null,this.compressedContent=null}d.prototype={getContent:function(){return null},getCompressedContent:function(){return null}},b.exports=d},{}],4:[function(a,b,c){\"use strict\";c.STORE={magic:\"\\0\\0\",compress:function(a,b){return a},uncompress:function(a){return a},compressInputType:null,uncompressInputType:null},c.DEFLATE=a(\"./flate\")},{\"./flate\":9}],5:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=[0,1996959894,3993919788,2567524794,124634137,1886057615,3915621685,2657392035,249268274,2044508324,3772115230,2547177864,162941995,2125561021,3887607047,2428444049,498536548,1789927666,4089016648,2227061214,450548861,1843258603,4107580753,2211677639,325883990,1684777152,4251122042,2321926636,335633487,1661365465,4195302755,2366115317,997073096,1281953886,3579855332,2724688242,1006888145,1258607687,3524101629,2768942443,901097722,1119000684,3686517206,2898065728,853044451,1172266101,3705015759,2882616665,651767980,1373503546,3369554304,3218104598,565507253,1454621731,3485111705,3099436303,671266974,1594198024,3322730930,2970347812,795835527,1483230225,3244367275,3060149565,1994146192,31158534,2563907772,4023717930,1907459465,112637215,2680153253,3904427059,2013776290,251722036,2517215374,3775830040,2137656763,141376813,2439277719,3865271297,1802195444,476864866,2238001368,4066508878,1812370925,453092731,2181625025,4111451223,1706088902,314042704,2344532202,4240017532,1658658271,366619977,2362670323,4224994405,1303535960,984961486,2747007092,3569037538,1256170817,1037604311,2765210733,3554079995,1131014506,879679996,2909243462,3663771856,1141124467,855842277,2852801631,3708648649,1342533948,654459306,3188396048,3373015174,1466479909,544179635,3110523913,3462522015,1591671054,702138776,2966460450,3352799412,1504918807,783551873,3082640443,3233442989,3988292384,2596254646,62317068,1957810842,3939845945,2647816111,81470997,1943803523,3814918930,2489596804,225274430,2053790376,3826175755,2466906013,167816743,2097651377,4027552580,2265490386,503444072,1762050814,4150417245,2154129355,426522225,1852507879,4275313526,2312317920,282753626,1742555852,4189708143,2394877945,397917763,1622183637,3604390888,2714866558,953729732,1340076626,3518719985,2797360999,1068828381,1219638859,3624741850,2936675148,906185462,1090812512,3747672003,2825379669,829329135,1181335161,3412177804,3160834842,628085408,1382605366,3423369109,3138078467,570562233,1426400815,3317316542,2998733608,733239954,1555261956,3268935591,3050360625,752459403,1541320221,2607071920,3965973030,1969922972,40735498,2617837225,3943577151,1913087877,83908371,2512341634,3803740692,2075208622,213261112,2463272603,3855990285,2094854071,198958881,2262029012,4057260610,1759359992,534414190,2176718541,4139329115,1873836001,414664567,2282248934,4279200368,1711684554,285281116,2405801727,4167216745,1634467795,376229701,2685067896,3608007406,1308918612,956543938,2808555105,3495958263,1231636301,1047427035,2932959818,3654703836,1088359270,936918e3,2847714899,3736837829,1202900863,817233897,3183342108,3401237130,1404277552,615818150,3134207493,3453421203,1423857449,601450431,3009837614,3294710456,1567103746,711928724,3020668471,3272380065,1510334235,755167117];b.exports=function(a,b){if(\"undefined\"==typeof a||!a.length)return 0;var c=\"string\"!==d.getTypeOf(a);\"undefined\"==typeof b&&(b=0);var f=0,g=0,h=0;b^=-1;for(var i=0,j=a.length;i<j;i++)h=c?a[i]:a.charCodeAt(i),g=255&(b^h),f=e[g],b=b>>>8^f;return b^-1}},{\"./utils\":22}],6:[function(a,b,c){\"use strict\";function d(a){this.data=null,this.length=0,this.index=0,this.zero=0}var e=a(\"./utils\");d.prototype={checkOffset:function(a){this.checkIndex(this.index+a)},checkIndex:function(a){if(this.length<this.zero+a||a<0)throw new Error(\"End of data reached (data length = \"+this.length+\", asked index = \"+a+\"). Corrupted zip ?\")},setIndex:function(a){this.checkIndex(a),this.index=a},skip:function(a){this.setIndex(this.index+a)},byteAt:function(a){},readInt:function(a){var b,c=0;for(this.checkOffset(a),b=this.index+a-1;b>=this.index;b--)c=(c<<8)+this.byteAt(b);return this.index+=a,c},readString:function(a){return e.transformTo(\"string\",this.readData(a))},readData:function(a){},lastIndexOfSignature:function(a){},readDate:function(){var a=this.readInt(4);return new Date((a>>25&127)+1980,(a>>21&15)-1,a>>16&31,a>>11&31,a>>5&63,(31&a)<<1)}},b.exports=d},{\"./utils\":22}],7:[function(a,b,c){\"use strict\";c.base64=!1,c.binary=!1,c.dir=!1,c.createFolders=!1,c.date=null,c.compression=null,c.compressionOptions=null,c.comment=null,c.unixPermissions=null,c.dosPermissions=null},{}],8:[function(a,b,c){\"use strict\";var d=a(\"./utils\");c.string2binary=function(a){return d.string2binary(a)},c.string2Uint8Array=function(a){return d.transformTo(\"uint8array\",a)},c.uint8Array2String=function(a){return d.transformTo(\"string\",a)},c.string2Blob=function(a){var b=d.transformTo(\"arraybuffer\",a);return d.arrayBuffer2Blob(b)},c.arrayBuffer2Blob=function(a){return d.arrayBuffer2Blob(a)},c.transformTo=function(a,b){return d.transformTo(a,b)},c.getTypeOf=function(a){return d.getTypeOf(a)},c.checkSupport=function(a){return d.checkSupport(a)},c.MAX_VALUE_16BITS=d.MAX_VALUE_16BITS,c.MAX_VALUE_32BITS=d.MAX_VALUE_32BITS,c.pretty=function(a){return d.pretty(a)},c.findCompression=function(a){return d.findCompression(a)},c.isRegExp=function(a){return d.isRegExp(a)}},{\"./utils\":22}],9:[function(a,b,c){\"use strict\";var d=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Uint32Array,e=a(\"pako\");c.uncompressInputType=d?\"uint8array\":\"array\",c.compressInputType=d?\"uint8array\":\"array\",c.magic=\"\\b\\0\",c.compress=function(a,b){return e.deflateRaw(a,{level:b.level||-1})},c.uncompress=function(a){return e.inflateRaw(a)}},{pako:25}],10:[function(a,b,c){\"use strict\";function d(a,b){return this instanceof d?(this.files={},this.comment=null,this.root=\"\",a&&this.load(a,b),void(this.clone=function(){var a=new d;for(var b in this)\"function\"!=typeof this[b]&&(a[b]=this[b]);return a})):new d(a,b)}var e=a(\"./base64\");d.prototype=a(\"./object\"),d.prototype.load=a(\"./load\"),d.support=a(\"./support\"),d.defaults=a(\"./defaults\"),d.utils=a(\"./deprecatedPublicUtils\"),d.base64={encode:function(a){return e.encode(a)},decode:function(a){return e.decode(a)}},d.compressions=a(\"./compressions\"),b.exports=d},{\"./base64\":2,\"./compressions\":4,\"./defaults\":7,\"./deprecatedPublicUtils\":8,\"./load\":11,\"./object\":14,\"./support\":18}],11:[function(a,b,c){\"use strict\";var d=a(\"./base64\"),e=a(\"./utf8\"),f=a(\"./utils\"),g=a(\"./zipEntries\");b.exports=function(a,b){var c,h,i,j;for(b=f.extend(b||{},{base64:!1,checkCRC32:!1,optimizedBinaryString:!1,createFolders:!1,decodeFileName:e.utf8decode}),b.base64&&(a=d.decode(a)),h=new g(a,b),c=h.files,i=0;i<c.length;i++)j=c[i],this.file(j.fileNameStr,j.decompressed,{binary:!0,optimizedBinaryString:!0,date:j.date,dir:j.dir,comment:j.fileCommentStr.length?j.fileCommentStr:null,unixPermissions:j.unixPermissions,dosPermissions:j.dosPermissions,createFolders:b.createFolders});return h.zipComment.length&&(this.comment=h.zipComment),this}},{\"./base64\":2,\"./utf8\":21,\"./utils\":22,\"./zipEntries\":23}],12:[function(a,b,c){(function(a){\"use strict\";b.exports=function(b,c){return new a(b,c)},b.exports.test=function(b){return a.isBuffer(b)}}).call(this,\"undefined\"!=typeof Buffer?Buffer:void 0)},{}],13:[function(a,b,c){\"use strict\";function d(a){this.data=a,this.length=this.data.length,this.index=0,this.zero=0}var e=a(\"./uint8ArrayReader\");d.prototype=new e,d.prototype.readData=function(a){this.checkOffset(a);var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./uint8ArrayReader\":19}],14:[function(a,b,c){\"use strict\";var d=a(\"./support\"),e=a(\"./utils\"),f=a(\"./crc32\"),g=a(\"./signature\"),h=a(\"./defaults\"),i=a(\"./base64\"),j=a(\"./compressions\"),k=a(\"./compressedObject\"),l=a(\"./nodeBuffer\"),m=a(\"./utf8\"),n=a(\"./stringWriter\"),o=a(\"./uint8ArrayWriter\"),p=function(a){if(a._data instanceof k&&(a._data=a._data.getContent(),a.options.binary=!0,a.options.base64=!1,\"uint8array\"===e.getTypeOf(a._data))){var b=a._data;a._data=new Uint8Array(b.length),0!==b.length&&a._data.set(b,0)}return a._data},q=function(a){var b=p(a),c=e.getTypeOf(b);return\"string\"===c?!a.options.binary&&d.nodebuffer?l(b,\"utf-8\"):a.asBinary():b},r=function(a){var b=p(this);return null===b||\"undefined\"==typeof b?\"\":(this.options.base64&&(b=i.decode(b)),b=a&&this.options.binary?D.utf8decode(b):e.transformTo(\"string\",b),a||this.options.binary||(b=e.transformTo(\"string\",D.utf8encode(b))),b)},s=function(a,b,c){this.name=a,this.dir=c.dir,this.date=c.date,this.comment=c.comment,this.unixPermissions=c.unixPermissions,this.dosPermissions=c.dosPermissions,this._data=b,this.options=c,this._initialMetadata={dir:c.dir,date:c.date}};s.prototype={asText:function(){return r.call(this,!0)},asBinary:function(){return r.call(this,!1)},asNodeBuffer:function(){var a=q(this);return e.transformTo(\"nodebuffer\",a)},asUint8Array:function(){var a=q(this);return e.transformTo(\"uint8array\",a)},asArrayBuffer:function(){return this.asUint8Array().buffer}};var t=function(a,b){var c,d=\"\";for(c=0;c<b;c++)d+=String.fromCharCode(255&a),a>>>=8;return d},u=function(a){return a=a||{},a.base64!==!0||null!==a.binary&&void 0!==a.binary||(a.binary=!0),a=e.extend(a,h),a.date=a.date||new Date,null!==a.compression&&(a.compression=a.compression.toUpperCase()),a},v=function(a,b,c){var d,f=e.getTypeOf(b);if(c=u(c),\"string\"==typeof c.unixPermissions&&(c.unixPermissions=parseInt(c.unixPermissions,8)),c.unixPermissions&&16384&c.unixPermissions&&(c.dir=!0),c.dosPermissions&&16&c.dosPermissions&&(c.dir=!0),c.dir&&(a=x(a)),c.createFolders&&(d=w(a))&&y.call(this,d,!0),c.dir||null===b||\"undefined\"==typeof b)c.base64=!1,c.binary=!1,b=null,f=null;else if(\"string\"===f)c.binary&&!c.base64&&c.optimizedBinaryString!==!0&&(b=e.string2binary(b));else{if(c.base64=!1,c.binary=!0,!(f||b instanceof k))throw new Error(\"The data of '\"+a+\"' is in an unsupported format !\");\"arraybuffer\"===f&&(b=e.transformTo(\"uint8array\",b))}var g=new s(a,b,c);return this.files[a]=g,g},w=function(a){\"/\"==a.slice(-1)&&(a=a.substring(0,a.length-1));var b=a.lastIndexOf(\"/\");return b>0?a.substring(0,b):\"\"},x=function(a){return\"/\"!=a.slice(-1)&&(a+=\"/\"),a},y=function(a,b){return b=\"undefined\"!=typeof b&&b,a=x(a),this.files[a]||v.call(this,a,null,{dir:!0,createFolders:b}),this.files[a]},z=function(a,b,c){var d,g=new k;return a._data instanceof k?(g.uncompressedSize=a._data.uncompressedSize,g.crc32=a._data.crc32,0===g.uncompressedSize||a.dir?(b=j.STORE,g.compressedContent=\"\",g.crc32=0):a._data.compressionMethod===b.magic?g.compressedContent=a._data.getCompressedContent():(d=a._data.getContent(),g.compressedContent=b.compress(e.transformTo(b.compressInputType,d),c))):(d=q(a),d&&0!==d.length&&!a.dir||(b=j.STORE,d=\"\"),g.uncompressedSize=d.length,g.crc32=f(d),g.compressedContent=b.compress(e.transformTo(b.compressInputType,d),c)),g.compressedSize=g.compressedContent.length,g.compressionMethod=b.magic,g},A=function(a,b){var c=a;return a||(c=b?16893:33204),(65535&c)<<16},B=function(a,b){return 63&(a||0)},C=function(a,b,c,d,h,i){var j,k,l,n,o=(c.compressedContent,i!==m.utf8encode),p=e.transformTo(\"string\",i(b.name)),q=e.transformTo(\"string\",m.utf8encode(b.name)),r=b.comment||\"\",s=e.transformTo(\"string\",i(r)),u=e.transformTo(\"string\",m.utf8encode(r)),v=q.length!==b.name.length,w=u.length!==r.length,x=b.options,y=\"\",z=\"\",C=\"\";l=b._initialMetadata.dir!==b.dir?b.dir:x.dir,n=b._initialMetadata.date!==b.date?b.date:x.date;var D=0,E=0;l&&(D|=16),\"UNIX\"===h?(E=798,D|=A(b.unixPermissions,l)):(E=20,D|=B(b.dosPermissions,l)),j=n.getHours(),j<<=6,j|=n.getMinutes(),j<<=5,j|=n.getSeconds()/2,k=n.getFullYear()-1980,k<<=4,k|=n.getMonth()+1,k<<=5,k|=n.getDate(),v&&(z=t(1,1)+t(f(p),4)+q,y+=\"up\"+t(z.length,2)+z),w&&(C=t(1,1)+t(this.crc32(s),4)+u,y+=\"uc\"+t(C.length,2)+C);var F=\"\";F+=\"\\n\\0\",F+=o||!v&&!w?\"\\0\\0\":\"\\0\\b\",F+=c.compressionMethod,F+=t(j,2),F+=t(k,2),F+=t(c.crc32,4),F+=t(c.compressedSize,4),F+=t(c.uncompressedSize,4),F+=t(p.length,2),F+=t(y.length,2);var G=g.LOCAL_FILE_HEADER+F+p+y,H=g.CENTRAL_FILE_HEADER+t(E,2)+F+t(s.length,2)+\"\\0\\0\\0\\0\"+t(D,4)+t(d,4)+p+y+s;return{fileRecord:G,dirRecord:H,compressedObject:c}},D={load:function(a,b){throw new Error(\"Load method is not defined. Is the file jszip-load.js included ?\")},filter:function(a){var b,c,d,f,g=[];for(b in this.files)this.files.hasOwnProperty(b)&&(d=this.files[b],f=new s(d.name,d._data,e.extend(d.options)),c=b.slice(this.root.length,b.length),b.slice(0,this.root.length)===this.root&&a(c,f)&&g.push(f));return g},file:function(a,b,c){if(1===arguments.length){if(e.isRegExp(a)){var d=a;return this.filter(function(a,b){return!b.dir&&d.test(a)})}return this.filter(function(b,c){return!c.dir&&b===a})[0]||null}return a=this.root+a,v.call(this,a,b,c),this},folder:function(a){if(!a)return this;if(e.isRegExp(a))return this.filter(function(b,c){return c.dir&&a.test(b)});var b=this.root+a,c=y.call(this,b),d=this.clone();return d.root=c.name,d},remove:function(a){a=this.root+a;var b=this.files[a];if(b||(\"/\"!=a.slice(-1)&&(a+=\"/\"),b=this.files[a]),b&&!b.dir)delete this.files[a];else for(var c=this.filter(function(b,c){return c.name.slice(0,a.length)===a}),d=0;d<c.length;d++)delete this.files[c[d].name];return this},generate:function(a){a=e.extend(a||{},{base64:!0,compression:\"STORE\",compressionOptions:null,type:\"base64\",platform:\"DOS\",comment:null,mimeType:\"application/zip\",encodeFileName:m.utf8encode}),e.checkSupport(a.type),\"darwin\"!==a.platform&&\"freebsd\"!==a.platform&&\"linux\"!==a.platform&&\"sunos\"!==a.platform||(a.platform=\"UNIX\"),\"win32\"===a.platform&&(a.platform=\"DOS\");var b,c,d=[],f=0,h=0,k=e.transformTo(\"string\",a.encodeFileName(a.comment||this.comment||\"\"));for(var l in this.files)if(this.files.hasOwnProperty(l)){var p=this.files[l],q=p.options.compression||a.compression.toUpperCase(),r=j[q];if(!r)throw new Error(q+\" is not a valid compression method !\");var s=p.options.compressionOptions||a.compressionOptions||{},u=z.call(this,p,r,s),v=C.call(this,l,p,u,f,a.platform,a.encodeFileName);f+=v.fileRecord.length+u.compressedSize,h+=v.dirRecord.length,d.push(v)}var w=\"\";w=g.CENTRAL_DIRECTORY_END+\"\\0\\0\\0\\0\"+t(d.length,2)+t(d.length,2)+t(h,4)+t(f,4)+t(k.length,2)+k;var x=a.type.toLowerCase();for(b=\"uint8array\"===x||\"arraybuffer\"===x||\"blob\"===x||\"nodebuffer\"===x?new o(f+h+w.length):new n(f+h+w.length),c=0;c<d.length;c++)b.append(d[c].fileRecord),b.append(d[c].compressedObject.compressedContent);for(c=0;c<d.length;c++)b.append(d[c].dirRecord);b.append(w);var y=b.finalize();switch(a.type.toLowerCase()){case\"uint8array\":case\"arraybuffer\":case\"nodebuffer\":return e.transformTo(a.type.toLowerCase(),y);case\"blob\":return e.arrayBuffer2Blob(e.transformTo(\"arraybuffer\",y),a.mimeType);case\"base64\":return a.base64?i.encode(y):y;default:return y}},crc32:function(a,b){return f(a,b)},utf8encode:function(a){return e.transformTo(\"string\",m.utf8encode(a))},utf8decode:function(a){return m.utf8decode(a)}};b.exports=D},{\"./base64\":2,\"./compressedObject\":3,\"./compressions\":4,\"./crc32\":5,\"./defaults\":7,\"./nodeBuffer\":12,\"./signature\":15,\"./stringWriter\":17,\"./support\":18,\"./uint8ArrayWriter\":20,\"./utf8\":21,\"./utils\":22}],15:[function(a,b,c){\"use strict\";c.LOCAL_FILE_HEADER=\"PK\u0003\u0004\",c.CENTRAL_FILE_HEADER=\"PK\u0001\u0002\",c.CENTRAL_DIRECTORY_END=\"PK\u0005\u0006\",c.ZIP64_CENTRAL_DIRECTORY_LOCATOR=\"PK\u0006\u0007\",c.ZIP64_CENTRAL_DIRECTORY_END=\"PK\u0006\u0006\",c.DATA_DESCRIPTOR=\"PK\u0007\\b\"},{}],16:[function(a,b,c){\"use strict\";function d(a,b){this.data=a,b||(this.data=f.string2binary(this.data)),this.length=this.data.length,this.index=0,this.zero=0}var e=a(\"./dataReader\"),f=a(\"./utils\");d.prototype=new e,d.prototype.byteAt=function(a){return this.data.charCodeAt(this.zero+a)},d.prototype.lastIndexOfSignature=function(a){return this.data.lastIndexOf(a)-this.zero},d.prototype.readData=function(a){this.checkOffset(a);var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./dataReader\":6,\"./utils\":22}],17:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=function(){this.data=[]};e.prototype={append:function(a){a=d.transformTo(\"string\",a),this.data.push(a)},finalize:function(){return this.data.join(\"\")}},b.exports=e},{\"./utils\":22}],18:[function(a,b,c){(function(a){\"use strict\";if(c.base64=!0,c.array=!0,c.string=!0,c.arraybuffer=\"undefined\"!=typeof ArrayBuffer&&\"undefined\"!=typeof Uint8Array,c.nodebuffer=\"undefined\"!=typeof a,c.uint8array=\"undefined\"!=typeof Uint8Array,\"undefined\"==typeof ArrayBuffer)c.blob=!1;else{var b=new ArrayBuffer(0);try{c.blob=0===new Blob([b],{type:\"application/zip\"}).size}catch(d){try{var e=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,f=new e;f.append(b),c.blob=0===f.getBlob(\"application/zip\").size}catch(d){c.blob=!1}}}}).call(this,\"undefined\"!=typeof Buffer?Buffer:void 0)},{}],19:[function(a,b,c){\"use strict\";function d(a){a&&(this.data=a,this.length=this.data.length,this.index=0,this.zero=0)}var e=a(\"./arrayReader\");d.prototype=new e,d.prototype.readData=function(a){if(this.checkOffset(a),0===a)return new Uint8Array(0);var b=this.data.subarray(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./arrayReader\":1}],20:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=function(a){this.data=new Uint8Array(a),this.index=0};e.prototype={append:function(a){0!==a.length&&(a=d.transformTo(\"uint8array\",a),this.data.set(a,this.index),this.index+=a.length)},finalize:function(){return this.data}},b.exports=e},{\"./utils\":22}],21:[function(a,b,c){\"use strict\";for(var d=a(\"./utils\"),e=a(\"./support\"),f=a(\"./nodeBuffer\"),g=new Array(256),h=0;h<256;h++)g[h]=h>=252?6:h>=248?5:h>=240?4:h>=224?3:h>=192?2:1;g[254]=g[254]=1;var i=function(a){var b,c,d,f,g,h=a.length,i=0;for(f=0;f<h;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),i+=c<128?1:c<2048?2:c<65536?3:4;for(b=e.uint8array?new Uint8Array(i):new Array(i),g=0,f=0;g<i;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),c<128?b[g++]=c:c<2048?(b[g++]=192|c>>>6,b[g++]=128|63&c):c<65536?(b[g++]=224|c>>>12,b[g++]=128|c>>>6&63,b[g++]=128|63&c):(b[g++]=240|c>>>18,b[g++]=128|c>>>12&63,b[g++]=128|c>>>6&63,b[g++]=128|63&c);return b},j=function(a,b){var c;for(b=b||a.length,b>a.length&&(b=a.length),c=b-1;c>=0&&128===(192&a[c]);)c--;return c<0?b:0===c?b:c+g[a[c]]>b?c:b},k=function(a){var b,c,e,f,h=a.length,i=new Array(2*h);for(c=0,b=0;b<h;)if(e=a[b++],e<128)i[c++]=e;else if(f=g[e],f>4)i[c++]=65533,b+=f-1;else{for(e&=2===f?31:3===f?15:7;f>1&&b<h;)e=e<<6|63&a[b++],f--;f>1?i[c++]=65533:e<65536?i[c++]=e:(e-=65536,i[c++]=55296|e>>10&1023,i[c++]=56320|1023&e)}return i.length!==c&&(i.subarray?i=i.subarray(0,c):i.length=c),d.applyFromCharCode(i)};c.utf8encode=function(a){return e.nodebuffer?f(a,\"utf-8\"):i(a)},c.utf8decode=function(a){if(e.nodebuffer)return d.transformTo(\"nodebuffer\",a).toString(\"utf-8\");a=d.transformTo(e.uint8array?\"uint8array\":\"array\",a);for(var b=[],c=0,f=a.length,g=65536;c<f;){var h=j(a,Math.min(c+g,f));e.uint8array?b.push(k(a.subarray(c,h))):b.push(k(a.slice(c,h))),c=h}return b.join(\"\")}},{\"./nodeBuffer\":12,\"./support\":18,\"./utils\":22}],22:[function(a,b,c){\"use strict\";function d(a){return a}function e(a,b){for(var c=0;c<a.length;++c)b[c]=255&a.charCodeAt(c);return b}function f(a){var b=65536,d=[],e=a.length,f=c.getTypeOf(a),g=0,h=!0;try{switch(f){case\"uint8array\":String.fromCharCode.apply(null,new Uint8Array(0));break;case\"nodebuffer\":String.fromCharCode.apply(null,j(0))}}catch(i){h=!1}if(!h){for(var k=\"\",l=0;l<a.length;l++)k+=String.fromCharCode(a[l]);return k}for(;g<e&&b>1;)try{\"array\"===f||\"nodebuffer\"===f?d.push(String.fromCharCode.apply(null,a.slice(g,Math.min(g+b,e)))):d.push(String.fromCharCode.apply(null,a.subarray(g,Math.min(g+b,e)))),g+=b}catch(i){b=Math.floor(b/2)}return d.join(\"\")}function g(a,b){for(var c=0;c<a.length;c++)b[c]=a[c];return b}var h=a(\"./support\"),i=a(\"./compressions\"),j=a(\"./nodeBuffer\");c.string2binary=function(a){for(var b=\"\",c=0;c<a.length;c++)b+=String.fromCharCode(255&a.charCodeAt(c));return b},c.arrayBuffer2Blob=function(a,b){c.checkSupport(\"blob\"),b=b||\"application/zip\";try{return new Blob([a],{type:b})}catch(d){try{var e=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,f=new e;return f.append(a),f.getBlob(b)}catch(d){throw new Error(\"Bug : can't construct the Blob.\")}}},c.applyFromCharCode=f;var k={};k.string={string:d,array:function(a){return e(a,new Array(a.length))},arraybuffer:function(a){return k.string.uint8array(a).buffer},uint8array:function(a){return e(a,new Uint8Array(a.length))},nodebuffer:function(a){return e(a,j(a.length))}},k.array={string:f,array:d,arraybuffer:function(a){return new Uint8Array(a).buffer},uint8array:function(a){return new Uint8Array(a)},nodebuffer:function(a){return j(a)}},k.arraybuffer={string:function(a){return f(new Uint8Array(a))},array:function(a){return g(new Uint8Array(a),new Array(a.byteLength))},arraybuffer:d,uint8array:function(a){return new Uint8Array(a)},nodebuffer:function(a){return j(new Uint8Array(a))}},k.uint8array={string:f,array:function(a){return g(a,new Array(a.length))},arraybuffer:function(a){return a.buffer},uint8array:d,nodebuffer:function(a){return j(a)}},k.nodebuffer={string:f,array:function(a){return g(a,new Array(a.length))},arraybuffer:function(a){return k.nodebuffer.uint8array(a).buffer},uint8array:function(a){return g(a,new Uint8Array(a.length))},nodebuffer:d},c.transformTo=function(a,b){if(b||(b=\"\"),!a)return b;c.checkSupport(a);var d=c.getTypeOf(b),e=k[d][a](b);return e},c.getTypeOf=function(a){return\"string\"==typeof a?\"string\":\"[object Array]\"===Object.prototype.toString.call(a)?\"array\":h.nodebuffer&&j.test(a)?\"nodebuffer\":h.uint8array&&a instanceof Uint8Array?\"uint8array\":h.arraybuffer&&a instanceof ArrayBuffer?\"arraybuffer\":void 0},c.checkSupport=function(a){var b=h[a.toLowerCase()];if(!b)throw new Error(a+\" is not supported by this browser\")},c.MAX_VALUE_16BITS=65535,c.MAX_VALUE_32BITS=-1,c.pretty=function(a){var b,c,d=\"\";for(c=0;c<(a||\"\").length;c++)b=a.charCodeAt(c),d+=\"\\\\x\"+(b<16?\"0\":\"\")+b.toString(16).toUpperCase();return d},c.findCompression=function(a){for(var b in i)if(i.hasOwnProperty(b)&&i[b].magic===a)return i[b];return null},c.isRegExp=function(a){return\"[object RegExp]\"===Object.prototype.toString.call(a)},c.extend=function(){var a,b,c={};for(a=0;a<arguments.length;a++)for(b in arguments[a])arguments[a].hasOwnProperty(b)&&\"undefined\"==typeof c[b]&&(c[b]=arguments[a][b]);return c}},{\"./compressions\":4,\"./nodeBuffer\":12,\"./support\":18}],23:[function(a,b,c){\"use strict\";function d(a,b){this.files=[],this.loadOptions=b,a&&this.load(a)}var e=a(\"./stringReader\"),f=a(\"./nodeBufferReader\"),g=a(\"./uint8ArrayReader\"),h=a(\"./arrayReader\"),i=a(\"./utils\"),j=a(\"./signature\"),k=a(\"./zipEntry\"),l=a(\"./support\");a(\"./object\");d.prototype={checkSignature:function(a){var b=this.reader.readString(4);if(b!==a)throw new Error(\"Corrupted zip or bug : unexpected signature (\"+i.pretty(b)+\", expected \"+i.pretty(a)+\")\")},isSignature:function(a,b){var c=this.reader.index;this.reader.setIndex(a);var d=this.reader.readString(4),e=d===b;return this.reader.setIndex(c),e},readBlockEndOfCentral:function(){this.diskNumber=this.reader.readInt(2),this.diskWithCentralDirStart=this.reader.readInt(2),this.centralDirRecordsOnThisDisk=this.reader.readInt(2),this.centralDirRecords=this.reader.readInt(2),this.centralDirSize=this.reader.readInt(4),this.centralDirOffset=this.reader.readInt(4),this.zipCommentLength=this.reader.readInt(2);var a=this.reader.readData(this.zipCommentLength),b=l.uint8array?\"uint8array\":\"array\",c=i.transformTo(b,a);this.zipComment=this.loadOptions.decodeFileName(c)},readBlockZip64EndOfCentral:function(){this.zip64EndOfCentralSize=this.reader.readInt(8),this.versionMadeBy=this.reader.readString(2),this.versionNeeded=this.reader.readInt(2),this.diskNumber=this.reader.readInt(4),this.diskWithCentralDirStart=this.reader.readInt(4),this.centralDirRecordsOnThisDisk=this.reader.readInt(8),this.centralDirRecords=this.reader.readInt(8),this.centralDirSize=this.reader.readInt(8),this.centralDirOffset=this.reader.readInt(8),this.zip64ExtensibleData={};for(var a,b,c,d=this.zip64EndOfCentralSize-44,e=0;e<d;)a=this.reader.readInt(2),b=this.reader.readInt(4),c=this.reader.readString(b),this.zip64ExtensibleData[a]={id:a,length:b,value:c}},readBlockZip64EndOfCentralLocator:function(){if(this.diskWithZip64CentralDirStart=this.reader.readInt(4),this.relativeOffsetEndOfZip64CentralDir=this.reader.readInt(8),this.disksCount=this.reader.readInt(4),this.disksCount>1)throw new Error(\"Multi-volumes zip are not supported\")},readLocalFiles:function(){var a,b;for(a=0;a<this.files.length;a++)b=this.files[a],this.reader.setIndex(b.localHeaderOffset),this.checkSignature(j.LOCAL_FILE_HEADER),b.readLocalPart(this.reader),b.handleUTF8(),b.processAttributes()},readCentralDir:function(){var a;for(this.reader.setIndex(this.centralDirOffset);this.reader.readString(4)===j.CENTRAL_FILE_HEADER;)a=new k({zip64:this.zip64},this.loadOptions),a.readCentralPart(this.reader),this.files.push(a);if(this.centralDirRecords!==this.files.length&&0!==this.centralDirRecords&&0===this.files.length)throw new Error(\"Corrupted zip or bug: expected \"+this.centralDirRecords+\" records in central dir, got \"+this.files.length)},readEndOfCentral:function(){var a=this.reader.lastIndexOfSignature(j.CENTRAL_DIRECTORY_END);if(a<0){var b=!this.isSignature(0,j.LOCAL_FILE_HEADER);throw b?new Error(\"Can't find end of central directory : is this a zip file ? If it is, see http://stuk.github.io/jszip/documentation/howto/read_zip.html\"):new Error(\"Corrupted zip : can't find end of central directory\")}this.reader.setIndex(a);var c=a;if(this.checkSignature(j.CENTRAL_DIRECTORY_END),this.readBlockEndOfCentral(),this.diskNumber===i.MAX_VALUE_16BITS||this.diskWithCentralDirStart===i.MAX_VALUE_16BITS||this.centralDirRecordsOnThisDisk===i.MAX_VALUE_16BITS||this.centralDirRecords===i.MAX_VALUE_16BITS||this.centralDirSize===i.MAX_VALUE_32BITS||this.centralDirOffset===i.MAX_VALUE_32BITS){if(this.zip64=!0,a=this.reader.lastIndexOfSignature(j.ZIP64_CENTRAL_DIRECTORY_LOCATOR),a<0)throw new Error(\"Corrupted zip : can't find the ZIP64 end of central directory locator\");if(this.reader.setIndex(a),this.checkSignature(j.ZIP64_CENTRAL_DIRECTORY_LOCATOR),this.readBlockZip64EndOfCentralLocator(),!this.isSignature(this.relativeOffsetEndOfZip64CentralDir,j.ZIP64_CENTRAL_DIRECTORY_END)&&(this.relativeOffsetEndOfZip64CentralDir=this.reader.lastIndexOfSignature(j.ZIP64_CENTRAL_DIRECTORY_END),this.relativeOffsetEndOfZip64CentralDir<0))throw new Error(\"Corrupted zip : can't find the ZIP64 end of central directory\");this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir),this.checkSignature(j.ZIP64_CENTRAL_DIRECTORY_END),this.readBlockZip64EndOfCentral()}var d=this.centralDirOffset+this.centralDirSize;this.zip64&&(d+=20,d+=12+this.zip64EndOfCentralSize);var e=c-d;if(e>0)this.isSignature(c,j.CENTRAL_FILE_HEADER)||(this.reader.zero=e);else if(e<0)throw new Error(\"Corrupted zip: missing \"+Math.abs(e)+\" bytes.\")},prepareReader:function(a){var b=i.getTypeOf(a);if(i.checkSupport(b),\"string\"!==b||l.uint8array)if(\"nodebuffer\"===b)this.reader=new f(a);else if(l.uint8array)this.reader=new g(i.transformTo(\"uint8array\",a));else{if(!l.array)throw new Error(\"Unexpected error: unsupported type '\"+b+\"'\");this.reader=new h(i.transformTo(\"array\",a))}else this.reader=new e(a,this.loadOptions.optimizedBinaryString)},load:function(a){this.prepareReader(a),this.readEndOfCentral(),this.readCentralDir(),this.readLocalFiles()}},b.exports=d},{\"./arrayReader\":1,\"./nodeBufferReader\":13,\"./object\":14,\"./signature\":15,\"./stringReader\":16,\"./support\":18,\"./uint8ArrayReader\":19,\"./utils\":22,\"./zipEntry\":24}],24:[function(a,b,c){\"use strict\";function d(a,b){this.options=a,this.loadOptions=b}var e=a(\"./stringReader\"),f=a(\"./utils\"),g=a(\"./compressedObject\"),h=a(\"./object\"),i=a(\"./support\"),j=0,k=3;d.prototype={isEncrypted:function(){return 1===(1&this.bitFlag)},useUTF8:function(){return 2048===(2048&this.bitFlag)},prepareCompressedContent:function(a,b,c){return function(){var d=a.index;a.setIndex(b);var e=a.readData(c);return a.setIndex(d),e}},prepareContent:function(a,b,c,d,e){return function(){var a=f.transformTo(d.uncompressInputType,this.getCompressedContent()),b=d.uncompress(a);if(b.length!==e)throw new Error(\"Bug : uncompressed data size mismatch\");return b}},readLocalPart:function(a){var b,c;if(a.skip(22),this.fileNameLength=a.readInt(2),c=a.readInt(2),this.fileName=a.readData(this.fileNameLength),a.skip(c),this.compressedSize==-1||this.uncompressedSize==-1)throw new Error(\"Bug or corrupted zip : didn't get enough informations from the central directory (compressedSize == -1 || uncompressedSize == -1)\");if(b=f.findCompression(this.compressionMethod),null===b)throw new Error(\"Corrupted zip : compression \"+f.pretty(this.compressionMethod)+\" unknown (inner file : \"+f.transformTo(\"string\",this.fileName)+\")\");if(this.decompressed=new g,this.decompressed.compressedSize=this.compressedSize,this.decompressed.uncompressedSize=this.uncompressedSize,this.decompressed.crc32=this.crc32,this.decompressed.compressionMethod=this.compressionMethod,this.decompressed.getCompressedContent=this.prepareCompressedContent(a,a.index,this.compressedSize,b),this.decompressed.getContent=this.prepareContent(a,a.index,this.compressedSize,b,this.uncompressedSize),this.loadOptions.checkCRC32&&(this.decompressed=f.transformTo(\"string\",this.decompressed.getContent()),h.crc32(this.decompressed)!==this.crc32))throw new Error(\"Corrupted zip : CRC32 mismatch\");\n},readCentralPart:function(a){if(this.versionMadeBy=a.readInt(2),this.versionNeeded=a.readInt(2),this.bitFlag=a.readInt(2),this.compressionMethod=a.readString(2),this.date=a.readDate(),this.crc32=a.readInt(4),this.compressedSize=a.readInt(4),this.uncompressedSize=a.readInt(4),this.fileNameLength=a.readInt(2),this.extraFieldsLength=a.readInt(2),this.fileCommentLength=a.readInt(2),this.diskNumberStart=a.readInt(2),this.internalFileAttributes=a.readInt(2),this.externalFileAttributes=a.readInt(4),this.localHeaderOffset=a.readInt(4),this.isEncrypted())throw new Error(\"Encrypted zip are not supported\");this.fileName=a.readData(this.fileNameLength),this.readExtraFields(a),this.parseZIP64ExtraField(a),this.fileComment=a.readData(this.fileCommentLength)},processAttributes:function(){this.unixPermissions=null,this.dosPermissions=null;var a=this.versionMadeBy>>8;this.dir=!!(16&this.externalFileAttributes),a===j&&(this.dosPermissions=63&this.externalFileAttributes),a===k&&(this.unixPermissions=this.externalFileAttributes>>16&65535),this.dir||\"/\"!==this.fileNameStr.slice(-1)||(this.dir=!0)},parseZIP64ExtraField:function(a){if(this.extraFields[1]){var b=new e(this.extraFields[1].value);this.uncompressedSize===f.MAX_VALUE_32BITS&&(this.uncompressedSize=b.readInt(8)),this.compressedSize===f.MAX_VALUE_32BITS&&(this.compressedSize=b.readInt(8)),this.localHeaderOffset===f.MAX_VALUE_32BITS&&(this.localHeaderOffset=b.readInt(8)),this.diskNumberStart===f.MAX_VALUE_32BITS&&(this.diskNumberStart=b.readInt(4))}},readExtraFields:function(a){var b,c,d,e=a.index;for(this.extraFields=this.extraFields||{};a.index<e+this.extraFieldsLength;)b=a.readInt(2),c=a.readInt(2),d=a.readString(c),this.extraFields[b]={id:b,length:c,value:d}},handleUTF8:function(){var a=i.uint8array?\"uint8array\":\"array\";if(this.useUTF8())this.fileNameStr=h.utf8decode(this.fileName),this.fileCommentStr=h.utf8decode(this.fileComment);else{var b=this.findExtraFieldUnicodePath();if(null!==b)this.fileNameStr=b;else{var c=f.transformTo(a,this.fileName);this.fileNameStr=this.loadOptions.decodeFileName(c)}var d=this.findExtraFieldUnicodeComment();if(null!==d)this.fileCommentStr=d;else{var e=f.transformTo(a,this.fileComment);this.fileCommentStr=this.loadOptions.decodeFileName(e)}}},findExtraFieldUnicodePath:function(){var a=this.extraFields[28789];if(a){var b=new e(a.value);return 1!==b.readInt(1)?null:h.crc32(this.fileName)!==b.readInt(4)?null:h.utf8decode(b.readString(a.length-5))}return null},findExtraFieldUnicodeComment:function(){var a=this.extraFields[25461];if(a){var b=new e(a.value);return 1!==b.readInt(1)?null:h.crc32(this.fileComment)!==b.readInt(4)?null:h.utf8decode(b.readString(a.length-5))}return null}},b.exports=d},{\"./compressedObject\":3,\"./object\":14,\"./stringReader\":16,\"./support\":18,\"./utils\":22}],25:[function(a,b,c){\"use strict\";var d=a(\"./lib/utils/common\").assign,e=a(\"./lib/deflate\"),f=a(\"./lib/inflate\"),g=a(\"./lib/zlib/constants\"),h={};d(h,e,f,g),b.exports=h},{\"./lib/deflate\":26,\"./lib/inflate\":27,\"./lib/utils/common\":28,\"./lib/zlib/constants\":31}],26:[function(a,b,c){\"use strict\";function d(a){if(!(this instanceof d))return new d(a);this.options=i.assign({level:s,method:u,chunkSize:16384,windowBits:15,memLevel:8,strategy:t,to:\"\"},a||{});var b=this.options;b.raw&&b.windowBits>0?b.windowBits=-b.windowBits:b.gzip&&b.windowBits>0&&b.windowBits<16&&(b.windowBits+=16),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new l,this.strm.avail_out=0;var c=h.deflateInit2(this.strm,b.level,b.method,b.windowBits,b.memLevel,b.strategy);if(c!==p)throw new Error(k[c]);if(b.header&&h.deflateSetHeader(this.strm,b.header),b.dictionary){var e;if(e=\"string\"==typeof b.dictionary?j.string2buf(b.dictionary):\"[object ArrayBuffer]\"===m.call(b.dictionary)?new Uint8Array(b.dictionary):b.dictionary,c=h.deflateSetDictionary(this.strm,e),c!==p)throw new Error(k[c]);this._dict_set=!0}}function e(a,b){var c=new d(b);if(c.push(a,!0),c.err)throw c.msg;return c.result}function f(a,b){return b=b||{},b.raw=!0,e(a,b)}function g(a,b){return b=b||{},b.gzip=!0,e(a,b)}var h=a(\"./zlib/deflate\"),i=a(\"./utils/common\"),j=a(\"./utils/strings\"),k=a(\"./zlib/messages\"),l=a(\"./zlib/zstream\"),m=Object.prototype.toString,n=0,o=4,p=0,q=1,r=2,s=-1,t=0,u=8;d.prototype.push=function(a,b){var c,d,e=this.strm,f=this.options.chunkSize;if(this.ended)return!1;d=b===~~b?b:b===!0?o:n,\"string\"==typeof a?e.input=j.string2buf(a):\"[object ArrayBuffer]\"===m.call(a)?e.input=new Uint8Array(a):e.input=a,e.next_in=0,e.avail_in=e.input.length;do{if(0===e.avail_out&&(e.output=new i.Buf8(f),e.next_out=0,e.avail_out=f),c=h.deflate(e,d),c!==q&&c!==p)return this.onEnd(c),this.ended=!0,!1;0!==e.avail_out&&(0!==e.avail_in||d!==o&&d!==r)||(\"string\"===this.options.to?this.onData(j.buf2binstring(i.shrinkBuf(e.output,e.next_out))):this.onData(i.shrinkBuf(e.output,e.next_out)))}while((e.avail_in>0||0===e.avail_out)&&c!==q);return d===o?(c=h.deflateEnd(this.strm),this.onEnd(c),this.ended=!0,c===p):d!==r||(this.onEnd(p),e.avail_out=0,!0)},d.prototype.onData=function(a){this.chunks.push(a)},d.prototype.onEnd=function(a){a===p&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=i.flattenChunks(this.chunks)),this.chunks=[],this.err=a,this.msg=this.strm.msg},c.Deflate=d,c.deflate=e,c.deflateRaw=f,c.gzip=g},{\"./utils/common\":28,\"./utils/strings\":29,\"./zlib/deflate\":33,\"./zlib/messages\":38,\"./zlib/zstream\":40}],27:[function(a,b,c){\"use strict\";function d(a){if(!(this instanceof d))return new d(a);this.options=h.assign({chunkSize:16384,windowBits:0,to:\"\"},a||{});var b=this.options;b.raw&&b.windowBits>=0&&b.windowBits<16&&(b.windowBits=-b.windowBits,0===b.windowBits&&(b.windowBits=-15)),!(b.windowBits>=0&&b.windowBits<16)||a&&a.windowBits||(b.windowBits+=32),b.windowBits>15&&b.windowBits<48&&0===(15&b.windowBits)&&(b.windowBits|=15),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new l,this.strm.avail_out=0;var c=g.inflateInit2(this.strm,b.windowBits);if(c!==j.Z_OK)throw new Error(k[c]);this.header=new m,g.inflateGetHeader(this.strm,this.header)}function e(a,b){var c=new d(b);if(c.push(a,!0),c.err)throw c.msg;return c.result}function f(a,b){return b=b||{},b.raw=!0,e(a,b)}var g=a(\"./zlib/inflate\"),h=a(\"./utils/common\"),i=a(\"./utils/strings\"),j=a(\"./zlib/constants\"),k=a(\"./zlib/messages\"),l=a(\"./zlib/zstream\"),m=a(\"./zlib/gzheader\"),n=Object.prototype.toString;d.prototype.push=function(a,b){var c,d,e,f,k,l,m=this.strm,o=this.options.chunkSize,p=this.options.dictionary,q=!1;if(this.ended)return!1;d=b===~~b?b:b===!0?j.Z_FINISH:j.Z_NO_FLUSH,\"string\"==typeof a?m.input=i.binstring2buf(a):\"[object ArrayBuffer]\"===n.call(a)?m.input=new Uint8Array(a):m.input=a,m.next_in=0,m.avail_in=m.input.length;do{if(0===m.avail_out&&(m.output=new h.Buf8(o),m.next_out=0,m.avail_out=o),c=g.inflate(m,j.Z_NO_FLUSH),c===j.Z_NEED_DICT&&p&&(l=\"string\"==typeof p?i.string2buf(p):\"[object ArrayBuffer]\"===n.call(p)?new Uint8Array(p):p,c=g.inflateSetDictionary(this.strm,l)),c===j.Z_BUF_ERROR&&q===!0&&(c=j.Z_OK,q=!1),c!==j.Z_STREAM_END&&c!==j.Z_OK)return this.onEnd(c),this.ended=!0,!1;m.next_out&&(0!==m.avail_out&&c!==j.Z_STREAM_END&&(0!==m.avail_in||d!==j.Z_FINISH&&d!==j.Z_SYNC_FLUSH)||(\"string\"===this.options.to?(e=i.utf8border(m.output,m.next_out),f=m.next_out-e,k=i.buf2string(m.output,e),m.next_out=f,m.avail_out=o-f,f&&h.arraySet(m.output,m.output,e,f,0),this.onData(k)):this.onData(h.shrinkBuf(m.output,m.next_out)))),0===m.avail_in&&0===m.avail_out&&(q=!0)}while((m.avail_in>0||0===m.avail_out)&&c!==j.Z_STREAM_END);return c===j.Z_STREAM_END&&(d=j.Z_FINISH),d===j.Z_FINISH?(c=g.inflateEnd(this.strm),this.onEnd(c),this.ended=!0,c===j.Z_OK):d!==j.Z_SYNC_FLUSH||(this.onEnd(j.Z_OK),m.avail_out=0,!0)},d.prototype.onData=function(a){this.chunks.push(a)},d.prototype.onEnd=function(a){a===j.Z_OK&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=h.flattenChunks(this.chunks)),this.chunks=[],this.err=a,this.msg=this.strm.msg},c.Inflate=d,c.inflate=e,c.inflateRaw=f,c.ungzip=e},{\"./utils/common\":28,\"./utils/strings\":29,\"./zlib/constants\":31,\"./zlib/gzheader\":34,\"./zlib/inflate\":36,\"./zlib/messages\":38,\"./zlib/zstream\":40}],28:[function(a,b,c){\"use strict\";var d=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Int32Array;c.assign=function(a){for(var b=Array.prototype.slice.call(arguments,1);b.length;){var c=b.shift();if(c){if(\"object\"!=typeof c)throw new TypeError(c+\"must be non-object\");for(var d in c)c.hasOwnProperty(d)&&(a[d]=c[d])}}return a},c.shrinkBuf=function(a,b){return a.length===b?a:a.subarray?a.subarray(0,b):(a.length=b,a)};var e={arraySet:function(a,b,c,d,e){if(b.subarray&&a.subarray)return void a.set(b.subarray(c,c+d),e);for(var f=0;f<d;f++)a[e+f]=b[c+f]},flattenChunks:function(a){var b,c,d,e,f,g;for(d=0,b=0,c=a.length;b<c;b++)d+=a[b].length;for(g=new Uint8Array(d),e=0,b=0,c=a.length;b<c;b++)f=a[b],g.set(f,e),e+=f.length;return g}},f={arraySet:function(a,b,c,d,e){for(var f=0;f<d;f++)a[e+f]=b[c+f]},flattenChunks:function(a){return[].concat.apply([],a)}};c.setTyped=function(a){a?(c.Buf8=Uint8Array,c.Buf16=Uint16Array,c.Buf32=Int32Array,c.assign(c,e)):(c.Buf8=Array,c.Buf16=Array,c.Buf32=Array,c.assign(c,f))},c.setTyped(d)},{}],29:[function(a,b,c){\"use strict\";function d(a,b){if(b<65537&&(a.subarray&&g||!a.subarray&&f))return String.fromCharCode.apply(null,e.shrinkBuf(a,b));for(var c=\"\",d=0;d<b;d++)c+=String.fromCharCode(a[d]);return c}var e=a(\"./common\"),f=!0,g=!0;try{String.fromCharCode.apply(null,[0])}catch(h){f=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(h){g=!1}for(var i=new e.Buf8(256),j=0;j<256;j++)i[j]=j>=252?6:j>=248?5:j>=240?4:j>=224?3:j>=192?2:1;i[254]=i[254]=1,c.string2buf=function(a){var b,c,d,f,g,h=a.length,i=0;for(f=0;f<h;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),i+=c<128?1:c<2048?2:c<65536?3:4;for(b=new e.Buf8(i),g=0,f=0;g<i;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),c<128?b[g++]=c:c<2048?(b[g++]=192|c>>>6,b[g++]=128|63&c):c<65536?(b[g++]=224|c>>>12,b[g++]=128|c>>>6&63,b[g++]=128|63&c):(b[g++]=240|c>>>18,b[g++]=128|c>>>12&63,b[g++]=128|c>>>6&63,b[g++]=128|63&c);return b},c.buf2binstring=function(a){return d(a,a.length)},c.binstring2buf=function(a){for(var b=new e.Buf8(a.length),c=0,d=b.length;c<d;c++)b[c]=a.charCodeAt(c);return b},c.buf2string=function(a,b){var c,e,f,g,h=b||a.length,j=new Array(2*h);for(e=0,c=0;c<h;)if(f=a[c++],f<128)j[e++]=f;else if(g=i[f],g>4)j[e++]=65533,c+=g-1;else{for(f&=2===g?31:3===g?15:7;g>1&&c<h;)f=f<<6|63&a[c++],g--;g>1?j[e++]=65533:f<65536?j[e++]=f:(f-=65536,j[e++]=55296|f>>10&1023,j[e++]=56320|1023&f)}return d(j,e)},c.utf8border=function(a,b){var c;for(b=b||a.length,b>a.length&&(b=a.length),c=b-1;c>=0&&128===(192&a[c]);)c--;return c<0?b:0===c?b:c+i[a[c]]>b?c:b}},{\"./common\":28}],30:[function(a,b,c){\"use strict\";function d(a,b,c,d){for(var e=65535&a|0,f=a>>>16&65535|0,g=0;0!==c;){g=c>2e3?2e3:c,c-=g;do e=e+b[d++]|0,f=f+e|0;while(--g);e%=65521,f%=65521}return e|f<<16|0}b.exports=d},{}],31:[function(a,b,c){\"use strict\";b.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},{}],32:[function(a,b,c){\"use strict\";function d(){for(var a,b=[],c=0;c<256;c++){a=c;for(var d=0;d<8;d++)a=1&a?3988292384^a>>>1:a>>>1;b[c]=a}return b}function e(a,b,c,d){var e=f,g=d+c;a^=-1;for(var h=d;h<g;h++)a=a>>>8^e[255&(a^b[h])];return a^-1}var f=d();b.exports=e},{}],33:[function(a,b,c){\"use strict\";function d(a,b){return a.msg=I[b],b}function e(a){return(a<<1)-(a>4?9:0)}function f(a){for(var b=a.length;--b>=0;)a[b]=0}function g(a){var b=a.state,c=b.pending;c>a.avail_out&&(c=a.avail_out),0!==c&&(E.arraySet(a.output,b.pending_buf,b.pending_out,c,a.next_out),a.next_out+=c,b.pending_out+=c,a.total_out+=c,a.avail_out-=c,b.pending-=c,0===b.pending&&(b.pending_out=0))}function h(a,b){F._tr_flush_block(a,a.block_start>=0?a.block_start:-1,a.strstart-a.block_start,b),a.block_start=a.strstart,g(a.strm)}function i(a,b){a.pending_buf[a.pending++]=b}function j(a,b){a.pending_buf[a.pending++]=b>>>8&255,a.pending_buf[a.pending++]=255&b}function k(a,b,c,d){var e=a.avail_in;return e>d&&(e=d),0===e?0:(a.avail_in-=e,E.arraySet(b,a.input,a.next_in,e,c),1===a.state.wrap?a.adler=G(a.adler,b,e,c):2===a.state.wrap&&(a.adler=H(a.adler,b,e,c)),a.next_in+=e,a.total_in+=e,e)}function l(a,b){var c,d,e=a.max_chain_length,f=a.strstart,g=a.prev_length,h=a.nice_match,i=a.strstart>a.w_size-la?a.strstart-(a.w_size-la):0,j=a.window,k=a.w_mask,l=a.prev,m=a.strstart+ka,n=j[f+g-1],o=j[f+g];a.prev_length>=a.good_match&&(e>>=2),h>a.lookahead&&(h=a.lookahead);do if(c=b,j[c+g]===o&&j[c+g-1]===n&&j[c]===j[f]&&j[++c]===j[f+1]){f+=2,c++;do;while(j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&f<m);if(d=ka-(m-f),f=m-ka,d>g){if(a.match_start=b,g=d,d>=h)break;n=j[f+g-1],o=j[f+g]}}while((b=l[b&k])>i&&0!==--e);return g<=a.lookahead?g:a.lookahead}function m(a){var b,c,d,e,f,g=a.w_size;do{if(e=a.window_size-a.lookahead-a.strstart,a.strstart>=g+(g-la)){E.arraySet(a.window,a.window,g,g,0),a.match_start-=g,a.strstart-=g,a.block_start-=g,c=a.hash_size,b=c;do d=a.head[--b],a.head[b]=d>=g?d-g:0;while(--c);c=g,b=c;do d=a.prev[--b],a.prev[b]=d>=g?d-g:0;while(--c);e+=g}if(0===a.strm.avail_in)break;if(c=k(a.strm,a.window,a.strstart+a.lookahead,e),a.lookahead+=c,a.lookahead+a.insert>=ja)for(f=a.strstart-a.insert,a.ins_h=a.window[f],a.ins_h=(a.ins_h<<a.hash_shift^a.window[f+1])&a.hash_mask;a.insert&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[f+ja-1])&a.hash_mask,a.prev[f&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=f,f++,a.insert--,!(a.lookahead+a.insert<ja)););}while(a.lookahead<la&&0!==a.strm.avail_in)}function n(a,b){var c=65535;for(c>a.pending_buf_size-5&&(c=a.pending_buf_size-5);;){if(a.lookahead<=1){if(m(a),0===a.lookahead&&b===J)return ua;if(0===a.lookahead)break}a.strstart+=a.lookahead,a.lookahead=0;var d=a.block_start+c;if((0===a.strstart||a.strstart>=d)&&(a.lookahead=a.strstart-d,a.strstart=d,h(a,!1),0===a.strm.avail_out))return ua;if(a.strstart-a.block_start>=a.w_size-la&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.strstart>a.block_start&&(h(a,!1),0===a.strm.avail_out)?ua:ua}function o(a,b){for(var c,d;;){if(a.lookahead<la){if(m(a),a.lookahead<la&&b===J)return ua;if(0===a.lookahead)break}if(c=0,a.lookahead>=ja&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart),0!==c&&a.strstart-c<=a.w_size-la&&(a.match_length=l(a,c)),a.match_length>=ja)if(d=F._tr_tally(a,a.strstart-a.match_start,a.match_length-ja),a.lookahead-=a.match_length,a.match_length<=a.max_lazy_match&&a.lookahead>=ja){a.match_length--;do a.strstart++,a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart;while(0!==--a.match_length);a.strstart++}else a.strstart+=a.match_length,a.match_length=0,a.ins_h=a.window[a.strstart],a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+1])&a.hash_mask;else d=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++;if(d&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=a.strstart<ja-1?a.strstart:ja-1,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function p(a,b){for(var c,d,e;;){if(a.lookahead<la){if(m(a),a.lookahead<la&&b===J)return ua;if(0===a.lookahead)break}if(c=0,a.lookahead>=ja&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart),a.prev_length=a.match_length,a.prev_match=a.match_start,a.match_length=ja-1,0!==c&&a.prev_length<a.max_lazy_match&&a.strstart-c<=a.w_size-la&&(a.match_length=l(a,c),a.match_length<=5&&(a.strategy===U||a.match_length===ja&&a.strstart-a.match_start>4096)&&(a.match_length=ja-1)),a.prev_length>=ja&&a.match_length<=a.prev_length){e=a.strstart+a.lookahead-ja,d=F._tr_tally(a,a.strstart-1-a.prev_match,a.prev_length-ja),a.lookahead-=a.prev_length-1,a.prev_length-=2;do++a.strstart<=e&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart);while(0!==--a.prev_length);if(a.match_available=0,a.match_length=ja-1,a.strstart++,d&&(h(a,!1),0===a.strm.avail_out))return ua}else if(a.match_available){if(d=F._tr_tally(a,0,a.window[a.strstart-1]),d&&h(a,!1),a.strstart++,a.lookahead--,0===a.strm.avail_out)return ua}else a.match_available=1,a.strstart++,a.lookahead--}return a.match_available&&(d=F._tr_tally(a,0,a.window[a.strstart-1]),a.match_available=0),a.insert=a.strstart<ja-1?a.strstart:ja-1,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function q(a,b){for(var c,d,e,f,g=a.window;;){if(a.lookahead<=ka){if(m(a),a.lookahead<=ka&&b===J)return ua;if(0===a.lookahead)break}if(a.match_length=0,a.lookahead>=ja&&a.strstart>0&&(e=a.strstart-1,d=g[e],d===g[++e]&&d===g[++e]&&d===g[++e])){f=a.strstart+ka;do;while(d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&e<f);a.match_length=ka-(f-e),a.match_length>a.lookahead&&(a.match_length=a.lookahead)}if(a.match_length>=ja?(c=F._tr_tally(a,1,a.match_length-ja),a.lookahead-=a.match_length,a.strstart+=a.match_length,a.match_length=0):(c=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++),c&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function r(a,b){for(var c;;){if(0===a.lookahead&&(m(a),0===a.lookahead)){if(b===J)return ua;break}if(a.match_length=0,c=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++,c&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function s(a,b,c,d,e){this.good_length=a,this.max_lazy=b,this.nice_length=c,this.max_chain=d,this.func=e}function t(a){a.window_size=2*a.w_size,f(a.head),a.max_lazy_match=D[a.level].max_lazy,a.good_match=D[a.level].good_length,a.nice_match=D[a.level].nice_length,a.max_chain_length=D[a.level].max_chain,a.strstart=0,a.block_start=0,a.lookahead=0,a.insert=0,a.match_length=a.prev_length=ja-1,a.match_available=0,a.ins_h=0}function u(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=$,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new E.Buf16(2*ha),this.dyn_dtree=new E.Buf16(2*(2*fa+1)),this.bl_tree=new E.Buf16(2*(2*ga+1)),f(this.dyn_ltree),f(this.dyn_dtree),f(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new E.Buf16(ia+1),this.heap=new E.Buf16(2*ea+1),f(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new E.Buf16(2*ea+1),f(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function v(a){var b;return a&&a.state?(a.total_in=a.total_out=0,a.data_type=Z,b=a.state,b.pending=0,b.pending_out=0,b.wrap<0&&(b.wrap=-b.wrap),b.status=b.wrap?na:sa,a.adler=2===b.wrap?0:1,b.last_flush=J,F._tr_init(b),O):d(a,Q)}function w(a){var b=v(a);return b===O&&t(a.state),b}function x(a,b){return a&&a.state?2!==a.state.wrap?Q:(a.state.gzhead=b,O):Q}function y(a,b,c,e,f,g){if(!a)return Q;var h=1;if(b===T&&(b=6),e<0?(h=0,e=-e):e>15&&(h=2,e-=16),f<1||f>_||c!==$||e<8||e>15||b<0||b>9||g<0||g>X)return d(a,Q);8===e&&(e=9);var i=new u;return a.state=i,i.strm=a,i.wrap=h,i.gzhead=null,i.w_bits=e,i.w_size=1<<i.w_bits,i.w_mask=i.w_size-1,i.hash_bits=f+7,i.hash_size=1<<i.hash_bits,i.hash_mask=i.hash_size-1,i.hash_shift=~~((i.hash_bits+ja-1)/ja),i.window=new E.Buf8(2*i.w_size),i.head=new E.Buf16(i.hash_size),i.prev=new E.Buf16(i.w_size),i.lit_bufsize=1<<f+6,i.pending_buf_size=4*i.lit_bufsize,i.pending_buf=new E.Buf8(i.pending_buf_size),i.d_buf=1*i.lit_bufsize,i.l_buf=3*i.lit_bufsize,i.level=b,i.strategy=g,i.method=c,w(a)}function z(a,b){return y(a,b,$,aa,ba,Y)}function A(a,b){var c,h,k,l;if(!a||!a.state||b>N||b<0)return a?d(a,Q):Q;if(h=a.state,!a.output||!a.input&&0!==a.avail_in||h.status===ta&&b!==M)return d(a,0===a.avail_out?S:Q);if(h.strm=a,c=h.last_flush,h.last_flush=b,h.status===na)if(2===h.wrap)a.adler=0,i(h,31),i(h,139),i(h,8),h.gzhead?(i(h,(h.gzhead.text?1:0)+(h.gzhead.hcrc?2:0)+(h.gzhead.extra?4:0)+(h.gzhead.name?8:0)+(h.gzhead.comment?16:0)),i(h,255&h.gzhead.time),i(h,h.gzhead.time>>8&255),i(h,h.gzhead.time>>16&255),i(h,h.gzhead.time>>24&255),i(h,9===h.level?2:h.strategy>=V||h.level<2?4:0),i(h,255&h.gzhead.os),h.gzhead.extra&&h.gzhead.extra.length&&(i(h,255&h.gzhead.extra.length),i(h,h.gzhead.extra.length>>8&255)),h.gzhead.hcrc&&(a.adler=H(a.adler,h.pending_buf,h.pending,0)),h.gzindex=0,h.status=oa):(i(h,0),i(h,0),i(h,0),i(h,0),i(h,0),i(h,9===h.level?2:h.strategy>=V||h.level<2?4:0),i(h,ya),h.status=sa);else{var m=$+(h.w_bits-8<<4)<<8,n=-1;n=h.strategy>=V||h.level<2?0:h.level<6?1:6===h.level?2:3,m|=n<<6,0!==h.strstart&&(m|=ma),m+=31-m%31,h.status=sa,j(h,m),0!==h.strstart&&(j(h,a.adler>>>16),j(h,65535&a.adler)),a.adler=1}if(h.status===oa)if(h.gzhead.extra){for(k=h.pending;h.gzindex<(65535&h.gzhead.extra.length)&&(h.pending!==h.pending_buf_size||(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending!==h.pending_buf_size));)i(h,255&h.gzhead.extra[h.gzindex]),h.gzindex++;h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),h.gzindex===h.gzhead.extra.length&&(h.gzindex=0,h.status=pa)}else h.status=pa;if(h.status===pa)if(h.gzhead.name){k=h.pending;do{if(h.pending===h.pending_buf_size&&(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending===h.pending_buf_size)){l=1;break}l=h.gzindex<h.gzhead.name.length?255&h.gzhead.name.charCodeAt(h.gzindex++):0,i(h,l)}while(0!==l);h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),0===l&&(h.gzindex=0,h.status=qa)}else h.status=qa;if(h.status===qa)if(h.gzhead.comment){k=h.pending;do{if(h.pending===h.pending_buf_size&&(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending===h.pending_buf_size)){l=1;break}l=h.gzindex<h.gzhead.comment.length?255&h.gzhead.comment.charCodeAt(h.gzindex++):0,i(h,l)}while(0!==l);h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),0===l&&(h.status=ra)}else h.status=ra;if(h.status===ra&&(h.gzhead.hcrc?(h.pending+2>h.pending_buf_size&&g(a),h.pending+2<=h.pending_buf_size&&(i(h,255&a.adler),i(h,a.adler>>8&255),a.adler=0,h.status=sa)):h.status=sa),0!==h.pending){if(g(a),0===a.avail_out)return h.last_flush=-1,O}else if(0===a.avail_in&&e(b)<=e(c)&&b!==M)return d(a,S);if(h.status===ta&&0!==a.avail_in)return d(a,S);if(0!==a.avail_in||0!==h.lookahead||b!==J&&h.status!==ta){var o=h.strategy===V?r(h,b):h.strategy===W?q(h,b):D[h.level].func(h,b);if(o!==wa&&o!==xa||(h.status=ta),o===ua||o===wa)return 0===a.avail_out&&(h.last_flush=-1),O;if(o===va&&(b===K?F._tr_align(h):b!==N&&(F._tr_stored_block(h,0,0,!1),b===L&&(f(h.head),0===h.lookahead&&(h.strstart=0,h.block_start=0,h.insert=0))),g(a),0===a.avail_out))return h.last_flush=-1,O}return b!==M?O:h.wrap<=0?P:(2===h.wrap?(i(h,255&a.adler),i(h,a.adler>>8&255),i(h,a.adler>>16&255),i(h,a.adler>>24&255),i(h,255&a.total_in),i(h,a.total_in>>8&255),i(h,a.total_in>>16&255),i(h,a.total_in>>24&255)):(j(h,a.adler>>>16),j(h,65535&a.adler)),g(a),h.wrap>0&&(h.wrap=-h.wrap),0!==h.pending?O:P)}function B(a){var b;return a&&a.state?(b=a.state.status,b!==na&&b!==oa&&b!==pa&&b!==qa&&b!==ra&&b!==sa&&b!==ta?d(a,Q):(a.state=null,b===sa?d(a,R):O)):Q}function C(a,b){var c,d,e,g,h,i,j,k,l=b.length;if(!a||!a.state)return Q;if(c=a.state,g=c.wrap,2===g||1===g&&c.status!==na||c.lookahead)return Q;for(1===g&&(a.adler=G(a.adler,b,l,0)),c.wrap=0,l>=c.w_size&&(0===g&&(f(c.head),c.strstart=0,c.block_start=0,c.insert=0),k=new E.Buf8(c.w_size),E.arraySet(k,b,l-c.w_size,c.w_size,0),b=k,l=c.w_size),h=a.avail_in,i=a.next_in,j=a.input,a.avail_in=l,a.next_in=0,a.input=b,m(c);c.lookahead>=ja;){d=c.strstart,e=c.lookahead-(ja-1);do c.ins_h=(c.ins_h<<c.hash_shift^c.window[d+ja-1])&c.hash_mask,c.prev[d&c.w_mask]=c.head[c.ins_h],c.head[c.ins_h]=d,d++;while(--e);c.strstart=d,c.lookahead=ja-1,m(c)}return c.strstart+=c.lookahead,c.block_start=c.strstart,c.insert=c.lookahead,c.lookahead=0,c.match_length=c.prev_length=ja-1,c.match_available=0,a.next_in=i,a.input=j,a.avail_in=h,c.wrap=g,O}var D,E=a(\"../utils/common\"),F=a(\"./trees\"),G=a(\"./adler32\"),H=a(\"./crc32\"),I=a(\"./messages\"),J=0,K=1,L=3,M=4,N=5,O=0,P=1,Q=-2,R=-3,S=-5,T=-1,U=1,V=2,W=3,X=4,Y=0,Z=2,$=8,_=9,aa=15,ba=8,ca=29,da=256,ea=da+1+ca,fa=30,ga=19,ha=2*ea+1,ia=15,ja=3,ka=258,la=ka+ja+1,ma=32,na=42,oa=69,pa=73,qa=91,ra=103,sa=113,ta=666,ua=1,va=2,wa=3,xa=4,ya=3;D=[new s(0,0,0,0,n),new s(4,4,8,4,o),new s(4,5,16,8,o),new s(4,6,32,32,o),new s(4,4,16,16,p),new s(8,16,32,32,p),new s(8,16,128,128,p),new s(8,32,128,256,p),new s(32,128,258,1024,p),new s(32,258,258,4096,p)],c.deflateInit=z,c.deflateInit2=y,c.deflateReset=w,c.deflateResetKeep=v,c.deflateSetHeader=x,c.deflate=A,c.deflateEnd=B,c.deflateSetDictionary=C,c.deflateInfo=\"pako deflate (from Nodeca project)\"},{\"../utils/common\":28,\"./adler32\":30,\"./crc32\":32,\"./messages\":38,\"./trees\":39}],34:[function(a,b,c){\"use strict\";function d(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name=\"\",this.comment=\"\",this.hcrc=0,this.done=!1}b.exports=d},{}],35:[function(a,b,c){\"use strict\";var d=30,e=12;b.exports=function(a,b){var c,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C;c=a.state,f=a.next_in,B=a.input,g=f+(a.avail_in-5),h=a.next_out,C=a.output,i=h-(b-a.avail_out),j=h+(a.avail_out-257),k=c.dmax,l=c.wsize,m=c.whave,n=c.wnext,o=c.window,p=c.hold,q=c.bits,r=c.lencode,s=c.distcode,t=(1<<c.lenbits)-1,u=(1<<c.distbits)-1;a:do{q<15&&(p+=B[f++]<<q,q+=8,p+=B[f++]<<q,q+=8),v=r[p&t];b:for(;;){if(w=v>>>24,p>>>=w,q-=w,w=v>>>16&255,0===w)C[h++]=65535&v;else{if(!(16&w)){if(0===(64&w)){v=r[(65535&v)+(p&(1<<w)-1)];continue b}if(32&w){c.mode=e;break a}a.msg=\"invalid literal/length code\",c.mode=d;break a}x=65535&v,w&=15,w&&(q<w&&(p+=B[f++]<<q,q+=8),x+=p&(1<<w)-1,p>>>=w,q-=w),q<15&&(p+=B[f++]<<q,q+=8,p+=B[f++]<<q,q+=8),v=s[p&u];c:for(;;){if(w=v>>>24,p>>>=w,q-=w,w=v>>>16&255,!(16&w)){if(0===(64&w)){v=s[(65535&v)+(p&(1<<w)-1)];continue c}a.msg=\"invalid distance code\",c.mode=d;break a}if(y=65535&v,w&=15,q<w&&(p+=B[f++]<<q,q+=8,q<w&&(p+=B[f++]<<q,q+=8)),y+=p&(1<<w)-1,y>k){a.msg=\"invalid distance too far back\",c.mode=d;break a}if(p>>>=w,q-=w,w=h-i,y>w){if(w=y-w,w>m&&c.sane){a.msg=\"invalid distance too far back\",c.mode=d;break a}if(z=0,A=o,0===n){if(z+=l-w,w<x){x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}}else if(n<w){if(z+=l+n-w,w-=n,w<x){x-=w;do C[h++]=o[z++];while(--w);if(z=0,n<x){w=n,x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}}}else if(z+=n-w,w<x){x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}for(;x>2;)C[h++]=A[z++],C[h++]=A[z++],C[h++]=A[z++],x-=3;x&&(C[h++]=A[z++],x>1&&(C[h++]=A[z++]))}else{z=h-y;do C[h++]=C[z++],C[h++]=C[z++],C[h++]=C[z++],x-=3;while(x>2);x&&(C[h++]=C[z++],x>1&&(C[h++]=C[z++]))}break}}break}}while(f<g&&h<j);x=q>>3,f-=x,q-=x<<3,p&=(1<<q)-1,a.next_in=f,a.next_out=h,a.avail_in=f<g?5+(g-f):5-(f-g),a.avail_out=h<j?257+(j-h):257-(h-j),c.hold=p,c.bits=q}},{}],36:[function(a,b,c){\"use strict\";function d(a){return(a>>>24&255)+(a>>>8&65280)+((65280&a)<<8)+((255&a)<<24)}function e(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new s.Buf16(320),this.work=new s.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function f(a){var b;return a&&a.state?(b=a.state,a.total_in=a.total_out=b.total=0,a.msg=\"\",b.wrap&&(a.adler=1&b.wrap),b.mode=L,b.last=0,b.havedict=0,b.dmax=32768,b.head=null,b.hold=0,b.bits=0,b.lencode=b.lendyn=new s.Buf32(pa),b.distcode=b.distdyn=new s.Buf32(qa),b.sane=1,b.back=-1,D):G}function g(a){var b;return a&&a.state?(b=a.state,b.wsize=0,b.whave=0,b.wnext=0,f(a)):G}function h(a,b){var c,d;return a&&a.state?(d=a.state,b<0?(c=0,b=-b):(c=(b>>4)+1,b<48&&(b&=15)),b&&(b<8||b>15)?G:(null!==d.window&&d.wbits!==b&&(d.window=null),d.wrap=c,d.wbits=b,g(a))):G}function i(a,b){var c,d;return a?(d=new e,a.state=d,d.window=null,c=h(a,b),c!==D&&(a.state=null),c):G}function j(a){return i(a,sa)}function k(a){if(ta){var b;for(q=new s.Buf32(512),r=new s.Buf32(32),b=0;b<144;)a.lens[b++]=8;for(;b<256;)a.lens[b++]=9;for(;b<280;)a.lens[b++]=7;for(;b<288;)a.lens[b++]=8;for(w(y,a.lens,0,288,q,0,a.work,{bits:9}),b=0;b<32;)a.lens[b++]=5;w(z,a.lens,0,32,r,0,a.work,{bits:5}),ta=!1}a.lencode=q,a.lenbits=9,a.distcode=r,a.distbits=5}function l(a,b,c,d){var e,f=a.state;return null===f.window&&(f.wsize=1<<f.wbits,f.wnext=0,f.whave=0,f.window=new s.Buf8(f.wsize)),d>=f.wsize?(s.arraySet(f.window,b,c-f.wsize,f.wsize,0),f.wnext=0,f.whave=f.wsize):(e=f.wsize-f.wnext,e>d&&(e=d),s.arraySet(f.window,b,c-d,e,f.wnext),d-=e,d?(s.arraySet(f.window,b,c-d,d,0),f.wnext=d,f.whave=f.wsize):(f.wnext+=e,f.wnext===f.wsize&&(f.wnext=0),f.whave<f.wsize&&(f.whave+=e))),0}function m(a,b){var c,e,f,g,h,i,j,m,n,o,p,q,r,pa,qa,ra,sa,ta,ua,va,wa,xa,ya,za,Aa=0,Ba=new s.Buf8(4),Ca=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!a||!a.state||!a.output||!a.input&&0!==a.avail_in)return G;c=a.state,c.mode===W&&(c.mode=X),h=a.next_out,f=a.output,j=a.avail_out,g=a.next_in,e=a.input,i=a.avail_in,m=c.hold,n=c.bits,o=i,p=j,xa=D;a:for(;;)switch(c.mode){case L:if(0===c.wrap){c.mode=X;break}for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(2&c.wrap&&35615===m){c.check=0,Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0),m=0,n=0,c.mode=M;break}if(c.flags=0,c.head&&(c.head.done=!1),!(1&c.wrap)||(((255&m)<<8)+(m>>8))%31){a.msg=\"incorrect header check\",c.mode=ma;break}if((15&m)!==K){a.msg=\"unknown compression method\",c.mode=ma;break}if(m>>>=4,n-=4,wa=(15&m)+8,0===c.wbits)c.wbits=wa;else if(wa>c.wbits){a.msg=\"invalid window size\",c.mode=ma;break}c.dmax=1<<wa,a.adler=c.check=1,c.mode=512&m?U:W,m=0,n=0;break;case M:for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(c.flags=m,(255&c.flags)!==K){a.msg=\"unknown compression method\",c.mode=ma;break}if(57344&c.flags){a.msg=\"unknown header flags set\",c.mode=ma;break}c.head&&(c.head.text=m>>8&1),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0,c.mode=N;case N:for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.head&&(c.head.time=m),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,Ba[2]=m>>>16&255,Ba[3]=m>>>24&255,c.check=u(c.check,Ba,4,0)),m=0,n=0,c.mode=O;case O:for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,\nn+=8}c.head&&(c.head.xflags=255&m,c.head.os=m>>8),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0,c.mode=P;case P:if(1024&c.flags){for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.length=m,c.head&&(c.head.extra_len=m),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0}else c.head&&(c.head.extra=null);c.mode=Q;case Q:if(1024&c.flags&&(q=c.length,q>i&&(q=i),q&&(c.head&&(wa=c.head.extra_len-c.length,c.head.extra||(c.head.extra=new Array(c.head.extra_len)),s.arraySet(c.head.extra,e,g,q,wa)),512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,c.length-=q),c.length))break a;c.length=0,c.mode=R;case R:if(2048&c.flags){if(0===i)break a;q=0;do wa=e[g+q++],c.head&&wa&&c.length<65536&&(c.head.name+=String.fromCharCode(wa));while(wa&&q<i);if(512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,wa)break a}else c.head&&(c.head.name=null);c.length=0,c.mode=S;case S:if(4096&c.flags){if(0===i)break a;q=0;do wa=e[g+q++],c.head&&wa&&c.length<65536&&(c.head.comment+=String.fromCharCode(wa));while(wa&&q<i);if(512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,wa)break a}else c.head&&(c.head.comment=null);c.mode=T;case T:if(512&c.flags){for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m!==(65535&c.check)){a.msg=\"header crc mismatch\",c.mode=ma;break}m=0,n=0}c.head&&(c.head.hcrc=c.flags>>9&1,c.head.done=!0),a.adler=c.check=0,c.mode=W;break;case U:for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}a.adler=c.check=d(m),m=0,n=0,c.mode=V;case V:if(0===c.havedict)return a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,F;a.adler=c.check=1,c.mode=W;case W:if(b===B||b===C)break a;case X:if(c.last){m>>>=7&n,n-=7&n,c.mode=ja;break}for(;n<3;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}switch(c.last=1&m,m>>>=1,n-=1,3&m){case 0:c.mode=Y;break;case 1:if(k(c),c.mode=ca,b===C){m>>>=2,n-=2;break a}break;case 2:c.mode=_;break;case 3:a.msg=\"invalid block type\",c.mode=ma}m>>>=2,n-=2;break;case Y:for(m>>>=7&n,n-=7&n;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if((65535&m)!==(m>>>16^65535)){a.msg=\"invalid stored block lengths\",c.mode=ma;break}if(c.length=65535&m,m=0,n=0,c.mode=Z,b===C)break a;case Z:c.mode=$;case $:if(q=c.length){if(q>i&&(q=i),q>j&&(q=j),0===q)break a;s.arraySet(f,e,g,q,h),i-=q,g+=q,j-=q,h+=q,c.length-=q;break}c.mode=W;break;case _:for(;n<14;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(c.nlen=(31&m)+257,m>>>=5,n-=5,c.ndist=(31&m)+1,m>>>=5,n-=5,c.ncode=(15&m)+4,m>>>=4,n-=4,c.nlen>286||c.ndist>30){a.msg=\"too many length or distance symbols\",c.mode=ma;break}c.have=0,c.mode=aa;case aa:for(;c.have<c.ncode;){for(;n<3;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.lens[Ca[c.have++]]=7&m,m>>>=3,n-=3}for(;c.have<19;)c.lens[Ca[c.have++]]=0;if(c.lencode=c.lendyn,c.lenbits=7,ya={bits:c.lenbits},xa=w(x,c.lens,0,19,c.lencode,0,c.work,ya),c.lenbits=ya.bits,xa){a.msg=\"invalid code lengths set\",c.mode=ma;break}c.have=0,c.mode=ba;case ba:for(;c.have<c.nlen+c.ndist;){for(;Aa=c.lencode[m&(1<<c.lenbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(sa<16)m>>>=qa,n-=qa,c.lens[c.have++]=sa;else{if(16===sa){for(za=qa+2;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m>>>=qa,n-=qa,0===c.have){a.msg=\"invalid bit length repeat\",c.mode=ma;break}wa=c.lens[c.have-1],q=3+(3&m),m>>>=2,n-=2}else if(17===sa){for(za=qa+3;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=qa,n-=qa,wa=0,q=3+(7&m),m>>>=3,n-=3}else{for(za=qa+7;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=qa,n-=qa,wa=0,q=11+(127&m),m>>>=7,n-=7}if(c.have+q>c.nlen+c.ndist){a.msg=\"invalid bit length repeat\",c.mode=ma;break}for(;q--;)c.lens[c.have++]=wa}}if(c.mode===ma)break;if(0===c.lens[256]){a.msg=\"invalid code -- missing end-of-block\",c.mode=ma;break}if(c.lenbits=9,ya={bits:c.lenbits},xa=w(y,c.lens,0,c.nlen,c.lencode,0,c.work,ya),c.lenbits=ya.bits,xa){a.msg=\"invalid literal/lengths set\",c.mode=ma;break}if(c.distbits=6,c.distcode=c.distdyn,ya={bits:c.distbits},xa=w(z,c.lens,c.nlen,c.ndist,c.distcode,0,c.work,ya),c.distbits=ya.bits,xa){a.msg=\"invalid distances set\",c.mode=ma;break}if(c.mode=ca,b===C)break a;case ca:c.mode=da;case da:if(i>=6&&j>=258){a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,v(a,p),h=a.next_out,f=a.output,j=a.avail_out,g=a.next_in,e=a.input,i=a.avail_in,m=c.hold,n=c.bits,c.mode===W&&(c.back=-1);break}for(c.back=0;Aa=c.lencode[m&(1<<c.lenbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(ra&&0===(240&ra)){for(ta=qa,ua=ra,va=sa;Aa=c.lencode[va+((m&(1<<ta+ua)-1)>>ta)],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(ta+qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=ta,n-=ta,c.back+=ta}if(m>>>=qa,n-=qa,c.back+=qa,c.length=sa,0===ra){c.mode=ia;break}if(32&ra){c.back=-1,c.mode=W;break}if(64&ra){a.msg=\"invalid literal/length code\",c.mode=ma;break}c.extra=15&ra,c.mode=ea;case ea:if(c.extra){for(za=c.extra;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.length+=m&(1<<c.extra)-1,m>>>=c.extra,n-=c.extra,c.back+=c.extra}c.was=c.length,c.mode=fa;case fa:for(;Aa=c.distcode[m&(1<<c.distbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(0===(240&ra)){for(ta=qa,ua=ra,va=sa;Aa=c.distcode[va+((m&(1<<ta+ua)-1)>>ta)],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(ta+qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=ta,n-=ta,c.back+=ta}if(m>>>=qa,n-=qa,c.back+=qa,64&ra){a.msg=\"invalid distance code\",c.mode=ma;break}c.offset=sa,c.extra=15&ra,c.mode=ga;case ga:if(c.extra){for(za=c.extra;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.offset+=m&(1<<c.extra)-1,m>>>=c.extra,n-=c.extra,c.back+=c.extra}if(c.offset>c.dmax){a.msg=\"invalid distance too far back\",c.mode=ma;break}c.mode=ha;case ha:if(0===j)break a;if(q=p-j,c.offset>q){if(q=c.offset-q,q>c.whave&&c.sane){a.msg=\"invalid distance too far back\",c.mode=ma;break}q>c.wnext?(q-=c.wnext,r=c.wsize-q):r=c.wnext-q,q>c.length&&(q=c.length),pa=c.window}else pa=f,r=h-c.offset,q=c.length;q>j&&(q=j),j-=q,c.length-=q;do f[h++]=pa[r++];while(--q);0===c.length&&(c.mode=da);break;case ia:if(0===j)break a;f[h++]=c.length,j--,c.mode=da;break;case ja:if(c.wrap){for(;n<32;){if(0===i)break a;i--,m|=e[g++]<<n,n+=8}if(p-=j,a.total_out+=p,c.total+=p,p&&(a.adler=c.check=c.flags?u(c.check,f,p,h-p):t(c.check,f,p,h-p)),p=j,(c.flags?m:d(m))!==c.check){a.msg=\"incorrect data check\",c.mode=ma;break}m=0,n=0}c.mode=ka;case ka:if(c.wrap&&c.flags){for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m!==(4294967295&c.total)){a.msg=\"incorrect length check\",c.mode=ma;break}m=0,n=0}c.mode=la;case la:xa=E;break a;case ma:xa=H;break a;case na:return I;case oa:default:return G}return a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,(c.wsize||p!==a.avail_out&&c.mode<ma&&(c.mode<ja||b!==A))&&l(a,a.output,a.next_out,p-a.avail_out)?(c.mode=na,I):(o-=a.avail_in,p-=a.avail_out,a.total_in+=o,a.total_out+=p,c.total+=p,c.wrap&&p&&(a.adler=c.check=c.flags?u(c.check,f,p,a.next_out-p):t(c.check,f,p,a.next_out-p)),a.data_type=c.bits+(c.last?64:0)+(c.mode===W?128:0)+(c.mode===ca||c.mode===Z?256:0),(0===o&&0===p||b===A)&&xa===D&&(xa=J),xa)}function n(a){if(!a||!a.state)return G;var b=a.state;return b.window&&(b.window=null),a.state=null,D}function o(a,b){var c;return a&&a.state?(c=a.state,0===(2&c.wrap)?G:(c.head=b,b.done=!1,D)):G}function p(a,b){var c,d,e,f=b.length;return a&&a.state?(c=a.state,0!==c.wrap&&c.mode!==V?G:c.mode===V&&(d=1,d=t(d,b,f,0),d!==c.check)?H:(e=l(a,b,f,f))?(c.mode=na,I):(c.havedict=1,D)):G}var q,r,s=a(\"../utils/common\"),t=a(\"./adler32\"),u=a(\"./crc32\"),v=a(\"./inffast\"),w=a(\"./inftrees\"),x=0,y=1,z=2,A=4,B=5,C=6,D=0,E=1,F=2,G=-2,H=-3,I=-4,J=-5,K=8,L=1,M=2,N=3,O=4,P=5,Q=6,R=7,S=8,T=9,U=10,V=11,W=12,X=13,Y=14,Z=15,$=16,_=17,aa=18,ba=19,ca=20,da=21,ea=22,fa=23,ga=24,ha=25,ia=26,ja=27,ka=28,la=29,ma=30,na=31,oa=32,pa=852,qa=592,ra=15,sa=ra,ta=!0;c.inflateReset=g,c.inflateReset2=h,c.inflateResetKeep=f,c.inflateInit=j,c.inflateInit2=i,c.inflate=m,c.inflateEnd=n,c.inflateGetHeader=o,c.inflateSetDictionary=p,c.inflateInfo=\"pako inflate (from Nodeca project)\"},{\"../utils/common\":28,\"./adler32\":30,\"./crc32\":32,\"./inffast\":35,\"./inftrees\":37}],37:[function(a,b,c){\"use strict\";var d=a(\"../utils/common\"),e=15,f=852,g=592,h=0,i=1,j=2,k=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],l=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],m=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],n=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];b.exports=function(a,b,c,o,p,q,r,s){var t,u,v,w,x,y,z,A,B,C=s.bits,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=null,O=0,P=new d.Buf16(e+1),Q=new d.Buf16(e+1),R=null,S=0;for(D=0;D<=e;D++)P[D]=0;for(E=0;E<o;E++)P[b[c+E]]++;for(H=C,G=e;G>=1&&0===P[G];G--);if(H>G&&(H=G),0===G)return p[q++]=20971520,p[q++]=20971520,s.bits=1,0;for(F=1;F<G&&0===P[F];F++);for(H<F&&(H=F),K=1,D=1;D<=e;D++)if(K<<=1,K-=P[D],K<0)return-1;if(K>0&&(a===h||1!==G))return-1;for(Q[1]=0,D=1;D<e;D++)Q[D+1]=Q[D]+P[D];for(E=0;E<o;E++)0!==b[c+E]&&(r[Q[b[c+E]]++]=E);if(a===h?(N=R=r,y=19):a===i?(N=k,O-=257,R=l,S-=257,y=256):(N=m,R=n,y=-1),M=0,E=0,D=F,x=q,I=H,J=0,v=-1,L=1<<H,w=L-1,a===i&&L>f||a===j&&L>g)return 1;for(var T=0;;){T++,z=D-J,r[E]<y?(A=0,B=r[E]):r[E]>y?(A=R[S+r[E]],B=N[O+r[E]]):(A=96,B=0),t=1<<D-J,u=1<<I,F=u;do u-=t,p[x+(M>>J)+u]=z<<24|A<<16|B|0;while(0!==u);for(t=1<<D-1;M&t;)t>>=1;if(0!==t?(M&=t-1,M+=t):M=0,E++,0===--P[D]){if(D===G)break;D=b[c+r[E]]}if(D>H&&(M&w)!==v){for(0===J&&(J=H),x+=F,I=D-J,K=1<<I;I+J<G&&(K-=P[I+J],!(K<=0));)I++,K<<=1;if(L+=1<<I,a===i&&L>f||a===j&&L>g)return 1;v=M&w,p[v]=H<<24|I<<16|x-q|0}}return 0!==M&&(p[x+M]=D-J<<24|64<<16|0),s.bits=H,0}},{\"../utils/common\":28}],38:[function(a,b,c){\"use strict\";b.exports={2:\"need dictionary\",1:\"stream end\",0:\"\",\"-1\":\"file error\",\"-2\":\"stream error\",\"-3\":\"data error\",\"-4\":\"insufficient memory\",\"-5\":\"buffer error\",\"-6\":\"incompatible version\"}},{}],39:[function(a,b,c){\"use strict\";function d(a){for(var b=a.length;--b>=0;)a[b]=0}function e(a,b,c,d,e){this.static_tree=a,this.extra_bits=b,this.extra_base=c,this.elems=d,this.max_length=e,this.has_stree=a&&a.length}function f(a,b){this.dyn_tree=a,this.max_code=0,this.stat_desc=b}function g(a){return a<256?ia[a]:ia[256+(a>>>7)]}function h(a,b){a.pending_buf[a.pending++]=255&b,a.pending_buf[a.pending++]=b>>>8&255}function i(a,b,c){a.bi_valid>X-c?(a.bi_buf|=b<<a.bi_valid&65535,h(a,a.bi_buf),a.bi_buf=b>>X-a.bi_valid,a.bi_valid+=c-X):(a.bi_buf|=b<<a.bi_valid&65535,a.bi_valid+=c)}function j(a,b,c){i(a,c[2*b],c[2*b+1])}function k(a,b){var c=0;do c|=1&a,a>>>=1,c<<=1;while(--b>0);return c>>>1}function l(a){16===a.bi_valid?(h(a,a.bi_buf),a.bi_buf=0,a.bi_valid=0):a.bi_valid>=8&&(a.pending_buf[a.pending++]=255&a.bi_buf,a.bi_buf>>=8,a.bi_valid-=8)}function m(a,b){var c,d,e,f,g,h,i=b.dyn_tree,j=b.max_code,k=b.stat_desc.static_tree,l=b.stat_desc.has_stree,m=b.stat_desc.extra_bits,n=b.stat_desc.extra_base,o=b.stat_desc.max_length,p=0;for(f=0;f<=W;f++)a.bl_count[f]=0;for(i[2*a.heap[a.heap_max]+1]=0,c=a.heap_max+1;c<V;c++)d=a.heap[c],f=i[2*i[2*d+1]+1]+1,f>o&&(f=o,p++),i[2*d+1]=f,d>j||(a.bl_count[f]++,g=0,d>=n&&(g=m[d-n]),h=i[2*d],a.opt_len+=h*(f+g),l&&(a.static_len+=h*(k[2*d+1]+g)));if(0!==p){do{for(f=o-1;0===a.bl_count[f];)f--;a.bl_count[f]--,a.bl_count[f+1]+=2,a.bl_count[o]--,p-=2}while(p>0);for(f=o;0!==f;f--)for(d=a.bl_count[f];0!==d;)e=a.heap[--c],e>j||(i[2*e+1]!==f&&(a.opt_len+=(f-i[2*e+1])*i[2*e],i[2*e+1]=f),d--)}}function n(a,b,c){var d,e,f=new Array(W+1),g=0;for(d=1;d<=W;d++)f[d]=g=g+c[d-1]<<1;for(e=0;e<=b;e++){var h=a[2*e+1];0!==h&&(a[2*e]=k(f[h]++,h))}}function o(){var a,b,c,d,f,g=new Array(W+1);for(c=0,d=0;d<Q-1;d++)for(ka[d]=c,a=0;a<1<<ba[d];a++)ja[c++]=d;for(ja[c-1]=d,f=0,d=0;d<16;d++)for(la[d]=f,a=0;a<1<<ca[d];a++)ia[f++]=d;for(f>>=7;d<T;d++)for(la[d]=f<<7,a=0;a<1<<ca[d]-7;a++)ia[256+f++]=d;for(b=0;b<=W;b++)g[b]=0;for(a=0;a<=143;)ga[2*a+1]=8,a++,g[8]++;for(;a<=255;)ga[2*a+1]=9,a++,g[9]++;for(;a<=279;)ga[2*a+1]=7,a++,g[7]++;for(;a<=287;)ga[2*a+1]=8,a++,g[8]++;for(n(ga,S+1,g),a=0;a<T;a++)ha[2*a+1]=5,ha[2*a]=k(a,5);ma=new e(ga,ba,R+1,S,W),na=new e(ha,ca,0,T,W),oa=new e(new Array(0),da,0,U,Y)}function p(a){var b;for(b=0;b<S;b++)a.dyn_ltree[2*b]=0;for(b=0;b<T;b++)a.dyn_dtree[2*b]=0;for(b=0;b<U;b++)a.bl_tree[2*b]=0;a.dyn_ltree[2*Z]=1,a.opt_len=a.static_len=0,a.last_lit=a.matches=0}function q(a){a.bi_valid>8?h(a,a.bi_buf):a.bi_valid>0&&(a.pending_buf[a.pending++]=a.bi_buf),a.bi_buf=0,a.bi_valid=0}function r(a,b,c,d){q(a),d&&(h(a,c),h(a,~c)),G.arraySet(a.pending_buf,a.window,b,c,a.pending),a.pending+=c}function s(a,b,c,d){var e=2*b,f=2*c;return a[e]<a[f]||a[e]===a[f]&&d[b]<=d[c]}function t(a,b,c){for(var d=a.heap[c],e=c<<1;e<=a.heap_len&&(e<a.heap_len&&s(b,a.heap[e+1],a.heap[e],a.depth)&&e++,!s(b,d,a.heap[e],a.depth));)a.heap[c]=a.heap[e],c=e,e<<=1;a.heap[c]=d}function u(a,b,c){var d,e,f,h,k=0;if(0!==a.last_lit)do d=a.pending_buf[a.d_buf+2*k]<<8|a.pending_buf[a.d_buf+2*k+1],e=a.pending_buf[a.l_buf+k],k++,0===d?j(a,e,b):(f=ja[e],j(a,f+R+1,b),h=ba[f],0!==h&&(e-=ka[f],i(a,e,h)),d--,f=g(d),j(a,f,c),h=ca[f],0!==h&&(d-=la[f],i(a,d,h)));while(k<a.last_lit);j(a,Z,b)}function v(a,b){var c,d,e,f=b.dyn_tree,g=b.stat_desc.static_tree,h=b.stat_desc.has_stree,i=b.stat_desc.elems,j=-1;for(a.heap_len=0,a.heap_max=V,c=0;c<i;c++)0!==f[2*c]?(a.heap[++a.heap_len]=j=c,a.depth[c]=0):f[2*c+1]=0;for(;a.heap_len<2;)e=a.heap[++a.heap_len]=j<2?++j:0,f[2*e]=1,a.depth[e]=0,a.opt_len--,h&&(a.static_len-=g[2*e+1]);for(b.max_code=j,c=a.heap_len>>1;c>=1;c--)t(a,f,c);e=i;do c=a.heap[1],a.heap[1]=a.heap[a.heap_len--],t(a,f,1),d=a.heap[1],a.heap[--a.heap_max]=c,a.heap[--a.heap_max]=d,f[2*e]=f[2*c]+f[2*d],a.depth[e]=(a.depth[c]>=a.depth[d]?a.depth[c]:a.depth[d])+1,f[2*c+1]=f[2*d+1]=e,a.heap[1]=e++,t(a,f,1);while(a.heap_len>=2);a.heap[--a.heap_max]=a.heap[1],m(a,b),n(f,j,a.bl_count)}function w(a,b,c){var d,e,f=-1,g=b[1],h=0,i=7,j=4;for(0===g&&(i=138,j=3),b[2*(c+1)+1]=65535,d=0;d<=c;d++)e=g,g=b[2*(d+1)+1],++h<i&&e===g||(h<j?a.bl_tree[2*e]+=h:0!==e?(e!==f&&a.bl_tree[2*e]++,a.bl_tree[2*$]++):h<=10?a.bl_tree[2*_]++:a.bl_tree[2*aa]++,h=0,f=e,0===g?(i=138,j=3):e===g?(i=6,j=3):(i=7,j=4))}function x(a,b,c){var d,e,f=-1,g=b[1],h=0,k=7,l=4;for(0===g&&(k=138,l=3),d=0;d<=c;d++)if(e=g,g=b[2*(d+1)+1],!(++h<k&&e===g)){if(h<l){do j(a,e,a.bl_tree);while(0!==--h)}else 0!==e?(e!==f&&(j(a,e,a.bl_tree),h--),j(a,$,a.bl_tree),i(a,h-3,2)):h<=10?(j(a,_,a.bl_tree),i(a,h-3,3)):(j(a,aa,a.bl_tree),i(a,h-11,7));h=0,f=e,0===g?(k=138,l=3):e===g?(k=6,l=3):(k=7,l=4)}}function y(a){var b;for(w(a,a.dyn_ltree,a.l_desc.max_code),w(a,a.dyn_dtree,a.d_desc.max_code),v(a,a.bl_desc),b=U-1;b>=3&&0===a.bl_tree[2*ea[b]+1];b--);return a.opt_len+=3*(b+1)+5+5+4,b}function z(a,b,c,d){var e;for(i(a,b-257,5),i(a,c-1,5),i(a,d-4,4),e=0;e<d;e++)i(a,a.bl_tree[2*ea[e]+1],3);x(a,a.dyn_ltree,b-1),x(a,a.dyn_dtree,c-1)}function A(a){var b,c=4093624447;for(b=0;b<=31;b++,c>>>=1)if(1&c&&0!==a.dyn_ltree[2*b])return I;if(0!==a.dyn_ltree[18]||0!==a.dyn_ltree[20]||0!==a.dyn_ltree[26])return J;for(b=32;b<R;b++)if(0!==a.dyn_ltree[2*b])return J;return I}function B(a){pa||(o(),pa=!0),a.l_desc=new f(a.dyn_ltree,ma),a.d_desc=new f(a.dyn_dtree,na),a.bl_desc=new f(a.bl_tree,oa),a.bi_buf=0,a.bi_valid=0,p(a)}function C(a,b,c,d){i(a,(L<<1)+(d?1:0),3),r(a,b,c,!0)}function D(a){i(a,M<<1,3),j(a,Z,ga),l(a)}function E(a,b,c,d){var e,f,g=0;a.level>0?(a.strm.data_type===K&&(a.strm.data_type=A(a)),v(a,a.l_desc),v(a,a.d_desc),g=y(a),e=a.opt_len+3+7>>>3,f=a.static_len+3+7>>>3,f<=e&&(e=f)):e=f=c+5,c+4<=e&&b!==-1?C(a,b,c,d):a.strategy===H||f===e?(i(a,(M<<1)+(d?1:0),3),u(a,ga,ha)):(i(a,(N<<1)+(d?1:0),3),z(a,a.l_desc.max_code+1,a.d_desc.max_code+1,g+1),u(a,a.dyn_ltree,a.dyn_dtree)),p(a),d&&q(a)}function F(a,b,c){return a.pending_buf[a.d_buf+2*a.last_lit]=b>>>8&255,a.pending_buf[a.d_buf+2*a.last_lit+1]=255&b,a.pending_buf[a.l_buf+a.last_lit]=255&c,a.last_lit++,0===b?a.dyn_ltree[2*c]++:(a.matches++,b--,a.dyn_ltree[2*(ja[c]+R+1)]++,a.dyn_dtree[2*g(b)]++),a.last_lit===a.lit_bufsize-1}var G=a(\"../utils/common\"),H=4,I=0,J=1,K=2,L=0,M=1,N=2,O=3,P=258,Q=29,R=256,S=R+1+Q,T=30,U=19,V=2*S+1,W=15,X=16,Y=7,Z=256,$=16,_=17,aa=18,ba=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],ca=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],da=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],ea=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],fa=512,ga=new Array(2*(S+2));d(ga);var ha=new Array(2*T);d(ha);var ia=new Array(fa);d(ia);var ja=new Array(P-O+1);d(ja);var ka=new Array(Q);d(ka);var la=new Array(T);d(la);var ma,na,oa,pa=!1;c._tr_init=B,c._tr_stored_block=C,c._tr_flush_block=E,c._tr_tally=F,c._tr_align=D},{\"../utils/common\":28}],40:[function(a,b,c){\"use strict\";function d(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg=\"\",this.state=null,this.data_type=2,this.adler=0}b.exports=d},{}]},{},[10])(10)});\n","var map = {\n\t\"./af\": 42786,\n\t\"./af.js\": 42786,\n\t\"./ar\": 30867,\n\t\"./ar-dz\": 14130,\n\t\"./ar-dz.js\": 14130,\n\t\"./ar-kw\": 96135,\n\t\"./ar-kw.js\": 96135,\n\t\"./ar-ly\": 56440,\n\t\"./ar-ly.js\": 56440,\n\t\"./ar-ma\": 47702,\n\t\"./ar-ma.js\": 47702,\n\t\"./ar-sa\": 16040,\n\t\"./ar-sa.js\": 16040,\n\t\"./ar-tn\": 37100,\n\t\"./ar-tn.js\": 37100,\n\t\"./ar.js\": 30867,\n\t\"./az\": 31083,\n\t\"./az.js\": 31083,\n\t\"./be\": 9808,\n\t\"./be.js\": 9808,\n\t\"./bg\": 68338,\n\t\"./bg.js\": 68338,\n\t\"./bm\": 67438,\n\t\"./bm.js\": 67438,\n\t\"./bn\": 8905,\n\t\"./bn-bd\": 76225,\n\t\"./bn-bd.js\": 76225,\n\t\"./bn.js\": 8905,\n\t\"./bo\": 11560,\n\t\"./bo.js\": 11560,\n\t\"./br\": 1278,\n\t\"./br.js\": 1278,\n\t\"./bs\": 80622,\n\t\"./bs.js\": 80622,\n\t\"./ca\": 2468,\n\t\"./ca.js\": 2468,\n\t\"./cs\": 5822,\n\t\"./cs.js\": 5822,\n\t\"./cv\": 50877,\n\t\"./cv.js\": 50877,\n\t\"./cy\": 47373,\n\t\"./cy.js\": 47373,\n\t\"./da\": 24780,\n\t\"./da.js\": 24780,\n\t\"./de\": 59740,\n\t\"./de-at\": 60217,\n\t\"./de-at.js\": 60217,\n\t\"./de-ch\": 60894,\n\t\"./de-ch.js\": 60894,\n\t\"./de.js\": 59740,\n\t\"./dv\": 5300,\n\t\"./dv.js\": 5300,\n\t\"./el\": 50837,\n\t\"./el.js\": 50837,\n\t\"./en-au\": 78348,\n\t\"./en-au.js\": 78348,\n\t\"./en-ca\": 77925,\n\t\"./en-ca.js\": 77925,\n\t\"./en-gb\": 22243,\n\t\"./en-gb.js\": 22243,\n\t\"./en-ie\": 46436,\n\t\"./en-ie.js\": 46436,\n\t\"./en-il\": 47207,\n\t\"./en-il.js\": 47207,\n\t\"./en-in\": 44175,\n\t\"./en-in.js\": 44175,\n\t\"./en-nz\": 76319,\n\t\"./en-nz.js\": 76319,\n\t\"./en-sg\": 31662,\n\t\"./en-sg.js\": 31662,\n\t\"./eo\": 92915,\n\t\"./eo.js\": 92915,\n\t\"./es\": 55655,\n\t\"./es-do\": 55251,\n\t\"./es-do.js\": 55251,\n\t\"./es-mx\": 96112,\n\t\"./es-mx.js\": 96112,\n\t\"./es-us\": 71146,\n\t\"./es-us.js\": 71146,\n\t\"./es.js\": 55655,\n\t\"./et\": 5603,\n\t\"./et.js\": 5603,\n\t\"./eu\": 77763,\n\t\"./eu.js\": 77763,\n\t\"./fa\": 76959,\n\t\"./fa.js\": 76959,\n\t\"./fi\": 11897,\n\t\"./fi.js\": 11897,\n\t\"./fil\": 42549,\n\t\"./fil.js\": 42549,\n\t\"./fo\": 94694,\n\t\"./fo.js\": 94694,\n\t\"./fr\": 94470,\n\t\"./fr-ca\": 63049,\n\t\"./fr-ca.js\": 63049,\n\t\"./fr-ch\": 52330,\n\t\"./fr-ch.js\": 52330,\n\t\"./fr.js\": 94470,\n\t\"./fy\": 5044,\n\t\"./fy.js\": 5044,\n\t\"./ga\": 29295,\n\t\"./ga.js\": 29295,\n\t\"./gd\": 2101,\n\t\"./gd.js\": 2101,\n\t\"./gl\": 38794,\n\t\"./gl.js\": 38794,\n\t\"./gom-deva\": 27884,\n\t\"./gom-deva.js\": 27884,\n\t\"./gom-latn\": 23168,\n\t\"./gom-latn.js\": 23168,\n\t\"./gu\": 95349,\n\t\"./gu.js\": 95349,\n\t\"./he\": 24206,\n\t\"./he.js\": 24206,\n\t\"./hi\": 30094,\n\t\"./hi.js\": 30094,\n\t\"./hr\": 30316,\n\t\"./hr.js\": 30316,\n\t\"./hu\": 22138,\n\t\"./hu.js\": 22138,\n\t\"./hy-am\": 11423,\n\t\"./hy-am.js\": 11423,\n\t\"./id\": 29218,\n\t\"./id.js\": 29218,\n\t\"./is\": 90135,\n\t\"./is.js\": 90135,\n\t\"./it\": 90626,\n\t\"./it-ch\": 10150,\n\t\"./it-ch.js\": 10150,\n\t\"./it.js\": 90626,\n\t\"./ja\": 39183,\n\t\"./ja.js\": 39183,\n\t\"./jv\": 24286,\n\t\"./jv.js\": 24286,\n\t\"./ka\": 12105,\n\t\"./ka.js\": 12105,\n\t\"./kk\": 47772,\n\t\"./kk.js\": 47772,\n\t\"./km\": 18758,\n\t\"./km.js\": 18758,\n\t\"./kn\": 79282,\n\t\"./kn.js\": 79282,\n\t\"./ko\": 33730,\n\t\"./ko.js\": 33730,\n\t\"./ku\": 1408,\n\t\"./ku.js\": 1408,\n\t\"./ky\": 33291,\n\t\"./ky.js\": 33291,\n\t\"./lb\": 36841,\n\t\"./lb.js\": 36841,\n\t\"./lo\": 55466,\n\t\"./lo.js\": 55466,\n\t\"./lt\": 57010,\n\t\"./lt.js\": 57010,\n\t\"./lv\": 37595,\n\t\"./lv.js\": 37595,\n\t\"./me\": 39861,\n\t\"./me.js\": 39861,\n\t\"./mi\": 35493,\n\t\"./mi.js\": 35493,\n\t\"./mk\": 95966,\n\t\"./mk.js\": 95966,\n\t\"./ml\": 87341,\n\t\"./ml.js\": 87341,\n\t\"./mn\": 5115,\n\t\"./mn.js\": 5115,\n\t\"./mr\": 10370,\n\t\"./mr.js\": 10370,\n\t\"./ms\": 9847,\n\t\"./ms-my\": 41237,\n\t\"./ms-my.js\": 41237,\n\t\"./ms.js\": 9847,\n\t\"./mt\": 72126,\n\t\"./mt.js\": 72126,\n\t\"./my\": 56165,\n\t\"./my.js\": 56165,\n\t\"./nb\": 64924,\n\t\"./nb.js\": 64924,\n\t\"./ne\": 16744,\n\t\"./ne.js\": 16744,\n\t\"./nl\": 93901,\n\t\"./nl-be\": 59814,\n\t\"./nl-be.js\": 59814,\n\t\"./nl.js\": 93901,\n\t\"./nn\": 83877,\n\t\"./nn.js\": 83877,\n\t\"./oc-lnc\": 92135,\n\t\"./oc-lnc.js\": 92135,\n\t\"./pa-in\": 15858,\n\t\"./pa-in.js\": 15858,\n\t\"./pl\": 64495,\n\t\"./pl.js\": 64495,\n\t\"./pt\": 89520,\n\t\"./pt-br\": 57971,\n\t\"./pt-br.js\": 57971,\n\t\"./pt.js\": 89520,\n\t\"./ro\": 96459,\n\t\"./ro.js\": 96459,\n\t\"./ru\": 21793,\n\t\"./ru.js\": 21793,\n\t\"./sd\": 40950,\n\t\"./sd.js\": 40950,\n\t\"./se\": 10490,\n\t\"./se.js\": 10490,\n\t\"./si\": 90124,\n\t\"./si.js\": 90124,\n\t\"./sk\": 64249,\n\t\"./sk.js\": 64249,\n\t\"./sl\": 14985,\n\t\"./sl.js\": 14985,\n\t\"./sq\": 51104,\n\t\"./sq.js\": 51104,\n\t\"./sr\": 49131,\n\t\"./sr-cyrl\": 79915,\n\t\"./sr-cyrl.js\": 79915,\n\t\"./sr.js\": 49131,\n\t\"./ss\": 85893,\n\t\"./ss.js\": 85893,\n\t\"./sv\": 98760,\n\t\"./sv.js\": 98760,\n\t\"./sw\": 91172,\n\t\"./sw.js\": 91172,\n\t\"./ta\": 27333,\n\t\"./ta.js\": 27333,\n\t\"./te\": 23110,\n\t\"./te.js\": 23110,\n\t\"./tet\": 52095,\n\t\"./tet.js\": 52095,\n\t\"./tg\": 27321,\n\t\"./tg.js\": 27321,\n\t\"./th\": 9041,\n\t\"./th.js\": 9041,\n\t\"./tk\": 19005,\n\t\"./tk.js\": 19005,\n\t\"./tl-ph\": 75768,\n\t\"./tl-ph.js\": 75768,\n\t\"./tlh\": 89444,\n\t\"./tlh.js\": 89444,\n\t\"./tr\": 72397,\n\t\"./tr.js\": 72397,\n\t\"./tzl\": 28254,\n\t\"./tzl.js\": 28254,\n\t\"./tzm\": 51106,\n\t\"./tzm-latn\": 30699,\n\t\"./tzm-latn.js\": 30699,\n\t\"./tzm.js\": 51106,\n\t\"./ug-cn\": 9288,\n\t\"./ug-cn.js\": 9288,\n\t\"./uk\": 67691,\n\t\"./uk.js\": 67691,\n\t\"./ur\": 13795,\n\t\"./ur.js\": 13795,\n\t\"./uz\": 6791,\n\t\"./uz-latn\": 60588,\n\t\"./uz-latn.js\": 60588,\n\t\"./uz.js\": 6791,\n\t\"./vi\": 65666,\n\t\"./vi.js\": 65666,\n\t\"./x-pseudo\": 14378,\n\t\"./x-pseudo.js\": 14378,\n\t\"./yo\": 75805,\n\t\"./yo.js\": 75805,\n\t\"./zh-cn\": 83839,\n\t\"./zh-cn.js\": 83839,\n\t\"./zh-hk\": 55726,\n\t\"./zh-hk.js\": 55726,\n\t\"./zh-mo\": 99807,\n\t\"./zh-mo.js\": 99807,\n\t\"./zh-tw\": 74152,\n\t\"./zh-tw.js\": 74152\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","/*\n * custom_activelist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomActiveList {\n   get key() {\n      return \"activelist\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.list, webix.ActiveContent);\n   }\n};\n","/*\n * countfooter\n *\n * Add the count footer to the webix's datatable.\n *\n */\n\nmodule.exports = class ABCountFooter {\n   get key() {\n      return \"countfooter\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {};\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {};\n\n      // Our webix UI definition:\n      var _ui = {};\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix :\n      webix.ui.datafilter.countColumn = webix.extend(\n         {\n            refresh: function (datatable, node, info) {\n               var result = 0;\n\n               var rowData = datatable.find({}) || [];\n               rowData.forEach((row) => {\n                  if (row == null) return;\n\n                  var data =\n                     row[info.columnId] || row[info.columnId + \"__relation\"];\n\n                  // array\n                  if (data && Array.isArray(data)) {\n                     result += data.length;\n                  } else if (\n                     data != null &&\n                     data != \"\" &&\n                     data != false &&\n                     data != \"false\" &&\n                     data != \"0\"\n                  ) {\n                     result += 1;\n                  }\n               });\n\n               node.innerHTML = result;\n            },\n         },\n         webix.ui.datafilter.summColumn\n      );\n   }\n};\n","/*\n * Custom Component Manager\n * Make sure our {ABComponent}s are initialized with our custom\n * Webix Components.\n */\n\n// Import our Custom Components here:\nvar componentList = [\n   require(\"./activelist\"),\n   require(\"./countfooter\"),\n   require(\"./datetimepicker\"),\n   require(\"./editlist\"),\n   require(\"./edittree\"),\n   require(\"./editunitlist\"),\n   require(\"./focusableTemplate\"),\n   require(\"./formioPreview\"),\n   require(\"./numbertext\"),\n   require(\"./thaicalendar\"),\n   require(\"./timepicker\"),\n   require(\"./totalfooter\"),\n   require(\"./treesuggest\"),\n   // require('./savablelayout')\n];\n\nmodule.exports = class ABCustomComponentManager {\n   constructor() {}\n\n   initComponents(App) {\n      App.custom = App.custom || {};\n\n      componentList.forEach((Component) => {\n         var component = new Component(App);\n         App.custom[component.key] = component;\n      });\n\n      // Transition to v2:\n      App.AB.custom = App.custom;\n   }\n};\n","/*\n * custom_datetimepicker\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomDateTimePicker {\n   //.extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"datetimepicker\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: App.unique(\"custom_datetimepicker\") // keep this unique for this App instance.\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.editors.$popup.datetime = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: \"calendar\",\n            icons: true,\n            borderless: true,\n            timepicker: true\n         }\n      };\n\n      webix.editors.datetime = webix.extend(\n         {\n            popupType: \"datetime\"\n         },\n         webix.editors.date\n      );\n   }\n};\n","/*\n * custom_editlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"editlist\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.list);\n   }\n};\n","/*\n * custom_edittree\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditTree {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"edittree\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.tree);\n   }\n};\n","/*\n * custom_editunitlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditUnitList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"editunitlist\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n      /*\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n*/\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.unitlist);\n   }\n};\n","/*\n * custom_activelist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomFocusableTemplate {\n   get key() {\n      return \"focusabletemplate\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         focus: function() {\n            return false;\n         }\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.template, webix.UIManager);\n   }\n};\n","/*\n * formioBuilder\n *\n * Create a custom webix component.\n *\n */\nvar ABEmitter = require(\"../AppBuilder/platform/ABEmitter.js\");\nmodule.exports = class ABCustomFormIOPreview extends ABEmitter {\n   get key() {\n      return \"formiopreview\";\n   }\n\n   constructor(App) {\n      super();\n\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var _this = this;\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         defaults: {\n            css: \"scrolly\",\n            borderless: true,\n         },\n         $init: function (config) {\n            var formComponents = config.formComponents\n               ? config.formComponents\n               : {};\n            var formData = config.formData ? config.formData : {};\n            // we need to find out when we are passing an array of objects and reduce it down to an array of IDs\n            for (var data in formData) {\n               if (\n                  Array.isArray(formData[data]) &&\n                  typeof formData[data][0] == \"object\"\n               ) {\n                  var newD = [];\n                  formData[data].forEach((item) => {\n                     if (item.id) newD.push(item.id);\n                  });\n                  formData[data] = newD;\n               }\n            }\n\n            Formio.createForm(this.$view, formComponents, {\n               // readOnly: true\n               // sanitizeConfig: {\n               //     addTags: [\"a\", \"label\", \"img\", \"i\"],\n               //     addAttr: [\"src\", \"href\", \"class\", \"target\"]\n               // }\n            }).then(function (form) {\n               // now that it is set up we can push it into the global var\n               // formBuilder = builder;\n               // Provide a default submission.\n               form.submission = {\n                  data: formData,\n               };\n               (formComponents.components || []).forEach((comp) => {\n                  if (\n                     comp.type == \"button\" &&\n                     comp.action == \"event\" &&\n                     comp.event\n                  ) {\n                     form.once(comp.event, function (click) {\n                        config.onButton ? config.onButton(comp.event) : null;\n                        // _this.emit(\"button\", comp.event);\n                     });\n                  }\n               });\n               // form.submission = {\n               //     data: {\n               //         Name: \"Item #5\",\n               //         Image: \"4f2be24f-6ad0-4687-abbb-1a87ce7bc1d6\",\n               //         \"Long text\": \"This is a long text field.\",\n               //         \"Number Field\": 3,\n               //         \"Date Field\": \"2020-02-03\",\n               //         \"Date and Time\": \"2020-02-19 00:00:00\",\n               //         \"Checkbox field\": 1,\n               //         \"Items to select\": 1580782610224,\n               //         \"Multiple Items\": [1580786381276, 1580786381494],\n               //         \"Email Field\": \"james@digiserve.org\",\n               //         \"Image Field\":\n               //             \"d5063af3-06b0-44d0-ae9d-c88a74b81e21\",\n               //         \"File Attachment\":\n               //             '{\"uuid\":\"2d3708eb-d567-483b-9b1e-7cbd6d654866\",\"filename\":\"2018-01-12 09-44 copy.pdf\"}',\n               //         \"User Field\": \"James\"\n               //     }\n               // };\n            });\n         },\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.view);\n   }\n};\n","/*\n * numbertext\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomNumberText {\n   get key() {\n      return \"numbertext\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n\n         defaults: {\n            css: \"webix_el_text\"\n         },\n\n         // override this function to return number value type\n         $getValue: function() {\n            var val = this.getInputNode().value;\n            if (val) return JSON.parse(val);\n            // Convert to number\n            else return \"\";\n         }\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.text);\n   }\n};\n","/*\n * Thai Calendar\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomThaiCalendar {\n   get key() {\n      return \"thaicalendar\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      this.view = this.key;\n\n      const i18n = webix.i18n;\n\n      // Our webix UI definition:\n      const _ui = {\n         name: this.key,\n         defaults: {\n            calendarHeader: function (d) {\n               return `${i18n.calendar.monthFull[d.getMonth()]} ${\n                  d.getFullYear() + 543\n               }`;\n            },\n         },\n      };\n\n      if (webix.ui.calendar.$protoWait[0]._zoom_logic) {\n         _ui._zoom_logic = AB.cloneDeep(\n            webix.ui.calendar.$protoWait[0]._zoom_logic\n         );\n         _ui._zoom_logic[1] = Object.assign(_ui._zoom_logic[1], {\n            _getTitle: this._getYearTitle,\n         });\n         _ui._zoom_logic[2] = Object.assign(_ui._zoom_logic[2], {\n            _getTitle: this._getYearRangeTitle,\n            _getContent: this._getYearContent,\n            _setContent: this._setYear,\n         });\n      }\n\n      if (webix.ui.calendar.$protoWait[0].Qd) {\n         _ui.Qd = AB.cloneDeep(webix.ui.calendar.$protoWait[0].Qd);\n         _ui.Qd[1] = Object.assign(_ui.Qd[1], {\n            Jv: this._getYearTitle,\n         });\n         _ui.Qd[2] = Object.assign(_ui.Qd[2], {\n            Jv: this._getYearRangeTitle,\n            Zv: this._getYearContent,\n            Xv: this._setYear,\n         });\n      }\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.calendar);\n\n      webix.editors.$popup.thaidate = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: this.key,\n            icons: true,\n            borderless: true,\n            timepicker: false,\n         },\n      };\n\n      webix.editors.$popup.thaidatetime = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: this.key,\n            icons: true,\n            borderless: true,\n            timepicker: true,\n         },\n      };\n\n      webix.editors.thaidate = webix.extend(\n         {\n            popupType: \"thaidate\",\n         },\n         webix.editors.date\n      );\n\n      webix.editors.thaidatetime = webix.extend(\n         {\n            popupType: \"thaidatetime\",\n         },\n         webix.editors.date\n      );\n   }\n\n   _getYearTitle(date) {\n      return date.getFullYear() + 543;\n   }\n\n   _getYearRangeTitle(date, calendar) {\n      let start = date.getFullYear() + 543;\n      calendar._zoom_start_date = start = start - (start % 10) - 1;\n      return start + \" - \" + (start + 10 + 1);\n   }\n\n   _getYearContent(i, calendar) {\n      return calendar._zoom_start_date + i;\n   }\n\n   _setYear(next, i, calendar) {\n      next.setFullYear(calendar._zoom_start_date - 543 + i);\n   }\n};\n","/*\n * custom_timepicker\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomTimePicker {\n   //.extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"timepicker\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: App.unique(\"custom_timepicker\") // keep this unique for this App instance.\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.editors.$popup.time = {\n         view: \"popup\",\n         body: {\n            view: \"calendar\",\n            width: 220,\n            height: 200,\n            type: \"time\"\n         }\n      };\n\n      webix.editors.time = webix.extend(\n         {\n            popupType: \"time\"\n         },\n         webix.editors.date\n      );\n   }\n};\n","/*\n * totalfooter\n *\n * Add the contents of records to show in footer of the webix's datatable.\n *\n */\n\nmodule.exports = class ABTotalFooter {\n   get key() {\n      return \"totalfooter\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {};\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {};\n\n      // Our webix UI definition:\n      var _ui = {};\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix :\n      webix.ui.datafilter.totalColumn = webix.extend(\n         {\n            refresh: function (datatable, node, info) {\n               var result = 0;\n\n               datatable.eachRow(function (row) {\n                  var record = datatable.getItem(row);\n\n                  var data = info.field.format(record);\n\n                  // array\n                  if (data) {\n                     result += parseFloat(data); // we need to use parseFloat because numbers could be decimals\n                  }\n               });\n\n               node.innerHTML = result;\n            },\n         },\n         webix.ui.datafilter.summColumn\n      );\n   }\n};\n","/*\n * custom_editlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"treesuggest\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         defaults: {\n            type: \"tree\",\n            width: 0,\n            body: {\n               borderless: true,\n               select: true,\n               template: function(obj, common) {\n                  return (\n                     \"<span>\" +\n                     (obj.$count ? \"<b>\" + obj.value + \"</b>\" : obj.value) +\n                     \"</span>\"\n                  );\n               },\n               ready: function() {\n                  this.openAll();\n               },\n               on: {\n                  onAfterSelect: function(id, e) {\n                     if (this.getItem(id).$count) {\n                        this.getParentView().setMasterValue(\"\");\n                        this.show(\n                           $$(this.getParentView().config.master).getInputNode()\n                        );\n                     }\n                  }\n               }\n            }\n         }\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.suggest);\n   }\n};\n"],"names":["ABComponent","ABFieldManager","module","exports","constructor","App","idBase","super","L","this","Label","ids","component","unique","types","editDefinitions","buttonSave","buttonCancel","ui","view","position","id","resize","modal","height","width","head","css","cols","label","align","autowidth","click","_logic","body","scroll","borderless","type","rows","labelWidth","AB","UISettings","config","labelWidthLarge","options","on","onChange","ev","node","padding","cells","fillspace","value","onHide","resetState","_objectHash","_componentHash","_componentsByType","_currentEditor","_currentObject","defaultEditorComponent","submenus","_editField","init","c","callbacks","webix","extend","$$","ProgressBar","Fields","allFields","newEditorList","animate","forEach","F","menuName","defaults","key","push","editorComponent","propertiesComponent","define","refresh","hide","show","setValue","applicationLoad","application","objectLoad","object","clear","async","disable","showProgress","editor","isValid","linkCol","vals","cloneDeep","values","field","oldData","toObj","updateValues","keySetting","fromValues","fieldNew","length","settings","showIcon","rand","Math","floor","random","isSource","linkObject","datasourceLink","linkColumnName","columnName","fields","f","linkType","linkViaType","name","isCustomFK","indexField","indexField2","validator","fail","updateForm","enable","hideProgress","save","finishUpdateField","onSave","refreshModels","model","linkColumn","migrateCreate","err","notify","developer","Error","onCancel","console","warn","modeAdd","allowFieldKey","isImported","connectField","filter","connectMenuName","modeEdit","populate","elements","disableElem","elem","disallowEdit","childElems","childElem","blur","enableElem","fieldKey","typeClick","subMenuId","data","submenu","getSubMenu","actions","list","form","formUI","onItemClick","e","clickAddNewSort","triggerOnChange","onShow","CurrentObject","fieldId","dir","sort_form","viewIndex","getChildViews","listFields","getFieldList","addView","uid","columnId","onChangeCombo","newv","oldv","icon","removeView","getParentView","refreshFieldList","excludeSelected","fieldIsSortable","childViews","cView","index","selectedValue","getValue","removeIndex","splice","setSettings","_settings","getSettings","sortFields","el","columnConfig","sortDir","sorts","s","ignoreRemoveViews","selectedFields","removeChildViews","fieldObj","selectedFieldsExcludeCurField","x","Array","isArray","indexOf","enableFields","_blockOnChange","blockOnChange","unblockOnChange","$view","sort","a","b","result","fieldByID","by","aValue","bValue","map","item","text","join","EventEmitter","isAuthenticated","_config","_listRoles","_listScopes","_listUsers","UserConfig","Config","userConfig","MetaConfig","metaConfig","roles","scopes","users","Network","context","error","emit","Promise","resolve","canSwitcheroo","r","uuid","isSwitcherood","userReal","isSystemDesigner","email","language","languageCode","logout","post","url","tenantUrl","Tenant","setting","fn","rolesAll","username","userList","imageID","image_id","sendEmailNotifications","Alert","opts","alert","title","Multilingual","message","ok","Confirm","labelYes","labelNo","cancel","confirm","callback","fnYes","fnNo","ConfirmDelete","Message","timeout","expire","MLClass","_missingLabelID","_missingLabels","_pluginLabelsMissing","labels","labelConfig","_languages","languageConfig","pluginLabels","currentLanguage","Account","altText","postMissing","arguments","replace","newKey","slice","postMissingLabel","v","i","sub","replaceAll","labelPlugin","plugin","languages","pluginLoadLabels","pluginLabelReport","JSON","stringify","clearTimeout","sendBatch","batchLabels","missingLabels","Object","keys","k","l","shift","then","catch","toString","setTimeout","destroy","toDefinition","Atomic","parent","wildcard","newListener","maxListeners","baseURL","numRetries","_network","isRealTime","siteConfig","appbuilder","urlCoreServer","networkNumRetries","get","params","jobResponse","useThese","search","val","encodeURIComponent","_request","put","delete","isNetworkConnected","salSend","packet","_retry","code","publishResponse","reject","headers","authToken","Authorization","tenantID","method","statusText","Analytics","log","_err","status","responseText","parse","response","queue","resend","listSocketEvents","io","socket","obj","objectByID","objectId","jobID","timeFrom","performance","now","normalizeData","timeTo","isConnected","shortRoute","match","op","_salSend","toLowerCase","request","jwres","statusCode","errStr","Stringify","setMaxListeners","queueLock","_queueCount","Lock","networkType","queueFlush","idConnectionCheck","window","addEventListener","_connectionCheck","networkStatus","navigator","connection","Connection","onLine","NONE","refQueue","queueCount","acquire","Storage","set","release","logError","processRequest","cb","entry","job","res","rej","reset","getTokens","tenantStorage","Webix","storage","prefix","local","remove","clearAll","_storage","encrypted","textClickToEnter","String","appListRowHeight","buttonWidthLarge","buttonWidthMedium","buttonWidthSmall","buttonWidthExtraSmall","tabWidthLarge","tabWidthMedium","tabWidthSmall","tabWidthExtraSmall","columnWidthXLarge","columnWidthLarge","columnWidthMedium","columnWidthSmall","columnWidthExtraSmall","xSmallSpacer","smallSpacer","mediumSpacer","largeSpacer","xLargeSpacer","xxLargeSpacer","xxxLargeSpacer","appListSpacerRowHeight","appListSpacerColMinWidth","appListSpacerColMaxWidth","objectWorkspaceColWidth","labelWidthSmall","labelWidthMedium","labelWidthXLarge","labelWidthXXLarge","labelWidthXXXLarge","labelWidthCheckbox","hideMobile","innerWidth","icons","ABValidator","errors","addError","pass","toValidationObject","invalidAttributes","attr","vObj","Validation","isFormValidationError","updateGrid","rowID","grid","isGridValidationError","ABFactory","definitions","Dialog","ClassUI","Class","FilterComplex","ABViewManager","errorSailsCleanup","raw","hasFocused","attrs","wasForm","msg","markInvalid","focus","row","Grid","wasGrid","addCellCss","clearSelection","Definitions","_plugins","_pendingNetworkRequests","fullDef","pending","pkt","newDef","definitionNew","serverDef","definitionCreate","_definitions","platformRules","toDate","dateText","ignoreTime","format","Date","toDateFormat","date","momentObj","localeCode","locale","subtractDate","number","unit","subtract","addDate","add","rules","allInits","all","_localSettings","json","definitionSync","def","domain","info","scope","setLevel","setTag","setContext","plugins","pluginLoad","p","rest","emitData","localSettings","isUUID","RegExp","test","merge","orderBy","uniq","kebabCase","sumBy","meanBy","maxBy","minBy","isString","ABMLClass","attributes","versionData","versionNumber","changeLog","author","version","keepVersion","commitMessage","timestamp","toISOString","isSystemObject","roleAccess","isAccessManaged","accessManagers","isTranslationManaged","translationManagers","isTutorialManaged","tutorialManagers","hintIDs","objectIDs","queryIDs","datacollectionIDs","newPages","pageIDs","definitionByID","pageNew","appID","pageID","_pages","processIDs","pID","processByID","processID","objectListSettings","isOpen","searchText","sortDirection","isGroup","translations","isAccessibleForRoles","foundRole","parseInt","useRole","role","pages","mobileApps","_mobileApps","datacollectionsExcluded","datacollections","o","datacollectionsIncluded","sortFn","localeCompare","objectsExcluded","objects","objectsIncluded","hintsExcluded","hints","h","hintsIncluded","connectedObjects","connectedFields","connectFields","connectedObj","linkedObjects","currObjID","linkedObjectID","linkedFields","deep","subPages","processes","hasProcess","process","views","_views","subViews","lookDeep","pageViews","concat","viewAll","allViews","queriesExcluded","queries","q","queriesIncluded","urlResolve","pointer","parts","split","parseStep","steps","urlPointer","acrossApp","urlObject","urlPage","urlQuery","objectlistIsOpen","objectlistSearchText","objectlistSortDirection","objectlistIsGroup","newView","pageByID","viewNew","DefaultValues","query","datasourceID","linkDatacollectionID","linkFieldID","followDatacollectionID","objectWorkspace","filterConditions","glue","loadAll","isQuery","fixSelect","syncType","__dataCollection","_dataCollectionNew","refreshFilterConditions","__bindComponentIds","__flexComponentIds","_dataStatus","dataStatusFlag","notInitial","__filterCond","static","undefined","preventPopulate","__datasource","queryByID","__treeCollection","_treeCollectionNew","__isGroup","removeFromApplications","next","apps","applications","allRemoves","app","datacollectionRemove","$dc","datasource","datacollection","sourceType","datacollectionLink","datacollectionByID","fieldLink","initializing","initialized","dataStatus","setCursor","itemId","setCursorTree","currTreeId","getCursor","currTreeItem","getItem","_itemId","dc","exists","tc","find","treeItem","$parent","treeCursor","currId","currItem","currItemAndChilds","serialize","refreshLinkCursor","getFirstRecord","getFirstId","getNextRecord","record","getNextId","linkCursor","dvLink","filterData","rowData","isParentFilterValid","setStaticCursor","currentUserUsername","userFields","found","currRowId","rowId","isCursorFollow","filterCondition","cond","___AD","onAfterCursorChange","attachEvent","currData","isRelated","relateData","PK","needAdd","updatedVals","bad","ABObjectQuery","objList","where","newDataId","alias","objectAlias","rule","findAll","newQueryData","updatedV","isValidData","__reloadWheres","bcids","pos","DC","event","reloadData","parseTreeCollection","d","updateItemData","updateRelateVal","relationName","rowRelateVal","valIsRelated","updateItem","needUpdate","isExists","updatedIds","updatedTreeIds","_queryUpdateData","ABObject","count","assign","dcItem","staleRefresh","deleteId","needDelete","deletedIds","deletedTreeIds","delId","updateRelateVals","relateVal","linkDv","eventAdd","emitter","eventName","listener","followDC","datacollectionFollow","loadData","waitForDataCollectionToInitialize","start","limit","wheres","__additionalWheres","dataCollectionLink","linkCursorId","getRelationValue","followCursor","unshift","skip","linkDc","dcFilters","dv","_pendingLoadDataResolve","platformFind","processIncomingData","incomingData","total_count","nextData","remain","parsedData","queuedParse","__totalCount","__throttleIncoming","load","reloadTimer","reloadPromise","reloadPromise__resolve","reloadPromise__reject","reloadWheres","getData","linkObj","linkVal","totalCount","bind","unbind","removeComponent","comId","__filterDatasource","filterComplexNew","fieldsLoad","__filterDatacollection","__filterScope","scopeList","userScopes","allowAll","objectIds","scopeRules","sRules","scopeWhere","syncTypeFlag","server","client","oItem","tran","updatedTran","tranKey","clone","clonedDatacollection","parseMe","cursorID","filteredClone","filters","evt","__events","eventClear","removeListener","builder","definitionDestroy","definitionUpdate","ABApplication","ABDefinition","ABIndex","ABObjectExternal","ABObjectImport","ABDataCollection","ABHint","ABProcess","ABProcessParticipant","ABProcessLane","ABProcessTaskManager","ABStep","ABViewDetailItem","ABViewFormItem","RowFilter","hash","_allApplications","_allObjects","_allHints","_allProcesses","_allQueries","_allSteps","_allDatacollections","nameFilter","toApplicationNameFormat","toFieldRelationFormat","colName","toJunctionTableFK","objectName","fkName","substring","toJunctionTableNameFormat","appName","sourceTableName","targetTableName","toObjectNameFormat","definitionClean","allDefinitions","keyList","keyFn","objectKeysByDef","isRaw","definitionsParse","defs","curr","applicationByID","ID","applicationNew","datacollectionNew","newField","indexNew","objectNew","isExternal","objectFile","objectLanguage","objectProcessForm","objectProcessInstance","objectRole","objectScope","objectToken","objectUser","hintID","hintNew","stepID","stepNew","stepDef","hint","processNew","processElementNew","taskDef","newTask","processElementNewForModelDefinition","element","newElement","defaultDef","definitionForElement","fromElement","queryNew","rowfilterNew","_App","viewNewDetatched","_mockApp","_notifyInfo","moreInfo","objectID","fieldID","fieldName","datacollectionID","datacollectionName","ds","datacollectionDSID","datacollectionDSName","processName","req","_tenantID","user","_user","taskID","taskName","applicationID","applicationName","viewID","viewName","viewKey","FIELD","active","hasOwnProperty","description","transition","showIntroStep","stepIDs","_steps","sID","ele","stepAdd","step","stepByID","stepRemove","stepIndex","fieldIDs","_unknownFieldIDs","fId","attributeFieldIDs","indexName","dbTableName","uniqueName","ABEmitter","fieldList","mlFields","translate","defaultTranslations","language_code","languageDefault","unTranslate","currLanguage","first","t","foundOne","trans","_where","_sort","_skip","_limit","staleRefreshInProcess","staleRefreshMap","staleRefreshPending","staleRefreshTimerID","responseContext","contextKey","contextValues","prepareMultilingualData","multilingualFields","shouldTranslate","urlParamsCreate","urlRest","urlParamsDelete","urlRestItem","urlParamsFind","urlParamsUpdate","urlRestCount","numberOfRows","currID","Err","staleRefreshProcess","currentEntries","responseHash","allKeys","findConnected","results","myObj","returnData","upsert","dateFields","calculatedFields","objectLink","olPK","relatedMlFields","subData","relationValue","calField","ABModel","ABObjectCore","connName","labelFormat","labelSettings","isNoLabelDisplay","tableName","primaryColumnName","transColumnName","urlPath","createdInAppID","frozenColumnID","hiddenFields","importedFieldIDs","_fields","importIndexes","indexIDs","_unknownIndex","indexes","_indexes","objectLinks","isConnection","fieldImport","fieldRemove","origLen","fid","fieldReorder","sourceId","targetId","itemMoved","oPos","j","fieldSave","fieldAdd","imageFields","isMultilingual","indexByID","indexRemove","idx","indexSave","urlRestBatch","urlRestLog","urlRestRefresh","workspaceSortFields","workspaceViews","currView","getCurrentView","workspaceFilterConditions","workspaceFrozenColumnID","workspaceHiddenFields","isReadOnly","defaultValues","defaultValue","urlField","remoteCreate","cloneOne","prop","minRelationData","colIds","colId","colIdNoBracket","displayData","labelData","defaultField","fieldUseAsLabel","trim","noLabelText","ABModelQuery","__missingObject","__missingFields","__cantFilter","__duplicateFields","__linkProblems","alias2Obj","importJoins","joins","importFields","_objectWorkspaceViews","objectWorkspaceViews","grouping","hidePrefix","exportJoins","exportFields","fieldSettings","newFields","fieldInfo","objectByAlias","_objects","objID","canFilterField","isNew","clonedField","currFields","_joins","objectBase","links","_links","uniqueObjectIDs","newLinks","storeObject","storeLinks","link","processJoin","baseObject","linkField","rootObject","canFilterObject","linkedObject","isDisabled","disabled","_concat","ABProcessTaskSubProcess","onProcessReady","xmlDefinition","currElements","_elements","elementIDs","eID","_connections","connections","diagramID","modelDefinition","modelNew","modelUpdate","xml","allConnections","connectionForDiagramID","dID","connectionsIncoming","to","connectionsOutgoing","from","connectionRemove","connectionSimplyElement","bo","businessObject","sourceRef","targetRef","connectionUpsert","simpleConn","elementAdd","elementByID","elementForDiagramID","elementRemove","isTriggeredBy","taskForTriggerKey","connectionNextTask","currElement","connectionPreviousTask","processData","tasksToAsk","allPreviousTasks","queryPreviousTasks","processDataFields","allPreviousConnectionsForConnection","conn","hashConn","allPreviousConnectionsForElement","prevConnections","task","prevTasks","processDataObjects","triggerKey","param","responses","processedIDs","apply","AllViews","Views","default","common","V","getFieldVal","isNaN","condition","_QueryFields","_Fields","removeHtmlTags","div","document","createElement","innerHTML","textContent","innerText","condResult","ruleFieldType","connectedVal","fieldVal","getConnectFieldValue","textValid","dateValid","numberValid","listValid","booleanValid","userValid","connectFieldValid","thisObjectValid","compareValue","compareArray","queryFieldValid","Number","queryId","qIdBase","inQueryFieldFilter","inQueryValid","inQueryFilter","dataCollectionValid","compareValueLowercase","listThisObjects","newRowData","_Object","processFieldsLoad","processFields","_ProcessFields","uiInit","fieldIsFilterable","thisObjOption","fieldsToQB","showObjectName","conditions","processFieldKeys","hasQueryField","isProcessParticipant","fieldsAddFiltersBoolean","fieldsAddFiltersConnectObject","fieldsAddFiltersString","opt","fieldsAddFiltersDate","fieldsAddFiltersNumber","fieldsAddFiltersList","fieldsAddFiltersUser","fieldsAddFiltersThisObject","fieldsAddFiltersQuery","isRecordRule","fieldsAddFiltersRecordRule","processField","includes","processFieldId","pop","fieldsAddFiltersContext","fieldsAddFiltersCustom","dateConditions","less","beforeCondition","greater","afterCondition","less_or_equal","onOrBeforeCondition","greater_or_equal","onOrAfterCondition","less_current","beforeCurrentCondition","greater_current","afterCurrentCondition","less_or_equal_current","onOrBeforeCurrentCondition","greater_or_equal_current","onOrAfterCurrentCondition","last_days","onLastDaysCondition","next_days","onNextDaysCondition","condKey","batch","handler","stringConditions","contains","containsCondition","not_contains","notContainsCondition","equals","isCondition","not_equal","isNotCondition","is_empty","isEmpty","is_not_empty","isNotEmpty","numberConditions","equalCondition","notEqualCondition","lessThanCondition","moreThanCondition","lessThanOrEqualCondition","moreThanOrEqualCondition","listConditions","equalListCondition","notEqualListCondition","booleanConditions","userConditions","is_current_user","isCurrentUserCondition","is_not_current_user","isNotCurrentUserCondition","contain_current_user","containsCurrentUserCondition","not_contain_current_user","notContainsCurrentUserCondition","connectConditions","same_as_user","sameAsUser","not_same_as_user","notSameAsUser","in_data_collection","inDataCollection","not_in_data_collection","notInDataCollection","queryConditions","in_query_field","inQueryField","not_in_query_field","notInQueryField","in_query","inQuery","not_in_query","notInQuery","thisObjectConditions","recordRuleConditions","same_as_field","sameAsField","not_same_as_field","notSameAsField","contextConditions","context_equals","equalsProcessValue","context_not_equal","notEqualsProcessValueCondition","context_in","inProcessValueCondition","context_not_in","notInProcessValueCondition","_customOptions","queriesLoad","_Queries","isComplete","noValueRules","isCompleteRules","returnSingular","config_settings","queryValid","ABField","ABFieldAutoIndexDefaults","isFilterable","isSortable","supportRequire","supportUnique","useAsLabel","compatibleOrmTypes","compatibleMysqlTypes","delimiter","displayLength","previewText","delimiterItem","delimiterList","sign","displayNumber","getDelimiterSign","setValueToIndex","ABFieldBooleanDefaults","AGE","dateString","dataDate","diffYears","round","YEAR","getFullYear","MONTH","getMonth","DAY","getDate","DATE","getTime","HOUR","MINUTE","MINUTE_TO_HOUR","mins","hours","rhours","minutes","rminutes","parseFloat","ABFieldCalculateDefaults","formula","decimalSign","decimalPlaces","ABFieldCalculateCore","place","numberVal","calVal","dateVal","booleanVal","eval","toFixed","convertToJs","ABFieldCombinedDefaults","combinedFields","ABFieldConnectDefaults","fieldDefaults","names","configError","pullRelationValues","selectedData","dataValue","propName","forUpdate","reservedNames","fieldOrmTypes","fieldMysqlTypes","fieldIcon","fieldMenuName","fieldDescription","fieldSupportRequire","fieldSupportQuery","supportQuery","defaultCheck","defaultVal","returnVal","required","myDef","ABFieldDateDefaults","dateFormat","defaultDate","defaultDateValue","validateCondition","validateRangeUnit","validateRangeBefore","validateRangeAfter","validateStartDate","validateEndDate","dateResult","prototype","call","isFinite","startDate","endDate","startDateDisplay","getDateDisplay","endDateDisplay","minDate","maxDate","exportValue","dateObj","getFormat","dateFormatString","dateData","dateToString","RegEx","ABFieldDateCore","timeFormat","defaultTime","defaultTimeValue","baseDefault","currDate","setHours","getHours","setMinutes","getMinutes","setSeconds","getSeconds","setMilliseconds","getMilliseconds","getTimeFormat","datetimeFormat","dateToStr","ABFieldEmailDefaults","defaultCheckbox","Reg","ABFieldFileDefaults","removeExistingData","fileSize","fileType","limitFileSize","limitFileType","filename","requestParam","allParameters","myParameter","ABFieldFormulaDefaults","reCalculate","isGrouped","reformat","numData","rowDataFormat","fieldBase","filterHelper","numberList","decimalSize","getDecimalSize","multiplier","pow","sum","max","min","_rowFilter","ABFieldImageDefaults","useWidth","imageWidth","useHeight","imageHeight","useDefaultImage","defaultImageUrl","ABFieldJsonDefaults","ABFieldListDefaults","isMultiple","hasColors","multipleDefault","pendingDeletions","defaultVals","hex","optTran","ABFieldLongTextDefaults","MAX_CHAR_LENGTH","supportMultilingual","ABFieldNumberDefaults","typeFormat","typeDecimals","typeDecimalPlaces","typeRounding","typeThousands","validation","validateMinimum","validateMaximum","iL","places","n","errMessage","formatSign","formatList","thousandsSign","postfix","digit","formatNumber","groupDelimiter","groupSize","decimalDelimiter","negativeSign","dataStr","abs","integerStr","decimalStr","integerValue","substr","ABFieldStringDefaults","ABFieldTextFormulaDefaults","textFormula","setValueToFormula","formulaString","fieldRegExp","matches_field_array","autoIndexVal","setBuildinValueToFormula","matches_buildin_array","buildinList","getBuildInFunction","formula_array","isBracketInBracket","functionName","parameters_array","isMatch","resultParameters","parameter_size","getLeft","getRight","getMid","getTrim","getTrimLeft","getTrimRight","getLength","getRegExpReplace","trimLeft","getExtractRegex","getReplace","getLower","getUpper","getCapitalize","getRandom","getNumberToWords","getDateDayOfWeekName","getDateMonthOfYearName","getFormatDate","string","endPosition","endposition","reverseStr","reverseString","reverse","startPosition","trimRight","regexp","replaceString","extractResult","searchValue","replaceValue","toUpperCase","charAt","units","tens","scales","end","chunks","chunksLen","chunk","ints","word","words","resultFormula","ABFieldSelectivity","ABFieldTreeDefaults","ABFieldConnect","ABFieldUserDefaults","USERNAME_FIELD_ID","editable","isCurrentUser","isShowProfileImage","isShowUsername","ABProcessLaneDefaults","ABProcessParticipantDefaults","validChecker","attribute","laneIDs","stashed","useAccount","account","useField","userField","Tasks","DEFINITIONTYPES","AllProcessElements","ELEMENT","category","DiagramReplace","target","eventDefinitionType","allTasks","tasks","DiagramReplaceDefinitionsForType","StartEvents","Gateways","EndEvents","eventDefinitions","$type","state","laneDiagramID","errorConfig","instance","initState","instanceValues","taskState","isEndTask","allArgs","myLane","myState","nextTasks","myDiagramObj","hashDiagramObjects","onError","exitFlows","tasksFromFlow","flow","flowObj","targetIDs","tid","targetTask","hashProcessDataValues","listDataFields","currentProcessValues","_prevState","stateCompleted","stateUpdate","wantToDoSomething","startElements","previousElements","objectOfStartElement","startElem","objectOfPrevElement","prevElem","qlObj","ABProcessElement","ABProcessTaskEndDefaults","actionName","className","triggered","ABProcessGatewayExclusiveDefaults","ABProcessTaskEmailDefaults","myDefaults","subject","AccountingBatchProcessingDefaults","AccountingFPCloseDefaults","AccountingFPYearCloseDefaults","AccountingJEArchiveDefaults","CalculateDefaults","_fakeNum","_fakeObj","ABProcessTaskServiceDefaults","ABProcessTaskGetResetPasswordUrlDefaults","InsertRecordDefaults","isRepeat","startElement","currProcess","previousElement","fieldRepeat","repeatColumn","ABQLManager","ABProcessTaskServiceQueryDefaults","_datasources","fromAttributes","registerDatasource","processDataField","SubProcessDefaults","NOSPAM","isExpanded","isEnable","_unknownElementIDs","processTask","connectionAttrs","parameterId","dataFieldsAll","dataFieldOpt","dataFieldsAllInserted","previousFields","startsWith","stateData","returnField","ABFieldList","ABProcessTaskApprovalDefaults","fixBoolean","formBuilder","preProcessFormIOComponents","components","abFieldID","path","pluck","comp","action","myID","listField","ABProcessTaskUserDefaults","ABProcessTaskUserExternalDefaults","who","toUsers","ABProcessTriggerDefaults","ABProcessTrigger","ABProcessTaskTriggerLifecycleDefaults","lifecycleKey","repeatEvery","repeatTime","repeatDaily","repeatWeekly","repeatMonthly","isEnabled","timeVals","setUTCHours","setUTCMinutes","getUTCHours","getCronExpression","day","month","dayWeek","minute","hour","parameterDefinitions","prevOP","objectOut","initObject","objectLookup","nextOP","NextQLOps","OP","qlOP","quotedLabel","availableProcessDataFieldsHash","availableProcessDataFields","hashFieldIDs","paramChanged","pDef","ABQL","ParameterDefinitions","ABQLFindCore","ABQLManagerCore","matchingOPs","QLOps","Op","ABQLObjectCore","objNameDef","warningMessage","QLUpdate","QLSave","QLPluck","ABQLSetPluck","ABQLRowUpdate","ABQLRowSave","ABQLRowPluckCore","nextQLOps","NextQLOp","ABQLSetSave","ABQLRowSaveCore","ABQLRowUpdateCore","ABQLRow","ABQLSetFirstCore","ABQLSetPluckCore","objectOutID","ABQLSetSaveCore","taskParam","registered","task_param","ABViewWidget","ABViewCSVExporterDefaults","labelKey","ABViewCSVExporterPropertyComponentDefaults","dataviewID","buttonLabel","hasHeader","ABRecordRule","ABViewCSVImporterDefaults","ABViewCSVImporterPropertyComponentDefaults","availableFieldIds","recordRules","RecordRule","_recordRule","formLoad","fromSettings","doRecordRulesPre","rowDatas","processPre","doRecordRules","ABViewCarouselPropertyComponentDefaults","showLabel","hideItem","hideButton","navigationType","filterByCursor","detailsPage","detailsTab","editPage","editTab","ABViewDefaults","parseIntOrDefault","_this","parseOrDefault","componentList","imageField","ABViewChartContainer","ABViewChartAreaPropertyComponentDefaults","areaType","isLegend","chartHeight","labelFontSize","stepValue","maxValue","ABViewChartBarPropertyComponentDefaults","barType","barPreset","ABViewContainer","ABViewChartPropertyComponentDefaults","columnValue","columnLabel","columnValue2","isPercentage","labelPosition","multipleSeries","ABViewChartDefaults","viewsToAllow","labelField","valueField","valueField2","ABViewChartLinePropertyComponentDefaults","lineType","linePreset","ABViewChartPiePropertyComponentDefaults","pieType","innerFontSize","ABViewCommentPropertyComponentDefaults","columnUser","columnComment","columnDate","getCurrentUserId","userObject","getUsers","currentUser","findIndex","image","getUserField","getCommentField","getDateField","getUserData","UserImageField","imageURL","urlImage","ABViewPropertyDefaults","ifPanel","removable","elsePanel","ABViewConnectDataFilterPropertyComponentDefaults","ABView","ABPropertyComponentDefaults","columns","gravity","movable","viewsSortByPosition","y","tabicon","ABViewPropertyComponentDefaults","warningsSilent","__missingViews","viewIcon","tabIcon","accessLevels","viewIDs","isRoot","dx","dy","allParents","parents","curView","accessibleRoles","getUserAccess","accessLevel","isAccessManager","currentRole","parentFormComponent","parentDetailComponent","detail","pageParent","filterFn","parentPage","pageRoot","rootPage","urlView","errNoDCID","errNoDC","updateAccessLevels","roleId","viewDestroy","viewRemove","viewInsert","viewReorder","viewId","toPosition","allViewDeletes","lookUpIds","copyUpdateProperyList","ignoreSubPages","copiedSubPage","ignoreSubViews","copiedView","copy","newName","allSaves","p2","vi","ABViewDataFilterPropertyComponentDefaults","viewType","showFilter","showSort","ABViewDetail","ABViewDataviewPropertyComponentDefaults","xCount","ABViewDataviewDefaults","dataview","ABViewDetailCheckboxPropertyComponentDefaults","ABViewDetailCheckboxDefaults","ABViewDetailPropertyComponentDefaults","formView","ABViewDetailDefaults","addFieldToDetail","yPosition","detailComponent","newInstance","ABViewDetailCustomPropertyComponentDefaults","ABViewDetailCustomDefaults","ABViewDetailImagePropertyComponentDefaults","ABViewDetailImageDefaults","detailView","getCurrentData","detailCom","ABViewDetailTextPropertyComponentDefaults","ABViewDetailTextDefaults","ABViewDetailTreeDefaults","ABViewDocxBuilderPropertyComponentDefaults","buttonlabel","filelabel","toolbarBackground","buttonPosition","uploadUrl","downloadUrl","dvList","ABViewFormButtonPropertyComponentDefaults","includeSave","saveLabel","includeCancel","cancelLabel","includeReset","resetLabel","afterCancel","alignment","isDefault","ABViewFormButtonDefaults","ABViewFormCheckboxPropertyComponentDefaults","ABViewFormCheckboxDefaults","ABViewFormConnectPropertyComponentDefaults","popupWidth","popupHeight","ABViewFormConnectDefaults","ABSubmitRule","ABViewFormDefaults","ABViewFormPropertyComponentDefaults","clearOnLoad","clearOnSave","displayRules","editForm","submitRules","fieldComponents","flattenComponents","addFieldToForm","fieldComponent","formComponent","doSubmitRules","SubmitRules","ABViewFormCustomPropertyComponentDefaults","ABViewFormCustomDefaults","ABViewFormDatepickerPropertyComponentDefaults","timepicker","ABViewFormDatepickerDefaults","ABViewFormFieldPropertyComponentDefaults","ABViewFormJsonPropertyComponentDefaults","ABViewFormJsonDefaults","ABViewFormNumberPropertyComponentDefaults","isStepper","ABViewFormNumberDefaults","ABViewFormCustom","ABViewFormReadonlyPropertyComponentDefaults","ABViewFormReadonlyDefaults","ABViewFormSelectMultiplePropertyComponentDefaults","ABSelectMultipleDefaults","ABViewFormSelectSinglePropertyComponentDefaults","ABSelectSingleDefaults","ABViewFormTextboxPropertyComponentDefaults","ABViewFormTextboxDefaults","ABViewFormTreePropertyComponentDefaults","ABTreeDefaults","ABViewGanttPropertyComponentDefaults","titleFieldID","startDateFieldID","endDateFieldID","durationFieldID","progressFieldID","notesFieldID","ABViewGridPropertyComponentDefaults","showToolbar","isEditable","massUpdate","allowDelete","isExportable","trackView","summaryColumns","countColumns","gridFilter","filterOption","userFilterPosition","isGlobalToolbar","hideHeader","labelAsField","hideButtons","groupBy","saveLocal","settingsDefault","base","settingsDefaultJSON","owFields","removeField","shouldSave","ABViewImagePropertyComponentDefaults","ABViewKanbanPropertyComponentDefaults","editFields","verticalGroupingField","horizontalGroupingField","ownerField","template","textTemplate","TextTemplate","ABViewLabelPropertyComponentDefaults","formatNormal","formatTitle","formatDescription","PropertyComponentDefaults","numColumns","addColumn","isEdited","ABViewListPropertyComponentDefaults","ABViewMenuPropertyComponentDefaults","orientation","buttonStyle","menuAlignment","menuInToolbar","menuPadding","menuTheme","menuPosition","menuTextLeft","menuTextRight","menuTextCenter","order","ABMenuDefaults","page","isChecked","pageId","ClearPagesInView","AddPagesToView","displayPage","existsPage","tabId","existsTab","getAliasname","menuItem","getMenuItem","pageInfo","lang","translation","aliasname","getParentPageId","tabView","currentView","ABViewPDFImporterPropertyComponentDefaults","pageWidth","fixedPageWidth","pageBackground","myAppID","allPageDeletes","allPages","pageRemove","pageInsert","updateIcon","mapNewIdFn","ABViewPivotPropertyComponentDefaults","removeMissed","totalColumn","separateLabel","structure","ABViewReportManagerPropertyComponentDefaults","dataviewFields","editMode","hideCommonTab","hideDataTab","hideViewTab","parsedSettings","key1","key2","ABViewSchedulerPropertyComponentDefaults","readonly","allDay","repeat","calendar","color","sectionID","unitID","notes","originID","calendarDataviewID","calendarDataviewFields","timeline","week","year","agenda","timelineSectionList","unitList","export","excel","csv","pdf","_object","scheduler","ABViewTabPropertyComponentDefaults","minWidth","stackTabs","darkTheme","sidebarWidth","sidebarPos","iconOnTop","ABViewTabDefaults","addTab","tabName","ABViewTextPropertyComponentDefaults","displayText","componentID","clearTemplateValue","fData","columnSpan","rowSpan","ABApplicationCore","ABViewPage","_handler_page_updated","definition","currPage","refreshInstance","errDepreciated","areaKey","newObj","entity","begLen","datacollectionInsert","_listInsert","_listRemove","objectInsert","objectRemove","processInsert","processRemove","queryInsert","queryRemove","exportIDs","parseView","pid","pdef","vid","vdef","warningsEval","checks","warningsMessage","allRoles","warningsAll","warnings","_warnings","CustomComponentManager","custom","create","edit","formName","import","rename","yes","no","none","close","defaultPlaceholder","invalidMessage","createErrorMessage","createSuccessMessage","updateErrorMessage","updateSucessMessage","deleteErrorMessage","deleteSuccessMessage","renameErrorMessage","renameSuccessMessage","dataFieldHeaderLabel","dataFieldHeaderLabelPlaceholder","dataFieldLabel","dataFieldLabelPlaceholder","dataFieldColumnName","dataFieldColumnNamePlaceholder","dataFieldShowIcon","componentDropZone","initComponents","_actions","ABDataCollectionCore","datacollectionId","bindParentDc","cursorUpdated","hideProgressOfComponents","attachFlexlayout","sync","onDataRequestEvent","loadNext","unsync","detachEvent","onDcLoadData","off","DataCollection","_extendCollection","treeStore","TreeCollection","dataStore","SelectionModel","onAfterLoadEvent","addCss","removeCss","render","onAfterLoad","addRowToTree","parentAlias","dataId","parentItemIds","parentId","_alias","_dataId","treeNode","parentItemId","boundComp","datacollectionById","ABDefinitionCore","ABHintCore","allSteps","allDestroy","hintIndex","createHintUI","cookie","dontShow","newStep","nextEl","hintId","eventEl","theNextEl","querySelector","checkVisibility","onNext","boxes","querySelectorAll","display","checked","onPrevious","delay","ABIndexCore","migrateDrop","ABMLClassCore","ABModelCore","errorPopup","handler_create","handler_common","handler_delete","handler_findAll","handler_logs","handler_update","no_socket_trigger","batchCreate","once","loadInto","DT","logs","update","batchUpdate","rowIds","ABObjectWorkspaceViewCollection","_handler_object_migrate","fromObj","disableRelatedQueries","fieldDrops","isAdd","columnResize","newWidth","columnHeaders","isObjectWorkspace","hiddenFieldNames","header","columnHeader","validationRules","adjust","footer","content","customDisplays","DataTable","eachColumn","getItemNode","column","customDisplay","allWarnings","w","isUuid","ABObjectQueryCore","conditionScan","fieldEntry","oldWidth","originTemplate","_conditionCheck","isConditionComplete","ABProcessCore","_unknownShapes","allElements","appsWithProcess","_new","_old","needSave","elementNewForModelDefinition","unknownShape","shape","unknownShapeRemove","_DOMParser","DOMParser","xmlStr","parseFromString","ActiveXObject","xmlDoc","loadXML","getElementsByTagName","ABStepCore","ABViewManagerCore","getSeparateItems","validateFile","fileInfo","file","extensionType","getDataRows","separatedBy","reader","FileReader","onload","dataCols","dCol","readAsText","getGuessDataType","dataRows","colIndex","line","str","FilterComplexCore","_toInternal","_toExternal","_options","_initComplete","observing","and","or","thisObject","inQueryFieldQueryPlaceholder","inQueryFieldFieldPlaceholder","checkedCondition","notCheckedCondition","contextDefaultOption","popup","querybuilder","recordRuleFieldOptions","hidden","isSaveHidden","myPopup","__blockOnChange","getState","$observe","_cond","helper","$query","getFilterFunction","qbSettings","toShortHand","uiQueryCustomValue","$el","$app","require","CreateFilter","inputs","uiValue","localId","mode","parser","i18n","dateFormatStr","margin","fieldColumnName","uiQueryValue","uiDataCollectionValue","uiCustomValue","uiContextValue","uiBooleanValue","uiUserValue","uiNoneValue","uiListValue","LinkType","uiTextValue","uiQueryFieldValue","uiRecordRuleValue","onAfterRender","queryView","style","zIndex","isQueryField","u","linkObjectId","placeholder","processFieldKey","pField","popUp","addCustomOption","RowFilterCore","filterForm","addNewFilter","inputValue","queryCombo","queryFieldCombo","queryFieldComboQuery","queryFieldComboField","fieldMatch","dataCollection","listOptions","datePicker","batchName","queryFieldOptions","recordRuleOptions","getFilterUI","isolate","newVal","oldVal","selectCombineCondition","suggest","onBeforeShow","$viewCond","selectField","oldValue","onChangeRule","onChangeQueryFieldCombo","validate","isNumber","onTimedKeyPress","indexView","getFormView","removeNewFilter","getAddButtonUI","$viewForm","toggleAddNewButton","ignoreNotify","showBatch","Queries","ruleViewId","getActiveId","$viewComparer","getList","defaultOpt","dcOptions","_Application","Query","$fieldElem","selectedOpt","getPopup","valueViewId","$viewConditionValue","dateField","fieldOptions","logic","col","blockEvent","unblockEvent","_completeConditions","ABViewForm","RowUpdater","addNew","_mockFormWidget","uiItem","self","$viewItem","maxWidth","_extendedOptions","toggleCustomProcessOption","removeItem","addItem","$form","toggleForm","$viewContainer","$customValueElem","_pullInputElement","$processValueElem","isVisible","isProcessValue","formFieldComponent","inputView","busy","getOptions","labelRight","layout","ready","$field","setExtendedOptions","showProcessOption","$customOption","$processOption","$elem","childView","ABFieldCore","addValidation","Filter","filterComplex","fnMigrate","migrateUpdate","customEdit","formKey","ABFieldAutoIndexCore","$group","detailComponentSetting","ABFieldBooleanCore","checkbox","ABFieldCombineCore","ABFieldConnectCore","multiselect","editFormat","editParse","openOptions","button","$suggest","$list","getAndPopulateOptions","whereClause","term","theEditor","_getOptionsToggle","haveResolved","respond","linkedObj","linkedCol","linkedModel","showAllOptions","getStorageID","storedOptions","selected","linkViaOneValues","whereRels","sortRels","storageID","itemObj","getItemFromVal","returnVals","combineFilters","filterByConnectValues","parseFilterByConnectValues","depth","valuesByDepth","ef","$parentField","filterValue","parentValue","filterColumn","dataFieldId","handlerOptionData","$destructed","populateOptions","addCy","populateOptionsDataCy","selectedVal","some","selectedItem","each","option","setAttribute","pullRecordRelationValues","formComponentSetting","webixLocale","longDateFormatStr","ABFieldDateTimeCore","timeToStr","ABFieldEmailCore","ABFieldFileCore","fileTemplate","typesList","maximumSize","parentContainer","webixContainer","container","domNode","urlUpload","uploader","apiOnly","upload","inputName","multiple","onBeforeFileAdd","classList","acceptableTypes","acceptableSizes","size","onFileUpload","onFileUploadError","addDropZone","dataset","deleteFile","uploaderId","fileDialog","rowid","iconDisplay","fileDisplay","fileURL","fileLink","getAttribute","fileicon","fileDeleteIcon","removeAttribute","href","isWebix","urlFile","ABFieldFormulaCore","ABFieldImageCore","idCustomContainer","formId","containerHeight","imageSrcHeight","heightVal","imageTemplate","imgHeight","imgWidth","showImage","dataTable","deleteImage","removeDefaultImage","imageDisplay","isRemoveDefaultImage","html","backgroundImage","imageIcon","imageDeleteIcon","toBase64","img","Image","crossOrigin","onerror","canvas","getContext","drawImage","imageData","toDataURL","src","ABFieldJsonCore","ABFieldListCore","numDone","numToDo","remainingFields","_getSelectedOptions","hasCustomColor","optionHex","selectedObj","clearButton","stopPropagation","getSelectedOptions","ABFieldLongTextCore","ind","ABFieldNumberCore","INIT_EDITOR","editors","defaultSettings","allowClear","removeOnly","readOnly","showDropdown","ABFieldSelectivityDefaults","selectivityRender","cypress","dataCy","items","prepareData","selectivity","setOptions","selectivityInput","isUsers","templates","multipleSelectedItem","highlighted","additionalText","isLabelHidden","Selectivity","Inputs","Multiple","selectivitySetBadge","singleSelectedItem","Single","trigerEditPageEvent","editMenus","eMenu","__hasClickEvent","preventDefault","parentElm","parentElement","thisField","caretElems","getElementsByClassName","caretElm","parentNode","removeChild","selectivitySettings","selectivityGet","selectivitySet","setData","selectivityDestroy","clientHeight","badge","anchor","textnode","createTextNode","appendChild","ABFieldStringCore","max_length","ABFieldTextFormulaCore","ABFieldTreeCore","formClass","placeHolder","isForm","branches","selectOptions","rootid","getParentId","par","nodeHTML","myHex","setBadge","idPopup","idTree","parentComponent","firstRender","populateTree","getValues","$Tree","uncheckAll","openAll","checkItem","onItemCheck","dom","tree","uncheckItem","eachSubItem","getChecked","scrollHeight","setValues","ABFieldUserCore","SiteUser","Defaults","newLinkDef","setDisplayOptions","ABProcessLaneCore","transferParticipantWhereToMe","myParticipant","swap","children","child","lanes","objChild","setLane","defElement","ABProcessParticipantCore","diagramProperties","ABProcessElementCore","findLane","Lane","currObj","propertiesShow","propertiesStash","property","switchTo","propertiesID","ABProcessEndCore","ABProcessGatewayExclusiveCore","properties","myOutgoingConnections","numCondWithOne","ABProcessTaskEmailCore","verifySetting","verifyNextLane","verifyRoleAccount","nextLanesResolved","valKey","ABProcessTaskServiceCore","AccountingBatchProcessingCore","propertyIDs","processBatchValue","objectBatch","fieldBatchEntries","fieldBatchFinancialPeriod","objectJE","fieldJEAccount","fieldJERC","fieldJEStatus","fieldJEStatusComplete","objectBR","fieldBRFinancialPeriod","fieldBRAccount","fieldBRRC","fieldBREntries","processValues","objectList","blankField","defaultFields","updateFields","fieldPickers","fieldValues","fp","picker","batchFields","fieldPickersBatch","jeFields","fieldPickersJE","compileStatusValues","statusField","onStatusComplete","wbxComplete","jeEntryID","jeEntry","jeFieldStatusValues","brFields","fieldPickersBR","AccountingFPCloseCore","processFPValue","objectFP","objectGL","objectAcc","fieldFPStart","fieldFPOpen","fieldFPStatus","fieldFPActive","fieldGLStarting","fieldGLRunning","fieldGLAccount","fieldGLRc","fieldGLDebit","fieldGLCredit","fieldAccType","fieldAccAsset","fieldAccExpense","fieldAccLiabilities","fieldAccEquity","fieldAccIncome","getFieldOptions","getStatusFieldOptions","statusFieldId","fpObject","fpStatusField","getListOptions","fpFields","glFields","accFields","fpStatusFields","accTypeOptions","elementsConfig","fieldGLElem","updateFPFields","updateGLFields","updateAccFields","fpStatusOptions","updateAccTypeOptions","AccountingFPYearCloseCore","processFPYearValue","objectFPYear","objectFPMonth","objectAccount","valueFundBalances","valueNetIncome","fieldFPYearStart","fieldFPYearEnd","fieldFPYearStatus","fieldFPYearActive","fieldFPMonthStart","fieldFPMonthEnd","fieldGLStartBalance","fieldGLRunningBalance","fieldGLrc","fieldAccNumber","fieldAccTypeIncome","fieldAccTypeExpense","fieldAccTypeEquity","fpYearDateFields","fpYearStatusFields","fpYearStatusOptions","fpMonthDateFields","glNumberFields","glRcFields","accNumberFields","accTypeFields","fpYearDateOptions","updateFPYearStatusOptions","fpMonthDateOpts","glRcOptions","glNumberOptions","updateAccNumberFields","updateFPYearActiveOptions","AccountingJEArchiveCore","objectBalance","objectJEArchive","fieldBatchFiscalMonth","fieldJeAccount","fieldJeRC","fieldJeArchiveBalance","fieldBrFiscalMonth","fieldBrAccount","fieldBrRC","fieldsMatch","getConnectFieldOptions","refreshFieldsMatch","$fieldsMatch","JEObj","JEArchiveObj","fJe","fieldBatchList","fieldBalanceList","fieldJeList","fieldJeArchiveList","refreshBatchFields","refreshBRFields","refreshJeFields","refreshJeArchiveFields","CalculateTaskCore","formulaText","exp","ABProcessTaskServiceGetResetPasswordUrlCore","InsertRecordTaskCore","fv","isSet","ABProcessTaskServiceQueryCore","qlWarnings","hasSave","SubProcessCore","bpmnModeler","props","loopCharacteristics","isSequential","loopType","ABProcessTaskUserCore","ABProcessTaskUserApprovalCore","ABProcessTaskUserExternalCore","ABProcessTriggerCore","ABProcessTriggerLifecycleCore","ABProcessTriggerTimerCore","ABQLCore","parseRow","uiID","toIDs","$uiCondition","objectfields","objectname","taskparam","select","shorthand","spacer","uiAddParamForDef","paramUI","uiParamUI","uiAddNext","uiRow","uiNextRow","uiAddParams","newValue","resetValue","newOP","thisRow","thisQuery","addOP","viewAddParams","viewAddNext","allRows","ir","allCols","ic","uiNextRowSelectorRefresh","$select","uiNextCol","uiConfig","uiSettings","initialCond","displayLabel","initialValue","Updater","foundFields","shortHand","elCondition","sh","_myPopup","topView","rowView","toInsert","myWarnings","ABQLRootObject","root","rootOP","parseCurrent","selector","currOP","nextRow","ABQLRootObjectCore","ABViewCore","ABViewComponent","viewsToIgnore","changePage","ABViewCSVExporterCore","ABViewCSVExporterComponent","ABViewCSVImporterCore","ABViewCSVImporterComponent","ABViewCarouselComponent","baseView","carousel","_handler_doOnShow","_handler_doReload","_handler_doFilter","fnFilter","filterRules","_handler_busy","_handler_ready","filterUI","linkPage","linkPageHelper","_ui","navigation","buttons","activeIndex","getActiveIndex","switchImage","viewLoad","$carouselView","firstElementChild","detatch","myTemplate","$carousel","currentPosition","_imageCount","_rowCount","getFilter","cursor","images","imgFile","imgData","ab","abWebix","onclick","getNode","fullscreen","exit","showFilterPopup","showPopup","ABViewCarouselCore","ABViewCarousel","__filterHelper","ABViewPropertyFilterData","__linkPageHelper","ABViewPropertyLinkPage","ABViewChartCore","ABViewChartComponent","refreshData","getDCChart","_dcChart","dcChart","labelCol","valueCol","valueCol2","numberColName","numberColName2","colorList","dInfo","sumData","sumNumber","sumNumber2","countNumber","numberVal2","relateValues","value2","val2","ABViewChartAreaCore","ABViewChartAreaComponent","ABViewChartBarCore","ABViewChartBarComponent","ABViewChartContainerComponent","ABViewChartLineCore","ABViewChartLineComponent","ABViewChartPieCore","ABViewChartPieComponent","ABViewCommentCore","ABViewCommentComponent","ABViewConditionalContainerCore","ABViewConditionalContainerComponent","viewIf","viewElse","pendingSave","ABViewConnectDataFilterComponent","idbase","applyConnectFilter","tooltip","resetConnectFilter","$filter","connectId","filterRule","ABViewConnectDataFilter","ABViewContainerCore","ABViewContainerComponent","ABViewDataFilterComponent","sortButton","filterButton","globalSearchToolbar","_handler_filterData","callbackFilterData","PopupSortComponent","sortOptions","callbackSortData","advancedUI","compId","maxHeight","toolbarFilter","getInputNode","openSort","externalSearchText","connectedFieldUI","relative","right","top","updateUI","sortRules","filterButtons","onlyFilterRules","filterBadge","sortButtons","onlySortRules","sortBadge","searchFields","activeElement","ABViewDataFilter","ABViewDataviewCore","ABViewDataviewComponent","ABViewDetailCore","ABViewDetailComponent","ABViewDetailCheckboxCore","ABViewDetailCheckboxComponent","ABViewDetailConnectCore","ABViewPropertyAddPage","ABViewDetailConnectComponent","addPageTool","__addPageTool","ABViewDetailCustomCore","ABViewDetailCustomComponent","ABViewDetailImageCore","ABViewDetailImageComponent","ABViewDetailItemCore","ABViewDetailItemComponent","ABViewDetailTextCore","ABViewDetailTextComponent","ABViewDetailTreeCore","ABViewDetailTreeComponent","ABViewDocxBuilderCore","ABViewDocxBuilderComponent","letUserDownload","blob","URL","createObjectURL","download","revokeObjectURL","ABViewFormCore","ABViewFormComponent","ABViewFormButton","ABViewFormConnect","ABViewFormDatepicker","ABViewFormSelectMultiple","ABViewFormJson","_callbacks","onBeforeSaveData","superComponent","_superComponent","refreshDefaultButton","defaultButton","yList","posY","getFormValues","dcLink","visibleFields","allVals","formVals","vComponent","viewComponents","linkValues","formFieldCom","fComp","linkColName","cursorFormVals","validateData","$formView","requiredFields","$forminput","$height","domInvalidMessage","marginLeft","saveButton","rulesReady","clearValidation","formError","$saveButton","invalidAttrs","sqlMessage","recordRulesReady","newFormVals","errs","formReady","focusOnFirst","topPositionId","childComponent","ABViewFormButtonCore","ABViewFormButtonComponent","ABViewFormCheckboxCore","ABViewFormCheckboxComponent","ABViewFormConnectCore","ABViewFormConnectComponent","ABViewPropertyEditPage","__filterComponent","editPageTool","addPageProperty","propertyComponent","editPageProperty","__editPageTool","ABViewFormCustomCore","ABViewFormCustomComponent","ABViewFormDatepickerCore","ABViewFormDatepickerComponent","ABViewFormItemCore","ABViewFormItemComponent","componentUI","parentFormUniqueID","uniqueInstanceID","ABViewFormJsonCore","ABViewFormJsonComponent","ABViewFormNumberCore","ABViewFormNumberComponent","ABViewFormReadonlyCore","ABViewFormReadonlyComponent","ABViewFormSelectMultipleCore","ABViewFormSelectMultipleComponent","ABViewFormSelectSingleCore","ABViewFormSelectSingleComponent","ABViewFormTextboxCore","ABViewFormTextboxComponent","ABViewFormTreeCore","ABViewFormTreeComponent","ABViewGanttComponent","menu","gantt","_tempDC","TitleField","StartDateField","EndDateField","DurationField","ProgressField","NotesField","originalStartDate","originalEndDate","pendingAdds","idGantt","ganttElement","isExistsTask","taskId","localService","getService","tasksData","removeTask","opsService","YEAR_SCALE","MONTH_SCALE","DAY_SCALE","getConstantScales","setScale","override","Map","services","Backend","CurrentDatacollection","indx","convertFormat","taskAdd","taskUpdate","taskRemove","$menu","showItem","convertValues","patch","datacollectionLoad","_events","eo","initData","ganttElem","dataService","dcTasks","gantt_data","currScale","getScales","WEEK_SCALE","wstart","weekStart","wend","scale","ganttData","newScales","setScales","precise","cellWidth","cellHeight","$batch","left","taskData","updatedTask","ABViewGanttCore","ABViewGantt","ABWorkObjectPopupExport","popupExport","_dataCollection","_grid","_filename","_hiddenFields","autoheight","dataCollectionLoad","setHiddenFields","setFilename","setGridComponent","$grid","fnExport","noCheckedRow","appbuilder_select_item","filterRow","toCSV","toExcel","filterHTML","toPDF","toPNG","exportType","fileName","ABViewGridPopupMassUpdate","ABViewGridComponent","submit","GridComponent","rowUpdater","update_button","update_items","$datatable","getDataTable","updatedRowIds","table","toolbar","buttonDeleteSelected","buttonFilter","buttonMassUpdate","buttonSort","buttonExport","datatable","handler_select","selectRow","columnSplitLeft","columnSplitRight","validationError","idTable","PopupExport","PopupMassUpdateComponent","PopupSortDataTableComponent","skippableColumns","ignoreLocalSettings","_gridSettings","_isDatacollectionLoaded","keyStorageSettings","removeAllListeners","getColumnIndex","uiDatatable","isTreeDatable","selectType","resizeColumn","resizeRow","prerender","fixedRowHeight","editaction","dragColumn","onBeforeSelect","preserve","cellNode","onAfterSelect","onBeforeEditStart","onCheck","toggleUpdateDelete","onAfterEditStop","onBeforeEditStop","ignoreUpdate","onValidationError","onValidationSuccess","onColumnResize","user_action","setColumnWidth","getLastColumn","onRowResize","onBeforeColumnDrag","onBeforeColumnDrop","onAfterColumnDrop","onHeaderClick","uiFilter","uiToolbar","toolbarMassUpdate","toolbarDeleteSelected","toolbarSort","toolbarExport","_uiGrid","inputWidth","codebase","cdn","$DataTable","throttleCustomDisplay","scrollStarted","displayRecords","verticalScrollState","getScrollState","rowHeight","startRecIndex","endRecIndex","getVisibleCount","CYPRESS_REF","toggleTab","clearValue","updateRow","numRows","deleteRow","globalFilterPosition","refreshHeader","$ButtonFilter","$buttonSort","gridElem","rowItem","oldDC","__handler_dc_busy","__handler_dc_ready","populateGroupData","__handler_dc_loadData","_isDatacollectionLoad","disableUpdateDelete","enableUpdateDelete","freezeDeleteColumn","lastColumn","getColumnConfig","$treetable","baseGroupMap","listData","valRelation","groupBys","g","gIndex","groupMap","byValue","gColName","group","localSettingsSave","old","removeCellCss","editCell","requireRefresh","EditField","isCustomGroup","ignoreLocal","objColumnHeaders","objColumnHeaderIDs","origCol","fieldValidations","rulePops","validationUI","popUpId","groupField","treetable","complexValidations","getFilterHelper","getSelectedItem","newData","destructor","addedColumns","contentId","lastCol","refreshColumns","savedLocalSettings","settingsID","unselect","parentTab","wb","tab","getTopParentView","tabbar","nextTab","checkedItems","deleteTasks","toolTip","imageFieldColNames","tip","relationData","toolTipOnBeforeRender","visibility","toolTipOnAfterRender","firstChild","nodeName","imgBottom","imgRight","innerHeight","imgOffsetY","newTop","imgOffsetX","newLeft","ABViewGridCore","ABViewGrid","propertyGroupByList","colNames","groupByList","origWS","AB_Work_Object_Workspace_PopupSortFields","uiForm","chosenField","ABViewImageCore","ABViewImageComponent","ABViewKanbanCore","ABViewKanbanComponent","ABViewKanban","comKanBan","CurrentObjectID","refreshForm","formAttrs","formCom","updateVals","newVals","ABViewLabelCore","ABViewLabelComponent","ABViewLayoutCore","ABViewLayoutComponent","ABViewListCore","ABViewListComponent","ABViewMenuCore","ABViewMenuComponent","ABViewPDFImporterCore","ABViewPDFImporterComponent","ABViewPageCore","v1App","newComponent","ABViewPivotCore","ABViewPivotComponent","ABViewReportsManagerCore","ABViewReportsManagerComponent","ABViewSchedulerCore","ABViewSchedulerComponent","ABViewTabCore","ABViewTabComponent","ABViewTextCore","ABViewTextComponent","ABViewWidgetCore","clientFilter","downloadCsvFile","onFilterChange","qsWhere","open","$buttonFilter","CSVImporter","uploadFileList","headerOnFirstLine","columnList","statusMessage","progressBar","linkedDataButton","importButton","csvImporter","args","_dataRows","_csvFileInfo","accept","autosend","loadCsvFile","onClick","webix_remove_upload","removeCsvFile","populateColumnList","minHeight","uiRecordsView","keyPressTimeout","_errorMsg","details","$dt","_status","_included","$importButton","labelImport","overLimitAlert","showLinkedData","uiPopup","$progressBar","formClear","$statusMessage","matchFields","getMatchFields","columnIndex","statusTemplate","$headerOnFirstLine","fileId","$columnList","firstLine","csvColumnList","currentObject","formComp","formConfig","uiColumns","selectedCsvCols","matchCol","selectVal","columnOptUI","abName","toggleLinkFields","loadDataToGrid","dateSeparatorOptions","dayFormatOptions","monthFormatOptions","yearFormatOptions","dateOrderOptions","linkFieldOptions","fld","$columnOption","$linkFieldOption","rowValue","$popup","refreshRemainingTimeText","startUpdateTime","total","remainTime","days","seconds","$selector","fieldData","$dateFormatSelectors","separator","$linkDataSelector","searchField","objModel","selectedRows","_currProgress","increaseProgressing","itemFailed","addRowCss","itemInvalid","errorMsg","uiCleanUp","validRows","allValid","getParentValues","removeRowCss","hashLookups","allLookups","connectObject","connectModel","linkIdKey","gethashLookup","createRecord","newRowsData","resultErrors","rowIndex","resultData","penddingRecordRules","processRowData","waitPenddingRecordRules","processResult","throttledSaves","performThrottledSaves","currentRecords","remainingRecords","importer","nextRecords","uiLinkedData","linkedData","hideLinkedData","_info_popup","linkConnectFields","yAxis","xAxis","legend","series","alpha","preset","$component","eventNames","evtName","chartContainer","uiChartComponent","_isShow","$chartContainer","$chartComponent","pieInnerText","shadow","comment","getCommentData","onBeforeAdd","addComment","onAfterDelete","deleteComment","__dvEvents","$comment","$commentList","onStoreUpdated","operate","updateComment","refreshComment","userCol","commentCol","dateCol","userColName","commentColName","dateColName","dataObject","dataList","user_id","default_date","__refreshTimeout","commentData","scrollTo","MAX_SAFE_INTEGER","commentText","dateTime","saveData","commentField","CurrentDatacollectionID","uiComponents","eventsClear","milliSeconds","__isShowing","interval","setInterval","clearInterval","_ifComponent","_elseComponent","populateFilterComponent","_uiConditionalContainer","ifComponent","elseComponent","displayView","viewComponentIDs","_handlerChangePage","rowViews","getElements","componentMap","curRowIndex","curColIndex","rowNew","colNumber","rowIndx","curRow","newPos","mapKey","getGrav","initDetailComponent","sizeToContent","itemTemplate","applyClickEvent","addCyAttribute","$dataView","$dataview","item_width","getItemWidth","customize","detailUI","getDetailUI","_detail_ui","$detail_item","itemWidth","$width","itemHeight","tmp_dom","addCyItemAttributes","currElem","parentWidth","$sidebar","getTabSidebar","clicked","divs","_detailComponent","detailItem","createdRow","updatedRow","myVal","needRecalculate","$detailItem","parsedImageUrl","imageUrl","detailItemLabel","uiDetailItemComponent","isLabelTop","templateLabel","labelUi","valueUi","itemUi","detailId","getDomTree","domTree","Docxtemplater","ImageModule","JSZipUtils","JSZip","ABFieldImage","downloadButton","noFileLabel","leftSpacer","rightSpacer","buttonLabelText","renderFile","$downloadButton","$noFileLabel","reportValues","getReportData","downloadImages","contentTemplateFile","downloadTemplateFile","blobFile","generateDocxFile","isDcLabelAdded","dcCursor","dcValues","disableMinifyRelation","fieldLabels","objTran","fieldTran","objectLabel","fieldLabel","setReportValues","datacollectionData","multilinguageFields","transFields","childItem","addDownloadTask","fieldImage","imageVal","imgUrl","getBinaryContent","currCursor","contentFile","summaries","zip","doc","imageModule","centered","getImage","tagValue","tagName","getSize","imgBuffer","tagNames","dcs","attachModule","loadZip","tag","varName","propSource","propFilter","indexColName","connectedField","sourceVals","getVal","comparer","docxFile","getZip","generate","mimeType","onClear","cancelButton","noPopupFilter","pageCurr","resetButton","ABViewFormTextbox","timerId","_showed","fieldValidationsHolder","uiValidationHolder","abid","existsFields","com","initCallbacks","initEvents","initValidationRules","valArray","displayParentData","formField","nval","oval","fieldValidating","actionSettings","valueRules","fieldOperations","valueType","pullDataDC","loadDcDataOfRecordRules","ms","customFields","formItem","defaultRowData","parentData","relationField","relationFieldCom","relationFieldView","$relationFieldView","formData","topPosition","editpopup","addPageComponent","editPageComponent","formSettings","goToEditPage","_onChange","initAddEditTool","selectAll","customField","trg","$formItem","apcUI","inputId","selectedValues","prepedVals","addFormID","onSaveData","callbackSaveData","onCancelClick","callbackCancel","callbackClearOnLoad","editFormID","clearStorage","selectedItems","sData","formBusy","__editFormDcEvent","$node","filterConnectedValue","uiConfigName","connectFieldId","getFilterByConnectValues","filterByConnectValue","$ui","vc","linkedField","parentFields","$filterValueConfig","parentField","FocusableTemplate","new_width","requiredClass","DEFAULT_HEIGHT","paddingY","paddingX","AB_App","onAfterDateSelect","setMasterValue","onTodaySet","onDateClear","getMasterValue","strToDate","setFullYear","uiFormItemComponent","_uiFormItem","rowFilter","getFilterField","filterField","entries","getSystemObjects","objectsArray","refreshFilter","fieldDefs","parsed","stringResult","NumberTextInput","_numberTextInputKey","numberTextInputKey","setHTML","tagMode","tagTemplate","selectedOptions","menubar","getEditor","contentAreaContainer","$image","ABFormSidePanel","kanbanView","kanban","resizer","formSidePanel","FormSide","CurrentVerticalField","CurrentHorizontalField","CurrentOwnerField","_updatingOwnerRowId","_ABFieldConnect","_ABFieldUser","_ABFieldList","fieldByKey","ABFieldUser","onSelectChange","userId","getSelectedId","updateOwner","tags","onListAfterSelect","onAfterStatusChange","updateStatus","onAvatarClick","$kb","_kb","kanbanListTemplate","removeCard","templateAvatar","templateBody","horizontalOptions","verticalOptions","horizontalVals","statusOps","reconstruct","$menuUser","getUserList","needRefresh","eachList","addCard","setFields","verticalGrouping","horizontalGrouping","uiFormatting","vId","_uiList","autoHeight","uiMenu","datatype","onMenuItemClick","defineCypress","subsign","_uiMenu","elems","menuIncluded","$item","redirectPage","toggleParent","showIt","parentElem","viewInfo","PDFJS","fileUploader","uploadList","fullImagePopup","fullImageCarousel","fullImageSelectToggle","fullImageLabel","unselectAll","loadFile","removeFile","displayBig","displaySmall","pageTemplate","pageIds","renderPageImages","_fullImagePopup","setActiveIndex","refreshFullImage","headHeight","offIcon","onIcon","offLabel","onLabel","isSelected","pageNumber","ArrayBuffer","fileReader","fileBuffer","readAsArrayBuffer","toBlob","File","canvasId","getElementById","showPage","fileBlob","_toBlob","$uploader","addFile","_increaseProgressValue","maxProgressStep","_progressSteps","clearDataview","_readFileBuffer","_pdfDoc","getDocument","promise","total_page","numPages","carousel_list","fullImageTemplate","pageTemplateId","pageItemWidth","canvas_dom","getPage","pdf_original_width","getViewport","scale_required","viewport","canvasContext","_isDisplayBig","selectedIds","fullImageTemplateId","$fileUploader","$uploadList","$submit","$selectAll","$unselectAll","$selectToggle","selectedPageIds","newValues","uploadId","_uploadImage","ABFieldCalculate","ABFieldFormula","ABFieldNumber","pivot","uiPivot","_getFields","dataMapped","fieldType","reportManager","fieldText","fieldQueries","MyBackend","reports","waitInitializingDCEvery","updated","reportModels","dcID","reportFields","getReportFields","refs","moduleID","moduleId","moduleData","queryID","queryIndex","pullDataTasks","dcIds","dcData","sid","dcId","dataCol","sourceDc","sourceObj","targetDc","targetObj","sourceLinkField","sf","targetLinkField","tf","sourceData","targetData","tData","sVal","tVal","updateRows","queryVal","filterElem","tempDc","as","mod","_","parsedColumn","originalColumn","reportField","dateStringData","parsedDateStringData","groupedData","groupedResult","agg","rawCol","MyLocal","Local","_currentModuleID","getQueries","currentModuleID","_queries","MyEditor","$tabbar","callEvent","disableOption","Reset","forceReset","AppState","getModule","TrackChanges","MyToolBar","MyEditorCommon","ShowDeleteButton","MyEditorData","MyTable","GetColumnConfig","meta","abField","mid","fullDateFormatStr","GetTableData","buckets","columnIDs","parsedBuckets","bucket","parseRecord","columnFormat","linkedDcs","ref","reportData","reportRow","$pk","rField","fieldStart","fieldEnd","fieldAllDay","fieldCalendar","fieldEventColor","fieldNotes","fieldOriginID","fieldSectionID","fieldUnitID","dcCalendar","fieldTitle","fieldCalendarColor","fieldActive","timelineOptions","start_date","end_date","all_day","recurring","section","origin_id","sections","uiNav","uiNavPopup","calendars","LimitData","sidebar","expandMenu","collapseMenu","popupTabManager","popupTabManagerForm","popupTabManagerSaveButton","baseType","menuItems","abStorage","toggle","addDataCy","multiview","keepViews","onViewChange","prevId","nextId","collapseNode","expandNode","tabUi","tabTemplate","$tab","changeTab","setState","checkCollapseMenu","checkExpandMenu","collapsed","tabViewId","$tabViewId","$viewID","defaultViewIsSet","_uiText","$text","ABViewProperty","toSettings","editForms","pagesHasForm","getIds","onClearOnLoad","_application","openFormPopup","pageClone","popUpComp","savedData","popupTemplate","setDefaultValue","fView","objLink","rawData","formEdit","FilterRuleSettings","buttonAddfilter","filterPanel","globalFilterFormContainer","globalFilterForm","filterMenutoolbar","resetFilterButton","__externalSearchText","rowFilterForm","_handler_rowFilterChanged","triggerCallback","_handler_rowFilterFormChanged","resetFilter","$filterMenutoolbar","queryRules","qr","Rule","filterRuleButton","rowFilterRules","__currentFilter","searchRules","badgeCount","$button","externalText","terms","allTerms","fieldTerms","ABViewPropertyLinkPageComponent","defaultLabel","isDefaultView","ABObjectWorkspaceViewGrid","ABObjectWorkspaceViewKanban","ABObjectWorkspaceViewGantt","hashViews","defaultAttributes","currentViewID","gridAttributes","defaultGrid","importViews","exportViews","viewSettings","setCurrentView","indexToRemove","updateView","viewToUpdate","ABObjectWorkspaceView","ABObjectWorkspaceViewComponent","ABPopupNewDataField","ABFieldDate","ABFieldString","ABFieldLongText","duration","progress","refreshOptions","numberFields","decimalFields","stringFields","PopupNewDataFieldComponent","titleField","startDateField","endDateField","durationField","progressField","notesField","vGroupInput","hGroupInput","ownerInput","initSelect","$option","isRequired","vGroupValue","getHorizontalGroupingField","getVerticalGroupingField","getOwnerField","cleanRules","processCondition","myUnique","queryBuilder","queryBuilderContainer","queryBuilderLayout","showQBButton","conditionFields","QB","fieldTypes","onDone","listRules","showQueryBuilderContainer","ObjectQueryBuilder","listActions","actionDropList","selectedAction","objectQB","currentForm","selectAction","valueDisplay","_generateUI","Action","currentAction","replaceValueDisplay","onDelete","$ValueDisplay","cloneChildren","prevAction","getAction","stashCondition","currAction","hidddatasourceen","for","processUpdateObject","qbFixAfterShow","isReady","convertToNumber","hiddenFilter","isPreProcess","queryObject","conditionRules","queryObjectLoad","webixID","valueDisplayComponent","childSettings","headerDefault","rulesScrollview","when","addRule","getRule","RulesUI","deletedRule","ruleSettings","ABViewRuleList","ABViewRule","RoleUpdateExisting","RoleInsertConnected","RoleUpdateConnected","RoleRemoveConnected","allReady","RoleConfirmMessage","RuleExistPage","RuleParentPage","RuleClosePopup","RuleWebsite","RuleEmail","UpdateConnected","valueDisplayChooser","Component","showQBIfNeeded","queryBuilderDisplay","connObj","connectedObject","connectionField","selectedField","newObjectValues","newRecords","connectedObjectField","qbCondition","ABViewRuleActionFormRecordRuleUpdateConnected","isUpdateValueDisabled","_formData","ABViewRuleActionObjectUpdater","selectedFieldID","fieldDropList","connectedFieldList","cf","connectKey","_uiChooser","selectConnectedField","updateFieldsForm","addDisplay","removePreviousDisplays","cloneAllViews","updateObjectLoad","updateComponent","$updateForm","qbComponent","formRows","fr","rowSettings","modifyCondition","updateIt","done","qbCond","ABViewRuleAction","confirmMessage","ABFieldEmail","toEmailsContainer","toEmails","isEmail","toEmailAdd","fieldTemplate","enterField","refreshUI","emailType","recipients","fromName","fromEmail","toEmailTemplate","emailTypeChange","visibleBatch","toEmailValidate","emailFieldOptions","queryOptions","$toView","toEmailRemove","$emailValue","isAllValid","emailText","existsFieldIds","fnAddOptions","fLink","emailFields","optId","optLabel","focusElem","UIManager","getFocus","setFocus","rec","emailFieldUrl","emailField","emailData","linkFieldId","dvIdAndFieldId","dcQuery","emailAddr","pagesAndTabs","_pageOptions","addPage","pageOrTab","indent","selectedId","curPage","website","ABViewRuleActionObjectUpdaterDefaults","updateObject","stashRules","_uiUpdater","valueDisplayList","removeAddRow","UpdateForm","formGet","addRow","valueDisplayRow","onAdd","delRow","mySettings","FilterComponent","selectDc","selectBy","queryField","buttonAdd","buttonDelete","buttonsToggle","shouldFilter","usedHash","FormView","getUpdateObjectField","fieldField","columnID","$inputView","$componentView","datasources","optionsDataSources","optionsSelectBy","$optionUpdateExsits","selectedDC","$row","populateFilters","dcQueries","$multiview","compNodeView","setValueFn","collectionId","dataView","$valueField","objectToUpdate","isUpdated","clonedDataCollection","fieldWithValue","currRow","updates","objectToUpdateClone","lookup","updateObjectURL","DocUtils","convertPixelsToEmus","pixel","docxtemplater","_createClass","defineProperties","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","extensionRegex","rels","getPrefix","getFileTypeName","getRelsFileName","getRelsFilePath","ImgManager","xmlDocuments","TypeError","_classCallCheck","fileTypeName","mediaPrefix","relsFilePath","relsDoc","createEmptyRelsDoc","relsFileName","mainRels","files","str2xml","xml2str","relationships","relationshipChilds","iterable","reduce","relationship","contentType","extension","contentTypeDoc","defaultTags","newTag","namespaceURI","imageName","realImageName","imagePath","addImageRels","binary","addExtensionRels","maxRid","loadImageRels","getImageXml","rId","getImageXmlCentered","getPptxImageXml","offset","memoize","XMLSerializer","Errors","nullGetter","part","delimiters","mergeObjects","resObj","xmlNode","serializeToString","decodeUtf8","decodeURIComponent","escape","convertSpaces","explanation","encodeUtf8","unescape","errorHandler","charMap","regexStripRegexp","escapeRegExp","charMapRegexes","endChar","startChar","rstart","rend","wordToUtf8","utf8ToWord","concatArrays","arrays","array","spaceRegexp","fromCharCode","throwXmlTagNotFound","XTTemplateError","pregMatchAll","regex","matchArray","exec","sizeOfObject","traits","moduleWrapper","xmldom","wrapper","compiled","modules","fileTypeConfig","FileTypeConfig","xmlFileNames","loadAsync","currentFile","createTemplateClass","templatedFiles","getTemplatedFiles","_this2","baseModules","moduleFunction","optionsTransformer","asText","compile","compileFile","mapper","getRenderedMap","mapped","setTags","usedData","createTemplateClassFromContent","filePath","_this3","xmltOptions","XmlTemplater","textPath","getFullText","XmlMatcher","XTError","stack","XTScopeParserError","XTInternalError","loopModule","spacePreserveModule","rawXmlModule","expandPairTrait","PptXFileTypeConfig","tagsXmlTextArray","tagsXmlLexedArray","tagRawXml","tagTextXml","DocXFileTypeConfig","docx","pptx","inRange","range","updateInTextTag","inTextTag","offsetSort","getTag","throwUnclosedTagException","xtag","assertDelimiterOrdered","delimiterMatches","fullText","inDelimiter","lastDelimiterMatch","delimiterMatch","throwUnopenedTagException","getAllIndexes","arr","Reader","innerContentParts","full","parseDelimiters","ranges","delimiterLength","cutNext","delimiterIndex","partContent","delimitersInOffset","delimiterInOffset","xmlparsed","newArray","xmlparse","xmltags","matches","textMatchArray","othersMatchArray","contentLength","allMatches","totalMatches","tagText","_getTag","tagMatcher","other","func","stringifyJson","cache","getMinFromArrays","minIndex","totalLength","resultArray","arrayIndex","emptyFun","identity","getTraits","postparse","every","mergeSort","getExpandToDefault","throwClosingTagNotMatchOpeningTag","openingtag","closingtag","getOpenCountChange","location","getPairs","countOpen","firstTrait","currentTrait","outer","T","throwUnmatchedLoopException","_ref","_postparse","trait","pairs","expandedPairs","pair","expandTo","currentPairIndex","innerParts","newParsed","inPair","expandedPair","basePart","subparsed","dashInnerRegex","moduleName","placeHolderContent","inverted","traitName","totalValue","scopeManager","loopOver","createSubScopeManager","getInner","postparsed","paragraphParts","throwRawTagShouldBeOnlyTextInParagraph","RawXmlModule","expandToOne","Render","spacePreserve","inChunk","lexed","inPlaceHolder","tailParts","token","moduleParsed","moduleParse","ScopeManager","createBaseScopeManager","moduleRendered","moduleRender","scopePath","loopOverValue","functor","currentValue","num","isValueFalsy","functorIfInverted","rootError","lastTagIsOpenTag","innerLastTag","innerCurrentTag","addTag","expandOne","throwRawTagNotInParagraph","leftParts","rightParts","inner","xmlElements","getListXmlElements","memoized","tagsXmlArray","tagsXmlArrayJoined","charactersAddedCumulative","charactersAdded","replacerUnshift","pn","last","handleRecursiveCase","xmlMatcher","Lexer","Parser","_render","fromJson","setModules","inspect","xmllexed","locator","DOMHandler","cdata","lineNumber","columnNumber","_locator","systemId","_toString","chars","java","appendElement","hander","currentElement","source","sax","XMLReader","domBuilder","defaultNSMap","xmlns","entityMap","lt","gt","amp","quot","apos","setDocumentLocator","errorImpl","isCallback","Function","build","buildErrorHandler","nbsp","startDocument","DOMImplementation","createDocument","documentURI","localName","qName","createElementNS","len","getURI","getQName","createAttributeNS","getLocator","nodeValue","setAttributeNode","endElement","current","startPrefixMapping","uri","endPrefixMapping","processingInstruction","ins","createProcessingInstruction","ignorableWhitespace","ch","characters","charNode","createCDATASection","skippedEntity","endDocument","normalize","comm","createComment","startCDATA","endCDATA","startDTD","publicId","impl","implementation","createDocumentType","dt","warning","fatalError","dest","_extends","Super","pt","ppt","__proto__","NodeType","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","ExceptionCode","ExceptionMessage","HIERARCHY_REQUEST_ERR","INDEX_SIZE_ERR","DOMSTRING_SIZE_ERR","NOT_FOUND_ERR","WRONG_DOCUMENT_ERR","INVALID_CHARACTER_ERR","NO_DATA_ALLOWED_ERR","NO_MODIFICATION_ALLOWED_ERR","INUSE_ATTRIBUTE_ERR","NOT_SUPPORTED_ERR","DOMException","captureStackTrace","NodeList","LiveNodeList","_node","_refresh","_updateLiveList","inc","_inc","ownerDocument","ls","__set__","NamedNodeMap","_findNodeIndex","_addNamedNode","newAttr","oldAttr","ownerElement","_onRemoveAttribute","_nsMap","_onAddAttribute","_removeNamedNode","lastIndex","features","_features","feature","Node","_xmlEncoder","charCodeAt","_visitNode","nextSibling","Document","_onUpdateChild","newChild","cs","childNodes","_removeChild","previous","previousSibling","lastChild","_insertBefore","nextChild","cp","nodeType","newFirst","newLast","pre","Element","Attr","CharacterData","Text","Comment","CDATASection","DocumentType","Notation","Entity","EntityReference","DocumentFragment","ProcessingInstruction","nodeSerializeToString","isHtml","nodeFilter","buf","refNode","documentElement","lookupPrefix","visibleNamespaces","namespace","needNamespaceDefine","isHTML","ns","pubid","sysid","internalSubset","importNode","node2","cloneNode","attrs2","_ownerElement","INVALID_STATE_ERR","SYNTAX_ERR","INVALID_MODIFICATION_ERR","NAMESPACE_ERR","INVALID_ACCESS_ERR","getNamedItem","setNamedItem","setNamedItemNS","getNamedItemNS","removeNamedItem","removeNamedItemNS","hasFeature","versions","qualifiedName","doctype","insertBefore","refChild","replaceChild","oldChild","hasChildNodes","appendData","isSupported","hasAttributes","lookupNamespaceURI","isDefaultNamespace","importedNode","rtv","createDocumentFragment","createAttribute","specified","createEntityReference","pl","hasAttribute","getAttributeNode","removeAttributeNode","_appendSingleChild","setAttributeNodeNS","removeAttributeNS","getAttributeNodeNS","hasAttributeNS","getAttributeNS","setAttributeNS","getElementsByTagNameNS","substringData","insertData","replaceData","deleteData","splitText","newText","newNode","getTextContent","$$length","nameStartChar","nameChar","tagNamePattern","defaultNSMapCopy","entityReplacer","surrogate1","surrogate2","fixedFromCharCode","appendText","xt","m","lineEnd","linePattern","lineStart","parseStack","currentNSMap","closeMap","tagStart","localNSMap","endMatch","parseInstruction","parseDCC","ElementAttributes","parseElementStartPart","closed","fixSelfClosed","locator2","copyLocator","parseHtmlSpecialContent","attrName","setTagName","nsp","nsPrefix","_copy","elStartEnd","elEndStart","lastIndexOf","matchs","reg","lastMatch","endDTD","_set_proto_","thiz","getLocalName","getInnerDocx","getInnerPptx","_ref2","xmlString","ext","cx","cy","imgManagers","imageNumber","relsFiles","imgManager","getNextImageName","sizePixel","getRenderedPart","getRenderedPartPptx","getRenderedPartDocx","cellCX","cellCY","imgW","imgH","expanded","xmlElement","updateFileTypeConfig","zero","byteAt","lastIndexOfSignature","readData","checkOffset","encode","decode","compressedSize","uncompressedSize","crc32","compressionMethod","compressedContent","getContent","getCompressedContent","STORE","magic","compress","uncompress","compressInputType","uncompressInputType","DEFLATE","getTypeOf","checkIndex","setIndex","readInt","readString","transformTo","readDate","base64","createFolders","compression","compressionOptions","unixPermissions","dosPermissions","string2binary","string2Uint8Array","uint8Array2String","string2Blob","arrayBuffer2Blob","checkSupport","MAX_VALUE_16BITS","MAX_VALUE_32BITS","pretty","findCompression","isRegExp","Uint8Array","Uint16Array","Uint32Array","deflateRaw","level","inflateRaw","pako","support","utils","compressions","checkCRC32","optimizedBinaryString","decodeFileName","utf8decode","fileNameStr","decompressed","fileCommentStr","zipComment","isBuffer","Buffer","_data","nodebuffer","asBinary","D","utf8encode","_initialMetadata","asNodeBuffer","asUint8Array","asArrayBuffer","buffer","z","C","E","A","B","fileRecord","LOCAL_FILE_HEADER","dirRecord","CENTRAL_FILE_HEADER","compressedObject","folder","platform","encodeFileName","CENTRAL_DIRECTORY_END","append","finalize","ZIP64_CENTRAL_DIRECTORY_LOCATOR","ZIP64_CENTRAL_DIRECTORY_END","DATA_DESCRIPTOR","arraybuffer","uint8array","Blob","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","getBlob","subarray","applyFromCharCode","byteLength","loadOptions","checkSignature","isSignature","readBlockEndOfCentral","diskNumber","diskWithCentralDirStart","centralDirRecordsOnThisDisk","centralDirRecords","centralDirSize","centralDirOffset","zipCommentLength","readBlockZip64EndOfCentral","zip64EndOfCentralSize","versionMadeBy","versionNeeded","zip64ExtensibleData","readBlockZip64EndOfCentralLocator","diskWithZip64CentralDirStart","relativeOffsetEndOfZip64CentralDir","disksCount","readLocalFiles","localHeaderOffset","readLocalPart","handleUTF8","processAttributes","readCentralDir","zip64","readCentralPart","readEndOfCentral","prepareReader","isEncrypted","bitFlag","useUTF8","prepareCompressedContent","prepareContent","fileNameLength","extraFieldsLength","fileCommentLength","diskNumberStart","internalFileAttributes","externalFileAttributes","readExtraFields","parseZIP64ExtraField","fileComment","extraFields","findExtraFieldUnicodePath","findExtraFieldUnicodeComment","chunkSize","windowBits","memLevel","strategy","gzip","ended","strm","avail_out","deflateInit2","deflateSetHeader","dictionary","string2buf","deflateSetDictionary","_dict_set","input","next_in","avail_in","output","Buf8","next_out","deflate","onEnd","onData","buf2binstring","shrinkBuf","deflateEnd","flattenChunks","Deflate","inflateInit2","Z_OK","inflateGetHeader","Z_FINISH","Z_NO_FLUSH","binstring2buf","inflate","Z_NEED_DICT","inflateSetDictionary","Z_BUF_ERROR","Z_STREAM_END","Z_SYNC_FLUSH","utf8border","buf2string","arraySet","inflateEnd","Inflate","ungzip","Int32Array","setTyped","Buf16","Buf32","Z_PARTIAL_FLUSH","Z_FULL_FLUSH","Z_BLOCK","Z_TREES","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","Z_BINARY","Z_TEXT","Z_UNKNOWN","Z_DEFLATED","I","pending_buf","pending_out","total_out","_tr_flush_block","block_start","strstart","wrap","adler","G","H","total_in","max_chain_length","prev_length","nice_match","w_size","la","w_mask","prev","ka","good_match","lookahead","match_start","window_size","hash_size","insert","ja","ins_h","hash_shift","hash_mask","J","ua","match_length","_tr_tally","max_lazy_match","M","wa","xa","last_lit","va","prev_match","U","match_available","good_length","max_lazy","nice_length","max_chain","pending_buf_size","gzhead","gzindex","$","last_flush","w_bits","hash_bits","dyn_ltree","ha","dyn_dtree","fa","bl_tree","ga","l_desc","d_desc","bl_desc","bl_count","ia","heap","ea","heap_len","heap_max","l_buf","lit_bufsize","d_buf","opt_len","static_len","bi_buf","bi_valid","data_type","Z","na","sa","_tr_init","O","Q","X","K","N","P","R","S","W","Y","aa","ba","da","ma","oa","pa","qa","ra","ta","ya","deflateInit","deflateReset","deflateResetKeep","hcrc","extra","time","os","_tr_align","_tr_stored_block","deflateInfo","xflags","extra_len","dmax","wsize","whave","wnext","hold","bits","lencode","distcode","lenbits","distbits","sane","havedict","flags","check","wbits","ncode","nlen","ndist","have","lens","work","lendyn","distdyn","back","was","ca","inflateReset","inflateReset2","inflateResetKeep","inflateInit","za","Aa","Ba","Ca","inflateInfo","static_tree","extra_bits","extra_base","has_stree","dyn_tree","max_code","stat_desc","webpackContext","webpackContextResolve","__webpack_require__","protoUI","ActiveContent","datafilter","countColumn","summColumn","datetime","popupType","EditAbility","unitlist","$init","formComponents","newD","Formio","createForm","submission","onButton","$getValue","calendarHeader","monthFull","$protoWait","_zoom_logic","_getTitle","_getYearTitle","_getYearRangeTitle","_getContent","_getYearContent","_setContent","_setYear","Qd","Jv","Zv","Xv","thaidate","thaidatetime","_zoom_start_date","eachRow","$count","master"],"sourceRoot":""}